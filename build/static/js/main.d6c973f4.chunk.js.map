{"version":3,"sources":["tonva/index.ts","tonva/ui/index.ts","tonva/uq/controllers/CVEntity.tsx","tonva/ui/nav.tsx","tonva/net/guestApi.ts","tonva/net/index.ts","tonva/uq/controllers/form/viewModel.tsx","tonva/net/appBridge.ts","tonva/ui/page.tsx","tonva/uq/tools/jsonStringify.ts","tonva/uq/tools/tv.tsx","tonva/uq/tools/index.ts","tonva/uid.ts","tonva/net/httpChannelUI.ts","tonva/net/uqApi.ts","tonva/uq/controllers/link/cLink.tsx","tonva/uq/controllers/link/index.ts","tonva/net/wsChannel.ts","tonva/net/host.ts","tonva/ui/image.tsx","tonva/uq/controllers/index.ts","tonva/pageItems.ts","tonva/uq/uqs/entity.ts","tonva/uq/uqs/tuid/idCache.ts","tonva/uq/uqs/tuid/tuidBox.ts","tonva/uq/uqs/tuid/boxId.tsx","tonva/uq/uqs/tuid/tuidDiv.ts","tonva/uq/uqs/tuid/tuid.ts","tonva/uq/uqs/action.ts","tonva/uq/uqs/sheet.ts","tonva/uq/uqs/query.ts","tonva/uq/uqs/book.ts","tonva/uq/uqs/history.ts","tonva/uq/uqs/map.ts","tonva/uq/uqs/pending.ts","tonva/uq/uqs/uq.ts","tonva/uq/uqs/uqApp.ts","tonva/uq/uqs/index.ts","tonva/user.ts","tonva/ui/edit/itemEdit.tsx","tonva-form/index.ts","tonva/uq/controllers/tuid/vTuidMain.tsx","tonva/uq/controllers/tuid/vTuidEdit.tsx","tonva/uq/controllers/tuid/vTuidSelect.tsx","tonva/uq/controllers/tuid/vTuidView.tsx","tonva/uq/controllers/tuid/vTuidInfo.tsx","tonva/uq/controllers/tuid/pageItems.ts","tonva/uq/controllers/tuid/vTuidList.tsx","tonva/uq/controllers/tuid/cTuid.ts","tonva/uq/controllers/tuid/index.tsx","tonva/uq/controllers/form/vBand.tsx","tonva/uq/controllers/form/vSubmit.tsx","tonva/uq/controllers/form/rule.ts","tonva/uq/controllers/form/vField/vField.tsx","tonva/uq/controllers/form/vField/vComputeField.tsx","tonva/uq/controllers/form/vArr.tsx","tonva/uq/controllers/form/vField/vTuidField.tsx","tonva/uq/controllers/form/bandsBuilder.ts","tonva/uq/controllers/form/vField/buildVmField.ts","tonva/uq/controllers/form/vForm.tsx","tonva/uq/controllers/form/index.ts","tonva/net/httpChannel.ts","tonva/ui/res.ts","tonva-form/form/control/control.tsx","tonva-form/form/control/buttonsControl.tsx","tonva-form/form/control/charsControl.tsx","tonva-form/form/control/stringControl.tsx","tonva-form/form/control/numberControl.tsx","tonva-form/form/control/unknownControl.tsx","tonva-form/form/control/pickIdControl.tsx","tonva-form/form/control/pickTuidControl.tsx","tonva-form/form/control/pickControl.tsx","tonva-form/form/control/index.ts","tonva-form/form/control/checkControl.tsx","tonva-form/form/control/radioControl.tsx","tonva-form/form/control/selectControl.tsx","tonva-form/form/control/textAreaControl.tsx","tonva-form/form/rowContainer/index.tsx","tonva/net/apiBase.ts","tonva/ui/pageHeader.tsx","tonva/ui/components/Badge.tsx","tonva/ui/components/LMR.tsx","tonva/ui/components/FA.tsx","tonva/ui/components/Muted.tsx","tonva/ui/components/index.ts","tonva/uq/controllers/query/defaultRow.tsx","tonva/uq/controllers/query/vQueryMain.tsx","tonva/uq/controllers/query/vQuerySelect.tsx","tonva/uq/controllers/query/cQuery.ts","tonva/uq/controllers/query/index.ts","tonva/ui/edit/imageItemEdit.tsx","tonva/entry/userApi.ts","tonva/ui/loading.tsx","tonva/ui/resUploader.tsx","tonva/uq/controllers/CApp.tsx","tonva/uq/controllers/icons.tsx","tonva/uq/controllers/ControllerUq.ts","tonva/uq/centerApi.ts","tonva-form/form/index.ts","tonva-form/form/formView.tsx","tonva/uq/controllers/sheet/vMain.tsx","tonva/uq/controllers/sheet/vNew.tsx","tonva/uq/controllers/sheet/vSheetView.tsx","tonva/uq/controllers/sheet/vEdit.tsx","tonva/uq/controllers/sheet/vSheetAction.tsx","tonva/uq/controllers/sheet/vSchema.tsx","tonva/uq/controllers/sheet/vArchives.tsx","tonva/uq/controllers/sheet/vList.tsx","tonva/uq/controllers/sheet/vArchived.tsx","tonva/uq/controllers/sheet/vSheet.tsx","tonva/uq/controllers/sheet/vSaved.tsx","tonva/uq/controllers/sheet/vSheetProcessing.tsx","tonva/uq/controllers/sheet/cSheet.ts","tonva/uq/controllers/sheet/index.ts","tonva/uq/controllers/book/vBookMain.tsx","tonva/uq/controllers/book/cBook.ts","tonva/uq/controllers/cUq/vUq.tsx","tonva/uq/controllers/cUq/cUq.tsx","tonva/uq/controllers/cUq/index.ts","tonva/uq/controllers/map/vMain.tsx","tonva/uq/controllers/map/inputValues.tsx","tonva/uq/controllers/map/cMap.ts","tonva/uq/controllers/map/index.ts","tonva/uq/controllers/pending/vPendingMain.tsx","tonva/uq/controllers/pending/cPending.ts","tonva/uq/controllers/pending/index.ts","tonva/uq/controllers/action/vActionMain.tsx","tonva/uq/controllers/action/cAction.ts","tonva/uq/controllers/action/index.ts","tonva/uq/controllers/history/vHistoryMain.tsx","tonva/uq/controllers/history/cHistory.ts","tonva/uq/controllers/history/index.ts","tonva/net/netToken.ts","tonva/ui/VM.tsx","tonva/ui/schema/index.ts","tonva/ui/rules/index.ts","tonva/ui/dropDownActions/index.tsx","tonva/ui/easyDate/index.tsx","tonva/ui/media.tsx","tonva/ui/searchBox.tsx","tonva/cacheIds.ts","tonva-form/form/TonvaForm.tsx","tonva-form/multiStep/index.tsx","tonva/ui/form/rules/index.ts","tonva/ui/form/widgets/widget.tsx","tonva/ui/form/widgets/textWidget.tsx","tonva/ui/form/widgets/numberWidget.tsx","tonva/ui/form/widgets/updownWidget.tsx","tonva/ui/form/widgets/dateWidget.tsx","tonva/ui/form/widgets/checkBoxWidget.tsx","tonva/ui/form/widgets/selectWidget.tsx","tonva/ui/form/widgets/radioWidget.tsx","tonva/ui/form/widgets/idWidget.tsx","tonva/ui/form/widgets/unknown.tsx","tonva/ui/form/widgets/buttonWidget.tsx","tonva/ui/form/context.tsx","tonva/ui/form/widgets/arrComponent.tsx","tonva/ui/form/widgets/imageWidget.tsx","tonva/ui/form/widgets/factory.tsx","tonva/ui/form/widgets/textareaWidget.tsx","tonva/ui/form/widgets/passwordWidget.tsx","tonva/ui/form/widgets/rangeWidget.tsx","tonva/ui/form/formRes.ts","tonva/ui/form/form.tsx","tonva/ui/form/field.tsx","tonva/ui/form/index.ts","tonva/ui/list/base.tsx","tonva/ui/list/clickable.tsx","tonva/ui/list/static.tsx","tonva/ui/list/selectable.tsx","tonva/ui/list/index.tsx","tonva/ui/edit/stringItemEdit.tsx","tonva/ui/edit/radioItemEdit.tsx","tonva/ui/edit/selectItemEdit.tsx","tonva/ui/edit/edit.tsx","tonva/ui/edit/index.tsx","tonva/ui/propGrid/row.tsx","tonva/ui/propGrid/propView.tsx","tonva/ui/propGrid/PropGrid.tsx","tonva/ui/propGrid/index.tsx","tonva/ui/tabs/tabs.tsx","tonva/entry/meInfo.tsx","tonva/ui/fetchErrorView.tsx","tonva/local.ts","tonva/img/logo.svg","api/mainApi.ts","api/devApi.ts","store/admins.ts","store/dev.ts","store/cacheIds.ts","store/index.ts","Administors/NewFellow.tsx","Administors/EditAdmin.tsx","Administors/index.tsx","tools/idDates.tsx","tools/span.tsx","tools/unitSpan.tsx","consts.ts","tools/uqSpan.tsx","tools/appSpan.tsx","tools/serverSpan.tsx","tools/stringValueEdit.tsx","tools/idPickPage.tsx","Apps/info.tsx","Apps/new.tsx","Apps/index.tsx","Members/newRole.tsx","Members/roleApps.tsx","Members/memberPage.tsx","Members/membersPage.tsx","Members/rolePage.tsx","Members/index.tsx","Dev/apps/editPage.tsx","Dev/apps/appsPage.tsx","Dev/apps/appUqs.tsx","Dev/apps/appPage.tsx","Dev/apps/uqBindPage.tsx","Dev/apps/index.tsx","Dev/uqs/textSections.ts","Dev/uqs/uqUpload.tsx","createIdPick.tsx","Dev/uqs/newServicePage.tsx","Dev/uqs/servicePage.tsx","Dev/uqs/editPage.tsx","Dev/uqs/uqPage.tsx","Dev/uqs/listPage.tsx","Dev/uqs/uqController.tsx","Dev/row.tsx","Dev/buses.tsx","Dev/servers.tsx","Dev/ObjView.tsx","Users/vApps.tsx","Users/vUsers.tsx","Users/vApp.tsx","Users/vUser.tsx","Users/vAppEditUsers.tsx","Users/vUserEditApps.tsx","Users/VAddUser.tsx","Users/cUsers.tsx","Admin.tsx","App.tsx","registerServiceWorker.ts","index.tsx"],"names":["__webpack_require__","_net__WEBPACK_IMPORTED_MODULE_2__","d","__webpack_exports__","_ui__WEBPACK_IMPORTED_MODULE_3__","o","_uid__WEBPACK_IMPORTED_MODULE_4__","_pageItems__WEBPACK_IMPORTED_MODULE_5__","_cacheIds__WEBPACK_IMPORTED_MODULE_6__","_uq__WEBPACK_IMPORTED_MODULE_8__","_nav__WEBPACK_IMPORTED_MODULE_0__","_page__WEBPACK_IMPORTED_MODULE_2__","_VM__WEBPACK_IMPORTED_MODULE_3__","_schema__WEBPACK_IMPORTED_MODULE_4__","_form__WEBPACK_IMPORTED_MODULE_5__","_edit__WEBPACK_IMPORTED_MODULE_6__","_res__WEBPACK_IMPORTED_MODULE_7__","_image__WEBPACK_IMPORTED_MODULE_10__","_rules__WEBPACK_IMPORTED_MODULE_12__","_list__WEBPACK_IMPORTED_MODULE_13__","_dropDownActions__WEBPACK_IMPORTED_MODULE_14__","_easyDate__WEBPACK_IMPORTED_MODULE_15__","_propGrid__WEBPACK_IMPORTED_MODULE_16__","_components__WEBPACK_IMPORTED_MODULE_17__","_media__WEBPACK_IMPORTED_MODULE_18__","_searchBox__WEBPACK_IMPORTED_MODULE_19__","CEntity","_ControllerUq__WEBPACK_IMPORTED_MODULE_3__","[object Object]","cUq","entity","ui","res","super","Object","setPrototypeOf","this","x","name","typeName","label","icon","_icons__WEBPACK_IMPORTED_MODULE_2__","loadSchema","onSubmit","values","mode","options","buildFormOptions","ret","_form__WEBPACK_IMPORTED_MODULE_1__","setValues","none","submitCaption","arrNewCaption","arrEditCaption","arrTitleNewButton","fields","arrFields","undefined","new","formUI","form","arrs","inputs","buildInputs","buildFieldsInputs","arr","items","arrFieldInputs","field","_tuid","tuid","fieldUI","select","buildSelect","content","buildContent","placeHolder","getTuidPlaceHolder","__awaiter","ownerField","cTuidSelect","param","getValue","autoList","console","log","call","removeCeased","id","idFromItem","useId","queryName","cQuerySelect","VEntity","_ui__WEBPACK_IMPORTED_MODULE_0__","controller","createForm","RegExp","test","navigator","userAgent","logMark","logs","stackKey","NavView","react__WEBPACK_IMPORTED_MODULE_0__","props","waitCount","isHistoryBack","clearError","setState","fetchError","clickCount","onClick","Date","now","firstClick","getTime","nav","reverseTest","onTestClick","testing","push","header","className","toNormal","pop","back","bind","navBack","stack","state","wait","window","addEventListener","set","start","level","length","waitTimeHandler","global","setTimeout","clearTimeout","err","error","unauthorized","showLogin","view","disposer","clear","history","pushState","key","ceased","refresh","item","dispose","p","i","len","backLevel","popAndDispose","find","v","confirmClose","confirm","self","top","postMessage","type","message","elWait","elError","_loading__WEBPACK_IMPORTED_MODULE_10__","_fetchErrorView__WEBPACK_IMPORTED_MODULE_4__","assign","style","lineHeight","_components__WEBPACK_IMPORTED_MODULE_15__","map","index","visibility","Nav","local","_local__WEBPACK_IMPORTED_MODULE_6__","user","resetTest","setTesting","lang","district","_res__WEBPACK_IMPORTED_MODULE_9__","language","culture","guest","g","get","handler","ws","onWsReceiveAny","handlerId","endWsReceive","m1","m2","testMode","normalMode","msg","receive","unitRes","fetch","json","unit","unitName","envUnit","NODE_ENV","PUBLIC_URL","REACT_APP_CENTER_HOST","REACT_APP_UNIT","Number","_net__WEBPACK_IMPORTED_MODULE_7__","getPredefinedUnitName","unitId","unitFromName","settings","navSettings","hash","document","location","pos","_net_appBridge__WEBPACK_IMPORTED_MODULE_5__","hashParam","substring","startWait","url","resHost","centerHost","resUrl","wsHost","setGuest","exHash","appInFrame","parent","_net_wsChannel__WEBPACK_IMPORTED_MODULE_8__","predefinedUnit","loadPredefinedUnit","notLogined","logined","endWait","onLogined","_net_netToken__WEBPACK_IMPORTED_MODULE_3__","token","callback","connect","JSON","stringify","saveLocalUser","showAppView","defaultTop","loginTop","withBack","lv","e","then","loginView","default","logout","logoutClear","cp","ChangePasswordPage","onError","show","replace","topKey","popTo","ceaseTop","regConfirmClose","confirmBox","apiId","sheetType","sheetId","Promise","resolve","reject","sheet","includes","uh","src","open","date","toTimeString","step","__decorate","mobx__WEBPACK_IMPORTED_MODULE_1__","guestApi","uqApi","wsChannel","apiBase","appBridge","host","ViewModel","PureJSONContent","JSONContent","RowContent","mobx_react__WEBPACK_IMPORTED_MODULE_1__","_tools__WEBPACK_IMPORTED_MODULE_2__","vm","uqTokens","logoutUqTokens","appsInFrame","_unit","val","isBridged","setAppInFrame","appHash","parts","split","page","slice","getExHashPos","lastIndexOf","getExHash","appUrl","u","_uid__WEBPACK_IMPORTED_MODULE_2__","evt","data","subWin","source","_wsChannel__WEBPACK_IMPORTED_MODULE_4__","el","getElementById","hidden","hideFrameBack","lodash__WEBPACK_IMPORTED_MODULE_0___default","a","clone","_ui__WEBPACK_IMPORTED_MODULE_1__","subFrameStarted","onReceive","_uqApi__WEBPACK_IMPORTED_MODULE_3__","initSubWin","from","callId","method","body","result","directCall","callCenterApiFromMessage","bca","brideCenterApis","bridgeCenterApiReturn","apiName","db","uqOwner","uqName","uq","onReceiveAppApiMessage","urlTest","action","uqTokenActions","realUrl","_host__WEBPACK_IMPORTED_MODULE_5__","getUrlOrTest","onAppApiReturn","buildAppUq","realUnit","getUnit","uqToken","at","opener","appUq","bridgeCenterApi","scrollTimeGap","ScrollView","bottomTime","topTime","onScroll","onScrollTop","onScrollBottom","target","scrollTop","offsetHeight","scrollHeight","c","direct","children","forEach","child","_$scroll","toString","eachChild","Page","cur","tabs","tabStates","tab","t","lodash__WEBPACK_IMPORTED_MODULE_3___default","isSelected","isMounted","t0","load","footer","right","keepHeader","headerClassName","tabPosition","title","redDot","img","redDotView","cn","classnames__WEBPACK_IMPORTED_MODULE_2___default","onTabClick","pageHeader","_pageHeader__WEBPACK_IMPORTED_MODULE_4__","center","sideBar","invisible","onTouchStart","elFooter","renderTabs","renderSingle","replacer","value","substr","jsonStringify","Tv","index_module","tuidValue","nullUI","react","ttv","divObj","bi","logContent","render","controllers","boxIdContent","tv","uid","ALPHABET","ID_LENGTH","rtn","charAt","Math","floor","random","httpChannelUI_HttpChannelNavUI","channelUIs","channelNoUIs","logoutApis","uqApi_channels","uqLocalEntities","localUqs","ls","localStorage","getItem","parse","uqs","loginedUserId","isNet","un","__loadAccess","saveLocal","lodash_default","cloneDeep","removeItem","accessValue","str","setItem","isMatch","uqApi_UqApi","basePath","access","showWaiting","channels","channelUI","channel","httpChannel","acc","join","loadAccess","checkAccess","names","post","params","owner","pageStart","pageSize","order","$order","ids","put","uqApi_UnitxApi","buildChannel","centerAppApi","uqApi_CenterAppApi","unitxUq","setCenterUrl","centerToken","centerChannel","centerChannelUI","setCenterToken","userId","uqApi_CenterApiBase","path","uqTokenApi","unitParam","nowTick","tick","appUqParams","callCenterapi","appUqs","appOwner","appName","rLs","rAppOwner","rAppName","uqsPure","obj","cachedUqs","cachedId","retId","retUqs","loadAppUqs","checkUqs","Link","cLink_CLink","classnames_default","subAppWindow","setSubAppWindow","win","postWsToTop","WsBase","handlerSeed","anyHandlers","msgHandlers","seed","$type","wsBaseSeed","wsBridge","wsBaseId","WSChannel","that","WebSocket","onopen","ev","onerror","onmessage","wsMessage","onclose","close","event","postWsToSubApp","netThis","send","isDevelopment","hosts","centerhost","reshost","uqhost","unitxhost","uq-build","fetchOptions","headers","Content-Type","tryLocal","getCenterHost","startsWith","endsWith","centerUrlFromHost","centerWsFromHost","getResHost","promises","hostArr","hostValue","findIndex","fetchUrl","debugHostUrl","localCheck","results","all","j","debugHost","getUrlOrDebug","urlDebug","timeout","text","catch","Error","fetchLocalCheck","Image","classnames__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_1___default","n","_nav__WEBPACK_IMPORTED_MODULE_2__","altImage","currentTarget","_CApp__WEBPACK_IMPORTED_MODULE_0__","_form_viewModel__WEBPACK_IMPORTED_MODULE_10__","_formUI__WEBPACK_IMPORTED_MODULE_12__","PageItems","itemObservable","isFirst","loading","beforeLoad","loaded","allLoaded","firstSize","appendPosition","_items","mobx__WEBPACK_IMPORTED_MODULE_0__","array","deep","topDiv","_uid__WEBPACK_IMPORTED_MODULE_1__","bottomDiv","setPageStart","unshift","reset","more","splice","reverse","ln","Entity","typeId","fieldMaps","sys","indexOf","sName","jName","returns","f","schema","loadEntitySchema","setSchema","buildFieldsTuid","buildFieldTuid","buildArrFieldsTuid","fieldName","arrName","entities","getTuid","fn","fieldArr","toLowerCase","an","buildFieldsParams","arrResult","pa","rowResult","getIdFromObj","packRow","packArr","row","r","charCodeAt","escape","boxId","unpackRow","unpackArr","ch0","ch","fLen","to","vals","maxCacheSize","idCache_IdCache","tuidLocal","queue","cache","mobx_module","waitingIds","divName","defer","util","has","cacheTuids","moveToHead","shift","delete","_id","tuidValues","loadIds","cacheIdValues","tuids","unpackTuidIds","cacheValue","cacheTuidFieldValues","loadTuidIds","IdDivCache","div","TuidBox","alert","TuidBoxDiv","boxId_BoxId","valueFromId","boxName","isUndefined","assureBox","BoxDivId","tuidDiv_TuidDiv","idName","idCache","mainFields","cacheFields","assureObj","cacheIds","cacheFieldsInValue","unpackTuidIdsOfFields","tuid_Tuid","isImport","tuid_TuidLocal","divs","tuidDiv","setUIRes","uiDivs","hasDiv","tuidIds","tuidGet","arrValues","$id","toISOString","tuidSave","searchArr","api","tuidSearch","tuidArrGet","tuidArrSave","tuidArrPos","TuidImport","save","search","loadArr","saveArr","posArr","action_Action","pack","sheet_Sheet","states","op","ops","actions","discription","sheetSave","app","flow","sheetAction","brief","unpackSheet","flows","getSheet","getArchive","unpack","sheetArchive","sheetArchives","stateSheets","sheet_PageStateItems","stateSheetCount","s","count","mySheets","pageItems","getStateSheets","query_Query","isPaged","size","list","hasMore","startField","buildParams","unpackReturns","$page","query","table","book_Book","queryApiName","history_History","map_Map","queries","schemaFrom","keys","actionSchema","newAction","querySchema","newQuery","add","submit","del","pending_Pending","fieldDefaultValue","TuidsCache","clearCacheTimer","cacheTimer","uq_Uq","uqApp","uqData","sheets","books","maps","histories","pendings","tuidArr","actionArr","sheetArr","queryArr","bookArr","mapArr","historyArr","pendingArr","tuidsCache","baseUrl","trim","filter","net","init","accesses","buildEntities","loadEntities","buildTuids","buildAccess","entityName","newTuid","fromType","fromObj","book","pending","newBook","newMap","newHistory","newSheet","newPending","buildSheet","build","buildTuidBox","af","UqApp","tonvaAppName","collection","setLocal","tuidImport","setFrom","decodeUserToken","decodeGuestToken","jwt_decode__WEBPACK_IMPORTED_MODULE_0__","jwt_decode__WEBPACK_IMPORTED_MODULE_0___default","ItemEdit","itemSchema","uiItem","isChanged","internalStart","internalEnd","rules","nv","newValue","verifyRule","rule","Array","isArray","_form__WEBPACK_IMPORTED_MODULE_0__","_multiStep__WEBPACK_IMPORTED_MODULE_1__","vTuidMain_VTuidMain","CVEntity","onNew","onList","onSearch","openPage","link","newButton","placeholder","vTuidEdit_VTuidEdit","next","vTuidEdit_awaiter","vForm","closePage","finish","getValues","unique","setError","isCalling","returnCall","openPageElement","editView","vTuidSelect_VTuidSelect","mainView","react_default","createElement","initKey","onSearchMain","renderMainRow","clickMainRow","before","vTuidSelect_awaiter","searchMain","mainRowContent","ceasePage","showDiv","divView","renderDivRow","clickDivRow","divRowContent","showMain","rowContent","viewModel","ownerValue","divItems","getDivItems","vTuidView_VTuidView","vTuidView_awaiter","tools","buildForm","vTuidInfo_VTuidInfo","pageItems_TuidPageItems","vTuidList_VTuidListBase","vTuidList_awaiter","renderRow","clickRow","callOnSelected","rowKey","ownerId","onSelected","VTuidList","cTuid_CTuid","buildPageItems","first","cTuid_CTuidBase","cTuidEditFromName","cTuidInfoFromName","cTuidSelectFromName","VTuidMain","VTuidEdit","openVPage","onEdit","itemChanged","cTuidInfo","cTuid_CTuidInfo","cTuidEdit","CTuidEdit","edit","cTuidList","CTuidList","merge","CTuidMain","cTuid_CTuidSelect","VTuidSelect","VTuidInfo","vBand_VBand","renderContent","addRow","VFieldBand","vField","vBand_VArrBand","vArr","setAddRow","vBand_VSubmitBand","vSubmit","vSubmit_VSubmit","onClickSubmit","isOk","disabled","caption","Rule","RuleRequired","defy","NaN","RuleNum","RuleInt","isNaN","isInteger","RuleMin","min","check","RuleMax","max","vField_VField","fieldRes","buildRules","required","null","checkRules","errors","readonly","FormMode","editable","vField_decorate","vField_VInputControl","renderError","tonva_ui","ref","input","setInputValue","onFocus","onBlur","computeFields","onChange","setValue","inputGroup","suffix","ctrlCN","inputType","readOnly","maxLength","onKeyPress","RedMark","color","position","left","VStringField","KeyCode_Neg","KeyCode_Dot","vField_VNumberControl","charCode","extraChars","onKeyDot","onKeyNeg","preventDefault","_a","vField_VIntField","VDecField","VTextField","VDateTimeField","VDateField","vComputeField_VComputeField","vArr_VArr","ownerForm","onEditRow","rowPage","vArr_awaiter","valueBoxs","onRowChanged","rowValues","$owner","renderItem","showRow","editRow","editSubmitCaption","internalAddRow","newSubmitCaption","button","paddingTop","paddingBottom","arrsRes","arrRes","newSubmit","editSubmit","arrUI","vForm_VForm","buttonStyle","textAlign","paddingLeft","paddingRight","overflow","vTuidField_VTuidField","vTuidField_awaiter","showInfo","idBox","bandsBuilder_BandsBuilder","layout","formItems","bandsOnFly","bandsFromLayout","bands","bandsFromFields","bandFromArr","bandFromField","formItem","rfn","resFromName","buildVField","vFields","vArrs","onFormSubmit","buildFormValues","buildBands","bandColl","bandsBuilder","band","getVFields","getVArr","getVSubmit","rows","initValues","arrList","ctrl","valueFromFieldName","propName","buildFieldValues","buildObservableValues","vForm_decorate","HttpChannel","isCenter","hostUrl","apiToken","showError","_host__WEBPACK_IMPORTED_MODULE_2__","k","buildOptions","innerFetch","buildError","timeOutHandler","encodeURI","ok","statusText","ct","retJson","_ui_nav__WEBPACK_IMPORTED_MODULE_1__","_appBridge__WEBPACK_IMPORTED_MODULE_0__","Headers","append","resOptions","resLang","lodash__WEBPACK_IMPORTED_MODULE_0__","_","l","languages","setResOptions","control_ControlBase","formView","renderControl","hasError","filled","validate","control_Control","face","setProps","element","defaultValue","clearErrors","clearValue","isOK","getValueFromElement","notes","buttonsControl_ButtonsControl","otherClick","onOther","readValues","nothing","btnOther","submitButton","otherButton","TxtRequired","charsControl_CharsControl","parseValue","lodash","classnames","form-control","has-success","is-invalid","is-valid","renderInput","stringControl_StringControl","ErrInvalidNumber","ErrMin","ErrMax","unknownControl_UnknownControl","role","unknownControl_EmptyControl","pickIdControl_PickIdControl","pick","fromPicked","onPicked","itemFromId","initCaption","String","controlContent","component","pickIdControl_decorate","pickTuidControl_PickTuidControl","onIdChanged","onFormValues","pickTuidControl_decorate","pickControl_PickControl","pickControl_awaiter","Content","pickControl_decorate","createControl","group","groupRow","createGroupControl","fieldRow","fieldType","defaultFaces","controls","createFieldControl","help","string","password","number","parseFloat","checkbox","trueValue","falseValue","checked","radiobox","selectedIndex","selectedOptions","pick-id","pick-tuid","textarea","int","dec","bool","bootstrapCreateRow","elementCreateRow","_control__WEBPACK_IMPORTED_MODULE_1__","RowContainer","cc","control","setInitValues","ElementRowContainer","BootStrapRowContainer","refetchApi","ApiBase","getHttpChannel","callFetch","PageHeader","logoutClick","_nav__WEBPACK_IMPORTED_MODULE_1__","showLogout","navChange","hasBack","href","debugLogout","b","nick","openWindow","rightView","Badge_Badge","badge","badgeAlign","badgeVertical","LMR_LMR","cursor","LMR_decorate","FA_FA","spin","fixWidth","border","pull","pulse","rotate","flip","inverse","Muted","DefaultRow","vQueryMain_VQueryMain","resetPage","loadPage","replacePage","pageResult","queryResult","again","renderExtra","rightClose","queryRow","vQuerySelect_VQuerySelect","vQuerySelect_awaiter","selectRow","vQuerySelect_QueryPageItems","cQuery_CQueryBase","cQuery_CQuery","VQueryMain","main","cQuery_CQuerySelect","VQuerySelect","ImageItemEdit","_itemEdit__WEBPACK_IMPORTED_MODULE_7__","overSize","upload","resUploader","resId","_page__WEBPACK_IMPORTED_MODULE_6__","_resUploader__WEBPACK_IMPORTED_MODULE_3__","multiple","maxSize","padding","_image__WEBPACK_IMPORTED_MODULE_4__","_nav__WEBPACK_IMPORTED_MODULE_5__","mobx__WEBPACK_IMPORTED_MODULE_2__","userApi","_net__WEBPACK_IMPORTED_MODULE_0__","_user__WEBPACK_IMPORTED_MODULE_1__","account","verify","prop","Loading","ResUploader","files","fileInput","FormData","file","abortController","AbortController","signal","onFilesChange","CApp","cImportUqs","cUqCollection","onRowClick","selectUnitPage","appUnits","setSettings","getCUq","uqUI","CUq","_cUq__WEBPACK_IMPORTED_MODULE_3__","cUqArr","VAppMain","retErrors","_centerApi__WEBPACK_IMPORTED_MODULE_4__","userAppUnits","showUnsupport","appUnit","_uqs__WEBPACK_IMPORTED_MODULE_5__","uqAppData","promiseInits","promiseChecks","uqFullName","newCUq","addUq","checkEntities","checks","retError","setTuidImportsLocal","clearPrevPages","showMainPage","renderView","userName","uqId","sheetTypeId","getCUqFromId","navSheet","appPage","appContent","entityIcons","react__WEBPACK_IMPORTED_MODULE_0___default","ControllerUq","CenterApi","centerApi","_rule__WEBPACK_IMPORTED_MODULE_0__","_field__WEBPACK_IMPORTED_MODULE_1__","_face__WEBPACK_IMPORTED_MODULE_2__","_TonvaForm__WEBPACK_IMPORTED_MODULE_5__","FormView","tonva__WEBPACK_IMPORTED_MODULE_2__","buildRows","some","every","formRows","createRow","buildRow","buttonsRow","createButtons","_rowContainer__WEBPACK_IMPORTED_MODULE_4__","formRow","formRowCreator","_control__WEBPACK_IMPORTED_MODULE_3__","buttons","vMain_VSheetMain","newClick","schemaClick","archivesClick","sheetStateClick","renderState","getStateLabel","templet","statesCount","isDev","vNew_VSheetNew","vNew_awaiter","valuesWithBox","onSave","leftFlowStyle","width","vSheetView_VSheetView","flowRow","preState","sheetView","removed","sheetData","vEdit_VSheetEdit","vEdit_awaiter","saveSheet","controllers_form","vSheetAction_VSheetAction","actionClick","vSheetAction_awaiter","acted","deleteClick","editClick","editSheet","actionButtons","startButtons","no","stateLabel","getActionLabel","backPage","vSchema_VSheetSchema","schemaStringify","vArchives_VArchives","archiveClick","vArchives_awaiter","processing","archiveRow","getArchives","vList_VSheetList","rowClick","vList_awaiter","pageStateItems","listRow","stateName","vArchived_VArchived","vSheet_VSheet","vSaved_VSheetSaved","restart","vSaved_awaiter","vSheetProcessing_VSheetProcessing","cSheet_CSheet","cSheet_awaiter","showSaved","loadStateSheetCount","createPageStateItems","VSheetMain","onSheet","me","$","sheetActPreState","sheetActState","changeStateCount","curState","delta","stateCount","VSheetNew","sheetNew","VSheetSaved","sheetSaved","VSheetEdit","sheetEdit","VSheetSchema","VArchives","VArchived","VSheetList","VSheetAction","VSheetProcessing","showArchived","showAction","showProcessing","beforeStart","onEvent","getSheetData","vCall","inBrief","getArchived","getStateUI","actionName","sheetTitle","disc","vBookMain_VBookMain","cBook_CBook","VBookMain","vUq_VUq","isSysVisible","linkItem","cLink","lists","tuidLinks","mapLinks","sheetLinks","actionLinks","queryLinks","bookLinks","historyLinks","pendingLinks","Fragment","isVisible","controllers_link","cTuidMain","cMap","cSheet","cAction","cQuery","cBook","cHistory","cPending","lowerPropertyName","cUq_CUq","cApp","controllers_tuid","CTuidSelect","CTuidInfo","CQuery","CQuerySelect","CMap","CAction","CSheet","CBook","CHistory","controllers_history","CPending","getUI","tuidPlaceHolder","en","sheetFromTypeId","startSheet","entityType","cFromName","tUI","cEntity","VUq","vMain_VMapMain","itemRender","ItemRow","remove","valuesView","box","isLeaf","keyIndex","keyUI","keyUIs","keyContent","valuesContent","keyNone","isFrom","addClick","removeClick","inputValues_VInputValues","onValuesSubmit","inputValues_awaiter","cMap_MapItem","cMap_CMap","cMap_awaiter","keysLen","keyFields","keysLast","idx","keyField","kn","searchParam","ki","searchOnKey","arr1","nullable","rowIndex","createItem","getLable","confirmDelete","template","v0","q","retFields","newItem","addItem","VMapMain","tuidBox","callParam","vPendingMain_VPendingMain","cPending_CPending","VPendingMain","vActionMain_VActionMain","resultPage","mainPage","cAction_CAction","VActionMain","vHistoryMain_VHistoryMain","cHistory_CHistory","VHistoryMain","netToken","_uqApi__WEBPACK_IMPORTED_MODULE_0__","_wsChannel__WEBPACK_IMPORTED_MODULE_1__","Controller","_net__WEBPACK_IMPORTED_MODULE_3__","onMessageReceive","onMessage","isLogined","unregisterReceiveHandler","receiveHandlerId","onDispose","vp","registerReceiveHandler","_resolve_$","View","VPage","_schema__WEBPACK_IMPORTED_MODULE_0__","_uiSchema__WEBPACK_IMPORTED_MODULE_1__","mobileRegex","emailRegex","DropdownActions","handleDocumentClick","dropdownOpen","contains","menu","toggle","removeEventListener","isRight","hasIcon","data-toggle","aria-expanded","dropdown-menu","dropdown-menu-right","aria-hidden","EasyDate","renderDate","withTime","nDate","_date","month","year","hm","nowYear","hour","getHours","minute","getMinutes","getDate","getMonth","getFullYear","Media","_ui__WEBPACK_IMPORTED_MODULE_2__","disp","px","py","SearchBox","allowEmptySearch","inputSize","lab","inputClassName","buttonText","CacheIds","maxCount","dict","Map","loadId","_loadIds","_loadId","TonvaForm","_formView__WEBPACK_IMPORTED_MODULE_2__","MultiStep","lodash__WEBPACK_IMPORTED_MODULE_1__","lodash__WEBPACK_IMPORTED_MODULE_1___default","classnames__WEBPACK_IMPORTED_MODULE_2__","_form__WEBPACK_IMPORTED_MODULE_3__","stepViews","topView","onPrev","onNext","stepName","steps","ButtonConten","prefix","btnContent","formProps","setStep","nextStepName","num","pIcon","sIcon","RuleCustom","func","RulePredefined","rules_RuleNum","minMsg","maxMsg","checkMore","integer","widget_Widget","context","fieldProps","contextErrors","onInputChange","changeValue","container","visible","inNode","requiredFlag","FieldContainer","getUiItem","removeErrorWidget","addErrorWidget","isChanging","initData","fromElement","onChanging","onChanged","prev","allowChange","setDataValue","setElementValue","fieldClass","FieldClass","uiLabel","Templet","errorList","tag","textWidget_TextWidget","onKeyDown","internalOnKeyDown","keyCode","onEnter","blur","checkContextRules","renderTemplet","renderErrors","numberWidget_NumberWidget","updownWidget_UpdownWidget","returnValue","isValidKey","dateWidget_DateWidget","checkBoxWidget_CheckBoxWidget","defaultChecked","selectWidget_SelectWidget","option","selectWidget_decorate","radioStyle","height","idWidget_IdWidget","idWidget_awaiter","pickId","clearContextError","required-item","cursor-pointer","idWidget_decorate","Unknown","dataType","uiType","dataTypes","buttonWidget_ButtonWidget","buttonWidget_awaiter","observerRender","widget","widgetType","ButtonClass","context_Context","uiSchema","isRow","widgets","errorWidgets","subContexts","arrRowContexts","itemName","getDisabled","setDisabled","getReadOnly","setReadOnly","getVisible","setVisible","buttonName","onButtonClick","checkFieldRules","rowContext","setContextError","clearWidgetsErrors","checkHasError","clearContextErrors","context_decorate","rowKeySeed","RowContext","parentContext","arrSchema","uiArr","itemSchemas","parentData","FormContext","ContextContainer","ArrComponent","selectable","deletable","restorable","getArrRowContexts","arrLabel","ArrContainer","RowSeperator","formSelectable","formDeletable","formRestorable","arrSelectable","arrDeletable","arrRestorable","ac","rc","rs","sep","typeofTemplet","factory","selectCheck","deleteIcon","$isSelected","$source","isDeleted","$isDeleted","onDelClick","editContainer","deleted","row-selected","Provider","imageWidget_ImageWidget","imageWidget_awaiter","imageItemEdit","imageSrc","end","ui_image","imageWidget_decorate","widgetsFactory","datetime","time","email","updown","image","checkboxes","radio","range","typeWidget","getItemSchema","getTypeWidget","WidgetClass","formRes","zh","form_Form","watch","formData","calcSelectOrDelete","DefaultContainer","DefaultFieldContainer","fieldLabelSize","labelView","fieldCol","DefaultFieldClass","DefaultButtonClass","DefaultRes","ui_res","py-3","Container","formContext","initDataItem","arrItem","arrItems","arrDict","arrItemOperated","formArrVal","beforeShow","contextType","base_ListBase","selectedItems","nextProps","clickable_Clickable","static_Static","selectable_Selectable","itemsArray","compare","_selectedItems","selected","labelId","si","buildItems","anySelected","onSelect","flex","marginBottom","htmlFor","selectable_decorate","list_List","listBase","nextState","nextContext","updateProps","isLoading","staticRow","list_decorate","stringItemEdit_StringItemEdit","edit_itemEdit","preValue","verifyValue","radioItemEdit_RadioItemEdit","selectItemEdit_SelectItemEdit","edit_Edit","defaultSepClassName","defaultRowContainerClassName","divValue","requireFlag","rowContainerClassName","edit_awaiter","stopEdit","onItemChanged","onItemClick","itemEdit","createItemEdit","topBorderClassName","bottomBorderClassName","sepClassName","topBorder","bottomBorder","elItems","PropRow","row_PropBorder","borderTop","row_PropGap","w","backgroundColor","valueAlignStart","valueAlignCenter","valueAlignEnd","row_LabeledPropRow","gridProps","col","labelFixLeft","bk","bg-white","renderLabel","renderProp","align","vAlign","alignValue","renderPropBody","renderPropContent","StringPropRow","NumberPropRow","row_ListPropRow","borderBottom","row_ComponentPropRow","full","propView_PropView","isGap","PropGrid_PropGrid","propView","Tab","_content","contentBuilder","tabs_Tabs","tabClick","selectedTab","tabBack","contentBack","notify","tabName","display","notifyCircle","userSetProp","FetchErrorView","reApi","_net__WEBPACK_IMPORTED_MODULE_1__","errContent","LocalData","Data","module","exports","mainApi","tonva","toUser","fromUnit","fromApp","fellow","isOwner","isAdmin","apps","member","assigned","roles","devApi","uqsText","service","admins_Admins","store","owners","admins","fellows","unitAdmins","ua","fellowId","unitSetAdmin","removeCur","admin","unitAddAdmin","dev_ObjItems","dev","_load","_save","_inc","_del","_dec","dev_decorate","dev_Apps","searchedUqs","saveApp","delApp","counts","searchUq","searchPageSize","allUqs","appBindUq","dev_Uqs","saveUq","delUq","dev_Buses","buses","saveBus","delBus","bus","dev_Servers","servers","saveServer","delServer","server","dev_Services","services","saveService","delService","changeServiceProp","db_type","connection","loadUqServices","SearchItems","dev_Dev","searchApp","searchServer","searchUqdb","cacheIds_CacheUnits","cacheIds_CacheUqs","cacheIds_CacheApps","cacheIds_CacheServers","store_Store","cacheUnits","cacheUqs","cacheApps","cacheServers","memberCount","roleApps","roleMember","roleMembers","memberRoles","unitChangeProp","unitApps","unitMemberCount","uqServer","uqBuilderUrl","appId","unitDeleteApp","inUnit","unitAddApp","unitRoles","unitAddRole","unitRoleChangeProp","unitRoleApps","unitRoleSetApps","unitMembers","unitAssignMember","unitMemberRoles","rId","unitSetMemberRoles","org","store_decorate","store_store","NewFellow_NewFellowPage","onSendInvitation","NewFellow_awaiter","addNew","NewFellow","NewFellow_decorate","EditAdmin_EditAdmin","EditAdmin_awaiter","isRoot","unitAdmin","Fellow","Administors_EditAdmin","EditAdmin_decorate","Administors_AdministorsPage","onNewOwner","newAdmin","onNewAdmin","ownersView","adminsView","onNewFellow","showOwners","showAdmins","Administors","Administors_decorate","idDates_IdDates","date_init","date_update","span","isLink","unitSpan_UnitSpan","unitSpan_UnitInfo","unitSpan_decorate","unitSpan_UnitName","consts_appIcon","REACT_APP_ICON","appItemIcon","REACT_APP_ITEM_ICON","uqSpan_UqSpan","uqSpan_UqInfo","uqSpan_decorate","appSpan_AppSpan","appSpan_AppInfo","public","appSpan_decorate","apis","appSpan_AppRow","serverSpan_ServerSpan","serverSpan_ServerInfo","cloud","ip","serverSpan_decorate","stringValueEdit_StringValueEdit","stringValueEdit_awaiter","errorDiv","info","stringValueEdit_TextValueEdit","onTextAreaChange","idPickPage_IdPickPage","itemClick","idPickPage_awaiter","candidateItems","searchPlaceHolder","idPickPage_decorate","info_Info","renderUqRow","uqAccess","act","info_awaiter","appActed","newInUnit","restoreUnitApp","stopUnitApp","newApp","addUnitApp","uqAccesses","faName","info_decorate","new_PageApps","new_NewApp","new_awaiter","appClick","renderApp","new_decorate","Apps_AppsPage","loadApps","ban","src_Apps","Apps_decorate","newRole_NewRole","newRole_awaiter","roleApps_RoleApps","renderRoleApp","memberPage_MemberPage","renderMemberRole","setRole","memberPage_SetRole","loadRoles","loadMemberRoles","orgValue","roleUser","onAssigned","roleClick","memberPage_decorate","setMemberRoles","selectRole","renderRole","roleSelect","membersPage_MembersPage","loadMembers","MemberRow","setRoleUser","roleId","membersPage_MemberSearch","renderMember","userClick","membersPage_decorate","members","rolePage_RolePage","roleAppClick","rolePage_RoleApps","loadRoleApps","rolePage_EditRole","onMembersClick","membersLeft","membersRight","editRole","addRoleApp","rolePage_decorate","roleChangeProp","isSysRole","onNameChanged","onDiscriptionChanged","setRoleApps","appSelect","midClassName","Members_Members","newRole","allUsersClick","Members_decorate","ServerCaption","editPage_schema","editPage_EditBasePage","editPage_awaiter","moreCandidates","pickServerId","renderServerInput","itemId","editPage_EditPage","editPage_NewPage","appsPage_AppsPage","appList","listRowClick","appRow","spanCaption","appUqs_SearchUqPage","appUqs_awaiter","onUq","getMyUqs","appUqs_decorate","appUqs_AppUqs","removeBind","btnProps","appUqs_Uqs","listHeader","btn","onBind","appPage_AppPage","editItem","appPage_awaiter","deleteItem","deleteApp","menuItems","btnAddUq","uqClick","elAccess","bind_access","uqBindPage_UqBindPage","onCheckChanged","accessChecked","saveUqBind","uqBindPage_awaiter","removeUqBind","btnDelete","checkAccessList","bc","apps_AppController","apps_awaiter","service_count","buildBindUqs","isNew","uaUq","apps_decorate","groupStart","groupEnd","TextSections","sections","stop","addToGroup","addText","mayStart","fastUpload","thoroughlyUpload","uqUpload_UqUpload","upFiles","fileClick","fr","FileReader","onload","uqUpload_UqPage","readAsText","onUpdate","uqUpload_awaiter","update","onUpdateThoroughly","lastModifiedDate","trunc","sz","thoroughly","uqUpload_CompileResult","fileList","fileRender","encType","compiled","fastDeploy","thoroughlyDeploy","uqUpload_UqDeploy","onDeploy","onDeployThoroughly","doubleClick","pane","getParent","topIntoView","bottomIntoView","renderText","line","p0","titleIcon","collaps","prevState","whiteSpace","textSections","texts","seconds","abort","timeHandler","setInterval","scrollIntoView","clearInterval","tagName","parentElement","startAutoScrollToBottom","reader","total","pump","read","done","uintArray","encodedString","fromCharCode","apply","decodeURIComponent","uintToString","byteLength","consume","getReader","endAutoScrollToBottom","onDoubleClick","wordWrap","fontWeight","createIdPick_IdPickPage","newServicePage_ServerCaption","urlRow","urlRowTest","serverRow","newServicePage_awaiter","dbTypeRow","dbRow","connectionRow","newServicePage_NewServicePage","bindId","tonva_form","tonvaForm","servicePage_ServicePage","onUrlChanged","servicePage_awaiter","changeProp","onUrlTestChanged","onDbChanged","onDbTypeChanged","onConnectionChanged","onDeleteClick","servicePage_decorate","editPage_formRows","uqs_editPage_EditBasePage","uqs_editPage_awaiter","uqs_editPage_EditPage","uqs_editPage_NewPage","uqPage_UQPage","uqPage_awaiter","deleteUq","onServiceClick","onUqUpload","onUqDeploy","serviceClick","btnAddService","showNewServicePage","renderService","compile_time","compile","listPage_ListPage","uqList","uqController_UQController","uqController_awaiter","loadUqEntities","uqGetEntities","r0","svc","uqController_decorate","row_Row","vice","buses_Info","buses_SchemaView","buses_decorate","repeated","ObjView_ObjView","ObjView_Info","ObjView_New","ObjView_decorate","saveCur","stepHeader","ObjView_Edit","ex","extraMenuActions","vApps_VApps","appUsers","users","appUsersList","onAppsClick","searchBox","vUsers_VUsers","userApps","userAppsList","searchUser","onUsersClick","vApp_VApp","curApp","curAppUsers","onAppEditUsers","vUser_VUser","curUser","curUserApps","onUserEditApps","vAppEditUsers_VAppEditUsers","appEditUsers","renderUser","editUser","onUserChanged","vAppEditUsers_awaiter","bindAppUser","vUserEditApps_VUserEditApps","userEditApps","editApp","onAppChanged","vUserEditApps_awaiter","bindUserApp","VAddUser_VAddUser","onSearchFocus","divUser","onAddUser","VAddUser_awaiter","userFromKey","addUser","addedPage","onAddApps","onContinueAddUser","VAddUser_decorate","cUsers_UsersController","onAppUsers","cUsers_awaiter","loadAppUsers","onUserApps","loadUserApps","unitOneAppUsers","unitOneUserApps","unitAppEditUsers","unitUserEditApps","unitAddUser","appIcon","userIcon","unitAppUsers","coll","unitUsers","cUsers_decorate","Admin_CAdmin","userAdminUnits","adminUnits","loadUnit","isProduction","loadAdminUnits","Admin_VAdmin","noUnitPage","Admin_awaiter","Admin_AdminPage","rArrow","typeCaptions","1","2","3","appsAction","usersAction","newUsersAction","adminsAction","noneAction","mid","objProps","P","loadCounts","appAction","uqAction","busAction","serverAction","Admin_UnitProps","Admin_decorate","src_App_0","cAdmin","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","react_dom","URL","origin","response","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"uFAAAA,EAAA,IAAAA,EAAA,QAAAC,EAAAD,EAAA,GAAAA,EAAAE,EAAAC,EAAA,+BAAAF,EAAA,IAAAD,EAAAE,EAAAC,EAAA,yBAAAF,EAAA,QAAAG,EAAAJ,EAAA,GAAAA,EAAAK,EAAAD,EAAA,UAAAJ,EAAAE,EAAAC,EAAA,0BAAAC,EAAA,QAAAJ,EAAAK,EAAAD,EAAA,cAAAJ,EAAAE,EAAAC,EAAA,8BAAAC,EAAA,YAAAJ,EAAAK,EAAAD,EAAA,eAAAJ,EAAAE,EAAAC,EAAA,+BAAAC,EAAA,aAAAJ,EAAAK,EAAAD,EAAA,oBAAAJ,EAAAE,EAAAC,EAAA,oCAAAC,EAAA,kBAAAJ,EAAAK,EAAAD,EAAA,aAAAJ,EAAAE,EAAAC,EAAA,6BAAAC,EAAA,WAAAJ,EAAAK,EAAAD,EAAA,SAAAJ,EAAAE,EAAAC,EAAA,yBAAAC,EAAA,OAAAJ,EAAAK,EAAAD,EAAA,OAAAJ,EAAAE,EAAAC,EAAA,uBAAAC,EAAA,KAAAJ,EAAAK,EAAAD,EAAA,SAAAJ,EAAAE,EAAAC,EAAA,yBAAAC,EAAA,OAAAJ,EAAAK,EAAAD,EAAA,UAAAJ,EAAAE,EAAAC,EAAA,0BAAAC,EAAA,QAAAJ,EAAAK,EAAAD,EAAA,QAAAJ,EAAAE,EAAAC,EAAA,wBAAAC,EAAA,MAAAJ,EAAAK,EAAAD,EAAA,SAAAJ,EAAAE,EAAAC,EAAA,yBAAAC,EAAA,OAAAJ,EAAAK,EAAAD,EAAA,UAAAJ,EAAAE,EAAAC,EAAA,0BAAAC,EAAA,QAAAJ,EAAAK,EAAAD,EAAA,UAAAJ,EAAAE,EAAAC,EAAA,0BAAAC,EAAA,QAAAJ,EAAAK,EAAAD,EAAA,YAAAJ,EAAAE,EAAAC,EAAA,4BAAAC,EAAA,UAAAJ,EAAAK,EAAAD,EAAA,SAAAJ,EAAAE,EAAAC,EAAA,yBAAAC,EAAA,OAAAJ,EAAAK,EAAAD,EAAA,aAAAJ,EAAAE,EAAAC,EAAA,6BAAAC,EAAA,WAAAJ,EAAAK,EAAAD,EAAA,cAAAJ,EAAAE,EAAAC,EAAA,8BAAAC,EAAA,YAAAJ,EAAAK,EAAAD,EAAA,UAAAJ,EAAAE,EAAAC,EAAA,0BAAAC,EAAA,QAAAJ,EAAAK,EAAAD,EAAA,QAAAJ,EAAAE,EAAAC,EAAA,wBAAAC,EAAA,MAAAJ,EAAAK,EAAAD,EAAA,QAAAJ,EAAAE,EAAAC,EAAA,wBAAAC,EAAA,UAAAE,EAAAN,EAAA,IAAAA,EAAAE,EAAAC,EAAA,wBAAAG,EAAA,QAAAC,EAAAP,EAAA,IAAAA,EAAAE,EAAAC,EAAA,8BAAAI,EAAA,QAAAC,EAAAR,EAAA,IAAAA,EAAAE,EAAAC,EAAA,6BAAAK,EAAA,IAAAR,EAAA,QAAAS,EAAAT,EAAA,IAAAA,EAAAK,EAAAI,EAAA,UAAAT,EAAAE,EAAAC,EAAA,0BAAAM,EAAA,QAAAT,EAAAK,EAAAI,EAAA,cAAAT,EAAAE,EAAAC,EAAA,8BAAAM,EAAA,YAAAT,EAAAK,EAAAI,EAAA,eAAAT,EAAAE,EAAAC,EAAA,+BAAAM,EAAA,aAAAT,EAAAK,EAAAI,EAAA,oBAAAT,EAAAE,EAAAC,EAAA,oCAAAM,EAAA,kBAAAT,EAAAK,EAAAI,EAAA,aAAAT,EAAAE,EAAAC,EAAA,6BAAAM,EAAA,WAAAT,EAAAK,EAAAI,EAAA,SAAAT,EAAAE,EAAAC,EAAA,yBAAAM,EAAA,OAAAT,EAAAK,EAAAI,EAAA,OAAAT,EAAAE,EAAAC,EAAA,uBAAAM,EAAA,KAAAT,EAAAK,EAAAI,EAAA,SAAAT,EAAAE,EAAAC,EAAA,yBAAAM,EAAA,OAAAT,EAAAK,EAAAI,EAAA,UAAAT,EAAAE,EAAAC,EAAA,0BAAAM,EAAA,QAAAT,EAAAK,EAAAI,EAAA,QAAAT,EAAAE,EAAAC,EAAA,wBAAAM,EAAA,MAAAT,EAAAK,EAAAI,EAAA,SAAAT,EAAAE,EAAAC,EAAA,yBAAAM,EAAA,OAAAT,EAAAK,EAAAI,EAAA,UAAAT,EAAAE,EAAAC,EAAA,0BAAAM,EAAA,QAAAT,EAAAK,EAAAI,EAAA,UAAAT,EAAAE,EAAAC,EAAA,0BAAAM,EAAA,QAAAT,EAAAK,EAAAI,EAAA,YAAAT,EAAAE,EAAAC,EAAA,4BAAAM,EAAA,UAAAT,EAAAK,EAAAI,EAAA,SAAAT,EAAAE,EAAAC,EAAA,yBAAAM,EAAA,OAAAT,EAAAK,EAAAI,EAAA,aAAAT,EAAAE,EAAAC,EAAA,6BAAAM,EAAA,WAAAT,EAAAK,EAAAI,EAAA,cAAAT,EAAAE,EAAAC,EAAA,8BAAAM,EAAA,YAAAT,EAAAK,EAAAI,EAAA,UAAAT,EAAAE,EAAAC,EAAA,0BAAAM,EAAA,QAAAT,EAAAK,EAAAI,EAAA,QAAAT,EAAAE,EAAAC,EAAA,wBAAAM,EAAA,oCCAA,IAAAC,EAAAV,EAAA,GAAAA,EAAAE,EAAAC,EAAA,4BAAAO,EAAA,IAAAV,EAAAE,EAAAC,EAAA,wBAAAO,EAAA,IAAAV,EAAA,QAAAW,EAAAX,EAAA,IAAAA,EAAAE,EAAAC,EAAA,yBAAAQ,EAAA,QAAAC,EAAAZ,EAAA,IAAAA,EAAAE,EAAAC,EAAA,+BAAAS,EAAA,IAAAZ,EAAAE,EAAAC,EAAA,0BAAAS,EAAA,IAAAZ,EAAAE,EAAAC,EAAA,yBAAAS,EAAA,QAAAC,EAAAb,EAAA,IAAAA,EAAAK,EAAAQ,EAAA,UAAAb,EAAAE,EAAAC,EAAA,0BAAAU,EAAA,QAAAb,EAAAK,EAAAQ,EAAA,cAAAb,EAAAE,EAAAC,EAAA,8BAAAU,EAAA,YAAAb,EAAAK,EAAAQ,EAAA,oBAAAb,EAAAE,EAAAC,EAAA,oCAAAU,EAAA,kBAAAb,EAAAK,EAAAQ,EAAA,aAAAb,EAAAE,EAAAC,EAAA,6BAAAU,EAAA,WAAAb,EAAAK,EAAAQ,EAAA,SAAAb,EAAAE,EAAAC,EAAA,yBAAAU,EAAA,OAAAb,EAAAK,EAAAQ,EAAA,OAAAb,EAAAE,EAAAC,EAAA,uBAAAU,EAAA,KAAAb,EAAAK,EAAAQ,EAAA,SAAAb,EAAAE,EAAAC,EAAA,yBAAAU,EAAA,OAAAb,EAAAK,EAAAQ,EAAA,UAAAb,EAAAE,EAAAC,EAAA,0BAAAU,EAAA,QAAAb,EAAAK,EAAAQ,EAAA,QAAAb,EAAAE,EAAAC,EAAA,wBAAAU,EAAA,MAAAb,EAAAK,EAAAQ,EAAA,SAAAb,EAAAE,EAAAC,EAAA,yBAAAU,EAAA,OAAAb,EAAAK,EAAAQ,EAAA,UAAAb,EAAAE,EAAAC,EAAA,0BAAAU,EAAA,QAAAb,EAAAK,EAAAQ,EAAA,UAAAb,EAAAE,EAAAC,EAAA,0BAAAU,EAAA,QAAAb,EAAAK,EAAAQ,EAAA,aAAAb,EAAAE,EAAAC,EAAA,6BAAAU,EAAA,WAAAb,EAAAK,EAAAQ,EAAA,cAAAb,EAAAE,EAAAC,EAAA,8BAAAU,EAAA,YAAAb,EAAAK,EAAAQ,EAAA,eAAAb,EAAAE,EAAAC,EAAA,+BAAAU,EAAA,aAAAb,EAAAK,EAAAQ,EAAA,gBAAAb,EAAAE,EAAAC,EAAA,gCAAAU,EAAA,cAAAb,EAAAK,EAAAQ,EAAA,YAAAb,EAAAE,EAAAC,EAAA,4BAAAU,EAAA,UAAAb,EAAAK,EAAAQ,EAAA,QAAAb,EAAAE,EAAAC,EAAA,wBAAAU,EAAA,UAAAC,EAAAd,EAAA,IAAAA,EAAAE,EAAAC,EAAA,yBAAAW,EAAA,QAAAC,EAAAf,EAAA,IAAAA,EAAAE,EAAAC,EAAA,yBAAAY,EAAA,QAAAC,EAAAhB,EAAA,IAAAA,EAAAE,EAAAC,EAAA,4BAAAa,EAAA,IAAAhB,EAAA,IAAAA,EAAA,QAAAiB,EAAAjB,EAAA,IAAAA,EAAAE,EAAAC,EAAA,0BAAAc,EAAA,IAAAjB,EAAA,QAAAkB,EAAAlB,EAAA,IAAAA,EAAAE,EAAAC,EAAA,+BAAAe,EAAA,IAAAlB,EAAAE,EAAAC,EAAA,gCAAAe,EAAA,QAAAC,EAAAnB,EAAA,IAAAA,EAAAE,EAAAC,EAAA,yBAAAgB,EAAA,QAAAC,EAAApB,EAAA,IAAAA,EAAAE,EAAAC,EAAA,oCAAAiB,EAAA,QAAAC,EAAArB,EAAA,IAAAA,EAAAE,EAAAC,EAAA,6BAAAkB,EAAA,QAAAC,EAAAtB,EAAA,IAAAA,EAAAE,EAAAC,EAAA,6BAAAmB,EAAA,QAAAC,EAAAvB,EAAA,IAAAA,EAAAE,EAAAC,EAAA,0BAAAoB,EAAA,IAAAvB,EAAAE,EAAAC,EAAA,uBAAAoB,EAAA,IAAAvB,EAAAE,EAAAC,EAAA,wBAAAoB,EAAA,IAAAvB,EAAAE,EAAAC,EAAA,0BAAAoB,EAAA,QAAAC,EAAAxB,EAAA,IAAAA,EAAAE,EAAAC,EAAA,0BAAAqB,EAAA,QAAAC,EAAAzB,EAAA,IAAAA,EAAAE,EAAAC,EAAA,8BAAAsB,EAAA,8YCcO,MAAeC,UAAuDC,EAAA,EACzEC,YAAYC,EAAUC,EAAWC,EAAQC,GACrCC,MAAMJ,EAAKG,GACXE,OAAOC,eAAeC,KAAKC,EAAGR,EAAIQ,GAClC,IAAIC,KAACA,EAAIC,SAAEA,GAAYT,EACvBM,KAAKN,OAASA,EACdM,KAAKL,GAAKA,EACVK,KAAKI,MAAQJ,KAAKJ,IAAIQ,OAASF,EAC/BF,KAAKK,KAAOC,EAAA,EAAYH,GAKZX,sDAGZ,aADMQ,KAAKN,OAAOa,cACX,IAGXf,WAAWgB,EAA4BC,EAAaC,GAChD,IAAIC,EAAUX,KAAKY,iBAAiBF,GAChCG,EAAM,IAAIC,EAAA,EAAMH,EAASH,GAE7B,OADAK,EAAIE,UAAUN,GACPI,EAGHrB,iBAAiBkB,GACrB,IACIM,EAAMC,EAAeC,EAAeC,EAAgBC,GADpDC,OAACA,EAAMC,UAAEA,GAAatB,KAAKN,YAEd6B,IAAbvB,KAAKJ,MACLoB,EAAOhB,KAAKJ,IAAU,KACtBqB,EAAgBjB,KAAKJ,IAAY,OACjCsB,EAAgBlB,KAAKJ,IAAY,OACjCuB,EAAiBnB,KAAKJ,IAAa,QACnCwB,EAAoBpB,KAAKJ,IAAuB,wBAEvC2B,IAATP,IACAA,EAAOhB,KAAKP,IAAIG,IAAU,MAAK,aAEb2B,IAAlBN,IACAA,EAAgBjB,KAAKP,IAAIG,IAAY,QAAK,eACxB2B,IAAlBL,IACAA,EAAgBlB,KAAKP,IAAIG,IAAY,QAAK,YACvB2B,IAAnBJ,IACAA,EAAiBnB,KAAKP,IAAIG,IAAa,SAAK,aACtB2B,IAAtBH,IACJA,EAAoBpB,KAAKP,IAAIG,IAAuB,wBACvC2B,IAATb,IAAoBA,EAAOI,EAAA,EAASU,KACxC,IAAIC,EAASzB,KAAKL,GAAG+B,KAcrB,MAbsB,CAClBL,OAAQA,EACRM,KAAML,EACN3B,GAAI8B,EACJ7B,IAAKI,KAAKJ,KAAO,GACjBgC,OAAQ5B,KAAK6B,YAAYJ,GACzBT,KAAMA,EACNC,cAAeA,EACfC,cAAeA,EACfC,eAAgBA,EAChBC,kBAAmBA,EACnBV,KAAMA,GAKNlB,YAAYiC,GAChB,IAAIJ,OAACA,EAAMC,UAAEA,GAAatB,KAAKN,OAC3BmB,EAAkB,GAEtB,GADAb,KAAK8B,kBAAkBjB,EAAKQ,OAAQE,EAAWE,QAC7BF,IAAdD,EACA,IAAK,IAAIS,KAAOT,EAAW,CACvB,IAAIpB,KAACA,EAAImB,OAAEA,GAAUU,EACjBC,EAAQP,GAAUA,EAAOO,MAC7BhC,KAAK8B,kBAAkBjB,EAAKQ,EAAQnB,EAAM8B,GAASA,EAAM9B,IAGjE,OAAOW,EAGHrB,kBAAkBqB,EAAiBQ,EAAgBU,EAAYN,GACnE,QAAYF,IAARQ,EAAmB,CACnB,IAAIE,EAAiBpB,EAAIkB,QACFR,IAAnBU,IACApB,EAAIkB,GAAOE,EAAiB,GAC5BpB,EAAMoB,GAGd,IAAK,IAAIC,KAASb,EAAQ,CACtB,IAAInB,KAACA,EAAIiC,MAAEA,GAASD,EACpB,QAAcX,IAAVY,EAAqB,SACzB,IAAIC,KAACA,GAAQD,EACTE,EAAUZ,GAAUA,EAAOO,OAASP,EAAOO,MAAM9B,GACrDW,EAAIX,GAAQ,CACRoC,OAAQtC,KAAKuC,YAAYL,EAAOH,EAAKM,GACrCG,QAASxC,KAAKyC,aAAaP,EAAOH,GAClCW,YAAa1C,KAAKP,IAAIkD,mBAAmBP,KAK3C5C,YAAY0C,EAAaH,EAAYM,GAC3C,MAAO,CAAOX,EAAYQ,EAAazB,IAA2BmC,EAAA5C,UAAA,qBAC9D,IAAImC,MAACA,GAAUD,GACXE,KAACA,EAAIS,WAAEA,GAAcV,EACrBW,OAAcvB,EACdwB,OAAYxB,OACGA,IAAfsB,IAA0BE,EAAQrB,EAAKsB,SAASH,EAAW3C,OAC3DmC,IAAgC,IAArBA,EAAQY,WACnBC,QAAQC,IAAI,wCACZJ,EAAQ,IAEZ,IAAIlC,QAAYiC,EAAYM,KAAKL,GAEjC,GADAD,EAAYO,oBACA9B,IAARV,EAAmB,OACvB,IAAIyC,EAAKR,EAAYS,WAAW1C,GAEhC,OADAsB,EAAMqB,MAAMF,GACLA,IAIL9D,aAAa0C,EAAaH,IAIpCvC,aAAaiE,GACT,OAAOzD,KAAKP,IAAIiE,aAAaD,IAI9B,MAAeE,UAAiFC,EAAA,MAGnGpE,YAAYqE,GACRhE,MAAMgE,GACN7D,KAAKN,OAASmE,EAAWnE,OACzBM,KAAKL,GAAKkE,EAAWlE,GAGzBS,YAAoB,OAAOJ,KAAK6D,WAAWzD,MAGjCZ,WAAWgB,EAA4BC,EAAaC,GAE1D,OAAOV,KAAK6D,WAAWC,WAAWtD,EAAUC,EAAQC,0zBCzI9C,IAAIqD,OAAO,gFAGrB,KACmBC,KAAKC,UAAUC,WAMzBtG,EAAQ,IACrB,IAAIuG,EACJ,MAAMC,EAAgB,GAStB,IAAIC,EAAW,EAcR,MAAMC,UAAgBC,EAAA,UAMzB/E,YAAYgF,GACR3E,MAAM2E,GAJFxE,KAAAyE,UAAoB,EA4NpBzE,KAAA0E,eAAwB,EA8BhC1E,KAAA2E,WAAa,MACT3E,KAAK4E,SAAS,CAACC,gBAAYtD,MAEvBvB,KAAA8E,WAAa,EAEb9E,KAAA+E,QAAU,MACd,GAAI/E,KAAK8E,YAAc,EAKnB,OAJIE,KAAKC,MAAQjF,KAAKkF,WAAWC,UAAY,KACzCC,EAAIC,mBAERrF,KAAK8E,WAAa,GAGE,IAApB9E,KAAK8E,WACL9E,KAAKkF,WAAa,IAAIF,KAEjBA,KAAKC,MAAQjF,KAAKkF,WAAWC,WAAa,MAC/CnF,KAAK8E,WAAa,EAClB9E,KAAKkF,WAAa,IAAIF,QAExBhF,KAAK8E,aAEH9E,KAAAsF,YAAc,MAClBF,EAAIG,SAAU,EACdH,EAAII,KAAKjB,EAAA,cAAChG,EAAA,EAAI,CAACkH,QAAQ,GACnBlB,EAAA,qBAAKmB,UAAU,2DACXnB,EAAA,mFACAA,EAAA,qBAAKmB,UAAU,QACXnB,EAAA,wBAAQmB,UAAU,iBAAiBX,QAASK,EAAIO,UAAQ,4BACxDpB,EAAA,wBAAQmB,UAAU,4BAA4BX,QAAS,KAAKK,EAAIG,SAAQ,EAAKvF,KAAK4F,QAAM,kCAlRpG5F,KAAK6F,KAAO7F,KAAK6F,KAAKC,KAAK9F,MAC3BA,KAAK+F,QAAU/F,KAAK+F,QAAQD,KAAK9F,MACjCA,KAAKgG,MAAQ,GACbhG,KAAKiG,MAAQ,CACTD,MAAOhG,KAAKgG,MACZE,KAAM,EACNrB,gBAAYtD,GAGd/B,6DACF2G,OAAOC,iBAAiB,WAAYpG,KAAK+F,WAGvCvG,4DAEF4F,EAAIiB,IAAIrG,YAQEoF,EAAIkB,UAIlBC,YACI,OAAOvG,KAAKgG,MAAMQ,OAGtBhH,YAC2B,IAAnBQ,KAAKyE,YACLzE,KAAK4E,SAAS,CAACsB,KAAM,IACrBlG,KAAKyG,gBAAkBC,EAAOC,WAC1B,KACI3G,KAAKyG,qBAAkBlF,EACvBvB,KAAK4E,SAAS,CAACsB,KAAM,KAEzB,QAENlG,KAAKyE,UACPzE,KAAK4E,SAAS,CACVC,gBAAYtD,IAIpB/B,UACImH,WAAW,OAKL3G,KAAKyE,UACgB,IAAnBzE,KAAKyE,iBACwBlD,IAAzBvB,KAAKyG,kBACLG,aAAa5G,KAAKyG,iBAClBzG,KAAKyG,qBAAkBlF,GAE3BvB,KAAK4E,SAAS,CAACsB,KAAM,MAE3B,KAGA1G,QAAQqF,2CAEV,IAAIgC,EAAMhC,EAAWiC,WACTvF,IAARsF,IAA0C,IAArBA,EAAIE,aAI7B/G,KAAK4E,SAAS,CACVC,WAAYA,UAJNO,EAAI4B,eAAUzF,KAQ5B/B,KAAKyH,EAAmBC,GAEpB,OADAlH,KAAKmH,QACEnH,KAAKwF,KAAKyB,EAAMC,GAG3B1H,KAAKyH,EAAmBC,GACpBlH,KAAKqD,eACDrD,KAAKgG,MAAMQ,OAAS,GACpBL,OAAOiB,QAAQC,UAAU,UAAW,KAAM,MAE9C,IAAIC,EAAMjD,IASV,OARArE,KAAKgG,MAAMR,KAAK,CACZ8B,IAAKA,EACLL,KAAMA,EACNM,QAAQ,EACRL,SAAUA,IAEdlH,KAAKwH,UAEEF,EAGX9H,QAAQyH,EAAmBC,GACvB,IAAIO,OAAiBlG,EACjByE,EAAQhG,KAAKgG,MACbA,EAAMQ,OAAS,IACfiB,EAAOzB,EAAMJ,OAGjB,IAAI0B,EAAMjD,IAUV,OATArE,KAAKgG,MAAMR,KAAK,CACZ8B,IAAKA,EACLL,KAAMA,EACNM,QAAQ,EACRL,SAAUA,SAED3F,IAATkG,GAAoBzH,KAAK0H,QAAQD,EAAKP,UAC1ClH,KAAKwH,UAEEF,EAGX9H,SAAS+G,EAAe,GACpB,IAAIoB,EAAI3H,KAAKgG,MAAMQ,OAAS,EAC5B,IAAK,IAAIoB,EAAE,EAAGA,EAAErB,KACRoB,EAAI,GADWC,IAAKD,IAAK,CAElB3H,KAAKgG,MAAM2B,GACjBJ,QAAS,GAItB/H,IAAI+G,EAAe,GACf,IAAIP,EAAQhG,KAAKgG,MACb6B,EAAM7B,EAAMQ,OAEhB,GAAID,GAAS,GAAKsB,GAAO,EAAG,OACxBA,EAAMtB,IAAOA,EAAQsB,GACzB,IAAIC,EAAY,EAChB,IAAK,IAAIF,EAAI,EAAGA,EAAIrB,GACK,IAAjBP,EAAMQ,OADaoB,IAGvB5H,KAAK+H,kBACHD,EAEFA,GAAaD,GAAKC,IACtB9H,KAAKwH,UACDxH,KAAK0E,cAQblF,MAAM8H,GACF,QAAY/F,IAAR+F,QACwC/F,IAAxCvB,KAAKgG,MAAMgC,KAAKC,GAAKA,EAAEX,MAAQA,GACnC,KAAOtH,KAAKgG,MAAMQ,OAAQ,GAAG,CACzB,IAAIqB,EAAM7H,KAAKgG,MAAMQ,OAErB,GADUxG,KAAKgG,MAAM6B,EAAI,GACjBP,MAAQA,EAAK,MACrBtH,KAAK4F,OAIbpG,SACI,IAAIqI,EAAM7H,KAAKgG,MAAMQ,OACrB,GAAY,IAARqB,EACJ,OAAO7H,KAAKgG,MAAM6B,EAAI,GAAGP,IAG7B9H,eACI,OAAS,CACL,IAAImI,EAAE3H,KAAKgG,MAAMQ,OAAO,EACxB,GAAImB,EAAI,EAAG,MAEX,IAAmB,IADT3H,KAAKgG,MAAM2B,GACbJ,OAAkB,MAC1B,IAAIE,EAAOzH,KAAKgG,MAAMJ,OAClBsB,SAACA,GAAYO,EACjBzH,KAAK0H,QAAQR,GAEjBlH,KAAKwH,UAGDhI,gBACJQ,KAAKqD,eACL,IAAIoE,EAAOzH,KAAKgG,MAAMJ,MACtB,QAAarE,IAATkG,EAAoB,OACxB,IAAIP,SAACA,GAAYO,EAGjB,OAFAzH,KAAK0H,QAAQR,GACblH,KAAKqD,eACEoE,EAGHjI,QAAQ0H,GACZ,QAAiB3F,IAAb2F,EAAwB,YAEf3F,IADFvB,KAAKgG,MAAMgC,KAAKC,GAAKA,EAAEf,WAAaA,IACvBA,IAG5B1H,QACcQ,KAAKgG,MAAMQ,OACrB,KAAOxG,KAAKgG,MAAMQ,OAAS,GAAGxG,KAAK+H,gBASvCvI,gBAAgB0I,GACZ,IAAIlC,EAAQhG,KAAKgG,MACb6B,EAAM7B,EAAMQ,OACJ,IAARqB,IACM7B,EAAM6B,EAAI,GAChBK,aAAeA,GAIvB1I,UACI4F,EAAIjC,IAAI,mCAAqCnD,KAAKgG,MAAMQ,QACxDxG,KAAK0E,eAAgB,EACrB1E,KAAK6F,MAAK,GACV7F,KAAK0E,eAAgB,EAGnBlF,KAAK2I,GAAkB,2CACzB,IAAInC,EAAQhG,KAAKgG,MACb6B,EAAM7B,EAAMQ,OAChB,GAAY,IAARqB,EAAW,OACf,GAAY,IAARA,EAIA,YAHIO,MAAQjC,OAAOkC,KACflC,OAAOkC,IAAIC,YAAY,CAACC,KAAK,WAAY,MAIjD,IAAIF,EAAMrC,EAAM6B,EAAI,IACN,IAAVM,GAAkBE,EAAIH,cACS,WAArBG,EAAIH,iBAAuBlI,KAAK4F,MAG1C5F,KAAK4F,QAIbpG,WAAWgJ,GACP,OAAOrC,OAAOgC,QAAQK,GAoC1BhJ,SACI,MAAM0G,KAACA,EAAIrB,WAAEA,GAAc7E,KAAKiG,MAChC,IAAID,EAAQhG,KAAKiG,MAAMD,MACnBqC,EAAMrC,EAAMQ,OAAS,EACrBiC,EAAS,KAAMC,EAAU,KAC7B,OAAQxC,GACJ,KAAK,EACDuC,EAASlE,EAAA,oBAAImB,UAAU,qBAEvB,MACJ,KAAK,EACD+C,EAASlE,EAAA,oBAAImB,UAAU,oBACnBnB,EAAA,cAACoE,EAAA,EAAO,OAMhB9D,IACA6D,EAAUnE,EAAA,cAACqE,EAAA,EAAc9I,OAAA+I,OAAA,CAAClE,WAAY3E,KAAK2E,YAAgBE,KAC/D,IAAIb,GAAqB,IAAdoB,EAAIG,SACXhB,EAAA,sBAAMmB,UAAU,mCAAmCoD,MAAO,CAACC,WAAW,GAClEhE,QAAS/E,KAAKsF,aACdf,EAAA,cAACyE,EAAA,EAAE,CAACtD,UAAU,eAAexF,KAAK,iBAE1C,OACAqE,EAAA,oBAAImB,UAAU,KAAKX,QAAS/E,KAAK+E,SAEzBiB,EAAMiD,IAAI,CAACxB,EAAMyB,KACb,IAAI5B,IAACA,EAAGL,KAAEA,GAAQQ,EAClB,OAAOlD,EAAA,oBAAI+C,IAAKA,EAAKwB,MAAOI,EAAMb,EAAK,CAACc,WAAY,eAAU5H,GACzD0F,KAIZwB,EACAC,EACA1E,GAKDxE,UAEJQ,KAAK4E,SAAS,CAACoB,MAAOhG,KAAKgG,SAS5B,MAAMoD,EAYT5J,cARQQ,KAAAqJ,MAAmB,IAAIC,EAAA,EAEnBtJ,KAAAuJ,UAAsBhI,EA2C1BvB,KAAAwJ,UAAY,MAChBxJ,KAAKyJ,YAAYzJ,KAAKuF,SAEtBvF,KAAKsG,UAETtG,KAAA2F,SAAW,MACP3F,KAAKyJ,YAAW,GAChBzJ,KAAKsG,UA3CL,IAAIoD,KAACA,EAAIC,SAAEA,GAAYC,EAAA,EACvB5J,KAAK6J,SAAWH,EAChB1J,KAAK8J,QAAUH,EACf3J,KAAKuF,SAAU,EAGnBwE,YACI,IAAIA,EAAQ/J,KAAKqJ,MAAMU,MACvB,QAAcxI,IAAVwI,EAAqB,OAAO,EAChC,IAAIC,EAAID,EAAME,MACd,YAAU1I,IAANyI,EAAwB,EACrBA,EAAED,MAGbvK,IAAI4F,GAEApF,KAAKoF,IAAMA,EAGf5F,uBAAuB0K,GACnB,QAAgB3I,IAAZvB,KAAKmK,GACT,OAAOnK,KAAKmK,GAAGC,eAAeF,GAGlC1K,yBAAyB6K,QACL9I,IAAZvB,KAAKmK,SACS5I,IAAd8I,GACJrK,KAAKmK,GAAGG,aAAaD,GAKjB7K,WAAW+F,GACfvF,KAAKuF,QAAUA,EACfvF,KAAKqJ,MAAM9D,QAAQc,IAAId,GAW3B/F,cACI,IAAI+K,EAAWC,GACM,IAAjBxK,KAAKuF,SACLgF,EAAKnB,EAAIqB,SACTD,EAAKpB,EAAIsB,aAGTH,EAAKnB,EAAIsB,WACTF,EAAKpB,EAAIqB,UAGbzK,KAAKwF,KAAKjB,EAAA,cAAChG,EAAA,EAAI,CAACsH,KAAK,QAAQJ,QAAQ,GACjClB,EAAA,qBAAKmB,UAAU,2DACXnB,EAAA,yBACIA,EAAA,gCAAKgG,mCAASC,yBACdjG,EAAA,mBAAGmB,UAAU,kHAAmCnB,EAAA,cAACyE,EAAA,EAAE,CAACtD,UAAU,eAAexF,KAAK,kBAEtFqE,EAAA,qBAAKmB,UAAU,QACXnB,EAAA,wBAAQmB,UAAU,iBAAiBX,QAAS/E,KAAKwJ,WAAS,gBAC1DjF,EAAA,wBAAQmB,UAAU,4BAA4BX,QAAS,IAAI/E,KAAK4F,OAAK,oBAM/EpG,UAAUmL,gDACIpJ,IAAZvB,KAAKmK,WACHnK,KAAKmK,GAAGS,QAAQD,MAGZnL,gEACV,IACI,IAAIqL,QAAgBC,MAAM,YAAa,IAGvC,aADgBD,EAAQE,QACbC,KAEf,MAAOnE,GAEH,YADA7G,KAAKqJ,MAAM2B,KAAK7D,WAKV3H,6DACV,IAIIyL,EAJAC,EAAUpL,OAAA,CAAAqL,SAAA,aAAAC,WAAA,IAAAC,sBAAA,8BAAYC,eAC1B,QAAgB/J,IAAZ2J,EACA,OAAOK,OAAOL,GAGlB,IAAIF,EAAOhL,KAAKqJ,MAAM2B,KAAKf,MAC3B,QAAa1I,IAATyJ,EAAoB,CACpB,IAAsB,IAAlBQ,EAAA,EAAwB,OAAOR,EAAK1H,GAExC,QAAiB/B,KADjB0J,QAAiBjL,KAAKyL,yBACM,OAC5B,GAAIT,EAAK9K,OAAS+K,EAAU,OAAOD,EAAK1H,QAIxC,QAAiB/B,KADjB0J,QAAiBjL,KAAKyL,yBACM,OAEhC,IAAIC,QAAeF,EAAA,EAASG,aAAaV,GAIzC,YAHe1J,IAAXmK,GACA1L,KAAKqJ,MAAM2B,KAAK3E,IAAI,CAAC/C,GAAIoI,EAAQxL,KAAM+K,IAEpCS,IAGXlM,YAAYoM,GACR5L,KAAK6L,YAAcD,EAKjBpM,gDACF,IACIQ,KAAKuF,QAAUvF,KAAKqJ,MAAM9D,QAAQ0E,YAC5BuB,EAAA,EAAKlF,MAAMtG,KAAKuF,SACtB,IAAIuG,EAAOC,SAASC,SAASF,KAC7B,QAAavK,IAATuK,GAAsBA,EAAKtF,OAAS,EAAG,CACvC,IAAIyF,EAAMnM,OAAAoM,EAAA,EAAApM,GACNmM,EAAM,IAAGA,OAAM1K,GACnBvB,KAAKmM,UAAYL,EAAKM,UAAU,EAAGH,GAEvC7G,EAAI+B,QACJnH,KAAKqM,YACL,IAAIC,IAACA,EAAGnC,GAAEA,EAAEoC,QAAEA,GAAWf,EAAA,EACzBxL,KAAKwM,WAAaF,EAClBtM,KAAKyM,OAAS,UAAYF,EAAU,QACpCvM,KAAK0M,OAASvC,EACdrK,OAAA0L,EAAA,EAAA1L,CAAawM,GAEb,IAAIvC,EAAc/J,KAAKqJ,MAAMU,MAAME,WACrB1I,IAAVwI,IACAA,QAAcyB,EAAA,EAASzB,SAE3B3E,EAAIuH,SAAS5C,GAEb,IAAI6C,EAAS9M,OAAAoM,EAAA,EAAApM,GACT+M,EAAa/M,OAAAoM,EAAA,EAAApM,CAAc8M,GAC/B,QAAerL,IAAXqL,GAAwBzG,SAAWA,OAAO2G,aAEvBvL,IAAfsL,EASA,OARA7M,KAAKmK,GAAK4C,EAAA,EACV7J,QAAQC,IAAI,wCAERiF,OAASjC,OAAO2G,QAChB3G,OAAO2G,OAAOxE,YAAY,CAACC,KAAK,oBAAqBuD,KAAMe,EAAWf,MAAO,MAQzF,IAAIkB,QAAuBhN,KAAKiN,qBAChCJ,EAAWG,eAAiBA,EAE5B,IAAIzD,EAAavJ,KAAKqJ,MAAME,KAAKU,MACjC,QAAa1I,IAATgI,EAAoB,CACpB,IAAI2D,WAACA,GAAclN,KAAKoF,IAAIZ,MAO5B,iBANmBjD,IAAf2L,QACMA,UAGA9H,EAAI4B,eAAUzF,UAKtB6D,EAAI+H,QAAQ5D,GAEtB,MAAO1C,YAGH7G,KAAKoN,aAIP5N,sDACF,IAAI6N,UAACA,GAAarN,KAAKoF,IAAIZ,WACTjD,IAAd8L,GAIJjI,EAAI+B,cACEkG,IACNnK,QAAQC,IAAI,2BALRiC,EAAII,KAAKjB,EAAA,6DAQjB/E,SAASuK,GACL/J,KAAKqJ,MAAMU,MAAM1D,IAAI0D,GACrBuD,EAAA,EAASjH,IAAI,EAAG0D,EAAMwD,OAG1B/N,gBACIQ,KAAKqJ,MAAME,KAAKlD,IAAIrG,KAAKuJ,MAGvB/J,QAAQ+J,EAAYiE,2CACtB1N,OAAA0L,EAAA,EAAA1L,IACmBE,KAAKmK,GAAK,IAAIqB,EAAA,EAAUxL,KAAK0M,OAAQnD,EAAKgE,QAC1DE,UAEHvK,QAAQC,IAAI,cAAeuK,KAAKC,UAAUpE,IAC1CvJ,KAAKuJ,KAAOA,EACZvJ,KAAK4N,gBACLN,EAAA,EAASjH,IAAIkD,EAAKjG,GAAIiG,EAAKgE,YACVhM,IAAbiM,EACAA,EAASjE,SAGHvJ,KAAK6N,gBAInBrO,SAASsO,GACL,OAAQ9N,KAAK6L,aAAe7L,KAAK6L,YAAYkC,UAAaD,EAGxDtO,UAAUgO,EAAuCQ,2CACnD,IAAIC,QAAWrQ,EAAAsQ,EAAA,GAAAC,KAAAvQ,EAAAkI,KAAA,WACXsI,EAAY7J,EAAA,cAAC0J,EAAGI,QAAO,CACvBL,SAAUA,EACVR,SAAUA,KACG,IAAbQ,IACAhO,KAAKoF,IAAI+B,QACTnH,KAAK4F,OAET5F,KAAKoF,IAAII,KAAK4I,KAGZ5O,WAAWgO,2CACbpI,EAAII,KAAKjB,EAAA,cAAChG,EAAA,EAAI,CAACkH,OAAO,2BAAOI,KAAK,SAC9BtB,EAAA,qBAAKmB,UAAU,2DACXnB,EAAA,iNACAA,EAAA,qBAAKmB,UAAU,QACXnB,EAAA,wBAAQmB,UAAU,iBAAiBX,QAAS,IAAI/E,KAAKsO,OAAOd,IAAS,sBAM/EhO,OAAOgO,2CACThC,EAAA,EAAWR,UAAOzJ,EAClBvB,KAAKqJ,MAAMkF,cACXvO,KAAKuJ,UAAOhI,EACZzB,OAAA0L,EAAA,EAAA1L,GACA,IAAIiK,EAAQ/J,KAAKqJ,MAAMU,MAAME,MAC7BnK,OAAA0L,EAAA,EAAA1L,CAAe,EAAGiK,GAASA,EAAMwD,OACjCvN,KAAKmK,QAAK5I,OASOA,IAAbiM,QACMpI,EAAIkB,cAEJkH,MAGRhO,yDACF,IAAIgP,QAAW5Q,EAAAsQ,EAAA,GAAAC,KAAAvQ,EAAAkI,KAAA,WACfV,EAAII,KAAKjB,EAAA,cAACiK,EAAGC,mBAAkB,SAGnClI,YACI,OAAOvG,KAAKoF,IAAImB,MAEpB/G,YACIQ,KAAKoF,IAAIiH,YAEb7M,UACIQ,KAAKoF,IAAIgI,UAEP5N,QAAQsH,iDACJ9G,KAAKoF,IAAIsJ,QAAQ5H,KAE3BtH,KAAMyH,EAAmBC,GACrBlH,KAAKoF,IAAIuJ,KAAK1H,EAAMC,GAExB1H,KAAKyH,EAAmBC,GACpBlH,KAAKoF,IAAII,KAAKyB,EAAMC,GAExB1H,QAAQyH,EAAmBC,GACvBlH,KAAKoF,IAAIwJ,QAAQ3H,EAAMC,GAE3B1H,IAAI+G,EAAe,GACfvG,KAAKoF,IAAIQ,IAAIW,GAEjB/G,SACI,OAAOQ,KAAKoF,IAAIyJ,SAEpBrP,MAAM8H,GACFtH,KAAKoF,IAAI0J,MAAMxH,GAEnB9H,QACIQ,KAAKoF,IAAI+B,QAEb3H,UACIQ,KAAKoF,IAAIW,UAEbvG,SAAS+G,GACLvG,KAAKoF,IAAI2J,SAASxI,GAEtB/G,eACIQ,KAAKoF,IAAI/B,eAEP7D,KAAK2I,GAAkB,iDACnBnI,KAAKoF,IAAIS,KAAKsC,KAExB3I,gBAAgB0I,GACZlI,KAAKoF,IAAI4J,gBAAgB9G,GAE7B1I,WAAWgJ,GACP,OAAOxI,KAAKoF,IAAI6J,WAAWzG,GAEzBhJ,SAAS8M,EAAaZ,EAAgBwD,EAAeC,EAAmBC,2CAC1E,OAAO,IAAIC,QAAc,CAACC,EAASC,KAC/B,IAAIC,GAA0D,IAAlDxP,KAAKwM,WAAWiD,SAAS,qBAA+B,cAAc,QAC9EC,OAAiBnO,IAAZ6N,EACDtP,OAAAoM,EAAA,EAAApM,CAAOwM,EAAKZ,GACZ5L,OAAAoM,EAAA,EAAApM,CAAOwM,EAAKZ,EAAQ8D,EAAO,CAACN,EAAOC,EAAWC,IACtDlM,QAAQC,IAAI,eAAgBuK,KAAKC,UAAU+B,IAC3CtK,EAAII,KAAKjB,EAAA,yBAASmB,UAAU,iBACxBnB,EAAA,sBAAMjB,GAAIoM,EAAG5D,KAAM/G,QAAS,IAAI/E,KAAK6F,QACjCtB,EAAA,mBAAGmB,UAAU,sBAEjBnB,EAAA,wBAAQoL,IAAKD,EAAGpD,OAEpB,KACIgD,UAKZ9P,UAAU8M,GAENnG,OAAOyJ,KAAKtD,GAGhBlI,WAAY,OAAOA,EACnB5E,IAAImL,GACAvG,EAAKoB,KAAKmF,GAEdnL,UACI,IAAIqQ,EAAO,IAAI7K,KACfb,EAAU0L,EAAK1K,UACff,EAAKoB,KAAK,aAAeqK,EAAKC,gBAElCtQ,QAAQuQ,GACJ3L,EAAKoB,KAAKuK,EAAO,OAAQ,IAAI/K,MAAOG,UAAYhB,KAzUrCiF,EAAAqB,SAAW,eACXrB,EAAAsB,WAAa,eAtChBsF,EAAA,CAAXC,EAAA,8BACWD,EAAA,CAAXC,EAAA,iCAgXE,MAAM7K,EAAW,IAAIgE,4VC5uBrB,MAAM8G,EAAW,IAnBjB,cAAuBC,EAAA,EACpB3Q,gDAEF,IAAIqB,QAAYb,KAAKiK,IAAI,GAAI,IAC7B,cAAepJ,GACX,QAAS,OACT,IAAK,SAAU,OAAOf,OAAAyJ,EAAA,EAAAzJ,CAAiBe,GACvC,IAAK,SAED,OADYf,OAAAyJ,EAAA,EAAAzJ,CAAiBe,EAAI0M,UAKvC/N,aAAayL,2CACf,IAAIpK,QAAYb,KAAKiK,IAAIgB,GACzB,OAAOpK,GAAOA,EAAImK,SAIW,iBAAazJ,6BCtBlD3D,EAAAE,EAAAC,EAAA,sBAAAqS,EAAA,IAAAxS,EAAAE,EAAAC,EAAA,sBAAAqS,EAAA,IAAAxS,EAAAE,EAAAC,EAAA,sBAAAsS,EAAA,IAAAzS,EAAAE,EAAAC,EAAA,sBAAAmS,IAAAtS,EAAAE,EAAAC,EAAA,sBAAAoS,EAAA,IAAAvS,EAAAE,EAAAC,EAAA,sBAAAoS,EAAA,IAAAvS,EAAAE,EAAAC,EAAA,sBAAAoS,EAAA,IAAAvS,EAAAE,EAAAC,EAAA,sBAAAoS,EAAA,IAAAvS,EAAAE,EAAAC,EAAA,sBAAAoS,EAAA,IAAAvS,EAAAE,EAAAC,EAAA,sBAAAoS,EAAA,IAAAvS,EAAAE,EAAAC,EAAA,sBAAAoS,EAAA,IAAAvS,EAAAE,EAAAC,EAAA,sBAAAoS,EAAA,IAAAvS,EAAAE,EAAAC,EAAA,sBAAAuS,EAAA,IAAA1S,EAAAE,EAAAC,EAAA,sBAAAuS,EAAA,IAAA1S,EAAAE,EAAAC,EAAA,sBAAAwS,EAAA,IAAA3S,EAAAE,EAAAC,EAAA,sBAAAwS,EAAA,kCCAA3S,EAAAE,EAAAC,EAAA,sBAAAyS,IAAA5S,EAAAE,EAAAC,EAAA,sBAAA0S,IAAA7S,EAAAE,EAAAC,EAAA,sBAAA2S,IAAA9S,EAAAE,EAAAC,EAAA,sBAAA4S,IAAA,IAAApM,EAAA3G,EAAA,GAAAgT,EAAAhT,EAAA,GAAAiT,EAAAjT,EAAA,IAQO,MAAe4S,EAElBhR,OAAOkG,GACH,YAAkBnE,IAAdvB,KAAKiH,KAA2B1C,EAAA,4EAC7BA,EAAA,cAAoBvE,KAAKiH,KAAM,CAAC6J,GAAI9Q,KAAM0F,UAAUA,KAI5D,MAAM+K,EAAkB,CAAChQ,EAAYR,IACjCsE,EAAA,cAAAA,EAAA,0BAAYzE,OAAA+Q,EAAA,EAAA/Q,CAAcW,IAExBiQ,EAAc5Q,OAAA8Q,EAAA,EAAA9Q,CAAS2Q,GACvBE,EACRlQ,GAAe8D,EAAA,qBAAKmB,UAAU,aAAa5F,OAAA+Q,EAAA,EAAA/Q,CAAcW,kqBCR9D,MAAMsQ,EAAuC,GACtC,SAASC,IACZ,IAAK,IAAIpJ,KAAKmJ,EAAUA,EAASnJ,QAAKrG,EAU1C,MAAM0P,EAAwC,GAWvC,IAAIpE,EAAwB,IATnC,MAGI7B,WAAoB,OAAOhL,KAAKkR,MAChClG,SAASmG,GAAcnR,KAAKkR,MAAMC,IAa/B,SAASC,IACZ,OAAOhJ,OAASjC,OAAO2G,OAoGpB,SAASuE,EAAcC,GAC1B,GAAIA,EAAS,CACT,IAAIC,EAAQD,EAAQE,MAAM,KACtB3J,EAAM0J,EAAM/K,OAChB,GAAIqB,EAAM,EAAG,CACT,IAAIF,EAAI,EACRkF,EAAWf,KAAOyF,EAAM5J,KACpBE,EAAI,IAAGgF,EAAW7B,KAAOO,OAAOgG,EAAM5J,OACtCE,EAAI,IAAGgF,EAAW4E,KAAOF,EAAM5J,MAC/BE,EAAI,IAAGgF,EAAW9J,MAAQwO,EAAMG,MAAM/J,OAGlD,OAAOkF,EAGJ,SAAS8E,IACZ,IAAI7F,EAAOC,SAASC,SAASF,KAC7B,QAAavK,IAATuK,GAAsBA,EAAKtF,OAAS,EAAG,CACvC,IAAIyF,EAAMH,EAAK8F,YAAY,QAE3B,OADI3F,EAAM,IAAGA,EAAMH,EAAK8F,YAAY,cAC7B3F,EAEX,OAAQ,EAGL,SAAS4F,IACZ,IAAI5F,EAAM0F,IACV,KAAI1F,EAAM,GACV,OAAOF,SAASC,SAASF,KAAKM,UAAUH,GAGrC,SAAS6F,EAAOxF,EAAaZ,EAAgB+F,EAAc1O,GAC9D,IAAIgP,EACJ,OAAS,CAGL,GAFAA,EAAIjS,OAAAkS,EAAA,EAAAlS,QAEMyB,IADF0P,EAAYc,GACC,CACjBd,EAAYc,GAAK,CAACjG,KAAKiG,EAAG/G,KAAKU,GAC/B,OAIR,GADAY,GAAO,OAASyF,EAAI,IAAMrG,OACbnK,IAATkQ,IACAnF,GAAO,IAAMmF,OACClQ,IAAVwB,GACA,IAAK,IAAI6E,EAAE,EAAGA,EAAE7E,EAAMyD,OAAQoB,IAC1B0E,GAAO,IAAMvJ,EAAM6E,GAI/B,MAAO,CAAC0E,IAAKA,EAAKR,KAAMiG,GAnJ5B5L,OAAOC,iBAAiB,UAAW,SAAe6L,2CAC9C,IAAIzJ,EAAUyJ,EAAIC,KAClB,OAAQ1J,EAAQD,MACZ,IAAK,qBAuCb,SAAyB0J,GACrB,IAAIzJ,EAAUyJ,EAAIC,KAClB,IAAIC,EAASF,EAAIG,OACjBtS,OAAAuS,EAAA,EAAAvS,CAAgBqS,GAMpB,SAAuBrG,GACnB,IAAIwG,EAAKvG,SAASwG,eAAezG,QACtBvK,IAAP+Q,IAAkBA,EAAGE,QAAS,GAPlCC,CAAcjK,EAAQsD,MACtB,IAAInB,EAAU+H,EAAAC,EAAEC,MAAMC,EAAA,IAAItJ,MAC1BoB,EAAIpC,KAAO,eACX4J,EAAO7J,YAAYqC,EAAK,KA7ChBmI,CAAgBb,GAChB,MACJ,IAAK,WAEKY,EAAA,IAAIE,UAAUvK,EAAQmC,KAC5B,MACJ,IAAK,qBA6Cb,SAA0BnC,2CACtBtF,QAAQC,IAAI,2BAA4BqF,GACxC,IAAIe,EAAOsJ,EAAA,IAAItJ,KAAOf,EACtB1I,OAAAkT,EAAA,EAAAlT,CAAeyJ,EAAKjG,GAAIiG,EAAKgE,aACvBsF,EAAA,IAAIhF,gBAhDIoF,CAAWzK,GACjB,MACJ,IAAK,UACDqK,EAAA,IAAI9M,UACJ,MACJ,IAAK,mBA0Qb,SAAwCmN,EAAa1K,2CACjD,IAAI2K,OAACA,EAAM7G,IAAEA,EAAG8G,OAAEA,EAAMC,KAAEA,GAAQ7K,EAC9B8K,QAAeN,EAAA,EAAcO,WAAWjH,EAAK8G,EAAQC,GACzDH,EAAK5K,YAAY,CACbC,KAAM,oBACN4K,OAAQA,EACRG,OAAQA,GACT,OAhRWE,CAAyBvB,EAAIG,OAAkB5J,GACrD,MACJ,IAAK,qBAiRb,SAA+BA,GAC3B,IAAI2K,OAACA,EAAMG,OAAEA,GAAU9K,EACnBiL,EAAMC,EAAgBP,GAC1B,QAAY5R,IAARkS,EAAmB,OACvBC,EAAgBP,QAAU5R,EAC1BkS,EAAInE,QAAQgE,GArRJK,CAAsBnL,GACtB,MACJ,IAAK,UACD,IAAI3H,QAsChB,SAAsCiL,EAAc8H,2CAChD,IAAI/G,EAAaoE,EAAYnF,GAC7B,QAAmBvK,IAAfsL,EAA0B,MAAO,CAAC3M,KAAK0T,EAASC,QAAGtS,EAAW+K,SAAI/K,EAAWgM,WAAMhM,GAEvF,IAAIyJ,KAACA,EAAIgC,eAAEA,GAAkBH,GAC7B7B,EAAOA,GAAQgC,IAEX9J,QAAQ4D,MAAM,iDAAkDkE,GAEpE,IAAIuG,EAAQqC,EAAQpC,MAAM,KACtBzO,EAAQ,CAACiI,KAAMA,EAAM8I,QAASvC,EAAM,GAAIwC,OAAQxC,EAAM,IAC1DrO,QAAQC,IAAI,uCAAwCJ,GACpD,IAAIlC,QAAYmS,EAAA,EAAWgB,GAAGjR,IAC1B8Q,GAACA,EAAEvH,IAAEA,EAAGiB,MAAEA,GAAS1M,EACvB,MAAO,CAACX,KAAM0T,EAASC,GAAGA,EAAIvH,IAAKA,EAAKiB,MAAOA,KApDvB0G,CAAuBzL,EAAQsD,KAAMtD,EAAQoL,SAC5D3B,EAAIG,OAAkB9J,YAAY,CAC/BC,KAAM,iBACNqL,QAASpL,EAAQoL,QACjBC,GAAIhT,EAAIgT,GACRvH,IAAKzL,EAAIyL,IACTiB,MAAO1M,EAAI0M,OAAe,KAC9B,MACJ,IAAK,iBACDrK,QAAQC,IAAI,qBAAsBuK,KAAKC,UAAUnF,IACjDtF,QAAQC,IAAI,wCA6CxB,SAA8BqF,2CAC1B,IAAIoL,QAACA,EAAOC,GAAEA,EAAEvH,IAAEA,EAAG4H,QAAEA,EAAO3G,MAAEA,GAAS/E,EACrC2L,EAASC,EAAeR,GAC5B,QAAerS,IAAX4S,EACA,KAAM,uBAGV,IAAIE,EAAUC,EAAA,EAAKC,aAAaV,EAAIvH,EAAK4H,GACzChR,QAAQC,IAAI,oCAAsCmJ,EAAM,UAAY+H,GAGpEF,EAAO7E,QAAQ,CACXpP,KAAM0T,EACNC,GAAIA,EACJvH,IAAK+H,EACL9G,MAAOA,MA3DGiH,CAAehM,GACrB,MACJ,QACIxI,KAAKkD,QAAQC,IAAI,cAAeuK,KAAKC,UAAUnF,SA8H3D,MAAM4L,EAA8C,GAC7C,SAAeK,EAAWT,EAAWF,EAAgBC,2CACxD,IAAK3C,IAAa,CACd,IAAIpG,EAhBZ,WACI,IAAIA,KAACA,EAAIgC,eAAEA,GAAkBH,EACzB6H,EAAW1J,GAAQgC,EACvB,QAAiBzL,IAAbmT,EACA,KAAM,iDAEV,OAAOA,EAUQC,GACPC,QAAgB5B,EAAA,EAAWgB,GAAG,CAAChJ,KAAKA,EAAM8I,QAAQA,EAASC,OAAOA,SAChDxS,IAAlBqT,EAAQrH,QAAqBqH,EAAQrH,MAAQyF,EAAA,GACjD,IAAIa,GAACA,EAAEvH,IAAEA,EAAG4H,QAAEA,GAAWU,EACrBP,EAAUC,EAAA,EAAKC,aAAaV,EAAIvH,EAAK4H,GAIzC,OAHAhR,QAAQC,IAAI,cAAekR,GAC3BO,EAAQtI,IAAM+H,EACdtD,EAASiD,GAAMY,EACRA,EAIX,GAFA1R,QAAQC,IAAI,8BAA+B0J,QAEhCtL,IADF6S,EAAeJ,GAExB,OAAO,IAAI3E,QAAc,CAACC,EAASC,KAC/B6E,EAAeJ,GAAM,CACjB1E,QAAgBuF,GAAUjS,EAAA5C,UAAA,qBACtB,IAAI6T,GAACA,EAAEvH,IAAEA,EAAGiB,MAAEA,SAAesH,EAC7B9D,EAASiD,GAAM,CACX9T,KAAM8T,EACNH,GAAIA,EACJvH,IAAKA,EACLiB,MAAOA,GAEX6G,EAAeJ,QAAMzS,EACrB2B,QAAQC,IAAI,6BAA8B0J,GAC1CyC,MAEJC,OAAQA,IAEXpJ,OAAO2O,QAAU3O,OAAO2G,QAAQxE,YAAY,CACzCC,KAAM,UACNqL,QAASI,EACTlI,KAAMe,EAAWf,MAClB,SAIJ,SAASiJ,EAAMf,GAElB,OADUjD,EACCiD,GAkDf,MAAMN,EAAiD,GAChD,SAAesB,EAAgB1I,EAAY8G,EAAeC,2CAE7D,OADAnQ,QAAQC,IAAI,qCAAsCmJ,EAAK8G,SAC1C,IAAI/D,QAAa,CAAOC,EAASC,IAAU3M,EAAA5C,UAAA,qBACpD,IAAImT,EACJ,OAAS,CAGL,GAFAA,EAASrT,OAAAkS,EAAA,EAAAlS,QAEGyB,IADFmS,EAAgBP,GACH,CACnBO,EAAgBP,GAAU,CACtB7P,GAAI6P,EACJ7D,QAASA,EACTC,OAAQA,GAEZ,QAGPpJ,OAAO2O,QAAU3O,OAAO2G,QAAQxE,YAAY,CACzCC,KAAM,aACN4K,OAAQA,EACR7G,IAAKA,EACL8G,OAAQA,EACRC,KAAMA,GACP,wYCvTX,MAAM4B,EAAgB,IACtB,MAAMC,UAAmB3Q,EAAA,UAAzB/E,kCACYQ,KAAAmV,WAAoB,EACpBnV,KAAAoV,QAAiB,EAEjBpV,KAAAqV,SAAW,CAAOnH,GAAKtL,EAAA5C,UAAA,qBAC3B,IAAIqV,SAACA,EAAQC,YAAEA,EAAWC,eAAEA,GAAkBvV,KAAKwE,MAC/C6Q,GAAUrV,KAAKwE,MAAM6Q,SAASnH,GAClC,IAAIoE,EAAKpE,EAAEsH,OACX,GAAIlD,EAAGmD,UAAY,SAEKlU,IAAhB+T,EAA2B,CAC3B,IAAIF,GAAU,IAAIpQ,MAAOG,UACrBiQ,EAAQpV,KAAKoV,QAAUH,IACvBjV,KAAKoV,QAAUA,EACfE,KAIZ,GAAIhD,EAAGmD,UAAYnD,EAAGoD,aAAepD,EAAGqD,aAAe,SAE5BpU,IAAnBgU,EAA8B,CAC9B,IAAIJ,GAAa,IAAInQ,MAAOG,UACxBgQ,EAAanV,KAAKmV,WAAaF,IAC/BjV,KAAKmV,WAAaA,EAClBI,SAKR/V,UAAUoW,EAAOC,GACrB,IAAIrR,MAAEA,GAAUoR,EAChB,QAAcrU,IAAViD,EACA,OACJ,IAAIsR,SAAEA,GAAatR,OACFjD,IAAbuU,GAEJvR,EAAA,SAAewR,QAAQD,EAAU,CAACE,EAAO9M,KACrC,IAAI+M,SAACA,GAAYD,EACbC,GAAUA,EAASJ,GACvB3S,QAAQC,IAAI6S,EAAME,YAClBlW,KAAKmW,UAAUH,EAAOH,KAG9BrW,SACI,OACI+E,EAAA,sBAAMmB,UAAW1F,KAAKwE,MAAMkB,UAAW2P,SAAUrV,KAAKqV,UACjDrV,KAAKwE,MAAMsR,WAoC5B,IAAaM,EAAb,cAA0B7R,EAAA,UAEtB/E,YAAYgF,GACR3E,MAAM2E,GACN,IAGI6R,GAHAC,KAACA,GAAQ9R,EACb,QAAajD,IAAT+U,GAAsC,IAAhBA,EAAK9P,OAAc,OAC7CxG,KAAKsW,KAAOA,EAEZ,IAAIC,EAAkB,GACtB,IAAK,IAAIC,KAAOF,EAAM,CAClB,IAAIG,EAAaC,EAAA/D,EAAEC,MAAM4D,QACbjV,IAAR8U,IACqB,IAAjBI,EAAEE,WACFN,EAAMI,EAKVA,EAAEE,YAAa,EAEnBF,EAAEG,WAAY,EACdL,EAAU/Q,KAAKiR,GAEnBzW,KAAKiG,MAAQ,CACToQ,IAAKA,EACLC,KAAMC,GAIR/W,4DACF,QAAkB+B,IAAdvB,KAAKsW,KAAoB,OAC7B,IAAIO,EAAK7W,KAAKiG,MAAMqQ,KAAKtO,KAAKC,IAAsB,IAAjBA,EAAE0O,iBAC1BpV,IAAPsV,QAEWtV,KADXsV,EAAK7W,KAAKiG,MAAMqQ,KAAK,YAGnBO,EAAGC,cAAcD,EAAGC,UAIhBtX,WAAWgX,2CACrB,IAAuB,IAAnBA,EAAIG,WAAqB,OAC7B,IAAIN,EACAC,EAAOtW,KAAKiG,MAAMqQ,KACtB,IAAK,IAAIG,KAAKH,EACNG,IAAMD,GACNC,EAAEE,YAAa,EACfN,EAAMI,GAGNA,EAAEE,YAAa,EAEvB,IAAsB,IAAlBN,EAAIO,UAAoB,CACxB,IAAIE,KAACA,GAAQT,OACA9U,IAATuV,UACMA,KAGd9W,KAAK4E,SAAS,CACVyR,IAAKA,EACLC,KAAMA,MAIN9W,aAAayS,IAGbzS,WAAWuX,GACf,MAAMtR,OAACA,EAAMI,KAAEA,EAAImR,MAAEA,EAAKC,WAAEA,EAAUC,gBAAEA,EAAeC,YAAEA,GAAenX,KAAKwE,MAC7E,IAAI6R,EAAMrW,KAAKiG,MAAMoQ,IACjBC,EAAO/R,EAAA,yBACHvE,KAAKiG,MAAMqQ,KAAKrN,IAAI,CAACuN,EAAKtN,KACtB,MAAM7I,KAACA,EAAIsW,WAAEA,EAAUS,MAAEA,EAAKC,OAAEA,GAAUb,EAC1C,IAAIc,EAASC,EAAgBC,EAE7B,QADajW,IAATlB,IAAoBiX,EAAM/S,EAAA,qBAAKoL,IAAKtP,UACzBkB,IAAX8V,EAAsB,CACtB,IAAIpP,EAAIoP,EAAOpN,MACXhC,EAAI,GACJuP,EAAKC,IAAW,WAChBF,EAAahT,EAAA,yBAER0D,EAAI,IACTuP,EAAKC,IAAW,UAAW,OAC3BF,EAAahT,EAAA,uBAAI0D,IAGzB,OAAO1D,EAAA,qBAAK+C,IAAK4B,EACbxD,UAAY+R,IAAW,SAAU,CAACpB,IAAKM,IACvC5R,QAAS,IAAM/E,KAAK0X,WAAWlB,IAC9Bc,EAAI/S,EAAA,qBAAKmB,UAAW8R,GAAKJ,EAAOG,OAI7CI,GAAwB,IAAXlS,GACblB,EAAA,cAACqT,EAAA,EAAU,CACP/R,KAAMA,EACNgS,QAAqB,IAAbZ,EAAoBxR,EAAqB4Q,IAAQA,EAAI5Q,QAAU4Q,EAAIe,OAC3EJ,MAAOA,EACPtR,UAAWwR,IAGnB,OAAO3S,EAAA,yBAASmB,UAAU,kBACrBiS,EACc,QAAdR,GAAuBb,EACxB/R,EAAA,yBAASmB,UAAU,qBAClB1F,KAAKwE,MAAMsT,QAER9X,KAAKiG,MAAMqQ,KAAKrN,IAAI,CAACuN,EAAKtN,KACtB,IAAIyN,WAACA,EAAUC,UAAEA,EAASpU,QAAEA,GAAWgU,EACvC,IAAmB,IAAfG,IAAqC,IAAdC,EAEvB,OADAJ,EAAII,WAAY,EACTrS,EAAA,cAAC2Q,EAAU,CAAC5N,IAAK4B,EACpBxD,UAAW+R,IAAW,CAACM,WAAwB,IAAbpB,IAClCtB,SAAUmB,EAAInB,SACdC,YAAakB,EAAIlB,YACjBC,eAAgBiB,EAAIjB,gBAEA,oBAAX/S,EAAwBA,IAA8BA,MAMhE,QAAd2U,GAAuBb,EACvBS,GAGDvX,aAAauX,GACjB,MAAMlR,KAACA,EAAIJ,OAAEA,EAAMuR,MAAEA,EAAK3B,SAAEA,EAAQC,YAAEA,EAAWC,eAAEA,EAAcO,SAAEA,EAAQoB,gBAAEA,GAAmBlX,KAAKwE,MACrG,IAAImT,GAAwB,IAAXlS,GAAoBlB,EAAA,cAACqT,EAAA,EAAU,CAC5C/R,KAAMA,EACNgS,OAAQpS,EACRuR,MAAOA,EACP1I,OAAQtO,KAAKwE,MAAM8J,OACnB5I,UAAWwR,IAEf,OACI3S,EAAA,yBAASmB,UAAU,iBAAiBsS,aAAchY,KAAKgY,cAClDL,EACDpT,EAAA,yBAASmB,UAAU,qBACd1F,KAAKwE,MAAMsT,QACZvT,EAAA,cAAC2Q,EAAU,CACPG,SAAUA,EACVC,YAAaA,EACbC,eAAgBA,GAEfO,IAGRiB,GAKbvX,SACI,MAAMuX,OAACA,GAAU/W,KAAKwE,MACtB,IAAIyT,OAAsB1W,IAAXwV,GAAwBxS,EAAA,4BAASwS,GAChD,YAAkBxV,IAAdvB,KAAKsW,KACEtW,KAAKkY,WAAWD,GAEhBjY,KAAKmY,aAAaF,KAhKxB7B,uUAAIpG,CAAA,CADhBY,EAAA,GACYwF,iCClGb,SAASgC,EAAS9Q,EAAY+Q,GAE1B,OADY/Q,EAAIgR,OAAO,EAAG,IAEtB,QAAS,OAAOD,EAChB,IAAK,IACL,IAAK,IAAK,QAIX,SAASE,EAAcF,GAC1B,OAAO3K,KAAKC,UAAU0K,EAAOD,EAAU,+BCkD3C,MAAMI,EAAK1Y,OAAA2Y,EAAA,EAAA3Y,CAAS,EAAE4Y,YAAW/Y,KAAIM,IAAG0Y,aACpC,QAAkBpX,IAAdmX,EACA,YAAenX,IAAXoX,EAA6BC,EAAA,cAAAA,EAAA,6BAC1BD,IAEX,GAAkB,OAAdD,EACA,YAAenX,IAAXoX,EAA6BC,EAAA,cAAAA,EAAA,wBAC1BD,IAEX,IAAIE,SAAaH,EACjB,OAAQG,GACJ,QACI,QAAWtX,IAAP5B,EACA,OAAOiZ,EAAA,cAAAA,EAAA,cAAGC,MAAMH,GACf,CACD,IAAI7X,EAAMlB,EAAG+Y,EAAWzY,GACxB,YAAYsB,IAARV,EAA0BA,EACvB+X,EAAA,cAAAA,EAAA,cAAGF,GAElB,IAAK,SACD,IAAII,EAlEhB,SAAsBC,EAAkBpZ,EAAcM,GAClD,IAAI+Y,EACJ,cAAcD,GACV,IAAK,YAAaC,EAAaJ,EAAA,cAAAA,EAAA,iCAAsB,MACrD,IAAK,SAAUI,EAAaJ,EAAA,cAAAA,EAAA,oBAAMG,GAEtC,GAAkC,oBAAtBA,EAAWE,OAAuB,CAC1C,QAAW1X,IAAP5B,EAIA,OAAOA,EAAGoZ,EAAI9Y,GAHd+Y,EAAalZ,OAAAoZ,EAAA,gBAAApZ,CAAgBiZ,EAAI9Y,GAMzC,YAAmBsB,IAAfyX,EACOJ,EAAA,qBAAKlT,UAAU,eAAesT,GAEjCD,EAAWE,OAAOtZ,EAAIM,GAiDTkZ,CAAaT,EAAW/Y,EAAIM,GACzC,YAAesB,IAAXuX,EAA6BA,OACfvX,IAAXoX,EAAsBC,EAAA,cAAAA,EAAA,yBAAcD,IAC/C,IAAK,SACD,OAAOC,EAAA,cAAAA,EAAA,sBAAQF,MAIdU,EAAK,CAACV,EAAwB/Y,EAAeM,EAAQ0Y,IACvDC,EAAA,cAACJ,EAAE,CAACE,UAAWA,EAAW/Y,GAAIA,EAAIM,EAAGA,EAAG0Y,OAAQA,ICzF3D/a,EAAAE,EAAAC,EAAA,sBAAAwa,IAAA3a,EAAAE,EAAAC,EAAA,sBAAAqb,kCCAAxb,EAAAE,EAAAC,EAAA,sBAAAsb,IAAA,MAAMC,EAAW,iEACXC,EAAY,EAEX,SAASF,IACZ,IAAIxR,EAAMyR,EAAS9S,OACfgT,EAAM,GACV,IAAK,IAAI5R,EAAI,EAAGA,EAAI2R,EAAW3R,IAC3B4R,GAAOF,EAASG,OAAOC,KAAKC,MAAMD,KAAKE,SAAW/R,IAEtD,OAAO2R,yUCAJ,MAAMK,EACTra,YACI4F,EAAA,EAAIiH,YAER7M,UACI4F,EAAA,EAAIgI,UAEF5N,UAAUsH,2CACZ1B,EAAA,EAAIgI,gBAQEhI,EAAA,EAAIsJ,QAAQ5H,kpBCjB1B,IAAIgT,EAA0C,GAC1CC,EAA4C,GAEzC,SAASC,IACZF,EAAa,GACbC,EAAe,GA0SfE,EAAW,GAxSXna,OAAAwQ,EAAA,EAAAxQ,GAcJ,MAAMoa,EAAkB,kBAiFxB,MAAMC,EAAW,IAhFjB,MAGU3a,WAAW2Q,2CACb,IACI,IA2BItP,GA3BAiT,QAACA,EAAOC,OAAEA,GAAU5D,EACxB,QAAmB5O,IAAfvB,KAAKqJ,MAAqB,CAC1B,IAAI+Q,EAAKC,aAAaC,QAAQJ,GACnB,OAAPE,IACApa,KAAKqJ,MAAQqE,KAAK6M,MAAMH,IAGhC,QAAmB7Y,IAAfvB,KAAKqJ,MAAqB,CAC1B,IAAIE,KAACA,EAAIiR,IAAEA,GAAOxa,KAAKqJ,MACvB,GAAIE,IAASkR,QAAyBlZ,IAARiZ,EAC1Bxa,KAAKqJ,WAAQ9H,OAGb,IAAK,IAAIqG,KAAK4S,EACDA,EAAI5S,GACV8S,WAAQnZ,OAIJA,IAAfvB,KAAKqJ,QACLrJ,KAAKqJ,MAAQ,CACTE,KAAMkR,EACNzP,UAAMzJ,EACNiZ,IAAK,KAKb,IAAIG,EAAK7G,EAAQ,IAAIC,EACjBC,EAAKhU,KAAKqJ,MAAMmR,IAAIG,GACxB,QAAWpZ,IAAPyS,EAAkB,CAClB,IAAIqE,MAACA,GAASrE,EACdnT,EAAMwX,EAMV,YAJY9W,IAARV,IACAA,QAAYsP,EAAMyK,eAClB5a,KAAK6a,UAAUF,EAAI9Z,IAEhBia,EAAAnI,EAAEoI,UAAUla,GAEvB,MAAOgG,GAGH,MAFA7G,KAAKqJ,WAAQ9H,EACb8Y,aAAaW,WAAWd,GAClBrT,KAINrH,UAAUuU,EAAekH,GAC7Bjb,KAAKqJ,MAAMmR,IAAIzG,GAAU,CACrBsE,MAAO4C,EACPP,OAAO,GAEX,IAAIQ,EAAMxN,KAAKC,UAAU3N,KAAKqJ,OAC9BgR,aAAac,QAAQjB,EAAiBgB,GAGpC1b,YAAY2Q,2CACd,QAAmB5O,IAAfvB,KAAKqJ,MAAqB,OAAO,EACrC,IAAIyK,QAACA,EAAOC,OAAEA,GAAU5D,EACpBwK,EAAK7G,EAAQ,IAAIC,EACjBC,EAAKhU,KAAKqJ,MAAMmR,IAAIG,GACxB,QAAWpZ,IAAPyS,EAAkB,OAAO,EAC7B,IAAI0G,MAACA,EAAKrC,MAAEA,GAASrE,EACrB,IAAc,IAAV0G,EAAgB,OAAO,EAC3B,IAAI7Z,QAAYsP,EAAMyK,eAEtB,OAAgB,IADFE,EAAAnI,EAAEyI,QAAQ/C,EAAOxX,IAE3Bb,KAAK6a,UAAUF,EAAI9Z,IACZ,IAEXmT,EAAG0G,OAAQ,GACJ,OAKR,MAAMW,UAAchL,EAAA,EAMvB7Q,YAAY8b,EAAkBxH,EAAiBC,EAAgBwH,EAAiBC,GAC5E3b,MAAMyb,EAAUE,GACZzH,IACA/T,KAAK8T,QAAUA,EACf9T,KAAK+T,OAASA,EACd/T,KAAKgU,GAAKF,EAAU,IAAMC,GAE9B/T,KAAKub,OAASA,EACdvb,KAAKwb,YAAcA,EAGjBhc,qDACIM,OAAAwQ,EAAA,EAAAxQ,CAAWE,KAAKgU,GAAIhU,KAAK8T,QAAS9T,KAAK+T,UAGjCvU,yDACZ,IAAIic,EACAC,GACqB,IAArB1b,KAAKwb,kBAA6Cja,IAArBvB,KAAKwb,aAClCC,EAAW3B,EACX4B,EAAY,IAAI7B,GAGhB4B,EAAW1B,EAEf,IAAI4B,EAAUF,EAASzb,KAAKgU,IAC5B,QAAgBzS,IAAZoa,EAAuB,OAAOA,EAClC,IAAI/G,EAAU9U,OAAAwQ,EAAA,EAAAxQ,CAAME,KAAKgU,KAErB1H,IAACA,EAAGiB,MAAEA,GAASqH,EAGnB,OAFA5U,KAAKuN,MAAQA,EACboO,EAAU,IAAIC,EAAA,GAAY,EAAOtP,EAAKiB,EAAOmO,GACtCD,EAASzb,KAAKgU,IAAM2H,IAGzBnc,iDACF,aAAaQ,KAAKiK,IAAI,YAGpBzK,uDACF,IAAIqc,OAAsBta,IAAhBvB,KAAKub,OACX,GACAvb,KAAKub,OAAOO,KAAK,KAErB,aADgB9b,KAAKiK,IAAI,SAAU,CAAC4R,IAAIA,MAItCrc,qDACF,aAAa2a,EAAS4B,WAAW/b,QAG/BR,uDACF,aAAaQ,KAAKiK,IAAI,cAGpBzK,sDACF,aAAa2a,EAAS6B,YAAYhc,QAGhCR,OAAOU,2CACT,aAAaF,KAAKiK,IAAI,UAAY/J,KAGhCV,QAAQyc,2CACV,aAAajc,KAAKkc,KAAK,SAAUD,KAG/Bzc,QAAQU,EAAaoD,2CACvB,aAAatD,KAAKiK,IAAI,QAAU/J,EAAO,IAAMoD,KAG3C9D,WAAWU,2CACb,aAAaF,KAAKiK,IAAI,YAAc/J,EAAO,OAGzCV,SAASU,EAAaic,2CACxB,aAAanc,KAAKkc,KAAK,QAAUhc,EAAMic,KAGrC3c,WAAWU,EAAa6B,EAAYqa,EAAc9U,EAAY+U,EAAyBC,2CAQzF,aAPgBtc,KAAKkc,KAAK,SAAWhc,EAAM,CACvC6B,IAAKA,EACLqa,MAAOA,EACP9U,IAAKA,EACL+U,UAAWA,EACXC,SAAUA,MAIZ9c,WAAWU,EAAa6B,EAAYqa,EAAc9Y,2CACpD,aAAatD,KAAKiK,IAAI,YAAc/J,EAAO,IAAMkc,EAAQ,IAAMra,EAAM,IAAMuB,KAEzE9D,cAAcU,EAAa6B,EAAYqa,2CACzC,aAAapc,KAAKiK,IAAI,gBAAkB/J,EAAO,IAAMkc,EAAQ,IAAMra,EAAM,OAEvEvC,YAAYU,EAAa6B,EAAYqa,EAAcD,2CACrD,aAAanc,KAAKkc,KAAK,YAAchc,EAAO,IAAMkc,EAAQ,IAAMra,EAAM,IAAKoa,KAEzE3c,WAAWU,EAAa6B,EAAYqa,EAAc9Y,EAAWiZ,2CAC/D,aAAavc,KAAKkc,KAAK,gBAAkBhc,EAAO,IAAMkc,EAAQ,IAAMra,EAAM,IAAK,CAC3EuB,GAAIA,EACJkZ,OAAQD,MAIV/c,QAAQU,EAAa6B,EAAY0a,2CACnC,IACI,IAAInQ,EAAM,WAAapM,EAAO,IAI9B,OAHuBoM,QAAX/K,IAARQ,EAA0BA,EAClB,UACI/B,KAAKkc,KAAK5P,EAAKmQ,GAGnC,MAAOvO,GACHhL,QAAQ4D,MAAMoH,MAIhB1O,UAAUU,EAAagS,2CACzB,aAAalS,KAAKkc,KAAK,SAAWhc,EAAMgS,KAGtC1S,YAAYU,EAAagS,2CAC3B,aAAalS,KAAK0c,IAAI,SAAWxc,EAAMgS,KAGrC1S,YAAYU,EAAagS,2CAC3B,aAAalS,KAAKkc,KAAK,SAAWhc,EAAO,UAAWgS,KAGlD1S,gBAAgBU,2CAClB,aAAaF,KAAKiK,IAAI,SAAW/J,EAAO,iBAGtCV,SAASU,EAAagS,2CACxB,aAAalS,KAAKkc,KAAK,SAAWhc,EAAO,aAAcgS,KAGrD1S,SAASU,EAAaoD,2CACxB,aAAatD,KAAKiK,IAAI,SAAW/J,EAAO,QAAUoD,KAGhD9D,cAAcU,EAAagS,2CAC7B,aAAalS,KAAKkc,KAAK,SAAWhc,EAAO,YAAagS,KAGpD1S,aAAaU,EAAaoD,2CAC5B,aAAatD,KAAKiK,IAAI,SAAW/J,EAAO,YAAcoD,KAGpD9D,OAAOU,EAAagS,2CACtB,aAAalS,KAAKkc,KAAK,UAAYhc,EAAMgS,KAGvC1S,KAAKU,EAAamc,EAAeC,EAAiBH,2CACpD,IAAIxU,EACJ,cAAewU,GACX,IAAK,YAAaxU,EAAI,CAACL,IAAK,IAAK,MACjC,QAASK,EAAImT,EAAAnI,EAAEC,MAAMuJ,GAIzB,OAFAxU,EAAc,WAAI0U,EAClB1U,EAAa,UAAI2U,QACJtc,KAAKkc,KAAK,cAAgBhc,EAAMyH,KAG3CnI,MAAMU,EAAaic,2CAErB,aADgBnc,KAAKkc,KAAK,SAAWhc,EAAMic,KAoBzC3c,+CACF,aAAaQ,KAAKiK,IAAI,WAI9B,IA8BIuC,EA9BAyN,EAA0C,GAMvC,MAAM0C,UAAiBtB,EAE1B7b,YAAYkM,GACR7L,MAAM,WAAO0B,OAAWA,OAAWA,GAAW,GAC9CvB,KAAK0L,OAASA,EAGFlM,yDACZ,IAAImc,EAAU1B,EAASja,KAAK0L,QAC5B,YAAgBnK,IAAZoa,EAA8BA,EAC3B1B,EAASja,KAAK0L,cAAgB1L,KAAK4c,iBAGhCpd,uDACV,IAAIkc,EAAY,IAAI7B,EAChBgD,EAAe,IAAIC,EAAa,WAAOvb,GACvCV,QAAYgc,EAAaE,QAAQ/c,KAAK0L,SACtC6B,MAACA,EAAKsG,GAAEA,EAAEvH,IAAEA,EAAG4H,QAAEA,GAAWrT,EAC5BwT,EAAU9D,EAAA,EAAKgE,aAAaV,EAAIvH,EAAK4H,GAEzC,OADAlU,KAAKuN,MAAQA,EACN,IAAIqO,EAAA,GAAY,EAAOvH,EAAS9G,EAAOmO,MAM/C,SAASsB,EAAa1Q,GACzBpJ,QAAQC,IAAI,kBAAmBmJ,GAC/BE,EAAaF,EACb2Q,OAAc1b,EACd2b,OAAgB3b,EAChB4b,OAAkB5b,EAGf,IAWH4b,EACAD,EAZOD,OAA+B1b,EAEtCkZ,EAAuB,EACpB,SAAS2C,EAAeC,EAAe5G,GAC1CgE,EAAgB4C,EAChBJ,EAAcxG,EACdvT,QAAQC,IAAI,oBAAqBsT,GACjCyG,OAAgB3b,EAChB4b,OAAkB5b,EAcf,MAAe+b,UAAsBjN,EAAA,EACxC7Q,YAAY+d,EAAc/B,GACtB3b,MAAM0d,EAAM/B,GAGAhc,yDACZ,OAA6B,IAArBQ,KAAKwb,kBAA6Cja,IAArBvB,KAAKwb,iBAdtBja,IAApB4b,EAAsCA,EACnCA,EAAkB,IAAIvB,EAAA,GAAY,EAAMpP,EAAYyQ,EAAa,IAAIpD,QAGtDtY,IAAlB2b,EAAoCA,EACjCA,EAAgB,IAAItB,EAAA,GAAY,EAAMpP,EAAYyQ,MAe7D,MAAMlM,EAAW,WAyDV,MAAMyM,EAAa,IAxDnB,cAAyBF,EAEtB9d,GAAG2c,2CACL,IACI,IAAKnR,KAAKyS,EAAS3J,QAAEA,EAAOC,OAAEA,GAAUoI,EACxC,QAAmB5a,IAAfvB,KAAKqJ,MAAqB,CAC1B,IAAI+Q,EAAKC,aAAaC,QAAQvJ,GACnB,OAAPqJ,IACApa,KAAKqJ,MAAQqE,KAAK6M,MAAMH,IAGhC,QAAmB7Y,IAAfvB,KAAKqJ,MAAqB,CAC1B,IAAI2B,KAACA,EAAIzB,KAAEA,GAAQvJ,KAAKqJ,MACpB2B,IAASyS,GAAalU,IAASkR,IAAeza,KAAKqJ,WAAQ9H,QAEhDA,IAAfvB,KAAKqJ,QACLrJ,KAAKqJ,MAAQ,CACTE,KAAMkR,EACNzP,KAAMmR,EAAOnR,KACbwP,IAAK,KAIb,IAAIG,EAAK7G,EAAQ,IAAIC,EACjB2J,GAAU,IAAI1Y,MAAOG,UACrB6O,EAAKhU,KAAKqJ,MAAMmR,IAAIG,GACxB,QAAWpZ,IAAPyS,EAAkB,CAClB,IAAI2J,KAACA,EAAItF,MAAEA,GAASrE,EACpB,QAAczS,IAAV8W,GAAwBqF,EAAUC,EAAQ,MAC1C,OAAO7C,EAAAnI,EAAEC,MAAMyF,GAGvB,IAAIuF,EAAkB9C,EAAAnI,EAAEC,MAAMuJ,GAC9ByB,EAAYrY,QAAUgL,EAAA,EAAKhL,QAC3B,IAAI1E,QAAYb,KAAKiK,IAAI,SAAU2T,GACnC,QAAYrc,IAARV,EAAmB,CACnB,IAAImK,KAACA,EAAI8I,QAAEA,EAAOC,OAAEA,GAAUoI,EAE9B,+BADoCnR,OAAU8I,KAAWC,sCAS7D,OALA/T,KAAKqJ,MAAMmR,IAAIG,GAAM,CACjBgD,KAAMD,EACNrF,MAAOxX,GAEXwZ,aAAac,QAAQpK,EAAUrD,KAAKC,UAAU3N,KAAKqJ,QAC5CyR,EAAAnI,EAAEC,MAAM/R,GAEnB,MAAOgG,GAGH,MAFA7G,KAAKqJ,WAAQ9H,EACb8Y,aAAaW,WAAWjK,GAClBlK,OAKuB,eAAWtF,GAO7C,MAAMsc,EAAgB,IALtB,cAA4BP,EAC/B9d,WAAW8M,EAAY8G,EAAeC,GAClC,OAAOrT,KAAKoD,KAAKkJ,EAAK8G,EAAQC,KAGS,QAAI9R,GAsB7Cuc,EAAS,SAER,MAAMhB,UAAqBQ,EAExB9d,IAAIue,EAAiBC,2CACvB,IAAInd,EACAuZ,EAAKC,aAAaC,QAAQwD,GAC9B,GAAW,OAAP1D,EAAa,CACb,IAAI6D,EAAMvQ,KAAK6M,MAAMH,IAChB2D,SAASG,EAAWF,QAAQG,EAAQ9F,MAAEA,GAAS4F,EAChDF,IAAaG,GAAaF,IAAYG,IAAUtd,EAAMwX,GAE9D,QAAY9W,IAARV,EAAmB,CACnBA,QAAYb,KAAKoe,QAAQL,EAAUC,GACnC,IAAIK,EAAM,CACNN,SAASA,EACTC,QAAQA,EACR3F,MAAOxX,GAEXwZ,aAAac,QAAQ2C,EAAQpQ,KAAKC,UAAU0Q,IAEhD,OAAOre,KAAKse,UAAYxD,EAAAnI,EAAEoI,UAAUla,KAE1BrB,QAAQue,EAAiBC,2CACnC,aAAahe,KAAKiK,IAAI,cAAe,CAAC8T,SAASA,EAAUC,QAAQA,MAE/Dxe,SAASue,EAAiBC,2CAC5B,IAAInd,QAAYb,KAAKoe,QAAQL,EAAUC,IAClC1a,GAAGib,EAAU/D,IAAI8D,GAAate,KAAKse,WACnChb,GAAGkb,EAAOhE,IAAIiE,GAAU5d,EAC7B,GAAI0d,IAAaC,EAAO,OAAO,EAC/B,GAAIF,EAAU9X,SAAWiY,EAAOjY,OAAQ,OAAO,EAC/C,IAAIqB,EAAMyW,EAAU9X,OACpB,IAAK,IAAIoB,EAAE,EAAGA,EAAEC,EAAKD,IACjB,IAA2C,IAAvCkT,EAAAnI,EAAEyI,QAAQkD,EAAU1W,GAAI6W,EAAO7W,IAAe,OAAO,EAE7D,OAAO,IAELpI,QAAQwL,2CACV,aAAahL,KAAKiK,IAAI,eAAgB,CAACe,KAAKA,MAE1CxL,eAAeuD,2CACjB,aAAa/C,KAAKkc,KAAK,qBAAsBnZ,MAI9C,SAAe2b,EAAWX,EAAiBC,2CAC9C,IAAInB,EAAe,IAAIC,EAAa,WAAOvb,GAEvCV,QAAYgc,EAAarC,IAAIuD,EAAUC,GAO3C,OANAnB,EAAa8B,SAASZ,EAAUC,GAAS7P,KAAKlG,KAChC,IAANA,IACAoS,aAAaW,WAAW8C,GACxBne,EAAA,IAAI2G,WAGLzF,mUCxgBJ,MAAe+d,GAKf,MAAMC,UAAcD,EAKvBpf,YAAYqE,GACRhE,QAMJG,KAAA+E,QAAU,KAAWnC,EAAA5C,UAAA,2BACXA,KAAK6D,WAAWyC,WANtBtG,KAAK6D,WAAaA,EAClB7D,KAAKK,KAAOwD,EAAWxD,KACvBL,KAAKI,MAAQyD,EAAWzD,MAO5BZ,OAAOkG,GACH,OAAOkT,EAAA,qBACHlT,UAAWoZ,IAAW,OAAQ,OAAQ,qBAAsB,iBAAkBpZ,GAC9EX,QAAS/E,KAAK+E,SACb/E,KAAKK,cAAcL,KAAKI,QC7BrCxC,EAAAE,EAAAC,EAAA,sBAAA8gB,2aCCA,IAAIE,EASG,SAASC,EAAgBC,GAC5BF,EAAeE,EAGZ,SAASC,EAAYvU,GACxBxE,OAAOkC,IAAIC,YAAY,CACnBC,KAAM,KACNoC,IAAKA,GACN,KAGA,MAAewU,EAAtB3f,cAEYQ,KAAAof,YAAc,EACdpf,KAAAqf,YAAqD,GACrDrf,KAAAsf,YAA4E,GACpF9f,eAAe0K,GACX,IAAIqV,EAAOvf,KAAKof,cAEhB,OADApf,KAAKqf,YAAYE,GAAQrV,EAClBqV,EAEX/f,YAAY+I,EAAa2B,GACrB,IAAIqV,EAAOvf,KAAKof,cAEhB,OADApf,KAAKsf,YAAYC,GAAQ,CAAChX,KAAKA,EAAM2B,QAASA,GACvCqV,EAEX/f,aAAa6K,UACFrK,KAAKqf,YAAYhV,UACjBrK,KAAKsf,YAAYjV,GAEtB7K,QAAQmL,2CACV,IAAI6U,MAACA,GAAS7U,EACd,IAAK,IAAI/C,KAAK5H,KAAKqf,kBACTrf,KAAKqf,YAAYzX,GAAG+C,GAE9B,IAAK,IAAI/C,KAAK5H,KAAKsf,YAAa,CAC5B,IAAI/W,KAACA,EAAI2B,QAAEA,GAAWlK,KAAKsf,YAAY1X,GACnCW,IAASiX,UACPtV,EAAQS,QAK1B,IAAI8U,EAAa,EAKV,MAAMC,EAAW,IAJjB,cAAuBP,EAA9B3f,kCACIQ,KAAA2f,SAAkB,iBAAmBF,MAKlC,MAAMG,UAAkBT,EAO3B3f,YAAYkN,EAAgBa,GACxB1N,QAPJG,KAAA2f,SAAkB,kBAAoBF,IAQlCzf,KAAK0M,OAASA,EACd1M,KAAKuN,MAAQA,EAGjB/N,sBAAsB+N,GAClBqS,EAAU3C,YAAc1P,EAG5B/N,UAGI,QAAgB+B,IAAZvB,KAAKmK,GAAkB,OAC3B,IAAI0V,EAAO7f,KACX,OAAO,IAAIqP,QAAQ,CAACC,EAASC,KACzB,IAAIpF,EAAK,IAAI2V,UAAU9f,KAAK0M,OAAQ1M,KAAKuN,OAASqS,EAAU3C,aAC5D/Z,QAAQC,IAAI,uBAAwBnD,KAAK0M,QACzCvC,EAAG4V,OAAS,CAACC,IACT9c,QAAQC,IAAI,yBAA0BnD,KAAK0M,QAC3CmT,EAAK1V,GAAKA,EACVmF,MAEJnF,EAAG8V,QAAU,CAACD,IACVzQ,EAAO,2BAEXpF,EAAG+V,UAAY,CAAOvV,GAAO/H,EAAA5C,UAAA,qBAAC,aAAM6f,EAAKM,UAAUxV,MACnDR,EAAGiW,QAAU,CAACJ,IACVH,EAAK1V,QAAK5I,EACV2B,QAAQC,IAAI,yBAIxB3D,aACoB+B,IAAZvB,KAAKmK,KACLnK,KAAKmK,GAAGkW,QACRrgB,KAAKmK,QAAK5I,GAGJ/B,UAAU8gB,2CACpB,IACIpd,QAAQC,IAAI,wBAAyBmd,EAAMpO,MAC3C,IAAIvH,EAAM+C,KAAK6M,MAAM+F,EAAMpO,OA3GvC,SAAwBvH,QACCpJ,IAAjBwd,GACJA,EAAazW,YAAY,CACrBC,KAAM,KACNoC,IAAKA,GACN,KAuGK4V,CAAe5V,SACT3K,KAAK4K,QAAQD,GAEvB,MAAO9D,GACH3D,QAAQC,IAAI,iBAAkB0D,MAGtCrH,OAAOmL,GACH,IAAI6V,EAAUxgB,KACdA,KAAKyN,UAAUU,KAAK,KAChBqS,EAAQrW,GAAGsW,KAAK9V,8WCxHrB,MAAM+V,GAAgB,EAEvBlU,EAAa,4BAEbD,EAAUzM,OAAA,CAAAqL,SAAA,aAAAC,WAAA,IAAAC,sBAAA,8BAAgC,oBAAKmB,EAQ/CmU,EAAkC,CACpCC,WAAY,CACRvI,MAAOvY,OAAA,CAAAqL,SAAA,aAAAC,WAAA,IAAAC,sBAAA,8BAAyC,6BAXhC,iBAYhBhC,OAAO,GAEXwX,QAAS,CACLxI,MAAOvY,OAAA,CAAAqL,SAAA,aAAAC,WAAA,IAAAC,sBAAA,8BAAsC,0BAbhC,iBAcbhC,OAAO,GAEXyX,OAAQ,CACJzI,MAAOvY,OAAA,CAAAqL,SAAA,aAAAC,WAAA,IAAAC,sBAAA,8BAAqC,yBAhBhC,iBAiBZhC,OAAO,GAEX0X,UAAW,CACP1I,MAAOvY,OAAA,CAAAqL,SAAA,aAAAC,WAAA,IAAAC,sBAAA,8BAAqC,yBApBhC,iBAqBZhC,OAAO,GAEX2X,WAAY,CACR3I,MAAOvY,OAAA,CAAAqL,SAAA,aAAAC,WAAA,IAAAC,sBAAA,8BAA6C,iCAvBjC,iBAwBnBhC,OAAO,IAqBf,MAAM4X,EAAe,CACjB7N,OAAQ,MACR1S,KAAM,UACNwgB,QAAS,CACLC,eAAgB,eA2GjB,MAAM5Q,EAAY,IAvGzB,MAMU/Q,MAAM+F,2CACRvF,KAAKuF,QAAUA,GACO,IAAlBmb,UACM1gB,KAAKohB,YAEf,IAAI7Q,EAAOvQ,KAAKqhB,gBAChBrhB,KAAKsM,IArCb,SAA2BiE,GACvB,OAAoC,IAAhCA,EAAK+Q,WAAW,YACZ/Q,EAAKgR,SAAS,KAAahR,EACxBA,EAAO,cAEDA,KAgCFiR,CAAkBjR,GAC7BvQ,KAAKmK,GA/Bb,SAA0BoG,GAEtB,OAA+B,IAA3BA,EAAK+Q,WADG,cAGmB,KAD3B/Q,EAAOA,EAAK+H,OAFJ,WAEiB9R,SAChB+a,SAAS,OAAehR,EAAOA,EAAK+H,OAAO,EAAG/H,EAAK/J,OAAO,IAC5D,SAAW+J,EAAO,gBAEdA,QAwBDkR,CAAiBlR,GAC3BvQ,KAAKuM,QAAUvM,KAAK0hB,eAGhBliB,aAAa+Q,GAAc,gBAAiBA,UACtC/Q,mDACV,IAAImiB,EAA8B,GAC9BC,EAAmB,GACvB,IAAK,IAAIha,KAAK+Y,EAAO,CACjB,IAAIkB,EAAYlB,EAAM/Y,IAClByQ,MAACA,GAASwJ,EACVD,EAAQE,UAAU7Z,GAAKA,IAAMoQ,GAAS,GAAGuJ,EAAQpc,KAAK6S,GAG9D,IAAK,IAAI9H,KAAQqR,EAAS,CACtB,IAAIG,EAAW/hB,KAAKgiB,aAAazR,GACjCoR,EAASnc,KAAKyc,EAAWF,IAE7B,IAAIG,QAAgB7S,QAAQ8S,IAAIR,GAC5B9Z,EAAM+Z,EAAQpb,OAClB,IAAK,IAAIoB,EAAE,EAAGA,EAAEC,EAAKD,IAAK,CACtB,IAAIyB,EAAQ6Y,EAAQta,GAChB2I,EAAOqR,EAAQha,GACnB,IAAK,IAAIwa,KAAKzB,EAAO,CACjB,IAAIkB,EAAYlB,EAAMyB,GAClBP,EAAUxJ,QAAU9H,IACpBsR,EAAUxY,MAAQA,OAc1B7J,gBACJ,IAAI6Y,MAACA,EAAKhP,MAAEA,GAASsX,EAAMC,WAE3B,OAAqC,IAD1B7U,SAASC,SAASF,KACpB2D,SAAS,eACP4I,GAEW,IAAlBqI,IACc,IAAVrX,EAAuBgP,EAExB7L,EAGHhN,aACJ,IAAI6Y,MAACA,EAAKhP,MAAEA,GAASsX,EAAME,QAE3B,OAAqC,IAD1B9U,SAASC,SAASF,KACpB2D,SAAS,eACP4I,GAEW,IAAlBqI,IACc,IAAVrX,EAAuBgP,EAExB9L,EAGX/M,cAAc8M,EAAY+V,EAAmB,UACzC,IAAsB,IAAlB3B,EAAyB,OAAOpU,EACpC,IAAIiE,EAAOoQ,EAAM0B,GACjB,QAAa9gB,IAATgP,EAAoB,OAAOjE,EAC/B,IAAI+L,MAACA,EAAKhP,MAAEA,GAASkH,EACrB,OAAc,IAAVlH,EAAwBiD,YACX+L,KAErB7Y,aAAaqU,EAAWvH,EAAY4H,GAChC,IAAIqJ,EASJ,OARqB,IAAjBvd,KAAKuF,SACW,MAAZ2O,IAAiB5H,EAAM4H,GAC3BqJ,EAAO,WAAa1J,EAAK,KAGzB0J,EAAO,WAAa1J,EAAK,KAE7BvH,EAAMtM,KAAKsiB,cAAchW,IACZiR,EAGX/d,WAAW+iB,2CACb,aAAaN,EAAWM,OAY1BC,EAAU,IAchB,SAAeP,EAAW3V,2CACtB,IAEI,aAfR,SAAyBA,GACrB,OAAO,IAAI+C,QAAQ,CAACC,EAASC,KAC3BzE,MAAMwB,EAAK2U,GACV9S,KAAKlG,IACFA,EAAEwa,OAAOtU,KAAKmB,GAASoT,MAAMnT,KAEhCmT,MAAMnT,GACP,MAAMrB,EAAI,IAAIyU,MAAM,wBACpBhc,WAAW4I,EAAQiT,EAAStU,KAMpB0U,CAAgBtW,IACf,EAEX,MAAOzF,GACH,OAAO,oCC/LfjJ,EAAAE,EAAAC,EAAA,sBAAA8kB,IAAA,IAAAte,EAAA3G,EAAA,GAAAklB,EAAAllB,EAAA,GAAAmlB,EAAAnlB,EAAAolB,EAAAF,GAAAG,EAAArlB,EAAA,GAWO,SAASilB,EAAMre,GAClB,IAAIkB,UAACA,EAASoD,MAAEA,EAAK6G,IAAEA,EAAGuT,SAAEA,GAAY1e,EACxC,OAAKmL,IAKuB,IAAxBA,EAAI2R,WAAW,OACf3R,EAAMsT,EAAA,EAAIxW,OAASkD,EAAI2I,OAAO,IAE3B/T,EAAA,qBAAKoL,IAAKA,EAAKjK,UAAWA,EAC7BoD,MAAOA,EACP4F,QAASuD,GAAKA,EAAIkR,cAAcxT,IAAIuT,KAT7B3e,EAAA,qBAAKmB,UAAWqd,IAAWrd,EAAW,cAAeoD,MAAOA,GAC/DvE,EAAA,mBAAGmB,UAAU,iDCfzB,IAAA0d,EAAAxlB,EAAA,IAAAA,EAAAE,EAAAC,EAAA,yBAAAqlB,EAAA,IAAAxlB,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,QAAAylB,EAAAzlB,EAAA,IAAAA,EAAAE,EAAAC,EAAA,oCAAAslB,EAAA,IAAAzlB,EAAA,QAAA0lB,EAAA1lB,EAAA,IAAAA,EAAAK,EAAAqlB,EAAA,UAAA1lB,EAAAE,EAAAC,EAAA,0BAAAulB,EAAA,QAAA1lB,EAAAK,EAAAqlB,EAAA,cAAA1lB,EAAAE,EAAAC,EAAA,8BAAAulB,EAAA,YAAA1lB,EAAAK,EAAAqlB,EAAA,eAAA1lB,EAAAE,EAAAC,EAAA,+BAAAulB,EAAA,aAAA1lB,EAAAK,EAAAqlB,EAAA,oBAAA1lB,EAAAE,EAAAC,EAAA,oCAAAulB,EAAA,kBAAA1lB,EAAAK,EAAAqlB,EAAA,aAAA1lB,EAAAE,EAAAC,EAAA,6BAAAulB,EAAA,WAAA1lB,EAAAK,EAAAqlB,EAAA,SAAA1lB,EAAAE,EAAAC,EAAA,yBAAAulB,EAAA,OAAA1lB,EAAAK,EAAAqlB,EAAA,OAAA1lB,EAAAE,EAAAC,EAAA,uBAAAulB,EAAA,KAAA1lB,EAAAK,EAAAqlB,EAAA,SAAA1lB,EAAAE,EAAAC,EAAA,yBAAAulB,EAAA,OAAA1lB,EAAAK,EAAAqlB,EAAA,UAAA1lB,EAAAE,EAAAC,EAAA,0BAAAulB,EAAA,QAAA1lB,EAAAK,EAAAqlB,EAAA,QAAA1lB,EAAAE,EAAAC,EAAA,wBAAAulB,EAAA,MAAA1lB,EAAAK,EAAAqlB,EAAA,SAAA1lB,EAAAE,EAAAC,EAAA,yBAAAulB,EAAA,OAAA1lB,EAAAK,EAAAqlB,EAAA,UAAA1lB,EAAAE,EAAAC,EAAA,0BAAAulB,EAAA,QAAA1lB,EAAAK,EAAAqlB,EAAA,UAAA1lB,EAAAE,EAAAC,EAAA,0BAAAulB,EAAA,QAAA1lB,EAAAK,EAAAqlB,EAAA,YAAA1lB,EAAAE,EAAAC,EAAA,4BAAAulB,EAAA,UAAA1lB,EAAAK,EAAAqlB,EAAA,SAAA1lB,EAAAE,EAAAC,EAAA,yBAAAulB,EAAA,OAAA1lB,EAAAK,EAAAqlB,EAAA,aAAA1lB,EAAAE,EAAAC,EAAA,6BAAAulB,EAAA,WAAA1lB,EAAAK,EAAAqlB,EAAA,cAAA1lB,EAAAE,EAAAC,EAAA,8BAAAulB,EAAA,YAAA1lB,EAAAK,EAAAqlB,EAAA,UAAA1lB,EAAAE,EAAAC,EAAA,0BAAAulB,EAAA,QAAA1lB,EAAAK,EAAAqlB,EAAA,QAAA1lB,EAAAE,EAAAC,EAAA,wBAAAulB,EAAA,MAAA1lB,EAAA,IAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,kqBCGO,MAAe2lB,EAClB/jB,YAAYgkB,GAAyB,GAG7BxjB,KAAAyjB,SAAmB,EACfzjB,KAAA0jB,SAAmB,EACX1jB,KAAA2jB,YAAsB,EACpB3jB,KAAA4jB,QAAkB,EAE5B5jB,KAAA6jB,WAAqB,EAiBvB7jB,KAAA8jB,UAAY,IACZ9jB,KAAAqc,eAAY9a,EACZvB,KAAAsc,SAAW,GACXtc,KAAA+jB,eAA+B,OA3BrC/jB,KAAKgkB,OAASC,EAAA,EAAWC,MAAS,GAAI,CAACC,KAAKX,IAQtCxhB,YACN,OAAwB,IAApBhC,KAAK2jB,WAA4B,MACjB,IAAhB3jB,KAAK4jB,OACF5jB,KAAKgkB,YADZ,EAMJxkB,cACIQ,KAAKokB,OAAS,KAAKtkB,OAAAukB,EAAA,EAAAvkB,GAEvBN,iBACIQ,KAAKskB,UAAY,KAAKxkB,OAAAukB,EAAA,EAAAvkB,GAY1BN,QACIQ,KAAKyjB,SAAU,EACfzjB,KAAK2jB,YAAa,EAClB3jB,KAAK4jB,QAAS,EACd5jB,KAAK+C,WAAQxB,EACbvB,KAAK6jB,WAAY,EACjB7jB,KAAKgkB,OAAO7c,QACZnH,KAAKukB,kBAAahjB,GAGtB/B,OAAOiI,GACyB,SAAxBzH,KAAK+jB,eACL/jB,KAAKgkB,OAAOQ,QAAQ/c,GAEpBzH,KAAKgkB,OAAOxe,KAAKiC,GAGnBjI,MAAMuD,2CACR/C,KAAKykB,QACLzkB,KAAK2jB,YAAa,EAClB3jB,KAAK+C,MAAQA,QACP/C,KAAK0kB,SAGTllB,+CACF,IAAuB,IAAnBQ,KAAK6jB,UAAoB,OAC7B,IAAqB,IAAjB7jB,KAAK0jB,QAAkB,OAC3B1jB,KAAK0jB,SAAU,EACf,IAAIpH,EAAWtc,KAAKsc,SAAW,GACV,IAAjBtc,KAAKyjB,SACDzjB,KAAK8jB,UAAY9jB,KAAKsc,WAAUA,EAAWtc,KAAK8jB,UAAU,GAElE,IAAIjjB,QAAYb,KAAK8W,KACb9W,KAAK+C,MACL/C,KAAKqc,UACLC,GACRtc,KAAK0jB,SAAU,EACf1jB,KAAK4jB,QAAS,EACd,IAAI/b,EAAMhH,EAAI2F,QACK,IAAfxG,KAAKyjB,SAAkB5b,EAAI7H,KAAK8jB,YACjB,IAAf9jB,KAAKyjB,SAAmB5b,EAAI7H,KAAKsc,UAEjCtc,KAAK6jB,WAAY,IACfhc,EACFhH,EAAI8jB,OAAO9c,EAAK,IAGhB7H,KAAK6jB,WAAY,EAET,IAARhc,GAIJ7H,KAAKukB,aAAa1jB,EAAIgH,EAAI,IACE,SAAxB7H,KAAK+jB,eACL/jB,KAAKgkB,OAAOxe,QAAQ3E,GAEpBb,KAAKgkB,OAAOQ,WAAW3jB,EAAI+jB,WAC/B5kB,KAAKyjB,SAAU,GARXzjB,KAAKgkB,OAAO7c,WA/ER6I,EAAA,CAAXiU,EAAA,iCACWjU,EAAA,CAAXiU,EAAA,oCACWjU,EAAA,CAAXiU,EAAA,gCAEWjU,EAAA,CAAXiU,EAAA,mCACSjU,EAAA,CAATiU,EAAA,6BAMWjU,EAAA,CAAXiU,EAAA,gCACWjU,EAAA,CAAXiU,EAAA,0VChBL,MAAMzN,EAAM,KACNqO,EAAK,KAEJ,MAAeC,EAclBtlB,YAAYwU,EAAO9T,EAAa6kB,GAYxB/kB,KAAAglB,UAAsC,GAX1ChlB,KAAKgU,GAAKA,EACVhU,KAAKE,KAAOA,EACZF,KAAK+kB,OAASA,EACd/kB,KAAKilB,IAAMjlB,KAAKE,KAAKglB,QAAQ,MAAQ,EACrCllB,KAAKmQ,MAAQnQ,KAAKgU,GAAG7D,MAVzBgV,YAAoB,OAAOnlB,KAAKolB,OAASplB,KAAKE,KAkB9CV,SAASuC,QACOR,IAARQ,IAAmBA,EAAM,KAC7B,IAAIlB,EAAMb,KAAKglB,UAAUjjB,GACzB,QAAYR,IAARV,EAAmB,CACnB,IAAIQ,EACJ,GAAY,MAARU,EAAaV,EAASrB,KAAKqB,YAC1B,QAAuBE,IAAnBvB,KAAKsB,UAAyB,CACnC,IAAIA,EAAYtB,KAAKsB,UAAU0G,KAAKC,GAAKA,EAAE/H,OAAS6B,QAClCR,IAAdD,IAAyBD,EAASC,EAAUD,aAE/C,QAAqBE,IAAjBvB,KAAKqlB,QAAuB,CACjC,IAAI/jB,EAAYtB,KAAKqlB,QAAQrd,KAAKC,GAAKA,EAAE/H,OAAS6B,QAChCR,IAAdD,IAAyBD,EAASC,EAAUD,QAEpD,QAAeE,IAAXF,EAAsB,MAAO,GACjCR,EAAM,GACN,IAAK,IAAIykB,KAAKjkB,EAAQR,EAAIykB,EAAEplB,MAAQolB,EACpCtlB,KAAKglB,UAAUjjB,GAAOlB,EAE1B,OAAOA,EAGErB,qDACT,QAAoB+B,IAAhBvB,KAAKulB,OAAsB,OAC/B,IAAIA,QAAevlB,KAAKgU,GAAGwR,iBAAiBxlB,KAAKE,MACjDF,KAAKylB,UAAUF,GACfvlB,KAAK0lB,oBAGFlmB,UAAU+lB,GACb,QAAehkB,IAAXgkB,EAAsB,OAC1B,QAAoBhkB,IAAhBvB,KAAKulB,OAAsB,OAC/BvlB,KAAKulB,OAASA,EACd,IAAIrlB,KAACA,GAAQqlB,EACTrlB,IAASF,KAAKE,OAAMF,KAAKolB,MAAQllB,GAIlCV,kBACH,IAAI6B,OAACA,EAAMM,KAAEA,EAAI0jB,QAAEA,GAAWrlB,KAAKulB,OACnCvlB,KAAKgU,GAAG2R,eAAe3lB,KAAKqB,OAASA,GACrCrB,KAAKgU,GAAG4R,mBAAmB5lB,KAAKsB,UAAYK,EAAMN,GAClDrB,KAAKgU,GAAG4R,mBAAmB5lB,KAAKqlB,QAAUA,EAAShkB,GAGvD7B,kBACI,OAAOkO,KAAKC,UAAU3N,KAAKulB,OAAQ,CAACje,EAAY+Q,KAC5C,GAAY,UAAR/Q,EACJ,OAAO+Q,GACR,GAGP7Y,aAAaqmB,EAAkBC,GAC3B,QAAoBvkB,IAAhBvB,KAAKulB,OAAsB,OAC/B,IAAIlkB,OAACA,EAAMM,KAAEA,GAAQ3B,KAAKulB,OACtBQ,EAAW/lB,KAAKgU,GACpB,SAASgS,EAAQC,EAAWC,GACxB,QAAiB3kB,IAAb2kB,EAAwB,OAC5B,IAAIZ,EAAIY,EAASle,KAAKC,GAAKA,EAAE/H,OAAS+lB,GACtC,YAAU1kB,IAAN+jB,EACGS,EAASC,QAAQV,EAAEljB,WAD1B,EAGJ,IAAI6jB,EAAKJ,EAAUM,cACnB,QAAgB5kB,IAAZukB,EAAuB,OAAOE,EAAQC,EAAI5kB,GAC9C,QAAaE,IAATI,EAAoB,OACxB,IAAIykB,EAAKN,EAAQK,cACbpkB,EAAOJ,EAAqBqG,KAAKC,GAAKA,EAAE/H,OAASkmB,GACrD,YAAY7kB,IAARQ,EACGikB,EAAQC,EAAIlkB,EAAIV,aADvB,EAIM7B,YAAY2c,GAClB,IAAI7I,EAAS,GACTjS,EAASrB,KAAKqB,YACHE,IAAXF,GAAsBrB,KAAKqmB,kBAAkB/S,EAAQjS,EAAQ8a,GACjE,IAAIxa,EAAO3B,KAAKsB,UAChB,QAAaC,IAATI,EACA,IAAK,IAAII,KAAOJ,EAAM,CAClB,IAAIzB,KAACA,EAAImB,OAAEA,GAAUU,EAErB,QAAkBR,IADI4a,EAAOjc,GACA,SAC7B,IAAIomB,EAAY,GAChBhT,EAAOpT,GAAQomB,EACf,IAAK,IAAIC,KAAMpK,EAAQ,CACnB,IAAIqK,EAAY,GAChBxmB,KAAKqmB,kBAAkBG,EAAWnlB,EAAQklB,GAC1CD,EAAU9gB,KAAKghB,IAI3B,OAAOlT,EAGH9T,kBAAkB8T,EAAYjS,EAAgB8a,GAClD,IAAK,IAAIja,KAASb,EAAQ,CACtB,IAEI8P,GAFAjR,KAACA,GAAQgC,EACTpE,EAAIqe,EAAOjc,GAEf,cAAepC,GACX,QAASqT,EAAMrT,EAAG,MAClB,IAAK,SACD,IAAIsE,EAAOF,EAAMC,MACOgP,OAAX5P,IAATa,EAA0BtE,EAAEwF,GACrBlB,EAAKqkB,aAAa3oB,GAGrCwV,EAAOpT,GAAQiR,GAIvB3R,KAAK0S,GACD,IAAIrR,EAAe,GACfQ,EAASrB,KAAKqB,YACHE,IAAXF,GAAsBrB,KAAK0mB,QAAQ7lB,EAAKQ,EAAQ6Q,GACpD,IAAIvQ,EAAO3B,KAAKsB,UAChB,QAAaC,IAATI,EACA,IAAK,IAAII,KAAOJ,EACZ3B,KAAK2mB,QAAQ9lB,EAAKkB,EAAIV,OAAQ6Q,EAAKnQ,EAAI7B,OAG/C,OAAOW,EAAIib,KAAK,IAGZtc,OAAOonB,EAAS1kB,GACpB,IAAIpE,EAAI8oB,EAAI1kB,EAAMhC,MAClB,cAAepC,GACX,QAAS,OAAOA,EAChB,IAAK,SACD,IAAIsE,EAAOF,EAAMC,MACjB,YAAaZ,IAATa,EAA2BtE,EAAEwF,GAC1BlB,EAAKqkB,aAAa3oB,GAC7B,IAAK,SACD,IAAI+J,EAAM/J,EAAE0I,OACRqgB,EAAI,GAAIlf,EAAI,EAChB,IAAK,IAAIC,EAAE,EAAEA,EAAEC,EAAID,IAAK,CAEpB,OADQ9J,EAAEgpB,WAAWlf,IAEjB,KAAK,EAAGif,GAAK/oB,EAAEsO,UAAUzE,EAAGC,GAAK,MAAOD,EAAIC,EAAE,EAAG,MACjD,KAAK,GAAIif,GAAK/oB,EAAEsO,UAAUzE,EAAGC,GAAK,MAAOD,EAAIC,EAAE,GAGvD,OAAOif,EAAI/oB,EAAEsO,UAAUzE,GAC3B,IAAK,YAAa,MAAO,IAIzBnI,QAAQ8T,EAAiBjS,EAAgB6Q,GAC7C,IAAIrK,EAAMxG,EAAOmF,OACjB,GAAY,IAARqB,EAAW,OACf,IAAIhH,EAAM,GACVA,GAAOb,KAAK+mB,OAAO7U,EAAM7Q,EAAO,IAChC,IAAK,IAAIuG,EAAE,EAAEA,EAAEC,EAAID,IAAK,CACpB,IAAI0d,EAAIjkB,EAAOuG,GACf/G,GAAO2V,EAAMxW,KAAK+mB,OAAO7U,EAAMoT,GAEnChS,EAAO9N,KAAK3E,EAAMgkB,GAGdrlB,QAAQ8T,EAAiBjS,EAAgB6Q,GAC7C,QAAa3Q,IAAT2Q,EACA,IAAK,IAAI0U,KAAO1U,EACZlS,KAAK0mB,QAAQpT,EAAQjS,EAAQulB,GAGrCtT,EAAO9N,KAAKqf,GAENrlB,mBAAmBiB,EAAYY,GACrC,IAAK,IAAIikB,KAAKjkB,EAAmB,CAC7B,IAAInB,KAACA,EAAIiC,MAAEA,GAASmjB,EACpB,QAAc/jB,IAAVY,EAAqB,SACzB,IAAImB,EAAK7C,EAAOP,GAEhBO,EAAOP,GAAQiC,EAAM6kB,MAAM1jB,IAIzB9D,sBAAsBiB,EAAqBY,GACjD,QAAeE,IAAXF,EAAsB,OAAOZ,EAEjC,IAAII,EAAY,GACZgH,EAAOpH,EAAkB+F,OACzBmB,EAAI,EACR,KAAOA,EAAEE,GAAK,CAEV,GAAW,KADDpH,EAAkBqmB,WAAWnf,GACxB,GACTA,EACF,MAEJ,IAAIif,EAAM,GACVjf,EAAI3H,KAAKinB,UAAUL,EAAKvlB,EAAQZ,EAAkBkH,GAClD9G,EAAI2E,KAAKohB,GAEb,OAAO/lB,EAGXrB,YAAY0S,GACR,IAAIrR,EAAM,GAENQ,EAASrB,KAAKqB,OACdsG,EAAI,OACOpG,IAAXF,IAAsBsG,EAAI3H,KAAKinB,UAAUpmB,EAAKQ,EAAQ6Q,EAAMvK,IAChE,IAAIhG,EAAO3B,KAAKsB,UAChB,QAAaC,IAATI,EACA,IAAK,IAAII,KAAOJ,EACZgG,EAAI3H,KAAKknB,UAAUrmB,EAAKkB,EAAKmQ,EAAMvK,GAG3C,OAAO9G,EAGXrB,cAAc0S,GACV,IAAIrR,EAAM,GAGN8G,EAAI,EAEJhG,EAAO3B,KAAKqlB,QAChB,QAAa9jB,IAATI,EACA,IAAK,IAAII,KAAOJ,EAEZgG,EAAI3H,KAAKknB,UAAUrmB,EAAKkB,EAAKmQ,EAAMvK,GAG3C,OAAO9G,EAGDrB,UAAUqB,EAASQ,EAAgB6Q,EAAavK,GACtD,IAAIwf,EAAM,EAAGC,EAAK,EAAGxR,EAAIjO,EAAGC,EAAI,EAAGC,EAAMqK,EAAK1L,OAAQ6gB,EAAOhmB,EAAOmF,OACpE,KAAMmB,EAAEE,EAAIF,IAGR,GAFAwf,EAAMC,EAEK,KADXA,EAAKlV,EAAK4U,WAAWnf,IACP,CACV,IAAI2d,EAAIjkB,EAAOuG,IACX1H,KAACA,GAAQolB,EACb,GAAY,IAAR6B,GACA,GAAIxf,EAAEiO,EAAG,CACL,IAAI3N,EAAIiK,EAAK9F,UAAUwJ,EAAGjO,GAC1B9G,EAAIX,GAAQF,KAAKsnB,GAAGzmB,EAAKoH,EAAGqd,SAIhCzkB,EAAIX,GAAQ,KAIhB,GAFA0V,EAAIjO,EAAE,IACJC,GACKyf,EAAM,EACT1f,EAAIuK,EAAKgT,QAAQ,KAAMtP,KACd,IAAKjO,EACTA,EAAIE,EACT,YAGH,GAAW,KAAPuf,EAAW,CAChB,IAAI9B,EAAIjkB,EAAOuG,IACX1H,KAACA,GAAQolB,EACb,GAAY,IAAR6B,GACA,GAAIxf,EAAEiO,EAAG,CACL,IAAI3N,EAAIiK,EAAK9F,UAAUwJ,EAAGjO,GAC1B9G,EAAIX,GAAQF,KAAKsnB,GAAGzmB,EAAKoH,EAAGqd,SAIhCzkB,EAAIX,GAAQ,OAEdyH,IACAC,EACF,MAGR,OAAOD,EAGHnI,GAAGqB,EAASoH,EAAUqd,GAC1B,OAAQA,EAAE/c,MACN,QAAS,OAAON,EAChB,IAAK,WACL,IAAK,OAED,OADW,IAAIjD,KAAKuG,OAAOtD,IAE/B,IAAK,OACD,IAAIsJ,EAAQtJ,EAAEuJ,MAAM,KACpB,OAAO,IAAIxM,KAAKuG,OAAOgG,EAAM,IAAKhG,OAAOgG,EAAM,IAAI,EAAGhG,OAAOgG,EAAM,KACvE,IAAK,UACL,IAAK,WACL,IAAK,MACL,IAAK,SACL,IAAK,MACD,OAAOhG,OAAOtD,GAClB,IAAK,KACD,IAAI3E,EAAKiI,OAAOtD,IACZ9F,MAACA,GAASmjB,EACd,YAAc/jB,IAAVY,EAA4BmB,EACzBnB,EAAM6kB,MAAM1jB,IAIvB9D,UAAUqB,EAASkB,EAAemQ,EAAavK,GACnD,IAAI4f,EAAa,GAAI1f,EAAMqK,EAAK1L,QAC5BtG,KAACA,EAAImB,OAAEA,GAAUU,EACrB,KAAO4F,EAAEE,GAAK,CAEV,GAAW,KADFqK,EAAK4U,WAAWnf,GACV,GACTA,EACF,MAEJ,IAAIwJ,EAAM,GACVoW,EAAK/hB,KAAK2L,GACVxJ,EAAI3H,KAAKinB,UAAU9V,EAAK9P,EAAQ6Q,EAAMvK,GAG1C,OADA9G,EAAIX,GAAQqnB,EACL5f,2RClVf,MAAM6f,EAAe,IAEd,MAAMC,EAOTjoB,YAAYkoB,GANJ1nB,KAAA2nB,MAAkB,GAClB3nB,KAAA4nB,MAAQC,EAAA,EAAW5e,IAAI,GAAI,CAACkb,MAAM,IAEhCnkB,KAAA8nB,WAAuB,GA+GvB9nB,KAAA+nB,aAAiBxmB,EA3GvBvB,KAAK0nB,UAAYA,EAGrBloB,MAAM8D,EAAW0kB,GACb,QAAWzmB,IAAP+B,GAA2B,IAAPA,IACH,IAAjBxD,OAAAmoB,EAAA,SAAAnoB,CAASwD,GACb,IAA2B,IAAvBtD,KAAK4nB,MAAMM,IAAI5kB,GAOnB,GAHAtD,KAAK0nB,UAAUS,YAAmB,IAARH,EAAa,GAAG,IAE1ChoB,KAAK4nB,MAAMvhB,IAAI/C,EAAIA,GACftD,KAAK8nB,WAAWhG,UAAU7Z,GAAKA,IAAM3E,IAAO,EAC5CtD,KAAKooB,WAAW9kB,OADpB,CAKA,GAAItD,KAAK2nB,MAAMnhB,QAAUghB,EAAc,CAEnC,IAAIX,EAAI7mB,KAAK2nB,MAAMU,QACnB,GAAIxB,IAAMvjB,EAGN,YADAtD,KAAK2nB,MAAMniB,KAAKqhB,GAKpB,IAA0B,IAAtB7mB,KAAK4nB,MAAMM,IAAIrB,GAEf7mB,KAAK4nB,MAAMU,OAAOzB,OAEjB,CAED,IAAI3d,EAAQlJ,KAAK8nB,WAAWhG,UAAU7Z,GAAKA,IAAM4e,GACjD7mB,KAAK8nB,WAAWnD,OAAOzb,EAAO,IAGtClJ,KAAK8nB,WAAWtiB,KAAKlC,GACrBtD,KAAK2nB,MAAMniB,KAAKlC,QAhCZtD,KAAKooB,WAAW9kB,GAoChB9D,WAAW8D,GACf,IAAI4F,EAAQlJ,KAAK2nB,MAAM7F,UAAU7Z,GAAKA,IAAM3E,GAC5CtD,KAAK2nB,MAAMhD,OAAOzb,EAAO,GACzBlJ,KAAK2nB,MAAMniB,KAAKlC,GAGpB9D,SAAS8D,GACL,OAAOtD,KAAK4nB,MAAM3d,IAAI3G,GAG1B9D,YAAY8D,GACR,IAAIilB,EACJ,cAAejlB,GACX,IAAK,SAAUilB,EAAOjlB,EAAaA,GAAI,MACvC,IAAK,SAAUilB,EAAMjlB,EAAc,MACnC,QAAS,OAEb,OAAOtD,KAAKgD,SAASulB,GAGzB/oB,WAAW8D,GACPtD,KAAK4nB,MAAMU,OAAOhlB,GAClB,IAAI4F,EAAQlJ,KAAK2nB,MAAM7F,UAAU7Z,GAAKA,IAAM3E,GAC5CtD,KAAK2nB,MAAMhD,OAAOzb,EAAO,GACzBlJ,KAAKwD,MAAMF,GAGf9D,WAAW2R,GACP,QAAY5P,IAAR4P,EAAmB,OAAO,EAC9B,IAAI7N,EAAKtD,KAAKymB,aAAatV,GAC3B,QAAW5P,IAAP+B,EAAkB,OAAO,EAC7B,IAAI4F,EAAQlJ,KAAK8nB,WAAWhG,UAAU7Z,GAAKA,IAAM3E,GAIjD,OAHI4F,GAAO,GAAGlJ,KAAK8nB,WAAWnD,OAAOzb,EAAO,GAE5ClJ,KAAK4nB,MAAMvhB,IAAI/C,EAAI6N,IACZ,EAED3R,aAAa2R,GAAU,OAAOnR,KAAK0nB,UAAUjB,aAAatV,GAY9D3R,mDACF,GAA+B,IAA3BQ,KAAK8nB,WAAWthB,OAAc,OAClC,IAAIgiB,QAAmBxoB,KAAKyoB,gBACtBzoB,KAAK0oB,cAAcF,KAGfhpB,cAAcgpB,2CACxB,QAAmBjnB,IAAfinB,EAA0B,OAC9B,IAAIG,EAAQ3oB,KAAK4oB,cAAcJ,GAC/B,IAAK,IAAI9P,KAAaiQ,GACiB,IAA/B3oB,KAAK6oB,WAAWnQ,IACpB1Y,KAAK8oB,qBAAqBpQ,KAKlBlZ,kDAEZ,aADgBQ,KAAK0nB,UAAUqB,YAAY/oB,KAAK+nB,QAAS/nB,KAAK8nB,cAGxDtoB,cAAciB,GACpB,OAAOT,KAAK0nB,UAAUkB,cAAcnoB,GAE9BjB,qBAAqBkZ,GAC3B1Y,KAAK0nB,UAAUoB,qBAAqBpQ,GAGlClZ,UAAU8D,2CAEZ,cADUtD,KAAK4nB,MAAM3d,IAAI3G,IAErB,IAAK,SAAU,OACf,IAAK,SAAUtD,KAAK4nB,MAAMvhB,IAAI/C,EAAIA,GAEtC,IAAIzC,QAAYb,KAAK0nB,UAAUqB,YAAY/oB,KAAK+nB,QAAS,CAACzkB,UACpDtD,KAAK0oB,cAAc7nB,MAI1B,MAAMmoB,UAAmBvB,EAI5BjoB,YAAYkoB,EAAqBuB,GAC7BppB,MAAM6nB,GACN1nB,KAAKipB,IAAMA,EACXjpB,KAAK+nB,QAAUkB,EAAI/oB,KAEbV,aAAa2R,GAAU,OAAOnR,KAAKipB,IAAIxC,aAAatV,GACpD3R,cAAciB,GACpB,OAAOT,KAAKipB,IAAIL,cAAcnoB,GAExBjB,qBAAqBkZ,GAC3B1Y,KAAKipB,IAAIH,qBAAqBpQ,6QCzJ/B,MAAMwQ,EAGT1pB,YAAY4C,GADZpC,KAAA6C,gBAAmBtB,EAEfvB,KAAKoC,KAAOA,EAGhB5C,MAAM8D,GACF,OAAOtD,KAAKoC,KAAK4kB,MAAM1jB,GAE3B9D,aAAa6e,GACT,OAAOre,KAAKoC,KAAKqkB,aAAapI,GAElC7e,MAAM8D,GACF,OAAOtD,KAAKoC,KAAKoB,MAAMF,GAErB9D,mDACF2pB,MAAM,+BAIP,MAAMC,UAAmBF,EAG5B1pB,YAAY4C,EAAY6mB,EAAcpmB,GAClChD,MAAMuC,GACNpC,KAAKipB,IAAMA,EACXjpB,KAAK6C,WAAaA,EAGtBrD,MAAM8D,GACF,OAAOtD,KAAKipB,IAAIjC,MAAM1jB,GAE1B9D,aAAa6e,GACT,OAAOre,KAAKipB,IAAIxC,aAAapI,GAEjC7e,MAAM8D,GACF,OAAOtD,KAAKipB,IAAIzlB,MAAMF,4RCtCvB,MAAM+lB,EASThL,UACI,OAAOre,KAAKoC,KAAKknB,YAAYtpB,KAAKsD,IAGtC9D,YAAY4C,EAAYkB,GACpBtD,KAAKoC,KAAOA,EACZpC,KAAKsD,GAAKA,EAGd9D,OAAOG,EAAcM,GACjB,QAAgBsB,IAAZvB,KAAKsD,IAAgC,OAAZtD,KAAKsD,GAAa,OAC/C,IAAIimB,EAAUvpB,KAAKupB,UACfpY,EAAMnR,KAAKqe,IACf,IAA2B,IAAvBre,KAAKwpB,cACL,YAAWjoB,IAAP5B,EAAyBA,EAAGwR,EAAKlR,GAC9BH,OAAAoZ,EAAA,gBAAApZ,CAAgBqR,EAAKlR,GAEhC,cAAekR,GACX,IAAK,YACD,OAAOyH,EAAA,qBAAKlT,UAAU,iBAAiB6jB,gBAC3C,IAAK,SACD,OAAO3Q,EAAA,qBAAKlT,UAAU,iBAAiB6jB,MAAUvpB,KAAKsD,IAK9D,QAHW/B,IAAP5B,IACAA,EAAKK,KAAKL,WAEH4B,IAAP5B,EAAkB,CAClB,IAAIkB,EAAMlB,EAAGwR,EAAKnR,KAAKJ,OACvB,YAAY2B,IAARV,EAA0BA,EACvB+X,EAAA,qBAAKlT,UAAU,eAAe6jB,MAAUvpB,KAAKsD,IAGxD,OAAOxD,OAAAoZ,EAAA,gBAAApZ,CAAgBqR,GAG3B3R,UAAkB,OAAOQ,KAAKoC,KAAKlC,KAEnCV,cAAwB,YAAqB+B,IAAdvB,KAAKoC,KACpC5C,KAAiB,OAAOQ,KAAKoC,KAAKzC,GAClCH,MAAY,OAAOQ,KAAKoC,KAAKxC,IAEvBJ,uDACIQ,KAAKoC,KAAKqnB,UAAUzpB,KAAKsD,OAIhC,MAAMomB,UAAiBL,EAE1B7pB,YAAY4C,EAAY6mB,EAAc3lB,GAClCzD,MAAMuC,EAAMkB,GACZtD,KAAKipB,IAAMA,EAEf5K,UACI,OAAOre,KAAKipB,IAAIK,YAAYtpB,KAAKsD,IAErC9D,UAAkB,OAAOQ,KAAKipB,IAAI/oB,KAElCV,cAAwB,YAAoB+B,IAAbvB,KAAKipB,IACpCzpB,KAAiB,OAAOQ,KAAKipB,IAAItpB,GACjCH,MAAY,OAAOQ,KAAKipB,IAAIrpB,IAEtBJ,uDACIQ,KAAKipB,IAAIQ,UAAUzpB,KAAKsD,gRCtE/B,MAAMqmB,UAAgB7E,EAUzBtlB,YAAYwU,EAAQ5R,EAAiBlC,GACjCL,MAAMmU,EAAI9T,EAAM,GAVXF,KAAAG,SAAW,MAWhBH,KAAKoC,KAAOA,EACZpC,KAAK4pB,OAAS,KACd5pB,KAAK6pB,QAAU,IAAIb,EAAW5mB,EAAMpC,MAGxCoc,YAAa,OAAOpc,KAAKoC,KAQzB5C,SAASG,EAAQC,GACbI,KAAKL,GAAKA,GAAMA,EAAG6C,QACnBxC,KAAKJ,IAAMA,EAGfJ,kBACIK,MAAM6lB,kBACN,IAAIoE,WAACA,GAAc9pB,KAAKulB,OAExBvlB,KAAKgU,GAAG2R,eAAe3lB,KAAK+pB,YAAcD,GAG9CtqB,aAAaqD,GACT,OAAO,IAAIumB,EAAWppB,KAAKoC,KAAMpC,KAAM6C,GAG3CrD,aAAa6e,GAAiB,OAAOA,EAAIre,KAAK4pB,QAC9CpqB,WAAW6Y,GACPrY,KAAK6pB,QAAQhB,WAAWxQ,GAG5B7Y,MAAM8D,EAAW0kB,GACbhoB,KAAK6pB,QAAQrmB,MAAMF,EAAI0kB,GAG3BxoB,MAAM8D,GACF,MAAkB,kBAAPA,EAAwBA,GACnCtD,KAAKwD,MAAMF,GACJ,IAAIomB,EAAS1pB,KAAKoC,KAAMpC,KAAMsD,IAGzC9D,YAAY8D,GACR,OAAOtD,KAAK6pB,QAAQ7mB,SAASM,GAG3B9D,UAAU8D,iDACNtD,KAAK6pB,QAAQG,UAAU1mB,KAG3B9D,yDACIQ,KAAK6pB,QAAQI,aAGvBzqB,qBAAqBiB,GACjB,IAAIY,EAASrB,KAAKulB,OAAOlkB,OACzBrB,KAAKkqB,mBAAmBzpB,EAAQY,GAGpC7B,cAAciB,GACV,OAAOT,KAAKmqB,sBAAsB1pB,EAAQT,KAAK+pB,uRCpEhD,MAAeK,UAAatF,EAO/BtlB,YAAYwU,EAAO9T,EAAa6kB,GAC5BllB,MAAMmU,EAAI9T,EAAM6kB,GAPX/kB,KAAAG,SAAW,OAgCpBH,KAAAqqB,UAAW,EAtBJ7qB,UAAU+lB,GACb1lB,MAAM4lB,UAAUF,GAChB,IAAIjiB,GAACA,GAAMiiB,EACXvlB,KAAK4pB,OAAStmB,EAGlB9D,eACI,OAAO,IAAI0pB,EAAQlpB,MAGvBR,SAASG,EAAQC,GAEbI,KAAKL,GAAKA,EAAG6C,QACbxC,KAAKJ,IAAMA,EAGfJ,aAAa6e,GAAiB,OAAOA,EAAIre,KAAK4pB,QAK9CpqB,aAaG,MAAM8qB,UAAkBF,EAA/B5qB,kCACYQ,KAAA6pB,QAAmB,IAAIpC,EAAQznB,MAIhCR,UAAU+lB,GACb1lB,MAAM4lB,UAAUF,GAChB,IAAI5jB,KAACA,GAAQ4jB,EACb,QAAahkB,IAATI,EAAoB,CACpB3B,KAAKuqB,KAAO,GACZ,IAAK,IAAIxoB,KAAOJ,EAAM,CAClB,IAAIzB,KAACA,GAAQ6B,EACTyoB,EAAU,IAAIb,EAAQ3pB,KAAKgU,GAAIhU,KAAME,GACzCF,KAAKuqB,KAAKrqB,GAAQsqB,EAClBA,EAAQ/E,UAAU1jB,GAClByoB,EAAQ9E,oBAKpBlmB,SAASG,EAAQC,GAEb,GADAC,MAAM4qB,SAAS9qB,EAAIC,QACD2B,IAAdvB,KAAKuqB,KAAoB,OAE7B,IAAIG,EAAS/qB,EAAG4qB,KAChB,QAAehpB,IAAXmpB,EACJ,IAAK,IAAI9iB,KAAK5H,KAAKuqB,KACfvqB,KAAKuqB,KAAK3iB,GAAG6iB,SAASC,EAAO9iB,GAAIhI,GAIzCJ,MAAM8D,EAAW0kB,GACbhoB,KAAK6pB,QAAQrmB,MAAMF,EAAI0kB,GAE3BxoB,MAAM8D,GACF,MAAkB,kBAAPA,EAAwBA,GACnCtD,KAAKwD,MAAMF,GACJ,IAAI+lB,EAAMrpB,KAAMsD,IAE3B9D,YAAY8D,GAAY,OAAOtD,KAAK6pB,QAAQ7mB,SAASM,GAC/C9D,UAAU8D,iDACNtD,KAAK6pB,QAAQG,UAAU1mB,KAGjC9D,WAEI,GADAQ,KAAK6pB,QAAQI,gBACK1oB,IAAdvB,KAAKuqB,KACT,IAAK,IAAI3iB,KAAK5H,KAAKuqB,KAAMvqB,KAAKuqB,KAAK3iB,GAAGqiB,WAE1CzqB,WAAWwoB,GAAehoB,KAAKgU,GAAGmU,WAAWH,GAC7C2C,aAAsB,YAAmBppB,IAAZvB,KAAKuqB,KAClC/qB,IAAIU,GACA,OAAOF,KAAKuqB,MAAQvqB,KAAKuqB,KAAKrqB,GAE5BV,YAAYuoB,EAAgBtL,2CAC9B,aAAazc,KAAKmQ,MAAMya,QAAQ5qB,KAAKE,KAAM6nB,EAAStL,KAElDjd,KAAK8D,2CACP,QAAW/B,IAAP+B,GAA2B,IAAPA,EAAU,OAChB,kBAAPA,IAAiBA,EAAKA,EAAGA,IACpC,IAAI7C,QAAeT,KAAKmQ,MAAM0a,QAAQ7qB,KAAKE,KAAMoD,GACjD,QAAe/B,IAAXd,EAAJ,CACA,IAAK,IAAI6kB,KAAKtlB,KAAKulB,OAAOlkB,OAAQ,CAC9B,IAAIe,KAACA,GAAQkjB,EACb,QAAa/jB,IAATa,EAAoB,SACxB,IAAIqU,EAAIzW,KAAKgU,GAAGgS,QAAQ5jB,GACxB,QAAUb,IAANkV,EAAiB,SACrB,IAAIuM,EAAIsC,EAAEplB,KACVO,EAAOuiB,GAAKvM,EAAEuQ,MAAMvmB,EAAOuiB,IAK/B,OAFAhjB,KAAK6pB,QAAQhB,WAAWpoB,GACxBT,KAAK8oB,qBAAqBroB,GACnBA,KAGXjB,qBAAqBiB,GACjB,IAAIY,OAACA,EAAMM,KAAEA,GAAQ3B,KAAKulB,OAE1B,GADAvlB,KAAKkqB,mBAAmBzpB,EAAQY,QACnBE,IAATI,EACA,IAAK,IAAII,KAAOJ,EAAqB,CACjC,IAAIzB,KAACA,EAAImB,OAAEA,GAAUU,EACjB+oB,EAAYrqB,EAAOP,GACvB,QAAkBqB,IAAdupB,EAAyB,SAC7B,IAAIN,EAAUxqB,KAAKipB,IAAI/oB,GACvB,IAAK,IAAI0mB,KAAOkE,EAGZN,EAAQ3B,WAAWjC,GACnB5mB,KAAKkqB,mBAAmBtD,EAAKvlB,IAMtC7B,kBACHK,MAAM6lB,kBACN,IAAIoE,WAACA,GAAc9pB,KAAKulB,OAExBvlB,KAAKgU,GAAG2R,eAAe3lB,KAAK+pB,YAAcD,GAAc9pB,KAAKqB,QAGjE7B,cAAciB,GACV,OAAOT,KAAKmqB,sBAAsB1pB,EAAQT,KAAK+pB,aAG7CvqB,KAAK8D,EAAWkB,2CAClB,IAAInD,OAACA,GAAUrB,KAAKulB,OAChBpJ,EAAa,CAAC4O,IAAKznB,GACvB,IAAK,IAAIpB,KAASb,EAAmB,CACjC,IAAInB,KAACA,EAAIkC,KAAEA,EAAImG,KAAEA,GAAQrG,EACrBiP,EAAM3M,EAAMtE,GAChB,QAAaqB,IAATa,EACmB,kBAAR+O,GACK,OAARA,IAAcA,EAAMA,EAAI7N,SAIhC,OAAQiF,GACJ,IAAK,OACL,IAAK,WAGD4I,GADAA,GADAA,EAAM,IAAInM,KAAKmM,GAAK6Z,eACEpc,QAAQ,IAAK,MACbA,QAAQ,IAAK,IAI/CuN,EAAOjc,GAAQiR,EAGnB,aADgBnR,KAAKmQ,MAAM8a,SAASjrB,KAAKE,KAAMic,KAG7C3c,OAAO8H,EAAY+U,EAAyBC,2CAE9C,aADsBtc,KAAKkrB,eAAU3pB,EAAW+F,EAAK+U,EAAWC,KAG9D9c,UAAU4c,EAAc9U,EAAY+U,EAAyBC,2CAC/D,IAAIjb,OAACA,GAAUrB,KAAKulB,OAChB4F,EAAMnrB,KAAKmQ,MACXtP,QAAYsqB,EAAIC,WAAWprB,KAAKE,UAAMqB,EAAW6a,EAAO9U,EAAK+U,EAAWC,GAC5E,IAAK,IAAIsK,KAAO/lB,EACZb,KAAKkqB,mBAAmBtD,EAAKvlB,GAEjC,OAAOR,IAELrB,QAAQuC,EAAYqa,EAAc9Y,2CACpC,QAAW/B,IAAP+B,GAA2B,IAAPA,EAAU,OAClC,IAAI6nB,EAAMnrB,KAAKmQ,MACf,aAAagb,EAAIE,WAAWrrB,KAAKE,KAAM6B,EAAKqa,EAAO9Y,KAEjD9D,QAAQuC,EAAYqa,EAAc9Y,EAAWkB,2CAC/C,IAAI2X,EAASrB,EAAAnI,EAAEC,MAAMpO,GAErB,OADA2X,EAAY,IAAI7Y,QACHtD,KAAKmQ,MAAMmb,YAAYtrB,KAAKE,KAAM6B,EAAKqa,EAAOD,KAGzD3c,OAAOuC,EAAYqa,EAAc9Y,EAAWiZ,2CAC9C,aAAavc,KAAKmQ,MAAMob,WAAWvrB,KAAKE,KAAM6B,EAAKqa,EAAO9Y,EAAIiZ,MAI/D,MAAMiP,UAAmBpB,EAG5B5qB,YAAYwU,EAAO9T,EAAa6kB,EAAe7R,GAC3CrT,MAAMmU,EAAI9T,EAAM6kB,GAOpB/kB,KAAAqqB,UAAW,EANPrqB,KAAKkT,KAAOA,EAGhB1T,QAAQkoB,GAAuB1nB,KAAK0nB,UAAYA,EAKhDloB,MAAM8D,GAAYtD,KAAK0nB,UAAUlkB,MAAMF,GACvC9D,MAAM8D,GAAkB,OAAOtD,KAAK0nB,UAAUV,MAAM1jB,GACpD9D,YAAY8D,GAAY,OAAOtD,KAAK0nB,UAAU4B,YAAYhmB,GACpD9D,UAAU8D,iDACNtD,KAAK0nB,UAAU+B,UAAUnmB,KAEnCqnB,aAAsB,OAAO3qB,KAAK0nB,UAAUiD,OAC5CnrB,IAAIU,GAAsB,OAAOF,KAAK0nB,UAAUuB,IAAI/oB,GAC9CV,KAAK8D,2CACP,aAAatD,KAAK0nB,UAAU5Q,KAAKxT,KAE/B9D,KAAK8D,EAAWkB,2CAClB,aAAaxE,KAAK0nB,UAAU+D,KAAKnoB,EAAIkB,KAEnChF,OAAO8H,EAAY+U,EAAyBC,2CAC9C,aAAatc,KAAK0nB,UAAUgE,OAAOpkB,EAAK+U,EAAWC,KAEjD9c,UAAU4c,EAAc9U,EAAY+U,EAAyBC,2CAC/D,aAAatc,KAAK0nB,UAAUwD,UAAU9O,EAAO9U,EAAK+U,EAAWC,KAE3D9c,QAAQuC,EAAYqa,EAAc9Y,2CACpC,aAAatD,KAAK0nB,UAAUiE,QAAQ5pB,EAAKqa,EAAO9Y,KAE9C9D,QAAQuC,EAAYqa,EAAc9Y,EAAWkB,iDACzCxE,KAAK0nB,UAAUkE,QAAQ7pB,EAAKqa,EAAO9Y,EAAIkB,KAE3ChF,OAAOuC,EAAYqa,EAAc9Y,EAAWiZ,iDACxCvc,KAAK0nB,UAAUmE,OAAO9pB,EAAKqa,EAAO9Y,EAAIiZ,+QCjQ7C,MAAMuP,UAAehH,EACxB3kB,eAAyB,MAAO,SAC1BX,OAAO0S,iDACHlS,KAAKO,aACX,IAAIkiB,EAAOziB,KAAK+rB,KAAK7Z,GACrB,aAAalS,KAAKmQ,MAAMgE,OAAOnU,KAAKE,KAAM,CAACgS,KAAKuQ,wRCUjD,MAAMuJ,UAAclH,EACvB3kB,eAAyB,MAAO,QAShCX,UAAU+lB,GACN1lB,MAAM4lB,UAAUF,GAChBvlB,KAAKisB,OAAS1G,EAAO0G,OAEzBzsB,MAAM6e,GACFre,KAAKisB,OAAS,GACd,IAAK,IAAIC,KAAM7N,EAAI8N,IACfnsB,KAAKisB,OAAOzmB,KAAK,CAACtF,KAAMgsB,EAAIE,aAAQ7qB,IAWpC/B,iBAAiBU,EAAame,GAClC,IAAIxd,EAAiB,CAACX,KAAKA,EAAMksB,QAAQ,IACrCA,EAAUvrB,EAAIurB,QAClB,IAAK,IAAIzkB,KAAK0W,EAAK,CACf,IAAIlK,EAAqB,CAACjU,KAAMyH,GAChCykB,EAAQ5mB,KAAK2O,GAEjB,OAAOtT,EAYLrB,KAAK6sB,EAAoBna,iDACrBlS,KAAKO,aACX,IAAI+C,GAACA,GAAMtD,KAAKgU,GACZyO,EAAOziB,KAAK+rB,KAAK7Z,GAGrB,aADgBlS,KAAKmQ,MAAMmc,UAAUtsB,KAAKE,KAAM,CAACqsB,IAAKjpB,EAAI+oB,YAAaA,EAAana,KAAKuQ,MAQvFjjB,OAAO8D,EAAWkpB,EAAavmB,EAAckO,2CAE/C,aADMnU,KAAKO,mBACEP,KAAKmQ,MAAMsc,YAAYzsB,KAAKE,KAAM,CAACoD,GAAGA,EAAIkpB,KAAKA,EAAMvmB,MAAMA,EAAOkO,OAAOA,MAElF3U,OAAO0S,GAEX,IACIwa,EADMxa,EAAK,GACC,GAGhB,MAAO,CACHwa,MAAOA,EACPxa,KAJYlS,KAAK2sB,YAAYD,EAAMxa,MAKnC0a,MAJQ1a,EAAK,IAOf1S,SAAS8D,iDACLtD,KAAKO,aACX,IAAIM,QAAYb,KAAKmQ,MAAM0c,SAAS7sB,KAAKE,KAAMoD,GAC/C,OAAsB,IAAlBzC,EAAI,GAAG2F,aAA2BxG,KAAK8sB,WAAWxpB,GAC/CtD,KAAK+sB,OAAOlsB,KAEjBrB,WAAW8D,iDACPtD,KAAKO,aACX,IAAIM,QAAYb,KAAKmQ,MAAM6c,aAAahtB,KAAKE,KAAMoD,GACnD,OAAOtD,KAAK+sB,OAAOlsB,KAGjBrB,YAAY6c,EAAkBC,2CAGhC,aAFMtc,KAAKO,mBACKP,KAAKmQ,MAAM8c,cAAcjtB,KAAKE,KAAM,CAACmc,UAAUA,EAAWC,SAASA,MAIjF9c,eAAeyG,EAAcoW,EAAkBC,2CAGjD,aAFMtc,KAAKO,mBACKP,KAAKmQ,MAAM+c,YAAYltB,KAAKE,KAAM,CAAC+F,MAAMA,EAAOoW,UAAUA,EAAWC,SAASA,MAGlG9c,uBAA8C,OAAO,IAAI2tB,EAAkBntB,MAErER,gEACIQ,KAAKO,aACX,IAAIM,QAAyBb,KAAKmQ,MAAMid,gBAAgBptB,KAAKE,MAC7D,OAAOF,KAAKisB,OAAOhjB,IAAIokB,IACnB,IAAIrK,EAAIqK,EAAEntB,KAAMotB,EAAQ,EACpBzG,EAAIhmB,EAAImH,KAAKC,GAAKA,EAAEhC,QAAU+c,GAElC,YADUzhB,IAANslB,IAAiByG,EAAQzG,EAAEyG,OACxB,CAACrnB,MAAO+c,EAAGsK,MAAOA,OAI3B9tB,SAASyG,EAAcoW,EAAkBC,2CAG3C,aAFMtc,KAAKO,mBACKP,KAAKmQ,MAAMod,SAASvtB,KAAKE,KAAM,CAAC+F,MAAMA,EAAOoW,UAAUA,EAAWC,SAASA,OAK5F,MAAM6Q,UAA0BK,EAAA,EAEnChuB,YAAYgQ,GACR3P,OAAM,GACNG,KAAKwP,MAAQA,EACbxP,KAAKsc,SAAW,GAEJ9c,KAAKuD,EAAWsZ,EAAeC,2CAE3C,aADgBtc,KAAKwP,MAAMie,eAAe1qB,EAAOsZ,EAAWC,KAGtD9c,aAAaiI,GACnBzH,KAAKqc,eAAqB9a,IAATkG,EAAoB,EAAIA,EAAKnE,6QC/I/C,MAAMoqB,UAAc5I,EACvB3kB,eAAyB,MAAO,QAUhCX,UAAU+lB,GACN1lB,MAAM4lB,UAAUF,GAChB,IAAIF,QAACA,GAAWE,EAEhBvlB,KAAK2tB,QAAUtI,QAAgE9jB,IAApD8jB,EAAkBrd,KAAKC,GAAgB,UAAXA,EAAE/H,MAG7DV,UAAUouB,EAAazR,GACnBnc,KAAKqc,eAAY9a,EACjBvB,KAAKsc,SAAWsR,EAChB5tB,KAAKmc,OAASA,EACdnc,KAAK0kB,MAAO,EACZ1kB,KAAK6tB,UAAOtsB,EAEhBusB,cAAe,OAAO9tB,KAAK0kB,KACrBllB,mDACF,QAAsB+B,IAAlBvB,KAAKsc,SACL,KAAM,gDAEV,IAAID,EACJ,QAAuB9a,IAAnBvB,KAAKqc,UACL,OAAQrc,KAAK+tB,WAAWxlB,MACpB,QAAS8T,EAAYrc,KAAKqc,UAAW,MACrC,IAAK,OACL,IAAK,OACL,IAAK,WAAYA,EAAarc,KAAKqc,UAAmBlX,UAG9D,IAAIsM,QAAazR,KAAKyR,KAAKzR,KAAKmc,OAAQE,EAAWrc,KAAKsc,SAAS,GAQjE,GADAtc,KAAK6tB,KAAOhG,EAAA,EAAW3D,MAAM,GAAI,CAACC,MAAM,SAC3B5iB,IAATkQ,EAAoB,CACpB,GAAIA,EAAKjL,OAASxG,KAAKsc,SAAU,CAC7Btc,KAAK0kB,MAAO,EACZjT,EAAK7L,MACL,IAAI/E,EAAMb,KAAKqlB,QAAQrd,KAAK6e,GAAgB,UAAXA,EAAE3mB,MACnCF,KAAK+tB,WAAaltB,EAAIQ,OAAO,GAC7BrB,KAAKqc,UAAY5K,EAAKA,EAAKjL,OAAO,GAAGxG,KAAK+tB,WAAW7tB,WAGrDF,KAAK0kB,MAAO,EAEhB1kB,KAAK6tB,KAAKroB,QAAQiM,MAKpBjS,KAAK2c,EAAYE,EAAeC,iDAC5Btc,KAAKO,aACX,IAAIX,QAAYI,KAAKmQ,MAAMsB,KAAKzR,KAAKE,KAAMmc,EAAWC,EAAS,EAAGtc,KAAKguB,YAAY7R,IAEnF,OADWnc,KAAKiuB,cAAcruB,GAClBsuB,QAEV1uB,MAAM2c,iDACFnc,KAAKO,aACX,IAAIX,QAAYI,KAAKmQ,MAAMge,MAAMnuB,KAAKE,KAAMF,KAAKguB,YAAY7R,IAE7D,OADWnc,KAAKiuB,cAAcruB,KAG5BJ,MAAM2c,2CACR,IAAItb,QAAYb,KAAKmuB,MAAMhS,GAC3B,IAAK,IAAIvU,KAAK/G,EACV,OAAOA,EAAI+G,KAGbpI,IAAI2c,2CACN,IAAItb,QAAYb,KAAKouB,MAAMjS,GAC3B,GAAItb,EAAI2F,OAAS,EAAG,OAAO3F,EAAI,KAE7BrB,OAAO2c,2CACT,IAAItb,QAAYb,KAAKqe,IAAIlC,GACzB,IAAK,IAAIvU,KAAK/G,EAAK,OAAOA,EAAI+G,oUAhFtBoI,CAAA,CAAX6X,EAAA,8BCVE,MAAMwG,UAAaX,EAA1BluB,kCAEcQ,KAAAsuB,aAAe,OADzBnuB,eAAyB,MAAO,QCD7B,MAAMouB,UAAgBb,EAA7BluB,kCAEcQ,KAAAsuB,aAAe,UADzBnuB,eAAyB,MAAO,2RCY7B,MAAMquB,UAAY1J,EAAzBtlB,kCAGIQ,KAAAosB,QAAsB,GACtBpsB,KAAAyuB,QAAsB,GAHtBtuB,eAAyB,MAAO,MAMhCX,UAAU+lB,GACN1lB,MAAM4lB,UAAUF,GAChBvlB,KAAK0uB,WAAa1uB,KAAKulB,OAAOrS,KAC9B,IAAIkZ,QAACA,EAAOqC,QAAEA,EAAOE,KAAEA,GAAQpJ,EAC/BvlB,KAAKgU,GAAG2R,eAAe3lB,KAAK2uB,KAAOA,GAEnC,IAAK,IAAI/mB,KAAKwkB,EAAS,CACnB,IAAIwC,EAAexC,EAAQxkB,IACvB1H,KAACA,GAAQ0uB,EACTza,EAASnU,KAAKgU,GAAG6a,UAAU3uB,OAAMqB,GACrC4S,EAAOsR,UAAUmJ,GACjBza,EAAOuR,kBACP1lB,KAAKosB,QAAQxkB,GAAKuM,EAEtB,IAAK,IAAIvM,KAAK6mB,EAAS,CACnB,IAAIK,EAAcL,EAAQ7mB,IACtB1H,KAACA,GAAQ4uB,EACTX,EAAQnuB,KAAKgU,GAAG+a,SAAS7uB,OAAMqB,GACnC4sB,EAAM1I,UAAUqJ,GAChBX,EAAMzI,kBACN1lB,KAAKyuB,QAAQ7mB,GAAKumB,GAIpB3uB,IAAIuD,2CAEN,aADM/C,KAAKO,mBACEP,KAAKosB,QAAQ4C,IAAIC,OAAOlsB,KAGnCvD,IAAIuD,2CAEN,aADM/C,KAAKO,mBACEP,KAAKosB,QAAQ8C,IAAID,OAAOlsB,KAGnCvD,8CAEF,aADMQ,KAAKO,mBACEP,KAAKyuB,QAAQtM,IAAIgM,MAAM,MAGlC3uB,KAAKuD,EAAWsZ,EAAeC,2CAEjC,aADMtc,KAAKO,mBACEP,KAAKyuB,QAAQhd,KAAKA,KAAK1O,EAAOsZ,EAAWC,KAGpD9c,MAAMuD,2CAER,aADM/C,KAAKO,mBACEP,KAAKyuB,QAAQN,MAAMA,MAAMprB,KAEpCvD,MAAM2c,2CACR,IAAItb,QAAYb,KAAKmuB,MAAMhS,GAC3B,IAAK,IAAIvU,KAAK/G,EACV,OAAOA,EAAI+G,KAGbpI,IAAI2c,2CACN,IAAItb,QAAYb,KAAKouB,MAAMjS,GAC3B,GAAItb,EAAI2F,OAAS,EAAG,OAAO3F,EAAI,KAE7BrB,OAAO2c,2CACT,IAAItb,QAAYb,KAAKqe,IAAIlC,GACzB,IAAK,IAAIvU,KAAK/G,EAAK,OAAOA,EAAI+G,MChF/B,MAAMunB,UAAgBzB,EAA7BluB,kCAEcQ,KAAAsuB,aAAe,UADzBnuB,eAAyB,MAAO,oRCW7B,SAASivB,EAAkB7mB,GAC9B,OAAQA,GACJ,IAAK,UACL,IAAK,WACL,IAAK,MACL,IAAK,SACL,IAAK,MACD,OAAO,EACX,IAAK,OACL,IAAK,OACD,MAAO,GACX,IAAK,WACL,IAAK,OACD,MAAO,WACX,IAAK,OACD,MAAO,QAiCnB,MAAM8mB,EAGF7vB,YAAYmpB,GAaJ3oB,KAAAyoB,QAAU,MACdzoB,KAAKsvB,kBACL,IAAK,IAAI1nB,KAAK5H,KAAK2oB,MAAO,CACX3oB,KAAK2oB,MAAM/gB,GACjBqiB,cAhBTjqB,KAAK2oB,MAAQA,EAGjBnpB,WAAWwoB,GACPhoB,KAAKsvB,kBACLtvB,KAAKuvB,WAAa5oB,WAAW3G,KAAKyoB,QAAST,GAEvCxoB,uBACoB+B,IAApBvB,KAAKuvB,aACT3oB,aAAa5G,KAAKuvB,YAClBvvB,KAAKuvB,gBAAahuB,IAWnB,MAAMiuB,EAgBThwB,YAAYiwB,EAAcC,GAflB1vB,KAAA2oB,MAA+B,GAC/B3oB,KAAAosB,QAAmC,GACnCpsB,KAAA2vB,OAAiC,GACjC3vB,KAAAyuB,QAAkC,GAClCzuB,KAAA4vB,MAA+B,GAC/B5vB,KAAA6vB,KAA6B,GAC7B7vB,KAAA8vB,UAAsC,GACtC9vB,KAAA+vB,SAAqC,GAwD7C/vB,KAAAgwB,QAAkB,GAClBhwB,KAAAiwB,UAAsB,GACtBjwB,KAAAkwB,SAAoB,GACpBlwB,KAAAmwB,SAAoB,GACpBnwB,KAAAowB,QAAkB,GAClBpwB,KAAAqwB,OAAgB,GAChBrwB,KAAAswB,WAAwB,GACxBtwB,KAAAuwB,WAAwB,GAtDpBvwB,KAAKyvB,MAAQA,EACbzvB,KAAKwwB,WAAa,IAAInB,EAAWrvB,KAAK2oB,OACtC,IAAIrlB,GAACA,EAAEwQ,QAAEA,EAAOC,OAAEA,EAAMwH,OAAEA,GAAUmU,EACpC1vB,KAAKsD,GAAKA,EACVtD,KAAKE,KAAO4T,EAAU,IAAMC,EAC5B,IAII8H,EAJA/P,EAAOC,SAASC,SAASF,KACzB2kB,OAAiBlvB,IAAPuK,GAA2B,KAAPA,EAC9B,SAAS,MAIT+P,EADW,OAAXN,QAA8Bha,IAAXga,GAAmC,MAAXA,EACrC,GAGAA,EAAO/J,MAAM,KAAKvI,IAAIhB,GAAKA,EAAEyoB,QAAQC,OAAO1oB,GAAKA,EAAEzB,OAAS,GAEpD,eAAdxG,KAAKE,KAGLF,KAAKmQ,MAAQ,IAAIygB,EAAA,EAASA,EAAA,EAAW5lB,MAGrChL,KAAKmQ,MAAQ,IAAIygB,EAAA,EAAMH,EAAS3c,EAASC,EAAQ8H,GAAK,GAK9Drc,KAAKU,GAAmB,OAAOF,KAAK2oB,MAAMzoB,EAAKimB,eAC/C3mB,QAAQU,EAAa+oB,GACjB,IAAI7mB,EAAOpC,KAAK2oB,MAAMzoB,EAAKimB,eAC3B,OAAO/jB,GAAQA,EAAK6mB,IAAIA,EAAI9C,eAEhC3mB,OAAOU,GAAqB,OAAOF,KAAKosB,QAAQlsB,EAAKimB,eACrD3mB,MAAMU,GAAoB,OAAOF,KAAK2vB,OAAOzvB,EAAKimB,eAClD3mB,MAAMU,GAAoB,OAAOF,KAAKyuB,QAAQvuB,EAAKimB,eACnD3mB,KAAKU,GAAmB,OAAOF,KAAK4vB,MAAM1vB,EAAKimB,eAC/C3mB,IAAIU,GAAkB,OAAOF,KAAK6vB,KAAK3vB,EAAKimB,eAC5C3mB,QAAQU,GAAsB,OAAOF,KAAK8vB,UAAU5vB,EAAKimB,eACzD3mB,QAAQU,GAAsB,OAAOF,KAAK+vB,SAAS7vB,EAAKimB,eAExD3mB,gBAAgBulB,GACZ,IAAK,IAAInd,KAAK5H,KAAK2vB,OAAQ,CACvB,IAAIngB,EAAQxP,KAAK2vB,OAAO/nB,GACxB,GAAI4H,EAAMuV,SAAWA,EAAQ,OAAOvV,GA4BtChQ,qDACIQ,KAAKmQ,MAAM0gB,SAGfrxB,qDACF,IAAIsxB,QAAiB9wB,KAAKmQ,MAAM4L,kBACfxa,IAAbuvB,GACJ9wB,KAAK+wB,cAAcD,KAGjBtxB,uDACF,IAAIsxB,QAAiB9wB,KAAKmQ,MAAM6gB,eAChChxB,KAAK+wB,cAAcD,KAGftxB,cAAcumB,GAIlB,IAAIxK,OAACA,EAAMoN,MAAEA,GAAS5C,EACtB/lB,KAAKixB,WAAWtI,GAChB3oB,KAAKkxB,YAAY3V,GAGf/b,sDACF,aAAaQ,KAAKmQ,MAAM6L,gBAGtBxc,iBAAiB2xB,2CACnB,aAAanxB,KAAKmQ,MAAMoV,OAAO4L,KAGnC3xB,QAAQU,GACJ,OAAOF,KAAK2oB,MAAMzoB,GAGdV,WAAWmpB,GACf,IAAK,IAAI/gB,KAAK+gB,EAAO,CACjB,IAAIpD,EAASoD,EAAM/gB,IACf1H,KAACA,EAAI6kB,OAAEA,EAAM7R,KAAEA,GAAQqS,EAChBvlB,KAAKoxB,QAAQxpB,EAAGmd,EAAQ7R,GAC9B+R,KAAM,EAEf,IAAK,IAAIrd,KAAK+gB,EAAO,CACjB,IAAIpD,EAASoD,EAAM/gB,GACR5H,KAAKgmB,QAAQpe,GACnB6d,UAAUF,GAEnB,IAAK,IAAI3d,KAAK5H,KAAK2oB,MAAO,CACX3oB,KAAK2oB,MAAM/gB,GACjB8d,mBAILlmB,YAAY+b,GAChB,IAAK,IAAI5I,KAAK4I,EAAQ,CAClB,IAAItT,EAAIsT,EAAO5I,GACf,cAAe1K,GACX,IAAK,SAAUjI,KAAKqxB,SAAS1e,EAAG1K,GAAI,MACpC,IAAK,SAAUjI,KAAKsxB,QAAQ3e,EAAG1K,KAS3CzI,WAAWwoB,GACPhoB,KAAKwwB,WAAWrI,WAAWH,GAG/BxoB,UAAUU,EAAaoD,GACnB,IAAI6Q,EAASnU,KAAKosB,QAAQlsB,GAC1B,YAAeqB,IAAX4S,EAA6BA,GACjCA,EAASnU,KAAKosB,QAAQlsB,GAAQ,IAAI4rB,EAAO9rB,KAAME,EAAMoD,GACrDtD,KAAKiwB,UAAUzqB,KAAK2O,GACbA,GAEH3U,QAAQU,EAAaoD,EAAW4P,GACpC,IAAI9Q,EAAOpC,KAAK2oB,MAAMzoB,GACtB,YAAaqB,IAATa,EAA2BA,GAE3BA,OADSb,IAAT2R,EACO,IAAIsY,EAAWxrB,KAAME,EAAMoD,EAAI4P,GAE/B,IAAIoX,EAAUtqB,KAAME,EAAMoD,GACrCtD,KAAK2oB,MAAMzoB,GAAQkC,EACnBpC,KAAKgwB,QAAQxqB,KAAKpD,GACXA,GAEX5C,SAASU,EAAaoD,GAClB,IAAI6qB,EAAQnuB,KAAKyuB,QAAQvuB,GACzB,YAAcqB,IAAV4sB,EAA4BA,GAChCA,EAAQnuB,KAAKyuB,QAAQvuB,GAAQ,IAAIwtB,EAAM1tB,KAAME,EAAMoD,GACnDtD,KAAKmwB,SAAS3qB,KAAK2oB,GACZA,GAEH3uB,QAAQU,EAAaoD,GACzB,IAAIiuB,EAAOvxB,KAAK4vB,MAAM1vB,GACtB,YAAaqB,IAATgwB,EAA2BA,GAC/BA,EAAOvxB,KAAK4vB,MAAM1vB,GAAQ,IAAImuB,EAAKruB,KAAME,EAAMoD,GAC/CtD,KAAKowB,QAAQ5qB,KAAK+rB,GACXA,GAEH/xB,OAAOU,EAAaoD,GACxB,IAAI2F,EAAMjJ,KAAK6vB,KAAK3vB,GACpB,YAAYqB,IAAR0H,EAA0BA,GAC9BA,EAAMjJ,KAAK6vB,KAAK3vB,GAAQ,IAAIsuB,EAAIxuB,KAAME,EAAMoD,GAC5CtD,KAAKqwB,OAAO7qB,KAAKyD,GACVA,GAEHzJ,WAAWU,EAAaoD,GAC5B,IAAI8D,EAAUpH,KAAK8vB,UAAU5vB,GAC7B,QAAgBqB,IAAZ6F,EAGJ,OAFAA,EAAUpH,KAAK8vB,UAAU5vB,GAAQ,IAAIquB,EAAQvuB,KAAME,EAAMoD,GACzDtD,KAAKswB,WAAW9qB,KAAK4B,GACdA,EAEH5H,WAAWU,EAAaoD,GAC5B,IAAIkuB,EAAUxxB,KAAK+vB,SAAS7vB,GAC5B,QAAgBqB,IAAZiwB,EAGJ,OAFAA,EAAUxxB,KAAK+vB,SAAS7vB,GAAQ,IAAIivB,EAAQnvB,KAAME,EAAMoD,GACxDtD,KAAKuwB,WAAW/qB,KAAKgsB,GACdA,EAEXhyB,SAASU,EAAaoD,GAClB,IAAIkM,EAAQxP,KAAK2vB,OAAOzvB,GACxB,YAAcqB,IAAViO,EAA4BA,GAChCA,EAAQxP,KAAK2vB,OAAOzvB,GAAQ,IAAI8rB,EAAMhsB,KAAME,EAAMoD,GAClDtD,KAAKkwB,SAAS1qB,KAAKgK,GACZA,GAEHhQ,SAASU,EAAaqI,GAC1B,IAAIgJ,EAAQhJ,EAAKiJ,MAAM,KACvBjJ,EAAOgJ,EAAM,GACb,IAAIjO,EAAKiI,OAAOgG,EAAM,IACtB,OAAQhJ,GAEJ,IAAK,OAID,MACJ,IAAK,SAAUvI,KAAK6uB,UAAU3uB,EAAMoD,GAAK,MACzC,IAAK,QAAStD,KAAK+uB,SAAS7uB,EAAMoD,GAAK,MACvC,IAAK,OAAQtD,KAAKyxB,QAAQvxB,EAAMoD,GAAK,MACrC,IAAK,MAAOtD,KAAK0xB,OAAOxxB,EAAMoD,GAAK,MACnC,IAAK,UAAWtD,KAAK2xB,WAAWzxB,EAAMoD,GAAK,MAC3C,IAAK,QAAQtD,KAAK4xB,SAAS1xB,EAAMoD,GAAK,MACtC,IAAK,UAAWtD,KAAK6xB,WAAW3xB,EAAMoD,IAGtC9D,QAAQU,EAAame,GACzB,OAAQA,EAAO,GACX,IAAK,QAASre,KAAK8xB,WAAW5xB,EAAMme,IAGpC7e,WAAWU,EAAame,GAC5B,IAAI7O,EAAQxP,KAAK2vB,OAAOzvB,QACVqB,IAAViO,IAAqBA,EAAQxP,KAAK4xB,SAAS1xB,EAAMme,EAAI/a,KACzDkM,EAAMuiB,MAAM1T,GAqBhB7e,eAAe6B,EAAgByoB,GAC3B,QAAevoB,IAAXF,EAAJ,CACA,IAAK,IAAIikB,KAAKjkB,EAAQ,CAClB,IAAIe,KAACA,GAAQkjB,EACb,QAAa/jB,IAATa,EAAoB,SACxB,IAAIqU,EAAIzW,KAAKgmB,QAAQ5jB,QACXb,IAANkV,IACJ6O,EAAEnjB,MAAQsU,EAAEub,gBAEhB,IAAK,IAAI1M,KAAKjkB,EAAQ,CAClB,IAAI+a,MAACA,GAASkJ,EACd,QAAc/jB,IAAV6a,EAAqB,SACzB,IAAIvZ,EAAaxB,EAAO2G,KAAKC,GAAKA,EAAE/H,OAASkc,GAC7C,QAAmB7a,IAAfsB,SACmBtB,IAAfuoB,IACAjnB,EAAainB,EAAW9hB,KAAKC,GAAKA,EAAE/H,OAASkc,SAE9B7a,IAAfsB,GAEA,oBAAqBuZ,iBAK7B,IAAIra,IAACA,EAAGK,KAAEA,GAAQkjB,EACd7O,EAAIzW,KAAKgmB,QAAQnjB,EAAWV,MAAMC,KAAKlC,MAC3C,QAAUqB,IAANkV,EAAiB,SACrB,IAAIwS,EAAMxS,EAAEwS,IAAIlnB,GAAOK,GAEvB,GADAkjB,EAAEnjB,MAAQ8mB,GAAOA,EAAI+I,aAAanvB,QAClBtB,IAAZ+jB,EAAEnjB,MAEF,KAAM,qCAIlB3C,mBAAmB8B,EAAuBwoB,GACtC,QAAkBvoB,IAAdD,EACJ,IAAK,IAAI2wB,KAAM3wB,EAAW,CACtB,IAAID,OAACA,GAAU4wB,OACA1wB,IAAXF,GACJrB,KAAK2lB,eAAetkB,EAAQyoB,KCxYjC,MAAMoI,EAOT1yB,YAAY2yB,GAFJnyB,KAAAoyB,WAAqC,GAGzCpyB,KAAKE,KAAOA,KACZ,IAAIqR,EAAQ4gB,EAAa3gB,MAAM,KAC/B,GAAqB,IAAjBD,EAAM/K,OACN,KAAM,+CAEVxG,KAAK+d,SAAWxM,EAAM,GACtBvR,KAAKge,QAAUzM,EAAM,GAGzB/R,MAAMwU,GACFhU,KAAKoyB,WAAWpe,EAAG9T,MAAQ8T,EAG/BxU,sBACI,IAAK,IAAIoI,KAAK5H,KAAKoyB,WAAY,CAC3B,IAAIpe,EAAKhU,KAAKoyB,WAAWxqB,GACzB,IAAK,IAAIxF,KAAQ4R,EAAGgc,SACM,IAAlB5tB,EAAKioB,UACLrqB,KAAKqyB,SAASjwB,IAMtB5C,SAAS8yB,GACb,IAAIpf,KAACA,GAAQof,EACTte,EAAKhU,KAAKoyB,WAAWlf,EAAKkJ,MAAQ,IAAMlJ,EAAKc,IACjD,QAAWzS,IAAPyS,EAEA,OAEJ,IAAI5R,EAAO4R,EAAG5R,KAAKkwB,EAAWpyB,WACjBqB,IAATa,IAIkB,IAAlBA,EAAKioB,UAITiI,EAAWC,QAAQnwB,ICpD3BxE,EAAAE,EAAAC,EAAA,sBAAAqxB,IAAAxxB,EAAAE,EAAAC,EAAA,sBAAAyxB,IAAA5xB,EAAAE,EAAAC,EAAA,sBAAAm0B,kCCAAt0B,EAAAE,EAAAC,EAAA,sBAAAy0B,IAAA50B,EAAAE,EAAAC,EAAA,sBAAA00B,IAAA,IAAAC,EAAA90B,EAAA,IAAA+0B,EAAA/0B,EAAAolB,EAAA0P,GAkCO,SAASF,EAAgBjlB,GAC5B,IAAI1M,EAAU8xB,IAAUplB,GAOxB,MANiB,CACbjK,GAAIzC,EAAIyC,GACRpD,KAAMW,EAAIX,KACV6J,MAAOlJ,EAAIkJ,MACXwD,MAAOA,GAKR,SAASklB,EAAiBllB,GAO7B,MALmB,CACfjK,GAAI,EACJyG,MAHU4oB,IAAUplB,GAGTxD,MACXwD,MAAOA,iqBC1CR,MAAeqlB,EAWlBpzB,YAAYqzB,EAAwBC,EAAe1yB,EAAciY,GAH3CrY,KAAA+yB,WAAqB,EAIvC/yB,KAAK6yB,WAAaA,EAClB7yB,KAAK8yB,OAASA,EACd9yB,KAAKqY,MAAQA,EACb,IAAInY,KAACA,GAAQ2yB,EACb7yB,KAAKE,KAAOA,EACZF,KAAKI,MAAQA,EAEXZ,gDACF,aAAaQ,KAAKgzB,kBAKhBxzB,oDACIQ,KAAKizB,gBAGCzzB,sDAA6BlB,EAAA,EAAIsH,QAEvCpG,cACN,QAAoB+B,IAAhBvB,KAAK8yB,OAAsB,OAC/B,IAAII,MAACA,GAASlzB,KAAK8yB,OACnB,QAAcvxB,IAAV2xB,EAAqB,OACzB,IAAIC,EAAKnzB,KAAKozB,SACd,SAASC,EAAWC,EAAgBjb,GAChC,IAAIvR,EAAQwsB,EAAKH,GACjB,QAAc5xB,IAAVuF,EACA,MAAqB,kBAAVA,EACAA,EAEA4G,KAAKC,UAAU7G,GAGlC,GAAIysB,MAAMC,QAAQN,GACd,IAAK,IAAII,KAAQJ,EAAO,CACpB,IAAIpsB,EAAQusB,EAAWC,GACvB,QAAc/xB,IAAVuF,EAAqB,CACrB9G,KAAK8G,MAAQA,EACb,YAKR9G,KAAK8G,MAAQusB,EAAWH,IAhDpBljB,EAAA,CAAXC,EAAA,+BACWD,EAAA,CAAXC,EAAA,iEChBL,IAAAwjB,EAAA71B,EAAA,IAAAA,EAAAK,EAAAw1B,EAAA,cAAA71B,EAAAE,EAAAC,EAAA,8BAAA01B,EAAA,YAAA71B,EAAAK,EAAAw1B,EAAA,cAAA71B,EAAAE,EAAAC,EAAA,8BAAA01B,EAAA,gBAAAC,EAAA91B,EAAA,IAAAA,EAAAE,EAAAC,EAAA,8BAAA21B,EAAA,yVCOO,MAAMC,UAAkBC,EAAA,EAA/Bp0B,kCAEIQ,KAAA6zB,MAAQ,KAAM7zB,KAAKsgB,MAAM,QACzBtgB,KAAA8zB,OAAS,KAAM9zB,KAAKsgB,MAAM,SAC1BtgB,KAAA+zB,SAAW,CAAOzsB,GAAc1E,EAAA5C,UAAA,qBAAC,OAAAA,KAAKsgB,MAAM,OAAQhZ,MAE9C9H,KAAKuD,2CACP/C,KAAKg0B,SAASh0B,KAAKiH,QAGbzH,aAAay0B,EAAa/qB,GAChC,OAAO+qB,EAAKhb,SAGAzZ,YAAYy0B,iDAClBA,EAAKlvB,YAGfkC,WACI,IACIitB,GADA9zB,MAACA,EAAKiqB,SAAEA,GAAYrqB,KAAK6D,YAEZ,IAAbwmB,IAAoB6J,EAAYtb,EAAA,wBAAQlT,UAAU,+BAA+BX,QAAS/E,KAAK6zB,OAAK,iBACxG,IAAI7c,EAAQ4B,EAAA,cAAAA,EAAA,cACPsb,EACDtb,EAAA,wBAAQlT,UAAU,4BAA4BX,QAAS/E,KAAK8zB,QAAM,iBAElEtxB,EAAUoW,EAAA,cAACjZ,EAAA,IAAG,CAAC+F,UAAU,MAAMsR,MAAOA,GACtC4B,EAAA,cAACjZ,EAAA,UAAS,CAAC+F,UAAU,QAAQkoB,KAAK,KAC9BmG,SAAU/zB,KAAK+zB,SACfI,YAAa,eAAK/zB,KAE1B,MAAO,IAAMwY,EAAA,cAACjZ,EAAA,KAAI,CAAC8F,OAAQrF,GACtBoC,6QC9BN,MAAM4xB,UAAkBR,EAAA,EAA/Bp0B,kCAkBcQ,KAAAq0B,KAAO,KAAYC,EAAAt0B,UAAA,qBACzBA,KAAKu0B,MAAM9P,QACXzkB,KAAKw0B,eAGCx0B,KAAAy0B,OAAS,MACfz0B,KAAKw0B,UAAU,GACfx0B,KAAKsgB,MAAM,cAOLtgB,KAAAQ,SAAW,KAAY8zB,EAAAt0B,UAAA,qBAC7B,IAAIS,EAAST,KAAKu0B,MAAMG,YACpB7zB,QAAYb,KAAK6D,WAAWnE,OAAO+rB,KAAKzrB,KAAKsD,GAAI7C,IACjD6C,GAACA,GAAMzC,EACX,GAAIyC,EAAK,EAAT,CACI,IAAIqxB,OAACA,GAAU30B,KAAK6D,WAAWnE,OAC/B,QAAe6B,IAAXozB,EACA,IAAK,IAAI5iB,KAAK4iB,EACV30B,KAAKu0B,MAAMK,SAAS7iB,EAAG,gCAJnC,CASA,GAAI/R,KAAK6D,WAAWgxB,UAGhB,OAFA70B,KAAK80B,WAAWxxB,QAChBtD,KAAKw0B,YAGTx0B,KAAK+0B,gBAAgBnc,EAAA,cAACjZ,EAAA,KAAI,CAAC8F,OAAQzF,KAAKI,MAAQ,2BAAQyF,KAAK,QACzD+S,EAAA,qBAAKlT,UAAU,OACXkT,EAAA,sBAAMlT,UAAU,gBACZkT,EAAA,cAACjZ,EAAA,GAAE,CAACO,KAAK,eAAe0tB,KAAK,0CAEjChV,EAAA,qBAAKlT,UAAU,QACXkT,EAAA,wBAAQlT,UAAU,uBAAuBX,QAAS/E,KAAKq0B,MAAI,4BAC3Dzb,EAAA,wBAAQlT,UAAU,0BAA0BX,QAAS/E,KAAKy0B,QAAM,0BAK5Ez0B,KAAKsgB,MAAM,eAAgB,CAAChd,GAAItD,KAAKsD,GAAI7C,OAAQA,QA1D/CjB,KAAKuD,2CACP/C,KAAKu0B,MAAQv0B,KAAK8D,WAAW9D,KAAKQ,SAAUuC,QAC9BxB,IAAVwB,IACA/C,KAAKsD,GAAKP,EAAMO,IAEpBtD,KAAKg0B,SAASh0B,KAAKg1B,YAGvBA,eACI,MAAO,IAAMpc,EAAA,cAACjZ,EAAA,KAAI,CAAC8F,aAAmBlE,IAAVvB,KAAKsD,GAAgB,eAAK,gBAAQ,MAAQtD,KAAKI,OACtEJ,KAAKu0B,MAAMtb,OAAO,SAcjBzZ,YACNQ,KAAKu0B,MAAM9P,iSC9BZ,MAAMwQ,UAAoBrB,EAAA,EAAjCp0B,kCA6BcQ,KAAAk1B,SAAWp1B,OAAA2Y,EAAA,EAAA3Y,CAAS,KAC1B,IAAI2F,EAAS0vB,EAAAxiB,EAAAyiB,cAACz1B,EAAA,UAAS,CAAC+F,UAAU,aAC9B2vB,QAAS,GACTtB,SAAU/zB,KAAKs1B,aAAcnB,YAAa,eAAKn0B,KAAKI,QACxD,OAAO+0B,EAAAxiB,EAAAyiB,cAACz1B,EAAA,KAAI,CAAC8F,OAAQA,EAAQI,KAAK,SAC9BsvB,EAAAxiB,EAAAyiB,cAACz1B,EAAA,KAAI,CACDqC,MAAOhC,KAAK6D,WAAW0f,UAAUvhB,MACjCyF,KAAM,CAACwR,OAAQjZ,KAAKu1B,cAAexwB,QAAS/E,KAAKw1B,cACjDC,OAAQ,eAAKz1B,KAAKI,MAAM,oBAIpCJ,KAAAs1B,aAAe,CAAOhuB,GAAeouB,EAAA11B,UAAA,2BAC3BA,KAAK6D,WAAW8xB,WAAWruB,MAGrCtH,KAAAu1B,cAAgB,EAAC9tB,EAAUyB,IAA6BisB,EAAAxiB,EAAAyiB,cAACp1B,KAAK41B,eAAc91B,OAAA+I,OAAA,GAAKpB,KACjFzH,KAAAw1B,aAAe,CAAO/tB,GAAaiuB,EAAA11B,UAAA,qBAC/BA,KAAK61B,iBACiCt0B,IAAlCvB,KAAK6D,WAAWnE,OAAOirB,aAIrB3qB,KAAK81B,QAAQ91B,KAAKN,OAAO+mB,aAAahf,IAHxCzH,KAAK80B,WAAWrtB,MAMdzH,KAAA+1B,QAAU,CAAChzB,GACVoyB,EAAAxiB,EAAAyiB,cAACz1B,EAAA,KAAI,CAAC8F,OAAO,mBAChB0vB,EAAAxiB,EAAAyiB,cAACz1B,EAAA,KAAI,CACDqC,MAAOe,EAAMf,MACbyF,KAAM,CAACwR,OAAQjZ,KAAKg2B,aAAcjxB,QAAS/E,KAAKi2B,iBAG5Dj2B,KAAAg2B,aAAe,EAACvuB,EAAUyB,IAA6BisB,EAAAxiB,EAAAyiB,cAACp1B,KAAKk2B,cAAap2B,OAAA+I,OAAA,GAAKpB,KAC/EzH,KAAAi2B,YAAc,CAACxuB,IACXzH,KAAK61B,YACL71B,KAAK80B,WAAWrtB,KA7DdjI,KAAKuD,gDACOxB,IAAVwB,QACM/C,KAAKm2B,SAASpzB,SAEd/C,KAAK81B,QAAQ/yB,KAGbvD,SAASuD,2CACnB/C,KAAK41B,eAAiB51B,KAAKL,GAAGy2B,YAAcC,EAAA,QACtCr2B,KAAK6D,WAAW8xB,WAAW5yB,GACjC/C,KAAKg0B,SAASh0B,KAAKk1B,YAGT11B,QAAQ82B,2CAClB,IAAI/L,KAACA,GAAQvqB,KAAKL,QACL4B,IAATgpB,IACAvqB,KAAKk2B,cAAgB3L,EAAKvqB,KAAKN,OAAOQ,MAAMk2B,iBAErB70B,IAAvBvB,KAAKk2B,gBACLl2B,KAAKk2B,cAAgBG,EAAA,GAEzB,IAAIE,QAAiBv2B,KAAK6D,WAAW2yB,YAAYF,GACjDt2B,KAAKg0B,SAASh0B,KAAK+1B,QAAS,CAAC/zB,MAAOu0B,wRCxBrC,MAAME,UAAkB7C,EAAA,EAA/Bp0B,kCAsBcQ,KAAAq0B,KAAO,KAAYqC,EAAA12B,UAAA,qBACzBA,KAAKu0B,MAAM9P,QACXzkB,KAAKw0B,eAGCx0B,KAAAy0B,OAAS,MACfz0B,KAAKw0B,UAAU,KAOTx0B,KAAAQ,SAAW,KAAYk2B,EAAA12B,UAAA,qBAC7B,IAAIS,EAAST,KAAKu0B,MAAMG,YACpB7zB,QAAYb,KAAKN,OAAO+rB,KAAKzrB,KAAKsD,GAAI7C,GACtCI,GACAsoB,MAAM,gGAAuBrpB,OAAA62B,EAAA,EAAA72B,CAAce,IAE/Cb,KAAKg0B,SAAS,IAAMpb,EAAA,cAACjZ,EAAA,KAAI,CAAC8F,OAAQzF,KAAKI,MAAQ,2BAAQyF,KAAK,QACxD+S,EAAA,qBAAKlT,UAAU,OACXkT,EAAA,sBAAMlT,UAAU,gBACZkT,EAAA,cAACjZ,EAAA,GAAE,CAACO,KAAK,eAAe0tB,KAAK,0CAEjChV,EAAA,qBAAKlT,UAAU,QACXkT,EAAA,wBAAQlT,UAAU,uBAAuBX,QAAS/E,KAAKq0B,MAAI,4BAC3Dzb,EAAA,wBAAQlT,UAAU,0BAA0BX,QAAS/E,KAAKy0B,QAAM,6BAOtEz0B,KAAAiH,KAAO,KAAM2R,EAAA,cAACjZ,EAAA,KAAI,CAAC8F,OAAQzF,KAAKI,OACjCJ,KAAKu0B,MAAMtb,OAAO,UApDjBzZ,UAAUuD,GAChB/C,KAAKu0B,MAAQv0B,KAAK8D,gBAAWvC,EAAWwB,GAGtCvD,KAAKuD,2CACP/C,KAAK42B,UAAU7zB,GACf/C,KAAKg0B,SAASh0B,KAAKiH,QAGvBzH,OAAOuD,GAEH,OADA/C,KAAK42B,UAAU7zB,GACR/C,KAAKu0B,MAAMtb,SAGhBzZ,OAAO8D,2CACTtD,KAAKsD,GAAKA,IAYJ9D,YACNQ,KAAKu0B,MAAM9P,SCvCZ,MAAMoS,UAAmBJ,oRCAzB,MAAMK,UAAyBtJ,EAAA,EAElChuB,YAAY4C,GACRvC,OAAM,GACNG,KAAKoC,KAAOA,EAEA5C,KAAKuD,EAAWsZ,EAAeC,2CAE3C,aADgBtc,KAAKoC,KAAKspB,OAAO3oB,EAAOsZ,EAAWC,KAG7C9c,aAAaiI,GACnBzH,KAAKqc,eAAqB9a,IAATkG,EAAoB,EAAIA,EAAKnE,6QCL/C,MAAeyzB,UAAuBnD,EAAA,EAA7Cp0B,kCAcIQ,KAAA+zB,SAAW,CAAOzsB,GAAe0vB,EAAAh3B,UAAA,2BACvBA,KAAK6D,WAAW8xB,WAAWruB,MAGrCtH,KAAAi3B,UAAY,EAACxvB,EAAUyB,IAA6B0P,EAAA,cAAC5Y,KAAKo2B,WAAUt2B,OAAA+I,OAAA,GAAKpB,KAUzEzH,KAAAk3B,SAAW,CAACzvB,IACRzH,KAAKm3B,eAAe1vB,KAEhBzH,KAAAo3B,OAAS,CAAC3vB,IACd,IAAInE,GAACA,GAAMmE,EACX,OAAOnE,IAEDtD,KAAAiH,KAAOnH,OAAA2Y,EAAA,EAAA3Y,CAAS,KACtB,IAAI2F,EAASmT,EAAA,cAACjZ,EAAA,UAAS,CAAC+F,UAAU,aAC9B2vB,QAAS,GACTtB,SAAU/zB,KAAK+zB,SAAUI,YAAa,eAAKn0B,KAAKI,QASpD,OAAOwY,EAAA,cAACjZ,EAAA,KAAI,CAAC8F,OAAQA,GAEjBmT,EAAA,cAACjZ,EAAA,KAAI,CACDqC,MAAOhC,KAAK6D,WAAW0f,UAAUvhB,MACjCyF,KAAM,CAACwR,OAAQjZ,KAAKi3B,UAAWlyB,QAAS/E,KAAKk3B,SAAU5vB,IAAItH,KAAKo3B,QAChE3B,OAAQ,eAAKz1B,KAAKI,MAAM,oBAhD9BZ,KAAKuD,2CACP/C,KAAKo2B,WAAap2B,KAAKL,GAAGy2B,YAAcC,EAAA,EAExCr2B,KAAKq3B,QAAU9rB,OAAOxI,SAGhB/C,KAAK6D,WAAW8xB,WAAW,IACjC31B,KAAKg0B,SAASh0B,KAAKiH,QAUfzH,eAAeiI,QACKlG,IAApBvB,KAAKs3B,WAITt3B,KAAKs3B,WAAW7vB,GAHZ0hB,MAAM,0BAkCX,MAAMoO,UAAkBR,EACXv3B,WAAWiI,4CACU,IAA7BzH,KAAK6D,WAAWwmB,SAChBrqB,KAAKsgB,MAAM,OAAQ7Y,EAAKnE,IAExBtD,KAAKsgB,MAAM,OAAQ7Y,EAAKnE,gRCvC7B,MAAek0B,UAA8B5D,EAAA,EAGtCp0B,iBACN,OAAO,IAAIs3B,EAAc92B,KAAKN,QAG5BF,WAAW8H,gDACU/F,IAAnBvB,KAAKujB,YACLvjB,KAAKujB,UAAYvjB,KAAKy3B,uBAEdl2B,IAAR+F,UAAyBtH,KAAKujB,UAAUmU,MAAMpwB,MAGhD9H,YAAY63B,2CAEd,aADgBr3B,KAAKN,OAAOwrB,UAAUmM,OAAS91B,EAAW,EAAG,QAK9D,MAAeo2B,UAAkBH,EACpCh4B,YAAYC,EAAUC,EAAaC,EAAYC,GAC3CC,MAAMJ,EAAKC,EAAQC,EAAIC,GAG3BJ,OAEI,OAA8BQ,KAIlCR,UACI,OAAOQ,KAAKP,IAEhBD,YAEI,OADUQ,KAAKP,IACJm4B,kBAAkB53B,KAAKN,OAAOQ,MAE7CV,YAEI,OADUQ,KAAKP,IACJo4B,kBAAkB73B,KAAKN,OAAOQ,MAE7CV,cAEI,OADUQ,KAAKP,IACJq4B,oBAAoB93B,KAAKN,OAAOQ,MAG/CV,SAAS4C,GACL,GAAIA,IAASpC,KAAKN,OAAQ,OAAOM,KAAKI,MACtC,IAAIF,KAACA,GAAQkC,GACTT,KAACA,GAAQ3B,KAAKJ,IAClB,QAAa2B,IAATI,EAAoB,CACpB,IAAII,EAAMJ,EAAKzB,GACf,QAAYqB,IAARQ,EAAmB,CACnB,IAAI3B,EAAQ2B,EAAI3B,MAChB,QAAcmB,IAAVnB,EAAqB,OAAOA,GAGxC,OAAOF,EAKX63B,gBAA4C,OAAOpE,EACnDqE,gBAA4C,OAAO5D,EACnDmD,gBAA4C,OAAOA,EAEnC/3B,cAAcuD,2CAC1B/C,KAAKqqB,SAAWrqB,KAAKN,OAAO2qB,eACtBrqB,KAAKi4B,UAAUj4B,KAAK+3B,aAGdv4B,QAAQ+I,EAAa8P,2CAEjC,OAAQ9P,GACJ,QAAS,OACT,IAAK,YAAavI,KAAK6zB,QAAS,MAChC,IAAK,aAAc7zB,KAAK8zB,SAAU,MAClC,IAAK,OAAkC,kBAApB9zB,KAAKk4B,OAAO7f,IAC/B,IAAK,eAAyC,YAAzBrY,KAAKm4B,YAAY9f,GACtC,IAAK,OACD,IAAI+f,EAAY,IAAIC,EAAUr4B,KAAKP,IAAKO,KAAKN,OAAQM,KAAKL,GAAIK,KAAKJ,KAEnE,kBADMw4B,EAAU9xB,MAAM+R,OAMlB7Y,KAAKiB,2CACjB,IAAI63B,EAAYt4B,KAAKL,IAAMK,KAAKL,GAAG44B,eACjBh3B,IAAd+2B,QACMt4B,KAAKi4B,UAAUj4B,KAAKg4B,UAAWv3B,SAG/B,IAAK63B,EAAUt4B,KAAKP,IAAKO,KAAKN,OAAQM,KAAKL,GAAIK,KAAKJ,KAAM0G,MAAM7F,KAIhEjB,sDACJQ,KAAKw4B,UAAKj3B,KAGN/B,iDACV,IAAIi5B,EAAYz4B,KAAKL,IAAMK,KAAKL,GAAG+4B,eACjBn3B,IAAdk3B,QACMz4B,KAAKi4B,UAAUj4B,KAAKu3B,eAAWh2B,SAG/B,IAAKk3B,EAAUz4B,KAAKP,IAAKO,KAAKN,OAAQM,KAAKL,GAAIK,KAAKJ,KAAM0G,WAAM/E,KAI9D/B,OAAO8D,2CACnB,IAAI7C,OAAac,OACNA,IAAP+B,IACA7C,QAAeT,KAAKN,OAAOoX,KAAKxT,IAEpCtD,KAAKw4B,KAAK/3B,KAINjB,aAAY8D,GAACA,EAAE7C,OAAEA,IACrB,QAAuBc,IAAnBvB,KAAKujB,UAAyB,OAClC,IACI9b,EADQzH,KAAKujB,UAAUvhB,MACVgG,KAAKC,GAAKA,EAAE3E,KAAOA,QACvB/B,IAATkG,GACAqT,EAAAnI,EAAEgmB,MAAMlxB,EAAMhH,IAKnB,MAAMm4B,UAAkBjB,EACXn4B,cAAcuD,2CAC1B/C,KAAKqqB,SAAWrqB,KAAKN,OAAO2qB,eACtBrqB,KAAKi4B,UAAUj4B,KAAK+3B,cAK3B,MAAMQ,UAAkBZ,EACXn4B,cAAc8D,2CAC1BtD,KAAKqqB,SAAWrqB,KAAKN,OAAO2qB,SACT,kBAAT,QACArqB,KAAKk4B,OAAO50B,SAGZtD,KAAKw4B,KAAKl1B,KAIR9D,KAAKiB,iDACXT,KAAKi4B,UAAUj4B,KAAKg4B,UAAWv3B,MAItC,MAAMi4B,UAAkBf,EACXn4B,cAAc8D,2CAC1BtD,KAAKqqB,SAAWrqB,KAAKN,OAAO2qB,eACtBrqB,KAAKi4B,UAAUj4B,KAAKu3B,cAU3B,MAAMsB,UAAoBrB,EACbh4B,cAAcuD,iDACpB/C,KAAKi4B,UAAUj4B,KAAK84B,YAAa/1B,KAE3BvD,sDAIZ,aAFMQ,KAAKN,OAAOa,kBACKgB,IAAnBvB,KAAKujB,WAAyBvjB,KAAKujB,UAAUkB,SAC1C,IAEXqU,kBAAgD,OAAO7D,EACvDz1B,WAAWiI,GACP,OAAOA,EAAKnE,IAIb,MAAM+0B,UAAkBb,EACXh4B,cAAc8D,2CAC1B,IAAI4O,QAAalS,KAAKN,OAAOoX,KAAKxT,SAC5BtD,KAAKi4B,UAAUj4B,KAAK+4B,UAAW7mB,KAEzC6mB,gBAA4C,OAAOlC,GC7NvDj5B,EAAAE,EAAAC,EAAA,sBAAA66B,IAAAh7B,EAAAE,EAAAC,EAAA,sBAAAw6B,IAAA36B,EAAAE,EAAAC,EAAA,sBAAA26B,IAAA96B,EAAAE,EAAAC,EAAA,sBAAA86B,IAAAj7B,EAAAE,EAAAC,EAAA,sBAAAs6B,6DCKO,MAAeW,EAIlBx5B,YAAYY,GAFFJ,KAAAiH,KAAO,KAAM2R,EAAA,2BAGnB5Y,KAAKI,MAAQA,EAGjBZ,SAEI,OAAOoZ,EAAA,qBAAKtR,IAAKtH,KAAKsH,IAAK5B,UAAU,QACjCkT,EAAA,qBAAKlT,UAAU,kBACXkT,EAAA,uBAAOlT,UAAU,2BACZ1F,KAAKI,OAEVwY,EAAA,qBAAKlT,UAAU,aACV1F,KAAKi5B,mBAMtBz5B,UAAU05B,IACV5xB,UAAW,OAAOtH,KAAKI,MAChBZ,cACAA,WACAA,cAEGA,gBACN,OAAOoZ,EAAA,qBAAKlT,UAAU,4EAA0E,YASjG,MAAMyzB,UAAmBH,EAE5Bx5B,YAAYY,EAAcg5B,GACtBv5B,MAAMO,GACNJ,KAAKo5B,OAASA,EAGlB9xB,UAAW,OAAOtH,KAAKo5B,OAAOl5B,KACvBV,aAAuB,MAAO,CAACQ,KAAKo5B,QAEjC55B,gBACN,OAAOQ,KAAKo5B,OAAOngB,UAQpB,MAAMogB,UAAiBL,EAE1Bx5B,YAAYY,EAAck5B,GACtBz5B,MAAMO,GACNJ,KAAKs5B,KAAOA,EAGhB95B,UAAU05B,GAA2Bl5B,KAAKs5B,KAAKC,UAAUL,GACzD5xB,UAAW,OAAOtH,KAAKs5B,KAAKp5B,KACrBV,UAAgB,OAAOQ,KAAKs5B,KAEnC95B,SACI,OAAOoZ,EAAA,cAACA,EAAA,SAAc,CAACtR,IAAKtH,KAAKsH,KAC5BtH,KAAKs5B,MAAQt5B,KAAKs5B,KAAKrgB,WAsB7B,MAAMugB,UAAoBR,EAE7Bx5B,YAAYi6B,GACR55B,WAAM0B,GACNvB,KAAKy5B,QAAUA,EAGnBnyB,UAAW,MAAO,UAEX9H,aAAsB,OAAOQ,KAAKy5B,QAEzCj6B,SACI,OAAOoZ,EAAA,qBAAKtR,IAAI,UAAU5B,UAAU,QAChCkT,EAAA,qBAAKlT,UAAU,kBACXkT,EAAA,qBAAKlT,UAAU,yBACV1F,KAAKy5B,QAAQxgB,6mBCzG3B,MAAMygB,UAAgBrD,EAAA,EAEzB72B,YAAY+0B,GACR10B,QAQIG,KAAA25B,cAAgB,KAAW/2B,EAAA5C,UAAA,qBAC/BA,KAAKu0B,MAAMtF,YAGLjvB,KAAAiH,KAAOnH,OAAA2Y,EAAA,EAAA3Y,CAAS,KACtB,IAAI85B,KAACA,GAAQ55B,KAAKu0B,MAClB,OAAO3b,EAAA,wBAAQrQ,KAAK,SAChBxD,QAAS/E,KAAK25B,cACdj0B,UAAW1F,KAAK0F,UAChBm0B,UAAmB,IAATD,GACT55B,KAAK85B,WAjBV95B,KAAKu0B,MAAQA,EACbv0B,KAAK85B,QAAU95B,KAAKu0B,MAAMtzB,cAC1BjB,KAAK0F,UAAY,wBAETsK,EAAA,CAAX6X,EAAA,iCACW7X,EAAA,CAAX6X,EAAA,8DCfE,MAAekS,GAIf,MAAMC,UAAqBD,EAC9Bv6B,MAAMy6B,EAAe5hB,GACjB,cAAeA,GACX,QACA,IAAK,UAAW,OAChB,IAAK,SACD,GAAc,OAAVA,EAAgB,OACpB,MACJ,IAAK,SACD,GAAKA,EAAiBqY,OAAOlqB,OAAS,EAAG,OACzC,MACJ,IAAK,SACD,GAA0B0zB,MAArB7hB,EAA0B,OAC/B,MACJ,IAAK,aAGT4hB,EAAKz0B,KAAK,6BAIX,MAAM20B,UAAgBJ,EACzBv6B,MAAMy6B,EAAe5hB,GACjB,QAAc9W,IAAV8W,GAAiC,OAAVA,EAAgB,OAEjC6hB,MADF3uB,OAAO8M,IACA4hB,EAAKz0B,KAAK,mCAI1B,MAAM40B,UAAgBL,EACzBv6B,MAAMy6B,EAAe5hB,GACjB,QAAc9W,IAAV8W,GAAiC,OAAVA,EAAgB,OAC3C,IAAI2K,EAAIzX,OAAO8M,IACS,IAApB9M,OAAO8uB,MAAMrX,KAAuC,IAAxBzX,OAAO+uB,UAAUtX,IAC7CiX,EAAKz0B,KAAK,mCAKf,MAAM+0B,UAAgBJ,EACzB36B,YAAYg7B,GACR36B,QACAG,KAAKw6B,IAAMA,EAGfh7B,MAAMy6B,EAAe5hB,GACjBxY,MAAM46B,MAAMR,EAAM5hB,GACd9M,OAAO8M,GAASrY,KAAKw6B,KAAKP,EAAKz0B,KAAK,2BAASxF,KAAKw6B,MAIvD,MAAME,UAAgBP,EACzB36B,YAAYm7B,GACR96B,QACAG,KAAK26B,IAAMA,EAGfn7B,MAAMy6B,EAAe5hB,GACjBxY,MAAM46B,MAAMR,EAAM5hB,GACd9M,OAAO8M,GAASrY,KAAK26B,KAAKV,EAAKz0B,KAAK,2BAASxF,KAAK26B,kVCpDvD,MAAeC,UAAevE,EAAA,EAMjC72B,YAAYkC,EAAYQ,EAAaG,EAAkBw4B,GACnDh7B,QACAG,KAAK0B,KAAOA,EACZ1B,KAAKkC,MAAQA,EACblC,KAAKE,KAAOgC,EAAMhC,KAClBF,KAAKqC,QAAUA,GAAW,GAC1BrC,KAAK66B,SAAWA,GAAY,GAC5B76B,KAAK6wB,OAKCrxB,OACNQ,KAAK86B,aAGCt7B,aACNQ,KAAKkzB,MAAQ,GACb,IAAI6H,SAACA,GAAY/6B,KAAKqC,UACL,IAAb04B,QAAoCx5B,IAAfvB,KAAKkC,QAA2C,IAApBlC,KAAKkC,MAAM84B,OAC5Dh7B,KAAKkzB,MAAM1tB,KAAK,IAAIw0B,GAIlBiB,iBACN,IAAIhB,EAAO,GACX,IAAK,IAAIpT,KAAK7mB,KAAKkzB,MAAOrM,EAAE4T,MAAMR,EAAMj6B,KAAKqY,OAC7C,OAAO4hB,EAGDL,WACN,GAA0B,IAAtB55B,KAAKkzB,MAAM1sB,OAAc,OAAO,EAEpC,OAAuB,IADZxG,KAAKi7B,WACJz0B,OAGN6R,YAAc,OAAOrY,KAAK0B,KAAKjB,OAAOT,KAAKE,MACrDV,SAASyI,GACLjI,KAAK0B,KAAKjB,OAAOT,KAAKE,MAAM+H,EAEhCnB,YAAc,OAAO9G,KAAK0B,KAAKw5B,OAAOl7B,KAAKE,MAC3C4G,UAAUD,GAAW7G,KAAK0B,KAAKw5B,OAAOl7B,KAAKE,MAAM2G,EACvCrH,MAAM0b,GAAiB,OAAOA,EACxCigB,eACI,IAAIz6B,KAACA,GAAQV,KAAK0B,KAClB,OAAOhB,IAAS06B,EAASD,UACrBz6B,IAAS06B,EAAS5C,OAAkC,IAA1Bx4B,KAAKqC,QAAQg5B,UAtBrCC,EAAA,CAATzT,EAAA,kCAMSyT,EAAA,CAATzT,EAAA,4BAMSyT,EAAA,CAATzT,EAAA,6BAuBE,MAAe0T,UAAsBX,EAA5Cp7B,kCAOcQ,KAAAw7B,YAAc,CAAC91B,IACrB,IAAIw1B,OAACA,GAAUl7B,KAAK0B,KAChBoF,EAAQo0B,EAAOl7B,KAAKE,MACxB,QAAcqB,IAAVuF,EACJ,OAAO8R,EAAA,qBAAKlT,UAAWA,GAAWkT,EAAA,cAAC6iB,EAAA,GAAE,CAACv7B,KAAK,2BAAyB4G,KAW9D9G,KAAA07B,IAAM,CAACC,IACb37B,KAAK27B,MAAQA,EACb37B,KAAK47B,kBASC57B,KAAA67B,QAAU,MAChB77B,KAAK8G,WAAQvF,IAGPvB,KAAA87B,OAAS,MACf,IAAI7B,EAAOj6B,KAAKi7B,WACZhB,EAAKzzB,OAAS,IACdxG,KAAK8G,MAAQmzB,EAAK,IAEtBj6B,KAAK0B,KAAKq6B,kBAGJ/7B,KAAAg8B,SAAW,CAAC/pB,IAClB,IAAIhK,EAAIjI,KAAKua,MAAMtI,EAAIkR,cAAc9K,OAC3B,OAANpQ,GAGJjI,KAAKi8B,SAASh0B,KAKRjI,KAAAiH,KAAOnH,OAAA2Y,EAAA,EAAA3Y,CAAS,KACtB,IAKIuX,EACAskB,EAyBAO,GA/BAnB,SAACA,GAAY/6B,KAAKqC,SAClBK,YAACA,EAAWy5B,OAAEA,GAAUn8B,KAAK66B,SAC7BuB,EAAS,CAAC,eAAgB,sBAwC9B,OAnCsB,IAAlBp8B,KAAKm7B,SACLQ,EAAQ/iB,EAAA,uBAAOlT,UAAWoZ,IAAWsd,EAAQ,YACzCV,IAAK17B,KAAK07B,IACVnzB,KAAMvI,KAAKq8B,UACXC,UAAU,KAIdX,EAAQ/iB,EAAA,uBAAOlT,UAAWoZ,IAAWsd,GACjCV,IAAK17B,KAAK07B,IACVnzB,KAAMvI,KAAKq8B,UACXR,QAAS77B,KAAK67B,QACdC,OAAQ97B,KAAK87B,OACbE,SAAUh8B,KAAKg8B,SACf7H,YAAazxB,EACb45B,UAAU,EACVC,UAAWv8B,KAAKu8B,UAChBC,WAAYx8B,KAAKw8B,cAEJ,IAAbzB,IAAyC,IAApB/6B,KAAKkC,MAAM84B,OAChC3jB,EAASuB,EAAA,cAAC6jB,EAAO,QAMrBP,OADW36B,IAAX46B,EACaR,EAEA/iB,EAAA,qBAAKlT,UAAU,eACvBi2B,EACD/iB,EAAA,qBAAKlT,UAAU,sBACXkT,EAAA,sBAAMlT,UAAU,oBAAoBy2B,KAIzCvjB,EAAA,cAAAA,EAAA,cACFvB,EACA6kB,EACAl8B,KAAKw7B,YA1CE,kCAtDhBe,iBAaA/8B,SAASyI,GACLpI,MAAMo8B,SAASh0B,GAAIjI,KAAK47B,gBAQlBp8B,gBACN,IAAKQ,KAAK27B,MAAO,OACjB,IAAI1zB,EAAIjI,KAAKqY,MACbrY,KAAK27B,MAAMtjB,MAAc,OAANpQ,QAAoB1G,IAAN0G,EAAiB,GAAKA,GA4ExD,MAAMw0B,EAAU,IAAM7jB,EAAA,mBAAG9P,MAAO,CAAC4zB,MAAM,MAAOC,SAAS,WAAYC,KAAK,QAASv0B,IAAI,UAAQ,KAE7F,MAAMw0B,UAAqBtB,EAAlC/7B,kCAEcQ,KAAAq8B,UAAmB,OAC7BE,gBAAkC,OAAOv8B,KAAKkC,MAAM0rB,MAGxD,MAAMkP,EAAc,GACdC,EAAc,GAEb,MAAeC,UAAuBzB,EAA7C/7B,kCAuCIQ,KAAAq8B,UAAmB,SAoBTr8B,KAAAw8B,WAAa,CAAClc,IACpB,IAAI8G,EAAK9G,EAAM2c,SACf,KAAW,IAAP7V,GAAmB,IAAPA,GAAmB,KAAPA,GAAaA,GAAM,IAAMA,GAAM,IAC3D,QAAwB7lB,IAApBvB,KAAKk9B,YACDl9B,KAAKk9B,WAAWhY,QAAQkC,IAAO,EAC/B,OAAQA,GACJ,KAAK2V,EAAa/8B,KAAKm9B,WAAY,MACnC,KAAKL,EAAa98B,KAAKo9B,WAAY9c,EAAM+c,sBAKrD/c,EAAM+c,mBAnEA79B,OAGN,GAFAK,MAAMgxB,OACN7wB,KAAKk9B,WAAa,QACG37B,IAAjBvB,KAAKqC,QAAuB,CAC5B,IAAIm4B,IAACA,EAAGG,IAAEA,GAAO36B,KAAKqC,aACVd,IAARi5B,EAEIA,EAAM,GAAGx6B,KAAKk9B,WAAW13B,KAAKs3B,GAGlC98B,KAAKk9B,WAAW13B,KAAKs3B,GAO7B,OAAQ98B,KAAKkC,MAAMqG,MACf,IAAK,MACL,IAAK,SACL,IAAK,MACL,IAAK,WACL,IAAK,UACDvI,KAAKk9B,WAAW13B,KAAKu3B,IAIvBv9B,aACNK,MAAMi7B,aACN96B,KAAKkzB,MAAM1tB,KAAK,IAAI20B,GACpB,IAAIK,IAACA,EAAGG,IAAEA,GAAO36B,KAAKqC,aACVd,IAARi5B,GAAmBx6B,KAAKkzB,MAAM1tB,KAAK,IAAI+0B,EAAQC,SACvCj5B,IAARo5B,GAAmB36B,KAAKkzB,MAAM1tB,KAAK,IAAIk1B,EAAQC,IAK7Cn7B,MAAMijB,GACZ,IACI,GAA2B,IAAvBA,EAAKiO,OAAOlqB,OAAc,OAC9B,IAAI3F,EAAM0K,OAAOkX,GACjB,OAAgByX,MAARr5B,EAAc,KAAOA,EAEjC,MAAAy8B,GACI,OAAO,MAIL99B,gBACN,IAAKQ,KAAK27B,MAAO,OACjB,IAAI1zB,EAAIjI,KAAKqY,MACTrY,KAAKua,MAAMva,KAAK27B,MAAMtjB,QAAUpQ,IACpCjI,KAAK27B,MAAMtjB,MAAc,OAANpQ,QAAoB1G,IAAN0G,EAAiB,GAAKA,GAkBnDzI,WACJ,IAAIyI,EAAIjI,KAAK27B,MAAMtjB,MACXpQ,EAAEid,QAAQ,MACT,IAAGllB,KAAK27B,MAAMtjB,MAAQpQ,EAAE2G,QAAQ,IAAK,KAE1CpP,WACJ,IAAIyI,EAAIjI,KAAK27B,MAAMtjB,MACf1Q,EAAIM,EAAEid,QAAQ,KACNjd,EAARN,GAAK,EAAOM,EAAE2G,QAAQ,IAAK,IACtB,IAAI3G,EACbjI,KAAK27B,MAAMtjB,MAAQpQ,GAIpB,MAAMs1B,UAAkBP,EACjBx9B,aACNK,MAAMi7B,aACN96B,KAAKkzB,MAAM1tB,KAAK,IAAI40B,IAIrB,MAAMoD,UAAkBR,GAGxB,MAAMS,UAAmBZ,GAIzB,MAAMa,UAAuBb,GAI7B,MAAMc,UAAmBd,GCrSzB,MAAMe,UAAsBhD,EAC/Bp7B,YAAYkC,EAAYQ,EAAc24B,GAClCh7B,MAAM6B,EAAMQ,OAAOX,EAAWs5B,GAExB76B,KAAAiH,KAAOnH,OAAA2Y,EAAA,EAAA3Y,CAAS,KACtB,IAAIuY,EAAQrY,KAAK0B,KAAKjB,OAAOT,KAAKkC,MAAMhC,OACpCwC,YAACA,EAAWy5B,OAAEA,GAAUn8B,KAAK66B,SAEnB,OAAVxiB,IAAgBA,EAAQ,IAC5B,IAKI6jB,EALAP,EAAQxG,EAAAxiB,EAAAyiB,cAAA,SAAO1vB,UAFN,2CAGT6C,KAAK,OACL4rB,YAAazxB,EACb45B,UAAU,EACVjkB,MAAOA,IAWX,OARI6jB,OADW36B,IAAX46B,EACaR,EAEAxG,EAAAxiB,EAAAyiB,cAAA,OAAK1vB,UAAU,eACvBi2B,EACDxG,EAAAxiB,EAAAyiB,cAAA,OAAK1vB,UAAU,sBACXyvB,EAAAxiB,EAAAyiB,cAAA,QAAM1vB,UAAU,oBAAoBy2B,iSCjBjD,MAAM0B,UAAaxH,EAAA,EAkBtB72B,YAAYs+B,EAAiB/7B,EAAeg8B,GACxCl+B,QA8CMG,KAAAg+B,QAAU,KACTplB,EAAA,cAAC6iB,EAAA,KAAI,CAACh2B,OAAQzF,KAAKI,MAAOyF,KAAK,SACjC7F,KAAKu0B,MAAMtb,OAAO,UAGnBjZ,KAAAQ,SAAW,KAAYy9B,EAAAj+B,UAAA,qBAC3B,IAAIk+B,UAACA,GAAal+B,KAAKu0B,YACjBv0B,KAAKm+B,aAAaD,MAGpBl+B,KAAAm+B,aAAe,CAAOC,GAAkBH,EAAAj+B,UAAA,0BACrBuB,IAAnBvB,KAAKo+B,WACLA,EAAUC,OAASr+B,KAAK89B,UAAUr9B,OAClCT,KAAK6tB,KAAKroB,KAAK44B,QACQ78B,IAAnBvB,KAAK+9B,UACL/9B,KAAKu0B,MAAM9P,cAELzkB,KAAK+9B,eAAUx8B,EAAWvB,KAAKm+B,gBAGzCrjB,EAAAnI,EAAEgmB,MAAM34B,KAAKo+B,UAAWA,QACD78B,IAAnBvB,KAAK+9B,WAAyBtC,EAAA,IAAI71B,UAItC5F,KAAAs+B,WAAa,EAAC72B,EAAUyB,SACJ3H,IAApBvB,KAAKo2B,WACExd,EAAA,qBAAKlT,UAAU,aAAYkT,EAAA,cAACyd,EAAA,EAAWv2B,OAAA+I,OAAA,GAAKpB,KAChDmR,EAAA,cAAC5Y,KAAKo2B,WAAUt2B,OAAA+I,OAAA,GAAKpB,KAExBzH,KAAAu+B,QAAU,CAAOH,GAA+BH,EAAAj+B,UAAA,0BAC7BuB,IAAnBvB,KAAK+9B,WAIT/9B,KAAKu0B,MAAM9P,aACOljB,IAAd68B,GAAyBp+B,KAAKu0B,MAAMxzB,UAAUq9B,GAClD3C,EAAA,IAAIj2B,KAAKoT,EAAA,cAAC5Y,KAAKg+B,QAAO,cALZh+B,KAAK+9B,UAAUK,EAAWp+B,KAAKm+B,iBAOrCn+B,KAAAw+B,QAAU,CAAOJ,GAAiCH,EAAAj+B,UAAA,qBACtDA,KAAKo+B,UAAYA,EACjB,IAAI3E,QAACA,GAAWz5B,KAAKu0B,WACLhzB,IAAZk4B,IACAA,EAAQK,QAAU95B,KAAKy+B,kBACvBhF,EAAQ/zB,UAAY,2BAExB1F,KAAKu0B,MAAM7zB,KAAOV,KAAK89B,UAAUp9B,WAC3BV,KAAKu+B,QAAQH,MAEfp+B,KAAA0+B,eAAiB,KAAYT,EAAAj+B,UAAA,qBACjCA,KAAKo+B,eAAY78B,EACjB,IAAIk4B,QAACA,GAAWz5B,KAAKu0B,MACrBkF,EAAQK,QAAU95B,KAAK2+B,iBACvBlF,EAAQ/zB,UAAY,0BACpB1F,KAAKu0B,MAAM9P,QACXzkB,KAAKu0B,MAAM7zB,KAAO06B,EAAS55B,UACrBxB,KAAKu+B,aAAQh9B,MAGbvB,KAAAiH,KAAO,MACb,IAAI23B,OACgBr9B,IAAhBvB,KAAKk5B,QAAwBl5B,KAAKU,OAAS06B,EAASD,WACpDyD,EAAShmB,EAAA,wBAAQ7T,QAAS/E,KAAKk5B,QAAUl5B,KAAK0+B,eAC1Cn2B,KAAK,SACL7C,UAAU,oBACT1F,KAAK89B,UAAU18B,oBAGxB,IAAIqE,EAASzF,KAAKyF,QAAUmT,EAAA,qBAAKlT,UAAU,sBAAsBoD,MAAO,CAAC+1B,WAAW,MAAOC,cAAc,QACrGlmB,EAAA,qBAAKlT,UAAU,+BAA+B1F,KAAKI,OAClDw+B,GAEL,OAAOhmB,EAAA,cAAC6iB,EAAA,KAAI,CAAC/1B,UAAU,OACnBD,OAAQA,EACRzE,KAAM4X,EAAA,cAAC6iB,EAAA,MAAK,CAAC/1B,UAAU,aAAa1F,KAAKgB,MACzCgB,MAAOhC,KAAK6tB,KACZpmB,KAAM,CAACwR,OAAQjZ,KAAKs+B,WAAYv5B,QAAS/E,KAAKw+B,aAzHlDx+B,KAAK89B,UAAYA,EACjB,IAAI59B,KAACA,EAAImB,OAAEA,GAAUU,EACrB/B,KAAKE,KAAOA,EACZ,IAAIP,GAACA,EAAEC,IAAEA,EAAGc,KAAEA,EAAIkB,OAAEA,EAAMnB,OAAEA,GAAUq9B,EAClCiB,EAAUn/B,EAAI+B,KACdq9B,OAAqBz9B,IAAZw9B,EAAuBA,EAAQ7+B,GAAQ,IAChDE,MAACA,EAAKY,KAAEA,EAAIi+B,UAAEA,EAASC,WAAEA,GAAcF,EAC3Ch/B,KAAKgB,KAAOA,GAAQ88B,EAAU98B,KAC9BhB,KAAK2+B,iBAAmBM,GAAanB,EAAU58B,cAC/ClB,KAAKy+B,kBAAoBS,GAAcpB,EAAU38B,eACjDnB,KAAKI,MAAQA,GAASF,EACtB,IAAIi/B,EAAUx/B,GAAMA,EAAGqC,MAAM9B,IAAU,GACvCF,KAAKo2B,WAAa+I,EAAM/I,WACxBp2B,KAAKU,KAAOA,OACWa,IAAnBvB,KAAK+9B,UACL/9B,KAAKu0B,MAAQ,IAAI6K,EAAM,CACnB/9B,OAAQA,EACRM,UAAMJ,EACN5B,GAAIw/B,EACJv/B,IAAKo/B,EACLp9B,OAAQA,EAAO1B,GACfc,KAAM88B,EAAU98B,KAChBC,cAAe,SACfC,mBAAeK,EACfJ,oBAAgBI,EAChBH,uBAAmBG,EACnBb,KAAMA,GAEVA,IAAO06B,EAASD,cAAU55B,EAAWvB,KAAKQ,UAG1CR,KAAK+9B,UAAYA,EAErB/9B,KAAK6tB,KAAOptB,EAAOP,GAGvBV,QACIQ,KAAKu0B,MAAM9P,QACXzkB,KAAK6tB,KAAK1mB,QAGd3H,UAAU05B,GACNl5B,KAAKk5B,OAASA,oRChEtB,MAAMmG,EAAkC,CACpCC,UAAU,OACVC,YAAY,UACZC,aAAa,UACbC,SAAU,UAGP,MAAMC,UAAmB9E,EAK5Bp7B,YAAY+0B,EAAcryB,EAAaG,EAAkBw4B,GACrDh7B,MAAM00B,EAAOryB,EAAOG,EAASw4B,GAMjC76B,KAAA+E,QAAU,KAAY46B,EAAA3/B,UAAA,qBAClB,IAAsB,IAAlBA,KAAKm7B,SAAmB,CACxB,IAAKn7B,KAAKqY,MAAO,OAEjB,kBADMrY,KAAKoC,KAAKw9B,YAGpB,IAAIt8B,OACe/B,IAAfvB,KAAK27B,MACLr4B,QAAWtD,KAAK27B,MAAMr5B,OAAOtC,KAAKu0B,MAAOv0B,KAAKkC,MAAOlC,KAAKu0B,MAAMG,cAGhEvL,MAAM,kBACN7lB,EAAK,GAETtD,KAAKi8B,SAASj8B,KAAKoC,KAAK4kB,MAAM1jB,OAExBtD,KAAAiH,KAAOnH,OAAA2Y,EAAA,EAAA3Y,CAAS,KACtB,IASI0C,GATAE,YAACA,GAAe1C,KAAK66B,SACrBhB,GAAmB,GAEnB13B,MAACA,GAASnC,KAAKkC,OACfW,WAACA,GAAcV,EACnB,QAAmBZ,IAAfsB,EAA0B,CAC1B,IAAI3C,KAACA,EAAI6B,IAAEA,GAAOc,EAClBg3B,EAAyC,OAA9B75B,KAAKu0B,MAAMvxB,SAAS9C,GAGnC,GAAmB,OAAfF,KAAKqY,MACL7V,EAAUoW,EAAA,cAAAA,EAAA,cAAGlW,GAAe1C,KAAK27B,MAAMj5B,kBACtC,GAA0B,kBAAf1C,KAAKqY,MACjB7V,EAAU1C,OAAA62B,EAAA,EAAA72B,CAAGE,KAAKqY,WAEjB,CACD,IAAIwnB,EAAQ7/B,KAAKoC,KAAK4kB,MAAMhnB,KAAKqY,OACjC7V,EAAU1C,OAAA62B,EAAA,EAAA72B,CAAG+/B,GAEjB,IAAsB,IAAlB7/B,KAAKm7B,SAEL,OAAOviB,EAAA,qBACHlT,UAAU,yFACVX,QAAS/E,KAAK+E,SACbvC,GAGT,IAAIu4B,SAACA,GAAY/6B,KAAKqC,QAClBgV,IAAuB,IAAb0jB,IAAyC,IAApB/6B,KAAKkC,MAAM84B,OAAmBpiB,EAAA,cAAC6jB,EAAO,MACzE,OAAO7jB,EAAA,cAAAA,EAAA,cACFvB,EACDuB,EAAA,wBAAQlT,UAAU,oCACd6C,KAAK,SACLsxB,SAAUA,EACV/wB,MAAOu2B,EACPt6B,QAAS/E,KAAK+E,SACbvC,MA1DTxC,KAAKoC,KAAOF,EAAMC,MAClBnC,KAAKu0B,MAAQA,EACbv0B,KAAK27B,MAAQpH,EAAM3yB,OAAOM,EAAMhC,OChBjC,MAAM4/B,EAQTtgC,YAAY+0B,EAAa5zB,EAAsBH,GAC3CR,KAAKu0B,MAAQA,EACbv0B,KAAKQ,SAAWA,EAChB,IAAIa,OAACA,EAAMM,KAAEA,EAAIhC,GAAEA,EAAEC,IAAEA,GAAOe,EAG9B,GAFAX,KAAKqB,OAASA,EACdrB,KAAK2B,KAAOA,OACDJ,IAAP5B,EAAkB,CAClB,IAAIqC,MAACA,EAAK+9B,OAAEA,GAAUpgC,EACtBK,KAAKggC,UAAYh+B,EACjBhC,KAAK+/B,OAASA,EAElB//B,KAAKJ,IAAMA,EAGfJ,QAEI,YAAuB+B,IAAhBvB,KAAK+/B,OAAsB//B,KAAKigC,aAAejgC,KAAKkgC,kBAGvD1gC,YAAYU,EAAaN,GAC7B,QAAY2B,IAAR3B,EAAmB,OACvB,IAAIyB,OAACA,GAAUzB,EACf,YAAe2B,IAAXF,EACGA,EAAOnB,IAASA,OADvB,EAIIV,aACJ,IAAI2gC,EAAgB,GAEpB,GADAngC,KAAKogC,gBAAgBD,EAAOngC,KAAKqB,OAAQrB,KAAKJ,UAC5B2B,IAAdvB,KAAK2B,KACL,IAAK,IAAII,KAAO/B,KAAK2B,KAAMw+B,EAAM36B,KAAKxF,KAAKqgC,YAAYt+B,IAK3D,YAHsBR,IAAlBvB,KAAKQ,UACL2/B,EAAM36B,KAAK,IAAIg0B,EAAY,IAAIE,EAAQ15B,KAAKu0B,SAEzC4L,EAGH3gC,gBAAgB2gC,EAAe9+B,EAAgBzB,GACnD,QAAe2B,IAAXF,EACJ,IAAK,IAAIa,KAASb,EAAQ8+B,EAAM36B,KAAKxF,KAAKsgC,cAAcp+B,EAAOtC,IAG3DJ,kBAQJ,MAPoB,GAuDhBA,cAAc0C,EAAatC,GAC/B,IACIi7B,EAEAz6B,EASAg5B,EACAmH,GAbArgC,KAACA,GAAQgC,EAETs+B,EAAMxgC,KAAKygC,YAAYvgC,EAAMN,GAwBjC,MAtBmB,kBAAR4gC,GACPpgC,EAAQogC,EAAIpgC,MACZy6B,EAAW2F,IAGXpgC,EAAQogC,EACR3F,OAAWt5B,QAIQA,IAAnBvB,KAAKggC,YAAyBO,EAAWvgC,KAAKggC,UAAU9/B,SAS7CqB,KALX63B,EADoB,oBAAbmH,EACE,IAAI3C,EAAc59B,KAAKu0B,MAAOryB,EAAO24B,GCjInD,SAAqBn5B,EAAYQ,EAAcG,EAAkBw4B,GACpE,IAAIzB,EACJ,OAAQl3B,EAAMqG,MACV,QAAS,OACT,IAAK,UACL,IAAK,WACL,IAAK,MACL,IAAK,SACD6wB,EAASmE,EACT,MACJ,IAAK,KACD,IAAIp7B,MAACA,GAASD,EACd,QAAcX,IAAVY,EAAqB,OACzBi3B,EAASmE,EACT,MACJ,IAAK,MACDnE,EAASoE,EACT,MACJ,IAAK,OACDpE,EAASyD,EACT,MACJ,IAAK,OACDzD,EAASqE,EACT,MACJ,IAAK,WACDrE,EAASsE,EACT,MACJ,IAAK,OACDtE,EAASuE,EAGjB,OAAO,IAAIvE,EAAO13B,EAAMQ,EAAOG,EAASw4B,GDqGvB6F,CAAY1gC,KAAKu0B,MAAOryB,EAAOq+B,EAAqB1F,MAG7DzB,EAAS,IAAIsG,EAAW1/B,KAAKu0B,MAAOryB,EAAOq+B,EAAqB1F,IAE7D,IAAI1B,EAAW/4B,GAASF,EAAMk5B,GAGjC55B,YAAYuC,GAChB,IAAI7B,KAACA,EAAImB,OAAEA,GAAUU,EAIjBu3B,EAAO,IAAIuE,EAAK79B,KAAKu0B,MAAOxyB,GAChC,OAAO,IAAIs3B,EAASn5B,EAAMo5B,QEjItB8B,glBAAZ,SAAYA,GAAUA,IAAA,aAAKA,IAAA,eAAMA,IAAA,uBAAjC,CAAYA,MAAQ,KAgBb,MAAMgE,EAOT5/B,YAAYmB,EAAsBH,GA0BlCR,KAAA2gC,QAAkC,GAClC3gC,KAAA4gC,MAA+B,GAwBvB5gC,KAAA6gC,aAAe,CAACvgB,IACpBA,EAAM+c,kBACC,IAGDr9B,KAAAiH,KAAOnH,OAAA2Y,EAAA,EAAA3Y,CAAS,EAAE4F,eACjBkT,EAAA,sBAAMlT,UAAWA,EAAWlF,SAAUR,KAAK6gC,cAC7C7gC,KAAKmgC,MAAMl3B,IAAIhB,GAAKA,EAAEgR,YAzD3B,IAAI5X,OAACA,EAAMM,KAAEA,EAAIhC,GAAEA,EAAEC,IAAEA,EAAGgC,OAAEA,EAAMZ,KAAEA,EAAIC,cAAEA,EAAaC,cAAEA,EAAaC,eAAEA,EAAcC,kBAAEA,EAAiBV,KAAEA,GAAQC,EACnHX,KAAKqB,OAASA,EACdrB,KAAK2B,KAAOA,EACZ3B,KAAKL,GAAKA,OACM4B,IAAZvB,KAAKL,KAAkBK,KAAKggC,UAAYhgC,KAAKL,GAAGqC,OACpDhC,KAAKJ,IAAMA,EACXI,KAAK4B,OAASA,EACd5B,KAAKgB,KAAOA,EACZhB,KAAKiB,cAAgBA,EACrBjB,KAAKkB,cAAgBA,EACrBlB,KAAKmB,eAAiBA,EACtBnB,KAAKoB,kBAAoBA,GAAqBwX,EAAA,2BAAOA,EAAA,cAAC6iB,EAAA,GAAE,CAACv7B,KAAK,0BAClCF,KAAKU,UAAhBa,IAAbf,EAAoC46B,EAASD,SAChCz6B,EACjBV,KAAK8gC,kBACL9gC,KAAK+gC,WAAWpgC,EAASH,GACzBR,KAAKQ,SAAWA,EAmBZhB,WAAWmB,EAAsBH,GACrCR,KAAKghC,SAAW,GAChB,IAAIC,EAAe,IAAInB,EAAa9/B,KAAMW,EAASH,GACnDR,KAAKmgC,MAAQc,EAAalP,QAC1B,IAAK,IAAImP,KAAQlhC,KAAKmgC,MAAO,CACzBngC,KAAKghC,SAASE,EAAK55B,KAAO45B,EAC1B,IAAIP,EAAUO,EAAKC,aACnB,QAAgB5/B,IAAZo/B,EAAuB,IAAK,IAAIrb,KAAKqb,EAAS3gC,KAAK2gC,QAAQrb,EAAEplB,MAAQolB,EACzE,IAAIgU,EAAO4H,EAAKE,eACH7/B,IAAT+3B,IAAoBt5B,KAAK4gC,MAAMtH,EAAKp5B,MAAQo5B,GAChD,IAAIG,EAAUyH,EAAKG,kBACH9/B,IAAZk4B,IAAuBz5B,KAAKy5B,QAAUA,IAelDj6B,QAAQU,GACJ,OAAOF,KAAKghC,SAAS9gC,GAGzBV,gBACI,QAAuB+B,IAAnBvB,KAAKggC,UAAyB,OAClC,IAAIv/B,EAAST,KAAKS,OAClB,IAAK,IAAImH,KAAK5H,KAAKggC,UAAW,CAC1B,IAAIv4B,EAAOzH,KAAKggC,UAAUp4B,GACN,oBAATH,IACXhH,EAAOmH,GAAKH,EAAKrE,KAAKpD,KAAMS,KAI9BjB,sDACoB+B,IAAlBvB,KAAKQ,iBACHR,KAAKQ,cAGfhB,YACI,IAAIqB,EAAU,GACVJ,EAAST,KAAKS,OAClB,IAAK,IAAI6kB,KAAKtlB,KAAKqB,OAAQ,CACvB,IAAInB,KAACA,GAAQolB,EACTrd,EAAIxH,EAAOP,GACfW,EAAIX,GAAe,OAAN+H,GAA2B,kBAANA,EAAiBA,EAAE3E,GAAK2E,EAE9D,QAAkB1G,IAAdvB,KAAK2B,KACL,IAAK,IAAII,KAAO/B,KAAK2B,KAAM,CACvB,IAAIzB,KAACA,EAAImB,OAAEA,EAAMiC,GAAEA,EAAEiZ,MAAEA,GAASxa,EAC5B8rB,EAAOhtB,EAAIX,GAAQ,GACnBohC,EAAOthC,KAAK4gC,MAAM1gC,GAAM2tB,KAC5B,IAAK,IAAIjH,KAAO0a,EAAM,CAClB,IAAI75B,EAAO,QACAlG,IAAP+B,IAAkBmE,EAAKnE,GAAMsjB,EAAItjB,SACvB/B,IAAVgb,IAAqB9U,EAAK8U,GAASqK,EAAIrK,IAC3C,IAAK,IAAI+I,KAAKjkB,EAAQ,CAClB,IAAKnB,KAAK+lB,GAAMX,EACZrd,EAAI2e,EAAIX,GACZxe,EAAKwe,GAAa,OAANhe,GAA2B,kBAANA,EAAiBA,EAAE3E,GAAK2E,EAE7D4lB,EAAKroB,KAAKiC,IAItB,OAAO5G,EAGXq9B,gBACI,IAAIr9B,EAAU,GACVJ,EAAST,KAAKS,OAClB,IAAK,IAAI6kB,KAAKtlB,KAAKqB,OAAQ,CACvB,IAAInB,KAACA,EAAIiC,MAAEA,GAASmjB,EAChBrd,EAAIxH,EAAOP,GACfW,EAAIX,QAAmBqB,IAAVY,GAAoC,kBAAN8F,EAAiBA,EAAI9F,EAAM6kB,MAAM/e,GAEhF,QAAkB1G,IAAdvB,KAAK2B,KAAoB,OAAOd,EACpC,IAAK,IAAIkB,KAAO/B,KAAK2B,KAAM,CACvB,IAAIzB,KAACA,EAAImB,OAAEA,EAAMiC,GAAEA,EAAEiZ,MAAEA,GAASxa,EAC5B8rB,EAAOhtB,EAAIX,GAAQF,KAAK4gC,MAAM1gC,GAAM2tB,KAAKnc,QAC7C,IAAK,IAAIkV,KAAOiH,EACZ,IAAK,IAAIvI,KAAKjkB,EAAQ,CAClB,IAAKnB,KAAK+lB,EAAE9jB,MAAEA,GAASmjB,EACnBrd,EAAI2e,EAAIX,GACZW,EAAIX,QAAiB1kB,IAAVY,GAAoC,kBAAN8F,EAAiBA,EAAI9F,EAAM6kB,MAAM/e,IAItF,OAAOpH,EAGXrB,UAAU+hC,GACN,QAAmBhgC,IAAfggC,EAEA,YADAvhC,KAAKykB,QAGT,IAAIhkB,EAAST,KAAKS,OACdy6B,EAASl7B,KAAKk7B,OAClB,IAAK,IAAI5V,KAAKtlB,KAAKqB,OAAQ,CACvB,IAAI4kB,EAAKX,EAAEplB,KACXg7B,EAAOjV,QAAM1kB,EACb,IAAI0G,EAAKs5B,EAAWtb,GACpBxlB,EAAOwlB,GAAMhe,EAGjB,IAAK,IAAIL,KAAK5H,KAAK4gC,MAAO,CACtB,IAAI/S,EAAO0T,EAAW35B,GACtB,QAAarG,IAATssB,EAAoB,SACxB,IAAI2T,EAAU/gC,EAAOmH,GACrB45B,EAAQr6B,QACRq6B,EAAQh8B,QAAQqoB,IAId+L,WACN,IAAK,IAAIhyB,KAAK5H,KAAK2gC,QACf,IAA6B,IAAzB3gC,KAAK2gC,QAAQ/4B,GAAGgyB,KAAgB,OAAO,EAE/C,OAAO,EAEXp6B,QACI,IAAIiB,EAAST,KAAKS,OACdy6B,EAASl7B,KAAKk7B,OAClB,IAAK,IAAI5V,KAAKtlB,KAAKqB,OAAQ,CACvB,IAAI4kB,EAAKX,EAAEplB,KAEXO,EAAOwlB,GAAM,KACbiV,EAAOjV,QAAM1kB,EAEjB,IAAK,IAAIqG,KAAK5H,KAAK2gC,QAAS,CACxB,IAAIc,EAAOzhC,KAAK2gC,QAAQ/4B,QAEbrG,IADFkgC,EAAKvhC,MAGduhC,EAAKxF,SAAS,MAElB,IAAK,IAAIr0B,KAAK5H,KAAK4gC,MAAO,CACX5gC,KAAK4gC,MAAMh5B,GACjB6c,SAIbjlB,SAASqmB,GACL,OAAO7lB,KAAKS,OAAOolB,GAEvBrmB,SAASqmB,EAAmBxN,GAAcrY,KAAKS,OAAOolB,GAAaxN,EAEnE7Y,SAASqmB,EAAkB/e,GAAe9G,KAAKk7B,OAAOrV,GAAa/e,EAE3DtH,iBAAiB6B,GACrB,IAAI4G,EAAuB,CACvBy5B,mBAAoB,SAASC,GACzB,OAAO3hC,KAAK2hC,KAGpB,IAAK,IAAIrc,KAAKjkB,EAAQ,CAElB4G,EADSqd,EAAEplB,MACH,KAEZ,OAAO+H,EAEHzI,wBACJ,IAAIyI,EAAuBjI,KAAK4hC,iBAAiB5hC,KAAKqB,QACtD,QAAkBE,IAAdvB,KAAK2B,KACL,IAAK,IAAII,KAAO/B,KAAK2B,KACjBsG,EAAElG,EAAI7B,MAAQ2nB,EAAA,EAAW3D,MAAM,GAAI,CAACC,MAAK,IAIjD,OADUrkB,OAAA+nB,EAAA,EAAA/nB,CAAWmI,GAGjBzI,kBACJQ,KAAKS,OAAST,KAAK6hC,wBACnB7hC,KAAKk7B,OAASp7B,OAAA+nB,EAAA,EAAA/nB,CAAWE,KAAK4hC,iBAAiB5hC,KAAKqB,SAGxD7B,OAAOkG,EAAmB,QACtB,OAAOkT,EAAA,cAAC5Y,KAAKiH,KAAI,CAACvB,UAAWA,KA/DvBo8B,EAAA,CAATja,EAAA,4BC1MLjqB,EAAAE,EAAAC,EAAA,sBAAAq9B,IAAAx9B,EAAAE,EAAAC,EAAA,sBAAAqhC,kWCkBO,MAAM2C,EAOTviC,YAAYwiC,EAAmBC,EAAiBC,EAAiBviC,GAQzDK,KAAAqM,UAAY,WACA9K,IAAZvB,KAAKL,IAAkBK,KAAKL,GAAG0M,cAG/BrM,KAAAoN,QAAU,EAACd,EAAaiD,UACZhO,IAAZvB,KAAKL,IAAkBK,KAAKL,GAAGyN,eACpB7L,IAAXgO,GAAsBA,EAAO,kCAAgBjD,KAG7CtM,KAAAmiC,UAAY,CAAOr7B,GAAoBlE,EAAA5C,UAAA,0BAC3BuB,IAAZvB,KAAKL,WAAwBK,KAAKL,GAAGwiC,UAAUr7B,OAjBnD9G,KAAKgiC,SAAWA,EAChBhiC,KAAKiiC,QAAUA,EACfjiC,KAAKkiC,SAAWA,EAChBliC,KAAKL,GAAKA,EACVK,KAAKwiB,SAA4B,IAAlB4f,EAAA,EAAwB,IAAO,IAgBlD5iC,OACIQ,KAAKkc,KAAK,GAAI,IAGZ1c,IAAI8M,EAAa6P,2CACnB,GAAIA,EAAQ,CACR,IAAIwS,EAAO7uB,OAAO6uB,KAAKxS,GACvB,GAAIwS,EAAKnoB,OAAS,EAAG,CACjB,IAAIoP,EAAI,IACR,IAAK,IAAIysB,KAAK1T,EAAM,MAENptB,IADF4a,EAAOkmB,KAEf/1B,GAAOsJ,EAAIysB,EAAI,IAAMlmB,EAAOkmB,GAC5BzsB,EAAI,OAIhB,IAAIjV,EAAUX,KAAKsiC,eAEnB,OADA3hC,EAAQyS,OAAS,YACJpT,KAAKuiC,WAAWj2B,EAAK3L,KAGhCnB,KAAK8M,EAAa6P,2CACpB,IAAIxb,EAAUX,KAAKsiC,eAGnB,OAFA3hC,EAAQyS,OAAS,OACjBzS,EAAQ0S,KAAO3F,KAAKC,UAAUwO,SACjBnc,KAAKuiC,WAAWj2B,EAAK3L,KAGhCnB,IAAI8M,EAAa6P,2CACnB,IAAIxb,EAAUX,KAAKsiC,eAGnB,OAFA3hC,EAAQyS,OAAS,MACjBzS,EAAQ0S,KAAO3F,KAAKC,UAAUwO,SACjBnc,KAAKuiC,WAAWj2B,EAAK3L,KAGhCnB,OAAO8M,EAAa6P,2CACtB,IAAIxb,EAAUX,KAAKsiC,eAGnB,OAFA3hC,EAAQyS,OAAS,SACjBzS,EAAQ0S,KAAO3F,KAAKC,UAAUwO,SACjBnc,KAAKuiC,WAAWj2B,EAAK3L,KAEhCnB,MAAM8M,EAAa3L,EAAc2O,EAA2BC,2CAC9D,IAAIsQ,EAAO7f,KACXA,KAAKqM,YACL,IAAIkR,EAAOjR,EACX,SAASk2B,EAAW37B,GAChB,MAAO,CACH8U,QAASkE,EACTvT,IAAKiR,EACL5c,QAASA,EACT2O,QAASA,EACTC,OAAQA,EACRzI,MAAOD,GAGf,IACI3D,QAAQC,IAAI,QAASxC,EAAQyS,OAAQmK,GACrC,IAAIklB,EAAiB97B,WAAW,IAAMkZ,EAAKzS,QAAQd,EAAKiD,GAASvP,KAAKwiB,SAClE5iB,QAAYkL,MAAM43B,UAAUnlB,GAAO5c,GACvC,IAAe,IAAXf,EAAI+iC,GAIJ,MAHA/7B,aAAa67B,GACb5iB,EAAKzS,UACLlK,QAAQC,IAAI,gBAAiBvD,EAAIgjC,YAC3BhjC,EAAIgjC,WAEd,IAAIC,EAAKjjC,EAAIshB,QAAQjX,IAAI,gBACzB,GAAI44B,GAAMA,EAAG3d,QAAQ,SAAS,EAC1B,OAAOtlB,EAAImL,OAAOoD,KAAW20B,GAAUlgC,EAAA5C,UAAA,qBAGnC,GAFA4G,aAAa67B,GACb5iB,EAAKzS,WACc,IAAf01B,EAAQH,GACR,OAAOrzB,EAAQwzB,EAAQljC,UAEL2B,IAAlBuhC,EAAQh8B,YACF+Y,EAAKsiB,UAAUK,EAAW,gCAG1B3iB,EAAKsiB,UAAUK,EAAWM,EAAQh8B,QACxCyI,EAAOuzB,EAAQh8B,WAGpB4b,MAAY5b,GAAQlE,EAAA5C,UAAA,2BACb6f,EAAKsiB,UAAUK,EAAW17B,EAAM0B,aAGzC,CACD,IAAIia,QAAa7iB,EAAI6iB,OACrB7b,aAAa67B,GACb5iB,EAAKzS,UACLkC,EAAQmT,IAGhB,MAAM3b,GACF,GAAqB,kBAAVA,IACgD,IAAnDA,EAAMqf,cAAc7E,WAAW,gBAE/B,YADAyhB,EAAA,EAAIz0B,eAINtO,KAAKmiC,UAAUK,EAAW17B,EAAM0B,aAIhChJ,WAAW8M,EAAa3L,2CAClC,IAAIoR,EAAI/R,KAAKiiC,QAAU31B,EACvB,OAAsB,IAAlBtM,KAAKgiC,eAAuCzgC,IAAlBvB,KAAKkiC,UAA0BpiC,OAAAkjC,EAAA,EAAAljC,SAC5CA,OAAAkjC,EAAA,EAAAljC,CAAgBiS,EAAGpR,EAAQyS,OAAQzS,EAAQ0S,YAC/C,IAAIhE,QAAa,CAAOC,EAASC,IAAU3M,EAAA5C,UAAA,2BAC9CA,KAAK8K,MAAMiH,EAAGpR,EAAS2O,EAASC,QAIxC/P,UAAU8M,EAAY8G,EAAeC,2CACvC,IAAI1S,EAAUX,KAAKsiC,eAGnB,OAFA3hC,EAAQyS,OAASA,EACjBzS,EAAQ0S,KAAOA,QACF,IAAIhE,QAAa,CAAOC,EAASC,IAAU3M,EAAA5C,UAAA,2BAC9CA,KAAK8K,MAAMwB,EAAK3L,EAAS2O,EAASC,QAIxC/P,eACJ,IAAIqK,SAACA,EAAQC,QAAEA,GAAWi5B,EAAA,EACtB7hB,EAAU,IAAI+hB,QAElB/hB,EAAQgiB,OAAO,eAAgB,kCAC/B,IAAIx5B,EAAOG,EAUX,OATIC,IAASJ,GAAQ,IAAMI,GAC3BoX,EAAQgiB,OAAO,kBAAmBx5B,GAC9B1J,KAAKkiC,UACLhhB,EAAQgiB,OAAO,gBAAiBljC,KAAKkiC,UAE3B,CACVhhB,QAASA,oCCpLrBtjB,EAAAE,EAAAC,EAAA,sBAAAolC,IAAAvlC,EAAAE,EAAAC,EAAA,sBAAAqlC,IAAA,IAAAC,EAAAzlC,EAAA,GAAA8U,EAAA9U,EAAAolB,EAAAqgB,GAUO,MAAMF,EAA4C,CACrDz5B,UAAMnI,EACNoI,cAAUpI,GAyBP,SAAS6hC,EAA+BxjC,GAC3C,IAAI8J,KAACA,EAAIC,SAAEA,GAAYw5B,EACnBtiC,EAAQ,GACZ,QAAYU,IAAR3B,EAAmB,OAAOiB,EAC9B6R,EAAAC,EAAEgmB,MAAM93B,EAAKjB,EAAI0jC,GACjB,IAAIC,EAAI3jC,EAAI8J,GACZ,QAAUnI,IAANgiC,EAAiB,OAAO1iC,EAC5B6R,EAAAC,EAAEgmB,MAAM93B,EAAK0iC,EAAED,GACf,IAAIxlC,EAAIylC,EAAE55B,GACV,QAAUpI,IAANzD,EAAiB,OAAO+C,EAC5B6R,EAAAC,EAAEgmB,MAAM93B,EAAK/C,GACb,IAAI4B,OAACA,GAAUmB,EACf,QAAeU,IAAX7B,EACA,IAAK,IAAIkI,KAAKlI,EACVA,EAAOkI,EAAEue,eAAiBzmB,EAAOkI,GAGzC,OAAO/G,GAlCV,WACG,IAAI6I,EAAcC,EACdE,EAAW5F,UAAUu/B,WAAav/B,UAAUu/B,UAAU,IACtDv/B,UAAU4F,SAEd,GAAKA,EAIA,CACD,IAAI0H,EAAQ1H,EAAS2H,MAAM,KAC3B9H,EAAO6H,EAAM,GACTA,EAAM/K,OAAS,IAAGmD,EAAW4H,EAAM,SANvC7H,EAAO,KACPC,EAAW,MAZZ,SAAuBD,EAAaC,GACvCw5B,EAAWz5B,KAAOA,EAClBy5B,EAAWx5B,SAAWA,EAiBtB85B,CAAc/5B,EAAMC,GAdxB,2XCXO,MAAe+5B,EAElBlkC,YAAYmkC,GACR3jC,KAAK2jC,SAAWA,EAEpBnkC,SACI,OAAOoZ,EAAA,qBAAKlT,UAAU,aACjB1F,KAAK4jC,iBAIJC,eAAwB,OAAO,EAC/BC,aAAsB,OAAO,EACvCtkC,SACAA,eACAA,WAAWiB,IACXjB,SAASqmB,EAAkB/e,IAC3BtH,cAAciB,IACdjB,OAAiC,OAAjBQ,KAAK+jC,YAAoB/jC,KAAK6jC,SACpCrkC,aARAwQ,EAAA,CAAT6X,EAAA,gCACS7X,EAAA,CAAT6X,EAAA,8BAUE,MAAemc,UAAgBN,EAWlClkC,YAAYmkC,EAAmBzhC,EAAa+hC,GACxCpkC,MAAM8jC,GACN3jC,KAAKkC,MAAQA,EACblC,KAAKikC,KAAOA,EACZjkC,KAAK6wB,OACL7wB,KAAKkkC,WAEC1kC,IAAI2kC,GACVnkC,KAAKmkC,QAAUA,EAET3kC,OACNQ,KAAKkzB,MAAQ,GACb,IAAIrM,EAAI7mB,KAAKkC,MAAMgxB,WACT3xB,IAANslB,KACyB,IAArB0M,MAAMC,QAAQ3M,GAAa7mB,KAAKkzB,MAAM1tB,QAASqhB,GAC9C7mB,KAAKkzB,MAAM1tB,KAAKqhB,IAGnBrnB,WACN,OAAOQ,KAAKwE,MAAQ,CAChBk3B,IAAK17B,KAAK07B,IAAI51B,KAAK9F,MACnBE,KAAMF,KAAKkC,MAAMhC,MAGf2jC,eAAwB,YAAsBtiC,IAAfvB,KAAK8G,MACpCg9B,aAEN,YADyBviC,IAAfvB,KAAKqY,OAAuBrY,KAAKqY,QAAUrY,KAAKkC,MAAMkiC,aAGpE5kC,aAAeQ,KAAKqY,WAAQ9W,EAC5B/B,QAAUQ,KAAKqkC,cAAerkC,KAAKskC,aACnC9kC,cAAgBQ,KAAKukC,UAAOhjC,EAAWvB,KAAK8G,WAAQvF,EACpD/B,WAAWiB,GACPA,EAAOT,KAAKkC,MAAMhC,MAAQF,KAAKqY,MAEnC7Y,SAASqmB,EAAkB/e,IAC3BtH,cAAciB,IACJjB,sBAA2B,OAAOQ,KAAKqY,MACvC7Y,WACN,IACI,IAAIyI,EAAIjI,KAAKwkC,sBACb,GAAIxkC,KAAKkzB,MAAM1sB,OAAS,EAAG,CACvB,IAAIozB,EACJ,IAAK,IAAItG,KAAQtzB,KAAKkzB,MAAO,CACzBhwB,QAAQC,IAAI,eAAgB8E,GAC5B,IAAIpB,EAAMysB,EAAKrrB,GAEf,GADA/E,QAAQC,IAAI,uBAAwB8E,EAAGpB,IAC3B,IAARA,EACA7G,KAAK8G,WAAQvF,EACbq4B,GAAO,OAEN,QAAYr4B,IAARsF,EAKL,OAFA7G,KAAK8G,MAAQD,OACb7G,KAAKukC,MAAO,GAIpBvkC,KAAKukC,KAAO3K,EAEhB55B,KAAKqY,MAAQpQ,EAEjB,MAAOiG,GACHlO,KAAK8G,MAAQoH,EAAE1F,SAGvBhJ,SACI,IAAIwjB,EACJ,QAAkBzhB,IAAdvB,KAAKikC,KAAoB,CACzB,IAAIQ,MAACA,GAASzkC,KAAKikC,UACL1iC,IAAVkjC,IAAqBzhB,EAAIpK,EAAA,uBAAOlT,UAAU,cAAc++B,IAEhE,OAAO7rB,EAAA,qBAAKlT,UAAU,aACjB1F,KAAK4jC,gBACL5gB,IA/EGhT,EAAA,CAAX6X,EAAA,8BACW7X,EAAA,CAAX6X,EAAA,+BACW7X,EAAA,CAAX6X,EAAA,+BA0BS7X,EAAA,CAAT6X,EAAA,gCACS7X,EAAA,CAAT6X,EAAA,8BC1DE,MAAM6c,UAAuBhB,EAChClkC,YAAYgF,GACR3E,MAAM2E,GACNxE,KAAK2kC,WAAa3kC,KAAK2kC,WAAW7+B,KAAK9F,MAEnCR,aACJ,IAAIolC,EAAU5kC,KAAK2jC,SAASn/B,MAAMogC,aAClBrjC,IAAZqjC,GAEJA,EADa5kC,KAAK2jC,SAASkB,cAG/BrlC,gBACI0D,QAAQC,IAAI,yBACZ,IAAI2hC,EAAU9kC,KAAK2jC,SAASmB,QACxBjB,EAAW7jC,KAAK2jC,SAASE,SACzBr/B,EAAQxE,KAAK2jC,SAASn/B,MAC1BtB,QAAQC,IAAI,+CAAgD2hC,EAASjB,GACrE,IACIkB,GADAC,aAACA,EAAYC,YAAEA,EAAWL,QAAEA,GAAWpgC,EAO3C,YALoBjD,IAAhB0jC,IACAF,EAAWnsB,EAAA,wBAAQlT,UAAU,+BAA+BX,QAAS/E,KAAK2kC,YACrEM,IAGFrsB,EAAA,qBAAKlT,UAAU,gCAClBkT,EAAA,wBACIlT,UAAU,kBACV6C,KAAK,SACLsxB,SAAUiL,GAAWjB,GACpBmB,GAAgB,gBAEpBD,sBC/Bb,MAAMG,EAAc,mDAEb,MAAeC,UAAqBnB,EAC7BxkC,OACNK,MAAMgxB,QACsB,IAAxB7wB,KAAKkC,MAAM64B,UACX/6B,KAAKkzB,MAAM1tB,KAAMyC,GACL,OAAJA,QAAgB1G,IAAJ0G,GAAiD,IAA/BA,EAAayoB,OAAOlqB,QAAqB0+B,GAO7E1lC,sBAA2B,OAAOQ,KAAKolC,WAAWplC,KAAKmkC,QAAQ9rB,OAE/D7Y,WACNK,MAAMqkC,WACNmB,EAAA,OAASrlC,KAAKwE,MAAO,CACjBs3B,OAAQ97B,KAAK87B,OAAOh2B,KAAK9F,MACzB67B,QAAS77B,KAAK67B,QAAQ/1B,KAAK9F,MAC3Bg8B,SAAUh8B,KAAKg8B,SAASl2B,KAAK9F,QAEjC,IAAIikC,EAAOjkC,KAAKikC,KAMhB,YALa1iC,IAAT0iC,GACAoB,EAAA,OAASrlC,KAAKwE,MAAO,CACjB2vB,YAAa8P,EAAK9P,cAGnBn0B,KAAKwE,MAENhF,WAAW6Y,GAAoB,OAAOA,EACxC7Y,SAEJQ,KAAK+jC,WAEDvkC,WACJ0D,QAAQC,IAAI,YACZnD,KAAK+jC,WAEDvkC,UACJQ,KAAKqkC,cAIC7kC,YACN,OAAO8lC,EAAW,CACdC,gBAAgB,EAChBC,eAA6B,IAAdxlC,KAAKukC,KACpBkB,kBAA6BlkC,IAAfvB,KAAK8G,MACnB4+B,gBAA2BnkC,IAAfvB,KAAK8G,QAAqC,IAAd9G,KAAKukC,OAG3C/kC,cACN,OAAOoZ,EAAA,sBAAA9Y,OAAA+I,OAAA,CAAOnD,UAAW1F,KAAK0F,aAAiB1F,KAAKwE,QAE9ChF,IAAI2kC,GACVtkC,MAAM67B,IAAIyI,GACNA,IACAA,EAAQ9rB,WAAuB9W,IAAfvB,KAAKqY,MAAqB,GAAGrY,KAAKqY,OAGhD7Y,cAEN,YAAmB+B,IAAfvB,KAAK8G,MAA4B,KAC9B8R,EAAA,qBAAKlT,UAAU,oBAAoB1F,KAAK8G,OAEnDtH,aAAeK,MAAMykC,aAActkC,KAAKmkC,QAAQ9rB,MAAQ,GACxD7Y,SAASqmB,EAAkB/e,GACnB9G,KAAKkC,MAAMhC,OAAS2lB,IAAW7lB,KAAK8G,MAAQA,GAEpDtH,cAAciB,GACV,IAAIwH,EAAIxH,EAAOT,KAAKkC,MAAMhC,WAChBqB,IAAN0G,IAEJjI,KAAKqY,MAAQpQ,GAEjBzI,gBACI,OAAOoZ,EAAA,cAACA,EAAA,SAAc,KACjB5Y,KAAK2lC,cACL3lC,KAAKw7B,gBCpFX,MAAMoK,UAAsBT,EAErB3lC,WACN,IAAImI,EAAI9H,MAAMqkC,WAKd,OAJAmB,EAAA,OAAS19B,EAAG,CACRY,KAAM,OACNg0B,UAAWv8B,KAAKkC,MAAMq6B,YAEnB50B,EAEDnI,WAAW6Y,GACjB,QAAc9W,IAAV8W,GACwB,IAAxBA,EAAMqY,OAAOlqB,OACjB,OAAO6R,GCbf,MAAMwtB,EAAmB,iCACnBC,EAAS,2BACTC,EAAS,2BAETjJ,EAAc,GACdC,EAAc,GCNb,MAAMiJ,UAAuBhC,EAChCxkC,gBACI,OAAOoZ,EAAA,qBAAKlT,UAAU,0BAClBkT,EAAA,qBAAKlT,UAAU,sBAAsBugC,KAAK,4CACVrtB,EAAA,mCACxBlL,KAAKC,UAAU3N,KAAKkC,0BAAuB0W,EAAA,kCAC5ClL,KAAKC,UAAU3N,KAAKikC,yBAAsBrrB,EAAA,4BAMtD,MAAMstB,UAAqBxC,EAE9BlkC,YAAYmkC,EAAmBQ,GAC3BtkC,MAAM8jC,GACN3jC,KAAKmkC,QAAUA,EAEnB3kC,gBACI,OAAOoZ,EAAA,qBAAKlT,UAAU,0BACjB1F,KAAKmkC,mRCfX,MAAMgC,UAAsBnC,EAAnCxkC,kCAIYQ,KAAA+E,QAAU,KAAWnC,EAAA5C,UAAA,qBACzB,IAAIomC,KAACA,EAAIC,WAAEA,GAAcrmC,KAAKikC,KAC1Bx8B,QAAa2+B,EAAKpmC,KAAKikC,KAAMjkC,KAAK2jC,SAASn/B,MAAOxE,KAAK2jC,SAASkB,cACpE,QAAatjC,IAATkG,EAEA,YADAzH,KAAKqY,WAAQ9W,GAGjB,QAAmBA,IAAf8kC,EAEA,YADArmC,KAAKqY,MAAQ5Q,EAAKnE,IAGtB,IAAIA,GAACA,EAAEw2B,QAAEA,GAAWuM,EAAW5+B,GAC/BzH,KAAKqY,MAAQ/U,EACbtD,KAAK85B,QAAUA,KAEnB95B,KAAAsmC,SAAW,CAACjuB,IACRrY,KAAKqY,MAAQA,EAAM/U,KAEvB9D,cAAciB,GACV,IAAIwH,EAAIxH,EAAOT,KAAKkC,MAAMhC,MAC1BF,KAAKqY,MAAQpQ,EAETzI,iBACJ,IAAI+mC,WAACA,EAAUF,WAAEA,EAAUG,YAAEA,GAAexmC,KAAKikC,KACjD,QAAmB1iC,IAAfvB,KAAKqY,MACL,OAAOmuB,GAAe,uBAE1B,QAAqBjlC,IAAjBvB,KAAK85B,QACL,OAAO95B,KAAK85B,QAEhB,QAAmBv4B,IAAfglC,QACmBhlC,IAAf8kC,EAA0B,CAC1B,IAAI5+B,EAAO8+B,EAAWvmC,KAAKqY,OAC3B,GAAI5Q,EAAM,CACN,IAAI5G,EAAMwlC,EAAW5+B,GACrB,QAAYlG,IAARV,EAAmB,OAAOA,EAAIi5B,SAI9C,OAAO2M,OAAOzmC,KAAKqY,OAgBvB7Y,gBACI,IAAI4C,KAACA,EAAIu5B,MAAEA,GAAS37B,KAAKikC,KACzB,YAAc1iC,IAAVo6B,EAEO/iB,EAAA,qBAAKlT,UAAU,yEAClBX,QAAS/E,KAAK+E,SACb/E,KAAK0mC,kBAGP9tB,EAAA,qBAAKlT,UAAU,wBAClBkT,EAAA,cAAC+iB,EAAMgL,UAAS,CAACrjC,GAAItD,KAAKqY,MACtB1Y,GAAIyC,oUApEJwkC,CAAA,CAAX/e,EAAA,iCCFE,MAAMgf,UAAwB7C,EAIjCxkC,YAAYmkC,EAAmBzhC,EAAa+hC,GACxCpkC,MAAM8jC,EAAUzhC,EAAO+hC,GACvBjkC,KAAK8mC,YAAc9mC,KAAK8mC,YAAYhhC,KAAK9F,MAmB7CR,YAAY8D,GACRtD,KAAKqY,MAAQ/U,EAAGA,GAEpB9D,cAAciB,GACV,IAAIwH,EAAIxH,EAAOT,KAAKkC,MAAMhC,MAC1BF,KAAKqY,MAAQpQ,EAETzI,eAEJ,OAAOoZ,EAAA,cAAC5Y,KAAKikC,KAAKtI,MAAMgL,UAAS7mC,OAAA+I,OAAA,GACzB7I,KAAKikC,KAAI,CACb3gC,GAAItD,KAAKqY,MAIT0uB,aAAc,IAAI/mC,KAAK2jC,SAASkB,aAChCiC,YAAa9mC,KAAK8mC,eAE1BtnC,gBACI,OAAOoZ,EAAA,qBAAKlT,UAAU,wBACjB1F,KAAKyC,+UA1CFukC,CAAA,CAAXnf,EAAA,iTCFE,MAAMof,UAAoBjD,EAAjCxkC,kCAIYQ,KAAA+E,QAAU,KAAYmiC,EAAAlnC,UAAA,qBAC1B,IAAIomC,KAACA,EAAIC,WAAEA,GAAcrmC,KAAKikC,KAC1Bx8B,QAAa2+B,EAAKpmC,KAAKikC,KAAMjkC,KAAK2jC,SAASn/B,MAAOxE,KAAK2jC,SAASkB,cACpE,QAAatjC,IAATkG,EAEA,YADAzH,KAAKqY,WAAQ9W,GAGjB,IAAI+B,GAACA,EAAEw2B,QAAEA,GAAWuM,EAAW5+B,GAC/BzH,KAAKqY,MAAQ/U,EACbtD,KAAK85B,QAAUA,KA6CX95B,KAAAiH,KAAOnH,OAAA2Y,EAAA,EAAA3Y,CAAS,KACpB,IAAI0C,GACCA,QAAS2kC,GAAWnnC,KAAKikC,KAW9B,OATIzhC,OADejB,IAAfvB,KAAKqY,OAAsC,OAAfrY,KAAKqY,MACvB,qBAOAO,EAAA,cAACuuB,EAAO,CAAC7jC,GAAItD,KAAKqY,QAEzBO,EAAA,qBACHlT,UAAU,kFACVX,QAAS/E,KAAK+E,SACbvC,KA3DThD,cAAciB,GACV,IAAIwH,EAAIxH,EAAOT,KAAKkC,MAAMhC,MAC1BF,KAAKqY,MAAQpQ,EA4BjBzI,gBACI,OAAOoZ,EAAA,cAAC5Y,KAAKiH,KAAI,qUA5CTmgC,CAAA,CAAXvf,EAAA,iCCZLjqB,EAAAE,EAAAC,EAAA,sBAAAspC,IAAAzpC,EAAAE,EAAAC,EAAA,sBAAA2mC,IAwBO,MAAM2C,EAA8B,CAAC3lC,EAAeklB,KAC3CA,EAAIxmB,MAChB,YAA8BmB,IAAfqlB,EAAK0gB,MAqDxB,SAA4B5lC,EAAetB,EAAcmnC,GACrD,OAAO,IAAIvB,EAAetkC,EAAM6lC,OAAiBhmC,GArDtCimC,CAAmB9lC,EAAMtB,EAAOwmB,QACbrlB,IAAfqlB,EAAK1kB,MAwBxB,SAA4BR,EAAetB,EAAcqnC,GACrD,IAAIvlC,MAACA,EAAK+hC,KAAEA,GAAQwD,EACpB,cAAevlC,GACX,IAAK,SACDA,EAAQ,CACJhC,KAAOgC,EACPqG,KAAM,UAEV,MACJ,IAAK,SACD,MACJ,QACI,OAAO,IAAIy9B,EAAetkC,EAAMQ,EAAO+hC,GAE/C,IAAIyD,EAAYxlC,EAAMqG,MAAQ,SAC9B,QAAahH,IAAT0iC,GAEA,QAAa1iC,KADb0iC,EAAO0D,EAAaD,IACI,OAAO,IAAI1B,EAAetkC,EAAMQ,EAAO+hC,QAE9D,QAAkB1iC,IAAd0iC,EAAK17B,KAAoB,CAC9B,IAAI+c,EAAIqiB,EAAaD,GACrBzD,EAAK17B,UAAWhH,IAAJ+jB,EAAe,SAAWA,EAAE/c,KAG5C,OAAO,IADOq/B,EAAS3D,EAAK17B,MAAQm/B,IAAc1B,GAC/BtkC,EAAMQ,EAAO+hC,GA/CrB4D,CAAmBnmC,EAAMtB,EAAOwmB,GACpC,IAAIsf,EAAaxkC,EAAMklB,EAAIkhB,OAGhCF,EAAuF,CACzFG,OAAUnC,EACVoC,SNbG,cAA8BpC,EACvBpmC,WACN,IAAImI,EAAI9H,MAAMqkC,WAKd,OAJAmB,EAAA,OAAS19B,EAAG,CACRY,KAAM,WACNg0B,UAAWv8B,KAAKkC,MAAMq6B,YAEnB50B,IMOXsgC,OLxBG,cAA4B9C,EAKrB3lC,OACNK,MAAMgxB,OACN7wB,KAAKk9B,WAAa,GAClB,IAAI1C,IAACA,EAAGG,IAAEA,GAAO36B,KAAKkC,MAYtB,YAXYX,IAARi5B,GACAx6B,KAAKkzB,MAAM1tB,KAAMyC,IAAc,QAAU1G,IAAN0G,EAAyB,QAAIA,EAAEuyB,IAAYsL,EAAStL,IACnFA,EAAM,GAAGx6B,KAAKk9B,WAAW13B,KAAKs3B,IAGlC98B,KAAKk9B,WAAW13B,KAAKs3B,QAGbv7B,IAARo5B,GACA36B,KAAKkzB,MAAM1tB,KAAMyC,IAAc,QAAU1G,IAAN0G,EAAyB,QAAIA,EAAE0yB,IAAYoL,EAASpL,IAEnF36B,KAAKkC,MAAMqG,MACf,IAAK,MACL,IAAK,SAAUvI,KAAKk9B,WAAW13B,KAAKu3B,IAIlCv9B,WAAW6Y,GACjB,QAAc9W,IAAV8W,EAAqB,OACzB,GAA4B,IAAxBA,EAAMqY,OAAOlqB,OAAc,OAC/B,IAAIwc,EAAIzX,OAAO28B,WAAW7vB,GAC1B,GAAIgiB,MAAMrX,GAAI,MAAM,IAAIL,MAAMkjB,GAC9B,OAAO7iB,EAGDxjB,WACNK,MAAMqkC,WACNmB,EAAA,OAASrlC,KAAKwE,MAAO,CACjB+D,KAAM,SACNwH,KAAO/P,KAAKkC,MAAmB6N,KAC/BysB,WAAYx8B,KAAKw8B,WAAW12B,KAAK9F,QAIzCR,WAAW8gB,GACP,IAAI8G,EAAK9G,EAAM2c,SACf,KAAW,IAAP7V,GAAmB,IAAPA,GAAmB,KAAPA,GAAaA,GAAM,IAAMA,GAAM,IAC3D,QAAwB7lB,IAApBvB,KAAKk9B,YACDl9B,KAAKk9B,WAAWhY,QAAQkC,IAAO,EAC/B,OAAQA,GACJ,KAAK2V,EAAa/8B,KAAKm9B,WAAY,MACnC,KAAKL,EAAa98B,KAAKo9B,WAAY9c,EAAM+c,sBAKrD/c,EAAM+c,iBAGF79B,WACJ,IAAIyI,EAAIjI,KAAKmkC,QAAQ9rB,MACbpQ,EAAEid,QAAQ,MACT,IAAGllB,KAAKmkC,QAAQ9rB,MAAQpQ,EAAE2G,QAAQ,IAAK,KAE5CpP,WACJ,IAAIyI,EAAIjI,KAAKmkC,QAAQ9rB,MACjB1Q,EAAIM,EAAEid,QAAQ,KACNjd,EAARN,GAAK,EAAOM,EAAE2G,QAAQ,IAAK,IACtB,IAAI3G,EACbjI,KAAKmkC,QAAQ9rB,MAAQpQ,IK3CzBkgC,SC5BG,cAA2BnE,EAOpBxkC,OACNK,MAAMgxB,OACN,IAAIuX,UAACA,EAASC,WAAEA,GAAcroC,KAAKkC,WACjBX,IAAd6mC,IAAyBpoC,KAAKooC,UAAY,QAC3B7mC,IAAf8mC,IAA0BroC,KAAKqoC,WAAa,GAGpD7oC,WACIK,MAAMqkC,WACNmB,EAAA,OAASrlC,KAAKwE,MAAO,CACjBw3B,SAAUh8B,KAAKg8B,SAASl2B,KAAK9F,QAIrCR,aACIQ,KAAKmkC,QAAQmE,QAAUtoC,KAAKkC,MAAMkiC,eAAiBpkC,KAAKooC,UACxDpoC,KAAKqY,MAAQrY,KAAKwkC,sBAGtBhlC,cAAciB,GACV,IAAIwH,EAAIxH,EAAOT,KAAKkC,MAAMhC,WAChBqB,IAAN0G,IACAA,EAAIjI,KAAKkC,MAAMkiC,cAQb5kC,sBAA4B,OAAOQ,KAAKmkC,QAAQmE,QAAStoC,KAAKooC,UAAUpoC,KAAKqoC,WAE/E7oC,WACJQ,KAAKqY,MAAQrY,KAAKwkC,sBAGtBhlC,gBACI,OAAOoZ,EAAA,qBAAKlT,UAAU,uBAClBkT,EAAA,uBAAOlT,UAAU,gBACbkT,EAAA,uBAAOlT,UAAU,uCACbkT,EAAA,uBAAOrQ,KAAK,WACRrI,KAAMF,KAAKkC,MAAMhC,KACjBw7B,IAAK17B,KAAKwE,MAAMk3B,IAChBM,SAAUh8B,KAAKwE,MAAMw3B,SACrBt2B,UAAU,yBACdkT,EAAA,sBAAMlT,UAAU,6BAChBkT,EAAA,sBAAMlT,UAAU,8BAA8B1F,KAAKikC,KAAK7jC,YDxBxEmoC,SE7BG,cAA2BvE,EAE9BxkC,gBACI,OAAOoZ,EAAA,qBAAKlT,UAAU,uBAClBkT,EAAA,qBAAKlT,UAAU,gBAEX1F,KAAKikC,KAAKpW,KAAK5kB,IAAI,CAACxB,EAAMyB,KACtB,IAAIuN,EAAGxO,EAMP,MALoB,kBAATR,EAAmBgP,EAAIxO,EAAIR,GAElCgP,EAAIhP,EAAKgb,KACTxa,EAAIR,EAAK4Q,OAENO,EAAA,uBAAOtR,IAAK4B,EAAOxD,UAAU,oCAChCkT,EAAA,uBAAOrQ,KAAK,QACRrI,KAAMF,KAAKkC,MAAMhC,KACjBwF,UAAU,yBACdkT,EAAA,sBAAMlT,UAAU,6BAChBkT,EAAA,sBAAMlT,UAAU,8BAA8B+Q,UFYlEnU,OG9BG,cAA4B0hC,EAC/BxkC,YAAamkC,EAAmBzhC,EAAa+hC,GACzCpkC,MAAM8jC,EAAUzhC,EAAO+hC,GACvBjkC,KAAK07B,IAAM17B,KAAK07B,IAAI51B,KAAK9F,MAInBR,sBACN,IAAIgpC,cAACA,EAAaC,gBAAEA,GAAmBzoC,KAAKmkC,QACxCl8B,EAAQwgC,EAAgB,GAAGpwB,MAC/B,OAAQrY,KAAKkC,MAAMqG,MACf,IAAK,SAAUN,EAAIsD,OAAOtD,GAAI,MAC9B,IAAK,OAAQA,EAAI,IAAIjD,KAAKiD,GAAI,MAC9B,IAAK,OACgB,kBAANA,IACPA,EAAqC,SAA/BA,EAAake,eAI/B,OAAOle,EAEXzI,gBACI,IAAIquB,KAACA,GAAQ7tB,KAAKikC,KAEdtjC,EAAiB,GAYrB,YAXYY,IAFFvB,KAAKikC,KAAK51B,SAGhB1N,EAAQ6E,KAAKoT,EAAA,wBAAQtR,KAAM,EAAG+Q,WAAO9W,GAAS,uBAClDZ,EAAQ6E,QAAQqoB,EAAK5kB,IAAI,CAACxB,EAAMyB,KAC5B,IAAIuN,EAAGxO,EAMP,MALoB,kBAATR,EAAmBgP,EAAIxO,EAAIR,GAElCgP,EAAIhP,EAAKgb,KACTxa,EAAIR,EAAK4Q,OAENO,EAAA,wBAAQtR,IAAK4B,EAAOmP,MAAOpQ,GAAIwO,MAEnCmC,EAAA,qBAAKlT,UAAU,uBAClBkT,EAAA,wBAAQ1Y,KAAMF,KAAKkC,MAAMhC,KAAMwF,UAAU,eAAeg2B,IAAK17B,KAAK07B,KAC7D/6B,MHPb+nC,UAAWvC,EACXwC,YAAa9B,EACb+B,SIpCG,cAA8BzD,EAIvB3lC,WACN,IAAImI,EAAI9H,MAAMqkC,YACV3H,UAACA,GAAav8B,KAAKkC,OACnBo/B,KAACA,GAAQthC,KAAKikC,KAKlB,OAJAoB,EAAA,OAAS19B,EAAG,CACR40B,UAAWA,EACX+E,KAAMA,IAEH35B,EAEDnI,cACN,OAAOoZ,EAAA,yBAAA9Y,OAAA+I,OAAA,CAAU6yB,IAAKjlB,IAAIzW,KAAKsS,GAAKmE,OAAUlV,IAAJkV,IAAeA,EAAE4B,MAAM,KAAK3S,UAAW1F,KAAK0F,aAAiB1F,KAAKwE,UJsBhH4hC,KAAQa,GAENU,EAAqC,CACvCI,OAAU,CAACx/B,KAAK,UAChB0/B,OAAU,CAAC1/B,KAAK,UAChBsgC,IAAO,CAACtgC,KAAK,UACbugC,IAAO,CAACvgC,KAAK,UACbwgC,KAAQ,CAACxgC,KAAK,2CKlDlB3K,EAAAE,EAAAC,EAAA,sBAAAirC,IAAAprC,EAAAE,EAAAC,EAAA,sBAAAkrC,IAAA,IAAA1kC,EAAA3G,EAAA,GAAAsrC,EAAAtrC,EAAA,IAMO,MAAeurC,EAIlB3pC,YAAYkC,EAAeklB,GAGvB,GAFA5mB,KAAK0B,KAAOA,EACZ1B,KAAK4mB,IAAMA,OACuBrlB,IAA7BqlB,EAAoBre,KAAoB,CACzC,IAAI6gC,EAAoBxiB,EAAqBygB,mBAClC9lC,IAAP6nC,IAAkBA,EAAK1nC,EAAK2lC,oBACrB9lC,IAAP6nC,IAAkBA,EAAKF,EAAA,GAC3BlpC,KAAKqpC,QAAUD,EAAG1nC,EAAMklB,IAKhCpnB,OACI,YAAqB+B,IAAjBvB,KAAKqpC,SACFrpC,KAAKqpC,QAAQzP,OAGxBp6B,SAASqmB,GACL,IAAI3jB,EAASlC,KAAK4mB,IAAiB1kB,MACnC,QAAcX,IAAVW,EAAqB,OAAO2jB,IAAc3jB,EAAMhC,KACpD,IAAIonC,EAAStnC,KAAK4mB,IAAiB0gB,MACnC,YAAc/lC,IAAV+lC,QAA0E/lC,IAA9C+lC,EAAMt/B,KAAKgC,GAAKA,EAAE9H,MAAMhC,OAAS2lB,GAGrEge,eAAwB,OAAO7jC,KAAKqpC,QAAQxF,SAC5CC,aAAsB,OAAO9jC,KAAKqpC,QAAQvF,OAC1CtkC,aACyB+B,IAAjBvB,KAAKqpC,SAAuBrpC,KAAKqpC,QAAQliC,QAEjD3H,mBACyB+B,IAAjBvB,KAAKqpC,SAAuBrpC,KAAKqpC,QAAQhF,cAEjD7kC,WAAWiB,QACcc,IAAjBvB,KAAKqpC,SAAuBrpC,KAAKqpC,QAAQxE,WAAWpkC,GAE5DjB,SAASqmB,EAAkB/e,QACFvF,IAAjBvB,KAAKqpC,SAAuBrpC,KAAKqpC,QAAQzU,SAAS/O,EAAW/e,GAErEtH,cAAciB,QACWc,IAAjBvB,KAAKqpC,SAAuBrpC,KAAKqpC,QAAQC,cAAc7oC,IAInE,MAAM8oC,UAA4BJ,EAC9B3pC,OAAO8H,GACH,OAAO/C,EAAA,qBAAK+C,IAAKA,EAAK5B,UAAU,cAAc1F,KAAK4mB,KAEvDid,eAAwB,OAAO,EAC/BC,aAAsB,OAAO,GAGjC,MAAM0F,UAA8BL,EAChC3pC,OAAO8H,GACH,OAAO/C,EAAA,qBAAK+C,IAAKA,EAAK5B,UAAU,kBAC5BnB,EAAA,uBAAOmB,UAAU,2BACX1F,KAAK4mB,IAAqBxmB,OAE/BJ,KAAKqpC,QAAQpwB,WAOnB,SAAS+vB,EAAmBtnC,EAAeklB,GAC9C,OAAO,IAAI4iB,EAAsB9nC,EAAMklB,GAGpC,SAASqiB,EAAiBvnC,EAAeklB,GAC5C,OAAO,IAAI2iB,EAAoB7nC,EAAMklB,2WC5ElC,SAAe6iB,EAAW9tB,EAAqBrP,EAAK3L,EAAS2O,EAASC,iDACnEoM,EAAQ7Q,MAAMwB,EAAK3L,EAAS2O,EAASC,KAGxC,MAAem6B,EAKlBlqC,YAAY+d,EAAc/B,GACtBxb,KAAKud,KAAOA,GAAQ,GACpBvd,KAAKwb,YAAcA,EAKVhc,KAAK8M,EAAY8G,EAAeC,2CACzC,IAAIsI,QAAgB3b,KAAK2pC,iBACzB,aAAahuB,EAAQiuB,UAAUt9B,EAAK8G,EAAQC,KAGnC7T,IAAI+d,EAAapB,2CAC1B,IAAIR,QAAgB3b,KAAK2pC,iBACzB,aAAahuB,EAAQ1R,IAAIjK,KAAKud,KAAOA,EAAMpB,KAGlC3c,KAAK+d,EAAapB,2CAC3B,IAAIR,QAAgB3b,KAAK2pC,iBACzB,aAAahuB,EAAQO,KAAKlc,KAAKud,KAAOA,EAAMpB,KAGnC3c,IAAI+d,EAAapB,2CAC1B,IAAIR,QAAgB3b,KAAK2pC,iBACzB,aAAahuB,EAAQe,IAAI1c,KAAKud,KAAOA,EAAMpB,KAGlC3c,OAAO+d,EAAapB,2CAC7B,IAAIR,QAAgB3b,KAAK2pC,iBACzB,aAAahuB,EAAQ2M,OAAOtoB,KAAKud,KAAOA,EAAMpB,4VC1B/C,MAAM0tB,UAAmBtlC,EAAA,UAC5B/E,YAAYgF,GACR3E,MAAM2E,GAwBFxE,KAAA8pC,YAAc,MAClBC,EAAA,EAAIC,WAAWhqC,KAAKsO,UAEhBtO,KAAAsO,OAAS,KAAW1L,EAAA5C,UAAA,qBACxB,IAAIsO,OAACA,GAAUtO,KAAKwE,MACE,oBAAX8J,UACDA,WAEJy7B,EAAA,EAAIz7B,YAAO/M,MA/BjBvB,KAAKiqC,UAAYjqC,KAAKiqC,UAAUnkC,KAAK9F,MACrCA,KAAKiG,MAAQ,CACTikC,SAAS,GAGjB1qC,YACIQ,KAAK4E,SAAS,CACVslC,QAASH,EAAA,EAAIxjC,MAAQ,IAG7B/G,qBACIQ,KAAKiqC,YAGTzqC,wBAGMA,qDACIuqC,EAAA,EAAIlkC,SAEdrG,aACI2G,OAAOyJ,KAAK7D,SAASC,SAASm+B,MAYlC3qC,SACI,IAEIqG,EAAUD,EAASwkC,EAFnBC,EAAIrqC,KAAKiG,MAAMikC,SAAW9hC,MAAQC,KAClC2O,MAACA,EAAKa,OAAEA,EAAMvJ,OAAEA,EAAM5I,UAAEA,GAAa1F,KAAKwE,MAE9C,QAAejD,IAAX+M,GAAwBlG,OAASC,MACX,mBAAXiG,IAAmC,IAAXA,GACV,oBAAXA,GACd,CACI,IAAI/E,KAACA,GAAQwgC,EAAA,EACb,QAAaxoC,IAATgI,EAAoB,CACpB,IAAI+gC,KAACA,EAAIpqC,KAAEA,GAAQqJ,EACnB6gC,EAAc7lC,EAAA,qBAAKmB,UAAU,6BACzBnB,EAAA,uBAAOmB,UAAU,cAAc4kC,GAAQpqC,GACvCqE,EAAA,mBAAGmB,UAAU,gDACTugC,KAAK,SACLlhC,QAAS/E,KAAK8pC,aACdvlC,EAAA,mBAAGmB,UAAU,sBAMjC,GAAI2kC,EACA,OAAQrqC,KAAKwE,MAAMqB,MACf,IAAK,OAAQA,OAAOtE,EAAW,MAC/B,QACA,IAAK,OAAQsE,EAAOtB,EAAA,qBAAKQ,QAAS/E,KAAK6F,MAAMtB,EAAA,mBAAGmB,UAAU,sBAA6B,MACvF,IAAK,QAASG,EAAOtB,EAAA,qBAAKQ,QAAS/E,KAAK6F,MAAMtB,EAAA,mBAAGmB,UAAU,iBAG/D0C,MAAQC,MACRnF,QAAQC,IAAI4I,SAASC,SAASm+B,MAC9BvkC,EAAMrB,EAAA,wBAAQQ,QAAS/E,KAAKuqC,cAEhC,IAAIC,GAAaxzB,GAASozB,IAAgB7lC,EAAA,2BAAQyS,MAAQozB,GAC1D,OAAO7lC,EAAA,wBAAQmB,UAAWA,GACrBE,EACAC,EACDtB,EAAA,yBAAMsT,GACL2yB,4EC3Eb,IAAaC,EAAb,cAA2B7xB,EAAA,UACvBpZ,SACI,IASI6qC,GATA3kC,UAACA,EAASglC,MAAEA,EAAK9c,KAAEA,EAAI8O,MAAEA,EAAKiO,WAAEA,EAAUC,cAAEA,EAAa90B,SAAEA,GAAY9V,KAAKwE,MAC5EgT,EAAKsH,IACLpZ,EACA,WACAkoB,GAAQ,YAAYA,EACpB,aAAe8O,GAAO,aACtBiO,GAAc,WAAWA,EACzBC,GAAiB,WAAWA,GAIhC,OADIF,IAAOL,EAAIzxB,EAAA,uBAAI8xB,IACZ9xB,EAAA,qBAAKlT,UAAW8R,GAClB1B,EACAu0B,KAfAI,uUAAKz6B,CAAA,CADjByI,EAAA,GACYgyB,UCFb,IAAaI,EAAb,cAAyBjyB,EAAA,UACrBpZ,SACI,IACI+jC,EAAG1c,EAGHikB,GAJAplC,UAACA,EAASk3B,KAAEA,EAAI9mB,SAAEA,EAAQkB,MAAEA,EAAKjS,QAAEA,GAAW/E,KAAKwE,MAMvD,YAJajD,IAATq7B,IAAoB2G,EAAI3qB,EAAA,4BAASgkB,SACvBr7B,IAAVyV,IAAqB6P,EAAIjO,EAAA,4BAAS5B,SAEtBzV,IAAZwD,IAAuB+lC,EAAS,kBAC7BlyB,EAAA,qBAAKlT,UAAWoZ,IAAW,SAAUpZ,EAAWolC,GAAS/lC,QAASA,GACpEw+B,EACD3qB,EAAA,yBAAM9C,GACL+Q,KAXAgkB,uUAAGE,CAAA,CADftyB,EAAA,GACYoyB,GCIN,MAAMG,UAAWpyB,EAAA,UACpBpZ,SACI,IAAIU,KAACA,EAAIwF,UAAEA,EAASkoB,KAAEA,EAAIqd,KAAEA,EAAIC,SAAEA,EAAQC,OAAEA,EAAMC,KAAEA,EAAIC,MAAEA,EAAKC,OAAEA,EAAMC,KAAEA,EAAIC,QAAEA,GAAWxrC,KAAKwE,MAC3FgT,EAAK8tB,EAAW5/B,EAAW,KAC3BxF,GAAS,MAAQA,EACjB0tB,GAAQ,MAAMA,EACdsd,GAAY,QACZC,GAAU,YACVC,GAAQ,WAAaA,EACrBH,GAAQ,UACRI,GAAS,WACTC,GAAU,aAAeA,EACzBC,GAAQ,WAAaA,EACrBC,GAAW,cAEf,OAAO5yB,EAAA,mBAAGlT,UAAW8R,KC7BtB,MAAMi0B,EAASjnC,GACtBoU,EAAA,uBAAOlT,UAAW4/B,EAAW,aAAc9gC,EAAMkB,WAAYoD,MAAOtE,EAAMsE,OACrEtE,EAAMsR,UCLXlY,EAAAE,EAAAC,EAAA,sBAAA0sC,IAAA7sC,EAAAE,EAAAC,EAAA,sBAAA8sC,IAAAjtC,EAAAE,EAAAC,EAAA,sBAAAitC,IAAAptC,EAAAE,EAAAC,EAAA,sBAAA0tC,mFCGO,MAAMC,EAAcjrC,GAAW00B,EAAAxiB,EAAAyiB,cAAA,OAAK1vB,UAAU,aAAa5F,OAAA62B,EAAA,EAAA72B,CAAcW,6QCMzE,MAAMkrC,UAAmB/X,EAAA,EAAhCp0B,kCAWIQ,KAAAQ,SAAW,KAAWoC,EAAA5C,UAAA,qBAClB,IAAImc,EAASnc,KAAKu0B,MAAMG,YACxB,IAA4B,IAAxB10B,KAAKN,OAAOiuB,cACN3tB,KAAKN,OAAOksC,UAAU,GAAIzvB,SAC1Bnc,KAAKN,OAAOmsC,WAClB7rC,KAAK8rC,YAAY9rC,KAAK+rC,gBAErB,CACD,IAAI75B,QAAalS,KAAKN,OAAOyuB,MAAMhS,GACnCnc,KAAK8rC,YAAY9rC,KAAKgsC,YAAa95B,OAI3ClS,KAAAisC,MAAQ,MACJjsC,KAAKu0B,MAAM9P,QACXzkB,KAAK8rC,YAAY9rC,KAAKiH,QAO1BjH,KAAAi3B,UAAY,EAACxvB,EAAUyB,IAAiB0P,EAAA,cAAC5Y,KAAK4mB,IAAG9mB,OAAA+I,OAAA,GAAKpB,KAE5CzH,KAAAiH,KAAO,KAAM2R,EAAA,cAACjZ,EAAA,KAAI,CAAC8F,OAAQzF,KAAKI,OACrCJ,KAAKu0B,MAAMtb,OAAO,aAClBjZ,KAAKksC,gBAGAlsC,KAAA+rC,WAAa,MACnB,IAAI7rC,KAACA,EAAI2tB,KAAEA,GAAQ7tB,KAAKN,OACpBysC,EAAavzB,EAAA,wBACblT,UAAU,0BACVX,QAAS/E,KAAKisC,OACdrzB,EAAA,cAACjZ,EAAA,GAAE,CAACO,KAAK,kCAEb,OAAO0Y,EAAA,cAACjZ,EAAA,KAAI,CAAC8F,OAAQzF,KAAKI,MAAO4W,MAAOm1B,GACpCvzB,EAAA,cAACjZ,EAAA,KAAI,CAACqC,MAAO6rB,EAAMpmB,KAAM,CAACwR,OAAQjZ,KAAKi3B,gBAIrCj3B,KAAAgsC,YAAclsC,OAAA2Y,EAAA,EAAA3Y,CAAUwT,IAC9B,IAAI64B,EAAavzB,EAAA,wBACblT,UAAU,0BACVX,QAAS/E,KAAKisC,OACdrzB,EAAA,cAACjZ,EAAA,GAAE,CAACO,KAAK,kCAEb,OAAO0Y,EAAA,cAACjZ,EAAA,KAAI,CAAC8F,OAAQzF,KAAKI,MAAO4W,MAAOm1B,GACpCvzB,EAAA,yBAAMlL,KAAKC,UAAU2F,OAAQ/R,EAAW,UAvD1C/B,KAAKuD,2CACP/C,KAAKu0B,MAAQv0B,KAAK8D,WAAW9D,KAAKQ,SAAUuC,GAC5C,IAAI6jB,IAACA,EAAGwlB,SAAEA,GAAYpsC,KAAKL,GAC3BK,KAAK4mB,IAAMwlB,GAAYxlB,GAAO8kB,EAC9B1rC,KAAKg0B,SAASh0B,KAAKiH,QAqBvBzH,iSC9BG,MAAM6sC,UAAqBzY,EAAA,EAAlCp0B,kCAcIQ,KAAA+zB,SAAW,CAAOzsB,GAAeglC,EAAAtsC,UAAA,2BACvBA,KAAKujB,UAAUmU,MAAMpwB,MAG/BtH,KAAAi3B,UAAY,EAACxvB,EAAUyB,IAAiB0P,EAAA,cAAC5Y,KAAK4mB,IAAG9mB,OAAA+I,OAAA,GAAKpB,KAMtDzH,KAAAk3B,SAAW,CAACzvB,IACRzH,KAAKm3B,eAAe1vB,KAGxBzH,KAAAiH,KAAO,MACH,IAAIxB,EAASmT,EAAA,cAACjZ,EAAA,UAAS,CAAC+F,UAAU,aAC9B2vB,QAAS,GACTtB,SAAU/zB,KAAK+zB,SAAUI,YAAa,eAAKn0B,KAAKI,QACpD,OAAOwY,EAAA,cAACjZ,EAAA,KAAI,CAAC8F,OAAQA,GACjBmT,EAAA,cAACjZ,EAAA,KAAI,CACDqC,MAAOhC,KAAKujB,UAAUvhB,MACtByF,KAAM,CAACwR,OAAQjZ,KAAKi3B,UAAWlyB,QAAS/E,KAAKk3B,UAC7CzB,OAAQ,eAAKz1B,KAAKI,MAAM,oBA9B9BZ,KAAKuD,2CACP,IAAI6jB,IAACA,EAAG2lB,UAAEA,GAAavsC,KAAKL,GAC5BK,KAAK4mB,IAAM2lB,GAAa3lB,GAAO8kB,EAE/B1rC,KAAKujB,UAAY,IAAIipB,EAAexsC,KAAKN,cACnCM,KAAK+zB,SAAShxB,GACpB/C,KAAKg0B,SAASh0B,KAAKiH,QAQfzH,eAAeiI,GACpBzH,KAAKw0B,YACLx0B,KAAK80B,WAAWrtB,IAmBhB,MAAM+kC,UAAuBhf,EAAA,EAEhChuB,YAAY2uB,GACRtuB,QACAG,KAAKmuB,MAAQA,EAED3uB,+CAEZ,IAAIqB,EACJ,SAFOb,KAAKmuB,MAAM5tB,cAES,IAAvBP,KAAKmuB,MAAMR,QACX9sB,QAAYb,KAAKmuB,MAAM1c,KAAKzR,KAAK+C,MAAO/C,KAAKqc,UAAWrc,KAAKsc,cAC5D,CAGDzb,SAFiBb,KAAKmuB,MAAMA,MAAMnuB,KAAK+C,QAE5B/C,KAAKmuB,MAAM9I,QAAQ,GAAGnlB,MAErC,OAAOW,IAEDrB,aAAaiI,QACNlG,IAATkG,IAAoBzH,KAAKqc,UAAY,6QCrD1C,MAAeowB,UAAmB7Y,EAAA,GAGlC,MAAM8Y,UAAeD,EACRjtC,8DACNQ,KAAKi4B,UAAUj4B,KAAK2sC,cAG9BA,iBAA8C,OAAO3sC,KAAKL,IAAMK,KAAKL,GAAGitC,MAAQjB,GAG7E,MAAMkB,UAAqBJ,EACdjtC,cAAcuD,iDACpB/C,KAAKi4B,UAAUj4B,KAAK8sC,aAAc/pC,KAG5C+pC,mBAAkD,OAAOT,GC/B7DzuC,EAAAE,EAAAC,EAAA,sBAAA2uC,IAAA9uC,EAAAE,EAAAC,EAAA,sBAAA8uC,+sBCUO,MAAME,UAAsBC,EAAA,EAAnCxtC,kCAIwBQ,KAAAitC,UAAoB,EAShCjtC,KAAAktC,OAAS,KAAWtqC,EAAA5C,UAAA,qBACxB,IAAKA,KAAKmtC,YAAa,OACvB,IAAItsC,QAAYb,KAAKmtC,YAAYD,SACjC,GAAY,OAARrsC,EAGA,OAFAb,KAAKitC,UAAW,OAChBtmC,WAAW,IAAM3G,KAAKitC,UAAW,EAAO,KAG5CjtC,KAAKotC,MAAQvsC,EACbb,KAAK+yB,UAAa/yB,KAAKotC,OAASptC,KAAKqY,SAGjCrY,KAAAyR,KAAO3R,OAAA8Q,EAAA,EAAA9Q,CAAU0E,IACrB,IAKIyoC,GALA39B,QAACA,GAAW9K,EACZwS,EAAQzS,EAAA,wBACRmB,UAAU,yBACVm0B,UAAW75B,KAAK+yB,UAChBhuB,QAAS,IAAIuK,EAAQtP,KAAKotC,QAAM,gBAOpC,OALsB,IAAlBptC,KAAKitC,WACLA,EAAW1oC,EAAA,qBAAKmB,UAAU,eACtBnB,EAAA,mBAAGmB,UAAU,6GAGdnB,EAAA,cAAC8oC,EAAA,EAAI,CAAC5nC,OAAQ,eAAOzF,KAAKI,MAAO4W,MAAOA,GAC3CzS,EAAA,qBAAKmB,UAAU,2BACXnB,EAAA,yBACIA,EAAA,2DACAA,EAAA,qBAAKmB,UAAU,QACXnB,EAAA,cAAC+oC,EAAA,EAAW,CAAC5R,IAAKzzB,GAAGjI,KAAKmtC,YAAYllC,EAAGslC,UAAU,EAAOC,QAAS,QAEvEjpC,EAAA,yBACIA,EAAA,wBAAQmB,UAAU,kBAAkBX,QAAS/E,KAAKktC,QAAM,kBAG/DD,EACD1oC,EAAA,qBAAKmB,UAAU,oBAAkB,6FACjCnB,EAAA,qBAAKmB,UAAU,UACXnB,EAAA,qBAAKmB,UAAU,mBACXoD,MAAO,CAACqiC,OAAQ,kBAAmBsC,QAAS,QAC5ClpC,EAAA,cAACmpC,EAAA,EAAK,CAAChoC,UAAU,cAAciK,IAAK3P,KAAKotC,SAE7C7oC,EAAA,yBACIA,EAAA,qBAAKmB,UAAU,SAAO,4BACtBnB,EAAA,cAACmpC,EAAA,EAAK,CAAChoC,UAAU,iBAAiBiK,IAAK3P,KAAKotC,cAnDhD5tC,wDAEZ,OADAQ,KAAKotC,MAAQptC,KAAKqY,MACX,IAAIhJ,QAAa,CAACC,EAASC,KAC9Bo+B,EAAA,EAAInoC,KAAKjB,EAAA,cAAoBvE,KAAKyR,KAAM,CAACnC,QAAQA,EAASC,OAAOA,IAAU,IAAIA,UAN3ES,EAAA,CAAX49B,EAAA,+BACW59B,EAAA,CAAX49B,EAAA,wXC4CE,MAAMC,EAAU,IA3ChB,cAAsBC,EAAA,EACnBtuC,MAAM2c,2CAER,IAAItb,QAAYb,KAAKiK,IAAI,QAASkS,GAClC,cAAetb,GACX,QAAS,OACT,IAAK,SAAU,OAAOf,OAAAiuC,EAAA,EAAAjuC,CAAgBe,GACtC,IAAK,SACD,IAAI0M,EAAQ1M,EAAI0M,MACZhE,EAAOzJ,OAAAiuC,EAAA,EAAAjuC,CAAgByN,IACvB+8B,KAACA,EAAIjqC,KAAEA,GAAQQ,EAGnB,OAFIypC,IAAM/gC,EAAK+gC,KAAOA,GAClBjqC,IAAMkJ,EAAKlJ,KAAOA,GACfkJ,KAIb/J,SAAS2c,2CAEX,aAAanc,KAAKkc,KAAK,WAAYC,KAGjC3c,UAAUwuC,EAAgBzlC,2CAC5B,aAAavI,KAAKkc,KAAK,aAAc,CAAC8xB,QAAQA,EAASzlC,KAAKA,MAG1D/I,YAAYwuC,EAAgBC,2CAC9B,aAAajuC,KAAKkc,KAAK,eAAgB,CAAC8xB,QAAQA,EAASC,OAAOA,MAG9DzuC,SAASwuC,2CACX,aAAahuC,KAAKiK,IAAI,YAAa,CAAC+jC,QAAQA,MAG1CxuC,cAAcwuC,EAAgBhG,EAAiBiG,EAAe1lC,2CAChE,aAAavI,KAAKkc,KAAK,iBAAkB,CAAC8xB,QAAQA,EAAShG,WAAUiG,SAAQ1lC,WAG3E/I,YAAY0uC,EAAa71B,iDACrBrY,KAAKkc,KAAK,oBAAqB,CAACgyB,KAAKA,EAAM71B,MAAMA,QAI5B,gBAAY9W,kCC1D/C3D,EAAAE,EAAAC,EAAA,sBAAAowC,IAAA,IAAA5pC,EAAA3G,EAAA,GAEO,SAASuwC,IACZ,OAAO5pC,EAAA,qBAAKmB,UAAU,0DAClBnB,EAAA,mBAAGmB,UAAU,uYCMd,MAAM0oC,UAAoB7pC,EAAA,UAAjC/E,kCAGIQ,KAAAktC,OAAS,KAA2BtqC,EAAA5C,UAAA,qBAChC,IAAIwtC,QAACA,GAAWxtC,KAAKwE,WACLjD,IAAZisC,GAAyBA,GAAW,EACpCA,EAAU,KAEVA,GAAoB,KACxB,IAAI/gC,EAASs9B,EAAA,EAAIt9B,OAAS,SAC1B,IAAI4hC,EAAiBruC,KAAKsuC,UAAUD,MAChCn8B,EAAO,IAAIq8B,SACf,IAAI1mC,EAAMwmC,EAAM7nC,OAChB,IAAK,IAAIoB,EAAE,EAAGA,EAAEC,EAAKD,IAAK,CACtB,IAAI4mC,EAAOH,EAAMzmC,GACjB,GAAI4mC,EAAK5gB,KAAO4f,EAAS,OAAO,KAChCt7B,EAAKgxB,OAAO,UAAWsL,EAAMA,EAAKtuC,MAGtC,IACI,IAAIuuC,EAAkB,IAAIC,gBACtB9uC,QAAYkL,MAAM2B,EAAQ,CAC1B2G,OAAQ,OACRC,KAAMnB,EACNy8B,OAAQF,EAAgBE,SAG5B,MAAO,WADU/uC,EAAImL,QACHnL,IAAI0D,GAE1B,MAAOuD,GACH3D,QAAQ4D,MAAM,QAAS2F,EAAQ5F,OAGvCrH,SACI,IAAIkG,UAACA,EAAS6nC,SAAEA,EAAQqB,cAAEA,GAAiB5uC,KAAKwE,MAChD,OAAOD,EAAA,uBACHmB,UAAWA,EACXg2B,IAAKjlB,GAAGzW,KAAKsuC,UAAU73B,EACvBulB,SAAU4S,EACVrmC,KAAK,OAAOrI,KAAK,OAAOqtC,SAAUA,0XC5BvC,MAAMsB,UAAah8B,EAAA,WAStBrT,YAAYG,GAIR,GAHAE,MAAMC,OAAA+S,EAAA,QAAA/S,CAAQH,GAAMA,EAAGC,MALnBI,KAAA8uC,WAAiC,GAiBzC9uC,KAAA+uC,cAAoC,GAiUpC/uC,KAAAi3B,UAAY,EAACxvB,EAAWyB,KACpB,IAAI5F,GAACA,EAAEgnC,KAAEA,EAAIpqC,KAAEA,GAAQuH,EACvB,OAAOlD,EAAA,cAACsO,EAAA,IAAG,CAACnN,UAAU,YAAYsR,MAAO,OAAS1T,GAC9CiB,EAAA,yBAAM+lC,GAAQpqC,MAGtBF,KAAAgvC,WAAa,CAAOvnC,GAAa7E,EAAA5C,UAAA,qBAC7BnC,EAAA,EAAWmN,KAAOvD,EAAKnE,SACjBtD,KAAKsG,WAGLtG,KAAAivC,eAAiB,KAChB1qC,EAAA,cAACsO,EAAA,KAAI,CAACpN,OAAO,2BAAO6I,QAAQ,GAC/B/J,EAAA,cAACsO,EAAA,KAAI,CAAC7Q,MAAOhC,KAAKkvC,SAAUznC,KAAM,CAACwR,OAAQjZ,KAAKi3B,UAAWlyB,QAAS/E,KAAKgvC,gBAzV7En8B,EAAA,IAAIs8B,YAAYxvC,GAChBK,KAAKE,KAAOP,EAAGqe,aACGzc,IAAdvB,KAAKE,KACL,KAAM,sDAEKqB,IAAX5B,EAAG6a,MAAmB7a,EAAG6a,IAAM,IACnCxa,KAAKL,GAAKA,EACVK,KAAK85B,QAAU95B,KAAKJ,IAAIk6B,SAAW,QA6EvCt6B,YAAYsU,EAAgBC,GACxB,IAAIC,EAAKF,EAAU,IAAMC,EACrBtU,EAAMO,KAAK8uC,WAAW96B,GAC1B,QAAYzS,IAAR9B,EAAmB,OAAOA,EACrBO,KAAKL,IAAMK,KAAKL,GAAG6a,KAAOxa,KAAKL,GAAG6a,IAAIxG,GAY/C,OAVAhU,KAAK8uC,WAAW96B,GAAMvU,EAAMO,KAAKovC,OAAOp7B,GAUjCvU,EAGDD,OAAOkwB,EAAgB2f,GAC7B,IAAI5vC,EAAM,IAAKO,KAAKL,GAAG2vC,KAAOC,EAAA,GAAKvvC,KAAM0vB,EAAQ2f,GAEjD,OADAvvC,OAAOC,eAAeN,EAAIQ,EAAGD,KAAKC,GAC3BR,EAGX+vC,aACI,IAAI3uC,EAAY,GAChB,IAAK,IAAI+G,KAAK5H,KAAK+uC,cACfluC,EAAI2E,KAAKxF,KAAK+uC,cAAcnnC,IAEhC,OAAO/G,EAGXrB,OAAOwU,GACH,OAAOhU,KAAK+uC,cAAc/6B,GAG9By7B,eAA0C,OAAQzvC,KAAKL,IAAIK,KAAKL,GAAGitC,MAAS6C,EAC5DjwC,sDACZ,IACI,IAAIkwC,QAAkB1vC,KAAK8W,QAIvB9J,eAACA,GAAkBnP,EAAA,GAGnB0L,KAACA,GAAQsJ,EAAA,IACb,QAAatR,IAATgI,GAAsBA,EAAKjG,GAAK,EAEhC,OADAtD,KAAKkvC,eAAiBS,EAAA,EAAUC,aAAa5vC,KAAKyvB,MAAMnsB,IAChDtD,KAAKkvC,SAAS1oC,QAClB,KAAK,EAED,OADAxG,KAAK6vC,cAAc7iC,IACZ,EACX,KAAK,EACD,IAAI8iC,EAAU9vC,KAAKkvC,SAAS,GAAG5rC,GAC/B,QAAgB/B,IAAZuuC,GAAyBA,EAAU,QAChBvuC,IAAnByL,GAAgC8iC,GAAW9iC,EAG3C,OADAhN,KAAK6vC,cAAc7iC,IACZ,EAEXnP,EAAA,EAAWmN,KAAO8kC,EAClB,MACJ,QACI,GAAI9iC,EAAe,QAAwDzL,IAAnDvB,KAAKkvC,SAASlnC,KAAKC,GAAKA,EAAE3E,KAAK0J,GAA+B,CAClFnP,EAAA,EAAWmN,KAAOgC,EAClB,MAGJ,OADA6F,EAAA,IAAIrN,KAAKjB,EAAA,cAACvE,KAAKivC,eAAc,QACtB,EAMnB,YAAkB1tC,IAAdmuC,IACA1vC,KAAKg0B,SAASzvB,EAAA,cAACsO,EAAA,KAAI,CAACpN,OAAO,SACvBlB,EAAA,qBAAKmB,UAAU,OACXnB,EAAA,oEACCmrC,EAAUzmC,IAAI,CAAC4d,EAAGjf,IAAMrD,EAAA,qBAAK+C,IAAKM,GAAIif,QAGxC,GAIf,MAAOhgB,GAMH,OALAgM,EAAA,IAAIrN,KAAKjB,EAAA,cAACsO,EAAA,KAAI,CAACpN,OAAO,oBAClBlB,EAAA,yBACoB,kBAARsC,EAAkBA,EAAMA,EAAI2B,YAGrC,KAIDhJ,+CACVQ,KAAKyvB,MAAQ,IAAIsgB,EAAA,EAAM/vC,KAAKE,MAC5B,IAAI6d,SAACA,EAAQC,QAAEA,GAAWhe,KAAKyvB,MAC3BugB,QAAkBlwC,OAAAjC,EAAA,EAAAiC,CAAWie,EAAUC,IACvC1a,GAACA,EAAEkX,IAAEA,GAAOw1B,EAChBhwC,KAAKyvB,MAAMnsB,GAAKA,EAEhB,IAAIosC,EAAqB,GAErBO,EAAoC,GACpCtuB,EAAkC,GAClCuuB,EAAwC,GAC5C,IAAK,IAAIxgB,KAAUlV,EAAK,CACpB,IAAIlX,GAACA,EAAEwQ,QAAEA,EAAOC,OAAEA,EAAMwH,OAAEA,GAAUmU,EAChCygB,EAAar8B,EAAU,IAAMC,EAC7Bs7B,EAAOrvC,KAAKL,GAAG6a,IAAI21B,IAAuB,GAC1C1wC,EAAMO,KAAKowC,OAAO1gB,EAAQ2f,GAC9BrvC,KAAK+uC,cAAcoB,GAAc1wC,EACjCO,KAAKyvB,MAAM4gB,MAAM5wC,EAAIuU,IACrBi8B,EAAazqC,KAAK/F,EAAIoxB,cAEpBxhB,QAAQ8S,IAAI8tB,GAElB,IAAK,IAAIroC,KAAK5H,KAAK+uC,cAAe,CAC9B,IAAItvC,EAAMO,KAAK+uC,cAAcnnC,GAC7B+Z,EAASnc,KAAK/F,EAAIuxB,gBAClBkf,EAAc1qC,KAAK/F,EAAI6wC,iBAE3B,IAAIpuB,QAAgB7S,QAAQ8S,IAAIR,GAChCtS,QAAQ8S,IAAI+tB,GAAe/hC,KAAMoiC,IAC7B,IAAK,IAAI36B,KAAK26B,MAQlB,IAAK,IAAIj9B,KAAU4O,EACnB,CACI,IAAIsuB,EAAWl9B,OACE/R,IAAbivC,GACAd,EAAUlqC,KAAKgrC,GAIvB,GAAyB,IAArBd,EAAUlpC,OAId,OAAOkpC,EAHH1vC,KAAKyvB,MAAMghB,wBAMHjxC,cAAcuD,4CACZ,IAAVA,GACA/C,KAAK0wC,uBAEH1wC,KAAK2wC,iBAGfnxC,SACI,OAAOQ,KAAK4wC,WAAW5wC,KAAKyvC,UAKtBjwC,iBACNqT,EAAA,IAAI1L,QAGA3H,cAAcwN,GAClBhN,KAAK0wC,iBACL,IAAInnC,KAACA,GAAQsJ,EAAA,IACTg+B,EAAkBtnC,EAAMA,EAAKrJ,KAAO,wBACpC6d,SAACA,EAAQC,QAAEA,GAAWhe,KAAKyvB,MAC/BzvB,KAAKg0B,SAASzvB,EAAA,cAACsO,EAAA,KAAI,CAACpN,OAAO,8BAAU6I,QAAQ,GACzC/J,EAAA,qBAAKmB,UAAU,6BACXnB,EAAA,qBAAKmB,UAAU,kBACXnB,EAAA,qBAAKmB,UAAU,6BAA2B,4BAC1CnB,EAAA,qBAAKmB,UAAU,oBAAoBmrC,IAEvCtsC,EAAA,qBAAKmB,UAAU,kBACXnB,EAAA,qBAAKmB,UAAU,6BAA2B,OAC1CnB,EAAA,qBAAKmB,UAAU,uBAAuBqY,KAAYC,MAEtDzZ,EAAA,qBAAKmB,UAAU,kBACXnB,EAAA,qBAAKmB,UAAU,6BAA2B,4BAC1CnB,EAAA,qBAAKmB,UAAU,oBAAoBsH,GAAkBzI,EAAA,uBAAOmB,UAAU,IAAE,sCAE5EnB,EAAA,qBAAKmB,UAAU,kBACXnB,EAAA,qBAAKmB,UAAU,wDACPnB,EAAA,cAACsO,EAAA,GAAE,CAAC3S,KAAK,0BAEjBqE,EAAA,qBAAKmB,UAAU,oBACXnB,EAAA,oBAAImB,UAAU,OACVnB,EAAA,gEAAYvE,KAAKL,GAAGqe,SACpBzZ,EAAA,wCAAOA,EAAA,uBAAIssC,mEAAyB7wC,KAAKL,GAAGqe,8BAExChR,GACAzI,EAAA,oDAASA,EAAA,uBAAIyI,mCAA6BhN,KAAKL,GAAGqe,YAKlEzZ,EAAA,qBAAKmB,UAAU,kBACXnB,EAAA,qBAAKmB,UAAU,4CAA+BsH,GAC9CzI,EAAA,qBAAKmB,UAAU,iVAGoBnB,EAAA,gJAQrC/E,uDAEV,IAAIoN,EAAS9M,OAAAjC,EAAA,EAAAiC,GACb,QAAeyB,IAAXqL,EAAsB,CACtB,IAAI2E,EAAQ3E,EAAO4E,MAAM,KACzB,GAAID,EAAM/K,OAAS,EAAG,CAClB,IAAI2N,EAAS5C,EAAM,GAEnB,GAAe,UAAX4C,GAAiC,gBAAXA,EAA0B,CAChD,IAAI28B,EAAOvlC,OAAOgG,EAAM,IACpBw/B,EAAcxlC,OAAOgG,EAAM,IAC3BnC,EAAU7D,OAAOgG,EAAM,IACvB9R,EAAMO,KAAKgxC,aAAaF,GAC5B,YAAYvvC,IAAR9B,OACA0pB,MAAM,iBAAmB2nB,IAG7B9wC,KAAK0wC,4BACCjxC,EAAIwxC,SAASF,EAAa3hC,OAK5CpP,KAAKi4B,UAAUj4B,KAAKyvC,YAGhBjwC,aAAasxC,GACjB,IAAK,IAAIlpC,KAAK5H,KAAK+uC,cAAe,CAC9B,IAAItvC,EAAMO,KAAK+uC,cAAcnnC,GAC7B,GAAInI,EAAIuU,GAAG1Q,KAAOwtC,EAAM,OAAOrxC,IAuB3C,MAAMgwC,UAAiB58B,EAAA,MAAvBrT,kCAScQ,KAAAkxC,QAAU,MAChB,IAAIpX,QAACA,GAAW95B,KAAK6D,WACrB,OAAOU,EAAA,cAACsO,EAAA,KAAI,CAACpN,OAAQq0B,EAASxrB,OAAQ,IAAS1L,EAAA5C,UAAA,qBAACnC,EAAA,EAAWmN,UAAOzJ,KAC7DvB,KAAKmxC,gBAIJnxC,KAAAmxC,WAAa,MACnB,IACI3uC,GADAgtC,OAACA,GAAUxvC,KAAK6D,WAUpB,OAPIrB,EADkB,IAAlBgtC,EAAOhpC,OACGjC,EAAA,qBAAKmB,UAAU,eACrBnB,EAAA,cAACsO,EAAA,GAAE,CAAC3S,KAAK,+DAIHsvC,EAAOvmC,IAAI,CAAChB,EAAEL,IAAMrD,EAAA,qBAAK+C,IAAKM,GAAIK,EAAEgR,WAE3C1U,EAAA,cAAAA,EAAA,cAAG/B,KA1BRhD,KAAKuD,2CACP/C,KAAKg0B,SAASh0B,KAAKkxC,WAGvB1xC,OAAOuD,GACH,OAAO/C,KAAKmxC,6CCpYpBvzC,EAAAE,EAAAC,EAAA,sBAAAqzC,IAAA,IAAA7sC,EAAA3G,EAAA,GAAAyzC,EAAAzzC,EAAAolB,EAAAze,GAAAsO,EAAAjV,EAAA,GAGA,SAASyC,EAAKqF,EAAkBxF,GAC5B,OAAOmxC,EAAA1+B,EAAAyiB,cAACviB,EAAA,GAAE,CAACnN,UAAWA,EAAWxF,KAAMA,EAAMgrC,UAAU,IAGpD,MAAMkG,EAA0C,CACnDhvC,KAAM/B,EAAK,YAAa,YACxB8T,OAAQ9T,EAAK,YAAa,gBAC1B4I,IAAK5I,EAAK,aAAc,WACxBkxB,KAAMlxB,EAAK,aAAc,QACzB8tB,MAAO9tB,EAAK,eAAgB,UAC5B+G,QAAS/G,EAAK,YAAa,gBAC3BmxB,QAASnxB,EAAK,YAAa,WAC3BmP,MAAOnP,EAAK,eAAgB,0CCfhCzC,EAAAE,EAAAC,EAAA,sBAAAuzC,IAAA,IAAA1tC,EAAAhG,EAAA,GAGO,MAAe0zC,UAAqB1tC,EAAA,WACvCpE,YAAYC,EAAUG,GAClBC,MAAMD,GACNI,KAAKP,IAAMA,kXCFZ,MAAM8xC,UAAkBzD,EAAA,EACrBtuC,aAAa+sB,2CACf,aAAavsB,KAAKiK,IAAI,qBAAsB,CAACsiB,IAAIA,OAIlD,MAAMilB,EAAY,IAAID,EAAU,WAAOhwC,iCCV9C,IAAAkwC,EAAA7zC,EAAA,IAAAA,EAAAK,EAAAwzC,EAAA,cAAA7zC,EAAAE,EAAAC,EAAA,8BAAA0zC,EAAA,YAAA7zC,EAAAK,EAAAwzC,EAAA,cAAA7zC,EAAAE,EAAAC,EAAA,8BAAA0zC,EAAA,gBAAAC,EAAA9zC,EAAA,IAAAA,EAAAK,EAAAyzC,EAAA,cAAA9zC,EAAAE,EAAAC,EAAA,8BAAA2zC,EAAA,YAAA9zC,EAAAK,EAAAyzC,EAAA,cAAA9zC,EAAAE,EAAAC,EAAA,8BAAA2zC,EAAA,gBAAAC,EAAA/zC,EAAA,IAAAA,EAAAK,EAAA0zC,EAAA,cAAA/zC,EAAAE,EAAAC,EAAA,8BAAA4zC,EAAA,YAAA/zC,EAAAK,EAAA0zC,EAAA,cAAA/zC,EAAAE,EAAAC,EAAA,8BAAA4zC,EAAA,YAAA/zC,EAAA,IAAAA,EAAA,QAAAg0C,EAAAh0C,EAAA,IAAAA,EAAAE,EAAAC,EAAA,8BAAA6zC,EAAA,IAAAh0C,EAAA,wrBCmDO,MAAMi0C,EAMTryC,YAAYgF,GAJJxE,KAAAshC,KAAuB,GAK3BthC,KAAKqZ,IAAMvZ,OAAAgyC,EAAA,IAAAhyC,GACXE,KAAKwE,MAAQA,EACbxE,KAAK+xC,UAAUvtC,GACfxE,KAAKqnC,cAAgB7iC,EAAM6iC,cAC3BrnC,KAAKQ,SAAWR,KAAKQ,SAASsF,KAAK9F,MAG7B6jC,eACN,IAAIhjC,EAAMb,KAAKshC,KAAKr4B,IAAI,CAAChB,EAAGiB,IAAUA,EAAQ,KAAOjB,EAAE47B,SAAW,MAElE,OADA3gC,QAAQC,IAAItC,GACLb,KAAKshC,KAAK0Q,KAAKprB,GAAOA,EAAIid,UAE3BiB,cAEN,OADU9kC,KAAKshC,KAAK2Q,MAAMrrB,IAAQA,EAAIkd,QAI1CtkC,aACI,IAAIiB,EAAS,GACb,IAAK,IAAImmB,KAAO5mB,KAAKshC,KACjB1a,EAAIie,WAAWpkC,GAEnB,OAAOA,EAGXjB,QACI,IAAK,IAAIonB,KAAO5mB,KAAKshC,KACjB1a,EAAIzf,QAIZ3H,cACI,IAAK,IAAIonB,KAAO5mB,KAAKshC,KACjB1a,EAAIyd,cAIZ7kC,SAASqmB,EAAkB/e,GACvB,IAAK,IAAI8f,KAAO5mB,KAAKshC,KACjB1a,EAAIgO,SAAS/O,EAAW/e,GAIhCtH,cAAc+hC,GACV,QAAmBhgC,IAAfggC,EACJ,IAAK,IAAI3a,KAAO5mB,KAAKshC,KACjB1a,EAAI0iB,cAAc/H,GAIlB/hC,UAAUgF,GACd,IAAI0tC,SAACA,EAAQC,UAAEA,GAAa3tC,EAC5B,QAAiBjD,IAAb2wC,EAAwB,CACxB,IAAK,IAAItrB,KAAOsrB,EACZlyC,KAAKshC,KAAK97B,KAAKxF,KAAKoyC,SAASxrB,EAAKurB,KAEV,IAAxBnyC,KAAKwE,MAAM83B,WACXt8B,KAAKqyC,WAAaryC,KAAKoyC,SAAS,CAAC/K,cAAcrnC,KAAKsyC,cAAcxsC,KAAK9F,YAAQuB,SAInFvB,KAAKshC,KAAK97B,KAAK1F,OAAAyyC,EAAA,EAAAzyC,CAAiBE,KAAMuE,EAAA,qBAAKmB,UAAU,gBAAc,qCAInElG,SAASgzC,EAAkBC,GAC/B,IAAIN,EAaJ,YAXa5wC,IADDixC,EAAwBjqC,KAEhC4pC,EAAYI,EAAA,OAIMhxC,KADlB4wC,EAAaK,EAA+CL,iBAGtC5wC,KADlB4wC,EAAYM,KACiBN,EAAYI,EAAA,GAGvCJ,EAAUnyC,KAAMwyC,GAItBhzC,cAAckC,EAAeklB,GACjC,OAAO,IAAI8rB,EAAA,EAAehxC,GAGtBlC,OACJ,IAAIo6B,GAAO,EACX,IAAK,IAAIhT,KAAO5mB,KAAKshC,KACZ1a,EAAIgT,SAAQA,GAAO,GAE5B,OAAOA,EAGXp6B,SACI,OAAO+E,EAAA,sBAAM/D,SAAUR,KAAKQ,UACvBR,KAAKshC,KAAKr4B,IAAI,CAAC2d,EAAI1d,IAAU0d,EAAI3N,OAAOjZ,KAAKqZ,IAAMnQ,IACnDlJ,KAAK2yC,WAIdnzC,UACI,QAAwB+B,IAApBvB,KAAKqyC,WACT,OAAOryC,KAAKqyC,WAAWp5B,OAAOjZ,KAAKqZ,IAAMrZ,KAAKshC,KAAK96B,QAGjDhH,SAAS8gB,2CAEX,GADAA,EAAM+c,kBACDr9B,KAAK45B,OAAQ,OAClB,IAAIn5B,EAAST,KAAK6kC,mBACZ7kC,KAAKwE,MAAMhE,SAASC,MAvGpBuP,EAAA,CAATC,EAAA,gCAKSD,EAAA,CAATC,EAAA,yXC/DE,MAAM2iC,UAAmBhf,EAAA,EAAhCp0B,kCAKIQ,KAAA6yC,SAAW,KAAM7yC,KAAKsgB,MAAM,QAC5BtgB,KAAA8yC,YAAc,KAAM9yC,KAAKsgB,MAAM,WAC/BtgB,KAAA+yC,cAAgB,KAAM/yC,KAAKsgB,MAAM,aACjCtgB,KAAAgzC,gBAAkB,CAAC/sC,GAAUjG,KAAKsgB,MAAM,QAASra,IAEjDjG,KAAAizC,YAAc,EAACxrC,EAAUyB,KACrB,IAAIjD,MAACA,EAAKqnB,MAAEA,GAAS7lB,EACrB,GAAc,IAAV6lB,EAAa,OAAO,KACxB,IAAIod,EAAQ9xB,EAAA,sBAAMlT,UAAU,2CAA2C4nB,GACvE,OAAO1U,EAAA,cAACjZ,EAAA,IAAG,CAAC+F,UAAU,YAAYk3B,KAAM58B,KAAK6D,WAAWqvC,cAAcjtC,GAAQ+Q,MAAO0zB,MAG/E1qC,KAAAiH,KAAOnH,OAAA2Y,EAAA,EAAA3Y,CAAS,KACtB,IAEIqzC,EAFAtlB,EAAO7tB,KAAK6D,WAAWuvC,YAAYziB,OAAO/J,GAAKA,EAAI0G,OACnDtW,EAAQ4B,EAAA,wBAAQlT,UAAU,0BAA0BX,QAAS/E,KAAK+yC,eAAa,sBAKnF,OAHmB,IAAf/yC,KAAKqzC,QACLF,EAAUv6B,EAAA,wBAAQlT,UAAU,uBAAuBg3B,MAAM,UAAU33B,QAAS/E,KAAK8yC,aAAW,iBAEzFl6B,EAAA,cAACjZ,EAAA,KAAI,CAAC8F,OAAQzF,KAAKI,OACtBwY,EAAA,cAACjZ,EAAA,IAAG,CACA+F,UAAU,YACVsR,MAAOA,GACP4B,EAAA,wBAAQlT,UAAU,uBAAuBg3B,MAAM,UAAU33B,QAAS/E,KAAK6yC,UAAQ,gBAC9EM,GAELv6B,EAAA,cAACjZ,EAAA,KAAI,CAAC+F,UAAU,OACZD,OAAQmT,EAAA,cAACjZ,EAAA,MAAK,CAAC+F,UAAU,kCAAgB1F,KAAKI,OAC9CY,KAAK,aACLgB,MAAO6rB,EACPpmB,KAAM,CAACwR,OAAOjZ,KAAKizC,YAAaluC,QAAQ/E,KAAKgzC,sBAlCnDxzC,+CACFQ,KAAKg0B,SAASh0B,KAAKiH,kRCFpB,MAAMqsC,UAAkB1f,EAAA,EAA/Bp0B,kCAQYQ,KAAAQ,SAAW,KAA0B+yC,EAAAvzC,UAAA,qBACzC,IAAIS,EAAST,KAAKu0B,MAAMG,YACpB8e,EAAgBxzC,KAAKu0B,MAAM9zB,aAEzBT,KAAK6D,WAAW4vC,OAAOhzC,EAAQ+yC,MAQ/BxzC,KAAAiH,KAAO,KAAM2R,EAAA,cAACjZ,EAAA,KAAI,CAAC8F,OAAQzF,KAAKI,OACrCJ,KAAKu0B,MAAMtb,WAlBVzZ,KAAKuD,2CACP/C,KAAKu0B,MAAQv0B,KAAK8D,WAAW9D,KAAKQ,SAAUuC,GAC5C/C,KAAKg0B,SAASh0B,KAAKiH,qBCL3B,MAAMysC,EAAgB,CAACC,MAAO,QAEvB,MAAeC,UAAmBhgB,EAAA,EAAzCp0B,kCAOIQ,KAAA6zC,QAAU,EAACpsC,EAAUyB,KACjB,IAEIoe,GAFAzX,KAACA,EAAItG,KAAEA,EAAIuqC,SAAEA,EAAQ7tC,MAAEA,EAAKkO,OAAEA,GAAU1M,EAG5C,YAFelG,IAAX4S,IAAsBA,EAASyE,EAAA,cAAAA,EAAA,cAAEA,EAAA,cAACjZ,EAAA,GAAE,CAAC+F,UAAU,eAAexF,KAAK,sCAE/D+F,GACJ,IAAK,IAAK,MACV,IAAK,IAAKqhB,EAAK1O,EAAA,cAAAA,EAAA,cAAEA,EAAA,cAACjZ,EAAA,GAAE,CAAC+F,UAAU,eAAexF,KAAK,oBAAwB,MAC3E,QAASonB,EAAK1O,EAAA,cAAAA,EAAA,cAAEA,EAAA,cAACjZ,EAAA,GAAE,CAAC+F,UAAU,aAAaxF,KAAK,yBAAyB+F,GAS7E,OAAO2S,EAAA,cAACjZ,EAAA,IAAG,CACPi9B,KAAMhkB,EAAA,qBAAKlT,UAAU,YAAYoD,MAAO4qC,GAAgBv/B,GACxD6C,MAAO4B,EAAA,qBAAKlT,UAAU,OAAMkT,EAAA,cAACjZ,EAAA,MAAK,KAACiZ,EAAA,cAACjZ,EAAA,SAAQ,CAACkQ,KAAMA,OACnD+I,EAAA,qBAAKlT,UAAU,OAAO4hB,MAIpBtnB,KAAA+zC,UAAY,MAClB,IACIC,GADAtnB,MAACA,EAAKE,MAAEA,GAAS5sB,KAAKi0C,UAI1B,MAFoB,MAAhBvnB,EAAMzmB,QACN+tC,EAAUp7B,EAAA,qBAAKlT,UAAU,YAAYoD,MAAO,CAAC4zB,MAAM,QAAM,mCACtD9jB,EAAA,yBACFo7B,EACAh0C,KAAKu0B,MAAMtb,SAEZL,EAAA,cAACjZ,EAAA,KAAI,CAAC8F,OAAQmT,EAAA,cAACjZ,EAAA,MAAK,CAAC+F,UAAU,aAAW,gBACtC1D,MAAO4qB,EACPnlB,KAAM,CAACwR,OAAOjZ,KAAK6zC,wRC5C5B,MAAMK,UAAmBN,EAAhCp0C,kCAQIQ,KAAAQ,SAAW,KAA0B2zC,EAAAn0C,UAAA,qBACjC,IAAIS,EAAST,KAAKu0B,MAAMG,kBAClB10B,KAAK6D,WAAWuwC,UAAU3zC,EAAQT,KAAKu0B,MAAM9zB,QACnDT,KAAKw0B,YACLx0B,KAAK80B,WAAW90B,KAAKu0B,MAAM9zB,WAGrBT,KAAAiH,KAAO,KAAM2R,EAAA,cAACjZ,EAAA,KAAI,CAAC8F,OAAQzF,KAAKI,OACrCJ,KAAKu0B,MAAMtb,WAdVzZ,KAAKuD,2CACP/C,KAAKi0C,UAAYlxC,EACjB/C,KAAKu0B,MAAQv0B,KAAK8D,WAAW9D,KAAKQ,SAAUuC,EAAMmP,KAAMmiC,EAAA,EAAS7b,MACjEx4B,KAAKg0B,SAASh0B,KAAKiH,kSCLpB,MAAMqtC,UAAqBV,EAAlCp0C,kCAYIQ,KAAAu0C,YAAc,CAAOpgC,GAAeqgC,EAAAx0C,UAAA,qBAChC,IAAIsD,GAACA,EAAEkpB,KAAEA,EAAIvmB,MAAEA,GAASjG,KAAKi0C,UAAUvnB,YACvB1sB,KAAK6D,WAAWsQ,OAAO7Q,EAAIkpB,EAAMvmB,EAAOkO,EAAOjU,MAC/DF,KAAK61B,YACL71B,KAAKg0B,SAASh0B,KAAKy0C,UAKvBz0C,KAAA00C,YAAc,KAAYF,EAAAx0C,UAAA,qBACtBmpB,MAAM,+EAGVnpB,KAAA20C,UAAY,KAAYH,EAAAx0C,UAAA,qBAEpB,IAAIS,QAAeT,KAAK6D,WAAW+wC,UAAU50C,KAAKi0C,WAClDj0C,KAAKu0B,MAAMxzB,UAAUN,MAGfT,KAAAyR,KAAO,MACb,IAKIojC,EAAeC,GALfpoB,MAACA,GAAS1sB,KAAKi0C,WACfhuC,MAACA,EAAK8uC,GAAEA,GAAMroB,EACdsoB,EAAah1C,KAAK6D,WAAWqvC,cAAcjtC,IAC3CgmB,OAACA,GAAUjsB,KAAKN,OAChB2tB,EAAIpB,EAAOjkB,KAAKC,GAAKA,EAAE/H,OAAS+F,GAEpC,QAAU1E,IAAN8rB,EAAiB,CACjB,IAAI5K,EAAajL,EACjB,OAAQvR,GACJ,QACIwc,EAAO,oDAAexc,EAAQ,IAC9BuR,EAAK,YACL,MACJ,IAAK,IACDiL,EAAO,qBACPjL,EAAK,cACL,MACJ,IAAK,IACDiL,EAAO,qBACPjL,EAAK,eAGbq9B,EAAgB1f,EAAAxiB,EAAAyiB,cAAA,OAAK1vB,UAAWoZ,IAAWtH,QAAOiL,YAGlDoyB,EAAgB1f,EAAAxiB,EAAAyiB,cAAA,OAAK1vB,UAAU,eAAe2nB,EAAEjB,QAAQnjB,IAAI,CAAChB,EAAEiB,IAC3DisB,EAAAxiB,EAAAyiB,cAAA,UACI9tB,IAAK4B,EACLxD,UAAU,uBACVX,QAAS,IAAI/E,KAAKu0C,YAAYtsC,IAE7BjI,KAAK6D,WAAWoxC,eAAehvC,EAAOgC,EAAE/H,SAGnC,MAAV+F,IACA6uC,EAAe3f,EAAAxiB,EAAAyiB,cAAA,WACXD,EAAAxiB,EAAAyiB,cAAA,UAAQ1vB,UAAU,4BAA4BX,QAAS/E,KAAK20C,WAAS,gBACrExf,EAAAxiB,EAAAyiB,cAAA,UAAQ1vB,UAAU,8BAA8BX,QAAS/E,KAAK00C,aAAW,kBAIrF,OAAOvf,EAAAxiB,EAAAyiB,cAACz1B,EAAA,KAAI,CAAC8F,OAAQzF,KAAKI,MAAQ,IAAM40C,EAAa,IAAMD,GACvD5f,EAAAxiB,EAAAyiB,cAAA,OAAK1vB,UAAU,QACXyvB,EAAAxiB,EAAAyiB,cAAA,OAAK1vB,UAAU,2CACVmvC,EACAC,GAEL3f,EAAAxiB,EAAAyiB,cAACp1B,KAAK+zC,UAAS,UAKnB/zC,KAAAy0C,MAAQ,MACZ,IAAIpoB,YAACA,GAAersB,KAAKi0C,UAAUvnB,MACnC,OAAOyI,EAAAxiB,EAAAyiB,cAACz1B,EAAA,KAAI,CAAC8F,OAAO,qBAAMI,KAAK,SAC3BsvB,EAAAxiB,EAAAyiB,cAAA,OAAK1vB,UAAU,6CACXyvB,EAAAxiB,EAAAyiB,cAAA,OAAK1vB,UAAU,OAAO2mB,GACtB8I,EAAAxiB,EAAAyiB,cAAA,OAAK1vB,UAAU,gBAAeyvB,EAAAxiB,EAAAyiB,cAACz1B,EAAA,GAAE,CAACO,KAAK,4DACvCi1B,EAAAxiB,EAAAyiB,cAAA,OAAK1vB,UAAU,OACXyvB,EAAAxiB,EAAAyiB,cAAA,UAAQ1vB,UAAU,uBAAuBX,QAAS,IAAI/E,KAAKk1C,YAAU,qBA1F/E11C,KAAKy0C,2CACPj0C,KAAKi0C,UAAYA,EAMjBj0C,KAAKu0B,MAAQv0B,KAAK8D,gBAAWvC,EAAW0yC,EAAU/hC,MAClDlS,KAAKg0B,SAASh0B,KAAKyR,kRCTpB,MAAM0jC,UAAqBvhB,EAAA,EAAlCp0B,kCAKcQ,KAAAiH,KAAO,KAAM2R,EAAA,cAACjZ,EAAA,KAAI,CAAC8F,OAAQzF,KAAKI,MAAQ,gBAC9CwY,EAAA,qBAAKlT,UAAU,aAAa1F,KAAKN,OAAO01C,qBALtC51C,KAAKuD,2CACP/C,KAAKg0B,SAASh0B,KAAKiH,kRCFpB,MAAMouC,UAAkBzhB,EAAA,EAA/Bp0B,kCAQIQ,KAAAs1C,aAAe,CAAO5oB,GAAc6oB,EAAAv1C,UAAA,qBACT,IAAnB0sB,EAAM8oB,YACVx1C,KAAKsgB,MAAM,WAAYoM,MAE3B1sB,KAAAy1C,WAAa,EAAC7uB,EAAS1d,KACnB,IAAI5F,GAACA,EAAEyxC,GAAEA,EAAE1oB,YAAEA,EAAWxc,KAAEA,GAAQ+W,EAC9BgW,EAAOhkB,EAAA,cAAAA,EAAA,cACW,IAAjBgO,EAAI4uB,WAAgB,OAAS,GAC7B5uB,EAAImuB,YAAYnuB,EAAIyF,aAErBrV,EAAQ4B,EAAA,cAACjZ,EAAA,MAAK,KAACiZ,EAAA,cAACjZ,EAAA,SAAQ,CAACkQ,KAAMA,KACnC,OAAO+I,EAAA,cAACjZ,EAAA,IAAG,CAAC+F,UAAU,YAAYk3B,KAAMA,EAAM5lB,MAAOA,MAG/ChX,KAAAiH,KAAO,KACN2R,EAAA,cAACjZ,EAAA,KAAI,CAAC8F,OAAQ,qBAAQzF,KAAKI,OAC9BwY,EAAA,cAACjZ,EAAA,KAAI,CAACqC,MAAOhC,KAAK6tB,KAAMpmB,KAAM,CAACwR,OAAOjZ,KAAKy1C,WAAY1wC,QAAQ/E,KAAKs1C,kBArBtE91C,+CACFQ,KAAK6tB,WAAa7tB,KAAKN,OAAOg2C,iBAAYn0C,EAAW,IACrDvB,KAAKg0B,SAASh0B,KAAKiH,kRCLpB,MAAM0uC,UAAmB/hB,EAAA,EAAhCp0B,kCAcIQ,KAAA41C,SAAW,CAAOlpB,GAAcmpB,EAAA71C,UAAA,qBACL,IAAnB0sB,EAAM8oB,WAIVx1C,KAAKsgB,MAAM,SAAUoM,EAAMppB,IAHvBtD,KAAKsgB,MAAM,aAAcoM,EAAMppB,OAM/BtD,KAAAuV,eAAiB,MACrBrS,QAAQC,IAAI,kBACZnD,KAAK6D,WAAWiyC,eAAepxB,SAGzB1kB,KAAAo2B,WAAa,CAACxP,IACpB,IAAItjB,GAACA,EAAEyxC,GAAEA,EAAE1oB,YAAEA,EAAWxc,KAAEA,EAAI2lC,WAAEA,GAAc5uB,EAC1CgW,EAAOhkB,EAAA,cAAAA,EAAA,cACNm8B,WAAWn8B,EAAA,cAACjZ,EAAA,MAAK,KAAE0sB,OAAmC,IAAbmpB,EAAgB,MAAQ,IAElEx+B,EAAQ4B,EAAA,cAACjZ,EAAA,MAAK,KAACiZ,EAAA,cAACjZ,EAAA,SAAQ,CAACkQ,KAAMA,KACnC,OAAO+I,EAAA,cAACjZ,EAAA,IAAG,CAAC+F,UAAU,YAAYk3B,KAAMA,EAAM5lB,MAAOA,MAGjDhX,KAAAi3B,UAAY,EAACrQ,EAAS1d,IAAiB0P,EAAA,cAAC5Y,KAAK4mB,IAAG9mB,OAAA+I,OAAA,GAAK+d,KAEnD5mB,KAAAiH,KAAO,MAEb,IAAI6uC,eAACA,GAAkB91C,KAAK6D,WAC5B,OAAO+U,EAAA,cAACjZ,EAAA,KAAI,CAAC8F,OAAQzF,KAAKI,MAAQ,MAAQJ,KAAKg1C,WAAYz/B,eAAgBvV,KAAKuV,gBAC5EqD,EAAA,cAACjZ,EAAA,KAAI,CAACqC,MAAO8zC,EAAgBruC,KAAM,CAACwR,OAAOjZ,KAAKi3B,UAAWlyB,QAAQ/E,KAAK41C,eArC1Ep2C,KAAKiI,2CACPzH,KAAK4mB,IAAM5mB,KAAKL,GAAGo2C,SAAW/1C,KAAKo2B,WACnCp2B,KAAKg2C,UAAYvuC,EAAKxB,MACtBjG,KAAKg1C,WAAah1C,KAAK6D,WAAWqvC,cAAclzC,KAAKg2C,iBAE/Ch2C,KAAK6D,WAAWiyC,eAAepe,MAAM13B,KAAKg2C,WAChDh2C,KAAKg0B,SAASh0B,KAAKiH,kRCRpB,MAAMgvC,UAAkBrC,EAA/Bp0C,kCAgBcQ,KAAAiH,KAAO,MACb,IAAIylB,MAACA,GAAS1sB,KAAKi0C,UACnB,OAAOr7B,EAAA,cAACjZ,EAAA,KAAI,CAAC8F,OAAQzF,KAAKI,MAAQ,KAAYssB,EAAMqoB,IAChDn8B,EAAA,cAAC5Y,KAAK+zC,UAAS,SAfjBv0C,KAAKy0C,2CACPj0C,KAAKi0C,UAAYA,EAOjBj0C,KAAKu0B,MAAQv0B,KAAK8D,gBAAWvC,EAAWvB,KAAKi0C,UAAU/hC,MACvDlS,KAAKg0B,SAASh0B,KAAKiH,SClBpB,MAAeivC,UAAetiB,EAAA,4QCA9B,MAAMuiB,UAAoBD,EAAjC12C,kCAOYQ,KAAAo2C,QAAU,KAAYC,EAAAr2C,UAAA,qBAC1BA,KAAK61B,kBACC71B,KAAKsgB,MAAM,UAGrBtgB,KAAAu0C,YAAc,CAAOpgC,GAAekiC,EAAAr2C,UAAA,qBAChCA,KAAK61B,YACL,IAAIvyB,GAACA,EAAEkpB,KAAEA,EAAIvmB,MAAEA,GAASjG,KAAK0sB,YACb1sB,KAAK6D,WAAWsQ,OAAO7Q,EAAIkpB,EAAMvmB,EAAOkO,EAAOjU,MAC/DF,KAAKg0B,SAASh0B,KAAKy0C,UAGfz0C,KAAA2yC,QAAU/5B,EAAA,cAAAA,EAAA,cACdA,EAAA,wBAAQlT,UAAU,+BAA+BX,QAAS/E,KAAKo2C,SAAO,4BACtEx9B,EAAA,wBAAQlT,UAAU,uBAAuBX,QAAS,IAAI/E,KAAKk1C,YAAU,iBAGjEl1C,KAAAiH,KAAO,MACX,IAAIglB,OAACA,GAAUjsB,KAAKN,OAEpB,IAAI2tB,EAAIpB,EAAOjkB,KAAKC,GADN,MACWA,EAAE/H,MACvB20C,EAAgBj8B,EAAA,cAAAA,EAAA,cAAGyU,EAAEjB,QAAQnjB,IAAI,CAAChB,EAAEiB,IACpC0P,EAAA,wBACItR,IAAK4B,EACLxD,UAAU,uBACVX,QAAS,IAAI/E,KAAKu0C,YAAYtsC,IAE7BjI,KAAK6D,WAAWoxC,eARX,IAQiChtC,EAAE/H,SAGjD,OAAO0Y,EAAA,cAACjZ,EAAA,KAAI,CAAC8F,OAAO,qBAAMI,KAAK,SAC3B+S,EAAA,qBAAKlT,UAAU,6CACXkT,EAAA,qBAAKlT,UAAU,gBAAekT,EAAA,cAACjZ,EAAA,GAAE,CAACO,KAAK,gGACvC0Y,EAAA,qBAAKlT,UAAU,OACVmvC,EACA70C,KAAK2yC,aAMd3yC,KAAAy0C,MAAQ,KACL77B,EAAA,cAACjZ,EAAA,KAAI,KACRiZ,EAAA,qBAAKlT,UAAU,6CACXkT,EAAA,qBAAKlT,UAAU,gBAAekT,EAAA,cAACjZ,EAAA,GAAE,CAACO,KAAK,4DACvC0Y,EAAA,qBAAKlT,UAAU,OACV1F,KAAK2yC,YAnDhBnzC,KAAKktB,2CACP1sB,KAAK0sB,MAAQA,EACb1sB,KAAKg0B,SAASh0B,KAAKiH,kRCHpB,MAAMqvC,UAAyB1C,EAAtCp0C,kCAYcQ,KAAAyR,KAAO,MACb,IAAIib,MAACA,GAAS1sB,KAAKi0C,WACfhuC,MAACA,EAAK8uC,GAAEA,GAAMroB,EACdsoB,EAAah1C,KAAK6D,WAAWqvC,cAAcjtC,GAC/C,OAAOkvB,EAAAxiB,EAAAyiB,cAACz1B,EAAA,KAAI,CAAC8F,OAAQzF,KAAKI,MAAQ,IAAM40C,EAAa,IAAMD,GACvD5f,EAAAxiB,EAAAyiB,cAAA,OAAK1vB,UAAU,QACXyvB,EAAAxiB,EAAAyiB,cAAA,OAAK1vB,UAAU,2CAAyC,qCAGxDyvB,EAAAxiB,EAAAyiB,cAACp1B,KAAK+zC,UAAS,UApBrBv0C,KAAKy0C,2CACPj0C,KAAKi0C,UAAYA,EAMjBj0C,KAAKu0B,MAAQv0B,KAAK8D,gBAAWvC,EAAW0yC,EAAU/hC,MAClDlS,KAAKg0B,SAASh0B,KAAKyR,kRC8BpB,MAAM8kC,UAAe3iB,EAAA,EAA5Bp0B,kCACIQ,KAAAozC,YAA2CvrB,EAAA,EAAW3D,MAAkB,GAAI,CAACC,MAAK,IAkIlFnkB,KAAAyzC,OAAS,EAAOhzC,EAAY+yC,IAAoCgD,EAAAx2C,UAAA,qBAG5D,IAAIa,QAAYb,KAAKo0C,UAAU3zC,EAAQ+yC,GACvCxzC,KAAK61B,kBAEC71B,KAAKy2C,UAAU51C,MApITrB,8DACNQ,KAAK02C,sBACX12C,KAAK81C,eAAiB91C,KAAKN,OAAOi3C,6BAC5B32C,KAAKi4B,UAAUj4B,KAAK42C,cAGdp3C,UAAUmL,2CACtB,IAAIpC,KAACA,EAAI8K,KAAEA,EAAIH,KAAEA,EAAIoU,GAAEA,EAAE9hB,KAAEA,GAAQmF,EACtB,UAATpC,GAAkBvI,KAAK62C,QAAQ3jC,EAAMoU,EAAIjU,KAEzC7T,QAAQ0T,EAAaoU,EAAa2sB,GACtC,IAAI6C,EAAK92C,KAAKuJ,KAAKjG,IACfA,GAACA,EAAEwwC,SAAEA,EAAQ7tC,MAAEA,GAASguC,EAC5B/wC,QAAQC,IAAI,CAAC4zC,EAAE,kBAAmB7jC,KAAKA,EAAMoU,GAAGA,EAAGxL,KAAK,KAAMxY,GAAGA,EAAIwwC,SAASA,EAAU7tC,MAAMA,EAAO6wC,GAAGA,EAAI7C,UAAUA,IAClH/gC,IAAS4jC,GACT92C,KAAKg3C,iBAAiB1zC,EAAIwwC,QAEHvyC,IAAvB+lB,EAAGtf,KAAKC,GAAGA,IAAI6uC,IACf92C,KAAKi3C,cAAc3zC,EAAI2C,EAAOguC,GAG9Bz0C,iBAAiB8D,EAAWwwC,GAEhC,GADA9zC,KAAKk3C,iBAAiBpD,GAAW,QACXvyC,IAAlBvB,KAAKm3C,UAA0Bn3C,KAAKm3C,WAAarD,EAAU,OAM/D,IAAI5qC,EAAQlJ,KAAK81C,eAAe9zC,MAAM8f,UAAU7Z,GAAKA,EAAE3E,KAAOA,GAC1D4F,GAAO,GACPlJ,KAAK81C,eAAe9zC,MAAM2iB,OAAOzb,EAAO,GAIxC1J,cAAc8D,EAAW2C,EAAc0E,GAC3C3K,KAAKk3C,iBAAiBjxC,EAAO,QACP1E,IAAlBvB,KAAKm3C,UAA0Bn3C,KAAKm3C,WAAalxC,GAMjDjG,KAAK81C,eAAe9zC,MAAM8f,UAAU7Z,GAAKA,EAAE3E,KAAOA,GAAM,GACxDtD,KAAK81C,eAAe9zC,MAAMwD,KAAKmF,GAI/BnL,iBAAiByG,EAAcmxC,GACnC,QAAc71C,IAAV0E,EAAqB,OACzB,IAAIiD,EAAQlJ,KAAKozC,YAAYtxB,UAAU7Z,GAAKA,EAAEhC,QAAUA,GAExD,GADA/C,QAAQC,IAAI,CAAC4zC,EAAE,cAAe9wC,MAAOA,EAAOmxC,MAAOA,EAAOluC,MAAOA,IAC7DA,EAAQ,EAAG,OACf,IAAImuC,EAAar3C,KAAKozC,YAAYlqC,GAClCmuC,EAAW/pB,OAAS8pB,EAChBC,EAAW/pB,MAAQ,IAAG+pB,EAAW/pB,MAAQ,GAGjDspB,iBAA8C,OAAQ52C,KAAKL,IAAIK,KAAKL,GAAGitC,MAASgG,EAChF0E,gBAA8C,OAAOt3C,KAAKL,GAAG43C,UAAYjE,EACzEkE,kBAAgD,OAAOx3C,KAAKL,GAAG83C,YAActB,EAC7EuB,iBAA+C,OAAO13C,KAAKL,GAAGg4C,WAAazD,EAC3E0D,mBAAiD,OAAOzC,EACxD0C,gBAA8C,OAAOxC,EACrDyC,gBAA8C,OAAO7B,EACrD8B,iBAA+C,OAAOpC,EACtDqC,mBAAiD,OAAOh4C,KAAKL,GAAG8sB,aAAe6nB,EAC/E2D,uBAAqD,OAAO3B,EAC5C92C,QAAQ+I,EAAa8P,2CACjC,IAAIzC,EACJ,OAAQrN,GACJ,QAAS,OACT,IAAK,MAAOqN,EAAI5V,KAAKs3C,UAAW,MAChC,IAAK,SAAU1hC,EAAI5V,KAAK43C,aAAc,MACtC,IAAK,WAAYhiC,EAAI5V,KAAK63C,UAAW,MACrC,IAAK,QACD73C,KAAKm3C,SAAW9+B,EAAMpS,MACtB2P,EAAI5V,KAAK+3C,WACT,MACJ,IAAK,WAC+B,kBAA1B/3C,KAAKk4C,aAAa7/B,IAC5B,IAAK,SAC6B,kBAAxBrY,KAAKm4C,WAAW9/B,IAC1B,IAAK,aACiC,kBAA5BrY,KAAKo4C,eAAe//B,UAE5BrY,KAAKi4B,UAAUriB,EAAGyC,KAGtB7Y,WAAW4P,4CACoB,WAAvBpP,KAAKq4C,uBACTr4C,KAAKs4C,QAAQ,SAAUlpC,MAG3B5P,WAAW4P,2CACb,IAAI6kC,QAA4Bj0C,KAAKu4C,aAAanpC,GAClDtP,OAAA8wB,EAAA,EAAA9wB,CAAY,CACRuT,KAAM,CACFmM,MAAO,MACPrL,OAAQ,SACRxJ,IAAK,CACDrH,GAAI8L,EACJ4E,GAAIhU,KAAKP,IAAIuU,GAAG1Q,GAChB2C,MAAOguC,EAAUvnB,MAAMzmB,gBAI7BjG,KAAKi4B,UAAUj4B,KAAKg4C,aAAc/D,KAGtCz0C,eAAe4P,2CACjB,IAAI6kC,QAA4Bj0C,KAAKu4C,aAAanpC,SAC5CpP,KAAKi4B,UAAUj4B,KAAKi4C,iBAAkBhE,KAG1Cz0C,UAAUy0C,2CAGZ,aADmBj0C,KAAKw4C,MAAMx4C,KAAK03C,WAAYzD,KAI7Cz0C,aAAai5C,2CACf,IAAIxE,QAAkBj0C,KAAK04C,YAAYD,EAAQn1C,UACzCtD,KAAKi4B,UAAUj4B,KAAK83C,UAAW7D,KAYnCz0C,UAAUy0C,iDACNj0C,KAAKi4B,UAAUj4B,KAAKw3C,YAAavD,KAGnCz0C,WAAWw2C,GACf,IAAI/pB,OAACA,GAAUjsB,KAAKJ,IACpB,QAAe2B,IAAX0qB,EACJ,OAAOA,EAAO+pB,GAElBx2C,cAAcw2C,GACV,IAAI/vC,EAAQjG,KAAK24C,WAAW3C,GACxBn1C,EAAOoF,GAASA,EAAM7F,OAAU41C,EACpC,OAAQn1C,GACJ,QAAS,OAAOA,EAChB,IAAK,IAAK,MAAO,gBAGzBrB,eAAew2C,EAAkB4C,GAC7B,IAAI3yC,EAAQjG,KAAK24C,WAAW3C,GAC5B,QAAcz0C,IAAV0E,EAAqB,OAAO2yC,EAChC,IAAIxsB,EAAUnmB,EAAMmmB,QACpB,QAAgB7qB,IAAZ6qB,EAAuB,OAAOwsB,EAClC,IAAIzkC,EAASiY,EAAQwsB,GACrB,OAAQzkC,GAAUA,EAAO/T,OAAUw4C,EAGzBp5C,8DACVQ,KAAKozC,YAAYjsC,QACjB,IAAIisC,QAAoBpzC,KAAKN,OAAO0tB,kBACpCptB,KAAKozC,YAAYzuB,OAAO,EAAG,KAAMyuB,KAG/B5zC,aAAa4P,2CACf,aAAapP,KAAKN,OAAOmtB,SAASzd,KAGhC5P,YAAY4P,2CACd,aAAapP,KAAKN,OAAOotB,WAAW1d,KAGlC5P,UAAUiB,EAAY+yC,2CACxB,IAAIqF,WAACA,GAAc74C,KAAKL,GACpBm5C,OAAsBv3C,IAAfs3C,EAA0B74C,KAAKI,MAAQy4C,EAAWrF,EAAexzC,KAAKC,GAIjF,aAHgBD,KAAKN,OAAO+rB,KAAKqtB,EAAMr4C,KAMrCjB,OAAO8D,EAAWkpB,EAAavmB,EAAc2yC,2CAC/C,aAAa54C,KAAKN,OAAOyU,OAAO7Q,EAAIkpB,EAAMvmB,EAAO2yC,MC1OzDh7C,EAAAE,EAAAC,EAAA,sBAAAw4C,yVCMO,MAAMwC,UAAkBnlB,EAAA,EAA/Bp0B,kCAKcQ,KAAAiH,KAAO,KAAM2R,EAAA,cAAC6iB,EAAA,KAAI,CAACh2B,OAAQzF,KAAKI,OAAK,SAJzCZ,KAAKuD,2CACP/C,KAAKg0B,SAASh0B,KAAKiH,kRCCpB,MAAM+xC,UAAcplB,EAAA,EACPp0B,8DACNQ,KAAKi4B,UAAUj4B,KAAKi5C,aAG9BA,gBAA4C,OAAOF,uDCRhD,MAAMG,UAAYzd,EAAA,KAWrBj8B,YAAYC,GACRI,MAAMJ,GAXAO,KAAAm5C,cAAe,EA8Bfn5C,KAAAiH,KAAO,MACb,IA8CIzE,GA9CA5C,IAACA,EAAGoU,GAAEA,EAAElN,MAAEA,GAAS9G,KAAK6D,WACxBu1C,EAAW,CACXngC,OAAQ,CAACogC,EAAanwC,IAA6BmwC,EAAMpgC,SACzDlU,aAASxD,GAET+3C,EAAQ,CACR,CACI7zC,OAAQ7F,EAAIwC,MAAQ,OACpBJ,MAAOhC,KAAKu5C,WAEhB,CACI/hC,GAAI,OACJ/R,OAAQ7F,EAAIqJ,KAAO,MACnBjH,MAAOhC,KAAKw5C,UAEhB,CACIhiC,GAAI,OACJ/R,OAAQ7F,EAAI4P,OAAS,QACrBxN,MAAOhC,KAAKy5C,YAEhB,CACIjiC,GAAI,OACJ/R,OAAQ7F,EAAIuU,QAAU,SACtBnS,MAAOhC,KAAK05C,aAEhB,CACIliC,GAAI,OACJ/R,OAAQ7F,EAAIuuB,OAAS,QACrBnsB,MAAOhC,KAAK25C,YAEhB,CACIniC,GAAI,YACJ/R,OAAQ7F,EAAI2xB,MAAQ,OACpBvvB,MAAOhC,KAAK45C,WAEhB,CACIpiC,GAAI,YACJ/R,OAAQ7F,EAAIwH,SAAW,UACvBpF,MAAOhC,KAAK65C,cAEhB,CACIriC,GAAI,YACJ/R,OAAQ7F,EAAI4xB,SAAW,UACvBxvB,MAAOhC,KAAK85C,eAgBpB,OAXIt3C,OADUjB,IAAVuF,EACUquB,EAAAxiB,EAAAyiB,cAAA,OAAK1vB,UAAU,gDAAyBoB,GAGxCwyC,EAAMrwC,IAAI,EAAEuO,KAAI/R,SAAQzD,SAAOkH,IAAUlH,EAAMwE,OAAS,GAAK2uB,EAAAxiB,EAAAyiB,cAACqG,EAAA,KAAI,CACxEn0B,IAAK4B,EACLxD,UAAW8R,EACX/R,OAAQ0vB,EAAAxiB,EAAAyiB,cAAA,OAAK1vB,UAAU,sBAAqByvB,EAAAxiB,EAAAyiB,cAACqG,EAAA,MAAK,KAAEh2B,IACpDzD,MAAOA,EACPyF,KAAM2xC,KAGPjkB,EAAAxiB,EAAAyiB,cAAAD,EAAAxiB,EAAAonC,SAAA,KACH5kB,EAAAxiB,EAAAyiB,cAAA,OAAK1vB,UAAU,mBAAmB9F,EAAIoU,IAAMA,GAC3CxR,KAhFL,IAAIwtB,QAACA,EAAOK,OAAEA,EAAMH,SAAEA,EAAQD,UAAEA,EAASE,SAAEA,EAAQC,QAAEA,EAAOE,WAAEA,EAAUC,WAAEA,GAAc9wB,EAAIuU,GAC5FhU,KAAKu5C,UAAYvpB,EAAQW,OAAO1oB,GAAKjI,KAAKg6C,UAAU/xC,IAAIgB,IAAIhB,GAAK,IAAIgyC,EAAA,EAAMj6C,KAAK6D,WAAWq2C,UAAUjyC,KACrGjI,KAAKw5C,SAAWnpB,EAAOM,OAAO1oB,GAAKjI,KAAKg6C,UAAU/xC,IAAIgB,IAAIhB,GAAK,IAAIgyC,EAAA,EAAMj6C,KAAK6D,WAAWs2C,KAAKlyC,KAC9FjI,KAAKy5C,WAAavpB,EAASS,OAAO1oB,GAAKjI,KAAKg6C,UAAU/xC,IAAIgB,IAAIhB,GAAK,IAAIgyC,EAAA,EAAMj6C,KAAK6D,WAAWu2C,OAAOnyC,KACpGjI,KAAK05C,YAAczpB,EAAUU,OAAO1oB,GAAKjI,KAAKg6C,UAAU/xC,IAAIgB,IAAIhB,GAAK,IAAIgyC,EAAA,EAAMj6C,KAAK6D,WAAWw2C,QAAQpyC,KACvGjI,KAAK25C,WAAaxpB,EAASQ,OAAO1oB,GAAKjI,KAAKg6C,UAAU/xC,IAAIgB,IAAIhB,GAAK,IAAIgyC,EAAA,EAAMj6C,KAAK6D,WAAWy2C,OAAOryC,KACpGjI,KAAK45C,UAAYxpB,EAAQO,OAAO1oB,GAAKjI,KAAKg6C,UAAU/xC,IAAIgB,IAAIhB,GAAK,IAAIgyC,EAAA,EAAMj6C,KAAK6D,WAAW02C,MAAMtyC,KACjGjI,KAAK65C,aAAevpB,EAAWK,OAAO1oB,GAAKjI,KAAKg6C,UAAU/xC,IAAIgB,IAAIhB,GAAK,IAAIgyC,EAAA,EAAMj6C,KAAK6D,WAAW22C,SAASvyC,KAC1GjI,KAAK85C,aAAevpB,EAAWI,OAAO1oB,GAAKjI,KAAKg6C,UAAU/xC,IAAIgB,IAAIhB,GAAK,IAAIgyC,EAAA,EAAMj6C,KAAK6D,WAAW42C,SAASxyC,KAEpGzI,UAAUE,GAChB,OAAsB,IAAfA,EAAOulB,KAAgBjlB,KAAKm5C,aAEvC35C,OAAOuD,GACH,YAAkBxB,IAAdvB,KAAKiH,KAA2BkuB,EAAAxiB,EAAAyiB,cAAA,8DAC7BD,EAAAxiB,EAAMyiB,cAAcp1B,KAAKiH,gSCYxC,SAASyzC,EAAkB30B,GACvB,QAAiBxkB,IAAbwkB,EACJ,IAAK,IAAIne,KAAKme,EAAUA,EAASne,EAAEue,eAAiBJ,EAASne,GAG1D,MAAM+yC,UAAYlf,EAAA,WAiBrBj8B,YAAYo7C,EAAWlrB,EAAe/vB,GAClCE,MAAMC,OAAA27B,EAAA,QAAA37B,CAAQH,EAAGC,MAsKXI,KAAAm5C,cAAe,EArKrBn5C,KAAK46C,KAAOA,EAGZF,EAAkB/6C,EAAGyC,MACrBs4C,EAAkB/6C,EAAG6P,OACrBkrC,EAAkB/6C,EAAGsJ,KACrByxC,EAAkB/6C,EAAGwuB,OACrBusB,EAAkB/6C,EAAGwU,QACrBumC,EAAkB/6C,EAAG4xB,MACrBmpB,EAAkB/6C,EAAGyH,SACrBszC,EAAkB/6C,EAAG6xB,SACrBxxB,KAAKL,GAAKA,EACVK,KAAK44B,UAAYj5B,EAAGi5B,WAAaiiB,EAAA,EACjC76C,KAAKu4B,UAAY54B,EAAG44B,WAAasiB,EAAA,EACjC76C,KAAK04B,UAAY/4B,EAAG+4B,WAAamiB,EAAA,EACjC76C,KAAK86C,YAAcn7C,EAAGm7C,aAAeD,EAAA,EACrC76C,KAAK+6C,UAAYp7C,EAAGo7C,WAAaF,EAAA,EACjC76C,KAAKg7C,OAASr7C,EAAGq7C,QAAU7sB,EAAA,EAC3BnuB,KAAKi7C,aAAet7C,EAAGs7C,cAAgB9sB,EAAA,EACvCnuB,KAAKk7C,KAAOv7C,EAAGu7C,MAAQjyC,EAAA,EACvBjJ,KAAKm7C,QAAUx7C,EAAGw7C,SAAWhnC,EAAA,EAC7BnU,KAAKo7C,OAASz7C,EAAGy7C,QAAU5rC,EAAA,EAC3BxP,KAAKq7C,MAAQ17C,EAAG07C,OAASrC,EACzBh5C,KAAKs7C,SAAW37C,EAAG27C,UAAYC,EAAA,EAC/Bv7C,KAAKw7C,SAAW77C,EAAG67C,UAAYhqB,EAAA,EAE/BxxB,KAAKgU,GAAK,IAAIwG,EAAA,EAAGxa,KAAK46C,KAAKnrB,MAAOC,GA2CtBlwB,2DAWVA,+CACF,aAAaQ,KAAKgU,GAAG6c,SAGnBrxB,uDACF,UACUQ,KAAKgU,GAAG+H,aACd,IAAK,IAAI3Z,KAAQpC,KAAKgU,GAAGgc,QAAS,CAC9B,IAAIrwB,GAACA,EAAEC,IAAEA,GAAOI,KAAKy7C,MAAMr5C,GAC3BA,EAAKqoB,SAAS9qB,EAAIC,IAG1B,MAAOiH,GACH,OAAOA,KAITrH,wDACF,aAAaQ,KAAKgU,GAAGgI,gBAsCnBxc,eAAeU,2CACjB,IAAIiuB,EAAQnuB,KAAKgU,GAAGma,MAAMjuB,GAC1B,QAAcqB,IAAV4sB,EACAhF,eAAejpB,mCACd,OACKiuB,EAAM5tB,aACZ,IAAI8kB,QAACA,GAAW8I,EACZ9I,EAAQ7e,OAAS,GACjB2iB,eAAejpB,mEAGvB,OAAOiuB,IAEX3uB,mBAAmB4C,GACf,IAEImG,GAFAmzC,gBAACA,EAAeh8C,OAAEA,GAAUM,KAAKJ,KACjCM,KAACA,GAAQkC,EAEb,QAAeb,IAAX7B,EAAsB,CACtB,IAAIi8C,EAAKj8C,EAAOQ,QACLqB,IAAPo6C,IACApzC,EAAOozC,EAAGv7C,OAGlB,OAAQs7C,GAAmB,SAE/Bl8C,UACI,IAAIwB,KAACA,GAAQhB,KAAKJ,IAClB,OAAOoB,GAAQ,OAGTxB,UAAUE,GAChB,OAAsB,IAAfA,EAAOulB,KAAgBjlB,KAAKm5C,aAGjC35C,SAASuxC,EAAoB3hC,2CAC/B,IAAII,EAAQxP,KAAKgU,GAAG4nC,gBAAgB7K,GACpC,QAAcxvC,IAAViO,EAEA,YADA2Z,MAAM,eAAiB4nB,EAAc,mBAGzC,IAAIqJ,EAASp6C,KAAKo6C,OAAO5qC,SACnB4qC,EAAOyB,WAAWzsC,KAG5B5P,MAAM2xB,GAAoB,OAAOnxB,KAAKgU,GAAGxE,MAAM2hB,GAC/C3xB,OAAO2xB,GAAoB,OAAOnxB,KAAKgU,GAAGG,OAAOgd,GACjD3xB,MAAM2xB,GAAoB,OAAOnxB,KAAKgU,GAAGma,MAAMgD,GAC/C3xB,KAAK2xB,GAAoB,OAAOnxB,KAAKgU,GAAGud,KAAKJ,GAC7C3xB,IAAI2xB,GAAoB,OAAOnxB,KAAKgU,GAAG/K,IAAIkoB,GAC3C3xB,QAAQ2xB,GAAoB,OAAOnxB,KAAKgU,GAAG5M,QAAQ+pB,GACnD3xB,QAAQ2xB,GAAoB,OAAOnxB,KAAKgU,GAAGwd,QAAQL,GACnD3xB,KAAK2xB,GAAoB,OAAOnxB,KAAKgU,GAAG5R,KAAK+uB,GAC7C3xB,QAAQ2xB,EAAmBpJ,GACvB,OAAO/nB,KAAKgU,GAAGwW,QAAQ2G,EAAYpJ,GAGvCvoB,eAAe2xB,GACX,IAAIzxB,EAASM,KAAKgU,GAAGxE,MAAM2hB,GAC3B,QAAe5vB,IAAX7B,EAAsB,OAAOM,KAAKo6C,OAAO16C,GAEjDF,gBAAgB2xB,GACZ,IAAIzxB,EAASM,KAAKgU,GAAGG,OAAOgd,GAC5B,QAAe5vB,IAAX7B,EAAsB,OAAOM,KAAKq6C,QAAQ36C,GAElDF,eAAe2xB,GACX,IAAIzxB,EAASM,KAAKgU,GAAGma,MAAMgD,GAC3B,QAAe5vB,IAAX7B,EAAsB,OAAOM,KAAKs6C,OAAO56C,GAEjDF,cAAc2xB,GACV,IAAIzxB,EAASM,KAAKgU,GAAGud,KAAKJ,GAC1B,QAAe5vB,IAAX7B,EAAsB,OAAOM,KAAKu6C,MAAM76C,GAEhDF,aAAa2xB,GACT,IAAIzxB,EAASM,KAAKgU,GAAG/K,IAAIkoB,GACzB,QAAe5vB,IAAX7B,EAAsB,OAAOM,KAAKm6C,KAAKz6C,GAE/CF,iBAAiB2xB,GACb,IAAIzxB,EAASM,KAAKgU,GAAG5M,QAAQ+pB,GAC7B,QAAe5vB,IAAX7B,EAAsB,OAAOM,KAAKw6C,SAAS96C,GAEnDF,iBAAiB2xB,GACb,IAAIzxB,EAASM,KAAKgU,GAAGwd,QAAQL,GAC7B,QAAe5vB,IAAX7B,EAAsB,OAAOM,KAAKy6C,SAAS/6C,GAEnDF,kBAAkB2xB,GACd,IAAIzxB,EAASM,KAAKgU,GAAG5R,KAAK+uB,GAC1B,QAAe5vB,IAAX7B,EAAsB,OAAOM,KAAKk6C,UAAUx6C,GAEpDF,kBAAkB2xB,GACd,IAAIzxB,EAASM,KAAKgU,GAAG5R,KAAK+uB,GAC1B,QAAe5vB,IAAX7B,EAAsB,OAAOM,KAAKs4B,UAAU54B,GAEpDF,kBAAkB2xB,GACd,IAAIzxB,EAASM,KAAKgU,GAAG5R,KAAK+uB,GAC1B,QAAe5vB,IAAX7B,EAAsB,OAAOM,KAAKo4B,UAAU14B,GAGpDF,oBAAoB2xB,GAChB,IAAIzxB,EAASM,KAAKgU,GAAG5R,KAAK+uB,GAC1B,QAAe5vB,IAAX7B,EAAsB,OAAOM,KAAK8C,YAAYpD,GAGtDF,UAAUs8C,EAAuB3qB,GAC7B,OAAQ2qB,GACJ,IAAK,QACD,IAAItsC,EAAQxP,KAAKgU,GAAGxE,MAAM2hB,GAC1B,QAAc5vB,IAAViO,EAAqB,OACzB,OAAOxP,KAAKo6C,OAAO5qC,GACvB,IAAK,SACD,IAAI2E,EAASnU,KAAKgU,GAAGG,OAAOgd,GAC5B,QAAe5vB,IAAX4S,EAAsB,OAC1B,OAAOnU,KAAKq6C,QAAQlmC,GACxB,IAAK,OACD,IAAI/R,EAAOpC,KAAKgU,GAAG5R,KAAK+uB,GACxB,QAAa5vB,IAATa,EAAoB,OACxB,OAAOpC,KAAKk6C,UAAU93C,GAC1B,IAAK,QACD,IAAI+rB,EAAQnuB,KAAKgU,GAAGma,MAAMgD,GAC1B,QAAc5vB,IAAV4sB,EAAqB,OACzB,OAAOnuB,KAAKs6C,OAAOnsB,GACvB,IAAK,OACD,IAAIoD,EAAOvxB,KAAKgU,GAAGud,KAAKJ,GACxB,QAAa5vB,IAATgwB,EAAoB,OACxB,OAAOvxB,KAAKu6C,MAAMhpB,GACtB,IAAK,MACD,IAAItoB,EAAMjJ,KAAKgU,GAAG/K,IAAIkoB,GACtB,QAAY5vB,IAAR0H,EAAmB,OACvB,OAAOjJ,KAAKm6C,KAAKlxC,GACrB,IAAK,UACD,IAAI7B,EAAUpH,KAAKgU,GAAG5M,QAAQ+pB,GAC9B,QAAgB5vB,IAAZ6F,EAAuB,OAC3B,OAAOpH,KAAKw6C,SAASpzC,GACzB,IAAK,UACD,IAAIoqB,EAAUxxB,KAAKgU,GAAGwd,QAAQL,GAC9B,QAAgB5vB,IAAZiwB,EAAuB,OAC3B,OAAOxxB,KAAKy6C,SAASjpB,IAIjChyB,aAAas8C,EAAuB3qB,GAChC,OAAOnxB,KAAKi0B,KAAKj0B,KAAK+7C,UAAUD,EAAY3qB,IAGxC3xB,MAA6CiX,GACjD,IAAI9W,EAAIC,GACJM,KAACA,EAAIC,SAAEA,GAAYsW,EACvB,QAAgBlV,IAAZvB,KAAKL,GAAkB,CACvB,IAAIq8C,EAAMh8C,KAAKL,GAAGQ,QACNoB,IAARy6C,IACAr8C,EAAKq8C,EAAI97C,IAGjB,IAAIR,OAACA,GAAUM,KAAKJ,IAIpB,YAHe2B,IAAX7B,IACAE,EAAMF,EAAOQ,IAEV,CAACP,GAAIA,GAAM,GAAIC,IAAKA,GAAO,IAGtCJ,KAAKy8C,GACD,OAAO,IAAIhC,EAAA,EAAMgC,GAGrB1C,gBACI,OAAOv5C,KAAKgU,GAAGgc,QAAQW,OAAO1oB,GAAKjI,KAAKg6C,UAAU/xC,IAAIgB,IAAIhB,GAAKjI,KAAKi0B,KAAKj0B,KAAKk6C,UAAUjyC,KAE5FzI,UAAU4C,GACN,IAAIzC,GAACA,EAAEC,IAAEA,GAAOI,KAAKy7C,MAAoBr5C,GACzC,OAAO,IAAKzC,GAAMA,EAAGi5B,WAAa54B,KAAK44B,WAAW54B,KAAMoC,EAAMzC,EAAIC,GAEtEJ,UAAU4C,GACN,IAAIzC,GAACA,EAAEC,IAAEA,GAAOI,KAAKy7C,MAAoBr5C,GACzC,OAAO,IAAKzC,GAAMA,EAAG44B,WAAav4B,KAAKu4B,WAAWv4B,KAAMoC,EAAMzC,EAAIC,GAEtEJ,UAAU4C,GACN,IAAIzC,GAACA,EAAEC,IAAEA,GAAOI,KAAKy7C,MAAoBr5C,GACzC,OAAO,IAAKzC,GAAMA,EAAG+4B,WAAa14B,KAAK04B,WAAW14B,KAAMoC,EAAMzC,EAAIC,GAEtEJ,YAAY4C,GACR,IAAIzC,GAACA,EAAEC,IAAEA,GAAOI,KAAKy7C,MAAoBr5C,GACzC,OAAO,IAAKzC,GAAMA,EAAGm7C,aAAe96C,KAAK86C,aAAa96C,KAAMoC,EAAMzC,EAAIC,GAE1EJ,UAAU4C,GACN,IAAIzC,GAACA,EAAEC,IAAEA,GAAOI,KAAKy7C,MAAoBr5C,GACzC,OAAO,IAAKzC,GAAMA,EAAGo7C,WAAa/6C,KAAK+6C,WAAW/6C,KAAMoC,EAAMzC,EAAIC,GAGtEJ,OAAOgQ,GACH,IAAI7P,GAACA,EAAEC,IAAEA,GAAOI,KAAKy7C,MAAsBjsC,GAI3C,OAAO,IAAK7P,GAAMA,EAAGy7C,QAAUp7C,KAAKo7C,QAAQp7C,KAAMwP,EAAO7P,EAAIC,GAEjE65C,iBACI,OAAOz5C,KAAKgU,GAAGkc,SAASS,OAAO1oB,GAAKjI,KAAKg6C,UAAU/xC,IAAIgB,IAAIhB,GAChDjI,KAAKi0B,KAAKj0B,KAAKo6C,OAAOnyC,KAIrCzI,QAAQ2U,GACJ,IAAIxU,GAACA,EAAEC,IAAEA,GAAOI,KAAKy7C,MAAwBtnC,GAC7C,OAAO,IAAKxU,GAAMA,EAAGw7C,SAAWn7C,KAAKm7C,SAASn7C,KAAMmU,EAAQxU,EAAIC,GAEpE85C,kBACI,OAAO15C,KAAKgU,GAAGic,UAAUU,OAAO1oB,GAAKjI,KAAKg6C,UAAU/xC,IAAIgB,IAAIhB,GACjDjI,KAAKi0B,KAAKj0B,KAAKq6C,QAAQpyC,KAItCzI,OAAO2uB,GACH,IAAIxuB,GAACA,EAAEC,IAAEA,GAAOI,KAAKy7C,MAAsBttB,GAC3C,OAAO,IAAKxuB,GAAMA,EAAGq7C,QAAUh7C,KAAKg7C,QAAQh7C,KAAMmuB,EAAOxuB,EAAIC,GAEjEJ,aAAaiE,GACT,IAAI0qB,EAAQnuB,KAAKgU,GAAGma,MAAM1qB,GAC1B,QAAclC,IAAV4sB,EAAqB,OACzB,IAAIxuB,GAACA,EAAEC,IAAEA,GAAOI,KAAKy7C,MAAsBttB,GAC3C,OAAO,IAAKxuB,GAAMA,EAAGs7C,cAAgBj7C,KAAKi7C,cAAcj7C,KAAMmuB,EAAOxuB,EAAIC,GAE7E+5C,iBACI,OAAO35C,KAAKgU,GAAGmc,SAASQ,OAAO1oB,GAAKjI,KAAKg6C,UAAU/xC,IAAIgB,IAAIhB,GAChDjI,KAAKi0B,KAAKj0B,KAAKs6C,OAAOryC,KAIrCzI,MAAM+xB,GACF,IAAI5xB,GAACA,EAAEC,IAAEA,GAAOI,KAAKy7C,MAAoBlqB,GACzC,OAAO,IAAK5xB,GAAMA,EAAG07C,OAASr7C,KAAKq7C,OAAOr7C,KAAMuxB,EAAM5xB,EAAIC,GAE9Dg6C,gBACI,OAAO55C,KAAKgU,GAAGoc,QAAQO,OAAO1oB,GAAKjI,KAAKg6C,UAAU/xC,IAAIgB,IAAIhB,GAC/CjI,KAAKi0B,KAAKj0B,KAAKu6C,MAAMtyC,KAIpCzI,SAAS4H,GACL,IAAIzH,GAACA,EAAEC,IAAEA,GAAOI,KAAKy7C,MAA0Br0C,GAC/C,OAAO,IAAKzH,GAAMA,EAAG27C,UAAYt7C,KAAKs7C,UAAUt7C,KAAMoH,EAASzH,EAAIC,GAEvEi6C,mBACI,OAAO75C,KAAKgU,GAAGsc,WAAWK,OAAO1oB,GAAKjI,KAAKg6C,UAAU/xC,IAAIgB,IAAIhB,GAClDjI,KAAKi0B,KAAKj0B,KAAKw6C,SAASvyC,KAIvCzI,SAASgyB,GACL,IAAI7xB,GAACA,EAAEC,IAAEA,GAAOI,KAAKy7C,MAA0BjqB,GAC/C,OAAO,IAAK7xB,GAAMA,EAAG67C,UAAYx7C,KAAKw7C,UAAUx7C,KAAMwxB,EAAS7xB,EAAIC,GAEvEk6C,mBACI,OAAO95C,KAAKgU,GAAGuc,WAAWI,OAAO1oB,GAAKjI,KAAKg6C,UAAU/xC,IAAIgB,IAAIhB,GAClDjI,KAAKi0B,KAAKj0B,KAAKy6C,SAASxyC,KAIvCzI,KAAKyJ,GACD,IAAItJ,GAACA,EAAEC,IAAEA,GAAOI,KAAKy7C,MAAkBxyC,GACvC,OAAO,IAAKtJ,GAAMA,EAAGu7C,MAAQl7C,KAAKk7C,MAAMl7C,KAAMiJ,EAAKtJ,EAAIC,GAE3D45C,eACI,OAAOx5C,KAAKgU,GAAGqc,OAAOM,OAAO1oB,GAAKjI,KAAKg6C,UAAU/xC,IAAIgB,IAAIhB,GAC9CjI,KAAKi0B,KAAKj0B,KAAKm6C,KAAKlyC,KAInCzI,eAAe4C,GACX,IAAIzC,GAACA,GAAMK,KAAKy7C,MAAoBr5C,GACpC,OAAQzC,GAAMA,EAAG6C,SAAY6zB,EAAA,EAGjC72B,kBAAkBgrB,GACd,IAAIpO,MAACA,GAASoO,GACV7qB,GAACA,GAAMK,KAAKy7C,MAAoBr/B,GACpC,OAAQzc,GAAMA,EAAG4qB,MAAQ5qB,EAAG4qB,KAAKC,EAAQtqB,MAAMsC,SAAY6zB,EAAA,EAGzD72B,SAAS4C,EAAWkB,2CACtB,IAAIsS,EAAI5V,KAAKo4B,UAAUh2B,SACjBwT,EAAEtP,MAAMhD,KAGZ9D,YAAY4C,EAAckB,2CAC5B,IAAI8Y,MAACA,GAASha,EACVwT,EAAI5V,KAAKo4B,UAAUhc,SACjBxG,EAAEtP,MAAMhD,KAGlB44C,UAAgC,OAAOhD,EAEvC15C,SAEI,OADQ,IAAKQ,KAAQ,IAAEA,MACdiZ,UClfjBrb,EAAAE,EAAAC,EAAA,sBAAA48C,+XCUO,MAAMwB,UAAiBvoB,EAAA,EAA9Bp0B,kCAQIQ,KAAAo8C,WAAa,EAAC30C,EAAcyB,IACjB0P,EAAA,cAAC5Y,KAAKq8C,QAAO,CAAC50C,KAAMA,KAGvBzH,KAAAq8C,QAAUv8C,OAAA2Y,EAAA,EAAA3Y,CAAS,EAAE2H,WACzB,IAGIunB,EAASstB,EASTtlC,EAUAxU,EAAa2oC,EAAYoR,GAtBzBn6C,KAACA,EAAIo6C,IAAEA,EAAG1mC,SAAEA,EAAQ2mC,OAAEA,EAAMC,SAAEA,EAAQj8C,OAAEA,GAAUgH,EAClDk1C,EAAQ38C,KAAK6D,WAAW+4C,OAAOF,IAC9Bl6C,QAAQq6C,EAAUC,cAAEA,EAAe97C,KAAK+7C,GAAWJ,EAqBxD,IAnBoB,IAAhB38C,KAAKg9C,SACLhuB,EAAMpW,EAAA,wBAAQlT,UAAU,sBAAsBX,QAAS,IAAI/E,KAAK6D,WAAWo5C,SAASx1C,IAChFmR,EAAA,cAACjZ,EAAA,GAAE,CAACO,KAAK,UAEbo8C,EAAS1jC,EAAA,wBAAQlT,UAAU,sBAAsBX,QAAS,IAAI/E,KAAK6D,WAAWq5C,YAAYz1C,IACtFmR,EAAA,cAACjZ,EAAA,GAAE,CAAC+F,UAAU,YAAYxF,KAAK,aAIxB,IAAXu8C,EAEIzlC,EADa,IAAb0lC,EACQ1tB,EAEApW,EAAA,cAAAA,EAAA,cAAG0jC,WAAgBttB,GAE1B0tB,EAAW,IAChB1lC,EAAQslC,IAGG,IAAXG,EACAj6C,OAAUjB,EACNd,IAEA87C,GAAcO,GAAiBzmB,EAAA,GAAiB51B,EAAQT,KAAKC,QAGhE,CACDkrC,EAAS,gBACT,IAAInqC,EAAO+7C,GAAWA,EAAQ/8C,KAAKC,GACnCuC,EAAUoW,EAAA,cAACjZ,EAAA,KAAI,CACX+F,UAAU,OACV1D,MAAO8T,EACPrO,KAAM,CAAC1C,aAAQxD,EAAW0X,OAAOjZ,KAAKo8C,YACtCp7C,KAAMA,IAEd,IAAI47B,EAAOhkB,EAAA,qBAAKlT,UAAU,aAAa5F,OAAA62B,EAAA,EAAA72B,CAAG08C,EAAKK,EAAY78C,KAAKC,IAChE,OAAO2Y,EAAA,qBAAKlT,UAAU,sBAClBkT,EAAA,cAACjZ,EAAA,IAAG,CAAC+F,UAAWoZ,IAAU,OAAQ,OAAQqsB,GACtCvO,KAAMA,EACN5lB,MAAOA,GAEP4B,EAAA,qBAAKlT,UAAU,QAAQ62C,IAE1B/5C,KAzDHhD,KAAKuD,2CACP/C,KAAKg9C,OAASh9C,KAAK6D,WAAWm5C,OAC9Bh9C,KAAKg0B,SAASh0B,KAAKiH,QA2DvBA,WAAuB,MAAO,IAAM2R,EAAA,cAACjZ,EAAA,KAAI,CAAC8F,OAAQzF,KAAKI,OAC/CwY,EAAA,cAACjZ,EAAA,KAAI,CAACqC,MAAOhC,KAAK6D,WAAW7B,MAAOyF,KAAM,CAAC/B,UAAU,OAAQX,aAAQxD,EAAW0X,OAAOjZ,KAAKo8C,gSCpEjG,MAAMe,UAAqBvpB,EAAA,EAAlCp0B,kCAQYQ,KAAAo9C,eAAiB,KAAYC,EAAAr9C,UAAA,qBACjCA,KAAK61B,YACL,IAAIp1B,EAAST,KAAKu0B,MAAMG,YACxB10B,KAAK80B,WAAWr0B,MAGZT,KAAAiH,KAAO,KACJ2R,EAAA,cAACjZ,EAAA,KAAI,KACPK,KAAKu0B,MAAMtb,WAbdzZ,KAAKuD,2CACP/C,KAAKu0B,MAAQv0B,KAAK8D,WAAW9D,KAAKo9C,gBAClCp9C,KAAK+0B,gBAAgBnc,EAAA,cAAC5Y,KAAKiH,KAAI,mRCOhC,MAAMq2C,EAQT99C,YAAYsN,EAAgB1K,EAAWo6C,EAAWE,GAFlD18C,KAAA8V,SAAsB+R,EAAA,EAAW3D,MAAM,GAAI,CAACC,MAAM,IAG9CnkB,KAAK8M,OAASA,EACd9M,KAAKoC,KAAOA,EACZpC,KAAKw8C,IAAMA,EACXx8C,KAAK08C,SAAWA,EAChB18C,KAAKy8C,QAAS,GAIf,MAAMc,UAAa3pB,EAAA,EAA1Bp0B,kCAgGIQ,KAAAi9C,SAAW,CAAMx1C,GAAiB+1C,EAAAx9C,UAAA,qBAC9B,IAAI08C,SAACA,EAAQ5mC,SAAEA,GAAYrO,EACvBg2C,EAAUz9C,KAAK09C,UAAUl3C,OACzBm3C,EAAWF,EAAQ,EACnBG,EAAMlB,EAAW,EACrB,GAAIkB,GAAOH,EAAS,OACpB,IAAII,EAAW79C,KAAK09C,UAAUE,GAC1BE,EAAKD,EAAS39C,KACdkC,EAAOy7C,EAAS17C,MAChB47C,EAAc,GACd7rC,EAAO,GACX,IAAK,IAAIvK,EAAEF,OAASlG,IAAJoG,EAAcA,EAAEA,EAAEmF,OAAQ,CACtC,IAAK4vC,SAASsB,EAAExB,IAAEA,GAAO70C,EACrBm2C,EAAK99C,KAAK09C,UAAUM,GAAI99C,KAE5B69C,EAAYD,GAAM5rC,EAAK4rC,GAAMtB,EAAIl5C,GAGrC,IAAIA,QAAWtD,KAAKi+C,YAAYJ,EAAUE,GAC1C,QAAWx8C,IAAP+B,GAAoBA,GAAM,EAAG,OACjClB,EAAKoB,MAAMF,GACX,IAAIu8B,EAAQz9B,EAAK4kB,MAAM1jB,GACnB46C,EAAO,GACPz9C,EAAa,GACjB,GAAIi8C,EAAS,IAAIiB,GAIb,GAHAv7C,EAAKoB,MAAMF,GAEX7C,EAAOq9C,GAAMI,EAAKJ,GAAMje,EACpB7/B,KAAKN,OAAO2B,OAAOmF,OAAS,EAAG,CAC/B,IAAI3F,QAAYb,KAAKw4C,MAAM2E,EAAcjrC,GACzC,IAAK,IAAItK,KAAK/G,EAEVJ,EAAOmH,GAAKs2C,EAAKt2C,GAAK/G,EAAI+G,QAIjC,CAEDnH,EAAOq9C,GAAM5rC,EAAK4rC,GAAMje,EACxB,IAAK,IAAIj4B,EAAEg2C,EAAI,EAAEh2C,EAAE+1C,EAAS/1C,IAExBsK,EAAKlS,KAAK09C,UAAU91C,GAAG1H,MAAQ,EAInCg+C,EAAKl+C,KAAK09C,UAAUC,GAAUz9C,MAAQ,EACtC,IAAImB,OAACA,GAAUrB,KAAKN,OACpB,IAAK,IAAI4lB,KAAKjkB,EAAQ,CAClB,IAAInB,KAACA,EAAIqI,KAAEA,EAAMyyB,KAAKmjB,GAAY74B,GACf,IAAb64B,IAEFD,EAAK54B,EAAEplB,MAAQJ,OAAA0a,EAAA,EAAA1a,CAAkByI,KAI7C2J,EAAKgsC,KAAO,CAACA,SACPl+C,KAAKN,OAAO0sB,QAAQ4C,IAAIC,OAAO/c,GACrC,IAAIksC,EAAWtoC,EAASgM,UAAU7Z,GAAKA,EAAEu0C,IAAIl5C,KAAOA,GACpD,GAAI86C,EAAW,EACXtoC,EAAStQ,KAAKxF,KAAKq+C,WAAW52C,EAAMrF,EAAKA,KAAMy9B,EAAO+d,EAAKn9C,QAE1D,CACD,IAAIY,OAACA,GAAUrB,KAAKN,OACpB,QAAe6B,IAAXF,GAAwBA,EAAOmF,OAAS,EAAG,CAC3C,IAAIogB,EAAM9Q,EAASsoC,GACnBtoC,EAAS6O,OAAOy5B,EAAU,GAC1Bx3B,EAAInmB,OAASA,EAMbqV,EAAS6O,OAAOy5B,EAAU,EAAGx3B,IAGrC5mB,KAAKqD,kBAGTrD,KAAAk9C,YAAc,CAAMz1C,GAAiB+1C,EAAAx9C,UAAA,qBACjC,IACIoC,EADWpC,KAAK09C,UAAUj2C,EAAKi1C,UACfv6C,MAEhB/B,EADYJ,KAAKP,IAAIy6C,UAAU93C,EAAKA,MAClBk8C,SAASl8C,EAAKA,MAChCm8C,EACAv+C,KAAKJ,IAAI2+C,eACNzjC,EAAAnI,EAAE6rC,SAAS,0CAClB,IAA8C,IAA1Cr2C,QAAQo2C,EAAc,CAACn+C,MAAMA,KAAoB,OACrD,IAAI6I,EAAUjJ,KAAKN,OACfwS,EAAO,GAEPusC,EAAK,IADEvsC,EAAW,KAAI,IAErB1M,KAAKi5C,GACV,IAAK,IAAI92C,EAAEF,OAAUlG,IAAJoG,EAAcA,EAAEA,EAAEmF,OAAQ,CACvC,IAAIkxC,EAAGr2C,EAAE+0C,SAET+B,EAAGz+C,KAAK09C,UAAUM,GAAI99C,MAAQyH,EAAE60C,IAAIl5C,GAExC,IAAIuE,EAAM7H,KAAK09C,UAAUl3C,OACzB,IAAK,IAAIoB,EAAEH,EAAKi1C,SAAS,EAAG90C,EAAEC,EAAKD,IAAK,CAGpC62C,EAFQz+C,KAAK09C,UAAU91C,GAElB1H,OAAS,QAEZ+I,EAAImjB,QAAQ8C,IAAID,OAAO/c,GAC7B,IAAI4D,EAAWrO,EAAKqF,OAAOgJ,SACvB5M,EAAQ4M,EAASgM,UAAU7Z,GAAKA,IAAMR,GACtCyB,GAAS,GAAG4M,EAAS6O,OAAOzb,EAAO,MApM3B1J,wDACZ,IAAImvB,KAACA,EAAID,WAAEA,GAAc1uB,KAAKN,OAC9BM,KAAKg9C,YAAwBz7C,IAAfmtB,EACd,IAAIgwB,EAAI1+C,KAAKN,OAAO+uB,QAAQtM,IAGxBthB,SAFe69C,EAAEvwB,MAAM,KAEVttB,IACb48C,EAAU9uB,EAAKnoB,OACnBxG,KAAK48C,OAAS9hC,EAAAnI,EAAEC,MAAM5S,KAAKL,GAAGgvB,MAAQ,IACtC3uB,KAAK09C,UAAY,GACjB,IAAIiB,EAAYD,EAAEr5B,QAAQ,GAAGhkB,OAC7B,IAAK,IAAIuG,EAAE,EAAGA,EAAE61C,EAAS71C,IACrB5H,KAAK09C,UAAUl4C,KAAKm5C,EAAU/2C,IAC1BA,GAAK5H,KAAK48C,OAAOp2C,QACjBxG,KAAK48C,OAAOp3C,KAAK,CACbhD,QAAS6zB,EAAA,IAIrBr2B,KAAKgC,MAAQlC,OAAA+nB,EAAA,EAAA/nB,CAAW,IACxB,IAAI2H,OAAelG,EACnB,IAAK,IAAIslB,KAAKhmB,EAAK,CACf,IAAI+9C,EAAU5+C,KAAK6+C,QAAQp3C,EAAMof,QACjBtlB,IAAZq9C,IACA5+C,KAAKgC,MAAMwD,KAAKo5C,GAChBn3C,EAAOm3C,SAIT5+C,KAAKi4B,UAAUj4B,KAAK8+C,YAGtBt/C,WAAWsN,EAAgB1K,EAAWo6C,EAAWE,EAAiBj8C,GACtE,IAAIgH,EAAO,IAAI61C,EAAQxwC,EAAQ1K,EAAMo6C,EAAKE,GAK1C,OAJIA,IAAa18C,KAAK09C,UAAUl3C,OAAS,IACrCiB,EAAKg1C,QAAS,EACdh1C,EAAKhH,OAASA,GAEXgH,EAGXjI,QAAQiI,EAAcmf,GAClB,IAAI/lB,OAAcU,EACdk8C,EAAUz9C,KAAK09C,UAAUl3C,OACzBmB,EAAIF,EACR,IAAK,IAAIG,EAAE,EAAEA,EAAE61C,EAAQ71C,IAAK,CACxB,IAAIN,EAAMtH,KAAK09C,UAAU91C,IACrB1H,KAACA,GAAQoH,EACTy3C,EAAUz3C,EAAInF,MACdgP,EAAYyV,EAAI1mB,GACpB,QAAYqB,IAAR4P,EAAmB,MACvB,IAAI7N,GAACA,GAAM6N,EACX,GAAU,IAANvJ,EAAS,CACT,GAAW,IAAPtE,EAAU,cACJ/B,IAANoG,GAAmBA,EAAE60C,IAAIl5C,KAAOA,IAChCzC,EAAM8G,EAAI3H,KAAKq+C,gBAAW98C,EAAWw9C,EAAQ38C,KAAM+O,EAAKvJ,EAAGgf,IAE/D,SAEJ,IAAI9Q,SAACA,EAAQ0mC,IAAEA,GAAO70C,EAClBE,EAAMiO,EAAStP,OACnB,GAAIqB,EAAM,EAAG,CACT,IAAImb,EAAIlN,EAASjO,EAAI,GACrB,GAAImb,EAAEw5B,IAAIl5C,KAAOA,EAAI,CACjBqE,EAAIqb,EACJ,UAGJ1f,EAAK,GACLwS,EAAStQ,KAAKmC,EAAI3H,KAAKq+C,WAAW12C,EAAGo3C,EAAQ38C,KAAM+O,EAAKvJ,EAAGgf,IAGnE,OAAO/lB,EAGLrB,YAAYq+C,EAAgB96C,2CAC9B,IAAIZ,MAACA,GAAS07C,GACVz7C,KAACA,EAAIS,WAAEA,GAAcV,EACrBW,EAAc9C,KAAKP,IAAIqD,YAAYV,GACnC48C,EAAYj8C,OACGxB,IAAfsB,GAEyB,kBADzBm8C,EAAYj8C,EAAMF,EAAW3C,SAEzB8+C,EAAYA,EAAU17C,IAG9B,IAAIzC,QAAYiC,EAAYM,KAAK47C,GACjC,OAAO78C,EAAMskB,aAAa5lB,KAgH9Bi+C,eAA0C,OAAO3C,GCjPrDv+C,EAAAE,EAAAC,EAAA,sBAAAw/C,gUCMO,MAAM0B,UAAqBrrB,EAAA,EAAlCp0B,kCAKcQ,KAAAiH,KAAO,KAAM2R,EAAA,cAACjZ,EAAA,KAAI,CAAC8F,OAAQzF,KAAKI,OAAK,YAJzCZ,KAAKuD,2CACP/C,KAAKg0B,SAASh0B,KAAKiH,kRCCpB,MAAMi4C,UAAiBtrB,EAAA,EACVp0B,8DACNQ,KAAKi4B,UAAUj4B,KAAKm/C,gBAG9BA,mBAAkD,OAAOF,GCd7DrhD,EAAAE,EAAAC,EAAA,sBAAAmhD,wUCQO,MAAME,UAAoBxrB,EAAA,EAAjCp0B,kCASYQ,KAAAQ,SAAW,KAAWoC,EAAA5C,UAAA,qBAC1B,IAAIS,EAAST,KAAKu0B,MAAMG,YACxB10B,KAAKqlB,cAAgBrlB,KAAK6D,WAAWorB,OAAOxuB,GAC5CT,KAAKw0B,YACLx0B,KAAKg0B,SAASh0B,KAAKq/C,eAGbr/C,KAAAs/C,SAAW,MACjB,IAAIl/C,MAACA,GAASJ,KAAK6D,WACnB,OAAO+U,EAAA,cAACjZ,EAAA,KAAI,CAAC8F,OAAQrF,GAChBJ,KAAKu0B,MAAMtb,OAAO,gBAIjBjZ,KAAAq/C,WAAa,MACnB,IAAIj/C,MAACA,GAASJ,KAAK6D,WACnB,OAAO+U,EAAA,cAACjZ,EAAA,KAAI,CAAC8F,OAAQrF,EAAOyF,KAAK,8BAE7B+S,EAAA,yBACK9Y,OAAA62B,EAAA,EAAA72B,CAAcE,KAAKqlB,aAxB1B7lB,KAAKuD,2CACP/C,KAAKu0B,MAAQv0B,KAAK8D,WAAW9D,KAAKQ,SAAUuC,GAC5C/C,KAAKg0B,SAASh0B,KAAKs/C,sRCLpB,MAAMC,UAAgB3rB,EAAA,EACTp0B,8DACNQ,KAAKi4B,UAAUj4B,KAAKw/C,eAG9BA,kBAAgD,OAAOJ,EAEjD5/C,OAAOiB,2CACT,OAAOT,KAAKN,OAAOuvB,OAAOxuB,MCjBlC7C,EAAAE,EAAAC,EAAA,sBAAAwhD,gUCMO,MAAME,UAAqB7rB,EAAA,EAAlCp0B,kCAKcQ,KAAAiH,KAAO,KAAM2R,EAAA,cAACjZ,EAAA,KAAI,CAAC8F,OAAQzF,KAAKI,OAAK,YAJzCZ,KAAKuD,2CACP/C,KAAKg0B,SAASh0B,KAAKiH,kRCCpB,MAAMy4C,UAAiB9rB,EAAA,EACVp0B,8DACNQ,KAAKi4B,UAAUj4B,KAAK2/C,gBAG9BA,mBAAkD,OAAOF,GCd7D7hD,EAAAE,EAAAC,EAAA,sBAAA2hD,mCCCA9hD,EAAAE,EAAAC,EAAA,sBAAA6hD,IAAA,IAAAC,EAAAjiD,EAAA,IAAAkiD,EAAAliD,EAAA,IAGO,MAAMgiD,EAAW,CACpBpgD,IAAI6d,EAAe9P,GACfzN,OAAA+/C,EAAA,EAAA//C,CAAeud,EAAQ9P,GACvBuyC,EAAA,EAAU1iC,eAAe7P,IAE7B/N,QACIM,OAAA+/C,EAAA,EAAA//C,CAAe,OAAGyB,GAClBu+C,EAAA,EAAU1iC,oBAAe7b,0cCJ1B,MAAew+C,EAYlBvgD,YAAYI,GAPHI,KAAAqzC,MAAgB2M,EAAA,EAsDjBhgD,KAAAigD,iBAAmB,CAAOz3C,GAA6B5F,EAAA5C,UAAA,2BACrDA,KAAKkgD,UAAU13C,MA/CrBxI,KAAKJ,IAAMA,GAAO,GAClBI,KAAKC,EAAID,KAAKJ,IAAIK,GAAK,GAR3BsJ,WAAiB,OAAOwgC,EAAA,EAAIxgC,KAC5B42C,gBACI,IAAI52C,KAACA,GAAQwgC,EAAA,EACb,YAAaxoC,IAATgI,GACGA,EAAKjG,GAAK,EAUb9D,UAEJuqC,EAAA,EAAIqW,yBAAyBpgD,KAAKqgD,kBAClCrgD,KAAKsgD,YAGC9gD,aAGMA,UAAgC+gD,EAAmCx9C,iDACzE,IAAKw9C,EAAIvgD,MAAoB4P,KAAK7M,KAGlCvD,WAAiCyH,EAAoClE,GAC3E,OAAO,IAAKkE,EAAMjH,MAAoBiZ,OAAOlW,GAG3CvD,MAAM+I,EAAa8P,iDACfrY,KAAKs4C,QAAQ/vC,EAAM8P,KAGb7Y,QAAQ+I,EAAa8P,8CAG3B7Y,IAAIijB,GACV0G,MAAM1G,GAEAjjB,UAAUiG,EAAeoB,GAC/B7G,KAAKg0B,SAASzvB,EAAA,cAAChG,EAAA,EAAI,CAACkH,OAAO,cACvBlB,EAAA,yBACoB,kBAARsC,EAAkBA,EAAMA,EAAI2B,WAKtChJ,UAAUgJ,IAQJhJ,sDAMZ,OAAO,IAEDA,yBACNQ,KAAKqgD,iBAAmBtW,EAAA,EAAIyW,uBAAuBxgD,KAAKigD,kBAItDzgD,MAAMuD,2CACR/C,KAAKkH,SAAWlH,KAAK0H,QAAQ5B,KAAK9F,MAClCA,KAAKwgD,0BAEO,WADIxgD,KAAKq4C,uBAEfr4C,KAAKgzB,cAAcjwB,MAG7B8xB,gBAAyB,YAA2BtzB,IAApBvB,KAAKygD,WAG/BjhD,KAAQuD,2CAEV,YADwBxB,IAApBvB,KAAKygD,aAA0BzgD,KAAKygD,WAAa,IAC9C,IAAIpxC,QAAY,CAAOC,EAASC,IAAU3M,EAAA5C,UAAA,qBAC7CA,KAAKygD,WAAWj7C,KAAK8J,SACftP,KAAKsG,MAAMvD,QAInBvD,MAA4B+gD,EAAmCx9C,2CAEjE,YADwBxB,IAApBvB,KAAKygD,aAA0BzgD,KAAKygD,WAAa,IAC9C,IAAIpxC,QAAc,CAAOC,EAASC,IAAU3M,EAAA5C,UAAA,qBAC/CA,KAAKygD,WAAWj7C,KAAK8J,SACf,IAAKixC,EAAGvgD,MAAc4P,KAAK7M,QAIzCvD,WAAW6Y,GACP,QAAwB9W,IAApBvB,KAAKygD,WAA0B,OACnC,IAAInxC,EAAUtP,KAAKygD,WAAW76C,WACdrE,IAAZ+N,EAIJA,EAAQ+I,GAHJ8Q,MAAM,uDAMd3pB,SAASiS,GACLs4B,EAAA,EAAIvkC,KAAKiM,EAAMzR,KAAKkH,UACpBlH,KAAKkH,cAAW3F,EAGpB/B,YAAYiS,GACRs4B,EAAA,EAAIn7B,QAAQ6C,EAAMzR,KAAKkH,UACvBlH,KAAKkH,cAAW3F,EAGpB/B,WACIuqC,EAAA,EAAIlkC,OAGRrG,UAAU+G,GACNwjC,EAAA,EAAInkC,IAAIW,GAGZ/G,UAAU+G,GACNwjC,EAAA,EAAIh7B,SAASxI,GAGjB/G,eACIuqC,EAAA,EAAI1mC,eAGR7D,gBAAgB0I,GACZ6hC,EAAA,EAAI/6B,gBAAgB9G,IAKrB,MAAew4C,EAKlBlhD,YAAYqE,GACR7D,KAAK6D,WAAaA,EAClB7D,KAAKJ,IAAMiE,EAAWjE,IACtBI,KAAKC,EAAI4D,EAAW5D,EAGxBozC,YAAuB,OAAO2M,EAAA,EAIpBxgD,SAASsR,EAAkC/N,GACjD,OAAO,IAAK+N,EAAG9Q,KAAK6D,YAAaoV,OAAOlW,GAG5BvD,UAAU+gD,EAAmCx9C,iDACnD,IAAKw9C,EAAGvgD,KAAK6D,YAAa+L,KAAK7M,KAGzBvD,MAAM+I,EAAa8P,iDAMzBrY,KAAK6D,WAAWyc,MAAM/X,EAAM8P,KAGhC7Y,MAA4B+gD,EAAmCx9C,2CACjE,aAAa/C,KAAK6D,WAAW20C,MAAM+H,EAAIx9C,KAGjCvD,WAAW6Y,GACjBrY,KAAK6D,WAAWixB,WAAWzc,GAGrB7Y,SAASyH,EAAqClE,GACpD/C,KAAK6D,WAAWmwB,SAASzvB,EAAA,cAAoB0C,EAAMlE,IAG7CvD,YAAYyH,EAAqClE,GACvD/C,KAAK6D,WAAWioC,YAAYvnC,EAAA,cAAoB0C,EAAMlE,IAGhDvD,gBAAgBiS,GACtBzR,KAAK6D,WAAWmwB,SAASviB,GAGnBjS,mBAAmBiS,GACzBzR,KAAK6D,WAAWioC,YAAYr6B,GAGtBjS,WACNQ,KAAK6D,WAAWqxC,WAGV11C,UAAU+G,GAChBvG,KAAK6D,WAAW2wB,UAAUjuB,GAGpB/G,UAAU+G,GAChBvG,KAAK6D,WAAWgyB,UAAUtvB,GAGpB/G,eACNQ,KAAK6D,WAAWR,eAGV7D,gBAAgB0I,GACtBlI,KAAK6D,WAAWmL,gBAAgB9G,IAIjC,MAAey4C,UAAoCD,EAGtDlhD,OAAOuD,GAAyB,OAAO,qCCxO3C,IAAA69C,EAAAhjD,EAAA,IAAAA,EAAAK,EAAA2iD,EAAA,UAAAhjD,EAAAE,EAAAC,EAAA,0BAAA6iD,EAAA,QAAAhjD,EAAAK,EAAA2iD,EAAA,cAAAhjD,EAAAE,EAAAC,EAAA,8BAAA6iD,EAAA,YAAAhjD,EAAAK,EAAA2iD,EAAA,oBAAAhjD,EAAAE,EAAAC,EAAA,oCAAA6iD,EAAA,kBAAAhjD,EAAAK,EAAA2iD,EAAA,aAAAhjD,EAAAE,EAAAC,EAAA,6BAAA6iD,EAAA,WAAAhjD,EAAAK,EAAA2iD,EAAA,SAAAhjD,EAAAE,EAAAC,EAAA,yBAAA6iD,EAAA,OAAAhjD,EAAAK,EAAA2iD,EAAA,OAAAhjD,EAAAE,EAAAC,EAAA,uBAAA6iD,EAAA,KAAAhjD,EAAAK,EAAA2iD,EAAA,SAAAhjD,EAAAE,EAAAC,EAAA,yBAAA6iD,EAAA,OAAAhjD,EAAAK,EAAA2iD,EAAA,UAAAhjD,EAAAE,EAAAC,EAAA,0BAAA6iD,EAAA,QAAAhjD,EAAAK,EAAA2iD,EAAA,QAAAhjD,EAAAE,EAAAC,EAAA,wBAAA6iD,EAAA,MAAAhjD,EAAAK,EAAA2iD,EAAA,SAAAhjD,EAAAE,EAAAC,EAAA,yBAAA6iD,EAAA,OAAAhjD,EAAAK,EAAA2iD,EAAA,UAAAhjD,EAAAE,EAAAC,EAAA,0BAAA6iD,EAAA,QAAAhjD,EAAAK,EAAA2iD,EAAA,UAAAhjD,EAAAE,EAAAC,EAAA,0BAAA6iD,EAAA,QAAAhjD,EAAAK,EAAA2iD,EAAA,aAAAhjD,EAAAE,EAAAC,EAAA,6BAAA6iD,EAAA,WAAAhjD,EAAAK,EAAA2iD,EAAA,cAAAhjD,EAAAE,EAAAC,EAAA,8BAAA6iD,EAAA,YAAAhjD,EAAAK,EAAA2iD,EAAA,eAAAhjD,EAAAE,EAAAC,EAAA,+BAAA6iD,EAAA,aAAAhjD,EAAAK,EAAA2iD,EAAA,gBAAAhjD,EAAAE,EAAAC,EAAA,gCAAA6iD,EAAA,cAAAhjD,EAAAK,EAAA2iD,EAAA,YAAAhjD,EAAAE,EAAAC,EAAA,4BAAA6iD,EAAA,UAAAhjD,EAAAK,EAAA2iD,EAAA,QAAAhjD,EAAAE,EAAAC,EAAA,wBAAA6iD,EAAA,UAAAC,EAAAjjD,EAAA,IAAAA,EAAAK,EAAA4iD,EAAA,UAAAjjD,EAAAE,EAAAC,EAAA,0BAAA8iD,EAAA,QAAAjjD,EAAAK,EAAA4iD,EAAA,cAAAjjD,EAAAE,EAAAC,EAAA,8BAAA8iD,EAAA,YAAAjjD,EAAAK,EAAA4iD,EAAA,oBAAAjjD,EAAAE,EAAAC,EAAA,oCAAA8iD,EAAA,kBAAAjjD,EAAAK,EAAA4iD,EAAA,aAAAjjD,EAAAE,EAAAC,EAAA,6BAAA8iD,EAAA,WAAAjjD,EAAAK,EAAA4iD,EAAA,SAAAjjD,EAAAE,EAAAC,EAAA,yBAAA8iD,EAAA,OAAAjjD,EAAAK,EAAA4iD,EAAA,OAAAjjD,EAAAE,EAAAC,EAAA,uBAAA8iD,EAAA,KAAAjjD,EAAAK,EAAA4iD,EAAA,SAAAjjD,EAAAE,EAAAC,EAAA,yBAAA8iD,EAAA,OAAAjjD,EAAAK,EAAA4iD,EAAA,UAAAjjD,EAAAE,EAAAC,EAAA,0BAAA8iD,EAAA,QAAAjjD,EAAAK,EAAA4iD,EAAA,QAAAjjD,EAAAE,EAAAC,EAAA,wBAAA8iD,EAAA,MAAAjjD,EAAAK,EAAA4iD,EAAA,SAAAjjD,EAAAE,EAAAC,EAAA,yBAAA8iD,EAAA,OAAAjjD,EAAAK,EAAA4iD,EAAA,UAAAjjD,EAAAE,EAAAC,EAAA,0BAAA8iD,EAAA,QAAAjjD,EAAAK,EAAA4iD,EAAA,UAAAjjD,EAAAE,EAAAC,EAAA,0BAAA8iD,EAAA,QAAAjjD,EAAAK,EAAA4iD,EAAA,aAAAjjD,EAAAE,EAAAC,EAAA,6BAAA8iD,EAAA,WAAAjjD,EAAAK,EAAA4iD,EAAA,cAAAjjD,EAAAE,EAAAC,EAAA,8BAAA8iD,EAAA,YAAAjjD,EAAAK,EAAA4iD,EAAA,eAAAjjD,EAAAE,EAAAC,EAAA,+BAAA8iD,EAAA,aAAAjjD,EAAAK,EAAA4iD,EAAA,gBAAAjjD,EAAAE,EAAAC,EAAA,gCAAA8iD,EAAA,cAAAjjD,EAAAK,EAAA4iD,EAAA,YAAAjjD,EAAAE,EAAAC,EAAA,4BAAA8iD,EAAA,UAAAjjD,EAAAK,EAAA4iD,EAAA,QAAAjjD,EAAAE,EAAAC,EAAA,wBAAA8iD,EAAA,MAAAjjD,EAAA,gGCCAA,EAAAE,EAAAC,EAAA,sBAAA+iD,IAAAljD,EAAAE,EAAAC,EAAA,sBAAAgjD,IAAO,MAAMD,EAAc,WACdC,EAAa,4ECF1BnjD,EAAAE,EAAAC,EAAA,sBAAAijD,IAAA,IAAAz8C,EAAA3G,EAAA,GAAAklB,EAAAllB,EAAA,GAAAmlB,EAAAnlB,EAAAolB,EAAAF,GAmBO,MAAMk+B,UAAwBz8C,EAAA,UAGjC/E,YAAYgF,GACR3E,MAAM2E,GAgBFxE,KAAAihD,oBAAsB,CAAChvC,KACK,IAA5BjS,KAAKiG,MAAMi7C,eACXlhD,KAAK4+B,QAAU5+B,KAAK4+B,OAAOuiB,SAASlvC,EAAIuD,SACvCxV,KAAKohD,MAEVphD,KAAKqhD,YAGDrhD,KAAAqhD,OAAS,MACbrhD,KAAK4E,SAAS,CACVs8C,cAAelhD,KAAKiG,MAAMi7C,iBAzB9BlhD,KAAKiG,MAAQ,CACTi7C,cAAc,GAItB1hD,qBACIuM,SAAS3F,iBAAiB,QAASpG,KAAKihD,qBACxCl1C,SAAS3F,iBAAiB,aAAcpG,KAAKihD,qBAGjDzhD,uBACIuM,SAASu1C,oBAAoB,QAASthD,KAAKihD,qBAC3Cl1C,SAASu1C,oBAAoB,aAActhD,KAAKihD,qBAiBpDzhD,SACI,IAAIa,KAACA,EAAI+rB,QAAEA,EAAOm1B,QAAEA,GAAWvhD,KAAKwE,WACpBjD,IAAZggD,IAAuBA,GAAU,GACrC,IAAIC,EAAUp1B,EAAQ4lB,KAAK/pC,QAAc1G,IAAT0G,EAAE5H,OAC9B6gD,aAACA,GAAgBlhD,KAAKiG,MAE1B,OAAO1B,EAAA,qBAAKmB,UAAU,YAClBnB,EAAA,wBAAQm3B,IAAKzzB,GAAGjI,KAAK4+B,OAAO32B,EAAGvC,UAAU,4CAA2C+7C,cACpE,WAAUC,gBACPR,EACfn8C,QAAS/E,KAAKqhD,QACd98C,EAAA,mBAAGmB,UAAWqd,IAAW,KAAM,OAAO1iB,GAAM,kBAEhDkE,EAAA,qBAAKm3B,IAAKzzB,GAAKjI,KAAKohD,KAAKn5C,EAAGvC,UAAWqd,IAAW,CAAC4+B,iBAAgB,EAAMC,sBAAsBL,EAAS5yC,KAAOuyC,KAEvG90B,EAAQnjB,IAAI,CAAChB,EAAEiB,KACX,IAGItB,GAHAvH,KAACA,EAAIy5B,QAAEA,EAAO3lB,OAAEA,GAAUlM,EAC9B,YAAa1G,IAATlB,QAAkCkB,IAAZu4B,EACfv1B,EAAA,qBAAKmB,UAAU,uBAEV,IAAZ87C,SACajgD,IAATlB,IAAoBA,EAAO,MAAQA,GACvCuH,EAAIrD,EAAA,cAAAA,EAAA,cAAEA,EAAA,mBAAGmB,UAAWqd,IAAW,KAAM1iB,EAAM,SAAQwhD,eAAe,mBAEvDtgD,IAAX4S,EACO5P,EAAA,oBAAImB,UAAU,mBAAmBkC,MAAIkyB,GACzCv1B,EAAA,mBAAGmB,UAAU,gBAAgB4B,IAAK4B,EAAOihC,KAAK,IAAIplC,QAAUkN,IAA4CA,EAAIorB,iBAAiBlpB,MAAYvM,MAAIkyB,wCC/E5Kl8B,EAAAE,EAAAC,EAAA,sBAAA+jD,IAAA,IAAAv9C,EAAA3G,EAAA,GAMA,SAASmkD,EAAWlyC,EAAWmyC,GAC3B,IAAKnyC,EAAM,OAAO,KACE,kBAATA,IAAmBA,EAAO,IAAI7K,KAAK6K,IAE9C,IACI8N,EAAaskC,EAAcC,EAAcC,EAAcC,EAAaC,EAAWC,EAD/Er9C,EAAM,IAAID,KAEVlH,EAAI+R,EACR8N,EAAO1Y,EAAIE,UAAYrH,EAAEqH,UACzB,IAAIo9C,EAAKzkD,EAAE0kD,WAAYC,EAAO3kD,EAAE4kD,aAQhC,OAPAT,EAAMh9C,EAAI09C,UACVT,EAAMpkD,EAAE6kD,UACRR,EAAMrkD,EAAE8kD,WAAW,EACnBR,EAAKtkD,EAAE+kD,cACPP,EAAUr9C,EAAI49C,cACdR,GAAkB,IAAbL,EAAmB,IAAMO,GAASE,EAAO,GAAG,KAAK,KAAOA,EAAU,GAEnE9kC,GAAO,MACHykC,IAASE,EACFH,EAAM,SAAID,EAAM,SAAMG,EAEtBD,EAAK,SAAID,EAAM,SAAID,EAAM,SAAMG,EAE1C1kC,EAAO,MACAukC,IAAQD,GACVtkC,EAAO,EAAG,gBAAQ,iBAAS0kC,GACf,IAAXL,EAAiBK,EAAK,eAE5BD,IAASE,EACFH,EAAM,SAAID,EAAM,SAEpBE,EAAK,SAAID,EAAM,SAAID,EAAM,SAI7B,MAAMJ,UAAiBv9C,EAAA,UAC1B/E,SACI,OAAOuiD,EAAW/hD,KAAKwE,MAAMqL,MAAM,mCC1C3CjS,EAAAE,EAAAC,EAAA,sBAAA+kD,IAAA,IAAAv+C,EAAA3G,EAAA,GAAAklB,EAAAllB,EAAA,GAAAmlB,EAAAnlB,EAAAolB,EAAAF,GAAAigC,EAAAnlD,EAAA,GAYO,MAAMklD,UAAcv+C,EAAA,UACvB/E,SACI,IACIwjD,GADA3iD,KAACA,EAAIusC,KAAEA,EAAIvgB,YAAEA,EAAW42B,GAAEA,EAAEC,GAAEA,GAAMljD,KAAKwE,MAGzCw+C,EADuB,kBAAhB32B,EACA9nB,EAAA,yBAAM8nB,GAENA,EACX,IAAI7U,EAAKuL,IACL,aACKxhB,IAAL0hD,EAAgB,OAAO,MAAMA,OACxB1hD,IAAL2hD,EAAgB,OAAO,MAAMA,GACjC,OAAO3+C,EAAA,qBAAKmB,UAAW8R,GACnBjT,EAAA,cAACw+C,EAAA,MAAK,CAACr9C,UAAU,iBAAiBiK,IAAKtP,IACvCkE,EAAA,qBAAKmB,UAAU,cACXnB,EAAA,oBAAImB,UAAU,QAAQknC,GACrBoW,2WCLV,MAAMG,UAAkB5+C,EAAA,UAA/B/E,kCAEYQ,KAAAsH,IAAc,KAGdtH,KAAAg8B,SAAW,CAAC/pB,IAChBjS,KAAKsH,IAAM2K,EAAIuD,OAAO6C,WACL9W,IAAbvB,KAAKsH,MACLtH,KAAKsH,IAAMtH,KAAKsH,IAAIopB,OACH,KAAb1wB,KAAKsH,MAAYtH,KAAKsH,SAAM/F,KAEA,IAAhCvB,KAAKwE,MAAM4+C,mBACXpjD,KAAK65B,UAAY75B,KAAKsH,OAGtBtH,KAAAQ,SAAW,CAAOyR,GAA6BrP,EAAA5C,UAAA,qBAGnD,GAFAiS,EAAIorB,iBACa,OAAbr9B,KAAKsH,MAActH,KAAKsH,IAAMtH,KAAKwE,MAAM6wB,SAAW,KACpB,IAAhCr1B,KAAKwE,MAAM4+C,iBAA2B,CACtC,IAAKpjD,KAAKsH,IAAK,OACXtH,KAAK27B,QAAO37B,KAAK27B,MAAM9B,UAAW,SAEpC75B,KAAKwE,MAAMuvB,SAAS/zB,KAAKsH,KAC3BtH,KAAK27B,QAAO37B,KAAK27B,MAAM9B,UAAW,MAE1Cr6B,QACQQ,KAAK27B,QAAO37B,KAAK27B,MAAMtjB,MAAQ,IAEvC7Y,SACI,IAEI6jD,EAOAC,GATA59C,UAACA,EAAS69C,eAAEA,EAAc1nB,QAAEA,EAAOz7B,MACnCA,EAAK+zB,YAAEA,EAAWqvB,WAAEA,EAAUjnB,UAAEA,EAAS3O,KAAEA,GAAQ5tB,KAAKwE,MAE5D,OAAQopB,GACJ,QACA,IAAK,KAAMy1B,EAAY,iBAAkB,MACzC,IAAK,KAAMA,EAAY,iBAAkB,MACzC,IAAK,KAAMA,EAAY,iBAI3B,YADc9hD,IAAVnB,IAAqBkjD,EAAM/+C,EAAA,uBAAOmB,UAAU,qBAAqBtF,IAC9DmE,EAAA,sBAAMmB,UAAWA,EAAWlF,SAAUR,KAAKQ,UAC9C+D,EAAA,qBAAKmB,UAAWqd,IAAW,cAAesgC,IACrCC,EACD/+C,EAAA,uBAAOm3B,IAAKzzB,GAAGjI,KAAK27B,MAAM1zB,EAAG+zB,SAAUh8B,KAAKg8B,SACxCzzB,KAAK,OACLrI,KAAK,MACL27B,QAASA,EACTn2B,UAAWqd,IAAW,eAAgBwgC,GAAkB,kBACxDpvB,YAAaA,EACbiQ,aAAcpkC,KAAKwE,MAAM6wB,QACzBkH,UAAWA,IACfh4B,EAAA,qBAAKmB,UAAU,sBACXnB,EAAA,wBAAQmB,UAAU,kBACd6C,KAAK,SACLsxB,SAAU75B,KAAK65B,UACft1B,EAAA,mBAAGmB,UAAU,iBACbnB,EAAA,mBAAGmB,UAAU,OACZ89C,qUAtDTxzC,CAAA,CAAX49B,EAAA,gXCpBE,MAAe6V,EAClBjkD,YAAYkkD,EAAkB,KAItB1jD,KAAA+B,IAAU,GACN/B,KAAA2jD,KAAO,IAAIC,IAJnB5jD,KAAK0jD,SAAWA,EAMpBlkD,QAAQid,GACJ,IAAI1a,EAAe,GACnB,IAAK,IAAIuB,KAAMmZ,EAAK,CAChB,GAAW,OAAPnZ,EAAa,SACjB,IAAImE,EAAOzH,KAAK2jD,KAAK15C,IAAI3G,QACZ/B,IAATkG,IACA1F,EAAIyD,KAAKlC,GACTmE,EAAO,CAACnE,GAAGA,GACXtD,KAAK2jD,KAAKt9C,IAAI/C,EAAImE,IAG1BzH,KAAK6jD,OAAO9hD,GAGhBvC,IAAI8D,GACA,QAAW/B,IAAP+B,GAA2B,OAAPA,EAAa,OAAO,KAC5C,IAAImE,EAAOzH,KAAK2jD,KAAK15C,IAAI3G,GAMzB,YALa/B,IAATkG,IACAzH,KAAK2jD,KAAKt9C,IAAI/C,EAAI,CAACA,GAAGA,IACtBtD,KAAK6jD,OAAO,CAACvgD,IACbmE,EAAOzH,KAAK2jD,KAAK15C,IAAI3G,IAElBmE,EAEHjI,QAAQ8D,EAAWmE,QACVlG,IAATkG,GACAzH,KAAK2jD,KAAKt9C,IAAI/C,EAAI,MAClBtD,KAAK+B,IAAIyD,KAAK,CAAClC,GAAIA,MAGnBtD,KAAK2jD,KAAKt9C,IAAI/C,EAAImE,GAClBzH,KAAK+B,IAAIyD,KAAKiC,IAEdzH,KAAK+B,IAAIyE,OAASxG,KAAK0jD,WACvBj8C,EAAOzH,KAAK+B,IAAIsmB,QAChBroB,KAAK2jD,KAAKr7B,OAAO7gB,EAAKnE,KAGhB9D,OAAOid,2CACjB,IAAIza,QAAchC,KAAK8jD,SAASrnC,GAChC,QAAclb,IAAVS,EACA,IAAK,IAAIsB,KAAMmZ,EAAK,CAChB,GAAW,OAAPnZ,EAAa,SACjB,IAAImE,QAAazH,KAAK+jD,QAAQzgD,GAC9BtD,KAAKmb,QAAQ7X,EAAImE,QAIrB,IAAK,IAAInE,KAAMmZ,EAAK,CAChB,IAAIhV,EAAOzF,EAAMgG,KAAKC,GAAKA,EAAE3E,KAAOA,GACpCtD,KAAKmb,QAAQ7X,EAAImE,qUApDjBuI,CAAA,CAAXiU,EAAA,09CCEL,IAAa+/B,EAAb,cAA+Bz/C,EAAA,UAE3B/E,YAAYgF,GACR3E,MAAM2E,GACNxE,KAAK2jC,SAAW,IAAIsgB,EAAA,EAASjkD,KAAKwE,OAEtChF,qBACIQ,KAAK2jC,SAAS2F,cAActpC,KAAKwE,MAAM+8B,YAE3C/hC,SAGAA,SACI,IAAIkG,UAACA,EAASoQ,SAAEA,EAAQyrB,WAAEA,GAAcvhC,KAAKwE,MAC7C,OAAOD,EAAA,qBAAKmB,UAAWA,QAEFnE,IAAbuU,EACI9V,KAAK2jC,SAAS1qB,SACd1U,EAAA,sBAAM/D,SAAUR,KAAK2jC,SAASnjC,UAAWsV,MAlBhDkuC,uUAASh0C,CAAA,CADrBY,EAAA,GACYozC,iCCdbpmD,EAAAE,EAAAC,EAAA,sBAAAmmD,IAAA,IAAA3/C,EAAA3G,EAAA,GAAAumD,EAAAvmD,EAAA,GAAAwmD,EAAAxmD,EAAAolB,EAAAmhC,GAAAE,EAAAzmD,EAAA,GAAA6Z,EAAA7Z,EAAAolB,EAAAqhC,GAAAC,EAAA1mD,EAAA,IAmCO,MAAMsmD,UAAkB3/C,EAAA,UAI3B/E,YAAYgF,GACR3E,MAAM2E,GAJFxE,KAAAS,OAAc,GACdT,KAAAukD,UAAwB,GAI5BvkD,KAAKiG,MAAQ,CACTu+C,aAASjjD,EACTgjD,UAAW,IAEfvkD,KAAKykD,OAASzkD,KAAKykD,OAAO3+C,KAAK9F,MAC/BA,KAAK0kD,OAAS1kD,KAAK0kD,OAAO5+C,KAAK9F,MAG3BR,QAAQmlD,GACZ,IAGI1f,EAAaL,EAHb70B,EAAO/P,KAAKwE,MAAMogD,MAAMD,GAC5B,QAAapjD,IAATwO,EAAoB,YACHxO,IAAjBvB,KAAKwkD,SAAuBxkD,KAAKukD,UAAU/+C,KAAKxF,KAAKwkD,SAErDxkD,KAAKukD,UAAU/9C,OAAS,IACxBy+B,EAAc1gC,EAAA,cAACsgD,EAAY,CAACC,OAAO,OAAOriC,KAAK,uBAC/CmiB,EAAU5kC,KAAKykD,QAEnB,IAAIh/C,OAACA,EAAMsR,OAAEA,GAAU/W,KAAKwE,MACxBugD,OAA2BxjD,IAAdwO,EAAKskB,KAClB,CAACywB,OAAQ,eAAgBriC,KAAMziB,KAAKwE,MAAMwgC,cAAgB,gBAC1D,CAAC7I,OAAQ,cAAe1Z,KAAM,sBAC9BuiC,EAAY,CACZ9S,SAAUniC,EAAKmiC,SACflN,aAAczgC,EAAA,cAACsgD,EAAY/kD,OAAA+I,OAAA,GAAKk8C,IAChCvkD,SAAUR,KAAK0kD,OACfzf,YAAaA,EACbL,QAASA,GAEH5kC,KAAKukD,UAAU/9C,OACzBxG,KAAKwkD,QAAU,CACXG,SAAUA,EACV50C,KAAMA,EACNvL,MAAOwgD,GAEXhlD,KAAK4E,SAAS,CACV4/C,QAASxkD,KAAKwkD,QACdD,UAAWvkD,KAAKukD,YAGxB/kD,qBACIQ,KAAKilD,QAAQjlD,KAAKwE,MAAMkzB,OAEpBl4B,OAAOiB,GACX2jD,EAAAzxC,EAAE9J,OAAO7I,KAAKS,OAAQA,GACtBT,KAAKwkD,QAAUxkD,KAAKukD,UAAU3+C,MAC9B5F,KAAK4E,SAAS,CACV4/C,QAASxkD,KAAKwkD,QACdD,UAAWvkD,KAAKukD,YAGhB/kD,OAAOiB,GACX2jD,EAAAzxC,EAAE9J,OAAO7I,KAAKS,OAAQA,GAEtB,IAIIykD,GAJA7wB,KAACA,GAAQr0B,KAAKwkD,QAAQz0C,KAC1B,QAAaxO,IAAT8yB,EACA,OAAOr0B,KAAKwE,MAAMhE,SAASR,KAAKS,QAIhCykD,EADgB,kBAAT7wB,EACQA,EAGAA,EAAKr0B,KAAKS,QAE7BT,KAAKilD,QAAQC,GAEjB1lD,SACI,IAAIkG,UAACA,EAASD,OAAEA,EAAMsR,OAAEA,GAAU/W,KAAKwE,OACnCggD,QAACA,EAAOD,UAAEA,GAAavkD,KAAKiG,OAC5B0+C,SAACA,EAAQ50C,KAAEA,GAAQy0C,EAEnBW,EAAMZ,EAAU/9C,OAAS,EAC7B,OAAOjC,EAAA,qBAAKmB,UAAWA,GACnBnB,EAAA,yBACKkB,GAAUA,EAAOsK,EAAMo1C,GACxB5gD,EAAA,cAAC+/C,EAAA,UAASxkD,OAAA+I,OAAA,CAACvB,IAAKq9C,EAAUpjB,WAAYvhC,KAAKS,QAAY+jD,EAAQhgD,QAC9DuS,GAAUA,EAAOhH,EAAMo1C,MAMxC,MAAMN,EAAgBrgD,IAClB,IACI4gD,EAAOC,GADPP,OAACA,EAAMriC,KAAEA,EAAI0Z,OAAEA,GAAU33B,EAI7B,YAFejD,IAAXujD,IAAsBM,EAAQ7gD,EAAA,mBAAGmB,UAAW+R,IAAU,KAAM,MAAQqtC,WACzDvjD,IAAX46B,IAAsBkpB,EAAQ9gD,EAAA,mBAAGmB,UAAW+R,IAAU,KAAM,MAAQ0kB,MACjE53B,EAAA,cAACA,EAAA,SAAc,KAAE6gD,MAAQ5gD,EAAMie,SAAO4iC,oGC5H1C,MAAetrB,GAOf,MAAMurB,UAAmBvrB,EAE5Bv6B,YAAY+lD,GACR1lD,QACAG,KAAKulD,KAAOA,EAEhB/lD,MAAMy6B,EAAe5hB,GACjB,IAAIxX,EAAMb,KAAKulD,KAAKltC,GACpB,QAAY9W,IAARV,EACJ,cAAeA,GACX,IAAK,YAAa,OAClB,IAAK,SAAoC,YAA1Bo5B,EAAKz0B,KAAK3E,GACzB,QAA4B,YAAnBo5B,EAAKz0B,QAAQ3E,KAK3B,MAAe2kD,UAAuBzrB,EAEzCv6B,YAAYI,GACRC,QACAG,KAAKJ,IAAMA,GAIZ,MAAMo6B,UAAqBwrB,EAC9BhmD,MAAMy6B,EAAe5hB,GACjB,cAAeA,GACX,QACA,IAAK,UAAW,OAChB,IAAK,SACD,GAAc,OAAVA,EAAgB,OACpB,MACJ,IAAK,SACD,GAAKA,EAAiBqY,OAAOlqB,OAAS,EAAG,OACzC,MACJ,IAAK,SACD,GAA0B0zB,MAArB7hB,EAA0B,OAC/B,MACJ,IAAK,aAGT4hB,EAAKz0B,KAAKxF,KAAKJ,IAAIm7B,WAIpB,MAAM0qB,UAAgBD,EAKzBhmD,YAAYI,EAAc46B,EAAcG,GACpC96B,MAAMD,GACNI,KAAK0lD,OAAS5qC,EAAAnI,EAAE6rC,SAAS5+C,EAAI46B,KAC7Bx6B,KAAK2lD,OAAS7qC,EAAAnI,EAAE6rC,SAAS5+C,EAAI+6B,KAC7B36B,KAAKw6B,IAAMA,EACXx6B,KAAK26B,IAAMA,EAEfn7B,MAAMy6B,EAAe5hB,GACjB,QAAc9W,IAAV8W,GAAiC,OAAVA,EAAgB,OAC3C,IAAI2K,EAAIzX,OAAO8M,GACL6hB,MAANlX,EACAiX,EAAKz0B,KAAKxF,KAAKJ,IAAIqoC,QAGnBjoC,KAAK4lD,UAAU3rB,EAAMjX,GAInBxjB,UAAUy6B,EAAe5hB,QACd9W,IAAbvB,KAAKw6B,KAAqBjvB,OAAO8M,GAASrY,KAAKw6B,KAC/CP,EAAKz0B,KAAKxF,KAAK0lD,OAAO,CAAClrB,IAAIx6B,KAAKw6B,YAEnBj5B,IAAbvB,KAAK26B,KAAqBpvB,OAAO8M,GAASrY,KAAK26B,KAC/CV,EAAKz0B,KAAKxF,KAAK2lD,OAAO,CAAChrB,IAAI36B,KAAK26B,QAKrC,MAAMP,UAAgBqrB,EACfjmD,UAAUy6B,EAAejX,GAC/BnjB,MAAM+lD,UAAU3rB,EAAMjX,IACM,IAAxBzX,OAAO+uB,UAAUtX,IACjBiX,EAAKz0B,KAAKxF,KAAKJ,IAAIimD,6VCpFxB,MAAeC,EAiBlBtmD,YAAYumD,EAAiBlzB,EAAuBmzB,EAAuBlwC,GAPrD9V,KAAAk7B,OAAmB,GACnBl7B,KAAAimD,cAA0B,GAiHtCjmD,KAAAkmD,cAAgB,CAACj0C,IACvBjS,KAAKmmD,YAAYl0C,EAAIuD,OAAO6C,OAAO,KAoCvCrY,KAAAomD,UAAYtmD,OAAA2Y,EAAA,EAAA3Y,CAAS,KACjB,IAAqB,IAAjBE,KAAKqmD,QAAmB,OAAO,KACnC,IAAI3kD,KAACA,EAAI4kD,OAAEA,GAAUtmD,KAAK+lD,QAC1B,IAAe,IAAXO,EAAiB,OAAOtmD,KAAKiZ,SACjC,IAAI7Y,EAAYJ,KAAKI,MAIrB,OAHiC,IAA7BJ,KAAK6yB,WAAWkI,WAAiD,IAA5Br5B,EAAK8C,MAAM+hD,cAClC,OAAVnmD,IAAgBA,EAAQwY,EAAA,cAAAA,EAAA,cAAGxY,SAAYwY,EAAA,sBAAMlT,UAAU,eAAa,OAErEhE,EAAK8kD,eAAepmD,EAAOJ,KAAKiZ,YAvJvCjZ,KAAK+lD,QAAUA,EACf,IAAI7lD,KAACA,GAAQ2yB,EAMb,GALA7yB,KAAKE,KAAOA,EACZF,KAAK6yB,WAAaA,EAClB7yB,KAAKgmD,WAAaA,EAClBhmD,KAAK8V,SAAWA,EAChB9V,KAAKL,GAAKomD,EAAQU,UAAUvmD,QACZqB,IAAZvB,KAAKL,GACLK,KAAKs8B,UAAW,EAChBt8B,KAAK65B,UAAW,EAChB75B,KAAKqmD,SAAU,MAEd,CACD,IAAI/pB,SAACA,EAAQzC,SAAEA,EAAQwsB,QAAEA,GAAWrmD,KAAKL,GACzCK,KAAKs8B,UAAyB,IAAbA,EACjBt8B,KAAK65B,UAAyB,IAAbA,EACjB75B,KAAKqmD,WAAwB,IAAZA,GAErBrmD,KAAKqY,MAAQrY,KAAKokC,aAAgB2hB,EAAQ/iD,SAAS9C,GACnDF,KAAK6wB,OAzBCgT,eAAkC,OAAQ7jC,KAAKk7B,OAAO10B,OAASxG,KAAKimD,cAAcz/C,OAAQ,EA4B1FhH,OAMN,GALAQ,KAAKkzB,MAAQ,IACoB,IAA7BlzB,KAAK6yB,WAAWkI,UAChB/6B,KAAKkzB,MAAM1tB,KAAK,IAAIw0B,EAAah6B,KAAK+lD,QAAQrkD,KAAK9B,MAEvDI,KAAK86B,kBACWv5B,IAAZvB,KAAKL,GAAkB,OAC3B,IAAIuzB,MAACA,GAASlzB,KAAKL,GACnB,QAAc4B,IAAV2xB,EACJ,IAA6B,IAAzBK,MAAMC,QAAQN,GAIlB,IAAK,IAAII,KAAQJ,EACblzB,KAAKkzB,MAAM1tB,KAAK,IAAI8/C,EAAWhyB,SAJ/BtzB,KAAKkzB,MAAM1tB,KAAK,IAAI8/C,EAAWpyB,IAQ7B1zB,cAGVA,aACI,IAAIy6B,EAAgB,GACpB,IAAK,IAAIpT,KAAK7mB,KAAKkzB,MAAOrM,EAAE4T,MAAMR,EAAMj6B,KAAKqY,OACzB,IAAhB4hB,EAAKzzB,OACLxG,KAAK+lD,QAAQW,kBAAkB1mD,OAG/BA,KAAK+lD,QAAQY,eAAe3mD,MAC5BA,KAAKk7B,OAAO11B,QAAQy0B,IAIlBL,WACN,OAA6B,IAAtB55B,KAAKk7B,OAAO10B,OAGvBhH,SAASqH,QACOtF,IAARsF,IACe,kBAARA,EAAkB7G,KAAKk7B,OAAO11B,KAAKqB,GACzC7G,KAAKk7B,OAAO11B,QAAQqB,IAG7BrH,gBAAgBqH,QACAtF,IAARsF,IACe,kBAARA,EAAkB7G,KAAKimD,cAAczgD,KAAKqB,GAChD7G,KAAKimD,cAAczgD,QAAQqB,IAGpCrH,aACIQ,KAAKk7B,OAAOvW,OAAO,GAGvBnlB,oBACIQ,KAAKimD,cAActhC,OAAO,GAGpBnlB,MAAM6Y,GAAgB,OAAOA,EAE7B7Y,gBAAgB6Y,IAChB7Y,aAAa6Y,IACK,IAApBrY,KAAK4mD,aACT5mD,KAAK+lD,QAAQc,SAAS7mD,KAAKE,MAAQF,KAAKqY,MAAQrY,KAAKua,MAAMlC,IAG/D7Y,SAAS6Y,IACmB,IAApBrY,KAAK4mD,YAGT5mD,KAAKmmD,YAAY9tC,GAAO,GAG5B7Y,WACI,OAAOQ,KAAK+lD,QAAQ/iD,SAAShD,KAAKE,MAGtCV,cAAuB,OAAOQ,KAAKs8B,SACnC98B,cAAuB,OAAOQ,KAAK65B,SACnCr6B,aAAsB,OAAOQ,KAAKqmD,QAClC7mD,YAAY6Y,GAAgBrY,KAAKs8B,SAAWjkB,EAC5C7Y,YAAY6Y,GAAgBrY,KAAK65B,SAAWxhB,EAC5C7Y,WAAW6Y,GAAgBrY,KAAKqmD,QAAUhuC,EAOhC7Y,YAAY4zB,EAAe0zB,GACjC,IACIC,EACAC,EAFAC,EAAOjnD,KAAKqY,WAGA9W,IAAZvB,KAAKL,KACLonD,EAAa/mD,KAAKL,GAAGonD,WACrBC,EAAYhnD,KAAKL,GAAGqnD,WAExB,IAAIE,GAAc,OACC3lD,IAAfwlD,IACA/mD,KAAK4mD,YAAa,EAClBM,EAAcH,EAAW/mD,KAAK+lD,QAAS/lD,KAAKqY,MAAO4uC,GACnDjnD,KAAK4mD,YAAa,IAEF,IAAhBM,IACAlnD,KAAKmnD,aAAa/zB,IACE,IAAhB0zB,GAAsB9mD,KAAKonD,gBAAgBh0B,QAC7B7xB,IAAdylD,IACAhnD,KAAK4mD,YAAa,EAClBI,EAAUhnD,KAAK+lD,QAAS/lD,KAAKqY,MAAO4uC,GACpCjnD,KAAK4mD,YAAa,IAK9BlhD,gBACI,IAAI2hD,EAEJ,OAD4B,IAAxBrnD,KAAK+lD,QAAQO,SAAkBe,EAAa,gBACzCvoC,IAAWuoC,EAAYrnD,KAAK+lD,QAAQrkD,KAAK4lD,WAAYtnD,KAAKL,IAAMK,KAAKL,GAAG+F,WAgBnFtF,YACI,IAAIA,EACJ,QAAgBmB,IAAZvB,KAAKL,GACLS,EAAQJ,KAAKE,SAEZ,CACD,IAAIqnD,EAAUvnD,KAAKL,GAAGS,MACAA,EAAN,OAAZmnD,EAA0B,KACjBA,GAAWvnD,KAAKE,KAEjC,OAAOE,EAGDZ,gBACN,QAAsB+B,IAAlBvB,KAAK8V,SACL,OAAO8C,EAAA,cAAAA,EAAA,cAAG5Y,KAAK8V,UAEnB,QAAgBvU,IAAZvB,KAAKL,GAAkB,OAC3B,IAAI6nD,QAACA,GAAWxnD,KAAKL,GACrB,MAAuB,oBAAZ6nD,EAA+BA,EAAQxnD,KAAKqY,OAChDmvC,EAGDhoD,eACN,IAAIioD,EAAqB,IAAIznD,KAAKk7B,UAAWl7B,KAAKimD,eAClD,GAAyB,IAArBwB,EAAUjhD,OAAc,OAAO,KACnC,IAAI8/C,OAACA,GAAUtmD,KAAK+lD,QAChB2B,GAAiB,IAAXpB,EAAiB,OAAS,MACpC,OAAOmB,EAAUx+C,IAAIpC,GAAO+R,EAAA,cAAoB8uC,EAC5C,CACIpgD,IAAKT,EACLnB,UAAW,wCAEfkT,EAAA,cAAAA,EAAA,cAAEA,EAAA,mBAAGlT,UAAU,qCAAqCmB,MAnMhDmJ,EAAA,CAAX6X,EAAA,gCACW7X,EAAA,CAAX6X,EAAA,uCACS7X,EAAA,CAAT6X,EAAA,gCAGW7X,EAAA,CAAX6X,EAAA,iCA0DS7X,EAAA,CAAT6X,EAAA,qSC9EE,MAAM8/B,UAAmB7B,EAAhCtmD,kCACcQ,KAAAq8B,UAAY,OASZr8B,KAAA4nD,UAAY,CAAO31C,GAA6CrP,EAAA5C,UAAA,qBAEtE,GADAA,KAAK6nD,kBAAkB51C,GACH,KAAhBA,EAAI61C,QAAgB,OACxB,IAAIC,QAACA,GAAW/nD,KAAK+lD,QAAQrkD,KAAK8C,MAClC,QAAgBjD,IAAZwmD,EAAuB,OAE3B/nD,KAAKmmD,YAAYl0C,EAAIkR,cAAc9K,OAAO,GAI1CrY,KAAK27B,MAAMqsB,OAEX,IAAInnD,QAAYknD,EAAQ/nD,KAAKE,KAAMF,KAAK+lD,cAC5BxkD,IAARV,GACAb,KAAK+lD,QAAQnxB,SAAS50B,KAAKE,KAAMW,MAnB/BrB,gBAAgB6Y,GACH,OAAfrY,KAAK27B,QACT37B,KAAK27B,MAAMtjB,MAAQA,GAEvB8b,kBAA6B,OAAQn0B,KAAKL,IAAMK,KAAKL,GAAGw0B,aAAgBn0B,KAAKE,KAmBnEV,kBAAkByS,IAGlBzS,OAAOyS,GACbjS,KAAKkmD,cAAcj0C,GACnBjS,KAAKi7B,aACLj7B,KAAK+lD,QAAQkC,oBAEPzoD,QAAQyS,GACdjS,KAAK2E,aACL3E,KAAK+lD,QAAQW,kBAAkB1mD,MAC/BA,KAAK+lD,QAAQ1hB,cAEP7kC,SAASyS,IAGnBzS,YAAY6Y,GACW,OAAfrY,KAAK27B,QACT37B,KAAK27B,MAAMW,SAAWt8B,KAAKs8B,SAAWjkB,GAE1C7Y,YAAY6Y,GACW,OAAfrY,KAAK27B,QACT37B,KAAK27B,MAAM9B,SAAW75B,KAAK65B,SAAWxhB,GAG1C7Y,SACI,IAAI0oD,EAAgBloD,KAAKkoD,gBACzB,QAAsB3mD,IAAlB2mD,EAA6B,OAAOA,EACxC,IAAI1wC,EAAK,GAST,OANsB,IAAlBxX,KAAK6jC,SACLrsB,EAAG,eAAgB,EAGnBA,EAAG,kBAAgD,IAA7BxX,KAAK6yB,WAAWkI,SAEnCniB,EAAA,cAAAA,EAAA,cAAEA,EAAA,uBAAO8iB,IAAKC,GAAO37B,KAAK27B,MAAQA,EACrCj2B,UAAWoZ,IAAW9e,KAAK0F,UAAW8R,GACtCjP,KAAMvI,KAAKq8B,UACX+H,aAAcpkC,KAAKqY,MACnB2jB,SAAW/pB,GAAgCjS,KAAKg8B,SAAS/pB,GACzDkiB,YAAan0B,KAAKm0B,YAClBmI,SAAUt8B,KAAKs8B,SACfzC,SAAU75B,KAAK65B,SACf+tB,UAAa5nD,KAAK4nD,UAClB/rB,QAAY5pB,GAA+BjS,KAAK67B,QAAQ5pB,GACxD6pB,OAAS7pB,GAA+BjS,KAAK87B,OAAO7pB,GACpDsqB,UAAYv8B,KAAK6yB,WAA4B0J,YAC5Cv8B,KAAKmoD,iBC7EX,MAAMC,UAAqBT,EAAlCnoD,kCACcQ,KAAAq8B,UAAY,SAGZ78B,aACNK,MAAMi7B,aACN,IAAIl7B,EAAMI,KAAK+lD,QAAQrkD,KAAK9B,KACxB46B,IAACA,EAAGG,IAAEA,GAAO36B,KAAK6yB,WACtB7yB,KAAKkzB,MAAM1tB,KACkB,YAAzBxF,KAAK6yB,WAAWtqB,KACZ,IAAIk9C,EAAQ7lD,EAAK46B,EAAKG,GACtB,IAAIP,EAAQx6B,EAAK46B,EAAKG,IAYxBn7B,MAAM6Y,GACZ,QAAc9W,IAAV8W,GAAiC,OAAVA,EAC3B,OAAO9M,OAAO8M,IC3Bf,MAAMgwC,UAAqBD,EAAlC5oD,kCACcQ,KAAAq8B,UAAY,SAEZ78B,WAAW8H,GACjB,OAAa,KAANA,GAAkB,IAANA,GAAiB,KAANA,GAAkB,KAANA,GACnCA,GAAK,IAAMA,GAAK,IAChBA,GAAK,IAAMA,GAAK,KACV,MAANA,GAAmB,MAANA,EAGd9H,kBAAkByS,GACxB,IAAI3K,EAAM2K,EAAI61C,QACdxnC,MAAMgoC,YAActoD,KAAKuoD,WAAWjhD,ICZrC,MAAMkhD,UAAmBb,EAAhCnoD,kCACcQ,KAAAq8B,UAAY,QCCnB,MAAMosB,UAAuB3C,EAApCtmD,kCA0BcQ,KAAAkmD,cAAgB,CAACj0C,IACvBjS,KAAKmnD,cAAoC,IAAvBl1C,EAAIuD,OAAO8yB,QAAkBtoC,KAAKooC,UAAYpoC,KAAKqoC,cAG/DroC,KAAA+E,QAAU,MAChB/E,KAAK+lD,QAAQ1hB,gBAzBP7kC,OAEN,GADAK,MAAMgxB,YACUtvB,IAAZvB,KAAKL,GAAkB,CACvB,IAAIyoC,UAACA,EAASC,WAAEA,GAAcroC,KAAKL,GACNK,KAAKooC,eAAhB7mC,IAAd6mC,GACkBA,EACQpoC,KAAKqoC,gBAAhB9mC,IAAf8mC,GACmBA,OAGvBroC,KAAKooC,WAAY,EACjBpoC,KAAKqoC,YAAa,EAGhB7oC,gBAAgB6Y,GACtBrY,KAAK27B,MAAM2M,QAAUjwB,IAAUrY,KAAKooC,UAExC5oC,YAAY6Y,GAAgBrY,KAAK27B,MAAMW,SAAWt8B,KAAKs8B,SAAWjkB,EAClE7Y,YAAY6Y,GAAgBrY,KAAK27B,MAAM9B,SAAW75B,KAAK65B,SAAWxhB,EAUlE7Y,SACI,IAAIgY,EAAKsH,IAAW9e,KAAK0F,UAAW,yBAChCi2B,EAAQ/iB,EAAA,uBACR8iB,IAAMC,GAAQ37B,KAAK27B,MAAQA,EAC3Bj2B,UAAW,oBACX6C,KAAK,WACLmgD,eAAgB1oD,KAAKokC,aACrBpI,SAAUh8B,KAAKkmD,cACfnhD,QAAS/E,KAAK+E,UAClB,OAA4B,IAAxB/E,KAAK+lD,QAAQO,OACN1tC,EAAA,uBAAOlT,UAAW8R,GACpBmkB,MAAS37B,KAAKL,IAAIK,KAAKL,GAAGS,OAAUJ,KAAKE,MAIvC0Y,EAAA,qBAAKlT,UAAW8R,GACnBoB,EAAA,uBAAOlT,UAAU,kDAAkDi2B,KCjD5E,MAAMgtB,UAAqB7C,EAAlCtmD,kCAMcQ,KAAAkmD,cAAgB,CAACj0C,IACvBjS,KAAKmnD,aAAal1C,EAAIuD,OAAO6C,SAFvB7Y,gBAAgB6Y,GAAYrY,KAAKsC,OAAO+V,MAAQA,EAK1D7Y,YAAY6Y,GAAgBrY,KAAKsC,OAAOu3B,SAAW75B,KAAKs8B,UAAYjkB,EACpE7Y,YAAY6Y,GAAgBrY,KAAKsC,OAAOu3B,SAAW75B,KAAK65B,SAAWxhB,EAEnE7Y,SACI,IAAsB,IAAlBQ,KAAKs8B,SAAmB,CACxB,IAAIssB,EAAS5oD,KAAKL,GAAGkuB,KAAK7lB,KAAKC,GAAKA,EAAEoQ,QAAUrY,KAAKqY,OACjDjB,OAAoB7V,IAAXqnD,EAAuB,QAAUA,EAAOxxC,MACrD,OAAOwB,EAAA,sBAAMlT,UAAU,yBAAyB0R,GAEpD,OAAOwB,EAAA,wBACH8iB,IAAMp5B,GAAStC,KAAKsC,OAASA,EAC7BoD,UAAWoZ,IAAW9e,KAAK0F,UAAW,gBACtC0+B,aAAcpkC,KAAKokC,aACnBpI,SAAUh8B,KAAKkmD,eACdlmD,KAAKL,GAAGkuB,KAAK5kB,IAAI,CAAChB,EAAEiB,KACjB,IAAIkO,MAACA,EAAKiB,MAAEA,GAASpQ,EAIrB,OAAO2Q,EAAA,wBAAQlT,eAHX8R,EAG0BlQ,IAAK4B,EAAOmP,MAAOA,GAAQjB,GAASiB,qUA1BlEwwC,CAAA,CAAXhhC,EAAA,kCCDL,MAAMihC,EAAiC,CAACC,OAAQ,iRCFzC,MAAMC,UAAiBlD,EAA9BtmD,kCAMcQ,KAAA+E,QAAU,KAAYkkD,EAAAjpD,UAAA,qBAC5B,IAAIkpD,EAASlpD,KAAKL,IAAMK,KAAKL,GAAGupD,OAChC,QAAe3nD,IAAX2nD,EAEA,YADA//B,MAAM,sBAGV,IAAI7lB,QAAW4lD,EAAOlpD,KAAK+lD,QAAS/lD,KAAKE,KAAMF,KAAKqY,OACpDrY,KAAKmnD,aAAa7jD,GAClBtD,KAAK2E,aACL3E,KAAKmpD,oBACLnpD,KAAKi7B,gBAbTz7B,YAAY6Y,GAAgBrY,KAAKs8B,SAAWjkB,EAC5C7Y,YAAY6Y,GAAgBrY,KAAK65B,SAAWxhB,EAe5C7Y,SACI,IAAI20B,EAAgCqzB,OACpBjmD,IAAZvB,KAAKL,KACLw0B,EAAcn0B,KAAKL,GAAGw0B,YACtBqzB,EAAUxnD,KAAKL,GAAG6nD,SAEtB,IAMIhlD,EANAgV,EAAK,CACL+tB,gBAAgB,EAChB6jB,iBAA8C,IAA7BppD,KAAK6yB,WAAWkI,SACjCsuB,kBAAkB,EAClB5jB,aAAczlC,KAAK6jC,UAgBvB,YAbmBtiC,IAAfvB,KAAKqY,OAAsC,OAAfrY,KAAKqY,OACjC7V,EAAU2xB,GAAe,cACzB3c,EAAG,eAAgB,GAGnBhV,OADiBjB,IAAZimD,EACK5uC,EAAA,cAAAA,EAAA,cAAG5Y,KAAKqY,OAEM,oBAAZmvC,EACFA,EAAQxnD,KAAKqY,OAGbmvC,EAEP5uC,EAAA,cAAAA,EAAA,cACHA,EAAA,qBAAKlT,UAAWoZ,IAAWtH,GAAKzS,QAAS/E,KAAK+E,SAAUvC,GACvDxC,KAAKmoD,+UA7CFmB,CAAA,CAAXzhC,EAAA,+BCJE,MAAM0hC,EAAU,CAACC,EAAmBC,EAAeC,IAC/C9wC,EAAA,sBAAMlT,UAAU,8BAA2B8jD,oBAAyBE,GAAa,IAAI5tC,KAAK,wBAAsB2tC,iRCCpH,MAAME,UAAqB7D,EAAlCtmD,kCAGcQ,KAAA+E,QAAU,KAAY6kD,EAAA5pD,UAAA,qBAC5BA,KAAK2E,aACL3E,KAAKmpD,oBACL,IAAIjpD,KAACA,EAAIqI,KAAEA,GAAQvI,KAAK6yB,WACX,WAATtqB,UACMvI,KAAK+lD,QAAQ92B,OAAO/uB,OAc1BF,KAAA6pD,eAAiB/pD,OAAA2Y,EAAA,EAAA3Y,CAAS,KAC9B,IACI0nD,EAAqBhwC,EAAWsiB,GADhC55B,KAACA,EAAIqI,KAAEA,GAAQvI,KAAK6yB,WAExB,QAAgBtxB,IAAZvB,KAAKL,GAAkB,CACvB,IAAKmqD,OAAOC,GAAc/pD,KAAKL,GAC/B,GAAmB,WAAfoqD,EAAyB,OAAOR,EAAQhhD,EAAMwhD,EAAY,CAAC,WAC/DvC,EAAUxnD,KAAKL,GAAG6nD,QAClBhwC,EAAKxX,KAAKL,GAAG+F,UACbo0B,EAAU95B,KAAKL,GAAGS,MAEtB,IAGIoC,GAHAd,KAACA,EAAImiC,SAAEA,GAAY7jC,KAAK+lD,QACxBA,EAAU/lD,KAAK+lD,QACflsB,EAAkB,WAAPtxB,GAAmBs7B,EAEDrhC,OAAXjB,IAAlBvB,KAAK8V,SAAkC9V,KAAK8V,SACpB,oBAAZ0xC,EAAkCA,SAC7BjmD,IAAZimD,EAAiCA,EAC3B1tB,EACf,IAAI8E,EAAShmB,EAAA,wBACTlT,UAAW8R,EACXjP,KAAK,SACLsxB,SAAUA,EACV90B,QAAS/E,KAAK+E,SACbvC,GAAWtC,GAEhB,OAAuB,IAAnB6lD,EAAQO,OAAwB1tC,EAAA,cAAAA,EAAA,cAAGgmB,EAAQ5+B,KAAKmoD,gBAC7CvvC,EAAA,qBAAKlT,UAAWhE,EAAKsoD,aACxBpxC,EAAA,yBAAM5Y,KAAKmoD,gBACVvpB,KAITx+B,YAA8B,OAAO,KAErCZ,SACI,OAAOoZ,EAAA,cAAC5Y,KAAK6pD,eAAc,wlBCrD5B,MAAeI,EAYlBzqD,YAAYkC,EAAYwoD,EAAoBh4C,EAAWo0C,EAAiB6D,GAMpE,GAZKnqD,KAAAoqD,QAAmC,GAGhCpqD,KAAAk7B,OAAmB,GACnBl7B,KAAAqqD,aAAwB,GAsLpCrqD,KAAAmoD,aAAeroD,OAAA2Y,EAAA,EAAA3Y,CAAS,KACpB,IAAIo7B,OAACA,GAAUl7B,KACf,OAAsB,IAAlBk7B,EAAO10B,OAAqB,KACzBoS,EAAA,cAAAA,EAAA,cACFsiB,EAAOjyB,IAAIpC,GAAO+R,EAAA,sBAAMtR,IAAKT,EAAKnB,UAAU,sCACzCkT,EAAA,mBAAGlT,UAAU,qCAAqCmB,OAxL1D7G,KAAK0B,KAAOA,EACZ1B,KAAKkqD,SAAWA,EAChBlqD,KAAK6mD,SAAW30C,EAChBlS,KAAKsmD,OAASA,EACdtmD,KAAKmqD,MAAQA,OACI5oD,IAAb2oD,EAAwB,CACxB,IAAIh3B,MAACA,GAASg3B,OACA3oD,IAAV2xB,IACAlzB,KAAKkzB,MAAQ,IACgB,IAAzBK,MAAMC,QAAQN,GACdlzB,KAAKkzB,MAAM1tB,KAAK0tB,GAEhBlzB,KAAKkzB,MAAM1tB,QAAQ0tB,KAKnC1zB,kBAAkBsmB,QACWvkB,IAArBvB,KAAKsqD,cAA2BtqD,KAAKsqD,YAAc,IACvD,IAAIC,EAAiBvqD,KAAKsqD,YAAYpqD,MAEtC,YADuBqB,IAAnBgpD,IAA8BvqD,KAAKsqD,YAAYpqD,MAAQqqD,EAAiB,IACrEA,EAMXzkC,eACAtmB,SAASgrD,GAAsB,OAAOxqD,KAAK6mD,SAAS2D,GACpDhrD,SAASgrD,EAAiBnyC,GACtBrY,KAAK6mD,SAAS2D,GAAYnyC,EAC1B,IAAIyxC,EAAS9pD,KAAKoqD,QAAQI,QACXjpD,IAAXuoD,GAAsBA,EAAO7tB,SAAS5jB,GAE9C7Y,YAAYgrD,GACR,IAAIV,EAAS9pD,KAAKoqD,QAAQI,GAC1B,QAAejpD,IAAXuoD,EAAsB,OAAOA,EAAOW,cAG5CjrD,YAAYgrD,EAAiBnyC,GACzB,IAAIyxC,EAAS9pD,KAAKoqD,QAAQI,QACXjpD,IAAXuoD,GAAsBA,EAAOY,YAAYryC,GAEjD7Y,YAAYgrD,GACR,IAAIV,EAAS9pD,KAAKoqD,QAAQI,QACXjpD,IAAXuoD,GAAsBA,EAAOa,cAGrCnrD,YAAYgrD,EAAiBnyC,GACzB,IAAIyxC,EAAS9pD,KAAKoqD,QAAQI,QACXjpD,IAAXuoD,GAAsBA,EAAOc,YAAYvyC,GAEjD7Y,WAAWgrD,GACP,IAAIV,EAAS9pD,KAAKoqD,QAAQI,QACXjpD,IAAXuoD,GAAsBA,EAAOe,aAGrCrrD,WAAWgrD,EAAiBnyC,GACxB,IAAIyxC,EAAS9pD,KAAKoqD,QAAQI,QACXjpD,IAAXuoD,GAAsBA,EAAOgB,WAAWzyC,GAG1C7Y,OAAOurD,2CAET,GADA/qD,KAAKi7B,cACiB,IAAlBj7B,KAAK6jC,SAAmB,OAC5B,IAAImnB,cAACA,GAAiBhrD,KAAK0B,KAAK8C,MAChC,QAAsBjD,IAAlBypD,EAEA,YADA7hC,gBAAgB4hC,mDAGpB,IAAIlqD,QAAYmqD,EAAcD,EAAY/qD,WAC9BuB,IAARV,GACJb,KAAK40B,SAASm2B,EAAYlqD,KAI9BrB,kBACI,IAAK,IAAIoI,KAAK5H,KAAKoqD,QACfpqD,KAAKoqD,QAAQxiD,GAAGqzB,aAEpB,QAAyB15B,IAArBvB,KAAKsqD,YACT,IAAK,IAAI1iD,KAAK5H,KAAKsqD,YAAa,CAC5B,IAAIC,EAAiBvqD,KAAKsqD,YAAY1iD,GACtC,IAAK,IAAIwa,KAAKmoC,EACVA,EAAenoC,GAAG6oC,mBAK9BzrD,oBAEI,GADAQ,KAAKqkC,mBACc9iC,IAAfvB,KAAKkzB,MAAT,CACA,IAAK,IAAII,KAAQtzB,KAAKkzB,MAAO,CACzB,IAAIryB,EAAMyyB,EAAKtzB,MACf,QAAYuB,IAARV,EACJ,IAA2B,IAAvB0yB,MAAMC,QAAQ3yB,GACdb,KAAKk7B,OAAO11B,QAAQ3E,QAEnB,GAAmB,kBAARA,EACZb,KAAKk7B,OAAO11B,KAAK3E,QAGjB,IAAK,IAAI+G,KAAK/G,EAAeb,KAAK40B,SAAShtB,EAAG/G,EAAI+G,IAG1D,QAAyBrG,IAArBvB,KAAKsqD,YACT,IAAK,IAAI1iD,KAAK5H,KAAKsqD,YAAa,CAC5B,IAAIC,EAAiBvqD,KAAKsqD,YAAY1iD,GACtC,IAAK,IAAIwa,KAAKmoC,EAAgB,CAC1B,IAAIW,EAAaX,EAAenoC,GAChC8oC,EAAW7mB,cACX6mB,EAAWjD,uBAKvBzoD,SAASgrD,EAAiB1jD,GACtB,IAAIgjD,EAAS9pD,KAAKoqD,QAAQI,QACXjpD,IAAXuoD,IACJA,EAAOqB,gBAAgBrkD,GACvB9G,KAAK2mD,eAAemD,IAGxBtqD,qBACI,IAAK,IAAIoI,KAAK5H,KAAKoqD,QAAS,CACxB,IAAIN,EAAS9pD,KAAKoqD,QAAQxiD,QACXrG,IAAXuoD,GACJA,EAAOX,qBAIf3pD,qBACI,IAAK,IAAIoI,KAAK5H,KAAKoqD,QAAS,CACxB,IAAIN,EAAS9pD,KAAKoqD,QAAQxiD,QACXrG,IAAXuoD,GACJA,EAAOnlD,cAIfnF,aACIQ,KAAKqkC,cACLrkC,KAAKorD,qBACLprD,KAAKirD,mBACiB,IAAlBjrD,KAAK6jC,UACT7jC,KAAKioD,oBAGTzoD,eAAesqD,GACD9pD,KAAKqqD,aAAavoC,UAAU7Z,GAAKA,IAAM6hD,GACvC,GAAG9pD,KAAKqqD,aAAa7kD,KAAKskD,GAExCtqD,kBAAkBsqD,GACd,IAAI79C,EAAMjM,KAAKqqD,aAAavoC,UAAU7Z,GAAKA,IAAM6hD,GAC7C79C,GAAO,GAAGjM,KAAKqqD,aAAa1lC,OAAO1Y,EAAK,GAGtCzM,gBAEN,IAAY,IADDQ,KAAKqqD,aAAa7jD,OAASxG,KAAKk7B,OAAO10B,OAAU,EAC1C,OAAO,EACzB,QAAyBjF,IAArBvB,KAAKsqD,YAA2B,OAAO,EAC3C,IAAK,IAAI1iD,KAAK5H,KAAKsqD,YAAa,CAC5B,IAAIC,EAAiBvqD,KAAKsqD,YAAY1iD,GACtC,IAAK,IAAIwa,KAAKmoC,EACV,IAAmC,IAA/BA,EAAenoC,GAAGyhB,SAAmB,OAAO,EAGxD,OAAO,EAGDA,eACN,OAAO7jC,KAAKqrD,gBAGhB7rD,cACIQ,KAAKk7B,OAAOvW,OAAO,GACnB3kB,KAAKqqD,aAAa1lC,OAAO,GACzB3kB,KAAKsrD,sBApLGC,EAAA,CAAX1jC,EAAA,gCACW0jC,EAAA,CAAX1jC,EAAA,sCA4KS0jC,EAAA,CAAT1jC,EAAA,gCAqBL,IAAI2jC,EAAoB,EACjB,MAAMC,UAAmBxB,EAO5BzqD,YAAYksD,EAAuBC,EAAsBz5C,EAAWo0C,GAChE,IAAIsF,GACA1B,SAACA,GAAYwB,EACjB,QAAiBnqD,IAAb2oD,EAAwB,CACxB,IAAIloD,MAACA,GAASkoD,OACA3oD,IAAVS,IAAqB4pD,EAAQ5pD,EAAM2pD,EAAUzrD,OAErDL,MAAM6rD,EAAchqD,KAAMkqD,EAAO15C,EAAMo0C,GAAQ,GAC/CtmD,KAAK0rD,cAAgBA,EACrB1rD,KAAK2rD,UAAYA,EACjB3rD,KAAKo3B,OAASo0B,IACdxrD,KAAKkS,KAAOA,EAEhB1S,cAAcgrD,GAA6B,OAAOxqD,KAAK2rD,UAAUE,YAAYrB,GAC7EhrD,UAAUgrD,GACN,QAAsBjpD,IAAlBvB,KAAKkqD,SAAwB,OACjC,IAAIloD,MAACA,GAAShC,KAAKkqD,SACnB,YAAc3oD,IAAVS,EACGA,EAAMwoD,QADb,EAGJ1kC,cAAsB,OAAO9lB,KAAK2rD,UAAUzrD,KAC5CV,cACIK,MAAMwkC,cACNrkC,KAAK0rD,cAAcrnB,cAGvBynB,iBAAsB,OAAO9rD,KAAK0rD,cAAcx5C,MAG7C,MAAM65C,UAAoB9B,EAC7BzqD,YAAYkC,EAAW4kD,GACnBzmD,MAAM6B,EAAMA,EAAKwoD,SAAUxoD,EAAKwQ,KAAMo0C,GAAQ,GAElDp0C,WAAgB,OAAOlS,KAAK0B,KAAKwQ,KACjC1S,cAAcgrD,GAA6B,OAAOxqD,KAAK0B,KAAKmqD,YAAYrB,GACxEhrD,UAAUgrD,GACN,IAAIN,SAACA,GAAYlqD,KAAK0B,KACtB,QAAiBH,IAAb2oD,EAAwB,OAC5B,IAAIloD,MAACA,GAASkoD,EACd,YAAc3oD,IAAVS,EACGA,EAAMwoD,QADb,GAKD,MAAMwB,EAAmBpzC,EAAA,cAA6B,IC/PhDqzC,EAAensD,OAAA2Y,EAAA,EAAA3Y,CAAS,EAChC4rD,gBAAeC,YAAW71C,eAE3B,IAMI0xC,EACA0E,EAAoBC,EAAmBC,GAPvClsD,KAACA,EAAI6B,IAAEA,GAAO4pD,EACdz5C,EAAOw5C,EAAc7E,SAAS3mD,IAC9BwB,KAACA,GAAQgqD,EACTnB,EAAiBmB,EAAcW,kBAAkBnsD,GACjDP,EAAK+rD,EAAcjF,UAAUvmD,GAC7BosD,EAAWpsD,GAGXqsD,aAACA,EAAYpjB,aAAEA,EAAYqjB,aAAEA,EAAYtC,SAAEA,GAAYxoD,EAC3D,QAAiBH,IAAb2oD,EAAwB,CACxB,IAAKgC,WAAWO,EAAgBN,UAAUO,EAAeN,WAAWO,GAAkBzC,GACnE,IAAfgC,IAAqBA,EAAaO,IACpB,IAAdN,IAAoBA,EAAYO,IACjB,IAAfN,IAAqBA,EAAaO,GAE1C,QAAWprD,IAAP5B,EAAkB,CAClB,IAAKmqD,OAAOC,EAAU3pD,MAAEA,EACpB8rD,WAAWU,EAAeT,UAAUU,EAAcT,WAAWU,EAC7DP,aAAaQ,EAAI5jB,aAAa6jB,EAAIR,aAAaS,GAC/CttD,EAQJ,QAPsB4B,IAAlBqrD,IAA6BV,EAAaU,QACzBrrD,IAAjBsrD,IAA4BV,EAAYU,QACtBtrD,IAAlBurD,IAA6BV,EAAaU,QACnCvrD,IAAPwrD,IAAkBR,EAAeQ,QAC1BxrD,IAAPyrD,IAAkB7jB,EAAe6jB,QAC1BzrD,IAAP0rD,IAAkBT,EAAeS,GACrCzF,EAAU7nD,EAAG6nD,QACM,QAAfuC,EAAsB,OAAOR,EAAQoC,EAAUpjD,KAAMwhD,EAAY,CAAC,QACtEuC,EAAWlsD,GAASksD,EAExB,IAAI50B,GAAQ,EACZ,OAAO60B,EAAaD,EAAU1zC,EAAA,cAAAA,EAAA,cACzB1G,EAAKjJ,IAAI,CAAC2d,EAAS1d,KAChB,IAAIgiD,EACA90B,EACA82B,OAAM3rD,EAGV,IAFc,IAAVm2B,EAAiBw1B,EAAMV,EACtB90B,GAAQ,OACIn2B,IAAbuU,EACAo1C,EAAa,IAAIO,EAAWC,EAAeC,EAAW/kC,GAAK,GAC3DwP,EAAaxd,EAAA,cAAAA,EAAA,cAAG9C,OAEf,CACD,IAAIq3C,SAAuB3F,EACL,aAAlB2F,GACAjC,EAAa,IAAIO,EAAWC,EAAeC,EAAW/kC,GAAK,GAC3DwP,EAAaxd,EAAA,cAAoB9Y,OAAA2Y,EAAA,EAAA3Y,CAAS0nD,GAAsC5gC,IAEzD,WAAlBumC,GACLjC,EAAa,IAAIO,EAAWC,EAAeC,EAAW/kC,GAAK,GAC3DwP,EAAaoxB,IAGb0D,EAAa,IAAIO,EAAWC,EAAeC,EAAW/kC,GAAK,GAC3DwP,EAAaxd,EAAA,cAAAA,EAAA,cACT7W,EAAIkH,IAAI,CAAChB,EAAGiB,IACD0P,EAAA,cAACA,EAAA,SAAc,CAACtR,IAAKW,EAAE/H,MACzBktD,EAAQlC,EAAYjjD,OAAG1G,OAM5C,IAGI8rD,EAAyBC,GAHzBl2B,OAACA,GAAU8zB,EAIf,GAHAX,EAAenzB,GAAU8zB,GAGN,IAAfgB,EAAqB,CACrB,IAAInnD,EAAWkN,IACX,IAAIq2B,QAACA,GAAYr2B,EAAIuD,OACrBoR,EAAI2mC,YAAcjlB,EAClB,IAAIklB,QAACA,GAAW5mC,OACArlB,IAAZisD,IAAuBA,EAAQD,YAAcjlB,GACjD4iB,EAAW7mB,eAEfgpB,EAAcz0C,EAAA,qBAAKlT,UAAU,qBACzBkT,EAAA,uBAAOrQ,KAAK,WAAWxD,QAASA,EAAS2jD,eAAgB9hC,EAAI2mC,eAGrE,IAAIE,SAA+BlsD,IAAjBqlB,EAAI8mC,aAA2C,IAAjB9mC,EAAI8mC,YACpD,IAAkB,IAAdvB,EAAoB,CACpB,IAAI9rD,EAAOotD,EAAW,UAAY,WAC9BE,EAAa,KACb,IAAmB,IAAfvB,EAAqB,CACrBxlC,EAAI8mC,YAAcD,EAClB,IAAID,QAACA,GAAW5mC,OACArlB,IAAZisD,IAAuBA,EAAQE,YAAcD,OAEhD,CACD,IAAI9lD,EAAIuK,EAAKgT,QAAQ0B,GACjBjf,GAAG,GAAGuK,EAAKyS,OAAOhd,EAAG,GAE7BujD,EAAW7mB,eAEfipB,EAAa10C,EAAA,qBAAKlT,UAAU,0BAA0BX,QAAS4oD,GAC3D/0C,EAAA,mBAAGlT,UAAWoZ,IAAW,KAAMze,EAAM,YAG7C,IAAIutD,GAA6B,IAAb1B,IAAiC,IAAZC,EACpC3pD,GAAgBoW,EAAA,0BAAUihB,SAAU4zB,GAAW70C,EAAA,qBAAKlT,UAAWoZ,IAAW,SAAU,CAAC+uC,QAAUJ,EAAWK,eAAelnC,EAAI2mC,eACzHF,EACDz0C,EAAA,qBAAKlT,WAAwB,IAAbwmD,IAAiC,IAAZC,EAAkB,mBAAmB,sBAAuB3pD,GAChG8qD,IAGJ9qD,GAAgBA,EAErB,OAAOoW,EAAA,cAACozC,EAAiB+B,SAAQ,CAACzmD,IAAK8vB,EAAQ/e,MAAO6yC,GACjDgC,EACA/jB,EAAaykB,EAAch1C,EAAA,cAAAA,EAAA,cAAEA,EAAA,cAACsyC,EAAW/C,aAAY,MAAI/xB,qSCjHnE,MAAM43B,UAAoBlI,EAAjCtmD,kCAUcQ,KAAA+E,QAAU,KAAYkpD,EAAAjuD,UAAA,qBAC5B,IAAIw4B,EAAO,IAAI01B,EAAA,EAAcluD,KAAK6yB,WAAY7yB,KAAKL,GAAIK,KAAKL,GAAGS,MAAOJ,KAAKqY,OACvExX,QAAY23B,EAAKlyB,QACT,OAARzF,IACAb,KAAKi8B,SAASp7B,GACdb,KAAKmuD,SAAWttD,SAEd23B,EAAK41B,SAOPpuD,KAAA6pD,eAAiB/pD,OAAA2Y,EAAA,EAAA3Y,CAAS,KAC9B,IAGIiF,EAHAyS,EAAK,CACL,8CAOJ,OAJKxX,KAAKs8B,UAAat8B,KAAK65B,WACxBriB,EAAGhS,KAAK,kBACRT,EAAU/E,KAAK+E,SAEZ6T,EAAA,qBAAKlT,UAAWoZ,IAAWtH,GAAKzS,QAASA,GAC5C6T,EAAA,cAACy1C,EAAA,EAAK,CAAC1+C,IAAK3P,KAAKmuD,SAAUzoD,UAAU,iBA7BnClG,OACNK,MAAMgxB,OACN7wB,KAAKmuD,SAAWnuD,KAAKqY,MAazB7Y,SACI,OAAOoZ,EAAA,cAAC5Y,KAAK6pD,eAAc,qUAlBnByE,CAAA,CAAXzmC,EAAA,kCCSL,MAAM0mC,EAAkF,CACpFjrD,GAAI,CACAomD,UAAW,CAAC,MACZI,OAAQd,GAEZvmC,KAAM,CACFinC,UAAW,CAAC,UAAW,SAAU,UACjCI,OAAQnC,GAEZ/e,SAAU,CACN8gB,UAAW,CAAC,UACZI,OC1BD,cAA6BhE,EAApCtmD,kCAMcQ,KAAAkmD,cAAgB,CAACj0C,IACvBjS,KAAKi8B,SAAShqB,EAAIkR,cAAc9K,SAF1B7Y,gBAAgB6Y,GAAYrY,KAAK27B,MAAMtjB,MAAQA,EAKzD7Y,YAAY6Y,GAAgBrY,KAAK27B,MAAMW,SAAWt8B,KAAKs8B,SAAWjkB,EAClE7Y,YAAY6Y,GAAgBrY,KAAK27B,MAAM9B,SAAW75B,KAAK65B,SAAWxhB,EAElE7Y,SACI,IAAI0oD,EAAgBloD,KAAKkoD,gBACzB,QAAsB3mD,IAAlB2mD,EAA6B,OAAOA,EACxC,IAAI1wC,EAAK,GAOT,OANsB,IAAlBxX,KAAK6jC,SACLrsB,EAAG,eAAgB,EAGnBA,EAAG,kBAAgD,IAA7BxX,KAAK6yB,WAAWkI,SAEnCniB,EAAA,0BAAU8iB,IAAMC,GAAU37B,KAAK27B,MAAMA,EACxCj2B,UAAWoZ,IAAW9e,KAAK0F,UAAW8R,GACtC8pB,KAAMthC,KAAKL,IAAMK,KAAKL,GAAG2hC,KACzB/E,UAAWv8B,KAAK6yB,WAAW0J,UAC3B6H,aAAcpkC,KAAKokC,aAAcpI,SAAUh8B,KAAKkmD,mBDCxDle,SAAU,CACN0hB,UAAW,CAAC,UACZI,OEjCD,cAA6BnC,EAApCnoD,kCACcQ,KAAAq8B,UAAY,cFkCtBxsB,KAAM,CACF65C,UAAW,CAAC,QACZI,OAAQtB,GAEZgG,SAAU,CACN9E,UAAW,CAAC,QACZI,OVrCD,cAA6BnC,EAApCnoD,kCACcQ,KAAAq8B,UAAY,cUsCtBoyB,KAAM,CACF/E,UAAW,CAAC,QACZI,OVrCD,cAAyBnC,EAAhCnoD,kCACcQ,KAAAq8B,UAAY,UUsCtB8lB,MAAO,CACHuH,UAAW,CAAC,QACZI,OVrCD,cAA0BnC,EAAjCnoD,kCACcQ,KAAAq8B,UAAY,WUsCtB/5B,OAAQ,CACJonD,UAAW,CAAC,UAAW,SAAU,SAAU,OAAQ,WACnDI,OAAQnB,GAEZr8C,IAAK,CACDo9C,UAAW,CAAC,UACZI,OErDD,cAAwBnC,EAA/BnoD,kCACcQ,KAAAq8B,UAAY,SFsDtBqyB,MAAO,CACHhF,UAAW,CAAC,UACZI,OErDD,cAA0BnC,EAAjCnoD,kCACcQ,KAAAq8B,UAAY,WFsDtB4L,OAAQ,CACJyhB,UAAW,CAAC,UAAW,UACvBI,OAAQ1B,GAEZuG,OAAQ,CACJjF,UAAW,CAAC,UAAW,UACvBI,OAAQzB,GAEZ3rB,MAAO,GAGPyL,SAAU,CACNuhB,UAAW,CAAC,UAAW,UAAW,UAClCI,OAAQrB,GAEZmG,MAAO,CACHlF,UAAW,CAAC,UACZI,OAAQkE,GAEZa,WAAY,GAGZC,MAAO,CACHpF,UAAW,CAAC,UAAW,SAAU,SAAU,OAAQ,WACnDI,OPhFD,cAA0BhE,EAAjCtmD,kCACcQ,KAAA4B,OAA6C,GAG7CpC,gBAAgB6Y,GACtB,IAAK,IAAIzQ,KAAK5H,KAAK4B,OAAQ,CACvB,IAAI+5B,EAAQ37B,KAAK4B,OAAOgG,GACxB+zB,EAAM2M,QAAUjwB,IAAUsjB,EAAMtjB,OAGxC7Y,YAAY6Y,GACRrY,KAAKs8B,SAAWjkB,EAChB,IAAK,IAAIzQ,KAAK5H,KAAK4B,OAAQ5B,KAAK4B,OAAOgG,GAAG00B,SAAWjkB,EAEzD7Y,YAAY6Y,GACRrY,KAAK65B,SAAWxhB,EAChB,IAAK,IAAIzQ,KAAK5H,KAAK4B,OAAQ5B,KAAK4B,OAAOgG,GAAGiyB,SAAWxhB,EASzD7Y,SACI,IAEI43B,GAFAgN,aAACA,EAAYvW,KAAEA,GAAQ7tB,KAAKL,IAC5BwqD,MAACA,EAAK7D,OAAEA,GAAUtmD,KAAK+lD,SAEb,IAAVoE,IACA/yB,EAAUp3B,KAAK+lD,QAAuB3uB,QAE1C,IAAI5f,EAAKsH,IAAW9e,KAAK0F,UAAW,QACpC,OAAOkT,EAAA,sBAAMlT,UAAW8R,EAAI1O,MAAOggD,GAC1Bj7B,EAAK5kB,IAAI,CAAChB,EAAEiB,KACT,IAAImP,MAACA,EAAKjB,MAAEA,GAASnP,EACjB/H,EAAOF,KAAKE,KAEhB,YADeqB,IAAX61B,IAAsBl3B,GAAQ,IAAMk3B,GACjCxe,EAAA,uBAAOtR,IAAK4B,EAAOxD,UAAU,qBAChCkT,EAAA,uBAAO8iB,IAAKC,GAAO37B,KAAK4B,OAAOsH,GAAOyyB,EAAOpzB,KAAK,QAAQrI,KAAMA,EAC5DmY,MAAOA,EAAOqwC,gBAAiB1oD,KAAKokC,cAAgBA,KAAgB/rB,EACpE2jB,SAAUh8B,KAAKkmD,gBAClB9uC,GAASiB,SOwC9B02C,MAAO,CACHrF,UAAW,CAAC,WACZI,OGzFD,cAA0BhE,EAAjCtmD,kCACcQ,KAAAq8B,UAAY,QAItB78B,YAAY6Y,GAAgBrY,KAAK27B,MAAMW,SAAWt8B,KAAKs8B,SAAWjkB,EAClE7Y,YAAY6Y,GAAgBrY,KAAK27B,MAAM9B,SAAW75B,KAAK65B,SAAWxhB,EAElE7Y,SACI,IAAIg7B,IAACA,EAAGG,IAAEA,EAAG5qB,KAAEA,GAAQ/P,KAAKL,GAC5B,OAAOiZ,EAAA,cAAAA,EAAA,cAAEA,EAAA,uBAAO8iB,IAAKC,GAAO37B,KAAK27B,MAAQA,EACrCj2B,UAAWoZ,IAAW9e,KAAK0F,UAAW,eAAgB,YACtD6C,KAAMvI,KAAKq8B,UACX+H,aAAcpkC,KAAKokC,aACnBpI,SAAUh8B,KAAKkmD,cACfvrB,IAAKA,EACLH,IAAKA,EACLzqB,KAAMA,QH0Ed6uB,OAAQ,CACJ8qB,UAAW,CAAC,SAAU,UACtBI,OAAQH,IAIT,SAASyD,EAAQrH,EAAkBlzB,EAAwB/c,EAA0BkwC,GACxF,QAAgBzkD,IAAZwkD,EAEA,OAAO,KAEX,QAAmBxkD,IAAfsxB,EAA0B,OAC9B,IASIm8B,GATA9uD,KAACA,EAAIqI,KAAEA,GAAQsqB,EACnB,OAAQtqB,GACR,IAAK,MACD,IAAIojD,EAAY5F,EAAQkJ,cAAc/uD,GACtC,OAAO0Y,EAAA,cAACqzC,EAAY,CAACP,cAAe3F,EAAS4F,UAAWA,EAAW71C,SAAUA,IAMjF,IAAInW,EAAKomD,EAAQU,UAAUvmD,GAC3B,SAASgvD,EAAcz4C,GACnB,OAAOA,GACP,QAAS,OAAOkxC,EAChB,IAAK,KAAM,OAAOqB,EAClB,IAAK,UAAW,OAAOX,EACvB,IAAK,SAAU,OAAOD,EACtB,IAAK,SAAU,OAAOT,EACtB,IAAK,OAAQ,OAAOa,EACpB,IAAK,UAAW,OAAOC,EACvB,IAAK,SACL,IAAK,SAAU,OAAOkB,GAG1B,QAAWpoD,IAAP5B,EACAqvD,EAAaE,EAAc3mD,OAE1B,CACD,IAAKuhD,OAAOC,GAAcpqD,EAC1B,OAAQoqD,GACR,QACI,QAAmBxoD,IAAfwoD,EAA0B,CAE1BiF,EADoBT,EAAexE,GACRD,YAEZvoD,IAAfytD,IAA0BA,EAAaE,EAAc3mD,IACzD,MACJ,IAAK,SACDymD,EAAcrvD,EAAgBwvD,YAC9B,MACJ,IAAK,QACD,OAAOv2C,EAAA,+CAKf,IAAIuxC,MAACA,EAAKC,QAAEA,GAAWrE,EACnB+D,EAAS,IAAIkF,EAAWjJ,EAASlzB,EAAYmzB,EAAYlwC,GAG7D,OAFAs0C,EAAQlqD,GAAQ4pD,EAETlxC,EAAA,cAACkxC,EAAO1D,UAAS,YInJrB,MAAMgJ,EAAuB,CAChC9rB,EAAG,CACCvI,SAAU,WACVkN,OAAQ,mBACR4d,QAAS,oBACTrrB,IAAK,sBACLG,IAAK,uBAET00B,GAAI,CACA/rB,EAAG,CACCvI,SAAU,qBACVkN,OAAQ,2BACR4d,QAAS,2BACTrrB,IAAK,iCACLG,IAAK,qTCOV,MAAM20B,UAAa12C,EAAA,UAoBtBpZ,YAAYgF,GACR3E,MAAM2E,GAkGFxE,KAAAuvD,MAAQ,MACZ,IAAIC,SAACA,GAAYxvD,KAAKwE,WACLjD,IAAbiuD,GAEJxvD,KAAKyvD,uBA2DCzvD,KAAA0vD,iBAAmB,CAACltD,GACnBoW,EAAA,sBAAMlT,UAAWoZ,IAAW9e,KAAKwE,MAAMkB,WAAYlF,SAAU0N,GAAGA,EAAEmvB,kBACpE76B,IAGCxC,KAAA2vD,sBAAwB,EAACvvD,EAA0BoC,KACzD,IAAIotD,eAACA,GAAkB5vD,KAAKwE,MAE5B,GAAIorD,EAAiB,EAAG,CACpB,IAAIC,EACU,OAAVzvD,EACAwvD,EAAiB,EAGjBC,EAAYj3C,EAAA,uBAAOlT,UAAWoZ,IAAW,UAAY8wC,EAAgB,mBAAoBxvD,GAE7F,IAAI0vD,EAAW,WAAa,GAAKF,GACjC,OAAOh3C,EAAA,qBAAKlT,UAAU,kBACjBmqD,EACDj3C,EAAA,qBAAKlT,UAAWoqD,GAAWttD,IAGnC,OAAOoW,EAAA,qBAAKlT,UAAU,cACT,OAARtF,EAAc,KAAKwY,EAAA,uBAAOlT,UAAU,kBAAkBtF,GACtDoC,KAGCxC,KAAA+vD,uBAA2BxuD,EAC3BvB,KAAAgwD,mBAAqB,mBACrBhwD,KAAAiwD,WAAqBnwD,OAAAowD,EAAA,EAAApwD,CAAiBsvD,GAEhDpvD,KAAAusD,aAAe,EAACnsD,EAAWoC,IAChBoW,EAAA,yBACHA,EAAA,qBAAKlT,UAAWoZ,IAAW,8DAA+D1e,GACzFoC,IAGTxC,KAAAmpC,aAAe,CAAC3mC,IACZ,IAAIgV,EAAKsH,IAAW,CAChBqxC,QAAQ,IAEZ,OAAOv3C,EAAA,qBAAKlT,UAAW8R,GAAKhV,KAEhCxC,KAAAwsD,aAAe5zC,EAAA,qBAAKlT,UAAU,kCA3M1B,IAAI6f,OAACA,EAAM2kC,SAAEA,EAAQsF,SAAEA,EAAQY,UAC3BA,EAAS5J,eAAEA,EAAcc,WAAEA,EAAU0C,YACrCA,EAAWpqD,IAAEA,GACb4E,EACJxE,KAAKowD,UAAYA,GAAapwD,KAAK0vD,iBACnC1vD,KAAKwmD,eAAiBA,GAAkBxmD,KAAK2vD,sBAC7C3vD,KAAKsnD,gBAA0B/lD,IAAb+lD,GAAuC,KAAbA,GAA8B,OAAbA,EAAmBA,EAAatnD,KAAK+vD,kBAClG/vD,KAAKJ,IAAMA,GAAOI,KAAKiwD,WACvBjwD,KAAKgqD,YAAcA,GAAehqD,KAAKgwD,mBAEvChwD,KAAKulB,OAASA,EACdvlB,KAAK6rD,YAAc,GACnB,IAAK,IAAIh5B,KAAc7yB,KAAKulB,OACxBvlB,KAAK6rD,YAAYh5B,EAAW3yB,MAAQ2yB,EAExC7yB,KAAKkqD,SAAWA,EAGhBlqD,KAAKkH,SAAWpH,OAAA+nB,EAAA,EAAA/nB,CAAQE,KAAKuvD,OAC7BvvD,KAAKkS,KAAO,GAIR1S,gBACJQ,KAAK6mD,SAAS7mD,KAAKwE,MAAMgrD,UACzB,IAMIhI,GANA1xC,SAACA,GAAY9V,KAAKwE,MACtB,YAAiBjD,IAAbuU,GACA9V,KAAKqwD,YAAc,IAAItE,EAAY/rD,MAAM,GAClC4Y,EAAA,cAAAA,EAAA,cAAG9C,UAIQvU,IAAlBvB,KAAKkqD,WACL1C,EAAUxnD,KAAKkqD,SAAS1C,cAEZjmD,IAAZimD,GACAxnD,KAAKqwD,YAAc,IAAItE,EAAY/rD,MAAM,GACd,oBAAd,EAA0BwnD,EAAQxnD,KAAKkS,MAAQs1C,IAGhExnD,KAAKqwD,YAAc,IAAItE,EAAY/rD,MAAM,GAClC4Y,EAAA,cAAAA,EAAA,cAAG5Y,KAAKulB,OAAOtc,IAAI,CAAChB,EAAGiB,IACnB0P,EAAA,cAACA,EAAA,SAAc,CAACtR,IAAK4B,GAAQkkD,EAAQptD,KAAKqwD,YAAapoD,EAAG6N,QAIjEtW,SAASgwD,QACIjuD,IAAbiuD,IAAwBA,EAAW,IACvC,IAAK,IAAI38B,KAAc7yB,KAAKulB,OACxBvlB,KAAKswD,aAAaz9B,EAAY7yB,KAAKkS,KAAMs9C,GAIzChwD,aAAaqzB,EAAwB3gB,EAAUs9C,GACnD,IAAItvD,KAACA,EAAIqI,KAAEA,GAAQsqB,EACnB,GAAa,WAATtqB,EAAmB,OACvB,GAAa,QAATA,EAEA,YADA2J,EAAKhS,GAAQsvD,EAAStvD,IAI1B,IAAIqwD,EAAoB19B,GACnB9wB,IAAIyuD,GAAYD,EACrB,QAAiBhvD,IAAbivD,EAAwB,OAC5B,IAAIC,EAAUF,EAAQ1E,YAAc,GACpC,IAAK,IAAIpkD,KAAQ+oD,EACbC,EAAQhpD,EAAKvH,MAAQuH,EAEzB,IAAI0J,EAAYq+C,EAAStvD,QACbqB,IAAR4P,EAAmBA,EAAM,IACG,IAAvBoiB,MAAMC,QAAQriB,KAAgBA,EAAM,CAACA,IAC9C,IAAIpP,EAAY,GAChB,IAAK,IAAI6kB,KAAOzV,EAAK,CACjB,IAAIo8C,YAACA,EAAWG,WAAEA,GAAc9mC,EAC5BC,EAAI,CACJ2mC,QAAS5mC,EACT2mC,YAAaA,EACbG,WAAYA,GAEhB,IAAK,IAAIjmD,KAAQ+oD,EACbxwD,KAAKswD,aAAa7oD,EAAMof,EAAGD,GAQ/B7kB,EAAIyD,KAAKqhB,GAIb3U,EAAKhS,GAAQJ,OAAA+nB,EAAA,EAAA/nB,CAAWiC,GAWpBvC,qBACJ,IAAK,IAAIqzB,KAAc7yB,KAAKulB,OACxBvlB,KAAK0wD,gBAAgB79B,GAIrBrzB,gBAAgBqzB,GACpB,IAAI3yB,KAACA,EAAIqI,KAAEA,GAAQsqB,EACnB,GAAa,QAATtqB,EAAgB,OACpB,QAAkBhH,IAAdvB,KAAKkS,KAAoB,OAC7B,IAAIy+C,EAAa3wD,KAAKkS,KAAKhS,GAC3B,QAAmBqB,IAAfovD,EAA0B,OAC9B,IAAK5uD,IAAKyuD,GAAY39B,EACtB,IAAK,IAAIjM,KAAO+pC,EAAY,CACxB,IAAInD,QAACA,GAAW5mC,EAChB,QAAgBrlB,IAAZisD,EAAuB,SAC3B,IAAID,YAACA,EAAWG,WAAEA,GAAcF,EAChC5mC,EAAI2mC,YAAcA,EAClB3mC,EAAI8mC,WAAaA,EAEjB,IAAK,IAAIjmD,KAAQ+oD,EACbxwD,KAAK0wD,gBAAgBjpD,IAKjCjI,oBACI,IAAIoxD,WAACA,GAAc5wD,KAAKwE,WACLjD,IAAfqvD,GAA0BA,EAAW5wD,KAAKqwD,aAGlD7wD,4BAC0B+B,IAAlBvB,KAAKkH,UAAwBlH,KAAKkH,WAG1C1H,SACI,IAAIgD,EAAUxC,KAAKi5B,gBACnB,OAAOrgB,EAAA,cAACozC,EAAiB+B,SAAQ,CAAC11C,MAAOrY,KAAKqwD,aAC1Cz3C,EAAA,cAAC5Y,KAAKqwD,YAAYlI,aAAY,MAC7BnoD,KAAKowD,UAAU5tD,IAIlBhD,YAAYurD,2CAEd,GADA/qD,KAAKqwD,YAAYp1B,cACiB,IAA9Bj7B,KAAKqwD,YAAYxsB,SAAmB,OAExC,IAAImnB,cAACA,GAAiBhrD,KAAKqwD,YAAY3uD,KAAK8C,MAC5C,QAAsBjD,IAAlBypD,EAEA,YADA7hC,MAAM,wCAGV,IAAItoB,QAAYmqD,EAAcD,EAAY/qD,KAAKqwD,kBACnC9uD,IAARV,GACJb,KAAKqwD,YAAYz7B,SAASm2B,EAAYlqD,OC3MvC,cAAwB+X,EAAA,UAE3BpZ,SACI,IAAIU,KAACA,EAAI4V,SAAEA,GAAa9V,KAAKwE,MACzBuhD,EAAkB/lD,KAAK+lD,QAC3B,QAAgBxkD,IAAZwkD,EAAuB,OAAOntC,EAAA,sBAAMlT,UAAU,eAAa,kBAC/D,IAAImtB,EAAakzB,EAAQkJ,cAAc/uD,GACnCsC,EAAU4qD,EAAQrH,EAASlzB,EAAY/c,EAAU9V,KAAKwE,OAC1D,YAAgBjD,IAAZiB,EACOoW,EAAA,sBAAMlT,UAAU,oBAAiBxF,uBAErCsC,KAVJquD,YAAc7E,ECTzBpuD,EAAAE,EAAAC,EAAA,sBAAAuxD,2ECKO,MAAewB,EAElBtxD,YAAYquB,GACR7tB,KAAK6tB,KAAOA,EAEhBF,cACI,IAAI3rB,EAAQhC,KAAK6tB,KAAKrpB,MAAMxC,MAC5B,OAAkB,OAAVA,QAA4BT,IAAVS,IAAgD,IAAzBuxB,MAAMC,QAAQxxB,GAEnEA,YACI,IAAIA,EAAQhC,KAAK6tB,KAAKrpB,MAAMxC,MAC5B,OAAc,OAAVA,EAAuB,UACbT,IAAVS,GACyB,IAAzBuxB,MAAMC,QAAQxxB,GACPA,EAECA,EAAyBA,WAJrC,EAMM0hB,cACN,IAAI1hB,EAAQhC,KAAK6tB,KAAKrpB,MAAMxC,MAC5B,GAAc,OAAVA,EAAgB,OAAO,EAC3B,QAAcT,IAAVS,EAAqB,OAAO,EAChC,IAAIwrB,EAAYxrB,EAChB,YAAwBT,IAApBisB,EAAUxrB,OACPwrB,EAAU9J,QAErBqtC,qBACAvxD,YAAYwxD,IAEFxxD,cAAciI,EAAUyB,GAC9B,IAAI+P,OAACA,GAAUjZ,KAAK6tB,KAAKrpB,MAAMiD,KAC/B,YAAelG,IAAX0X,EAA6BL,EAAA,qBAAKlT,UAAU,aAAagI,KAAKC,UAAUlG,IACrEwR,EAAOxR,EAAMyB,kUAdd8G,CAAA,CAAT6X,EAAA,+BCnBE,MAAMopC,UAAkBH,EAC3BtxD,OAAOiI,EAAUyB,GACb,IAAIxD,UAACA,EAAS4B,IAAEA,EAAGvC,QAAEA,GAAW/E,KAAK6tB,KAAKrpB,MAAMiD,KAChD,OAAOmR,EAAA,oBAAItR,SAAW/F,IAAN+F,EAAgB4B,EAAM5B,EAAIG,GAAO/B,UAAW4/B,EAAW,mBAAoB5/B,GAAYX,QAAS,IAAIA,GAAWA,EAAQ0C,IAClIzH,KAAKi5B,cAAcxxB,EAAMyB,iBCH/B,MAAMgoD,UAAeJ,EACxBtxD,OAAOiI,EAAUyB,GACb,IAAIxD,UAACA,EAAS4B,IAAEA,EAAG2R,OAAEA,GAAUjZ,KAAK6tB,KAAKrpB,MAAMiD,KAC/C,GAAoB,kBAATA,EAAmB,CAC1B,IAAI+P,EAAK8tB,EAAW,cAAe,OAAQ,QAC3C,OAAO1sB,EAAA,oBAAItR,IAAKxH,OAAAuZ,EAAA,EAAAvZ,GAAO4F,UAAW8R,GAAK/P,GAE3C,OAAOmR,EAAA,oBAAItR,SAAW/F,IAAN+F,EAAgB4B,EAAM5B,EAAIG,GAAO/B,UAAW4/B,EAAW5/B,IAClE1F,KAAKi5B,cAAcxxB,EAAMyB,KCA/B,MAAMioD,UAAmBL,EAIpBtxD,aACJ0D,QAAQC,IAAI,gCACZ,IACIiuD,GADApvD,MAACA,EAAK+uD,cAAEA,EAAaM,QAAEA,GAAWrxD,KAAK6tB,KAAKrpB,MAEhD,YAAcjD,IAAVS,EACOhC,KAAKgkB,YAASziB,EAEX,OAAVS,EACOhC,KAAKgkB,OAAS,MAGrBotC,GADyB,IAAzB79B,MAAMC,QAAQxxB,GACDA,EAGCA,EAAyBA,MAG3ChC,KAAKsxD,eAAiBP,EAEX/wD,KAAKgkB,YADMziB,IAAlBwvD,EACqBK,EAAWnoD,IAAIhB,IACzB,CACHspD,UAAS,EACT9pD,KAAKQ,EACLupD,QAAQ1xD,OAAAuZ,EAAA,EAAAvZ,WAIJyB,IAAZ8vD,EACqBD,EAAWnoD,IAAIhB,IACzB,CACHspD,cAAgDhwD,IAAvCwvD,EAAc/oD,KAAKypD,GAAMA,IAAOxpD,GACzCR,KAAKQ,EACLupD,QAAQ1xD,OAAAuZ,EAAA,EAAAvZ,MAICsxD,EAAWnoD,IAAIhB,IACzB,CACHspD,cAAsDhwD,IAA7CwvD,EAAc/oD,KAAKypD,GAAMJ,EAAQppD,EAAGwpD,IAC7ChqD,KAAKQ,EACLupD,QAAQ1xD,OAAAuZ,EAAA,EAAAvZ,OAIVkC,YAGN,OADAhC,KAAK0xD,aACE1xD,KAAKgkB,OAEhBxkB,YAAYwxD,GACJA,EAAUD,gBAAkB/wD,KAAKsxD,gBACrCtxD,KAAK0xD,aAEDlyD,SAASiI,EAAqB8pD,GAClC9pD,EAAK8pD,SAAWA,EAChB,IAAII,EAAc3xD,KAAKgkB,OAAOguB,KAAK/pC,GAAKA,EAAEspD,UAC1CvxD,KAAK6tB,KAAKrpB,MAAMiD,KAAKmqD,SAASnqD,EAAKA,KAAM8pD,EAAUI,GAGvDZ,oBACI,OAAO/wD,KAAKgkB,OAAO2M,OAAO1oB,IAAoB,IAAfA,EAAEspD,UAAmBtoD,IAAIhB,GAAKA,EAAER,MA0BnEjI,OAAOiI,EAAqByB,GACxB,IAAIxD,UAACA,EAAS4B,IAAEA,EAAG2R,OAAEA,EAAM24C,SAAEA,GAAY5xD,KAAK6tB,KAAKrpB,MAAMiD,MACrD+pD,QAACA,EAAOD,SAAEA,GAAY9pD,EAC1B,OAAOmR,EAAA,oBAAItR,SAAW/F,IAAN+F,EAAgB4B,EAAM5B,EAAIG,GAAO/B,UAAWoZ,IAAWpZ,IACnEkT,EAAA,qBAAKlT,UAAU,kCACXkT,EAAA,uBAAO8iB,IAAKC,IACCA,IACL37B,KAAK27B,MAAQA,EAAOA,EAAM2M,QAAUipB,IAExC7rD,UAAU,GAAG6C,KAAK,WAAW8P,MAAM,GAAG/U,GAAIkuD,EAC1C9I,eAAgB6I,EAChBv1B,SAAW9tB,IACPlO,KAAK4xD,SAASnqD,EAAMyG,EAAEsH,OAAO8yB,YAErC1vB,EAAA,uBAAOlT,UAAU,GAAGoD,MAAO,CAAC+oD,KAAK,EAAGC,aAAa,GAAIC,QAASP,GACzDxxD,KAAKi5B,cAAcxxB,EAAKA,KAAMyB,qUAzDrC8oD,CAAA,CAATnqC,EAAA,oEC5BL,IAAaoqC,EAAb,cAA0Br5C,EAAA,UAEtBpZ,YAAYgF,GACR3E,MAAM2E,GAUVxE,KAAAiW,SAAW,CAACJ,IACR3S,QAAQC,IAAI,mCAAqC0S,KAVjD,IAAIpO,KAACA,GAAQzH,KAAKwE,OACdO,QAACA,EAAO6sD,SAAEA,GAAYnqD,EAEtBzH,KAAKkyD,cADQ3wD,IAAbqwD,EACgB,IAAIT,EAAWnxD,WACduB,IAAZwD,EACW,IAAIksD,EAAUjxD,MAEd,IAAIkxD,EAAOlxD,MAKnCR,oBAAoBwxD,EAAqBmB,EAAWC,GAChDpyD,KAAKkyD,SAASG,YAAYrB,GAE9BD,oBACI,OAAO/wD,KAAKkyD,SAASnB,cAEzBvxD,SACI,IAAIkG,UAACA,EAASD,OAAEA,EAAMsR,OAAEA,EAAM0e,OAAEA,EAAM/R,QAAEA,EAAO1iB,KAAEA,EAAIyG,KAAEA,EAAIspD,cAAEA,GAAiB/wD,KAAKwE,WACpEjD,IAAXk0B,IAAsBA,EAAS,eACnBl0B,IAAZmiB,IAAuBA,EAAU,gBACxBniB,IAATP,IAAoBA,EAAO,QAE/B,IAUIwB,GAVAmrB,QAACA,EAAO3rB,MAAEA,EAAO0hB,QAAQ4uC,GAAatyD,KAAKkyD,SAC/C,SAASK,EAAU3rC,EAAere,GAC9B,GAAKqe,EACL,cAAeA,GACX,QACA,IAAK,SAAU,OAAOhO,EAAA,oBAAIlT,UAAW,WAAW6C,GAAOqe,GACvD,IAAK,WAAY,OAAOhO,EAAA,oBAAIlT,UAAW,WAAW6C,GAAQqe,KAC1D,IAAK,SAAU,OAAOhO,EAAA,wBAAKgO,IAenC,OAVIpkB,EADU,OAAVR,EACUuwD,EAAU98B,EAAQ,eACbl0B,IAAVS,EACKuwD,EAAU7uC,EAAS,WACP,IAAjB1hB,EAAMwE,OACD+rD,EAAUvxD,EAAM,QAEhBgB,EAAMiH,IAAI,CAACxB,EAAMyB,IAChBlJ,KAAKkyD,SAASj5C,OAAOxR,EAAMyB,IAGnC0P,EAAA,oBAAIlT,UAAWoZ,IAAW,UAAWpZ,IACvC6sD,EAAU9sD,EAAQ,UAClBjD,EACA+vD,EAAUx7C,EAAQ,aArDlBk7C,uUAAIO,CAAA,CADhB/5C,EAAA,GACYw5C,+UCzBN,MAAMQ,UAAuBC,EAAA,EAApClzD,kCASYQ,KAAAg8B,SAAW,CAAC/pB,IAChBjS,KAAKozB,SAAWnhB,EAAIuD,OAAO6C,MAC3B,IAAIs6C,EAAW3yD,KAAKqY,MACpBrY,KAAK+yB,UAAa/yB,KAAKozB,UAAYu/B,IAG/B3yD,KAAA87B,OAAS,CAAC7pB,IACdjS,KAAK4yD,gBAGD5yD,KAAA67B,QAAU,MACd77B,KAAK8G,WAAQvF,IAGTvB,KAAAyR,KAAO3R,OAAA2Y,EAAA,EAAA3Y,CAAU0E,IACrB,IAAI8K,QAACA,EAAOC,OAAEA,GAAU/K,EACpBwS,EAAQ4B,EAAA,wBACRlT,UAAU,yBACVm0B,UAAW75B,KAAK+yB,UAChBhuB,QAAS,KACL/E,KAAK4yD,mBACcrxD,IAAfvB,KAAK8G,OAAqBwI,EAAQtP,KAAKozB,YAC9C,gBACL,OAAOxa,EAAA,cAACnH,EAAA,EAAI,CAAChM,OAAQ,eAAOzF,KAAKI,MAAO4W,MAAOA,GAC3C4B,EAAA,qBAAKlT,UAAU,OACXkT,EAAA,uBAAOrQ,KAAK,OACRyzB,SAAUh8B,KAAKg8B,SACfF,OAAQ97B,KAAK87B,OACbD,QAAS77B,KAAK67B,QACdn2B,UAAU,eACV0+B,aAAcpkC,KAAKqY,QAEnBrY,KAAK8yB,QAAUla,EAAA,qBAAKlT,UAAU,mBAAmB1F,KAAK8yB,OAAOqB,aAEhEn0B,KAAK8G,OAAS8R,EAAA,qBAAKlT,UAAU,eAAe1F,KAAK8G,WAzC9CtH,wDACZ,OAAO,IAAI6P,QAAa,CAACC,EAASC,KAC9B,IAAI40B,EAAUvrB,EAAA,cAAoB5Y,KAAKyR,KAAM,CAACnC,QAAQA,EAASC,OAAOA,IACtEnK,EAAA,EAAII,KAAK2+B,EAAQ50B,iSCLtB,MAAMsjD,UAAsBH,EAAA,EAAnClzD,kCASYQ,KAAAg8B,SAAW,CAAC3jB,IAChBrY,KAAKozB,SAAW/a,EAChB,IAAIs6C,EAAW3yD,KAAKqY,MACpBrY,KAAK+yB,UAAa/yB,KAAKozB,UAAYu/B,IAG/B3yD,KAAAyR,KAAO3R,OAAA2Y,EAAA,EAAA3Y,CAAU0E,IACrB,IAAI8K,QAACA,EAAOC,OAAEA,GAAU/K,GACpBtE,KAACA,GAAQF,KAAK6yB,YACdhF,KAACA,EAAIuW,aAAEA,GAAgBpkC,KAAK8yB,OAC5B9b,EAAQ4B,EAAA,wBACRlT,UAAU,yBACVm0B,UAAW75B,KAAK+yB,UAChBhuB,QAAS,KACL/E,KAAK4yD,mBACcrxD,IAAfvB,KAAK8G,OAAqBwI,EAAQtP,KAAKozB,YAC9C,gBACD5wB,EAAUqrB,EACVA,EAAK5kB,IAAI,CAAChB,EAAGiB,KACT,IAAIkO,MAACA,EAAKiB,MAAEA,GAASpQ,EACrB,OAAO2Q,EAAA,uBAAOtR,IAAK4B,EAAOxD,UAAU,4BAChCkT,EAAA,uBAAO1Y,KAAMA,EAAMqI,KAAK,QAAQ8P,MAAOA,EACnCtT,QAAS,IAAI/E,KAAKg8B,SAAS3jB,GAC3BqwC,eAAgBrwC,IAAU+rB,QAAkBhtB,GAASiB,aAIjEO,EAAA,cAAAA,EAAA,iCACJ,OAAOA,EAAA,cAACnH,EAAA,EAAI,CAAChM,OAAQ,eAAOzF,KAAKI,MAAO4W,MAAOA,GAC3C4B,EAAA,qBAAKlT,UAAU,OAAOlD,MApCdhD,wDACZ,OAAO,IAAI6P,QAAa,CAACC,EAASC,KAC9B,IAAI40B,EAAUvrB,EAAA,cAAoB5Y,KAAKyR,KAAM,CAACnC,QAAQA,EAASC,OAAOA,IACtEnK,EAAA,EAAII,KAAK2+B,EAAQ50B,iRCLtB,MAAMujD,UAAuBJ,EAAA,EAApClzD,kCASYQ,KAAAg8B,SAAW,CAAC3jB,IAChBrY,KAAKozB,SAAW/a,EAChB,IAAIs6C,EAAW3yD,KAAKqY,MACpBrY,KAAK+yB,UAAa/yB,KAAKozB,UAAYu/B,IAG/B3yD,KAAAyR,KAAO3R,OAAA2Y,EAAA,EAAA3Y,CAAU0E,IACrB,IAAI8K,QAACA,EAAOC,OAAEA,GAAU/K,GACpBqpB,KAACA,GAAQ7tB,KAAK8yB,OACdtwB,EAAUqrB,EACVA,EAAK5kB,IAAI,CAAChB,EAAGiB,KACT,IAAIkO,MAACA,EAAKiB,MAAEA,GAASpQ,EACrB,OAAO2Q,EAAA,qBAAKtR,IAAK4B,EAAOxD,UAAU,yCAAyCX,QAAS,KAAK/E,KAAKg8B,SAAS3jB,GAAQ/I,EAAQtP,KAAKozB,YACvHhc,GAASiB,KAIlBO,EAAA,cAAAA,EAAA,iCACJ,OAAOA,EAAA,cAACnH,EAAA,EAAI,CAAChM,OAAQ,eAAOzF,KAAKI,OAC7BwY,EAAA,qBAAKlT,UAAU,QACVlD,MA3BGhD,wDACZ,OAAO,IAAI6P,QAAa,CAACC,EAASC,KAC9B,IAAI40B,EAAUvrB,EAAA,cAAoB5Y,KAAKyR,KAAM,CAACnC,QAAQA,EAASC,OAAOA,IACtEnK,EAAA,EAAII,KAAK2+B,EAAQ50B,iRCc7B,IAAawjD,EAAb,cAA0Bn6C,EAAA,UAStBpZ,YAAYgF,GACR3E,MAAM2E,GATFxE,KAAAgzD,oBAAsB,iCACtBhzD,KAAAizD,6BAA+B,+CAqC/BjzD,KAAAi3B,UAAY,EAACpE,EAAwBxa,KACzC,IACI66C,GADAhzD,KAACA,EAAIqI,KAAEA,EAAIwyB,SAAEA,GAAYlI,EAEzBC,EAAS9yB,KAAKkqD,SAAShqD,GACvBE,EAAgB0yB,GAAUA,EAAO1yB,OAAUF,EAE/C,QAAeqB,IAAXuxB,GAAwBza,EACxB,OAAQya,EAAOg3B,QACX,IAAK,QACL,IAAK,SACD,IAAIj8B,KAACA,GAAQiF,EACbogC,EAAWt6C,EAAA,uBAAIiV,EAAK7lB,KAAKC,GAAKA,EAAEoQ,QAAUA,GAAOjB,OAI7D,QAAiB7V,IAAb2xD,EACA,OAAQ3qD,GACJ,QACI2qD,EAAW76C,EAAOO,EAAA,uBAAIP,GAAaO,EAAA,uBAAOlT,UAAU,cAAY,YAChE,MACJ,IAAK,QACDwtD,EAAWt6C,EAAA,cAACy1C,EAAA,EAAK,CAAC3oD,UAAU,YAAYiK,IAAK0I,IAIzD,IAAI86C,GAAyB,IAAXp4B,GAAmBniB,EAAA,sBAAMlT,UAAU,eAAa,KAClE,OAAOkT,EAAA,qBAAKlT,UAAW1F,KAAKozD,sBAAuBruD,QAAS,IAAUsuD,EAAArzD,UAAA,kCAAMA,KAAK41C,SAAS/iB,EAAYC,EAAQ1yB,EAAOiY,MACjHO,EAAA,qBAAKlT,UAAU,QAAQtF,MAAQ+yD,GAC/Bv6C,EAAA,qBAAKlT,UAAU,wCAAwCwtD,IAChC,IAAtBlzD,KAAKwE,MAAM8uD,UAAmB16C,EAAA,qBAAKlT,UAAU,mBAAkBkT,EAAA,mBAAGlT,UAAU,4BAI7E1F,KAAA41C,SAAW,EAAO/iB,EAAwBC,EAAgB1yB,EAAciY,IAAeg7C,EAAArzD,UAAA,qBAC3F,IAEImmD,GAFAoN,cAACA,EAAaC,YAAEA,EAAWF,SAAEA,GAAYtzD,KAAKwE,MAClD,IAAiB,IAAb8uD,EAAmB,OAEvB,QAAoB/xD,IAAhBiyD,EAEA,kBADMA,EAAY3gC,EAAYC,EAAQza,IAG1C,IAAIo7C,EAyBZ,SAAwB5gC,EAAwBC,EAAe1yB,EAAciY,GACzE,IAAIo7C,EACJ,QAAelyD,IAAXuxB,EACA,OAAQA,EAAOg3B,QACX,QAAS,MACT,IAAK,OAAQ2J,EAAWhB,EAAgB,MACxC,IAAK,QAASgB,EAAWvF,EAAA,EAAe,MACxC,IAAK,QAASuF,EAAWZ,EAAe,MACxC,IAAK,SAAUY,EAAWX,EAGlC,QAAiBvxD,IAAbkyD,EACA,OAAQ5gC,EAAWtqB,MACf,IAAK,SAAUkrD,EAAWhB,EAAgB,MAC1C,IAAK,QAASgB,EAAWvF,EAAA,EAGjC,QAAiB3sD,IAAbkyD,EAAwB,OAC5B,OAAO,IAAIA,EAAS5gC,EAAYC,EAAQ1yB,EAAOiY,GA3CnBq7C,CAAe7gC,EAAYC,EAAQ1yB,EAAOiY,GAClE,QAAiB9W,IAAbkyD,EAIJ,KACItN,QAAoBsN,EAASntD,UACV+R,SACO9W,IAAlBgyD,GACApqC,SAAS0J,EAAW3yB,4BAA4BimD,WAAqB9tC,KACrErY,KAAKwE,MAAM0N,KAAK2gB,EAAW3yB,MAAQimD,SAG7BoN,EAAc1gC,EAAYszB,EAAa9tC,UAG/Co7C,EAASrF,MAEnB,MAAOvnD,GAEH3D,QAAQC,IAAI,yBAlBZgmB,MAAM,2FAvEV,IAAIwqC,mBAACA,EAAkBC,sBAAEA,EAAqBC,aAAEA,EAAYT,sBAAEA,EAAqBlJ,SAAEA,EAAQoJ,SAAEA,GAAY9uD,EAC3GxE,KAAK8zD,UAAYl7C,EAAA,qBAAKlT,UAAWiuD,GAAsB3zD,KAAKgzD,sBAC5DhzD,KAAK+zD,aAAen7C,EAAA,qBAAKlT,UAAWkuD,GAAyB5zD,KAAKgzD,sBAClEhzD,KAAKozD,sBAAwBA,GAAyBpzD,KAAKizD,8BAC1C,IAAbK,IAAmBtzD,KAAKozD,uBAAyB,mBACrDpzD,KAAKktD,IAAMt0C,EAAA,qBAAKlT,UAAWmuD,GAAgB7zD,KAAKgzD,sBAChDhzD,KAAKkqD,SAAYA,GAAYA,EAASloD,OAAU,GAGpDxC,SACI,IAAIw0D,EAAwB,IACxBzuC,OAACA,GAAUvlB,KAAKwE,MAChBqD,EAAM0d,EAAO/e,OAEjBwtD,EAAQxuD,KAAKxF,KAAK8zD,WAClB,IAAK,IAAIlsD,EAAE,EAAGA,EAAEC,EAAKD,IAAK,CACtB,IAAIirB,EAAatN,EAAO3d,GACpBA,EAAE,GAAGosD,EAAQxuD,KAAKxF,KAAKktD,KAC3B,IAAI70C,EAAQrY,KAAKwE,MAAM0N,KAAK2gB,EAAW3yB,MACvC8zD,EAAQxuD,KAAKxF,KAAKi3B,UAAUpE,EAAYxa,IAI5C,OAFA27C,EAAQxuD,KAAKxF,KAAK+zD,cAEXn7C,EAAA,yBACFo7C,EAAQ/qD,IAAI,CAAChB,EAAGiB,IAAU0P,EAAA,cAACA,EAAA,SAAc,CAACtR,IAAK4B,GAAQjB,OAnCvD8qD,uUAAI/iD,CAAA,CADhByI,EAAA,GACYs6C,GC3Bbn1D,EAAAE,EAAAC,EAAA,sBAAAg1D,6DCKO,MAAekB,EAClBz0D,UAAUiB,KAIP,MAAMyzD,UAAmBD,EAC5Bz0D,OAAO8H,GACH,OAAOsR,EAAA,qBAAKtR,IAAK,MAAQA,EAAK5B,UAAU,IACpCkT,EAAA,qBAAKlT,UAAU,SACXkT,EAAA,qBAAK9P,MAAO,CAACqrD,UAAW,0BAMjC,MAAMC,UAAgBH,EAEzBz0D,YAAYuD,GACRlD,QACAG,KAAK+C,MAAQA,EAEjBvD,OAAO8H,GACH,IAAI+sD,EACJ,OAAQr0D,KAAK+C,OACT,QAASsxD,EAAI,OAAQ,MACrB,IAAK,IAAKA,EAAI,OAAQ,MACtB,IAAK,IAAKA,EAAI,OAElB,IAAI78C,EAAKsH,IAAUu1C,GACnB,OAAOz7C,EAAA,qBAAKtR,IAAK,MAAQA,EAAK5B,UAAW8R,EAAI1O,MAAO,CAACwrD,gBAAiB,cAI9E,MAAMC,EAAkB,wBAClBC,EAAmB,yBACnBC,EAAgB,sBACf,MAAeC,UAAuBT,EAMzCz0D,YAAYm1D,EAAyBzmB,GACjCruC,QACAG,KAAK20D,UAAYA,EACjB30D,KAAKkuC,KAAOA,EACZluC,KAAK40D,KAAiC,IAA3BD,EAAUE,aAAuB,MAAQ,SAGxDr1D,OAAO8H,GACH,IAAIvC,QAACA,EAAO+vD,GAAEA,GAAM90D,KAAKkuC,KACrB12B,EAAKsH,IAAU,CACfuqC,sBAA8B9nD,IAAZwD,EAClBgwD,gBAAmBxzD,IAAPuzD,EACZluC,KAAO,IAEX,OAAOhO,EAAA,qBAAKtR,IAAKA,EAAK5B,UAAW8R,EAAIzS,QAASA,GACzC/E,KAAKg1D,cACLh1D,KAAKi1D,cAGJz1D,cACN,IAAIY,MAACA,GAASJ,KAAKkuC,KACnB,YAAc3sC,IAAVnB,EAA4B,KACzBwY,EAAA,uBAAOlT,UAAW1F,KAAK40D,IAAM,qBAC/Bx0D,GAGCZ,aACN,IACI01D,EAAOC,GADP/0D,MAACA,GAASJ,KAAKkuC,KAEnB,OAAQluC,KAAK20D,UAAUS,YACnB,IAAK,OAAQF,EAAQX,EAAiB,MACtC,IAAK,SAAUW,EAAQV,EAAkB,MACzC,IAAK,QAASU,EAAQT,EAE1B,OAAQz0D,KAAKkuC,KAAKinB,QACd,IAAK,MAAOA,EAAS,oBAAqB,MAC1C,QACA,IAAK,SAAUA,EAAS,qBAAsB,MAC9C,IAAK,SAAUA,EAAS,kBAAmB,MAC3C,IAAK,UAAWA,EAAS,sBAE7B,IAAIP,EAAa50D,KAAK40D,UAAerzD,IAARnB,EAAmB,MAAM,MAClDoX,EAAKsH,IAAUo2C,EAAOC,EAAQP,EAAK,UACvC,OAAOh8C,EAAA,qBAAKlT,UAAW8R,GAClBxX,KAAKq1D,kBAGJ71D,iBACN,OAAOoZ,EAAA,qBAAKlT,UAAU,0BACjB1F,KAAKs1D,qBAGJ91D,oBACN,OAAOQ,KAAKwC,SAIb,MAAM+yD,UAAsBb,EAE/Bl1D,UAAUiB,GACoBT,KAAKwC,aAAhBjB,IAAXd,OAAqCc,EACrBd,EAAOT,KAAKkuC,KAAKhuC,OAItC,MAAMs1D,UAAsBd,EAE/Bl1D,UAAUiB,GACoBT,KAAKwC,aAAhBjB,IAAXd,OAAqCc,EACrBd,EAAOT,KAAKkuC,KAAKhuC,OAItC,MAAMu1D,UAAoBf,EAE7Bl1D,UAAUiB,GACN,QAAec,IAAXd,EAAsBT,KAAKwC,aAAUjB,MACpC,CACD,IAAIssB,EAAO7tB,KAAKkuC,KAAKrgB,KACS7tB,KAAKwC,QAAf,kBAATqrB,EAAkCptB,EAAOotB,QAChCtsB,GAGlB/B,iBACN,IAAIquB,KAACA,EAAIjH,IAAEA,GAAO5mB,KAAKkuC,KACnBlsC,EAA8B,kBAAT6rB,EAAmB7tB,KAAKwC,QAAUqrB,EAC3D,YAActsB,IAAVS,EAA4B4W,EAAA,0BAEzBA,EAAA,qBAAKlT,UAAU,SAEd1D,EAAMiH,IAAI,CAACxB,EAAMyB,IAAU0P,EAAA,cAACA,EAAA,SAAc,CAACtR,IAAK4B,GACnC,IAARA,EAAW,KAAM0P,EAAA,qBAAK9P,MAAO,CAAC6qC,MAAM,OAAQ+hB,aAAa,uBACzD98C,EAAA,cAAoBgO,EAAKnf,OAOvC,MAAMkuD,UAAyBjB,EAExBl1D,iBACN,IAAImnC,UAACA,GAAa3mC,KAAKkuC,KACvB,OAAOvH,EAEDnnC,aACN,IACI01D,EAAOC,EAaPP,GAdAx0D,MAACA,EAAKw1D,KAAEA,GAAQ51D,KAAKkuC,KAEzB,OAAQluC,KAAK20D,UAAUS,YACnB,IAAK,OAAQF,EAAQX,EAAiB,MACtC,IAAK,SAAUW,EAAQV,EAAkB,MACzC,IAAK,QAASU,EAAQT,EAE1B,OAAQz0D,KAAKkuC,KAAKinB,QACd,IAAK,MAAOA,EAAS,oBAAqB,MAC1C,QACA,IAAK,SAAUA,EAAS,qBAAsB,MAC9C,IAAK,SAAUA,EAAS,kBAAmB,MAC3C,IAAK,UAAWA,EAAS,sBAIzBP,GADS,IAATgB,EACM51D,KAAK40D,UAAerzD,IAARnB,EAAmB,MAAM,MAErC,QACV,IAAIoX,EAAKsH,IAAUo2C,EAAOC,EAAQP,EAAK,UACvC,OAAOh8C,EAAA,qBAAKlT,UAAW8R,GAClBxX,KAAKq1D,mBC7HX,MAAMQ,EAMTr2D,YAAYm1D,EAA0BnwD,GAClCxE,KAAK20D,UAAYA,EACjB30D,KAAKwE,MAAQA,EAEbxE,KAAK+xC,YAGDvyC,YACJQ,KAAKshC,KAAO,GACZ,IAAIw0B,GAAiB,EACrB,IAAK,IAAI5nB,KAAQluC,KAAKwE,MAClB,GAAoB,kBAAT0pC,EACPluC,KAAKshC,KAAK97B,KAAK,IAAI4uD,EAAQlmB,IAC3B4nB,GAAQ,MAEP,CAED,IAAIlvC,EACJ,OAFKkvC,GAAO91D,KAAKshC,KAAK97B,KAAK,IAAI0uD,GAEvBhmB,EAAK3lC,MACT,QAAS,SACT,IAAK,SAAUqe,EAAM,IAAI2uC,EAAcv1D,KAAK20D,UAAWzmB,GAAO,MAC9D,IAAK,SAAUtnB,EAAM,IAAI4uC,EAAcx1D,KAAK20D,UAAWzmB,GAAO,MAC9D,IAAK,OAAQtnB,EAAM,IAAI6uC,EAAYz1D,KAAK20D,UAAWzmB,GAAO,MAC1D,IAAK,YAAatnB,EAAM,IAAI+uC,EAAiB31D,KAAK20D,UAAWzmB,GAEjEluC,KAAKshC,KAAK97B,KAAKohB,GACfkvC,GAAQ,GAKpBt2D,UAAUiB,GACN,IAAK,IAAIomB,KAAK7mB,KAAKshC,KAAMza,EAAE9lB,UAAUN,GAGzCjB,SACI,OAAOQ,KAAKshC,KAAKr4B,IAAI,CAAC2d,EAAK1d,IAAU0d,EAAI3N,OAAOwtB,OAAOv9B,iBC7E/D,IAAa6sD,EAAb,cAA8Bn9C,EAAA,UAC1BpZ,SACI,IAAIkG,UAACA,EAAS47B,KAAEA,EAAI7gC,OAAEA,GAAUT,KAAKwE,MACjCwxD,EAAW,IAAIH,EAAS71D,KAAKwE,MAAO88B,GACxC00B,EAASj1D,UAAUN,GACnB,IAAI+W,EAAKsH,IAAW,kBAAmBpZ,GACvC,OAAOkT,EAAA,qBAAKlT,UAAW8R,GAClBw+C,EAAS/8C,YAPT88C,uUAAQ/lD,CAAA,CADpByI,EAAA,GACYs9C,GCdbn4D,EAAAE,EAAAC,EAAA,sBAAAg4D,wpBCyBA,MAAME,EASFzzD,cACI,OAAsB,IAAlBxC,KAAKuxD,SAA0BvxD,KAAKk2D,cAClB30D,IAAlBvB,KAAKk2D,SAA+Bl2D,KAAKk2D,SACtCl2D,KAAKk2D,SAAWl2D,KAAKm2D,iBAE1B32D,qDACoB+B,IAAlBvB,KAAKk2D,eACS30D,IAAdvB,KAAK8W,aACH9W,KAAK8W,WAfH9G,EAAA,CAAX6X,EAAA,kCAyBK,IAAauuC,EAAb,cAA0Bx9C,EAAA,UAQhCpZ,YAAYgF,GACR3E,MAAM2E,GAHUxE,KAAAsW,KAAc,GA2B1BtW,KAAAq2D,SAAW,CAAO7/C,GAAW5T,EAAA5C,UAAA,2BAC3BwW,EAAIlQ,QACVtG,KAAKs2D,YAAY/E,UAAW,EAC5B/6C,EAAI+6C,UAAW,EACfvxD,KAAKs2D,YAAc9/C,KA3BnB,IAAIoX,KAACA,EAAItX,KAAEA,EAAIigD,QAAEA,EAAOC,YAAEA,EAAWtJ,IAAEA,EAAGqE,SAAEA,GAAYvxD,KAAKwE,MAC7DxE,KAAK4tB,KAAOA,GAAQ,KACpB5tB,KAAKsW,KAAK9Q,QAAQ8Q,EAAKrN,IAAIhB,IACnB,IAAIuO,EAAM,IAAIy/C,EAOd,OANAz/C,EAAItW,KAAO+H,EAAE/H,KACbsW,EAAI+6C,UAAW,EACf/6C,EAAIsjB,QAAU7xB,EAAE6xB,QAChBtjB,EAAI2/C,eAAiBluD,EAAEzF,QACvBgU,EAAIigD,OAASxuD,EAAEwuD,OACfjgD,EAAIM,KAAO7O,EAAE6O,KACNN,KAGfxW,KAAKu2D,QAAUA,GAAW,WAC1Bv2D,KAAKw2D,YAAcA,EACnBx2D,KAAKktD,IAAMA,GAAO,8BACD3rD,IAAbgwD,IACAvxD,KAAKs2D,YAAct2D,KAAKsW,KAAKtO,KAAKC,GAAKA,EAAE/H,OAASqxD,SAE7BhwD,IAArBvB,KAAKs2D,cAA2Bt2D,KAAKs2D,YAAct2D,KAAKsW,KAAK,IACjEtW,KAAKs2D,YAAY/E,UAAW,EAUhC/xD,QAAQk3D,GACJ,IAAIlgD,EAAMxW,KAAKsW,KAAKtO,KAAKC,GAAKA,EAAE/H,OAASw2D,QAC7Bn1D,IAARiV,SACqBjV,IAArBvB,KAAKs2D,cAA2Bt2D,KAAKs2D,YAAY/E,UAAW,GAChE/6C,EAAI+6C,UAAW,EACfvxD,KAAKs2D,YAAc9/C,GAGvBhX,SACI,IAAIgY,EAAKsH,IAAW,MAAO,OAAS9e,KAAK4tB,MACzC,OAAOhV,EAAA,qBAAKlT,UAAW8R,GACnBoB,EAAA,qBAAKlT,UAAW1F,KAAKw2D,aAChBx2D,KAAKsW,KAAKrN,IAAI,CAAChB,EAAEiB,KACd,IAAIJ,EAA0B,CAC1B6tD,SAAsB,IAAb1uD,EAAEspD,cAAiBhwD,EAAY,QAC5C,OAAOqX,EAAA,qBAAKtR,IAAK4B,EAAOJ,MAAOA,GAAQb,EAAEzF,YAGjDoW,EAAA,qBAAKlT,UAAWoZ,IAAW9e,KAAKu2D,QAASv2D,KAAKktD,KAAMpkD,MAAO,CAACigD,OAAQ/oD,KAAK4tB,OACpE5tB,KAAKsW,KAAKrN,IAAI,CAAChB,EAAEiB,KACd,IACI0tD,GADArF,SAACA,EAAQz3B,QAAEA,EAAO28B,OAAEA,GAAUxuD,EAElC,QAAe1G,IAAXk1D,EAAsB,CACtB,IAAItR,EAAMsR,EAAOxsD,WACL1I,IAAR4jD,IACIA,EAAM,EAAGyR,EAAeh+C,EAAA,uBAAIusC,EAAI,GAAG,MAAMA,GACpCA,EAAM,IAAGyR,EAAeh+C,EAAA,mBAAGlT,UAAU,UAGtD,OAAOkT,EAAA,qBAAKtR,IAAK4B,EAAOxD,UAAU,GAAGX,QAAS,IAAI/E,KAAKq2D,SAASpuD,IAC5D2Q,EAAA,qBAAKlT,UAAU,qBACVkxD,EACA98B,EAAQy3B,WAnErBvhD,EAAA,CAAX6X,EAAA,qCACW7X,EAAA,CAAX6X,EAAA,8BANkBuuC,EAAIpmD,EAAA,CAA1ByI,EAAA,GAAsB29C,qoBCpCPpmD,CAAA,CAAX6X,EAAA,GAXE,cAAyBjP,EAAA,UAa5BpZ,YAAYgF,GACR3E,MAAM2E,GAbFxE,KAAAulB,OAAsB,CAC1B,CAACrlB,KAAK,OAAQqI,KAAK,UACnB,CAACrI,KAAK,OAAQqI,KAAK,UAEfvI,KAAAkqD,SAAoB,CACxBloD,MAAO,CACHsoC,KAAM,CAACwf,OAAO,OAAQ1pD,MAAM,eAAM+zB,YAAY,0DAC9C9zB,KAAM,CAACypD,OAAO,QAAS1pD,MAAM,kBAc7BJ,KAAAuzD,cAAgB,EAAO1gC,EAAuBO,EAAcu/B,IAAgB/vD,EAAA5C,UAAA,qBAChF,IAAIE,KAACA,GAAQ2yB,QACPgb,EAAA,EAAQgpB,YAAY32D,EAAMkzB,GAChCpzB,KAAKkS,KAAKhS,GAAQkzB,EAClBzzB,EAAA,IAAI4J,KAAKrJ,GAAQkzB,EACjBzzB,EAAA,IAAIiO,mBAZJ,IAAI08B,KAACA,EAAIjqC,KAAEA,GAAQV,EAAA,IAAI4J,KACvBvJ,KAAKkS,KAAO,CACRo4B,KAAMA,EACNjqC,KAAMA,GAYdb,SACI,OAAOoZ,EAAA,cAACjZ,EAAA,KAAI,CAAC8F,OAAO,4BAChBmT,EAAA,cAACjZ,EAAA,KAAI,CAAC4lB,OAAQvlB,KAAKulB,OAAQ2kC,SAAUlqD,KAAKkqD,SACtCh4C,KAAMlS,KAAKkS,KACXqhD,cAAevzD,KAAKuzD,iYC/BrB,MAAMuD,UAAuBvyD,EAAA,UAA5C/E,kCACYQ,KAAA+2D,MAAQ,KAAWn0D,EAAA5C,UAAA,qBACvBA,KAAKwE,MAAMG,aACX,MAAMgX,QAACA,EAAOrP,IAAEA,EAAG3L,QAAEA,EAAO2O,QAAEA,EAAOC,OAAEA,GAAUvP,KAAKwE,YAChD1E,OAAAk3D,EAAA,EAAAl3D,CAAW6b,EAASrP,EAAK3L,EAAS2O,EAASC,MAE7CvP,KAAAqgB,MAAQ,KAAWzd,EAAA5C,UAAA,qBACvBA,KAAKwE,MAAMG,gBAEfnF,SACI,IAEIy3D,GAFAnwD,MAACA,EAAKwF,IAAEA,GAAOtM,KAAKwE,MAGxB,GAAqB,kBAAVsC,EAAoB,CAC3B,IAAID,EAAM,GACV,IAAK,IAAIe,KAAKd,EACVD,EAAIrB,KAAKjB,EAAA,oBAAI+C,IAAKM,GAAGrD,EAAA,2BAAQqD,GAAUrD,EAAA,yBAAMuC,EAAMc,MAEvDqvD,EAAa1yD,EAAA,wBAAKsC,QAGlBowD,EAAa1yD,EAAA,yBAAMuC,GAEvB,OAAOvC,EAAA,wBACHA,EAAA,yBAASmB,UAAU,kBACfnB,EAAA,6BACIA,EAAA,qBAAMmB,UAAU,YACZnB,EAAA,iEACAA,EAAA,iEACAA,EAAA,iCAAW+H,GACV2qD,EACD1yD,EAAA,qBAAKmB,UAAU,OACXnB,EAAA,wBAAQgE,KAAK,SAASxD,QAAS/E,KAAK+2D,OAAK,mBACzCxyD,EAAA,wBAAQgE,KAAK,SAASxD,QAAS/E,KAAKqgB,OAAK,qDCnCrEziB,EAAAE,EAAAC,EAAA,sBAAAm5D,IAAO,MAAMC,EAGT33D,YAAYU,GAAeF,KAAKE,KAAOA,EACvCV,MACI,QAAmB+B,IAAfvB,KAAKqY,MAAqB,OAAOrY,KAAKqY,MAC1C,IAAIpQ,EAAIoS,aAAaC,QAAQta,KAAKE,MAClC,OAAOF,KAAKqY,MAAc,OAANpQ,OAAa1G,EAAYmM,KAAK6M,MAAMtS,GAE5DzI,IAAI6Y,GACKA,GACLrY,KAAKqY,MAAQA,EACbgC,aAAac,QAAQnb,KAAKE,KAAMwN,KAAKC,UAAU0K,KAFjCrY,KAAKmH,QAIvB3H,QACIQ,KAAKqY,WAAQ9W,EACb8Y,aAAaW,WAAWhb,KAAKE,OAI9B,MAAMg3D,EAAb13D,cACIQ,KAAAuJ,KAAO,IAAI4tD,EAAW,QACtBn3D,KAAA+J,MAAQ,IAAIotD,EAAY,SACxBn3D,KAAAgL,KAAO,IAAImsD,EAAW,QACtBn3D,KAAAuF,QAAU,IAAI4xD,EAAc,WAE5B33D,cACI,CACIQ,KAAKuJ,KACLvJ,KAAKgL,MACP/B,IAAInL,GAAKA,EAAEqJ,+CCpCrBiwD,EAAAC,QAAiBz5D,EAAA+J,EAAuB,ujBCmJjC,MAAM2vD,EAAU,IAhJvB,cAAsBC,EAAA,UACZ/3D,mDACF,aAAaQ,KAAKiK,IAAI,cAAe,CAAC3D,MAAM,EAAGgW,SAAS,OAGtD9c,+CACF,aAAaQ,KAAKiK,IAAI,WAAY,CAAC3D,MAAM,EAAGgW,SAAS,OAGnD9c,KAAKwL,2CACP,aAAahL,KAAKiK,IAAI,WAAY,CAACe,KAAKA,MAGtCxL,OAAOwL,EAAauhB,EAAY3Y,2CAClC,aAAa5T,KAAKiK,IAAI,cAAe,CAACe,KAAKA,EAAMuhB,IAAIA,EAAK3Y,QAAQA,MAGhEpU,OAAOU,2CACT,aAAaF,KAAKiK,IAAI,cAAe,CAAC/J,KAAKA,MAGzCV,yDACF,aAAaQ,KAAKiK,IAAI,uBAAwB,MAG5CzK,YAAYg4D,EAAejvD,EAAa/F,2CAC1C,IAAIwI,KAACA,GAAQusD,EAAA,WAEb,aAAav3D,KAAKkc,KAAK,mBAAoB,CACvC3T,KAAMA,EACNkvD,SAAUzsD,EACV0sD,QAJW,EAKXF,OAAQA,EACRh1D,QAASA,MAIXhD,KAAKwL,2CACP,aAAahL,KAAKiK,IAAI,QAAS,CAACe,KAAKA,MAGnCxL,gBAAgBwL,2CAClB,aAAahL,KAAKiK,IAAI,oBAAqB,CAACe,KAAKA,MAG/CxL,WAAWwL,2CACb,aAAahL,KAAKiK,IAAI,cAAe,CAACe,KAAKA,MAGzCxL,aAAam4D,EAAe3sD,EAAa4sD,EAAgBC,2CAC3D,aAAa73D,KAAKkc,KAAK,iBAAkB,CAACy7C,OAAOA,EAAQ3sD,KAAKA,EAAM4sD,QAAQA,EAASC,QAAQA,MAG3Fr4D,aAAa+J,EAAayB,EAAa4sD,EAAgBC,2CACzD,aAAa73D,KAAKkc,KAAK,iBAAkB,CAAC3S,KAAKA,EAAMyB,KAAKA,EAAM4sD,QAAQA,EAASC,QAAQA,MAGvFr4D,SAASwL,2CACX,aAAahL,KAAKiK,IAAI,YAAa,CAACe,KAAKA,MAGvCxL,WAAWwL,EAAauhB,2CAE1B,aADgBvsB,KAAKkc,KAAK,eAAgB,CAAClR,KAAKA,EAAMuhB,IAAIA,MAIxD/sB,cAAcwL,EAAauhB,EAAYshC,iDACnC7tD,KAAKkc,KAAK,kBAAmB,CAAClR,KAAKA,EAAMuhB,IAAIA,EAAKshC,QAAQA,MAG9DruD,eAAewL,EAAakjC,EAAa71B,iDACrCrY,KAAKkc,KAAK,mBAAoB,CAAClR,KAAKA,EAAMkjC,KAAKA,EAAM71B,MAAMA,MAG/D7Y,UAAUwL,EAAa1D,EAAY+U,EAAeC,2CACpD,aAAatc,KAAKiK,IAAI,kBAAmB,CAACe,KAAKA,EAAM1D,IAAIA,EAAK+U,UAAUA,EAAWC,SAASA,MAG1F9c,UAAUwL,2CACZ,aAAahL,KAAKiK,IAAI,aAAc,CAACe,KAAKA,MAGxCxL,YAAYwL,EAAa9K,EAAamsB,2CACxC,aAAarsB,KAAKkc,KAAK,gBAAiB,CAAClR,KAAKA,EAAM9K,KAAKA,EAAMmsB,YAAYA,MAGzE7sB,mBAAmBwL,EAAai7B,EAAaiI,EAAa71B,iDACtDrY,KAAKkc,KAAK,wBAAyB,CAAClR,KAAKA,EAAMi7B,KAAKA,EAAMiI,KAAKA,EAAM71B,MAAMA,MAG/E7Y,aAAawL,EAAai7B,2CAC5B,aAAajmC,KAAKiK,IAAI,iBAAkB,CAACe,KAAKA,EAAMi7B,KAAKA,MAGvDzmC,gBAAgBwL,EAAai7B,EAAa6xB,iDACtC93D,KAAKkc,KAAK,qBAAsB,CAAClR,KAAKA,EAAMi7B,KAAKA,EAAM6xB,KAAKA,MAGhEt4D,YAAYwL,EAAai7B,EAAa3+B,EAAY+U,EAAkBC,2CACtE,aAAatc,KAAKiK,IAAI,eAAgB,CAACe,KAAKA,EAAMi7B,KAAKA,EAAM3+B,MAAK+U,YAAWC,eAG3E9c,iBAAiBwL,EAAa+sD,EAAeC,iDACzCh4D,KAAKkc,KAAK,qBAAsB,CAAClR,KAAKA,EAAM+sD,OAAOA,EAAQC,SAASA,MAGxEx4D,gBAAgBwL,EAAa+sD,2CAC/B,aAAa/3D,KAAKiK,IAAI,oBAAqB,CAACe,KAAKA,EAAM+sD,OAAOA,MAG5Dv4D,mBAAmBwL,EAAa+sD,EAAeE,iDAC3Cj4D,KAAKkc,KAAK,wBAAyB,CAAClR,KAAKA,EAAM+sD,OAAOA,EAAQE,MAAMA,MAGxEz4D,UAAUwL,EAAa1D,EAAY+U,EAAkBC,2CACvD,aAAatc,KAAKiK,IAAI,aAAc,CAACe,KAAMA,EAAM1D,IAAIA,EAAK+U,UAAUA,EAAWC,SAASA,MAEtF9c,aAAawL,EAAa1D,EAAY+U,EAAkBC,2CAC1D,aAAatc,KAAKiK,IAAI,iBAAkB,CAACe,KAAMA,EAAM1D,IAAIA,EAAK+U,UAAUA,EAAWC,SAASA,MAE1F9c,gBAAgBwL,EAAauhB,EAAYlQ,EAAkBC,2CAC7D,aAAatc,KAAKiK,IAAI,qBAAsB,CAACe,KAAMA,EAAMuhB,IAAIA,EAAKlQ,UAAUA,EAAWC,SAASA,MAE9F9c,gBAAgBwL,EAAazB,EAAa8S,EAAkBC,2CAC9D,aAAatc,KAAKiK,IAAI,qBAAsB,CAACe,KAAMA,EAAMzB,KAAKA,EAAM8S,UAAUA,EAAWC,SAASA,MAEhG9c,iBAAiBwL,EAAauhB,EAAYjlB,EAAY+U,EAAkBC,2CAC1E,aAAatc,KAAKiK,IAAI,sBAAuB,CAACe,KAAMA,EAAMuhB,IAAIA,EAAKjlB,IAAIA,EAAK+U,UAAUA,EAAWC,SAASA,MAExG9c,iBAAiBwL,EAAazB,EAAajC,EAAY+U,EAAkBC,2CAC3E,aAAatc,KAAKiK,IAAI,sBAAuB,CAACe,KAAMA,EAAMzB,KAAKA,EAAMjC,IAAIA,EAAK+U,UAAUA,EAAWC,SAASA,MAE1G9c,YAAYwL,EAAauhB,EAAYhjB,EAAazD,iDAC9C9F,KAAKkc,KAAK,qBAAsB,CAAClR,KAAMA,EAAMuhB,IAAIA,EAAKhjB,KAAKA,EAAMzD,KAAKA,MAG1EtG,YAAY8H,2CACd,aAAatH,KAAKiK,IAAI,oBAAqB,CAAC3C,IAAIA,MAE9C9H,YAAYwL,EAAazB,iDACrBvJ,KAAKkc,KAAK,gBAAiB,CAAClR,KAAKA,EAAMzB,KAAKA,QAIvB,WAAOhI,4QCnCnC,MAAM22D,EAAS,IA9GtB,cAAqBX,EAAA,UACX/3D,uDAEF,aADgBQ,KAAKiK,IAAI,sBAAkB1I,KAGzC/B,OAAOwL,2CACT,aAAahL,KAAKiK,IAAI,SAAU,CAACe,KAAKA,MAEpCxL,IAAI8D,2CACN,aAAatD,KAAKiK,IAAI,MAAO,CAAC3G,GAAGA,MAE/B9D,GAAG8D,2CACL,aAAatD,KAAKiK,IAAI,KAAM,CAAC3G,GAAGA,MAE9B9D,OAAO8D,2CACT,aAAatD,KAAKiK,IAAI,SAAU,CAAC3G,GAAGA,MAElC9D,KAAK8D,2CACP,aAAatD,KAAKiK,IAAI,OAAQ,CAAC3G,GAAGA,MAEhC9D,KAAKwL,EAAasR,EAAgB,4CACpC,aAAatc,KAAKiK,IAAI,OAAQ,CAACe,KAAKA,EAAMsR,SAAUA,MAElD9c,IAAIwL,EAAasR,EAAgB,4CACnC,aAAatc,KAAKiK,IAAI,MAAO,CAACe,KAAKA,EAAMsR,SAAUA,MAEjD9c,MAAMwL,EAAasR,EAAgB,4CACrC,aAAatc,KAAKiK,IAAI,QAAS,CAACe,KAAKA,EAAMsR,SAAUA,MAEnD9c,QAAQwL,EAAasR,EAAgB,4CACvC,aAAatc,KAAKiK,IAAI,UAAW,CAACe,KAAKA,EAAMsR,SAAUA,MAErD9c,MAAMwL,EAAasR,EAAgB,4CACrC,aAAatc,KAAKiK,IAAI,QAAS,CAACe,KAAKA,EAAMsR,SAAUA,MAEnD9c,SAASwL,EAAasR,EAAgB,4CACxC,aAAatc,KAAKiK,IAAI,WAAY,CAACe,KAAKA,EAAMsR,SAAUA,MAEtD9c,QAAQiB,2CACV,aAAaT,KAAKkc,KAAK,WAAYzb,KAEjCjB,OAAOiB,2CACT,aAAaT,KAAKkc,KAAK,UAAWzb,KAEhCjB,QAAQiB,2CACV,aAAaT,KAAKkc,KAAK,WAAYzb,KAEjCjB,WAAWiB,2CACb,aAAaT,KAAKkc,KAAK,cAAezb,KAEpCjB,YAAYiB,2CACd,aAAaT,KAAKkc,KAAK,eAAgBzb,KAErCjB,OAAOwL,EAAY1H,2CACrB,aAAatD,KAAKkc,KAAK,UAAW,CAAClR,KAAKA,EAAM1H,GAAGA,MAE/C9D,MAAMwL,EAAY1H,2CACpB,aAAatD,KAAKkc,KAAK,SAAU,CAAClR,KAAKA,EAAM1H,GAAGA,MAE9C9D,OAAOwL,EAAY1H,2CACrB,aAAatD,KAAKkc,KAAK,UAAW,CAAClR,KAAKA,EAAM1H,GAAGA,MAE/C9D,UAAUwL,EAAY1H,2CACxB,aAAatD,KAAKkc,KAAK,aAAc,CAAClR,KAAKA,EAAM1H,GAAGA,MAElD9D,QAAQwL,EAAY1H,2CACtB,aAAatD,KAAKkc,KAAK,WAAY,CAAClR,KAAKA,EAAM1H,GAAGA,MAEhD9D,WAAWwL,EAAY1H,2CACzB,aAAatD,KAAKkc,KAAK,cAAe,CAAClR,KAAKA,EAAM1H,GAAGA,MAEnD9D,WAAW+sB,2CACb,aAAavsB,KAAKiK,IAAI,UAAW,CAACsiB,IAAKA,MAErC/sB,UAAUwL,EAAYuhB,EAAW/R,2CACnC,IAAI29C,OACQ52D,IAARiZ,IACA29C,EAAU39C,EAAIvR,IAAIhB,GAAKw+B,OAAOx+B,EAAE3E,IAAI,IAAI2E,EAAEsT,OAAOO,KAAK,MAAMA,KAAK,YAE/D9b,KAAKkc,KAAK,cAAe,CAAClR,KAAKA,EAAMuhB,IAAIA,EAAK/R,IAAI29C,MAEtD34D,SAASwL,EAAY1D,EAAW+U,EAAiBC,2CACnD,aAAatc,KAAKiK,IAAI,YAAa,CAACe,KAAKA,EAAM1D,IAAIA,EAAK+U,UAAUA,EAAWC,SAASA,MAEpF9c,SAASwL,2CACX,aAAahL,KAAKiK,IAAI,SAAU,CAACe,KAAKA,MAEpCxL,UAAUwL,EAAY1D,EAAW+U,EAAiBC,2CACpD,aAAatc,KAAKiK,IAAI,aAAc,CAACe,KAAKA,EAAM1D,IAAIA,EAAK+U,UAAUA,EAAWC,SAASA,MAErF9c,aAAawL,EAAY1D,EAAW+U,EAAiBC,2CACvD,aAAatc,KAAKiK,IAAI,gBAAiB,CAACe,KAAKA,EAAM1D,IAAIA,EAAK+U,UAAUA,EAAWC,SAASA,MAExF9c,WAAWwL,EAAY1D,EAAW+U,EAAiBC,2CACrD,aAAatc,KAAKiK,IAAI,cAAe,CAACe,KAAKA,EAAM1D,IAAIA,EAAK+U,UAAUA,EAAWC,SAASA,MAKtF9c,eAAewL,EAAagJ,2CAC9B,aAAahU,KAAKiK,IAAI,cAAe,CAACe,KAAKA,EAAMgJ,GAAGA,MAElDxU,kBAAkBwL,EAAaotD,EAAgBlqB,EAAa71B,2CAC9D,aAAarY,KAAKkc,KAAK,sBAAuB,CAAClR,KAAKA,EAAMotD,QAAQA,EAASlqB,KAAKA,EAAM71B,MAAMA,MAE1F7Y,cAAcwL,EAAagJ,2CAC7B,aAAahU,KAAKiK,IAAI,kBAAmB,CAACe,KAAKA,EAAMgJ,GAAGA,QAI/B,eAAWzS,olBC3GrC,MAAM82D,EAET74D,YAAY84D,GAIAt4D,KAAAqW,SAAiB9U,EACjBvB,KAAAu4D,YAAsBh3D,EACtBvB,KAAAw4D,YAAsBj3D,EACtBvB,KAAAy4D,aAAuBl3D,EAN/BvB,KAAKs4D,MAAQA,EAQX94D,+CACF,IAAIwL,EAAOhL,KAAKs4D,MAAMttD,KACtB,QAAazJ,IAATyJ,EAAoB,OACxB,QAAgBzJ,IAAZyJ,EAAK1H,GAAkB,OAC3B,QAAoB/B,IAAhBvB,KAAKw4D,OAAsB,OAC/B,IAAIr2C,QAAYm1C,EAAQoB,WAAW1tD,EAAK1H,IACpCi1D,EAAqB,GACrBC,EAAqB,GACrBC,EAAsB,GAC1Bt2C,EAAIpM,QAAQ4iD,IACR,IAAIf,QAACA,EAAOC,QAAEA,GAAWc,EACT,IAAZf,GAA6B,IAAZC,EACjBY,EAAQjzD,KAAKmzD,IAEG,IAAZf,GAAeW,EAAO/yD,KAAKmzD,GACf,IAAZd,GAAeW,EAAOhzD,KAAKmzD,MAGvC34D,KAAKu4D,OAASA,EACdv4D,KAAKw4D,OAASA,EACdx4D,KAAKy4D,QAAUA,IAGXj5D,UAAUuC,GACd,IAAImH,EAAQnH,EAAI+f,UAAU7Z,GAAKA,EAAE3E,KAAKtD,KAAKqW,IAAI/S,IAC3C4F,GAAQ,GAAGnH,EAAI4iB,OAAOzb,EAAO,GAG/B1J,aAAao4D,EAAgBC,2CAC/B,IAAIxhD,EAAMrW,KAAKqW,IACfA,EAAIuhD,QAAUA,EACdvhD,EAAIwhD,QAAUA,EACd,IAAIe,EAAWviD,EAAI/S,GAAIoI,EAAS1L,KAAKs4D,MAAMttD,KAAK1H,SAC1Cg0D,EAAQuB,aAAaD,EAAUltD,EAAQksD,EAASC,GACtD73D,KAAK84D,UAAU94D,KAAKu4D,QACpBv4D,KAAK84D,UAAU94D,KAAKw4D,QACpBx4D,KAAK84D,UAAU94D,KAAKy4D,SACJ,IAAZb,GAA6B,IAAZC,EACjB73D,KAAKy4D,QAAQj0C,QAAQnO,IAEL,IAAZuhD,GAAe53D,KAAKu4D,OAAO/zC,QAAQnO,GACvB,IAAZwhD,GAAe73D,KAAKw4D,OAAOh0C,QAAQnO,MAIzC7W,OAAO+J,EAAaquD,EAAgBC,2CACtC,IAAIkB,QAAczB,EAAQ0B,aAAazvD,EAAMvJ,KAAKs4D,MAAMttD,KAAK1H,GAAIs0D,EAASC,GAC1E,QAAct2D,IAAVw3D,EAAqB,CACrB,IAAI1iD,EAAMrW,KAAKqW,IAAM0iD,EACrB/4D,KAAK84D,UAAU94D,KAAKu4D,QACpBv4D,KAAK84D,UAAU94D,KAAKw4D,QACpBx4D,KAAK84D,UAAU94D,KAAKy4D,SACJ,IAAZb,GAA6B,IAAZC,EACjB73D,KAAKy4D,QAAQj0C,QAAQnO,IAEL,IAAZuhD,GAAe53D,KAAKu4D,OAAO/zC,QAAQnO,GACvB,IAAZwhD,GAAe73D,KAAKw4D,OAAOh0C,QAAQnO,IAG/C,OAAO0iD,KAhEC/oD,EAAA,CAAX6X,EAAA,6BACW7X,EAAA,CAAX6X,EAAA,gCACW7X,EAAA,CAAX6X,EAAA,gCACW7X,EAAA,CAAX6X,EAAA,knBCCE,MAAeoxC,EAGlBz5D,YAAY84D,EAAaY,GAKbl5D,KAAAgC,WAAaT,EACbvB,KAAAqW,SAAS9U,EALjBvB,KAAKs4D,MAAQA,EACbt4D,KAAKk5D,IAAMA,EAMT15D,+CACD,IAAIqB,QAAYb,KAAKm5D,QACrBn5D,KAAKgC,MAAQnB,IAGZrB,QAAQiI,2CACV,IAAIhH,EAAa,QACAc,IAAbvB,KAAKqW,IACLyE,EAAAnI,EAAE9J,OAAOpI,EAAQT,KAAKqW,IAAK5O,GAG3BqT,EAAAnI,EAAE9J,OAAOpI,EAAQgH,GAGrBhH,EAAOuK,KAAOvD,EAAKuD,KAAOhL,KAAKs4D,MAAMttD,KAAK1H,GAC1C,IAAIA,QAAWtD,KAAKo5D,MAAM34D,GAC1B,QAAiBc,IAAbvB,KAAKqW,IAAmB,CACxB,GAAW,IAAP/S,EAAU,OAAO,EACrB7C,EAAO6C,GAAKA,OACO/B,IAAfvB,KAAKgC,OAAqBhC,KAAKgC,MAAMwiB,QAAQ/jB,GACjDT,KAAKq5D,OACLr5D,KAAKqW,IAAMvW,OAAA+nB,EAAA,EAAA/nB,CAAWW,QAGtBqa,EAAAnI,EAAE9J,OAAO7I,KAAKqW,IAAK5V,GAEvB,OAAO,IAELjB,MAAMiI,2CACR,OAAO,IAELjI,KAAKiI,2CACP,IAAIhH,EAAa,GACjBqa,EAAAnI,EAAE9J,OAAOpI,EAAQgH,GAEjBhH,EAAOuK,KAAOvD,EAAKuD,KAAOhL,KAAKs4D,MAAMttD,KAAK1H,GAC1C,IAAIA,QAAWtD,KAAKo5D,MAAM34D,GAC1B,GAAW,IAAP6C,EAEJ,OADA7C,EAAO6C,GAAKA,EACL7C,IAGLjB,8CACF,IAAIoW,EAAI5V,KAAKqW,IACb,QAAU9U,IAANqU,EAAiB,OACrB,IAAItS,EAAKsS,EAAEtS,GAEX,SADMtD,KAAKs5D,KAAK1jD,QACGrU,IAAfvB,KAAKgC,MAAqB,OAC9B,IAAIkH,EAAQlJ,KAAKgC,MAAM8f,UAAU7Z,GAAKA,EAAE3E,KAAOA,GAC3C4F,GAAO,IACPlJ,KAAKgC,MAAM2iB,OAAOzb,EAAO,GACzBlJ,KAAKu5D,WAtDDC,EAAA,CAAX3xC,EAAA,+BACW2xC,EAAA,CAAX3xC,EAAA,6BA6DL,MAAM4xC,UAAaR,EAAnBz5D,kCACgBQ,KAAAwa,SAAqBjZ,EACrBvB,KAAA05D,iBAA6Bn4D,EAEzB/B,gDACZ,aAAa04D,EAAOJ,KAAK93D,KAAKs4D,MAAMttD,KAAK1H,MAE7B9D,MAAMiI,2CAClB,aAAaywD,EAAOyB,QAAQlyD,KAEhBjI,KAAKiI,iDACXywD,EAAO0B,OAAO55D,KAAKs4D,MAAMttD,KAAK1H,GAAImE,EAAKnE,MAEvC9D,OAASQ,KAAKk5D,IAAIW,OAAOttC,MACzB/sB,OAASQ,KAAKk5D,IAAIW,OAAOttC,MAEtB/sB,qDACT,IAAIqB,QAAYq3D,EAAOx5C,WAAW1e,KAAKqW,IAAI/S,IAC3CtD,KAAKwa,IAAM3Z,IAEFrB,SAAS8H,2CAClBtH,KAAK05D,kBAAoBxB,EAAO4B,SAAS95D,KAAKs4D,MAAMttD,KAAK1H,GAAIgE,EAAK,EAAGyyD,KAE5Dv6D,UAAUgb,EAAoC1U,2CACvD,IAAIk0D,EAAwCh6D,KAAKwa,IAAIvR,IAAIhB,IACrD,IAAI3E,GAACA,EAAEiY,OAAEA,GAAUtT,EACnB,MAAO,CAAC3E,GAAIA,EAAIiY,OAAQ,CAACA,MAE7B,IAAK,IAAIvH,KAAMwG,EAAK,CAChB,IAAItR,EAAQ8wD,EAAOl4C,UAAU7Z,GAAKA,EAAE3E,KAAO0Q,EAAG1Q,KACjC,IAATwC,EACIoD,EAAQ,GAAG8wD,EAAOx1C,QAAQxQ,GAG9BgmD,EAAOr1C,OAAOzb,EAAO,SAGvBgvD,EAAO+B,UAAUj6D,KAAKs4D,MAAMttD,KAAK1H,GAAItD,KAAKqW,IAAI/S,GAAI02D,GACxD,IAAK,IAAIhmD,KAAMwG,EAAK,CAChB,IAAItR,EAAQlJ,KAAKwa,IAAIsH,UAAUnP,GAAKA,EAAErP,KAAO0Q,EAAG1Q,IAEhD,GADI4F,GAAO,GAAGlJ,KAAKwa,IAAImK,OAAOzb,EAAO,IACxB,IAATpD,QACyBvE,IAArBvB,KAAK05D,YAA2B,CAChC,IAAI1xD,EAAOhI,KAAK05D,YAAY1xD,KAAK2K,GAAKA,EAAErP,KAAO0Q,EAAG1Q,SACrC/B,IAATyG,GAAoBhI,KAAKwa,IAAIgK,QAAQxc,QA3C7CwxD,EAAA,CAAX3xC,EAAA,6BACW2xC,EAAA,CAAX3xC,EAAA,qCAoDL,MAAMqyC,UAAYjB,EACEz5D,gDAEZ,aADgB04D,EAAO19C,IAAIxa,KAAKs4D,MAAMttD,KAAK1H,MAG/B9D,MAAMiI,2CAKlB,aAAaywD,EAAOiC,OAAO1yD,KAEfjI,KAAKiI,iDACXywD,EAAOkC,MAAMp6D,KAAKs4D,MAAMttD,KAAK1H,GAAImE,EAAKnE,MAEtC9D,OAASQ,KAAKk5D,IAAIW,OAAO7lD,KACzBxU,OAASQ,KAAKk5D,IAAIW,OAAO7lD,MAGvC,MAAMqmD,UAAcpB,EACAz5D,gDAEZ,aADgB04D,EAAOoC,MAAMt6D,KAAKs4D,MAAMttD,KAAK1H,MAGjC9D,MAAMiI,2CAClB,aAAaywD,EAAOqC,QAAQ9yD,KAEhBjI,KAAKiI,iDACXywD,EAAOsC,OAAOx6D,KAAKs4D,MAAMttD,KAAK1H,GAAImE,EAAKnE,MAEvC9D,OAASQ,KAAKk5D,IAAIW,OAAOY,MACzBj7D,OAASQ,KAAKk5D,IAAIW,OAAOY,MAC7Bj7D,MAAMiI,2CACR,IAAI8d,OAACA,GAAU9d,EACf,IACI,IAAIsD,EAAO2C,KAAK6M,MAAMgL,GACtB,IAAK,IAAI3d,KAAKmD,EAAM,CAChB,IAAIk5B,EAAOl5B,EAAKnD,GAChB,IAAK,IAAI1F,KAAS+hC,EAAM,CACpB,IAAI17B,KAACA,GAAQrG,EACb,GAAI,CAAC,KAAM,SAAU,SAAU,SAASgjB,QAAQ3c,GAAQ,EAOpD,MANa,SAATA,EACA4gB,MAAM,iHAGNA,MAAM,8CAAa5gB,IAEhB,GAInB,OAAO,EAEX,MAAO1B,GAEH,OADAsiB,MAAMtiB,EAAI2B,UACH,MAKnB,MAAMkyD,UAAgBzB,EACFz5D,gDACZ,aAAa04D,EAAOyC,QAAQ36D,KAAKs4D,MAAMttD,KAAK1H,MAEhC9D,MAAMiI,2CAClB,aAAaywD,EAAO0C,WAAWnzD,KAEnBjI,KAAKiI,iDACXywD,EAAO2C,UAAU76D,KAAKs4D,MAAMttD,KAAK1H,GAAImE,EAAKnE,MAE1C9D,OAASQ,KAAKk5D,IAAIW,OAAOiB,SACzBt7D,OAASQ,KAAKk5D,IAAIW,OAAOiB,UAiBvC,MAAMC,UAAiB9B,EACHz5D,gDACZ,aAAa04D,EAAO8C,SAASh7D,KAAKs4D,MAAMttD,KAAK1H,MAEjC9D,MAAMiI,2CAClB,aAAaywD,EAAO+C,YAAYxzD,KAEpBjI,KAAKiI,iDACXywD,EAAOgD,WAAWl7D,KAAKs4D,MAAMttD,KAAK1H,GAAImE,EAAKnE,MAE3C9D,OAASQ,KAAKk5D,IAAIW,OAAOzB,UACzB54D,OAASQ,KAAKk5D,IAAIW,OAAOzB,UAC7B54D,WAAW0uC,EAAa71B,2CAC1B,IAAIxX,QAAYq3D,EAAOiD,kBAAkBn7D,KAAKs4D,MAAMttD,KAAK1H,GAAItD,KAAKqW,IAAI/S,GAAI4qC,EAAM71B,GAChF,OAAQ61B,GACJ,IAAK,MAAOluC,KAAKqW,IAAI/J,IAAM+L,EAAO,MAClC,IAAK,UAAWrY,KAAKqW,IAAInC,QAAUmE,EAAO,MAC1C,IAAK,SAAUrY,KAAKqW,IAAIykD,OAASziD,EAAO,MACxC,IAAK,KAAMrY,KAAKqW,IAAIxC,GAAKwE,EAAO,MAChC,IAAK,UAAWrY,KAAKqW,IAAI+kD,QAAU/iD,EAAO,MAC1C,IAAK,aAAcrY,KAAKqW,IAAIglD,WAAahjD,EAE7C,OAAOxX,IAELrB,eAAewU,2CACjB,IAAInT,QAAYq3D,EAAOoD,eAAet7D,KAAKs4D,MAAMttD,KAAK1H,GAAI0Q,GAC1DhU,KAAKgC,MAAQnB,EAAI,MAIzB,MAAMk5D,EAAiB,GAEvB,MAAMwB,EAKF/7D,YAAY84D,EAAaY,EAASxtC,GAMtB1rB,KAAAgC,WAAaT,EACzBvB,KAAA6jB,WAAqB,EAEb7jB,KAAAqc,UAAY,EARhBrc,KAAKs4D,MAAQA,EACbt4D,KAAKk5D,IAAMA,EACXl5D,KAAK0rB,OAASA,EAQZlsB,MAAM8H,2CACRtH,KAAKsH,IAAMA,EACXtH,KAAKgC,WAAQT,EACbvB,KAAK6jB,WAAY,EACjB7jB,KAAKqc,UAAY,QACXrc,KAAK0kB,SAGTllB,+CACF,IAAuB,IAAnBQ,KAAK6jB,UAAoB,OAC7B,IAAIhjB,QAAYb,KAAK0rB,OAAO1rB,KAAKs4D,MAAMttD,KAAK1H,GAAItD,KAAKsH,IAAKtH,KAAKqc,UAAW09C,GACtElyD,EAAMhH,EAAI2F,OACVqB,EAAMkyD,GACN/5D,KAAK6jB,WAAY,IACfhc,EACFhH,EAAI8jB,OAAO9c,EAAK,IAGhB7H,KAAK6jB,WAAY,EAEjBhc,EAAM,GACN7H,KAAKqc,UAAYxb,EAAIgH,EAAI,GAAGvE,QACT/B,IAAfvB,KAAKgC,MACLhC,KAAKgC,MAAQnB,EAEbb,KAAKgC,MAAMwD,QAAQ3E,IAGvBb,KAAKgC,MAAQ,MAjCTw3D,EAAA,CAAX3xC,EAAA,+BAsCE,MAAM2zC,EAETh8D,YAAY84D,GAaAt4D,KAAA65D,YAAgBt4D,EAC5BvB,KAAA83D,UAAYv2D,EACZvB,KAAAwa,SAAUjZ,EACVvB,KAAAs6D,WAAc/4D,EACdvB,KAAA26D,aAAkBp5D,EAElBvB,KAAAg7D,cAAoBz5D,EAEpBvB,KAAAy7D,eAAsCl6D,EACtCvB,KAAA85D,cAAoCv4D,EACpCvB,KAAA07D,kBAA4Cn6D,EAC5CvB,KAAA27D,gBAAwCp6D,EAvBpCvB,KAAKs4D,MAAQA,EACbt4D,KAAK83D,KAAO,IAAI2B,EAAKnB,EAAOt4D,MAC5BA,KAAKwa,IAAM,IAAI0/C,EAAI5B,EAAOt4D,MAC1BA,KAAKs6D,MAAQ,IAAID,EAAM/B,EAAOt4D,MAC9BA,KAAK26D,QAAU,IAAID,EAAQpC,EAAOt4D,MAElCA,KAAKg7D,SAAW,IAAID,EAASzC,EAAOt4D,MACpCA,KAAKy7D,UAAY,IAAIF,EAA0BjD,EAAOt4D,KAAMk4D,EAAOuD,UAAU31D,KAAKoyD,IAClFl4D,KAAK85D,SAAW,IAAIyB,EAAyBjD,EAAOt4D,KAAMk4D,EAAO4B,SAASh0D,KAAKoyD,IAC/El4D,KAAK07D,aAAe,IAAIH,EAA6BjD,EAAOt4D,KAAMk4D,EAAOwD,aAAa51D,KAAKoyD,IAgBzF14D,qDACF,IAAIwL,KAACA,GAAQhL,KAAKs4D,MAClBt4D,KAAK65D,aAAe3B,EAAO2B,OAAO7uD,EAAK1H,OAf/Bk2D,EAAA,CAAX3xC,EAAA,ySC/TE,MAAM+zC,UAAmBrE,EAAA,SACZ/3D,SAASid,8CAGTjd,QAAQ8D,2CACpB,aAAag0D,EAAQtsD,KAAK1H,MAI3B,MAAMu4D,UAAiBtE,EAAA,SACV/3D,SAASid,8CAGTjd,QAAQ8D,2CACpB,aAAa40D,EAAOlkD,GAAG1Q,MAIxB,MAAMw4D,UAAkBvE,EAAA,SACX/3D,SAASid,8CAGTjd,QAAQ8D,2CACpB,aAAa40D,EAAO3rC,IAAIjpB,MAIzB,MAAMy4D,UAAqBxE,EAAA,SACd/3D,SAASid,8CAGTjd,QAAQ8D,2CACpB,aAAa40D,EAAO4C,OAAOx3D,ulBC3B5B,MAAM04D,EACTtwD,aAA6B,OAAO6rD,EAAA,WAAWvsD,KAmB/CxL,OACIQ,KAAKgL,UAAOzJ,EACZvB,KAAKw4D,OAAS,IAAIH,EAAOr4D,MACzBA,KAAKk5D,IAAM,IAAIsC,EAAIx7D,MACnBA,KAAKi8D,WAAa,IAAIL,EACtB57D,KAAKk8D,SAAW,IAAIL,EACpB77D,KAAKm8D,UAAY,IAAIL,EACrB97D,KAAKo8D,aAAe,IAAIL,EAG5Bv8D,SAEI+3D,EAAA,WAAWzrD,UAAOvK,EAIlBg2D,EAAA,WAAWvsD,UAAOzJ,EAClBvB,KAAK6wB,OACL7wB,KAAKq8D,iBAAc96D,EACnBvB,KAAK83D,UAAOv2D,EACZvB,KAAKimC,UAAO1kC,EACZvB,KAAKi4D,WAAQ12D,EACbvB,KAAKs8D,cAAW/6D,EAChBvB,KAAKu8D,gBAAah7D,EAClBvB,KAAKw8D,iBAAcj7D,EACnBvB,KAAKy8D,iBAAcl7D,EAGvB/B,QAAQymC,GACAjmC,KAAKimC,OAASA,IAClBjmC,KAAKimC,KAAOA,EACZjmC,KAAKs8D,cAAW/6D,EAChBvB,KAAKu8D,gBAAah7D,EAClBvB,KAAKw8D,iBAAcj7D,EACnBvB,KAAKy8D,iBAAcl7D,GAGvB/B,YAAY+J,GACJvJ,KAAKu8D,aAAehzD,IACxBvJ,KAAKu8D,WAAahzD,EAClBvJ,KAAKy8D,iBAAcl7D,GAGjB/B,eAAe0uC,EAAa71B,iDACxBi/C,EAAQoF,eAAe18D,KAAKgL,KAAK1H,GAAI4qC,EAAM71B,GACjDrY,KAAKgL,KAAKkjC,GAAQ71B,IAGhB7Y,wDACgB+B,IAAdvB,KAAK83D,OACT93D,KAAK83D,WAAaR,EAAQqF,SAAS38D,KAAK0L,WAGtClM,mDACF,QAAoB+B,IAAhBvB,KAAK0L,OAAsB,OAC/B,IAAI7K,QAAYy2D,EAAQtsD,KAAKhL,KAAK0L,QAClC1L,KAAKgL,KAAOnK,EACZqC,QAAQC,IAAI,mBAAoBtC,GAChCb,KAAKq8D,kBAAoB/E,EAAQsF,gBAAgB58D,KAAK0L,QACtD,IAAImxD,QAAiB3E,EAAO4E,gBACxBxwD,IAACA,GAAOuwD,EACZ78D,KAAK68D,SAAWtF,EAAA,KAAKj1C,cAAchW,EAAK,YACxCpJ,QAAQC,IAAI,eAAgBuK,KAAKC,UAAU3N,KAAK68D,aAG9Cr9D,YAAYu9D,iDACRzF,EAAQ0F,cAAch9D,KAAKgL,KAAK1H,GAAIy5D,EAAO,GACvC/8D,KAAK83D,KAAK9vD,KAAKC,GAAKA,EAAE3E,KAAOy5D,GACnCE,OAAS,IAGXz9D,eAAeu9D,2CACjB,IAAIl8D,QAAYy2D,EAAQ4F,WAAWl9D,KAAKgL,KAAK1H,GAAIy5D,GACjD,OAAIl8D,GAAO,EAAUA,GACXb,KAAK83D,KAAK9vD,KAAKC,GAAKA,EAAE3E,KAAOy5D,GACnCE,OAAS,EACN,KAGLz9D,WAAW+sB,2CACb,IAAI1rB,QAAYy2D,EAAQ4F,WAAWl9D,KAAKgL,KAAK1H,GAAIipB,EAAIjpB,IACrD,OAAIzC,GAAO,EAAUA,GACrBb,KAAK83D,KAAKtyD,KAAK+mB,GACR,KAGL/sB,oDACF,QAAmB+B,IAAfvB,KAAKi4D,MAAqB,OAC9B,IAAIp3D,QAAYy2D,EAAQ6F,UAAUn9D,KAAKgL,KAAK1H,IAC5CzC,EAAIkV,QAAQ9N,IACR,OAAQA,EAAE3E,IACN,KAAK,EACD2E,EAAE/H,KAAM,eACR+H,EAAEokB,YAAc,mDAChB,MACJ,KAAK,EACDpkB,EAAE/H,KAAM,eACR+H,EAAEokB,YAAc,4DAI5BrsB,KAAKi4D,MAAQp3D,IAGXrB,YAAYU,EAAamsB,2CAC3B,IAAI/oB,QAAWg0D,EAAQ8F,YAAYp9D,KAAKgL,KAAK1H,GAAIpD,EAAMmsB,GASvD,OARI/oB,EAAK,GACLtD,KAAKi4D,MAAMzyD,KAAK,CACZlC,GAAIA,EACJpD,KAAMA,EACNmsB,YAAaA,EACbiB,WAAO/rB,IAGR+B,IAGL9D,eAAe0uC,EAAa71B,iDACxBi/C,EAAQ+F,mBAAmBr9D,KAAKgL,KAAK1H,GAAItD,KAAKimC,KAAK3iC,GAAI4qC,EAAM71B,GACnErY,KAAKimC,KAAKiI,GAAQ71B,IAGhB7Y,uDACF,IAAIqB,QAAYy2D,EAAQgG,aAAat9D,KAAKgL,KAAK1H,GAAItD,KAAKimC,KAAK3iC,IAC7DtD,KAAKs8D,SAAWz7D,EAAIoI,IAAIhB,GACbjI,KAAK83D,KAAK9vD,KAAKukB,GAAKA,EAAIjpB,KAAO2E,EAAE3E,OAI1C9D,YAAYs4D,iDACRR,EAAQiG,gBAAgBv9D,KAAKgL,KAAK1H,GAAItD,KAAKimC,KAAK3iC,GAAIw0D,EAAK7uD,IAAIhB,GAAGA,EAAE3E,KACxEtD,KAAKs8D,SAAWxE,IAGdt4D,sDACF,IAAIqB,QAAYy2D,EAAQkG,YAAYx9D,KAAKgL,KAAK1H,QAAkB/B,IAAdvB,KAAKimC,KAAoB,EAAEjmC,KAAKimC,KAAK3iC,QAAI/B,EAAW,EAAG,KACzGvB,KAAKw8D,YAAc37D,IAGjBrB,iBAAiBw4D,iDACbV,EAAQmG,iBAAiBz9D,KAAKgL,KAAK1H,GAAItD,KAAKu8D,WAAWj5D,GAAI00D,GACjEh4D,KAAKu8D,WAAWvE,SAAWA,IAGzBx4D,0DACF,IACIy4D,SADYX,EAAQoG,gBAAgB19D,KAAKgL,KAAK1H,GAAItD,KAAKu8D,WAAWj5D,KAC/C2F,IAAIhB,IACvB,IAAI01D,EAAM11D,EAAE3E,GACR2iC,EAAOjmC,KAAKi4D,MAAMjwD,KAAK6e,GAAKA,EAAEvjB,KAAOq6D,GACzC,OAAO7iD,EAAAnI,EAAEC,MAAMqzB,KAEnBjmC,KAAKy8D,YAAcxE,IAGjBz4D,eAAei9D,iDACXnF,EAAQsG,mBAAmB59D,KAAKgL,KAAK1H,GAAItD,KAAKu8D,WAAWj5D,GAAIm5D,EAAYxzD,IAAIhB,GAAGA,EAAE3E,KACxFtD,KAAKi4D,MAAMliD,QAAQkwB,IACf,IAAI03B,EAAM13B,EAAK3iC,GACXu6D,EAAM79D,KAAKy8D,YAAYz0D,KAAKC,GAAKA,EAAE3E,KAAOq6D,GAC1CtnD,EAAMomD,EAAYz0D,KAAKC,GAAKA,EAAE3E,KAAOq6D,GACzC,QAAYp8D,IAARs8D,OAKQt8D,IAAR8U,GACJ4vB,EAAK3Y,YANL,CACI,QAAY/rB,IAAR8U,EAAmB,OACvB4vB,EAAK3Y,WAMbttB,KAAKy8D,YAAcA,KAlLXqB,EAAA,CAAXj2C,EAAA,8BACWi2C,EAAA,CAAXj2C,EAAA,qCACWi2C,EAAA,CAAXj2C,EAAA,8BACWi2C,EAAA,CAAXj2C,EAAA,8BACWi2C,EAAA,CAAXj2C,EAAA,+BACWi2C,EAAA,CAAXj2C,EAAA,kCACWi2C,EAAA,CAAXj2C,EAAA,oCACWi2C,EAAA,CAAXj2C,EAAA,qCACWi2C,EAAA,CAAXj2C,EAAA,qCA8KE,MAAMk2C,EAAQ,IAAI/B,2QCnMzB,IAAqBgC,EAArB,cAA2CplD,EAAA,UAD3CpZ,kCAGYQ,KAAAulB,OAAiB,CACrB,CAACrlB,KAAK,OAAQqI,KAAK,SAAUwyB,UAAS,GACtC,CAAC76B,KAAK,SAAUqI,KAAK,WAEjBvI,KAAAkqD,SAAqB,CACzBloD,MAAO,CACHuH,KAAM,CAACugD,OAAO,OAAQvtB,UAAW,IAAKpI,YAAa,qBAAO/zB,MAAO,sBACjE6uB,OAAQ,CAAC66B,OAAO,SAAU1pD,MAAO,eAAMsF,UAAW,qBAiClD1F,KAAAi+D,iBAAmB,EAAO/9D,EAAa6lD,IAAqCmY,EAAAl+D,UAAA,qBAChF,IAAI43D,QAACA,EAAOC,QAAEA,GAAW73D,KAAKwE,MAC1B+E,EAAOw8C,EAAQrkD,KAAKwQ,KAAW,KAEnC,QAAY3Q,WADIw8D,EAAMvF,OAAO2F,OAAO50D,EAAMquD,EAAQ,EAAE,EAAGC,EAAQ,EAAE,IAKjE,OAAOtuD,EAAO,uCAHVguD,EAAA,IAAI3xD,SAwBZpG,SACI,IAAIo4D,QAACA,EAAOC,QAAEA,GAAW73D,KAAKwE,MAC1Bs1B,EAAU89B,EAAS,eAAO,qBAC9B,OAAOh/C,EAAA,cAAC2+C,EAAA,KAAI,CAAC9xD,OAAQ,eAAOq0B,GACxBlhB,EAAA,qBAAKlT,UAAU,aACXkT,EAAA,qBAAKlT,UAAU,+GACKo0B,GAEpBlhB,EAAA,cAAC2+C,EAAA,KAAI,CAAChyC,OAAQvlB,KAAKulB,OAAQ2kC,SAAUlqD,KAAKkqD,SAAUc,cAAehrD,KAAKi+D,uBA/EnE,IAAAG,EAAAJ,uUAAaK,CAAA,CADjC5lD,EAAA,GACoBulD,wQCGrB,IAAqBM,EAArB,cAAuC1lD,EAAA,UADvCpZ,kCAEYQ,KAAAQ,SAAW,EAAON,EAAa6lD,IAAoBwY,EAAAv+D,UAAA,qBACvD,IAAI43D,QAACA,EAAOC,QAAEA,GAAW9R,EAAQrkD,KAAKwQ,WAChC6rD,EAAMvF,OAAOK,aAAajB,EAASC,GACzCN,EAAA,IAAI3xD,SAERpG,SACI,IAMI+lB,GANAva,KAACA,GAAQ+yD,GACTS,OAACA,EAAM5G,QAAEA,EAAOC,QAAEA,GAAW7sD,EAC7ByzD,EAAYV,EAAMvF,OAAOniD,IAEzB0iD,EAAmB,CAAC74D,KAAM,UAAWqI,KAAM,WAC3C0mB,EAAsB,CAAC/uB,KAAM,SAAUqI,KAAM,UAElC,IAAXi2D,EAAcj5C,EAAS,CAJJ,CAACrlB,KAAM,UAAWqI,KAAM,WAIZwwD,EAAO9pC,GACrB,IAAZ2oC,IAAeryC,EAAS,CAACwzC,EAAO9pC,IACzC,IAAI/c,EAAO,CACP0lD,QAAS6G,EAAU7G,QACnBC,QAAS4G,EAAU5G,SAWvB,OAAOj/C,EAAA,cAAC2+C,EAAA,KAAI,CAAC9xD,OAAO,gBAChBmT,EAAA,qBAAKlT,UAAU,QACXkT,EAAA,cAAC8lD,EAAM5+D,OAAA+I,OAAA,GAAKk1D,EAAMvF,OAAOniD,MACzBuC,EAAA,cAAC2+C,EAAA,KAAI,CAAChyC,OAAQA,EAAQ2kC,SAXf,CACXloD,MAAO,CACH41D,QAAW,CAAC9N,OAAQ,WAAY1pD,MAAO,eAAMgoC,UAAU,EAAGC,WAAW,GACrEwvB,QAAW,CAAC/N,OAAQ,WAAY1pD,MAAO,qBAAOgoC,UAAU,EAAGC,WAAW,GACtEpZ,OAAU,CAAC66B,OAAQ,SAAU1pD,MAAO,eAAMsF,UAAW,qBAOX8pD,SAAUt9C,EAAM84C,cAAehrD,KAAKQ,eAhCzE,IAAAm+D,EAAAL,uUAASM,CAAA,CAD7BnmD,EAAA,GACoB6lD,GAsCrB,MAAMI,EAAUl6D,IACZ,IAAItE,KAACA,EAAIoqC,KAAEA,EAAIjqC,KAAEA,GAAQmE,EAEzB,OAAOoU,EAAA,yBACHA,EAAA,qBAAKlT,UAAU,eACXkT,EAAA,cAAC2+C,EAAA,MAAK,CAAC7xD,UAAU,iBAAiBiK,IAAKtP,IACvCuY,EAAA,qBAAKlT,UAAU,IACXkT,EAAA,oBAAIlT,UAAU,aAAaxF,GAC1BoqC,GAAQ1xB,EAAA,wBAAIA,EAAA,uBAAOlT,UAAU,kBAAkB4kC,MAGxD1xB,EAAA,oBAAIlT,UAAU,oRChDtB,IAAqBm5D,EAArB,cAA6CjmD,EAAA,UAD7CpZ,kCAaYQ,KAAA4mB,IAAM,GAAEvmB,OAAMH,OAAMoqC,WACxB,IAAI9nC,EAAU8nC,EACV1xB,EAAA,cAAAA,EAAA,cAAEA,EAAA,uBAAI0xB,YAAiB1xB,EAAA,uBAAOlT,UAAU,cAAcxF,IAEtD0Y,EAAA,uBAAI1Y,GACJ08B,EAAOhkB,EAAA,cAAC2+C,EAAA,MAAK,CAAC7xD,UAAU,gBAAgBiK,IAAKtP,IACjD,OAAOuY,EAAA,cAAC2+C,EAAA,IAAG,CAAC7xD,UAAU,gCAAgCk3B,KAAMA,GACxDhkB,EAAA,qBAAKlT,UAAU,QAAQlD,MAIvBxC,KAAA8+D,WAAa,CAAC7sD,IAClBjS,KAAK++D,SAAS9sD,GAAK,GAAM,KAGrBjS,KAAAg/D,WAAa,CAAC/sD,IAClBjS,KAAK++D,SAAS9sD,GAAK,GAAO,KA3BxBzS,kEACIu+D,EAAMvF,OAAO1hD,SAGvBtX,eAGAA,YAAYm5D,GACRoF,EAAMvF,OAAOniD,IAAMsiD,EACnBpB,EAAA,IAAI/xD,KAAKoT,EAAA,cAAC+lD,EAAS,OAqBfn/D,SAASyS,EAA0C2lD,EAAiBC,GACxE5lD,EAAIorB,iBACJk6B,EAAA,IAAI/xD,KAAKoT,EAAA,cAACwlD,EAAS,CAACxG,QAASA,EAASC,QAASA,KAEnDr4D,SAGI,IAAIwL,KAACA,GAAQ+yD,EACb,QAAax8D,IAATyJ,EAAoB,OACxB,IAIIi0D,EAAYC,GAJZ3G,OAACA,EAAMC,OAAEA,EAAMC,QAAEA,GAAWsF,EAAMvF,OAClCxhD,EAAQ4B,EAAA,wBAAQlT,UAAU,yBAAyBX,QAAS/E,KAAKm/D,aAAW,4BAE5EC,GAAa,EAAOC,GAAa,EAOrC,GALoB,IAAhBr0D,EAAKwzD,SACLY,GAAa,EACbC,GAAa,GAEI,IAAjBr0D,EAAK4sD,UAAeyH,GAAa,IAClB,IAAfD,EAAqB,CACrB,IAAI35D,EAASmT,EAAA,cAAC2+C,EAAA,IAAG,CACb7xD,UAAU,kBACVk3B,KAAK,eACL5lB,MAAO4B,EAAA,mBAAGlT,UAAU,QAAQykC,KAAK,IAAIplC,QAAS/E,KAAK8+D,YAAU,kBACjEG,EAAarmD,EAAA,cAAC2+C,EAAA,KAAI,CACd7xD,UAAU,OACVD,OAAQA,EAAQzD,MAAOu2D,EACvBv3D,KAAK,WACLyG,KAAM,CAAC1C,QAAS/E,KAAKwzD,YAAav6C,OAAQjZ,KAAK4mB,OAGvD,IAAmB,IAAfy4C,EAAqB,CACrB,IAAI55D,EAASmT,EAAA,cAAC2+C,EAAA,IAAG,CACb7xD,UAAU,kBACVk3B,KAAK,qBACL5lB,MAAO4B,EAAA,mBAAGlT,UAAU,QAAQykC,KAAK,IAAIplC,QAAS/E,KAAKg/D,YAAU,kBACjEE,EAAatmD,EAAA,cAAC2+C,EAAA,KAAI,CACd7xD,UAAU,OACVD,OAAQA,EAAQzD,MAAOw2D,EACvBx3D,KAAK,WACLyG,KAAM,CAAC1C,QAAS/E,KAAKwzD,YAAav6C,OAAQjZ,KAAK4mB,OAGvD,OAAOhO,EAAA,cAAC2+C,EAAA,KAAI,CAAC9xD,OAAO,qBAAMuR,MAAOA,GAC5BioD,EACAC,EACDtmD,EAAA,qBAAKlT,UAAU,YACXkT,EAAA,qBAAKlT,UAAU,aAAW,gBAC1BkT,EAAA,qBAAKlT,UAAU,IACXkT,EAAA,oBAAIlT,UAAU,QACVkT,EAAA,oBAAIlT,UAAU,aAAW,wFACzBkT,EAAA,oBAAIlT,UAAU,aAAW,gEACzBkT,EAAA,oBAAIlT,UAAU,aAAW,0DACzBkT,EAAA,oBAAIlT,UAAU,aAAW,4HACzBkT,EAAA,oBAAIlT,UAAU,aAAW,0GACzBkT,EAAA,oBAAIlT,UAAU,aAAW,6FAtF5B,IAAA45D,EAAAT,uUAAeU,CAAA,CADnC9mD,EAAA,GACoBomD,mBCFd,MAAMW,UAAgB5mD,EAAA,UACzBpZ,SACI,IAAIigE,UAACA,EAASC,YAAEA,GAAe1/D,KAAKwE,MACpC,OAAOoU,EAAA,uBAAOlT,UAAU,2CACdkT,EAAA,cAAC2+C,EAAA,SAAQ,CAAC1nD,KAAM6vD,IACtB9mD,EAAA,mBAAGlT,UAAU,8BACTkT,EAAA,cAAC2+C,EAAA,SAAQ,CAAC1nD,KAAM4vD,MCXzB,SAASE,EACZC,EACAl6D,EACAX,EACAvC,GAEA,IAAIklD,EACAljD,EAeJ,OAde,IAAXo7D,GACAlY,EAAM,IACNljD,EAAQ,CACJkB,UAAW4/B,EAAW5/B,EAAW,kBACjCX,QAASA,EACTolC,KAAM,OAIVud,EAAM,OACNljD,EAAQ,CACJkB,UAAWA,IAGZkT,EAAA,cAAoB8uC,EAAKljD,EAAOhC,+UCX3C,IAAaq9D,EAAb,cAA8BjnD,EAAA,UAD9BpZ,kCAEIQ,KAAA+E,QAAU,CAACkN,IACPA,EAAIorB,iBACJk6B,EAAA,IAAI/xD,KAAKoT,EAAA,cAACknD,GAAQ,CAACx8D,GAAItD,KAAKwE,MAAMlB,OAC3B,IAEX9D,SACI,IAAI8D,GAACA,EAAEs8D,OAAEA,EAAMl6D,UAAEA,GAAa1F,KAAKwE,MACnC,QAAWjD,IAAP+B,EAAkB,OAAO,KAC7B,IACId,EADAwI,EAAO+yD,EAAM9B,WAAWhyD,IAAI3G,IAE5BpD,KAACA,EAAIoqC,KAAEA,EAAIje,YAAEA,GAAerhB,EAC5B8tC,EAAOzsB,GAAe,KAAOA,EAUjC,OARI7pB,EADA8nC,EACU1xB,EAAA,cAAAA,EAAA,cAAG0xB,WAAa1xB,EAAA,uBAAOlT,UAAU,cAAcxF,MAAO44C,IAE3D54C,EACK0Y,EAAA,cAAAA,EAAA,cAAG1Y,WAAa0Y,EAAA,uBAAOlT,UAAU,cAAcozC,IAG/Cx1C,EAEPq8D,EAAKC,EAAQl6D,EAAW1F,KAAK+E,QAASvC,KAtBxCq9D,EAAQE,EAAA,CADpBtnD,EAAA,GACYonD,GA2Bb,IAAaG,EAAb,cAA8BpnD,EAAA,UAC1BpZ,SACI,IAAI8D,GAACA,EAAEs8D,OAAEA,EAAMl6D,UAAEA,GAAa1F,KAAKwE,MACnC,QAAWjD,IAAP+B,EAAkB,OAAO,KAC7B,IAAI0H,EAAO+yD,EAAM9B,WAAWhyD,IAAI3G,IAC5BpD,KAACA,GAAQ8K,EACb,OAAO4N,EAAA,cAAAA,EAAA,cAAG1Y,KANL8/D,EAAQD,EAAA,CADpBtnD,EAAA,GACYunD,GAUb,MAAMF,WAAiBlnD,EAAA,UAEnBpZ,YAAYgF,GACR3E,MAAM2E,GAEVhF,SACI,IAAIwL,EAAO+yD,EAAM9B,WAAWhyD,IAAIjK,KAAKwE,MAAMlB,KACvCpD,KAACA,EAAIoqC,KAAEA,EAAIjqC,KAAEA,EAAIgsB,YAAEA,GAAerhB,EAMtC,OALAhL,KAAKshC,KAAO,CACR,GACA,CAAC/4B,KAAM,YAAao+B,UAAW/tB,EAAA,cAAC2+C,EAAA,MAAK,CAACl3D,KAAMA,EAAMusC,KAAM1sC,EAAMmsB,YAAaA,KAC3E,IAEGzT,EAAA,cAAC2+C,EAAA,KAAI,CAAC9xD,OAAQ,2CACjBmT,EAAA,cAAC2+C,EAAA,SAAQ,CAACj2B,KAAMthC,KAAKshC,KAAM7gC,OAAQT,KAAKwE,UCjE7C,MAAMy7D,GAAUngE,OAAA,CAAAqL,SAAA,aAAAC,WAAA,IAAAC,sBAAA,8BAAY60D,eACtBC,GAAcrgE,OAAA,CAAAqL,SAAA,aAAAC,WAAA,IAAAC,sBAAA,8BAAY+0D,iWCiBvC,IAAaC,GAAb,cAA4BznD,EAAA,UAD5BpZ,kCAEIQ,KAAA+E,QAAU,CAACkN,IACPA,EAAIorB,iBACJk6B,EAAA,IAAI/xD,KAAKoT,EAAA,cAAC0nD,GAAM,CAACh9D,GAAItD,KAAKwE,MAAMlB,OACzB,IAEX9D,SACI,IAEIgD,GAFAc,GAACA,EAAEoC,UAAEA,EAASk6D,OAAEA,GAAU5/D,KAAKwE,MAC/B2mB,EAAM4yC,EAAM7B,SAASjyD,IAAI3G,GAE7B,GAAY,OAAR6nB,EACA3oB,EAAUc,MAET,CACD,IAAIpD,KAACA,EAAImsB,YAAEA,GAAelB,EACtB2tB,EAAOzsB,GAAe,KAAOA,EAE7B7pB,OADSjB,IAATrB,EACU0Y,EAAA,cAACA,EAAA,SAAc,KAAE1Y,WAAa0Y,EAAA,uBAAOlT,UAAU,cAAcozC,IAG7Dx1C,EAGlB,OAAOq8D,EAAKC,EAAQl6D,EAAW1F,KAAK+E,QAASvC,KAvBxC69D,GAAME,GAAA,CADlB9nD,EAAA,GACY4nD,IA4Bb,IAAMC,GAAN,cAAqB1nD,EAAA,UAEjBpZ,YAAYgF,GACR3E,MAAM2E,GAEVhF,SACI,IAAIwU,EAAK+pD,EAAM7B,SAASjyD,IAAIjK,KAAKwE,MAAMlB,KACnCpD,KAACA,EAAImsB,YAAEA,EAAWrhB,KAAEA,EAAIy0D,UAAEA,EAASC,YAAEA,GAAe1rD,EACpDgvC,EAAOpqC,EAAA,yBACPA,EAAA,yBAAMyT,GACNzT,EAAA,cAAC4mD,EAAO,CAACE,YAAaA,EAAaD,UAAWA,KAQlD,OANAz/D,KAAKshC,KAAO,CACR,GACA,CAAC/4B,KAAM,YAAao+B,UAAW/tB,EAAA,cAAC2+C,EAAA,MAAK,CAACl3D,KAAM4/D,GAASrzB,KAAM1sC,EAAMmsB,YAAa22B,KAC9E,GACA,CAACz6C,KAAM,YAAanI,MAAO,qBAAOumC,UAAW/tB,EAAA,qBAAKlT,UAAU,QAAOkT,EAAA,cAACinD,EAAQ,CAACv8D,GAAI0H,EAAM40D,QAAQ,OAE5FhnD,EAAA,cAAC2+C,EAAA,KAAI,CAAC9xD,OAAQ,iCACjBmT,EAAA,cAAC2+C,EAAA,SAAQ,CAACj2B,KAAMthC,KAAKshC,KAAM7gC,OAAQT,KAAKwE,WAnB9C87D,GAAMC,GAAA,CADX9nD,EAAA,GACK6nD,ulBC5BN,IAAaE,GAAb,cAA6B5nD,EAAA,UAD7BpZ,kCAYIQ,KAAA+E,QAAU,CAACkN,IACPA,EAAIorB,iBACJk6B,EAAA,IAAI/xD,KAAKoT,EAAA,cAAC6nD,GAAO,CAACn9D,GAAItD,KAAKwE,MAAMlB,OAC1B,IAEX9D,SACI,IAEIgD,GAFAc,GAACA,EAAEs8D,OAAEA,EAAMl6D,UAAEA,GAAa1F,KAAKwE,MAC/B+nB,EAAMwxC,EAAM5B,UAAUlyD,IAAI3G,GAE9B,GAAY,OAARipB,EACA/pB,EAAUc,MAET,CACD,IAAIpD,KAACA,EAAIG,KAAEA,EAAIgsB,YAAEA,GAAeE,EAE5BusB,GADWvsB,EAAIm0C,OACRr0C,GAAe,KAAOA,GAE7B7pB,OADSjB,IAATrB,EACU0Y,EAAA,cAACA,EAAA,SAAc,KAAE1Y,WAAa0Y,EAAA,uBAAOlT,UAAU,cAAcozC,IAG7Dx1C,EAGlB,OAAOq8D,EAAKC,EAAQl6D,EAAW1F,KAAK+E,QAASvC,KAlCxCg+D,GAAOG,GAAA,CADnBloD,EAAA,GACY+nD,IAwCb,IAAMC,GAAN,cAAsB7nD,EAAA,UAKlBpZ,YAAYgF,GACR3E,MAAM2E,GAJUxE,KAAA4gE,KAAgB,CAChCxgE,MAAO,kBAASmI,KAAM,OAAQslB,UAAMtsB,EAAWqlB,IAAKi6C,IAKlDrhE,6DACFQ,KAAK4gE,KAAK/yC,WAAaqqC,EAAOx5C,WAAW1e,KAAKwE,MAAMlB,MAExD9D,SACI,IAAI+sB,EAAMwxC,EAAM5B,UAAUlyD,IAAIjK,KAAKwE,MAAMlB,KACrC0H,KAACA,EAAI9K,KAAEA,EAAImsB,YAAEA,EAAWhsB,KAAEA,EAAIo/D,UAAEA,EAASC,YAAEA,GAAenzC,EAC1Dy2B,EAAOpqC,EAAA,yBACPA,EAAA,yBAAMyT,GACNzT,EAAA,cAAC4mD,EAAO,CAACE,YAAaA,EAAaD,UAAWA,KASlD,OAPAz/D,KAAKshC,KAAO,CACR,GACA,CAAC/4B,KAAM,YAAao+B,UAAW/tB,EAAA,cAAC2+C,EAAA,MAAK,CAACl3D,KAAMA,EAAMusC,KAAM1sC,EAAMmsB,YAAa22B,KAC3E,GACA,CAACz6C,KAAM,YAAanI,MAAO,qBAAOumC,UAAW/tB,EAAA,qBAAKlT,UAAU,QAAOkT,EAAA,cAACinD,EAAQ,CAACv8D,GAAI0H,EAAM40D,QAAQ,MAC/F5/D,KAAK4gE,MAEFhoD,EAAA,cAAC2+C,EAAA,KAAI,CAAC9xD,OAAQ,kCACjBmT,EAAA,cAAC2+C,EAAA,SAAQ,CAACj2B,KAAMthC,KAAKshC,KAAM7gC,OAAQT,KAAKwE,WAxBpCm8D,GAAA,CAAX94C,EAAA,+BAFC44C,GAAOE,GAAA,CADZloD,EAAA,GACKgoD,IA+BN,MAAMI,WAAejoD,EAAA,UACjBpZ,SACI,IACIwjD,GADA9iD,KAACA,EAAImsB,YAAEA,GAAersB,KAAKwE,MAG/B,OADI6nB,IAAa22B,EAAOpqC,EAAA,qBAAKlT,UAAU,oBAAoB2mB,IACpDzT,EAAA,qBAAKlT,UAAU,0BAClBkT,EAAA,yBAAM1Y,GACL8iD,IC5Eb,IAAa8d,GAAb,cAAgCloD,EAAA,UADhCpZ,kCAYIQ,KAAA+E,QAAU,CAACkN,IACPA,EAAIorB,iBACJk6B,EAAA,IAAI/xD,KAAKoT,EAAA,cAACmoD,GAAU,CAACz9D,GAAItD,KAAKwE,MAAMlB,OAC7B,IAEX9D,SACI,IAEIgD,GAFAc,GAACA,EAAEs8D,OAAEA,EAAMl6D,UAAEA,GAAa1F,KAAKwE,MAC/Bs2D,EAASiD,EAAM3B,aAAanyD,IAAI3G,GAEpC,GAAe,OAAXw3D,EACAt4D,EAAUc,MAET,CACD,IAAI09D,MAACA,EAAKC,GAAEA,EAAE50C,YAAEA,GAAeyuC,EAE3Bt4D,OADgBjB,IAAhB8qB,EACUzT,EAAA,cAACA,EAAA,SAAc,KAAEyT,WAAoBzT,EAAA,uBAAOlT,UAAU,cAAcu7D,IAGpE39D,EAGlB,OAAOq8D,EAAKC,EAAQl6D,EAAW1F,KAAK+E,QAASvC,KAhCxCs+D,wUAAUI,CAAA,CADtBzoD,EAAA,GACYqoD,IAoCb,MAAMC,WAAmBnoD,EAAA,UAErBpZ,YAAYgF,GACR3E,MAAM2E,GAEVhF,SACI,IAAIs7D,EAASiD,EAAM3B,aAAanyD,IAAIjK,KAAKwE,MAAMlB,KAC3C+oB,YAACA,EAAW20C,MAAEA,EAAKC,GAAEA,EAAEj2D,KAAEA,EAAIy0D,UAAEA,EAASC,YAAEA,GAAe5E,EAClDliD,EAAA,yBACPA,EAAA,yBAAMyT,GACNzT,EAAA,cAAC4mD,EAAO,CAACE,YAAaA,EAAaD,UAAWA,KASlD,OAPAz/D,KAAKshC,KAAO,CACR,GACA,CAAC/4B,KAAM,YAAao+B,UAAW/tB,EAAA,cAAC2+C,EAAA,MAAK,CAACl3D,KAAM4/D,GAASrzB,KAAMvgB,EAAaA,YAAa40C,KACrF,GACA,CAAC14D,KAAM,YAAanI,MAAO,qBAAOumC,UAAW/tB,EAAA,qBAAKlT,UAAU,QAAOkT,EAAA,cAACinD,EAAQ,CAACv8D,GAAI0H,EAAM40D,QAAQ,MAC/F,CAACr3D,KAAM,SAAUnI,MAAO,qBAAOF,KAAM,UAElC0Y,EAAA,cAAC2+C,EAAA,KAAI,CAAC9xD,OAAQ,iDACjBmT,EAAA,cAAC2+C,EAAA,SAAQ,CAACj2B,KAAMthC,KAAKshC,KAAM7gC,OAAQT,KAAKwE,oRC7D7C,MAAM28D,WAAwBvoD,EAAA,UAGjCpZ,YAAYgF,GACR3E,MAAM2E,GAWFxE,KAAAg8B,SAAW,CAAC/pB,IAChB,IAAId,EAAMnR,KAAKwE,MAAM6T,MACjBwlD,EAAM1sD,GAAOA,EAAIuf,OACrB1wB,KAAKqY,MAAQpG,EAAIkR,cAAc9K,MAAMqY,OACrC1wB,KAAK4E,SAAS,CACVi1B,SAAUgkC,IAAQ79D,KAAKqY,UAIrBrY,KAAAQ,SAAW,KAAY4gE,GAAAphE,UAAA,qBAC7B,IAAImR,EAAMnR,KAAKwE,MAAM6T,MACjBwlD,EAAM1sD,GAAOA,EAAIuf,OACjBzoB,EAAIjI,KAAKqY,MACT2uC,EAAYhnD,KAAKwE,MAAMwiD,UAC3B,QAAkBzlD,IAAdylD,EAAyB,CACzB,IAAInmD,QAAYmmD,EAAU/+C,EAAG41D,GAC7B,GAAmB,kBAARh9D,EAEP,YADAb,KAAK4E,SAAS,CAACkC,MAAOjG,IAG1B02D,EAAA,IAAI3xD,UA9BR5F,KAAKiG,MAAQ,CACT4zB,UAAU,GAgCRr6B,gBACN,OAAOoZ,EAAA,uBAAOlT,UAAU,qBAAqB6C,KAAK,OAE9C67B,aAAcpkC,KAAKwE,MAAM6T,MACzB2jB,SAAUh8B,KAAKg8B,WAEvBx8B,SACI,IASI6hE,GATAjqD,MAACA,EAAK4vC,UAAEA,EAASxD,WAAEA,EAAU8d,KAAEA,EAAIjpD,MAAEA,GAASrY,KAAKwE,OACnDq1B,SAACA,EAAQ/yB,MAAEA,GAAS9G,KAAKiG,MACzB+Q,EAAQ4B,EAAA,wBACRlT,UAAU,yBACVm0B,SAAUA,EACV90B,QAAS/E,KAAKQ,UAEbgjD,GAAY,gBAIjB,YADcjiD,IAAVuF,IAAqBu6D,EAAWzoD,EAAA,qBAAKlT,UAAU,eAAeoB,IAC3D8R,EAAA,cAAC2+C,EAAA,KAAI,CAAC9xD,OAAQ2R,EAAOJ,MAAOA,GAC/B4B,EAAA,qBAAKlT,UAAU,aACV1F,KAAK4jC,gBACLy9B,EACDzoD,EAAA,uBAAOlT,UAAU,2BAA2B47D,MAMrD,MAAMC,WAAsBJ,GAAnC3hE,kCASYQ,KAAAwhE,iBAAmB,CAACvvD,IACxB,IAAId,EAAMnR,KAAKwE,MAAM6T,MACjBwlD,EAAM1sD,GAAOA,EAAIuf,OACrB1wB,KAAKqY,MAAQpG,EAAIkR,cAAc9K,MAAMqY,OACrC1wB,KAAK4E,SAAS,CACVi1B,SAAUgkC,IAAQ79D,KAAKqY,UAGrB7Y,gBACN,OAAOoZ,EAAA,0BAAUlT,UAAU,qBAAqB47B,KAAM,EAElD8C,aAAcpkC,KAAKwE,MAAM6T,MACzB2jB,SAAUh8B,KAAKwhE,umBCpF3B,IAAaC,GAAb,cAAgC7oD,EAAA,UADhCpZ,kCAUYQ,KAAA0hE,UAAY,CAACj6D,IACjB,IAAI6H,QAACA,EAAO/L,WAAEA,GAAcvD,KAAKwE,MACjC8K,EAAQ/L,EAAWkE,IACnB8vD,EAAA,IAAI3xD,QAGA5F,KAAA+zB,SAAW,CAAOzsB,GAA8Bq6D,GAAA3hE,UAAA,qBACpD,IAAI4hE,eAACA,EAAczlD,OAAEA,GAAUnc,KAAKwE,MACpC,GAA8B,oBAAnBo9D,EAA+B,CACtC,IAAI/gE,QAAY+gE,EAAezlD,EAAQ7U,GACvCtH,KAAKgC,MAAQnB,MAhBfrB,6DACF,IAAIoiE,eAACA,EAAczlD,OAAEA,GAAUnc,KAAKwE,MACpCxE,KAAKgC,MAAQuxB,MAAMC,QAAQouC,GACvBA,QACQA,EAAezlD,EAAQ,MAgBvC3c,SACI,IAAIs6B,QAACA,EAAOlT,IAAEA,EAAGi7C,kBAAEA,GAAqB7hE,KAAKwE,MAC7C,OAAOoU,EAAA,cAAC2+C,EAAA,KAAI,CAAC9xD,OAAQq0B,EAASj0B,KAAK,SAC/B+S,EAAA,qBAAKlT,UAAU,aACXkT,EAAA,cAAC2+C,EAAA,UAAS,CAAC7xD,UAAU,OACjBquB,SAAU/zB,KAAK+zB,SACfI,YAAa0tC,EACbtlC,UAAW,OAEnB3jB,EAAA,cAAC2+C,EAAA,KAAI,CAACv1D,MAAOhC,KAAKgC,MAAOyF,KAAM,CAAC1C,QAAQ/E,KAAK0hE,UAAWzoD,OAAO2N,QA/B3Dk7C,GAAA,CAAXj6C,EAAA,gCADQ45C,GAAUK,GAAA,CADtBrpD,EAAA,GACYgpD,ulBCLb,IAAaM,GAAb,cAA0BnpD,EAAA,UAD1BpZ,kCAOYQ,KAAAgiE,YAAc,EAACC,EAAc/4D,KACjC,IAAIhJ,KAACA,EAAIkc,MAAEA,EAAKpR,KAAEA,EAAIqhB,YAAEA,GAAe41C,EACvC,OAAOrpD,EAAA,cAAC2+C,EAAA,IAAG,CAAC7xD,UAAU,OAAOsR,MAAO4B,EAAA,uBAAOlT,UAAU,cAAc2mB,IAC9DjQ,QAAUlc,KAIXF,KAAAkiE,IAAM,KAAYC,GAAAniE,UAAA,qBACtB,IAAIusB,IAACA,EAAG61C,SAAEA,GAAYpiE,KAAKwE,OACvBlB,GAACA,EAAE0H,KAAEA,EAAIiyD,OAAEA,GAAU1wC,EACrB81C,EAAmB,EACvB,GAAe,IAAXpF,EAAc,QACEc,EAAMuE,eAAeh/D,KAC1B,GAAG6lB,MAAM,6DAEnB,GAAe,IAAX8zC,QACCc,EAAMwE,YAAYj/D,GACxB++D,EAAY,MAEX,CACD,IAAIG,EAAiB1nD,EAAAnI,EAAEC,MAAM2Z,GAC7Bi2C,EAAOl/D,GAAKA,EACZk/D,EAAOvF,OAAS,SACAc,EAAM0E,WAAWD,KACtB,GAAGr5C,MAAM,6DAEP5nB,IAAb6gE,GACAA,EAAS9+D,EAAI++D,GAEjB9K,EAAA,IAAI3xD,SAjCFpG,8DACFQ,KAAK0iE,iBAAmBxK,EAAOx5C,WAAW1e,KAAKwE,MAAM+nB,IAAIjpB,MAkC7D9D,SACI,IAKImjE,EAAelgD,EAAaia,GAL5B1xB,KAACA,EAAI9K,KAAEA,EAAImsB,YAAEA,EAAWhsB,KAAEA,EAAI48D,OAAEA,EAAMwC,UAAEA,EAASC,YAAEA,GAAe1/D,KAAKwE,MAAM+nB,IAC7Ey2B,EAAOpqC,EAAA,yBACPA,EAAA,yBAAMyT,GACNzT,EAAA,cAAC4mD,EAAO,CAACE,YAAaA,EAAaD,UAAWA,KAGnC,IAAXxC,GACA0F,EAAS,MACTlgD,EAAO,kBACPia,EAAQ,cAEQ,IAAXugC,GACL0F,EAAS,UACTlgD,EAAO,kBACPia,EAAQ,gBAGRimC,EAAS,OACTlgD,EAAO,kBACPia,EAAQ,eAEZ,IAAI4E,EAAc,CACd,GACA,CACI/4B,KAAM,YACNo+B,UAAW/tB,EAAA,cAAC2+C,EAAA,MAAK,CAACl3D,KAAMA,EAAMusC,KAAM1sC,EAAMmsB,YAAa22B,KAE3D,GACA,CACIz6C,KAAM,YACNnI,MAAO,qBACPumC,UAAW/tB,EAAA,qBAAKlT,UAAU,QAAOkT,EAAA,cAACinD,EAAQ,CAACv8D,GAAI0H,EAAM40D,QAAQ,MAEjE,CACIr3D,KAAM,YACNnI,MAAO,iBACPumC,UAAW/tB,EAAA,cAAC2+C,EAAA,KAAI,CAAC7xD,UAAU,QAAQ1D,MAAOhC,KAAK0iE,WAAYj7D,KAAM,CAACwR,OAAQjZ,KAAKgiE,gBAEnF,GACA,GACA,CACIz5D,KAAM,YACNusD,GAAI,GACJnuB,UAAW/tB,EAAA,wBAAQlT,UAAWoZ,IAAW,MAAO,QAAS4d,GAAQ33B,QAAS/E,KAAKkiE,KAC3EtpD,EAAA,cAAC2+C,EAAA,GAAE,CAACr3D,KAAMyiE,EAAQ/0C,KAAK,WAASnL,KAI5C,OAAO7J,EAAA,yBACHA,EAAA,cAAC2+C,EAAA,SAAQ,CAACj2B,KAAMA,EAAM7gC,OAAQT,KAAKwE,WAtF/Bo+D,GAAA,CAAX/6C,EAAA,qCADQk6C,GAAIa,GAAA,CADhBnqD,EAAA,GACYspD,8QCHb,MAAMc,WAAiBtL,EAAA,UAEnB/3D,YAAYkM,GACR7L,QACAG,KAAK0L,OAASA,EAEFlM,gDACZ,aAAa83D,EAAQmE,UAAUz7D,KAAK0L,OAAQ1L,KAAK+C,MAAO/C,KAAKqc,UAAWrc,KAAKsc,YAEvE9c,aAAaiI,GAEfzH,KAAKqc,eADI9a,IAATkG,EACiB,EAEAA,EAAKnE,IAKlC,IAAaw/D,GAAb,cAA4BlqD,EAAA,UAExBpZ,YAAYgF,GACR3E,MAAM2E,GAGFxE,KAAA+zB,SAAW,CAAOzsB,GAAey7D,GAAA/iE,UAAA,2BAC/BA,KAAK83D,KAAKpgC,MAAMpwB,MAElBtH,KAAAgjE,SAAW,CAACz2C,IAChBgrC,EAAA,IAAI/xD,KAAKoT,EAAA,cAAC2+C,EAAA,KAAI,CAAC9xD,OAAO,+BAClBmT,EAAA,cAACmpD,GAAI,CAACx1C,IAAKA,EAAK61C,SAAUpiE,KAAKoiE,eAG/BpiE,KAAAoiE,SAAW,EAACrF,EAAcE,KAC9B,IAAInF,EAAO93D,KAAK83D,KAAK91D,MACjBuqB,EAAMurC,EAAK9vD,KAAKC,GAAKA,EAAE3E,KAAOy5D,GAClCxwC,EAAI0wC,OAASA,EACbnF,EAAKlpD,QAAQ,CAAC2d,MAddvsB,KAAK83D,KAAO,IAAI+K,GAAS9E,EAAM/yD,KAAK1H,IAgBhC9D,UAAU+sB,GACd,IACIvV,GADA9W,KAACA,EAAImsB,YAAEA,EAAWhsB,KAAEA,EAAI48D,OAAEA,GAAU1wC,EAMxC,OAJe,IAAX0wC,EACAjmD,EAAQ4B,EAAA,iDACQ,IAAXqkD,IACLjmD,EAAQ4B,EAAA,kDACLA,EAAA,cAAC2+C,EAAA,IAAG,CAAC7xD,UAAU,YAClBk3B,KAAMhkB,EAAA,cAAC2+C,EAAA,MAAK,KAAC3+C,EAAA,cAAC2+C,EAAA,MAAK,CAAC5nD,IAAKtP,KACzB2W,MAAOA,GACP4B,EAAA,qBAAKlT,UAAU,QACXkT,EAAA,yBAAM1Y,GACN0Y,EAAA,uBAAOlT,UAAU,cAAc2mB,KAI3C7sB,SACI,IAAIwC,EAAQhC,KAAK83D,KAAK91D,MAClB6V,EAASe,EAAA,cAAC2+C,EAAA,UAAS,CAACxjC,SAAU/zB,KAAK+zB,SACnCruB,UAAU,aACVyuB,YAAY,kBACZoI,UAAW,MACf,OAAO3jB,EAAA,cAAC2+C,EAAA,KAAI,CAAC9xD,OAAQoS,GACjBe,EAAA,cAAC2+C,EAAA,KAAI,CACDv1D,MAAOA,EACPyF,KAAM,CAAC1C,QAAQ/E,KAAKgjE,SAAU/pD,OAAOjZ,KAAKijE,WAC1CxtC,OAAO,mCA9CVqtC,wUAAMI,CAAA,CADlBzqD,EAAA,GACYqqD,8QClBb,IAAqBK,GAArB,cAAsCvqD,EAAA,UAC5BpZ,mEACIu+D,EAAMqF,aAER5jE,WAAW+sB,EAAarjB,GAC5B,IACIm6D,GADAnjE,KAACA,EAAImsB,YAAEA,EAAWhsB,KAAEA,EAAI48D,OAAEA,GAAU1wC,EAIxC,OAFe,IAAX0wC,IACAoG,EAAMzqD,EAAA,cAAC2+C,EAAA,GAAE,CAAC7xD,UAAU,cAAcxF,KAAK,SACpC0Y,EAAA,cAAC2+C,EAAA,IAAG,CAAC7xD,UAAU,YAClBk3B,KAAMhkB,EAAA,cAAC2+C,EAAA,MAAK,KAAC3+C,EAAA,cAAC2+C,EAAA,MAAK,CAAC5nD,IAAKtP,KACzB2W,MAAOqsD,GACPzqD,EAAA,qBAAKlT,UAAU,QACXkT,EAAA,yBAAM1Y,GACN0Y,EAAA,uBAAOlT,UAAU,cAAc2mB,KAInC7sB,SAAS+sB,GACbgrC,EAAA,IAAI/xD,KAAKoT,EAAA,cAAC2+C,EAAA,KAAI,CAAC9xD,OAAO,+BAClBmT,EAAA,cAACmpD,GAAI,CAACx1C,IAAKA,MAGX/sB,UACJ+3D,EAAA,IAAI/xD,KAAKoT,EAAA,cAACkqD,GAAMhjE,OAAA+I,OAAA,GAAK7I,KAAKwE,SAE9BhF,SACI,IAAIwX,EAAQ4B,EAAA,wBACRlT,UAAU,2BACVX,QAAS,IAAI/E,KAAK4+C,WAAWhmC,EAAA,cAAC2+C,EAAA,GAAE,CAACr3D,KAAK,UAC1C,OAAO0Y,EAAA,cAAC2+C,EAAA,KAAI,CAAC9xD,OAAO,kBAAQuR,MAAOA,GAC/B4B,EAAA,cAAC2+C,EAAA,KAAI,CAACv1D,MAAO+7D,EAAMjG,KAAMrwD,KAAM,CAACwR,OAAQjZ,KAAKo8C,WAAYr3C,QAAS/E,KAAKgjE,eA/B9D,IAAAM,GAAAH,wUAAQI,CAAA,CAD5B9qD,EAAA,GACoB0qD,0QCLd,MAAMK,WAAgB5qD,EAAA,UAA7BpZ,kCAcYQ,KAAAulB,OAAuB,CAC3B,CAACrlB,KAAM,OAAQqI,KAAM,SAAUg0B,UAAW,EAAGxB,UAAU,GACvD,CAAC76B,KAAM,cAAeqI,KAAM,SAAUg0B,UAAW,KACjD,CAACr8B,KAAM,SAAUqI,KAAM,WAEnBvI,KAAAkqD,SAAqB,CACzBloD,MAAO,CACH9B,KAAM,CAAC4pD,OAAQ,OAAQ1pD,MAAO,gBAC9BisB,YAAa,CAACy9B,OAAQ,WAAY1pD,MAAO,gBACzC6uB,OAAQ,CAAC66B,OAAO,SAAU1pD,MAAO,kBAGjCJ,KAAAQ,SAAW,EAAOuqD,EAAmBhF,IAA2C0d,GAAAzjE,UAAA,qBAEpF,IAAIE,KAACA,EAAImsB,YAAEA,GAAersB,KAAK+lD,QAAQyJ,gBACxBuO,EAAMX,YAAYl9D,EAAMmsB,KAC7B,EACNrsB,KAAK+lD,QAAQnxB,SAAS,OAAQ,sBAAS10B,EAAO,6BAGlDq3D,EAAA,IAAI3xD,SAGRpG,SACI,OAAOoZ,EAAA,cAAC2+C,EAAA,KAAI,CAAC9xD,OAAO,4BAChBmT,EAAA,cAAC2+C,EAAA,KAAI,CAAC7xD,UAAU,MACZ6f,OAAQvlB,KAAKulB,OAAQ2kC,SAAUlqD,KAAKkqD,SACpCsF,SAAU,GACVxE,cAAehrD,KAAKQ,uRClC7B,MAAMkjE,WAAiB9qD,EAAA,UAC1BpZ,YAAYgF,GACR3E,MAAM2E,GACNxE,KAAKiG,MAAQ,CAAC6xD,UAAKv2D,GAEjB/B,6DACF,IAAIqB,QAAYy2D,EAAQgG,aAAaS,EAAM/yD,KAAK1H,GAAItD,KAAKwE,MAAMyhC,KAAK3iC,IACpEtD,KAAK4E,SAAS,CACVkzD,KAAMj3D,MAGNrB,cAAc+sB,EAAarjB,GAC/B,OAAO0P,EAAA,cAAC2+C,EAAA,IAAG,CAAC7xD,UAAU,+BACdk3B,KAAMrQ,EAAIrsB,KACV8W,MAAO4B,EAAA,uBAAOlT,UAAU,cAAc6mB,EAAIF,eAEtD7sB,SACI,IAAIymC,KAACA,GAAQjmC,KAAKwE,MAClB,OAAOoU,EAAA,cAAC2+C,EAAA,KAAI,CAAC9xD,OAAQwgC,EAAK/lC,KAAO,sBAC7B0Y,EAAA,cAAC2+C,EAAA,KAAI,CACDv1D,MAAOhC,KAAKiG,MAAM6xD,KAClBrwD,KAAM,CAACwR,OAAQjZ,KAAK2jE,eACpB3iE,KAAK,ymBCxBrB,IAAa4iE,GAAb,cAAgChrD,EAAA,UADhCpZ,kCASYQ,KAAA6jE,iBAAmB,CAAC59B,IACxB,IAAI/lC,KAACA,EAAImsB,YAAEA,GAAe4Z,EAC1B,OAAOrtB,EAAA,cAAC2+C,EAAA,IAAG,CAAC7xD,UAAU,+BACdk3B,KAAM18B,EACN8W,MAAO4B,EAAA,cAAC2+C,EAAA,MAAK,KAAElrC,OAKnBrsB,KAAA8jE,QAAU,MACdvM,EAAA,IAAI/xD,KAAKoT,EAAA,cAACmrD,GAAO,SAjBfvkE,mEACIu+D,EAAMiG,kBACNjG,EAAMkG,oBAEVzkE,WAAW6Y,EAAW6rD,kDAClBnG,EAAMN,iBAAiBplD,KAQzB7Y,UAAUymC,GACdsxB,EAAA,IAAI/xD,KAAKoT,EAAA,cAAC8qD,GAAQ,CAACz9B,KAAMA,KAK7BzmC,SACI,IAAI2kE,EAAWpG,EAAMxB,YACjBjyB,KAACA,EAAIpqC,KAAEA,EAAI83D,SAAEA,EAAQ33D,KAAEA,GAAQ8jE,EAC/BnhB,EAAOpqC,EAAA,yBACPA,EAAA,yBAAKA,EAAA,cAAC2+C,EAAA,MAAK,sCAAuBr3D,GAClC0Y,EAAA,yBAAKA,EAAA,cAAC2+C,EAAA,MAAK,gCAAsBjtB,GAAM1xB,EAAA,cAAC2+C,EAAA,MAAK,mBAE7Cj2B,EAAc,CACd,GACA,CACI/4B,KAAM,YACNo+B,UAAW/tB,EAAA,cAAC2+C,EAAA,MAAK,CAACl3D,KAAMA,GAAM4/D,GAASrzB,KAAMu3B,EAASnM,UAAU1tB,GAAMpqC,EAAMmsB,YAAa22B,KAE7F,GACA,CACI5iD,MAAO,qBACPmI,KAAM,SACNrI,KAAM,WACN6E,QAAS,IAAIwyD,EAAA,IAAI/xD,KAAKoT,EAAA,cAACuoD,GAAe,CAClC/pD,MAAM,iCACNiB,MAAO8rD,EAASnM,SAChBhR,UAAWhnD,KAAKokE,WAChB9C,KAAK,+EAEb,IAEAtqD,EAAQ4B,EAAA,wBAAQlT,UAAU,yBAAyBX,QAAS/E,KAAK8jE,SAAO,4BAC5E,OAAOlrD,EAAA,cAAC2+C,EAAA,KAAI,CAAC9xD,OAAO,2BAAOuR,MAAOA,GAC9B4B,EAAA,cAAC2+C,EAAA,SAAQ,CAACj2B,KAAMA,EAAM7gC,OAAQ0jE,IAC9BvrD,EAAA,qBAAKlT,UAAU,aAAYkT,EAAA,2BAAOA,EAAA,cAAC2+C,EAAA,GAAE,CAACr3D,KAAK,qDAC3C0Y,EAAA,cAAC2+C,EAAA,KAAI,CACDv1D,MAAO+7D,EAAMtB,YACbh1D,KAAM,CAACwR,OAAQjZ,KAAK6jE,iBAAkB9+D,QAAS/E,KAAKqkE,gBApDvDT,GAAUU,GAAA,CADtB7rD,EAAA,GACYmrD,IA0Db,IAAMG,GAAN,cAAsBnrD,EAAA,UAElBpZ,YAAYgF,GACR3E,MAAM2E,GACNxE,KAAKivB,OAASjvB,KAAKivB,OAAOnpB,KAAK9F,MAE7BR,mEACIu+D,EAAMiG,kBACNjG,EAAMkG,oBAERzkE,WAAWymC,EAAW/8B,GAC1B,OAAO0P,EAAA,cAAC2+C,EAAA,IAAG,CAAC7xD,UAAU,+BACdk3B,KAAMqJ,EAAK/lC,KACX8W,MAAO4B,EAAA,uBAAOlT,UAAU,cAAcugC,EAAK5Z,eAE/C7sB,WAAWymC,EAAWtvB,EAAqBg7C,IAErCnyD,wDACJu+D,EAAMwG,eAAevkE,KAAK6tB,KAAKkjC,eACrCwG,EAAA,IAAI3xD,QAERpG,SACI,IAAIwX,EAAQ4B,EAAA,wBAAQlT,UAAU,yBAAyBX,QAAS/E,KAAKivB,QAAM,gBACvEgpC,EAAQ8F,EAAM9F,MACdwE,EAAcsB,EAAMtB,YACxB,OAAO7jD,EAAA,cAAC2+C,EAAA,KAAI,CAAC9xD,OAAO,2BAAOuR,MAAOA,GAC9B4B,EAAA,cAAC2+C,EAAA,KAAI,CACD77B,IAAK7N,GAAM7tB,KAAK6tB,KAAKA,EACrB7rB,MAAOi2D,EACPlH,cAAe0L,EACfpL,QAAS,CAACprB,EAAWu+B,IAAkBv+B,EAAK3iC,KAAOkhE,EAAWlhE,GAC9DmE,KAAM,CAACwR,OAAQjZ,KAAKykE,WAAY7S,SAAU5xD,KAAK0kE,iBA/BzDX,GAAOO,GAAA,CADZ7rD,EAAA,GACKsrD,8QC3DN,IAAaY,GAAb,cAAiC/rD,EAAA,UACvBpZ,mEACIu+D,EAAM6G,gBAERplE,aAAau4D,EAAmB7uD,GACpC,OAAO0P,EAAA,cAACisD,GAAS/kE,OAAA+I,OAAA,GAAKkvD,IAElBv4D,UAAU+J,GACdw0D,EAAM+G,YAAYv7D,GAClBguD,EAAA,IAAI/xD,KAAKoT,EAAA,cAACgrD,GAAU,OAEhBpkE,WACJ,IAAIymC,EAAO83B,EAAM93B,KACb8+B,OAAkBxjE,IAAT0kC,EAAoB,EAAEA,EAAK3iC,GACxCi0D,EAAA,IAAI/xD,KAAKoT,EAAA,cAACosD,GAAY,CAACD,OAAQA,KAEnCvlE,SACI,IAAIwX,EAAQ4B,EAAA,wBAAQlT,UAAU,aAAaX,QAAS/E,KAAK+zB,UAAUnb,EAAA,cAAC2+C,EAAA,GAAE,CAACr3D,KAAK,YAC5E,OAAO0Y,EAAA,cAAC2+C,EAAA,KAAI,CAAC9xD,OAAO,eAAKuR,MAAOA,GAC5B4B,EAAA,cAAC2+C,EAAA,KAAI,CAACv1D,MAAO+7D,EAAMvB,YAAa/0D,KAAM,CAACwR,OAAQjZ,KAAKilE,aAAclgE,QAAS/E,KAAKklE,gBAnB/EP,wUAAWQ,CAAA,CADvB1sD,EAAA,GACYksD,IAwBb,MAAME,GAAa9M,IACf,IACIv1D,GADA8nC,KAACA,EAAIpqC,KAAEA,EAAI83D,SAAEA,EAAQ33D,KAAEA,GAAQ03D,EAQnC,OALIv1D,EADAw1D,EACUp/C,EAAA,cAAAA,EAAA,cAAEA,EAAA,yBAAKA,EAAA,uBAAIo/C,OAAcp/C,EAAA,cAAC2+C,EAAA,MAAK,KAAEjtB,IAAmB1xB,EAAA,cAAC2+C,EAAA,MAAK,KAAEr3D,IACjEoqC,EACK1xB,EAAA,cAAAA,EAAA,cAAEA,EAAA,yBAAKA,EAAA,uBAAI0xB,IAAe1xB,EAAA,cAAC2+C,EAAA,MAAK,KAAEr3D,IAElC0Y,EAAA,yBAAKA,EAAA,uBAAI1Y,IAChB0Y,EAAA,cAAC2+C,EAAA,IAAG,CAAC7xD,UAAU,gCAClBk3B,KAAMhkB,EAAA,cAAC2+C,EAAA,MAAK,CAAC3pC,KAAK,MAAKhV,EAAA,cAAC2+C,EAAA,MAAK,CAAC5nD,IAAKtP,MACnCuY,EAAA,qBAAKlT,UAAU,QAAQlD,KAUxB,MAAMwiE,WAAqBpsD,EAAA,UAC9BpZ,YAAYgF,GACR3E,MAAM2E,GACNxE,KAAK+zB,SAAW/zB,KAAK+zB,SAASjuB,KAAK9F,MACnCA,KAAKiG,MAAQ,CACTm/D,QAAS,MAGH5lE,SAAS8H,4CACnB,IAAIzG,QAAYy2D,EAAQkG,YAAYO,EAAM/yD,KAAK1H,GAAItD,KAAKwE,MAAMugE,OAAQz9D,EAAK,EAAG,KAC9EtH,KAAK4E,SAAS,CAACwgE,QAASvkE,MAEpBrB,aAAau4D,EAAmB7uD,GACpC,OAAO0P,EAAA,cAACisD,GAAS/kE,OAAA+I,OAAA,GAAKkvD,IAElBv4D,UAAU+J,GACdw0D,EAAM+G,YAAYv7D,GAClBguD,EAAA,IAAI/xD,KAAKoT,EAAA,cAACgrD,GAAU,OAExBpkE,SACI,IAAIiG,EAASmT,EAAA,cAAC2+C,EAAA,UAAS,CAAC7xD,UAAU,aAC9BquB,SAAU/zB,KAAK+zB,SACfwI,UAAW,IACXpI,YAAY,6BAChB,OAAOvb,EAAA,cAAC2+C,EAAA,KAAI,CAAC9xD,OAAQA,GACjBmT,EAAA,cAAC2+C,EAAA,KAAI,CACDv1D,MAAOhC,KAAKiG,MAAMm/D,QAClB39D,KAAM,CAACwR,OAAQjZ,KAAKilE,aAAclgE,QAAS/E,KAAKklE,kmBCxEhE,IAAaG,GAAb,cAA8BzsD,EAAA,UAD9BpZ,kCASYQ,KAAA2jE,cAAgB,EAACp3C,EAAarjB,IAC3B0P,EAAA,cAAC2+C,EAAA,IAAG,CAAC7xD,UAAU,+BACdk3B,KAAMrQ,EAAIrsB,KACV8W,MAAO4B,EAAA,uBAAOlT,UAAU,cAAc6mB,EAAIF,gBAE9CrsB,KAAAslE,aAAe,CAAC/4C,IACpBgrC,EAAA,IAAI/xD,KAAKoT,EAAA,cAAC2sD,GAAQ,SAbhB/lE,mEACIu+D,EAAMqF,iBACNrF,EAAMyH,iBAERhmE,WACJ+3D,EAAA,IAAI/xD,KAAKoT,EAAA,cAAC6sD,GAAQ,OAUdjmE,aACJ+3D,EAAA,IAAI/xD,KAAKoT,EAAA,cAAC2sD,GAAQ,OAEd/lE,UACJ+3D,EAAA,IAAI/xD,KAAKoT,EAAA,cAAC+rD,GAAW,OAEzBnlE,SACI,IACIkmE,EAAgBC,EAAaC,GAD7B1lE,KAACA,EAAImsB,YAAEA,EAAWiB,MAAEA,GAASywC,EAAM93B,UAE3B1kC,IAAR+rB,GAA6B,OAARA,GAAwB,IAARA,EACrCq4C,EAAc/sD,EAAA,uBAAOlT,UAAU,cAAY,uBAG3CigE,kBAAoBr4C,iBACpBs4C,EAAehtD,EAAA,yBAAKA,EAAA,cAAC2+C,EAAA,GAAE,CAACr3D,KAAK,mBAC7BwlE,EAAiB1lE,KAAKolE,SAE1B,IAAI9jC,EAAc,CACd,GACA,CACI/4B,KAAM,YACNo+B,UAAW/tB,EAAA,cAAC2+C,EAAA,MAAK,CAACl3D,UAAMkB,EAAWqrC,KAAM1sC,EAAMmsB,YAAaA,IAC5DtnB,QAAS/E,KAAK6lE,UAElB,GACA,CACIt9D,KAAM,YACNo+B,UAAW/tB,EAAA,cAAC2+C,EAAA,IAAG,CAAC7xD,UAAU,OAAOk3B,KAAM+oC,EAAa3uD,MAAO4uD,IAC3D7gE,QAAS2gE,GAEb,KAEA1uD,EAAQ4B,EAAA,wBAAQlT,UAAU,yBAAyBX,QAAS,IAAI/E,KAAK8lE,cAAcltD,EAAA,cAAC2+C,EAAA,GAAE,CAACr3D,KAAK,iBAChG,OAAO0Y,EAAA,cAAC2+C,EAAA,KAAI,CAAC9xD,OAAO,eAAKuR,MAAOA,GAC5B4B,EAAA,cAAC2+C,EAAA,SAAQ,CAACj2B,KAAMA,EAAM7gC,OAAQ,KAC9BmY,EAAA,qBAAKlT,UAAU,aAAYkT,EAAA,2BAAOA,EAAA,cAAC2+C,EAAA,GAAE,CAACr3D,KAAK,wDAC3C0Y,EAAA,cAAC2+C,EAAA,KAAI,CACDv1D,MAAO+7D,EAAMzB,SACb70D,KAAM,CAACwR,OAAQjZ,KAAK2jE,cAAe5+D,QAAQ/E,KAAKslE,cAChDtkE,KAAM4X,EAAA,uBAAOlT,UAAU,wBAAsB,mFAvDhD2/D,GAAQU,GAAA,CADpBttD,EAAA,GACY4sD,IA6Db,IAAMI,GAAN,cAAuB7sD,EAAA,UACbpZ,cAAc6Y,EAAW6rD,kDACrBnG,EAAMiI,eAAe,OAAQ3tD,KAEjC7Y,qBAAqB6Y,EAAW6rD,kDAC5BnG,EAAMiI,eAAe,cAAe3tD,KAE9C7Y,SACI,IAAIymC,EAAO83B,EAAM93B,MACb3iC,GAACA,GAAM2iC,EACPggC,EAAmB,IAAP3iE,GAAmB,IAAPA,EACxBg+B,EAAc,CACd,GACA,CACIlhC,MAAO,eACPmI,KAAM,SACNrI,KAAM,OACN6E,QAASkhE,OAAW1kE,EAAY,IAAIg2D,EAAA,IAAI/xD,KAAKoT,EAAA,cAACuoD,GAAe,CACzD/pD,MAAM,2BACNiB,MAAO4tB,EAAK/lC,KACZ8mD,UAAWhnD,KAAKkmE,cAChB5E,KAAK,uDAEb,CACIlhE,MAAO,eACPmI,KAAM,SACNrI,KAAM,cACN6E,QAASkhE,OAAW1kE,EAAY,IAAIg2D,EAAA,IAAI/xD,KAAKoT,EAAA,cAACuoD,GAAe,CACzD/pD,MAAM,2BACNiB,MAAO4tB,EAAK5Z,YACZ26B,UAAWhnD,KAAKmmE,qBAChB7E,KAAK,wDAGjB,OAAO1oD,EAAA,cAAC2+C,EAAA,KAAI,CAAC9xD,OAAO,wCAChBmT,EAAA,cAAC2+C,EAAA,SAAQ,CAACj2B,KAAMA,EAAM7gC,OAAQwlC,EAAMmvB,WAAW,aAnCrDqQ,GAAQM,GAAA,CADbttD,EAAA,GACKgtD,IAyCN,IAAMF,GAAN,cAAuB3sD,EAAA,UAEnBpZ,YAAYgF,GACR3E,MAAM2E,GACNxE,KAAKivB,OAASjvB,KAAKivB,OAAOnpB,KAAK9F,MAE7BR,mEACIu+D,EAAMqF,iBACNrF,EAAMyH,iBAERhmE,UAAU+sB,EAAarjB,GAC3B,OAAO0P,EAAA,cAAC2+C,EAAA,IAAG,CAAC7xD,UAAU,+BACdk3B,KAAMrQ,EAAIrsB,KACV8W,MAAO4B,EAAA,uBAAOlT,UAAU,cAAc6mB,EAAIF,eAE9C7sB,UAAU+sB,EAAa5V,EAAqBg7C,IAGtCnyD,wDACJu+D,EAAMqI,YAAYpmE,KAAK6tB,KAAKkjC,eAClCwG,EAAA,IAAI3xD,QAERpG,SACI,IAAIwX,EAAQ4B,EAAA,wBAAQlT,UAAU,yBAAyBX,QAAS/E,KAAKivB,QAAM,gBACvE6oC,EAAOiG,EAAMjG,KACbwE,EAAWyB,EAAMzB,SACrB,OAAO1jD,EAAA,cAAC2+C,EAAA,KAAI,CAAC9xD,OAAO,kBAAQuR,MAAOA,GAC/B4B,EAAA,cAAC2+C,EAAA,KAAI,CACD77B,IAAK7N,GAAM7tB,KAAK6tB,KAAKA,EACrB7rB,MAAO81D,EACP/G,cAAeuL,EACf70D,KAAM,CAACwR,OAAQjZ,KAAKijE,UAAWrR,SAAU5xD,KAAKqmE,gBA/BxDd,GAAQQ,GAAA,CADbttD,EAAA,GACK8sD,ulBCrGN,MAAMe,GAAexnD,IAAW,SAAU,QAAS,qBAAsB,OAAQ,QAAS,cAG1F,IAAaynD,GAAb,cAA6B3tD,EAAA,UAD7BpZ,kCAKYQ,KAAAykE,WAAa,EAACx+B,EAAW/8B,KAC7B,IAAIhJ,KAACA,EAAImsB,YAAEA,EAAWiB,MAAEA,GAAS2Y,EACjC,OAAOrtB,EAAA,cAAC2+C,EAAA,IAAG,CACP7xD,UAAU,YACVk3B,KAAM18B,EACN8W,MAAOyvB,OAAOnZ,GAAS,KACvB1U,EAAA,qBAAKlT,UAAW4gE,IACXj6C,MAILrsB,KAAAqkE,UAAY,CAACp+B,IACjB83B,EAAM+F,QAAQ79B,GACdsxB,EAAA,IAAI/xD,KAAKoT,EAAA,cAACysD,GAAQ,SAEdrlE,KAAAwmE,QAAU,CAACv0D,IACfA,EAAIorB,iBACJk6B,EAAA,IAAI/xD,KAAKoT,EAAA,cAAC4qD,GAAO,SAEbxjE,KAAAymE,cAAgB,MACpB1I,EAAM+F,aAAQviE,GACdg2D,EAAA,IAAI/xD,KAAKoT,EAAA,cAAC+rD,GAAW,SAxBnBnlE,mEACIu+D,EAAMiG,cAyBhBxkE,SACI,IAAIwX,EAAQ4B,EAAA,mBAAGlT,UAAU,QAAQykC,KAAK,IAAIplC,QAAS/E,KAAKwmE,SAAO,gBAC3D/gE,EAASmT,EAAA,cAAC2+C,EAAA,IAAG,CAAC7xD,UAAU,sBAAsBk3B,KAAK,eAAK5lB,MAAOA,IACnE,OAAO4B,EAAA,cAAC2+C,EAAA,KAAI,CAAC9xD,OAAO,4BAChBmT,EAAA,cAAC2+C,EAAA,IAAG,CACA7xD,UAAU,0BACVk3B,KAAM,eACN5lB,MAAOyvB,OAAOs3B,EAAM1B,aACpBt3D,QAAS/E,KAAKymE,eACd7tD,EAAA,qBAAKlT,UAAW4gE,IAAY,yCAIhC1tD,EAAA,cAAC2+C,EAAA,KAAI,CACD9xD,OAAQA,EACRzD,MAAO+7D,EAAM9F,MACbj3D,KAAK,WACLyG,KAAM,CAACwR,OAAOjZ,KAAKykE,WAAY1/D,QAAQ/E,KAAKqkE,gBA5C/CkC,GAAOG,GAAA,CADnBjuD,EAAA,GACY8tD,8QCFb,MAAMI,GAAiBl/D,IACnB,IAAI4kB,YAACA,EAAW20C,MAAEA,EAAKC,GAAEA,GAAMx5D,EAC/B,OAAOmR,EAAA,cAAAA,EAAA,cAAGyT,MAAc20C,MAAQC,IAiB9B2F,GAAsB,CACxB,CAAC1mE,KAAM,OAAQqI,KAAM,SAAUg0B,UAAW,IAAKxB,UAAU,GACzD,CAAC76B,KAAM,UAAWqI,KAAM,SAAUg0B,UAAW,KAC7C,CAACr8B,KAAM,cAAeqI,KAAM,SAAUg0B,UAAW,KACjD,CAACr8B,KAAM,MAAOqI,KAAM,SAAUg0B,UAAW,KACzC,CAACr8B,KAAM,SAAUqI,KAAM,WACvB,CAACrI,KAAM,SAAUqI,KAAM,MACvB,CAACrI,KAAM,OAAQqI,KAAM,SACrB,CAACrI,KAAM,SAAUqI,KAAM,WAGpB,MAAes+D,WAAqBtP,EAAA,MAA3C/3D,kCACYQ,KAAA4hE,eAAiB,EAAOzlD,EAAY7U,IAA8Bw/D,GAAA9mE,UAAA,qBAEtE,aADM+9D,EAAM7E,IAAIwC,aAAahkC,MAAMpwB,GAC5By2D,EAAM7E,IAAIwC,aAAa15D,SAG1BhC,KAAA+mE,eAAiB,KAA0BD,GAAA9mE,UAAA,2BACzC+9D,EAAM7E,IAAIwC,aAAah3C,UAGzB1kB,KAAAi3B,UAAY,EAACxvB,EAAsByB,IAChC0P,EAAA,qBAAKlT,UAAU,aAAYkT,EAAA,cAAC+tD,GAAa7mE,OAAA+I,OAAA,GAAKpB,MAGjDzH,KAAAgnE,aAAe,EAACjhB,EAAiB7lD,EAAamY,IAC3C,IAAIhJ,QAAgB,CAACC,EAASC,KACjCgoD,EAAA,IAAI/xD,KAAKoT,EAAA,cAAC6oD,GAAU,CAChB3nC,QAAQ,iCACR+nC,kBAAkB,iCAClBD,eAAgB5hE,KAAK4hE,eACrBmF,eAAgB/mE,KAAK+mE,eACrBngD,IAAK5mB,KAAKi3B,UACV1zB,WAAakE,GAAyBA,EAAKnE,GAC3CgM,QAASA,EAAS6M,YAAQ5a,IAC1B,KACIgO,SAKRvP,KAAAinE,kBAAoB,CAACC,GAClBtuD,EAAA,cAACkoD,GAAU,CAACx9D,GAAI4jE,KAGnBlnE,KAAAkqD,SAAoB,CACxBloD,MAAO,CACH9B,KAAM,CAAC4pD,OAAQ,OAAQ1pD,MAAO,gBAC9B05B,QAAS,CAACgwB,OAAQ,OAAQ1pD,MAAO,gBACjCisB,YAAa,CAACy9B,OAAQ,WAAY1pD,MAAO,eAAMkhC,KAAM,GACrDh1B,IAAK,CAACw9C,OAAQ,OAAQ1pD,MAAO,MAAO+zB,YAAa,6BACjDusC,OAAU,CAAC5W,OAAQ,WAAY1pD,MAAO,gBACtC06D,OAAQ,CAAChR,OAAQ,KAAM1pD,MAAO,qBAAO8oD,OAAQlpD,KAAKgnE,aAAcxf,QAASxnD,KAAKinE,mBAC9E5mE,KAAM,CAACypD,OAAQ,QAAS1pD,MAAO,sBAC/B6uB,OAAQ,CAAC66B,OAAQ,SAAU1pD,MAAO,eAAMsF,UAAW,qBAOnD1F,KAAAgrD,cAAgB,EAAO9qD,EAAa6lD,IAAqB+gB,GAAA9mE,UAAA,qBAC7D,IAAIkS,KAACA,GAAQ6zC,EACTx5B,EAAmBzR,EAAAnI,EAAEC,MAAM5S,KAAK6D,WAAW0oB,MAAQ,GACvDzR,EAAAnI,EAAEgmB,MAAMpM,EAAKra,SACPlS,KAAK6D,WAAW81D,QAAQptC,GAC9BgrC,EAAA,IAAI3xD,SAGE5F,KAAA0B,KAAO5B,OAAA2Y,EAAA,EAAA3Y,CAAS,IACf8Y,EAAA,cAAC2+C,EAAA,KAAI,CAAC3H,eAAgB,EACzBlqD,UAAU,MACV6f,OAAQqhD,GACR1c,SAAUlqD,KAAKkqD,SACfsF,SAAUxvD,KAAKuhC,WACfypB,cAAehrD,KAAKgrD,iBAjBtBxrD,gDACFQ,KAAKg0B,SAASh0B,KAAKyR,SAqBpB,MAAM01D,WAAiBN,GAA9BrnE,kCAEcQ,KAAAyR,KAAO,MACb,IAAI8a,IAACA,GAAOvsB,KAAK6D,YACb3D,KAACA,GAAQqsB,EACb,OAAO3T,EAAA,cAAC2+C,EAAA,KAAI,CAAC9xD,OAAQ,qBAAavF,EAAM2F,KAAK,SACzC+S,EAAA,cAAC5Y,KAAK0B,KAAI,SALlB6/B,iBAAsB,OAAOvhC,KAAK6D,WAAW0oB,KAU1C,MAAM66C,WAAgBP,GAA7BrnE,kCAEcQ,KAAAyR,KAAO,KACNmH,EAAA,cAAC2+C,EAAA,KAAI,CAAC9xD,OAAQ,kBAASI,KAAK,SAC/B+S,EAAA,cAAC5Y,KAAK0B,KAAI,QAHlB6/B,iBAAsB,MAAO,8QCpH1B,MAAM8lC,WAAiB9P,EAAA,MAA9B/3D,kCAIYQ,KAAA4+C,QAAU,MACd5+C,KAAKi4B,UAAUmvC,MAEXpnE,KAAAyR,KAAO,MACX,IAAI61D,QAACA,EAAOC,aAAEA,GAAgBvnE,KAAK6D,WAC/BmT,EAAQ4B,EAAA,wBAAQlT,UAAU,2BAA2BX,QAAS,IAAI/E,KAAK4+C,WAAWhmC,EAAA,cAAC2+C,EAAA,GAAE,CAACr3D,KAAK,UAC/F,OAAO0Y,EAAA,cAAC2+C,EAAA,KAAI,CAAC9xD,OAAO,MAAMuR,MAAOA,GAC7B4B,EAAA,cAAC2+C,EAAA,KAAI,CAACv1D,MAAOslE,EAAS7/D,KAAM,CAACwR,OAAQjZ,KAAKwnE,OAAQziE,QAASwiE,QAG3DvnE,KAAAwnE,OAAS,CAAC//D,IACd,IAAIvH,KAACA,EAAI45B,QAAEA,EAAOzN,YAAEA,EAAWhsB,KAAEA,EAAIiM,IAAEA,EAAGiW,SAAEA,GAAY9a,EACpDm1B,EAAOhkB,EAAA,cAAC2+C,EAAA,MAAK,CAAC3pC,KAAK,MAAKhV,EAAA,cAAC2+C,EAAA,MAAK,CAAC5nD,IAAKtP,KACpC2W,EAAQ4B,EAAA,qBAAKlT,UAAU,+BACtB4G,GAAO,IAAIsM,EAAA,yBACX2J,GAEDklD,EAAc3tC,EACdlhB,EAAA,cAAAA,EAAA,cAAG1Y,OAAO0Y,EAAA,uBAAIkhB,IACdlhB,EAAA,uBAAI1Y,GACR,OAAO0Y,EAAA,cAAC2+C,EAAA,IAAG,CAAC7xD,UAAU,gCAClBk3B,KAAMA,EAAM5lB,MAAOA,GACnB4B,EAAA,qBAAKlT,UAAU,QACXkT,EAAA,yBAAM6uD,GACN7uD,EAAA,yBAAKA,EAAA,cAAC2+C,EAAA,MAAK,KAAElrC,QA3BnB7sB,KAAKuD,4CACP/C,KAAKg0B,SAASh0B,KAAKyR,4lBCEpB,MAAMi2D,WAAqBnQ,EAAA,MAAlC/3D,kCAQYQ,KAAA+zB,SAAW,CAAOzsB,GAAeqgE,GAAA3nE,UAAA,qBAGrCA,KAAKwa,UAAYxa,KAAK6D,WAAWi2D,SAASxyD,EAF1B,EACD,QAIXtH,KAAAyR,KAAO3R,OAAA2Y,EAAA,EAAA3Y,CAAS,KACpB,IAAI2F,EAASmT,EAAA,cAAC2+C,EAAA,UAAS,CAAC7xD,UAAU,aAC9BquB,SAAU/zB,KAAK+zB,SACfI,YAAY,6BACZoI,UAAW,MACf,OAAO3jB,EAAA,cAAC2+C,EAAA,KAAI,CAAC1xD,KAAK,QAAQJ,OAAQA,GAC9BmT,EAAA,cAAC2+C,EAAA,KAAI,CAACv1D,MAAOhC,KAAKwa,IAAK/S,KAAM,CAACwR,OAAQjZ,KAAK4mB,IAAK7hB,QAAS/E,KAAK6D,WAAW+jE,WAIzE5nE,KAAA4mB,IAAM,CAAC5S,IACX,IAAIoI,MAACA,EAAKlc,KAAEA,EAAImsB,YAAEA,GAAerY,EACjC,OAAO4E,EAAA,cAAC2+C,EAAA,IAAG,CAAC7xD,UAAU,YAAYsR,MAAOqV,GACrCzT,EAAA,yBAAMwD,QAAUlc,MAxBlBV,gDACFQ,KAAKwa,UAAYxa,KAAK6D,WAAWgkE,WACjC7nE,KAAKg0B,SAASh0B,KAAKyR,SAJXq2D,GAAA,CAAXjgD,EAAA,8BAgCL,IAAakgD,GAAb,cAA4BnvD,EAAA,UAD5BpZ,kCAEgBQ,KAAA2xD,aAAuB,EAE3B3xD,KAAA4xD,SAAW,EAACnqD,EAAmBkP,EAAoBg7C,KACvD3xD,KAAK2xD,YAAcA,IAEf3xD,KAAA4mB,IAAM,CAACnf,IACX,IAAIvH,KAACA,EAAI8K,KAAEA,EAAIqhB,YAAEA,GAAe5kB,EAChC,OAAOmR,EAAA,cAAC2+C,EAAA,IAAG,CAAC7xD,UAAU,MAAMsR,MAAO4B,EAAA,uBAAOlT,UAAU,cAAc2mB,IAC9DzT,EAAA,cAACinD,EAAQ,CAACv8D,GAAI0H,QAAU9K,KAGxBF,KAAAgoE,WAAa,MACjB,GAAkB,OAAdhoE,KAAK6tB,KAAe,OACxB,IAAIkjC,cAACA,GAAiB/wD,KAAK6tB,UACLtsB,IAAlBwvD,GACyB,IAAzBA,EAAcvqD,QAClBu3D,EAAM7E,IAAIpB,KAAKmC,UACXlJ,EAAc9nD,IAAIhB,IACP,CAAC3E,GAAG2E,EAAE3E,GAAIiY,OAAO,CAAC,SAE7B,KAER/b,SACI,IAAIyoE,EAAWjoE,KAAK2xD,YAChB,CAACj1B,MAAM,SAAU33B,QAAQ/E,KAAKgoE,WAAY3nE,KAAK,QAASoiB,KAAK,gBAC7D,CAACia,MAAM,UAAW33B,QAAQ,IAAIwyD,EAAA,IAAI/xD,KAAKoT,EAAA,cAACsvD,GAAG,OAAK7nE,KAAK,OAAQoiB,KAAK,gBAMlE0lD,EAAavvD,EAAA,qBAAKlT,UAAU,sCALtB,CAACiC,GAAIiR,EAAA,wBACXlT,UAAWoZ,IAAW,MAAO,eAAenX,EAAE+0B,MAAO,UACrD33B,QAAS4C,EAAE5C,SACX6T,EAAA,mBAAGlT,UAAW,SAAWiC,EAAEtH,WAAUsH,EAAE8a,qBAE2B2lD,CAAIH,IAC1E,OAAOrvD,EAAA,cAAC2+C,EAAA,KAAI,CAAC9xD,OAAO,kBAChBmT,EAAA,cAAC2+C,EAAA,KAAI,CAAC77B,IAAK7N,GAAM7tB,KAAK6tB,KAAKA,EAAMpoB,OAAQ0iE,EACrCnmE,MAAO+7D,EAAM7E,IAAIpB,KAAKt9C,IACtB/S,KAAM,CAACwR,OAAQjZ,KAAK4mB,IAAKgrC,SAAU5xD,KAAK4xD,eAnCxCkW,GAAA,CAAXjgD,EAAA,sCADQkgD,GAAMD,GAAA,CADlBrvD,EAAA,GACYsvD,IA0Cb,IAAMG,GAAN,cAAkBtvD,EAAA,UADlBpZ,kCAEIQ,KAAA+zB,SAAW,CAAOzsB,GAAeqgE,GAAA3nE,UAAA,2BACvB+9D,EAAM7E,IAAIpB,KAAKgC,SAASxyD,MAKlCtH,KAAA4mB,IAAM,CAAC5S,IACH,IAEI+wC,EAAgBhgD,EADhByS,EAAK,CAAC,MAAO,UAYjB,YAbmEjW,IAAjDw8D,EAAM7E,IAAIpB,KAAKt9C,IAAIxS,KAAK2K,GAAKA,EAAErP,KAAO0Q,EAAG1Q,KAIvDkU,EAAGhS,KAAK,eACRT,EAAU,KAAI/E,KAAKqoE,OAAOr0D,GAAI,IAC9B+wC,EAAa,uBAGbvtC,EAAGhS,KAAK,eACRT,EAAU,KAAI/E,KAAKqoE,OAAOr0D,GAAI,IAC9B+wC,EAAansC,EAAA,0BAAMA,EAAA,mBAAGlT,UAAU,kCAE7BkT,EAAA,qBAAKlT,UAAU,0CAClBkT,EAAA,qBAAKlT,UAAU,qBAAqBsO,EAAG9T,KAAO,MAAQ8T,EAAGqY,aACzDzT,EAAA,wBAAQlT,UAAU,WAAUkT,EAAA,wBAAQlT,UAAWoZ,IAAWtH,GAAKzS,QAASA,GAAUggD,OAnB1FvlD,OAAOwU,EAAiBlO,GACpBi4D,EAAM7E,IAAIpB,KAAKmC,UAAU,CAAC,CAAC32D,GAAG0Q,EAAG1Q,GAAIiY,OAAO,CAAC,OAAQzV,GAqBzDtG,SACI,IAAIiG,EAASmT,EAAA,cAAC2+C,EAAA,UAAS,CAAC7xD,UAAU,aAC9BquB,SAAU/zB,KAAK+zB,SACfI,YAAY,6BACZoI,UAAW,MACf,OAAO3jB,EAAA,cAAC2+C,EAAA,KAAI,CAAC1xD,KAAK,QAAQJ,OAAQA,GAC9BmT,EAAA,cAAC2+C,EAAA,KAAI,CAACv1D,MAAO+7D,EAAM7E,IAAIpB,KAAK4B,YAAajyD,KAAM,CAACwR,OAAQjZ,KAAK4mB,KAAMlD,QAAS,UAhClFwkD,GAAGJ,GAAA,CADRrvD,EAAA,GACKyvD,8QC7EC,MAAMI,WAAgB/Q,EAAA,MAA7B/3D,kCAMYQ,KAAAuoE,SAAW,KAAYC,GAAAxoE,UAAA,2BACrBA,KAAKi4B,UAAUkvC,OAIjBnnE,KAAAyoE,WAAa,KAAYD,GAAAxoE,UAAA,sBACgB,IAAzCmI,QAAQ,kKACFnI,KAAK6D,WAAW6kE,YACtBnR,EAAA,IAAI3xD,UAIJ5F,KAAAyR,KAAO3R,OAAA2Y,EAAA,EAAA3Y,CAAS,KACpB,IAAIysB,IAACA,GAAOvsB,KAAK6D,YACbmH,KAACA,EAAI9K,KAAEA,EAAI45B,QAAEA,EAAOzN,YAAEA,EAAWhsB,KAAEA,EAAIy6D,OAAEA,EAAM2E,UAAEA,EAASC,YAAEA,GAAenzC,EAC3Ey2B,EAAOpqC,EAAA,yBACPA,EAAA,yBAAMyT,GACNzT,EAAA,cAAC4mD,EAAO,CAACE,YAAaA,EAAaD,UAAWA,KAE9CkJ,EAAY,CAEZ,CAAC7uC,QAAQ,kBAAS3lB,OAAOnU,KAAKuoE,SAAUloE,KAAK,QAC7C,CAACy5B,QAAQ,eAAM3lB,OAAOnU,KAAKyoE,WAAYpoE,KAAK,YAG5C2W,EAAQ4B,EAAA,cAAC2+C,EAAA,gBAAe,CAACnrC,QAASu8C,IAClClB,EAAc3tC,EACdlhB,EAAA,cAAAA,EAAA,cAAG1Y,OAAO0Y,EAAA,uBAAIkhB,IACdlhB,EAAA,uBAAI1Y,GACJohC,EAAc,CACd,GACA,CACI/4B,KAAM,YACNo+B,UAAW/tB,EAAA,cAAC2+C,EAAA,MAAK,CAACl3D,KAAMA,EAAMusC,KAAM66B,EAAap7C,YAAa22B,KAElE,GACA,CACIz6C,KAAM,YACNnI,MAAO,qBACPumC,UAAW/tB,EAAA,qBAAKlT,UAAU,QAAOkT,EAAA,cAACinD,EAAQ,CAACv8D,GAAI0H,EAAM40D,QAAQ,MASjE,CACIx/D,MAAO,MACPF,KAAM,MACNqI,KAAM,UAEV,CACIA,KAAM,YACNnI,MAAO,qBACPumC,UAAW/tB,EAAA,cAACkoD,GAAU,CAACx9D,GAAIw3D,KAE/B,IAGA8N,EAAWhwD,EAAA,wBAAQlT,UAAU,iCAAiCX,QAAS,IAAI/E,KAAKi4B,UAAUyvC,KAAa,4BAG3G,OAAO9uD,EAAA,cAAC2+C,EAAA,KAAI,CAAC9xD,OAAQ,SAAWvF,EAAM8W,MAAOA,GACzC4B,EAAA,cAAC2+C,EAAA,SAAQ,CAACj2B,KAAMA,EAAM7gC,OAAQ8rB,IAC9B3T,EAAA,cAAC2+C,EAAA,IAAG,CAAC7xD,UAAU,iBAAiBsR,MAAO4xD,GAAQ,kBAG/ChwD,EAAA,cAAC2+C,EAAA,KAAI,CAACv1D,MAAOhC,KAAK6D,WAAW6+D,WAAYj7D,KAAM,CAACwR,OAAOjZ,KAAKgiE,YAAaj9D,QAAQ/E,KAAK6oE,cAItF7oE,KAAA6oE,QAAU,CAAC5G,IACfjiE,KAAK6D,WAAW+jE,KAAK3F,EAASjuD,MAG1BhU,KAAAgiE,YAAc,EAACC,EAAmB/4D,KACtC,IAEI85C,EACA8lB,GAHA90D,GAACA,EAAI+0D,YAAaxtD,GAAU0mD,GAC5B/hE,KAACA,EAAImsB,YAAEA,EAAWrhB,KAAEA,GAAQgJ,EAOhC,OAJIuH,GAAUA,EAAO/U,OAAS,IAC1BsiE,EAAWlwD,EAAA,cAAAA,EAAA,oBAAM2C,EAAOO,KAAK,YAE7BuQ,IAAa22B,EAAOpqC,EAAA,qBAAKlT,UAAU,6BAA4B2mB,IAC5DzT,EAAA,cAAC2+C,EAAA,IAAG,CAAC7xD,UAAU,+BAA+BsR,MAAOgsC,GACxDpqC,EAAA,cAAConD,EAAQ,CAAC18D,GAAI0H,UAAY9K,MAAO4oE,KA5FnCtpE,gDAEFQ,KAAKg0B,SAASh0B,KAAKyR,mRCPpB,MAAMu3D,WAAmBzR,EAAA,MAAhC/3D,kCAkBYQ,KAAAipE,eAAiB,CAACh3D,IACtB,IAAIuD,OAACA,GAAUvD,EACfjS,KAAKkpE,cAAc1zD,EAAOtV,MAAQsV,EAAO8yB,UAGrCtoC,KAAAmpE,WAAa,KAAYC,GAAAppE,UAAA,qBAC7B,IAAI6b,EAAe,GACnB,GAAI7b,KAAK8wB,SACL,IAAK,IAAIlpB,KAAK5H,KAAKkpE,eACe,IAA1BlpE,KAAKkpE,cAActhE,IAAaiU,EAAIrW,KAAKoC,SAG/C5H,KAAK6D,WAAWslE,WAAWnpE,KAAKiiE,SAASjuD,GAAI6H,GACnD07C,EAAA,IAAI3xD,SAGA5F,KAAAqpE,aAAe,KAAYD,GAAAppE,UAAA,2BACzBA,KAAK6D,WAAWwlE,aAAarpE,KAAKiiE,SAASjuD,IACjDujD,EAAA,IAAI3xD,SAGA5F,KAAAyR,KAAO,MACX,IAEI63D,EAIAC,GANAv1D,GAACA,EAAE+0D,YAAEA,GAAe/oE,KAAKiiE,UACzB7lD,MAACA,EAAKlc,KAAEA,EAAImsB,YAAEA,EAAW9Q,OAAEA,GAAUvH,EAoBzC,OAlBoB,OAAhB+0D,QAAwCxnE,IAAhBwnE,IACxBO,EAAY1wD,EAAA,wBAAQlT,UAAU,gCAAgCX,QAAS/E,KAAKqpE,cAAY,6BAGxFrpE,KAAK8wB,WACLy4C,EAAkB3wD,EAAA,qBAAKlT,UAAU,QAE7B1F,KAAK8wB,SAAS7nB,IAAIhB,IACd,IAAIqgC,EAAUtoC,KAAKkpE,cAAcjhE,GACjC,OAAO2Q,EAAA,uBAAOtR,IAAKW,EAAGvC,UAAU,uBAC5BkT,EAAA,uBAAOojB,SAAUh8B,KAAKipE,eAClBngE,MAAO,CAAC6qC,MAAM,SAAUoV,OAAO,UAC/B7oD,KAAM+H,EAAGM,KAAK,WAAWmgD,eAAgBpgB,WAAkBrgC,OAMxE2Q,EAAA,cAAC2+C,EAAA,KAAI,CAAC9xD,OAAO,kBAChBmT,EAAA,qBAAKlT,UAAU,iCACXkT,EAAA,yBAAMwD,QAAUlc,GAChB0Y,EAAA,qBAAKlT,UAAU,cAAc2mB,GAC5Bk9C,EACD3wD,EAAA,cAAC2+C,EAAA,IAAG,CAAC7xD,UAAU,OAAOsR,MAAOsyD,GACzB1wD,EAAA,wBAAQlT,UAAU,yBAAyBX,QAAS/E,KAAKmpE,YAAU,iCA/D7E3pE,KAAKyiE,4CACPjiE,KAAKiiE,SAAWA,EAChB,IAAIjuD,GAACA,EAAE+0D,YAAEA,GAAe/oE,KAAKiiE,UACzB1mD,OAACA,GAAUvH,EACf,GAAIuH,EAAQ,CACRvb,KAAKkpE,cAAgB,GACrBlpE,KAAK8wB,SAAWvV,EAAO/J,MAAM,KAC7B,IAAK,IAAIqK,KAAO7b,KAAK8wB,SACjB9wB,KAAKkpE,cAAcrtD,QAA+Dta,KAAvDwnE,GAAeA,EAAY/gE,KAAKwhE,GAAMA,IAAO3tD,IAGhF7b,KAAKg0B,SAASh0B,KAAKyR,4lBCLpB,MAAMg4D,WAAsBlS,EAAA,WAAnC/3D,kCAWIQ,KAAAunE,aAAe,CAAO9/D,GAAsBiiE,GAAA1pE,UAAA,qBACxCA,KAAKusB,IAAM9kB,EACX,IAAI5G,QAAYq3D,EAAOx5C,WAAWjX,EAAKnE,IACvCtD,KAAK0iE,WAAa7hE,EAAIoI,IAAIhB,IACtB,IAAImU,MAACA,EAAKb,OAAEA,EAAMjY,GAAEA,EAAEpD,KAAEA,EAAImsB,YAAEA,EAAWrhB,KAAEA,EAAIy0D,UAAEA,EAASC,YAAEA,EAAWqJ,YAAEA,GAAe9gE,EACxF,MAAO,CACH+L,GAAI,CACA1Q,GAAIA,EACJpD,KAAMA,EACNmsB,YAAaA,EACbrhB,KAAMA,EACNuQ,OAAQA,EACRa,MAAOA,EACPqjD,UAAWA,EACXC,YAAaA,EACbiK,mBAAepoE,GAEnBuS,QAASsI,EACT2sD,YAAaA,GAAeA,EAAYv3D,MAAM,QAGtDxR,KAAKi4B,UAAUqwC,OAGnBtoE,KAAA25D,QAAU,CAAOl5D,GAAyBipE,GAAA1pE,UAAA,qBACtC,IAAIusB,EACAtnB,EAAM,IAAID,UACGzD,IAAbvB,KAAKusB,KACLA,EAAMzR,EAAAnI,EAAEC,MAAMnS,IACVg/D,UAAYx6D,GAGhBsnB,EAAMzR,EAAAnI,EAAEC,MAAM5S,KAAKusB,KACnBzR,EAAAnI,EAAEgmB,MAAMpM,EAAK9rB,IAEjB8rB,EAAIvhB,KAAOhL,KAAK0L,OAChB6gB,EAAImzC,YAAcz6D,EAClB,IAAIpE,QAAYq3D,EAAOyB,QAAQptC,GAC/BA,EAAIjpB,GAAKzC,EACT,IAAIg9D,EAAM79D,KAAKsnE,QAAQt/D,KAAKC,GAAKA,EAAE3E,KAAOzC,QAC9BU,IAARs8D,EACA/iD,EAAAnI,EAAEgmB,MAAMklC,EAAKtxC,GAGbvsB,KAAKsnE,QAAQ9hE,KAAK+mB,MAI1BvsB,KAAA0oE,UAAY,KAAYgB,GAAA1pE,UAAA,2BACdk4D,EAAO0B,OAAO55D,KAAK0L,OAAQ1L,KAAKusB,IAAIjpB,IAC1C,IAAI4F,EAAQlJ,KAAKsnE,QAAQxlD,UAAU7Z,GAAKA,EAAE3E,KAAOtD,KAAKusB,IAAIjpB,IACtD4F,GAAS,GAAGlJ,KAAKsnE,QAAQ3iD,OAAOzb,EAAO,MAG/ClJ,KAAA85D,SAAW,EAAOxyD,EAAY+U,EAAkBC,IAAoBotD,GAAA1pE,UAAA,qBAChE,aAAak4D,EAAO4B,SAAS95D,KAAK0L,OAAQpE,EAAK+U,EAAWC,MAG9Dtc,KAAA6nE,SAAW,KAAY6B,GAAA1pE,UAAA,qBACnB,aAAak4D,EAAO2P,SAAS7nE,KAAK0L,WAGtC1L,KAAA4nE,KAAO,CAAC5zD,IACJ,IAAIiuD,EAAoBjiE,KAAK0iE,WAAW16D,KAAKC,GAAKA,EAAE+L,GAAG1Q,KAAO0Q,EAAG1Q,IACjE,QAAiB/B,IAAb0gE,EACAA,EAAW,CACPjuD,GAAIA,EACJ+0D,iBAAaxnE,OAGhB,CACD,IAAIga,EAAS0mD,EAAS8G,YACP,OAAXxtD,QAA8Bha,IAAXga,IAAsB0mD,EAAS8G,YAAc,IAExE/oE,KAAKi4B,UAAU+wC,GAAY/G,KAyB/BjiE,KAAAmpE,WAAa,EAAOn1D,EAAiB8c,IAAsB44C,GAAA1pE,UAAA,qBACvD,IAAIwa,EAAqCxa,KAAK4pE,aAAa51D,EAAI8c,GAE/D,SADMonC,EAAO+B,UAAUj6D,KAAK0L,OAAQ1L,KAAKusB,IAAIjpB,GAAIkX,GAC7CA,EAAIhU,OAASxG,KAAK0iE,WAAWl8D,OAC7BxG,KAAK0iE,WAAWl+C,QAAQ,CACpBxQ,GAAIA,EACJ+0D,YAAaj4C,QAGhB,CACQ9wB,KAAK0iE,WAAW16D,KAAKC,GAAKA,EAAE+L,GAAG1Q,KAAO0Q,EAAG1Q,IAC/CylE,YAAcj4C,MAIzB9wB,KAAAqpE,aAAe,CAAOr1D,GAAoB01D,GAAA1pE,UAAA,qBACtC,IAAIwa,EAAqCxa,KAAK4pE,aAAa51D,SACrDkkD,EAAO+B,UAAUj6D,KAAK0L,OAAQ1L,KAAKusB,IAAIjpB,GAAIkX,GACjD,IAAItR,EAAQlJ,KAAK0iE,WAAW5gD,UAAU7Z,GAAKA,EAAE+L,GAAG1Q,KAAO0Q,EAAG1Q,IACtD4F,GAAO,GAAGlJ,KAAK0iE,WAAW/9C,OAAOzb,EAAO,MA5HhC1J,cAAckM,4CAC1B1L,KAAK0L,OAASA,EACd1L,KAAKsnE,cAAgBpP,EAAOJ,KAAK93D,KAAK0L,QACtC1L,KAAKi4B,UAAUovC,MAiFX7nE,aAAawU,EAAiB8c,GAClC,IAAItW,EAAqC,GACrCqvD,GAAQ,EACZ,IAAK,IAAIlR,KAAM34D,KAAK0iE,WAAY,CAC5B,IAAK1uD,GAAG81D,EAAIf,YAAEA,GAAepQ,EAC7B,GAAImR,EAAKxmE,KAAO0Q,EAAG1Q,GAAI,CACnB,QAAiB/B,IAAbuvB,EAAwB,SAC5Bi4C,EAAcj4C,EACd+4C,GAAQ,EAEZrvD,EAAIhV,KAAK,CACLlC,GAAIwmE,EAAKxmE,GACTiY,OAAQwtD,GAAe,KAM/B,YAHiBxnE,IAAbuvB,IAAoC,IAAV+4C,GAC1BrvD,EAAIhV,KAAK,CAAClC,GAAI0Q,EAAG1Q,GAAIiY,OAAQuV,IAE1BtW,GAxGCuvD,GAAA,CAAXliD,EAAA,kCACWkiD,GAAA,CAAXliD,EAAA,qCCnBL,MAAMmiD,GAAa,YACbC,GAAW,YAEV,MAAMC,GAAb1qE,cAKaQ,KAAAmqE,SAAkC,GAE3C3qE,IAAIijB,GASA,GARAziB,KAAKoqE,MAAO,OACM7oE,IAAdvB,KAAKyiB,MACLziB,KAAK2H,EAAI,EACT3H,KAAKyiB,KAAOA,GAGZziB,KAAKyiB,KAAOziB,KAAKyiB,KAAOA,IAExBziB,KAAKyiB,KAAKjc,OAAS,IACvB,MAAqB,IAAdxG,KAAKoqE,MACRpqE,KAAKqqE,aACLrqE,KAAKsqE,UAIL9qE,SAAS+N,GACb,IAAI1F,EAAM7H,KAAKyiB,KAAKjc,OAAS+G,EAAM/G,OACnC,GAAIxG,KAAK2H,EAAIE,EAAK,OAAO,EACzB,IAAK,IAAID,EAAE,EAAGA,EAAEC,EAAKD,IACjB,GAAI5H,KAAKyiB,KAAKqE,WAAW9mB,KAAK2H,EAAIC,KAAO2F,EAAMuZ,WAAWlf,GAAI,OAAO,EAEzE,OAAO,EAGHpI,aACJ,QAAmB+B,IAAfvB,KAAKsnC,MAAqB,OAC9B,QAAkB/lC,IAAdvB,KAAKyiB,KAAoB,OAC7B,IAAI9a,EAAI3H,KAAKyiB,KAAKyC,QAAQ+kD,GAAUjqE,KAAK2H,GACzC,GAAIA,EAAI,EAAG,CACP,IAAgC,IAA5B3H,KAAKuqE,SAASN,IAAoB,OAKtC,OAJAjqE,KAAKsnC,MAAM9hC,KAAgB,IAAXxF,KAAK2H,EAAS3H,KAAKyiB,KAAOziB,KAAKyiB,KAAKnK,OAAOtY,KAAK2H,IAChE3H,KAAK2H,EAAI,EACT3H,KAAKyiB,UAAOlhB,OACZvB,KAAKoqE,MAAO,GAGhBpqE,KAAKsnC,MAAM9hC,KAAKxF,KAAKyiB,KAAKrW,UAAUpM,KAAK2H,EAAGA,IAC5C3H,KAAKmqE,SAAS3kE,KAAKxF,KAAKsnC,OACxBtnC,KAAKsnC,WAAQ/lC,EACbvB,KAAK2H,EAAIA,EAAI,EAGTnI,UACJ,QAAkB+B,IAAdvB,KAAKyiB,KAAoB,OAC7B,IAAI9a,EAAI3H,KAAKyiB,KAAKyC,QAAQ8kD,GAAYhqE,KAAK2H,GAC3C,GAAIA,EAAI,EAAG,CACP,IAAkC,IAA9B3H,KAAKuqE,SAASP,IAAsB,OAKxC,OAJAhqE,KAAKmqE,SAAS3kE,KAAgB,IAAXxF,KAAK2H,EAAS3H,KAAKyiB,KAAOziB,KAAKyiB,KAAKnK,OAAOtY,KAAK2H,IACnE3H,KAAK2H,EAAI,EACT3H,KAAKyiB,UAAOlhB,OACZvB,KAAKoqE,MAAO,GAGhBpqE,KAAKmqE,SAAS3kE,KAAKxF,KAAKyiB,KAAKrW,UAAUpM,KAAK2H,EAAGA,IAC/C3H,KAAK2H,EAAIA,EAAI,EACb3H,KAAKsnC,MAAQ,8QC/CrB,MAAMkjC,GAAa,2BACbC,GAAmB,2BAClB,MAAMC,WAAiB9xD,EAAA,UAG1BpZ,YAAYgF,GACR3E,MAAM2E,GAMFxE,KAAA4uC,cAAgB,CAAC38B,IACrB,IAAI04D,EAAgB,IAChBt8B,MAACA,GAASp8B,EAAIuD,OACd3N,EAAMwmC,EAAM7nC,OAChB,IAAK,IAAIoB,EAAE,EAAGA,EAAEC,EAAKD,IACjB+iE,EAAQnlE,KAAK6oC,EAAMzmC,IAEvB5H,KAAK4E,SAAS,CACVypC,MAAOs8B,MAuBP3qE,KAAA4qE,UAAY,CAACp8B,IACjB,IAAIq8B,EAAK,IAAIC,WACbD,EAAGE,OAAS,SAASzlD,GAEjBiyC,EAAA,IAAI/xD,KAAKoT,EAAA,cAACoyD,GAAM,CAAC9qE,KAAMsuC,EAAKtuC,KAAMsC,QAASxC,KAAKsT,WAEpDu3D,EAAGI,WAAWz8B,EAAM,UAEhBxuC,KAAAQ,SAAW,CAACyR,IAChBA,EAAIorB,mBAoCAr9B,KAAAkrE,SAAW,KAAYC,GAAAnrE,UAAA,qBAC3Bu3D,EAAA,IAAIxoD,iBAEE/O,KAAKorE,QADM,MAGbprE,KAAAqrE,mBAAqB,KAAYF,GAAAnrE,UAAA,qBACrCu3D,EAAA,IAAIxoD,iBAEE/O,KAAKorE,QADM,MAxFjBprE,KAAKiG,MAAQ,CACTooC,WAAO9sC,GAef/B,WAAWgvC,EAAUtlC,GACjB,IAAIhJ,KAACA,EAAI0tB,KAAEA,EAAI09C,iBAAEA,GAAoB98B,EAcrC,OAAO51B,EAAA,cAAC2+C,EAAA,IAAG,CAAC7xD,UAAU,YAAYsR,MAAO4B,EAAA,cAAC2+C,EAAA,MAAK,KAb/C,WACI,IAAIv0C,EAAUjR,EAUd,OATI6b,EAAO,MACP5K,EAAI4K,EAAM7b,EAAI,KAET6b,EAAO,SACZ5K,EAAItJ,KAAK6xD,MAAO39C,EAAO,KAAQ,KAAK,IAAK7b,EAAI,MAG7CiR,EAAItJ,KAAK6xD,MAAO39C,EAAO,KAAO,KAAQ,KAAK,IAAK7b,EAAI,KAEjDiR,EAAI,IAAMjR,EAE4By5D,KAC7C5yD,EAAA,yBAAM1Y,GACN0Y,EAAA,yBAAKA,EAAA,cAAC2+C,EAAA,MAAK,kCAAO3+C,EAAA,cAAC2+C,EAAA,SAAQ,CAAC1nD,KAAMy7D,OAe5B9rE,OAAOisE,4CACjB,IAAIp9B,EAAiBruC,KAAKsuC,UAAUD,MAChCn8B,EAAO,IAAIq8B,SACf,IAAI1mC,EAAMwmC,EAAM7nC,OAChB,IAAK,IAAIoB,EAAE,EAAGA,EAAEC,EAAKD,IAAK,CACtB,IAAI4mC,EAAOH,EAAMzmC,GACjBsK,EAAKgxB,OAAO,UAAWsL,EAAMA,EAAKtuC,MAGtC,IACI04C,EADAtsC,EAAMyxD,EAAMlB,SAAW,cAAgB78D,KAAKwE,MAAMwP,GAAG1Q,GAAK,WAE3C,IAAfmoE,GACA7yB,EAAa6xB,GACbn+D,GAAO,eAGPssC,EAAa4xB,GAEjB,IACI,IAAI/7B,EAAkB,IAAIC,gBACtB9uC,QAAYkL,MAAMwB,EAAK,CACvB8G,OAAQ,OACRC,KAAMnB,EACNy8B,OAAQF,EAAgBE,SAE5B4oB,EAAA,IAAI/xD,KAAKoT,EAAA,cAAC8yD,GAAa5rE,OAAA+I,OAAA,GAAK7I,KAAKwE,MAAK,CAClCo0C,WAAYA,EACZh5C,IAAKA,EAAK6uC,gBAAiBA,MAEnC,MAAOvgC,GACHhL,QAAQ4D,MAAM,QAASwF,EAAK4B,MAapC1O,SACI,IACImsE,EAOA/sC,GARAyP,MAACA,GAASruC,KAAKiG,MAiBnB,YAfc1E,IAAV8sC,IACAs9B,EAAW/yD,EAAA,cAAC2+C,EAAA,KAAI,CACZ7xD,UAAU,OACV1D,MAAOqsC,EACP5mC,KAAM,CAACwR,OAAQjZ,KAAK4rE,WAAY7mE,QAAS/E,KAAK4qE,mBAGxCrpE,IAAV8sC,GAAuBA,EAAM7nC,OAAS,IACtCo4B,EAAShmB,EAAA,qBAAKlT,UAAU,eACpBkT,EAAA,wBAAQlT,UAAU,kBAAkB6C,KAAK,SAASxD,QAAS/E,KAAKkrE,UAAWV,IAC3E5xD,EAAA,qBAAKlT,UAAU,qBACfkT,EAAA,wBAAQlT,UAAU,0BACd6C,KAAK,SAASxD,QAAS/E,KAAKqrE,oBAAqBZ,MAGtD7xD,EAAA,cAAC2+C,EAAA,KAAI,CAAC9xD,OAAQ,kBAAUzF,KAAKwE,MAAMwP,GAAG9T,MACzC0Y,EAAA,qBAAKlT,UAAU,aACXkT,EAAA,+EACAA,EAAA,sBAAMlT,UAAU,OAAOmmE,QAAQ,sBAAsBrrE,SAAUR,KAAKQ,UAChEoY,EAAA,qBAAKlT,UAAU,QACXkT,EAAA,uBAAO8iB,IAAM4S,GAActuC,KAAKsuC,UAAUA,EAAU/lC,KAAK,OAAOjF,GAAG,QAC/DoC,UAAU,0BAA0BxF,KAAK,QAAQqtC,UAAU,EAC3DvR,SAAUh8B,KAAK4uC,iBAEtB+8B,EACA/sC,GAELhmB,EAAA,yBAAM5Y,KAAKiG,MAAM6lE,UACjBlzD,EAAA,yBAAM5Y,KAAKiG,MAAMwc,SAMjC,MAAMspD,GAAa,2BACbC,GAAmB,2BAClB,MAAMC,WAAiBrzD,EAAA,UAA9BpZ,kCACYQ,KAAAksE,SAAW,KAAYf,GAAAnrE,UAAA,qBAC3Bu3D,EAAA,IAAIxoD,iBAEE/O,KAAKorE,QADM,MAGbprE,KAAAmsE,mBAAqB,KAAYhB,GAAAnrE,UAAA,qBACrCu3D,EAAA,IAAIxoD,iBAEE/O,KAAKorE,QADM,MAGP5rE,OAAOisE,4CACjB,IACI7yB,EADAtsC,EAAMyxD,EAAMlB,SAAW,cAAgB78D,KAAKwE,MAAMwP,GAAG1Q,GAAK,WAE3C,IAAfmoE,GACA7yB,EAAaozB,GACb1/D,GAAO,eAGPssC,EAAamzB,GAEjB,IACI,IAAIt9B,EAAkB,IAAIC,gBACtB9uC,QAAYkL,MAAMwB,EAAK,CACvB8G,OAAQ,OACRu7B,OAAQF,EAAgBE,SAE5B4oB,EAAA,IAAI/xD,KAAKoT,EAAA,cAAC8yD,GAAa5rE,OAAA+I,OAAA,GAAK7I,KAAKwE,MAAK,CAClCo0C,WAAYA,EACZh5C,IAAKA,EAAK6uC,gBAAiBA,MAEnC,MAAOvgC,GACHhL,QAAQ4D,MAAM,QAASwF,EAAK4B,MAGpC1O,SACI,OAAOoZ,EAAA,cAAC2+C,EAAA,KAAI,CAAC9xD,OAAQ,kBAAUzF,KAAKwE,MAAMwP,GAAG9T,MACzC0Y,EAAA,qBAAKlT,UAAU,oBACXkT,EAAA,oBAAIlT,UAAU,QACVkT,EAAA,oJACAA,EAAA,sKACAA,EAAA,yIAEJA,EAAA,qBAAKlT,UAAU,cACXkT,EAAA,wBAAQlT,UAAU,kBAAkB6C,KAAK,SAASxD,QAAS/E,KAAKksE,UAAWH,IAC3EnzD,EAAA,qBAAKlT,UAAU,qBACfkT,EAAA,wBAAQlT,UAAU,0BACd6C,KAAK,SAASxD,QAAS/E,KAAKmsE,oBAAqBH,QAWzE,MAAMhB,WAAepyD,EAAA,UACjBpZ,SACI,OAAOoZ,EAAA,cAAC2+C,EAAA,KAAI,CAAC9xD,OAAQzF,KAAKwE,MAAMtE,MAC5B0Y,EAAA,qBAAKlT,UAAU,aAAa1F,KAAKwE,MAAMhC,WAgBnD,MAAMkpE,WAAsB9yD,EAAA,UAGxBpZ,YAAYgF,GACR3E,MAAM2E,GAgGFxE,KAAAosE,YAAc,MAClB,IAAIC,EAAOtgE,SAASwG,eAAe,aACnC,IAAIq6B,EAAO5sC,KAAKssE,UAAUD,GACrBz/B,IACDA,EAAKn3B,WAAam3B,EAAKj3B,aAAe,EACtC3V,KAAKusE,cAGLvsE,KAAKwsE,oBAiDLxsE,KAAAysE,WAAa,EAAChqD,EAAsBvZ,KACxC,GAAIqqB,MAAMC,QAAQ/Q,GAAO,CACrB,IAEIrL,EACyBzP,EAFzB+kE,EAAOjqD,EAAK,GAEZkqD,EAAKD,EAAKxnD,QAAQ,MAQtB,GAPW,IAAPynD,GACAA,EAAK,EACLhlE,EAAI+kE,EAAKxnD,QAAQ,KAAMynD,IAGvBhlE,EAAI+kE,EAAKxnD,QAAQ,MAEjBvd,EAAI,EAAGA,OAAIpG,MACV,CACD,IAAIgiC,EAAImpC,EAAKxnD,QAAQ,KACjBqe,EAAI57B,IAAGA,EAAI47B,GAEnBnsB,EAAQs1D,EAAKtgE,UAAUugE,EAAIhlE,GAE3B,IAWIilE,EAAepqE,EAXfuC,EAAU,KACV,IAAI6Q,EAAI5V,KAAKiG,MAAM4mE,QAAQ3jE,GACV0M,GAAP,IAANA,EAEJ5V,KAAK4E,SAASkoE,IAAa,CACvBD,QAAO/sE,OAAA+I,OAAA,GACAikE,EAAUD,QAAO,CACpBrtE,CAAC0J,GAAQ0M,QAmBrB,OAdgC,IAA5B5V,KAAKiG,MAAM4mE,QAAQ3jE,IACnB0jE,EAAYh0D,EAAA,cAAC2+C,EAAA,GAAE,CAACr3D,KAAK,kBAAkBwF,UAAU,iBACjDlD,EAAUoW,EAAA,yBAEF6J,EAAKxZ,IAAI,CAAChB,EAAGL,IACe,IAApBK,EAAEyoB,OAAOlqB,OAAqB,KAC3BoS,EAAA,qBAAK9P,MAAO,CAACikE,WAAY,YAAazlE,IAAK4B,EAAQ,IAAMtB,GAAIK,MAMhF2kE,EAAYh0D,EAAA,cAAC2+C,EAAA,GAAE,CAACr3D,KAAK,oBAAoBwF,UAAU,iBAEhDkT,EAAA,cAACA,EAAA,SAAc,CAACtR,IAAK4B,GACxB0P,EAAA,qBAAKlT,UAAU,8BAA8BX,QAASA,GAAU6nE,MAAWh0D,EAAA,uBAAIxB,IAC9E5U,GAGT,GAA2B,IAAvBigB,EAAKiO,OAAOlqB,OAAc,OAAO,KACrC,IAAI+K,EAAQkR,EAAKjR,MAAM,MACvB,OAAOoH,EAAA,cAACA,EAAA,SAAc,CAACtR,IAAK4B,GAEpBqI,EAAMtI,IAAI,CAAChB,EAAGL,IAAmB,IAAbK,EAAEzB,OAClBoS,EAAA,qBAAKtR,IAAKM,GAAC,QACXgR,EAAA,qBAAKtR,IAAKM,GAAIK,OAjN1BjI,KAAKgtE,aAAe,IAAI9C,GACxBlqE,KAAKiG,MAAQ,CACTgnE,MAAOjtE,KAAKgtE,aAAa7C,SACzB+C,SAAU,EACVL,QAAS,IAGjBrtE,qBACI+3D,EAAA,IAAIvoD,gBAAgB,IAA2Bm8D,GAAAnrE,UAAA,qBAC3C,OAAIA,KAAKiG,MAAMinE,SAAS,GACjB,IAAI79D,QAAiB,CAACC,EAASC,KAClC,IACI,IAAuD,IAAnDpH,uBAAanI,KAAKwE,MAAMo0C,oEAAiC,CACzD,IACI54C,KAAKwE,MAAMiqC,gBAAgB0+B,QAE/B,MAAOtmE,GACH3D,QAAQ4D,MAAMD,GAElByI,GAAQ,QAGRA,GAAQ,GAGhB,MAAOzI,GACH0I,EAAO1I,SAKfrH,0BACJQ,KAAKotE,YAAcC,YAAY,KAC3B,IAAIhB,EAAOtgE,SAASwG,eAAe,aACnC85D,GAAQA,EAAKiB,kBASd,KAEC9tE,wBACJmH,WAAW,KACP4mE,cAAcvtE,KAAKotE,cACpB,KASC5tE,UAAU8S,GACd,GAAKA,EACL,MAAmB,SAAfA,EAAGk7D,QAA2Bl7D,EAC3BtS,KAAKssE,UAAUh6D,EAAGm7D,eAarBjuE,cACJ,IAAI6sE,EAAOtgE,SAASwG,eAAe,UACnC85D,GAAQA,EAAKiB,iBAST9tE,iBACJ,IAAI6sE,EAAOtgE,SAASwG,eAAe,aACnC85D,GAAQA,EAAKiB,iBAqBX9tE,6DACF,IAAIqgB,EAAO7f,KACPyuD,EAAO,IAAIzpD,KAgCfhF,KAAK0tE,0BACL,UAhCA,SAAiBC,GACb,IAAIC,EAAQ,EACZ,OAAO,IAAIv+D,QAAQ,CAACC,EAASC,MACzB,SAASs+D,IACLF,EAAOG,OAAO3/D,KAAK,EAAE4/D,OAAM11D,YAMvB,GAAI01D,EAMA,OAJAluD,EAAKjb,SAAS,CACVsoE,SAAU,IAAIloE,MAAOG,UAAYspD,EAAKtpD,iBAE1CmK,IAGJ,IAAImT,EAbJ,SAAsBurD,GAClB,IAAIC,EAAgBxnC,OAAOynC,aAAaC,MAAM,KAAMH,GAEpD,OADoBI,mBAAmBrnD,OAAOknD,IAWvCI,CAAah2D,GACxBwH,EAAKmtD,aAAah+C,IAAIvM,GACtB5C,EAAKjb,SAAS,CACVqoE,MAAOptD,EAAKmtD,aAAa7C,WAE7ByD,GAASv1D,EAAMi2D,WAEfT,MACDnrD,MAAMnT,GAEbs+D,KAKEU,CAAQvuE,KAAKwE,MAAM5E,IAAIyT,KAAKm7D,aAEtC,MAAO3nE,GACH3D,QAAQ4D,MAAMD,WAGd7G,KAAKyuE,2BAiEbjvE,SACI,IAAIwU,GAACA,EAAE4kC,WAAEA,GAAc54C,KAAKwE,OACxB0oE,QAACA,EAAOD,MAAEA,GAASjtE,KAAKiG,MACxBR,EAASuO,EAAG9T,KAAO,MAAQ04C,GAAcs0B,GAAS,EAAG,eAAO,aAChE,OAAOt0D,EAAA,cAAC2+C,EAAA,KAAI,CAAC9xD,OAAQA,EAAQI,KAAK,SAC9B+S,EAAA,qBAAKtV,GAAG,WACRsV,EAAA,qBAAKtV,GAAG,YACJorE,cAAe1uE,KAAKosE,YACpB1mE,UAAU,YACVoD,MAAO,CAAC6lE,SAAU,aAAc5B,WAAY,WAC3CE,EAAMhkE,IAAIjJ,KAAKysE,aAEnBS,GAAS,EAAGt0D,EAAA,qBAAKlT,UAAU,YAAYoD,MAAO,CAAC4zB,MAAO,MAAOkyC,WAAY,SACrEh2B,+CAAmBl/B,KAAKC,MAAMuzD,EAAQ,oBAClC3rE,EACTqX,EAAA,qBAAKtV,GAAG,0RCrbpB,MAAMurE,WAAmBj2D,EAAA,UAErBpZ,YAAYgF,GACR3E,MAAM2E,GACNxE,KAAKiG,MAAQ,CACTjE,MAAO,MAEXhC,KAAK0hE,UAAY1hE,KAAK0hE,UAAU57D,KAAK9F,MACrCA,KAAK+zB,SAAW/zB,KAAK+zB,SAASjuB,KAAK9F,MAEjCR,6DACF,IAAIykC,KAACA,EAAI29B,eAAEA,EAAczlD,OAAEA,GAAUnc,KAAKwE,MAC1CxE,KAAK4E,SAAS,CACV5C,MAAOuxB,MAAMC,QAAQouC,GAAiBA,QAAuBA,EAAezlD,EAAQ,QAG5F3c,UAAUiI,GACN,IAAI6H,QAACA,GAAWtP,KAAKwE,MACrB8K,EAAQ7H,GACR8vD,EAAA,IAAI3xD,MAEFpG,SAAS8H,4CAGX,IAAIs6D,eAACA,EAAczlD,OAAEA,GAAUnc,KAAKwE,MACpC,GAA8B,oBAAnBo9D,EAA+B,CACtC,IAAI/gE,QAAY+gE,EAAezlD,EAAQ7U,GACvCtH,KAAK4E,SAAS,CAAC5C,MAAOnB,OAG9BrB,SACI,IAAIs6B,QAACA,EAAOlT,IAAEA,EAAGi7C,kBAAEA,GAAqB7hE,KAAKwE,MAC7C,OAAOoU,EAAA,cAAC2+C,EAAA,KAAI,CAAC9xD,OAAQq0B,EAASj0B,KAAK,SAC/B+S,EAAA,qBAAKlT,UAAU,aACXkT,EAAA,cAAC2+C,EAAA,UAAS,CAAC7xD,UAAU,OACjBquB,SAAU/zB,KAAK+zB,SACfI,YAAa0tC,EACbtlC,UAAW,OAEnB3jB,EAAA,cAAC2+C,EAAA,KAAI,CAACv1D,MAAOhC,KAAKiG,MAAMjE,MAAOyF,KAAM,CAAC1C,QAAQ/E,KAAK0hE,UAAWzoD,OAAO2N,0RC7DjF,MAAMkoD,GAAiBrnE,IACnB,IAAI4kB,YAACA,EAAW20C,MAAEA,EAAKC,GAAEA,GAAMx5D,EAC/B,OAAOmR,EAAA,cAAAA,EAAA,cAAGyT,MAAc20C,MAAQC,IAyB9B8N,GAAS,CACX3uE,MAAO,MACP8B,MATmB,CAAChC,KAAM,MAAOqI,KAAM,SAAUwyB,UAAS,EAAMwB,UAAU,MAYxEyyC,GAAa,CACf5uE,MAAO,WACP8B,MAbuB,CAAChC,KAAM,UAAWqI,KAAM,SAAUwyB,UAAS,EAAOwB,UAAU,KAcnF0H,KAAM,CAAC9P,YAAY,8DAGjB86C,GAAY,CACd7uE,MAAO,qBACP8B,MAlBsB,CAAChC,KAAM,SAAUqI,KAAM,MAmB7C07B,KAAM,CACF17B,KAAM,UACNi+B,YAAa,uCACbJ,MDvCqB5hC,GCAU,CACnCs1B,QAAS,iCACT+nC,kBAAmB,iCACnBD,eAAgB,CAAOzlD,EAAY7U,IAAe4nE,QAAD3tE,OAAA,qBAE7C,aADMw8D,EAAM7E,IAAIwC,aAAahkC,MAAMpwB,GAC5By2D,EAAM7E,IAAIwC,aAAa15D,QAElC+kE,eAAgB,IAAYmI,QAAD3tE,OAAA,2BACjBw8D,EAAM7E,IAAIwC,aAAah3C,SAEjCkC,IAAK,CAACnf,EAAsByB,IACjB0P,EAAA,qBAAKlT,UAAU,aAAYkT,EAAA,cAACk2D,GAAahvE,OAAA+I,OAAA,GAAKpB,MDVlD,SAASw8B,EAAkB9nB,GAC9B,OAAO,IAAI9M,QAAc,CAACC,EAASC,KAC/BgoD,EAAA,IAAI/xD,KAAKoT,EAAA,cAACi2D,GAAU/uE,OAAA+I,OAAA,CAACyG,QAASA,EAAS20B,KAAMA,EAAM9nB,OAAQA,GAAY3X,UCqC3E6hC,WAAa5+B,IACF,CACHnE,GAAImE,EAAKnE,GACTw2B,QAASlhB,EAAA,cAACk2D,GAAahvE,OAAA+I,OAAA,GAAKpB,MAGpC8+B,WAAajjC,GAAYy6D,EAAM3B,aAAanyD,IAAI3G,KD9CjD,IAAsBkB,GCkD7B,MAAM2qE,GAAoB,CACtB/uE,MAAO,iCACP8B,MAlCsB,CAAChC,KAAM,UAAWqI,KAAM,SAAUg0B,UAAU,GAAI6H,aAAa,SAmCnFH,KAAM,CACF17B,KAAM,SACN4yB,UAAU,IAIZi0C,GAAQ,CACVhvE,MAAO,iCACP8B,MA1CkB,CAAChC,KAAM,KAAMqI,KAAM,SAAUg0B,UAAU,GAAIxB,UAAU,IA6CrEs0C,GAAgB,CAClBjvE,MAAO,iCACP8B,MA9C0B,CAAChC,KAAK,aAAcqI,KAAK,SAAUg0B,UAAU,KA+CvE0H,KAAM,CACF17B,KAAM,WACNg0B,UAAW,IACX+E,KAAM,IAIP,MAAMguC,WAAuB/X,EAAA,MAApC/3D,kCAEYQ,KAAAkyC,SAAqB,CACzB68B,GACAC,GACAC,GACAE,GACAC,GACAC,IAKIrvE,KAAAQ,SAAW,CAAOC,GAAiDyuE,GAAAlvE,UAAA,qBAOvES,EAAO8H,KAAO,EACd9H,EAAO8uE,OAASvvE,KAAK6D,WAAWmQ,GAAG1Q,GAEvB,WADItD,KAAK6D,WAAWo3D,YAAYx6D,KAS5C82D,EAAA,IAAI3xD,SAGA5F,KAAAyR,KAAO,KACJmH,EAAA,cAAC2+C,EAAA,KAAI,CAAC9xD,OAAO,uBAChBmT,EAAA,cAAC42D,GAAA,UAAS,CAAC9zC,IAAKjlB,GAAGzW,KAAKyvE,UAAUh5D,EAAG/Q,UAAU,MAAMwsC,SAAUlyC,KAAKkyC,SAAU1xC,SAAUR,KAAKQ,aA1B/FhB,gDACFQ,KAAKg0B,SAASh0B,KAAKyR,mRC1FpB,MAAMi+D,WAAoBnY,EAAA,MAAjC/3D,kCASYQ,KAAA2vE,aAAe,EAAOt3D,EAAW6rD,IAAsC0L,GAAA5vE,UAAA,qBAO/D,WADIA,KAAK6vE,WAAW,MAAOx3D,MAKvCrY,KAAKo4D,QAAQ9rD,IAAM+L,MAEfrY,KAAA8vE,iBAAmB,EAAOz3D,EAAW6rD,IAAsC0L,GAAA5vE,UAAA,qBAOnE,WADIA,KAAK6vE,WAAW,UAAWx3D,MAK3CrY,KAAKo4D,QAAQlkD,QAAUmE,MAEnBrY,KAAA+vE,YAAc,EAAO13D,EAAW6rD,IAAsC0L,GAAA5vE,UAAA,qBAE1E,GAAY,WADIA,KAAK6vE,WAAW,KAAMx3D,IAElC,MAAO,yCAEXrY,KAAKo4D,QAAQvkD,GAAKwE,KAEdrY,KAAAgwE,gBAAkB,EAAO33D,EAAc6rD,IAAsC0L,GAAA5vE,UAAA,qBACjF,QAAcuB,IAAV8W,GAAiC,OAAVA,EAAgB,OAC3C,GAAmC,UAA/BA,EAAM8N,cAAcuK,OAAoB,MAAO,4CACnC1wB,KAAK6vE,WAAW,UAAWx3D,GAC3CrY,KAAKo4D,QAAQgD,QAAU/iD,KAEnBrY,KAAAiwE,oBAAsB,EAAO53D,EAAc6rD,IAAsC0L,GAAA5vE,UAAA,2BAC/EA,KAAK6vE,WAAW,aAAcx3D,GACpCrY,KAAKo4D,QAAQiD,WAAahjD,KAEtBrY,KAAAkwE,cAAgB,KAAYN,GAAA5vE,UAAA,sBACe,IAA3CmI,QAAQ,uJACNnI,KAAK6D,WAAWq3D,WAAWl7D,KAAKo4D,SACtCb,EAAA,IAAI3xD,UAEA5F,KAAAyR,KAAO,MACX,IAAIuC,GAACA,GAAMhU,KAAK6D,WACZy9B,EAAc,CACd,GACA,CACI/4B,KAAM,SACNrI,KAAM,MACNE,MAAO,MACP2E,QAAS,IAAIwyD,EAAA,IAAI/xD,KAAKoT,EAAA,cAACuoD,GAAe,CAClC/pD,MAAM,kBACNiB,MAAOrY,KAAKo4D,QAAQ9rD,IACpB06C,UAAWhnD,KAAK2vE,iBAExB,CACIpnE,KAAM,SACNrI,KAAM,UACNE,MAAO,WACP2E,QAAS,IAAIwyD,EAAA,IAAI/xD,KAAKoT,EAAA,cAACuoD,GAAe,CAClC/pD,MAAM,uBACNiB,MAAOrY,KAAKo4D,QAAQlkD,QACpB8yC,UAAWhnD,KAAK8vE,qBAExB,CACIvnE,KAAM,YACNnI,MAAO,qBACPumC,UAAW/tB,EAAA,cAACkoD,GAAU,CAACx9D,GAAItD,KAAKo4D,QAAQ0C,UAE5C,CACIvyD,KAAM,SACNrI,KAAM,UACNE,MAAO,iCACP2E,QAAS,IAAIwyD,EAAA,IAAI/xD,KAAKoT,EAAA,cAACuoD,GAAe,CAClC/pD,MAAM,iCACNiB,MAAOrY,KAAKo4D,QAAQgD,QACpBpU,UAAWhnD,KAAKgwE,oBAExB,CACIznE,KAAM,SACNrI,KAAM,KACNE,MAAO,2BACP2E,QAAS,IAAIwyD,EAAA,IAAI/xD,KAAKoT,EAAA,cAACuoD,GAAe,CAClC/pD,MAAM,iCACNiB,MAAOrY,KAAKo4D,QAAQvkD,GACpBmzC,UAAWhnD,KAAK+vE,gBAExB,CACIxnE,KAAM,SACNrI,KAAM,aACNE,MAAO,iCACP2E,QAAS,IAAIwyD,EAAA,IAAI/xD,KAAKoT,EAAA,cAAC2oD,GAAa,CAChCnqD,MAAM,iCACNiB,MAAOrY,KAAKo4D,QAAQiD,WACpBrU,UAAWhnD,KAAKiwE,yBAGxBj5D,EAAQ4B,EAAA,wBAAQ7T,QAAS/E,KAAKkwE,cAAexqE,UAAU,mBAAiB,gBAC5E,OAAOkT,EAAA,cAAC2+C,EAAA,KAAI,CAAC9xD,OAAQ,QAAUuO,EAAG9T,KAAM8W,MAAOA,GAC3C4B,EAAA,cAAC2+C,EAAA,SAAQ,CAACj2B,KAAMA,EAAM7gC,OAAQT,KAAKo4D,aAhHrC54D,KAAK44D,4CACPp4D,KAAKo4D,QAAUA,EACfp4D,KAAKg0B,SAASh0B,KAAKyR,QAETjS,WAAW0uC,EAAa71B,4CAClC,aAAarY,KAAK6D,WAAWs3D,kBAAkBn7D,KAAKo4D,QAASlqB,EAAM71B,oUAN3D83D,CAAA,CAAXtoD,EAAA,4SCJL,MAAMuoD,GAAW,CACb,CACIhwE,MAAO,eACP8B,MAAO,CAAChC,KAAM,OAAQqI,KAAM,SAAUg0B,UAAW,IAAKxB,UAAU,IAEpE,CACI36B,MAAO,eACP8B,MAAO,CAAChC,KAAM,cAAeqI,KAAM,SAAUg0B,UAAW,KACxD0H,KAAM,CAAC17B,KAAM,cAUd,MAAe8nE,WAAqB9Y,EAAA,MAA3C/3D,kCAIcQ,KAAAQ,SAAW,CAAOC,GAAqC6vE,GAAAtwE,UAAA,2BACvDA,KAAK6D,WAAWs2D,OAAO15D,GAC7B82D,EAAA,IAAI3xD,SALFpG,gDACFQ,KAAKg0B,SAASh0B,KAAKyR,QAQbjS,KAAK+hC,GACX,OAAO3oB,EAAA,cAAC42D,GAAA,UAAS,CACb9pE,UAAU,MACVwsC,SAAUk+B,GACV5vE,SAAUR,KAAKQ,SAAU+gC,WAAYA,KAI1C,MAAMgvC,WAAiBF,GAA9B7wE,kCACcQ,KAAAyR,KAAO,MACb,IAAIuC,GAACA,GAAMhU,KAAK6D,YACZ3D,KAACA,GAAQ8T,EACb,OAAO4E,EAAA,cAAC2+C,EAAA,KAAI,CAAC9xD,OAAQ,oBAAYvF,EAAM2F,KAAK,SACvC7F,KAAK0B,KAAKsS,OAKhB,MAAMw8D,WAAgBH,GAA7B7wE,kCACcQ,KAAAyR,KAAO,KACNmH,EAAA,cAAC2+C,EAAA,KAAI,CAAC9xD,OAAQ,iBAAQI,KAAK,SAC7B7F,KAAK0B,KAAK,iRC7ChB,MAAM+uE,WAAelZ,EAAA,MAA5B/3D,kCAKYQ,KAAAuoE,SAAW,KAAYmI,GAAA1wE,UAAA,2BACrBA,KAAKi4B,UAAUs4C,OAIjBvwE,KAAAyoE,WAAa,KAAYiI,GAAA1wE,UAAA,sBACA,IAAzBmI,QAAQ,wDACFnI,KAAK6D,WAAW8sE,WACtBpZ,EAAA,IAAI3xD,UAIJ5F,KAAAyR,KAAO,MACX,IAsDIm/D,GAtDAC,WAACA,EAAUC,WAAEA,EAAUC,aAAEA,EAAY/8D,GAAEA,EAAEgnD,SAAEA,GAAYh7D,KAAK6D,YAC5D+zD,QAACA,GAAWmG,EAAM/yD,MAClB1H,GAACA,EAAEpD,KAAEA,EAAImsB,YAAEA,EAAW9Q,OAAEA,EAAMvQ,KAAEA,EAAIy0D,UAAEA,EAASC,YAAEA,GAAe1rD,EAChEgvC,EAAOpqC,EAAA,yBACPA,EAAA,yBAAMyT,GACNzT,EAAA,cAAC4mD,EAAO,CAACE,YAAaA,EAAaD,UAAWA,KAE9CkJ,EAAY,CACZ,CAAC7uC,QAAQ,iBAAQ3lB,OAAOnU,KAAKuoE,SAAUloE,KAAK,QAC5C,CAACy5B,QAAQ,eAAM3lB,OAAOnU,KAAKyoE,WAAYpoE,KAAK,YAE5C2W,EAAQ4gD,EAAQ,GAAKh/C,EAAA,cAAC2+C,EAAA,gBAAe,CAACnrC,QAASu8C,IAC/CrnC,EAAc,CACd,GACA,CACI/4B,KAAM,YACNo+B,UAAW/tB,EAAA,cAAC2+C,EAAA,IAAG,CAAC7xD,UAAU,OACtBk3B,KAAMhkB,EAAA,cAAC2+C,EAAA,GAAE,CAACr3D,KAAK,WAAWwF,UAAU,6BACpCkT,EAAA,yBAAKA,EAAA,uBAAI1Y,IACR8iD,IAGT,CACIz6C,KAAM,YACNnI,MAAO,qBACPumC,UAAW/tB,EAAA,qBAAKlT,UAAU,QAAOkT,EAAA,cAACinD,EAAQ,CAACv8D,GAAI0H,EAAM40D,QAAQ,MAElE,GACA,CACKr3D,KAAM,YACNnI,MAAO,2BACPumC,UAAW/tB,EAAA,cAAC2+C,EAAA,IAAG,CAACxyD,QAAS8rE,EAAYnrE,UAAU,4BAC3Ck3B,KAAK,yCAAW5lB,MAAO4B,EAAA,cAAC2+C,EAAA,GAAE,CAAC7xD,UAAU,oBAAoBxF,KAAK,qBAEtE,CACIqI,KAAM,YACNnI,MAAO,iBACPumC,UAAW/tB,EAAA,cAAC2+C,EAAA,IAAG,CAACxyD,QAAS+rE,EAAYprE,UAAU,4BAC3Ck3B,KAAK,mCAAU5lB,MAAO4B,EAAA,cAAC2+C,EAAA,GAAE,CAAC7xD,UAAU,oBAAoBxF,KAAK,sBAUrE8wE,EAAgBpZ,EAAQ,GAAKh/C,EAAA,wBAC7BlT,UAAU,iCACVX,QAAS,IAAI/E,KAAK6D,WAAWotE,sBAAoB,gBAOrD,OAFIrZ,EAAQ,IAAGgZ,EAAiBG,GAEzBn4D,EAAA,cAAC2+C,EAAA,KAAI,CAAC9xD,OAAQ,QAAUvF,EAAM8W,MAAOA,GACxC4B,EAAA,cAAC2+C,EAAA,SAAQ,CAACj2B,KAAMA,EAAM7gC,OAAQuT,IAC9B4E,EAAA,qBAAKlT,UAAU,yCACXkT,EAAA,cAAC2+C,EAAA,MAAK,CAACzuD,MAAO,CAAC6tD,QAAQ,QAAS9E,KAAK,IAAE,WACtCmf,GAELp4D,EAAA,cAAC2+C,EAAA,KAAI,CAACv1D,MAAOg5D,EAAUvzD,KAAM,CAACwR,OAAOjZ,KAAKkxE,cAAensE,QAAQ6rE,QAhFnEpxE,gDACFQ,KAAKg0B,SAASh0B,KAAKyR,QAkFfjS,cAAc44D,EAA0BlvD,GAC5C,IAAIoD,IAACA,EAAGwuD,OAAEA,EAAMjnD,GAAEA,EAAEunD,QAAEA,EAAO+V,aAAEA,GAAgB/Y,EAC3CgZ,EAAWD,EAEXv4D,EAAA,cAAAA,EAAA,cAAEA,EAAA,cAAC2+C,EAAA,MAAK,uBAAa3+C,EAAA,cAAC2+C,EAAA,SAAQ,CAAC1nD,KAAMshE,KADrCv4D,EAAA,cAAC2+C,EAAA,MAAK,2BAGV,OAAO3+C,EAAA,cAAC2+C,EAAA,IAAG,CAAC7xD,UAAU,2DAClBsR,MAAO4B,EAAA,2BAAQw4D,IAEfx4D,EAAA,yBACIA,EAAA,yBAAMtM,GACNsM,EAAA,yBAAMwiD,MAAUvnD,GAChB+E,EAAA,cAAC2+C,EAAA,MAAK,KAAC3+C,EAAA,cAACkoD,GAAU,CAACx9D,GAAIw3D,kRCjGhC,MAAMuW,WAAiB9Z,EAAA,MAA9B/3D,kCAIYQ,KAAA4+C,QAAU,MACd5+C,KAAK6D,WAAWmQ,QAAKzS,EACrBvB,KAAKi4B,UAAUu4C,MAEXxwE,KAAAyR,KAAO,MACX,IAAK6/D,OAAQzjD,EAAI05C,aAAEA,GAAgBvnE,KAAK6D,YACpC+zD,QAACA,GAAWmG,EAAM/yD,KAClBgM,EAAQ4gD,EAAQ,GAAKh/C,EAAA,wBAAQlT,UAAU,2BAA2BX,QAAS,IAAI/E,KAAK4+C,WAAWhmC,EAAA,cAAC2+C,EAAA,GAAE,CAACr3D,KAAK,UAC5G,OAAO0Y,EAAA,cAAC2+C,EAAA,KAAI,CAAC9xD,OAAO,KAAKuR,MAAOA,GAC5B4B,EAAA,cAAC2+C,EAAA,KAAI,CAACv1D,MAAO6rB,EAAMpmB,KAAM,CAACwR,OAAQjZ,KAAK+1C,QAAShxC,QAASwiE,QAGzDvnE,KAAA+1C,QAAU,CAACtuC,IACf,IAAIvH,KAACA,EAAImsB,YAAEA,EAAWs9C,cAAEA,GAAiBliE,EACzC,OAAOmR,EAAA,cAAC2+C,EAAA,IAAG,CAAC7xD,UAAU,+BAClBk3B,KAAMhkB,EAAA,cAAC2+C,EAAA,GAAE,CAACr3D,KAAK,WAAWwF,UAAU,uBACpCsR,MAAO4B,EAAA,cAAAA,EAAA,cAAG+wD,IACV/wD,EAAA,qBAAKlT,UAAU,aACXkT,EAAA,yBAAKA,EAAA,uBAAI1Y,IACT0Y,EAAA,yBAAKA,EAAA,cAAC2+C,EAAA,MAAK,KAAElrC,QAtBnB7sB,KAAKuD,4CACP/C,KAAKg0B,SAASh0B,KAAKyR,4lBCEpB,MAAM8/D,WAAqBha,EAAA,WAAlC/3D,kCAaIQ,KAAAunE,aAAe,CAAO9/D,GAAqB+pE,GAAAxxE,UAAA,qBACvCA,KAAKgU,GAAKvM,QACJzH,KAAKyxE,eAAehqE,EAAKnE,IAC/BtD,KAAKi4B,UAAUw4C,OAWnBzwE,KAAA+wE,aAAe,CAAC3Y,IACZp4D,KAAKi4B,UAAUy3C,GAAatX,KAGhCp4D,KAAA6wE,WAAa,KAAWW,GAAAxxE,UAAA,qBAEpBu3D,EAAA,IAAI/xD,KAAKoT,EAAA,cAAC8xD,GAAQ,CAAC12D,GAAIhU,KAAKgU,GAAIgnD,SAAUh7D,KAAKg7D,WAD/B,WAIpBh7D,KAAA8wE,WAAa,KAAWU,GAAAxxE,UAAA,qBAEpBu3D,EAAA,IAAI/xD,KAAKoT,EAAA,cAACqzD,GAAQ,CAACj4D,GAAIhU,KAAKgU,GAAIgnD,SAAUh7D,KAAKg7D,WAD/B,WAIpBh7D,KAAAm6D,OAAS,CAAO15D,GAAwB+wE,GAAAxxE,UAAA,qBACpC,IAAIgU,OACYzS,IAAZvB,KAAKgU,GACLA,EAAK8G,EAAAnI,EAAEC,MAAMnS,IAGbuT,EAAK8G,EAAAnI,EAAEC,MAAM5S,KAAKgU,IAClB8G,EAAAnI,EAAEgmB,MAAM3kB,EAAIvT,IAEhBuT,EAAGhJ,KAAOhL,KAAK0L,OACf,IAAI7K,QAAYq3D,EAAOiC,OAAOnmD,GAC9BA,EAAG1Q,GAAKzC,EACRb,KAAKsxE,OAAO9rE,KAAKwO,MAGrBhU,KAAA2wE,SAAW,KAAYa,GAAAxxE,UAAA,2BACbk4D,EAAOkC,MAAMp6D,KAAK0L,OAAQ1L,KAAKgU,GAAG1Q,IACxC,IAAI4F,EAAQlJ,KAAKsxE,OAAOxvD,UAAU7Z,GAAKA,EAAE3E,KAAOtD,KAAKgU,GAAG1Q,IACpD4F,GAAS,GAAGlJ,KAAKsxE,OAAO3sD,OAAOzb,MAuBvClJ,KAAAixE,mBAAqB,KAAYO,GAAAxxE,UAAA,2BACvBA,KAAKi4B,UAAUq3C,OA5ET9vE,cAAckM,4CAC1B1L,KAAK0L,OAASA,EACd1L,KAAKsxE,aAAepZ,EAAO19C,IAAIxa,KAAK0L,QACpC1L,KAAKi4B,UAAUo5C,MASL7xE,eAAesxC,4CACzB,IAAIjwC,QAAYq3D,EAAOwZ,cAAc1xE,KAAK0L,OAAQolC,GAC9C6gC,EAAK9wE,EAAI,GAAG,GAChBb,KAAKub,OAASo2D,EAAGp2D,OACjBvb,KAAK+lB,SAAW4rD,EAAG5rD,SACnB/lB,KAAKg7D,SAAWn6D,EAAI,KAsClBrB,kBAAkB44D,EAA2BlqB,EAAa71B,4CAC5D,aAAa6/C,EAAOiD,kBAAkBn7D,KAAK0L,OAAQ0sD,EAAQ90D,GAAI4qC,EAAM71B,KAGnE7Y,YAAY44D,4CACd,IAAIwZ,EAAM92D,EAAAnI,EAAEC,MAAMwlD,GAClBwZ,EAAI5mE,KAAOhL,KAAK0L,OACXkmE,EAAI19D,UAAS09D,EAAI19D,QAAU,KAChC,IAAIrT,QAAYq3D,EAAO+C,YAAY2W,GAGnC,OAFAA,EAAItuE,GAAKzC,EACTb,KAAKg7D,SAASx1D,KAAKosE,GACZ/wE,IAGLrB,WAAW44D,kDACPF,EAAOgD,WAAWl7D,KAAK0L,OAAQ0sD,EAAQ90D,IAC7C,IAAI4F,EAAQlJ,KAAKg7D,SAASl5C,UAAU7Z,GAAKA,EAAE3E,IAAM80D,EAAQ90D,IACrD4F,GAAS,GAAGlJ,KAAKg7D,SAASr2C,OAAOzb,MA1E7B2oE,GAAA,CAAXhqD,EAAA,iCACWgqD,GAAA,CAAXhqD,EAAA,mCCTE,MAAMiqD,WAAYl5D,EAAA,UACrBpZ,SACI,IAAIa,KAACA,EAAIusC,KAAEA,EAAImlC,KAAEA,GAAQ/xE,KAAKwE,MAC9B,OAAOoU,EAAA,cAAC2+C,EAAA,IAAG,CAAC7xD,UAAU,gCAClBk3B,KAAMhkB,EAAA,cAAC2+C,EAAA,MAAK,CAAC3pC,KAAK,KAAKloB,UAAU,QAAOkT,EAAA,qBAAKjJ,IAAKtP,MAClDuY,EAAA,qBAAKlT,UAAU,QACXkT,EAAA,yBAAKA,EAAA,uBAAIg0B,IACTh0B,EAAA,yBAAKA,EAAA,cAAC2+C,EAAA,MAAK,KAAEwa,0lBCH7B,IAAMC,GAAN,cAAmBp5D,EAAA,UAwBTpZ,gEAGNA,SACI,IAAIwL,KAACA,EAAI9K,KAAEA,EAAImsB,YAAEA,EAAW9G,OAAEA,EAAMk6C,UAAEA,EAASC,YAAEA,GAAe1/D,KAAKwE,MACjEw+C,EAAOpqC,EAAA,yBACPA,EAAA,yBAAMyT,GACNzT,EAAA,cAAC4mD,EAAO,CAACE,YAAaA,EAAaD,UAAWA,KAE9Cn+B,EAAc,CACd,GACA,CAAC/4B,KAAM,YAAao+B,UAAW/tB,EAAA,cAAC2+C,EAAA,MAAK,CAACl3D,KAAM4/D,GAASrzB,KAAM1sC,EAAMmsB,YAAa22B,KAC9E,GACA,CAACz6C,KAAM,YAAanI,MAAO,qBAAOumC,UAAW/tB,EAAA,qBAAKlT,UAAU,QAAOkT,EAAA,cAACinD,EAAQ,CAACv8D,GAAI0H,EAAM40D,QAAQ,MAC/F,GACA,CACIr3D,KAAM,YACNnI,MAAO,SACP+0D,OAAQ,UACRxuB,UAAW/tB,EAAA,cAACq5D,GAAU,QAG9B,OAAOr5D,EAAA,yBACHA,EAAA,cAAC2+C,EAAA,SAAQ,CAACj2B,KAAMA,EAAM7gC,OAAQT,KAAKwE,WA/CzCwtE,GAAIE,GAAA,CADTz5D,EAAA,GACKu5D,IAqDN,IAAaC,GAAb,cAAgCr5D,EAAA,UAC5BpZ,SACI,IAAIi7D,EAAMsD,EAAM7E,IAAIoB,MAAMjkD,IAC1B,GAAY,OAARokD,EAAc,MAAO,MACzB,IAAIj4D,EAAUi4D,EAAIl1C,OAClB,OAAO3M,EAAA,qBAAKlT,UAAU,uCAAuCoD,MAAO,CAAC+oD,KAAK,IACtEj5C,EAAA,yBACKpW,MAPJyvE,GAAUC,GAAA,CADtBz5D,EAAA,GACYw5D,IA4CE,IAAA3X,GA9B+B,CAC1CljD,MAAO,MACP86B,SAAU,CACN,CACI9xC,MAAO,eACP8B,MAAO,CAAChC,KAAM,OAAQqI,KAAM,SAAUg0B,UAAW,IAAKxB,UAAU,IAEpE,CACI36B,MAAO,eACP8B,MAAO,CAAChC,KAAM,cAAeqI,KAAM,SAAUg0B,UAAW,KACxD0H,KAAM,CAAC17B,KAAM,aAEjB,CACInI,MAAO,SACP8B,MAAO,CAAChC,KAAM,SAAUqI,KAAM,SAAUg0B,UAAW,MACnD0H,KAAM,CAAC17B,KAAM,WAAY+4B,KAAM,KAGvC1a,IAAMnf,IACF,IAAI2U,MAACA,EAAKlc,KAAEA,EAAImsB,YAAEA,GAAe5kB,EACjC,OAAOmR,EAAA,cAACk5D,GAAG,CAACzxE,KAAM8/D,GAAavzB,KAAMxwB,EAAQ,MAAQlc,EAAM6xE,KAAM1lD,KAErErqB,MAAO,IAAI+7D,EAAM7E,IAAIoB,MACrB6X,SAAU,CACNjyE,KAAM,OACN2G,IAAK,oDAETy6D,KAAM0Q,ICxCK,IAAArX,GAnCoC,CAC/CvjD,MAAO,SACPkqD,KA3BJ,cAAmB1oD,EAAA,UACfpZ,SACI,IAAI6sB,YAACA,EAAW20C,MAAEA,EAAKC,GAAEA,EAAEj2D,KAAEA,EAAIy0D,UAAEA,EAASC,YAAEA,GAAe1/D,KAAKwE,MAC9Dw+C,EAAOpqC,EAAA,yBACPA,EAAA,yBAAMyT,GACNzT,EAAA,cAAC4mD,EAAO,CAACE,YAAaA,EAAaD,UAAWA,KAG9Cn+B,EAAc,CACd,GACA,CAAC/4B,KAAM,YAAao+B,UAAW/tB,EAAA,cAAC2+C,EAAA,IAAG,CAAC7xD,UAAU,OAC1Ck3B,KAAMhkB,EAAA,cAAC2+C,EAAA,GAAE,CAACr3D,KAAK,SAASwF,UAAU,6BAClCkT,EAAA,yBAAKA,EAAA,uBAAIqoD,IACRje,IAEL,GACA,CAACz6C,KAAM,YAAanI,MAAO,qBAAOumC,UAAW/tB,EAAA,qBAAKlT,UAAU,QAAOkT,EAAA,cAACinD,EAAQ,CAACv8D,GAAI0H,EAAM40D,QAAQ,MAC/F,CAACr3D,KAAM,SAAUnI,MAAO,qBAAOF,KAAM,UAEzC,OAAO0Y,EAAA,yBACHA,EAAA,cAAC2+C,EAAA,SAAQ,CAACj2B,KAAMA,EAAM7gC,OAAQT,KAAKwE,WAQ3C0tC,SAAU,CACN,CACI9xC,MAAO,eACP8B,MAAO,CAAChC,KAAM,cAAeqI,KAAM,SAAUg0B,UAAW,GAAIxB,UAAU,IAE1E,CACI36B,MAAO,2BACP8B,MAAO,CAAChC,KAAM,QAASqI,KAAM,SAAUg0B,UAAW,GAAIxB,UAAU,IAEpE,CACI36B,MAAO,iBACP8B,MAAO,CAAChC,KAAM,KAAMqI,KAAM,SAAUg0B,UAAW,MAGvD3V,IAAMnf,IACF,IAAI4kB,YAACA,EAAW20C,MAAEA,GAASv5D,EAE3B,OAAOmR,EAAA,cAAC2+C,EAAA,IAAG,CAAC7xD,UAAU,+BAClBk3B,KAAMhkB,EAAA,cAAC2+C,EAAA,GAAE,CAACr3D,KAAK,SAASwF,UAAU,wBAClCkT,EAAA,qBAAKlT,UAAU,QACXkT,EAAA,yBAAKA,EAAA,uBAAIyT,IACTzT,EAAA,yBAAKA,EAAA,cAAC2+C,EAAA,MAAK,KAAEyJ,OAIzBh/D,MAAO,IAAI+7D,EAAM7E,IAAIyB,QACrBwX,SAAU,CACNjyE,KAAM,cACN2G,IAAK,knBCpDb,IAAaurE,GAAb,cAAyDx5D,EAAA,UADzDpZ,kCAYIQ,KAAA0hE,UAAY,CAACj6D,IACTzH,KAAKwE,MAAMxC,QAAQqU,IAAMvW,OAAA+nB,EAAA,EAAA/nB,CAAW2H,GACpC8vD,EAAA,IAAI/xD,KAAKoT,EAAA,cAACy5D,GAAIvyE,OAAA+I,OAAA,GAAK7I,KAAKwE,WAZtBhF,mEACIQ,KAAKwE,MAAMxC,QAAQ8U,SAK7BtX,UACIQ,KAAKwE,MAAMxC,QAAQqU,SAAM9U,EACzBg2D,EAAA,IAAI/xD,KAAKoT,EAAA,cAAC05D,GAAGxyE,OAAA+I,OAAA,GAAK7I,KAAKwE,SAM3BhF,SACI,IAAI4X,MAACA,EAAKpV,MAAEA,GAAShC,KAAKwE,OACtBozD,QAACA,GAAWmG,EAAM/yD,KAClBgM,EAAQ4gD,EAAQ,GAAKh/C,EAAA,wBAAQlT,UAAU,2BAA2BX,QAAS,IAAI/E,KAAK4+C,WAAWhmC,EAAA,cAAC2+C,EAAA,GAAE,CAACr3D,KAAK,UAC5G,OAAO0Y,EAAA,cAAC2+C,EAAA,KAAI,CAAC9xD,OAAQ2R,EAAOJ,MAAOA,GAC/B4B,EAAA,cAAC2+C,EAAA,KAAI,CAACv1D,MAAOA,IAAQA,MACjByF,KAAM,CAACwR,OAAQjZ,KAAKwE,MAAMoiB,IAAK7hB,QAAS/E,KAAK0hE,gBArBhD0Q,GAAOG,GAAA,CADnB95D,EAAA,GACY25D,IA6Bb,MAAME,WAAwC15D,EAAA,UAC1CpZ,YAAYgF,GACR3E,MAAM2E,GACNxE,KAAKQ,SAAWR,KAAKQ,SAASsF,KAAK9F,MAEjCR,SAASiB,4CACX,IAA+C,WAArCT,KAAKwE,MAAMxC,QAAQy4B,MAAMh6B,IAAmB,OAEtD,IAAY,WADIT,KAAKwE,MAAMxC,QAAQwwE,QAAQ/xE,IAEvC82D,EAAA,IAAI3xD,UAEH,CACc5F,KAAKwE,MAAM2tE,YAKlC3yE,SACI,IAAIgD,GACA4U,MAACA,EAAKwtC,MAAEA,EAAK6tB,WAAEA,GAAczyE,KAAKwE,OAClC0tC,SAACA,EAAQlwC,MAAEA,GAAShC,KAAKwE,MAa7B,OAXIhC,OADUjB,IAAVqjD,EACUhsC,EAAA,cAAC42D,GAAA,UAAS,CAAC9pE,UAAU,OAAOD,OAAQgtE,EAAY7tB,MAAOA,EAAOltB,MAAM,QAAQl3B,SAAUR,KAAKQ,gBAEnFe,IAAb2wC,EACKt5B,EAAA,cAAC42D,GAAA,UAAS,CAChB9pE,UAAU,MACVwsC,SAAUA,EACV1xC,SAAUR,KAAKQ,SAAU+gC,WAAYv/B,IAAQqU,MAGvC,yCAEPuC,EAAA,cAAC2+C,EAAA,KAAI,CAAC9xD,OAAQ,eAAK2R,GACrB5U,IAMb,IAAM6vE,GAAN,cAA+Cz5D,EAAA,UAD/CpZ,kCAEYQ,KAAA2oE,UAAY,CAChB,CAAC7uC,QAAQ,eAAO95B,KAAKwE,MAAM4S,MAAOjD,OAAOnU,KAAKuoE,SAASziE,KAAK9F,MAAOK,KAAK,QACxE,CAACy5B,QAAQ,eAAM3lB,OAAOnU,KAAKyoE,WAAW3iE,KAAK9F,MAAOK,KAAK,YAErDb,uDAC2C,IAAzC2I,QAAQ,kKACFnI,KAAKwE,MAAMxC,QAAQktB,MACzBqoC,EAAA,IAAI3xD,SAGZpG,WACI+3D,EAAA,IAAI/xD,KAAKoT,EAAA,cAAC85D,GAAI5yE,OAAA+I,OAAA,GAAK7I,KAAKwE,SAE5BhF,SACI,IAAI4sB,EAAU,GACVumD,EAAK3yE,KAAKwE,MAAMouE,sBACTrxE,IAAPoxE,GAAkBvmD,EAAQ5mB,QAAQmtE,GACtCvmD,EAAQ5mB,QAAQxF,KAAK2oE,WACrB,IAAI3xD,EAAQ4B,EAAA,cAAC2+C,EAAA,gBAAe,CAACnrC,QAASA,IAClC3kB,EAAOzH,KAAKwE,MAAMxC,QAAQqU,IAC9B,OAAOuC,EAAA,cAAC2+C,EAAA,KAAI,CAAC9xD,OAAQzF,KAAKwE,MAAM4S,MAAQ,8BAAWJ,MAAOA,GACtD4B,EAAA,cAAC5Y,KAAKwE,MAAM88D,KAAIxhE,OAAA+I,OAAA,GAAKpB,OAtB3B4qE,GAAIE,GAAA,CADT95D,EAAA,GACK45D,IA2BN,MAAMK,WAAyC95D,EAAA,UAI3CpZ,YAAYgF,GACR3E,MAAM2E,GAJFxE,KAAAosB,QAAU,CACd,CAAC0N,QAAQ,eAAM3lB,OAAOnU,KAAKyoE,WAAW3iE,KAAK9F,MAAOK,KAAK,YAIvDL,KAAKQ,SAAWR,KAAKQ,SAASsF,KAAK9F,MAEvCR,sBAEMA,SAASiB,6CACoC,WAArCT,KAAKwE,MAAMxC,QAAQy4B,MAAMh6B,YAC7BT,KAAKwE,MAAMxC,QAAQwwE,QAAQ/xE,GACjC82D,EAAA,IAAI3xD,SAGFpG,uDAC2C,IAAzC2I,QAAQ,kKACFnI,KAAKwE,MAAMxC,QAAQktB,MACzBqoC,EAAA,IAAI3xD,SAGZpG,SACI,IAAIwX,EAAQ4B,EAAA,cAAC2+C,EAAA,gBAAe,CAACnrC,QAASpsB,KAAKosB,UAC3C,OAAOxT,EAAA,cAAC2+C,EAAA,KAAI,CAAC9xD,OAAQ,gBAAMzF,KAAKwE,MAAM4S,MAAOJ,MAAOA,EAAOnR,KAAK,SAC5D+S,EAAA,cAAC42D,GAAA,UAAS,CACN9pE,UAAU,MACVwsC,SAAUlyC,KAAKwE,MAAM0tC,SACrB1xC,SAAUR,KAAKQ,SAAU+gC,WAAYvhC,KAAKwE,MAAMxC,QAAQqU,wRCjIjE,MAAMw8D,WAActb,EAAA,MAA3B/3D,kCAKYQ,KAAAi3B,UAAY,EAAC67C,EAAoB5pE,KACrC,IAAIqjB,IAACA,EAAG7H,KAAEA,EAAIquD,MAAEA,GAASD,GACrBxvE,GAACA,EAAEpD,KAAEA,EAAImsB,YAAEA,GAAeE,EAC1BvV,EAAQ4B,EAAA,uBAAOlT,UAAU,cAAc2mB,GAC3C,OAAOzT,EAAA,qBAAKlT,UAAU,qBAClBkT,EAAA,cAAC2+C,EAAA,IAAG,CAAC7xD,UAAU,OAAOsR,MAAOA,GACzB4B,EAAA,cAAC2+C,EAAA,GAAE,CAACr3D,KAAK,iBAAiBwF,UAAU,sBACpCkT,EAAA,uBAAI1Y,IAER0Y,EAAA,yBACIA,EAAA,uBAAOlT,UAAU,cAAY,kBACb,IAAfqtE,EAAMvsE,OACH,WACAusE,EAAM9pE,IAAI8I,GAAKA,EAAEimD,UAAYjmD,EAAEu4B,MAAQv4B,EAAE7R,MAAM4b,KAAK,QAAgB,IAAP4I,EAAa,OAAS,QAK3F1kB,KAAAyR,KAAO3R,OAAA2Y,EAAA,EAAA3Y,CAAS,KACpB,IAAIkzE,aAACA,EAAYvX,UAAEA,EAASwX,YAAEA,GAAejzE,KAAK6D,WAC9CqvE,EAAYt6D,EAAA,cAAC2+C,EAAA,UAAS,CAAC7xD,UAAU,aACjCquB,SAAU0nC,EACVtnC,YAAY,kBACZivB,kBAAkB,IACtB,OAAOxqC,EAAA,cAAC2+C,EAAA,KAAI,CAAC9xD,OAAQytE,GACjBt6D,EAAA,cAAC2+C,EAAA,KAAI,CAACv1D,MAAOgxE,EACTvrE,KAAM,CAACwR,OAAQjZ,KAAKi3B,UAAWlyB,QAAQkuE,EAAc3rE,IAAMG,GAAMA,EAAK8kB,IAAIjpB,SA9BhF9D,gDACFQ,KAAKg0B,SAASh0B,KAAKyR,mRCFpB,MAAM0hE,WAAe5b,EAAA,MAA5B/3D,kCAKYQ,KAAAi3B,UAAY,EAACm8C,EAAoBlqE,KACrC,IAAIK,KAACA,EAAIuuD,KAAEA,GAAQsb,GACf9vE,GAACA,EAAEpD,KAAEA,EAAIoqC,KAAEA,EAAIjqC,KAAEA,EAAI23D,SAAEA,GAAYzuD,EACvC,OAAOqP,EAAA,qBAAKlT,UAAU,qBAClBkT,EAAA,qBAAKlT,UAAU,QACXkT,EAAA,cAAC2+C,EAAA,GAAE,CAACr3D,KAAK,SAASwF,UAAU,sBAC5BkT,EAAA,uBAAIo/C,GAAY1tB,GAAQpqC,IAE5B0Y,EAAA,yBACIA,EAAA,uBAAOlT,UAAU,cAAY,SACd,IAAdoyD,EAAKtxD,OAAW,WAAMsxD,EAAK7uD,IAAI0J,GAAKA,EAAEzS,MAAM4b,KAAK,UAKtD9b,KAAAyR,KAAO3R,OAAA2Y,EAAA,EAAA3Y,CAAS,KACpB,IAAIuzE,aAACA,EAAYC,WAAEA,EAAUC,aAAEA,GAAgBvzE,KAAK6D,WAChDqvE,EAAYt6D,EAAA,cAAC2+C,EAAA,UAAS,CAAC7xD,UAAU,aACjCquB,SAAUu/C,EACVn/C,YAAY,2BACZivB,kBAAkB,IACtB,OAAOxqC,EAAA,cAAC2+C,EAAA,KAAI,CAAC9xD,OAAQytE,GACjBt6D,EAAA,cAAC2+C,EAAA,KAAI,CAACv1D,MAAOqxE,EACT5rE,KAAM,CAACwR,OAAQjZ,KAAKi3B,UAAWlyB,QAAQwuE,EAAcjsE,IAAMG,GAAMA,EAAK8B,KAAKjG,SA3BjF9D,gDACFQ,KAAKg0B,SAASh0B,KAAKyR,mRCFpB,MAAM+hE,WAAajc,EAAA,MAA1B/3D,kCAKYQ,KAAAyR,KAAO3R,OAAA2Y,EAAA,EAAA3Y,CAAS,KACpB,IAAI2zE,OAACA,EAAMC,YAAEA,EAAWC,eAAEA,GAAkB3zE,KAAK6D,WAC7CmT,EAAQ4B,EAAA,wBAAQlT,UAAU,yBAAyBX,QAAS,IAAI4uE,KAAgB,4BACpF,OAAO/6D,EAAA,cAAC2+C,EAAA,KAAI,CAAC9xD,OAAQ,SAAYguE,EAAW,KAAGz8D,MAAOA,GAClD4B,EAAA,cAAC2+C,EAAA,KAAI,CAACv1D,MAAO0xE,EAAajsE,KAAM,CAACwR,OAAOjZ,KAAKijE,gBAI7CjjE,KAAAijE,UAAY,EAAC15D,EAAYL,KAC7B,IACI1G,GADAtC,KAACA,EAAIoqC,KAAEA,EAAI0tB,SAAEA,GAAYzuD,EAQ7B,OALI/G,EADAw1D,EACUp/C,EAAA,0BAAOo/C,WAAiBp/C,EAAA,uBAAOlT,UAAU,cAAcxF,IAC5DoqC,EACK1xB,EAAA,0BAAO0xB,WAAa1xB,EAAA,uBAAOlT,UAAU,cAAcxF,IAEnD0Y,EAAA,cAAAA,EAAA,cAAG1Y,GACV0Y,EAAA,qBAAKlT,UAAU,aAAalD,KArBjChD,gDACFQ,KAAKg0B,SAASh0B,KAAKyR,mRCFpB,MAAMmiE,WAAcrc,EAAA,MAA3B/3D,kCAKYQ,KAAAyR,KAAO3R,OAAA2Y,EAAA,EAAA3Y,CAAS,KACpB,IAAI+zE,QAACA,EAAOC,YAAEA,EAAWC,eAAEA,GAAkB/zE,KAAK6D,WAC9CmT,EAAQ4B,EAAA,wBAAQlT,UAAU,yBAAyBX,QAAS,IAAIgvE,KAAgB,mBACpF,OAAOn7D,EAAA,cAAC2+C,EAAA,KAAI,CAAC9xD,OAAQ,mBAAWouE,EAAQ7b,UAAY6b,EAAQvpC,MAAQupC,EAAQ3zE,MACxE8W,MAAOA,GACP4B,EAAA,cAAC2+C,EAAA,KAAI,CAACv1D,MAAO8xE,EAAarsE,KAAM,CAACwR,OAAOjZ,KAAKijE,gBAI7CjjE,KAAAijE,UAAY,EAAC12C,EAAUrjB,KAC3B,IAAIhJ,KAACA,EAAImsB,YAAEA,GAAeE,EAC1B,OAAO3T,EAAA,qBAAKlT,UAAU,aAAaxF,MAAOmsB,KAfxC7sB,gDACFQ,KAAKg0B,SAASh0B,KAAKyR,mRCFpB,MAAMuiE,WAAsBzc,EAAA,MAAnC/3D,kCAKYQ,KAAAyR,KAAO3R,OAAA2Y,EAAA,EAAA3Y,CAAS,KACpB,IAAI2zE,OAACA,EAAMQ,aAAEA,EAAYN,eAAEA,GAAkB3zE,KAAK6D,WAClD,OAAO+U,EAAA,cAAC2+C,EAAA,KAAI,CAAC9xD,OAAQguE,EAAOvzE,KAAO,+BAC/B0Y,EAAA,cAAC2+C,EAAA,KAAI,CAACv1D,MAAOiyE,EAAcxsE,KAAM,CAACwR,OAAOjZ,KAAKk0E,iBAI9Cl0E,KAAAk0E,WAAa,EAACC,EAAoBjrE,KACtC,IACI1G,GADAtC,KAACA,EAAIoqC,KAAEA,EAAI0tB,SAAEA,EAAQlyD,KAAEA,GAAQquE,EAG/B3xE,EADAw1D,EACUp/C,EAAA,cAAAA,EAAA,cAAGo/C,MAAUp/C,EAAA,cAAC2+C,EAAA,MAAK,KAAEr3D,IAC1BoqC,EACK1xB,EAAA,cAAAA,EAAA,cAAG0xB,MAAM1xB,EAAA,cAAC2+C,EAAA,MAAK,KAAEr3D,IAEjB0Y,EAAA,cAAAA,EAAA,cAAG1Y,GACjB,IAAI8W,EAAQ4B,EAAA,uBAAOrQ,KAAK,WAAWmgD,eAAuB,IAAP5iD,EAC/Ck2B,SAAW/pB,GAAMjS,KAAKo0E,cAAcD,EAAUliE,EAAIuD,OAAO8yB,WAC7D,OAAO1vB,EAAA,cAAC2+C,EAAA,IAAG,CAAC7xD,UAAU,+BAA+BsR,MAAOA,GACvDxU,KAIDxC,KAAAo0E,cAAgB,EAAOD,EAAoB7rC,IAAoB+rC,GAAAr0E,UAAA,2BAC7DA,KAAK6D,WAAWywE,YAAYH,EAAU7rC,GAC5C6rC,EAASruE,MAAiB,IAAVwiC,EAAgB,EAAG,KA7BjC9oC,gDACFQ,KAAKg0B,SAASh0B,KAAKyR,mRCFpB,MAAM8iE,WAAsBhd,EAAA,MAAnC/3D,kCAKYQ,KAAAyR,KAAO3R,OAAA2Y,EAAA,EAAA3Y,CAAS,KACpB,IAAI+zE,QAACA,EAAOW,aAAEA,EAAYT,eAAEA,GAAkB/zE,KAAK6D,WACnD,OAAO+U,EAAA,cAAC2+C,EAAA,KAAI,CAAC9xD,OAAQ,sBAAcouE,EAAQ7b,UAAY6b,EAAQvpC,MAAQupC,EAAQ3zE,OAC3E0Y,EAAA,cAAC2+C,EAAA,KAAI,CAACv1D,MAAOwyE,EAAc/sE,KAAM,CAACwR,OAAOjZ,KAAKijE,gBAI9CjjE,KAAAijE,UAAY,EAACwR,EAAkBvrE,KACnC,IAAIhJ,KAACA,EAAImsB,YAAEA,EAAWvmB,KAAEA,GAAQ2uE,EAC5Bz9D,EAAQ4B,EAAA,uBAAOrQ,KAAK,WAAWmgD,eAAuB,IAAP5iD,EAC/Ck2B,SAAW/pB,GAAMjS,KAAK00E,aAAaD,EAASxiE,EAAIuD,OAAO8yB,WAC3D,OAAO1vB,EAAA,cAAC2+C,EAAA,IAAG,CAAC7xD,UAAU,YAAYsR,MAAOA,GACpC9W,MAAOmsB,KAIRrsB,KAAA00E,aAAe,EAAOD,EAAkBnsC,IAAoBqsC,GAAA30E,UAAA,2BAC1DA,KAAK6D,WAAW+wE,YAAYH,EAASnsC,GAC3CmsC,EAAQ3uE,MAAiB,IAAVwiC,EAAgB,EAAG,KAtBhC9oC,gDACFQ,KAAKg0B,SAASh0B,KAAKyR,mRCApB,MAAMojE,WAAiBtd,EAAA,MAA9B/3D,kCACwBQ,KAAAuJ,KAAa,KAOzBvJ,KAAAyR,KAAO3R,OAAA2Y,EAAA,EAAA3Y,CAAS,KACpB,IAMI0C,EANA0wE,EAAYt6D,EAAA,cAAC2+C,EAAA,UAAS,CAAC77B,IAAKzzB,GAAGjI,KAAKkzE,UAAUjrE,EAC9CvC,UAAU,QACVquB,SAAU/zB,KAAK+zB,SACf8H,QAAS77B,KAAK80E,cACd3gD,YAAY,6DAGhB,GAAkB,OAAdn0B,KAAKuJ,WAEJ,QAAkBhI,IAAdvB,KAAKuJ,KACV/G,EAAUoW,EAAA,qBAAKlT,UAAU,iBAAe,4CAEvC,CACD,IACIqvE,GADA70E,KAACA,EAAIoqC,KAAEA,EAAIjqC,KAAEA,GAAQL,KAAKuJ,KAG1BwrE,EADAzqC,EACU1xB,EAAA,cAAAA,EAAA,cAAEA,EAAA,yBAAKA,EAAA,uBAAI0xB,IAAe1xB,EAAA,yBAAM1Y,IAGhC0Y,EAAA,yBAAKA,EAAA,uBAAI1Y,IAEvBsC,EAAUoW,EAAA,yBACNA,EAAA,qBAAKlT,UAAU,2BACXkT,EAAA,cAAC2+C,EAAA,MAAK,CAAC5nD,IAAKtP,IACZuY,EAAA,qBAAKlT,UAAU,QAAQqvE,IAE3Bn8D,EAAA,qBAAKlT,UAAU,iCACXkT,EAAA,wBAAQlT,UAAU,8BAA8BX,QAAS/E,KAAKg1E,WAAS,8BAkBnF,OAAOp8D,EAAA,cAAC2+C,EAAA,KAAI,CAAC9xD,OAAQytE,GAChB1wE,KAKDxC,KAAA+zB,SAAW,CAAOzsB,GAAe2tE,GAAAj1E,UAAA,qBACrCA,KAAKuJ,WAAa+tD,EAAQ4d,YAAY5tE,MAGlCtH,KAAAg1E,UAAY,KAAYC,GAAAj1E,UAAA,2BACtBA,KAAK6D,WAAWsxE,QAAQn1E,KAAKuJ,KAAKjG,IACxCtD,KAAK6D,WAAWgwE,QAAU7zE,KAAKuJ,KAC/BvJ,KAAKuJ,KAAO,KACZvJ,KAAKkzE,UAAU/rE,QACfnH,KAAK8rC,YAAY9rC,KAAKo1E,cAGlBp1E,KAAA80E,cAAgB,MACpB90E,KAAKuJ,KAAO,KAERvJ,KAAKkzE,WAAWlzE,KAAKkzE,UAAU/rE,UAG/BnH,KAAAq1E,UAAY,MAChBr1E,KAAKw0B,YACLx0B,KAAK6D,WAAWkwE,mBAGZ/zE,KAAAs1E,kBAAoB,MACxBt1E,KAAKw0B,YACLx0B,KAAK6D,WAAWmxE,cAGZh1E,KAAAo1E,UAAY,KACTx8D,EAAA,cAAC2+C,EAAA,KAAI,CAAC9xD,OAAO,4BAChBmT,EAAA,qBAAKlT,UAAU,mBACXkT,EAAA,sDACW5Y,KAAK6D,WAAWgwE,QAAQ3zE,MAEnC0Y,EAAA,qBAAKlT,UAAU,QACXkT,EAAA,wBAAQlT,UAAU,uBACdX,QAAS/E,KAAKq1E,WAAS,qCAG3Bz8D,EAAA,wBAAQlT,UAAU,0BACdX,QAAS/E,KAAKs1E,mBAAiB,kDAhG7C91E,gDACFQ,KAAKg0B,SAASh0B,KAAKyR,uUAJX8jE,CAAA,CAAX1tD,EAAA,knBCiCE,MAAM2tD,WAAwBje,EAAA,WAArC/3D,kCAuBYQ,KAAAy1E,WAAa,KAAYC,GAAA11E,UAAA,2BACvBA,KAAK21E,kBAAap0E,GACxBvB,KAAKi4B,UAAU46C,OAGX7yE,KAAA41E,WAAa,KAAYF,GAAA11E,UAAA,2BACvBA,KAAK61E,kBAAat0E,GACxBvB,KAAKi4B,UAAUk7C,OAoEnBnzE,KAAAszE,WAAa,CAAMhsE,GAAeouE,GAAA11E,UAAA,2BACxBA,KAAK61E,aAAavuE,MAG5BtH,KAAAy7D,UAAY,CAAMn0D,GAAeouE,GAAA11E,UAAA,2BACvBA,KAAK21E,aAAaruE,MAG5BtH,KAAAizE,YAAc,CAAOH,GAAuB4C,GAAA11E,UAAA,qBACxCA,KAAKyzE,OAASX,EAASvmD,IAGvBvsB,KAAK0zE,kBAAoBpc,EAAQwe,gBAAgB91E,KAAKgL,KAAK1H,GAAItD,KAAKyzE,OAAOnwE,GAF3D,EACD,KAEftD,KAAKi4B,UAAUu7C,OAGnBxzE,KAAAuzE,aAAe,CAAOH,GAAuBsC,GAAA11E,UAAA,qBACzCA,KAAK6zE,QAAUT,EAAS7pE,KAGxBvJ,KAAK8zE,kBAAoBxc,EAAQye,gBAAgB/1E,KAAKgL,KAAK1H,GAAItD,KAAK6zE,QAAQvwE,GAF5D,EACD,KAEftD,KAAKi4B,UAAU27C,OAGnB5zE,KAAA2zE,eAAiB,CAAOrsE,GAAgBouE,GAAA11E,UAAA,qBAGpCA,KAAKi0E,mBAAqB3c,EAAQ0e,iBAAiBh2E,KAAKgL,KAAK1H,GAAItD,KAAKyzE,OAAOnwE,GAAIgE,EAFjE,EACD,KAEftH,KAAKi4B,UAAU+7C,OAGnBh0E,KAAAg1E,UAAY,MACRh1E,KAAKi4B,UAAU48C,MAGnB70E,KAAA+zE,eAAiB,CAAOzsE,GAAgBouE,GAAA11E,UAAA,qBAGpCA,KAAKw0E,mBAAqBld,EAAQ2e,iBAAiBj2E,KAAKgL,KAAK1H,GAAItD,KAAK6zE,QAAQvwE,GAAIgE,EAFlE,EACD,KAEftH,KAAKi4B,UAAUs8C,OAGnBv0E,KAAAs0E,YAAc,EAAM/qE,EAAW++B,IAAoBotC,GAAA11E,UAAA,2BACzCs3D,EAAQgd,YAAYt0E,KAAKgL,KAAK1H,GAAItD,KAAKyzE,OAAOnwE,GAAIiG,EAAKjG,IAAc,IAAVglC,EAAgB,EAAE,GACnF,IAAIwqC,EAAW9yE,KAAKgzE,aAAahrE,KAAKC,GAAKA,EAAEskB,IAAIjpB,KAAOtD,KAAKyzE,OAAOnwE,IACpE,IAAgB,IAAZglC,EACAtoC,KAAK0zE,YAAYluE,KAAK+D,GAClBupE,GAAUA,EAASC,MAAMvtE,KAAK+D,OAEjC,CACD,IAAIL,EAAQlJ,KAAK0zE,YAAY5xD,UAAU7Z,GAAKA,EAAE3E,KAAOiG,EAAKjG,IACtD4F,GAAO,GAAGlJ,KAAK0zE,YAAY/uD,OAAOzb,EAAO,GACzC4pE,IACA5pE,EAAQ4pE,EAASC,MAAMjxD,UAAU7Z,GAAKA,EAAE3E,KAAOiG,EAAKjG,MACzC,GAAGwvE,EAASC,MAAMpuD,OAAOzb,EAAO,OAKvDlJ,KAAA40E,YAAc,EAAMroD,EAAS+b,IAAoBotC,GAAA11E,UAAA,qBAE7C,SADMs3D,EAAQgd,YAAYt0E,KAAKgL,KAAK1H,GAAIipB,EAAIjpB,GAAItD,KAAK6zE,QAAQvwE,IAAc,IAAVglC,EAAgB,EAAE,QACzD/mC,IAAtBvB,KAAKqzE,aAA4B,OACrC,IAAID,EAAWpzE,KAAKqzE,aAAarrE,KAAKC,GAAKA,EAAEsB,KAAKjG,KAAOtD,KAAK6zE,QAAQvwE,IACtE,IAAgB,IAAZglC,EACAtoC,KAAK8zE,YAAYtuE,KAAK+mB,GAClB6mD,GAAUA,EAAStb,KAAKtyD,KAAK+mB,OAEhC,CACD,IAAIrjB,EAAQlJ,KAAK8zE,YAAYhyD,UAAU7Z,GAAKA,EAAE3E,KAAOipB,EAAIjpB,IACrD4F,GAAO,GAAGlJ,KAAK8zE,YAAYnvD,OAAOzb,EAAO,GACzCkqE,IACAlqE,EAAQkqE,EAAStb,KAAKh2C,UAAU7Z,GAAKA,EAAE3E,KAAOipB,EAAIjpB,MACvC,GAAG8vE,EAAStb,KAAKnzC,OAAOzb,EAAO,OAKtDlJ,KAAAm1E,QAAU,CAAO93D,GAAmBq4D,GAAA11E,UAAA,2BAC1Bs3D,EAAQ4e,YAAYl2E,KAAKgL,KAAK1H,GAAI+Z,MArK5B7d,cAAcwL,4CAC1BhL,KAAKgL,KAAOA,EACZ,IAAIwM,EAAK,0BACL2+D,EAAUv9D,EAAA,cAAC2+C,EAAA,GAAE,CAACr3D,KAAK,UAAUwF,UAAU,sBACvC0wE,EAAWx9D,EAAA,cAAC2+C,EAAA,GAAE,CAACr3D,KAAK,YAAYwF,UAAU,sBAC1CsR,EAAQ4B,EAAA,wBAAQlT,UAAU,yBAAyBX,QAAS/E,KAAKg1E,WAAWp8D,EAAA,cAAC2+C,EAAA,GAAE,CAACr3D,KAAK,UACzFF,KAAKg0B,SAASpb,EAAA,cAAC2+C,EAAA,KAAI,CAAC9xD,OAAQ,8BAAazF,KAAKgL,KAAK9K,KAAM8W,MAAOA,GAC5D4B,EAAA,cAAC2+C,EAAA,IAAG,CAAC7xD,UAAW8R,EAAIzS,QAAS/E,KAAKy1E,WAAY74C,KAAMu5C,GAAO,OAC3Dv9D,EAAA,cAAC2+C,EAAA,IAAG,CAAC7xD,UAAW8R,EAAIzS,QAAS/E,KAAK41E,WAAYh5C,KAAMw5C,GAAQ,oBActD52E,aAAa8H,4CACvB,IAAIumB,EAAkB,GAGlBhtB,QAAYy2D,EAAQ+e,aAAar2E,KAAKgL,KAAK1H,GAAIgE,EAFnC,EACD,KAEXwwD,EAAOj3D,EAAI,GACXkyE,EAAQlyE,EAAI,GACZy1E,EAA+B,GACnC,IAAK,IAAI3jE,KAAKmlD,EAAM,CAChB,IAAIvrC,EAAU,CACVjpB,GAAIqP,EAAErP,GACNpD,KAAMyS,EAAEzS,KACRmsB,YAAa1Z,EAAE0Z,aAEnBwB,EAAKroB,KAAK8wE,EAAK3jE,EAAErP,IAAM,CAACipB,IAAIA,EAAK7H,MAAK,EAAOquD,MAAM,KAEvD,IAAK,IAAIhhE,KAAKghE,EAAO,CACjB,IAAIxpE,EAAY,CACZjG,GAAIyO,EAAExI,KACNrJ,KAAM6R,EAAE7R,KACRoqC,KAAMv4B,EAAEu4B,KACRjqC,KAAM0R,EAAE1R,KACR23D,SAAUjmD,EAAEimD,UAEZvwD,EAAO6uE,EAAKvkE,EAAEwa,MACdwmD,MAACA,GAAStrE,EACVsrE,EAAMvsE,QAAU,EAChBiB,EAAKid,MAAO,EAGZquD,EAAMvtE,KAAK+D,GAGnBvJ,KAAKgzE,aAAenlD,IAGVruB,aAAa8H,4CACvB,IAAIumB,EAAkB,GAGlBhtB,QAAYy2D,EAAQif,UAAUv2E,KAAKgL,KAAK1H,GAAIgE,EAFhC,EACD,KAEXyrE,EAAQlyE,EAAI,GACZi3D,EAAOj3D,EAAI,GACXy1E,EAA+B,GACnC,IAAK,IAAIvkE,KAAKghE,EAAO,CACjB,IAAIxpE,EAAY,CACZjG,GAAIyO,EAAEzO,GACNpD,KAAM6R,EAAE7R,KACRoqC,KAAMv4B,EAAEu4B,KACRjqC,KAAM0R,EAAE1R,KACR23D,SAAUjmD,EAAEimD,UAEhBnqC,EAAKroB,KAAK8wE,EAAKvkE,EAAEzO,IAAM,CAACiG,KAAKA,EAAMuuD,KAAK,KAE5C,IAAK,IAAInlD,KAAKmlD,EAAM,CAChB,IAAIvrC,EAAU,CACVjpB,GAAIqP,EAAE4Z,IACNrsB,KAAMyS,EAAEzS,KACRmsB,YAAa1Z,EAAE0Z,aAEnBiqD,EAAK3jE,EAAEpJ,MAAMuuD,KAAKtyD,KAAK+mB,GAE3BvsB,KAAKqzE,aAAexlD,KA7FZ2oD,GAAA,CAAX3uD,EAAA,uCACW2uD,GAAA,CAAX3uD,EAAA,uCAEW2uD,GAAA,CAAX3uD,EAAA,sCACW2uD,GAAA,CAAX3uD,EAAA,uCAEW2uD,GAAA,CAAX3uD,EAAA,sCACW2uD,GAAA,CAAX3uD,EAAA,0nBC5BE,MAAM4uD,WAAelf,EAAA,WAIV/3D,0DACV,IAAIqB,QAAYy2D,EAAQof,iBACpBC,EAAa32E,KAAK22E,WAAa91E,EAAI,GACvCqC,QAAQC,IAAI,iBAAkBwzE,GACJ,IAAtBA,EAAWnwE,SACX+wD,EAAA,WAAWvsD,KAAO2rE,EAAW,GAAGrzE,SAC1By6D,EAAM6Y,cAGJp3E,cAAcuD,4CAM1B,GALAg7D,EAAMltC,OAEN7wB,KAAK62E,aAAe9qE,SAASC,SAASF,KAAKwV,WAAW,OACtDpe,QAAQC,IAAI,yBAA0BnD,KAAK62E,eAEjB,IAAtB72E,KAAK62E,aAGL,aAFM72E,KAAK82E,sBACX92E,KAAKi4B,UAAU8+C,UAGbhZ,EAAM6Y,WACZ52E,KAAKi4B,UAAU8+C,OAsBhB,MAAMA,WAAexf,EAAA,MAA5B/3D,kCAkBYQ,KAAAivC,eAAiB,KACdr2B,EAAA,cAAC2+C,EAAA,KAAI,CAAC9xD,OAAO,2BAAO6I,OAAQA,IAC/BsK,EAAA,cAAC2+C,EAAA,KAAI,CAACv1D,MAAOhC,KAAK6D,WAAW8yE,WAAYlvE,KAAM,CAACwR,OAAQjZ,KAAKi3B,UAAWlyB,QAAS/E,KAAKgvC,gBAItFhvC,KAAAg3E,WAAa,MACjB,IAAI1sC,KAACA,EAAIpqC,KAAEA,GAAQq3D,EAAA,IAAIhuD,KACvB,OAAOqP,EAAA,cAAC2+C,EAAA,KAAI,CAAC9xD,OAAO,2BAAO6I,OAAQA,IAC/BsK,EAAA,qBAAKlT,UAAU,uBACV4kC,GAAQpqC,iEAOrBF,KAAAi3B,UAAY,EAACxvB,EAAiByB,IACnB0P,EAAA,cAAC2+C,EAAA,IAAG,CAAC7xD,UAAU,MAAMsR,MAAO,OAASvP,EAAKnE,IAC7CsV,EAAA,yBAAMnR,EAAK6iC,MAAQ7iC,EAAKvH,QAGhCF,KAAAgvC,WAAa,CAAOvnC,GAAoBwvE,GAAAj3E,UAAA,qBACpCu3D,EAAA,WAAWvsD,KAAOvD,EAAKnE,GACvBy6D,EAAMltC,aACAktC,EAAM6Y,WACZ52E,KAAKw0B,YACLx0B,KAAK+0B,gBAAgBnc,EAAA,cAACs+D,GAAS,UA5C7B13E,gDACF,IAAIq3E,aAACA,EAAYF,WAAEA,GAAc32E,KAAK6D,WACtC,IAAqB,IAAjBgzE,EACA,OAAQF,EAAWnwE,QACf,QAA6C,YAApCxG,KAAKg0B,SAASh0B,KAAKivC,gBAC5B,KAAK,EAAmC,YAAhCjvC,KAAKg0B,SAASh0B,KAAKg3E,YAC3B,KAAK,EAAwC,YAArCh3E,KAAK+0B,gBAAgBnc,EAAA,cAACs+D,GAAS,YAI5B31E,IAAfw8D,EAAM/yD,KAIVhL,KAAK+0B,gBAAgBnc,EAAA,cAACs+D,GAAS,OAH3Bl3E,KAAKg0B,SAASh0B,KAAKg3E,cAqB3B/vE,aAgBJ,MAAMqH,GAAS,IAAY2oE,QAAD11E,OAAA,qBACtBw8D,EAAMzvD,WAsBJ6oE,GAASv+D,EAAA,cAAC2+C,EAAA,GAAE,CAACr3D,KAAK,kBAClBk3E,GAAe,CACjBC,EAAG,qBACHC,EAAG,eACHC,EAAG,sBAGP,IAAcL,GAAd,cAAgCt+D,EAAA,UADhCpZ,kCAaYQ,KAAAw3E,WAAwB,CAC5B5qC,KAAM,kBACN51B,MAAOmgE,GACP92E,KAAM,gBACNoR,KAAM6xD,IAEFtjE,KAAAy3E,YAAyB,CAC7B7qC,KAAM,2BACN51B,MAAOmgE,GACP92E,KAAM,QACNoR,KAAM80D,IAEFvmE,KAAA03E,eAA4B,CAChC9qC,KAAM,2BACN51B,MAAOmgE,GACP92E,KAAM,SACNwD,WAAY,IAAI2xE,QAAgBj0E,IAS5BvB,KAAA23E,aAA0B,CAC9B/qC,KAAM,qBACN51B,MAAOmgE,GACP92E,KAAM,mBACNoR,KAAM6tD,GAaFt/D,KAAA43E,WAAwB,CAC5BhrC,KAAM,yDACNvsC,KAAM,mBA0DFL,KAAA4mB,IAAM,EAACnf,EAAWyB,KACtB,GAAoB,kBAATzB,EACP,OAAOmR,EAAA,qBAAKlT,UAAU,kCAAkCoD,MAAO,CAACwrD,gBAAgB,YAAa7sD,GAEjG,IACIm1B,EAAUi7C,EAAShxD,GADnBzP,MAACA,GAAS3P,EAEd,QAAclG,IAAV6V,EAAqB,CACrB,IAAI/W,KAACA,EAAIitB,MAAEA,GAAS7lB,EACpBm1B,EAAOhkB,EAAA,cAAC2+C,EAAA,GAAE,CAAC7xD,UAAU,eAAexF,KAAMG,EAAM6qC,UAAU,EAAMtd,KAAK,OACrEiqD,EAAMzgE,EACNyP,EAAIyG,EAAM,GAAK1U,EAAA,0BAAO0U,OAErB,CACD,IAAItW,MAACA,EAAK41B,KAAEA,EAAIvsC,KAAEA,GAAQoH,EAC1Bm1B,EAAuB,kBAATv8B,EACVuY,EAAA,cAAC2+C,EAAA,GAAE,CAAC7xD,UAAU,eAAexF,KAAMG,EAAM6qC,UAAU,EAAMtd,KAAK,OAC9DnmB,EAAKpH,KACTw3E,EAAMjrC,EACN/lB,EAAIjO,EAAA,0BAAO5B,GAEf,OAAO4B,EAAA,cAAC2+C,EAAA,IAAG,CAAC7xD,UAAU,+BAA+Bk3B,KAAMA,EAAM5lB,MAAO6P,GACpEjO,EAAA,qBAAKlT,UAAU,QAAOkT,EAAA,uBAAIi/D,OAG1B73E,KAAA41C,SAAW,CAAOnuC,GAAcwvE,GAAAj3E,UAAA,qBACpC,IAAIoX,MAACA,GAAS3P,EACd,QAAclG,IAAV6V,EAAqB,CACrB,IAAI0gE,SAACA,EAAQ/yE,QAAEA,GAAW0C,EAC1B,YAAiBlG,IAAbu2E,EACOvgB,EAAA,IAAI/xD,KAAKoT,EAAA,cAACw5D,GAAOtyE,OAAA+I,OAAA,GAAKivE,UAE7B/yE,IAIH,CACD,IAAK0M,KAAKsmE,EAACl0E,WAAEA,GAAc4D,OACjBlG,IAANw2E,EACAxgB,EAAA,IAAI/xD,KAAKoT,EAAA,cAACm/D,EAAC,aAELl0E,EAAWyC,MAAMy3D,EAAM/yD,UAvJnCxL,8DACF,IAAIwL,KAACA,EAAIkuD,IAAEA,GAAO6E,GACdlG,QAACA,EAAOD,QAAEA,EAAOrvD,KAAEA,GAAQyC,EAC/BhL,KAAK85B,QAAUs9C,GAAa7uE,GACT,KAAP,EAAPA,WACKw1D,EAAM7E,IAAI8e,gBAmDhBx4E,aACJ,IAAIwL,KAACA,EAAIkuD,IAAEA,GAAO6E,GACdlG,QAACA,EAAOD,QAAEA,EAAOrvD,KAAEA,GAAQyC,EAC3BhJ,EAAe,GAKnB,GAJgB,IAAZ41D,GACA51D,EAAMwD,KAAKxF,KAAK23E,cAEpBz0E,QAAQC,IAAI,QAAS6H,GACL,IAAZ6sD,IACmB,KAAP,EAAPtvD,IAEDvG,EAAMwD,KACF,2BACAxF,KAAKw3E,WAELx3E,KAAK03E,gBAIM,KAAP,EAAPnvE,IAAiB,CAElB,IAAIsxD,OAACA,GAAUX,EAEX+e,EAAsC,CACtC7gE,MAAO,MACPkW,MAAOusC,GAAUA,EAAOttC,IACxBlsB,KAAM,SACN0E,QAAS,IAAM,IAAI0kE,QAAcloE,GAAW+E,MAAM0E,EAAK1H,KAEvD40E,EAAqC,CACrC9gE,MAAO,KACPkW,MAAOusC,GAAUA,EAAO7lD,GACxB3T,KAAM,WACN0E,QAAS,IAAM,IAAIwsE,QAAahwE,GAAW+E,MAAM0E,EAAK1H,KAEtD60E,EAAsC,CACtC/gE,MAAO,MACPkW,MAAOusC,GAAUA,EAAOY,IACxBp6D,KAAM,OACNy3E,SAAUxd,IAEV8d,EAAyC,CACzChhE,MAAO,SACPkW,MAAOusC,GAAUA,EAAOiB,OACxBz6D,KAAM,SACNy3E,SAAUnd,IAEd34D,EAAMwD,KAAK,kCACPoyD,EAAQ,GAAG51D,EAAMwD,KAAKyyE,GAC1Bj2E,EAAMwD,KAAK0yE,EAAUC,GACjBvgB,EAAQ,GAAG51D,EAAMwD,KAAK4yE,GAGlC,OAAOp2E,EA8CXxC,SACI,IAAIwL,EAAY+yD,EAAM/yD,KACtB,QAAazJ,IAATyJ,EAEA,OADA9H,QAAQC,IAAI,6BACL,KAEXD,QAAQC,IAAI,0BACZ,IAIIsC,EAAY4C,EAJZrG,EAAQhC,KAAK0xD,aACjB,QAAcnwD,IAAVS,EACA,OAAO4W,EAAA,cAAC2+C,EAAA,KAAI,CAAC9xD,OAAO,KAGxB,QAAalE,IAATyJ,EAAoB,CACpB,IACIoM,EAAc26D,GADd7xE,KAACA,EAAIoqC,KAAEA,EAAIjqC,KAAEA,EAAIgsB,YAAEA,GAAerhB,EAElCs/B,GACAlzB,EAAQkzB,EACRynC,EAAOn5D,EAAA,wBAAIA,EAAA,uBAAOlT,UAAU,kBAAkBxF,KAG9CkX,EAAQlX,OAESqB,IAAjBvB,KAAK85B,UAAuBr0B,EAASzF,KAAK85B,QAAU,MAAQ1iB,GAChE/O,EAAMuQ,EAAA,cAAC2+C,EAAA,IAAG,CAAC7xD,UAAU,yCAAyCX,QAAS,IAAIwyD,EAAA,IAAI/xD,KAAKoT,EAAA,cAACy/D,GAAS,OAC1Fz7C,KAAMhkB,EAAA,yBAAKA,EAAA,cAAC2+C,EAAA,MAAK,CAAC7xD,UAAU,YAAYiK,IAAKtP,MAC7CuY,EAAA,qBAAKlT,UAAU,QACXkT,EAAA,cAAC2+C,EAAA,IAAG,CAACvgD,MAAO+6D,GAAMn5D,EAAA,oBAAIlT,UAAU,8BAA8B0R,IAC9DwB,EAAA,qBAAKlT,UAAU,mBAAmB2mB,UAK1C5mB,EAAS,2BAEb,OAAOmT,EAAA,cAAC2+C,EAAA,KAAI,CAAC9xD,OAAQA,EAAQ6I,OAAQA,IAChCjG,EACDuQ,EAAA,cAAC2+C,EAAA,KAAI,CAACv1D,MAAOA,EAAOyF,KAAM,CAACwR,OAAOjZ,KAAK4mB,IAAK7hB,QAAQ/E,KAAK41C,eAlMvDshC,GAASoB,GAAA,CADtB7/D,EAAA,GACay+D,IAuMd,MAAMmB,WAAkBz/D,EAAA,UAAxBpZ,kCA6BYQ,KAAAulB,OAAqB,CACzB,CAACrlB,KAAM,OAAQqI,KAAM,SACrB,CAACrI,KAAM,OAAQqI,KAAM,UACrB,CAACrI,KAAM,cAAeqI,KAAM,WAExBvI,KAAAkqD,SAAoB,CACxBloD,MAAO,CACHsoC,KAAM,CAACwf,OAAO,OAAQ1pD,MAAM,eAAM+zB,YAAY,0DAC9C9zB,KAAM,CAACypD,OAAO,QAAS1pD,MAAM,sBAC7BisB,YAAa,CAACy9B,OAAO,OAAQ1pD,MAAM,eAAM+zB,YAAY,gDAWrDn0B,KAAAuzD,cAAgB,EAAO1gC,EAAuBO,EAAcu/B,IAAiBskB,GAAAj3E,UAAA,qBACjF,IAAIE,KAACA,GAAQ2yB,QAEPkrC,EAAMrB,eAAex8D,EAAMkzB,MAMrC5zB,SACI,IAAIwL,EAAY+yD,EAAM/yD,MAClBwzD,OAACA,EAAM5G,QAAEA,GAAW5sD,EACxB,OAAO4N,EAAA,cAAC2+C,EAAA,KAAI,CAAC9xD,OAAO,4BAChBmT,EAAA,cAAC2+C,EAAA,KAAI,CAAChyC,OAAQvlB,KAAKulB,OAAQ2kC,SAAUlqD,KAAKkqD,SACtCh4C,KAAM6rD,EAAM/yD,KACZuoD,cAAevzD,KAAKuzD,cACpBD,WAAYkL,EAAO,GAAK5G,EAAQ,wRCzYjC,IAAA2gB,GAff,cAAkB3/D,EAAA,UACRpZ,qDACQuM,SAASC,SACnBurD,EAAA,IAAIpwD,QAEJ,IAAIqxE,EAAS,IAAI/B,GAAO,UAClB+B,EAAOlyE,UAEjB9G,SACI,OACIoZ,EAAA,cAAC2+C,EAAA,QAAO,CAAClqD,UAAWrN,KAAKqN,cCJrC,MAAMorE,GAAcC,QACW,cAA7BvyE,OAAO6F,SAAS2sE,UAEe,UAA7BxyE,OAAO6F,SAAS2sE,UAEhBxyE,OAAO6F,SAAS2sE,SAASC,MACvB,2DAgCN,SAASC,GAAgBC,GACvB70E,UAAU80E,cACPC,SAASF,GACT3qE,KAAK8qE,IACJA,EAAaC,cAAgB,MAC3B,MAAMC,EAAmBF,EAAaG,WAClCD,IACFA,EAAiBE,cAAgB,MACA,cAA3BF,EAAiBlzE,QACfhC,UAAU80E,cAAcl1E,WAK1BX,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,8CAOvBuf,MAAM5b,IACL5D,QAAQ4D,MAAM,4CAA6CA,mBCrEjEwyE,EAAA,OACE1gE,EAAA,cAAC2/D,GAAG,MACJxsE,SAASwG,eAAe,SDYX,WACb,GAA6C,kBAAmBtO,UAAW,CAMzE,GAJkB,IAAIs1E,IACpB,IACApzE,OAAO6F,SAASkK,YAEJsjE,SAAWrzE,OAAO6F,SAASwtE,OAIvC,OAGFrzE,OAAOC,iBAAiB,OAAQ,KAC9B,MAAM0yE,EAAQ,sBAETL,GA0CX,SAAiCK,GAE/BhuE,MAAMguE,GACH3qE,KAAKsrE,IAGkB,MAApBA,EAASC,SACwD,IAAjED,EAASv4D,QAAQjX,IAAI,gBAAiBib,QAAQ,cAG9CjhB,UAAU80E,cAAcY,MAAMxrE,KAAK8qE,IACjCA,EAAaW,aAAazrE,KAAK,KAC7BhI,OAAO6F,SAAS6tE,aAKpBhB,GAAgBC,KAGnBp2D,MAAM,KACLxf,QAAQC,IACN,mEA3DA22E,CAAwBhB,GAHxBD,GAAgBC,MC7BxBE","file":"static/js/main.d6c973f4.chunk.js","sourcesContent":["export {left0} from './left0';\r\nexport * from './user';\r\nexport * from './net';\r\nexport * from './ui';\r\nexport * from './uid';\r\nexport {PageItems} from './pageItems';\r\nexport {CacheIds} from './cacheIds';\r\nexport * from './entry';\r\nexport * from './uq';\r\n","export * from './nav';\r\nexport * from './pageHeader';\r\nexport * from './page';\r\nexport * from './VM';\r\nexport * from './schema';\r\nexport * from './form';\r\nexport * from './edit';\r\nexport * from './res';\r\nexport * from './tabs';\r\nexport * from './loading';\r\nexport * from './image';\r\nexport * from './resUploader';\r\nexport * from './rules';\r\nexport * from './list';\r\nexport * from './dropDownActions';\r\nexport * from './easyDate';\r\nexport * from './propGrid';\r\nexport * from './components';\r\nexport * from './media';\r\nexport * from './searchBox';\r\n","import * as React from 'react';\r\nimport { Controller, VPage, View } from '../../ui';\r\nimport { Entity, Field } from '../uqs';\r\nimport { CUq } from './cUq/cUq';\r\nimport { VForm, FieldInputs, FieldCall, FormOptions, FormMode } from './form';\r\nimport { CQuerySelect } from './query';\r\nimport { FormUI, FieldTuidUI } from './formUI';\r\nimport { entityIcons } from './icons';\r\nimport { ControllerUq } from './ControllerUq';\r\n\r\nexport interface EntityUI {\r\n    form?: FormUI;\r\n}\r\n\r\nexport abstract class CEntity<T extends Entity, UI extends EntityUI> extends ControllerUq {\r\n    constructor(cUq: CUq, entity: T, ui: UI, res: any) {\r\n        super(cUq, res);\r\n        Object.setPrototypeOf(this.x, cUq.x);\r\n        let {name, typeName} = entity;\r\n        this.entity = entity;\r\n        this.ui = ui; // || entityUI.ui;\r\n        this.label = this.res.label || name;\r\n        this.icon = entityIcons[typeName];\r\n    }\r\n    readonly entity: T;\r\n    readonly ui: UI;\r\n\r\n    protected async beforeStart():Promise<boolean> {\r\n        //if (await super.beforeStart() === false) return false;\r\n        await this.entity.loadSchema();\r\n        return true;\r\n    }\r\n\r\n    createForm(onSubmit:()=>Promise<void>, values?:any, mode?:FormMode) {\r\n        let options = this.buildFormOptions(mode);\r\n        let ret = new VForm(options, onSubmit);\r\n        ret.setValues(values);\r\n        return ret;\r\n    }\r\n\r\n    private buildFormOptions(mode?:FormMode):FormOptions {\r\n        let {fields, arrFields} = this.entity;\r\n        let none, submitCaption, arrNewCaption, arrEditCaption, arrTitleNewButton;\r\n        if (this.res !== undefined) {\r\n            none = this.res['none'];\r\n            submitCaption = this.res['submit'];\r\n            arrNewCaption = this.res['arrNew'];\r\n            arrEditCaption = this.res['arrEdit'];\r\n            arrTitleNewButton = this.res['arrTitleNewButton'];\r\n        }\r\n        if (none === undefined) {\r\n            none = this.cUq.res['none'] || 'none';\r\n        }\r\n        if (submitCaption === undefined)\r\n            submitCaption = this.cUq.res['submit'] || 'Submit';\r\n        if (arrNewCaption === undefined)\r\n            arrNewCaption = this.cUq.res['arrNew'] || 'New';\r\n        if (arrEditCaption === undefined)\r\n            arrEditCaption = this.cUq.res['arrEdit'] || 'Edit';\r\n        if (arrTitleNewButton === undefined)\r\n        arrTitleNewButton = this.cUq.res['arrTitleNewButton'];\r\n        if (mode === undefined) mode = FormMode.new;\r\n        let formUI = this.ui.form;\r\n        let ret:FormOptions = {\r\n            fields: fields,\r\n            arrs: arrFields,\r\n            ui: formUI,\r\n            res: this.res || {},\r\n            inputs: this.buildInputs(formUI),\r\n            none: none,\r\n            submitCaption: submitCaption,\r\n            arrNewCaption: arrNewCaption,\r\n            arrEditCaption: arrEditCaption,\r\n            arrTitleNewButton: arrTitleNewButton,\r\n            mode: mode,\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private buildInputs(formUI: FormUI):FieldInputs {\r\n        let {fields, arrFields} = this.entity;\r\n        let ret:FieldInputs = {};\r\n        this.buildFieldsInputs(ret, fields, undefined, formUI);\r\n        if (arrFields !== undefined) {\r\n            for (let arr of arrFields) {\r\n                let {name, fields} = arr;\r\n                let items = formUI && formUI.items;\r\n                this.buildFieldsInputs(ret, fields, name, items && items[name] as FormUI);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private buildFieldsInputs(ret:FieldInputs, fields:Field[], arr:string, formUI: FormUI) {\r\n        if (arr !== undefined) {\r\n            let arrFieldInputs = ret[arr];\r\n            if (arrFieldInputs === undefined) {\r\n                ret[arr] = arrFieldInputs = {};\r\n                ret = arrFieldInputs;\r\n            }\r\n        }\r\n        for (let field of fields) {\r\n            let {name, _tuid} = field;\r\n            if (_tuid === undefined) continue;\r\n            let {tuid} = _tuid;\r\n            let fieldUI = formUI && formUI.items && formUI.items[name] as FieldTuidUI;\r\n            ret[name] = {\r\n                select: this.buildSelect(field, arr, fieldUI),\r\n                content: this.buildContent(field, arr),\r\n                placeHolder: this.cUq.getTuidPlaceHolder(tuid),\r\n            };\r\n        }\r\n    }\r\n\r\n    protected buildSelect(field:Field, arr:string, fieldUI: FieldTuidUI):FieldCall {\r\n        return async (form:VForm, field:Field, values:any):Promise<any> => {\r\n            let {_tuid } = field;\r\n            let {tuid, ownerField} = _tuid;\r\n            let cTuidSelect = undefined; // await tuid.cSelectFrom();\r\n            let param:any = undefined;\r\n            if (ownerField !== undefined) param = form.getValue(ownerField.name);\r\n            if (fieldUI && fieldUI.autoList === true) {\r\n                console.log('select search set param=empty string');\r\n                param = '';\r\n            }\r\n            let ret = await cTuidSelect.call(param);\r\n            cTuidSelect.removeCeased(); // 清除已经废弃的顶部页面\r\n            if (ret === undefined) return undefined;\r\n            let id = cTuidSelect.idFromItem(ret);\r\n            _tuid.useId(id);\r\n            return id;\r\n        };\r\n    }\r\n\r\n    protected buildContent(field:Field, arr:string): React.StatelessComponent<any> {\r\n        return;\r\n    }\r\n\r\n    cQuerySelect(queryName:string):CQuerySelect {\r\n        return this.cUq.cQuerySelect(queryName);\r\n    }\r\n}\r\n\r\nexport abstract class VEntity<T extends Entity, UI extends EntityUI, C extends CEntity<T, UI>> extends VPage<C> {\r\n    protected readonly entity: T;\r\n    protected readonly ui: UI;\r\n    constructor(controller: C) {\r\n        super(controller);\r\n        this.entity = controller.entity;\r\n        this.ui = controller.ui;\r\n    }\r\n\r\n    get label():string {return this.controller.label}\r\n\r\n    //private _form_$: VForm;\r\n    protected createForm(onSubmit:()=>Promise<void>, values?:any, mode?:FormMode): VForm {\r\n        //if (this._form_$ !== undefined) return this._form_$;\r\n        return this.controller.createForm(onSubmit, values, mode);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable, has} from 'mobx';\r\nimport {User, Guest/*, UserInNav*/} from '../user';\r\nimport {Page} from './page';\r\nimport {netToken} from '../net/netToken';\r\nimport FetchErrorView from './fetchErrorView';\r\nimport {FetchError} from '../fetchError';\r\nimport {appUrl, setAppInFrame, getExHash, getExHashPos} from '../net/appBridge';\r\nimport {LocalData} from '../local';\r\nimport {guestApi, logoutApis, setCenterUrl, setCenterToken, WSChannel, appInFrame, isDevelopment, host} from '../net';\r\nimport { WsBase, wsBridge } from '../net/wsChannel';\r\nimport { resOptions } from './res';\r\nimport { Loading } from './loading';\r\n\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport '../css/va-form.css';\r\nimport '../css/va.css';\r\nimport '../css/animation.css';\r\nimport { FA } from './components';\r\n\r\nconst regEx = new RegExp('Android|webOS|iPhone|iPad|' +\r\n    'BlackBerry|Windows Phone|'  +\r\n    'Opera Mini|IEMobile|Mobile' , \r\n    'i');\r\nconst isMobile = regEx.test(navigator.userAgent);\r\n/*\r\nexport const mobileHeaderStyle = isMobile? {\r\n    minHeight:  '3em'\r\n} : undefined;\r\n*/\r\nconst logo = require('../img/logo.svg');\r\nlet logMark: number;\r\nconst logs:string[] = [];\r\n\r\nexport interface Props //extends React.Props<Nav>\r\n{\r\n    //view: JSX.Element | (()=>JSX.Element);\r\n    //start?: ()=>Promise<void>;\r\n    onLogined: ()=>Promise<void>;\r\n    notLogined?: ()=>Promise<void>;\r\n};\r\nlet stackKey = 1;\r\nexport interface StackItem {\r\n    key: number;\r\n    view: JSX.Element;\r\n    ceased: boolean;\r\n    confirmClose?: ()=>Promise<boolean>;\r\n    disposer?: ()=>void;\r\n}\r\nexport interface NavViewState {\r\n    stack: StackItem[];\r\n    wait: 0|1|2;\r\n    fetchError: FetchError\r\n}\r\n\r\nexport class NavView extends React.Component<Props, NavViewState> {\r\n    private stack: StackItem[];\r\n    private htmlTitle: string;\r\n    private waitCount: number = 0;\r\n    private waitTimeHandler?: NodeJS.Timer;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.back = this.back.bind(this);\r\n        this.navBack = this.navBack.bind(this);\r\n        this.stack = [];\r\n        this.state = {\r\n            stack: this.stack,\r\n            wait: 0,\r\n            fetchError: undefined\r\n        };\r\n    }\r\n    async componentWillMount() {\r\n        window.addEventListener('popstate', this.navBack);\r\n    }\r\n\r\n    async componentDidMount()\r\n    {\r\n        nav.set(this);\r\n        /*\r\n        let start = this.props.start;\r\n        if (start !== undefined) {\r\n            await start();\r\n        }\r\n        else {\r\n        */\r\n            await nav.start();\r\n        //}\r\n    }\r\n\r\n    get level(): number {\r\n        return this.stack.length;\r\n    }\r\n\r\n    startWait() {\r\n        if (this.waitCount === 0) {\r\n            this.setState({wait: 1});\r\n            this.waitTimeHandler = global.setTimeout(\r\n                () => {\r\n                    this.waitTimeHandler = undefined;\r\n                    this.setState({wait: 2});\r\n                },\r\n                1000) as NodeJS.Timer;\r\n        }\r\n        ++this.waitCount;\r\n        this.setState({\r\n            fetchError: undefined,\r\n        });\r\n    }\r\n\r\n    endWait() {\r\n        setTimeout(() => {\r\n            /*\r\n            this.setState({\r\n                fetchError: undefined,\r\n            });*/\r\n            --this.waitCount;\r\n            if (this.waitCount === 0) {\r\n                if (this.waitTimeHandler !== undefined) {\r\n                    clearTimeout(this.waitTimeHandler);\r\n                    this.waitTimeHandler = undefined;\r\n                }\r\n                this.setState({wait: 0});\r\n            }\r\n        },100);\r\n    }\r\n\r\n    async onError(fetchError: FetchError)\r\n    {\r\n        let err = fetchError.error;\r\n        if (err !== undefined && err.unauthorized === true) {\r\n            await nav.showLogin(undefined);\r\n            return;\r\n        }\r\n        this.setState({\r\n            fetchError: fetchError,\r\n        });\r\n    }\r\n\r\n    show(view: JSX.Element, disposer?: ()=>void): number {\r\n        this.clear();\r\n        return this.push(view, disposer);\r\n    }\r\n\r\n    push(view: JSX.Element, disposer?: ()=>void): number {\r\n        this.removeCeased();\r\n        if (this.stack.length > 0) {\r\n            window.history.pushState('forward', null, null);\r\n        }\r\n        let key = stackKey++;\r\n        this.stack.push({\r\n            key: key,\r\n            view: view, \r\n            ceased: false,\r\n            disposer: disposer\r\n        });\r\n        this.refresh();\r\n        //console.log('push: %s pages', this.stack.length);\r\n        return key;\r\n    }\r\n\r\n    replace(view: JSX.Element, disposer?: ()=>void): number {\r\n        let item:StackItem = undefined;\r\n        let stack = this.stack;\r\n        if (stack.length > 0) {\r\n            item = stack.pop();\r\n            //this.popAndDispose();\r\n        }\r\n        let key = stackKey++;\r\n        this.stack.push({\r\n            key: key, \r\n            view: view, \r\n            ceased: false,\r\n            disposer: disposer\r\n        });\r\n        if (item !== undefined) this.dispose(item.disposer);\r\n        this.refresh();\r\n        //console.log('replace: %s pages', this.stack.length);\r\n        return key;\r\n    }\r\n\r\n    ceaseTop(level:number = 1) {\r\n        let p = this.stack.length - 1;\r\n        for (let i=0; i<level; i++, p--) {\r\n            if (p < 0) break;\r\n            let item = this.stack[p];\r\n            item.ceased = true;\r\n        }\r\n    }\r\n\r\n    pop(level:number = 1) {\r\n        let stack = this.stack;\r\n        let len = stack.length;\r\n        //console.log('pop start: %s pages level=%s', len, level);\r\n        if (level <= 0 || len <= 1) return;\r\n        if (len < level) level = len;\r\n        let backLevel = 0;\r\n        for (let i = 0; i < level; i++) {\r\n            if (stack.length === 0) break;\r\n            //stack.pop();\r\n            this.popAndDispose();\r\n            ++backLevel;\r\n        }\r\n        if (backLevel >= len) backLevel--;\r\n        this.refresh();\r\n        if (this.isHistoryBack !== true) {\r\n            //window.removeEventListener('popstate', this.navBack);\r\n            //window.history.back(backLevel);\r\n            //window.addEventListener('popstate', this.navBack);\r\n        }\r\n        //console.log('pop: %s pages', stack.length);\r\n    }\r\n\r\n    popTo(key: number) {\r\n        if (key === undefined) return;\r\n        if (this.stack.find(v => v.key === key) === undefined) return;\r\n        while (this.stack.length >0) {\r\n            let len = this.stack.length;\r\n            let top = this.stack[len-1];\r\n            if (top.key === key) break;\r\n            this.pop();\r\n        }\r\n    }\r\n\r\n    topKey():number {\r\n        let len = this.stack.length;\r\n        if (len === 0) return undefined;\r\n        return this.stack[len-1].key;\r\n    }\r\n\r\n    removeCeased() {\r\n        for (;;) {\r\n            let p=this.stack.length-1;\r\n            if (p < 0) break;\r\n            let top = this.stack[p];\r\n            if (top.ceased === false) break;\r\n            let item = this.stack.pop();\r\n            let {disposer} = item;\r\n            this.dispose(disposer);\r\n        }\r\n        this.refresh();\r\n    }\r\n\r\n    private popAndDispose() {\r\n        this.removeCeased();\r\n        let item = this.stack.pop();\r\n        if (item === undefined) return;\r\n        let {disposer} = item;\r\n        this.dispose(disposer);\r\n        this.removeCeased();\r\n        return item;\r\n    }\r\n\r\n    private dispose(disposer:()=>void) {\r\n        if (disposer === undefined) return;\r\n        let item = this.stack.find(v => v.disposer === disposer);\r\n        if (item === undefined) disposer();\r\n    }\r\n\r\n    clear() {\r\n        let len = this.stack.length;\r\n        while (this.stack.length > 0) this.popAndDispose();\r\n        //this.refresh();\r\n        if (len > 1) {\r\n            //window.removeEventListener('popstate', this.navBack);\r\n            //window.history.back(len-1);\r\n            //window.addEventListener('popstate', this.navBack);\r\n        }\r\n    }\r\n\r\n    regConfirmClose(confirmClose:()=>Promise<boolean>) {\r\n        let stack = this.stack;\r\n        let len = stack.length;\r\n        if (len === 0) return;\r\n        let top = stack[len-1];\r\n        top.confirmClose = confirmClose;\r\n    }\r\n\r\n    private isHistoryBack:boolean = false;\r\n    navBack() {\r\n        nav.log('backbutton pressed - nav level: ' + this.stack.length);\r\n        this.isHistoryBack = true;\r\n        this.back(true);\r\n        this.isHistoryBack = false;\r\n    }\r\n\r\n    async back(confirm:boolean = true) {\r\n        let stack = this.stack;\r\n        let len = stack.length;\r\n        if (len === 0) return;\r\n        if (len === 1) {\r\n            if (self != window.top) {\r\n                window.top.postMessage({type:'pop-app'}, '*');\r\n            }\r\n            return;\r\n        }\r\n        let top = stack[len-1];\r\n        if (confirm===true && top.confirmClose) {\r\n            if (await top.confirmClose()===true) this.pop();\r\n        }\r\n        else {\r\n            this.pop();\r\n        }\r\n    }\r\n\r\n    confirmBox(message?:string): boolean {\r\n        return window.confirm(message);\r\n    }\r\n    clearError = () => {\r\n        this.setState({fetchError: undefined});\r\n    }\r\n    private clickCount = 0;\r\n    private firstClick: Date;\r\n    private onClick = () => {\r\n        if (this.clickCount >= 5) {\r\n            if (Date.now() - this.firstClick.getTime() < 5000) {\r\n                nav.reverseTest();\r\n            }\r\n            this.clickCount = 0;\r\n            return;\r\n        }\r\n        if (this.clickCount === 0) {\r\n            this.firstClick = new Date();\r\n        }\r\n        else if (Date.now() - this.firstClick.getTime() >= 5000) {\r\n            this.clickCount = 0;\r\n            this.firstClick = new Date();\r\n        }\r\n        ++this.clickCount;\r\n    }\r\n    private onTestClick = () => {\r\n        nav.testing = false;\r\n        nav.push(<Page header={false}>\r\n            <div className=\"m-5 border border-info bg-white rounded p-4 text-center\">\r\n                <div>当前运行在测试模式</div>\r\n                <div className=\"mt-4\">\r\n                    <button className=\"btn btn-danger\" onClick={nav.toNormal}>正常模式</button>\r\n                    <button className=\"btn btn-outline-info ml-3\" onClick={()=>{nav.testing=true;this.pop()}}>测试模式</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n    }\r\n    render() {\r\n        const {wait, fetchError} = this.state;\r\n        let stack = this.state.stack;\r\n        let top = stack.length - 1;\r\n        let elWait = null, elError = null;\r\n        switch (wait) {\r\n            case 1:\r\n                elWait = <li className=\"va-wait va-wait1\">\r\n                </li>;\r\n                break;\r\n            case 2:\r\n                elWait = <li className=\"va-wait va-wait2\">\r\n                    <Loading />\r\n                </li>;\r\n                break;\r\n                //<i className=\"fa fa-spinner fa-spin fa-3x fa-fw\"></i>\r\n                //<span className=\"sr-only\">Loading...</span>\r\n        }\r\n        if (fetchError)\r\n            elError = <FetchErrorView clearError={this.clearError} {...fetchError} />\r\n        let test = nav.testing===true && \r\n            <span className=\"cursor-pointer position-absolute\" style={{lineHeight:0}}\r\n                onClick={this.onTestClick}>\r\n                <FA className=\"text-warning\" name=\"info-circle\" />\r\n            </span>;\r\n        return (\r\n        <ul className=\"va\" onClick={this.onClick}>\r\n            {\r\n                stack.map((item, index) => {\r\n                    let {key, view} = item;\r\n                    return <li key={key} style={index<top? {visibility: 'hidden'}:undefined}>\r\n                        {view}\r\n                    </li>\r\n                })\r\n            }\r\n            {elWait}\r\n            {elError}\r\n            {test}\r\n        </ul>\r\n        );\r\n    }\r\n\r\n    private refresh() {\r\n        // this.setState({flag: !this.state.flag});\r\n        this.setState({stack: this.stack });\r\n        // this.forceUpdate();\r\n    }\r\n}\r\n\r\nexport interface NavSettings {\r\n    loginTop?: JSX.Element;\r\n}\r\n\r\nexport class Nav {\r\n    private nav:NavView;\r\n    private ws: WsBase;\r\n    private wsHost: string;\r\n    private local: LocalData = new LocalData();\r\n    private navSettings: NavSettings;\r\n    @observable user: User/*InNav*/ = undefined;\r\n    @observable testing: boolean;\r\n    language: string;\r\n    culture: string;\r\n    resUrl: string;\r\n\r\n    constructor() {\r\n        let {lang, district} = resOptions;\r\n        this.language = lang;\r\n        this.culture = district;\r\n        this.testing = false;\r\n    }\r\n\r\n    get guest(): number {\r\n        let guest = this.local.guest;\r\n        if (guest === undefined) return 0;\r\n        let g = guest.get();\r\n        if (g === undefined) return 0;\r\n        return g.guest;\r\n    }\r\n\r\n    set(nav:NavView) {\r\n        //this.logo = logo;\r\n        this.nav = nav;\r\n    }\r\n\r\n    registerReceiveHandler(handler: (message:any)=>Promise<void>):number {\r\n        if (this.ws === undefined) return;\r\n        return this.ws.onWsReceiveAny(handler);\r\n    }\r\n\r\n    unregisterReceiveHandler(handlerId:number) {\r\n        if (this.ws === undefined) return;\r\n        if (handlerId === undefined) return;\r\n        this.ws.endWsReceive(handlerId);\r\n    }\r\n\r\n    private static testMode = '测试';\r\n    private static normalMode = '正常';\r\n    private setTesting(testing:boolean) {\r\n        this.testing = testing;\r\n        this.local.testing.set(testing);\r\n    };\r\n    private resetTest = () => {\r\n        this.setTesting(!this.testing);\r\n        //this.pop();\r\n        this.start();\r\n    }\r\n    toNormal = () => {\r\n        this.setTesting(false);\r\n        this.start();\r\n    }\r\n    reverseTest() {\r\n        let m1:string, m2:string;\r\n        if (this.testing === true) {\r\n            m1 = Nav.testMode;\r\n            m2 = Nav.normalMode;\r\n        }\r\n        else {\r\n            m1 = Nav.normalMode;\r\n            m2 = Nav.testMode;\r\n        }\r\n\r\n        this.push(<Page back=\"close\" header={false}>\r\n            <div className=\"m-5 border border-info bg-white rounded p-4 text-center\">\r\n                <div>\r\n                    <p>从{m1}模式切换到{m2}模式吗?</p>\r\n                    <p className=\"small text-muted\">测试模式下，页面左上角会有一个 <FA className=\"text-warning\" name=\"info-circle\" /></p>\r\n                </div>\r\n                <div className=\"mt-4\">\r\n                    <button className=\"btn btn-danger\" onClick={this.resetTest}>切换</button>\r\n                    <button className=\"btn btn-outline-info ml-3\" onClick={()=>this.pop()}>取消</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n    }\r\n\r\n    async onReceive(msg:any) {\r\n        if (this.ws === undefined) return;\r\n        await this.ws.receive(msg);\r\n    }\r\n\r\n    private async getPredefinedUnitName() {\r\n        try {\r\n            let unitRes = await fetch('unit.json', {});\r\n            //if (unitRes)\r\n            let res = await unitRes.json();\r\n            return res.unit;\r\n        }\r\n        catch (err) {\r\n            this.local.unit.clear();\r\n            return;\r\n        }\r\n    }\r\n\r\n    private async loadPredefinedUnit() {\r\n        let envUnit = process.env.REACT_APP_UNIT;\r\n        if (envUnit !== undefined) {\r\n            return Number(envUnit);\r\n        }\r\n        let unitName:string;\r\n        let unit = this.local.unit.get();\r\n        if (unit !== undefined) {\r\n            if (isDevelopment !== true) return unit.id;\r\n            unitName = await this.getPredefinedUnitName();\r\n            if (unitName === undefined) return;\r\n            if (unit.name === unitName) return unit.id;\r\n        }\r\n        else {\r\n            unitName = await this.getPredefinedUnitName();\r\n            if (unitName === undefined) return;\r\n        }\r\n        let unitId = await guestApi.unitFromName(unitName);\r\n        if (unitId !== undefined) {\r\n            this.local.unit.set({id: unitId, name: unitName});\r\n        }\r\n        return unitId;\r\n    }\r\n\r\n    setSettings(settings?: NavSettings) {\r\n        this.navSettings = settings;\r\n    }\r\n\r\n    hashParam: string;\r\n    private centerHost: string;\r\n    async start() {\r\n        try {\r\n            this.testing = this.local.testing.get();\r\n            await host.start(this.testing);\r\n            let hash = document.location.hash;\r\n            if (hash !== undefined && hash.length > 0) {\r\n                let pos = getExHashPos();\r\n                if (pos < 0) pos = undefined;\r\n                this.hashParam = hash.substring(1, pos);\r\n            }\r\n            nav.clear();\r\n            this.startWait();\r\n            let {url, ws, resHost} = host;\r\n            this.centerHost = url;\r\n            this.resUrl = 'http://' + resHost + '/res/';\r\n            this.wsHost = ws;\r\n            setCenterUrl(url);\r\n            \r\n            let guest:Guest = this.local.guest.get();\r\n            if (guest === undefined) {\r\n                guest = await guestApi.guest();\r\n            }\r\n            nav.setGuest(guest);\r\n\r\n            let exHash = getExHash();\r\n            let appInFrame = setAppInFrame(exHash);\r\n            if (exHash !== undefined && window !== window.parent) {\r\n                // is in frame\r\n                if (appInFrame !== undefined) {\r\n                    this.ws = wsBridge;\r\n                    console.log('this.ws = wsBridge in sub frame');\r\n                    //nav.user = {id:0} as User;\r\n                    if (self !== window.parent) {\r\n                        window.parent.postMessage({type:'sub-frame-started', hash: appInFrame.hash}, '*');\r\n                    }\r\n                    // 下面这一句，已经移到 appBridge.ts 里面的 initSubWin，也就是响应从main frame获得user之后开始。\r\n                    //await this.showAppView();\r\n                    return;\r\n                }\r\n            }\r\n\r\n            let predefinedUnit = await this.loadPredefinedUnit();\r\n            appInFrame.predefinedUnit = predefinedUnit;\r\n\r\n            let user: User = this.local.user.get();\r\n            if (user === undefined) {\r\n                let {notLogined} = this.nav.props;\r\n                if (notLogined !== undefined) {\r\n                    await notLogined();\r\n                }\r\n                else {\r\n                    await nav.showLogin(undefined);\r\n                }\r\n                return;\r\n            }\r\n\r\n            await nav.logined(user);\r\n        }\r\n        catch (err) {\r\n        }\r\n        finally {\r\n            this.endWait();\r\n        }\r\n    }\r\n\r\n    async showAppView() {\r\n        let {onLogined} = this.nav.props;\r\n        if (onLogined === undefined) {\r\n            nav.push(<div>NavView has no prop onLogined</div>);\r\n            return;\r\n        }\r\n        nav.clear();\r\n        await onLogined();\r\n        console.log('logined: AppView shown');\r\n    }\r\n\r\n    setGuest(guest: Guest) {\r\n        this.local.guest.set(guest);\r\n        netToken.set(0, guest.token);\r\n    }\r\n\r\n    saveLocalUser() {\r\n        this.local.user.set(this.user);\r\n    }\r\n\r\n    async logined(user: User, callback?: (user:User)=>Promise<void>) {\r\n        logoutApis();\r\n        let ws:WSChannel = this.ws = new WSChannel(this.wsHost, user.token);\r\n        ws.connect();\r\n\r\n        console.log(\"logined: %s\", JSON.stringify(user));\r\n        this.user = user;\r\n        this.saveLocalUser();\r\n        netToken.set(user.id, user.token);\r\n        if (callback !== undefined) //this.loginCallbacks.has)\r\n            callback(user);\r\n            //this.loginCallbacks.call(user);\r\n        else {\r\n            await this.showAppView();\r\n        }\r\n    }\r\n\r\n    loginTop(defaultTop:JSX.Element) {\r\n        return (this.navSettings && this.navSettings.loginTop) || defaultTop;\r\n    }\r\n\r\n    async showLogin(callback?: (user:User)=>Promise<void>, withBack?:boolean) {\r\n        let lv = await import('../entry/login');\r\n        let loginView = <lv.default \r\n            withBack={withBack} \r\n            callback={callback} />;\r\n        if (withBack !== true) {\r\n            this.nav.clear();\r\n            this.pop();\r\n        }\r\n        this.nav.push(loginView);\r\n    }\r\n\r\n    async showLogout(callback?: ()=>Promise<void>) {\r\n        nav.push(<Page header=\"安全退出\" back=\"close\">\r\n            <div className=\"m-5 border border-info bg-white rounded p-3 text-center\">\r\n                <div>退出当前账号不会删除任何历史数据，下次登录依然可以使用本账号</div>\r\n                <div className=\"mt-3\">\r\n                    <button className=\"btn btn-danger\" onClick={()=>this.logout(callback)}>退出</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n    }\r\n\r\n    async logout(callback?:()=>Promise<void>) { //notShowLogin?:boolean) {\r\n        appInFrame.unit = undefined;\r\n        this.local.logoutClear();\r\n        this.user = undefined; //{} as User;\r\n        logoutApis();\r\n        let guest = this.local.guest.get();\r\n        setCenterToken(0, guest && guest.token);\r\n        this.ws = undefined;\r\n        /*\r\n        if (this.loginCallbacks.has)\r\n            this.logoutCallbacks.call();\r\n        else {\r\n            if (notShowLogin === true) return;\r\n        }\r\n        await nav.start();\r\n        */\r\n        if (callback === undefined)\r\n            await nav.start();\r\n        else\r\n            await callback();\r\n    }\r\n\r\n    async changePassword() {\r\n        let cp = await import('../entry/changePassword');\r\n        nav.push(<cp.ChangePasswordPage />);\r\n    }\r\n\r\n    get level(): number {\r\n        return this.nav.level;\r\n    }\r\n    startWait() {\r\n        this.nav.startWait();\r\n    }\r\n    endWait() {\r\n        this.nav.endWait();\r\n    }\r\n    async onError(error: FetchError) {\r\n        await this.nav.onError(error);\r\n    }\r\n    show (view: JSX.Element, disposer?: ()=>void): void {\r\n        this.nav.show(view, disposer);\r\n    }\r\n    push(view: JSX.Element, disposer?: ()=>void): void {\r\n        this.nav.push(view, disposer);\r\n    }\r\n    replace(view: JSX.Element, disposer?: ()=>void): void {\r\n        this.nav.replace(view, disposer);\r\n    }\r\n    pop(level:number = 1) {\r\n        this.nav.pop(level);\r\n    }\r\n    topKey():number {\r\n        return this.nav.topKey();\r\n    }\r\n    popTo(key:number) {\r\n        this.nav.popTo(key);\r\n    }\r\n    clear() {\r\n        this.nav.clear();\r\n    }\r\n    navBack() {\r\n        this.nav.navBack();\r\n    }\r\n    ceaseTop(level?:number) {\r\n        this.nav.ceaseTop(level);\r\n    }\r\n    removeCeased() {\r\n        this.nav.removeCeased();\r\n    }\r\n    async back(confirm:boolean = true) {\r\n        await this.nav.back(confirm);\r\n    }\r\n    regConfirmClose(confirmClose: ()=>Promise<boolean>) {\r\n        this.nav.regConfirmClose(confirmClose);\r\n    }\r\n    confirmBox(message?:string): boolean {\r\n        return this.nav.confirmBox(message);\r\n    }\r\n    async navToApp(url: string, unitId: number, apiId?:number, sheetType?:number, sheetId?:number):Promise<void> {\r\n        return new Promise<void>((resolve, reject) => {\r\n            let sheet = this.centerHost.includes('http://localhost:') === true? 'sheet_debug':'sheet'\r\n            let uh = sheetId === undefined?\r\n                    appUrl(url, unitId) :\r\n                    appUrl(url, unitId, sheet, [apiId, sheetType, sheetId]);\r\n            console.log('navToApp: %s', JSON.stringify(uh));\r\n            nav.push(<article className='app-container'>\r\n                <span id={uh.hash} onClick={()=>this.back()} /*style={mobileHeaderStyle}*/>\r\n                    <i className=\"fa fa-arrow-left\" />\r\n                </span>\r\n                <iframe src={uh.url} />\r\n            </article>, \r\n            ()=> {\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n\r\n    navToSite(url: string) {\r\n        // show in new window\r\n        window.open(url);\r\n    }\r\n\r\n    get logs() {return logs};\r\n    log(msg:string) {\r\n        logs.push(msg);\r\n    }\r\n    logMark() {\r\n        let date = new Date();\r\n        logMark = date.getTime();\r\n        logs.push('log-mark: ' + date.toTimeString());\r\n    }\r\n    logStep(step:string) {\r\n        logs.push(step + ': ' + (new Date().getTime() - logMark));\r\n    }\r\n}\r\nexport const nav: Nav = new Nav();\r\n","import { decodeGuestToken } from '../user';\r\nimport { CenterApiBase } from './uqApi';\r\n\r\nexport class GuestApi extends CenterApiBase {\r\n    async guest(): Promise<any> {\r\n        //let guest = nav.local.guest.get();\r\n        let ret = await this.get('', {});\r\n        switch (typeof ret) {\r\n            default: return;\r\n            case 'string': return decodeGuestToken(ret);\r\n            case 'object':\r\n                let guest = decodeGuestToken(ret.token);\r\n                return guest;\r\n        }\r\n    }\r\n\r\n    async unitFromName(unitName:string): Promise<number> {\r\n        let ret = await this.get(unitName);\r\n        return ret && ret.unit;\r\n    }\r\n}\r\n\r\nexport const guestApi = new GuestApi('tv/guest/', undefined);\r\n","export {WSChannel, wsBridge, postWsToTop} from './wsChannel';\r\nexport * from './apiBase';\r\nexport * from './guestApi';\r\nexport * from './uqApi';\r\nexport {appInFrame, isBridged, getExHash} from './appBridge';\r\nexport * from './host';\r\nexport {httpGet} from './httpChannel';\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { jsonStringify } from '../../tools';\r\n\r\nexport type TypeViewModel = typeof ViewModel;\r\nexport type TypeView = React.StatelessComponent<{vm: ViewModel, className?:string|string[]}>;\r\nexport type TypeContent = React.StatelessComponent<any>;\r\n\r\nexport abstract class ViewModel {\r\n    protected abstract get view(): TypeView;\r\n    render(className?:string|string[]):JSX.Element {\r\n        if (this.view === undefined) return <div>??? viewModel 必须定义 view ???</div>\r\n        return React.createElement(this.view, {vm: this, className:className});\r\n    }\r\n}\r\n\r\nexport const PureJSONContent = (values:any, x?:any) => {\r\n    return <>content: {jsonStringify(values)}</>;\r\n}\r\nexport const JSONContent = observer(PureJSONContent);\r\nexport const RowContent = \r\n    (values:any) => <div className=\"px-3 py-2\">{jsonStringify(values)}</div>\r\n;\r\n","import _ from 'lodash';\r\nimport {nav} from '../ui';\r\nimport {uid} from '../uid';\r\nimport {uqTokenApi as uqTokenApi, callCenterapi, CenterAppApi, UqData, centerToken, UqAppData, setCenterToken} from './uqApi';\r\nimport {setSubAppWindow} from './wsChannel';\r\nimport { host } from './host';\r\n\r\nexport interface UqToken {\r\n    name: string;\r\n    db: string;\r\n    url: string;\r\n    token: string;\r\n}\r\nconst uqTokens:{[uqName:string]: UqToken}  = {};\r\nexport function logoutUqTokens() {\r\n    for (let i in uqTokens) uqTokens[i] = undefined;\r\n}\r\n\r\nexport interface AppInFrame {\r\n    hash: string;\r\n    unit: number;       // unit id\r\n    page?: string;\r\n    param?: string[];\r\n    predefinedUnit?: number;  // 比如像Cart这样的应用，直接让用户访问的，就需要在unit.json里面定义unitName\r\n}\r\nconst appsInFrame:{[key:string]:AppInFrame} = {};\r\n\r\nclass AppInFrameClass implements AppInFrame {\r\n    hash: string;\r\n    private _unit: number;\r\n    get unit(): number {return this._unit;}       // unit id\r\n    set unit(val:number) { this._unit=val;}\r\n    page?: string;\r\n    param?: string[];\r\n}\r\n\r\nexport let appInFrame:AppInFrame = new AppInFrameClass();\r\n/* {\r\n    hash: undefined,\r\n    get unit():number {return } undefined, //debugUnitId,\r\n    page: undefined;\r\n    param: undefined,\r\n}*/\r\n\r\nexport function isBridged():boolean {\r\n    return self !== window.parent;\r\n}\r\n\r\nwindow.addEventListener('message', async function(evt) {\r\n    var message = evt.data;\r\n    switch (message.type) {\r\n        case 'sub-frame-started':\r\n            subFrameStarted(evt);\r\n            break;\r\n        case 'ws':\r\n            //wsBridge.receive(message.msg);\r\n            await nav.onReceive(message.msg);\r\n            break;\r\n        case 'init-sub-win':\r\n            await initSubWin(message);\r\n            break;\r\n        case 'pop-app':\r\n            nav.navBack();\r\n            break;\r\n        case 'center-api':\r\n            await callCenterApiFromMessage(evt.source as Window, message);\r\n            break;\r\n        case 'center-api-return':\r\n            bridgeCenterApiReturn(message);\r\n            break;\r\n        case 'app-api':\r\n            let ret = await onReceiveAppApiMessage(message.hash, message.apiName);\r\n            (evt.source as Window).postMessage({\r\n                type: 'app-api-return', \r\n                apiName: message.apiName,\r\n                db: ret.db,\r\n                url: ret.url,\r\n                token: ret.token} as any, \"*\");\r\n            break;\r\n        case 'app-api-return':\r\n            console.log(\"app-api-return: %s\", JSON.stringify(message));\r\n            console.log('await onAppApiReturn(message);');\r\n            await onAppApiReturn(message);\r\n            break;\r\n        default:\r\n            this.console.log('message: %s', JSON.stringify(message));\r\n            break;\r\n    }\r\n});\r\n\r\nfunction subFrameStarted(evt:any) {\r\n    var message = evt.data;\r\n    let subWin = evt.source as Window;\r\n    setSubAppWindow(subWin);\r\n    hideFrameBack(message.hash);\r\n    let msg:any = _.clone(nav.user);\r\n    msg.type = 'init-sub-win';\r\n    subWin.postMessage(msg, '*');\r\n}\r\nfunction hideFrameBack(hash:string) {\r\n    let el = document.getElementById(hash);\r\n    if (el !== undefined) el.hidden = true;\r\n}\r\nasync function initSubWin(message:any) {\r\n    console.log('initSubWin: set nav.user', message);\r\n    let user = nav.user = message; // message.user;\r\n    setCenterToken(user.id, user.token);\r\n    await nav.showAppView();\r\n}\r\nasync function onReceiveAppApiMessage(hash: string, apiName: string): Promise<UqToken> {\r\n    let appInFrame = appsInFrame[hash];\r\n    if (appInFrame === undefined) return {name:apiName, db:undefined, url:undefined, token:undefined};\r\n    //let unit = getUnit();\r\n    let {unit, predefinedUnit} = appInFrame;\r\n    unit = unit || predefinedUnit;\r\n    if (!unit) {\r\n        console.error('no unit defined in unit.json or not logined in', unit);\r\n    }\r\n    let parts = apiName.split('/');\r\n    let param = {unit: unit, uqOwner: parts[0], uqName: parts[1]};\r\n    console.log('uqTokenApi.uq onReceiveAppApiMessage', param);\r\n    let ret = await uqTokenApi.uq(param);\r\n    let {db, url, token} = ret;\r\n    return {name: apiName, db:db, url: url, token: token};\r\n}\r\n\r\nasync function onAppApiReturn(message:any) {\r\n    let {apiName, db, url, urlTest, token} = message;\r\n    let action = uqTokenActions[apiName];\r\n    if (action === undefined) {\r\n        throw 'error app api return';\r\n        //return;\r\n    }\r\n    let realUrl = host.getUrlOrTest(db, url, urlTest);\r\n    console.log('onAppApiReturn(message:any): url=' + url + ', real=' + realUrl);\r\n    //action.url = realUrl;\r\n    //action.token = token;\r\n    action.resolve({\r\n        name: apiName,\r\n        db: db,\r\n        url: realUrl,\r\n        token: token,\r\n    } as UqToken);\r\n}\r\n\r\nexport function setAppInFrame(appHash: string):AppInFrame {\r\n    if (appHash) {\r\n        let parts = appHash.split('-');\r\n        let len = parts.length;\r\n        if (len > 0) {\r\n            let p = 1;\r\n            appInFrame.hash = parts[p++];\r\n            if (len>0) appInFrame.unit = Number(parts[p++]);\r\n            if (len>1) appInFrame.page = parts[p++];\r\n            if (len>2) appInFrame.param = parts.slice(p++);\r\n        }\r\n    }\r\n    return appInFrame;\r\n}\r\n\r\nexport function getExHashPos():number {\r\n    let hash = document.location.hash;\r\n    if (hash !== undefined && hash.length > 0) {\r\n        let pos = hash.lastIndexOf('#tv-');\r\n        if (pos < 0) pos = hash.lastIndexOf('#tvdebug-');\r\n        return pos;\r\n    }\r\n    return -1;\r\n}\r\n\r\nexport function getExHash():string {\r\n    let pos = getExHashPos();\r\n    if (pos < 0) return undefined;\r\n    return document.location.hash.substring(pos);\r\n}\r\n\r\nexport function appUrl(url: string, unitId: number, page?:string, param?:any[]):{url:string; hash:string} {\r\n    let u:string;\r\n    for (;;) {\r\n        u = uid();\r\n        let a = appsInFrame[u];\r\n        if (a === undefined) {\r\n            appsInFrame[u] = {hash:u, unit:unitId};\r\n            break;\r\n        }\r\n    }\r\n    url += '#tv-' + u + '-' + unitId;\r\n    if (page !== undefined) {\r\n        url += '-' + page;\r\n        if (param !== undefined) {\r\n            for (let i=0; i<param.length; i++) {\r\n                url += '-' + param[i];\r\n            }\r\n        }\r\n    }\r\n    return {url: url, hash: u};\r\n}\r\n\r\nfunction getUnit():number {\r\n    let {unit, predefinedUnit} = appInFrame;\r\n    let realUnit = unit || predefinedUnit;\r\n    if (realUnit === undefined) {\r\n        throw 'no unit defined in unit.json or not logined in';\r\n    }\r\n    return realUnit;\r\n}\r\n\r\ninterface UqTokenAction {\r\n    resolve: (value?: UqToken | PromiseLike<UqToken>) => void;\r\n    reject: (reason?: any) => void;\r\n}\r\nconst uqTokenActions:{[uq:string]: UqTokenAction} = {};\r\nexport async function buildAppUq(uq:string, uqOwner:string, uqName:string):Promise<void> {\r\n    if (!isBridged()) {\r\n        let unit = getUnit();\r\n        let uqToken = await uqTokenApi.uq({unit:unit, uqOwner:uqOwner, uqName:uqName});\r\n        if (uqToken.token === undefined) uqToken.token = centerToken;\r\n        let {db, url, urlTest} = uqToken;\r\n        let realUrl = host.getUrlOrTest(db, url, urlTest);\r\n        console.log('realUrl: %s', realUrl);\r\n        uqToken.url = realUrl;\r\n        uqTokens[uq] = uqToken;\r\n        return uqToken;\r\n    }\r\n    console.log(\"**** before buildAppUq ****\", appInFrame);\r\n    let bp = uqTokenActions[uq];\r\n    if (bp !== undefined) return;\r\n    return new Promise<void>((resolve, reject) => {\r\n        uqTokenActions[uq] = {\r\n            resolve: async (at:any) => {\r\n                let {db, url, token} = await at;\r\n                uqTokens[uq] = {\r\n                    name: uq,\r\n                    db: db,\r\n                    url: url,\r\n                    token: token,\r\n                };\r\n                uqTokenActions[uq] = undefined;\r\n                console.log(\"**** after buildAppUq ****\", appInFrame);\r\n                resolve();\r\n            },\r\n            reject: reject,\r\n        };\r\n        (window.opener || window.parent).postMessage({\r\n            type: 'app-api',\r\n            apiName: uq,\r\n            hash: appInFrame.hash,\r\n        }, \"*\");\r\n    });\r\n}\r\n\r\nexport function appUq(uq:string):UqToken {\r\n    let uts = uqTokens;\r\n    return uts[uq];\r\n}\r\n/*\r\nexport async function appUq(uq:string, uqOwner:string, uqName:string): Promise<UqToken> {\r\n    let uqToken = uqTokens[uq];\r\n    if (uqToken !== undefined) return uqToken;\r\n    if (!isBridged()) {\r\n        let unit = getUnit();\r\n        uqToken = await uqTokenApi.uq({unit:unit, uqOwner:uqOwner, uqName:uqName});\r\n        if (uqToken.token === undefined) uqToken.token = centerToken;\r\n        let {url, urlDebug} = uqToken;\r\n        let realUrl = host.getUrlOrDebug(url, urlDebug);\r\n        console.log('realUrl: %s', realUrl);\r\n        uqToken.url = realUrl;\r\n        uqTokens[uq] = uqToken;\r\n        return uqToken;\r\n    }\r\n    console.log(\"appApi parent send: %s\", appInFrame.hash);\r\n    uqToken = {\r\n        name: uq,\r\n        url: undefined,\r\n        urlDebug: undefined,\r\n        token: undefined,\r\n        resolve: undefined,\r\n        reject: undefined,\r\n    };\r\n    uqTokens[uq] = uqToken;\r\n    return new Promise<UqToken>((resolve, reject) => {\r\n        uqToken.resolve = async (at) => {\r\n            let a = await at;\r\n            console.log('return from parent window: %s', JSON.stringify(a));\r\n            uqToken.url = a.url;\r\n            uqToken.urlDebug = a.urlDebug;\r\n            uqToken.token = a.token;\r\n            resolve(uqToken);\r\n        }\r\n        uqToken.reject = reject;\r\n        (window.opener || window.parent).postMessage({\r\n            type: 'app-api',\r\n            apiName: uq,\r\n            hash: appInFrame.hash,\r\n        }, \"*\");\r\n    });\r\n}\r\n*/\r\ninterface BridgeCenterApi {\r\n    id: string;\r\n    resolve: (value?:any)=>any;\r\n    reject: (reason?:any)=>void;\r\n}\r\nconst brideCenterApis:{[id:string]: BridgeCenterApi} = {};\r\nexport async function bridgeCenterApi(url:string, method:string, body:any):Promise<any> {\r\n    console.log('bridgeCenterApi: url=%s, method=%s', url, method);\r\n    return await new Promise<any>(async (resolve, reject) => {\r\n        let callId:string;\r\n        for (;;) {\r\n            callId = uid();\r\n            let bca = brideCenterApis[callId];\r\n            if (bca === undefined) {\r\n                brideCenterApis[callId] = {\r\n                    id: callId,\r\n                    resolve: resolve,\r\n                    reject: reject,\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        (window.opener || window.parent).postMessage({\r\n            type: 'center-api',\r\n            callId: callId,\r\n            url: url,\r\n            method: method,\r\n            body: body\r\n        }, '*');\r\n    });\r\n}\r\n\r\nasync function callCenterApiFromMessage(from:Window, message):Promise<void> {\r\n    let {callId, url, method, body} = message;\r\n    let result = await callCenterapi.directCall(url, method, body);\r\n    from.postMessage({\r\n        type: 'center-api-return',\r\n        callId: callId,\r\n        result: result,\r\n    }, '*');\r\n}\r\n\r\nfunction bridgeCenterApiReturn(message:any) {\r\n    let {callId, result} = message;\r\n    let bca = brideCenterApis[callId];\r\n    if (bca === undefined) return;\r\n    brideCenterApis[callId] = undefined;\r\n    bca.resolve(result);\r\n}\r\n","import * as React from 'react';\r\nimport {IComputedValue} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash';\r\nimport {PageHeader} from './pageHeader';\r\n\r\nexport interface ScrollProps {\r\n    onScroll?: (e:any) => void;\r\n    onScrollTop?: () => void;\r\n    onScrollBottom?: () => void;\r\n}\r\ninterface ScrollViewProps extends ScrollProps {\r\n    className?: string;\r\n}\r\nconst scrollTimeGap = 100;\r\nclass ScrollView extends React.Component<ScrollViewProps, null> {\r\n    private bottomTime:number = 0;\r\n    private topTime:number = 0;\r\n\r\n    private onScroll = async (e) => {\r\n        let {onScroll, onScrollTop, onScrollBottom} = this.props;\r\n        if (onScroll) this.props.onScroll(e);\r\n        let el = e.target as HTMLBaseElement;\r\n        if (el.scrollTop < 30) {\r\n            //this.eachChild(this, 'top');\r\n            if (onScrollTop !== undefined) {\r\n                let topTime = new Date().getTime();\r\n                if (topTime-this.topTime > scrollTimeGap) {\r\n                    this.topTime = topTime;\r\n                    onScrollTop();\r\n                }\r\n            }\r\n        }\r\n        if (el.scrollTop + el.offsetHeight > el.scrollHeight - 30) {\r\n            //this.eachChild(this, 'bottom');\r\n            if (onScrollBottom !== undefined) {\r\n                let bottomTime = new Date().getTime();\r\n                if (bottomTime - this.bottomTime > scrollTimeGap) {\r\n                    this.bottomTime = bottomTime;\r\n                    onScrollBottom();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    private eachChild(c:any, direct:'top'|'bottom') {\r\n        let { props } = c;\r\n        if (props === undefined)\r\n            return;\r\n        let { children } = props;\r\n        if (children === undefined)\r\n            return;\r\n        React.Children.forEach(children, (child, index) => {\r\n            let {_$scroll} = child as any;\r\n            if (_$scroll) _$scroll(direct);\r\n            console.log(child.toString());\r\n            this.eachChild(child, direct);\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <main className={this.props.className} onScroll={this.onScroll}>\r\n                {this.props.children}\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport interface Tab extends ScrollProps {\r\n    title: string;\r\n    icon?: string;\r\n    content?: JSX.Element | (()=>JSX.Element);\r\n    header?: string;\r\n    isSelected?: boolean;\r\n    redDot?: IComputedValue<number>;\r\n    load?: () => Promise<void>;\r\n}\r\nexport interface TabState extends Tab {\r\n    isMounted?: boolean;\r\n}\r\nexport interface PageProps extends ScrollProps {\r\n    back?: 'close' | 'back' | 'none';\r\n    header?: boolean | string | JSX.Element;\r\n    keepHeader?: boolean;\r\n    right?: JSX.Element;\r\n    sideBar?: JSX.Element;\r\n    footer?: JSX.Element;\r\n    tabs?: Tab[];\r\n    tabPosition?: 'top' | 'bottom';\r\n    logout?: boolean | (()=>Promise<void>);\r\n    headerClassName?: string;\r\n}\r\nexport interface PageState {\r\n    cur?: Tab;\r\n    tabs?: TabState[];\r\n}\r\n\r\n@observer\r\nexport class Page extends React.Component<PageProps, PageState> {\r\n    private tabs:TabState[];\r\n    constructor(props: PageProps) {\r\n        super(props);\r\n        let {tabs} = props;\r\n        if (tabs === undefined || tabs.length === 0) return;\r\n        this.tabs = tabs;\r\n        let cur:Tab;\r\n        let tabStates:Tab[] = [];\r\n        for (let tab of tabs) {\r\n            let t:TabState = _.clone(tab);\r\n            if (cur === undefined) {\r\n                if (t.isSelected === true)\r\n                    cur = t;\r\n                else\r\n                    t.isSelected = false;\r\n            }\r\n            else {\r\n                t.isSelected = false;\r\n            }\r\n            t.isMounted = false;\r\n            tabStates.push(t);\r\n        }\r\n        this.state = {\r\n            cur: cur,\r\n            tabs: tabStates,\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (this.tabs === undefined) return;\r\n        let t0 = this.state.tabs.find(v => v.isSelected === true);\r\n        if (t0 === undefined) {\r\n            t0 = this.state.tabs[0];\r\n            if (t0 === undefined) return;\r\n        }\r\n        await t0.load && await t0.load();\r\n        //await this.onTabClick(t0);\r\n    }\r\n\r\n    private async onTabClick(tab: TabState) {\r\n        if (tab.isSelected === true) return;\r\n        let cur:TabState;\r\n        let tabs = this.state.tabs;\r\n        for (let t of tabs) {\r\n            if (t === tab) {\r\n                t.isSelected = true;\r\n                cur = t;\r\n            }\r\n            else\r\n                t.isSelected = false;\r\n        }\r\n        if (cur.isMounted !== true) {\r\n            let {load} = cur;\r\n            if (load !== undefined) {\r\n                await load();\r\n            }\r\n        }\r\n        this.setState({\r\n            cur: cur,\r\n            tabs: tabs\r\n        });\r\n    }\r\n\r\n    private onTouchStart(evt: React.TouchEvent<HTMLElement>) {\r\n    }\r\n\r\n    private renderTabs(footer: JSX.Element) {\r\n        const {header, back, right, keepHeader, headerClassName, tabPosition} = this.props;\r\n        let cur = this.state.cur;\r\n        let tabs = <div>{\r\n                this.state.tabs.map((tab, index) => {\r\n                    const {icon, isSelected, title, redDot} = tab;\r\n                    let img:any, redDotView:any, cn:any;\r\n                    if (icon !== undefined) img = <img src={icon} />;\r\n                    if (redDot !== undefined) {\r\n                        let v = redDot.get();\r\n                        if (v < 0) {\r\n                            cn = classNames('red-dot');\r\n                            redDotView = <u />;\r\n                        }\r\n                        else if (v > 0) {\r\n                            cn = classNames('red-dot', 'num');\r\n                            redDotView = <u>{v}</u>;\r\n                        }\r\n                    }\r\n                    return <div key={index}\r\n                        className= {classNames('va-tab', {cur: isSelected})}\r\n                        onClick={() => this.onTabClick(tab)}>\r\n                        {img}<div className={cn}>{title}{redDotView}</div>\r\n                    </div>\r\n                })\r\n            }</div>;\r\n        let pageHeader = header !== false &&\r\n            <PageHeader \r\n                back={back} \r\n                center={keepHeader===true? (header as string) : (cur && (cur.header || cur.title))}\r\n                right={right}\r\n                className={headerClassName}\r\n            />;\r\n\r\n        return <article className='page-container'>\r\n            {pageHeader}\r\n            {tabPosition==='top' && tabs}\r\n            <section className=\"position-relative\">\r\n            {this.props.sideBar}\r\n            {\r\n                this.state.tabs.map((tab, index) => {\r\n                    let {isSelected, isMounted, content} = tab;\r\n                    if (isSelected === true || isMounted === true) {\r\n                        tab.isMounted = true;\r\n                        return <ScrollView key={index}\r\n                            className={classNames({invisible: isSelected===false})}\r\n                            onScroll={tab.onScroll}\r\n                            onScrollTop={tab.onScrollTop}\r\n                            onScrollBottom={tab.onScrollBottom}\r\n                        >\r\n                            {(typeof content)==='function'? (content as ()=>JSX.Element)():content}\r\n                        </ScrollView>;\r\n                    }\r\n                })\r\n            }\r\n            </section>\r\n            {tabPosition!=='top' && tabs}\r\n            {footer}\r\n        </article>;\r\n    }\r\n    private renderSingle(footer: JSX.Element) {\r\n        const {back, header, right, onScroll, onScrollTop, onScrollBottom, children, headerClassName} = this.props;\r\n        let pageHeader = header !== false && <PageHeader \r\n            back={back} \r\n            center={header as any}\r\n            right={right}\r\n            logout={this.props.logout}\r\n            className={headerClassName}\r\n        />;\r\n        return (\r\n            <article className='page-container' onTouchStart={this.onTouchStart}>\r\n                {pageHeader}\r\n                <section className=\"position-relative\">\r\n                    {this.props.sideBar}\r\n                    <ScrollView\r\n                        onScroll={onScroll}\r\n                        onScrollTop={onScrollTop}\r\n                        onScrollBottom={onScrollBottom}\r\n                    >\r\n                        {children}\r\n                    </ScrollView>\r\n                </section>\r\n                {footer}\r\n            </article>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const {footer} = this.props;\r\n        let elFooter = footer !== undefined && <footer>{footer}</footer>;\r\n        if (this.tabs !== undefined)\r\n            return this.renderTabs(elFooter);\r\n        else\r\n            return this.renderSingle(elFooter);\r\n    }\r\n}\r\n","function replacer(key:string, value:any) {\r\n    let first = key.substr(0, 1);\r\n    switch (first) {\r\n        default: return value;\r\n        case '$':\r\n        case '_': return;\r\n    }\r\n}\r\n\r\nexport function jsonStringify(value:any) {\r\n    return JSON.stringify(value, replacer, ' ');\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { BoxId, Tuid } from '../uqs';\r\nimport { PureJSONContent } from '../controllers';\r\n\r\nexport type TvTemplet = (values?:any, x?:any) => JSX.Element;\r\n\r\ninterface Props {\r\n    tuidValue: number|BoxId, \r\n    ui?: TvTemplet,\r\n    x?: any,\r\n    nullUI?: ()=>JSX.Element\r\n}\r\n\r\nfunction boxIdContent(bi: number|BoxId, ui:TvTemplet, x:any) {\r\n    let logContent:any;\r\n    switch(typeof bi) {\r\n        case 'undefined': logContent = <>boxId undefined</>; break;\r\n        case 'number': logContent = <>id:{bi}</>; break;\r\n    }\r\n    if (typeof (bi as any).render !== 'function') {\r\n        if (ui === undefined) {\r\n            logContent = PureJSONContent(bi, x);\r\n        }\r\n        else {\r\n            return ui(bi, x);\r\n        }\r\n    }\r\n    if (logContent !== undefined) {\r\n        return <del className=\"text-danger\">{logContent}</del>;\r\n    }\r\n    return (bi as any).render(ui, x);\r\n    /*\r\n    let {id, _$tuid, _$com} = bi;\r\n    if (id === undefined || id === null) return;\r\n    let t:TuidBase = _$tuid;\r\n    if (t === undefined) {\r\n        if (ui !== undefined) return ui(bi, x);\r\n        return PureJSONContent(bi, x);\r\n    }\r\n    let com = ui || _$com;\r\n    if (com === undefined) {\r\n        com = bi._$com = t.getTuidContent();\r\n    }\r\n    let val = t.valueFromId(id);\r\n    if (val === undefined) {\r\n        return <>[<FA className=\"text-danger\" name=\"bug\" /> no {t.name} on id={id}]</>;\r\n    }\r\n    switch (typeof val) {\r\n        case 'number': val = {id: val}; break;\r\n    }\r\n    if (ui !== undefined) {\r\n        let ret = ui(val, x);\r\n        if (ret !== undefined) return ret;\r\n        return <>{id}</>;\r\n    }\r\n    return React.createElement(com, val);\r\n    */\r\n}\r\n\r\nconst Tv = observer(({tuidValue, ui, x, nullUI}:Props) => {\r\n    if (tuidValue === undefined) {\r\n        if (nullUI === undefined) return <>[undefined]</>;\r\n        return nullUI();\r\n    }\r\n    if (tuidValue === null) {\r\n        if (nullUI === undefined) return <>[null]</>;\r\n        return nullUI();\r\n    }\r\n    let ttv = typeof tuidValue;\r\n    switch (ttv) {\r\n        default:\r\n            if (ui === undefined)\r\n                return <>{ttv}-{tuidValue}</>;\r\n            else {\r\n                let ret = ui(tuidValue, x);\r\n                if (ret !== undefined) return ret;\r\n                return <>{tuidValue}</>;\r\n            }\r\n        case 'object':\r\n            let divObj = boxIdContent(tuidValue, ui, x);\r\n            if (divObj !== undefined) return divObj;\r\n            return nullUI === undefined? <>id null</>: nullUI();\r\n        case 'number':\r\n            return <>id...{tuidValue}</>;\r\n    }\r\n});\r\n\r\nexport const tv = (tuidValue:number|BoxId, ui?:TvTemplet, x?:any, nullUI?:()=>JSX.Element):JSX.Element => {\r\n    return <Tv tuidValue={tuidValue} ui={ui} x={x} nullUI={nullUI} />;\r\n};\r\n","export * from './jsonStringify';\r\nexport * from './tv';\r\n","const ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\nconst ID_LENGTH = 8;\r\n\r\nexport function uid():string {\r\n    let len = ALPHABET.length;\r\n    let rtn = '';\r\n    for (let i = 0; i < ID_LENGTH; i++) {\r\n        rtn += ALPHABET.charAt(Math.floor(Math.random() * len));\r\n    }\r\n    return rtn;\r\n}\r\n","import {nav} from '../ui/nav';\r\nimport {FetchError} from '../fetchError';\r\n\r\nexport interface HttpChannelUI {\r\n    startWait():void;\r\n    endWait():void;\r\n    showError(error:FetchError):Promise<void>;\r\n}\r\n\r\nexport class HttpChannelNavUI implements HttpChannelUI {\r\n    startWait() {\r\n        nav.startWait();\r\n    }\r\n    endWait() {\r\n        nav.endWait();\r\n    }\r\n    async showError(error:FetchError):Promise<void> {\r\n        nav.endWait();\r\n        /*\r\n        if (error.name === 'SyntaxError') {\r\n            error = {\r\n                name: error.name,\r\n                message: error.message,\r\n            }\r\n        }*/\r\n        await nav.onError(error);\r\n    }\r\n}\r\n\r\n","import _ from 'lodash';\r\nimport {HttpChannel} from './httpChannel';\r\nimport {HttpChannelNavUI} from './httpChannelUI';\r\nimport {appUq, logoutUqTokens, buildAppUq} from './appBridge';\r\nimport {ApiBase} from './apiBase';\r\nimport { host } from './host';\r\nimport { nav } from '../ui';\r\n\r\nlet channelUIs:{[name:string]: HttpChannel} = {};\r\nlet channelNoUIs:{[name:string]: HttpChannel} = {};\r\n\r\nexport function logoutApis() {\r\n    channelUIs = {};\r\n    channelNoUIs = {};\r\n    logoutUnitxApis();\r\n    logoutUqTokens();\r\n}\r\n\r\ninterface UqLocal {\r\n    value: any;\r\n    tick?: number;\r\n    isNet?: boolean;\r\n}\r\ninterface UqLocals {\r\n    user: number;\r\n    unit: number;\r\n    uqs: {[uq:string]: UqLocal};\r\n}\r\n\r\nconst uqLocalEntities = 'uqLocalEntities';\r\nclass CacheUqLocals {\r\n    private local:UqLocals;\r\n\r\n    async loadAccess(uqApi: UqApi):Promise<any> {\r\n        try {\r\n            let {uqOwner, uqName} = uqApi;\r\n            if (this.local === undefined) {\r\n                let ls = localStorage.getItem(uqLocalEntities);\r\n                if (ls !== null) {\r\n                    this.local = JSON.parse(ls);\r\n                }\r\n            }\r\n            if (this.local !== undefined) {\r\n                let {user, uqs} = this.local;\r\n                if (user !== loginedUserId || uqs === undefined) {\r\n                    this.local = undefined;\r\n                }\r\n                else {\r\n                    for (let i in uqs) {\r\n                        let ul = uqs[i];\r\n                        ul.isNet = undefined;\r\n                    }\r\n                }\r\n            }\r\n            if (this.local === undefined) {\r\n                this.local = {\r\n                    user: loginedUserId,\r\n                    unit: undefined,\r\n                    uqs: {}\r\n                };\r\n            }\r\n\r\n            let ret: any;\r\n            let un = uqOwner+'/'+uqName;\r\n            let uq = this.local.uqs[un];\r\n            if (uq !== undefined) {\r\n                let {value} = uq;\r\n                ret = value;\r\n            }\r\n            if (ret === undefined) {\r\n                ret = await uqApi.__loadAccess();\r\n                this.saveLocal(un, ret);\r\n            }\r\n            return _.cloneDeep(ret);\r\n        }\r\n        catch (err) {\r\n            this.local = undefined;\r\n            localStorage.removeItem(uqLocalEntities);\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    private saveLocal(uqName:string, accessValue: any) {\r\n        this.local.uqs[uqName] = {\r\n            value: accessValue,\r\n            isNet: true,\r\n        }\r\n        let str = JSON.stringify(this.local);\r\n        localStorage.setItem(uqLocalEntities, str);\r\n    }\r\n\r\n    async checkAccess(uqApi: UqApi):Promise<boolean> {\r\n        if (this.local === undefined) return false;\r\n        let {uqOwner, uqName} = uqApi;\r\n        let un = uqOwner+'/'+uqName;\r\n        let uq = this.local.uqs[un];\r\n        if (uq === undefined) return false;\r\n        let {isNet, value} = uq;\r\n        if (isNet === true) return true;\r\n        let ret = await uqApi.__loadAccess();\r\n        let isMatch = _.isMatch(value, ret);\r\n        if (isMatch === false) {\r\n            this.saveLocal(un, ret);\r\n            return false;\r\n        }\r\n        uq.isNet = true;\r\n        return true;\r\n    }\r\n}\r\n\r\nconst localUqs = new CacheUqLocals;\r\nexport class UqApi extends ApiBase {\r\n    private access:string[];\r\n    uqOwner: string;\r\n    uqName: string;\r\n    uq: string;\r\n\r\n    constructor(basePath: string, uqOwner: string, uqName: string, access:string[], showWaiting?: boolean) {\r\n        super(basePath, showWaiting);\r\n        if (uqName) {\r\n            this.uqOwner = uqOwner;\r\n            this.uqName = uqName;\r\n            this.uq = uqOwner + '/' + uqName;\r\n        }\r\n        this.access = access;\r\n        this.showWaiting = showWaiting;\r\n    }\r\n\r\n    async init() {\r\n        await buildAppUq(this.uq, this.uqOwner, this.uqName);\r\n    }\r\n\r\n    protected async getHttpChannel(): Promise<HttpChannel> {\r\n        let channels: {[name:string]: HttpChannel};\r\n        let channelUI: HttpChannelNavUI;\r\n        if (this.showWaiting === true || this.showWaiting === undefined) {\r\n            channels = channelUIs;\r\n            channelUI = new HttpChannelNavUI();\r\n        }\r\n        else {\r\n            channels = channelNoUIs;\r\n        }\r\n        let channel = channels[this.uq];\r\n        if (channel !== undefined) return channel;\r\n        let uqToken = appUq(this.uq); //, this.uqOwner, this.uqName);\r\n        if (!uqToken) debugger;\r\n        let {url, token} = uqToken;\r\n        this.token = token;\r\n        channel = new HttpChannel(false, url, token, channelUI);\r\n        return channels[this.uq] = channel;\r\n    }\r\n\r\n    async update():Promise<string> {\r\n        return await this.get('update');\r\n    }\r\n\r\n    async __loadAccess():Promise<any> {\r\n        let acc = this.access === undefined?\r\n            '' :\r\n            this.access.join('|');\r\n        let ret = await this.get('access', {acc:acc});\r\n        return ret;\r\n    }\r\n\r\n    async loadAccess():Promise<any> {\r\n        return await localUqs.loadAccess(this);\r\n    }\r\n\r\n    async loadEntities():Promise<any> {\r\n        return await this.get('entities');\r\n    }\r\n\r\n    async checkAccess():Promise<boolean> {\r\n        return await localUqs.checkAccess(this);\r\n    }\r\n\r\n    async schema(name:string):Promise<any> {\r\n        return await this.get('schema/' + name);\r\n    }\r\n\r\n    async schemas(names:string[]):Promise<any[]> {\r\n        return await this.post('schema', names);\r\n    }\r\n\r\n    async tuidGet(name:string, id:number):Promise<any> {\r\n        return await this.get('tuid/' + name + '/' + id);\r\n    }\r\n\r\n    async tuidGetAll(name:string):Promise<any[]> {\r\n        return await this.get('tuid-all/' + name + '/');\r\n    }\r\n\r\n    async tuidSave(name:string, params):Promise<any> {\r\n        return await this.post('tuid/' + name, params);\r\n    }\r\n\r\n    async tuidSearch(name:string, arr:string, owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        let ret = await this.post('tuids/' + name, {\r\n            arr: arr,\r\n            owner: owner,\r\n            key: key,\r\n            pageStart: pageStart,\r\n            pageSize: pageSize\r\n        });\r\n        return ret;\r\n    }\r\n    async tuidArrGet(name:string, arr:string, owner:number, id:number):Promise<any> {\r\n        return await this.get('tuid-arr/' + name + '/' + owner + '/' + arr + '/' + id);\r\n    }\r\n    async tuidArrGetAll(name:string, arr:string, owner:number):Promise<any[]> {\r\n        return await this.get('tuid-arr-all/' + name + '/' + owner + '/' + arr + '/');\r\n    }\r\n    async tuidArrSave(name:string, arr:string, owner:number, params):Promise<any> {\r\n        return await this.post('tuid-arr/' + name + '/' + owner + '/' + arr + '/', params);\r\n    }\r\n    async tuidArrPos(name:string, arr:string, owner:number, id:number, order:number):Promise<any> {\r\n        return await this.post('tuid-arr-pos/' + name + '/' + owner + '/' + arr + '/', {\r\n            id: id,\r\n            $order: order\r\n        });\r\n    }\r\n\r\n    async tuidIds(name:string, arr:string, ids:number[]):Promise<any[]> {\r\n        try {\r\n            let url = 'tuidids/' + name + '/';\r\n            if (arr !== undefined) url += arr;\r\n            else url += '$';\r\n            let ret = await this.post(url, ids);\r\n            return ret;\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    async sheetSave(name:string, data:object):Promise<any> {\r\n        return await this.post('sheet/' + name, data);\r\n    }\r\n\r\n    async sheetAction(name:string, data:object) {\r\n        return await this.put('sheet/' + name, data);\r\n    }\r\n\r\n    async stateSheets(name:string, data:object) {\r\n        return await this.post('sheet/' + name + '/states', data);\r\n    }\r\n\r\n    async stateSheetCount(name:string):Promise<any> {\r\n        return await this.get('sheet/' + name + '/statecount');\r\n    }\r\n\r\n    async mySheets(name:string, data:object) {\r\n        return await this.post('sheet/' + name + '/my-sheets', data);\r\n    }\r\n\r\n    async getSheet(name:string, id:number):Promise<any> {\r\n        return await this.get('sheet/' + name + '/get/' + id);\r\n    }\r\n\r\n    async sheetArchives(name:string, data:object):Promise<any> {\r\n        return await this.post('sheet/' + name + '/archives', data);\r\n    }\r\n\r\n    async sheetArchive(name:string, id:number):Promise<any> {\r\n        return await this.get('sheet/' + name + '/archive/' + id);\r\n    }\r\n\r\n    async action(name:string, data:object):Promise<any> {\r\n        return await this.post('action/' + name, data);\r\n    }\r\n\r\n    async page(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\r\n        let p:any;\r\n        switch (typeof params) {\r\n            case 'undefined': p = {key: ''}; break;\r\n            default: p = _.clone(params); break;\r\n        }\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        return await this.post('query-page/' + name, p);\r\n    }\r\n\r\n    async query(name:string, params:any):Promise<any> {\r\n        let ret = await this.post('query/' + name, params);\r\n        return ret;\r\n    }\r\n/*\r\n    async history(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\r\n        let p = _.clone(params);\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        let ret = await this.post('history/' + name, p);\r\n        return ret;\r\n    }\r\n\r\n    async book(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\r\n        let p = _.clone(params);\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        let ret = await this.post('history/' + name, p);\r\n        return ret;\r\n    }\r\n*/\r\n    async user():Promise<any> {\r\n        return await this.get('user');\r\n    }\r\n}\r\n\r\nlet channels:{[unitId:number]: HttpChannel} = {};\r\n\r\nexport function logoutUnitxApis() {\r\n    channels = {};\r\n}\r\n\r\nexport class UnitxApi extends UqApi {\r\n    private unitId:number;\r\n    constructor(unitId:number) {\r\n        super('tv/', undefined, undefined, undefined, true);\r\n        this.unitId = unitId;\r\n    }\r\n\r\n    protected async getHttpChannel(): Promise<HttpChannel> {\r\n        let channel = channels[this.unitId];\r\n        if (channel !== undefined) return channel;\r\n        return channels[this.unitId] = await this.buildChannel();\r\n    }\r\n\r\n    private async buildChannel():Promise<HttpChannel> {\r\n        let channelUI = new HttpChannelNavUI();\r\n        let centerAppApi = new CenterAppApi('tv/', undefined);\r\n        let ret = await centerAppApi.unitxUq(this.unitId);\r\n        let {token, db, url, urlTest} = ret;\r\n        let realUrl = host.getUrlOrTest(db, url, urlTest);\r\n        this.token = token;\r\n        return new HttpChannel(false, realUrl, token, channelUI);\r\n    }\r\n}\r\n\r\nlet centerHost:string;\r\n\r\nexport function setCenterUrl(url:string) {\r\n    console.log('setCenterUrl %s', url);\r\n    centerHost = url;\r\n    centerToken = undefined;\r\n    centerChannel = undefined;\r\n    centerChannelUI = undefined;\r\n}\r\n\r\nexport let centerToken:string|undefined = undefined;\r\n\r\nlet loginedUserId:number = 0;\r\nexport function setCenterToken(userId:number, t?:string) {\r\n    loginedUserId = userId;\r\n    centerToken = t;\r\n    console.log('setCenterToken %s', t);\r\n    centerChannel = undefined;\r\n    centerChannelUI = undefined;\r\n}\r\n\r\nlet centerChannelUI:HttpChannel;\r\nlet centerChannel:HttpChannel;\r\nfunction getCenterChannelUI():HttpChannel {\r\n    if (centerChannelUI !== undefined) return centerChannelUI;\r\n    return centerChannelUI = new HttpChannel(true, centerHost, centerToken, new HttpChannelNavUI());\r\n}\r\nfunction getCenterChannel():HttpChannel {\r\n    if (centerChannel !== undefined) return centerChannel;\r\n    return centerChannel = new HttpChannel(true, centerHost, centerToken);\r\n}\r\n\r\nexport abstract class CenterApiBase extends ApiBase {\r\n    constructor(path: string, showWaiting?: boolean) {\r\n        super(path, showWaiting);\r\n    }\r\n\r\n    protected async getHttpChannel(): Promise<HttpChannel> {\r\n        return (this.showWaiting === true || this.showWaiting === undefined)?\r\n            getCenterChannelUI():\r\n            getCenterChannel();\r\n    }\r\n}\r\n\r\nconst uqTokens = 'uqTokens';\r\nexport class UqTokenApi extends CenterApiBase {\r\n    private local: UqLocals;\r\n    async uq(params: {unit:number, uqOwner:string, uqName:string}):Promise<any> {\r\n        try {\r\n            let {unit:unitParam, uqOwner, uqName} = params;\r\n            if (this.local === undefined) {\r\n                let ls = localStorage.getItem(uqTokens);\r\n                if (ls !== null) {\r\n                    this.local = JSON.parse(ls);\r\n                }\r\n            }\r\n            if (this.local !== undefined) {\r\n                let {unit, user} = this.local;\r\n                if (unit !== unitParam || user !== loginedUserId) this.local = undefined;\r\n            }\r\n            if (this.local === undefined) {\r\n                this.local = {\r\n                    user: loginedUserId,\r\n                    unit: params.unit,\r\n                    uqs: {}\r\n                };\r\n            }\r\n\r\n            let un = uqOwner+'/'+uqName;\r\n            let nowTick = new Date().getTime();\r\n            let uq = this.local.uqs[un];\r\n            if (uq !== undefined) {\r\n                let {tick, value} = uq;\r\n                if (value !== undefined && (nowTick - tick) < 24*3600*1000) {\r\n                    return _.clone(value);\r\n                }\r\n            }\r\n            let appUqParams:any = _.clone(params);\r\n            appUqParams.testing = host.testing;\r\n            let ret = await this.get('app-uq', appUqParams);\r\n            if (ret === undefined) {\r\n                let {unit, uqOwner, uqName} = params;\r\n                let err = `center get app-uq(unit=${unit}, '${uqOwner}/${uqName}') - not exists or no unit-service`;\r\n                throw err;\r\n            }\r\n\r\n            this.local.uqs[un] = {\r\n                tick: nowTick,\r\n                value: ret,\r\n            }\r\n            localStorage.setItem(uqTokens, JSON.stringify(this.local));\r\n            return _.clone(ret);\r\n        }\r\n        catch (err) {\r\n            this.local = undefined;\r\n            localStorage.removeItem(uqTokens);\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport const uqTokenApi = new UqTokenApi('tv/tie/', undefined);\r\n\r\nexport class CallCenterApi extends CenterApiBase {\r\n    directCall(url:string, method:string, body:any):Promise<any> {\r\n        return this.call(url, method, body);\r\n    }\r\n}\r\nexport const callCenterapi = new CallCenterApi('', undefined);\r\n\r\nexport interface UqAppData {\r\n    id: number;\r\n    uqs: UqData[];\r\n}\r\n\r\nexport interface UqData {\r\n    id: number;\r\n    uqOwner: string;\r\n    uqName: string;\r\n    access: string;\r\n}\r\n\r\nexport interface UqServiceData {\r\n    id: number;\r\n    db: string;\r\n    url: string;\r\n    urlTest: string;\r\n    token: string;\r\n}\r\n\r\nconst appUqs = 'appUqs';\r\n\r\nexport class CenterAppApi extends CenterApiBase {\r\n    private cachedUqs: UqAppData;\r\n    async uqs(appOwner:string, appName:string):Promise<UqAppData> {\r\n        let ret:any;\r\n        let ls = localStorage.getItem(appUqs);\r\n        if (ls !== null) {\r\n            let rLs = JSON.parse(ls);\r\n            let {appOwner:rAppOwner, appName:rAppName, value} = rLs;\r\n            if (appOwner === rAppOwner && appName === rAppName) ret = value;\r\n        }\r\n        if (ret === undefined) {\r\n            ret = await this.uqsPure(appOwner, appName);\r\n            let obj = {\r\n                appOwner:appOwner, \r\n                appName:appName, \r\n                value: ret,\r\n            }\r\n            localStorage.setItem(appUqs, JSON.stringify(obj));\r\n        }\r\n        return this.cachedUqs = _.cloneDeep(ret);\r\n    }\r\n    private async uqsPure(appOwner:string, appName:string):Promise<UqAppData> {\r\n        return await this.get('tie/app-uqs', {appOwner:appOwner, appName:appName});\r\n    }\r\n    async checkUqs(appOwner:string, appName:string):Promise<boolean> {\r\n        let ret = await this.uqsPure(appOwner, appName);\r\n        let {id:cachedId, uqs:cachedUqs} = this.cachedUqs;\r\n        let {id:retId, uqs:retUqs} = ret;\r\n        if (cachedId !== retId) return false;\r\n        if (cachedUqs.length !== retUqs.length) return false;\r\n        let len = cachedUqs.length;\r\n        for (let i=0; i<len; i++) {\r\n            if (_.isMatch(cachedUqs[i], retUqs[i]) === false) return false;\r\n        }\r\n        return true;\r\n    }\r\n    async unitxUq(unit:number):Promise<UqServiceData> {\r\n        return await this.get('tie/unitx-uq', {unit:unit});\r\n    }\r\n    async changePassword(param: {orgPassword:string, newPassword:string}) {\r\n        return await this.post('tie/reset-password', param);\r\n    }\r\n}\r\n\r\nexport async function loadAppUqs(appOwner:string, appName:string): Promise<UqAppData> {\r\n    let centerAppApi = new CenterAppApi('tv/', undefined);\r\n    //let unit = meInFrame.unit;\r\n    let ret = await centerAppApi.uqs(appOwner, appName);\r\n    centerAppApi.checkUqs(appOwner, appName).then(v => {\r\n        if (v === false) {\r\n            localStorage.removeItem(appUqs);\r\n            nav.start();\r\n        }\r\n    });\r\n    return ret;\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Controller } from '../../../ui';\r\n\r\nexport abstract class Link {\r\n    abstract onClick: () => void;\r\n    abstract render(className?:string):JSX.Element;\r\n}\r\n\r\nexport class CLink extends Link {\r\n    private controller: Controller;\r\n    protected icon:string|JSX.Element;\r\n    protected label:string|JSX.Element;\r\n\r\n    constructor(controller:Controller) {\r\n        super();\r\n        this.controller = controller;\r\n        this.icon = controller.icon;\r\n        this.label = controller.label;\r\n    }\r\n\r\n    onClick = async () => {\r\n        await this.controller.start();\r\n    }\r\n\r\n    render(className?:string) {\r\n        return <div\r\n            className={classNames('px-3', 'py-2', 'align-items-center', 'cursor-pointer', className)}\r\n            onClick={this.onClick}>\r\n            {this.icon} &nbsp; {this.label}\r\n        </div>;\r\n        //return React.createElement(this.view, className);\r\n    }\r\n}\r\n","export * from './cLink';\r\n","\r\nlet subAppWindow:Window;\r\nfunction postWsToSubApp(msg:any) {\r\n    if (subAppWindow === undefined) return;\r\n    subAppWindow.postMessage({\r\n        type: 'ws',\r\n        msg: msg\r\n    }, '*');\r\n}\r\n\r\nexport function setSubAppWindow(win:Window) {\r\n    subAppWindow = win;\r\n}\r\n\r\nexport function postWsToTop(msg:any) {\r\n    window.top.postMessage({\r\n        type: 'ws',\r\n        msg: msg\r\n    }, '*');\r\n}\r\n\r\nexport abstract class WsBase {\r\n    wsBaseId:string;\r\n    private handlerSeed = 1;\r\n    private anyHandlers:{[id:number]:(msg:any)=>Promise<void>} = {};\r\n    private msgHandlers:{[id:number]:{type:string, handler:(msg:any)=>Promise<void>}} = {};\r\n    onWsReceiveAny(handler:(msg:any)=>Promise<void>):number {\r\n        let seed = this.handlerSeed++;\r\n        this.anyHandlers[seed] = handler;\r\n        return seed;\r\n    }\r\n    onWsReceive(type:string, handler:(msg:any)=>Promise<void>):number {\r\n        let seed = this.handlerSeed++;\r\n        this.msgHandlers[seed] = {type:type, handler: handler};\r\n        return seed;\r\n    }\r\n    endWsReceive(handlerId:number) {\r\n        delete this.anyHandlers[handlerId];\r\n        delete this.msgHandlers[handlerId];\r\n    }\r\n    async receive(msg:any) {\r\n        let {$type} = msg;\r\n        for (let i in this.anyHandlers) {\r\n            await this.anyHandlers[i](msg);\r\n        }\r\n        for (let i in this.msgHandlers) {\r\n            let {type, handler} = this.msgHandlers[i];\r\n            if (type !== $type) continue;\r\n            await handler(msg);\r\n        }\r\n    }\r\n}\r\n\r\nlet wsBaseSeed = 1;\r\nexport class WsBridge extends WsBase {\r\n    wsBaseId:string = 'WsBridge seed ' + wsBaseSeed++;\r\n}\r\n\r\nexport const wsBridge = new WsBridge();\r\n\r\nexport class WSChannel extends WsBase {\r\n    wsBaseId:string = 'WSChannel seed ' + wsBaseSeed++;\r\n    static centerToken:string;\r\n    private wsHost: string;\r\n    private token: string;\r\n    private ws: WebSocket;\r\n\r\n    constructor(wsHost: string, token: string) {\r\n        super();\r\n        this.wsHost = wsHost;\r\n        this.token = token;\r\n    }\r\n\r\n    static setCenterToken(token?: string) {\r\n        WSChannel.centerToken = token;\r\n    }\r\n    \r\n    connect():Promise<void> {\r\n        //this.wsHost = wsHost;\r\n        //this.token = token || WSChannel.centerToken;\r\n        if (this.ws !== undefined) return;\r\n        let that = this;\r\n        return new Promise((resolve, reject) => {\r\n            let ws = new WebSocket(this.wsHost, this.token || WSChannel.centerToken);\r\n            console.log('connect webSocket %s', this.wsHost);\r\n            ws.onopen = (ev) => {\r\n                console.log('webSocket connected %s', this.wsHost);\r\n                that.ws = ws;\r\n                resolve();\r\n            };\r\n            ws.onerror = (ev) => {\r\n                reject('webSocket can\\'t open!');\r\n            };\r\n            ws.onmessage = async (msg) => await that.wsMessage(msg);\r\n            ws.onclose = (ev) => {\r\n                that.ws = undefined;\r\n                console.log('webSocket closed!');\r\n            }\r\n        });\r\n    }\r\n    close() {\r\n        if (this.ws !== undefined) {\r\n            this.ws.close();\r\n            this.ws = undefined;\r\n        }\r\n    }\r\n    private async wsMessage(event:any):Promise<void> {\r\n        try {\r\n            console.log('websocket message: %s', event.data);\r\n            let msg = JSON.parse(event.data);\r\n            postWsToSubApp(msg);\r\n            await this.receive(msg);\r\n        }\r\n        catch (err) {\r\n            console.log('ws msg error: ', err);\r\n        }\r\n    }\r\n    sendWs(msg:any) {\r\n        let netThis = this;\r\n        this.connect().then(() => {\r\n            netThis.ws.send(msg);\r\n        });\r\n    }\r\n}\r\n","export const isDevelopment = process.env.NODE_ENV === 'development';\r\n\r\nconst centerHost = process.env['REACT_APP_CENTER_HOST'];\r\nconst centerDebugHost = 'localhost:3000'; //'192.168.86.64';\r\nconst resHost = process.env['REACT_APP_RES_HOST'] || centerHost;\r\nconst resDebugHost = 'localhost:3015'; //'192.168.86.63';\r\nconst uqDebugHost = 'localhost:3015'; //'192.168.86.63';\r\nconst uqDebugBuilderHost = 'localhost:3009';\r\ninterface HostValue {\r\n    value: string;\r\n    local: boolean;\r\n}\r\nconst hosts:{[name:string]:HostValue} = {\r\n    centerhost: {\r\n        value: process.env['REACT_APP_CENTER_DEBUG_HOST'] || centerDebugHost, \r\n        local: false\r\n    },\r\n    reshost: {\r\n        value: process.env['REACT_APP_RES_DEBUG_HOST'] || resDebugHost,\r\n        local: false\r\n    },\r\n    uqhost: {\r\n        value: process.env['REACT_APP_UQ_DEBUG_HOST'] || uqDebugHost, \r\n        local: false\r\n    },\r\n    unitxhost: {\r\n        value: process.env['REACT_APP_UQ_DEBUG_HOST'] || uqDebugHost, \r\n        local: false\r\n    },\r\n    \"uq-build\": {\r\n        value: process.env['REACT_APP_UQ_DEBUG_BUILDER_HOST'] || uqDebugBuilderHost, \r\n        local: false\r\n    }\r\n}\r\n\r\nfunction centerUrlFromHost(host:string) {\r\n    if (host.startsWith('https://') === true) {\r\n        if (host.endsWith('/')) return host;\r\n        return host + '/';\r\n    }\r\n    return `http://${host}/`;\r\n}\r\nfunction centerWsFromHost(host:string) {\r\n    let https = 'https://';\r\n    if (host.startsWith(https) === true) {\r\n        host = host.substr(https.length);\r\n        if (host.endsWith('/') === true) host = host.substr(0, host.length-1);\r\n        return 'wss://' + host + '/tv/';\r\n    }\r\n    return `ws://${host}/tv/`\r\n}\r\n\r\nconst fetchOptions = {\r\n    method: \"GET\",\r\n    mode: \"no-cors\", // no-cors, cors, *same-origin\r\n    headers: {\r\n        \"Content-Type\": \"text/plain\"\r\n    },\r\n};\r\n\r\nclass Host {\r\n    testing: boolean;\r\n    url: string;\r\n    ws: string;\r\n    resHost: string;\r\n\r\n    async start(testing:boolean) {\r\n        this.testing = testing;\r\n        if (isDevelopment === true) {\r\n            await this.tryLocal();\r\n        }\r\n        let host = this.getCenterHost();\r\n        this.url = centerUrlFromHost(host);\r\n        this.ws = centerWsFromHost(host);\r\n        this.resHost = this.getResHost();\r\n    }\r\n\r\n    private debugHostUrl(host:string) {return `http://${host}/hello`}\r\n    private async tryLocal() {\r\n        let promises:PromiseLike<any>[] = [];\r\n        let hostArr:string[] = [];\r\n        for (let i in hosts) {\r\n            let hostValue = hosts[i];\r\n            let {value} = hostValue;\r\n            if (hostArr.findIndex(v => v === value) < 0) hostArr.push(value);\r\n        }\r\n\r\n        for (let host of hostArr) {\r\n            let fetchUrl = this.debugHostUrl(host);\r\n            promises.push(localCheck(fetchUrl));\r\n        }\r\n        let results = await Promise.all(promises);\r\n        let len = hostArr.length;\r\n        for (let i=0; i<len; i++) {\r\n            let local = results[i];\r\n            let host = hostArr[i];\r\n            for (let j in hosts) {\r\n                let hostValue = hosts[j];\r\n                if (hostValue.value === host) {\r\n                    hostValue.local = local;\r\n                }\r\n            }\r\n        }\r\n        /*\r\n        let p = 0;\r\n        for (let i in hosts) {\r\n            let hostValue = hosts[i];\r\n            hostValue.local = results[p];\r\n            ++p;\r\n        }\r\n        */\r\n    }\r\n\r\n    private getCenterHost():string {\r\n        let {value, local} = hosts.centerhost;\r\n        let hash = document.location.hash;\r\n        if (hash.includes('sheet_debug') === true) {\r\n            return value;\r\n        }\r\n        if (isDevelopment === true) {\r\n            if (local === true) return value;\r\n        }\r\n        return centerHost;\r\n    }\r\n\r\n    private getResHost():string {\r\n        let {value, local} = hosts.reshost;\r\n        let hash = document.location.hash;\r\n        if (hash.includes('sheet_debug') === true) {\r\n            return value;\r\n        }\r\n        if (isDevelopment === true) {\r\n            if (local === true) return value;\r\n        }\r\n        return resHost;\r\n    }\r\n\r\n    getUrlOrDebug(url:string, debugHost:string = 'uqhost'):string {\r\n        if (isDevelopment === false) return url;\r\n        let host = hosts[debugHost];\r\n        if (host === undefined) return url;\r\n        let {value, local} = host;\r\n        if (local === false) return url;\r\n        return `http://${value}/`;\r\n    }\r\n    getUrlOrTest(db:string, url:string, urlTest:string):string {\r\n        let path:string;\r\n        if (this.testing === true) {\r\n            if (urlTest !== '-') url = urlTest;\r\n            path = 'uq/test/' + db + '/';\r\n        }\r\n        else {\r\n            path = 'uq/prod/' + db + '/';\r\n        }\r\n        url = this.getUrlOrDebug(url);\r\n        return url + path;\r\n    }\r\n\r\n    async localCheck(urlDebug: string):Promise<boolean> {\r\n        return await localCheck(urlDebug);\r\n    }\r\n}\r\n\r\nexport const host:Host = new Host();\r\n\r\n// 因为测试的都是局域网服务器，甚至本机服务器，所以一秒足够了\r\n// 网上找了上面的fetch timeout代码。\r\n// 尽管timeout了，fetch仍然继续，没有cancel\r\n\r\n// 实际上，一秒钟不够。web服务器会自动停。重启的时候，可能会比较长时间。也许两秒甚至更多。\r\n//const timeout = 2000;\r\nconst timeout = 200;\r\n\r\nfunction fetchLocalCheck(url:string):Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      fetch(url, fetchOptions as any)\r\n      .then(v => {\r\n          v.text().then(resolve).catch(reject);\r\n      })\r\n      .catch(reject);\r\n      const e = new Error(\"Connection timed out\");\r\n      setTimeout(reject, timeout, e);\r\n    });\r\n}\r\n\r\nasync function localCheck(url:string):Promise<boolean> {\r\n    try {\r\n        await fetchLocalCheck(url);\r\n        return true;\r\n    }\r\n    catch (err) {\r\n        return false;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { nav } from './nav';\r\n\r\nexport interface ImageProps {\r\n    src: string;\r\n    className?: string;\r\n    style?: React.CSSProperties;\r\n    altImage?: string;\r\n}\r\n\r\nexport function Image(props: ImageProps) {\r\n    let {className, style, src, altImage} = props;\r\n    if (!src) {\r\n        return <div className={classNames(className, 'image-none')} style={style}>\r\n            <i className=\"fa fa-file-o\" />\r\n        </div>;\r\n    }\r\n    if (src.startsWith(':') === true) {\r\n        src = nav.resUrl + src.substr(1);\r\n    }\r\n    return <img src={src} className={className} \r\n        style={style}\r\n        onError={evt=>evt.currentTarget.src=altImage} />;\r\n}\r\n","export * from './CApp';\r\nexport * from './startApp';\r\nexport * from './cUq';\r\nexport * from './action';\r\nexport * from './tuid';\r\nexport * from './sheet';\r\nexport * from './query';\r\nexport * from './map';\r\nexport * from './history';\r\nexport * from './pending';\r\nexport * from './form/viewModel';\r\nexport * from './form';\r\nexport * from './formUI';\r\nexport * from './ControllerUq';\r\nexport * from './CVEntity';\r\nexport * from './link';\r\nexport * from './icons';\r\n","import {observable, IObservableArray, computed} from 'mobx';\r\nimport {uid} from './uid';\r\n\r\nexport abstract class PageItems<T> {\r\n    constructor(itemObservable:boolean = false) {\r\n        this._items = observable.array<T>([], {deep:itemObservable});\r\n    }\r\n    private isFirst: boolean = true;\r\n    @observable loading: boolean = false;\r\n    @observable private beforeLoad: boolean = true;\r\n    @observable protected loaded: boolean = false;\r\n    protected _items:IObservableArray<T>;\r\n    @observable allLoaded: boolean = false;\r\n    @computed get items():IObservableArray<T> {\r\n        if (this.beforeLoad === true) return null;\r\n        if (this.loaded === false) return undefined;\r\n        return this._items;\r\n    }\r\n\r\n    @observable topDiv:string;\r\n    @observable bottomDiv:string;\r\n    scrollToTop() {\r\n        this.topDiv = '$$'+uid();\r\n    }\r\n    scrollToBottom() {\r\n        this.bottomDiv = '$$'+uid();\r\n    }\r\n\r\n    protected param: any;\r\n    protected firstSize = 100;\r\n    protected pageStart = undefined;\r\n    protected pageSize = 30;\r\n    protected appendPosition:'head'|'tail' = 'tail';\r\n\r\n    protected abstract async load(param:any, pageStart:any, pageSize:number):Promise<T[]>;\r\n    protected abstract setPageStart(item:T);\r\n\r\n    reset() {\r\n        this.isFirst = true;\r\n        this.beforeLoad = true;\r\n        this.loaded = false;\r\n        this.param = undefined;\r\n        this.allLoaded = false;\r\n        this._items.clear();\r\n        this.setPageStart(undefined);\r\n    }\r\n\r\n    append(item:T) {\r\n        if (this.appendPosition === 'tail')\r\n            this._items.unshift(item);\r\n        else\r\n            this._items.push(item);\r\n    }\r\n\r\n    async first(param:any):Promise<void> {\r\n        this.reset();\r\n        this.beforeLoad = false;\r\n        this.param = param;\r\n        await this.more();        \r\n    }\r\n\r\n    async more():Promise<void> {\r\n        if (this.allLoaded === true) return;\r\n        if (this.loading === true) return;\r\n        this.loading = true;\r\n        let pageSize = this.pageSize + 1;\r\n        if (this.isFirst === true) {\r\n            if (this.firstSize > this.pageSize) pageSize = this.firstSize+1;\r\n        }\r\n        let ret = await this.load(\r\n                this.param, \r\n                this.pageStart,\r\n                pageSize);\r\n        this.loading = false;\r\n        this.loaded = true;\r\n        let len = ret.length;\r\n        if (this.isFirst===true && len>this.firstSize ||\r\n            this.isFirst===false && len>this.pageSize)\r\n        {\r\n            this.allLoaded = false;\r\n            --len;\r\n            ret.splice(len, 1);\r\n        }\r\n        else {\r\n            this.allLoaded = true;\r\n        }\r\n        if (len === 0) {\r\n            this._items.clear();\r\n            return;\r\n        }\r\n        this.setPageStart(ret[len-1]);\r\n        if (this.appendPosition === 'tail')\r\n            this._items.push(...ret);\r\n        else\r\n            this._items.unshift(...ret.reverse());\r\n        this.isFirst = false;\r\n    }\r\n}\r\n","import { Uq, Field, ArrFields, FieldMap } from './uq';\r\nimport { Tuid } from './tuid';\r\nimport { UqApi } from '../../net';\r\n\r\nconst tab = '\\t';\r\nconst ln = '\\n';\r\n\r\nexport abstract class Entity {\r\n    protected uq: Uq;\r\n    protected schema: any;\r\n    private jName: string;\r\n    sys?: boolean;\r\n    readonly name: string;\r\n    readonly typeId: number;\r\n    protected uqApi: UqApi;\r\n    abstract get typeName(): string;\r\n    get sName():string {return this.jName || this.name}\r\n    fields: Field[];\r\n    arrFields: ArrFields[];\r\n    returns: ArrFields[];\r\n\r\n    constructor(uq:Uq, name:string, typeId:number) {\r\n        this.uq = uq;\r\n        this.name = name;\r\n        this.typeId = typeId;\r\n        this.sys = this.name.indexOf('$') >= 0;\r\n        this.uqApi = this.uq.uqApi;\r\n    }\r\n\r\n    public face: any;           // 对应字段的label, placeHolder等等的中文，或者语言的翻译\r\n\r\n    //getApiFrom() {return this.entities.uqApi;}\r\n\r\n    private fieldMaps: {[arr:string]: FieldMap} = {};\r\n    fieldMap(arr?:string): FieldMap {\r\n        if (arr === undefined) arr = '$';\r\n        let ret = this.fieldMaps[arr];\r\n        if (ret === undefined) {\r\n            let fields:Field[];\r\n            if (arr === '$') fields = this.fields;\r\n            else if (this.arrFields !== undefined) {\r\n                let arrFields = this.arrFields.find(v => v.name === arr);\r\n                if (arrFields !== undefined) fields = arrFields.fields;\r\n            }\r\n            else if (this.returns !== undefined) {\r\n                let arrFields = this.returns.find(v => v.name === arr);\r\n                if (arrFields !== undefined) fields = arrFields.fields;\r\n            }\r\n            if (fields === undefined) return {};\r\n            ret = {};\r\n            for (let f of fields) ret[f.name] = f;\r\n            this.fieldMaps[arr] = ret;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    public async loadSchema():Promise<void> {\r\n        if (this.schema !== undefined) return;\r\n        let schema = await this.uq.loadEntitySchema(this.name);\r\n        this.setSchema(schema);\r\n        this.buildFieldsTuid();\r\n    }\r\n\r\n    public setSchema(schema:any) {\r\n        if (schema === undefined) return;\r\n        if (this.schema !== undefined) return;\r\n        this.schema = schema;\r\n        let {name} = schema;\r\n        if (name !== this.name) this.jName = name;\r\n        //this.buildFieldsTuid();\r\n    }\r\n\r\n    public buildFieldsTuid() {\r\n        let {fields, arrs, returns} = this.schema;\r\n        this.uq.buildFieldTuid(this.fields = fields);\r\n        this.uq.buildArrFieldsTuid(this.arrFields = arrs, fields);\r\n        this.uq.buildArrFieldsTuid(this.returns = returns, fields);\r\n    }\r\n\r\n    schemaStringify():string {\r\n        return JSON.stringify(this.schema, (key:string, value:any) => {\r\n            if (key === '_tuid') return undefined;\r\n            return value;\r\n        }, 4);\r\n    }\r\n\r\n    tuidFromName(fieldName:string, arrName?:string):Tuid {\r\n        if (this.schema === undefined) return;\r\n        let {fields, arrs} = this.schema;\r\n        let entities = this.uq;\r\n        function getTuid(fn:string, fieldArr:Field[]) {\r\n            if (fieldArr === undefined) return;\r\n            let f = fieldArr.find(v => v.name === fn);\r\n            if (f === undefined) return;\r\n            return entities.getTuid(f.tuid);\r\n        }\r\n        let fn = fieldName.toLowerCase();\r\n        if (arrName === undefined) return getTuid(fn, fields);\r\n        if (arrs === undefined) return;\r\n        let an = arrName.toLowerCase();\r\n        let arr = (arrs as ArrFields[]).find(v => v.name === an);\r\n        if (arr === undefined) return;\r\n        return getTuid(fn, arr.fields);\r\n    }\r\n\r\n    protected buildParams(params:any):any {\r\n        let result = {};\r\n        let fields = this.fields;\r\n        if (fields !== undefined) this.buildFieldsParams(result, fields, params);\r\n        let arrs = this.arrFields;\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                let {name, fields} = arr;\r\n                let paramsArr:any[] = params[name];\r\n                if (paramsArr === undefined) continue;\r\n                let arrResult = [];\r\n                result[name] = arrResult;\r\n                for (let pa of params) {\r\n                    let rowResult = {};\r\n                    this.buildFieldsParams(rowResult, fields, pa);\r\n                    arrResult.push(rowResult);\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private buildFieldsParams(result:any, fields:Field[], params:any) {\r\n        for (let field of fields) {\r\n            let {name} = field;\r\n            let d = params[name];\r\n            let val:any;\r\n            switch (typeof d) {\r\n                default: val = d; break;\r\n                case 'object':\r\n                    let tuid = field._tuid;\r\n                    if (tuid === undefined) val = d.id;\r\n                    else val = tuid.getIdFromObj(d);\r\n                    break;\r\n            }\r\n            result[name] = val;\r\n        }\r\n    }\r\n\r\n    pack(data:any):string {\r\n        let ret:string[] = [];\r\n        let fields = this.fields;\r\n        if (fields !== undefined) this.packRow(ret, fields, data);\r\n        let arrs = this.arrFields; //schema['arrs'];\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                this.packArr(ret, arr.fields, data[arr.name]);\r\n            }\r\n        }\r\n        return ret.join('');\r\n    }\r\n\r\n    private escape(row:any, field:Field):any {\r\n        let d = row[field.name];\r\n        switch (typeof d) {\r\n            default: return d;\r\n            case 'object':\r\n                let tuid = field._tuid;\r\n                if (tuid === undefined) return d.id;\r\n                return tuid.getIdFromObj(d);\r\n            case 'string':\r\n                let len = d.length;\r\n                let r = '', p = 0;\r\n                for (let i=0;i<len;i++) {\r\n                    let c = d.charCodeAt(i);\r\n                    switch(c) {\r\n                        case 9: r += d.substring(p, i) + '\\\\t'; p = i+1; break;\r\n                        case 10: r += d.substring(p, i) + '\\\\n'; p = i+1; break;\r\n                    }\r\n                }\r\n                return r + d.substring(p);\r\n            case 'undefined': return '';\r\n        }\r\n    }\r\n\r\n    private packRow(result:string[], fields:Field[], data:any) {\r\n        let len = fields.length;\r\n        if (len === 0) return;\r\n        let ret = '';\r\n        ret += this.escape(data, fields[0]);\r\n        for (let i=1;i<len;i++) {\r\n            let f = fields[i];\r\n            ret += tab + this.escape(data, f);\r\n        }\r\n        result.push(ret + ln);\r\n    }\r\n\r\n    private packArr(result:string[], fields:Field[], data:any[]) {\r\n        if (data !== undefined) {\r\n            for (let row of data) {\r\n                this.packRow(result, fields, row);\r\n            }\r\n        }\r\n        result.push(ln);\r\n    }\r\n    protected cacheFieldsInValue(values:any, fields:Field[]) {\r\n        for (let f of fields as Field[]) {\r\n            let {name, _tuid} = f;\r\n            if (_tuid === undefined) continue;\r\n            let id = values[name];\r\n            //_tuid.useId(id);\r\n            values[name] = _tuid.boxId(id);\r\n        }\r\n    }\r\n\r\n    protected unpackTuidIdsOfFields(values:any[]|string, fields: Field[]):any[] {\r\n        if (fields === undefined) return values as any[];\r\n        //if (this.fields === undefined) return values as any[];\r\n        let ret:any[] = []\r\n        let len = (values as string).length;\r\n        let p = 0;\r\n        while (p<len) {\r\n            let ch = (values as string).charCodeAt(p);\r\n            if (ch === 10) {\r\n                ++p;\r\n                break;\r\n            }\r\n            let row = {};\r\n            p = this.unpackRow(row, fields, values as string, p);\r\n            ret.push(row);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    unpackSheet(data:string):any {\r\n        let ret = {} as any; //new this.newMain();\r\n        //if (schema === undefined || data === undefined) return;\r\n        let fields = this.fields;\r\n        let p = 0;\r\n        if (fields !== undefined) p = this.unpackRow(ret, fields, data, p);\r\n        let arrs = this.arrFields; //schema['arrs'];\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                p = this.unpackArr(ret, arr, data, p);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    unpackReturns(data:string):any {\r\n        let ret = {} as any;\r\n        //if (schema === undefined || data === undefined) return;\r\n        //let fields = schema.fields;\r\n        let p = 0;\r\n        //if (fields !== undefined) p = unpackRow(ret, schema.fields, data, p);\r\n        let arrs = this.returns; //schema['returns'];\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                //let creater = this.newRet[arr.name];\r\n                p = this.unpackArr(ret, arr, data, p);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    protected unpackRow(ret:any, fields:Field[], data:string, p:number):number {\r\n        let ch0 = 0, ch = 0, c = p, i = 0, len = data.length, fLen = fields.length;\r\n        for (;p<len;p++) {\r\n            ch0 = ch;\r\n            ch = data.charCodeAt(p);\r\n            if (ch === 9) {\r\n                let f = fields[i];\r\n                let {name} = f;\r\n                if (ch0 !== 8) {\r\n                    if (p>c) {\r\n                        let v = data.substring(c, p);\r\n                        ret[name] = this.to(ret, v, f);\r\n                    }\r\n                }\r\n                else {\r\n                    ret[name] = null;\r\n                }\r\n                c = p+1;\r\n                ++i;\r\n                if (i>=fLen) {\r\n                    p = data.indexOf('\\n', c);\r\n                    if (p >= 0) ++p;\r\n                    else p = len;\r\n                    break;\r\n                }\r\n            }\r\n            else if (ch === 10) {\r\n                let f = fields[i];\r\n                let {name} = f;\r\n                if (ch0 !== 8) {\r\n                    if (p>c) {\r\n                        let v = data.substring(c, p);\r\n                        ret[name] = this.to(ret, v, f);\r\n                    }\r\n                }\r\n                else {\r\n                    ret[name] = null;\r\n                }\r\n                ++p;\r\n                ++i;\r\n                break;\r\n            }\r\n        }\r\n        return p;\r\n    }\r\n\r\n    private to(ret:any, v:string, f:Field):any {\r\n        switch (f.type) {\r\n            default: return v;\r\n            case 'datetime':\r\n            case 'time':\r\n                let date = new Date(Number(v));\r\n                return date;\r\n            case 'date':\r\n                let parts = v.split('-');\r\n                return new Date(Number(parts[0]), Number(parts[1])-1, Number(parts[2]));\r\n            case 'tinyint':\r\n            case 'smallint':\r\n            case 'int':\r\n            case 'bigint':\r\n            case 'dec':\r\n                return Number(v);\r\n            case 'id':\r\n                let id = Number(v);\r\n                let {_tuid} = f;\r\n                if (_tuid === undefined) return id;\r\n                return _tuid.boxId(id);\r\n        }\r\n    }\r\n\r\n    private unpackArr(ret:any, arr:ArrFields, data:string, p:number):number {\r\n        let vals:any[] = [], len = data.length;\r\n        let {name, fields} = arr;\r\n        while (p<len) {\r\n            let ch = data.charCodeAt(p);\r\n            if (ch === 10) {\r\n                ++p;\r\n                break;\r\n            }\r\n            let val = {} as any; //new creater();\r\n            vals.push(val);\r\n            p = this.unpackRow(val, fields, data, p);\r\n        }\r\n        ret[name] = vals;\r\n        return p;\r\n    }\r\n}\r\n","import { observable } from 'mobx';\r\nimport { isNumber } from 'util';\r\nimport { BoxId } from './boxId';\r\nimport { TuidLocal } from './tuid';\r\nimport { TuidDiv } from './tuidDiv'\r\n\r\nconst maxCacheSize = 1000;\r\n\r\nexport class IdCache {\r\n    private queue: number[] = [];               // 每次使用，都排到队头\r\n    private cache = observable.map({}, {deep: false});    // 已经缓冲的\r\n\r\n    protected waitingIds: number[] = [];          // 等待loading的\r\n    protected tuidLocal: TuidLocal;\r\n\r\n    constructor(tuidLocal: TuidLocal) {\r\n        this.tuidLocal = tuidLocal;\r\n    }\r\n\r\n    useId(id:number, defer?:boolean) {\r\n        if (id === undefined || id === 0) return;\r\n        if (isNumber(id) === false) return;\r\n        if (this.cache.has(id) === true) {\r\n            this.moveToHead(id);\r\n            return;\r\n        }\r\n        this.tuidLocal.cacheTuids(defer===true?70:20);\r\n        //let idVal = this.createID(id);\r\n        this.cache.set(id, id);\r\n        if (this.waitingIds.findIndex(v => v === id) >= 0) {\r\n            this.moveToHead(id);\r\n            return;\r\n        }\r\n\r\n        if (this.queue.length >= maxCacheSize) {\r\n            // 缓冲已满，先去掉最不常用的\r\n            let r = this.queue.shift();\r\n            if (r === id) {\r\n                // 如果移除的，正好是现在用的，则插入\r\n                this.queue.push(r);\r\n                return;\r\n            }\r\n\r\n            //let rKey = String(r);\r\n            if (this.cache.has(r) === true) {\r\n                // 如果移除r已经缓存\r\n                this.cache.delete(r);\r\n            }\r\n            else {\r\n                // 如果移除r还没有缓存\r\n                let index = this.waitingIds.findIndex(v => v === r);\r\n                this.waitingIds.splice(index, 1);\r\n            }\r\n        }\r\n        this.waitingIds.push(id);\r\n        this.queue.push(id);\r\n        return;\r\n    }\r\n\r\n    private moveToHead(id:number) {\r\n        let index = this.queue.findIndex(v => v === id);\r\n        this.queue.splice(index, 1);\r\n        this.queue.push(id);\r\n    }\r\n\r\n    getValue(id:number) {\r\n        return this.cache.get(id);\r\n    }\r\n\r\n    valueFromId(id:number|BoxId):any {\r\n        let _id:number;\r\n        switch (typeof id) {\r\n            case 'object': _id = (id as BoxId).id; break;\r\n            case 'number': _id = id as number; break;\r\n            default: return;\r\n        }\r\n        return this.getValue(_id);\r\n    }\r\n\r\n    resetCache(id:number) {\r\n        this.cache.delete(id);\r\n        let index = this.queue.findIndex(v => v === id);\r\n        this.queue.splice(index, 1);\r\n        this.useId(id);\r\n    }\r\n\r\n    cacheValue(val:any):boolean {\r\n        if (val === undefined) return false;\r\n        let id = this.getIdFromObj(val);\r\n        if (id === undefined) return false;\r\n        let index = this.waitingIds.findIndex(v => v === id);\r\n        if (index>=0) this.waitingIds.splice(index, 1);\r\n        //let cacheVal = this.createID(id, val);\r\n        this.cache.set(id, val);\r\n        return true;\r\n    }\r\n    protected getIdFromObj(val:any) {return this.tuidLocal.getIdFromObj(val)}\r\n    /*\r\n    protected afterCacheValue(tuidValue:any) {\r\n        let {fields} = this.tuidLocal;\r\n        if (fields === undefined) return;\r\n        for (let f of fields) {\r\n            let {_tuid} = f;\r\n            if (_tuid === undefined) continue;\r\n            _tuid.useId(tuidValue[f.name]);\r\n        }\r\n    }\r\n    */\r\n    async cacheIds():Promise<void> {\r\n        if (this.waitingIds.length === 0) return;\r\n        let tuidValues = await this.loadIds();\r\n        await this.cacheIdValues(tuidValues);\r\n    }\r\n\r\n    private async cacheIdValues(tuidValues: any[]) {\r\n        if (tuidValues === undefined) return;\r\n        let tuids = this.unpackTuidIds(tuidValues);\r\n        for (let tuidValue of tuids) {\r\n            if (this.cacheValue(tuidValue) === false) continue;\r\n            this.cacheTuidFieldValues(tuidValue);\r\n            //this.afterCacheValue(tuidValue);\r\n        }\r\n    }\r\n    protected divName:string = undefined;\r\n    protected async loadIds(): Promise<any[]> {\r\n        let ret = await this.tuidLocal.loadTuidIds(this.divName, this.waitingIds);\r\n        return ret;\r\n    }\r\n    protected unpackTuidIds(values:any[]|string):any[] {\r\n        return this.tuidLocal.unpackTuidIds(values);\r\n    }\r\n    protected cacheTuidFieldValues(tuidValue: any) {\r\n        this.tuidLocal.cacheTuidFieldValues(tuidValue);\r\n    }\r\n\r\n    async assureObj(id:number):Promise<void> {\r\n        let val = this.cache.get(id);\r\n        switch (typeof val) {\r\n            case 'object': return;\r\n            case 'number': this.cache.set(id, id); break;\r\n        }\r\n        let ret = await this.tuidLocal.loadTuidIds(this.divName, [id]);\r\n        await this.cacheIdValues(ret);\r\n    }\r\n}\r\n\r\nexport class IdDivCache extends IdCache {\r\n    private div: TuidDiv;\r\n    protected divName:string;\r\n\r\n    constructor(tuidLocal:TuidLocal, div: TuidDiv) {\r\n        super(tuidLocal);\r\n        this.div = div;\r\n        this.divName = div.name;\r\n    }\r\n    protected getIdFromObj(val:any) {return this.div.getIdFromObj(val)}\r\n    protected unpackTuidIds(values:any[]|string):any[] {\r\n        return this.div.unpackTuidIds(values);\r\n    }\r\n    protected cacheTuidFieldValues(tuidValue: any) {\r\n        this.div.cacheTuidFieldValues(tuidValue);\r\n    }\r\n    /*\r\n    async cacheIds():Promise<void> {\r\n        if (this.waitingIds.length === 0) return;\r\n        let tuidValues = await this.loadIds();\r\n        if (tuidValues !== undefined) {\r\n            let tuids = this.tuidLocal.unpackTuidIds(tuidValues);\r\n            for (let tuidValue of tuids) {\r\n                if (this.cacheValue(tuidValue) === false) continue;\r\n                this.tuidLocal.cacheTuidFieldValues(tuidValue);\r\n                this.afterCacheValue(tuidValue);\r\n            }\r\n        }\r\n    }\r\n    */\r\n}\r\n","import { BoxId, BoxDivId } from './boxId';\r\nimport { Tuid } from './tuid';\r\nimport { TuidDiv } from './tuidDiv';\r\nimport { Field } from '../uq';\r\n\r\n// field._tuid 用这个接口\r\n// Tuid, TuidDiv 实现这个接口\r\nexport class TuidBox {\r\n    tuid: Tuid;\r\n    ownerField:Field = undefined;\r\n    constructor(tuid: Tuid) {\r\n        this.tuid = tuid;\r\n    }\r\n\r\n    boxId(id:number):BoxId {\r\n        return this.tuid.boxId(id);\r\n    }\r\n    getIdFromObj(obj:any):number {\r\n        return this.tuid.getIdFromObj(obj);\r\n    }\r\n    useId(id:number):void {\r\n        return this.tuid.useId(id);\r\n    }\r\n    async showInfo() {\r\n        alert('showInfo not implemented');\r\n    }\r\n}\r\n\r\nexport class TuidBoxDiv extends TuidBox {\r\n    ownerField: Field;\r\n    private div: TuidDiv;\r\n    constructor(tuid: Tuid, div: TuidDiv, ownerField: Field) {\r\n        super(tuid);\r\n        this.div = div;\r\n        this.ownerField = ownerField;\r\n    }\r\n\r\n    boxId(id:number):BoxId {\r\n        return this.div.boxId(id);\r\n    }\r\n    getIdFromObj(obj:any):number {\r\n        return this.div.getIdFromObj(obj);\r\n    }\r\n    useId(id:number):void {\r\n        return this.div.useId(id);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Tuid, TuidLocal } from './tuid';\r\nimport { TuidDiv } from './tuidDiv';\r\nimport { TvTemplet } from '../../tools';\r\nimport { PureJSONContent } from '../../controllers';\r\n\r\nexport class BoxId {\r\n    readonly id: number;\r\n    //obj?: any;\r\n    //content: (templet?:(values?:any, x?:any)=>JSX.Element, x?:any)=>JSX.Element;\r\n    //valueFromFieldName: (fieldName:string)=>BoxId|any;\r\n    //_$com?: any;\r\n    //_$tuid?: TuidBase;\r\n    //getObj: ()=>any;\r\n    protected tuid: Tuid;\r\n    get obj():any {\r\n        return this.tuid.valueFromId(this.id);\r\n    }\r\n\r\n    constructor(tuid: Tuid, id: number) {\r\n        this.tuid = tuid;\r\n        this.id = id;\r\n    }\r\n\r\n    render(ui:TvTemplet, x:any):JSX.Element {\r\n        if (this.id === undefined || this.id === null) return;\r\n        let boxName = this.boxName(); // this.tuid.name;\r\n        let val = this.obj; // this.tuid.valueFromId(this.id);\r\n        if (this.isUndefined() === true) {\r\n            if (ui !== undefined) return ui(val, x);\r\n            return PureJSONContent(val, x);\r\n        }\r\n        switch (typeof val) {\r\n            case 'undefined':\r\n                return <del className=\"text-black-50\">{boxName} undefined</del>;\r\n            case 'number':\r\n                return <del className=\"text-black-50\">{boxName} {this.id}</del>;\r\n        }\r\n        if (ui === undefined) {\r\n            ui = this.ui();\r\n        }\r\n        if (ui !== undefined) {\r\n            let ret = ui(val, this.res());\r\n            if (ret !== undefined) return ret;\r\n            return <del className=\"text-danger\">{boxName} {this.id}</del>;\r\n        }\r\n\r\n        return PureJSONContent(val);\r\n    }\r\n\r\n    boxName():string {return this.tuid.name}\r\n    //valueFromId(): any {return this.tuid.valueFromId(this.id)}\r\n    isUndefined(): boolean {return this.tuid === undefined}\r\n    ui(): TvTemplet {return this.tuid.ui}\r\n    res(): any {return this.tuid.res}\r\n\r\n    async assure(): Promise<void> {\r\n        await this.tuid.assureBox(this.id);\r\n    }\r\n}\r\n\r\nexport class BoxDivId extends BoxId {\r\n    private div: TuidDiv;\r\n    constructor(tuid: Tuid, div: TuidDiv, id: number) {\r\n        super(tuid, id);\r\n        this.div = div;\r\n    }\r\n    get obj():any {\r\n        return this.div.valueFromId(this.id);\r\n    }\r\n    boxName():string {return this.div.name}\r\n    //valueFromId(): any {return this.div.valueFromId(this.id)}\r\n    isUndefined(): boolean {return this.div === undefined}\r\n    ui(): TvTemplet {return this.div.ui}\r\n    res(): any {return this.div.res}\r\n\r\n    async assure(): Promise<void> {\r\n        await this.div.assureBox(this.id);\r\n    }\r\n\r\n/*\r\n    render(ui:TvTemplet, x:any):JSX.Element {\r\n        if (this.id === undefined || this.id === null) return;\r\n        //let {name} = this.tuid;\r\n        let boxName = this.div.name;\r\n        let val = this.div.valueFromId(this.id);\r\n        if (this.div === undefined) {\r\n            if (ui !== undefined) return ui(val, x);\r\n            return PureJSONContent(val, x);\r\n        }\r\n        switch (typeof val) {\r\n            case 'undefined':\r\n                return <del className=\"text-black-50\">{boxName} undefined</del>;\r\n            case 'number':\r\n                return <del className=\"text-black-50\">{boxName} {this.id}</del>;\r\n        }\r\n        if (ui === undefined) {\r\n            ui = this.div.ui;\r\n        }\r\n        if (ui !== undefined) {\r\n            return PureJSONContent(val);\r\n        }\r\n\r\n        let ret = ui(val, this.div.res);\r\n        if (ret !== undefined) return ret;\r\n        return <del className=\"text-danger\">{boxName} {this.id}</del>;\r\n    }\r\n*/\r\n}\r\n","import { Tuid, TuidLocal } from './tuid';\r\nimport { IdCache, IdDivCache } from './idCache';\r\nimport { TuidBox, TuidBoxDiv } from './tuidBox';\r\nimport { BoxId, BoxDivId } from './boxId';\r\nimport { Field, Uq } from '../uq';\r\nimport { Entity } from '../entity';\r\n\r\nexport class TuidDiv extends Entity {\r\n    readonly typeName = 'div';\r\n    private cacheFields: Field[];\r\n    protected tuid: TuidLocal;\r\n    protected idName: string;\r\n    protected idCache: IdDivCache;;\r\n\r\n    ui: React.StatelessComponent<any>;\r\n    res: any;\r\n\r\n    constructor(uq: Uq, tuid: TuidLocal, name: string) {\r\n        super(uq, name, 0);\r\n        this.tuid = tuid;\r\n        this.idName = 'id';\r\n        this.idCache = new IdDivCache(tuid, this);\r\n    }\r\n\r\n    get owner() {return this.tuid}\r\n\r\n    /*\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        this.buildFieldsTuid();\r\n    }*/\r\n\r\n    setUIRes(ui:any, res:any) {\r\n        this.ui = ui && ui.content;\r\n        this.res = res;\r\n    }\r\n\r\n    buildFieldsTuid() {\r\n        super.buildFieldsTuid();\r\n        let {mainFields} = this.schema;\r\n        if (mainFields === undefined) debugger;\r\n        this.uq.buildFieldTuid(this.cacheFields = mainFields);\r\n    }\r\n\r\n    buildTuidBox(ownerField: Field): TuidBox {\r\n        return new TuidBoxDiv(this.tuid, this, ownerField);\r\n    }\r\n\r\n    getIdFromObj(obj:any):number {return obj[this.idName]}\r\n    cacheValue(value:any):void {\r\n        this.idCache.cacheValue(value);\r\n    }\r\n\r\n    useId(id:number, defer?:boolean):void {\r\n        this.idCache.useId(id, defer);\r\n    }\r\n\r\n    boxId(id:number):BoxId {\r\n        if (typeof id === 'object') return id;\r\n        this.useId(id);\r\n        return new BoxDivId(this.tuid, this, id);\r\n    }\r\n\r\n    valueFromId(id:number):any {\r\n        return this.idCache.getValue(id)\r\n    }\r\n\r\n    async assureBox(id:number):Promise<void> {\r\n        await this.idCache.assureObj(id);\r\n    }\r\n\r\n    async cacheIds() {\r\n        await this.idCache.cacheIds();\r\n    }\r\n\r\n    cacheTuidFieldValues(values:any) {\r\n        let fields = this.schema.fields;\r\n        this.cacheFieldsInValue(values, fields);\r\n    }\r\n\r\n    unpackTuidIds(values:any[]|string):any[] {\r\n        return this.unpackTuidIdsOfFields(values, this.cacheFields);\r\n    }\r\n}\r\n","import _ from 'lodash';\r\nimport { Entity } from '../entity';\r\nimport { IdCache } from './idCache';\r\nimport { TuidDiv } from './tuidDiv';\r\nimport { Uq, ArrFields, Field, SchemaFrom } from '../uq';\r\nimport { TuidBox } from './tuidBox';\r\nimport { BoxId } from './boxId';\r\n\r\nexport interface TuidSaveResult {\r\n    id: number;\r\n    inId: number;\r\n}\r\n\r\nexport abstract class Tuid extends Entity {\r\n    readonly typeName = 'tuid';\r\n    private idName: string;\r\n    unique: string[];\r\n    ui: React.StatelessComponent<any>;\r\n    res: any;\r\n\r\n    constructor(uq:Uq, name:string, typeId:number) {\r\n        super(uq, name, typeId)\r\n    }\r\n\r\n    public setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        let {id} = schema;\r\n        this.idName = id;\r\n    }\r\n\r\n    buildTuidBox(): TuidBox {\r\n        return new TuidBox(this);\r\n    }\r\n    \r\n    setUIRes(ui:any, res:any) {\r\n        //this.ui = (ui as TuidUI).content;\r\n        this.ui = ui.content;\r\n        this.res = res;\r\n    }\r\n\r\n    getIdFromObj(obj:any):number {return obj[this.idName]}\r\n    abstract useId(id:number):void;\r\n    abstract boxId(id:number):BoxId;\r\n    abstract valueFromId(id:number):any;\r\n    abstract async assureBox(id:number):Promise<void>;\r\n    cacheIds() {}\r\n    isImport = false;\r\n    abstract get hasDiv():boolean;// {return this.divs!==undefined}\r\n    abstract div(name:string):TuidDiv;\r\n    abstract async load(id:number|BoxId):Promise<any>;\r\n    abstract async save(id:number, props:any):Promise<TuidSaveResult>;\r\n    abstract async search(key:string, pageStart:string|number, pageSize:number):Promise<any>;\r\n    abstract async searchArr(owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any>;\r\n    abstract async loadArr(arr:string, owner:number, id:number):Promise<any>;\r\n    abstract async saveArr(arr:string, owner:number, id:number, props:any):Promise<void>;\r\n    abstract async posArr(arr:string, owner:number, id:number, order:number):Promise<void>;\r\n}\r\n\r\nexport class TuidLocal extends Tuid {\r\n    private idCache: IdCache = new IdCache(this);\r\n    private cacheFields: Field[];\r\n    private divs: {[div:string]: TuidDiv};\r\n\r\n    public setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        let {arrs} = schema;\r\n        if (arrs !== undefined) {\r\n            this.divs = {};\r\n            for (let arr of arrs) {\r\n                let {name} = arr;\r\n                let tuidDiv = new TuidDiv(this.uq, this, name);\r\n                this.divs[name] = tuidDiv;\r\n                tuidDiv.setSchema(arr);\r\n                tuidDiv.buildFieldsTuid();\r\n            }\r\n        }\r\n    }\r\n    \r\n    setUIRes(ui:any, res:any) {\r\n        super.setUIRes(ui, res);\r\n        if (this.divs === undefined) return;\r\n        //let uiDivs = (ui as TuidUI).divs;\r\n        let uiDivs = ui.divs;\r\n        if (uiDivs === undefined) return;\r\n        for (let i in this.divs) {\r\n            this.divs[i].setUIRes(uiDivs[i], res);\r\n        }\r\n    }\r\n\r\n    useId(id:number, defer?:boolean) {\r\n        this.idCache.useId(id, defer);\r\n    }\r\n    boxId(id:number):BoxId {\r\n        if (typeof id === 'object') return id;\r\n        this.useId(id);\r\n        return new BoxId(this, id);\r\n    }\r\n    valueFromId(id:number) {return this.idCache.getValue(id)}\r\n    async assureBox(id:number):Promise<void> {\r\n        await this.idCache.assureObj(id);\r\n    }\r\n\r\n    cacheIds() {\r\n        this.idCache.cacheIds();\r\n        if (this.divs === undefined) return;\r\n        for (let i in this.divs) this.divs[i].cacheIds();\r\n    }\r\n    cacheTuids(defer:number) {this.uq.cacheTuids(defer)}\r\n    get hasDiv():boolean {return this.divs!==undefined}\r\n    div(name:string):TuidDiv {\r\n        return this.divs && this.divs[name];\r\n    }\r\n    async loadTuidIds(divName:string, ids:number[]):Promise<any[]> {\r\n        return await this.uqApi.tuidIds(this.name, divName, ids);\r\n    }\r\n    async load(id:number|BoxId):Promise<any> {\r\n        if (id === undefined || id === 0) return;\r\n        if (typeof id === 'object') id = id.id;\r\n        let values = await this.uqApi.tuidGet(this.name, id);\r\n        if (values === undefined) return;\r\n        for (let f of this.schema.fields) {\r\n            let {tuid} = f;\r\n            if (tuid === undefined) continue;\r\n            let t = this.uq.getTuid(tuid);\r\n            if (t === undefined) continue;\r\n            let n = f.name;\r\n            values[n] = t.boxId(values[n]);\r\n        }\r\n        //values._$tuid = this;\r\n        this.idCache.cacheValue(values);\r\n        this.cacheTuidFieldValues(values);\r\n        return values;\r\n    }\r\n\r\n    cacheTuidFieldValues(values:any) {\r\n        let {fields, arrs} = this.schema;\r\n        this.cacheFieldsInValue(values, fields);\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs as ArrFields[]) {\r\n                let {name, fields} = arr;\r\n                let arrValues = values[name];\r\n                if (arrValues === undefined) continue;\r\n                let tuidDiv = this.div(name);\r\n                for (let row of arrValues) {\r\n                    //row._$tuid = tuidDiv;\r\n                    //row.$owner = this.boxId(row.owner);\r\n                    tuidDiv.cacheValue(row);\r\n                    this.cacheFieldsInValue(row, fields);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public buildFieldsTuid() {\r\n        super.buildFieldsTuid();\r\n        let {mainFields} = this.schema;\r\n        if (mainFields === undefined) debugger;\r\n        this.uq.buildFieldTuid(this.cacheFields = mainFields || this.fields);\r\n    }\r\n\r\n    unpackTuidIds(values:any[]|string):any[] {\r\n        return this.unpackTuidIdsOfFields(values, this.cacheFields);\r\n    }\r\n\r\n    async save(id:number, props:any):Promise<TuidSaveResult> {\r\n        let {fields} = this.schema;\r\n        let params:any = {$id: id};\r\n        for (let field of fields as Field[]) {\r\n            let {name, tuid, type} = field;\r\n            let val = props[name];\r\n            if (tuid !== undefined) {\r\n                if (typeof val === 'object') {\r\n                    if (val !== null) val = val.id;\r\n                }\r\n            }\r\n            else {\r\n                switch (type) {\r\n                    case 'date':\r\n                    case 'datetime':\r\n                        val = new Date(val).toISOString();\r\n                        val = (val as string).replace('T', ' ');\r\n                        val = (val as string).replace('Z', '');\r\n                        break;\r\n                }\r\n            }\r\n            params[name] = val;\r\n        }\r\n        let ret = await this.uqApi.tuidSave(this.name, params);\r\n        return ret;\r\n    }\r\n    async search(key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        let ret:any[] = await this.searchArr(undefined, key, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    async searchArr(owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        let {fields} = this.schema;\r\n        let api = this.uqApi;\r\n        let ret = await api.tuidSearch(this.name, undefined, owner, key, pageStart, pageSize);\r\n        for (let row of ret) {\r\n            this.cacheFieldsInValue(row, fields);\r\n        }\r\n        return ret;\r\n    }\r\n    async loadArr(arr:string, owner:number, id:number):Promise<any> {\r\n        if (id === undefined || id === 0) return;\r\n        let api = this.uqApi;\r\n        return await api.tuidArrGet(this.name, arr, owner, id);\r\n    }\r\n    async saveArr(arr:string, owner:number, id:number, props:any) {\r\n        let params = _.clone(props);\r\n        params[\"$id\"] = id;\r\n        return await this.uqApi.tuidArrSave(this.name, arr, owner, params);\r\n    }\r\n\r\n    async posArr(arr:string, owner:number, id:number, order:number) {\r\n        return await this.uqApi.tuidArrPos(this.name, arr, owner, id, order);\r\n    }\r\n}\r\n\r\nexport class TuidImport extends Tuid {\r\n    private tuidLocal: TuidLocal;\r\n\r\n    constructor(uq:Uq, name:string, typeId:number, from: SchemaFrom) {\r\n        super(uq, name, typeId);\r\n        this.from = from;\r\n    }\r\n\r\n    setFrom(tuidLocal: TuidLocal) {this.tuidLocal = tuidLocal}\r\n    \r\n    readonly from: SchemaFrom;\r\n    isImport = true;\r\n\r\n    useId(id:number) {this.tuidLocal.useId(id);}\r\n    boxId(id:number):BoxId {return this.tuidLocal.boxId(id);}\r\n    valueFromId(id:number) {return this.tuidLocal.valueFromId(id)}\r\n    async assureBox(id:number):Promise<void> {\r\n        await this.tuidLocal.assureBox(id);\r\n    }\r\n    get hasDiv():boolean {return this.tuidLocal.hasDiv}\r\n    div(name:string):TuidDiv {return this.tuidLocal.div(name)}\r\n    async load(id:number|BoxId):Promise<any> {\r\n        return await this.tuidLocal.load(id);\r\n    }\r\n    async save(id:number, props:any):Promise<TuidSaveResult> {\r\n        return await this.tuidLocal.save(id, props);\r\n    }\r\n    async search(key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        return await this.tuidLocal.search(key, pageStart, pageSize);\r\n    }\r\n    async searchArr(owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        return await this.tuidLocal.searchArr(owner, key, pageStart, pageSize);\r\n    }\r\n    async loadArr(arr:string, owner:number, id:number):Promise<any> {\r\n        return await this.tuidLocal.loadArr(arr, owner, id);\r\n    }\r\n    async saveArr(arr:string, owner:number, id:number, props:any):Promise<void> {\r\n        await this.tuidLocal.saveArr(arr, owner, id, props);\r\n    }\r\n    async posArr(arr:string, owner:number, id:number, order:number):Promise<void> {\r\n        await this.tuidLocal.posArr(arr, owner, id, order);\r\n    }\r\n}\r\n","import {Entity} from './entity';\r\n\r\nexport class Action extends Entity {\r\n    get typeName(): string { return 'action';}\r\n    async submit(data:object) {\r\n        await this.loadSchema();\r\n        let text = this.pack(data);\r\n        return await this.uqApi.action(this.name, {data:text});\r\n    }\r\n}\r\n\r\n","import { Entity } from './entity';\r\nimport { PageItems } from '../../pageItems';\r\n\r\nexport interface SheetState {\r\n    name: string;\r\n    actions: SheetAction[];\r\n}\r\n\r\nexport interface SheetAction {\r\n    name: string;\r\n}\r\n\r\nexport interface StateCount {\r\n    state: string;\r\n    count: number;\r\n}\r\n\r\nexport class Sheet extends Entity {\r\n    get typeName(): string { return 'sheet';}\r\n    states: SheetState[];\r\n\r\n    /*\r\n    setStates(states: SheetState[]) {\r\n        for (let state of states) {\r\n            this.setStateAccess(this.states.find(s=>s.name==state.name), state);\r\n        }\r\n    }*/\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        this.states = schema.states;\r\n    }\r\n    build(obj:any) {\r\n        this.states = [];\r\n        for (let op of obj.ops) {\r\n            this.states.push({name: op, actions:undefined});\r\n        }\r\n        /*\r\n        for (let p in obj) {\r\n            switch(p) {\r\n                case '#':\r\n                case '$': continue;\r\n                default: this.states.push(this.createSheetState(p, obj[p])); break;\r\n            }\r\n        }*/\r\n    }\r\n    private createSheetState(name:string, obj:object):SheetState {\r\n        let ret:SheetState = {name:name, actions:[]};\r\n        let actions = ret.actions;\r\n        for (let p in obj) {\r\n            let action:SheetAction = {name: p};\r\n            actions.push(action);\r\n        }\r\n        return ret;\r\n    }\r\n    /*\r\n    private setStateAccess(s:SheetState, s1:SheetState) {\r\n        if (s === undefined) return;\r\n        for (let action of s1.actions) {\r\n            let acn = action.name;\r\n            let ac = s.actions.find(a=>a.name === acn);\r\n            if (ac === undefined) continue;\r\n            s.actions.push(action);\r\n        }\r\n    }*/\r\n    async save(discription:string, data:any):Promise<any> {\r\n        await this.loadSchema();\r\n        let {id} = this.uq;\r\n        let text = this.pack(data);\r\n\r\n        let ret = await this.uqApi.sheetSave(this.name, {app: id, discription: discription, data:text});\r\n        return ret;\r\n        /*\r\n        let {id, state} = ret;\r\n        if (id > 0) this.changeStateCount(state, 1);\r\n        return ret;\r\n        */\r\n    }\r\n    async action(id:number, flow:number, state:string, action:string) {\r\n        await this.loadSchema();\r\n        return await this.uqApi.sheetAction(this.name, {id:id, flow:flow, state:state, action:action});\r\n    }\r\n    private unpack(data:any):any {\r\n        //if (this.schema === undefined) await this.loadSchema();\r\n        let ret = data[0];\r\n        let brief = ret[0];\r\n        let sheetData = this.unpackSheet(brief.data);\r\n        let flows = data[1];\r\n        return {\r\n            brief: brief,\r\n            data: sheetData,\r\n            flows: flows,\r\n        }\r\n    }\r\n    async getSheet(id:number):Promise<any> {\r\n        await this.loadSchema();\r\n        let ret = await this.uqApi.getSheet(this.name, id);\r\n        if (ret[0].length === 0) return await this.getArchive(id);\r\n        return this.unpack(ret);\r\n    }\r\n    async getArchive(id:number):Promise<any> {\r\n        await this.loadSchema();\r\n        let ret = await this.uqApi.sheetArchive(this.name, id)\r\n        return this.unpack(ret);\r\n    }\r\n\r\n    async getArchives(pageStart:number, pageSize:number) {\r\n        await this.loadSchema();\r\n        let ret = await this.uqApi.sheetArchives(this.name, {pageStart:pageStart, pageSize:pageSize});\r\n        return ret;\r\n    }\r\n\r\n    async getStateSheets(state:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        await this.loadSchema();\r\n        let ret = await this.uqApi.stateSheets(this.name, {state:state, pageStart:pageStart, pageSize:pageSize});\r\n        return ret;\r\n    }\r\n    createPageStateItems<T>(): PageStateItems<T> {return new PageStateItems<T>(this);}\r\n\r\n    async stateSheetCount():Promise<StateCount[]> {\r\n        await this.loadSchema();\r\n        let ret:StateCount[] = await this.uqApi.stateSheetCount(this.name);\r\n        return this.states.map(s => {\r\n            let n = s.name, count = 0;\r\n            let r = ret.find(v => v.state === n);\r\n            if (r !== undefined) count = r.count;\r\n            return {state: n, count: count} \r\n        });\r\n    }\r\n\r\n    async mySheets(state:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        await this.loadSchema();\r\n        let ret = await this.uqApi.mySheets(this.name, {state:state, pageStart:pageStart, pageSize:pageSize});\r\n        return ret;\r\n    }\r\n}\r\n\r\nexport class PageStateItems<T> extends PageItems<T> {\r\n    private sheet: Sheet;\r\n    constructor(sheet: Sheet) {\r\n        super(true);\r\n        this.sheet = sheet;\r\n        this.pageSize = 10;\r\n    }\r\n    protected async load(param:any, pageStart:any, pageSize:number):Promise<any[]> {\r\n        let ret = await this.sheet.getStateSheets(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:any) {\r\n        this.pageStart = item === undefined? 0 : item.id;\r\n    }\r\n}\r\n","import {observable, IObservableArray} from 'mobx';\r\nimport {Field, ArrFields} from './uq';\r\nimport {Entity} from './entity';\r\n\r\nexport type QueryPageApi = (name:string, pageStart:any, pageSize:number, params:any) => Promise<string>;\r\nexport class Query extends Entity {\r\n    get typeName(): string { return 'query';}\r\n    private pageStart: any;\r\n    private pageSize:number;\r\n    private params:any;\r\n    private more: boolean;\r\n    private startField: Field;\r\n    @observable list:IObservableArray; // = observable.array([], {deep: false});\r\n    returns: ArrFields[];\r\n    isPaged: boolean;\r\n\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        let {returns} = schema;\r\n        //this.returns = returns;\r\n        this.isPaged = returns && (returns as any[]).find(v => v.name === '$page') !== undefined;\r\n    }\r\n\r\n    resetPage(size:number, params:any) {\r\n        this.pageStart = undefined;\r\n        this.pageSize = size;\r\n        this.params = params;\r\n        this.more = false;\r\n        this.list = undefined;\r\n    }\r\n    get hasMore() {return this.more;}\r\n    async loadPage():Promise<void> {\r\n        if (this.pageSize === undefined) {\r\n            throw 'call resetPage(size:number, params:any) first';\r\n        }\r\n        let pageStart:any;\r\n        if (this.pageStart !== undefined) {\r\n            switch (this.startField.type) {\r\n                default: pageStart = this.pageStart; break;\r\n                case 'date':\r\n                case 'time':\r\n                case 'datetime': pageStart = (this.pageStart as Date).getTime(); break;\r\n            }\r\n        }\r\n        let page = await this.page(this.params, pageStart, this.pageSize+1);\r\n        /*\r\n        await this.loadSchema();\r\n        let res = await this.tvApi.page(this.name, pageStart, this.pageSize+1, this.params);\r\n        let data = await this.unpackReturns(res);\r\n        let page = data['$page'] as any[];\r\n        */\r\n        this.list = observable.array([], {deep: false});\r\n        if (page !== undefined) {\r\n            if (page.length > this.pageSize) {\r\n                this.more = true;\r\n                page.pop();\r\n                let ret = this.returns.find(r => r.name === '$page');\r\n                this.startField = ret.fields[0];\r\n                this.pageStart = page[page.length-1][this.startField.name];\r\n            }\r\n            else {\r\n                this.more = false;\r\n            }\r\n            this.list.push(...page);\r\n        }\r\n        //this.loaded = true;\r\n    }\r\n\r\n    async page(params:any, pageStart:any, pageSize:number):Promise<any[]> {\r\n        await this.loadSchema();\r\n        let res = await this.uqApi.page(this.name, pageStart, pageSize+1, this.buildParams(params));\r\n        let data = this.unpackReturns(res);\r\n        return data.$page;// as any[];\r\n    }\r\n    async query(params:any):Promise<any> {\r\n        await this.loadSchema();\r\n        let res = await this.uqApi.query(this.name, this.buildParams(params));\r\n        let data = this.unpackReturns(res);\r\n        return data;\r\n    }\r\n    async table(params:any): Promise<any[]> {\r\n        let ret = await this.query(params);\r\n        for (let i in ret) {\r\n            return ret[i];\r\n        }\r\n    }\r\n    async obj(params:any):Promise<any> {\r\n        let ret = await this.table(params);\r\n        if (ret.length > 0) return ret[0];\r\n    }\r\n    async scalar(params:any):Promise<any> {\r\n        let ret = await this.obj(params);\r\n        for (let i in ret) return ret[i];\r\n    }\r\n}\r\n","import {Query} from './query';\r\n\r\nexport class Book extends Query {\r\n    get typeName(): string { return 'book';}\r\n    protected queryApiName = 'book';\r\n}\r\n","import {Query} from './query';\r\n\r\nexport class History extends Query {\r\n    get typeName(): string { return 'history';}\r\n    protected queryApiName = 'history';\r\n}\r\n","import { Entity } from './entity';\r\nimport { Action } from './action';\r\nimport { Query } from './query';\r\nimport { Field } from './uq';\r\n\r\ninterface MapActions {\r\n    add: Action;\r\n    del: Action;\r\n}\r\ninterface MapQueries {\r\n    all: Query;\r\n    page: Query;\r\n    query: Query;\r\n}\r\n\r\nexport class Map extends Entity {\r\n    get typeName(): string { return 'map';}\r\n    keys: Field[];\r\n    actions: MapActions = {} as any;\r\n    queries: MapQueries = {} as any;\r\n    schemaFrom: {owner:string; uq:string};\r\n\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        this.schemaFrom = this.schema.from;\r\n        let {actions, queries, keys} = schema;\r\n        this.uq.buildFieldTuid(this.keys = keys);\r\n        //let t = this.schemaStringify();\r\n        for (let i in actions) {\r\n            let actionSchema = actions[i];\r\n            let {name} = actionSchema;\r\n            let action = this.uq.newAction(name, undefined);\r\n            action.setSchema(actionSchema);\r\n            action.buildFieldsTuid();\r\n            this.actions[i] = action;\r\n        }\r\n        for (let i in queries) {\r\n            let querySchema = queries[i];\r\n            let {name} = querySchema;\r\n            let query = this.uq.newQuery(name, undefined);\r\n            query.setSchema(querySchema);\r\n            query.buildFieldsTuid();\r\n            this.queries[i] = query;\r\n        }\r\n    }\r\n\r\n    async add(param:any) {\r\n        await this.loadSchema();\r\n        return await this.actions.add.submit(param);\r\n    }\r\n\r\n    async del(param:any) {\r\n        await this.loadSchema();\r\n        return await this.actions.del.submit(param);\r\n    }\r\n\r\n    async all() {\r\n        await this.loadSchema();\r\n        return await this.queries.all.query({});\r\n    }\r\n\r\n    async page(param:any, pageStart:any, pageSize: number) {\r\n        await this.loadSchema();\r\n        return await this.queries.page.page(param, pageStart, pageSize);\r\n    }\r\n\r\n    async query(param:any) {\r\n        await this.loadSchema();\r\n        return await this.queries.query.query(param);\r\n    }\r\n    async table(params:any): Promise<any[]> {\r\n        let ret = await this.query(params);\r\n        for (let i in ret) {\r\n            return ret[i];\r\n        }\r\n    }\r\n    async obj(params:any):Promise<any> {\r\n        let ret = await this.table(params);\r\n        if (ret.length > 0) return ret[0];\r\n    }\r\n    async scalar(params:any):Promise<any> {\r\n        let ret = await this.obj(params);\r\n        for (let i in ret) return ret[i];\r\n    }\r\n}\r\n","import {Query} from './query';\r\n\r\nexport class Pending extends Query {\r\n    get typeName(): string { return 'pending';}\r\n    protected queryApiName = 'pending';\r\n}\r\n","import {Tuid, TuidDiv, TuidImport, TuidLocal, TuidBox} from './tuid';\r\nimport {Action} from './action';\r\nimport {Sheet} from './sheet';\r\nimport {Query} from './query';\r\nimport {Book} from './book';\r\nimport {History} from './history';\r\nimport { UqApi, UqData, UnitxApi, appInFrame } from '../../net';\r\nimport { Map } from './map';\r\nimport { Pending } from './pending';\r\nimport { UqApp } from './uqApp';\r\n\r\nexport type FieldType = 'id' | 'tinyint' | 'smallint' | 'int' | 'bigint' | 'dec' | 'char' | 'text'\r\n    | 'datetime' | 'date' | 'time';\r\n\r\nexport function fieldDefaultValue(type:FieldType) {\r\n    switch (type) {\r\n        case 'tinyint':\r\n        case 'smallint':\r\n        case 'int':\r\n        case 'bigint':\r\n        case 'dec':\r\n            return 0;\r\n        case 'char':\r\n        case 'text':\r\n            return '';\r\n        case 'datetime':\r\n        case 'date':\r\n            return '2000-1-1';\r\n        case 'time':\r\n            return '0:00';\r\n    }\r\n}\r\n\r\nexport interface Field {\r\n    name: string;\r\n    type: FieldType;\r\n    tuid?: string;\r\n    arr?: string;\r\n    null?: boolean;\r\n    size?: number;\r\n    owner?: string;\r\n    _tuid: TuidBox;\r\n    /*\r\n    _ownerField: Field;\r\n    _tuid: Tuid;\r\n    _div: TuidDiv;\r\n    */\r\n}\r\nexport interface ArrFields {\r\n    name: string;\r\n    fields: Field[];\r\n    id?: string;\r\n    order?: string;\r\n}\r\nexport interface FieldMap {\r\n    [name:string]: Field;\r\n}\r\nexport interface SchemaFrom {\r\n    owner:string;\r\n    uq:string;\r\n}\r\n\r\nclass TuidsCache {\r\n    private cacheTimer: any;\r\n    private tuids: {[name:string]: Tuid};\r\n    constructor(tuids: {[name:string]: Tuid}) {\r\n        this.tuids = tuids;\r\n    }\r\n\r\n    cacheTuids(defer:number) {\r\n        this.clearCacheTimer();\r\n        this.cacheTimer = setTimeout(this.loadIds, defer);\r\n    }\r\n    private clearCacheTimer() {\r\n        if (this.cacheTimer === undefined) return;\r\n        clearTimeout(this.cacheTimer);\r\n        this.cacheTimer = undefined;\r\n    }\r\n    private loadIds = () => {\r\n        this.clearCacheTimer();\r\n        for (let i in this.tuids) {\r\n            let tuid = this.tuids[i];\r\n            tuid.cacheIds();\r\n        }\r\n    }\r\n}\r\n\r\nexport class Uq {\r\n    private tuids: {[name:string]: Tuid} = {};\r\n    private actions: {[name:string]: Action} = {};\r\n    private sheets: {[name:string]: Sheet} = {};\r\n    private queries: {[name:string]: Query} = {};\r\n    private books: {[name:string]: Book} = {};\r\n    private maps: {[name:string]: Map} = {};\r\n    private histories: {[name:string]: History} = {};\r\n    private pendings: {[name:string]: Pending} = {};\r\n    private tuidsCache: TuidsCache;\r\n    private uqApp: UqApp;\r\n\r\n    name: string;\r\n    uqApi: UqApi;\r\n    id: number;\r\n\r\n    constructor(uqApp: UqApp, uqData: UqData) {\r\n        this.uqApp = uqApp;\r\n        this.tuidsCache = new TuidsCache(this.tuids);\r\n        let {id, uqOwner, uqName, access} = uqData;\r\n        this.id = id;\r\n        this.name = uqOwner + '/' + uqName;\r\n        let hash = document.location.hash;\r\n        let baseUrl = hash===undefined || hash===''? \r\n            'debug/':'tv/';\r\n\r\n        let acc: string[];\r\n        if (access === null || access === undefined || access === '*') {\r\n            acc = [];\r\n        }\r\n        else {\r\n            acc = access.split(';').map(v => v.trim()).filter(v => v.length > 0);\r\n        }\r\n        if (this.name === '$$$/$unitx') {\r\n            // 这里假定，点击home link之后，已经设置unit了\r\n            // 调用 UnitxApi会自动搜索绑定 unitx service\r\n            this.uqApi = new UnitxApi(appInFrame.unit);\r\n        }\r\n        else {\r\n            this.uqApi = new UqApi(baseUrl, uqOwner, uqName, acc, true);\r\n        }\r\n        //this.entities = new Uq(this, uqApi, appId);\r\n    }\r\n\r\n    tuid(name:string):Tuid {return this.tuids[name.toLowerCase()]}\r\n    tuidDiv(name:string, div:string):TuidDiv {\r\n        let tuid = this.tuids[name.toLowerCase()]\r\n        return tuid && tuid.div(div.toLowerCase());\r\n    }\r\n    action(name:string):Action {return this.actions[name.toLowerCase()]}\r\n    sheet(name:string):Sheet {return this.sheets[name.toLowerCase()]}\r\n    query(name:string):Query {return this.queries[name.toLowerCase()]}\r\n    book(name:string):Book {return this.books[name.toLowerCase()]}\r\n    map(name:string):Map {return this.maps[name.toLowerCase()]}\r\n    history(name:string):History {return this.histories[name.toLowerCase()]}\r\n    pending(name:string):Pending {return this.pendings[name.toLowerCase()]}\r\n\r\n    sheetFromTypeId(typeId:number):Sheet {\r\n        for (let i in this.sheets) {\r\n            let sheet = this.sheets[i];\r\n            if (sheet.typeId === typeId) return sheet;\r\n        }\r\n    }\r\n\r\n    tuidArr: Tuid[] = [];\r\n    actionArr: Action[] = [];\r\n    sheetArr: Sheet[] = [];\r\n    queryArr: Query[] = [];\r\n    bookArr: Book[] = [];\r\n    mapArr: Map[] = [];\r\n    historyArr: History[] = [];\r\n    pendingArr: Pending[] = [];\r\n\r\n    /*\r\n    private schemaLoaded:boolean = false;\r\n    async loadSchema(): Promise<string> {\r\n        try {\r\n            if (this.schemaLoaded === true) return;\r\n            await this.init();\r\n            await this.loadAccess();\r\n            this.schemaLoaded = true;\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n            return err;\r\n        }\r\n    }*/\r\n\r\n    async init() {\r\n        await this.uqApi.init();\r\n    }\r\n\r\n    async loadAccess() {\r\n        let accesses = await this.uqApi.loadAccess();\r\n        if (accesses === undefined) return;\r\n        this.buildEntities(accesses);\r\n    }\r\n\r\n    async loadEntities() {\r\n        let accesses = await this.uqApi.loadEntities();\r\n        this.buildEntities(accesses);\r\n    }\r\n\r\n    private buildEntities(entities:any) {\r\n        if (entities === undefined) {\r\n            debugger;\r\n        }\r\n        let {access, tuids} = entities;\r\n        this.buildTuids(tuids);\r\n        this.buildAccess(access);\r\n    }\r\n\r\n    async checkAccess() {\r\n        return await this.uqApi.checkAccess();\r\n    }\r\n\r\n    async loadEntitySchema(entityName: string): Promise<any> {\r\n        return await this.uqApi.schema(entityName);\r\n    }\r\n\r\n    getTuid(name:string): Tuid {\r\n        return this.tuids[name];\r\n    }\r\n\r\n    private buildTuids(tuids:any) {\r\n        for (let i in tuids) {\r\n            let schema = tuids[i];\r\n            let {name, typeId, from} = schema;\r\n            let tuid = this.newTuid(i, typeId, from);\r\n            tuid.sys = true;\r\n        }\r\n        for (let i in tuids) {\r\n            let schema = tuids[i];\r\n            let tuid = this.getTuid(i);\r\n            tuid.setSchema(schema);\r\n        }\r\n        for (let i in this.tuids) {\r\n            let tuid = this.tuids[i];\r\n            tuid.buildFieldsTuid();\r\n        }\r\n    }\r\n\r\n    private buildAccess(access:any) {\r\n        for (let a in access) {\r\n            let v = access[a];\r\n            switch (typeof v) {\r\n                case 'string': this.fromType(a, v); break;\r\n                case 'object': this.fromObj(a, v); break;\r\n            }\r\n        }\r\n        /*\r\n        for (let tuid of this.tuidArr) {\r\n            tuid.setProxies(this);\r\n        }*/\r\n    }\r\n\r\n    cacheTuids(defer:number) {\r\n        this.tuidsCache.cacheTuids(defer);\r\n    }\r\n\r\n    newAction(name:string, id:number):Action {\r\n        let action = this.actions[name];\r\n        if (action !== undefined) return action;\r\n        action = this.actions[name] = new Action(this, name, id)\r\n        this.actionArr.push(action);\r\n        return action;\r\n    }\r\n    private newTuid(name:string, id:number, from:SchemaFrom):Tuid {\r\n        let tuid = this.tuids[name];\r\n        if (tuid !== undefined) return tuid;\r\n        if (from !== undefined)\r\n            tuid = new TuidImport(this, name, id, from);\r\n        else\r\n            tuid = new TuidLocal(this, name, id);\r\n        this.tuids[name] = tuid;\r\n        this.tuidArr.push(tuid);\r\n        return tuid;\r\n    }\r\n    newQuery(name:string, id:number):Query {\r\n        let query = this.queries[name];\r\n        if (query !== undefined) return query;\r\n        query = this.queries[name] = new Query(this, name, id)\r\n        this.queryArr.push(query);\r\n        return query;\r\n    }\r\n    private newBook(name:string, id:number):Book {\r\n        let book = this.books[name];\r\n        if (book !== undefined) return book;\r\n        book = this.books[name] = new Book(this, name, id);\r\n        this.bookArr.push(book);\r\n        return book;\r\n    }\r\n    private newMap(name:string, id:number):Map {\r\n        let map = this.maps[name];\r\n        if (map !== undefined) return map;\r\n        map = this.maps[name] = new Map(this, name, id)\r\n        this.mapArr.push(map);\r\n        return map;\r\n    }\r\n    private newHistory(name:string, id:number):History {\r\n        let history = this.histories[name];\r\n        if (history !== undefined) return;\r\n        history = this.histories[name] = new History(this, name, id)\r\n        this.historyArr.push(history);\r\n        return history;\r\n    }\r\n    private newPending(name:string, id:number):Pending {\r\n        let pending = this.pendings[name];\r\n        if (pending !== undefined) return;\r\n        pending = this.pendings[name] = new Pending(this, name, id)\r\n        this.pendingArr.push(pending);\r\n        return pending;\r\n    }\r\n    newSheet(name:string, id:number):Sheet {\r\n        let sheet = this.sheets[name];\r\n        if (sheet !== undefined) return sheet;\r\n        sheet = this.sheets[name] = new Sheet(this, name, id);\r\n        this.sheetArr.push(sheet);\r\n        return sheet;\r\n    }\r\n    private fromType(name:string, type:string) {\r\n        let parts = type.split('|');\r\n        type = parts[0];\r\n        let id = Number(parts[1]);\r\n        switch (type) {\r\n            //case 'uq': this.id = id; break;\r\n            case 'tuid':\r\n                // Tuid should not be created here!;\r\n                //let tuid = this.newTuid(name, id);\r\n                //tuid.sys = false;\r\n                break;\r\n            case 'action': this.newAction(name, id); break;\r\n            case 'query': this.newQuery(name, id); break;\r\n            case 'book': this.newBook(name, id); break;\r\n            case 'map': this.newMap(name, id); break;\r\n            case 'history': this.newHistory(name, id); break;\r\n            case 'sheet':this.newSheet(name, id); break;\r\n            case 'pending': this.newPending(name, id); break;\r\n        }\r\n    }\r\n    private fromObj(name:string, obj:any) {\r\n        switch (obj['$']) {\r\n            case 'sheet': this.buildSheet(name, obj); break;\r\n        }\r\n    }\r\n    private buildSheet(name:string, obj:any) {\r\n        let sheet = this.sheets[name];\r\n        if (sheet === undefined) sheet = this.newSheet(name, obj.id);\r\n        sheet.build(obj);\r\n        /*\r\n        let states = sheet.states;\r\n        for (let p in obj) {\r\n            switch(p) {\r\n                case '#':\r\n                case '$': continue;\r\n                default: states.push(this.createSheetState(p, obj[p])); break;\r\n            }\r\n        }*/\r\n    }\r\n    /*\r\n    private createSheetState(name:string, obj:object):SheetState {\r\n        let ret:SheetState = {name:name, actions:[]};\r\n        let actions = ret.actions;\r\n        for (let p in obj) {\r\n            let action:SheetAction = {name: p};\r\n            actions.push(action);\r\n        }\r\n        return ret;\r\n    }*/\r\n    buildFieldTuid(fields:Field[], mainFields?:Field[]) {\r\n        if (fields === undefined) return;\r\n        for (let f of fields) {\r\n            let {tuid} = f;\r\n            if (tuid === undefined) continue;\r\n            let t = this.getTuid(tuid);\r\n            if (t === undefined) continue;\r\n            f._tuid = t.buildTuidBox();\r\n        }\r\n        for (let f of fields) {\r\n            let {owner} = f;\r\n            if (owner === undefined) continue;\r\n            let ownerField = fields.find(v => v.name === owner);\r\n            if (ownerField === undefined) {\r\n                if (mainFields !== undefined) {\r\n                    ownerField = mainFields.find(v => v.name === owner);\r\n                }\r\n                if (ownerField === undefined) {\r\n                    debugger;\r\n                    throw `owner field ${owner} is undefined`;\r\n                }\r\n            }\r\n            //f._ownerField = ownerField;\r\n            //let {arr} = f;\r\n            let {arr, tuid} = f;\r\n            let t = this.getTuid(ownerField._tuid.tuid.name);\r\n            if (t === undefined) continue;\r\n            let div = t.div(arr || tuid);\r\n            f._tuid = div && div.buildTuidBox(ownerField);\r\n            if (f._tuid === undefined) {\r\n                debugger;\r\n                throw 'owner field ${owner} is not tuid';\r\n            }\r\n        }\r\n    }\r\n    buildArrFieldsTuid(arrFields:ArrFields[], mainFields:Field[]) {\r\n        if (arrFields === undefined) return;\r\n        for (let af of arrFields) {\r\n            let {fields} = af;\r\n            if (fields === undefined) continue;\r\n            this.buildFieldTuid(fields, mainFields);\r\n        }\r\n    }\r\n}\r\n","import { Uq } from './uq';\r\nimport { TuidImport, TuidLocal } from './tuid';\r\n//import { loadAppUqs } from '../../net';\r\n\r\nexport class UqApp {\r\n    name: string;\r\n    id: number;\r\n    appOwner: string;\r\n    appName: string;\r\n    private collection: {[uqName: string]: Uq} = {};\r\n\r\n    constructor(tonvaAppName:string) {\r\n        this.name = name;\r\n        let parts = tonvaAppName.split('/');\r\n        if (parts.length !== 2) {\r\n            throw 'tonvaApp name must be / separated, owner/app';\r\n        }\r\n        this.appOwner = parts[0];\r\n        this.appName = parts[1];\r\n    }\r\n\r\n    addUq(uq: Uq) {\r\n        this.collection[uq.name] = uq;\r\n    }\r\n\r\n    setTuidImportsLocal() {\r\n        for (let i in this.collection) {\r\n            let uq = this.collection[i];\r\n            for (let tuid of uq.tuidArr) {\r\n                if (tuid.isImport === true) {\r\n                    this.setLocal(tuid as TuidImport);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private setLocal(tuidImport: TuidImport) {\r\n        let {from} = tuidImport;\r\n        let uq = this.collection[from.owner + '/' + from.uq];\r\n        if (uq === undefined) {\r\n            //debugger;\r\n            return;\r\n        }\r\n        let tuid = uq.tuid(tuidImport.name);\r\n        if (tuid === undefined) {\r\n            //debugger;\r\n            return;\r\n        }\r\n        if (tuid.isImport === true) {\r\n            //debugger;\r\n            return;\r\n        }\r\n        tuidImport.setFrom(tuid as TuidLocal);\r\n    }\r\n\r\n    /*\r\n    async load(): Promise<string[]> {\r\n        let uqAppData = await loadAppUqs(this.appOwner, this.appName);\r\n        let {id, uqs} = uqAppData;\r\n        this.id = id;\r\n\r\n        let retErrors:string[] = [];\r\n\r\n        let promises: PromiseLike<string>[] = [];\r\n        let promiseChecks: PromiseLike<boolean>[] = [];\r\n        for (let uqData of uqs) {\r\n            //let {id:uqId, uqOwner, uqName, access} = uqData;\r\n            //let uqn = uqOwner + '/' + uqName;\r\n            let uq = new Uq(this, uqData);\r\n            this.collection[uq.name] = uq;\r\n            promises.push(uq.loadSchema());\r\n            promiseChecks.push(uq.checkAccess());\r\n        }\r\n        let results = await Promise.all(promises);\r\n        Promise.all(promiseChecks).then((checks) => {\r\n            for (let c of checks) {\r\n                if (c === false) {\r\n                    //debugger;\r\n                    //nav.start();\r\n                    //return;\r\n                }\r\n            }\r\n        });\r\n        for (let result of results)\r\n        {\r\n            let retError = result; // await cUq.loadSchema();\r\n            if (retError !== undefined) {\r\n                retErrors.push(retError);\r\n                continue;\r\n            }\r\n        }\r\n        if (retErrors.length === 0) return;\r\n        return retErrors;\r\n    }\r\n    */\r\n}\r\n","export * from './uq';\r\nexport * from './entity';\r\nexport * from './action';\r\nexport * from './query';\r\nexport * from './sheet';\r\nexport * from './tuid';\r\nexport * from './book';\r\nexport * from './map';\r\nexport * from './history';\r\nexport * from './pending';\r\nexport * from './uqApp';","import jwtDecode from 'jwt-decode';\r\n\r\nexport interface Unit {\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\nexport interface Guest {\r\n    id: number;             // id = 0\r\n    guest: number;\r\n    token: string;\r\n}\r\n\r\nexport interface User extends Guest {\r\n    id: number;\r\n    name: string;\r\n    nick?: string;\r\n    icon?: string;\r\n}\r\n\r\n/*\r\nexport class UserInNav {\r\n    private user: User;\r\n    constructor(user: User) {\r\n        this.user = user;\r\n    }\r\n    get id():number {return this.user.id}\r\n    get name(): string {return this.user.name}\r\n    get nick(): string {return this.user.nick}\r\n    get icon(): string {return this.user.icon || ('http://' + process.env['REACT_APP_CENTER_HOST'] + '/imgs/Bear-icon.png');}\r\n    get guest(): number {return this.user.guest}\r\n    get token(): string {return this.user.token}\r\n}\r\n*/\r\nexport function decodeUserToken(token: string): User {\r\n    let ret:any = jwtDecode(token);\r\n    let user: User = {\r\n        id: ret.id,\r\n        name: ret.name,\r\n        guest: ret.guest,\r\n        token: token,\r\n    };\r\n    return user;\r\n}\r\n\r\nexport function decodeGuestToken(token: string): Guest {\r\n    let ret:any = jwtDecode(token);\r\n    let guest: Guest = {\r\n        id: 0,\r\n        guest: ret.guest,\r\n        token: token,\r\n    };\r\n    return guest;\r\n}\r\n","import * as React from 'react';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { Rule, FieldRule } from '../form/rules';\r\n\r\nexport abstract class ItemEdit {\r\n    protected name: string;\r\n    protected itemSchema: ItemSchema;\r\n    protected uiItem:UiItem;\r\n    protected value: any;\r\n    protected label: string;\r\n\r\n    @observable protected error: string;\r\n    @observable protected isChanged: boolean = false;\r\n    protected newValue: any;\r\n\r\n    constructor(itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any) {\r\n        this.itemSchema = itemSchema;\r\n        this.uiItem = uiItem\r\n        this.value = value;\r\n        let {name} = itemSchema;\r\n        this.name = name;\r\n        this.label = label;\r\n    }\r\n    async start():Promise<any> {\r\n        return await this.internalStart();\r\n    }\r\n\r\n    protected abstract internalStart():Promise<any>;\r\n\r\n    async end():Promise<any> {\r\n        await this.internalEnd()\r\n    }\r\n\r\n    protected async internalEnd():Promise<void> {nav.pop()}\r\n\r\n    protected verifyValue() {\r\n        if (this.uiItem === undefined) return;\r\n        let {rules} = this.uiItem;\r\n        if (rules === undefined) return;\r\n        let nv = this.newValue;\r\n        function verifyRule(rule:FieldRule, value: any):string {\r\n            let error = rule(nv);\r\n            if (error !== undefined) {\r\n                if (typeof error !== 'object')\r\n                    return error;\r\n                else\r\n                    return JSON.stringify(error);\r\n            }\r\n        }\r\n        if (Array.isArray(rules)) {\r\n            for (let rule of rules) {\r\n                let error = verifyRule(rule as FieldRule, nv);\r\n                if (error !== undefined) {\r\n                    this.error = error;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.error = verifyRule(rules as FieldRule, nv);\r\n        }\r\n    }\r\n}\r\n","export * from './form';\r\nexport * from './multiStep';","import * as React from 'react';\r\nimport { Page, SearchBox, List, Muted, LMR } from '../../../ui';\r\nimport { Tuid, Entity } from '../../uqs';\r\nimport { CLink } from '../link';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CTuidMain, TuidUI } from './cTuid';\r\n\r\nexport class VTuidMain extends VEntity<Tuid, TuidUI, CTuidMain> {\r\n    protected controller: CTuidMain;\r\n    onNew = () => this.event('new');\r\n    onList = () => this.event('list');\r\n    onSearch = async (key:string) => this.event('list', key);\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected entityRender(link: CLink, index: number): JSX.Element {\r\n        return link.render();\r\n    }\r\n\r\n    protected async entityClick(link: CLink) {\r\n        await link.onClick();\r\n    }\r\n\r\n    protected get view() {\r\n        let {label, isImport} = this.controller;\r\n        let newButton:any;\r\n        if (isImport === false) newButton = <button className=\"btn btn-outline-success ml-2\" onClick={this.onNew}>新增</button>;\r\n        let right = <>\r\n            {newButton}\r\n            <button className=\"btn btn-outline-info ml-2\" onClick={this.onList}>全部</button>\r\n        </>;\r\n        let content = <LMR className='m-3' right={right}>\r\n            <SearchBox className=\"w-100\" size=\"md\"\r\n                onSearch={this.onSearch} \r\n                placeholder={'搜索'+label} />\r\n        </LMR>;\r\n        return () => <Page header={label}>\r\n            {content}\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Page, FA } from '../../../ui';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CTuidMain, TuidUI } from './cTuid';\r\nimport { Tuid } from '../../uqs';\r\n\r\nexport type TypeVTuidEdit = typeof VTuidEdit;\r\n\r\nexport class VTuidEdit extends VEntity<Tuid, TuidUI, CTuidMain> {\r\n    private vForm: VForm;\r\n    private id: number;\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        if (param !== undefined) {\r\n            this.id = param.id;\r\n        }\r\n        this.openPage(this.editView);\r\n    }\r\n\r\n    protected get editView() {\r\n        return () => <Page header={(this.id===undefined? '新增':'编辑') + ' - ' + this.label}>\r\n            {this.vForm.render('py-3')}\r\n        </Page>;\r\n    }\r\n\r\n    protected next = async () => {\r\n        this.vForm.reset();\r\n        this.closePage();\r\n    }\r\n\r\n    protected finish = () => {\r\n        this.closePage(2);\r\n        this.event('edit-end');\r\n    }\r\n\r\n    protected resetForm() {\r\n        this.vForm.reset();\r\n    }\r\n\r\n    protected onSubmit = async () => {\r\n        let values = this.vForm.getValues();\r\n        let ret = await this.controller.entity.save(this.id, values);\r\n        let {id} = ret;\r\n        if (id < 0) {\r\n            let {unique} = this.controller.entity;\r\n            if (unique !== undefined) {\r\n                for (let u of unique) {\r\n                    this.vForm.setError(u, '不能重复');\r\n                }\r\n            }\r\n            return;\r\n        }\r\n        if (this.controller.isCalling) {\r\n            this.returnCall(id);\r\n            this.closePage();\r\n            return;\r\n        }\r\n        this.openPageElement(<Page header={this.label + '提交成功'} back=\"none\">\r\n            <div className='m-3'>\r\n                <span className=\"text-success\">\r\n                    <FA name='check-circle' size='lg' /> 成功提交！\r\n                </span>\r\n                <div className='mt-5'>\r\n                    <button className=\"btn btn-primary mr-3\" onClick={this.next}>继续录入</button>\r\n                    <button className=\"btn btn-outline-primary\" onClick={this.finish}>不继续</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n\r\n        this.event('item-changed', {id: this.id, values: values});\r\n        return;\r\n    }\r\n\r\n    //protected view = TuidNewPage;\r\n}\r\n/*\r\nconst TuidNewPage = observer(({vm}:{vm:VmTuidEdit}) => {\r\n    let {label, id, vmForm} = vm;\r\n    return <Page header={(id===undefined? '新增':'编辑') + ' - ' + label}>\r\n        {vmForm.render('mx-3 my-2')}\r\n    </Page>;\r\n});\r\n*/","import { nav, Page, SearchBox, List } from '../../../ui';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Tuid } from '../../uqs';\r\nimport { CTuid, TuidUI } from './cTuid';\r\nimport React from 'react';\r\nimport { RowContent } from '../form/viewModel';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class VTuidSelect extends VEntity<Tuid, TuidUI, CTuid<Tuid>> {\r\n    protected mainRowContent: (row:any) => JSX.Element;\r\n    protected divRowContent: (row:any) => JSX.Element;\r\n\r\n    async open(param?:any): Promise<void> {\r\n        if (param === undefined)\r\n            await this.showMain(param);\r\n        else\r\n            await this.showDiv(param);\r\n    }\r\n\r\n    private async showMain(param) {\r\n        this.mainRowContent = this.ui.rowContent || RowContent;\r\n        await this.controller.searchMain(param);\r\n        this.openPage(this.mainView);\r\n    }\r\n\r\n    private async showDiv(ownerValue: any) {\r\n        let {divs} = this.ui;\r\n        if (divs !== undefined) {\r\n            this.divRowContent = divs[this.entity.name].rowContent;\r\n        }\r\n        if (this.divRowContent === undefined) {\r\n            this.divRowContent = RowContent;\r\n        }\r\n        let divItems = await this.controller.getDivItems(ownerValue);\r\n        this.openPage(this.divView, {items: divItems});\r\n    }\r\n\r\n    protected mainView = observer(() => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearchMain} placeholder={'搜索'+this.label} />;\r\n        return <Page header={header} back=\"close\">\r\n            <List\r\n                items={this.controller.PageItems.items}\r\n                item={{render: this.renderMainRow, onClick: this.clickMainRow}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    });\r\n\r\n    onSearchMain = async (key:string) => {\r\n        await this.controller.searchMain(key);\r\n        //await this.PageItems.first(key);\r\n    }\r\n    renderMainRow = (item:any, index:number):JSX.Element => <this.mainRowContent {...item} />;\r\n    clickMainRow = async (item:any) => {\r\n        this.ceasePage();\r\n        if (this.controller.entity.hasDiv === undefined) {\r\n            this.returnCall(item);\r\n            return;\r\n        }\r\n        await this.showDiv(this.entity.getIdFromObj(item));\r\n    }\r\n\r\n    protected divView = (param:any) => {\r\n        return <Page header=\"选择Div\">\r\n            <List\r\n                items={param.items}\r\n                item={{render: this.renderDivRow, onClick: this.clickDivRow}} />\r\n        </Page>;\r\n    }\r\n    renderDivRow = (item:any, index:number):JSX.Element => <this.divRowContent {...item} />;\r\n    clickDivRow = (item:any) => {\r\n        this.ceasePage();\r\n        this.returnCall(item);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { FA, Page } from '../../../ui';\r\nimport { jsonStringify } from '../../tools';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Tuid } from '../../uqs';\r\nimport { TuidUI, CTuidMain } from './cTuid';\r\n\r\nexport type TypeVTuidView = typeof VTuidView;\r\n\r\nexport class VTuidView extends VEntity<Tuid, TuidUI, CTuidMain> {\r\n    vForm: VForm;\r\n    id: number;\r\n\r\n    protected buildForm(param:any) {\r\n        this.vForm = this.createForm(undefined, param);\r\n    }\r\n\r\n    async open(param:any) {\r\n        this.buildForm(param);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    render(param:any) {\r\n        this.buildForm(param);\r\n        return this.vForm.render();\r\n    }\r\n\r\n    async loadId(id: number) {\r\n        this.id = id;\r\n    }\r\n\r\n    protected next = async () => {\r\n        this.vForm.reset();\r\n        this.closePage();\r\n    }\r\n\r\n    protected finish = () => {\r\n        this.closePage(2);\r\n    }\r\n\r\n    protected resetForm() {\r\n        this.vForm.reset();\r\n    }\r\n\r\n    protected onSubmit = async () => {\r\n        let values = this.vForm.getValues();\r\n        let ret = await this.entity.save(this.id, values);\r\n        if (ret) {\r\n            alert('这里还要判断返回值，先不处理了 \\n' + jsonStringify(ret));\r\n        }\r\n        this.openPage(() => <Page header={this.label + '提交成功'} back=\"none\">\r\n            <div className='m-3'>\r\n                <span className=\"text-success\">\r\n                    <FA name='check-circle' size='lg' /> 成功提交！\r\n                </span>\r\n                <div className='mt-5'>\r\n                    <button className=\"btn btn-primary mr-3\" onClick={this.next}>继续录入</button>\r\n                    <button className=\"btn btn-outline-primary\" onClick={this.finish}>不继续</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n        return;\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n            {this.vForm.render('py-3')}\r\n    </Page>;\r\n}\r\n","import React from 'react';\r\nimport { VTuidView } from './vTuidView';\r\n\r\nexport class VTuidInfo  extends VTuidView {\r\n/*\r\n    async open(param?:any) {\r\n        this.open(this.view);\r\n    }\r\n*/\r\n/*\r\n    private view = () => {\r\n        return <Page>\r\n            TuidInfo\r\n        </Page>\r\n    }\r\n*/\r\n}\r\n","import { PageItems } from '../../../pageItems';\r\nimport { Tuid } from '../../uqs';\r\n\r\nexport class TuidPageItems<T> extends PageItems<T> {\r\n    private tuid: Tuid;\r\n    constructor(tuid: Tuid) {\r\n        super(true);\r\n        this.tuid = tuid;\r\n    }\r\n    protected async load(param:any, pageStart:any, pageSize:number):Promise<any[]> {\r\n        let ret = await this.tuid.search(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:any) {\r\n        this.pageStart = item === undefined? 0 : item.id;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { FA, SearchBox, List, Page, VPage } from '../../../ui';\r\nimport { jsonStringify } from '../../tools';\r\nimport { Tuid, TuidDiv } from '../../uqs';\r\nimport { VEntity } from '../CVEntity';\r\nimport { TuidUI, CTuidMain, CTuidDiv } from './cTuid';\r\nimport { JSONContent, RowContent } from '../form/viewModel';\r\n\r\nexport abstract class VTuidListBase  extends VEntity<Tuid, TuidUI, CTuidMain> {\r\n    protected rowContent: (row:any) => JSX.Element;\r\n    protected ownerId: number;\r\n\r\n    async open(param?:any) {\r\n        this.rowContent = this.ui.rowContent || RowContent;\r\n        //if (this.entity.owner !== undefined) \r\n        this.ownerId = Number(param);\r\n        // 初始查询, key是空的\r\n        //await this.onSearch('');\r\n        await this.controller.searchMain('');\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSearch = async (key:string) => {\r\n        await this.controller.searchMain(key);\r\n        //await this.PageItems.first(key);\r\n    }\r\n    renderRow = (item:any, index:number):JSX.Element => <this.rowContent {...item} />;\r\n\r\n    protected abstract onSelected(item:any): Promise<void>;\r\n    private callOnSelected(item:any) {\r\n        if (this.onSelected === undefined) {\r\n            alert('onSelect is undefined');\r\n            return;\r\n        }\r\n        this.onSelected(item);\r\n    }\r\n    clickRow = (item:any) => {\r\n        this.callOnSelected(item);\r\n    }\r\n    private rowKey = (item:any) => {\r\n        let {id} = item;\r\n        return id;\r\n    }\r\n    protected view = observer(() => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\r\n        /*\r\n        let {owner} = this.entity;\r\n        let ownerTop;\r\n        if (owner !== undefined) {\r\n            let ownerObj = owner.valueFromId(this.ownerId);\r\n            ownerTop = <div>owner: {jsonStringify(ownerObj)}</div>;\r\n        }\r\n        */\r\n        return <Page header={header}>\r\n            {/*ownerTop*/}\r\n            <List\r\n                items={this.controller.PageItems.items}\r\n                item={{render: this.renderRow, onClick: this.clickRow, key:this.rowKey}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    });\r\n}\r\n\r\nexport class VTuidList extends VTuidListBase {\r\n    protected async onSelected(item:any) {\r\n        if (this.controller.isImport === false)\r\n            this.event('edit', item.id);\r\n        else\r\n            this.event('info', item.id);\r\n    }\r\n}\r\n/*\r\nexport abstract class VTuidDivListBase  extends VPage<CTuidDiv> {\r\n    protected ownerId: number;\r\n\r\n    async open(param?:any) {\r\n        //this.PageItems = new TuidPageItems(this.entity);\r\n        if (this.entity.owner !== undefined) this.ownerId = Number(param);\r\n        // 初始查询, key是空的\r\n        //await this.onSearch('');\r\n        await this.controller.searchMain('');\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSearch = async (key:string) => {\r\n        await this.controller.searchMain(key);\r\n        //await this.PageItems.first(key);\r\n    }\r\n    renderRow = (item:any, index:number):JSX.Element => {\r\n        return <div className=\"px-3 py-2\">{jsonStringify(item)}</div>;\r\n    }\r\n\r\n    protected abstract onSelected(item:any): Promise<void>;\r\n    private callOnSelected(item:any) {\r\n        if (this.onSelected === undefined) {\r\n            alert('onSelect is undefined');\r\n            return;\r\n        }\r\n        this.onSelected(item);\r\n    }\r\n    clickRow = (item:any) => {\r\n        this.callOnSelected(item);\r\n    }\r\n\r\n    protected view = observer(() => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\r\n        let {owner} = this.entity;\r\n        let ownerTop;\r\n        if (owner !== undefined) {\r\n            let ownerObj = owner.valueFromId(this.ownerId);\r\n            ownerTop = <div>owner: {jsonStringify(ownerObj)}</div>;\r\n        }\r\n        return <Page header={header}>\r\n            {ownerTop}\r\n            <List\r\n                items={this.controller.PageItems.items}\r\n                item={{render: this.renderRow, onClick: this.clickRow}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    });\r\n}\r\n\r\nexport class VTuidDivList extends VTuidDivListBase {\r\n    protected async onSelected(item:any) {\r\n        this.event('edit', item.id);\r\n    }\r\n}\r\n*/","import _ from 'lodash';\r\nimport { CEntity, EntityUI } from '../CVEntity';\r\nimport { Tuid, TuidDiv } from '../../uqs';\r\nimport { VTuidMain } from './vTuidMain';\r\nimport { VTuidEdit } from './vTuidEdit';\r\nimport { VTuidSelect } from './vTuidSelect';\r\nimport { CUq } from '../cUq/cUq';\r\n//import { CLink } from '../link';\r\nimport { VTuidInfo } from './vTuidInfo';\r\nimport { TuidPageItems } from './pageItems';\r\nimport { VTuidList } from './vTuidList';\r\nimport { PageItems } from '../../../pageItems';\r\n//import { Controller } from 'ui';\r\n\r\nexport interface TuidUI extends EntityUI {\r\n    CTuidMain?: typeof CTuidMain;\r\n    CTuidEdit?: typeof CTuidEdit;\r\n    CTuidList?: typeof CTuidList;\r\n\r\n    CTuidSelect?: typeof CTuidSelect;\r\n    CTuidInfo?: typeof CTuidInfo;\r\n    content?: React.StatelessComponent<any>;\r\n    rowContent?: React.StatelessComponent<any>;\r\n    divs?: {\r\n        [div:string]: {\r\n            CTuidSelect?: typeof CTuidSelect;\r\n            content?: React.StatelessComponent<any>;\r\n            rowContent?: React.StatelessComponent<any>;\r\n        }\r\n    }\r\n}\r\n\r\nexport abstract class CTuid<T extends Tuid> extends CEntity<T, TuidUI> {\r\n    PageItems:PageItems<any>;\r\n\r\n    protected buildPageItems():PageItems<any> {\r\n        return new TuidPageItems(this.entity);\r\n    }\r\n\r\n    async searchMain(key:string) {\r\n        if (this.PageItems === undefined) {\r\n            this.PageItems = this.buildPageItems();\r\n        }\r\n        if (key !== undefined) await this.PageItems.first(key);\r\n    }\r\n\r\n    async getDivItems(ownerId:number):Promise<any[]> {\r\n        let ret = await this.entity.searchArr(ownerId, undefined, 0, 1000);\r\n        return ret;\r\n    }\r\n}\r\n\r\nexport abstract class CTuidBase extends CTuid<Tuid> {\r\n    constructor(cUq: CUq, entity:Tuid, ui: TuidUI, res:any) {\r\n        super(cUq, entity, ui, res);\r\n    }\r\n    \r\n    from():CTuidBase {\r\n        let ret = this; // this.entity.cFrom();\r\n        if (ret === undefined) return this;\r\n        return ret;\r\n    }\r\n\r\n    cUqFrom():CUq {\r\n        return this.cUq; // this.entity.cUqFrom();\r\n    }\r\n    cEditFrom(): CTuidEdit {\r\n        let cUq = this.cUq; // this.entity.cUqFrom();\r\n        return cUq.cTuidEditFromName(this.entity.name);\r\n    }\r\n    cInfoFrom(): CTuidInfo {\r\n        let cUq = this.cUq; // this.entity.cUqFrom();\r\n        return cUq.cTuidInfoFromName(this.entity.name);\r\n    }\r\n    cSelectFrom(): CTuidSelect {\r\n        let cUq = this.cUq;// this.entity.cUqFrom();\r\n        return cUq.cTuidSelectFromName(this.entity.name);\r\n    }\r\n\r\n    getLable(tuid:Tuid):string {\r\n        if (tuid === this.entity) return this.label;\r\n        let {name} = tuid;\r\n        let {arrs} = this.res;\r\n        if (arrs !== undefined) {\r\n            let arr = arrs[name];\r\n            if (arr !== undefined) {\r\n                let label = arr.label;\r\n                if (label !== undefined) return label;\r\n            }\r\n        }\r\n        return name;\r\n    }\r\n\r\n    isImport: boolean;\r\n\r\n    protected get VTuidMain():typeof VTuidMain {return VTuidMain}\r\n    protected get VTuidEdit():typeof VTuidEdit {return VTuidEdit}\r\n    protected get VTuidList():typeof VTuidList {return VTuidList}\r\n\r\n    protected async internalStart(param?:any):Promise<void> {\r\n        this.isImport = this.entity.isImport;\r\n        await this.openVPage(this.VTuidMain);\r\n    }\r\n\r\n    protected async onEvent(type:string, value:any) {\r\n        //let v: TypeVPage<CTuidMain>;\r\n        switch (type) {\r\n            default: return;\r\n            case 'new': await this.onNew(); break;\r\n            case 'list': await this.onList(); break;\r\n            case 'edit': await this.onEdit(value); return;\r\n            case 'item-changed': this.itemChanged(value); return;\r\n            case 'info': \r\n                let cTuidInfo = new CTuidInfo(this.cUq, this.entity, this.ui, this.res);\r\n                await cTuidInfo.start(value);\r\n                return;\r\n        }\r\n        //await this.openVPage(v, value);\r\n    }\r\n\r\n    protected async edit(values:any) {\r\n        let cTuidEdit = this.ui && this.ui.CTuidEdit;\r\n        if (cTuidEdit === undefined) {\r\n            await this.openVPage(this.VTuidEdit, values);\r\n        }\r\n        else {\r\n            await (new cTuidEdit(this.cUq, this.entity, this.ui, this.res)).start(values);\r\n        }\r\n    }\r\n\r\n    private async onNew() {\r\n        await this.edit(undefined);\r\n    }\r\n\r\n    private async onList() {\r\n        let cTuidList = this.ui && this.ui.CTuidList;\r\n        if (cTuidList === undefined) {\r\n            await this.openVPage(this.VTuidList, undefined);\r\n        }\r\n        else {\r\n            await (new cTuidList(this.cUq, this.entity, this.ui, this.res)).start(undefined);\r\n        }\r\n    }\r\n\r\n    protected async onEdit(id:number) {\r\n        let values:any = undefined;\r\n        if (id !== undefined) {\r\n            values = await this.entity.load(id);\r\n        }\r\n        this.edit(values);\r\n        //await this.openVPage(this.VTuidEdit, values);\r\n    }\r\n\r\n    private itemChanged({id, values}:{id:number, values: any}) {\r\n        if (this.PageItems === undefined) return;\r\n        let items = this.PageItems.items;\r\n        let item = items.find(v => v.id === id);\r\n        if (item !== undefined) {\r\n            _.merge(item, values);\r\n        }\r\n    }\r\n}\r\n\r\nexport class CTuidMain extends CTuidBase {\r\n    protected async internalStart(param?:any):Promise<void> {\r\n        this.isImport = this.entity.isImport;\r\n        await this.openVPage(this.VTuidMain);\r\n    }\r\n\r\n}\r\n\r\nexport class CTuidEdit extends CTuidBase {\r\n    protected async internalStart(id:number):Promise<void> {\r\n        this.isImport = this.entity.isImport;\r\n        if (typeof(id) === 'number') {\r\n            await this.onEdit(id);\r\n        }\r\n        else {\r\n            await this.edit(id);\r\n        }\r\n    }\r\n\r\n    protected async edit(values:any) {\r\n        await this.openVPage(this.VTuidEdit, values);\r\n    }\r\n}\r\n\r\nexport class CTuidList extends CTuidBase {\r\n    protected async internalStart(id:number):Promise<void> {\r\n        this.isImport = this.entity.isImport;\r\n        await this.openVPage(this.VTuidList);\r\n    }\r\n}\r\n\r\nexport class CTuidDiv extends CTuid<Tuid> {\r\n    protected async internalStart():Promise<void> {\r\n        alert('tuid div: ' + '??');\r\n    }\r\n}\r\n\r\nexport class CTuidSelect extends CTuid<Tuid> {\r\n    protected async internalStart(param?: any):Promise<void> {\r\n        await this.openVPage(this.VTuidSelect, param);\r\n    }\r\n    protected async beforeStart():Promise<boolean> {\r\n        //if (await super.beforeStart() === false) return false;\r\n        await this.entity.loadSchema();\r\n        if (this.PageItems !== undefined) this.PageItems.reset();\r\n        return true;\r\n    }\r\n    protected get VTuidSelect():typeof VTuidSelect {return VTuidSelect}\r\n    idFromItem(item:any) {\r\n        return item.id;\r\n    }\r\n}\r\n\r\nexport class CTuidInfo extends CTuid<Tuid> {\r\n    protected async internalStart(id: any):Promise<void> {\r\n        let data = await this.entity.load(id)\r\n        await this.openVPage(this.VTuidInfo, data);\r\n    }\r\n    protected get VTuidInfo():typeof VTuidInfo {return VTuidInfo}\r\n}\r\n","export * from './cTuid';\r\nexport * from './vTuidMain';\r\nexport * from './vTuidEdit';\r\nexport * from './vTuidInfo';\r\nexport * from './vTuidView';\r\nexport * from './vTuidSelect';\r\n","import * as React from 'react';\r\nimport { VField } from './vField';\r\nimport { VArr } from './vArr';\r\nimport { VSubmit } from './vSubmit';\r\n\r\nexport abstract class VBand {\r\n    protected label: string;\r\n    protected view = () => <div />;\r\n\r\n    constructor(label:string) {\r\n        this.label = label;\r\n    }\r\n\r\n    render():JSX.Element {\r\n        //text-sm-right\r\n        return <div key={this.key} className=\"px-3\">\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-sm-2 col-form-label\">\r\n                    {this.label}\r\n                </label>\r\n                <div className=\"col-sm-10\">\r\n                    {this.renderContent()}\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    setAddRow(addRow:()=>Promise<void>) {}\r\n    get key() {return this.label}\r\n    public getVFields():VField[] {return;}\r\n    public getVArr():VArr {return;}\r\n    public getVSubmit():VSubmit {return;}\r\n\r\n    protected renderContent():JSX.Element {\r\n        return <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">content</div>;\r\n    }\r\n}\r\n\r\nexport interface FieldRes {\r\n    label: string;\r\n    placeHolder: string;\r\n    suffix: string;\r\n}\r\nexport class VFieldBand extends VBand {\r\n    protected vField:VField;\r\n    constructor(label:string, vField:VField) {\r\n        super(label);\r\n        this.vField = vField;\r\n    }\r\n\r\n    get key() {return this.vField.name}\r\n    public getVFields():VField[] {return [this.vField];}\r\n\r\n    protected renderContent():JSX.Element {\r\n        return this.vField.render();\r\n        /*\r\n        <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">\r\n            {this.vField.render()}\r\n        </div>;*/\r\n    }\r\n}\r\n\r\nexport class VArrBand extends VBand {\r\n    protected vArr:VArr;\r\n    constructor(label:string, vArr:VArr) {\r\n        super(label);\r\n        this.vArr = vArr;\r\n    }\r\n\r\n    setAddRow(addRow:()=>Promise<void>) {this.vArr.setAddRow(addRow)}\r\n    get key() {return this.vArr.name}\r\n    public getVArr():VArr {return this.vArr;}\r\n\r\n    render():JSX.Element {\r\n        return <React.Fragment key={this.key}>\r\n            {this.vArr && this.vArr.render()}\r\n        </React.Fragment>;\r\n    }\r\n}\r\n\r\nexport class VFieldsBand extends VBand {\r\n    protected vFields: VField[];\r\n    constructor(label:string, vFields:VField[]) {\r\n        super(label);\r\n        this.vFields = vFields;\r\n    }\r\n\r\n    get key() {return this.vFields[0].name}\r\n    public getVFields():VField[] {return this.vFields;}\r\n\r\n    protected renderContent():JSX.Element {\r\n        return <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">\r\n            fields\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class VSubmitBand extends VBand {\r\n    protected vSubmit: VSubmit;\r\n    constructor(vSubmit:VSubmit) {\r\n        super(undefined);\r\n        this.vSubmit = vSubmit;\r\n    }\r\n\r\n    get key() {return '$submit'}\r\n\r\n    public getVSubmit():VSubmit {return this.vSubmit;}\r\n\r\n    render():JSX.Element {\r\n        return <div key=\"$submit\" className=\"px-3\">\r\n            <div className=\"form-group row\">\r\n                <div className=\"offset-sm-2 col-sm-10\">\r\n                    {this.vSubmit.render()}\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames'\r\nimport { ViewModel } from './viewModel';\r\nimport { VForm } from './vForm';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\n\r\nexport class VSubmit extends ViewModel {\r\n    private vForm: VForm;\r\n    constructor(vForm: VForm) {\r\n        super();\r\n        this.vForm = vForm;\r\n        this.caption = this.vForm.submitCaption;\r\n        this.className = 'btn btn-primary w-25';\r\n    }\r\n    @observable caption: string;\r\n    @observable className: string;\r\n\r\n    private onClickSubmit = async () => {\r\n        this.vForm.submit();\r\n    }\r\n\r\n    protected view = observer(() => {\r\n        let {isOk} = this.vForm;\r\n        return <button type=\"button\" \r\n            onClick={this.onClickSubmit}\r\n            className={this.className}\r\n            disabled={isOk === false}>\r\n            {this.caption}\r\n        </button>;\r\n    });\r\n}","\r\nexport abstract class Rule {\r\n    abstract check(defy:string[], value:any);\r\n}\r\n\r\nexport class RuleRequired extends Rule {\r\n    check(defy:string[], value:any) {\r\n        switch (typeof value) {\r\n            default:\r\n            case 'boolean': return;\r\n            case 'object':\r\n                if (value !== null) return;\r\n                break;\r\n            case 'string':\r\n                if ((value as string).trim().length > 0) return;\r\n                break;\r\n            case 'number':\r\n                if ((value as number) !== NaN) return;\r\n                break;\r\n            case 'undefined':\r\n                break;\r\n        }\r\n        defy.push('不能为空');\r\n    }\r\n}\r\n\r\nexport class RuleNum extends Rule {\r\n    check(defy:string[], value:any) {\r\n        if (value === undefined || value === null) return;\r\n        let n = Number(value);\r\n        if (n === NaN) defy.push('必须是数字');\r\n    }\r\n}\r\n\r\nexport class RuleInt extends Rule {\r\n    check(defy:string[], value:any) {\r\n        if (value === undefined || value === null) return;\r\n        let n = Number(value);\r\n        if (Number.isNaN(n) === true || Number.isInteger(n) === false) {\r\n            defy.push('必须是整数');\r\n        }\r\n    }\r\n}\r\n\r\nexport class RuleMin extends RuleNum {\r\n    constructor(min: number) {\r\n        super();\r\n        this.min = min;\r\n    }\r\n    min: number;\r\n    check(defy:string[], value:any) {\r\n        super.check(defy, value);\r\n        if (Number(value) < this.min) defy.push('不能小于' + this.min);\r\n    }\r\n}\r\n\r\nexport class RuleMax extends RuleNum {\r\n    constructor(max: number) {\r\n        super();\r\n        this.max = max;\r\n    }\r\n    max: number;\r\n    check(defy:string[], value:any) {\r\n        super.check(defy, value);\r\n        if (Number(value) > this.max) defy.push('不能小于' + this.max);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { computed, action } from 'mobx';\r\nimport classNames from 'classnames';\r\nimport { observer } from 'mobx-react';\r\nimport { FA } from '../../../../ui';\r\nimport { ViewModel } from '../viewModel';\r\nimport { VForm, FormMode } from '../vForm';\r\nimport { Rule, RuleRequired, RuleInt, RuleNum, RuleMin, RuleMax } from '../rule';\r\nimport { Field } from '../../../uqs';\r\nimport { FieldRes } from '../vBand';\r\nimport { FieldUI, FieldInputUI, FieldStringUI, FieldNumberUI } from '../../formUI';\r\n\r\nexport abstract class VField extends ViewModel {\r\n    protected form: VForm;\r\n    protected fieldUI: FieldUI;\r\n    protected fieldRes:FieldRes;\r\n    protected field: Field;\r\n    protected rules: Rule[];\r\n    constructor(form:VForm, field:Field, fieldUI: FieldUI, fieldRes:FieldRes) {\r\n        super();\r\n        this.form = form;\r\n        this.field = field;\r\n        this.name = field.name;\r\n        this.fieldUI = fieldUI || {} as any;\r\n        this.fieldRes = fieldRes || {} as any;\r\n        this.init();\r\n    }\r\n\r\n    name: string;\r\n\r\n    protected init() {\r\n        this.buildRules();\r\n    }\r\n\r\n    protected buildRules() {\r\n        this.rules = [];\r\n        let {required} = this.fieldUI;\r\n        if (required === true || this.field !== undefined && this.field.null === false) {\r\n            this.rules.push(new RuleRequired);\r\n        }\r\n    }\r\n\r\n    @computed get checkRules(): string[] {\r\n        let defy = [];\r\n        for (let r of this.rules) r.check(defy, this.value);\r\n        return defy;\r\n    }\r\n\r\n    @computed get isOk() {\r\n        if (this.rules.length === 0) return true;\r\n        let defy = this.checkRules;\r\n        return defy.length === 0;\r\n    }\r\n\r\n    @computed get value() { return this.form.values[this.name]; }\r\n    setValue(v:any) {\r\n        this.form.values[this.name]=v; \r\n    }\r\n    get error() { return this.form.errors[this.name]; }\r\n    set error(err:any) { this.form.errors[this.name]=err; }\r\n    protected parse(str:string):any {return str;}\r\n    get readonly():boolean {\r\n        let {mode} = this.form;\r\n        return mode === FormMode.readonly || \r\n            mode === FormMode.edit && this.fieldUI.editable === false;\r\n    }\r\n}\r\n\r\nexport class VUnknownField extends VField {\r\n    protected view = () => {\r\n        //let {name, type} = this.fieldUI;\r\n        let type='', name = '';\r\n        return <input type=\"text\" className=\"form-control form-control-plaintext border border-info rounded bg-light\"\r\n            placeholder={'unkown control: ' + type + '-' + name} />;\r\n    }\r\n}\r\n\r\nexport abstract class VInputControl extends VField {\r\n    protected fieldUI: FieldInputUI;\r\n    protected input: HTMLInputElement;\r\n\r\n    protected inputType:string;\r\n    protected get maxLength():number {return}\r\n\r\n    protected renderError = (className:string) => {\r\n        let {errors} = this.form;\r\n        let error = errors[this.name];\r\n        if (error === undefined) return;\r\n        return <div className={className}><FA name=\"exclamation-circle\" /> {error}</div>\r\n    }\r\n\r\n    /*\r\n    get value() {\r\n        return super.value;\r\n    }*/\r\n    setValue(v:any) {\r\n        super.setValue(v); this.setInputValue(); \r\n    }\r\n\r\n    protected ref = (input:HTMLInputElement) => {\r\n        this.input = input;\r\n        this.setInputValue();\r\n    }\r\n\r\n    protected setInputValue() {\r\n        if (!this.input) return;\r\n        let v = this.value;\r\n        this.input.value = v === null || v === undefined? '' : v;\r\n    }\r\n\r\n    protected onFocus = () => {\r\n        this.error = undefined;\r\n    }\r\n\r\n    protected onBlur = () => {\r\n        let defy = this.checkRules;\r\n        if (defy.length > 0) {\r\n            this.error = defy[0];\r\n        }\r\n        this.form.computeFields();\r\n    }\r\n\r\n    protected onChange = (evt: React.ChangeEvent<any>) => {\r\n        let v = this.parse(evt.currentTarget.value);\r\n        if (v === null) {\r\n            return;\r\n        }\r\n        this.setValue(v);\r\n    }\r\n\r\n    protected onKeyPress: (event:React.KeyboardEvent<HTMLInputElement>) => void;\r\n    \r\n    protected view = observer(() => {\r\n        let {required} = this.fieldUI;\r\n        let {placeHolder, suffix} = this.fieldRes;\r\n        let ctrlCN = ['form-control', 'form-control-input'];\r\n        let errCN = 'text-danger small mt-1 mx-2';\r\n    \r\n        let redDot;\r\n        let input;\r\n        if (this.readonly === true) {\r\n            input = <input className={classNames(ctrlCN, 'bg-light')}\r\n                ref={this.ref}\r\n                type={this.inputType}\r\n                readOnly={true}\r\n            />;\r\n        }\r\n        else {\r\n            input = <input className={classNames(ctrlCN)}\r\n                ref={this.ref}\r\n                type={this.inputType}\r\n                onFocus={this.onFocus}\r\n                onBlur={this.onBlur}\r\n                onChange={this.onChange}\r\n                placeholder={placeHolder}\r\n                readOnly={false}\r\n                maxLength={this.maxLength}\r\n                onKeyPress={this.onKeyPress}\r\n            />;\r\n            if (required === true || this.field.null === false) {\r\n                redDot = <RedMark />;\r\n            }\r\n        }\r\n\r\n        let inputGroup;\r\n        if (suffix === undefined)\r\n            inputGroup = input;\r\n        else\r\n            inputGroup = <div className=\"input-group\">\r\n                {input}\r\n                <div className=\"input-group-append\">\r\n                    <span className=\"input-group-text\">{suffix}</span>\r\n                </div>\r\n            </div>;\r\n\r\n        return <>\r\n            {redDot}\r\n            {inputGroup}\r\n            {this.renderError(errCN)}\r\n        </>\r\n    });\r\n}\r\n\r\nexport const RedMark = () => <b style={{color:'red', position:'absolute', left:'0.1em', top:'0.5em'}}>*</b>;\r\n\r\nexport class VStringField extends VInputControl {\r\n    protected fieldUI: FieldStringUI;\r\n    protected inputType:string = 'text';\r\n    protected get maxLength():number {return this.field.size}\r\n}\r\n\r\nconst KeyCode_Neg = 45;\r\nconst KeyCode_Dot = 46;\r\n\r\nexport abstract class VNumberControl extends VInputControl {\r\n    protected fieldUI: FieldNumberUI;\r\n    protected extraChars: number[];\r\n\r\n    protected init() {\r\n        super.init();\r\n        this.extraChars = [];\r\n        if (this.fieldUI !== undefined) {\r\n            let {min, max} = this.fieldUI;\r\n            if (min !== undefined) {\r\n                //this.rules.push((v:number) => {if (v === undefined) return; if (v<min) return ErrMin + min; return true;});\r\n                if (min < 0) this.extraChars.push(KeyCode_Neg);\r\n            }\r\n            else {\r\n                this.extraChars.push(KeyCode_Neg);\r\n            }\r\n    \r\n            if (max !== undefined) {\r\n                //this.rules.push((v:number) => {if (v === undefined) return; if (v>max) return ErrMax + max; return true});\r\n            }\r\n        }\r\n        switch (this.field.type) {\r\n            case 'dec':\r\n            case 'bigint':\r\n            case 'int':\r\n            case 'smallint':\r\n            case 'tinyint':\r\n                this.extraChars.push(KeyCode_Dot); break;\r\n        }\r\n    }\r\n\r\n    protected buildRules() {\r\n        super.buildRules();\r\n        this.rules.push(new RuleNum);\r\n        let {min, max} = this.fieldUI;\r\n        if (min !== undefined) this.rules.push(new RuleMin(min));\r\n        if (max !== undefined) this.rules.push(new RuleMax(max));\r\n    }\r\n\r\n    inputType:string = 'number';\r\n\r\n    protected parse(text:string):any {\r\n        try {\r\n            if (text.trim().length === 0) return undefined;\r\n            let ret = Number(text);\r\n            return (ret === NaN)? null : ret;\r\n        }\r\n        catch {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    protected setInputValue() {\r\n        if (!this.input) return;\r\n        let v = this.value;\r\n        if (this.parse(this.input.value) == v) return;\r\n        this.input.value = v === null || v === undefined? '' : v;\r\n    }\r\n\r\n    protected onKeyPress = (event:React.KeyboardEvent<HTMLInputElement>) => {\r\n        let ch = event.charCode;\r\n        if (ch === 8 || ch === 0 || ch === 13 || ch >= 48 && ch <= 57) return;\r\n        if (this.extraChars !== undefined) {\r\n            if (this.extraChars.indexOf(ch) >= 0) {\r\n                switch (ch) {\r\n                    case KeyCode_Dot: this.onKeyDot(); break;\r\n                    case KeyCode_Neg: this.onKeyNeg(); event.preventDefault(); break;\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    private onKeyDot() {\r\n        let v = this.input.value;\r\n        let p = v.indexOf('.');\r\n        if (p >= 0) this.input.value = v.replace('.', '');\r\n    }\r\n    private onKeyNeg() {\r\n        let v = this.input.value;\r\n        let p = v.indexOf('-');\r\n        if (p >= 0) v = v.replace('-', '');\r\n        else v = '-'+v;\r\n        this.input.value = v;\r\n    }\r\n}\r\n\r\nexport class VIntField extends VNumberControl {\r\n    protected buildRules() {\r\n        super.buildRules();\r\n        this.rules.push(new RuleInt);\r\n    }\r\n}\r\n\r\nexport class VDecField extends VNumberControl {\r\n}\r\n\r\nexport class VTextField extends VStringField {\r\n\r\n}\r\n\r\nexport class VDateTimeField extends VStringField {\r\n\r\n}\r\n\r\nexport class VDateField extends VStringField {\r\n\r\n}\r\n","import React from 'react';\r\nimport { VField } from './vField';\r\nimport { Field } from '../../../uqs';\r\nimport { VForm } from '../vForm';\r\nimport { observer } from 'mobx-react';\r\nimport { FieldRes } from '../vBand';\r\n\r\nexport class VComputeField extends VField {\r\n    constructor(form:VForm, field: Field, fieldRes: FieldRes) {\r\n        super(form, field, undefined, fieldRes);\r\n    }\r\n    protected view = observer(() => {\r\n        let value = this.form.values[this.field.name];\r\n        let {placeHolder, suffix} = this.fieldRes;\r\n        let ctrlCN = 'form-control form-control-input bg-light';\r\n        if (value === null) value = '';\r\n        let input = <input className={ctrlCN}\r\n            type=\"text\"\r\n            placeholder={placeHolder}\r\n            readOnly={true}\r\n            value={value}/>\r\n        let inputGroup;\r\n        if (suffix === undefined)\r\n            inputGroup = input;\r\n        else\r\n            inputGroup = <div className=\"input-group\">\r\n                {input}\r\n                <div className=\"input-group-append\">\r\n                    <span className=\"input-group-text\">{suffix}</span>\r\n                </div>\r\n            </div>;\r\n        return inputGroup;\r\n        /*\r\n            return <div \r\n            className=\"form-control form-control-plaintext border border-info rounded bg-light cursor-pointer\">\r\n            {value} &nbsp;\r\n        </div>;\r\n        */\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { IObservableArray, observable } from 'mobx';\r\nimport _ from 'lodash';\r\nimport { Page, nav, List, FA, Muted } from '../../../ui';\r\nimport { ViewModel, RowContent, TypeContent, JSONContent } from './viewModel';\r\nimport { ArrFields, Field } from '../../uqs';\r\nimport { VForm, FieldInputs, FormMode } from './vForm';\r\nimport { FormArr } from '../formUI';\r\n\r\nexport type ArrEditRow = (initValues:any, onRowChanged:(rowValues:any)=>void) => Promise<void>;\r\n\r\nexport class VArr extends ViewModel {\r\n    protected mode: FormMode;\r\n    protected label: any;\r\n    protected header: any;\r\n    protected footer: any;\r\n    protected rowValues: any;                 // 仅仅用来判断是不是新增，undefined则是新增\r\n    protected onEditRow: ArrEditRow;\r\n    protected ownerForm:VForm;\r\n    protected vForm:VForm;\r\n    protected rowContent:TypeContent;\r\n    protected none: string;\r\n    protected newSubmitCaption: string;\r\n    protected editSubmitCaption: string;\r\n    protected addRow: ()=>Promise<void>;\r\n\r\n    name:string;\r\n    list: IObservableArray<any>;\r\n\r\n    constructor(ownerForm:VForm, arr:ArrFields, onEditRow?:ArrEditRow) {\r\n        super();\r\n        this.ownerForm = ownerForm;\r\n        let {name, fields} = arr;\r\n        this.name = name;\r\n        let {ui, res, mode, inputs, values} = ownerForm;\r\n        let arrsRes = res.arrs;\r\n        let arrRes = arrsRes !== undefined? arrsRes[name] : {};\r\n        let {label, none, newSubmit, editSubmit} = arrRes;\r\n        this.none = none || ownerForm.none;\r\n        this.newSubmitCaption = newSubmit || ownerForm.arrNewCaption;\r\n        this.editSubmitCaption = editSubmit || ownerForm.arrEditCaption;\r\n        this.label = label || name;\r\n        let arrUI = ((ui && ui.items[name]) || {}) as FormArr;\r\n        this.rowContent = arrUI.rowContent;// || JSONContent;\r\n        this.mode = mode;\r\n        if (this.onEditRow === undefined) {\r\n            this.vForm = new VForm({\r\n                fields: fields,\r\n                arrs: undefined,\r\n                ui: arrUI,\r\n                res: arrRes,\r\n                inputs: inputs[name] as FieldInputs,\r\n                none: ownerForm.none,\r\n                submitCaption: 'submit',\r\n                arrNewCaption: undefined,\r\n                arrEditCaption: undefined,\r\n                arrTitleNewButton: undefined,\r\n                mode: mode,\r\n            }, \r\n            mode===FormMode.readonly? undefined: this.onSubmit);\r\n        }\r\n        else {\r\n            this.onEditRow = onEditRow;\r\n        }\r\n        this.list = values[name];\r\n    }\r\n\r\n    reset() {\r\n        this.vForm.reset();\r\n        this.list.clear();\r\n    }\r\n\r\n    setAddRow(addRow:()=>Promise<void>) {\r\n        this.addRow = addRow;\r\n    }\r\n\r\n    protected rowPage = () => {\r\n        return <Page header={this.label} back=\"close\">\r\n            {this.vForm.render('py-3')}\r\n        </Page>\r\n    }\r\n    private onSubmit = async () => {\r\n        let {valueBoxs} = this.vForm;\r\n        await this.onRowChanged(valueBoxs);\r\n    }\r\n\r\n    private onRowChanged = async (rowValues:any) => {\r\n        if (this.rowValues === undefined) {\r\n            rowValues.$owner = this.ownerForm.values;\r\n            this.list.push(rowValues);\r\n            if (this.onEditRow === undefined)\r\n                this.vForm.reset();\r\n            else\r\n                await this.onEditRow(undefined, this.onRowChanged);\r\n        }\r\n        else {\r\n            _.merge(this.rowValues, rowValues);\r\n            if (this.onEditRow === undefined) nav.pop();\r\n        }\r\n    }\r\n\r\n    private renderItem = (item:any, index:number) => {\r\n        if (this.rowContent === undefined)\r\n            return <div className=\"px-3 py-2\"><JSONContent {...item} /></div>\r\n        return <this.rowContent {...item} />;\r\n    }\r\n    private showRow = async (rowValues:any):Promise<any> => {\r\n        if (this.onEditRow !== undefined) {\r\n            await this.onEditRow(rowValues, this.onRowChanged);\r\n            return;\r\n        }\r\n        this.vForm.reset();\r\n        if (rowValues !== undefined) this.vForm.setValues(rowValues);\r\n        nav.push(<this.rowPage />);\r\n    }\r\n    private editRow = async (rowValues:any): Promise<void> => {\r\n        this.rowValues = rowValues;\r\n        let {vSubmit} = this.vForm;\r\n        if (vSubmit !== undefined) {\r\n            vSubmit.caption = this.editSubmitCaption;\r\n            vSubmit.className = 'btn btn-outline-success';\r\n        }\r\n        this.vForm.mode = this.ownerForm.mode;\r\n        await this.showRow(rowValues);\r\n    }\r\n    private internalAddRow = async () => {\r\n        this.rowValues = undefined;\r\n        let {vSubmit} = this.vForm;\r\n        vSubmit.caption = this.newSubmitCaption;\r\n        vSubmit.className = 'btn btn-outline-success';\r\n        this.vForm.reset();\r\n        this.vForm.mode = FormMode.new;\r\n        await this.showRow(undefined);\r\n    }\r\n\r\n    protected view = () => {\r\n        let button;\r\n        if (this.addRow !== undefined || this.mode !== FormMode.readonly) {\r\n            button = <button onClick={this.addRow || this.internalAddRow}\r\n                type=\"button\" \r\n                className=\"btn btn-link p-0\">\r\n                {this.ownerForm.arrTitleNewButton}\r\n            </button>;\r\n        }\r\n        let header = this.header || <div className=\"px-3 bg-light small\" style={{paddingTop:'1px', paddingBottom:'1px'}}>\r\n            <div className=\"flex-fill align-self-center\">{this.label}</div>\r\n            {button}\r\n        </div>;\r\n        return <List className=\"pb-3\"\r\n            header={header}\r\n            none={<Muted className=\"px-3 py-2\">{this.none}</Muted>}\r\n            items={this.list}\r\n            item={{render: this.renderItem, onClick: this.editRow}} />;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { tv } from '../../../tools';\r\nimport { Field, Tuid, TuidBox } from '../../../uqs';\r\nimport { VField, RedMark } from './vField';\r\nimport { FieldUI } from '../../formUI';\r\nimport { VForm, FieldInput, FormMode } from '../vForm';\r\nimport { FieldRes } from '../vBand';\r\n\r\nconst buttonStyle:React.CSSProperties = {\r\n    textAlign:'left', \r\n    paddingLeft:'0.75rem', \r\n    paddingRight:'0.75rem', \r\n    overflow: 'hidden'\r\n};\r\n\r\nexport class VTuidField extends VField {\r\n    protected vForm: VForm;\r\n    protected input: FieldInput;\r\n    protected tuid: TuidBox;\r\n\r\n    constructor(vForm: VForm, field:Field, fieldUI: FieldUI, fieldRes:FieldRes) {\r\n        super(vForm, field, fieldUI, fieldRes);\r\n        this.tuid = field._tuid;\r\n        this.vForm = vForm;\r\n        this.input = vForm.inputs[field.name] as FieldInput;\r\n    }\r\n\r\n    onClick = async () => {\r\n        if (this.readonly === true) {\r\n            if (!this.value) return;\r\n            await this.tuid.showInfo(); //this.value.id);\r\n            return;\r\n        }\r\n        let id:number;\r\n        if (this.input !== undefined) {\r\n            id = await this.input.select(this.vForm, this.field, this.vForm.getValues());\r\n        }\r\n        else {\r\n            alert('call undefined');\r\n            id = 0;\r\n        }\r\n        this.setValue(this.tuid.boxId(id));\r\n    }\r\n    protected view = observer(() => {\r\n        let {placeHolder} = this.fieldRes;\r\n        let disabled:boolean = false;\r\n        //let {_ownerField} = this.field;\r\n        let {_tuid} = this.field;\r\n        let {ownerField} = _tuid;\r\n        if (ownerField !== undefined) {\r\n            let {name, arr} = ownerField;\r\n            disabled = this.vForm.getValue(name) === null;\r\n        }\r\n        let content;\r\n        if (this.value === null)\r\n            content = <>{placeHolder || this.input.placeHolder}</>;\r\n        else if (typeof this.value === 'object') {\r\n            content = tv(this.value);\r\n        }\r\n        else {\r\n            let idBox = this.tuid.boxId(this.value);\r\n            content = tv(idBox); // idBox.content();\r\n        }\r\n        if (this.readonly === true)\r\n        {\r\n            return <div \r\n                className=\"form-control form-control-plaintext border border-info rounded bg-light cursor-pointer\"\r\n                onClick={this.onClick}>\r\n                {content}\r\n            </div>;\r\n        }\r\n        let {required} = this.fieldUI;\r\n        let redDot = (required === true || this.field.null === false) && <RedMark />;\r\n        return <>\r\n            {redDot}\r\n            <button className=\"form-control btn btn-outline-info\"\r\n                type=\"button\"\r\n                disabled={disabled}\r\n                style={buttonStyle}\r\n                onClick={this.onClick}>\r\n                {content}\r\n            </button>\r\n        </>;\r\n    })\r\n}\r\n","import { VBand, VFieldBand, VArrBand, VFieldsBand, VSubmitBand, FieldRes } from './vBand';\r\nimport { Field, ArrFields } from '../../uqs';\r\nimport { VForm, FormOptions } from './vForm';\r\nimport { FormItems, FieldUI, FormItem } from '../formUI';\r\nimport { VSubmit } from './vSubmit';\r\nimport { VField, buildVField, VComputeField } from './vField';\r\nimport { VArr } from './vArr';\r\nimport { VTuidField } from './vField/vTuidField';\r\n\r\nexport class BandsBuilder {\r\n    private vForm: VForm;\r\n    private onSubmit: (values:any)=>Promise<void>;\r\n    private fields: Field[];\r\n    private arrs: ArrFields[];\r\n    private formItems: FormItems;\r\n    private layout: string[];\r\n    private res: any;\r\n    constructor(vForm:VForm, options: FormOptions, onSubmit: (values:any)=>Promise<void>) {\r\n        this.vForm = vForm;\r\n        this.onSubmit = onSubmit;\r\n        let {fields, arrs, ui, res} = options;\r\n        this.fields = fields;\r\n        this.arrs = arrs;\r\n        if (ui !== undefined) {\r\n            let {items, layout} = ui;\r\n            this.formItems = items;\r\n            this.layout = layout;\r\n        }\r\n        this.res = res;\r\n    }\r\n\r\n    build():VBand[] {\r\n        //return this.bandUIs === undefined? this.bandsOnFly() : this.bandsFromUI();\r\n        return this.layout === undefined? this.bandsOnFly() : this.bandsFromLayout();\r\n    }\r\n\r\n    private resFromName(name:string, res:any):string|FieldRes {\r\n        if (res === undefined) return;\r\n        let {fields} = res;\r\n        if (fields === undefined) return;\r\n        return fields[name] || name;\r\n    }\r\n\r\n    private bandsOnFly():VBand[] {\r\n        let bands:VBand[] = [];\r\n        this.bandsFromFields(bands, this.fields, this.res);\r\n        if (this.arrs !== undefined) {\r\n            for (let arr of this.arrs) bands.push(this.bandFromArr(arr));\r\n        }\r\n        if (this.onSubmit !== undefined) {\r\n            bands.push(new VSubmitBand(new VSubmit(this.vForm)));\r\n        }\r\n        return bands;\r\n    }\r\n\r\n    private bandsFromFields(bands:VBand[], fields:Field[], res:any) {\r\n        if (fields === undefined) return;\r\n        for (let field of fields) bands.push(this.bandFromField(field, res));\r\n    }\r\n\r\n    private bandsFromLayout():VBand[] {\r\n        let bands:VBand[] = [];\r\n        /*\r\n        for (let bandUI of this.bandUIs)  {\r\n            let band = this.bandFromUI(bandUI);\r\n            bands.push(band);\r\n        }\r\n        */\r\n        return bands;\r\n    }\r\n\r\n    /*\r\n    private bandFromUI(bandUI:BandUI):VBand {\r\n        let {band} = bandUI;\r\n        switch (band) {\r\n            default: return this.bandFromFieldUI(bandUI as FieldBandUI);\r\n            case 'arr': return this.bandFromArrUI(bandUI as ArrBandUI);\r\n            case 'fields': return this.bandFromFieldsUI(bandUI as FieldsBandUI);\r\n            case 'submit': return this.bandFromSubmitUI(bandUI as SubmitBandUI);\r\n        }\r\n    }\r\n    \r\n    private bandFromFieldUI(bandUI: FieldBandUI): VFieldBand {\r\n        let {label} = bandUI;\r\n        let vField = this.vFieldFromUI(bandUI);\r\n        return new VFieldBand(label, vField);\r\n    }\r\n    private bandFromArrUI(bandUI: ArrBandUI): VArrBand {\r\n        let {label, name} = bandUI;\r\n        let vArr = this.vArrFromUI(bandUI);\r\n        return new VArrBand(label, vArr);\r\n    }\r\n    private bandFromFieldsUI(bandUI: FieldsBandUI): VFieldsBand {\r\n        let {label, fieldUIs} = bandUI;\r\n        let vFields = fieldUIs.map(v => this.vFieldFromUI(v));\r\n        return new VFieldsBand(label, vFields);\r\n    }\r\n    private bandFromSubmitUI(bandUI: SubmitBandUI): VSubmitBand {\r\n        if (this.onSubmit === undefined) return;\r\n        let vSubmit = new VSubmit(this.vForm);\r\n        return new VSubmitBand(vSubmit);\r\n    }\r\n    */\r\n/*\r\n    private vFieldFromField(field:Field, fieldRes:FieldRes, formItem: FormItem): VField {\r\n        let fieldUI:FieldUI = undefined;\r\n        if (formItem !== undefined) {\r\n            if (typeof formItem === 'function') {\r\n                return new VComputeField(this.vForm, field, fieldRes);\r\n            }\r\n        }\r\n        let ret = buildVField(this.vForm, field, formItem, fieldRes);\r\n        if (ret !== undefined) return ret;\r\n        return new VTuidField(field, fieldUI, fieldRes, this.vForm);\r\n    }\r\n*/\r\n    private bandFromField(field:Field, res:any):VBand {\r\n        let {name} = field;\r\n        let fieldRes:FieldRes;\r\n        let rfn = this.resFromName(name, res);\r\n        let label:string;\r\n        if (typeof rfn === 'object') {\r\n            label = rfn.label;\r\n            fieldRes = rfn;\r\n        }\r\n        else {\r\n            label = rfn as string;\r\n            fieldRes = undefined;\r\n        }\r\n        let vField:VField;\r\n        let formItem:FormItem;\r\n        if (this.formItems !== undefined) formItem = this.formItems[name];\r\n        //let vField = this.vFieldFromField(field, fieldRes as FieldRes, formItem);\r\n        //let fieldUI:FieldUI = undefined;\r\n        if (typeof formItem === 'function') {\r\n            vField = new VComputeField(this.vForm, field, fieldRes);\r\n        }\r\n        else {\r\n            vField = buildVField(this.vForm, field, formItem as FieldUI, fieldRes);\r\n        }\r\n        if (vField === undefined) {\r\n            vField = new VTuidField(this.vForm, field, formItem as FieldUI, fieldRes);\r\n        }\r\n        return new VFieldBand(label || name, vField);\r\n    }\r\n\r\n    private bandFromArr(arr: ArrFields):VBand {\r\n        let {name, fields} = arr;\r\n        //let row = JSONContent;\r\n        //let bands:VBand[] = [];\r\n        //this.bandsFromFields(bands, fields, res);\r\n        let vArr = new VArr(this.vForm, arr); // name, res && res.label || name, row, bands);\r\n        return new VArrBand(name, vArr);\r\n    }\r\n\r\n    /*\r\n    private vFieldFromUI(fieldUI:FieldUI):VField {\r\n        return;\r\n    }\r\n\r\n    private vArrFromUI(arrBandUI:ArrBandUI):VArr {\r\n        return;\r\n    }\r\n    */\r\n}\r\n","import { VField, VIntField, VDecField, VStringField, VTextField, VDateTimeField, VDateField } from './vField';\r\nimport { Field } from '../../../uqs';\r\nimport { FieldRes } from '../vBand';\r\nimport { VForm } from '../vForm';\r\nimport { FieldUI } from '../../formUI';\r\n\r\nexport function buildVField(form:VForm, field: Field, fieldUI: FieldUI, fieldRes:FieldRes): VField {\r\n    let vField:new (form:VForm, field:Field, ui:FieldUI, fieldRes:FieldRes) => VField;\r\n    switch (field.type) {\r\n        default: return;\r\n        case 'tinyint':\r\n        case 'smallint':\r\n        case 'int':\r\n        case 'bigint':\r\n            vField = VIntField;\r\n            break;\r\n        case 'id':\r\n            let {_tuid} = field;\r\n            if (_tuid !== undefined) return;\r\n            vField = VIntField;\r\n            break;\r\n        case 'dec':\r\n            vField = VDecField;\r\n            break;\r\n        case 'char':\r\n            vField = VStringField;\r\n            break;\r\n        case 'text':\r\n            vField = VTextField;\r\n            break;\r\n        case 'datetime':\r\n            vField = VDateTimeField;\r\n            break;\r\n        case 'date':\r\n            vField = VDateField;\r\n            break;\r\n    }\r\n    return new vField(form, field, fieldUI, fieldRes);\r\n}\r\n\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport { observer } from 'mobx-react';\r\nimport { VBand } from './vBand';\r\nimport { BandsBuilder } from './bandsBuilder';\r\nimport { Field, ArrFields } from '../../uqs';\r\nimport { computed, observable, IObservableObject, IObservableValue } from 'mobx';\r\nimport { VArr } from './vArr';\r\nimport { FormUI, FormUIBase, FormItems } from '../formUI';\r\nimport { VField } from './vField';\r\nimport { VSubmit } from './vSubmit';\r\nimport { IObservableArray } from 'mobx';\r\nimport { FA } from '../../../ui';\r\n\r\nexport type FieldCall = (form:VForm, field:Field, values:any) => Promise<any>;\r\nexport interface FieldInput {\r\n    select: FieldCall;\r\n    content: React.StatelessComponent<any>;\r\n    placeHolder: string;\r\n}\r\nexport interface FieldInputs {\r\n    [fieldOrArr:string]: FieldInput | {[field:string]: FieldInput};\r\n}\r\nexport enum FormMode {new, edit, readonly}\r\n\r\nexport interface FormOptions {\r\n    fields: Field[];\r\n    arrs?: ArrFields[];\r\n    ui: FormUIBase;\r\n    res: any;\r\n    inputs: FieldInputs;\r\n    submitCaption: string;\r\n    arrNewCaption: string;\r\n    arrEditCaption: string;\r\n    arrTitleNewButton: JSX.Element;\r\n    none: string;\r\n    mode: FormMode;\r\n}\r\n\r\nexport class VForm {\r\n    protected fields: Field[];\r\n    protected arrs: ArrFields[];\r\n    protected bands: VBand[];\r\n    protected bandColl: {[key:string]: VBand};\r\n    protected onSubmit: ()=>Promise<void>;\r\n\r\n    constructor(options: FormOptions, onSubmit: ()=>Promise<void>) {\r\n        let {fields, arrs, ui, res, inputs, none, submitCaption, arrNewCaption, arrEditCaption, arrTitleNewButton, mode} = options;\r\n        this.fields = fields;\r\n        this.arrs = arrs;\r\n        this.ui = ui;\r\n        if (this.ui !== undefined) this.formItems = this.ui.items; //.compute = this.ui.compute;\r\n        this.res = res;\r\n        this.inputs = inputs;\r\n        this.none = none;\r\n        this.submitCaption = submitCaption;\r\n        this.arrNewCaption = arrNewCaption;\r\n        this.arrEditCaption = arrEditCaption;\r\n        this.arrTitleNewButton = arrTitleNewButton || <small><FA name=\"plus\" /> 新增</small>;\r\n        if (onSubmit === undefined) this.mode = FormMode.readonly;\r\n        else this.mode = mode;\r\n        this.buildFormValues();\r\n        this.buildBands(options, onSubmit);\r\n        this.onSubmit = onSubmit;\r\n    }\r\n\r\n    ui: FormUI;\r\n    res: any;\r\n    values: any;\r\n    errors: any;\r\n    formItems: FormItems;\r\n    mode: FormMode;\r\n    vFields: {[name:string]:VField} = {};\r\n    vArrs: {[name:string]: VArr} = {};\r\n    vSubmit: VSubmit;\r\n    inputs: FieldInputs;\r\n    none: string;\r\n    submitCaption: string;\r\n    arrNewCaption: string;\r\n    arrEditCaption: string;\r\n    arrTitleNewButton: JSX.Element;\r\n\r\n    private buildBands(options: FormOptions, onSubmit: (values:any)=>Promise<void>) {\r\n        this.bandColl = {};\r\n        let bandsBuilder = new BandsBuilder(this, options, onSubmit);\r\n        this.bands = bandsBuilder.build();\r\n        for (let band of this.bands) {\r\n            this.bandColl[band.key] = band;\r\n            let vFields = band.getVFields();\r\n            if (vFields !== undefined) for (let f of vFields) this.vFields[f.name] = f;\r\n            let vArr = band.getVArr();\r\n            if (vArr !== undefined) this.vArrs[vArr.name] = vArr;\r\n            let vSubmit = band.getVSubmit();\r\n            if (vSubmit !== undefined) this.vSubmit = vSubmit;\r\n        }\r\n    }\r\n\r\n    private onFormSubmit = (event:React.FormEvent<any>) => {\r\n        event.preventDefault();\r\n        return false;\r\n    }\r\n\r\n    protected view = observer(({className}:{className:string}) => {\r\n        return <form className={className} onSubmit={this.onFormSubmit}>\r\n            {this.bands.map(v => v.render())}\r\n        </form>;\r\n    });\r\n\r\n    getBand(name:string) {\r\n        return this.bandColl[name];\r\n    }\r\n\r\n    computeFields() {\r\n        if (this.formItems === undefined) return;\r\n        let values = this.values;\r\n        for (let i in this.formItems) {\r\n            let item = this.formItems[i];\r\n            if (typeof item !== 'function') continue;\r\n            values[i] = item.call(this, values);\r\n        }\r\n    }\r\n\r\n    async submit() {\r\n        if (this.onSubmit === undefined) return;\r\n        await this.onSubmit();\r\n    }\r\n    \r\n    getValues() {\r\n        let ret:any = {};\r\n        let values = this.values;\r\n        for (let f of this.fields) {\r\n            let {name} = f;\r\n            let v = values[name]\r\n            ret[name] =  v !== null && typeof v === 'object' ? v.id : v;\r\n        }\r\n        if (this.arrs !== undefined) {\r\n            for (let arr of this.arrs) {\r\n                let {name, fields, id, order} = arr;\r\n                let list = ret[name] = [];\r\n                let rows = this.vArrs[name].list;\r\n                for (let row of rows) {\r\n                    let item = {} as any;\r\n                    if (id !== undefined) item[id] = row[id];\r\n                    if (order !== undefined) item[order] = row[order];\r\n                    for (let f of fields) {\r\n                        let {name:fn} = f;\r\n                        let v = row[fn]\r\n                        item[fn] =  v !== null && typeof v === 'object' ? v.id : v;\r\n                    }\r\n                    list.push(item);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    get valueBoxs() {\r\n        let ret:any = {};\r\n        let values = this.values;\r\n        for (let f of this.fields) {\r\n            let {name, _tuid} = f;\r\n            let v = values[name]\r\n            ret[name] =  _tuid === undefined || typeof v === 'object' ? v : _tuid.boxId(v);\r\n        }\r\n        if (this.arrs === undefined) return ret;\r\n        for (let arr of this.arrs) {\r\n            let {name, fields, id, order} = arr;\r\n            let list = ret[name] = this.vArrs[name].list.slice();\r\n            for (let row of list) {\r\n                for (let f of fields) {\r\n                    let {name:fn, _tuid} = f;\r\n                    let v = row[fn]\r\n                    row[fn] =  _tuid === undefined || typeof v === 'object' ? v : _tuid.boxId(v);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    setValues(initValues:any) {\r\n        if (initValues === undefined) {\r\n            this.reset();\r\n            return;\r\n        }\r\n        let values = this.values;\r\n        let errors = this.errors;\r\n        for (let f of this.fields) {\r\n            let fn = f.name;\r\n            errors[fn] = undefined;\r\n            let v =  initValues[fn];\r\n            values[fn] = v;\r\n        }\r\n        // 还要设置arrs的values\r\n        for (let i in this.vArrs) {\r\n            let list = initValues[i];\r\n            if (list === undefined) continue;\r\n            let arrList = values[i] as IObservableArray<any>;\r\n            arrList.clear();\r\n            arrList.push(...list);\r\n        }\r\n    }\r\n\r\n    @computed get isOk():boolean {\r\n        for (let i in this.vFields) {\r\n            if (this.vFields[i].isOk === false) return false;\r\n        }\r\n        return true;\r\n    }\r\n    reset() {\r\n        let values = this.values;\r\n        let errors = this.errors;\r\n        for (let f of this.fields) {\r\n            let fn = f.name;\r\n            //if (this.compute !== undefined && this.compute[fn] !== undefined) continue;\r\n            values[fn] = null;\r\n            errors[fn] = undefined;\r\n        }\r\n        for (let i in this.vFields) {\r\n            let ctrl = this.vFields[i];\r\n            let cn = ctrl.name;\r\n            if (cn === undefined) continue;\r\n            //if (this.compute !== undefined && this.compute[cn] !== undefined) continue;\r\n            ctrl.setValue(null);\r\n        }\r\n        for (let i in this.vArrs) {\r\n            let vArr = this.vArrs[i];\r\n            vArr.reset();\r\n        }\r\n    }\r\n\r\n    getValue(fieldName: string) {\r\n        return this.values[fieldName];\r\n    }\r\n    setValue(fieldName: string, value: any) { this.values[fieldName] = value }\r\n\r\n    setError(fieldName:string, error:string) {this.errors[fieldName] = error}\r\n\r\n    private buildFieldValues(fields: Field[]):any {\r\n        let v: {[p:string]: any} = {\r\n            valueFromFieldName: function(propName:string) {\r\n                return this[propName];\r\n            }\r\n        };\r\n        for (let f of fields) {\r\n            let fn = f.name;\r\n            v[fn] = null;\r\n        }\r\n        return v;\r\n    }\r\n    private buildObservableValues():IObservableObject {\r\n        let v: {[p:string]: any} = this.buildFieldValues(this.fields);\r\n        if (this.arrs !== undefined) {\r\n            for (let arr of this.arrs) {\r\n                v[arr.name] = observable.array([], {deep:true});\r\n            }\r\n        }\r\n        let ret = observable(v);\r\n        return ret;\r\n    }\r\n    private buildFormValues() {\r\n        this.values = this.buildObservableValues();\r\n        this.errors = observable(this.buildFieldValues(this.fields));\r\n    }\r\n\r\n    render(className:string = \"py-3\"):JSX.Element {\r\n        return <this.view className={className} />\r\n    }\r\n}\r\n","export * from './vForm';\r\n","import {bridgeCenterApi, isBridged} from './appBridge';\r\nimport {FetchError} from '../fetchError';\r\nimport {HttpChannelUI} from './httpChannelUI';\r\nimport {nav} from '../ui/nav';\r\nimport { isDevelopment } from './host';\r\n\r\nexport async function httpGet(url:string, params?:any):Promise<any> {\r\n    let channel = new HttpChannel(false, url, undefined, undefined);\r\n    let ret = await channel.get('', params);\r\n    return ret;\r\n}\r\n\r\nexport async function httpPost(url:string, params?:any):Promise<any> {\r\n    let channel = new HttpChannel(false, url, undefined, undefined);\r\n    let ret = await channel.post('', params);\r\n    return ret;\r\n}\r\n\r\nexport class HttpChannel {\r\n    private isCenter: boolean;\r\n    private hostUrl: string;\r\n    private apiToken: string;\r\n    private ui?: HttpChannelUI;\r\n    private timeout: number;\r\n\r\n    constructor(isCenter: boolean, hostUrl: string, apiToken:string, ui?: HttpChannelUI) {\r\n        this.isCenter = isCenter;\r\n        this.hostUrl = hostUrl;\r\n        this.apiToken = apiToken;\r\n        this.ui = ui;\r\n        this.timeout = isDevelopment === true? 500000:5000;\r\n    }\r\n\r\n    private startWait = () => {\r\n        if (this.ui !== undefined) this.ui.startWait();\r\n    }\r\n\r\n    private endWait = (url?:string, reject?:(reason?:any)=>void) => {\r\n        if (this.ui !== undefined) this.ui.endWait();\r\n        if (reject !== undefined) reject('访问webapi超时 ' + url);\r\n    }\r\n\r\n    private showError = async (error:FetchError) => {\r\n        if (this.ui !== undefined) await this.ui.showError(error);\r\n    }\r\n\r\n    used() {\r\n        this.post('', {});\r\n    }\r\n\r\n    async get(url: string, params: any = undefined): Promise<any> {\r\n        if (params) {\r\n            let keys = Object.keys(params);\r\n            if (keys.length > 0) {\r\n                let c = '?';\r\n                for (let k of keys) {\r\n                    let v = params[k];\r\n                    if (v === undefined) continue;\r\n                    url += c + k + '=' + params[k];\r\n                    c = '&';\r\n                }\r\n            }\r\n        }\r\n        let options = this.buildOptions();\r\n        options.method = 'GET';\r\n        return await this.innerFetch(url, options);\r\n    }\r\n\r\n    async post(url: string, params: any): Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = 'POST';\r\n        options.body = JSON.stringify(params);\r\n        return await this.innerFetch(url, options);\r\n    }\r\n\r\n    async put(url: string, params: any): Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = 'PUT';\r\n        options.body = JSON.stringify(params);\r\n        return await this.innerFetch(url, options);\r\n    }\r\n\r\n    async delete(url: string, params: any): Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = 'DELETE';\r\n        options.body = JSON.stringify(params);\r\n        return await this.innerFetch(url, options);\r\n    }\r\n    async fetch(url: string, options: any, resolve:(value?:any)=>any, reject:(reason?:any)=>void):Promise<void> {\r\n        let that = this;\r\n        this.startWait();\r\n        let path = url;\r\n        function buildError(err: string) {\r\n            return {\r\n                channel: that,\r\n                url: path,\r\n                options: options,\r\n                resolve: resolve,\r\n                reject: reject,\r\n                error: err,\r\n            }\r\n        }\r\n        try {\r\n            console.log('%s %s', options.method, path);\r\n            let timeOutHandler = setTimeout(() => that.endWait(url, reject), this.timeout);\r\n            let res = await fetch(encodeURI(path), options);\r\n            if (res.ok === false) {\r\n                clearTimeout(timeOutHandler);\r\n                that.endWait();\r\n                console.log('call error %s', res.statusText);\r\n                throw res.statusText;\r\n            }\r\n            let ct = res.headers.get('content-type');\r\n            if (ct && ct.indexOf('json')>=0) {\r\n                return res.json().then(async retJson => {\r\n                    clearTimeout(timeOutHandler);\r\n                    that.endWait();\r\n                    if (retJson.ok === true) {\r\n                        return resolve(retJson.res);\r\n                    }\r\n                    if (retJson.error === undefined) {\r\n                        await that.showError(buildError('not valid tonva json'));\r\n                    }\r\n                    else {\r\n                        await that.showError(buildError(retJson.error));\r\n                        reject(retJson.error);\r\n                    }\r\n                    //throw retJson.error;\r\n                }).catch(async error => {\r\n                    await that.showError(buildError(error.message));\r\n                });\r\n            }\r\n            else {\r\n                let text = await res.text();\r\n                clearTimeout(timeOutHandler);\r\n                that.endWait();\r\n                resolve(text);\r\n            }\r\n        }\r\n        catch(error) {\r\n            if (typeof error === 'string') {\r\n                if (error.toLowerCase().startsWith('unauthorized') === true) {\r\n                    nav.logout();\r\n                    return;\r\n                }\r\n            }\r\n            await this.showError(buildError(error.message));\r\n        };\r\n    }\r\n\r\n    private async innerFetch(url: string, options: any): Promise<any> {\r\n        let u = this.hostUrl + url;\r\n        if (this.isCenter === true && this.apiToken === undefined && isBridged())\r\n            return await bridgeCenterApi(u, options.method, options.body);\r\n        return await new Promise<any>(async (resolve, reject) => {\r\n            await this.fetch(u, options, resolve, reject);\r\n        });\r\n    }\r\n\r\n    async callFetch(url:string, method:string, body:any):Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = method;\r\n        options.body = body;\r\n        return await new Promise<any>(async (resolve, reject) => {\r\n            await this.fetch(url, options, resolve, reject);\r\n        });\r\n    }\r\n\r\n    private buildOptions(): any {\r\n        let {language, culture} = nav;\r\n        let headers = new Headers();\r\n        //headers.append('Access-Control-Allow-Origin', '*');\r\n        headers.append('Content-Type', 'application/json;charset=UTF-8');\r\n        let lang = language;\r\n        if (culture) lang += '-' + culture;\r\n        headers.append('Accept-Language', lang);\r\n        if (this.apiToken) { \r\n            headers.append('Authorization', this.apiToken); \r\n        }\r\n        let options = {\r\n            headers: headers,\r\n            // cache: 'no-cache',\r\n        };\r\n        return options;\r\n    }\r\n}\r\n","import _ from 'lodash';\r\n\r\nexport interface KeyValueRes {\r\n    [key:string]: any;\r\n}\r\n\r\nexport interface Res<T extends KeyValueRes> {\r\n    [lang:string]: T | {[district:string]: T};\r\n}\r\n\r\nexport const resOptions:{lang:string, district:string} = {\r\n    lang: undefined,\r\n    district: undefined,\r\n}\r\n\r\nexport function setResOptions(lang:string, district:string) {\r\n    resOptions.lang = lang;\r\n    resOptions.district = district;\r\n}\r\n\r\n(function() {\r\n    let lang: string, district: string;\r\n    let language = navigator.languages && navigator.languages[0] || // Chrome / Firefox\r\n        navigator.language; // ||   // All browsers\r\n    //navigator.userLanguage; // IE <= 10\r\n    if (!language) {\r\n        lang = 'zh';\r\n        district = 'CN';\r\n    }\r\n    else {\r\n        let parts = language.split('-');\r\n        lang = parts[0];\r\n        if (parts.length > 1) district = parts[1];\r\n    }\r\n    setResOptions(lang, district);\r\n}());\r\n\r\nexport function resLang<T extends KeyValueRes>(res:Res<T>):T {\r\n    let {lang, district} = resOptions;\r\n    let ret:T = {} as T;\r\n    if (res === undefined) return ret;\r\n    _.merge(ret, res._);\r\n    let l = res[lang];\r\n    if (l === undefined) return ret;\r\n    _.merge(ret, l._);\r\n    let d = l[district];\r\n    if (d === undefined) return ret;\r\n    _.merge(ret, d);\r\n    let {entity} = ret;\r\n    if (entity !== undefined) {\r\n        for (let i in entity) {\r\n            entity[i.toLowerCase()] = entity[i];\r\n        }\r\n    }\r\n    return ret;\r\n}\r\n","import * as React from 'react';\r\nimport {observable, computed} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face} from '../face';\r\nimport {Rule} from '../rule';\r\n\r\nexport abstract class ControlBase {\r\n    protected formView: FormView;\r\n    constructor(formView:FormView) {\r\n        this.formView = formView;\r\n    }\r\n    render():JSX.Element {\r\n        return <div className=\"col-sm-10\">\r\n            {this.renderControl()}\r\n        </div>;\r\n    }\r\n    protected abstract renderControl():JSX.Element;\r\n    @computed get hasError():boolean {return false;}\r\n    @computed get filled():boolean {return false;}\r\n    clear() {}\r\n    clearErrors() {}\r\n    readValues(values:any):any {}\r\n    setError(fieldName:string, error:string) {}\r\n    setInitValues(values: any) {}\r\n    isOk():boolean {this.validate(); return !this.hasError;}\r\n    protected validate() {}\r\n}\r\n\r\nexport abstract class Control extends ControlBase {\r\n    protected field: Field;\r\n    protected face: Face;\r\n    protected props: any;\r\n    protected rules: Rule[];\r\n\r\n    protected element: HTMLElement;\r\n    @observable protected isOK?: boolean;\r\n    @observable protected error: string;\r\n    @observable protected value: any;\r\n\r\n    constructor(formView:FormView, field:Field, face:Face) {\r\n        super(formView);\r\n        this.field = field;\r\n        this.face = face;\r\n        this.init();\r\n        this.setProps();\r\n    }\r\n    protected ref(element: HTMLElement) {\r\n        this.element = element;\r\n    }\r\n    protected init() {\r\n        this.rules = [];\r\n        let r = this.field.rules;\r\n        if (r !== undefined) {\r\n            if (Array.isArray(r) === true) this.rules.push(...(r as Rule[]));\r\n            else this.rules.push(r as Rule);\r\n        }\r\n    };\r\n    protected setProps():any {\r\n        return this.props = {\r\n            ref: this.ref.bind(this),\r\n            name: this.field.name,\r\n        }\r\n    };\r\n    @computed get hasError():boolean {return this.error !== undefined;}\r\n    @computed get filled():boolean {\r\n        let ret = this.value !== undefined && this.value !== this.field.defaultValue;\r\n        return ret;\r\n    }\r\n    clearValue() { this.value = undefined; }\r\n    clear() { this.clearErrors(); this.clearValue(); }\r\n    clearErrors() { this.isOK = undefined; this.error = undefined; }\r\n    readValues(values:any):any {\r\n        values[this.field.name] = this.value;\r\n    }\r\n    setError(fieldName:string, error:string) {}\r\n    setInitValues(values: any) {}\r\n    protected getValueFromElement():any {return this.value;}\r\n    protected validate() {\r\n        try {\r\n            let v = this.getValueFromElement();\r\n            if (this.rules.length > 0) {\r\n                let isOk:boolean;\r\n                for (let rule of this.rules) {\r\n                    console.log('validate: %s', v);\r\n                    let err = rule(v);\r\n                    console.log('validate: %s err: %s', v, err);\r\n                    if (err === true) {\r\n                        this.error = undefined;\r\n                        isOk = true;\r\n                    }\r\n                    else if (err !== undefined) {\r\n                        //console.log('field %s onBlur v=%s rule=%s err=%s', \r\n                        //    this.field.name, JSON.stringify(v), rule, err);\r\n                        this.error = err;\r\n                        this.isOK = false;\r\n                        return;\r\n                    }\r\n                }\r\n                this.isOK = isOk;\r\n            }\r\n            this.value = v;\r\n        }\r\n        catch (e) {\r\n            this.error = e.message;\r\n        }\r\n    }\r\n    render():JSX.Element {\r\n        let n;\r\n        if (this.face !== undefined) {\r\n            let {notes} = this.face;\r\n            if (notes !== undefined) n = <small className=\"text-muted\">{notes}</small>;\r\n        }\r\n        return <div className=\"col-sm-10\">\r\n            {this.renderControl()}\r\n            {n}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face} from '../face';\r\nimport {ControlBase} from './control';\r\n\r\nexport class ButtonsControl extends ControlBase {\r\n    constructor(props) {\r\n        super(props);\r\n        this.otherClick = this.otherClick.bind(this);\r\n    }\r\n    private otherClick() {\r\n        let onOther = this.formView.props.onOther;\r\n        if (onOther === undefined) return;\r\n        let values = this.formView.readValues();\r\n        onOther(values);\r\n    }\r\n    renderControl():JSX.Element {\r\n        console.log('buttons.renderControl');\r\n        let nothing = this.formView.nothing;\r\n        let hasError = this.formView.hasError;\r\n        let props = this.formView.props;\r\n        console.log('buttons.renderControl nothing:%s hasError:%s', nothing, hasError);\r\n        let {submitButton, otherButton, onOther} = props;\r\n        let btnOther;\r\n        if (otherButton !== undefined) {\r\n            btnOther = <button className=\"btn btn-outline-info ml-auto\" onClick={this.otherClick}>\r\n                {otherButton}\r\n            </button>\r\n        }\r\n        return <div className=\"d-flex justify-content-start\">\r\n            <button\r\n                className=\"btn btn-primary\"\r\n                type=\"submit\" \r\n                disabled={nothing || hasError}>\r\n                {submitButton || '提交'}\r\n            </button>\r\n            {btnOther}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable, computed} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, Placeholder} from '../face';\r\nimport {Control} from './control';\r\n\r\nconst TxtRequired = '必须填入要求内容';\r\n\r\nexport abstract class CharsControl extends Control {\r\n    protected init() {\r\n        super.init();\r\n        if (this.field.required === true) {\r\n            this.rules.push((v) => {\r\n                if (v===null || v===undefined || (v as string).trim().length === 0) return TxtRequired;\r\n                return true;\r\n            });\r\n        }\r\n    }\r\n\r\n    protected element: HTMLInputElement;\r\n    protected getValueFromElement():any {return this.parseValue(this.element.value)}\r\n\r\n    protected setProps() {\r\n        super.setProps();\r\n        _.assign(this.props, {\r\n            onBlur: this.onBlur.bind(this),\r\n            onFocus: this.onFocus.bind(this),\r\n            onChange: this.onChange.bind(this),\r\n        });\r\n        let face = this.face as Placeholder;\r\n        if (face !== undefined) {\r\n            _.assign(this.props, {\r\n                placeholder: face.placeholder,\r\n            });\r\n        }\r\n        return this.props;\r\n    };\r\n    protected parseValue(value?:string):any {return value;}\r\n    private onBlur() {\r\n        //console.log('field %s onBlure', this.field.name);\r\n        this.validate();\r\n    }\r\n    private onChange() {\r\n        console.log('onChange');\r\n        this.validate();\r\n    }\r\n    private onFocus() {\r\n        this.clearErrors();\r\n        //this.error = undefined;\r\n        //this.formView.clearErrors();\r\n    }\r\n    protected className() {\r\n        return classNames({\r\n            \"form-control\": true,\r\n            \"has-success\": this.isOK === true,\r\n            \"is-invalid\": this.error !== undefined,\r\n            \"is-valid\": this.error === undefined && this.isOK === true,\r\n        });\r\n    }\r\n    protected renderInput():JSX.Element {\r\n        return <input className={this.className()} {...this.props} />;\r\n    }\r\n    protected ref(element: HTMLInputElement) {\r\n        super.ref(element);\r\n        if (element) {\r\n            element.value = this.value === undefined? '':this.value;\r\n        }\r\n    }\r\n    protected renderError():JSX.Element {\r\n        //if (this.field.name === 'name') console.log('charsControl renderControl');\r\n        if (this.error === undefined) return null;\r\n        return <div className=\"invalid-feedback\">{this.error}</div>\r\n    }\r\n    clearValue() { super.clearValue(); this.element.value = ''; }\r\n    setError(fieldName:string, error:string) {\r\n        if (this.field.name === fieldName) this.error = error;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        if (v === undefined) return;\r\n        //this.element.value = v;\r\n        this.value = v;\r\n    }\r\n    renderControl():JSX.Element {\r\n        return <React.Fragment>\r\n            {this.renderInput()}\r\n            {this.renderError()}\r\n        </React.Fragment>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport {CharsControl} from './charsControl';\r\nimport {StringField} from '../field';\r\n\r\nexport class StringControl extends CharsControl {\r\n    protected field: StringField;\r\n    protected setProps() {\r\n        let p = super.setProps();\r\n        _.assign(p, {\r\n            type: 'text',\r\n            maxLength: this.field.maxLength,\r\n        });\r\n        return p;\r\n    };\r\n    protected parseValue(value?:string):any {\r\n        if (value === undefined) return undefined;\r\n        if (value.trim().length === 0) return undefined;\r\n        return value;\r\n    }\r\n}\r\n\r\nexport class PasswordControl extends StringControl {\r\n    protected setProps() {\r\n        let p = super.setProps();\r\n        _.assign(p, {\r\n            type: 'password',\r\n            maxLength: this.field.maxLength,\r\n        });\r\n        return p;\r\n    };\r\n}","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport {IntField, DecField, NumberField} from '../field';\r\nimport {CharsControl} from './charsControl';\r\n\r\nconst ErrInvalidNumber = '无效的数字';\r\nconst ErrMin = '最小值为';\r\nconst ErrMax = '最大值为';\r\n\r\nconst KeyCode_Neg = 45;\r\nconst KeyCode_Dot = 46;\r\n\r\nexport class NumberControl extends CharsControl {\r\n    protected field: IntField | DecField | NumberField;\r\n    protected value: number;\r\n    protected extraChars: number[];\r\n    \r\n    protected init() {\r\n        super.init();\r\n        this.extraChars = [];\r\n        let {min, max} = this.field;\r\n        if (min !== undefined) {\r\n            this.rules.push((v:number) => {if (v === undefined) return; if (v<min) return ErrMin + min; return true;});\r\n            if (min < 0) this.extraChars.push(KeyCode_Neg);\r\n        }\r\n        else {\r\n            this.extraChars.push(KeyCode_Neg);\r\n        }\r\n\r\n        if (max !== undefined) {\r\n            this.rules.push((v:number) => {if (v === undefined) return; if (v>max) return ErrMax + max; return true});\r\n        }\r\n        switch (this.field.type) {\r\n            case 'dec':\r\n            case 'number': this.extraChars.push(KeyCode_Dot); break;\r\n        }\r\n    }\r\n\r\n    protected parseValue(value?:string):any {\r\n        if (value === undefined) return undefined;\r\n        if (value.trim().length === 0) return undefined;\r\n        let n = Number.parseFloat(value);\r\n        if (isNaN(n)) throw new Error(ErrInvalidNumber);\r\n        return n;\r\n    }\r\n\r\n    protected setProps() {\r\n        super.setProps();\r\n        _.assign(this.props, {\r\n            type: 'number',\r\n            step: (this.field as DecField).step,\r\n            onKeyPress: this.onKeyPress.bind(this),\r\n        });\r\n    }\r\n\r\n    onKeyPress(event:KeyboardEvent) {\r\n        let ch = event.charCode;\r\n        if (ch === 8 || ch === 0 || ch === 13 || ch >= 48 && ch <= 57) return;\r\n        if (this.extraChars !== undefined) {\r\n            if (this.extraChars.indexOf(ch) >= 0) {\r\n                switch (ch) {\r\n                    case KeyCode_Dot: this.onKeyDot(); break;\r\n                    case KeyCode_Neg: this.onKeyNeg(); event.preventDefault(); break;\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    private onKeyDot() {\r\n        let v = this.element.value;\r\n        let p = v.indexOf('.');\r\n        if (p >= 0) this.element.value = v.replace('.', '');\r\n    }\r\n    private onKeyNeg() {\r\n        let v = this.element.value;\r\n        let p = v.indexOf('-');\r\n        if (p >= 0) v = v.replace('-', '');\r\n        else v = '-'+v;\r\n        this.element.value = v;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {Control, ControlBase} from './control';\r\nimport {FormView} from '../formView';\r\n\r\nexport class UnknownControl extends Control {\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-plaintext\">\r\n            <div className=\"alert alert-primary\" role=\"alert\">\r\n            don't know how to create control<br/>\r\n            field: {JSON.stringify(this.field)} must be object <br/>\r\n            face: {JSON.stringify(this.face)} must be object <br/>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class EmptyControl extends ControlBase {\r\n    private element:JSX.Element;\r\n    constructor(formView:FormView, element:JSX.Element) {\r\n        super(formView);\r\n        this.element = element;\r\n    }\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-plaintext\">\r\n            {this.element}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, IdPickFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class PickIdControl extends Control {\r\n    protected face: IdPickFace;\r\n    @observable private caption: string|JSX.Element;\r\n\r\n    private onClick = async () => {\r\n        let {pick, fromPicked} = this.face;\r\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\r\n        if (item === undefined) {\r\n            this.value = undefined;\r\n            return;\r\n        }\r\n        if (fromPicked === undefined) {\r\n            this.value = item.id;\r\n            return;\r\n        }\r\n        let {id, caption} = fromPicked(item);\r\n        this.value = id;\r\n        this.caption = caption;\r\n    }\r\n    onPicked = (value: any) => {\r\n        this.value = value.id;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        this.value = v;\r\n    }\r\n    private controlContent():string|JSX.Element {\r\n        let {itemFromId, fromPicked, initCaption} = this.face;\r\n        if (this.value === undefined) {\r\n            return initCaption || '请选择Id';\r\n        }\r\n        if (this.caption !== undefined) {\r\n            return this.caption;\r\n        }\r\n        if (itemFromId !== undefined) {\r\n            if (fromPicked !== undefined) {\r\n                let item = itemFromId(this.value);\r\n                if (item) {\r\n                    let ret = fromPicked(item);\r\n                    if (ret !== undefined) return ret.caption;\r\n                }\r\n            }\r\n        }\r\n        return String(this.value);\r\n    }\r\n    /*\r\n    private buildContent():string|JSX.Element {\r\n        let {tuid, input} = this.face;\r\n        if (input === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n            return <div onClick={this.onClick}>{this.controlContent()}</div>;\r\n        }\r\n        return <input.component id={this.value} \r\n            tuid={tuid}\r\n            input={input}\r\n            entitiesUI={this.formView.props.context} \r\n            params={this.formView.readValues()}\r\n            onPicked={this.onPicked} />;\r\n    }*/\r\n    renderControl():JSX.Element {\r\n        let {tuid, input} = this.face;\r\n        if (input === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n            return <div className=\"form-control-plaintext px-2 border text-primary rounded cursor-pointer\"\r\n                onClick={this.onClick}>\r\n                {this.controlContent()}\r\n            </div>;\r\n        }\r\n        return <div className=\"form-control-static \">\r\n            <input.component id={this.value} \r\n                ui={tuid}\r\n                //input={input}\r\n                //entitiesUI={this.formView.props.context} \r\n                //params={this.formView.readValues()}\r\n                //onPicked={this.onPicked}\r\n                />\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, TuidPickFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class PickTuidControl extends Control {\r\n    protected face: TuidPickFace;\r\n    // protected value: number;\r\n    @observable private caption: string|JSX.Element;\r\n    constructor(formView:FormView, field:Field, face:Face) {\r\n        super(formView, field, face);\r\n        this.onIdChanged = this.onIdChanged.bind(this);\r\n        //this.onClick = this.onClick.bind(this);\r\n    }\r\n    /*\r\n    private async onClick() {\r\n        let {pick, fromPicked} = this.face;\r\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\r\n        if (item === undefined) {\r\n            this.value = undefined;\r\n            return;\r\n        }\r\n        if (fromPicked === undefined) {\r\n            this.value = item.id;\r\n            return;\r\n        }\r\n        let {id, caption} = fromPicked(item);\r\n        this.value = id;\r\n        this.caption = caption;\r\n    }*/\r\n    onIdChanged(id: any) {\r\n        this.value = id.id;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        this.value = v;\r\n    }\r\n    private buildContent():JSX.Element {\r\n        //let {tuid, input} = this.face;\r\n        return <this.face.input.component \r\n            {...this.face}\r\n            id={this.value}\r\n            //ui={this.face.ui}\r\n            //input={input}\r\n            //entitiesUI={this.formView.props.context} \r\n            onFormValues={()=>this.formView.readValues()}\r\n            onIdChanged={this.onIdChanged} />;\r\n    }\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-static \">\r\n            {this.buildContent()}\r\n        </div>;\r\n    }\r\n}\r\n/*\r\n<button className=\"form-control btn btn-outline-info\"\r\ntype=\"button\"\r\nstyle={{textAlign:'left', paddingLeft:'0.75rem'}}\r\nonClick={this.onClick}>\r\n{this.buildContent()}\r\n</button>\r\n*/","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, PickFace} from '../face';\r\nimport {Control} from './control';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class PickControl extends Control {\r\n    protected face: PickFace;\r\n    @observable private caption: string|JSX.Element;\r\n\r\n    private onClick = async () => {\r\n        let {pick, fromPicked} = this.face;\r\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\r\n        if (item === undefined) {\r\n            this.value = undefined;\r\n            return;\r\n        }\r\n        let {id, caption} = fromPicked(item);\r\n        this.value = id;\r\n        this.caption = caption;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        this.value = v;\r\n    }\r\n    /*\r\n    private controlContent():string|JSX.Element {\r\n        let {content: Content} = this.face;\r\n        if (this.value === undefined) {\r\n            return '请选择';\r\n        }\r\n        \r\n        if (this.caption !== undefined) {\r\n            return this.caption;\r\n        }\r\n        return <Content id={this.value} />;\r\n    }*/\r\n    /*\r\n    private buildContent():string|JSX.Element {\r\n        let {tuid, input} = this.face;\r\n        if (input === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n            return <div onClick={this.onClick}>{this.controlContent()}</div>;\r\n        }\r\n        return <input.component id={this.value} \r\n            tuid={tuid}\r\n            input={input}\r\n            entitiesUI={this.formView.props.context} \r\n            params={this.formView.readValues()}\r\n            onPicked={this.onPicked} />;\r\n    }*/\r\n    renderControl():JSX.Element {\r\n        return <this.view />;\r\n        /*\r\n        let {content:Content} = this.face;\r\n        //if (this.value === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n        //}\r\n        //return <div className=\"form-control-static \">\r\n        //    <Content />\r\n        //</div>;\r\n        */\r\n    }\r\n\r\n    private view = observer(() => {\r\n        let content;\r\n        let {content: Content} = this.face;\r\n        if (this.value === undefined || this.value === null) {\r\n            content = '请选择';\r\n        }\r\n        /*\r\n        else if (this.caption !== undefined) {\r\n            content = this.caption;\r\n        }*/\r\n        else {\r\n            content = <Content id={this.value} />;\r\n        } \r\n        return <div\r\n            className=\"form-control-plaintext px-2 border text-primary rounded cursor-pointer bg-light\"\r\n            onClick={this.onClick}>\r\n            {content}\r\n        </div>\r\n    });\r\n}\r\n","export * from './control';\r\nexport * from './buttonsControl';\r\nexport * from './stringControl';\r\nexport * from './numberControl';\r\n\r\nimport {Field} from '../field';\r\nimport {Face} from '../face';\r\nimport {Control, ControlBase} from './control';\r\nimport {ButtonsControl} from './buttonsControl';\r\nimport {CheckControl} from './checkControl';\r\nimport {RadioControl} from './radioControl';\r\nimport {TextAreaControl} from './textAreaControl';\r\nimport {SelectControl} from './selectControl';\r\nimport {UnknownControl, EmptyControl} from './unknownControl';\r\nimport {StringControl, PasswordControl} from './stringControl';\r\nimport {NumberControl} from './numberControl';\r\n\r\nimport {FormView, FormRow, GroupRow, FieldRow, LabelFormRow} from '../formView';\r\nimport { PickIdControl } from './pickIdControl';\r\nimport { PickTuidControl } from './pickTuidControl';\r\nimport { PickControl } from './pickControl';\r\n\r\nexport type CreateControl = (form:FormView, row: FormRow) => ControlBase\r\n\r\nexport const createControl:CreateControl = (form:FormView, row: LabelFormRow):ControlBase => {\r\n    let label = row.label;\r\n    if ((<GroupRow>row).group !== undefined)\r\n        return createGroupControl(form, label, row as GroupRow);\r\n    if ((<FieldRow>row).field !== undefined)\r\n        return createFieldControl(form, label, row as FieldRow);\r\n    return new EmptyControl(form, row.help);\r\n}\r\n\r\nconst controls:{[type:string]: new (formView:FormView, field:Field, face:Face) => Control} = {\r\n    \"string\": StringControl,\r\n    \"password\": PasswordControl,\r\n    \"number\": NumberControl,\r\n    \"checkbox\": CheckControl,\r\n    \"radiobox\": RadioControl,\r\n    \"select\": SelectControl,\r\n    \"pick-id\": PickIdControl,\r\n    \"pick-tuid\": PickTuidControl,\r\n    \"textarea\": TextAreaControl,\r\n    \"pick\": PickControl,\r\n};\r\nconst defaultFaces:{[type:string]: Face} = {\r\n    \"string\": {type:'string'},\r\n    \"number\": {type:'number'},\r\n    \"int\": {type:'number'},\r\n    \"dec\": {type:'number'},\r\n    \"bool\": {type:'checkbox'},\r\n}\r\nfunction createFieldControl(form:FormView, label:string, fieldRow: FieldRow):Control {\r\n    let {field, face} = fieldRow;\r\n    switch (typeof field) {\r\n        case 'string':\r\n            field = {\r\n                name: (field as any) as string,\r\n                type: 'string',\r\n            }\r\n            break;\r\n        case 'object':\r\n            break;\r\n        default:\r\n            return new UnknownControl(form, field, face);\r\n    }\r\n    let fieldType = field.type || 'string';\r\n    if (face === undefined) {\r\n        face = defaultFaces[fieldType];\r\n        if (face === undefined) return new UnknownControl(form, field, face);\r\n    }\r\n    else if (face.type === undefined) {\r\n        let f = defaultFaces[fieldType];\r\n        face.type = f===undefined? 'string' : f.type;\r\n    }\r\n    let control = controls[face.type || fieldType] || UnknownControl;\r\n    return new control(form, field, face);\r\n}\r\n\r\nfunction createGroupControl(form:FormView, label:string, groupRow: GroupRow):Control {\r\n    return new UnknownControl(form, groupRow as any, undefined);\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field, BoolField} from '../field';\r\nimport {Face, CheckBoxFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class CheckControl extends Control {    \r\n    protected element: HTMLInputElement;\r\n    protected field: BoolField;\r\n    protected face: CheckBoxFace;\r\n    private trueValue: any;\r\n    private falseValue: any;\r\n\r\n    protected init() {\r\n        super.init();\r\n        let {trueValue, falseValue} = this.field;\r\n        if (trueValue === undefined) this.trueValue = 1;\r\n        if (falseValue === undefined) this.falseValue = 0;\r\n    }\r\n\r\n    setProps() {\r\n        super.setProps();\r\n        _.assign(this.props, {\r\n            onChange: this.onChange.bind(this),\r\n        });\r\n    }\r\n\r\n    clearValue() {\r\n        this.element.checked = this.field.defaultValue === this.trueValue;\r\n        this.value = this.getValueFromElement();\r\n    }\r\n\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        if (v === undefined) {\r\n            v = this.field.defaultValue;\r\n        }\r\n        if (v !== undefined) {\r\n            //this.element.checked = v === this.trueValue;\r\n            //this.value = this.getValueFromElement();\r\n        }\r\n    }\r\n\r\n    protected getValueFromElement():any { return this.element.checked? this.trueValue:this.falseValue; }\r\n\r\n    private onChange() {\r\n        this.value = this.getValueFromElement();\r\n    }\r\n\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-static\">\r\n            <label className=\"form-control\">\r\n                <label className=\"custom-control custom-checkbox mb-0\">\r\n                    <input type='checkbox'\r\n                        name={this.field.name}\r\n                        ref={this.props.ref}\r\n                        onChange={this.props.onChange}\r\n                        className=\"custom-control-input\" />\r\n                    <span className=\"custom-control-indicator\" />\r\n                    <span className=\"custom-control-description\">{this.face.label}</span>\r\n                </label>\r\n            </label>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, RadioFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class RadioControl extends Control {\r\n    protected face: RadioFace;\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-static\">\r\n            <div className=\"form-control\">\r\n            {\r\n                this.face.list.map((item, index) => {\r\n                    let t, v;\r\n                    if (typeof item !== 'object') t = v = item;\r\n                    else {\r\n                        t = item.text;\r\n                        v = item.value;\r\n                    }\r\n                    return <label key={index} className=\"custom-control custom-radio w-25\">\r\n                        <input type='radio'\r\n                            name={this.field.name} \r\n                            className=\"custom-control-input\" />\r\n                        <span className=\"custom-control-indicator\"></span>\r\n                        <span className=\"custom-control-description\">{t}</span>\r\n                    </label>;\r\n                })\r\n            }\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, SelectFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class SelectControl extends Control {\r\n    constructor (formView:FormView, field:Field, face:Face) {\r\n        super(formView, field, face);\r\n        this.ref = this.ref.bind(this);\r\n    }\r\n    protected face: SelectFace;\r\n    protected element: HTMLSelectElement;\r\n    protected getValueFromElement():any {\r\n        let {selectedIndex, selectedOptions} = this.element;\r\n        let v:any = selectedOptions[0].value;\r\n        switch (this.field.type) {\r\n            case 'number': v = Number(v); break;\r\n            case 'date': v = new Date(v); break;\r\n            case 'bool': \r\n                if (typeof v === 'string') {\r\n                    v = ((v as string).toLowerCase() === 'true');\r\n                }\r\n                break;\r\n        }\r\n        return v;\r\n    }\r\n    renderControl():JSX.Element {\r\n        let {list} = this.face;\r\n        let def = this.face.default;\r\n        let options: any[] = [];\r\n        if (def === undefined)\r\n            options.push(<option key={-1} value={undefined}>请选择</option>);\r\n        options.push(...list.map((item, index) => {\r\n            let t, v;\r\n            if (typeof item !== 'object') t = v = item;\r\n            else {\r\n                t = item.text;\r\n                v = item.value;\r\n            }\r\n            return <option key={index} value={v}>{t}</option>;\r\n        }));\r\n        return <div className=\"form-control-static\">\r\n            <select name={this.field.name} className=\"form-control\" ref={this.ref}>\r\n                {options}\r\n            </select>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport {CharsControl} from './charsControl';\r\nimport {StringField} from '../field';\r\nimport {TextAreaFace} from '../face';\r\n\r\nexport class TextAreaControl extends CharsControl {\r\n    protected field: StringField;\r\n    protected face: TextAreaFace;\r\n    private el: HTMLTextAreaElement;\r\n    protected setProps() {\r\n        let p = super.setProps();\r\n        let {maxLength} = this.field;\r\n        let {rows} = this.face;\r\n        _.assign(p, {\r\n            maxLength: maxLength,\r\n            rows: rows,\r\n        });\r\n        return p;\r\n    };\r\n    protected renderInput():JSX.Element {\r\n        return <textarea ref={t=>{this.el = t;if (t!==undefined) t.value=''}} className={this.className()} {...this.props} />;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {FormView, FormRow, FieldRow, GroupRow, LabelFormRow} from '../formView';\r\nimport {Control, ControlBase, createControl, CreateControl} from '../control';\r\n\r\nexport type CreateRow = (form:FormView, row: FormRow)=>RowContainer;\r\n\r\nexport abstract class RowContainer {\r\n    protected form:FormView;\r\n    protected row: FormRow;\r\n    protected control: ControlBase;\r\n    constructor(form:FormView, row: FormRow) {\r\n        this.form = form;\r\n        this.row = row;\r\n        if ((row as JSX.Element).type === undefined) {\r\n            let cc:CreateControl = (row as LabelFormRow).createControl;\r\n            if (cc === undefined) cc = form.createControl;\r\n            if (cc === undefined) cc = createControl;\r\n            this.control = cc(form, row);\r\n        }\r\n    }\r\n    abstract render(key:string):JSX.Element;\r\n    \r\n    isOk():boolean {\r\n        if (this.control === undefined) return true;\r\n        return this.control.isOk();\r\n    }\r\n\r\n    contains(fieldName:string):boolean {\r\n        let field = (this.row as FieldRow).field;\r\n        if (field !== undefined) return fieldName === field.name;\r\n        let group = (this.row as GroupRow).group;\r\n        if (group !== undefined) return group.find(g => g.field.name === fieldName)!==undefined;\r\n        return false;\r\n    }\r\n    get hasError():boolean {return this.control.hasError;}\r\n    get filled():boolean {return this.control.filled;}\r\n    clear() {\r\n        if (this.control !== undefined) this.control.clear();\r\n    }\r\n    clearErrors() {\r\n        if (this.control !== undefined) this.control.clearErrors();\r\n    }\r\n    readValues(values:any):any {\r\n        if (this.control !== undefined) this.control.readValues(values);\r\n    }\r\n    setError(fieldName:string, error:string) {\r\n        if (this.control !== undefined) this.control.setError(fieldName, error);\r\n    }\r\n    setInitValues(values:any) {\r\n        if (this.control !== undefined) this.control.setInitValues(values);\r\n    }\r\n}\r\n\r\nclass ElementRowContainer extends RowContainer {\r\n    render(key:string):JSX.Element {\r\n        return <div key={key} className=\"form-group\">{this.row as JSX.Element}</div>;\r\n    }\r\n    get hasError():boolean {return false;}\r\n    get filled():boolean {return false;}\r\n}\r\n\r\nclass BootStrapRowContainer extends RowContainer {\r\n    render(key:string):JSX.Element {\r\n        return <div key={key} className='form-group row'>\r\n            <label className='col-sm-2 col-form-label'>\r\n                {(this.row as LabelFormRow).label}\r\n            </label>\r\n            {this.control.render()}\r\n        </div>;\r\n\r\n        //has-success is-valid\r\n    }\r\n}\r\n\r\nexport function bootstrapCreateRow(form:FormView, row: FormRow):RowContainer {\r\n    return new BootStrapRowContainer(form, row);\r\n}\r\n\r\nexport function elementCreateRow(form:FormView, row: FormRow):RowContainer {\r\n    return new ElementRowContainer(form, row);\r\n}\r\n","//import {isDevelopment} from '../local';\r\nimport {HttpChannel} from './httpChannel';\r\n\r\nexport async function refetchApi(channel:HttpChannel, url, options, resolve, reject) {\r\n    await channel.fetch(url, options, resolve, reject);\r\n}\r\n\r\nexport abstract class ApiBase {\r\n    protected token: string;\r\n    protected path: string;\r\n    protected showWaiting: boolean;\r\n\r\n    constructor(path: string, showWaiting: boolean) {\r\n        this.path = path || '';\r\n        this.showWaiting = showWaiting;\r\n    }\r\n\r\n    protected abstract async getHttpChannel(): Promise<HttpChannel>;\r\n\r\n    public async call(url:string, method:string, body:any):Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.callFetch(url, method, body);\r\n    }\r\n\r\n    public async get(path:string, params:any=undefined): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.get(this.path + path, params);\r\n    }\r\n\r\n    public async post(path:string, params:any): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.post(this.path + path, params);\r\n    }\r\n\r\n    public async put(path:string, params:any): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.put(this.path + path, params);\r\n    }\r\n\r\n    public async delete(path:string, params:any): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.delete(this.path + path, params);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport {nav} from './nav';\r\n\r\nexport interface PageHeaderProps {\r\n    back?: 'back' | 'close' | 'none';\r\n    center: string | JSX.Element;\r\n    right?: JSX.Element;\r\n    logout?: boolean | (()=>Promise<void>);\r\n    className?: string;\r\n}\r\nexport interface PageHeaderState {\r\n    hasBack: boolean;\r\n}\r\n\r\nexport class PageHeader extends React.Component<PageHeaderProps, PageHeaderState> {\r\n    constructor(props: PageHeaderProps) {\r\n        super(props);\r\n        this.navChange = this.navChange.bind(this);\r\n        this.state = {\r\n            hasBack: false,\r\n        };\r\n    }\r\n    navChange() {\r\n        this.setState({\r\n            hasBack: nav.level > 1\r\n        })\r\n    }\r\n    componentWillMount() {\r\n        this.navChange();\r\n        //this.navChangeHandler = nav.events.add('change', this.navChange);\r\n    }\r\n    componentWillUnmount() {\r\n        //nav.events.remove('change', this.navChangeHandler);\r\n    }\r\n    async back() {\r\n        await nav.back(); // 这个才会显示confirm box，在dataForm里面，如果输入了数据的话\r\n    }\r\n    openWindow() {\r\n        window.open(document.location.href);\r\n    }\r\n    private logoutClick = () => {\r\n        nav.showLogout(this.logout);\r\n    }\r\n    private logout = async () => {\r\n        let {logout} = this.props;\r\n        if (typeof logout === 'function') {\r\n            await logout(); \r\n        }\r\n        await nav.logout(undefined);\r\n    }\r\n    render() {\r\n        let b = this.state.hasBack || self != top;\r\n        let {right, center, logout, className} = this.props;\r\n        let back:any, pop:any, debugLogout:any;\r\n        if (logout !== undefined && self === top) {\r\n            if (typeof logout === 'boolean' && logout === true\r\n                || typeof logout === 'function')\r\n            {\r\n                let {user} = nav;\r\n                if (user !== undefined) {\r\n                    let {nick, name} = user;\r\n                    debugLogout = <div className=\"d-flex align-items-center\">\r\n                        <small className=\"text-light\">{nick || name}</small>\r\n                        <a className=\"dropdown-toggle btn btn-secondary btn-sm ml-2\"\r\n                            role=\"button\"\r\n                            onClick={this.logoutClick}>\r\n                            <i className=\"fa fa-sign-out\" />\r\n                        </a>\r\n                    </div>;\r\n                }\r\n            }\r\n        }\r\n        if (b) {\r\n            switch (this.props.back) {\r\n                case 'none': back = undefined; break;\r\n                default:\r\n                case 'back': back = <nav onClick={this.back}><i className=\"fa fa-arrow-left\" /></nav>; break;\r\n                case 'close': back = <nav onClick={this.back}><i className=\"fa fa-close\" /></nav>; break;\r\n            }\r\n        }\r\n        if (self != top) {\r\n            console.log(document.location.href);\r\n            pop = <header onClick={this.openWindow} />;\r\n        }\r\n        let rightView = (right || debugLogout) && <aside>{right} {debugLogout}</aside>;\r\n        return <header className={className}>\r\n            {pop}\r\n            {back}\r\n            <div>{center}</div>\r\n            {rightView}\r\n        </header>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport '../../css/va-badge.css';\r\n\r\nexport interface BadgeProps {\r\n    className?: string;\r\n    badge?: string|number;\r\n    size?: 'xs' | 'sm' | 'lg';\r\n    color?: 'secondary'|'success'|'danger'|'primary'|'info'|'warning';\r\n    badgeAlign?: 'left'|'center'|'right';\r\n    badgeVertical?: 'top'|'middle'|'bottom';\r\n}\r\n\r\n@observer\r\nexport class Badge extends React.Component<BadgeProps> {\r\n    render() {\r\n        let {className, badge, size, color, badgeAlign, badgeVertical, children} = this.props;\r\n        let cn = classNames(\r\n            className,\r\n            'va-badge',\r\n            size && 'va-badge-'+size,\r\n            'va-badge-' + (color||'secondary'),\r\n            badgeAlign && 'va-badg-'+badgeAlign,\r\n            badgeVertical && 'va-badg-'+badgeVertical,\r\n        );\r\n        let b;\r\n        if (badge) b = <b>{badge}</b>;\r\n        return <div className={cn}>\r\n            {children}\r\n            {b}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport '../../css/va-lmr.css';\r\n\r\nexport interface LMRProps {\r\n    className?: string | string[];\r\n    left?: string|JSX.Element;\r\n    right?: string|JSX.Element;\r\n    onClick?: ()=>void;\r\n}\r\n\r\n@observer\r\nexport class LMR extends React.Component<LMRProps> {\r\n    render() {\r\n        let {className, left, children, right, onClick} = this.props;\r\n        let l, r;\r\n        if (left !== undefined) l = <header>{left}</header>;\r\n        if (right !== undefined) r = <footer>{right}</footer>;\r\n        let cursor;\r\n        if (onClick !== undefined) cursor = 'cursor-pointer';\r\n        return <div className={classNames('va-lmr', className, cursor)} onClick={onClick}>\r\n            {l}\r\n            <div>{children}</div>\r\n            {r}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\n\r\nexport interface FAProps {\r\n    name: string;\r\n    className?: string;\r\n    size?: 'lg'|'2x'|'3x'|'4x'|'5x';\r\n    spin?: boolean;\r\n    fixWidth?: boolean;\r\n    border?: boolean;\r\n    pull?: 'left'|'right';\r\n    pulse?: boolean;\r\n    rotate?: 90|180|270;\r\n    flip?: 'horizontal'|'vertical';\r\n    inverse?: boolean;\r\n}\r\n\r\nexport class FA extends React.Component<FAProps> {\r\n    render() {\r\n        let {name, className, size, spin, fixWidth, border, pull, pulse, rotate, flip, inverse} = this.props;\r\n        let cn = classNames(className, 'fa',\r\n            name && ('fa-' + name),\r\n            size && 'fa-'+size,\r\n            fixWidth && 'fa-fw',\r\n            border && 'fa-border',\r\n            pull && 'fa-pull-' + pull,\r\n            spin && 'fa-spin',\r\n            pulse && 'fa-pulse',\r\n            rotate && 'fa-rotate-' + rotate,\r\n            flip && 'fa-flip-' + flip,\r\n            inverse && 'fa-inverse',\r\n        );\r\n        return <i className={cn} />\r\n    }\r\n}\r\n\r\nexport interface StackedFAProps {\r\n    className?: string;\r\n    size?: 'lg',\r\n}\r\nexport class StackedFA extends React.Component<StackedFAProps> {\r\n    render() {\r\n        let {className, size, children} = this.props;\r\n        let cn = classNames(\r\n            'fa-stack',\r\n            className,\r\n            size && 'fa-' + size);\r\n        return <span className={cn}>\r\n            {children}\r\n        </span>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\n\r\nexport const Muted = (props:any) => \r\n<small className={classNames('text-muted', props.className)} style={props.style}>\r\n    {props.children}\r\n</small>;\r\n","export * from './Badge';\r\nexport * from './LMR';\r\nexport * from './FA';\r\nexport * from './IconText';\r\nexport * from './Muted';\r\n","import React from 'react';\r\nimport { jsonStringify } from '../../tools';\r\n\r\nexport const DefaultRow = (values) => <div className=\"px-3 py-2\">{jsonStringify(values)}</div>;\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Page, List, FA } from '../../../ui';\r\nimport { Query } from '../../uqs';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { QueryUI, CQuery } from './cQuery';\r\nimport { DefaultRow } from './defaultRow';\r\n\r\nexport class VQueryMain extends VEntity<Query, QueryUI, CQuery> {\r\n    protected vForm: VForm;\r\n    private row: React.StatelessComponent;\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        let {row, queryRow} = this.ui;\r\n        this.row = queryRow || row || DefaultRow;\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSubmit = async () => {\r\n        let params = this.vForm.getValues();\r\n        if (this.entity.isPaged === true) {\r\n            await this.entity.resetPage(30, params);\r\n            await this.entity.loadPage();\r\n            this.replacePage(this.pageResult);\r\n        }\r\n        else {\r\n            let data = await this.entity.query(params);\r\n            this.replacePage(this.queryResult, data);\r\n        }\r\n    }\r\n\r\n    again = () => {\r\n        this.vForm.reset();\r\n        this.replacePage(this.view);\r\n    }\r\n\r\n    renderExtra() {\r\n        return;\r\n    }\r\n\r\n    renderRow = (item:any, index:number) => <this.row {...item} />;\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render('mx-3 my-2')}\r\n        {this.renderExtra()}\r\n    </Page>;\r\n\r\n    protected pageResult = () => {\r\n        let {name, list} = this.entity;\r\n        let rightClose = <button\r\n            className=\"btn btn-outline-success\"\r\n            onClick={this.again}>\r\n            <FA name=\"search\" /> 再查询\r\n        </button>;\r\n        return <Page header={this.label} right={rightClose}>\r\n            <List items={list} item={{render: this.renderRow}} />\r\n        </Page>;\r\n    }\r\n\r\n    protected queryResult = observer((result:any) => {\r\n        let rightClose = <button\r\n            className=\"btn btn-outline-success\"\r\n            onClick={this.again}>\r\n            <FA name=\"search\" /> 再查询\r\n        </button>;\r\n        return <Page header={this.label} right={rightClose}>\r\n            <pre>{JSON.stringify(result, undefined, '\\t')}</pre>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport { Page, FA, SearchBox, List } from '../../../ui';\r\nimport { PageItems } from '../../../pageItems';\r\nimport { Query } from '../../uqs';\r\nimport { VEntity } from '../CVEntity';\r\nimport { QueryUI, CQuerySelect } from './cQuery';\r\nimport { DefaultRow } from './defaultRow';\r\n\r\nexport class VQuerySelect extends VEntity<Query, QueryUI, CQuerySelect> {\r\n    private row: React.StatelessComponent;\r\n\r\n    PageItems:QueryPageItems;\r\n    ownerId: number;\r\n\r\n    async open(param?:any) {\r\n        let {row, selectRow} = this.ui;\r\n        this.row = selectRow || row || DefaultRow;\r\n        //this.entity = this.controller.entity;\r\n        this.PageItems = new QueryPageItems(this.entity);\r\n        await this.onSearch(param);\r\n        this.openPage(this.view);\r\n    }\r\n    onSearch = async (key:string) => {\r\n        await this.PageItems.first(key);\r\n    }\r\n\r\n    renderRow = (item:any, index:number) => <this.row {...item} />;\r\n\r\n    private callOnSelected(item:any) {\r\n       this.closePage();\r\n       this.returnCall(item);\r\n    }\r\n    clickRow = (item:any) => {\r\n        this.callOnSelected(item);\r\n    }\r\n\r\n    view = () => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\r\n        return <Page header={header}>\r\n            <List\r\n                items={this.PageItems.items}\r\n                item={{render: this.renderRow, onClick: this.clickRow}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    };\r\n}\r\n\r\nexport class QueryPageItems extends PageItems<any> {\r\n    private query: Query;\r\n    constructor(query: Query) {\r\n        super();\r\n        this.query = query;\r\n    }\r\n    protected async load():Promise<any[]> {\r\n        await  this.query.loadSchema();\r\n        let ret:any[];\r\n        if (this.query.isPaged === true)\r\n            ret = await this.query.page(this.param, this.pageStart, this.pageSize);\r\n        else {\r\n            let data = await this.query.query(this.param);\r\n            //let data = await this.query.unpackReturns(res);\r\n            ret = data[this.query.returns[0].name];\r\n        }\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:any) {\r\n        if (item === undefined) this.pageStart = 0;\r\n    }\r\n}\r\n","import { StatelessComponent } from 'react';\r\nimport { CEntity, EntityUI } from '../CVEntity';\r\nimport { Query } from '../../uqs';\r\nimport { VQueryMain } from './vQueryMain';\r\nimport { VQuerySelect } from './vQuerySelect';\r\n\r\nexport interface QueryUI extends EntityUI {\r\n    CQuery?: typeof CQuery;\r\n    CQuerySelect?: typeof CQuerySelect;\r\n    main?: typeof VQueryMain;\r\n    row?: StatelessComponent;\r\n    queryRow?: StatelessComponent;\r\n    selectRow?: StatelessComponent;\r\n}\r\n\r\nexport abstract class CQueryBase extends CEntity<Query, QueryUI> {\r\n}\r\n\r\nexport class CQuery extends CQueryBase {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VQueryMain);\r\n    }\r\n\r\n    protected get VQueryMain():typeof VQueryMain {return this.ui && this.ui.main || VQueryMain}\r\n}\r\n\r\nexport class CQuerySelect extends CQueryBase {\r\n    protected async internalStart(param?:any) {\r\n        await this.openVPage(this.VQuerySelect, param);\r\n    }\r\n\r\n    protected get VQuerySelect():typeof VQuerySelect {return VQuerySelect}\r\n}\r\n","export * from './cQuery';\r\nexport * from './vQueryMain';\r\nexport * from './vQuerySelect';","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\r\nimport { ResUploader } from '../resUploader';\r\nimport { Image } from '../image';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { ItemEdit } from './itemEdit';\r\n\r\nexport class ImageItemEdit extends ItemEdit {\r\n    protected uiItem: UiTextItem;\r\n    private resUploader: ResUploader;\r\n    @observable private resId: string;\r\n    @observable private overSize: boolean = false;\r\n\r\n    protected async internalStart():Promise<any> {\r\n        this.resId = this.value;        \r\n        return new Promise<any>((resolve, reject) => {\r\n            nav.push(React.createElement(this.page, {resolve:resolve, reject:reject}), ()=>reject());\r\n        });\r\n    }\r\n\r\n    private upload = async () => {\r\n        if (!this.resUploader) return;\r\n        let ret = await this.resUploader.upload();\r\n        if (ret === null) {\r\n            this.overSize = true;\r\n            setTimeout(() => this.overSize = false, 3000);\r\n            return;\r\n        }\r\n        this.resId = ret;\r\n        this.isChanged = (this.resId != this.value);\r\n    }\r\n\r\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\r\n        let {resolve} = props;\r\n        let right = <button\r\n            className=\"btn btn-sm btn-success\"\r\n            disabled={!this.isChanged}\r\n            onClick={()=>resolve(this.resId)}>保存</button>;\r\n        let overSize:any;\r\n        if (this.overSize === true) {\r\n            overSize = <div className=\"text-danger\">\r\n                <i className=\"fa fa-times-circle\" /> 图片文件大小超过2M，无法上传\r\n            </div>;\r\n        }\r\n        return <Page header={'更改' + this.label} right={right}>\r\n            <div className=\"my-3 px-3 py-3 bg-white\">\r\n                <div>\r\n                    <div>上传图片：</div>\r\n                    <div className=\"my-3\">\r\n                        <ResUploader ref={v=>this.resUploader=v} multiple={false} maxSize={2048} />\r\n                    </div>\r\n                    <div>\r\n                        <button className=\"btn btn-primary\" onClick={this.upload}>上传</button>\r\n                    </div>\r\n                </div>\r\n                {overSize}\r\n                <div className=\"small muted my-4\">支持JPG、GIF、PNG格式图片，不超过2M。</div>\r\n                <div className=\"d-flex\">\r\n                    <div className=\"w-12c h-12c mr-4\"\r\n                        style={{border: '1px dotted gray', padding: '8px'}}>\r\n                        <Image className=\"w-100 h-100\" src={this.resId} />\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"small\">图片预览</div>\r\n                        <Image className=\"w-4c h-4c mt-3\" src={this.resId} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    })\r\n}\r\n","import {CenterApiBase} from '../net';\r\nimport {User, decodeUserToken} from '../user';\r\n//import { nav } from '../ui';\r\n\r\nexport interface RegisterParameter {\r\n    nick:string, \r\n    user:string, \r\n    pwd:string,\r\n    country:number, \r\n    mobile:number, \r\n    mobileCountry:number,\r\n    email:string,\r\n    verify:string,\r\n};\r\n\r\nexport class UserApi extends CenterApiBase {\r\n    async login(params: {user: string, pwd: string, guest: number}): Promise<any> {\r\n        //(params as any).device = nav.local.device.get();\r\n        let ret = await this.get('login', params);\r\n        switch (typeof ret) {\r\n            default: return;\r\n            case 'string': return decodeUserToken(ret);\r\n            case 'object':\r\n                let token = ret.token;\r\n                let user = decodeUserToken(token);\r\n                let {nick, icon} = ret;\r\n                if (nick) user.nick = nick;\r\n                if (icon) user.icon = icon;\r\n                return user;\r\n        }\r\n        // !== undefined) return decodeToken(token);\r\n    }\r\n    async register(params: RegisterParameter): Promise<any>\r\n    {\r\n        return await this.post('register', params);\r\n    }\r\n\r\n    async setVerify(account:string, type:'mobile'|'email') {\r\n        return await this.post('set-verify', {account:account, type:type});\r\n    }\r\n\r\n    async checkVerify(account:string, verify:string) {\r\n        return await this.post('check-verify', {account:account, verify:verify});\r\n    }\r\n\r\n    async isExists(account:string) {\r\n        return await this.get('is-exists', {account:account});\r\n    }\r\n\r\n    async resetPassword(account:string, password:string, verify:string, type:'mobile'|'email') {\r\n        return await this.post('reset-password', {account:account, password, verify, type});\r\n    }\r\n    \r\n    async userSetProp(prop:string, value:any) {\r\n        await this.post('tie/user-set-prop', {prop:prop, value:value});\r\n    }\r\n}\r\n\r\nexport const userApi = new UserApi('tv/user/', undefined);\r\n","import * as React from 'react';\r\n\r\nexport function Loading() {\r\n    return <div className=\"d-flex h-100 align-items-center justify-content-center\">\r\n        <i className=\"fa fa-spinner fa-spin fa-2x fa-fw text-info\" />\r\n    </div>;\r\n}\r\n\r\n/*\r\nexport function Loading() {\r\n    return <div style={{height:'100%'}} className=\"d-flex flex-fill align-items-center justify-content-center\">\r\n    <div className=\"d-flex align-items-center justify-content-center slide text-info\" style={{width:'5em', height:'2em'}}>\r\n        加载中...\r\n    </div>\r\n    </div>\r\n}\r\n*/\r\n\r\n\r\n","import * as React from 'react';\r\nimport { nav } from './nav';\r\n\r\nexport interface ResUploaderProps {\r\n    className?: string;\r\n    multiple?: boolean;\r\n    maxSize?: number;\r\n    onFilesChange?: (evt: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nexport class ResUploader extends React.Component<ResUploaderProps> {\r\n    private fileInput: HTMLInputElement;\r\n\r\n    upload = async ():Promise<string> => {\r\n        let {maxSize} = this.props;\r\n        if (maxSize === undefined || maxSize <= 0) \r\n            maxSize = 100000000000;\r\n        else\r\n            maxSize = maxSize * 1024;\r\n        let resUrl = nav.resUrl + 'upload';\r\n        var files:FileList = this.fileInput.files;\r\n        var data = new FormData();\r\n        let len = files.length;\r\n        for (let i=0; i<len; i++) {\r\n            let file = files[i];\r\n            if (file.size > maxSize) return null;\r\n            data.append('files[]', file, file.name);\r\n        }\r\n  \r\n        try {\r\n            let abortController = new AbortController();\r\n            let res = await fetch(resUrl, {\r\n                method: \"POST\",\r\n                body: data,\r\n                signal: abortController.signal,\r\n            });\r\n            let json = await res.json();\r\n            return ':' + json.res.id;\r\n        }\r\n        catch (err) {\r\n            console.error('%s %s', resUrl, err);\r\n        }\r\n    }\r\n    render() {\r\n        let {className, multiple, onFilesChange} = this.props;\r\n        return <input \r\n            className={className}\r\n            ref={t=>this.fileInput=t} \r\n            onChange={onFilesChange}\r\n            type='file' name='file' multiple={multiple} />\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { List, LMR, FA, Page, nav, Controller, TypeVPage, VPage, resLang, NavSettings} from '../../ui';\r\nimport { loadAppUqs, appInFrame, getExHash, isDevelopment, UqAppData, UqData} from '../../net';\r\nimport { CUq, UqUI } from './cUq';\r\nimport { centerApi } from '../centerApi';\r\nimport { UqApp } from '../uqs';\r\n\r\nexport interface RoleAppUI {\r\n    CApp?: typeof CApp;\r\n    CUq?: typeof CUq;\r\n    main?: TypeVPage<CApp>;\r\n    uqs: {[uq:string]: UqUI | (()=>Promise<UqUI>)};\r\n    res?: any;\r\n}\r\n\r\nexport interface AppUI extends RoleAppUI, NavSettings {\r\n    appName: string; // 格式: owner/appName\r\n    roles?: {[role:string]: RoleAppUI | (()=>Promise<RoleAppUI>)};\r\n}\r\n\r\nexport class CApp extends Controller {\r\n    //private appOwner:string;\r\n    //private appName:string;\r\n    name: string;\r\n    uqApp: UqApp;\r\n    private cImportUqs: {[uq:string]: CUq} = {};\r\n    protected ui:AppUI;\r\n    appUnits:any[];\r\n\r\n    constructor(ui:AppUI) {\r\n        super(resLang(ui && ui.res));\r\n        nav.setSettings(ui);\r\n        this.name = ui.appName;\r\n        if (this.name === undefined) {\r\n            throw 'appName like \"owner/app\" must be defined in UI';\r\n        }\r\n        if (ui.uqs === undefined) ui.uqs = {};\r\n        this.ui = ui;\r\n        this.caption = this.res.caption || 'Tonva';\r\n    }\r\n    \r\n    readonly caption: string; // = 'View Model 版的 Uq App';\r\n    cUqCollection: {[uq:string]: CUq} = {};\r\n\r\n    /*\r\n    async startDebug() {\r\n        let appName = this.appOwner + '/' + this.appName;\r\n        let cApp = new CApp({appName: appName, uqs:{}} );\r\n        let keepNavBackButton = true;\r\n        await cApp.start(keepNavBackButton);    \r\n    }\r\n    */\r\n\r\n    /*\r\n    protected async loadUqs(uqAppData:UqAppData): Promise<string[]> {\r\n        let retErrors:string[] = [];\r\n        let unit = appInFrame.unit;\r\n        //let app = await loadAppUqs(this.appOwner, this.appName);\r\n        let {id, uqs} = uqAppData;\r\n        this.id = id;\r\n\r\n        let promises: PromiseLike<string>[] = [];\r\n        let promiseChecks: PromiseLike<boolean>[] = [];\r\n        let roleAppUI = await this.buildRoleAppUI();\r\n        this.ui = roleAppUI;\r\n        for (let appUq of uqs) {\r\n            let {id:uqId, uqOwner, uqName, access} = appUq;\r\n            let uq = uqOwner + '/' + uqName;\r\n            let uqUI = roleAppUI && roleAppUI.uqs && roleAppUI.uqs[uq];\r\n            let cUq = this.newCUq(uq, uqId, access, uqUI || {});\r\n            this.cUqCollection[uq] = cUq;\r\n            promises.push(cUq.loadSchema());\r\n            promiseChecks.push(cUq.uq.uqApi.checkAccess());\r\n        }\r\n        let results = await Promise.all(promises);\r\n        Promise.all(promiseChecks).then((checks) => {\r\n            for (let c of checks) {\r\n                if (c === false) {\r\n                    //debugger;\r\n                    //nav.start();\r\n                    //return;\r\n                }\r\n            }\r\n        });\r\n        for (let result of results)\r\n        {\r\n            let retError = result; // await cUq.loadSchema();\r\n            if (retError !== undefined) {\r\n                retErrors.push(retError);\r\n                continue;\r\n            }\r\n        }\r\n        if (retErrors.length === 0) return;\r\n        return retErrors;\r\n    }\r\n    */\r\n    /*\r\n    private async buildRoleAppUI():Promise<AppUI> {\r\n        if (!this.ui) return undefined;\r\n        let {hashParam} = nav;\r\n        if (!hashParam) return this.ui;\r\n        let {roles} = this.ui;\r\n        let roleAppUI = roles && roles[hashParam];\r\n        if (!roleAppUI) return this.ui;\r\n        let ret:AppUI = {} as any;\r\n        for (let i in this.ui) {\r\n            if (i === 'roles') continue;\r\n            ret[i] = this.ui[i];\r\n        }\r\n        if (typeof roleAppUI === 'function') roleAppUI = await roleAppUI();\r\n        _.merge(ret, roleAppUI);\r\n        return ret;\r\n    }\r\n    */\r\n\r\n    getImportUq(uqOwner:string, uqName:string):CUq {\r\n        let uq = uqOwner + '/' + uqName;\r\n        let cUq = this.cImportUqs[uq];\r\n        if (cUq !== undefined) return cUq;\r\n        let ui = this.ui && this.ui.uqs && this.ui.uqs[uq];\r\n        let uqId = -1; // unknown\r\n        this.cImportUqs[uq] = cUq = this.getCUq(uq);\r\n        //this.newCUq(uq, uqId, undefined, ui || {});\r\n        /*\r\n        let retError = await cUq.loadSchema();\r\n        if (retError !== undefined) {\r\n            console.error(retError);\r\n            debugger;\r\n            return;\r\n        }\r\n        */\r\n        return cUq;\r\n    }\r\n\r\n    protected newCUq(uqData: UqData, uqUI: UqUI) {\r\n        let cUq = new (this.ui.CUq || CUq)(this, uqData, uqUI);\r\n        Object.setPrototypeOf(cUq.x, this.x);\r\n        return cUq;\r\n    }\r\n\r\n    get cUqArr():CUq[] {\r\n        let ret:CUq[] = [];\r\n        for (let i in this.cUqCollection) {\r\n            ret.push(this.cUqCollection[i]);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    getCUq(uq:string):CUq {\r\n        return this.cUqCollection[uq];\r\n    }\r\n\r\n    protected get VAppMain():TypeVPage<CApp> {return (this.ui&&this.ui.main) || VAppMain}\r\n    protected async beforeStart():Promise<boolean> {\r\n        try {\r\n            let retErrors = await this.load();\r\n            //let app = await loadAppUqs(this.appOwner, this.appName);\r\n            // if (isDevelopment === true) {\r\n            // 这段代码原本打算只是在程序员调试方式下使用，实际上，也可以开放给普通用户，production方式下\r\n            let {predefinedUnit} = appInFrame;\r\n            //let {id} = app;\r\n            //this.id = id;\r\n            let {user} = nav;\r\n            if (user !== undefined && user.id > 0) {\r\n                this.appUnits = await centerApi.userAppUnits(this.uqApp.id);\r\n                switch (this.appUnits.length) {\r\n                    case 0:\r\n                        this.showUnsupport(predefinedUnit);\r\n                        return false;\r\n                    case 1:\r\n                        let appUnit = this.appUnits[0].id;\r\n                        if (appUnit === undefined || appUnit < 0 || \r\n                            predefinedUnit !== undefined && appUnit != predefinedUnit)\r\n                        {\r\n                            this.showUnsupport(predefinedUnit);\r\n                            return false;\r\n                        }\r\n                        appInFrame.unit = appUnit;\r\n                        break;\r\n                    default:\r\n                        if (predefinedUnit>0 && this.appUnits.find(v => v.id===predefinedUnit) !== undefined) {\r\n                            appInFrame.unit = predefinedUnit;\r\n                            break;\r\n                        }\r\n                        nav.push(<this.selectUnitPage />)\r\n                        return false;\r\n                }\r\n            }\r\n            //}\r\n\r\n            //let retErrors = await this.loadUqs(app);\r\n            if (retErrors !== undefined) {\r\n                this.openPage(<Page header=\"ERROR\">\r\n                    <div className=\"m-3\">\r\n                        <div>Load Uqs 发生错误：</div>\r\n                        {retErrors.map((r, i) => <div key={i}>{r}</div>)}\r\n                    </div>\r\n                </Page>);\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        catch (err) {\r\n            nav.push(<Page header=\"App start error!\">\r\n                <pre>\r\n                    {typeof err === 'string'? err : err.message}\r\n                </pre>\r\n            </Page>);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    private async load(): Promise<string[]> {\r\n        this.uqApp = new UqApp(this.name);\r\n        let {appOwner, appName} = this.uqApp;\r\n        let uqAppData = await loadAppUqs(appOwner, appName);\r\n        let {id, uqs} = uqAppData;\r\n        this.uqApp.id = id;\r\n\r\n        let retErrors:string[] = [];\r\n\r\n        let promiseInits: PromiseLike<void>[] = [];\r\n        let promises: PromiseLike<string>[] = [];\r\n        let promiseChecks: PromiseLike<boolean>[] = [];\r\n        for (let uqData of uqs) {\r\n            let {id, uqOwner, uqName, access} = uqData;\r\n            let uqFullName = uqOwner + '/' + uqName;\r\n            let uqUI = this.ui.uqs[uqFullName] as UqUI || {};\r\n            let cUq = this.newCUq(uqData, uqUI);\r\n            this.cUqCollection[uqFullName] = cUq;\r\n            this.uqApp.addUq(cUq.uq);\r\n            promiseInits.push(cUq.init());\r\n        }\r\n        await Promise.all(promiseInits);\r\n\r\n        for (let i in this.cUqCollection) {\r\n            let cUq = this.cUqCollection[i];\r\n            promises.push(cUq.loadEntities());\r\n            promiseChecks.push(cUq.checkEntities());\r\n        }\r\n        let results = await Promise.all(promises);\r\n        Promise.all(promiseChecks).then((checks) => {\r\n            for (let c of checks) {\r\n                if (c === false) {\r\n                    //debugger;\r\n                    //nav.start();\r\n                    //return;\r\n                }\r\n            }\r\n        });\r\n        for (let result of results)\r\n        {\r\n            let retError = result; // await cUq.loadSchema();\r\n            if (retError !== undefined) {\r\n                retErrors.push(retError);\r\n                continue;\r\n            }\r\n        }\r\n        if (retErrors.length === 0) {\r\n            this.uqApp.setTuidImportsLocal();\r\n            return;\r\n        }\r\n        return retErrors;\r\n    }\r\n\r\n    protected async internalStart(param:any) {\r\n        if (param !== true) {\r\n            this.clearPrevPages();\r\n        }\r\n        await this.showMainPage();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        return this.renderView(this.VAppMain);\r\n    }\r\n\r\n    // 如果是独立app，删去显示app之前的页面。\r\n    // 如果非独立app，则不删\r\n    protected clearPrevPages() {\r\n        nav.clear();\r\n    }\r\n\r\n    private showUnsupport(predefinedUnit: number) {\r\n        this.clearPrevPages();\r\n        let {user} = nav;\r\n        let userName:string = user? user.name : '[未登录]';\r\n        let {appOwner, appName} = this.uqApp;\r\n        this.openPage(<Page header=\"APP无法运行\" logout={true}>\r\n            <div className=\"m-3 text-danger container\">\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-sm-3 font-weight-bold\">登录用户</div>\r\n                    <div className=\"col-sm text-body\">{userName}</div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-sm-3 font-weight-bold\">App</div>\r\n                    <div className=\"col-sm text-body\">{`${appOwner}/${appName}`}</div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-sm-3 font-weight-bold\">预设小号</div>\r\n                    <div className=\"col-sm text-body\">{predefinedUnit || <small className=\"\">[无预设小号]</small>}</div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-sm-3 font-weight-bold\">\r\n                        可能原因<FA name=\"exclamation-triangle\" />\r\n                    </div>\r\n                    <div className=\"col-sm text-body\">\r\n                        <ul className=\"p-0\">\r\n                            <li>没有小号运行 {this.ui.appName}</li>\r\n                            <li>用户 <b>{userName}</b> 没有加入任何一个运行{this.ui.appName}的小号</li>\r\n                            {\r\n                                predefinedUnit && \r\n                                <li>预设小号 <b>{predefinedUnit}</b> 没有运行App {this.ui.appName}</li>\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-sm-3 font-weight-bold\">小号{predefinedUnit}</div>\r\n                    <div className=\"col-sm text-body\">\r\n                        预设小号定义在 public/unit.json 文件中。\r\n                        定义了这个文件的程序，只能由url直接启动。\r\n                        用户第一次访问app之后，会缓存在localStorage里。<br/>\r\n                        如果要删去缓存的预定义Unit，logout然后再login。\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Page>)\r\n    }\r\n\r\n    private async showMainPage() {\r\n        // #tv-RwPBwMef-23-sheet-api-108\r\n        let exHash = getExHash();\r\n        if (exHash !== undefined) {\r\n            let parts = exHash.split('-');\r\n            if (parts.length > 3) {\r\n                let action = parts[3];\r\n                // sheet_debug 表示centerUrl是debug方式的\r\n                if (action === 'sheet' || action === 'sheet_debug') {\r\n                    let uqId = Number(parts[4]);\r\n                    let sheetTypeId = Number(parts[5]);\r\n                    let sheetId = Number(parts[6]);\r\n                    let cUq = this.getCUqFromId(uqId);\r\n                    if (cUq === undefined) {\r\n                        alert('unknown uqId: ' + uqId);\r\n                        return;\r\n                    }\r\n                    this.clearPrevPages();\r\n                    await cUq.navSheet(sheetTypeId, sheetId);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        this.openVPage(this.VAppMain);\r\n    }\r\n\r\n    private getCUqFromId(uqId:number): CUq {\r\n        for (let i in this.cUqCollection) {\r\n            let cUq = this.cUqCollection[i];\r\n            if (cUq.uq.id === uqId) return cUq;\r\n        }\r\n        return;\r\n    }\r\n\r\n    renderRow = (item: any, index: number):JSX.Element => {\r\n        let {id, nick, name} = item;\r\n        return <LMR className=\"px-3 py-2\" right={'id: ' + id}>\r\n            <div>{nick || name}</div>\r\n        </LMR>;\r\n    }\r\n    onRowClick = async (item: any) => {\r\n        appInFrame.unit = item.id; // 25;\r\n        await this.start();\r\n    }\r\n\r\n    protected selectUnitPage = () => {\r\n        return <Page header=\"选择小号\" logout={true}>\r\n            <List items={this.appUnits} item={{render: this.renderRow, onClick: this.onRowClick}}/>\r\n        </Page>\r\n    }\r\n}\r\n\r\nclass VAppMain extends VPage<CApp> {\r\n    async open(param?:any) {\r\n        this.openPage(this.appPage);\r\n    }\r\n\r\n    render(param?:any) {\r\n        return this.appContent();\r\n    }\r\n\r\n    protected appPage = () => {\r\n        let {caption} = this.controller;\r\n        return <Page header={caption} logout={async()=>{appInFrame.unit = undefined}}>\r\n            {this.appContent()}\r\n        </Page>;\r\n    }\r\n\r\n    protected appContent = () => {\r\n        let {cUqArr} = this.controller;\r\n        let content:any;\r\n        if (cUqArr.length === 0) {\r\n            content = <div className=\"text-danger\">\r\n                <FA name=\"\" /> 此APP没有绑定任何的UQ\r\n            </div>;\r\n        }\r\n        else {\r\n            content = cUqArr.map((v,i) => <div key={i}>{v.render()}</div>);\r\n        }\r\n        return <>{content}</>;\r\n    };\r\n}\r\n","import React from 'react';\r\nimport { FA } from '../../ui';\r\n\r\nfunction icon(className:string, name:string) {\r\n    return <FA className={className} name={name} fixWidth={true} />;\r\n}\r\n\r\nexport const entityIcons:{[type:string]:JSX.Element} = {\r\n    tuid: icon('text-info', 'list-alt'),\r\n    action: icon('text-info', 'hand-o-right'),\r\n    map: icon('text-muted', 'list-ul'),\r\n    book: icon('text-muted', 'book'),\r\n    query: icon('text-warning', 'search'),\r\n    history: icon('text-info', 'hand-o-right'),\r\n    pending: icon('text-info', 'forward'),\r\n    sheet: icon('text-primary', 'wpforms'),\r\n};\r\n","import { Controller } from '../../ui';\r\nimport { CUq } from './cUq';\r\n\r\nexport abstract class ControllerUq extends Controller {\r\n    constructor(cUq: CUq, res:any) {\r\n        super(res);\r\n        this.cUq = cUq;\r\n    }\r\n    cUq: CUq;\r\n}\r\n","import {CenterApiBase} from '../net';\r\n\r\n//\r\n\r\nexport class CenterApi extends CenterApiBase {\r\n    async userAppUnits(app:number):Promise<any[]> {\r\n        return await this.get('tie/user-app-units', {app:app});\r\n    }\r\n}\r\n\r\nexport const centerApi = new CenterApi('tv/', undefined);\r\n","export * from './rule';\r\nexport * from './field';\r\nexport * from './face';\r\nexport * from './rowContainer';\r\nexport * from './formView';\r\nexport * from './TonvaForm';\r\nexport {ControlBase} from './control';\r\n","import * as React from 'react';\r\nimport {FormEvent} from 'react';\r\nimport {computed} from 'mobx';\r\nimport {uid} from 'tonva';\r\nimport {Rule} from './rule';\r\nimport {Field} from './field';\r\nimport {Face} from './face';\r\nimport {CreateControl, ButtonsControl} from './control';\r\nimport {RowContainer, CreateRow, bootstrapCreateRow, elementCreateRow} from './rowContainer';\r\n\r\nexport interface FieldView {\r\n    field: Field;\r\n    face?: Face;\r\n}\r\n\r\nexport interface LabeledRow {\r\n    label?: string;\r\n    createRow?: CreateRow;\r\n    createControl?: CreateControl;\r\n    help?: JSX.Element;\r\n}\r\n\r\nexport interface FieldRow extends LabeledRow, FieldView {\r\n}\r\n\r\nexport interface GroupRow extends LabeledRow {\r\n    group: FieldView[];\r\n}\r\n\r\nexport type LabelFormRow = FieldRow|GroupRow|LabeledRow;\r\nexport type FormRow = LabelFormRow|JSX.Element;\r\n\r\nexport interface SubmitResult {\r\n    success: boolean;\r\n    message?: string\r\n    result?: any;\r\n}\r\n\r\nexport interface FormProps {\r\n    formRows: FormRow[];\r\n    //context?: any;              // form context，比如，可以是EntitiesUI\r\n    rules?: Rule | Rule[];\r\n    onSubmit: (values:any) => Promise<SubmitResult|undefined>;\r\n    submitButton?: string|JSX.Element;\r\n    otherButton?: string|JSX.Element;\r\n    onOther?: (values:any) => void;\r\n    createRow?: CreateRow;\r\n    createControl?: CreateControl;\r\n    readOnly?: boolean;\r\n}\r\n\r\nexport class FormView {\r\n    uid:string;\r\n    private rows: RowContainer[] = [];\r\n    private buttonsRow: RowContainer;\r\n    props: FormProps;\r\n    createControl?: CreateControl;\r\n    constructor(props:FormProps) {\r\n        this.uid = uid();\r\n        this.props = props;\r\n        this.buildRows(props);\r\n        this.createControl = props.createControl;\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    @computed get hasError():boolean {\r\n        let ret = this.rows.map((v, index) => index + ': ' + v.hasError + '\\n');\r\n        console.log(ret);\r\n        return this.rows.some(row => row.hasError);\r\n    }\r\n    @computed get nothing():boolean {\r\n        let ret = this.rows.every(row => !row.filled);\r\n        return ret;\r\n    }\r\n\r\n    readValues():any {\r\n        let values = {} as any;\r\n        for (let row of this.rows) {\r\n            row.readValues(values);\r\n        }\r\n        return values;\r\n    }\r\n\r\n    clear() {\r\n        for (let row of this.rows) {\r\n            row.clear();\r\n        }\r\n    }\r\n\r\n    clearErrors() {\r\n        for (let row of this.rows) {\r\n            row.clearErrors();\r\n        }\r\n    }\r\n\r\n    setError(fieldName:string, error:string) {\r\n        for (let row of this.rows) {\r\n            row.setError(fieldName, error);\r\n        }\r\n    }\r\n\r\n    setInitValues(initValues:any) {\r\n        if (initValues === undefined) return;\r\n        for (let row of this.rows) {\r\n            row.setInitValues(initValues);\r\n        }\r\n    }\r\n\r\n    private buildRows(props:FormProps) {\r\n        let {formRows, createRow} = props;\r\n        if (formRows !== undefined) {\r\n            for (let row of formRows) {\r\n                this.rows.push(this.buildRow(row, createRow));\r\n            }\r\n            if (this.props.readOnly !== true) {\r\n                this.buttonsRow = this.buildRow({createControl:this.createButtons.bind(this)}, undefined);\r\n            }\r\n        }\r\n        else {\r\n            this.rows.push(elementCreateRow(this, <div className=\"text-warning\">TonvaForm need formRows defined</div>));\r\n        }\r\n    }\r\n\r\n    private buildRow(formRow: FormRow, formRowCreator: CreateRow):RowContainer {\r\n        let createRow:CreateRow;\r\n        let type = (formRow as JSX.Element).type;\r\n        if (type !== undefined) {\r\n            createRow = elementCreateRow;\r\n        }\r\n        else {\r\n            createRow = (formRow as (FieldRow | GroupRow | LabeledRow)).createRow;\r\n            if (createRow === undefined) {\r\n                createRow = formRowCreator;\r\n                if (createRow === undefined) createRow = bootstrapCreateRow;\r\n            }\r\n        }\r\n        let row = createRow(this, formRow);\r\n        return row;\r\n    }\r\n\r\n    private createButtons(form:FormView, row: FormRow) {\r\n        return new ButtonsControl(form);\r\n    }\r\n\r\n    private isOk():boolean {\r\n        let isOk = true;\r\n        for (let row of this.rows) {\r\n            if (!row.isOk()) isOk = false;\r\n        }\r\n        return isOk;\r\n    }\r\n\r\n    render():JSX.Element {\r\n        return <form onSubmit={this.onSubmit}>\r\n            {this.rows.map((row,index) => row.render(this.uid + index))}\r\n            {this.buttons()}\r\n        </form>;\r\n    }\r\n\r\n    buttons():JSX.Element {\r\n        if (this.buttonsRow === undefined) return;\r\n        return this.buttonsRow.render(this.uid + this.rows.length);\r\n    }\r\n    \r\n    async onSubmit(event:FormEvent<HTMLFormElement>) {\r\n        event.preventDefault();\r\n        if (!this.isOk()) return;\r\n        let values = this.readValues();\r\n        await this.props.onSubmit(values);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Page, List, Muted, LMR } from '../../../ui';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../uqs';\r\nimport { CSheet, SheetUI } from './cSheet';\r\n\r\nexport class VSheetMain extends VEntity<Sheet, SheetUI, CSheet> {\r\n    async open() {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    newClick = () => this.event('new');\r\n    schemaClick = () => this.event('schema'); \r\n    archivesClick = () => this.event('archives');\r\n    sheetStateClick = (state) => this.event('state', state);\r\n\r\n    renderState = (item:any, index:number) => {\r\n        let {state, count} = item;\r\n        if (count === 0) return null;\r\n        let badge = <span className=\"badge badge-success ml-5 align-self-end\">{count}</span>;\r\n        return <LMR className=\"px-3 py-2\" left={this.controller.getStateLabel(state)} right={badge} />;\r\n    }\r\n\r\n    protected view = observer(() => {\r\n        let list = this.controller.statesCount.filter(row=>row.count);\r\n        let right = <button className=\"btn btn-outline-primary\" onClick={this.archivesClick}>已归档</button>;\r\n        let templet:any;\r\n        if (this.isDev === true) {\r\n            templet = <button className=\"btn btn-primary mr-2\" color=\"primary\" onClick={this.schemaClick}>模板</button>;\r\n        }\r\n        return <Page header={this.label}>\r\n            <LMR\r\n                className=\"mx-3 my-2\"\r\n                right={right}>\r\n                <button className=\"btn btn-primary mr-2\" color=\"primary\" onClick={this.newClick}>新建</button>\r\n                {templet}\r\n            </LMR>\r\n            <List className=\"my-2\"\r\n                header={<Muted className=\"mx-3 my-1\">待处理{this.label}</Muted>}\r\n                none=\"[ 无 ]\"\r\n                items={list}\r\n                item={{render:this.renderState, onClick:this.sheetStateClick}} />\r\n        </Page>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from '../../../ui';\r\nimport { Sheet } from '../../uqs';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { SheetUI, CSheet } from './cSheet';\r\n\r\nexport class VSheetNew extends VEntity<Sheet, SheetUI, CSheet> {\r\n    vForm: VForm;\r\n\r\n    async open(param?:any) {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    private onSubmit = async ():Promise<void> => {\r\n        let values = this.vForm.getValues();\r\n        let valuesWithBox = this.vForm.values;\r\n        //let ret = \r\n        await this.controller.onSave(values, valuesWithBox);\r\n        /*\r\n        this.ceasePage();\r\n        //this.openPage(this.finishedPage);\r\n        await this.controller.showSaved(ret);\r\n        */\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render()}\r\n    </Page>;\r\n}\r\n","import * as React from 'react';\r\nimport {List, Muted, LMR, EasyDate, FA} from '../../../ui';\r\nimport { Sheet } from '../../uqs';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CSheet, SheetUI, SheetData } from './cSheet';\r\n\r\nconst leftFlowStyle = {width: '8rem'};\r\n\r\nexport abstract class VSheetView extends VEntity<Sheet, SheetUI, CSheet> {\r\n    protected vForm: VForm;\r\n    protected sheetData: SheetData;\r\n    //data: any;\r\n    //state: string;\r\n    //flows:any[];\r\n\r\n    flowRow = (item:any, index:number):JSX.Element => {\r\n        let {date, user, preState, state, action} = item;\r\n        if (action === undefined) action = <><FA className=\"text-primary\" name=\"pencil-square-o\" /> 制单</>;\r\n        let to;\r\n        switch (state) {\r\n            case '$': break;\r\n            case '#': to = <><FA className=\"text-success\" name=\"file-archive-o\" /></>; break;\r\n            default: to = <><FA className=\"text-muted\" name=\"arrow-right\" /> &nbsp; {state}</>; break;\r\n        }\r\n        /*\r\n        return <div className=\"row\">\r\n            <div className=\"col-sm\"></div>\r\n            <div className=\"col-sm\"><div className=\"p-2\">{to}</div></div>\r\n            <div className=\"col-sm text-right\"><div className=\"p-2\"><Muted><EasyDate date={date} /></Muted></div></div>\r\n        </div>;\r\n        */\r\n        return <LMR \r\n            left={<div className=\"pl-3 py-2\" style={leftFlowStyle}>{action}</div>}\r\n            right={<div className=\"p-2\"><Muted><EasyDate date={date} /></Muted></div>}>\r\n            <div className=\"p-2\">{to}</div>\r\n        </LMR>;\r\n    }\r\n\r\n    protected sheetView = () => {\r\n        let {brief, flows} = this.sheetData;\r\n        let removed;\r\n        if (brief.state === '-')\r\n            removed = <div className=\"mx-3 my-2\" style={{color:'red'}}>本单据作废</div>;\r\n        return <div>\r\n            {removed}\r\n            {this.vForm.render()}\r\n    \r\n            <List header={<Muted className=\"mx-3 my-1\">流程</Muted>}\r\n                items={flows}\r\n                item={{render:this.flowRow}}/>\r\n        </div>;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from '../../../ui';\r\nimport { VForm, FormMode } from '../form';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\n\r\nexport class VSheetEdit extends VSheetView { //VEntity<Sheet, SheetUI, CSheet> {\r\n    protected sheetData: SheetData;\r\n    async open(param: SheetData) {\r\n        this.sheetData = param;\r\n        this.vForm = this.createForm(this.onSubmit, param.data, FormMode.edit);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSubmit = async ():Promise<void> => {\r\n        let values = this.vForm.getValues();\r\n        await this.controller.saveSheet(values, this.vForm.values);\r\n        this.closePage();\r\n        this.returnCall(this.vForm.values);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render()}\r\n    </Page>;\r\n}\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport { FA, Page } from '../../../ui';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\n\r\nexport class VSheetAction extends VSheetView { \r\n    async open(sheetData:SheetData) {\r\n        this.sheetData = sheetData;\r\n        //let {brief, data, flows} = await this.controller.getSheetData(sheetId);\r\n        //this.brief = brief;\r\n        //this.flows = flows;\r\n        //this.data = data;\r\n        //this.state = this.brief.state;\r\n        this.vForm = this.createForm(undefined, sheetData.data);\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    actionClick = async (action:any) => {\r\n        let {id, flow, state} = this.sheetData.brief;\r\n        let res = await this.controller.action(id, flow, state, action.name);\r\n        this.ceasePage();\r\n        this.openPage(this.acted);\r\n        //alert(jsonStringify(res));\r\n        //await this.backPage();\r\n    }\r\n\r\n    deleteClick = async () => {\r\n        alert('单据作废：程序正在设计中');\r\n    }\r\n\r\n    editClick = async () => {\r\n        //alert('修改单据：程序正在设计中');\r\n        let values = await this.controller.editSheet(this.sheetData);\r\n        this.vForm.setValues(values);\r\n    }\r\n\r\n    protected page = () => {\r\n        let {brief} = this.sheetData;\r\n        let {state, no} = brief;\r\n        let stateLabel = this.controller.getStateLabel(state);\r\n        let {states} = this.entity;\r\n        let s = states.find(v => v.name === state);\r\n        let actionButtons, startButtons;\r\n        if (s === undefined) {\r\n            let text:string, cn:string;\r\n            switch (state) {\r\n                default:\r\n                    text = '不认识的单据状态\\'' + state + '\\'';\r\n                    cn = 'text-info';\r\n                    break;\r\n                case '-': \r\n                    text = '已作废';\r\n                    cn = 'text-danger';\r\n                    break;\r\n                case '#':\r\n                    text = '已归档';\r\n                    cn = 'text-success';\r\n                    break;\r\n            }\r\n            actionButtons = <div className={classNames(cn)}>[{text}]</div>;\r\n        }\r\n        else {\r\n            actionButtons = <div className=\"flex-grow-1\">{s.actions.map((v,index) => \r\n                <button\r\n                    key={index}\r\n                    className=\"btn btn-primary mr-2\"\r\n                    onClick={()=>this.actionClick(v)}\r\n                >\r\n                    {this.controller.getActionLabel(state, v.name)}\r\n                </button>)}\r\n            </div>;\r\n            if (state === '$') {\r\n                startButtons = <div>\r\n                    <button className=\"btn btn-outline-info ml-2\" onClick={this.editClick}>修改</button>\r\n                    <button className=\"btn btn-outline-danger ml-2\" onClick={this.deleteClick}>作废</button>\r\n                </div>\r\n            }\r\n        };\r\n        return <Page header={this.label + ':' + stateLabel + '-' + no}>\r\n            <div className=\"mb-2\">\r\n                <div className=\"d-flex px-3 py-2 border-bottom bg-light\">\r\n                    {actionButtons}\r\n                    {startButtons}\r\n                </div>\r\n                <this.sheetView />\r\n            </div>\r\n        </Page>;\r\n    }\r\n\r\n    private acted = () => {\r\n        let {discription} = this.sheetData.brief;\r\n        return <Page header=\"已处理\" back=\"close\">\r\n            <div className=\"p-3 d-flex flex-column align-items-center\">\r\n                <div className=\"p-3\">{discription}</div>\r\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已处理！</div>\r\n                <div className=\"p-3\">\r\n                    <button className=\"btn btn-outline-info\" onClick={()=>this.backPage()}>返回</button>\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from '../../../ui';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../uqs';\r\nimport { SheetUI, CSheet } from './cSheet';\r\n\r\nexport class VSheetSchema extends VEntity<Sheet, SheetUI, CSheet> {\r\n    async open(param?:any) {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label + \"模板\"}>\r\n        <pre className=\"mx-3 my-2\">{this.entity.schemaStringify()}</pre>\r\n    </Page>;\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { Page, List, LMR, FA, EasyDate, Muted } from '../../../ui';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../uqs';\r\nimport { SheetUI, CSheet } from './cSheet';\r\n\r\nexport class VArchives extends VEntity<Sheet, SheetUI, CSheet> {\r\n    list: any[];\r\n\r\n    async open() {\r\n        this.list = await this.entity.getArchives(undefined, 10);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    archiveClick = async (brief:any) => {\r\n        if (brief.processing===1) return;\r\n        this.event('archived', brief);\r\n    }\r\n    archiveRow = (row:any, index:number) => {\r\n        let {id, no, discription, date} = row;\r\n        let left = <>\r\n            {row.processing===1? '... ' : ''}\r\n            {row.no} &nbsp; {row.discription}\r\n        </>;\r\n        let right = <Muted><EasyDate date={date} /></Muted>;\r\n        return <LMR className=\"px-3 py-2\" left={left} right={right} />\r\n    }\r\n\r\n    protected view = () => {\r\n        return <Page header={'已归档' + this.label}>\r\n            <List items={this.list} item={{render:this.archiveRow, onClick:this.archiveClick}} />\r\n        </Page>;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { Page, nav, List, Muted, FA, LMR, EasyDate } from '../../../ui';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../uqs';\r\nimport { CSheet, SheetUI } from './cSheet';\r\n\r\nexport class VSheetList extends VEntity<Sheet, SheetUI, CSheet> {\r\n    protected row: (values) => JSX.Element;\r\n    stateName: string;\r\n    stateLabel: string;\r\n\r\n    async open(item:any) {\r\n        this.row = this.ui.listRow || this.rowContent;\r\n        this.stateName = item.state;\r\n        this.stateLabel = this.controller.getStateLabel(this.stateName);\r\n        //await this.controller.getStateSheets(this.stateName, 0, 10);\r\n        await this.controller.pageStateItems.first(this.stateName);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    rowClick = async (brief:any) => {\r\n        if (brief.processing===1) {\r\n            this.event('processing', brief.id);\r\n            return;\r\n        }\r\n        this.event('action', brief.id);\r\n    }\r\n\r\n    private onScrollBottom = () => {\r\n        console.log('onScrollBottom');\r\n        this.controller.pageStateItems.more();\r\n    }\r\n\r\n    protected rowContent = (row:any):JSX.Element => {\r\n        let {id, no, discription, date, processing} = row;\r\n        let left = <>            \r\n            {no} &nbsp; <Muted>{discription}</Muted> {processing===1? '...' : ''}\r\n        </>;\r\n        let right = <Muted><EasyDate date={date} /></Muted>;\r\n        return <LMR className=\"px-3 py-2\" left={left} right={right} />;\r\n    }\r\n\r\n    private renderRow = (row:any, index:number) => <this.row {...row} />\r\n\r\n    protected view = () => {\r\n        //let sheets = this.controller.stateSheets;\r\n        let {pageStateItems} = this.controller;\r\n        return <Page header={this.label + ' - ' + this.stateLabel} onScrollBottom={this.onScrollBottom}>\r\n            <List items={pageStateItems} item={{render:this.renderRow, onClick:this.rowClick}} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from '../../../ui';\r\nimport { VSheetView } from './vSheetView';\r\nimport { CSheet, SheetUI, SheetData } from './cSheet';\r\n\r\nexport interface SheetStateFlows {\r\n    flows: any;\r\n    data: any;\r\n}\r\nexport class VArchived extends VSheetView {\r\n    //protected controller: CSheet;\r\n    //brief: any;\r\n\r\n    async open(sheetData:SheetData) {\r\n        this.sheetData = sheetData;\r\n        /*\r\n        let {brief, data, flows} = await this.controller.getArchived(inBrief.id);\r\n        this.brief = brief;\r\n        this.data = data;\r\n        this.flows = flows;\r\n        */\r\n        this.vForm = this.createForm(undefined, this.sheetData.data);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => {\r\n        let {brief} = this.sheetData;\r\n        return <Page header={this.label + ':' + '-' + brief.no}>\r\n            <this.sheetView />\r\n        </Page>;\r\n    };\r\n}\r\n","import { Sheet } from '../../uqs';\r\nimport { SheetUI, CSheet } from './cSheet';\r\nimport { VEntity } from '../CVEntity';\r\n\r\nexport abstract class VSheet extends VEntity<Sheet, SheetUI, CSheet> {\r\n}\r\n","import * as React from 'react';\r\nimport { Page, FA } from '../../../ui';\r\nimport { VSheet } from './vSheet';\r\n\r\nexport class VSheetSaved extends VSheet {\r\n    private brief: any;\r\n    async open(brief?:any) {\r\n        this.brief = brief;\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    private restart = async () => {\r\n        this.ceasePage();\r\n        await this.event('new');\r\n    }\r\n\r\n    actionClick = async (action:any) => {\r\n        this.ceasePage();\r\n        let {id, flow, state} = this.brief;\r\n        let res = await this.controller.action(id, flow, state, action.name);\r\n        this.openPage(this.acted);\r\n    }\r\n\r\n    private buttons = <>\r\n        <button className=\"btn btn-outline-primary mr-3\" onClick={this.restart}>继续开单</button>\r\n        <button className=\"btn btn-outline-info\" onClick={()=>this.backPage()}>返回</button>\r\n    </>;\r\n\r\n    private view = () => {\r\n        let {states} = this.entity;\r\n        const state = '$';\r\n        let s = states.find(v => v.name === state);\r\n        let actionButtons = <>{s.actions.map((v,index) => \r\n            <button\r\n                key={index}\r\n                className=\"btn btn-primary mr-3\"\r\n                onClick={()=>this.actionClick(v)}\r\n            >\r\n                {this.controller.getActionLabel(state, v.name)}\r\n            </button>)}\r\n        </>;\r\n        return <Page header=\"已保存\" back=\"close\">\r\n            <div className=\"p-3 d-flex flex-column align-items-center\">\r\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已保存！系统尚未处理</div>\r\n                <div className=\"p-3\">\r\n                    {actionButtons}\r\n                    {this.buttons}\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    }\r\n\r\n    private acted = () => {\r\n        return <Page>\r\n            <div className=\"p-3 d-flex flex-column align-items-center\">\r\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已处理！</div>\r\n                <div className=\"p-3\">\r\n                    {this.buttons}\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { nav, Page } from '../../../ui';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\n\r\nexport class VSheetProcessing extends VSheetView { \r\n    async open(sheetData:SheetData) {\r\n        this.sheetData = sheetData;\r\n        //let {brief, data, flows} = await this.controller.getSheetData(sheetId);\r\n        //this.brief = brief;\r\n        //this.flows = flows;\r\n        //this.data = data;\r\n        //this.state = this.brief.state;\r\n        this.vForm = this.createForm(undefined, sheetData.data);\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    protected page = () => {\r\n        let {brief} = this.sheetData;\r\n        let {state, no} = brief;\r\n        let stateLabel = this.controller.getStateLabel(state);\r\n        return <Page header={this.label + ':' + stateLabel + '-' + no}>\r\n            <div className=\"mb-2\">\r\n                <div className=\"d-flex px-3 py-2 border-bottom bg-light\">\r\n                    正在处理中...\r\n                </div>\r\n                <this.sheetView />\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n","import { IObservableArray, observable } from 'mobx';\r\nimport { postWsToTop } from '../../../net';\r\nimport { TypeVPage, VPage } from '../../../ui';\r\nimport { PageItems } from '../../../pageItems'\r\nimport { Sheet, StateCount } from '../../uqs';\r\nimport { CEntity, EntityUI, VEntity } from '../CVEntity';\r\nimport { VSheetMain } from './vMain';\r\nimport { VSheetNew } from './vNew';\r\nimport { VSheetEdit } from './vEdit';\r\nimport { VSheetAction } from './vSheetAction';\r\nimport { VSheetSchema } from './vSchema';\r\nimport { VArchives } from './vArchives';\r\nimport { VSheetList } from './vList';\r\nimport { VArchived } from './vArchived';\r\nimport { VSheetSaved } from './vSaved';\r\nimport { VSheetProcessing } from './vSheetProcessing';\r\n\r\nexport interface SheetActionUI {\r\n    label: string;\r\n}\r\n\r\nexport interface StateUI {\r\n    label: string;\r\n    actions: {[name:string]: SheetActionUI}\r\n}\r\n\r\nexport interface SheetUI extends EntityUI {\r\n    CSheet?: typeof CSheet;\r\n    states?: {[name:string]: StateUI};\r\n    main?: TypeVPage<CSheet>;\r\n    sheetNew?: TypeVPage<CSheet>;\r\n    sheetSaved?: TypeVPage<CSheet>;\r\n    sheetEdit?: TypeVPage<CSheet>;\r\n    sheetAction?: TypeVPage<CSheet>;\r\n    listRow?: (row:any) => JSX.Element;\r\n    sheetTitle?: (sheetValues:any, x:any) => string;      // 返回单据的描述\r\n}\r\n\r\nexport interface SheetData {\r\n    brief: any;\r\n    data: any;\r\n    flows: any[];\r\n}\r\n\r\nexport class CSheet extends CEntity<Sheet, SheetUI> {\r\n    statesCount:IObservableArray<StateCount> = observable.array<StateCount>([], {deep:true});\r\n    curState:string;\r\n    pageStateItems: PageItems<any>;\r\n\r\n    protected async internalStart() {\r\n        await this.loadStateSheetCount();\r\n        this.pageStateItems = this.entity.createPageStateItems();\r\n        await this.openVPage(this.VSheetMain);\r\n    }\r\n\r\n    protected async onMessage(msg: any):Promise<void> {\r\n        let {type, body, from, to, push} = msg;\r\n        if (type === 'sheet') this.onSheet(from, to, body);\r\n    }\r\n    private onSheet(from:number, to:number[], sheetData:any) {\r\n        let me = this.user.id;\r\n        let {id, preState, state} = sheetData;\r\n        console.log({$:'onMessage sheet', from:from, to:to.join(','), id:id, preState:preState, state:state, me:me, sheetData:sheetData})\r\n        if (from === me) {\r\n            this.sheetActPreState(id, preState);\r\n        }\r\n        if (to.find(v=>v===me) !== undefined) {\r\n            this.sheetActState(id, state, sheetData);\r\n        }\r\n    }\r\n    private sheetActPreState(id:number, preState:string) {\r\n        this.changeStateCount(preState, -1);\r\n        if (this.curState === undefined || this.curState !== preState) return;\r\n        /*\r\n        let index = this.stateSheets.findIndex(v => v.id === id);\r\n        if (index>=0) {\r\n            this.stateSheets.splice(index, 1);\r\n        }*/\r\n        let index = this.pageStateItems.items.findIndex(v => v.id === id);\r\n        if (index>=0) {\r\n            this.pageStateItems.items.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    private sheetActState(id:number, state:string, msg:any) {\r\n        this.changeStateCount(state, 1);\r\n        if (this.curState === undefined || this.curState !== state) return;\r\n        /*\r\n        if (this.stateSheets.findIndex(v => v.id === id) < 0) {\r\n            this.stateSheets.push(msg);\r\n        }\r\n        */\r\n        if (this.pageStateItems.items.findIndex(v => v.id === id) < 0) {\r\n            this.pageStateItems.items.push(msg);\r\n        }\r\n    }\r\n\r\n    private changeStateCount(state:string, delta:number) {\r\n        if (state === undefined) return;\r\n        let index = this.statesCount.findIndex(v => v.state === state);\r\n        console.log({$:'changeState', state: state, delta: delta, index: index});\r\n        if (index < 0) return;\r\n        let stateCount = this.statesCount[index];\r\n        stateCount.count += delta;\r\n        if (stateCount.count < 0) stateCount.count = 0;\r\n    }\r\n\r\n    protected get VSheetMain():TypeVPage<CSheet> {return (this.ui&&this.ui.main) || VSheetMain}\r\n    protected get VSheetNew(): TypeVPage<CSheet> {return this.ui.sheetNew || VSheetNew}\r\n    protected get VSheetSaved(): TypeVPage<CSheet> {return this.ui.sheetSaved || VSheetSaved}\r\n    protected get VSheetEdit(): TypeVPage<CSheet> {return this.ui.sheetEdit || VSheetEdit}\r\n    protected get VSheetSchema(): TypeVPage<CSheet> {return VSheetSchema}\r\n    protected get VArchives(): TypeVPage<CSheet> {return VArchives}\r\n    protected get VArchived(): TypeVPage<CSheet> {return VArchived}\r\n    protected get VSheetList(): TypeVPage<CSheet> {return VSheetList}\r\n    protected get VSheetAction(): TypeVPage<CSheet> {return this.ui.sheetAction || VSheetAction}\r\n    protected get VSheetProcessing(): TypeVPage<CSheet> {return VSheetProcessing}\r\n    protected async onEvent(type:string, value:any) {\r\n        let c: TypeVPage<CSheet>;\r\n        switch (type) {\r\n            default: return;\r\n            case 'new': c = this.VSheetNew; break;\r\n            case 'schema': c = this.VSheetSchema; break;\r\n            case 'archives': c = this.VArchives; break;\r\n            case 'state':\r\n                this.curState = value.state;\r\n                c = this.VSheetList;\r\n                break;\r\n            case 'archived':\r\n                await this.showArchived(value); return;\r\n            case 'action':\r\n                await this.showAction(value); return;\r\n            case 'processing':\r\n                await this.showProcessing(value); return;\r\n        }\r\n        await this.openVPage(c, value);\r\n    }\r\n\r\n    async startSheet(sheetId:number) {\r\n        if (await this.beforeStart() === false) return;\r\n        await this.onEvent('action', sheetId);\r\n    }\r\n\r\n    async showAction(sheetId:number) {\r\n        let sheetData:SheetData = await this.getSheetData(sheetId);\r\n        postWsToTop({\r\n            body: {\r\n                $type: 'msg',\r\n                action: '$sheet',\r\n                msg: {\r\n                    id: sheetId,\r\n                    uq: this.cUq.uq.id,\r\n                    state: sheetData.brief.state\r\n                }\r\n            }\r\n        });\r\n        await this.openVPage(this.VSheetAction, sheetData);\r\n    }\r\n\r\n    async showProcessing(sheetId:number) {\r\n        let sheetData:SheetData = await this.getSheetData(sheetId);\r\n        await this.openVPage(this.VSheetProcessing, sheetData);\r\n    }\r\n\r\n    async editSheet(sheetData:SheetData):Promise<any> {\r\n        //alert('修改单据：程序正在设计中');\r\n        let values = await this.vCall(this.VSheetEdit, sheetData);\r\n        return values;\r\n    }\r\n\r\n    async showArchived(inBrief:any) {\r\n        let sheetData = await this.getArchived(inBrief.id);\r\n        await this.openVPage(this.VArchived, sheetData);\r\n    }\r\n\r\n    onSave = async (values:any, valuesWithBox:any):Promise<void> => {\r\n        //let values = this.vForm.getValues();\r\n        //let ret = await this.controller.saveSheet(values, this.vForm.values);\r\n        let ret = await this.saveSheet(values, valuesWithBox);\r\n        this.ceasePage();\r\n        //this.openPage(this.finishedPage);\r\n        await this.showSaved(ret);\r\n    }\r\n\r\n    async showSaved(sheetData:any) {\r\n        await this.openVPage(this.VSheetSaved, sheetData);\r\n    }\r\n\r\n    private getStateUI(stateName:string) {\r\n        let {states} = this.res;\r\n        if (states === undefined) return;\r\n        return states[stateName];\r\n    }\r\n    getStateLabel(stateName:string) {\r\n        let state = this.getStateUI(stateName);\r\n        let ret = (state && state.label) || stateName;\r\n        switch (ret) {\r\n            default: return ret;\r\n            case '$': return '新单';\r\n        }\r\n    }\r\n    getActionLabel(stateName:string, actionName:string) {\r\n        let state = this.getStateUI(stateName);\r\n        if (state === undefined) return actionName;\r\n        let actions = state.actions;\r\n        if (actions === undefined) return actionName;\r\n        let action = actions[actionName];\r\n        return (action && action.label) || actionName;\r\n    }\r\n\r\n    private async loadStateSheetCount():Promise<void> {\r\n        this.statesCount.clear();\r\n        let statesCount = await this.entity.stateSheetCount();\r\n        this.statesCount.splice(0, 0, ...statesCount);\r\n    }\r\n\r\n    async getSheetData(sheetId:number):Promise<SheetData> {\r\n        return await this.entity.getSheet(sheetId);\r\n    }\r\n\r\n    async getArchived(sheetId:number):Promise<SheetData> {\r\n        return await this.entity.getArchive(sheetId);\r\n    }\r\n\r\n    async saveSheet(values:any, valuesWithBox:any):Promise<any> {\r\n        let {sheetTitle} = this.ui;\r\n        let disc = sheetTitle === undefined? this.label : sheetTitle(valuesWithBox, this.x);\r\n        let ret = await this.entity.save(disc, values);\r\n        //let {id, state} = ret;\r\n        //if (id > 0) this.changeStateCount(state, 1);\r\n        return ret;\r\n    }\r\n\r\n    async action(id:number, flow:number, state:string, actionName:string):Promise<any> {\r\n        return await this.entity.action(id, flow, state, actionName);\r\n    }\r\n}\r\n","export * from './cSheet';\r\nexport * from './vSheet';\r\nexport * from './vMain';\r\nexport * from './vNew';\r\nexport * from './vEdit';\r\nexport * from './vList';\r\nexport * from './vSheetAction';\r\nexport * from './vSchema';\r\nexport * from './vArchived';\r\nexport * from './vSheetView';\r\n","import * as React from 'react';\r\nimport { Book } from '../../uqs';\r\nimport { Page } from '../../../ui';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CBook, BookUI } from './cBook';\r\n\r\nexport class VBookMain extends VEntity<Book, BookUI, CBook> {\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        Book\r\n    </Page>;\r\n}\r\n","import { CEntity, EntityUI } from '../CVEntity';\r\nimport { Book } from '../../uqs';\r\nimport { VBookMain } from './vBookMain';\r\n\r\nexport interface BookUI extends EntityUI {\r\n    CBook?: typeof CBook;\r\n    main: typeof VBookMain,\r\n}\r\n\r\nexport class CBook extends CEntity<Book, BookUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VBookMain);\r\n    }\r\n\r\n    protected get VBookMain():typeof VBookMain {return VBookMain}\r\n}\r\n","import React from 'react';\r\nimport { View, List, Muted } from '../../../ui';\r\nimport { Entity } from '../../uqs';\r\nimport { CLink } from '../link';\r\nimport { CUq } from './cUq';\r\n\r\nexport class VUq extends View<CUq> {\r\n    protected isSysVisible = false;\r\n    protected tuidLinks: CLink[];\r\n    protected mapLinks: CLink[];\r\n    protected sheetLinks: CLink[];\r\n    protected actionLinks: CLink[];\r\n    protected queryLinks: CLink[];\r\n    protected bookLinks: CLink[];\r\n    protected historyLinks: CLink[];\r\n    protected pendingLinks: CLink[];\r\n\r\n    constructor(cUq: CUq) {\r\n        super(cUq);\r\n        let {tuidArr, mapArr, sheetArr, actionArr, queryArr, bookArr, historyArr, pendingArr} = cUq.uq;\r\n        this.tuidLinks = tuidArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cTuidMain(v)));\r\n        this.mapLinks = mapArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cMap(v)));\r\n        this.sheetLinks = sheetArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cSheet(v)));\r\n        this.actionLinks = actionArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cAction(v)));\r\n        this.queryLinks = queryArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cQuery(v)));\r\n        this.bookLinks = bookArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cBook(v)));\r\n        this.historyLinks = historyArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cHistory(v)));\r\n        this.pendingLinks = pendingArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cPending(v)));\r\n    }\r\n    protected isVisible(entity: Entity):boolean {\r\n        return entity.sys !== true || this.isSysVisible;\r\n    }\r\n    render(param?:any) {\r\n        if (this.view === undefined) return <div>??? viewModel 必须定义 view ???</div>\r\n        return React.createElement(this.view);\r\n    }\r\n\r\n    protected view = () => {\r\n        let {res, uq, error} = this.controller;\r\n        let linkItem = {\r\n            render: (cLink:CLink, index:number):JSX.Element => cLink.render(), \r\n            onClick: undefined, \r\n        };\r\n        let lists = [\r\n            {\r\n                header: res.tuid || 'TUID',\r\n                items: this.tuidLinks,\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.map || 'MAP',\r\n                items: this.mapLinks,\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.sheet || 'SHEET',\r\n                items: this.sheetLinks\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.action || 'ACTION',\r\n                items: this.actionLinks\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.query || 'QUERY',\r\n                items: this.queryLinks\r\n            },\r\n            {\r\n                cn: 'mt-2 mb-4',\r\n                header: res.book || 'BOOK',\r\n                items: this.bookLinks\r\n            },\r\n            {\r\n                cn: 'mt-2 mb-4',\r\n                header: res.history || 'HISTORY',\r\n                items: this.historyLinks\r\n            },\r\n            {\r\n                cn: 'mt-2 mb-4',\r\n                header: res.pending || 'PENDING',\r\n                items: this.pendingLinks\r\n            }\r\n        ];\r\n        let content;\r\n        if (error !== undefined) {\r\n            content = <div className=\"p-3 text-danger\">连接错误: {error}</div>;\r\n        }\r\n        else {\r\n            content = lists.map(({cn, header, items},index) => items.length > 0 && <List\r\n                key={index}\r\n                className={cn}\r\n                header={<div className=\"px-3 py-1 bg-light\"><Muted>{header}</Muted></div>}\r\n                items={items}\r\n                item={linkItem} />\r\n            );\r\n        }\r\n        return <>\r\n            <div className=\"px-3 py-1 small\">{res.uq || uq}</div>\r\n            {content}\r\n        </>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { Controller, resLang, nav } from '../../../ui';\r\nimport { UqApi, UnitxApi, appInFrame, UqData } from '../../../net';\r\nimport { Uq, Action, Sheet, Query, Book, Map, Entity, Tuid, History, Pending, TuidDiv } from '../../uqs';\r\nimport { CLink } from '../link';\r\nimport { CBook, BookUI } from '../book';\r\nimport { CSheet, SheetUI } from '../sheet';\r\nimport { ActionUI, CAction } from '../action';\r\nimport { QueryUI, CQuery, CQuerySelect } from '../query';\r\nimport { CTuidMain, TuidUI, CTuid, CTuidInfo, CTuidSelect, CTuidEdit, CTuidList } from '../tuid';\r\nimport { MapUI, CMap } from '../map';\r\nimport { CEntity, EntityUI } from '../CVEntity';\r\nimport { PureJSONContent } from '../form/viewModel';\r\nimport { VUq } from './vUq';\r\nimport { CHistory, HistoryUI } from '../history';\r\nimport { CPending, PendingUI } from '../pending';\r\nimport { CApp } from '../CApp';\r\n\r\nexport type EntityType = 'sheet' | 'action' | 'tuid' | 'query' | 'book' | 'map' | 'history' | 'pending';\r\n\r\nexport interface UqUI {\r\n    CTuidMain?: typeof CTuidMain;\r\n    CTuidEdit?: typeof CTuidEdit;\r\n    CTuidList?: typeof CTuidList;\r\n    CTuidSelect?: typeof CTuidSelect;\r\n    CTuidInfo?: typeof CTuidInfo;\r\n    CQuery?: typeof CQuery;\r\n    CQuerySelect?: typeof CQuerySelect;\r\n    CMap?: typeof CMap;\r\n    CAction?: typeof CAction;\r\n    CSheet?: typeof CSheet;\r\n    CBook?: typeof CBook;\r\n    CHistory?: typeof CHistory;\r\n    CPending?: typeof CPending;\r\n    tuid?: {[name:string]: TuidUI};\r\n    sheet?: {[name:string]: SheetUI};\r\n    action?: {[name:string]: ActionUI};\r\n    map?: {[name:string]: MapUI};\r\n    query?: {[name:string]: QueryUI};\r\n    book?: {[name:string]: BookUI};    \r\n    history?: {[name:string]: HistoryUI};\r\n    pending?: {[name:string]: PendingUI};\r\n    res?: any;\r\n}\r\n\r\nfunction lowerPropertyName(entities: {[name:string]: EntityUI}) {\r\n    if (entities === undefined) return;\r\n    for (let i in entities) entities[i.toLowerCase()] = entities[i];\r\n}\r\n\r\nexport class CUq extends Controller /* implements Uq*/ {\r\n    private ui:any;\r\n    private CTuidMain: typeof CTuidMain;\r\n    private CTuidEdit: typeof CTuidEdit;\r\n    private CTuidList: typeof CTuidList;\r\n    private CTuidSelect: typeof CTuidSelect;\r\n    private CTuidInfo: typeof CTuidInfo;\r\n    private CQuery: typeof CQuery;\r\n    private CQuerySelect: typeof CQuerySelect;\r\n    private CMap: typeof CMap;\r\n    private CAction: typeof CAction;\r\n    private CSheet: typeof CSheet;\r\n    private CBook: typeof CBook;\r\n    private CHistory: typeof CHistory;\r\n    private CPending: typeof CPending;\r\n\r\n    //constructor(cApp:CApp, uq:string, appId:number, uqId:number, access:string, ui:UqUI) {\r\n    constructor(cApp:CApp, uqData:UqData, ui:UqUI) {\r\n        super(resLang(ui.res));\r\n        this.cApp = cApp;\r\n        //this.id = uqId;\r\n        // 每一个ui都转换成小写的key的版本\r\n        lowerPropertyName(ui.tuid);\r\n        lowerPropertyName(ui.sheet);\r\n        lowerPropertyName(ui.map);\r\n        lowerPropertyName(ui.query);\r\n        lowerPropertyName(ui.action);\r\n        lowerPropertyName(ui.book);\r\n        lowerPropertyName(ui.history);\r\n        lowerPropertyName(ui.pending);\r\n        this.ui = ui;\r\n        this.CTuidMain = ui.CTuidMain || CTuidMain;\r\n        this.CTuidEdit = ui.CTuidEdit || CTuidEdit;\r\n        this.CTuidList = ui.CTuidList || CTuidList;\r\n        this.CTuidSelect = ui.CTuidSelect || CTuidSelect;\r\n        this.CTuidInfo = ui.CTuidInfo || CTuidInfo;\r\n        this.CQuery = ui.CQuery || CQuery;\r\n        this.CQuerySelect = ui.CQuerySelect || CQuerySelect;\r\n        this.CMap = ui.CMap || CMap;\r\n        this.CAction = ui.CAction || CAction;\r\n        this.CSheet = ui.CSheet || CSheet;\r\n        this.CBook = ui.CBook || CBook;\r\n        this.CHistory = ui.CHistory || CHistory;\r\n        this.CPending = ui.CPending || CPending;\r\n\r\n        this.uq = new Uq(this.cApp.uqApp, uqData);\r\n        /*\r\n        let token = undefined;\r\n        let uqOwner:string, uqName:string;\r\n        let p = uq.split('/');\r\n        switch (p.length) {\r\n            case 1:\r\n                uqOwner = '$$$';\r\n                uqName = p[0];\r\n                break;\r\n            case 2:\r\n                uqOwner = p[0];\r\n                uqName = p[1];\r\n                break;\r\n            default:\r\n                console.log('uq must be uqOwner/uqName format');\r\n                return;\r\n        }\r\n\r\n        let hash = document.location.hash;\r\n        let baseUrl = hash===undefined || hash===''? \r\n            'debug/':'tv/';\r\n\r\n        let acc: string[];\r\n        if (access === null || access === undefined || access === '*') {\r\n            acc = [];\r\n        }\r\n        else {\r\n            acc = access.split(';').map(v => v.trim()).filter(v => v.length > 0);\r\n        }\r\n        let uqApi:UqApi;\r\n        if (uq === '$$$/$unitx') {\r\n            // 这里假定，点击home link之后，已经设置unit了\r\n            // 调用 UnitxApi会自动搜索绑定 unitx service\r\n            uqApi = new UnitxApi(appInFrame.unit);\r\n        }\r\n        else {\r\n            uqApi = new UqApi(baseUrl, uqOwner, uqName, acc, true);\r\n        }\r\n        this.entities = new Uq(this, uqApi, appId);\r\n        */\r\n    }\r\n\r\n    protected async internalStart() {\r\n    }\r\n\r\n    cApp:CApp;\r\n    //uq: string;\r\n    //id: number;\r\n    res: any;\r\n    uq: Uq;\r\n    error: string;\r\n    //private schemaLoaded:boolean = false;\r\n    \r\n    async init():Promise<void> {\r\n        return await this.uq.init();\r\n    }\r\n\r\n    async loadEntities():Promise<string> {\r\n        try {\r\n            await this.uq.loadAccess();\r\n            for (let tuid of this.uq.tuidArr) {\r\n                let {ui, res} = this.getUI(tuid);\r\n                tuid.setUIRes(ui, res);\r\n            }\r\n        }\r\n        catch (err) {\r\n            return err;\r\n        }\r\n    }\r\n\r\n    async checkEntities(): Promise<boolean> {\r\n        return await this.uq.checkAccess();\r\n    }\r\n\r\n    /*\r\n    private setTuidUI(tuid: Tuid) {\r\n        let {ui, res} = this.getUI(tuid);\r\n        tuid.ui = (ui as TuidUI).content;\r\n        tuid.res = res;\r\n    }\r\n    */\r\n\r\n    /*\r\n    async loadSchema():Promise<string> {\r\n        try {\r\n            if (this.schemaLoaded === true) return;\r\n            await this.loadEntites();\r\n            if (this.id === undefined) this.id = this.uq.uqId;\r\n            for (let i in this.ui) {\r\n                let g = this.ui[i];\r\n                if (g === undefined) continue;\r\n                let {caption, collection} = g;\r\n                if (collection === undefined) continue;\r\n                for (let j in collection) {\r\n                    if (this.uq[i](j) === undefined) {\r\n                        console.warn(i + ':' + '\\'' + j + '\\' is not uq entity');\r\n                    }\r\n                }\r\n            }\r\n            this.schemaLoaded = true;\r\n            return;\r\n        }\r\n        catch(err) {\r\n            console.error(err);\r\n            return this.error = err;\r\n        }\r\n    }\r\n    */\r\n\r\n    async getQuerySearch(name:string):Promise<Query> {\r\n        let query = this.uq.query(name);\r\n        if (query === undefined) \r\n            alert(`QUERY ${name} 没有定义!`);\r\n        else {\r\n            await query.loadSchema();\r\n            let {returns} = query;\r\n            if (returns.length > 1) {\r\n                alert(`QUERY ${name} 返回多张表, 无法做QuerySearch`);\r\n            }\r\n        }\r\n        return query;\r\n    }\r\n    getTuidPlaceHolder(tuid:Tuid) {\r\n        let {tuidPlaceHolder, entity} = this.res;\r\n        let {name} = tuid;\r\n        let type:string;\r\n        if (entity !== undefined) {\r\n            let en = entity[name];\r\n            if (en !== undefined) {\r\n                type = en.label;\r\n            }\r\n        }\r\n        return (tuidPlaceHolder || 'Select');\r\n    }\r\n    getNone() {\r\n        let {none} = this.res;\r\n        return none || 'none';\r\n    }\r\n    protected isSysVisible = false;\r\n    protected isVisible(entity: Entity):boolean {\r\n        return entity.sys !== true || this.isSysVisible;\r\n    }\r\n\r\n    async navSheet(sheetTypeId:number, sheetId:number) {\r\n        let sheet = this.uq.sheetFromTypeId(sheetTypeId);\r\n        if (sheet === undefined) {\r\n            alert('sheetTypeId ' + sheetTypeId + ' is not exists!');\r\n            return;\r\n        }\r\n        let cSheet = this.cSheet(sheet);\r\n        await cSheet.startSheet(sheetId);\r\n    }\r\n\r\n    sheet(entityName:string) {return this.uq.sheet(entityName);}\r\n    action(entityName:string) {return this.uq.action(entityName);}\r\n    query(entityName:string) {return this.uq.query(entityName);}\r\n    book(entityName:string) {return this.uq.book(entityName);}\r\n    map(entityName:string) {return this.uq.map(entityName);}\r\n    history(entityName:string) {return this.uq.history(entityName);}\r\n    pending(entityName:string) {return this.uq.pending(entityName);}\r\n    tuid(entityName:string) {return this.uq.tuid(entityName)}\r\n    tuidDiv(entityName:string, divName:string) {\r\n        return this.uq.tuidDiv(entityName, divName);\r\n    }\r\n\r\n    cSheetFromName(entityName:string):CSheet {\r\n        let entity = this.uq.sheet(entityName);\r\n        if (entity !== undefined) return this.cSheet(entity);\r\n    }\r\n    cActionFromName(entityName:string) {\r\n        let entity = this.uq.action(entityName);\r\n        if (entity !== undefined) return this.cAction(entity);\r\n    }\r\n    cQueryFromName(entityName:string) {\r\n        let entity = this.uq.query(entityName);\r\n        if (entity !== undefined) return this.cQuery(entity);\r\n    }\r\n    cBookFromName(entityName:string) {\r\n        let entity = this.uq.book(entityName);\r\n        if (entity !== undefined) return this.cBook(entity);\r\n    }\r\n    cMapFromName(entityName:string) {\r\n        let entity = this.uq.map(entityName);\r\n        if (entity !== undefined) return this.cMap(entity);\r\n    }\r\n    cHistoryFromName(entityName:string) {\r\n        let entity = this.uq.history(entityName);\r\n        if (entity !== undefined) return this.cHistory(entity);\r\n    }\r\n    cPendingFromName(entityName:string) {\r\n        let entity = this.uq.pending(entityName);\r\n        if (entity !== undefined) return this.cPending(entity);\r\n    }\r\n    cTuidMainFromName(entityName:string) {\r\n        let entity = this.uq.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidMain(entity);\r\n    }\r\n    cTuidEditFromName(entityName:string) {\r\n        let entity = this.uq.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidEdit(entity);\r\n    }\r\n    cTuidInfoFromName(entityName:string) {\r\n        let entity = this.uq.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidInfo(entity);\r\n    }\r\n\r\n    cTuidSelectFromName(entityName:string) {\r\n        let entity = this.uq.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidSelect(entity);\r\n    }\r\n\r\n    cFromName(entityType:EntityType, entityName:string): CEntity<Entity, EntityUI> {\r\n        switch (entityType) {\r\n            case 'sheet':\r\n                let sheet = this.uq.sheet(entityName);\r\n                if (sheet === undefined) return;\r\n                return this.cSheet(sheet);\r\n            case 'action':\r\n                let action = this.uq.action(entityName);\r\n                if (action === undefined) return;\r\n                return this.cAction(action);\r\n            case 'tuid':\r\n                let tuid = this.uq.tuid(entityName);\r\n                if (tuid === undefined) return;\r\n                return this.cTuidMain(tuid);\r\n            case 'query':\r\n                let query = this.uq.query(entityName);\r\n                if (query === undefined) return;\r\n                return this.cQuery(query);\r\n            case 'book':\r\n                let book = this.uq.book(entityName);\r\n                if (book === undefined) return;\r\n                return this.cBook(book);\r\n            case 'map':\r\n                let map = this.uq.map(entityName);\r\n                if (map === undefined) return;\r\n                return this.cMap(map);\r\n            case 'history':\r\n                let history = this.uq.history(entityName);\r\n                if (history === undefined) return;\r\n                return this.cHistory(history);\r\n            case 'pending':\r\n                let pending = this.uq.pending(entityName);\r\n                if (pending === undefined) return;\r\n                return this.cPending(pending);\r\n        }\r\n    }\r\n\r\n    linkFromName(entityType:EntityType, entityName:string) {\r\n        return this.link(this.cFromName(entityType, entityName));\r\n    }\r\n\r\n    private getUI<T extends Entity, UI extends EntityUI>(t:T):{ui:UI, res:any} {\r\n        let ui, res;\r\n        let {name, typeName} = t;\r\n        if (this.ui !== undefined) {\r\n            let tUI = this.ui[typeName];\r\n            if (tUI !== undefined) {\r\n                ui = tUI[name];\r\n            }\r\n        }\r\n        let {entity} = this.res;\r\n        if (entity !== undefined) {\r\n            res = entity[name];\r\n        }\r\n        return {ui: ui || {}, res: res || {} };\r\n    }\r\n\r\n    link(cEntity:CEntity<Entity, EntityUI>) {\r\n        return new CLink(cEntity);\r\n    }\r\n\r\n    get tuidLinks() {\r\n        return this.uq.tuidArr.filter(v => this.isVisible(v)).map(v => this.link(this.cTuidMain(v)));\r\n    }\r\n    cTuidMain(tuid:Tuid):CTuidMain {\r\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidMain || this.CTuidMain)(this, tuid, ui, res);\r\n    }\r\n    cTuidEdit(tuid:Tuid):CTuidEdit {\r\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidEdit || this.CTuidEdit)(this, tuid, ui, res);\r\n    }\r\n    cTuidList(tuid:Tuid):CTuidList {\r\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidList || this.CTuidList)(this, tuid, ui, res);\r\n    }\r\n    cTuidSelect(tuid:Tuid):CTuidSelect {\r\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidSelect || this.CTuidSelect)(this, tuid, ui, res);\r\n    }\r\n    cTuidInfo(tuid:Tuid):CTuidInfo {\r\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidInfo || this.CTuidInfo)(this, tuid, ui, res);\r\n    }\r\n\r\n    cSheet(sheet:Sheet/*, sheetUI?:SheetUI, sheetRes?:any*/):CSheet {\r\n        let {ui, res} = this.getUI<Sheet, SheetUI>(sheet);\r\n        //if (sheetUI !== undefined) ui = sheetUI;\r\n        //if (sheetRes !== undefined) res = sheetRes;\r\n        //return new (ui && ui.CSheet || this.CSheet)(this, sheet, sheetUI, sheetRes);\r\n        return new (ui && ui.CSheet || this.CSheet)(this, sheet, ui, res);\r\n    }\r\n    get sheetLinks() { \r\n        return this.uq.sheetArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cSheet(v))\r\n        });\r\n    }\r\n\r\n    cAction(action:Action):CAction {\r\n        let {ui, res} = this.getUI<Action, ActionUI>(action);\r\n        return new (ui && ui.CAction || this.CAction)(this, action, ui, res);\r\n    }\r\n    get actionLinks() { \r\n        return this.uq.actionArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cAction(v))\r\n        });\r\n    }\r\n\r\n    cQuery(query:Query):CQuery {\r\n        let {ui, res} = this.getUI<Query, QueryUI>(query);\r\n        return new (ui && ui.CQuery || this.CQuery)(this, query, ui, res);\r\n    }\r\n    cQuerySelect(queryName:string):CQuerySelect {\r\n        let query = this.uq.query(queryName);\r\n        if (query === undefined) return;\r\n        let {ui, res} = this.getUI<Query, QueryUI>(query);\r\n        return new (ui && ui.CQuerySelect || this.CQuerySelect)(this, query, ui, res);\r\n    }\r\n    get queryLinks() {\r\n        return this.uq.queryArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cQuery(v))\r\n        });\r\n    }\r\n    \r\n    cBook(book:Book):CBook {\r\n        let {ui, res} = this.getUI<Book, BookUI>(book);\r\n        return new (ui && ui.CBook || this.CBook)(this, book, ui, res);\r\n    }\r\n    get bookLinks() { \r\n        return this.uq.bookArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cBook(v))\r\n        });\r\n    }\r\n    \r\n    cHistory(history:History):CHistory {\r\n        let {ui, res} = this.getUI<History, HistoryUI>(history);\r\n        return new (ui && ui.CHistory || this.CHistory)(this, history, ui, res);\r\n    }\r\n    get historyLinks() { \r\n        return this.uq.historyArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cHistory(v))\r\n        });\r\n    }\r\n    \r\n    cPending(pending:Pending):CPending {\r\n        let {ui, res} = this.getUI<Pending, PendingUI>(pending);\r\n        return new (ui && ui.CPending || this.CPending)(this, pending, ui, res);\r\n    }\r\n    get pendingLinks() { \r\n        return this.uq.pendingArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cPending(v))\r\n        });\r\n    }\r\n    \r\n    cMap(map:Map):CMap {\r\n        let {ui, res} = this.getUI<Map, MapUI>(map);\r\n        return new (ui && ui.CMap || this.CMap)(this, map, ui, res);\r\n    }\r\n    get mapLinks() { \r\n        return this.uq.mapArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cMap(v));\r\n        });\r\n    }\r\n\r\n    getTuidContent(tuid:Tuid): React.StatelessComponent<any> {\r\n        let {ui} = this.getUI<Tuid, TuidUI>(tuid);\r\n        return (ui && ui.content) || PureJSONContent;\r\n    }\r\n\r\n    getTuidDivContent(tuidDiv:TuidDiv): React.StatelessComponent<any> {\r\n        let {owner} = tuidDiv;\r\n        let {ui} = this.getUI<Tuid, TuidUI>(owner);\r\n        return (ui && ui.divs && ui.divs[tuidDiv.name].content) || PureJSONContent;\r\n    }\r\n\r\n    async showTuid(tuid:Tuid, id:number):Promise<void> {\r\n        let c = this.cTuidInfo(tuid);\r\n        await c.start(id);\r\n    }\r\n\r\n    async showTuidDiv(tuid:TuidDiv, id:number):Promise<void> {\r\n        let {owner} = tuid;\r\n        let c = this.cTuidInfo(owner);\r\n        await c.start(id);\r\n    }\r\n\r\n    protected get VUq():typeof VUq {return VUq}\r\n\r\n    render() {\r\n        let v = new (this.VUq)(this);\r\n        return v.render();\r\n    }\r\n}\r\n\r\n","export * from './cUq';\r\nexport * from './vUq';","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport className from 'classnames';\r\nimport { Page, List, LMR, FA } from '../../../ui';\r\nimport { tv } from '../../tools';\r\nimport { Map } from '../../uqs';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CMap, MapItem, MapKey, MapUI } from './cMap';\r\nimport { PureJSONContent } from '../form/viewModel';\r\n\r\nexport class VMapMain extends VEntity<Map, MapUI, CMap> {\r\n    private isFrom: boolean;\r\n\r\n    async open(param?:any) {\r\n        this.isFrom = this.controller.isFrom;\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    itemRender = (item:MapItem, index:number) => {\r\n        return <this.ItemRow item={item} />;\r\n    }\r\n\r\n    private ItemRow = observer(({item}: {item:MapItem}) => {\r\n        let {tuid, box, children, isLeaf, keyIndex, values} = item;\r\n        let keyUI = this.controller.keyUIs[keyIndex];\r\n        let {content:keyContent, valuesContent, none:keyNone} = keyUI;\r\n        let add:any, remove:any;\r\n        if (this.isFrom === false) {\r\n            add = <button className=\"btn btn-link btn-sm\" onClick={()=>this.controller.addClick(item)}>\r\n                <FA name=\"plus\" />\r\n            </button>;\r\n            remove = <button className=\"btn btn-link btn-sm\" onClick={()=>this.controller.removeClick(item)}>\r\n                <FA className=\"text-info\" name=\"trash\" />\r\n            </button>;\r\n        }\r\n        let right:any;\r\n        if (isLeaf === false) {\r\n            if (keyIndex === 0)\r\n                right = add;\r\n            else\r\n                right = <>{remove} &nbsp; {add}</>;\r\n        }\r\n        else if (keyIndex > 0) {\r\n            right = remove;\r\n        }\r\n        let content:any, border:any, valuesView:any;\r\n        if (isLeaf === true) {\r\n            content = undefined; //<div className=\"ml-5\">leaf</div>;\r\n            if (values) {\r\n                //valuesView = null; // 现在不显示values content了\r\n                valuesView = (valuesContent || PureJSONContent)(values, this.x);\r\n            }\r\n        }\r\n        else {\r\n            border = 'border-bottom';\r\n            let none = keyNone && keyNone(this.x);\r\n            content = <List \r\n                className=\"ml-4\" \r\n                items={children} \r\n                item={{onClick:undefined, render:this.itemRender}}\r\n                none={none} />\r\n        }\r\n        let left = <div className=\"py-1 pr-3\">{tv(box, keyContent, this.x)}</div>;\r\n        return <div className=\"d-flex flex-column\">\r\n            <LMR className={className('px-3', 'py-2', border)}\r\n                left={left}\r\n                right={right}\r\n            >\r\n                <div className=\"py-1\">{valuesView}</div>\r\n            </LMR>\r\n            {content}\r\n        </div>;\r\n    });\r\n\r\n    protected get view() { return () => <Page header={this.label}>\r\n            <List items={this.controller.items} item={{className:'my-2', onClick:undefined, render:this.itemRender}} />\r\n        </Page>\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { VEntity } from '../CVEntity';\r\nimport { MapUI, CMap } from './cMap';\r\nimport { Map } from '../../uqs';\r\nimport { Page } from '../../../ui';\r\nimport { VForm } from '../form';\r\n\r\nexport class VInputValues extends VEntity<Map, MapUI, CMap> {\r\n    private vForm: VForm;\r\n\r\n    async open(param?:any) {\r\n        this.vForm = this.createForm(this.onValuesSubmit);\r\n        this.openPageElement(<this.view />);\r\n    }\r\n\r\n    private onValuesSubmit = async () => {\r\n        this.ceasePage();\r\n        let values = this.vForm.getValues();\r\n        this.returnCall(values);\r\n    }\r\n\r\n    private view = () => {\r\n        return <Page>\r\n            {this.vForm.render()}\r\n        </Page>\r\n    }\r\n}\r\n","import _ from 'lodash';\r\nimport { CEntity, EntityUI } from '../CVEntity';\r\nimport { Map, Tuid, BoxId, Field, fieldDefaultValue } from '../../uqs';\r\nimport { VMapMain } from './vMain';\r\nimport { observable } from 'mobx';\r\nimport { PureJSONContent } from '../form/viewModel';\r\nimport { VInputValues } from './inputValues';\r\n\r\nexport interface MapKey {\r\n    content: (values, x?:any) => JSX.Element;\r\n    valuesContent?: (values, x?:any) => JSX.Element;\r\n    none?: (x:any)=>string;\r\n}\r\n\r\nexport interface MapUI extends EntityUI {\r\n    CMap?: typeof CMap;\r\n    keys?: MapKey[],\r\n}\r\n\r\nexport class MapItem {\r\n    parent: MapItem;\r\n    tuid: Tuid;\r\n    box: BoxId;\r\n    isLeaf: boolean;\r\n    keyIndex:number;\r\n    children: MapItem[] = observable.array([], {deep: true});\r\n    values: any;\r\n    constructor(parent:MapItem, tuid:Tuid, box:BoxId, keyIndex:number) {\r\n        this.parent = parent;\r\n        this.tuid = tuid;\r\n        this.box = box;\r\n        this.keyIndex = keyIndex;\r\n        this.isLeaf = false;\r\n    }\r\n}\r\n\r\nexport class CMap extends CEntity<Map, MapUI> {\r\n    isFrom: boolean;\r\n    items:MapItem[];\r\n    keyFields: Field[];\r\n    keyUIs: MapKey[];\r\n\r\n    protected async internalStart() {\r\n        let {keys, schemaFrom} = this.entity;\r\n        this.isFrom = schemaFrom !== undefined;\r\n        let q = this.entity.queries.all;\r\n        let result = await q.query({});\r\n        //let data = await this.entity.unpackReturns(res);\r\n        let ret = result.ret;\r\n        let keysLen = keys.length;\r\n        this.keyUIs = _.clone(this.ui.keys || []);\r\n        this.keyFields = [];\r\n        let retFields = q.returns[0].fields;\r\n        for (let i=0; i<keysLen; i++) {\r\n            this.keyFields.push(retFields[i]);\r\n            if (i >= this.keyUIs.length) {\r\n                this.keyUIs.push({\r\n                    content: PureJSONContent,\r\n                });\r\n            }\r\n        }\r\n        this.items = observable([]);\r\n        let item:MapItem = undefined;\r\n        for (let r of ret) {\r\n            let newItem = this.addItem(item, r);\r\n            if (newItem !== undefined) {\r\n                this.items.push(newItem);\r\n                item = newItem;\r\n            }\r\n        }\r\n\r\n        await this.openVPage(this.VMapMain);\r\n    }\r\n\r\n    private createItem(parent:MapItem, tuid:Tuid, box:BoxId, keyIndex:number, values?:any) {\r\n        let item = new MapItem(parent, tuid, box, keyIndex);\r\n        if (keyIndex === this.keyFields.length - 1) {\r\n            item.isLeaf = true;\r\n            item.values = values;\r\n        }\r\n        return item;\r\n    }\r\n\r\n    addItem(item:MapItem, row:any):MapItem {\r\n        let ret:MapItem = undefined;\r\n        let keysLen = this.keyFields.length;\r\n        let p = item;\r\n        for (let i=0;i<keysLen;i++) {\r\n            let key = this.keyFields[i];\r\n            let {name} = key;\r\n            let tuidBox = key._tuid;\r\n            let val:BoxId = row[name];\r\n            if (val === undefined) break;\r\n            let {id} = val;\r\n            if (i === 0) {\r\n                if (id === 0) continue;\r\n                if (p === undefined || p.box.id !== id) {\r\n                    ret = p = this.createItem(undefined, tuidBox.tuid, val, i, row);\r\n                }\r\n                continue;\r\n            }\r\n            let {children, box} = p;\r\n            let len = children.length;\r\n            if (len > 0) {\r\n                let n = children[len-1];\r\n                if (n.box.id === id) {\r\n                    p = n;\r\n                    continue;\r\n                }\r\n            }\r\n            if (id > 0) {\r\n                children.push(p = this.createItem(p, tuidBox.tuid, val, i, row));\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    async searchOnKey(keyField:Field, param):Promise<number> {\r\n        let {_tuid} = keyField;\r\n        let {tuid, ownerField} = _tuid;\r\n        let cTuidSelect = this.cUq.cTuidSelect(tuid);\r\n        let callParam = param;\r\n        if (ownerField !== undefined) {\r\n            callParam = param[ownerField.name];\r\n            if (typeof callParam === 'object') {\r\n                callParam = callParam.id;\r\n            }\r\n        }\r\n        let ret = await cTuidSelect.call(callParam);\r\n        return _tuid.getIdFromObj(ret);\r\n    }\r\n\r\n    addClick = async(item:MapItem) => {\r\n        let {keyIndex, children} = item;\r\n        let keysLen = this.keyFields.length;\r\n        let keysLast = keysLen-1;\r\n        let idx = keyIndex + 1;\r\n        if (idx >= keysLen) return;\r\n        let keyField = this.keyFields[idx];\r\n        let kn = keyField.name;\r\n        let tuid = keyField._tuid;\r\n        let searchParam = {} as any;\r\n        let data = {} as any;\r\n        for (let p=item;p!==undefined;p=p.parent) {\r\n            let {keyIndex:ki, box} = p;\r\n            let kn = this.keyFields[ki].name;\r\n            //searchParam[kn] = data['_' + kn] = box.id;\r\n            searchParam[kn] = data[kn] = box.id;\r\n        }\r\n\r\n        let id = await this.searchOnKey(keyField, searchParam);\r\n        if (id === undefined || id <= 0) return;\r\n        tuid.useId(id);\r\n        let idBox = tuid.boxId(id);\r\n        let arr1 = {} as any;\r\n        let values:any = {};\r\n        if (keyIndex+1===keysLast) {\r\n            tuid.useId(id);\r\n            //values[kn] = arr1['_' + kn] = idBox;\r\n            values[kn] = arr1[kn] = idBox;\r\n            if (this.entity.fields.length > 0) {\r\n                let ret = await this.vCall(VInputValues, data);\r\n                for (let i in ret) {\r\n                    //values[i] = arr1['_' + i] = ret[i];\r\n                    values[i] = arr1[i] = ret[i];\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            //values[kn] = data['_' + kn] = idBox;\r\n            values[kn] = data[kn] = idBox;\r\n            for (let i=idx+1;i<keysLast;i++) {\r\n                //data['_' + this.keyFields[i].name] = 0;\r\n                data[this.keyFields[i].name] = 0;\r\n            }\r\n            // 填map的key field 0 值\r\n            //arr1['_' + this.keyFields[keysLast].name] = 0;\r\n            arr1[this.keyFields[keysLast].name] = 0;\r\n            let {fields} = this.entity;\r\n            for (let f of fields) {\r\n                let {name, type, null:nullable} = f;\r\n                if (!(nullable === true)) {\r\n                    //arr1['_' + f.name] = fieldDefaultValue(type);\r\n                    arr1[f.name] = fieldDefaultValue(type);\r\n                }\r\n            }\r\n        }\r\n        data.arr1 = [arr1];\r\n        await this.entity.actions.add.submit(data);\r\n        let rowIndex = children.findIndex(v => v.box.id === id);\r\n        if (rowIndex < 0) {\r\n            children.push(this.createItem(item, tuid.tuid, idBox, idx, values));\r\n        }\r\n        else {\r\n            let {fields} = this.entity;\r\n            if (fields !== undefined && fields.length > 0) {\r\n                let row = children[rowIndex];\r\n                children.splice(rowIndex, 1);\r\n                row.values = values;\r\n                /*\r\n                for (let f of fields) {\r\n                    let {name:fn} = f;\r\n                    row.values[fn] = values[fn];\r\n                }*/\r\n                children.splice(rowIndex, 0, row);\r\n            }\r\n        }\r\n        this.removeCeased();\r\n    }\r\n\r\n    removeClick = async(item:MapItem) => {\r\n        let keyField = this.keyFields[item.keyIndex];\r\n        let tuid = keyField._tuid;\r\n        let cTuidMain = this.cUq.cTuidMain(tuid.tuid);\r\n        let label = cTuidMain.getLable(tuid.tuid);\r\n        let confirmDelete:_.TemplateExecutor = \r\n            this.res.confirmDelete \r\n            || _.template('do you really want to remove ${label}?');\r\n        if (confirm(confirmDelete({label:label})) === false) return;\r\n        let map:Map = this.entity;\r\n        let data = {} as any;\r\n        let arr1 = data['arr1'] = [];\r\n        let v0 = {} as any;\r\n        arr1.push(v0);\r\n        for (let p=item; p!==undefined;p=p.parent) {\r\n            let ki=p.keyIndex;\r\n            //v0['_'+this.keyFields[ki].name] = p.box.id;\r\n            v0[this.keyFields[ki].name] = p.box.id;\r\n        }\r\n        let len = this.keyFields.length;\r\n        for (let i=item.keyIndex+1; i<len; i++) {\r\n            let k = this.keyFields[i];\r\n            //v0['_'+k.name] = -1;\r\n            v0[k.name] = -1;\r\n        }\r\n        await map.actions.del.submit(data);\r\n        let children = item.parent.children;\r\n        let index = children.findIndex(v => v === item);\r\n        if (index >= 0) children.splice(index, 1);\r\n    }\r\n\r\n    protected get VMapMain():typeof VMapMain {return VMapMain}\r\n}\r\n","export * from './cMap';\r\nexport * from './vMain';\r\n","import * as React from 'react';\r\nimport { Pending } from '../../uqs';\r\nimport { Page } from '../../../ui';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CPending, PendingUI } from './cPending';\r\n\r\nexport class VPendingMain extends VEntity<Pending, PendingUI, CPending> {\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        pending\r\n    </Page>;\r\n}\r\n","import { CEntity, EntityUI } from '../CVEntity';\r\nimport { Pending } from '../../uqs';\r\nimport { VPendingMain } from './vPendingMain';\r\n\r\nexport interface PendingUI extends EntityUI {\r\n    CPending?: typeof CPending;\r\n    main: typeof VPendingMain,\r\n}\r\n\r\nexport class CPending extends CEntity<Pending, PendingUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VPendingMain);\r\n    }\r\n\r\n    protected get VPendingMain():typeof VPendingMain {return VPendingMain}\r\n}\r\n","export * from './cPending';\r\nexport * from './vPendingMain';\r\n","import * as React from 'react';\r\nimport { VPage, Page } from '../../../ui';\r\nimport { jsonStringify } from '../../tools';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CAction, ActionUI } from './cAction';\r\nimport { Action } from '../../uqs';\r\n\r\nexport class VActionMain extends VEntity<Action, ActionUI, CAction> {\r\n    protected vForm: VForm;\r\n    protected returns: any;\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        this.openPage(this.mainPage);\r\n    }\r\n\r\n    private onSubmit = async () => {\r\n        let values = this.vForm.getValues();\r\n        this.returns = await this.controller.submit(values);\r\n        this.closePage();\r\n        this.openPage(this.resultPage);\r\n    }\r\n\r\n    protected mainPage = () => {\r\n        let {label} = this.controller;\r\n        return <Page header={label}>\r\n            {this.vForm.render('mx-3 my-2')}\r\n        </Page>;\r\n    }\r\n\r\n    protected resultPage = () => {\r\n        let {label} = this.controller;\r\n        return <Page header={label} back=\"close\">\r\n            完成！\r\n            <pre>\r\n                {jsonStringify(this.returns)}\r\n            </pre>\r\n        </Page>;\r\n    }\r\n}\r\n","import { CEntity, EntityUI } from '../CVEntity';\r\nimport { Action } from '../../uqs';\r\nimport { VActionMain } from './vActionMain';\r\n\r\nexport interface ActionUI extends EntityUI {\r\n    CAction?: typeof CAction;\r\n    //main: typeof VActionMain,\r\n}\r\n\r\nexport class CAction extends CEntity<Action, ActionUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VActionMain);\r\n    }\r\n\r\n    protected get VActionMain():typeof VActionMain {return VActionMain}\r\n\r\n    async submit(values:any) {\r\n        return this.entity.submit(values);\r\n    }\r\n}\r\n","export * from './cAction';\r\nexport * from './vActionMain';\r\n","import * as React from 'react';\r\nimport { History } from '../../uqs';\r\nimport { Page } from '../../../ui';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CHistory, HistoryUI } from './cHistory';\r\n\r\nexport class VHistoryMain extends VEntity<History, HistoryUI, CHistory> {\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        History\r\n    </Page>;\r\n}\r\n","import { CEntity, EntityUI } from '../CVEntity';\r\nimport { History } from '../../uqs';\r\nimport { VHistoryMain } from './vHistoryMain';\r\n\r\nexport interface HistoryUI extends EntityUI {\r\n    CHistory?: typeof CHistory;\r\n    main: typeof VHistoryMain,\r\n}\r\n\r\nexport class CHistory extends CEntity<History, HistoryUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VHistoryMain);\r\n    }\r\n\r\n    protected get VHistoryMain():typeof VHistoryMain {return VHistoryMain}\r\n}\r\n","export * from './cHistory';\r\nexport * from './vHistoryMain';\r\n","\r\nimport {setCenterToken} from './uqApi';\r\nimport {WSChannel} from './wsChannel';\r\n\r\nexport const netToken = {\r\n    set(userId:number, token:string) {\r\n        setCenterToken(userId, token);\r\n        WSChannel.setCenterToken(token);\r\n    },\r\n    clear() {\r\n        setCenterToken(0, undefined);\r\n        WSChannel.setCenterToken(undefined);\r\n    }\r\n};\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport {User} from '../user';\r\nimport {nav} from './nav';\r\nimport {Page} from './page';\r\nimport { isDevelopment } from '../net';\r\n\r\nexport abstract class Controller {\r\n    readonly res: any;\r\n    readonly x: any;\r\n    icon: string|JSX.Element;\r\n    label:string;\r\n    readonly isDev:boolean = isDevelopment;\r\n    get user():User {return nav.user}\r\n    get isLogined():boolean {\r\n        let {user} = nav;\r\n        if (user === undefined) return false;\r\n        return user.id > 0;\r\n    }\r\n    constructor(res:any) {\r\n        this.res = res || {};\r\n        this.x = this.res.x || {};\r\n    }\r\n\r\n    private receiveHandlerId:number;\r\n    private disposer:()=>void;\r\n\r\n    private dispose() {\r\n        // message listener的清理\r\n        nav.unregisterReceiveHandler(this.receiveHandlerId);\r\n        this.onDispose();\r\n    }\r\n\r\n    protected onDispose() {\r\n    }\r\n\r\n    protected async openVPage<C extends Controller>(vp: new (controller: C)=>VPage<C>, param?:any):Promise<void> {\r\n        await (new vp((this as any) as C)).open(param);\r\n    }\r\n\r\n    protected renderView<C extends Controller>(view: new (controller: C)=>View<C>, param?:any) {\r\n        return (new view((this as any) as C)).render(param);\r\n    }\r\n\r\n    async event(type:string, value:any) {\r\n        await this.onEvent(type, value);\r\n    }\r\n\r\n    protected async onEvent(type:string, value:any) {\r\n    }\r\n\r\n    protected msg(text:string) {\r\n        alert(text);\r\n    }\r\n    protected errorPage(header:string, err:any) {\r\n        this.openPage(<Page header=\"App error!\">\r\n            <pre>\r\n                {typeof err === 'string'? err : err.message}\r\n            </pre>\r\n        </Page>);\r\n    }\r\n\r\n    protected onMessage(message:any):Promise<void> {\r\n        return;\r\n    }\r\n\r\n    private onMessageReceive = async (message:any):Promise<void> => {\r\n        await this.onMessage(message);\r\n    }\r\n\r\n    protected async beforeStart():Promise<boolean> {\r\n        /*\r\n        console.log('this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);');\r\n        this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);\r\n        console.log('return true');\r\n        */\r\n        return true;\r\n    }\r\n    protected registerReceiveHandler() {\r\n        this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);\r\n    }\r\n\r\n    protected abstract internalStart(param?:any):Promise<void>;\r\n    async start(param?:any):Promise<void> {\r\n        this.disposer = this.dispose.bind(this);\r\n        this.registerReceiveHandler();\r\n        let ret = await this.beforeStart();\r\n        if (ret === false) return;\r\n        await this.internalStart(param);\r\n    }\r\n\r\n    get isCalling():boolean {return this._resolve_$ !== undefined}\r\n\r\n    private _resolve_$:((value:any) => void)[];\r\n    async call<T>(param?:any):Promise<T> {\r\n        if (this._resolve_$ === undefined) this._resolve_$ = [];\r\n        return new Promise<T> (async (resolve, reject) => {\r\n            this._resolve_$.push(resolve);\r\n            await this.start(param);\r\n        });\r\n    }\r\n\r\n    async vCall<C extends Controller>(vp: new (controller: C)=>VPage<C>, param?:any):Promise<any> {\r\n        if (this._resolve_$ === undefined) this._resolve_$ = [];\r\n        return new Promise<any> (async (resolve, reject) => {\r\n            this._resolve_$.push(resolve);\r\n            await (new vp(this as any)).open(param);\r\n        });\r\n    }\r\n\r\n    returnCall(value:any) {\r\n        if (this._resolve_$ === undefined) return;\r\n        let resolve = this._resolve_$.pop();\r\n        if (resolve === undefined) {\r\n            alert('the Controller call already returned, or not called');\r\n            return;\r\n        }\r\n        resolve(value);\r\n    }\r\n\r\n    openPage(page:JSX.Element) {\r\n        nav.push(page, this.disposer);\r\n        this.disposer = undefined;\r\n    }\r\n\r\n    replacePage(page:JSX.Element) {\r\n        nav.replace(page, this.disposer);\r\n        this.disposer = undefined;\r\n    }\r\n\r\n    backPage() {\r\n        nav.back();\r\n    }\r\n\r\n    closePage(level?:number) {\r\n        nav.pop(level);\r\n    }\r\n\r\n    ceasePage(level?:number) {\r\n        nav.ceaseTop(level);\r\n    }\r\n\r\n    removeCeased() {\r\n        nav.removeCeased();\r\n    }\r\n\r\n    regConfirmClose(confirmClose: ()=>Promise<boolean>) {\r\n        nav.regConfirmClose(confirmClose);\r\n    }\r\n}\r\n\r\n\r\nexport abstract class View<C extends Controller> {\r\n    protected controller: C;\r\n    protected readonly res: any;\r\n    protected readonly x: any;\r\n\r\n    constructor(controller: C) {\r\n        this.controller = controller;\r\n        this.res = controller.res;\r\n        this.x = controller.x;\r\n    }\r\n\r\n    protected get isDev() {return isDevelopment}\r\n\r\n    abstract render(param?:any): JSX.Element;\r\n\r\n    protected renderVm(vm: new (controller: C)=>View<C>, param?:any) {\r\n        return (new vm(this.controller)).render(param);\r\n    }\r\n\r\n    protected async openVPage(vp: new (controller: C)=>VPage<C>, param?:any):Promise<void> {\r\n        await (new vp(this.controller)).open(param);\r\n    }\r\n\r\n    protected async event(type:string, value?:any) {\r\n        /*\r\n        if (this._resolve_$_ !== undefined) {\r\n            await this._resolve_$_({type:type, value:value});\r\n            return;\r\n        }*/\r\n        await this.controller.event(type, value);\r\n    }\r\n\r\n    async vCall<C extends Controller>(vp: new (controller: C)=>VPage<C>, param?:any):Promise<any> {\r\n        return await this.controller.vCall(vp, param);\r\n    }\r\n\r\n    protected returnCall(value:any) {\r\n        this.controller.returnCall(value);\r\n    }\r\n\r\n    protected openPage(view: React.StatelessComponent<any>, param?:any) {\r\n        this.controller.openPage(React.createElement(view, param));\r\n    }\r\n\r\n    protected replacePage(view: React.StatelessComponent<any>, param?:any) {\r\n        this.controller.replacePage(React.createElement(view, param));\r\n    }\r\n\r\n    protected openPageElement(page: JSX.Element) {\r\n        this.controller.openPage(page);\r\n    }\r\n\r\n    protected replacePageElement(page: JSX.Element) {\r\n        this.controller.replacePage(page);\r\n    }\r\n\r\n    protected backPage() {\r\n        this.controller.backPage();\r\n    }\r\n\r\n    protected closePage(level?:number) {\r\n        this.controller.closePage(level);\r\n    }\r\n\r\n    protected ceasePage(level?:number) {\r\n        this.controller.ceasePage(level);\r\n    }\r\n\r\n    protected removeCeased() {\r\n        this.controller.removeCeased();\r\n    }\r\n\r\n    protected regConfirmClose(confirmClose: ()=>Promise<boolean>) {\r\n        this.controller.regConfirmClose(confirmClose);\r\n    }\r\n}\r\n\r\nexport abstract class VPage<C extends Controller> extends View<C> {\r\n    abstract open(param?:any):Promise<void>;\r\n\r\n    render(param?:any):JSX.Element {return null;}\r\n}\r\n\r\nexport type TypeVPage<C extends Controller> = new (controller: C)=>VPage<C>;\r\n\r\n","export * from './schema';\r\nexport * from './uiSchema';\r\nexport * from './toUiSelectItems';","\r\nexport const mobileRegex = /^[0-9]*$/;\r\nexport const emailRegex = /\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/;\r\n// /^([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+@([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+\\.[a-zA-Z]{2,3}$/\r\n\r\nexport const EmailFieldRule = (value:any): string|string[] => {\r\n    if (emailRegex.test(value as string) === false) return '电子邮件格式错误';\r\n}\r\n\r\nexport const MobileFieldRule = (value:any): string|string[] => {\r\n    if (emailRegex.test(value as string) === false) return '手机格式错误';\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nexport interface DropdownAction {\r\n    icon?: string;\r\n    caption?: string;\r\n    action?: () => void;\r\n}\r\n\r\nexport interface DropdownActionsProps {\r\n    icon?: string;\r\n    actions: DropdownAction[];\r\n    isRight?: boolean;\r\n}\r\n\r\nexport interface DropdownActionsState {\r\n    dropdownOpen: boolean;\r\n}\r\n\r\nexport class DropdownActions extends React.Component<DropdownActionsProps, DropdownActionsState> {\r\n    private menu: HTMLDivElement;\r\n    private button: HTMLElement;\r\n    constructor(props:DropdownActionsProps) {\r\n        super(props);\r\n        this.state = {\r\n            dropdownOpen: false\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        document.addEventListener('click', this.handleDocumentClick);\r\n        document.addEventListener('touchstart', this.handleDocumentClick);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('click', this.handleDocumentClick);\r\n        document.removeEventListener('touchstart', this.handleDocumentClick);\r\n    }\r\n\r\n    private handleDocumentClick = (evt:any) => {\r\n        if (this.state.dropdownOpen === false) return;\r\n        if (this.button && this.button.contains(evt.target)) return;\r\n        if (!this.menu) return;\r\n        //if (!this.menu.contains(evt.target)) \r\n        this.toggle();\r\n    }\r\n\r\n    private toggle = () => {\r\n        this.setState({\r\n            dropdownOpen: !this.state.dropdownOpen\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let {icon, actions, isRight} = this.props;\r\n        if (isRight === undefined) isRight = true;\r\n        let hasIcon = actions.some(v => v.icon!==undefined);\r\n        let {dropdownOpen} = this.state;\r\n        //isOpen={this.state.dropdownOpen} toggle={this.toggle}\r\n        return <div className=\"dropdown\">\r\n            <button ref={v=>this.button=v} className=\"cursor-pointer dropdown-toggle btn btn-sm\"\r\n                data-toggle=\"dropdown\"\r\n                aria-expanded={dropdownOpen}\r\n                onClick={this.toggle}>\r\n                <i className={classNames('fa', 'fa-'+(icon||'ellipsis-v'))} />\r\n            </button>\r\n            <div ref={v => this.menu=v} className={classNames({\"dropdown-menu\":true, \"dropdown-menu-right\":isRight, \"show\":dropdownOpen})}>\r\n                {\r\n                    actions.map((v,index) => {\r\n                        let {icon, caption, action} = v;\r\n                        if (icon === undefined && caption === undefined) \r\n                            return <div className=\"dropdown-divider\" />;\r\n                        let i:any;\r\n                        if (hasIcon === true) {\r\n                            if (icon !== undefined) icon = 'fa-' + icon;\r\n                            i = <><i className={classNames('fa', icon, 'fa-fw')} aria-hidden={true}></i>&nbsp; </>;\r\n                        }\r\n                        if (action === undefined) \r\n                            return <h6 className=\"dropdown-header\">{i} {caption}</h6>;\r\n                        return <a className=\"dropdown-item\" key={index} href=\"#\" onClick={(evt:React.MouseEvent<HTMLAnchorElement>)=>{ evt.preventDefault();action()}}>{i} {caption}</a>\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\n/*\r\nexport class DropdownActions extends React.Component<DropdownActionsProps, DropdownActionsState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dropdownOpen: false\r\n        };\r\n    }\r\n    private toggle = () => {\r\n        this.setState({\r\n            dropdownOpen: !this.state.dropdownOpen\r\n        });\r\n    }\r\n    render() {\r\n        let {icon, actions, isRight} = this.props;\r\n        if (isRight === undefined) isRight = true;\r\n        let hasIcon = actions.some(v => v.icon!==undefined);\r\n        return <UncontrolledButtonDropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\r\n            <DropdownToggle caret={true} size=\"sm\" className=\"cursor-pointer\">\r\n                <i className={classNames('fa', 'fa-'+(icon||'ellipsis-v'))} />\r\n            </DropdownToggle>\r\n            <DropdownMenu right={isRight}>\r\n                {actions.map((v,index) => {\r\n                    let {icon, caption, action} = v;\r\n                    if (icon === undefined && caption === undefined) \r\n                        return <div className=\"dropdown-divider\" />;\r\n                    let i;\r\n                    if (hasIcon === true) {\r\n                        if (icon !== undefined) icon = 'fa-' + icon;\r\n                        i = <><i className={classNames('fa', icon, 'fa-fw')} aria-hidden={true}></i>&nbsp; </>;\r\n                    }\r\n                    if (action === undefined) \r\n                        return <h6 className=\"dropdown-header\">{i} {caption}</h6>;\r\n                    return <DropdownItem key={index} onClick={action}>{i} {caption}</DropdownItem>\r\n                })}\r\n            </DropdownMenu>\r\n        </UncontrolledButtonDropdown>\r\n    }\r\n}\r\n*/","import * as React from 'react';\r\n\r\nexport interface EasyDateProps {\r\n    date: Date;\r\n}\r\n\r\nfunction renderDate(date:Date, withTime:boolean) {\r\n    if (!date) return null;\r\n    if (typeof date === 'string') date = new Date(date);\r\n\r\n    let now = new Date();\r\n    let tick:number, nDate:number, _date:number, month:number, year:number, hm:string, nowYear:number;\r\n    let d = date;\r\n    tick = now.getTime() - d.getTime();\r\n    let hour=d.getHours(), minute=d.getMinutes();\r\n    nDate=now.getDate();\r\n    _date=d.getDate();\r\n    month=d.getMonth()+1;\r\n    year=d.getFullYear();\r\n    nowYear = now.getFullYear();\r\n    hm = withTime === true? ' ' + hour + ((minute<10?':0':':') + minute) : '';\r\n\r\n    if (tick < -24*3600*1000) {\r\n        if (year === nowYear)\r\n            return month+'月'+_date+'日' + hm;\r\n        else\r\n            return year+'年'+month+'月'+_date+'日' + hm;\r\n    }\r\n    if (tick < 24*3600*1000) {\r\n        return _date!==nDate? \r\n            (tick < 0? '明天 ' : '昨天 ') + hm \r\n            : withTime===true? hm : '今天';\r\n    }\r\n    if (year === nowYear) {\r\n        return month+'月'+_date+'日';\r\n    }\r\n    return year+'年'+month+'月'+_date+'日';\r\n}\r\n\r\n\r\nexport class EasyDate extends React.Component<EasyDateProps> {\r\n    render() {\r\n        return renderDate(this.props.date, false);\r\n    }\r\n}\r\n\r\nexport class EasyTime extends React.Component<EasyDateProps> {\r\n    render() {\r\n        return renderDate(this.props.date, false);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Image } from '../ui';\r\n\r\nexport interface MediaProps {\r\n    icon: string;\r\n    main: string|JSX.Element;\r\n    discription?: string | JSX.Element;\r\n    px?: number;\r\n    py?: number;\r\n}\r\n\r\nexport class Media extends React.Component<MediaProps> {\r\n    render() {\r\n        let {icon, main, discription, px, py} = this.props;\r\n        let disp:any;\r\n        if (typeof discription === 'string')\r\n            disp = <div>{discription}</div>;\r\n        else\r\n            disp = discription;\r\n        let cn = classNames(\r\n            'media', \r\n            px===undefined? 'px-0':'px-'+px, \r\n            py===undefined? 'py-2':'py-'+py);\r\n        return <div className={cn}>\r\n            <Image className=\"mr-3 w-4c h-4c\" src={icon} />\r\n            <div className=\"media-body\">\r\n                <h5 className=\"mt-0\">{main}</h5>\r\n                {disp}\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\n\r\nexport interface SearchBoxProps {\r\n    className?: string;\r\n    label?: string;\r\n    initKey?: string;\r\n    placeholder?: string;\r\n    buttonText?: string;\r\n    maxLength?: number;\r\n    size?: 'sm' | 'md' | 'lg';\r\n    inputClassName?: string;\r\n    onSearch: (key:string)=>Promise<void>;\r\n    onFocus?: ()=>void;\r\n    allowEmptySearch?: boolean;\r\n}\r\n\r\n/*\r\nexport interface SearchBoxState {\r\n    disabled: boolean;\r\n}*/\r\n\r\nexport class SearchBox extends React.Component<SearchBoxProps> { //}, SearchBoxState> {\r\n    private input: HTMLInputElement;\r\n    private key: string = null;\r\n    @observable private disabled: boolean;\r\n\r\n    private onChange = (evt: React.ChangeEvent<any>) => {\r\n        this.key = evt.target.value;\r\n        if (this.key !== undefined) {\r\n            this.key = this.key.trim();\r\n            if (this.key === '') this.key = undefined;\r\n        }\r\n        if (this.props.allowEmptySearch !== true) {\r\n            this.disabled = !this.key;\r\n        }\r\n    }\r\n    private onSubmit = async (evt: React.FormEvent<any>) => {\r\n        evt.preventDefault();\r\n        if (this.key === null) this.key = this.props.initKey || '';\r\n        if (this.props.allowEmptySearch !== true) {\r\n            if (!this.key) return;\r\n            if (this.input) this.input.disabled = true;\r\n        }\r\n        await this.props.onSearch(this.key);\r\n        if (this.input) this.input.disabled = false;\r\n    }\r\n    clear() {\r\n        if (this.input) this.input.value = '';\r\n    }\r\n    render() {\r\n        let {className, inputClassName, onFocus,\r\n            label, placeholder, buttonText, maxLength, size} = this.props;\r\n        let inputSize:string;\r\n        switch (size) {\r\n            default:\r\n            case 'sm': inputSize = 'input-group-sm'; break;\r\n            case 'md': inputSize = 'input-group-md'; break;\r\n            case 'lg': inputSize = 'input-group-lg'; break;\r\n        }\r\n        let lab:any;\r\n        if (label !== undefined) lab = <label className=\"input-group-addon\">{label}</label>;\r\n        return <form className={className} onSubmit={this.onSubmit} >\r\n            <div className={classNames(\"input-group\", inputSize)}>\r\n                {lab}\r\n                <input ref={v=>this.input=v} onChange={this.onChange}\r\n                    type=\"text\"\r\n                    name=\"key\"\r\n                    onFocus={onFocus}\r\n                    className={classNames('form-control', inputClassName || 'border-primary')}\r\n                    placeholder={placeholder}\r\n                    defaultValue={this.props.initKey}\r\n                    maxLength={maxLength} />\r\n                <div className=\"input-group-append\">\r\n                    <button className=\"btn btn-primary\"\r\n                        type=\"submit\"\r\n                        disabled={this.disabled}>\r\n                        <i className='fa fa-search' />\r\n                        <i className=\"fa\"/>\r\n                        {buttonText}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </form>;\r\n    }\r\n}\r\n","import {observable, computed} from 'mobx';\r\n\r\nexport interface Id {\r\n    id: number;\r\n}\r\n\r\nexport abstract class CacheIds<T extends Id> {\r\n    constructor(maxCount:number = 100) {\r\n        this.maxCount = maxCount;\r\n    }\r\n    private maxCount:number;\r\n    private arr:T[] = [];\r\n    @observable dict = new Map<number, T>();\r\n\r\n    loadIds(ids:number[]) {\r\n        let arr:number[] = [];\r\n        for (let id of ids) {\r\n            if (id === null) continue;\r\n            let item = this.dict.get(id);\r\n            if (item === undefined) {\r\n                arr.push(id);\r\n                item = {id:id} as T;\r\n                this.dict.set(id, item);\r\n            }\r\n        }                \r\n        this.loadId(arr);\r\n    }\r\n\r\n    get(id:number):T {\r\n        if (id === undefined || id === null) return null;\r\n        let item = this.dict.get(id);\r\n        if (item === undefined) {\r\n            this.dict.set(id, {id:id} as T);\r\n            this.loadId([id]);\r\n            item = this.dict.get(id);\r\n        }\r\n        return item;\r\n    }\r\n    private setItem(id:number, item:T) {\r\n        if (item === undefined) {\r\n            this.dict.set(id, null);\r\n            this.arr.push({id: id} as T);\r\n        }\r\n        else {\r\n            this.dict.set(id, item);\r\n            this.arr.push(item);\r\n        }\r\n        if (this.arr.length > this.maxCount) {\r\n            item = this.arr.shift();\r\n            this.dict.delete(item.id);\r\n        }\r\n    }\r\n    private async loadId(ids:number[]) {\r\n        let items = await this._loadIds(ids);\r\n        if (items === undefined) {\r\n            for (let id of ids) {\r\n                if (id === null) continue;\r\n                let item = await this._loadId(id);\r\n                this.setItem(id, item);\r\n            }\r\n        }\r\n        else {\r\n            for (let id of ids) {\r\n                let item = items.find(v => v.id === id);\r\n                this.setItem(id, item);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected abstract async _loadIds(ids:number[]):Promise<T[]>;\r\n    protected abstract async _loadId(id:number):Promise<T>;\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {FormView, FormProps} from './formView';\r\n\r\nexport function tonvaDebug() {\r\n    let a = 0;\r\n}\r\n\r\nexport interface TonvaFormProps extends FormProps {\r\n    className?: string;\r\n    initValues?: any;\r\n}\r\n\r\n@observer \r\nexport class TonvaForm extends React.Component<TonvaFormProps, {}> {\r\n    formView: FormView;\r\n    constructor(props:TonvaFormProps) {\r\n        super(props);\r\n        this.formView = new FormView(this.props);\r\n    }\r\n    componentWillMount() {\r\n        this.formView.setInitValues(this.props.initValues);\r\n    }\r\n    debug() {\r\n        let s = null;\r\n    }\r\n    render() {\r\n        let {className, children, initValues} = this.props;\r\n        return <div className={className}>\r\n            {\r\n                children === undefined? \r\n                    this.formView.render() : \r\n                    <form onSubmit={this.formView.onSubmit}>{children}</form>\r\n            }\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport className from 'classnames';\r\nimport {FormProps, FormRow, SubmitResult, FormView, TonvaForm} from '../form';\r\n\r\nexport interface Step {\r\n    formRows: FormRow[];\r\n    next: undefined | string | ((values:any) => string);    // 返回下一步的step名称或者直接就是名称\r\n    ex?: any;                                   // 每一步额外的参数\r\n}\r\n\r\nexport interface MultiStepProps {\r\n    className?: string;\r\n    header?: (step:Step, num:number) => JSX.Element; //name: step name, num: 第几步，1开始\r\n    footer?: (step:Step, num:number) => JSX.Element; //name: step name, num: 第几步，1开始\r\n    steps: {[name:string]: Step};\r\n    first: string;         // 第一步的名字\r\n    onSubmit: (values:any) => Promise<SubmitResult|undefined>;\r\n    submitButton?: string|JSX.Element;\r\n}\r\n\r\nexport interface StepView {\r\n    stepName: string;\r\n    step: Step;\r\n    props: FormProps;\r\n    //view: JSX.Element;\r\n}\r\nexport interface MultiStepState {\r\n    //num: number;\r\n    //step: Step;\r\n    //formView: FormView;\r\n    topView: StepView;\r\n    stepViews: StepView[];\r\n}\r\n\r\nexport class MultiStep extends React.Component<MultiStepProps, MultiStepState> {\r\n    private values: any = {};\r\n    private stepViews: StepView[] = [];\r\n    private topView: StepView;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            topView: undefined,\r\n            stepViews: [],\r\n        }\r\n        this.onPrev = this.onPrev.bind(this);\r\n        this.onNext = this.onNext.bind(this);\r\n    }\r\n    \r\n    private setStep(stepName: string) {\r\n        let step = this.props.steps[stepName];\r\n        if (step === undefined) return; //throw new Error('Unknown step name: ' + stepName);\r\n        if (this.topView !== undefined) this.stepViews.push(this.topView);\r\n        let otherButton, onOther;\r\n        if (this.stepViews.length > 0) {\r\n            otherButton = <ButtonConten prefix=\"undo\" text=\"上一步\" />;\r\n            onOther = this.onPrev;\r\n        }\r\n        let {header, footer} = this.props;\r\n        let btnContent = step.next === undefined?\r\n            {prefix: 'cloud-upload', text: this.props.submitButton || '提交'} :\r\n            {suffix: 'arrow-right', text: '下一步'}\r\n        let formProps = {\r\n            formRows: step.formRows,\r\n            submitButton: <ButtonConten {...btnContent} />,\r\n            onSubmit: this.onNext,\r\n            otherButton: otherButton,\r\n            onOther: onOther,\r\n        };\r\n        let num = this.stepViews.length + 1;\r\n        this.topView = {\r\n            stepName: stepName,\r\n            step: step,\r\n            props: formProps,\r\n        };\r\n        this.setState({\r\n            topView: this.topView,\r\n            stepViews: this.stepViews\r\n        });\r\n    }\r\n    componentWillMount() {\r\n        this.setStep(this.props.first);\r\n    }\r\n    private onPrev(values:any) {\r\n        _.assign(this.values, values);\r\n        this.topView = this.stepViews.pop();\r\n        this.setState({\r\n            topView: this.topView,\r\n            stepViews: this.stepViews\r\n        });\r\n    }\r\n    private onNext(values:any): Promise<SubmitResult|undefined> {\r\n        _.assign(this.values, values);\r\n        //let {num, step} = this.state;\r\n        let {next} = this.topView.step;\r\n        if (next === undefined) {\r\n            return this.props.onSubmit(this.values)\r\n        }\r\n        let nextStepName:string;\r\n        if (typeof next === 'string') {\r\n            nextStepName = next;\r\n        }\r\n        else {\r\n            nextStepName = next(this.values);\r\n        }\r\n        this.setStep(nextStepName);\r\n    }\r\n    render() {\r\n        let {className, header, footer} = this.props;\r\n        let {topView, stepViews} = this.state;\r\n        let {stepName, step} = topView;\r\n        let hidden = {visibility: 'hidden'};\r\n        let num = stepViews.length + 1;\r\n        return <div className={className}>\r\n            <div>\r\n                {header && header(step, num)}\r\n                <TonvaForm key={stepName} initValues={this.values} {...topView.props} />\r\n                {footer && footer(step, num)}\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst ButtonConten = (props:{prefix?:string, text?:string|JSX.Element, suffix?:string}) => {\r\n    let {prefix, text, suffix} = props;\r\n    let pIcon, sIcon;\r\n    if (prefix !== undefined) pIcon = <i className={className('fa', 'fa-' + prefix)} />;\r\n    if (suffix !== undefined) sIcon = <i className={className('fa', 'fa-' + suffix)} />;\r\n    return <React.Fragment>{pIcon} {props.text} {sIcon}</React.Fragment>;\r\n}\r\n    \r\n","import _ from 'lodash';\r\nimport { Context } from '../context';\r\nimport { FormRes } from '../formRes';\r\n\r\nexport abstract class Rule {\r\n    abstract check(defy:string[], value:any):void;\r\n}\r\n\r\nexport type ContextRule = (context:Context)=>{[target:string]:string[]|string} | string[] | string;\r\nexport type FieldRule = (value:any) => string[] | string;\r\n\r\nexport class RuleCustom extends Rule {\r\n    private func: FieldRule;\r\n    constructor(func: FieldRule) {\r\n        super();\r\n        this.func = func;\r\n    }\r\n    check(defy:string[], value:any) {\r\n        let ret = this.func(value);\r\n        if (ret === undefined) return;\r\n        switch (typeof ret) {\r\n            case 'undefined': return;\r\n            case 'string': defy.push(ret as string); return;\r\n            default: defy.push(...ret); return;\r\n        }        \r\n    }\r\n}\r\n\r\nexport abstract class RulePredefined extends Rule {\r\n    protected res: FormRes;\r\n    constructor(res: FormRes) {\r\n        super();\r\n        this.res = res;\r\n    }\r\n}\r\n\r\nexport class RuleRequired extends RulePredefined {\r\n    check(defy:string[], value:any) {\r\n        switch (typeof value) {\r\n            default:\r\n            case 'boolean': return;\r\n            case 'object':\r\n                if (value !== null) return;\r\n                break;\r\n            case 'string':\r\n                if ((value as string).trim().length > 0) return;\r\n                break;\r\n            case 'number':\r\n                if ((value as number) !== NaN) return;\r\n                break;\r\n            case 'undefined':\r\n                break;\r\n        }\r\n        defy.push(this.res.required);\r\n    }\r\n}\r\n\r\nexport class RuleNum extends RulePredefined {\r\n    private minMsg: _.TemplateExecutor;\r\n    private maxMsg: _.TemplateExecutor;\r\n    protected min: number;\r\n    protected max: number\r\n    constructor(res: FormRes, min?: number, max?: number) {\r\n        super(res);\r\n        this.minMsg = _.template(res.min);\r\n        this.maxMsg = _.template(res.max);\r\n        this.min = min;\r\n        this.max = max;\r\n    }\r\n    check(defy:string[], value:any) {\r\n        if (value === undefined || value === null) return;\r\n        let n = Number(value);\r\n        if (n === NaN) {\r\n            defy.push(this.res.number);\r\n        }\r\n        else {\r\n            this.checkMore(defy, n);\r\n        }\r\n    }\r\n\r\n    protected checkMore(defy:string[], value: number) {\r\n        if (this.min !== undefined && Number(value) < this.min) {\r\n            defy.push(this.minMsg({min:this.min}));\r\n        }\r\n        if (this.max !== undefined && Number(value) > this.max) {\r\n            defy.push(this.maxMsg({max:this.max}));\r\n        }\r\n    }\r\n}\r\n\r\nexport class RuleInt extends RuleNum {\r\n    protected checkMore(defy:string[], n: number) {\r\n        super.checkMore(defy, n);\r\n        if (Number.isInteger(n) === false) {\r\n            defy.push(this.res.integer);\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { UiItem, ChangingHandler, ChangedHandler } from '../../schema';\r\nimport { FieldProps } from '../field';\r\nimport { Context } from '../context';\r\nimport { ItemSchema } from '../../schema';\r\nimport { Rule, RuleRequired, RuleCustom, FieldRule } from '../rules';\r\nimport { computed, observable, reaction } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport abstract class Widget {\r\n    protected name: string;\r\n    protected context: Context;\r\n    protected fieldProps:FieldProps;\r\n    protected children: React.ReactNode;\r\n    protected itemSchema: ItemSchema;\r\n    protected ui: UiItem;\r\n    protected defaultValue: any;\r\n    protected value: any;\r\n    protected rules: Rule[];\r\n    @observable protected errors: string[] = [];\r\n    @observable protected contextErrors: string[] = [];\r\n    @computed protected get hasError():boolean {return (this.errors.length + this.contextErrors.length)>0}\r\n    protected readOnly:boolean;\r\n    protected disabled:boolean;\r\n    @observable visible:boolean;\r\n\r\n    constructor(context:Context, itemSchema:ItemSchema, fieldProps:FieldProps, children: React.ReactNode) {\r\n        this.context = context;\r\n        let {name} = itemSchema;\r\n        this.name = name;\r\n        this.itemSchema = itemSchema;\r\n        this.fieldProps = fieldProps;\r\n        this.children = children;\r\n        this.ui = context.getUiItem(name);\r\n        if (this.ui === undefined) {\r\n            this.readOnly = false;\r\n            this.disabled = false;\r\n            this.visible = true;\r\n        }\r\n        else {\r\n            let {readOnly, disabled, visible} = this.ui;\r\n            this.readOnly = (readOnly === true);\r\n            this.disabled = (disabled === true);\r\n            this.visible = !(visible === false);            \r\n        }\r\n        this.value = this.defaultValue =  context.getValue(name); //defaultValue;\r\n        this.init();\r\n    }\r\n\r\n    protected init() {\r\n        this.rules = [];\r\n        if (this.itemSchema.required === true) {\r\n            this.rules.push(new RuleRequired(this.context.form.res));\r\n        }\r\n        this.buildRules();\r\n        if (this.ui === undefined) return;\r\n        let {rules} = this.ui;\r\n        if (rules === undefined) return;\r\n        if (Array.isArray(rules) === false) {\r\n            this.rules.push(new RuleCustom(rules as FieldRule));\r\n            return;\r\n        }\r\n        for (let rule of rules as FieldRule[]) {\r\n            this.rules.push(new RuleCustom(rule));\r\n        }\r\n    }\r\n\r\n    protected buildRules() {\r\n    }\r\n\r\n    checkRules() {\r\n        let defy:string[] = [];\r\n        for (let r of this.rules) r.check(defy, this.value);\r\n        if (defy.length === 0) {\r\n            this.context.removeErrorWidget(this);\r\n        }\r\n        else {\r\n            this.context.addErrorWidget(this);\r\n            this.errors.push(...defy);\r\n        }\r\n    }\r\n\r\n    @computed get isOk() {\r\n        return this.errors.length ===0;\r\n    }\r\n\r\n    setError(err:string | string[]) {\r\n        if (err === undefined) return;\r\n        if (typeof err === 'string') this.errors.push(err);\r\n        else this.errors.push(...err);\r\n    }\r\n\r\n    setContextError(err:string | string[]) {\r\n        if (err === undefined) return;\r\n        if (typeof err === 'string') this.contextErrors.push(err);\r\n        else this.contextErrors.push(...err);\r\n    }\r\n\r\n    clearError() {\r\n        this.errors.splice(0);\r\n    }\r\n\r\n    clearContextError() {\r\n        this.contextErrors.splice(0);\r\n    }\r\n\r\n    protected parse(value:any):any {return value}\r\n\r\n    protected setElementValue(value:any) {}\r\n    protected setDataValue(value:any) {\r\n        if (this.isChanging === true) return;\r\n        this.context.initData[this.name] = this.value = this.parse(value);\r\n    }\r\n\r\n    setValue(value:any) {\r\n        if (this.isChanging === true) return;\r\n        //this.setDataValue(value);\r\n        //this.setElementValue(value);\r\n        this.changeValue(value, false);\r\n    }\r\n\r\n    getValue() {\r\n        return this.context.getValue(this.name);\r\n    }\r\n\r\n    getReadOnly():boolean {return this.readOnly}\r\n    getDisabled():boolean {return this.disabled}\r\n    getVisible():boolean {return this.visible}\r\n    setReadOnly(value:boolean) {this.readOnly = value}\r\n    setDisabled(value:boolean) {this.disabled = value}\r\n    setVisible(value:boolean) {this.visible = value}\r\n\r\n    private isChanging: boolean;\r\n    protected onInputChange = (evt: React.ChangeEvent<any>) => {\r\n        this.changeValue(evt.target.value, true);\r\n    }\r\n\r\n    protected changeValue(newValue: any, fromElement: boolean) {\r\n        let prev = this.value;\r\n        let onChanging: ChangingHandler;\r\n        let onChanged: ChangedHandler;\r\n        if (this.ui !== undefined) {\r\n            onChanging = this.ui.onChanging;\r\n            onChanged = this.ui.onChanged;\r\n        }\r\n        let allowChange = true;\r\n        if (onChanging !== undefined) {\r\n            this.isChanging = true;\r\n            allowChange = onChanging(this.context, this.value, prev);\r\n            this.isChanging = false;\r\n        }\r\n        if (allowChange === true) {\r\n            this.setDataValue(newValue);\r\n            if (fromElement !== true) this.setElementValue(newValue);\r\n            if (onChanged !== undefined) {\r\n                this.isChanging = true;\r\n                onChanged(this.context, this.value, prev);\r\n                this.isChanging = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    protected get className():string {\r\n        let fieldClass:string;\r\n        if (this.context.inNode === false) fieldClass = 'form-control';\r\n        return classNames(fieldClass, this.context.form.FieldClass, this.ui && this.ui.className);\r\n    }\r\n\r\n    protected abstract render():JSX.Element;\r\n\r\n    container = observer(():JSX.Element => {\r\n        if (this.visible === false) return null;\r\n        let {form, inNode} = this.context;\r\n        if (inNode === true) return this.render();\r\n        let label:any = this.label;\r\n        if (this.itemSchema.required === true && form.props.requiredFlag !== false) {\r\n            if (label !== null) label = <>{label}&nbsp;<span className=\"text-danger\">*</span></>;\r\n        }\r\n        return form.FieldContainer(label, this.render());\r\n    })\r\n\r\n    protected get label():string {\r\n        let label:any;\r\n        if (this.ui === undefined) {\r\n            label = this.name;\r\n        }\r\n        else {\r\n            let uiLabel = this.ui.label;\r\n            if (uiLabel === null) label = null;\r\n            else label = uiLabel || this.name;\r\n        }\r\n        return label;\r\n    }\r\n\r\n    protected renderTemplet():JSX.Element | undefined {\r\n        if (this.children !== undefined) {\r\n            return <>{this.children}</>;\r\n        }\r\n        if (this.ui === undefined) return undefined;\r\n        let {Templet} = this.ui;\r\n        if (typeof Templet === 'function') return Templet(this.value);\r\n        return Templet;\r\n    }\r\n\r\n    protected renderErrors() {\r\n        let errorList:string[] = [...this.errors, ...this.contextErrors];\r\n        if (errorList.length === 0) return null;\r\n        let {inNode} = this.context;\r\n        let tag = inNode === true? 'span' : 'div';\r\n        return errorList.map(err => React.createElement(tag, \r\n            {\r\n                key: err, \r\n                className: 'text-danger d-inline-block my-2 ml-3'\r\n            },\r\n            <><i className=\"fa fa-exclamation-circle\" /> &nbsp;{err}</>\r\n        ));\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiTextItem, StringSchema } from '../../schema';\r\n\r\nexport class TextWidget extends Widget {\r\n    protected inputType = 'text';\r\n    protected ui: UiTextItem;\r\n    protected input: HTMLInputElement;\r\n\r\n    protected setElementValue(value:any) {\r\n        if (this.input === null) return;\r\n        this.input.value = value;\r\n    }\r\n    protected get placeholder() {return (this.ui && this.ui.placeholder) || this.name}\r\n    protected onKeyDown = async (evt:React.KeyboardEvent<HTMLInputElement>) => {\r\n        this.internalOnKeyDown(evt);\r\n        if (evt.keyCode !== 13) return;\r\n        let {onEnter} = this.context.form.props;\r\n        if (onEnter === undefined) return;\r\n\r\n        this.changeValue(evt.currentTarget.value, true);\r\n\r\n        //this.checkRules();\r\n        //this.context.checkContextRules();\r\n        this.input.blur();\r\n\r\n        let ret = await onEnter(this.name, this.context);\r\n        if (ret !== undefined) {\r\n            this.context.setError(this.name, ret);\r\n        }\r\n    }\r\n\r\n    protected internalOnKeyDown(evt:React.KeyboardEvent<HTMLInputElement>) {\r\n    }\r\n\r\n    protected onBlur(evt: React.FocusEvent<any>) {\r\n        this.onInputChange(evt);\r\n        this.checkRules();\r\n        this.context.checkContextRules();\r\n    }\r\n    protected onFocus(evt: React.FocusEvent<any>) {\r\n        this.clearError();\r\n        this.context.removeErrorWidget(this);\r\n        this.context.clearErrors();\r\n    }\r\n    protected onChange(evt: React.ChangeEvent<any>) {\r\n    }\r\n\r\n    setReadOnly(value:boolean) {\r\n        if (this.input === null) return;\r\n        this.input.readOnly = this.readOnly = value;\r\n    }\r\n    setDisabled(value:boolean) {\r\n        if (this.input === null) return;\r\n        this.input.disabled = this.disabled = value;\r\n    }\r\n\r\n    render() {\r\n        let renderTemplet = this.renderTemplet();\r\n        if (renderTemplet !== undefined) return renderTemplet;\r\n        let cn = {\r\n            //'form-control': true,\r\n        };\r\n        if (this.hasError === true) {\r\n            cn['is-invalid'] = true;\r\n        }\r\n        else {\r\n            cn['required-item'] = this.itemSchema.required === true;\r\n        }\r\n        return <><input ref={input=>this.input = input}\r\n            className={classNames(this.className, cn)}\r\n            type={this.inputType}\r\n            defaultValue={this.value}\r\n            onChange={(evt: React.ChangeEvent<any>) => this.onChange(evt)}\r\n            placeholder={this.placeholder}\r\n            readOnly={this.readOnly}\r\n            disabled={this.disabled}\r\n            onKeyDown = {this.onKeyDown}\r\n            onFocus = {(evt: React.FocusEvent<any>) => this.onFocus(evt)}\r\n            onBlur={(evt: React.FocusEvent<any>) => this.onBlur(evt)}\r\n            maxLength={(this.itemSchema as StringSchema).maxLength} />\r\n            {this.renderErrors()}\r\n        </>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { TextWidget } from './textWidget';\r\nimport { RuleNum, RuleInt } from '../rules';\r\nimport { NumBaseSchema } from '../../schema';\r\n\r\nexport class NumberWidget extends TextWidget {\r\n    protected inputType = 'number';\r\n    protected itemSchema: NumBaseSchema;\r\n\r\n    protected buildRules() {\r\n        super.buildRules();\r\n        let res = this.context.form.res;\r\n        let {min, max} = this.itemSchema;\r\n        this.rules.push(\r\n            this.itemSchema.type === 'integer'?\r\n                new RuleNum(res, min, max) :\r\n                new RuleInt(res, min, max)\r\n        );\r\n        /*\r\n        if (this.itemSchema.type === 'integer') {\r\n            this.rules.push(new RuleInt);\r\n        }\r\n        let {min, max} = this.itemSchema;\r\n        if (min !== undefined) this.rules.push(new RuleMin(min));\r\n        if (max !== undefined) this.rules.push(new RuleMax(max));\r\n        */\r\n    }\r\n\r\n    protected parse(value:any):any {\r\n        if (value === undefined || value === null) return;\r\n        return Number(value);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { NumberWidget } from './numberWidget';\r\n\r\nexport class UpdownWidget extends NumberWidget {\r\n    protected inputType = 'number';\r\n\r\n    protected isValidKey(key:number):boolean {\r\n        return key===46 || key===8 || key===37 || key===39\r\n            || key>=48 && key<=57\r\n            || key>=96 && key<=105\r\n            || key===109 || key===189;\r\n    }\r\n    \r\n    protected internalOnKeyDown(evt:React.KeyboardEvent<HTMLInputElement>) {\r\n        let key = evt.keyCode;\r\n        event.returnValue = this.isValidKey(key);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { TextWidget } from './textWidget';\r\n\r\nexport class DateWidget extends TextWidget {\r\n    protected inputType = 'date';\r\n}\r\n\r\nexport class DateTimeWidget extends TextWidget {\r\n    protected inputType = 'datetime';\r\n}\r\n\r\nexport class TimeWidget extends TextWidget {\r\n    protected inputType = 'time';\r\n}\r\n\r\nexport class MonthWidget extends TextWidget {\r\n    protected inputType = 'month';\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiCheckItem } from '../../schema';\r\n\r\nexport class CheckBoxWidget extends Widget {\r\n    protected input: HTMLInputElement;\r\n    protected ui: UiCheckItem;\r\n    protected trueValue: any;\r\n    protected falseValue: any;\r\n\r\n    protected init() {\r\n        super.init();\r\n        if (this.ui !== undefined) {\r\n            let {trueValue, falseValue} = this.ui;\r\n            if (trueValue === undefined) this.trueValue = true;\r\n            else this.trueValue = trueValue;\r\n            if (falseValue === undefined) this.falseValue = false;\r\n            else this.falseValue = falseValue;\r\n        }\r\n        else {\r\n            this.trueValue = true;\r\n            this.falseValue = false;\r\n        }\r\n    }\r\n    protected setElementValue(value:any) {\r\n        this.input.checked = value === this.trueValue;\r\n    }\r\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\r\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\r\n\r\n    protected onInputChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setDataValue(evt.target.checked === true? this.trueValue : this.falseValue);\r\n    }\r\n\r\n    protected onClick = () => {\r\n        this.context.clearErrors();\r\n    }\r\n\r\n    render() {\r\n        let cn = classNames(this.className, 'form-check-inline p-0');\r\n        let input = <input\r\n            ref={(input)=>this.input = input}\r\n            className={'align-self-center'}\r\n            type=\"checkbox\"\r\n            defaultChecked={this.defaultValue} \r\n            onChange={this.onInputChange}\r\n            onClick={this.onClick} />;\r\n        if (this.context.inNode === true) {\r\n            return <label className={cn}>\r\n                {input} {(this.ui&&this.ui.label) || this.name}\r\n            </label>\r\n        }\r\n        else {\r\n            return <div className={cn}>\r\n                <label className=\"w-100 h-100 mb-0 d-flex justify-content-center\">{input}</label>\r\n            </div>;\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\nimport { Widget } from './widget';\r\nimport { UiSelect } from '../../schema';\r\n\r\nexport class SelectWidget extends Widget {\r\n    protected select: HTMLSelectElement;\r\n    protected ui: UiSelect;\r\n    @observable protected readOnly: boolean;\r\n\r\n    protected setElementValue(value:any) {this.select.value = value}\r\n    protected onInputChange = (evt:React.ChangeEvent<HTMLSelectElement>) => {\r\n        this.setDataValue(evt.target.value);\r\n    }\r\n\r\n    setReadOnly(value:boolean) {this.select.disabled = this.readOnly = !value}\r\n    setDisabled(value:boolean) {this.select.disabled = this.disabled = value}\r\n\r\n    render() {\r\n        if (this.readOnly === true) {\r\n            let option = this.ui.list.find(v => v.value === this.value);\r\n            let title = (option === undefined)? '(???)' : option.title;\r\n            return <span className=\"form-control w-min-6c\">{title}</span>;\r\n        }\r\n        return <select\r\n            ref={(select)=>this.select = select}\r\n            className={classNames(this.className, 'form-control')}\r\n            defaultValue={this.defaultValue} \r\n            onChange={this.onInputChange}>\r\n            {this.ui.list.map((v,index) => {\r\n                let {title, value} = v;\r\n                let cn:string;\r\n                //if (value === undefined || value === null) cn = 'text-light small';\r\n                //else cn = 'text-danger';\r\n                return <option className={cn} key={index} value={value}>{title || value}</option>\r\n            })}\r\n        </select>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { TextWidget } from './textWidget';\r\nimport { Widget } from './widget';\r\nimport { UiRadio } from '../../schema';\r\nimport { RowContext } from '../context';\r\n\r\n\r\nconst radioStyle:React.CSSProperties = {height: 'auto'};\r\n\r\nexport class RadioWidget extends Widget {\r\n    protected inputs: {[index:number]: HTMLInputElement} = {};\r\n    protected ui: UiRadio;\r\n\r\n    protected setElementValue(value:any) {\r\n        for (let i in this.inputs) {\r\n            let input = this.inputs[i];\r\n            input.checked = value === input.value;\r\n        }\r\n    }\r\n    setReadOnly(value:boolean) {\r\n        this.readOnly = value;\r\n        for (let i in this.inputs) this.inputs[i].readOnly = value;\r\n    }\r\n    setDisabled(value:boolean) {\r\n        this.disabled = value;\r\n        for (let i in this.inputs) this.inputs[i].disabled = value\r\n    }\r\n\r\n    /*\r\n    protected onInputChange = (evt: React.ChangeEvent<any>) => {\r\n        this.changeValue(evt.target.value, true);\r\n    }\r\n    */\r\n\r\n    render() {\r\n        let {defaultValue, list} = this.ui;\r\n        let {isRow, inNode} = this.context;\r\n        let rowKey:number;\r\n        if (isRow === true) {\r\n            rowKey = (this.context as RowContext).rowKey;\r\n        }\r\n        let cn = classNames(this.className, 'py-0');\r\n        return <span className={cn} style={radioStyle}>\r\n                {list.map((v,index) => {\r\n                    let {value, title} = v;\r\n                    let name = this.name;\r\n                    if (rowKey !== undefined) name += '-' + rowKey;\r\n                    return <label key={index} className=\"form-radio-inline\">\r\n                        <input ref={input=>this.inputs[index]=input} type=\"radio\" name={name}\r\n                            value={value} defaultChecked={(this.defaultValue || defaultValue)===value}\r\n                            onChange={this.onInputChange} />\r\n                        {title || value}\r\n                    </label>;\r\n                    //</span>\r\n                })}\r\n            </span>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiIdItem, TempletType } from '../../schema';\r\nimport { observable } from 'mobx';\r\n\r\nexport class IdWidget extends Widget {\r\n    protected ui: UiIdItem;\r\n    @observable protected value:number;\r\n    setReadOnly(value:boolean) {this.readOnly = value}\r\n    setDisabled(value:boolean) {this.disabled = value}    \r\n\r\n    protected onClick = async () => {\r\n        let pickId = this.ui && this.ui.pickId;\r\n        if (pickId === undefined) {\r\n            alert('no pickId defined!');\r\n            return;\r\n        }\r\n        let id = await pickId(this.context, this.name, this.value);        \r\n        this.setDataValue(id);\r\n        this.clearError();\r\n        this.clearContextError();\r\n        this.checkRules();\r\n    }\r\n\r\n    render() {\r\n        let placeholder:string|JSX.Element, Templet: TempletType;\r\n        if (this.ui !== undefined) {\r\n            placeholder = this.ui.placeholder;\r\n            Templet = this.ui.Templet;\r\n        }\r\n        let cn = {\r\n            'form-control': true,\r\n            'required-item': this.itemSchema.required === true,\r\n            'cursor-pointer': true,\r\n            'is-invalid': this.hasError,\r\n        };\r\n        let content;\r\n        if (this.value === undefined || this.value === null) {\r\n            content = placeholder || 'placeholder';\r\n            cn['text-muted'] = true;\r\n        }\r\n        else if (Templet === undefined) {\r\n            content = <>{this.value}</>;\r\n        }\r\n        else if (typeof Templet === 'function') {\r\n            content = Templet(this.value);\r\n        }\r\n        else {\r\n            content = Templet;\r\n        }\r\n        return <>\r\n            <div className={classNames(cn)} onClick={this.onClick}>{content}</div>\r\n            {this.renderErrors()}\r\n        </>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { DataType } from '../../schema';\r\nimport { UiType } from '../../schema';\r\n\r\nexport const Unknown = (dataType:DataType, uiType:UiType, dataTypes:DataType[]) => {\r\n    return <span className=\"text-danger\">!!data type {dataType} only support {(dataTypes || []).join(', ')}, can't use ui {uiType}!!</span>;\r\n};\r\n","import * as React from 'react';\r\nimport { UiButton, TempletType } from '../../schema';\r\nimport { Unknown } from './unknown';\r\nimport { Widget } from './widget';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class ButtonWidget extends Widget {\r\n    protected ui: UiButton;\r\n\r\n    protected onClick = async () => {\r\n        this.clearError();\r\n        this.clearContextError();\r\n        let {name, type} = this.itemSchema;\r\n        if (type === 'submit') {\r\n            await this.context.submit(name);\r\n        }\r\n        /*\r\n        let {onButtonClick} = this.context.form.props;\r\n        if (onButtonClick === undefined) {\r\n            alert(`button ${name} clicked. you should define form onButtonClick`);\r\n            return;\r\n        }\r\n        let ret = await onButtonClick(name, this.context);\r\n        if (ret === undefined) return;\r\n        this.context.setError(name, ret);\r\n        */\r\n    }\r\n\r\n    private observerRender = observer(() => {\r\n        let {name, type} = this.itemSchema;\r\n        let Templet:TempletType, cn:string, caption:string;\r\n        if (this.ui !== undefined) {\r\n            let {widget:widgetType} = this.ui;\r\n            if (widgetType !== 'button') return Unknown(type, widgetType, ['button']);\r\n            Templet = this.ui.Templet;\r\n            cn = this.ui.className;\r\n            caption = this.ui.label;\r\n        }\r\n        let {form, hasError} = this.context;\r\n        let context = this.context;\r\n        let disabled = type==='submit' && hasError;\r\n        let content:any;\r\n        if (this.children !== undefined) content = this.children;\r\n        else if (typeof Templet === 'function') content = Templet();\r\n        else if (Templet !== undefined) content = Templet;\r\n        else content = caption; \r\n        let button = <button \r\n            className={cn} \r\n            type=\"button\"\r\n            disabled={disabled}\r\n            onClick={this.onClick}>\r\n            {content || name}\r\n        </button>;\r\n        if (context.inNode === true) return <>{button}{this.renderErrors()}</>;\r\n        return <div className={form.ButtonClass}>\r\n            <div>{this.renderErrors()}</div>\r\n            {button}\r\n        </div>;\r\n    });\r\n    \r\n    protected get label():string {return null}\r\n\r\n    render() {\r\n        return <this.observerRender />\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Form } from './form';\r\nimport { UiSchema, UiArr, UiItem } from '../schema';\r\nimport { ArrSchema, ItemSchema } from '../schema';\r\nimport { Widget as Widget } from './widgets/widget';\r\n//import { ArrRow } from './arrRow';\r\nimport { observable, computed } from 'mobx';\r\nimport { ContextRule } from './rules';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport abstract class Context {\r\n    private subContexts:{[name:string]:{[rowKey:string]:Context}};\r\n    readonly form: Form;\r\n    readonly uiSchema: UiSchema;\r\n    readonly initData: any;\r\n    readonly inNode: boolean;           // true: 在</> 流中定义Field\r\n    readonly widgets: {[name:string]: Widget} = {};\r\n    readonly rules: ContextRule[];\r\n    readonly isRow: boolean;\r\n    @observable errors: string[] = [];\r\n    @observable errorWidgets:Widget[] = [];\r\n\r\n    constructor(form: Form, uiSchema: UiSchema, data: any, inNode: boolean, isRow: boolean) {\r\n        this.form = form;\r\n        this.uiSchema = uiSchema;\r\n        this.initData = data;\r\n        this.inNode = inNode;\r\n        this.isRow = isRow;\r\n        if (uiSchema !== undefined) {\r\n            let {rules} = uiSchema;\r\n            if (rules !== undefined) {\r\n                this.rules = [];\r\n                if (Array.isArray(rules) === false)\r\n                    this.rules.push(rules as ContextRule);\r\n                else\r\n                    this.rules.push(...rules as ContextRule[]);\r\n            }\r\n        }\r\n    }\r\n\r\n    getArrRowContexts(arrName: string) {\r\n        if (this.subContexts === undefined) this.subContexts = {};\r\n        let arrRowContexts = this.subContexts[name];\r\n        if (arrRowContexts === undefined) this.subContexts[name] = arrRowContexts = {};\r\n        return arrRowContexts;\r\n    }\r\n\r\n    abstract get data():any;\r\n    abstract getItemSchema(itemName:string):ItemSchema;\r\n    abstract getUiItem(itemName:string):UiItem;\r\n    get arrName():string {return undefined}\r\n    getValue(itemName:string):any {return this.initData[itemName]}\r\n    setValue(itemName:string, value:any) {\r\n        this.initData[itemName] = value;\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setValue(value);\r\n    }\r\n    getDisabled(itemName:string):boolean {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) return widget.getDisabled();\r\n        return undefined;\r\n    }\r\n    setDisabled(itemName:string, value:boolean) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setDisabled(value);\r\n    }\r\n    getReadOnly(itemName:string):boolean {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.getReadOnly();\r\n        return undefined;\r\n    }\r\n    setReadOnly(itemName:string, value:boolean) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setReadOnly(value);\r\n    }\r\n    getVisible(itemName:string):boolean {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.getVisible();\r\n        return undefined;\r\n    }\r\n    setVisible(itemName:string, value:boolean) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setVisible(value);\r\n    }\r\n\r\n    async submit(buttonName: string) {\r\n        this.checkRules()\r\n        if (this.hasError === true) return;\r\n        let {onButtonClick} = this.form.props;\r\n        if (onButtonClick === undefined) {\r\n            alert(`button ${buttonName} clicked. you should define form onButtonClick`);\r\n            return;\r\n        }\r\n        let ret = await onButtonClick(buttonName, this);\r\n        if (ret === undefined) return;\r\n        this.setError(buttonName, ret);\r\n\r\n    }\r\n\r\n    checkFieldRules() {\r\n        for (let i in this.widgets) {\r\n            this.widgets[i].checkRules();\r\n        }\r\n        if (this.subContexts === undefined) return;\r\n        for (let i in this.subContexts) {\r\n            let arrRowContexts = this.subContexts[i];\r\n            for (let j in arrRowContexts) {\r\n                arrRowContexts[j].checkFieldRules();\r\n            }\r\n        }\r\n    }\r\n\r\n    checkContextRules() {\r\n        this.clearErrors();\r\n        if (this.rules === undefined) return;\r\n        for (let rule of this.rules) {\r\n            let ret = rule(this);\r\n            if (ret === undefined) continue;\r\n            if (Array.isArray(ret) === true) {\r\n                this.errors.push(...ret as string[]);\r\n            }\r\n            else if (typeof ret === 'string') {\r\n                this.errors.push(ret as string);\r\n            }\r\n            else {\r\n                for (let i in ret as object) this.setError(i, ret[i]);\r\n            }\r\n        }\r\n        if (this.subContexts === undefined) return;\r\n        for (let i in this.subContexts) {\r\n            let arrRowContexts = this.subContexts[i];\r\n            for (let j in arrRowContexts) {\r\n                let rowContext = arrRowContexts[j];\r\n                rowContext.clearErrors();\r\n                rowContext.checkContextRules();\r\n            }\r\n        }\r\n    }\r\n\r\n    setError(itemName:string, error:string) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget === undefined) return;\r\n        widget.setContextError(error);\r\n        this.addErrorWidget(widget);\r\n    }\r\n\r\n    clearContextErrors() {\r\n        for (let i in this.widgets) {\r\n            let widget = this.widgets[i];\r\n            if (widget === undefined) continue;\r\n            widget.clearContextError();\r\n        }\r\n    }\r\n\r\n    clearWidgetsErrors() {\r\n        for (let i in this.widgets) {\r\n            let widget = this.widgets[i];\r\n            if (widget === undefined) continue;\r\n            widget.clearError();\r\n        }\r\n    }\r\n\r\n    checkRules() {\r\n        this.clearErrors();\r\n        this.clearWidgetsErrors();\r\n        this.checkFieldRules();\r\n        if (this.hasError === true) return;\r\n        this.checkContextRules();\r\n    }\r\n\r\n    addErrorWidget(widget:Widget) {\r\n        let pos = this.errorWidgets.findIndex(v => v === widget);\r\n        if (pos < 0) this.errorWidgets.push(widget);\r\n    }\r\n    removeErrorWidget(widget:Widget) {\r\n        let pos = this.errorWidgets.findIndex(v => v === widget);\r\n        if (pos >= 0) this.errorWidgets.splice(pos, 1);\r\n    }\r\n\r\n    protected checkHasError():boolean {\r\n        let ret = (this.errorWidgets.length + this.errors.length) > 0;\r\n        if (ret === true) return true;\r\n        if (this.subContexts === undefined) return false;\r\n        for (let i in this.subContexts) {\r\n            let arrRowContexts = this.subContexts[i];\r\n            for (let j in arrRowContexts) {\r\n                if (arrRowContexts[j].hasError === true) return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    @computed get hasError():boolean {\r\n        return this.checkHasError();\r\n    };\r\n\r\n    clearErrors() {\r\n        this.errors.splice(0);\r\n        this.errorWidgets.splice(0);\r\n        this.clearContextErrors();\r\n    }\r\n\r\n    renderErrors = observer((): JSX.Element => {\r\n        let {errors} = this;\r\n        if (errors.length === 0) return null;\r\n        return <>\r\n            {errors.map(err => <span key={err} className=\"text-danger inline-block my-1 ml-3\">\r\n                <i className=\"fa fa-exclamation-circle\" /> &nbsp;{err}\r\n            </span>)}\r\n        </>\r\n    });\r\n}\r\n\r\nlet rowKeySeed:number = 1;\r\nexport class RowContext extends Context {\r\n    readonly parentContext: Context;\r\n    readonly arrSchema: ArrSchema;\r\n    readonly uiSchema: UiArr;\r\n    //readonly row: ArrRow;\r\n    readonly rowKey: number;\r\n    readonly data: any;\r\n    constructor(parentContext:Context, arrSchema: ArrSchema, data: any, inNode: boolean) {\r\n        let uiArr:UiArr;\r\n        let {uiSchema} = parentContext;\r\n        if (uiSchema !== undefined) {\r\n            let {items} = uiSchema;\r\n            if (items !== undefined) uiArr = items[arrSchema.name] as UiArr;\r\n        }\r\n        super(parentContext.form, uiArr, data, inNode, true);\r\n        this.parentContext = parentContext;\r\n        this.arrSchema = arrSchema;\r\n        this.rowKey = rowKeySeed++;\r\n        this.data = data;\r\n    }\r\n    getItemSchema(itemName:string):ItemSchema {return this.arrSchema.itemSchemas[itemName]}\r\n    getUiItem(itemName:string):UiItem {\r\n        if (this.uiSchema === undefined) return undefined;\r\n        let {items} = this.uiSchema;\r\n        if (items === undefined) return undefined;\r\n        return items[itemName]\r\n    }\r\n    get arrName():string {return this.arrSchema.name}\r\n    clearErrors() {\r\n        super.clearErrors();\r\n        this.parentContext.clearErrors();\r\n    }\r\n\r\n    get parentData():any {return this.parentContext.data;}\r\n}\r\n\r\nexport class FormContext extends Context {\r\n    constructor(form:Form, inNode:boolean) {\r\n        super(form, form.uiSchema, form.data, inNode, false);\r\n    }\r\n    get data():any {return this.form.data}\r\n    getItemSchema(itemName:string):ItemSchema {return this.form.itemSchemas[itemName]}\r\n    getUiItem(itemName:string):UiItem {\r\n        let {uiSchema} = this.form;\r\n        if (uiSchema === undefined) return undefined;\r\n        let {items} = uiSchema;\r\n        if (items === undefined) return undefined;\r\n        return items[itemName];\r\n    }\r\n}\r\n\r\nexport const ContextContainer = React.createContext<Context>({} as any);\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\n//import { ArrRow } from '../arrRow';\r\nimport { Context, RowContext, ContextContainer } from '../context';\r\nimport { ArrSchema } from '../../schema';\r\nimport { UiArr, TempletType } from '../../schema';\r\nimport { Unknown } from './unknown';\r\nimport { factory } from './factory';\r\n\r\nexport const ArrComponent = observer((\r\n    {parentContext, arrSchema, children}:{parentContext: Context, arrSchema: ArrSchema, children: React.ReactNode}) => \r\n{\r\n    let {name, arr} = arrSchema;\r\n    let data = parentContext.initData[name] as any[];\r\n    let {form} = parentContext;\r\n    let arrRowContexts = parentContext.getArrRowContexts(name);\r\n    let ui = parentContext.getUiItem(name) as UiArr;\r\n    let arrLabel = name;\r\n    let Templet:TempletType;\r\n    let selectable:boolean, deletable:boolean, restorable:boolean;\r\n    let {ArrContainer, RowContainer, RowSeperator, uiSchema} = form;\r\n    if (uiSchema !== undefined) {\r\n        let {selectable:formSelectable, deletable:formDeletable, restorable:formRestorable} = uiSchema;\r\n        if (selectable !== true) selectable = formSelectable;\r\n        if (deletable !== true) deletable = formDeletable;\r\n        if (restorable !== true) restorable = formRestorable;\r\n    }\r\n    if (ui !== undefined) {\r\n        let {widget:widgetType, label, \r\n            selectable:arrSelectable, deletable:arrDeletable, restorable:arrRestorable,\r\n            ArrContainer:ac, RowContainer:rc, RowSeperator:rs\r\n        } = ui;\r\n        if (arrSelectable !== undefined) selectable = arrSelectable;\r\n        if (arrDeletable !== undefined) deletable = arrDeletable;\r\n        if (arrRestorable !== undefined) restorable = arrRestorable;\r\n        if (ac !== undefined) ArrContainer = ac;\r\n        if (rc !== undefined) RowContainer = rc;\r\n        if (rs !== undefined) RowSeperator = rs;\r\n        Templet = ui.Templet;\r\n        if (widgetType !== 'arr') return Unknown(arrSchema.type, widgetType, ['arr']);\r\n        arrLabel = label || arrLabel;\r\n    }\r\n    let first = true;\r\n    return ArrContainer(arrLabel, <>\r\n        {data.map((row:any, index) => {\r\n            let rowContext: RowContext;\r\n            let rowContent: JSX.Element;\r\n            let sep = undefined;\r\n            if (first === false) sep = RowSeperator;\r\n            else first = false;\r\n            if (children !== undefined) {\r\n                rowContext = new RowContext(parentContext, arrSchema, row, true);\r\n                rowContent = <>{children}</>;\r\n            }\r\n            else {\r\n                let typeofTemplet = typeof Templet;\r\n                if (typeofTemplet === 'function') {\r\n                    rowContext = new RowContext(parentContext, arrSchema, row, true);\r\n                    rowContent = React.createElement(observer(Templet as React.StatelessComponent), row);\r\n                }\r\n                else if (typeofTemplet === 'object') {\r\n                    rowContext = new RowContext(parentContext, arrSchema, row, true);\r\n                    rowContent = Templet as JSX.Element;\r\n                }\r\n                else {\r\n                    rowContext = new RowContext(parentContext, arrSchema, row, false);\r\n                    rowContent = <>{\r\n                        arr.map((v, index) => {\r\n                            return <React.Fragment key={v.name}>\r\n                                {factory(rowContext, v, undefined)}\r\n                            </React.Fragment>\r\n                        })}\r\n                    </>;\r\n                }\r\n            }\r\n            let {rowKey} = rowContext;\r\n            arrRowContexts[rowKey] = rowContext;\r\n\r\n            let selectCheck:JSX.Element, deleteIcon:JSX.Element;\r\n            if (selectable === true) {\r\n                let onClick = (evt: React.MouseEvent<HTMLInputElement>)=>{\r\n                    let {checked} = (evt.target as HTMLInputElement);\r\n                    row.$isSelected = checked;\r\n                    let {$source} = row;\r\n                    if ($source !== undefined) $source.$isSelected = checked;\r\n                    rowContext.clearErrors();\r\n                }\r\n                selectCheck = <div className=\"form-row-checkbox\">\r\n                    <input type=\"checkbox\" onClick={onClick} defaultChecked={row.$isSelected} />\r\n                </div>;\r\n            }\r\n            let isDeleted = !(row.$isDeleted===undefined || row.$isDeleted===false);\r\n            if (deletable === true) {\r\n                let icon = isDeleted? 'fa-undo' : 'fa-trash';\r\n                let onDelClick = () => {\r\n                    if (restorable === true) {\r\n                        row.$isDeleted = !isDeleted;\r\n                        let {$source} = row;\r\n                        if ($source !== undefined) $source.$isDeleted = !isDeleted;\r\n                    }\r\n                    else {\r\n                        let p = data.indexOf(row);\r\n                        if (p>=0) data.splice(p, 1);\r\n                    }\r\n                    rowContext.clearErrors();\r\n                }\r\n                deleteIcon = <div className=\"form-row-edit text-info\" onClick={onDelClick}>\r\n                    <i className={classNames('fa', icon, 'fa-fw')} />\r\n                </div>;\r\n            }\r\n            let editContainer = selectable===true || deletable===true?\r\n                (content:any) => <fieldset disabled={isDeleted}><div className={classNames('d-flex', {'deleted':isDeleted, 'row-selected':row.$isSelected})}>\r\n                    {selectCheck}\r\n                    <div className={selectable===true && deletable===true? \"form-row-content\":\"form-row-content-1\"}>{content}</div>\r\n                    {deleteIcon}\r\n                </div></fieldset>\r\n                :\r\n                (content:any) => content;\r\n\r\n            return <ContextContainer.Provider key={rowKey} value={rowContext}>\r\n                {sep}\r\n                {RowContainer(editContainer(<><rowContext.renderErrors />{rowContent}</>))}\r\n            </ContextContainer.Provider>;\r\n        })}\r\n    </>);\r\n});\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiImageItem } from '../../schema';\r\nimport { Image } from '../../image';\r\nimport { ImageItemEdit } from '../../edit/imageItemEdit';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\n\r\nexport class ImageWidget extends Widget {\r\n    protected input: HTMLInputElement;\r\n    protected ui: UiImageItem;\r\n    @observable private imageSrc: string;\r\n\r\n    protected init() {\r\n        super.init();\r\n        this.imageSrc = this.value;\r\n    }\r\n\r\n    protected onClick = async () => {\r\n        let edit = new ImageItemEdit(this.itemSchema, this.ui, this.ui.label, this.value);\r\n        let ret = await edit.start();\r\n        if (ret !== null) {\r\n            this.setValue(ret);\r\n            this.imageSrc = ret;\r\n        }\r\n        await edit.end();\r\n    }\r\n\r\n    render() {\r\n        return <this.observerRender />;\r\n    }\r\n\r\n    private observerRender = observer(() => {\r\n        let cn = [\r\n            'bg-white p-1 d-flex justify-content-center',\r\n        ];\r\n        let onClick: any;\r\n        if (!this.readOnly && !this.disabled) {\r\n            cn.push('cursor-pointer');\r\n            onClick = this.onClick;\r\n        }\r\n        return <div className={classNames(cn)} onClick={onClick}>\r\n            <Image src={this.imageSrc} className=\"w-4c h-4c\"/>\r\n        </div>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport { Schema, ArrSchema, DataType, ButtonSchema, ItemSchema } from '../../schema';\r\nimport { UiItem, UiArr, UiType, UiButton, TempletType, TypeWidget, UiCustom } from '../../schema';\r\nimport { TextWidget } from './textWidget';\r\nimport { TextAreaWidget } from './textareaWidget';\r\nimport { PasswordWidget, UrlWidget, EmailWidget } from './passwordWidget';\r\nimport { UpdownWidget } from './updownWidget';\r\nimport { NumberWidget } from './numberWidget';\r\nimport { DateWidget, DateTimeWidget, TimeWidget, MonthWidget } from './dateWidget';\r\nimport { CheckBoxWidget } from './checkBoxWidget';\r\nimport { FieldProps } from '../field';\r\nimport { Context, RowContext, FormContext, ContextContainer } from '../context';\r\nimport { SelectWidget } from './selectWidget';\r\nimport { RadioWidget } from './radioWidget';\r\nimport { RangeWidget } from './rangeWidget';\r\nimport { IdWidget } from './idWidget';\r\nimport { ButtonWidget } from './buttonWidget';\r\nimport { ArrComponent } from './arrComponent';\r\nimport { ImageWidget } from './imageWidget';\r\n\r\nconst widgetsFactory: {[type: string]: {widget?: TypeWidget, dataTypes?: DataType[]}} = {\r\n    id: {\r\n        dataTypes: ['id'],\r\n        widget: IdWidget,\r\n    },\r\n    text: {\r\n        dataTypes: ['integer', 'number', 'string'],\r\n        widget: TextWidget\r\n    },\r\n    textarea: {\r\n        dataTypes: ['string'],\r\n        widget: TextAreaWidget\r\n    },\r\n    password: {\r\n        dataTypes: ['string'],\r\n        widget: PasswordWidget\r\n    },\r\n    date: {\r\n        dataTypes: ['date'],\r\n        widget: DateWidget\r\n    },\r\n    datetime: {\r\n        dataTypes: ['date'],\r\n        widget: DateTimeWidget\r\n    },\r\n    time: {\r\n        dataTypes: ['date'],\r\n        widget: TimeWidget\r\n    },\r\n    month: {\r\n        dataTypes: ['date'],\r\n        widget: MonthWidget\r\n    },\r\n    select: {\r\n        dataTypes: ['integer', 'number', 'string', 'date', 'boolean'],\r\n        widget: SelectWidget\r\n    },\r\n    url: {\r\n        dataTypes: ['string'],\r\n        widget: UrlWidget\r\n    },\r\n    email: {\r\n        dataTypes: ['string'],\r\n        widget: EmailWidget\r\n    },\r\n    number: {\r\n        dataTypes: ['integer', 'number'],\r\n        widget: NumberWidget\r\n    },\r\n    updown: {\r\n        dataTypes: ['integer', 'number'],\r\n        widget: UpdownWidget\r\n    },\r\n    color: {\r\n\r\n    },\r\n    checkbox: {\r\n        dataTypes: ['boolean', 'integer', 'number'],\r\n        widget: CheckBoxWidget\r\n    },\r\n    image: {\r\n        dataTypes: ['string'],\r\n        widget: ImageWidget,\r\n    },\r\n    checkboxes: {\r\n\r\n    },\r\n    radio: {\r\n        dataTypes: ['integer', 'number', 'string', 'date', 'boolean'],\r\n        widget: RadioWidget\r\n    },\r\n    range: {\r\n        dataTypes: ['integer'],\r\n        widget: RangeWidget,\r\n    },\r\n    button: {\r\n        dataTypes: ['button', 'submit'],\r\n        widget: ButtonWidget,\r\n    }\r\n}\r\n\r\nexport function factory(context: Context, itemSchema: ItemSchema, children:React.ReactNode, fieldProps?: FieldProps):JSX.Element {\r\n    if (context === undefined) {\r\n        debugger;\r\n        return null;\r\n    }\r\n    if (itemSchema === undefined) return undefined;\r\n    let {name, type} = itemSchema;\r\n    switch (type) {\r\n    case 'arr':\r\n        let arrSchema = context.getItemSchema(name) as ArrSchema;\r\n        return <ArrComponent parentContext={context} arrSchema={arrSchema} children={children} />;\r\n    default:\r\n        break;\r\n    }\r\n\r\n    let typeWidget: TypeWidget;\r\n    let ui = context.getUiItem(name);\r\n    function getTypeWidget(t:DataType): TypeWidget {\r\n        switch(t) {\r\n        default: return TextWidget; \r\n        case 'id': return IdWidget;\r\n        case 'integer': return UpdownWidget;\r\n        case 'number': return NumberWidget; \r\n        case 'string': return TextWidget; \r\n        case 'date': return DateWidget; \r\n        case 'boolean': return CheckBoxWidget; \r\n        case 'button':\r\n        case 'submit': return ButtonWidget;\r\n        }\r\n    }\r\n    if (ui === undefined) { \r\n        typeWidget = getTypeWidget(type);\r\n    }\r\n    else {\r\n        let {widget:widgetType} = ui;\r\n        switch (widgetType) {\r\n        default:\r\n            if (widgetType !== undefined) {\r\n                let widgetFactory = widgetsFactory[widgetType];\r\n                typeWidget = widgetFactory.widget;\r\n            }\r\n            if (typeWidget === undefined) typeWidget = getTypeWidget(type);\r\n            break;\r\n        case 'custom':\r\n            typeWidget = (ui as UiCustom).WidgetClass;\r\n            break;\r\n        case 'group':\r\n            return <span>impletment group</span>;\r\n        }\r\n        //label = uiLabel || name;\r\n    }\r\n    \r\n    let {isRow, widgets} = context;\r\n    let widget = new typeWidget(context, itemSchema, fieldProps, children);\r\n    widgets[name] = widget;\r\n\r\n    return <widget.container />;\r\n    /*\r\n    if (isRow === false) {\r\n        let WidgetElement = observer(() => widget.container());\r\n        return <WidgetElement />;\r\n    }\r\n    else {\r\n        let widgetElement = widget.container();\r\n        return widgetElement;\r\n    }\r\n    */\r\n}\r\n\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiTextAreaItem } from '../../schema';\r\nimport { StringSchema } from '../../schema';\r\n\r\nexport class TextAreaWidget extends Widget {\r\n    protected itemSchema: StringSchema;\r\n    protected input: HTMLTextAreaElement;\r\n    protected ui: UiTextAreaItem;\r\n\r\n    protected setElementValue(value:any) {this.input.value = value}\r\n    protected onInputChange = (evt: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        this.setValue(evt.currentTarget.value);\r\n    }\r\n\r\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\r\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\r\n\r\n    render() {\r\n        let renderTemplet = this.renderTemplet();\r\n        if (renderTemplet !== undefined) return renderTemplet;\r\n        let cn = {};\r\n        if (this.hasError === true) {\r\n            cn['is-invalid'] = true;\r\n        }\r\n        else {\r\n            cn['required-item'] = this.itemSchema.required === true;\r\n        }\r\n        return <textarea ref={(input) => this.input=input} \r\n            className={classNames(this.className, cn)}\r\n            rows={this.ui && this.ui.rows}\r\n            maxLength={this.itemSchema.maxLength}\r\n            defaultValue={this.defaultValue} onChange={this.onInputChange} />\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { TextWidget } from './textWidget';\r\n\r\nexport class PasswordWidget extends TextWidget {\r\n    protected inputType = 'password';\r\n}\r\n\r\nexport class UrlWidget extends TextWidget {\r\n    protected inputType = 'url';\r\n}\r\n\r\nexport class EmailWidget extends TextWidget {\r\n    protected inputType = 'email';\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { UiRange } from '../../schema';\r\nimport { Widget } from './widget';\r\n\r\nexport class RangeWidget extends Widget {\r\n    protected inputType = 'range';\r\n    protected input: HTMLInputElement;\r\n    protected ui: UiRange;\r\n\r\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\r\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\r\n\r\n    render() {\r\n        let {min, max, step} = this.ui;\r\n        return <><input ref={input=>this.input = input}\r\n            className={classNames(this.className, 'form-control', 'w-min-6c')}\r\n            type={this.inputType}\r\n            defaultValue={this.defaultValue} \r\n            onChange={this.onInputChange}\r\n            max={max}\r\n            min={min}\r\n            step={step}\r\n            />\r\n        </>;\r\n    }\r\n}\r\n","import _ from 'lodash';\r\nimport { KeyValueRes, Res } from '../res';\r\n\r\nexport interface FormRes extends KeyValueRes {\r\n    required: string;\r\n    number: string;\r\n    integer: string;\r\n    min: string;\r\n    max: string;\r\n}\r\n\r\nexport const formRes:Res<FormRes> = {\r\n    _: {\r\n        required: 'required',\r\n        number: 'not valid number',\r\n        integer: 'not valid integer',\r\n        min: 'min value is ${min}',\r\n        max: 'max value is ${max}',\r\n    },\r\n    zh: {\r\n        _: {\r\n            required: '必须填',\r\n            number: '需要数字',\r\n            integer: '需要整数',\r\n            min: '不能小于${min}',\r\n            max: '不能大于${max}',\r\n        }\r\n    },\r\n}\r\n","import * as React from 'react';\r\nimport {observable, IReactionDisposer, autorun, isObservable} from 'mobx';\r\nimport classNames from 'classnames';\r\nimport { Schema, ItemSchema, ArrSchema } from '../schema';\r\nimport { UiSchema, TempletType } from '../schema';\r\nimport { factory } from './widgets';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport { ContextContainer, FormContext, Context, RowContext } from './context';\r\nimport { FormRes, formRes } from './formRes';\r\nimport { resLang } from '../res';\r\n\r\nexport type FormButtonClick = (name:string, context: Context) => Promise<any>;\r\nexport type InputEnter = (name:string, context: Context) => Promise<any>;\r\n\r\nexport interface FormProps {\r\n    className?: string;\r\n    schema: Schema;\r\n    uiSchema?: UiSchema;\r\n    formData?: any;\r\n    onButtonClick?: FormButtonClick;\r\n    onEnter?: InputEnter;\r\n    fieldLabelSize?: number;            // col-sm-2 for label\r\n    requiredFlag?: boolean;             // default=true\r\n    beforeShow?: (formContext:FormContext) => void;\r\n    res?: FormRes;\r\n\r\n    Container?: (content:JSX.Element) => JSX.Element;\r\n    FieldContainer?: (label:string|JSX.Element, content:JSX.Element) => JSX.Element;\r\n    FieldClass?: string;\r\n    ButtonClass?: string;\r\n}\r\n\r\nexport class Form extends React.Component<FormProps> {\r\n    readonly schema: Schema;\r\n    readonly itemSchemas: {[name:string]: ItemSchema};\r\n    readonly uiSchema: UiSchema;\r\n    readonly res?: FormRes;\r\n    protected formContext: FormContext;\r\n    //private content: any;\r\n    //private formData: any;\r\n    private disposer: IReactionDisposer;\r\n    //@observable \r\n    readonly data:any;\r\n\r\n    readonly Container: (content:JSX.Element) => JSX.Element;\r\n    readonly FieldContainer: (label:any, content:JSX.Element) => JSX.Element;\r\n    readonly FieldClass: string;\r\n    readonly ButtonClass: string;\r\n    //readonly ArrContainer: (label:any, content:JSX.Element) => JSX.Element;\r\n    //readonly RowContainer: (content:JSX.Element) => JSX.Element;\r\n    //readonly RowSeperator: JSX.Element;\r\n\r\n    constructor(props:FormProps) {\r\n        super(props);\r\n        let {schema, uiSchema, formData, \r\n            Container, FieldContainer, FieldClass, \r\n            ButtonClass, res,\r\n        } = props;\r\n        this.Container = Container || this.DefaultContainer;\r\n        this.FieldContainer = FieldContainer || this.DefaultFieldContainer;\r\n        this.FieldClass = FieldClass!==undefined && FieldClass!==''&&FieldClass!==null? FieldClass : this.DefaultFieldClass;\r\n        this.res = res || this.DefaultRes;\r\n        this.ButtonClass = ButtonClass || this.DefaultButtonClass;\r\n\r\n        this.schema = schema;\r\n        this.itemSchemas = {};\r\n        for (let itemSchema of this.schema) {\r\n            this.itemSchemas[itemSchema.name] = itemSchema;\r\n        }\r\n        this.uiSchema = uiSchema;\r\n\r\n        //this.formData = formData;\r\n        this.disposer = autorun(this.watch);\r\n        this.data = {};\r\n        // this.initRender();\r\n    }\r\n\r\n    private renderContent():any {\r\n        this.initData(this.props.formData);\r\n        let {children} = this.props;\r\n        if (children !== undefined) {\r\n            this.formContext = new FormContext(this, true);\r\n            return <>{children}</>;\r\n        }\r\n\r\n        let Templet: TempletType;\r\n        if (this.uiSchema !== undefined) {\r\n            Templet = this.uiSchema.Templet;\r\n        }\r\n        if (Templet !== undefined) {\r\n            this.formContext = new FormContext(this, true);\r\n            return typeof(Templet) === 'function'? Templet(this.data) : Templet;\r\n        }\r\n\r\n        this.formContext = new FormContext(this, false);\r\n        return <>{this.schema.map((v, index) => {\r\n            return <React.Fragment key={index}>{factory(this.formContext, v, children)}</React.Fragment>\r\n        })}</>;\r\n    }\r\n\r\n    private initData(formData: any) {\r\n        if (formData === undefined) formData = {};\r\n        for (let itemSchema of this.schema) {\r\n            this.initDataItem(itemSchema, this.data, formData);\r\n        }\r\n    }\r\n\r\n    private initDataItem(itemSchema: ItemSchema, data:any, formData: any):any {\r\n        let {name, type} = itemSchema;\r\n        if (type === 'button') return;\r\n        if (type !== 'arr') {\r\n            data[name] = formData[name];\r\n            return;\r\n        }\r\n\r\n        let arrItem:ArrSchema = itemSchema as ArrSchema;\r\n        let {arr:arrItems} = arrItem;\r\n        if (arrItems === undefined) return;\r\n        let arrDict = arrItem.itemSchemas = {};\r\n        for (let item of arrItems) {\r\n            arrDict[item.name] = item;\r\n        }\r\n        let val:any[] = formData[name];\r\n        if (val === undefined) val = [];\r\n        else if (Array.isArray(val) === false) val = [val];\r\n        let arr:any[] = [];\r\n        for (let row of val) {\r\n            let {$isSelected, $isDeleted} = row;\r\n            let r = {\r\n                $source: row,\r\n                $isSelected: $isSelected,\r\n                $isDeleted: $isDeleted,\r\n            };\r\n            for (let item of arrItems) {\r\n                this.initDataItem(item, r, row);\r\n                /*\r\n                let {name:nm} = item;\r\n                let v = row[nm];\r\n                if (v === undefined) v = null;\r\n                r[nm] = v;\r\n                */\r\n            }\r\n            arr.push(r);\r\n        }\r\n        // 如果没有observable，行删除标志点击不管用\r\n        // 不知道这里为什么要去掉observable。有可能会有别的问题\r\n        data[name] = observable(arr);\r\n        //data[name] = arr;\r\n        return;\r\n    }\r\n\r\n    private watch = () => {\r\n        let {formData} = this.props;\r\n        if (formData === undefined) return;\r\n        //this.initData(formData);\r\n        this.calcSelectOrDelete();\r\n    }\r\n    private calcSelectOrDelete() {\r\n        for (let itemSchema of this.schema) {\r\n            this.arrItemOperated(itemSchema);\r\n        }\r\n    }\r\n\r\n    private arrItemOperated(itemSchema: ItemSchema) {\r\n        let {name, type} = itemSchema;\r\n        if (type !== 'arr') return;\r\n        if (this.data === undefined) return;\r\n        let formArrVal = this.data[name];\r\n        if (formArrVal === undefined) return;\r\n        let {arr: arrItems} = itemSchema as ArrSchema;\r\n        for (let row of formArrVal) {\r\n            let {$source} = row;\r\n            if ($source === undefined) continue;\r\n            let {$isSelected, $isDeleted} = $source;\r\n            row.$isSelected = $isSelected;\r\n            row.$isDeleted = $isDeleted;\r\n            //console.log($isSelected, $isDeleted);\r\n            for (let item of arrItems) {\r\n                this.arrItemOperated(item);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let {beforeShow} = this.props;\r\n        if (beforeShow !== undefined) beforeShow(this.formContext);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.disposer !== undefined) this.disposer();\r\n    }\r\n\r\n    render() {\r\n        let content = this.renderContent();\r\n        return <ContextContainer.Provider value={this.formContext}>\r\n            <this.formContext.renderErrors />\r\n            {this.Container(content)}\r\n        </ContextContainer.Provider>;\r\n    }\r\n\r\n    async buttonClick(buttonName:string) {\r\n        this.formContext.checkRules()\r\n        if (this.formContext.hasError === true) return;\r\n\r\n        let {onButtonClick} = this.formContext.form.props;\r\n        if (onButtonClick === undefined) {\r\n            alert(`you should define form onButtonClick`);\r\n            return;\r\n        }\r\n        let ret = await onButtonClick(buttonName, this.formContext);\r\n        if (ret === undefined) return;\r\n        this.formContext.setError(buttonName, ret);\r\n    }\r\n\r\n    protected DefaultContainer = (content:JSX.Element): JSX.Element => {\r\n        return <form className={classNames(this.props.className)} onSubmit={e=>e.preventDefault()}>\r\n            {content}\r\n        </form>;\r\n    }\r\n    protected DefaultFieldContainer = (label:string|JSX.Element, content:JSX.Element): JSX.Element => {\r\n        let {fieldLabelSize} = this.props;\r\n\r\n        if (fieldLabelSize > 0) {\r\n            let labelView:any;\r\n            if (label === null) {\r\n                fieldLabelSize = 0;\r\n            }\r\n            else {\r\n                labelView = <label className={classNames('col-sm-' + fieldLabelSize, 'col-form-label')}>{label}</label>\r\n            }\r\n            let fieldCol = 'col-sm-' + (12 - fieldLabelSize);\r\n            return <div className=\"form-group row\">\r\n                {labelView}\r\n                <div className={fieldCol}>{content}</div>\r\n            </div>;\r\n        }\r\n        return <div className=\"form-group\">\r\n            {label===null? null:<label className=\"col-form-label\">{label}</label>}\r\n            {content}\r\n        </div>;\r\n    }\r\n    protected DefaultFieldClass:string = undefined;\r\n    protected DefaultButtonClass = 'text-center py-2';\r\n    protected DefaultRes:FormRes = resLang<FormRes>(formRes);\r\n\r\n    ArrContainer = (label:any, content:JSX.Element): JSX.Element => {\r\n        return <div>\r\n            <div className={classNames('small text-muted text-center bg-light py-1 px-3 mt-4 mb-1')}>{label}</div>\r\n            {content}\r\n        </div>;\r\n    }\r\n    RowContainer = (content:JSX.Element): JSX.Element => {\r\n        let cn = classNames({\r\n            'py-3': true\r\n        });\r\n        return <div className={cn}>{content}</div>\r\n    }\r\n    RowSeperator = <div className=\"border border-gray border-top\" />;\r\n}\r\n","import * as React from 'react';\r\nimport { factory } from './widgets';\r\nimport { ContextContainer, Context } from './context';\r\n\r\nexport interface FieldProps {\r\n    name: string;\r\n}\r\n\r\nexport class FormField extends React.Component<FieldProps> {\r\n    static contextType = ContextContainer;\r\n    render() {\r\n        let {name, children } = this.props;\r\n        let context:Context = this.context;\r\n        if (context === undefined) return <span className=\"text-danger\">!only in Form!</span>;\r\n        let itemSchema = context.getItemSchema(name);\r\n        let content = factory(context, itemSchema, children, this.props);\r\n        if (content === undefined) {\r\n            return <span className=\"text-danger\">!!{name} is not defined!!</span>;\r\n        }\r\n        return content;\r\n    }\r\n}\r\n","export {Form} from './form';\r\nexport {FormField} from './field';\r\nexport {Context, RowContext} from './context';\r\nexport * from './widgets';\r\n","import * as React from 'react';\r\nimport { IObservableArray, computed } from 'mobx';\r\nimport { PageItems } from '../../pageItems';\r\nimport {List} from './index';\r\n\r\nexport abstract class ListBase {\r\n    protected list: List;\r\n    constructor(list: List) {\r\n        this.list = list;\r\n    }\r\n    get isPaged():boolean {\r\n        let items = this.list.props.items;\r\n        return (items !== null && items !== undefined && Array.isArray(items) === false);\r\n    }\r\n    get items():any[]|IObservableArray<any> {\r\n        let items = this.list.props.items;\r\n        if (items === null) return null;\r\n        if (items === undefined) return undefined;\r\n        if (Array.isArray(items) === true)\r\n            return items as IObservableArray<any>;\r\n        else\r\n            return (items as PageItems<any>).items;\r\n    }\r\n    @computed get loading():boolean {\r\n        let items = this.list.props.items;\r\n        if (items === null) return false;\r\n        if (items === undefined) return true;\r\n        let pageItems = items as PageItems<any>;\r\n        if (pageItems.items === undefined) return false;\r\n        return pageItems.loading;\r\n    }\r\n    get selectedItems():any[] { return; }\r\n    updateProps(nextProps:any) {}\r\n    abstract render(item:any, index:number):JSX.Element;\r\n    protected renderContent(item:any, index:number) {\r\n        let {render} = this.list.props.item;\r\n        if (render === undefined) return <div className=\"px-3 py-2\">{JSON.stringify(item)}</div>;\r\n        return render(item, index);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {ListBase} from './base';\r\n\r\nexport class Clickable extends ListBase {\r\n    render(item:any, index:number):JSX.Element {\r\n        let {className, key, onClick} = this.list.props.item;\r\n        return <li key={key===undefined?index:key(item)} className={classNames('va-row-clickable', className)} onClick={()=>onClick && onClick(item)}>\r\n            {this.renderContent(item, index)}\r\n        </li>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {ListBase} from './base';\r\nimport { uid } from '../../uid';\r\n\r\nexport class Static extends ListBase {\r\n    render(item:any, index:number):JSX.Element {\r\n        let {className, key, render} = this.list.props.item;\r\n        if (typeof item === 'string') {\r\n            let cn = classNames('va-list-gap', 'px-3', 'pt-1');\r\n            return <li key={uid()} className={cn}>{item}</li>;\r\n        }\r\n        return <li key={key===undefined?index:key(item)} className={classNames(className)}>\r\n            {this.renderContent(item, index)}\r\n        </li>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable, computed, IObservableArray} from 'mobx';\r\nimport classNames from 'classnames';\r\nimport {ListBase} from './base';\r\nimport {uid} from '../../uid';\r\nimport { PageItems } from '../../pageItems';\r\n\r\nexport interface SelectableItem {\r\n    selected: boolean;\r\n    item: any;\r\n    labelId: string;\r\n}\r\n\r\nexport class Selectable extends ListBase {\r\n    private _items: SelectableItem[];\r\n    private _selectedItems: any[];\r\n    private input: HTMLInputElement;\r\n    private buildItems() {\r\n        console.log('buildItems in selectable.tsx');\r\n        let {items, selectedItems, compare} = this.list.props;\r\n        let itemsArray:any[] | IObservableArray<any>;\r\n        if (items === undefined) {\r\n            return this._items = undefined;\r\n        }\r\n        if (items === null) {\r\n            return this._items = null;\r\n        }\r\n        if (Array.isArray(items) === true) {\r\n            itemsArray = items as any;\r\n        }\r\n        else {\r\n            itemsArray = (items as PageItems<any>).items;\r\n        }\r\n        //let items = this.items;\r\n        this._selectedItems = selectedItems;\r\n        if (selectedItems === undefined) {\r\n            return this._items = itemsArray.map(v => {\r\n                return {\r\n                    selected:false, \r\n                    item:v, \r\n                    labelId:uid()\r\n                };\r\n            });\r\n        }\r\n        if (compare === undefined) {\r\n            return this._items = itemsArray.map(v => {\r\n                return {\r\n                    selected:selectedItems.find(si => si === v) !== undefined, \r\n                    item:v, \r\n                    labelId:uid()\r\n                };\r\n            });\r\n        }\r\n        return this._items = itemsArray.map(v => {\r\n            return {\r\n                selected:selectedItems.find(si => compare(v, si)) !== undefined, \r\n                item:v, \r\n                labelId:uid()\r\n            };\r\n        });\r\n    }\r\n    @computed get items() {\r\n        //if (this._items === undefined) \r\n        this.buildItems();\r\n        return this._items;\r\n    }\r\n    updateProps(nextProps:any) {\r\n        if (nextProps.selectedItems === this._selectedItems) return;\r\n        this.buildItems();\r\n    }\r\n    private onSelect(item:SelectableItem, selected:boolean) {\r\n        item.selected = selected;\r\n        let anySelected = this._items.some(v => v.selected);\r\n        this.list.props.item.onSelect(item.item, selected, anySelected);\r\n    }\r\n    \r\n    get selectedItems():any[] {\r\n        return this._items.filter(v => v.selected === true).map(v => v.item);\r\n    }\r\n    /*\r\n    set selectedItems(value: any[]) {\r\n        if (value === undefined) return;\r\n        if (this._items === undefined) return;\r\n        let sLen = this._items.length;\r\n        let list = value.slice();\r\n        for (let n=0; n<sLen; n++) {\r\n            let sItem = this._items[n];\r\n            let len = list.length;\r\n            if (len === 0) break;\r\n            let item = sItem.item;\r\n            for (let i=0; i<len; i++) {\r\n                let v = list[i];\r\n                if (item === v) {\r\n                    sItem.selected = true;\r\n                    value.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n        };\r\n    }\r\n    */\r\n    //w-100 mb-0 pl-3\r\n    //m-0 w-100\r\n    render(item:SelectableItem, index:number):JSX.Element {\r\n        let {className, key, render, onSelect} = this.list.props.item;\r\n        let {labelId, selected} = item;\r\n        return <li key={key===undefined?index:key(item)} className={classNames(className)}>\r\n            <div className=\"d-flex align-items-center px-3\">\r\n                <input ref={input=>{\r\n                        if (!input) return;\r\n                        this.input = input; input.checked = selected;\r\n                    }}\r\n                    className=\"\" type=\"checkbox\" value=\"\" id={labelId}\r\n                    defaultChecked={selected}\r\n                    onChange={(e)=>{\r\n                        this.onSelect(item, e.target.checked)} \r\n                    }/>\r\n                <label className=\"\" style={{flex:1, marginBottom:0}} htmlFor={labelId}>\r\n                    {this.renderContent(item.item, index)}\r\n                </label>\r\n            </div>\r\n        </li>\r\n    }\r\n}\r\n/*\r\n<label>\r\n<label className=\"custom-control custom-checkbox\">\r\n    <input type='checkbox' className=\"custom-control-input\"\r\n        //checked={selected}\r\n        onChange={(e)=>this.onSelect(item, e.target.checked)} />\r\n    <span className=\"custom-control-indicator\" />\r\n</label>\r\n{this.renderContent(item.item, index)}\r\n</label>\r\n*/\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {PageItems} from '../../pageItems';\r\nimport {ListBase} from './base';\r\nimport {Clickable} from './clickable';\r\nimport {Static} from './static';\r\nimport {Selectable} from './selectable';\r\nimport '../../css/va-list.css';\r\nimport { IObservableArray } from 'mobx';\r\n\r\ntype StaticRow = string|JSX.Element|(()=>string|JSX.Element);\r\n\r\nexport interface ListProps {\r\n    className?: string|string[];\r\n    items: any[] | IObservableArray<any> | PageItems<any>;\r\n    item: {\r\n        className?: string|string[];\r\n        render?: (item:any, index:number) => JSX.Element;\r\n        onSelect?: (item:any, isSelected:boolean, anySelected:boolean)=>void;\r\n        onClick?: (item:any)=>void;\r\n        key?: (item:any)=>string|number;\r\n    };\r\n    compare?:(item:any, selectItem)=>boolean;\r\n    selectedItems?:any[];\r\n    header?: StaticRow;\r\n    footer?: StaticRow;\r\n    before?: StaticRow;\r\n    loading?: StaticRow;\r\n    none?: StaticRow;\r\n}\r\n\r\n@observer\r\nexport class List extends React.Component<ListProps> {\r\n    private listBase: ListBase;\r\n    constructor(props:ListProps) {\r\n        super(props);\r\n        let {item} = this.props;\r\n        let {onClick, onSelect} = item;\r\n        if (onSelect !== undefined)\r\n            this.listBase = new Selectable(this);\r\n        else if (onClick !== undefined)\r\n            this.listBase = new Clickable(this);\r\n        else\r\n            this.listBase = new Static(this);\r\n    }\r\n    _$scroll = (direct: 'top'|'bottom') => {\r\n        console.log('############### items scroll to ' + direct);\r\n    }\r\n    componentWillUpdate(nextProps:ListProps, nextState, nextContext) {\r\n        this.listBase.updateProps(nextProps);\r\n    }\r\n    get selectedItems():any[] {\r\n        return this.listBase.selectedItems;\r\n    }\r\n    render() {\r\n        let {className, header, footer, before, loading, none, item, selectedItems} = this.props;\r\n        if (before === undefined) before = 'before';\r\n        if (loading === undefined) loading = 'loading';\r\n        if (none === undefined) none = 'none';        \r\n        //this.listBase.selectedItems = selectedItems;\r\n        let {isPaged, items, loading:isLoading} = this.listBase;\r\n        function staticRow(row:StaticRow, type:string) {\r\n            if (!row) return;\r\n            switch (typeof row) {\r\n                default:\r\n                case 'string': return <li className={\"va-list-\"+type}>{row}</li>;\r\n                case 'function': return <li className={\"va-list-\"+type}>{(row as ()=>string|JSX.Element)()}</li>;\r\n                case 'object': return <li>{row}</li>\r\n            } \r\n        }\r\n        let content:any;\r\n        if (items === null)\r\n            content = staticRow(before, 'before');\r\n        else if (items === undefined)\r\n            content = staticRow(loading, 'loading');\r\n        else if (items.length === 0)\r\n            content = staticRow(none, 'none');\r\n        else {\r\n            content = items.map((item, index) => {\r\n                return this.listBase.render(item, index);\r\n            });\r\n        }\r\n        return <ul className={classNames('va-list', className)}>\r\n            {staticRow(header, 'header')}\r\n            {content}\r\n            {staticRow(footer, 'footer')}\r\n        </ul>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { ItemEdit } from './itemEdit';\r\n\r\nexport class StringItemEdit extends ItemEdit {\r\n    protected uiItem: UiTextItem;\r\n    protected async internalStart():Promise<any> {\r\n        return new Promise<any>((resolve, reject) => {\r\n            let element = React.createElement(this.page, {resolve:resolve, reject:reject});\r\n            nav.push(element,reject);\r\n        });\r\n    }\r\n\r\n    private onChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.newValue = evt.target.value;\r\n        let preValue = this.value;\r\n        this.isChanged = (this.newValue != preValue);\r\n    }\r\n\r\n    private onBlur = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.verifyValue();\r\n    }\r\n\r\n    private onFocus = () => {\r\n        this.error = undefined;\r\n    }\r\n\r\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\r\n        let {resolve, reject} = props;\r\n        let right = <button\r\n            className=\"btn btn-sm btn-success\"\r\n            disabled={!this.isChanged}\r\n            onClick={()=>{\r\n                this.verifyValue();\r\n                if (this.error === undefined) resolve(this.newValue);\r\n            }}>保存</button>;\r\n        return <Page header={'更改' + this.label} right={right}>\r\n            <div className=\"m-3\">\r\n                <input type=\"text\" \r\n                    onChange={this.onChange}\r\n                    onBlur={this.onBlur}\r\n                    onFocus={this.onFocus}\r\n                    className=\"form-control\" \r\n                    defaultValue={this.value} />\r\n                {\r\n                    this.uiItem && <div className=\"small muted m-2\">{this.uiItem.placeholder}</div>\r\n                }\r\n                {this.error && <div className=\"text-danger\">{this.error}</div>}\r\n            </div>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem, UiRadio } from '../schema';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { ItemEdit } from './itemEdit';\r\n\r\nexport class RadioItemEdit extends ItemEdit {\r\n    protected uiItem: UiRadio;\r\n    protected async internalStart():Promise<any> {\r\n        return new Promise<any>((resolve, reject) => {\r\n            let element = React.createElement(this.page, {resolve:resolve, reject:reject});\r\n            nav.push(element,reject);\r\n        });\r\n    }\r\n\r\n    private onChange = (value: any) => {\r\n        this.newValue = value;\r\n        let preValue = this.value;\r\n        this.isChanged = (this.newValue != preValue);\r\n    }\r\n\r\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\r\n        let {resolve, reject} = props;\r\n        let {name} = this.itemSchema;\r\n        let {list, defaultValue} = this.uiItem;\r\n        let right = <button\r\n            className=\"btn btn-sm btn-success\"\r\n            disabled={!this.isChanged}\r\n            onClick={()=>{\r\n                this.verifyValue();\r\n                if (this.error === undefined) resolve(this.newValue);\r\n            }}>保存</button>;\r\n        let content = list?\r\n            list.map((v, index:number) => {\r\n                let {title, value} = v;\r\n                return <label key={index} className=\"px-3 py-2 cursor-pointer\">\r\n                    <input name={name} type=\"radio\" value={value} \r\n                        onClick={()=>this.onChange(value)} \r\n                        defaultChecked={value === defaultValue} /> {title || value} &nbsp;\r\n                </label>;\r\n            })\r\n            :\r\n            <>no list defined</>;\r\n        return <Page header={'更改' + this.label} right={right}>\r\n            <div className=\"m-3\">{content}</div>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem, UiSelect } from '../schema';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { ItemEdit } from './itemEdit';\r\n\r\nexport class SelectItemEdit extends ItemEdit {\r\n    protected uiItem: UiSelect;\r\n    protected async internalStart():Promise<any> {\r\n        return new Promise<any>((resolve, reject) => {\r\n            let element = React.createElement(this.page, {resolve:resolve, reject:reject});\r\n            nav.push(element,reject);\r\n        });\r\n    }\r\n\r\n    private onChange = (value:any) => {\r\n        this.newValue = value;\r\n        let preValue = this.value;\r\n        this.isChanged = (this.newValue != preValue);\r\n    }\r\n\r\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\r\n        let {resolve, reject} = props;\r\n        let {list} = this.uiItem;\r\n        let content = list?\r\n            list.map((v, index:number) => {\r\n                let {title, value} = v;\r\n                return <div key={index} className=\"px-3 py-2 cursor-pointer bg-white mb-1\" onClick={()=>{this.onChange(value); resolve(this.newValue)}}>\r\n                    {title || value}\r\n                </div>;\r\n            })\r\n            :\r\n            <>no list defined</>;\r\n        return <Page header={'更改' + this.label}>\r\n            <div className=\"my-3\">\r\n                {content}\r\n            </div>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\r\nimport { observer } from 'mobx-react';\r\nimport { ItemEdit } from './itemEdit';\r\nimport { StringItemEdit } from './stringItemEdit';\r\nimport { ImageItemEdit } from './imageItemEdit';\r\nimport { Image } from '../image';\r\nimport { RadioItemEdit } from './radioItemEdit';\r\nimport { SelectItemEdit } from './selectItemEdit';\r\nimport { UiSelectBase } from '../form/uiSchema';\r\n\r\nexport interface EditProps {\r\n    className?: string;\r\n    schema: Schema;\r\n    data: any;\r\n    onItemClick?: (itemSchema: ItemSchema, uiItem: UiItem, value: any) => Promise<void>;\r\n    onItemChanged?: (itemSchema: ItemSchema, newValue:any, preValue:any) => Promise<void>;\r\n    stopEdit?: boolean;\r\n    uiSchema?: UiSchema;\r\n    sepClassName?: string;\r\n    topBorderClassName?: string;\r\n    bottomBorderClassName?: string;\r\n    rowContainerClassName?: string;\r\n}\r\n\r\n@observer\r\nexport class Edit extends React.Component<EditProps> {\r\n    private defaultSepClassName = 'border-top edit-sep-light-gray';\r\n    private defaultRowContainerClassName = 'd-flex px-3 py-2 bg-white align-items-center';\r\n    private topBorder:JSX.Element;\r\n    private bottomBorder:JSX.Element;\r\n    private rowContainerClassName?: string;\r\n    private sep:JSX.Element;\r\n    private uiSchema: {[name:string]: UiItem};\r\n\r\n    constructor(props: EditProps) {\r\n        super(props);\r\n        let {topBorderClassName, bottomBorderClassName, sepClassName, rowContainerClassName, uiSchema, stopEdit} = props;\r\n        this.topBorder = <div className={topBorderClassName || this.defaultSepClassName} />;\r\n        this.bottomBorder = <div className={bottomBorderClassName || this.defaultSepClassName} />;\r\n        this.rowContainerClassName = rowContainerClassName || this.defaultRowContainerClassName;\r\n        if (stopEdit !== true) this.rowContainerClassName += ' cursor-pointer';\r\n        this.sep = <div className={sepClassName || this.defaultSepClassName} />;\r\n        this.uiSchema = (uiSchema && uiSchema.items) || {};\r\n    }\r\n\r\n    render() {\r\n        let elItems:JSX.Element[] = [];\r\n        let {schema} = this.props;\r\n        let len = schema.length;\r\n\r\n        elItems.push(this.topBorder);\r\n        for (let i=0; i<len; i++) {\r\n            let itemSchema = schema[i];\r\n            if (i>0) elItems.push(this.sep);\r\n            let value = this.props.data[itemSchema.name];\r\n            elItems.push(this.renderRow(itemSchema, value));\r\n        }\r\n        elItems.push(this.bottomBorder);\r\n\r\n        return <div>\r\n            {elItems.map((v, index) => <React.Fragment key={index}>{v}</React.Fragment>)}\r\n        </div>;\r\n    }\r\n\r\n    private renderRow = (itemSchema: ItemSchema, value:any):JSX.Element => {\r\n        let {name, type, required} = itemSchema;\r\n        let divValue:any;\r\n        let uiItem = this.uiSchema[name];\r\n        let label:string = (uiItem && uiItem.label) || name;\r\n        //let value:any = this.props.data[name];\r\n        if (uiItem !== undefined && value) {\r\n            switch (uiItem.widget) {\r\n                case 'radio':\r\n                case 'select':\r\n                    let {list} = uiItem as UiSelectBase;\r\n                    divValue = <b>{list.find(v => v.value === value).title}</b>;\r\n                    break;\r\n            }\r\n        }\r\n        if (divValue === undefined) {\r\n            switch (type) {\r\n                default:\r\n                    divValue = value? <b>{value}</b> : <small className=\"text-muted\">(无)</small>;\r\n                    break;\r\n                case 'image':\r\n                    divValue = <Image className=\"w-4c h-4c\" src={value} />;\r\n                    break;\r\n            }\r\n        }\r\n        let requireFlag = required===true && <span className=\"text-danger\">*</span>;\r\n        return <div className={this.rowContainerClassName} onClick={async ()=>await this.rowClick(itemSchema, uiItem, label, value)}>\r\n            <div className=\"w-6c\">{label} {requireFlag}</div>\r\n            <div className=\"flex-fill d-flex justify-content-end\">{divValue}</div>\r\n            {this.props.stopEdit!==true && <div className=\"w-2c text-right\"><i className=\"fa fa-chevron-right\" /></div>}\r\n        </div>;\r\n    };\r\n\r\n    private rowClick = async (itemSchema: ItemSchema, uiItem: UiItem, label:string, value: any) => {\r\n        let {onItemChanged, onItemClick, stopEdit} = this.props;\r\n        if (stopEdit === true) return;\r\n        let changeValue:any;\r\n        if (onItemClick !== undefined) {\r\n            await onItemClick(itemSchema, uiItem, value);\r\n            return;\r\n        }\r\n        let itemEdit:ItemEdit = createItemEdit(itemSchema, uiItem, label, value);\r\n        if (itemEdit === undefined) {\r\n            alert('undefined: let itemEdit:ItemEdit = createItemEdit(itemSchema, uiItem, label, value);');\r\n            return;\r\n        }\r\n        try {\r\n            changeValue = await itemEdit.start();\r\n            if (changeValue != value) {\r\n                if (onItemChanged === undefined) {\r\n                    alert(`${itemSchema.name} value changed, new: ${changeValue}, pre: ${value}`);\r\n                    this.props.data[itemSchema.name] = changeValue;\r\n                }\r\n                else {\r\n                    await onItemChanged(itemSchema, changeValue, value);\r\n                }\r\n            }\r\n            await itemEdit.end();\r\n        }\r\n        catch (err) {\r\n            // 如果直接back，会触发reject，就到这里了\r\n            console.log('no value changed');\r\n        }\r\n    }\r\n}\r\n\r\nfunction createItemEdit(itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any):ItemEdit {\r\n    let itemEdit: new (itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any) => ItemEdit;\r\n    if (uiItem !== undefined) {\r\n        switch (uiItem.widget) {\r\n            default: break;\r\n            case 'text': itemEdit = StringItemEdit; break;\r\n            case 'image': itemEdit = ImageItemEdit; break;\r\n            case 'radio': itemEdit = RadioItemEdit; break;\r\n            case 'select': itemEdit = SelectItemEdit; break;\r\n        }\r\n    }\r\n    if (itemEdit === undefined) {\r\n        switch (itemSchema.type) {\r\n            case 'string': itemEdit = StringItemEdit; break;\r\n            case 'image': itemEdit = ImageItemEdit; break;\r\n        }\r\n    }\r\n    if (itemEdit === undefined) return;\r\n    return new itemEdit(itemSchema, uiItem, label, value);\r\n}\r\n","export * from './edit';\r\n","import * as React from 'react';\r\nimport className from 'classnames';\r\nimport {PropGridProps} from './PropGrid';\r\nimport {LabeledProp, StringProp, NumberProp, ListProp, ComponentProp} from './propView';\r\n\r\nexport abstract class PropRow {\r\n    setValues(values: any) {}\r\n    abstract render(key:string): any;\r\n}\r\n\r\nexport class PropBorder extends PropRow {\r\n    render(key:string): JSX.Element {\r\n        return <div key={'_b_' + key} className=\"\">\r\n            <div className=\"w-100\">\r\n                <div style={{borderTop: '1px solid #f0f0f0'}} />\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class PropGap extends PropRow {\r\n    private param: string;\r\n    constructor(param?: string) {\r\n        super();\r\n        this.param = param;\r\n    }\r\n    render(key:string): JSX.Element {\r\n        let w: string;\r\n        switch (this.param) {\r\n            default: w = 'py-2'; break;\r\n            case '=': w = 'py-1'; break;\r\n            case '-': w = 'pb-1'; break;\r\n        }\r\n        let cn = className(w);\r\n        return <div key={'_g_' + key} className={cn} style={{backgroundColor: '#f0f0f0'}} />;\r\n    }\r\n}\r\n\r\nconst valueAlignStart = 'justify-content-start';\r\nconst valueAlignCenter = 'justify-content-center';\r\nconst valueAlignEnd = 'justify-content-end';\r\nexport abstract class LabeledPropRow extends PropRow {\r\n    protected gridProps: PropGridProps;\r\n    protected prop: LabeledProp;\r\n    protected content: any;\r\n    protected col: string;\r\n    //protected values: any;\r\n    constructor(gridProps:PropGridProps, prop: LabeledProp) {\r\n        super();\r\n        this.gridProps = gridProps;\r\n        this.prop = prop;\r\n        this.col = gridProps.labelFixLeft === true? 'col' : 'col-sm';\r\n        //this.values = values;\r\n    }\r\n    render(key:string):any {\r\n        let {onClick, bk} = this.prop;\r\n        let cn = className({\r\n            \"cursor-pointer\": onClick !== undefined,\r\n            \"bg-white\": bk === undefined, \r\n            \"row\": true\r\n        });\r\n        return <div key={key} className={cn} onClick={onClick}>\r\n            {this.renderLabel()}\r\n            {this.renderProp()}\r\n        </div>;\r\n    }\r\n    protected renderLabel():any {\r\n        let {label} = this.prop;\r\n        if (label === undefined) return null;\r\n        return <label className={this.col + '-3 col-form-label'}>\r\n            {label}\r\n        </label>;\r\n    }\r\n    protected renderProp():any {\r\n        let {label} = this.prop;\r\n        let align, vAlign;\r\n        switch (this.gridProps.alignValue) {\r\n            case 'left': align = valueAlignStart; break;\r\n            case 'center': align = valueAlignCenter; break;\r\n            case 'right': align = valueAlignEnd; break;\r\n        }\r\n        switch (this.prop.vAlign) {\r\n            case 'top': vAlign = 'align-items-start'; break;\r\n            default:\r\n            case 'center': vAlign = 'align-items-center'; break;\r\n            case 'bottom': vAlign = 'align-items-end'; break;\r\n            case 'stretch': vAlign = 'align-items-stretch'; break;\r\n        }\r\n        let col:string = this.col + (label===undefined? '-12':'-9');\r\n        let cn = className(align, vAlign, col, 'd-flex');\r\n        return <div className={cn}>\r\n            {this.renderPropBody()}\r\n        </div>;\r\n    }\r\n    protected renderPropBody():any {\r\n        return <div className=\"form-control-plaintext\">\r\n            {this.renderPropContent()}\r\n        </div>;\r\n    }\r\n    protected renderPropContent():any {\r\n        return this.content;\r\n    }\r\n}\r\n\r\nexport class StringPropRow extends LabeledPropRow {\r\n    protected prop: StringProp;\r\n    setValues(values:any) {\r\n        if (values === undefined) this.content = undefined;\r\n        else this.content = values[this.prop.name];\r\n    }\r\n}\r\n\r\nexport class NumberPropRow extends LabeledPropRow {\r\n    protected prop: NumberProp;\r\n    setValues(values:any) {\r\n        if (values === undefined) this.content = undefined;\r\n        else this.content = values[this.prop.name];\r\n    }\r\n}\r\n\r\nexport class ListPropRow extends LabeledPropRow {\r\n    protected prop: ListProp;\r\n    setValues(values:any) {\r\n        if (values === undefined) this.content = undefined;\r\n        else {\r\n            let list = this.prop.list;\r\n            if (typeof list === 'string') this.content = values[list];\r\n            else this.content = undefined;\r\n        }\r\n    }\r\n    protected renderPropBody() {\r\n        let {list, row} = this.prop;\r\n        let items:any[] = typeof list === 'string'? this.content : list;\r\n        if (items === undefined) return <div/>;\r\n        // new row(item)\r\n        return <div className=\"w-100\">\r\n            {\r\n                items.map((item, index) => <React.Fragment key={index}>\r\n                    {index===0? null: <div style={{width:'100%', borderBottom:'1px solid #f0f0f0'}} />}\r\n                    {React.createElement(row, item)}\r\n                </React.Fragment>)\r\n            }\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class ComponentPropRow extends LabeledPropRow {\r\n    protected prop: ComponentProp;\r\n    protected renderPropBody() {\r\n        let {component} = this.prop;\r\n        return component;\r\n    }\r\n    protected renderProp():any {\r\n        let {label, full} = this.prop;\r\n        let align, vAlign;\r\n        switch (this.gridProps.alignValue) {\r\n            case 'left': align = valueAlignStart; break;\r\n            case 'center': align = valueAlignCenter; break;\r\n            case 'right': align = valueAlignEnd; break;\r\n        }\r\n        switch (this.prop.vAlign) {\r\n            case 'top': vAlign = 'align-items-start'; break;\r\n            default:\r\n            case 'center': vAlign = 'align-items-center'; break;\r\n            case 'bottom': vAlign = 'align-items-end'; break;\r\n            case 'stretch': vAlign = 'align-items-stretch'; break;\r\n        }\r\n        let col:string;\r\n        if (full !== true)\r\n            col = this.col + (label===undefined? '-12':'-9');\r\n        else\r\n            col = 'w-100';\r\n        let cn = className(align, vAlign, col, 'd-flex');\r\n        return <div className={cn}>\r\n            {this.renderPropBody()}\r\n        </div>;\r\n    }\r\n}\r\n","import { PropGridProps } from './PropGrid';\r\nimport {\r\n    PropRow, PropBorder, PropGap, \r\n    StringPropRow, NumberPropRow, ListPropRow, ComponentPropRow\r\n} from './row';\r\n\r\nexport interface Format {\r\n\r\n}\r\n\r\nexport interface PropBase {\r\n    onClick?: () => void;\r\n}\r\n\r\nexport interface LabeledProp extends PropBase {\r\n    label?: string;\r\n    bk?: string;\r\n    vAlign?: 'top' | 'bottom' | 'center' | 'stretch';\r\n}\r\n\r\nexport interface StringProp extends LabeledProp {\r\n    type: 'string';\r\n    name: string;\r\n}\r\n\r\nexport interface NumberProp extends LabeledProp {\r\n    type: 'number';\r\n    name: string;\r\n}\r\n\r\nexport interface FormatProp extends LabeledProp {\r\n    type: 'format';\r\n    format: Format;\r\n}\r\n\r\nexport interface ListProp extends LabeledProp {\r\n    type: 'list';\r\n    list: string | any[];  // string 表示名字，否则就是值\r\n    row: new (props: any) => React.Component;\r\n}\r\n\r\nexport interface ComponentProp extends LabeledProp {\r\n    type: 'component';\r\n    full?: boolean;\r\n    component: any; //JSX.Element;\r\n}\r\n\r\nexport type Prop = StringProp | NumberProp | FormatProp | ListProp | ComponentProp | string;\r\n\r\nexport class PropView {\r\n    private gridProps: PropGridProps\r\n    private props: Prop[];\r\n    //private values:any;\r\n    private rows: PropRow[];\r\n\r\n    constructor(gridProps: PropGridProps, props: Prop[]) {\r\n        this.gridProps = gridProps;\r\n        this.props = props;\r\n        //this.values = values;\r\n        this.buildRows();\r\n    }\r\n\r\n    private buildRows() {\r\n        this.rows = [];\r\n        let isGap: boolean = true;\r\n        for (let prop of this.props) {\r\n            if (typeof prop === 'string') {\r\n                this.rows.push(new PropGap(prop));\r\n                isGap = true;\r\n            }\r\n            else {\r\n                if (!isGap) this.rows.push(new PropBorder());\r\n                let row;\r\n                switch (prop.type) {\r\n                    default: continue;\r\n                    case 'string': row = new StringPropRow(this.gridProps, prop); break;\r\n                    case 'number': row = new NumberPropRow(this.gridProps, prop); break;\r\n                    case 'list': row = new ListPropRow(this.gridProps, prop); break;\r\n                    case 'component': row = new ComponentPropRow(this.gridProps, prop); break;\r\n                }\r\n                this.rows.push(row);\r\n                isGap = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    setValues(values: any) {\r\n        for (let r of this.rows) r.setValues(values);\r\n    }\r\n\r\n    render() {\r\n        return this.rows.map((row, index) => row.render(String(index)));\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {Prop, PropView} from './propView';\r\n\r\nexport interface PropGridProps {\r\n    className?: string;\r\n    rows: Prop[];\r\n    values: any;\r\n    alignValue?: 'left'|'center'|'right';\r\n    labelFixLeft?: boolean;\r\n}\r\n\r\n@observer\r\nexport class PropGrid extends React.Component<PropGridProps> {\r\n    render() {\r\n        let {className, rows, values} = this.props;\r\n        let propView = new PropView(this.props, rows);\r\n        propView.setValues(values);\r\n        let cn = classNames('container-fluid', className);\r\n        return <div className={cn}>\r\n            {propView.render()}\r\n        </div>;\r\n    }\r\n}\r\n","export * from './propView';\r\nexport * from './row';\r\nexport * from './PropGrid';\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport { IObservableValue } from 'mobx/lib/internal';\r\n\r\nexport type TabCaption = (selected:boolean) => JSX.Element;\r\n\r\nexport interface TabProp {\r\n    name: string;\r\n    caption: TabCaption;\r\n    content: () => JSX.Element;\r\n    notify?: IObservableValue<number>;\r\n    load?: () => Promise<void>;\r\n}\r\n\r\nexport interface TabsProps {\r\n    tabs: TabProp[];\r\n    size?: 'sm' | 'lg' | 'md';\r\n    tabBack?: string;\r\n    contentBack?: string;\r\n    sep?: string;\r\n    selected?: string;\r\n}\r\n\r\nclass Tab {\r\n    name: string;\r\n    @observable selected: boolean;\r\n    caption: TabCaption;\r\n    contentBuilder: ()=>JSX.Element;\r\n    notify: IObservableValue<number>;\r\n    load?: () => Promise<void>;\r\n\r\n    private _content: JSX.Element;\r\n    get content(): JSX.Element {\r\n        if (this.selected !== true) return this._content;\r\n        if (this._content !== undefined) return this._content;\r\n        return this._content = this.contentBuilder();\r\n    }\r\n    async start() {\r\n        if (this._content !== undefined) return;\r\n        if (this.load === undefined) return;\r\n        await this.load();\r\n    }\r\n}\r\n\r\nexport const TabCaptionComponent = (label:string, icon:string, color:string) => <div \r\n    className={'d-flex justify-content-center align-items-center flex-column cursor-pointer ' + color}>\r\n    <div><i className={'fa fa-lg fa-' + icon} /></div>\r\n    <small>{label}</small>\r\n</div>;\r\n\r\n@observer export class Tabs extends React.Component<TabsProps> {\r\n    private size: string;\r\n    private tabBack: string;\r\n    private contentBack: string;\r\n    private sep: string;\r\n    @observable private selectedTab: Tab;\r\n    @observable private tabs: Tab[] = [];\r\n\r\n    constructor(props: TabsProps) {\r\n        super(props);\r\n        let {size, tabs, tabBack, contentBack, sep, selected} = this.props;\r\n        this.size = size || 'md';\r\n        this.tabs.push(...tabs.map(v => {\r\n                let tab = new Tab();\r\n                tab.name = v.name;\r\n                tab.selected = false;\r\n                tab.caption = v.caption;\r\n                tab.contentBuilder = v.content;\r\n                tab.notify = v.notify;\r\n                tab.load = v.load;\r\n                return tab;\r\n            }\r\n        ));\r\n        this.tabBack = tabBack || 'bg-light';\r\n        this.contentBack = contentBack;\r\n        this.sep = sep || 'border-top border-gray';\r\n        if (selected !== undefined) {\r\n            this.selectedTab = this.tabs.find(v => v.name === selected);\r\n        }\r\n        if (this.selectedTab === undefined) this.selectedTab = this.tabs[0];\r\n        this.selectedTab.selected = true;\r\n    }\r\n\r\n    private tabClick = async (tab:Tab) => {\r\n        await tab.start();\r\n        this.selectedTab.selected = false;\r\n        tab.selected = true;\r\n        this.selectedTab = tab;\r\n    }\r\n\r\n    showTab(tabName: string) {\r\n        let tab = this.tabs.find(v => v.name === tabName);\r\n        if (tab === undefined) return;\r\n        if (this.selectedTab !== undefined) this.selectedTab.selected = false;\r\n        tab.selected = true;\r\n        this.selectedTab = tab;\r\n    }\r\n\r\n    render() {\r\n        let cn = classNames('tab', 'tab-' + this.size);\r\n        return <div className={cn}>\r\n            <div className={this.contentBack}>\r\n                {this.tabs.map((v,index) => {\r\n                    let style:React.CSSProperties={\r\n                        display: v.selected===true? undefined : 'none'};\r\n                    return <div key={index} style={style}>{v.content}</div>;\r\n                })}\r\n            </div>\r\n            <div className={classNames(this.tabBack, this.sep)} style={{height: this.size}}>\r\n                {this.tabs.map((v,index) => {\r\n                    let {selected, caption, notify} = v;\r\n                    let notifyCircle:any;\r\n                    if (notify !== undefined) {\r\n                        let num = notify.get();\r\n                        if (num !== undefined) {\r\n                            if (num > 0) notifyCircle = <u>{num>99?'99+':num}</u>;\r\n                            else if (num < 0) notifyCircle = <u className=\"dot\" />;\r\n                        }\r\n                    }\r\n                    return <div key={index} className=\"\" onClick={()=>this.tabClick(v)}>\r\n                        <div className=\"align-self-center\">\r\n                            {notifyCircle}\r\n                            {caption(selected)}\r\n                        </div>\r\n                    </div>\r\n                })}\r\n            </div>\r\n        </div>\r\n    }\r\n};\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { VPage, Page, Form, ItemSchema, UiSchema, StringSchema, UiTextItem, UiPasswordItem, ButtonSchema, Edit, ImageSchema, nav, UiImageItem } from '../ui';\r\nimport { userApi } from './userApi';\r\n\r\nexport class EditMeInfo extends React.Component {\r\n    private schema:ItemSchema[] = [\r\n        {name:'nick', type:'string'} as StringSchema,\r\n        {name:'icon', type:'image'} as ImageSchema\r\n    ];\r\n    private uiSchema:UiSchema = {\r\n        items: {\r\n            nick: {widget:'text', label:'别名', placeholder:'好的别名更方便记忆'} as UiTextItem,\r\n            icon: {widget:'image', label:'头像'} as UiImageItem,\r\n        }\r\n    }\r\n    @observable private data:any;\r\n\r\n    constructor(props:any) {\r\n        super(props);\r\n        let {nick, icon} = nav.user;\r\n        this.data = {\r\n            nick: nick,\r\n            icon: icon,\r\n        }\r\n    }\r\n\r\n    private onItemChanged = async (itemSchema:ItemSchema, newValue:any, preValue:any) => {\r\n        let {name} = itemSchema;\r\n        await userApi.userSetProp(name, newValue);\r\n        this.data[name] = newValue;\r\n        nav.user[name] = newValue;\r\n        nav.saveLocalUser();\r\n    }\r\n\r\n    render() {\r\n        return <Page header=\"个人信息\">\r\n            <Edit schema={this.schema} uiSchema={this.uiSchema}\r\n                data={this.data}\r\n                onItemChanged={this.onItemChanged} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {FetchError} from '../fetchError';\r\nimport { refetchApi } from '../net';\r\n\r\nexport interface FetchErrorProps extends FetchError {\r\n    clearError: ()=>void\r\n}\r\n\r\nexport default class FetchErrorView extends React.Component<FetchErrorProps, null> {\r\n    private reApi = async () => {\r\n        this.props.clearError();\r\n        const {channel, url, options, resolve, reject} = this.props;\r\n        await refetchApi(channel, url, options, resolve, reject);\r\n    }\r\n    private close = async () => {\r\n        this.props.clearError();\r\n    }\r\n    render() {\r\n        let {error, url} = this.props;\r\n            //let errMsg = fetchError.errorMsg;\r\n        let errContent;\r\n        if (typeof error === 'object') {\r\n            let err = [];\r\n            for (let i in error) {\r\n                err.push(<li key={i}><label>{i}</label><div>{error[i]}</div></li>);\r\n            }\r\n            errContent = <ul>{err}</ul>;\r\n        }\r\n        else {\r\n            errContent = <div>{error}</div>;\r\n        }\r\n        return <li>\r\n            <article className=\"page-container\">\r\n                <section>\r\n                    <div  className=\"va-error\">\r\n                        <div>网络出现问题</div>\r\n                        <div>点击重新访问</div>\r\n                        <div>url: {url}</div>\r\n                        {errContent}\r\n                        <div className=\"p-3\">\r\n                            <button type='button' onClick={this.reApi}>重新API</button>\r\n                            <button type='button' onClick={this.close}>关闭</button>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </article>\r\n        </li>;\r\n    }\r\n}\r\n","import {User, Guest, Unit} from './user';\r\n\r\nexport interface ClearableData {\r\n    clear(): void;\r\n}\r\n\r\nexport class Data<T> implements ClearableData {\r\n    private name: string;\r\n    private value?: T;\r\n    constructor(name: string) {this.name = name; }\r\n    get(): T {\r\n        if (this.value !== undefined) return this.value;\r\n        let v = localStorage.getItem(this.name);\r\n        return this.value = v === null ? undefined : JSON.parse(v); \r\n    }\r\n    set(value: T) {\r\n        if (!value) { this.clear(); return; }\r\n        this.value = value;\r\n        localStorage.setItem(this.name, JSON.stringify(value));\r\n    }\r\n    clear() {\r\n        this.value = undefined;\r\n        localStorage.removeItem(this.name);\r\n    }\r\n}\r\n\r\nexport class LocalData {\r\n    user = new Data<User>('user');\r\n    guest = new Data<Guest>('guest');\r\n    unit = new Data<Unit>('unit');\r\n    testing = new Data<boolean>('testing');\r\n\r\n    logoutClear() {\r\n        [\r\n            this.user,\r\n            this.unit,\r\n        ].map(d => d.clear());\r\n    }\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import {CenterApi, User, appInFrame} from 'tonva';\r\nimport { string } from 'prop-types';\r\n\r\nclass MainApi extends CenterApi {\r\n    async stickies():Promise<any[]> {\r\n        return await this.get('sticky/list', {start:0, pageSize:30});\r\n    }\r\n\r\n    async ties():Promise<any[]> {\r\n        return await this.get('tie/list', {start:0, pageSize:30});\r\n    }\r\n\r\n    async apps(unit:number):Promise<any> {\r\n        return await this.get('tie/apps', {unit:unit});\r\n    }\r\n\r\n    async appApi(unit:number, app:number, apiName:string) {\r\n        return await this.get('tie/app-api', {unit:unit, app:app, apiName:apiName});\r\n    }\r\n\r\n    async userId(name:string):Promise<number> {\r\n        return await this.get('tie/user-id', {name:name});\r\n    }\r\n\r\n    async userAdminUnits():Promise<any[]> {\r\n        return await this.get('tie/user-admin-units', {});\r\n    }\r\n\r\n    async sendMessage(toUser:number, type:string, content:any) {\r\n        let {unit} = appInFrame;\r\n        let adminApp = 0;\r\n        return await this.post('tie/send-message', {\r\n            type: type, \r\n            fromUnit: unit, \r\n            fromApp: adminApp,\r\n            toUser: toUser, \r\n            content: content, \r\n        });\r\n    }\r\n\r\n    async unit(unit:number):Promise<any> {\r\n        return await this.get('unit/', {unit:unit});\r\n    }\r\n\r\n    async unitMemberCount(unit:number):Promise<number> {\r\n        return await this.get('unit/member-count', {unit:unit});\r\n    }\r\n\r\n    async unitAdmins(unit:number):Promise<any[]> {\r\n        return await this.get('unit/admins', {unit:unit});\r\n    }\r\n\r\n    async unitSetAdmin(fellow:number, unit:number, isOwner:number, isAdmin:number):Promise<any> {\r\n        return await this.post('unit/set-admin', {fellow:fellow, unit:unit, isOwner:isOwner, isAdmin:isAdmin});\r\n    }\r\n\r\n    async unitAddAdmin(user:string, unit:number, isOwner:number, isAdmin:number):Promise<any> {\r\n        return await this.post('unit/add-admin', {user:user, unit:unit, isOwner:isOwner, isAdmin:isAdmin});\r\n    }\r\n\r\n    async unitApps(unit:number):Promise<any[]> {\r\n        return await this.get('unit/apps', {unit:unit});\r\n    }\r\n\r\n    async unitAddApp(unit:number, app:number):Promise<number> {\r\n        let ret = await this.post('unit/add-app', {unit:unit, app:app});\r\n        return ret;\r\n    }\r\n\r\n    async unitDeleteApp(unit:number, app:number, deleted:number):Promise<void> {\r\n        await this.post('unit/delete-app', {unit:unit, app:app, deleted:deleted});\r\n    }\r\n\r\n    async unitChangeProp(unit:number, prop:string, value:any):Promise<void> {\r\n        await this.post('unit/change-prop', {unit:unit, prop:prop, value:value});\r\n    }\r\n\r\n    async searchApp(unit:number, key:string, pageStart:any, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/search-app', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n\r\n    async unitRoles(unit:number):Promise<any[]> {\r\n        return await this.get('unit/roles', {unit:unit});\r\n    }\r\n\r\n    async unitAddRole(unit:number, name:string, discription:string):Promise<number> {\r\n        return await this.post('unit/add-role', {unit:unit, name:name, discription:discription});\r\n    }\r\n\r\n    async unitRoleChangeProp(unit:number, role:number, prop:string, value:any):Promise<void> {\r\n        await this.post('unit/change-role-prop', {unit:unit, role:role, prop:prop, value:value});\r\n    }\r\n\r\n    async unitRoleApps(unit:number, role:number):Promise<any[]> {\r\n        return await this.get('unit/role-apps', {unit:unit, role:role});\r\n    }\r\n\r\n    async unitRoleSetApps(unit:number, role:number, apps:number[]):Promise<void> {\r\n        await this.post('unit/role-set-apps', {unit:unit, role:role, apps:apps});\r\n    }\r\n\r\n    async unitMembers(unit:number, role:number, key:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/members', {unit:unit, role:role, key, pageStart, pageSize});\r\n    }\r\n\r\n    async unitAssignMember(unit:number, member:number, assigned:string):Promise<void> {\r\n        await this.post('unit/assign-member', {unit:unit, member:member, assigned:assigned});\r\n    }\r\n\r\n    async unitMemberRoles(unit:number, member:number):Promise<any[]> {\r\n        return await this.get('unit/member-roles', {unit:unit, member:member});\r\n    }\r\n\r\n    async unitSetMemberRoles(unit:number, member:number, roles:number[]):Promise<void> {\r\n        await this.post('unit/member-set-roles', {unit:unit, member:member, roles:roles});\r\n    }\r\n\r\n    async unitUsers(unit:number, key:string, pageStart:number, pageSize:number):Promise<any> {\r\n        return await this.get('unit/users', {unit: unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitAppUsers(unit:number, key:string, pageStart:number, pageSize:number):Promise<any> {\r\n        return await this.get('unit/app-users', {unit: unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitOneAppUsers(unit:number, app:number, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/one-app-users', {unit: unit, app:app, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitOneUserApps(unit:number, user:number, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/one-user-apps', {unit: unit, user:user, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitAppEditUsers(unit:number, app:number, key:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/app-edit-users', {unit: unit, app:app, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitUserEditApps(unit:number, user:number, key:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/user-edit-apps', {unit: unit, user:user, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async bindAppUser(unit:number, app:number, user:number, bind:number):Promise<void> {\r\n        await this.post('unit/bind-app-user', {unit: unit, app:app, user:user, bind:bind});\r\n    }\r\n\r\n    async userFromKey(key:string):Promise<any> {\r\n        return await this.get('tie/user-from-key', {key:key});\r\n    }\r\n    async unitAddUser(unit:number, user:number) {\r\n        await this.post('unit/add-user', {unit:unit, user:user});\r\n    }\r\n}\r\n\r\nexport const mainApi = new MainApi('tv/', undefined);\r\n","import {CenterApi} from 'tonva';\r\n\r\nclass DevApi extends CenterApi {\r\n    async uqBuilderUrl():Promise<any> {\r\n        let ret = await this.get('uq-builder-url', undefined);\r\n        return ret;\r\n    }    \r\n    async counts(unit:number):Promise<any> {\r\n        return await this.get('counts', {unit:unit});\r\n    }\r\n    async app(id:number):Promise<any> {\r\n        return await this.get('app', {id:id});\r\n    }\r\n    async uq(id:number):Promise<any> {\r\n        return await this.get('uq', {id:id});\r\n    }\r\n    async server(id:number):Promise<any> {\r\n        return await this.get('server', {id:id});\r\n    }\r\n    async uqdb(id:number):Promise<any> {\r\n        return await this.get('uqdb', {id:id});\r\n    }\r\n    async apps(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('apps', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async uqs(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('uqs', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async buses(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('buses', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async servers(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('servers', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async uqdbs(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('uqdbs', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async services(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('services', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async saveApp(values:any):Promise<number> {\r\n        return await this.post('app-save', values);\r\n    }\r\n    async saveUq(values:any):Promise<number> {\r\n        return await this.post('uq-save', values);\r\n    }\r\n    async saveBus(values:any):Promise<number> {\r\n        return await this.post('bus-save', values);\r\n    }\r\n    async saveServer(values:any):Promise<number> {\r\n        return await this.post('server-save', values);\r\n    }\r\n    async saveService(values:any):Promise<number> {\r\n        return await this.post('service-save', values);\r\n    }\r\n    async delApp(unit:number,id:number):Promise<void> {\r\n        return await this.post('app-del', {unit:unit, id:id});\r\n    }\r\n    async delUq(unit:number,id:number):Promise<void> {\r\n        return await this.post('uq-del', {unit:unit, id:id});\r\n    }\r\n    async delBus(unit:number,id:number):Promise<void> {\r\n        return await this.post('bus-del', {unit:unit, id:id});\r\n    }\r\n    async delServer(unit:number,id:number):Promise<void> {\r\n        return await this.post('server-del', {unit:unit, id:id});\r\n    }\r\n    async delUqdb(unit:number,id:number):Promise<void> {\r\n        return await this.post('uqdb-del', {unit:unit, id:id});\r\n    }\r\n    async delService(unit:number,id:number):Promise<void> {\r\n        return await this.post('service-del', {unit:unit, id:id});\r\n    }\r\n    async loadAppUqs(app:number):Promise<any[]> {\r\n        return await this.get('app-uqs', {app: app});\r\n    }\r\n    async appBindUq(unit:number,app:number,uqs:{id:number, access:string[]}[]):Promise<void> {\r\n        let uqsText:string;\r\n        if (uqs !== undefined) {\r\n            uqsText = uqs.map(v => String(v.id)+'|'+v.access.join(',')).join(';');\r\n        }\r\n        await this.post('app-bind-uq', {unit:unit, app:app, uqs:uqsText});\r\n    }\r\n    async searchUq(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('uq-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async getMyUqs(unit:number):Promise<any[]> {\r\n        return await this.get('my-uqs', {unit:unit});\r\n    }\r\n    async searchApp(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('app-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async searchServer(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('server-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async searchUqdb(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('uqdb-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    //async loadAppServices(unit:number, app:number):Promise<any[]> {\r\n    //    return await this.get('app-services', {unit:unit, app:app});\r\n    //}\r\n    async loadUqServices(unit:number, uq:number):Promise<any[]> {\r\n        return await this.get('uq-services', {unit:unit, uq:uq});\r\n    }\r\n    async changeServiceProp(unit:number, service:number, prop:string, value:any):Promise<number> {\r\n        return await this.post('service-change-prop', {unit:unit, service:service, prop:prop, value:value});\r\n    }\r\n    async uqGetEntities(unit:number, uq:number):Promise<any[][]> {\r\n        return await this.get('uq-get-entities', {unit:unit, uq:uq});\r\n    }\r\n}\r\n\r\nexport const devApi = new DevApi('tv/dev/', undefined);\r\n","import {observable} from 'mobx';\r\nimport {UnitAdmin} from '../model';\r\nimport {mainApi} from '../api';\r\nimport {Store} from './index';\r\n\r\nexport class Admins {\r\n    private store:Store;\r\n    constructor(store:Store) {\r\n        this.store = store;\r\n    }\r\n\r\n    @observable cur: UnitAdmin = undefined;\r\n    @observable owners: UnitAdmin[] = undefined;\r\n    @observable admins: UnitAdmin[] = undefined;\r\n    @observable fellows: UnitAdmin[] = undefined;\r\n    \r\n    async load(): Promise<void> {\r\n        let unit = this.store.unit;\r\n        if (unit === undefined) return;\r\n        if (unit.id === undefined) return;\r\n        if (this.admins !== undefined) return;\r\n        let all = await mainApi.unitAdmins(unit.id);\r\n        let owners:UnitAdmin[] = [];\r\n        let admins:UnitAdmin[] = [];\r\n        let fellows:UnitAdmin[] = [];\r\n        all.forEach(ua => {\r\n            let {isOwner, isAdmin} = ua;\r\n            if (isOwner === 0 && isAdmin === 0)\r\n                fellows.push(ua);\r\n            else {\r\n                if (isOwner === 1) owners.push(ua);\r\n                if (isAdmin === 1) admins.push(ua);\r\n            }\r\n        });\r\n        this.owners = owners;\r\n        this.admins = admins;\r\n        this.fellows = fellows;\r\n    }\r\n\r\n    private removeCur(arr: UnitAdmin[]) {\r\n        let index = arr.findIndex(v => v.id===this.cur.id);\r\n        if (index >=0) arr.splice(index, 1);\r\n    }\r\n\r\n    async unitSetAdmin(isOwner:number, isAdmin:number) {\r\n        let cur = this.cur;\r\n        cur.isOwner = isOwner;\r\n        cur.isAdmin = isAdmin;\r\n        let fellowId = cur.id, unitId = this.store.unit.id;\r\n        await mainApi.unitSetAdmin(fellowId, unitId, isOwner, isAdmin);\r\n        this.removeCur(this.owners);\r\n        this.removeCur(this.admins);\r\n        this.removeCur(this.fellows);\r\n        if (isOwner === 0 && isAdmin === 0)\r\n            this.fellows.unshift(cur);\r\n        else {\r\n            if (isOwner === 1) this.owners.unshift(cur);\r\n            if (isAdmin === 1) this.admins.unshift(cur);\r\n        }\r\n    }\r\n\r\n    async addNew(user:string, isOwner:number, isAdmin:number):Promise<UnitAdmin> {\r\n        let admin = await mainApi.unitAddAdmin(user, this.store.unit.id, isOwner, isAdmin);\r\n        if (admin !== undefined) {\r\n            let cur = this.cur = admin;\r\n            this.removeCur(this.owners);\r\n            this.removeCur(this.admins);\r\n            this.removeCur(this.fellows);\r\n            if (isOwner === 0 && isAdmin === 0)\r\n                this.fellows.unshift(cur);\r\n            else {\r\n                if (isOwner === 1) this.owners.unshift(cur);\r\n                if (isAdmin === 1) this.admins.unshift(cur);\r\n            }\r\n        }\r\n        return admin;\r\n    }\r\n}\r\n","import {observable, autorun} from 'mobx';\r\nimport _ from 'lodash';\r\nimport {devApi} from '../api';\r\nimport {DevModel, Unit} from '../model';\r\nimport {Store} from './index';\r\n\r\ninterface Counts {\r\n    uq: number;\r\n    app: number;\r\n    bus: number;\r\n    server: number;\r\n    service: number;\r\n    //uqdb: number;\r\n}\r\n\r\nexport abstract class ObjItems<T extends DevModel.ObjBase> {\r\n    protected store:Store;\r\n    protected dev:Dev;\r\n    constructor(store:Store, dev:Dev) {\r\n        this.store = store;\r\n        this.dev = dev;\r\n    }\r\n\r\n    @observable items: T[] = undefined;\r\n    @observable cur: T = undefined;\r\n\r\n    async load():Promise<void> {\r\n         let ret = await this._load();\r\n         this.items = ret;\r\n    }\r\n    protected abstract _load():Promise<T[]>;\r\n    async saveCur(item:T):Promise<boolean> {\r\n        let values:any = {};\r\n        if (this.cur !== undefined) {\r\n            _.assign(values, this.cur, item);\r\n        }\r\n        else {\r\n            _.assign(values, item);\r\n        }\r\n\r\n        values.unit = item.unit = this.store.unit.id;\r\n        let id = await this._save(values);\r\n        if (this.cur === undefined) {\r\n            if (id === 0) return false;\r\n            values.id = id;\r\n            if (this.items !== undefined) this.items.unshift(values);\r\n            this._inc();\r\n            this.cur = observable(values);\r\n        }\r\n        else {\r\n            _.assign(this.cur, values);\r\n        }\r\n        return true;\r\n    }\r\n    async check(item:T):Promise<boolean> {\r\n        return true;\r\n    }\r\n    async save(item:T):Promise<T> {\r\n        let values:any = {};\r\n        _.assign(values, item);\r\n\r\n        values.unit = item.unit = this.store.unit.id;\r\n        let id = await this._save(values);\r\n        if (id === 0) return;\r\n        values.id = id;\r\n        return values;\r\n    }\r\n    protected abstract _save(item:T):Promise<number>;\r\n    async del():Promise<void> {\r\n        let c = this.cur;\r\n        if (c === undefined) return;\r\n        let id = c.id;\r\n        await this._del(c);\r\n        if (this.items === undefined) return;\r\n        let index = this.items.findIndex(v => v.id === id);\r\n        if (index>=0) {\r\n            this.items.splice(index, 1);\r\n            this._dec();\r\n        }\r\n    }\r\n    protected abstract _del(item:T):Promise<void>;\r\n    protected abstract _inc();\r\n    protected abstract _dec();\r\n}\r\n\r\nclass Apps extends ObjItems<DevModel.App> {\r\n    @observable uqs: DevModel.UQ[] = undefined;\r\n    @observable searchedUqs: DevModel.UQ[] = undefined;\r\n    //@observable service: DevModel.Service = null;\r\n    protected async _load() {\r\n        return await devApi.apps(this.store.unit.id);\r\n    }\r\n    protected async _save(item:DevModel.App):Promise<number> {\r\n        return await devApi.saveApp(item);\r\n    }\r\n    protected async _del(item:DevModel.App):Promise<void> {\r\n        await devApi.delApp(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.app++; }\r\n    protected _dec() { this.dev.counts.app--; }\r\n\r\n    public async loadCurUqs() {\r\n        let ret = await devApi.loadAppUqs(this.cur.id);\r\n        this.uqs = ret;\r\n    }\r\n    public async searchUq(key:string) {\r\n        this.searchedUqs = await devApi.searchUq(this.store.unit.id, key, 0, searchPageSize);\r\n    }\r\n    public async appBindUq(uqs:{id:number, access:string[]}[], bind:boolean) {\r\n        let allUqs:{id:number, access:string[]}[] = this.uqs.map(v => {\r\n            let {id, access} = v;\r\n            return {id: id, access: [access]};\r\n        });\r\n        for (let uq of uqs) {\r\n            let index = allUqs.findIndex(v => v.id === uq.id);\r\n            if (bind === true) {\r\n                if (index < 0) allUqs.unshift(uq);\r\n            }\r\n            else {\r\n                allUqs.splice(index, 1);\r\n            }\r\n        }\r\n        await devApi.appBindUq(this.store.unit.id, this.cur.id, allUqs);\r\n        for (let uq of uqs) {\r\n            let index = this.uqs.findIndex(a => a.id === uq.id);\r\n            if (index>=0) this.uqs.splice(index, 1);\r\n            if (bind === true) {\r\n                if (this.searchedUqs !== undefined) {\r\n                    let find = this.searchedUqs.find(a => a.id === uq.id);\r\n                    if (find !== undefined) this.uqs.unshift(find);\r\n                }\r\n            }\r\n            else {\r\n                // 已经删除，不需要处理\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass Uqs extends ObjItems<DevModel.UQ> {\r\n    protected async _load() {\r\n        let ret = await devApi.uqs(this.store.unit.id);\r\n        return ret;\r\n    }\r\n    protected async _save(item:DevModel.UQ):Promise<number> {\r\n        //let {access} = item;\r\n        //if (!access) access = \"*';\r\n        //let parts = access.split(',').map(v => v.trim()).filter(v => v!=='');\r\n        //item.access = parts.join(',');\r\n        return await devApi.saveUq(item);\r\n    }\r\n    protected async _del(item:DevModel.UQ):Promise<void> {\r\n        await devApi.delUq(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.uq++; }\r\n    protected _dec() { this.dev.counts.uq--; }\r\n}\r\n\r\nclass Buses extends ObjItems<DevModel.Bus> {\r\n    protected async _load() {\r\n        let ret = await devApi.buses(this.store.unit.id);\r\n        return ret;\r\n    }\r\n    protected async _save(item:DevModel.Bus):Promise<number> {\r\n        return await devApi.saveBus(item);\r\n    }\r\n    protected async _del(item:DevModel.Bus):Promise<void> {\r\n        await devApi.delBus(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.bus++; }\r\n    protected _dec() { this.dev.counts.bus--; }\r\n    async check(item:DevModel.Bus):Promise<boolean> {\r\n        let {schema} = item;\r\n        try {\r\n            let json = JSON.parse(schema);\r\n            for (let i in json) {\r\n                let face = json[i];\r\n                for (let field of face) {\r\n                    let {type} = field;\r\n                    if (['id', 'number', 'string', 'array'].indexOf(type) < 0) {\r\n                        if (type === 'date') {\r\n                            alert('不再支持数据类型date，请用number unixtime作为媒介')\r\n                        }\r\n                        else {\r\n                            alert('不支持数据类型 ' + type);\r\n                        }\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        catch (err) {\r\n            alert(err.message);\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nclass Servers extends ObjItems<DevModel.Server> {\r\n    protected async _load() {\r\n        return await devApi.servers(this.store.unit.id);\r\n    }\r\n    protected async _save(item:DevModel.Server):Promise<number> {\r\n        return await devApi.saveServer(item);\r\n    }\r\n    protected async _del(item:DevModel.Server):Promise<void> {\r\n        await devApi.delServer(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.server++; }\r\n    protected _dec() { this.dev.counts.server--; }\r\n}\r\n/*\r\nclass Uqdbs extends ObjItems<DevModel.Uqdb> {\r\n    protected async _load() {\r\n        return await devApi.uqdbs(this.store.unit.id);\r\n    }\r\n    protected async _save(item:DevModel.Uqdb):Promise<number> {\r\n        return await devApi.saveUqdb(item);\r\n    }\r\n    protected async _del(item:DevModel.Uqdb):Promise<void> {\r\n        await devApi.delUqdb(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.uqdb++; }\r\n    protected _dec() { this.dev.counts.uqdb--; }\r\n}\r\n*/\r\nclass Services extends ObjItems<DevModel.Service> {\r\n    protected async _load() {\r\n        return await devApi.services(this.store.unit.id);\r\n    }\r\n    protected async _save(item:DevModel.Service):Promise<number> {\r\n        return await devApi.saveService(item);\r\n    }\r\n    protected async _del(item:DevModel.Service):Promise<void> {\r\n        await devApi.delService(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.service++; }\r\n    protected _dec() { this.dev.counts.service--; }\r\n    async changeProp(prop:string, value:any):Promise<number> {\r\n        let ret = await devApi.changeServiceProp(this.store.unit.id, this.cur.id, prop, value);\r\n        switch (prop) {\r\n            case 'url': this.cur.url = value; break;\r\n            case 'urlTest': this.cur.urlTest = value; break;\r\n            case 'server': this.cur.server = value; break;\r\n            case 'db': this.cur.db = value; break;\r\n            case 'db_type': this.cur.db_type = value; break;\r\n            case 'connection': this.cur.connection = value; break;\r\n        }\r\n        return ret;\r\n    }\r\n    async loadUqServices(uq:number):Promise<void> {\r\n        let ret = await devApi.loadUqServices(this.store.unit.id, uq);\r\n        this.items = ret[0];\r\n    }\r\n}\r\n\r\nconst searchPageSize = 50;\r\ntype Search = (unit:number,key:string,pageStart:number,pageSize:number)=>Promise<any[]>;\r\nclass SearchItems<T extends DevModel.ObjBase> {\r\n    private store:Store;\r\n    private dev:Dev;\r\n    private search:(unit:number,key:string,pageStart:number,pageSize:number)=>Promise<any[]>;\r\n\r\n    constructor(store:Store, dev:Dev, search:Search) {\r\n        this.store = store;\r\n        this.dev = dev;\r\n        this.search = search;\r\n    }\r\n\r\n    @observable items: T[] = undefined;\r\n    allLoaded: boolean = false;\r\n    private key: string;\r\n    private pageStart = 0;\r\n\r\n    async first(key:string) {\r\n        this.key = key;\r\n        this.items = undefined;\r\n        this.allLoaded = false;\r\n        this.pageStart = 0;\r\n        await this.more();\r\n    }\r\n\r\n    async more():Promise<void> {\r\n        if (this.allLoaded === true) return;\r\n        let ret = await this.search(this.store.unit.id, this.key, this.pageStart, searchPageSize);\r\n        let len = ret.length;\r\n        if (len > searchPageSize) {\r\n            this.allLoaded = false;\r\n            --len;\r\n            ret.splice(len, 1);\r\n        }\r\n        else {\r\n            this.allLoaded = true;\r\n        }\r\n        if (len > 0) {\r\n            this.pageStart = ret[len-1].id;\r\n            if (this.items === undefined)\r\n                this.items = ret;\r\n            else\r\n                this.items.push(...ret);\r\n        }\r\n        else {\r\n            this.items = [];\r\n        }\r\n    }\r\n}\r\n\r\nexport class Dev {\r\n    private store:Store;\r\n    constructor(store:Store) {\r\n        this.store = store;\r\n        this.apps = new Apps(store, this);\r\n        this.uqs = new Uqs(store, this);\r\n        this.buses = new Buses(store, this);\r\n        this.servers = new Servers(store, this);\r\n        //this.uqdbs = new Uqdbs(store, this);\r\n        this.services = new Services(store, this);\r\n        this.searchApp = new SearchItems<DevModel.App>(store, this, devApi.searchApp.bind(devApi));\r\n        this.searchUq = new SearchItems<DevModel.UQ>(store, this, devApi.searchUq.bind(devApi));\r\n        this.searchServer = new SearchItems<DevModel.Server>(store, this, devApi.searchServer.bind(devApi));\r\n    }\r\n\r\n    @observable counts:Counts = undefined;\r\n    apps:Apps = undefined;\r\n    uqs:Uqs = undefined;\r\n    buses:Buses = undefined;\r\n    servers:Servers = undefined;\r\n    //uqdbs:Uqdbs = undefined;\r\n    services:Services = undefined;\r\n\r\n    searchApp:SearchItems<DevModel.App> = undefined;\r\n    searchUq:SearchItems<DevModel.UQ> = undefined;\r\n    searchServer:SearchItems<DevModel.Server> = undefined;\r\n    searchUqdb:SearchItems<DevModel.Uqdb> = undefined;\r\n    \r\n    async loadCounts(): Promise<void> {\r\n        let {unit} = this.store;\r\n        this.counts = await devApi.counts(unit.id);\r\n    }\r\n}\r\n","import {CacheIds} from 'tonva';\r\nimport {Id, Unit, DevModel} from '../model';\r\nimport {mainApi, devApi} from '../api';\r\n\r\nexport class CacheUnits extends CacheIds<Unit> {\r\n    protected async _loadIds(ids:number[]):Promise<Unit[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<Unit> {\r\n        return await mainApi.unit(id);\r\n    }\r\n}\r\n\r\nexport class CacheUqs extends CacheIds<DevModel.UQ> {\r\n    protected async _loadIds(ids:number[]):Promise<DevModel.UQ[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<DevModel.UQ> {\r\n        return await devApi.uq(id);\r\n    }\r\n}\r\n\r\nexport class CacheApps extends CacheIds<DevModel.App> {\r\n    protected async _loadIds(ids:number[]):Promise<DevModel.App[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<DevModel.App> {\r\n        return await devApi.app(id);\r\n    }\r\n}\r\n\r\nexport class CacheServers extends CacheIds<DevModel.Server> {\r\n    protected async _loadIds(ids:number[]):Promise<DevModel.Server[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<DevModel.Server> {\r\n        return await devApi.server(id);\r\n    }\r\n}\r\n","import {observable, autorun} from 'mobx';\r\nimport _ from 'lodash';\r\nimport {appInFrame, host} from 'tonva';\r\nimport {mainApi, devApi} from '../api';\r\nimport {Unit, UnitApps, App, Api, UnitAdmin, UnitApp, Role, RoleMember} from '../model';\r\nimport {Admins} from './admins';\r\nimport {Dev} from './dev';\r\nimport {CacheUnits, CacheUqs, CacheApps, CacheServers} from './cacheIds';\r\n\r\nexport class Store {\r\n    private get unitId():number {return appInFrame.unit;};\r\n    admins:Admins;\r\n    dev:Dev;\r\n    cacheUnits: CacheUnits;\r\n    cacheUqs: CacheUqs;\r\n    cacheApps: CacheApps;\r\n    cacheServers: CacheServers;\r\n    uqServer: string;\r\n\r\n    @observable unit: Unit;\r\n    @observable memberCount: number;\r\n    @observable apps: UnitApp[];\r\n    @observable role:Role;\r\n    @observable roles: Role[];\r\n    @observable roleApps: UnitApp[];\r\n    @observable roleMember: RoleMember;\r\n    @observable roleMembers: RoleMember[];\r\n    @observable memberRoles: Role[];\r\n\r\n    init() {\r\n        this.unit = undefined;\r\n        this.admins = new Admins(this);\r\n        this.dev = new Dev(this);\r\n        this.cacheUnits = new CacheUnits();\r\n        this.cacheUqs = new CacheUqs();\r\n        this.cacheApps = new CacheApps();\r\n        this.cacheServers = new CacheServers();\r\n    }\r\n\r\n    logout() {\r\n        //meInFrame.app = undefined;\r\n        appInFrame.hash = undefined;\r\n        //let unitId = process.env.REACT_APP_DEBUG_UNITID;\r\n        //if (unitId !== undefined)\r\n        //    meInFrame.unit = Number(unitId);\r\n        appInFrame.unit = undefined;\r\n        this.init();\r\n        this.memberCount = undefined;\r\n        this.apps = undefined;\r\n        this.role = undefined;\r\n        this.roles = undefined;\r\n        this.roleApps = undefined;\r\n        this.roleMember = undefined;\r\n        this.roleMembers = undefined;\r\n        this.memberRoles = undefined;\r\n    }\r\n\r\n    setRole(role:Role) {\r\n        if (this.role === role) return;\r\n        this.role = role;\r\n        this.roleApps = undefined;\r\n        this.roleMember = undefined;\r\n        this.roleMembers = undefined;\r\n        this.memberRoles = undefined;\r\n    }\r\n\r\n    setRoleUser(user:RoleMember) {\r\n        if (this.roleMember === user) return;\r\n        this.roleMember = user;\r\n        this.memberRoles = undefined;\r\n    }\r\n\r\n    async unitChangeProp(prop:string, value:any):Promise<void> {\r\n        await mainApi.unitChangeProp(this.unit.id, prop, value);\r\n        this.unit[prop] = value;\r\n    }\r\n\r\n    async loadApps(): Promise<void> {\r\n        if (this.apps !== undefined) return;\r\n        this.apps = await mainApi.unitApps(this.unitId);\r\n    }\r\n\r\n    async loadUnit(): Promise<void> {\r\n        if (this.unitId === undefined) return;\r\n        let ret = await mainApi.unit(this.unitId);\r\n        this.unit = ret;\r\n        console.log(\"loadUnit unit=%s\", ret);\r\n        this.memberCount = await mainApi.unitMemberCount(this.unitId);\r\n        let uqServer = await devApi.uqBuilderUrl();\r\n        let {url} = uqServer;\r\n        this.uqServer = host.getUrlOrDebug(url, 'uq-build');\r\n        console.log(\"uq-build: %s\", JSON.stringify(this.uqServer));\r\n    }\r\n\r\n    async stopUnitApp(appId:number): Promise<void> {\r\n        await mainApi.unitDeleteApp(this.unit.id, appId, 1);\r\n        let app = this.apps.find(v => v.id === appId);\r\n        app.inUnit = 0;\r\n    }\r\n\r\n    async restoreUnitApp(appId:number): Promise<number> {\r\n        let ret = await mainApi.unitAddApp(this.unit.id, appId);\r\n        if (ret <= 0) return ret;\r\n        let app = this.apps.find(v => v.id === appId);\r\n        app.inUnit = 1;\r\n        return 1;\r\n    }\r\n\r\n    async addUnitApp(app:UnitApp): Promise<number> {\r\n        let ret = await mainApi.unitAddApp(this.unit.id, app.id);\r\n        if (ret <= 0) return ret;\r\n        this.apps.push(app);\r\n        return 1;\r\n    }\r\n\r\n    async loadRoles(): Promise<void> {\r\n        if (this.roles !== undefined) return;\r\n        let ret = await mainApi.unitRoles(this.unit.id);\r\n        ret.forEach(v => {\r\n            switch (v.id) {\r\n                case 1: \r\n                    v.name= '访客';\r\n                    v.discription = '可以获取开放信息';\r\n                    break;\r\n                case 2: \r\n                    v.name= '普通';\r\n                    v.discription = '能访问最基本的功能';\r\n                    break;\r\n            }\r\n        });\r\n        this.roles = ret;\r\n    }\r\n\r\n    async unitAddRole(name:string, discription:string): Promise<number> {\r\n        let id = await mainApi.unitAddRole(this.unit.id, name, discription);\r\n        if (id > 0) {\r\n            this.roles.push({\r\n                id: id,\r\n                name: name,\r\n                discription: discription,\r\n                count: undefined,\r\n            });\r\n        }\r\n        return id;\r\n    }\r\n\r\n    async roleChangeProp(prop:string, value:any):Promise<void> {\r\n        await mainApi.unitRoleChangeProp(this.unit.id, this.role.id, prop, value);\r\n        this.role[prop] = value;\r\n    }\r\n\r\n    async loadRoleApps():Promise<void> {\r\n        let ret = await mainApi.unitRoleApps(this.unit.id, this.role.id);\r\n        this.roleApps = ret.map(v => {\r\n            return this.apps.find(app=>app.id === v.id);\r\n        });\r\n    }\r\n\r\n    async setRoleApps(apps:UnitApp[]) {\r\n        await mainApi.unitRoleSetApps(this.unit.id, this.role.id, apps.map(v=>v.id));\r\n        this.roleApps = apps;\r\n    }\r\n\r\n    async loadMembers():Promise<void> {\r\n        let ret = await mainApi.unitMembers(this.unit.id, this.role === undefined? 0:this.role.id, undefined, 0, 100);\r\n        this.roleMembers = ret;\r\n    }\r\n\r\n    async unitAssignMember(assigned:string):Promise<void> {\r\n        await mainApi.unitAssignMember(this.unit.id, this.roleMember.id, assigned);\r\n        this.roleMember.assigned = assigned;\r\n    }\r\n\r\n    async loadMemberRoles():Promise<void> {\r\n        let ret = await mainApi.unitMemberRoles(this.unit.id, this.roleMember.id);\r\n        let roles:Role[] = ret.map(v => {\r\n            let rId = v.id;\r\n            let role = this.roles.find(r => r.id === rId);\r\n            return _.clone(role);\r\n        });\r\n        this.memberRoles = roles;\r\n    }\r\n\r\n    async setMemberRoles(memberRoles:Role[]) {\r\n        await mainApi.unitSetMemberRoles(this.unit.id, this.roleMember.id, memberRoles.map(v=>v.id));\r\n        this.roles.forEach(role => {\r\n            let rId = role.id;\r\n            let org = this.memberRoles.find(v => v.id === rId);\r\n            let cur = memberRoles.find(v => v.id === rId);\r\n            if (org !== undefined) {\r\n                if (cur !== undefined) return;\r\n                role.count--;\r\n                return;\r\n            }\r\n            if (cur === undefined) return;\r\n            role.count++;\r\n        });\r\n        this.memberRoles = memberRoles;\r\n    }\r\n};\r\n\r\nexport const store = new Store();\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page, Context, Form, Schema, UiSchema, UiTextItem} from 'tonva';\r\nimport {store} from '../store';\r\n\r\n@observer\r\nexport default class NewFellowPage extends React.Component<{isOwner:boolean, isAdmin:boolean}> {\r\n    //private form: TonvaForm;\r\n    private schema: Schema = [\r\n        {name:'user', type:'string', required:true},\r\n        {name:'submit', type:'submit'}\r\n    ]\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            user: {widget:'text', maxLength: 100, placeholder: '用户名', label: '管理员'} as UiTextItem,\r\n            submit: {widget:'button', label: '添加', className: 'btn btn-primary'}\r\n        }\r\n    }\r\n    /*\r\n    private formRows:FormRow[] = [\r\n        {\r\n            label: '用户名',\r\n            field: {\r\n                type: 'string',\r\n                name: 'user',\r\n                required: true,\r\n                maxLength: 100,\r\n            },\r\n            face: {\r\n                type: 'string',\r\n                placeholder: '用户名',\r\n            }\r\n        },\r\n    ];\r\n    private schema:FormSchema = new FormSchema({\r\n        fields: [\r\n            {\r\n                type: 'string',\r\n                name: 'user',\r\n                placeholder: '用户名',\r\n                label: '邀请成员',\r\n                rules: ['required', 'maxlength:100']\r\n            },\r\n        ],\r\n        onSumit: this.onSendInvitation,\r\n        submitText: '邀请'\r\n    });\r\n    */\r\n    private onSendInvitation = async (name:string, context:Context): Promise<string> => {\r\n        let {isOwner, isAdmin} = this.props;\r\n        let user = context.form.data['user'];\r\n        let ret = await store.admins.addNew(user, isOwner?1:0, isAdmin?1:0);\r\n        if (ret !== undefined) {\r\n            nav.pop();\r\n            return;\r\n        }\r\n        return user + '没有关注小号';\r\n        /*\r\n        let msg = {a: 1, b: 'ddd'};\r\n        let toName = values['user'];\r\n        let userId = await mainApi.userId(toName);\r\n        if (userId === 0) {\r\n            this.form.formView.setError('user', '\\'' + toName +  '\\' 不存在');\r\n            return;\r\n        }\r\n        await mainApi.sendMessage(userId, 'unit-follow-invite', msg);\r\n        nav.replace(<Page header='完成' back=\"close\">\r\n            <Card>\r\n                <CardBody>\r\n                    <CardTitle>邀请成员</CardTitle>\r\n                    <CardText>已发送给{toName}，请等待确认。</CardText>\r\n                    <Button color='primary' onClick={()=>nav.back()}>完成</Button>\r\n                </CardBody>\r\n            </Card>\r\n        </Page>);\r\n        */\r\n    }\r\n    render() {\r\n        let {isOwner, isAdmin} = this.props;\r\n        let caption = isOwner? \"高管\" : \"管理员\";\r\n        return <Page header={'新增' + caption}>\r\n            <div className=\"container\">\r\n                <div className='my-4 text-info'>\r\n                    只有关注本小号的用户，才能成为{caption}\r\n                </div>\r\n                <Form schema={this.schema} uiSchema={this.uiSchema} onButtonClick={this.onSendInvitation}/>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n// <ValidForm formSchema={this.schema} />\r\n//<TonvaForm ref={f=>this.form=f} formRows={this.formRows} onSubmit={this.onSendInvitation} />\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page, Schema, UiSchema, ItemSchema, UiCheckItem, UiButton, ButtonSchema, Form, Context, Image} from 'tonva';\r\nimport {store} from '../store';\r\nimport { UnitAdmin } from '../model/index';\r\n//import {mainApi} from '../api';\r\n//, ValidForm, FormSchema, FormFields, Field\r\n\r\n@observer\r\nexport default class EditAdmin extends React.Component {\r\n    private onSubmit = async (name:string, context:Context) => {\r\n        let {isOwner, isAdmin} = context.form.data;\r\n        await store.admins.unitSetAdmin(isOwner, isAdmin);\r\n        nav.pop();\r\n    }\r\n    render() {\r\n        let {unit} = store;\r\n        let {isRoot, isOwner, isAdmin} = unit;\r\n        let unitAdmin = store.admins.cur;\r\n        let owner:ItemSchema = {name: 'isOwner', type: 'boolean'};\r\n        let admin:ItemSchema = {name: 'isAdmin', type: 'boolean'};\r\n        let submit:ButtonSchema = {name: 'submit', type: 'submit'};\r\n        let schema:ItemSchema[];\r\n        if (isRoot === 1) schema = [owner, admin, submit];\r\n        else if (isOwner === 1) schema = [admin, submit];\r\n        let data = {\r\n            isOwner: unitAdmin.isOwner,\r\n            isAdmin: unitAdmin.isAdmin,\r\n        };\r\n\r\n        let uiSchema = {\r\n            items: {\r\n                'isOwner': {widget: 'checkbox', label: '高管', trueValue:1, falseValue:0} as UiCheckItem,\r\n                'isAdmin': {widget: 'checkbox', label: '管理员', trueValue:1, falseValue:0} as UiCheckItem,\r\n                'submit': {widget: 'button', label: '提交', className: 'btn btn-primary'} as UiButton,\r\n            }\r\n        };\r\n\r\n        return <Page header='权限'>\r\n            <div className=\"px-3\">\r\n                <Fellow {...store.admins.cur} />\r\n                <Form schema={schema} uiSchema={uiSchema} formData={data} onButtonClick={this.onSubmit} />\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n\r\nconst Fellow = (props:UnitAdmin) => {\r\n    let {name, nick, icon} = props;\r\n    //<img className='w-75' src={icon || process.env.REACT_APP_DEFAULT_ICON} />\r\n    return <div>\r\n        <div className='d-flex my-4'>\r\n            <Image className=\"w-3c h-3c mr-3\" src={icon} />\r\n            <div className=\"\">\r\n                <h4 className='text-dark'>{name}</h4>\r\n                {nick && <h6><small className='text-secondary'>{nick}</small></h6>}\r\n            </div>\r\n        </div>\r\n        <hr className='mb-4' />\r\n    </div>;\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page, Image} from 'tonva';\r\nimport {UnitApps, UnitAdmin} from '../model';\r\nimport {store} from '../store';\r\nimport NewFellow from './NewFellow';\r\nimport EditAdmin from './EditAdmin';\r\nimport {LMR, Badge, List} from 'tonva';\r\n\r\n@observer\r\nexport default class AdministorsPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.admins.load();\r\n    }\r\n\r\n    onNewFellow() {\r\n        //nav.push(<NewFellow />);\r\n    }\r\n    onItemClick(ua:UnitAdmin) {\r\n        store.admins.cur = ua;\r\n        nav.push(<EditAdmin />);\r\n    }\r\n    private row = ({icon, name, nick}:UnitAdmin) => {\r\n        let content = nick?\r\n            <><b>{nick}</b> &nbsp; <small className=\"text-muted\">{name}</small></>\r\n            :\r\n            <b>{name}</b>;\r\n        let left = <Image className=\"w-2-5c h-2-5c\" src={icon} />; \r\n        return <LMR className=\"py-2 px-3 align-items-stretch\" left={left}>\r\n            <div className=\"px-3\">{content}</div>\r\n        </LMR>;\r\n    }\r\n\r\n    private onNewOwner = (evt: React.MouseEvent<HTMLAnchorElement>) => {\r\n        this.newAdmin(evt, true, false);\r\n    }\r\n\r\n    private onNewAdmin = (evt: React.MouseEvent<HTMLAnchorElement>) => {\r\n        this.newAdmin(evt, false, true);\r\n    }\r\n\r\n    private newAdmin(evt: React.MouseEvent<HTMLAnchorElement>, isOwner:boolean, isAdmin:boolean) {\r\n        evt.preventDefault();\r\n        nav.push(<NewFellow isOwner={isOwner} isAdmin={isAdmin} />);\r\n    } \r\n    render() {\r\n        //let n = nav;\r\n        //let me = n.local.user.get().id;\r\n        let {unit} = store;\r\n        if (unit === undefined) return;\r\n        let {owners, admins, fellows} = store.admins;\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.onNewFellow}>新增成员</button>;\r\n\r\n        let showOwners = false, showAdmins = false;\r\n        let ownersView, adminsView, fellowsView;\r\n        if (unit.isRoot === 1) {\r\n            showOwners = true;\r\n            showAdmins = true;\r\n        }\r\n        if (unit.isOwner === 1) showAdmins = true;\r\n        if (showOwners === true) {\r\n            let header = <LMR \r\n                className=\"px-3 py-1 small\"\r\n                left=\"高管\" \r\n                right={<a className=\"small\" href='#' onClick={this.onNewOwner}>新增</a>} />;\r\n            ownersView = <List \r\n                className=\"my-4\"\r\n                header={header} items={owners}\r\n                none=\"[无]\"\r\n                item={{onClick: this.onItemClick, render: this.row}}\r\n            />;\r\n        }\r\n        if (showAdmins === true) {\r\n            let header = <LMR \r\n                className=\"px-3 py-1 small\"\r\n                left=\"管理员\" \r\n                right={<a className=\"small\" href='#' onClick={this.onNewAdmin}>新增</a>} />;\r\n            adminsView = <List \r\n                className='my-4' \r\n                header={header} items={admins} \r\n                none='[无]'\r\n                item={{onClick: this.onItemClick, render: this.row}}\r\n            />;\r\n        }\r\n        return <Page header=\"管理员\" right={right}>\r\n            {ownersView}\r\n            {adminsView}\r\n            <div className=\"my-4 p-3\">\r\n                <div className=\"ml-2 mb-2\">说明</div>\r\n                <div className=\"\">\r\n                    <ul className=\"pl-2\">\r\n                        <li className=\"card-text\">管理组包括主人、高管、管理员</li>\r\n                        <li className=\"card-text\">小号主人可以增减高管</li>\r\n                        <li className=\"card-text\">高管可以增减管理员</li>\r\n                        <li className=\"card-text\">管理员可以管理小号，程序的开发，以及用户</li>\r\n                        <li className=\"card-text\">开发号高管可以增减编辑APP，UQ，Server，Service</li>\r\n                        <li className=\"card-text\">开发号管理员可以编译指定UQ，BUS</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {EasyDate} from 'tonva';\r\n\r\nexport interface IdDatesProps {\r\n    date_init: Date;\r\n    date_update: Date;\r\n}\r\n\r\nexport class IdDates extends React.Component<IdDatesProps> {\r\n    render() {\r\n        let {date_init, date_update} = this.props;\r\n        return <small className=\"text-muted\">\r\n            上次修改: <EasyDate date={date_update}/>\r\n            <i className=\"fa fa-fw\" />\r\n            创建: <EasyDate date={date_init}/>\r\n        </small>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\n\r\nexport function span(\r\n    isLink:boolean,\r\n    className:string, \r\n    onClick:(evt:React.MouseEventHandler<HTMLElement>)=>void,\r\n    content:any): JSX.Element\r\n{\r\n    let tag:string;\r\n    let props:any;\r\n    if (isLink === true) {\r\n        tag = 'a';\r\n        props = {\r\n            className: classNames(className, 'cursor-pointer'),\r\n            onClick: onClick,\r\n            href: '#',\r\n        }\r\n    }\r\n    else {\r\n        tag = 'span';\r\n        props = {\r\n            className: className,\r\n        }\r\n    }\r\n    return React.createElement(tag, props, content);\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {Prop, ListProp, Media, PropGrid} from 'tonva';\r\nimport {nav, Page}  from 'tonva';\r\nimport {store} from '../store';\r\nimport {span} from './span';\r\n\r\nexport interface UnitLinkProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class UnitSpan extends React.Component<UnitLinkProps> {\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<UnitInfo id={this.props.id} />);\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        if (id === undefined) return null;\r\n        let unit = store.cacheUnits.get(id);\r\n        let content;\r\n        let {name, nick, discription} = unit;\r\n        let disc = discription && '- ' + discription;\r\n        if (nick) {\r\n            content = <>{nick} &nbsp; <small className=\"text-muted\">{name} {disc}</small></>;\r\n        }\r\n        else if (name) {\r\n            content = <>{name} &nbsp; <small className=\"text-muted\">{disc}</small></>;\r\n        }\r\n        else {\r\n            content = id;\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\n@observer\r\nexport class UnitName extends React.Component<UnitLinkProps> {\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        if (id === undefined) return null;\r\n        let unit = store.cacheUnits.get(id);\r\n        let {name} = unit;\r\n        return <>{name}</>;\r\n    }\r\n}\r\n\r\nclass UnitInfo extends React.Component<UnitLinkProps> {\r\n    private rows:Prop[];\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        let unit = store.cacheUnits.get(this.props.id);\r\n        let {name, nick, icon, discription} = unit;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={icon} main={name} discription={discription} />},\r\n            '',\r\n        ];\r\n        return <Page header={'小号 - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n","export const appIcon = process.env.REACT_APP_ICON;\r\nexport const appItemIcon = process.env.REACT_APP_ITEM_ICON;\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport * as classNames from 'classnames';\r\nimport {Prop, Media, PropGrid} from 'tonva';\r\nimport {nav, Page}  from 'tonva';\r\nimport {appIcon, appItemIcon} from 'consts';\r\nimport {store} from 'store';\r\nimport {IdDates} from './idDates';\r\nimport {span} from './span';\r\nimport {UnitSpan} from './unitSpan';\r\n\r\nexport interface UqLinkProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class UqSpan extends React.Component<UqLinkProps> {\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<UqInfo id={this.props.id} />);\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, className, isLink} = this.props;\r\n        let api = store.cacheUqs.get(id);\r\n        let content;\r\n        if (api === null) {\r\n            content = id;\r\n        }\r\n        else {\r\n            let {name, discription} = api;\r\n            let disc = discription && '- ' + discription;\r\n            if (name !== undefined) {\r\n                content = <React.Fragment>{name} &nbsp; <small className=\"text-muted\">{disc}</small></React.Fragment>;\r\n            }\r\n            else {\r\n                content = id;\r\n            }\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\n@observer\r\nclass UqInfo extends React.Component<UqLinkProps> {\r\n    private rows:Prop[];\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        let uq = store.cacheUqs.get(this.props.id);\r\n        let {name, discription, unit, date_init, date_update} = uq;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={name} discription={disp} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n        ];\r\n        return <Page header={'UQ - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport {Prop, ListProp, Media, PropGrid} from 'tonva';\r\nimport {nav, Page}  from 'tonva';\r\nimport {store} from '../store';\r\nimport {devApi} from '../api';\r\nimport {span} from './span';\r\nimport {IdDates} from './idDates';\r\nimport {UnitSpan} from './unitSpan';\r\n\r\nexport interface AppSpanProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class AppSpan extends React.Component<AppSpanProps> {\r\n    /*\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.onClick = this.onClick.bind(this);\r\n    }\r\n    componentWillMount() {\r\n        let {id} = this.props;\r\n        store.cacheApps.get(id);\r\n    }\r\n    */\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<AppInfo id={this.props.id} />)\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        let app = store.cacheApps.get(id);\r\n        let content;\r\n        if (app === null) {\r\n            content = id;\r\n        }\r\n        else {\r\n            let {name, icon, discription} = app;\r\n            let isPublic = app.public;\r\n            let disc = discription && '- ' + discription;\r\n            if (name !== undefined) {\r\n                content = <React.Fragment>{name} &nbsp; <small className=\"text-muted\">{disc}</small></React.Fragment>;\r\n            }\r\n            else {\r\n                content = id;\r\n            }\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\n\r\n@observer\r\nclass AppInfo extends React.Component<AppSpanProps> {\r\n    private rows:Prop[];\r\n    @observable private apis:ListProp = {\r\n        label: '关联API', type: 'list', list: undefined, row: AppRow\r\n    };\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    async componentDidMount() {\r\n        this.apis.list = await devApi.loadAppUqs(this.props.id);\r\n    }\r\n    render() {\r\n        let app = store.cacheApps.get(this.props.id);\r\n        let {unit, name, discription, icon, date_init, date_update} = app;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={icon} main={name} discription={disp} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            this.apis,\r\n        ];\r\n        return <Page header={'APP - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass AppRow extends React.Component<any> {\r\n    render() {\r\n        let {name, discription} = this.props;\r\n        let disp;\r\n        if (discription) disp = <div className=\"small text-muted\">{discription}</div>;\r\n        return <div className='form-control-plaintext'>\r\n            <div>{name}</div>\r\n            {disp}\r\n        </div>\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport * as classNames from 'classnames';\r\nimport {Prop, ListProp, Media, PropGrid} from 'tonva';\r\nimport {nav, Page}  from 'tonva';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {store} from '../store';\r\nimport {DevModel} from '../model';\r\nimport {devApi} from '../api';\r\nimport {span} from './span';\r\nimport {IdDates} from './idDates';\r\nimport {UnitSpan} from './unitSpan';\r\n\r\nexport interface ServerSpanProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class ServerSpan extends React.Component<ServerSpanProps> {\r\n    /*\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.onClick = this.onClick.bind(this);\r\n    }\r\n    componentWillMount() {\r\n        let {id} = this.props;\r\n        store.cacheServers.get(id);\r\n    }\r\n    */\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<ServerInfo id={this.props.id} />)\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        let server = store.cacheServers.get(id);\r\n        let content;\r\n        if (server === null) {\r\n            content = id;\r\n        }\r\n        else {\r\n            let {cloud, ip, discription} = server;\r\n            if (discription !== undefined) {\r\n                content = <React.Fragment>{discription} &nbsp; <small className=\"text-muted\">{ip}</small></React.Fragment>;\r\n            }\r\n            else {\r\n                content = id;\r\n            }\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\nclass ServerInfo extends React.Component<ServerSpanProps> {\r\n    private rows:Prop[];\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        let server = store.cacheServers.get(this.props.id);\r\n        let {discription, cloud, ip, unit, date_init, date_update} = server;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={discription} discription={ip} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            {type: 'string', label: '云服务', name: 'cloud'},\r\n        ];\r\n        return <Page header={'服务器 - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {nav, Page} from 'tonva';\r\n\r\ninterface StringValueEditProps {\r\n    title: string;\r\n    onChanged:(value:any, orgValue:any)=>Promise<string|void>;\r\n    value?: any;\r\n    buttonText?: string;\r\n    info?: string;\r\n}\r\ninterface StringValueEditState {\r\n    disabled: boolean;\r\n    error?: string;\r\n}\r\n\r\nexport class StringValueEdit extends React.Component<StringValueEditProps, StringValueEditState> {\r\n    //private input:HTMLInputElement;\r\n    protected value: string;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            disabled: true,\r\n        };\r\n    }\r\n    /*\r\n    private ref = (input:HTMLInputElement) => {\r\n        if (!input) return;\r\n        input.value = this.props.value || '';\r\n        this.input = input;\r\n    }*/\r\n    private onChange = (evt:React.FormEvent<HTMLInputElement>) => {\r\n        let val = this.props.value;\r\n        let org = val && val.trim();\r\n        this.value = evt.currentTarget.value.trim();\r\n        this.setState({\r\n            disabled: org === this.value\r\n        });\r\n        \r\n    }\r\n    protected onSubmit = async () => {\r\n        let val = this.props.value;\r\n        let org = val && val.trim();\r\n        let v = this.value; // this.input.value.trim();\r\n        let onChanged = this.props.onChanged;\r\n        if (onChanged !== undefined) {\r\n            let ret = await onChanged(v, org);\r\n            if (typeof ret === 'string') {\r\n                this.setState({error: ret});\r\n                return;\r\n            }\r\n            nav.pop();\r\n        }\r\n    }\r\n    protected renderControl() {\r\n        return <input className=\"form-control w-100\" type=\"text\"\r\n            // ref={this.ref}\r\n            defaultValue={this.props.value}\r\n            onChange={this.onChange} />\r\n    }\r\n    render() {\r\n        let {title, onChanged, buttonText, info, value} = this.props;\r\n        let {disabled, error} = this.state;\r\n        let right = <button\r\n            className=\"btn btn-success btn-sm\"\r\n            disabled={disabled}\r\n            onClick={this.onSubmit}\r\n        >\r\n            {buttonText||'保存'}\r\n        </button>;\r\n        let errorDiv;\r\n        if (error !== undefined) errorDiv = <div className='text-danger'>{error}</div>;\r\n        return <Page header={title} right={right}>\r\n            <div className=\"my-4 mx-3\">\r\n                {this.renderControl()}\r\n                {errorDiv}\r\n                <small className=\"d-block mt-2 text-muted\">{info}</small>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n\r\nexport class TextValueEdit extends StringValueEdit {\r\n    /*\r\n    private textArea:HTMLTextAreaElement;\r\n    private refTextArea = (textArea:HTMLTextAreaElement) => {\r\n        if (!textArea) return;\r\n        textArea.value = this.props.value || '';\r\n        this.textArea = textArea;\r\n    }\r\n    */\r\n    private onTextAreaChange = (evt:React.FormEvent<HTMLTextAreaElement>) => {\r\n        let val = this.props.value;\r\n        let org = val && val.trim();\r\n        this.value = evt.currentTarget.value.trim();\r\n        this.setState({\r\n            disabled: org === this.value\r\n        })\r\n    }\r\n    protected renderControl() {\r\n        return <textarea className=\"form-control w-100\" rows={8}\r\n            // ref={this.refTextArea}\r\n            defaultValue={this.props.value}\r\n            onChange={this.onTextAreaChange} />\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { nav, Page } from 'tonva';\r\nimport { SearchBox, List } from 'tonva';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport interface IdPickPageProps {\r\n    caption: string;\r\n    searchPlaceHolder?: string;\r\n    candidateItems: ((params:any, key:string) => Promise<any[]>) | any[];\r\n    moreCandidates: () => Promise<void>;\r\n    row: (item:any, index:number) => JSX.Element;\r\n    idFromItem: (item:any) => number;\r\n    resolve: (item?: any) => void;\r\n    params: any;\r\n}\r\n\r\n@observer\r\nexport class IdPickPage extends React.Component<IdPickPageProps> {\r\n    @observable private items:any[];\r\n\r\n    async componentDidMount() {\r\n        let {candidateItems, params} = this.props;\r\n        this.items = Array.isArray(candidateItems)? \r\n            candidateItems \r\n            : await candidateItems(params, '');\r\n    }\r\n    private itemClick = (item:any):Promise<void> => {\r\n        let {resolve, idFromItem} = this.props;\r\n        resolve(idFromItem(item));\r\n        nav.pop();\r\n        return;\r\n    }\r\n    private onSearch = async (key: string):Promise<void> => {\r\n        let {candidateItems, params} = this.props;\r\n        if (typeof candidateItems === 'function') {\r\n            let ret = await candidateItems(params, key);\r\n            this.items = ret;\r\n        }\r\n        return;\r\n    }\r\n    render() {\r\n        let {caption, row, searchPlaceHolder} = this.props;\r\n        return <Page header={caption} back=\"close\">\r\n            <div className=\"container\">\r\n                <SearchBox className=\"my-2\" \r\n                    onSearch={this.onSearch} \r\n                    placeholder={searchPlaceHolder}\r\n                    maxLength={100} />\r\n            </div>\r\n            <List items={this.items} item={{onClick:this.itemClick, render:row}} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport {SearchBox, Media, List, LMR, Badge, Prop, PropGrid, FA} from 'tonva';\r\nimport {nav, Page, PageItems} from 'tonva';\r\nimport {IdDates, UnitSpan} from '../tools';\r\nimport {UnitApp, DevModel} from '../model';\r\nimport {store} from '../store';\r\nimport { devApi } from 'api';\r\n\r\n@observer\r\nexport class Info extends React.Component<{app:UnitApp, appActed?:(appId:number, inUnit:number)=>void}> {\r\n    @observable private uqAccesses: any[];\r\n    async componentWillMount() {\r\n        this.uqAccesses = await devApi.loadAppUqs(this.props.app.id);\r\n    }\r\n\r\n    private renderUqRow = (uqAccess:any, index:number):JSX.Element => {\r\n        let {name, owner, unit, discription} = uqAccess;\r\n        return <LMR className=\"py-2\" right={<small className=\"text-muted\">{discription}</small>}>\r\n            {owner} / {name}\r\n        </LMR>;\r\n    }\r\n\r\n    private act = async () => {\r\n        let {app, appActed} = this.props;\r\n        let {id, unit, inUnit} = app;\r\n        let newInUnit:number = 1;\r\n        if (inUnit === 0) {\r\n            let ret = await store.restoreUnitApp(id);\r\n            if (ret <= 0) alert('app 或者 uq 没有定义 service');\r\n        }\r\n        else if (inUnit === 1) {\r\n            await store.stopUnitApp(id);\r\n            newInUnit = 0;\r\n        }\r\n        else {\r\n            let newApp:UnitApp = _.clone(app);\r\n            newApp.id = id;\r\n            newApp.inUnit = 1;\r\n            let ret = await store.addUnitApp(newApp);\r\n            if (ret <= 0) alert('app 或者 uq 没有定义 service');\r\n        }\r\n        if (appActed !== undefined) {\r\n            appActed(id, newInUnit);\r\n        }\r\n        nav.pop();\r\n    }\r\n    render() {\r\n        let {unit, name, discription, icon, inUnit, date_init, date_update} = this.props.app;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let faName:string, text:string, color:string;\r\n        if (inUnit === 1) {\r\n            faName = 'ban';\r\n            text = '停用APP';\r\n            color = 'btn-danger';\r\n        }\r\n        else if (inUnit === 0) {\r\n            faName = 'refresh';\r\n            text = '恢复APP';\r\n            color = 'btn-success';\r\n        }\r\n        else {\r\n            faName = 'plus';\r\n            text = '启用APP';\r\n            color = 'btn-primary';\r\n        }\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <Media icon={icon} main={name} discription={disp} />\r\n            },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                label: '开发号', \r\n                component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div>\r\n            },\r\n            {\r\n                type: 'component', \r\n                label: '关联UQ', \r\n                component: <List className=\"w-100\" items={this.uqAccesses} item={{render: this.renderUqRow}} />\r\n            },\r\n            '',\r\n            '',\r\n            {\r\n                type: 'component', \r\n                bk: '', \r\n                component: <button className={classNames('btn', 'w-100', color)} onClick={this.act}>\r\n                    <FA name={faName} size=\"lg\" /> {text}\r\n                </button>\r\n            },\r\n        ];\r\n        return <div>\r\n            <PropGrid rows={rows} values={this.props} />\r\n        </div>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {IObservableArray} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport {SearchBox, Media, List, LMR, Badge, Prop, PropGrid} from 'tonva';\r\nimport {nav, Page, PageItems, Image} from 'tonva';\r\nimport {mainApi} from '../api';\r\nimport {store} from '../store';\r\nimport {UnitApp} from '../model';\r\nimport {Info} from './info';\r\n\r\nclass PageApps extends PageItems<UnitApp> {\r\n    private unitId:number;\r\n    constructor(unitId:number) {\r\n        super();\r\n        this.unitId = unitId;\r\n    }\r\n    protected async load():Promise<UnitApp[]> {\r\n        return await mainApi.searchApp(this.unitId, this.param, this.pageStart, this.pageSize);\r\n    }\r\n    protected setPageStart(item:UnitApp) {\r\n        if (item === undefined)\r\n            this.pageStart = 0;\r\n        else\r\n            this.pageStart = item.id;\r\n    }\r\n}\r\n\r\n@observer\r\nexport class NewApp extends React.Component {\r\n    private apps: PageApps;\r\n    constructor(props) {\r\n        super(props);\r\n        this.apps = new PageApps(store.unit.id);\r\n    }\r\n    private onSearch = async (key:string) => {\r\n        await this.apps.first(key);\r\n    }\r\n    private appClick = (app:UnitApp) => {\r\n        nav.push(<Page header=\"App详细信息\">\r\n            <Info app={app} appActed={this.appActed}/>\r\n        </Page>);\r\n    }\r\n    private appActed = (appId:number, inUnit:number) => {\r\n        let apps = this.apps.items as IObservableArray<UnitApp>; //.replace .find(v => v.id === appId);\r\n        let app = apps.find(v => v.id === appId);\r\n        app.inUnit = inUnit;\r\n        apps.replace([app]);\r\n    }\r\n    private renderApp(app:UnitApp):JSX.Element {\r\n        let {name, discription, icon, inUnit} = app;\r\n        let right;\r\n        if (inUnit === 1)\r\n            right = <small>已启用</small>;\r\n        else if (inUnit === 0)\r\n            right = <small>已停用</small>;\r\n        return <LMR className=\"px-3 py-2\"\r\n            left={<Badge><Image src={icon} /></Badge>}\r\n            right={right}>\r\n            <div className=\"px-3\">\r\n                <div>{name}</div>\r\n                <small className=\"text-muted\">{discription}</small>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n    render() {\r\n        let items = this.apps.items;\r\n        let center = <SearchBox onSearch={this.onSearch} \r\n            className=\"w-100 mx-1\" \r\n            placeholder=\"搜索App\" \r\n            maxLength={100} />;\r\n        return <Page header={center}>\r\n            <List\r\n                items={items}\r\n                item={{onClick:this.appClick, render:this.renderApp}}\r\n                before=\"搜索App名字\" />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, FA, LMR, Badge} from 'tonva';\r\nimport {nav, Page, Image} from 'tonva';\r\nimport {store} from '../store';\r\nimport {NewApp} from './new';\r\nimport {UnitApp} from '../model';\r\nimport {Info} from './info';\r\n\r\n@observer\r\nexport default class AppsPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadApps();\r\n    }\r\n    private itemRender(app:UnitApp, index:number) {\r\n        let {name, discription, icon, inUnit} = app;\r\n        let ban;\r\n        if (inUnit === 0)\r\n            ban = <FA className=\"text-danger\" name='ban' />;\r\n        return <LMR className=\"px-3 py-1\"\r\n            left={<Badge><Image src={icon} /></Badge>}\r\n            right={ban}>\r\n            <div className=\"px-3\">\r\n                <div>{name}</div>\r\n                <small className=\"text-muted\">{discription}</small>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n    private appClick(app:UnitApp) {\r\n        nav.push(<Page header=\"App详细信息\">\r\n            <Info app={app} />\r\n        </Page>);\r\n    }\r\n    private newItem() {\r\n        nav.push(<NewApp {...this.props} />);\r\n    }\r\n    render() {\r\n        let right = <button \r\n            className='btn btn-secondary btn-sm' \r\n            onClick={()=>this.newItem()}><FA name=\"plus\" /></button>;\r\n        return <Page header=\"启停App\" right={right}>\r\n            <List items={store.apps} item={{render: this.itemRender, onClick: this.appClick}} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {TonvaForm, SubmitResult, FormRow} from 'tonva-form';\r\nimport {nav, Page, ItemSchema, StringSchema, UiSchema, Form, Context} from 'tonva';\r\nimport {store} from '../store';\r\n\r\nexport class NewRole extends React.Component {\r\n    /*\r\n    private form:TonvaForm;\r\n    private formRows:FormRow[] = [\r\n        {\r\n            label: '名称', \r\n            field: {name: 'name', type: 'string', maxLength: 50, required: true},\r\n        },\r\n        {\r\n            label: '描述',\r\n            field: {name: 'discription', type: 'string', maxLength: 250},\r\n            face: {type: 'textarea'}\r\n        },\r\n    ];*/\r\n    private schema: ItemSchema[] = [\r\n        {name: 'name', type: 'string', maxLength: 5, required: true} as StringSchema,\r\n        {name: 'discription', type: 'string', maxLength: 250},\r\n        {name: 'submit', type: 'button'},\r\n    ];\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            name: {widget: 'text', label: '名称'},\r\n            discription: {widget: 'textarea', label: '描述'},\r\n            submit: {widget:'button', label: '提交'}\r\n        }\r\n    }\r\n    private onSubmit = async (buttonName:string, context: Context):Promise<SubmitResult> => {\r\n        //let {name, discription} = values;\r\n        let {name, discription} = this.context.formData;\r\n        let id = await store.unitAddRole(name, discription);\r\n        if (id <= 0) {\r\n            this.context.setError('name', '角色名 ' + name + ' 已经存在');\r\n            return;\r\n        }\r\n        nav.pop();\r\n        return;\r\n    }\r\n    render() {\r\n        return <Page header=\"新建角色\">\r\n            <Form className=\"m-3\" \r\n                schema={this.schema} uiSchema={this.uiSchema} \r\n                formData={{}}\r\n                onButtonClick={this.onSubmit} />\r\n        </Page>;\r\n    }\r\n    /*\r\n    <TonvaForm className=\"m-3\" ref={tf => this.form = tf} \r\n    formRows={this.formRows} \r\n    onSubmit={this.onSubmit} />\r\n    */\r\n}\r\n","import * as React from 'react';\r\nimport {List, LMR} from 'tonva';\r\nimport {nav, Page} from 'tonva';\r\nimport {Role, UnitApp} from '../model';\r\nimport {store} from '../store';\r\nimport {mainApi} from '../api';\r\n\r\ninterface Props {\r\n    role: Role;\r\n}\r\ninterface State {\r\n    apps: UnitApp[]\r\n}\r\nexport class RoleApps extends React.Component<Props, State> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {apps:undefined};\r\n    }\r\n    async componentDidMount() {\r\n        let ret = await mainApi.unitRoleApps(store.unit.id, this.props.role.id);\r\n        this.setState({\r\n            apps: ret,\r\n        });\r\n    }\r\n    private renderRoleApp(app:UnitApp, index:number) {\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={app.name}\r\n                right={<small className=\"text-muted\">{app.discription}</small>} />\r\n    }\r\n    render() {\r\n        let {role} = this.props;\r\n        return <Page header={role.name + ' - 可用APP'}>\r\n            <List\r\n                items={this.state.apps}\r\n                item={{render: this.renderRoleApp}}\r\n                none=\"没有APP\" />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, LMR, FA, Media, Muted, PropGrid, Prop} from 'tonva';\r\nimport {nav, Page} from 'tonva';\r\nimport {Role} from '../model';\r\nimport {store} from '../store';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {StringValueEdit} from '../tools';\r\nimport {RoleApps} from './roleApps';\r\n\r\n@observer\r\nexport class MemberPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadRoles();\r\n        await store.loadMemberRoles();\r\n    }\r\n    async onAssigned(value:any, orgValue:any):Promise<void> {\r\n        await store.unitAssignMember(value);\r\n    }\r\n    private renderMemberRole = (role:Role) => {\r\n        let {name, discription} = role;\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={name}\r\n                right={<Muted>{discription}</Muted>} />\r\n    }\r\n    private roleClick(role:Role) {\r\n        nav.push(<RoleApps role={role} />);\r\n    }\r\n    private setRole = () => {\r\n        nav.push(<SetRole />);\r\n    }\r\n    render() {\r\n        let roleUser = store.roleMember;\r\n        let {nick, name, assigned, icon} = roleUser;\r\n        let disp = <div>\r\n            <div><Muted>唯一名: </Muted> &nbsp; {name}</div>\r\n            <div><Muted>昵称: </Muted> &nbsp; {nick||<Muted>[无]</Muted>}</div>\r\n        </div>;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component',\r\n                component: <Media icon={icon||appIcon} main={roleUser.assigned||nick||name} discription={disp} />\r\n            },\r\n            '',\r\n            {\r\n                label: '备注名',\r\n                type: 'string',\r\n                name: 'assigned',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"修改备注名\"\r\n                    value={roleUser.assigned}\r\n                    onChanged={this.onAssigned} \r\n                    info=\"加一个备注，便于甄别用户\" />),\r\n            },\r\n            '',\r\n        ];\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.setRole}>修改角色</button>;\r\n        return <Page header=\"用户详情\" right={right}>\r\n            <PropGrid rows={rows} values={roleUser} />\r\n            <div className=\"px-3 py-1\"><small><FA name=\"angle-double-right\" /> 所属角色</small></div>\r\n            <List\r\n                items={store.memberRoles} \r\n                item={{render: this.renderMemberRole, onClick: this.roleClick}} />\r\n        </Page>\r\n    }\r\n}\r\n\r\n@observer\r\nclass SetRole extends React.Component {\r\n    private list:List;\r\n    constructor(props) {\r\n        super(props);\r\n        this.submit = this.submit.bind(this);\r\n    }\r\n    async componentDidMount() {\r\n        await store.loadRoles();\r\n        await store.loadMemberRoles();\r\n    }\r\n    private renderRole(role:Role, index:number) {\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={role.name}\r\n                right={<small className=\"text-muted\">{role.discription}</small>} />\r\n    }\r\n    private roleSelect(role:Role, isSelected: boolean, anySelected: boolean) {\r\n    }\r\n    private async submit() {\r\n        await store.setMemberRoles(this.list.selectedItems);\r\n        nav.pop();\r\n    }\r\n    render() {\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.submit}>保存</button>;\r\n        let roles = store.roles;\r\n        let memberRoles = store.memberRoles;\r\n        return <Page header=\"修改角色\" right={right}>\r\n            <List \r\n                ref={list=>this.list=list}\r\n                items={roles}\r\n                selectedItems={memberRoles}\r\n                compare={(role:Role, selectRole:Role)=>role.id === selectRole.id}\r\n                item={{render: this.renderRole, onSelect: this.roleSelect}} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, LMR, Badge, FA, Muted, SearchBox} from 'tonva';\r\nimport {nav, Page, Image} from 'tonva';\r\nimport {Role, RoleMember} from '../model';\r\nimport {store} from '../store';\r\nimport {mainApi} from '../api';\r\nimport {MemberPage} from './memberPage';\r\n\r\n@observer\r\nexport class MembersPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadMembers();\r\n    }\r\n    private renderMember(member:RoleMember, index:number):JSX.Element {\r\n        return <MemberRow {...member} />;\r\n    }\r\n    private userClick(user:RoleMember) {\r\n        store.setRoleUser(user);\r\n        nav.push(<MemberPage />);\r\n    }\r\n    private onSearch() {\r\n        let role = store.role;\r\n        let roleId = role === undefined? 0:role.id;\r\n        nav.push(<MemberSearch roleId={roleId} />);\r\n    }\r\n    render() {\r\n        let right = <button className=\"btn btn-sm\" onClick={this.onSearch}><FA name=\"search\" /></button>;\r\n        return <Page header=\"用户\" right={right}>\r\n            <List items={store.roleMembers} item={{render: this.renderMember, onClick: this.userClick}} />\r\n        </Page>\r\n    }\r\n}\r\n\r\nconst MemberRow = (member:RoleMember) => {\r\n    let {nick, name, assigned, icon} = member;\r\n    let content;\r\n    if (assigned)\r\n        content = <><div><b>{assigned}</b> <Muted>{nick}</Muted></div><Muted>{name}</Muted></>;\r\n    else if (nick)\r\n        content = <><div><b>{nick}</b></div><Muted>{name}</Muted></>;\r\n    else\r\n        content = <div><b>{name}</b></div>;\r\n    return <LMR className=\"py-2 px-3 align-items-stretch\"\r\n        left={<Badge size=\"sm\"><Image src={icon} /></Badge>}>\r\n        <div className=\"px-3\">{content}</div>\r\n    </LMR>;\r\n};\r\n\r\ninterface SearchProps {\r\n    roleId: number;\r\n}\r\ninterface SearchState {\r\n    members: RoleMember[];\r\n}\r\nexport class MemberSearch extends React.Component<SearchProps, SearchState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.state = {\r\n            members: null,\r\n        }\r\n    }\r\n    private async onSearch(key:string) {\r\n        let ret = await mainApi.unitMembers(store.unit.id, this.props.roleId, key, 0, 100);\r\n        this.setState({members: ret});\r\n    }\r\n    private renderMember(member:RoleMember, index:number):JSX.Element {\r\n        return <MemberRow {...member} />;\r\n    }\r\n    private userClick(user:RoleMember) {\r\n        store.setRoleUser(user);\r\n        nav.push(<MemberPage />);\r\n    }\r\n    render() {\r\n        let header = <SearchBox className=\"w-100 mx-1\" \r\n            onSearch={this.onSearch} \r\n            maxLength={100}\r\n            placeholder=\"搜索用户\" />;\r\n        return <Page header={header}>\r\n            <List\r\n                items={this.state.members}\r\n                item={{render: this.renderMember, onClick: this.userClick}} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, Media, LMR, FA, PropGrid, Prop} from 'tonva';\r\nimport {nav, Page} from 'tonva';\r\nimport {StringValueEdit} from '../tools';\r\nimport {Role, UnitApp} from '../model';\r\nimport {store} from '../store';\r\nimport {MembersPage} from './membersPage';\r\n\r\n@observer\r\nexport class RolePage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadApps();\r\n        await store.loadRoleApps();\r\n    }\r\n    private editRole() {\r\n        nav.push(<EditRole />);\r\n    }\r\n    private renderRoleApp = (app:UnitApp, index:number) => {\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={app.name}\r\n                right={<small className=\"text-muted\">{app.discription}</small>} />\r\n    }\r\n    private roleAppClick = (app:UnitApp) => {\r\n        nav.push(<RoleApps />);\r\n    }\r\n    private addRoleApp() {\r\n        nav.push(<RoleApps />);\r\n    }\r\n    private members() {\r\n        nav.push(<MembersPage />);\r\n    }\r\n    render() {\r\n        let {name, discription, count} = store.role;\r\n        let onMembersClick, membersLeft, membersRight;\r\n        if (count===undefined || count===null || count===0) {\r\n            membersLeft = <small className=\"text-muted\">无用户</small>;\r\n        }\r\n        else {\r\n            membersLeft = `共有 ${count} 用户`;\r\n            membersRight = <div><FA name=\"chevron-right\" /></div>;\r\n            onMembersClick = this.members;\r\n        }\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <Media icon={undefined} main={name} discription={discription} />,\r\n                onClick: this.editRole,\r\n            },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <LMR className=\"py-2\" left={membersLeft} right={membersRight} />,\r\n                onClick: onMembersClick,\r\n            },\r\n            '=',\r\n        ];\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={()=>this.addRoleApp()}><FA name=\"plus\" /> APP</button>;\r\n        return <Page header=\"角色\" right={right}>\r\n            <PropGrid rows={rows} values={{}} />\r\n            <div className=\"px-3 py-1\"><small><FA name=\"angle-double-right\" /> 可用APP列表</small></div>\r\n            <List\r\n                items={store.roleApps} \r\n                item={{render: this.renderRoleApp, onClick:this.roleAppClick}}\r\n                none={<small className=\"text-muted px-3 py-1\">没有APP, 点击右上角按钮选择APP</small>} />\r\n        </Page>\r\n    }\r\n}\r\n\r\n@observer\r\nclass EditRole extends React.Component {\r\n    async onNameChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.roleChangeProp('name', value);\r\n    }\r\n    async onDiscriptionChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.roleChangeProp('discription', value);\r\n    }\r\n    render() {\r\n        let role = store.role;\r\n        let {id} = role;\r\n        let isSysRole = id === 1 || id === 2;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                label: '名称', \r\n                type: 'string',\r\n                name: 'name', \r\n                onClick: isSysRole? undefined : ()=>nav.push(<StringValueEdit \r\n                    title=\"修改名称\"\r\n                    value={role.name}\r\n                    onChanged={this.onNameChanged} \r\n                    info=\"好的名字便于理解\" />)\r\n            },\r\n            {\r\n                label: '描述',\r\n                type: 'string',\r\n                name: 'discription',\r\n                onClick: isSysRole? undefined : ()=>nav.push(<StringValueEdit \r\n                    title=\"修改描述\"\r\n                    value={role.discription}\r\n                    onChanged={this.onDiscriptionChanged} \r\n                    info=\"对角色做一个说明\" />)\r\n            },\r\n        ];\r\n        return <Page header=\"修改角色信息\">\r\n            <PropGrid rows={rows} values={role} alignValue=\"right\" />\r\n        </Page>;\r\n    }\r\n}\r\n\r\n@observer\r\nclass RoleApps extends React.Component {\r\n    private list:List;\r\n    constructor(props) {\r\n        super(props);\r\n        this.submit = this.submit.bind(this);\r\n    }\r\n    async componentDidMount() {\r\n        await store.loadApps();\r\n        await store.loadRoleApps();\r\n    }\r\n    private renderApp(app:UnitApp, index:number) {\r\n        return <LMR className=\"py-1 px-2 align-items-center\"\r\n                left={app.name}\r\n                right={<small className=\"text-muted\">{app.discription}</small>} />\r\n    }\r\n    private appSelect(app:UnitApp, isSelected: boolean, anySelected: boolean) {\r\n\r\n    }\r\n    private async submit() {\r\n        await store.setRoleApps(this.list.selectedItems);\r\n        nav.pop();\r\n    }\r\n    render() {\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.submit}>保存</button>;\r\n        let apps = store.apps;\r\n        let roleApps = store.roleApps;\r\n        return <Page header=\"选择APP\" right={right}>\r\n            <List \r\n                ref={list=>this.list=list}\r\n                items={apps}\r\n                selectedItems={roleApps}\r\n                item={{render: this.renderApp, onSelect: this.appSelect}} />\r\n        </Page>;\r\n    }\r\n}","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {List, LMR, FA, Muted} from 'tonva';\r\nimport {nav, Page} from 'tonva';\r\nimport {Role} from '../model';\r\nimport {store} from '../store';\r\nimport {NewRole} from './newRole';\r\nimport {RolePage} from './rolePage';\r\nimport {MembersPage} from './membersPage';\r\n\r\nconst midClassName = classNames('d-flex', 'h-100', 'align-items-center', 'px-5', 'small', 'text-muted');\r\n\r\n@observer\r\nexport class Members extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadRoles();\r\n    }\r\n    private renderRole = (role:Role, index:number) => {\r\n        let {name, discription, count} = role;\r\n        return <LMR\r\n            className=\"px-3 py-2\" \r\n            left={name}\r\n            right={String(count || '')}>\r\n            <div className={midClassName}>\r\n                {discription}\r\n            </div>\r\n        </LMR>;\r\n    }\r\n    private roleClick = (role:Role) => {\r\n        store.setRole(role);\r\n        nav.push(<RolePage />)\r\n    }\r\n    private newRole = (evt: React.MouseEvent<HTMLAnchorElement>) => {\r\n        evt.preventDefault();\r\n        nav.push(<NewRole />);\r\n    }\r\n    private allUsersClick = () => {\r\n        store.setRole(undefined);\r\n        nav.push(<MembersPage />);\r\n    }\r\n    render() {\r\n        let right = <a className=\"small\" href='#' onClick={this.newRole}>新增</a>;\r\n        let header = <LMR className=\"px-3 small bg-light\" left=\"角色\" right={right} />;\r\n        return <Page header=\"用户角色\">\r\n            <LMR\r\n                className=\"my-3 px-3 py-2 bg-white\" \r\n                left={'用户'}\r\n                right={String(store.memberCount)}\r\n                onClick={this.allUsersClick}>\r\n                <div className={midClassName}>\r\n                    设置用户角色\r\n                </div>\r\n            </LMR>\r\n            <List\r\n                header={header}\r\n                items={store.roles}\r\n                none=\"[无]\"\r\n                item={{render:this.renderRole, onClick:this.roleClick}} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { AppController } from '.';\r\nimport { VPage, nav, Page, ItemSchema, UiSchema, StringSchema, BoolSchema, \r\n    UiTextItem, UiTextAreaItem, UiCheckItem, Form, \r\n    ButtonSchema, Context, ImageSchema, UiImageItem, IdSchema, UiIdItem } from 'tonva';\r\nimport { createIdPick, IdPickProps } from 'createIdPick';\r\nimport { DevModel } from 'model';\r\nimport { store } from 'store';\r\nimport { IdPickPage, ServerSpan } from '../../tools';\r\nimport { observer } from 'mobx-react';\r\n\r\nconst ServerCaption = (item:DevModel.Server) => {\r\n    let {discription, cloud, ip} = item;\r\n    return <>{discription} {cloud} {ip}</>;\r\n}\r\nconst idPickServerProps: IdPickProps = {\r\n    caption: '选择服务器',\r\n    searchPlaceHolder: '搜索服务器',\r\n    candidateItems: async (params:any, key:string) => {\r\n        await store.dev.searchServer.first(key);\r\n        return store.dev.searchServer.items;\r\n    },\r\n    moreCandidates: async () => {\r\n        await store.dev.searchServer.more();\r\n    },\r\n    row: (item:DevModel.Server, index:number) => {\r\n        return <div className=\"px-3 py-2\"><ServerCaption {...item} /></div>;\r\n    },\r\n};\r\n\r\nconst schema:ItemSchema[] = [\r\n    {name: 'name', type: 'string', maxLength: 100, required: true} as StringSchema,\r\n    {name: 'caption', type: 'string', maxLength: 100} as StringSchema,\r\n    {name: 'discription', type: 'string', maxLength: 250} as StringSchema,\r\n    {name: 'url', type: 'string', maxLength: 200} as StringSchema,\r\n    {name: 'public', type: 'boolean'} as BoolSchema,\r\n    {name: 'server', type: 'id'} as IdSchema,\r\n    {name: 'icon', type: 'image'} as ImageSchema,\r\n    {name: 'submit', type: 'submit'} as ButtonSchema,\r\n];\r\n\r\nexport abstract class EditBasePage extends VPage<AppController> {\r\n    private candidateItems = async (params:any, key:string):Promise<any[]> => {\r\n        await store.dev.searchServer.first(key);\r\n        return store.dev.searchServer.items;\r\n    }\r\n\r\n    private moreCandidates = async ():Promise<void> => {\r\n        await store.dev.searchServer.more();\r\n    }\r\n\r\n    private renderRow = (item:DevModel.Server, index:number): JSX.Element => {\r\n        return <div className=\"px-3 py-2\"><ServerCaption {...item} /></div>;\r\n    }\r\n\r\n    private pickServerId = (context:Context, name:string, value:number): Promise<number> => {\r\n        return new Promise<number>((resolve, reject) => {\r\n            nav.push(<IdPickPage \r\n                caption=\"选择服务器\" \r\n                searchPlaceHolder=\"搜索服务器\"\r\n                candidateItems={this.candidateItems}\r\n                moreCandidates={this.moreCandidates}\r\n                row={this.renderRow}\r\n                idFromItem={(item:DevModel.Server) => item.id}\r\n                resolve={resolve} params={undefined} />, \r\n                ()=> {\r\n                    reject();\r\n                });\r\n        });\r\n    }\r\n\r\n    private renderServerInput = (itemId:number): JSX.Element => {\r\n        return <ServerSpan id={itemId} />;\r\n    };\r\n\r\n    private uiSchema:UiSchema = {\r\n        items: {\r\n            name: {widget: 'text', label: '名称'} as UiTextItem,\r\n            caption: {widget: 'text', label: '标题'} as UiTextItem,\r\n            discription: {widget: 'textarea', label: '描述', rows: 5} as UiTextAreaItem,\r\n            url: {widget: 'text', label: 'URL', placeholder: 'http(s)://APP地址'} as UiTextItem,\r\n            'public': {widget: 'checkbox', label: '公开', } as UiCheckItem,\r\n            server: {widget: 'id', label: '服务器', pickId: this.pickServerId, Templet: this.renderServerInput} as UiIdItem,\r\n            icon: {widget: 'image', label: '标志图'} as UiImageItem,\r\n            submit: {widget: 'button', label: '提交', className: 'btn btn-primary'}\r\n        }\r\n    }\r\n    \r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n    private onButtonClick = async (name:string, context: Context) => {\r\n        let {data} = context;\r\n        let app:DevModel.App = _.clone(this.controller.app) || {} as any;\r\n        _.merge(app, data);\r\n        await this.controller.saveApp(app);\r\n        nav.pop();\r\n    }\r\n    protected page: ()=>JSX.Element;\r\n    protected form = observer(() => {\r\n        return <Form fieldLabelSize={2}\r\n            className=\"m-3\" \r\n            schema={schema} \r\n            uiSchema={this.uiSchema}\r\n            formData={this.initValues}\r\n            onButtonClick={this.onButtonClick} />\r\n    });\r\n    abstract get initValues():any;\r\n}\r\n\r\nexport class EditPage extends EditBasePage {\r\n    get initValues():any {return this.controller.app}\r\n    protected page = () => {\r\n        let {app} = this.controller;\r\n        let {name} = app;\r\n        return <Page header={'修改APP - ' + name} back=\"close\">\r\n            <this.form />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nexport class NewPage extends EditBasePage {\r\n    get initValues():any {return {}}\r\n    protected page = () => {\r\n        return <Page header={'新建APP'} back=\"close\">\r\n            <this.form />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, Image } from 'tonva';\r\nimport { AppController } from '.';\r\nimport { List, LMR, Badge, Muted, FA } from 'tonva';\r\nimport { DevModel } from 'model';\r\nimport { NewPage } from './editPage';\r\n\r\nexport class AppsPage extends VPage<AppController> {\r\n    async open(param:any) {\r\n        this.openPage(this.page);\r\n    }\r\n    private newItem = () => {\r\n        this.openVPage(NewPage);\r\n    }\r\n    private page = ():JSX.Element => {\r\n        let {appList, listRowClick} = this.controller;\r\n        let right = <button className='btn btn-secondary btn-sm' onClick={()=>this.newItem()}><FA name=\"plus\" /></button>;\r\n        return <Page header=\"App\" right={right}>\r\n            <List items={appList} item={{render: this.appRow, onClick: listRowClick}} />\r\n        </Page>\r\n    }\r\n    private appRow = (item:DevModel.App):JSX.Element => {\r\n        let {name, caption, discription, icon, url, urlDebug} = item;\r\n        let left = <Badge size=\"sm\"><Image src={icon} /></Badge>;\r\n        let right = <div className=\"text-muted small text-right\">\r\n            {url || '-'}<br/>\r\n            {urlDebug}\r\n        </div>;\r\n        let spanCaption = caption?\r\n            <>{name}: <b>{caption}</b></> :\r\n            <b>{name}</b>;\r\n        return <LMR className=\"py-2 px-3 align-items-stretch\"\r\n            left={left} right={right}>\r\n            <div className=\"px-3\">\r\n                <div>{spanCaption}</div>\r\n                <div><Muted>{discription}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { List, LMR, SearchBox } from 'tonva';\r\nimport { DevModel } from 'model';\r\nimport { UnitSpan } from 'tools';\r\nimport { store } from 'store';\r\nimport { nav, Page, VPage } from 'tonva';\r\nimport { AppController } from '.';\r\n\r\nexport class SearchUqPage extends VPage<AppController> {\r\n    @observable private uqs: DevModel.UQ[];\r\n\r\n    async open() {\r\n        this.uqs = await this.controller.getMyUqs();\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private onSearch = async (key:string) => {\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.uqs = await this.controller.searchUq(key, pageStart, pageSize);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let header = <SearchBox className=\"w-100 mx-1\" \r\n            onSearch={this.onSearch}\r\n            placeholder=\"搜索UQ名字\" \r\n            maxLength={100} />;\r\n        return <Page back=\"close\" header={header}>\r\n            <List items={this.uqs} item={{render: this.row, onClick: this.controller.onUq}} />\r\n        </Page>;\r\n    });\r\n\r\n    private row = (uq: DevModel.UQ) => {\r\n        let {owner, name, discription} = uq;\r\n        return <LMR className=\"py-2 px-3\" right={discription}>\r\n            <div>{owner} / {name}</div>\r\n        </LMR>;\r\n    };\r\n}\r\n\r\n@observer\r\nexport class AppUqs extends React.Component {\r\n    @observable anySelected: boolean = false;\r\n    private list:List;\r\n    private onSelect = (item: DevModel.UQ, isSelected:boolean, anySelected:boolean) => {\r\n        this.anySelected = anySelected;\r\n    }\r\n    private row = (item: DevModel.UQ) => {\r\n        let {name, unit, discription} = item;\r\n        return <LMR className=\"p-2\" right={<small className=\"text-muted\">{discription}</small>}>\r\n            <UnitSpan id={unit} />/{name}\r\n        </LMR>;\r\n    }\r\n    private removeBind = () => {\r\n        if (this.list === null) return;\r\n        let {selectedItems} = this.list;\r\n        if (selectedItems === undefined) return;\r\n        if (selectedItems.length === 0) return;\r\n        store.dev.apps.appBindUq(\r\n            selectedItems.map(v => {\r\n                return {id:v.id, access:['*']}\r\n            }), \r\n            false);\r\n    }\r\n    render() {\r\n        let btnProps = this.anySelected?\r\n            {color:'danger', onClick:this.removeBind, icon:'trash', text:'取消'}:\r\n            {color:'primary', onClick:()=>nav.push(<Uqs/>), icon:'plus', text:'新增'};\r\n        let btn = (p)=><button \r\n            className={classNames('btn', 'btn-outline-'+p.color, 'btn-sm')} \r\n            onClick={p.onClick}>\r\n            <i className={\"fa fa-\" + p.icon} /> {p.text}关联\r\n        </button>;\r\n        let listHeader = <div className=\"va-row py-1 justify-content-center\">{btn(btnProps)}</div>;\r\n        return <Page header=\"关联UQ\">\r\n            <List ref={list=>this.list=list} header={listHeader}\r\n                items={store.dev.apps.uqs}\r\n                item={{render: this.row, onSelect: this.onSelect}} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\n@observer\r\nclass Uqs extends React.Component {\r\n    onSearch = async (key:string) => {\r\n        await store.dev.apps.searchUq(key);\r\n    }\r\n    onBind(uq: DevModel.UQ, bind: boolean) {\r\n        store.dev.apps.appBindUq([{id:uq.id, access:['*']}], bind);\r\n    }\r\n    row = (uq: DevModel.UQ) => {\r\n        let isConnected = store.dev.apps.uqs.find(a => a.id === uq.id) !== undefined;\r\n        let cn = ['btn', 'btn-sm'];\r\n        let btnContent:any, onClick:any;\r\n        if (isConnected) {\r\n            cn.push('btn-success');\r\n            onClick = ()=>this.onBind(uq, false);\r\n            btnContent = \"已关联\";\r\n        }\r\n        else {\r\n            cn.push('btn-primary');\r\n            onClick = ()=>this.onBind(uq, true);\r\n            btnContent = <span><i className=\"fa fa-check\"/> 关联</span>;\r\n        }\r\n        return <div className=\"d-flex justify-content-start py-1 px-3\">\r\n            <div className=\"align-self-center\">{uq.name + ' - ' + uq.discription}</div>\r\n            <footer className=\"ml-auto\"><button className={classNames(cn)} onClick={onClick}>{btnContent}</button></footer>\r\n        </div>\r\n    }\r\n    render() {\r\n        let header = <SearchBox className=\"w-100 mx-1\" \r\n            onSearch={this.onSearch} \r\n            placeholder=\"搜索UQ名字\" \r\n            maxLength={100} />;\r\n        return <Page back=\"close\" header={header}>\r\n            <List items={store.dev.apps.searchedUqs} item={{render: this.row}} loading={null} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, nav } from 'tonva';\r\nimport { AppController, UqAccess } from '.';\r\nimport { IdDates, UnitSpan, ServerSpan, UnitName } from 'tools';\r\nimport { Prop, Media, PropGrid, ListProp, DropdownActions, List, LMR } from 'tonva';\r\nimport { EditPage } from './editPage';\r\nimport { AppUqs, SearchUqPage } from './appUqs';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class AppPage extends VPage<AppController> {\r\n    async open() {\r\n        //this.uqs.list = this.controller.uqs;\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private editItem = async () => {\r\n        await this.openVPage(EditPage);\r\n        //nav.push(<EditAppPage {...this.props} />);\r\n    }\r\n\r\n    private deleteItem = async () => {\r\n        if (confirm('真的要删除吗？系统删除时并不会检查相关引用，请谨慎') === true) {\r\n            await this.controller.deleteApp();\r\n            nav.pop();\r\n        }\r\n    }\r\n\r\n    private page = observer(():JSX.Element => {\r\n        let {app} = this.controller;\r\n        let {unit, name, caption, discription, icon, server, date_init, date_update} = app;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let menuItems = [\r\n            // {icon: 'cogs', caption:'设置关联UQ', action: ()=>nav.push(<AppUqs />)},\r\n            {caption:'修改App', action:this.editItem, icon:'edit' },\r\n            {caption:'删除', action:this.deleteItem, icon:'trash-o' }\r\n        ];\r\n\r\n        let right = <DropdownActions actions={menuItems} />;\r\n        let spanCaption = caption?\r\n            <>{name}: <b>{caption}</b></> :\r\n            <b>{name}</b>;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <Media icon={icon} main={spanCaption} discription={disp} />\r\n            },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                label: '开发号', \r\n                component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> \r\n            },\r\n            /*\r\n            {\r\n                type: 'component', \r\n                label: 'Service',\r\n                vAlign: 'stretch',\r\n                component: <ServiceRow />,\r\n            },*/\r\n            {\r\n                label: 'URL',\r\n                name: 'url',\r\n                type: 'string',                \r\n            },\r\n            {\r\n                type: 'component',\r\n                label: '服务器',\r\n                component: <ServerSpan id={server} />\r\n            },\r\n            '',\r\n            //this.uqs,\r\n        ];\r\n        let btnAddUq = <button className=\"btn btn-outline-primary btn-sm\" onClick={()=>this.openVPage(SearchUqPage)}>\r\n            增加关联\r\n        </button>;\r\n        return <Page header={'App - ' + name} right={right}>\r\n            <PropGrid rows={rows} values={app} />\r\n            <LMR className=\"mx-3 mt-3 mb-1\" right={btnAddUq}>\r\n                关联UQ\r\n            </LMR>\r\n            <List items={this.controller.uqAccesses} item={{render:this.renderUqRow, onClick:this.uqClick}} />\r\n        </Page>\r\n    })\r\n\r\n    private uqClick = (uqAccess:UqAccess) => {\r\n        this.controller.onUq(uqAccess.uq);\r\n    }\r\n\r\n    private renderUqRow = (uqAccess:UqAccess, index:number):JSX.Element => {\r\n        let {uq, bind_access: access} = uqAccess;\r\n        let {name, discription, unit} = uq;\r\n        let disp: any;\r\n        let elAccess: any;\r\n        if (access && access.length > 0) {\r\n            elAccess = <> + {access.join(', ')} </>;\r\n        }\r\n        if (discription) disp = <div className=\"small text-muted\"> &nbsp; {discription}</div>;\r\n        return <LMR className=\"px-3 py-2 align-items-center\" right={disp}>\r\n            <UnitName id={unit} /> / {name} {elAccess}\r\n        </LMR>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, nav } from 'tonva';\r\nimport { AppController, UqAccess } from '.';\r\nimport { LMR } from 'tonva';\r\n\r\nexport class UqBindPage extends VPage<AppController> {\r\n    private uqAccess: UqAccess;\r\n    private accesses: string[];\r\n    private accessChecked:{[name:string]:boolean};\r\n    async open(uqAccess: UqAccess) {\r\n        this.uqAccess = uqAccess;\r\n        let {uq, bind_access} = this.uqAccess;\r\n        let {access} = uq;\r\n        if (access) {\r\n            this.accessChecked = {};\r\n            this.accesses = access.split(',');\r\n            for (let acc of this.accesses) {\r\n                this.accessChecked[acc] = (bind_access && bind_access.find(bc => bc === acc)) !== undefined;\r\n            }\r\n        }\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private onCheckChanged = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        let {target} = evt;\r\n        this.accessChecked[target.name] = target.checked;\r\n    }\r\n\r\n    private saveUqBind = async () => {\r\n        let acc:string[] = [];\r\n        if (this.accesses) {\r\n            for (let i in this.accessChecked) {\r\n                if (this.accessChecked[i] === true) acc.push(i);\r\n            }\r\n        }\r\n        await this.controller.saveUqBind(this.uqAccess.uq, acc);\r\n        nav.pop();\r\n    }\r\n\r\n    private removeUqBind = async () => {\r\n        await this.controller.removeUqBind(this.uqAccess.uq);\r\n        nav.pop();\r\n    }\r\n\r\n    private page = ():JSX.Element => {\r\n        let {uq, bind_access} = this.uqAccess;\r\n        let {owner, name, discription, access} = uq;\r\n        let btnDelete:any;\r\n        if (bind_access !== null && bind_access !== undefined) {\r\n            btnDelete = <button className=\"btn btn-outline-danger btn-sm\" onClick={this.removeUqBind}>取消关联</button>;\r\n        }\r\n        let checkAccessList:any;\r\n        if (this.accesses) {\r\n            checkAccessList = <div className=\"mt-3\">\r\n            {\r\n                this.accesses.map(v => {\r\n                    let checked = this.accessChecked[v];\r\n                    return <label key={v} className=\"d-inline-block mr-4\">\r\n                        <input onChange={this.onCheckChanged}\r\n                            style={{width:'1.1rem', height:'1.1rem'}} \r\n                            name={v} type=\"checkbox\" defaultChecked={checked} />&nbsp;{v}\r\n                    </label>;\r\n                })\r\n            }\r\n            </div>;\r\n        }\r\n        return <Page header=\"关联UQ\">\r\n            <div className=\"m-3 py-3 px-3 bg-white border\">\r\n                <div>{owner} / {name}</div>\r\n                <div className=\"text-muted\">{discription}</div>\r\n                {checkAccessList}\r\n                <LMR className=\"pt-3\" right={btnDelete}>\r\n                    <button className=\"btn btn-primary btn-sm\" onClick={this.saveUqBind}>保存关联</button>\r\n                </LMR>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { observable } from 'mobx';\r\nimport { Controller } from 'tonva';\r\nimport { DevModel } from 'model';\r\nimport { devApi } from 'api';\r\nimport { AppsPage } from './appsPage';\r\nimport { AppPage } from './appPage';\r\nimport { UqBindPage } from './uqBindPage';\r\n\r\nexport interface UqAccess {\r\n    uq: DevModel.UQ;\r\n    bind_access: string[];\r\n}\r\n\r\nexport class AppController extends Controller {\r\n    private unitId: number;\r\n    app: DevModel.App;\r\n    @observable appList: DevModel.App[];\r\n    @observable uqAccesses: UqAccess[];\r\n    protected async internalStart(unitId:any) {\r\n        this.unitId = unitId;\r\n        this.appList = await devApi.apps(this.unitId);\r\n        this.openVPage(AppsPage);\r\n    }\r\n\r\n    listRowClick = async (item:DevModel.App) => {\r\n        this.app = item;\r\n        let ret = await devApi.loadAppUqs(item.id);\r\n        this.uqAccesses = ret.map(v => {\r\n            let {owner, access, id, name, discription, unit, date_init, date_update, bind_access} = v;\r\n            return {\r\n                uq: {\r\n                    id: id,\r\n                    name: name,\r\n                    discription: discription,\r\n                    unit: unit,\r\n                    access: access,\r\n                    owner: owner,\r\n                    date_init: date_init,\r\n                    date_update: date_update, \r\n                    service_count: undefined,\r\n                },\r\n                uqOwner: owner,\r\n                bind_access: bind_access && bind_access.split(',')\r\n            }\r\n        });\r\n        this.openVPage(AppPage);\r\n    }\r\n\r\n    saveApp = async (values: DevModel.App) => {\r\n        let app: DevModel.App;\r\n        let now = new Date();\r\n        if (this.app === undefined) {\r\n            app = _.clone(values);\r\n            app.date_init = now;\r\n        }\r\n        else {\r\n            app = _.clone(this.app);\r\n            _.merge(app, values);\r\n        }\r\n        app.unit = this.unitId;\r\n        app.date_update = now;\r\n        let ret = await devApi.saveApp(app);\r\n        app.id = ret;\r\n        let org = this.appList.find(v => v.id === ret);\r\n        if (org !== undefined) {\r\n            _.merge(org, app);\r\n        }\r\n        else {\r\n            this.appList.push(app);\r\n        }\r\n    }\r\n\r\n    deleteApp = async () => {\r\n        await devApi.delApp(this.unitId, this.app.id);\r\n        let index = this.appList.findIndex(v => v.id === this.app.id);\r\n        if (index >= 0) this.appList.splice(index, 1);\r\n    }\r\n\r\n    searchUq = async (key:string, pageStart:number, pageSize:number) => {\r\n        return await devApi.searchUq(this.unitId, key, pageStart, pageSize);\r\n    }\r\n\r\n    getMyUqs = async () => {\r\n        return await devApi.getMyUqs(this.unitId);\r\n    }\r\n\r\n    onUq = (uq: DevModel.UQ) => {\r\n        let uqAccess:UqAccess = this.uqAccesses.find(v => v.uq.id === uq.id);\r\n        if (uqAccess === undefined) {\r\n            uqAccess = {\r\n                uq: uq,\r\n                bind_access: undefined,\r\n            }\r\n        }\r\n        else {\r\n            let access = uqAccess.bind_access;\r\n            if (access === null || access === undefined) uqAccess.bind_access = [];\r\n        }\r\n        this.openVPage(UqBindPage, uqAccess);\r\n    }\r\n\r\n    // accesses = undefined, 表示删除\r\n    private buildBindUqs(uq: DevModel.UQ, accesses?:string[]) {\r\n        let uqs:{id:number, access:string[]}[] = [];\r\n        let isNew = true;\r\n        for (let ua of this.uqAccesses) {\r\n            let {uq:uaUq, bind_access} = ua;\r\n            if (uaUq.id === uq.id) {\r\n                if (accesses === undefined) continue;\r\n                bind_access = accesses;\r\n                isNew = false;\r\n            }\r\n            uqs.push({\r\n                id: uaUq.id,\r\n                access: bind_access || [],\r\n            });\r\n        }\r\n        if (accesses !== undefined && isNew === true) {\r\n            uqs.push({id: uq.id, access: accesses});\r\n        }\r\n        return uqs;\r\n    }\r\n\r\n    saveUqBind = async (uq: DevModel.UQ, accesses:string[]) => {\r\n        let uqs:{id:number, access:string[]}[] = this.buildBindUqs(uq, accesses);\r\n        await devApi.appBindUq(this.unitId, this.app.id, uqs);\r\n        if (uqs.length > this.uqAccesses.length) {\r\n            this.uqAccesses.unshift({\r\n                uq: uq,\r\n                bind_access: accesses,\r\n            });\r\n        }\r\n        else {\r\n            let ua = this.uqAccesses.find(v => v.uq.id === uq.id);\r\n            ua.bind_access = accesses;\r\n        }\r\n    }\r\n\r\n    removeUqBind = async (uq: DevModel.UQ) => {\r\n        let uqs:{id:number, access:string[]}[] = this.buildBindUqs(uq);\r\n        await devApi.appBindUq(this.unitId, this.app.id, uqs);\r\n        let index = this.uqAccesses.findIndex(v => v.uq.id === uq.id);\r\n        if (index>=0) this.uqAccesses.splice(index, 1);\r\n    }\r\n}\r\n","const groupStart = '///++++++';\r\nconst groupEnd = '------///';\r\n\r\nexport class TextSections {\r\n    private text: string;\r\n    private p: number;\r\n    private group: string[];\r\n    private stop: boolean;\r\n    readonly sections: (string | string[])[] = [];\r\n\r\n    add(text:string):void {\r\n        this.stop = false;\r\n        if (this.text === undefined) {\r\n            this.p = 0;\r\n            this.text = text;\r\n        }\r\n        else {\r\n            this.text = this.text + text;\r\n        }\r\n        if (this.text.length < 10) return;\r\n        while (this.stop === false) {\r\n            this.addToGroup();\r\n            this.addText();\r\n        }\r\n    }\r\n\r\n    private mayStart(token:string):boolean {\r\n        let len = this.text.length - token.length;\r\n        if (this.p < len) return false;\r\n        for (let i=0; i<len; i++) {\r\n            if (this.text.charCodeAt(this.p + i) !== token.charCodeAt(i)) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private addToGroup():void {\r\n        if (this.group === undefined) return;\r\n        if (this.text === undefined) return;\r\n        let p = this.text.indexOf(groupEnd, this.p);\r\n        if (p < 0) {\r\n            if (this.mayStart(groupEnd) === true) return;\r\n            this.group.push(this.p === 0? this.text : this.text.substr(this.p));\r\n            this.p = 0;\r\n            this.text = undefined;\r\n            this.stop = true;\r\n            return;\r\n        }\r\n        this.group.push(this.text.substring(this.p, p));\r\n        this.sections.push(this.group);\r\n        this.group = undefined;\r\n        this.p = p + 9;\r\n    }\r\n\r\n    private addText():void {\r\n        if (this.text === undefined) return;\r\n        let p = this.text.indexOf(groupStart, this.p);\r\n        if (p < 0) {\r\n            if (this.mayStart(groupStart) === true) return;\r\n            this.sections.push(this.p === 0? this.text : this.text.substr(this.p));\r\n            this.p = 0;\r\n            this.text = undefined;\r\n            this.stop = true;\r\n            return;\r\n        }\r\n        this.sections.push(this.text.substring(this.p, p));\r\n        this.p = p + 9;\r\n        this.group = [];\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport {nav, Page, FA} from 'tonva';\r\nimport {List, EasyDate, LMR, Muted} from 'tonva';\r\nimport {DevModel} from '../../model';\r\nimport {store} from '../../store';\r\nimport { TextSections } from './textSections';\r\n\r\ninterface State {\r\n    files: any[];\r\n    compiled?: string;\r\n    text?: string;\r\n}\r\n\r\nexport interface UqUploadProps {\r\n    uq: DevModel.UQ;\r\n    services: DevModel.Service[];\r\n}\r\n\r\nconst fastUpload = '快速编译';\r\nconst thoroughlyUpload = '完全编译';\r\nexport class UqUpload extends React.Component<UqUploadProps, State> {\r\n    private fileInput: HTMLInputElement;\r\n\r\n    constructor(props:UqUploadProps) {\r\n        super(props);\r\n        this.state = {\r\n            files: undefined,\r\n        }\r\n    }\r\n\r\n    private onFilesChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        let upFiles:any[] = [];\r\n        let {files} = evt.target;\r\n        let len = files.length;\r\n        for (let i=0; i<len; i++) {\r\n            upFiles.push(files[i]);\r\n        }\r\n        this.setState({\r\n            files: upFiles,\r\n        });\r\n    }\r\n    fileRender(file:any, index:number):JSX.Element {\r\n        let {name, size, lastModifiedDate} = file;\r\n        function sz():string {\r\n            let n:number, u:string;\r\n            if (size < 1024) {\r\n                n = size; u = 'b';\r\n            }\r\n            else if (size < 1024*1024) {\r\n                n = Math.trunc((size / 1024) * 100)/100; u = 'k';\r\n            }\r\n            else {\r\n                n = Math.trunc((size / 1024 / 1024) * 100)/100; u = 'm';\r\n            }\r\n            return n + ' ' + u;\r\n        }\r\n        return <LMR className=\"px-2 py-1\" right={<Muted>{sz()}</Muted>}>\r\n            <div>{name}</div>\r\n            <div><Muted>修改日期: <EasyDate date={lastModifiedDate} /></Muted></div>\r\n        </LMR>;\r\n    }\r\n    private fileClick = (file:any) => {\r\n        let fr = new FileReader();\r\n        fr.onload = function(f) {\r\n            //alert(this.result);\r\n            nav.push(<UqPage name={file.name} content={this.result} />)\r\n        }\r\n        fr.readAsText(file, \"utf8\");\r\n    }\r\n    private onSubmit = (evt:React.FormEvent<any>) => {\r\n        evt.preventDefault();\r\n    }\r\n\r\n    private async update(thoroughly:boolean) {\r\n        var files:FileList = this.fileInput.files;\r\n        var data = new FormData();\r\n        let len = files.length;\r\n        for (let i=0; i<len; i++) {\r\n            let file = files[i];\r\n            data.append('files[]', file, file.name);\r\n        }\r\n  \r\n        let url = store.uqServer + 'uq-compile/' + this.props.uq.id + '/update';\r\n        let actionName:string;\r\n        if (thoroughly === true) {\r\n            actionName = thoroughlyUpload;\r\n            url += '-thoroughly';\r\n        }\r\n        else {\r\n            actionName = fastUpload;\r\n        }\r\n        try {\r\n            let abortController = new AbortController();\r\n            let res = await fetch(url, {\r\n                method: \"POST\",\r\n                body: data,\r\n                signal: abortController.signal,\r\n            });\r\n            nav.push(<CompileResult {...this.props} \r\n                actionName={actionName} \r\n                res={res} abortController={abortController} />);\r\n        }\r\n        catch (e) {\r\n            console.error('%s %s', url, e);\r\n        }\r\n    }\r\n    private onUpdate = async () => {\r\n        nav.ceaseTop();\r\n        let thoroughly = false;\r\n        await this.update(thoroughly);\r\n    }\r\n    private onUpdateThoroughly = async () => {\r\n        nav.ceaseTop();\r\n        let thoroughly = true;\r\n        await this.update(thoroughly);\r\n    }\r\n    render() {\r\n        let {files} = this.state;\r\n        let fileList:any;\r\n        if (files !== undefined) {\r\n            fileList = <List \r\n                className=\"my-3\" \r\n                items={files} \r\n                item={{render: this.fileRender, onClick: this.fileClick}}/>;\r\n        }\r\n        let button:any;\r\n        if (files !== undefined && files.length > 0) {\r\n            button = <div className=\"my-2 d-flex\">\r\n                <button className=\"btn btn-success\" type=\"submit\" onClick={this.onUpdate}>{fastUpload}</button>\r\n                <div className=\"py-2 flex-grow-1\" />\r\n                <button className=\"btn btn-outline-warning\"\r\n                    type=\"submit\" onClick={this.onUpdateThoroughly}>{thoroughlyUpload}</button>\r\n            </div>;\r\n        }\r\n        return <Page header={'编译 - ' + this.props.uq.name}>\r\n            <div className=\"py-2 px-3\">\r\n                <div>请选择UQ源代码文件</div>\r\n                <form className=\"my-1\" encType=\"multipart/form-data\" onSubmit={this.onSubmit}>\r\n                    <div className=\"my-1\">\r\n                        <input ref={(fileInput) => this.fileInput=fileInput}type=\"file\" id=\"photo\" \r\n                            className=\"w-100 form-control-file\" name=\"files\" multiple={true} \r\n                            onChange={this.onFilesChange} />\r\n                    </div>\r\n                    {fileList}\r\n                    {button}\r\n                </form>\r\n                <pre>{this.state.compiled}</pre>\r\n                <div>{this.state.text}</div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n\r\nconst fastDeploy = '快速发布';\r\nconst thoroughlyDeploy = '完全发布';\r\nexport class UqDeploy extends React.Component<UqUploadProps> {\r\n    private onDeploy = async () => {\r\n        nav.ceaseTop();\r\n        let thoroughly = false;\r\n        await this.update(thoroughly);\r\n    }\r\n    private onDeployThoroughly = async () => {\r\n        nav.ceaseTop();\r\n        let thoroughly = true;\r\n        await this.update(thoroughly);\r\n    }\r\n    private async update(thoroughly:boolean) {\r\n        let url = store.uqServer + 'uq-compile/' + this.props.uq.id + '/deploy';\r\n        let actionName:string;\r\n        if (thoroughly === true) {\r\n            actionName = thoroughlyDeploy;\r\n            url += '-thoroughly';\r\n        }\r\n        else {\r\n            actionName = fastDeploy;\r\n        }\r\n        try {\r\n            let abortController = new AbortController();\r\n            let res = await fetch(url, {\r\n                method: \"POST\",\r\n                signal: abortController.signal,\r\n            });\r\n            nav.push(<CompileResult {...this.props} \r\n                actionName={actionName}\r\n                res={res} abortController={abortController} />);\r\n        }\r\n        catch (e) {\r\n            console.error('%s %s', url, e);\r\n        }\r\n    }\r\n    render() {\r\n        return <Page header={'发布 - ' + this.props.uq.name}>\r\n            <div className=\"m-3 bg-white p-3\">\r\n                <ul className=\"my-3\">\r\n                    <li>将已经编译测试过的代码，发布到生产服务器</li>\r\n                    <li>优化发布快速比较代码，仅仅对修改代码的部分发布</li>\r\n                    <li>彻底发布仅用于底层代码有突破性变化时</li>\r\n                </ul>\r\n                <div className=\"d-flex p-3\">\r\n                    <button className=\"btn btn-success\" type=\"submit\" onClick={this.onDeploy}>{fastDeploy}</button>\r\n                    <div className=\"py-2 flex-grow-1\" />\r\n                    <button className=\"btn btn-outline-warning\"\r\n                        type=\"submit\" onClick={this.onDeployThoroughly}>{thoroughlyDeploy}</button>\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n\r\ninterface UqPgeProps {\r\n    name: string;\r\n    content: string|ArrayBuffer;\r\n}\r\nclass UqPage extends React.Component<UqPgeProps> {\r\n    render() {\r\n        return <Page header={this.props.name}>\r\n            <pre className=\"px-3 py-2\">{this.props.content}</pre>\r\n        </Page>;\r\n    }\r\n}\r\n\r\ninterface CompileResultProps {\r\n    uq: DevModel.UQ;\r\n    actionName: string;\r\n    res: Response;\r\n    abortController: AbortController;\r\n}\r\ninterface CompileResultState {\r\n    texts: (string|string[])[];\r\n    seconds: number;\r\n    collaps: {[index:number]: boolean};\r\n}\r\nclass CompileResult extends React.Component<CompileResultProps, CompileResultState> {\r\n    private textSections: TextSections;\r\n    private timeHandler:any;\r\n    constructor(props:CompileResultProps) {\r\n        super(props);\r\n        this.textSections = new TextSections();\r\n        this.state = {\r\n            texts: this.textSections.sections,\r\n            seconds: -1,\r\n            collaps: {}\r\n        }\r\n    }\r\n    componentWillMount() {\r\n        nav.regConfirmClose(async ():Promise<boolean>=>{\r\n            if (this.state.seconds>=0) return true;\r\n            return new Promise<boolean>((resolve, reject) => {\r\n                try {\r\n                    if (confirm(`正在${this.props.actionName}中，真的要中止吗？`) === true) {\r\n                        try {\r\n                            this.props.abortController.abort();\r\n                        }\r\n                        catch (err) {\r\n                            console.error(err);\r\n                        }\r\n                        resolve(true);\r\n                    }\r\n                    else {\r\n                        resolve(false);\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    reject(err);\r\n                }\r\n            })\r\n        });\r\n    }\r\n    private startAutoScrollToBottom() {\r\n        this.timeHandler = setInterval(() => {\r\n            var pane = document.getElementById('bottomDiv');\r\n            pane && pane.scrollIntoView();\r\n            /*\r\n            if (pane !== undefined) {\r\n                let childNodes = pane.childNodes;\r\n                let last = childNodes.item(childNodes.length-1);\r\n                (last as HTMLElement).scrollIntoView();\r\n            }\r\n            */\r\n            //that.clearTimeHandler();\r\n        }, 100);\r\n    }\r\n    private endAutoScrollToBottom() {\r\n        setTimeout(()=>{\r\n            clearInterval(this.timeHandler);\r\n        }, 300);\r\n    }\r\n    /*\r\n    private clearTimeHandler() {\r\n        if (this.timeHandler !== undefined) {\r\n            clearTimeout(this.timeHandler);\r\n            this.timeHandler = undefined;\r\n        }\r\n    }*/\r\n    private getParent(el:HTMLElement):HTMLElement {\r\n        if (!el) return;\r\n        if (el.tagName === 'MAIN') return el;\r\n        return this.getParent(el.parentElement);\r\n    }\r\n    /*\r\n    private scrollToBottom(defer:number = 100) {\r\n        this.clearTimeHandler();\r\n        let that = this;\r\n        this.timeHandler = setTimeout(() => {\r\n            var pane = document.getElementById('bottomDiv');\r\n            pane && pane.scrollIntoView();\r\n            that.clearTimeHandler();\r\n        }, defer);\r\n    }\r\n    */\r\n    private topIntoView() {\r\n        var pane = document.getElementById('topDiv');\r\n        pane && pane.scrollIntoView();\r\n        /*\r\n        let childNodes = pane.childNodes;\r\n        let len = childNodes.length;\r\n        if (len === 0) return;\r\n        let first = childNodes.item(0);\r\n        (first as HTMLElement).scrollIntoView();\r\n        */\r\n    }\r\n    private bottomIntoView() {\r\n        var pane = document.getElementById('bottomDiv');\r\n        pane && pane.scrollIntoView();\r\n        /*\r\n        let childNodes = pane.childNodes;\r\n        let len = childNodes.length;\r\n        if (len === 0) return;\r\n        let last = childNodes.item(len-1);\r\n        (last as HTMLElement).scrollIntoView();\r\n        */\r\n    }\r\n    private doubleClick = () => {\r\n        var pane = document.getElementById('scrollDiv');\r\n        let main = this.getParent(pane);\r\n        if (!main) return;\r\n        if (main.scrollTop >= main.scrollHeight / 2) {\r\n            this.topIntoView();\r\n        }\r\n        else {\r\n            this.bottomIntoView();\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let that = this;\r\n        let time = new Date();\r\n        function consume(reader: ReadableStreamReader) {\r\n            let total = 0;\r\n            return new Promise((resolve, reject) => {\r\n                function pump() {\r\n                    reader.read().then(({done, value}) => {\r\n                        function uintToString(uintArray:number[]):string {\r\n                            var encodedString = String.fromCharCode.apply(null, uintArray),\r\n                                decodedString = decodeURIComponent(escape(encodedString));\r\n                            return decodedString;\r\n                        }        \r\n                        if (done) {\r\n                            // that.scrollToBottom();\r\n                            that.setState({\r\n                                seconds: (new Date().getTime() - time.getTime()),\r\n                            })\r\n                            resolve();\r\n                            return;\r\n                        }\r\n                        let text = uintToString(value);\r\n                        that.textSections.add(text);\r\n                        that.setState({\r\n                            texts: that.textSections.sections,\r\n                        });\r\n                        total += value.byteLength;\r\n                        //that.scrollToBottom();\r\n                        pump();\r\n                    }).catch(reject)\r\n                }\r\n                pump();\r\n            });\r\n        }\r\n        this.startAutoScrollToBottom();\r\n        try {\r\n            await consume(this.props.res.body.getReader());\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n        }\r\n        finally {\r\n            this.endAutoScrollToBottom();\r\n        }\r\n    }\r\n    private renderText = (text:string|string[], index:number):JSX.Element => {\r\n        if (Array.isArray(text)) {\r\n            let groupId = 'text-group-' + index;\r\n            let line = text[0];\r\n            let title: string;\r\n            let p0 = line.indexOf('\\n'), p:number;\r\n            if (p0 === 0) {\r\n                p0 = 1;\r\n                p = line.indexOf('\\n', p0);\r\n            }\r\n            else {\r\n                p = line.indexOf('\\n');\r\n            }\r\n            if (p < 0) p = undefined;\r\n            else {\r\n                let l = line.indexOf('(');\r\n                if (l < p) p = l;\r\n            }\r\n            title = line.substring(p0, p);\r\n\r\n            let onClick = () => {\r\n                let c = this.state.collaps[index];\r\n                if (c === false) c = true;\r\n                else c = false;\r\n                this.setState(prevState => ({\r\n                    collaps: {\r\n                        ...prevState.collaps,\r\n                        [index]: c,\r\n                    },\r\n                }));\r\n            }\r\n            let titleIcon:any, content:any;\r\n            if (this.state.collaps[index]===false) {\r\n                titleIcon = <FA name='arrow-circle-up' className='text-success' />;\r\n                content = <div>\r\n                    {\r\n                        text.map((v, i) => {\r\n                            if (v.trim().length === 0) return null;\r\n                            return <pre style={{whiteSpace: 'pre-wrap'}} key={index + '-' + i}>{v}</pre>\r\n                        })\r\n                    }\r\n                </div>;\r\n            }\r\n            else {\r\n                titleIcon = <FA name='arrow-circle-down' className='text-success' />;\r\n            }\r\n            return <React.Fragment key={index}>\r\n                <div className=\"cursor-pointer text-primary\" onClick={onClick}>{titleIcon} <u>{title}</u></div>\r\n                {content}\r\n            </React.Fragment>;\r\n        }\r\n        if (text.trim().length === 0) return null;\r\n        let parts = text.split('\\n');\r\n        return <React.Fragment key={index}>\r\n            {\r\n                parts.map((v, i) => v.length === 0?\r\n                    <div key={i}>&nbsp;</div> :\r\n                    <div key={i}>{v}</div>\r\n                )\r\n            }\r\n        </React.Fragment>;\r\n    }\r\n    render() {\r\n        let {uq, actionName} = this.props;\r\n        let {seconds, texts} = this.state;\r\n        let header = uq.name + ' - ' + actionName + (seconds>=0? \"完成\" : \"中...\");\r\n        return <Page header={header} back=\"close\">\r\n            <div id='topDiv' />\r\n            <div id='scrollDiv'\r\n                onDoubleClick={this.doubleClick} \r\n                className='py-2 px-3' \r\n                style={{wordWrap: 'break-word', whiteSpace: 'normal'}}>\r\n                {texts.map(this.renderText)}\r\n            </div>\r\n            {seconds>=0? <div className='px-3 pb-3' style={{color: 'red', fontWeight: 'bold'}}>\r\n                {actionName}完成。共计用时{Math.floor(seconds/1000)}秒\r\n            </div> : undefined}\r\n            <div id='bottomDiv' />\r\n        </Page>;\r\n    }\r\n}","import * as React from 'react';\r\nimport {nav, Page} from 'tonva';\r\nimport {IdPick, IdPickFace} from 'tonva-form';\r\nimport {List, SearchBox} from 'tonva';\r\n\r\nexport interface IdPickProps {\r\n    caption: string;\r\n    searchPlaceHolder?: string;\r\n    candidateItems: ((params:any, key:string) => Promise<any[]>) | any[];\r\n    moreCandidates: () => Promise<void>;\r\n    row: (item:any, index:number) => JSX.Element;\r\n}\r\n\r\nexport function createIdPick(props: IdPickProps):IdPick {\r\n    return function(face: IdPickFace, params: any):Promise<void> {\r\n        return new Promise<void>((resolve, reject) => {\r\n            nav.push(<IdPickPage resolve={resolve} face={face} params={params} {...props} />);\r\n        });\r\n    }\r\n}\r\n\r\ninterface IdPickPageProps extends IdPickProps {\r\n    face: IdPickFace;\r\n    resolve: (item?: any) => void;\r\n    params: any;\r\n}\r\ninterface IdPickPageState {\r\n    items?: any[];\r\n}\r\n\r\nclass IdPickPage extends React.Component<IdPickPageProps, IdPickPageState> {\r\n    private items:any[];\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: null,\r\n        }\r\n        this.itemClick = this.itemClick.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n    }\r\n    async componentDidMount() {\r\n        let {face, candidateItems, params} = this.props;\r\n        this.setState({\r\n            items: Array.isArray(candidateItems)? candidateItems : await candidateItems(params, ''),\r\n        });\r\n    }\r\n    itemClick(item:any) {\r\n        let {resolve} = this.props;\r\n        resolve(item);\r\n        nav.pop();\r\n    }\r\n    async onSearch(key: string) {\r\n        //alert('search ' + key);\r\n        //await store.dev.searchServer.first(key)\r\n        let {candidateItems, params} = this.props;\r\n        if (typeof candidateItems === 'function') {\r\n            let ret = await candidateItems(params, key);\r\n            this.setState({items: ret});\r\n        }\r\n    }\r\n    render() {\r\n        let {caption, row, searchPlaceHolder} = this.props;\r\n        return <Page header={caption} back=\"close\">\r\n            <div className=\"container\">\r\n                <SearchBox className=\"my-2\" \r\n                    onSearch={this.onSearch} \r\n                    placeholder={searchPlaceHolder}\r\n                    maxLength={100} />\r\n            </div>\r\n            <List items={this.state.items} item={{onClick:this.itemClick, render:row}} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { DevModel } from 'model';\r\nimport { IdPickProps, createIdPick } from 'createIdPick';\r\nimport { store } from 'store';\r\nimport { Field, FormRow, StringFace, TextAreaFace, TonvaForm, SubmitResult } from 'tonva-form';\r\nimport { UQController } from './uqController';\r\nimport { VPage, nav, Page } from 'tonva';\r\n\r\nconst ServerCaption = (item:DevModel.Server) => {\r\n    let {discription, cloud, ip} = item;\r\n    return <>{discription} {cloud} {ip}</>;\r\n}\r\n\r\nconst idPickServerProps: IdPickProps = {\r\n    caption: '选择服务器',\r\n    searchPlaceHolder: '搜索服务器',\r\n    candidateItems: async (params:any, key:string) => {\r\n        await store.dev.searchServer.first(key);\r\n        return store.dev.searchServer.items;\r\n    },\r\n    moreCandidates: async () => {\r\n        await store.dev.searchServer.more();\r\n    },\r\n    row: (item:DevModel.Server, index:number) => {\r\n        return <div className=\"px-3 py-2\"><ServerCaption {...item} /></div>;\r\n    },\r\n};\r\n\r\nconst urlField:Field = {name: 'url', type: 'string', required:true, maxLength:200};\r\nconst urlTestField:Field = {name: 'urlTest', type: 'string', required:false, maxLength:200};\r\nconst serverField:Field = {name: 'server', type: 'id'};\r\nconst dbTypeField:Field = {name: 'db_type', type: 'string', maxLength:20, defaultValue:'mysql'};\r\nconst dbField:Field = {name: 'db', type: 'string', maxLength:50, required: true};\r\nconst connectionField:Field = {name:'connection', type:'string', maxLength:250};\r\n\r\nconst urlRow = {\r\n    label: 'URL',\r\n    field: urlField,\r\n};\r\n\r\nconst urlRowTest = {\r\n    label: 'URL-Test',\r\n    field: urlTestField,\r\n    face: {placeholder:'如果同URL，请不要输入'}\r\n};\r\n\r\nconst serverRow = {\r\n    label: '服务器', \r\n    field: serverField,\r\n    face: {\r\n        type: 'pick-id', \r\n        initCaption: '请选择服务器', \r\n        pick: createIdPick(idPickServerProps), //this.idPick,\r\n        fromPicked: (item:DevModel.Server)=>{\r\n            return {\r\n                id: item.id, \r\n                caption: <ServerCaption {...item} />,\r\n            };\r\n        },\r\n        itemFromId: (id:number)=>store.cacheServers.get(id),\r\n    },\r\n};\r\n\r\nconst dbTypeRow:FormRow = {\r\n    label: '数据库类型',\r\n    field: dbTypeField,\r\n    face: {\r\n        type: 'string',\r\n        readonly: true,\r\n    } as StringFace\r\n};\r\n\r\nconst dbRow = {\r\n    label: '数据库名字',\r\n    field: dbField,\r\n};\r\n\r\nconst connectionRow = {\r\n    label: '连接字符串',\r\n    field: connectionField,\r\n    face: {\r\n        type: 'textarea',\r\n        maxLength: 250,\r\n        rows: 8,\r\n    } as TextAreaFace,\r\n};\r\n\r\nexport class NewServicePage extends VPage<UQController> {\r\n    private tonvaForm:TonvaForm;\r\n    private formRows:FormRow[] = [\r\n        urlRow,\r\n        urlRowTest,\r\n        serverRow,\r\n        dbTypeRow,\r\n        dbRow,\r\n        connectionRow\r\n    ];\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n    private onSubmit = async (values:any):Promise<SubmitResult | undefined> => {\r\n        /*\r\n        if (values.url.indexOf('/uq/')<0) {\r\n            this.tonvaForm.formView.setError('url', 'service url 必须包含/uq/');\r\n            return;\r\n        }\r\n        */\r\n        values.type = 2; // uq type, to be removed\r\n        values.bindId = this.controller.uq.id;\r\n        let ret = await this.controller.saveService(values);\r\n        if (ret === 0) {\r\n            /*\r\n            if (this.tonvaForm !== undefined) {\r\n                this.tonvaForm.formView.setError('url', '已经有Service使用这个url');\r\n            }\r\n            */\r\n            return;\r\n        }\r\n        nav.pop();\r\n        return;\r\n    }\r\n    private page = () => {\r\n        return <Page header=\"新建Service\">\r\n            <TonvaForm ref={t=>this.tonvaForm=t} className=\"m-3\" formRows={this.formRows} onSubmit={this.onSubmit} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { Page, VPage, nav } from 'tonva';\r\nimport { UQController } from './uqController';\r\nimport { DevModel } from 'model';\r\nimport { Prop, PropGrid } from 'tonva';\r\nimport { StringValueEdit, ServerSpan, TextValueEdit } from 'tools';\r\n\r\nexport class ServicePage extends VPage<UQController> {\r\n    @observable private service: DevModel.Service;\r\n    async open(service: DevModel.Service) {\r\n        this.service = service;\r\n        this.openPage(this.page);\r\n    }\r\n    private async changeProp(prop:string, value:any):Promise<any> {\r\n        return await this.controller.changeServiceProp(this.service, prop, value);\r\n    }\r\n    private onUrlChanged = async (value:any, orgValue:any):Promise<string|void> => {\r\n        /*\r\n        if ((value as string).indexOf('/uq/')<0) {\r\n            return 'URL必须包含/uq/';\r\n        }\r\n        */\r\n        let ret = await this.changeProp('url', value);\r\n        if (ret === 0) {\r\n            //return 'URL已经被使用了';\r\n            return;\r\n        }\r\n        this.service.url = value;\r\n    }\r\n    private onUrlTestChanged = async (value:any, orgValue:any):Promise<string|void> => {\r\n        /*\r\n        if ((value as string).indexOf('/uq/')<0) {\r\n            return 'URL必须包含/uq/';\r\n        }\r\n        */\r\n        let ret = await this.changeProp('urlTest', value);\r\n        if (ret === 0) {\r\n            //return 'URL已经被使用了';\r\n            return;\r\n        }\r\n        this.service.urlTest = value;\r\n    }\r\n    private onDbChanged = async (value:any, orgValue:any):Promise<string|void> => {\r\n        let ret = await this.changeProp('db', value);\r\n        if (ret === 0) {\r\n            return 'Db已经被使用了';\r\n        }\r\n        this.service.db = value;\r\n    }\r\n    private onDbTypeChanged = async (value:string, orgValue:any):Promise<string|void> => {\r\n        if (value === undefined || value === null) return;\r\n        if (value.toLowerCase().trim() !== 'mysql') return '目前只支持mysql';\r\n        let ret = await this.changeProp('db_type', value);\r\n        this.service.db_type = value;\r\n    }\r\n    private onConnectionChanged = async (value:string, orgValue:any):Promise<string|void> => {        \r\n        await this.changeProp('connection', value);\r\n        this.service.connection = value;\r\n    }\r\n    private onDeleteClick = async () => {\r\n        if (confirm(\"真的要删除Service吗？删除了不可恢复，需要重新录入。\")!==true) return;\r\n        await this.controller.delService(this.service);\r\n        nav.pop();\r\n    }\r\n    private page = () => {\r\n        let {uq} = this.controller;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'string',\r\n                name: 'url',\r\n                label: 'URL',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"修改URL\"\r\n                    value={this.service.url}\r\n                    onChanged={this.onUrlChanged} />)\r\n            },\r\n            {\r\n                type: 'string',\r\n                name: 'urlTest',\r\n                label: 'URL-Test',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"修改URL-Test\"\r\n                    value={this.service.urlTest}\r\n                    onChanged={this.onUrlTestChanged} />)\r\n            },\r\n            {\r\n                type: 'component',\r\n                label: '服务器',\r\n                component: <ServerSpan id={this.service.server} />\r\n            },\r\n            {\r\n                type: 'string',\r\n                name: 'db_type',\r\n                label: '数据库类型',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"数据库类型\"\r\n                    value={this.service.db_type}\r\n                    onChanged={this.onDbTypeChanged} />)\r\n            },\r\n            {\r\n                type: 'string',\r\n                name: 'db',\r\n                label: '数据库名',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"数据库名字\"\r\n                    value={this.service.db}\r\n                    onChanged={this.onDbChanged} />)\r\n            },\r\n            {\r\n                type: 'string',\r\n                name: 'connection',\r\n                label: '连接字符串',\r\n                onClick: ()=>nav.push(<TextValueEdit\r\n                    title=\"连接字符串\"\r\n                    value={this.service.connection}\r\n                    onChanged={this.onConnectionChanged} />)\r\n            },\r\n        ];\r\n        let right = <button onClick={this.onDeleteClick} className=\"btn btn-success\">删除</button>;\r\n        return <Page header={'UQ - ' + uq.name} right={right}>\r\n            <PropGrid rows={rows} values={this.service} />\r\n        </Page>\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { UQController } from './uqController';\r\nimport { VPage, nav, Page } from 'tonva';\r\nimport { SubmitResult, TonvaForm } from 'tonva-form';\r\n\r\nconst formRows = [\r\n    {\r\n        label: '名称', \r\n        field: {name: 'name', type: 'string', maxLength: 100, required: true},\r\n    },\r\n    {\r\n        label: '描述',\r\n        field: {name: 'discription', type: 'string', maxLength: 250},\r\n        face: {type: 'textarea'}\r\n    },\r\n    //{\r\n    //    label: '入口',\r\n    //    field: {name: 'access', type: 'string', maxLength: 250},\r\n    //    face: {type: 'textarea', placeholder: '逗号分隔的入口名'}\r\n    //},\r\n];\r\n\r\n\r\nexport abstract class EditBasePage extends VPage<UQController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n    protected onSubmit = async (values:any):Promise<SubmitResult> => {\r\n        await this.controller.saveUq(values);\r\n        nav.pop();\r\n        return;\r\n    }\r\n    protected page: ()=>JSX.Element;\r\n    protected form(initValues:any):JSX.Element {\r\n        return <TonvaForm\r\n            className=\"m-3\"\r\n            formRows={formRows} \r\n            onSubmit={this.onSubmit} initValues={initValues} />\r\n    }\r\n}\r\n\r\nexport class EditPage extends EditBasePage {\r\n    protected page = () => {\r\n        let {uq} = this.controller;\r\n        let {name} = uq;\r\n        return <Page header={'修改UQ - ' + name} back=\"close\">\r\n            {this.form(uq)}\r\n        </Page>;\r\n    }\r\n}\r\n\r\nexport class NewPage extends EditBasePage {\r\n    protected page = () => {\r\n        return <Page header={'新建UQ'} back=\"close\">\r\n            {this.form({})}\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, nav } from 'tonva';\r\nimport { UQController } from './uqController';\r\nimport { IdDates, UnitSpan, ServerSpan } from 'tools';\r\nimport { Prop, Media, LMR, FA, PropGrid, Muted, List, EasyDate, DropdownActions } from 'tonva';\r\nimport { DevModel } from 'model';\r\nimport { EditPage } from './editPage';\r\nimport { store } from 'store';\r\n\r\nexport class UQPage extends VPage<UQController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private editItem = async () => {\r\n        await this.openVPage(EditPage);\r\n        //nav.push(<EditAppPage {...this.props} />);\r\n    }\r\n\r\n    private deleteItem = async () => {\r\n        if (confirm('真的要删除UQ吗？') === true) {\r\n            await this.controller.deleteUq();\r\n            nav.pop();\r\n        }\r\n    }\r\n\r\n    private page = ():JSX.Element => {\r\n        let {onUqUpload, onUqDeploy, serviceClick, uq, services} = this.controller;\r\n        let {isOwner} = store.unit;\r\n        let {id, name, discription, access, unit, date_init, date_update} = uq;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let menuItems = [\r\n            {caption:'修改UQ', action:this.editItem, icon:'edit' },\r\n            {caption:'删除', action:this.deleteItem, icon:'trash-o' }\r\n        ];\r\n        let right = isOwner>0 && <DropdownActions actions={menuItems} />;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <LMR className=\"py-2\"\r\n                    left={<FA name=\"database\" className=\"text-primary fa-2x mr-3\" />}>\r\n                    <div><b>{name}</b></div>\r\n                    {disp}\r\n                </LMR>\r\n            },\r\n            {\r\n                type: 'component', \r\n                label: '开发号', \r\n                component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> \r\n            },\r\n           '',\r\n           {\r\n                type: 'component', \r\n                label: '编译代码', \r\n                component: <LMR onClick={onUqUpload} className=\"w-100 py-2 cursor-pointer\" \r\n                    left=\"上传编译UQ代码\" right={<FA className=\"align-self-center\" name=\"chevron-right\" />} />\r\n            },\r\n            {\r\n                type: 'component', \r\n                label: '发布UQ', \r\n                component: <LMR onClick={onUqDeploy} className=\"w-100 py-2 cursor-pointer\" \r\n                    left=\"发布UQ服务器\" right={<FA className=\"align-self-center\" name=\"chevron-right\" />} />\r\n            },\r\n            /*\r\n            {type: 'component', label: 'ACCESS', component: <div className=\"py-2\">{\r\n                access? \r\n                    access.split(',').join(', ')\r\n                    : <Muted>(全)</Muted>\r\n            }</div> },\r\n            */\r\n        ];\r\n        let btnAddService = isOwner>0 && <button\r\n            className=\"btn btn-outline-primary btn-sm\"\r\n            onClick={()=>this.controller.showNewServicePage()}>\r\n            增加\r\n        </button>;\r\n        \r\n        let onServiceClick:any;\r\n        if (isOwner>0) onServiceClick = serviceClick;\r\n\r\n        return <Page header={'UQ - ' + name} right={right}>\r\n            <PropGrid rows={rows} values={uq} />\r\n            <div className=\"d-flex mx-3 mt-3 mb-1 align-items-end\">\r\n                <Muted style={{display:'block', flex:1}}>Service</Muted>\r\n                {btnAddService}\r\n            </div>\r\n            <List items={services} item={{render:this.renderService, onClick:onServiceClick}} />\r\n        </Page>;\r\n    }\r\n    private renderService(service:DevModel.Service, index:number):JSX.Element {\r\n        let {url, server, db, db_type, compile_time} = service;\r\n        let compile = !compile_time?\r\n            <Muted>未编译</Muted> :\r\n            <><Muted>编译: </Muted><EasyDate date={compile_time}/></>;\r\n\r\n        return <LMR className=\"d-flex w-100 align-items-center cursor-pointer py-2 px-3\"\r\n            right={<small>{compile}</small>}\r\n            >\r\n            <div>\r\n                <div>{url}</div>\r\n                <div>{db_type} {db}</div>\r\n                <Muted><ServerSpan id={server} /></Muted>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page } from 'tonva';\r\nimport { UQController } from './uqController';\r\nimport { List, LMR, Badge, Muted, FA } from 'tonva';\r\nimport { DevModel } from 'model';\r\nimport { NewPage } from './editPage';\r\nimport { store } from 'store';\r\n\r\nexport class ListPage extends VPage<UQController> {\r\n    async open(param:any) {\r\n        this.openPage(this.page);\r\n    }\r\n    private newItem = () => {\r\n        this.controller.uq = undefined;\r\n        this.openVPage(NewPage);\r\n    }\r\n    private page = ():JSX.Element => {\r\n        let {uqList: list, listRowClick} = this.controller;\r\n        let {isOwner} = store.unit;\r\n        let right = isOwner>0 && <button className='btn btn-secondary btn-sm' onClick={()=>this.newItem()}><FA name=\"plus\" /></button>;\r\n        return <Page header=\"UQ\" right={right}>\r\n            <List items={list} item={{render: this.listRow, onClick: listRowClick}} />\r\n        </Page>\r\n    }\r\n    private listRow = (item:DevModel.UQ):JSX.Element => {\r\n        let {name, discription, service_count} = item;\r\n        return <LMR className=\"py-1 px-3 align-items-center\"\r\n            left={<FA name=\"database\" className=\"text-primary fa-lg\" />}\r\n            right={<>{service_count}</>}>\r\n            <div className=\"py-2 px-3\">\r\n                <div><b>{name}</b></div>\r\n                <div><Muted>{discription}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { observable } from 'mobx';\r\nimport { nav, Controller } from 'tonva';\r\nimport { DevModel } from '../../model';\r\nimport { UqUpload, UqUploadProps, UqDeploy } from './uqUpload';\r\nimport { devApi } from 'api';\r\nimport { NewServicePage } from './newServicePage';\r\nimport { ServicePage } from './servicePage';\r\nimport { UQPage } from './uqPage';\r\nimport { ListPage } from './listPage';\r\n\r\nexport class UQController extends Controller {\r\n    private unitId: number;\r\n    uq: DevModel.UQ;\r\n    access: string;\r\n    entities: string;\r\n    @observable uqList: DevModel.UQ[];\r\n    @observable services: DevModel.Service[];\r\n    protected async internalStart(unitId:any) {\r\n        this.unitId = unitId;\r\n        this.uqList = await devApi.uqs(this.unitId);\r\n        this.openVPage(ListPage);\r\n    }\r\n\r\n    listRowClick = async (item:DevModel.UQ) => {\r\n        this.uq = item;\r\n        await this.loadUqEntities(item.id);\r\n        this.openVPage(UQPage);\r\n    }\r\n\r\n    private async loadUqEntities(uqId: number) {\r\n        let ret = await devApi.uqGetEntities(this.unitId, uqId);\r\n        let r0 = ret[0][0];\r\n        this.access = r0.access;\r\n        this.entities = r0.entities;\r\n        this.services = ret[1];\r\n    }\r\n\r\n    serviceClick = (service: DevModel.Service) => {\r\n        this.openVPage(ServicePage, service);\r\n    }\r\n\r\n    onUqUpload = async() => {\r\n        let onDispose = () => {}\r\n        nav.push(<UqUpload uq={this.uq} services={this.services} />, onDispose);\r\n    }\r\n\r\n    onUqDeploy = async() => {\r\n        let onDispose = () => {}\r\n        nav.push(<UqDeploy uq={this.uq} services={this.services} />, onDispose);\r\n    }\r\n\r\n    saveUq = async (values: DevModel.UQ) => {\r\n        let uq: DevModel.UQ;\r\n        if (this.uq === undefined) {\r\n            uq = _.clone(values);\r\n        }\r\n        else {\r\n            uq = _.clone(this.uq);\r\n            _.merge(uq, values);\r\n        }\r\n        uq.unit = this.unitId;\r\n        let ret = await devApi.saveUq(uq);\r\n        uq.id = ret;\r\n        this.uqList.push(uq);\r\n    }\r\n\r\n    deleteUq = async () => {\r\n        await devApi.delUq(this.unitId, this.uq.id);\r\n        let index = this.uqList.findIndex(v => v.id === this.uq.id);\r\n        if (index >= 0) this.uqList.splice(index);\r\n    }\r\n\r\n    async changeServiceProp(service: DevModel.Service, prop:string, value:any):Promise<any> {\r\n        return await devApi.changeServiceProp(this.unitId, service.id, prop, value);\r\n    }\r\n\r\n    async saveService(service: DevModel.Service):Promise<number> {\r\n        let svc = _.clone(service);\r\n        svc.unit = this.unitId;\r\n        if (!svc.urlTest) svc.urlTest = '-';\r\n        let ret = await devApi.saveService(svc);\r\n        svc.id = ret;\r\n        this.services.push(svc);\r\n        return ret;\r\n    }\r\n\r\n    async delService(service: DevModel.Service) {\r\n        await devApi.delService(this.unitId, service.id);\r\n        let index = this.services.findIndex(v => v.id == service.id);\r\n        if (index >= 0) this.services.splice(index);\r\n    }\r\n\r\n    showNewServicePage = async () => {\r\n        await this.openVPage(NewServicePage);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {LMR, Badge, Muted} from 'tonva';\r\n\r\nexport interface RowProps {\r\n    icon: string;\r\n    main: string|JSX.Element;\r\n    vice: string|JSX.Element;\r\n}\r\n\r\nexport class Row extends React.Component<RowProps> {\r\n    render() {\r\n        let {icon, main, vice} = this.props;\r\n        return <LMR className=\"py-1 px-3 align-items-stretch\"\r\n            left={<Badge size=\"sm\" className=\"pt-1\"><img src={icon} /></Badge>}>\r\n            <div className=\"px-3\">\r\n                <div><b>{main}</b></div>\r\n                <div><Muted>{vice}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport _ from 'lodash';\r\nimport {EasyDate, Media, \r\n    Prop, ListProp, PropGrid, List, SearchBox, LMR, Badge, Muted} from 'tonva';\r\nimport {UnitSpan, IdDates, ServerSpan} from '../tools';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {DevModel} from '../model';\r\nimport {store} from '../store';\r\nimport {Row} from './row';\r\nimport {ObjViewProps} from './ObjViewProps';\r\n\r\n@observer\r\nclass Info extends React.Component<DevModel.Bus> {\r\n    /*\r\n    private rows: Prop[];\r\n    constructor(props:any) {\r\n        super(props);\r\n        let {unit, name, discription, schema, date_init, date_update} = this.props;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={name} discription={disp} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                label: 'Schema',\r\n                vAlign: 'stretch',\r\n                component: <SchemaView />,\r\n            },\r\n        ];\r\n    }*/\r\n    async componentDidMount() {\r\n        //await store.dev.buses.loadCurApis();\r\n    }\r\n    render() {\r\n        let {unit, name, discription, schema, date_init, date_update} = this.props;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={name} discription={disp} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                label: 'Schema',\r\n                vAlign: 'stretch',\r\n                component: <SchemaView />,\r\n            },\r\n        ];\r\n        return <div>\r\n            <PropGrid rows={rows} values={this.props} />\r\n        </div>\r\n    }\r\n}\r\n\r\n@observer\r\nexport class SchemaView extends React.Component {\r\n    render() {\r\n        let bus = store.dev.buses.cur;\r\n        if (bus === null) return '...';\r\n        let content = bus.schema;\r\n        return <div className=\"d-flex py-2 w-100 align-items-center\" style={{flex:1}}>\r\n            <pre>\r\n                {content}\r\n            </pre>\r\n        </div>;\r\n\r\n    }\r\n}\r\n\r\nconst busesProps:ObjViewProps<DevModel.Bus> = {\r\n    title: 'BUS',\r\n    formRows: [\r\n        {\r\n            label: '名称', \r\n            field: {name: 'name', type: 'string', maxLength: 100, required: true},\r\n        },\r\n        {\r\n            label: '描述',\r\n            field: {name: 'discription', type: 'string', maxLength: 250},\r\n            face: {type: 'textarea'}\r\n        },\r\n        {\r\n            label: 'Schema',\r\n            field: {name: 'schema', type: 'string', maxLength: 2500},\r\n            face: {type: 'textarea', rows: 8}\r\n        },\r\n    ],\r\n    row: (item:DevModel.Bus):JSX.Element => {\r\n        let {owner, name, discription} = item;\r\n        return <Row icon={appItemIcon} main={owner + ' / ' + name} vice={discription} />;\r\n    },\r\n    items: ()=>store.dev.buses,\r\n    repeated: {\r\n        name: 'name',\r\n        err: '跟已有的名称重复',\r\n    },\r\n    info: Info,\r\n};\r\n\r\nexport default busesProps;\r\n","import * as React from 'react';\r\nimport {Prop, PropGrid, LMR, Muted, FA} from 'tonva';\r\nimport {UnitSpan, IdDates} from '../tools';\r\nimport {DevModel} from '../model';\r\nimport {store} from '../store';\r\nimport {ObjViewProps} from './ObjViewProps';\r\n\r\nclass Info extends React.Component<DevModel.Server> {\r\n    render() {\r\n        let {discription, cloud, ip, unit, date_init, date_update} = this.props;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;        \r\n        //<Media icon={appIcon} main={discription} discription={ip} />},\r\n        let rows:Prop[] = [\r\n            '',\r\n            {type: 'component', component: <LMR className=\"py-2\"\r\n                left={<FA name=\"server\" className=\"text-primary fa-2x mr-3\" />}>\r\n                <div><b>{ip}</b></div>\r\n                {disp}\r\n            </LMR>},\r\n            '',\r\n            {type: 'component', label: '开发号', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            {type: 'string', label: '云服务', name: 'cloud'},\r\n        ];\r\n        return <div>\r\n            <PropGrid rows={rows} values={this.props} />\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst serversProps:ObjViewProps<DevModel.Server> = {\r\n    title: 'Server',\r\n    info: Info,\r\n    formRows: [\r\n        {\r\n            label: '描述', \r\n            field: {name: 'discription', type: 'string', maxLength: 50, required: true},\r\n        },\r\n        {\r\n            label: '云服务商', \r\n            field: {name: 'cloud', type: 'string', maxLength: 20, required: true},\r\n        },\r\n        {\r\n            label: 'IP地址', \r\n            field: {name: 'ip', type: 'string', maxLength: 20},\r\n        },\r\n    ],\r\n    row: (item: DevModel.Server):JSX.Element => {\r\n        let {discription, cloud} = item;\r\n        //return <Row main={item.discription} vice={<>{item.cloud}  {item.ip}</>} />;\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n            left={<FA name=\"server\" className=\"text-primary fa-lg\" />}>\r\n            <div className=\"px-3\">\r\n                <div><b>{discription}</b></div>\r\n                <div><Muted>{cloud}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    },\r\n    items: ()=>store.dev.servers,\r\n    repeated: {\r\n        name: 'discription',\r\n        err: '重复的描述',\r\n    }\r\n};\r\n\r\nexport default serversProps;\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page} from 'tonva';\r\nimport {FormRow, TonvaForm, Step, MultiStep, SubmitResult} from 'tonva-form';\r\nimport {DropdownActions, Action, List, FA} from 'tonva';\r\nimport {DevModel} from '../model';\r\nimport { ObjViewProps } from './ObjViewProps';\r\nimport { store } from 'store';\r\n\r\n@observer\r\nexport class ObjView<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    async componentDidMount() {\r\n        await this.props.items().load();\r\n    }\r\n    //converter(item:T):ListItem {\r\n    //    return this.props.converter(item);\r\n    //}\r\n    newItem() {\r\n        this.props.items().cur = undefined;\r\n        nav.push(<New {...this.props} />);\r\n    }\r\n    itemClick = (item:T) => {\r\n        this.props.items().cur = observable(item);\r\n        nav.push(<Info {...this.props} />);\r\n    }\r\n    render() {\r\n        let {title, items} = this.props;\r\n        let {isOwner} = store.unit;\r\n        let right = isOwner>0 && <button className='btn btn-secondary btn-sm' onClick={()=>this.newItem()}><FA name=\"plus\" /></button>;\r\n        return <Page header={title} right={right}>\r\n            <List items={items().items}\r\n                item={{render: this.props.row, onClick: this.itemClick}}\r\n                // converter={this.props.converter} \r\n                //itemClick={this.itemClick} \r\n                />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass New<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    async onSubmit(values:any):Promise<SubmitResult> {\r\n        if (await this.props.items().check(values) === false) return;\r\n        let ret = await this.props.items().saveCur(values);\r\n        if (ret === true) {\r\n            nav.pop();\r\n        }\r\n        else {\r\n            let repeated = this.props.repeated;\r\n            //this.formView.setError(repeated.name, repeated.err);\r\n        }\r\n        return;\r\n    }\r\n    render() {\r\n        let content;\r\n        let {title, steps, stepHeader} = this.props;\r\n        let {formRows, items} = this.props;\r\n        if (steps !== undefined) {\r\n            content = <MultiStep className=\"mt-4\" header={stepHeader} steps={steps} first=\"step1\" onSubmit={this.onSubmit} />;\r\n        }\r\n        else if (formRows !== undefined) {\r\n            content = <TonvaForm \r\n                className=\"m-3\"\r\n                formRows={formRows} \r\n                onSubmit={this.onSubmit} initValues={items().cur} />;\r\n        }\r\n        else {\r\n            content = 'ObjViewProps: no steps and no formRows';\r\n        }\r\n        return <Page header={'新增'+title}>\r\n            {content}\r\n        </Page>\r\n    }\r\n}\r\n\r\n@observer\r\nclass Info<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    private menuItems = [\r\n        {caption:'修改' + this.props.title, action:this.editItem.bind(this), icon:'edit' },\r\n        {caption:'删除', action:this.deleteItem.bind(this), icon:'trash-o' }\r\n    ];\r\n    async deleteItem() {\r\n        if (confirm('真的要删除吗？系统删除时并不会检查相关引用，请谨慎') === true) {\r\n            await this.props.items().del();\r\n            nav.pop();\r\n        }\r\n    }\r\n    editItem() {\r\n        nav.push(<Edit {...this.props} />);\r\n    }\r\n    render() {\r\n        let actions = [];\r\n        let ex = this.props.extraMenuActions;\r\n        if (ex !== undefined) actions.push(...ex);\r\n        actions.push(...this.menuItems);        \r\n        let right = <DropdownActions actions={actions} />\r\n        let item = this.props.items().cur;\r\n        return <Page header={this.props.title + ' - 详细资料'} right={right}>\r\n            <this.props.info {...item} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass Edit<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    private actions = [\r\n        {caption:'删除', action:this.deleteItem.bind(this), icon:'trash-o' }\r\n    ];\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    componentWillMount() {\r\n    }\r\n    async onSubmit(values:any):Promise<SubmitResult> {\r\n        if (await this.props.items().check(values) === false) return;\r\n        await this.props.items().saveCur(values);\r\n        nav.pop();\r\n        return;\r\n    }\r\n    async deleteItem() {\r\n        if (confirm('真的要删除吗？系统删除时并不会检查相关引用，请谨慎') === true) {\r\n            await this.props.items().del();\r\n            nav.pop();\r\n        }\r\n    }\r\n    render() {\r\n        let right = <DropdownActions actions={this.actions} />\r\n        return <Page header={'修改 '+this.props.title} right={right} back=\"close\">\r\n            <TonvaForm \r\n                className=\"m-3\"\r\n                formRows={this.props.formRows} \r\n                onSubmit={this.onSubmit} initValues={this.props.items().cur} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from 'tonva';\r\nimport { List, SearchBox, LMR, FA } from 'tonva';\r\nimport { UsersController, UserApps, AppUsers } from './cUsers';\r\n\r\nexport class VApps extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private renderRow = (appUsers: AppUsers, index:number):JSX.Element => {\r\n        let {app, more, users} = appUsers;\r\n        let {id, name, discription} = app;\r\n        let right = <small className=\"text-muted\">{discription}</small>;\r\n        return <div className=\"d-block px-3 py-2\">\r\n            <LMR className=\"mb-2\" right={right}>\r\n                <FA name=\"address-card-o\" className=\"text-primary mr-3\" />\r\n                <b>{name}</b>\r\n            </LMR>\r\n            <div>\r\n                <small className=\"text-muted\">用户: </small>\r\n                {users.length===0?\r\n                    '[无]':\r\n                    users.map(u => u.assigned || u.nick || u.name).join(', ') + (more===true? ' ...' : '')}\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {appUsersList, searchApp, onAppsClick} = this.controller;\r\n        let searchBox = <SearchBox className=\"w-100 pr-1\" \r\n            onSearch={searchApp} \r\n            placeholder=\"搜索App\" \r\n            allowEmptySearch={true} />;\r\n        return <Page header={searchBox}>\r\n            <List items={appUsersList} \r\n                item={{render: this.renderRow, onClick:onAppsClick,  key: (item=>item.app.id)}} />\r\n        </Page>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from 'tonva';\r\nimport { List, SearchBox, LMR, FA } from 'tonva';\r\nimport { UsersController, UserApps } from './cUsers';\r\n\r\nexport class VUsers extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private renderRow = (userApps: UserApps, index:number):JSX.Element => {\r\n        let {user, apps} = userApps;\r\n        let {id, name, nick, icon, assigned} = user;\r\n        return <div className=\"d-block px-3 py-2\">\r\n            <div className=\"mb-2\">\r\n                <FA name=\"user-o\" className=\"text-primary mr-3\" />\r\n                <b>{assigned || nick || name}</b>\r\n            </div>\r\n            <div>\r\n                <small className=\"text-muted\">App: </small>\r\n                {apps.length===0?'[无]':apps.map(a => a.name).join(', ')}\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {userAppsList, searchUser, onUsersClick} = this.controller;\r\n        let searchBox = <SearchBox className=\"w-100 pr-1\" \r\n            onSearch={searchUser} \r\n            placeholder=\"搜索用户\" \r\n            allowEmptySearch={true} />;\r\n        return <Page header={searchBox}>\r\n            <List items={userAppsList} \r\n                item={{render: this.renderRow, onClick:onUsersClick, key: (item=>item.user.id)}} />\r\n        </Page>;\r\n    });\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from 'tonva';\r\nimport { List } from 'tonva';\r\nimport { UsersController, User } from './cUsers';\r\n\r\nexport class VApp extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curApp, curAppUsers, onAppEditUsers} = this.controller;\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={()=>onAppEditUsers()}>增减用户</button>;\r\n        return <Page header={'App - ' + (curApp.name)} right={right}>\r\n            <List items={curAppUsers} item={{render:this.renderApp}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderApp = (user: User, index:number):JSX.Element => {\r\n        let {name, nick, assigned} = user;\r\n        let content:any;\r\n        if (assigned)\r\n            content = <span>{assigned} &nbsp; <small className=\"text-muted\">{name}</small></span>;\r\n        else if (nick)\r\n            content = <span>{nick} &nbsp; <small className=\"text-muted\">{name}</small></span>;\r\n        else\r\n            content = <>{name}</>\r\n        return <div className=\"px-3 py-2\">{content}</div>\r\n    }\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from 'tonva';\r\nimport { List, SearchBox, LMR } from 'tonva';\r\nimport { UsersController, UserApps, AppUsers, App } from './cUsers';\r\n\r\nexport class VUser extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curUser, curUserApps, onUserEditApps} = this.controller;\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={()=>onUserEditApps()}>增减App</button>;\r\n        return <Page header={'用户 - ' + (curUser.assigned || curUser.nick || curUser.name)}\r\n            right={right}>\r\n            <List items={curUserApps} item={{render:this.renderApp}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderApp = (app: App, index:number):JSX.Element => {\r\n        let {name, discription} = app;\r\n        return <div className=\"px-3 py-2\">{name} {discription}</div>\r\n    }\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from 'tonva';\r\nimport { List, SearchBox, LMR, Muted, FA } from 'tonva';\r\nimport { UsersController, EditUser } from './cUsers';\r\n\r\nexport class VAppEditUsers extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curApp, appEditUsers, onAppEditUsers} = this.controller;\r\n        return <Page header={curApp.name + ' - 增减用户'} >\r\n            <List items={appEditUsers} item={{render:this.renderUser}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderUser = (editUser: EditUser, index:number):JSX.Element => {\r\n        let {name, nick, assigned, bind} = editUser;\r\n        let content:any;\r\n        if (assigned)\r\n            content = <>{assigned} <Muted>{name}</Muted></>;\r\n        else if (nick)\r\n            content = <>{nick} <Muted>{name}</Muted></>;\r\n        else\r\n            content = <>{name}</>\r\n        let right = <input type=\"checkbox\" defaultChecked={bind===1} \r\n            onChange={(evt)=>this.onUserChanged(editUser, evt.target.checked)} />;\r\n        return <LMR className=\"px-3 py-2 align-items-center\" right={right}>\r\n            {content}\r\n        </LMR>\r\n    }\r\n\r\n    private onUserChanged = async (editUser: EditUser, checked:boolean) => {\r\n        await this.controller.bindAppUser(editUser, checked);\r\n        editUser.bind = checked===true? 1: 0;\r\n    }\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from 'tonva';\r\nimport { List, SearchBox, LMR } from 'tonva';\r\nimport { UsersController, UserApps, AppUsers, App, EditApp } from './cUsers';\r\n\r\nexport class VUserEditApps extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curUser, userEditApps, onUserEditApps} = this.controller;\r\n        return <Page header={'增减App - ' + (curUser.assigned || curUser.nick || curUser.name)}>\r\n            <List items={userEditApps} item={{render:this.renderApp}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderApp = (editApp: EditApp, index:number):JSX.Element => {\r\n        let {name, discription, bind} = editApp;\r\n        let right = <input type=\"checkbox\" defaultChecked={bind===1} \r\n            onChange={(evt)=>this.onAppChanged(editApp, evt.target.checked)} />;\r\n        return <LMR className=\"px-3 py-2\" right={right}>\r\n            {name} {discription}\r\n        </LMR>\r\n    }\r\n\r\n    private onAppChanged = async (editApp: EditApp, checked:boolean) => {\r\n        await this.controller.bindUserApp(editApp, checked);\r\n        editApp.bind = checked===true? 1: 0;\r\n    }\r\n}","import * as React from 'react';\r\nimport { VPage, Page, Image, nav } from 'tonva';\r\nimport { UsersController, User } from './cUsers';\r\nimport { SearchBox } from 'tonva';\r\nimport { mainApi } from 'api';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class VAddUser extends VPage<UsersController> {\r\n    @observable private user: User = null;\r\n    //@observable private addedUser: User;\r\n    private searchBox: SearchBox;\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(():JSX.Element => {\r\n        let searchBox = <SearchBox ref={v=>this.searchBox=v}\r\n            className=\"w-100\"\r\n            onSearch={this.onSearch}\r\n            onFocus={this.onSearchFocus}\r\n            placeholder=\"用户全名/手机号/邮箱\"\r\n             />;\r\n        let content:any;\r\n        if (this.user === null) {\r\n        }\r\n        else if (this.user === undefined) {\r\n            content = <div className=\"text-info p-3\">没有找到用户</div>;\r\n        }\r\n        else {\r\n            let {name, nick, icon} = this.user;\r\n            let divUser:any;\r\n            if (nick) {\r\n                divUser = <><div><b>{nick}</b></div><div>{name}</div></>;\r\n            }\r\n            else {\r\n                divUser = <div><b>{name}</b></div>;\r\n            }\r\n            content = <div>\r\n                <div className=\"m-3 p-3 d-flex bg-white\">\r\n                    <Image src={icon} />\r\n                    <div className=\"ml-3\">{divUser}</div>\r\n                </div>\r\n                <div className=\"d-flex justify-content-center\">\r\n                    <button className=\"btn btn-success text-center\" onClick={this.onAddUser}>增加用户</button>\r\n                </div>\r\n            </div>;\r\n        }\r\n        /*\r\n        let divUserAdded:any;\r\n        if (this.addedUser) {\r\n            divUserAdded = <div className=\"p-3\">\r\n                <div>\r\n                    新增用户: {this.addedUser.name} &nbsp; &nbsp; \r\n                    <button className=\"btn btn-success\" \r\n                        onClick={()=>this.controller.onUserEditApps()}>\r\n                        为用户添加App\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        }\r\n        */\r\n        return <Page header={searchBox}>\r\n            {content}\r\n        </Page>;\r\n    })\r\n    //{divUserAdded}\r\n\r\n    private onSearch = async (key:string) => {\r\n        this.user = await mainApi.userFromKey(key);\r\n    }\r\n\r\n    private onAddUser = async () => {\r\n        await this.controller.addUser(this.user.id);\r\n        this.controller.curUser = this.user;\r\n        this.user = null;\r\n        this.searchBox.clear();\r\n        this.replacePage(this.addedPage);\r\n    }\r\n\r\n    private onSearchFocus = () => {\r\n        this.user = null;\r\n        //this.addedUser = null;\r\n        if (this.searchBox) this.searchBox.clear();\r\n    }\r\n\r\n    private onAddApps = () => {\r\n        this.closePage();\r\n        this.controller.onUserEditApps();\r\n    }\r\n\r\n    private onContinueAddUser = () => {\r\n        this.closePage();\r\n        this.controller.onAddUser();\r\n    }\r\n\r\n    private addedPage = () => {\r\n        return <Page header=\"添加成功\">\r\n            <div className=\"p-3 text-center\">\r\n                <div>\r\n                    新增用户: {this.controller.curUser.name}\r\n                </div>\r\n                <div className=\"mt-3\">\r\n                    <button className=\"btn btn-success mr-3\" \r\n                        onClick={this.onAddApps}>\r\n                        为用户添加App\r\n                    </button>\r\n                    <button className=\"btn btn-outline-primary\"\r\n                        onClick={this.onContinueAddUser}>\r\n                        继续添加新用户\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { Controller, VPage, Page } from 'tonva';\r\nimport { mainApi } from 'api';\r\nimport { LMR, FA } from 'tonva';\r\nimport { VApps } from './vApps';\r\nimport { VUsers } from './vUsers';\r\nimport { VApp } from './vApp';\r\nimport { VUser } from './vUser';\r\nimport { VAppEditUsers } from './vAppEditUsers';\r\nimport { VUserEditApps } from './vUserEditApps';\r\nimport { VAddUser } from './VAddUser';\r\nimport { Unit } from 'model';\r\n\r\nexport interface User {\r\n    id: number;\r\n    name: string;\r\n    nick: string;\r\n    icon: string;\r\n    assigned: string;\r\n}\r\nexport interface App {\r\n    id: number;\r\n    name: string;\r\n    discription: string;\r\n}\r\nexport interface UserApps {\r\n    user: User;\r\n    apps: App[];\r\n}\r\nexport interface AppUsers {\r\n    app: App;\r\n    users: User[];\r\n    more: boolean;\r\n}\r\nexport interface EditApp extends App {\r\n    bind: number;   // 0: not bind, 1: bind\r\n}\r\nexport interface EditUser extends User {\r\n    bind: number;  // 0: not bind, 1: bind\r\n}\r\n\r\nexport class UsersController extends Controller {\r\n    private unit: Unit;\r\n    @observable userAppsList: UserApps[];\r\n    @observable appUsersList: AppUsers[];\r\n    curUser: User;\r\n    @observable curUserApps: App[];\r\n    @observable userEditApps: EditApp[];\r\n    curApp: App;\r\n    @observable curAppUsers: User[];\r\n    @observable appEditUsers: EditUser[];\r\n\r\n    protected async internalStart(unit:Unit) {\r\n        this.unit = unit;\r\n        let cn = \"bg-white px-3 py-2 my-1\";\r\n        let appIcon = <FA name=\"columns\" className=\"text-primary mr-3\" />;\r\n        let userIcon = <FA name=\"user-plus\" className=\"text-primary mr-3\" />;\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={this.onAddUser}><FA name=\"plus\" /></button>;\r\n        this.openPage(<Page header={'用户管理 - ' +  this.unit.name} right={right}>\r\n            <LMR className={cn} onClick={this.onAppUsers} left={appIcon}>App</LMR>\r\n            <LMR className={cn} onClick={this.onUserApps} left={userIcon}>用户</LMR>\r\n        </Page>);\r\n    }\r\n\r\n    private onAppUsers = async () => {\r\n        await this.loadAppUsers(undefined);\r\n        this.openVPage(VApps);\r\n    }\r\n\r\n    private onUserApps = async () => {\r\n        await this.loadUserApps(undefined);\r\n        this.openVPage(VUsers);\r\n    }\r\n\r\n    private async loadAppUsers(key:string) {\r\n        let list:AppUsers[] = [];\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        let ret = await mainApi.unitAppUsers(this.unit.id, key, pageStart, pageSize);\r\n        let apps = ret[0];\r\n        let users = ret[1];\r\n        let coll: {[id:number]:AppUsers} = {}\r\n        for (let a of apps) {\r\n            let app:App = {\r\n                id: a.id,\r\n                name: a.name,\r\n                discription: a.discription,\r\n            };\r\n            list.push(coll[a.id] = {app:app, more:false, users:[]});\r\n        }\r\n        for (let u of users) {\r\n            let user:User = {\r\n                id: u.user,\r\n                name: u.name,\r\n                nick: u.nick,\r\n                icon: u.icon,\r\n                assigned: u.assigned\r\n            }\r\n            let item = coll[u.app];\r\n            let {users} = item;\r\n            if (users.length >= 5) {\r\n                item.more = true;\r\n            }\r\n            else {\r\n                users.push(user);\r\n            }\r\n        }\r\n        this.appUsersList = list;\r\n    }\r\n\r\n    private async loadUserApps(key:string) {\r\n        let list:UserApps[] = [];\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        let ret = await mainApi.unitUsers(this.unit.id, key, pageStart, pageSize);\r\n        let users = ret[0];\r\n        let apps = ret[1];\r\n        let coll: {[id:number]:UserApps} = {}\r\n        for (let u of users) {\r\n            let user:User = {\r\n                id: u.id,\r\n                name: u.name,\r\n                nick: u.nick,\r\n                icon: u.icon,\r\n                assigned: u.assigned\r\n            };\r\n            list.push(coll[u.id] = {user:user, apps:[]});\r\n        }\r\n        for (let a of apps) {\r\n            let app:App = {\r\n                id: a.app,\r\n                name: a.name,\r\n                discription: a.discription,\r\n            }\r\n            coll[a.user].apps.push(app);\r\n        }\r\n        this.userAppsList = list;\r\n    }\r\n\r\n    searchUser = async(key:string) => {\r\n        await this.loadUserApps(key);\r\n    }\r\n\r\n    searchApp = async(key:string) => {\r\n        await this.loadAppUsers(key);\r\n    }\r\n\r\n    onAppsClick = async (appUsers: AppUsers) => {\r\n        this.curApp = appUsers.app;\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.curAppUsers = await mainApi.unitOneAppUsers(this.unit.id, this.curApp.id, pageStart, pageSize);\r\n        this.openVPage(VApp);\r\n    }\r\n\r\n    onUsersClick = async (userApps: UserApps) => {\r\n        this.curUser = userApps.user;\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.curUserApps = await mainApi.unitOneUserApps(this.unit.id, this.curUser.id, pageStart, pageSize);\r\n        this.openVPage(VUser);\r\n    }\r\n\r\n    onAppEditUsers = async (key?:string) => {\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.appEditUsers = await mainApi.unitAppEditUsers(this.unit.id, this.curApp.id, key, pageStart, pageSize);\r\n        this.openVPage(VAppEditUsers);\r\n    }\r\n\r\n    onAddUser = () => {\r\n        this.openVPage(VAddUser);\r\n    }\r\n\r\n    onUserEditApps = async (key?:string) => {\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.userEditApps = await mainApi.unitUserEditApps(this.unit.id, this.curUser.id, key, pageStart, pageSize);\r\n        this.openVPage(VUserEditApps);\r\n    }\r\n\r\n    bindAppUser = async(user:User, checked:boolean) => {\r\n        await mainApi.bindAppUser(this.unit.id, this.curApp.id, user.id, checked===true? 1:0);\r\n        let appUsers = this.appUsersList.find(v => v.app.id === this.curApp.id);\r\n        if (checked === true) {\r\n            this.curAppUsers.push(user);\r\n            if (appUsers) appUsers.users.push(user);\r\n        }\r\n        else {\r\n            let index = this.curAppUsers.findIndex(v => v.id === user.id);\r\n            if (index>=0) this.curAppUsers.splice(index, 1);\r\n            if (appUsers) {\r\n                index = appUsers.users.findIndex(v => v.id === user.id);\r\n                if (index>=0) appUsers.users.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    bindUserApp = async(app:App, checked:boolean) => {\r\n        await mainApi.bindAppUser(this.unit.id, app.id, this.curUser.id, checked===true? 1:0);\r\n        if (this.userAppsList === undefined) return;\r\n        let userApps = this.userAppsList.find(v => v.user.id === this.curUser.id);\r\n        if (checked === true) {\r\n            this.curUserApps.push(app);\r\n            if (userApps) userApps.apps.push(app);\r\n        }\r\n        else {\r\n            let index = this.curUserApps.findIndex(v => v.id === app.id);\r\n            if (index>=0) this.curUserApps.splice(index, 1);\r\n            if (userApps) {\r\n                index = userApps.apps.findIndex(v => v.id === app.id);\r\n                if (index>=0) userApps.apps.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    addUser = async (userId: number) => {\r\n        await mainApi.unitAddUser(this.unit.id, userId);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page, appInFrame, Controller, \r\n    VPage, Image, Edit, ItemSchema, UiSchema, \r\n    StringSchema, ImageSchema, UiImageItem, UiTextItem} from 'tonva'; \r\nimport {List, LMR, FA} from 'tonva';\r\n//, StackedFA, PropGrid, Prop, Muted\r\n//import {StringValueEdit} from './tools';\r\nimport {Unit, UnitApps, UnitAdmin, DevModel} from './model';\r\nimport {store} from './store';\r\nimport Administors from './Administors';\r\nimport AppsPage from './Apps';\r\nimport {Members} from './Members';\r\nimport { mainApi } from 'api';\r\n//import { COrganization } from 'organization';\r\nimport {\r\n    ObjViewProps, ObjView,\r\n    //appsProps, \r\n    busesProps, \r\n    serversProps, /*uqdbsProps, servicesProps, */ UQController} from './Dev';\r\nimport { AppController } from './Dev';\r\nimport { UsersController } from 'Users';\r\n\r\nexport class CAdmin extends Controller {\r\n    isProduction: boolean;\r\n    adminUnits: UnitAdmin[]; // 仅仅为Admins调试用。从登录用户获取units\r\n\r\n    private async loadAdminUnits(): Promise<void> {        \r\n        let ret = await mainApi.userAdminUnits();\r\n        let adminUnits = this.adminUnits = ret[0];\r\n        console.log('loadAdminUnits', adminUnits);\r\n        if (adminUnits.length === 1) {\r\n            appInFrame.unit = adminUnits[0].id;\r\n            await store.loadUnit();\r\n        }\r\n    }\r\n    protected async internalStart(param?:any):Promise<void> {\r\n        store.init();\r\n        \r\n        this.isProduction = document.location.hash.startsWith('#tv');\r\n        console.log('admins isProduction %s', this.isProduction);\r\n\r\n        if (this.isProduction === false) {\r\n            await this.loadAdminUnits();\r\n            this.openVPage(VAdmin);\r\n            return;\r\n        }\r\n        await store.loadUnit();\r\n        this.openVPage(VAdmin);\r\n    /*\r\n        let user = nav.user;\r\n        if (user === undefined) {\r\n            console.log('autorun: user has logged out');\r\n            return;\r\n        }\r\n    \r\n        console.log('autorun login');\r\n        */\r\n       /*\r\n        setTimeout(async () => {\r\n            // 等待 tonva-tools 里面的initSubWin的nav.user的赋值\r\n            // 这个地方实际上有问题的，不应该这么写。程序逻辑顺序逻辑错误。\r\n            // 2018-11-5: 临时凑合用延时的方式来解决。\r\n            await store.loadUnit();\r\n            this.showVPage(VAdmin);\r\n        }, 200);\r\n        */\r\n    }\r\n}\r\n\r\nexport class VAdmin extends VPage<CAdmin> {\r\n    async open() {\r\n        let {isProduction, adminUnits} = this.controller;\r\n        if (isProduction === false) {\r\n            switch (adminUnits.length) {\r\n                default: this.openPage(this.selectUnitPage); return;\r\n                case 0: this.openPage(this.noUnitPage); return;\r\n                case 1: this.openPageElement(<AdminPage />); return;\r\n            }\r\n        }\r\n\r\n        if (store.unit === undefined) {\r\n            this.openPage(this.noUnitPage);\r\n            return;\r\n        }\r\n        this.openPageElement(<AdminPage />);\r\n    }\r\n\r\n    private selectUnitPage = () => {\r\n        return <Page header=\"选择小号\" logout={logout}>\r\n            <List items={this.controller.adminUnits} item={{render: this.renderRow, onClick: this.onRowClick}}/>\r\n        </Page>;\r\n    }\r\n\r\n    private noUnitPage = () => {\r\n        let {nick, name} = nav.user;\r\n        return <Page header=\"没有小号\" logout={logout}>\r\n            <div className=\"p-3 small text-info\">\r\n                {nick || name}: 没有需要管理的小号\r\n            </div>\r\n        </Page>\r\n    }\r\n\r\n    protected get view() {return undefined}\r\n\r\n    renderRow = (item: UnitAdmin, index: number):JSX.Element => {\r\n        return <LMR className=\"p-2\" right={'id: ' + item.id}>\r\n            <div>{item.nick || item.name}</div>\r\n        </LMR>;\r\n    }\r\n    onRowClick = async (item: UnitAdmin) => {\r\n        appInFrame.unit = item.id; // 25;\r\n        store.init();\r\n        await store.loadUnit();\r\n        this.closePage();\r\n        this.openPageElement(<AdminPage />);\r\n    }\r\n}\r\n\r\nconst logout = async () => {\r\n    store.logout();\r\n}\r\n\r\ninterface ActionItem {\r\n    main: string | JSX.Element;\r\n    right?: string | JSX.Element;\r\n    icon: string|JSX.Element;\r\n    page?: new (props:any) => React.Component;\r\n    //onClick: () => nav.push(<Administors />),\r\n    controller?: Controller;\r\n}\r\n\r\ninterface DevItem<T extends DevModel.ObjBase> {\r\n    title: string;\r\n    count: number;\r\n    icon: string;\r\n    objProps?: ObjViewProps<T>;\r\n    onClick?: ()=>void;\r\n}\r\n\r\ntype Item = ActionItem|DevItem<DevModel.ObjBase>|string;\r\n\r\nconst rArrow = <FA name=\"chevron-right\" />;\r\nconst typeCaptions = {\r\n    1: '开发号',\r\n    2: '小号',\r\n    3: '系统号'\r\n}\r\n@observer\r\ndefault class AdminPage extends React.Component {\r\n    private caption:string;\r\n\r\n    async componentWillMount() {\r\n        let {unit, dev} = store;\r\n        let {isAdmin, isOwner, type} = unit;\r\n        this.caption = typeCaptions[type];\r\n        if ((type & 1) !== 0) {\r\n            await store.dev.loadCounts();\r\n        }\r\n    }\r\n\r\n    private appsAction:ActionItem = {\r\n        main: '启停App',\r\n        right: rArrow, //'增减',\r\n        icon: 'play-circle-o',\r\n        page: AppsPage,\r\n    };\r\n    private usersAction:ActionItem = {\r\n        main: '用户角色',\r\n        right: rArrow,\r\n        icon: 'users',\r\n        page: Members,\r\n    };\r\n    private newUsersAction:ActionItem = {\r\n        main: '用户管理',\r\n        right: rArrow,\r\n        icon: 'user-o',\r\n        controller: new UsersController(undefined),\r\n    };\r\n    /*\r\n    private devAction:Item = {\r\n        main: <DevActions />,\r\n        right: '程序开发相关管理',\r\n        icon: 'laptop',\r\n        //page: Dev,\r\n    };*/\r\n    private adminsAction:ActionItem = {\r\n        main: '管理员',\r\n        right: rArrow,\r\n        icon: 'universal-access',\r\n        page: Administors,\r\n    };\r\n\r\n    /*\r\n    private cOrganization = new COrganization;\r\n    private organizeAction:ActionItem = {\r\n        main: this.cOrganization.label,\r\n        right: rArrow,\r\n        icon: this.cOrganization.icon,\r\n        controller: this.cOrganization\r\n    };\r\n    */\r\n\r\n    private noneAction:ActionItem = {\r\n        main: '请耐心等待分配任务',\r\n        icon: 'hourglass-start',\r\n    };\r\n\r\n    private buildItems():Item[] {\r\n        let {unit, dev} = store;\r\n        let {isAdmin, isOwner, type} = unit;\r\n        let items:Item[] = [];\r\n        if (isOwner === 1) {\r\n            items.push(this.adminsAction);\r\n        }\r\n        console.log('unit:', unit);\r\n        if (isAdmin === 1) {\r\n            if ((type & 2) !== 0) {\r\n                // unit\r\n                items.push(\r\n                    '小号管理',\r\n                    this.appsAction, \r\n                    //this.usersAction, \r\n                    this.newUsersAction, \r\n                    //this.organizeAction\r\n                );\r\n            }\r\n            if ((type & 1) !== 0) {\r\n                // dev unit\r\n                let {counts} = dev;\r\n\r\n                let appAction:DevItem<DevModel.ObjBase> = {\r\n                    title: 'APP', \r\n                    count: counts && counts.app, \r\n                    icon: 'tablet', \r\n                    onClick: () => new AppController(undefined).start(unit.id),\r\n                };\r\n                let uqAction:DevItem<DevModel.ObjBase> = {\r\n                    title: 'UQ', \r\n                    count: counts && counts.uq, \r\n                    icon: 'database', \r\n                    onClick: () => new UQController(undefined).start(unit.id),\r\n                };\r\n                let busAction:DevItem<DevModel.ObjBase> = {\r\n                    title: 'BUS', \r\n                    count: counts && counts.bus, \r\n                    icon: 'cogs', \r\n                    objProps: busesProps,\r\n                };\r\n                let serverAction:DevItem<DevModel.ObjBase> = {\r\n                    title: 'Server', \r\n                    count: counts && counts.server, \r\n                    icon: 'server', \r\n                    objProps: serversProps,\r\n                };\r\n                items.push('开发号管理')\r\n                if (isOwner>0) items.push(appAction);\r\n                items.push(uqAction, busAction);\r\n                if (isOwner>0) items.push(serverAction);\r\n            }\r\n        }\r\n        return items;\r\n    }\r\n    private row = (item:Item, index:number):JSX.Element => {\r\n        if (typeof item === 'string') {\r\n            return <div className=\"px-3 pt-3 pb-1 small text-muted\" style={{backgroundColor:'#f0f0f0'}}>{item}</div>;\r\n        }\r\n        let {title} = item as DevItem<DevModel.ObjBase>;\r\n        let left:any, mid:any, r:any;\r\n        if (title !== undefined) {\r\n            let {icon, count} = item as DevItem<DevModel.ObjBase>;\r\n            left = <FA className=\"text-primary\" name={icon} fixWidth={true} size=\"lg\" />;\r\n            mid = title;\r\n            r = count>0 && <span>{count}</span>;\r\n        }\r\n        else {\r\n            let {right, main, icon} = item as ActionItem;\r\n            left = typeof icon === 'string'? \r\n                <FA className=\"text-primary\" name={icon} fixWidth={true} size=\"lg\" /> :\r\n                item.icon;\r\n            mid = main;\r\n            r = <span>{right}</span>;\r\n        }\r\n        return <LMR className=\"px-3 py-2 align-items-center\" left={left} right={r}>\r\n            <div className=\"px-3\"><b>{mid}</b></div>\r\n        </LMR>;\r\n    }\r\n    private rowClick = async (item:Item) => {\r\n        let {title} = item as DevItem<DevModel.ObjBase>;\r\n        if (title !== undefined) {\r\n            let {objProps, onClick} = item as DevItem<DevModel.ObjBase>;\r\n            if (objProps !== undefined)\r\n                return nav.push(<ObjView {...objProps} />);\r\n            else {\r\n                onClick();\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            let {page:P, controller} = item as ActionItem;\r\n            if (P !== undefined)\r\n                nav.push(<P />);\r\n            else {\r\n                await controller.start(store.unit);\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        let unit:Unit = store.unit;\r\n        if (unit === undefined) {\r\n            console.log(\"admin render without unit\");\r\n            return null;\r\n        }\r\n        console.log(\"admin render with unit\");\r\n        let items = this.buildItems();\r\n        if (items === undefined) {\r\n            return <Page header=\"\" />;\r\n        }\r\n        let header:any, top:any;\r\n        if (unit !== undefined) {\r\n            let {name, nick, icon, discription} = unit;\r\n            let title:string, vice:any;\r\n            if (nick) {\r\n                title = nick;\r\n                vice = <h6><small className='text-secondary'>{name}</small></h6>;\r\n            }\r\n            else {\r\n                title = name;\r\n            }\r\n            if (this.caption !== undefined) header = this.caption + ' - ' + title;\r\n            top = <LMR className='px-3 my-4 bg-white py-2 cursor-pointer' onClick={()=>nav.push(<UnitProps />)}\r\n                left={<div><Image className=\"w-3c h-3c\" src={icon} /></div>}>\r\n                <div className=\"px-3\">\r\n                    <LMR right={vice}><h6 className='text-dark font-weight-bold'>{title}</h6></LMR>\r\n                    <div className='small text-info'>{discription}</div>\r\n                </div>\r\n            </LMR>;\r\n        }\r\n        else {\r\n            header = '系统管理';\r\n        }\r\n        return <Page header={header} logout={logout}>\r\n            {top}\r\n            <List items={items} item={{render:this.row, onClick:this.rowClick}} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass UnitProps extends React.Component {\r\n    /*\r\n    private rows:Prop[] = [\r\n        '',\r\n        {label: '标志图', type: 'string', name: 'icon'},\r\n        '=',\r\n        {label: '唯一号', type: 'string', name: 'name'},\r\n        {\r\n            label: '名称', \r\n            type: 'string',\r\n            name: 'nick', \r\n            onClick:()=>nav.push(<StringValueEdit \r\n                title=\"修改名称\"\r\n                value={store.unit.nick}\r\n                onChanged={this.onNickChanged} \r\n                info=\"好的名字会提升接受度\" />)\r\n        },\r\n        {\r\n            label: '说明',\r\n            type: 'string',\r\n            name: 'discription',\r\n            onClick:()=>nav.push(<StringValueEdit \r\n                title=\"修改说明\"\r\n                value={store.unit.discription}\r\n                onChanged={this.onDiscriptionChanged} \r\n                info=\"对小号做一个说明\" />)\r\n        },\r\n    ];\r\n    */\r\n    private schema:ItemSchema[] =[\r\n        {name: 'icon', type: 'image'} as ImageSchema,\r\n        {name: 'nick', type: 'string'} as StringSchema,\r\n        {name: 'discription', type: 'string'} as StringSchema,\r\n    ];\r\n    private uiSchema:UiSchema = {\r\n        items: {\r\n            nick: {widget:'text', label:'别名', placeholder:'好的别名更方便记忆'} as UiTextItem,\r\n            icon: {widget:'image', label:'标志图'} as UiImageItem,\r\n            discription: {widget:'text', label:'描述', placeholder:'简短清晰的描述'} as UiTextItem,\r\n        }\r\n    }\r\n    /*\r\n    async onNickChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.unitChangeProp('nick', value);\r\n    }\r\n    async onDiscriptionChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.unitChangeProp('discription', value);\r\n    }\r\n    */\r\n    private onItemChanged = async (itemSchema:ItemSchema, newValue:any, preValue:any) => {\r\n        let {name} = itemSchema;\r\n        //await userApi.userSetProp(name, newValue);\r\n        await store.unitChangeProp(name, newValue);\r\n        //this.data[name] = newValue;\r\n        //nav.user[name] = newValue;\r\n        //nav.saveLocalUser();\r\n    }\r\n    //<PropGrid rows={this.rows} values={store.unit} alignValue=\"right\" />\r\n    render() {\r\n        let unit:Unit = store.unit;\r\n        let {isRoot, isOwner} = unit;\r\n        return <Page header=\"小号信息\">\r\n            <Edit schema={this.schema} uiSchema={this.uiSchema}\r\n                data={store.unit}\r\n                onItemChanged={this.onItemChanged}\r\n                stopEdit={!(isRoot>0 && isOwner>0)} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { nav, NavView } from 'tonva';\r\nimport { CAdmin } from './Admin';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n    async onLogined() {\r\n        let loc = document.location;\r\n        nav.clear();\r\n        //nav.push(<StartPage />);\r\n        let cAdmin = new CAdmin({});\r\n        await cAdmin.start();\r\n    }\r\n    render() {\r\n        return (\r\n            <NavView onLogined={this.onLogined} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n"],"sourceRoot":""}