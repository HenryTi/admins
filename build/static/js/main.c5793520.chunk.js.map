{"version":3,"sources":["tonva/index.ts","tonva/ui/index.ts","tonva/uq/controllers/CVEntity.tsx","tonva/ui/nav.tsx","tonva/net/guestApi.ts","tonva/net/index.ts","tonva/uq/controllers/form/viewModel.tsx","tonva/net/appBridge.ts","tonva/ui/page.tsx","tonva/uq/tools/jsonStringify.ts","tonva/uq/tools/tv.tsx","tonva/uq/tools/index.ts","tonva/uid.ts","tonva/net/httpChannelUI.ts","tonva/net/uqApi.ts","tonva/uq/controllers/link/cLink.tsx","tonva/uq/controllers/link/index.ts","tonva/net/wsChannel.ts","tonva/net/host.ts","tonva/ui/image.tsx","tonva/uq/controllers/index.ts","tonva/pageItems.ts","tonva/uq/uqs/entity.ts","tonva/uq/uqs/tuid/idCache.ts","tonva/uq/uqs/tuid/tuidBox.ts","tonva/uq/uqs/tuid/boxId.tsx","tonva/uq/uqs/tuid/tuidDiv.ts","tonva/uq/uqs/tuid/tuid.ts","tonva/uq/uqs/action.ts","tonva/uq/uqs/sheet.ts","tonva/uq/uqs/query.ts","tonva/uq/uqs/book.ts","tonva/uq/uqs/history.ts","tonva/uq/uqs/map.ts","tonva/uq/uqs/pending.ts","tonva/uq/uqs/uq.ts","tonva/uq/uqs/uqApp.ts","tonva/uq/uqs/index.ts","tonva/user.ts","tonva/ui/edit/itemEdit.tsx","tonva-form/index.ts","tonva/uq/controllers/tuid/vTuidMain.tsx","tonva/uq/controllers/tuid/vTuidEdit.tsx","tonva/uq/controllers/tuid/vTuidSelect.tsx","tonva/uq/controllers/tuid/vTuidView.tsx","tonva/uq/controllers/tuid/vTuidInfo.tsx","tonva/uq/controllers/tuid/pageItems.ts","tonva/uq/controllers/tuid/vTuidList.tsx","tonva/uq/controllers/tuid/cTuid.ts","tonva/uq/controllers/tuid/index.tsx","tonva/uq/controllers/form/vBand.tsx","tonva/uq/controllers/form/vSubmit.tsx","tonva/uq/controllers/form/rule.ts","tonva/uq/controllers/form/vField/vField.tsx","tonva/uq/controllers/form/vField/vComputeField.tsx","tonva/uq/controllers/form/vArr.tsx","tonva/uq/controllers/form/vField/vTuidField.tsx","tonva/uq/controllers/form/bandsBuilder.ts","tonva/uq/controllers/form/vField/buildVmField.ts","tonva/uq/controllers/form/vForm.tsx","tonva/uq/controllers/form/index.ts","tonva/net/httpChannel.ts","tonva/ui/res.ts","tonva-form/form/control/control.tsx","tonva-form/form/control/buttonsControl.tsx","tonva-form/form/control/charsControl.tsx","tonva-form/form/control/stringControl.tsx","tonva-form/form/control/numberControl.tsx","tonva-form/form/control/unknownControl.tsx","tonva-form/form/control/pickIdControl.tsx","tonva-form/form/control/pickTuidControl.tsx","tonva-form/form/control/pickControl.tsx","tonva-form/form/control/index.ts","tonva-form/form/control/checkControl.tsx","tonva-form/form/control/radioControl.tsx","tonva-form/form/control/selectControl.tsx","tonva-form/form/control/textAreaControl.tsx","tonva-form/form/rowContainer/index.tsx","tonva/net/apiBase.ts","tonva/ui/pageHeader.tsx","tonva/ui/components/Badge.tsx","tonva/ui/components/LMR.tsx","tonva/ui/components/FA.tsx","tonva/ui/components/Muted.tsx","tonva/ui/components/index.ts","tonva/uq/controllers/query/defaultRow.tsx","tonva/uq/controllers/query/vQueryMain.tsx","tonva/uq/controllers/query/vQuerySelect.tsx","tonva/uq/controllers/query/cQuery.ts","tonva/uq/controllers/query/index.ts","tonva/ui/edit/imageItemEdit.tsx","tonva/entry/userApi.ts","tonva/ui/loading.tsx","tonva/ui/resUploader.tsx","tonva/uq/controllers/CApp.tsx","tonva/uq/controllers/icons.tsx","tonva/uq/controllers/ControllerUq.ts","tonva/uq/centerApi.ts","tonva-form/form/index.ts","tonva-form/form/formView.tsx","tonva/uq/controllers/sheet/vMain.tsx","tonva/uq/controllers/sheet/vNew.tsx","tonva/uq/controllers/sheet/vSheetView.tsx","tonva/uq/controllers/sheet/vEdit.tsx","tonva/uq/controllers/sheet/vSheetAction.tsx","tonva/uq/controllers/sheet/vSchema.tsx","tonva/uq/controllers/sheet/vArchives.tsx","tonva/uq/controllers/sheet/vList.tsx","tonva/uq/controllers/sheet/vArchived.tsx","tonva/uq/controllers/sheet/vSheet.tsx","tonva/uq/controllers/sheet/vSaved.tsx","tonva/uq/controllers/sheet/vSheetProcessing.tsx","tonva/uq/controllers/sheet/cSheet.ts","tonva/uq/controllers/sheet/index.ts","tonva/uq/controllers/book/vBookMain.tsx","tonva/uq/controllers/book/cBook.ts","tonva/uq/controllers/cUq/vUq.tsx","tonva/uq/controllers/cUq/cUq.tsx","tonva/uq/controllers/cUq/index.ts","tonva/uq/controllers/map/vMain.tsx","tonva/uq/controllers/map/inputValues.tsx","tonva/uq/controllers/map/cMap.ts","tonva/uq/controllers/map/index.ts","tonva/uq/controllers/pending/vPendingMain.tsx","tonva/uq/controllers/pending/cPending.ts","tonva/uq/controllers/pending/index.ts","tonva/uq/controllers/action/vActionMain.tsx","tonva/uq/controllers/action/cAction.ts","tonva/uq/controllers/action/index.ts","tonva/uq/controllers/history/vHistoryMain.tsx","tonva/uq/controllers/history/cHistory.ts","tonva/uq/controllers/history/index.ts","tonva/net/netToken.ts","tonva/ui/VM.tsx","tonva/ui/schema/index.ts","tonva/ui/rules/index.ts","tonva/ui/dropDownActions/index.tsx","tonva/ui/easyDate/index.tsx","tonva/ui/media.tsx","tonva/ui/searchBox.tsx","tonva/cacheIds.ts","tonva-form/form/TonvaForm.tsx","tonva-form/multiStep/index.tsx","tonva/ui/form/rules/index.ts","tonva/ui/form/widgets/widget.tsx","tonva/ui/form/widgets/textWidget.tsx","tonva/ui/form/widgets/numberWidget.tsx","tonva/ui/form/widgets/updownWidget.tsx","tonva/ui/form/widgets/dateWidget.tsx","tonva/ui/form/widgets/checkBoxWidget.tsx","tonva/ui/form/widgets/selectWidget.tsx","tonva/ui/form/widgets/radioWidget.tsx","tonva/ui/form/widgets/idWidget.tsx","tonva/ui/form/widgets/unknown.tsx","tonva/ui/form/widgets/buttonWidget.tsx","tonva/ui/form/context.tsx","tonva/ui/form/widgets/arrComponent.tsx","tonva/ui/form/widgets/imageWidget.tsx","tonva/ui/form/widgets/factory.tsx","tonva/ui/form/widgets/textareaWidget.tsx","tonva/ui/form/widgets/passwordWidget.tsx","tonva/ui/form/widgets/rangeWidget.tsx","tonva/ui/form/formRes.ts","tonva/ui/form/form.tsx","tonva/ui/form/field.tsx","tonva/ui/form/index.ts","tonva/ui/list/base.tsx","tonva/ui/list/clickable.tsx","tonva/ui/list/static.tsx","tonva/ui/list/selectable.tsx","tonva/ui/list/index.tsx","tonva/ui/edit/stringItemEdit.tsx","tonva/ui/edit/radioItemEdit.tsx","tonva/ui/edit/selectItemEdit.tsx","tonva/ui/edit/edit.tsx","tonva/ui/edit/index.tsx","tonva/ui/propGrid/row.tsx","tonva/ui/propGrid/propView.tsx","tonva/ui/propGrid/PropGrid.tsx","tonva/ui/propGrid/index.tsx","tonva/ui/tabs/tabs.tsx","tonva/entry/meInfo.tsx","tonva/ui/fetchErrorView.tsx","tonva/local.ts","tonva/img/logo.svg","api/mainApi.ts","api/devApi.ts","store/admins.ts","store/dev.ts","store/cacheIds.ts","store/index.ts","Administors/NewFellow.tsx","Administors/EditAdmin.tsx","Administors/index.tsx","tools/idDates.tsx","tools/span.tsx","tools/unitSpan.tsx","consts.ts","tools/uqSpan.tsx","tools/appSpan.tsx","tools/serverSpan.tsx","tools/stringValueEdit.tsx","tools/idPickPage.tsx","Apps/info.tsx","Apps/new.tsx","Apps/index.tsx","Members/newRole.tsx","Members/roleApps.tsx","Members/memberPage.tsx","Members/membersPage.tsx","Members/rolePage.tsx","Members/index.tsx","Dev/apps/editPage.tsx","Dev/apps/appsPage.tsx","Dev/apps/appUqs.tsx","Dev/apps/appPage.tsx","Dev/apps/uqBindPage.tsx","Dev/apps/index.tsx","Dev/uqs/resultSections.tsx","Dev/uqs/uqUpload.tsx","createIdPick.tsx","Dev/uqs/newServicePage.tsx","Dev/uqs/servicePage.tsx","Dev/uqs/editPage.tsx","Dev/uqs/uqPage.tsx","Dev/uqs/listPage.tsx","Dev/uqs/uqController.tsx","Dev/buses.tsx","Dev/servers.tsx","Dev/ObjView.tsx","Users/vApps.tsx","Users/vUsers.tsx","Users/vApp.tsx","Users/vUser.tsx","Users/vAppEditUsers.tsx","Users/vUserEditApps.tsx","Users/VAddUser.tsx","Users/cUsers.tsx","Admin.tsx","App.tsx","registerServiceWorker.ts","index.tsx"],"names":["__webpack_require__","_net__WEBPACK_IMPORTED_MODULE_2__","d","__webpack_exports__","_ui__WEBPACK_IMPORTED_MODULE_3__","o","_uid__WEBPACK_IMPORTED_MODULE_4__","_pageItems__WEBPACK_IMPORTED_MODULE_5__","_cacheIds__WEBPACK_IMPORTED_MODULE_6__","_uq__WEBPACK_IMPORTED_MODULE_8__","_nav__WEBPACK_IMPORTED_MODULE_0__","_page__WEBPACK_IMPORTED_MODULE_2__","_VM__WEBPACK_IMPORTED_MODULE_3__","_schema__WEBPACK_IMPORTED_MODULE_4__","_form__WEBPACK_IMPORTED_MODULE_5__","_edit__WEBPACK_IMPORTED_MODULE_6__","_res__WEBPACK_IMPORTED_MODULE_7__","_image__WEBPACK_IMPORTED_MODULE_10__","_rules__WEBPACK_IMPORTED_MODULE_12__","_list__WEBPACK_IMPORTED_MODULE_13__","_dropDownActions__WEBPACK_IMPORTED_MODULE_14__","_easyDate__WEBPACK_IMPORTED_MODULE_15__","_propGrid__WEBPACK_IMPORTED_MODULE_16__","_components__WEBPACK_IMPORTED_MODULE_17__","_media__WEBPACK_IMPORTED_MODULE_18__","_searchBox__WEBPACK_IMPORTED_MODULE_19__","CEntity","_ControllerUq__WEBPACK_IMPORTED_MODULE_3__","[object Object]","cUq","entity","ui","res","super","Object","setPrototypeOf","this","x","name","typeName","label","icon","_icons__WEBPACK_IMPORTED_MODULE_2__","loadSchema","onSubmit","values","mode","options","buildFormOptions","ret","_form__WEBPACK_IMPORTED_MODULE_1__","setValues","none","submitCaption","arrNewCaption","arrEditCaption","arrTitleNewButton","fields","arrFields","undefined","new","formUI","form","arrs","inputs","buildInputs","buildFieldsInputs","arr","items","arrFieldInputs","field","_tuid","tuid","fieldUI","select","buildSelect","content","buildContent","placeHolder","getTuidPlaceHolder","__awaiter","ownerField","cTuidSelect","param","getValue","autoList","console","log","call","removeCeased","id","idFromItem","useId","queryName","cQuerySelect","VEntity","_ui__WEBPACK_IMPORTED_MODULE_0__","controller","createForm","RegExp","test","navigator","userAgent","logMark","logs","stackKey","NavView","react__WEBPACK_IMPORTED_MODULE_0__","props","waitCount","isHistoryBack","clearError","setState","fetchError","clickCount","firstClick","clickRange","clickMax","onClick","now","Date","nav","reverseTest","onTestClick","testing","push","header","className","toNormal","pop","back","bind","navBack","stack","state","wait","window","addEventListener","set","start","level","length","waitTimeHandler","global","setTimeout","clearTimeout","err","error","unauthorized","showLogin","view","disposer","clear","history","pushState","key","ceased","refresh","item","dispose","p","i","len","backLevel","popAndDispose","find","v","confirmClose","confirm","self","top","postMessage","type","message","elWait","elError","_loading__WEBPACK_IMPORTED_MODULE_10__","_fetchErrorView__WEBPACK_IMPORTED_MODULE_4__","assign","style","lineHeight","_components__WEBPACK_IMPORTED_MODULE_15__","map","index","visibility","Nav","local","_local__WEBPACK_IMPORTED_MODULE_6__","user","resetTest","setTesting","lang","district","_res__WEBPACK_IMPORTED_MODULE_9__","language","culture","guest","g","get","handler","ws","onWsReceiveAny","handlerId","endWsReceive","m1","m2","testMode","normalMode","msg","receive","unitRes","fetch","json","unit","unitName","envUnit","NODE_ENV","PUBLIC_URL","REACT_APP_CENTER_HOST","REACT_APP_UNIT","Number","_net__WEBPACK_IMPORTED_MODULE_7__","getPredefinedUnitName","unitId","unitFromName","settings","navSettings","hash","document","location","pos","_net_appBridge__WEBPACK_IMPORTED_MODULE_5__","hashParam","substring","startWait","url","resHost","centerHost","resUrl","wsHost","setGuest","exHash","appInFrame","parent","_net_wsChannel__WEBPACK_IMPORTED_MODULE_8__","predefinedUnit","loadPredefinedUnit","notLogined","logined","endWait","onLogined","_net_netToken__WEBPACK_IMPORTED_MODULE_3__","token","callback","connect","JSON","stringify","saveLocalUser","showAppView","defaultTop","loginTop","withBack","lv","e","then","loginView","default","logout","logoutClear","cp","ChangePasswordPage","onError","show","replace","topKey","popTo","ceaseTop","regConfirmClose","confirmBox","apiId","sheetType","sheetId","Promise","resolve","reject","sheet","includes","uh","src","open","date","getTime","toTimeString","step","__decorate","mobx__WEBPACK_IMPORTED_MODULE_1__","guestApi","uqApi","wsChannel","apiBase","appBridge","host","ViewModel","PureJSONContent","JSONContent","RowContent","mobx_react__WEBPACK_IMPORTED_MODULE_1__","_tools__WEBPACK_IMPORTED_MODULE_2__","vm","uqTokens","logoutUqTokens","appsInFrame","_unit","val","isBridged","setAppInFrame","appHash","parts","split","page","slice","getExHashPos","lastIndexOf","getExHash","appUrl","u","_uid__WEBPACK_IMPORTED_MODULE_2__","evt","data","subWin","source","_wsChannel__WEBPACK_IMPORTED_MODULE_4__","el","getElementById","hidden","hideFrameBack","lodash__WEBPACK_IMPORTED_MODULE_0___default","a","clone","_ui__WEBPACK_IMPORTED_MODULE_1__","subFrameStarted","onReceive","_uqApi__WEBPACK_IMPORTED_MODULE_3__","initSubWin","from","callId","method","body","result","directCall","callCenterApiFromMessage","bca","brideCenterApis","bridgeCenterApiReturn","apiName","db","uqOwner","uqName","uq","onReceiveAppApiMessage","urlTest","action","uqTokenActions","realUrl","_host__WEBPACK_IMPORTED_MODULE_5__","getUrlOrTest","onAppApiReturn","buildAppUq","realUnit","getUnit","uqToken","at","opener","appUq","bridgeCenterApi","scrollTimeGap","ScrollView","bottomTime","topTime","onScroll","onScrollTop","onScrollBottom","target","scrollTop","offsetHeight","scrollHeight","c","direct","children","forEach","child","_$scroll","toString","eachChild","Page","cur","tabs","tabStates","tab","t","lodash__WEBPACK_IMPORTED_MODULE_3___default","isSelected","isMounted","t0","load","footer","right","keepHeader","headerClassName","tabPosition","title","redDot","img","redDotView","cn","classnames__WEBPACK_IMPORTED_MODULE_2___default","onTabClick","pageHeader","_pageHeader__WEBPACK_IMPORTED_MODULE_4__","center","sideBar","invisible","onTouchStart","elFooter","renderTabs","renderSingle","replacer","value","substr","jsonStringify","Tv","index_module","tuidValue","nullUI","react","ttv","divObj","bi","logContent","render","controllers","boxIdContent","tv","uid","ALPHABET","ID_LENGTH","rtn","charAt","Math","floor","random","httpChannelUI_HttpChannelNavUI","channelUIs","channelNoUIs","logoutApis","uqApi_channels","uqLocalEntities","localUqs","ls","localStorage","getItem","parse","uqs","loginedUserId","isNet","un","__loadAccess","saveLocal","lodash_default","cloneDeep","removeItem","accessValue","str","setItem","isMatch","uqApi_UqApi","basePath","access","showWaiting","channels","channelUI","channel","httpChannel","acc","join","loadAccess","checkAccess","names","post","params","owner","pageStart","pageSize","order","$order","ids","put","uqApi_UnitxApi","buildChannel","centerAppApi","uqApi_CenterAppApi","unitxUq","setCenterUrl","centerToken","centerChannel","centerChannelUI","setCenterToken","userId","uqApi_CenterApiBase","path","uqTokenApi","unitParam","nowTick","tick","appUqParams","callCenterapi","appUqs","appOwner","appName","rLs","rAppOwner","rAppName","uqsPure","obj","cachedUqs","cachedId","retId","retUqs","loadAppUqs","checkUqs","Link","cLink_CLink","classnames_default","subAppWindow","setSubAppWindow","win","postWsToTop","WsBase","handlerSeed","anyHandlers","msgHandlers","seed","$type","wsBaseSeed","wsBridge","wsBaseId","WSChannel","that","WebSocket","onopen","ev","onerror","onmessage","wsMessage","onclose","close","event","postWsToSubApp","netThis","send","isDevelopment","hosts","centerhost","reshost","uqhost","unitxhost","uq-build","fetchOptions","headers","Content-Type","tryLocal","getCenterHost","startsWith","endsWith","centerUrlFromHost","centerWsFromHost","getResHost","promises","hostArr","hostValue","findIndex","fetchUrl","debugHostUrl","localCheck","results","all","j","debugHost","getUrlOrDebug","urlDebug","timeout","text","catch","Error","fetchLocalCheck","Image","classnames__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_1___default","n","_nav__WEBPACK_IMPORTED_MODULE_2__","altImage","currentTarget","_CApp__WEBPACK_IMPORTED_MODULE_0__","_form_viewModel__WEBPACK_IMPORTED_MODULE_10__","_formUI__WEBPACK_IMPORTED_MODULE_12__","PageItems","itemObservable","isFirst","loading","beforeLoad","loaded","allLoaded","firstSize","appendPosition","_items","mobx__WEBPACK_IMPORTED_MODULE_0__","array","deep","topDiv","_uid__WEBPACK_IMPORTED_MODULE_1__","bottomDiv","setPageStart","unshift","reset","more","splice","reverse","ln","Entity","typeId","fieldMaps","sys","indexOf","sName","jName","returns","f","schema","loadEntitySchema","setSchema","buildFieldsTuid","buildFieldTuid","buildArrFieldsTuid","fieldName","arrName","entities","getTuid","fn","fieldArr","toLowerCase","an","buildFieldsParams","arrResult","pa","rowResult","getIdFromObj","packRow","packArr","row","r","charCodeAt","escape","boxId","unpackRow","unpackArr","ch0","ch","fLen","to","vals","maxCacheSize","idCache_IdCache","tuidLocal","queue","cache","mobx_module","waitingIds","divName","defer","util","has","cacheTuids","moveToHead","shift","delete","_id","tuidValues","loadIds","cacheIdValues","tuids","unpackTuidIds","cacheValue","cacheTuidFieldValues","loadTuidIds","IdDivCache","div","TuidBox","alert","TuidBoxDiv","boxId_BoxId","valueFromId","boxName","isUndefined","assureBox","BoxDivId","tuidDiv_TuidDiv","idName","idCache","mainFields","cacheFields","assureObj","cacheIds","cacheFieldsInValue","unpackTuidIdsOfFields","tuid_Tuid","isImport","tuid_TuidLocal","divs","tuidDiv","setUIRes","uiDivs","hasDiv","tuidIds","tuidGet","arrValues","$id","toISOString","tuidSave","searchArr","api","tuidSearch","tuidArrGet","tuidArrSave","tuidArrPos","TuidImport","save","search","loadArr","saveArr","posArr","action_Action","pack","actionReturns","sheet_Sheet","states","op","ops","actions","discription","sheetSave","app","flow","sheetAction","brief","unpackSheet","flows","getSheet","getArchive","unpack","sheetArchive","sheetArchives","stateSheets","sheet_PageStateItems","stateSheetCount","s","count","mySheets","pageItems","getStateSheets","query_Query","isPaged","size","list","hasMore","startField","buildParams","unpackReturns","$page","query","table","book_Book","queryApiName","history_History","map_Map","queries","schemaFrom","keys","actionSchema","newAction","querySchema","newQuery","add","submit","del","pending_Pending","fieldDefaultValue","TuidsCache","clearCacheTimer","cacheTimer","uq_Uq","uqApp","uqData","sheets","books","maps","histories","pendings","tuidArr","actionArr","sheetArr","queryArr","bookArr","mapArr","historyArr","pendingArr","tuidsCache","baseUrl","trim","filter","net","init","accesses","buildEntities","loadEntities","buildTuids","buildAccess","entityName","newTuid","fromType","fromObj","book","pending","newBook","newMap","newHistory","newSheet","newPending","buildSheet","build","buildTuidBox","af","UqApp","tonvaAppName","collection","setLocal","tuidImport","setFrom","decodeUserToken","decodeGuestToken","jwt_decode__WEBPACK_IMPORTED_MODULE_0__","jwt_decode__WEBPACK_IMPORTED_MODULE_0___default","ItemEdit","itemSchema","uiItem","isChanged","internalStart","internalEnd","rules","nv","newValue","verifyRule","rule","Array","isArray","_form__WEBPACK_IMPORTED_MODULE_0__","_multiStep__WEBPACK_IMPORTED_MODULE_1__","vTuidMain_VTuidMain","CVEntity","onNew","onList","onSearch","openPage","link","newButton","placeholder","vTuidEdit_VTuidEdit","next","vTuidEdit_awaiter","vForm","closePage","finish","getValues","unique","setError","isCalling","returnCall","openPageElement","editView","vTuidSelect_VTuidSelect","mainView","react_default","createElement","initKey","onSearchMain","renderMainRow","clickMainRow","before","vTuidSelect_awaiter","searchMain","mainRowContent","ceasePage","showDiv","divView","renderDivRow","clickDivRow","divRowContent","showMain","rowContent","viewModel","ownerValue","divItems","getDivItems","vTuidView_VTuidView","vTuidView_awaiter","tools","buildForm","vTuidInfo_VTuidInfo","pageItems_TuidPageItems","vTuidList_VTuidListBase","vTuidList_awaiter","renderRow","clickRow","callOnSelected","rowKey","ownerId","onSelected","VTuidList","cTuid_CTuid","buildPageItems","first","cTuid_CTuidBase","cTuidEditFromName","cTuidInfoFromName","cTuidSelectFromName","VTuidMain","VTuidEdit","openVPage","onEdit","itemChanged","cTuidInfo","cTuid_CTuidInfo","cTuidEdit","CTuidEdit","edit","cTuidList","CTuidList","merge","CTuidMain","cTuid_CTuidSelect","VTuidSelect","VTuidInfo","vBand_VBand","renderContent","addRow","VFieldBand","vField","vBand_VArrBand","vArr","setAddRow","vBand_VSubmitBand","vSubmit","vSubmit_VSubmit","onClickSubmit","isOk","disabled","caption","Rule","RuleRequired","defy","NaN","RuleNum","RuleInt","isNaN","isInteger","RuleMin","min","check","RuleMax","max","vField_VField","fieldRes","buildRules","required","null","checkRules","errors","readonly","FormMode","editable","vField_decorate","vField_VInputControl","renderError","tonva_ui","ref","input","setInputValue","onFocus","onBlur","computeFields","onChange","setValue","inputGroup","suffix","ctrlCN","inputType","readOnly","maxLength","onKeyPress","RedMark","color","position","left","VStringField","KeyCode_Neg","KeyCode_Dot","vField_VNumberControl","charCode","extraChars","onKeyDot","onKeyNeg","preventDefault","_a","vField_VIntField","VDecField","VTextField","VDateTimeField","VDateField","vComputeField_VComputeField","vArr_VArr","ownerForm","onEditRow","rowPage","vArr_awaiter","valueBoxs","onRowChanged","rowValues","$owner","renderItem","showRow","editRow","editSubmitCaption","internalAddRow","newSubmitCaption","button","paddingTop","paddingBottom","arrsRes","arrRes","newSubmit","editSubmit","arrUI","vForm_VForm","buttonStyle","textAlign","paddingLeft","paddingRight","overflow","vTuidField_VTuidField","vTuidField_awaiter","showInfo","idBox","bandsBuilder_BandsBuilder","layout","formItems","bandsOnFly","bandsFromLayout","bands","bandsFromFields","bandFromArr","bandFromField","formItem","rfn","resFromName","buildVField","vFields","vArrs","onFormSubmit","buildFormValues","buildBands","bandColl","bandsBuilder","band","getVFields","getVArr","getVSubmit","rows","initValues","arrList","ctrl","valueFromFieldName","propName","buildFieldValues","buildObservableValues","vForm_decorate","HttpChannel","isCenter","hostUrl","apiToken","showError","_host__WEBPACK_IMPORTED_MODULE_2__","k","buildOptions","innerFetch","buildError","timeOutHandler","encodeURI","ok","statusText","ct","retJson","_ui_nav__WEBPACK_IMPORTED_MODULE_1__","_appBridge__WEBPACK_IMPORTED_MODULE_0__","Headers","append","resOptions","resLang","lodash__WEBPACK_IMPORTED_MODULE_0__","_","l","languages","setResOptions","control_ControlBase","formView","renderControl","hasError","filled","validate","control_Control","face","setProps","element","defaultValue","clearErrors","clearValue","isOK","getValueFromElement","notes","buttonsControl_ButtonsControl","otherClick","onOther","readValues","nothing","btnOther","submitButton","otherButton","TxtRequired","charsControl_CharsControl","parseValue","lodash","classnames","form-control","has-success","is-invalid","is-valid","renderInput","stringControl_StringControl","ErrInvalidNumber","ErrMin","ErrMax","unknownControl_UnknownControl","role","unknownControl_EmptyControl","pickIdControl_PickIdControl","pick","fromPicked","onPicked","itemFromId","initCaption","String","controlContent","component","pickIdControl_decorate","pickTuidControl_PickTuidControl","onIdChanged","onFormValues","pickTuidControl_decorate","pickControl_PickControl","pickControl_awaiter","Content","pickControl_decorate","createControl","group","groupRow","createGroupControl","fieldRow","fieldType","defaultFaces","controls","createFieldControl","help","string","password","number","parseFloat","checkbox","trueValue","falseValue","checked","radiobox","selectedIndex","selectedOptions","pick-id","pick-tuid","textarea","int","dec","bool","bootstrapCreateRow","elementCreateRow","_control__WEBPACK_IMPORTED_MODULE_1__","RowContainer","cc","control","setInitValues","ElementRowContainer","BootStrapRowContainer","refetchApi","ApiBase","getHttpChannel","callFetch","PageHeader","logoutClick","_nav__WEBPACK_IMPORTED_MODULE_1__","showLogout","navChange","hasBack","href","debugLogout","b","nick","openWindow","rightView","Badge_Badge","badge","badgeAlign","badgeVertical","LMR_LMR","cursor","LMR_decorate","FA_FA","spin","fixWidth","border","pull","pulse","rotate","flip","inverse","Muted","DefaultRow","vQueryMain_VQueryMain","resetPage","loadPage","replacePage","pageResult","queryResult","again","renderExtra","rightClose","queryRow","vQuerySelect_VQuerySelect","vQuerySelect_awaiter","selectRow","vQuerySelect_QueryPageItems","cQuery_CQueryBase","cQuery_CQuery","VQueryMain","main","cQuery_CQuerySelect","VQuerySelect","ImageItemEdit","_itemEdit__WEBPACK_IMPORTED_MODULE_7__","overSize","upload","resUploader","resId","_page__WEBPACK_IMPORTED_MODULE_6__","_resUploader__WEBPACK_IMPORTED_MODULE_3__","multiple","maxSize","padding","_image__WEBPACK_IMPORTED_MODULE_4__","_nav__WEBPACK_IMPORTED_MODULE_5__","mobx__WEBPACK_IMPORTED_MODULE_2__","userApi","_net__WEBPACK_IMPORTED_MODULE_0__","_user__WEBPACK_IMPORTED_MODULE_1__","account","verify","prop","Loading","ResUploader","files","fileInput","FormData","file","abortController","AbortController","signal","onFilesChange","CApp","cImportUqs","cUqCollection","onRowClick","selectUnitPage","appUnits","setSettings","getCUq","uqUI","CUq","_cUq__WEBPACK_IMPORTED_MODULE_3__","cUqArr","VAppMain","retErrors","_centerApi__WEBPACK_IMPORTED_MODULE_4__","userAppUnits","showUnsupport","appUnit","_uqs__WEBPACK_IMPORTED_MODULE_5__","uqAppData","promiseInits","promiseChecks","uqFullName","newCUq","addUq","checkEntities","checks","retError","setTuidImportsLocal","clearPrevPages","showMainPage","renderView","userName","uqId","sheetTypeId","getCUqFromId","navSheet","appPage","appContent","entityIcons","react__WEBPACK_IMPORTED_MODULE_0___default","ControllerUq","CenterApi","centerApi","_rule__WEBPACK_IMPORTED_MODULE_0__","_field__WEBPACK_IMPORTED_MODULE_1__","_face__WEBPACK_IMPORTED_MODULE_2__","_TonvaForm__WEBPACK_IMPORTED_MODULE_5__","FormView","tonva__WEBPACK_IMPORTED_MODULE_2__","buildRows","some","every","formRows","createRow","buildRow","buttonsRow","createButtons","_rowContainer__WEBPACK_IMPORTED_MODULE_4__","formRow","formRowCreator","_control__WEBPACK_IMPORTED_MODULE_3__","buttons","vMain_VSheetMain","newClick","schemaClick","archivesClick","sheetStateClick","renderState","getStateLabel","templet","statesCount","isDev","vNew_VSheetNew","vNew_awaiter","valuesWithBox","onSave","leftFlowStyle","width","vSheetView_VSheetView","flowRow","preState","sheetView","removed","sheetData","vEdit_VSheetEdit","vEdit_awaiter","saveSheet","controllers_form","vSheetAction_VSheetAction","actionClick","vSheetAction_awaiter","acted","deleteClick","editClick","editSheet","actionButtons","startButtons","no","stateLabel","getActionLabel","backPage","vSchema_VSheetSchema","schemaStringify","vArchives_VArchives","archiveClick","vArchives_awaiter","processing","archiveRow","getArchives","vList_VSheetList","rowClick","vList_awaiter","pageStateItems","listRow","stateName","vArchived_VArchived","vSheet_VSheet","vSaved_VSheetSaved","restart","vSaved_awaiter","vSheetProcessing_VSheetProcessing","cSheet_CSheet","cSheet_awaiter","showSaved","loadStateSheetCount","createPageStateItems","VSheetMain","onSheet","me","$","sheetActPreState","sheetActState","changeStateCount","curState","delta","stateCount","VSheetNew","sheetNew","VSheetSaved","sheetSaved","VSheetEdit","sheetEdit","VSheetSchema","VArchives","VArchived","VSheetList","VSheetAction","VSheetProcessing","showArchived","showAction","showProcessing","beforeStart","onEvent","getSheetData","vCall","inBrief","getArchived","getStateUI","actionName","sheetTitle","disc","vBookMain_VBookMain","cBook_CBook","VBookMain","vUq_VUq","isSysVisible","linkItem","cLink","lists","tuidLinks","mapLinks","sheetLinks","actionLinks","queryLinks","bookLinks","historyLinks","pendingLinks","Fragment","isVisible","controllers_link","cTuidMain","cMap","cSheet","cAction","cQuery","cBook","cHistory","cPending","lowerPropertyName","cUq_CUq","cApp","controllers_tuid","CTuidSelect","CTuidInfo","CQuery","CQuerySelect","CMap","CAction","CSheet","CBook","CHistory","controllers_history","CPending","getUI","tuidPlaceHolder","en","sheetFromTypeId","startSheet","entityType","cFromName","tUI","cEntity","VUq","vMain_VMapMain","itemRender","ItemRow","remove","valuesView","box","isLeaf","keyIndex","keyUI","keyUIs","keyContent","valuesContent","keyNone","isFrom","addClick","removeClick","inputValues_VInputValues","onValuesSubmit","inputValues_awaiter","cMap_MapItem","cMap_CMap","cMap_awaiter","keysLen","keyFields","keysLast","idx","keyField","kn","searchParam","ki","searchOnKey","arr1","nullable","rowIndex","createItem","getLable","confirmDelete","template","v0","q","retFields","newItem","addItem","VMapMain","tuidBox","callParam","vPendingMain_VPendingMain","cPending_CPending","VPendingMain","vActionMain_VActionMain","resultPage","mainPage","cAction_CAction","VActionMain","submitReturns","vHistoryMain_VHistoryMain","cHistory_CHistory","VHistoryMain","netToken","_uqApi__WEBPACK_IMPORTED_MODULE_0__","_wsChannel__WEBPACK_IMPORTED_MODULE_1__","Controller","_net__WEBPACK_IMPORTED_MODULE_3__","onMessageReceive","onMessage","isLogined","unregisterReceiveHandler","receiveHandlerId","onDispose","vp","registerReceiveHandler","_resolve_$","View","VPage","_schema__WEBPACK_IMPORTED_MODULE_0__","_uiSchema__WEBPACK_IMPORTED_MODULE_1__","mobileRegex","emailRegex","DropdownActions","handleDocumentClick","dropdownOpen","contains","menu","toggle","removeEventListener","isRight","hasIcon","data-toggle","aria-expanded","dropdown-menu","dropdown-menu-right","aria-hidden","EasyDate","EasyTime","renderDate","vDate","withTime","nDate","_date","month","year","hm","nowYear","hour","getHours","minute","getMinutes","getDate","getMonth","getFullYear","Media","_ui__WEBPACK_IMPORTED_MODULE_2__","disp","px","py","SearchBox","allowEmptySearch","inputSize","lab","inputClassName","buttonText","CacheIds","maxCount","dict","Map","loadId","_loadIds","_loadId","TonvaForm","_formView__WEBPACK_IMPORTED_MODULE_2__","MultiStep","lodash__WEBPACK_IMPORTED_MODULE_1__","lodash__WEBPACK_IMPORTED_MODULE_1___default","classnames__WEBPACK_IMPORTED_MODULE_2__","_form__WEBPACK_IMPORTED_MODULE_3__","stepViews","topView","onPrev","onNext","stepName","steps","ButtonConten","prefix","btnContent","formProps","setStep","nextStepName","num","pIcon","sIcon","RuleCustom","func","RulePredefined","rules_RuleNum","minMsg","maxMsg","checkMore","integer","widget_Widget","context","fieldProps","contextErrors","onInputChange","changeValue","container","visible","inNode","requiredFlag","FieldContainer","getUiItem","removeErrorWidget","addErrorWidget","isChanging","initData","fromElement","onChanging","onChanged","prev","allowChange","setDataValue","setElementValue","fieldClass","FieldClass","uiLabel","Templet","errorList","tag","textWidget_TextWidget","onKeyDown","internalOnKeyDown","keyCode","onEnter","blur","checkContextRules","renderTemplet","renderErrors","numberWidget_NumberWidget","updownWidget_UpdownWidget","returnValue","isValidKey","dateWidget_DateWidget","checkBoxWidget_CheckBoxWidget","defaultChecked","selectWidget_SelectWidget","option","selectWidget_decorate","radioStyle","height","idWidget_IdWidget","idWidget_awaiter","pickId","clearContextError","required-item","cursor-pointer","idWidget_decorate","Unknown","dataType","uiType","dataTypes","buttonWidget_ButtonWidget","buttonWidget_awaiter","observerRender","widget","widgetType","ButtonClass","context_Context","uiSchema","isRow","widgets","errorWidgets","subContexts","arrRowContexts","itemName","getDisabled","setDisabled","getReadOnly","setReadOnly","getVisible","setVisible","buttonName","onButtonClick","checkFieldRules","rowContext","setContextError","clearWidgetsErrors","checkHasError","clearContextErrors","context_decorate","rowKeySeed","RowContext","parentContext","arrSchema","uiArr","itemSchemas","parentData","FormContext","ContextContainer","ArrComponent","selectable","deletable","restorable","getArrRowContexts","arrLabel","ArrContainer","RowSeperator","formSelectable","formDeletable","formRestorable","arrSelectable","arrDeletable","arrRestorable","ac","rc","rs","sep","typeofTemplet","factory","selectCheck","deleteIcon","$isSelected","$source","isDeleted","$isDeleted","onDelClick","editContainer","deleted","row-selected","Provider","imageWidget_ImageWidget","imageWidget_awaiter","imageItemEdit","imageSrc","end","ui_image","imageWidget_decorate","widgetsFactory","datetime","time","email","updown","image","checkboxes","radio","range","typeWidget","getItemSchema","getTypeWidget","WidgetClass","formRes","zh","form_Form","watch","formData","calcSelectOrDelete","DefaultContainer","DefaultFieldContainer","fieldLabelSize","labelView","fieldCol","DefaultFieldClass","DefaultButtonClass","DefaultRes","ui_res","py-3","Container","formContext","initDataItem","arrItem","arrItems","arrDict","arrItemOperated","formArrVal","beforeShow","contextType","base_ListBase","selectedItems","nextProps","clickable_Clickable","static_Static","selectable_Selectable","itemsArray","compare","_selectedItems","selected","labelId","si","buildItems","anySelected","onSelect","flex","marginBottom","htmlFor","selectable_decorate","list_List","listBase","nextState","nextContext","updateProps","isLoading","staticRow","list_decorate","stringItemEdit_StringItemEdit","edit_itemEdit","preValue","verifyValue","radioItemEdit_RadioItemEdit","selectItemEdit_SelectItemEdit","edit_Edit","defaultSepClassName","defaultRowContainerClassName","divValue","requireFlag","rowContainerClassName","edit_awaiter","stopEdit","onItemChanged","onItemClick","itemEdit","createItemEdit","topBorderClassName","bottomBorderClassName","sepClassName","topBorder","bottomBorder","elItems","PropRow","row_PropBorder","borderTop","row_PropGap","w","backgroundColor","valueAlignStart","valueAlignCenter","valueAlignEnd","row_LabeledPropRow","gridProps","col","labelFixLeft","bk","bg-white","renderLabel","renderProp","align","vAlign","alignValue","renderPropBody","renderPropContent","StringPropRow","NumberPropRow","row_ListPropRow","borderBottom","row_ComponentPropRow","full","propView_PropView","isGap","PropGrid_PropGrid","propView","Tab","_content","contentBuilder","tabs_Tabs","tabClick","selectedTab","tabBack","contentBack","notify","tabName","display","notifyCircle","userSetProp","FetchErrorView","reApi","_net__WEBPACK_IMPORTED_MODULE_1__","errContent","LocalData","Data","module","exports","mainApi","tonva","toUser","fromUnit","fromApp","fellow","isOwner","isAdmin","apps","member","assigned","roles","devApi","uqsText","service","admins_Admins","store","owners","admins","fellows","unitAdmins","ua","fellowId","unitSetAdmin","removeCur","admin","unitAddAdmin","dev_ObjItems","dev","_load","_save","_inc","_del","_dec","dev_decorate","dev_Apps","searchedUqs","saveApp","delApp","counts","searchUq","searchPageSize","allUqs","appBindUq","dev_Uqs","saveUq","delUq","dev_Buses","buses","saveBus","delBus","bus","checkBusFace","checkBusQuery","busTypes","refNameOk","faceName","refArrayOk","checkBusQueryParam","dev_Servers","servers","saveServer","delServer","server","dev_Services","services","saveService","delService","changeServiceProp","loadUqServices","SearchItems","dev_Dev","searchApp","searchServer","cacheIds_CacheUnits","cacheIds_CacheUqs","cacheIds_CacheApps","cacheIds_CacheServers","store_Store","cacheUnits","cacheUqs","cacheApps","cacheServers","memberCount","roleApps","roleMember","roleMembers","memberRoles","unitChangeProp","unitApps","unitMemberCount","uqServer","uqBuilderUrl","appId","unitDeleteApp","inUnit","unitAddApp","unitRoles","unitAddRole","unitRoleChangeProp","unitRoleApps","unitRoleSetApps","unitMembers","unitAssignMember","unitMemberRoles","rId","unitSetMemberRoles","org","store_decorate","store_store","NewFellow_NewFellowPage","onSendInvitation","NewFellow_awaiter","addNew","NewFellow","NewFellow_decorate","EditAdmin_EditAdmin","EditAdmin_awaiter","isRoot","unitAdmin","Fellow","Administors_EditAdmin","EditAdmin_decorate","Administors_AdministorsPage","onNewOwner","newAdmin","onNewAdmin","ownersView","adminsView","onNewFellow","showOwners","showAdmins","Administors","Administors_decorate","idDates_IdDates","date_init","date_update","span","isLink","unitSpan_UnitSpan","unitSpan_UnitInfo","unitSpan_decorate","unitSpan_UnitName","consts_appIcon","REACT_APP_ICON","REACT_APP_ITEM_ICON","uqSpan_UqSpan","uqSpan_UqInfo","uqSpan_decorate","appSpan_AppSpan","appSpan_AppInfo","public","appSpan_decorate","apis","appSpan_AppRow","serverSpan_ServerSpan","serverSpan_ServerInfo","cloud","ip","serverSpan_decorate","stringValueEdit_StringValueEdit","stringValueEdit_awaiter","errorDiv","info","idPickPage_IdPickPage","itemClick","idPickPage_awaiter","candidateItems","searchPlaceHolder","idPickPage_decorate","info_Info","renderUqRow","uqAccess","act","info_awaiter","appActed","newInUnit","restoreUnitApp","stopUnitApp","newApp","addUnitApp","uqAccesses","faName","info_decorate","new_PageApps","new_NewApp","new_awaiter","appClick","renderApp","new_decorate","Apps_AppsPage","loadApps","ban","src_Apps","Apps_decorate","newRole_NewRole","newRole_awaiter","roleApps_RoleApps","renderRoleApp","memberPage_MemberPage","renderMemberRole","setRole","memberPage_SetRole","loadRoles","loadMemberRoles","orgValue","roleUser","onAssigned","roleClick","memberPage_decorate","setMemberRoles","selectRole","renderRole","roleSelect","membersPage_MembersPage","loadMembers","MemberRow","setRoleUser","roleId","membersPage_MemberSearch","renderMember","userClick","membersPage_decorate","members","rolePage_RolePage","roleAppClick","rolePage_RoleApps","loadRoleApps","rolePage_EditRole","onMembersClick","membersLeft","membersRight","editRole","addRoleApp","rolePage_decorate","roleChangeProp","isSysRole","onNameChanged","onDiscriptionChanged","setRoleApps","appSelect","midClassName","Members_Members","newRole","allUsersClick","Members_decorate","ServerCaption","editPage_schema","editPage_EditBasePage","editPage_awaiter","moreCandidates","pickServerId","renderServerInput","itemId","editPage_EditPage","editPage_NewPage","appsPage_AppsPage","appList","listRowClick","appRow","spanCaption","appUqs_SearchUqPage","appUqs_awaiter","onUq","getMyUqs","appUqs_decorate","appUqs_AppUqs","removeBind","btnProps","appUqs_Uqs","listHeader","btn","onBind","appPage_AppPage","editItem","appPage_awaiter","deleteItem","deleteApp","menuItems","btnAddUq","uqClick","elAccess","bind_access","uqBindPage_UqBindPage","onCheckChanged","accessChecked","saveUqBind","uqBindPage_awaiter","removeUqBind","btnDelete","checkAccessList","bc","apps_AppController","apps_awaiter","service_count","buildBindUqs","isNew","uaUq","apps_decorate","groupStart","groupEnd","Section","resultSections_StringSection","resultSections_GroupSection","line","titleIcon","collaps","whiteSpace","resultSections_decorate","resultSections_ErrorSection","ResultSections","sections","stop","addToGroup","addText","mayStart","fastUpload","thoroughlyUpload","uqUpload_UqUpload","upFiles","fileClick","fr","FileReader","onload","uqUpload_UqPage","readAsText","onUpdate","uqUpload_awaiter","update","onUpdateThoroughly","lastModifiedDate","trunc","sz","thoroughly","uqUpload_CompileResult","uploadOrDeploy","fileList","fileRender","encType","compiled","fastDeploy","thoroughlyDeploy","uqUpload_UqDeploy","onDeploy","onDeployThoroughly","doubleClick","pane","getParent","topIntoView","bottomIntoView","renderText","section","resultSections","seconds","abort","timeHandler","setInterval","scrollIntoView","clearInterval","tagName","parentElement","startAutoScrollToBottom","reader","total","pump","read","done","compile_time","deploy_time","uintArray","encodedString","fromCharCode","apply","decodeURIComponent","uintToString","byteLength","consume","getReader","endAutoScrollToBottom","onDoubleClick","wordWrap","fontWeight","uqUpload_decorate","createIdPick_IdPickPage","newServicePage_ServerCaption","urlRow","urlRowTest","serverRow","newServicePage_awaiter","dbRow","newServicePage_NewServicePage","bindId","tonva_form","tonvaForm","servicePage_ServicePage","onUrlChanged","servicePage_awaiter","changeProp","onUrlTestChanged","onDbChanged","onDeleteClick","servicePage_decorate","editPage_formRows","uqs_editPage_EditBasePage","uqs_editPage_awaiter","uqs_editPage_EditPage","uqs_editPage_NewPage","uqPage_UQPage","uqPage_awaiter","deleteUq","onServiceClick","onUqUpload","onUqDeploy","serviceClick","btnAddService","showNewServicePage","renderService","compile","deploy","listPage_ListPage","uqList","uqController_UQController","uqController_awaiter","loadUqEntities","uqGetEntities","r0","svc","uqController_decorate","buses_Info","mine","version","buses_SchemaView","buses_decorate","repeated","canEdit","ObjView_ObjView","ObjView_Info","ObjView_New","ObjView_decorate","saveCur","stepHeader","ObjView_Edit","ex","extraMenuActions","vApps_VApps","appUsers","users","appUsersList","onAppsClick","searchBox","vUsers_VUsers","userApps","userAppsList","searchUser","onUsersClick","vApp_VApp","curApp","curAppUsers","onAppEditUsers","vUser_VUser","curUser","curUserApps","onUserEditApps","vAppEditUsers_VAppEditUsers","appEditUsers","renderUser","editUser","onUserChanged","vAppEditUsers_awaiter","bindAppUser","vUserEditApps_VUserEditApps","userEditApps","editApp","onAppChanged","vUserEditApps_awaiter","bindUserApp","VAddUser_VAddUser","onSearchFocus","divUser","onAddUser","VAddUser_awaiter","userFromKey","addUser","addedPage","onAddApps","onContinueAddUser","VAddUser_decorate","cUsers_UsersController","onAppUsers","cUsers_awaiter","loadAppUsers","onUserApps","loadUserApps","unitOneAppUsers","unitOneUserApps","unitAppEditUsers","unitUserEditApps","unitAddUser","appIcon","userIcon","unitAppUsers","coll","unitUsers","cUsers_decorate","Admin_CAdmin","userAdminUnits","adminUnits","loadUnit","isProduction","loadAdminUnits","Admin_VAdmin","noUnitPage","Admin_awaiter","Admin_AdminPage","rArrow","typeCaptions","1","2","3","appsAction","usersAction","newUsersAction","adminsAction","noneAction","mid","objProps","P","loadCounts","appAction","uqAction","busAction","serverAction","vice","Admin_UnitProps","Admin_decorate","src_App_0","cAdmin","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","react_dom","URL","origin","response","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c5793520.chunk.js","sourcesContent":["export {left0} from './left0';\r\nexport * from './user';\r\nexport * from './net';\r\nexport * from './ui';\r\nexport * from './uid';\r\nexport {PageItems} from './pageItems';\r\nexport {CacheIds} from './cacheIds';\r\nexport * from './entry';\r\nexport * from './uq';\r\n","export * from './nav';\r\nexport * from './pageHeader';\r\nexport * from './page';\r\nexport * from './VM';\r\nexport * from './schema';\r\nexport * from './form';\r\nexport * from './edit';\r\nexport * from './res';\r\nexport * from './tabs';\r\nexport * from './loading';\r\nexport * from './image';\r\nexport * from './resUploader';\r\nexport * from './rules';\r\nexport * from './list';\r\nexport * from './dropDownActions';\r\nexport * from './easyDate';\r\nexport * from './propGrid';\r\nexport * from './components';\r\nexport * from './media';\r\nexport * from './searchBox';\r\n","import * as React from 'react';\r\nimport { Controller, VPage, View } from '../../ui';\r\nimport { Entity, Field } from '../uqs';\r\nimport { CUq } from './cUq/cUq';\r\nimport { VForm, FieldInputs, FieldCall, FormOptions, FormMode } from './form';\r\nimport { CQuerySelect } from './query';\r\nimport { FormUI, FieldTuidUI } from './formUI';\r\nimport { entityIcons } from './icons';\r\nimport { ControllerUq } from './ControllerUq';\r\n\r\nexport interface EntityUI {\r\n    form?: FormUI;\r\n}\r\n\r\nexport abstract class CEntity<T extends Entity, UI extends EntityUI> extends ControllerUq {\r\n    constructor(cUq: CUq, entity: T, ui: UI, res: any) {\r\n        super(cUq, res);\r\n        Object.setPrototypeOf(this.x, cUq.x);\r\n        let {name, typeName} = entity;\r\n        this.entity = entity;\r\n        this.ui = ui; // || entityUI.ui;\r\n        this.label = this.res.label || name;\r\n        this.icon = entityIcons[typeName];\r\n    }\r\n    readonly entity: T;\r\n    readonly ui: UI;\r\n\r\n    protected async beforeStart():Promise<boolean> {\r\n        //if (await super.beforeStart() === false) return false;\r\n        await this.entity.loadSchema();\r\n        return true;\r\n    }\r\n\r\n    createForm(onSubmit:()=>Promise<void>, values?:any, mode?:FormMode) {\r\n        let options = this.buildFormOptions(mode);\r\n        let ret = new VForm(options, onSubmit);\r\n        ret.setValues(values);\r\n        return ret;\r\n    }\r\n\r\n    private buildFormOptions(mode?:FormMode):FormOptions {\r\n        let {fields, arrFields} = this.entity;\r\n        let none, submitCaption, arrNewCaption, arrEditCaption, arrTitleNewButton;\r\n        if (this.res !== undefined) {\r\n            none = this.res['none'];\r\n            submitCaption = this.res['submit'];\r\n            arrNewCaption = this.res['arrNew'];\r\n            arrEditCaption = this.res['arrEdit'];\r\n            arrTitleNewButton = this.res['arrTitleNewButton'];\r\n        }\r\n        if (none === undefined) {\r\n            none = this.cUq.res['none'] || 'none';\r\n        }\r\n        if (submitCaption === undefined)\r\n            submitCaption = this.cUq.res['submit'] || 'Submit';\r\n        if (arrNewCaption === undefined)\r\n            arrNewCaption = this.cUq.res['arrNew'] || 'New';\r\n        if (arrEditCaption === undefined)\r\n            arrEditCaption = this.cUq.res['arrEdit'] || 'Edit';\r\n        if (arrTitleNewButton === undefined)\r\n        arrTitleNewButton = this.cUq.res['arrTitleNewButton'];\r\n        if (mode === undefined) mode = FormMode.new;\r\n        let formUI = this.ui.form;\r\n        let ret:FormOptions = {\r\n            fields: fields,\r\n            arrs: arrFields,\r\n            ui: formUI,\r\n            res: this.res || {},\r\n            inputs: this.buildInputs(formUI),\r\n            none: none,\r\n            submitCaption: submitCaption,\r\n            arrNewCaption: arrNewCaption,\r\n            arrEditCaption: arrEditCaption,\r\n            arrTitleNewButton: arrTitleNewButton,\r\n            mode: mode,\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private buildInputs(formUI: FormUI):FieldInputs {\r\n        let {fields, arrFields} = this.entity;\r\n        let ret:FieldInputs = {};\r\n        this.buildFieldsInputs(ret, fields, undefined, formUI);\r\n        if (arrFields !== undefined) {\r\n            for (let arr of arrFields) {\r\n                let {name, fields} = arr;\r\n                let items = formUI && formUI.items;\r\n                this.buildFieldsInputs(ret, fields, name, items && items[name] as FormUI);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private buildFieldsInputs(ret:FieldInputs, fields:Field[], arr:string, formUI: FormUI) {\r\n        if (arr !== undefined) {\r\n            let arrFieldInputs = ret[arr];\r\n            if (arrFieldInputs === undefined) {\r\n                ret[arr] = arrFieldInputs = {};\r\n                ret = arrFieldInputs;\r\n            }\r\n        }\r\n        for (let field of fields) {\r\n            let {name, _tuid} = field;\r\n            if (_tuid === undefined) continue;\r\n            let {tuid} = _tuid;\r\n            let fieldUI = formUI && formUI.items && formUI.items[name] as FieldTuidUI;\r\n            ret[name] = {\r\n                select: this.buildSelect(field, arr, fieldUI),\r\n                content: this.buildContent(field, arr),\r\n                placeHolder: this.cUq.getTuidPlaceHolder(tuid),\r\n            };\r\n        }\r\n    }\r\n\r\n    protected buildSelect(field:Field, arr:string, fieldUI: FieldTuidUI):FieldCall {\r\n        return async (form:VForm, field:Field, values:any):Promise<any> => {\r\n            let {_tuid } = field;\r\n            let {tuid, ownerField} = _tuid;\r\n            let cTuidSelect = undefined; // await tuid.cSelectFrom();\r\n            let param:any = undefined;\r\n            if (ownerField !== undefined) param = form.getValue(ownerField.name);\r\n            if (fieldUI && fieldUI.autoList === true) {\r\n                console.log('select search set param=empty string');\r\n                param = '';\r\n            }\r\n            let ret = await cTuidSelect.call(param);\r\n            cTuidSelect.removeCeased(); // 清除已经废弃的顶部页面\r\n            if (ret === undefined) return undefined;\r\n            let id = cTuidSelect.idFromItem(ret);\r\n            _tuid.useId(id);\r\n            return id;\r\n        };\r\n    }\r\n\r\n    protected buildContent(field:Field, arr:string): React.StatelessComponent<any> {\r\n        return;\r\n    }\r\n\r\n    cQuerySelect(queryName:string):CQuerySelect {\r\n        return this.cUq.cQuerySelect(queryName);\r\n    }\r\n}\r\n\r\nexport abstract class VEntity<T extends Entity, UI extends EntityUI, C extends CEntity<T, UI>> extends VPage<C> {\r\n    protected readonly entity: T;\r\n    protected readonly ui: UI;\r\n    constructor(controller: C) {\r\n        super(controller);\r\n        this.entity = controller.entity;\r\n        this.ui = controller.ui;\r\n    }\r\n\r\n    get label():string {return this.controller.label}\r\n\r\n    //private _form_$: VForm;\r\n    protected createForm(onSubmit:()=>Promise<void>, values?:any, mode?:FormMode): VForm {\r\n        //if (this._form_$ !== undefined) return this._form_$;\r\n        return this.controller.createForm(onSubmit, values, mode);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable, has} from 'mobx';\r\nimport {User, Guest/*, UserInNav*/} from '../user';\r\nimport {Page} from './page';\r\nimport {netToken} from '../net/netToken';\r\nimport FetchErrorView from './fetchErrorView';\r\nimport {FetchError} from '../fetchError';\r\nimport {appUrl, setAppInFrame, getExHash, getExHashPos} from '../net/appBridge';\r\nimport {LocalData} from '../local';\r\nimport {guestApi, logoutApis, setCenterUrl, setCenterToken, WSChannel, appInFrame, isDevelopment, host} from '../net';\r\nimport { WsBase, wsBridge } from '../net/wsChannel';\r\nimport { resOptions } from './res';\r\nimport { Loading } from './loading';\r\n\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport '../css/va-form.css';\r\nimport '../css/va.css';\r\nimport '../css/animation.css';\r\nimport { FA } from './components';\r\n\r\nconst regEx = new RegExp('Android|webOS|iPhone|iPad|' +\r\n    'BlackBerry|Windows Phone|'  +\r\n    'Opera Mini|IEMobile|Mobile' , \r\n    'i');\r\nconst isMobile = regEx.test(navigator.userAgent);\r\n/*\r\nexport const mobileHeaderStyle = isMobile? {\r\n    minHeight:  '3em'\r\n} : undefined;\r\n*/\r\nconst logo = require('../img/logo.svg');\r\nlet logMark: number;\r\nconst logs:string[] = [];\r\n\r\nexport interface Props //extends React.Props<Nav>\r\n{\r\n    //view: JSX.Element | (()=>JSX.Element);\r\n    //start?: ()=>Promise<void>;\r\n    onLogined: ()=>Promise<void>;\r\n    notLogined?: ()=>Promise<void>;\r\n};\r\nlet stackKey = 1;\r\nexport interface StackItem {\r\n    key: number;\r\n    view: JSX.Element;\r\n    ceased: boolean;\r\n    confirmClose?: ()=>Promise<boolean>;\r\n    disposer?: ()=>void;\r\n}\r\nexport interface NavViewState {\r\n    stack: StackItem[];\r\n    wait: 0|1|2;\r\n    fetchError: FetchError\r\n}\r\n\r\nexport class NavView extends React.Component<Props, NavViewState> {\r\n    private stack: StackItem[];\r\n    private htmlTitle: string;\r\n    private waitCount: number = 0;\r\n    private waitTimeHandler?: NodeJS.Timer;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.back = this.back.bind(this);\r\n        this.navBack = this.navBack.bind(this);\r\n        this.stack = [];\r\n        this.state = {\r\n            stack: this.stack,\r\n            wait: 0,\r\n            fetchError: undefined\r\n        };\r\n    }\r\n    async componentWillMount() {\r\n        window.addEventListener('popstate', this.navBack);\r\n    }\r\n\r\n    async componentDidMount()\r\n    {\r\n        nav.set(this);\r\n        /*\r\n        let start = this.props.start;\r\n        if (start !== undefined) {\r\n            await start();\r\n        }\r\n        else {\r\n        */\r\n            await nav.start();\r\n        //}\r\n    }\r\n\r\n    get level(): number {\r\n        return this.stack.length;\r\n    }\r\n\r\n    startWait() {\r\n        if (this.waitCount === 0) {\r\n            this.setState({wait: 1});\r\n            this.waitTimeHandler = global.setTimeout(\r\n                () => {\r\n                    this.waitTimeHandler = undefined;\r\n                    this.setState({wait: 2});\r\n                },\r\n                1000) as NodeJS.Timer;\r\n        }\r\n        ++this.waitCount;\r\n        this.setState({\r\n            fetchError: undefined,\r\n        });\r\n    }\r\n\r\n    endWait() {\r\n        setTimeout(() => {\r\n            /*\r\n            this.setState({\r\n                fetchError: undefined,\r\n            });*/\r\n            --this.waitCount;\r\n            if (this.waitCount === 0) {\r\n                if (this.waitTimeHandler !== undefined) {\r\n                    clearTimeout(this.waitTimeHandler);\r\n                    this.waitTimeHandler = undefined;\r\n                }\r\n                this.setState({wait: 0});\r\n            }\r\n        },100);\r\n    }\r\n\r\n    async onError(fetchError: FetchError)\r\n    {\r\n        let err = fetchError.error;\r\n        if (err !== undefined && err.unauthorized === true) {\r\n            await nav.showLogin(undefined);\r\n            return;\r\n        }\r\n        this.setState({\r\n            fetchError: fetchError,\r\n        });\r\n    }\r\n\r\n    show(view: JSX.Element, disposer?: ()=>void): number {\r\n        this.clear();\r\n        return this.push(view, disposer);\r\n    }\r\n\r\n    push(view: JSX.Element, disposer?: ()=>void): number {\r\n        this.removeCeased();\r\n        if (this.stack.length > 0) {\r\n            window.history.pushState('forward', null, null);\r\n        }\r\n        let key = stackKey++;\r\n        this.stack.push({\r\n            key: key,\r\n            view: view, \r\n            ceased: false,\r\n            disposer: disposer\r\n        });\r\n        this.refresh();\r\n        //console.log('push: %s pages', this.stack.length);\r\n        return key;\r\n    }\r\n\r\n    replace(view: JSX.Element, disposer?: ()=>void): number {\r\n        let item:StackItem = undefined;\r\n        let stack = this.stack;\r\n        if (stack.length > 0) {\r\n            item = stack.pop();\r\n            //this.popAndDispose();\r\n        }\r\n        let key = stackKey++;\r\n        this.stack.push({\r\n            key: key, \r\n            view: view, \r\n            ceased: false,\r\n            disposer: disposer\r\n        });\r\n        if (item !== undefined) this.dispose(item.disposer);\r\n        this.refresh();\r\n        //console.log('replace: %s pages', this.stack.length);\r\n        return key;\r\n    }\r\n\r\n    ceaseTop(level:number = 1) {\r\n        let p = this.stack.length - 1;\r\n        for (let i=0; i<level; i++, p--) {\r\n            if (p < 0) break;\r\n            let item = this.stack[p];\r\n            item.ceased = true;\r\n        }\r\n    }\r\n\r\n    pop(level:number = 1) {\r\n        let stack = this.stack;\r\n        let len = stack.length;\r\n        //console.log('pop start: %s pages level=%s', len, level);\r\n        if (level <= 0 || len <= 1) return;\r\n        if (len < level) level = len;\r\n        let backLevel = 0;\r\n        for (let i = 0; i < level; i++) {\r\n            if (stack.length === 0) break;\r\n            //stack.pop();\r\n            this.popAndDispose();\r\n            ++backLevel;\r\n        }\r\n        if (backLevel >= len) backLevel--;\r\n        this.refresh();\r\n        if (this.isHistoryBack !== true) {\r\n            //window.removeEventListener('popstate', this.navBack);\r\n            //window.history.back(backLevel);\r\n            //window.addEventListener('popstate', this.navBack);\r\n        }\r\n        //console.log('pop: %s pages', stack.length);\r\n    }\r\n\r\n    popTo(key: number) {\r\n        if (key === undefined) return;\r\n        if (this.stack.find(v => v.key === key) === undefined) return;\r\n        while (this.stack.length >0) {\r\n            let len = this.stack.length;\r\n            let top = this.stack[len-1];\r\n            if (top.key === key) break;\r\n            this.pop();\r\n        }\r\n    }\r\n\r\n    topKey():number {\r\n        let len = this.stack.length;\r\n        if (len === 0) return undefined;\r\n        return this.stack[len-1].key;\r\n    }\r\n\r\n    removeCeased() {\r\n        for (;;) {\r\n            let p=this.stack.length-1;\r\n            if (p < 0) break;\r\n            let top = this.stack[p];\r\n            if (top.ceased === false) break;\r\n            let item = this.stack.pop();\r\n            let {disposer} = item;\r\n            this.dispose(disposer);\r\n        }\r\n        this.refresh();\r\n    }\r\n\r\n    private popAndDispose() {\r\n        this.removeCeased();\r\n        let item = this.stack.pop();\r\n        if (item === undefined) return;\r\n        let {disposer} = item;\r\n        this.dispose(disposer);\r\n        this.removeCeased();\r\n        return item;\r\n    }\r\n\r\n    private dispose(disposer:()=>void) {\r\n        if (disposer === undefined) return;\r\n        let item = this.stack.find(v => v.disposer === disposer);\r\n        if (item === undefined) disposer();\r\n    }\r\n\r\n    clear() {\r\n        let len = this.stack.length;\r\n        while (this.stack.length > 0) this.popAndDispose();\r\n        //this.refresh();\r\n        if (len > 1) {\r\n            //window.removeEventListener('popstate', this.navBack);\r\n            //window.history.back(len-1);\r\n            //window.addEventListener('popstate', this.navBack);\r\n        }\r\n    }\r\n\r\n    regConfirmClose(confirmClose:()=>Promise<boolean>) {\r\n        let stack = this.stack;\r\n        let len = stack.length;\r\n        if (len === 0) return;\r\n        let top = stack[len-1];\r\n        top.confirmClose = confirmClose;\r\n    }\r\n\r\n    private isHistoryBack:boolean = false;\r\n    navBack() {\r\n        nav.log('backbutton pressed - nav level: ' + this.stack.length);\r\n        this.isHistoryBack = true;\r\n        this.back(true);\r\n        this.isHistoryBack = false;\r\n    }\r\n\r\n    async back(confirm:boolean = true) {\r\n        let stack = this.stack;\r\n        let len = stack.length;\r\n        if (len === 0) return;\r\n        if (len === 1) {\r\n            if (self != window.top) {\r\n                window.top.postMessage({type:'pop-app'}, '*');\r\n            }\r\n            return;\r\n        }\r\n        let top = stack[len-1];\r\n        if (confirm===true && top.confirmClose) {\r\n            if (await top.confirmClose()===true) this.pop();\r\n        }\r\n        else {\r\n            this.pop();\r\n        }\r\n    }\r\n\r\n    confirmBox(message?:string): boolean {\r\n        return window.confirm(message);\r\n    }\r\n    clearError = () => {\r\n        this.setState({fetchError: undefined});\r\n    }\r\n    private clickCount = 0;\r\n    private firstClick: number = 0;\r\n    private clickRange = 3000;\r\n    private clickMax = 6;\r\n    private onClick = () => {\r\n        let now = Date.now();\r\n        if (now - this.firstClick > this.clickRange) {\r\n            this.clickCount = 1;\r\n            this.firstClick = now;\r\n            return;\r\n        }\r\n        ++this.clickCount;\r\n        if (this.clickCount >= this.clickMax) {\r\n            nav.reverseTest();\r\n            this.firstClick = 0;\r\n            return;\r\n        }\r\n    }\r\n    private onTestClick = () => {\r\n        nav.testing = false;\r\n        nav.push(<Page header={false}>\r\n            <div className=\"m-5 border border-info bg-white rounded p-4 text-center\">\r\n                <div>当前运行在测试模式</div>\r\n                <div className=\"mt-4\">\r\n                    <button className=\"btn btn-danger\" onClick={nav.toNormal}>正常模式</button>\r\n                    <button className=\"btn btn-outline-info ml-3\" onClick={()=>{nav.testing=true;this.pop()}}>测试模式</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n    }\r\n    render() {\r\n        const {wait, fetchError} = this.state;\r\n        let stack = this.state.stack;\r\n        let top = stack.length - 1;\r\n        let elWait = null, elError = null;\r\n        switch (wait) {\r\n            case 1:\r\n                elWait = <li className=\"va-wait va-wait1\">\r\n                </li>;\r\n                break;\r\n            case 2:\r\n                elWait = <li className=\"va-wait va-wait2\">\r\n                    <Loading />\r\n                </li>;\r\n                break;\r\n                //<i className=\"fa fa-spinner fa-spin fa-3x fa-fw\"></i>\r\n                //<span className=\"sr-only\">Loading...</span>\r\n        }\r\n        if (fetchError)\r\n            elError = <FetchErrorView clearError={this.clearError} {...fetchError} />\r\n        let test = nav.testing===true && \r\n            <span className=\"cursor-pointer position-absolute\" style={{lineHeight:0}}\r\n                onClick={this.onTestClick}>\r\n                <FA className=\"text-warning\" name=\"info-circle\" />\r\n            </span>;\r\n        return (\r\n        <ul className=\"va\" onClick={this.onClick}>\r\n            {\r\n                stack.map((item, index) => {\r\n                    let {key, view} = item;\r\n                    return <li key={key} style={index<top? {visibility: 'hidden'}:undefined}>\r\n                        {view}\r\n                    </li>\r\n                })\r\n            }\r\n            {elWait}\r\n            {elError}\r\n            {test}\r\n        </ul>\r\n        );\r\n    }\r\n\r\n    private refresh() {\r\n        // this.setState({flag: !this.state.flag});\r\n        this.setState({stack: this.stack });\r\n        // this.forceUpdate();\r\n    }\r\n}\r\n\r\nexport interface NavSettings {\r\n    loginTop?: JSX.Element;\r\n}\r\n\r\nexport class Nav {\r\n    private nav:NavView;\r\n    private ws: WsBase;\r\n    private wsHost: string;\r\n    private local: LocalData = new LocalData();\r\n    private navSettings: NavSettings;\r\n    @observable user: User/*InNav*/ = undefined;\r\n    @observable testing: boolean;\r\n    language: string;\r\n    culture: string;\r\n    resUrl: string;\r\n\r\n    constructor() {\r\n        let {lang, district} = resOptions;\r\n        this.language = lang;\r\n        this.culture = district;\r\n        this.testing = false;\r\n    }\r\n\r\n    get guest(): number {\r\n        let guest = this.local.guest;\r\n        if (guest === undefined) return 0;\r\n        let g = guest.get();\r\n        if (g === undefined) return 0;\r\n        return g.guest;\r\n    }\r\n\r\n    set(nav:NavView) {\r\n        //this.logo = logo;\r\n        this.nav = nav;\r\n    }\r\n\r\n    registerReceiveHandler(handler: (message:any)=>Promise<void>):number {\r\n        if (this.ws === undefined) return;\r\n        return this.ws.onWsReceiveAny(handler);\r\n    }\r\n\r\n    unregisterReceiveHandler(handlerId:number) {\r\n        if (this.ws === undefined) return;\r\n        if (handlerId === undefined) return;\r\n        this.ws.endWsReceive(handlerId);\r\n    }\r\n\r\n    private static testMode = '测试';\r\n    private static normalMode = '正常';\r\n    private setTesting(testing:boolean) {\r\n        this.testing = testing;\r\n        this.local.testing.set(testing);\r\n    };\r\n    private resetTest = () => {\r\n        this.setTesting(!this.testing);\r\n        //this.pop();\r\n        this.start();\r\n    }\r\n    toNormal = () => {\r\n        this.setTesting(false);\r\n        this.start();\r\n    }\r\n    reverseTest() {\r\n        let m1:string, m2:string;\r\n        if (this.testing === true) {\r\n            m1 = Nav.testMode;\r\n            m2 = Nav.normalMode;\r\n        }\r\n        else {\r\n            m1 = Nav.normalMode;\r\n            m2 = Nav.testMode;\r\n        }\r\n\r\n        this.push(<Page back=\"close\" header={false}>\r\n            <div className=\"m-5 border border-info bg-white rounded p-4 text-center\">\r\n                <div>\r\n                    <p>从{m1}模式切换到{m2}模式吗?</p>\r\n                    <p className=\"small text-muted\">测试模式下，页面左上角会有一个 <FA className=\"text-warning\" name=\"info-circle\" /></p>\r\n                </div>\r\n                <div className=\"mt-4\">\r\n                    <button className=\"btn btn-danger\" onClick={this.resetTest}>切换</button>\r\n                    <button className=\"btn btn-outline-info ml-3\" onClick={()=>this.pop()}>取消</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n    }\r\n\r\n    async onReceive(msg:any) {\r\n        if (this.ws === undefined) return;\r\n        await this.ws.receive(msg);\r\n    }\r\n\r\n    private async getPredefinedUnitName() {\r\n        try {\r\n            let unitRes = await fetch('unit.json', {});\r\n            //if (unitRes)\r\n            let res = await unitRes.json();\r\n            return res.unit;\r\n        }\r\n        catch (err) {\r\n            this.local.unit.clear();\r\n            return;\r\n        }\r\n    }\r\n\r\n    private async loadPredefinedUnit() {\r\n        let envUnit = process.env.REACT_APP_UNIT;\r\n        if (envUnit !== undefined) {\r\n            return Number(envUnit);\r\n        }\r\n        let unitName:string;\r\n        let unit = this.local.unit.get();\r\n        if (unit !== undefined) {\r\n            if (isDevelopment !== true) return unit.id;\r\n            unitName = await this.getPredefinedUnitName();\r\n            if (unitName === undefined) return;\r\n            if (unit.name === unitName) return unit.id;\r\n        }\r\n        else {\r\n            unitName = await this.getPredefinedUnitName();\r\n            if (unitName === undefined) return;\r\n        }\r\n        let unitId = await guestApi.unitFromName(unitName);\r\n        if (unitId !== undefined) {\r\n            this.local.unit.set({id: unitId, name: unitName});\r\n        }\r\n        return unitId;\r\n    }\r\n\r\n    setSettings(settings?: NavSettings) {\r\n        this.navSettings = settings;\r\n    }\r\n\r\n    hashParam: string;\r\n    private centerHost: string;\r\n    async start() {\r\n        try {\r\n            this.testing = this.local.testing.get();\r\n            await host.start(this.testing);\r\n            let hash = document.location.hash;\r\n            if (hash !== undefined && hash.length > 0) {\r\n                let pos = getExHashPos();\r\n                if (pos < 0) pos = undefined;\r\n                this.hashParam = hash.substring(1, pos);\r\n            }\r\n            nav.clear();\r\n            this.startWait();\r\n            let {url, ws, resHost} = host;\r\n            this.centerHost = url;\r\n            this.resUrl = 'http://' + resHost + '/res/';\r\n            this.wsHost = ws;\r\n            setCenterUrl(url);\r\n            \r\n            let guest:Guest = this.local.guest.get();\r\n            if (guest === undefined) {\r\n                guest = await guestApi.guest();\r\n            }\r\n            nav.setGuest(guest);\r\n\r\n            let exHash = getExHash();\r\n            let appInFrame = setAppInFrame(exHash);\r\n            if (exHash !== undefined && window !== window.parent) {\r\n                // is in frame\r\n                if (appInFrame !== undefined) {\r\n                    this.ws = wsBridge;\r\n                    console.log('this.ws = wsBridge in sub frame');\r\n                    //nav.user = {id:0} as User;\r\n                    if (self !== window.parent) {\r\n                        window.parent.postMessage({type:'sub-frame-started', hash: appInFrame.hash}, '*');\r\n                    }\r\n                    // 下面这一句，已经移到 appBridge.ts 里面的 initSubWin，也就是响应从main frame获得user之后开始。\r\n                    //await this.showAppView();\r\n                    return;\r\n                }\r\n            }\r\n\r\n            let predefinedUnit = await this.loadPredefinedUnit();\r\n            appInFrame.predefinedUnit = predefinedUnit;\r\n\r\n            let user: User = this.local.user.get();\r\n            if (user === undefined) {\r\n                let {notLogined} = this.nav.props;\r\n                if (notLogined !== undefined) {\r\n                    await notLogined();\r\n                }\r\n                else {\r\n                    await nav.showLogin(undefined);\r\n                }\r\n                return;\r\n            }\r\n\r\n            await nav.logined(user);\r\n        }\r\n        catch (err) {\r\n        }\r\n        finally {\r\n            this.endWait();\r\n        }\r\n    }\r\n\r\n    async showAppView() {\r\n        let {onLogined} = this.nav.props;\r\n        if (onLogined === undefined) {\r\n            nav.push(<div>NavView has no prop onLogined</div>);\r\n            return;\r\n        }\r\n        nav.clear();\r\n        await onLogined();\r\n        console.log('logined: AppView shown');\r\n    }\r\n\r\n    setGuest(guest: Guest) {\r\n        this.local.guest.set(guest);\r\n        netToken.set(0, guest.token);\r\n    }\r\n\r\n    saveLocalUser() {\r\n        this.local.user.set(this.user);\r\n    }\r\n\r\n    async logined(user: User, callback?: (user:User)=>Promise<void>) {\r\n        logoutApis();\r\n        let ws:WSChannel = this.ws = new WSChannel(this.wsHost, user.token);\r\n        ws.connect();\r\n\r\n        console.log(\"logined: %s\", JSON.stringify(user));\r\n        this.user = user;\r\n        this.saveLocalUser();\r\n        netToken.set(user.id, user.token);\r\n        if (callback !== undefined) //this.loginCallbacks.has)\r\n            callback(user);\r\n            //this.loginCallbacks.call(user);\r\n        else {\r\n            await this.showAppView();\r\n        }\r\n    }\r\n\r\n    loginTop(defaultTop:JSX.Element) {\r\n        return (this.navSettings && this.navSettings.loginTop) || defaultTop;\r\n    }\r\n\r\n    async showLogin(callback?: (user:User)=>Promise<void>, withBack?:boolean) {\r\n        let lv = await import('../entry/login');\r\n        let loginView = <lv.default \r\n            withBack={withBack} \r\n            callback={callback} />;\r\n        if (withBack !== true) {\r\n            this.nav.clear();\r\n            this.pop();\r\n        }\r\n        this.nav.push(loginView);\r\n    }\r\n\r\n    async showLogout(callback?: ()=>Promise<void>) {\r\n        nav.push(<Page header=\"安全退出\" back=\"close\">\r\n            <div className=\"m-5 border border-info bg-white rounded p-3 text-center\">\r\n                <div>退出当前账号不会删除任何历史数据，下次登录依然可以使用本账号</div>\r\n                <div className=\"mt-3\">\r\n                    <button className=\"btn btn-danger\" onClick={()=>this.logout(callback)}>退出</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n    }\r\n\r\n    async logout(callback?:()=>Promise<void>) { //notShowLogin?:boolean) {\r\n        appInFrame.unit = undefined;\r\n        this.local.logoutClear();\r\n        this.user = undefined; //{} as User;\r\n        logoutApis();\r\n        let guest = this.local.guest.get();\r\n        setCenterToken(0, guest && guest.token);\r\n        this.ws = undefined;\r\n        /*\r\n        if (this.loginCallbacks.has)\r\n            this.logoutCallbacks.call();\r\n        else {\r\n            if (notShowLogin === true) return;\r\n        }\r\n        await nav.start();\r\n        */\r\n        if (callback === undefined)\r\n            await nav.start();\r\n        else\r\n            await callback();\r\n    }\r\n\r\n    async changePassword() {\r\n        let cp = await import('../entry/changePassword');\r\n        nav.push(<cp.ChangePasswordPage />);\r\n    }\r\n\r\n    get level(): number {\r\n        return this.nav.level;\r\n    }\r\n    startWait() {\r\n        this.nav.startWait();\r\n    }\r\n    endWait() {\r\n        this.nav.endWait();\r\n    }\r\n    async onError(error: FetchError) {\r\n        await this.nav.onError(error);\r\n    }\r\n    show (view: JSX.Element, disposer?: ()=>void): void {\r\n        this.nav.show(view, disposer);\r\n    }\r\n    push(view: JSX.Element, disposer?: ()=>void): void {\r\n        this.nav.push(view, disposer);\r\n    }\r\n    replace(view: JSX.Element, disposer?: ()=>void): void {\r\n        this.nav.replace(view, disposer);\r\n    }\r\n    pop(level:number = 1) {\r\n        this.nav.pop(level);\r\n    }\r\n    topKey():number {\r\n        return this.nav.topKey();\r\n    }\r\n    popTo(key:number) {\r\n        this.nav.popTo(key);\r\n    }\r\n    clear() {\r\n        this.nav.clear();\r\n    }\r\n    navBack() {\r\n        this.nav.navBack();\r\n    }\r\n    ceaseTop(level?:number) {\r\n        this.nav.ceaseTop(level);\r\n    }\r\n    removeCeased() {\r\n        this.nav.removeCeased();\r\n    }\r\n    async back(confirm:boolean = true) {\r\n        await this.nav.back(confirm);\r\n    }\r\n    regConfirmClose(confirmClose: ()=>Promise<boolean>) {\r\n        this.nav.regConfirmClose(confirmClose);\r\n    }\r\n    confirmBox(message?:string): boolean {\r\n        return this.nav.confirmBox(message);\r\n    }\r\n    async navToApp(url: string, unitId: number, apiId?:number, sheetType?:number, sheetId?:number):Promise<void> {\r\n        return new Promise<void>((resolve, reject) => {\r\n            let sheet = this.centerHost.includes('http://localhost:') === true? 'sheet_debug':'sheet'\r\n            let uh = sheetId === undefined?\r\n                    appUrl(url, unitId) :\r\n                    appUrl(url, unitId, sheet, [apiId, sheetType, sheetId]);\r\n            console.log('navToApp: %s', JSON.stringify(uh));\r\n            nav.push(<article className='app-container'>\r\n                <span id={uh.hash} onClick={()=>this.back()} /*style={mobileHeaderStyle}*/>\r\n                    <i className=\"fa fa-arrow-left\" />\r\n                </span>\r\n                <iframe src={uh.url} />\r\n            </article>, \r\n            ()=> {\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n\r\n    navToSite(url: string) {\r\n        // show in new window\r\n        window.open(url);\r\n    }\r\n\r\n    get logs() {return logs};\r\n    log(msg:string) {\r\n        logs.push(msg);\r\n    }\r\n    logMark() {\r\n        let date = new Date();\r\n        logMark = date.getTime();\r\n        logs.push('log-mark: ' + date.toTimeString());\r\n    }\r\n    logStep(step:string) {\r\n        logs.push(step + ': ' + (new Date().getTime() - logMark));\r\n    }\r\n}\r\nexport const nav: Nav = new Nav();\r\n","import { decodeGuestToken } from '../user';\r\nimport { CenterApiBase } from './uqApi';\r\n\r\nexport class GuestApi extends CenterApiBase {\r\n    async guest(): Promise<any> {\r\n        //let guest = nav.local.guest.get();\r\n        let ret = await this.get('', {});\r\n        switch (typeof ret) {\r\n            default: return;\r\n            case 'string': return decodeGuestToken(ret);\r\n            case 'object':\r\n                let guest = decodeGuestToken(ret.token);\r\n                return guest;\r\n        }\r\n    }\r\n\r\n    async unitFromName(unitName:string): Promise<number> {\r\n        let ret = await this.get(unitName);\r\n        return ret && ret.unit;\r\n    }\r\n}\r\n\r\nexport const guestApi = new GuestApi('tv/guest/', undefined);\r\n","export {WSChannel, wsBridge, postWsToTop} from './wsChannel';\r\nexport * from './apiBase';\r\nexport * from './guestApi';\r\nexport * from './uqApi';\r\nexport {appInFrame, isBridged, getExHash} from './appBridge';\r\nexport * from './host';\r\nexport {httpGet} from './httpChannel';\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { jsonStringify } from '../../tools';\r\n\r\nexport type TypeViewModel = typeof ViewModel;\r\nexport type TypeView = React.StatelessComponent<{vm: ViewModel, className?:string|string[]}>;\r\nexport type TypeContent = React.StatelessComponent<any>;\r\n\r\nexport abstract class ViewModel {\r\n    protected abstract get view(): TypeView;\r\n    render(className?:string|string[]):JSX.Element {\r\n        if (this.view === undefined) return <div>??? viewModel 必须定义 view ???</div>\r\n        return React.createElement(this.view, {vm: this, className:className});\r\n    }\r\n}\r\n\r\nexport const PureJSONContent = (values:any, x?:any) => {\r\n    return <>content: {jsonStringify(values)}</>;\r\n}\r\nexport const JSONContent = observer(PureJSONContent);\r\nexport const RowContent = \r\n    (values:any) => <div className=\"px-3 py-2\">{jsonStringify(values)}</div>\r\n;\r\n","import _ from 'lodash';\r\nimport {nav} from '../ui';\r\nimport {uid} from '../uid';\r\nimport {uqTokenApi as uqTokenApi, callCenterapi, CenterAppApi, UqData, centerToken, UqAppData, setCenterToken} from './uqApi';\r\nimport {setSubAppWindow} from './wsChannel';\r\nimport { host } from './host';\r\n\r\nexport interface UqToken {\r\n    name: string;\r\n    db: string;\r\n    url: string;\r\n    token: string;\r\n}\r\nconst uqTokens:{[uqName:string]: UqToken}  = {};\r\nexport function logoutUqTokens() {\r\n    for (let i in uqTokens) uqTokens[i] = undefined;\r\n}\r\n\r\nexport interface AppInFrame {\r\n    hash: string;\r\n    unit: number;       // unit id\r\n    page?: string;\r\n    param?: string[];\r\n    predefinedUnit?: number;  // 比如像Cart这样的应用，直接让用户访问的，就需要在unit.json里面定义unitName\r\n}\r\nconst appsInFrame:{[key:string]:AppInFrame} = {};\r\n\r\nclass AppInFrameClass implements AppInFrame {\r\n    hash: string;\r\n    private _unit: number;\r\n    get unit(): number {return this._unit;}       // unit id\r\n    set unit(val:number) { this._unit=val;}\r\n    page?: string;\r\n    param?: string[];\r\n}\r\n\r\nexport let appInFrame:AppInFrame = new AppInFrameClass();\r\n/* {\r\n    hash: undefined,\r\n    get unit():number {return } undefined, //debugUnitId,\r\n    page: undefined;\r\n    param: undefined,\r\n}*/\r\n\r\nexport function isBridged():boolean {\r\n    return self !== window.parent;\r\n}\r\n\r\nwindow.addEventListener('message', async function(evt) {\r\n    var message = evt.data;\r\n    switch (message.type) {\r\n        case 'sub-frame-started':\r\n            subFrameStarted(evt);\r\n            break;\r\n        case 'ws':\r\n            //wsBridge.receive(message.msg);\r\n            await nav.onReceive(message.msg);\r\n            break;\r\n        case 'init-sub-win':\r\n            await initSubWin(message);\r\n            break;\r\n        case 'pop-app':\r\n            nav.navBack();\r\n            break;\r\n        case 'center-api':\r\n            await callCenterApiFromMessage(evt.source as Window, message);\r\n            break;\r\n        case 'center-api-return':\r\n            bridgeCenterApiReturn(message);\r\n            break;\r\n        case 'app-api':\r\n            let ret = await onReceiveAppApiMessage(message.hash, message.apiName);\r\n            (evt.source as Window).postMessage({\r\n                type: 'app-api-return', \r\n                apiName: message.apiName,\r\n                db: ret.db,\r\n                url: ret.url,\r\n                token: ret.token} as any, \"*\");\r\n            break;\r\n        case 'app-api-return':\r\n            console.log(\"app-api-return: %s\", JSON.stringify(message));\r\n            console.log('await onAppApiReturn(message);');\r\n            await onAppApiReturn(message);\r\n            break;\r\n        default:\r\n            this.console.log('message: %s', JSON.stringify(message));\r\n            break;\r\n    }\r\n});\r\n\r\nfunction subFrameStarted(evt:any) {\r\n    var message = evt.data;\r\n    let subWin = evt.source as Window;\r\n    setSubAppWindow(subWin);\r\n    hideFrameBack(message.hash);\r\n    let msg:any = _.clone(nav.user);\r\n    msg.type = 'init-sub-win';\r\n    subWin.postMessage(msg, '*');\r\n}\r\nfunction hideFrameBack(hash:string) {\r\n    let el = document.getElementById(hash);\r\n    if (el !== undefined) el.hidden = true;\r\n}\r\nasync function initSubWin(message:any) {\r\n    console.log('initSubWin: set nav.user', message);\r\n    let user = nav.user = message; // message.user;\r\n    setCenterToken(user.id, user.token);\r\n    await nav.showAppView();\r\n}\r\nasync function onReceiveAppApiMessage(hash: string, apiName: string): Promise<UqToken> {\r\n    let appInFrame = appsInFrame[hash];\r\n    if (appInFrame === undefined) return {name:apiName, db:undefined, url:undefined, token:undefined};\r\n    //let unit = getUnit();\r\n    let {unit, predefinedUnit} = appInFrame;\r\n    unit = unit || predefinedUnit;\r\n    if (!unit) {\r\n        console.error('no unit defined in unit.json or not logined in', unit);\r\n    }\r\n    let parts = apiName.split('/');\r\n    let param = {unit: unit, uqOwner: parts[0], uqName: parts[1]};\r\n    console.log('uqTokenApi.uq onReceiveAppApiMessage', param);\r\n    let ret = await uqTokenApi.uq(param);\r\n    let {db, url, token} = ret;\r\n    return {name: apiName, db:db, url: url, token: token};\r\n}\r\n\r\nasync function onAppApiReturn(message:any) {\r\n    let {apiName, db, url, urlTest, token} = message;\r\n    let action = uqTokenActions[apiName];\r\n    if (action === undefined) {\r\n        throw 'error app api return';\r\n        //return;\r\n    }\r\n    let realUrl = host.getUrlOrTest(db, url, urlTest);\r\n    console.log('onAppApiReturn(message:any): url=' + url + ', real=' + realUrl);\r\n    //action.url = realUrl;\r\n    //action.token = token;\r\n    action.resolve({\r\n        name: apiName,\r\n        db: db,\r\n        url: realUrl,\r\n        token: token,\r\n    } as UqToken);\r\n}\r\n\r\nexport function setAppInFrame(appHash: string):AppInFrame {\r\n    if (appHash) {\r\n        let parts = appHash.split('-');\r\n        let len = parts.length;\r\n        if (len > 0) {\r\n            let p = 1;\r\n            appInFrame.hash = parts[p++];\r\n            if (len>0) appInFrame.unit = Number(parts[p++]);\r\n            if (len>1) appInFrame.page = parts[p++];\r\n            if (len>2) appInFrame.param = parts.slice(p++);\r\n        }\r\n    }\r\n    return appInFrame;\r\n}\r\n\r\nexport function getExHashPos():number {\r\n    let hash = document.location.hash;\r\n    if (hash !== undefined && hash.length > 0) {\r\n        let pos = hash.lastIndexOf('#tv-');\r\n        if (pos < 0) pos = hash.lastIndexOf('#tvdebug-');\r\n        return pos;\r\n    }\r\n    return -1;\r\n}\r\n\r\nexport function getExHash():string {\r\n    let pos = getExHashPos();\r\n    if (pos < 0) return undefined;\r\n    return document.location.hash.substring(pos);\r\n}\r\n\r\nexport function appUrl(url: string, unitId: number, page?:string, param?:any[]):{url:string; hash:string} {\r\n    let u:string;\r\n    for (;;) {\r\n        u = uid();\r\n        let a = appsInFrame[u];\r\n        if (a === undefined) {\r\n            appsInFrame[u] = {hash:u, unit:unitId};\r\n            break;\r\n        }\r\n    }\r\n    url += '#tv-' + u + '-' + unitId;\r\n    if (page !== undefined) {\r\n        url += '-' + page;\r\n        if (param !== undefined) {\r\n            for (let i=0; i<param.length; i++) {\r\n                url += '-' + param[i];\r\n            }\r\n        }\r\n    }\r\n    return {url: url, hash: u};\r\n}\r\n\r\nfunction getUnit():number {\r\n    let {unit, predefinedUnit} = appInFrame;\r\n    let realUnit = unit || predefinedUnit;\r\n    if (realUnit === undefined) {\r\n        throw 'no unit defined in unit.json or not logined in';\r\n    }\r\n    return realUnit;\r\n}\r\n\r\ninterface UqTokenAction {\r\n    resolve: (value?: UqToken | PromiseLike<UqToken>) => void;\r\n    reject: (reason?: any) => void;\r\n}\r\nconst uqTokenActions:{[uq:string]: UqTokenAction} = {};\r\nexport async function buildAppUq(uq:string, uqOwner:string, uqName:string):Promise<void> {\r\n    if (!isBridged()) {\r\n        let unit = getUnit();\r\n        let uqToken = await uqTokenApi.uq({unit:unit, uqOwner:uqOwner, uqName:uqName});\r\n        if (uqToken.token === undefined) uqToken.token = centerToken;\r\n        let {db, url, urlTest} = uqToken;\r\n        let realUrl = host.getUrlOrTest(db, url, urlTest);\r\n        console.log('realUrl: %s', realUrl);\r\n        uqToken.url = realUrl;\r\n        uqTokens[uq] = uqToken;\r\n        return uqToken;\r\n    }\r\n    console.log(\"**** before buildAppUq ****\", appInFrame);\r\n    let bp = uqTokenActions[uq];\r\n    if (bp !== undefined) return;\r\n    return new Promise<void>((resolve, reject) => {\r\n        uqTokenActions[uq] = {\r\n            resolve: async (at:any) => {\r\n                let {db, url, token} = await at;\r\n                uqTokens[uq] = {\r\n                    name: uq,\r\n                    db: db,\r\n                    url: url,\r\n                    token: token,\r\n                };\r\n                uqTokenActions[uq] = undefined;\r\n                console.log(\"**** after buildAppUq ****\", appInFrame);\r\n                resolve();\r\n            },\r\n            reject: reject,\r\n        };\r\n        (window.opener || window.parent).postMessage({\r\n            type: 'app-api',\r\n            apiName: uq,\r\n            hash: appInFrame.hash,\r\n        }, \"*\");\r\n    });\r\n}\r\n\r\nexport function appUq(uq:string):UqToken {\r\n    let uts = uqTokens;\r\n    return uts[uq];\r\n}\r\n/*\r\nexport async function appUq(uq:string, uqOwner:string, uqName:string): Promise<UqToken> {\r\n    let uqToken = uqTokens[uq];\r\n    if (uqToken !== undefined) return uqToken;\r\n    if (!isBridged()) {\r\n        let unit = getUnit();\r\n        uqToken = await uqTokenApi.uq({unit:unit, uqOwner:uqOwner, uqName:uqName});\r\n        if (uqToken.token === undefined) uqToken.token = centerToken;\r\n        let {url, urlDebug} = uqToken;\r\n        let realUrl = host.getUrlOrDebug(url, urlDebug);\r\n        console.log('realUrl: %s', realUrl);\r\n        uqToken.url = realUrl;\r\n        uqTokens[uq] = uqToken;\r\n        return uqToken;\r\n    }\r\n    console.log(\"appApi parent send: %s\", appInFrame.hash);\r\n    uqToken = {\r\n        name: uq,\r\n        url: undefined,\r\n        urlDebug: undefined,\r\n        token: undefined,\r\n        resolve: undefined,\r\n        reject: undefined,\r\n    };\r\n    uqTokens[uq] = uqToken;\r\n    return new Promise<UqToken>((resolve, reject) => {\r\n        uqToken.resolve = async (at) => {\r\n            let a = await at;\r\n            console.log('return from parent window: %s', JSON.stringify(a));\r\n            uqToken.url = a.url;\r\n            uqToken.urlDebug = a.urlDebug;\r\n            uqToken.token = a.token;\r\n            resolve(uqToken);\r\n        }\r\n        uqToken.reject = reject;\r\n        (window.opener || window.parent).postMessage({\r\n            type: 'app-api',\r\n            apiName: uq,\r\n            hash: appInFrame.hash,\r\n        }, \"*\");\r\n    });\r\n}\r\n*/\r\ninterface BridgeCenterApi {\r\n    id: string;\r\n    resolve: (value?:any)=>any;\r\n    reject: (reason?:any)=>void;\r\n}\r\nconst brideCenterApis:{[id:string]: BridgeCenterApi} = {};\r\nexport async function bridgeCenterApi(url:string, method:string, body:any):Promise<any> {\r\n    console.log('bridgeCenterApi: url=%s, method=%s', url, method);\r\n    return await new Promise<any>(async (resolve, reject) => {\r\n        let callId:string;\r\n        for (;;) {\r\n            callId = uid();\r\n            let bca = brideCenterApis[callId];\r\n            if (bca === undefined) {\r\n                brideCenterApis[callId] = {\r\n                    id: callId,\r\n                    resolve: resolve,\r\n                    reject: reject,\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        (window.opener || window.parent).postMessage({\r\n            type: 'center-api',\r\n            callId: callId,\r\n            url: url,\r\n            method: method,\r\n            body: body\r\n        }, '*');\r\n    });\r\n}\r\n\r\nasync function callCenterApiFromMessage(from:Window, message):Promise<void> {\r\n    let {callId, url, method, body} = message;\r\n    let result = await callCenterapi.directCall(url, method, body);\r\n    from.postMessage({\r\n        type: 'center-api-return',\r\n        callId: callId,\r\n        result: result,\r\n    }, '*');\r\n}\r\n\r\nfunction bridgeCenterApiReturn(message:any) {\r\n    let {callId, result} = message;\r\n    let bca = brideCenterApis[callId];\r\n    if (bca === undefined) return;\r\n    brideCenterApis[callId] = undefined;\r\n    bca.resolve(result);\r\n}\r\n","import * as React from 'react';\r\nimport {IComputedValue} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash';\r\nimport {PageHeader} from './pageHeader';\r\n\r\nexport interface ScrollProps {\r\n    onScroll?: (e:any) => void;\r\n    onScrollTop?: () => void;\r\n    onScrollBottom?: () => void;\r\n}\r\ninterface ScrollViewProps extends ScrollProps {\r\n    className?: string;\r\n}\r\nconst scrollTimeGap = 100;\r\nclass ScrollView extends React.Component<ScrollViewProps, null> {\r\n    private bottomTime:number = 0;\r\n    private topTime:number = 0;\r\n\r\n    private onScroll = async (e) => {\r\n        let {onScroll, onScrollTop, onScrollBottom} = this.props;\r\n        if (onScroll) this.props.onScroll(e);\r\n        let el = e.target as HTMLBaseElement;\r\n        if (el.scrollTop < 30) {\r\n            //this.eachChild(this, 'top');\r\n            if (onScrollTop !== undefined) {\r\n                let topTime = new Date().getTime();\r\n                if (topTime-this.topTime > scrollTimeGap) {\r\n                    this.topTime = topTime;\r\n                    onScrollTop();\r\n                }\r\n            }\r\n        }\r\n        if (el.scrollTop + el.offsetHeight > el.scrollHeight - 30) {\r\n            //this.eachChild(this, 'bottom');\r\n            if (onScrollBottom !== undefined) {\r\n                let bottomTime = new Date().getTime();\r\n                if (bottomTime - this.bottomTime > scrollTimeGap) {\r\n                    this.bottomTime = bottomTime;\r\n                    onScrollBottom();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    private eachChild(c:any, direct:'top'|'bottom') {\r\n        let { props } = c;\r\n        if (props === undefined)\r\n            return;\r\n        let { children } = props;\r\n        if (children === undefined)\r\n            return;\r\n        React.Children.forEach(children, (child, index) => {\r\n            let {_$scroll} = child as any;\r\n            if (_$scroll) _$scroll(direct);\r\n            console.log(child.toString());\r\n            this.eachChild(child, direct);\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <main className={this.props.className} onScroll={this.onScroll}>\r\n                {this.props.children}\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport interface Tab extends ScrollProps {\r\n    title: string;\r\n    icon?: string;\r\n    content?: JSX.Element | (()=>JSX.Element);\r\n    header?: string;\r\n    isSelected?: boolean;\r\n    redDot?: IComputedValue<number>;\r\n    load?: () => Promise<void>;\r\n}\r\nexport interface TabState extends Tab {\r\n    isMounted?: boolean;\r\n}\r\nexport interface PageProps extends ScrollProps {\r\n    back?: 'close' | 'back' | 'none';\r\n    header?: boolean | string | JSX.Element;\r\n    keepHeader?: boolean;\r\n    right?: JSX.Element;\r\n    sideBar?: JSX.Element;\r\n    footer?: JSX.Element;\r\n    tabs?: Tab[];\r\n    tabPosition?: 'top' | 'bottom';\r\n    logout?: boolean | (()=>Promise<void>);\r\n    headerClassName?: string;\r\n}\r\nexport interface PageState {\r\n    cur?: Tab;\r\n    tabs?: TabState[];\r\n}\r\n\r\n@observer\r\nexport class Page extends React.Component<PageProps, PageState> {\r\n    private tabs:TabState[];\r\n    constructor(props: PageProps) {\r\n        super(props);\r\n        let {tabs} = props;\r\n        if (tabs === undefined || tabs.length === 0) return;\r\n        this.tabs = tabs;\r\n        let cur:Tab;\r\n        let tabStates:Tab[] = [];\r\n        for (let tab of tabs) {\r\n            let t:TabState = _.clone(tab);\r\n            if (cur === undefined) {\r\n                if (t.isSelected === true)\r\n                    cur = t;\r\n                else\r\n                    t.isSelected = false;\r\n            }\r\n            else {\r\n                t.isSelected = false;\r\n            }\r\n            t.isMounted = false;\r\n            tabStates.push(t);\r\n        }\r\n        this.state = {\r\n            cur: cur,\r\n            tabs: tabStates,\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (this.tabs === undefined) return;\r\n        let t0 = this.state.tabs.find(v => v.isSelected === true);\r\n        if (t0 === undefined) {\r\n            t0 = this.state.tabs[0];\r\n            if (t0 === undefined) return;\r\n        }\r\n        await t0.load && await t0.load();\r\n        //await this.onTabClick(t0);\r\n    }\r\n\r\n    private async onTabClick(tab: TabState) {\r\n        if (tab.isSelected === true) return;\r\n        let cur:TabState;\r\n        let tabs = this.state.tabs;\r\n        for (let t of tabs) {\r\n            if (t === tab) {\r\n                t.isSelected = true;\r\n                cur = t;\r\n            }\r\n            else\r\n                t.isSelected = false;\r\n        }\r\n        if (cur.isMounted !== true) {\r\n            let {load} = cur;\r\n            if (load !== undefined) {\r\n                await load();\r\n            }\r\n        }\r\n        this.setState({\r\n            cur: cur,\r\n            tabs: tabs\r\n        });\r\n    }\r\n\r\n    private onTouchStart(evt: React.TouchEvent<HTMLElement>) {\r\n    }\r\n\r\n    private renderTabs(footer: JSX.Element) {\r\n        const {header, back, right, keepHeader, headerClassName, tabPosition} = this.props;\r\n        let cur = this.state.cur;\r\n        let tabs = <div>{\r\n                this.state.tabs.map((tab, index) => {\r\n                    const {icon, isSelected, title, redDot} = tab;\r\n                    let img:any, redDotView:any, cn:any;\r\n                    if (icon !== undefined) img = <img src={icon} />;\r\n                    if (redDot !== undefined) {\r\n                        let v = redDot.get();\r\n                        if (v < 0) {\r\n                            cn = classNames('red-dot');\r\n                            redDotView = <u />;\r\n                        }\r\n                        else if (v > 0) {\r\n                            cn = classNames('red-dot', 'num');\r\n                            redDotView = <u>{v}</u>;\r\n                        }\r\n                    }\r\n                    return <div key={index}\r\n                        className= {classNames('va-tab', {cur: isSelected})}\r\n                        onClick={() => this.onTabClick(tab)}>\r\n                        {img}<div className={cn}>{title}{redDotView}</div>\r\n                    </div>\r\n                })\r\n            }</div>;\r\n        let pageHeader = header !== false &&\r\n            <PageHeader \r\n                back={back} \r\n                center={keepHeader===true? (header as string) : (cur && (cur.header || cur.title))}\r\n                right={right}\r\n                className={headerClassName}\r\n            />;\r\n\r\n        return <article className='page-container'>\r\n            {pageHeader}\r\n            {tabPosition==='top' && tabs}\r\n            <section className=\"position-relative\">\r\n            {this.props.sideBar}\r\n            {\r\n                this.state.tabs.map((tab, index) => {\r\n                    let {isSelected, isMounted, content} = tab;\r\n                    if (isSelected === true || isMounted === true) {\r\n                        tab.isMounted = true;\r\n                        return <ScrollView key={index}\r\n                            className={classNames({invisible: isSelected===false})}\r\n                            onScroll={tab.onScroll}\r\n                            onScrollTop={tab.onScrollTop}\r\n                            onScrollBottom={tab.onScrollBottom}\r\n                        >\r\n                            {(typeof content)==='function'? (content as ()=>JSX.Element)():content}\r\n                        </ScrollView>;\r\n                    }\r\n                })\r\n            }\r\n            </section>\r\n            {tabPosition!=='top' && tabs}\r\n            {footer}\r\n        </article>;\r\n    }\r\n    private renderSingle(footer: JSX.Element) {\r\n        const {back, header, right, onScroll, onScrollTop, onScrollBottom, children, headerClassName} = this.props;\r\n        let pageHeader = header !== false && <PageHeader \r\n            back={back} \r\n            center={header as any}\r\n            right={right}\r\n            logout={this.props.logout}\r\n            className={headerClassName}\r\n        />;\r\n        return (\r\n            <article className='page-container' onTouchStart={this.onTouchStart}>\r\n                {pageHeader}\r\n                <section className=\"position-relative\">\r\n                    {this.props.sideBar}\r\n                    <ScrollView\r\n                        onScroll={onScroll}\r\n                        onScrollTop={onScrollTop}\r\n                        onScrollBottom={onScrollBottom}\r\n                    >\r\n                        {children}\r\n                    </ScrollView>\r\n                </section>\r\n                {footer}\r\n            </article>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const {footer} = this.props;\r\n        let elFooter = footer !== undefined && <footer>{footer}</footer>;\r\n        if (this.tabs !== undefined)\r\n            return this.renderTabs(elFooter);\r\n        else\r\n            return this.renderSingle(elFooter);\r\n    }\r\n}\r\n","function replacer(key:string, value:any) {\r\n    let first = key.substr(0, 1);\r\n    switch (first) {\r\n        default: return value;\r\n        case '$':\r\n        case '_': return;\r\n    }\r\n}\r\n\r\nexport function jsonStringify(value:any) {\r\n    return JSON.stringify(value, replacer, ' ');\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { BoxId, Tuid } from '../uqs';\r\nimport { PureJSONContent } from '../controllers';\r\n\r\nexport type TvTemplet = (values?:any, x?:any) => JSX.Element;\r\n\r\ninterface Props {\r\n    tuidValue: number|BoxId, \r\n    ui?: TvTemplet,\r\n    x?: any,\r\n    nullUI?: ()=>JSX.Element\r\n}\r\n\r\nfunction boxIdContent(bi: number|BoxId, ui:TvTemplet, x:any) {\r\n    let logContent:any;\r\n    switch(typeof bi) {\r\n        case 'undefined': logContent = <>boxId undefined</>; break;\r\n        case 'number': logContent = <>id:{bi}</>; break;\r\n    }\r\n    if (typeof (bi as any).render !== 'function') {\r\n        if (ui === undefined) {\r\n            logContent = PureJSONContent(bi, x);\r\n        }\r\n        else {\r\n            return ui(bi, x);\r\n        }\r\n    }\r\n    if (logContent !== undefined) {\r\n        return <del className=\"text-danger\">{logContent}</del>;\r\n    }\r\n    return (bi as any).render(ui, x);\r\n    /*\r\n    let {id, _$tuid, _$com} = bi;\r\n    if (id === undefined || id === null) return;\r\n    let t:TuidBase = _$tuid;\r\n    if (t === undefined) {\r\n        if (ui !== undefined) return ui(bi, x);\r\n        return PureJSONContent(bi, x);\r\n    }\r\n    let com = ui || _$com;\r\n    if (com === undefined) {\r\n        com = bi._$com = t.getTuidContent();\r\n    }\r\n    let val = t.valueFromId(id);\r\n    if (val === undefined) {\r\n        return <>[<FA className=\"text-danger\" name=\"bug\" /> no {t.name} on id={id}]</>;\r\n    }\r\n    switch (typeof val) {\r\n        case 'number': val = {id: val}; break;\r\n    }\r\n    if (ui !== undefined) {\r\n        let ret = ui(val, x);\r\n        if (ret !== undefined) return ret;\r\n        return <>{id}</>;\r\n    }\r\n    return React.createElement(com, val);\r\n    */\r\n}\r\n\r\nconst Tv = observer(({tuidValue, ui, x, nullUI}:Props) => {\r\n    if (tuidValue === undefined) {\r\n        if (nullUI === undefined) return <>[undefined]</>;\r\n        return nullUI();\r\n    }\r\n    if (tuidValue === null) {\r\n        if (nullUI === undefined) return <>[null]</>;\r\n        return nullUI();\r\n    }\r\n    let ttv = typeof tuidValue;\r\n    switch (ttv) {\r\n        default:\r\n            if (ui === undefined)\r\n                return <>{ttv}-{tuidValue}</>;\r\n            else {\r\n                let ret = ui(tuidValue, x);\r\n                if (ret !== undefined) return ret;\r\n                return <>{tuidValue}</>;\r\n            }\r\n        case 'object':\r\n            let divObj = boxIdContent(tuidValue, ui, x);\r\n            if (divObj !== undefined) return divObj;\r\n            return nullUI === undefined? <>id null</>: nullUI();\r\n        case 'number':\r\n            return <>id...{tuidValue}</>;\r\n    }\r\n});\r\n\r\nexport const tv = (tuidValue:number|BoxId, ui?:TvTemplet, x?:any, nullUI?:()=>JSX.Element):JSX.Element => {\r\n    return <Tv tuidValue={tuidValue} ui={ui} x={x} nullUI={nullUI} />;\r\n};\r\n","export * from './jsonStringify';\r\nexport * from './tv';\r\n","const ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\nconst ID_LENGTH = 8;\r\n\r\nexport function uid():string {\r\n    let len = ALPHABET.length;\r\n    let rtn = '';\r\n    for (let i = 0; i < ID_LENGTH; i++) {\r\n        rtn += ALPHABET.charAt(Math.floor(Math.random() * len));\r\n    }\r\n    return rtn;\r\n}\r\n","import {nav} from '../ui/nav';\r\nimport {FetchError} from '../fetchError';\r\n\r\nexport interface HttpChannelUI {\r\n    startWait():void;\r\n    endWait():void;\r\n    showError(error:FetchError):Promise<void>;\r\n}\r\n\r\nexport class HttpChannelNavUI implements HttpChannelUI {\r\n    startWait() {\r\n        nav.startWait();\r\n    }\r\n    endWait() {\r\n        nav.endWait();\r\n    }\r\n    async showError(error:FetchError):Promise<void> {\r\n        nav.endWait();\r\n        /*\r\n        if (error.name === 'SyntaxError') {\r\n            error = {\r\n                name: error.name,\r\n                message: error.message,\r\n            }\r\n        }*/\r\n        await nav.onError(error);\r\n    }\r\n}\r\n\r\n","import _ from 'lodash';\r\nimport {HttpChannel} from './httpChannel';\r\nimport {HttpChannelNavUI} from './httpChannelUI';\r\nimport {appUq, logoutUqTokens, buildAppUq} from './appBridge';\r\nimport {ApiBase} from './apiBase';\r\nimport { host } from './host';\r\nimport { nav } from '../ui';\r\n\r\nlet channelUIs:{[name:string]: HttpChannel} = {};\r\nlet channelNoUIs:{[name:string]: HttpChannel} = {};\r\n\r\nexport function logoutApis() {\r\n    channelUIs = {};\r\n    channelNoUIs = {};\r\n    logoutUnitxApis();\r\n    logoutUqTokens();\r\n}\r\n\r\ninterface UqLocal {\r\n    value: any;\r\n    tick?: number;\r\n    isNet?: boolean;\r\n}\r\ninterface UqLocals {\r\n    user: number;\r\n    unit: number;\r\n    uqs: {[uq:string]: UqLocal};\r\n}\r\n\r\nconst uqLocalEntities = 'uqLocalEntities';\r\nclass CacheUqLocals {\r\n    private local:UqLocals;\r\n\r\n    async loadAccess(uqApi: UqApi):Promise<any> {\r\n        try {\r\n            let {uqOwner, uqName} = uqApi;\r\n            if (this.local === undefined) {\r\n                let ls = localStorage.getItem(uqLocalEntities);\r\n                if (ls !== null) {\r\n                    this.local = JSON.parse(ls);\r\n                }\r\n            }\r\n            if (this.local !== undefined) {\r\n                let {user, uqs} = this.local;\r\n                if (user !== loginedUserId || uqs === undefined) {\r\n                    this.local = undefined;\r\n                }\r\n                else {\r\n                    for (let i in uqs) {\r\n                        let ul = uqs[i];\r\n                        ul.isNet = undefined;\r\n                    }\r\n                }\r\n            }\r\n            if (this.local === undefined) {\r\n                this.local = {\r\n                    user: loginedUserId,\r\n                    unit: undefined,\r\n                    uqs: {}\r\n                };\r\n            }\r\n\r\n            let ret: any;\r\n            let un = uqOwner+'/'+uqName;\r\n            let uq = this.local.uqs[un];\r\n            if (uq !== undefined) {\r\n                let {value} = uq;\r\n                ret = value;\r\n            }\r\n            if (ret === undefined) {\r\n                ret = await uqApi.__loadAccess();\r\n                this.saveLocal(un, ret);\r\n            }\r\n            return _.cloneDeep(ret);\r\n        }\r\n        catch (err) {\r\n            this.local = undefined;\r\n            localStorage.removeItem(uqLocalEntities);\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    private saveLocal(uqName:string, accessValue: any) {\r\n        this.local.uqs[uqName] = {\r\n            value: accessValue,\r\n            isNet: true,\r\n        }\r\n        let str = JSON.stringify(this.local);\r\n        localStorage.setItem(uqLocalEntities, str);\r\n    }\r\n\r\n    async checkAccess(uqApi: UqApi):Promise<boolean> {\r\n        if (this.local === undefined) return false;\r\n        let {uqOwner, uqName} = uqApi;\r\n        let un = uqOwner+'/'+uqName;\r\n        let uq = this.local.uqs[un];\r\n        if (uq === undefined) return false;\r\n        let {isNet, value} = uq;\r\n        if (isNet === true) return true;\r\n        let ret = await uqApi.__loadAccess();\r\n        let isMatch = _.isMatch(value, ret);\r\n        if (isMatch === false) {\r\n            this.saveLocal(un, ret);\r\n            return false;\r\n        }\r\n        uq.isNet = true;\r\n        return true;\r\n    }\r\n}\r\n\r\nconst localUqs = new CacheUqLocals;\r\nexport class UqApi extends ApiBase {\r\n    private access:string[];\r\n    uqOwner: string;\r\n    uqName: string;\r\n    uq: string;\r\n\r\n    constructor(basePath: string, uqOwner: string, uqName: string, access:string[], showWaiting?: boolean) {\r\n        super(basePath, showWaiting);\r\n        if (uqName) {\r\n            this.uqOwner = uqOwner;\r\n            this.uqName = uqName;\r\n            this.uq = uqOwner + '/' + uqName;\r\n        }\r\n        this.access = access;\r\n        this.showWaiting = showWaiting;\r\n    }\r\n\r\n    async init() {\r\n        await buildAppUq(this.uq, this.uqOwner, this.uqName);\r\n    }\r\n\r\n    protected async getHttpChannel(): Promise<HttpChannel> {\r\n        let channels: {[name:string]: HttpChannel};\r\n        let channelUI: HttpChannelNavUI;\r\n        if (this.showWaiting === true || this.showWaiting === undefined) {\r\n            channels = channelUIs;\r\n            channelUI = new HttpChannelNavUI();\r\n        }\r\n        else {\r\n            channels = channelNoUIs;\r\n        }\r\n        let channel = channels[this.uq];\r\n        if (channel !== undefined) return channel;\r\n        let uqToken = appUq(this.uq); //, this.uqOwner, this.uqName);\r\n        if (!uqToken) debugger;\r\n        let {url, token} = uqToken;\r\n        this.token = token;\r\n        channel = new HttpChannel(false, url, token, channelUI);\r\n        return channels[this.uq] = channel;\r\n    }\r\n\r\n    async update():Promise<string> {\r\n        return await this.get('update');\r\n    }\r\n\r\n    async __loadAccess():Promise<any> {\r\n        let acc = this.access === undefined?\r\n            '' :\r\n            this.access.join('|');\r\n        let ret = await this.get('access', {acc:acc});\r\n        return ret;\r\n    }\r\n\r\n    async loadAccess():Promise<any> {\r\n        return await localUqs.loadAccess(this);\r\n    }\r\n\r\n    async loadEntities():Promise<any> {\r\n        return await this.get('entities');\r\n    }\r\n\r\n    async checkAccess():Promise<boolean> {\r\n        return await localUqs.checkAccess(this);\r\n    }\r\n\r\n    async schema(name:string):Promise<any> {\r\n        return await this.get('schema/' + name);\r\n    }\r\n\r\n    async schemas(names:string[]):Promise<any[]> {\r\n        return await this.post('schema', names);\r\n    }\r\n\r\n    async tuidGet(name:string, id:number):Promise<any> {\r\n        return await this.get('tuid/' + name + '/' + id);\r\n    }\r\n\r\n    async tuidGetAll(name:string):Promise<any[]> {\r\n        return await this.get('tuid-all/' + name + '/');\r\n    }\r\n\r\n    async tuidSave(name:string, params):Promise<any> {\r\n        return await this.post('tuid/' + name, params);\r\n    }\r\n\r\n    async tuidSearch(name:string, arr:string, owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        let ret = await this.post('tuids/' + name, {\r\n            arr: arr,\r\n            owner: owner,\r\n            key: key,\r\n            pageStart: pageStart,\r\n            pageSize: pageSize\r\n        });\r\n        return ret;\r\n    }\r\n    async tuidArrGet(name:string, arr:string, owner:number, id:number):Promise<any> {\r\n        return await this.get('tuid-arr/' + name + '/' + owner + '/' + arr + '/' + id);\r\n    }\r\n    async tuidArrGetAll(name:string, arr:string, owner:number):Promise<any[]> {\r\n        return await this.get('tuid-arr-all/' + name + '/' + owner + '/' + arr + '/');\r\n    }\r\n    async tuidArrSave(name:string, arr:string, owner:number, params):Promise<any> {\r\n        return await this.post('tuid-arr/' + name + '/' + owner + '/' + arr + '/', params);\r\n    }\r\n    async tuidArrPos(name:string, arr:string, owner:number, id:number, order:number):Promise<any> {\r\n        return await this.post('tuid-arr-pos/' + name + '/' + owner + '/' + arr + '/', {\r\n            id: id,\r\n            $order: order\r\n        });\r\n    }\r\n\r\n    async tuidIds(name:string, arr:string, ids:number[]):Promise<any[]> {\r\n        try {\r\n            let url = 'tuidids/' + name + '/';\r\n            if (arr !== undefined) url += arr;\r\n            else url += '$';\r\n            let ret = await this.post(url, ids);\r\n            return ret;\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    async sheetSave(name:string, data:object):Promise<any> {\r\n        return await this.post('sheet/' + name, data);\r\n    }\r\n\r\n    async sheetAction(name:string, data:object) {\r\n        return await this.put('sheet/' + name, data);\r\n    }\r\n\r\n    async stateSheets(name:string, data:object) {\r\n        return await this.post('sheet/' + name + '/states', data);\r\n    }\r\n\r\n    async stateSheetCount(name:string):Promise<any> {\r\n        return await this.get('sheet/' + name + '/statecount');\r\n    }\r\n\r\n    async mySheets(name:string, data:object) {\r\n        return await this.post('sheet/' + name + '/my-sheets', data);\r\n    }\r\n\r\n    async getSheet(name:string, id:number):Promise<any> {\r\n        return await this.get('sheet/' + name + '/get/' + id);\r\n    }\r\n\r\n    async sheetArchives(name:string, data:object):Promise<any> {\r\n        return await this.post('sheet/' + name + '/archives', data);\r\n    }\r\n\r\n    async sheetArchive(name:string, id:number):Promise<any> {\r\n        return await this.get('sheet/' + name + '/archive/' + id);\r\n    }\r\n\r\n    async action(name:string, data:object):Promise<any> {\r\n        return await this.post('action/' + name, data);\r\n    }\r\n\r\n    async actionReturns(name:string, data:object):Promise<any[][]> {\r\n        return await this.post('action/' + name + '/returns', data);\r\n    }\r\n\r\n    async page(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\r\n        let p:any;\r\n        switch (typeof params) {\r\n            case 'undefined': p = {key: ''}; break;\r\n            default: p = _.clone(params); break;\r\n        }\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        return await this.post('query-page/' + name, p);\r\n    }\r\n\r\n    async query(name:string, params:any):Promise<any> {\r\n        let ret = await this.post('query/' + name, params);\r\n        return ret;\r\n    }\r\n/*\r\n    async history(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\r\n        let p = _.clone(params);\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        let ret = await this.post('history/' + name, p);\r\n        return ret;\r\n    }\r\n\r\n    async book(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\r\n        let p = _.clone(params);\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        let ret = await this.post('history/' + name, p);\r\n        return ret;\r\n    }\r\n*/\r\n    async user():Promise<any> {\r\n        return await this.get('user');\r\n    }\r\n}\r\n\r\nlet channels:{[unitId:number]: HttpChannel} = {};\r\n\r\nexport function logoutUnitxApis() {\r\n    channels = {};\r\n}\r\n\r\nexport class UnitxApi extends UqApi {\r\n    private unitId:number;\r\n    constructor(unitId:number) {\r\n        super('tv/', undefined, undefined, undefined, true);\r\n        this.unitId = unitId;\r\n    }\r\n\r\n    protected async getHttpChannel(): Promise<HttpChannel> {\r\n        let channel = channels[this.unitId];\r\n        if (channel !== undefined) return channel;\r\n        return channels[this.unitId] = await this.buildChannel();\r\n    }\r\n\r\n    private async buildChannel():Promise<HttpChannel> {\r\n        let channelUI = new HttpChannelNavUI();\r\n        let centerAppApi = new CenterAppApi('tv/', undefined);\r\n        let ret = await centerAppApi.unitxUq(this.unitId);\r\n        let {token, db, url, urlTest} = ret;\r\n        let realUrl = host.getUrlOrTest(db, url, urlTest);\r\n        this.token = token;\r\n        return new HttpChannel(false, realUrl, token, channelUI);\r\n    }\r\n}\r\n\r\nlet centerHost:string;\r\n\r\nexport function setCenterUrl(url:string) {\r\n    console.log('setCenterUrl %s', url);\r\n    centerHost = url;\r\n    centerToken = undefined;\r\n    centerChannel = undefined;\r\n    centerChannelUI = undefined;\r\n}\r\n\r\nexport let centerToken:string|undefined = undefined;\r\n\r\nlet loginedUserId:number = 0;\r\nexport function setCenterToken(userId:number, t?:string) {\r\n    loginedUserId = userId;\r\n    centerToken = t;\r\n    console.log('setCenterToken %s', t);\r\n    centerChannel = undefined;\r\n    centerChannelUI = undefined;\r\n}\r\n\r\nlet centerChannelUI:HttpChannel;\r\nlet centerChannel:HttpChannel;\r\nfunction getCenterChannelUI():HttpChannel {\r\n    if (centerChannelUI !== undefined) return centerChannelUI;\r\n    return centerChannelUI = new HttpChannel(true, centerHost, centerToken, new HttpChannelNavUI());\r\n}\r\nfunction getCenterChannel():HttpChannel {\r\n    if (centerChannel !== undefined) return centerChannel;\r\n    return centerChannel = new HttpChannel(true, centerHost, centerToken);\r\n}\r\n\r\nexport abstract class CenterApiBase extends ApiBase {\r\n    constructor(path: string, showWaiting?: boolean) {\r\n        super(path, showWaiting);\r\n    }\r\n\r\n    protected async getHttpChannel(): Promise<HttpChannel> {\r\n        return (this.showWaiting === true || this.showWaiting === undefined)?\r\n            getCenterChannelUI():\r\n            getCenterChannel();\r\n    }\r\n}\r\n\r\nconst uqTokens = 'uqTokens';\r\nexport class UqTokenApi extends CenterApiBase {\r\n    private local: UqLocals;\r\n    async uq(params: {unit:number, uqOwner:string, uqName:string}):Promise<any> {\r\n        try {\r\n            let {unit:unitParam, uqOwner, uqName} = params;\r\n            if (this.local === undefined) {\r\n                let ls = localStorage.getItem(uqTokens);\r\n                if (ls !== null) {\r\n                    this.local = JSON.parse(ls);\r\n                }\r\n            }\r\n            if (this.local !== undefined) {\r\n                let {unit, user} = this.local;\r\n                if (unit !== unitParam || user !== loginedUserId) this.local = undefined;\r\n            }\r\n            if (this.local === undefined) {\r\n                this.local = {\r\n                    user: loginedUserId,\r\n                    unit: params.unit,\r\n                    uqs: {}\r\n                };\r\n            }\r\n\r\n            let un = uqOwner+'/'+uqName;\r\n            let nowTick = new Date().getTime();\r\n            let uq = this.local.uqs[un];\r\n            if (uq !== undefined) {\r\n                let {tick, value} = uq;\r\n                if (value !== undefined && (nowTick - tick) < 24*3600*1000) {\r\n                    return _.clone(value);\r\n                }\r\n            }\r\n            let appUqParams:any = _.clone(params);\r\n            appUqParams.testing = host.testing;\r\n            let ret = await this.get('app-uq', appUqParams);\r\n            if (ret === undefined) {\r\n                let {unit, uqOwner, uqName} = params;\r\n                let err = `center get app-uq(unit=${unit}, '${uqOwner}/${uqName}') - not exists or no unit-service`;\r\n                throw err;\r\n            }\r\n\r\n            this.local.uqs[un] = {\r\n                tick: nowTick,\r\n                value: ret,\r\n            }\r\n            localStorage.setItem(uqTokens, JSON.stringify(this.local));\r\n            return _.clone(ret);\r\n        }\r\n        catch (err) {\r\n            this.local = undefined;\r\n            localStorage.removeItem(uqTokens);\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport const uqTokenApi = new UqTokenApi('tv/tie/', undefined);\r\n\r\nexport class CallCenterApi extends CenterApiBase {\r\n    directCall(url:string, method:string, body:any):Promise<any> {\r\n        return this.call(url, method, body);\r\n    }\r\n}\r\nexport const callCenterapi = new CallCenterApi('', undefined);\r\n\r\nexport interface UqAppData {\r\n    id: number;\r\n    uqs: UqData[];\r\n}\r\n\r\nexport interface UqData {\r\n    id: number;\r\n    uqOwner: string;\r\n    uqName: string;\r\n    access: string;\r\n}\r\n\r\nexport interface UqServiceData {\r\n    id: number;\r\n    db: string;\r\n    url: string;\r\n    urlTest: string;\r\n    token: string;\r\n}\r\n\r\nconst appUqs = 'appUqs';\r\n\r\nexport class CenterAppApi extends CenterApiBase {\r\n    private cachedUqs: UqAppData;\r\n    async uqs(appOwner:string, appName:string):Promise<UqAppData> {\r\n        let ret:any;\r\n        let ls = localStorage.getItem(appUqs);\r\n        if (ls !== null) {\r\n            let rLs = JSON.parse(ls);\r\n            let {appOwner:rAppOwner, appName:rAppName, value} = rLs;\r\n            if (appOwner === rAppOwner && appName === rAppName) ret = value;\r\n        }\r\n        if (ret === undefined) {\r\n            ret = await this.uqsPure(appOwner, appName);\r\n            let obj = {\r\n                appOwner:appOwner, \r\n                appName:appName, \r\n                value: ret,\r\n            }\r\n            localStorage.setItem(appUqs, JSON.stringify(obj));\r\n        }\r\n        return this.cachedUqs = _.cloneDeep(ret);\r\n    }\r\n    private async uqsPure(appOwner:string, appName:string):Promise<UqAppData> {\r\n        return await this.get('tie/app-uqs', {appOwner:appOwner, appName:appName});\r\n    }\r\n    async checkUqs(appOwner:string, appName:string):Promise<boolean> {\r\n        let ret = await this.uqsPure(appOwner, appName);\r\n        let {id:cachedId, uqs:cachedUqs} = this.cachedUqs;\r\n        let {id:retId, uqs:retUqs} = ret;\r\n        if (cachedId !== retId) return false;\r\n        if (cachedUqs.length !== retUqs.length) return false;\r\n        let len = cachedUqs.length;\r\n        for (let i=0; i<len; i++) {\r\n            if (_.isMatch(cachedUqs[i], retUqs[i]) === false) return false;\r\n        }\r\n        return true;\r\n    }\r\n    async unitxUq(unit:number):Promise<UqServiceData> {\r\n        return await this.get('tie/unitx-uq', {unit:unit});\r\n    }\r\n    async changePassword(param: {orgPassword:string, newPassword:string}) {\r\n        return await this.post('tie/reset-password', param);\r\n    }\r\n}\r\n\r\nexport async function loadAppUqs(appOwner:string, appName:string): Promise<UqAppData> {\r\n    let centerAppApi = new CenterAppApi('tv/', undefined);\r\n    //let unit = meInFrame.unit;\r\n    let ret = await centerAppApi.uqs(appOwner, appName);\r\n    centerAppApi.checkUqs(appOwner, appName).then(v => {\r\n        if (v === false) {\r\n            localStorage.removeItem(appUqs);\r\n            nav.start();\r\n        }\r\n    });\r\n    return ret;\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Controller } from '../../../ui';\r\n\r\nexport abstract class Link {\r\n    abstract onClick: () => void;\r\n    abstract render(className?:string):JSX.Element;\r\n}\r\n\r\nexport class CLink extends Link {\r\n    private controller: Controller;\r\n    protected icon:string|JSX.Element;\r\n    protected label:string|JSX.Element;\r\n\r\n    constructor(controller:Controller) {\r\n        super();\r\n        this.controller = controller;\r\n        this.icon = controller.icon;\r\n        this.label = controller.label;\r\n    }\r\n\r\n    onClick = async () => {\r\n        await this.controller.start();\r\n    }\r\n\r\n    render(className?:string) {\r\n        return <div\r\n            className={classNames('px-3', 'py-2', 'align-items-center', 'cursor-pointer', className)}\r\n            onClick={this.onClick}>\r\n            {this.icon} &nbsp; {this.label}\r\n        </div>;\r\n        //return React.createElement(this.view, className);\r\n    }\r\n}\r\n","export * from './cLink';\r\n","\r\nlet subAppWindow:Window;\r\nfunction postWsToSubApp(msg:any) {\r\n    if (subAppWindow === undefined) return;\r\n    subAppWindow.postMessage({\r\n        type: 'ws',\r\n        msg: msg\r\n    }, '*');\r\n}\r\n\r\nexport function setSubAppWindow(win:Window) {\r\n    subAppWindow = win;\r\n}\r\n\r\nexport function postWsToTop(msg:any) {\r\n    window.top.postMessage({\r\n        type: 'ws',\r\n        msg: msg\r\n    }, '*');\r\n}\r\n\r\nexport abstract class WsBase {\r\n    wsBaseId:string;\r\n    private handlerSeed = 1;\r\n    private anyHandlers:{[id:number]:(msg:any)=>Promise<void>} = {};\r\n    private msgHandlers:{[id:number]:{type:string, handler:(msg:any)=>Promise<void>}} = {};\r\n    onWsReceiveAny(handler:(msg:any)=>Promise<void>):number {\r\n        let seed = this.handlerSeed++;\r\n        this.anyHandlers[seed] = handler;\r\n        return seed;\r\n    }\r\n    onWsReceive(type:string, handler:(msg:any)=>Promise<void>):number {\r\n        let seed = this.handlerSeed++;\r\n        this.msgHandlers[seed] = {type:type, handler: handler};\r\n        return seed;\r\n    }\r\n    endWsReceive(handlerId:number) {\r\n        delete this.anyHandlers[handlerId];\r\n        delete this.msgHandlers[handlerId];\r\n    }\r\n    async receive(msg:any) {\r\n        let {$type} = msg;\r\n        for (let i in this.anyHandlers) {\r\n            await this.anyHandlers[i](msg);\r\n        }\r\n        for (let i in this.msgHandlers) {\r\n            let {type, handler} = this.msgHandlers[i];\r\n            if (type !== $type) continue;\r\n            await handler(msg);\r\n        }\r\n    }\r\n}\r\n\r\nlet wsBaseSeed = 1;\r\nexport class WsBridge extends WsBase {\r\n    wsBaseId:string = 'WsBridge seed ' + wsBaseSeed++;\r\n}\r\n\r\nexport const wsBridge = new WsBridge();\r\n\r\nexport class WSChannel extends WsBase {\r\n    wsBaseId:string = 'WSChannel seed ' + wsBaseSeed++;\r\n    static centerToken:string;\r\n    private wsHost: string;\r\n    private token: string;\r\n    private ws: WebSocket;\r\n\r\n    constructor(wsHost: string, token: string) {\r\n        super();\r\n        this.wsHost = wsHost;\r\n        this.token = token;\r\n    }\r\n\r\n    static setCenterToken(token?: string) {\r\n        WSChannel.centerToken = token;\r\n    }\r\n    \r\n    connect():Promise<void> {\r\n        //this.wsHost = wsHost;\r\n        //this.token = token || WSChannel.centerToken;\r\n        if (this.ws !== undefined) return;\r\n        let that = this;\r\n        return new Promise((resolve, reject) => {\r\n            let ws = new WebSocket(this.wsHost, this.token || WSChannel.centerToken);\r\n            console.log('connect webSocket %s', this.wsHost);\r\n            ws.onopen = (ev) => {\r\n                console.log('webSocket connected %s', this.wsHost);\r\n                that.ws = ws;\r\n                resolve();\r\n            };\r\n            ws.onerror = (ev) => {\r\n                reject('webSocket can\\'t open!');\r\n            };\r\n            ws.onmessage = async (msg) => await that.wsMessage(msg);\r\n            ws.onclose = (ev) => {\r\n                that.ws = undefined;\r\n                console.log('webSocket closed!');\r\n            }\r\n        });\r\n    }\r\n    close() {\r\n        if (this.ws !== undefined) {\r\n            this.ws.close();\r\n            this.ws = undefined;\r\n        }\r\n    }\r\n    private async wsMessage(event:any):Promise<void> {\r\n        try {\r\n            console.log('websocket message: %s', event.data);\r\n            let msg = JSON.parse(event.data);\r\n            postWsToSubApp(msg);\r\n            await this.receive(msg);\r\n        }\r\n        catch (err) {\r\n            console.log('ws msg error: ', err);\r\n        }\r\n    }\r\n    sendWs(msg:any) {\r\n        let netThis = this;\r\n        this.connect().then(() => {\r\n            netThis.ws.send(msg);\r\n        });\r\n    }\r\n}\r\n","export const isDevelopment = process.env.NODE_ENV === 'development';\r\n\r\nconst centerHost = process.env['REACT_APP_CENTER_HOST'];\r\nconst centerDebugHost = 'localhost:3000'; //'192.168.86.64';\r\nconst resHost = process.env['REACT_APP_RES_HOST'] || centerHost;\r\nconst resDebugHost = 'localhost:3015'; //'192.168.86.63';\r\nconst uqDebugHost = 'localhost:3015'; //'192.168.86.63';\r\nconst uqDebugBuilderHost = 'localhost:3009';\r\ninterface HostValue {\r\n    value: string;\r\n    local: boolean;\r\n}\r\nconst hosts:{[name:string]:HostValue} = {\r\n    centerhost: {\r\n        value: process.env['REACT_APP_CENTER_DEBUG_HOST'] || centerDebugHost, \r\n        local: false\r\n    },\r\n    reshost: {\r\n        value: process.env['REACT_APP_RES_DEBUG_HOST'] || resDebugHost,\r\n        local: false\r\n    },\r\n    uqhost: {\r\n        value: process.env['REACT_APP_UQ_DEBUG_HOST'] || uqDebugHost, \r\n        local: false\r\n    },\r\n    unitxhost: {\r\n        value: process.env['REACT_APP_UQ_DEBUG_HOST'] || uqDebugHost, \r\n        local: false\r\n    },\r\n    \"uq-build\": {\r\n        value: process.env['REACT_APP_UQ_DEBUG_BUILDER_HOST'] || uqDebugBuilderHost, \r\n        local: false\r\n    }\r\n}\r\n\r\nfunction centerUrlFromHost(host:string) {\r\n    if (host.startsWith('https://') === true) {\r\n        if (host.endsWith('/')) return host;\r\n        return host + '/';\r\n    }\r\n    return `http://${host}/`;\r\n}\r\nfunction centerWsFromHost(host:string) {\r\n    let https = 'https://';\r\n    if (host.startsWith(https) === true) {\r\n        host = host.substr(https.length);\r\n        if (host.endsWith('/') === true) host = host.substr(0, host.length-1);\r\n        return 'wss://' + host + '/tv/';\r\n    }\r\n    return `ws://${host}/tv/`\r\n}\r\n\r\nconst fetchOptions = {\r\n    method: \"GET\",\r\n    mode: \"no-cors\", // no-cors, cors, *same-origin\r\n    headers: {\r\n        \"Content-Type\": \"text/plain\"\r\n    },\r\n};\r\n\r\nclass Host {\r\n    testing: boolean;\r\n    url: string;\r\n    ws: string;\r\n    resHost: string;\r\n\r\n    async start(testing:boolean) {\r\n        this.testing = testing;\r\n        if (isDevelopment === true) {\r\n            await this.tryLocal();\r\n        }\r\n        let host = this.getCenterHost();\r\n        this.url = centerUrlFromHost(host);\r\n        this.ws = centerWsFromHost(host);\r\n        this.resHost = this.getResHost();\r\n    }\r\n\r\n    private debugHostUrl(host:string) {return `http://${host}/hello`}\r\n    private async tryLocal() {\r\n        let promises:PromiseLike<any>[] = [];\r\n        let hostArr:string[] = [];\r\n        for (let i in hosts) {\r\n            let hostValue = hosts[i];\r\n            let {value} = hostValue;\r\n            if (hostArr.findIndex(v => v === value) < 0) hostArr.push(value);\r\n        }\r\n\r\n        for (let host of hostArr) {\r\n            let fetchUrl = this.debugHostUrl(host);\r\n            promises.push(localCheck(fetchUrl));\r\n        }\r\n        let results = await Promise.all(promises);\r\n        let len = hostArr.length;\r\n        for (let i=0; i<len; i++) {\r\n            let local = results[i];\r\n            let host = hostArr[i];\r\n            for (let j in hosts) {\r\n                let hostValue = hosts[j];\r\n                if (hostValue.value === host) {\r\n                    hostValue.local = local;\r\n                }\r\n            }\r\n        }\r\n        /*\r\n        let p = 0;\r\n        for (let i in hosts) {\r\n            let hostValue = hosts[i];\r\n            hostValue.local = results[p];\r\n            ++p;\r\n        }\r\n        */\r\n    }\r\n\r\n    private getCenterHost():string {\r\n        let {value, local} = hosts.centerhost;\r\n        let hash = document.location.hash;\r\n        if (hash.includes('sheet_debug') === true) {\r\n            return value;\r\n        }\r\n        if (isDevelopment === true) {\r\n            if (local === true) return value;\r\n        }\r\n        return centerHost;\r\n    }\r\n\r\n    private getResHost():string {\r\n        let {value, local} = hosts.reshost;\r\n        let hash = document.location.hash;\r\n        if (hash.includes('sheet_debug') === true) {\r\n            return value;\r\n        }\r\n        if (isDevelopment === true) {\r\n            if (local === true) return value;\r\n        }\r\n        return resHost;\r\n    }\r\n\r\n    getUrlOrDebug(url:string, debugHost:string = 'uqhost'):string {\r\n        if (isDevelopment === false) return url;\r\n        let host = hosts[debugHost];\r\n        if (host === undefined) return url;\r\n        let {value, local} = host;\r\n        if (local === false) return url;\r\n        return `http://${value}/`;\r\n    }\r\n    getUrlOrTest(db:string, url:string, urlTest:string):string {\r\n        let path:string;\r\n        if (this.testing === true) {\r\n            if (urlTest !== '-') url = urlTest;\r\n            path = 'uq/test/' + db + '/';\r\n        }\r\n        else {\r\n            path = 'uq/prod/' + db + '/';\r\n        }\r\n        url = this.getUrlOrDebug(url);\r\n        return url + path;\r\n    }\r\n\r\n    async localCheck(urlDebug: string):Promise<boolean> {\r\n        return await localCheck(urlDebug);\r\n    }\r\n}\r\n\r\nexport const host:Host = new Host();\r\n\r\n// 因为测试的都是局域网服务器，甚至本机服务器，所以一秒足够了\r\n// 网上找了上面的fetch timeout代码。\r\n// 尽管timeout了，fetch仍然继续，没有cancel\r\n\r\n// 实际上，一秒钟不够。web服务器会自动停。重启的时候，可能会比较长时间。也许两秒甚至更多。\r\n//const timeout = 2000;\r\nconst timeout = 200;\r\n\r\nfunction fetchLocalCheck(url:string):Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      fetch(url, fetchOptions as any)\r\n      .then(v => {\r\n          v.text().then(resolve).catch(reject);\r\n      })\r\n      .catch(reject);\r\n      const e = new Error(\"Connection timed out\");\r\n      setTimeout(reject, timeout, e);\r\n    });\r\n}\r\n\r\nasync function localCheck(url:string):Promise<boolean> {\r\n    try {\r\n        await fetchLocalCheck(url);\r\n        return true;\r\n    }\r\n    catch (err) {\r\n        return false;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { nav } from './nav';\r\n\r\nexport interface ImageProps {\r\n    src: string;\r\n    className?: string;\r\n    style?: React.CSSProperties;\r\n    altImage?: string;\r\n}\r\n\r\nexport function Image(props: ImageProps) {\r\n    let {className, style, src, altImage} = props;\r\n    if (!src) {\r\n        return <div className={classNames(className, 'image-none')} style={style}>\r\n            <i className=\"fa fa-file-o\" />\r\n        </div>;\r\n    }\r\n    if (src.startsWith(':') === true) {\r\n        src = nav.resUrl + src.substr(1);\r\n    }\r\n    return <img src={src} className={className} \r\n        style={style}\r\n        onError={evt=>{\r\n            if (altImage) evt.currentTarget.src=altImage;\r\n            else evt.currentTarget.src = 'https://tv.jkchemical.com/imgs/0001.png';\r\n        }} />;\r\n}\r\n","export * from './CApp';\r\nexport * from './startApp';\r\nexport * from './cUq';\r\nexport * from './action';\r\nexport * from './tuid';\r\nexport * from './sheet';\r\nexport * from './query';\r\nexport * from './map';\r\nexport * from './history';\r\nexport * from './pending';\r\nexport * from './form/viewModel';\r\nexport * from './form';\r\nexport * from './formUI';\r\nexport * from './ControllerUq';\r\nexport * from './CVEntity';\r\nexport * from './link';\r\nexport * from './icons';\r\n","import {observable, IObservableArray, computed} from 'mobx';\r\nimport {uid} from './uid';\r\n\r\nexport abstract class PageItems<T> {\r\n    constructor(itemObservable:boolean = false) {\r\n        this._items = observable.array<T>([], {deep:itemObservable});\r\n    }\r\n    private isFirst: boolean = true;\r\n    @observable loading: boolean = false;\r\n    @observable private beforeLoad: boolean = true;\r\n    @observable protected loaded: boolean = false;\r\n    protected _items:IObservableArray<T>;\r\n    @observable allLoaded: boolean = false;\r\n    @computed get items():IObservableArray<T> {\r\n        if (this.beforeLoad === true) return null;\r\n        if (this.loaded === false) return undefined;\r\n        return this._items;\r\n    }\r\n\r\n    @observable topDiv:string;\r\n    @observable bottomDiv:string;\r\n    scrollToTop() {\r\n        this.topDiv = '$$'+uid();\r\n    }\r\n    scrollToBottom() {\r\n        this.bottomDiv = '$$'+uid();\r\n    }\r\n\r\n    protected param: any;\r\n    protected firstSize = 100;\r\n    protected pageStart = undefined;\r\n    protected pageSize = 30;\r\n    protected appendPosition:'head'|'tail' = 'tail';\r\n\r\n    protected abstract async load(param:any, pageStart:any, pageSize:number):Promise<T[]>;\r\n    protected abstract setPageStart(item:T);\r\n\r\n    reset() {\r\n        this.isFirst = true;\r\n        this.beforeLoad = true;\r\n        this.loaded = false;\r\n        this.param = undefined;\r\n        this.allLoaded = false;\r\n        this._items.clear();\r\n        this.setPageStart(undefined);\r\n    }\r\n\r\n    append(item:T) {\r\n        if (this.appendPosition === 'tail')\r\n            this._items.unshift(item);\r\n        else\r\n            this._items.push(item);\r\n    }\r\n\r\n    async first(param:any):Promise<void> {\r\n        this.reset();\r\n        this.beforeLoad = false;\r\n        this.param = param;\r\n        await this.more();        \r\n    }\r\n\r\n    async more():Promise<void> {\r\n        if (this.allLoaded === true) return;\r\n        if (this.loading === true) return;\r\n        this.loading = true;\r\n        let pageSize = this.pageSize + 1;\r\n        if (this.isFirst === true) {\r\n            if (this.firstSize > this.pageSize) pageSize = this.firstSize+1;\r\n        }\r\n        let ret = await this.load(\r\n                this.param, \r\n                this.pageStart,\r\n                pageSize);\r\n        this.loading = false;\r\n        this.loaded = true;\r\n        let len = ret.length;\r\n        if (this.isFirst===true && len>this.firstSize ||\r\n            this.isFirst===false && len>this.pageSize)\r\n        {\r\n            this.allLoaded = false;\r\n            --len;\r\n            ret.splice(len, 1);\r\n        }\r\n        else {\r\n            this.allLoaded = true;\r\n        }\r\n        if (len === 0) {\r\n            this._items.clear();\r\n            return;\r\n        }\r\n        this.setPageStart(ret[len-1]);\r\n        if (this.appendPosition === 'tail')\r\n            this._items.push(...ret);\r\n        else\r\n            this._items.unshift(...ret.reverse());\r\n        this.isFirst = false;\r\n    }\r\n}\r\n","import { Uq, Field, ArrFields, FieldMap } from './uq';\r\nimport { Tuid } from './tuid';\r\nimport { UqApi } from '../../net';\r\n\r\nconst tab = '\\t';\r\nconst ln = '\\n';\r\n\r\nexport abstract class Entity {\r\n    protected uq: Uq;\r\n    protected schema: any;\r\n    private jName: string;\r\n    sys?: boolean;\r\n    readonly name: string;\r\n    readonly typeId: number;\r\n    protected uqApi: UqApi;\r\n    abstract get typeName(): string;\r\n    get sName():string {return this.jName || this.name}\r\n    fields: Field[];\r\n    arrFields: ArrFields[];\r\n    returns: ArrFields[];\r\n\r\n    constructor(uq:Uq, name:string, typeId:number) {\r\n        this.uq = uq;\r\n        this.name = name;\r\n        this.typeId = typeId;\r\n        this.sys = this.name.indexOf('$') >= 0;\r\n        this.uqApi = this.uq.uqApi;\r\n    }\r\n\r\n    public face: any;           // 对应字段的label, placeHolder等等的中文，或者语言的翻译\r\n\r\n    //getApiFrom() {return this.entities.uqApi;}\r\n\r\n    private fieldMaps: {[arr:string]: FieldMap} = {};\r\n    fieldMap(arr?:string): FieldMap {\r\n        if (arr === undefined) arr = '$';\r\n        let ret = this.fieldMaps[arr];\r\n        if (ret === undefined) {\r\n            let fields:Field[];\r\n            if (arr === '$') fields = this.fields;\r\n            else if (this.arrFields !== undefined) {\r\n                let arrFields = this.arrFields.find(v => v.name === arr);\r\n                if (arrFields !== undefined) fields = arrFields.fields;\r\n            }\r\n            else if (this.returns !== undefined) {\r\n                let arrFields = this.returns.find(v => v.name === arr);\r\n                if (arrFields !== undefined) fields = arrFields.fields;\r\n            }\r\n            if (fields === undefined) return {};\r\n            ret = {};\r\n            for (let f of fields) ret[f.name] = f;\r\n            this.fieldMaps[arr] = ret;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    public async loadSchema():Promise<void> {\r\n        if (this.schema !== undefined) return;\r\n        let schema = await this.uq.loadEntitySchema(this.name);\r\n        this.setSchema(schema);\r\n        this.buildFieldsTuid();\r\n    }\r\n\r\n    public setSchema(schema:any) {\r\n        if (schema === undefined) return;\r\n        if (this.schema !== undefined) return;\r\n        this.schema = schema;\r\n        let {name} = schema;\r\n        if (name !== this.name) this.jName = name;\r\n        //this.buildFieldsTuid();\r\n    }\r\n\r\n    public buildFieldsTuid() {\r\n        let {fields, arrs, returns} = this.schema;\r\n        this.uq.buildFieldTuid(this.fields = fields);\r\n        this.uq.buildArrFieldsTuid(this.arrFields = arrs, fields);\r\n        this.uq.buildArrFieldsTuid(this.returns = returns, fields);\r\n    }\r\n\r\n    schemaStringify():string {\r\n        return JSON.stringify(this.schema, (key:string, value:any) => {\r\n            if (key === '_tuid') return undefined;\r\n            return value;\r\n        }, 4);\r\n    }\r\n\r\n    tuidFromName(fieldName:string, arrName?:string):Tuid {\r\n        if (this.schema === undefined) return;\r\n        let {fields, arrs} = this.schema;\r\n        let entities = this.uq;\r\n        function getTuid(fn:string, fieldArr:Field[]) {\r\n            if (fieldArr === undefined) return;\r\n            let f = fieldArr.find(v => v.name === fn);\r\n            if (f === undefined) return;\r\n            return entities.getTuid(f.tuid);\r\n        }\r\n        let fn = fieldName.toLowerCase();\r\n        if (arrName === undefined) return getTuid(fn, fields);\r\n        if (arrs === undefined) return;\r\n        let an = arrName.toLowerCase();\r\n        let arr = (arrs as ArrFields[]).find(v => v.name === an);\r\n        if (arr === undefined) return;\r\n        return getTuid(fn, arr.fields);\r\n    }\r\n\r\n    protected buildParams(params:any):any {\r\n        let result = {};\r\n        let fields = this.fields;\r\n        if (fields !== undefined) this.buildFieldsParams(result, fields, params);\r\n        let arrs = this.arrFields;\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                let {name, fields} = arr;\r\n                let paramsArr:any[] = params[name];\r\n                if (paramsArr === undefined) continue;\r\n                let arrResult = [];\r\n                result[name] = arrResult;\r\n                for (let pa of params) {\r\n                    let rowResult = {};\r\n                    this.buildFieldsParams(rowResult, fields, pa);\r\n                    arrResult.push(rowResult);\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private buildFieldsParams(result:any, fields:Field[], params:any) {\r\n        for (let field of fields) {\r\n            let {name} = field;\r\n            let d = params[name];\r\n            let val:any;\r\n            switch (typeof d) {\r\n                default: val = d; break;\r\n                case 'object':\r\n                    let tuid = field._tuid;\r\n                    if (tuid === undefined) val = d.id;\r\n                    else val = tuid.getIdFromObj(d);\r\n                    break;\r\n            }\r\n            result[name] = val;\r\n        }\r\n    }\r\n\r\n    pack(data:any):string {\r\n        let ret:string[] = [];\r\n        let fields = this.fields;\r\n        if (fields !== undefined) this.packRow(ret, fields, data);\r\n        let arrs = this.arrFields; //schema['arrs'];\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                //if (arr.isBus === true) continue;\r\n                this.packArr(ret, arr.fields, data[arr.name]);\r\n            }\r\n        }\r\n        return ret.join('');\r\n    }\r\n\r\n    private escape(row:any, field:Field):any {\r\n        let d = row[field.name];\r\n        switch (typeof d) {\r\n            default: return d;\r\n            case 'object':\r\n                let tuid = field._tuid;\r\n                if (tuid === undefined) return d.id;\r\n                return tuid.getIdFromObj(d);\r\n            case 'string':\r\n                let len = d.length;\r\n                let r = '', p = 0;\r\n                for (let i=0;i<len;i++) {\r\n                    let c = d.charCodeAt(i);\r\n                    switch(c) {\r\n                        case 9: r += d.substring(p, i) + '\\\\t'; p = i+1; break;\r\n                        case 10: r += d.substring(p, i) + '\\\\n'; p = i+1; break;\r\n                    }\r\n                }\r\n                return r + d.substring(p);\r\n            case 'undefined': return '';\r\n        }\r\n    }\r\n\r\n    private packRow(result:string[], fields:Field[], data:any) {\r\n        let len = fields.length;\r\n        if (len === 0) return;\r\n        let ret = '';\r\n        ret += this.escape(data, fields[0]);\r\n        for (let i=1;i<len;i++) {\r\n            let f = fields[i];\r\n            ret += tab + this.escape(data, f);\r\n        }\r\n        result.push(ret + ln);\r\n    }\r\n\r\n    private packArr(result:string[], fields:Field[], data:any[]) {\r\n        if (data !== undefined) {\r\n            for (let row of data) {\r\n                this.packRow(result, fields, row);\r\n            }\r\n        }\r\n        result.push(ln);\r\n    }\r\n    protected cacheFieldsInValue(values:any, fields:Field[]) {\r\n        for (let f of fields as Field[]) {\r\n            let {name, _tuid} = f;\r\n            if (_tuid === undefined) continue;\r\n            let id = values[name];\r\n            //_tuid.useId(id);\r\n            values[name] = _tuid.boxId(id);\r\n        }\r\n    }\r\n\r\n    protected unpackTuidIdsOfFields(values:any[]|string, fields: Field[]):any[] {\r\n        if (fields === undefined) return values as any[];\r\n        //if (this.fields === undefined) return values as any[];\r\n        let ret:any[] = []\r\n        let len = (values as string).length;\r\n        let p = 0;\r\n        while (p<len) {\r\n            let ch = (values as string).charCodeAt(p);\r\n            if (ch === 10) {\r\n                ++p;\r\n                break;\r\n            }\r\n            let row = {};\r\n            p = this.unpackRow(row, fields, values as string, p);\r\n            ret.push(row);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    unpackSheet(data:string):any {\r\n        let ret = {} as any; //new this.newMain();\r\n        //if (schema === undefined || data === undefined) return;\r\n        let fields = this.fields;\r\n        let p = 0;\r\n        if (fields !== undefined) p = this.unpackRow(ret, fields, data, p);\r\n        let arrs = this.arrFields; //schema['arrs'];\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                p = this.unpackArr(ret, arr, data, p);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    unpackReturns(data:string):any {\r\n        let ret = {} as any;\r\n        //if (schema === undefined || data === undefined) return;\r\n        //let fields = schema.fields;\r\n        let p = 0;\r\n        //if (fields !== undefined) p = unpackRow(ret, schema.fields, data, p);\r\n        let arrs = this.returns; //schema['returns'];\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                //let creater = this.newRet[arr.name];\r\n                p = this.unpackArr(ret, arr, data, p);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    protected unpackRow(ret:any, fields:Field[], data:string, p:number):number {\r\n        let ch0 = 0, ch = 0, c = p, i = 0, len = data.length, fLen = fields.length;\r\n        for (;p<len;p++) {\r\n            ch0 = ch;\r\n            ch = data.charCodeAt(p);\r\n            if (ch === 9) {\r\n                let f = fields[i];\r\n                let {name} = f;\r\n                if (ch0 !== 8) {\r\n                    if (p>c) {\r\n                        let v = data.substring(c, p);\r\n                        ret[name] = this.to(ret, v, f);\r\n                    }\r\n                }\r\n                else {\r\n                    ret[name] = null;\r\n                }\r\n                c = p+1;\r\n                ++i;\r\n                if (i>=fLen) {\r\n                    p = data.indexOf('\\n', c);\r\n                    if (p >= 0) ++p;\r\n                    else p = len;\r\n                    break;\r\n                }\r\n            }\r\n            else if (ch === 10) {\r\n                let f = fields[i];\r\n                let {name} = f;\r\n                if (ch0 !== 8) {\r\n                    if (p>c) {\r\n                        let v = data.substring(c, p);\r\n                        ret[name] = this.to(ret, v, f);\r\n                    }\r\n                }\r\n                else {\r\n                    ret[name] = null;\r\n                }\r\n                ++p;\r\n                ++i;\r\n                break;\r\n            }\r\n        }\r\n        return p;\r\n    }\r\n\r\n    private to(ret:any, v:string, f:Field):any {\r\n        switch (f.type) {\r\n            default: return v;\r\n            case 'datetime':\r\n            case 'time':\r\n                let date = new Date(Number(v));\r\n                return date;\r\n            case 'date':\r\n                let parts = v.split('-');\r\n                return new Date(Number(parts[0]), Number(parts[1])-1, Number(parts[2]));\r\n            case 'tinyint':\r\n            case 'smallint':\r\n            case 'int':\r\n            case 'bigint':\r\n            case 'dec':\r\n                return Number(v);\r\n            case 'id':\r\n                let id = Number(v);\r\n                let {_tuid} = f;\r\n                if (_tuid === undefined) return id;\r\n                return _tuid.boxId(id);\r\n        }\r\n    }\r\n\r\n    private unpackArr(ret:any, arr:ArrFields, data:string, p:number):number {\r\n        let vals:any[] = [], len = data.length;\r\n        let {name, fields} = arr;\r\n        while (p<len) {\r\n            let ch = data.charCodeAt(p);\r\n            if (ch === 10) {\r\n                ++p;\r\n                break;\r\n            }\r\n            let val = {} as any; //new creater();\r\n            vals.push(val);\r\n            p = this.unpackRow(val, fields, data, p);\r\n        }\r\n        ret[name] = vals;\r\n        return p;\r\n    }\r\n}\r\n","import { observable } from 'mobx';\r\nimport { isNumber } from 'util';\r\nimport { BoxId } from './boxId';\r\nimport { TuidLocal } from './tuid';\r\nimport { TuidDiv } from './tuidDiv'\r\n\r\nconst maxCacheSize = 1000;\r\n\r\nexport class IdCache {\r\n    private queue: number[] = [];               // 每次使用，都排到队头\r\n    private cache = observable.map({}, {deep: false});    // 已经缓冲的\r\n\r\n    protected waitingIds: number[] = [];          // 等待loading的\r\n    protected tuidLocal: TuidLocal;\r\n\r\n    constructor(tuidLocal: TuidLocal) {\r\n        this.tuidLocal = tuidLocal;\r\n    }\r\n\r\n    useId(id:number, defer?:boolean) {\r\n        if (id === undefined || id === 0) return;\r\n        if (isNumber(id) === false) return;\r\n        if (this.cache.has(id) === true) {\r\n            this.moveToHead(id);\r\n            return;\r\n        }\r\n        this.tuidLocal.cacheTuids(defer===true?70:20);\r\n        //let idVal = this.createID(id);\r\n        this.cache.set(id, id);\r\n        if (this.waitingIds.findIndex(v => v === id) >= 0) {\r\n            this.moveToHead(id);\r\n            return;\r\n        }\r\n\r\n        if (this.queue.length >= maxCacheSize) {\r\n            // 缓冲已满，先去掉最不常用的\r\n            let r = this.queue.shift();\r\n            if (r === id) {\r\n                // 如果移除的，正好是现在用的，则插入\r\n                this.queue.push(r);\r\n                return;\r\n            }\r\n\r\n            //let rKey = String(r);\r\n            if (this.cache.has(r) === true) {\r\n                // 如果移除r已经缓存\r\n                this.cache.delete(r);\r\n            }\r\n            else {\r\n                // 如果移除r还没有缓存\r\n                let index = this.waitingIds.findIndex(v => v === r);\r\n                this.waitingIds.splice(index, 1);\r\n            }\r\n        }\r\n        this.waitingIds.push(id);\r\n        this.queue.push(id);\r\n        return;\r\n    }\r\n\r\n    private moveToHead(id:number) {\r\n        let index = this.queue.findIndex(v => v === id);\r\n        this.queue.splice(index, 1);\r\n        this.queue.push(id);\r\n    }\r\n\r\n    getValue(id:number) {\r\n        return this.cache.get(id);\r\n    }\r\n\r\n    valueFromId(id:number|BoxId):any {\r\n        let _id:number;\r\n        switch (typeof id) {\r\n            case 'object': _id = (id as BoxId).id; break;\r\n            case 'number': _id = id as number; break;\r\n            default: return;\r\n        }\r\n        return this.getValue(_id);\r\n    }\r\n\r\n    resetCache(id:number) {\r\n        this.cache.delete(id);\r\n        let index = this.queue.findIndex(v => v === id);\r\n        this.queue.splice(index, 1);\r\n        this.useId(id);\r\n    }\r\n\r\n    cacheValue(val:any):boolean {\r\n        if (val === undefined) return false;\r\n        let id = this.getIdFromObj(val);\r\n        if (id === undefined) return false;\r\n        let index = this.waitingIds.findIndex(v => v === id);\r\n        if (index>=0) this.waitingIds.splice(index, 1);\r\n        //let cacheVal = this.createID(id, val);\r\n        this.cache.set(id, val);\r\n        return true;\r\n    }\r\n    protected getIdFromObj(val:any) {return this.tuidLocal.getIdFromObj(val)}\r\n    /*\r\n    protected afterCacheValue(tuidValue:any) {\r\n        let {fields} = this.tuidLocal;\r\n        if (fields === undefined) return;\r\n        for (let f of fields) {\r\n            let {_tuid} = f;\r\n            if (_tuid === undefined) continue;\r\n            _tuid.useId(tuidValue[f.name]);\r\n        }\r\n    }\r\n    */\r\n    async cacheIds():Promise<void> {\r\n        if (this.waitingIds.length === 0) return;\r\n        let tuidValues = await this.loadIds();\r\n        await this.cacheIdValues(tuidValues);\r\n    }\r\n\r\n    private async cacheIdValues(tuidValues: any[]) {\r\n        if (tuidValues === undefined) return;\r\n        let tuids = this.unpackTuidIds(tuidValues);\r\n        for (let tuidValue of tuids) {\r\n            if (this.cacheValue(tuidValue) === false) continue;\r\n            this.cacheTuidFieldValues(tuidValue);\r\n            //this.afterCacheValue(tuidValue);\r\n        }\r\n    }\r\n    protected divName:string = undefined;\r\n    protected async loadIds(): Promise<any[]> {\r\n        let ret = await this.tuidLocal.loadTuidIds(this.divName, this.waitingIds);\r\n        return ret;\r\n    }\r\n    protected unpackTuidIds(values:any[]|string):any[] {\r\n        return this.tuidLocal.unpackTuidIds(values);\r\n    }\r\n    protected cacheTuidFieldValues(tuidValue: any) {\r\n        this.tuidLocal.cacheTuidFieldValues(tuidValue);\r\n    }\r\n\r\n    async assureObj(id:number):Promise<void> {\r\n        let val = this.cache.get(id);\r\n        switch (typeof val) {\r\n            case 'object': return;\r\n            case 'number': this.cache.set(id, id); break;\r\n        }\r\n        let ret = await this.tuidLocal.loadTuidIds(this.divName, [id]);\r\n        await this.cacheIdValues(ret);\r\n    }\r\n}\r\n\r\nexport class IdDivCache extends IdCache {\r\n    private div: TuidDiv;\r\n    protected divName:string;\r\n\r\n    constructor(tuidLocal:TuidLocal, div: TuidDiv) {\r\n        super(tuidLocal);\r\n        this.div = div;\r\n        this.divName = div.name;\r\n    }\r\n    protected getIdFromObj(val:any) {return this.div.getIdFromObj(val)}\r\n    protected unpackTuidIds(values:any[]|string):any[] {\r\n        return this.div.unpackTuidIds(values);\r\n    }\r\n    protected cacheTuidFieldValues(tuidValue: any) {\r\n        this.div.cacheTuidFieldValues(tuidValue);\r\n    }\r\n    /*\r\n    async cacheIds():Promise<void> {\r\n        if (this.waitingIds.length === 0) return;\r\n        let tuidValues = await this.loadIds();\r\n        if (tuidValues !== undefined) {\r\n            let tuids = this.tuidLocal.unpackTuidIds(tuidValues);\r\n            for (let tuidValue of tuids) {\r\n                if (this.cacheValue(tuidValue) === false) continue;\r\n                this.tuidLocal.cacheTuidFieldValues(tuidValue);\r\n                this.afterCacheValue(tuidValue);\r\n            }\r\n        }\r\n    }\r\n    */\r\n}\r\n","import { BoxId, BoxDivId } from './boxId';\r\nimport { Tuid } from './tuid';\r\nimport { TuidDiv } from './tuidDiv';\r\nimport { Field } from '../uq';\r\n\r\n// field._tuid 用这个接口\r\n// Tuid, TuidDiv 实现这个接口\r\nexport class TuidBox {\r\n    tuid: Tuid;\r\n    ownerField:Field = undefined;\r\n    constructor(tuid: Tuid) {\r\n        this.tuid = tuid;\r\n    }\r\n\r\n    boxId(id:number):BoxId {\r\n        return this.tuid.boxId(id);\r\n    }\r\n    getIdFromObj(obj:any):number {\r\n        return this.tuid.getIdFromObj(obj);\r\n    }\r\n    useId(id:number):void {\r\n        return this.tuid.useId(id);\r\n    }\r\n    async showInfo() {\r\n        alert('showInfo not implemented');\r\n    }\r\n}\r\n\r\nexport class TuidBoxDiv extends TuidBox {\r\n    ownerField: Field;\r\n    private div: TuidDiv;\r\n    constructor(tuid: Tuid, div: TuidDiv, ownerField: Field) {\r\n        super(tuid);\r\n        this.div = div;\r\n        this.ownerField = ownerField;\r\n    }\r\n\r\n    boxId(id:number):BoxId {\r\n        return this.div.boxId(id);\r\n    }\r\n    getIdFromObj(obj:any):number {\r\n        return this.div.getIdFromObj(obj);\r\n    }\r\n    useId(id:number):void {\r\n        return this.div.useId(id);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Tuid, TuidLocal } from './tuid';\r\nimport { TuidDiv } from './tuidDiv';\r\nimport { TvTemplet } from '../../tools';\r\nimport { PureJSONContent } from '../../controllers';\r\n\r\nexport class BoxId {\r\n    readonly id: number;\r\n    //obj?: any;\r\n    //content: (templet?:(values?:any, x?:any)=>JSX.Element, x?:any)=>JSX.Element;\r\n    //valueFromFieldName: (fieldName:string)=>BoxId|any;\r\n    //_$com?: any;\r\n    //_$tuid?: TuidBase;\r\n    //getObj: ()=>any;\r\n    protected tuid: Tuid;\r\n    get obj():any {\r\n        return this.tuid.valueFromId(this.id);\r\n    }\r\n\r\n    constructor(tuid: Tuid, id: number) {\r\n        this.tuid = tuid;\r\n        this.id = id;\r\n    }\r\n\r\n    render(ui:TvTemplet, x:any):JSX.Element {\r\n        if (this.id === undefined || this.id === null) return;\r\n        let boxName = this.boxName(); // this.tuid.name;\r\n        let val = this.obj; // this.tuid.valueFromId(this.id);\r\n        if (this.isUndefined() === true) {\r\n            if (ui !== undefined) return ui(val, x);\r\n            return PureJSONContent(val, x);\r\n        }\r\n        switch (typeof val) {\r\n            case 'undefined':\r\n                return <del className=\"text-black-50\">{boxName} undefined</del>;\r\n            case 'number':\r\n                return <del className=\"text-black-50\">{boxName} {this.id}</del>;\r\n        }\r\n        if (ui === undefined) {\r\n            ui = this.ui();\r\n        }\r\n        if (ui !== undefined) {\r\n            let ret = ui(val, this.res());\r\n            if (ret !== undefined) return ret;\r\n            return <del className=\"text-danger\">{boxName} {this.id}</del>;\r\n        }\r\n\r\n        return PureJSONContent(val);\r\n    }\r\n\r\n    boxName():string {return this.tuid.name}\r\n    //valueFromId(): any {return this.tuid.valueFromId(this.id)}\r\n    isUndefined(): boolean {return this.tuid === undefined}\r\n    ui(): TvTemplet {return this.tuid.ui}\r\n    res(): any {return this.tuid.res}\r\n\r\n    async assure(): Promise<void> {\r\n        await this.tuid.assureBox(this.id);\r\n    }\r\n}\r\n\r\nexport class BoxDivId extends BoxId {\r\n    private div: TuidDiv;\r\n    constructor(tuid: Tuid, div: TuidDiv, id: number) {\r\n        super(tuid, id);\r\n        this.div = div;\r\n    }\r\n    get obj():any {\r\n        return this.div.valueFromId(this.id);\r\n    }\r\n    boxName():string {return this.div.name}\r\n    //valueFromId(): any {return this.div.valueFromId(this.id)}\r\n    isUndefined(): boolean {return this.div === undefined}\r\n    ui(): TvTemplet {return this.div.ui}\r\n    res(): any {return this.div.res}\r\n\r\n    async assure(): Promise<void> {\r\n        await this.div.assureBox(this.id);\r\n    }\r\n\r\n/*\r\n    render(ui:TvTemplet, x:any):JSX.Element {\r\n        if (this.id === undefined || this.id === null) return;\r\n        //let {name} = this.tuid;\r\n        let boxName = this.div.name;\r\n        let val = this.div.valueFromId(this.id);\r\n        if (this.div === undefined) {\r\n            if (ui !== undefined) return ui(val, x);\r\n            return PureJSONContent(val, x);\r\n        }\r\n        switch (typeof val) {\r\n            case 'undefined':\r\n                return <del className=\"text-black-50\">{boxName} undefined</del>;\r\n            case 'number':\r\n                return <del className=\"text-black-50\">{boxName} {this.id}</del>;\r\n        }\r\n        if (ui === undefined) {\r\n            ui = this.div.ui;\r\n        }\r\n        if (ui !== undefined) {\r\n            return PureJSONContent(val);\r\n        }\r\n\r\n        let ret = ui(val, this.div.res);\r\n        if (ret !== undefined) return ret;\r\n        return <del className=\"text-danger\">{boxName} {this.id}</del>;\r\n    }\r\n*/\r\n}\r\n","import { Tuid, TuidLocal } from './tuid';\r\nimport { IdCache, IdDivCache } from './idCache';\r\nimport { TuidBox, TuidBoxDiv } from './tuidBox';\r\nimport { BoxId, BoxDivId } from './boxId';\r\nimport { Field, Uq } from '../uq';\r\nimport { Entity } from '../entity';\r\n\r\nexport class TuidDiv extends Entity {\r\n    readonly typeName = 'div';\r\n    private cacheFields: Field[];\r\n    protected tuid: TuidLocal;\r\n    protected idName: string;\r\n    protected idCache: IdDivCache;;\r\n\r\n    ui: React.StatelessComponent<any>;\r\n    res: any;\r\n\r\n    constructor(uq: Uq, tuid: TuidLocal, name: string) {\r\n        super(uq, name, 0);\r\n        this.tuid = tuid;\r\n        this.idName = 'id';\r\n        this.idCache = new IdDivCache(tuid, this);\r\n    }\r\n\r\n    get owner() {return this.tuid}\r\n\r\n    /*\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        this.buildFieldsTuid();\r\n    }*/\r\n\r\n    setUIRes(ui:any, res:any) {\r\n        this.ui = ui && ui.content;\r\n        this.res = res;\r\n    }\r\n\r\n    buildFieldsTuid() {\r\n        super.buildFieldsTuid();\r\n        let {mainFields} = this.schema;\r\n        if (mainFields === undefined) debugger;\r\n        this.uq.buildFieldTuid(this.cacheFields = mainFields);\r\n    }\r\n\r\n    buildTuidBox(ownerField: Field): TuidBox {\r\n        return new TuidBoxDiv(this.tuid, this, ownerField);\r\n    }\r\n\r\n    getIdFromObj(obj:any):number {return obj[this.idName]}\r\n    cacheValue(value:any):void {\r\n        this.idCache.cacheValue(value);\r\n    }\r\n\r\n    useId(id:number, defer?:boolean):void {\r\n        this.idCache.useId(id, defer);\r\n    }\r\n\r\n    boxId(id:number):BoxId {\r\n        if (typeof id === 'object') return id;\r\n        this.useId(id);\r\n        return new BoxDivId(this.tuid, this, id);\r\n    }\r\n\r\n    valueFromId(id:number):any {\r\n        return this.idCache.getValue(id)\r\n    }\r\n\r\n    async assureBox(id:number):Promise<void> {\r\n        await this.idCache.assureObj(id);\r\n    }\r\n\r\n    async cacheIds() {\r\n        await this.idCache.cacheIds();\r\n    }\r\n\r\n    cacheTuidFieldValues(values:any) {\r\n        let fields = this.schema.fields;\r\n        this.cacheFieldsInValue(values, fields);\r\n    }\r\n\r\n    unpackTuidIds(values:any[]|string):any[] {\r\n        return this.unpackTuidIdsOfFields(values, this.cacheFields);\r\n    }\r\n}\r\n","import _ from 'lodash';\r\nimport { Entity } from '../entity';\r\nimport { IdCache } from './idCache';\r\nimport { TuidDiv } from './tuidDiv';\r\nimport { Uq, ArrFields, Field, SchemaFrom } from '../uq';\r\nimport { TuidBox } from './tuidBox';\r\nimport { BoxId } from './boxId';\r\n\r\nexport interface TuidSaveResult {\r\n    id: number;\r\n    inId: number;\r\n}\r\n\r\nexport abstract class Tuid extends Entity {\r\n    readonly typeName = 'tuid';\r\n    private idName: string;\r\n    unique: string[];\r\n    ui: React.StatelessComponent<any>;\r\n    res: any;\r\n\r\n    constructor(uq:Uq, name:string, typeId:number) {\r\n        super(uq, name, typeId)\r\n    }\r\n\r\n    public setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        let {id} = schema;\r\n        this.idName = id;\r\n    }\r\n\r\n    buildTuidBox(): TuidBox {\r\n        return new TuidBox(this);\r\n    }\r\n    \r\n    setUIRes(ui:any, res:any) {\r\n        //this.ui = (ui as TuidUI).content;\r\n        this.ui = ui.content;\r\n        this.res = res;\r\n    }\r\n\r\n    getIdFromObj(obj:any):number {return obj[this.idName]}\r\n    abstract useId(id:number):void;\r\n    abstract boxId(id:number):BoxId;\r\n    abstract valueFromId(id:number):any;\r\n    abstract async assureBox(id:number):Promise<void>;\r\n    cacheIds() {}\r\n    isImport = false;\r\n    abstract get hasDiv():boolean;// {return this.divs!==undefined}\r\n    abstract div(name:string):TuidDiv;\r\n    abstract async load(id:number|BoxId):Promise<any>;\r\n    abstract async save(id:number, props:any):Promise<TuidSaveResult>;\r\n    abstract async search(key:string, pageStart:string|number, pageSize:number):Promise<any>;\r\n    abstract async searchArr(owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any>;\r\n    abstract async loadArr(arr:string, owner:number, id:number):Promise<any>;\r\n    abstract async saveArr(arr:string, owner:number, id:number, props:any):Promise<void>;\r\n    abstract async posArr(arr:string, owner:number, id:number, order:number):Promise<void>;\r\n}\r\n\r\nexport class TuidLocal extends Tuid {\r\n    private idCache: IdCache = new IdCache(this);\r\n    private cacheFields: Field[];\r\n    private divs: {[div:string]: TuidDiv};\r\n\r\n    public setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        let {arrs} = schema;\r\n        if (arrs !== undefined) {\r\n            this.divs = {};\r\n            for (let arr of arrs) {\r\n                let {name} = arr;\r\n                let tuidDiv = new TuidDiv(this.uq, this, name);\r\n                this.divs[name] = tuidDiv;\r\n                tuidDiv.setSchema(arr);\r\n                tuidDiv.buildFieldsTuid();\r\n            }\r\n        }\r\n    }\r\n    \r\n    setUIRes(ui:any, res:any) {\r\n        super.setUIRes(ui, res);\r\n        if (this.divs === undefined) return;\r\n        //let uiDivs = (ui as TuidUI).divs;\r\n        let uiDivs = ui.divs;\r\n        if (uiDivs === undefined) return;\r\n        for (let i in this.divs) {\r\n            this.divs[i].setUIRes(uiDivs[i], res);\r\n        }\r\n    }\r\n\r\n    useId(id:number, defer?:boolean) {\r\n        this.idCache.useId(id, defer);\r\n    }\r\n    boxId(id:number):BoxId {\r\n        if (typeof id === 'object') return id;\r\n        this.useId(id);\r\n        return new BoxId(this, id);\r\n    }\r\n    valueFromId(id:number) {return this.idCache.getValue(id)}\r\n    async assureBox(id:number):Promise<void> {\r\n        await this.idCache.assureObj(id);\r\n    }\r\n\r\n    cacheIds() {\r\n        this.idCache.cacheIds();\r\n        if (this.divs === undefined) return;\r\n        for (let i in this.divs) this.divs[i].cacheIds();\r\n    }\r\n    cacheTuids(defer:number) {this.uq.cacheTuids(defer)}\r\n    get hasDiv():boolean {return this.divs!==undefined}\r\n    div(name:string):TuidDiv {\r\n        return this.divs && this.divs[name];\r\n    }\r\n    async loadTuidIds(divName:string, ids:number[]):Promise<any[]> {\r\n        return await this.uqApi.tuidIds(this.name, divName, ids);\r\n    }\r\n    async load(id:number|BoxId):Promise<any> {\r\n        if (id === undefined || id === 0) return;\r\n        if (typeof id === 'object') id = id.id;\r\n        let values = await this.uqApi.tuidGet(this.name, id);\r\n        if (values === undefined) return;\r\n        for (let f of this.schema.fields) {\r\n            let {tuid} = f;\r\n            if (tuid === undefined) continue;\r\n            let t = this.uq.getTuid(tuid);\r\n            if (t === undefined) continue;\r\n            let n = f.name;\r\n            values[n] = t.boxId(values[n]);\r\n        }\r\n        //values._$tuid = this;\r\n        this.idCache.cacheValue(values);\r\n        this.cacheTuidFieldValues(values);\r\n        return values;\r\n    }\r\n\r\n    cacheTuidFieldValues(values:any) {\r\n        let {fields, arrs} = this.schema;\r\n        this.cacheFieldsInValue(values, fields);\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs as ArrFields[]) {\r\n                let {name, fields} = arr;\r\n                let arrValues = values[name];\r\n                if (arrValues === undefined) continue;\r\n                let tuidDiv = this.div(name);\r\n                for (let row of arrValues) {\r\n                    //row._$tuid = tuidDiv;\r\n                    //row.$owner = this.boxId(row.owner);\r\n                    tuidDiv.cacheValue(row);\r\n                    this.cacheFieldsInValue(row, fields);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public buildFieldsTuid() {\r\n        super.buildFieldsTuid();\r\n        let {mainFields} = this.schema;\r\n        if (mainFields === undefined) debugger;\r\n        this.uq.buildFieldTuid(this.cacheFields = mainFields || this.fields);\r\n    }\r\n\r\n    unpackTuidIds(values:any[]|string):any[] {\r\n        return this.unpackTuidIdsOfFields(values, this.cacheFields);\r\n    }\r\n\r\n    async save(id:number, props:any):Promise<TuidSaveResult> {\r\n        let {fields} = this.schema;\r\n        let params:any = {$id: id};\r\n        for (let field of fields as Field[]) {\r\n            let {name, tuid, type} = field;\r\n            let val = props[name];\r\n            if (tuid !== undefined) {\r\n                if (typeof val === 'object') {\r\n                    if (val !== null) val = val.id;\r\n                }\r\n            }\r\n            else {\r\n                switch (type) {\r\n                    case 'date':\r\n                    case 'datetime':\r\n                        val = new Date(val).toISOString();\r\n                        val = (val as string).replace('T', ' ');\r\n                        val = (val as string).replace('Z', '');\r\n                        break;\r\n                }\r\n            }\r\n            params[name] = val;\r\n        }\r\n        let ret = await this.uqApi.tuidSave(this.name, params);\r\n        return ret;\r\n    }\r\n    async search(key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        let ret:any[] = await this.searchArr(undefined, key, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    async searchArr(owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        let {fields} = this.schema;\r\n        let api = this.uqApi;\r\n        let ret = await api.tuidSearch(this.name, undefined, owner, key, pageStart, pageSize);\r\n        for (let row of ret) {\r\n            this.cacheFieldsInValue(row, fields);\r\n        }\r\n        return ret;\r\n    }\r\n    async loadArr(arr:string, owner:number, id:number):Promise<any> {\r\n        if (id === undefined || id === 0) return;\r\n        let api = this.uqApi;\r\n        return await api.tuidArrGet(this.name, arr, owner, id);\r\n    }\r\n    async saveArr(arr:string, owner:number, id:number, props:any) {\r\n        let params = _.clone(props);\r\n        params[\"$id\"] = id;\r\n        return await this.uqApi.tuidArrSave(this.name, arr, owner, params);\r\n    }\r\n\r\n    async posArr(arr:string, owner:number, id:number, order:number) {\r\n        return await this.uqApi.tuidArrPos(this.name, arr, owner, id, order);\r\n    }\r\n}\r\n\r\nexport class TuidImport extends Tuid {\r\n    private tuidLocal: TuidLocal;\r\n\r\n    constructor(uq:Uq, name:string, typeId:number, from: SchemaFrom) {\r\n        super(uq, name, typeId);\r\n        this.from = from;\r\n    }\r\n\r\n    setFrom(tuidLocal: TuidLocal) {this.tuidLocal = tuidLocal}\r\n    \r\n    readonly from: SchemaFrom;\r\n    isImport = true;\r\n\r\n    useId(id:number) {this.tuidLocal.useId(id);}\r\n    boxId(id:number):BoxId {return this.tuidLocal.boxId(id);}\r\n    valueFromId(id:number) {return this.tuidLocal.valueFromId(id)}\r\n    async assureBox(id:number):Promise<void> {\r\n        await this.tuidLocal.assureBox(id);\r\n    }\r\n    get hasDiv():boolean {return this.tuidLocal.hasDiv}\r\n    div(name:string):TuidDiv {return this.tuidLocal.div(name)}\r\n    async load(id:number|BoxId):Promise<any> {\r\n        return await this.tuidLocal.load(id);\r\n    }\r\n    async save(id:number, props:any):Promise<TuidSaveResult> {\r\n        return await this.tuidLocal.save(id, props);\r\n    }\r\n    async search(key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        return await this.tuidLocal.search(key, pageStart, pageSize);\r\n    }\r\n    async searchArr(owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        return await this.tuidLocal.searchArr(owner, key, pageStart, pageSize);\r\n    }\r\n    async loadArr(arr:string, owner:number, id:number):Promise<any> {\r\n        return await this.tuidLocal.loadArr(arr, owner, id);\r\n    }\r\n    async saveArr(arr:string, owner:number, id:number, props:any):Promise<void> {\r\n        await this.tuidLocal.saveArr(arr, owner, id, props);\r\n    }\r\n    async posArr(arr:string, owner:number, id:number, order:number):Promise<void> {\r\n        await this.tuidLocal.posArr(arr, owner, id, order);\r\n    }\r\n}\r\n","import {Entity} from './entity';\r\n\r\nexport class Action extends Entity {\r\n    get typeName(): string { return 'action';}\r\n    async submit(data:object) {\r\n        await this.loadSchema();\r\n        let text = this.pack(data);\r\n        return await this.uqApi.action(this.name, {data:text});\r\n    }\r\n    async submitReturns(data:object):Promise<{[ret:string]:any[]}> {\r\n        await this.loadSchema();\r\n        let text = this.pack(data);\r\n        let result = await this.uqApi.actionReturns(this.name, {data:text});\r\n        let len = this.returns.length;\r\n        let ret:{[r:string]:any[]} = {};\r\n        for (let i=0; i<len; i++) {\r\n            let retSchema = this.returns[i];\r\n            ret[retSchema.name] = result[i];\r\n        }\r\n        return ret;\r\n    }\r\n}\r\n","import { Entity } from './entity';\r\nimport { PageItems } from '../../pageItems';\r\n\r\nexport interface SheetState {\r\n    name: string;\r\n    actions: SheetAction[];\r\n}\r\n\r\nexport interface SheetAction {\r\n    name: string;\r\n}\r\n\r\nexport interface StateCount {\r\n    state: string;\r\n    count: number;\r\n}\r\n\r\nexport class Sheet extends Entity {\r\n    get typeName(): string { return 'sheet';}\r\n    states: SheetState[];\r\n\r\n    /*\r\n    setStates(states: SheetState[]) {\r\n        for (let state of states) {\r\n            this.setStateAccess(this.states.find(s=>s.name==state.name), state);\r\n        }\r\n    }*/\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        this.states = schema.states;\r\n    }\r\n    build(obj:any) {\r\n        this.states = [];\r\n        for (let op of obj.ops) {\r\n            this.states.push({name: op, actions:undefined});\r\n        }\r\n        /*\r\n        for (let p in obj) {\r\n            switch(p) {\r\n                case '#':\r\n                case '$': continue;\r\n                default: this.states.push(this.createSheetState(p, obj[p])); break;\r\n            }\r\n        }*/\r\n    }\r\n    private createSheetState(name:string, obj:object):SheetState {\r\n        let ret:SheetState = {name:name, actions:[]};\r\n        let actions = ret.actions;\r\n        for (let p in obj) {\r\n            let action:SheetAction = {name: p};\r\n            actions.push(action);\r\n        }\r\n        return ret;\r\n    }\r\n    /*\r\n    private setStateAccess(s:SheetState, s1:SheetState) {\r\n        if (s === undefined) return;\r\n        for (let action of s1.actions) {\r\n            let acn = action.name;\r\n            let ac = s.actions.find(a=>a.name === acn);\r\n            if (ac === undefined) continue;\r\n            s.actions.push(action);\r\n        }\r\n    }*/\r\n    async save(discription:string, data:any):Promise<any> {\r\n        await this.loadSchema();\r\n        let {id} = this.uq;\r\n        let text = this.pack(data);\r\n\r\n        let ret = await this.uqApi.sheetSave(this.name, {app: id, discription: discription, data:text});\r\n        return ret;\r\n        /*\r\n        let {id, state} = ret;\r\n        if (id > 0) this.changeStateCount(state, 1);\r\n        return ret;\r\n        */\r\n    }\r\n    async action(id:number, flow:number, state:string, action:string) {\r\n        await this.loadSchema();\r\n        return await this.uqApi.sheetAction(this.name, {id:id, flow:flow, state:state, action:action});\r\n    }\r\n    private unpack(data:any):any {\r\n        //if (this.schema === undefined) await this.loadSchema();\r\n        let ret = data[0];\r\n        let brief = ret[0];\r\n        let sheetData = this.unpackSheet(brief.data);\r\n        let flows = data[1];\r\n        return {\r\n            brief: brief,\r\n            data: sheetData,\r\n            flows: flows,\r\n        }\r\n    }\r\n    async getSheet(id:number):Promise<any> {\r\n        await this.loadSchema();\r\n        let ret = await this.uqApi.getSheet(this.name, id);\r\n        if (ret[0].length === 0) return await this.getArchive(id);\r\n        return this.unpack(ret);\r\n    }\r\n    async getArchive(id:number):Promise<any> {\r\n        await this.loadSchema();\r\n        let ret = await this.uqApi.sheetArchive(this.name, id)\r\n        return this.unpack(ret);\r\n    }\r\n\r\n    async getArchives(pageStart:number, pageSize:number) {\r\n        await this.loadSchema();\r\n        let ret = await this.uqApi.sheetArchives(this.name, {pageStart:pageStart, pageSize:pageSize});\r\n        return ret;\r\n    }\r\n\r\n    async getStateSheets(state:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        await this.loadSchema();\r\n        let ret = await this.uqApi.stateSheets(this.name, {state:state, pageStart:pageStart, pageSize:pageSize});\r\n        return ret;\r\n    }\r\n    createPageStateItems<T>(): PageStateItems<T> {return new PageStateItems<T>(this);}\r\n\r\n    async stateSheetCount():Promise<StateCount[]> {\r\n        await this.loadSchema();\r\n        let ret:StateCount[] = await this.uqApi.stateSheetCount(this.name);\r\n        return this.states.map(s => {\r\n            let n = s.name, count = 0;\r\n            let r = ret.find(v => v.state === n);\r\n            if (r !== undefined) count = r.count;\r\n            return {state: n, count: count} \r\n        });\r\n    }\r\n\r\n    async mySheets(state:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        await this.loadSchema();\r\n        let ret = await this.uqApi.mySheets(this.name, {state:state, pageStart:pageStart, pageSize:pageSize});\r\n        return ret;\r\n    }\r\n}\r\n\r\nexport class PageStateItems<T> extends PageItems<T> {\r\n    private sheet: Sheet;\r\n    constructor(sheet: Sheet) {\r\n        super(true);\r\n        this.sheet = sheet;\r\n        this.pageSize = 10;\r\n    }\r\n    protected async load(param:any, pageStart:any, pageSize:number):Promise<any[]> {\r\n        let ret = await this.sheet.getStateSheets(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:any) {\r\n        this.pageStart = item === undefined? 0 : item.id;\r\n    }\r\n}\r\n","import {observable, IObservableArray} from 'mobx';\r\nimport {Field, ArrFields} from './uq';\r\nimport {Entity} from './entity';\r\n\r\nexport type QueryPageApi = (name:string, pageStart:any, pageSize:number, params:any) => Promise<string>;\r\nexport class Query extends Entity {\r\n    get typeName(): string { return 'query';}\r\n    private pageStart: any;\r\n    private pageSize:number;\r\n    private params:any;\r\n    private more: boolean;\r\n    private startField: Field;\r\n    @observable list:IObservableArray; // = observable.array([], {deep: false});\r\n    returns: ArrFields[];\r\n    isPaged: boolean;\r\n\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        let {returns} = schema;\r\n        //this.returns = returns;\r\n        this.isPaged = returns && (returns as any[]).find(v => v.name === '$page') !== undefined;\r\n    }\r\n\r\n    resetPage(size:number, params:any) {\r\n        this.pageStart = undefined;\r\n        this.pageSize = size;\r\n        this.params = params;\r\n        this.more = false;\r\n        this.list = undefined;\r\n    }\r\n    get hasMore() {return this.more;}\r\n    async loadPage():Promise<void> {\r\n        if (this.pageSize === undefined) {\r\n            throw 'call resetPage(size:number, params:any) first';\r\n        }\r\n        let pageStart:any;\r\n        if (this.pageStart !== undefined) {\r\n            switch (this.startField.type) {\r\n                default: pageStart = this.pageStart; break;\r\n                case 'date':\r\n                case 'time':\r\n                case 'datetime': pageStart = (this.pageStart as Date).getTime(); break;\r\n            }\r\n        }\r\n        let page = await this.page(this.params, pageStart, this.pageSize+1);\r\n        /*\r\n        await this.loadSchema();\r\n        let res = await this.tvApi.page(this.name, pageStart, this.pageSize+1, this.params);\r\n        let data = await this.unpackReturns(res);\r\n        let page = data['$page'] as any[];\r\n        */\r\n        this.list = observable.array([], {deep: false});\r\n        if (page !== undefined) {\r\n            if (page.length > this.pageSize) {\r\n                this.more = true;\r\n                page.pop();\r\n                let ret = this.returns.find(r => r.name === '$page');\r\n                this.startField = ret.fields[0];\r\n                this.pageStart = page[page.length-1][this.startField.name];\r\n            }\r\n            else {\r\n                this.more = false;\r\n            }\r\n            this.list.push(...page);\r\n        }\r\n        //this.loaded = true;\r\n    }\r\n\r\n    async page(params:any, pageStart:any, pageSize:number):Promise<any[]> {\r\n        await this.loadSchema();\r\n        let res = await this.uqApi.page(this.name, pageStart, pageSize+1, this.buildParams(params));\r\n        let data = this.unpackReturns(res);\r\n        return data.$page;// as any[];\r\n    }\r\n    async query(params:any):Promise<any> {\r\n        await this.loadSchema();\r\n        let res = await this.uqApi.query(this.name, this.buildParams(params));\r\n        let data = this.unpackReturns(res);\r\n        return data;\r\n    }\r\n    async table(params:any): Promise<any[]> {\r\n        let ret = await this.query(params);\r\n        for (let i in ret) {\r\n            return ret[i];\r\n        }\r\n    }\r\n    async obj(params:any):Promise<any> {\r\n        let ret = await this.table(params);\r\n        if (ret.length > 0) return ret[0];\r\n    }\r\n    async scalar(params:any):Promise<any> {\r\n        let ret = await this.obj(params);\r\n        for (let i in ret) return ret[i];\r\n    }\r\n}\r\n","import {Query} from './query';\r\n\r\nexport class Book extends Query {\r\n    get typeName(): string { return 'book';}\r\n    protected queryApiName = 'book';\r\n}\r\n","import {Query} from './query';\r\n\r\nexport class History extends Query {\r\n    get typeName(): string { return 'history';}\r\n    protected queryApiName = 'history';\r\n}\r\n","import { Entity } from './entity';\r\nimport { Action } from './action';\r\nimport { Query } from './query';\r\nimport { Field } from './uq';\r\n\r\ninterface MapActions {\r\n    add: Action;\r\n    del: Action;\r\n}\r\ninterface MapQueries {\r\n    all: Query;\r\n    page: Query;\r\n    query: Query;\r\n}\r\n\r\nexport class Map extends Entity {\r\n    get typeName(): string { return 'map';}\r\n    keys: Field[];\r\n    actions: MapActions = {} as any;\r\n    queries: MapQueries = {} as any;\r\n    schemaFrom: {owner:string; uq:string};\r\n\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        this.schemaFrom = this.schema.from;\r\n        let {actions, queries, keys} = schema;\r\n        this.uq.buildFieldTuid(this.keys = keys);\r\n        //let t = this.schemaStringify();\r\n        for (let i in actions) {\r\n            let actionSchema = actions[i];\r\n            let {name} = actionSchema;\r\n            let action = this.uq.newAction(name, undefined);\r\n            action.setSchema(actionSchema);\r\n            action.buildFieldsTuid();\r\n            this.actions[i] = action;\r\n        }\r\n        for (let i in queries) {\r\n            let querySchema = queries[i];\r\n            let {name} = querySchema;\r\n            let query = this.uq.newQuery(name, undefined);\r\n            query.setSchema(querySchema);\r\n            query.buildFieldsTuid();\r\n            this.queries[i] = query;\r\n        }\r\n    }\r\n\r\n    async add(param:any) {\r\n        await this.loadSchema();\r\n        return await this.actions.add.submit(param);\r\n    }\r\n\r\n    async del(param:any) {\r\n        await this.loadSchema();\r\n        return await this.actions.del.submit(param);\r\n    }\r\n\r\n    async all() {\r\n        await this.loadSchema();\r\n        return await this.queries.all.query({});\r\n    }\r\n\r\n    async page(param:any, pageStart:any, pageSize: number) {\r\n        await this.loadSchema();\r\n        return await this.queries.page.page(param, pageStart, pageSize);\r\n    }\r\n\r\n    async query(param:any) {\r\n        await this.loadSchema();\r\n        return await this.queries.query.query(param);\r\n    }\r\n    async table(params:any): Promise<any[]> {\r\n        let ret = await this.query(params);\r\n        for (let i in ret) {\r\n            return ret[i];\r\n        }\r\n    }\r\n    async obj(params:any):Promise<any> {\r\n        let ret = await this.table(params);\r\n        if (ret.length > 0) return ret[0];\r\n    }\r\n    async scalar(params:any):Promise<any> {\r\n        let ret = await this.obj(params);\r\n        for (let i in ret) return ret[i];\r\n    }\r\n}\r\n","import {Query} from './query';\r\n\r\nexport class Pending extends Query {\r\n    get typeName(): string { return 'pending';}\r\n    protected queryApiName = 'pending';\r\n}\r\n","import {Tuid, TuidDiv, TuidImport, TuidLocal, TuidBox} from './tuid';\r\nimport {Action} from './action';\r\nimport {Sheet} from './sheet';\r\nimport {Query} from './query';\r\nimport {Book} from './book';\r\nimport {History} from './history';\r\nimport { UqApi, UqData, UnitxApi, appInFrame } from '../../net';\r\nimport { Map } from './map';\r\nimport { Pending } from './pending';\r\nimport { UqApp } from './uqApp';\r\n\r\nexport type FieldType = 'id' | 'tinyint' | 'smallint' | 'int' | 'bigint' | 'dec' | 'char' | 'text'\r\n    | 'datetime' | 'date' | 'time';\r\n\r\nexport function fieldDefaultValue(type:FieldType) {\r\n    switch (type) {\r\n        case 'tinyint':\r\n        case 'smallint':\r\n        case 'int':\r\n        case 'bigint':\r\n        case 'dec':\r\n            return 0;\r\n        case 'char':\r\n        case 'text':\r\n            return '';\r\n        case 'datetime':\r\n        case 'date':\r\n            return '2000-1-1';\r\n        case 'time':\r\n            return '0:00';\r\n    }\r\n}\r\n\r\nexport interface Field {\r\n    name: string;\r\n    type: FieldType;\r\n    tuid?: string;\r\n    arr?: string;\r\n    null?: boolean;\r\n    size?: number;\r\n    owner?: string;\r\n    _tuid: TuidBox;\r\n    /*\r\n    _ownerField: Field;\r\n    _tuid: Tuid;\r\n    _div: TuidDiv;\r\n    */\r\n}\r\nexport interface ArrFields {\r\n    name: string;\r\n    fields: Field[];\r\n    id?: string;\r\n    order?: string;\r\n    //isBus?: boolean;\r\n}\r\nexport interface FieldMap {\r\n    [name:string]: Field;\r\n}\r\nexport interface SchemaFrom {\r\n    owner:string;\r\n    uq:string;\r\n}\r\n\r\nclass TuidsCache {\r\n    private cacheTimer: any;\r\n    private tuids: {[name:string]: Tuid};\r\n    constructor(tuids: {[name:string]: Tuid}) {\r\n        this.tuids = tuids;\r\n    }\r\n\r\n    cacheTuids(defer:number) {\r\n        this.clearCacheTimer();\r\n        this.cacheTimer = setTimeout(this.loadIds, defer);\r\n    }\r\n    private clearCacheTimer() {\r\n        if (this.cacheTimer === undefined) return;\r\n        clearTimeout(this.cacheTimer);\r\n        this.cacheTimer = undefined;\r\n    }\r\n    private loadIds = () => {\r\n        this.clearCacheTimer();\r\n        for (let i in this.tuids) {\r\n            let tuid = this.tuids[i];\r\n            tuid.cacheIds();\r\n        }\r\n    }\r\n}\r\n\r\nexport class Uq {\r\n    private tuids: {[name:string]: Tuid} = {};\r\n    private actions: {[name:string]: Action} = {};\r\n    private sheets: {[name:string]: Sheet} = {};\r\n    private queries: {[name:string]: Query} = {};\r\n    private books: {[name:string]: Book} = {};\r\n    private maps: {[name:string]: Map} = {};\r\n    private histories: {[name:string]: History} = {};\r\n    private pendings: {[name:string]: Pending} = {};\r\n    private tuidsCache: TuidsCache;\r\n    private uqApp: UqApp;\r\n\r\n    name: string;\r\n    uqApi: UqApi;\r\n    id: number;\r\n\r\n    constructor(uqApp: UqApp, uqData: UqData) {\r\n        this.uqApp = uqApp;\r\n        this.tuidsCache = new TuidsCache(this.tuids);\r\n        let {id, uqOwner, uqName, access} = uqData;\r\n        this.id = id;\r\n        this.name = uqOwner + '/' + uqName;\r\n        let hash = document.location.hash;\r\n        let baseUrl = hash===undefined || hash===''? \r\n            'debug/':'tv/';\r\n\r\n        let acc: string[];\r\n        if (access === null || access === undefined || access === '*') {\r\n            acc = [];\r\n        }\r\n        else {\r\n            acc = access.split(';').map(v => v.trim()).filter(v => v.length > 0);\r\n        }\r\n        if (this.name === '$$$/$unitx') {\r\n            // 这里假定，点击home link之后，已经设置unit了\r\n            // 调用 UnitxApi会自动搜索绑定 unitx service\r\n            this.uqApi = new UnitxApi(appInFrame.unit);\r\n        }\r\n        else {\r\n            this.uqApi = new UqApi(baseUrl, uqOwner, uqName, acc, true);\r\n        }\r\n        //this.entities = new Uq(this, uqApi, appId);\r\n    }\r\n\r\n    tuid(name:string):Tuid {return this.tuids[name.toLowerCase()]}\r\n    tuidDiv(name:string, div:string):TuidDiv {\r\n        let tuid = this.tuids[name.toLowerCase()]\r\n        return tuid && tuid.div(div.toLowerCase());\r\n    }\r\n    action(name:string):Action {return this.actions[name.toLowerCase()]}\r\n    sheet(name:string):Sheet {return this.sheets[name.toLowerCase()]}\r\n    query(name:string):Query {return this.queries[name.toLowerCase()]}\r\n    book(name:string):Book {return this.books[name.toLowerCase()]}\r\n    map(name:string):Map {return this.maps[name.toLowerCase()]}\r\n    history(name:string):History {return this.histories[name.toLowerCase()]}\r\n    pending(name:string):Pending {return this.pendings[name.toLowerCase()]}\r\n\r\n    sheetFromTypeId(typeId:number):Sheet {\r\n        for (let i in this.sheets) {\r\n            let sheet = this.sheets[i];\r\n            if (sheet.typeId === typeId) return sheet;\r\n        }\r\n    }\r\n\r\n    tuidArr: Tuid[] = [];\r\n    actionArr: Action[] = [];\r\n    sheetArr: Sheet[] = [];\r\n    queryArr: Query[] = [];\r\n    bookArr: Book[] = [];\r\n    mapArr: Map[] = [];\r\n    historyArr: History[] = [];\r\n    pendingArr: Pending[] = [];\r\n\r\n    /*\r\n    private schemaLoaded:boolean = false;\r\n    async loadSchema(): Promise<string> {\r\n        try {\r\n            if (this.schemaLoaded === true) return;\r\n            await this.init();\r\n            await this.loadAccess();\r\n            this.schemaLoaded = true;\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n            return err;\r\n        }\r\n    }*/\r\n\r\n    async init() {\r\n        await this.uqApi.init();\r\n    }\r\n\r\n    async loadAccess() {\r\n        let accesses = await this.uqApi.loadAccess();\r\n        if (accesses === undefined) return;\r\n        this.buildEntities(accesses);\r\n    }\r\n\r\n    async loadEntities() {\r\n        let accesses = await this.uqApi.loadEntities();\r\n        this.buildEntities(accesses);\r\n    }\r\n\r\n    private buildEntities(entities:any) {\r\n        if (entities === undefined) {\r\n            debugger;\r\n        }\r\n        let {access, tuids} = entities;\r\n        this.buildTuids(tuids);\r\n        this.buildAccess(access);\r\n    }\r\n\r\n    async checkAccess() {\r\n        return await this.uqApi.checkAccess();\r\n    }\r\n\r\n    async loadEntitySchema(entityName: string): Promise<any> {\r\n        return await this.uqApi.schema(entityName);\r\n    }\r\n\r\n    getTuid(name:string): Tuid {\r\n        return this.tuids[name];\r\n    }\r\n\r\n    private buildTuids(tuids:any) {\r\n        for (let i in tuids) {\r\n            let schema = tuids[i];\r\n            let {name, typeId, from} = schema;\r\n            let tuid = this.newTuid(i, typeId, from);\r\n            tuid.sys = true;\r\n        }\r\n        for (let i in tuids) {\r\n            let schema = tuids[i];\r\n            let tuid = this.getTuid(i);\r\n            tuid.setSchema(schema);\r\n        }\r\n        for (let i in this.tuids) {\r\n            let tuid = this.tuids[i];\r\n            tuid.buildFieldsTuid();\r\n        }\r\n    }\r\n\r\n    private buildAccess(access:any) {\r\n        for (let a in access) {\r\n            let v = access[a];\r\n            switch (typeof v) {\r\n                case 'string': this.fromType(a, v); break;\r\n                case 'object': this.fromObj(a, v); break;\r\n            }\r\n        }\r\n        /*\r\n        for (let tuid of this.tuidArr) {\r\n            tuid.setProxies(this);\r\n        }*/\r\n    }\r\n\r\n    cacheTuids(defer:number) {\r\n        this.tuidsCache.cacheTuids(defer);\r\n    }\r\n\r\n    newAction(name:string, id:number):Action {\r\n        let action = this.actions[name];\r\n        if (action !== undefined) return action;\r\n        action = this.actions[name] = new Action(this, name, id)\r\n        this.actionArr.push(action);\r\n        return action;\r\n    }\r\n    private newTuid(name:string, id:number, from:SchemaFrom):Tuid {\r\n        let tuid = this.tuids[name];\r\n        if (tuid !== undefined) return tuid;\r\n        if (from !== undefined)\r\n            tuid = new TuidImport(this, name, id, from);\r\n        else\r\n            tuid = new TuidLocal(this, name, id);\r\n        this.tuids[name] = tuid;\r\n        this.tuidArr.push(tuid);\r\n        return tuid;\r\n    }\r\n    newQuery(name:string, id:number):Query {\r\n        let query = this.queries[name];\r\n        if (query !== undefined) return query;\r\n        query = this.queries[name] = new Query(this, name, id)\r\n        this.queryArr.push(query);\r\n        return query;\r\n    }\r\n    private newBook(name:string, id:number):Book {\r\n        let book = this.books[name];\r\n        if (book !== undefined) return book;\r\n        book = this.books[name] = new Book(this, name, id);\r\n        this.bookArr.push(book);\r\n        return book;\r\n    }\r\n    private newMap(name:string, id:number):Map {\r\n        let map = this.maps[name];\r\n        if (map !== undefined) return map;\r\n        map = this.maps[name] = new Map(this, name, id)\r\n        this.mapArr.push(map);\r\n        return map;\r\n    }\r\n    private newHistory(name:string, id:number):History {\r\n        let history = this.histories[name];\r\n        if (history !== undefined) return;\r\n        history = this.histories[name] = new History(this, name, id)\r\n        this.historyArr.push(history);\r\n        return history;\r\n    }\r\n    private newPending(name:string, id:number):Pending {\r\n        let pending = this.pendings[name];\r\n        if (pending !== undefined) return;\r\n        pending = this.pendings[name] = new Pending(this, name, id)\r\n        this.pendingArr.push(pending);\r\n        return pending;\r\n    }\r\n    newSheet(name:string, id:number):Sheet {\r\n        let sheet = this.sheets[name];\r\n        if (sheet !== undefined) return sheet;\r\n        sheet = this.sheets[name] = new Sheet(this, name, id);\r\n        this.sheetArr.push(sheet);\r\n        return sheet;\r\n    }\r\n    private fromType(name:string, type:string) {\r\n        let parts = type.split('|');\r\n        type = parts[0];\r\n        let id = Number(parts[1]);\r\n        switch (type) {\r\n            //case 'uq': this.id = id; break;\r\n            case 'tuid':\r\n                // Tuid should not be created here!;\r\n                //let tuid = this.newTuid(name, id);\r\n                //tuid.sys = false;\r\n                break;\r\n            case 'action': this.newAction(name, id); break;\r\n            case 'query': this.newQuery(name, id); break;\r\n            case 'book': this.newBook(name, id); break;\r\n            case 'map': this.newMap(name, id); break;\r\n            case 'history': this.newHistory(name, id); break;\r\n            case 'sheet':this.newSheet(name, id); break;\r\n            case 'pending': this.newPending(name, id); break;\r\n        }\r\n    }\r\n    private fromObj(name:string, obj:any) {\r\n        switch (obj['$']) {\r\n            case 'sheet': this.buildSheet(name, obj); break;\r\n        }\r\n    }\r\n    private buildSheet(name:string, obj:any) {\r\n        let sheet = this.sheets[name];\r\n        if (sheet === undefined) sheet = this.newSheet(name, obj.id);\r\n        sheet.build(obj);\r\n        /*\r\n        let states = sheet.states;\r\n        for (let p in obj) {\r\n            switch(p) {\r\n                case '#':\r\n                case '$': continue;\r\n                default: states.push(this.createSheetState(p, obj[p])); break;\r\n            }\r\n        }*/\r\n    }\r\n    /*\r\n    private createSheetState(name:string, obj:object):SheetState {\r\n        let ret:SheetState = {name:name, actions:[]};\r\n        let actions = ret.actions;\r\n        for (let p in obj) {\r\n            let action:SheetAction = {name: p};\r\n            actions.push(action);\r\n        }\r\n        return ret;\r\n    }*/\r\n    buildFieldTuid(fields:Field[], mainFields?:Field[]) {\r\n        if (fields === undefined) return;\r\n        for (let f of fields) {\r\n            let {tuid} = f;\r\n            if (tuid === undefined) continue;\r\n            let t = this.getTuid(tuid);\r\n            if (t === undefined) continue;\r\n            f._tuid = t.buildTuidBox();\r\n        }\r\n        for (let f of fields) {\r\n            let {owner} = f;\r\n            if (owner === undefined) continue;\r\n            let ownerField = fields.find(v => v.name === owner);\r\n            if (ownerField === undefined) {\r\n                if (mainFields !== undefined) {\r\n                    ownerField = mainFields.find(v => v.name === owner);\r\n                }\r\n                if (ownerField === undefined) {\r\n                    debugger;\r\n                    throw `owner field ${owner} is undefined`;\r\n                }\r\n            }\r\n            //f._ownerField = ownerField;\r\n            //let {arr} = f;\r\n            let {arr, tuid} = f;\r\n            let t = this.getTuid(ownerField._tuid.tuid.name);\r\n            if (t === undefined) continue;\r\n            let div = t.div(arr || tuid);\r\n            f._tuid = div && div.buildTuidBox(ownerField);\r\n            if (f._tuid === undefined) {\r\n                debugger;\r\n                throw 'owner field ${owner} is not tuid';\r\n            }\r\n        }\r\n    }\r\n    buildArrFieldsTuid(arrFields:ArrFields[], mainFields:Field[]) {\r\n        if (arrFields === undefined) return;\r\n        for (let af of arrFields) {\r\n            let {fields} = af;\r\n            if (fields === undefined) continue;\r\n            this.buildFieldTuid(fields, mainFields);\r\n        }\r\n    }\r\n}\r\n","import { Uq } from './uq';\r\nimport { TuidImport, TuidLocal } from './tuid';\r\n//import { loadAppUqs } from '../../net';\r\n\r\nexport class UqApp {\r\n    name: string;\r\n    id: number;\r\n    appOwner: string;\r\n    appName: string;\r\n    private collection: {[uqName: string]: Uq} = {};\r\n\r\n    constructor(tonvaAppName:string) {\r\n        this.name = name;\r\n        let parts = tonvaAppName.split('/');\r\n        if (parts.length !== 2) {\r\n            throw 'tonvaApp name must be / separated, owner/app';\r\n        }\r\n        this.appOwner = parts[0];\r\n        this.appName = parts[1];\r\n    }\r\n\r\n    addUq(uq: Uq) {\r\n        this.collection[uq.name] = uq;\r\n    }\r\n\r\n    setTuidImportsLocal() {\r\n        for (let i in this.collection) {\r\n            let uq = this.collection[i];\r\n            for (let tuid of uq.tuidArr) {\r\n                if (tuid.isImport === true) {\r\n                    this.setLocal(tuid as TuidImport);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private setLocal(tuidImport: TuidImport) {\r\n        let {from} = tuidImport;\r\n        let uq = this.collection[from.owner + '/' + from.uq];\r\n        if (uq === undefined) {\r\n            //debugger;\r\n            return;\r\n        }\r\n        let tuid = uq.tuid(tuidImport.name);\r\n        if (tuid === undefined) {\r\n            //debugger;\r\n            return;\r\n        }\r\n        if (tuid.isImport === true) {\r\n            //debugger;\r\n            return;\r\n        }\r\n        tuidImport.setFrom(tuid as TuidLocal);\r\n    }\r\n\r\n    /*\r\n    async load(): Promise<string[]> {\r\n        let uqAppData = await loadAppUqs(this.appOwner, this.appName);\r\n        let {id, uqs} = uqAppData;\r\n        this.id = id;\r\n\r\n        let retErrors:string[] = [];\r\n\r\n        let promises: PromiseLike<string>[] = [];\r\n        let promiseChecks: PromiseLike<boolean>[] = [];\r\n        for (let uqData of uqs) {\r\n            //let {id:uqId, uqOwner, uqName, access} = uqData;\r\n            //let uqn = uqOwner + '/' + uqName;\r\n            let uq = new Uq(this, uqData);\r\n            this.collection[uq.name] = uq;\r\n            promises.push(uq.loadSchema());\r\n            promiseChecks.push(uq.checkAccess());\r\n        }\r\n        let results = await Promise.all(promises);\r\n        Promise.all(promiseChecks).then((checks) => {\r\n            for (let c of checks) {\r\n                if (c === false) {\r\n                    //debugger;\r\n                    //nav.start();\r\n                    //return;\r\n                }\r\n            }\r\n        });\r\n        for (let result of results)\r\n        {\r\n            let retError = result; // await cUq.loadSchema();\r\n            if (retError !== undefined) {\r\n                retErrors.push(retError);\r\n                continue;\r\n            }\r\n        }\r\n        if (retErrors.length === 0) return;\r\n        return retErrors;\r\n    }\r\n    */\r\n}\r\n","export * from './uq';\r\nexport * from './entity';\r\nexport * from './action';\r\nexport * from './query';\r\nexport * from './sheet';\r\nexport * from './tuid';\r\nexport * from './book';\r\nexport * from './map';\r\nexport * from './history';\r\nexport * from './pending';\r\nexport * from './uqApp';","import jwtDecode from 'jwt-decode';\r\n\r\nexport interface Unit {\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\nexport interface Guest {\r\n    id: number;             // id = 0\r\n    guest: number;\r\n    token: string;\r\n}\r\n\r\nexport interface User extends Guest {\r\n    id: number;\r\n    name: string;\r\n    nick?: string;\r\n    icon?: string;\r\n}\r\n\r\n/*\r\nexport class UserInNav {\r\n    private user: User;\r\n    constructor(user: User) {\r\n        this.user = user;\r\n    }\r\n    get id():number {return this.user.id}\r\n    get name(): string {return this.user.name}\r\n    get nick(): string {return this.user.nick}\r\n    get icon(): string {return this.user.icon || ('http://' + process.env['REACT_APP_CENTER_HOST'] + '/imgs/Bear-icon.png');}\r\n    get guest(): number {return this.user.guest}\r\n    get token(): string {return this.user.token}\r\n}\r\n*/\r\nexport function decodeUserToken(token: string): User {\r\n    let ret:any = jwtDecode(token);\r\n    let user: User = {\r\n        id: ret.id,\r\n        name: ret.name,\r\n        guest: ret.guest,\r\n        token: token,\r\n    };\r\n    return user;\r\n}\r\n\r\nexport function decodeGuestToken(token: string): Guest {\r\n    let ret:any = jwtDecode(token);\r\n    let guest: Guest = {\r\n        id: 0,\r\n        guest: ret.guest,\r\n        token: token,\r\n    };\r\n    return guest;\r\n}\r\n","import * as React from 'react';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { Rule, FieldRule } from '../form/rules';\r\n\r\nexport abstract class ItemEdit {\r\n    protected name: string;\r\n    protected itemSchema: ItemSchema;\r\n    protected uiItem:UiItem;\r\n    protected value: any;\r\n    protected label: string;\r\n\r\n    @observable protected error: string;\r\n    @observable protected isChanged: boolean = false;\r\n    protected newValue: any;\r\n\r\n    constructor(itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any) {\r\n        this.itemSchema = itemSchema;\r\n        this.uiItem = uiItem\r\n        this.value = value;\r\n        let {name} = itemSchema;\r\n        this.name = name;\r\n        this.label = label;\r\n    }\r\n    async start():Promise<any> {\r\n        return await this.internalStart();\r\n    }\r\n\r\n    protected abstract internalStart():Promise<any>;\r\n\r\n    async end():Promise<any> {\r\n        await this.internalEnd()\r\n    }\r\n\r\n    protected async internalEnd():Promise<void> {nav.pop()}\r\n\r\n    protected verifyValue() {\r\n        if (this.uiItem === undefined) return;\r\n        let {rules} = this.uiItem;\r\n        if (rules === undefined) return;\r\n        let nv = this.newValue;\r\n        function verifyRule(rule:FieldRule, value: any):string {\r\n            let error = rule(nv);\r\n            if (error !== undefined) {\r\n                if (typeof error !== 'object')\r\n                    return error;\r\n                else\r\n                    return JSON.stringify(error);\r\n            }\r\n        }\r\n        if (Array.isArray(rules)) {\r\n            for (let rule of rules) {\r\n                let error = verifyRule(rule as FieldRule, nv);\r\n                if (error !== undefined) {\r\n                    this.error = error;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.error = verifyRule(rules as FieldRule, nv);\r\n        }\r\n    }\r\n}\r\n","export * from './form';\r\nexport * from './multiStep';","import * as React from 'react';\r\nimport { Page, SearchBox, List, Muted, LMR } from '../../../ui';\r\nimport { Tuid, Entity } from '../../uqs';\r\nimport { CLink } from '../link';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CTuidMain, TuidUI } from './cTuid';\r\n\r\nexport class VTuidMain extends VEntity<Tuid, TuidUI, CTuidMain> {\r\n    protected controller: CTuidMain;\r\n    onNew = () => this.event('new');\r\n    onList = () => this.event('list');\r\n    onSearch = async (key:string) => this.event('list', key);\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected entityRender(link: CLink, index: number): JSX.Element {\r\n        return link.render();\r\n    }\r\n\r\n    protected async entityClick(link: CLink) {\r\n        await link.onClick();\r\n    }\r\n\r\n    protected get view() {\r\n        let {label, isImport} = this.controller;\r\n        let newButton:any;\r\n        if (isImport === false) newButton = <button className=\"btn btn-outline-success ml-2\" onClick={this.onNew}>新增</button>;\r\n        let right = <>\r\n            {newButton}\r\n            <button className=\"btn btn-outline-info ml-2\" onClick={this.onList}>全部</button>\r\n        </>;\r\n        let content = <LMR className='m-3' right={right}>\r\n            <SearchBox className=\"w-100\" size=\"md\"\r\n                onSearch={this.onSearch} \r\n                placeholder={'搜索'+label} />\r\n        </LMR>;\r\n        return () => <Page header={label}>\r\n            {content}\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Page, FA } from '../../../ui';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CTuidMain, TuidUI } from './cTuid';\r\nimport { Tuid } from '../../uqs';\r\n\r\nexport type TypeVTuidEdit = typeof VTuidEdit;\r\n\r\nexport class VTuidEdit extends VEntity<Tuid, TuidUI, CTuidMain> {\r\n    private vForm: VForm;\r\n    private id: number;\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        if (param !== undefined) {\r\n            this.id = param.id;\r\n        }\r\n        this.openPage(this.editView);\r\n    }\r\n\r\n    protected get editView() {\r\n        return () => <Page header={(this.id===undefined? '新增':'编辑') + ' - ' + this.label}>\r\n            {this.vForm.render('py-3')}\r\n        </Page>;\r\n    }\r\n\r\n    protected next = async () => {\r\n        this.vForm.reset();\r\n        this.closePage();\r\n    }\r\n\r\n    protected finish = () => {\r\n        this.closePage(2);\r\n        this.event('edit-end');\r\n    }\r\n\r\n    protected resetForm() {\r\n        this.vForm.reset();\r\n    }\r\n\r\n    protected onSubmit = async () => {\r\n        let values = this.vForm.getValues();\r\n        let ret = await this.controller.entity.save(this.id, values);\r\n        let {id} = ret;\r\n        if (id < 0) {\r\n            let {unique} = this.controller.entity;\r\n            if (unique !== undefined) {\r\n                for (let u of unique) {\r\n                    this.vForm.setError(u, '不能重复');\r\n                }\r\n            }\r\n            return;\r\n        }\r\n        if (this.controller.isCalling) {\r\n            this.returnCall(id);\r\n            this.closePage();\r\n            return;\r\n        }\r\n        this.openPageElement(<Page header={this.label + '提交成功'} back=\"none\">\r\n            <div className='m-3'>\r\n                <span className=\"text-success\">\r\n                    <FA name='check-circle' size='lg' /> 成功提交！\r\n                </span>\r\n                <div className='mt-5'>\r\n                    <button className=\"btn btn-primary mr-3\" onClick={this.next}>继续录入</button>\r\n                    <button className=\"btn btn-outline-primary\" onClick={this.finish}>不继续</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n\r\n        this.event('item-changed', {id: this.id, values: values});\r\n        return;\r\n    }\r\n\r\n    //protected view = TuidNewPage;\r\n}\r\n/*\r\nconst TuidNewPage = observer(({vm}:{vm:VmTuidEdit}) => {\r\n    let {label, id, vmForm} = vm;\r\n    return <Page header={(id===undefined? '新增':'编辑') + ' - ' + label}>\r\n        {vmForm.render('mx-3 my-2')}\r\n    </Page>;\r\n});\r\n*/","import { nav, Page, SearchBox, List } from '../../../ui';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Tuid } from '../../uqs';\r\nimport { CTuid, TuidUI } from './cTuid';\r\nimport React from 'react';\r\nimport { RowContent } from '../form/viewModel';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class VTuidSelect extends VEntity<Tuid, TuidUI, CTuid<Tuid>> {\r\n    protected mainRowContent: (row:any) => JSX.Element;\r\n    protected divRowContent: (row:any) => JSX.Element;\r\n\r\n    async open(param?:any): Promise<void> {\r\n        if (param === undefined)\r\n            await this.showMain(param);\r\n        else\r\n            await this.showDiv(param);\r\n    }\r\n\r\n    private async showMain(param) {\r\n        this.mainRowContent = this.ui.rowContent || RowContent;\r\n        await this.controller.searchMain(param);\r\n        this.openPage(this.mainView);\r\n    }\r\n\r\n    private async showDiv(ownerValue: any) {\r\n        let {divs} = this.ui;\r\n        if (divs !== undefined) {\r\n            this.divRowContent = divs[this.entity.name].rowContent;\r\n        }\r\n        if (this.divRowContent === undefined) {\r\n            this.divRowContent = RowContent;\r\n        }\r\n        let divItems = await this.controller.getDivItems(ownerValue);\r\n        this.openPage(this.divView, {items: divItems});\r\n    }\r\n\r\n    protected mainView = observer(() => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearchMain} placeholder={'搜索'+this.label} />;\r\n        return <Page header={header} back=\"close\">\r\n            <List\r\n                items={this.controller.PageItems.items}\r\n                item={{render: this.renderMainRow, onClick: this.clickMainRow}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    });\r\n\r\n    onSearchMain = async (key:string) => {\r\n        await this.controller.searchMain(key);\r\n        //await this.PageItems.first(key);\r\n    }\r\n    renderMainRow = (item:any, index:number):JSX.Element => <this.mainRowContent {...item} />;\r\n    clickMainRow = async (item:any) => {\r\n        this.ceasePage();\r\n        if (this.controller.entity.hasDiv === undefined) {\r\n            this.returnCall(item);\r\n            return;\r\n        }\r\n        await this.showDiv(this.entity.getIdFromObj(item));\r\n    }\r\n\r\n    protected divView = (param:any) => {\r\n        return <Page header=\"选择Div\">\r\n            <List\r\n                items={param.items}\r\n                item={{render: this.renderDivRow, onClick: this.clickDivRow}} />\r\n        </Page>;\r\n    }\r\n    renderDivRow = (item:any, index:number):JSX.Element => <this.divRowContent {...item} />;\r\n    clickDivRow = (item:any) => {\r\n        this.ceasePage();\r\n        this.returnCall(item);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { FA, Page } from '../../../ui';\r\nimport { jsonStringify } from '../../tools';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Tuid } from '../../uqs';\r\nimport { TuidUI, CTuidMain } from './cTuid';\r\n\r\nexport type TypeVTuidView = typeof VTuidView;\r\n\r\nexport class VTuidView extends VEntity<Tuid, TuidUI, CTuidMain> {\r\n    vForm: VForm;\r\n    id: number;\r\n\r\n    protected buildForm(param:any) {\r\n        this.vForm = this.createForm(undefined, param);\r\n    }\r\n\r\n    async open(param:any) {\r\n        this.buildForm(param);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    render(param:any) {\r\n        this.buildForm(param);\r\n        return this.vForm.render();\r\n    }\r\n\r\n    async loadId(id: number) {\r\n        this.id = id;\r\n    }\r\n\r\n    protected next = async () => {\r\n        this.vForm.reset();\r\n        this.closePage();\r\n    }\r\n\r\n    protected finish = () => {\r\n        this.closePage(2);\r\n    }\r\n\r\n    protected resetForm() {\r\n        this.vForm.reset();\r\n    }\r\n\r\n    protected onSubmit = async () => {\r\n        let values = this.vForm.getValues();\r\n        let ret = await this.entity.save(this.id, values);\r\n        if (ret) {\r\n            alert('这里还要判断返回值，先不处理了 \\n' + jsonStringify(ret));\r\n        }\r\n        this.openPage(() => <Page header={this.label + '提交成功'} back=\"none\">\r\n            <div className='m-3'>\r\n                <span className=\"text-success\">\r\n                    <FA name='check-circle' size='lg' /> 成功提交！\r\n                </span>\r\n                <div className='mt-5'>\r\n                    <button className=\"btn btn-primary mr-3\" onClick={this.next}>继续录入</button>\r\n                    <button className=\"btn btn-outline-primary\" onClick={this.finish}>不继续</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n        return;\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n            {this.vForm.render('py-3')}\r\n    </Page>;\r\n}\r\n","import React from 'react';\r\nimport { VTuidView } from './vTuidView';\r\n\r\nexport class VTuidInfo  extends VTuidView {\r\n/*\r\n    async open(param?:any) {\r\n        this.open(this.view);\r\n    }\r\n*/\r\n/*\r\n    private view = () => {\r\n        return <Page>\r\n            TuidInfo\r\n        </Page>\r\n    }\r\n*/\r\n}\r\n","import { PageItems } from '../../../pageItems';\r\nimport { Tuid } from '../../uqs';\r\n\r\nexport class TuidPageItems<T> extends PageItems<T> {\r\n    private tuid: Tuid;\r\n    constructor(tuid: Tuid) {\r\n        super(true);\r\n        this.tuid = tuid;\r\n    }\r\n    protected async load(param:any, pageStart:any, pageSize:number):Promise<any[]> {\r\n        let ret = await this.tuid.search(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:any) {\r\n        this.pageStart = item === undefined? 0 : item.id;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { FA, SearchBox, List, Page, VPage } from '../../../ui';\r\nimport { jsonStringify } from '../../tools';\r\nimport { Tuid, TuidDiv } from '../../uqs';\r\nimport { VEntity } from '../CVEntity';\r\nimport { TuidUI, CTuidMain, CTuidDiv } from './cTuid';\r\nimport { JSONContent, RowContent } from '../form/viewModel';\r\n\r\nexport abstract class VTuidListBase  extends VEntity<Tuid, TuidUI, CTuidMain> {\r\n    protected rowContent: (row:any) => JSX.Element;\r\n    protected ownerId: number;\r\n\r\n    async open(param?:any) {\r\n        this.rowContent = this.ui.rowContent || RowContent;\r\n        //if (this.entity.owner !== undefined) \r\n        this.ownerId = Number(param);\r\n        // 初始查询, key是空的\r\n        //await this.onSearch('');\r\n        await this.controller.searchMain('');\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSearch = async (key:string) => {\r\n        await this.controller.searchMain(key);\r\n        //await this.PageItems.first(key);\r\n    }\r\n    renderRow = (item:any, index:number):JSX.Element => <this.rowContent {...item} />;\r\n\r\n    protected abstract onSelected(item:any): Promise<void>;\r\n    private callOnSelected(item:any) {\r\n        if (this.onSelected === undefined) {\r\n            alert('onSelect is undefined');\r\n            return;\r\n        }\r\n        this.onSelected(item);\r\n    }\r\n    clickRow = (item:any) => {\r\n        this.callOnSelected(item);\r\n    }\r\n    private rowKey = (item:any) => {\r\n        let {id} = item;\r\n        return id;\r\n    }\r\n    protected view = observer(() => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\r\n        /*\r\n        let {owner} = this.entity;\r\n        let ownerTop;\r\n        if (owner !== undefined) {\r\n            let ownerObj = owner.valueFromId(this.ownerId);\r\n            ownerTop = <div>owner: {jsonStringify(ownerObj)}</div>;\r\n        }\r\n        */\r\n        return <Page header={header}>\r\n            {/*ownerTop*/}\r\n            <List\r\n                items={this.controller.PageItems.items}\r\n                item={{render: this.renderRow, onClick: this.clickRow, key:this.rowKey}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    });\r\n}\r\n\r\nexport class VTuidList extends VTuidListBase {\r\n    protected async onSelected(item:any) {\r\n        if (this.controller.isImport === false)\r\n            this.event('edit', item.id);\r\n        else\r\n            this.event('info', item.id);\r\n    }\r\n}\r\n/*\r\nexport abstract class VTuidDivListBase  extends VPage<CTuidDiv> {\r\n    protected ownerId: number;\r\n\r\n    async open(param?:any) {\r\n        //this.PageItems = new TuidPageItems(this.entity);\r\n        if (this.entity.owner !== undefined) this.ownerId = Number(param);\r\n        // 初始查询, key是空的\r\n        //await this.onSearch('');\r\n        await this.controller.searchMain('');\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSearch = async (key:string) => {\r\n        await this.controller.searchMain(key);\r\n        //await this.PageItems.first(key);\r\n    }\r\n    renderRow = (item:any, index:number):JSX.Element => {\r\n        return <div className=\"px-3 py-2\">{jsonStringify(item)}</div>;\r\n    }\r\n\r\n    protected abstract onSelected(item:any): Promise<void>;\r\n    private callOnSelected(item:any) {\r\n        if (this.onSelected === undefined) {\r\n            alert('onSelect is undefined');\r\n            return;\r\n        }\r\n        this.onSelected(item);\r\n    }\r\n    clickRow = (item:any) => {\r\n        this.callOnSelected(item);\r\n    }\r\n\r\n    protected view = observer(() => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\r\n        let {owner} = this.entity;\r\n        let ownerTop;\r\n        if (owner !== undefined) {\r\n            let ownerObj = owner.valueFromId(this.ownerId);\r\n            ownerTop = <div>owner: {jsonStringify(ownerObj)}</div>;\r\n        }\r\n        return <Page header={header}>\r\n            {ownerTop}\r\n            <List\r\n                items={this.controller.PageItems.items}\r\n                item={{render: this.renderRow, onClick: this.clickRow}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    });\r\n}\r\n\r\nexport class VTuidDivList extends VTuidDivListBase {\r\n    protected async onSelected(item:any) {\r\n        this.event('edit', item.id);\r\n    }\r\n}\r\n*/","import _ from 'lodash';\r\nimport { CEntity, EntityUI } from '../CVEntity';\r\nimport { Tuid, TuidDiv } from '../../uqs';\r\nimport { VTuidMain } from './vTuidMain';\r\nimport { VTuidEdit } from './vTuidEdit';\r\nimport { VTuidSelect } from './vTuidSelect';\r\nimport { CUq } from '../cUq/cUq';\r\n//import { CLink } from '../link';\r\nimport { VTuidInfo } from './vTuidInfo';\r\nimport { TuidPageItems } from './pageItems';\r\nimport { VTuidList } from './vTuidList';\r\nimport { PageItems } from '../../../pageItems';\r\n//import { Controller } from 'ui';\r\n\r\nexport interface TuidUI extends EntityUI {\r\n    CTuidMain?: typeof CTuidMain;\r\n    CTuidEdit?: typeof CTuidEdit;\r\n    CTuidList?: typeof CTuidList;\r\n\r\n    CTuidSelect?: typeof CTuidSelect;\r\n    CTuidInfo?: typeof CTuidInfo;\r\n    content?: React.StatelessComponent<any>;\r\n    rowContent?: React.StatelessComponent<any>;\r\n    divs?: {\r\n        [div:string]: {\r\n            CTuidSelect?: typeof CTuidSelect;\r\n            content?: React.StatelessComponent<any>;\r\n            rowContent?: React.StatelessComponent<any>;\r\n        }\r\n    }\r\n}\r\n\r\nexport abstract class CTuid<T extends Tuid> extends CEntity<T, TuidUI> {\r\n    PageItems:PageItems<any>;\r\n\r\n    protected buildPageItems():PageItems<any> {\r\n        return new TuidPageItems(this.entity);\r\n    }\r\n\r\n    async searchMain(key:string) {\r\n        if (this.PageItems === undefined) {\r\n            this.PageItems = this.buildPageItems();\r\n        }\r\n        if (key !== undefined) await this.PageItems.first(key);\r\n    }\r\n\r\n    async getDivItems(ownerId:number):Promise<any[]> {\r\n        let ret = await this.entity.searchArr(ownerId, undefined, 0, 1000);\r\n        return ret;\r\n    }\r\n}\r\n\r\nexport abstract class CTuidBase extends CTuid<Tuid> {\r\n    constructor(cUq: CUq, entity:Tuid, ui: TuidUI, res:any) {\r\n        super(cUq, entity, ui, res);\r\n    }\r\n    \r\n    from():CTuidBase {\r\n        let ret = this; // this.entity.cFrom();\r\n        if (ret === undefined) return this;\r\n        return ret;\r\n    }\r\n\r\n    cUqFrom():CUq {\r\n        return this.cUq; // this.entity.cUqFrom();\r\n    }\r\n    cEditFrom(): CTuidEdit {\r\n        let cUq = this.cUq; // this.entity.cUqFrom();\r\n        return cUq.cTuidEditFromName(this.entity.name);\r\n    }\r\n    cInfoFrom(): CTuidInfo {\r\n        let cUq = this.cUq; // this.entity.cUqFrom();\r\n        return cUq.cTuidInfoFromName(this.entity.name);\r\n    }\r\n    cSelectFrom(): CTuidSelect {\r\n        let cUq = this.cUq;// this.entity.cUqFrom();\r\n        return cUq.cTuidSelectFromName(this.entity.name);\r\n    }\r\n\r\n    getLable(tuid:Tuid):string {\r\n        if (tuid === this.entity) return this.label;\r\n        let {name} = tuid;\r\n        let {arrs} = this.res;\r\n        if (arrs !== undefined) {\r\n            let arr = arrs[name];\r\n            if (arr !== undefined) {\r\n                let label = arr.label;\r\n                if (label !== undefined) return label;\r\n            }\r\n        }\r\n        return name;\r\n    }\r\n\r\n    isImport: boolean;\r\n\r\n    protected get VTuidMain():typeof VTuidMain {return VTuidMain}\r\n    protected get VTuidEdit():typeof VTuidEdit {return VTuidEdit}\r\n    protected get VTuidList():typeof VTuidList {return VTuidList}\r\n\r\n    protected async internalStart(param?:any):Promise<void> {\r\n        this.isImport = this.entity.isImport;\r\n        await this.openVPage(this.VTuidMain);\r\n    }\r\n\r\n    protected async onEvent(type:string, value:any) {\r\n        //let v: TypeVPage<CTuidMain>;\r\n        switch (type) {\r\n            default: return;\r\n            case 'new': await this.onNew(); break;\r\n            case 'list': await this.onList(); break;\r\n            case 'edit': await this.onEdit(value); return;\r\n            case 'item-changed': this.itemChanged(value); return;\r\n            case 'info': \r\n                let cTuidInfo = new CTuidInfo(this.cUq, this.entity, this.ui, this.res);\r\n                await cTuidInfo.start(value);\r\n                return;\r\n        }\r\n        //await this.openVPage(v, value);\r\n    }\r\n\r\n    protected async edit(values:any) {\r\n        let cTuidEdit = this.ui && this.ui.CTuidEdit;\r\n        if (cTuidEdit === undefined) {\r\n            await this.openVPage(this.VTuidEdit, values);\r\n        }\r\n        else {\r\n            await (new cTuidEdit(this.cUq, this.entity, this.ui, this.res)).start(values);\r\n        }\r\n    }\r\n\r\n    private async onNew() {\r\n        await this.edit(undefined);\r\n    }\r\n\r\n    private async onList() {\r\n        let cTuidList = this.ui && this.ui.CTuidList;\r\n        if (cTuidList === undefined) {\r\n            await this.openVPage(this.VTuidList, undefined);\r\n        }\r\n        else {\r\n            await (new cTuidList(this.cUq, this.entity, this.ui, this.res)).start(undefined);\r\n        }\r\n    }\r\n\r\n    protected async onEdit(id:number) {\r\n        let values:any = undefined;\r\n        if (id !== undefined) {\r\n            values = await this.entity.load(id);\r\n        }\r\n        this.edit(values);\r\n        //await this.openVPage(this.VTuidEdit, values);\r\n    }\r\n\r\n    private itemChanged({id, values}:{id:number, values: any}) {\r\n        if (this.PageItems === undefined) return;\r\n        let items = this.PageItems.items;\r\n        let item = items.find(v => v.id === id);\r\n        if (item !== undefined) {\r\n            _.merge(item, values);\r\n        }\r\n    }\r\n}\r\n\r\nexport class CTuidMain extends CTuidBase {\r\n    protected async internalStart(param?:any):Promise<void> {\r\n        this.isImport = this.entity.isImport;\r\n        await this.openVPage(this.VTuidMain);\r\n    }\r\n\r\n}\r\n\r\nexport class CTuidEdit extends CTuidBase {\r\n    protected async internalStart(id:number):Promise<void> {\r\n        this.isImport = this.entity.isImport;\r\n        if (typeof(id) === 'number') {\r\n            await this.onEdit(id);\r\n        }\r\n        else {\r\n            await this.edit(id);\r\n        }\r\n    }\r\n\r\n    protected async edit(values:any) {\r\n        await this.openVPage(this.VTuidEdit, values);\r\n    }\r\n}\r\n\r\nexport class CTuidList extends CTuidBase {\r\n    protected async internalStart(id:number):Promise<void> {\r\n        this.isImport = this.entity.isImport;\r\n        await this.openVPage(this.VTuidList);\r\n    }\r\n}\r\n\r\nexport class CTuidDiv extends CTuid<Tuid> {\r\n    protected async internalStart():Promise<void> {\r\n        alert('tuid div: ' + '??');\r\n    }\r\n}\r\n\r\nexport class CTuidSelect extends CTuid<Tuid> {\r\n    protected async internalStart(param?: any):Promise<void> {\r\n        await this.openVPage(this.VTuidSelect, param);\r\n    }\r\n    protected async beforeStart():Promise<boolean> {\r\n        //if (await super.beforeStart() === false) return false;\r\n        await this.entity.loadSchema();\r\n        if (this.PageItems !== undefined) this.PageItems.reset();\r\n        return true;\r\n    }\r\n    protected get VTuidSelect():typeof VTuidSelect {return VTuidSelect}\r\n    idFromItem(item:any) {\r\n        return item.id;\r\n    }\r\n}\r\n\r\nexport class CTuidInfo extends CTuid<Tuid> {\r\n    protected async internalStart(id: any):Promise<void> {\r\n        let data = await this.entity.load(id)\r\n        await this.openVPage(this.VTuidInfo, data);\r\n    }\r\n    protected get VTuidInfo():typeof VTuidInfo {return VTuidInfo}\r\n}\r\n","export * from './cTuid';\r\nexport * from './vTuidMain';\r\nexport * from './vTuidEdit';\r\nexport * from './vTuidInfo';\r\nexport * from './vTuidView';\r\nexport * from './vTuidSelect';\r\n","import * as React from 'react';\r\nimport { VField } from './vField';\r\nimport { VArr } from './vArr';\r\nimport { VSubmit } from './vSubmit';\r\n\r\nexport abstract class VBand {\r\n    protected label: string;\r\n    protected view = () => <div />;\r\n\r\n    constructor(label:string) {\r\n        this.label = label;\r\n    }\r\n\r\n    render():JSX.Element {\r\n        //text-sm-right\r\n        return <div key={this.key} className=\"px-3\">\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-sm-2 col-form-label\">\r\n                    {this.label}\r\n                </label>\r\n                <div className=\"col-sm-10\">\r\n                    {this.renderContent()}\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    setAddRow(addRow:()=>Promise<void>) {}\r\n    get key() {return this.label}\r\n    public getVFields():VField[] {return;}\r\n    public getVArr():VArr {return;}\r\n    public getVSubmit():VSubmit {return;}\r\n\r\n    protected renderContent():JSX.Element {\r\n        return <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">content</div>;\r\n    }\r\n}\r\n\r\nexport interface FieldRes {\r\n    label: string;\r\n    placeHolder: string;\r\n    suffix: string;\r\n}\r\nexport class VFieldBand extends VBand {\r\n    protected vField:VField;\r\n    constructor(label:string, vField:VField) {\r\n        super(label);\r\n        this.vField = vField;\r\n    }\r\n\r\n    get key() {return this.vField.name}\r\n    public getVFields():VField[] {return [this.vField];}\r\n\r\n    protected renderContent():JSX.Element {\r\n        return this.vField.render();\r\n        /*\r\n        <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">\r\n            {this.vField.render()}\r\n        </div>;*/\r\n    }\r\n}\r\n\r\nexport class VArrBand extends VBand {\r\n    protected vArr:VArr;\r\n    constructor(label:string, vArr:VArr) {\r\n        super(label);\r\n        this.vArr = vArr;\r\n    }\r\n\r\n    setAddRow(addRow:()=>Promise<void>) {this.vArr.setAddRow(addRow)}\r\n    get key() {return this.vArr.name}\r\n    public getVArr():VArr {return this.vArr;}\r\n\r\n    render():JSX.Element {\r\n        return <React.Fragment key={this.key}>\r\n            {this.vArr && this.vArr.render()}\r\n        </React.Fragment>;\r\n    }\r\n}\r\n\r\nexport class VFieldsBand extends VBand {\r\n    protected vFields: VField[];\r\n    constructor(label:string, vFields:VField[]) {\r\n        super(label);\r\n        this.vFields = vFields;\r\n    }\r\n\r\n    get key() {return this.vFields[0].name}\r\n    public getVFields():VField[] {return this.vFields;}\r\n\r\n    protected renderContent():JSX.Element {\r\n        return <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">\r\n            fields\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class VSubmitBand extends VBand {\r\n    protected vSubmit: VSubmit;\r\n    constructor(vSubmit:VSubmit) {\r\n        super(undefined);\r\n        this.vSubmit = vSubmit;\r\n    }\r\n\r\n    get key() {return '$submit'}\r\n\r\n    public getVSubmit():VSubmit {return this.vSubmit;}\r\n\r\n    render():JSX.Element {\r\n        return <div key=\"$submit\" className=\"px-3\">\r\n            <div className=\"form-group row\">\r\n                <div className=\"offset-sm-2 col-sm-10\">\r\n                    {this.vSubmit.render()}\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames'\r\nimport { ViewModel } from './viewModel';\r\nimport { VForm } from './vForm';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\n\r\nexport class VSubmit extends ViewModel {\r\n    private vForm: VForm;\r\n    constructor(vForm: VForm) {\r\n        super();\r\n        this.vForm = vForm;\r\n        this.caption = this.vForm.submitCaption;\r\n        this.className = 'btn btn-primary w-25';\r\n    }\r\n    @observable caption: string;\r\n    @observable className: string;\r\n\r\n    private onClickSubmit = async () => {\r\n        this.vForm.submit();\r\n    }\r\n\r\n    protected view = observer(() => {\r\n        let {isOk} = this.vForm;\r\n        return <button type=\"button\" \r\n            onClick={this.onClickSubmit}\r\n            className={this.className}\r\n            disabled={isOk === false}>\r\n            {this.caption}\r\n        </button>;\r\n    });\r\n}","\r\nexport abstract class Rule {\r\n    abstract check(defy:string[], value:any);\r\n}\r\n\r\nexport class RuleRequired extends Rule {\r\n    check(defy:string[], value:any) {\r\n        switch (typeof value) {\r\n            default:\r\n            case 'boolean': return;\r\n            case 'object':\r\n                if (value !== null) return;\r\n                break;\r\n            case 'string':\r\n                if ((value as string).trim().length > 0) return;\r\n                break;\r\n            case 'number':\r\n                if ((value as number) !== NaN) return;\r\n                break;\r\n            case 'undefined':\r\n                break;\r\n        }\r\n        defy.push('不能为空');\r\n    }\r\n}\r\n\r\nexport class RuleNum extends Rule {\r\n    check(defy:string[], value:any) {\r\n        if (value === undefined || value === null) return;\r\n        let n = Number(value);\r\n        if (n === NaN) defy.push('必须是数字');\r\n    }\r\n}\r\n\r\nexport class RuleInt extends Rule {\r\n    check(defy:string[], value:any) {\r\n        if (value === undefined || value === null) return;\r\n        let n = Number(value);\r\n        if (Number.isNaN(n) === true || Number.isInteger(n) === false) {\r\n            defy.push('必须是整数');\r\n        }\r\n    }\r\n}\r\n\r\nexport class RuleMin extends RuleNum {\r\n    constructor(min: number) {\r\n        super();\r\n        this.min = min;\r\n    }\r\n    min: number;\r\n    check(defy:string[], value:any) {\r\n        super.check(defy, value);\r\n        if (Number(value) < this.min) defy.push('不能小于' + this.min);\r\n    }\r\n}\r\n\r\nexport class RuleMax extends RuleNum {\r\n    constructor(max: number) {\r\n        super();\r\n        this.max = max;\r\n    }\r\n    max: number;\r\n    check(defy:string[], value:any) {\r\n        super.check(defy, value);\r\n        if (Number(value) > this.max) defy.push('不能小于' + this.max);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { computed, action } from 'mobx';\r\nimport classNames from 'classnames';\r\nimport { observer } from 'mobx-react';\r\nimport { FA } from '../../../../ui';\r\nimport { ViewModel } from '../viewModel';\r\nimport { VForm, FormMode } from '../vForm';\r\nimport { Rule, RuleRequired, RuleInt, RuleNum, RuleMin, RuleMax } from '../rule';\r\nimport { Field } from '../../../uqs';\r\nimport { FieldRes } from '../vBand';\r\nimport { FieldUI, FieldInputUI, FieldStringUI, FieldNumberUI } from '../../formUI';\r\n\r\nexport abstract class VField extends ViewModel {\r\n    protected form: VForm;\r\n    protected fieldUI: FieldUI;\r\n    protected fieldRes:FieldRes;\r\n    protected field: Field;\r\n    protected rules: Rule[];\r\n    constructor(form:VForm, field:Field, fieldUI: FieldUI, fieldRes:FieldRes) {\r\n        super();\r\n        this.form = form;\r\n        this.field = field;\r\n        this.name = field.name;\r\n        this.fieldUI = fieldUI || {} as any;\r\n        this.fieldRes = fieldRes || {} as any;\r\n        this.init();\r\n    }\r\n\r\n    name: string;\r\n\r\n    protected init() {\r\n        this.buildRules();\r\n    }\r\n\r\n    protected buildRules() {\r\n        this.rules = [];\r\n        let {required} = this.fieldUI;\r\n        if (required === true || this.field !== undefined && this.field.null === false) {\r\n            this.rules.push(new RuleRequired);\r\n        }\r\n    }\r\n\r\n    @computed get checkRules(): string[] {\r\n        let defy = [];\r\n        for (let r of this.rules) r.check(defy, this.value);\r\n        return defy;\r\n    }\r\n\r\n    @computed get isOk() {\r\n        if (this.rules.length === 0) return true;\r\n        let defy = this.checkRules;\r\n        return defy.length === 0;\r\n    }\r\n\r\n    @computed get value() { return this.form.values[this.name]; }\r\n    setValue(v:any) {\r\n        this.form.values[this.name]=v; \r\n    }\r\n    get error() { return this.form.errors[this.name]; }\r\n    set error(err:any) { this.form.errors[this.name]=err; }\r\n    protected parse(str:string):any {return str;}\r\n    get readonly():boolean {\r\n        let {mode} = this.form;\r\n        return mode === FormMode.readonly || \r\n            mode === FormMode.edit && this.fieldUI.editable === false;\r\n    }\r\n}\r\n\r\nexport class VUnknownField extends VField {\r\n    protected view = () => {\r\n        //let {name, type} = this.fieldUI;\r\n        let type='', name = '';\r\n        return <input type=\"text\" className=\"form-control form-control-plaintext border border-info rounded bg-light\"\r\n            placeholder={'unkown control: ' + type + '-' + name} />;\r\n    }\r\n}\r\n\r\nexport abstract class VInputControl extends VField {\r\n    protected fieldUI: FieldInputUI;\r\n    protected input: HTMLInputElement;\r\n\r\n    protected inputType:string;\r\n    protected get maxLength():number {return}\r\n\r\n    protected renderError = (className:string) => {\r\n        let {errors} = this.form;\r\n        let error = errors[this.name];\r\n        if (error === undefined) return;\r\n        return <div className={className}><FA name=\"exclamation-circle\" /> {error}</div>\r\n    }\r\n\r\n    /*\r\n    get value() {\r\n        return super.value;\r\n    }*/\r\n    setValue(v:any) {\r\n        super.setValue(v); this.setInputValue(); \r\n    }\r\n\r\n    protected ref = (input:HTMLInputElement) => {\r\n        this.input = input;\r\n        this.setInputValue();\r\n    }\r\n\r\n    protected setInputValue() {\r\n        if (!this.input) return;\r\n        let v = this.value;\r\n        this.input.value = v === null || v === undefined? '' : v;\r\n    }\r\n\r\n    protected onFocus = () => {\r\n        this.error = undefined;\r\n    }\r\n\r\n    protected onBlur = () => {\r\n        let defy = this.checkRules;\r\n        if (defy.length > 0) {\r\n            this.error = defy[0];\r\n        }\r\n        this.form.computeFields();\r\n    }\r\n\r\n    protected onChange = (evt: React.ChangeEvent<any>) => {\r\n        let v = this.parse(evt.currentTarget.value);\r\n        if (v === null) {\r\n            return;\r\n        }\r\n        this.setValue(v);\r\n    }\r\n\r\n    protected onKeyPress: (event:React.KeyboardEvent<HTMLInputElement>) => void;\r\n    \r\n    protected view = observer(() => {\r\n        let {required} = this.fieldUI;\r\n        let {placeHolder, suffix} = this.fieldRes;\r\n        let ctrlCN = ['form-control', 'form-control-input'];\r\n        let errCN = 'text-danger small mt-1 mx-2';\r\n    \r\n        let redDot;\r\n        let input;\r\n        if (this.readonly === true) {\r\n            input = <input className={classNames(ctrlCN, 'bg-light')}\r\n                ref={this.ref}\r\n                type={this.inputType}\r\n                readOnly={true}\r\n            />;\r\n        }\r\n        else {\r\n            input = <input className={classNames(ctrlCN)}\r\n                ref={this.ref}\r\n                type={this.inputType}\r\n                onFocus={this.onFocus}\r\n                onBlur={this.onBlur}\r\n                onChange={this.onChange}\r\n                placeholder={placeHolder}\r\n                readOnly={false}\r\n                maxLength={this.maxLength}\r\n                onKeyPress={this.onKeyPress}\r\n            />;\r\n            if (required === true || this.field.null === false) {\r\n                redDot = <RedMark />;\r\n            }\r\n        }\r\n\r\n        let inputGroup;\r\n        if (suffix === undefined)\r\n            inputGroup = input;\r\n        else\r\n            inputGroup = <div className=\"input-group\">\r\n                {input}\r\n                <div className=\"input-group-append\">\r\n                    <span className=\"input-group-text\">{suffix}</span>\r\n                </div>\r\n            </div>;\r\n\r\n        return <>\r\n            {redDot}\r\n            {inputGroup}\r\n            {this.renderError(errCN)}\r\n        </>\r\n    });\r\n}\r\n\r\nexport const RedMark = () => <b style={{color:'red', position:'absolute', left:'0.1em', top:'0.5em'}}>*</b>;\r\n\r\nexport class VStringField extends VInputControl {\r\n    protected fieldUI: FieldStringUI;\r\n    protected inputType:string = 'text';\r\n    protected get maxLength():number {return this.field.size}\r\n}\r\n\r\nconst KeyCode_Neg = 45;\r\nconst KeyCode_Dot = 46;\r\n\r\nexport abstract class VNumberControl extends VInputControl {\r\n    protected fieldUI: FieldNumberUI;\r\n    protected extraChars: number[];\r\n\r\n    protected init() {\r\n        super.init();\r\n        this.extraChars = [];\r\n        if (this.fieldUI !== undefined) {\r\n            let {min, max} = this.fieldUI;\r\n            if (min !== undefined) {\r\n                //this.rules.push((v:number) => {if (v === undefined) return; if (v<min) return ErrMin + min; return true;});\r\n                if (min < 0) this.extraChars.push(KeyCode_Neg);\r\n            }\r\n            else {\r\n                this.extraChars.push(KeyCode_Neg);\r\n            }\r\n    \r\n            if (max !== undefined) {\r\n                //this.rules.push((v:number) => {if (v === undefined) return; if (v>max) return ErrMax + max; return true});\r\n            }\r\n        }\r\n        switch (this.field.type) {\r\n            case 'dec':\r\n            case 'bigint':\r\n            case 'int':\r\n            case 'smallint':\r\n            case 'tinyint':\r\n                this.extraChars.push(KeyCode_Dot); break;\r\n        }\r\n    }\r\n\r\n    protected buildRules() {\r\n        super.buildRules();\r\n        this.rules.push(new RuleNum);\r\n        let {min, max} = this.fieldUI;\r\n        if (min !== undefined) this.rules.push(new RuleMin(min));\r\n        if (max !== undefined) this.rules.push(new RuleMax(max));\r\n    }\r\n\r\n    inputType:string = 'number';\r\n\r\n    protected parse(text:string):any {\r\n        try {\r\n            if (text.trim().length === 0) return undefined;\r\n            let ret = Number(text);\r\n            return (ret === NaN)? null : ret;\r\n        }\r\n        catch {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    protected setInputValue() {\r\n        if (!this.input) return;\r\n        let v = this.value;\r\n        if (this.parse(this.input.value) == v) return;\r\n        this.input.value = v === null || v === undefined? '' : v;\r\n    }\r\n\r\n    protected onKeyPress = (event:React.KeyboardEvent<HTMLInputElement>) => {\r\n        let ch = event.charCode;\r\n        if (ch === 8 || ch === 0 || ch === 13 || ch >= 48 && ch <= 57) return;\r\n        if (this.extraChars !== undefined) {\r\n            if (this.extraChars.indexOf(ch) >= 0) {\r\n                switch (ch) {\r\n                    case KeyCode_Dot: this.onKeyDot(); break;\r\n                    case KeyCode_Neg: this.onKeyNeg(); event.preventDefault(); break;\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    private onKeyDot() {\r\n        let v = this.input.value;\r\n        let p = v.indexOf('.');\r\n        if (p >= 0) this.input.value = v.replace('.', '');\r\n    }\r\n    private onKeyNeg() {\r\n        let v = this.input.value;\r\n        let p = v.indexOf('-');\r\n        if (p >= 0) v = v.replace('-', '');\r\n        else v = '-'+v;\r\n        this.input.value = v;\r\n    }\r\n}\r\n\r\nexport class VIntField extends VNumberControl {\r\n    protected buildRules() {\r\n        super.buildRules();\r\n        this.rules.push(new RuleInt);\r\n    }\r\n}\r\n\r\nexport class VDecField extends VNumberControl {\r\n}\r\n\r\nexport class VTextField extends VStringField {\r\n\r\n}\r\n\r\nexport class VDateTimeField extends VStringField {\r\n\r\n}\r\n\r\nexport class VDateField extends VStringField {\r\n\r\n}\r\n","import React from 'react';\r\nimport { VField } from './vField';\r\nimport { Field } from '../../../uqs';\r\nimport { VForm } from '../vForm';\r\nimport { observer } from 'mobx-react';\r\nimport { FieldRes } from '../vBand';\r\n\r\nexport class VComputeField extends VField {\r\n    constructor(form:VForm, field: Field, fieldRes: FieldRes) {\r\n        super(form, field, undefined, fieldRes);\r\n    }\r\n    protected view = observer(() => {\r\n        let value = this.form.values[this.field.name];\r\n        let {placeHolder, suffix} = this.fieldRes;\r\n        let ctrlCN = 'form-control form-control-input bg-light';\r\n        if (value === null) value = '';\r\n        let input = <input className={ctrlCN}\r\n            type=\"text\"\r\n            placeholder={placeHolder}\r\n            readOnly={true}\r\n            value={value}/>\r\n        let inputGroup;\r\n        if (suffix === undefined)\r\n            inputGroup = input;\r\n        else\r\n            inputGroup = <div className=\"input-group\">\r\n                {input}\r\n                <div className=\"input-group-append\">\r\n                    <span className=\"input-group-text\">{suffix}</span>\r\n                </div>\r\n            </div>;\r\n        return inputGroup;\r\n        /*\r\n            return <div \r\n            className=\"form-control form-control-plaintext border border-info rounded bg-light cursor-pointer\">\r\n            {value} &nbsp;\r\n        </div>;\r\n        */\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { IObservableArray, observable } from 'mobx';\r\nimport _ from 'lodash';\r\nimport { Page, nav, List, FA, Muted } from '../../../ui';\r\nimport { ViewModel, RowContent, TypeContent, JSONContent } from './viewModel';\r\nimport { ArrFields, Field } from '../../uqs';\r\nimport { VForm, FieldInputs, FormMode } from './vForm';\r\nimport { FormArr } from '../formUI';\r\n\r\nexport type ArrEditRow = (initValues:any, onRowChanged:(rowValues:any)=>void) => Promise<void>;\r\n\r\nexport class VArr extends ViewModel {\r\n    protected mode: FormMode;\r\n    protected label: any;\r\n    protected header: any;\r\n    protected footer: any;\r\n    protected rowValues: any;                 // 仅仅用来判断是不是新增，undefined则是新增\r\n    protected onEditRow: ArrEditRow;\r\n    protected ownerForm:VForm;\r\n    protected vForm:VForm;\r\n    protected rowContent:TypeContent;\r\n    protected none: string;\r\n    protected newSubmitCaption: string;\r\n    protected editSubmitCaption: string;\r\n    protected addRow: ()=>Promise<void>;\r\n\r\n    name:string;\r\n    list: IObservableArray<any>;\r\n\r\n    constructor(ownerForm:VForm, arr:ArrFields, onEditRow?:ArrEditRow) {\r\n        super();\r\n        this.ownerForm = ownerForm;\r\n        let {name, fields} = arr;\r\n        this.name = name;\r\n        let {ui, res, mode, inputs, values} = ownerForm;\r\n        let arrsRes = res.arrs;\r\n        let arrRes = arrsRes !== undefined? arrsRes[name] : {};\r\n        let {label, none, newSubmit, editSubmit} = arrRes;\r\n        this.none = none || ownerForm.none;\r\n        this.newSubmitCaption = newSubmit || ownerForm.arrNewCaption;\r\n        this.editSubmitCaption = editSubmit || ownerForm.arrEditCaption;\r\n        this.label = label || name;\r\n        let arrUI = ((ui && ui.items[name]) || {}) as FormArr;\r\n        this.rowContent = arrUI.rowContent;// || JSONContent;\r\n        this.mode = mode;\r\n        if (this.onEditRow === undefined) {\r\n            this.vForm = new VForm({\r\n                fields: fields,\r\n                arrs: undefined,\r\n                ui: arrUI,\r\n                res: arrRes,\r\n                inputs: inputs[name] as FieldInputs,\r\n                none: ownerForm.none,\r\n                submitCaption: 'submit',\r\n                arrNewCaption: undefined,\r\n                arrEditCaption: undefined,\r\n                arrTitleNewButton: undefined,\r\n                mode: mode,\r\n            }, \r\n            mode===FormMode.readonly? undefined: this.onSubmit);\r\n        }\r\n        else {\r\n            this.onEditRow = onEditRow;\r\n        }\r\n        this.list = values[name];\r\n    }\r\n\r\n    reset() {\r\n        this.vForm.reset();\r\n        this.list.clear();\r\n    }\r\n\r\n    setAddRow(addRow:()=>Promise<void>) {\r\n        this.addRow = addRow;\r\n    }\r\n\r\n    protected rowPage = () => {\r\n        return <Page header={this.label} back=\"close\">\r\n            {this.vForm.render('py-3')}\r\n        </Page>\r\n    }\r\n    private onSubmit = async () => {\r\n        let {valueBoxs} = this.vForm;\r\n        await this.onRowChanged(valueBoxs);\r\n    }\r\n\r\n    private onRowChanged = async (rowValues:any) => {\r\n        if (this.rowValues === undefined) {\r\n            rowValues.$owner = this.ownerForm.values;\r\n            this.list.push(rowValues);\r\n            if (this.onEditRow === undefined)\r\n                this.vForm.reset();\r\n            else\r\n                await this.onEditRow(undefined, this.onRowChanged);\r\n        }\r\n        else {\r\n            _.merge(this.rowValues, rowValues);\r\n            if (this.onEditRow === undefined) nav.pop();\r\n        }\r\n    }\r\n\r\n    private renderItem = (item:any, index:number) => {\r\n        if (this.rowContent === undefined)\r\n            return <div className=\"px-3 py-2\"><JSONContent {...item} /></div>\r\n        return <this.rowContent {...item} />;\r\n    }\r\n    private showRow = async (rowValues:any):Promise<any> => {\r\n        if (this.onEditRow !== undefined) {\r\n            await this.onEditRow(rowValues, this.onRowChanged);\r\n            return;\r\n        }\r\n        this.vForm.reset();\r\n        if (rowValues !== undefined) this.vForm.setValues(rowValues);\r\n        nav.push(<this.rowPage />);\r\n    }\r\n    private editRow = async (rowValues:any): Promise<void> => {\r\n        this.rowValues = rowValues;\r\n        let {vSubmit} = this.vForm;\r\n        if (vSubmit !== undefined) {\r\n            vSubmit.caption = this.editSubmitCaption;\r\n            vSubmit.className = 'btn btn-outline-success';\r\n        }\r\n        this.vForm.mode = this.ownerForm.mode;\r\n        await this.showRow(rowValues);\r\n    }\r\n    private internalAddRow = async () => {\r\n        this.rowValues = undefined;\r\n        let {vSubmit} = this.vForm;\r\n        vSubmit.caption = this.newSubmitCaption;\r\n        vSubmit.className = 'btn btn-outline-success';\r\n        this.vForm.reset();\r\n        this.vForm.mode = FormMode.new;\r\n        await this.showRow(undefined);\r\n    }\r\n\r\n    protected view = () => {\r\n        let button;\r\n        if (this.addRow !== undefined || this.mode !== FormMode.readonly) {\r\n            button = <button onClick={this.addRow || this.internalAddRow}\r\n                type=\"button\" \r\n                className=\"btn btn-link p-0\">\r\n                {this.ownerForm.arrTitleNewButton}\r\n            </button>;\r\n        }\r\n        let header = this.header || <div className=\"px-3 bg-light small\" style={{paddingTop:'1px', paddingBottom:'1px'}}>\r\n            <div className=\"flex-fill align-self-center\">{this.label}</div>\r\n            {button}\r\n        </div>;\r\n        return <List className=\"pb-3\"\r\n            header={header}\r\n            none={<Muted className=\"px-3 py-2\">{this.none}</Muted>}\r\n            items={this.list}\r\n            item={{render: this.renderItem, onClick: this.editRow}} />;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { tv } from '../../../tools';\r\nimport { Field, Tuid, TuidBox } from '../../../uqs';\r\nimport { VField, RedMark } from './vField';\r\nimport { FieldUI } from '../../formUI';\r\nimport { VForm, FieldInput, FormMode } from '../vForm';\r\nimport { FieldRes } from '../vBand';\r\n\r\nconst buttonStyle:React.CSSProperties = {\r\n    textAlign:'left', \r\n    paddingLeft:'0.75rem', \r\n    paddingRight:'0.75rem', \r\n    overflow: 'hidden'\r\n};\r\n\r\nexport class VTuidField extends VField {\r\n    protected vForm: VForm;\r\n    protected input: FieldInput;\r\n    protected tuid: TuidBox;\r\n\r\n    constructor(vForm: VForm, field:Field, fieldUI: FieldUI, fieldRes:FieldRes) {\r\n        super(vForm, field, fieldUI, fieldRes);\r\n        this.tuid = field._tuid;\r\n        this.vForm = vForm;\r\n        this.input = vForm.inputs[field.name] as FieldInput;\r\n    }\r\n\r\n    onClick = async () => {\r\n        if (this.readonly === true) {\r\n            if (!this.value) return;\r\n            await this.tuid.showInfo(); //this.value.id);\r\n            return;\r\n        }\r\n        let id:number;\r\n        if (this.input !== undefined) {\r\n            id = await this.input.select(this.vForm, this.field, this.vForm.getValues());\r\n        }\r\n        else {\r\n            alert('call undefined');\r\n            id = 0;\r\n        }\r\n        this.setValue(this.tuid.boxId(id));\r\n    }\r\n    protected view = observer(() => {\r\n        let {placeHolder} = this.fieldRes;\r\n        let disabled:boolean = false;\r\n        //let {_ownerField} = this.field;\r\n        let {_tuid} = this.field;\r\n        let {ownerField} = _tuid;\r\n        if (ownerField !== undefined) {\r\n            let {name, arr} = ownerField;\r\n            disabled = this.vForm.getValue(name) === null;\r\n        }\r\n        let content;\r\n        if (this.value === null)\r\n            content = <>{placeHolder || this.input.placeHolder}</>;\r\n        else if (typeof this.value === 'object') {\r\n            content = tv(this.value);\r\n        }\r\n        else {\r\n            let idBox = this.tuid.boxId(this.value);\r\n            content = tv(idBox); // idBox.content();\r\n        }\r\n        if (this.readonly === true)\r\n        {\r\n            return <div \r\n                className=\"form-control form-control-plaintext border border-info rounded bg-light cursor-pointer\"\r\n                onClick={this.onClick}>\r\n                {content}\r\n            </div>;\r\n        }\r\n        let {required} = this.fieldUI;\r\n        let redDot = (required === true || this.field.null === false) && <RedMark />;\r\n        return <>\r\n            {redDot}\r\n            <button className=\"form-control btn btn-outline-info\"\r\n                type=\"button\"\r\n                disabled={disabled}\r\n                style={buttonStyle}\r\n                onClick={this.onClick}>\r\n                {content}\r\n            </button>\r\n        </>;\r\n    })\r\n}\r\n","import { VBand, VFieldBand, VArrBand, VFieldsBand, VSubmitBand, FieldRes } from './vBand';\r\nimport { Field, ArrFields } from '../../uqs';\r\nimport { VForm, FormOptions } from './vForm';\r\nimport { FormItems, FieldUI, FormItem } from '../formUI';\r\nimport { VSubmit } from './vSubmit';\r\nimport { VField, buildVField, VComputeField } from './vField';\r\nimport { VArr } from './vArr';\r\nimport { VTuidField } from './vField/vTuidField';\r\n\r\nexport class BandsBuilder {\r\n    private vForm: VForm;\r\n    private onSubmit: (values:any)=>Promise<void>;\r\n    private fields: Field[];\r\n    private arrs: ArrFields[];\r\n    private formItems: FormItems;\r\n    private layout: string[];\r\n    private res: any;\r\n    constructor(vForm:VForm, options: FormOptions, onSubmit: (values:any)=>Promise<void>) {\r\n        this.vForm = vForm;\r\n        this.onSubmit = onSubmit;\r\n        let {fields, arrs, ui, res} = options;\r\n        this.fields = fields;\r\n        this.arrs = arrs;\r\n        if (ui !== undefined) {\r\n            let {items, layout} = ui;\r\n            this.formItems = items;\r\n            this.layout = layout;\r\n        }\r\n        this.res = res;\r\n    }\r\n\r\n    build():VBand[] {\r\n        //return this.bandUIs === undefined? this.bandsOnFly() : this.bandsFromUI();\r\n        return this.layout === undefined? this.bandsOnFly() : this.bandsFromLayout();\r\n    }\r\n\r\n    private resFromName(name:string, res:any):string|FieldRes {\r\n        if (res === undefined) return;\r\n        let {fields} = res;\r\n        if (fields === undefined) return;\r\n        return fields[name] || name;\r\n    }\r\n\r\n    private bandsOnFly():VBand[] {\r\n        let bands:VBand[] = [];\r\n        this.bandsFromFields(bands, this.fields, this.res);\r\n        if (this.arrs !== undefined) {\r\n            for (let arr of this.arrs) bands.push(this.bandFromArr(arr));\r\n        }\r\n        if (this.onSubmit !== undefined) {\r\n            bands.push(new VSubmitBand(new VSubmit(this.vForm)));\r\n        }\r\n        return bands;\r\n    }\r\n\r\n    private bandsFromFields(bands:VBand[], fields:Field[], res:any) {\r\n        if (fields === undefined) return;\r\n        for (let field of fields) bands.push(this.bandFromField(field, res));\r\n    }\r\n\r\n    private bandsFromLayout():VBand[] {\r\n        let bands:VBand[] = [];\r\n        /*\r\n        for (let bandUI of this.bandUIs)  {\r\n            let band = this.bandFromUI(bandUI);\r\n            bands.push(band);\r\n        }\r\n        */\r\n        return bands;\r\n    }\r\n\r\n    /*\r\n    private bandFromUI(bandUI:BandUI):VBand {\r\n        let {band} = bandUI;\r\n        switch (band) {\r\n            default: return this.bandFromFieldUI(bandUI as FieldBandUI);\r\n            case 'arr': return this.bandFromArrUI(bandUI as ArrBandUI);\r\n            case 'fields': return this.bandFromFieldsUI(bandUI as FieldsBandUI);\r\n            case 'submit': return this.bandFromSubmitUI(bandUI as SubmitBandUI);\r\n        }\r\n    }\r\n    \r\n    private bandFromFieldUI(bandUI: FieldBandUI): VFieldBand {\r\n        let {label} = bandUI;\r\n        let vField = this.vFieldFromUI(bandUI);\r\n        return new VFieldBand(label, vField);\r\n    }\r\n    private bandFromArrUI(bandUI: ArrBandUI): VArrBand {\r\n        let {label, name} = bandUI;\r\n        let vArr = this.vArrFromUI(bandUI);\r\n        return new VArrBand(label, vArr);\r\n    }\r\n    private bandFromFieldsUI(bandUI: FieldsBandUI): VFieldsBand {\r\n        let {label, fieldUIs} = bandUI;\r\n        let vFields = fieldUIs.map(v => this.vFieldFromUI(v));\r\n        return new VFieldsBand(label, vFields);\r\n    }\r\n    private bandFromSubmitUI(bandUI: SubmitBandUI): VSubmitBand {\r\n        if (this.onSubmit === undefined) return;\r\n        let vSubmit = new VSubmit(this.vForm);\r\n        return new VSubmitBand(vSubmit);\r\n    }\r\n    */\r\n/*\r\n    private vFieldFromField(field:Field, fieldRes:FieldRes, formItem: FormItem): VField {\r\n        let fieldUI:FieldUI = undefined;\r\n        if (formItem !== undefined) {\r\n            if (typeof formItem === 'function') {\r\n                return new VComputeField(this.vForm, field, fieldRes);\r\n            }\r\n        }\r\n        let ret = buildVField(this.vForm, field, formItem, fieldRes);\r\n        if (ret !== undefined) return ret;\r\n        return new VTuidField(field, fieldUI, fieldRes, this.vForm);\r\n    }\r\n*/\r\n    private bandFromField(field:Field, res:any):VBand {\r\n        let {name} = field;\r\n        let fieldRes:FieldRes;\r\n        let rfn = this.resFromName(name, res);\r\n        let label:string;\r\n        if (typeof rfn === 'object') {\r\n            label = rfn.label;\r\n            fieldRes = rfn;\r\n        }\r\n        else {\r\n            label = rfn as string;\r\n            fieldRes = undefined;\r\n        }\r\n        let vField:VField;\r\n        let formItem:FormItem;\r\n        if (this.formItems !== undefined) formItem = this.formItems[name];\r\n        //let vField = this.vFieldFromField(field, fieldRes as FieldRes, formItem);\r\n        //let fieldUI:FieldUI = undefined;\r\n        if (typeof formItem === 'function') {\r\n            vField = new VComputeField(this.vForm, field, fieldRes);\r\n        }\r\n        else {\r\n            vField = buildVField(this.vForm, field, formItem as FieldUI, fieldRes);\r\n        }\r\n        if (vField === undefined) {\r\n            vField = new VTuidField(this.vForm, field, formItem as FieldUI, fieldRes);\r\n        }\r\n        return new VFieldBand(label || name, vField);\r\n    }\r\n\r\n    private bandFromArr(arr: ArrFields):VBand {\r\n        let {name, fields} = arr;\r\n        //let row = JSONContent;\r\n        //let bands:VBand[] = [];\r\n        //this.bandsFromFields(bands, fields, res);\r\n        let vArr = new VArr(this.vForm, arr); // name, res && res.label || name, row, bands);\r\n        return new VArrBand(name, vArr);\r\n    }\r\n\r\n    /*\r\n    private vFieldFromUI(fieldUI:FieldUI):VField {\r\n        return;\r\n    }\r\n\r\n    private vArrFromUI(arrBandUI:ArrBandUI):VArr {\r\n        return;\r\n    }\r\n    */\r\n}\r\n","import { VField, VIntField, VDecField, VStringField, VTextField, VDateTimeField, VDateField } from './vField';\r\nimport { Field } from '../../../uqs';\r\nimport { FieldRes } from '../vBand';\r\nimport { VForm } from '../vForm';\r\nimport { FieldUI } from '../../formUI';\r\n\r\nexport function buildVField(form:VForm, field: Field, fieldUI: FieldUI, fieldRes:FieldRes): VField {\r\n    let vField:new (form:VForm, field:Field, ui:FieldUI, fieldRes:FieldRes) => VField;\r\n    switch (field.type) {\r\n        default: return;\r\n        case 'tinyint':\r\n        case 'smallint':\r\n        case 'int':\r\n        case 'bigint':\r\n            vField = VIntField;\r\n            break;\r\n        case 'id':\r\n            let {_tuid} = field;\r\n            if (_tuid !== undefined) return;\r\n            vField = VIntField;\r\n            break;\r\n        case 'dec':\r\n            vField = VDecField;\r\n            break;\r\n        case 'char':\r\n            vField = VStringField;\r\n            break;\r\n        case 'text':\r\n            vField = VTextField;\r\n            break;\r\n        case 'datetime':\r\n            vField = VDateTimeField;\r\n            break;\r\n        case 'date':\r\n            vField = VDateField;\r\n            break;\r\n    }\r\n    return new vField(form, field, fieldUI, fieldRes);\r\n}\r\n\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport { observer } from 'mobx-react';\r\nimport { VBand } from './vBand';\r\nimport { BandsBuilder } from './bandsBuilder';\r\nimport { Field, ArrFields } from '../../uqs';\r\nimport { computed, observable, IObservableObject, IObservableValue } from 'mobx';\r\nimport { VArr } from './vArr';\r\nimport { FormUI, FormUIBase, FormItems } from '../formUI';\r\nimport { VField } from './vField';\r\nimport { VSubmit } from './vSubmit';\r\nimport { IObservableArray } from 'mobx';\r\nimport { FA } from '../../../ui';\r\n\r\nexport type FieldCall = (form:VForm, field:Field, values:any) => Promise<any>;\r\nexport interface FieldInput {\r\n    select: FieldCall;\r\n    content: React.StatelessComponent<any>;\r\n    placeHolder: string;\r\n}\r\nexport interface FieldInputs {\r\n    [fieldOrArr:string]: FieldInput | {[field:string]: FieldInput};\r\n}\r\nexport enum FormMode {new, edit, readonly}\r\n\r\nexport interface FormOptions {\r\n    fields: Field[];\r\n    arrs?: ArrFields[];\r\n    ui: FormUIBase;\r\n    res: any;\r\n    inputs: FieldInputs;\r\n    submitCaption: string;\r\n    arrNewCaption: string;\r\n    arrEditCaption: string;\r\n    arrTitleNewButton: JSX.Element;\r\n    none: string;\r\n    mode: FormMode;\r\n}\r\n\r\nexport class VForm {\r\n    protected fields: Field[];\r\n    protected arrs: ArrFields[];\r\n    protected bands: VBand[];\r\n    protected bandColl: {[key:string]: VBand};\r\n    protected onSubmit: ()=>Promise<void>;\r\n\r\n    constructor(options: FormOptions, onSubmit: ()=>Promise<void>) {\r\n        let {fields, arrs, ui, res, inputs, none, submitCaption, arrNewCaption, arrEditCaption, arrTitleNewButton, mode} = options;\r\n        this.fields = fields;\r\n        this.arrs = arrs;\r\n        this.ui = ui;\r\n        if (this.ui !== undefined) this.formItems = this.ui.items; //.compute = this.ui.compute;\r\n        this.res = res;\r\n        this.inputs = inputs;\r\n        this.none = none;\r\n        this.submitCaption = submitCaption;\r\n        this.arrNewCaption = arrNewCaption;\r\n        this.arrEditCaption = arrEditCaption;\r\n        this.arrTitleNewButton = arrTitleNewButton || <small><FA name=\"plus\" /> 新增</small>;\r\n        if (onSubmit === undefined) this.mode = FormMode.readonly;\r\n        else this.mode = mode;\r\n        this.buildFormValues();\r\n        this.buildBands(options, onSubmit);\r\n        this.onSubmit = onSubmit;\r\n    }\r\n\r\n    ui: FormUI;\r\n    res: any;\r\n    values: any;\r\n    errors: any;\r\n    formItems: FormItems;\r\n    mode: FormMode;\r\n    vFields: {[name:string]:VField} = {};\r\n    vArrs: {[name:string]: VArr} = {};\r\n    vSubmit: VSubmit;\r\n    inputs: FieldInputs;\r\n    none: string;\r\n    submitCaption: string;\r\n    arrNewCaption: string;\r\n    arrEditCaption: string;\r\n    arrTitleNewButton: JSX.Element;\r\n\r\n    private buildBands(options: FormOptions, onSubmit: (values:any)=>Promise<void>) {\r\n        this.bandColl = {};\r\n        let bandsBuilder = new BandsBuilder(this, options, onSubmit);\r\n        this.bands = bandsBuilder.build();\r\n        for (let band of this.bands) {\r\n            this.bandColl[band.key] = band;\r\n            let vFields = band.getVFields();\r\n            if (vFields !== undefined) for (let f of vFields) this.vFields[f.name] = f;\r\n            let vArr = band.getVArr();\r\n            if (vArr !== undefined) this.vArrs[vArr.name] = vArr;\r\n            let vSubmit = band.getVSubmit();\r\n            if (vSubmit !== undefined) this.vSubmit = vSubmit;\r\n        }\r\n    }\r\n\r\n    private onFormSubmit = (event:React.FormEvent<any>) => {\r\n        event.preventDefault();\r\n        return false;\r\n    }\r\n\r\n    protected view = observer(({className}:{className:string}) => {\r\n        return <form className={className} onSubmit={this.onFormSubmit}>\r\n            {this.bands.map(v => v.render())}\r\n        </form>;\r\n    });\r\n\r\n    getBand(name:string) {\r\n        return this.bandColl[name];\r\n    }\r\n\r\n    computeFields() {\r\n        if (this.formItems === undefined) return;\r\n        let values = this.values;\r\n        for (let i in this.formItems) {\r\n            let item = this.formItems[i];\r\n            if (typeof item !== 'function') continue;\r\n            values[i] = item.call(this, values);\r\n        }\r\n    }\r\n\r\n    async submit() {\r\n        if (this.onSubmit === undefined) return;\r\n        await this.onSubmit();\r\n    }\r\n    \r\n    getValues() {\r\n        let ret:any = {};\r\n        let values = this.values;\r\n        for (let f of this.fields) {\r\n            let {name} = f;\r\n            let v = values[name]\r\n            ret[name] =  v !== null && typeof v === 'object' ? v.id : v;\r\n        }\r\n        if (this.arrs !== undefined) {\r\n            for (let arr of this.arrs) {\r\n                let {name, fields, id, order} = arr;\r\n                let list = ret[name] = [];\r\n                let rows = this.vArrs[name].list;\r\n                for (let row of rows) {\r\n                    let item = {} as any;\r\n                    if (id !== undefined) item[id] = row[id];\r\n                    if (order !== undefined) item[order] = row[order];\r\n                    for (let f of fields) {\r\n                        let {name:fn} = f;\r\n                        let v = row[fn]\r\n                        item[fn] =  v !== null && typeof v === 'object' ? v.id : v;\r\n                    }\r\n                    list.push(item);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    get valueBoxs() {\r\n        let ret:any = {};\r\n        let values = this.values;\r\n        for (let f of this.fields) {\r\n            let {name, _tuid} = f;\r\n            let v = values[name]\r\n            ret[name] =  _tuid === undefined || typeof v === 'object' ? v : _tuid.boxId(v);\r\n        }\r\n        if (this.arrs === undefined) return ret;\r\n        for (let arr of this.arrs) {\r\n            let {name, fields, id, order} = arr;\r\n            let list = ret[name] = this.vArrs[name].list.slice();\r\n            for (let row of list) {\r\n                for (let f of fields) {\r\n                    let {name:fn, _tuid} = f;\r\n                    let v = row[fn]\r\n                    row[fn] =  _tuid === undefined || typeof v === 'object' ? v : _tuid.boxId(v);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    setValues(initValues:any) {\r\n        if (initValues === undefined) {\r\n            this.reset();\r\n            return;\r\n        }\r\n        let values = this.values;\r\n        let errors = this.errors;\r\n        for (let f of this.fields) {\r\n            let fn = f.name;\r\n            errors[fn] = undefined;\r\n            let v =  initValues[fn];\r\n            values[fn] = v;\r\n        }\r\n        // 还要设置arrs的values\r\n        for (let i in this.vArrs) {\r\n            let list = initValues[i];\r\n            if (list === undefined) continue;\r\n            let arrList = values[i] as IObservableArray<any>;\r\n            arrList.clear();\r\n            arrList.push(...list);\r\n        }\r\n    }\r\n\r\n    @computed get isOk():boolean {\r\n        for (let i in this.vFields) {\r\n            if (this.vFields[i].isOk === false) return false;\r\n        }\r\n        return true;\r\n    }\r\n    reset() {\r\n        let values = this.values;\r\n        let errors = this.errors;\r\n        for (let f of this.fields) {\r\n            let fn = f.name;\r\n            //if (this.compute !== undefined && this.compute[fn] !== undefined) continue;\r\n            values[fn] = null;\r\n            errors[fn] = undefined;\r\n        }\r\n        for (let i in this.vFields) {\r\n            let ctrl = this.vFields[i];\r\n            let cn = ctrl.name;\r\n            if (cn === undefined) continue;\r\n            //if (this.compute !== undefined && this.compute[cn] !== undefined) continue;\r\n            ctrl.setValue(null);\r\n        }\r\n        for (let i in this.vArrs) {\r\n            let vArr = this.vArrs[i];\r\n            vArr.reset();\r\n        }\r\n    }\r\n\r\n    getValue(fieldName: string) {\r\n        return this.values[fieldName];\r\n    }\r\n    setValue(fieldName: string, value: any) { this.values[fieldName] = value }\r\n\r\n    setError(fieldName:string, error:string) {this.errors[fieldName] = error}\r\n\r\n    private buildFieldValues(fields: Field[]):any {\r\n        let v: {[p:string]: any} = {\r\n            valueFromFieldName: function(propName:string) {\r\n                return this[propName];\r\n            }\r\n        };\r\n        for (let f of fields) {\r\n            let fn = f.name;\r\n            v[fn] = null;\r\n        }\r\n        return v;\r\n    }\r\n    private buildObservableValues():IObservableObject {\r\n        let v: {[p:string]: any} = this.buildFieldValues(this.fields);\r\n        if (this.arrs !== undefined) {\r\n            for (let arr of this.arrs) {\r\n                v[arr.name] = observable.array([], {deep:true});\r\n            }\r\n        }\r\n        let ret = observable(v);\r\n        return ret;\r\n    }\r\n    private buildFormValues() {\r\n        this.values = this.buildObservableValues();\r\n        this.errors = observable(this.buildFieldValues(this.fields));\r\n    }\r\n\r\n    render(className:string = \"py-3\"):JSX.Element {\r\n        return <this.view className={className} />\r\n    }\r\n}\r\n","export * from './vForm';\r\n","import {bridgeCenterApi, isBridged} from './appBridge';\r\nimport {FetchError} from '../fetchError';\r\nimport {HttpChannelUI} from './httpChannelUI';\r\nimport {nav} from '../ui/nav';\r\nimport { isDevelopment } from './host';\r\n\r\nexport async function httpGet(url:string, params?:any):Promise<any> {\r\n    let channel = new HttpChannel(false, url, undefined, undefined);\r\n    let ret = await channel.get('', params);\r\n    return ret;\r\n}\r\n\r\nexport async function httpPost(url:string, params?:any):Promise<any> {\r\n    let channel = new HttpChannel(false, url, undefined, undefined);\r\n    let ret = await channel.post('', params);\r\n    return ret;\r\n}\r\n\r\nexport class HttpChannel {\r\n    private isCenter: boolean;\r\n    private hostUrl: string;\r\n    private apiToken: string;\r\n    private ui?: HttpChannelUI;\r\n    private timeout: number;\r\n\r\n    constructor(isCenter: boolean, hostUrl: string, apiToken:string, ui?: HttpChannelUI) {\r\n        this.isCenter = isCenter;\r\n        this.hostUrl = hostUrl;\r\n        this.apiToken = apiToken;\r\n        this.ui = ui;\r\n        this.timeout = isDevelopment === true? 500000:5000;\r\n    }\r\n\r\n    private startWait = () => {\r\n        if (this.ui !== undefined) this.ui.startWait();\r\n    }\r\n\r\n    private endWait = (url?:string, reject?:(reason?:any)=>void) => {\r\n        if (this.ui !== undefined) this.ui.endWait();\r\n        if (reject !== undefined) reject('访问webapi超时 ' + url);\r\n    }\r\n\r\n    private showError = async (error:FetchError) => {\r\n        if (this.ui !== undefined) await this.ui.showError(error);\r\n    }\r\n\r\n    used() {\r\n        this.post('', {});\r\n    }\r\n\r\n    async get(url: string, params: any = undefined): Promise<any> {\r\n        if (params) {\r\n            let keys = Object.keys(params);\r\n            if (keys.length > 0) {\r\n                let c = '?';\r\n                for (let k of keys) {\r\n                    let v = params[k];\r\n                    if (v === undefined) continue;\r\n                    url += c + k + '=' + params[k];\r\n                    c = '&';\r\n                }\r\n            }\r\n        }\r\n        let options = this.buildOptions();\r\n        options.method = 'GET';\r\n        return await this.innerFetch(url, options);\r\n    }\r\n\r\n    async post(url: string, params: any): Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = 'POST';\r\n        options.body = JSON.stringify(params);\r\n        return await this.innerFetch(url, options);\r\n    }\r\n\r\n    async put(url: string, params: any): Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = 'PUT';\r\n        options.body = JSON.stringify(params);\r\n        return await this.innerFetch(url, options);\r\n    }\r\n\r\n    async delete(url: string, params: any): Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = 'DELETE';\r\n        options.body = JSON.stringify(params);\r\n        return await this.innerFetch(url, options);\r\n    }\r\n    async fetch(url: string, options: any, resolve:(value?:any)=>any, reject:(reason?:any)=>void):Promise<void> {\r\n        let that = this;\r\n        this.startWait();\r\n        let path = url;\r\n        function buildError(err: string) {\r\n            return {\r\n                channel: that,\r\n                url: path,\r\n                options: options,\r\n                resolve: resolve,\r\n                reject: reject,\r\n                error: err,\r\n            }\r\n        }\r\n        try {\r\n            console.log('%s %s', options.method, path);\r\n            let timeOutHandler = setTimeout(() => that.endWait(url, reject), this.timeout);\r\n            let res = await fetch(encodeURI(path), options);\r\n            if (res.ok === false) {\r\n                clearTimeout(timeOutHandler);\r\n                that.endWait();\r\n                console.log('call error %s', res.statusText);\r\n                throw res.statusText;\r\n            }\r\n            let ct = res.headers.get('content-type');\r\n            if (ct && ct.indexOf('json')>=0) {\r\n                return res.json().then(async retJson => {\r\n                    clearTimeout(timeOutHandler);\r\n                    that.endWait();\r\n                    if (retJson.ok === true) {\r\n                        return resolve(retJson.res);\r\n                    }\r\n                    if (retJson.error === undefined) {\r\n                        await that.showError(buildError('not valid tonva json'));\r\n                    }\r\n                    else {\r\n                        await that.showError(buildError(retJson.error));\r\n                        reject(retJson.error);\r\n                    }\r\n                    //throw retJson.error;\r\n                }).catch(async error => {\r\n                    await that.showError(buildError(error.message));\r\n                });\r\n            }\r\n            else {\r\n                let text = await res.text();\r\n                clearTimeout(timeOutHandler);\r\n                that.endWait();\r\n                resolve(text);\r\n            }\r\n        }\r\n        catch(error) {\r\n            if (typeof error === 'string') {\r\n                if (error.toLowerCase().startsWith('unauthorized') === true) {\r\n                    nav.logout();\r\n                    return;\r\n                }\r\n            }\r\n            await this.showError(buildError(error.message));\r\n        };\r\n    }\r\n\r\n    private async innerFetch(url: string, options: any): Promise<any> {\r\n        let u = this.hostUrl + url;\r\n        if (this.isCenter === true && this.apiToken === undefined && isBridged())\r\n            return await bridgeCenterApi(u, options.method, options.body);\r\n        return await new Promise<any>(async (resolve, reject) => {\r\n            await this.fetch(u, options, resolve, reject);\r\n        });\r\n    }\r\n\r\n    async callFetch(url:string, method:string, body:any):Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = method;\r\n        options.body = body;\r\n        return await new Promise<any>(async (resolve, reject) => {\r\n            await this.fetch(url, options, resolve, reject);\r\n        });\r\n    }\r\n\r\n    private buildOptions(): any {\r\n        let {language, culture} = nav;\r\n        let headers = new Headers();\r\n        //headers.append('Access-Control-Allow-Origin', '*');\r\n        headers.append('Content-Type', 'application/json;charset=UTF-8');\r\n        let lang = language;\r\n        if (culture) lang += '-' + culture;\r\n        headers.append('Accept-Language', lang);\r\n        if (this.apiToken) { \r\n            headers.append('Authorization', this.apiToken); \r\n        }\r\n        let options = {\r\n            headers: headers,\r\n            // cache: 'no-cache',\r\n        };\r\n        return options;\r\n    }\r\n}\r\n","import _ from 'lodash';\r\n\r\nexport interface KeyValueRes {\r\n    [key:string]: any;\r\n}\r\n\r\nexport interface Res<T extends KeyValueRes> {\r\n    [lang:string]: T | {[district:string]: T};\r\n}\r\n\r\nexport const resOptions:{lang:string, district:string} = {\r\n    lang: undefined,\r\n    district: undefined,\r\n}\r\n\r\nexport function setResOptions(lang:string, district:string) {\r\n    resOptions.lang = lang;\r\n    resOptions.district = district;\r\n}\r\n\r\n(function() {\r\n    let lang: string, district: string;\r\n    let language = navigator.languages && navigator.languages[0] || // Chrome / Firefox\r\n        navigator.language; // ||   // All browsers\r\n    //navigator.userLanguage; // IE <= 10\r\n    if (!language) {\r\n        lang = 'zh';\r\n        district = 'CN';\r\n    }\r\n    else {\r\n        let parts = language.split('-');\r\n        lang = parts[0];\r\n        if (parts.length > 1) district = parts[1];\r\n    }\r\n    setResOptions(lang, district);\r\n}());\r\n\r\nexport function resLang<T extends KeyValueRes>(res:Res<T>):T {\r\n    let {lang, district} = resOptions;\r\n    let ret:T = {} as T;\r\n    if (res === undefined) return ret;\r\n    _.merge(ret, res._);\r\n    let l = res[lang];\r\n    if (l === undefined) return ret;\r\n    _.merge(ret, l._);\r\n    let d = l[district];\r\n    if (d === undefined) return ret;\r\n    _.merge(ret, d);\r\n    let {entity} = ret;\r\n    if (entity !== undefined) {\r\n        for (let i in entity) {\r\n            entity[i.toLowerCase()] = entity[i];\r\n        }\r\n    }\r\n    return ret;\r\n}\r\n","import * as React from 'react';\r\nimport {observable, computed} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face} from '../face';\r\nimport {Rule} from '../rule';\r\n\r\nexport abstract class ControlBase {\r\n    protected formView: FormView;\r\n    constructor(formView:FormView) {\r\n        this.formView = formView;\r\n    }\r\n    render():JSX.Element {\r\n        return <div className=\"col-sm-10\">\r\n            {this.renderControl()}\r\n        </div>;\r\n    }\r\n    protected abstract renderControl():JSX.Element;\r\n    @computed get hasError():boolean {return false;}\r\n    @computed get filled():boolean {return false;}\r\n    clear() {}\r\n    clearErrors() {}\r\n    readValues(values:any):any {}\r\n    setError(fieldName:string, error:string) {}\r\n    setInitValues(values: any) {}\r\n    isOk():boolean {this.validate(); return !this.hasError;}\r\n    protected validate() {}\r\n}\r\n\r\nexport abstract class Control extends ControlBase {\r\n    protected field: Field;\r\n    protected face: Face;\r\n    protected props: any;\r\n    protected rules: Rule[];\r\n\r\n    protected element: HTMLElement;\r\n    @observable protected isOK?: boolean;\r\n    @observable protected error: string;\r\n    @observable protected value: any;\r\n\r\n    constructor(formView:FormView, field:Field, face:Face) {\r\n        super(formView);\r\n        this.field = field;\r\n        this.face = face;\r\n        this.init();\r\n        this.setProps();\r\n    }\r\n    protected ref(element: HTMLElement) {\r\n        this.element = element;\r\n    }\r\n    protected init() {\r\n        this.rules = [];\r\n        let r = this.field.rules;\r\n        if (r !== undefined) {\r\n            if (Array.isArray(r) === true) this.rules.push(...(r as Rule[]));\r\n            else this.rules.push(r as Rule);\r\n        }\r\n    };\r\n    protected setProps():any {\r\n        return this.props = {\r\n            ref: this.ref.bind(this),\r\n            name: this.field.name,\r\n        }\r\n    };\r\n    @computed get hasError():boolean {return this.error !== undefined;}\r\n    @computed get filled():boolean {\r\n        let ret = this.value !== undefined && this.value !== this.field.defaultValue;\r\n        return ret;\r\n    }\r\n    clearValue() { this.value = undefined; }\r\n    clear() { this.clearErrors(); this.clearValue(); }\r\n    clearErrors() { this.isOK = undefined; this.error = undefined; }\r\n    readValues(values:any):any {\r\n        values[this.field.name] = this.value;\r\n    }\r\n    setError(fieldName:string, error:string) {}\r\n    setInitValues(values: any) {}\r\n    protected getValueFromElement():any {return this.value;}\r\n    protected validate() {\r\n        try {\r\n            let v = this.getValueFromElement();\r\n            if (this.rules.length > 0) {\r\n                let isOk:boolean;\r\n                for (let rule of this.rules) {\r\n                    console.log('validate: %s', v);\r\n                    let err = rule(v);\r\n                    console.log('validate: %s err: %s', v, err);\r\n                    if (err === true) {\r\n                        this.error = undefined;\r\n                        isOk = true;\r\n                    }\r\n                    else if (err !== undefined) {\r\n                        //console.log('field %s onBlur v=%s rule=%s err=%s', \r\n                        //    this.field.name, JSON.stringify(v), rule, err);\r\n                        this.error = err;\r\n                        this.isOK = false;\r\n                        return;\r\n                    }\r\n                }\r\n                this.isOK = isOk;\r\n            }\r\n            this.value = v;\r\n        }\r\n        catch (e) {\r\n            this.error = e.message;\r\n        }\r\n    }\r\n    render():JSX.Element {\r\n        let n;\r\n        if (this.face !== undefined) {\r\n            let {notes} = this.face;\r\n            if (notes !== undefined) n = <small className=\"text-muted\">{notes}</small>;\r\n        }\r\n        return <div className=\"col-sm-10\">\r\n            {this.renderControl()}\r\n            {n}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face} from '../face';\r\nimport {ControlBase} from './control';\r\n\r\nexport class ButtonsControl extends ControlBase {\r\n    constructor(props) {\r\n        super(props);\r\n        this.otherClick = this.otherClick.bind(this);\r\n    }\r\n    private otherClick() {\r\n        let onOther = this.formView.props.onOther;\r\n        if (onOther === undefined) return;\r\n        let values = this.formView.readValues();\r\n        onOther(values);\r\n    }\r\n    renderControl():JSX.Element {\r\n        console.log('buttons.renderControl');\r\n        let nothing = this.formView.nothing;\r\n        let hasError = this.formView.hasError;\r\n        let props = this.formView.props;\r\n        console.log('buttons.renderControl nothing:%s hasError:%s', nothing, hasError);\r\n        let {submitButton, otherButton, onOther} = props;\r\n        let btnOther;\r\n        if (otherButton !== undefined) {\r\n            btnOther = <button className=\"btn btn-outline-info ml-auto\" onClick={this.otherClick}>\r\n                {otherButton}\r\n            </button>\r\n        }\r\n        return <div className=\"d-flex justify-content-start\">\r\n            <button\r\n                className=\"btn btn-primary\"\r\n                type=\"submit\" \r\n                disabled={nothing || hasError}>\r\n                {submitButton || '提交'}\r\n            </button>\r\n            {btnOther}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable, computed} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, Placeholder} from '../face';\r\nimport {Control} from './control';\r\n\r\nconst TxtRequired = '必须填入要求内容';\r\n\r\nexport abstract class CharsControl extends Control {\r\n    protected init() {\r\n        super.init();\r\n        if (this.field.required === true) {\r\n            this.rules.push((v) => {\r\n                if (v===null || v===undefined || (v as string).trim().length === 0) return TxtRequired;\r\n                return true;\r\n            });\r\n        }\r\n    }\r\n\r\n    protected element: HTMLInputElement;\r\n    protected getValueFromElement():any {return this.parseValue(this.element.value)}\r\n\r\n    protected setProps() {\r\n        super.setProps();\r\n        _.assign(this.props, {\r\n            onBlur: this.onBlur.bind(this),\r\n            onFocus: this.onFocus.bind(this),\r\n            onChange: this.onChange.bind(this),\r\n        });\r\n        let face = this.face as Placeholder;\r\n        if (face !== undefined) {\r\n            _.assign(this.props, {\r\n                placeholder: face.placeholder,\r\n            });\r\n        }\r\n        return this.props;\r\n    };\r\n    protected parseValue(value?:string):any {return value;}\r\n    private onBlur() {\r\n        //console.log('field %s onBlure', this.field.name);\r\n        this.validate();\r\n    }\r\n    private onChange() {\r\n        console.log('onChange');\r\n        this.validate();\r\n    }\r\n    private onFocus() {\r\n        this.clearErrors();\r\n        //this.error = undefined;\r\n        //this.formView.clearErrors();\r\n    }\r\n    protected className() {\r\n        return classNames({\r\n            \"form-control\": true,\r\n            \"has-success\": this.isOK === true,\r\n            \"is-invalid\": this.error !== undefined,\r\n            \"is-valid\": this.error === undefined && this.isOK === true,\r\n        });\r\n    }\r\n    protected renderInput():JSX.Element {\r\n        return <input className={this.className()} {...this.props} />;\r\n    }\r\n    protected ref(element: HTMLInputElement) {\r\n        super.ref(element);\r\n        if (element) {\r\n            element.value = this.value === undefined? '':this.value;\r\n        }\r\n    }\r\n    protected renderError():JSX.Element {\r\n        //if (this.field.name === 'name') console.log('charsControl renderControl');\r\n        if (this.error === undefined) return null;\r\n        return <div className=\"invalid-feedback\">{this.error}</div>\r\n    }\r\n    clearValue() { super.clearValue(); this.element.value = ''; }\r\n    setError(fieldName:string, error:string) {\r\n        if (this.field.name === fieldName) this.error = error;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        if (v === undefined) return;\r\n        //this.element.value = v;\r\n        this.value = v;\r\n    }\r\n    renderControl():JSX.Element {\r\n        return <React.Fragment>\r\n            {this.renderInput()}\r\n            {this.renderError()}\r\n        </React.Fragment>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport {CharsControl} from './charsControl';\r\nimport {StringField} from '../field';\r\n\r\nexport class StringControl extends CharsControl {\r\n    protected field: StringField;\r\n    protected setProps() {\r\n        let p = super.setProps();\r\n        _.assign(p, {\r\n            type: 'text',\r\n            maxLength: this.field.maxLength,\r\n        });\r\n        return p;\r\n    };\r\n    protected parseValue(value?:string):any {\r\n        if (value === undefined) return undefined;\r\n        if (value.trim().length === 0) return undefined;\r\n        return value;\r\n    }\r\n}\r\n\r\nexport class PasswordControl extends StringControl {\r\n    protected setProps() {\r\n        let p = super.setProps();\r\n        _.assign(p, {\r\n            type: 'password',\r\n            maxLength: this.field.maxLength,\r\n        });\r\n        return p;\r\n    };\r\n}","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport {IntField, DecField, NumberField} from '../field';\r\nimport {CharsControl} from './charsControl';\r\n\r\nconst ErrInvalidNumber = '无效的数字';\r\nconst ErrMin = '最小值为';\r\nconst ErrMax = '最大值为';\r\n\r\nconst KeyCode_Neg = 45;\r\nconst KeyCode_Dot = 46;\r\n\r\nexport class NumberControl extends CharsControl {\r\n    protected field: IntField | DecField | NumberField;\r\n    protected value: number;\r\n    protected extraChars: number[];\r\n    \r\n    protected init() {\r\n        super.init();\r\n        this.extraChars = [];\r\n        let {min, max} = this.field;\r\n        if (min !== undefined) {\r\n            this.rules.push((v:number) => {if (v === undefined) return; if (v<min) return ErrMin + min; return true;});\r\n            if (min < 0) this.extraChars.push(KeyCode_Neg);\r\n        }\r\n        else {\r\n            this.extraChars.push(KeyCode_Neg);\r\n        }\r\n\r\n        if (max !== undefined) {\r\n            this.rules.push((v:number) => {if (v === undefined) return; if (v>max) return ErrMax + max; return true});\r\n        }\r\n        switch (this.field.type) {\r\n            case 'dec':\r\n            case 'number': this.extraChars.push(KeyCode_Dot); break;\r\n        }\r\n    }\r\n\r\n    protected parseValue(value?:string):any {\r\n        if (value === undefined) return undefined;\r\n        if (value.trim().length === 0) return undefined;\r\n        let n = Number.parseFloat(value);\r\n        if (isNaN(n)) throw new Error(ErrInvalidNumber);\r\n        return n;\r\n    }\r\n\r\n    protected setProps() {\r\n        super.setProps();\r\n        _.assign(this.props, {\r\n            type: 'number',\r\n            step: (this.field as DecField).step,\r\n            onKeyPress: this.onKeyPress.bind(this),\r\n        });\r\n    }\r\n\r\n    onKeyPress(event:KeyboardEvent) {\r\n        let ch = event.charCode;\r\n        if (ch === 8 || ch === 0 || ch === 13 || ch >= 48 && ch <= 57) return;\r\n        if (this.extraChars !== undefined) {\r\n            if (this.extraChars.indexOf(ch) >= 0) {\r\n                switch (ch) {\r\n                    case KeyCode_Dot: this.onKeyDot(); break;\r\n                    case KeyCode_Neg: this.onKeyNeg(); event.preventDefault(); break;\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    private onKeyDot() {\r\n        let v = this.element.value;\r\n        let p = v.indexOf('.');\r\n        if (p >= 0) this.element.value = v.replace('.', '');\r\n    }\r\n    private onKeyNeg() {\r\n        let v = this.element.value;\r\n        let p = v.indexOf('-');\r\n        if (p >= 0) v = v.replace('-', '');\r\n        else v = '-'+v;\r\n        this.element.value = v;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {Control, ControlBase} from './control';\r\nimport {FormView} from '../formView';\r\n\r\nexport class UnknownControl extends Control {\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-plaintext\">\r\n            <div className=\"alert alert-primary\" role=\"alert\">\r\n            don't know how to create control<br/>\r\n            field: {JSON.stringify(this.field)} must be object <br/>\r\n            face: {JSON.stringify(this.face)} must be object <br/>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class EmptyControl extends ControlBase {\r\n    private element:JSX.Element;\r\n    constructor(formView:FormView, element:JSX.Element) {\r\n        super(formView);\r\n        this.element = element;\r\n    }\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-plaintext\">\r\n            {this.element}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, IdPickFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class PickIdControl extends Control {\r\n    protected face: IdPickFace;\r\n    @observable private caption: string|JSX.Element;\r\n\r\n    private onClick = async () => {\r\n        let {pick, fromPicked} = this.face;\r\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\r\n        if (item === undefined) {\r\n            this.value = undefined;\r\n            return;\r\n        }\r\n        if (fromPicked === undefined) {\r\n            this.value = item.id;\r\n            return;\r\n        }\r\n        let {id, caption} = fromPicked(item);\r\n        this.value = id;\r\n        this.caption = caption;\r\n    }\r\n    onPicked = (value: any) => {\r\n        this.value = value.id;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        this.value = v;\r\n    }\r\n    private controlContent():string|JSX.Element {\r\n        let {itemFromId, fromPicked, initCaption} = this.face;\r\n        if (this.value === undefined) {\r\n            return initCaption || '请选择Id';\r\n        }\r\n        if (this.caption !== undefined) {\r\n            return this.caption;\r\n        }\r\n        if (itemFromId !== undefined) {\r\n            if (fromPicked !== undefined) {\r\n                let item = itemFromId(this.value);\r\n                if (item) {\r\n                    let ret = fromPicked(item);\r\n                    if (ret !== undefined) return ret.caption;\r\n                }\r\n            }\r\n        }\r\n        return String(this.value);\r\n    }\r\n    /*\r\n    private buildContent():string|JSX.Element {\r\n        let {tuid, input} = this.face;\r\n        if (input === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n            return <div onClick={this.onClick}>{this.controlContent()}</div>;\r\n        }\r\n        return <input.component id={this.value} \r\n            tuid={tuid}\r\n            input={input}\r\n            entitiesUI={this.formView.props.context} \r\n            params={this.formView.readValues()}\r\n            onPicked={this.onPicked} />;\r\n    }*/\r\n    renderControl():JSX.Element {\r\n        let {tuid, input} = this.face;\r\n        if (input === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n            return <div className=\"form-control-plaintext px-2 border text-primary rounded cursor-pointer\"\r\n                onClick={this.onClick}>\r\n                {this.controlContent()}\r\n            </div>;\r\n        }\r\n        return <div className=\"form-control-static \">\r\n            <input.component id={this.value} \r\n                ui={tuid}\r\n                //input={input}\r\n                //entitiesUI={this.formView.props.context} \r\n                //params={this.formView.readValues()}\r\n                //onPicked={this.onPicked}\r\n                />\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, TuidPickFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class PickTuidControl extends Control {\r\n    protected face: TuidPickFace;\r\n    // protected value: number;\r\n    @observable private caption: string|JSX.Element;\r\n    constructor(formView:FormView, field:Field, face:Face) {\r\n        super(formView, field, face);\r\n        this.onIdChanged = this.onIdChanged.bind(this);\r\n        //this.onClick = this.onClick.bind(this);\r\n    }\r\n    /*\r\n    private async onClick() {\r\n        let {pick, fromPicked} = this.face;\r\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\r\n        if (item === undefined) {\r\n            this.value = undefined;\r\n            return;\r\n        }\r\n        if (fromPicked === undefined) {\r\n            this.value = item.id;\r\n            return;\r\n        }\r\n        let {id, caption} = fromPicked(item);\r\n        this.value = id;\r\n        this.caption = caption;\r\n    }*/\r\n    onIdChanged(id: any) {\r\n        this.value = id.id;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        this.value = v;\r\n    }\r\n    private buildContent():JSX.Element {\r\n        //let {tuid, input} = this.face;\r\n        return <this.face.input.component \r\n            {...this.face}\r\n            id={this.value}\r\n            //ui={this.face.ui}\r\n            //input={input}\r\n            //entitiesUI={this.formView.props.context} \r\n            onFormValues={()=>this.formView.readValues()}\r\n            onIdChanged={this.onIdChanged} />;\r\n    }\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-static \">\r\n            {this.buildContent()}\r\n        </div>;\r\n    }\r\n}\r\n/*\r\n<button className=\"form-control btn btn-outline-info\"\r\ntype=\"button\"\r\nstyle={{textAlign:'left', paddingLeft:'0.75rem'}}\r\nonClick={this.onClick}>\r\n{this.buildContent()}\r\n</button>\r\n*/","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, PickFace} from '../face';\r\nimport {Control} from './control';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class PickControl extends Control {\r\n    protected face: PickFace;\r\n    @observable private caption: string|JSX.Element;\r\n\r\n    private onClick = async () => {\r\n        let {pick, fromPicked} = this.face;\r\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\r\n        if (item === undefined) {\r\n            this.value = undefined;\r\n            return;\r\n        }\r\n        let {id, caption} = fromPicked(item);\r\n        this.value = id;\r\n        this.caption = caption;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        this.value = v;\r\n    }\r\n    /*\r\n    private controlContent():string|JSX.Element {\r\n        let {content: Content} = this.face;\r\n        if (this.value === undefined) {\r\n            return '请选择';\r\n        }\r\n        \r\n        if (this.caption !== undefined) {\r\n            return this.caption;\r\n        }\r\n        return <Content id={this.value} />;\r\n    }*/\r\n    /*\r\n    private buildContent():string|JSX.Element {\r\n        let {tuid, input} = this.face;\r\n        if (input === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n            return <div onClick={this.onClick}>{this.controlContent()}</div>;\r\n        }\r\n        return <input.component id={this.value} \r\n            tuid={tuid}\r\n            input={input}\r\n            entitiesUI={this.formView.props.context} \r\n            params={this.formView.readValues()}\r\n            onPicked={this.onPicked} />;\r\n    }*/\r\n    renderControl():JSX.Element {\r\n        return <this.view />;\r\n        /*\r\n        let {content:Content} = this.face;\r\n        //if (this.value === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n        //}\r\n        //return <div className=\"form-control-static \">\r\n        //    <Content />\r\n        //</div>;\r\n        */\r\n    }\r\n\r\n    private view = observer(() => {\r\n        let content;\r\n        let {content: Content} = this.face;\r\n        if (this.value === undefined || this.value === null) {\r\n            content = '请选择';\r\n        }\r\n        /*\r\n        else if (this.caption !== undefined) {\r\n            content = this.caption;\r\n        }*/\r\n        else {\r\n            content = <Content id={this.value} />;\r\n        } \r\n        return <div\r\n            className=\"form-control-plaintext px-2 border text-primary rounded cursor-pointer bg-light\"\r\n            onClick={this.onClick}>\r\n            {content}\r\n        </div>\r\n    });\r\n}\r\n","export * from './control';\r\nexport * from './buttonsControl';\r\nexport * from './stringControl';\r\nexport * from './numberControl';\r\n\r\nimport {Field} from '../field';\r\nimport {Face} from '../face';\r\nimport {Control, ControlBase} from './control';\r\nimport {ButtonsControl} from './buttonsControl';\r\nimport {CheckControl} from './checkControl';\r\nimport {RadioControl} from './radioControl';\r\nimport {TextAreaControl} from './textAreaControl';\r\nimport {SelectControl} from './selectControl';\r\nimport {UnknownControl, EmptyControl} from './unknownControl';\r\nimport {StringControl, PasswordControl} from './stringControl';\r\nimport {NumberControl} from './numberControl';\r\n\r\nimport {FormView, FormRow, GroupRow, FieldRow, LabelFormRow} from '../formView';\r\nimport { PickIdControl } from './pickIdControl';\r\nimport { PickTuidControl } from './pickTuidControl';\r\nimport { PickControl } from './pickControl';\r\n\r\nexport type CreateControl = (form:FormView, row: FormRow) => ControlBase\r\n\r\nexport const createControl:CreateControl = (form:FormView, row: LabelFormRow):ControlBase => {\r\n    let label = row.label;\r\n    if ((<GroupRow>row).group !== undefined)\r\n        return createGroupControl(form, label, row as GroupRow);\r\n    if ((<FieldRow>row).field !== undefined)\r\n        return createFieldControl(form, label, row as FieldRow);\r\n    return new EmptyControl(form, row.help);\r\n}\r\n\r\nconst controls:{[type:string]: new (formView:FormView, field:Field, face:Face) => Control} = {\r\n    \"string\": StringControl,\r\n    \"password\": PasswordControl,\r\n    \"number\": NumberControl,\r\n    \"checkbox\": CheckControl,\r\n    \"radiobox\": RadioControl,\r\n    \"select\": SelectControl,\r\n    \"pick-id\": PickIdControl,\r\n    \"pick-tuid\": PickTuidControl,\r\n    \"textarea\": TextAreaControl,\r\n    \"pick\": PickControl,\r\n};\r\nconst defaultFaces:{[type:string]: Face} = {\r\n    \"string\": {type:'string'},\r\n    \"number\": {type:'number'},\r\n    \"int\": {type:'number'},\r\n    \"dec\": {type:'number'},\r\n    \"bool\": {type:'checkbox'},\r\n}\r\nfunction createFieldControl(form:FormView, label:string, fieldRow: FieldRow):Control {\r\n    let {field, face} = fieldRow;\r\n    switch (typeof field) {\r\n        case 'string':\r\n            field = {\r\n                name: (field as any) as string,\r\n                type: 'string',\r\n            }\r\n            break;\r\n        case 'object':\r\n            break;\r\n        default:\r\n            return new UnknownControl(form, field, face);\r\n    }\r\n    let fieldType = field.type || 'string';\r\n    if (face === undefined) {\r\n        face = defaultFaces[fieldType];\r\n        if (face === undefined) return new UnknownControl(form, field, face);\r\n    }\r\n    else if (face.type === undefined) {\r\n        let f = defaultFaces[fieldType];\r\n        face.type = f===undefined? 'string' : f.type;\r\n    }\r\n    let control = controls[face.type || fieldType] || UnknownControl;\r\n    return new control(form, field, face);\r\n}\r\n\r\nfunction createGroupControl(form:FormView, label:string, groupRow: GroupRow):Control {\r\n    return new UnknownControl(form, groupRow as any, undefined);\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field, BoolField} from '../field';\r\nimport {Face, CheckBoxFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class CheckControl extends Control {    \r\n    protected element: HTMLInputElement;\r\n    protected field: BoolField;\r\n    protected face: CheckBoxFace;\r\n    private trueValue: any;\r\n    private falseValue: any;\r\n\r\n    protected init() {\r\n        super.init();\r\n        let {trueValue, falseValue} = this.field;\r\n        if (trueValue === undefined) this.trueValue = 1;\r\n        if (falseValue === undefined) this.falseValue = 0;\r\n    }\r\n\r\n    setProps() {\r\n        super.setProps();\r\n        _.assign(this.props, {\r\n            onChange: this.onChange.bind(this),\r\n        });\r\n    }\r\n\r\n    clearValue() {\r\n        this.element.checked = this.field.defaultValue === this.trueValue;\r\n        this.value = this.getValueFromElement();\r\n    }\r\n\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        if (v === undefined) {\r\n            v = this.field.defaultValue;\r\n        }\r\n        if (v !== undefined) {\r\n            //this.element.checked = v === this.trueValue;\r\n            //this.value = this.getValueFromElement();\r\n        }\r\n    }\r\n\r\n    protected getValueFromElement():any { return this.element.checked? this.trueValue:this.falseValue; }\r\n\r\n    private onChange() {\r\n        this.value = this.getValueFromElement();\r\n    }\r\n\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-static\">\r\n            <label className=\"form-control\">\r\n                <label className=\"custom-control custom-checkbox mb-0\">\r\n                    <input type='checkbox'\r\n                        name={this.field.name}\r\n                        ref={this.props.ref}\r\n                        onChange={this.props.onChange}\r\n                        className=\"custom-control-input\" />\r\n                    <span className=\"custom-control-indicator\" />\r\n                    <span className=\"custom-control-description\">{this.face.label}</span>\r\n                </label>\r\n            </label>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, RadioFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class RadioControl extends Control {\r\n    protected face: RadioFace;\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-static\">\r\n            <div className=\"form-control\">\r\n            {\r\n                this.face.list.map((item, index) => {\r\n                    let t, v;\r\n                    if (typeof item !== 'object') t = v = item;\r\n                    else {\r\n                        t = item.text;\r\n                        v = item.value;\r\n                    }\r\n                    return <label key={index} className=\"custom-control custom-radio w-25\">\r\n                        <input type='radio'\r\n                            name={this.field.name} \r\n                            className=\"custom-control-input\" />\r\n                        <span className=\"custom-control-indicator\"></span>\r\n                        <span className=\"custom-control-description\">{t}</span>\r\n                    </label>;\r\n                })\r\n            }\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, SelectFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class SelectControl extends Control {\r\n    constructor (formView:FormView, field:Field, face:Face) {\r\n        super(formView, field, face);\r\n        this.ref = this.ref.bind(this);\r\n    }\r\n    protected face: SelectFace;\r\n    protected element: HTMLSelectElement;\r\n    protected getValueFromElement():any {\r\n        let {selectedIndex, selectedOptions} = this.element;\r\n        let v:any = selectedOptions[0].value;\r\n        switch (this.field.type) {\r\n            case 'number': v = Number(v); break;\r\n            case 'date': v = new Date(v); break;\r\n            case 'bool': \r\n                if (typeof v === 'string') {\r\n                    v = ((v as string).toLowerCase() === 'true');\r\n                }\r\n                break;\r\n        }\r\n        return v;\r\n    }\r\n    renderControl():JSX.Element {\r\n        let {list} = this.face;\r\n        let def = this.face.default;\r\n        let options: any[] = [];\r\n        if (def === undefined)\r\n            options.push(<option key={-1} value={undefined}>请选择</option>);\r\n        options.push(...list.map((item, index) => {\r\n            let t, v;\r\n            if (typeof item !== 'object') t = v = item;\r\n            else {\r\n                t = item.text;\r\n                v = item.value;\r\n            }\r\n            return <option key={index} value={v}>{t}</option>;\r\n        }));\r\n        return <div className=\"form-control-static\">\r\n            <select name={this.field.name} className=\"form-control\" ref={this.ref}>\r\n                {options}\r\n            </select>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport {CharsControl} from './charsControl';\r\nimport {StringField} from '../field';\r\nimport {TextAreaFace} from '../face';\r\n\r\nexport class TextAreaControl extends CharsControl {\r\n    protected field: StringField;\r\n    protected face: TextAreaFace;\r\n    private el: HTMLTextAreaElement;\r\n    protected setProps() {\r\n        let p = super.setProps();\r\n        let {maxLength} = this.field;\r\n        let {rows} = this.face;\r\n        _.assign(p, {\r\n            maxLength: maxLength,\r\n            rows: rows,\r\n        });\r\n        return p;\r\n    };\r\n    protected renderInput():JSX.Element {\r\n        return <textarea ref={t=>{this.el = t;if (t!==undefined) t.value=''}} className={this.className()} {...this.props} />;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {FormView, FormRow, FieldRow, GroupRow, LabelFormRow} from '../formView';\r\nimport {Control, ControlBase, createControl, CreateControl} from '../control';\r\n\r\nexport type CreateRow = (form:FormView, row: FormRow)=>RowContainer;\r\n\r\nexport abstract class RowContainer {\r\n    protected form:FormView;\r\n    protected row: FormRow;\r\n    protected control: ControlBase;\r\n    constructor(form:FormView, row: FormRow) {\r\n        this.form = form;\r\n        this.row = row;\r\n        if ((row as JSX.Element).type === undefined) {\r\n            let cc:CreateControl = (row as LabelFormRow).createControl;\r\n            if (cc === undefined) cc = form.createControl;\r\n            if (cc === undefined) cc = createControl;\r\n            this.control = cc(form, row);\r\n        }\r\n    }\r\n    abstract render(key:string):JSX.Element;\r\n    \r\n    isOk():boolean {\r\n        if (this.control === undefined) return true;\r\n        return this.control.isOk();\r\n    }\r\n\r\n    contains(fieldName:string):boolean {\r\n        let field = (this.row as FieldRow).field;\r\n        if (field !== undefined) return fieldName === field.name;\r\n        let group = (this.row as GroupRow).group;\r\n        if (group !== undefined) return group.find(g => g.field.name === fieldName)!==undefined;\r\n        return false;\r\n    }\r\n    get hasError():boolean {return this.control.hasError;}\r\n    get filled():boolean {return this.control.filled;}\r\n    clear() {\r\n        if (this.control !== undefined) this.control.clear();\r\n    }\r\n    clearErrors() {\r\n        if (this.control !== undefined) this.control.clearErrors();\r\n    }\r\n    readValues(values:any):any {\r\n        if (this.control !== undefined) this.control.readValues(values);\r\n    }\r\n    setError(fieldName:string, error:string) {\r\n        if (this.control !== undefined) this.control.setError(fieldName, error);\r\n    }\r\n    setInitValues(values:any) {\r\n        if (this.control !== undefined) this.control.setInitValues(values);\r\n    }\r\n}\r\n\r\nclass ElementRowContainer extends RowContainer {\r\n    render(key:string):JSX.Element {\r\n        return <div key={key} className=\"form-group\">{this.row as JSX.Element}</div>;\r\n    }\r\n    get hasError():boolean {return false;}\r\n    get filled():boolean {return false;}\r\n}\r\n\r\nclass BootStrapRowContainer extends RowContainer {\r\n    render(key:string):JSX.Element {\r\n        return <div key={key} className='form-group row'>\r\n            <label className='col-sm-2 col-form-label'>\r\n                {(this.row as LabelFormRow).label}\r\n            </label>\r\n            {this.control.render()}\r\n        </div>;\r\n\r\n        //has-success is-valid\r\n    }\r\n}\r\n\r\nexport function bootstrapCreateRow(form:FormView, row: FormRow):RowContainer {\r\n    return new BootStrapRowContainer(form, row);\r\n}\r\n\r\nexport function elementCreateRow(form:FormView, row: FormRow):RowContainer {\r\n    return new ElementRowContainer(form, row);\r\n}\r\n","//import {isDevelopment} from '../local';\r\nimport {HttpChannel} from './httpChannel';\r\n\r\nexport async function refetchApi(channel:HttpChannel, url, options, resolve, reject) {\r\n    await channel.fetch(url, options, resolve, reject);\r\n}\r\n\r\nexport abstract class ApiBase {\r\n    protected token: string;\r\n    protected path: string;\r\n    protected showWaiting: boolean;\r\n\r\n    constructor(path: string, showWaiting: boolean) {\r\n        this.path = path || '';\r\n        this.showWaiting = showWaiting;\r\n    }\r\n\r\n    protected abstract async getHttpChannel(): Promise<HttpChannel>;\r\n\r\n    public async call(url:string, method:string, body:any):Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.callFetch(url, method, body);\r\n    }\r\n\r\n    public async get(path:string, params:any=undefined): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.get(this.path + path, params);\r\n    }\r\n\r\n    public async post(path:string, params:any): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.post(this.path + path, params);\r\n    }\r\n\r\n    public async put(path:string, params:any): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.put(this.path + path, params);\r\n    }\r\n\r\n    public async delete(path:string, params:any): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.delete(this.path + path, params);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport {nav} from './nav';\r\n\r\nexport interface PageHeaderProps {\r\n    back?: 'back' | 'close' | 'none';\r\n    center: string | JSX.Element;\r\n    right?: JSX.Element;\r\n    logout?: boolean | (()=>Promise<void>);\r\n    className?: string;\r\n}\r\nexport interface PageHeaderState {\r\n    hasBack: boolean;\r\n}\r\n\r\nexport class PageHeader extends React.Component<PageHeaderProps, PageHeaderState> {\r\n    constructor(props: PageHeaderProps) {\r\n        super(props);\r\n        this.navChange = this.navChange.bind(this);\r\n        this.state = {\r\n            hasBack: false,\r\n        };\r\n    }\r\n    navChange() {\r\n        this.setState({\r\n            hasBack: nav.level > 1\r\n        })\r\n    }\r\n    componentWillMount() {\r\n        this.navChange();\r\n        //this.navChangeHandler = nav.events.add('change', this.navChange);\r\n    }\r\n    componentWillUnmount() {\r\n        //nav.events.remove('change', this.navChangeHandler);\r\n    }\r\n    async back() {\r\n        await nav.back(); // 这个才会显示confirm box，在dataForm里面，如果输入了数据的话\r\n    }\r\n    openWindow() {\r\n        window.open(document.location.href);\r\n    }\r\n    private logoutClick = () => {\r\n        nav.showLogout(this.logout);\r\n    }\r\n    private logout = async () => {\r\n        let {logout} = this.props;\r\n        if (typeof logout === 'function') {\r\n            await logout(); \r\n        }\r\n        await nav.logout(undefined);\r\n    }\r\n    render() {\r\n        let b = this.state.hasBack || self != top;\r\n        let {right, center, logout, className} = this.props;\r\n        let back:any, pop:any, debugLogout:any;\r\n        if (logout !== undefined && self === top) {\r\n            if (typeof logout === 'boolean' && logout === true\r\n                || typeof logout === 'function')\r\n            {\r\n                let {user} = nav;\r\n                if (user !== undefined) {\r\n                    let {nick, name} = user;\r\n                    debugLogout = <div className=\"d-flex align-items-center\">\r\n                        <small className=\"text-light\">{nick || name}</small>\r\n                        <a className=\"btn ml-2 cursor-pointer\"\r\n                            role=\"button\"\r\n                            onClick={this.logoutClick}>\r\n                            <i className=\"fa fa-sign-out\" />\r\n                        </a>\r\n                    </div>;\r\n                }\r\n            }\r\n        }\r\n        if (b) {\r\n            switch (this.props.back) {\r\n                case 'none': back = undefined; break;\r\n                default:\r\n                case 'back': back = <nav onClick={this.back}><i className=\"fa fa-arrow-left\" /></nav>; break;\r\n                case 'close': back = <nav onClick={this.back}><i className=\"fa fa-close\" /></nav>; break;\r\n            }\r\n        }\r\n        if (self != top) {\r\n            console.log(document.location.href);\r\n            pop = <header onClick={this.openWindow} />;\r\n        }\r\n        let rightView = (right || debugLogout) && <aside>{right} {debugLogout}</aside>;\r\n        return <header className={className}>\r\n            {pop}\r\n            {back}\r\n            <div>{center}</div>\r\n            {rightView}\r\n        </header>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport '../../css/va-badge.css';\r\n\r\nexport interface BadgeProps {\r\n    className?: string;\r\n    badge?: string|number;\r\n    size?: 'xs' | 'sm' | 'lg';\r\n    color?: 'secondary'|'success'|'danger'|'primary'|'info'|'warning';\r\n    badgeAlign?: 'left'|'center'|'right';\r\n    badgeVertical?: 'top'|'middle'|'bottom';\r\n}\r\n\r\n@observer\r\nexport class Badge extends React.Component<BadgeProps> {\r\n    render() {\r\n        let {className, badge, size, color, badgeAlign, badgeVertical, children} = this.props;\r\n        let cn = classNames(\r\n            className,\r\n            'va-badge',\r\n            size && 'va-badge-'+size,\r\n            'va-badge-' + (color||'secondary'),\r\n            badgeAlign && 'va-badg-'+badgeAlign,\r\n            badgeVertical && 'va-badg-'+badgeVertical,\r\n        );\r\n        let b;\r\n        if (badge) b = <b>{badge}</b>;\r\n        return <div className={cn}>\r\n            {children}\r\n            {b}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport '../../css/va-lmr.css';\r\n\r\nexport interface LMRProps {\r\n    className?: string | string[];\r\n    left?: string|JSX.Element;\r\n    right?: string|JSX.Element;\r\n    onClick?: ()=>void;\r\n}\r\n\r\n@observer\r\nexport class LMR extends React.Component<LMRProps> {\r\n    render() {\r\n        let {className, left, children, right, onClick} = this.props;\r\n        let l, r;\r\n        if (left !== undefined) l = <header>{left}</header>;\r\n        if (right !== undefined) r = <footer>{right}</footer>;\r\n        let cursor;\r\n        if (onClick !== undefined) cursor = 'cursor-pointer';\r\n        return <div className={classNames('va-lmr', className, cursor)} onClick={onClick}>\r\n            {l}\r\n            <div>{children}</div>\r\n            {r}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\n\r\nexport interface FAProps {\r\n    name: string;\r\n    className?: string;\r\n    size?: 'lg'|'2x'|'3x'|'4x'|'5x';\r\n    spin?: boolean;\r\n    fixWidth?: boolean;\r\n    border?: boolean;\r\n    pull?: 'left'|'right';\r\n    pulse?: boolean;\r\n    rotate?: 90|180|270;\r\n    flip?: 'horizontal'|'vertical';\r\n    inverse?: boolean;\r\n}\r\n\r\nexport class FA extends React.Component<FAProps> {\r\n    render() {\r\n        let {name, className, size, spin, fixWidth, border, pull, pulse, rotate, flip, inverse} = this.props;\r\n        let cn = classNames(className, 'fa',\r\n            name && ('fa-' + name),\r\n            size && 'fa-'+size,\r\n            fixWidth && 'fa-fw',\r\n            border && 'fa-border',\r\n            pull && 'fa-pull-' + pull,\r\n            spin && 'fa-spin',\r\n            pulse && 'fa-pulse',\r\n            rotate && 'fa-rotate-' + rotate,\r\n            flip && 'fa-flip-' + flip,\r\n            inverse && 'fa-inverse',\r\n        );\r\n        return <i className={cn} />\r\n    }\r\n}\r\n\r\nexport interface StackedFAProps {\r\n    className?: string;\r\n    size?: 'lg',\r\n}\r\nexport class StackedFA extends React.Component<StackedFAProps> {\r\n    render() {\r\n        let {className, size, children} = this.props;\r\n        let cn = classNames(\r\n            'fa-stack',\r\n            className,\r\n            size && 'fa-' + size);\r\n        return <span className={cn}>\r\n            {children}\r\n        </span>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\n\r\nexport const Muted = (props:any) => \r\n<small className={classNames('text-muted', props.className)} style={props.style}>\r\n    {props.children}\r\n</small>;\r\n","export * from './Badge';\r\nexport * from './LMR';\r\nexport * from './FA';\r\nexport * from './IconText';\r\nexport * from './Muted';\r\n","import React from 'react';\r\nimport { jsonStringify } from '../../tools';\r\n\r\nexport const DefaultRow = (values) => <div className=\"px-3 py-2\">{jsonStringify(values)}</div>;\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Page, List, FA } from '../../../ui';\r\nimport { Query } from '../../uqs';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { QueryUI, CQuery } from './cQuery';\r\nimport { DefaultRow } from './defaultRow';\r\n\r\nexport class VQueryMain extends VEntity<Query, QueryUI, CQuery> {\r\n    protected vForm: VForm;\r\n    private row: React.StatelessComponent;\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        let {row, queryRow} = this.ui;\r\n        this.row = queryRow || row || DefaultRow;\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSubmit = async () => {\r\n        let params = this.vForm.getValues();\r\n        if (this.entity.isPaged === true) {\r\n            await this.entity.resetPage(30, params);\r\n            await this.entity.loadPage();\r\n            this.replacePage(this.pageResult);\r\n        }\r\n        else {\r\n            let data = await this.entity.query(params);\r\n            this.replacePage(this.queryResult, data);\r\n        }\r\n    }\r\n\r\n    again = () => {\r\n        this.vForm.reset();\r\n        this.replacePage(this.view);\r\n    }\r\n\r\n    renderExtra() {\r\n        return;\r\n    }\r\n\r\n    renderRow = (item:any, index:number) => <this.row {...item} />;\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render('mx-3 my-2')}\r\n        {this.renderExtra()}\r\n    </Page>;\r\n\r\n    protected pageResult = () => {\r\n        let {name, list} = this.entity;\r\n        let rightClose = <button\r\n            className=\"btn btn-outline-success\"\r\n            onClick={this.again}>\r\n            <FA name=\"search\" /> 再查询\r\n        </button>;\r\n        return <Page header={this.label} right={rightClose}>\r\n            <List items={list} item={{render: this.renderRow}} />\r\n        </Page>;\r\n    }\r\n\r\n    protected queryResult = observer((result:any) => {\r\n        let rightClose = <button\r\n            className=\"btn btn-outline-success\"\r\n            onClick={this.again}>\r\n            <FA name=\"search\" /> 再查询\r\n        </button>;\r\n        return <Page header={this.label} right={rightClose}>\r\n            <pre>{JSON.stringify(result, undefined, '\\t')}</pre>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport { Page, FA, SearchBox, List } from '../../../ui';\r\nimport { PageItems } from '../../../pageItems';\r\nimport { Query } from '../../uqs';\r\nimport { VEntity } from '../CVEntity';\r\nimport { QueryUI, CQuerySelect } from './cQuery';\r\nimport { DefaultRow } from './defaultRow';\r\n\r\nexport class VQuerySelect extends VEntity<Query, QueryUI, CQuerySelect> {\r\n    private row: React.StatelessComponent;\r\n\r\n    PageItems:QueryPageItems;\r\n    ownerId: number;\r\n\r\n    async open(param?:any) {\r\n        let {row, selectRow} = this.ui;\r\n        this.row = selectRow || row || DefaultRow;\r\n        //this.entity = this.controller.entity;\r\n        this.PageItems = new QueryPageItems(this.entity);\r\n        await this.onSearch(param);\r\n        this.openPage(this.view);\r\n    }\r\n    onSearch = async (key:string) => {\r\n        await this.PageItems.first(key);\r\n    }\r\n\r\n    renderRow = (item:any, index:number) => <this.row {...item} />;\r\n\r\n    private callOnSelected(item:any) {\r\n       this.closePage();\r\n       this.returnCall(item);\r\n    }\r\n    clickRow = (item:any) => {\r\n        this.callOnSelected(item);\r\n    }\r\n\r\n    view = () => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\r\n        return <Page header={header}>\r\n            <List\r\n                items={this.PageItems.items}\r\n                item={{render: this.renderRow, onClick: this.clickRow}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    };\r\n}\r\n\r\nexport class QueryPageItems extends PageItems<any> {\r\n    private query: Query;\r\n    constructor(query: Query) {\r\n        super();\r\n        this.query = query;\r\n    }\r\n    protected async load():Promise<any[]> {\r\n        await  this.query.loadSchema();\r\n        let ret:any[];\r\n        if (this.query.isPaged === true)\r\n            ret = await this.query.page(this.param, this.pageStart, this.pageSize);\r\n        else {\r\n            let data = await this.query.query(this.param);\r\n            //let data = await this.query.unpackReturns(res);\r\n            ret = data[this.query.returns[0].name];\r\n        }\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:any) {\r\n        if (item === undefined) this.pageStart = 0;\r\n    }\r\n}\r\n","import { StatelessComponent } from 'react';\r\nimport { CEntity, EntityUI } from '../CVEntity';\r\nimport { Query } from '../../uqs';\r\nimport { VQueryMain } from './vQueryMain';\r\nimport { VQuerySelect } from './vQuerySelect';\r\n\r\nexport interface QueryUI extends EntityUI {\r\n    CQuery?: typeof CQuery;\r\n    CQuerySelect?: typeof CQuerySelect;\r\n    main?: typeof VQueryMain;\r\n    row?: StatelessComponent;\r\n    queryRow?: StatelessComponent;\r\n    selectRow?: StatelessComponent;\r\n}\r\n\r\nexport abstract class CQueryBase extends CEntity<Query, QueryUI> {\r\n}\r\n\r\nexport class CQuery extends CQueryBase {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VQueryMain);\r\n    }\r\n\r\n    protected get VQueryMain():typeof VQueryMain {return this.ui && this.ui.main || VQueryMain}\r\n}\r\n\r\nexport class CQuerySelect extends CQueryBase {\r\n    protected async internalStart(param?:any) {\r\n        await this.openVPage(this.VQuerySelect, param);\r\n    }\r\n\r\n    protected get VQuerySelect():typeof VQuerySelect {return VQuerySelect}\r\n}\r\n","export * from './cQuery';\r\nexport * from './vQueryMain';\r\nexport * from './vQuerySelect';","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\r\nimport { ResUploader } from '../resUploader';\r\nimport { Image } from '../image';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { ItemEdit } from './itemEdit';\r\n\r\nexport class ImageItemEdit extends ItemEdit {\r\n    protected uiItem: UiTextItem;\r\n    private resUploader: ResUploader;\r\n    @observable private resId: string;\r\n    @observable private overSize: boolean = false;\r\n\r\n    protected async internalStart():Promise<any> {\r\n        this.resId = this.value;        \r\n        return new Promise<any>((resolve, reject) => {\r\n            nav.push(React.createElement(this.page, {resolve:resolve, reject:reject}), ()=>reject());\r\n        });\r\n    }\r\n\r\n    private upload = async () => {\r\n        if (!this.resUploader) return;\r\n        let ret = await this.resUploader.upload();\r\n        if (ret === null) {\r\n            this.overSize = true;\r\n            setTimeout(() => this.overSize = false, 3000);\r\n            return;\r\n        }\r\n        this.resId = ret;\r\n        this.isChanged = (this.resId != this.value);\r\n    }\r\n\r\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\r\n        let {resolve} = props;\r\n        let right = <button\r\n            className=\"btn btn-sm btn-success\"\r\n            disabled={!this.isChanged}\r\n            onClick={()=>resolve(this.resId)}>保存</button>;\r\n        let overSize:any;\r\n        if (this.overSize === true) {\r\n            overSize = <div className=\"text-danger\">\r\n                <i className=\"fa fa-times-circle\" /> 图片文件大小超过2M，无法上传\r\n            </div>;\r\n        }\r\n        return <Page header={'更改' + this.label} right={right}>\r\n            <div className=\"my-3 px-3 py-3 bg-white\">\r\n                <div>\r\n                    <div>上传图片：</div>\r\n                    <div className=\"my-3\">\r\n                        <ResUploader ref={v=>this.resUploader=v} multiple={false} maxSize={2048} />\r\n                    </div>\r\n                    <div>\r\n                        <button className=\"btn btn-primary\" onClick={this.upload}>上传</button>\r\n                    </div>\r\n                </div>\r\n                {overSize}\r\n                <div className=\"small muted my-4\">支持JPG、GIF、PNG格式图片，不超过2M。</div>\r\n                <div className=\"d-flex\">\r\n                    <div className=\"w-12c h-12c mr-4\"\r\n                        style={{border: '1px dotted gray', padding: '8px'}}>\r\n                        <Image className=\"w-100 h-100\" src={this.resId} />\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"small\">图片预览</div>\r\n                        <Image className=\"w-4c h-4c mt-3\" src={this.resId} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    })\r\n}\r\n","import {CenterApiBase} from '../net';\r\nimport {User, decodeUserToken} from '../user';\r\n//import { nav } from '../ui';\r\n\r\nexport interface RegisterParameter {\r\n    nick:string, \r\n    user:string, \r\n    pwd:string,\r\n    country:number, \r\n    mobile:number, \r\n    mobileCountry:number,\r\n    email:string,\r\n    verify:string,\r\n};\r\n\r\nexport class UserApi extends CenterApiBase {\r\n    async login(params: {user: string, pwd: string, guest: number}): Promise<any> {\r\n        //(params as any).device = nav.local.device.get();\r\n        let ret = await this.get('login', params);\r\n        switch (typeof ret) {\r\n            default: return;\r\n            case 'string': return decodeUserToken(ret);\r\n            case 'object':\r\n                let token = ret.token;\r\n                let user = decodeUserToken(token);\r\n                let {nick, icon} = ret;\r\n                if (nick) user.nick = nick;\r\n                if (icon) user.icon = icon;\r\n                return user;\r\n        }\r\n        // !== undefined) return decodeToken(token);\r\n    }\r\n    async register(params: RegisterParameter): Promise<any>\r\n    {\r\n        return await this.post('register', params);\r\n    }\r\n\r\n    async setVerify(account:string, type:'mobile'|'email') {\r\n        return await this.post('set-verify', {account:account, type:type});\r\n    }\r\n\r\n    async checkVerify(account:string, verify:string) {\r\n        return await this.post('check-verify', {account:account, verify:verify});\r\n    }\r\n\r\n    async isExists(account:string) {\r\n        return await this.get('is-exists', {account:account});\r\n    }\r\n\r\n    async resetPassword(account:string, password:string, verify:string, type:'mobile'|'email') {\r\n        return await this.post('reset-password', {account:account, password, verify, type});\r\n    }\r\n    \r\n    async userSetProp(prop:string, value:any) {\r\n        await this.post('tie/user-set-prop', {prop:prop, value:value});\r\n    }\r\n}\r\n\r\nexport const userApi = new UserApi('tv/user/', undefined);\r\n","import * as React from 'react';\r\n\r\nexport function Loading() {\r\n    return <div className=\"d-flex h-100 align-items-center justify-content-center\">\r\n        <i className=\"fa fa-spinner fa-spin fa-2x fa-fw text-info\" />\r\n    </div>;\r\n}\r\n\r\n/*\r\nexport function Loading() {\r\n    return <div style={{height:'100%'}} className=\"d-flex flex-fill align-items-center justify-content-center\">\r\n    <div className=\"d-flex align-items-center justify-content-center slide text-info\" style={{width:'5em', height:'2em'}}>\r\n        加载中...\r\n    </div>\r\n    </div>\r\n}\r\n*/\r\n\r\n\r\n","import * as React from 'react';\r\nimport { nav } from './nav';\r\n\r\nexport interface ResUploaderProps {\r\n    className?: string;\r\n    multiple?: boolean;\r\n    maxSize?: number;\r\n    onFilesChange?: (evt: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nexport class ResUploader extends React.Component<ResUploaderProps> {\r\n    private fileInput: HTMLInputElement;\r\n\r\n    upload = async ():Promise<string> => {\r\n        let {maxSize} = this.props;\r\n        if (maxSize === undefined || maxSize <= 0) \r\n            maxSize = 100000000000;\r\n        else\r\n            maxSize = maxSize * 1024;\r\n        let resUrl = nav.resUrl + 'upload';\r\n        var files:FileList = this.fileInput.files;\r\n        var data = new FormData();\r\n        let len = files.length;\r\n        for (let i=0; i<len; i++) {\r\n            let file = files[i];\r\n            if (file.size > maxSize) return null;\r\n            data.append('files[]', file, file.name);\r\n        }\r\n  \r\n        try {\r\n            let abortController = new AbortController();\r\n            let res = await fetch(resUrl, {\r\n                method: \"POST\",\r\n                body: data,\r\n                signal: abortController.signal,\r\n            });\r\n            let json = await res.json();\r\n            return ':' + json.res.id;\r\n        }\r\n        catch (err) {\r\n            console.error('%s %s', resUrl, err);\r\n        }\r\n    }\r\n    render() {\r\n        let {className, multiple, onFilesChange} = this.props;\r\n        return <input \r\n            className={className}\r\n            ref={t=>this.fileInput=t} \r\n            onChange={onFilesChange}\r\n            type='file' name='file' multiple={multiple} />\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { List, LMR, FA, Page, nav, Controller, TypeVPage, VPage, resLang, NavSettings} from '../../ui';\r\nimport { loadAppUqs, appInFrame, getExHash, isDevelopment, UqAppData, UqData} from '../../net';\r\nimport { CUq, UqUI } from './cUq';\r\nimport { centerApi } from '../centerApi';\r\nimport { UqApp } from '../uqs';\r\n\r\nexport interface RoleAppUI {\r\n    CApp?: typeof CApp;\r\n    CUq?: typeof CUq;\r\n    main?: TypeVPage<CApp>;\r\n    uqs: {[uq:string]: UqUI | (()=>Promise<UqUI>)};\r\n    res?: any;\r\n}\r\n\r\nexport interface AppUI extends RoleAppUI, NavSettings {\r\n    appName: string; // 格式: owner/appName\r\n    roles?: {[role:string]: RoleAppUI | (()=>Promise<RoleAppUI>)};\r\n}\r\n\r\nexport class CApp extends Controller {\r\n    //private appOwner:string;\r\n    //private appName:string;\r\n    name: string;\r\n    uqApp: UqApp;\r\n    private cImportUqs: {[uq:string]: CUq} = {};\r\n    protected ui:AppUI;\r\n    appUnits:any[];\r\n\r\n    constructor(ui:AppUI) {\r\n        super(resLang(ui && ui.res));\r\n        nav.setSettings(ui);\r\n        this.name = ui.appName;\r\n        if (this.name === undefined) {\r\n            throw 'appName like \"owner/app\" must be defined in UI';\r\n        }\r\n        if (ui.uqs === undefined) ui.uqs = {};\r\n        this.ui = ui;\r\n        this.caption = this.res.caption || 'Tonva';\r\n    }\r\n    \r\n    readonly caption: string; // = 'View Model 版的 Uq App';\r\n    cUqCollection: {[uq:string]: CUq} = {};\r\n\r\n    /*\r\n    async startDebug() {\r\n        let appName = this.appOwner + '/' + this.appName;\r\n        let cApp = new CApp({appName: appName, uqs:{}} );\r\n        let keepNavBackButton = true;\r\n        await cApp.start(keepNavBackButton);    \r\n    }\r\n    */\r\n\r\n    /*\r\n    protected async loadUqs(uqAppData:UqAppData): Promise<string[]> {\r\n        let retErrors:string[] = [];\r\n        let unit = appInFrame.unit;\r\n        //let app = await loadAppUqs(this.appOwner, this.appName);\r\n        let {id, uqs} = uqAppData;\r\n        this.id = id;\r\n\r\n        let promises: PromiseLike<string>[] = [];\r\n        let promiseChecks: PromiseLike<boolean>[] = [];\r\n        let roleAppUI = await this.buildRoleAppUI();\r\n        this.ui = roleAppUI;\r\n        for (let appUq of uqs) {\r\n            let {id:uqId, uqOwner, uqName, access} = appUq;\r\n            let uq = uqOwner + '/' + uqName;\r\n            let uqUI = roleAppUI && roleAppUI.uqs && roleAppUI.uqs[uq];\r\n            let cUq = this.newCUq(uq, uqId, access, uqUI || {});\r\n            this.cUqCollection[uq] = cUq;\r\n            promises.push(cUq.loadSchema());\r\n            promiseChecks.push(cUq.uq.uqApi.checkAccess());\r\n        }\r\n        let results = await Promise.all(promises);\r\n        Promise.all(promiseChecks).then((checks) => {\r\n            for (let c of checks) {\r\n                if (c === false) {\r\n                    //debugger;\r\n                    //nav.start();\r\n                    //return;\r\n                }\r\n            }\r\n        });\r\n        for (let result of results)\r\n        {\r\n            let retError = result; // await cUq.loadSchema();\r\n            if (retError !== undefined) {\r\n                retErrors.push(retError);\r\n                continue;\r\n            }\r\n        }\r\n        if (retErrors.length === 0) return;\r\n        return retErrors;\r\n    }\r\n    */\r\n    /*\r\n    private async buildRoleAppUI():Promise<AppUI> {\r\n        if (!this.ui) return undefined;\r\n        let {hashParam} = nav;\r\n        if (!hashParam) return this.ui;\r\n        let {roles} = this.ui;\r\n        let roleAppUI = roles && roles[hashParam];\r\n        if (!roleAppUI) return this.ui;\r\n        let ret:AppUI = {} as any;\r\n        for (let i in this.ui) {\r\n            if (i === 'roles') continue;\r\n            ret[i] = this.ui[i];\r\n        }\r\n        if (typeof roleAppUI === 'function') roleAppUI = await roleAppUI();\r\n        _.merge(ret, roleAppUI);\r\n        return ret;\r\n    }\r\n    */\r\n\r\n    getImportUq(uqOwner:string, uqName:string):CUq {\r\n        let uq = uqOwner + '/' + uqName;\r\n        let cUq = this.cImportUqs[uq];\r\n        if (cUq !== undefined) return cUq;\r\n        let ui = this.ui && this.ui.uqs && this.ui.uqs[uq];\r\n        let uqId = -1; // unknown\r\n        this.cImportUqs[uq] = cUq = this.getCUq(uq);\r\n        //this.newCUq(uq, uqId, undefined, ui || {});\r\n        /*\r\n        let retError = await cUq.loadSchema();\r\n        if (retError !== undefined) {\r\n            console.error(retError);\r\n            debugger;\r\n            return;\r\n        }\r\n        */\r\n        return cUq;\r\n    }\r\n\r\n    protected newCUq(uqData: UqData, uqUI: UqUI) {\r\n        let cUq = new (this.ui.CUq || CUq)(this, uqData, uqUI);\r\n        Object.setPrototypeOf(cUq.x, this.x);\r\n        return cUq;\r\n    }\r\n\r\n    get cUqArr():CUq[] {\r\n        let ret:CUq[] = [];\r\n        for (let i in this.cUqCollection) {\r\n            ret.push(this.cUqCollection[i]);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    getCUq(uq:string):CUq {\r\n        return this.cUqCollection[uq];\r\n    }\r\n\r\n    protected get VAppMain():TypeVPage<CApp> {return (this.ui&&this.ui.main) || VAppMain}\r\n    protected async beforeStart():Promise<boolean> {\r\n        try {\r\n            let retErrors = await this.load();\r\n            //let app = await loadAppUqs(this.appOwner, this.appName);\r\n            // if (isDevelopment === true) {\r\n            // 这段代码原本打算只是在程序员调试方式下使用，实际上，也可以开放给普通用户，production方式下\r\n            let {predefinedUnit} = appInFrame;\r\n            //let {id} = app;\r\n            //this.id = id;\r\n            let {user} = nav;\r\n            if (user !== undefined && user.id > 0) {\r\n                this.appUnits = await centerApi.userAppUnits(this.uqApp.id);\r\n                switch (this.appUnits.length) {\r\n                    case 0:\r\n                        this.showUnsupport(predefinedUnit);\r\n                        return false;\r\n                    case 1:\r\n                        let appUnit = this.appUnits[0].id;\r\n                        if (appUnit === undefined || appUnit < 0 || \r\n                            predefinedUnit !== undefined && appUnit != predefinedUnit)\r\n                        {\r\n                            this.showUnsupport(predefinedUnit);\r\n                            return false;\r\n                        }\r\n                        appInFrame.unit = appUnit;\r\n                        break;\r\n                    default:\r\n                        if (predefinedUnit>0 && this.appUnits.find(v => v.id===predefinedUnit) !== undefined) {\r\n                            appInFrame.unit = predefinedUnit;\r\n                            break;\r\n                        }\r\n                        nav.push(<this.selectUnitPage />)\r\n                        return false;\r\n                }\r\n            }\r\n            //}\r\n\r\n            //let retErrors = await this.loadUqs(app);\r\n            if (retErrors !== undefined) {\r\n                this.openPage(<Page header=\"ERROR\">\r\n                    <div className=\"m-3\">\r\n                        <div>Load Uqs 发生错误：</div>\r\n                        {retErrors.map((r, i) => <div key={i}>{r}</div>)}\r\n                    </div>\r\n                </Page>);\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        catch (err) {\r\n            nav.push(<Page header=\"App start error!\">\r\n                <pre>\r\n                    {typeof err === 'string'? err : err.message}\r\n                </pre>\r\n            </Page>);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    private async load(): Promise<string[]> {\r\n        this.uqApp = new UqApp(this.name);\r\n        let {appOwner, appName} = this.uqApp;\r\n        let uqAppData = await loadAppUqs(appOwner, appName);\r\n        let {id, uqs} = uqAppData;\r\n        this.uqApp.id = id;\r\n\r\n        let retErrors:string[] = [];\r\n\r\n        let promiseInits: PromiseLike<void>[] = [];\r\n        let promises: PromiseLike<string>[] = [];\r\n        let promiseChecks: PromiseLike<boolean>[] = [];\r\n        for (let uqData of uqs) {\r\n            let {id, uqOwner, uqName, access} = uqData;\r\n            let uqFullName = uqOwner + '/' + uqName;\r\n            let uqUI = this.ui.uqs[uqFullName] as UqUI || {};\r\n            let cUq = this.newCUq(uqData, uqUI);\r\n            this.cUqCollection[uqFullName] = cUq;\r\n            this.uqApp.addUq(cUq.uq);\r\n            promiseInits.push(cUq.init());\r\n        }\r\n        await Promise.all(promiseInits);\r\n\r\n        for (let i in this.cUqCollection) {\r\n            let cUq = this.cUqCollection[i];\r\n            promises.push(cUq.loadEntities());\r\n            promiseChecks.push(cUq.checkEntities());\r\n        }\r\n        let results = await Promise.all(promises);\r\n        Promise.all(promiseChecks).then((checks) => {\r\n            for (let c of checks) {\r\n                if (c === false) {\r\n                    //debugger;\r\n                    //nav.start();\r\n                    //return;\r\n                }\r\n            }\r\n        });\r\n        for (let result of results)\r\n        {\r\n            let retError = result; // await cUq.loadSchema();\r\n            if (retError !== undefined) {\r\n                retErrors.push(retError);\r\n                continue;\r\n            }\r\n        }\r\n        if (retErrors.length === 0) {\r\n            this.uqApp.setTuidImportsLocal();\r\n            return;\r\n        }\r\n        return retErrors;\r\n    }\r\n\r\n    protected async internalStart(param:any) {\r\n        if (param !== true) {\r\n            this.clearPrevPages();\r\n        }\r\n        await this.showMainPage();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        return this.renderView(this.VAppMain);\r\n    }\r\n\r\n    // 如果是独立app，删去显示app之前的页面。\r\n    // 如果非独立app，则不删\r\n    protected clearPrevPages() {\r\n        nav.clear();\r\n    }\r\n\r\n    private showUnsupport(predefinedUnit: number) {\r\n        this.clearPrevPages();\r\n        let {user} = nav;\r\n        let userName:string = user? user.name : '[未登录]';\r\n        let {appOwner, appName} = this.uqApp;\r\n        this.openPage(<Page header=\"APP无法运行\" logout={true}>\r\n            <div className=\"m-3 text-danger container\">\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-sm-3 font-weight-bold\">登录用户</div>\r\n                    <div className=\"col-sm text-body\">{userName}</div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-sm-3 font-weight-bold\">App</div>\r\n                    <div className=\"col-sm text-body\">{`${appOwner}/${appName}`}</div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-sm-3 font-weight-bold\">预设小号</div>\r\n                    <div className=\"col-sm text-body\">{predefinedUnit || <small className=\"\">[无预设小号]</small>}</div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-sm-3 font-weight-bold\">\r\n                        可能原因<FA name=\"exclamation-triangle\" />\r\n                    </div>\r\n                    <div className=\"col-sm text-body\">\r\n                        <ul className=\"p-0\">\r\n                            <li>没有小号运行 {this.ui.appName}</li>\r\n                            <li>用户 <b>{userName}</b> 没有加入任何一个运行{this.ui.appName}的小号</li>\r\n                            {\r\n                                predefinedUnit && \r\n                                <li>预设小号 <b>{predefinedUnit}</b> 没有运行App {this.ui.appName}</li>\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-sm-3 font-weight-bold\">小号{predefinedUnit}</div>\r\n                    <div className=\"col-sm text-body\">\r\n                        预设小号定义在 public/unit.json 文件中。\r\n                        定义了这个文件的程序，只能由url直接启动。\r\n                        用户第一次访问app之后，会缓存在localStorage里。<br/>\r\n                        如果要删去缓存的预定义Unit，logout然后再login。\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Page>)\r\n    }\r\n\r\n    private async showMainPage() {\r\n        // #tv-RwPBwMef-23-sheet-api-108\r\n        let exHash = getExHash();\r\n        if (exHash !== undefined) {\r\n            let parts = exHash.split('-');\r\n            if (parts.length > 3) {\r\n                let action = parts[3];\r\n                // sheet_debug 表示centerUrl是debug方式的\r\n                if (action === 'sheet' || action === 'sheet_debug') {\r\n                    let uqId = Number(parts[4]);\r\n                    let sheetTypeId = Number(parts[5]);\r\n                    let sheetId = Number(parts[6]);\r\n                    let cUq = this.getCUqFromId(uqId);\r\n                    if (cUq === undefined) {\r\n                        alert('unknown uqId: ' + uqId);\r\n                        return;\r\n                    }\r\n                    this.clearPrevPages();\r\n                    await cUq.navSheet(sheetTypeId, sheetId);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        this.openVPage(this.VAppMain);\r\n    }\r\n\r\n    private getCUqFromId(uqId:number): CUq {\r\n        for (let i in this.cUqCollection) {\r\n            let cUq = this.cUqCollection[i];\r\n            if (cUq.uq.id === uqId) return cUq;\r\n        }\r\n        return;\r\n    }\r\n\r\n    renderRow = (item: any, index: number):JSX.Element => {\r\n        let {id, nick, name} = item;\r\n        return <LMR className=\"px-3 py-2\" right={'id: ' + id}>\r\n            <div>{nick || name}</div>\r\n        </LMR>;\r\n    }\r\n    onRowClick = async (item: any) => {\r\n        appInFrame.unit = item.id; // 25;\r\n        await this.start();\r\n    }\r\n\r\n    protected selectUnitPage = () => {\r\n        return <Page header=\"选择小号\" logout={true}>\r\n            <List items={this.appUnits} item={{render: this.renderRow, onClick: this.onRowClick}}/>\r\n        </Page>\r\n    }\r\n}\r\n\r\nclass VAppMain extends VPage<CApp> {\r\n    async open(param?:any) {\r\n        this.openPage(this.appPage);\r\n    }\r\n\r\n    render(param?:any) {\r\n        return this.appContent();\r\n    }\r\n\r\n    protected appPage = () => {\r\n        let {caption} = this.controller;\r\n        return <Page header={caption} logout={async()=>{appInFrame.unit = undefined}}>\r\n            {this.appContent()}\r\n        </Page>;\r\n    }\r\n\r\n    protected appContent = () => {\r\n        let {cUqArr} = this.controller;\r\n        let content:any;\r\n        if (cUqArr.length === 0) {\r\n            content = <div className=\"text-danger\">\r\n                <FA name=\"\" /> 此APP没有绑定任何的UQ\r\n            </div>;\r\n        }\r\n        else {\r\n            content = cUqArr.map((v,i) => <div key={i}>{v.render()}</div>);\r\n        }\r\n        return <>{content}</>;\r\n    };\r\n}\r\n","import React from 'react';\r\nimport { FA } from '../../ui';\r\n\r\nfunction icon(className:string, name:string) {\r\n    return <FA className={className} name={name} fixWidth={true} />;\r\n}\r\n\r\nexport const entityIcons:{[type:string]:JSX.Element} = {\r\n    tuid: icon('text-info', 'list-alt'),\r\n    action: icon('text-info', 'hand-o-right'),\r\n    map: icon('text-muted', 'list-ul'),\r\n    book: icon('text-muted', 'book'),\r\n    query: icon('text-warning', 'search'),\r\n    history: icon('text-info', 'hand-o-right'),\r\n    pending: icon('text-info', 'forward'),\r\n    sheet: icon('text-primary', 'wpforms'),\r\n};\r\n","import { Controller } from '../../ui';\r\nimport { CUq } from './cUq';\r\n\r\nexport abstract class ControllerUq extends Controller {\r\n    constructor(cUq: CUq, res:any) {\r\n        super(res);\r\n        this.cUq = cUq;\r\n    }\r\n    cUq: CUq;\r\n}\r\n","import {CenterApiBase} from '../net';\r\n\r\n//\r\n\r\nexport class CenterApi extends CenterApiBase {\r\n    async userAppUnits(app:number):Promise<any[]> {\r\n        return await this.get('tie/user-app-units', {app:app});\r\n    }\r\n}\r\n\r\nexport const centerApi = new CenterApi('tv/', undefined);\r\n","export * from './rule';\r\nexport * from './field';\r\nexport * from './face';\r\nexport * from './rowContainer';\r\nexport * from './formView';\r\nexport * from './TonvaForm';\r\nexport {ControlBase} from './control';\r\n","import * as React from 'react';\r\nimport {FormEvent} from 'react';\r\nimport {computed} from 'mobx';\r\nimport {uid} from 'tonva';\r\nimport {Rule} from './rule';\r\nimport {Field} from './field';\r\nimport {Face} from './face';\r\nimport {CreateControl, ButtonsControl} from './control';\r\nimport {RowContainer, CreateRow, bootstrapCreateRow, elementCreateRow} from './rowContainer';\r\n\r\nexport interface FieldView {\r\n    field: Field;\r\n    face?: Face;\r\n}\r\n\r\nexport interface LabeledRow {\r\n    label?: string;\r\n    createRow?: CreateRow;\r\n    createControl?: CreateControl;\r\n    help?: JSX.Element;\r\n}\r\n\r\nexport interface FieldRow extends LabeledRow, FieldView {\r\n}\r\n\r\nexport interface GroupRow extends LabeledRow {\r\n    group: FieldView[];\r\n}\r\n\r\nexport type LabelFormRow = FieldRow|GroupRow|LabeledRow;\r\nexport type FormRow = LabelFormRow|JSX.Element;\r\n\r\nexport interface SubmitResult {\r\n    success: boolean;\r\n    message?: string\r\n    result?: any;\r\n}\r\n\r\nexport interface FormProps {\r\n    formRows: FormRow[];\r\n    //context?: any;              // form context，比如，可以是EntitiesUI\r\n    rules?: Rule | Rule[];\r\n    onSubmit: (values:any) => Promise<SubmitResult|undefined>;\r\n    submitButton?: string|JSX.Element;\r\n    otherButton?: string|JSX.Element;\r\n    onOther?: (values:any) => void;\r\n    createRow?: CreateRow;\r\n    createControl?: CreateControl;\r\n    readOnly?: boolean;\r\n}\r\n\r\nexport class FormView {\r\n    uid:string;\r\n    private rows: RowContainer[] = [];\r\n    private buttonsRow: RowContainer;\r\n    props: FormProps;\r\n    createControl?: CreateControl;\r\n    constructor(props:FormProps) {\r\n        this.uid = uid();\r\n        this.props = props;\r\n        this.buildRows(props);\r\n        this.createControl = props.createControl;\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    @computed get hasError():boolean {\r\n        let ret = this.rows.map((v, index) => index + ': ' + v.hasError + '\\n');\r\n        console.log(ret);\r\n        return this.rows.some(row => row.hasError);\r\n    }\r\n    @computed get nothing():boolean {\r\n        let ret = this.rows.every(row => !row.filled);\r\n        return ret;\r\n    }\r\n\r\n    readValues():any {\r\n        let values = {} as any;\r\n        for (let row of this.rows) {\r\n            row.readValues(values);\r\n        }\r\n        return values;\r\n    }\r\n\r\n    clear() {\r\n        for (let row of this.rows) {\r\n            row.clear();\r\n        }\r\n    }\r\n\r\n    clearErrors() {\r\n        for (let row of this.rows) {\r\n            row.clearErrors();\r\n        }\r\n    }\r\n\r\n    setError(fieldName:string, error:string) {\r\n        for (let row of this.rows) {\r\n            row.setError(fieldName, error);\r\n        }\r\n    }\r\n\r\n    setInitValues(initValues:any) {\r\n        if (initValues === undefined) return;\r\n        for (let row of this.rows) {\r\n            row.setInitValues(initValues);\r\n        }\r\n    }\r\n\r\n    private buildRows(props:FormProps) {\r\n        let {formRows, createRow} = props;\r\n        if (formRows !== undefined) {\r\n            for (let row of formRows) {\r\n                this.rows.push(this.buildRow(row, createRow));\r\n            }\r\n            if (this.props.readOnly !== true) {\r\n                this.buttonsRow = this.buildRow({createControl:this.createButtons.bind(this)}, undefined);\r\n            }\r\n        }\r\n        else {\r\n            this.rows.push(elementCreateRow(this, <div className=\"text-warning\">TonvaForm need formRows defined</div>));\r\n        }\r\n    }\r\n\r\n    private buildRow(formRow: FormRow, formRowCreator: CreateRow):RowContainer {\r\n        let createRow:CreateRow;\r\n        let type = (formRow as JSX.Element).type;\r\n        if (type !== undefined) {\r\n            createRow = elementCreateRow;\r\n        }\r\n        else {\r\n            createRow = (formRow as (FieldRow | GroupRow | LabeledRow)).createRow;\r\n            if (createRow === undefined) {\r\n                createRow = formRowCreator;\r\n                if (createRow === undefined) createRow = bootstrapCreateRow;\r\n            }\r\n        }\r\n        let row = createRow(this, formRow);\r\n        return row;\r\n    }\r\n\r\n    private createButtons(form:FormView, row: FormRow) {\r\n        return new ButtonsControl(form);\r\n    }\r\n\r\n    private isOk():boolean {\r\n        let isOk = true;\r\n        for (let row of this.rows) {\r\n            if (!row.isOk()) isOk = false;\r\n        }\r\n        return isOk;\r\n    }\r\n\r\n    render():JSX.Element {\r\n        return <form onSubmit={this.onSubmit}>\r\n            {this.rows.map((row,index) => row.render(this.uid + index))}\r\n            {this.buttons()}\r\n        </form>;\r\n    }\r\n\r\n    buttons():JSX.Element {\r\n        if (this.buttonsRow === undefined) return;\r\n        return this.buttonsRow.render(this.uid + this.rows.length);\r\n    }\r\n    \r\n    async onSubmit(event:FormEvent<HTMLFormElement>) {\r\n        event.preventDefault();\r\n        if (!this.isOk()) return;\r\n        let values = this.readValues();\r\n        await this.props.onSubmit(values);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Page, List, Muted, LMR } from '../../../ui';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../uqs';\r\nimport { CSheet, SheetUI } from './cSheet';\r\n\r\nexport class VSheetMain extends VEntity<Sheet, SheetUI, CSheet> {\r\n    async open() {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    newClick = () => this.event('new');\r\n    schemaClick = () => this.event('schema'); \r\n    archivesClick = () => this.event('archives');\r\n    sheetStateClick = (state) => this.event('state', state);\r\n\r\n    renderState = (item:any, index:number) => {\r\n        let {state, count} = item;\r\n        if (count === 0) return null;\r\n        let badge = <span className=\"badge badge-success ml-5 align-self-end\">{count}</span>;\r\n        return <LMR className=\"px-3 py-2\" left={this.controller.getStateLabel(state)} right={badge} />;\r\n    }\r\n\r\n    protected view = observer(() => {\r\n        let list = this.controller.statesCount.filter(row=>row.count);\r\n        let right = <button className=\"btn btn-outline-primary\" onClick={this.archivesClick}>已归档</button>;\r\n        let templet:any;\r\n        if (this.isDev === true) {\r\n            templet = <button className=\"btn btn-primary mr-2\" color=\"primary\" onClick={this.schemaClick}>模板</button>;\r\n        }\r\n        return <Page header={this.label}>\r\n            <LMR\r\n                className=\"mx-3 my-2\"\r\n                right={right}>\r\n                <button className=\"btn btn-primary mr-2\" color=\"primary\" onClick={this.newClick}>新建</button>\r\n                {templet}\r\n            </LMR>\r\n            <List className=\"my-2\"\r\n                header={<Muted className=\"mx-3 my-1\">待处理{this.label}</Muted>}\r\n                none=\"[ 无 ]\"\r\n                items={list}\r\n                item={{render:this.renderState, onClick:this.sheetStateClick}} />\r\n        </Page>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from '../../../ui';\r\nimport { Sheet } from '../../uqs';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { SheetUI, CSheet } from './cSheet';\r\n\r\nexport class VSheetNew extends VEntity<Sheet, SheetUI, CSheet> {\r\n    vForm: VForm;\r\n\r\n    async open(param?:any) {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    private onSubmit = async ():Promise<void> => {\r\n        let values = this.vForm.getValues();\r\n        let valuesWithBox = this.vForm.values;\r\n        //let ret = \r\n        await this.controller.onSave(values, valuesWithBox);\r\n        /*\r\n        this.ceasePage();\r\n        //this.openPage(this.finishedPage);\r\n        await this.controller.showSaved(ret);\r\n        */\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render()}\r\n    </Page>;\r\n}\r\n","import * as React from 'react';\r\nimport {List, Muted, LMR, EasyDate, FA} from '../../../ui';\r\nimport { Sheet } from '../../uqs';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CSheet, SheetUI, SheetData } from './cSheet';\r\n\r\nconst leftFlowStyle = {width: '8rem'};\r\n\r\nexport abstract class VSheetView extends VEntity<Sheet, SheetUI, CSheet> {\r\n    protected vForm: VForm;\r\n    protected sheetData: SheetData;\r\n    //data: any;\r\n    //state: string;\r\n    //flows:any[];\r\n\r\n    flowRow = (item:any, index:number):JSX.Element => {\r\n        let {date, user, preState, state, action} = item;\r\n        if (action === undefined) action = <><FA className=\"text-primary\" name=\"pencil-square-o\" /> 制单</>;\r\n        let to;\r\n        switch (state) {\r\n            case '$': break;\r\n            case '#': to = <><FA className=\"text-success\" name=\"file-archive-o\" /></>; break;\r\n            default: to = <><FA className=\"text-muted\" name=\"arrow-right\" /> &nbsp; {state}</>; break;\r\n        }\r\n        /*\r\n        return <div className=\"row\">\r\n            <div className=\"col-sm\"></div>\r\n            <div className=\"col-sm\"><div className=\"p-2\">{to}</div></div>\r\n            <div className=\"col-sm text-right\"><div className=\"p-2\"><Muted><EasyDate date={date} /></Muted></div></div>\r\n        </div>;\r\n        */\r\n        return <LMR \r\n            left={<div className=\"pl-3 py-2\" style={leftFlowStyle}>{action}</div>}\r\n            right={<div className=\"p-2\"><Muted><EasyDate date={date} /></Muted></div>}>\r\n            <div className=\"p-2\">{to}</div>\r\n        </LMR>;\r\n    }\r\n\r\n    protected sheetView = () => {\r\n        let {brief, flows} = this.sheetData;\r\n        let removed;\r\n        if (brief.state === '-')\r\n            removed = <div className=\"mx-3 my-2\" style={{color:'red'}}>本单据作废</div>;\r\n        return <div>\r\n            {removed}\r\n            {this.vForm.render()}\r\n    \r\n            <List header={<Muted className=\"mx-3 my-1\">流程</Muted>}\r\n                items={flows}\r\n                item={{render:this.flowRow}}/>\r\n        </div>;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from '../../../ui';\r\nimport { VForm, FormMode } from '../form';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\n\r\nexport class VSheetEdit extends VSheetView { //VEntity<Sheet, SheetUI, CSheet> {\r\n    protected sheetData: SheetData;\r\n    async open(param: SheetData) {\r\n        this.sheetData = param;\r\n        this.vForm = this.createForm(this.onSubmit, param.data, FormMode.edit);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSubmit = async ():Promise<void> => {\r\n        let values = this.vForm.getValues();\r\n        await this.controller.saveSheet(values, this.vForm.values);\r\n        this.closePage();\r\n        this.returnCall(this.vForm.values);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render()}\r\n    </Page>;\r\n}\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport { FA, Page } from '../../../ui';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\n\r\nexport class VSheetAction extends VSheetView { \r\n    async open(sheetData:SheetData) {\r\n        this.sheetData = sheetData;\r\n        //let {brief, data, flows} = await this.controller.getSheetData(sheetId);\r\n        //this.brief = brief;\r\n        //this.flows = flows;\r\n        //this.data = data;\r\n        //this.state = this.brief.state;\r\n        this.vForm = this.createForm(undefined, sheetData.data);\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    actionClick = async (action:any) => {\r\n        let {id, flow, state} = this.sheetData.brief;\r\n        let res = await this.controller.action(id, flow, state, action.name);\r\n        this.ceasePage();\r\n        this.openPage(this.acted);\r\n        //alert(jsonStringify(res));\r\n        //await this.backPage();\r\n    }\r\n\r\n    deleteClick = async () => {\r\n        alert('单据作废：程序正在设计中');\r\n    }\r\n\r\n    editClick = async () => {\r\n        //alert('修改单据：程序正在设计中');\r\n        let values = await this.controller.editSheet(this.sheetData);\r\n        this.vForm.setValues(values);\r\n    }\r\n\r\n    protected page = () => {\r\n        let {brief} = this.sheetData;\r\n        let {state, no} = brief;\r\n        let stateLabel = this.controller.getStateLabel(state);\r\n        let {states} = this.entity;\r\n        let s = states.find(v => v.name === state);\r\n        let actionButtons, startButtons;\r\n        if (s === undefined) {\r\n            let text:string, cn:string;\r\n            switch (state) {\r\n                default:\r\n                    text = '不认识的单据状态\\'' + state + '\\'';\r\n                    cn = 'text-info';\r\n                    break;\r\n                case '-': \r\n                    text = '已作废';\r\n                    cn = 'text-danger';\r\n                    break;\r\n                case '#':\r\n                    text = '已归档';\r\n                    cn = 'text-success';\r\n                    break;\r\n            }\r\n            actionButtons = <div className={classNames(cn)}>[{text}]</div>;\r\n        }\r\n        else {\r\n            actionButtons = <div className=\"flex-grow-1\">{s.actions.map((v,index) => \r\n                <button\r\n                    key={index}\r\n                    className=\"btn btn-primary mr-2\"\r\n                    onClick={()=>this.actionClick(v)}\r\n                >\r\n                    {this.controller.getActionLabel(state, v.name)}\r\n                </button>)}\r\n            </div>;\r\n            if (state === '$') {\r\n                startButtons = <div>\r\n                    <button className=\"btn btn-outline-info ml-2\" onClick={this.editClick}>修改</button>\r\n                    <button className=\"btn btn-outline-danger ml-2\" onClick={this.deleteClick}>作废</button>\r\n                </div>\r\n            }\r\n        };\r\n        return <Page header={this.label + ':' + stateLabel + '-' + no}>\r\n            <div className=\"mb-2\">\r\n                <div className=\"d-flex px-3 py-2 border-bottom bg-light\">\r\n                    {actionButtons}\r\n                    {startButtons}\r\n                </div>\r\n                <this.sheetView />\r\n            </div>\r\n        </Page>;\r\n    }\r\n\r\n    private acted = () => {\r\n        let {discription} = this.sheetData.brief;\r\n        return <Page header=\"已处理\" back=\"close\">\r\n            <div className=\"p-3 d-flex flex-column align-items-center\">\r\n                <div className=\"p-3\">{discription}</div>\r\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已处理！</div>\r\n                <div className=\"p-3\">\r\n                    <button className=\"btn btn-outline-info\" onClick={()=>this.backPage()}>返回</button>\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from '../../../ui';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../uqs';\r\nimport { SheetUI, CSheet } from './cSheet';\r\n\r\nexport class VSheetSchema extends VEntity<Sheet, SheetUI, CSheet> {\r\n    async open(param?:any) {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label + \"模板\"}>\r\n        <pre className=\"mx-3 my-2\">{this.entity.schemaStringify()}</pre>\r\n    </Page>;\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { Page, List, LMR, FA, EasyDate, Muted } from '../../../ui';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../uqs';\r\nimport { SheetUI, CSheet } from './cSheet';\r\n\r\nexport class VArchives extends VEntity<Sheet, SheetUI, CSheet> {\r\n    list: any[];\r\n\r\n    async open() {\r\n        this.list = await this.entity.getArchives(undefined, 10);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    archiveClick = async (brief:any) => {\r\n        if (brief.processing===1) return;\r\n        this.event('archived', brief);\r\n    }\r\n    archiveRow = (row:any, index:number) => {\r\n        let {id, no, discription, date} = row;\r\n        let left = <>\r\n            {row.processing===1? '... ' : ''}\r\n            {row.no} &nbsp; {row.discription}\r\n        </>;\r\n        let right = <Muted><EasyDate date={date} /></Muted>;\r\n        return <LMR className=\"px-3 py-2\" left={left} right={right} />\r\n    }\r\n\r\n    protected view = () => {\r\n        return <Page header={'已归档' + this.label}>\r\n            <List items={this.list} item={{render:this.archiveRow, onClick:this.archiveClick}} />\r\n        </Page>;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { Page, nav, List, Muted, FA, LMR, EasyDate } from '../../../ui';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../uqs';\r\nimport { CSheet, SheetUI } from './cSheet';\r\n\r\nexport class VSheetList extends VEntity<Sheet, SheetUI, CSheet> {\r\n    protected row: (values) => JSX.Element;\r\n    stateName: string;\r\n    stateLabel: string;\r\n\r\n    async open(item:any) {\r\n        this.row = this.ui.listRow || this.rowContent;\r\n        this.stateName = item.state;\r\n        this.stateLabel = this.controller.getStateLabel(this.stateName);\r\n        //await this.controller.getStateSheets(this.stateName, 0, 10);\r\n        await this.controller.pageStateItems.first(this.stateName);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    rowClick = async (brief:any) => {\r\n        if (brief.processing===1) {\r\n            this.event('processing', brief.id);\r\n            return;\r\n        }\r\n        this.event('action', brief.id);\r\n    }\r\n\r\n    private onScrollBottom = () => {\r\n        console.log('onScrollBottom');\r\n        this.controller.pageStateItems.more();\r\n    }\r\n\r\n    protected rowContent = (row:any):JSX.Element => {\r\n        let {id, no, discription, date, processing} = row;\r\n        let left = <>            \r\n            {no} &nbsp; <Muted>{discription}</Muted> {processing===1? '...' : ''}\r\n        </>;\r\n        let right = <Muted><EasyDate date={date} /></Muted>;\r\n        return <LMR className=\"px-3 py-2\" left={left} right={right} />;\r\n    }\r\n\r\n    private renderRow = (row:any, index:number) => <this.row {...row} />\r\n\r\n    protected view = () => {\r\n        //let sheets = this.controller.stateSheets;\r\n        let {pageStateItems} = this.controller;\r\n        return <Page header={this.label + ' - ' + this.stateLabel} onScrollBottom={this.onScrollBottom}>\r\n            <List items={pageStateItems} item={{render:this.renderRow, onClick:this.rowClick}} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from '../../../ui';\r\nimport { VSheetView } from './vSheetView';\r\nimport { CSheet, SheetUI, SheetData } from './cSheet';\r\n\r\nexport interface SheetStateFlows {\r\n    flows: any;\r\n    data: any;\r\n}\r\nexport class VArchived extends VSheetView {\r\n    //protected controller: CSheet;\r\n    //brief: any;\r\n\r\n    async open(sheetData:SheetData) {\r\n        this.sheetData = sheetData;\r\n        /*\r\n        let {brief, data, flows} = await this.controller.getArchived(inBrief.id);\r\n        this.brief = brief;\r\n        this.data = data;\r\n        this.flows = flows;\r\n        */\r\n        this.vForm = this.createForm(undefined, this.sheetData.data);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => {\r\n        let {brief} = this.sheetData;\r\n        return <Page header={this.label + ':' + '-' + brief.no}>\r\n            <this.sheetView />\r\n        </Page>;\r\n    };\r\n}\r\n","import { Sheet } from '../../uqs';\r\nimport { SheetUI, CSheet } from './cSheet';\r\nimport { VEntity } from '../CVEntity';\r\n\r\nexport abstract class VSheet extends VEntity<Sheet, SheetUI, CSheet> {\r\n}\r\n","import * as React from 'react';\r\nimport { Page, FA } from '../../../ui';\r\nimport { VSheet } from './vSheet';\r\n\r\nexport class VSheetSaved extends VSheet {\r\n    private brief: any;\r\n    async open(brief?:any) {\r\n        this.brief = brief;\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    private restart = async () => {\r\n        this.ceasePage();\r\n        await this.event('new');\r\n    }\r\n\r\n    actionClick = async (action:any) => {\r\n        this.ceasePage();\r\n        let {id, flow, state} = this.brief;\r\n        let res = await this.controller.action(id, flow, state, action.name);\r\n        this.openPage(this.acted);\r\n    }\r\n\r\n    private buttons = <>\r\n        <button className=\"btn btn-outline-primary mr-3\" onClick={this.restart}>继续开单</button>\r\n        <button className=\"btn btn-outline-info\" onClick={()=>this.backPage()}>返回</button>\r\n    </>;\r\n\r\n    private view = () => {\r\n        let {states} = this.entity;\r\n        const state = '$';\r\n        let s = states.find(v => v.name === state);\r\n        let actionButtons = <>{s.actions.map((v,index) => \r\n            <button\r\n                key={index}\r\n                className=\"btn btn-primary mr-3\"\r\n                onClick={()=>this.actionClick(v)}\r\n            >\r\n                {this.controller.getActionLabel(state, v.name)}\r\n            </button>)}\r\n        </>;\r\n        return <Page header=\"已保存\" back=\"close\">\r\n            <div className=\"p-3 d-flex flex-column align-items-center\">\r\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已保存！系统尚未处理</div>\r\n                <div className=\"p-3\">\r\n                    {actionButtons}\r\n                    {this.buttons}\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    }\r\n\r\n    private acted = () => {\r\n        return <Page>\r\n            <div className=\"p-3 d-flex flex-column align-items-center\">\r\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已处理！</div>\r\n                <div className=\"p-3\">\r\n                    {this.buttons}\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { nav, Page } from '../../../ui';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\n\r\nexport class VSheetProcessing extends VSheetView { \r\n    async open(sheetData:SheetData) {\r\n        this.sheetData = sheetData;\r\n        //let {brief, data, flows} = await this.controller.getSheetData(sheetId);\r\n        //this.brief = brief;\r\n        //this.flows = flows;\r\n        //this.data = data;\r\n        //this.state = this.brief.state;\r\n        this.vForm = this.createForm(undefined, sheetData.data);\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    protected page = () => {\r\n        let {brief} = this.sheetData;\r\n        let {state, no} = brief;\r\n        let stateLabel = this.controller.getStateLabel(state);\r\n        return <Page header={this.label + ':' + stateLabel + '-' + no}>\r\n            <div className=\"mb-2\">\r\n                <div className=\"d-flex px-3 py-2 border-bottom bg-light\">\r\n                    正在处理中...\r\n                </div>\r\n                <this.sheetView />\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n","import { IObservableArray, observable } from 'mobx';\r\nimport { postWsToTop } from '../../../net';\r\nimport { TypeVPage, VPage } from '../../../ui';\r\nimport { PageItems } from '../../../pageItems'\r\nimport { Sheet, StateCount } from '../../uqs';\r\nimport { CEntity, EntityUI, VEntity } from '../CVEntity';\r\nimport { VSheetMain } from './vMain';\r\nimport { VSheetNew } from './vNew';\r\nimport { VSheetEdit } from './vEdit';\r\nimport { VSheetAction } from './vSheetAction';\r\nimport { VSheetSchema } from './vSchema';\r\nimport { VArchives } from './vArchives';\r\nimport { VSheetList } from './vList';\r\nimport { VArchived } from './vArchived';\r\nimport { VSheetSaved } from './vSaved';\r\nimport { VSheetProcessing } from './vSheetProcessing';\r\n\r\nexport interface SheetActionUI {\r\n    label: string;\r\n}\r\n\r\nexport interface StateUI {\r\n    label: string;\r\n    actions: {[name:string]: SheetActionUI}\r\n}\r\n\r\nexport interface SheetUI extends EntityUI {\r\n    CSheet?: typeof CSheet;\r\n    states?: {[name:string]: StateUI};\r\n    main?: TypeVPage<CSheet>;\r\n    sheetNew?: TypeVPage<CSheet>;\r\n    sheetSaved?: TypeVPage<CSheet>;\r\n    sheetEdit?: TypeVPage<CSheet>;\r\n    sheetAction?: TypeVPage<CSheet>;\r\n    listRow?: (row:any) => JSX.Element;\r\n    sheetTitle?: (sheetValues:any, x:any) => string;      // 返回单据的描述\r\n}\r\n\r\nexport interface SheetData {\r\n    brief: any;\r\n    data: any;\r\n    flows: any[];\r\n}\r\n\r\nexport class CSheet extends CEntity<Sheet, SheetUI> {\r\n    statesCount:IObservableArray<StateCount> = observable.array<StateCount>([], {deep:true});\r\n    curState:string;\r\n    pageStateItems: PageItems<any>;\r\n\r\n    protected async internalStart() {\r\n        await this.loadStateSheetCount();\r\n        this.pageStateItems = this.entity.createPageStateItems();\r\n        await this.openVPage(this.VSheetMain);\r\n    }\r\n\r\n    protected async onMessage(msg: any):Promise<void> {\r\n        let {type, body, from, to, push} = msg;\r\n        if (type === 'sheet') this.onSheet(from, to, body);\r\n    }\r\n    private onSheet(from:number, to:number[], sheetData:any) {\r\n        let me = this.user.id;\r\n        let {id, preState, state} = sheetData;\r\n        console.log({$:'onMessage sheet', from:from, to:to.join(','), id:id, preState:preState, state:state, me:me, sheetData:sheetData})\r\n        if (from === me) {\r\n            this.sheetActPreState(id, preState);\r\n        }\r\n        if (to.find(v=>v===me) !== undefined) {\r\n            this.sheetActState(id, state, sheetData);\r\n        }\r\n    }\r\n    private sheetActPreState(id:number, preState:string) {\r\n        this.changeStateCount(preState, -1);\r\n        if (this.curState === undefined || this.curState !== preState) return;\r\n        /*\r\n        let index = this.stateSheets.findIndex(v => v.id === id);\r\n        if (index>=0) {\r\n            this.stateSheets.splice(index, 1);\r\n        }*/\r\n        let index = this.pageStateItems.items.findIndex(v => v.id === id);\r\n        if (index>=0) {\r\n            this.pageStateItems.items.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    private sheetActState(id:number, state:string, msg:any) {\r\n        this.changeStateCount(state, 1);\r\n        if (this.curState === undefined || this.curState !== state) return;\r\n        /*\r\n        if (this.stateSheets.findIndex(v => v.id === id) < 0) {\r\n            this.stateSheets.push(msg);\r\n        }\r\n        */\r\n        if (this.pageStateItems.items.findIndex(v => v.id === id) < 0) {\r\n            this.pageStateItems.items.push(msg);\r\n        }\r\n    }\r\n\r\n    private changeStateCount(state:string, delta:number) {\r\n        if (state === undefined) return;\r\n        let index = this.statesCount.findIndex(v => v.state === state);\r\n        console.log({$:'changeState', state: state, delta: delta, index: index});\r\n        if (index < 0) return;\r\n        let stateCount = this.statesCount[index];\r\n        stateCount.count += delta;\r\n        if (stateCount.count < 0) stateCount.count = 0;\r\n    }\r\n\r\n    protected get VSheetMain():TypeVPage<CSheet> {return (this.ui&&this.ui.main) || VSheetMain}\r\n    protected get VSheetNew(): TypeVPage<CSheet> {return this.ui.sheetNew || VSheetNew}\r\n    protected get VSheetSaved(): TypeVPage<CSheet> {return this.ui.sheetSaved || VSheetSaved}\r\n    protected get VSheetEdit(): TypeVPage<CSheet> {return this.ui.sheetEdit || VSheetEdit}\r\n    protected get VSheetSchema(): TypeVPage<CSheet> {return VSheetSchema}\r\n    protected get VArchives(): TypeVPage<CSheet> {return VArchives}\r\n    protected get VArchived(): TypeVPage<CSheet> {return VArchived}\r\n    protected get VSheetList(): TypeVPage<CSheet> {return VSheetList}\r\n    protected get VSheetAction(): TypeVPage<CSheet> {return this.ui.sheetAction || VSheetAction}\r\n    protected get VSheetProcessing(): TypeVPage<CSheet> {return VSheetProcessing}\r\n    protected async onEvent(type:string, value:any) {\r\n        let c: TypeVPage<CSheet>;\r\n        switch (type) {\r\n            default: return;\r\n            case 'new': c = this.VSheetNew; break;\r\n            case 'schema': c = this.VSheetSchema; break;\r\n            case 'archives': c = this.VArchives; break;\r\n            case 'state':\r\n                this.curState = value.state;\r\n                c = this.VSheetList;\r\n                break;\r\n            case 'archived':\r\n                await this.showArchived(value); return;\r\n            case 'action':\r\n                await this.showAction(value); return;\r\n            case 'processing':\r\n                await this.showProcessing(value); return;\r\n        }\r\n        await this.openVPage(c, value);\r\n    }\r\n\r\n    async startSheet(sheetId:number) {\r\n        if (await this.beforeStart() === false) return;\r\n        await this.onEvent('action', sheetId);\r\n    }\r\n\r\n    async showAction(sheetId:number) {\r\n        let sheetData:SheetData = await this.getSheetData(sheetId);\r\n        postWsToTop({\r\n            body: {\r\n                $type: 'msg',\r\n                action: '$sheet',\r\n                msg: {\r\n                    id: sheetId,\r\n                    uq: this.cUq.uq.id,\r\n                    state: sheetData.brief.state\r\n                }\r\n            }\r\n        });\r\n        await this.openVPage(this.VSheetAction, sheetData);\r\n    }\r\n\r\n    async showProcessing(sheetId:number) {\r\n        let sheetData:SheetData = await this.getSheetData(sheetId);\r\n        await this.openVPage(this.VSheetProcessing, sheetData);\r\n    }\r\n\r\n    async editSheet(sheetData:SheetData):Promise<any> {\r\n        //alert('修改单据：程序正在设计中');\r\n        let values = await this.vCall(this.VSheetEdit, sheetData);\r\n        return values;\r\n    }\r\n\r\n    async showArchived(inBrief:any) {\r\n        let sheetData = await this.getArchived(inBrief.id);\r\n        await this.openVPage(this.VArchived, sheetData);\r\n    }\r\n\r\n    onSave = async (values:any, valuesWithBox:any):Promise<void> => {\r\n        //let values = this.vForm.getValues();\r\n        //let ret = await this.controller.saveSheet(values, this.vForm.values);\r\n        let ret = await this.saveSheet(values, valuesWithBox);\r\n        this.ceasePage();\r\n        //this.openPage(this.finishedPage);\r\n        await this.showSaved(ret);\r\n    }\r\n\r\n    async showSaved(sheetData:any) {\r\n        await this.openVPage(this.VSheetSaved, sheetData);\r\n    }\r\n\r\n    private getStateUI(stateName:string) {\r\n        let {states} = this.res;\r\n        if (states === undefined) return;\r\n        return states[stateName];\r\n    }\r\n    getStateLabel(stateName:string) {\r\n        let state = this.getStateUI(stateName);\r\n        let ret = (state && state.label) || stateName;\r\n        switch (ret) {\r\n            default: return ret;\r\n            case '$': return '新单';\r\n        }\r\n    }\r\n    getActionLabel(stateName:string, actionName:string) {\r\n        let state = this.getStateUI(stateName);\r\n        if (state === undefined) return actionName;\r\n        let actions = state.actions;\r\n        if (actions === undefined) return actionName;\r\n        let action = actions[actionName];\r\n        return (action && action.label) || actionName;\r\n    }\r\n\r\n    private async loadStateSheetCount():Promise<void> {\r\n        this.statesCount.clear();\r\n        let statesCount = await this.entity.stateSheetCount();\r\n        this.statesCount.splice(0, 0, ...statesCount);\r\n    }\r\n\r\n    async getSheetData(sheetId:number):Promise<SheetData> {\r\n        return await this.entity.getSheet(sheetId);\r\n    }\r\n\r\n    async getArchived(sheetId:number):Promise<SheetData> {\r\n        return await this.entity.getArchive(sheetId);\r\n    }\r\n\r\n    async saveSheet(values:any, valuesWithBox:any):Promise<any> {\r\n        let {sheetTitle} = this.ui;\r\n        let disc = sheetTitle === undefined? this.label : sheetTitle(valuesWithBox, this.x);\r\n        let ret = await this.entity.save(disc, values);\r\n        //let {id, state} = ret;\r\n        //if (id > 0) this.changeStateCount(state, 1);\r\n        return ret;\r\n    }\r\n\r\n    async action(id:number, flow:number, state:string, actionName:string):Promise<any> {\r\n        return await this.entity.action(id, flow, state, actionName);\r\n    }\r\n}\r\n","export * from './cSheet';\r\nexport * from './vSheet';\r\nexport * from './vMain';\r\nexport * from './vNew';\r\nexport * from './vEdit';\r\nexport * from './vList';\r\nexport * from './vSheetAction';\r\nexport * from './vSchema';\r\nexport * from './vArchived';\r\nexport * from './vSheetView';\r\n","import * as React from 'react';\r\nimport { Book } from '../../uqs';\r\nimport { Page } from '../../../ui';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CBook, BookUI } from './cBook';\r\n\r\nexport class VBookMain extends VEntity<Book, BookUI, CBook> {\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        Book\r\n    </Page>;\r\n}\r\n","import { CEntity, EntityUI } from '../CVEntity';\r\nimport { Book } from '../../uqs';\r\nimport { VBookMain } from './vBookMain';\r\n\r\nexport interface BookUI extends EntityUI {\r\n    CBook?: typeof CBook;\r\n    main: typeof VBookMain,\r\n}\r\n\r\nexport class CBook extends CEntity<Book, BookUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VBookMain);\r\n    }\r\n\r\n    protected get VBookMain():typeof VBookMain {return VBookMain}\r\n}\r\n","import React from 'react';\r\nimport { View, List, Muted } from '../../../ui';\r\nimport { Entity } from '../../uqs';\r\nimport { CLink } from '../link';\r\nimport { CUq } from './cUq';\r\n\r\nexport class VUq extends View<CUq> {\r\n    protected isSysVisible = false;\r\n    protected tuidLinks: CLink[];\r\n    protected mapLinks: CLink[];\r\n    protected sheetLinks: CLink[];\r\n    protected actionLinks: CLink[];\r\n    protected queryLinks: CLink[];\r\n    protected bookLinks: CLink[];\r\n    protected historyLinks: CLink[];\r\n    protected pendingLinks: CLink[];\r\n\r\n    constructor(cUq: CUq) {\r\n        super(cUq);\r\n        let {tuidArr, mapArr, sheetArr, actionArr, queryArr, bookArr, historyArr, pendingArr} = cUq.uq;\r\n        this.tuidLinks = tuidArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cTuidMain(v)));\r\n        this.mapLinks = mapArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cMap(v)));\r\n        this.sheetLinks = sheetArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cSheet(v)));\r\n        this.actionLinks = actionArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cAction(v)));\r\n        this.queryLinks = queryArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cQuery(v)));\r\n        this.bookLinks = bookArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cBook(v)));\r\n        this.historyLinks = historyArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cHistory(v)));\r\n        this.pendingLinks = pendingArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cPending(v)));\r\n    }\r\n    protected isVisible(entity: Entity):boolean {\r\n        return entity.sys !== true || this.isSysVisible;\r\n    }\r\n    render(param?:any) {\r\n        if (this.view === undefined) return <div>??? viewModel 必须定义 view ???</div>\r\n        return React.createElement(this.view);\r\n    }\r\n\r\n    protected view = () => {\r\n        let {res, uq, error} = this.controller;\r\n        let linkItem = {\r\n            render: (cLink:CLink, index:number):JSX.Element => cLink.render(), \r\n            onClick: undefined, \r\n        };\r\n        let lists = [\r\n            {\r\n                header: res.tuid || 'TUID',\r\n                items: this.tuidLinks,\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.map || 'MAP',\r\n                items: this.mapLinks,\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.sheet || 'SHEET',\r\n                items: this.sheetLinks\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.action || 'ACTION',\r\n                items: this.actionLinks\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.query || 'QUERY',\r\n                items: this.queryLinks\r\n            },\r\n            {\r\n                cn: 'mt-2 mb-4',\r\n                header: res.book || 'BOOK',\r\n                items: this.bookLinks\r\n            },\r\n            {\r\n                cn: 'mt-2 mb-4',\r\n                header: res.history || 'HISTORY',\r\n                items: this.historyLinks\r\n            },\r\n            {\r\n                cn: 'mt-2 mb-4',\r\n                header: res.pending || 'PENDING',\r\n                items: this.pendingLinks\r\n            }\r\n        ];\r\n        let content;\r\n        if (error !== undefined) {\r\n            content = <div className=\"p-3 text-danger\">连接错误: {error}</div>;\r\n        }\r\n        else {\r\n            content = lists.map(({cn, header, items},index) => items.length > 0 && <List\r\n                key={index}\r\n                className={cn}\r\n                header={<div className=\"px-3 py-1 bg-light\"><Muted>{header}</Muted></div>}\r\n                items={items}\r\n                item={linkItem} />\r\n            );\r\n        }\r\n        return <>\r\n            <div className=\"px-3 py-1 small\">{res.uq || uq}</div>\r\n            {content}\r\n        </>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { Controller, resLang, nav } from '../../../ui';\r\nimport { UqApi, UnitxApi, appInFrame, UqData } from '../../../net';\r\nimport { Uq, Action, Sheet, Query, Book, Map, Entity, Tuid, History, Pending, TuidDiv } from '../../uqs';\r\nimport { CLink } from '../link';\r\nimport { CBook, BookUI } from '../book';\r\nimport { CSheet, SheetUI } from '../sheet';\r\nimport { ActionUI, CAction } from '../action';\r\nimport { QueryUI, CQuery, CQuerySelect } from '../query';\r\nimport { CTuidMain, TuidUI, CTuid, CTuidInfo, CTuidSelect, CTuidEdit, CTuidList } from '../tuid';\r\nimport { MapUI, CMap } from '../map';\r\nimport { CEntity, EntityUI } from '../CVEntity';\r\nimport { PureJSONContent } from '../form/viewModel';\r\nimport { VUq } from './vUq';\r\nimport { CHistory, HistoryUI } from '../history';\r\nimport { CPending, PendingUI } from '../pending';\r\nimport { CApp } from '../CApp';\r\n\r\nexport type EntityType = 'sheet' | 'action' | 'tuid' | 'query' | 'book' | 'map' | 'history' | 'pending';\r\n\r\nexport interface UqUI {\r\n    CTuidMain?: typeof CTuidMain;\r\n    CTuidEdit?: typeof CTuidEdit;\r\n    CTuidList?: typeof CTuidList;\r\n    CTuidSelect?: typeof CTuidSelect;\r\n    CTuidInfo?: typeof CTuidInfo;\r\n    CQuery?: typeof CQuery;\r\n    CQuerySelect?: typeof CQuerySelect;\r\n    CMap?: typeof CMap;\r\n    CAction?: typeof CAction;\r\n    CSheet?: typeof CSheet;\r\n    CBook?: typeof CBook;\r\n    CHistory?: typeof CHistory;\r\n    CPending?: typeof CPending;\r\n    tuid?: {[name:string]: TuidUI};\r\n    sheet?: {[name:string]: SheetUI};\r\n    action?: {[name:string]: ActionUI};\r\n    map?: {[name:string]: MapUI};\r\n    query?: {[name:string]: QueryUI};\r\n    book?: {[name:string]: BookUI};    \r\n    history?: {[name:string]: HistoryUI};\r\n    pending?: {[name:string]: PendingUI};\r\n    res?: any;\r\n}\r\n\r\nfunction lowerPropertyName(entities: {[name:string]: EntityUI}) {\r\n    if (entities === undefined) return;\r\n    for (let i in entities) entities[i.toLowerCase()] = entities[i];\r\n}\r\n\r\nexport class CUq extends Controller /* implements Uq*/ {\r\n    private ui:any;\r\n    private CTuidMain: typeof CTuidMain;\r\n    private CTuidEdit: typeof CTuidEdit;\r\n    private CTuidList: typeof CTuidList;\r\n    private CTuidSelect: typeof CTuidSelect;\r\n    private CTuidInfo: typeof CTuidInfo;\r\n    private CQuery: typeof CQuery;\r\n    private CQuerySelect: typeof CQuerySelect;\r\n    private CMap: typeof CMap;\r\n    private CAction: typeof CAction;\r\n    private CSheet: typeof CSheet;\r\n    private CBook: typeof CBook;\r\n    private CHistory: typeof CHistory;\r\n    private CPending: typeof CPending;\r\n\r\n    //constructor(cApp:CApp, uq:string, appId:number, uqId:number, access:string, ui:UqUI) {\r\n    constructor(cApp:CApp, uqData:UqData, ui:UqUI) {\r\n        super(resLang(ui.res));\r\n        this.cApp = cApp;\r\n        //this.id = uqId;\r\n        // 每一个ui都转换成小写的key的版本\r\n        lowerPropertyName(ui.tuid);\r\n        lowerPropertyName(ui.sheet);\r\n        lowerPropertyName(ui.map);\r\n        lowerPropertyName(ui.query);\r\n        lowerPropertyName(ui.action);\r\n        lowerPropertyName(ui.book);\r\n        lowerPropertyName(ui.history);\r\n        lowerPropertyName(ui.pending);\r\n        this.ui = ui;\r\n        this.CTuidMain = ui.CTuidMain || CTuidMain;\r\n        this.CTuidEdit = ui.CTuidEdit || CTuidEdit;\r\n        this.CTuidList = ui.CTuidList || CTuidList;\r\n        this.CTuidSelect = ui.CTuidSelect || CTuidSelect;\r\n        this.CTuidInfo = ui.CTuidInfo || CTuidInfo;\r\n        this.CQuery = ui.CQuery || CQuery;\r\n        this.CQuerySelect = ui.CQuerySelect || CQuerySelect;\r\n        this.CMap = ui.CMap || CMap;\r\n        this.CAction = ui.CAction || CAction;\r\n        this.CSheet = ui.CSheet || CSheet;\r\n        this.CBook = ui.CBook || CBook;\r\n        this.CHistory = ui.CHistory || CHistory;\r\n        this.CPending = ui.CPending || CPending;\r\n\r\n        this.uq = new Uq(this.cApp.uqApp, uqData);\r\n        /*\r\n        let token = undefined;\r\n        let uqOwner:string, uqName:string;\r\n        let p = uq.split('/');\r\n        switch (p.length) {\r\n            case 1:\r\n                uqOwner = '$$$';\r\n                uqName = p[0];\r\n                break;\r\n            case 2:\r\n                uqOwner = p[0];\r\n                uqName = p[1];\r\n                break;\r\n            default:\r\n                console.log('uq must be uqOwner/uqName format');\r\n                return;\r\n        }\r\n\r\n        let hash = document.location.hash;\r\n        let baseUrl = hash===undefined || hash===''? \r\n            'debug/':'tv/';\r\n\r\n        let acc: string[];\r\n        if (access === null || access === undefined || access === '*') {\r\n            acc = [];\r\n        }\r\n        else {\r\n            acc = access.split(';').map(v => v.trim()).filter(v => v.length > 0);\r\n        }\r\n        let uqApi:UqApi;\r\n        if (uq === '$$$/$unitx') {\r\n            // 这里假定，点击home link之后，已经设置unit了\r\n            // 调用 UnitxApi会自动搜索绑定 unitx service\r\n            uqApi = new UnitxApi(appInFrame.unit);\r\n        }\r\n        else {\r\n            uqApi = new UqApi(baseUrl, uqOwner, uqName, acc, true);\r\n        }\r\n        this.entities = new Uq(this, uqApi, appId);\r\n        */\r\n    }\r\n\r\n    protected async internalStart() {\r\n    }\r\n\r\n    cApp:CApp;\r\n    //uq: string;\r\n    //id: number;\r\n    res: any;\r\n    uq: Uq;\r\n    error: string;\r\n    //private schemaLoaded:boolean = false;\r\n    \r\n    async init():Promise<void> {\r\n        return await this.uq.init();\r\n    }\r\n\r\n    async loadEntities():Promise<string> {\r\n        try {\r\n            await this.uq.loadAccess();\r\n            for (let tuid of this.uq.tuidArr) {\r\n                let {ui, res} = this.getUI(tuid);\r\n                tuid.setUIRes(ui, res);\r\n            }\r\n        }\r\n        catch (err) {\r\n            return err;\r\n        }\r\n    }\r\n\r\n    async checkEntities(): Promise<boolean> {\r\n        return await this.uq.checkAccess();\r\n    }\r\n\r\n    /*\r\n    private setTuidUI(tuid: Tuid) {\r\n        let {ui, res} = this.getUI(tuid);\r\n        tuid.ui = (ui as TuidUI).content;\r\n        tuid.res = res;\r\n    }\r\n    */\r\n\r\n    /*\r\n    async loadSchema():Promise<string> {\r\n        try {\r\n            if (this.schemaLoaded === true) return;\r\n            await this.loadEntites();\r\n            if (this.id === undefined) this.id = this.uq.uqId;\r\n            for (let i in this.ui) {\r\n                let g = this.ui[i];\r\n                if (g === undefined) continue;\r\n                let {caption, collection} = g;\r\n                if (collection === undefined) continue;\r\n                for (let j in collection) {\r\n                    if (this.uq[i](j) === undefined) {\r\n                        console.warn(i + ':' + '\\'' + j + '\\' is not uq entity');\r\n                    }\r\n                }\r\n            }\r\n            this.schemaLoaded = true;\r\n            return;\r\n        }\r\n        catch(err) {\r\n            console.error(err);\r\n            return this.error = err;\r\n        }\r\n    }\r\n    */\r\n\r\n    async getQuerySearch(name:string):Promise<Query> {\r\n        let query = this.uq.query(name);\r\n        if (query === undefined) \r\n            alert(`QUERY ${name} 没有定义!`);\r\n        else {\r\n            await query.loadSchema();\r\n            let {returns} = query;\r\n            if (returns.length > 1) {\r\n                alert(`QUERY ${name} 返回多张表, 无法做QuerySearch`);\r\n            }\r\n        }\r\n        return query;\r\n    }\r\n    getTuidPlaceHolder(tuid:Tuid) {\r\n        let {tuidPlaceHolder, entity} = this.res;\r\n        let {name} = tuid;\r\n        let type:string;\r\n        if (entity !== undefined) {\r\n            let en = entity[name];\r\n            if (en !== undefined) {\r\n                type = en.label;\r\n            }\r\n        }\r\n        return (tuidPlaceHolder || 'Select');\r\n    }\r\n    getNone() {\r\n        let {none} = this.res;\r\n        return none || 'none';\r\n    }\r\n    protected isSysVisible = false;\r\n    protected isVisible(entity: Entity):boolean {\r\n        return entity.sys !== true || this.isSysVisible;\r\n    }\r\n\r\n    async navSheet(sheetTypeId:number, sheetId:number) {\r\n        let sheet = this.uq.sheetFromTypeId(sheetTypeId);\r\n        if (sheet === undefined) {\r\n            alert('sheetTypeId ' + sheetTypeId + ' is not exists!');\r\n            return;\r\n        }\r\n        let cSheet = this.cSheet(sheet);\r\n        await cSheet.startSheet(sheetId);\r\n    }\r\n\r\n    sheet(entityName:string) {return this.uq.sheet(entityName);}\r\n    action(entityName:string) {return this.uq.action(entityName);}\r\n    query(entityName:string) {return this.uq.query(entityName);}\r\n    book(entityName:string) {return this.uq.book(entityName);}\r\n    map(entityName:string) {return this.uq.map(entityName);}\r\n    history(entityName:string) {return this.uq.history(entityName);}\r\n    pending(entityName:string) {return this.uq.pending(entityName);}\r\n    tuid(entityName:string) {return this.uq.tuid(entityName)}\r\n    tuidDiv(entityName:string, divName:string) {\r\n        return this.uq.tuidDiv(entityName, divName);\r\n    }\r\n\r\n    cSheetFromName(entityName:string):CSheet {\r\n        let entity = this.uq.sheet(entityName);\r\n        if (entity !== undefined) return this.cSheet(entity);\r\n    }\r\n    cActionFromName(entityName:string) {\r\n        let entity = this.uq.action(entityName);\r\n        if (entity !== undefined) return this.cAction(entity);\r\n    }\r\n    cQueryFromName(entityName:string) {\r\n        let entity = this.uq.query(entityName);\r\n        if (entity !== undefined) return this.cQuery(entity);\r\n    }\r\n    cBookFromName(entityName:string) {\r\n        let entity = this.uq.book(entityName);\r\n        if (entity !== undefined) return this.cBook(entity);\r\n    }\r\n    cMapFromName(entityName:string) {\r\n        let entity = this.uq.map(entityName);\r\n        if (entity !== undefined) return this.cMap(entity);\r\n    }\r\n    cHistoryFromName(entityName:string) {\r\n        let entity = this.uq.history(entityName);\r\n        if (entity !== undefined) return this.cHistory(entity);\r\n    }\r\n    cPendingFromName(entityName:string) {\r\n        let entity = this.uq.pending(entityName);\r\n        if (entity !== undefined) return this.cPending(entity);\r\n    }\r\n    cTuidMainFromName(entityName:string) {\r\n        let entity = this.uq.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidMain(entity);\r\n    }\r\n    cTuidEditFromName(entityName:string) {\r\n        let entity = this.uq.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidEdit(entity);\r\n    }\r\n    cTuidInfoFromName(entityName:string) {\r\n        let entity = this.uq.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidInfo(entity);\r\n    }\r\n\r\n    cTuidSelectFromName(entityName:string) {\r\n        let entity = this.uq.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidSelect(entity);\r\n    }\r\n\r\n    cFromName(entityType:EntityType, entityName:string): CEntity<Entity, EntityUI> {\r\n        switch (entityType) {\r\n            case 'sheet':\r\n                let sheet = this.uq.sheet(entityName);\r\n                if (sheet === undefined) return;\r\n                return this.cSheet(sheet);\r\n            case 'action':\r\n                let action = this.uq.action(entityName);\r\n                if (action === undefined) return;\r\n                return this.cAction(action);\r\n            case 'tuid':\r\n                let tuid = this.uq.tuid(entityName);\r\n                if (tuid === undefined) return;\r\n                return this.cTuidMain(tuid);\r\n            case 'query':\r\n                let query = this.uq.query(entityName);\r\n                if (query === undefined) return;\r\n                return this.cQuery(query);\r\n            case 'book':\r\n                let book = this.uq.book(entityName);\r\n                if (book === undefined) return;\r\n                return this.cBook(book);\r\n            case 'map':\r\n                let map = this.uq.map(entityName);\r\n                if (map === undefined) return;\r\n                return this.cMap(map);\r\n            case 'history':\r\n                let history = this.uq.history(entityName);\r\n                if (history === undefined) return;\r\n                return this.cHistory(history);\r\n            case 'pending':\r\n                let pending = this.uq.pending(entityName);\r\n                if (pending === undefined) return;\r\n                return this.cPending(pending);\r\n        }\r\n    }\r\n\r\n    linkFromName(entityType:EntityType, entityName:string) {\r\n        return this.link(this.cFromName(entityType, entityName));\r\n    }\r\n\r\n    private getUI<T extends Entity, UI extends EntityUI>(t:T):{ui:UI, res:any} {\r\n        let ui, res;\r\n        let {name, typeName} = t;\r\n        if (this.ui !== undefined) {\r\n            let tUI = this.ui[typeName];\r\n            if (tUI !== undefined) {\r\n                ui = tUI[name];\r\n            }\r\n        }\r\n        let {entity} = this.res;\r\n        if (entity !== undefined) {\r\n            res = entity[name];\r\n        }\r\n        return {ui: ui || {}, res: res || {} };\r\n    }\r\n\r\n    link(cEntity:CEntity<Entity, EntityUI>) {\r\n        return new CLink(cEntity);\r\n    }\r\n\r\n    get tuidLinks() {\r\n        return this.uq.tuidArr.filter(v => this.isVisible(v)).map(v => this.link(this.cTuidMain(v)));\r\n    }\r\n    cTuidMain(tuid:Tuid):CTuidMain {\r\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidMain || this.CTuidMain)(this, tuid, ui, res);\r\n    }\r\n    cTuidEdit(tuid:Tuid):CTuidEdit {\r\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidEdit || this.CTuidEdit)(this, tuid, ui, res);\r\n    }\r\n    cTuidList(tuid:Tuid):CTuidList {\r\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidList || this.CTuidList)(this, tuid, ui, res);\r\n    }\r\n    cTuidSelect(tuid:Tuid):CTuidSelect {\r\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidSelect || this.CTuidSelect)(this, tuid, ui, res);\r\n    }\r\n    cTuidInfo(tuid:Tuid):CTuidInfo {\r\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidInfo || this.CTuidInfo)(this, tuid, ui, res);\r\n    }\r\n\r\n    cSheet(sheet:Sheet/*, sheetUI?:SheetUI, sheetRes?:any*/):CSheet {\r\n        let {ui, res} = this.getUI<Sheet, SheetUI>(sheet);\r\n        //if (sheetUI !== undefined) ui = sheetUI;\r\n        //if (sheetRes !== undefined) res = sheetRes;\r\n        //return new (ui && ui.CSheet || this.CSheet)(this, sheet, sheetUI, sheetRes);\r\n        return new (ui && ui.CSheet || this.CSheet)(this, sheet, ui, res);\r\n    }\r\n    get sheetLinks() { \r\n        return this.uq.sheetArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cSheet(v))\r\n        });\r\n    }\r\n\r\n    cAction(action:Action):CAction {\r\n        let {ui, res} = this.getUI<Action, ActionUI>(action);\r\n        return new (ui && ui.CAction || this.CAction)(this, action, ui, res);\r\n    }\r\n    get actionLinks() { \r\n        return this.uq.actionArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cAction(v))\r\n        });\r\n    }\r\n\r\n    cQuery(query:Query):CQuery {\r\n        let {ui, res} = this.getUI<Query, QueryUI>(query);\r\n        return new (ui && ui.CQuery || this.CQuery)(this, query, ui, res);\r\n    }\r\n    cQuerySelect(queryName:string):CQuerySelect {\r\n        let query = this.uq.query(queryName);\r\n        if (query === undefined) return;\r\n        let {ui, res} = this.getUI<Query, QueryUI>(query);\r\n        return new (ui && ui.CQuerySelect || this.CQuerySelect)(this, query, ui, res);\r\n    }\r\n    get queryLinks() {\r\n        return this.uq.queryArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cQuery(v))\r\n        });\r\n    }\r\n    \r\n    cBook(book:Book):CBook {\r\n        let {ui, res} = this.getUI<Book, BookUI>(book);\r\n        return new (ui && ui.CBook || this.CBook)(this, book, ui, res);\r\n    }\r\n    get bookLinks() { \r\n        return this.uq.bookArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cBook(v))\r\n        });\r\n    }\r\n    \r\n    cHistory(history:History):CHistory {\r\n        let {ui, res} = this.getUI<History, HistoryUI>(history);\r\n        return new (ui && ui.CHistory || this.CHistory)(this, history, ui, res);\r\n    }\r\n    get historyLinks() { \r\n        return this.uq.historyArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cHistory(v))\r\n        });\r\n    }\r\n    \r\n    cPending(pending:Pending):CPending {\r\n        let {ui, res} = this.getUI<Pending, PendingUI>(pending);\r\n        return new (ui && ui.CPending || this.CPending)(this, pending, ui, res);\r\n    }\r\n    get pendingLinks() { \r\n        return this.uq.pendingArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cPending(v))\r\n        });\r\n    }\r\n    \r\n    cMap(map:Map):CMap {\r\n        let {ui, res} = this.getUI<Map, MapUI>(map);\r\n        return new (ui && ui.CMap || this.CMap)(this, map, ui, res);\r\n    }\r\n    get mapLinks() { \r\n        return this.uq.mapArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cMap(v));\r\n        });\r\n    }\r\n\r\n    getTuidContent(tuid:Tuid): React.StatelessComponent<any> {\r\n        let {ui} = this.getUI<Tuid, TuidUI>(tuid);\r\n        return (ui && ui.content) || PureJSONContent;\r\n    }\r\n\r\n    getTuidDivContent(tuidDiv:TuidDiv): React.StatelessComponent<any> {\r\n        let {owner} = tuidDiv;\r\n        let {ui} = this.getUI<Tuid, TuidUI>(owner);\r\n        return (ui && ui.divs && ui.divs[tuidDiv.name].content) || PureJSONContent;\r\n    }\r\n\r\n    async showTuid(tuid:Tuid, id:number):Promise<void> {\r\n        let c = this.cTuidInfo(tuid);\r\n        await c.start(id);\r\n    }\r\n\r\n    async showTuidDiv(tuid:TuidDiv, id:number):Promise<void> {\r\n        let {owner} = tuid;\r\n        let c = this.cTuidInfo(owner);\r\n        await c.start(id);\r\n    }\r\n\r\n    protected get VUq():typeof VUq {return VUq}\r\n\r\n    render() {\r\n        let v = new (this.VUq)(this);\r\n        return v.render();\r\n    }\r\n}\r\n\r\n","export * from './cUq';\r\nexport * from './vUq';","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport className from 'classnames';\r\nimport { Page, List, LMR, FA } from '../../../ui';\r\nimport { tv } from '../../tools';\r\nimport { Map } from '../../uqs';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CMap, MapItem, MapKey, MapUI } from './cMap';\r\nimport { PureJSONContent } from '../form/viewModel';\r\n\r\nexport class VMapMain extends VEntity<Map, MapUI, CMap> {\r\n    private isFrom: boolean;\r\n\r\n    async open(param?:any) {\r\n        this.isFrom = this.controller.isFrom;\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    itemRender = (item:MapItem, index:number) => {\r\n        return <this.ItemRow item={item} />;\r\n    }\r\n\r\n    private ItemRow = observer(({item}: {item:MapItem}) => {\r\n        let {tuid, box, children, isLeaf, keyIndex, values} = item;\r\n        let keyUI = this.controller.keyUIs[keyIndex];\r\n        let {content:keyContent, valuesContent, none:keyNone} = keyUI;\r\n        let add:any, remove:any;\r\n        if (this.isFrom === false) {\r\n            add = <button className=\"btn btn-link btn-sm\" onClick={()=>this.controller.addClick(item)}>\r\n                <FA name=\"plus\" />\r\n            </button>;\r\n            remove = <button className=\"btn btn-link btn-sm\" onClick={()=>this.controller.removeClick(item)}>\r\n                <FA className=\"text-info\" name=\"trash\" />\r\n            </button>;\r\n        }\r\n        let right:any;\r\n        if (isLeaf === false) {\r\n            if (keyIndex === 0)\r\n                right = add;\r\n            else\r\n                right = <>{remove} &nbsp; {add}</>;\r\n        }\r\n        else if (keyIndex > 0) {\r\n            right = remove;\r\n        }\r\n        let content:any, border:any, valuesView:any;\r\n        if (isLeaf === true) {\r\n            content = undefined; //<div className=\"ml-5\">leaf</div>;\r\n            if (values) {\r\n                //valuesView = null; // 现在不显示values content了\r\n                valuesView = (valuesContent || PureJSONContent)(values, this.x);\r\n            }\r\n        }\r\n        else {\r\n            border = 'border-bottom';\r\n            let none = keyNone && keyNone(this.x);\r\n            content = <List \r\n                className=\"ml-4\" \r\n                items={children} \r\n                item={{onClick:undefined, render:this.itemRender}}\r\n                none={none} />\r\n        }\r\n        let left = <div className=\"py-1 pr-3\">{tv(box, keyContent, this.x)}</div>;\r\n        return <div className=\"d-flex flex-column\">\r\n            <LMR className={className('px-3', 'py-2', border)}\r\n                left={left}\r\n                right={right}\r\n            >\r\n                <div className=\"py-1\">{valuesView}</div>\r\n            </LMR>\r\n            {content}\r\n        </div>;\r\n    });\r\n\r\n    protected get view() { return () => <Page header={this.label}>\r\n            <List items={this.controller.items} item={{className:'my-2', onClick:undefined, render:this.itemRender}} />\r\n        </Page>\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { VEntity } from '../CVEntity';\r\nimport { MapUI, CMap } from './cMap';\r\nimport { Map } from '../../uqs';\r\nimport { Page } from '../../../ui';\r\nimport { VForm } from '../form';\r\n\r\nexport class VInputValues extends VEntity<Map, MapUI, CMap> {\r\n    private vForm: VForm;\r\n\r\n    async open(param?:any) {\r\n        this.vForm = this.createForm(this.onValuesSubmit);\r\n        this.openPageElement(<this.view />);\r\n    }\r\n\r\n    private onValuesSubmit = async () => {\r\n        this.ceasePage();\r\n        let values = this.vForm.getValues();\r\n        this.returnCall(values);\r\n    }\r\n\r\n    private view = () => {\r\n        return <Page>\r\n            {this.vForm.render()}\r\n        </Page>\r\n    }\r\n}\r\n","import _ from 'lodash';\r\nimport { CEntity, EntityUI } from '../CVEntity';\r\nimport { Map, Tuid, BoxId, Field, fieldDefaultValue } from '../../uqs';\r\nimport { VMapMain } from './vMain';\r\nimport { observable } from 'mobx';\r\nimport { PureJSONContent } from '../form/viewModel';\r\nimport { VInputValues } from './inputValues';\r\n\r\nexport interface MapKey {\r\n    content: (values, x?:any) => JSX.Element;\r\n    valuesContent?: (values, x?:any) => JSX.Element;\r\n    none?: (x:any)=>string;\r\n}\r\n\r\nexport interface MapUI extends EntityUI {\r\n    CMap?: typeof CMap;\r\n    keys?: MapKey[],\r\n}\r\n\r\nexport class MapItem {\r\n    parent: MapItem;\r\n    tuid: Tuid;\r\n    box: BoxId;\r\n    isLeaf: boolean;\r\n    keyIndex:number;\r\n    children: MapItem[] = observable.array([], {deep: true});\r\n    values: any;\r\n    constructor(parent:MapItem, tuid:Tuid, box:BoxId, keyIndex:number) {\r\n        this.parent = parent;\r\n        this.tuid = tuid;\r\n        this.box = box;\r\n        this.keyIndex = keyIndex;\r\n        this.isLeaf = false;\r\n    }\r\n}\r\n\r\nexport class CMap extends CEntity<Map, MapUI> {\r\n    isFrom: boolean;\r\n    items:MapItem[];\r\n    keyFields: Field[];\r\n    keyUIs: MapKey[];\r\n\r\n    protected async internalStart() {\r\n        let {keys, schemaFrom} = this.entity;\r\n        this.isFrom = schemaFrom !== undefined;\r\n        let q = this.entity.queries.all;\r\n        let result = await q.query({});\r\n        //let data = await this.entity.unpackReturns(res);\r\n        let ret = result.ret;\r\n        let keysLen = keys.length;\r\n        this.keyUIs = _.clone(this.ui.keys || []);\r\n        this.keyFields = [];\r\n        let retFields = q.returns[0].fields;\r\n        for (let i=0; i<keysLen; i++) {\r\n            this.keyFields.push(retFields[i]);\r\n            if (i >= this.keyUIs.length) {\r\n                this.keyUIs.push({\r\n                    content: PureJSONContent,\r\n                });\r\n            }\r\n        }\r\n        this.items = observable([]);\r\n        let item:MapItem = undefined;\r\n        for (let r of ret) {\r\n            let newItem = this.addItem(item, r);\r\n            if (newItem !== undefined) {\r\n                this.items.push(newItem);\r\n                item = newItem;\r\n            }\r\n        }\r\n\r\n        await this.openVPage(this.VMapMain);\r\n    }\r\n\r\n    private createItem(parent:MapItem, tuid:Tuid, box:BoxId, keyIndex:number, values?:any) {\r\n        let item = new MapItem(parent, tuid, box, keyIndex);\r\n        if (keyIndex === this.keyFields.length - 1) {\r\n            item.isLeaf = true;\r\n            item.values = values;\r\n        }\r\n        return item;\r\n    }\r\n\r\n    addItem(item:MapItem, row:any):MapItem {\r\n        let ret:MapItem = undefined;\r\n        let keysLen = this.keyFields.length;\r\n        let p = item;\r\n        for (let i=0;i<keysLen;i++) {\r\n            let key = this.keyFields[i];\r\n            let {name} = key;\r\n            let tuidBox = key._tuid;\r\n            let val:BoxId = row[name];\r\n            if (val === undefined) break;\r\n            let {id} = val;\r\n            if (i === 0) {\r\n                if (id === 0) continue;\r\n                if (p === undefined || p.box.id !== id) {\r\n                    ret = p = this.createItem(undefined, tuidBox.tuid, val, i, row);\r\n                }\r\n                continue;\r\n            }\r\n            let {children, box} = p;\r\n            let len = children.length;\r\n            if (len > 0) {\r\n                let n = children[len-1];\r\n                if (n.box.id === id) {\r\n                    p = n;\r\n                    continue;\r\n                }\r\n            }\r\n            if (id > 0) {\r\n                children.push(p = this.createItem(p, tuidBox.tuid, val, i, row));\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    async searchOnKey(keyField:Field, param):Promise<number> {\r\n        let {_tuid} = keyField;\r\n        let {tuid, ownerField} = _tuid;\r\n        let cTuidSelect = this.cUq.cTuidSelect(tuid);\r\n        let callParam = param;\r\n        if (ownerField !== undefined) {\r\n            callParam = param[ownerField.name];\r\n            if (typeof callParam === 'object') {\r\n                callParam = callParam.id;\r\n            }\r\n        }\r\n        let ret = await cTuidSelect.call(callParam);\r\n        return _tuid.getIdFromObj(ret);\r\n    }\r\n\r\n    addClick = async(item:MapItem) => {\r\n        let {keyIndex, children} = item;\r\n        let keysLen = this.keyFields.length;\r\n        let keysLast = keysLen-1;\r\n        let idx = keyIndex + 1;\r\n        if (idx >= keysLen) return;\r\n        let keyField = this.keyFields[idx];\r\n        let kn = keyField.name;\r\n        let tuid = keyField._tuid;\r\n        let searchParam = {} as any;\r\n        let data = {} as any;\r\n        for (let p=item;p!==undefined;p=p.parent) {\r\n            let {keyIndex:ki, box} = p;\r\n            let kn = this.keyFields[ki].name;\r\n            //searchParam[kn] = data['_' + kn] = box.id;\r\n            searchParam[kn] = data[kn] = box.id;\r\n        }\r\n\r\n        let id = await this.searchOnKey(keyField, searchParam);\r\n        if (id === undefined || id <= 0) return;\r\n        tuid.useId(id);\r\n        let idBox = tuid.boxId(id);\r\n        let arr1 = {} as any;\r\n        let values:any = {};\r\n        if (keyIndex+1===keysLast) {\r\n            tuid.useId(id);\r\n            //values[kn] = arr1['_' + kn] = idBox;\r\n            values[kn] = arr1[kn] = idBox;\r\n            if (this.entity.fields.length > 0) {\r\n                let ret = await this.vCall(VInputValues, data);\r\n                for (let i in ret) {\r\n                    //values[i] = arr1['_' + i] = ret[i];\r\n                    values[i] = arr1[i] = ret[i];\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            //values[kn] = data['_' + kn] = idBox;\r\n            values[kn] = data[kn] = idBox;\r\n            for (let i=idx+1;i<keysLast;i++) {\r\n                //data['_' + this.keyFields[i].name] = 0;\r\n                data[this.keyFields[i].name] = 0;\r\n            }\r\n            // 填map的key field 0 值\r\n            //arr1['_' + this.keyFields[keysLast].name] = 0;\r\n            arr1[this.keyFields[keysLast].name] = 0;\r\n            let {fields} = this.entity;\r\n            for (let f of fields) {\r\n                let {name, type, null:nullable} = f;\r\n                if (!(nullable === true)) {\r\n                    //arr1['_' + f.name] = fieldDefaultValue(type);\r\n                    arr1[f.name] = fieldDefaultValue(type);\r\n                }\r\n            }\r\n        }\r\n        data.arr1 = [arr1];\r\n        await this.entity.actions.add.submit(data);\r\n        let rowIndex = children.findIndex(v => v.box.id === id);\r\n        if (rowIndex < 0) {\r\n            children.push(this.createItem(item, tuid.tuid, idBox, idx, values));\r\n        }\r\n        else {\r\n            let {fields} = this.entity;\r\n            if (fields !== undefined && fields.length > 0) {\r\n                let row = children[rowIndex];\r\n                children.splice(rowIndex, 1);\r\n                row.values = values;\r\n                /*\r\n                for (let f of fields) {\r\n                    let {name:fn} = f;\r\n                    row.values[fn] = values[fn];\r\n                }*/\r\n                children.splice(rowIndex, 0, row);\r\n            }\r\n        }\r\n        this.removeCeased();\r\n    }\r\n\r\n    removeClick = async(item:MapItem) => {\r\n        let keyField = this.keyFields[item.keyIndex];\r\n        let tuid = keyField._tuid;\r\n        let cTuidMain = this.cUq.cTuidMain(tuid.tuid);\r\n        let label = cTuidMain.getLable(tuid.tuid);\r\n        let confirmDelete:_.TemplateExecutor = \r\n            this.res.confirmDelete \r\n            || _.template('do you really want to remove ${label}?');\r\n        if (confirm(confirmDelete({label:label})) === false) return;\r\n        let map:Map = this.entity;\r\n        let data = {} as any;\r\n        let arr1 = data['arr1'] = [];\r\n        let v0 = {} as any;\r\n        arr1.push(v0);\r\n        for (let p=item; p!==undefined;p=p.parent) {\r\n            let ki=p.keyIndex;\r\n            //v0['_'+this.keyFields[ki].name] = p.box.id;\r\n            v0[this.keyFields[ki].name] = p.box.id;\r\n        }\r\n        let len = this.keyFields.length;\r\n        for (let i=item.keyIndex+1; i<len; i++) {\r\n            let k = this.keyFields[i];\r\n            //v0['_'+k.name] = -1;\r\n            v0[k.name] = -1;\r\n        }\r\n        await map.actions.del.submit(data);\r\n        let children = item.parent.children;\r\n        let index = children.findIndex(v => v === item);\r\n        if (index >= 0) children.splice(index, 1);\r\n    }\r\n\r\n    protected get VMapMain():typeof VMapMain {return VMapMain}\r\n}\r\n","export * from './cMap';\r\nexport * from './vMain';\r\n","import * as React from 'react';\r\nimport { Pending } from '../../uqs';\r\nimport { Page } from '../../../ui';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CPending, PendingUI } from './cPending';\r\n\r\nexport class VPendingMain extends VEntity<Pending, PendingUI, CPending> {\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        pending\r\n    </Page>;\r\n}\r\n","import { CEntity, EntityUI } from '../CVEntity';\r\nimport { Pending } from '../../uqs';\r\nimport { VPendingMain } from './vPendingMain';\r\n\r\nexport interface PendingUI extends EntityUI {\r\n    CPending?: typeof CPending;\r\n    main: typeof VPendingMain,\r\n}\r\n\r\nexport class CPending extends CEntity<Pending, PendingUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VPendingMain);\r\n    }\r\n\r\n    protected get VPendingMain():typeof VPendingMain {return VPendingMain}\r\n}\r\n","export * from './cPending';\r\nexport * from './vPendingMain';\r\n","import * as React from 'react';\r\nimport { VPage, Page } from '../../../ui';\r\nimport { jsonStringify } from '../../tools';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CAction, ActionUI } from './cAction';\r\nimport { Action } from '../../uqs';\r\n\r\nexport class VActionMain extends VEntity<Action, ActionUI, CAction> {\r\n    protected vForm: VForm;\r\n    protected returns: any;\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        this.openPage(this.mainPage);\r\n    }\r\n\r\n    private onSubmit = async () => {\r\n        let values = this.vForm.getValues();\r\n        this.returns = await this.controller.submit(values);\r\n        this.closePage();\r\n        this.openPage(this.resultPage);\r\n    }\r\n\r\n    protected mainPage = () => {\r\n        let {label} = this.controller;\r\n        return <Page header={label}>\r\n            {this.vForm.render('mx-3 my-2')}\r\n        </Page>;\r\n    }\r\n\r\n    protected resultPage = () => {\r\n        let {label} = this.controller;\r\n        return <Page header={label} back=\"close\">\r\n            完成！\r\n            <pre>\r\n                {jsonStringify(this.returns)}\r\n            </pre>\r\n        </Page>;\r\n    }\r\n}\r\n","import { CEntity, EntityUI } from '../CVEntity';\r\nimport { Action } from '../../uqs';\r\nimport { VActionMain } from './vActionMain';\r\n\r\nexport interface ActionUI extends EntityUI {\r\n    CAction?: typeof CAction;\r\n    //main: typeof VActionMain,\r\n}\r\n\r\nexport class CAction extends CEntity<Action, ActionUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VActionMain);\r\n    }\r\n\r\n    protected get VActionMain():typeof VActionMain {return VActionMain}\r\n\r\n    async submit(values:any) {\r\n        return this.entity.submit(values);\r\n    }\r\n\r\n    async submitReturns(values:any) {\r\n        return this.entity.submitReturns(values);\r\n    }\r\n}\r\n","export * from './cAction';\r\nexport * from './vActionMain';\r\n","import * as React from 'react';\r\nimport { History } from '../../uqs';\r\nimport { Page } from '../../../ui';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CHistory, HistoryUI } from './cHistory';\r\n\r\nexport class VHistoryMain extends VEntity<History, HistoryUI, CHistory> {\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        History\r\n    </Page>;\r\n}\r\n","import { CEntity, EntityUI } from '../CVEntity';\r\nimport { History } from '../../uqs';\r\nimport { VHistoryMain } from './vHistoryMain';\r\n\r\nexport interface HistoryUI extends EntityUI {\r\n    CHistory?: typeof CHistory;\r\n    main: typeof VHistoryMain,\r\n}\r\n\r\nexport class CHistory extends CEntity<History, HistoryUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VHistoryMain);\r\n    }\r\n\r\n    protected get VHistoryMain():typeof VHistoryMain {return VHistoryMain}\r\n}\r\n","export * from './cHistory';\r\nexport * from './vHistoryMain';\r\n","\r\nimport {setCenterToken} from './uqApi';\r\nimport {WSChannel} from './wsChannel';\r\n\r\nexport const netToken = {\r\n    set(userId:number, token:string) {\r\n        setCenterToken(userId, token);\r\n        WSChannel.setCenterToken(token);\r\n    },\r\n    clear() {\r\n        setCenterToken(0, undefined);\r\n        WSChannel.setCenterToken(undefined);\r\n    }\r\n};\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport {User} from '../user';\r\nimport {nav} from './nav';\r\nimport {Page} from './page';\r\nimport { isDevelopment } from '../net';\r\n\r\nexport abstract class Controller {\r\n    readonly res: any;\r\n    readonly x: any;\r\n    icon: string|JSX.Element;\r\n    label:string;\r\n    readonly isDev:boolean = isDevelopment;\r\n    get user():User {return nav.user}\r\n    get isLogined():boolean {\r\n        let {user} = nav;\r\n        if (user === undefined) return false;\r\n        return user.id > 0;\r\n    }\r\n    constructor(res:any) {\r\n        this.res = res || {};\r\n        this.x = this.res.x || {};\r\n    }\r\n\r\n    private receiveHandlerId:number;\r\n    private disposer:()=>void;\r\n\r\n    private dispose() {\r\n        // message listener的清理\r\n        nav.unregisterReceiveHandler(this.receiveHandlerId);\r\n        this.onDispose();\r\n    }\r\n\r\n    protected onDispose() {\r\n    }\r\n\r\n    protected async openVPage<C extends Controller>(vp: new (controller: C)=>VPage<C>, param?:any):Promise<void> {\r\n        await (new vp((this as any) as C)).open(param);\r\n    }\r\n\r\n    protected renderView<C extends Controller>(view: new (controller: C)=>View<C>, param?:any) {\r\n        return (new view((this as any) as C)).render(param);\r\n    }\r\n\r\n    async event(type:string, value:any) {\r\n        await this.onEvent(type, value);\r\n    }\r\n\r\n    protected async onEvent(type:string, value:any) {\r\n    }\r\n\r\n    protected msg(text:string) {\r\n        alert(text);\r\n    }\r\n    protected errorPage(header:string, err:any) {\r\n        this.openPage(<Page header=\"App error!\">\r\n            <pre>\r\n                {typeof err === 'string'? err : err.message}\r\n            </pre>\r\n        </Page>);\r\n    }\r\n\r\n    protected onMessage(message:any):Promise<void> {\r\n        return;\r\n    }\r\n\r\n    private onMessageReceive = async (message:any):Promise<void> => {\r\n        await this.onMessage(message);\r\n    }\r\n\r\n    protected async beforeStart():Promise<boolean> {\r\n        /*\r\n        console.log('this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);');\r\n        this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);\r\n        console.log('return true');\r\n        */\r\n        return true;\r\n    }\r\n    protected registerReceiveHandler() {\r\n        this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);\r\n    }\r\n\r\n    protected abstract internalStart(param?:any):Promise<void>;\r\n    async start(param?:any):Promise<void> {\r\n        this.disposer = this.dispose.bind(this);\r\n        this.registerReceiveHandler();\r\n        let ret = await this.beforeStart();\r\n        if (ret === false) return;\r\n        await this.internalStart(param);\r\n    }\r\n\r\n    get isCalling():boolean {return this._resolve_$ !== undefined}\r\n\r\n    private _resolve_$:((value:any) => void)[];\r\n    async call<T>(param?:any):Promise<T> {\r\n        if (this._resolve_$ === undefined) this._resolve_$ = [];\r\n        return new Promise<T> (async (resolve, reject) => {\r\n            this._resolve_$.push(resolve);\r\n            await this.start(param);\r\n        });\r\n    }\r\n\r\n    async vCall<C extends Controller>(vp: new (controller: C)=>VPage<C>, param?:any):Promise<any> {\r\n        if (this._resolve_$ === undefined) this._resolve_$ = [];\r\n        return new Promise<any> (async (resolve, reject) => {\r\n            this._resolve_$.push(resolve);\r\n            await (new vp(this as any)).open(param);\r\n        });\r\n    }\r\n\r\n    returnCall(value:any) {\r\n        if (this._resolve_$ === undefined) return;\r\n        let resolve = this._resolve_$.pop();\r\n        if (resolve === undefined) {\r\n            alert('the Controller call already returned, or not called');\r\n            return;\r\n        }\r\n        resolve(value);\r\n    }\r\n\r\n    openPage(page:JSX.Element) {\r\n        nav.push(page, this.disposer);\r\n        this.disposer = undefined;\r\n    }\r\n\r\n    replacePage(page:JSX.Element) {\r\n        nav.replace(page, this.disposer);\r\n        this.disposer = undefined;\r\n    }\r\n\r\n    backPage() {\r\n        nav.back();\r\n    }\r\n\r\n    closePage(level?:number) {\r\n        nav.pop(level);\r\n    }\r\n\r\n    ceasePage(level?:number) {\r\n        nav.ceaseTop(level);\r\n    }\r\n\r\n    removeCeased() {\r\n        nav.removeCeased();\r\n    }\r\n\r\n    regConfirmClose(confirmClose: ()=>Promise<boolean>) {\r\n        nav.regConfirmClose(confirmClose);\r\n    }\r\n}\r\n\r\n\r\nexport abstract class View<C extends Controller> {\r\n    protected controller: C;\r\n    protected readonly res: any;\r\n    protected readonly x: any;\r\n\r\n    constructor(controller: C) {\r\n        this.controller = controller;\r\n        this.res = controller.res;\r\n        this.x = controller.x;\r\n    }\r\n\r\n    protected get isDev() {return isDevelopment}\r\n\r\n    abstract render(param?:any): JSX.Element;\r\n\r\n    protected renderVm(vm: new (controller: C)=>View<C>, param?:any) {\r\n        return (new vm(this.controller)).render(param);\r\n    }\r\n\r\n    protected async openVPage(vp: new (controller: C)=>VPage<C>, param?:any):Promise<void> {\r\n        await (new vp(this.controller)).open(param);\r\n    }\r\n\r\n    protected async event(type:string, value?:any) {\r\n        /*\r\n        if (this._resolve_$_ !== undefined) {\r\n            await this._resolve_$_({type:type, value:value});\r\n            return;\r\n        }*/\r\n        await this.controller.event(type, value);\r\n    }\r\n\r\n    async vCall<C extends Controller>(vp: new (controller: C)=>VPage<C>, param?:any):Promise<any> {\r\n        return await this.controller.vCall(vp, param);\r\n    }\r\n\r\n    protected returnCall(value:any) {\r\n        this.controller.returnCall(value);\r\n    }\r\n\r\n    protected openPage(view: React.StatelessComponent<any>, param?:any) {\r\n        this.controller.openPage(React.createElement(view, param));\r\n    }\r\n\r\n    protected replacePage(view: React.StatelessComponent<any>, param?:any) {\r\n        this.controller.replacePage(React.createElement(view, param));\r\n    }\r\n\r\n    protected openPageElement(page: JSX.Element) {\r\n        this.controller.openPage(page);\r\n    }\r\n\r\n    protected replacePageElement(page: JSX.Element) {\r\n        this.controller.replacePage(page);\r\n    }\r\n\r\n    protected backPage() {\r\n        this.controller.backPage();\r\n    }\r\n\r\n    protected closePage(level?:number) {\r\n        this.controller.closePage(level);\r\n    }\r\n\r\n    protected ceasePage(level?:number) {\r\n        this.controller.ceasePage(level);\r\n    }\r\n\r\n    protected removeCeased() {\r\n        this.controller.removeCeased();\r\n    }\r\n\r\n    protected regConfirmClose(confirmClose: ()=>Promise<boolean>) {\r\n        this.controller.regConfirmClose(confirmClose);\r\n    }\r\n}\r\n\r\nexport abstract class VPage<C extends Controller> extends View<C> {\r\n    abstract open(param?:any):Promise<void>;\r\n\r\n    render(param?:any):JSX.Element {return null;}\r\n}\r\n\r\nexport type TypeVPage<C extends Controller> = new (controller: C)=>VPage<C>;\r\n\r\n","export * from './schema';\r\nexport * from './uiSchema';\r\nexport * from './toUiSelectItems';","\r\nexport const mobileRegex = /^[0-9]*$/;\r\nexport const emailRegex = /\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/;\r\n// /^([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+@([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+\\.[a-zA-Z]{2,3}$/\r\n\r\nexport const EmailFieldRule = (value:any): string|string[] => {\r\n    if (emailRegex.test(value as string) === false) return '电子邮件格式错误';\r\n}\r\n\r\nexport const MobileFieldRule = (value:any): string|string[] => {\r\n    if (emailRegex.test(value as string) === false) return '手机格式错误';\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nexport interface DropdownAction {\r\n    icon?: string;\r\n    caption?: string;\r\n    action?: () => void;\r\n}\r\n\r\nexport interface DropdownActionsProps {\r\n    icon?: string;\r\n    actions: DropdownAction[];\r\n    isRight?: boolean;\r\n}\r\n\r\nexport interface DropdownActionsState {\r\n    dropdownOpen: boolean;\r\n}\r\n\r\nexport class DropdownActions extends React.Component<DropdownActionsProps, DropdownActionsState> {\r\n    private menu: HTMLDivElement;\r\n    private button: HTMLElement;\r\n    constructor(props:DropdownActionsProps) {\r\n        super(props);\r\n        this.state = {\r\n            dropdownOpen: false\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        document.addEventListener('click', this.handleDocumentClick);\r\n        document.addEventListener('touchstart', this.handleDocumentClick);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('click', this.handleDocumentClick);\r\n        document.removeEventListener('touchstart', this.handleDocumentClick);\r\n    }\r\n\r\n    private handleDocumentClick = (evt:any) => {\r\n        if (this.state.dropdownOpen === false) return;\r\n        if (this.button && this.button.contains(evt.target)) return;\r\n        if (!this.menu) return;\r\n        //if (!this.menu.contains(evt.target)) \r\n        this.toggle();\r\n    }\r\n\r\n    private toggle = () => {\r\n        this.setState({\r\n            dropdownOpen: !this.state.dropdownOpen\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let {icon, actions, isRight} = this.props;\r\n        if (isRight === undefined) isRight = true;\r\n        let hasIcon = actions.some(v => v.icon!==undefined);\r\n        let {dropdownOpen} = this.state;\r\n        //isOpen={this.state.dropdownOpen} toggle={this.toggle}\r\n        return <div className=\"dropdown\">\r\n            <button ref={v=>this.button=v} className=\"cursor-pointer dropdown-toggle btn btn-sm\"\r\n                data-toggle=\"dropdown\"\r\n                aria-expanded={dropdownOpen}\r\n                onClick={this.toggle}>\r\n                <i className={classNames('fa', 'fa-'+(icon||'ellipsis-v'))} />\r\n            </button>\r\n            <div ref={v => this.menu=v} className={classNames({\"dropdown-menu\":true, \"dropdown-menu-right\":isRight, \"show\":dropdownOpen})}>\r\n                {\r\n                    actions.map((v,index) => {\r\n                        let {icon, caption, action} = v;\r\n                        if (icon === undefined && caption === undefined) \r\n                            return <div className=\"dropdown-divider\" />;\r\n                        let i:any;\r\n                        if (hasIcon === true) {\r\n                            if (icon !== undefined) icon = 'fa-' + icon;\r\n                            i = <><i className={classNames('fa', icon, 'fa-fw')} aria-hidden={true}></i>&nbsp; </>;\r\n                        }\r\n                        if (action === undefined) \r\n                            return <h6 className=\"dropdown-header\">{i} {caption}</h6>;\r\n                        return <a className=\"dropdown-item\" key={index} href=\"#\" onClick={(evt:React.MouseEvent<HTMLAnchorElement>)=>{ evt.preventDefault();action()}}>{i} {caption}</a>\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\n/*\r\nexport class DropdownActions extends React.Component<DropdownActionsProps, DropdownActionsState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dropdownOpen: false\r\n        };\r\n    }\r\n    private toggle = () => {\r\n        this.setState({\r\n            dropdownOpen: !this.state.dropdownOpen\r\n        });\r\n    }\r\n    render() {\r\n        let {icon, actions, isRight} = this.props;\r\n        if (isRight === undefined) isRight = true;\r\n        let hasIcon = actions.some(v => v.icon!==undefined);\r\n        return <UncontrolledButtonDropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\r\n            <DropdownToggle caret={true} size=\"sm\" className=\"cursor-pointer\">\r\n                <i className={classNames('fa', 'fa-'+(icon||'ellipsis-v'))} />\r\n            </DropdownToggle>\r\n            <DropdownMenu right={isRight}>\r\n                {actions.map((v,index) => {\r\n                    let {icon, caption, action} = v;\r\n                    if (icon === undefined && caption === undefined) \r\n                        return <div className=\"dropdown-divider\" />;\r\n                    let i;\r\n                    if (hasIcon === true) {\r\n                        if (icon !== undefined) icon = 'fa-' + icon;\r\n                        i = <><i className={classNames('fa', icon, 'fa-fw')} aria-hidden={true}></i>&nbsp; </>;\r\n                    }\r\n                    if (action === undefined) \r\n                        return <h6 className=\"dropdown-header\">{i} {caption}</h6>;\r\n                    return <DropdownItem key={index} onClick={action}>{i} {caption}</DropdownItem>\r\n                })}\r\n            </DropdownMenu>\r\n        </UncontrolledButtonDropdown>\r\n    }\r\n}\r\n*/","import * as React from 'react';\r\n\r\nexport interface EasyDateProps {\r\n    date: Date | number;\r\n}\r\n\r\nfunction renderDate(vDate:Date|number, withTime:boolean) {\r\n    if (!vDate) return null;\r\n    let date: Date;\r\n    switch (typeof vDate) {\r\n        default: date = vDate as Date; break;\r\n        case 'string': date = new Date(vDate); break;\r\n        case 'number': date = new Date((vDate as number)*1000); break;\r\n    }\r\n\r\n    let now = new Date();\r\n    let tick:number, nDate:number, _date:number, month:number, year:number, hm:string, nowYear:number;\r\n    let d = date;\r\n    tick = now.getTime() - d.getTime();\r\n    let hour=d.getHours(), minute=d.getMinutes();\r\n    nDate=now.getDate();\r\n    _date=d.getDate();\r\n    month=d.getMonth()+1;\r\n    year=d.getFullYear();\r\n    nowYear = now.getFullYear();\r\n    hm = withTime === true? ' ' + hour + ((minute<10?':0':':') + minute) : '';\r\n\r\n    if (tick < -24*3600*1000) {\r\n        if (year === nowYear)\r\n            return month+'月'+_date+'日' + hm;\r\n        else\r\n            return year+'年'+month+'月'+_date+'日' + hm;\r\n    }\r\n    if (tick < 24*3600*1000) {\r\n        return _date!==nDate? \r\n            (tick < 0? '明天 ' : '昨天 ') + hm \r\n            : withTime===true? hm : '今天';\r\n    }\r\n    if (year === nowYear) {\r\n        return month+'月'+_date+'日';\r\n    }\r\n    return year+'年'+month+'月'+_date+'日';\r\n}\r\n\r\n\r\nexport class EasyDate extends React.Component<EasyDateProps> {\r\n    render() {\r\n        return renderDate(this.props.date, false);\r\n    }\r\n}\r\n\r\nexport class EasyTime extends React.Component<EasyDateProps> {\r\n    render() {\r\n        return renderDate(this.props.date, true);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Image } from '../ui';\r\n\r\nexport interface MediaProps {\r\n    icon: string;\r\n    main: string|JSX.Element;\r\n    discription?: string | JSX.Element;\r\n    px?: number;\r\n    py?: number;\r\n}\r\n\r\nexport class Media extends React.Component<MediaProps> {\r\n    render() {\r\n        let {icon, main, discription, px, py} = this.props;\r\n        let disp:any;\r\n        if (typeof discription === 'string')\r\n            disp = <div>{discription}</div>;\r\n        else\r\n            disp = discription;\r\n        let cn = classNames(\r\n            'media', \r\n            px===undefined? 'px-0':'px-'+px, \r\n            py===undefined? 'py-2':'py-'+py);\r\n        return <div className={cn}>\r\n            <Image className=\"mr-3 w-4c h-4c\" src={icon} />\r\n            <div className=\"media-body\">\r\n                <h5 className=\"mt-0\">{main}</h5>\r\n                {disp}\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\n\r\nexport interface SearchBoxProps {\r\n    className?: string;\r\n    label?: string;\r\n    initKey?: string;\r\n    placeholder?: string;\r\n    buttonText?: string;\r\n    maxLength?: number;\r\n    size?: 'sm' | 'md' | 'lg';\r\n    inputClassName?: string;\r\n    onSearch: (key:string)=>Promise<void>;\r\n    onFocus?: ()=>void;\r\n    allowEmptySearch?: boolean;\r\n}\r\n\r\n/*\r\nexport interface SearchBoxState {\r\n    disabled: boolean;\r\n}*/\r\n\r\nexport class SearchBox extends React.Component<SearchBoxProps> { //}, SearchBoxState> {\r\n    private input: HTMLInputElement;\r\n    private key: string = null;\r\n    @observable private disabled: boolean;\r\n\r\n    private onChange = (evt: React.ChangeEvent<any>) => {\r\n        this.key = evt.target.value;\r\n        if (this.key !== undefined) {\r\n            this.key = this.key.trim();\r\n            if (this.key === '') this.key = undefined;\r\n        }\r\n        if (this.props.allowEmptySearch !== true) {\r\n            this.disabled = !this.key;\r\n        }\r\n    }\r\n    private onSubmit = async (evt: React.FormEvent<any>) => {\r\n        evt.preventDefault();\r\n        if (this.key === null) this.key = this.props.initKey || '';\r\n        if (this.props.allowEmptySearch !== true) {\r\n            if (!this.key) return;\r\n            if (this.input) this.input.disabled = true;\r\n        }\r\n        await this.props.onSearch(this.key);\r\n        if (this.input) this.input.disabled = false;\r\n    }\r\n    clear() {\r\n        if (this.input) this.input.value = '';\r\n    }\r\n    render() {\r\n        let {className, inputClassName, onFocus,\r\n            label, placeholder, buttonText, maxLength, size} = this.props;\r\n        let inputSize:string;\r\n        switch (size) {\r\n            default:\r\n            case 'sm': inputSize = 'input-group-sm'; break;\r\n            case 'md': inputSize = 'input-group-md'; break;\r\n            case 'lg': inputSize = 'input-group-lg'; break;\r\n        }\r\n        let lab:any;\r\n        if (label !== undefined) lab = <label className=\"input-group-addon\">{label}</label>;\r\n        return <form className={className} onSubmit={this.onSubmit} >\r\n            <div className={classNames(\"input-group\", inputSize)}>\r\n                {lab}\r\n                <input ref={v=>this.input=v} onChange={this.onChange}\r\n                    type=\"text\"\r\n                    name=\"key\"\r\n                    onFocus={onFocus}\r\n                    className={classNames('form-control', inputClassName || 'border-primary')}\r\n                    placeholder={placeholder}\r\n                    defaultValue={this.props.initKey}\r\n                    maxLength={maxLength} />\r\n                <div className=\"input-group-append\">\r\n                    <button className=\"btn btn-primary\"\r\n                        type=\"submit\"\r\n                        disabled={this.disabled}>\r\n                        <i className='fa fa-search' />\r\n                        <i className=\"fa\"/>\r\n                        {buttonText}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </form>;\r\n    }\r\n}\r\n","import {observable, computed} from 'mobx';\r\n\r\nexport interface Id {\r\n    id: number;\r\n}\r\n\r\nexport abstract class CacheIds<T extends Id> {\r\n    constructor(maxCount:number = 100) {\r\n        this.maxCount = maxCount;\r\n    }\r\n    private maxCount:number;\r\n    private arr:T[] = [];\r\n    @observable dict = new Map<number, T>();\r\n\r\n    loadIds(ids:number[]) {\r\n        let arr:number[] = [];\r\n        for (let id of ids) {\r\n            if (id === null) continue;\r\n            let item = this.dict.get(id);\r\n            if (item === undefined) {\r\n                arr.push(id);\r\n                item = {id:id} as T;\r\n                this.dict.set(id, item);\r\n            }\r\n        }                \r\n        this.loadId(arr);\r\n    }\r\n\r\n    get(id:number):T {\r\n        if (id === undefined || id === null) return null;\r\n        let item = this.dict.get(id);\r\n        if (item === undefined) {\r\n            this.dict.set(id, {id:id} as T);\r\n            this.loadId([id]);\r\n            item = this.dict.get(id);\r\n        }\r\n        return item;\r\n    }\r\n    private setItem(id:number, item:T) {\r\n        if (item === undefined) {\r\n            this.dict.set(id, null);\r\n            this.arr.push({id: id} as T);\r\n        }\r\n        else {\r\n            this.dict.set(id, item);\r\n            this.arr.push(item);\r\n        }\r\n        if (this.arr.length > this.maxCount) {\r\n            item = this.arr.shift();\r\n            this.dict.delete(item.id);\r\n        }\r\n    }\r\n    private async loadId(ids:number[]) {\r\n        let items = await this._loadIds(ids);\r\n        if (items === undefined) {\r\n            for (let id of ids) {\r\n                if (id === null) continue;\r\n                let item = await this._loadId(id);\r\n                this.setItem(id, item);\r\n            }\r\n        }\r\n        else {\r\n            for (let id of ids) {\r\n                let item = items.find(v => v.id === id);\r\n                this.setItem(id, item);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected abstract async _loadIds(ids:number[]):Promise<T[]>;\r\n    protected abstract async _loadId(id:number):Promise<T>;\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {FormView, FormProps} from './formView';\r\n\r\nexport function tonvaDebug() {\r\n    let a = 0;\r\n}\r\n\r\nexport interface TonvaFormProps extends FormProps {\r\n    className?: string;\r\n    initValues?: any;\r\n}\r\n\r\n@observer \r\nexport class TonvaForm extends React.Component<TonvaFormProps, {}> {\r\n    formView: FormView;\r\n    constructor(props:TonvaFormProps) {\r\n        super(props);\r\n        this.formView = new FormView(this.props);\r\n    }\r\n    componentWillMount() {\r\n        this.formView.setInitValues(this.props.initValues);\r\n    }\r\n    debug() {\r\n        let s = null;\r\n    }\r\n    render() {\r\n        let {className, children, initValues} = this.props;\r\n        return <div className={className}>\r\n            {\r\n                children === undefined? \r\n                    this.formView.render() : \r\n                    <form onSubmit={this.formView.onSubmit}>{children}</form>\r\n            }\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport className from 'classnames';\r\nimport {FormProps, FormRow, SubmitResult, FormView, TonvaForm} from '../form';\r\n\r\nexport interface Step {\r\n    formRows: FormRow[];\r\n    next: undefined | string | ((values:any) => string);    // 返回下一步的step名称或者直接就是名称\r\n    ex?: any;                                   // 每一步额外的参数\r\n}\r\n\r\nexport interface MultiStepProps {\r\n    className?: string;\r\n    header?: (step:Step, num:number) => JSX.Element; //name: step name, num: 第几步，1开始\r\n    footer?: (step:Step, num:number) => JSX.Element; //name: step name, num: 第几步，1开始\r\n    steps: {[name:string]: Step};\r\n    first: string;         // 第一步的名字\r\n    onSubmit: (values:any) => Promise<SubmitResult|undefined>;\r\n    submitButton?: string|JSX.Element;\r\n}\r\n\r\nexport interface StepView {\r\n    stepName: string;\r\n    step: Step;\r\n    props: FormProps;\r\n    //view: JSX.Element;\r\n}\r\nexport interface MultiStepState {\r\n    //num: number;\r\n    //step: Step;\r\n    //formView: FormView;\r\n    topView: StepView;\r\n    stepViews: StepView[];\r\n}\r\n\r\nexport class MultiStep extends React.Component<MultiStepProps, MultiStepState> {\r\n    private values: any = {};\r\n    private stepViews: StepView[] = [];\r\n    private topView: StepView;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            topView: undefined,\r\n            stepViews: [],\r\n        }\r\n        this.onPrev = this.onPrev.bind(this);\r\n        this.onNext = this.onNext.bind(this);\r\n    }\r\n    \r\n    private setStep(stepName: string) {\r\n        let step = this.props.steps[stepName];\r\n        if (step === undefined) return; //throw new Error('Unknown step name: ' + stepName);\r\n        if (this.topView !== undefined) this.stepViews.push(this.topView);\r\n        let otherButton, onOther;\r\n        if (this.stepViews.length > 0) {\r\n            otherButton = <ButtonConten prefix=\"undo\" text=\"上一步\" />;\r\n            onOther = this.onPrev;\r\n        }\r\n        let {header, footer} = this.props;\r\n        let btnContent = step.next === undefined?\r\n            {prefix: 'cloud-upload', text: this.props.submitButton || '提交'} :\r\n            {suffix: 'arrow-right', text: '下一步'}\r\n        let formProps = {\r\n            formRows: step.formRows,\r\n            submitButton: <ButtonConten {...btnContent} />,\r\n            onSubmit: this.onNext,\r\n            otherButton: otherButton,\r\n            onOther: onOther,\r\n        };\r\n        let num = this.stepViews.length + 1;\r\n        this.topView = {\r\n            stepName: stepName,\r\n            step: step,\r\n            props: formProps,\r\n        };\r\n        this.setState({\r\n            topView: this.topView,\r\n            stepViews: this.stepViews\r\n        });\r\n    }\r\n    componentWillMount() {\r\n        this.setStep(this.props.first);\r\n    }\r\n    private onPrev(values:any) {\r\n        _.assign(this.values, values);\r\n        this.topView = this.stepViews.pop();\r\n        this.setState({\r\n            topView: this.topView,\r\n            stepViews: this.stepViews\r\n        });\r\n    }\r\n    private onNext(values:any): Promise<SubmitResult|undefined> {\r\n        _.assign(this.values, values);\r\n        //let {num, step} = this.state;\r\n        let {next} = this.topView.step;\r\n        if (next === undefined) {\r\n            return this.props.onSubmit(this.values)\r\n        }\r\n        let nextStepName:string;\r\n        if (typeof next === 'string') {\r\n            nextStepName = next;\r\n        }\r\n        else {\r\n            nextStepName = next(this.values);\r\n        }\r\n        this.setStep(nextStepName);\r\n    }\r\n    render() {\r\n        let {className, header, footer} = this.props;\r\n        let {topView, stepViews} = this.state;\r\n        let {stepName, step} = topView;\r\n        let hidden = {visibility: 'hidden'};\r\n        let num = stepViews.length + 1;\r\n        return <div className={className}>\r\n            <div>\r\n                {header && header(step, num)}\r\n                <TonvaForm key={stepName} initValues={this.values} {...topView.props} />\r\n                {footer && footer(step, num)}\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst ButtonConten = (props:{prefix?:string, text?:string|JSX.Element, suffix?:string}) => {\r\n    let {prefix, text, suffix} = props;\r\n    let pIcon, sIcon;\r\n    if (prefix !== undefined) pIcon = <i className={className('fa', 'fa-' + prefix)} />;\r\n    if (suffix !== undefined) sIcon = <i className={className('fa', 'fa-' + suffix)} />;\r\n    return <React.Fragment>{pIcon} {props.text} {sIcon}</React.Fragment>;\r\n}\r\n    \r\n","import _ from 'lodash';\r\nimport { Context } from '../context';\r\nimport { FormRes } from '../formRes';\r\n\r\nexport abstract class Rule {\r\n    abstract check(defy:string[], value:any):void;\r\n}\r\n\r\nexport type ContextRule = (context:Context)=>{[target:string]:string[]|string} | string[] | string;\r\nexport type FieldRule = (value:any) => string[] | string;\r\n\r\nexport class RuleCustom extends Rule {\r\n    private func: FieldRule;\r\n    constructor(func: FieldRule) {\r\n        super();\r\n        this.func = func;\r\n    }\r\n    check(defy:string[], value:any) {\r\n        let ret = this.func(value);\r\n        if (ret === undefined) return;\r\n        switch (typeof ret) {\r\n            case 'undefined': return;\r\n            case 'string': defy.push(ret as string); return;\r\n            default: defy.push(...ret); return;\r\n        }        \r\n    }\r\n}\r\n\r\nexport abstract class RulePredefined extends Rule {\r\n    protected res: FormRes;\r\n    constructor(res: FormRes) {\r\n        super();\r\n        this.res = res;\r\n    }\r\n}\r\n\r\nexport class RuleRequired extends RulePredefined {\r\n    check(defy:string[], value:any) {\r\n        switch (typeof value) {\r\n            default:\r\n            case 'boolean': return;\r\n            case 'object':\r\n                if (value !== null) return;\r\n                break;\r\n            case 'string':\r\n                if ((value as string).trim().length > 0) return;\r\n                break;\r\n            case 'number':\r\n                if ((value as number) !== NaN) return;\r\n                break;\r\n            case 'undefined':\r\n                break;\r\n        }\r\n        defy.push(this.res.required);\r\n    }\r\n}\r\n\r\nexport class RuleNum extends RulePredefined {\r\n    private minMsg: _.TemplateExecutor;\r\n    private maxMsg: _.TemplateExecutor;\r\n    protected min: number;\r\n    protected max: number\r\n    constructor(res: FormRes, min?: number, max?: number) {\r\n        super(res);\r\n        this.minMsg = _.template(res.min);\r\n        this.maxMsg = _.template(res.max);\r\n        this.min = min;\r\n        this.max = max;\r\n    }\r\n    check(defy:string[], value:any) {\r\n        if (value === undefined || value === null) return;\r\n        let n = Number(value);\r\n        if (n === NaN) {\r\n            defy.push(this.res.number);\r\n        }\r\n        else {\r\n            this.checkMore(defy, n);\r\n        }\r\n    }\r\n\r\n    protected checkMore(defy:string[], value: number) {\r\n        if (this.min !== undefined && Number(value) < this.min) {\r\n            defy.push(this.minMsg({min:this.min}));\r\n        }\r\n        if (this.max !== undefined && Number(value) > this.max) {\r\n            defy.push(this.maxMsg({max:this.max}));\r\n        }\r\n    }\r\n}\r\n\r\nexport class RuleInt extends RuleNum {\r\n    protected checkMore(defy:string[], n: number) {\r\n        super.checkMore(defy, n);\r\n        if (Number.isInteger(n) === false) {\r\n            defy.push(this.res.integer);\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { UiItem, ChangingHandler, ChangedHandler } from '../../schema';\r\nimport { FieldProps } from '../field';\r\nimport { Context } from '../context';\r\nimport { ItemSchema } from '../../schema';\r\nimport { Rule, RuleRequired, RuleCustom, FieldRule } from '../rules';\r\nimport { computed, observable, reaction } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport abstract class Widget {\r\n    protected name: string;\r\n    protected context: Context;\r\n    protected fieldProps:FieldProps;\r\n    protected children: React.ReactNode;\r\n    protected itemSchema: ItemSchema;\r\n    protected ui: UiItem;\r\n    protected defaultValue: any;\r\n    protected value: any;\r\n    protected rules: Rule[];\r\n    @observable protected errors: string[] = [];\r\n    @observable protected contextErrors: string[] = [];\r\n    @computed protected get hasError():boolean {return (this.errors.length + this.contextErrors.length)>0}\r\n    protected readOnly:boolean;\r\n    protected disabled:boolean;\r\n    @observable visible:boolean;\r\n\r\n    constructor(context:Context, itemSchema:ItemSchema, fieldProps:FieldProps, children: React.ReactNode) {\r\n        this.context = context;\r\n        let {name} = itemSchema;\r\n        this.name = name;\r\n        this.itemSchema = itemSchema;\r\n        this.fieldProps = fieldProps;\r\n        this.children = children;\r\n        this.ui = context.getUiItem(name);\r\n        if (this.ui === undefined) {\r\n            this.readOnly = false;\r\n            this.disabled = false;\r\n            this.visible = true;\r\n        }\r\n        else {\r\n            let {readOnly, disabled, visible} = this.ui;\r\n            this.readOnly = (readOnly === true);\r\n            this.disabled = (disabled === true);\r\n            this.visible = !(visible === false);            \r\n        }\r\n        this.value = this.defaultValue =  context.getValue(name); //defaultValue;\r\n        this.init();\r\n    }\r\n\r\n    protected init() {\r\n        this.rules = [];\r\n        if (this.itemSchema.required === true) {\r\n            this.rules.push(new RuleRequired(this.context.form.res));\r\n        }\r\n        this.buildRules();\r\n        if (this.ui === undefined) return;\r\n        let {rules} = this.ui;\r\n        if (rules === undefined) return;\r\n        if (Array.isArray(rules) === false) {\r\n            this.rules.push(new RuleCustom(rules as FieldRule));\r\n            return;\r\n        }\r\n        for (let rule of rules as FieldRule[]) {\r\n            this.rules.push(new RuleCustom(rule));\r\n        }\r\n    }\r\n\r\n    protected buildRules() {\r\n    }\r\n\r\n    checkRules() {\r\n        let defy:string[] = [];\r\n        for (let r of this.rules) r.check(defy, this.value);\r\n        if (defy.length === 0) {\r\n            this.context.removeErrorWidget(this);\r\n        }\r\n        else {\r\n            this.context.addErrorWidget(this);\r\n            this.errors.push(...defy);\r\n        }\r\n    }\r\n\r\n    @computed get isOk() {\r\n        return this.errors.length ===0;\r\n    }\r\n\r\n    setError(err:string | string[]) {\r\n        if (err === undefined) return;\r\n        if (typeof err === 'string') this.errors.push(err);\r\n        else this.errors.push(...err);\r\n    }\r\n\r\n    setContextError(err:string | string[]) {\r\n        if (err === undefined) return;\r\n        if (typeof err === 'string') this.contextErrors.push(err);\r\n        else this.contextErrors.push(...err);\r\n    }\r\n\r\n    clearError() {\r\n        this.errors.splice(0);\r\n    }\r\n\r\n    clearContextError() {\r\n        this.contextErrors.splice(0);\r\n    }\r\n\r\n    protected parse(value:any):any {return value}\r\n\r\n    protected setElementValue(value:any) {}\r\n    protected setDataValue(value:any) {\r\n        if (this.isChanging === true) return;\r\n        this.context.initData[this.name] = this.value = this.parse(value);\r\n    }\r\n\r\n    setValue(value:any) {\r\n        if (this.isChanging === true) return;\r\n        //this.setDataValue(value);\r\n        //this.setElementValue(value);\r\n        this.changeValue(value, false);\r\n    }\r\n\r\n    getValue() {\r\n        return this.context.getValue(this.name);\r\n    }\r\n\r\n    getReadOnly():boolean {return this.readOnly}\r\n    getDisabled():boolean {return this.disabled}\r\n    getVisible():boolean {return this.visible}\r\n    setReadOnly(value:boolean) {this.readOnly = value}\r\n    setDisabled(value:boolean) {this.disabled = value}\r\n    setVisible(value:boolean) {this.visible = value}\r\n\r\n    private isChanging: boolean;\r\n    protected onInputChange = (evt: React.ChangeEvent<any>) => {\r\n        this.changeValue(evt.target.value, true);\r\n    }\r\n\r\n    protected changeValue(newValue: any, fromElement: boolean) {\r\n        let prev = this.value;\r\n        let onChanging: ChangingHandler;\r\n        let onChanged: ChangedHandler;\r\n        if (this.ui !== undefined) {\r\n            onChanging = this.ui.onChanging;\r\n            onChanged = this.ui.onChanged;\r\n        }\r\n        let allowChange = true;\r\n        if (onChanging !== undefined) {\r\n            this.isChanging = true;\r\n            allowChange = onChanging(this.context, this.value, prev);\r\n            this.isChanging = false;\r\n        }\r\n        if (allowChange === true) {\r\n            this.setDataValue(newValue);\r\n            if (fromElement !== true) this.setElementValue(newValue);\r\n            if (onChanged !== undefined) {\r\n                this.isChanging = true;\r\n                onChanged(this.context, this.value, prev);\r\n                this.isChanging = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    protected get className():string {\r\n        let fieldClass:string;\r\n        if (this.context.inNode === false) fieldClass = 'form-control';\r\n        return classNames(fieldClass, this.context.form.FieldClass, this.ui && this.ui.className);\r\n    }\r\n\r\n    protected abstract render():JSX.Element;\r\n\r\n    container = observer(():JSX.Element => {\r\n        if (this.visible === false) return null;\r\n        let {form, inNode} = this.context;\r\n        if (inNode === true) return this.render();\r\n        let label:any = this.label;\r\n        if (this.itemSchema.required === true && form.props.requiredFlag !== false) {\r\n            if (label !== null) label = <>{label}&nbsp;<span className=\"text-danger\">*</span></>;\r\n        }\r\n        return form.FieldContainer(label, this.render());\r\n    })\r\n\r\n    protected get label():string {\r\n        let label:any;\r\n        if (this.ui === undefined) {\r\n            label = this.name;\r\n        }\r\n        else {\r\n            let uiLabel = this.ui.label;\r\n            if (uiLabel === null) label = null;\r\n            else label = uiLabel || this.name;\r\n        }\r\n        return label;\r\n    }\r\n\r\n    protected renderTemplet():JSX.Element | undefined {\r\n        if (this.children !== undefined) {\r\n            return <>{this.children}</>;\r\n        }\r\n        if (this.ui === undefined) return undefined;\r\n        let {Templet} = this.ui;\r\n        if (typeof Templet === 'function') return Templet(this.value);\r\n        return Templet;\r\n    }\r\n\r\n    protected renderErrors() {\r\n        let errorList:string[] = [...this.errors, ...this.contextErrors];\r\n        if (errorList.length === 0) return null;\r\n        let {inNode} = this.context;\r\n        let tag = inNode === true? 'span' : 'div';\r\n        return errorList.map(err => React.createElement(tag, \r\n            {\r\n                key: err, \r\n                className: 'text-danger d-inline-block my-2 ml-3'\r\n            },\r\n            <><i className=\"fa fa-exclamation-circle\" /> &nbsp;{err}</>\r\n        ));\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiTextItem, StringSchema } from '../../schema';\r\n\r\nexport class TextWidget extends Widget {\r\n    protected inputType = 'text';\r\n    protected ui: UiTextItem;\r\n    protected input: HTMLInputElement;\r\n\r\n    protected setElementValue(value:any) {\r\n        if (this.input === null) return;\r\n        this.input.value = value;\r\n    }\r\n    protected get placeholder() {return (this.ui && this.ui.placeholder) || this.name}\r\n    protected onKeyDown = async (evt:React.KeyboardEvent<HTMLInputElement>) => {\r\n        this.internalOnKeyDown(evt);\r\n        if (evt.keyCode !== 13) return;\r\n        let {onEnter} = this.context.form.props;\r\n        if (onEnter === undefined) return;\r\n\r\n        this.changeValue(evt.currentTarget.value, true);\r\n\r\n        //this.checkRules();\r\n        //this.context.checkContextRules();\r\n        this.input.blur();\r\n\r\n        let ret = await onEnter(this.name, this.context);\r\n        if (ret !== undefined) {\r\n            this.context.setError(this.name, ret);\r\n        }\r\n    }\r\n\r\n    protected internalOnKeyDown(evt:React.KeyboardEvent<HTMLInputElement>) {\r\n    }\r\n\r\n    protected onBlur(evt: React.FocusEvent<any>) {\r\n        this.onInputChange(evt);\r\n        this.checkRules();\r\n        this.context.checkContextRules();\r\n    }\r\n    protected onFocus(evt: React.FocusEvent<any>) {\r\n        this.clearError();\r\n        this.context.removeErrorWidget(this);\r\n        this.context.clearErrors();\r\n    }\r\n    protected onChange(evt: React.ChangeEvent<any>) {\r\n    }\r\n\r\n    setReadOnly(value:boolean) {\r\n        if (this.input === null) return;\r\n        this.input.readOnly = this.readOnly = value;\r\n    }\r\n    setDisabled(value:boolean) {\r\n        if (this.input === null) return;\r\n        this.input.disabled = this.disabled = value;\r\n    }\r\n\r\n    render() {\r\n        let renderTemplet = this.renderTemplet();\r\n        if (renderTemplet !== undefined) return renderTemplet;\r\n        let cn = {\r\n            //'form-control': true,\r\n        };\r\n        if (this.hasError === true) {\r\n            cn['is-invalid'] = true;\r\n        }\r\n        else {\r\n            cn['required-item'] = this.itemSchema.required === true;\r\n        }\r\n        return <><input ref={input=>this.input = input}\r\n            className={classNames(this.className, cn)}\r\n            type={this.inputType}\r\n            defaultValue={this.value}\r\n            onChange={(evt: React.ChangeEvent<any>) => this.onChange(evt)}\r\n            placeholder={this.placeholder}\r\n            readOnly={this.readOnly}\r\n            disabled={this.disabled}\r\n            onKeyDown = {this.onKeyDown}\r\n            onFocus = {(evt: React.FocusEvent<any>) => this.onFocus(evt)}\r\n            onBlur={(evt: React.FocusEvent<any>) => this.onBlur(evt)}\r\n            maxLength={(this.itemSchema as StringSchema).maxLength} />\r\n            {this.renderErrors()}\r\n        </>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { TextWidget } from './textWidget';\r\nimport { RuleNum, RuleInt } from '../rules';\r\nimport { NumBaseSchema } from '../../schema';\r\n\r\nexport class NumberWidget extends TextWidget {\r\n    protected inputType = 'number';\r\n    protected itemSchema: NumBaseSchema;\r\n\r\n    protected buildRules() {\r\n        super.buildRules();\r\n        let res = this.context.form.res;\r\n        let {min, max} = this.itemSchema;\r\n        this.rules.push(\r\n            this.itemSchema.type === 'integer'?\r\n                new RuleNum(res, min, max) :\r\n                new RuleInt(res, min, max)\r\n        );\r\n        /*\r\n        if (this.itemSchema.type === 'integer') {\r\n            this.rules.push(new RuleInt);\r\n        }\r\n        let {min, max} = this.itemSchema;\r\n        if (min !== undefined) this.rules.push(new RuleMin(min));\r\n        if (max !== undefined) this.rules.push(new RuleMax(max));\r\n        */\r\n    }\r\n\r\n    protected parse(value:any):any {\r\n        if (value === undefined || value === null) return;\r\n        return Number(value);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { NumberWidget } from './numberWidget';\r\n\r\nexport class UpdownWidget extends NumberWidget {\r\n    protected inputType = 'number';\r\n\r\n    protected isValidKey(key:number):boolean {\r\n        return key===46 || key===8 || key===37 || key===39\r\n            || key>=48 && key<=57\r\n            || key>=96 && key<=105\r\n            || key===109 || key===189;\r\n    }\r\n    \r\n    protected internalOnKeyDown(evt:React.KeyboardEvent<HTMLInputElement>) {\r\n        let key = evt.keyCode;\r\n        event.returnValue = this.isValidKey(key);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { TextWidget } from './textWidget';\r\n\r\nexport class DateWidget extends TextWidget {\r\n    protected inputType = 'date';\r\n}\r\n\r\nexport class DateTimeWidget extends TextWidget {\r\n    protected inputType = 'datetime';\r\n}\r\n\r\nexport class TimeWidget extends TextWidget {\r\n    protected inputType = 'time';\r\n}\r\n\r\nexport class MonthWidget extends TextWidget {\r\n    protected inputType = 'month';\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiCheckItem } from '../../schema';\r\n\r\nexport class CheckBoxWidget extends Widget {\r\n    protected input: HTMLInputElement;\r\n    protected ui: UiCheckItem;\r\n    protected trueValue: any;\r\n    protected falseValue: any;\r\n\r\n    protected init() {\r\n        super.init();\r\n        if (this.ui !== undefined) {\r\n            let {trueValue, falseValue} = this.ui;\r\n            if (trueValue === undefined) this.trueValue = true;\r\n            else this.trueValue = trueValue;\r\n            if (falseValue === undefined) this.falseValue = false;\r\n            else this.falseValue = falseValue;\r\n        }\r\n        else {\r\n            this.trueValue = true;\r\n            this.falseValue = false;\r\n        }\r\n    }\r\n    protected setElementValue(value:any) {\r\n        this.input.checked = value === this.trueValue;\r\n    }\r\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\r\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\r\n\r\n    protected onInputChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setDataValue(evt.target.checked === true? this.trueValue : this.falseValue);\r\n    }\r\n\r\n    protected onClick = () => {\r\n        this.context.clearErrors();\r\n    }\r\n\r\n    render() {\r\n        let cn = classNames(this.className, 'form-check-inline p-0');\r\n        let input = <input\r\n            ref={(input)=>this.input = input}\r\n            className={'align-self-center'}\r\n            type=\"checkbox\"\r\n            defaultChecked={this.defaultValue} \r\n            onChange={this.onInputChange}\r\n            onClick={this.onClick} />;\r\n        if (this.context.inNode === true) {\r\n            return <label className={cn}>\r\n                {input} {(this.ui&&this.ui.label) || this.name}\r\n            </label>\r\n        }\r\n        else {\r\n            return <div className={cn}>\r\n                <label className=\"w-100 h-100 mb-0 d-flex justify-content-center\">{input}</label>\r\n            </div>;\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\nimport { Widget } from './widget';\r\nimport { UiSelect } from '../../schema';\r\n\r\nexport class SelectWidget extends Widget {\r\n    protected select: HTMLSelectElement;\r\n    protected ui: UiSelect;\r\n    @observable protected readOnly: boolean;\r\n\r\n    protected setElementValue(value:any) {this.select.value = value}\r\n    protected onInputChange = (evt:React.ChangeEvent<HTMLSelectElement>) => {\r\n        this.setDataValue(evt.target.value);\r\n    }\r\n\r\n    setReadOnly(value:boolean) {this.select.disabled = this.readOnly = !value}\r\n    setDisabled(value:boolean) {this.select.disabled = this.disabled = value}\r\n\r\n    render() {\r\n        if (this.readOnly === true) {\r\n            let option = this.ui.list.find(v => v.value === this.value);\r\n            let title = (option === undefined)? '(???)' : option.title;\r\n            return <span className=\"form-control w-min-6c\">{title}</span>;\r\n        }\r\n        return <select\r\n            ref={(select)=>this.select = select}\r\n            className={classNames(this.className, 'form-control')}\r\n            defaultValue={this.defaultValue} \r\n            onChange={this.onInputChange}>\r\n            {this.ui.list.map((v,index) => {\r\n                let {title, value} = v;\r\n                let cn:string;\r\n                //if (value === undefined || value === null) cn = 'text-light small';\r\n                //else cn = 'text-danger';\r\n                return <option className={cn} key={index} value={value}>{title || value}</option>\r\n            })}\r\n        </select>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { TextWidget } from './textWidget';\r\nimport { Widget } from './widget';\r\nimport { UiRadio } from '../../schema';\r\nimport { RowContext } from '../context';\r\n\r\n\r\nconst radioStyle:React.CSSProperties = {height: 'auto'};\r\n\r\nexport class RadioWidget extends Widget {\r\n    protected inputs: {[index:number]: HTMLInputElement} = {};\r\n    protected ui: UiRadio;\r\n\r\n    protected setElementValue(value:any) {\r\n        for (let i in this.inputs) {\r\n            let input = this.inputs[i];\r\n            input.checked = value === input.value;\r\n        }\r\n    }\r\n    setReadOnly(value:boolean) {\r\n        this.readOnly = value;\r\n        for (let i in this.inputs) this.inputs[i].readOnly = value;\r\n    }\r\n    setDisabled(value:boolean) {\r\n        this.disabled = value;\r\n        for (let i in this.inputs) this.inputs[i].disabled = value\r\n    }\r\n\r\n    /*\r\n    protected onInputChange = (evt: React.ChangeEvent<any>) => {\r\n        this.changeValue(evt.target.value, true);\r\n    }\r\n    */\r\n\r\n    render() {\r\n        let {defaultValue, list} = this.ui;\r\n        let {isRow, inNode} = this.context;\r\n        let rowKey:number;\r\n        if (isRow === true) {\r\n            rowKey = (this.context as RowContext).rowKey;\r\n        }\r\n        let cn = classNames(this.className, 'py-0');\r\n        return <span className={cn} style={radioStyle}>\r\n                {list.map((v,index) => {\r\n                    let {value, title} = v;\r\n                    let name = this.name;\r\n                    if (rowKey !== undefined) name += '-' + rowKey;\r\n                    return <label key={index} className=\"form-radio-inline\">\r\n                        <input ref={input=>this.inputs[index]=input} type=\"radio\" name={name}\r\n                            value={value} defaultChecked={(this.defaultValue || defaultValue)===value}\r\n                            onChange={this.onInputChange} />\r\n                        {title || value}\r\n                    </label>;\r\n                    //</span>\r\n                })}\r\n            </span>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiIdItem, TempletType } from '../../schema';\r\nimport { observable } from 'mobx';\r\n\r\nexport class IdWidget extends Widget {\r\n    protected ui: UiIdItem;\r\n    @observable protected value:number;\r\n    setReadOnly(value:boolean) {this.readOnly = value}\r\n    setDisabled(value:boolean) {this.disabled = value}    \r\n\r\n    protected onClick = async () => {\r\n        let pickId = this.ui && this.ui.pickId;\r\n        if (pickId === undefined) {\r\n            alert('no pickId defined!');\r\n            return;\r\n        }\r\n        let id = await pickId(this.context, this.name, this.value);        \r\n        this.setDataValue(id);\r\n        this.clearError();\r\n        this.clearContextError();\r\n        this.checkRules();\r\n    }\r\n\r\n    render() {\r\n        let placeholder:string|JSX.Element, Templet: TempletType;\r\n        if (this.ui !== undefined) {\r\n            placeholder = this.ui.placeholder;\r\n            Templet = this.ui.Templet;\r\n        }\r\n        let cn = {\r\n            'form-control': true,\r\n            'required-item': this.itemSchema.required === true,\r\n            'cursor-pointer': true,\r\n            'is-invalid': this.hasError,\r\n        };\r\n        let content;\r\n        if (this.value === undefined || this.value === null) {\r\n            content = placeholder || 'placeholder';\r\n            cn['text-muted'] = true;\r\n        }\r\n        else if (Templet === undefined) {\r\n            content = <>{this.value}</>;\r\n        }\r\n        else if (typeof Templet === 'function') {\r\n            content = Templet(this.value);\r\n        }\r\n        else {\r\n            content = Templet;\r\n        }\r\n        return <>\r\n            <div className={classNames(cn)} onClick={this.onClick}>{content}</div>\r\n            {this.renderErrors()}\r\n        </>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { DataType } from '../../schema';\r\nimport { UiType } from '../../schema';\r\n\r\nexport const Unknown = (dataType:DataType, uiType:UiType, dataTypes:DataType[]) => {\r\n    return <span className=\"text-danger\">!!data type {dataType} only support {(dataTypes || []).join(', ')}, can't use ui {uiType}!!</span>;\r\n};\r\n","import * as React from 'react';\r\nimport { UiButton, TempletType } from '../../schema';\r\nimport { Unknown } from './unknown';\r\nimport { Widget } from './widget';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class ButtonWidget extends Widget {\r\n    protected ui: UiButton;\r\n\r\n    protected onClick = async () => {\r\n        this.clearError();\r\n        this.clearContextError();\r\n        let {name, type} = this.itemSchema;\r\n        if (type === 'submit') {\r\n            await this.context.submit(name);\r\n        }\r\n        /*\r\n        let {onButtonClick} = this.context.form.props;\r\n        if (onButtonClick === undefined) {\r\n            alert(`button ${name} clicked. you should define form onButtonClick`);\r\n            return;\r\n        }\r\n        let ret = await onButtonClick(name, this.context);\r\n        if (ret === undefined) return;\r\n        this.context.setError(name, ret);\r\n        */\r\n    }\r\n\r\n    private observerRender = observer(() => {\r\n        let {name, type} = this.itemSchema;\r\n        let Templet:TempletType, cn:string, caption:string;\r\n        if (this.ui !== undefined) {\r\n            let {widget:widgetType} = this.ui;\r\n            if (widgetType !== 'button') return Unknown(type, widgetType, ['button']);\r\n            Templet = this.ui.Templet;\r\n            cn = this.ui.className;\r\n            caption = this.ui.label;\r\n        }\r\n        let {form, hasError} = this.context;\r\n        let context = this.context;\r\n        let disabled = type==='submit' && hasError;\r\n        let content:any;\r\n        if (this.children !== undefined) content = this.children;\r\n        else if (typeof Templet === 'function') content = Templet();\r\n        else if (Templet !== undefined) content = Templet;\r\n        else content = caption; \r\n        let button = <button \r\n            className={cn} \r\n            type=\"button\"\r\n            disabled={disabled}\r\n            onClick={this.onClick}>\r\n            {content || name}\r\n        </button>;\r\n        if (context.inNode === true) return <>{button}{this.renderErrors()}</>;\r\n        return <div className={form.ButtonClass}>\r\n            <div>{this.renderErrors()}</div>\r\n            {button}\r\n        </div>;\r\n    });\r\n    \r\n    protected get label():string {return null}\r\n\r\n    render() {\r\n        return <this.observerRender />\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Form } from './form';\r\nimport { UiSchema, UiArr, UiItem } from '../schema';\r\nimport { ArrSchema, ItemSchema } from '../schema';\r\nimport { Widget as Widget } from './widgets/widget';\r\n//import { ArrRow } from './arrRow';\r\nimport { observable, computed } from 'mobx';\r\nimport { ContextRule } from './rules';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport abstract class Context {\r\n    private subContexts:{[name:string]:{[rowKey:string]:Context}};\r\n    readonly form: Form;\r\n    readonly uiSchema: UiSchema;\r\n    readonly initData: any;\r\n    readonly inNode: boolean;           // true: 在</> 流中定义Field\r\n    readonly widgets: {[name:string]: Widget} = {};\r\n    readonly rules: ContextRule[];\r\n    readonly isRow: boolean;\r\n    @observable errors: string[] = [];\r\n    @observable errorWidgets:Widget[] = [];\r\n\r\n    constructor(form: Form, uiSchema: UiSchema, data: any, inNode: boolean, isRow: boolean) {\r\n        this.form = form;\r\n        this.uiSchema = uiSchema;\r\n        this.initData = data;\r\n        this.inNode = inNode;\r\n        this.isRow = isRow;\r\n        if (uiSchema !== undefined) {\r\n            let {rules} = uiSchema;\r\n            if (rules !== undefined) {\r\n                this.rules = [];\r\n                if (Array.isArray(rules) === false)\r\n                    this.rules.push(rules as ContextRule);\r\n                else\r\n                    this.rules.push(...rules as ContextRule[]);\r\n            }\r\n        }\r\n    }\r\n\r\n    getArrRowContexts(arrName: string) {\r\n        if (this.subContexts === undefined) this.subContexts = {};\r\n        let arrRowContexts = this.subContexts[name];\r\n        if (arrRowContexts === undefined) this.subContexts[name] = arrRowContexts = {};\r\n        return arrRowContexts;\r\n    }\r\n\r\n    abstract get data():any;\r\n    abstract getItemSchema(itemName:string):ItemSchema;\r\n    abstract getUiItem(itemName:string):UiItem;\r\n    get arrName():string {return undefined}\r\n    getValue(itemName:string):any {return this.initData[itemName]}\r\n    setValue(itemName:string, value:any) {\r\n        this.initData[itemName] = value;\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setValue(value);\r\n    }\r\n    getDisabled(itemName:string):boolean {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) return widget.getDisabled();\r\n        return undefined;\r\n    }\r\n    setDisabled(itemName:string, value:boolean) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setDisabled(value);\r\n    }\r\n    getReadOnly(itemName:string):boolean {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.getReadOnly();\r\n        return undefined;\r\n    }\r\n    setReadOnly(itemName:string, value:boolean) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setReadOnly(value);\r\n    }\r\n    getVisible(itemName:string):boolean {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.getVisible();\r\n        return undefined;\r\n    }\r\n    setVisible(itemName:string, value:boolean) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setVisible(value);\r\n    }\r\n\r\n    async submit(buttonName: string) {\r\n        this.checkRules()\r\n        if (this.hasError === true) return;\r\n        let {onButtonClick} = this.form.props;\r\n        if (onButtonClick === undefined) {\r\n            alert(`button ${buttonName} clicked. you should define form onButtonClick`);\r\n            return;\r\n        }\r\n        let ret = await onButtonClick(buttonName, this);\r\n        if (ret === undefined) return;\r\n        this.setError(buttonName, ret);\r\n\r\n    }\r\n\r\n    checkFieldRules() {\r\n        for (let i in this.widgets) {\r\n            this.widgets[i].checkRules();\r\n        }\r\n        if (this.subContexts === undefined) return;\r\n        for (let i in this.subContexts) {\r\n            let arrRowContexts = this.subContexts[i];\r\n            for (let j in arrRowContexts) {\r\n                arrRowContexts[j].checkFieldRules();\r\n            }\r\n        }\r\n    }\r\n\r\n    checkContextRules() {\r\n        this.clearErrors();\r\n        if (this.rules === undefined) return;\r\n        for (let rule of this.rules) {\r\n            let ret = rule(this);\r\n            if (ret === undefined) continue;\r\n            if (Array.isArray(ret) === true) {\r\n                this.errors.push(...ret as string[]);\r\n            }\r\n            else if (typeof ret === 'string') {\r\n                this.errors.push(ret as string);\r\n            }\r\n            else {\r\n                for (let i in ret as object) this.setError(i, ret[i]);\r\n            }\r\n        }\r\n        if (this.subContexts === undefined) return;\r\n        for (let i in this.subContexts) {\r\n            let arrRowContexts = this.subContexts[i];\r\n            for (let j in arrRowContexts) {\r\n                let rowContext = arrRowContexts[j];\r\n                rowContext.clearErrors();\r\n                rowContext.checkContextRules();\r\n            }\r\n        }\r\n    }\r\n\r\n    setError(itemName:string, error:string) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget === undefined) return;\r\n        widget.setContextError(error);\r\n        this.addErrorWidget(widget);\r\n    }\r\n\r\n    clearContextErrors() {\r\n        for (let i in this.widgets) {\r\n            let widget = this.widgets[i];\r\n            if (widget === undefined) continue;\r\n            widget.clearContextError();\r\n        }\r\n    }\r\n\r\n    clearWidgetsErrors() {\r\n        for (let i in this.widgets) {\r\n            let widget = this.widgets[i];\r\n            if (widget === undefined) continue;\r\n            widget.clearError();\r\n        }\r\n    }\r\n\r\n    checkRules() {\r\n        this.clearErrors();\r\n        this.clearWidgetsErrors();\r\n        this.checkFieldRules();\r\n        if (this.hasError === true) return;\r\n        this.checkContextRules();\r\n    }\r\n\r\n    addErrorWidget(widget:Widget) {\r\n        let pos = this.errorWidgets.findIndex(v => v === widget);\r\n        if (pos < 0) this.errorWidgets.push(widget);\r\n    }\r\n    removeErrorWidget(widget:Widget) {\r\n        let pos = this.errorWidgets.findIndex(v => v === widget);\r\n        if (pos >= 0) this.errorWidgets.splice(pos, 1);\r\n    }\r\n\r\n    protected checkHasError():boolean {\r\n        let ret = (this.errorWidgets.length + this.errors.length) > 0;\r\n        if (ret === true) return true;\r\n        if (this.subContexts === undefined) return false;\r\n        for (let i in this.subContexts) {\r\n            let arrRowContexts = this.subContexts[i];\r\n            for (let j in arrRowContexts) {\r\n                if (arrRowContexts[j].hasError === true) return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    @computed get hasError():boolean {\r\n        return this.checkHasError();\r\n    };\r\n\r\n    clearErrors() {\r\n        this.errors.splice(0);\r\n        this.errorWidgets.splice(0);\r\n        this.clearContextErrors();\r\n    }\r\n\r\n    renderErrors = observer((): JSX.Element => {\r\n        let {errors} = this;\r\n        if (errors.length === 0) return null;\r\n        return <>\r\n            {errors.map(err => <span key={err} className=\"text-danger inline-block my-1 ml-3\">\r\n                <i className=\"fa fa-exclamation-circle\" /> &nbsp;{err}\r\n            </span>)}\r\n        </>\r\n    });\r\n}\r\n\r\nlet rowKeySeed:number = 1;\r\nexport class RowContext extends Context {\r\n    readonly parentContext: Context;\r\n    readonly arrSchema: ArrSchema;\r\n    readonly uiSchema: UiArr;\r\n    //readonly row: ArrRow;\r\n    readonly rowKey: number;\r\n    readonly data: any;\r\n    constructor(parentContext:Context, arrSchema: ArrSchema, data: any, inNode: boolean) {\r\n        let uiArr:UiArr;\r\n        let {uiSchema} = parentContext;\r\n        if (uiSchema !== undefined) {\r\n            let {items} = uiSchema;\r\n            if (items !== undefined) uiArr = items[arrSchema.name] as UiArr;\r\n        }\r\n        super(parentContext.form, uiArr, data, inNode, true);\r\n        this.parentContext = parentContext;\r\n        this.arrSchema = arrSchema;\r\n        this.rowKey = rowKeySeed++;\r\n        this.data = data;\r\n    }\r\n    getItemSchema(itemName:string):ItemSchema {return this.arrSchema.itemSchemas[itemName]}\r\n    getUiItem(itemName:string):UiItem {\r\n        if (this.uiSchema === undefined) return undefined;\r\n        let {items} = this.uiSchema;\r\n        if (items === undefined) return undefined;\r\n        return items[itemName]\r\n    }\r\n    get arrName():string {return this.arrSchema.name}\r\n    clearErrors() {\r\n        super.clearErrors();\r\n        this.parentContext.clearErrors();\r\n    }\r\n\r\n    get parentData():any {return this.parentContext.data;}\r\n}\r\n\r\nexport class FormContext extends Context {\r\n    constructor(form:Form, inNode:boolean) {\r\n        super(form, form.uiSchema, form.data, inNode, false);\r\n    }\r\n    get data():any {return this.form.data}\r\n    getItemSchema(itemName:string):ItemSchema {return this.form.itemSchemas[itemName]}\r\n    getUiItem(itemName:string):UiItem {\r\n        let {uiSchema} = this.form;\r\n        if (uiSchema === undefined) return undefined;\r\n        let {items} = uiSchema;\r\n        if (items === undefined) return undefined;\r\n        return items[itemName];\r\n    }\r\n}\r\n\r\nexport const ContextContainer = React.createContext<Context>({} as any);\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\n//import { ArrRow } from '../arrRow';\r\nimport { Context, RowContext, ContextContainer } from '../context';\r\nimport { ArrSchema } from '../../schema';\r\nimport { UiArr, TempletType } from '../../schema';\r\nimport { Unknown } from './unknown';\r\nimport { factory } from './factory';\r\n\r\nexport const ArrComponent = observer((\r\n    {parentContext, arrSchema, children}:{parentContext: Context, arrSchema: ArrSchema, children: React.ReactNode}) => \r\n{\r\n    let {name, arr} = arrSchema;\r\n    let data = parentContext.initData[name] as any[];\r\n    let {form} = parentContext;\r\n    let arrRowContexts = parentContext.getArrRowContexts(name);\r\n    let ui = parentContext.getUiItem(name) as UiArr;\r\n    let arrLabel = name;\r\n    let Templet:TempletType;\r\n    let selectable:boolean, deletable:boolean, restorable:boolean;\r\n    let {ArrContainer, RowContainer, RowSeperator, uiSchema} = form;\r\n    if (uiSchema !== undefined) {\r\n        let {selectable:formSelectable, deletable:formDeletable, restorable:formRestorable} = uiSchema;\r\n        if (selectable !== true) selectable = formSelectable;\r\n        if (deletable !== true) deletable = formDeletable;\r\n        if (restorable !== true) restorable = formRestorable;\r\n    }\r\n    if (ui !== undefined) {\r\n        let {widget:widgetType, label, \r\n            selectable:arrSelectable, deletable:arrDeletable, restorable:arrRestorable,\r\n            ArrContainer:ac, RowContainer:rc, RowSeperator:rs\r\n        } = ui;\r\n        if (arrSelectable !== undefined) selectable = arrSelectable;\r\n        if (arrDeletable !== undefined) deletable = arrDeletable;\r\n        if (arrRestorable !== undefined) restorable = arrRestorable;\r\n        if (ac !== undefined) ArrContainer = ac;\r\n        if (rc !== undefined) RowContainer = rc;\r\n        if (rs !== undefined) RowSeperator = rs;\r\n        Templet = ui.Templet;\r\n        if (widgetType !== 'arr') return Unknown(arrSchema.type, widgetType, ['arr']);\r\n        arrLabel = label || arrLabel;\r\n    }\r\n    let first = true;\r\n    return ArrContainer(arrLabel, <>\r\n        {data.map((row:any, index) => {\r\n            let rowContext: RowContext;\r\n            let rowContent: JSX.Element;\r\n            let sep = undefined;\r\n            if (first === false) sep = RowSeperator;\r\n            else first = false;\r\n            if (children !== undefined) {\r\n                rowContext = new RowContext(parentContext, arrSchema, row, true);\r\n                rowContent = <>{children}</>;\r\n            }\r\n            else {\r\n                let typeofTemplet = typeof Templet;\r\n                if (typeofTemplet === 'function') {\r\n                    rowContext = new RowContext(parentContext, arrSchema, row, true);\r\n                    rowContent = React.createElement(observer(Templet as React.StatelessComponent), row);\r\n                }\r\n                else if (typeofTemplet === 'object') {\r\n                    rowContext = new RowContext(parentContext, arrSchema, row, true);\r\n                    rowContent = Templet as JSX.Element;\r\n                }\r\n                else {\r\n                    rowContext = new RowContext(parentContext, arrSchema, row, false);\r\n                    rowContent = <>{\r\n                        arr.map((v, index) => {\r\n                            return <React.Fragment key={v.name}>\r\n                                {factory(rowContext, v, undefined)}\r\n                            </React.Fragment>\r\n                        })}\r\n                    </>;\r\n                }\r\n            }\r\n            let {rowKey} = rowContext;\r\n            arrRowContexts[rowKey] = rowContext;\r\n\r\n            let selectCheck:JSX.Element, deleteIcon:JSX.Element;\r\n            if (selectable === true) {\r\n                let onClick = (evt: React.MouseEvent<HTMLInputElement>)=>{\r\n                    let {checked} = (evt.target as HTMLInputElement);\r\n                    row.$isSelected = checked;\r\n                    let {$source} = row;\r\n                    if ($source !== undefined) $source.$isSelected = checked;\r\n                    rowContext.clearErrors();\r\n                }\r\n                selectCheck = <div className=\"form-row-checkbox\">\r\n                    <input type=\"checkbox\" onClick={onClick} defaultChecked={row.$isSelected} />\r\n                </div>;\r\n            }\r\n            let isDeleted = !(row.$isDeleted===undefined || row.$isDeleted===false);\r\n            if (deletable === true) {\r\n                let icon = isDeleted? 'fa-undo' : 'fa-trash';\r\n                let onDelClick = () => {\r\n                    if (restorable === true) {\r\n                        row.$isDeleted = !isDeleted;\r\n                        let {$source} = row;\r\n                        if ($source !== undefined) $source.$isDeleted = !isDeleted;\r\n                    }\r\n                    else {\r\n                        let p = data.indexOf(row);\r\n                        if (p>=0) data.splice(p, 1);\r\n                    }\r\n                    rowContext.clearErrors();\r\n                }\r\n                deleteIcon = <div className=\"form-row-edit text-info\" onClick={onDelClick}>\r\n                    <i className={classNames('fa', icon, 'fa-fw')} />\r\n                </div>;\r\n            }\r\n            let editContainer = selectable===true || deletable===true?\r\n                (content:any) => <fieldset disabled={isDeleted}><div className={classNames('d-flex', {'deleted':isDeleted, 'row-selected':row.$isSelected})}>\r\n                    {selectCheck}\r\n                    <div className={selectable===true && deletable===true? \"form-row-content\":\"form-row-content-1\"}>{content}</div>\r\n                    {deleteIcon}\r\n                </div></fieldset>\r\n                :\r\n                (content:any) => content;\r\n\r\n            return <ContextContainer.Provider key={rowKey} value={rowContext}>\r\n                {sep}\r\n                {RowContainer(editContainer(<><rowContext.renderErrors />{rowContent}</>))}\r\n            </ContextContainer.Provider>;\r\n        })}\r\n    </>);\r\n});\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiImageItem } from '../../schema';\r\nimport { Image } from '../../image';\r\nimport { ImageItemEdit } from '../../edit/imageItemEdit';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\n\r\nexport class ImageWidget extends Widget {\r\n    protected input: HTMLInputElement;\r\n    protected ui: UiImageItem;\r\n    @observable private imageSrc: string;\r\n\r\n    protected init() {\r\n        super.init();\r\n        this.imageSrc = this.value;\r\n    }\r\n\r\n    protected onClick = async () => {\r\n        let edit = new ImageItemEdit(this.itemSchema, this.ui, this.ui.label, this.value);\r\n        let ret = await edit.start();\r\n        if (ret !== null) {\r\n            this.setValue(ret);\r\n            this.imageSrc = ret;\r\n        }\r\n        await edit.end();\r\n    }\r\n\r\n    render() {\r\n        return <this.observerRender />;\r\n    }\r\n\r\n    private observerRender = observer(() => {\r\n        let cn = [\r\n            'bg-white p-1 d-flex justify-content-center',\r\n        ];\r\n        let onClick: any;\r\n        if (!this.readOnly && !this.disabled) {\r\n            cn.push('cursor-pointer');\r\n            onClick = this.onClick;\r\n        }\r\n        return <div className={classNames(cn)} onClick={onClick}>\r\n            <Image src={this.imageSrc} className=\"w-4c h-4c\"/>\r\n        </div>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport { Schema, ArrSchema, DataType, ButtonSchema, ItemSchema } from '../../schema';\r\nimport { UiItem, UiArr, UiType, UiButton, TempletType, TypeWidget, UiCustom } from '../../schema';\r\nimport { TextWidget } from './textWidget';\r\nimport { TextAreaWidget } from './textareaWidget';\r\nimport { PasswordWidget, UrlWidget, EmailWidget } from './passwordWidget';\r\nimport { UpdownWidget } from './updownWidget';\r\nimport { NumberWidget } from './numberWidget';\r\nimport { DateWidget, DateTimeWidget, TimeWidget, MonthWidget } from './dateWidget';\r\nimport { CheckBoxWidget } from './checkBoxWidget';\r\nimport { FieldProps } from '../field';\r\nimport { Context, RowContext, FormContext, ContextContainer } from '../context';\r\nimport { SelectWidget } from './selectWidget';\r\nimport { RadioWidget } from './radioWidget';\r\nimport { RangeWidget } from './rangeWidget';\r\nimport { IdWidget } from './idWidget';\r\nimport { ButtonWidget } from './buttonWidget';\r\nimport { ArrComponent } from './arrComponent';\r\nimport { ImageWidget } from './imageWidget';\r\n\r\nconst widgetsFactory: {[type: string]: {widget?: TypeWidget, dataTypes?: DataType[]}} = {\r\n    id: {\r\n        dataTypes: ['id'],\r\n        widget: IdWidget,\r\n    },\r\n    text: {\r\n        dataTypes: ['integer', 'number', 'string'],\r\n        widget: TextWidget\r\n    },\r\n    textarea: {\r\n        dataTypes: ['string'],\r\n        widget: TextAreaWidget\r\n    },\r\n    password: {\r\n        dataTypes: ['string'],\r\n        widget: PasswordWidget\r\n    },\r\n    date: {\r\n        dataTypes: ['date'],\r\n        widget: DateWidget\r\n    },\r\n    datetime: {\r\n        dataTypes: ['date'],\r\n        widget: DateTimeWidget\r\n    },\r\n    time: {\r\n        dataTypes: ['date'],\r\n        widget: TimeWidget\r\n    },\r\n    month: {\r\n        dataTypes: ['date'],\r\n        widget: MonthWidget\r\n    },\r\n    select: {\r\n        dataTypes: ['integer', 'number', 'string', 'date', 'boolean'],\r\n        widget: SelectWidget\r\n    },\r\n    url: {\r\n        dataTypes: ['string'],\r\n        widget: UrlWidget\r\n    },\r\n    email: {\r\n        dataTypes: ['string'],\r\n        widget: EmailWidget\r\n    },\r\n    number: {\r\n        dataTypes: ['integer', 'number'],\r\n        widget: NumberWidget\r\n    },\r\n    updown: {\r\n        dataTypes: ['integer', 'number'],\r\n        widget: UpdownWidget\r\n    },\r\n    color: {\r\n\r\n    },\r\n    checkbox: {\r\n        dataTypes: ['boolean', 'integer', 'number'],\r\n        widget: CheckBoxWidget\r\n    },\r\n    image: {\r\n        dataTypes: ['string'],\r\n        widget: ImageWidget,\r\n    },\r\n    checkboxes: {\r\n\r\n    },\r\n    radio: {\r\n        dataTypes: ['integer', 'number', 'string', 'date', 'boolean'],\r\n        widget: RadioWidget\r\n    },\r\n    range: {\r\n        dataTypes: ['integer'],\r\n        widget: RangeWidget,\r\n    },\r\n    button: {\r\n        dataTypes: ['button', 'submit'],\r\n        widget: ButtonWidget,\r\n    }\r\n}\r\n\r\nexport function factory(context: Context, itemSchema: ItemSchema, children:React.ReactNode, fieldProps?: FieldProps):JSX.Element {\r\n    if (context === undefined) {\r\n        debugger;\r\n        return null;\r\n    }\r\n    if (itemSchema === undefined) return undefined;\r\n    let {name, type} = itemSchema;\r\n    switch (type) {\r\n    case 'arr':\r\n        let arrSchema = context.getItemSchema(name) as ArrSchema;\r\n        return <ArrComponent parentContext={context} arrSchema={arrSchema} children={children} />;\r\n    default:\r\n        break;\r\n    }\r\n\r\n    let typeWidget: TypeWidget;\r\n    let ui = context.getUiItem(name);\r\n    function getTypeWidget(t:DataType): TypeWidget {\r\n        switch(t) {\r\n        default: return TextWidget; \r\n        case 'id': return IdWidget;\r\n        case 'integer': return UpdownWidget;\r\n        case 'number': return NumberWidget; \r\n        case 'string': return TextWidget; \r\n        case 'date': return DateWidget; \r\n        case 'boolean': return CheckBoxWidget; \r\n        case 'button':\r\n        case 'submit': return ButtonWidget;\r\n        }\r\n    }\r\n    if (ui === undefined) { \r\n        typeWidget = getTypeWidget(type);\r\n    }\r\n    else {\r\n        let {widget:widgetType} = ui;\r\n        switch (widgetType) {\r\n        default:\r\n            if (widgetType !== undefined) {\r\n                let widgetFactory = widgetsFactory[widgetType];\r\n                typeWidget = widgetFactory.widget;\r\n            }\r\n            if (typeWidget === undefined) typeWidget = getTypeWidget(type);\r\n            break;\r\n        case 'custom':\r\n            typeWidget = (ui as UiCustom).WidgetClass;\r\n            break;\r\n        case 'group':\r\n            return <span>impletment group</span>;\r\n        }\r\n        //label = uiLabel || name;\r\n    }\r\n    \r\n    let {isRow, widgets} = context;\r\n    let widget = new typeWidget(context, itemSchema, fieldProps, children);\r\n    widgets[name] = widget;\r\n\r\n    return <widget.container />;\r\n    /*\r\n    if (isRow === false) {\r\n        let WidgetElement = observer(() => widget.container());\r\n        return <WidgetElement />;\r\n    }\r\n    else {\r\n        let widgetElement = widget.container();\r\n        return widgetElement;\r\n    }\r\n    */\r\n}\r\n\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiTextAreaItem } from '../../schema';\r\nimport { StringSchema } from '../../schema';\r\n\r\nexport class TextAreaWidget extends Widget {\r\n    protected itemSchema: StringSchema;\r\n    protected input: HTMLTextAreaElement;\r\n    protected ui: UiTextAreaItem;\r\n\r\n    protected setElementValue(value:any) {this.input.value = value}\r\n    protected onInputChange = (evt: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        this.setValue(evt.currentTarget.value);\r\n    }\r\n\r\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\r\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\r\n\r\n    render() {\r\n        let renderTemplet = this.renderTemplet();\r\n        if (renderTemplet !== undefined) return renderTemplet;\r\n        let cn = {};\r\n        if (this.hasError === true) {\r\n            cn['is-invalid'] = true;\r\n        }\r\n        else {\r\n            cn['required-item'] = this.itemSchema.required === true;\r\n        }\r\n        return <textarea ref={(input) => this.input=input} \r\n            className={classNames(this.className, cn)}\r\n            rows={this.ui && this.ui.rows}\r\n            maxLength={this.itemSchema.maxLength}\r\n            defaultValue={this.defaultValue} onChange={this.onInputChange} />\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { TextWidget } from './textWidget';\r\n\r\nexport class PasswordWidget extends TextWidget {\r\n    protected inputType = 'password';\r\n}\r\n\r\nexport class UrlWidget extends TextWidget {\r\n    protected inputType = 'url';\r\n}\r\n\r\nexport class EmailWidget extends TextWidget {\r\n    protected inputType = 'email';\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { UiRange } from '../../schema';\r\nimport { Widget } from './widget';\r\n\r\nexport class RangeWidget extends Widget {\r\n    protected inputType = 'range';\r\n    protected input: HTMLInputElement;\r\n    protected ui: UiRange;\r\n\r\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\r\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\r\n\r\n    render() {\r\n        let {min, max, step} = this.ui;\r\n        return <><input ref={input=>this.input = input}\r\n            className={classNames(this.className, 'form-control', 'w-min-6c')}\r\n            type={this.inputType}\r\n            defaultValue={this.defaultValue} \r\n            onChange={this.onInputChange}\r\n            max={max}\r\n            min={min}\r\n            step={step}\r\n            />\r\n        </>;\r\n    }\r\n}\r\n","import _ from 'lodash';\r\nimport { KeyValueRes, Res } from '../res';\r\n\r\nexport interface FormRes extends KeyValueRes {\r\n    required: string;\r\n    number: string;\r\n    integer: string;\r\n    min: string;\r\n    max: string;\r\n}\r\n\r\nexport const formRes:Res<FormRes> = {\r\n    _: {\r\n        required: 'required',\r\n        number: 'not valid number',\r\n        integer: 'not valid integer',\r\n        min: 'min value is ${min}',\r\n        max: 'max value is ${max}',\r\n    },\r\n    zh: {\r\n        _: {\r\n            required: '必须填',\r\n            number: '需要数字',\r\n            integer: '需要整数',\r\n            min: '不能小于${min}',\r\n            max: '不能大于${max}',\r\n        }\r\n    },\r\n}\r\n","import * as React from 'react';\r\nimport {observable, IReactionDisposer, autorun, isObservable} from 'mobx';\r\nimport classNames from 'classnames';\r\nimport { Schema, ItemSchema, ArrSchema } from '../schema';\r\nimport { UiSchema, TempletType } from '../schema';\r\nimport { factory } from './widgets';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport { ContextContainer, FormContext, Context, RowContext } from './context';\r\nimport { FormRes, formRes } from './formRes';\r\nimport { resLang } from '../res';\r\n\r\nexport type FormButtonClick = (name:string, context: Context) => Promise<any>;\r\nexport type InputEnter = (name:string, context: Context) => Promise<any>;\r\n\r\nexport interface FormProps {\r\n    className?: string;\r\n    schema: Schema;\r\n    uiSchema?: UiSchema;\r\n    formData?: any;\r\n    onButtonClick?: FormButtonClick;\r\n    onEnter?: InputEnter;\r\n    fieldLabelSize?: number;            // col-sm-2 for label\r\n    requiredFlag?: boolean;             // default=true\r\n    beforeShow?: (formContext:FormContext) => void;\r\n    res?: FormRes;\r\n\r\n    Container?: (content:JSX.Element) => JSX.Element;\r\n    FieldContainer?: (label:string|JSX.Element, content:JSX.Element) => JSX.Element;\r\n    FieldClass?: string;\r\n    ButtonClass?: string;\r\n}\r\n\r\nexport class Form extends React.Component<FormProps> {\r\n    readonly schema: Schema;\r\n    readonly itemSchemas: {[name:string]: ItemSchema};\r\n    readonly uiSchema: UiSchema;\r\n    readonly res?: FormRes;\r\n    protected formContext: FormContext;\r\n    //private content: any;\r\n    //private formData: any;\r\n    private disposer: IReactionDisposer;\r\n    //@observable \r\n    readonly data:any;\r\n\r\n    readonly Container: (content:JSX.Element) => JSX.Element;\r\n    readonly FieldContainer: (label:any, content:JSX.Element) => JSX.Element;\r\n    readonly FieldClass: string;\r\n    readonly ButtonClass: string;\r\n    //readonly ArrContainer: (label:any, content:JSX.Element) => JSX.Element;\r\n    //readonly RowContainer: (content:JSX.Element) => JSX.Element;\r\n    //readonly RowSeperator: JSX.Element;\r\n\r\n    constructor(props:FormProps) {\r\n        super(props);\r\n        let {schema, uiSchema, formData, \r\n            Container, FieldContainer, FieldClass, \r\n            ButtonClass, res,\r\n        } = props;\r\n        this.Container = Container || this.DefaultContainer;\r\n        this.FieldContainer = FieldContainer || this.DefaultFieldContainer;\r\n        this.FieldClass = FieldClass!==undefined && FieldClass!==''&&FieldClass!==null? FieldClass : this.DefaultFieldClass;\r\n        this.res = res || this.DefaultRes;\r\n        this.ButtonClass = ButtonClass || this.DefaultButtonClass;\r\n\r\n        this.schema = schema;\r\n        this.itemSchemas = {};\r\n        for (let itemSchema of this.schema) {\r\n            this.itemSchemas[itemSchema.name] = itemSchema;\r\n        }\r\n        this.uiSchema = uiSchema;\r\n\r\n        //this.formData = formData;\r\n        this.disposer = autorun(this.watch);\r\n        this.data = {};\r\n        // this.initRender();\r\n    }\r\n\r\n    private renderContent():any {\r\n        this.initData(this.props.formData);\r\n        let {children} = this.props;\r\n        if (children !== undefined) {\r\n            this.formContext = new FormContext(this, true);\r\n            return <>{children}</>;\r\n        }\r\n\r\n        let Templet: TempletType;\r\n        if (this.uiSchema !== undefined) {\r\n            Templet = this.uiSchema.Templet;\r\n        }\r\n        if (Templet !== undefined) {\r\n            this.formContext = new FormContext(this, true);\r\n            return typeof(Templet) === 'function'? Templet(this.data) : Templet;\r\n        }\r\n\r\n        this.formContext = new FormContext(this, false);\r\n        return <>{this.schema.map((v, index) => {\r\n            return <React.Fragment key={index}>{factory(this.formContext, v, children)}</React.Fragment>\r\n        })}</>;\r\n    }\r\n\r\n    private initData(formData: any) {\r\n        if (formData === undefined) formData = {};\r\n        for (let itemSchema of this.schema) {\r\n            this.initDataItem(itemSchema, this.data, formData);\r\n        }\r\n    }\r\n\r\n    private initDataItem(itemSchema: ItemSchema, data:any, formData: any):any {\r\n        let {name, type} = itemSchema;\r\n        if (type === 'button') return;\r\n        if (type !== 'arr') {\r\n            data[name] = formData[name];\r\n            return;\r\n        }\r\n\r\n        let arrItem:ArrSchema = itemSchema as ArrSchema;\r\n        let {arr:arrItems} = arrItem;\r\n        if (arrItems === undefined) return;\r\n        let arrDict = arrItem.itemSchemas = {};\r\n        for (let item of arrItems) {\r\n            arrDict[item.name] = item;\r\n        }\r\n        let val:any[] = formData[name];\r\n        if (val === undefined) val = [];\r\n        else if (Array.isArray(val) === false) val = [val];\r\n        let arr:any[] = [];\r\n        for (let row of val) {\r\n            let {$isSelected, $isDeleted} = row;\r\n            let r = {\r\n                $source: row,\r\n                $isSelected: $isSelected,\r\n                $isDeleted: $isDeleted,\r\n            };\r\n            for (let item of arrItems) {\r\n                this.initDataItem(item, r, row);\r\n                /*\r\n                let {name:nm} = item;\r\n                let v = row[nm];\r\n                if (v === undefined) v = null;\r\n                r[nm] = v;\r\n                */\r\n            }\r\n            arr.push(r);\r\n        }\r\n        // 如果没有observable，行删除标志点击不管用\r\n        // 不知道这里为什么要去掉observable。有可能会有别的问题\r\n        data[name] = observable(arr);\r\n        //data[name] = arr;\r\n        return;\r\n    }\r\n\r\n    private watch = () => {\r\n        let {formData} = this.props;\r\n        if (formData === undefined) return;\r\n        //this.initData(formData);\r\n        this.calcSelectOrDelete();\r\n    }\r\n    private calcSelectOrDelete() {\r\n        for (let itemSchema of this.schema) {\r\n            this.arrItemOperated(itemSchema);\r\n        }\r\n    }\r\n\r\n    private arrItemOperated(itemSchema: ItemSchema) {\r\n        let {name, type} = itemSchema;\r\n        if (type !== 'arr') return;\r\n        if (this.data === undefined) return;\r\n        let formArrVal = this.data[name];\r\n        if (formArrVal === undefined) return;\r\n        let {arr: arrItems} = itemSchema as ArrSchema;\r\n        for (let row of formArrVal) {\r\n            let {$source} = row;\r\n            if ($source === undefined) continue;\r\n            let {$isSelected, $isDeleted} = $source;\r\n            row.$isSelected = $isSelected;\r\n            row.$isDeleted = $isDeleted;\r\n            //console.log($isSelected, $isDeleted);\r\n            for (let item of arrItems) {\r\n                this.arrItemOperated(item);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let {beforeShow} = this.props;\r\n        if (beforeShow !== undefined) beforeShow(this.formContext);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.disposer !== undefined) this.disposer();\r\n    }\r\n\r\n    render() {\r\n        let content = this.renderContent();\r\n        return <ContextContainer.Provider value={this.formContext}>\r\n            <this.formContext.renderErrors />\r\n            {this.Container(content)}\r\n        </ContextContainer.Provider>;\r\n    }\r\n\r\n    async buttonClick(buttonName:string) {\r\n        this.formContext.checkRules()\r\n        if (this.formContext.hasError === true) return;\r\n\r\n        let {onButtonClick} = this.formContext.form.props;\r\n        if (onButtonClick === undefined) {\r\n            alert(`you should define form onButtonClick`);\r\n            return;\r\n        }\r\n        let ret = await onButtonClick(buttonName, this.formContext);\r\n        if (ret === undefined) return;\r\n        this.formContext.setError(buttonName, ret);\r\n    }\r\n\r\n    protected DefaultContainer = (content:JSX.Element): JSX.Element => {\r\n        return <form className={classNames(this.props.className)} onSubmit={e=>e.preventDefault()}>\r\n            {content}\r\n        </form>;\r\n    }\r\n    protected DefaultFieldContainer = (label:string|JSX.Element, content:JSX.Element): JSX.Element => {\r\n        let {fieldLabelSize} = this.props;\r\n\r\n        if (fieldLabelSize > 0) {\r\n            let labelView:any;\r\n            if (label === null) {\r\n                fieldLabelSize = 0;\r\n            }\r\n            else {\r\n                labelView = <label className={classNames('col-sm-' + fieldLabelSize, 'col-form-label')}>{label}</label>\r\n            }\r\n            let fieldCol = 'col-sm-' + (12 - fieldLabelSize);\r\n            return <div className=\"form-group row\">\r\n                {labelView}\r\n                <div className={fieldCol}>{content}</div>\r\n            </div>;\r\n        }\r\n        return <div className=\"form-group\">\r\n            {label===null? null:<label className=\"col-form-label\">{label}</label>}\r\n            {content}\r\n        </div>;\r\n    }\r\n    protected DefaultFieldClass:string = undefined;\r\n    protected DefaultButtonClass = 'text-center py-2';\r\n    protected DefaultRes:FormRes = resLang<FormRes>(formRes);\r\n\r\n    ArrContainer = (label:any, content:JSX.Element): JSX.Element => {\r\n        return <div>\r\n            <div className={classNames('small text-muted text-center bg-light py-1 px-3 mt-4 mb-1')}>{label}</div>\r\n            {content}\r\n        </div>;\r\n    }\r\n    RowContainer = (content:JSX.Element): JSX.Element => {\r\n        let cn = classNames({\r\n            'py-3': true\r\n        });\r\n        return <div className={cn}>{content}</div>\r\n    }\r\n    RowSeperator = <div className=\"border border-gray border-top\" />;\r\n}\r\n","import * as React from 'react';\r\nimport { factory } from './widgets';\r\nimport { ContextContainer, Context } from './context';\r\n\r\nexport interface FieldProps {\r\n    name: string;\r\n}\r\n\r\nexport class FormField extends React.Component<FieldProps> {\r\n    static contextType = ContextContainer;\r\n    render() {\r\n        let {name, children } = this.props;\r\n        let context:Context = this.context;\r\n        if (context === undefined) return <span className=\"text-danger\">!only in Form!</span>;\r\n        let itemSchema = context.getItemSchema(name);\r\n        let content = factory(context, itemSchema, children, this.props);\r\n        if (content === undefined) {\r\n            return <span className=\"text-danger\">!!{name} is not defined!!</span>;\r\n        }\r\n        return content;\r\n    }\r\n}\r\n","export {Form} from './form';\r\nexport {FormField} from './field';\r\nexport {Context, RowContext} from './context';\r\nexport * from './widgets';\r\n","import * as React from 'react';\r\nimport { IObservableArray, computed } from 'mobx';\r\nimport { PageItems } from '../../pageItems';\r\nimport {List} from './index';\r\n\r\nexport abstract class ListBase {\r\n    protected list: List;\r\n    constructor(list: List) {\r\n        this.list = list;\r\n    }\r\n    get isPaged():boolean {\r\n        let items = this.list.props.items;\r\n        return (items !== null && items !== undefined && Array.isArray(items) === false);\r\n    }\r\n    get items():any[]|IObservableArray<any> {\r\n        let items = this.list.props.items;\r\n        if (items === null) return null;\r\n        if (items === undefined) return undefined;\r\n        if (Array.isArray(items) === true)\r\n            return items as IObservableArray<any>;\r\n        else\r\n            return (items as PageItems<any>).items;\r\n    }\r\n    @computed get loading():boolean {\r\n        let items = this.list.props.items;\r\n        if (items === null) return false;\r\n        if (items === undefined) return true;\r\n        let pageItems = items as PageItems<any>;\r\n        if (pageItems.items === undefined) return false;\r\n        return pageItems.loading;\r\n    }\r\n    get selectedItems():any[] { return; }\r\n    updateProps(nextProps:any) {}\r\n    abstract render(item:any, index:number):JSX.Element;\r\n    protected renderContent(item:any, index:number) {\r\n        let {render} = this.list.props.item;\r\n        if (render === undefined) return <div className=\"px-3 py-2\">{JSON.stringify(item)}</div>;\r\n        return render(item, index);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {ListBase} from './base';\r\n\r\nexport class Clickable extends ListBase {\r\n    render(item:any, index:number):JSX.Element {\r\n        let {className, key, onClick} = this.list.props.item;\r\n        return <li key={key===undefined?index:key(item)} className={classNames('va-row-clickable', className)} onClick={()=>onClick && onClick(item)}>\r\n            {this.renderContent(item, index)}\r\n        </li>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {ListBase} from './base';\r\nimport { uid } from '../../uid';\r\n\r\nexport class Static extends ListBase {\r\n    render(item:any, index:number):JSX.Element {\r\n        let {className, key, render} = this.list.props.item;\r\n        if (typeof item === 'string') {\r\n            let cn = classNames('va-list-gap', 'px-3', 'pt-1');\r\n            return <li key={uid()} className={cn}>{item}</li>;\r\n        }\r\n        return <li key={key===undefined?index:key(item)} className={classNames(className)}>\r\n            {this.renderContent(item, index)}\r\n        </li>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable, computed, IObservableArray} from 'mobx';\r\nimport classNames from 'classnames';\r\nimport {ListBase} from './base';\r\nimport {uid} from '../../uid';\r\nimport { PageItems } from '../../pageItems';\r\n\r\nexport interface SelectableItem {\r\n    selected: boolean;\r\n    item: any;\r\n    labelId: string;\r\n}\r\n\r\nexport class Selectable extends ListBase {\r\n    private _items: SelectableItem[];\r\n    private _selectedItems: any[];\r\n    private input: HTMLInputElement;\r\n    private buildItems() {\r\n        console.log('buildItems in selectable.tsx');\r\n        let {items, selectedItems, compare} = this.list.props;\r\n        let itemsArray:any[] | IObservableArray<any>;\r\n        if (items === undefined) {\r\n            return this._items = undefined;\r\n        }\r\n        if (items === null) {\r\n            return this._items = null;\r\n        }\r\n        if (Array.isArray(items) === true) {\r\n            itemsArray = items as any;\r\n        }\r\n        else {\r\n            itemsArray = (items as PageItems<any>).items;\r\n        }\r\n        //let items = this.items;\r\n        this._selectedItems = selectedItems;\r\n        if (selectedItems === undefined) {\r\n            return this._items = itemsArray.map(v => {\r\n                return {\r\n                    selected:false, \r\n                    item:v, \r\n                    labelId:uid()\r\n                };\r\n            });\r\n        }\r\n        if (compare === undefined) {\r\n            return this._items = itemsArray.map(v => {\r\n                return {\r\n                    selected:selectedItems.find(si => si === v) !== undefined, \r\n                    item:v, \r\n                    labelId:uid()\r\n                };\r\n            });\r\n        }\r\n        return this._items = itemsArray.map(v => {\r\n            return {\r\n                selected:selectedItems.find(si => compare(v, si)) !== undefined, \r\n                item:v, \r\n                labelId:uid()\r\n            };\r\n        });\r\n    }\r\n    @computed get items() {\r\n        //if (this._items === undefined) \r\n        this.buildItems();\r\n        return this._items;\r\n    }\r\n    updateProps(nextProps:any) {\r\n        if (nextProps.selectedItems === this._selectedItems) return;\r\n        this.buildItems();\r\n    }\r\n    private onSelect(item:SelectableItem, selected:boolean) {\r\n        item.selected = selected;\r\n        let anySelected = this._items.some(v => v.selected);\r\n        this.list.props.item.onSelect(item.item, selected, anySelected);\r\n    }\r\n    \r\n    get selectedItems():any[] {\r\n        return this._items.filter(v => v.selected === true).map(v => v.item);\r\n    }\r\n    /*\r\n    set selectedItems(value: any[]) {\r\n        if (value === undefined) return;\r\n        if (this._items === undefined) return;\r\n        let sLen = this._items.length;\r\n        let list = value.slice();\r\n        for (let n=0; n<sLen; n++) {\r\n            let sItem = this._items[n];\r\n            let len = list.length;\r\n            if (len === 0) break;\r\n            let item = sItem.item;\r\n            for (let i=0; i<len; i++) {\r\n                let v = list[i];\r\n                if (item === v) {\r\n                    sItem.selected = true;\r\n                    value.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n        };\r\n    }\r\n    */\r\n    //w-100 mb-0 pl-3\r\n    //m-0 w-100\r\n    render(item:SelectableItem, index:number):JSX.Element {\r\n        let {className, key, render, onSelect} = this.list.props.item;\r\n        let {labelId, selected} = item;\r\n        return <li key={key===undefined?index:key(item)} className={classNames(className)}>\r\n            <div className=\"d-flex align-items-center px-3\">\r\n                <input ref={input=>{\r\n                        if (!input) return;\r\n                        this.input = input; input.checked = selected;\r\n                    }}\r\n                    className=\"\" type=\"checkbox\" value=\"\" id={labelId}\r\n                    defaultChecked={selected}\r\n                    onChange={(e)=>{\r\n                        this.onSelect(item, e.target.checked)} \r\n                    }/>\r\n                <label className=\"\" style={{flex:1, marginBottom:0}} htmlFor={labelId}>\r\n                    {this.renderContent(item.item, index)}\r\n                </label>\r\n            </div>\r\n        </li>\r\n    }\r\n}\r\n/*\r\n<label>\r\n<label className=\"custom-control custom-checkbox\">\r\n    <input type='checkbox' className=\"custom-control-input\"\r\n        //checked={selected}\r\n        onChange={(e)=>this.onSelect(item, e.target.checked)} />\r\n    <span className=\"custom-control-indicator\" />\r\n</label>\r\n{this.renderContent(item.item, index)}\r\n</label>\r\n*/\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {PageItems} from '../../pageItems';\r\nimport {ListBase} from './base';\r\nimport {Clickable} from './clickable';\r\nimport {Static} from './static';\r\nimport {Selectable} from './selectable';\r\nimport '../../css/va-list.css';\r\nimport { IObservableArray } from 'mobx';\r\n\r\ntype StaticRow = string|JSX.Element|(()=>string|JSX.Element);\r\n\r\nexport interface ListProps {\r\n    className?: string|string[];\r\n    items: any[] | IObservableArray<any> | PageItems<any>;\r\n    item: {\r\n        className?: string|string[];\r\n        render?: (item:any, index:number) => JSX.Element;\r\n        onSelect?: (item:any, isSelected:boolean, anySelected:boolean)=>void;\r\n        onClick?: (item:any)=>void;\r\n        key?: (item:any)=>string|number;\r\n    };\r\n    compare?:(item:any, selectItem)=>boolean;\r\n    selectedItems?:any[];\r\n    header?: StaticRow;\r\n    footer?: StaticRow;\r\n    before?: StaticRow;\r\n    loading?: StaticRow;\r\n    none?: StaticRow;\r\n}\r\n\r\n@observer\r\nexport class List extends React.Component<ListProps> {\r\n    private listBase: ListBase;\r\n    constructor(props:ListProps) {\r\n        super(props);\r\n        let {item} = this.props;\r\n        let {onClick, onSelect} = item;\r\n        if (onSelect !== undefined)\r\n            this.listBase = new Selectable(this);\r\n        else if (onClick !== undefined)\r\n            this.listBase = new Clickable(this);\r\n        else\r\n            this.listBase = new Static(this);\r\n    }\r\n    _$scroll = (direct: 'top'|'bottom') => {\r\n        console.log('############### items scroll to ' + direct);\r\n    }\r\n    componentWillUpdate(nextProps:ListProps, nextState, nextContext) {\r\n        this.listBase.updateProps(nextProps);\r\n    }\r\n    get selectedItems():any[] {\r\n        return this.listBase.selectedItems;\r\n    }\r\n    render() {\r\n        let {className, header, footer, before, loading, none, item, selectedItems} = this.props;\r\n        if (before === undefined) before = 'before';\r\n        if (loading === undefined) loading = 'loading';\r\n        if (none === undefined) none = 'none';        \r\n        //this.listBase.selectedItems = selectedItems;\r\n        let {isPaged, items, loading:isLoading} = this.listBase;\r\n        function staticRow(row:StaticRow, type:string) {\r\n            if (!row) return;\r\n            switch (typeof row) {\r\n                default:\r\n                case 'string': return <li className={\"va-list-\"+type}>{row}</li>;\r\n                case 'function': return <li className={\"va-list-\"+type}>{(row as ()=>string|JSX.Element)()}</li>;\r\n                case 'object': return <li>{row}</li>\r\n            } \r\n        }\r\n        let content:any;\r\n        if (items === null)\r\n            content = staticRow(before, 'before');\r\n        else if (items === undefined)\r\n            content = staticRow(loading, 'loading');\r\n        else if (items.length === 0)\r\n            content = staticRow(none, 'none');\r\n        else {\r\n            content = items.map((item, index) => {\r\n                return this.listBase.render(item, index);\r\n            });\r\n        }\r\n        return <ul className={classNames('va-list', className)}>\r\n            {staticRow(header, 'header')}\r\n            {content}\r\n            {staticRow(footer, 'footer')}\r\n        </ul>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { ItemEdit } from './itemEdit';\r\n\r\nexport class StringItemEdit extends ItemEdit {\r\n    protected uiItem: UiTextItem;\r\n    protected async internalStart():Promise<any> {\r\n        return new Promise<any>((resolve, reject) => {\r\n            let element = React.createElement(this.page, {resolve:resolve, reject:reject});\r\n            nav.push(element,reject);\r\n        });\r\n    }\r\n\r\n    private onChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.newValue = evt.target.value;\r\n        let preValue = this.value;\r\n        this.isChanged = (this.newValue != preValue);\r\n    }\r\n\r\n    private onBlur = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.verifyValue();\r\n    }\r\n\r\n    private onFocus = () => {\r\n        this.error = undefined;\r\n    }\r\n\r\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\r\n        let {resolve, reject} = props;\r\n        let right = <button\r\n            className=\"btn btn-sm btn-success\"\r\n            disabled={!this.isChanged}\r\n            onClick={()=>{\r\n                this.verifyValue();\r\n                if (this.error === undefined) resolve(this.newValue);\r\n            }}>保存</button>;\r\n        return <Page header={'更改' + this.label} right={right}>\r\n            <div className=\"m-3\">\r\n                <input type=\"text\" \r\n                    onChange={this.onChange}\r\n                    onBlur={this.onBlur}\r\n                    onFocus={this.onFocus}\r\n                    className=\"form-control\" \r\n                    defaultValue={this.value} />\r\n                {\r\n                    this.uiItem && <div className=\"small muted m-2\">{this.uiItem.placeholder}</div>\r\n                }\r\n                {this.error && <div className=\"text-danger\">{this.error}</div>}\r\n            </div>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem, UiRadio } from '../schema';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { ItemEdit } from './itemEdit';\r\n\r\nexport class RadioItemEdit extends ItemEdit {\r\n    protected uiItem: UiRadio;\r\n    protected async internalStart():Promise<any> {\r\n        return new Promise<any>((resolve, reject) => {\r\n            let element = React.createElement(this.page, {resolve:resolve, reject:reject});\r\n            nav.push(element,reject);\r\n        });\r\n    }\r\n\r\n    private onChange = (value: any) => {\r\n        this.newValue = value;\r\n        let preValue = this.value;\r\n        this.isChanged = (this.newValue != preValue);\r\n    }\r\n\r\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\r\n        let {resolve, reject} = props;\r\n        let {name} = this.itemSchema;\r\n        let {list, defaultValue} = this.uiItem;\r\n        let right = <button\r\n            className=\"btn btn-sm btn-success\"\r\n            disabled={!this.isChanged}\r\n            onClick={()=>{\r\n                this.verifyValue();\r\n                if (this.error === undefined) resolve(this.newValue);\r\n            }}>保存</button>;\r\n        let content = list?\r\n            list.map((v, index:number) => {\r\n                let {title, value} = v;\r\n                return <label key={index} className=\"px-3 py-2 cursor-pointer\">\r\n                    <input name={name} type=\"radio\" value={value} \r\n                        onClick={()=>this.onChange(value)} \r\n                        defaultChecked={value === defaultValue} /> {title || value} &nbsp;\r\n                </label>;\r\n            })\r\n            :\r\n            <>no list defined</>;\r\n        return <Page header={'更改' + this.label} right={right}>\r\n            <div className=\"m-3\">{content}</div>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem, UiSelect } from '../schema';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { ItemEdit } from './itemEdit';\r\n\r\nexport class SelectItemEdit extends ItemEdit {\r\n    protected uiItem: UiSelect;\r\n    protected async internalStart():Promise<any> {\r\n        return new Promise<any>((resolve, reject) => {\r\n            let element = React.createElement(this.page, {resolve:resolve, reject:reject});\r\n            nav.push(element,reject);\r\n        });\r\n    }\r\n\r\n    private onChange = (value:any) => {\r\n        this.newValue = value;\r\n        let preValue = this.value;\r\n        this.isChanged = (this.newValue != preValue);\r\n    }\r\n\r\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\r\n        let {resolve, reject} = props;\r\n        let {list} = this.uiItem;\r\n        let content = list?\r\n            list.map((v, index:number) => {\r\n                let {title, value} = v;\r\n                return <div key={index} className=\"px-3 py-2 cursor-pointer bg-white mb-1\" onClick={()=>{this.onChange(value); resolve(this.newValue)}}>\r\n                    {title || value}\r\n                </div>;\r\n            })\r\n            :\r\n            <>no list defined</>;\r\n        return <Page header={'更改' + this.label}>\r\n            <div className=\"my-3\">\r\n                {content}\r\n            </div>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\r\nimport { observer } from 'mobx-react';\r\nimport { ItemEdit } from './itemEdit';\r\nimport { StringItemEdit } from './stringItemEdit';\r\nimport { ImageItemEdit } from './imageItemEdit';\r\nimport { Image } from '../image';\r\nimport { RadioItemEdit } from './radioItemEdit';\r\nimport { SelectItemEdit } from './selectItemEdit';\r\nimport { UiSelectBase } from '../form/uiSchema';\r\n\r\nexport interface EditProps {\r\n    className?: string;\r\n    schema: Schema;\r\n    data: any;\r\n    onItemClick?: (itemSchema: ItemSchema, uiItem: UiItem, value: any) => Promise<void>;\r\n    onItemChanged?: (itemSchema: ItemSchema, newValue:any, preValue:any) => Promise<void>;\r\n    stopEdit?: boolean;\r\n    uiSchema?: UiSchema;\r\n    sepClassName?: string;\r\n    topBorderClassName?: string;\r\n    bottomBorderClassName?: string;\r\n    rowContainerClassName?: string;\r\n}\r\n\r\n@observer\r\nexport class Edit extends React.Component<EditProps> {\r\n    private defaultSepClassName = 'border-top edit-sep-light-gray';\r\n    private defaultRowContainerClassName = 'd-flex px-3 py-2 bg-white align-items-center';\r\n    private topBorder:JSX.Element;\r\n    private bottomBorder:JSX.Element;\r\n    private rowContainerClassName?: string;\r\n    private sep:JSX.Element;\r\n    private uiSchema: {[name:string]: UiItem};\r\n\r\n    constructor(props: EditProps) {\r\n        super(props);\r\n        let {topBorderClassName, bottomBorderClassName, sepClassName, rowContainerClassName, uiSchema, stopEdit} = props;\r\n        this.topBorder = <div className={topBorderClassName || this.defaultSepClassName} />;\r\n        this.bottomBorder = <div className={bottomBorderClassName || this.defaultSepClassName} />;\r\n        this.rowContainerClassName = rowContainerClassName || this.defaultRowContainerClassName;\r\n        if (stopEdit !== true) this.rowContainerClassName += ' cursor-pointer';\r\n        this.sep = <div className={sepClassName || this.defaultSepClassName} />;\r\n        this.uiSchema = (uiSchema && uiSchema.items) || {};\r\n    }\r\n\r\n    render() {\r\n        let elItems:JSX.Element[] = [];\r\n        let {schema} = this.props;\r\n        let len = schema.length;\r\n\r\n        elItems.push(this.topBorder);\r\n        for (let i=0; i<len; i++) {\r\n            let itemSchema = schema[i];\r\n            if (i>0) elItems.push(this.sep);\r\n            let value = this.props.data[itemSchema.name];\r\n            elItems.push(this.renderRow(itemSchema, value));\r\n        }\r\n        elItems.push(this.bottomBorder);\r\n\r\n        return <div>\r\n            {elItems.map((v, index) => <React.Fragment key={index}>{v}</React.Fragment>)}\r\n        </div>;\r\n    }\r\n\r\n    private renderRow = (itemSchema: ItemSchema, value:any):JSX.Element => {\r\n        let {name, type, required} = itemSchema;\r\n        let divValue:any;\r\n        let uiItem = this.uiSchema[name];\r\n        let label:string = (uiItem && uiItem.label) || name;\r\n        //let value:any = this.props.data[name];\r\n        if (uiItem !== undefined && value) {\r\n            switch (uiItem.widget) {\r\n                case 'radio':\r\n                case 'select':\r\n                    let {list} = uiItem as UiSelectBase;\r\n                    divValue = <b>{list.find(v => v.value === value).title}</b>;\r\n                    break;\r\n            }\r\n        }\r\n        if (divValue === undefined) {\r\n            switch (type) {\r\n                default:\r\n                    divValue = value? <b>{value}</b> : <small className=\"text-muted\">(无)</small>;\r\n                    break;\r\n                case 'image':\r\n                    divValue = <Image className=\"w-4c h-4c\" src={value} />;\r\n                    break;\r\n            }\r\n        }\r\n        let requireFlag = required===true && <span className=\"text-danger\">*</span>;\r\n        return <div className={this.rowContainerClassName} onClick={async ()=>await this.rowClick(itemSchema, uiItem, label, value)}>\r\n            <div className=\"w-6c\">{label} {requireFlag}</div>\r\n            <div className=\"flex-fill d-flex justify-content-end\">{divValue}</div>\r\n            {this.props.stopEdit!==true && <div className=\"w-2c text-right\"><i className=\"fa fa-chevron-right\" /></div>}\r\n        </div>;\r\n    };\r\n\r\n    private rowClick = async (itemSchema: ItemSchema, uiItem: UiItem, label:string, value: any) => {\r\n        let {onItemChanged, onItemClick, stopEdit} = this.props;\r\n        if (stopEdit === true) return;\r\n        let changeValue:any;\r\n        if (onItemClick !== undefined) {\r\n            await onItemClick(itemSchema, uiItem, value);\r\n            return;\r\n        }\r\n        let itemEdit:ItemEdit = createItemEdit(itemSchema, uiItem, label, value);\r\n        if (itemEdit === undefined) {\r\n            alert('undefined: let itemEdit:ItemEdit = createItemEdit(itemSchema, uiItem, label, value);');\r\n            return;\r\n        }\r\n        try {\r\n            changeValue = await itemEdit.start();\r\n            if (changeValue != value) {\r\n                if (onItemChanged === undefined) {\r\n                    alert(`${itemSchema.name} value changed, new: ${changeValue}, pre: ${value}`);\r\n                    this.props.data[itemSchema.name] = changeValue;\r\n                }\r\n                else {\r\n                    await onItemChanged(itemSchema, changeValue, value);\r\n                }\r\n            }\r\n            await itemEdit.end();\r\n        }\r\n        catch (err) {\r\n            // 如果直接back，会触发reject，就到这里了\r\n            console.log('no value changed');\r\n        }\r\n    }\r\n}\r\n\r\nfunction createItemEdit(itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any):ItemEdit {\r\n    let itemEdit: new (itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any) => ItemEdit;\r\n    if (uiItem !== undefined) {\r\n        switch (uiItem.widget) {\r\n            default: break;\r\n            case 'text': itemEdit = StringItemEdit; break;\r\n            case 'image': itemEdit = ImageItemEdit; break;\r\n            case 'radio': itemEdit = RadioItemEdit; break;\r\n            case 'select': itemEdit = SelectItemEdit; break;\r\n        }\r\n    }\r\n    if (itemEdit === undefined) {\r\n        switch (itemSchema.type) {\r\n            case 'string': itemEdit = StringItemEdit; break;\r\n            case 'image': itemEdit = ImageItemEdit; break;\r\n        }\r\n    }\r\n    if (itemEdit === undefined) return;\r\n    return new itemEdit(itemSchema, uiItem, label, value);\r\n}\r\n","export * from './edit';\r\n","import * as React from 'react';\r\nimport className from 'classnames';\r\nimport {PropGridProps} from './PropGrid';\r\nimport {LabeledProp, StringProp, NumberProp, ListProp, ComponentProp} from './propView';\r\n\r\nexport abstract class PropRow {\r\n    setValues(values: any) {}\r\n    abstract render(key:string): any;\r\n}\r\n\r\nexport class PropBorder extends PropRow {\r\n    render(key:string): JSX.Element {\r\n        return <div key={'_b_' + key} className=\"\">\r\n            <div className=\"w-100\">\r\n                <div style={{borderTop: '1px solid #f0f0f0'}} />\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class PropGap extends PropRow {\r\n    private param: string;\r\n    constructor(param?: string) {\r\n        super();\r\n        this.param = param;\r\n    }\r\n    render(key:string): JSX.Element {\r\n        let w: string;\r\n        switch (this.param) {\r\n            default: w = 'py-2'; break;\r\n            case '=': w = 'py-1'; break;\r\n            case '-': w = 'pb-1'; break;\r\n        }\r\n        let cn = className(w);\r\n        return <div key={'_g_' + key} className={cn} style={{backgroundColor: '#f0f0f0'}} />;\r\n    }\r\n}\r\n\r\nconst valueAlignStart = 'justify-content-start';\r\nconst valueAlignCenter = 'justify-content-center';\r\nconst valueAlignEnd = 'justify-content-end';\r\nexport abstract class LabeledPropRow extends PropRow {\r\n    protected gridProps: PropGridProps;\r\n    protected prop: LabeledProp;\r\n    protected content: any;\r\n    protected col: string;\r\n    //protected values: any;\r\n    constructor(gridProps:PropGridProps, prop: LabeledProp) {\r\n        super();\r\n        this.gridProps = gridProps;\r\n        this.prop = prop;\r\n        this.col = gridProps.labelFixLeft === true? 'col' : 'col-sm';\r\n        //this.values = values;\r\n    }\r\n    render(key:string):any {\r\n        let {onClick, bk} = this.prop;\r\n        let cn = className({\r\n            \"cursor-pointer\": onClick !== undefined,\r\n            \"bg-white\": bk === undefined, \r\n            \"row\": true\r\n        });\r\n        return <div key={key} className={cn} onClick={onClick}>\r\n            {this.renderLabel()}\r\n            {this.renderProp()}\r\n        </div>;\r\n    }\r\n    protected renderLabel():any {\r\n        let {label} = this.prop;\r\n        if (label === undefined) return null;\r\n        return <label className={this.col + '-3 col-form-label'}>\r\n            {label}\r\n        </label>;\r\n    }\r\n    protected renderProp():any {\r\n        let {label} = this.prop;\r\n        let align, vAlign;\r\n        switch (this.gridProps.alignValue) {\r\n            case 'left': align = valueAlignStart; break;\r\n            case 'center': align = valueAlignCenter; break;\r\n            case 'right': align = valueAlignEnd; break;\r\n        }\r\n        switch (this.prop.vAlign) {\r\n            case 'top': vAlign = 'align-items-start'; break;\r\n            default:\r\n            case 'center': vAlign = 'align-items-center'; break;\r\n            case 'bottom': vAlign = 'align-items-end'; break;\r\n            case 'stretch': vAlign = 'align-items-stretch'; break;\r\n        }\r\n        let col:string = this.col + (label===undefined? '-12':'-9');\r\n        let cn = className(align, vAlign, col, 'd-flex');\r\n        return <div className={cn}>\r\n            {this.renderPropBody()}\r\n        </div>;\r\n    }\r\n    protected renderPropBody():any {\r\n        return <div className=\"form-control-plaintext\">\r\n            {this.renderPropContent()}\r\n        </div>;\r\n    }\r\n    protected renderPropContent():any {\r\n        return this.content;\r\n    }\r\n}\r\n\r\nexport class StringPropRow extends LabeledPropRow {\r\n    protected prop: StringProp;\r\n    setValues(values:any) {\r\n        if (values === undefined) this.content = undefined;\r\n        else this.content = values[this.prop.name];\r\n    }\r\n}\r\n\r\nexport class NumberPropRow extends LabeledPropRow {\r\n    protected prop: NumberProp;\r\n    setValues(values:any) {\r\n        if (values === undefined) this.content = undefined;\r\n        else this.content = values[this.prop.name];\r\n    }\r\n}\r\n\r\nexport class ListPropRow extends LabeledPropRow {\r\n    protected prop: ListProp;\r\n    setValues(values:any) {\r\n        if (values === undefined) this.content = undefined;\r\n        else {\r\n            let list = this.prop.list;\r\n            if (typeof list === 'string') this.content = values[list];\r\n            else this.content = undefined;\r\n        }\r\n    }\r\n    protected renderPropBody() {\r\n        let {list, row} = this.prop;\r\n        let items:any[] = typeof list === 'string'? this.content : list;\r\n        if (items === undefined) return <div/>;\r\n        // new row(item)\r\n        return <div className=\"w-100\">\r\n            {\r\n                items.map((item, index) => <React.Fragment key={index}>\r\n                    {index===0? null: <div style={{width:'100%', borderBottom:'1px solid #f0f0f0'}} />}\r\n                    {React.createElement(row, item)}\r\n                </React.Fragment>)\r\n            }\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class ComponentPropRow extends LabeledPropRow {\r\n    protected prop: ComponentProp;\r\n    protected renderPropBody() {\r\n        let {component} = this.prop;\r\n        return component;\r\n    }\r\n    protected renderProp():any {\r\n        let {label, full} = this.prop;\r\n        let align, vAlign;\r\n        switch (this.gridProps.alignValue) {\r\n            case 'left': align = valueAlignStart; break;\r\n            case 'center': align = valueAlignCenter; break;\r\n            case 'right': align = valueAlignEnd; break;\r\n        }\r\n        switch (this.prop.vAlign) {\r\n            case 'top': vAlign = 'align-items-start'; break;\r\n            default:\r\n            case 'center': vAlign = 'align-items-center'; break;\r\n            case 'bottom': vAlign = 'align-items-end'; break;\r\n            case 'stretch': vAlign = 'align-items-stretch'; break;\r\n        }\r\n        let col:string;\r\n        if (full !== true)\r\n            col = this.col + (label===undefined? '-12':'-9');\r\n        else\r\n            col = 'w-100';\r\n        let cn = className(align, vAlign, col, 'd-flex');\r\n        return <div className={cn}>\r\n            {this.renderPropBody()}\r\n        </div>;\r\n    }\r\n}\r\n","import { PropGridProps } from './PropGrid';\r\nimport {\r\n    PropRow, PropBorder, PropGap, \r\n    StringPropRow, NumberPropRow, ListPropRow, ComponentPropRow\r\n} from './row';\r\n\r\nexport interface Format {\r\n\r\n}\r\n\r\nexport interface PropBase {\r\n    onClick?: () => void;\r\n}\r\n\r\nexport interface LabeledProp extends PropBase {\r\n    label?: string;\r\n    bk?: string;\r\n    vAlign?: 'top' | 'bottom' | 'center' | 'stretch';\r\n}\r\n\r\nexport interface StringProp extends LabeledProp {\r\n    type: 'string';\r\n    name: string;\r\n}\r\n\r\nexport interface NumberProp extends LabeledProp {\r\n    type: 'number';\r\n    name: string;\r\n}\r\n\r\nexport interface FormatProp extends LabeledProp {\r\n    type: 'format';\r\n    format: Format;\r\n}\r\n\r\nexport interface ListProp extends LabeledProp {\r\n    type: 'list';\r\n    list: string | any[];  // string 表示名字，否则就是值\r\n    row: new (props: any) => React.Component;\r\n}\r\n\r\nexport interface ComponentProp extends LabeledProp {\r\n    type: 'component';\r\n    full?: boolean;\r\n    component: any; //JSX.Element;\r\n}\r\n\r\nexport type Prop = StringProp | NumberProp | FormatProp | ListProp | ComponentProp | string;\r\n\r\nexport class PropView {\r\n    private gridProps: PropGridProps\r\n    private props: Prop[];\r\n    //private values:any;\r\n    private rows: PropRow[];\r\n\r\n    constructor(gridProps: PropGridProps, props: Prop[]) {\r\n        this.gridProps = gridProps;\r\n        this.props = props;\r\n        //this.values = values;\r\n        this.buildRows();\r\n    }\r\n\r\n    private buildRows() {\r\n        this.rows = [];\r\n        let isGap: boolean = true;\r\n        for (let prop of this.props) {\r\n            if (typeof prop === 'string') {\r\n                this.rows.push(new PropGap(prop));\r\n                isGap = true;\r\n            }\r\n            else {\r\n                if (!isGap) this.rows.push(new PropBorder());\r\n                let row;\r\n                switch (prop.type) {\r\n                    default: continue;\r\n                    case 'string': row = new StringPropRow(this.gridProps, prop); break;\r\n                    case 'number': row = new NumberPropRow(this.gridProps, prop); break;\r\n                    case 'list': row = new ListPropRow(this.gridProps, prop); break;\r\n                    case 'component': row = new ComponentPropRow(this.gridProps, prop); break;\r\n                }\r\n                this.rows.push(row);\r\n                isGap = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    setValues(values: any) {\r\n        for (let r of this.rows) r.setValues(values);\r\n    }\r\n\r\n    render() {\r\n        return this.rows.map((row, index) => row.render(String(index)));\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {Prop, PropView} from './propView';\r\n\r\nexport interface PropGridProps {\r\n    className?: string;\r\n    rows: Prop[];\r\n    values: any;\r\n    alignValue?: 'left'|'center'|'right';\r\n    labelFixLeft?: boolean;\r\n}\r\n\r\n@observer\r\nexport class PropGrid extends React.Component<PropGridProps> {\r\n    render() {\r\n        let {className, rows, values} = this.props;\r\n        let propView = new PropView(this.props, rows);\r\n        propView.setValues(values);\r\n        let cn = classNames('container-fluid', className);\r\n        return <div className={cn}>\r\n            {propView.render()}\r\n        </div>;\r\n    }\r\n}\r\n","export * from './propView';\r\nexport * from './row';\r\nexport * from './PropGrid';\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport { IObservableValue } from 'mobx/lib/internal';\r\n\r\nexport type TabCaption = (selected:boolean) => JSX.Element;\r\n\r\nexport interface TabProp {\r\n    name: string;\r\n    caption: TabCaption;\r\n    content: () => JSX.Element;\r\n    notify?: IObservableValue<number>;\r\n    load?: () => Promise<void>;\r\n}\r\n\r\nexport interface TabsProps {\r\n    tabs: TabProp[];\r\n    size?: 'sm' | 'lg' | 'md';\r\n    tabBack?: string;\r\n    contentBack?: string;\r\n    sep?: string;\r\n    selected?: string;\r\n}\r\n\r\nclass Tab {\r\n    name: string;\r\n    @observable selected: boolean;\r\n    caption: TabCaption;\r\n    contentBuilder: ()=>JSX.Element;\r\n    notify: IObservableValue<number>;\r\n    load?: () => Promise<void>;\r\n\r\n    private _content: JSX.Element;\r\n    get content(): JSX.Element {\r\n        if (this.selected !== true) return this._content;\r\n        if (this._content !== undefined) return this._content;\r\n        return this._content = this.contentBuilder();\r\n    }\r\n    async start() {\r\n        if (this._content !== undefined) return;\r\n        if (this.load === undefined) return;\r\n        await this.load();\r\n    }\r\n}\r\n\r\nexport const TabCaptionComponent = (label:string, icon:string, color:string) => <div \r\n    className={'d-flex justify-content-center align-items-center flex-column cursor-pointer ' + color}>\r\n    <div><i className={'fa fa-lg fa-' + icon} /></div>\r\n    <small>{label}</small>\r\n</div>;\r\n\r\n@observer export class Tabs extends React.Component<TabsProps> {\r\n    private size: string;\r\n    private tabBack: string;\r\n    private contentBack: string;\r\n    private sep: string;\r\n    @observable private selectedTab: Tab;\r\n    @observable private tabs: Tab[] = [];\r\n\r\n    constructor(props: TabsProps) {\r\n        super(props);\r\n        let {size, tabs, tabBack, contentBack, sep, selected} = this.props;\r\n        this.size = size || 'md';\r\n        this.tabs.push(...tabs.map(v => {\r\n                let tab = new Tab();\r\n                tab.name = v.name;\r\n                tab.selected = false;\r\n                tab.caption = v.caption;\r\n                tab.contentBuilder = v.content;\r\n                tab.notify = v.notify;\r\n                tab.load = v.load;\r\n                return tab;\r\n            }\r\n        ));\r\n        this.tabBack = tabBack || 'bg-light';\r\n        this.contentBack = contentBack;\r\n        this.sep = sep || 'border-top border-gray';\r\n        if (selected !== undefined) {\r\n            this.selectedTab = this.tabs.find(v => v.name === selected);\r\n        }\r\n        if (this.selectedTab === undefined) this.selectedTab = this.tabs[0];\r\n        this.selectedTab.selected = true;\r\n    }\r\n\r\n    private tabClick = async (tab:Tab) => {\r\n        await tab.start();\r\n        this.selectedTab.selected = false;\r\n        tab.selected = true;\r\n        this.selectedTab = tab;\r\n    }\r\n\r\n    showTab(tabName: string) {\r\n        let tab = this.tabs.find(v => v.name === tabName);\r\n        if (tab === undefined) return;\r\n        if (this.selectedTab !== undefined) this.selectedTab.selected = false;\r\n        tab.selected = true;\r\n        this.selectedTab = tab;\r\n    }\r\n\r\n    render() {\r\n        let cn = classNames('tab', 'tab-' + this.size);\r\n        return <div className={cn}>\r\n            <div className={this.contentBack}>\r\n                {this.tabs.map((v,index) => {\r\n                    let style:React.CSSProperties={\r\n                        display: v.selected===true? undefined : 'none'};\r\n                    return <div key={index} style={style}>{v.content}</div>;\r\n                })}\r\n            </div>\r\n            <div className={classNames(this.tabBack, this.sep)} style={{height: this.size}}>\r\n                {this.tabs.map((v,index) => {\r\n                    let {selected, caption, notify} = v;\r\n                    let notifyCircle:any;\r\n                    if (notify !== undefined) {\r\n                        let num = notify.get();\r\n                        if (num !== undefined) {\r\n                            if (num > 0) notifyCircle = <u>{num>99?'99+':num}</u>;\r\n                            else if (num < 0) notifyCircle = <u className=\"dot\" />;\r\n                        }\r\n                    }\r\n                    return <div key={index} className=\"\" onClick={()=>this.tabClick(v)}>\r\n                        <div className=\"align-self-center\">\r\n                            {notifyCircle}\r\n                            {caption(selected)}\r\n                        </div>\r\n                    </div>\r\n                })}\r\n            </div>\r\n        </div>\r\n    }\r\n};\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { VPage, Page, Form, ItemSchema, UiSchema, StringSchema, UiTextItem, UiPasswordItem, ButtonSchema, Edit, ImageSchema, nav, UiImageItem } from '../ui';\r\nimport { userApi } from './userApi';\r\n\r\nexport class EditMeInfo extends React.Component {\r\n    private schema:ItemSchema[] = [\r\n        {name:'nick', type:'string'} as StringSchema,\r\n        {name:'icon', type:'image'} as ImageSchema\r\n    ];\r\n    private uiSchema:UiSchema = {\r\n        items: {\r\n            nick: {widget:'text', label:'别名', placeholder:'好的别名更方便记忆'} as UiTextItem,\r\n            icon: {widget:'image', label:'头像'} as UiImageItem,\r\n        }\r\n    }\r\n    @observable private data:any;\r\n\r\n    constructor(props:any) {\r\n        super(props);\r\n        let {nick, icon} = nav.user;\r\n        this.data = {\r\n            nick: nick,\r\n            icon: icon,\r\n        }\r\n    }\r\n\r\n    private onItemChanged = async (itemSchema:ItemSchema, newValue:any, preValue:any) => {\r\n        let {name} = itemSchema;\r\n        await userApi.userSetProp(name, newValue);\r\n        this.data[name] = newValue;\r\n        nav.user[name] = newValue;\r\n        nav.saveLocalUser();\r\n    }\r\n\r\n    render() {\r\n        return <Page header=\"个人信息\">\r\n            <Edit schema={this.schema} uiSchema={this.uiSchema}\r\n                data={this.data}\r\n                onItemChanged={this.onItemChanged} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {FetchError} from '../fetchError';\r\nimport { refetchApi } from '../net';\r\n\r\nexport interface FetchErrorProps extends FetchError {\r\n    clearError: ()=>void\r\n}\r\n\r\nexport default class FetchErrorView extends React.Component<FetchErrorProps, null> {\r\n    private reApi = async () => {\r\n        this.props.clearError();\r\n        const {channel, url, options, resolve, reject} = this.props;\r\n        await refetchApi(channel, url, options, resolve, reject);\r\n    }\r\n    private close = async () => {\r\n        this.props.clearError();\r\n    }\r\n    render() {\r\n        let {error, url} = this.props;\r\n            //let errMsg = fetchError.errorMsg;\r\n        let errContent;\r\n        if (typeof error === 'object') {\r\n            let err = [];\r\n            for (let i in error) {\r\n                err.push(<li key={i}><label>{i}</label><div>{error[i]}</div></li>);\r\n            }\r\n            errContent = <ul>{err}</ul>;\r\n        }\r\n        else {\r\n            errContent = <div>{error}</div>;\r\n        }\r\n        return <li>\r\n            <article className=\"page-container\">\r\n                <section>\r\n                    <div  className=\"va-error\">\r\n                        <div>网络出现问题</div>\r\n                        <div>点击重新访问</div>\r\n                        <div>url: {url}</div>\r\n                        {errContent}\r\n                        <div className=\"p-3\">\r\n                            <button type='button' onClick={this.reApi}>重新API</button>\r\n                            <button type='button' onClick={this.close}>关闭</button>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </article>\r\n        </li>;\r\n    }\r\n}\r\n","import {User, Guest, Unit} from './user';\r\n\r\nexport interface ClearableData {\r\n    clear(): void;\r\n}\r\n\r\nexport class Data<T> implements ClearableData {\r\n    private name: string;\r\n    private value?: T;\r\n    constructor(name: string) {this.name = name; }\r\n    get(): T {\r\n        if (this.value !== undefined) return this.value;\r\n        let v = localStorage.getItem(this.name);\r\n        return this.value = v === null ? undefined : JSON.parse(v); \r\n    }\r\n    set(value: T) {\r\n        if (!value) { this.clear(); return; }\r\n        this.value = value;\r\n        localStorage.setItem(this.name, JSON.stringify(value));\r\n    }\r\n    clear() {\r\n        this.value = undefined;\r\n        localStorage.removeItem(this.name);\r\n    }\r\n}\r\n\r\nexport class LocalData {\r\n    user = new Data<User>('user');\r\n    guest = new Data<Guest>('guest');\r\n    unit = new Data<Unit>('unit');\r\n    testing = new Data<boolean>('testing');\r\n\r\n    logoutClear() {\r\n        [\r\n            this.user,\r\n            this.unit,\r\n        ].map(d => d.clear());\r\n    }\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import {CenterApi, User, appInFrame} from 'tonva';\r\nimport { string } from 'prop-types';\r\n\r\nclass MainApi extends CenterApi {\r\n    async stickies():Promise<any[]> {\r\n        return await this.get('sticky/list', {start:0, pageSize:30});\r\n    }\r\n\r\n    async ties():Promise<any[]> {\r\n        return await this.get('tie/list', {start:0, pageSize:30});\r\n    }\r\n\r\n    async apps(unit:number):Promise<any> {\r\n        return await this.get('tie/apps', {unit:unit});\r\n    }\r\n\r\n    async appApi(unit:number, app:number, apiName:string) {\r\n        return await this.get('tie/app-api', {unit:unit, app:app, apiName:apiName});\r\n    }\r\n\r\n    async userId(name:string):Promise<number> {\r\n        return await this.get('tie/user-id', {name:name});\r\n    }\r\n\r\n    async userAdminUnits():Promise<any[]> {\r\n        return await this.get('tie/user-admin-units', {});\r\n    }\r\n\r\n    async sendMessage(toUser:number, type:string, content:any) {\r\n        let {unit} = appInFrame;\r\n        let adminApp = 0;\r\n        return await this.post('tie/send-message', {\r\n            type: type, \r\n            fromUnit: unit, \r\n            fromApp: adminApp,\r\n            toUser: toUser, \r\n            content: content, \r\n        });\r\n    }\r\n\r\n    async unit(unit:number):Promise<any> {\r\n        return await this.get('unit/', {unit:unit});\r\n    }\r\n\r\n    async unitMemberCount(unit:number):Promise<number> {\r\n        return await this.get('unit/member-count', {unit:unit});\r\n    }\r\n\r\n    async unitAdmins(unit:number):Promise<any[]> {\r\n        return await this.get('unit/admins', {unit:unit});\r\n    }\r\n\r\n    async unitSetAdmin(fellow:number, unit:number, isOwner:number, isAdmin:number):Promise<any> {\r\n        return await this.post('unit/set-admin', {fellow:fellow, unit:unit, isOwner:isOwner, isAdmin:isAdmin});\r\n    }\r\n\r\n    async unitAddAdmin(user:string, unit:number, isOwner:number, isAdmin:number):Promise<any> {\r\n        return await this.post('unit/add-admin', {user:user, unit:unit, isOwner:isOwner, isAdmin:isAdmin});\r\n    }\r\n\r\n    async unitApps(unit:number):Promise<any[]> {\r\n        return await this.get('unit/apps', {unit:unit});\r\n    }\r\n\r\n    async unitAddApp(unit:number, app:number):Promise<number> {\r\n        let ret = await this.post('unit/add-app', {unit:unit, app:app});\r\n        return ret;\r\n    }\r\n\r\n    async unitDeleteApp(unit:number, app:number, deleted:number):Promise<void> {\r\n        await this.post('unit/delete-app', {unit:unit, app:app, deleted:deleted});\r\n    }\r\n\r\n    async unitChangeProp(unit:number, prop:string, value:any):Promise<void> {\r\n        await this.post('unit/change-prop', {unit:unit, prop:prop, value:value});\r\n    }\r\n\r\n    async searchApp(unit:number, key:string, pageStart:any, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/search-app', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n\r\n    async unitRoles(unit:number):Promise<any[]> {\r\n        return await this.get('unit/roles', {unit:unit});\r\n    }\r\n\r\n    async unitAddRole(unit:number, name:string, discription:string):Promise<number> {\r\n        return await this.post('unit/add-role', {unit:unit, name:name, discription:discription});\r\n    }\r\n\r\n    async unitRoleChangeProp(unit:number, role:number, prop:string, value:any):Promise<void> {\r\n        await this.post('unit/change-role-prop', {unit:unit, role:role, prop:prop, value:value});\r\n    }\r\n\r\n    async unitRoleApps(unit:number, role:number):Promise<any[]> {\r\n        return await this.get('unit/role-apps', {unit:unit, role:role});\r\n    }\r\n\r\n    async unitRoleSetApps(unit:number, role:number, apps:number[]):Promise<void> {\r\n        await this.post('unit/role-set-apps', {unit:unit, role:role, apps:apps});\r\n    }\r\n\r\n    async unitMembers(unit:number, role:number, key:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/members', {unit:unit, role:role, key, pageStart, pageSize});\r\n    }\r\n\r\n    async unitAssignMember(unit:number, member:number, assigned:string):Promise<void> {\r\n        await this.post('unit/assign-member', {unit:unit, member:member, assigned:assigned});\r\n    }\r\n\r\n    async unitMemberRoles(unit:number, member:number):Promise<any[]> {\r\n        return await this.get('unit/member-roles', {unit:unit, member:member});\r\n    }\r\n\r\n    async unitSetMemberRoles(unit:number, member:number, roles:number[]):Promise<void> {\r\n        await this.post('unit/member-set-roles', {unit:unit, member:member, roles:roles});\r\n    }\r\n\r\n    async unitUsers(unit:number, key:string, pageStart:number, pageSize:number):Promise<any> {\r\n        return await this.get('unit/users', {unit: unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitAppUsers(unit:number, key:string, pageStart:number, pageSize:number):Promise<any> {\r\n        return await this.get('unit/app-users', {unit: unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitOneAppUsers(unit:number, app:number, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/one-app-users', {unit: unit, app:app, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitOneUserApps(unit:number, user:number, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/one-user-apps', {unit: unit, user:user, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitAppEditUsers(unit:number, app:number, key:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/app-edit-users', {unit: unit, app:app, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitUserEditApps(unit:number, user:number, key:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/user-edit-apps', {unit: unit, user:user, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async bindAppUser(unit:number, app:number, user:number, bind:number):Promise<void> {\r\n        await this.post('unit/bind-app-user', {unit: unit, app:app, user:user, bind:bind});\r\n    }\r\n\r\n    async userFromKey(key:string):Promise<any> {\r\n        return await this.get('tie/user-from-key', {key:key});\r\n    }\r\n    async unitAddUser(unit:number, user:number) {\r\n        await this.post('unit/add-user', {unit:unit, user:user});\r\n    }\r\n}\r\n\r\nexport const mainApi = new MainApi('tv/', undefined);\r\n","import {CenterApi} from 'tonva';\r\n\r\nclass DevApi extends CenterApi {\r\n    async uqBuilderUrl():Promise<any> {\r\n        let ret = await this.get('uq-builder-url', undefined);\r\n        return ret;\r\n    }    \r\n    async counts(unit:number):Promise<any> {\r\n        return await this.get('counts', {unit:unit});\r\n    }\r\n    async app(id:number):Promise<any> {\r\n        return await this.get('app', {id:id});\r\n    }\r\n    async uq(id:number):Promise<any> {\r\n        return await this.get('uq', {id:id});\r\n    }\r\n    async server(id:number):Promise<any> {\r\n        return await this.get('server', {id:id});\r\n    }\r\n    async apps(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('apps', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async uqs(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('uqs', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async buses(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('buses', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async servers(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('servers', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async services(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('services', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async saveApp(values:any):Promise<number> {\r\n        return await this.post('app-save', values);\r\n    }\r\n    async saveUq(values:any):Promise<number> {\r\n        return await this.post('uq-save', values);\r\n    }\r\n    async saveBus(values:any):Promise<number> {\r\n        return await this.post('bus-save', values);\r\n    }\r\n    async saveServer(values:any):Promise<number> {\r\n        return await this.post('server-save', values);\r\n    }\r\n    async saveService(values:any):Promise<number> {\r\n        return await this.post('service-save', values);\r\n    }\r\n    async delApp(unit:number,id:number):Promise<void> {\r\n        return await this.post('app-del', {unit:unit, id:id});\r\n    }\r\n    async delUq(unit:number,id:number):Promise<void> {\r\n        return await this.post('uq-del', {unit:unit, id:id});\r\n    }\r\n    async delBus(unit:number,id:number):Promise<void> {\r\n        return await this.post('bus-del', {unit:unit, id:id});\r\n    }\r\n    async delServer(unit:number,id:number):Promise<void> {\r\n        return await this.post('server-del', {unit:unit, id:id});\r\n    }\r\n    async delUqdb(unit:number,id:number):Promise<void> {\r\n        return await this.post('uqdb-del', {unit:unit, id:id});\r\n    }\r\n    async delService(unit:number,id:number):Promise<void> {\r\n        return await this.post('service-del', {unit:unit, id:id});\r\n    }\r\n    async loadAppUqs(app:number):Promise<any[]> {\r\n        return await this.get('app-uqs', {app: app});\r\n    }\r\n    async appBindUq(unit:number,app:number,uqs:{id:number, access:string[]}[]):Promise<void> {\r\n        let uqsText:string;\r\n        if (uqs !== undefined) {\r\n            uqsText = uqs.map(v => String(v.id)+'|'+v.access.join(',')).join(';');\r\n        }\r\n        await this.post('app-bind-uq', {unit:unit, app:app, uqs:uqsText});\r\n    }\r\n    async searchUq(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('uq-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async getMyUqs(unit:number):Promise<any[]> {\r\n        return await this.get('my-uqs', {unit:unit});\r\n    }\r\n    async searchApp(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('app-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async searchServer(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('server-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async searchUqdb(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('uqdb-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async loadUqServices(unit:number, uq:number):Promise<any[]> {\r\n        return await this.get('uq-services', {unit:unit, uq:uq});\r\n    }\r\n    async changeServiceProp(unit:number, service:number, prop:string, value:any):Promise<number> {\r\n        return await this.post('service-change-prop', {unit:unit, service:service, prop:prop, value:value});\r\n    }\r\n    async uqGetEntities(unit:number, uq:number):Promise<any[][]> {\r\n        return await this.get('uq-get-entities', {unit:unit, uq:uq});\r\n    }\r\n}\r\n\r\nexport const devApi = new DevApi('tv/dev/', undefined);\r\n","import {observable} from 'mobx';\r\nimport {UnitAdmin} from '../model';\r\nimport {mainApi} from '../api';\r\nimport {Store} from './index';\r\n\r\nexport class Admins {\r\n    private store:Store;\r\n    constructor(store:Store) {\r\n        this.store = store;\r\n    }\r\n\r\n    @observable cur: UnitAdmin = undefined;\r\n    @observable owners: UnitAdmin[] = undefined;\r\n    @observable admins: UnitAdmin[] = undefined;\r\n    @observable fellows: UnitAdmin[] = undefined;\r\n    \r\n    async load(): Promise<void> {\r\n        let unit = this.store.unit;\r\n        if (unit === undefined) return;\r\n        if (unit.id === undefined) return;\r\n        if (this.admins !== undefined) return;\r\n        let all = await mainApi.unitAdmins(unit.id);\r\n        let owners:UnitAdmin[] = [];\r\n        let admins:UnitAdmin[] = [];\r\n        let fellows:UnitAdmin[] = [];\r\n        all.forEach(ua => {\r\n            let {isOwner, isAdmin} = ua;\r\n            if (isOwner === 0 && isAdmin === 0)\r\n                fellows.push(ua);\r\n            else {\r\n                if (isOwner === 1) owners.push(ua);\r\n                if (isAdmin === 1) admins.push(ua);\r\n            }\r\n        });\r\n        this.owners = owners;\r\n        this.admins = admins;\r\n        this.fellows = fellows;\r\n    }\r\n\r\n    private removeCur(arr: UnitAdmin[]) {\r\n        let index = arr.findIndex(v => v.id===this.cur.id);\r\n        if (index >=0) arr.splice(index, 1);\r\n    }\r\n\r\n    async unitSetAdmin(isOwner:number, isAdmin:number) {\r\n        let cur = this.cur;\r\n        cur.isOwner = isOwner;\r\n        cur.isAdmin = isAdmin;\r\n        let fellowId = cur.id, unitId = this.store.unit.id;\r\n        await mainApi.unitSetAdmin(fellowId, unitId, isOwner, isAdmin);\r\n        this.removeCur(this.owners);\r\n        this.removeCur(this.admins);\r\n        this.removeCur(this.fellows);\r\n        if (isOwner === 0 && isAdmin === 0)\r\n            this.fellows.unshift(cur);\r\n        else {\r\n            if (isOwner === 1) this.owners.unshift(cur);\r\n            if (isAdmin === 1) this.admins.unshift(cur);\r\n        }\r\n    }\r\n\r\n    async addNew(user:string, isOwner:number, isAdmin:number):Promise<UnitAdmin> {\r\n        let admin = await mainApi.unitAddAdmin(user, this.store.unit.id, isOwner, isAdmin);\r\n        if (admin !== undefined) {\r\n            let cur = this.cur = admin;\r\n            this.removeCur(this.owners);\r\n            this.removeCur(this.admins);\r\n            this.removeCur(this.fellows);\r\n            if (isOwner === 0 && isAdmin === 0)\r\n                this.fellows.unshift(cur);\r\n            else {\r\n                if (isOwner === 1) this.owners.unshift(cur);\r\n                if (isAdmin === 1) this.admins.unshift(cur);\r\n            }\r\n        }\r\n        return admin;\r\n    }\r\n}\r\n","import {observable, autorun} from 'mobx';\r\nimport _ from 'lodash';\r\nimport {devApi} from '../api';\r\nimport {DevModel, Unit} from '../model';\r\nimport {Store} from './index';\r\n\r\ninterface Counts {\r\n    uq: number;\r\n    app: number;\r\n    bus: number;\r\n    server: number;\r\n    service: number;\r\n    //uqdb: number;\r\n}\r\n\r\nexport abstract class ObjItems<T extends DevModel.ObjBase> {\r\n    protected store:Store;\r\n    protected dev:Dev;\r\n    constructor(store:Store, dev:Dev) {\r\n        this.store = store;\r\n        this.dev = dev;\r\n    }\r\n\r\n    @observable items: T[] = undefined;\r\n    @observable cur: T = undefined;\r\n\r\n    async load():Promise<void> {\r\n         let ret = await this._load();\r\n         this.items = ret;\r\n    }\r\n    protected abstract _load():Promise<T[]>;\r\n    async saveCur(item:T):Promise<boolean> {\r\n        let values:any = {};\r\n        if (this.cur !== undefined) {\r\n            _.assign(values, this.cur, item);\r\n        }\r\n        else {\r\n            _.assign(values, item);\r\n        }\r\n\r\n        values.unit = item.unit = this.store.unit.id;\r\n        let id = await this._save(values);\r\n        if (this.cur === undefined) {\r\n            if (id === 0) return false;\r\n            values.id = id;\r\n            if (this.items !== undefined) this.items.unshift(values);\r\n            this._inc();\r\n            this.cur = observable(values);\r\n        }\r\n        else {\r\n            _.assign(this.cur, values);\r\n        }\r\n        return true;\r\n    }\r\n    async check(item:T):Promise<boolean> {\r\n        return true;\r\n    }\r\n    async save(item:T):Promise<T> {\r\n        let values:any = {};\r\n        _.assign(values, item);\r\n\r\n        values.unit = item.unit = this.store.unit.id;\r\n        let id = await this._save(values);\r\n        if (id === 0) return;\r\n        values.id = id;\r\n        return values;\r\n    }\r\n    protected abstract _save(item:T):Promise<number>;\r\n    async del():Promise<void> {\r\n        let c = this.cur;\r\n        if (c === undefined) return;\r\n        let id = c.id;\r\n        await this._del(c);\r\n        if (this.items === undefined) return;\r\n        let index = this.items.findIndex(v => v.id === id);\r\n        if (index>=0) {\r\n            this.items.splice(index, 1);\r\n            this._dec();\r\n        }\r\n    }\r\n    protected abstract _del(item:T):Promise<void>;\r\n    protected abstract _inc();\r\n    protected abstract _dec();\r\n}\r\n\r\nclass Apps extends ObjItems<DevModel.App> {\r\n    @observable uqs: DevModel.UQ[] = undefined;\r\n    @observable searchedUqs: DevModel.UQ[] = undefined;\r\n    //@observable service: DevModel.Service = null;\r\n    protected async _load() {\r\n        return await devApi.apps(this.store.unit.id);\r\n    }\r\n    protected async _save(item:DevModel.App):Promise<number> {\r\n        return await devApi.saveApp(item);\r\n    }\r\n    protected async _del(item:DevModel.App):Promise<void> {\r\n        await devApi.delApp(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.app++; }\r\n    protected _dec() { this.dev.counts.app--; }\r\n\r\n    public async loadCurUqs() {\r\n        let ret = await devApi.loadAppUqs(this.cur.id);\r\n        this.uqs = ret;\r\n    }\r\n    public async searchUq(key:string) {\r\n        this.searchedUqs = await devApi.searchUq(this.store.unit.id, key, 0, searchPageSize);\r\n    }\r\n    public async appBindUq(uqs:{id:number, access:string[]}[], bind:boolean) {\r\n        let allUqs:{id:number, access:string[]}[] = this.uqs.map(v => {\r\n            let {id, access} = v;\r\n            return {id: id, access: [access]};\r\n        });\r\n        for (let uq of uqs) {\r\n            let index = allUqs.findIndex(v => v.id === uq.id);\r\n            if (bind === true) {\r\n                if (index < 0) allUqs.unshift(uq);\r\n            }\r\n            else {\r\n                allUqs.splice(index, 1);\r\n            }\r\n        }\r\n        await devApi.appBindUq(this.store.unit.id, this.cur.id, allUqs);\r\n        for (let uq of uqs) {\r\n            let index = this.uqs.findIndex(a => a.id === uq.id);\r\n            if (index>=0) this.uqs.splice(index, 1);\r\n            if (bind === true) {\r\n                if (this.searchedUqs !== undefined) {\r\n                    let find = this.searchedUqs.find(a => a.id === uq.id);\r\n                    if (find !== undefined) this.uqs.unshift(find);\r\n                }\r\n            }\r\n            else {\r\n                // 已经删除，不需要处理\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass Uqs extends ObjItems<DevModel.UQ> {\r\n    protected async _load() {\r\n        let ret = await devApi.uqs(this.store.unit.id);\r\n        return ret;\r\n    }\r\n    protected async _save(item:DevModel.UQ):Promise<number> {\r\n        //let {access} = item;\r\n        //if (!access) access = \"*';\r\n        //let parts = access.split(',').map(v => v.trim()).filter(v => v!=='');\r\n        //item.access = parts.join(',');\r\n        return await devApi.saveUq(item);\r\n    }\r\n    protected async _del(item:DevModel.UQ):Promise<void> {\r\n        await devApi.delUq(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.uq++; }\r\n    protected _dec() { this.dev.counts.uq--; }\r\n}\r\n\r\nclass Buses extends ObjItems<DevModel.Bus> {\r\n    protected async _load() {\r\n        let ret = await devApi.buses(this.store.unit.id);\r\n        return ret;\r\n    }\r\n    protected async _save(item:DevModel.Bus):Promise<number> {\r\n        return await devApi.saveBus(item);\r\n    }\r\n    protected async _del(item:DevModel.Bus):Promise<void> {\r\n        await devApi.delBus(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.bus++; }\r\n    protected _dec() { this.dev.counts.bus--; }\r\n    async check(item:DevModel.Bus):Promise<boolean> {\r\n        let {schema} = item;\r\n        try {\r\n            let bus = JSON.parse(schema);\r\n            for (let i in bus) {\r\n                let face = bus[i];\r\n                if (face === null || face === undefined) {\r\n                    alert(`face ${i} is null，请设置内容`);\r\n                    return false;\r\n                }\r\n                switch (typeof face) {\r\n                    case 'function':\r\n                        alert(`face ${i} is function，不接受function`);\r\n                        return false;\r\n                    //case 'bigint':\r\n                    case 'boolean':\r\n                    case 'number':\r\n                    case 'string':\r\n                        alert(`face ${i} 应该是数组或者对象`);\r\n                        return false;\r\n                }\r\n                if (Array.isArray(face) === true) {\r\n                    if (checkBusFace(face, bus) === false) return false;\r\n                }\r\n                else {\r\n                    if (checkBusQuery(face, bus) === false) return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        catch (err) {\r\n            alert(err.message);\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nconst paramTypes = ['id', 'number', 'string'];\r\nconst busTypes = [...paramTypes, 'array'];\r\nfunction refNameOk(faceName:string, bus:any):boolean {\r\n    let face = bus[faceName];\r\n    if (face === undefined) {\r\n        alert(`face ${faceName} not defined`);\r\n        return false;\r\n    }\r\n    if (Array.isArray(face) === false) {\r\n        alert(`face ${faceName} is referenced, bus is not array`);\r\n        return false;\r\n    }\r\n    return refArrayOk(face as any[], bus);\r\n}\r\n\r\nfunction refArrayOk(items:any[], bus:any):boolean {\r\n    for (let item of items) {\r\n        let {type} = item;\r\n        if (['id', 'string', 'number', 'array'].indexOf(type) < 0) {\r\n            alert(`type ${type} out of ['id', 'string', 'number', 'array']`);\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction checkBusFace(face: any[], bus:any):boolean {\r\n    for (let field of face) {\r\n        let {type} = field;\r\n        if (type === 'array') {\r\n            let {fields} = field;\r\n            if (refNameOk(fields, bus) === false) {\r\n                return false;\r\n            }\r\n        }\r\n        if (busTypes.indexOf(type) < 0) {\r\n            if (type === 'date') {\r\n                alert('不再支持数据类型date，请用number unixtime作为媒介')\r\n            }\r\n            else {\r\n                alert(`不支持数据类型 ${type}`);\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction checkBusQuery(face: any, bus:any):boolean {\r\n    for (let i in face) {\r\n        if (i === 'param') {\r\n            if (checkBusQueryParam(face[i], bus) === false) return false;\r\n        }\r\n        else if (i === 'returns') {\r\n            if (checkBusFace(bus[face[i]], bus) === false) return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction checkBusQueryParam(param: any, bus:any):boolean {\r\n    if (param === null || param === undefined) return;\r\n    switch (typeof param) {\r\n        case 'string':\r\n            return refNameOk(param, bus);\r\n        default:\r\n            if (Array.isArray(param)) {\r\n                return refArrayOk(param, bus);\r\n            }\r\n            break;\r\n    }\r\n    alert('param of a query can only be string or array');\r\n    return false;\r\n}\r\n\r\nclass Servers extends ObjItems<DevModel.Server> {\r\n    protected async _load() {\r\n        return await devApi.servers(this.store.unit.id);\r\n    }\r\n    protected async _save(item:DevModel.Server):Promise<number> {\r\n        return await devApi.saveServer(item);\r\n    }\r\n    protected async _del(item:DevModel.Server):Promise<void> {\r\n        await devApi.delServer(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.server++; }\r\n    protected _dec() { this.dev.counts.server--; }\r\n}\r\nclass Services extends ObjItems<DevModel.Service> {\r\n    protected async _load() {\r\n        return await devApi.services(this.store.unit.id);\r\n    }\r\n    protected async _save(item:DevModel.Service):Promise<number> {\r\n        return await devApi.saveService(item);\r\n    }\r\n    protected async _del(item:DevModel.Service):Promise<void> {\r\n        await devApi.delService(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.service++; }\r\n    protected _dec() { this.dev.counts.service--; }\r\n    async changeProp(prop:string, value:any):Promise<number> {\r\n        let ret = await devApi.changeServiceProp(this.store.unit.id, this.cur.id, prop, value);\r\n        switch (prop) {\r\n            case 'url': this.cur.url = value; break;\r\n            case 'urlTest': this.cur.urlTest = value; break;\r\n            case 'server': this.cur.server = value; break;\r\n            case 'db': this.cur.db = value; break;\r\n            //case 'db_type': this.cur.db_type = value; break;\r\n            //case 'connection': this.cur.connection = value; break;\r\n        }\r\n        return ret;\r\n    }\r\n    async loadUqServices(uq:number):Promise<void> {\r\n        let ret = await devApi.loadUqServices(this.store.unit.id, uq);\r\n        this.items = ret[0];\r\n    }\r\n}\r\n\r\nconst searchPageSize = 50;\r\ntype Search = (unit:number,key:string,pageStart:number,pageSize:number)=>Promise<any[]>;\r\nclass SearchItems<T extends DevModel.ObjBase> {\r\n    private store:Store;\r\n    private dev:Dev;\r\n    private search:(unit:number,key:string,pageStart:number,pageSize:number)=>Promise<any[]>;\r\n\r\n    constructor(store:Store, dev:Dev, search:Search) {\r\n        this.store = store;\r\n        this.dev = dev;\r\n        this.search = search;\r\n    }\r\n\r\n    @observable items: T[] = undefined;\r\n    allLoaded: boolean = false;\r\n    private key: string;\r\n    private pageStart = 0;\r\n\r\n    async first(key:string) {\r\n        this.key = key;\r\n        this.items = undefined;\r\n        this.allLoaded = false;\r\n        this.pageStart = 0;\r\n        await this.more();\r\n    }\r\n\r\n    async more():Promise<void> {\r\n        if (this.allLoaded === true) return;\r\n        let ret = await this.search(this.store.unit.id, this.key, this.pageStart, searchPageSize);\r\n        let len = ret.length;\r\n        if (len > searchPageSize) {\r\n            this.allLoaded = false;\r\n            --len;\r\n            ret.splice(len, 1);\r\n        }\r\n        else {\r\n            this.allLoaded = true;\r\n        }\r\n        if (len > 0) {\r\n            this.pageStart = ret[len-1].id;\r\n            if (this.items === undefined)\r\n                this.items = ret;\r\n            else\r\n                this.items.push(...ret);\r\n        }\r\n        else {\r\n            this.items = [];\r\n        }\r\n    }\r\n}\r\n\r\nexport class Dev {\r\n    private store:Store;\r\n    constructor(store:Store) {\r\n        this.store = store;\r\n        this.apps = new Apps(store, this);\r\n        this.uqs = new Uqs(store, this);\r\n        this.buses = new Buses(store, this);\r\n        this.servers = new Servers(store, this);\r\n        //this.uqdbs = new Uqdbs(store, this);\r\n        this.services = new Services(store, this);\r\n        this.searchApp = new SearchItems<DevModel.App>(store, this, devApi.searchApp.bind(devApi));\r\n        this.searchUq = new SearchItems<DevModel.UQ>(store, this, devApi.searchUq.bind(devApi));\r\n        this.searchServer = new SearchItems<DevModel.Server>(store, this, devApi.searchServer.bind(devApi));\r\n    }\r\n\r\n    @observable counts:Counts = undefined;\r\n    apps:Apps = undefined;\r\n    uqs:Uqs = undefined;\r\n    buses:Buses = undefined;\r\n    servers:Servers = undefined;\r\n    //uqdbs:Uqdbs = undefined;\r\n    services:Services = undefined;\r\n\r\n    searchApp:SearchItems<DevModel.App> = undefined;\r\n    searchUq:SearchItems<DevModel.UQ> = undefined;\r\n    searchServer:SearchItems<DevModel.Server> = undefined;\r\n    //searchUqdb:SearchItems<DevModel.Uqdb> = undefined;\r\n    \r\n    async loadCounts(): Promise<void> {\r\n        let {unit} = this.store;\r\n        this.counts = await devApi.counts(unit.id);\r\n    }\r\n}\r\n","import {CacheIds} from 'tonva';\r\nimport {Id, Unit, DevModel} from '../model';\r\nimport {mainApi, devApi} from '../api';\r\n\r\nexport class CacheUnits extends CacheIds<Unit> {\r\n    protected async _loadIds(ids:number[]):Promise<Unit[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<Unit> {\r\n        return await mainApi.unit(id);\r\n    }\r\n}\r\n\r\nexport class CacheUqs extends CacheIds<DevModel.UQ> {\r\n    protected async _loadIds(ids:number[]):Promise<DevModel.UQ[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<DevModel.UQ> {\r\n        return await devApi.uq(id);\r\n    }\r\n}\r\n\r\nexport class CacheApps extends CacheIds<DevModel.App> {\r\n    protected async _loadIds(ids:number[]):Promise<DevModel.App[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<DevModel.App> {\r\n        return await devApi.app(id);\r\n    }\r\n}\r\n\r\nexport class CacheServers extends CacheIds<DevModel.Server> {\r\n    protected async _loadIds(ids:number[]):Promise<DevModel.Server[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<DevModel.Server> {\r\n        return await devApi.server(id);\r\n    }\r\n}\r\n","import {observable, autorun} from 'mobx';\r\nimport _ from 'lodash';\r\nimport {appInFrame, host} from 'tonva';\r\nimport {mainApi, devApi} from '../api';\r\nimport {Unit, UnitApps, App, Api, UnitAdmin, UnitApp, Role, RoleMember} from '../model';\r\nimport {Admins} from './admins';\r\nimport {Dev} from './dev';\r\nimport {CacheUnits, CacheUqs, CacheApps, CacheServers} from './cacheIds';\r\n\r\nexport class Store {\r\n    private get unitId():number {return appInFrame.unit;};\r\n    admins:Admins;\r\n    dev:Dev;\r\n    cacheUnits: CacheUnits;\r\n    cacheUqs: CacheUqs;\r\n    cacheApps: CacheApps;\r\n    cacheServers: CacheServers;\r\n    uqServer: string;\r\n\r\n    @observable unit: Unit;\r\n    @observable memberCount: number;\r\n    @observable apps: UnitApp[];\r\n    @observable role:Role;\r\n    @observable roles: Role[];\r\n    @observable roleApps: UnitApp[];\r\n    @observable roleMember: RoleMember;\r\n    @observable roleMembers: RoleMember[];\r\n    @observable memberRoles: Role[];\r\n\r\n    init() {\r\n        this.unit = undefined;\r\n        this.admins = new Admins(this);\r\n        this.dev = new Dev(this);\r\n        this.cacheUnits = new CacheUnits();\r\n        this.cacheUqs = new CacheUqs();\r\n        this.cacheApps = new CacheApps();\r\n        this.cacheServers = new CacheServers();\r\n    }\r\n\r\n    logout() {\r\n        //meInFrame.app = undefined;\r\n        appInFrame.hash = undefined;\r\n        //let unitId = process.env.REACT_APP_DEBUG_UNITID;\r\n        //if (unitId !== undefined)\r\n        //    meInFrame.unit = Number(unitId);\r\n        appInFrame.unit = undefined;\r\n        this.init();\r\n        this.memberCount = undefined;\r\n        this.apps = undefined;\r\n        this.role = undefined;\r\n        this.roles = undefined;\r\n        this.roleApps = undefined;\r\n        this.roleMember = undefined;\r\n        this.roleMembers = undefined;\r\n        this.memberRoles = undefined;\r\n    }\r\n\r\n    setRole(role:Role) {\r\n        if (this.role === role) return;\r\n        this.role = role;\r\n        this.roleApps = undefined;\r\n        this.roleMember = undefined;\r\n        this.roleMembers = undefined;\r\n        this.memberRoles = undefined;\r\n    }\r\n\r\n    setRoleUser(user:RoleMember) {\r\n        if (this.roleMember === user) return;\r\n        this.roleMember = user;\r\n        this.memberRoles = undefined;\r\n    }\r\n\r\n    async unitChangeProp(prop:string, value:any):Promise<void> {\r\n        await mainApi.unitChangeProp(this.unit.id, prop, value);\r\n        this.unit[prop] = value;\r\n    }\r\n\r\n    async loadApps(): Promise<void> {\r\n        if (this.apps !== undefined) return;\r\n        this.apps = await mainApi.unitApps(this.unitId);\r\n    }\r\n\r\n    async loadUnit(): Promise<void> {\r\n        if (this.unitId === undefined) return;\r\n        let ret = await mainApi.unit(this.unitId);\r\n        this.unit = ret;\r\n        console.log(\"loadUnit unit=%s\", ret);\r\n        this.memberCount = await mainApi.unitMemberCount(this.unitId);\r\n        let uqServer = await devApi.uqBuilderUrl();\r\n        let {url} = uqServer;\r\n        this.uqServer = host.getUrlOrDebug(url, 'uq-build');\r\n        console.log(\"uq-build: %s\", JSON.stringify(this.uqServer));\r\n    }\r\n\r\n    async stopUnitApp(appId:number): Promise<void> {\r\n        await mainApi.unitDeleteApp(this.unit.id, appId, 1);\r\n        let app = this.apps.find(v => v.id === appId);\r\n        app.inUnit = 0;\r\n    }\r\n\r\n    async restoreUnitApp(appId:number): Promise<number> {\r\n        let ret = await mainApi.unitAddApp(this.unit.id, appId);\r\n        if (ret <= 0) return ret;\r\n        let app = this.apps.find(v => v.id === appId);\r\n        app.inUnit = 1;\r\n        return 1;\r\n    }\r\n\r\n    async addUnitApp(app:UnitApp): Promise<number> {\r\n        let ret = await mainApi.unitAddApp(this.unit.id, app.id);\r\n        if (ret <= 0) return ret;\r\n        this.apps.push(app);\r\n        return 1;\r\n    }\r\n\r\n    async loadRoles(): Promise<void> {\r\n        if (this.roles !== undefined) return;\r\n        let ret = await mainApi.unitRoles(this.unit.id);\r\n        ret.forEach(v => {\r\n            switch (v.id) {\r\n                case 1: \r\n                    v.name= '访客';\r\n                    v.discription = '可以获取开放信息';\r\n                    break;\r\n                case 2: \r\n                    v.name= '普通';\r\n                    v.discription = '能访问最基本的功能';\r\n                    break;\r\n            }\r\n        });\r\n        this.roles = ret;\r\n    }\r\n\r\n    async unitAddRole(name:string, discription:string): Promise<number> {\r\n        let id = await mainApi.unitAddRole(this.unit.id, name, discription);\r\n        if (id > 0) {\r\n            this.roles.push({\r\n                id: id,\r\n                name: name,\r\n                discription: discription,\r\n                count: undefined,\r\n            });\r\n        }\r\n        return id;\r\n    }\r\n\r\n    async roleChangeProp(prop:string, value:any):Promise<void> {\r\n        await mainApi.unitRoleChangeProp(this.unit.id, this.role.id, prop, value);\r\n        this.role[prop] = value;\r\n    }\r\n\r\n    async loadRoleApps():Promise<void> {\r\n        let ret = await mainApi.unitRoleApps(this.unit.id, this.role.id);\r\n        this.roleApps = ret.map(v => {\r\n            return this.apps.find(app=>app.id === v.id);\r\n        });\r\n    }\r\n\r\n    async setRoleApps(apps:UnitApp[]) {\r\n        await mainApi.unitRoleSetApps(this.unit.id, this.role.id, apps.map(v=>v.id));\r\n        this.roleApps = apps;\r\n    }\r\n\r\n    async loadMembers():Promise<void> {\r\n        let ret = await mainApi.unitMembers(this.unit.id, this.role === undefined? 0:this.role.id, undefined, 0, 100);\r\n        this.roleMembers = ret;\r\n    }\r\n\r\n    async unitAssignMember(assigned:string):Promise<void> {\r\n        await mainApi.unitAssignMember(this.unit.id, this.roleMember.id, assigned);\r\n        this.roleMember.assigned = assigned;\r\n    }\r\n\r\n    async loadMemberRoles():Promise<void> {\r\n        let ret = await mainApi.unitMemberRoles(this.unit.id, this.roleMember.id);\r\n        let roles:Role[] = ret.map(v => {\r\n            let rId = v.id;\r\n            let role = this.roles.find(r => r.id === rId);\r\n            return _.clone(role);\r\n        });\r\n        this.memberRoles = roles;\r\n    }\r\n\r\n    async setMemberRoles(memberRoles:Role[]) {\r\n        await mainApi.unitSetMemberRoles(this.unit.id, this.roleMember.id, memberRoles.map(v=>v.id));\r\n        this.roles.forEach(role => {\r\n            let rId = role.id;\r\n            let org = this.memberRoles.find(v => v.id === rId);\r\n            let cur = memberRoles.find(v => v.id === rId);\r\n            if (org !== undefined) {\r\n                if (cur !== undefined) return;\r\n                role.count--;\r\n                return;\r\n            }\r\n            if (cur === undefined) return;\r\n            role.count++;\r\n        });\r\n        this.memberRoles = memberRoles;\r\n    }\r\n};\r\n\r\nexport const store = new Store();\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page, Context, Form, Schema, UiSchema, UiTextItem} from 'tonva';\r\nimport {store} from '../store';\r\n\r\n@observer\r\nexport default class NewFellowPage extends React.Component<{isOwner:boolean, isAdmin:boolean}> {\r\n    //private form: TonvaForm;\r\n    private schema: Schema = [\r\n        {name:'user', type:'string', required:true},\r\n        {name:'submit', type:'submit'}\r\n    ]\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            user: {widget:'text', maxLength: 100, placeholder: '用户名', label: '管理员'} as UiTextItem,\r\n            submit: {widget:'button', label: '添加', className: 'btn btn-primary'}\r\n        }\r\n    }\r\n    /*\r\n    private formRows:FormRow[] = [\r\n        {\r\n            label: '用户名',\r\n            field: {\r\n                type: 'string',\r\n                name: 'user',\r\n                required: true,\r\n                maxLength: 100,\r\n            },\r\n            face: {\r\n                type: 'string',\r\n                placeholder: '用户名',\r\n            }\r\n        },\r\n    ];\r\n    private schema:FormSchema = new FormSchema({\r\n        fields: [\r\n            {\r\n                type: 'string',\r\n                name: 'user',\r\n                placeholder: '用户名',\r\n                label: '邀请成员',\r\n                rules: ['required', 'maxlength:100']\r\n            },\r\n        ],\r\n        onSumit: this.onSendInvitation,\r\n        submitText: '邀请'\r\n    });\r\n    */\r\n    private onSendInvitation = async (name:string, context:Context): Promise<string> => {\r\n        let {isOwner, isAdmin} = this.props;\r\n        let user = context.form.data['user'];\r\n        let ret = await store.admins.addNew(user, isOwner?1:0, isAdmin?1:0);\r\n        if (ret !== undefined) {\r\n            nav.pop();\r\n            return;\r\n        }\r\n        return user + '没有关注小号';\r\n        /*\r\n        let msg = {a: 1, b: 'ddd'};\r\n        let toName = values['user'];\r\n        let userId = await mainApi.userId(toName);\r\n        if (userId === 0) {\r\n            this.form.formView.setError('user', '\\'' + toName +  '\\' 不存在');\r\n            return;\r\n        }\r\n        await mainApi.sendMessage(userId, 'unit-follow-invite', msg);\r\n        nav.replace(<Page header='完成' back=\"close\">\r\n            <Card>\r\n                <CardBody>\r\n                    <CardTitle>邀请成员</CardTitle>\r\n                    <CardText>已发送给{toName}，请等待确认。</CardText>\r\n                    <Button color='primary' onClick={()=>nav.back()}>完成</Button>\r\n                </CardBody>\r\n            </Card>\r\n        </Page>);\r\n        */\r\n    }\r\n    render() {\r\n        let {isOwner, isAdmin} = this.props;\r\n        let caption = isOwner? \"高管\" : \"管理员\";\r\n        return <Page header={'新增' + caption}>\r\n            <div className=\"container\">\r\n                <div className='my-4 text-info'>\r\n                    只有关注本小号的用户，才能成为{caption}\r\n                </div>\r\n                <Form schema={this.schema} uiSchema={this.uiSchema} onButtonClick={this.onSendInvitation}/>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n// <ValidForm formSchema={this.schema} />\r\n//<TonvaForm ref={f=>this.form=f} formRows={this.formRows} onSubmit={this.onSendInvitation} />\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page, Schema, UiSchema, ItemSchema, UiCheckItem, UiButton, ButtonSchema, Form, Context, Image} from 'tonva';\r\nimport {store} from '../store';\r\nimport { UnitAdmin } from '../model/index';\r\n//import {mainApi} from '../api';\r\n//, ValidForm, FormSchema, FormFields, Field\r\n\r\n@observer\r\nexport default class EditAdmin extends React.Component {\r\n    private onSubmit = async (name:string, context:Context) => {\r\n        let {isOwner, isAdmin} = context.form.data;\r\n        await store.admins.unitSetAdmin(isOwner, isAdmin);\r\n        nav.pop();\r\n    }\r\n    render() {\r\n        let {unit} = store;\r\n        let {isRoot, isOwner, isAdmin} = unit;\r\n        let unitAdmin = store.admins.cur;\r\n        let owner:ItemSchema = {name: 'isOwner', type: 'boolean'};\r\n        let admin:ItemSchema = {name: 'isAdmin', type: 'boolean'};\r\n        let submit:ButtonSchema = {name: 'submit', type: 'submit'};\r\n        let schema:ItemSchema[];\r\n        if (isRoot === 1) schema = [owner, admin, submit];\r\n        else if (isOwner === 1) schema = [admin, submit];\r\n        let data = {\r\n            isOwner: unitAdmin.isOwner,\r\n            isAdmin: unitAdmin.isAdmin,\r\n        };\r\n\r\n        let uiSchema = {\r\n            items: {\r\n                'isOwner': {widget: 'checkbox', label: '高管', trueValue:1, falseValue:0} as UiCheckItem,\r\n                'isAdmin': {widget: 'checkbox', label: '管理员', trueValue:1, falseValue:0} as UiCheckItem,\r\n                'submit': {widget: 'button', label: '提交', className: 'btn btn-primary'} as UiButton,\r\n            }\r\n        };\r\n\r\n        return <Page header='权限'>\r\n            <div className=\"px-3\">\r\n                <Fellow {...store.admins.cur} />\r\n                <Form schema={schema} uiSchema={uiSchema} formData={data} onButtonClick={this.onSubmit} />\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n\r\nconst Fellow = (props:UnitAdmin) => {\r\n    let {name, nick, icon} = props;\r\n    //<img className='w-75' src={icon || process.env.REACT_APP_DEFAULT_ICON} />\r\n    return <div>\r\n        <div className='d-flex my-4'>\r\n            <Image className=\"w-3c h-3c mr-3\" src={icon} />\r\n            <div className=\"\">\r\n                <h4 className='text-dark'>{name}</h4>\r\n                {nick && <h6><small className='text-secondary'>{nick}</small></h6>}\r\n            </div>\r\n        </div>\r\n        <hr className='mb-4' />\r\n    </div>;\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page, Image} from 'tonva';\r\nimport {UnitApps, UnitAdmin} from '../model';\r\nimport {store} from '../store';\r\nimport NewFellow from './NewFellow';\r\nimport EditAdmin from './EditAdmin';\r\nimport {LMR, Badge, List} from 'tonva';\r\n\r\n@observer\r\nexport default class AdministorsPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.admins.load();\r\n    }\r\n\r\n    onNewFellow() {\r\n        //nav.push(<NewFellow />);\r\n    }\r\n    onItemClick(ua:UnitAdmin) {\r\n        store.admins.cur = ua;\r\n        nav.push(<EditAdmin />);\r\n    }\r\n    private row = ({icon, name, nick}:UnitAdmin) => {\r\n        let content = nick?\r\n            <><b>{nick}</b> &nbsp; <small className=\"text-muted\">{name}</small></>\r\n            :\r\n            <b>{name}</b>;\r\n        let left = <Image className=\"w-2-5c h-2-5c\" src={icon} />; \r\n        return <LMR className=\"py-2 px-3 align-items-stretch\" left={left}>\r\n            <div className=\"px-3\">{content}</div>\r\n        </LMR>;\r\n    }\r\n\r\n    private onNewOwner = (evt: React.MouseEvent<HTMLAnchorElement>) => {\r\n        this.newAdmin(evt, true, false);\r\n    }\r\n\r\n    private onNewAdmin = (evt: React.MouseEvent<HTMLAnchorElement>) => {\r\n        this.newAdmin(evt, false, true);\r\n    }\r\n\r\n    private newAdmin(evt: React.MouseEvent<HTMLAnchorElement>, isOwner:boolean, isAdmin:boolean) {\r\n        evt.preventDefault();\r\n        nav.push(<NewFellow isOwner={isOwner} isAdmin={isAdmin} />);\r\n    } \r\n    render() {\r\n        //let n = nav;\r\n        //let me = n.local.user.get().id;\r\n        let {unit} = store;\r\n        if (unit === undefined) return;\r\n        let {owners, admins, fellows} = store.admins;\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.onNewFellow}>新增成员</button>;\r\n\r\n        let showOwners = false, showAdmins = false;\r\n        let ownersView, adminsView, fellowsView;\r\n        if (unit.isRoot === 1) {\r\n            showOwners = true;\r\n            showAdmins = true;\r\n        }\r\n        if (unit.isOwner === 1) showAdmins = true;\r\n        if (showOwners === true) {\r\n            let header = <LMR \r\n                className=\"px-3 py-1 small\"\r\n                left=\"高管\" \r\n                right={<a className=\"small\" href='#' onClick={this.onNewOwner}>新增</a>} />;\r\n            ownersView = <List \r\n                className=\"my-4\"\r\n                header={header} items={owners}\r\n                none=\"[无]\"\r\n                item={{onClick: this.onItemClick, render: this.row}}\r\n            />;\r\n        }\r\n        if (showAdmins === true) {\r\n            let header = <LMR \r\n                className=\"px-3 py-1 small\"\r\n                left=\"管理员\" \r\n                right={<a className=\"small\" href='#' onClick={this.onNewAdmin}>新增</a>} />;\r\n            adminsView = <List \r\n                className='my-4' \r\n                header={header} items={admins} \r\n                none='[无]'\r\n                item={{onClick: this.onItemClick, render: this.row}}\r\n            />;\r\n        }\r\n        return <Page header=\"管理员\" right={right}>\r\n            {ownersView}\r\n            {adminsView}\r\n            <div className=\"my-4 p-3\">\r\n                <div className=\"ml-2 mb-2\">说明</div>\r\n                <div className=\"\">\r\n                    <ul className=\"pl-2\">\r\n                        <li className=\"card-text\">管理组包括主人、高管、管理员</li>\r\n                        <li className=\"card-text\">小号主人可以增减高管</li>\r\n                        <li className=\"card-text\">高管可以增减管理员</li>\r\n                        <li className=\"card-text\">管理员可以管理小号，程序的开发，以及用户</li>\r\n                        <li className=\"card-text\">开发号高管可以增减编辑APP，UQ，Server，Service</li>\r\n                        <li className=\"card-text\">开发号管理员可以编译指定UQ，BUS</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {EasyDate} from 'tonva';\r\n\r\nexport interface IdDatesProps {\r\n    date_init: Date;\r\n    date_update: Date;\r\n}\r\n\r\nexport class IdDates extends React.Component<IdDatesProps> {\r\n    render() {\r\n        let {date_init, date_update} = this.props;\r\n        return <small className=\"text-muted\">\r\n            上次修改: <EasyDate date={date_update}/>\r\n            <i className=\"fa fa-fw\" />\r\n            创建: <EasyDate date={date_init}/>\r\n        </small>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\n\r\nexport function span(\r\n    isLink:boolean,\r\n    className:string, \r\n    onClick:(evt:React.MouseEventHandler<HTMLElement>)=>void,\r\n    content:any): JSX.Element\r\n{\r\n    let tag:string;\r\n    let props:any;\r\n    if (isLink === true) {\r\n        tag = 'a';\r\n        props = {\r\n            className: classNames(className, 'cursor-pointer'),\r\n            onClick: onClick,\r\n            href: '#',\r\n        }\r\n    }\r\n    else {\r\n        tag = 'span';\r\n        props = {\r\n            className: className,\r\n        }\r\n    }\r\n    return React.createElement(tag, props, content);\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {Prop, ListProp, Media, PropGrid} from 'tonva';\r\nimport {nav, Page}  from 'tonva';\r\nimport {store} from '../store';\r\nimport {span} from './span';\r\n\r\nexport interface UnitLinkProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class UnitSpan extends React.Component<UnitLinkProps> {\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<UnitInfo id={this.props.id} />);\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        if (id === undefined) return null;\r\n        let unit = store.cacheUnits.get(id);\r\n        let content;\r\n        let {name, nick, discription} = unit;\r\n        let disc = discription && '- ' + discription;\r\n        if (nick) {\r\n            content = <>{nick} &nbsp; <small className=\"text-muted\">{name} {disc}</small></>;\r\n        }\r\n        else if (name) {\r\n            content = <>{name} &nbsp; <small className=\"text-muted\">{disc}</small></>;\r\n        }\r\n        else {\r\n            content = id;\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\n@observer\r\nexport class UnitName extends React.Component<UnitLinkProps> {\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        if (id === undefined) return null;\r\n        let unit = store.cacheUnits.get(id);\r\n        let {name} = unit;\r\n        return <>{name}</>;\r\n    }\r\n}\r\n\r\nclass UnitInfo extends React.Component<UnitLinkProps> {\r\n    private rows:Prop[];\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        let unit = store.cacheUnits.get(this.props.id);\r\n        let {name, nick, icon, discription} = unit;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={icon} main={name} discription={discription} />},\r\n            '',\r\n        ];\r\n        return <Page header={'小号 - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n","export const appIcon = process.env.REACT_APP_ICON;\r\nexport const appItemIcon = process.env.REACT_APP_ITEM_ICON;\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport * as classNames from 'classnames';\r\nimport {Prop, Media, PropGrid} from 'tonva';\r\nimport {nav, Page}  from 'tonva';\r\nimport {appIcon, appItemIcon} from 'consts';\r\nimport {store} from 'store';\r\nimport {IdDates} from './idDates';\r\nimport {span} from './span';\r\nimport {UnitSpan} from './unitSpan';\r\n\r\nexport interface UqLinkProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class UqSpan extends React.Component<UqLinkProps> {\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<UqInfo id={this.props.id} />);\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, className, isLink} = this.props;\r\n        let api = store.cacheUqs.get(id);\r\n        let content;\r\n        if (api === null) {\r\n            content = id;\r\n        }\r\n        else {\r\n            let {name, discription} = api;\r\n            let disc = discription && '- ' + discription;\r\n            if (name !== undefined) {\r\n                content = <React.Fragment>{name} &nbsp; <small className=\"text-muted\">{disc}</small></React.Fragment>;\r\n            }\r\n            else {\r\n                content = id;\r\n            }\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\n@observer\r\nclass UqInfo extends React.Component<UqLinkProps> {\r\n    private rows:Prop[];\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        let uq = store.cacheUqs.get(this.props.id);\r\n        let {name, discription, unit, date_init, date_update} = uq;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={name} discription={disp} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n        ];\r\n        return <Page header={'UQ - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport {Prop, ListProp, Media, PropGrid} from 'tonva';\r\nimport {nav, Page}  from 'tonva';\r\nimport {store} from '../store';\r\nimport {devApi} from '../api';\r\nimport {span} from './span';\r\nimport {IdDates} from './idDates';\r\nimport {UnitSpan} from './unitSpan';\r\n\r\nexport interface AppSpanProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class AppSpan extends React.Component<AppSpanProps> {\r\n    /*\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.onClick = this.onClick.bind(this);\r\n    }\r\n    componentWillMount() {\r\n        let {id} = this.props;\r\n        store.cacheApps.get(id);\r\n    }\r\n    */\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<AppInfo id={this.props.id} />)\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        let app = store.cacheApps.get(id);\r\n        let content;\r\n        if (app === null) {\r\n            content = id;\r\n        }\r\n        else {\r\n            let {name, icon, discription} = app;\r\n            let isPublic = app.public;\r\n            let disc = discription && '- ' + discription;\r\n            if (name !== undefined) {\r\n                content = <React.Fragment>{name} &nbsp; <small className=\"text-muted\">{disc}</small></React.Fragment>;\r\n            }\r\n            else {\r\n                content = id;\r\n            }\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\n\r\n@observer\r\nclass AppInfo extends React.Component<AppSpanProps> {\r\n    private rows:Prop[];\r\n    @observable private apis:ListProp = {\r\n        label: '关联API', type: 'list', list: undefined, row: AppRow\r\n    };\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    async componentDidMount() {\r\n        this.apis.list = await devApi.loadAppUqs(this.props.id);\r\n    }\r\n    render() {\r\n        let app = store.cacheApps.get(this.props.id);\r\n        let {unit, name, discription, icon, date_init, date_update} = app;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={icon} main={name} discription={disp} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            this.apis,\r\n        ];\r\n        return <Page header={'APP - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass AppRow extends React.Component<any> {\r\n    render() {\r\n        let {name, discription} = this.props;\r\n        let disp;\r\n        if (discription) disp = <div className=\"small text-muted\">{discription}</div>;\r\n        return <div className='form-control-plaintext'>\r\n            <div>{name}</div>\r\n            {disp}\r\n        </div>\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport * as classNames from 'classnames';\r\nimport {Prop, ListProp, Media, PropGrid} from 'tonva';\r\nimport {nav, Page}  from 'tonva';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {store} from '../store';\r\nimport {DevModel} from '../model';\r\nimport {devApi} from '../api';\r\nimport {span} from './span';\r\nimport {IdDates} from './idDates';\r\nimport {UnitSpan} from './unitSpan';\r\n\r\nexport interface ServerSpanProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class ServerSpan extends React.Component<ServerSpanProps> {\r\n    /*\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.onClick = this.onClick.bind(this);\r\n    }\r\n    componentWillMount() {\r\n        let {id} = this.props;\r\n        store.cacheServers.get(id);\r\n    }\r\n    */\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<ServerInfo id={this.props.id} />)\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        let server = store.cacheServers.get(id);\r\n        let content;\r\n        if (server === null) {\r\n            content = id;\r\n        }\r\n        else {\r\n            let {cloud, ip, discription} = server;\r\n            if (discription !== undefined) {\r\n                content = <React.Fragment>{discription} &nbsp; <small className=\"text-muted\">{ip}</small></React.Fragment>;\r\n            }\r\n            else {\r\n                content = id;\r\n            }\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\nclass ServerInfo extends React.Component<ServerSpanProps> {\r\n    private rows:Prop[];\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        let server = store.cacheServers.get(this.props.id);\r\n        let {discription, cloud, ip, unit, date_init, date_update} = server;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={discription} discription={ip} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            {type: 'string', label: '云服务', name: 'cloud'},\r\n        ];\r\n        return <Page header={'服务器 - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {nav, Page} from 'tonva';\r\n\r\ninterface StringValueEditProps {\r\n    title: string;\r\n    onChanged:(value:any, orgValue:any)=>Promise<string|void>;\r\n    value?: any;\r\n    buttonText?: string;\r\n    info?: string;\r\n}\r\ninterface StringValueEditState {\r\n    disabled: boolean;\r\n    error?: string;\r\n}\r\n\r\nexport class StringValueEdit extends React.Component<StringValueEditProps, StringValueEditState> {\r\n    //private input:HTMLInputElement;\r\n    protected value: string;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            disabled: true,\r\n        };\r\n    }\r\n    /*\r\n    private ref = (input:HTMLInputElement) => {\r\n        if (!input) return;\r\n        input.value = this.props.value || '';\r\n        this.input = input;\r\n    }*/\r\n    private onChange = (evt:React.FormEvent<HTMLInputElement>) => {\r\n        let val = this.props.value;\r\n        let org = val && val.trim();\r\n        this.value = evt.currentTarget.value.trim();\r\n        this.setState({\r\n            disabled: org === this.value\r\n        });\r\n        \r\n    }\r\n    protected onSubmit = async () => {\r\n        let val = this.props.value;\r\n        let org = val && val.trim();\r\n        let v = this.value; // this.input.value.trim();\r\n        let onChanged = this.props.onChanged;\r\n        if (onChanged !== undefined) {\r\n            let ret = await onChanged(v, org);\r\n            if (typeof ret === 'string') {\r\n                this.setState({error: ret});\r\n                return;\r\n            }\r\n            nav.pop();\r\n        }\r\n    }\r\n    protected renderControl() {\r\n        return <input className=\"form-control w-100\" type=\"text\"\r\n            // ref={this.ref}\r\n            defaultValue={this.props.value}\r\n            onChange={this.onChange} />\r\n    }\r\n    render() {\r\n        let {title, onChanged, buttonText, info, value} = this.props;\r\n        let {disabled, error} = this.state;\r\n        let right = <button\r\n            className=\"btn btn-success btn-sm\"\r\n            disabled={disabled}\r\n            onClick={this.onSubmit}\r\n        >\r\n            {buttonText||'保存'}\r\n        </button>;\r\n        let errorDiv;\r\n        if (error !== undefined) errorDiv = <div className='text-danger'>{error}</div>;\r\n        return <Page header={title} right={right}>\r\n            <div className=\"my-4 mx-3\">\r\n                {this.renderControl()}\r\n                {errorDiv}\r\n                <small className=\"d-block mt-2 text-muted\">{info}</small>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n\r\nexport class TextValueEdit extends StringValueEdit {\r\n    /*\r\n    private textArea:HTMLTextAreaElement;\r\n    private refTextArea = (textArea:HTMLTextAreaElement) => {\r\n        if (!textArea) return;\r\n        textArea.value = this.props.value || '';\r\n        this.textArea = textArea;\r\n    }\r\n    */\r\n    private onTextAreaChange = (evt:React.FormEvent<HTMLTextAreaElement>) => {\r\n        let val = this.props.value;\r\n        let org = val && val.trim();\r\n        this.value = evt.currentTarget.value.trim();\r\n        this.setState({\r\n            disabled: org === this.value\r\n        })\r\n    }\r\n    protected renderControl() {\r\n        return <textarea className=\"form-control w-100\" rows={8}\r\n            // ref={this.refTextArea}\r\n            defaultValue={this.props.value}\r\n            onChange={this.onTextAreaChange} />\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { nav, Page } from 'tonva';\r\nimport { SearchBox, List } from 'tonva';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport interface IdPickPageProps {\r\n    caption: string;\r\n    searchPlaceHolder?: string;\r\n    candidateItems: ((params:any, key:string) => Promise<any[]>) | any[];\r\n    moreCandidates: () => Promise<void>;\r\n    row: (item:any, index:number) => JSX.Element;\r\n    idFromItem: (item:any) => number;\r\n    resolve: (item?: any) => void;\r\n    params: any;\r\n}\r\n\r\n@observer\r\nexport class IdPickPage extends React.Component<IdPickPageProps> {\r\n    @observable private items:any[];\r\n\r\n    async componentDidMount() {\r\n        let {candidateItems, params} = this.props;\r\n        this.items = Array.isArray(candidateItems)? \r\n            candidateItems \r\n            : await candidateItems(params, '');\r\n    }\r\n    private itemClick = (item:any):Promise<void> => {\r\n        let {resolve, idFromItem} = this.props;\r\n        resolve(idFromItem(item));\r\n        nav.pop();\r\n        return;\r\n    }\r\n    private onSearch = async (key: string):Promise<void> => {\r\n        let {candidateItems, params} = this.props;\r\n        if (typeof candidateItems === 'function') {\r\n            let ret = await candidateItems(params, key);\r\n            this.items = ret;\r\n        }\r\n        return;\r\n    }\r\n    render() {\r\n        let {caption, row, searchPlaceHolder} = this.props;\r\n        return <Page header={caption} back=\"close\">\r\n            <div className=\"container\">\r\n                <SearchBox className=\"my-2\" \r\n                    onSearch={this.onSearch} \r\n                    placeholder={searchPlaceHolder}\r\n                    maxLength={100} />\r\n            </div>\r\n            <List items={this.items} item={{onClick:this.itemClick, render:row}} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport {SearchBox, Media, List, LMR, Badge, Prop, PropGrid, FA} from 'tonva';\r\nimport {nav, Page, PageItems} from 'tonva';\r\nimport {IdDates, UnitSpan} from '../tools';\r\nimport {UnitApp, DevModel} from '../model';\r\nimport {store} from '../store';\r\nimport { devApi } from 'api';\r\n\r\n@observer\r\nexport class Info extends React.Component<{app:UnitApp, appActed?:(appId:number, inUnit:number)=>void}> {\r\n    @observable private uqAccesses: any[];\r\n    async componentWillMount() {\r\n        this.uqAccesses = await devApi.loadAppUqs(this.props.app.id);\r\n    }\r\n\r\n    private renderUqRow = (uqAccess:any, index:number):JSX.Element => {\r\n        let {name, owner, unit, discription} = uqAccess;\r\n        return <LMR className=\"py-2\" right={<small className=\"text-muted\">{discription}</small>}>\r\n            {owner} / {name}\r\n        </LMR>;\r\n    }\r\n\r\n    private act = async () => {\r\n        let {app, appActed} = this.props;\r\n        let {id, unit, inUnit} = app;\r\n        let newInUnit:number = 1;\r\n        if (inUnit === 0) {\r\n            let ret = await store.restoreUnitApp(id);\r\n            if (ret <= 0) alert('app 或者 uq 没有定义 service');\r\n        }\r\n        else if (inUnit === 1) {\r\n            await store.stopUnitApp(id);\r\n            newInUnit = 0;\r\n        }\r\n        else {\r\n            let newApp:UnitApp = _.clone(app);\r\n            newApp.id = id;\r\n            newApp.inUnit = 1;\r\n            let ret = await store.addUnitApp(newApp);\r\n            if (ret <= 0) alert('app 或者 uq 没有定义 service');\r\n        }\r\n        if (appActed !== undefined) {\r\n            appActed(id, newInUnit);\r\n        }\r\n        nav.pop();\r\n    }\r\n    render() {\r\n        let {unit, name, discription, icon, inUnit, date_init, date_update} = this.props.app;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let faName:string, text:string, color:string;\r\n        if (inUnit === 1) {\r\n            faName = 'ban';\r\n            text = '停用APP';\r\n            color = 'btn-danger';\r\n        }\r\n        else if (inUnit === 0) {\r\n            faName = 'refresh';\r\n            text = '恢复APP';\r\n            color = 'btn-success';\r\n        }\r\n        else {\r\n            faName = 'plus';\r\n            text = '启用APP';\r\n            color = 'btn-primary';\r\n        }\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <Media icon={icon} main={name} discription={disp} />\r\n            },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                label: '开发号', \r\n                component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div>\r\n            },\r\n            {\r\n                type: 'component', \r\n                label: '关联UQ', \r\n                component: <List className=\"w-100\" items={this.uqAccesses} item={{render: this.renderUqRow}} />\r\n            },\r\n            '',\r\n            '',\r\n            {\r\n                type: 'component', \r\n                bk: '', \r\n                component: <button className={classNames('btn', 'w-100', color)} onClick={this.act}>\r\n                    <FA name={faName} size=\"lg\" /> {text}\r\n                </button>\r\n            },\r\n        ];\r\n        return <div>\r\n            <PropGrid rows={rows} values={this.props} />\r\n        </div>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {IObservableArray} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport {SearchBox, Media, List, LMR, Badge, Prop, PropGrid} from 'tonva';\r\nimport {nav, Page, PageItems, Image} from 'tonva';\r\nimport {mainApi} from '../api';\r\nimport {store} from '../store';\r\nimport {UnitApp} from '../model';\r\nimport {Info} from './info';\r\n\r\nclass PageApps extends PageItems<UnitApp> {\r\n    private unitId:number;\r\n    constructor(unitId:number) {\r\n        super();\r\n        this.unitId = unitId;\r\n    }\r\n    protected async load():Promise<UnitApp[]> {\r\n        return await mainApi.searchApp(this.unitId, this.param, this.pageStart, this.pageSize);\r\n    }\r\n    protected setPageStart(item:UnitApp) {\r\n        if (item === undefined)\r\n            this.pageStart = 0;\r\n        else\r\n            this.pageStart = item.id;\r\n    }\r\n}\r\n\r\n@observer\r\nexport class NewApp extends React.Component {\r\n    private apps: PageApps;\r\n    constructor(props) {\r\n        super(props);\r\n        this.apps = new PageApps(store.unit.id);\r\n    }\r\n    private onSearch = async (key:string) => {\r\n        await this.apps.first(key);\r\n    }\r\n    private appClick = (app:UnitApp) => {\r\n        nav.push(<Page header=\"App详细信息\">\r\n            <Info app={app} appActed={this.appActed}/>\r\n        </Page>);\r\n    }\r\n    private appActed = (appId:number, inUnit:number) => {\r\n        let apps = this.apps.items as IObservableArray<UnitApp>; //.replace .find(v => v.id === appId);\r\n        let app = apps.find(v => v.id === appId);\r\n        app.inUnit = inUnit;\r\n        apps.replace([app]);\r\n    }\r\n    private renderApp(app:UnitApp):JSX.Element {\r\n        let {name, discription, icon, inUnit} = app;\r\n        let right;\r\n        if (inUnit === 1)\r\n            right = <small>已启用</small>;\r\n        else if (inUnit === 0)\r\n            right = <small>已停用</small>;\r\n        return <LMR className=\"px-3 py-2\"\r\n            left={<Badge><Image src={icon} /></Badge>}\r\n            right={right}>\r\n            <div className=\"px-3\">\r\n                <div>{name}</div>\r\n                <small className=\"text-muted\">{discription}</small>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n    render() {\r\n        let items = this.apps.items;\r\n        let center = <SearchBox onSearch={this.onSearch} \r\n            className=\"w-100 mx-1\" \r\n            placeholder=\"搜索App\" \r\n            maxLength={100} />;\r\n        return <Page header={center}>\r\n            <List\r\n                items={items}\r\n                item={{onClick:this.appClick, render:this.renderApp}}\r\n                before=\"搜索App名字\" />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, FA, LMR, Badge} from 'tonva';\r\nimport {nav, Page, Image} from 'tonva';\r\nimport {store} from '../store';\r\nimport {NewApp} from './new';\r\nimport {UnitApp} from '../model';\r\nimport {Info} from './info';\r\n\r\n@observer\r\nexport default class AppsPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadApps();\r\n    }\r\n    private itemRender(app:UnitApp, index:number) {\r\n        let {name, discription, icon, inUnit} = app;\r\n        let ban;\r\n        if (inUnit === 0)\r\n            ban = <FA className=\"text-danger\" name='ban' />;\r\n        return <LMR className=\"px-3 py-1\"\r\n            left={<Badge><Image src={icon} /></Badge>}\r\n            right={ban}>\r\n            <div className=\"px-3\">\r\n                <div>{name}</div>\r\n                <small className=\"text-muted\">{discription}</small>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n    private appClick(app:UnitApp) {\r\n        nav.push(<Page header=\"App详细信息\">\r\n            <Info app={app} />\r\n        </Page>);\r\n    }\r\n    private newItem() {\r\n        nav.push(<NewApp {...this.props} />);\r\n    }\r\n    render() {\r\n        let right = <button \r\n            className='btn btn-secondary btn-sm' \r\n            onClick={()=>this.newItem()}><FA name=\"plus\" /></button>;\r\n        return <Page header=\"启停App\" right={right}>\r\n            <List items={store.apps} item={{render: this.itemRender, onClick: this.appClick}} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {TonvaForm, SubmitResult, FormRow} from 'tonva-form';\r\nimport {nav, Page, ItemSchema, StringSchema, UiSchema, Form, Context} from 'tonva';\r\nimport {store} from '../store';\r\n\r\nexport class NewRole extends React.Component {\r\n    /*\r\n    private form:TonvaForm;\r\n    private formRows:FormRow[] = [\r\n        {\r\n            label: '名称', \r\n            field: {name: 'name', type: 'string', maxLength: 50, required: true},\r\n        },\r\n        {\r\n            label: '描述',\r\n            field: {name: 'discription', type: 'string', maxLength: 250},\r\n            face: {type: 'textarea'}\r\n        },\r\n    ];*/\r\n    private schema: ItemSchema[] = [\r\n        {name: 'name', type: 'string', maxLength: 5, required: true} as StringSchema,\r\n        {name: 'discription', type: 'string', maxLength: 250},\r\n        {name: 'submit', type: 'button'},\r\n    ];\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            name: {widget: 'text', label: '名称'},\r\n            discription: {widget: 'textarea', label: '描述'},\r\n            submit: {widget:'button', label: '提交'}\r\n        }\r\n    }\r\n    private onSubmit = async (buttonName:string, context: Context):Promise<SubmitResult> => {\r\n        //let {name, discription} = values;\r\n        let {name, discription} = this.context.formData;\r\n        let id = await store.unitAddRole(name, discription);\r\n        if (id <= 0) {\r\n            this.context.setError('name', '角色名 ' + name + ' 已经存在');\r\n            return;\r\n        }\r\n        nav.pop();\r\n        return;\r\n    }\r\n    render() {\r\n        return <Page header=\"新建角色\">\r\n            <Form className=\"m-3\" \r\n                schema={this.schema} uiSchema={this.uiSchema} \r\n                formData={{}}\r\n                onButtonClick={this.onSubmit} />\r\n        </Page>;\r\n    }\r\n    /*\r\n    <TonvaForm className=\"m-3\" ref={tf => this.form = tf} \r\n    formRows={this.formRows} \r\n    onSubmit={this.onSubmit} />\r\n    */\r\n}\r\n","import * as React from 'react';\r\nimport {List, LMR} from 'tonva';\r\nimport {nav, Page} from 'tonva';\r\nimport {Role, UnitApp} from '../model';\r\nimport {store} from '../store';\r\nimport {mainApi} from '../api';\r\n\r\ninterface Props {\r\n    role: Role;\r\n}\r\ninterface State {\r\n    apps: UnitApp[]\r\n}\r\nexport class RoleApps extends React.Component<Props, State> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {apps:undefined};\r\n    }\r\n    async componentDidMount() {\r\n        let ret = await mainApi.unitRoleApps(store.unit.id, this.props.role.id);\r\n        this.setState({\r\n            apps: ret,\r\n        });\r\n    }\r\n    private renderRoleApp(app:UnitApp, index:number) {\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={app.name}\r\n                right={<small className=\"text-muted\">{app.discription}</small>} />\r\n    }\r\n    render() {\r\n        let {role} = this.props;\r\n        return <Page header={role.name + ' - 可用APP'}>\r\n            <List\r\n                items={this.state.apps}\r\n                item={{render: this.renderRoleApp}}\r\n                none=\"没有APP\" />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, LMR, FA, Media, Muted, PropGrid, Prop} from 'tonva';\r\nimport {nav, Page} from 'tonva';\r\nimport {Role} from '../model';\r\nimport {store} from '../store';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {StringValueEdit} from '../tools';\r\nimport {RoleApps} from './roleApps';\r\n\r\n@observer\r\nexport class MemberPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadRoles();\r\n        await store.loadMemberRoles();\r\n    }\r\n    async onAssigned(value:any, orgValue:any):Promise<void> {\r\n        await store.unitAssignMember(value);\r\n    }\r\n    private renderMemberRole = (role:Role) => {\r\n        let {name, discription} = role;\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={name}\r\n                right={<Muted>{discription}</Muted>} />\r\n    }\r\n    private roleClick(role:Role) {\r\n        nav.push(<RoleApps role={role} />);\r\n    }\r\n    private setRole = () => {\r\n        nav.push(<SetRole />);\r\n    }\r\n    render() {\r\n        let roleUser = store.roleMember;\r\n        let {nick, name, assigned, icon} = roleUser;\r\n        let disp = <div>\r\n            <div><Muted>唯一名: </Muted> &nbsp; {name}</div>\r\n            <div><Muted>昵称: </Muted> &nbsp; {nick||<Muted>[无]</Muted>}</div>\r\n        </div>;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component',\r\n                component: <Media icon={icon||appIcon} main={roleUser.assigned||nick||name} discription={disp} />\r\n            },\r\n            '',\r\n            {\r\n                label: '备注名',\r\n                type: 'string',\r\n                name: 'assigned',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"修改备注名\"\r\n                    value={roleUser.assigned}\r\n                    onChanged={this.onAssigned} \r\n                    info=\"加一个备注，便于甄别用户\" />),\r\n            },\r\n            '',\r\n        ];\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.setRole}>修改角色</button>;\r\n        return <Page header=\"用户详情\" right={right}>\r\n            <PropGrid rows={rows} values={roleUser} />\r\n            <div className=\"px-3 py-1\"><small><FA name=\"angle-double-right\" /> 所属角色</small></div>\r\n            <List\r\n                items={store.memberRoles} \r\n                item={{render: this.renderMemberRole, onClick: this.roleClick}} />\r\n        </Page>\r\n    }\r\n}\r\n\r\n@observer\r\nclass SetRole extends React.Component {\r\n    private list:List;\r\n    constructor(props) {\r\n        super(props);\r\n        this.submit = this.submit.bind(this);\r\n    }\r\n    async componentDidMount() {\r\n        await store.loadRoles();\r\n        await store.loadMemberRoles();\r\n    }\r\n    private renderRole(role:Role, index:number) {\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={role.name}\r\n                right={<small className=\"text-muted\">{role.discription}</small>} />\r\n    }\r\n    private roleSelect(role:Role, isSelected: boolean, anySelected: boolean) {\r\n    }\r\n    private async submit() {\r\n        await store.setMemberRoles(this.list.selectedItems);\r\n        nav.pop();\r\n    }\r\n    render() {\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.submit}>保存</button>;\r\n        let roles = store.roles;\r\n        let memberRoles = store.memberRoles;\r\n        return <Page header=\"修改角色\" right={right}>\r\n            <List \r\n                ref={list=>this.list=list}\r\n                items={roles}\r\n                selectedItems={memberRoles}\r\n                compare={(role:Role, selectRole:Role)=>role.id === selectRole.id}\r\n                item={{render: this.renderRole, onSelect: this.roleSelect}} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, LMR, Badge, FA, Muted, SearchBox} from 'tonva';\r\nimport {nav, Page, Image} from 'tonva';\r\nimport {Role, RoleMember} from '../model';\r\nimport {store} from '../store';\r\nimport {mainApi} from '../api';\r\nimport {MemberPage} from './memberPage';\r\n\r\n@observer\r\nexport class MembersPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadMembers();\r\n    }\r\n    private renderMember(member:RoleMember, index:number):JSX.Element {\r\n        return <MemberRow {...member} />;\r\n    }\r\n    private userClick(user:RoleMember) {\r\n        store.setRoleUser(user);\r\n        nav.push(<MemberPage />);\r\n    }\r\n    private onSearch() {\r\n        let role = store.role;\r\n        let roleId = role === undefined? 0:role.id;\r\n        nav.push(<MemberSearch roleId={roleId} />);\r\n    }\r\n    render() {\r\n        let right = <button className=\"btn btn-sm\" onClick={this.onSearch}><FA name=\"search\" /></button>;\r\n        return <Page header=\"用户\" right={right}>\r\n            <List items={store.roleMembers} item={{render: this.renderMember, onClick: this.userClick}} />\r\n        </Page>\r\n    }\r\n}\r\n\r\nconst MemberRow = (member:RoleMember) => {\r\n    let {nick, name, assigned, icon} = member;\r\n    let content;\r\n    if (assigned)\r\n        content = <><div><b>{assigned}</b> <Muted>{nick}</Muted></div><Muted>{name}</Muted></>;\r\n    else if (nick)\r\n        content = <><div><b>{nick}</b></div><Muted>{name}</Muted></>;\r\n    else\r\n        content = <div><b>{name}</b></div>;\r\n    return <LMR className=\"py-2 px-3 align-items-stretch\"\r\n        left={<Badge size=\"sm\"><Image src={icon} /></Badge>}>\r\n        <div className=\"px-3\">{content}</div>\r\n    </LMR>;\r\n};\r\n\r\ninterface SearchProps {\r\n    roleId: number;\r\n}\r\ninterface SearchState {\r\n    members: RoleMember[];\r\n}\r\nexport class MemberSearch extends React.Component<SearchProps, SearchState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.state = {\r\n            members: null,\r\n        }\r\n    }\r\n    private async onSearch(key:string) {\r\n        let ret = await mainApi.unitMembers(store.unit.id, this.props.roleId, key, 0, 100);\r\n        this.setState({members: ret});\r\n    }\r\n    private renderMember(member:RoleMember, index:number):JSX.Element {\r\n        return <MemberRow {...member} />;\r\n    }\r\n    private userClick(user:RoleMember) {\r\n        store.setRoleUser(user);\r\n        nav.push(<MemberPage />);\r\n    }\r\n    render() {\r\n        let header = <SearchBox className=\"w-100 mx-1\" \r\n            onSearch={this.onSearch} \r\n            maxLength={100}\r\n            placeholder=\"搜索用户\" />;\r\n        return <Page header={header}>\r\n            <List\r\n                items={this.state.members}\r\n                item={{render: this.renderMember, onClick: this.userClick}} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, Media, LMR, FA, PropGrid, Prop} from 'tonva';\r\nimport {nav, Page} from 'tonva';\r\nimport {StringValueEdit} from '../tools';\r\nimport {Role, UnitApp} from '../model';\r\nimport {store} from '../store';\r\nimport {MembersPage} from './membersPage';\r\n\r\n@observer\r\nexport class RolePage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadApps();\r\n        await store.loadRoleApps();\r\n    }\r\n    private editRole() {\r\n        nav.push(<EditRole />);\r\n    }\r\n    private renderRoleApp = (app:UnitApp, index:number) => {\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={app.name}\r\n                right={<small className=\"text-muted\">{app.discription}</small>} />\r\n    }\r\n    private roleAppClick = (app:UnitApp) => {\r\n        nav.push(<RoleApps />);\r\n    }\r\n    private addRoleApp() {\r\n        nav.push(<RoleApps />);\r\n    }\r\n    private members() {\r\n        nav.push(<MembersPage />);\r\n    }\r\n    render() {\r\n        let {name, discription, count} = store.role;\r\n        let onMembersClick, membersLeft, membersRight;\r\n        if (count===undefined || count===null || count===0) {\r\n            membersLeft = <small className=\"text-muted\">无用户</small>;\r\n        }\r\n        else {\r\n            membersLeft = `共有 ${count} 用户`;\r\n            membersRight = <div><FA name=\"chevron-right\" /></div>;\r\n            onMembersClick = this.members;\r\n        }\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <Media icon={undefined} main={name} discription={discription} />,\r\n                onClick: this.editRole,\r\n            },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <LMR className=\"py-2\" left={membersLeft} right={membersRight} />,\r\n                onClick: onMembersClick,\r\n            },\r\n            '=',\r\n        ];\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={()=>this.addRoleApp()}><FA name=\"plus\" /> APP</button>;\r\n        return <Page header=\"角色\" right={right}>\r\n            <PropGrid rows={rows} values={{}} />\r\n            <div className=\"px-3 py-1\"><small><FA name=\"angle-double-right\" /> 可用APP列表</small></div>\r\n            <List\r\n                items={store.roleApps} \r\n                item={{render: this.renderRoleApp, onClick:this.roleAppClick}}\r\n                none={<small className=\"text-muted px-3 py-1\">没有APP, 点击右上角按钮选择APP</small>} />\r\n        </Page>\r\n    }\r\n}\r\n\r\n@observer\r\nclass EditRole extends React.Component {\r\n    async onNameChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.roleChangeProp('name', value);\r\n    }\r\n    async onDiscriptionChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.roleChangeProp('discription', value);\r\n    }\r\n    render() {\r\n        let role = store.role;\r\n        let {id} = role;\r\n        let isSysRole = id === 1 || id === 2;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                label: '名称', \r\n                type: 'string',\r\n                name: 'name', \r\n                onClick: isSysRole? undefined : ()=>nav.push(<StringValueEdit \r\n                    title=\"修改名称\"\r\n                    value={role.name}\r\n                    onChanged={this.onNameChanged} \r\n                    info=\"好的名字便于理解\" />)\r\n            },\r\n            {\r\n                label: '描述',\r\n                type: 'string',\r\n                name: 'discription',\r\n                onClick: isSysRole? undefined : ()=>nav.push(<StringValueEdit \r\n                    title=\"修改描述\"\r\n                    value={role.discription}\r\n                    onChanged={this.onDiscriptionChanged} \r\n                    info=\"对角色做一个说明\" />)\r\n            },\r\n        ];\r\n        return <Page header=\"修改角色信息\">\r\n            <PropGrid rows={rows} values={role} alignValue=\"right\" />\r\n        </Page>;\r\n    }\r\n}\r\n\r\n@observer\r\nclass RoleApps extends React.Component {\r\n    private list:List;\r\n    constructor(props) {\r\n        super(props);\r\n        this.submit = this.submit.bind(this);\r\n    }\r\n    async componentDidMount() {\r\n        await store.loadApps();\r\n        await store.loadRoleApps();\r\n    }\r\n    private renderApp(app:UnitApp, index:number) {\r\n        return <LMR className=\"py-1 px-2 align-items-center\"\r\n                left={app.name}\r\n                right={<small className=\"text-muted\">{app.discription}</small>} />\r\n    }\r\n    private appSelect(app:UnitApp, isSelected: boolean, anySelected: boolean) {\r\n\r\n    }\r\n    private async submit() {\r\n        await store.setRoleApps(this.list.selectedItems);\r\n        nav.pop();\r\n    }\r\n    render() {\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.submit}>保存</button>;\r\n        let apps = store.apps;\r\n        let roleApps = store.roleApps;\r\n        return <Page header=\"选择APP\" right={right}>\r\n            <List \r\n                ref={list=>this.list=list}\r\n                items={apps}\r\n                selectedItems={roleApps}\r\n                item={{render: this.renderApp, onSelect: this.appSelect}} />\r\n        </Page>;\r\n    }\r\n}","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {List, LMR, FA, Muted} from 'tonva';\r\nimport {nav, Page} from 'tonva';\r\nimport {Role} from '../model';\r\nimport {store} from '../store';\r\nimport {NewRole} from './newRole';\r\nimport {RolePage} from './rolePage';\r\nimport {MembersPage} from './membersPage';\r\n\r\nconst midClassName = classNames('d-flex', 'h-100', 'align-items-center', 'px-5', 'small', 'text-muted');\r\n\r\n@observer\r\nexport class Members extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadRoles();\r\n    }\r\n    private renderRole = (role:Role, index:number) => {\r\n        let {name, discription, count} = role;\r\n        return <LMR\r\n            className=\"px-3 py-2\" \r\n            left={name}\r\n            right={String(count || '')}>\r\n            <div className={midClassName}>\r\n                {discription}\r\n            </div>\r\n        </LMR>;\r\n    }\r\n    private roleClick = (role:Role) => {\r\n        store.setRole(role);\r\n        nav.push(<RolePage />)\r\n    }\r\n    private newRole = (evt: React.MouseEvent<HTMLAnchorElement>) => {\r\n        evt.preventDefault();\r\n        nav.push(<NewRole />);\r\n    }\r\n    private allUsersClick = () => {\r\n        store.setRole(undefined);\r\n        nav.push(<MembersPage />);\r\n    }\r\n    render() {\r\n        let right = <a className=\"small\" href='#' onClick={this.newRole}>新增</a>;\r\n        let header = <LMR className=\"px-3 small bg-light\" left=\"角色\" right={right} />;\r\n        return <Page header=\"用户角色\">\r\n            <LMR\r\n                className=\"my-3 px-3 py-2 bg-white\" \r\n                left={'用户'}\r\n                right={String(store.memberCount)}\r\n                onClick={this.allUsersClick}>\r\n                <div className={midClassName}>\r\n                    设置用户角色\r\n                </div>\r\n            </LMR>\r\n            <List\r\n                header={header}\r\n                items={store.roles}\r\n                none=\"[无]\"\r\n                item={{render:this.renderRole, onClick:this.roleClick}} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { AppController } from '.';\r\nimport { VPage, nav, Page, ItemSchema, UiSchema, StringSchema, BoolSchema, \r\n    UiTextItem, UiTextAreaItem, UiCheckItem, Form, \r\n    ButtonSchema, Context, ImageSchema, UiImageItem, IdSchema, UiIdItem } from 'tonva';\r\nimport { createIdPick, IdPickProps } from 'createIdPick';\r\nimport { DevModel } from 'model';\r\nimport { store } from 'store';\r\nimport { IdPickPage, ServerSpan } from '../../tools';\r\nimport { observer } from 'mobx-react';\r\n\r\nconst ServerCaption = (item:DevModel.Server) => {\r\n    let {discription, cloud, ip} = item;\r\n    return <>{discription} {cloud} {ip}</>;\r\n}\r\nconst idPickServerProps: IdPickProps = {\r\n    caption: '选择服务器',\r\n    searchPlaceHolder: '搜索服务器',\r\n    candidateItems: async (params:any, key:string) => {\r\n        await store.dev.searchServer.first(key);\r\n        return store.dev.searchServer.items;\r\n    },\r\n    moreCandidates: async () => {\r\n        await store.dev.searchServer.more();\r\n    },\r\n    row: (item:DevModel.Server, index:number) => {\r\n        return <div className=\"px-3 py-2\"><ServerCaption {...item} /></div>;\r\n    },\r\n};\r\n\r\nconst schema:ItemSchema[] = [\r\n    {name: 'name', type: 'string', maxLength: 100, required: true} as StringSchema,\r\n    {name: 'caption', type: 'string', maxLength: 100} as StringSchema,\r\n    {name: 'discription', type: 'string', maxLength: 250} as StringSchema,\r\n    {name: 'url', type: 'string', maxLength: 200} as StringSchema,\r\n    {name: 'public', type: 'boolean'} as BoolSchema,\r\n    {name: 'server', type: 'id'} as IdSchema,\r\n    {name: 'icon', type: 'image'} as ImageSchema,\r\n    {name: 'submit', type: 'submit'} as ButtonSchema,\r\n];\r\n\r\nexport abstract class EditBasePage extends VPage<AppController> {\r\n    private candidateItems = async (params:any, key:string):Promise<any[]> => {\r\n        await store.dev.searchServer.first(key);\r\n        return store.dev.searchServer.items;\r\n    }\r\n\r\n    private moreCandidates = async ():Promise<void> => {\r\n        await store.dev.searchServer.more();\r\n    }\r\n\r\n    private renderRow = (item:DevModel.Server, index:number): JSX.Element => {\r\n        return <div className=\"px-3 py-2\"><ServerCaption {...item} /></div>;\r\n    }\r\n\r\n    private pickServerId = (context:Context, name:string, value:number): Promise<number> => {\r\n        return new Promise<number>((resolve, reject) => {\r\n            nav.push(<IdPickPage \r\n                caption=\"选择服务器\" \r\n                searchPlaceHolder=\"搜索服务器\"\r\n                candidateItems={this.candidateItems}\r\n                moreCandidates={this.moreCandidates}\r\n                row={this.renderRow}\r\n                idFromItem={(item:DevModel.Server) => item.id}\r\n                resolve={resolve} params={undefined} />, \r\n                ()=> {\r\n                    reject();\r\n                });\r\n        });\r\n    }\r\n\r\n    private renderServerInput = (itemId:number): JSX.Element => {\r\n        return <ServerSpan id={itemId} />;\r\n    };\r\n\r\n    private uiSchema:UiSchema = {\r\n        items: {\r\n            name: {widget: 'text', label: '名称'} as UiTextItem,\r\n            caption: {widget: 'text', label: '标题'} as UiTextItem,\r\n            discription: {widget: 'textarea', label: '描述', rows: 5} as UiTextAreaItem,\r\n            url: {widget: 'text', label: 'URL', placeholder: 'http(s)://APP地址'} as UiTextItem,\r\n            'public': {widget: 'checkbox', label: '公开', } as UiCheckItem,\r\n            server: {widget: 'id', label: '服务器', pickId: this.pickServerId, Templet: this.renderServerInput} as UiIdItem,\r\n            icon: {widget: 'image', label: '标志图'} as UiImageItem,\r\n            submit: {widget: 'button', label: '提交', className: 'btn btn-primary'}\r\n        }\r\n    }\r\n    \r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n    private onButtonClick = async (name:string, context: Context) => {\r\n        let {data} = context;\r\n        let app:DevModel.App = _.clone(this.controller.app) || {} as any;\r\n        _.merge(app, data);\r\n        await this.controller.saveApp(app);\r\n        nav.pop();\r\n    }\r\n    protected page: ()=>JSX.Element;\r\n    protected form = observer(() => {\r\n        return <Form fieldLabelSize={2}\r\n            className=\"m-3\" \r\n            schema={schema} \r\n            uiSchema={this.uiSchema}\r\n            formData={this.initValues}\r\n            onButtonClick={this.onButtonClick} />\r\n    });\r\n    abstract get initValues():any;\r\n}\r\n\r\nexport class EditPage extends EditBasePage {\r\n    get initValues():any {return this.controller.app}\r\n    protected page = () => {\r\n        let {app} = this.controller;\r\n        let {name} = app;\r\n        return <Page header={'修改APP - ' + name} back=\"close\">\r\n            <this.form />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nexport class NewPage extends EditBasePage {\r\n    get initValues():any {return {}}\r\n    protected page = () => {\r\n        return <Page header={'新建APP'} back=\"close\">\r\n            <this.form />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, Image } from 'tonva';\r\nimport { AppController } from '.';\r\nimport { List, LMR, Badge, Muted, FA } from 'tonva';\r\nimport { DevModel } from 'model';\r\nimport { NewPage } from './editPage';\r\n\r\nexport class AppsPage extends VPage<AppController> {\r\n    async open(param:any) {\r\n        this.openPage(this.page);\r\n    }\r\n    private newItem = () => {\r\n        this.openVPage(NewPage);\r\n    }\r\n    private page = ():JSX.Element => {\r\n        let {appList, listRowClick} = this.controller;\r\n        let right = <button className='btn btn-secondary btn-sm' onClick={()=>this.newItem()}><FA name=\"plus\" /></button>;\r\n        return <Page header=\"App\" right={right}>\r\n            <List items={appList} item={{render: this.appRow, onClick: listRowClick}} />\r\n        </Page>\r\n    }\r\n    private appRow = (item:DevModel.App):JSX.Element => {\r\n        let {name, caption, discription, icon, url, urlDebug} = item;\r\n        let left = <Badge size=\"sm\"><Image src={icon} /></Badge>;\r\n        let right = <div className=\"text-muted small text-right\">\r\n            {url || '-'}<br/>\r\n            {urlDebug}\r\n        </div>;\r\n        let spanCaption = caption?\r\n            <>{name}: <b>{caption}</b></> :\r\n            <b>{name}</b>;\r\n        return <LMR className=\"py-2 px-3 align-items-stretch\"\r\n            left={left} right={right}>\r\n            <div className=\"px-3\">\r\n                <div>{spanCaption}</div>\r\n                <div><Muted>{discription}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { List, LMR, SearchBox } from 'tonva';\r\nimport { DevModel } from 'model';\r\nimport { UnitSpan } from 'tools';\r\nimport { store } from 'store';\r\nimport { nav, Page, VPage } from 'tonva';\r\nimport { AppController } from '.';\r\n\r\nexport class SearchUqPage extends VPage<AppController> {\r\n    @observable private uqs: DevModel.UQ[];\r\n\r\n    async open() {\r\n        this.uqs = await this.controller.getMyUqs();\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private onSearch = async (key:string) => {\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.uqs = await this.controller.searchUq(key, pageStart, pageSize);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let header = <SearchBox className=\"w-100 mx-1\" \r\n            onSearch={this.onSearch}\r\n            placeholder=\"搜索UQ名字\" \r\n            maxLength={100} />;\r\n        return <Page back=\"close\" header={header}>\r\n            <List items={this.uqs} item={{render: this.row, onClick: this.controller.onUq}} />\r\n        </Page>;\r\n    });\r\n\r\n    private row = (uq: DevModel.UQ) => {\r\n        let {owner, name, discription} = uq;\r\n        return <LMR className=\"py-2 px-3\" right={discription}>\r\n            <div>{owner} / {name}</div>\r\n        </LMR>;\r\n    };\r\n}\r\n\r\n@observer\r\nexport class AppUqs extends React.Component {\r\n    @observable anySelected: boolean = false;\r\n    private list:List;\r\n    private onSelect = (item: DevModel.UQ, isSelected:boolean, anySelected:boolean) => {\r\n        this.anySelected = anySelected;\r\n    }\r\n    private row = (item: DevModel.UQ) => {\r\n        let {name, unit, discription} = item;\r\n        return <LMR className=\"p-2\" right={<small className=\"text-muted\">{discription}</small>}>\r\n            <UnitSpan id={unit} />/{name}\r\n        </LMR>;\r\n    }\r\n    private removeBind = () => {\r\n        if (this.list === null) return;\r\n        let {selectedItems} = this.list;\r\n        if (selectedItems === undefined) return;\r\n        if (selectedItems.length === 0) return;\r\n        store.dev.apps.appBindUq(\r\n            selectedItems.map(v => {\r\n                return {id:v.id, access:['*']}\r\n            }), \r\n            false);\r\n    }\r\n    render() {\r\n        let btnProps = this.anySelected?\r\n            {color:'danger', onClick:this.removeBind, icon:'trash', text:'取消'}:\r\n            {color:'primary', onClick:()=>nav.push(<Uqs/>), icon:'plus', text:'新增'};\r\n        let btn = (p)=><button \r\n            className={classNames('btn', 'btn-outline-'+p.color, 'btn-sm')} \r\n            onClick={p.onClick}>\r\n            <i className={\"fa fa-\" + p.icon} /> {p.text}关联\r\n        </button>;\r\n        let listHeader = <div className=\"va-row py-1 justify-content-center\">{btn(btnProps)}</div>;\r\n        return <Page header=\"关联UQ\">\r\n            <List ref={list=>this.list=list} header={listHeader}\r\n                items={store.dev.apps.uqs}\r\n                item={{render: this.row, onSelect: this.onSelect}} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\n@observer\r\nclass Uqs extends React.Component {\r\n    onSearch = async (key:string) => {\r\n        await store.dev.apps.searchUq(key);\r\n    }\r\n    onBind(uq: DevModel.UQ, bind: boolean) {\r\n        store.dev.apps.appBindUq([{id:uq.id, access:['*']}], bind);\r\n    }\r\n    row = (uq: DevModel.UQ) => {\r\n        let isConnected = store.dev.apps.uqs.find(a => a.id === uq.id) !== undefined;\r\n        let cn = ['btn', 'btn-sm'];\r\n        let btnContent:any, onClick:any;\r\n        if (isConnected) {\r\n            cn.push('btn-success');\r\n            onClick = ()=>this.onBind(uq, false);\r\n            btnContent = \"已关联\";\r\n        }\r\n        else {\r\n            cn.push('btn-primary');\r\n            onClick = ()=>this.onBind(uq, true);\r\n            btnContent = <span><i className=\"fa fa-check\"/> 关联</span>;\r\n        }\r\n        return <div className=\"d-flex justify-content-start py-1 px-3\">\r\n            <div className=\"align-self-center\">{uq.name + ' - ' + uq.discription}</div>\r\n            <footer className=\"ml-auto\"><button className={classNames(cn)} onClick={onClick}>{btnContent}</button></footer>\r\n        </div>\r\n    }\r\n    render() {\r\n        let header = <SearchBox className=\"w-100 mx-1\" \r\n            onSearch={this.onSearch} \r\n            placeholder=\"搜索UQ名字\" \r\n            maxLength={100} />;\r\n        return <Page back=\"close\" header={header}>\r\n            <List items={store.dev.apps.searchedUqs} item={{render: this.row}} loading={null} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, nav } from 'tonva';\r\nimport { AppController, UqAccess } from '.';\r\nimport { IdDates, UnitSpan, ServerSpan, UnitName } from 'tools';\r\nimport { Prop, Media, PropGrid, ListProp, DropdownActions, List, LMR } from 'tonva';\r\nimport { EditPage } from './editPage';\r\nimport { AppUqs, SearchUqPage } from './appUqs';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class AppPage extends VPage<AppController> {\r\n    async open() {\r\n        //this.uqs.list = this.controller.uqs;\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private editItem = async () => {\r\n        await this.openVPage(EditPage);\r\n        //nav.push(<EditAppPage {...this.props} />);\r\n    }\r\n\r\n    private deleteItem = async () => {\r\n        if (confirm('真的要删除吗？系统删除时并不会检查相关引用，请谨慎') === true) {\r\n            await this.controller.deleteApp();\r\n            nav.pop();\r\n        }\r\n    }\r\n\r\n    private page = observer(():JSX.Element => {\r\n        let {app} = this.controller;\r\n        let {unit, name, caption, discription, icon, server, date_init, date_update} = app;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let menuItems = [\r\n            // {icon: 'cogs', caption:'设置关联UQ', action: ()=>nav.push(<AppUqs />)},\r\n            {caption:'修改App', action:this.editItem, icon:'edit' },\r\n            {caption:'删除', action:this.deleteItem, icon:'trash-o' }\r\n        ];\r\n\r\n        let right = <DropdownActions actions={menuItems} />;\r\n        let spanCaption = caption?\r\n            <>{name}: <b>{caption}</b></> :\r\n            <b>{name}</b>;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <Media icon={icon} main={spanCaption} discription={disp} />\r\n            },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                label: '开发号', \r\n                component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> \r\n            },\r\n            /*\r\n            {\r\n                type: 'component', \r\n                label: 'Service',\r\n                vAlign: 'stretch',\r\n                component: <ServiceRow />,\r\n            },*/\r\n            {\r\n                label: 'URL',\r\n                name: 'url',\r\n                type: 'string',                \r\n            },\r\n            {\r\n                type: 'component',\r\n                label: '服务器',\r\n                component: <ServerSpan id={server} />\r\n            },\r\n            '',\r\n            //this.uqs,\r\n        ];\r\n        let btnAddUq = <button className=\"btn btn-outline-primary btn-sm\" onClick={()=>this.openVPage(SearchUqPage)}>\r\n            增加关联\r\n        </button>;\r\n        return <Page header={'App - ' + name} right={right}>\r\n            <PropGrid rows={rows} values={app} />\r\n            <LMR className=\"mx-3 mt-3 mb-1\" right={btnAddUq}>\r\n                关联UQ\r\n            </LMR>\r\n            <List items={this.controller.uqAccesses} item={{render:this.renderUqRow, onClick:this.uqClick}} />\r\n        </Page>\r\n    })\r\n\r\n    private uqClick = (uqAccess:UqAccess) => {\r\n        this.controller.onUq(uqAccess.uq);\r\n    }\r\n\r\n    private renderUqRow = (uqAccess:UqAccess, index:number):JSX.Element => {\r\n        let {uq, bind_access: access} = uqAccess;\r\n        let {name, discription, unit} = uq;\r\n        let disp: any;\r\n        let elAccess: any;\r\n        if (access && access.length > 0) {\r\n            elAccess = <> + {access.join(', ')} </>;\r\n        }\r\n        if (discription) disp = <div className=\"small text-muted\"> &nbsp; {discription}</div>;\r\n        return <LMR className=\"px-3 py-2 align-items-center\" right={disp}>\r\n            <UnitName id={unit} /> / {name} {elAccess}\r\n        </LMR>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, nav } from 'tonva';\r\nimport { AppController, UqAccess } from '.';\r\nimport { LMR } from 'tonva';\r\n\r\nexport class UqBindPage extends VPage<AppController> {\r\n    private uqAccess: UqAccess;\r\n    private accesses: string[];\r\n    private accessChecked:{[name:string]:boolean};\r\n    async open(uqAccess: UqAccess) {\r\n        this.uqAccess = uqAccess;\r\n        let {uq, bind_access} = this.uqAccess;\r\n        let {access} = uq;\r\n        if (access) {\r\n            this.accessChecked = {};\r\n            this.accesses = access.split(',');\r\n            for (let acc of this.accesses) {\r\n                this.accessChecked[acc] = (bind_access && bind_access.find(bc => bc === acc)) !== undefined;\r\n            }\r\n        }\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private onCheckChanged = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        let {target} = evt;\r\n        this.accessChecked[target.name] = target.checked;\r\n    }\r\n\r\n    private saveUqBind = async () => {\r\n        let acc:string[] = [];\r\n        if (this.accesses) {\r\n            for (let i in this.accessChecked) {\r\n                if (this.accessChecked[i] === true) acc.push(i);\r\n            }\r\n        }\r\n        await this.controller.saveUqBind(this.uqAccess.uq, acc);\r\n        nav.pop();\r\n    }\r\n\r\n    private removeUqBind = async () => {\r\n        await this.controller.removeUqBind(this.uqAccess.uq);\r\n        nav.pop();\r\n    }\r\n\r\n    private page = ():JSX.Element => {\r\n        let {uq, bind_access} = this.uqAccess;\r\n        let {owner, name, discription, access} = uq;\r\n        let btnDelete:any;\r\n        if (bind_access !== null && bind_access !== undefined) {\r\n            btnDelete = <button className=\"btn btn-outline-danger btn-sm\" onClick={this.removeUqBind}>取消关联</button>;\r\n        }\r\n        let checkAccessList:any;\r\n        if (this.accesses) {\r\n            checkAccessList = <div className=\"mt-3\">\r\n            {\r\n                this.accesses.map(v => {\r\n                    let checked = this.accessChecked[v];\r\n                    return <label key={v} className=\"d-inline-block mr-4\">\r\n                        <input onChange={this.onCheckChanged}\r\n                            style={{width:'1.1rem', height:'1.1rem'}} \r\n                            name={v} type=\"checkbox\" defaultChecked={checked} />&nbsp;{v}\r\n                    </label>;\r\n                })\r\n            }\r\n            </div>;\r\n        }\r\n        return <Page header=\"关联UQ\">\r\n            <div className=\"m-3 py-3 px-3 bg-white border\">\r\n                <div>{owner} / {name}</div>\r\n                <div className=\"text-muted\">{discription}</div>\r\n                {checkAccessList}\r\n                <LMR className=\"pt-3\" right={btnDelete}>\r\n                    <button className=\"btn btn-primary btn-sm\" onClick={this.saveUqBind}>保存关联</button>\r\n                </LMR>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { observable } from 'mobx';\r\nimport { Controller } from 'tonva';\r\nimport { DevModel } from 'model';\r\nimport { devApi } from 'api';\r\nimport { AppsPage } from './appsPage';\r\nimport { AppPage } from './appPage';\r\nimport { UqBindPage } from './uqBindPage';\r\n\r\nexport interface UqAccess {\r\n    uq: DevModel.UQ;\r\n    bind_access: string[];\r\n}\r\n\r\nexport class AppController extends Controller {\r\n    private unitId: number;\r\n    app: DevModel.App;\r\n    @observable appList: DevModel.App[];\r\n    @observable uqAccesses: UqAccess[];\r\n    protected async internalStart(unitId:any) {\r\n        this.unitId = unitId;\r\n        this.appList = await devApi.apps(this.unitId);\r\n        this.openVPage(AppsPage);\r\n    }\r\n\r\n    listRowClick = async (item:DevModel.App) => {\r\n        this.app = item;\r\n        let ret = await devApi.loadAppUqs(item.id);\r\n        this.uqAccesses = ret.map(v => {\r\n            let {owner, access, id, name, discription, unit, date_init, date_update, bind_access} = v;\r\n            return {\r\n                uq: {\r\n                    id: id,\r\n                    name: name,\r\n                    discription: discription,\r\n                    unit: unit,\r\n                    access: access,\r\n                    owner: owner,\r\n                    date_init: date_init,\r\n                    date_update: date_update, \r\n                    service_count: undefined,\r\n                },\r\n                uqOwner: owner,\r\n                bind_access: bind_access && bind_access.split(',')\r\n            }\r\n        });\r\n        this.openVPage(AppPage);\r\n    }\r\n\r\n    saveApp = async (values: DevModel.App) => {\r\n        let app: DevModel.App;\r\n        let now = new Date();\r\n        if (this.app === undefined) {\r\n            app = _.clone(values);\r\n            app.date_init = now;\r\n        }\r\n        else {\r\n            app = _.clone(this.app);\r\n            _.merge(app, values);\r\n        }\r\n        app.unit = this.unitId;\r\n        app.date_update = now;\r\n        let ret = await devApi.saveApp(app);\r\n        app.id = ret;\r\n        let org = this.appList.find(v => v.id === ret);\r\n        if (org !== undefined) {\r\n            _.merge(org, app);\r\n        }\r\n        else {\r\n            this.appList.push(app);\r\n        }\r\n    }\r\n\r\n    deleteApp = async () => {\r\n        await devApi.delApp(this.unitId, this.app.id);\r\n        let index = this.appList.findIndex(v => v.id === this.app.id);\r\n        if (index >= 0) this.appList.splice(index, 1);\r\n    }\r\n\r\n    searchUq = async (key:string, pageStart:number, pageSize:number) => {\r\n        return await devApi.searchUq(this.unitId, key, pageStart, pageSize);\r\n    }\r\n\r\n    getMyUqs = async () => {\r\n        return await devApi.getMyUqs(this.unitId);\r\n    }\r\n\r\n    onUq = (uq: DevModel.UQ) => {\r\n        let uqAccess:UqAccess = this.uqAccesses.find(v => v.uq.id === uq.id);\r\n        if (uqAccess === undefined) {\r\n            uqAccess = {\r\n                uq: uq,\r\n                bind_access: undefined,\r\n            }\r\n        }\r\n        else {\r\n            let access = uqAccess.bind_access;\r\n            if (access === null || access === undefined) uqAccess.bind_access = [];\r\n        }\r\n        this.openVPage(UqBindPage, uqAccess);\r\n    }\r\n\r\n    // accesses = undefined, 表示删除\r\n    private buildBindUqs(uq: DevModel.UQ, accesses?:string[]) {\r\n        let uqs:{id:number, access:string[]}[] = [];\r\n        let isNew = true;\r\n        for (let ua of this.uqAccesses) {\r\n            let {uq:uaUq, bind_access} = ua;\r\n            if (uaUq.id === uq.id) {\r\n                if (accesses === undefined) continue;\r\n                bind_access = accesses;\r\n                isNew = false;\r\n            }\r\n            uqs.push({\r\n                id: uaUq.id,\r\n                access: bind_access || [],\r\n            });\r\n        }\r\n        if (accesses !== undefined && isNew === true) {\r\n            uqs.push({id: uq.id, access: accesses});\r\n        }\r\n        return uqs;\r\n    }\r\n\r\n    saveUqBind = async (uq: DevModel.UQ, accesses:string[]) => {\r\n        let uqs:{id:number, access:string[]}[] = this.buildBindUqs(uq, accesses);\r\n        await devApi.appBindUq(this.unitId, this.app.id, uqs);\r\n        if (uqs.length > this.uqAccesses.length) {\r\n            this.uqAccesses.unshift({\r\n                uq: uq,\r\n                bind_access: accesses,\r\n            });\r\n        }\r\n        else {\r\n            let ua = this.uqAccesses.find(v => v.uq.id === uq.id);\r\n            ua.bind_access = accesses;\r\n        }\r\n    }\r\n\r\n    removeUqBind = async (uq: DevModel.UQ) => {\r\n        let uqs:{id:number, access:string[]}[] = this.buildBindUqs(uq);\r\n        await devApi.appBindUq(this.unitId, this.app.id, uqs);\r\n        let index = this.uqAccesses.findIndex(v => v.uq.id === uq.id);\r\n        if (index>=0) this.uqAccesses.splice(index, 1);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { FA } from 'tonva';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\n\r\nconst groupStart = '///++++++';\r\nconst groupEnd = '------///';\r\n\r\nexport abstract class Section {\r\n    render: () => JSX.Element;\r\n}\r\n\r\nclass StringSection extends Section {\r\n    text: string;\r\n    constructor(text:string) {super(); this.text = text}\r\n    render = (): JSX.Element => {\r\n        if (this.text.trim().length === 0) return null;\r\n        let parts = this.text.split('\\n');\r\n        return <>{parts.map((v, i) => v.length === 0?\r\n            <div key={i}>&nbsp;</div> :\r\n            <div key={i}>{v}</div>\r\n        )}</>;\r\n    }\r\n}\r\n\r\nclass GroupSection extends Section {\r\n    group: string[];\r\n    @observable collaps: boolean;\r\n    constructor(group:string[]) {\r\n        super(); \r\n        this.group = group;\r\n        this.collaps = true;\r\n    }\r\n    render = observer(():JSX.Element => {\r\n        //let groupId = 'text-group-' + index;\r\n        let line = this.group[0];\r\n        let title: string;\r\n        let p0 = 0, p = line.indexOf('\\n');\r\n        if (p < 0) p = undefined;\r\n        else {\r\n            let l = line.indexOf('(');\r\n            if (l < p) p = l;\r\n        }\r\n        title = line.substring(p0, p);\r\n\r\n        let onClick = () => {\r\n            let c = this.collaps;\r\n            if (c === false) c = true;\r\n            else c = false;\r\n            this.collaps = c;\r\n            /*\r\n            this.setState(prevState => ({\r\n                collaps: {\r\n                    ...prevState.collaps,\r\n                    [index]: c,\r\n                },\r\n            }));*/\r\n        }\r\n        let titleIcon:any, content:any;\r\n        if (this.collaps===false) {\r\n            titleIcon = <FA name='arrow-circle-up' className='text-success' />;\r\n            content = <div>\r\n                {\r\n                    this.group.map((v, i) => {\r\n                        if (v.trim().length === 0) return null;\r\n                        return <pre style={{whiteSpace: 'pre-wrap'}} key={i}>{v}</pre>\r\n                    })\r\n                }\r\n            </div>;\r\n        }\r\n        else {\r\n            titleIcon = <FA name='arrow-circle-down' className='text-success' />;\r\n        }\r\n        return <>\r\n            <div className=\"cursor-pointer text-primary\" onClick={onClick}>{titleIcon} <u>{title}</u></div>\r\n            {content}\r\n        </>;\r\n    });\r\n}\r\n\r\nclass ErrorSection extends Section {\r\n    error: string[];\r\n    constructor(error:string[]) {super(); this.error = error}\r\n    render = ():JSX.Element => {\r\n        return <div className=\"text-danger\">\r\n            <FA name=\"exclamation-circle\" />&nbsp;\r\n            {this.error.join().split('\\n').map(v=><>{v}<br/></>)}\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class ResultSections {\r\n    private text: string;\r\n    private p: number;\r\n    private group: string[];\r\n    private stop: boolean;\r\n    @observable hasError: boolean = false;\r\n    @observable seconds: number;\r\n    //readonly sections: (string | string[])[] = [];\r\n    @observable readonly sections: Section[] = [];\r\n\r\n    add(text:string):void {\r\n        this.stop = false;\r\n        if (this.text === undefined) {\r\n            this.p = 0;\r\n            this.text = text;\r\n        }\r\n        else {\r\n            this.text = this.text + text;\r\n        }\r\n        if (this.text.length < 10) return;\r\n        while (this.stop === false) {\r\n            this.addToGroup();\r\n            this.addText();\r\n        }\r\n    }\r\n\r\n    private mayStart(token:string):boolean {\r\n        let len = this.text.length - token.length;\r\n        if (this.p < len) return false;\r\n        for (let i=0; i<len; i++) {\r\n            if (this.text.charCodeAt(this.p + i) !== token.charCodeAt(i)) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private parse():Section {\r\n        let type: string = '';\r\n        let len = this.group.length;\r\n        for (let i=0; i<len; i++) {\r\n            let ln = this.group[i];\r\n            let pos = ln.indexOf('\\n');\r\n            if (pos < 0) {\r\n                type += ln;\r\n                continue;\r\n            }\r\n            type += ln.substr(0, pos);\r\n            for (let s=0; s<i+1; s++) this.group.shift();\r\n            this.group.unshift(ln.substr(pos+1));\r\n            switch (type) {\r\n                default:\r\n                case '': \r\n                    return new GroupSection(this.group);\r\n                case 'error': \r\n                    this.hasError = true;\r\n                    return new ErrorSection(this.group);\r\n            }            \r\n        }\r\n    }\r\n\r\n    private addToGroup():void {\r\n        if (this.group === undefined) return;\r\n        if (this.text === undefined) return;\r\n        let p = this.text.indexOf(groupEnd, this.p);\r\n        if (p < 0) {\r\n            if (this.mayStart(groupEnd) === true) return;\r\n            this.group.push(this.p === 0? this.text : this.text.substr(this.p));\r\n            this.p = 0;\r\n            this.text = undefined;\r\n            this.stop = true;\r\n            return;\r\n        }\r\n        this.group.push(this.text.substring(this.p, p));\r\n        this.sections.push(this.parse());\r\n        this.group = undefined;\r\n        this.p = p + 9;\r\n    }\r\n\r\n    private addText():void {\r\n        if (this.text === undefined) return;\r\n        let p = this.text.indexOf(groupStart, this.p);\r\n        if (p < 0) {\r\n            if (this.mayStart(groupStart) === true) return;\r\n            this.sections.push(new StringSection(this.p === 0? this.text : this.text.substr(this.p)));\r\n            this.p = 0;\r\n            this.text = undefined;\r\n            this.stop = true;\r\n            return;\r\n        }\r\n        this.sections.push(new StringSection(this.text.substring(this.p, p)));\r\n        this.p = p + 9;\r\n        this.group = [];\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {nav, Page, FA} from 'tonva';\r\nimport {List, EasyDate, LMR, Muted} from 'tonva';\r\nimport {DevModel} from '../../model';\r\nimport {store} from '../../store';\r\nimport { ResultSections, Section } from './resultSections';\r\nimport { observer } from 'mobx-react';\r\n\r\ninterface State {\r\n    files: any[];\r\n    compiled?: string;\r\n    text?: string;\r\n}\r\n\r\nexport interface UqUploadProps {\r\n    uq: DevModel.UQ;\r\n    services: DevModel.Service[];\r\n}\r\n\r\nconst fastUpload = '快速测试';\r\nconst thoroughlyUpload = '完全测试';\r\nexport class UqUpload extends React.Component<UqUploadProps, State> {\r\n    private fileInput: HTMLInputElement;\r\n\r\n    constructor(props:UqUploadProps) {\r\n        super(props);\r\n        this.state = {\r\n            files: undefined,\r\n        }\r\n    }\r\n\r\n    private onFilesChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        let upFiles:any[] = [];\r\n        let {files} = evt.target;\r\n        let len = files.length;\r\n        for (let i=0; i<len; i++) {\r\n            upFiles.push(files[i]);\r\n        }\r\n        this.setState({\r\n            files: upFiles,\r\n        });\r\n    }\r\n    fileRender(file:any, index:number):JSX.Element {\r\n        let {name, size, lastModifiedDate} = file;\r\n        function sz():string {\r\n            let n:number, u:string;\r\n            if (size < 1024) {\r\n                n = size; u = 'b';\r\n            }\r\n            else if (size < 1024*1024) {\r\n                n = Math.trunc((size / 1024) * 100)/100; u = 'k';\r\n            }\r\n            else {\r\n                n = Math.trunc((size / 1024 / 1024) * 100)/100; u = 'm';\r\n            }\r\n            return n + ' ' + u;\r\n        }\r\n        return <LMR className=\"px-2 py-1\" right={<Muted>{sz()}</Muted>}>\r\n            <div>{name}</div>\r\n            <div><Muted>修改日期: <EasyDate date={lastModifiedDate} /></Muted></div>\r\n        </LMR>;\r\n    }\r\n    private fileClick = (file:any) => {\r\n        let fr = new FileReader();\r\n        fr.onload = function(f) {\r\n            //alert(this.result);\r\n            nav.push(<UqPage name={file.name} content={this.result} />)\r\n        }\r\n        fr.readAsText(file, \"utf8\");\r\n    }\r\n    private onSubmit = (evt:React.FormEvent<any>) => {\r\n        evt.preventDefault();\r\n    }\r\n\r\n    private async update(thoroughly:boolean) {\r\n        var files:FileList = this.fileInput.files;\r\n        var data = new FormData();\r\n        let len = files.length;\r\n        for (let i=0; i<len; i++) {\r\n            let file = files[i];\r\n            data.append('files[]', file, file.name);\r\n        }\r\n  \r\n        let url = store.uqServer + 'uq-compile/' + this.props.uq.id + '/update';\r\n        let actionName:string;\r\n        if (thoroughly === true) {\r\n            actionName = thoroughlyUpload;\r\n            url += '-thoroughly';\r\n        }\r\n        else {\r\n            actionName = fastUpload;\r\n        }\r\n        try {\r\n            let abortController = new AbortController();\r\n            let res = await fetch(url, {\r\n                method: \"POST\",\r\n                body: data,\r\n                signal: abortController.signal,\r\n            });\r\n            nav.push(<CompileResult {...this.props} \r\n                actionName={actionName} \r\n                uploadOrDeploy=\"upload\"\r\n                res={res} abortController={abortController} />);\r\n        }\r\n        catch (e) {\r\n            console.error('%s %s', url, e);\r\n        }\r\n    }\r\n    private onUpdate = async () => {\r\n        nav.ceaseTop();\r\n        let thoroughly = false;\r\n        await this.update(thoroughly);\r\n    }\r\n    private onUpdateThoroughly = async () => {\r\n        nav.ceaseTop();\r\n        let thoroughly = true;\r\n        await this.update(thoroughly);\r\n    }\r\n    render() {\r\n        let {files} = this.state;\r\n        let fileList:any;\r\n        if (files !== undefined) {\r\n            fileList = <List \r\n                className=\"my-3\" \r\n                items={files} \r\n                item={{render: this.fileRender, onClick: this.fileClick}}/>;\r\n        }\r\n        let button:any;\r\n        if (files !== undefined && files.length > 0) {\r\n            button = <div className=\"my-2 d-flex\">\r\n                <button className=\"btn btn-success\" type=\"submit\" onClick={this.onUpdate}>{fastUpload}</button>\r\n                <div className=\"py-2 flex-grow-1\" />\r\n                <button className=\"btn btn-outline-warning\"\r\n                    type=\"submit\" onClick={this.onUpdateThoroughly}>{thoroughlyUpload}</button>\r\n            </div>;\r\n        }\r\n        return <Page header={'测试 - ' + this.props.uq.name}>\r\n            <div className=\"py-2 px-3\">\r\n                <div>请选择UQ源代码文件</div>\r\n                <form className=\"my-1\" encType=\"multipart/form-data\" onSubmit={this.onSubmit}>\r\n                    <div className=\"my-1\">\r\n                        <input ref={(fileInput) => this.fileInput=fileInput}type=\"file\" id=\"photo\" \r\n                            className=\"w-100 form-control-file\" name=\"files\" multiple={true} \r\n                            onChange={this.onFilesChange} />\r\n                    </div>\r\n                    {fileList}\r\n                    {button}\r\n                </form>\r\n                <pre>{this.state.compiled}</pre>\r\n                <div>{this.state.text}</div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n\r\nconst fastDeploy = '快速发布';\r\nconst thoroughlyDeploy = '完全发布';\r\nexport class UqDeploy extends React.Component<UqUploadProps> {\r\n    private onDeploy = async () => {\r\n        nav.ceaseTop();\r\n        let thoroughly = false;\r\n        await this.update(thoroughly);\r\n    }\r\n    private onDeployThoroughly = async () => {\r\n        nav.ceaseTop();\r\n        let thoroughly = true;\r\n        await this.update(thoroughly);\r\n    }\r\n    private async update(thoroughly:boolean) {\r\n        let url = store.uqServer + 'uq-compile/' + this.props.uq.id + '/deploy';\r\n        let actionName:string;\r\n        if (thoroughly === true) {\r\n            actionName = thoroughlyDeploy;\r\n            url += '-thoroughly';\r\n        }\r\n        else {\r\n            actionName = fastDeploy;\r\n        }\r\n        try {\r\n            let abortController = new AbortController();\r\n            let res = await fetch(url, {\r\n                method: \"POST\",\r\n                signal: abortController.signal,\r\n            });\r\n            nav.push(<CompileResult {...this.props} \r\n                actionName={actionName}\r\n                uploadOrDeploy=\"deploy\"\r\n                res={res} abortController={abortController} />);\r\n        }\r\n        catch (e) {\r\n            console.error('%s %s', url, e);\r\n        }\r\n    }\r\n    render() {\r\n        return <Page header={'发布 - ' + this.props.uq.name}>\r\n            <div className=\"m-3 bg-white p-3\">\r\n                <ul className=\"my-3\">\r\n                    <li>将已经编译测试过的代码，发布到生产服务器</li>\r\n                    <li>优化发布快速比较代码，仅仅对修改代码的部分发布</li>\r\n                    <li>彻底发布仅用于底层代码有突破性变化时</li>\r\n                </ul>\r\n                <div className=\"d-flex p-3\">\r\n                    <button className=\"btn btn-success\" type=\"submit\" onClick={this.onDeploy}>{fastDeploy}</button>\r\n                    <div className=\"py-2 flex-grow-1\" />\r\n                    <button className=\"btn btn-outline-warning\"\r\n                        type=\"submit\" onClick={this.onDeployThoroughly}>{thoroughlyDeploy}</button>\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n\r\ninterface UqPgeProps {\r\n    name: string;\r\n    content: string|ArrayBuffer;\r\n}\r\nclass UqPage extends React.Component<UqPgeProps> {\r\n    render() {\r\n        return <Page header={this.props.name}>\r\n            <pre className=\"px-3 py-2\">{this.props.content}</pre>\r\n        </Page>;\r\n    }\r\n}\r\n\r\ninterface CompileResultProps extends UqUploadProps {\r\n    uq: DevModel.UQ;\r\n    actionName: string;\r\n    res: Response;\r\n    abortController: AbortController;\r\n    uploadOrDeploy: 'upload' | 'deploy';\r\n}\r\n/*\r\ninterface CompileResultState {\r\n    sections: Section[];\r\n    seconds: number;\r\n    collaps: {[index:number]: boolean};\r\n}\r\n*/\r\n@observer\r\nclass CompileResult extends React.Component<CompileResultProps> {\r\n    private resultSections: ResultSections;\r\n    private timeHandler:any;\r\n    constructor(props:CompileResultProps) {\r\n        super(props);\r\n        this.resultSections = new ResultSections();\r\n        /*\r\n        this.state = {\r\n            sections: this.resultSections.sections,\r\n            seconds: -1,\r\n            collaps: {}\r\n        }\r\n        */\r\n    }\r\n    componentWillMount() {\r\n        nav.regConfirmClose(async ():Promise<boolean>=>{\r\n            if (this.resultSections.seconds>=0) return true;\r\n            return new Promise<boolean>((resolve, reject) => {\r\n                try {\r\n                    if (confirm(`正在${this.props.actionName}中，真的要中止吗？`) === true) {\r\n                        try {\r\n                            this.props.abortController.abort();\r\n                        }\r\n                        catch (err) {\r\n                            console.error(err);\r\n                        }\r\n                        resolve(true);\r\n                    }\r\n                    else {\r\n                        resolve(false);\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    reject(err);\r\n                }\r\n            })\r\n        });\r\n    }\r\n    private startAutoScrollToBottom() {\r\n        this.timeHandler = setInterval(() => {\r\n            var pane = document.getElementById('bottomDiv');\r\n            pane && pane.scrollIntoView();\r\n            /*\r\n            if (pane !== undefined) {\r\n                let childNodes = pane.childNodes;\r\n                let last = childNodes.item(childNodes.length-1);\r\n                (last as HTMLElement).scrollIntoView();\r\n            }\r\n            */\r\n            //that.clearTimeHandler();\r\n        }, 100);\r\n    }\r\n    private endAutoScrollToBottom() {\r\n        setTimeout(()=>{\r\n            clearInterval(this.timeHandler);\r\n        }, 300);\r\n    }\r\n    /*\r\n    private clearTimeHandler() {\r\n        if (this.timeHandler !== undefined) {\r\n            clearTimeout(this.timeHandler);\r\n            this.timeHandler = undefined;\r\n        }\r\n    }*/\r\n    private getParent(el:HTMLElement):HTMLElement {\r\n        if (!el) return;\r\n        if (el.tagName === 'MAIN') return el;\r\n        return this.getParent(el.parentElement);\r\n    }\r\n    /*\r\n    private scrollToBottom(defer:number = 100) {\r\n        this.clearTimeHandler();\r\n        let that = this;\r\n        this.timeHandler = setTimeout(() => {\r\n            var pane = document.getElementById('bottomDiv');\r\n            pane && pane.scrollIntoView();\r\n            that.clearTimeHandler();\r\n        }, defer);\r\n    }\r\n    */\r\n    private topIntoView() {\r\n        var pane = document.getElementById('topDiv');\r\n        pane && pane.scrollIntoView();\r\n        /*\r\n        let childNodes = pane.childNodes;\r\n        let len = childNodes.length;\r\n        if (len === 0) return;\r\n        let first = childNodes.item(0);\r\n        (first as HTMLElement).scrollIntoView();\r\n        */\r\n    }\r\n    private bottomIntoView() {\r\n        var pane = document.getElementById('bottomDiv');\r\n        pane && pane.scrollIntoView();\r\n        /*\r\n        let childNodes = pane.childNodes;\r\n        let len = childNodes.length;\r\n        if (len === 0) return;\r\n        let last = childNodes.item(len-1);\r\n        (last as HTMLElement).scrollIntoView();\r\n        */\r\n    }\r\n    private doubleClick = () => {\r\n        var pane = document.getElementById('scrollDiv');\r\n        let main = this.getParent(pane);\r\n        if (!main) return;\r\n        if (main.scrollTop >= main.scrollHeight / 2) {\r\n            this.topIntoView();\r\n        }\r\n        else {\r\n            this.bottomIntoView();\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let that = this;\r\n        let time = new Date();\r\n        function consume(reader: ReadableStreamReader) {\r\n            let total = 0;\r\n            return new Promise(async (resolve, reject) => {\r\n                async function pump() {\r\n                    let ret = await reader.read();\r\n                    let {done, value} = ret;\r\n                    try {\r\n                    //.then(({done, value}) => {\r\n                        function uintToString(uintArray:number[]):string {\r\n                            let encodedString = String.fromCharCode.apply(null, uintArray);\r\n                            try {\r\n                                let decodedString = decodeURIComponent(escape(encodedString));\r\n                                return decodedString;\r\n                            }\r\n                            catch (err) {\r\n                                return '++?' + encodedString + '?++'; // + ' - ' + err.message;\r\n                            }\r\n                        }        \r\n                        if (done) {\r\n                            // that.scrollToBottom();\r\n                            /*\r\n                            that.setState({\r\n                                seconds: (new Date().getTime() - time.getTime()),\r\n                            });\r\n                            */\r\n                            that.resultSections.seconds = (new Date().getTime() - time.getTime());\r\n                            let {uploadOrDeploy, services} = that.props;\r\n                            let now = Date.now() / 1000;\r\n                            for (let service of services) {\r\n                                switch (uploadOrDeploy) {\r\n                                    case 'upload': service.compile_time = now; break;\r\n                                    case 'deploy': service.deploy_time = now; break;\r\n                                }\r\n                            }\r\n                            resolve();\r\n                            return;\r\n                        }\r\n                        let text = uintToString(value);\r\n                        that.resultSections.add(text);\r\n                        /*\r\n                        that.setState({\r\n                            sections: that.resultSections.sections,\r\n                        });\r\n                        */\r\n                        total += value.byteLength;\r\n                        //that.scrollToBottom();\r\n                        await pump();\r\n                    }\r\n                    catch (err) {\r\n                        reject(err);\r\n                    }\r\n                    //}).catch(reject)\r\n                }\r\n                await pump();\r\n            });\r\n        }\r\n        this.startAutoScrollToBottom();\r\n        try {\r\n            await consume(this.props.res.body.getReader());\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n        }\r\n        finally {\r\n            this.endAutoScrollToBottom();\r\n        }\r\n    }\r\n    private renderText = (section:Section, index:number):JSX.Element => {\r\n        return <section.render key={index} />;\r\n/*\r\n        if (Array.isArray(section)) {\r\n            let groupId = 'text-group-' + index;\r\n            let line = section[0];\r\n            let title: string;\r\n            let p0 = line.indexOf('\\n'), p:number;\r\n            if (p0 === 0) {\r\n                p0 = 1;\r\n                p = line.indexOf('\\n', p0);\r\n            }\r\n            else {\r\n                p = line.indexOf('\\n');\r\n            }\r\n            if (p < 0) p = undefined;\r\n            else {\r\n                let l = line.indexOf('(');\r\n                if (l < p) p = l;\r\n            }\r\n            title = line.substring(p0, p);\r\n\r\n            let onClick = () => {\r\n                let c = this.state.collaps[index];\r\n                if (c === false) c = true;\r\n                else c = false;\r\n                this.setState(prevState => ({\r\n                    collaps: {\r\n                        ...prevState.collaps,\r\n                        [index]: c,\r\n                    },\r\n                }));\r\n            }\r\n            let titleIcon:any, content:any;\r\n            if (this.state.collaps[index]===false) {\r\n                titleIcon = <FA name='arrow-circle-up' className='text-success' />;\r\n                content = <div>\r\n                    {\r\n                        section.map((v, i) => {\r\n                            if (v.trim().length === 0) return null;\r\n                            return <pre style={{whiteSpace: 'pre-wrap'}} key={index + '-' + i}>{v}</pre>\r\n                        })\r\n                    }\r\n                </div>;\r\n            }\r\n            else {\r\n                titleIcon = <FA name='arrow-circle-down' className='text-success' />;\r\n            }\r\n            return <React.Fragment key={index}>\r\n                <div className=\"cursor-pointer text-primary\" onClick={onClick}>{titleIcon} <u>{title}</u></div>\r\n                {content}\r\n            </React.Fragment>;\r\n        }\r\n        if (section.trim().length === 0) return null;\r\n        let parts = section.split('\\n');\r\n        return <React.Fragment key={index}>\r\n            {\r\n                parts.map((v, i) => v.length === 0?\r\n                    <div key={i}>&nbsp;</div> :\r\n                    <div key={i}>{v}</div>\r\n                )\r\n            }\r\n        </React.Fragment>;\r\n*/\r\n    }\r\n    render() {\r\n        let {uq, actionName} = this.props;\r\n        let {seconds, sections, hasError} = this.resultSections;\r\n        let finish = hasError === true? '发生错误' : '完成';\r\n        let header = uq.name + ' - ' + actionName + (seconds>=0? finish : \"中...\");\r\n        return <Page header={header} back=\"close\">\r\n            <div id='topDiv' />\r\n            <div id='scrollDiv'\r\n                onDoubleClick={this.doubleClick} \r\n                className='py-2 px-3' \r\n                style={{wordWrap: 'break-word', whiteSpace: 'normal'}}>\r\n                {sections.map(this.renderText)}\r\n            </div>\r\n            {seconds>=0? <div className='px-3 pb-3' style={{color: 'red', fontWeight: 'bold'}}>\r\n                {actionName}完成。共计用时{Math.floor(seconds/1000)}秒\r\n            </div> : undefined}\r\n            <div id='bottomDiv' />\r\n        </Page>;\r\n    }\r\n}","import * as React from 'react';\r\nimport {nav, Page} from 'tonva';\r\nimport {IdPick, IdPickFace} from 'tonva-form';\r\nimport {List, SearchBox} from 'tonva';\r\n\r\nexport interface IdPickProps {\r\n    caption: string;\r\n    searchPlaceHolder?: string;\r\n    candidateItems: ((params:any, key:string) => Promise<any[]>) | any[];\r\n    moreCandidates: () => Promise<void>;\r\n    row: (item:any, index:number) => JSX.Element;\r\n}\r\n\r\nexport function createIdPick(props: IdPickProps):IdPick {\r\n    return function(face: IdPickFace, params: any):Promise<void> {\r\n        return new Promise<void>((resolve, reject) => {\r\n            nav.push(<IdPickPage resolve={resolve} face={face} params={params} {...props} />);\r\n        });\r\n    }\r\n}\r\n\r\ninterface IdPickPageProps extends IdPickProps {\r\n    face: IdPickFace;\r\n    resolve: (item?: any) => void;\r\n    params: any;\r\n}\r\ninterface IdPickPageState {\r\n    items?: any[];\r\n}\r\n\r\nclass IdPickPage extends React.Component<IdPickPageProps, IdPickPageState> {\r\n    private items:any[];\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: null,\r\n        }\r\n        this.itemClick = this.itemClick.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n    }\r\n    async componentDidMount() {\r\n        let {face, candidateItems, params} = this.props;\r\n        this.setState({\r\n            items: Array.isArray(candidateItems)? candidateItems : await candidateItems(params, ''),\r\n        });\r\n    }\r\n    itemClick(item:any) {\r\n        let {resolve} = this.props;\r\n        resolve(item);\r\n        nav.pop();\r\n    }\r\n    async onSearch(key: string) {\r\n        //alert('search ' + key);\r\n        //await store.dev.searchServer.first(key)\r\n        let {candidateItems, params} = this.props;\r\n        if (typeof candidateItems === 'function') {\r\n            let ret = await candidateItems(params, key);\r\n            this.setState({items: ret});\r\n        }\r\n    }\r\n    render() {\r\n        let {caption, row, searchPlaceHolder} = this.props;\r\n        return <Page header={caption} back=\"close\">\r\n            <div className=\"container\">\r\n                <SearchBox className=\"my-2\" \r\n                    onSearch={this.onSearch} \r\n                    placeholder={searchPlaceHolder}\r\n                    maxLength={100} />\r\n            </div>\r\n            <List items={this.state.items} item={{onClick:this.itemClick, render:row}} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { DevModel } from 'model';\r\nimport { IdPickProps, createIdPick } from 'createIdPick';\r\nimport { store } from 'store';\r\nimport { Field, FormRow, StringFace, TextAreaFace, TonvaForm, SubmitResult } from 'tonva-form';\r\nimport { UQController } from './uqController';\r\nimport { VPage, nav, Page } from 'tonva';\r\n\r\nconst ServerCaption = (item:DevModel.Server) => {\r\n    let {discription, cloud, ip} = item;\r\n    return <>{discription} {cloud} {ip}</>;\r\n}\r\n\r\nconst idPickServerProps: IdPickProps = {\r\n    caption: '选择服务器',\r\n    searchPlaceHolder: '搜索服务器',\r\n    candidateItems: async (params:any, key:string) => {\r\n        await store.dev.searchServer.first(key);\r\n        return store.dev.searchServer.items;\r\n    },\r\n    moreCandidates: async () => {\r\n        await store.dev.searchServer.more();\r\n    },\r\n    row: (item:DevModel.Server, index:number) => {\r\n        return <div className=\"px-3 py-2\"><ServerCaption {...item} /></div>;\r\n    },\r\n};\r\n\r\nconst urlField:Field = {name: 'url', type: 'string', required:true, maxLength:200};\r\nconst urlTestField:Field = {name: 'urlTest', type: 'string', required:false, maxLength:200};\r\nconst serverField:Field = {name: 'server', type: 'id'};\r\nconst dbTypeField:Field = {name: 'db_type', type: 'string', maxLength:20, defaultValue:'mysql'};\r\nconst dbField:Field = {name: 'db', type: 'string', maxLength:50, required: true};\r\nconst connectionField:Field = {name:'connection', type:'string', maxLength:250};\r\n\r\nconst urlRow = {\r\n    label: 'URL',\r\n    field: urlField,\r\n};\r\n\r\nconst urlRowTest = {\r\n    label: 'URL-Test',\r\n    field: urlTestField,\r\n    face: {placeholder:'如果同URL，请不要输入'}\r\n};\r\n\r\nconst serverRow = {\r\n    label: '服务器', \r\n    field: serverField,\r\n    face: {\r\n        type: 'pick-id', \r\n        initCaption: '请选择服务器', \r\n        pick: createIdPick(idPickServerProps), //this.idPick,\r\n        fromPicked: (item:DevModel.Server)=>{\r\n            return {\r\n                id: item.id, \r\n                caption: <ServerCaption {...item} />,\r\n            };\r\n        },\r\n        itemFromId: (id:number)=>store.cacheServers.get(id),\r\n    },\r\n};\r\n/*\r\nconst dbTypeRow:FormRow = {\r\n    label: '数据库类型',\r\n    field: dbTypeField,\r\n    face: {\r\n        type: 'string',\r\n        readonly: true,\r\n    } as StringFace\r\n};\r\n*/\r\nconst dbRow = {\r\n    label: '数据库名字',\r\n    field: dbField,\r\n};\r\n/*\r\nconst connectionRow = {\r\n    label: '连接字符串',\r\n    field: connectionField,\r\n    face: {\r\n        type: 'textarea',\r\n        maxLength: 250,\r\n        rows: 8,\r\n    } as TextAreaFace,\r\n};\r\n*/\r\nexport class NewServicePage extends VPage<UQController> {\r\n    private tonvaForm:TonvaForm;\r\n    private formRows:FormRow[] = [\r\n        urlRow,\r\n        urlRowTest,\r\n        serverRow,\r\n        //dbTypeRow,\r\n        dbRow,\r\n        //connectionRow\r\n    ];\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n    private onSubmit = async (values:any):Promise<SubmitResult | undefined> => {\r\n        /*\r\n        if (values.url.indexOf('/uq/')<0) {\r\n            this.tonvaForm.formView.setError('url', 'service url 必须包含/uq/');\r\n            return;\r\n        }\r\n        */\r\n        values.type = 2; // uq type, to be removed\r\n        values.bindId = this.controller.uq.id;\r\n        let ret = await this.controller.saveService(values);\r\n        if (ret === 0) {\r\n            /*\r\n            if (this.tonvaForm !== undefined) {\r\n                this.tonvaForm.formView.setError('url', '已经有Service使用这个url');\r\n            }\r\n            */\r\n            return;\r\n        }\r\n        nav.pop();\r\n        return;\r\n    }\r\n    private page = () => {\r\n        return <Page header=\"新建Service\">\r\n            <TonvaForm ref={t=>this.tonvaForm=t} className=\"m-3\" formRows={this.formRows} onSubmit={this.onSubmit} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { Page, VPage, nav } from 'tonva';\r\nimport { UQController } from './uqController';\r\nimport { DevModel } from 'model';\r\nimport { Prop, PropGrid } from 'tonva';\r\nimport { StringValueEdit, ServerSpan, TextValueEdit } from 'tools';\r\n\r\nexport class ServicePage extends VPage<UQController> {\r\n    @observable private service: DevModel.Service;\r\n    async open(service: DevModel.Service) {\r\n        this.service = service;\r\n        this.openPage(this.page);\r\n    }\r\n    private async changeProp(prop:string, value:any):Promise<any> {\r\n        return await this.controller.changeServiceProp(this.service, prop, value);\r\n    }\r\n    private onUrlChanged = async (value:any, orgValue:any):Promise<string|void> => {\r\n        /*\r\n        if ((value as string).indexOf('/uq/')<0) {\r\n            return 'URL必须包含/uq/';\r\n        }\r\n        */\r\n        let ret = await this.changeProp('url', value);\r\n        if (ret === 0) {\r\n            //return 'URL已经被使用了';\r\n            return;\r\n        }\r\n        this.service.url = value;\r\n    }\r\n    private onUrlTestChanged = async (value:any, orgValue:any):Promise<string|void> => {\r\n        /*\r\n        if ((value as string).indexOf('/uq/')<0) {\r\n            return 'URL必须包含/uq/';\r\n        }\r\n        */\r\n        let ret = await this.changeProp('urlTest', value);\r\n        if (ret === 0) {\r\n            //return 'URL已经被使用了';\r\n            return;\r\n        }\r\n        this.service.urlTest = value;\r\n    }\r\n    private onDbChanged = async (value:any, orgValue:any):Promise<string|void> => {\r\n        let ret = await this.changeProp('db', value);\r\n        if (ret === 0) {\r\n            return 'Db已经被使用了';\r\n        }\r\n        this.service.db = value;\r\n    }\r\n    /*\r\n    private onDbTypeChanged = async (value:string, orgValue:any):Promise<string|void> => {\r\n        if (value === undefined || value === null) return;\r\n        if (value.toLowerCase().trim() !== 'mysql') return '目前只支持mysql';\r\n        let ret = await this.changeProp('db_type', value);\r\n        this.service.db_type = value;\r\n    }\r\n    private onConnectionChanged = async (value:string, orgValue:any):Promise<string|void> => {        \r\n        await this.changeProp('connection', value);\r\n        this.service.connection = value;\r\n    }\r\n    */\r\n    private onDeleteClick = async () => {\r\n        if (confirm(\"真的要删除Service吗？删除了不可恢复，需要重新录入。\")!==true) return;\r\n        await this.controller.delService(this.service);\r\n        nav.pop();\r\n    }\r\n    private page = () => {\r\n        let {uq} = this.controller;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'string',\r\n                name: 'url',\r\n                label: 'URL',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"修改URL\"\r\n                    value={this.service.url}\r\n                    onChanged={this.onUrlChanged} />)\r\n            },\r\n            {\r\n                type: 'string',\r\n                name: 'urlTest',\r\n                label: 'URL-Test',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"修改URL-Test\"\r\n                    value={this.service.urlTest}\r\n                    onChanged={this.onUrlTestChanged} />)\r\n            },\r\n            {\r\n                type: 'component',\r\n                label: '服务器',\r\n                component: <ServerSpan id={this.service.server} />\r\n            },\r\n            /*\r\n            {\r\n                type: 'string',\r\n                name: 'db_type',\r\n                label: '数据库类型',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"数据库类型\"\r\n                    value={this.service.db_type}\r\n                    onChanged={this.onDbTypeChanged} />)\r\n            },\r\n            */\r\n            {\r\n                type: 'string',\r\n                name: 'db',\r\n                label: '数据库名',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"数据库名字\"\r\n                    value={this.service.db}\r\n                    onChanged={this.onDbChanged} />)\r\n            },\r\n            /*\r\n            {\r\n                type: 'string',\r\n                name: 'connection',\r\n                label: '连接字符串',\r\n                onClick: ()=>nav.push(<TextValueEdit\r\n                    title=\"连接字符串\"\r\n                    value={this.service.connection}\r\n                    onChanged={this.onConnectionChanged} />)\r\n            },\r\n            */\r\n        ];\r\n        let right = <button onClick={this.onDeleteClick} className=\"btn btn-success\">删除</button>;\r\n        return <Page header={'UQ - ' + uq.name} right={right}>\r\n            <PropGrid rows={rows} values={this.service} />\r\n        </Page>\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { UQController } from './uqController';\r\nimport { VPage, nav, Page } from 'tonva';\r\nimport { SubmitResult, TonvaForm } from 'tonva-form';\r\n\r\nconst formRows = [\r\n    {\r\n        label: '名称', \r\n        field: {name: 'name', type: 'string', maxLength: 100, required: true},\r\n    },\r\n    {\r\n        label: '描述',\r\n        field: {name: 'discription', type: 'string', maxLength: 250},\r\n        face: {type: 'textarea'}\r\n    },\r\n    //{\r\n    //    label: '入口',\r\n    //    field: {name: 'access', type: 'string', maxLength: 250},\r\n    //    face: {type: 'textarea', placeholder: '逗号分隔的入口名'}\r\n    //},\r\n];\r\n\r\n\r\nexport abstract class EditBasePage extends VPage<UQController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n    protected onSubmit = async (values:any):Promise<SubmitResult> => {\r\n        await this.controller.saveUq(values);\r\n        nav.pop();\r\n        return;\r\n    }\r\n    protected page: ()=>JSX.Element;\r\n    protected form(initValues:any):JSX.Element {\r\n        return <TonvaForm\r\n            className=\"m-3\"\r\n            formRows={formRows} \r\n            onSubmit={this.onSubmit} initValues={initValues} />\r\n    }\r\n}\r\n\r\nexport class EditPage extends EditBasePage {\r\n    protected page = () => {\r\n        let {uq} = this.controller;\r\n        let {name} = uq;\r\n        return <Page header={'修改UQ - ' + name} back=\"close\">\r\n            {this.form(uq)}\r\n        </Page>;\r\n    }\r\n}\r\n\r\nexport class NewPage extends EditBasePage {\r\n    protected page = () => {\r\n        return <Page header={'新建UQ'} back=\"close\">\r\n            {this.form({})}\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, nav, EasyTime } from 'tonva';\r\nimport { UQController } from './uqController';\r\nimport { IdDates, UnitSpan, ServerSpan } from 'tools';\r\nimport { Prop, Media, LMR, FA, PropGrid, Muted, List, EasyDate, DropdownActions } from 'tonva';\r\nimport { DevModel } from 'model';\r\nimport { EditPage } from './editPage';\r\nimport { store } from 'store';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class UQPage extends VPage<UQController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private editItem = async () => {\r\n        await this.openVPage(EditPage);\r\n        //nav.push(<EditAppPage {...this.props} />);\r\n    }\r\n\r\n    private deleteItem = async () => {\r\n        if (confirm('真的要删除UQ吗？') === true) {\r\n            await this.controller.deleteUq();\r\n            nav.pop();\r\n        }\r\n    }\r\n\r\n    private page = ():JSX.Element => {\r\n        let {onUqUpload, onUqDeploy, serviceClick, uq, services} = this.controller;\r\n        let {isOwner} = store.unit;\r\n        let {id, name, discription, access, unit, date_init, date_update} = uq;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let menuItems = [\r\n            {caption:'修改UQ', action:this.editItem, icon:'edit' },\r\n            {caption:'删除', action:this.deleteItem, icon:'trash-o' }\r\n        ];\r\n        let right = isOwner>0 && <DropdownActions actions={menuItems} />;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <LMR className=\"py-2\"\r\n                    left={<FA name=\"database\" className=\"text-primary fa-2x mr-3\" />}>\r\n                    <div><b>{name}</b></div>\r\n                    {disp}\r\n                </LMR>\r\n            },\r\n            {\r\n                type: 'component', \r\n                label: '开发号', \r\n                component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> \r\n            },\r\n           '',\r\n           {\r\n                type: 'component', \r\n                label: '测试UQ', \r\n                component: <LMR onClick={onUqUpload} className=\"w-100 py-2 cursor-pointer\" \r\n                    left=\"上传测试UQ代码\" right={<FA className=\"align-self-center\" name=\"chevron-right\" />} />\r\n            },\r\n            {\r\n                type: 'component', \r\n                label: '发布UQ', \r\n                component: <LMR onClick={onUqDeploy} className=\"w-100 py-2 cursor-pointer\" \r\n                    left=\"发布UQ服务器\" right={<FA className=\"align-self-center\" name=\"chevron-right\" />} />\r\n            },\r\n            /*\r\n            {type: 'component', label: 'ACCESS', component: <div className=\"py-2\">{\r\n                access? \r\n                    access.split(',').join(', ')\r\n                    : <Muted>(全)</Muted>\r\n            }</div> },\r\n            */\r\n        ];\r\n        let btnAddService = isOwner>0 && <button\r\n            className=\"btn btn-outline-primary btn-sm\"\r\n            onClick={()=>this.controller.showNewServicePage()}>\r\n            增加\r\n        </button>;\r\n        \r\n        let onServiceClick:any;\r\n        if (isOwner>0) onServiceClick = serviceClick;\r\n\r\n        return <Page header={'UQ - ' + name} right={right}>\r\n            <PropGrid rows={rows} values={uq} />\r\n            <div className=\"d-flex mx-3 mt-3 mb-1 align-items-end\">\r\n                <Muted style={{display:'block', flex:1}}>Service</Muted>\r\n                {btnAddService}\r\n            </div>\r\n            <List items={services} item={{\r\n                render:(service:DevModel.Service, index:number)=><this.renderService service={service} index={index} />, \r\n                onClick:onServiceClick\r\n            }} />\r\n        </Page>;\r\n    }\r\n    private renderService = observer((props: {service:DevModel.Service; index:number}):JSX.Element => {\r\n        let {service, index} = props;\r\n        let {url, server, db, compile_time, deploy_time} = service;\r\n        let compile = !compile_time?\r\n            <Muted>未测试</Muted> \r\n            :\r\n            <><Muted>测试: </Muted><EasyTime date={compile_time}/></>;\r\n        let deploy = !deploy_time?\r\n            <Muted>未发布</Muted> \r\n            :\r\n            <><Muted>发布: </Muted><EasyTime date={deploy_time}/></>;\r\n\r\n        return <LMR className=\"d-flex w-100 align-items-center cursor-pointer py-2 px-3\"\r\n            right={<small>{compile}<br/>{deploy}</small>}\r\n            >\r\n            <div>\r\n                <div>{url}</div>\r\n                <Muted><ServerSpan id={server} /></Muted>\r\n            </div>\r\n        </LMR>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page } from 'tonva';\r\nimport { UQController } from './uqController';\r\nimport { List, LMR, Badge, Muted, FA } from 'tonva';\r\nimport { DevModel } from 'model';\r\nimport { NewPage } from './editPage';\r\nimport { store } from 'store';\r\n\r\nexport class ListPage extends VPage<UQController> {\r\n    async open(param:any) {\r\n        this.openPage(this.page);\r\n    }\r\n    private newItem = () => {\r\n        this.controller.uq = undefined;\r\n        this.openVPage(NewPage);\r\n    }\r\n    private page = ():JSX.Element => {\r\n        let {uqList: list, listRowClick} = this.controller;\r\n        let {isOwner} = store.unit;\r\n        let right = isOwner>0 && <button className='btn btn-secondary btn-sm' onClick={()=>this.newItem()}><FA name=\"plus\" /></button>;\r\n        return <Page header=\"UQ\" right={right}>\r\n            <List items={list} item={{render: this.listRow, onClick: listRowClick}} />\r\n        </Page>\r\n    }\r\n    private listRow = (item:DevModel.UQ):JSX.Element => {\r\n        let {name, discription, service_count} = item;\r\n        return <LMR className=\"py-1 px-3 align-items-center\"\r\n            left={<FA name=\"database\" className=\"text-primary fa-lg\" />}\r\n            right={<>{service_count}</>}>\r\n            <div className=\"py-2 px-3\">\r\n                <div><b>{name}</b></div>\r\n                <div><Muted>{discription}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { observable } from 'mobx';\r\nimport { nav, Controller } from 'tonva';\r\nimport { DevModel } from '../../model';\r\nimport { UqUpload, UqUploadProps, UqDeploy } from './uqUpload';\r\nimport { devApi } from 'api';\r\nimport { NewServicePage } from './newServicePage';\r\nimport { ServicePage } from './servicePage';\r\nimport { UQPage } from './uqPage';\r\nimport { ListPage } from './listPage';\r\n\r\nexport class UQController extends Controller {\r\n    private unitId: number;\r\n    uq: DevModel.UQ;\r\n    access: string;\r\n    entities: string;\r\n    @observable uqList: DevModel.UQ[];\r\n    @observable services: DevModel.Service[];\r\n    protected async internalStart(unitId:any) {\r\n        this.unitId = unitId;\r\n        this.uqList = await devApi.uqs(this.unitId);\r\n        this.openVPage(ListPage);\r\n    }\r\n\r\n    listRowClick = async (item:DevModel.UQ) => {\r\n        this.uq = item;\r\n        await this.loadUqEntities(item.id);\r\n        this.openVPage(UQPage);\r\n    }\r\n\r\n    private async loadUqEntities(uqId: number) {\r\n        let ret = await devApi.uqGetEntities(this.unitId, uqId);\r\n        let r0 = ret[0][0];\r\n        this.access = r0.access;\r\n        this.entities = r0.entities;\r\n        this.services = ret[1];\r\n    }\r\n\r\n    serviceClick = (service: DevModel.Service) => {\r\n        this.openVPage(ServicePage, service);\r\n    }\r\n\r\n    onUqUpload = async() => {\r\n        let onDispose = () => {}\r\n        nav.push(<UqUpload uq={this.uq} services={this.services} />, onDispose);\r\n    }\r\n\r\n    onUqDeploy = async() => {\r\n        let onDispose = () => {}\r\n        nav.push(<UqDeploy uq={this.uq} services={this.services} />, onDispose);\r\n    }\r\n\r\n    saveUq = async (values: DevModel.UQ) => {\r\n        let uq: DevModel.UQ;\r\n        if (this.uq === undefined) {\r\n            uq = _.clone(values);\r\n        }\r\n        else {\r\n            uq = _.clone(this.uq);\r\n            _.merge(uq, values);\r\n        }\r\n        uq.unit = this.unitId;\r\n        let ret = await devApi.saveUq(uq);\r\n        uq.id = ret;\r\n        this.uqList.push(uq);\r\n    }\r\n\r\n    deleteUq = async () => {\r\n        await devApi.delUq(this.unitId, this.uq.id);\r\n        let index = this.uqList.findIndex(v => v.id === this.uq.id);\r\n        if (index >= 0) this.uqList.splice(index);\r\n    }\r\n\r\n    async changeServiceProp(service: DevModel.Service, prop:string, value:any):Promise<any> {\r\n        return await devApi.changeServiceProp(this.unitId, service.id, prop, value);\r\n    }\r\n\r\n    async saveService(service: DevModel.Service):Promise<number> {\r\n        let svc = _.clone(service);\r\n        svc.unit = this.unitId;\r\n        if (!svc.urlTest) svc.urlTest = '-';\r\n        let ret = await devApi.saveService(svc);\r\n        svc.id = ret;\r\n        this.services.push(svc);\r\n        return ret;\r\n    }\r\n\r\n    async delService(service: DevModel.Service) {\r\n        await devApi.delService(this.unitId, service.id);\r\n        let index = this.services.findIndex(v => v.id == service.id);\r\n        if (index >= 0) this.services.splice(index);\r\n    }\r\n\r\n    showNewServicePage = async () => {\r\n        await this.openVPage(NewServicePage);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport _ from 'lodash';\r\nimport {EasyDate, Media, \r\n    Prop, ListProp, PropGrid, List, SearchBox, LMR, Badge, Muted, FA} from 'tonva';\r\nimport {UnitSpan, IdDates, ServerSpan} from '../tools';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {DevModel} from '../model';\r\nimport {store} from '../store';\r\nimport {Row} from './row';\r\nimport {ObjViewProps} from './ObjViewProps';\r\n\r\n\r\nconst busIcon = 'cogs';\r\n\r\n@observer\r\nclass Info extends React.Component<DevModel.Bus> {\r\n    async componentDidMount() {\r\n        //await store.dev.buses.loadCurApis();\r\n    }\r\n    render() {\r\n        let {unit, owner, name, discription, mine, schema, version, date_init, date_update} = this.props;\r\n        let disp = <small>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </small>;\r\n        let caption:any = owner + ' / ' + name;\r\n        if (mine === 1) {\r\n            caption = <b>{caption}</b>;\r\n        }\r\n        let rows:Prop[] = [\r\n            '',\r\n            {type: 'component', component: <LMR className=\"py-2\"\r\n                left={<FA className=\"pt-2 pr-1 text-primary\" name={busIcon} size=\"3x\" />}>\r\n                <div className=\"pl-3\">\r\n                    <div className=\"mb-2\">{caption}</div>\r\n                    {disp}\r\n                </div>\r\n            </LMR>},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            {\r\n                type: 'component', \r\n                label: '版本号', \r\n                component: <LMR className=\"py-2 w-100\" right={<small className=\"text-muted\"><EasyDate date={date_update}/></small>} >{version}</LMR> },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                label: 'Schema',\r\n                vAlign: 'stretch',\r\n                component: <SchemaView />,\r\n            },\r\n        ];\r\n        return <div>\r\n            <PropGrid rows={rows} values={this.props} />\r\n        </div>\r\n    }\r\n}\r\n\r\n@observer\r\nexport class SchemaView extends React.Component {\r\n    render() {\r\n        let bus = store.dev.buses.cur;\r\n        if (bus === null) return '...';\r\n        let content = bus.schema;\r\n        return <div className=\"d-flex py-2 w-100 align-items-center\" style={{flex:1}}>\r\n            <pre>\r\n                {content}\r\n            </pre>\r\n        </div>;\r\n\r\n    }\r\n}\r\n\r\nconst busesProps:ObjViewProps<DevModel.Bus> = {\r\n    title: 'BUS',\r\n    formRows: [\r\n        {\r\n            label: '名称', \r\n            field: {name: 'name', type: 'string', maxLength: 100, required: true},\r\n        },\r\n        {\r\n            label: '描述',\r\n            field: {name: 'discription', type: 'string', maxLength: 250},\r\n            face: {type: 'textarea'}\r\n        },\r\n        {\r\n            label: 'Schema',\r\n            field: {name: 'schema', type: 'string', maxLength: 2500},\r\n            face: {type: 'textarea', rows: 8}\r\n        },\r\n    ],\r\n    row: (item:DevModel.Bus):JSX.Element => {\r\n        let {owner, name, discription, mine} = item;\r\n        let icon = appIcon;\r\n        let main = owner + ' / ' + name;\r\n        return <LMR className=\"py-2 px-3 align-items-stretch\"\r\n            left={<FA className=\"pt-2 pr-1 text-primary\" name='cogs' size=\"lg\" />}>\r\n            <div className=\"px-3\">\r\n                <div>{mine===1? <b>{main}</b> : main}</div>\r\n                <div><Muted>{discription}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    },\r\n    items: ()=>store.dev.buses,\r\n    repeated: {\r\n        name: 'name',\r\n        err: '跟已有的名称重复',\r\n    },\r\n    info: Info,\r\n    canEdit: bus => bus.mine === 1,\r\n};\r\n\r\nexport default busesProps;\r\n","import * as React from 'react';\r\nimport {Prop, PropGrid, LMR, Muted, FA} from 'tonva';\r\nimport {UnitSpan, IdDates} from '../tools';\r\nimport {DevModel} from '../model';\r\nimport {store} from '../store';\r\nimport {ObjViewProps} from './ObjViewProps';\r\n\r\nclass Info extends React.Component<DevModel.Server> {\r\n    render() {\r\n        let {discription, cloud, ip, unit, date_init, date_update} = this.props;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;        \r\n        //<Media icon={appIcon} main={discription} discription={ip} />},\r\n        let rows:Prop[] = [\r\n            '',\r\n            {type: 'component', component: <LMR className=\"py-2\"\r\n                left={<FA name=\"server\" className=\"text-primary fa-2x mr-3\" />}>\r\n                <div><b>{ip}</b></div>\r\n                {disp}\r\n            </LMR>},\r\n            '',\r\n            {type: 'component', label: '开发号', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            {type: 'string', label: '云服务', name: 'cloud'},\r\n        ];\r\n        return <div>\r\n            <PropGrid rows={rows} values={this.props} />\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst serversProps:ObjViewProps<DevModel.Server> = {\r\n    title: 'Server',\r\n    info: Info,\r\n    formRows: [\r\n        {\r\n            label: '描述', \r\n            field: {name: 'discription', type: 'string', maxLength: 50, required: true},\r\n        },\r\n        {\r\n            label: '云服务商', \r\n            field: {name: 'cloud', type: 'string', maxLength: 20, required: true},\r\n        },\r\n        {\r\n            label: 'IP地址', \r\n            field: {name: 'ip', type: 'string', maxLength: 20},\r\n        },\r\n    ],\r\n    row: (item: DevModel.Server):JSX.Element => {\r\n        let {discription, cloud} = item;\r\n        //return <Row main={item.discription} vice={<>{item.cloud}  {item.ip}</>} />;\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n            left={<FA name=\"server\" className=\"text-primary fa-lg\" />}>\r\n            <div className=\"px-3\">\r\n                <div><b>{discription}</b></div>\r\n                <div><Muted>{cloud}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    },\r\n    items: ()=>store.dev.servers,\r\n    repeated: {\r\n        name: 'discription',\r\n        err: '重复的描述',\r\n    }\r\n};\r\n\r\nexport default serversProps;\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page} from 'tonva';\r\nimport {FormRow, TonvaForm, Step, MultiStep, SubmitResult} from 'tonva-form';\r\nimport {DropdownActions, Action, List, FA} from 'tonva';\r\nimport {DevModel} from '../model';\r\nimport { ObjViewProps } from './ObjViewProps';\r\nimport { store } from 'store';\r\n\r\n@observer\r\nexport class ObjView<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    async componentDidMount() {\r\n        await this.props.items().load();\r\n    }\r\n    //converter(item:T):ListItem {\r\n    //    return this.props.converter(item);\r\n    //}\r\n    newItem() {\r\n        this.props.items().cur = undefined;\r\n        nav.push(<New {...this.props} />);\r\n    }\r\n    itemClick = (item:T) => {\r\n        this.props.items().cur = observable(item);\r\n        nav.push(<Info {...this.props} />);\r\n    }\r\n    render() {\r\n        let {title, items} = this.props;\r\n        let {isOwner} = store.unit;\r\n        let right = isOwner>0 && <button className='btn btn-secondary btn-sm' onClick={()=>this.newItem()}><FA name=\"plus\" /></button>;\r\n        return <Page header={title} right={right}>\r\n            <List items={items().items}\r\n                item={{render: this.props.row, onClick: this.itemClick}}\r\n                />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass New<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    async onSubmit(values:any):Promise<SubmitResult> {\r\n        if (await this.props.items().check(values) === false) return;\r\n        let ret = await this.props.items().saveCur(values);\r\n        if (ret === true) {\r\n            nav.pop();\r\n        }\r\n        else {\r\n            let repeated = this.props.repeated;\r\n            //this.formView.setError(repeated.name, repeated.err);\r\n        }\r\n        return;\r\n    }\r\n    render() {\r\n        let content;\r\n        let {title, steps, stepHeader} = this.props;\r\n        let {formRows, items} = this.props;\r\n        if (steps !== undefined) {\r\n            content = <MultiStep className=\"mt-4\" header={stepHeader} steps={steps} first=\"step1\" onSubmit={this.onSubmit} />;\r\n        }\r\n        else if (formRows !== undefined) {\r\n            content = <TonvaForm \r\n                className=\"m-3\"\r\n                formRows={formRows} \r\n                onSubmit={this.onSubmit} initValues={items().cur} />;\r\n        }\r\n        else {\r\n            content = 'ObjViewProps: no steps and no formRows';\r\n        }\r\n        return <Page header={'新增'+title}>\r\n            {content}\r\n        </Page>\r\n    }\r\n}\r\n\r\n@observer\r\nclass Info<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    private menuItems = [\r\n        {caption:'修改' + this.props.title, action:this.editItem.bind(this), icon:'edit' },\r\n        {caption:'删除', action:this.deleteItem.bind(this), icon:'trash-o' }\r\n    ];\r\n    async deleteItem() {\r\n        if (confirm('真的要删除吗？系统删除时并不会检查相关引用，请谨慎') === true) {\r\n            await this.props.items().del();\r\n            nav.pop();\r\n        }\r\n    }\r\n    editItem() {\r\n        nav.push(<Edit {...this.props} />);\r\n    }\r\n    render() {\r\n        let item = this.props.items().cur;\r\n        let actions = [];\r\n        let ex = this.props.extraMenuActions;\r\n        if (ex !== undefined) actions.push(...ex);\r\n        actions.push(...this.menuItems);\r\n        let canEdit = this.props.canEdit;\r\n        let right:any;\r\n        if (canEdit && canEdit(item) === true) {\r\n            right = <DropdownActions actions={actions} />;\r\n        }\r\n        return <Page header={this.props.title + ' - 详细资料'} right={right}>\r\n            <this.props.info {...item} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass Edit<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    private actions = [\r\n        {caption:'删除', action:this.deleteItem.bind(this), icon:'trash-o' }\r\n    ];\r\n    constructor(props: ObjViewProps<T>) {\r\n        super(props);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    componentWillMount() {\r\n    }\r\n    async onSubmit(values:any):Promise<SubmitResult> {\r\n        if (await this.props.items().check(values) === false) return;\r\n        await this.props.items().saveCur(values);\r\n        nav.pop();\r\n        return;\r\n    }\r\n    async deleteItem() {\r\n        if (confirm('真的要删除吗？系统删除时并不会检查相关引用，请谨慎') === true) {\r\n            await this.props.items().del();\r\n            nav.pop();\r\n        }\r\n    }\r\n    render() {\r\n        let right = <DropdownActions actions={this.actions} />\r\n        return <Page header={'修改 '+this.props.title} right={right} back=\"close\">\r\n            <TonvaForm \r\n                className=\"m-3\"\r\n                formRows={this.props.formRows} \r\n                onSubmit={this.onSubmit} initValues={this.props.items().cur} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from 'tonva';\r\nimport { List, SearchBox, LMR, FA } from 'tonva';\r\nimport { UsersController, UserApps, AppUsers } from './cUsers';\r\n\r\nexport class VApps extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private renderRow = (appUsers: AppUsers, index:number):JSX.Element => {\r\n        let {app, more, users} = appUsers;\r\n        let {id, name, discription} = app;\r\n        let right = <small className=\"text-muted\">{discription}</small>;\r\n        return <div className=\"d-block px-3 py-2\">\r\n            <LMR className=\"mb-2\" right={right}>\r\n                <FA name=\"address-card-o\" className=\"text-primary mr-3\" />\r\n                <b>{name}</b>\r\n            </LMR>\r\n            <div>\r\n                <small className=\"text-muted\">用户: </small>\r\n                {users.length===0?\r\n                    '[无]':\r\n                    users.map(u => u.assigned || u.nick || u.name).join(', ') + (more===true? ' ...' : '')}\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {appUsersList, searchApp, onAppsClick} = this.controller;\r\n        let searchBox = <SearchBox className=\"w-100 pr-1\" \r\n            onSearch={searchApp} \r\n            placeholder=\"搜索App\" \r\n            allowEmptySearch={true} />;\r\n        return <Page header={searchBox}>\r\n            <List items={appUsersList} \r\n                item={{render: this.renderRow, onClick:onAppsClick,  key: (item=>item.app.id)}} />\r\n        </Page>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from 'tonva';\r\nimport { List, SearchBox, LMR, FA } from 'tonva';\r\nimport { UsersController, UserApps } from './cUsers';\r\n\r\nexport class VUsers extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private renderRow = (userApps: UserApps, index:number):JSX.Element => {\r\n        let {user, apps} = userApps;\r\n        let {id, name, nick, icon, assigned} = user;\r\n        return <div className=\"d-block px-3 py-2\">\r\n            <div className=\"mb-2\">\r\n                <FA name=\"user-o\" className=\"text-primary mr-3\" />\r\n                <b>{assigned || nick || name}</b>\r\n            </div>\r\n            <div>\r\n                <small className=\"text-muted\">App: </small>\r\n                {apps.length===0?'[无]':apps.map(a => a.name).join(', ')}\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {userAppsList, searchUser, onUsersClick} = this.controller;\r\n        let searchBox = <SearchBox className=\"w-100 pr-1\" \r\n            onSearch={searchUser} \r\n            placeholder=\"搜索用户\" \r\n            allowEmptySearch={true} />;\r\n        return <Page header={searchBox}>\r\n            <List items={userAppsList} \r\n                item={{render: this.renderRow, onClick:onUsersClick, key: (item=>item.user.id)}} />\r\n        </Page>;\r\n    });\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from 'tonva';\r\nimport { List } from 'tonva';\r\nimport { UsersController, User } from './cUsers';\r\n\r\nexport class VApp extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curApp, curAppUsers, onAppEditUsers} = this.controller;\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={()=>onAppEditUsers()}>增减用户</button>;\r\n        return <Page header={'App - ' + (curApp.name)} right={right}>\r\n            <List items={curAppUsers} item={{render:this.renderApp}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderApp = (user: User, index:number):JSX.Element => {\r\n        let {name, nick, assigned} = user;\r\n        let content:any;\r\n        if (assigned)\r\n            content = <span>{assigned} &nbsp; <small className=\"text-muted\">{name}</small></span>;\r\n        else if (nick)\r\n            content = <span>{nick} &nbsp; <small className=\"text-muted\">{name}</small></span>;\r\n        else\r\n            content = <>{name}</>\r\n        return <div className=\"px-3 py-2\">{content}</div>\r\n    }\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from 'tonva';\r\nimport { List, SearchBox, LMR } from 'tonva';\r\nimport { UsersController, UserApps, AppUsers, App } from './cUsers';\r\n\r\nexport class VUser extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curUser, curUserApps, onUserEditApps} = this.controller;\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={()=>onUserEditApps()}>增减App</button>;\r\n        return <Page header={'用户 - ' + (curUser.assigned || curUser.nick || curUser.name)}\r\n            right={right}>\r\n            <List items={curUserApps} item={{render:this.renderApp}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderApp = (app: App, index:number):JSX.Element => {\r\n        let {name, discription} = app;\r\n        return <div className=\"px-3 py-2\">{name} {discription}</div>\r\n    }\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from 'tonva';\r\nimport { List, SearchBox, LMR, Muted, FA } from 'tonva';\r\nimport { UsersController, EditUser } from './cUsers';\r\n\r\nexport class VAppEditUsers extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curApp, appEditUsers, onAppEditUsers} = this.controller;\r\n        return <Page header={curApp.name + ' - 增减用户'} >\r\n            <List items={appEditUsers} item={{render:this.renderUser}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderUser = (editUser: EditUser, index:number):JSX.Element => {\r\n        let {name, nick, assigned, bind} = editUser;\r\n        let content:any;\r\n        if (assigned)\r\n            content = <>{assigned} <Muted>{name}</Muted></>;\r\n        else if (nick)\r\n            content = <>{nick} <Muted>{name}</Muted></>;\r\n        else\r\n            content = <>{name}</>\r\n        let right = <input type=\"checkbox\" defaultChecked={bind===1} \r\n            onChange={(evt)=>this.onUserChanged(editUser, evt.target.checked)} />;\r\n        return <LMR className=\"px-3 py-2 align-items-center\" right={right}>\r\n            {content}\r\n        </LMR>\r\n    }\r\n\r\n    private onUserChanged = async (editUser: EditUser, checked:boolean) => {\r\n        await this.controller.bindAppUser(editUser, checked);\r\n        editUser.bind = checked===true? 1: 0;\r\n    }\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from 'tonva';\r\nimport { List, SearchBox, LMR } from 'tonva';\r\nimport { UsersController, UserApps, AppUsers, App, EditApp } from './cUsers';\r\n\r\nexport class VUserEditApps extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curUser, userEditApps, onUserEditApps} = this.controller;\r\n        return <Page header={'增减App - ' + (curUser.assigned || curUser.nick || curUser.name)}>\r\n            <List items={userEditApps} item={{render:this.renderApp}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderApp = (editApp: EditApp, index:number):JSX.Element => {\r\n        let {name, discription, bind} = editApp;\r\n        let right = <input type=\"checkbox\" defaultChecked={bind===1} \r\n            onChange={(evt)=>this.onAppChanged(editApp, evt.target.checked)} />;\r\n        return <LMR className=\"px-3 py-2\" right={right}>\r\n            {name} {discription}\r\n        </LMR>\r\n    }\r\n\r\n    private onAppChanged = async (editApp: EditApp, checked:boolean) => {\r\n        await this.controller.bindUserApp(editApp, checked);\r\n        editApp.bind = checked===true? 1: 0;\r\n    }\r\n}","import * as React from 'react';\r\nimport { VPage, Page, Image, nav } from 'tonva';\r\nimport { UsersController, User } from './cUsers';\r\nimport { SearchBox } from 'tonva';\r\nimport { mainApi } from 'api';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class VAddUser extends VPage<UsersController> {\r\n    @observable private user: User = null;\r\n    //@observable private addedUser: User;\r\n    private searchBox: SearchBox;\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(():JSX.Element => {\r\n        let searchBox = <SearchBox ref={v=>this.searchBox=v}\r\n            className=\"w-100\"\r\n            onSearch={this.onSearch}\r\n            onFocus={this.onSearchFocus}\r\n            placeholder=\"用户全名/手机号/邮箱\"\r\n             />;\r\n        let content:any;\r\n        if (this.user === null) {\r\n        }\r\n        else if (this.user === undefined) {\r\n            content = <div className=\"text-info p-3\">没有找到用户</div>;\r\n        }\r\n        else {\r\n            let {name, nick, icon} = this.user;\r\n            let divUser:any;\r\n            if (nick) {\r\n                divUser = <><div><b>{nick}</b></div><div>{name}</div></>;\r\n            }\r\n            else {\r\n                divUser = <div><b>{name}</b></div>;\r\n            }\r\n            content = <div>\r\n                <div className=\"m-3 p-3 d-flex bg-white\">\r\n                    <Image src={icon} />\r\n                    <div className=\"ml-3\">{divUser}</div>\r\n                </div>\r\n                <div className=\"d-flex justify-content-center\">\r\n                    <button className=\"btn btn-success text-center\" onClick={this.onAddUser}>增加用户</button>\r\n                </div>\r\n            </div>;\r\n        }\r\n        /*\r\n        let divUserAdded:any;\r\n        if (this.addedUser) {\r\n            divUserAdded = <div className=\"p-3\">\r\n                <div>\r\n                    新增用户: {this.addedUser.name} &nbsp; &nbsp; \r\n                    <button className=\"btn btn-success\" \r\n                        onClick={()=>this.controller.onUserEditApps()}>\r\n                        为用户添加App\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        }\r\n        */\r\n        return <Page header={searchBox}>\r\n            {content}\r\n        </Page>;\r\n    })\r\n    //{divUserAdded}\r\n\r\n    private onSearch = async (key:string) => {\r\n        this.user = await mainApi.userFromKey(key);\r\n    }\r\n\r\n    private onAddUser = async () => {\r\n        await this.controller.addUser(this.user.id);\r\n        this.controller.curUser = this.user;\r\n        this.user = null;\r\n        this.searchBox.clear();\r\n        this.replacePage(this.addedPage);\r\n    }\r\n\r\n    private onSearchFocus = () => {\r\n        this.user = null;\r\n        //this.addedUser = null;\r\n        if (this.searchBox) this.searchBox.clear();\r\n    }\r\n\r\n    private onAddApps = () => {\r\n        this.closePage();\r\n        this.controller.onUserEditApps();\r\n    }\r\n\r\n    private onContinueAddUser = () => {\r\n        this.closePage();\r\n        this.controller.onAddUser();\r\n    }\r\n\r\n    private addedPage = () => {\r\n        return <Page header=\"添加成功\">\r\n            <div className=\"p-3 text-center\">\r\n                <div>\r\n                    新增用户: {this.controller.curUser.name}\r\n                </div>\r\n                <div className=\"mt-3\">\r\n                    <button className=\"btn btn-success mr-3\" \r\n                        onClick={this.onAddApps}>\r\n                        为用户添加App\r\n                    </button>\r\n                    <button className=\"btn btn-outline-primary\"\r\n                        onClick={this.onContinueAddUser}>\r\n                        继续添加新用户\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { Controller, VPage, Page } from 'tonva';\r\nimport { mainApi } from 'api';\r\nimport { LMR, FA } from 'tonva';\r\nimport { VApps } from './vApps';\r\nimport { VUsers } from './vUsers';\r\nimport { VApp } from './vApp';\r\nimport { VUser } from './vUser';\r\nimport { VAppEditUsers } from './vAppEditUsers';\r\nimport { VUserEditApps } from './vUserEditApps';\r\nimport { VAddUser } from './VAddUser';\r\nimport { Unit } from 'model';\r\n\r\nexport interface User {\r\n    id: number;\r\n    name: string;\r\n    nick: string;\r\n    icon: string;\r\n    assigned: string;\r\n}\r\nexport interface App {\r\n    id: number;\r\n    name: string;\r\n    discription: string;\r\n}\r\nexport interface UserApps {\r\n    user: User;\r\n    apps: App[];\r\n}\r\nexport interface AppUsers {\r\n    app: App;\r\n    users: User[];\r\n    more: boolean;\r\n}\r\nexport interface EditApp extends App {\r\n    bind: number;   // 0: not bind, 1: bind\r\n}\r\nexport interface EditUser extends User {\r\n    bind: number;  // 0: not bind, 1: bind\r\n}\r\n\r\nexport class UsersController extends Controller {\r\n    private unit: Unit;\r\n    @observable userAppsList: UserApps[];\r\n    @observable appUsersList: AppUsers[];\r\n    curUser: User;\r\n    @observable curUserApps: App[];\r\n    @observable userEditApps: EditApp[];\r\n    curApp: App;\r\n    @observable curAppUsers: User[];\r\n    @observable appEditUsers: EditUser[];\r\n\r\n    protected async internalStart(unit:Unit) {\r\n        this.unit = unit;\r\n        let cn = \"bg-white px-3 py-2 my-1\";\r\n        let appIcon = <FA name=\"columns\" className=\"text-primary mr-3\" />;\r\n        let userIcon = <FA name=\"user-plus\" className=\"text-primary mr-3\" />;\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={this.onAddUser}><FA name=\"plus\" /></button>;\r\n        this.openPage(<Page header={'用户管理 - ' +  this.unit.name} right={right}>\r\n            <LMR className={cn} onClick={this.onAppUsers} left={appIcon}>App</LMR>\r\n            <LMR className={cn} onClick={this.onUserApps} left={userIcon}>用户</LMR>\r\n        </Page>);\r\n    }\r\n\r\n    private onAppUsers = async () => {\r\n        await this.loadAppUsers(undefined);\r\n        this.openVPage(VApps);\r\n    }\r\n\r\n    private onUserApps = async () => {\r\n        await this.loadUserApps(undefined);\r\n        this.openVPage(VUsers);\r\n    }\r\n\r\n    private async loadAppUsers(key:string) {\r\n        let list:AppUsers[] = [];\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        let ret = await mainApi.unitAppUsers(this.unit.id, key, pageStart, pageSize);\r\n        let apps = ret[0];\r\n        let users = ret[1];\r\n        let coll: {[id:number]:AppUsers} = {}\r\n        for (let a of apps) {\r\n            let app:App = {\r\n                id: a.id,\r\n                name: a.name,\r\n                discription: a.discription,\r\n            };\r\n            list.push(coll[a.id] = {app:app, more:false, users:[]});\r\n        }\r\n        for (let u of users) {\r\n            let user:User = {\r\n                id: u.user,\r\n                name: u.name,\r\n                nick: u.nick,\r\n                icon: u.icon,\r\n                assigned: u.assigned\r\n            }\r\n            let item = coll[u.app];\r\n            let {users} = item;\r\n            if (users.length >= 5) {\r\n                item.more = true;\r\n            }\r\n            else {\r\n                users.push(user);\r\n            }\r\n        }\r\n        this.appUsersList = list;\r\n    }\r\n\r\n    private async loadUserApps(key:string) {\r\n        let list:UserApps[] = [];\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        let ret = await mainApi.unitUsers(this.unit.id, key, pageStart, pageSize);\r\n        let users = ret[0];\r\n        let apps = ret[1];\r\n        let coll: {[id:number]:UserApps} = {}\r\n        for (let u of users) {\r\n            let user:User = {\r\n                id: u.id,\r\n                name: u.name,\r\n                nick: u.nick,\r\n                icon: u.icon,\r\n                assigned: u.assigned\r\n            };\r\n            list.push(coll[u.id] = {user:user, apps:[]});\r\n        }\r\n        for (let a of apps) {\r\n            let app:App = {\r\n                id: a.app,\r\n                name: a.name,\r\n                discription: a.discription,\r\n            }\r\n            coll[a.user].apps.push(app);\r\n        }\r\n        this.userAppsList = list;\r\n    }\r\n\r\n    searchUser = async(key:string) => {\r\n        await this.loadUserApps(key);\r\n    }\r\n\r\n    searchApp = async(key:string) => {\r\n        await this.loadAppUsers(key);\r\n    }\r\n\r\n    onAppsClick = async (appUsers: AppUsers) => {\r\n        this.curApp = appUsers.app;\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.curAppUsers = await mainApi.unitOneAppUsers(this.unit.id, this.curApp.id, pageStart, pageSize);\r\n        this.openVPage(VApp);\r\n    }\r\n\r\n    onUsersClick = async (userApps: UserApps) => {\r\n        this.curUser = userApps.user;\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.curUserApps = await mainApi.unitOneUserApps(this.unit.id, this.curUser.id, pageStart, pageSize);\r\n        this.openVPage(VUser);\r\n    }\r\n\r\n    onAppEditUsers = async (key?:string) => {\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.appEditUsers = await mainApi.unitAppEditUsers(this.unit.id, this.curApp.id, key, pageStart, pageSize);\r\n        this.openVPage(VAppEditUsers);\r\n    }\r\n\r\n    onAddUser = () => {\r\n        this.openVPage(VAddUser);\r\n    }\r\n\r\n    onUserEditApps = async (key?:string) => {\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.userEditApps = await mainApi.unitUserEditApps(this.unit.id, this.curUser.id, key, pageStart, pageSize);\r\n        this.openVPage(VUserEditApps);\r\n    }\r\n\r\n    bindAppUser = async(user:User, checked:boolean) => {\r\n        await mainApi.bindAppUser(this.unit.id, this.curApp.id, user.id, checked===true? 1:0);\r\n        let appUsers = this.appUsersList.find(v => v.app.id === this.curApp.id);\r\n        if (checked === true) {\r\n            this.curAppUsers.push(user);\r\n            if (appUsers) appUsers.users.push(user);\r\n        }\r\n        else {\r\n            let index = this.curAppUsers.findIndex(v => v.id === user.id);\r\n            if (index>=0) this.curAppUsers.splice(index, 1);\r\n            if (appUsers) {\r\n                index = appUsers.users.findIndex(v => v.id === user.id);\r\n                if (index>=0) appUsers.users.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    bindUserApp = async(app:App, checked:boolean) => {\r\n        await mainApi.bindAppUser(this.unit.id, app.id, this.curUser.id, checked===true? 1:0);\r\n        if (this.userAppsList === undefined) return;\r\n        let userApps = this.userAppsList.find(v => v.user.id === this.curUser.id);\r\n        if (checked === true) {\r\n            this.curUserApps.push(app);\r\n            if (userApps) userApps.apps.push(app);\r\n        }\r\n        else {\r\n            let index = this.curUserApps.findIndex(v => v.id === app.id);\r\n            if (index>=0) this.curUserApps.splice(index, 1);\r\n            if (userApps) {\r\n                index = userApps.apps.findIndex(v => v.id === app.id);\r\n                if (index>=0) userApps.apps.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    addUser = async (userId: number) => {\r\n        await mainApi.unitAddUser(this.unit.id, userId);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page, appInFrame, Controller, \r\n    VPage, Image, Edit, ItemSchema, UiSchema, \r\n    StringSchema, ImageSchema, UiImageItem, UiTextItem} from 'tonva'; \r\nimport {List, LMR, FA} from 'tonva';\r\n//, StackedFA, PropGrid, Prop, Muted\r\n//import {StringValueEdit} from './tools';\r\nimport {Unit, UnitApps, UnitAdmin, DevModel} from './model';\r\nimport {store} from './store';\r\nimport Administors from './Administors';\r\nimport AppsPage from './Apps';\r\nimport {Members} from './Members';\r\nimport { mainApi } from 'api';\r\n//import { COrganization } from 'organization';\r\nimport {\r\n    ObjViewProps, ObjView,\r\n    //appsProps, \r\n    busesProps, \r\n    serversProps, /*uqdbsProps, servicesProps, */ UQController} from './Dev';\r\nimport { AppController } from './Dev';\r\nimport { UsersController } from 'Users';\r\n\r\nexport class CAdmin extends Controller {\r\n    isProduction: boolean;\r\n    adminUnits: UnitAdmin[]; // 仅仅为Admins调试用。从登录用户获取units\r\n\r\n    private async loadAdminUnits(): Promise<void> {        \r\n        let ret = await mainApi.userAdminUnits();\r\n        let adminUnits = this.adminUnits = ret[0];\r\n        console.log('loadAdminUnits', adminUnits);\r\n        if (adminUnits.length === 1) {\r\n            appInFrame.unit = adminUnits[0].id;\r\n            await store.loadUnit();\r\n        }\r\n    }\r\n    protected async internalStart(param?:any):Promise<void> {\r\n        store.init();\r\n        \r\n        this.isProduction = document.location.hash.startsWith('#tv');\r\n        console.log('admins isProduction %s', this.isProduction);\r\n\r\n        if (this.isProduction === false) {\r\n            await this.loadAdminUnits();\r\n            this.openVPage(VAdmin);\r\n            return;\r\n        }\r\n        await store.loadUnit();\r\n        this.openVPage(VAdmin);\r\n    /*\r\n        let user = nav.user;\r\n        if (user === undefined) {\r\n            console.log('autorun: user has logged out');\r\n            return;\r\n        }\r\n    \r\n        console.log('autorun login');\r\n        */\r\n       /*\r\n        setTimeout(async () => {\r\n            // 等待 tonva-tools 里面的initSubWin的nav.user的赋值\r\n            // 这个地方实际上有问题的，不应该这么写。程序逻辑顺序逻辑错误。\r\n            // 2018-11-5: 临时凑合用延时的方式来解决。\r\n            await store.loadUnit();\r\n            this.showVPage(VAdmin);\r\n        }, 200);\r\n        */\r\n    }\r\n}\r\n\r\nexport class VAdmin extends VPage<CAdmin> {\r\n    async open() {\r\n        let {isProduction, adminUnits} = this.controller;\r\n        if (isProduction === false) {\r\n            switch (adminUnits.length) {\r\n                default: this.openPage(this.selectUnitPage); return;\r\n                case 0: this.openPage(this.noUnitPage); return;\r\n                case 1: this.openPageElement(<AdminPage />); return;\r\n            }\r\n        }\r\n\r\n        if (store.unit === undefined) {\r\n            this.openPage(this.noUnitPage);\r\n            return;\r\n        }\r\n        this.openPageElement(<AdminPage />);\r\n    }\r\n\r\n    private selectUnitPage = () => {\r\n        return <Page header=\"选择小号\" logout={logout}>\r\n            <List items={this.controller.adminUnits} item={{render: this.renderRow, onClick: this.onRowClick}}/>\r\n        </Page>;\r\n    }\r\n\r\n    private noUnitPage = () => {\r\n        let {nick, name} = nav.user;\r\n        return <Page header=\"没有小号\" logout={logout}>\r\n            <div className=\"p-3 small text-info\">\r\n                {nick || name}: 没有需要管理的小号\r\n            </div>\r\n        </Page>\r\n    }\r\n\r\n    protected get view() {return undefined}\r\n\r\n    renderRow = (item: UnitAdmin, index: number):JSX.Element => {\r\n        return <LMR className=\"p-2\" right={'id: ' + item.id}>\r\n            <div>{item.nick || item.name}</div>\r\n        </LMR>;\r\n    }\r\n    onRowClick = async (item: UnitAdmin) => {\r\n        appInFrame.unit = item.id; // 25;\r\n        store.init();\r\n        await store.loadUnit();\r\n        this.closePage();\r\n        this.openPageElement(<AdminPage />);\r\n    }\r\n}\r\n\r\nconst logout = async () => {\r\n    store.logout();\r\n}\r\n\r\ninterface ActionItem {\r\n    main: string | JSX.Element;\r\n    right?: string | JSX.Element;\r\n    icon: string|JSX.Element;\r\n    page?: new (props:any) => React.Component;\r\n    //onClick: () => nav.push(<Administors />),\r\n    controller?: Controller;\r\n}\r\n\r\ninterface DevItem<T extends DevModel.ObjBase> {\r\n    title: string;\r\n    count: number;\r\n    icon: string;\r\n    objProps?: ObjViewProps<T>;\r\n    onClick?: ()=>void;\r\n}\r\n\r\ntype Item = ActionItem|DevItem<DevModel.ObjBase>|string;\r\n\r\nconst rArrow = <FA name=\"chevron-right\" />;\r\nconst typeCaptions = {\r\n    1: '开发号',\r\n    2: '小号',\r\n    3: '系统号'\r\n}\r\n@observer\r\ndefault class AdminPage extends React.Component {\r\n    private caption:string;\r\n\r\n    async componentWillMount() {\r\n        let {unit, dev} = store;\r\n        let {isAdmin, isOwner, type} = unit;\r\n        this.caption = typeCaptions[type];\r\n        if ((type & 1) !== 0) {\r\n            await store.dev.loadCounts();\r\n        }\r\n    }\r\n\r\n    private appsAction:ActionItem = {\r\n        main: '启停App',\r\n        right: rArrow, //'增减',\r\n        icon: 'play-circle-o',\r\n        page: AppsPage,\r\n    };\r\n    private usersAction:ActionItem = {\r\n        main: '用户角色',\r\n        right: rArrow,\r\n        icon: 'users',\r\n        page: Members,\r\n    };\r\n    private newUsersAction:ActionItem = {\r\n        main: '用户管理',\r\n        right: rArrow,\r\n        icon: 'user-o',\r\n        controller: new UsersController(undefined),\r\n    };\r\n    /*\r\n    private devAction:Item = {\r\n        main: <DevActions />,\r\n        right: '程序开发相关管理',\r\n        icon: 'laptop',\r\n        //page: Dev,\r\n    };*/\r\n    private adminsAction:ActionItem = {\r\n        main: '管理员',\r\n        right: rArrow,\r\n        icon: 'universal-access',\r\n        page: Administors,\r\n    };\r\n\r\n    /*\r\n    private cOrganization = new COrganization;\r\n    private organizeAction:ActionItem = {\r\n        main: this.cOrganization.label,\r\n        right: rArrow,\r\n        icon: this.cOrganization.icon,\r\n        controller: this.cOrganization\r\n    };\r\n    */\r\n\r\n    private noneAction:ActionItem = {\r\n        main: '请耐心等待分配任务',\r\n        icon: 'hourglass-start',\r\n    };\r\n\r\n    private buildItems():Item[] {\r\n        let {unit, dev} = store;\r\n        let {isAdmin, isOwner, type} = unit;\r\n        let items:Item[] = [];\r\n        if (isOwner === 1) {\r\n            items.push(this.adminsAction);\r\n        }\r\n        console.log('unit:', unit);\r\n        if (isAdmin === 1) {\r\n            if ((type & 2) !== 0) {\r\n                // unit\r\n                items.push(\r\n                    '小号管理',\r\n                    this.appsAction, \r\n                    //this.usersAction, \r\n                    this.newUsersAction, \r\n                    //this.organizeAction\r\n                );\r\n            }\r\n            if ((type & 1) !== 0) {\r\n                // dev unit\r\n                let {counts} = dev;\r\n\r\n                let appAction:DevItem<DevModel.ObjBase> = {\r\n                    title: 'APP', \r\n                    count: counts && counts.app, \r\n                    icon: 'tablet', \r\n                    onClick: () => new AppController(undefined).start(unit.id),\r\n                };\r\n                let uqAction:DevItem<DevModel.ObjBase> = {\r\n                    title: 'UQ', \r\n                    count: counts && counts.uq, \r\n                    icon: 'database', \r\n                    onClick: () => new UQController(undefined).start(unit.id),\r\n                };\r\n                let busAction:DevItem<DevModel.ObjBase> = {\r\n                    title: 'BUS', \r\n                    count: counts && counts.bus, \r\n                    icon: 'cogs', \r\n                    objProps: busesProps,\r\n                };\r\n                let serverAction:DevItem<DevModel.ObjBase> = {\r\n                    title: 'Server', \r\n                    count: counts && counts.server, \r\n                    icon: 'server', \r\n                    objProps: serversProps,\r\n                };\r\n                items.push('开发号管理')\r\n                if (isOwner>0) items.push(appAction);\r\n                items.push(uqAction, busAction);\r\n                if (isOwner>0) items.push(serverAction);\r\n            }\r\n        }\r\n        return items;\r\n    }\r\n    private row = (item:Item, index:number):JSX.Element => {\r\n        if (typeof item === 'string') {\r\n            return <div className=\"px-3 pt-3 pb-1 small text-muted\" style={{backgroundColor:'#f0f0f0'}}>{item}</div>;\r\n        }\r\n        let {title} = item as DevItem<DevModel.ObjBase>;\r\n        let left:any, mid:any, r:any;\r\n        if (title !== undefined) {\r\n            let {icon, count} = item as DevItem<DevModel.ObjBase>;\r\n            left = <FA className=\"text-primary\" name={icon} fixWidth={true} size=\"lg\" />;\r\n            mid = title;\r\n            r = count>0 && <span>{count}</span>;\r\n        }\r\n        else {\r\n            let {right, main, icon} = item as ActionItem;\r\n            left = typeof icon === 'string'? \r\n                <FA className=\"text-primary\" name={icon} fixWidth={true} size=\"lg\" /> :\r\n                item.icon;\r\n            mid = main;\r\n            r = <span>{right}</span>;\r\n        }\r\n        return <LMR className=\"px-3 py-2 align-items-center\" left={left} right={r}>\r\n            <div className=\"px-3\"><b>{mid}</b></div>\r\n        </LMR>;\r\n    }\r\n    private rowClick = async (item:Item) => {\r\n        let {title} = item as DevItem<DevModel.ObjBase>;\r\n        if (title !== undefined) {\r\n            let {objProps, onClick} = item as DevItem<DevModel.ObjBase>;\r\n            if (objProps !== undefined)\r\n                return nav.push(<ObjView {...objProps} />);\r\n            else {\r\n                onClick();\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            let {page:P, controller} = item as ActionItem;\r\n            if (P !== undefined)\r\n                nav.push(<P />);\r\n            else {\r\n                await controller.start(store.unit);\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        let unit:Unit = store.unit;\r\n        if (unit === undefined) {\r\n            console.log(\"admin render without unit\");\r\n            return null;\r\n        }\r\n        console.log(\"admin render with unit\");\r\n        let items = this.buildItems();\r\n        if (items === undefined) {\r\n            return <Page header=\"\" />;\r\n        }\r\n        let header:any, top:any;\r\n        if (unit !== undefined) {\r\n            let {name, nick, icon, discription} = unit;\r\n            let title:string, vice:any;\r\n            if (nick) {\r\n                title = nick;\r\n                vice = <h6><small className='text-secondary'>{name}</small></h6>;\r\n            }\r\n            else {\r\n                title = name;\r\n            }\r\n            if (this.caption !== undefined) header = this.caption + ' - ' + title;\r\n            top = <LMR className='px-3 my-4 bg-white py-2 cursor-pointer' onClick={()=>nav.push(<UnitProps />)}\r\n                left={<div><Image className=\"w-3c h-3c\" src={icon} /></div>}>\r\n                <div className=\"px-3\">\r\n                    <LMR right={vice}><h6 className='text-dark font-weight-bold'>{title}</h6></LMR>\r\n                    <div className='small text-info'>{discription}</div>\r\n                </div>\r\n            </LMR>;\r\n        }\r\n        else {\r\n            header = '系统管理';\r\n        }\r\n        return <Page header={header} logout={logout}>\r\n            {top}\r\n            <List items={items} item={{render:this.row, onClick:this.rowClick}} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass UnitProps extends React.Component {\r\n    /*\r\n    private rows:Prop[] = [\r\n        '',\r\n        {label: '标志图', type: 'string', name: 'icon'},\r\n        '=',\r\n        {label: '唯一号', type: 'string', name: 'name'},\r\n        {\r\n            label: '名称', \r\n            type: 'string',\r\n            name: 'nick', \r\n            onClick:()=>nav.push(<StringValueEdit \r\n                title=\"修改名称\"\r\n                value={store.unit.nick}\r\n                onChanged={this.onNickChanged} \r\n                info=\"好的名字会提升接受度\" />)\r\n        },\r\n        {\r\n            label: '说明',\r\n            type: 'string',\r\n            name: 'discription',\r\n            onClick:()=>nav.push(<StringValueEdit \r\n                title=\"修改说明\"\r\n                value={store.unit.discription}\r\n                onChanged={this.onDiscriptionChanged} \r\n                info=\"对小号做一个说明\" />)\r\n        },\r\n    ];\r\n    */\r\n    private schema:ItemSchema[] =[\r\n        {name: 'icon', type: 'image'} as ImageSchema,\r\n        {name: 'nick', type: 'string'} as StringSchema,\r\n        {name: 'discription', type: 'string'} as StringSchema,\r\n    ];\r\n    private uiSchema:UiSchema = {\r\n        items: {\r\n            nick: {widget:'text', label:'别名', placeholder:'好的别名更方便记忆'} as UiTextItem,\r\n            icon: {widget:'image', label:'标志图'} as UiImageItem,\r\n            discription: {widget:'text', label:'描述', placeholder:'简短清晰的描述'} as UiTextItem,\r\n        }\r\n    }\r\n    /*\r\n    async onNickChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.unitChangeProp('nick', value);\r\n    }\r\n    async onDiscriptionChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.unitChangeProp('discription', value);\r\n    }\r\n    */\r\n    private onItemChanged = async (itemSchema:ItemSchema, newValue:any, preValue:any) => {\r\n        let {name} = itemSchema;\r\n        //await userApi.userSetProp(name, newValue);\r\n        await store.unitChangeProp(name, newValue);\r\n        //this.data[name] = newValue;\r\n        //nav.user[name] = newValue;\r\n        //nav.saveLocalUser();\r\n    }\r\n    //<PropGrid rows={this.rows} values={store.unit} alignValue=\"right\" />\r\n    render() {\r\n        let unit:Unit = store.unit;\r\n        let {isRoot, isOwner} = unit;\r\n        return <Page header=\"小号信息\">\r\n            <Edit schema={this.schema} uiSchema={this.uiSchema}\r\n                data={store.unit}\r\n                onItemChanged={this.onItemChanged}\r\n                stopEdit={!(isRoot>0 && isOwner>0)} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { nav, NavView } from 'tonva';\r\nimport { CAdmin } from './Admin';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n    async onLogined() {\r\n        let loc = document.location;\r\n        nav.clear();\r\n        //nav.push(<StartPage />);\r\n        let cAdmin = new CAdmin({});\r\n        await cAdmin.start();\r\n    }\r\n    render() {\r\n        return (\r\n            <NavView onLogined={this.onLogined} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n"],"sourceRoot":""}