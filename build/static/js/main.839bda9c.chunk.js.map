{"version":3,"sources":["tonva-tools/index.ts","tonva-react-form/index.ts","tonva-react-uq/controllers/CVEntity.tsx","tonva-tools/ui/nav.tsx","tonva-react-uq/controllers/form/viewModel.tsx","tonva-react-uq/tools/jsonStringify.ts","tonva-react-uq/tools/tv.tsx","tonva-react-uq/tools/index.ts","tonva-tools/net/guestApi.ts","tonva-tools/net/index.ts","tonva-tools/ui/index.ts","tonva-tools/net/appBridge.ts","tonva-tools/net/httpChannelUI.ts","tonva-tools/net/uqApi.ts","tonva-tools/ui/page.tsx","tonva-react-uq/controllers/link/cLink.tsx","tonva-react-uq/controllers/link/index.ts","tonva-tools/net/wsChannel.ts","tonva-react-form/uid.ts","tonva-tools/ui/image.tsx","tonva-tools/net/host.ts","tonva-tools/user.ts","tonva-tools/uid.ts","tonva-react-uq/controllers/tuid/vTuidMain.tsx","tonva-react-uq/controllers/tuid/vTuidEdit.tsx","tonva-react-uq/controllers/tuid/vTuidSelect.tsx","tonva-react-uq/controllers/tuid/vTuidView.tsx","tonva-react-uq/controllers/tuid/vTuidInfo.tsx","tonva-react-uq/controllers/tuid/pageItems.ts","tonva-react-uq/controllers/tuid/vTuidList.tsx","tonva-react-uq/controllers/tuid/cTuid.ts","tonva-react-uq/controllers/tuid/index.tsx","tonva-react-uq/controllers/form/vBand.tsx","tonva-react-uq/controllers/form/vSubmit.tsx","tonva-react-uq/controllers/form/rule.ts","tonva-react-uq/controllers/form/vField/vField.tsx","tonva-react-uq/controllers/form/vField/vComputeField.tsx","tonva-react-uq/controllers/form/vArr.tsx","tonva-react-uq/controllers/form/vField/vTuidField.tsx","tonva-react-uq/controllers/form/bandsBuilder.ts","tonva-react-uq/controllers/form/vField/buildVmField.ts","tonva-react-uq/controllers/form/vForm.tsx","tonva-react-uq/controllers/form/index.ts","tonva-tools/net/httpChannel.ts","tonva-tools/ui/res.ts","tonva-react-uq/controllers/index.ts","tonva-react-form/form/control/control.tsx","tonva-react-form/form/control/buttonsControl.tsx","tonva-react-form/form/control/charsControl.tsx","tonva-react-form/form/control/stringControl.tsx","tonva-react-form/form/control/numberControl.tsx","tonva-react-form/form/control/unknownControl.tsx","tonva-react-form/form/control/pickIdControl.tsx","tonva-react-form/form/control/pickTuidControl.tsx","tonva-react-form/form/control/pickControl.tsx","tonva-react-form/form/control/index.ts","tonva-react-form/form/control/checkControl.tsx","tonva-react-form/form/control/radioControl.tsx","tonva-react-form/form/control/selectControl.tsx","tonva-react-form/form/control/textAreaControl.tsx","tonva-react-uq/entities/entity.ts","tonva-react-uq/entities/tuid.ts","tonva-react-uq/entities/action.ts","tonva-react-uq/entities/sheet.ts","tonva-react-uq/entities/query.ts","tonva-react-uq/entities/book.ts","tonva-react-uq/entities/history.ts","tonva-react-uq/entities/map.ts","tonva-react-uq/entities/pending.ts","tonva-react-uq/entities/entities.ts","tonva-react-uq/entities/index.ts","tonva-react-form/form/rowContainer/index.tsx","tonva-tools/net/apiBase.ts","tonva-tools/ui/titleBar.tsx","tonva-react-uq/controllers/query/defaultRow.tsx","tonva-react-uq/controllers/query/vQueryMain.tsx","tonva-react-uq/controllers/query/vQuerySelect.tsx","tonva-react-uq/controllers/query/cQuery.ts","tonva-react-uq/controllers/query/index.ts","tonva-tools/ui/edit/imageItemEdit.tsx","tonva-tools/ui/loading.tsx","tonva-tools/ui/resUploader.tsx","tonva-react-form/form/index.ts","tonva-react-form/form/formView.tsx","tonva-react-uq/controllers/CApp.tsx","tonva-react-uq/controllers/icons.tsx","tonva-react-uq/controllers/ControllerUq.ts","tonva-react-uq/centerApi.ts","tonva-react-uq/controllers/sheet/vMain.tsx","tonva-react-uq/controllers/sheet/vNew.tsx","tonva-react-uq/controllers/sheet/vSheetView.tsx","tonva-react-uq/controllers/sheet/vEdit.tsx","tonva-react-uq/controllers/sheet/vSheetAction.tsx","tonva-react-uq/controllers/sheet/vSchema.tsx","tonva-react-uq/controllers/sheet/vArchives.tsx","tonva-react-uq/controllers/sheet/vList.tsx","tonva-react-uq/controllers/sheet/vArchived.tsx","tonva-react-uq/controllers/sheet/vSheet.tsx","tonva-react-uq/controllers/sheet/vSaved.tsx","tonva-react-uq/controllers/sheet/vSheetProcessing.tsx","tonva-react-uq/controllers/sheet/cSheet.ts","tonva-react-uq/controllers/sheet/index.ts","tonva-react-uq/controllers/book/vBookMain.tsx","tonva-react-uq/controllers/book/cBook.ts","tonva-react-uq/controllers/uq/vUq.tsx","tonva-react-uq/controllers/uq/cUq.tsx","tonva-react-uq/controllers/uq/index.ts","tonva-react-uq/controllers/map/vMain.tsx","tonva-react-uq/controllers/map/inputValues.tsx","tonva-react-uq/controllers/map/cMap.ts","tonva-react-uq/controllers/map/index.ts","tonva-react-uq/controllers/history/vHistoryMain.tsx","tonva-react-uq/controllers/history/cHistory.ts","tonva-react-uq/controllers/history/index.ts","tonva-react-uq/controllers/action/vActionMain.tsx","tonva-react-uq/controllers/action/cAction.ts","tonva-react-uq/controllers/action/index.ts","tonva-react-uq/controllers/pending/vPendingMain.tsx","tonva-react-uq/controllers/pending/cPending.ts","tonva-react-uq/controllers/pending/index.ts","tonva-tools/ui/edit/itemEdit.tsx","tonva-tools/net/netToken.ts","tonva-tools/entry/userApi.ts","tonva-tools/left0.ts","tonva-tools/ui/VM.tsx","tonva-tools/ui/schema/index.ts","tonva-react-form/form/TonvaForm.tsx","tonva-react-form/dropDownActions/index.tsx","tonva-react-form/easyDate/index.tsx","tonva-react-form/media.tsx","tonva-react-form/searchBox.tsx","tonva-react-form/multiStep/index.tsx","tonva-tools/pageItems.ts","tonva-tools/cacheIds.ts","tonva-tools/ui/form/rules/index.ts","tonva-tools/ui/form/widgets/widget.tsx","tonva-tools/ui/form/widgets/textWidget.tsx","tonva-tools/ui/form/widgets/numberWidget.tsx","tonva-tools/ui/form/widgets/updownWidget.tsx","tonva-tools/ui/form/widgets/dateWidget.tsx","tonva-tools/ui/form/widgets/checkBoxWidget.tsx","tonva-tools/ui/form/widgets/selectWidget.tsx","tonva-tools/ui/form/widgets/idWidget.tsx","tonva-tools/ui/form/widgets/unknown.tsx","tonva-tools/ui/form/widgets/buttonWidget.tsx","tonva-tools/ui/form/context.tsx","tonva-tools/ui/form/widgets/arrComponent.tsx","tonva-tools/ui/form/widgets/imageWidget.tsx","tonva-tools/ui/form/widgets/factory.tsx","tonva-tools/ui/form/widgets/textareaWidget.tsx","tonva-tools/ui/form/widgets/passwordWidget.tsx","tonva-tools/ui/form/widgets/radioWidget.tsx","tonva-tools/ui/form/widgets/rangeWidget.tsx","tonva-tools/ui/form/formRes.ts","tonva-tools/ui/form/form.tsx","tonva-tools/ui/form/field.tsx","tonva-tools/ui/form/index.ts","tonva-react-form/components/Badge.tsx","tonva-react-form/components/LMR.tsx","tonva-react-form/components/FA.tsx","tonva-react-form/components/Muted.tsx","tonva-react-form/components/index.ts","tonva-react-form/list/base.tsx","tonva-react-form/list/clickable.tsx","tonva-react-form/list/static.tsx","tonva-react-form/list/selectable.tsx","tonva-react-form/list/index.tsx","tonva-react-form/propGrid/row.tsx","tonva-react-form/propGrid/propView.tsx","tonva-react-form/propGrid/PropGrid.tsx","tonva-react-form/propGrid/index.tsx","tonva-tools/ui/edit/stringItemEdit.tsx","tonva-tools/ui/edit/edit.tsx","tonva-tools/ui/edit/index.tsx","tonva-react-form/listView/listRow.tsx","tonva-react-form/listView/listView.tsx","tonva-tools/entry/meInfo.tsx","tonva-tools/ui/tabs/tabs.tsx","tonva-tools/ui/fetchErrorView.tsx","tonva-tools/local.ts","tonva-tools/img/logo.svg","api/mainApi.ts","api/devApi.ts","store/admins.ts","store/dev.ts","store/cacheIds.ts","store/index.ts","Administors/NewFellow.tsx","Administors/EditAdmin.tsx","Administors/index.tsx","tools/idDates.tsx","tools/span.tsx","tools/unitSpan.tsx","consts.ts","tools/uqSpan.tsx","tools/appSpan.tsx","tools/serverSpan.tsx","tools/stringValueEdit.tsx","tools/idPickPage.tsx","Apps/info.tsx","Apps/new.tsx","Apps/index.tsx","Members/newRole.tsx","Members/roleApps.tsx","Members/memberPage.tsx","Members/membersPage.tsx","Members/rolePage.tsx","Members/index.tsx","organization/ui/map/teamPerson/index.tsx","organization/ui/index.ts","organization/ui/map/index.ts","organization/ui/tuid/index.ts","organization/ui/tuid/user.tsx","organization/ui/tuid/organization.tsx","organization/ui/query/index.ts","organization/ui/query/teamPosts.tsx","organization/ui/res/index.ts","organization/ui/res/zh/CN.tsx","organization/op/vOpBinding.tsx","organization/op/vAllPosts.tsx","organization/op/vFullFunction.tsx","organization/op/vSearchUser.tsx","organization/op/cOpBinding.tsx","organization/organization.tsx","createIdPick.tsx","Dev/apps/editPage.tsx","Dev/apps/appsPage.tsx","Dev/apps/appUqs.tsx","Dev/apps/appPage.tsx","Dev/apps/uqBindPage.tsx","Dev/apps/index.tsx","Dev/uqs/uqUpload.tsx","Dev/uqs/newServicePage.tsx","Dev/uqs/servicePage.tsx","Dev/uqs/editPage.tsx","Dev/uqs/uqPage.tsx","Dev/uqs/listPage.tsx","Dev/uqs/index.tsx","Dev/row.tsx","Dev/buses.tsx","Dev/servers.tsx","Dev/services.tsx","Dev/ObjView.tsx","Users/vApps.tsx","Users/vUsers.tsx","Users/vApp.tsx","Users/vUser.tsx","Users/vAppEditUsers.tsx","Users/vUserEditApps.tsx","Users/VAddUser.tsx","Users/cUsers.tsx","Admin.tsx","App.tsx","registerServiceWorker.ts","index.tsx"],"names":["_left0__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d","__webpack_exports__","_net__WEBPACK_IMPORTED_MODULE_2__","_ui__WEBPACK_IMPORTED_MODULE_3__","o","_pageItems__WEBPACK_IMPORTED_MODULE_5__","_cacheIds__WEBPACK_IMPORTED_MODULE_6__","_form__WEBPACK_IMPORTED_MODULE_0__","_list__WEBPACK_IMPORTED_MODULE_1__","_dropDownActions__WEBPACK_IMPORTED_MODULE_2__","_easyDate__WEBPACK_IMPORTED_MODULE_3__","_propGrid__WEBPACK_IMPORTED_MODULE_4__","_components__WEBPACK_IMPORTED_MODULE_5__","_media__WEBPACK_IMPORTED_MODULE_6__","_searchBox__WEBPACK_IMPORTED_MODULE_8__","_multiStep__WEBPACK_IMPORTED_MODULE_9__","CEntity","_ControllerUq__WEBPACK_IMPORTED_MODULE_3__","[object Object]","cUq","entity","ui","res","super","Object","setPrototypeOf","this","x","name","typeName","label","icon","_icons__WEBPACK_IMPORTED_MODULE_2__","loadSchema","onSubmit","values","mode","options","buildFormOptions","ret","_form__WEBPACK_IMPORTED_MODULE_1__","setValues","none","submitCaption","arrNewCaption","arrEditCaption","arrTitleNewButton","fields","arrFields","undefined","new","formUI","form","arrs","inputs","buildInputs","buildFieldsInputs","arr","items","arrFieldInputs","field","_tuid","fieldUI","select","buildSelect","content","buildContent","placeHolder","getTuidPlaceHolder","__awaiter","_ownerField","cTuidSelect","cSelectFrom","param","getValue","autoList","console","log","call","removeCeased","id","idFromItem","useId","queryName","cQuerySelect","VEntity","tonva_tools__WEBPACK_IMPORTED_MODULE_0__","controller","createForm","mobileHeaderStyle","RegExp","test","navigator","userAgent","minHeight","logMark","logs","stackKey","NavView","react__WEBPACK_IMPORTED_MODULE_0__","props","waitCount","isHistoryBack","clearError","setState","fetchError","back","bind","navBack","stack","state","wait","window","addEventListener","nav","set","start","level","length","waitTimeHandler","global","setTimeout","clearTimeout","err","error","unauthorized","showLogin","view","disposer","clear","push","history","pushState","key","ceased","refresh","item","pop","dispose","p","i","len","backLevel","popAndDispose","find","v","confirmClose","confirm","self","top","postMessage","type","message","elWait","elError","className","_fetchErrorView__WEBPACK_IMPORTED_MODULE_4__","assign","map","index","style","visibility","Nav","local","_local__WEBPACK_IMPORTED_MODULE_6__","user","lang","district","_res__WEBPACK_IMPORTED_MODULE_9__","language","culture","guest","g","get","handler","ws","onWsReceiveAny","handlerId","endWsReceive","msg","receive","unitRes","fetch","json","unit","unitName","_net__WEBPACK_IMPORTED_MODULE_7__","getUnitName","unitId","unitFromName","_page__WEBPACK_IMPORTED_MODULE_2__","header","_loading__WEBPACK_IMPORTED_MODULE_10__","url","resHost","centerHost","resUrl","wsHost","loadUnit","setGuest","hash","document","location","origin","isInFrame","startsWith","mif","_net_appBridge__WEBPACK_IMPORTED_MODULE_5__","_net_wsChannel__WEBPACK_IMPORTED_MODULE_8__","parent","logined","notLogined","onLogined","_net_netToken__WEBPACK_IMPORTED_MODULE_3__","token","callback","connect","JSON","stringify","saveLocalUser","showAppView","withBack","lv","e","then","loginView","default","onClick","logout","logoutClear","cp","ChangePasswordPage","startWait","endWait","onError","show","replace","topKey","popTo","ceaseTop","regConfirmClose","confirmBox","apiId","sheetType","sheetId","Promise","resolve","reject","sheet","includes","uh","src","open","date","Date","getTime","toTimeString","step","__decorate","mobx__WEBPACK_IMPORTED_MODULE_1__","ViewModel","PureJSONContent","JSONContent","RowContent","mobx_react__WEBPACK_IMPORTED_MODULE_1__","_tools__WEBPACK_IMPORTED_MODULE_2__","vm","replacer","value","substr","jsonStringify","Tv","index_module","tuidValue","nullUI","ttv","react","bi","_$tuid","_$com","t","controllers","com","getTuidContent","val","valueFromId","boxIdContent","tv","guestApi","uqApi","wsChannel","apiBase","appBridge","host","_nav__WEBPACK_IMPORTED_MODULE_0__","_VM__WEBPACK_IMPORTED_MODULE_3__","_schema__WEBPACK_IMPORTED_MODULE_4__","_form__WEBPACK_IMPORTED_MODULE_5__","_edit__WEBPACK_IMPORTED_MODULE_6__","_res__WEBPACK_IMPORTED_MODULE_7__","_image__WEBPACK_IMPORTED_MODULE_10__","uqTokens","logoutUqTokens","appsInFrame","meInFrame","_unit","isBridged","setMeInFrame","appHash","parts","split","Number","page","slice","appUrl","u","_uid__WEBPACK_IMPORTED_MODULE_2__","loadAppUqs","appOwner","appName","centerAppApi","_uqApi__WEBPACK_IMPORTED_MODULE_3__","uqs","checkUqs","_ui__WEBPACK_IMPORTED_MODULE_1__","appUq","uq","uqOwner","uqName","uqToken","urlDebug","realUrl","_host__WEBPACK_IMPORTED_MODULE_5__","getUrlOrDebug","at","a","opener","apiName","evt","data","subWin","source","_wsChannel__WEBPACK_IMPORTED_MODULE_4__","el","getElementById","hidden","hideFrameBack","lodash__WEBPACK_IMPORTED_MODULE_0___default","clone","subFrameStarted","onReceive","initSubWin","from","callId","method","body","result","directCall","callCenterApiFromMessage","bca","brideCenterApis","bridgeCenterApiReturn","appInFrame","onReceiveAppApiMessage","action","onAppApiReturn","bridgeCenterApi","httpChannelUI_HttpChannelNavUI","channelUIs","channelNoUIs","logoutApis","uqApi_channels","uqLocalEntities","localUqs","ls","localStorage","getItem","parse","loginedUserId","isNet","un","__loadAccess","saveLocal","lodash_default","cloneDeep","removeItem","accessValue","str","setItem","isMatch","uqApi_UqApi","basePath","access","showWaiting","channels","channelUI","channel","httpChannel","acc","join","loadAccess","checkAccess","names","post","params","owner","pageStart","pageSize","order","$order","ids","proxy","put","uqApi_UnitxApi","buildChannel","uqApi_CenterAppApi","unitxUq","setCenterUrl","centerToken","centerChannel","centerChannelUI","setCenterToken","userId","uqApi_CenterApi","path","uqTokenApi","unitParam","nowTick","tick","callCenterapi","rLs","rUnit","rAppOwner","rAppName","uqsPure","obj","cachedUqs","scrollTimeGap","ScrollView","bottomTime","topTime","onScroll","onScrollTop","onScrollBottom","target","scrollTop","offsetHeight","scrollHeight","c","direct","children","forEach","child","_$scroll","toString","eachChild","Page","cur","tabs","tabStates","tab","lodash__WEBPACK_IMPORTED_MODULE_3___default","isSelected","isMounted","t0","onTabClick","load","footer","right","keepHeader","titleBar","title","redDot","img","redDotView","cn","classnames__WEBPACK_IMPORTED_MODULE_2___default","_titleBar__WEBPACK_IMPORTED_MODULE_4__","center","sideBar","invisible","onTouchStart","elFooter","renderTabs","renderSingle","Link","cLink_CLink","classnames_default","subAppWindow","setSubAppWindow","win","postWsToTop","WsBase","handlerSeed","anyHandlers","msgHandlers","seed","$type","wsBaseSeed","wsBridge","wsBaseId","WSChannel","that","WebSocket","onopen","ev","onerror","onmessage","wsMessage","onclose","close","event","postWsToSubApp","netThis","send","uid","ALPHABET","ID_LENGTH","rtn","charAt","Math","floor","random","Image","classnames__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_1___default","n","_nav__WEBPACK_IMPORTED_MODULE_2__","isDevelopment","NODE_ENV","PUBLIC_URL","REACT_APP_CENTER_HOST","REACT_APP_ICON","REACT_APP_ITEM_ICON","hosts","centerhost","reshost","uqhost","unitxhost","uq-build","fetchOptions","headers","Content-Type","tryLocal","getCenterHost","centerUrlFromHost","centerWsFromHost","getResHost","promises","hostArr","hostValue","findIndex","fetchUrl","debugHostUrl","localCheck","results","all","j","hostString","indexOf","timeout","text","catch","Error","fetchLocalCheck","decodeUserToken","decodeGuestToken","jwt_decode__WEBPACK_IMPORTED_MODULE_0__","jwt_decode__WEBPACK_IMPORTED_MODULE_0___default","vTuidMain_VTuidMain","CVEntity","onNew","onList","onSearch","openPage","link","render","newButton","proxyLinks","isFrom","tonva_tools","tonva_react_form","placeholder","entityRender","entityClick","vTuidEdit_VTuidEdit","next","vTuidEdit_awaiter","vForm","reset","closePage","finish","getValues","save","unique","setError","isCalling","returnCall","openPageElement","size","editView","vTuidSelect_VTuidSelect","mainView","react_default","createElement","initKey","onSearchMain","PageItems","renderMainRow","clickMainRow","before","vTuidSelect_awaiter","searchMain","mainRowContent","ceasePage","showDiv","getIdFromObj","divView","renderDivRow","clickDivRow","divRowContent","showMain","rowContent","viewModel","ownerValue","divs","divItems","getDivItems","vTuidView_VTuidView","vTuidView_awaiter","alert","tools","buildForm","vTuidInfo_VTuidInfo","pageItems_TuidPageItems","tuid","search","vTuidList_VTuidMainListBase","vTuidList_awaiter","renderRow","clickRow","callOnSelected","rowKey","ownerTop","ownerObj","ownerId","onSelected","VTuidMainList","cTuid_CTuid","buildPageItems","first","searchArr","cTuid_CTuidMain","proxies","linkFromName","cFrom","cUqFrom","cTuidEditFromName","cTuidInfoFromName","cTuidSelectFromName","VTuidMain","VTuidEdit","VTuidList","schemaFrom","openVPage","edit","itemChanged","cTuidInfo","cTuid_CTuidInfo","merge","CTuidEdit","CTuidList","cTuid_CTuidSelect","VTuidSelect","VTuidInfo","vBand_VBand","renderContent","addRow","VFieldBand","vField","vBand_VArrBand","vArr","setAddRow","vBand_VSubmitBand","vSubmit","vSubmit_VSubmit","onClickSubmit","submit","isOk","disabled","caption","mobx_module","Rule","RuleRequired","defy","trim","NaN","RuleNum","RuleInt","isNaN","isInteger","RuleMin","min","check","RuleMax","max","vField_VField","fieldRes","init","buildRules","rules","required","null","checkRules","r","errors","readonly","FormMode","editable","vField_decorate","vField_VInputControl","renderError","ref","input","setInputValue","onFocus","onBlur","computeFields","onChange","currentTarget","setValue","inputGroup","suffix","ctrlCN","inputType","readOnly","maxLength","onKeyPress","RedMark","color","position","left","VStringField","KeyCode_Neg","KeyCode_Dot","vField_VNumberControl","ch","charCode","extraChars","onKeyDot","onKeyNeg","preventDefault","_a","vField_VIntField","VDecField","VTextField","VDateTimeField","vComputeField_VComputeField","vArr_VArr","ownerForm","onEditRow","rowPage","vArr_awaiter","valueBoxs","onRowChanged","rowValues","$owner","list","renderItem","showRow","editRow","editSubmitCaption","internalAddRow","newSubmitCaption","button","paddingTop","paddingBottom","arrsRes","arrRes","newSubmit","editSubmit","arrUI","vForm_VForm","buttonStyle","textAlign","paddingLeft","paddingRight","overflow","vTuidField_VTuidField","vTuidField_awaiter","showInfo","boxId","idBox","bandsBuilder_BandsBuilder","layout","formItems","bandsOnFly","bandsFromLayout","bands","bandsFromFields","bandFromArr","bandFromField","formItem","rfn","resFromName","buildVField","vFields","vArrs","onFormSubmit","buildFormValues","buildBands","bandColl","bandsBuilder","build","band","getVFields","f","getVArr","getVSubmit","rows","row","fn","initValues","arrList","ctrl","fieldName","valueFromFieldName","propName","buildFieldValues","array","deep","buildObservableValues","vForm_decorate","HttpChannel","isCenter","hostUrl","apiToken","showError","_host__WEBPACK_IMPORTED_MODULE_2__","keys","k","buildOptions","innerFetch","buildError","timeOutHandler","encodeURI","ok","statusText","ct","retJson","toLowerCase","_ui_nav__WEBPACK_IMPORTED_MODULE_1__","_appBridge__WEBPACK_IMPORTED_MODULE_0__","Headers","append","resOptions","resLang","lodash__WEBPACK_IMPORTED_MODULE_0__","_","l","languages","setResOptions","_CApp__WEBPACK_IMPORTED_MODULE_0__","_uq__WEBPACK_IMPORTED_MODULE_2__","_tuid__WEBPACK_IMPORTED_MODULE_4__","_query__WEBPACK_IMPORTED_MODULE_6__","_map__WEBPACK_IMPORTED_MODULE_7__","_form_viewModel__WEBPACK_IMPORTED_MODULE_10__","_formUI__WEBPACK_IMPORTED_MODULE_12__","_ControllerUq__WEBPACK_IMPORTED_MODULE_13__","_link__WEBPACK_IMPORTED_MODULE_15__","_icons__WEBPACK_IMPORTED_MODULE_16__","control_ControlBase","formView","renderControl","hasError","filled","validate","control_Control","face","setProps","element","Array","isArray","defaultValue","clearErrors","clearValue","isOK","getValueFromElement","rule","notes","buttonsControl_ButtonsControl","otherClick","onOther","readValues","nothing","btnOther","submitButton","otherButton","TxtRequired","charsControl_CharsControl","parseValue","lodash","classnames","form-control","has-success","is-invalid","is-valid","renderInput","stringControl_StringControl","ErrInvalidNumber","ErrMin","ErrMax","unknownControl_UnknownControl","role","unknownControl_EmptyControl","pickIdControl_PickIdControl","pick","fromPicked","onPicked","itemFromId","initCaption","String","controlContent","component","pickIdControl_decorate","pickTuidControl_PickTuidControl","onIdChanged","onFormValues","pickTuidControl_decorate","pickControl_PickControl","pickControl_awaiter","Content","pickControl_decorate","createControl","group","groupRow","createGroupControl","fieldRow","fieldType","defaultFaces","controls","createFieldControl","help","string","password","number","parseFloat","checkbox","trueValue","falseValue","checked","radiobox","selectedIndex","selectedOptions","pick-id","pick-tuid","textarea","int","dec","bool","ln","Entity","entities","typeId","fieldMaps","sys","sName","jName","tvApi","returns","schema","setSchema","buildFieldTuid","buildArrFieldsTuid","getTuid","arrName","fieldArr","an","buildFieldsParams","arrResult","pa","rowResult","packRow","packArr","charCodeAt","substring","escape","unpackRow","unpackArr","ch0","fLen","to","vals","maxCacheSize","tuid_Tuid","queue","waitingIds","cache","buildIdBoxer","BoxId","prototype","defineProperty","writable","enumerable","getObj","getCacheValue","toJSON","idName","splice","_id","delete","defer","util","has","cacheTuids","moveToHead","shift","proxied","cacheValue","api","getApiFrom","tuids","tuidIds","cacheTuidFieldValues","afterCacheId","cacheDivIds","tuidGet","divName","cacheFieldsInValue","arrValues","tuidDiv","getDiv","tuidSave","retId","inId","tuidSearch","tuidArrGet","tuidArrSave","tuidArrPos","showTuid","TuidMain","Main","TuidDiv","cacheIds","cApp","cUqFrm","getImportUq","retErrors","cTuidMainFromName","$proxy","action_Action","pack","sheet_Sheet","states","op","ops","actions","discription","appId","sheetSave","app","flow","sheetAction","brief","unpackSheet","flows","getSheet","getArchive","unpack","sheetArchive","sheetArchives","stateSheets","sheet_PageStateItems","stateSheetCount","s","count","getStateSheets","query_Query","isPaged","more","hasMore","startField","buildParams","unpackReturns","$page","query","table","book_Book","queryApiName","history_History","map_Map","queries","newAction","newQuery","add","del","pending_Pending","fieldDefaultValue","entities_Entities","sheets","books","maps","histories","pendings","tuidArr","actionArr","sheetArr","queryArr","bookArr","mapArr","historyArr","pendingArr","loadIds","clearCacheTimer","accesses","buildEntities","loadEntities","buildTuids","buildAccess","div","tuidUrl","cacheTimer","proxyColl","newTuid","fromType","fromObj","book","pending","uqId","newBook","newMap","newHistory","newSheet","newPending","buildSheet","mainFields","ownerField","af","bootstrapCreateRow","elementCreateRow","_control__WEBPACK_IMPORTED_MODULE_1__","RowContainer","cc","control","setInitValues","ElementRowContainer","BootStrapRowContainer","refetchApi","ApiBase","getHttpChannel","callFetch","TitleBar","logoutClick","_nav__WEBPACK_IMPORTED_MODULE_1__","navChange","hasBack","href","debugLogout","rightView","b","nick","openWindow","DefaultRow","vQueryMain_VQueryMain","resetPage","loadPage","replacePage","pageResult","queryResult","again","renderExtra","rightClose","queryRow","vQuerySelect_VQuerySelect","vQuerySelect_awaiter","selectRow","vQuerySelect_QueryPageItems","cQuery_CQueryBase","cQuery_CQuery","VQueryMain","main","cQuery_CQuerySelect","VQuerySelect","ImageItemEdit","_itemEdit__WEBPACK_IMPORTED_MODULE_7__","overSize","upload","resUploader","resId","isChanged","tonva_react_form__WEBPACK_IMPORTED_MODULE_8__","_page__WEBPACK_IMPORTED_MODULE_6__","_resUploader__WEBPACK_IMPORTED_MODULE_3__","multiple","maxSize","border","padding","_image__WEBPACK_IMPORTED_MODULE_4__","_nav__WEBPACK_IMPORTED_MODULE_5__","mobx__WEBPACK_IMPORTED_MODULE_2__","Loading","ResUploader","files","fileInput","FormData","file","abortController","AbortController","signal","onFilesChange","_rule__WEBPACK_IMPORTED_MODULE_0__","_field__WEBPACK_IMPORTED_MODULE_1__","_face__WEBPACK_IMPORTED_MODULE_2__","_TonvaForm__WEBPACK_IMPORTED_MODULE_5__","FormView","buildRows","some","every","formRows","createRow","buildRow","buttonsRow","createButtons","_rowContainer__WEBPACK_IMPORTED_MODULE_4__","formRow","formRowCreator","_control__WEBPACK_IMPORTED_MODULE_3__","buttons","CApp","tonva_tools__WEBPACK_IMPORTED_MODULE_1__","tonvaApp","cImportUqs","cUqCollection","tonva_react_form__WEBPACK_IMPORTED_MODULE_2__","onRowClick","selectUnitPage","appUnits","promiseChecks","newCUq","checks","retError","CUq","_uq__WEBPACK_IMPORTED_MODULE_3__","cUqArr","VAppMain","isProduction","loadAppUnits","showUnsupport","loadUqs","clearPrevPages","showMainPage","beforeStart","renderView","userName","sheetTypeId","getCUqFromId","navSheet","_centerApi__WEBPACK_IMPORTED_MODULE_4__","userAppUnits","appContent","appPage","entityIcons","react__WEBPACK_IMPORTED_MODULE_0___default","tonva_react_form__WEBPACK_IMPORTED_MODULE_1__","fixWidth","ControllerUq","centerApi","vMain_VSheetMain","newClick","schemaClick","archivesClick","sheetStateClick","renderState","badge","getStateLabel","templet","statesCount","filter","isDev","vNew_VSheetNew","vNew_awaiter","valuesWithBox","onSave","leftFlowStyle","width","vSheetView_VSheetView","flowRow","preState","sheetView","removed","sheetData","vEdit_VSheetEdit","vEdit_awaiter","saveSheet","controllers_form","vSheetAction_VSheetAction","actionClick","vSheetAction_awaiter","acted","deleteClick","editClick","editSheet","actionButtons","startButtons","no","stateLabel","getActionLabel","backPage","vSchema_VSheetSchema","schemaStringify","vArchives_VArchives","archiveClick","vArchives_awaiter","processing","archiveRow","getArchives","vList_VSheetList","rowClick","vList_awaiter","pageStateItems","listRow","stateName","vArchived_VArchived","vSheet_VSheet","vSaved_VSheetSaved","restart","vSaved_awaiter","vSheetProcessing_VSheetProcessing","cSheet_CSheet","cSheet_awaiter","showSaved","loadStateSheetCount","createPageStateItems","VSheetMain","onSheet","me","$","sheetActPreState","sheetActState","changeStateCount","curState","delta","stateCount","VSheetNew","sheetNew","VSheetSaved","sheetSaved","VSheetEdit","sheetEdit","VSheetSchema","VArchives","VArchived","VSheetList","VSheetAction","VSheetProcessing","showArchived","showAction","showProcessing","onEvent","getSheetData","vCall","inBrief","getArchived","getStateUI","actionName","sheetTitle","disc","vBookMain_VBookMain","cBook_CBook","VBookMain","vUq_VUq","isSysVisible","linkItem","cLink","lists","tuidLinks","mapLinks","sheetLinks","actionLinks","queryLinks","bookLinks","historyLinks","pendingLinks","Fragment","isVisible","controllers_link","cTuidMain","cMap","cSheet","cAction","cQuery","cBook","cHistory","cPending","lowerPropertyName","cUq_CUq","schemaLoaded","CTuidMain","controllers_tuid","CTuidSelect","CTuidInfo","CQuery","CQuerySelect","CMap","CAction","CSheet","CBook","CHistory","controllers_history","CPending","baseUrl","loadEntites","collection","warn","tuidPlaceHolder","en","sheetFromTypeId","startSheet","entityName","cTuidEdit","entityType","cFromName","tUI","cEntity","getUI","VUq","vMain_VMapMain","itemRender","ItemRow","remove","valuesView","box","isLeaf","keyIndex","keyUI","keyUIs","keyContent","valuesContent","keyNone","addClick","removeClick","inputValues_VInputValues","onValuesSubmit","inputValues_awaiter","cMap_MapItem","cMap_CMap","cMap_awaiter","keysLen","keyFields","keysLast","idx","keyField","kn","searchParam","ki","searchOnKey","arr1","nullable","rowIndex","createItem","getLable","confirmDelete","template","v0","q","retFields","newItem","addItem","VMapMain","callParam","vHistoryMain_VHistoryMain","cHistory_CHistory","VHistoryMain","vActionMain_VActionMain","resultPage","mainPage","cAction_CAction","VActionMain","vPendingMain_VPendingMain","cPending_CPending","VPendingMain","ItemEdit","itemSchema","uiItem","internalStart","internalEnd","netToken","_uqApi__WEBPACK_IMPORTED_MODULE_0__","_wsChannel__WEBPACK_IMPORTED_MODULE_1__","userApi","_net__WEBPACK_IMPORTED_MODULE_0__","_user__WEBPACK_IMPORTED_MODULE_1__","account","verify","prop","left0","zero","num","fix","Controller","_net__WEBPACK_IMPORTED_MODULE_3__","onMessageReceive","onMessage","isLogined","unregisterReceiveHandler","receiveHandlerId","onDispose","vp","registerReceiveHandler","_resolve_$","View","VPage","coordinator","_schema__WEBPACK_IMPORTED_MODULE_0__","_uiSchema__WEBPACK_IMPORTED_MODULE_1__","TonvaForm","_formView__WEBPACK_IMPORTED_MODULE_2__","DropdownActions","handleDocumentClick","dropdownOpen","contains","menu","toggle","removeEventListener","isRight","hasIcon","data-toggle","aria-expanded","dropdown-menu","dropdown-menu-right","aria-hidden","EasyDate","now","nDate","getDate","_date","hour","getHours","minute","getMinutes","month","getMonth","hm","getFullYear","Media","tonva_tools__WEBPACK_IMPORTED_MODULE_2__","disp","px","py","SearchBox","allowEmptySearch","inputSize","lab","inputClassName","buttonText","MultiStep","lodash__WEBPACK_IMPORTED_MODULE_1__","lodash__WEBPACK_IMPORTED_MODULE_1___default","classnames__WEBPACK_IMPORTED_MODULE_2__","_form__WEBPACK_IMPORTED_MODULE_3__","stepViews","topView","onPrev","onNext","stepName","steps","ButtonConten","prefix","btnContent","formProps","setStep","nextStepName","pIcon","sIcon","itemObservable","isFirst","loading","beforeLoad","loaded","allLoaded","firstSize","appendPosition","_items","mobx__WEBPACK_IMPORTED_MODULE_0__","topDiv","_uid__WEBPACK_IMPORTED_MODULE_1__","bottomDiv","setPageStart","unshift","reverse","CacheIds","maxCount","dict","Map","loadId","_loadIds","_loadId","RuleCustom","func","RulePredefined","rules_RuleNum","minMsg","maxMsg","checkMore","integer","widget_Widget","context","fieldProps","contextErrors","onInputChange","changeValue","container","visible","inNode","uiLabel","requiredFlag","FieldContainer","getUiItem","removeErrorWidget","addErrorWidget","isChanging","initData","newValue","fromElement","onChanging","onChanged","prev","allowChange","setDataValue","setElementValue","fieldClass","FieldClass","Templet","errorList","tag","textWidget_TextWidget","checkContextRules","removeErrors","renderTemplet","onKeyDown","renderErrors","numberWidget_NumberWidget","updownWidget_UpdownWidget","keyCode","returnValue","isValidKey","dateWidget_DateWidget","checkBoxWidget_CheckBoxWidget","defaultChecked","selectWidget_SelectWidget","option","selectWidget_decorate","idWidget_IdWidget","pickId","clearContextError","required-item","cursor-pointer","idWidget_decorate","Unknown","dataType","uiType","dataTypes","buttonWidget_ButtonWidget","buttonWidget_awaiter","onButtonClick","observerRender","widget","widgetType","ButtonClass","context_Context","uiSchema","isRow","widgets","errorWidgets","subContexts","arrRowContexts","itemName","getDisabled","setDisabled","getReadOnly","setReadOnly","getVisible","setVisible","checkFieldRules","clearContextErrors","rowContext","setContextError","pos","checkHasError","context_decorate","rowKeySeed","RowContext","parentContext","arrSchema","uiArr","itemSchemas","parentData","FormContext","ContextContainer","ArrComponent","selectable","deletable","restorable","getArrRowContexts","arrLabel","ArrContainer","RowSeperator","formSelectable","formDeletable","formRestorable","arrSelectable","arrDeletable","arrRestorable","ac","rc","rs","sep","typeofTemplet","factory","selectCheck","deleteIcon","$isSelected","$source","isDeleted","$isDeleted","onDelClick","editContainer","deleted","row-selected","Provider","imageWidget_ImageWidget","imageWidget_awaiter","imageItemEdit","imageSrc","end","ui_image","imageWidget_decorate","widgetsFactory","datetime","time","email","updown","image","checkboxes","radio","range","typeWidget","getItemSchema","getTypeWidget","WidgetClass","formRes","zh","form_Form","calcSelectOrDelete","formData","arrItemOperated","DefaultContainer","DefaultFieldContainer","fieldLabelSize","labelView","fieldCol","DefaultFieldClass","DefaultButtonClass","DefaultRes","ui_res","py-3","Container","formContext","initDataItem","arrItem","arrItems","arrDict","formArrVal","beforeShow","buttonName","form_decorate","contextType","Badge_Badge","badgeAlign","badgeVertical","LMR_LMR","cursor","LMR_decorate","FA_FA","spin","pull","pulse","rotate","flip","inverse","Muted","base_ListBase","pageItems","selectedItems","nextProps","clickable_Clickable","static_Static","selectable_Selectable","itemsArray","compare","_selectedItems","selected","labelId","si","buildItems","anySelected","onSelect","flex","marginBottom","htmlFor","selectable_decorate","list_List","listBase","nextState","nextContext","updateProps","isLoading","staticRow","list_decorate","PropRow","row_PropBorder","borderTop","row_PropGap","w","backgroundColor","valueAlignStart","valueAlignCenter","valueAlignEnd","row_LabeledPropRow","gridProps","bk","bg-white","renderLabel","renderProp","align","vAlign","col","full","alignValue","renderPropBody","renderPropContent","StringPropRow","NumberPropRow","row_ListPropRow","borderBottom","ComponentPropRow","propView_PropView","isGap","PropGrid_PropGrid","propView","stringItemEdit_StringItemEdit","edit_itemEdit","preValue","edit_Edit","defaultSepClassName","defaultRowContainerClassName","edit_awaiter","onItemChanged","onItemClick","itemEdit","createItemEdit","topBorderClassName","bottomBorderClassName","sepClassName","rowContainerClassName","topBorder","bottomBorder","elItems","divValue","listRow_ListRow","pressed","isIcon","noteNum","mid","viceSpan","vice","middle","midSize","unread","uv","va-action","listView_ListView","elHeader","itemClick","converter","ex","listItem","listView_decorate","userSetProp","Tab","_content","contentBuilder","tabs_Tabs","tabClick","selectedTab","tabBack","contentBack","notify","height","display","notifyCircle","FetchErrorView","reApi","_net__WEBPACK_IMPORTED_MODULE_1__","errContent","LocalData","Data","homeTabCur","module","exports","mainApi","toUser","fromUnit","fromApp","fellow","isOwner","isAdmin","apps","member","assigned","roles","devApi","uqsText","service","admins_Admins","store","owners","admins","fellows","unitAdmins","ua","fellowId","unitSetAdmin","removeCur","admin","unitAddAdmin","dev_ObjItems","dev","_load","_save","_inc","_del","_dec","dev_decorate","dev_Apps","searchedUqs","saveApp","delApp","counts","searchUq","searchPageSize","allUqs","appBindUq","dev_Uqs","saveUq","delUq","dev_Buses","buses","saveBus","delBus","bus","dev_Servers","servers","saveServer","delServer","server","dev_Services","services","saveService","delService","changeServiceProp","db","db_type","connection","loadUqServices","SearchItems","dev_Dev","searchApp","searchServer","searchUqdb","cacheIds_CacheUnits","cacheIds_CacheUqs","cacheIds_CacheApps","cacheIds_CacheServers","store_Store","cacheUnits","cacheUqs","cacheApps","cacheServers","memberCount","roleApps","roleMember","roleMembers","memberRoles","unitChangeProp","unitApps","unitMemberCount","uqServer","uqBuilderUrl","unitDeleteApp","inUnit","unitAddApp","unitRoles","unitAddRole","unitRoleChangeProp","unitRoleApps","unitRoleSetApps","unitMembers","unitAssignMember","unitMemberRoles","rId","unitSetMemberRoles","org","store_decorate","store_store","NewFellow_NewFellowPage","onSendInvitation","NewFellow_awaiter","addNew","NewFellow","NewFellow_decorate","EditAdmin_EditAdmin","isRoot","Fellow","Administors_EditAdmin","EditAdmin_decorate","Administors_AdministorsPage","onNewOwner","newAdmin","onNewAdmin","ownersView","adminsView","onNewFellow","showOwners","showAdmins","Administors","Administors_decorate","idDates_IdDates","date_init","date_update","span","isLink","unitSpan_UnitSpan","unitSpan_UnitInfo","unitSpan_decorate","unitSpan_UnitName","consts_appIcon","appItemIcon","uqSpan_UqSpan","uqSpan_UqInfo","uqSpan_decorate","appSpan_AppSpan","appSpan_AppInfo","public","appSpan_decorate","apis","appSpan_AppRow","serverSpan_ServerSpan","serverSpan_ServerInfo","cloud","ip","serverSpan_decorate","stringValueEdit_StringValueEdit","stringValueEdit_awaiter","errorDiv","info","stringValueEdit_TextValueEdit","onTextAreaChange","idPickPage_IdPickPage","idPickPage_awaiter","candidateItems","searchPlaceHolder","idPickPage_decorate","info_Info","renderUqRow","uqAccess","act","info_awaiter","appActed","newInUnit","restoreUnitApp","stopUnitApp","newApp","addUnitApp","uqAccesses","faName","info_decorate","new_PageApps","new_NewApp","new_awaiter","appClick","renderApp","new_decorate","Apps_AppsPage","loadApps","ban","src_Apps","Apps_decorate","newRole_NewRole","tf","roleApps_RoleApps","renderRoleApp","memberPage_MemberPage","renderMemberRole","setRole","memberPage_SetRole","loadRoles","loadMemberRoles","orgValue","roleUser","onAssigned","roleClick","memberPage_decorate","setMemberRoles","selectRole","renderRole","roleSelect","membersPage_MembersPage","loadMembers","MemberRow","setRoleUser","roleId","membersPage_MemberSearch","renderMember","userClick","membersPage_decorate","members","rolePage_RolePage","roleAppClick","rolePage_RoleApps","loadRoleApps","rolePage_EditRole","onMembersClick","membersLeft","membersRight","editRole","addRoleApp","rolePage_decorate","roleChangeProp","isSysRole","onNameChanged","onDiscriptionChanged","setRoleApps","appSelect","midClassName","Members_Members","newRole","allUsersClick","Members_decorate","src_organization_ui","teamPerson","tonva_react_uq","_super","searchOnPost","querySelect","team","noStaff","staff","noPost","organization","teamPosts","CN","tuidNullCaption","arrNew","arrEdit","fromUser","subject","getMessage","newMessage","editSumbit","sectionTeam","teamOrganization","person","given","sur","gender","section","vOpBinding_VOpBinding","sheetOpsChanged","stateTosView","tosText","tos","organizationRow","teamRow","observableTeamRow","sectionRow","observableSectionRow","postRow","observablePostRow","stateView","vOpBinding_awaiter","saveOps","selectablePosts","teamsList","teams","defaultSelected","onPostSelectChanged","sections","onTeamSelectChanged","onSectionSelectChanged","organizations","posts","postTos","pid","pto","buildSelectablePost","buildSelectableTeams","teamTos","hasAllTeams","teamId","tto","teamTo0","teamTo0Sections","buildSelectableSections","teamTo","selectableTeam0","hasSection","selectableSection","selectableSections","stateTo","configable","stateClick","tosView","opTos","tosTexts","stateToName","toArr","sp","postId","teamCount","st","sectionCount","ss","sectionId","saveSheetStatePosts","vAllPosts_VAllPosts","onCheckChanged","def","saveChange","vAllPosts_awaiter","saveEntityOpForAll","pageRender","buttonSave","lineHeight","fontWeight","listStyleType","blocks","block","getEntityOpForAll","entityOpForAllResult","entityOpForAll","eaa","vAllPosts_decorate","vFullFunction_VFullFunction","users","onStopFully","vFullFunction_awaiter","onSumitStopFully","onCancelStop","_uq","_user","entityOpUserFully","callSearchUser","onUserSelected","renderUser","pageUsers","onSetFully","tuidUser","onCancelFully","renderSelectUser","usersView","vFullFunction_decorate","vSearchUser_VSearchUser","vSearchUser_PageUsers","onUserClick","vSearchUser_awaiter","cOpBinding_COpBinding","appRender","appView","appsView","cOpBinding_awaiter","entityPosts","opTo","postDict","teamDict","sectionDict","sheetClick","sheetClickOld","renderSetting","settingClick","V","uqRender","nameRender","sheetRender","buildPosts","buildAppsUqs","setUqEntities","queryAllTeams","organizationDict","tm","og","sec","lns","setEntities","setSheets","lines","actionSaveEntityOpPost","opName","organization_COrganization","links","organization_VOrganization","createIdPick","createIdPick_IdPickPage","ServerCaption","editPage_schema","editPage_awaiter","moreCandidates","editPage_EditBasePage","pickServerId","renderServerInput","itemId","editPage_EditPage","editPage_NewPage","appsPage_AppsPage","appList","listRowClick","appRow","appUqs_SearchUqPage","appUqs_awaiter","onUq","getMyUqs","appUqs_decorate","appUqs_AppUqs","removeBind","btnProps","appUqs_Uqs","listHeader","btn","onBind","appPage_AppPage","editItem","appPage_awaiter","deleteItem","deleteApp","menuItems","btnAddUq","uqClick","elAccess","bind_access","uqBindPage_UqBindPage","accessChecked","saveUqBind","uqBindPage_awaiter","removeUqBind","btnDelete","checkAccessList","bc","apps_AppController","apps_awaiter","service_count","buildBindUqs","isNew","uaUq","apps_decorate","uqUpload_UqUpload","upFiles","fileClick","fr","FileReader","onload","uqUpload_UqPage","readAsText","onUpdate","uqUpload_awaiter","update","onUpdateThoroughly","lastModifiedDate","trunc","sz","thoroughly","uqUpload_CompileResult","fileList","fileRender","encType","compiled","doubleClick","pane","getParent","topIntoView","bottomIntoView","texts","seconds","abort","timeHandler","tagName","parentElement","clearTimeHandler","scrollIntoView","reader","getReader","pump","read","done","scrollToBottom","uintArray","encodedString","fromCharCode","apply","decodeURIComponent","uintToString","byteLength","onDoubleClick","wordWrap","whiteSpace","newServicePage_ServerCaption","urlRow","serverRow","newServicePage_awaiter","dbTypeRow","dbRow","connectionRow","newServicePage_NewServicePage","bindId","tonvaForm","servicePage_ServicePage","onUrlChanged","servicePage_awaiter","changeProp","onDbChanged","onDbTypeChanged","onConnectionChanged","onDeleteClick","servicePage_decorate","uqs_editPage_formRows","uqs_editPage_EditBasePage","uqs_editPage_awaiter","uqs_editPage_EditPage","uqs_editPage_NewPage","uqPage_UQPage","uqPage_awaiter","deleteUq","onUqUpload","serviceClick","showNewServicePage","renderService","compile_time","compile","listPage_ListPage","uqList","uqs_UQController","uqs_awaiter","loadUqEntities","uqGetEntities","r0","svc","uqs_decorate","row_Row","buses_Info","buses_SchemaView","buses_decorate","repeated","idPickAppProps","services_awaiter","idPickUqProps","serviceTypeNames","bindIdField","services_urlRow","discriptionRow","services_serverRow","ObjView_ObjView","ObjView_Info","ObjView_New","ObjView_decorate","saveCur","stepHeader","ObjView_Edit","extraMenuActions","vApps_VApps","appUsers","appUsersList","onAppsClick","searchBox","vUsers_VUsers","userApps","userAppsList","searchUser","onUsersClick","vApp_VApp","curApp","curAppUsers","onAppEditUsers","vUser_VUser","curUser","curUserApps","onUserEditApps","vAppEditUsers_VAppEditUsers","appEditUsers","editUser","onUserChanged","vAppEditUsers_awaiter","bindAppUser","vUserEditApps_VUserEditApps","userEditApps","editApp","onAppChanged","vUserEditApps_awaiter","bindUserApp","VAddUser_VAddUser","onSearchFocus","divUser","onAddUser","VAddUser_awaiter","userFromKey","addUser","addedPage","onAddApps","onContinueAddUser","VAddUser_decorate","cUsers_UsersController","onAppUsers","cUsers_awaiter","loadAppUsers","onUserApps","loadUserApps","unitOneAppUsers","unitOneUserApps","unitAppEditUsers","unitUserEditApps","unitAddUser","appIcon","userIcon","unitAppUsers","coll","unitUsers","cUsers_decorate","Admin_CAdmin","userAdminUnits","adminUnits","loadAdminUnits","Admin_VAdmin","noUnitPage","Admin_awaiter","Admin_AdminPage","rArrow","typeCaptions","1","2","3","appsAction","usersAction","newUsersAction","adminsAction","cOrganization","organizeAction","noneAction","objProps","P","loadCounts","devItems","Admin_UnitProps","Admin_decorate","src_App_0","cAdmin","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","react_dom","URL","response","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"uFAAA,IAAAA,EAAAC,EAAA,IAAAA,EAAAC,EAAAC,EAAA,0BAAAH,EAAA,IAAAC,EAAA,QAAAG,EAAAH,EAAA,IAAAA,EAAAC,EAAAC,EAAA,8BAAAC,EAAA,IAAAH,EAAAC,EAAAC,EAAA,6BAAAC,EAAA,IAAAH,EAAAC,EAAAC,EAAA,0BAAAC,EAAA,IAAAH,EAAAC,EAAAC,EAAA,yBAAAC,EAAA,IAAAH,EAAAC,EAAAC,EAAA,+BAAAC,EAAA,IAAAH,EAAAC,EAAAC,EAAA,8BAAAC,EAAA,IAAAH,EAAAC,EAAAC,EAAA,gCAAAC,EAAA,QAAAC,EAAAJ,EAAA,IAAAA,EAAAK,EAAAD,EAAA,eAAAJ,EAAAC,EAAAC,EAAA,+BAAAE,EAAA,aAAAJ,EAAAK,EAAAD,EAAA,SAAAJ,EAAAC,EAAAC,EAAA,yBAAAE,EAAA,OAAAJ,EAAAK,EAAAD,EAAA,SAAAJ,EAAAC,EAAAC,EAAA,yBAAAE,EAAA,OAAAJ,EAAAK,EAAAD,EAAA,UAAAJ,EAAAC,EAAAC,EAAA,0BAAAE,EAAA,QAAAJ,EAAAK,EAAAD,EAAA,YAAAJ,EAAAC,EAAAC,EAAA,4BAAAE,EAAA,UAAAJ,EAAAK,EAAAD,EAAA,SAAAJ,EAAAC,EAAAC,EAAA,yBAAAE,EAAA,OAAAJ,EAAAK,EAAAD,EAAA,UAAAJ,EAAAC,EAAAC,EAAA,0BAAAE,EAAA,QAAAJ,EAAAK,EAAAD,EAAA,SAAAJ,EAAAC,EAAAC,EAAA,yBAAAE,EAAA,OAAAJ,EAAAK,EAAAD,EAAA,QAAAJ,EAAAC,EAAAC,EAAA,wBAAAE,EAAA,MAAAJ,EAAAK,EAAAD,EAAA,YAAAJ,EAAAC,EAAAC,EAAA,4BAAAE,EAAA,UAAAJ,EAAA,QAAAM,EAAAN,EAAA,IAAAA,EAAAC,EAAAC,EAAA,8BAAAI,EAAA,QAAAC,EAAAP,EAAA,IAAAA,EAAAC,EAAAC,EAAA,6BAAAK,EAAA,IAAAP,EAAA,kCCAA,IAAAQ,EAAAR,EAAA,IAAAA,EAAAK,EAAAG,EAAA,UAAAR,EAAAC,EAAAC,EAAA,0BAAAM,EAAA,QAAAR,EAAAK,EAAAG,EAAA,oBAAAR,EAAAC,EAAAC,EAAA,oCAAAM,EAAA,kBAAAR,EAAAK,EAAAG,EAAA,aAAAR,EAAAC,EAAAC,EAAA,6BAAAM,EAAA,WAAAR,EAAAK,EAAAG,EAAA,OAAAR,EAAAC,EAAAC,EAAA,uBAAAM,EAAA,KAAAR,EAAAK,EAAAG,EAAA,QAAAR,EAAAC,EAAAC,EAAA,wBAAAM,EAAA,MAAAR,EAAAK,EAAAG,EAAA,SAAAR,EAAAC,EAAAC,EAAA,yBAAAM,EAAA,OAAAR,EAAAK,EAAAG,EAAA,UAAAR,EAAAC,EAAAC,EAAA,0BAAAM,EAAA,QAAAR,EAAAK,EAAAG,EAAA,cAAAR,EAAAC,EAAAC,EAAA,8BAAAM,EAAA,YAAAR,EAAAK,EAAAG,EAAA,UAAAR,EAAAC,EAAAC,EAAA,0BAAAM,EAAA,QAAAR,EAAAK,EAAAG,EAAA,aAAAR,EAAAC,EAAAC,EAAA,6BAAAM,EAAA,WAAAR,EAAAK,EAAAG,EAAA,cAAAR,EAAAC,EAAAC,EAAA,8BAAAM,EAAA,YAAAR,EAAAK,EAAAG,EAAA,cAAAR,EAAAC,EAAAC,EAAA,8BAAAM,EAAA,gBAAAC,EAAAT,EAAA,IAAAA,EAAAC,EAAAC,EAAA,yBAAAO,EAAA,QAAAC,EAAAV,EAAA,IAAAA,EAAAC,EAAAC,EAAA,oCAAAQ,EAAA,QAAAC,EAAAX,EAAA,IAAAA,EAAAC,EAAAC,EAAA,6BAAAS,EAAA,QAAAC,EAAAZ,EAAA,IAAAA,EAAAC,EAAAC,EAAA,6BAAAU,EAAA,QAAAC,EAAAb,EAAA,IAAAA,EAAAC,EAAAC,EAAA,0BAAAW,EAAA,IAAAb,EAAAC,EAAAC,EAAA,uBAAAW,EAAA,IAAAb,EAAAC,EAAAC,EAAA,wBAAAW,EAAA,IAAAb,EAAAC,EAAAC,EAAA,0BAAAW,EAAA,QAAAC,EAAAd,EAAA,IAAAA,EAAAC,EAAAC,EAAA,0BAAAY,EAAA,IAAAd,EAAA,QAAAe,EAAAf,EAAA,IAAAA,EAAAC,EAAAC,EAAA,8BAAAa,EAAA,QAAAC,EAAAhB,EAAA,IAAAA,EAAAC,EAAAC,EAAA,8BAAAc,EAAA,IAAAhB,EAAA,8YCcO,MAAeiB,UAAuDC,EAAA,EACzEC,YAAYC,EAAUC,EAAWC,EAAQC,GACrCC,MAAMJ,EAAKG,GACXE,OAAOC,eAAeC,KAAKC,EAAGR,EAAIQ,GAClC,IAAIC,KAACA,EAAIC,SAAEA,GAAYT,EACvBM,KAAKN,OAASA,EACdM,KAAKL,GAAKA,EACVK,KAAKI,MAAQJ,KAAKJ,IAAIQ,OAASF,EAC/BF,KAAKK,KAAOC,EAAA,EAAYH,GAKZX,sDAGZ,aADMQ,KAAKN,OAAOa,cACX,IAGXf,WAAWgB,EAA4BC,EAAaC,GAChD,IAAIC,EAAUX,KAAKY,iBAAiBF,GAChCG,EAAM,IAAIC,EAAA,EAAMH,EAASH,GAE7B,OADAK,EAAIE,UAAUN,GACPI,EAGHrB,iBAAiBkB,GACrB,IACIM,EAAMC,EAAeC,EAAeC,EAAgBC,GADpDC,OAACA,EAAMC,UAAEA,GAAatB,KAAKN,YAEd6B,IAAbvB,KAAKJ,MACLoB,EAAOhB,KAAKJ,IAAU,KACtBqB,EAAgBjB,KAAKJ,IAAY,OACjCsB,EAAgBlB,KAAKJ,IAAY,OACjCuB,EAAiBnB,KAAKJ,IAAa,QACnCwB,EAAoBpB,KAAKJ,IAAuB,wBAEvC2B,IAATP,IACAA,EAAOhB,KAAKP,IAAIG,IAAU,MAAK,aAEb2B,IAAlBN,IACAA,EAAgBjB,KAAKP,IAAIG,IAAY,QAAK,eACxB2B,IAAlBL,IACAA,EAAgBlB,KAAKP,IAAIG,IAAY,QAAK,YACvB2B,IAAnBJ,IACAA,EAAiBnB,KAAKP,IAAIG,IAAa,SAAK,aACtB2B,IAAtBH,IACJA,EAAoBpB,KAAKP,IAAIG,IAAuB,wBACvC2B,IAATb,IAAoBA,EAAOI,EAAA,EAASU,KACxC,IAAIC,EAASzB,KAAKL,GAAG+B,KAcrB,MAbsB,CAClBL,OAAQA,EACRM,KAAML,EACN3B,GAAI8B,EACJ7B,IAAKI,KAAKJ,KAAO,GACjBgC,OAAQ5B,KAAK6B,YAAYJ,GACzBT,KAAMA,EACNC,cAAeA,EACfC,cAAeA,EACfC,eAAgBA,EAChBC,kBAAmBA,EACnBV,KAAMA,GAKNlB,YAAYiC,GAChB,IAAIJ,OAACA,EAAMC,UAAEA,GAAatB,KAAKN,OAC3BmB,EAAkB,GAEtB,GADAb,KAAK8B,kBAAkBjB,EAAKQ,OAAQE,EAAWE,QAC7BF,IAAdD,EACA,IAAK,IAAIS,KAAOT,EAAW,CACvB,IAAIpB,KAACA,EAAImB,OAAEA,GAAUU,EACjBC,EAAQP,GAAUA,EAAOO,MAC7BhC,KAAK8B,kBAAkBjB,EAAKQ,EAAQnB,EAAM8B,GAASA,EAAM9B,IAGjE,OAAOW,EAGHrB,kBAAkBqB,EAAiBQ,EAAgBU,EAAYN,GACnE,QAAYF,IAARQ,EAAmB,CACnB,IAAIE,EAAiBpB,EAAIkB,QACFR,IAAnBU,IACApB,EAAIkB,GAAOE,EAAiB,GAC5BpB,EAAMoB,GAGd,IAAK,IAAIC,KAASb,EAAQ,CACtB,IAAInB,KAACA,EAAIiC,MAAEA,GAASD,EACpB,QAAcX,IAAVY,EAAqB,SACzB,IAAIC,EAAUX,GAAUA,EAAOO,OAASP,EAAOO,MAAM9B,GACrDW,EAAIX,GAAQ,CACRmC,OAAQrC,KAAKsC,YAAYJ,EAAOH,EAAKK,GACrCG,QAASvC,KAAKwC,aAAaN,EAAOH,GAClCU,YAAazC,KAAKP,IAAIiD,mBAAmBP,KAK3C3C,YAAY0C,EAAaH,EAAYK,GAC3C,MAAO,CAAOV,EAAYQ,EAAazB,IAA2BkC,EAAA3C,UAAA,qBAC9D,IAAImC,MAACA,EAAKS,YAAEA,GAAeV,EACvBW,QAAqBV,EAAmBW,cACxCC,OAAYxB,OACIA,IAAhBqB,IAA2BG,EAAQrB,EAAKsB,SAASJ,EAAY1C,OAC7DkC,IAAgC,IAArBA,EAAQa,WACnBC,QAAQC,IAAI,wCACZJ,EAAQ,IAEZ,IAAIlC,QAAYgC,EAAYO,KAAKL,GAEjC,GADAF,EAAYQ,oBACA9B,IAARV,EAAmB,OACvB,IAAIyC,EAAKT,EAAYU,WAAW1C,GAEhC,OADAsB,EAAMqB,MAAMF,GACLA,IAIL9D,aAAa0C,EAAaH,IAIpCvC,aAAaiE,GACT,OAAOzD,KAAKP,IAAIiE,aAAaD,IAI9B,MAAeE,UAAiFC,EAAA,MAGnGpE,YAAYqE,GACRhE,MAAMgE,GACN7D,KAAKN,OAASmE,EAAWnE,OACzBM,KAAKL,GAAKkE,EAAWlE,GAGzBS,YAAoB,OAAOJ,KAAK6D,WAAWzD,MAGjCZ,WAAWgB,EAA4BC,EAAaC,GAE1D,OAAOV,KAAK6D,WAAWC,WAAWtD,EAAUC,EAAQC,m1BCxI5D,MAKaqD,EALC,IAAIC,OAAO,gFAGrB,KACmBC,KAAKC,UAAUC,WACK,CACvCC,UAAY,YACZ7C,EAESlD,EAAQ,IACrB,IAAIgG,EACJ,MAAMC,EAAgB,GAStB,IAAIC,EAAW,EAcR,MAAMC,UAAgBC,EAAA,UAMzBjF,YAAYkF,GACR7E,MAAM6E,GAJF1E,KAAA2E,UAAoB,EA4NpB3E,KAAA4E,eAAwB,EA8BhC5E,KAAA6E,WAAa,MACT7E,KAAK8E,SAAS,CAACC,gBAAYxD,MAtP3BvB,KAAKgF,KAAOhF,KAAKgF,KAAKC,KAAKjF,MAC3BA,KAAKkF,QAAUlF,KAAKkF,QAAQD,KAAKjF,MACjCA,KAAKmF,MAAQ,GACbnF,KAAKoF,MAAQ,CACTD,MAAOnF,KAAKmF,MACZE,KAAM,EACNN,gBAAYxD,GAGd/B,6DACF8F,OAAOC,iBAAiB,WAAYvF,KAAKkF,WAGvC1F,4DAEFgG,EAAIC,IAAIzF,YAQEwF,EAAIE,UAIlBC,YACI,OAAO3F,KAAKmF,MAAMS,OAGtBpG,YAC2B,IAAnBQ,KAAK2E,YACL3E,KAAK8E,SAAS,CAACO,KAAM,IACrBrF,KAAK6F,gBAAkBC,EAAOC,WAC1B,KACI/F,KAAK6F,qBAAkBtE,EACvBvB,KAAK8E,SAAS,CAACO,KAAM,KAEzB,QAENrF,KAAK2E,UACP3E,KAAK8E,SAAS,CACVC,gBAAYxD,IAIpB/B,UACIuG,WAAW,OAKL/F,KAAK2E,UACgB,IAAnB3E,KAAK2E,iBACwBpD,IAAzBvB,KAAK6F,kBACLG,aAAahG,KAAK6F,iBAClB7F,KAAK6F,qBAAkBtE,GAE3BvB,KAAK8E,SAAS,CAACO,KAAM,MAE3B,KAGA7F,QAAQuF,2CAEV,IAAIkB,EAAMlB,EAAWmB,WACT3E,IAAR0E,IAA0C,IAArBA,EAAIE,aAI7BnG,KAAK8E,SAAS,CACVC,WAAYA,UAJNS,EAAIY,eAAU7E,KAQ5B/B,KAAK6G,EAAmBC,GAEpB,OADAtG,KAAKuG,QACEvG,KAAKwG,KAAKH,EAAMC,GAG3B9G,KAAK6G,EAAmBC,GACpBtG,KAAKqD,eACDrD,KAAKmF,MAAMS,OAAS,GACpBN,OAAOmB,QAAQC,UAAU,UAAW,KAAM,MAE9C,IAAIC,EAAMpC,IASV,OARAvE,KAAKmF,MAAMqB,KAAK,CACZG,IAAKA,EACLN,KAAMA,EACNO,QAAQ,EACRN,SAAUA,IAEdtG,KAAK6G,UAEEF,EAGXnH,QAAQ6G,EAAmBC,GACvB,IAAIQ,OAAiBvF,EACjB4D,EAAQnF,KAAKmF,MACbA,EAAMS,OAAS,IACfkB,EAAO3B,EAAM4B,OAGjB,IAAIJ,EAAMpC,IAUV,OATAvE,KAAKmF,MAAMqB,KAAK,CACZG,IAAKA,EACLN,KAAMA,EACNO,QAAQ,EACRN,SAAUA,SAED/E,IAATuF,GAAoB9G,KAAKgH,QAAQF,EAAKR,UAC1CtG,KAAK6G,UAEEF,EAGXnH,SAASmG,EAAe,GACpB,IAAIsB,EAAIjH,KAAKmF,MAAMS,OAAS,EAC5B,IAAK,IAAIsB,EAAE,EAAGA,EAAEvB,KACRsB,EAAI,GADWC,IAAKD,IAAK,CAElBjH,KAAKmF,MAAM8B,GACjBL,QAAS,GAItBpH,IAAImG,EAAe,GACf,IAAIR,EAAQnF,KAAKmF,MACbgC,EAAMhC,EAAMS,OAEhB,GAAID,GAAS,GAAKwB,GAAO,EAAG,OACxBA,EAAMxB,IAAOA,EAAQwB,GACzB,IAAIC,EAAY,EAChB,IAAK,IAAIF,EAAI,EAAGA,EAAIvB,GACK,IAAjBR,EAAMS,OADasB,IAGvBlH,KAAKqH,kBACHD,EAEFA,GAAaD,GAAKC,IACtBpH,KAAK6G,UACD7G,KAAK4E,cAQbpF,MAAMmH,GACF,QAAYpF,IAARoF,QACwCpF,IAAxCvB,KAAKmF,MAAMmC,KAAKC,GAAKA,EAAEZ,MAAQA,GACnC,KAAO3G,KAAKmF,MAAMS,OAAQ,GAAG,CACzB,IAAIuB,EAAMnH,KAAKmF,MAAMS,OAErB,GADU5F,KAAKmF,MAAMgC,EAAI,GACjBR,MAAQA,EAAK,MACrB3G,KAAK+G,OAIbvH,SACI,IAAI2H,EAAMnH,KAAKmF,MAAMS,OACrB,GAAY,IAARuB,EACJ,OAAOnH,KAAKmF,MAAMgC,EAAI,GAAGR,IAG7BnH,eACI,OAAS,CACL,IAAIyH,EAAEjH,KAAKmF,MAAMS,OAAO,EACxB,GAAIqB,EAAI,EAAG,MAEX,IAAmB,IADTjH,KAAKmF,MAAM8B,GACbL,OAAkB,MAC1B,IAAIE,EAAO9G,KAAKmF,MAAM4B,OAClBT,SAACA,GAAYQ,EACjB9G,KAAKgH,QAAQV,GAEjBtG,KAAK6G,UAGDrH,gBACJQ,KAAKqD,eACL,IAAIyD,EAAO9G,KAAKmF,MAAM4B,MACtB,QAAaxF,IAATuF,EAAoB,OACxB,IAAIR,SAACA,GAAYQ,EAGjB,OAFA9G,KAAKgH,QAAQV,GACbtG,KAAKqD,eACEyD,EAGHtH,QAAQ8G,GACZ,QAAiB/E,IAAb+E,EAAwB,YAEf/E,IADFvB,KAAKmF,MAAMmC,KAAKC,GAAKA,EAAEjB,WAAaA,IACvBA,IAG5B9G,QACcQ,KAAKmF,MAAMS,OACrB,KAAO5F,KAAKmF,MAAMS,OAAS,GAAG5F,KAAKqH,gBACnCrH,KAAK6G,UAQTrH,gBAAgBgI,GACZ,IAAIrC,EAAQnF,KAAKmF,MACbgC,EAAMhC,EAAMS,OACJ,IAARuB,IACMhC,EAAMgC,EAAI,GAChBK,aAAeA,GAIvBhI,UACIgG,EAAIrC,IAAI,mCAAqCnD,KAAKmF,MAAMS,QACxD5F,KAAK4E,eAAgB,EACrB5E,KAAKgF,MAAK,GACVhF,KAAK4E,eAAgB,EAGnBpF,KAAKiI,GAAkB,2CACzB,IAAItC,EAAQnF,KAAKmF,MACbgC,EAAMhC,EAAMS,OAChB,GAAY,IAARuB,EAAW,OACf,GAAY,IAARA,EAIA,YAHIO,MAAQpC,OAAOqC,KACfrC,OAAOqC,IAAIC,YAAY,CAACC,KAAK,WAAY,MAIjD,IAAIF,EAAMxC,EAAMgC,EAAI,IACN,IAAVM,GAAkBE,EAAIH,cACS,WAArBG,EAAIH,iBAAuBxH,KAAK+G,MAG1C/G,KAAK+G,QAIbvH,WAAWsI,GACP,OAAOxC,OAAOmC,QAAQK,GAK1BtI,SACI,MAAM6F,KAACA,EAAIN,WAAEA,GAAc/E,KAAKoF,MAChC,IAAID,EAAQnF,KAAKoF,MAAMD,MACnBwC,EAAMxC,EAAMS,OAAS,EACrBmC,EAAS,KAAMC,EAAU,KAC7B,OAAQ3C,GACJ,KAAK,EACD0C,EAAStD,EAAA,oBAAIwD,UAAU,qBAEvB,MACJ,KAAK,EACDF,EAAStD,EAAA,oBAAIwD,UAAU,oBACnBxD,EAAA,mBAAGwD,UAAU,sCACbxD,EAAA,sBAAMwD,UAAU,WAAS,eAMrC,OAFIlD,IACAiD,EAAUvD,EAAA,cAACyD,EAAA,EAAcpI,OAAAqI,OAAA,CAACtD,WAAY7E,KAAK6E,YAAgBE,KAE/DN,EAAA,oBAAIwD,UAAU,MAEN9C,EAAMiD,IAAI,CAACtB,EAAMuB,KACb,IAAI1B,IAACA,EAAGN,KAAEA,GAAQS,EAClB,OAAOrC,EAAA,oBAAIkC,IAAKA,EAAK2B,MAAOD,EAAMV,EAAK,CAACY,WAAY,eAAUhH,GACzD8E,KAIZ0B,EACAC,GAKDxI,UAEJQ,KAAK8E,SAAS,CAACK,MAAOnF,KAAKmF,SAK5B,MAAMqD,EAUThJ,cANQQ,KAAAyI,MAAmB,IAAIC,EAAA,EACnB1I,KAAA2I,UAAsBpH,EAM9B,IAAIqH,KAACA,EAAIC,SAAEA,GAAYC,EAAA,EACvB9I,KAAK+I,SAAWH,EAChB5I,KAAKgJ,QAAUH,EAGnBI,YACI,IAAIA,EAAQjJ,KAAKyI,MAAMQ,MACvB,QAAc1H,IAAV0H,EAAqB,OAAO,EAChC,IAAIC,EAAID,EAAME,MACd,YAAU5H,IAAN2H,EAAwB,EACrBA,EAAED,MAGbzJ,IAAIgG,GAEAxF,KAAKwF,IAAMA,EAGfhG,uBAAuB4J,GACnB,QAAgB7H,IAAZvB,KAAKqJ,GACT,OAAOrJ,KAAKqJ,GAAGC,eAAeF,GAGlC5J,yBAAyB+J,QACLhI,IAAZvB,KAAKqJ,SACS9H,IAAdgI,GACJvJ,KAAKqJ,GAAGG,aAAaD,GAGnB/J,UAAUiK,gDACIlI,IAAZvB,KAAKqJ,WACHrJ,KAAKqJ,GAAGK,QAAQD,MAGZjK,sDACV,IACI,IAAImK,QAAgBC,MAAM,YAAa,IAGvC,aADgBD,EAAQE,QACbC,KAEf,MAAO7D,GAEH,YADAjG,KAAKyI,MAAMqB,KAAKvD,WAKV/G,mDACV,IAAIuK,EACAD,EAAO9J,KAAKyI,MAAMqB,KAAKX,MAC3B,QAAa5H,IAATuI,EAAoB,CACpB,IAAsB,IAAlBE,EAAA,EAAwB,OAAOF,EAAKxG,GAExC,QAAiB/B,KADjBwI,QAAiB/J,KAAKiK,eACM,OAC5B,GAAIH,EAAK5J,OAAS6J,EAAU,OAAOD,EAAKxG,QAIxC,QAAiB/B,KADjBwI,QAAiB/J,KAAKiK,eACM,OAEhC,IAAIC,QAAeF,EAAA,EAASG,aAAaJ,GAIzC,YAHexI,IAAX2I,GACAlK,KAAKyI,MAAMqB,KAAKrE,IAAI,CAACnC,GAAI4G,EAAQhK,KAAM6J,IAEpCG,IAKL1K,gDACFgG,EAAIe,QACJf,EAAIgB,KAAK/B,EAAA,cAAC2F,EAAA,EAAI,CAACC,QAAQ,GAAO5F,EAAA,cAAC6F,EAAA,EAAO,cAChCN,EAAA,EAAKtE,QACX,IAAI6E,IAACA,EAAGlB,GAAEA,EAAEmB,QAAEA,GAAWR,EAAA,EACzBhK,KAAKyK,WAAaF,EAClBvK,KAAK0K,OAAS,UAAYF,EAAU,QACpCxK,KAAK2K,OAAStB,EACdvJ,OAAAkK,EAAA,EAAAlK,CAAayK,GAEb,IAAIT,QAAa9J,KAAK4K,WACtBZ,EAAA,EAAUF,KAAOA,EAEjB,IAAIb,EAAcjJ,KAAKyI,MAAMQ,MAAME,WACrB5H,IAAV0H,IACAA,QAAce,EAAA,EAASf,SAE3BzD,EAAIqF,SAAS5B,GAEb,IAAI6B,EAAOC,SAASC,SAASF,KAI7B,GAFA5H,QAAQC,IAAI,iBAAkB4H,SAASC,SAASC,OAAQH,GACxD9K,KAAKkL,eAAqB3J,IAATuJ,GAA+B,KAATA,GAAeA,EAAKK,WAAW,QAC/C,IAAnBnL,KAAKkL,UAAoB,CACzB,IAAIE,EAAMtL,OAAAuL,EAAA,EAAAvL,CAAagL,GACvB,QAAYvJ,IAAR6J,EASA,OARApL,KAAKqJ,GAAKiC,EAAA,EACVpI,QAAQC,IAAI,wCAERuE,OAASpC,OAAOiG,QAChBjG,OAAOiG,OAAO3D,YAAY,CAACC,KAAK,oBAAqBiD,KAAMM,EAAIN,MAAO,MAQlF,IAAInC,EAAa3I,KAAKyI,MAAME,KAAKQ,MACjC,QAAa5H,IAAToH,QAWEnD,EAAIgG,QAAQ7C,OAXlB,CACI,IAAI8C,WAACA,GAAczL,KAAKwF,IAAId,WACTnD,IAAfkK,QACMA,UAGAjG,EAAIY,eAAU7E,MAQ1B/B,sDACF,IAAIkM,UAACA,GAAa1L,KAAKwF,IAAId,WACTnD,IAAdmK,GAIJlG,EAAIe,cACEmF,IACNxI,QAAQC,IAAI,2BALRqC,EAAIgB,KAAK/B,EAAA,6DAQjBjF,SAASyJ,GACLjJ,KAAKyI,MAAMQ,MAAMxD,IAAIwD,GACrB0C,EAAA,EAASlG,IAAI,EAAGwD,EAAM2C,OAG1BpM,gBACIQ,KAAKyI,MAAME,KAAKlD,IAAIzF,KAAK2I,MAGvBnJ,QAAQmJ,EAAYkD,4CACH7L,KAAKqJ,GAAK,IAAIW,EAAA,EAAUhK,KAAK2K,OAAQhC,EAAKiD,QAC1DE,UAEH5I,QAAQC,IAAI,cAAe4I,KAAKC,UAAUrD,IAC1C3I,KAAK2I,KAAOA,EACZ3I,KAAKiM,gBACLN,EAAA,EAASlG,IAAIkD,EAAKrF,GAAIqF,EAAKiD,YACVrK,IAAbsK,EACAA,EAASlD,SAGH3I,KAAKkM,gBAIb1M,UAAUqM,EAAuClE,EAAUwE,2CAC7D,IAAIC,QAAW/N,EAAAgO,EAAA,GAAAC,KAAAjO,EAAA4G,KAAA,WACVsH,EAAY9H,EAAA,cAAC2H,EAAGI,QAAO,CAACL,SAAUA,EAAUN,SAAUA,EAAUlE,IAAKA,KACzD,IAAbwE,IACAnM,KAAKwF,IAAIe,QACTvG,KAAK+G,OAET/G,KAAKwF,IAAIgB,KAAK+F,KAGZ/M,WAAWqM,2CACbrG,EAAIgB,KAAK/B,EAAA,cAAC2F,EAAA,EAAI,CAACC,OAAO,2BAAOrF,KAAK,SAC9BP,EAAA,qBAAKwD,UAAU,2DACXxD,EAAA,iNACAA,EAAA,qBAAKwD,UAAU,QACXxD,EAAA,wBAAQwD,UAAU,iBAAiBwE,QAAS,IAAIzM,KAAK0M,OAAOb,IAAS,sBAM/ErM,OAAOqM,2CACT7L,KAAKyI,MAAMkE,cACX3M,KAAK2I,UAAOpH,EACZzB,OAAAkK,EAAA,EAAAlK,GACAA,OAAAuL,EAAA,EAAAvL,GACA,IAAImJ,EAAQjJ,KAAKyI,MAAMQ,MAAME,MAC7BrJ,OAAAkK,EAAA,EAAAlK,CAAe,EAAGmJ,GAASA,EAAM2C,OACjC5L,KAAKqJ,QAAK9H,OASOA,IAAbsK,QACMrG,EAAIE,cAEJmG,MAGRrM,yDACF,IAAIoN,QAAWvO,EAAAgO,EAAA,GAAAC,KAAAjO,EAAA4G,KAAA,WACfO,EAAIgB,KAAK/B,EAAA,cAACmI,EAAGC,mBAAkB,SAGnClH,YACI,OAAO3F,KAAKwF,IAAIG,MAEpBnG,YACIQ,KAAKwF,IAAIsH,YAEbtN,UACIQ,KAAKwF,IAAIuH,UAEPvN,QAAQ0G,iDACJlG,KAAKwF,IAAIwH,QAAQ9G,KAE3B1G,KAAM6G,EAAmBC,GACrBtG,KAAKwF,IAAIyH,KAAK5G,EAAMC,GAExB9G,KAAK6G,EAAmBC,GACpBtG,KAAKwF,IAAIgB,KAAKH,EAAMC,GAExB9G,QAAQ6G,EAAmBC,GACvBtG,KAAKwF,IAAI0H,QAAQ7G,EAAMC,GAE3B9G,IAAImG,EAAe,GACf3F,KAAKwF,IAAIuB,IAAIpB,GAEjBnG,SACI,OAAOQ,KAAKwF,IAAI2H,SAEpB3N,MAAMmH,GACF3G,KAAKwF,IAAI4H,MAAMzG,GAEnBnH,QACIQ,KAAKwF,IAAIe,QAEb/G,UACIQ,KAAKwF,IAAIN,UAEb1F,SAASmG,GACL3F,KAAKwF,IAAI6H,SAAS1H,GAEtBnG,eACIQ,KAAKwF,IAAInC,eAEP7D,KAAKiI,GAAkB,iDACnBzH,KAAKwF,IAAIR,KAAKyC,KAExBjI,gBAAgBgI,GACZxH,KAAKwF,IAAI8H,gBAAgB9F,GAE7BhI,WAAWsI,GACP,OAAO9H,KAAKwF,IAAI+H,WAAWzF,GAEzBtI,SAAS+K,EAAaL,EAAgBsD,EAAeC,EAAmBC,2CAC1E,OAAO,IAAIC,QAAc,CAACC,EAASC,KAC/B,IAAIC,GAA0D,IAAlD9N,KAAKyK,WAAWsD,SAAS,qBAA+B,cAAc,QAC9EC,OAAiBzM,IAAZmM,EACD5N,OAAAuL,EAAA,EAAAvL,CAAOyK,EAAKL,GACZpK,OAAAuL,EAAA,EAAAvL,CAAOyK,EAAKL,EAAQ4D,EAAO,CAACN,EAAOC,EAAWC,IACtDxK,QAAQC,IAAI,eAAgB4I,KAAKC,UAAUgC,IAC3CxI,EAAIgB,KAAK/B,EAAA,yBAASwD,UAAU,iBACxBxD,EAAA,sBAAMnB,GAAI0K,EAAGlD,KAAM2B,QAAS,IAAIzM,KAAKgF,OAAQsD,MAAOvE,GAChDU,EAAA,mBAAGwD,UAAU,sBAEjBxD,EAAA,wBAAQwJ,IAAKD,EAAGzD,OAEpB,KACIqD,UAKZpO,UAAU+K,GAENjF,OAAO4I,KAAK3D,GAGhBjG,WAAY,OAAOA,EACnB9E,IAAIiK,GACAnF,EAAKkC,KAAKiD,GAEdjK,UACI,IAAI2O,EAAO,IAAIC,KACf/J,EAAU8J,EAAKE,UACf/J,EAAKkC,KAAK,aAAe2H,EAAKG,gBAElC9O,QAAQ+O,GACJjK,EAAKkC,KAAK+H,EAAO,OAAQ,IAAIH,MAAOC,UAAYhK,KAzSxCmK,EAAA,CAAXC,EAAA,8BA4SE,MAAMjJ,EAAW,IAAIgD,mDChpB5BnK,EAAAC,EAAAC,EAAA,sBAAAmQ,IAAArQ,EAAAC,EAAAC,EAAA,sBAAAoQ,IAAAtQ,EAAAC,EAAAC,EAAA,sBAAAqQ,IAAAvQ,EAAAC,EAAAC,EAAA,sBAAAsQ,IAAA,IAAApK,EAAApG,EAAA,GAAAyQ,EAAAzQ,EAAA,GAAA0Q,EAAA1Q,EAAA,IAQO,MAAeqQ,EAElBlP,OAAOyI,GACH,YAAkB1G,IAAdvB,KAAKqG,KAA2B5B,EAAA,4EAC7BA,EAAA,cAAoBzE,KAAKqG,KAAM,CAAC2I,GAAIhP,KAAMiI,UAAUA,KAI5D,MAAM0G,EAAkB,CAAClO,EAAQR,IAAWwE,EAAA,cAAAA,EAAA,0BAAY3E,OAAAiP,EAAA,EAAAjP,CAAcW,IAChEmO,EAAc9O,OAAAgP,EAAA,EAAAhP,CAAS6O,GACvBE,EACRpO,GAAWgE,EAAA,qBAAKwD,UAAU,aAAanI,OAAAiP,EAAA,EAAAjP,CAAcW,kCCnB1D,SAASwO,EAAStI,EAAYuI,GAE1B,OADYvI,EAAIwI,OAAO,EAAG,IAEtB,QAAS,OAAOD,EAChB,IAAK,IACL,IAAK,IAAK,QAIX,SAASE,EAAcF,GAC1B,OAAOnD,KAAKC,UAAUkD,EAAOD,EAAU,+BC0B3C,MAAMI,EAAKvP,OAAAwP,EAAA,EAAAxP,CAAS,EAAEyP,YAAW5P,KAAIM,IAAGuP,aACpC,IAAIC,SAAaF,EACjB,OAAQE,GACJ,QACI,QAAWlO,IAAP5B,EACA,OAAO+P,EAAA,cAAAA,EAAA,cAAGD,MAAMF,GACf,CACD,IAAI1O,EAAMlB,EAAG4P,EAAWtP,GACxB,YAAYsB,IAARV,EAA0BA,EACvB6O,EAAA,cAAAA,EAAA,cAAGH,GAElB,IAAK,YACD,MACJ,IAAK,SACD,GAAkB,OAAdA,EAAoB,OApCpC,SAAsBI,EAAkBhQ,EAAcM,GAClD,GAAkB,kBAAP0P,EAAiB,OAAOD,EAAA,cAAAA,EAAA,cAAGC,GACtC,IAAIrM,GAACA,EAAEsM,OAAEA,EAAMC,MAAEA,GAASF,EACtBG,EAASF,EACb,QAAUrO,IAANuO,EACA,YAAWvO,IAAP5B,EAAyBA,EAAGgQ,EAAI1P,GAC7BH,OAAAiQ,EAAA,gBAAAjQ,CAAgB6P,EAAI1P,GAE/B,IAAI+P,EAAMrQ,GAAMkQ,OACJtO,IAARyO,IACAA,EAAML,EAAGE,MAAQC,EAAEG,kBAEvB,IAAIC,EAAMJ,EAAEK,YAAY7M,GAExB,GADmB,kBAAR4M,IAAkBA,EAAM,CAAC5M,GAAI4M,SAC7B3O,IAAP5B,EAAkB,CAClB,IAAIkB,EAAMlB,EAAGuQ,EAAKjQ,GAClB,YAAYsB,IAARV,EAA0BA,EACvB6O,EAAA,cAAAA,EAAA,cAAGpM,GAEd,OAAOoM,EAAA,cAAoBM,EAAKE,GAiBOE,CAAab,EAAW5P,EAAIM,GAC3D,MACJ,IAAK,SACD,OAAOyP,EAAA,cAAAA,EAAA,sBAAQH,GAEvB,YAAehO,IAAXiO,EAA6BE,EAAA,cAAAA,EAAA,sBAC1BF,MAGEa,EAAK,CAACd,EAAwB5P,EAAeM,EAAQuP,IACvDE,EAAA,cAACL,EAAE,CAACE,UAAWA,EAAW5P,GAAIA,EAAIM,EAAGA,EAAGuP,OAAQA,IC5D3DnR,EAAAC,EAAAC,EAAA,sBAAA6Q,IAAA/Q,EAAAC,EAAAC,EAAA,sBAAA8R,2UCsBO,MAAMC,EAAW,IAnBjB,cAAuBC,EAAA,EACpB/Q,gDAEF,IAAIqB,QAAYb,KAAKmJ,IAAI,GAAI,IAC7B,cAAetI,GACX,QAAS,OACT,IAAK,SAAU,OAAOf,OAAA6I,EAAA,EAAA7I,CAAiBe,GACvC,IAAK,SAED,OADYf,OAAA6I,EAAA,EAAA7I,CAAiBe,EAAI+K,UAKvCpM,aAAauK,2CACf,IAAIlJ,QAAYb,KAAKmJ,IAAIY,GACzB,OAAOlJ,GAAOA,EAAIiJ,SAIW,iBAAavI,6BCtBlDlD,EAAAC,EAAAC,EAAA,sBAAAiS,EAAA,IAAAnS,EAAAC,EAAAC,EAAA,sBAAAiS,EAAA,IAAAnS,EAAAC,EAAAC,EAAA,sBAAAkS,EAAA,IAAApS,EAAAC,EAAAC,EAAA,sBAAA+R,IAAAjS,EAAAC,EAAAC,EAAA,sBAAAgS,EAAA,IAAAlS,EAAAC,EAAAC,EAAA,sBAAAgS,EAAA,IAAAlS,EAAAC,EAAAC,EAAA,sBAAAgS,EAAA,IAAAlS,EAAAC,EAAAC,EAAA,sBAAAgS,EAAA,IAAAlS,EAAAC,EAAAC,EAAA,sBAAAgS,EAAA,IAAAlS,EAAAC,EAAAC,EAAA,sBAAAgS,EAAA,IAAAlS,EAAAC,EAAAC,EAAA,sBAAAgS,EAAA,IAAAlS,EAAAC,EAAAC,EAAA,sBAAAmS,EAAA,IAAArS,EAAAC,EAAAC,EAAA,sBAAAmS,EAAA,IAAArS,EAAAC,EAAAC,EAAA,sBAAAoS,EAAA,IAAAtS,EAAAC,EAAAC,EAAA,sBAAAoS,EAAA,6vBCAA,IAAAC,EAAAvS,EAAA,GAAAA,EAAAC,EAAAC,EAAA,4BAAAqS,EAAA,IAAAvS,EAAAC,EAAAC,EAAA,wBAAAqS,EAAA,IAAAvS,EAAA,QAAA+L,EAAA/L,EAAA,IAAAA,EAAAC,EAAAC,EAAA,yBAAA6L,EAAA,QAAAyG,EAAAxS,EAAA,IAAAA,EAAAC,EAAAC,EAAA,+BAAAsS,EAAA,IAAAxS,EAAAC,EAAAC,EAAA,0BAAAsS,EAAA,IAAAxS,EAAAC,EAAAC,EAAA,yBAAAsS,EAAA,QAAAC,EAAAzS,EAAA,IAAAA,EAAAK,EAAAoS,EAAA,SAAAzS,EAAAC,EAAAC,EAAA,yBAAAuS,EAAA,OAAAzS,EAAAK,EAAAoS,EAAA,SAAAzS,EAAAC,EAAAC,EAAA,yBAAAuS,EAAA,OAAAzS,EAAAK,EAAAoS,EAAA,UAAAzS,EAAAC,EAAAC,EAAA,0BAAAuS,EAAA,QAAAzS,EAAAK,EAAAoS,EAAA,YAAAzS,EAAAC,EAAAC,EAAA,4BAAAuS,EAAA,cAAAC,EAAA1S,EAAA,IAAAA,EAAAC,EAAAC,EAAA,yBAAAwS,EAAA,QAAAC,EAAA3S,EAAA,IAAAA,EAAAC,EAAAC,EAAA,yBAAAyS,EAAA,QAAAC,EAAA5S,EAAA,IAAAA,EAAAC,EAAAC,EAAA,4BAAA0S,EAAA,IAAA5S,EAAA,IAAAA,EAAA,QAAA6S,EAAA7S,EAAA,IAAAA,EAAAC,EAAAC,EAAA,0BAAA2S,EAAA,IAAA7S,EAAA,mmBCiBA,MAAM8S,EAA6C,GAC5C,SAASC,IACZ,IAAK,IAAIlK,KAAKiK,EAAUA,EAASjK,QAAK3F,EAS1C,MAAM8P,EAAwC,GAWvC,IAAIC,EAAuB,IATlC,MAGIxH,WAAoB,OAAO9J,KAAKuR,MAChCzH,SAASoG,GAAclQ,KAAKuR,MAAMrB,IAa/B,SAASsB,IACZ,OAAO9J,OAASpC,OAAOiG,OA6FpB,SAASkG,EAAaC,GACzB,IAAIC,EAAQD,EAAQE,MAAM,KACtBzK,EAAMwK,EAAM/L,OAKhB,OAJA0L,EAAUxG,KAAO6G,EAAM,GAAGxC,OAAO,GAC7BhI,EAAI,IAAGmK,EAAUxH,KAAO+H,OAAOF,EAAM,KACrCxK,EAAI,IAAGmK,EAAUQ,KAAOH,EAAM,IAC9BxK,EAAI,IAAGmK,EAAUvO,MAAQ4O,EAAMI,MAAM,IAClCT,EAGJ,SAASU,EAAOzH,EAAaL,EAAgB4H,EAAc/O,GAC9D,IAAIkP,EACJ,OAAS,CAGL,GAFAA,EAAInS,OAAAoS,EAAA,EAAApS,QAEMyB,IADF8P,EAAYY,GACC,CACjBZ,EAAYY,GAAK,CAACnH,KAAKmH,EAAGnI,KAAKI,GAC/B,OAIR,GADAK,GAAO,MAAQ0H,EAAI,IAAM/H,OACZ3I,IAATuQ,IACAvH,GAAO,IAAMuH,OACCvQ,IAAVwB,GACA,IAAK,IAAImE,EAAE,EAAGA,EAAEnE,EAAM6C,OAAQsB,IAC1BqD,GAAO,IAAMxH,EAAMmE,GAI/B,MAAO,CAACqD,IAAKA,EAAKO,KAAMmH,GAGrB,SAAeE,EAAWC,EAAiBC,2CAC9C,IAAIC,EAAe,IAAIC,EAAA,EAAa,WAAOhR,GACvCuI,EAAOwH,EAAUxH,KACjBjJ,QAAYyR,EAAaE,IAAI1I,EAAMsI,EAAUC,GAIjD,OAHAC,EAAaG,SAAS3I,EAAMsI,EAAUC,GAAS/F,KAAK/E,KACtC,IAANA,GAAamL,EAAA,IAAIhN,UAElB7E,IAGJ,SAAe8R,EAAMC,EAAWC,EAAgBC,2CACnD,IAAIC,EAAU5B,EAASyB,GACvB,QAAgBrR,IAAZwR,EAAuB,OAAOA,EAClC,IAAKvB,IAAa,CAEd,QAAgBjQ,KADhBwR,QAAgBR,EAAA,EAAWK,GAAG,CAAC9I,KAAMwH,EAAUxH,KAAM+I,QAAQA,EAASC,OAAOA,KAClD,CAEvB,KADU,8DAGQvR,IAAlBwR,EAAQnH,QAAqBmH,EAAQnH,MAAQ2G,EAAA,GACjD,IAAIhI,IAACA,EAAGyI,SAAEA,GAAYD,EAClBE,EAAUC,EAAA,EAAKC,cAAc5I,EAAKyI,GAItC,OAHA9P,QAAQC,IAAI,cAAe8P,GAC3BF,EAAQxI,IAAM0I,EACd9B,EAASyB,GAAMG,EACRA,EAYX,OAVA7P,QAAQC,IAAI,yBAA0BmO,EAAUxG,MAChDiI,EAAU,CACN7S,KAAM0S,EACNrI,SAAKhJ,EACLyR,cAAUzR,EACVqK,WAAOrK,EACPqM,aAASrM,EACTsM,YAAQtM,GAEZ4P,EAASyB,GAAMG,EACR,IAAIpF,QAAiB,CAACC,EAASC,KAClCkF,EAAQnF,QAAU,CAAOwF,GAAMzQ,EAAA3C,UAAA,qBAC3B,IAAIqT,QAAUD,EACdlQ,QAAQC,IAAI,gCAAiC4I,KAAKC,UAAUqH,IAC5DN,EAAQxI,IAAM8I,EAAE9I,IAChBwI,EAAQC,SAAWK,EAAEL,SACrBD,EAAQnH,MAAQyH,EAAEzH,MAClBgC,EAAQmF,MAEZA,EAAQlF,OAASA,GAChBvI,OAAOgO,QAAUhO,OAAOiG,QAAQ3D,YAAY,CACzCC,KAAM,UACN0L,QAASX,EACT9H,KAAMwG,EAAUxG,MACjB,SA7KXxF,OAAOC,iBAAiB,UAAW,SAAeiO,2CAC9C,IAAI1L,EAAU0L,EAAIC,KAClB,OAAQ3L,EAAQD,MACZ,IAAK,qBAyCb,SAAyB2L,GACrB,IAAI1L,EAAU0L,EAAIC,KAClB,IAAIC,EAASF,EAAIG,OACjB7T,OAAA8T,EAAA,EAAA9T,CAAgB4T,GAMpB,SAAuB5I,GACnB,IAAI+I,EAAK9I,SAAS+I,eAAehJ,QACtBvJ,IAAPsS,IAAkBA,EAAGE,QAAS,GAPlCC,CAAclM,EAAQgD,MACtB,IAAIrB,EAAUwK,EAAAZ,EAAEa,MAAMxB,EAAA,IAAI/J,MAC1Bc,EAAI5B,KAAO,eACX6L,EAAO9L,YAAY6B,EAAK,KA/ChB0K,CAAgBX,GAChB,MACJ,IAAK,WAEKd,EAAA,IAAI0B,UAAUtM,EAAQ2B,KAC5B,MACJ,IAAK,qBA+Cb,SAA0B3B,2CACtB5E,QAAQC,IAAI,2BAA4B2E,GACxC,IAAIa,EAAO+J,EAAA,IAAI/J,KAAOb,EACtBhI,OAAAyS,EAAA,EAAAzS,CAAe6I,EAAKrF,GAAIqF,EAAKiD,aACvB8G,EAAA,IAAIxG,gBAlDImI,CAAWvM,GACjB,MACJ,IAAK,UACD4K,EAAA,IAAIxN,UACJ,MACJ,IAAK,mBAiMb,SAAwCoP,EAAaxM,2CACjD,IAAIyM,OAACA,EAAMhK,IAAEA,EAAGiK,OAAEA,EAAMC,KAAEA,GAAQ3M,EAC9B4M,QAAenC,EAAA,EAAcoC,WAAWpK,EAAKiK,EAAQC,GACzDH,EAAK1M,YAAY,CACbC,KAAM,oBACN0M,OAAQA,EACRG,OAAQA,GACT,OAvMWE,CAAyBpB,EAAIG,OAAkB7L,GACrD,MACJ,IAAK,qBAwMb,SAA+BA,GAC3B,IAAIyM,OAACA,EAAMG,OAAEA,GAAU5M,EACnB+M,EAAMC,EAAgBP,GAC1B,QAAYhT,IAARsT,EAAmB,OACvBC,EAAgBP,QAAUhT,EAC1BsT,EAAIjH,QAAQ8G,GA5MJK,CAAsBjN,GACtB,MACJ,IAAK,UACD5E,QAAQC,IAAI,0BAA2B4I,KAAKC,UAAUlE,IACtD,IAAIjH,QAuChB,SAAsCiK,EAAcyI,2CAChD,IAAIyB,EAAa3D,EAAYvG,GAC7B,QAAmBvJ,IAAfyT,EAA0B,MAAO,CAAC9U,KAAKqT,EAAShJ,SAAIhJ,EAAWyR,cAASzR,EAAWqK,WAAMrK,GAC7F,IAAIuI,KAACA,GAAQkL,EACTrD,EAAQ4B,EAAQ3B,MAAM,KACtB/Q,QAAY0R,EAAA,EAAWK,GAAG,CAAC9I,KAAMA,EAAM+I,QAASlB,EAAM,GAAImB,OAAQnB,EAAM,KAC5E,QAAYpQ,IAARV,EAEA,MADAqC,QAAQC,IAAI,oDAAqDoQ,EAASzJ,GACpE,gBAEV,MAAO,CAAC5J,KAAMqT,EAAShJ,IAAK1J,EAAI0J,IAAKyI,SAASnS,EAAImS,SAAUpH,MAAO/K,EAAI+K,SAjD/CqJ,CAAuBnN,EAAQgD,KAAMhD,EAAQyL,SAC7DrQ,QAAQC,IAAI,6BAA8B4I,KAAKC,UAAUnL,IACxD2S,EAAIG,OAAkB/L,YAAY,CAC/BC,KAAM,iBACN0L,QAASzL,EAAQyL,QACjBhJ,IAAK1J,EAAI0J,IACTyI,SAAUnS,EAAImS,SACdpH,MAAO/K,EAAI+K,OAAe,KAC9B,MACJ,IAAK,iBACD1I,QAAQC,IAAI,qBAAsB4I,KAAKC,UAAUlE,IACjD5E,QAAQC,IAAI,wCAyCxB,SAA8B2E,2CAC1B,IAAIyL,QAACA,EAAOhJ,IAAEA,EAAGyI,SAAEA,EAAQpH,MAAEA,GAAS9D,EAClCoN,EAAS/D,EAASoC,GACtB,QAAehS,IAAX2T,EACA,KAAM,uBAGV,IAAIjC,EAAUC,EAAA,EAAKC,cAAc5I,EAAKyI,GACtC9P,QAAQC,IAAI,oCAAsCoH,EAAM,WAAayI,EAAW,UAAYC,GAC5FiC,EAAO3K,IAAM0I,EACbiC,EAAOtJ,MAAQA,EACfsJ,EAAOtH,QAAQsH,KAnDDC,CAAerN,GACrB,MACJ,QACI9H,KAAKkD,QAAQC,IAAI,cAAe4I,KAAKC,UAAUlE,SA+I3D,MAAMgN,EAAiD,GAChD,SAAeM,EAAgB7K,EAAYiK,EAAeC,2CAE7D,OADAvR,QAAQC,IAAI,qCAAsCoH,EAAKiK,SAC1C,IAAI7G,QAAa,CAAOC,EAASC,IAAUlL,EAAA3C,UAAA,qBACpD,IAAIuU,EACJ,OAAS,CAGL,GAFAA,EAASzU,OAAAoS,EAAA,EAAApS,QAEGyB,IADFuT,EAAgBP,GACH,CACnBO,EAAgBP,GAAU,CACtBjR,GAAIiR,EACJ3G,QAASA,EACTC,OAAQA,GAEZ,QAGPvI,OAAOgO,QAAUhO,OAAOiG,QAAQ3D,YAAY,CACzCC,KAAM,aACN0M,OAAQA,EACRhK,IAAKA,EACLiK,OAAQA,EACRC,KAAMA,GACP,iVCvPJ,MAAMY,EACT7V,YACIgG,EAAA,EAAIsH,YAERtN,UACIgG,EAAA,EAAIuH,UAEFvN,UAAU0G,2CACZV,EAAA,EAAIuH,gBAQEvH,EAAA,EAAIwH,QAAQ9G,2mBClB1B,IAAIoP,EAA0C,GAC1CC,EAA4C,GAEzC,SAASC,IACZF,EAAa,GACbC,EAAe,GAySfE,EAAW,GA1Rf,MAAMC,EAAkB,kBA+ExB,MAAMC,EAAW,IA9EjB,MAGUnW,WAAW+Q,2CACb,IACI,IA2BI1P,GA3BAgS,QAACA,EAAOC,OAAEA,GAAUvC,EACxB,QAAmBhP,IAAfvB,KAAKyI,MAAqB,CAC1B,IAAImN,EAAKC,aAAaC,QAAQJ,GACnB,OAAPE,IACA5V,KAAKyI,MAAQsD,KAAKgK,MAAMH,IAGhC,QAAmBrU,IAAfvB,KAAKyI,MAAqB,CAC1B,IAAIE,KAACA,EAAI6J,IAAEA,GAAOxS,KAAKyI,MACvB,GAAIE,IAASqN,QAAyBzU,IAARiR,EAC1BxS,KAAKyI,WAAQlH,OAGb,IAAK,IAAI2F,KAAKsL,EACDA,EAAItL,GACV+O,WAAQ1U,OAIJA,IAAfvB,KAAKyI,QACLzI,KAAKyI,MAAQ,CACTE,KAAMqN,EACNlM,UAAMvI,EACNiR,IAAK,KAKb,IAAI0D,EAAKrD,EAAQ,IAAIC,EACjBF,EAAK5S,KAAKyI,MAAM+J,IAAI0D,GACxB,QAAW3U,IAAPqR,EAAkB,CAClB,IAAI1D,MAACA,GAAS0D,EACd/R,EAAMqO,EAMV,YAJY3N,IAARV,IACAA,QAAY0P,EAAM4F,eAClBnW,KAAKoW,UAAUF,EAAIrV,IAEhBwV,EAAAhD,EAAEiD,UAAUzV,GAEvB,MAAOoF,GAGH,MAFAjG,KAAKyI,WAAQlH,EACbsU,aAAaU,WAAWb,GAClBzP,KAINzG,UAAUsT,EAAe0D,GAC7BxW,KAAKyI,MAAM+J,IAAIM,GAAU,CACrB5D,MAAOsH,EACPP,OAAO,GAEX,IAAIQ,EAAM1K,KAAKC,UAAUhM,KAAKyI,OAC9BoN,aAAaa,QAAQhB,EAAiBe,GAGpCjX,YAAY+Q,2CACd,IAAIsC,QAACA,EAAOC,OAAEA,GAAUvC,EACpB2F,EAAKrD,EAAQ,IAAIC,EACjBF,EAAK5S,KAAKyI,MAAM+J,IAAI0D,GACxB,QAAW3U,IAAPqR,EAAkB,OAAO,EAC7B,IAAIqD,MAACA,EAAK/G,MAAEA,GAAS0D,EACrB,IAAc,IAAVqD,EAAgB,OAAO,EAC3B,IAAIpV,QAAY0P,EAAM4F,eAClBQ,EAAUN,EAAAhD,EAAEsD,QAAQzH,EAAOrO,GAI/B,OAHgB,IAAZ8V,GACA3W,KAAKoW,UAAUF,EAAIrV,GAEhB8V,MAMR,MAAMC,UAAcnG,EAAA,EAMvBjR,YAAYqX,EAAkBhE,EAAiBC,EAAgBgE,EAAiBC,GAC5ElX,MAAMgX,EAAUE,GACZjE,IACA9S,KAAK6S,QAAUA,EACf7S,KAAK8S,OAASA,EACd9S,KAAK4S,GAAKC,EAAU,IAAMC,GAE9B9S,KAAK8W,OAASA,EACd9W,KAAK+W,YAAcA,EAGPvX,yDACZ,IAAIwX,EACAC,GACqB,IAArBjX,KAAK+W,kBAA6CxV,IAArBvB,KAAK+W,aAClCC,EAAW1B,EACX2B,EAAY,IAAI5B,GAGhB2B,EAAWzB,EAEf,IAAI2B,EAAUF,EAAShX,KAAK4S,IAC5B,QAAgBrR,IAAZ2V,EAAuB,OAAOA,EAClC,IAAInE,QAAgBjT,OAAA4Q,EAAA,EAAA5Q,CAAME,KAAK4S,GAAI5S,KAAK6S,QAAS7S,KAAK8S,QAGtD,OAFA9S,KAAK4L,MAAQmH,EAAQnH,MACrBsL,EAAU,IAAIC,EAAA,GAAY,EAAOpE,EAAQxI,IAAKwI,EAAQnH,MAAOqL,GACtDD,EAAShX,KAAK4S,IAAMsE,IAIzB1X,iDACF,aAAaQ,KAAKmJ,IAAI,YAGpB3J,uDACF,IAAI4X,OAAsB7V,IAAhBvB,KAAK8W,OACX,GACA9W,KAAK8W,OAAOO,KAAK,KAErB,aADgBrX,KAAKmJ,IAAI,SAAU,CAACiO,IAAIA,MAItC5X,qDACF,aAAamW,EAAS2B,WAAWtX,QAG/BR,uDACF,aAAaQ,KAAKmJ,IAAI,cAGpB3J,sDACF,aAAamW,EAAS4B,YAAYvX,QAGhCR,OAAOU,2CACT,aAAaF,KAAKmJ,IAAI,UAAYjJ,KAGhCV,QAAQgY,2CACV,aAAaxX,KAAKyX,KAAK,SAAUD,KAG/BhY,QAAQU,EAAaoD,2CACvB,aAAatD,KAAKmJ,IAAI,QAAUjJ,EAAO,IAAMoD,KAG3C9D,WAAWU,2CACb,aAAaF,KAAKmJ,IAAI,YAAcjJ,EAAO,OAGzCV,SAASU,EAAawX,2CACxB,aAAa1X,KAAKyX,KAAK,QAAUvX,EAAMwX,KAGrClY,WAAWU,EAAa6B,EAAY4V,EAAchR,EAAYiR,EAAyBC,2CAQzF,aAPgB7X,KAAKyX,KAAK,SAAWvX,EAAM,CACvC6B,IAAKA,EACL4V,MAAOA,EACPhR,IAAKA,EACLiR,UAAWA,EACXC,SAAUA,MAIZrY,WAAWU,EAAa6B,EAAY4V,EAAcrU,2CACpD,aAAatD,KAAKmJ,IAAI,YAAcjJ,EAAO,IAAMyX,EAAQ,IAAM5V,EAAM,IAAMuB,KAEzE9D,cAAcU,EAAa6B,EAAY4V,2CACzC,aAAa3X,KAAKmJ,IAAI,gBAAkBjJ,EAAO,IAAMyX,EAAQ,IAAM5V,EAAM,OAEvEvC,YAAYU,EAAa6B,EAAY4V,EAAcD,2CACrD,aAAa1X,KAAKyX,KAAK,YAAcvX,EAAO,IAAMyX,EAAQ,IAAM5V,EAAM,IAAK2V,KAEzElY,WAAWU,EAAa6B,EAAY4V,EAAcrU,EAAWwU,2CAC/D,aAAa9X,KAAKyX,KAAK,gBAAkBvX,EAAO,IAAMyX,EAAQ,IAAM5V,EAAM,IAAK,CAC3EuB,GAAIA,EACJyU,OAAQD,MAIVtY,QAAQU,EAAa6B,EAAYiW,2CACnC,IACI,IAAIzN,EAAM,WAAarK,EAAO,IAI9B,OAHuBqK,QAAXhJ,IAARQ,EAA0BA,EAClB,UACI/B,KAAKyX,KAAKlN,EAAKyN,GAGnC,MAAO3L,GACHnJ,QAAQgD,MAAMmG,MAIhB7M,QAAQU,EAAa+X,EAAc3U,2CACrC,IACI,IAAIiH,EAAM,cAAgBrK,EAAO,IAAM+X,EAAQ,IAAM3U,EAErD,aADgBtD,KAAKmJ,IAAIoB,GAG7B,MAAO8B,GACHnJ,QAAQgD,MAAMmG,MAIhB7M,UAAUU,EAAauT,2CACzB,aAAazT,KAAKyX,KAAK,SAAWvX,EAAMuT,KAGtCjU,YAAYU,EAAauT,2CAC3B,aAAazT,KAAKkY,IAAI,SAAWhY,EAAMuT,KAGrCjU,YAAYU,EAAauT,2CAC3B,aAAazT,KAAKyX,KAAK,SAAWvX,EAAO,UAAWuT,KAGlDjU,gBAAgBU,2CAClB,aAAaF,KAAKmJ,IAAI,SAAWjJ,EAAO,iBAGtCV,SAASU,EAAaoD,2CACxB,aAAatD,KAAKmJ,IAAI,SAAWjJ,EAAO,QAAUoD,KAGhD9D,cAAcU,EAAauT,2CAC7B,aAAazT,KAAKyX,KAAK,SAAWvX,EAAO,YAAauT,KAGpDjU,aAAaU,EAAaoD,2CAC5B,aAAatD,KAAKmJ,IAAI,SAAWjJ,EAAO,YAAcoD,KAGpD9D,OAAOU,EAAauT,2CACtB,aAAazT,KAAKyX,KAAK,UAAYvX,EAAMuT,KAGvCjU,KAAKU,EAAa0X,EAAeC,EAAiBH,2CACpD,IAAIzQ,EACJ,cAAeyQ,GACX,IAAK,YAAazQ,EAAI,CAACN,IAAK,IAAK,MACjC,QAASM,EAAIoP,EAAAhD,EAAEa,MAAMwD,GAIzB,OAFAzQ,EAAc,WAAI2Q,EAClB3Q,EAAa,UAAI4Q,QACJ7X,KAAKyX,KAAK,cAAgBvX,EAAM+G,KAG3CzH,MAAMU,EAAawX,2CAErB,aADgB1X,KAAKyX,KAAK,SAAWvX,EAAMwX,KAoBzClY,+CACF,aAAaQ,KAAKmJ,IAAI,WAI9B,IA8BIsB,EA9BAgL,EAA0C,GAMvC,MAAM0C,UAAiBvB,EAE1BpX,YAAY0K,GACRrK,MAAM,WAAO0B,OAAWA,OAAWA,GAAW,GAC9CvB,KAAKkK,OAASA,EAGF1K,yDACZ,IAAI0X,EAAUzB,EAASzV,KAAKkK,QAC5B,YAAgB3I,IAAZ2V,EAA8BA,EAC3BzB,EAASzV,KAAKkK,cAAgBlK,KAAKoY,iBAGhC5Y,uDACV,IAAIyX,EAAY,IAAI5B,EAChB/C,EAAe,IAAI+F,EAAa,WAAO9W,GACvCV,QAAYyR,EAAagG,QAAQtY,KAAKkK,SACtC0B,MAACA,EAAKrB,IAAEA,EAAGyI,SAAEA,GAAYnS,EACzBoS,EAAUtC,EAAA,EAAKwC,cAAc5I,EAAKyI,GAEtC,OADAhT,KAAK4L,MAAQA,EACN,IAAIuL,EAAA,GAAY,EAAOlE,EAASrH,EAAOqL,MAM/C,SAASsB,EAAahO,GACzBrH,QAAQC,IAAI,kBAAmBoH,GAC/BE,EAAaF,EACbiO,OAAcjX,EACdkX,OAAgBlX,EAChBmX,OAAkBnX,EAGf,IAUHmX,EACAD,EAXOD,OAA+BjX,EAEtCyU,EAAuB,EACpB,SAAS2C,EAAeC,EAAe9I,GAC1C0I,EAAc1I,EACd5M,QAAQC,IAAI,oBAAqB2M,GACjC2I,OAAgBlX,EAChBmX,OAAkBnX,EAcf,MAAesX,UAAkBpI,EAAA,EACpCjR,YAAYsZ,EAAc/B,GACtBlX,MAAMiZ,EAAM/B,GAGAvX,yDACZ,OAA6B,IAArBQ,KAAK+W,kBAA6CxV,IAArBvB,KAAK+W,iBAdtBxV,IAApBmX,EAAsCA,EACnCA,EAAkB,IAAIvB,EAAA,GAAY,EAAM1M,EAAY+N,EAAa,IAAInD,QAGtD9T,IAAlBkX,EAAoCA,EACjCA,EAAgB,IAAItB,EAAA,GAAY,EAAM1M,EAAY+N,MAe7D,MAAMrH,EAAW,WAiDV,MAAM4H,EAAa,IAhDnB,cAAyBF,EAEtBrZ,GAAGkY,2CACL,IACI,IAAK5N,KAAKkP,EAASnG,QAAEA,EAAOC,OAAEA,GAAU4E,EACxC,QAAmBnW,IAAfvB,KAAKyI,MAAqB,CAC1B,IAAImN,EAAKC,aAAaC,QAAQ3E,GACnB,OAAPyE,IACA5V,KAAKyI,MAAQsD,KAAKgK,MAAMH,IAGhC,QAAmBrU,IAAfvB,KAAKyI,MAAqB,CAC1B,IAAIqB,KAACA,EAAInB,KAAEA,GAAQ3I,KAAKyI,MACpBqB,IAASkP,GAAarQ,IAASqN,IAAehW,KAAKyI,WAAQlH,QAEhDA,IAAfvB,KAAKyI,QACLzI,KAAKyI,MAAQ,CACTE,KAAMqN,EACNlM,KAAM4N,EAAO5N,KACb0I,IAAK,KAIb,IAAI0D,EAAKrD,EAAQ,IAAIC,EACjBmG,GAAU,IAAI7K,MAAOC,UACrBuE,EAAK5S,KAAKyI,MAAM+J,IAAI0D,GACxB,QAAW3U,IAAPqR,EAAkB,CAClB,IAAIsG,KAACA,EAAIhK,MAAEA,GAAS0D,EACpB,GAAKqG,EAAUC,EAAQ,MACnB,OAAO7C,EAAAhD,EAAEa,MAAMhF,GAGvB,IAAIrO,QAAYb,KAAKmJ,IAAI,SAAUuO,GAMnC,OALA1X,KAAKyI,MAAM+J,IAAI0D,GAAM,CACjBgD,KAAMD,EACN/J,MAAOrO,GAEXgV,aAAaa,QAAQvF,EAAUpF,KAAKC,UAAUhM,KAAKyI,QAC5C4N,EAAAhD,EAAEa,MAAMrT,GAEnB,MAAOoF,GAGH,MAFAjG,KAAKyI,WAAQlH,EACbsU,aAAaU,WAAWpF,GAClBlL,OAKuB,eAAW1E,GAO7C,MAAM4X,EAAgB,IALtB,cAA4BN,EAC/BrZ,WAAW+K,EAAYiK,EAAeC,GAClC,OAAOzU,KAAKoD,KAAKmH,EAAKiK,EAAQC,KAGS,QAAIlT,GAmB5C,MAAM8W,UAAqBQ,EAExBrZ,IAAIsK,EAAasI,EAAiBC,2CACpC,IAAIxR,EACA+U,EAAKC,aAAaC,QAAQ,UAC9B,GAAW,OAAPF,EAAa,CACb,IAAIwD,EAAMrN,KAAKgK,MAAMH,IAChB9L,KAAKuP,EAAOjH,SAASkH,EAAWjH,QAAQkH,EAAQrK,MAAEA,GAASkK,EAC5DtP,IAASuP,GAASjH,IAAakH,GAAajH,IAAYkH,IAAU1Y,EAAMqO,GAEhF,QAAY3N,IAARV,EAAmB,CACnBA,QAAYb,KAAKwZ,QAAQ1P,EAAMsI,EAAUC,GACzC,IAAIoH,EAAM,CACN3P,KAAKA,EACLsI,SAASA,EACTC,QAAQA,EACRnD,MAAOrO,GAEXgV,aAAaa,QAAQ,SAAU3K,KAAKC,UAAUyN,IAElD,OAAOzZ,KAAK0Z,UAAYrD,EAAAhD,EAAEiD,UAAUzV,KAE1BrB,QAAQsK,EAAasI,EAAiBC,2CAChD,aAAarS,KAAKmJ,IAAI,cAAe,CAACW,KAAKA,EAAMsI,SAASA,EAAUC,QAAQA,MAE1E7S,SAASsK,EAAasI,EAAiBC,2CACzC,IAAIxR,QAAYb,KAAKwZ,QAAQ1P,EAAMsI,EAAUC,GAC7C,OAAOgE,EAAAhD,EAAEsD,QAAQ3W,KAAK0Z,UAAW7Y,KAE/BrB,QAAQsK,2CACV,aAAa9J,KAAKmJ,IAAI,eAAgB,CAACW,KAAKA,MAE1CtK,eAAeuD,2CACjB,aAAa/C,KAAKyX,KAAK,qBAAsB1U,oYCxdrD,MAAM4W,EAAgB,IACtB,MAAMC,UAAmBnV,EAAA,UAAzBjF,kCACYQ,KAAA6Z,WAAoB,EACpB7Z,KAAA8Z,QAAiB,EAEjB9Z,KAAA+Z,SAAW,CAAO1N,GAAK1J,EAAA3C,UAAA,qBAC3B,IAAI+Z,SAACA,EAAQC,YAAEA,EAAWC,eAAEA,GAAkBja,KAAK0E,MAC/CqV,GAAU/Z,KAAK0E,MAAMqV,SAAS1N,GAClC,IAAIwH,EAAKxH,EAAE6N,OACX,GAAIrG,EAAGsG,UAAY,SAEK5Y,IAAhByY,EAA2B,CAC3B,IAAIF,GAAU,IAAI1L,MAAOC,UACrByL,EAAQ9Z,KAAK8Z,QAAUH,IACvB3Z,KAAK8Z,QAAUA,EACfE,KAIZ,GAAInG,EAAGsG,UAAYtG,EAAGuG,aAAevG,EAAGwG,aAAe,SAE5B9Y,IAAnB0Y,EAA8B,CAC9B,IAAIJ,GAAa,IAAIzL,MAAOC,UACxBwL,EAAa7Z,KAAK6Z,WAAaF,IAC/B3Z,KAAK6Z,WAAaA,EAClBI,SAKRza,UAAU8a,EAAOC,GACrB,IAAI7V,MAAEA,GAAU4V,EAChB,QAAc/Y,IAAVmD,EACA,OACJ,IAAI8V,SAAEA,GAAa9V,OACFnD,IAAbiZ,GAEJ/V,EAAA,SAAegW,QAAQD,EAAU,CAACE,EAAOrS,KACrC,IAAIsS,SAACA,GAAYD,EACbC,GAAUA,EAASJ,GACvBrX,QAAQC,IAAIuX,EAAME,YAClB5a,KAAK6a,UAAUH,EAAOH,KAG9B/a,SACI,OACIiF,EAAA,sBAAMwD,UAAWjI,KAAK0E,MAAMuD,UAAW8R,SAAU/Z,KAAK+Z,UACjD/Z,KAAK0E,MAAM8V,WAkC5B,IAAaM,EAAb,cAA0BrW,EAAA,UAEtBjF,YAAYkF,GACR7E,MAAM6E,GACN,IAGIqW,GAHAC,KAACA,GAAQtW,EACb,QAAanD,IAATyZ,GAAsC,IAAhBA,EAAKpV,OAAc,OAC7C5F,KAAKgb,KAAOA,EAEZ,IAAIC,EAAkB,GACtB,IAAK,IAAIC,KAAOF,EAAM,CAClB,IAAIlL,EAAaqL,EAAA9H,EAAEa,MAAMgH,QACb3Z,IAARwZ,IACqB,IAAjBjL,EAAEsL,WACFL,EAAMjL,EAKVA,EAAEsL,YAAa,EAEnBtL,EAAEuL,WAAY,EACdJ,EAAUzU,KAAKsJ,GAEnB9P,KAAKoF,MAAQ,CACT2V,IAAKA,EACLC,KAAMC,GAIRzb,4DACF,QAAkB+B,IAAdvB,KAAKgb,KAAoB,OAC7B,IAAIM,EAAKtb,KAAKoF,MAAM4V,KAAK,QACdzZ,IAAP+Z,UACEtb,KAAKub,WAAWD,MAGZ9b,WAAW0b,2CACrB,IAAuB,IAAnBA,EAAIE,WAAqB,OAC7B,IAAIL,EACAC,EAAOhb,KAAKoF,MAAM4V,KACtB,IAAK,IAAIlL,KAAKkL,EACNlL,IAAMoL,GACNpL,EAAEsL,YAAa,EACfL,EAAMjL,GAGNA,EAAEsL,YAAa,EAEvB,IAAsB,IAAlBL,EAAIM,UAAoB,CACxB,IAAIG,KAACA,GAAQT,OACAxZ,IAATia,UACMA,KAGdxb,KAAK8E,SAAS,CACViW,IAAKA,EACLC,KAAMA,MAINxb,aAAagU,IAGbhU,WAAWic,GACf,MAAMpR,OAACA,EAAMrF,KAAEA,EAAI0W,MAAEA,EAAKC,WAAEA,GAAc3b,KAAK0E,MAC/C,IAwBIkX,EAxBAb,EAAM/a,KAAKoF,MAAM2V,IACjBC,EAAOvW,EAAA,yBACHzE,KAAKoF,MAAM4V,KAAK5S,IAAI,CAAC8S,EAAK7S,KACtB,MAAMhI,KAACA,EAAI+a,WAAEA,EAAUS,MAAEA,EAAKC,OAAEA,GAAUZ,EAC1C,IAAIa,EAASC,EAAgBC,EAE7B,QADa1a,IAATlB,IAAoB0b,EAAMtX,EAAA,qBAAKwJ,IAAK5N,UACzBkB,IAAXua,EAAsB,CACtB,IAAIvU,EAAIuU,EAAO3S,MACX5B,EAAI,GACJ0U,EAAKC,IAAW,WAChBF,EAAavX,EAAA,yBAER8C,EAAI,IACT0U,EAAKC,IAAW,UAAW,OAC3BF,EAAavX,EAAA,uBAAI8C,IAGzB,OAAO9C,EAAA,qBAAKkC,IAAK0B,EACbJ,UAAYiU,IAAW,SAAU,CAACnB,IAAKK,IACvC3O,QAAS,IAAMzM,KAAKub,WAAWL,IAC9Ba,EAAItX,EAAA,qBAAKwD,UAAWgU,GAAKJ,EAAOG,OAajD,OARe,IAAX3R,IACAuR,EAAWnX,EAAA,cAAC0X,EAAA,EAAQ,CAChBnX,KAAMA,EACNoX,QAAqB,IAAbT,EAAoBtR,EAAqB0Q,IAAQA,EAAI1Q,QAAU0Q,EAAIc,OAC3EH,MAAOA,KAIRjX,EAAA,yBAASwD,UAAU,kBACrB2T,EACDnX,EAAA,yBAASwD,UAAU,qBAClBjI,KAAK0E,MAAM2X,QAERrc,KAAKoF,MAAM4V,KAAK5S,IAAI,CAAC8S,EAAK7S,KACtB,IAAI+S,WAACA,EAAUC,UAAEA,EAAS9Y,QAAEA,GAAW2Y,EACvC,IAAmB,IAAfE,IAAqC,IAAdC,EAEvB,OADAH,EAAIG,WAAY,EACT5W,EAAA,cAACmV,EAAU,CAACjT,IAAK0B,EACpBJ,UAAWiU,IAAW,CAACI,WAAwB,IAAblB,IAClCrB,SAAUmB,EAAInB,SACdC,YAAakB,EAAIlB,YACjBC,eAAgBiB,EAAIjB,gBAEA,oBAAX1X,EAAwBA,IAA8BA,MAM9EyY,EACAS,GAGDjc,aAAaic,GACjB,MAAMzW,KAACA,EAAIqF,OAAEA,EAAMqR,MAAEA,EAAK3B,SAAEA,EAAQC,YAAEA,EAAWC,eAAEA,EAAcO,SAAEA,GAAYxa,KAAK0E,MACpF,IAAIkX,EAQJ,OAPe,IAAXvR,IACAuR,EAAWnX,EAAA,cAAC0X,EAAA,EAAQ,CAChBnX,KAAMA,EACNoX,OAAQ/R,EACRqR,MAAOA,EACPhP,OAAQ1M,KAAK0E,MAAMgI,UAGvBjI,EAAA,yBAASwD,UAAU,iBAAiBsU,aAAcvc,KAAKuc,cAClDX,EACDnX,EAAA,yBAASwD,UAAU,qBACdjI,KAAK0E,MAAM2X,QACZ5X,EAAA,cAACmV,EAAU,CACPG,SAAUA,EACVC,YAAaA,EACbC,eAAgBA,GAEfO,IAGRiB,GAKbjc,SACI,MAAMic,OAACA,GAAUzb,KAAK0E,MACtB,IAAI8X,EAEJ,YADejb,IAAXka,IAAsBe,EAAW/X,EAAA,4BAASgX,SAC5Bla,IAAdvB,KAAKgb,KACEhb,KAAKyc,WAAWD,GAEhBxc,KAAK0c,aAAaF,KA9JxB1B,uUAAItM,CAAA,CADhBM,EAAA,GACYgM,iUC5FN,MAAe6B,GAKf,MAAMC,UAAcD,EAKvBnd,YAAYqE,GACRhE,QAMJG,KAAAyM,QAAU,KAAW9J,EAAA3C,UAAA,2BACXA,KAAK6D,WAAW6B,WANtB1F,KAAK6D,WAAaA,EAClB7D,KAAKK,KAAOwD,EAAWxD,KACvBL,KAAKI,MAAQyD,EAAWzD,MAO5BZ,OAAOyI,GACH,OAAOyH,EAAA,qBACHzH,UAAW4U,IAAW,OAAQ,OAAQ,qBAAsB,iBAAkB5U,GAC9EwE,QAASzM,KAAKyM,SACbzM,KAAKK,cAAcL,KAAKI,QC7BrC/B,EAAAC,EAAAC,EAAA,sBAAAqe,2aCCA,IAAIE,EASG,SAASC,EAAgBC,GAC5BF,EAAeE,EAGZ,SAASC,EAAYxT,GACxBnE,OAAOqC,IAAIC,YAAY,CACnBC,KAAM,KACN4B,IAAKA,GACN,KAGA,MAAeyT,EAAtB1d,cAEYQ,KAAAmd,YAAc,EACdnd,KAAAod,YAAqD,GACrDpd,KAAAqd,YAA4E,GACpF7d,eAAe4J,GACX,IAAIkU,EAAOtd,KAAKmd,cAEhB,OADAnd,KAAKod,YAAYE,GAAQlU,EAClBkU,EAEX9d,YAAYqI,EAAauB,GACrB,IAAIkU,EAAOtd,KAAKmd,cAEhB,OADAnd,KAAKqd,YAAYC,GAAQ,CAACzV,KAAKA,EAAMuB,QAASA,GACvCkU,EAEX9d,aAAa+J,UACFvJ,KAAKod,YAAY7T,UACjBvJ,KAAKqd,YAAY9T,GAEtB/J,QAAQiK,2CACV,IAAI8T,MAACA,GAAS9T,EACd,IAAK,IAAIvC,KAAKlH,KAAKod,kBACTpd,KAAKod,YAAYlW,GAAGuC,GAE9B,IAAK,IAAIvC,KAAKlH,KAAKqd,YAAa,CAC5B,IAAIxV,KAACA,EAAIuB,QAAEA,GAAWpJ,KAAKqd,YAAYnW,GACnCW,IAAS0V,UACPnU,EAAQK,QAK1B,IAAI+T,EAAa,EAKV,MAAMC,EAAW,IAJjB,cAAuBP,EAA9B1d,kCACIQ,KAAA0d,SAAkB,iBAAmBF,MAKlC,MAAMG,UAAkBT,EAO3B1d,YAAYmL,EAAgBiB,GACxB/L,QAPJG,KAAA0d,SAAkB,kBAAoBF,IAQlCxd,KAAK2K,OAASA,EACd3K,KAAK4L,MAAQA,EAGjBpM,sBAAsBoM,GAClB+R,EAAUnF,YAAc5M,EAG5BpM,UAGI,QAAgB+B,IAAZvB,KAAKqJ,GAAkB,OAC3B,IAAIuU,EAAO5d,KACX,OAAO,IAAI2N,QAAQ,CAACC,EAASC,KACzB,IAAIxE,EAAK,IAAIwU,UAAU7d,KAAK2K,OAAQ3K,KAAK4L,OAAS+R,EAAUnF,aAC5DtV,QAAQC,IAAI,uBAAwBnD,KAAK2K,QACzCtB,EAAGyU,OAAS,CAACC,IACT7a,QAAQC,IAAI,yBAA0BnD,KAAK2K,QAC3CiT,EAAKvU,GAAKA,EACVuE,MAEJvE,EAAG2U,QAAU,CAACD,IACVlQ,EAAO,2BAEXxE,EAAG4U,UAAY,CAAOxU,GAAO9G,EAAA3C,UAAA,qBAAC,aAAM4d,EAAKM,UAAUzU,MACnDJ,EAAG8U,QAAU,CAACJ,IACVH,EAAKvU,QAAK9H,EACV2B,QAAQC,IAAI,yBAIxB3D,aACoB+B,IAAZvB,KAAKqJ,KACLrJ,KAAKqJ,GAAG+U,QACRpe,KAAKqJ,QAAK9H,GAGJ/B,UAAU6e,2CACpB,IACInb,QAAQC,IAAI,wBAAyBkb,EAAM5K,MAC3C,IAAIhK,EAAMsC,KAAKgK,MAAMsI,EAAM5K,OA3GvC,SAAwBhK,QACClI,IAAjBub,GACJA,EAAalV,YAAY,CACrBC,KAAM,KACN4B,IAAKA,GACN,KAuGK6U,CAAe7U,SACTzJ,KAAK0J,QAAQD,GAEvB,MAAOxD,GACH/C,QAAQC,IAAI,iBAAkB8C,MAGtCzG,OAAOiK,GACH,IAAI8U,EAAUve,KACdA,KAAK8L,UAAUQ,KAAK,KAChBiS,EAAQlV,GAAGmV,KAAK/U,qCCxH5BpL,EAAAC,EAAAC,EAAA,sBAAAkgB,IAAA,MAAMC,EAAW,iEACXC,EAAY,EAEX,SAASF,IACZ,IAAItX,EAAMuX,EAAS9Y,OACfgZ,EAAM,GACV,IAAK,IAAI1X,EAAI,EAAGA,EAAIyX,EAAWzX,IAC3B0X,GAAOF,EAASG,OAAOC,KAAKC,MAAMD,KAAKE,SAAW7X,IAEtD,OAAOyX,iCCTXvgB,EAAAC,EAAAC,EAAA,sBAAA0gB,IAAA,IAAAxa,EAAApG,EAAA,GAAA6gB,EAAA7gB,EAAA,GAAA8gB,EAAA9gB,EAAA+gB,EAAAF,GAAAG,EAAAhhB,EAAA,GAUO,SAAS4gB,EAAMva,GAClB,IAAIuD,UAACA,EAASK,MAAEA,EAAK2F,IAAEA,GAAOvJ,EAC9B,OAAKuJ,IAKuB,IAAxBA,EAAI9C,WAAW,OACf8C,EAAMoR,EAAA,EAAI3U,OAASuD,EAAIkB,OAAO,IAE3B1K,EAAA,qBAAKwJ,IAAKA,EAAKhG,UAAWA,EAAWK,MAAOA,KAPxC7D,EAAA,qBAAKwD,UAAWkX,IAAWlX,EAAW,cAAeK,MAAOA,GAC/D7D,EAAA,mBAAGwD,UAAU,0XCdlB,MAAMqX,GAAgB,EAEvB7U,EAAa,gBAEbD,EAAU1K,OAAA,CAAAyf,SAAA,aAAAC,WAAA,IAAAC,sBAAA,gBAAAC,eAAA,0CAAAC,oBAAA,4CAAgC,oBAAKlV,EAQ/CmV,EAAkC,CACpCC,WAAY,CACR3Q,MAAOpP,OAAA,CAAAyf,SAAA,aAAAC,WAAA,IAAAC,sBAAA,gBAAAC,eAAA,0CAAAC,oBAAA,4CAAyC,6BAXhC,iBAYhBlX,OAAO,GAEXqX,QAAS,CACL5Q,MAAOpP,OAAA,CAAAyf,SAAA,aAAAC,WAAA,IAAAC,sBAAA,gBAAAC,eAAA,0CAAAC,oBAAA,4CAAsC,0BAbhC,iBAcblX,OAAO,GAEXsX,OAAQ,CACJ7Q,MAAOpP,OAAA,CAAAyf,SAAA,aAAAC,WAAA,IAAAC,sBAAA,gBAAAC,eAAA,0CAAAC,oBAAA,4CAAqC,yBAhBhC,iBAiBZlX,OAAO,GAEXuX,UAAW,CACP9Q,MAAOpP,OAAA,CAAAyf,SAAA,aAAAC,WAAA,IAAAC,sBAAA,gBAAAC,eAAA,0CAAAC,oBAAA,4CAAqC,yBApBhC,iBAqBZlX,OAAO,GAEXwX,WAAY,CACR/Q,MAAOpP,OAAA,CAAAyf,SAAA,aAAAC,WAAA,IAAAC,sBAAA,gBAAAC,eAAA,0CAAAC,oBAAA,4CAA6C,iCAvBjC,iBAwBnBlX,OAAO,IAOf,MAAMyX,EAAe,CACjB1L,OAAQ,MACR9T,KAAM,UACNyf,QAAS,CACLC,eAAgB,eAqGjB,MAAMzP,EAAY,IAjGzB,MAKUnR,iDACoB,IAAlB8f,UACMtf,KAAKqgB,YAEf,IAAI1P,EAAO3Q,KAAKsgB,gBAChBtgB,KAAKuK,IArBb,SAA2BoG,GAAc,gBAAiBA,KAqBvC4P,CAAkB5P,GAC7B3Q,KAAKqJ,GArBb,SAA0BsH,GAAc,cAAeA,QAqBrC6P,CAAiB7P,GAC3B3Q,KAAKwK,QAAUxK,KAAKygB,eAGhBjhB,aAAamR,GAAc,gBAAiBA,UACtCnR,mDACV,IAAIkhB,EAA8B,GAC9BC,EAAmB,GACvB,IAAK,IAAIzZ,KAAK0Y,EAAO,CACjB,IAAIgB,EAAYhB,EAAM1Y,IAClBgI,MAACA,GAAS0R,EACVD,EAAQE,UAAUtZ,GAAKA,IAAM2H,GAAS,GAAGyR,EAAQna,KAAK0I,GAG9D,IAAK,IAAIyB,KAAQgQ,EAAS,CACtB,IAAIG,EAAW9gB,KAAK+gB,aAAapQ,GACjC+P,EAASla,KAAKwa,EAAWF,IAE7B,IAAIG,QAAgBtT,QAAQuT,IAAIR,GAC5BvZ,EAAMwZ,EAAQ/a,OAClB,IAAK,IAAIsB,EAAE,EAAGA,EAAEC,EAAKD,IAAK,CACtB,IAAIuB,EAAQwY,EAAQ/Z,GAChByJ,EAAOgQ,EAAQzZ,GACnB,IAAK,IAAIia,KAAKvB,EAAO,CACjB,IAAIgB,EAAYhB,EAAMuB,GAClBP,EAAU1R,QAAUyB,IACpBiQ,EAAUnY,MAAQA,OAc1BjJ,gBACJ,IAAI0P,MAACA,EAAKzG,MAAEA,GAASmX,EAAMC,WAE3B,OAAqC,IAD1B9U,SAASC,SAASF,KACpBiD,SAAS,eACPmB,GAEW,IAAlBoQ,IACc,IAAV7W,EAAuByG,EAExBzE,EAGHjL,aACJ,IAAI0P,MAACA,EAAKzG,MAAEA,GAASmX,EAAME,QAE3B,OAAqC,IAD1B/U,SAASC,SAASF,KACpBiD,SAAS,eACPmB,GAEW,IAAlBoQ,IACc,IAAV7W,EAAuByG,EAExB1E,EAGXhL,cAAc+K,EAAYyI,GACtB,IAAsB,IAAlBsM,EAAwB,OAAO/U,EACnC,IAAKyI,EAAU,OAAOzI,EACtB,IAAK,IAAIrD,KAAK0Y,EAAO,CACjB,IAAIjP,EAAOiP,EAAM1Y,IACbgI,MAACA,EAAKzG,MAAEA,GAASkI,EACjByQ,QAAmBla,KAEvB,GADU8L,EAASqO,QAAQD,GACjB,EACN,OAAc,IAAV3Y,EAAwB8B,EAC5ByI,EAAWA,EAAS9F,QAAQkU,QAAkBlS,MAItD,OAAO3E,EAGL/K,WAAWwT,2CACb,aAAagO,EAAWhO,OAY1BsO,EAAU,IAchB,SAAeN,EAAWzW,2CACtB,IAEI,aAfR,SAAyBA,GACrB,OAAO,IAAIoD,QAAQ,CAACC,EAASC,KAC3BjE,MAAMW,EAAK2V,GACV5T,KAAK/E,IACFA,EAAEga,OAAOjV,KAAKsB,GAAS4T,MAAM3T,KAEhC2T,MAAM3T,GACP,MAAMxB,EAAI,IAAIoV,MAAM,wBACpB1b,WAAW8H,EAAQyT,EAASjV,KAMpBqV,CAAgBnX,IACf,EAEX,MAAOtE,GACH,OAAO,oCC3Kf5H,EAAAC,EAAAC,EAAA,sBAAAojB,IAAAtjB,EAAAC,EAAAC,EAAA,sBAAAqjB,IAAA,IAAAC,EAAAxjB,EAAA,IAAAyjB,EAAAzjB,EAAA+gB,EAAAyC,GAkCO,SAASF,EAAgB/V,GAC5B,IAAI/K,EAAUihB,IAAUlW,GAOxB,MANiB,CACbtI,GAAIzC,EAAIyC,GACRpD,KAAMW,EAAIX,KACV+I,MAAOpI,EAAIoI,MACX2C,MAAOA,GAKR,SAASgW,EAAiBhW,GAO7B,MALmB,CACftI,GAAI,EACJ2F,MAHU6Y,IAAUlW,GAGT3C,MACX2C,MAAOA,kCClDfvN,EAAAC,EAAAC,EAAA,sBAAAkgB,IAAA,MAAMC,EAAW,iEACXC,EAAY,EAEX,SAASF,IACZ,IAAItX,EAAMuX,EAAS9Y,OACfgZ,EAAM,GACV,IAAK,IAAI1X,EAAI,EAAGA,EAAIyX,EAAWzX,IAC3B0X,GAAOF,EAASG,OAAOC,KAAKC,MAAMD,KAAKE,SAAW7X,IAEtD,OAAOyX,+VCDJ,MAAMmD,UAAkBC,EAAA,EAA/BxiB,kCAEIQ,KAAAiiB,MAAQ,KAAMjiB,KAAKqe,MAAM,QACzBre,KAAAkiB,OAAS,KAAMliB,KAAKqe,MAAM,SAC1Bre,KAAAmiB,SAAW,CAAOxb,GAAchE,EAAA3C,UAAA,qBAAC,OAAAA,KAAKqe,MAAM,OAAQ1X,MAE9CnH,KAAKuD,2CACP/C,KAAKoiB,SAASpiB,KAAKqG,QAGb7G,aAAa6iB,EAAaha,GAChC,OAAOga,EAAKC,SAGA9iB,YAAY6iB,iDAClBA,EAAK5V,YAGfpG,WACI,IACIkc,GADAniB,MAACA,EAAKoiB,WAAEA,EAAUC,OAAEA,GAAUziB,KAAK6D,WAGvC,OADe,IAAX4e,IAAkBF,EAAY7S,EAAA,wBAAQzH,UAAU,uBAAuBwE,QAASzM,KAAKiiB,OAAK,iBACvF,IAAMvS,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQjK,QACPmB,IAAfihB,EACD9S,EAAA,cAAAA,EAAA,cACIA,EAAA,cAACiT,EAAA,UAAS,CAAC1a,UAAU,QAAQka,SAAUniB,KAAKmiB,SAAUS,YAAa,eAAKxiB,IACxEsP,EAAA,qBAAKzH,UAAU,QACVsa,EACD7S,EAAA,wBAAQzH,UAAU,uBAAuBwE,QAASzM,KAAKkiB,QAAM,kBAGrExS,EAAA,cAACiT,EAAA,KAAI,CAAC1a,UAAU,OACZoC,OAAQqF,EAAA,cAACiT,EAAA,MAAK,KAAEviB,mCAChB4B,MAAOwgB,EACP1b,KAAM,CAACwb,OAAQtiB,KAAK6iB,aAAcpW,QAAQzM,KAAK8iB,0RChCxD,MAAMC,UAAkBf,EAAA,EAA/BxiB,kCAkBcQ,KAAAgjB,KAAO,KAAYC,EAAAjjB,UAAA,qBACzBA,KAAKkjB,MAAMC,QACXnjB,KAAKojB,eAGCpjB,KAAAqjB,OAAS,MACfrjB,KAAKojB,UAAU,GACfpjB,KAAKqe,MAAM,cAOLre,KAAAQ,SAAW,KAAYyiB,EAAAjjB,UAAA,qBAC7B,IAAIS,EAAST,KAAKkjB,MAAMI,YACpBziB,QAAYb,KAAK6D,WAAWnE,OAAO6jB,KAAKvjB,KAAKsD,GAAI7C,IACjD6C,GAACA,GAAMzC,EACX,GAAIyC,EAAK,EAAT,CACI,IAAIkgB,OAACA,GAAUxjB,KAAK6D,WAAWnE,OAC/B,QAAe6B,IAAXiiB,EACA,IAAK,IAAIvR,KAAKuR,EACVxjB,KAAKkjB,MAAMO,SAASxR,EAAG,gCAJnC,CASA,GAAIjS,KAAK6D,WAAW6f,UAGhB,OAFA1jB,KAAK2jB,WAAWrgB,QAChBtD,KAAKojB,YAGTpjB,KAAK4jB,gBAAgBlU,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQrK,KAAKI,MAAQ,2BAAQ4E,KAAK,QACzD0K,EAAA,qBAAKzH,UAAU,OACXyH,EAAA,sBAAMzH,UAAU,gBACZyH,EAAA,cAACiT,EAAA,GAAE,CAACziB,KAAK,eAAe2jB,KAAK,0CAEjCnU,EAAA,qBAAKzH,UAAU,QACXyH,EAAA,wBAAQzH,UAAU,uBAAuBwE,QAASzM,KAAKgjB,MAAI,4BAC3DtT,EAAA,wBAAQzH,UAAU,0BAA0BwE,QAASzM,KAAKqjB,QAAM,0BAK5ErjB,KAAKqe,MAAM,eAAgB,CAAC/a,GAAItD,KAAKsD,GAAI7C,OAAQA,QA1D/CjB,KAAKuD,2CACP/C,KAAKkjB,MAAQljB,KAAK8D,WAAW9D,KAAKQ,SAAUuC,QAC9BxB,IAAVwB,IACA/C,KAAKsD,GAAKP,EAAMO,IAEpBtD,KAAKoiB,SAASpiB,KAAK8jB,YAGvBA,eACI,MAAO,IAAMpU,EAAA,cAACgT,EAAA,KAAI,CAACrY,aAAmB9I,IAAVvB,KAAKsD,GAAgB,eAAK,gBAAQ,MAAQtD,KAAKI,OACtEJ,KAAKkjB,MAAMZ,OAAO,SAcjB9iB,YACNQ,KAAKkjB,MAAMC,gSC7BZ,MAAMY,UAAoB/B,EAAA,EAAjCxiB,kCA6BcQ,KAAAgkB,SAAWlkB,OAAAwP,EAAA,EAAAxP,CAAS,KAC1B,IAAIuK,EAAS4Z,EAAA5Q,EAAA6Q,cAACvB,EAAA,UAAS,CAAC1a,UAAU,aAC9Bkc,QAAS,GACThC,SAAUniB,KAAKokB,aAAcxB,YAAa,eAAK5iB,KAAKI,QACxD,OAAO6jB,EAAA5Q,EAAA6Q,cAACxB,EAAA,KAAI,CAACrY,OAAQA,EAAQrF,KAAK,SAC9Bif,EAAA5Q,EAAA6Q,cAACvB,EAAA,KAAI,CACD3gB,MAAOhC,KAAK6D,WAAWwgB,UAAUriB,MACjC8E,KAAM,CAACwb,OAAQtiB,KAAKskB,cAAe7X,QAASzM,KAAKukB,cACjDC,OAAQ,eAAKxkB,KAAKI,MAAM,oBAIpCJ,KAAAokB,aAAe,CAAOzd,GAAe8d,EAAAzkB,UAAA,2BAC3BA,KAAK6D,WAAW6gB,WAAW/d,MAGrC3G,KAAAskB,cAAgB,EAACxd,EAAUuB,IAA6B4b,EAAA5Q,EAAA6Q,cAAClkB,KAAK2kB,eAAc7kB,OAAAqI,OAAA,GAAKrB,KACjF9G,KAAAukB,aAAe,CAAOzd,GAAa2d,EAAAzkB,UAAA,qBAC/BA,KAAK4kB,iBACgCrjB,IAAjCvB,KAAK6D,WAAWnE,OAAOiY,YAIrB3X,KAAK6kB,QAAQ7kB,KAAKN,OAAOolB,aAAahe,IAHxC9G,KAAK2jB,WAAW7c,MAMd9G,KAAA+kB,QAAU,CAAChiB,GACVkhB,EAAA5Q,EAAA6Q,cAACxB,EAAA,KAAI,CAACrY,OAAO,mBAChB4Z,EAAA5Q,EAAA6Q,cAACvB,EAAA,KAAI,CACD3gB,MAAOe,EAAMf,MACb8E,KAAM,CAACwb,OAAQtiB,KAAKglB,aAAcvY,QAASzM,KAAKilB,iBAG5DjlB,KAAAglB,aAAe,EAACle,EAAUuB,IAA6B4b,EAAA5Q,EAAA6Q,cAAClkB,KAAKklB,cAAaplB,OAAAqI,OAAA,GAAKrB,KAC/E9G,KAAAilB,YAAc,CAACne,IACX9G,KAAK4kB,YACL5kB,KAAK2jB,WAAW7c,KA7DdtH,KAAKuD,gDACOxB,IAAVwB,QACM/C,KAAKmlB,SAASpiB,SAEd/C,KAAK6kB,QAAQ9hB,KAGbvD,SAASuD,2CACnB/C,KAAK2kB,eAAiB3kB,KAAKL,GAAGylB,YAAcC,EAAA,QACtCrlB,KAAK6D,WAAW6gB,WAAW3hB,GACjC/C,KAAKoiB,SAASpiB,KAAKgkB,YAGTxkB,QAAQ8lB,2CAClB,IAAIC,KAACA,GAAQvlB,KAAKL,QACL4B,IAATgkB,IACAvlB,KAAKklB,cAAgBK,EAAKvlB,KAAKN,OAAOQ,MAAMklB,iBAErB7jB,IAAvBvB,KAAKklB,gBACLllB,KAAKklB,cAAgBG,EAAA,GAEzB,IAAIG,QAAiBxlB,KAAK6D,WAAW4hB,YAAYH,GACjDtlB,KAAKoiB,SAASpiB,KAAK+kB,QAAS,CAAC/iB,MAAOwjB,wRCxBrC,MAAME,UAAkB1D,EAAA,EAA/BxiB,kCAsBcQ,KAAAgjB,KAAO,KAAY2C,EAAA3lB,UAAA,qBACzBA,KAAKkjB,MAAMC,QACXnjB,KAAKojB,eAGCpjB,KAAAqjB,OAAS,MACfrjB,KAAKojB,UAAU,KAOTpjB,KAAAQ,SAAW,KAAYmlB,EAAA3lB,UAAA,qBAC7B,IAAIS,EAAST,KAAKkjB,MAAMI,YACpBziB,QAAYb,KAAKN,OAAO6jB,KAAKvjB,KAAKsD,GAAI7C,GACtCI,GACA+kB,MAAM,gGAAuB9lB,OAAA+lB,EAAA,EAAA/lB,CAAce,IAE/Cb,KAAKoiB,SAAS,IAAM1S,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQrK,KAAKI,MAAQ,2BAAQ4E,KAAK,QACxD0K,EAAA,qBAAKzH,UAAU,OACXyH,EAAA,sBAAMzH,UAAU,gBACZyH,EAAA,cAACiT,EAAA,GAAE,CAACziB,KAAK,eAAe2jB,KAAK,0CAEjCnU,EAAA,qBAAKzH,UAAU,QACXyH,EAAA,wBAAQzH,UAAU,uBAAuBwE,QAASzM,KAAKgjB,MAAI,4BAC3DtT,EAAA,wBAAQzH,UAAU,0BAA0BwE,QAASzM,KAAKqjB,QAAM,6BAOtErjB,KAAAqG,KAAO,KAAMqJ,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQrK,KAAKI,OACjCJ,KAAKkjB,MAAMZ,OAAO,UApDjB9iB,UAAUuD,GAChB/C,KAAKkjB,MAAQljB,KAAK8D,gBAAWvC,EAAWwB,GAGtCvD,KAAKuD,2CACP/C,KAAK8lB,UAAU/iB,GACf/C,KAAKoiB,SAASpiB,KAAKqG,QAGvB7G,OAAOuD,GAEH,OADA/C,KAAK8lB,UAAU/iB,GACR/C,KAAKkjB,MAAMZ,SAGhB9iB,OAAO8D,2CACTtD,KAAKsD,GAAKA,IAYJ9D,YACNQ,KAAKkjB,MAAMC,SCzCZ,MAAM4C,UAAmBL,4QCAzB,MAAMM,UAAyBtD,EAAA,UAElCljB,YAAYymB,GACRpmB,OAAM,GACNG,KAAKimB,KAAOA,EAEAzmB,KAAKuD,EAAW6U,EAAeC,2CAE3C,aADgB7X,KAAKimB,KAAKC,OAAOnjB,EAAO6U,EAAWC,KAG7CrY,aAAasH,GACnB9G,KAAK4X,eAAqBrW,IAATuF,EAAoB,EAAIA,EAAKxD,6QCJ/C,MAAe6iB,UAA2BnE,EAAA,EAAjDxiB,kCAaIQ,KAAAmiB,SAAW,CAAOxb,GAAeyf,EAAApmB,UAAA,2BACvBA,KAAK6D,WAAW6gB,WAAW/d,MAGrC3G,KAAAqmB,UAAY,EAACvf,EAAUuB,IAA6BqH,EAAA,cAAC1P,KAAKolB,WAAUtlB,OAAAqI,OAAA,GAAKrB,KAUzE9G,KAAAsmB,SAAW,CAACxf,IACR9G,KAAKumB,eAAezf,KAEhB9G,KAAAwmB,OAAS,CAAC1f,IACd,IAAIxD,GAACA,GAAMwD,EACX,OAAOxD,IAEDtD,KAAAqG,KAAOvG,OAAAwP,EAAA,EAAAxP,CAAS,KACtB,IAII2mB,EAJApc,EAASqF,EAAA,cAACiT,EAAA,UAAS,CAAC1a,UAAU,aAC9Bkc,QAAS,GACThC,SAAUniB,KAAKmiB,SAAUS,YAAa,eAAK5iB,KAAKI,SAChDuX,MAACA,GAAS3X,KAAKN,OAEnB,QAAc6B,IAAVoW,EAAqB,CACrB,IAAI+O,EAAW/O,EAAMxH,YAAYnQ,KAAK2mB,SACtCF,EAAW/W,EAAA,mCAAa5P,OAAA+lB,EAAA,EAAA/lB,CAAc4mB,IAE1C,OAAOhX,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQA,GAChBoc,EACD/W,EAAA,cAACiT,EAAA,KAAI,CACD3gB,MAAOhC,KAAK6D,WAAWwgB,UAAUriB,MACjC8E,KAAM,CAACwb,OAAQtiB,KAAKqmB,UAAW5Z,QAASzM,KAAKsmB,SAAU3f,IAAI3G,KAAKwmB,QAChEhC,OAAQ,eAAKxkB,KAAKI,MAAM,oBA7C9BZ,KAAKuD,2CACP/C,KAAKolB,WAAaplB,KAAKL,GAAGylB,YAAcC,EAAA,OACd9jB,IAAtBvB,KAAKN,OAAOiY,QAAqB3X,KAAK2mB,QAAU9U,OAAO9O,UAGrD/C,KAAK6D,WAAW6gB,WAAW,IACjC1kB,KAAKoiB,SAASpiB,KAAKqG,QAUf7G,eAAesH,QACKvF,IAApBvB,KAAK4mB,WAIT5mB,KAAK4mB,WAAW9f,GAHZ8e,MAAM,0BAgCX,MAAMiB,UAAsBV,EACf3mB,WAAWsH,4CACQ,IAA3B9G,KAAK6D,WAAW4e,OAChBziB,KAAKqe,MAAM,OAAQvX,EAAKxD,IAExBtD,KAAKqe,MAAM,OAAQvX,EAAKxD,gRCtC7B,MAAewjB,UAA8B9E,EAAA,EAGtCxiB,iBACN,OAAO,IAAIwmB,EAAchmB,KAAKN,OAAOiY,OAAS3X,KAAKN,QAGjDF,WAAWmH,gDACUpF,IAAnBvB,KAAKqkB,YACLrkB,KAAKqkB,UAAYrkB,KAAK+mB,uBAEdxlB,IAARoF,UAAyB3G,KAAKqkB,UAAU2C,MAAMrgB,MAGhDnH,YAAYmnB,2CAEd,aADgB3mB,KAAKN,OAAOunB,UAAUN,OAASplB,EAAW,EAAG,QAK9D,MAAM2lB,UAAkBJ,EAC3BtnB,YAAYC,EAAUC,EAAkBC,EAAYC,GAChDC,MAAMJ,EAAKC,EAAQC,EAAIC,GACvB,IAAIqmB,EAAOjmB,KAAKN,OAEhB,GADAM,KAAKmnB,QAAUlB,EAAKkB,aACC5lB,IAAjBvB,KAAKmnB,QAAuB,CAC5BnnB,KAAKwiB,WAAa,GAClB,IAAK,IAAItb,KAAKlH,KAAKmnB,QAAS,CACxB,IAAI9E,EAAOriB,KAAKP,IAAI2nB,aAAa,OAAQlgB,GACzClH,KAAKwiB,WAAWhc,KAAK6b,KAK3B7iB,+CACF,IAAIqB,QAAYb,KAAKN,OAAO2nB,QAC5B,YAAY9lB,IAARV,EAA0Bb,KACvBa,IAGLrB,kDACF,aAAaQ,KAAKN,OAAO4nB,YAEvB9nB,oDACF,IAAIC,QAAYO,KAAKN,OAAO4nB,UAC5B,aAAa7nB,EAAI8nB,kBAAkBvnB,KAAKN,OAAOQ,QAE7CV,oDACF,IAAIC,QAAYO,KAAKN,OAAO4nB,UAC5B,aAAa7nB,EAAI+nB,kBAAkBxnB,KAAKN,OAAOQ,QAE7CV,sDACF,IAAIC,QAAYO,KAAKN,OAAO4nB,UAC5B,aAAa7nB,EAAIgoB,oBAAoBznB,KAAKN,OAAOQ,QAGrDV,SAASymB,GACL,GAAIA,IAASjmB,KAAKN,OAAQ,OAAOM,KAAKI,MACtC,IAAIF,KAACA,GAAQ+lB,GACTtkB,KAACA,GAAQ3B,KAAKJ,IAClB,QAAa2B,IAATI,EAAoB,CACpB,IAAII,EAAMJ,EAAKzB,GACf,QAAYqB,IAARQ,EAAmB,CACnB,IAAI3B,EAAQ2B,EAAI3B,MAChB,QAAcmB,IAAVnB,EAAqB,OAAOA,GAGxC,OAAOF,EAOXwnB,gBAA4C,OAAO3F,EACnD4F,gBAA4C,OAAO5E,EACnD6E,gBAAgD,OAAOf,EAEvCrnB,cAAcuD,2CAC1B/C,KAAKyiB,YAAoClhB,IAA3BvB,KAAKN,OAAOmoB,iBACpB7nB,KAAK8nB,UAAU9nB,KAAK0nB,aAGdloB,QAAQqI,EAAaqH,2CACjC,IAAI3H,EACJ,OAAQM,GACJ,QAAS,OACT,IAAK,MAAON,EAAIvH,KAAK2nB,UAAW,MAChC,IAAK,OAAQpgB,EAAIvH,KAAK4nB,UAAW,MACjC,IAAK,OAAgC,kBAAlB5nB,KAAK+nB,KAAK7Y,IAC7B,IAAK,eAAyC,YAAzBlP,KAAKgoB,YAAY9Y,GACtC,IAAK,OACD,IAAI+Y,EAAY,IAAIC,EAAUloB,KAAKP,IAAKO,KAAKN,OAAQM,KAAKL,GAAIK,KAAKJ,KAEnE,kBADMqoB,EAAUviB,MAAMwJ,UAGxBlP,KAAK8nB,UAAUvgB,EAAG2H,KAGZ1P,KAAK8D,2CACjB,IAAI7C,OAAac,OACNA,IAAP+B,IACA7C,QAAeT,KAAKN,OAAO8b,KAAKlY,IAEpC,IAAIiE,EAAIvH,KAAK2nB,gBACP3nB,KAAK8nB,UAAUvgB,EAAG9G,KAGpBjB,aAAY8D,GAACA,EAAE7C,OAAEA,IACrB,QAAuBc,IAAnBvB,KAAKqkB,UAAyB,OAClC,IACIvd,EADQ9G,KAAKqkB,UAAUriB,MACVsF,KAAKC,GAAKA,EAAEjE,KAAOA,QACvB/B,IAATuF,GACAuP,EAAAhD,EAAE8U,MAAMrhB,EAAMrG,IAKnB,MAAM2nB,UAAkBlB,EACX1nB,cAAc8D,iDACpBtD,KAAK+nB,KAAKzkB,MAIjB,MAAM+kB,UAAkBnB,EACX1nB,cAAc8D,iDACpBtD,KAAK8nB,UAAU9nB,KAAK4nB,cAU3B,MAAMU,UAAoBxB,EACbtnB,cAAcuD,iDACpB/C,KAAK8nB,UAAU9nB,KAAKuoB,YAAaxlB,KAE3BvD,sDAIZ,aAFMQ,KAAKN,OAAOa,kBACKgB,IAAnBvB,KAAKqkB,WAAyBrkB,KAAKqkB,UAAUlB,SAC1C,IAEXoF,kBAAgD,OAAOxE,EACvDvkB,WAAWsH,GACP,OAAOA,EAAKxD,IAIb,MAAM4kB,UAAkBpB,EACXtnB,cAAc8D,2CAC1B,IAAImQ,QAAazT,KAAKN,OAAO8b,KAAKlY,SAC5BtD,KAAK8nB,UAAU9nB,KAAKwoB,UAAW/U,KAEzC+U,gBAA4C,OAAOzC,GC5LvD1nB,EAAAC,EAAAC,EAAA,sBAAA2oB,IAAA7oB,EAAAC,EAAAC,EAAA,sBAAA6pB,IAAA/pB,EAAAC,EAAAC,EAAA,sBAAA8pB,IAAAhqB,EAAAC,EAAAC,EAAA,sBAAA+pB,IAAAjqB,EAAAC,EAAAC,EAAA,sBAAA2pB,6DCMO,MAAeO,EAIlBjpB,YAAYY,GAFFJ,KAAAqG,KAAO,KAAMqJ,EAAA,2BAGnB1P,KAAKI,MAAQA,EAGjBZ,SAEI,OAAOkQ,EAAA,qBAAK/I,IAAK3G,KAAK2G,IAAKsB,UAAU,QACjCyH,EAAA,qBAAKzH,UAAU,kBACXyH,EAAA,uBAAOzH,UAAU,2BACZjI,KAAKI,OAEVsP,EAAA,qBAAKzH,UAAU,aACVjI,KAAK0oB,mBAMtBlpB,UAAUmpB,IACVhiB,UAAW,OAAO3G,KAAKI,MAChBZ,cACAA,WACAA,cAEGA,gBACN,OAAOkQ,EAAA,qBAAKzH,UAAU,4EAA0E,YASjG,MAAM2gB,UAAmBH,EAE5BjpB,YAAYY,EAAcyoB,GACtBhpB,MAAMO,GACNJ,KAAK6oB,OAASA,EAGlBliB,UAAW,OAAO3G,KAAK6oB,OAAO3oB,KACvBV,aAAuB,MAAO,CAACQ,KAAK6oB,QAEjCrpB,gBACN,OAAOQ,KAAK6oB,OAAOvG,UAQpB,MAAMwG,UAAiBL,EAE1BjpB,YAAYY,EAAc2oB,GACtBlpB,MAAMO,GACNJ,KAAK+oB,KAAOA,EAGhBvpB,UAAUmpB,GAA2B3oB,KAAK+oB,KAAKC,UAAUL,GACzDhiB,UAAW,OAAO3G,KAAK+oB,KAAK7oB,KACrBV,UAAgB,OAAOQ,KAAK+oB,KAEnCvpB,SACI,OAAOkQ,EAAA,cAACA,EAAA,SAAc,CAAC/I,IAAK3G,KAAK2G,KAC5B3G,KAAK+oB,MAAQ/oB,KAAK+oB,KAAKzG,WAsB7B,MAAM2G,UAAoBR,EAE7BjpB,YAAY0pB,GACRrpB,WAAM0B,GACNvB,KAAKkpB,QAAUA,EAGnBviB,UAAW,MAAO,UAEXnH,aAAsB,OAAOQ,KAAKkpB,QAEzC1pB,SACI,OAAOkQ,EAAA,qBAAK/I,IAAI,UAAUsB,UAAU,QAChCyH,EAAA,qBAAKzH,UAAU,kBACXyH,EAAA,qBAAKzH,UAAU,yBACVjI,KAAKkpB,QAAQ5G,4mBC1G3B,MAAM6G,UAAgB9D,EAAA,EAEzB7lB,YAAY0jB,GACRrjB,QAQIG,KAAAopB,cAAgB,KAAWzmB,EAAA3C,UAAA,qBAC/BA,KAAKkjB,MAAMmG,YAGLrpB,KAAAqG,KAAOvG,OAAAwP,EAAA,EAAAxP,CAAS,KACtB,IAAIwpB,KAACA,GAAQtpB,KAAKkjB,MAClB,OAAOxT,EAAA,wBAAQ7H,KAAK,SAChB4E,QAASzM,KAAKopB,cACdnhB,UAAWjI,KAAKiI,UAChBshB,UAAmB,IAATD,GACTtpB,KAAKwpB,WAjBVxpB,KAAKkjB,MAAQA,EACbljB,KAAKwpB,QAAUxpB,KAAKkjB,MAAMjiB,cAC1BjB,KAAKiI,UAAY,wBAETuG,EAAA,CAAXib,EAAA,iCACWjb,EAAA,CAAXib,EAAA,8DCfE,MAAeC,GAIf,MAAMC,UAAqBD,EAC9BlqB,MAAMoqB,EAAe1a,GACjB,cAAeA,GACX,QACA,IAAK,UAAW,OAChB,IAAK,SACD,GAAc,OAAVA,EAAgB,OACpB,MACJ,IAAK,SACD,GAAKA,EAAiB2a,OAAOjkB,OAAS,EAAG,OACzC,MACJ,IAAK,SACD,GAA0BkkB,MAArB5a,EAA0B,OAC/B,MACJ,IAAK,aAGT0a,EAAKpjB,KAAK,6BAIX,MAAMujB,UAAgBL,EACzBlqB,MAAMoqB,EAAe1a,GACjB,QAAc3N,IAAV2N,GAAiC,OAAVA,EAAgB,OAEjC4a,MADFjY,OAAO3C,IACA0a,EAAKpjB,KAAK,mCAI1B,MAAMwjB,UAAgBN,EACzBlqB,MAAMoqB,EAAe1a,GACjB,QAAc3N,IAAV2N,GAAiC,OAAVA,EAAgB,OAC3C,IAAIkQ,EAAIvN,OAAO3C,IACS,IAApB2C,OAAOoY,MAAM7K,KAAuC,IAAxBvN,OAAOqY,UAAU9K,IAC7CwK,EAAKpjB,KAAK,mCAKf,MAAM2jB,UAAgBJ,EACzBvqB,YAAY4qB,GACRvqB,QACAG,KAAKoqB,IAAMA,EAGf5qB,MAAMoqB,EAAe1a,GACjBrP,MAAMwqB,MAAMT,EAAM1a,GACd2C,OAAO3C,GAASlP,KAAKoqB,KAAKR,EAAKpjB,KAAK,2BAASxG,KAAKoqB,MAIvD,MAAME,UAAgBP,EACzBvqB,YAAY+qB,GACR1qB,QACAG,KAAKuqB,IAAMA,EAGf/qB,MAAMoqB,EAAe1a,GACjBrP,MAAMwqB,MAAMT,EAAM1a,GACd2C,OAAO3C,GAASlP,KAAKuqB,KAAKX,EAAKpjB,KAAK,2BAASxG,KAAKuqB,kVCpDvD,MAAeC,UAAenF,EAAA,EAMjC7lB,YAAYkC,EAAYQ,EAAaE,EAAkBqoB,GACnD5qB,QACAG,KAAK0B,KAAOA,EACZ1B,KAAKkC,MAAQA,EACblC,KAAKE,KAAOgC,EAAMhC,KAClBF,KAAKoC,QAAUA,GAAW,GAC1BpC,KAAKyqB,SAAWA,GAAY,GAC5BzqB,KAAK0qB,OAKClrB,OACNQ,KAAK2qB,aAGCnrB,aACNQ,KAAK4qB,MAAQ,GACb,IAAIC,SAACA,GAAY7qB,KAAKoC,UACL,IAAbyoB,QAAoCtpB,IAAfvB,KAAKkC,QAA2C,IAApBlC,KAAKkC,MAAM4oB,OAC5D9qB,KAAK4qB,MAAMpkB,KAAK,IAAImjB,GAIlBoB,iBACN,IAAInB,EAAO,GACX,IAAK,IAAIoB,KAAKhrB,KAAK4qB,MAAOI,EAAEX,MAAMT,EAAM5pB,KAAKkP,OAC7C,OAAO0a,EAGDN,WACN,GAA0B,IAAtBtpB,KAAK4qB,MAAMhlB,OAAc,OAAO,EAEpC,OAAuB,IADZ5F,KAAK+qB,WACJnlB,OAGNsJ,YAAc,OAAOlP,KAAK0B,KAAKjB,OAAOT,KAAKE,MACrDV,SAAS+H,GACLvH,KAAK0B,KAAKjB,OAAOT,KAAKE,MAAMqH,EAEhCrB,YAAc,OAAOlG,KAAK0B,KAAKupB,OAAOjrB,KAAKE,MAC3CgG,UAAUD,GAAWjG,KAAK0B,KAAKupB,OAAOjrB,KAAKE,MAAM+F,EACvCzG,MAAMiX,GAAiB,OAAOA,EACxCyU,eACI,IAAIxqB,KAACA,GAAQV,KAAK0B,KAClB,OAAOhB,IAASyqB,EAASD,UACrBxqB,IAASyqB,EAASpD,OAAkC,IAA1B/nB,KAAKoC,QAAQgpB,UAtBrCC,EAAA,CAAT5B,EAAA,kCAMS4B,EAAA,CAAT5B,EAAA,4BAMS4B,EAAA,CAAT5B,EAAA,6BAuBE,MAAe6B,UAAsBd,EAA5ChrB,kCAOcQ,KAAAurB,YAAc,CAACtjB,IACrB,IAAIgjB,OAACA,GAAUjrB,KAAK0B,KAChBwE,EAAQ+kB,EAAOjrB,KAAKE,MACxB,QAAcqB,IAAV2E,EACJ,OAAOwJ,EAAA,qBAAKzH,UAAWA,GAAWyH,EAAA,cAACiT,EAAA,GAAE,CAACziB,KAAK,2BAAyBgG,KAW9DlG,KAAAwrB,IAAM,CAACC,IACbzrB,KAAKyrB,MAAQA,EACbzrB,KAAK0rB,kBASC1rB,KAAA2rB,QAAU,MAChB3rB,KAAKkG,WAAQ3E,IAGPvB,KAAA4rB,OAAS,MACf,IAAIhC,EAAO5pB,KAAK+qB,WACZnB,EAAKhkB,OAAS,IACd5F,KAAKkG,MAAQ0jB,EAAK,IAEtB5pB,KAAK0B,KAAKmqB,kBAGJ7rB,KAAA8rB,SAAW,CAACtY,IAClB,IAAIjM,EAAIvH,KAAK+V,MAAMvC,EAAIuY,cAAc7c,OAC3B,OAAN3H,GAGJvH,KAAKgsB,SAASzkB,KAKRvH,KAAAqG,KAAOvG,OAAAwP,EAAA,EAAAxP,CAAS,KACtB,IAKIgc,EACA2P,EAyBAQ,GA/BApB,SAACA,GAAY7qB,KAAKoC,SAClBK,YAACA,EAAWypB,OAAEA,GAAUlsB,KAAKyqB,SAC7B0B,EAAS,CAAC,eAAgB,sBAwC9B,OAnCsB,IAAlBnsB,KAAKkrB,SACLO,EAAQ/b,EAAA,uBAAOzH,UAAW4U,IAAWsP,EAAQ,YACzCX,IAAKxrB,KAAKwrB,IACV3jB,KAAM7H,KAAKosB,UACXC,UAAU,KAIdZ,EAAQ/b,EAAA,uBAAOzH,UAAW4U,IAAWsP,GACjCX,IAAKxrB,KAAKwrB,IACV3jB,KAAM7H,KAAKosB,UACXT,QAAS3rB,KAAK2rB,QACdC,OAAQ5rB,KAAK4rB,OACbE,SAAU9rB,KAAK8rB,SACflJ,YAAangB,EACb4pB,UAAU,EACVC,UAAWtsB,KAAKssB,UAChBC,WAAYvsB,KAAKusB,cAEJ,IAAb1B,IAAyC,IAApB7qB,KAAKkC,MAAM4oB,OAChChP,EAASpM,EAAA,cAAC8c,EAAO,QAMrBP,OADW1qB,IAAX2qB,EACaT,EAEA/b,EAAA,qBAAKzH,UAAU,eACvBwjB,EACD/b,EAAA,qBAAKzH,UAAU,sBACXyH,EAAA,sBAAMzH,UAAU,oBAAoBikB,KAIzCxc,EAAA,cAAAA,EAAA,cACFoM,EACAmQ,EACAjsB,KAAKurB,YA1CE,kCAtDhBe,iBAaA9sB,SAAS+H,GACL1H,MAAMmsB,SAASzkB,GAAIvH,KAAK0rB,gBAQlBlsB,gBACN,IAAKQ,KAAKyrB,MAAO,OACjB,IAAIlkB,EAAIvH,KAAKkP,MACblP,KAAKyrB,MAAMvc,MAAc,OAAN3H,QAAoBhG,IAANgG,EAAiB,GAAKA,GA4ExD,MAAMilB,EAAU,IAAM9c,EAAA,mBAAGpH,MAAO,CAACmkB,MAAM,MAAOC,SAAS,WAAYC,KAAK,QAAShlB,IAAI,UAAQ,KAE7F,MAAMilB,UAAqBtB,EAAlC9rB,kCAEcQ,KAAAosB,UAAmB,OAC7BE,gBAAkC,OAAOtsB,KAAKkC,MAAM2hB,MAGxD,MAAMgJ,EAAc,GACdC,EAAc,GAEb,MAAeC,UAAuBzB,EAA7C9rB,kCAuCIQ,KAAAosB,UAAmB,SAoBTpsB,KAAAusB,WAAa,CAAClO,IACpB,IAAI2O,EAAK3O,EAAM4O,SACf,KAAW,IAAPD,GAAmB,IAAPA,GAAmB,KAAPA,GAAaA,GAAM,IAAMA,GAAM,IAC3D,QAAwBzrB,IAApBvB,KAAKktB,YACDltB,KAAKktB,WAAW7L,QAAQ2L,IAAO,EAC/B,OAAQA,GACJ,KAAKF,EAAa9sB,KAAKmtB,WAAY,MACnC,KAAKN,EAAa7sB,KAAKotB,WAAY/O,EAAMgP,sBAKrDhP,EAAMgP,mBAnEA7tB,OAGN,GAFAK,MAAM6qB,OACN1qB,KAAKktB,WAAa,QACG3rB,IAAjBvB,KAAKoC,QAAuB,CAC5B,IAAIgoB,IAACA,EAAGG,IAAEA,GAAOvqB,KAAKoC,aACVb,IAAR6oB,EAEIA,EAAM,GAAGpqB,KAAKktB,WAAW1mB,KAAKqmB,GAGlC7sB,KAAKktB,WAAW1mB,KAAKqmB,GAO7B,OAAQ7sB,KAAKkC,MAAM2F,MACf,IAAK,MACL,IAAK,SACL,IAAK,MACL,IAAK,WACL,IAAK,UACD7H,KAAKktB,WAAW1mB,KAAKsmB,IAIvBttB,aACNK,MAAM8qB,aACN3qB,KAAK4qB,MAAMpkB,KAAK,IAAIujB,GACpB,IAAIK,IAACA,EAAGG,IAAEA,GAAOvqB,KAAKoC,aACVb,IAAR6oB,GAAmBpqB,KAAK4qB,MAAMpkB,KAAK,IAAI2jB,EAAQC,SACvC7oB,IAARgpB,GAAmBvqB,KAAK4qB,MAAMpkB,KAAK,IAAI8jB,EAAQC,IAK7C/qB,MAAM+hB,GACZ,IACI,GAA2B,IAAvBA,EAAKsI,OAAOjkB,OAAc,OAC9B,IAAI/E,EAAMgR,OAAO0P,GACjB,OAAgBuI,MAARjpB,EAAc,KAAOA,EAEjC,MAAAysB,GACI,OAAO,MAIL9tB,gBACN,IAAKQ,KAAKyrB,MAAO,OACjB,IAAIlkB,EAAIvH,KAAKkP,MACTlP,KAAK+V,MAAM/V,KAAKyrB,MAAMvc,QAAU3H,IACpCvH,KAAKyrB,MAAMvc,MAAc,OAAN3H,QAAoBhG,IAANgG,EAAiB,GAAKA,GAkBnD/H,WACJ,IAAI+H,EAAIvH,KAAKyrB,MAAMvc,MACX3H,EAAE8Z,QAAQ,MACT,IAAGrhB,KAAKyrB,MAAMvc,MAAQ3H,EAAE2F,QAAQ,IAAK,KAE1C1N,WACJ,IAAI+H,EAAIvH,KAAKyrB,MAAMvc,MACfjI,EAAIM,EAAE8Z,QAAQ,KACN9Z,EAARN,GAAK,EAAOM,EAAE2F,QAAQ,IAAK,IACtB,IAAI3F,EACbvH,KAAKyrB,MAAMvc,MAAQ3H,GAIpB,MAAMgmB,UAAkBR,EACjBvtB,aACNK,MAAM8qB,aACN3qB,KAAK4qB,MAAMpkB,KAAK,IAAIwjB,IAIrB,MAAMwD,UAAkBT,GAGxB,MAAMU,UAAmBb,GAIzB,MAAMc,UAAuBd,GCjS7B,MAAMe,UAAsBnD,EAC/BhrB,YAAYkC,EAAYQ,EAAcuoB,GAClC5qB,MAAM6B,EAAMQ,OAAOX,EAAWkpB,GAExBzqB,KAAAqG,KAAOvG,OAAAwP,EAAA,EAAAxP,CAAS,KACtB,IAAIoP,EAAQlP,KAAK0B,KAAKjB,OAAOT,KAAKkC,MAAMhC,OACpCuC,YAACA,EAAWypB,OAAEA,GAAUlsB,KAAKyqB,SAEnB,OAAVvb,IAAgBA,EAAQ,IAC5B,IAKI+c,EALAR,EAAQxH,EAAA5Q,EAAA6Q,cAAA,SAAOjc,UAFN,2CAGTJ,KAAK,OACL+a,YAAangB,EACb4pB,UAAU,EACVnd,MAAOA,IAWX,OARI+c,OADW1qB,IAAX2qB,EACaT,EAEAxH,EAAA5Q,EAAA6Q,cAAA,OAAKjc,UAAU,eACvBwjB,EACDxH,EAAA5Q,EAAA6Q,cAAA,OAAKjc,UAAU,sBACXgc,EAAA5Q,EAAA6Q,cAAA,QAAMjc,UAAU,oBAAoBikB,wSChBjD,MAAM0B,UAAavI,EAAA,EAkBtB7lB,YAAYquB,EAAiB9rB,EAAe+rB,GACxCjuB,QA8CMG,KAAA+tB,QAAU,KACTre,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQrK,KAAKI,MAAO4E,KAAK,SACjChF,KAAKkjB,MAAMZ,OAAO,UAGnBtiB,KAAAQ,SAAW,KAAYwtB,EAAAhuB,UAAA,qBAC3B,IAAIiuB,UAACA,GAAajuB,KAAKkjB,YACjBljB,KAAKkuB,aAAaD,MAGpBjuB,KAAAkuB,aAAe,CAAOC,GAAkBH,EAAAhuB,UAAA,0BACrBuB,IAAnBvB,KAAKmuB,WACLA,EAAUC,OAASpuB,KAAK6tB,UAAUptB,OAClCT,KAAKquB,KAAK7nB,KAAK2nB,QACQ5sB,IAAnBvB,KAAK8tB,UACL9tB,KAAKkjB,MAAMC,cAELnjB,KAAK8tB,eAAUvsB,EAAWvB,KAAKkuB,gBAGzC7X,EAAAhD,EAAE8U,MAAMnoB,KAAKmuB,UAAWA,QACD5sB,IAAnBvB,KAAK8tB,WAAyBpL,EAAA,IAAI3b,UAItC/G,KAAAsuB,WAAa,EAACxnB,EAAUuB,SACJ9G,IAApBvB,KAAKolB,WACE1V,EAAA,qBAAKzH,UAAU,aAAYyH,EAAA,cAAC2V,EAAA,EAAWvlB,OAAAqI,OAAA,GAAKrB,KAChD4I,EAAA,cAAC1P,KAAKolB,WAAUtlB,OAAAqI,OAAA,GAAKrB,KAExB9G,KAAAuuB,QAAU,CAAOJ,GAA+BH,EAAAhuB,UAAA,0BAC7BuB,IAAnBvB,KAAK8tB,WAIT9tB,KAAKkjB,MAAMC,aACO5hB,IAAd4sB,GAAyBnuB,KAAKkjB,MAAMniB,UAAUotB,GAClDzL,EAAA,IAAIlc,KAAKkJ,EAAA,cAAC1P,KAAK+tB,QAAO,cALZ/tB,KAAK8tB,UAAUK,EAAWnuB,KAAKkuB,iBAOrCluB,KAAAwuB,QAAU,CAAOL,GAAiCH,EAAAhuB,UAAA,qBACtDA,KAAKmuB,UAAYA,EACjB,IAAIjF,QAACA,GAAWlpB,KAAKkjB,WACL3hB,IAAZ2nB,IACAA,EAAQM,QAAUxpB,KAAKyuB,kBACvBvF,EAAQjhB,UAAY,2BAExBjI,KAAKkjB,MAAMxiB,KAAOV,KAAK6tB,UAAUntB,WAC3BV,KAAKuuB,QAAQJ,MAEfnuB,KAAA0uB,eAAiB,KAAYV,EAAAhuB,UAAA,qBACjCA,KAAKmuB,eAAY5sB,EACjB,IAAI2nB,QAACA,GAAWlpB,KAAKkjB,MACrBgG,EAAQM,QAAUxpB,KAAK2uB,iBACvBzF,EAAQjhB,UAAY,0BACpBjI,KAAKkjB,MAAMC,QACXnjB,KAAKkjB,MAAMxiB,KAAOyqB,EAAS3pB,UACrBxB,KAAKuuB,aAAQhtB,MAGbvB,KAAAqG,KAAO,MACb,IAAIuoB,OACgBrtB,IAAhBvB,KAAK2oB,QAAwB3oB,KAAKU,OAASyqB,EAASD,WACpD0D,EAASlf,EAAA,wBAAQjD,QAASzM,KAAK2oB,QAAU3oB,KAAK0uB,eAC1C7mB,KAAK,SACLI,UAAU,oBACTjI,KAAK6tB,UAAUzsB,oBAGxB,IAAIiJ,EAASrK,KAAKqK,QAAUqF,EAAA,qBAAKzH,UAAU,sBAAsBK,MAAO,CAACumB,WAAW,MAAOC,cAAc,QACrGpf,EAAA,qBAAKzH,UAAU,+BAA+BjI,KAAKI,OAClDwuB,GAEL,OAAOlf,EAAA,cAACiT,EAAA,KAAI,CAAC1a,UAAU,OACnBoC,OAAQA,EACRrJ,KAAM0O,EAAA,cAACiT,EAAA,MAAK,CAAC1a,UAAU,aAAajI,KAAKgB,MACzCgB,MAAOhC,KAAKquB,KACZvnB,KAAM,CAACwb,OAAQtiB,KAAKsuB,WAAY7hB,QAASzM,KAAKwuB,aAzHlDxuB,KAAK6tB,UAAYA,EACjB,IAAI3tB,KAACA,EAAImB,OAAEA,GAAUU,EACrB/B,KAAKE,KAAOA,EACZ,IAAIP,GAACA,EAAEC,IAAEA,EAAGc,KAAEA,EAAIkB,OAAEA,EAAMnB,OAAEA,GAAUotB,EAClCkB,EAAUnvB,EAAI+B,KACdqtB,OAAqBztB,IAAZwtB,EAAuBA,EAAQ7uB,GAAQ,IAChDE,MAACA,EAAKY,KAAEA,EAAIiuB,UAAEA,EAASC,WAAEA,GAAcF,EAC3ChvB,KAAKgB,KAAOA,GAAQ6sB,EAAU7sB,KAC9BhB,KAAK2uB,iBAAmBM,GAAapB,EAAU3sB,cAC/ClB,KAAKyuB,kBAAoBS,GAAcrB,EAAU1sB,eACjDnB,KAAKI,MAAQA,GAASF,EACtB,IAAIivB,EAAUxvB,GAAMA,EAAGqC,MAAM9B,IAAU,GACvCF,KAAKolB,WAAa+J,EAAM/J,WACxBplB,KAAKU,KAAOA,OACWa,IAAnBvB,KAAK8tB,UACL9tB,KAAKkjB,MAAQ,IAAIkM,EAAM,CACnB/tB,OAAQA,EACRM,UAAMJ,EACN5B,GAAIwvB,EACJvvB,IAAKovB,EACLptB,OAAQA,EAAO1B,GACfc,KAAM6sB,EAAU7sB,KAChBC,cAAe,SACfC,mBAAeK,EACfJ,oBAAgBI,EAChBH,uBAAmBG,EACnBb,KAAMA,GAEVA,IAAOyqB,EAASD,cAAU3pB,EAAWvB,KAAKQ,UAG1CR,KAAK8tB,UAAYA,EAErB9tB,KAAKquB,KAAO5tB,EAAOP,GAGvBV,QACIQ,KAAKkjB,MAAMC,QACXnjB,KAAKquB,KAAK9nB,QAGd/G,UAAUmpB,GACN3oB,KAAK2oB,OAASA,oRCjEtB,MAAM0G,EAAkC,CACpCC,UAAU,OACVC,YAAY,UACZC,aAAa,UACbC,SAAU,UAGP,MAAMC,UAAmBlF,EAK5BhrB,YAAY0jB,EAAchhB,EAAaE,EAAkBqoB,GACrD5qB,MAAMqjB,EAAOhhB,EAAOE,EAASqoB,GAMjCzqB,KAAAyM,QAAU,KAAYkjB,EAAA3vB,UAAA,qBAClB,IAAsB,IAAlBA,KAAKkrB,SAAmB,CACxB,IAAKlrB,KAAKkP,MAAO,OAEjB,kBADMlP,KAAKimB,KAAK2J,SAAS5vB,KAAKkP,MAAM5L,KAGxC,IAAIA,OACe/B,IAAfvB,KAAKyrB,MACLnoB,QAAWtD,KAAKyrB,MAAMppB,OAAOrC,KAAKkjB,MAAOljB,KAAKkC,MAAOlC,KAAKkjB,MAAMI,cAGhEsC,MAAM,kBACNtiB,EAAK,GAETtD,KAAKgsB,SAAShsB,KAAKimB,KAAK4J,MAAMvsB,OAExBtD,KAAAqG,KAAOvG,OAAAwP,EAAA,EAAAxP,CAAS,KACtB,IAOIyC,EAkBAuZ,GAzBArZ,YAACA,GAAezC,KAAKyqB,SACrBlB,GAAmB,GACnB3mB,YAACA,GAAe5C,KAAKkC,MACzB,QAAoBX,IAAhBqB,EAA2B,CAC3B,IAAI1C,KAACA,EAAI6B,IAAEA,GAAOa,EAClB2mB,EAAyC,OAA9BvpB,KAAKkjB,MAAMlgB,SAAS9C,GAGnC,GAAmB,OAAfF,KAAKkP,MACL3M,EAAUmN,EAAA,cAAAA,EAAA,cAAGjN,GAAezC,KAAKyrB,MAAMhpB,kBACtC,GAA0B,kBAAfzC,KAAKkP,MACjB3M,EAAUzC,OAAA+lB,EAAA,EAAA/lB,CAAGE,KAAKkP,WAEjB,CACD,IAAI4gB,EAAQ9vB,KAAKimB,KAAK4J,MAAM7vB,KAAKkP,OACjC3M,EAAUzC,OAAA+lB,EAAA,EAAA/lB,CAAGgwB,GAEjB,IAAsB,IAAlB9vB,KAAKkrB,SAEL,OAAOxb,EAAA,qBACHzH,UAAU,yFACVwE,QAASzM,KAAKyM,SACblK,GAIT,IAAIsoB,SAACA,GAAY7qB,KAAKoC,QAItB,OAHiB,IAAbyoB,IAAyC,IAApB7qB,KAAKkC,MAAM4oB,OAChChP,EAASpM,EAAA,cAAC8c,EAAO,OAEd9c,EAAA,cAAAA,EAAA,cACFoM,EACDpM,EAAA,wBAAQzH,UAAU,oCACdJ,KAAK,SACL0hB,SAAUA,EACVjhB,MAAO+mB,EACP5iB,QAASzM,KAAKyM,SACblK,MA3DTvC,KAAKimB,KAAO/jB,EAAMC,MAClBnC,KAAKkjB,MAAQA,EACbljB,KAAKyrB,MAAQvI,EAAMthB,OAAOM,EAAMhC,OChBjC,MAAM6vB,EAQTvwB,YAAY0jB,EAAaviB,EAAsBH,GAC3CR,KAAKkjB,MAAQA,EACbljB,KAAKQ,SAAWA,EAChB,IAAIa,OAACA,EAAMM,KAAEA,EAAIhC,GAAEA,EAAEC,IAAEA,GAAOe,EAG9B,GAFAX,KAAKqB,OAASA,EACdrB,KAAK2B,KAAOA,OACDJ,IAAP5B,EAAkB,CAClB,IAAIqC,MAACA,EAAKguB,OAAEA,GAAUrwB,EACtBK,KAAKiwB,UAAYjuB,EACjBhC,KAAKgwB,OAASA,EAElBhwB,KAAKJ,IAAMA,EAGfJ,QAEI,YAAuB+B,IAAhBvB,KAAKgwB,OAAsBhwB,KAAKkwB,aAAelwB,KAAKmwB,kBAGvD3wB,YAAYU,EAAaN,GAC7B,QAAY2B,IAAR3B,EAAmB,OACvB,IAAIyB,OAACA,GAAUzB,EACf,YAAe2B,IAAXF,EACGA,EAAOnB,IAASA,OADvB,EAIIV,aACJ,IAAI4wB,EAAgB,GAEpB,GADApwB,KAAKqwB,gBAAgBD,EAAOpwB,KAAKqB,OAAQrB,KAAKJ,UAC5B2B,IAAdvB,KAAK2B,KACL,IAAK,IAAII,KAAO/B,KAAK2B,KAAMyuB,EAAM5pB,KAAKxG,KAAKswB,YAAYvuB,IAK3D,YAHsBR,IAAlBvB,KAAKQ,UACL4vB,EAAM5pB,KAAK,IAAIyiB,EAAY,IAAIE,EAAQnpB,KAAKkjB,SAEzCkN,EAGH5wB,gBAAgB4wB,EAAe/uB,EAAgBzB,GACnD,QAAe2B,IAAXF,EACJ,IAAK,IAAIa,KAASb,EAAQ+uB,EAAM5pB,KAAKxG,KAAKuwB,cAAcruB,EAAOtC,IAG3DJ,kBAQJ,MAPoB,GAuDhBA,cAAc0C,EAAatC,GAC/B,IACI6qB,EAEArqB,EASAyoB,EACA2H,GAbAtwB,KAACA,GAAQgC,EAETuuB,EAAMzwB,KAAK0wB,YAAYxwB,EAAMN,GAwBjC,MAtBmB,kBAAR6wB,GACPrwB,EAAQqwB,EAAIrwB,MACZqqB,EAAWgG,IAGXrwB,EAAQqwB,EACRhG,OAAWlpB,QAIQA,IAAnBvB,KAAKiwB,YAAyBO,EAAWxwB,KAAKiwB,UAAU/vB,SAS7CqB,KALXsnB,EADoB,oBAAb2H,EACE,IAAI7C,EAAc3tB,KAAKkjB,MAAOhhB,EAAOuoB,GCjInD,SAAqB/oB,EAAYQ,EAAcE,EAAkBqoB,GACpE,IAAI5B,EACJ,OAAQ3mB,EAAM2F,MACV,QAAS,OACT,IAAK,UACL,IAAK,WACL,IAAK,MACDghB,EAAS0E,EACT,MACJ,IAAK,SACD,IAAIprB,MAACA,GAASD,EACd,QAAcX,IAAVY,EAAqB,OACzB0mB,EAAS0E,EACT,MACJ,IAAK,MACD1E,EAAS2E,EACT,MACJ,IAAK,OACD3E,EAAS+D,EACT,MACJ,IAAK,OACD/D,EAAS4E,EACT,MACJ,IAAK,WACD5E,EAAS6E,EAGjB,OAAO,IAAI7E,EAAOnnB,EAAMQ,EAAOE,EAASqoB,GDyGvBkG,CAAY3wB,KAAKkjB,MAAOhhB,EAAOsuB,EAAqB/F,MAG7D5B,EAAS,IAAI6G,EAAW1vB,KAAKkjB,MAAOhhB,EAAOsuB,EAAqB/F,IAE7D,IAAI7B,EAAWxoB,GAASF,EAAM2oB,GAGjCrpB,YAAYuC,GAChB,IAAI7B,KAACA,EAAImB,OAAEA,GAAUU,EAIjBgnB,EAAO,IAAI6E,EAAK5tB,KAAKkjB,MAAOnhB,GAChC,OAAO,IAAI+mB,EAAS5oB,EAAM6oB,QEjItBoC,glBAAZ,SAAYA,GAAUA,IAAA,aAAKA,IAAA,eAAMA,IAAA,uBAAjC,CAAYA,MAAQ,KAgBb,MAAMiE,EAOT5vB,YAAYmB,EAAsBH,GA0BlCR,KAAA4wB,QAAkC,GAClC5wB,KAAA6wB,MAA+B,GAwBvB7wB,KAAA8wB,aAAe,CAACzS,IACpBA,EAAMgP,kBACC,IAGDrtB,KAAAqG,KAAOvG,OAAAwP,EAAA,EAAAxP,CAAS,EAAEmI,eACjByH,EAAA,sBAAMzH,UAAWA,EAAWzH,SAAUR,KAAK8wB,cAC7C9wB,KAAKowB,MAAMhoB,IAAIb,GAAKA,EAAE+a,YAzD3B,IAAIjhB,OAACA,EAAMM,KAAEA,EAAIhC,GAAEA,EAAEC,IAAEA,EAAGgC,OAAEA,EAAMZ,KAAEA,EAAIC,cAAEA,EAAaC,cAAEA,EAAaC,eAAEA,EAAcC,kBAAEA,EAAiBV,KAAEA,GAAQC,EACnHX,KAAKqB,OAASA,EACdrB,KAAK2B,KAAOA,EACZ3B,KAAKL,GAAKA,OACM4B,IAAZvB,KAAKL,KAAkBK,KAAKiwB,UAAYjwB,KAAKL,GAAGqC,OACpDhC,KAAKJ,IAAMA,EACXI,KAAK4B,OAASA,EACd5B,KAAKgB,KAAOA,EACZhB,KAAKiB,cAAgBA,EACrBjB,KAAKkB,cAAgBA,EACrBlB,KAAKmB,eAAiBA,EACtBnB,KAAKoB,kBAAoBA,GAAqBsO,EAAA,2BAAOA,EAAA,cAACiT,EAAA,GAAE,CAACziB,KAAK,0BAClCF,KAAKU,UAAhBa,IAAbf,EAAoC2qB,EAASD,SAChCxqB,EACjBV,KAAK+wB,kBACL/wB,KAAKgxB,WAAWrwB,EAASH,GACzBR,KAAKQ,SAAWA,EAmBZhB,WAAWmB,EAAsBH,GACrCR,KAAKixB,SAAW,GAChB,IAAIC,EAAe,IAAInB,EAAa/vB,KAAMW,EAASH,GACnDR,KAAKowB,MAAQc,EAAaC,QAC1B,IAAK,IAAIC,KAAQpxB,KAAKowB,MAAO,CACzBpwB,KAAKixB,SAASG,EAAKzqB,KAAOyqB,EAC1B,IAAIR,EAAUQ,EAAKC,aACnB,QAAgB9vB,IAAZqvB,EAAuB,IAAK,IAAIU,KAAKV,EAAS5wB,KAAK4wB,QAAQU,EAAEpxB,MAAQoxB,EACzE,IAAIvI,EAAOqI,EAAKG,eACHhwB,IAATwnB,IAAoB/oB,KAAK6wB,MAAM9H,EAAK7oB,MAAQ6oB,GAChD,IAAIG,EAAUkI,EAAKI,kBACHjwB,IAAZ2nB,IAAuBlpB,KAAKkpB,QAAUA,IAelD1pB,QAAQU,GACJ,OAAOF,KAAKixB,SAAS/wB,GAGzBV,gBACI,QAAuB+B,IAAnBvB,KAAKiwB,UAAyB,OAClC,IAAIxvB,EAAST,KAAKS,OAClB,IAAK,IAAIyG,KAAKlH,KAAKiwB,UAAW,CAC1B,IAAInpB,EAAO9G,KAAKiwB,UAAU/oB,GACN,oBAATJ,IACXrG,EAAOyG,GAAKJ,EAAK1D,KAAK3C,KAIxBjB,sDACoB+B,IAAlBvB,KAAKQ,iBACHR,KAAKQ,cAGfhB,YACI,IAAIqB,EAAU,GACVJ,EAAST,KAAKS,OAClB,IAAK,IAAI6wB,KAAKtxB,KAAKqB,OAAQ,CACvB,IAAInB,KAACA,GAAQoxB,EACT/pB,EAAI9G,EAAOP,GACfW,EAAIX,GAAe,OAANqH,GAA2B,kBAANA,EAAiBA,EAAEjE,GAAKiE,EAE9D,QAAkBhG,IAAdvB,KAAK2B,KACL,IAAK,IAAII,KAAO/B,KAAK2B,KAAM,CACvB,IAAIzB,KAACA,EAAImB,OAAEA,EAAMiC,GAAEA,EAAEwU,MAAEA,GAAS/V,EAC5BssB,EAAOxtB,EAAIX,GAAQ,GACnBuxB,EAAOzxB,KAAK6wB,MAAM3wB,GAAMmuB,KAC5B,IAAK,IAAIqD,KAAOD,EAAM,CAClB,IAAI3qB,EAAO,QACAvF,IAAP+B,IAAkBwD,EAAKxD,GAAMouB,EAAIpuB,SACvB/B,IAAVuW,IAAqBhR,EAAKgR,GAAS4Z,EAAI5Z,IAC3C,IAAK,IAAIwZ,KAAKjwB,EAAQ,CAClB,IAAKnB,KAAKyxB,GAAML,EACZ/pB,EAAImqB,EAAIC,GACZ7qB,EAAK6qB,GAAa,OAANpqB,GAA2B,kBAANA,EAAiBA,EAAEjE,GAAKiE,EAE7D8mB,EAAK7nB,KAAKM,IAItB,OAAOjG,EAGXotB,gBACI,IAAIptB,EAAU,GACVJ,EAAST,KAAKS,OAClB,IAAK,IAAI6wB,KAAKtxB,KAAKqB,OAAQ,CACvB,IAAInB,KAACA,EAAIiC,MAAEA,GAASmvB,EAChB/pB,EAAI9G,EAAOP,GACfW,EAAIX,QAAmBqB,IAAVY,GAAoC,kBAANoF,EAAiBA,EAAIpF,EAAM0tB,MAAMtoB,GAEhF,QAAkBhG,IAAdvB,KAAK2B,KAAoB,OAAOd,EACpC,IAAK,IAAIkB,KAAO/B,KAAK2B,KAAM,CACvB,IAAIzB,KAACA,EAAImB,OAAEA,EAAMiC,GAAEA,EAAEwU,MAAEA,GAAS/V,EAC5BssB,EAAOxtB,EAAIX,GAAQF,KAAK6wB,MAAM3wB,GAAMmuB,KAAKtc,QAC7C,IAAK,IAAI2f,KAAOrD,EACZ,IAAK,IAAIiD,KAAKjwB,EAAQ,CAClB,IAAKnB,KAAKyxB,EAAExvB,MAAEA,GAASmvB,EACnB/pB,EAAImqB,EAAIC,GACZD,EAAIC,QAAiBpwB,IAAVY,GAAoC,kBAANoF,EAAiBA,EAAIpF,EAAM0tB,MAAMtoB,IAItF,OAAO1G,EAGXrB,UAAUoyB,GACN,QAAmBrwB,IAAfqwB,EAEA,YADA5xB,KAAKmjB,QAGT,IAAI1iB,EAAST,KAAKS,OACdwqB,EAASjrB,KAAKirB,OAClB,IAAK,IAAIqG,KAAKtxB,KAAKqB,OAAQ,CACvB,IAAIswB,EAAKL,EAAEpxB,KACX+qB,EAAO0G,QAAMpwB,EACb,IAAIgG,EAAKqqB,EAAWD,GACpBlxB,EAAOkxB,GAAMpqB,EAGjB,IAAK,IAAIL,KAAKlH,KAAK6wB,MAAO,CACtB,IAAIxC,EAAOuD,EAAW1qB,GACtB,QAAa3F,IAAT8sB,EAAoB,SACxB,IAAIwD,EAAUpxB,EAAOyG,GACrB2qB,EAAQtrB,QACRsrB,EAAQrrB,QAAQ6nB,IAId/E,WACN,IAAK,IAAIpiB,KAAKlH,KAAK4wB,QACf,IAA6B,IAAzB5wB,KAAK4wB,QAAQ1pB,GAAGoiB,KAAgB,OAAO,EAE/C,OAAO,EAEX9pB,QACI,IAAIiB,EAAST,KAAKS,OACdwqB,EAASjrB,KAAKirB,OAClB,IAAK,IAAIqG,KAAKtxB,KAAKqB,OAAQ,CACvB,IAAIswB,EAAKL,EAAEpxB,KAEXO,EAAOkxB,GAAM,KACb1G,EAAO0G,QAAMpwB,EAEjB,IAAK,IAAI2F,KAAKlH,KAAK4wB,QAAS,CACxB,IAAIkB,EAAO9xB,KAAK4wB,QAAQ1pB,QAEb3F,IADFuwB,EAAK5xB,MAGd4xB,EAAK9F,SAAS,MAElB,IAAK,IAAI9kB,KAAKlH,KAAK6wB,MAAO,CACX7wB,KAAK6wB,MAAM3pB,GACjBic,SAIb3jB,SAASuyB,GACL,OAAO/xB,KAAKS,OAAOsxB,GAEvBvyB,SAASuyB,EAAmB7iB,GAAclP,KAAKS,OAAOsxB,GAAa7iB,EAEnE1P,SAASuyB,EAAkB7rB,GAAelG,KAAKirB,OAAO8G,GAAa7rB,EAE3D1G,iBAAiB6B,GACrB,IAAIkG,EAAuB,CACvByqB,mBAAoB,SAASC,GACzB,OAAOjyB,KAAKiyB,KAGpB,IAAK,IAAIX,KAAKjwB,EAAQ,CAElBkG,EADS+pB,EAAEpxB,MACH,KAEZ,OAAOqH,EAEH/H,wBACJ,IAAI+H,EAAuBvH,KAAKkyB,iBAAiBlyB,KAAKqB,QACtD,QAAkBE,IAAdvB,KAAK2B,KACL,IAAK,IAAII,KAAO/B,KAAK2B,KACjB4F,EAAExF,EAAI7B,MAAQupB,EAAA,EAAW0I,MAAM,GAAI,CAACC,MAAK,IAIjD,OADUtyB,OAAA2pB,EAAA,EAAA3pB,CAAWyH,GAGjB/H,kBACJQ,KAAKS,OAAST,KAAKqyB,wBACnBryB,KAAKirB,OAASnrB,OAAA2pB,EAAA,EAAA3pB,CAAWE,KAAKkyB,iBAAiBlyB,KAAKqB,SAGxD7B,OAAOyI,EAAmB,QACtB,OAAOyH,EAAA,cAAC1P,KAAKqG,KAAI,CAAC4B,UAAWA,KA/DvBqqB,EAAA,CAAT7I,EAAA,4BC1MLprB,EAAAC,EAAAC,EAAA,sBAAA4sB,IAAA9sB,EAAAC,EAAAC,EAAA,sBAAA6wB,kWCkBO,MAAMmD,EAOT/yB,YAAYgzB,EAAmBC,EAAiBC,EAAiB/yB,GAQzDK,KAAA8M,UAAY,WACAvL,IAAZvB,KAAKL,IAAkBK,KAAKL,GAAGmN,cAG/B9M,KAAA+M,QAAU,EAACxC,EAAasD,UACZtM,IAAZvB,KAAKL,IAAkBK,KAAKL,GAAGoN,eACpBxL,IAAXsM,GAAsBA,EAAO,kCAAgBtD,KAG7CvK,KAAA2yB,UAAY,CAAOzsB,GAAoBvD,EAAA3C,UAAA,0BAC3BuB,IAAZvB,KAAKL,WAAwBK,KAAKL,GAAGgzB,UAAUzsB,OAjBnDlG,KAAKwyB,SAAWA,EAChBxyB,KAAKyyB,QAAUA,EACfzyB,KAAK0yB,SAAWA,EAChB1yB,KAAKL,GAAKA,EACVK,KAAKshB,SAA4B,IAAlBsR,EAAA,EAAwB,IAAO,IAgBlDpzB,OACIQ,KAAKyX,KAAK,GAAI,IAGZjY,IAAI+K,EAAamN,2CACnB,GAAIA,EAAQ,CACR,IAAImb,EAAO/yB,OAAO+yB,KAAKnb,GACvB,GAAImb,EAAKjtB,OAAS,EAAG,CACjB,IAAI0U,EAAI,IACR,IAAK,IAAIwY,KAAKD,EAAM,MAENtxB,IADFmW,EAAOob,KAEfvoB,GAAO+P,EAAIwY,EAAI,IAAMpb,EAAOob,GAC5BxY,EAAI,OAIhB,IAAI3Z,EAAUX,KAAK+yB,eAEnB,OADApyB,EAAQ6T,OAAS,YACJxU,KAAKgzB,WAAWzoB,EAAK5J,KAGhCnB,KAAK+K,EAAamN,2CACpB,IAAI/W,EAAUX,KAAK+yB,eAGnB,OAFApyB,EAAQ6T,OAAS,OACjB7T,EAAQ8T,KAAO1I,KAAKC,UAAU0L,SACjB1X,KAAKgzB,WAAWzoB,EAAK5J,KAGhCnB,IAAI+K,EAAamN,2CACnB,IAAI/W,EAAUX,KAAK+yB,eAGnB,OAFApyB,EAAQ6T,OAAS,MACjB7T,EAAQ8T,KAAO1I,KAAKC,UAAU0L,SACjB1X,KAAKgzB,WAAWzoB,EAAK5J,KAGhCnB,OAAO+K,EAAamN,2CACtB,IAAI/W,EAAUX,KAAK+yB,eAGnB,OAFApyB,EAAQ6T,OAAS,SACjB7T,EAAQ8T,KAAO1I,KAAKC,UAAU0L,SACjB1X,KAAKgzB,WAAWzoB,EAAK5J,KAEhCnB,MAAM+K,EAAa5J,EAAciN,EAA2BC,2CAC9D,IAAI+P,EAAO5d,KACXA,KAAK8M,YACL,IAAIgM,EAAOvO,EACX,SAAS0oB,EAAWhtB,GAChB,MAAO,CACHiR,QAAS0G,EACTrT,IAAKuO,EACLnY,QAASA,EACTiN,QAASA,EACTC,OAAQA,EACR3H,MAAOD,GAGf,IACI/C,QAAQC,IAAI,QAASxC,EAAQ6T,OAAQsE,GACrC,IAAIoa,EAAiBntB,WAAW,IAAM6X,EAAK7Q,QAAQxC,EAAKsD,GAAS7N,KAAKshB,SAClE1hB,QAAYgK,MAAMupB,UAAUra,GAAOnY,GACvC,IAAe,IAAXf,EAAIwzB,GAIJ,MAHAptB,aAAaktB,GACbtV,EAAK7Q,UACL7J,QAAQC,IAAI,gBAAiBvD,EAAIyzB,YAC3BzzB,EAAIyzB,WAEd,IAAIC,EAAK1zB,EAAIugB,QAAQhX,IAAI,gBACzB,GAAImqB,GAAMA,EAAGjS,QAAQ,SAAS,EAC1B,OAAOzhB,EAAIiK,OAAOyC,KAAWinB,GAAU5wB,EAAA3C,UAAA,qBAGnC,GAFAgG,aAAaktB,GACbtV,EAAK7Q,WACc,IAAfwmB,EAAQH,GACR,OAAOxlB,EAAQ2lB,EAAQ3zB,UAEL2B,IAAlBgyB,EAAQrtB,YACF0X,EAAK+U,UAAUM,EAAW,gCAG1BrV,EAAK+U,UAAUM,EAAWM,EAAQrtB,QACxC2H,EAAO0lB,EAAQrtB,WAGpBsb,MAAYtb,GAAQvD,EAAA3C,UAAA,2BACb4d,EAAK+U,UAAUM,EAAW/sB,EAAM4B,aAGzC,CACD,IAAIyZ,QAAa3hB,EAAI2hB,OACrBvb,aAAaktB,GACbtV,EAAK7Q,UACLa,EAAQ2T,IAGhB,MAAMrb,GACF,GAAqB,kBAAVA,IACgD,IAAnDA,EAAMstB,cAAcroB,WAAW,gBAE/B,YADAsoB,EAAA,EAAI/mB,eAIN1M,KAAK2yB,UAAUM,EAAW/sB,EAAM4B,aAIhCtI,WAAW+K,EAAa5J,2CAClC,IAAIsR,EAAIjS,KAAKyyB,QAAUloB,EACvB,OAAsB,IAAlBvK,KAAKwyB,eAAuCjxB,IAAlBvB,KAAK0yB,UAA0B5yB,OAAA4zB,EAAA,EAAA5zB,SAC5CA,OAAA4zB,EAAA,EAAA5zB,CAAgBmS,EAAGtR,EAAQ6T,OAAQ7T,EAAQ8T,YAC/C,IAAI9G,QAAa,CAAOC,EAASC,IAAUlL,EAAA3C,UAAA,2BAC9CA,KAAK4J,MAAMqI,EAAGtR,EAASiN,EAASC,QAIxCrO,UAAU+K,EAAYiK,EAAeC,2CACvC,IAAI9T,EAAUX,KAAK+yB,eAGnB,OAFApyB,EAAQ6T,OAASA,EACjB7T,EAAQ8T,KAAOA,QACF,IAAI9G,QAAa,CAAOC,EAASC,IAAUlL,EAAA3C,UAAA,2BAC9CA,KAAK4J,MAAMW,EAAK5J,EAASiN,EAASC,QAIxCrO,eACJ,IAAIuJ,SAACA,EAAQC,QAAEA,GAAWyqB,EAAA,EACtBtT,EAAU,IAAIwT,QAElBxT,EAAQyT,OAAO,eAAgB,kCAC/B,IAAIhrB,EAAOG,EAUX,OATIC,IAASJ,GAAQ,IAAMI,GAC3BmX,EAAQyT,OAAO,kBAAmBhrB,GAC9B5I,KAAK0yB,UACLvS,EAAQyT,OAAO,gBAAiB5zB,KAAK0yB,UAE3B,CACVvS,QAASA,oCCpLrB9hB,EAAAC,EAAAC,EAAA,sBAAAs1B,IAAAx1B,EAAAC,EAAAC,EAAA,sBAAAu1B,IAAA,IAAAC,EAAA11B,EAAA,GAAA4V,EAAA5V,EAAA+gB,EAAA2U,GAUO,MAAMF,EAA4C,CACrDjrB,UAAMrH,EACNsH,cAAUtH,GAyBP,SAASuyB,EAA+Bl0B,GAC3C,IAAIgJ,KAACA,EAAIC,SAAEA,GAAYgrB,EACnBhzB,EAAQ,GACZ,QAAYU,IAAR3B,EAAmB,OAAOiB,EAC9BoT,EAAAZ,EAAE8U,MAAMtnB,EAAKjB,EAAIo0B,GACjB,IAAIC,EAAIr0B,EAAIgJ,GACZ,QAAUrH,IAAN0yB,EAAiB,OAAOpzB,EAC5BoT,EAAAZ,EAAE8U,MAAMtnB,EAAKozB,EAAED,GACf,IAAI11B,EAAI21B,EAAEprB,GACV,QAAUtH,IAANjD,EAAiB,OAAOuC,EAC5BoT,EAAAZ,EAAE8U,MAAMtnB,EAAKvC,GACb,IAAIoB,OAACA,GAAUmB,EACf,QAAeU,IAAX7B,EACA,IAAK,IAAIwH,KAAKxH,EACVA,EAAOwH,EAAEssB,eAAiB9zB,EAAOwH,GAGzC,OAAOrG,GAlCV,WACG,IAAI+H,EAAcC,EACdE,EAAW7E,UAAUgwB,WAAahwB,UAAUgwB,UAAU,IACtDhwB,UAAU6E,SAEd,GAAKA,EAIA,CACD,IAAI4I,EAAQ5I,EAAS6I,MAAM,KAC3BhJ,EAAO+I,EAAM,GACTA,EAAM/L,OAAS,IAAGiD,EAAW8I,EAAM,SANvC/I,EAAO,KACPC,EAAW,MAZZ,SAAuBD,EAAaC,GACvCgrB,EAAWjrB,KAAOA,EAClBirB,EAAWhrB,SAAWA,EAiBtBsrB,CAAcvrB,EAAMC,GAdxB,iCCpBA,IAAAurB,EAAA/1B,EAAA,IAAAA,EAAAC,EAAAC,EAAA,yBAAA61B,EAAA,IAAA/1B,EAAA,QAAAg2B,EAAAh2B,EAAA,IAAAA,EAAAC,EAAAC,EAAA,wBAAA81B,EAAA,IAAAh2B,EAAA,QAAAi2B,EAAAj2B,EAAA,IAAAA,EAAAC,EAAAC,EAAA,gCAAA+1B,EAAA,IAAAj2B,EAAA,QAAAk2B,EAAAl2B,EAAA,IAAAA,EAAAC,EAAAC,EAAA,mCAAAg2B,EAAA,QAAAC,EAAAn2B,EAAA,IAAAA,EAAAC,EAAAC,EAAA,yBAAAi2B,EAAA,IAAAn2B,EAAAC,EAAAC,EAAA,6BAAAi2B,EAAA,IAAAn2B,EAAA,IAAAA,EAAA,QAAAo2B,EAAAp2B,EAAA,GAAAA,EAAAC,EAAAC,EAAA,oCAAAk2B,EAAA,IAAAp2B,EAAA,QAAAq2B,EAAAr2B,EAAA,IAAAA,EAAAK,EAAAg2B,EAAA,UAAAr2B,EAAAC,EAAAC,EAAA,0BAAAm2B,EAAA,QAAAr2B,EAAAK,EAAAg2B,EAAA,iBAAAr2B,EAAAC,EAAAC,EAAA,iCAAAm2B,EAAA,eAAAr2B,EAAAK,EAAAg2B,EAAA,cAAAr2B,EAAAC,EAAAC,EAAA,8BAAAm2B,EAAA,YAAAr2B,EAAAK,EAAAg2B,EAAA,gBAAAr2B,EAAAC,EAAAC,EAAA,gCAAAm2B,EAAA,kBAAAC,EAAAt2B,EAAA,IAAAA,EAAAC,EAAAC,EAAA,iCAAAo2B,EAAA,IAAAt2B,EAAA,OAAAu2B,EAAAv2B,EAAA,IAAAA,EAAAC,EAAAC,EAAA,0BAAAq2B,EAAA,QAAAC,EAAAx2B,EAAA,IAAAA,EAAAC,EAAAC,EAAA,gCAAAs2B,EAAA,4XCSO,MAAeC,EAElBt1B,YAAYu1B,GACR/0B,KAAK+0B,SAAWA,EAEpBv1B,SACI,OAAOkQ,EAAA,qBAAKzH,UAAU,aACjBjI,KAAKg1B,iBAIJC,eAAwB,OAAO,EAC/BC,aAAsB,OAAO,EACvC11B,SACAA,eACAA,WAAWiB,IACXjB,SAASuyB,EAAkB7rB,IAC3B1G,cAAciB,IACdjB,OAAiC,OAAjBQ,KAAKm1B,YAAoBn1B,KAAKi1B,SACpCz1B,aARAgP,EAAA,CAATib,EAAA,gCACSjb,EAAA,CAATib,EAAA,8BAUE,MAAe2L,UAAgBN,EAWlCt1B,YAAYu1B,EAAmB7yB,EAAamzB,GACxCx1B,MAAMk1B,GACN/0B,KAAKkC,MAAQA,EACblC,KAAKq1B,KAAOA,EACZr1B,KAAK0qB,OACL1qB,KAAKs1B,WAEC91B,IAAI+1B,GACVv1B,KAAKu1B,QAAUA,EAET/1B,OACNQ,KAAK4qB,MAAQ,GACb,IAAII,EAAIhrB,KAAKkC,MAAM0oB,WACTrpB,IAANypB,KACyB,IAArBwK,MAAMC,QAAQzK,GAAahrB,KAAK4qB,MAAMpkB,QAASwkB,GAC9ChrB,KAAK4qB,MAAMpkB,KAAKwkB,IAGnBxrB,WACN,OAAOQ,KAAK0E,MAAQ,CAChB8mB,IAAKxrB,KAAKwrB,IAAIvmB,KAAKjF,MACnBE,KAAMF,KAAKkC,MAAMhC,MAGf+0B,eAAwB,YAAsB1zB,IAAfvB,KAAKkG,MACpCgvB,aAEN,YADyB3zB,IAAfvB,KAAKkP,OAAuBlP,KAAKkP,QAAUlP,KAAKkC,MAAMwzB,aAGpEl2B,aAAeQ,KAAKkP,WAAQ3N,EAC5B/B,QAAUQ,KAAK21B,cAAe31B,KAAK41B,aACnCp2B,cAAgBQ,KAAK61B,UAAOt0B,EAAWvB,KAAKkG,WAAQ3E,EACpD/B,WAAWiB,GACPA,EAAOT,KAAKkC,MAAMhC,MAAQF,KAAKkP,MAEnC1P,SAASuyB,EAAkB7rB,IAC3B1G,cAAciB,IACJjB,sBAA2B,OAAOQ,KAAKkP,MACvC1P,WACN,IACI,IAAI+H,EAAIvH,KAAK81B,sBACb,GAAI91B,KAAK4qB,MAAMhlB,OAAS,EAAG,CACvB,IAAI0jB,EACJ,IAAK,IAAIyM,KAAQ/1B,KAAK4qB,MAAO,CACzB1nB,QAAQC,IAAI,eAAgBoE,GAC5B,IAAItB,EAAM8vB,EAAKxuB,GAEf,GADArE,QAAQC,IAAI,uBAAwBoE,EAAGtB,IAC3B,IAARA,EACAjG,KAAKkG,WAAQ3E,EACb+nB,GAAO,OAEN,QAAY/nB,IAAR0E,EAKL,OAFAjG,KAAKkG,MAAQD,OACbjG,KAAK61B,MAAO,GAIpB71B,KAAK61B,KAAOvM,EAEhBtpB,KAAKkP,MAAQ3H,EAEjB,MAAO8E,GACHrM,KAAKkG,MAAQmG,EAAEvE,SAGvBtI,SACI,IAAI4f,EACJ,QAAkB7d,IAAdvB,KAAKq1B,KAAoB,CACzB,IAAIW,MAACA,GAASh2B,KAAKq1B,UACL9zB,IAAVy0B,IAAqB5W,EAAI1P,EAAA,uBAAOzH,UAAU,cAAc+tB,IAEhE,OAAOtmB,EAAA,qBAAKzH,UAAU,aACjBjI,KAAKg1B,gBACL5V,IA/EG5Q,EAAA,CAAXib,EAAA,8BACWjb,EAAA,CAAXib,EAAA,+BACWjb,EAAA,CAAXib,EAAA,+BA0BSjb,EAAA,CAATib,EAAA,gCACSjb,EAAA,CAATib,EAAA,8BC1DE,MAAMwM,UAAuBnB,EAChCt1B,YAAYkF,GACR7E,MAAM6E,GACN1E,KAAKk2B,WAAal2B,KAAKk2B,WAAWjxB,KAAKjF,MAEnCR,aACJ,IAAI22B,EAAUn2B,KAAK+0B,SAASrwB,MAAMyxB,aAClB50B,IAAZ40B,GAEJA,EADan2B,KAAK+0B,SAASqB,cAG/B52B,gBACI0D,QAAQC,IAAI,yBACZ,IAAIkzB,EAAUr2B,KAAK+0B,SAASsB,QACxBpB,EAAWj1B,KAAK+0B,SAASE,SACzBvwB,EAAQ1E,KAAK+0B,SAASrwB,MAC1BxB,QAAQC,IAAI,+CAAgDkzB,EAASpB,GACrE,IACIqB,GADAC,aAACA,EAAYC,YAAEA,EAAWL,QAAEA,GAAWzxB,EAO3C,YALoBnD,IAAhBi1B,IACAF,EAAW5mB,EAAA,wBAAQzH,UAAU,+BAA+BwE,QAASzM,KAAKk2B,YACrEM,IAGF9mB,EAAA,qBAAKzH,UAAU,gCAClByH,EAAA,wBACIzH,UAAU,kBACVJ,KAAK,SACL0hB,SAAU8M,GAAWpB,GACpBsB,GAAgB,gBAEpBD,sBC/Bb,MAAMG,EAAc,mDAEb,MAAeC,UAAqBtB,EAC7B51B,OACNK,MAAM6qB,QACsB,IAAxB1qB,KAAKkC,MAAM2oB,UACX7qB,KAAK4qB,MAAMpkB,KAAMe,GACL,OAAJA,QAAgBhG,IAAJgG,GAAiD,IAA/BA,EAAasiB,OAAOjkB,QAAqB6wB,GAO7Ej3B,sBAA2B,OAAOQ,KAAK22B,WAAW32B,KAAKu1B,QAAQrmB,OAE/D1P,WACNK,MAAMy1B,WACNsB,EAAA,OAAS52B,KAAK0E,MAAO,CACjBknB,OAAQ5rB,KAAK4rB,OAAO3mB,KAAKjF,MACzB2rB,QAAS3rB,KAAK2rB,QAAQ1mB,KAAKjF,MAC3B8rB,SAAU9rB,KAAK8rB,SAAS7mB,KAAKjF,QAEjC,IAAIq1B,EAAOr1B,KAAKq1B,KAMhB,YALa9zB,IAAT8zB,GACAuB,EAAA,OAAS52B,KAAK0E,MAAO,CACjBke,YAAayS,EAAKzS,cAGnB5iB,KAAK0E,MAENlF,WAAW0P,GAAoB,OAAOA,EACxC1P,SAEJQ,KAAKm1B,WAED31B,WACJ0D,QAAQC,IAAI,YACZnD,KAAKm1B,WAED31B,UACJQ,KAAK21B,cAICn2B,YACN,OAAOq3B,EAAW,CACdC,gBAAgB,EAChBC,eAA6B,IAAd/2B,KAAK61B,KACpBmB,kBAA6Bz1B,IAAfvB,KAAKkG,MACnB+wB,gBAA2B11B,IAAfvB,KAAKkG,QAAqC,IAAdlG,KAAK61B,OAG3Cr2B,cACN,OAAOkQ,EAAA,sBAAA5P,OAAAqI,OAAA,CAAOF,UAAWjI,KAAKiI,aAAiBjI,KAAK0E,QAE9ClF,IAAI+1B,GACV11B,MAAM2rB,IAAI+J,GACNA,IACAA,EAAQrmB,WAAuB3N,IAAfvB,KAAKkP,MAAqB,GAAGlP,KAAKkP,OAGhD1P,cAEN,YAAmB+B,IAAfvB,KAAKkG,MAA4B,KAC9BwJ,EAAA,qBAAKzH,UAAU,oBAAoBjI,KAAKkG,OAEnD1G,aAAeK,MAAM+1B,aAAc51B,KAAKu1B,QAAQrmB,MAAQ,GACxD1P,SAASuyB,EAAkB7rB,GACnBlG,KAAKkC,MAAMhC,OAAS6xB,IAAW/xB,KAAKkG,MAAQA,GAEpD1G,cAAciB,GACV,IAAI8G,EAAI9G,EAAOT,KAAKkC,MAAMhC,WAChBqB,IAANgG,IAEJvH,KAAKkP,MAAQ3H,GAEjB/H,gBACI,OAAOkQ,EAAA,cAACA,EAAA,SAAc,KACjB1P,KAAKk3B,cACLl3B,KAAKurB,gBCpFX,MAAM4L,UAAsBT,EAErBl3B,WACN,IAAIyH,EAAIpH,MAAMy1B,WAKd,OAJAsB,EAAA,OAAS3vB,EAAG,CACRY,KAAM,OACNykB,UAAWtsB,KAAKkC,MAAMoqB,YAEnBrlB,EAEDzH,WAAW0P,GACjB,QAAc3N,IAAV2N,GACwB,IAAxBA,EAAM2a,OAAOjkB,OACjB,OAAOsJ,GCbf,MAAMkoB,EAAmB,iCACnBC,EAAS,2BACTC,EAAS,2BAETzK,EAAc,GACdC,EAAc,GCNb,MAAMyK,UAAuBnC,EAChC51B,gBACI,OAAOkQ,EAAA,qBAAKzH,UAAU,0BAClByH,EAAA,qBAAKzH,UAAU,sBAAsBuvB,KAAK,4CACV9nB,EAAA,mCACxB3D,KAAKC,UAAUhM,KAAKkC,0BAAuBwN,EAAA,kCAC5C3D,KAAKC,UAAUhM,KAAKq1B,yBAAsB3lB,EAAA,4BAMtD,MAAM+nB,UAAqB3C,EAE9Bt1B,YAAYu1B,EAAmBQ,GAC3B11B,MAAMk1B,GACN/0B,KAAKu1B,QAAUA,EAEnB/1B,gBACI,OAAOkQ,EAAA,qBAAKzH,UAAU,0BACjBjI,KAAKu1B,mRCfX,MAAMmC,UAAsBtC,EAAnC51B,kCAIYQ,KAAAyM,QAAU,KAAW9J,EAAA3C,UAAA,qBACzB,IAAI23B,KAACA,EAAIC,WAAEA,GAAc53B,KAAKq1B,KAC1BvuB,QAAa6wB,EAAK33B,KAAKq1B,KAAMr1B,KAAK+0B,SAASrwB,MAAO1E,KAAK+0B,SAASqB,cACpE,QAAa70B,IAATuF,EAEA,YADA9G,KAAKkP,WAAQ3N,GAGjB,QAAmBA,IAAfq2B,EAEA,YADA53B,KAAKkP,MAAQpI,EAAKxD,IAGtB,IAAIA,GAACA,EAAEkmB,QAAEA,GAAWoO,EAAW9wB,GAC/B9G,KAAKkP,MAAQ5L,EACbtD,KAAKwpB,QAAUA,KAEnBxpB,KAAA63B,SAAW,CAAC3oB,IACRlP,KAAKkP,MAAQA,EAAM5L,KAEvB9D,cAAciB,GACV,IAAI8G,EAAI9G,EAAOT,KAAKkC,MAAMhC,MAC1BF,KAAKkP,MAAQ3H,EAET/H,iBACJ,IAAIs4B,WAACA,EAAUF,WAAEA,EAAUG,YAAEA,GAAe/3B,KAAKq1B,KACjD,QAAmB9zB,IAAfvB,KAAKkP,MACL,OAAO6oB,GAAe,uBAE1B,QAAqBx2B,IAAjBvB,KAAKwpB,QACL,OAAOxpB,KAAKwpB,QAEhB,QAAmBjoB,IAAfu2B,QACmBv2B,IAAfq2B,EAA0B,CAC1B,IAAI9wB,EAAOgxB,EAAW93B,KAAKkP,OAC3B,GAAIpI,EAAM,CACN,IAAIjG,EAAM+2B,EAAW9wB,GACrB,QAAYvF,IAARV,EAAmB,OAAOA,EAAI2oB,SAI9C,OAAOwO,OAAOh4B,KAAKkP,OAgBvB1P,gBACI,IAAIymB,KAACA,EAAIwF,MAAEA,GAASzrB,KAAKq1B,KACzB,YAAc9zB,IAAVkqB,EAEO/b,EAAA,qBAAKzH,UAAU,yEAClBwE,QAASzM,KAAKyM,SACbzM,KAAKi4B,kBAGPvoB,EAAA,qBAAKzH,UAAU,wBAClByH,EAAA,cAAC+b,EAAMyM,UAAS,CAAC50B,GAAItD,KAAKkP,MACtBvP,GAAIsmB,oUApEJkS,CAAA,CAAX1O,EAAA,iCCFE,MAAM2O,UAAwBhD,EAIjC51B,YAAYu1B,EAAmB7yB,EAAamzB,GACxCx1B,MAAMk1B,EAAU7yB,EAAOmzB,GACvBr1B,KAAKq4B,YAAcr4B,KAAKq4B,YAAYpzB,KAAKjF,MAmB7CR,YAAY8D,GACRtD,KAAKkP,MAAQ5L,EAAGA,GAEpB9D,cAAciB,GACV,IAAI8G,EAAI9G,EAAOT,KAAKkC,MAAMhC,MAC1BF,KAAKkP,MAAQ3H,EAET/H,eAEJ,OAAOkQ,EAAA,cAAC1P,KAAKq1B,KAAK5J,MAAMyM,UAASp4B,OAAAqI,OAAA,GACzBnI,KAAKq1B,KAAI,CACb/xB,GAAItD,KAAKkP,MAITopB,aAAc,IAAIt4B,KAAK+0B,SAASqB,aAChCiC,YAAar4B,KAAKq4B,eAE1B74B,gBACI,OAAOkQ,EAAA,qBAAKzH,UAAU,wBACjBjI,KAAKwC,+UA1CF+1B,CAAA,CAAX9O,EAAA,iTCFE,MAAM+O,UAAoBpD,EAAjC51B,kCAIYQ,KAAAyM,QAAU,KAAYgsB,EAAAz4B,UAAA,qBAC1B,IAAI23B,KAACA,EAAIC,WAAEA,GAAc53B,KAAKq1B,KAC1BvuB,QAAa6wB,EAAK33B,KAAKq1B,KAAMr1B,KAAK+0B,SAASrwB,MAAO1E,KAAK+0B,SAASqB,cACpE,QAAa70B,IAATuF,EAEA,YADA9G,KAAKkP,WAAQ3N,GAGjB,IAAI+B,GAACA,EAAEkmB,QAAEA,GAAWoO,EAAW9wB,GAC/B9G,KAAKkP,MAAQ5L,EACbtD,KAAKwpB,QAAUA,KA6CXxpB,KAAAqG,KAAOvG,OAAAwP,EAAA,EAAAxP,CAAS,KACpB,IAAIyC,GACCA,QAASm2B,GAAW14B,KAAKq1B,KAW9B,OATI9yB,OADehB,IAAfvB,KAAKkP,OAAsC,OAAflP,KAAKkP,MACvB,qBAOAQ,EAAA,cAACgpB,EAAO,CAACp1B,GAAItD,KAAKkP,QAEzBQ,EAAA,qBACHzH,UAAU,kFACVwE,QAASzM,KAAKyM,SACblK,KA3DT/C,cAAciB,GACV,IAAI8G,EAAI9G,EAAOT,KAAKkC,MAAMhC,MAC1BF,KAAKkP,MAAQ3H,EA4BjB/H,gBACI,OAAOkQ,EAAA,cAAC1P,KAAKqG,KAAI,qUA5CTsyB,CAAA,CAAXlP,EAAA,iCCZLprB,EAAAC,EAAAC,EAAA,sBAAAq6B,IAAAv6B,EAAAC,EAAAC,EAAA,sBAAA03B,IAwBO,MAAM2C,EAA8B,CAACl3B,EAAegwB,KAC3CA,EAAItxB,MAChB,YAA8BmB,IAAfmwB,EAAKmH,MAqDxB,SAA4Bn3B,EAAetB,EAAc04B,GACrD,OAAO,IAAIvB,EAAe71B,EAAMo3B,OAAiBv3B,GArDtCw3B,CAAmBr3B,EAAMtB,EAAOsxB,QACbnwB,IAAfmwB,EAAKxvB,MAwBxB,SAA4BR,EAAetB,EAAc44B,GACrD,IAAI92B,MAACA,EAAKmzB,KAAEA,GAAQ2D,EACpB,cAAe92B,GACX,IAAK,SACDA,EAAQ,CACJhC,KAAOgC,EACP2F,KAAM,UAEV,MACJ,IAAK,SACD,MACJ,QACI,OAAO,IAAI0vB,EAAe71B,EAAMQ,EAAOmzB,GAE/C,IAAI4D,EAAY/2B,EAAM2F,MAAQ,SAC9B,QAAatG,IAAT8zB,GAEA,QAAa9zB,KADb8zB,EAAO6D,EAAaD,IACI,OAAO,IAAI1B,EAAe71B,EAAMQ,EAAOmzB,QAE9D,QAAkB9zB,IAAd8zB,EAAKxtB,KAAoB,CAC9B,IAAIypB,EAAI4H,EAAaD,GACrB5D,EAAKxtB,UAAWtG,IAAJ+vB,EAAe,SAAWA,EAAEzpB,KAG5C,OAAO,IADOsxB,EAAS9D,EAAKxtB,MAAQoxB,IAAc1B,GAC/B71B,EAAMQ,EAAOmzB,GA/CrB+D,CAAmB13B,EAAMtB,EAAOsxB,GACpC,IAAI+F,EAAa/1B,EAAMgwB,EAAI2H,OAGhCF,EAAuF,CACzFG,OAAUnC,EACVoC,SNbG,cAA8BpC,EACvB33B,WACN,IAAIyH,EAAIpH,MAAMy1B,WAKd,OAJAsB,EAAA,OAAS3vB,EAAG,CACRY,KAAM,WACNykB,UAAWtsB,KAAKkC,MAAMoqB,YAEnBrlB,IMOXuyB,OLxBG,cAA4B9C,EAKrBl3B,OACNK,MAAM6qB,OACN1qB,KAAKktB,WAAa,GAClB,IAAI9C,IAACA,EAAGG,IAAEA,GAAOvqB,KAAKkC,MAYtB,YAXYX,IAAR6oB,GACApqB,KAAK4qB,MAAMpkB,KAAMe,IAAc,QAAUhG,IAANgG,EAAyB,QAAIA,EAAE6iB,IAAYiN,EAASjN,IACnFA,EAAM,GAAGpqB,KAAKktB,WAAW1mB,KAAKqmB,IAGlC7sB,KAAKktB,WAAW1mB,KAAKqmB,QAGbtrB,IAARgpB,GACAvqB,KAAK4qB,MAAMpkB,KAAMe,IAAc,QAAUhG,IAANgG,EAAyB,QAAIA,EAAEgjB,IAAY+M,EAAS/M,IAEnFvqB,KAAKkC,MAAM2F,MACf,IAAK,MACL,IAAK,SAAU7H,KAAKktB,WAAW1mB,KAAKsmB,IAIlCttB,WAAW0P,GACjB,QAAc3N,IAAV2N,EAAqB,OACzB,GAA4B,IAAxBA,EAAM2a,OAAOjkB,OAAc,OAC/B,IAAIwZ,EAAIvN,OAAO4nB,WAAWvqB,GAC1B,GAAI+a,MAAM7K,GAAI,MAAM,IAAIqC,MAAM2V,GAC9B,OAAOhY,EAGD5f,WACNK,MAAMy1B,WACNsB,EAAA,OAAS52B,KAAK0E,MAAO,CACjBmD,KAAM,SACN0G,KAAOvO,KAAKkC,MAAmBqM,KAC/Bge,WAAYvsB,KAAKusB,WAAWtnB,KAAKjF,QAIzCR,WAAW6e,GACP,IAAI2O,EAAK3O,EAAM4O,SACf,KAAW,IAAPD,GAAmB,IAAPA,GAAmB,KAAPA,GAAaA,GAAM,IAAMA,GAAM,IAC3D,QAAwBzrB,IAApBvB,KAAKktB,YACDltB,KAAKktB,WAAW7L,QAAQ2L,IAAO,EAC/B,OAAQA,GACJ,KAAKF,EAAa9sB,KAAKmtB,WAAY,MACnC,KAAKN,EAAa7sB,KAAKotB,WAAY/O,EAAMgP,sBAKrDhP,EAAMgP,iBAGF7tB,WACJ,IAAI+H,EAAIvH,KAAKu1B,QAAQrmB,MACb3H,EAAE8Z,QAAQ,MACT,IAAGrhB,KAAKu1B,QAAQrmB,MAAQ3H,EAAE2F,QAAQ,IAAK,KAE5C1N,WACJ,IAAI+H,EAAIvH,KAAKu1B,QAAQrmB,MACjBjI,EAAIM,EAAE8Z,QAAQ,KACN9Z,EAARN,GAAK,EAAOM,EAAE2F,QAAQ,IAAK,IACtB,IAAI3F,EACbvH,KAAKu1B,QAAQrmB,MAAQ3H,IK3CzBmyB,SC5BG,cAA2BtE,EAOpB51B,OACNK,MAAM6qB,OACN,IAAIiP,UAACA,EAASC,WAAEA,GAAc55B,KAAKkC,WACjBX,IAAdo4B,IAAyB35B,KAAK25B,UAAY,QAC3Bp4B,IAAfq4B,IAA0B55B,KAAK45B,WAAa,GAGpDp6B,WACIK,MAAMy1B,WACNsB,EAAA,OAAS52B,KAAK0E,MAAO,CACjBonB,SAAU9rB,KAAK8rB,SAAS7mB,KAAKjF,QAIrCR,aACIQ,KAAKu1B,QAAQsE,QAAU75B,KAAKkC,MAAMwzB,eAAiB11B,KAAK25B,UACxD35B,KAAKkP,MAAQlP,KAAK81B,sBAGtBt2B,cAAciB,GACV,IAAI8G,EAAI9G,EAAOT,KAAKkC,MAAMhC,WAChBqB,IAANgG,IACAA,EAAIvH,KAAKkC,MAAMwzB,cAQbl2B,sBAA4B,OAAOQ,KAAKu1B,QAAQsE,QAAS75B,KAAK25B,UAAU35B,KAAK45B,WAE/Ep6B,WACJQ,KAAKkP,MAAQlP,KAAK81B,sBAGtBt2B,gBACI,OAAOkQ,EAAA,qBAAKzH,UAAU,uBAClByH,EAAA,uBAAOzH,UAAU,gBACbyH,EAAA,uBAAOzH,UAAU,uCACbyH,EAAA,uBAAO7H,KAAK,WACR3H,KAAMF,KAAKkC,MAAMhC,KACjBsrB,IAAKxrB,KAAK0E,MAAM8mB,IAChBM,SAAU9rB,KAAK0E,MAAMonB,SACrB7jB,UAAU,yBACdyH,EAAA,sBAAMzH,UAAU,6BAChByH,EAAA,sBAAMzH,UAAU,8BAA8BjI,KAAKq1B,KAAKj1B,YDxBxE05B,SE7BG,cAA2B1E,EAE9B51B,gBACI,OAAOkQ,EAAA,qBAAKzH,UAAU,uBAClByH,EAAA,qBAAKzH,UAAU,gBAEXjI,KAAKq1B,KAAKhH,KAAKjmB,IAAI,CAACtB,EAAMuB,KACtB,IAAIyH,EAAGvI,EAMP,MALoB,kBAATT,EAAmBgJ,EAAIvI,EAAIT,GAElCgJ,EAAIhJ,EAAKya,KACTha,EAAIT,EAAKoI,OAENQ,EAAA,uBAAO/I,IAAK0B,EAAOJ,UAAU,oCAChCyH,EAAA,uBAAO7H,KAAK,QACR3H,KAAMF,KAAKkC,MAAMhC,KACjB+H,UAAU,yBACdyH,EAAA,sBAAMzH,UAAU,6BAChByH,EAAA,sBAAMzH,UAAU,8BAA8B6H,UFYlEzN,OG9BG,cAA4B+yB,EAC/B51B,YAAau1B,EAAmB7yB,EAAamzB,GACzCx1B,MAAMk1B,EAAU7yB,EAAOmzB,GACvBr1B,KAAKwrB,IAAMxrB,KAAKwrB,IAAIvmB,KAAKjF,MAInBR,sBACN,IAAIu6B,cAACA,EAAaC,gBAAEA,GAAmBh6B,KAAKu1B,QACxChuB,EAAQyyB,EAAgB,GAAG9qB,MAC/B,OAAQlP,KAAKkC,MAAM2F,MACf,IAAK,SAAUN,EAAIsK,OAAOtK,GAAI,MAC9B,IAAK,OAAQA,EAAI,IAAI6G,KAAK7G,GAAI,MAC9B,IAAK,OACgB,kBAANA,IACPA,EAAqC,SAA/BA,EAAaisB,eAI/B,OAAOjsB,EAEX/H,gBACI,IAAI6uB,KAACA,GAAQruB,KAAKq1B,KAEd10B,EAAiB,GAYrB,YAXYY,IAFFvB,KAAKq1B,KAAK7oB,SAGhB7L,EAAQ6F,KAAKkJ,EAAA,wBAAQ/I,KAAM,EAAGuI,WAAO3N,GAAS,uBAClDZ,EAAQ6F,QAAQ6nB,EAAKjmB,IAAI,CAACtB,EAAMuB,KAC5B,IAAIyH,EAAGvI,EAMP,MALoB,kBAATT,EAAmBgJ,EAAIvI,EAAIT,GAElCgJ,EAAIhJ,EAAKya,KACTha,EAAIT,EAAKoI,OAENQ,EAAA,wBAAQ/I,IAAK0B,EAAO6G,MAAO3H,GAAIuI,MAEnCJ,EAAA,qBAAKzH,UAAU,uBAClByH,EAAA,wBAAQxP,KAAMF,KAAKkC,MAAMhC,KAAM+H,UAAU,eAAeujB,IAAKxrB,KAAKwrB,KAC7D7qB,MHPbs5B,UAAWvC,EACXwC,YAAa9B,EACb+B,SIpCG,cAA8BzD,EAIvBl3B,WACN,IAAIyH,EAAIpH,MAAMy1B,YACVhJ,UAACA,GAAatsB,KAAKkC,OACnBuvB,KAACA,GAAQzxB,KAAKq1B,KAKlB,OAJAuB,EAAA,OAAS3vB,EAAG,CACRqlB,UAAWA,EACXmF,KAAMA,IAEHxqB,EAEDzH,cACN,OAAOkQ,EAAA,yBAAA5P,OAAAqI,OAAA,CAAUqjB,IAAK1b,IAAI9P,KAAK6T,GAAK/D,OAAUvO,IAAJuO,IAAeA,EAAEZ,MAAM,KAAKjH,UAAWjI,KAAKiI,aAAiBjI,KAAK0E,UJsBhHizB,KAAQa,GAENU,EAAqC,CACvCI,OAAU,CAACzxB,KAAK,UAChB2xB,OAAU,CAAC3xB,KAAK,UAChBuyB,IAAO,CAACvyB,KAAK,UACbwyB,IAAO,CAACxyB,KAAK,UACbyyB,KAAQ,CAACzyB,KAAK,2UK/ClB,MAAMqT,EAAM,KACNqf,EAAK,KAEJ,MAAeC,EAalBh7B,YAAYi7B,EAAmBv6B,EAAaw6B,GAYpC16B,KAAA26B,UAAsC,GAX1C36B,KAAKy6B,SAAWA,EAChBz6B,KAAKE,KAAOA,EACZF,KAAK06B,OAASA,EACd16B,KAAK46B,IAAM56B,KAAKE,KAAKmhB,QAAQ,MAAQ,EATzCwZ,YAAoB,OAAO76B,KAAK86B,OAAS96B,KAAKE,KAc9C66B,YAAuB,OAAO/6B,KAAKy6B,SAASlqB,MACtC/Q,qDAAc,OAAOQ,KAAKy6B,SAASlqB,QAGzC/Q,SAASuC,QACOR,IAARQ,IAAmBA,EAAM,KAC7B,IAAIlB,EAAMb,KAAK26B,UAAU54B,GACzB,QAAYR,IAARV,EAAmB,CACnB,IAAIQ,EACJ,GAAY,MAARU,EAAaV,EAASrB,KAAKqB,YAC1B,QAAuBE,IAAnBvB,KAAKsB,UAAyB,CACnC,IAAIA,EAAYtB,KAAKsB,UAAUgG,KAAKC,GAAKA,EAAErH,OAAS6B,QAClCR,IAAdD,IAAyBD,EAASC,EAAUD,aAE/C,QAAqBE,IAAjBvB,KAAKg7B,QAAuB,CACjC,IAAI15B,EAAYtB,KAAKg7B,QAAQ1zB,KAAKC,GAAKA,EAAErH,OAAS6B,QAChCR,IAAdD,IAAyBD,EAASC,EAAUD,QAEpD,QAAeE,IAAXF,EAAsB,MAAO,GACjCR,EAAM,GACN,IAAK,IAAIywB,KAAKjwB,EAAQR,EAAIywB,EAAEpxB,MAAQoxB,EACpCtxB,KAAK26B,UAAU54B,GAAOlB,EAE1B,OAAOA,EAGErB,qDACT,QAAoB+B,IAAhBvB,KAAKi7B,OAAsB,OAC/B,IAAIA,QAAej7B,KAAKy6B,SAASlqB,MAAM0qB,OAAOj7B,KAAKE,MACnDF,KAAKk7B,UAAUD,KAGZz7B,UAAUy7B,GACb,QAAe15B,IAAX05B,EAAsB,OAC1B,QAAoB15B,IAAhBvB,KAAKi7B,OAAsB,OAC/Bj7B,KAAKi7B,OAASA,EACd,IAAI/6B,KAACA,EAAImB,OAAEA,EAAMM,KAAEA,EAAIq5B,QAAEA,GAAWC,EAChC/6B,IAASF,KAAKE,OAAMF,KAAK86B,MAAQ56B,GACrCF,KAAKy6B,SAASU,eAAen7B,KAAKqB,OAASA,GAC3CrB,KAAKy6B,SAASW,mBAAmBp7B,KAAKsB,UAAYK,EAAMN,GACxDrB,KAAKy6B,SAASW,mBAAmBp7B,KAAKg7B,QAAUA,EAAS35B,GAM7D7B,kBACI,OAAOuM,KAAKC,UAAUhM,KAAKi7B,OAAQ,CAACt0B,EAAYuI,KAC5C,GAAY,UAARvI,EACJ,OAAOuI,GACR,GAGP1P,cAAc0C,GACV,IAAIC,MAACA,EAAK8jB,KAAEA,GAAQ/jB,EACpB,QAAaX,IAAT0kB,EACJ,YAAc1kB,IAAVY,EAA4BA,EACzBD,EAAMC,MAAQnC,KAAKy6B,SAASY,QAAQpV,OAAM1kB,GAGrD/B,aAAauyB,EAAkBuJ,GAC3B,QAAoB/5B,IAAhBvB,KAAKi7B,OAAsB,OAC/B,IAAI55B,OAACA,EAAMM,KAAEA,GAAQ3B,KAAKi7B,OACtBR,EAAWz6B,KAAKy6B,SACpB,SAASY,EAAQ1J,EAAW4J,GACxB,QAAiBh6B,IAAbg6B,EAAwB,OAC5B,IAAIjK,EAAIiK,EAASj0B,KAAKC,GAAKA,EAAErH,OAASyxB,GACtC,YAAUpwB,IAAN+vB,EACGmJ,EAASY,QAAQ/J,EAAErL,UAAM1kB,QADhC,EAGJ,IAAIowB,EAAKI,EAAUyB,cACnB,QAAgBjyB,IAAZ+5B,EAAuB,OAAOD,EAAQ1J,EAAItwB,GAC9C,QAAaE,IAATI,EAAoB,OACxB,IAAI65B,EAAKF,EAAQ9H,cACbzxB,EAAOJ,EAAqB2F,KAAKC,GAAKA,EAAErH,OAASs7B,GACrD,YAAYj6B,IAARQ,EACGs5B,EAAQ1J,EAAI5vB,EAAIV,aADvB,EAIM7B,YAAYkY,GAClB,IAAIhD,EAAS,GACTrT,EAASrB,KAAKqB,YACHE,IAAXF,GAAsBrB,KAAKy7B,kBAAkB/mB,EAAQrT,EAAQqW,GACjE,IAAI/V,EAAO3B,KAAKsB,UAChB,QAAaC,IAATI,EACA,IAAK,IAAII,KAAOJ,EAAM,CAClB,IAAIzB,KAACA,EAAImB,OAAEA,GAAUU,EAErB,QAAkBR,IADImW,EAAOxX,GACA,SAC7B,IAAIw7B,EAAY,GAChBhnB,EAAOxU,GAAQw7B,EACf,IAAK,IAAIC,KAAMjkB,EAAQ,CACnB,IAAIkkB,EAAY,GAChB57B,KAAKy7B,kBAAkBG,EAAWv6B,EAAQs6B,GAC1CD,EAAUl1B,KAAKo1B,IAI3B,OAAOlnB,EAGHlV,kBAAkBkV,EAAYrT,EAAgBqW,GAClD,IAAK,IAAIxV,KAASb,EAAQ,CACtB,IAEI6O,GAFAhQ,KAACA,GAAQgC,EACT5D,EAAIoZ,EAAOxX,GAEf,cAAe5B,GACX,QAAS4R,EAAM5R,EAAG,MAClB,IAAK,SACD,IAAI2nB,EAAO/jB,EAAMC,MACO+N,OAAX3O,IAAT0kB,EAA0B3nB,EAAEgF,GACrB2iB,EAAKnB,aAAaxmB,GAGrCoW,EAAOxU,GAAQgQ,GAIvB1Q,KAAKiU,GACD,IAAI5S,EAAe,GACfQ,EAASrB,KAAKqB,YACHE,IAAXF,GAAsBrB,KAAK67B,QAAQh7B,EAAKQ,EAAQoS,GACpD,IAAI9R,EAAO3B,KAAKsB,UAChB,QAAaC,IAATI,EACA,IAAK,IAAII,KAAOJ,EACZ3B,KAAK87B,QAAQj7B,EAAKkB,EAAIV,OAAQoS,EAAK1R,EAAI7B,OAG/C,OAAOW,EAAIwW,KAAK,IAGZ7X,OAAOkyB,EAASxvB,GACpB,IAAI5D,EAAIozB,EAAIxvB,EAAMhC,MAClB,cAAe5B,GACX,QAAS,OAAOA,EAChB,IAAK,SACD,IAAI2nB,EAAO/jB,EAAMC,MACjB,YAAaZ,IAAT0kB,EAA2B3nB,EAAEgF,GAC1B2iB,EAAKnB,aAAaxmB,GAC7B,IAAK,SACD,IAAI6I,EAAM7I,EAAEsH,OACRolB,EAAI,GAAI/jB,EAAI,EAChB,IAAK,IAAIC,EAAE,EAAEA,EAAEC,EAAID,IAAK,CAEpB,OADQ5I,EAAEy9B,WAAW70B,IAEjB,KAAK,EAAG8jB,GAAK1sB,EAAE09B,UAAU/0B,EAAGC,GAAK,MAAOD,EAAIC,EAAE,EAAG,MACjD,KAAK,GAAI8jB,GAAK1sB,EAAE09B,UAAU/0B,EAAGC,GAAK,MAAOD,EAAIC,EAAE,GAGvD,OAAO8jB,EAAI1sB,EAAE09B,UAAU/0B,GAC3B,IAAK,YAAa,MAAO,IAIzBzH,QAAQkV,EAAiBrT,EAAgBoS,GAC7C,IAAItM,EAAM9F,EAAOuE,OACjB,GAAY,IAARuB,EAAW,OACf,IAAItG,EAAM,GACVA,GAAOb,KAAKi8B,OAAOxoB,EAAMpS,EAAO,IAChC,IAAK,IAAI6F,EAAE,EAAEA,EAAEC,EAAID,IAAK,CACpB,IAAIoqB,EAAIjwB,EAAO6F,GACfrG,GAAOqa,EAAMlb,KAAKi8B,OAAOxoB,EAAM6d,GAEnC5c,EAAOlO,KAAK3F,EAAM05B,GAGd/6B,QAAQkV,EAAiBrT,EAAgBoS,GAC7C,QAAalS,IAATkS,EACA,IAAK,IAAIie,KAAOje,EACZzT,KAAK67B,QAAQnnB,EAAQrT,EAAQqwB,GAGrChd,EAAOlO,KAAK+zB,GAGhB/6B,YAAYiU,GACR,IAAI5S,EAAM,GAENQ,EAASrB,KAAKqB,OACd4F,EAAI,OACO1F,IAAXF,IAAsB4F,EAAIjH,KAAKk8B,UAAUr7B,EAAKQ,EAAQoS,EAAMxM,IAChE,IAAItF,EAAO3B,KAAKsB,UAChB,QAAaC,IAATI,EACA,IAAK,IAAII,KAAOJ,EACZsF,EAAIjH,KAAKm8B,UAAUt7B,EAAKkB,EAAK0R,EAAMxM,GAG3C,OAAOpG,EAGXrB,cAAciU,GACV,IAAI5S,EAAM,GAGNoG,EAAI,EAEJtF,EAAO3B,KAAKg7B,QAChB,QAAaz5B,IAATI,EACA,IAAK,IAAII,KAAOJ,EAEZsF,EAAIjH,KAAKm8B,UAAUt7B,EAAKkB,EAAK0R,EAAMxM,GAG3C,OAAOpG,EAGHrB,UAAUqB,EAASQ,EAAgBoS,EAAaxM,GACpD,IAAIm1B,EAAM,EAAGpP,EAAK,EAAG1S,EAAIrT,EAAGC,EAAI,EAAGC,EAAMsM,EAAK7N,OAAQy2B,EAAOh7B,EAAOuE,OACpE,KAAMqB,EAAEE,EAAIF,IAGR,GAFAm1B,EAAMpP,EAEK,KADXA,EAAKvZ,EAAKsoB,WAAW90B,IACP,CACV,IAAIqqB,EAAIjwB,EAAO6F,GACf,GAAY,IAARk1B,GACA,GAAIn1B,EAAEqT,EAAG,CACL,IAAI/S,EAAIkM,EAAKuoB,UAAU1hB,EAAGrT,GAC1BpG,EAAIywB,EAAEpxB,MAAQF,KAAKs8B,GAAGz7B,EAAK0G,EAAG+pB,SAIlCzwB,EAAIywB,EAAEpxB,MAAQ,KAIlB,GAFAoa,EAAIrT,EAAE,IACJC,GACKm1B,EAAM,WAEZ,GAAW,KAAPrP,EAAW,CAChB,IAAIsE,EAAIjwB,EAAO6F,GACf,GAAY,IAARk1B,GACA,GAAIn1B,EAAEqT,EAAG,CACL,IAAI/S,EAAIkM,EAAKuoB,UAAU1hB,EAAGrT,GAC1BpG,EAAIywB,EAAEpxB,MAAQF,KAAKs8B,GAAGz7B,EAAK0G,EAAG+pB,SAIlCzwB,EAAIywB,EAAEpxB,MAAQ,OAEhB+G,IACAC,EACF,MAGR,OAAOD,EAGHzH,GAAGqB,EAAS0G,EAAU+pB,GAC1B,OAAQA,EAAEzpB,MACN,QAAS,OAAON,EAChB,IAAK,WACL,IAAK,OACL,IAAK,OAED,OADW,IAAI6G,KAAKyD,OAAOtK,IAE/B,IAAK,UACL,IAAK,WACL,IAAK,MACL,IAAK,MAAO,OAAOsK,OAAOtK,GAC1B,IAAK,SACD,IAAIjE,EAAKuO,OAAOtK,IACZpF,MAACA,GAASmvB,EACd,YAAc/vB,IAAVY,EAA4BmB,GAChCnB,EAAMqB,MAAMF,GAAI,GACTnB,EAAM0tB,MAAMvsB,KAIvB9D,UAAUqB,EAASkB,EAAe0R,EAAaxM,GACnD,IAAIs1B,EAAa,GAAIp1B,EAAMsM,EAAK7N,QAC5B1F,KAACA,EAAImB,OAAEA,GAAUU,EACrB,KAAOkF,EAAEE,GAAK,CAEV,GAAW,KADFsM,EAAKsoB,WAAW90B,GACV,GACTA,EACF,MAEJ,IAAIiJ,EAAM,GACVqsB,EAAK/1B,KAAK0J,GACVjJ,EAAIjH,KAAKk8B,UAAUhsB,EAAK7O,EAAQoS,EAAMxM,GAG1C,OADApG,EAAIX,GAAQq8B,EACLt1B,oRClSf,MAAMu1B,EAAe,IACd,MAAeC,UAAajC,EAW/Bh7B,YAAYi7B,EAAmBv6B,EAAaw6B,GACxC76B,MAAM46B,EAAUv6B,EAAMw6B,GATlB16B,KAAA08B,MAAkB,GAClB18B,KAAA28B,WAAuB,GACvB38B,KAAA48B,MAAQnT,EAAA,EAAWrhB,IAAI,GAAI,CAACgqB,MAAM,IAQtCpyB,KAAK68B,eAXT18B,eAAyB,MAAO,OAgBxBX,eACJQ,KAAK88B,MAAQ,aACb,IAAIC,EAAY/8B,KAAK88B,MAAMC,UAC3Bj9B,OAAOk9B,eAAeD,EAAW,SAAU,CACvC7tB,MAAOlP,KACPi9B,UAAU,EACVC,YAAY,IAEhBp9B,OAAOk9B,eAAeD,EAAW,MAAO,CACpCG,YAAY,EACZ/zB,IAAK,WACD,UAAgB5H,IAAZvB,KAAKsD,IAAoBtD,KAAKsD,IAAI,GACtC,OAAOtD,KAAK4P,OAAOO,YAAYnQ,KAAKsD,OAG5Cy5B,EAAU/K,mBAAqB,SAASD,GAEpC,OADa/xB,KAAK4P,OACToiB,mBAAmBD,EAAW/xB,KAAKyZ,MAEhDsjB,EAAUI,OAAS,WACf,QAAoB57B,IAAhBvB,KAAK4P,OACL,OAAO5P,KAAK4P,OAAOwtB,cAAcp9B,KAAKsD,KAG9Cy5B,EAAUM,OAAS,WAAY,OAAOr9B,KAAKsD,IAE/C9D,MAAM8D,GACFtD,KAAKwD,MAAMF,GACX,IAAIzC,EAAY,IAAIb,KAAK88B,MAEzB,OADAj8B,EAAIyC,GAAKA,EACFzC,EAEXrB,iBACI,OAAOQ,KAAKy6B,SAASh7B,IAAIwQ,eAAejQ,MAE5CR,aAAasH,GACT,OAAOA,EAAK9G,KAAKs9B,QAGrB99B,UAAUy7B,GACNp7B,MAAMq7B,UAAUD,GAChB,IAAI33B,GAACA,EAAEkgB,OAAEA,GAAUyX,EACnBj7B,KAAKs9B,OAASh6B,EACdtD,KAAKwjB,OAASA,EACdxjB,KAAK6nB,WAAa7nB,KAAKi7B,OAAO3mB,KAG1B9U,WAAW8D,GACf,IAAI+E,EAAQrI,KAAK08B,MAAM7b,UAAUtZ,GAAKA,IAAMjE,GAC5CtD,KAAK08B,MAAMa,OAAOl1B,EAAO,GACzBrI,KAAK08B,MAAMl2B,KAAKlD,GAGpB9D,YAAY8D,GACR,IAAIk6B,EAEJ,cAAel6B,GACX,IAAK,SAAUk6B,EAAOl6B,EAAaA,GAAI,MACvC,IAAK,SAAUk6B,EAAMl6B,EAAc,MACnC,QAAS,OAEb,OAAOtD,KAAKo9B,cAAcI,GAE9Bh+B,cAAc8D,GACV,IAAIiE,EAAIvH,KAAK48B,MAAMzzB,IAAI7F,GAIvB,YAHmB/B,IAAfvB,KAAK2X,OAAoC,kBAANpQ,IACnCA,EAAE6mB,OAASpuB,KAAK2X,MAAMkY,MAAMtoB,EAAEoQ,QAE3BpQ,EAEX/H,mBAAmBuyB,EAAkBtY,GACjC,QAAYlY,IAARkY,EAAmB,OACvB,IAAI6X,EAAItxB,KAAKqB,OAAOiG,KAAKC,GAAKA,EAAErH,OAAS6xB,GACzC,QAAUxwB,IAAN+vB,EAAiB,OACrB,IAAI/pB,EAAIkS,EAAIsY,IACR5vB,MAACA,GAASmvB,EACd,YAAc/vB,IAAVY,EAA4BoF,EACzBpF,EAAMgO,YAAY5I,GAE7B/H,WAAW8D,GACPtD,KAAK48B,MAAMa,OAAOn6B,GAClB,IAAI+E,EAAQrI,KAAK08B,MAAM7b,UAAUtZ,GAAKA,IAAMjE,GAC5CtD,KAAK08B,MAAMa,OAAOl1B,EAAO,GACzBrI,KAAKwD,MAAMF,GAEf9D,MAAM8D,EAAWo6B,GACb,QAAWn8B,IAAP+B,GAA2B,IAAPA,IACH,IAAjBxD,OAAA69B,EAAA,SAAA79B,CAASwD,GACb,IAA2B,IAAvBtD,KAAK48B,MAAMgB,IAAIt6B,GAOnB,GAHAtD,KAAKy6B,SAASoD,YAAmB,IAARH,EAAa,GAAG,IAEzC19B,KAAK48B,MAAMn3B,IAAInC,EAAIA,GACftD,KAAK28B,WAAW9b,UAAUtZ,GAAKA,IAAMjE,IAAO,EAC5CtD,KAAK89B,WAAWx6B,OADpB,CAKA,GAAItD,KAAK08B,MAAM92B,QAAU42B,EAAc,CAEnC,IAAIxR,EAAIhrB,KAAK08B,MAAMqB,QACnB,GAAI/S,IAAM1nB,EAGN,YADAtD,KAAK08B,MAAMl2B,KAAKwkB,GAKpB,IAA0B,IAAtBhrB,KAAK48B,MAAMgB,IAAI5S,GAEfhrB,KAAK48B,MAAMa,OAAOzS,OAEjB,CAED,IAAI3iB,EAAQrI,KAAK28B,WAAW9b,UAAUtZ,GAAKA,IAAMyjB,GACjDhrB,KAAK28B,WAAWY,OAAOl1B,EAAO,IAGtCrI,KAAK28B,WAAWn2B,KAAKlD,GACrBtD,KAAK08B,MAAMl2B,KAAKlD,QAhCZtD,KAAK89B,WAAWx6B,GAmClB9D,QAAQU,EAAaoD,2CACPtD,KAAKy6B,SAASY,QAAQn7B,OAAMqB,GAClCiC,MAAMF,GAChB,IAAI06B,QAAgBh+B,KAAK+6B,MAAMiD,QAAQh+B,KAAKE,KAAMA,EAAMoD,GAExD,OADAtD,KAAKi+B,WAAWD,GACTA,IAEXx+B,WAAW0Q,GACP,QAAY3O,IAAR2O,EAAmB,OAAO,EAC9B,IAAI5M,EAAKtD,KAAK8kB,aAAa5U,GAC3B,QAAW3O,IAAP+B,EAAkB,OAAO,EAC7B,IAAI+E,EAAQrI,KAAK28B,WAAW9b,UAAUtZ,GAAKA,IAAMjE,GAgBjD,OAfI+E,GAAO,GAAGrI,KAAK28B,WAAWY,OAAOl1B,EAAO,GAE5CrI,KAAK48B,MAAMn3B,IAAInC,EAAI4M,IAaZ,EAED1Q,aAAa+P,GACnB,IAAK,IAAI+hB,KAAKtxB,KAAKqB,OAAQ,CACvB,IAAIc,MAACA,GAASmvB,OACA/vB,IAAVY,GACJA,EAAMqB,MAAM+L,EAAU+hB,EAAEpxB,QAG1BV,mDACF,GAA+B,IAA3BQ,KAAK28B,WAAW/2B,OAAc,OAClC,IAAI1F,EAAa6B,OACER,IAAfvB,KAAK2X,MACLzX,EAAOF,KAAKE,MAGZA,EAAOF,KAAK2X,MAAMzX,KAClB6B,EAAM/B,KAAKE,MAEf,IAAIg+B,QAAYl+B,KAAKm+B,aACjBC,QAAcF,EAAIG,QAAQn+B,EAAM6B,EAAK/B,KAAK28B,YAC9C,IAAK,IAAIptB,KAAa6uB,GACiB,IAA/Bp+B,KAAKi+B,WAAW1uB,KACpBvP,KAAKs+B,qBAAqB/uB,GAC1BvP,KAAKu+B,aAAahvB,UAEhBvP,KAAKw+B,gBAECh/B,yDAEVA,KAAK8D,2CACP,QAAW/B,IAAP+B,GAA2B,IAAPA,EAAU,OAClC,IAAI46B,QAAYl+B,KAAKm+B,aACjB19B,QAAey9B,EAAIO,QAAQz+B,KAAKE,KAAMoD,GAC1C,YAAe/B,IAAXd,GACJA,EAAOmP,OAAS5P,KAChBA,KAAKi+B,WAAWx9B,GAChBT,KAAKs+B,qBAAqB79B,GACnBA,QAJP,IAMMjB,OAAOk/B,IACTl/B,qBAAqBiB,GACzB,IAAIY,OAACA,EAAMM,KAAEA,GAAQ3B,KAAKi7B,OAE1B,GADAj7B,KAAK2+B,mBAAmBl+B,EAAQY,QACnBE,IAATI,EACA,IAAK,IAAII,KAAOJ,EAAqB,CACjC,IAAIzB,KAACA,EAAImB,OAAEA,GAAUU,EACjB68B,EAAYn+B,EAAOP,GACvB,QAAkBqB,IAAdq9B,EAAyB,SAC7B,IAAIC,EAAU7+B,KAAK8+B,OAAO5+B,GAC1B,IAAK,IAAIwxB,KAAOkN,EACZlN,EAAI9hB,OAASivB,EACbnN,EAAItD,OAASpuB,KAAK6vB,MAAM6B,EAAI/Z,OAC5BknB,EAAQZ,WAAWvM,GACnB1xB,KAAK2+B,mBAAmBjN,EAAKrwB,IAKrC7B,mBAAmBiB,EAAYY,GACnC,IAAK,IAAIiwB,KAAKjwB,EAAmB,CAC7B,IAAInB,KAACA,EAAIiC,MAAEA,GAASmvB,EACpB,QAAc/vB,IAAVY,EAAqB,SACzB,IAAImB,EAAK7C,EAAOP,GAEhBO,EAAOP,GAAQiC,EAAM0tB,MAAMvsB,IAG7B9D,KAAK8D,EAAWoB,2CAClB,IAAIgT,EAASrB,EAAAhD,EAAEa,MAAMxP,GACrBgT,EAAY,IAAIpU,EAChB,IAAIzC,QAAYb,KAAK+6B,MAAMgE,SAAS/+B,KAAKE,KAAMwX,IAC1CpU,GAAG07B,EAAKC,KAAEA,GAAQp+B,EASvB,YARcU,IAAVy9B,GACAtnB,EAAOpU,GAAKA,EACZtD,KAAKi+B,WAAWvmB,IAEXsnB,EAAQ,IACbtnB,EAAOpU,GAAK07B,EACZh/B,KAAKi+B,WAAWvmB,IAEb7W,IAELrB,OAAOmH,EAAYiR,EAAyBC,2CAE9C,aADsB7X,KAAKinB,eAAU1lB,EAAWoF,EAAKiR,EAAWC,KAG9DrY,UAAUmY,EAAchR,EAAYiR,EAAyBC,2CAC/D,IACI3X,EAAa6B,GADbV,OAACA,GAAUrB,KAAKi7B,YAED15B,IAAfvB,KAAK2X,OACLzX,EAAOF,KAAK2X,MAAMzX,KAClB6B,EAAM/B,KAAKE,OAGXA,EAAOF,KAAKE,KACZ6B,OAAMR,GAEV,IAAI28B,QAAYl+B,KAAKm+B,aACjBt9B,QAAYq9B,EAAIgB,WAAWh/B,EAAM6B,EAAK4V,EAAOhR,EAAKiR,EAAWC,GACjE,IAAK,IAAI6Z,KAAO7wB,EACZb,KAAK2+B,mBAAmBjN,EAAKrwB,QACVE,IAAfvB,KAAK2X,QAAqB+Z,EAAItD,OAASpuB,KAAK2X,MAAMkY,MAAM6B,EAAI/Z,QAEpE,OAAO9W,IAELrB,QAAQuC,EAAY4V,EAAcrU,2CACpC,QAAW/B,IAAP+B,GAA2B,IAAPA,EAAU,OAClC,IAAI46B,QAAYl+B,KAAKm+B,aACrB,aAAaD,EAAIiB,WAAWn/B,KAAKE,KAAM6B,EAAK4V,EAAOrU,KAMjD9D,QAAQuC,EAAY4V,EAAcrU,EAAWoB,2CAC/C,IAAIgT,EAASrB,EAAAhD,EAAEa,MAAMxP,GAErB,OADAgT,EAAY,IAAIpU,QACHtD,KAAK+6B,MAAMqE,YAAYp/B,KAAKE,KAAM6B,EAAK4V,EAAOD,KAEzDlY,OAAOuC,EAAY4V,EAAcrU,EAAWwU,2CAC9C,aAAa9X,KAAK+6B,MAAMsE,WAAWr/B,KAAKE,KAAM6B,EAAK4V,EAAOrU,EAAIwU,KAO5DtY,SAAS8D,iDACLtD,KAAKy6B,SAASh7B,IAAI6/B,SAASt/B,KAAMsD,MAIxC,MAAMi8B,UAAiB9C,EAC1B+C,WAAY,OAAOx/B,KACnBuQ,YAAa,OAAOvQ,KAAKy6B,SAASlqB,MAK3B/Q,UAAUy7B,GACbp7B,MAAMq7B,UAAUD,GAChB,IAAIt5B,KAACA,GAAQs5B,EACb,QAAa15B,IAATI,EAAoB,CACpB3B,KAAKulB,KAAO,GACZ,IAAK,IAAIxjB,KAAOJ,EAAM,CAClB,IAAIzB,KAACA,GAAQ6B,EACT88B,EAAU,IAAIY,EAAQz/B,KAAKy6B,SAAUv6B,EAAMF,KAAK06B,QACpDmE,EAAQlnB,MAAQ3X,KAChBA,KAAKulB,KAAKrlB,GAAQ2+B,EAClBA,EAAQ3D,UAAUn5B,KAIpBvC,OAAOk/B,GAAyB,OAAO1+B,KAAKulB,KAAKmZ,GAU3Cl/B,sDACZ,QAAkB+B,IAAdvB,KAAKulB,KACT,IAAK,IAAIre,KAAKlH,KAAKulB,WACTvlB,KAAKulB,KAAKre,GAAGw4B,aAIrBlgC,kDACF,QAAwB+B,IAApBvB,KAAK6nB,WAA0B,OAAO7nB,KAAKy6B,SAASh7B,IACxD,IAAIkY,MAACA,EAAO/E,GAAIA,GAAM5S,KAAK6nB,WACvBpoB,QAAYO,KAAKy6B,SAASh7B,IAC1BkgC,EAAOlgC,EAAIkgC,KACf,QAAap+B,IAATo+B,EAAoB,OAAOlgC,EAC/B,IAAImgC,QAAeD,EAAKE,YAAYloB,EAAO/E,GAC3C,QAAerR,IAAXq+B,EAGA,OAFA18B,QAAQgD,SAASyR,KAAS/E,wBAEnBnT,EAEX,IAAIqgC,QAAkBF,EAAOr/B,aAC7B,YAAkBgB,IAAdu+B,GACA58B,QAAQgD,MAAM,mBAAqB45B,GAE5BrgC,GAEJmgC,IAGLpgC,qDACF,IAAI8U,QAAatU,KAAKsU,OACtB,YAAa/S,IAAT+S,EACOA,EAAKmmB,SAASlqB,MAElBvQ,KAAKy6B,SAASlqB,QAGnB/Q,+CAEF,aADgBQ,KAAKsnB,WACVrB,KAAKjmB,KAAKE,QAGnBV,gDAEF,aADgBQ,KAAKsnB,WACVyY,kBAAkB//B,KAAKE,QAGhCV,oDAEF,aADgBQ,KAAKsnB,WACVC,kBAAkBvnB,KAAKE,QAGhCV,oDAEF,aADgBQ,KAAKsnB,WACVE,kBAAkBxnB,KAAKE,QAGhCV,sDACF,IAAIC,QAAYO,KAAKsnB,UACrB,QAAY/lB,IAAR9B,EACJ,OAAOA,EAAIgoB,oBAAoBznB,KAAKE,QAG9BV,aAAa+P,GAEnB,GADA1P,MAAM0+B,aAAahvB,QACEhO,IAAjBvB,KAAKmnB,QAAuB,OAChC,IAAItf,KAACA,EAAIm4B,OAAEA,GAAUzwB,EACTvP,KAAKmnB,QAAQtf,GACnBrE,MAAMw8B,IAIb,MAAMP,UAAgBhD,EACzB+C,WAAY,OAAOx/B,KAAK2X,MAElBnY,qDACF,aAAaQ,KAAK2X,MAAMwmB,yRCzazB,MAAM8B,UAAezF,EACxBr6B,eAAyB,MAAO,SAC1BX,OAAOiU,iDACHzT,KAAKO,aACX,IAAIghB,EAAOvhB,KAAKkgC,KAAKzsB,GACrB,aAAazT,KAAK+6B,MAAM7lB,OAAOlV,KAAKE,KAAM,CAACuT,KAAK8N,uRCWjD,MAAM4e,UAAc3F,EACvBr6B,eAAyB,MAAO,QAShCX,UAAUy7B,GACNp7B,MAAMq7B,UAAUD,GAChBj7B,KAAKogC,OAASnF,EAAOmF,OAEzB5gC,MAAMia,GACFzZ,KAAKogC,OAAS,GACd,IAAK,IAAIC,KAAM5mB,EAAI6mB,IACftgC,KAAKogC,OAAO55B,KAAK,CAACtG,KAAMmgC,EAAIE,aAAQh/B,IAWpC/B,iBAAiBU,EAAauZ,GAClC,IAAI5Y,EAAiB,CAACX,KAAKA,EAAMqgC,QAAQ,IACrCA,EAAU1/B,EAAI0/B,QAClB,IAAK,IAAIt5B,KAAKwS,EAAK,CACf,IAAIvE,EAAqB,CAAChV,KAAM+G,GAChCs5B,EAAQ/5B,KAAK0O,GAEjB,OAAOrU,EAYLrB,KAAKghC,EAAoB/sB,iDACrBzT,KAAKO,aACX,IAAIkgC,MAACA,GAASzgC,KAAKy6B,SACflZ,EAAOvhB,KAAKkgC,KAAKzsB,GAGrB,aADgBzT,KAAK+6B,MAAM2F,UAAU1gC,KAAKE,KAAM,CAACygC,IAAKF,EAAOD,YAAaA,EAAa/sB,KAAK8N,MAQ1F/hB,OAAO8D,EAAWs9B,EAAax7B,EAAc8P,2CAE/C,aADMlV,KAAKO,mBACEP,KAAK+6B,MAAM8F,YAAY7gC,KAAKE,KAAM,CAACoD,GAAGA,EAAIs9B,KAAKA,EAAMx7B,MAAMA,EAAO8P,OAAOA,MAE5E1V,OAAOiU,2CAEjB,IACIqtB,EADMrtB,EAAK,GACC,GAGhB,MAAO,CACHqtB,MAAOA,EACPrtB,KAJYzT,KAAK+gC,YAAYD,EAAMrtB,MAKnCutB,MAJQvtB,EAAK,MAOfjU,SAAS8D,iDACLtD,KAAKO,aACX,IAAIM,QAAYb,KAAK+6B,MAAMkG,SAASjhC,KAAKE,KAAMoD,GAC/C,OAAsB,IAAlBzC,EAAI,GAAG+E,aAA2B5F,KAAKkhC,WAAW59B,SACzCtD,KAAKmhC,OAAOtgC,KAEvBrB,WAAW8D,iDACPtD,KAAKO,aACX,IAAIM,QAAYb,KAAK+6B,MAAMqG,aAAaphC,KAAKE,KAAMoD,GACnD,aAAatD,KAAKmhC,OAAOtgC,KAGvBrB,YAAYoY,EAAkBC,2CAGhC,aAFM7X,KAAKO,mBACKP,KAAK+6B,MAAMsG,cAAcrhC,KAAKE,KAAM,CAAC0X,UAAUA,EAAWC,SAASA,MAIjFrY,eAAe4F,EAAcwS,EAAkBC,2CAGjD,aAFM7X,KAAKO,mBACKP,KAAK+6B,MAAMuG,YAAYthC,KAAKE,KAAM,CAACkF,MAAMA,EAAOwS,UAAUA,EAAWC,SAASA,MAGlGrY,uBAA8C,OAAO,IAAI+hC,EAAkBvhC,MAErER,gEACIQ,KAAKO,aACX,IAAIM,QAAyBb,KAAK+6B,MAAMyG,gBAAgBxhC,KAAKE,MAC7D,OAAOF,KAAKogC,OAAOh4B,IAAIq5B,IACnB,IAAIriB,EAAIqiB,EAAEvhC,KAAMwhC,EAAQ,EACpB1W,EAAInqB,EAAIyG,KAAKC,GAAKA,EAAEnC,QAAUga,GAElC,YADU7d,IAANypB,IAAiB0W,EAAQ1W,EAAE0W,OACxB,CAACt8B,MAAOga,EAAGsiB,MAAOA,QAK9B,MAAMH,UAA0B7e,EAAA,UAEnCljB,YAAYsO,GACRjO,OAAM,GACNG,KAAK8N,MAAQA,EACb9N,KAAK6X,SAAW,GAEJrY,KAAKuD,EAAW6U,EAAeC,2CAE3C,aADgB7X,KAAK8N,MAAM6zB,eAAe5+B,EAAO6U,EAAWC,KAGtDrY,aAAasH,GACnB9G,KAAK4X,eAAqBrW,IAATuF,EAAoB,EAAIA,EAAKxD,6QC1I/C,MAAMs+B,UAAcpH,EACvBr6B,eAAyB,MAAO,QAUhCX,UAAUy7B,GACNp7B,MAAMq7B,UAAUD,GAChB,IAAID,QAACA,GAAWC,EAChBj7B,KAAKg7B,QAAUA,EACfh7B,KAAK6hC,aAA+DtgC,IAApDy5B,EAAkB1zB,KAAKC,GAAgB,UAAXA,EAAErH,MAGlDV,UAAUqkB,EAAanM,GACnB1X,KAAK4X,eAAYrW,EACjBvB,KAAK6X,SAAWgM,EAChB7jB,KAAK0X,OAASA,EACd1X,KAAK8hC,MAAO,EACZ9hC,KAAKquB,UAAO9sB,EAEhBwgC,cAAe,OAAO/hC,KAAK8hC,KACrBtiC,mDACF,QAAsB+B,IAAlBvB,KAAK6X,SACL,KAAM,gDAEV,IAAID,EACJ,QAAuBrW,IAAnBvB,KAAK4X,UACL,OAAQ5X,KAAKgiC,WAAWn6B,MACpB,QAAS+P,EAAY5X,KAAK4X,UAAW,MACrC,IAAK,OACL,IAAK,OACL,IAAK,WAAYA,EAAa5X,KAAK4X,UAAmBvJ,UAG9D,IAAIyD,QAAa9R,KAAK8R,KAAK9R,KAAK0X,OAAQE,EAAW5X,KAAK6X,SAAS,GAQjE,GADA7X,KAAKquB,KAAO5E,EAAA,EAAW0I,MAAM,GAAI,CAACC,MAAM,SAC3B7wB,IAATuQ,EAAoB,CACpB,GAAIA,EAAKlM,OAAS5F,KAAK6X,SAAU,CAC7B7X,KAAK8hC,MAAO,EACZhwB,EAAK/K,MACL,IAAIlG,EAAMb,KAAKg7B,QAAQ1zB,KAAK0jB,GAAgB,UAAXA,EAAE9qB,MACnCF,KAAKgiC,WAAanhC,EAAIQ,OAAO,GAC7BrB,KAAK4X,UAAY9F,EAAKA,EAAKlM,OAAO,GAAG5F,KAAKgiC,WAAW9hC,WAGrDF,KAAK8hC,MAAO,EAEhB9hC,KAAKquB,KAAK7nB,QAAQsL,MAKpBtS,KAAKkY,EAAYE,EAAeC,iDAC5B7X,KAAKO,aACX,IAAIX,QAAYI,KAAK+6B,MAAMjpB,KAAK9R,KAAKE,KAAM0X,EAAWC,EAAS,EAAG7X,KAAKiiC,YAAYvqB,IAEnF,aADiB1X,KAAKkiC,cAActiC,IACxBuiC,QAEV3iC,MAAMkY,iDACF1X,KAAKO,aACX,IAAIX,QAAYI,KAAK+6B,MAAMqH,MAAMpiC,KAAKE,KAAMF,KAAKiiC,YAAYvqB,IAE7D,aADiB1X,KAAKkiC,cAActiC,KAGlCJ,MAAMkY,2CACR,IAAI7W,QAAYb,KAAKoiC,MAAM1qB,GAC3B,IAAK,IAAIxQ,KAAKrG,EACV,OAAOA,EAAIqG,KAGb1H,IAAIkY,2CACN,IAAI7W,QAAYb,KAAKqiC,MAAM3qB,GAC3B,GAAI7W,EAAI+E,OAAS,EAAG,OAAO/E,EAAI,KAE7BrB,OAAOkY,2CACT,IAAI7W,QAAYb,KAAKyZ,IAAI/B,GACzB,IAAK,IAAIxQ,KAAKrG,EAAK,OAAOA,EAAIqG,oUAhFtBsH,CAAA,CAAXib,EAAA,8BCVE,MAAM6Y,UAAaV,EAA1BpiC,kCAEcQ,KAAAuiC,aAAe,OADzBpiC,eAAyB,MAAO,QCD7B,MAAMqiC,UAAgBZ,EAA7BpiC,kCAEcQ,KAAAuiC,aAAe,UADzBpiC,eAAyB,MAAO,oRCY7B,MAAMsiC,UAAYjI,EAAzBh7B,kCAGIQ,KAAAugC,QAAsB,GACtBvgC,KAAA0iC,QAAsB,GAHtBviC,eAAyB,MAAO,MAMhCX,UAAUy7B,GACNp7B,MAAMq7B,UAAUD,GAChBj7B,KAAK6nB,WAAa7nB,KAAKi7B,OAAO3mB,KAC9B,IAAIisB,QAACA,EAAOmC,QAAEA,EAAO7P,KAAEA,GAAQoI,EAC/Bj7B,KAAKy6B,SAASU,eAAen7B,KAAK6yB,KAAOA,GAEzC,IAAK,IAAI3rB,KAAKq5B,EAAS,CACnB,IAAItF,EAASsF,EAAQr5B,IACjBhH,KAACA,GAAQ+6B,EACT/lB,EAASlV,KAAKy6B,SAASkI,UAAUziC,OAAMqB,GAC3C2T,EAAOgmB,UAAUD,GACjBj7B,KAAKugC,QAAQr5B,GAAKgO,EAEtB,IAAK,IAAIhO,KAAKw7B,EAAS,CACnB,IAAIzH,EAASyH,EAAQx7B,IACjBhH,KAACA,GAAQ+6B,EACTmH,EAAQpiC,KAAKy6B,SAASmI,SAAS1iC,OAAMqB,GACzC6gC,EAAMlH,UAAUD,GAChBj7B,KAAK0iC,QAAQx7B,GAAKk7B,GAIpB5iC,IAAIuD,2CAEN,aADM/C,KAAKO,mBACEP,KAAKugC,QAAQsC,IAAIxZ,OAAOtmB,KAGnCvD,IAAIuD,2CAEN,aADM/C,KAAKO,mBACEP,KAAKugC,QAAQuC,IAAIzZ,OAAOtmB,KAGnCvD,8CAEF,aADMQ,KAAKO,mBACEP,KAAK0iC,QAAQxhB,IAAIkhB,MAAM,MAGlC5iC,KAAKuD,EAAW6U,EAAeC,2CAEjC,aADM7X,KAAKO,mBACEP,KAAK0iC,QAAQ5wB,KAAKA,KAAK/O,EAAO6U,EAAWC,KAGpDrY,MAAMuD,2CAER,aADM/C,KAAKO,mBACEP,KAAK0iC,QAAQN,MAAMA,MAAMr/B,KAEpCvD,MAAMkY,2CACR,IAAI7W,QAAYb,KAAKoiC,MAAM1qB,GAC3B,IAAK,IAAIxQ,KAAKrG,EACV,OAAOA,EAAIqG,KAGb1H,IAAIkY,2CACN,IAAI7W,QAAYb,KAAKqiC,MAAM3qB,GAC3B,GAAI7W,EAAI+E,OAAS,EAAG,OAAO/E,EAAI,KAE7BrB,OAAOkY,2CACT,IAAI7W,QAAYb,KAAKyZ,IAAI/B,GACzB,IAAK,IAAIxQ,KAAKrG,EAAK,OAAOA,EAAIqG,MC9E/B,MAAM67B,UAAgBnB,EAA7BpiC,kCAEcQ,KAAAuiC,aAAe,UADzBpiC,eAAyB,MAAO,oRCW7B,SAAS6iC,EAAkBn7B,GAC9B,OAAQA,GACJ,IAAK,UACL,IAAK,WACL,IAAK,MACL,IAAK,SACL,IAAK,MACD,OAAO,EACX,IAAK,OACL,IAAK,OACD,MAAO,GACX,IAAK,WACL,IAAK,OACD,MAAO,WACX,IAAK,OACD,MAAO,QA0BZ,MAAMo7B,EAeTzjC,YAAYC,EAAU8Q,EAAakwB,GAd3BzgC,KAAAo+B,MAAmC,GACnCp+B,KAAAugC,QAAmC,GACnCvgC,KAAAkjC,OAAiC,GACjCljC,KAAA0iC,QAAkC,GAClC1iC,KAAAmjC,MAA+B,GAC/BnjC,KAAAojC,KAA6B,GAC7BpjC,KAAAqjC,UAAsC,GACtCrjC,KAAAsjC,SAAqC,GA6B7CtjC,KAAAujC,QAAsB,GACtBvjC,KAAAwjC,UAAsB,GACtBxjC,KAAAyjC,SAAoB,GACpBzjC,KAAA0jC,SAAoB,GACpB1jC,KAAA2jC,QAAkB,GAClB3jC,KAAA4jC,OAAgB,GAChB5jC,KAAA6jC,WAAwB,GACxB7jC,KAAA8jC,WAAwB,GAsChB9jC,KAAA+jC,QAAU,MACd/jC,KAAKgkC,kBACL,IAAK,IAAI98B,KAAKlH,KAAKo+B,MAAO,CACXp+B,KAAKo+B,MAAMl3B,GACjBw4B,cAtET1/B,KAAKP,IAAMA,EACXO,KAAKuQ,MAAQA,EACbvQ,KAAKygC,MAAQA,EAGjBjhC,KAAKU,GAAuB,OAAOF,KAAKo+B,MAAMl+B,EAAKszB,eACnDh0B,OAAOU,GAAqB,OAAOF,KAAKugC,QAAQrgC,EAAKszB,eACrDh0B,MAAMU,GAAoB,OAAOF,KAAKkjC,OAAOhjC,EAAKszB,eAClDh0B,MAAMU,GAAoB,OAAOF,KAAK0iC,QAAQxiC,EAAKszB,eACnDh0B,KAAKU,GAAmB,OAAOF,KAAKmjC,MAAMjjC,EAAKszB,eAC/Ch0B,IAAIU,GAAkB,OAAOF,KAAKojC,KAAKljC,EAAKszB,eAC5Ch0B,QAAQU,GAAsB,OAAOF,KAAKqjC,UAAUnjC,EAAKszB,eACzDh0B,QAAQU,GAAsB,OAAOF,KAAKsjC,SAASpjC,EAAKszB,eAExDh0B,gBAAgBk7B,GACZ,IAAK,IAAIxzB,KAAKlH,KAAKkjC,OAAQ,CACvB,IAAIp1B,EAAQ9N,KAAKkjC,OAAOh8B,GACxB,GAAI4G,EAAM4sB,SAAWA,EAAQ,OAAO5sB,GAatCtO,qDACF,IAAIykC,QAAiBjkC,KAAKuQ,MAAM+G,kBACf/V,IAAb0iC,GACJjkC,KAAKkkC,cAAcD,KAGjBzkC,uDACF,IAAIykC,QAAiBjkC,KAAKuQ,MAAM4zB,eAChCnkC,KAAKkkC,cAAcD,KAGfzkC,cAAci7B,GAIlB,IAAI3jB,OAACA,EAAMsnB,MAAEA,GAAS3D,EACtBz6B,KAAKokC,WAAWhG,GAChBp+B,KAAKqkC,YAAYvtB,GAGrBtX,QAAQU,EAAaokC,EAAaC,GAC9B,IAAIte,EAAOjmB,KAAKo+B,MAAMl+B,GACtB,QAAaqB,IAAT0kB,EACJ,YAAY1kB,IAAR+iC,EAA0Bre,EACvBA,EAAKV,KAAK+e,GAGrB9kC,WAAWk+B,GACP19B,KAAKgkC,kBACLhkC,KAAKwkC,WAAaz+B,WAAW/F,KAAK+jC,QAASrG,GAEvCl+B,uBACoB+B,IAApBvB,KAAKwkC,aACTx+B,aAAahG,KAAKwkC,YAClBxkC,KAAKwkC,gBAAajjC,GAUd/B,WAAW4+B,GACf,IAAIqG,EAAY,GAChB,IAAK,IAAIv9B,KAAKk3B,EAAO,CACjB,IAAInD,EAASmD,EAAMl3B,IACfhH,KAACA,EAAIw6B,OAAEA,EAAMvT,QAAEA,GAAW8T,EACnBj7B,KAAK0kC,QAAQx9B,EAAGwzB,GACtBE,KAAM,OAEKr5B,IAAZ4lB,IAAuBsd,EAAUv9B,GAAKigB,GAE9C,IAAK,IAAIjgB,KAAKk3B,EAAO,CACjB,IAAInD,EAASmD,EAAMl3B,IACfhH,KAACA,GAAQ+6B,EACFj7B,KAAKq7B,QAAQn0B,GAEnBg0B,UAAUD,GAEnB,IAAK,IAAI/zB,KAAKu9B,EAAW,CACrB,IAAItd,EAAmBsd,EAAUv9B,GAC7B+e,EAAOjmB,KAAKo+B,MAAMl3B,GACtB+e,EAAKkB,QAAU,GACf,IAAK,IAAIlgB,KAAKkgB,EACVlB,EAAKkB,QAAQlgB,GAAKjH,KAAKo+B,MAAMn3B,IAKjCzH,YAAYsX,GAChB,IAAK,IAAIzD,KAAKyD,EAAQ,CAClB,IAAIvP,EAAIuP,EAAOzD,GACf,cAAe9L,GACX,IAAK,SAAUvH,KAAK2kC,SAAStxB,EAAG9L,GAAI,MACpC,IAAK,SAAUvH,KAAK4kC,QAAQvxB,EAAG9L,KAS3C/H,UAAUU,EAAaoD,GACnB,IAAI4R,EAASlV,KAAKugC,QAAQrgC,GAC1B,YAAeqB,IAAX2T,EAA6BA,GACjCA,EAASlV,KAAKugC,QAAQrgC,GAAQ,IAAI+/B,EAAOjgC,KAAME,EAAMoD,GACrDtD,KAAKwjC,UAAUh9B,KAAK0O,GACbA,GAEX1V,QAAQU,EAAaoD,GACjB,IAAI2iB,EAAOjmB,KAAKo+B,MAAMl+B,GACtB,YAAaqB,IAAT0kB,EAA2BA,GAC/BA,EAAOjmB,KAAKo+B,MAAMl+B,GAAQ,IAAIq/B,EAASv/B,KAAME,EAAMoD,GACnDtD,KAAKujC,QAAQ/8B,KAAKyf,GACXA,GAEXzmB,SAASU,EAAaoD,GAClB,IAAI8+B,EAAQpiC,KAAK0iC,QAAQxiC,GACzB,YAAcqB,IAAV6gC,EAA4BA,GAChCA,EAAQpiC,KAAK0iC,QAAQxiC,GAAQ,IAAI0hC,EAAM5hC,KAAME,EAAMoD,GACnDtD,KAAK0jC,SAASl9B,KAAK47B,GACZA,GAEX5iC,QAAQU,EAAaoD,GACjB,IAAIuhC,EAAO7kC,KAAKmjC,MAAMjjC,GACtB,YAAaqB,IAATsjC,EAA2BA,GAC/BA,EAAO7kC,KAAKmjC,MAAMjjC,GAAQ,IAAIoiC,EAAKtiC,KAAME,EAAMoD,GAC/CtD,KAAK2jC,QAAQn9B,KAAKq+B,GACXA,GAEXrlC,OAAOU,EAAaoD,GAChB,IAAI8E,EAAMpI,KAAKojC,KAAKljC,GACpB,YAAYqB,IAAR6G,EAA0BA,GAC9BA,EAAMpI,KAAKojC,KAAKljC,GAAQ,IAAIuiC,EAAIziC,KAAME,EAAMoD,GAC5CtD,KAAK4jC,OAAOp9B,KAAK4B,GACVA,GAEX5I,WAAWU,EAAaoD,GACpB,IAAImD,EAAUzG,KAAKqjC,UAAUnjC,GAC7B,QAAgBqB,IAAZkF,EAGJ,OAFAA,EAAUzG,KAAKqjC,UAAUnjC,GAAQ,IAAIsiC,EAAQxiC,KAAME,EAAMoD,GACzDtD,KAAK6jC,WAAWr9B,KAAKC,GACdA,EAEXjH,WAAWU,EAAaoD,GACpB,IAAIwhC,EAAU9kC,KAAKsjC,SAASpjC,GAC5B,QAAgBqB,IAAZujC,EAGJ,OAFAA,EAAU9kC,KAAKsjC,SAASpjC,GAAQ,IAAI6iC,EAAQ/iC,KAAME,EAAMoD,GACxDtD,KAAK8jC,WAAWt9B,KAAKs+B,GACdA,EAEXtlC,SAASU,EAAaoD,GAClB,IAAIwK,EAAQ9N,KAAKkjC,OAAOhjC,GACxB,YAAcqB,IAAVuM,EAA4BA,GAChCA,EAAQ9N,KAAKkjC,OAAOhjC,GAAQ,IAAIigC,EAAMngC,KAAME,EAAMoD,GAClDtD,KAAKyjC,SAASj9B,KAAKsH,GACZA,GAEHtO,SAASU,EAAa2H,GAC1B,IAAI8J,EAAQ9J,EAAK+J,MAAM,KACvB/J,EAAO8J,EAAM,GACb,IAAIrO,EAAKuO,OAAOF,EAAM,IACtB,OAAQ9J,GACJ,IAAK,KAAM7H,KAAK+kC,KAAOzhC,EAAI,MAC3B,IAAK,OACUtD,KAAK0kC,QAAQxkC,EAAMoD,GACzBs3B,KAAM,EACX,MACJ,IAAK,SAAU56B,KAAK2iC,UAAUziC,EAAMoD,GAAK,MACzC,IAAK,QAAStD,KAAK4iC,SAAS1iC,EAAMoD,GAAK,MACvC,IAAK,OAAQtD,KAAKglC,QAAQ9kC,EAAMoD,GAAK,MACrC,IAAK,MAAOtD,KAAKilC,OAAO/kC,EAAMoD,GAAK,MACnC,IAAK,UAAWtD,KAAKklC,WAAWhlC,EAAMoD,GAAK,MAC3C,IAAK,QAAQtD,KAAKmlC,SAASjlC,EAAMoD,GAAK,MACtC,IAAK,UAAWtD,KAAKolC,WAAWllC,EAAMoD,IAGtC9D,QAAQU,EAAauZ,GACzB,OAAQA,EAAO,GACX,IAAK,QAASzZ,KAAKqlC,WAAWnlC,EAAMuZ,IAGpCja,WAAWU,EAAauZ,GAC5B,IAAI3L,EAAQ9N,KAAKkjC,OAAOhjC,QACVqB,IAAVuM,IAAqBA,EAAQ9N,KAAKmlC,SAASjlC,EAAMuZ,EAAInW,KACzDwK,EAAMqjB,MAAM1X,GAqBhBja,eAAe6B,EAAgBikC,GAC3B,QAAe/jC,IAAXF,EAAJ,CACA,IAAK,IAAIiwB,KAAKjwB,EAAQ,CAClB,IAAI4kB,KAACA,EAAIlkB,IAAEA,EAAGwI,IAAEA,GAAO+mB,OACV/vB,IAAT0kB,IACJqL,EAAEnvB,MAAQnC,KAAKq7B,QAAQpV,EAAMlkB,EAAKwI,IAEtC,IAAK,IAAI+mB,KAAKjwB,EAAQ,CAClB,IAAIsW,MAACA,GAAS2Z,EACd,QAAc/vB,IAAVoW,EAAqB,SACzB,IAAI4tB,EAAalkC,EAAOiG,KAAKC,GAAKA,EAAErH,OAASyX,GAC7C,QAAmBpW,IAAfgkC,SACmBhkC,IAAf+jC,IACAC,EAAaD,EAAWh+B,KAAKC,GAAKA,EAAErH,OAASyX,SAE9BpW,IAAfgkC,GACA,oBAAqB5tB,iBAG7B2Z,EAAE1uB,YAAc2iC,EAChB,IAAIxjC,IAACA,EAAGwI,IAAEA,GAAO+mB,EAEjB,GADAA,EAAEnvB,MAAQnC,KAAKq7B,QAAQkK,EAAWpjC,MAAMjC,KAAM6B,EAAKwI,QACnChJ,IAAZ+vB,EAAEnvB,MAAqB,KAAM,qCAGzC3C,mBAAmB8B,EAAuBgkC,GACtC,QAAkB/jC,IAAdD,EACJ,IAAK,IAAIkkC,KAAMlkC,EAAW,CACtB,IAAID,OAACA,GAAUmkC,OACAjkC,IAAXF,GACJrB,KAAKm7B,eAAe95B,EAAQikC,KChUxCjnC,EAAAC,EAAAC,EAAA,sBAAAykC,IAAA3kC,EAAAC,EAAAC,EAAA,sBAAA0kC,kCCAA5kC,EAAAC,EAAAC,EAAA,sBAAAknC,IAAApnC,EAAAC,EAAAC,EAAA,sBAAAmnC,IAAA,IAAAjhC,EAAApG,EAAA,GAAAsnC,EAAAtnC,EAAA,IAMO,MAAeunC,EAIlBpmC,YAAYkC,EAAegwB,GAGvB,GAFA1xB,KAAK0B,KAAOA,EACZ1B,KAAK0xB,IAAMA,OACuBnwB,IAA7BmwB,EAAoB7pB,KAAoB,CACzC,IAAIg+B,EAAoBnU,EAAqBkH,mBAClCr3B,IAAPskC,IAAkBA,EAAKnkC,EAAKk3B,oBACrBr3B,IAAPskC,IAAkBA,EAAKF,EAAA,GAC3B3lC,KAAK8lC,QAAUD,EAAGnkC,EAAMgwB,IAKhClyB,OACI,YAAqB+B,IAAjBvB,KAAK8lC,SACF9lC,KAAK8lC,QAAQxc,OAGxB9pB,SAASuyB,GACL,IAAI7vB,EAASlC,KAAK0xB,IAAiBxvB,MACnC,QAAcX,IAAVW,EAAqB,OAAO6vB,IAAc7vB,EAAMhC,KACpD,IAAI24B,EAAS74B,KAAK0xB,IAAiBmH,MACnC,YAAct3B,IAAVs3B,QAA0Et3B,IAA9Cs3B,EAAMvxB,KAAK4B,GAAKA,EAAEhH,MAAMhC,OAAS6xB,GAGrEkD,eAAwB,OAAOj1B,KAAK8lC,QAAQ7Q,SAC5CC,aAAsB,OAAOl1B,KAAK8lC,QAAQ5Q,OAC1C11B,aACyB+B,IAAjBvB,KAAK8lC,SAAuB9lC,KAAK8lC,QAAQv/B,QAEjD/G,mBACyB+B,IAAjBvB,KAAK8lC,SAAuB9lC,KAAK8lC,QAAQnQ,cAEjDn2B,WAAWiB,QACcc,IAAjBvB,KAAK8lC,SAAuB9lC,KAAK8lC,QAAQ1P,WAAW31B,GAE5DjB,SAASuyB,EAAkB7rB,QACF3E,IAAjBvB,KAAK8lC,SAAuB9lC,KAAK8lC,QAAQriB,SAASsO,EAAW7rB,GAErE1G,cAAciB,QACWc,IAAjBvB,KAAK8lC,SAAuB9lC,KAAK8lC,QAAQC,cAActlC,IAInE,MAAMulC,UAA4BJ,EAC9BpmC,OAAOmH,GACH,OAAOlC,EAAA,qBAAKkC,IAAKA,EAAKsB,UAAU,cAAcjI,KAAK0xB,KAEvDuD,eAAwB,OAAO,EAC/BC,aAAsB,OAAO,GAGjC,MAAM+Q,UAA8BL,EAChCpmC,OAAOmH,GACH,OAAOlC,EAAA,qBAAKkC,IAAKA,EAAKsB,UAAU,kBAC5BxD,EAAA,uBAAOwD,UAAU,2BACXjI,KAAK0xB,IAAqBtxB,OAE/BJ,KAAK8lC,QAAQxjB,WAOnB,SAASmjB,EAAmB/jC,EAAegwB,GAC9C,OAAO,IAAIuU,EAAsBvkC,EAAMgwB,GAGpC,SAASgU,EAAiBhkC,EAAegwB,GAC5C,OAAO,IAAIsU,EAAoBtkC,EAAMgwB,2WC5ElC,SAAewU,EAAWhvB,EAAqB3M,EAAK5J,EAASiN,EAASC,iDACnEqJ,EAAQtN,MAAMW,EAAK5J,EAASiN,EAASC,KAGxC,MAAes4B,EAKlB3mC,YAAYsZ,EAAc/B,GACtB/W,KAAK8Y,KAAOA,GAAQ,GACpB9Y,KAAK+W,YAAcA,EAKVvX,KAAK+K,EAAYiK,EAAeC,2CACzC,IAAIyC,QAAgBlX,KAAKomC,iBACzB,aAAalvB,EAAQmvB,UAAU97B,EAAKiK,EAAQC,KAGnCjV,IAAIsZ,EAAapB,2CAC1B,IAAIR,QAAgBlX,KAAKomC,iBACzB,aAAalvB,EAAQ/N,IAAInJ,KAAK8Y,KAAOA,EAAMpB,KAGlClY,KAAKsZ,EAAapB,2CAC3B,IAAIR,QAAgBlX,KAAKomC,iBACzB,aAAalvB,EAAQO,KAAKzX,KAAK8Y,KAAOA,EAAMpB,KAGnClY,IAAIsZ,EAAapB,2CAC1B,IAAIR,QAAgBlX,KAAKomC,iBACzB,aAAalvB,EAAQgB,IAAIlY,KAAK8Y,KAAOA,EAAMpB,KAGlClY,OAAOsZ,EAAapB,2CAC7B,IAAIR,QAAgBlX,KAAKomC,iBACzB,aAAalvB,EAAQumB,OAAOz9B,KAAK8Y,KAAOA,EAAMpB,oWC3B/C,MAAM4uB,UAAiB7hC,EAAA,UAE1BjF,YAAYkF,GACR7E,MAAM6E,GAwBF1E,KAAAumC,YAAc,MAClBC,EAAA,EAAIhgC,KAAK/B,EAAA,cAAC2F,EAAA,EAAI,CAACC,OAAO,2BAAOrF,KAAK,SAC9BP,EAAA,qBAAKwD,UAAU,2DACXxD,EAAA,iNACAA,EAAA,qBAAKwD,UAAU,QACXxD,EAAA,wBAAQwD,UAAU,iBAAiBwE,QAAS,IAAIzM,KAAK0M,UAAQ,sBA5BzE1M,KAAKymC,UAAYzmC,KAAKymC,UAAUxhC,KAAKjF,MACrCA,KAAKoF,MAAQ,CACTshC,SAAS,GAGjBlnC,YACIQ,KAAK8E,SAAS,CACV4hC,QAASF,EAAA,EAAI7gC,MAAQ,IAG7BnG,qBACIQ,KAAKymC,YAGTjnC,wBAGMA,qDACIgnC,EAAA,EAAIxhC,SAEdxF,aACI8F,OAAO4I,KAAKnD,SAASC,SAAS27B,MAY1BnnC,SACJ,IAAIkN,OAACA,GAAU1M,KAAK0E,MACE,oBAAXgI,GACPA,IAEJ85B,EAAA,EAAI95B,YAAOnL,GAEf/B,SACI,IAEIwF,EAAM+B,EAAK6/B,EA4BXC,EA9BAC,EAAI9mC,KAAKoF,MAAMshC,SAAWh/B,MAAQC,KAClC+T,MAACA,EAAKU,OAAEA,EAAM1P,OAAEA,GAAU1M,KAAK0E,MAEnC,QAAenD,IAAXmL,GAAwBhF,OAASC,MACX,mBAAX+E,IAAmC,IAAXA,GACV,oBAAXA,GACd,CACI,IAAIq6B,KAACA,EAAI7mC,KAAEA,GAAQsmC,EAAA,EAAI79B,KACvBi+B,EAAcniC,EAAA,qBAAKwD,UAAU,6BACzBxD,EAAA,uBAAOwD,UAAU,cAAc8+B,GAAQ7mC,GACvCuE,EAAA,mBAAGwD,UAAU,gDACTuvB,KAAK,SACL/qB,QAASzM,KAAKumC,aACd9hC,EAAA,mBAAGwD,UAAU,qBAK7B,GAAI6+B,EACA,OAAQ9mC,KAAK0E,MAAMM,MACf,IAAK,OAAQA,OAAOzD,EAAW,MAC/B,QACA,IAAK,OAAQyD,EAAOP,EAAA,qBAAKgI,QAASzM,KAAKgF,MAAMP,EAAA,mBAAGwD,UAAU,sBAA6B,MACvF,IAAK,QAASjD,EAAOP,EAAA,qBAAKgI,QAASzM,KAAKgF,MAAMP,EAAA,mBAAGwD,UAAU,iBASnE,OANIP,MAAQC,MACRzE,QAAQC,IAAI4H,SAASC,SAAS27B,MAC9B5/B,EAAMtC,EAAA,wBAAQgI,QAASzM,KAAKgnC,eAG5BtrB,GAASkrB,KAAaC,EAAYpiC,EAAA,2BAAQiX,MAAQkrB,IAEtDniC,EAAA,wBAAQ6D,MAAOk+B,EAAA,GACVz/B,EACA/B,EACDP,EAAA,yBAAM2X,GACLyqB,2FC7FN,MAAMI,EAAcxmC,GAAWwjB,EAAA5Q,EAAA6Q,cAAA,OAAKjc,UAAU,aAAanI,OAAA+lB,EAAA,EAAA/lB,CAAcW,6QCOzE,MAAMymC,UAAmBllB,EAAA,EAAhCxiB,kCAWIQ,KAAAQ,SAAW,KAAWmC,EAAA3C,UAAA,qBAClB,IAAI0X,EAAS1X,KAAKkjB,MAAMI,YACxB,IAA4B,IAAxBtjB,KAAKN,OAAOmiC,cACN7hC,KAAKN,OAAOynC,UAAU,GAAIzvB,SAC1B1X,KAAKN,OAAO0nC,WAClBpnC,KAAKqnC,YAAYrnC,KAAKsnC,gBAErB,CACD,IAAI7zB,QAAazT,KAAKN,OAAO0iC,MAAM1qB,GACnC1X,KAAKqnC,YAAYrnC,KAAKunC,YAAa9zB,OAI3CzT,KAAAwnC,MAAQ,MACJxnC,KAAKkjB,MAAMC,QACXnjB,KAAKqnC,YAAYrnC,KAAKqG,QAO1BrG,KAAAqmB,UAAY,EAACvf,EAAUuB,IAAiBqH,EAAA,cAAC1P,KAAK0xB,IAAG5xB,OAAAqI,OAAA,GAAKrB,KAE5C9G,KAAAqG,KAAO,KAAMqJ,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQrK,KAAKI,OACrCJ,KAAKkjB,MAAMZ,OAAO,aAClBtiB,KAAKynC,gBAGAznC,KAAAsnC,WAAa,MACnB,IAAIpnC,KAACA,EAAImuB,KAAEA,GAAQruB,KAAKN,OACpBgoC,EAAah4B,EAAA,wBACbzH,UAAU,0BACVwE,QAASzM,KAAKwnC,OACd93B,EAAA,cAACiT,EAAA,GAAE,CAACziB,KAAK,kCAEb,OAAOwP,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQrK,KAAKI,MAAOsb,MAAOgsB,GACpCh4B,EAAA,cAACiT,EAAA,KAAI,CAAC3gB,MAAOqsB,EAAMvnB,KAAM,CAACwb,OAAQtiB,KAAKqmB,gBAIrCrmB,KAAAunC,YAAcznC,OAAAwP,EAAA,EAAAxP,CAAU4U,IAC9B,IAAIgzB,EAAah4B,EAAA,wBACbzH,UAAU,0BACVwE,QAASzM,KAAKwnC,OACd93B,EAAA,cAACiT,EAAA,GAAE,CAACziB,KAAK,kCAEb,OAAOwP,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQrK,KAAKI,MAAOsb,MAAOgsB,GACpCh4B,EAAA,yBAAM3D,KAAKC,UAAU0I,OAAQnT,EAAW,UAvD1C/B,KAAKuD,2CACP/C,KAAKkjB,MAAQljB,KAAK8D,WAAW9D,KAAKQ,SAAUuC,GAC5C,IAAI2uB,IAACA,EAAGiW,SAAEA,GAAY3nC,KAAKL,GAC3BK,KAAK0xB,IAAMiW,GAAYjW,GAAOuV,EAC9BjnC,KAAKoiB,SAASpiB,KAAKqG,QAqBvB7G,yRC/BG,MAAMooC,UAAqB5lB,EAAA,EAAlCxiB,kCAcIQ,KAAAmiB,SAAW,CAAOxb,GAAekhC,EAAA7nC,UAAA,2BACvBA,KAAKqkB,UAAU2C,MAAMrgB,MAG/B3G,KAAAqmB,UAAY,EAACvf,EAAUuB,IAAiBqH,EAAA,cAAC1P,KAAK0xB,IAAG5xB,OAAAqI,OAAA,GAAKrB,KAMtD9G,KAAAsmB,SAAW,CAACxf,IACR9G,KAAKumB,eAAezf,KAGxB9G,KAAAqG,KAAO,MACH,IAAIgE,EAASqF,EAAA,cAACiT,EAAA,UAAS,CAAC1a,UAAU,aAC9Bkc,QAAS,GACThC,SAAUniB,KAAKmiB,SAAUS,YAAa,eAAK5iB,KAAKI,QACpD,OAAOsP,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQA,GACjBqF,EAAA,cAACiT,EAAA,KAAI,CACD3gB,MAAOhC,KAAKqkB,UAAUriB,MACtB8E,KAAM,CAACwb,OAAQtiB,KAAKqmB,UAAW5Z,QAASzM,KAAKsmB,UAC7C9B,OAAQ,eAAKxkB,KAAKI,MAAM,oBA9B9BZ,KAAKuD,2CACP,IAAI2uB,IAACA,EAAGoW,UAAEA,GAAa9nC,KAAKL,GAC5BK,KAAK0xB,IAAMoW,GAAapW,GAAOuV,EAE/BjnC,KAAKqkB,UAAY,IAAI0jB,EAAe/nC,KAAKN,cACnCM,KAAKmiB,SAASpf,GACpB/C,KAAKoiB,SAASpiB,KAAKqG,QAQf7G,eAAesH,GACpB9G,KAAKojB,YACLpjB,KAAK2jB,WAAW7c,IAmBhB,MAAMihC,UAAuBrlB,EAAA,UAEhCljB,YAAY4iC,GACRviC,QACAG,KAAKoiC,MAAQA,EAED5iC,+CAEZ,IAAIqB,EACJ,SAFOb,KAAKoiC,MAAM7hC,cAES,IAAvBP,KAAKoiC,MAAMP,QACXhhC,QAAYb,KAAKoiC,MAAMtwB,KAAK9R,KAAK+C,MAAO/C,KAAK4X,UAAW5X,KAAK6X,cAC5D,CAGDhX,SAFiBb,KAAKoiC,MAAMA,MAAMpiC,KAAK+C,QAE5B/C,KAAKoiC,MAAMpH,QAAQ,GAAG96B,MAErC,OAAOW,IAEDrB,aAAasH,QACNvF,IAATuF,IAAoB9G,KAAK4X,UAAY,6QCrD1C,MAAeowB,UAAmBhmB,EAAA,GAGlC,MAAMimB,UAAeD,EACRxoC,8DACNQ,KAAK8nB,UAAU9nB,KAAKkoC,cAG9BA,iBAA8C,OAAOloC,KAAKL,IAAMK,KAAKL,GAAGwoC,MAAQjB,GAG7E,MAAMkB,UAAqBJ,EACdxoC,cAAcuD,iDACpB/C,KAAK8nB,UAAU9nB,KAAKqoC,aAActlC,KAG5CslC,mBAAkD,OAAOT,GC/B7DvpC,EAAAC,EAAAC,EAAA,sBAAA0pC,IAAA5pC,EAAAC,EAAAC,EAAA,sBAAA6pC,IAAA/pC,EAAAC,EAAAC,EAAA,sBAAAwpC,stBCWO,MAAMO,UAAsBC,EAAA,EAAnC/oC,kCAIwBQ,KAAAwoC,UAAoB,EAiBhCxoC,KAAAyoC,OAAS,KAAW9lC,EAAA3C,UAAA,qBACxB,IAAKA,KAAK0oC,YAAa,OACvB,IAAI7nC,QAAYb,KAAK0oC,YAAYD,SACjC,GAAY,OAAR5nC,EAGA,OAFAb,KAAKwoC,UAAW,OAChBziC,WAAW,IAAM/F,KAAKwoC,UAAW,EAAO,KAG5CxoC,KAAK2oC,MAAQ9nC,EACbb,KAAK4oC,UAAa5oC,KAAK2oC,OAAS3oC,KAAKkP,SAGjClP,KAAA8R,KAAOhS,OAAAgP,EAAA,EAAAhP,CAAU4E,IACrB,IAKI8jC,GALA56B,QAACA,GAAWlJ,EACZgX,EAAQjX,EAAA,wBACRwD,UAAU,yBACVshB,UAAWvpB,KAAK4oC,UAChBn8B,QAAS,IAAImB,EAAQ5N,KAAK2oC,QAAM,gBAOpC,OALsB,IAAlB3oC,KAAKwoC,WACLA,EAAW/jC,EAAA,qBAAKwD,UAAU,eACtBxD,EAAA,cAACokC,EAAA,GAAE,CAAC3oC,KAAK,uGAGVuE,EAAA,cAACqkC,EAAA,EAAI,CAACz+B,OAAQ,eAAOrK,KAAKI,MAAOsb,MAAOA,GAC3CjX,EAAA,qBAAKwD,UAAU,2BACXxD,EAAA,0DACIA,EAAA,cAACskC,EAAA,EAAW,CAACvd,IAAKjkB,GAAGvH,KAAK0oC,YAAYnhC,EAAGyhC,UAAU,EAAOC,QAAS,OACnExkC,EAAA,wBAAQwD,UAAU,uBAAuBwE,QAASzM,KAAKyoC,QAAM,iBAEhED,EACD/jC,EAAA,qBAAKwD,UAAU,oBAAkB,6FACjCxD,EAAA,qBAAKwD,UAAU,UACXxD,EAAA,qBAAKwD,UAAU,OAAOK,MAAO,CAAC4gC,OAAQ,kBAAmBC,QAAS,QAC9D1kC,EAAA,cAAC2kC,EAAA,EAAK,CAACnhC,UAAU,cAAcgG,IAAKjO,KAAK2oC,SAE7ClkC,EAAA,qBAAKwD,UAAU,QACXxD,EAAA,qBAAKwD,UAAU,SAAO,4BACtBxD,EAAA,cAAC2kC,EAAA,EAAK,CAACnhC,UAAU,iBAAiBgG,IAAKjO,KAAK2oC,cArDhDnpC,wDAEZ,OADAQ,KAAK2oC,MAAQ3oC,KAAKkP,MACX,IAAIvB,QAAa,CAACC,EAASC,KAC9Bw7B,EAAA,EAAI7iC,KAAK/B,EAAA,cAAoBzE,KAAK8R,KAAM,CAAClE,QAAQA,EAASC,OAAOA,IAAU,IAAIA,UAN3EW,EAAA,CAAX86B,EAAA,+BACW96B,EAAA,CAAX86B,EAAA,iECfLjrC,EAAAC,EAAAC,EAAA,sBAAAgrC,IAAA,IAAA9kC,EAAApG,EAAA,GAEO,SAASkrC,IACZ,OAAO9kC,EAAA,qBAAKwD,UAAU,0DAClBxD,EAAA,mBAAGwD,UAAU,uYCMd,MAAMuhC,UAAoB/kC,EAAA,UAAjCjF,kCAGIQ,KAAAyoC,OAAS,KAA2B9lC,EAAA3C,UAAA,qBAChC,IAAIipC,QAACA,GAAWjpC,KAAK0E,WACLnD,IAAZ0nC,GAAyBA,GAAW,EACpCA,EAAU,KAEVA,GAAoB,KACxB,IAAIv+B,EAAS87B,EAAA,EAAI97B,OAAS,SAC1B,IAAI++B,EAAiBzpC,KAAK0pC,UAAUD,MAChCh2B,EAAO,IAAIk2B,SACf,IAAIxiC,EAAMsiC,EAAM7jC,OAChB,IAAK,IAAIsB,EAAE,EAAGA,EAAEC,EAAKD,IAAK,CACtB,IAAI0iC,EAAOH,EAAMviC,GACjB,GAAI0iC,EAAK/lB,KAAOolB,EAAS,OAAO,KAChCx1B,EAAKmgB,OAAO,UAAWgW,EAAMA,EAAK1pC,MAGtC,IACI,IAAI2pC,EAAkB,IAAIC,gBACtBlqC,QAAYgK,MAAMc,EAAQ,CAC1B8J,OAAQ,OACRC,KAAMhB,EACNs2B,OAAQF,EAAgBE,SAG5B,MAAO,WADUnqC,EAAIiK,QACHjK,IAAI0D,GAE1B,MAAO2C,GACH/C,QAAQgD,MAAM,QAASwE,EAAQzE,OAGvCzG,SACI,IAAIyI,UAACA,EAAS+gC,SAAEA,EAAQgB,cAAEA,GAAiBhqC,KAAK0E,MAChD,OAAOD,EAAA,uBACHwD,UAAWA,EACXujB,IAAK1b,GAAG9P,KAAK0pC,UAAU55B,EACvBgc,SAAUke,EACVniC,KAAK,OAAO3H,KAAK,OAAO8oC,SAAUA,oCCjD9C,IAAAiB,EAAA5rC,EAAA,IAAAA,EAAAK,EAAAurC,EAAA,UAAA5rC,EAAAC,EAAAC,EAAA,0BAAA0rC,EAAA,QAAA5rC,EAAAK,EAAAurC,EAAA,oBAAA5rC,EAAAC,EAAAC,EAAA,oCAAA0rC,EAAA,kBAAA5rC,EAAAK,EAAAurC,EAAA,aAAA5rC,EAAAC,EAAAC,EAAA,6BAAA0rC,EAAA,WAAA5rC,EAAAK,EAAAurC,EAAA,OAAA5rC,EAAAC,EAAAC,EAAA,uBAAA0rC,EAAA,KAAA5rC,EAAAK,EAAAurC,EAAA,QAAA5rC,EAAAC,EAAAC,EAAA,wBAAA0rC,EAAA,MAAA5rC,EAAAK,EAAAurC,EAAA,SAAA5rC,EAAAC,EAAAC,EAAA,yBAAA0rC,EAAA,OAAA5rC,EAAAK,EAAAurC,EAAA,UAAA5rC,EAAAC,EAAAC,EAAA,0BAAA0rC,EAAA,QAAA5rC,EAAAK,EAAAurC,EAAA,cAAA5rC,EAAAC,EAAAC,EAAA,8BAAA0rC,EAAA,YAAA5rC,EAAAK,EAAAurC,EAAA,UAAA5rC,EAAAC,EAAAC,EAAA,0BAAA0rC,EAAA,QAAA5rC,EAAAK,EAAAurC,EAAA,aAAA5rC,EAAAC,EAAAC,EAAA,6BAAA0rC,EAAA,WAAA5rC,EAAAK,EAAAurC,EAAA,cAAA5rC,EAAAC,EAAAC,EAAA,8BAAA0rC,EAAA,YAAA5rC,EAAAK,EAAAurC,EAAA,cAAA5rC,EAAAC,EAAAC,EAAA,8BAAA0rC,EAAA,gBAAAC,EAAA7rC,EAAA,IAAAA,EAAAK,EAAAwrC,EAAA,UAAA7rC,EAAAC,EAAAC,EAAA,0BAAA2rC,EAAA,QAAA7rC,EAAAK,EAAAwrC,EAAA,oBAAA7rC,EAAAC,EAAAC,EAAA,oCAAA2rC,EAAA,kBAAA7rC,EAAAK,EAAAwrC,EAAA,aAAA7rC,EAAAC,EAAAC,EAAA,6BAAA2rC,EAAA,WAAA7rC,EAAAK,EAAAwrC,EAAA,OAAA7rC,EAAAC,EAAAC,EAAA,uBAAA2rC,EAAA,KAAA7rC,EAAAK,EAAAwrC,EAAA,QAAA7rC,EAAAC,EAAAC,EAAA,wBAAA2rC,EAAA,MAAA7rC,EAAAK,EAAAwrC,EAAA,SAAA7rC,EAAAC,EAAAC,EAAA,yBAAA2rC,EAAA,OAAA7rC,EAAAK,EAAAwrC,EAAA,UAAA7rC,EAAAC,EAAAC,EAAA,0BAAA2rC,EAAA,QAAA7rC,EAAAK,EAAAwrC,EAAA,cAAA7rC,EAAAC,EAAAC,EAAA,8BAAA2rC,EAAA,YAAA7rC,EAAAK,EAAAwrC,EAAA,UAAA7rC,EAAAC,EAAAC,EAAA,0BAAA2rC,EAAA,QAAA7rC,EAAAK,EAAAwrC,EAAA,aAAA7rC,EAAAC,EAAAC,EAAA,6BAAA2rC,EAAA,WAAA7rC,EAAAK,EAAAwrC,EAAA,cAAA7rC,EAAAC,EAAAC,EAAA,8BAAA2rC,EAAA,YAAA7rC,EAAAK,EAAAwrC,EAAA,cAAA7rC,EAAAC,EAAAC,EAAA,8BAAA2rC,EAAA,gBAAAC,EAAA9rC,EAAA,IAAAA,EAAAK,EAAAyrC,EAAA,UAAA9rC,EAAAC,EAAAC,EAAA,0BAAA4rC,EAAA,QAAA9rC,EAAAK,EAAAyrC,EAAA,oBAAA9rC,EAAAC,EAAAC,EAAA,oCAAA4rC,EAAA,kBAAA9rC,EAAAK,EAAAyrC,EAAA,aAAA9rC,EAAAC,EAAAC,EAAA,6BAAA4rC,EAAA,WAAA9rC,EAAAK,EAAAyrC,EAAA,OAAA9rC,EAAAC,EAAAC,EAAA,uBAAA4rC,EAAA,KAAA9rC,EAAAK,EAAAyrC,EAAA,QAAA9rC,EAAAC,EAAAC,EAAA,wBAAA4rC,EAAA,MAAA9rC,EAAAK,EAAAyrC,EAAA,SAAA9rC,EAAAC,EAAAC,EAAA,yBAAA4rC,EAAA,OAAA9rC,EAAAK,EAAAyrC,EAAA,UAAA9rC,EAAAC,EAAAC,EAAA,0BAAA4rC,EAAA,QAAA9rC,EAAAK,EAAAyrC,EAAA,cAAA9rC,EAAAC,EAAAC,EAAA,8BAAA4rC,EAAA,YAAA9rC,EAAAK,EAAAyrC,EAAA,UAAA9rC,EAAAC,EAAAC,EAAA,0BAAA4rC,EAAA,QAAA9rC,EAAAK,EAAAyrC,EAAA,aAAA9rC,EAAAC,EAAAC,EAAA,6BAAA4rC,EAAA,WAAA9rC,EAAAK,EAAAyrC,EAAA,cAAA9rC,EAAAC,EAAAC,EAAA,8BAAA4rC,EAAA,YAAA9rC,EAAAK,EAAAyrC,EAAA,cAAA9rC,EAAAC,EAAAC,EAAA,8BAAA4rC,EAAA,YAAA9rC,EAAA,IAAAA,EAAA,QAAA+rC,EAAA/rC,EAAA,IAAAA,EAAAC,EAAAC,EAAA,8BAAA6rC,EAAA,IAAA/rC,EAAA,yrBCmDO,MAAMgsC,EAMT7qC,YAAYkF,GAJJ1E,KAAAyxB,KAAuB,GAK3BzxB,KAAKye,IAAM3e,OAAAoS,EAAA,EAAApS,GACXE,KAAK0E,MAAQA,EACb1E,KAAKsqC,UAAU5lC,GACf1E,KAAK44B,cAAgBl0B,EAAMk0B,cAC3B54B,KAAKQ,SAAWR,KAAKQ,SAASyE,KAAKjF,MAG7Bi1B,eACN,IAAIp0B,EAAMb,KAAKyxB,KAAKrpB,IAAI,CAACb,EAAGc,IAAUA,EAAQ,KAAOd,EAAE0tB,SAAW,MAElE,OADA/xB,QAAQC,IAAItC,GACLb,KAAKyxB,KAAK8Y,KAAK7Y,GAAOA,EAAIuD,UAE3BoB,cAEN,OADUr2B,KAAKyxB,KAAK+Y,MAAM9Y,IAAQA,EAAIwD,QAI1C11B,aACI,IAAIiB,EAAS,GACb,IAAK,IAAIixB,KAAO1xB,KAAKyxB,KACjBC,EAAI0E,WAAW31B,GAEnB,OAAOA,EAGXjB,QACI,IAAK,IAAIkyB,KAAO1xB,KAAKyxB,KACjBC,EAAInrB,QAIZ/G,cACI,IAAK,IAAIkyB,KAAO1xB,KAAKyxB,KACjBC,EAAIiE,cAIZn2B,SAASuyB,EAAkB7rB,GACvB,IAAK,IAAIwrB,KAAO1xB,KAAKyxB,KACjBC,EAAIjO,SAASsO,EAAW7rB,GAIhC1G,cAAcoyB,GACV,QAAmBrwB,IAAfqwB,EACJ,IAAK,IAAIF,KAAO1xB,KAAKyxB,KACjBC,EAAIqU,cAAcnU,GAIlBpyB,UAAUkF,GACd,IAAI+lC,SAACA,EAAQC,UAAEA,GAAahmC,EAC5B,QAAiBnD,IAAbkpC,EAAwB,CACxB,IAAK,IAAI/Y,KAAO+Y,EACZzqC,KAAKyxB,KAAKjrB,KAAKxG,KAAK2qC,SAASjZ,EAAKgZ,KAEV,IAAxB1qC,KAAK0E,MAAM2nB,WACXrsB,KAAK4qC,WAAa5qC,KAAK2qC,SAAS,CAAC/R,cAAc54B,KAAK6qC,cAAc5lC,KAAKjF,YAAQuB,SAInFvB,KAAKyxB,KAAKjrB,KAAK1G,OAAAgrC,EAAA,EAAAhrC,CAAiBE,KAAMyE,EAAA,qBAAKwD,UAAU,gBAAc,qCAInEzI,SAASurC,EAAkBC,GAC/B,IAAIN,EAaJ,YAXanpC,IADDwpC,EAAwBljC,KAEhC6iC,EAAYI,EAAA,OAIMvpC,KADlBmpC,EAAaK,EAA+CL,iBAGtCnpC,KADlBmpC,EAAYM,KACiBN,EAAYI,EAAA,GAGvCJ,EAAU1qC,KAAM+qC,GAItBvrC,cAAckC,EAAegwB,GACjC,OAAO,IAAIuZ,EAAA,EAAevpC,GAGtBlC,OACJ,IAAI8pB,GAAO,EACX,IAAK,IAAIoI,KAAO1xB,KAAKyxB,KACZC,EAAIpI,SAAQA,GAAO,GAE5B,OAAOA,EAGX9pB,SACI,OAAOiF,EAAA,sBAAMjE,SAAUR,KAAKQ,UACvBR,KAAKyxB,KAAKrpB,IAAI,CAACspB,EAAIrpB,IAAUqpB,EAAIpP,OAAOtiB,KAAKye,IAAMpW,IACnDrI,KAAKkrC,WAId1rC,UACI,QAAwB+B,IAApBvB,KAAK4qC,WACT,OAAO5qC,KAAK4qC,WAAWtoB,OAAOtiB,KAAKye,IAAMze,KAAKyxB,KAAK7rB,QAGjDpG,SAAS6e,2CAEX,GADAA,EAAMgP,kBACDrtB,KAAKspB,OAAQ,OAClB,IAAI7oB,EAAST,KAAKo2B,mBACZp2B,KAAK0E,MAAMlE,SAASC,MAvGpB+N,EAAA,CAATC,EAAA,gCAKSD,EAAA,CAATC,EAAA,2YCvDE,MAAM08B,UAAaC,EAAA,WAStB5rC,YAAY6rC,EAAiB1rC,GACzBE,MAAMC,OAAAsrC,EAAA,QAAAtrC,CAAQH,GAAMA,EAAGC,MANnBI,KAAAsrC,WAAiC,GAkBzCtrC,KAAAurC,cAAoC,GAmOpCvrC,KAAAqmB,UAAY,EAACvf,EAAWuB,KACpB,IAAI/E,GAACA,EAAEyjC,KAAEA,EAAI7mC,KAAEA,GAAQ4G,EACvB,OAAOrC,EAAA,cAAC+mC,EAAA,IAAG,CAACvjC,UAAU,YAAYyT,MAAO,OAASpY,GAC9CmB,EAAA,yBAAMsiC,GAAQ7mC,MAGtBF,KAAAyrC,WAAa,CAAO3kC,GAAanE,EAAA3C,UAAA,qBAC7BorC,EAAA,UAAUthC,KAAOhD,EAAKxD,SAChBtD,KAAK0F,WAGL1F,KAAA0rC,eAAiB,KAChBjnC,EAAA,cAAC2mC,EAAA,KAAI,CAAC/gC,OAAO,2BAAOqC,QAAQ,GAC/BjI,EAAA,cAAC+mC,EAAA,KAAI,CAACxpC,MAAOhC,KAAK2rC,SAAU7kC,KAAM,CAACwb,OAAQtiB,KAAKqmB,UAAW5Z,QAASzM,KAAKyrC,gBA3P7E,IAAI95B,EAAQ05B,EAASz5B,MAAM,KAC3B,GAAqB,IAAjBD,EAAM/L,OACN,KAAM,+CAEV5F,KAAKoS,SAAWT,EAAM,GACtB3R,KAAKqS,QAAUV,EAAM,GACrB3R,KAAKL,GAAKA,GAAM,CAAC6S,IAAI,IACrBxS,KAAKwpB,QAAUxpB,KAAKJ,IAAI4pB,SAAW,QAMjChqB,qDACF,IAAI6S,EAAUrS,KAAKoS,SAAW,IAAMpS,KAAKqS,QACrCstB,EAAO,IAAIwL,EAAK94B,EAAS,CAACG,IAAI,WAE5BmtB,EAAKj6B,OADa,KAIZlG,kDACZ,IAAIsgC,EAAqB,GAErBa,GADOyK,EAAA,UAAUthC,WACLhK,OAAAsrC,EAAA,WAAAtrC,CAAWE,KAAKoS,SAAUpS,KAAKqS,WAC3C/O,GAACA,EAAEkP,IAAEA,GAAOmuB,EAChB3gC,KAAKsD,GAAKA,EAEV,IAAIod,EAAkC,GAClCkrB,EAAwC,GAC5C,IAAK,IAAIj5B,KAASH,EAAK,CACnB,IAAKlP,GAAGyhC,EAAIlyB,QAAEA,EAAOC,OAAEA,EAAMvI,IAAEA,EAAGyI,SAAEA,EAAQ3J,GAAEA,EAAEyN,OAAEA,EAAMlL,MAAEA,GAAS+G,EAC/DC,EAAKC,EAAU,IAAMC,EACrBnT,EAAKK,KAAKL,IAAMK,KAAKL,GAAG6S,KAAOxS,KAAKL,GAAG6S,IAAII,GAC3CnT,EAAMO,KAAK6rC,OAAOj5B,EAAImyB,EAAMjuB,EAAQnX,GAAM,IAC9CK,KAAKurC,cAAc34B,GAAMnT,EACzBihB,EAASla,KAAK/G,EAAIc,cAClBqrC,EAAcplC,KAAK/G,EAAIg7B,SAASlqB,MAAMgH,eAE1C,IAAI0J,QAAgBtT,QAAQuT,IAAIR,GAChC/S,QAAQuT,IAAI0qB,GAAet/B,KAAMw/B,IAC7B,IAAK,IAAIxxB,KAAKwxB,EACV,IAAU,IAANxxB,EAEA,YADA8wB,EAAA,IAAI1lC,UAKhB,IAAK,IAAIgP,KAAUuM,EACnB,CACI,IAAI8qB,EAAWr3B,OACEnT,IAAbwqC,GACAjM,EAAUt5B,KAAKulC,GAIvB,GAAyB,IAArBjM,EAAUl6B,OACd,OAAOk6B,IAGLtgC,YAAYqT,EAAgBC,2CAC9B,IAAIF,EAAKC,EAAU,IAAMC,EACrBrT,EAAMO,KAAKsrC,WAAW14B,GAC1B,QAAYrR,IAAR9B,EAAmB,OAAOA,EAC9B,IAAIE,EAAKK,KAAKL,IAAMK,KAAKL,GAAG6S,KAAOxS,KAAKL,GAAG6S,IAAII,GAE/C5S,KAAKsrC,WAAW14B,GAAMnT,EAAMO,KAAK6rC,OAAOj5B,GAD5B,OACsCrR,EAAW5B,GAAM,IACnE,IAAIosC,QAAiBtsC,EAAIc,aACzB,QAAiBgB,IAAbwqC,EAKJ,OAAOtsC,EAJHyD,QAAQgD,MAAM6lC,KAOZvsC,OAAOoT,EAAWmyB,EAAajuB,EAAenX,GACpD,IAAIF,EAAM,IAAKO,KAAKL,GAAGqsC,KAAOC,EAAA,GAAKjsC,KAAM4S,EAAI5S,KAAKsD,GAAIyhC,EAAMjuB,EAAQnX,GAEpE,OADAG,OAAOC,eAAeN,EAAIQ,EAAGD,KAAKC,GAC3BR,EAGXysC,aACI,IAAIrrC,EAAY,GAChB,IAAK,IAAIqG,KAAKlH,KAAKurC,cACf1qC,EAAI2F,KAAKxG,KAAKurC,cAAcrkC,IAEhC,OAAOrG,EAGXrB,OAAO+T,GACH,OAAOvT,KAAKurC,cAAch4B,GAG9B44B,eAA0C,OAAQnsC,KAAKL,IAAIK,KAAKL,GAAGwoC,MAASgE,EAC5D3sC,sDAEZ,IACI,IAAIsL,EAAOC,SAASC,SAASF,KACzBA,EAAKK,WAAW,YAChBnL,KAAKosC,cAAe,EAKpBpsC,KAAKosC,aAAethC,EAAKK,WAAW,OAExC,IAAIrB,KAACA,GAAQshC,EAAA,UACb,IAA0B,IAAtBprC,KAAKosC,oBAAkC7qC,IAAPuI,GAAoBA,GAAM,GAAI,CAC9D,IAAI62B,QAAY7gC,OAAAsrC,EAAA,WAAAtrC,CAAWE,KAAKoS,SAAUpS,KAAKqS,UAC3C/O,GAACA,GAAMq9B,EAGX,OAFA3gC,KAAKsD,GAAKA,QACJtD,KAAKqsC,eACHrsC,KAAK2rC,SAAS/lC,QAClB,KAAK,EAED,OADA5F,KAAKssC,iBACE,EACX,KAAK,EAED,QAAa/qC,KADbuI,EAAO9J,KAAK2rC,SAAS,GAAGroC,KACEwG,EAAO,EAE7B,OADA9J,KAAKssC,iBACE,EAEXlB,EAAA,UAAUthC,KAAOA,EACjB,MACJ,QAGI,OADAshC,EAAA,IAAI5kC,KAAK/B,EAAA,cAACzE,KAAK0rC,eAAc,QACtB,GAInB,IAAI5L,QAAkB9/B,KAAKusC,UAC3B,YAAkBhrC,IAAdu+B,IACA9/B,KAAKoiB,SAAS3d,EAAA,cAAC2mC,EAAA,KAAI,CAAC/gC,OAAO,SACvB5F,EAAA,qBAAKwD,UAAU,OACXxD,EAAA,oEACCq7B,EAAU13B,IAAI,CAAC4iB,EAAG9jB,IAAMzC,EAAA,qBAAKkC,IAAKO,GAAI8jB,QAGxC,GAIf,MAAO/kB,GAMH,OALAmlC,EAAA,IAAI5kC,KAAK/B,EAAA,cAAC2mC,EAAA,KAAI,CAAC/gC,OAAO,oBAClB5F,EAAA,yBACoB,kBAARwB,EAAkBA,EAAMA,EAAI6B,YAGrC,KAICtI,cAAcuD,4CACZ,IAAVA,GACA/C,KAAKwsC,uBAEHxsC,KAAKysC,iBAETjtC,qDACIQ,KAAK0sC,gBAGfltC,SACI,OAAOQ,KAAK2sC,WAAW3sC,KAAKmsC,UAKtB3sC,iBACN4rC,EAAA,IAAI7kC,QAGA/G,gBACJQ,KAAKwsC,iBACL,IAAI7jC,KAACA,GAAQyiC,EAAA,IACTwB,EAAkBjkC,EAAMA,EAAKzI,KAAO,uBACxCF,KAAKoiB,SAAS3d,EAAA,cAAC2mC,EAAA,KAAI,CAAC/gC,OAAO,8BAAUqC,QAAQ,GACzCjI,EAAA,qBAAKwD,UAAU,6BACXxD,EAAA,qBAAKwD,UAAU,kBACXxD,EAAA,qBAAKwD,UAAU,SACXxD,EAAA,cAAC+mC,EAAA,GAAE,CAACtrC,KAAK,0BAEbuE,EAAA,qBAAKwD,UAAU,OAAK,sCAIxBxD,EAAA,qBAAKwD,UAAU,kBACXxD,EAAA,qBAAKwD,UAAU,SAAO,kBACtBxD,EAAA,qBAAKwD,UAAU,OAAO2kC,IAE1BnoC,EAAA,qBAAKwD,UAAU,kBACXxD,EAAA,qBAAKwD,UAAU,SAAO,QACtBxD,EAAA,qBAAKwD,UAAU,UAAUjI,KAAKoS,YAAYpS,KAAKqS,eAMjD7S,uDAEV,IAAImS,EAAQ5G,SAASC,SAASF,KAAK8G,MAAM,KACzC,GAAID,EAAM/L,OAAS,EAAG,CAClB,IAAIsP,EAASvD,EAAM,GAEnB,GAAe,UAAXuD,GAAiC,gBAAXA,EAA0B,CAChD,IAAI6vB,EAAOlzB,OAAOF,EAAM,IACpBk7B,EAAch7B,OAAOF,EAAM,IAC3BjE,EAAUmE,OAAOF,EAAM,IACvBlS,EAAMO,KAAK8sC,aAAa/H,GAC5B,YAAYxjC,IAAR9B,OACAmmB,MAAM,iBAAmBmf,IAG7B/kC,KAAKwsC,4BACC/sC,EAAIstC,SAASF,EAAan/B,MAIxC1N,KAAK8nB,UAAU9nB,KAAKmsC,YAGhB3sC,aAAaulC,GACjB,IAAK,IAAI79B,KAAKlH,KAAKurC,cAAe,CAC9B,IAAI9rC,EAAMO,KAAKurC,cAAcrkC,GAC7B,GAAIzH,EAAI6D,KAAOyhC,EAAM,OAAOtlC,GAKtBD,uDACV,IAAIqB,QAAYmsC,EAAA,EAAUC,aAAajtC,KAAKsD,IAC5CtD,KAAK2rC,SAAW9qC,EACG,IAAfA,EAAI+E,SACJwlC,EAAA,UAAUthC,KAAOjJ,EAAI,GAAGyC,OAsBpC,MAAM6oC,UAAiBf,EAAA,MAAvB5rC,kCAgBcQ,KAAAktC,WAAa,MACnB,IACI3qC,GADA2pC,OAACA,GAAUlsC,KAAK6D,WAUpB,OAPItB,EADkB,IAAlB2pC,EAAOtmC,OACGnB,EAAA,qBAAKwD,UAAU,eACrBxD,EAAA,cAAC+mC,EAAA,GAAE,CAACtrC,KAAK,+DAIHgsC,EAAO9jC,IAAI,CAACb,EAAEL,IAAMzC,EAAA,qBAAKkC,IAAKO,GAAIK,EAAE+a,WAE3C7d,EAAA,cAAAA,EAAA,cAAGlC,KA1BR/C,KAAKuD,2CACP/C,KAAKoiB,SAASpiB,KAAKmtC,WAGvB3tC,OAAOuD,GACH,OAAO/C,KAAKktC,aAGN1tC,UACN,IAAIgqB,QAACA,GAAWxpB,KAAK6D,WACrB,OAAOY,EAAA,cAAC2mC,EAAA,KAAI,CAAC/gC,OAAQmf,EAAS9c,OAAQ,KAAK0+B,EAAA,UAAUthC,UAAOvI,IACvDvB,KAAKktC,8CCtSlB7uC,EAAAC,EAAAC,EAAA,sBAAA6uC,IAAA,IAAA3oC,EAAApG,EAAA,GAAAgvC,EAAAhvC,EAAA+gB,EAAA3a,GAAA6oC,EAAAjvC,EAAA,GAGA,SAASgC,EAAK4H,EAAkB/H,GAC5B,OAAOmtC,EAAAh6B,EAAA6Q,cAACopB,EAAA,GAAE,CAACrlC,UAAWA,EAAW/H,KAAMA,EAAMqtC,UAAU,IASpD,MAAMH,EAA0C,CACnDnnB,KAAM5lB,EAAK,YAAa,YACxB6U,OAAQ7U,EAAK,YAAa,gBAC1B+H,IAAK/H,EAAK,aAAc,WACxBwkC,KAAMxkC,EAAK,aAAc,QACzB+hC,MAAO/hC,EAAK,eAAgB,UAC5BoG,QAASpG,EAAK,YAAa,gBAC3BykC,QAASzkC,EAAK,YAAa,WAC3ByN,MAAOzN,EAAK,eAAgB,0CCrBhChC,EAAAC,EAAAC,EAAA,sBAAAivC,IAAA,IAAA5pC,EAAAvF,EAAA,GAGO,MAAemvC,UAAqB5pC,EAAA,WACvCpE,YAAYC,EAAUG,GAClBC,MAAMD,GACNI,KAAKP,IAAMA,kVCIZ,MAAMguC,EAAY,IANlB,cAAwB7pC,EAAA,UACrBpE,aAAamhC,2CACf,aAAa3gC,KAAKmJ,IAAI,qBAAsB,CAACw3B,IAAIA,QAIlB,WAAOp/B,6VCFvC,MAAMmsC,UAAmB1rB,EAAA,EAAhCxiB,kCAKIQ,KAAA2tC,SAAW,KAAM3tC,KAAKqe,MAAM,QAC5Bre,KAAA4tC,YAAc,KAAM5tC,KAAKqe,MAAM,WAC/Bre,KAAA6tC,cAAgB,KAAM7tC,KAAKqe,MAAM,aACjCre,KAAA8tC,gBAAkB,CAAC1oC,GAAUpF,KAAKqe,MAAM,QAASjZ,IAEjDpF,KAAA+tC,YAAc,EAACjnC,EAAUuB,KACrB,IAAIjD,MAACA,EAAKs8B,MAAEA,GAAS56B,EACrB,GAAc,IAAV46B,EAAa,OAAO,KACxB,IAAIsM,EAAQt+B,EAAA,sBAAMzH,UAAU,2CAA2Cy5B,GACvE,OAAOhyB,EAAA,cAACiT,EAAA,IAAG,CAAC1a,UAAU,YAAY0kB,KAAM3sB,KAAK6D,WAAWoqC,cAAc7oC,GAAQsW,MAAOsyB,MAG/EhuC,KAAAqG,KAAOvG,OAAAwP,EAAA,EAAAxP,CAAS,KACtB,IAEIouC,EAFA7f,EAAOruB,KAAK6D,WAAWsqC,YAAYC,OAAO1c,GAAKA,EAAIgQ,OACnDhmB,EAAQhM,EAAA,wBAAQzH,UAAU,0BAA0BwE,QAASzM,KAAK6tC,eAAa,sBAKnF,OAHmB,IAAf7tC,KAAKquC,QACLH,EAAUx+B,EAAA,wBAAQzH,UAAU,uBAAuBwkB,MAAM,UAAUhgB,QAASzM,KAAK4tC,aAAW,iBAEzFl+B,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQrK,KAAKI,OACtBsP,EAAA,cAACiT,EAAA,IAAG,CACA1a,UAAU,YACVyT,MAAOA,GACPhM,EAAA,wBAAQzH,UAAU,uBAAuBwkB,MAAM,UAAUhgB,QAASzM,KAAK2tC,UAAQ,gBAC9EO,GAELx+B,EAAA,cAACiT,EAAA,KAAI,CAAC1a,UAAU,OACZoC,OAAQqF,EAAA,cAACiT,EAAA,MAAK,CAAC1a,UAAU,kCAAgBjI,KAAKI,OAC9CY,KAAK,aACLgB,MAAOqsB,EACPvnB,KAAM,CAACwb,OAAOtiB,KAAK+tC,YAAathC,QAAQzM,KAAK8tC,sBAlCnDtuC,+CACFQ,KAAKoiB,SAASpiB,KAAKqG,kRCFpB,MAAMioC,UAAkBtsB,EAAA,EAA/BxiB,kCAQYQ,KAAAQ,SAAW,KAA0B+tC,EAAAvuC,UAAA,qBACzC,IAAIS,EAAST,KAAKkjB,MAAMI,YACpBkrB,EAAgBxuC,KAAKkjB,MAAMziB,aAEzBT,KAAK6D,WAAW4qC,OAAOhuC,EAAQ+tC,MAQ/BxuC,KAAAqG,KAAO,KAAMqJ,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQrK,KAAKI,OACrCJ,KAAKkjB,MAAMZ,WAlBV9iB,KAAKuD,2CACP/C,KAAKkjB,MAAQljB,KAAK8D,WAAW9D,KAAKQ,SAAUuC,GAC5C/C,KAAKoiB,SAASpiB,KAAKqG,qBCN3B,MAAMqoC,EAAgB,CAACC,MAAO,QAEvB,MAAeC,UAAmB5sB,EAAA,EAAzCxiB,kCAOIQ,KAAA6uC,QAAU,EAAC/nC,EAAUuB,KACjB,IAEIi0B,GAFAnuB,KAACA,EAAIxF,KAAEA,EAAImmC,SAAEA,EAAQ1pC,MAAEA,EAAK8P,OAAEA,GAAUpO,EAG5C,YAFevF,IAAX2T,IAAsBA,EAASxF,EAAA,cAAAA,EAAA,cAAEA,EAAA,cAACiT,EAAA,GAAE,CAAC1a,UAAU,eAAe/H,KAAK,sCAE/DkF,GACJ,IAAK,IAAK,MACV,IAAK,IAAKk3B,EAAK5sB,EAAA,cAAAA,EAAA,cAAEA,EAAA,cAACiT,EAAA,GAAE,CAAC1a,UAAU,eAAe/H,KAAK,oBAAwB,MAC3E,QAASo8B,EAAK5sB,EAAA,cAAAA,EAAA,cAAEA,EAAA,cAACiT,EAAA,GAAE,CAAC1a,UAAU,aAAa/H,KAAK,yBAAyBkF,GAS7E,OAAOsK,EAAA,cAACiT,EAAA,IAAG,CACPgK,KAAMjd,EAAA,qBAAKzH,UAAU,YAAYK,MAAOomC,GAAgBx5B,GACxDwG,MAAOhM,EAAA,qBAAKzH,UAAU,OAAMyH,EAAA,cAACiT,EAAA,MAAK,KAACjT,EAAA,cAACiT,EAAA,SAAQ,CAACxU,KAAMA,OACnDuB,EAAA,qBAAKzH,UAAU,OAAOq0B,MAIpBt8B,KAAA+uC,UAAY,MAClB,IACIC,GADAlO,MAACA,EAAKE,MAAEA,GAAShhC,KAAKivC,UAI1B,MAFoB,MAAhBnO,EAAM17B,QACN4pC,EAAUt/B,EAAA,qBAAKzH,UAAU,YAAYK,MAAO,CAACmkB,MAAM,QAAM,mCACtD/c,EAAA,yBACFs/B,EACAhvC,KAAKkjB,MAAMZ,SAEZ5S,EAAA,cAACiT,EAAA,KAAI,CAACtY,OAAQqF,EAAA,cAACiT,EAAA,MAAK,CAAC1a,UAAU,aAAW,gBACtCjG,MAAOg/B,EACPl6B,KAAM,CAACwb,OAAOtiB,KAAK6uC,wRC5C5B,MAAMK,UAAmBN,EAAhCpvC,kCAQIQ,KAAAQ,SAAW,KAA0B2uC,EAAAnvC,UAAA,qBACjC,IAAIS,EAAST,KAAKkjB,MAAMI,kBAClBtjB,KAAK6D,WAAWurC,UAAU3uC,EAAQT,KAAKkjB,MAAMziB,QACnDT,KAAKojB,YACLpjB,KAAK2jB,WAAW3jB,KAAKkjB,MAAMziB,WAGrBT,KAAAqG,KAAO,KAAMqJ,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQrK,KAAKI,OACrCJ,KAAKkjB,MAAMZ,WAdV9iB,KAAKuD,2CACP/C,KAAKivC,UAAYlsC,EACjB/C,KAAKkjB,MAAQljB,KAAK8D,WAAW9D,KAAKQ,SAAUuC,EAAM0Q,KAAM47B,EAAA,EAAStnB,MACjE/nB,KAAKoiB,SAASpiB,KAAKqG,kSCJpB,MAAMipC,UAAqBV,EAAlCpvC,kCAYIQ,KAAAuvC,YAAc,CAAOr6B,GAAes6B,EAAAxvC,UAAA,qBAChC,IAAIsD,GAACA,EAAEs9B,KAAEA,EAAIx7B,MAAEA,GAASpF,KAAKivC,UAAUnO,YACvB9gC,KAAK6D,WAAWqR,OAAO5R,EAAIs9B,EAAMx7B,EAAO8P,EAAOhV,MAC/DF,KAAK4kB,YACL5kB,KAAKoiB,SAASpiB,KAAKyvC,UAKvBzvC,KAAA0vC,YAAc,KAAYF,EAAAxvC,UAAA,qBACtB4lB,MAAM,+EAGV5lB,KAAA2vC,UAAY,KAAYH,EAAAxvC,UAAA,qBAEpB,IAAIS,QAAeT,KAAK6D,WAAW+rC,UAAU5vC,KAAKivC,WAClDjvC,KAAKkjB,MAAMniB,UAAUN,MAGfT,KAAA8R,KAAO,MACb,IAKI+9B,EAAeC,GALfhP,MAACA,GAAS9gC,KAAKivC,WACf7pC,MAACA,EAAK2qC,GAAEA,GAAMjP,EACdkP,EAAahwC,KAAK6D,WAAWoqC,cAAc7oC,IAC3Cg7B,OAACA,GAAUpgC,KAAKN,OAChB+hC,EAAIrB,EAAO94B,KAAKC,GAAKA,EAAErH,OAASkF,GAEpC,QAAU7D,IAANkgC,EAAiB,CACjB,IAAIlgB,EAAatF,EACjB,OAAQ7W,GACJ,QACImc,EAAO,oDAAenc,EAAQ,IAC9B6W,EAAK,YACL,MACJ,IAAK,IACDsF,EAAO,qBACPtF,EAAK,cACL,MACJ,IAAK,IACDsF,EAAO,qBACPtF,EAAK,eAGb4zB,EAAgB5rB,EAAA5Q,EAAA6Q,cAAA,OAAKjc,UAAW4U,IAAWZ,QAAOsF,YAGlDsuB,EAAgB5rB,EAAA5Q,EAAA6Q,cAAA,OAAKjc,UAAU,eAAew5B,EAAElB,QAAQn4B,IAAI,CAACb,EAAEc,IAC3D4b,EAAA5Q,EAAA6Q,cAAA,UACIvd,IAAK0B,EACLJ,UAAU,uBACVwE,QAAS,IAAIzM,KAAKuvC,YAAYhoC,IAE7BvH,KAAK6D,WAAWosC,eAAe7qC,EAAOmC,EAAErH,SAGnC,MAAVkF,IACA0qC,EAAe7rB,EAAA5Q,EAAA6Q,cAAA,WACXD,EAAA5Q,EAAA6Q,cAAA,UAAQjc,UAAU,4BAA4BwE,QAASzM,KAAK2vC,WAAS,gBACrE1rB,EAAA5Q,EAAA6Q,cAAA,UAAQjc,UAAU,8BAA8BwE,QAASzM,KAAK0vC,aAAW,kBAIrF,OAAOzrB,EAAA5Q,EAAA6Q,cAACxB,EAAA,KAAI,CAACrY,OAAQrK,KAAKI,MAAQ,IAAM4vC,EAAa,IAAMD,GACvD9rB,EAAA5Q,EAAA6Q,cAAA,OAAKjc,UAAU,QACXgc,EAAA5Q,EAAA6Q,cAAA,OAAKjc,UAAU,2CACV4nC,EACAC,GAEL7rB,EAAA5Q,EAAA6Q,cAAClkB,KAAK+uC,UAAS,UAKnB/uC,KAAAyvC,MAAQ,MACZ,IAAIjP,YAACA,GAAexgC,KAAKivC,UAAUnO,MACnC,OAAO7c,EAAA5Q,EAAA6Q,cAACxB,EAAA,KAAI,CAACrY,OAAO,qBAAMrF,KAAK,SAC3Bif,EAAA5Q,EAAA6Q,cAAA,OAAKjc,UAAU,6CACXgc,EAAA5Q,EAAA6Q,cAAA,OAAKjc,UAAU,OAAOu4B,GACtBvc,EAAA5Q,EAAA6Q,cAAA,OAAKjc,UAAU,gBAAegc,EAAA5Q,EAAA6Q,cAACvB,EAAA,GAAE,CAACziB,KAAK,4DACvC+jB,EAAA5Q,EAAA6Q,cAAA,OAAKjc,UAAU,OACXgc,EAAA5Q,EAAA6Q,cAAA,UAAQjc,UAAU,uBAAuBwE,QAAS,IAAIzM,KAAKkwC,YAAU,qBA1F/E1wC,KAAKyvC,2CACPjvC,KAAKivC,UAAYA,EAMjBjvC,KAAKkjB,MAAQljB,KAAK8D,gBAAWvC,EAAW0tC,EAAUx7B,MAClDzT,KAAKoiB,SAASpiB,KAAK8R,kRCVpB,MAAMq+B,UAAqBnuB,EAAA,EAAlCxiB,kCAKcQ,KAAAqG,KAAO,KAAMqJ,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQrK,KAAKI,MAAQ,gBAC9CsP,EAAA,qBAAKzH,UAAU,aAAajI,KAAKN,OAAO0wC,qBALtC5wC,KAAKuD,2CACP/C,KAAKoiB,SAASpiB,KAAKqG,kRCDpB,MAAMgqC,UAAkBruB,EAAA,EAA/BxiB,kCAQIQ,KAAAswC,aAAe,CAAOxP,GAAcyP,EAAAvwC,UAAA,qBACT,IAAnB8gC,EAAM0P,YACVxwC,KAAKqe,MAAM,WAAYyiB,MAE3B9gC,KAAAywC,WAAa,EAAC/e,EAASrpB,KACnB,IAAI/E,GAACA,EAAEysC,GAAEA,EAAEvP,YAAEA,EAAWryB,KAAEA,GAAQujB,EAC9B/E,EAAOjd,EAAA,cAAAA,EAAA,cACW,IAAjBgiB,EAAI8e,WAAgB,OAAS,GAC7B9e,EAAIqe,YAAYre,EAAI8O,aAErB9kB,EAAQhM,EAAA,cAACiT,EAAA,MAAK,KAACjT,EAAA,cAACiT,EAAA,SAAQ,CAACxU,KAAMA,KACnC,OAAOuB,EAAA,cAACiT,EAAA,IAAG,CAAC1a,UAAU,YAAY0kB,KAAMA,EAAMjR,MAAOA,MAG/C1b,KAAAqG,KAAO,KACNqJ,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQ,qBAAQrK,KAAKI,OAC9BsP,EAAA,cAACiT,EAAA,KAAI,CAAC3gB,MAAOhC,KAAKquB,KAAMvnB,KAAM,CAACwb,OAAOtiB,KAAKywC,WAAYhkC,QAAQzM,KAAKswC,kBArBtE9wC,+CACFQ,KAAKquB,WAAaruB,KAAKN,OAAOgxC,iBAAYnvC,EAAW,IACrDvB,KAAKoiB,SAASpiB,KAAKqG,kRCLpB,MAAMsqC,UAAmB3uB,EAAA,EAAhCxiB,kCAcIQ,KAAA4wC,SAAW,CAAO9P,GAAc+P,EAAA7wC,UAAA,qBACL,IAAnB8gC,EAAM0P,WAIVxwC,KAAKqe,MAAM,SAAUyiB,EAAMx9B,IAHvBtD,KAAKqe,MAAM,aAAcyiB,EAAMx9B,OAM/BtD,KAAAia,eAAiB,MACrB/W,QAAQC,IAAI,kBACZnD,KAAK6D,WAAWitC,eAAehP,SAGzB9hC,KAAAolB,WAAa,CAACsM,IACpB,IAAIpuB,GAACA,EAAEysC,GAAEA,EAAEvP,YAAEA,EAAWryB,KAAEA,EAAIqiC,WAAEA,GAAc9e,EAC1C/E,EAAOjd,EAAA,cAAAA,EAAA,cACNqgC,WAAWrgC,EAAA,cAACiT,EAAA,MAAK,KAAE6d,OAAmC,IAAbgQ,EAAgB,MAAQ,IAElE90B,EAAQhM,EAAA,cAACiT,EAAA,MAAK,KAACjT,EAAA,cAACiT,EAAA,SAAQ,CAACxU,KAAMA,KACnC,OAAOuB,EAAA,cAACiT,EAAA,IAAG,CAAC1a,UAAU,YAAY0kB,KAAMA,EAAMjR,MAAOA,MAGjD1b,KAAAqmB,UAAY,EAACqL,EAASrpB,IAAiBqH,EAAA,cAAC1P,KAAK0xB,IAAG5xB,OAAAqI,OAAA,GAAKupB,KAEnD1xB,KAAAqG,KAAO,MAEb,IAAIyqC,eAACA,GAAkB9wC,KAAK6D,WAC5B,OAAO6L,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQrK,KAAKI,MAAQ,MAAQJ,KAAKgwC,WAAY/1B,eAAgBja,KAAKia,gBAC5EvK,EAAA,cAACiT,EAAA,KAAI,CAAC3gB,MAAO8uC,EAAgBhqC,KAAM,CAACwb,OAAOtiB,KAAKqmB,UAAW5Z,QAAQzM,KAAK4wC,eArC1EpxC,KAAKsH,2CACP9G,KAAK0xB,IAAM1xB,KAAKL,GAAGoxC,SAAW/wC,KAAKolB,WACnCplB,KAAKgxC,UAAYlqC,EAAK1B,MACtBpF,KAAKgwC,WAAahwC,KAAK6D,WAAWoqC,cAAcjuC,KAAKgxC,iBAE/ChxC,KAAK6D,WAAWitC,eAAe9pB,MAAMhnB,KAAKgxC,WAChDhxC,KAAKoiB,SAASpiB,KAAKqG,kRCTpB,MAAM4qC,UAAkBrC,EAA/BpvC,kCAgBcQ,KAAAqG,KAAO,MACb,IAAIy6B,MAACA,GAAS9gC,KAAKivC,UACnB,OAAOv/B,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQrK,KAAKI,MAAQ,KAAY0gC,EAAMiP,IAChDrgC,EAAA,cAAC1P,KAAK+uC,UAAS,SAfjBvvC,KAAKyvC,2CACPjvC,KAAKivC,UAAYA,EAOjBjvC,KAAKkjB,MAAQljB,KAAK8D,gBAAWvC,EAAWvB,KAAKivC,UAAUx7B,MACvDzT,KAAKoiB,SAASpiB,KAAKqG,SClBpB,MAAe6qC,UAAelvB,EAAA,4QCC9B,MAAMmvB,UAAoBD,EAAjC1xC,kCAOYQ,KAAAoxC,QAAU,KAAYC,EAAArxC,UAAA,qBAC1BA,KAAK4kB,kBACC5kB,KAAKqe,MAAM,UAGrBre,KAAAuvC,YAAc,CAAOr6B,GAAem8B,EAAArxC,UAAA,qBAChCA,KAAK4kB,YACL,IAAIthB,GAACA,EAAEs9B,KAAEA,EAAIx7B,MAAEA,GAASpF,KAAK8gC,YACb9gC,KAAK6D,WAAWqR,OAAO5R,EAAIs9B,EAAMx7B,EAAO8P,EAAOhV,MAC/DF,KAAKoiB,SAASpiB,KAAKyvC,UAGfzvC,KAAAkrC,QAAUx7B,EAAA,cAAAA,EAAA,cACdA,EAAA,wBAAQzH,UAAU,+BAA+BwE,QAASzM,KAAKoxC,SAAO,4BACtE1hC,EAAA,wBAAQzH,UAAU,uBAAuBwE,QAAS,IAAIzM,KAAKkwC,YAAU,iBAGjElwC,KAAAqG,KAAO,MACX,IAAI+5B,OAACA,GAAUpgC,KAAKN,OAEpB,IAAI+hC,EAAIrB,EAAO94B,KAAKC,GADN,MACWA,EAAErH,MACvB2vC,EAAgBngC,EAAA,cAAAA,EAAA,cAAG+xB,EAAElB,QAAQn4B,IAAI,CAACb,EAAEc,IACpCqH,EAAA,wBACI/I,IAAK0B,EACLJ,UAAU,uBACVwE,QAAS,IAAIzM,KAAKuvC,YAAYhoC,IAE7BvH,KAAK6D,WAAWosC,eARX,IAQiC1oC,EAAErH,SAGjD,OAAOwP,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAO,qBAAMrF,KAAK,SAC3B0K,EAAA,qBAAKzH,UAAU,6CACXyH,EAAA,qBAAKzH,UAAU,gBAAeyH,EAAA,cAACiT,EAAA,GAAE,CAACziB,KAAK,gGACvCwP,EAAA,qBAAKzH,UAAU,OACV4nC,EACA7vC,KAAKkrC,aAMdlrC,KAAAyvC,MAAQ,KACL//B,EAAA,cAACgT,EAAA,KAAI,KACRhT,EAAA,qBAAKzH,UAAU,6CACXyH,EAAA,qBAAKzH,UAAU,gBAAeyH,EAAA,cAACiT,EAAA,GAAE,CAACziB,KAAK,4DACvCwP,EAAA,qBAAKzH,UAAU,OACVjI,KAAKkrC,YAnDhB1rC,KAAKshC,2CACP9gC,KAAK8gC,MAAQA,EACb9gC,KAAKoiB,SAASpiB,KAAKqG,kRCJpB,MAAMirC,UAAyB1C,EAAtCpvC,kCAYcQ,KAAA8R,KAAO,MACb,IAAIgvB,MAACA,GAAS9gC,KAAKivC,WACf7pC,MAACA,EAAK2qC,GAAEA,GAAMjP,EACdkP,EAAahwC,KAAK6D,WAAWoqC,cAAc7oC,GAC/C,OAAO6e,EAAA5Q,EAAA6Q,cAACxB,EAAA,KAAI,CAACrY,OAAQrK,KAAKI,MAAQ,IAAM4vC,EAAa,IAAMD,GACvD9rB,EAAA5Q,EAAA6Q,cAAA,OAAKjc,UAAU,QACXgc,EAAA5Q,EAAA6Q,cAAA,OAAKjc,UAAU,2CAAyC,qCAGxDgc,EAAA5Q,EAAA6Q,cAAClkB,KAAK+uC,UAAS,UApBrBvvC,KAAKyvC,2CACPjvC,KAAKivC,UAAYA,EAMjBjvC,KAAKkjB,MAAQljB,KAAK8D,gBAAWvC,EAAW0tC,EAAUx7B,MAClDzT,KAAKoiB,SAASpiB,KAAK8R,kRC4BpB,MAAMy/B,UAAevvB,EAAA,EAA5BxiB,kCACIQ,KAAAmuC,YAA2C1kB,EAAA,EAAW0I,MAAkB,GAAI,CAACC,MAAK,IAkIlFpyB,KAAAyuC,OAAS,EAAOhuC,EAAY+tC,IAAoCgD,EAAAxxC,UAAA,qBAG5D,IAAIa,QAAYb,KAAKovC,UAAU3uC,EAAQ+tC,GACvCxuC,KAAK4kB,kBAEC5kB,KAAKyxC,UAAU5wC,MApITrB,8DACNQ,KAAK0xC,sBACX1xC,KAAK8wC,eAAiB9wC,KAAKN,OAAOiyC,6BAC5B3xC,KAAK8nB,UAAU9nB,KAAK4xC,cAGdpyC,UAAUiK,2CACtB,IAAI5B,KAACA,EAAI4M,KAAEA,EAAIH,KAAEA,EAAIgoB,GAAEA,EAAE91B,KAAEA,GAAQiD,EACtB,UAAT5B,GAAkB7H,KAAK6xC,QAAQv9B,EAAMgoB,EAAI7nB,KAEzCjV,QAAQ8U,EAAagoB,EAAa2S,GACtC,IAAI6C,EAAK9xC,KAAK2I,KAAKrF,IACfA,GAACA,EAAEwrC,SAAEA,EAAQ1pC,MAAEA,GAAS6pC,EAC5B/rC,QAAQC,IAAI,CAAC4uC,EAAE,kBAAmBz9B,KAAKA,EAAMgoB,GAAGA,EAAGjlB,KAAK,KAAM/T,GAAGA,EAAIwrC,SAASA,EAAU1pC,MAAMA,EAAO0sC,GAAGA,EAAI7C,UAAUA,IAClH36B,IAASw9B,GACT9xC,KAAKgyC,iBAAiB1uC,EAAIwrC,QAEHvtC,IAAvB+6B,EAAGh1B,KAAKC,GAAGA,IAAIuqC,IACf9xC,KAAKiyC,cAAc3uC,EAAI8B,EAAO6pC,GAG9BzvC,iBAAiB8D,EAAWwrC,GAEhC,GADA9uC,KAAKkyC,iBAAiBpD,GAAW,QACXvtC,IAAlBvB,KAAKmyC,UAA0BnyC,KAAKmyC,WAAarD,EAAU,OAM/D,IAAIzmC,EAAQrI,KAAK8wC,eAAe9uC,MAAM6e,UAAUtZ,GAAKA,EAAEjE,KAAOA,GAC1D+E,GAAO,GACPrI,KAAK8wC,eAAe9uC,MAAMu7B,OAAOl1B,EAAO,GAIxC7I,cAAc8D,EAAW8B,EAAcqE,GAC3CzJ,KAAKkyC,iBAAiB9sC,EAAO,QACP7D,IAAlBvB,KAAKmyC,UAA0BnyC,KAAKmyC,WAAa/sC,GAMjDpF,KAAK8wC,eAAe9uC,MAAM6e,UAAUtZ,GAAKA,EAAEjE,KAAOA,GAAM,GACxDtD,KAAK8wC,eAAe9uC,MAAMwE,KAAKiD,GAI/BjK,iBAAiB4F,EAAcgtC,GACnC,QAAc7wC,IAAV6D,EAAqB,OACzB,IAAIiD,EAAQrI,KAAKmuC,YAAYttB,UAAUtZ,GAAKA,EAAEnC,QAAUA,GAExD,GADAlC,QAAQC,IAAI,CAAC4uC,EAAE,cAAe3sC,MAAOA,EAAOgtC,MAAOA,EAAO/pC,MAAOA,IAC7DA,EAAQ,EAAG,OACf,IAAIgqC,EAAaryC,KAAKmuC,YAAY9lC,GAClCgqC,EAAW3Q,OAAS0Q,EAChBC,EAAW3Q,MAAQ,IAAG2Q,EAAW3Q,MAAQ,GAGjDkQ,iBAA8C,OAAQ5xC,KAAKL,IAAIK,KAAKL,GAAGwoC,MAASuF,EAChF4E,gBAA8C,OAAOtyC,KAAKL,GAAG4yC,UAAYjE,EACzEkE,kBAAgD,OAAOxyC,KAAKL,GAAG8yC,YAActB,EAC7EuB,iBAA+C,OAAO1yC,KAAKL,GAAGgzC,WAAazD,EAC3E0D,mBAAiD,OAAOzC,EACxD0C,gBAA8C,OAAOxC,EACrDyC,gBAA8C,OAAO7B,EACrD8B,iBAA+C,OAAOpC,EACtDqC,mBAAiD,OAAOhzC,KAAKL,GAAGkhC,aAAeyO,EAC/E2D,uBAAqD,OAAO3B,EAC5C9xC,QAAQqI,EAAaqH,2CACjC,IAAIoL,EACJ,OAAQzS,GACJ,QAAS,OACT,IAAK,MAAOyS,EAAIta,KAAKsyC,UAAW,MAChC,IAAK,SAAUh4B,EAAIta,KAAK4yC,aAAc,MACtC,IAAK,WAAYt4B,EAAIta,KAAK6yC,UAAW,MACrC,IAAK,QACD7yC,KAAKmyC,SAAWjjC,EAAM9J,MACtBkV,EAAIta,KAAK+yC,WACT,MACJ,IAAK,WAC+B,kBAA1B/yC,KAAKkzC,aAAahkC,IAC5B,IAAK,SAC6B,kBAAxBlP,KAAKmzC,WAAWjkC,IAC1B,IAAK,aACiC,kBAA5BlP,KAAKozC,eAAelkC,UAE5BlP,KAAK8nB,UAAUxN,EAAGpL,KAGtB1P,WAAWkO,4CACoB,WAAvB1N,KAAK0sC,uBACT1sC,KAAKqzC,QAAQ,SAAU3lC,MAG3BlO,WAAWkO,2CACb,IAAIuhC,QAA4BjvC,KAAKszC,aAAa5lC,GAClD5N,OAAA4iB,EAAA,YAAA5iB,CAAY,CACR2U,KAAM,CACF8I,MAAO,MACPrI,OAAQ,SACRzL,IAAK,CACDnG,GAAIoK,EACJkF,GAAI5S,KAAKP,IAAI6D,GACb8B,MAAO6pC,EAAUnO,MAAM17B,gBAI7BpF,KAAK8nB,UAAU9nB,KAAKgzC,aAAc/D,KAGtCzvC,eAAekO,2CACjB,IAAIuhC,QAA4BjvC,KAAKszC,aAAa5lC,SAC5C1N,KAAK8nB,UAAU9nB,KAAKizC,iBAAkBhE,KAG1CzvC,UAAUyvC,2CAGZ,aADmBjvC,KAAKuzC,MAAMvzC,KAAK0yC,WAAYzD,KAI7CzvC,aAAag0C,2CACf,IAAIvE,QAAkBjvC,KAAKyzC,YAAYD,EAAQlwC,UACzCtD,KAAK8nB,UAAU9nB,KAAK8yC,UAAW7D,KAYnCzvC,UAAUyvC,iDACNjvC,KAAK8nB,UAAU9nB,KAAKwyC,YAAavD,KAGnCzvC,WAAWwxC,GACf,IAAI5Q,OAACA,GAAUpgC,KAAKJ,IACpB,QAAe2B,IAAX6+B,EACJ,OAAOA,EAAO4Q,GAElBxxC,cAAcwxC,GACV,IAAI5rC,EAAQpF,KAAK0zC,WAAW1C,GACxBnwC,EAAOuE,GAASA,EAAMhF,OAAU4wC,EACpC,OAAQnwC,GACJ,QAAS,OAAOA,EAChB,IAAK,IAAK,MAAO,gBAGzBrB,eAAewxC,EAAkB2C,GAC7B,IAAIvuC,EAAQpF,KAAK0zC,WAAW1C,GAC5B,QAAczvC,IAAV6D,EAAqB,OAAOuuC,EAChC,IAAIpT,EAAUn7B,EAAMm7B,QACpB,QAAgBh/B,IAAZg/B,EAAuB,OAAOoT,EAClC,IAAIz+B,EAASqrB,EAAQoT,GACrB,OAAQz+B,GAAUA,EAAO9U,OAAUuzC,EAGzBn0C,8DACVQ,KAAKmuC,YAAY5nC,QACjB,IAAI4nC,QAAoBnuC,KAAKN,OAAO8hC,kBACpCxhC,KAAKmuC,YAAY5Q,OAAO,EAAG,KAAM4Q,KAG/B3uC,aAAakO,2CACf,aAAa1N,KAAKN,OAAOuhC,SAASvzB,KAGhClO,YAAYkO,2CACd,aAAa1N,KAAKN,OAAOwhC,WAAWxzB,KAGlClO,UAAUiB,EAAY+tC,2CACxB,IAAIoF,WAACA,GAAc5zC,KAAKL,GACpBk0C,OAAsBtyC,IAAfqyC,EAA0B5zC,KAAKI,MAAQwzC,EAAWpF,EAAexuC,KAAKC,GAIjF,aAHgBD,KAAKN,OAAO6jB,KAAKswB,EAAMpzC,KAMrCjB,OAAO8D,EAAWs9B,EAAax7B,EAAcuuC,2CAC/C,aAAa3zC,KAAKN,OAAOwV,OAAO5R,EAAIs9B,EAAMx7B,EAAOuuC,MCxOzDt1C,EAAAC,EAAAC,EAAA,sBAAAgzC,yVCMO,MAAMuC,UAAkB9xB,EAAA,EAA/BxiB,kCAKcQ,KAAAqG,KAAO,KAAMqJ,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQrK,KAAKI,OAAK,SAJzCZ,KAAKuD,2CACP/C,KAAKoiB,SAASpiB,KAAKqG,kRCCpB,MAAM0tC,UAAc/xB,EAAA,EACPxiB,8DACNQ,KAAK8nB,UAAU9nB,KAAKg0C,aAG9BA,gBAA4C,OAAOF,6DCPhD,MAAMG,UAAYvxB,EAAA,KAWrBljB,YAAYC,GACRI,MAAMJ,GAXAO,KAAAk0C,cAAe,EA8Bfl0C,KAAAqG,KAAO,MACb,IA8CI9D,GA9CA3C,IAACA,EAAGgT,GAAEA,EAAE1M,MAAEA,GAASlG,KAAK6D,WACxBswC,EAAW,CACX7xB,OAAQ,CAAC8xB,EAAa/rC,IAA6B+rC,EAAM9xB,SACzD7V,aAASlL,GAET8yC,EAAQ,CACR,CACIhqC,OAAQzK,EAAIqmB,MAAQ,OACpBjkB,MAAOhC,KAAKs0C,WAEhB,CACIr4B,GAAI,OACJ5R,OAAQzK,EAAIwI,KAAO,MACnBpG,MAAOhC,KAAKu0C,UAEhB,CACIt4B,GAAI,OACJ5R,OAAQzK,EAAIkO,OAAS,QACrB9L,MAAOhC,KAAKw0C,YAEhB,CACIv4B,GAAI,OACJ5R,OAAQzK,EAAIsV,QAAU,SACtBlT,MAAOhC,KAAKy0C,aAEhB,CACIx4B,GAAI,OACJ5R,OAAQzK,EAAIwiC,OAAS,QACrBpgC,MAAOhC,KAAK00C,YAEhB,CACIz4B,GAAI,YACJ5R,OAAQzK,EAAIilC,MAAQ,OACpB7iC,MAAOhC,KAAK20C,WAEhB,CACI14B,GAAI,YACJ5R,OAAQzK,EAAI6G,SAAW,UACvBzE,MAAOhC,KAAK40C,cAEhB,CACI34B,GAAI,YACJ5R,OAAQzK,EAAIklC,SAAW,UACvB9iC,MAAOhC,KAAK60C,eAgBpB,OAXItyC,OADUhB,IAAV2E,EACU+d,EAAA5Q,EAAA6Q,cAAA,OAAKjc,UAAU,gDAAyB/B,GAGxCmuC,EAAMjsC,IAAI,EAAE6T,KAAI5R,SAAQrI,SAAOqG,IAAUrG,EAAM4D,OAAS,GAAKqe,EAAA5Q,EAAA6Q,cAACvB,EAAA,KAAI,CACxEhc,IAAK0B,EACLJ,UAAWgU,EACX5R,OAAQ4Z,EAAA5Q,EAAA6Q,cAAA,OAAKjc,UAAU,sBAAqBgc,EAAA5Q,EAAA6Q,cAACvB,EAAA,MAAK,KAAEtY,IACpDrI,MAAOA,EACP8E,KAAMqtC,KAGPlwB,EAAA5Q,EAAA6Q,cAAAD,EAAA5Q,EAAAyhC,SAAA,KACH7wB,EAAA5Q,EAAA6Q,cAAA,OAAKjc,UAAU,mBAAmBrI,EAAIgT,IAAMA,GAC3CrQ,KAhFL,IAAIghC,QAACA,EAAOK,OAAEA,EAAMH,SAAEA,EAAQD,UAAEA,EAASE,SAAEA,EAAQC,QAAEA,EAAOE,WAAEA,EAAUC,WAAEA,GAAcrkC,EAAIg7B,SAC5Fz6B,KAAKs0C,UAAY/Q,EAAQ6K,OAAO7mC,GAAKvH,KAAK+0C,UAAUxtC,IAAIa,IAAIb,GAAK,IAAIytC,EAAA,EAAMh1C,KAAK6D,WAAWoxC,UAAU1tC,KACrGvH,KAAKu0C,SAAW3Q,EAAOwK,OAAO7mC,GAAKvH,KAAK+0C,UAAUxtC,IAAIa,IAAIb,GAAK,IAAIytC,EAAA,EAAMh1C,KAAK6D,WAAWqxC,KAAK3tC,KAC9FvH,KAAKw0C,WAAa/Q,EAAS2K,OAAO7mC,GAAKvH,KAAK+0C,UAAUxtC,IAAIa,IAAIb,GAAK,IAAIytC,EAAA,EAAMh1C,KAAK6D,WAAWsxC,OAAO5tC,KACpGvH,KAAKy0C,YAAcjR,EAAU4K,OAAO7mC,GAAKvH,KAAK+0C,UAAUxtC,IAAIa,IAAIb,GAAK,IAAIytC,EAAA,EAAMh1C,KAAK6D,WAAWuxC,QAAQ7tC,KACvGvH,KAAK00C,WAAahR,EAAS0K,OAAO7mC,GAAKvH,KAAK+0C,UAAUxtC,IAAIa,IAAIb,GAAK,IAAIytC,EAAA,EAAMh1C,KAAK6D,WAAWwxC,OAAO9tC,KACpGvH,KAAK20C,UAAYhR,EAAQyK,OAAO7mC,GAAKvH,KAAK+0C,UAAUxtC,IAAIa,IAAIb,GAAK,IAAIytC,EAAA,EAAMh1C,KAAK6D,WAAWyxC,MAAM/tC,KACjGvH,KAAK40C,aAAe/Q,EAAWuK,OAAO7mC,GAAKvH,KAAK+0C,UAAUxtC,IAAIa,IAAIb,GAAK,IAAIytC,EAAA,EAAMh1C,KAAK6D,WAAW0xC,SAAShuC,KAC1GvH,KAAK60C,aAAe/Q,EAAWsK,OAAO7mC,GAAKvH,KAAK+0C,UAAUxtC,IAAIa,IAAIb,GAAK,IAAIytC,EAAA,EAAMh1C,KAAK6D,WAAW2xC,SAASjuC,KAEpG/H,UAAUE,GAChB,OAAsB,IAAfA,EAAOk7B,KAAgB56B,KAAKk0C,aAEvC10C,OAAOuD,GACH,YAAkBxB,IAAdvB,KAAKqG,KAA2B4d,EAAA5Q,EAAA6Q,cAAA,8DAC7BD,EAAA5Q,EAAM6Q,cAAclkB,KAAKqG,gSCUxC,SAASovC,EAAkBhb,GACvB,QAAiBl5B,IAAbk5B,EACJ,IAAK,IAAIvzB,KAAKuzB,EAAUA,EAASvzB,EAAEssB,eAAiBiH,EAASvzB,GAG1D,MAAMwuC,UAAYhzB,EAAA,WAgBrBljB,YAAYmgC,EAAW/sB,EAAW6tB,EAAcsE,EAAajuB,EAAenX,GACxEE,MAAMC,OAAA4iB,EAAA,QAAA5iB,CAAQH,EAAGC,MA6EbI,KAAA21C,cAAuB,EA+DrB31C,KAAAk0C,cAAe,EA3IrBl0C,KAAK2/B,KAAOA,EACZ3/B,KAAK4S,GAAKA,EACV5S,KAAKsD,GAAKyhC,EAEV0Q,EAAkB91C,EAAGsmB,MACrBwvB,EAAkB91C,EAAGmO,OACrB2nC,EAAkB91C,EAAGyI,KACrBqtC,EAAkB91C,EAAGyiC,OACrBqT,EAAkB91C,EAAGuV,QACrBugC,EAAkB91C,EAAGklC,MACrB4Q,EAAkB91C,EAAG8G,SACrBgvC,EAAkB91C,EAAGmlC,SACrB9kC,KAAKL,GAAKA,EACVK,KAAK41C,UAAYj2C,EAAGi2C,WAAaC,EAAA,EACjC71C,KAAKooB,UAAYzoB,EAAGyoB,WAAaytB,EAAA,EACjC71C,KAAKqoB,UAAY1oB,EAAG0oB,WAAawtB,EAAA,EACjC71C,KAAK81C,YAAcn2C,EAAGm2C,aAAeD,EAAA,EACrC71C,KAAK+1C,UAAYp2C,EAAGo2C,WAAaF,EAAA,EACjC71C,KAAKg2C,OAASr2C,EAAGq2C,QAAU5T,EAAA,EAC3BpiC,KAAKi2C,aAAet2C,EAAGs2C,cAAgB7T,EAAA,EACvCpiC,KAAKk2C,KAAOv2C,EAAGu2C,MAAQ9tC,EAAA,EACvBpI,KAAKm2C,QAAUx2C,EAAGw2C,SAAWjhC,EAAA,EAC7BlV,KAAKo2C,OAASz2C,EAAGy2C,QAAUtoC,EAAA,EAC3B9N,KAAKq2C,MAAQ12C,EAAG02C,OAAStC,EACzB/zC,KAAKs2C,SAAW32C,EAAG22C,UAAYC,EAAA,EAC/Bv2C,KAAKw2C,SAAW72C,EAAG62C,UAAY1R,EAAA,EAE/B,IACIjyB,EAAgBC,EAChB7L,EAAI2L,EAAGhB,MAAM,KACjB,OAAQ3K,EAAErB,QACN,KAAK,EACDiN,EAAU,MACVC,EAAS7L,EAAE,GACX,MACJ,KAAK,EACD4L,EAAU5L,EAAE,GACZ6L,EAAS7L,EAAE,GACX,MACJ,QAEI,YADA/D,QAAQC,IAAI,oCAIpB,IAIIiU,EAOA7G,EAXAzF,EAAOC,SAASC,SAASF,KACzB2rC,OAAiBl1C,IAAPuJ,GAA2B,KAAPA,EAC9B,SAAS,MAITsM,EADW,OAAXN,QAA8BvV,IAAXuV,GAAmC,MAAXA,EACrC,GAGAA,EAAOlF,MAAM,KAAKxJ,IAAIb,GAAKA,EAAEsiB,QAAQukB,OAAO7mC,GAAKA,EAAE3B,OAAS,GAMlE2K,EAHO,eAAPqC,EAGQ,IAAI8P,EAAA,SAASA,EAAA,UAAU5Y,MAGvB,IAAI4Y,EAAA,MAAM+zB,EAAS5jC,EAASC,EAAQsE,GAAK,GAErDpX,KAAKy6B,SAAW,IAAIA,EAAA,EAASz6B,KAAMuQ,EAAOkwB,GAG9BjhC,2DAWAA,4DACNQ,KAAKy6B,SAASnjB,eAGlB9X,qDACF,IACI,IAA0B,IAAtBQ,KAAK21C,aAAuB,aAC1B31C,KAAK02C,mBACKn1C,IAAZvB,KAAKsD,KAAkBtD,KAAKsD,GAAKtD,KAAKy6B,SAASsK,MAEnD,IAAK,IAAI79B,KAAKlH,KAAKL,GAAI,CACnB,IAAIuJ,EAAIlJ,KAAKL,GAAGuH,GAChB,QAAU3F,IAAN2H,EAAiB,SACrB,IAAIsgB,QAACA,EAAOmtB,WAAEA,GAAcztC,EAC5B,QAAmB3H,IAAfo1C,EACJ,IAAK,IAAIx1B,KAAKw1B,OACkBp1C,IAAxBvB,KAAKy6B,SAASvzB,GAAGia,IACjBje,QAAQ0zC,KAAK1vC,EAAI,KAAaia,EAAI,sBAK9C,YADAnhB,KAAK21C,cAAe,GAGxB,MAAM1vC,GAEF,OADA/C,QAAQgD,MAAMD,GACPjG,KAAKkG,MAAQD,KAMtBzG,eAAeU,2CACjB,IAAIkiC,EAAQpiC,KAAKy6B,SAAS2H,MAAMliC,GAChC,QAAcqB,IAAV6gC,EACAxc,eAAe1lB,mCACd,OACKkiC,EAAM7hC,aACZ,IAAIy6B,QAACA,GAAWoH,EACZpH,EAAQp1B,OAAS,GACjBggB,eAAe1lB,mEAGvB,OAAOkiC,IAEX5iC,mBAAmBymB,GACf,IAEIpe,GAFAgvC,gBAACA,EAAen3C,OAAEA,GAAUM,KAAKJ,KACjCM,KAACA,GAAQ+lB,EAEb,QAAe1kB,IAAX7B,EAAsB,CACtB,IAAIo3C,EAAKp3C,EAAOQ,QACLqB,IAAPu1C,IACAjvC,EAAOivC,EAAG12C,OAGlB,OAAQy2C,GAAmB,SAE/Br3C,UACI,IAAIwB,KAACA,GAAQhB,KAAKJ,IAClB,OAAOoB,GAAQ,OAGTxB,UAAUE,GAChB,OAAsB,IAAfA,EAAOk7B,KAAgB56B,KAAKk0C,aAGjC10C,SAASqtC,EAAoBn/B,2CAC/B,IAAII,EAAQ9N,KAAKy6B,SAASsc,gBAAgBlK,GAC1C,QAActrC,IAAVuM,EAEA,YADA8X,MAAM,eAAiBinB,EAAc,mBAGzC,IAAIsI,EAASn1C,KAAKm1C,OAAOrnC,SACnBqnC,EAAO6B,WAAWtpC,KAG5BlO,MAAMy3C,GAAoB,OAAOj3C,KAAKy6B,SAAS3sB,MAAMmpC,GACrDz3C,OAAOy3C,GAAoB,OAAOj3C,KAAKy6B,SAASvlB,OAAO+hC,GACvDz3C,MAAMy3C,GAAoB,OAAOj3C,KAAKy6B,SAAS2H,MAAM6U,GACrDz3C,KAAKy3C,GAAoB,OAAOj3C,KAAKy6B,SAASoK,KAAKoS,GACnDz3C,IAAIy3C,GAAoB,OAAOj3C,KAAKy6B,SAASryB,IAAI6uC,GACjDz3C,QAAQy3C,GAAoB,OAAOj3C,KAAKy6B,SAASh0B,QAAQwwC,GACzDz3C,QAAQy3C,GAAoB,OAAOj3C,KAAKy6B,SAASqK,QAAQmS,GACzDz3C,KAAKy3C,GAAoB,OAAOj3C,KAAKy6B,SAASxU,KAAKgxB,GACnDz3C,QAAQy3C,EAAmBvY,GACvB,IAAIzY,EAAOjmB,KAAKy6B,SAASxU,KAAKgxB,GAC9B,QAAa11C,IAAT0kB,EAAoB,OACxB,IAAIV,KAACA,GAAQU,EACb,YAAa1kB,IAATgkB,EACGA,EAAKmZ,QADZ,EAIJl/B,eAAey3C,GACX,IAAIv3C,EAASM,KAAKy6B,SAAS3sB,MAAMmpC,GACjC,QAAe11C,IAAX7B,EAAsB,OAAOM,KAAKm1C,OAAOz1C,GAEjDF,gBAAgBy3C,GACZ,IAAIv3C,EAASM,KAAKy6B,SAASvlB,OAAO+hC,GAClC,QAAe11C,IAAX7B,EAAsB,OAAOM,KAAKo1C,QAAQ11C,GAElDF,eAAey3C,GACX,IAAIv3C,EAASM,KAAKy6B,SAAS2H,MAAM6U,GACjC,QAAe11C,IAAX7B,EAAsB,OAAOM,KAAKq1C,OAAO31C,GAEjDF,cAAcy3C,GACV,IAAIv3C,EAASM,KAAKy6B,SAASoK,KAAKoS,GAChC,QAAe11C,IAAX7B,EAAsB,OAAOM,KAAKs1C,MAAM51C,GAEhDF,aAAay3C,GACT,IAAIv3C,EAASM,KAAKy6B,SAASryB,IAAI6uC,GAC/B,QAAe11C,IAAX7B,EAAsB,OAAOM,KAAKk1C,KAAKx1C,GAE/CF,iBAAiBy3C,GACb,IAAIv3C,EAASM,KAAKy6B,SAASh0B,QAAQwwC,GACnC,QAAe11C,IAAX7B,EAAsB,OAAOM,KAAKu1C,SAAS71C,GAEnDF,iBAAiBy3C,GACb,IAAIv3C,EAASM,KAAKy6B,SAASqK,QAAQmS,GACnC,QAAe11C,IAAX7B,EAAsB,OAAOM,KAAKw1C,SAAS91C,GAEnDF,kBAAkBy3C,GACd,IAAIv3C,EAASM,KAAKy6B,SAASxU,KAAKgxB,GAChC,QAAe11C,IAAX7B,EAAsB,OAAOM,KAAKi1C,UAAUv1C,GAEpDF,kBAAkBy3C,GACd,IAAIv3C,EAASM,KAAKy6B,SAASxU,KAAKgxB,GAChC,QAAe11C,IAAX7B,EAAsB,OAAOM,KAAKk3C,UAAUx3C,GAEpDF,kBAAkBy3C,GACd,IAAIv3C,EAASM,KAAKy6B,SAASxU,KAAKgxB,GAChC,QAAe11C,IAAX7B,EAAsB,OAAOM,KAAKioB,UAAUvoB,GAGpDF,oBAAoBy3C,GAChB,IAAIv3C,EAASM,KAAKy6B,SAASxU,KAAKgxB,GAChC,QAAe11C,IAAX7B,EAAsB,OAAOM,KAAK6C,YAAYnD,GAGtDF,UAAU23C,EAAuBF,GAC7B,OAAQE,GACJ,IAAK,QACD,IAAIrpC,EAAQ9N,KAAKy6B,SAAS3sB,MAAMmpC,GAChC,QAAc11C,IAAVuM,EAAqB,OACzB,OAAO9N,KAAKm1C,OAAOrnC,GACvB,IAAK,SACD,IAAIoH,EAASlV,KAAKy6B,SAASvlB,OAAO+hC,GAClC,QAAe11C,IAAX2T,EAAsB,OAC1B,OAAOlV,KAAKo1C,QAAQlgC,GACxB,IAAK,OACD,IAAI+Q,EAAOjmB,KAAKy6B,SAASxU,KAAKgxB,GAC9B,QAAa11C,IAAT0kB,EAAoB,OACxB,OAAOjmB,KAAKi1C,UAAUhvB,GAC1B,IAAK,QACD,IAAImc,EAAQpiC,KAAKy6B,SAAS2H,MAAM6U,GAChC,QAAc11C,IAAV6gC,EAAqB,OACzB,OAAOpiC,KAAKq1C,OAAOjT,GACvB,IAAK,OACD,IAAIyC,EAAO7kC,KAAKy6B,SAASoK,KAAKoS,GAC9B,QAAa11C,IAATsjC,EAAoB,OACxB,OAAO7kC,KAAKs1C,MAAMzQ,GACtB,IAAK,MACD,IAAIz8B,EAAMpI,KAAKy6B,SAASryB,IAAI6uC,GAC5B,QAAY11C,IAAR6G,EAAmB,OACvB,OAAOpI,KAAKk1C,KAAK9sC,GACrB,IAAK,UACD,IAAI3B,EAAUzG,KAAKy6B,SAASh0B,QAAQwwC,GACpC,QAAgB11C,IAAZkF,EAAuB,OAC3B,OAAOzG,KAAKu1C,SAAS9uC,GACzB,IAAK,UACD,IAAIq+B,EAAU9kC,KAAKy6B,SAASqK,QAAQmS,GACpC,QAAgB11C,IAAZujC,EAAuB,OAC3B,OAAO9kC,KAAKw1C,SAAS1Q,IAIjCtlC,aAAa23C,EAAuBF,GAChC,OAAOj3C,KAAKqiB,KAAKriB,KAAKo3C,UAAUD,EAAYF,IAGxCz3C,MAA6CsQ,GACjD,IAAInQ,EAAIC,GACJM,KAACA,EAAIC,SAAEA,GAAY2P,EACvB,QAAgBvO,IAAZvB,KAAKL,GAAkB,CACvB,IAAI03C,EAAMr3C,KAAKL,GAAGQ,QACNoB,IAAR81C,IACA13C,EAAK03C,EAAIn3C,IAGjB,IAAIR,OAACA,GAAUM,KAAKJ,IAIpB,YAHe2B,IAAX7B,IACAE,EAAMF,EAAOQ,IAEV,CAACP,GAAIA,GAAM,GAAIC,IAAKA,GAAO,IAGtCJ,KAAK83C,GACD,OAAO,IAAItC,EAAA,EAAMsC,GAGrBhD,gBACI,OAAOt0C,KAAKy6B,SAAS8I,QAAQ6K,OAAO7mC,GAAKvH,KAAK+0C,UAAUxtC,IAAIa,IAAIb,GAAKvH,KAAKqiB,KAAKriB,KAAKi1C,UAAU1tC,KAElG/H,UAAUymB,GACN,IAAItmB,GAACA,EAAEC,IAAEA,GAAOI,KAAKu3C,MAAwBtxB,GAC7C,OAAO,IAAKtmB,GAAMA,EAAGi2C,WAAa51C,KAAK41C,WAAW51C,KAAMimB,EAAMtmB,EAAIC,GAEtEJ,UAAUymB,GACN,IAAItmB,GAACA,EAAEC,IAAEA,GAAOI,KAAKu3C,MAAwBtxB,GAC7C,OAAO,IAAKtmB,GAAMA,EAAGyoB,WAAapoB,KAAKooB,WAAWpoB,KAAMimB,EAAMtmB,EAAIC,GAEtEJ,UAAUymB,GACN,IAAItmB,GAACA,EAAEC,IAAEA,GAAOI,KAAKu3C,MAAwBtxB,GAC7C,OAAO,IAAKtmB,GAAMA,EAAG0oB,WAAaroB,KAAKqoB,WAAWroB,KAAMimB,EAAMtmB,EAAIC,GAEtEJ,YAAYymB,GACR,IAAItmB,GAACA,EAAEC,IAAEA,GAAOI,KAAKu3C,MAAoBtxB,EAAKtO,OAASsO,GACvD,OAAO,IAAKtmB,GAAMA,EAAGm2C,aAAe91C,KAAK81C,aAAa91C,KAAMimB,EAAMtmB,EAAIC,GAE1EJ,UAAUymB,GACN,IAAItmB,GAACA,EAAEC,IAAEA,GAAOI,KAAKu3C,MAAoBtxB,GACzC,OAAO,IAAKtmB,GAAMA,EAAGo2C,WAAa/1C,KAAK+1C,WAAW/1C,KAAMimB,EAAMtmB,EAAIC,GAGtEJ,OAAOsO,GACH,IAAInO,GAACA,EAAEC,IAAEA,GAAOI,KAAKu3C,MAAsBzpC,GAI3C,OAAO,IAAKnO,GAAMA,EAAGy2C,QAAUp2C,KAAKo2C,QAAQp2C,KAAM8N,EAAOnO,EAAIC,GAEjE40C,iBACI,OAAOx0C,KAAKy6B,SAASgJ,SAAS2K,OAAO7mC,GAAKvH,KAAK+0C,UAAUxtC,IAAIa,IAAIb,GACtDvH,KAAKqiB,KAAKriB,KAAKm1C,OAAO5tC,KAIrC/H,QAAQ0V,GACJ,IAAIvV,GAACA,EAAEC,IAAEA,GAAOI,KAAKu3C,MAAwBriC,GAC7C,OAAO,IAAKvV,GAAMA,EAAGw2C,SAAWn2C,KAAKm2C,SAASn2C,KAAMkV,EAAQvV,EAAIC,GAEpE60C,kBACI,OAAOz0C,KAAKy6B,SAAS+I,UAAU4K,OAAO7mC,GAAKvH,KAAK+0C,UAAUxtC,IAAIa,IAAIb,GACvDvH,KAAKqiB,KAAKriB,KAAKo1C,QAAQ7tC,KAItC/H,OAAO4iC,GACH,IAAIziC,GAACA,EAAEC,IAAEA,GAAOI,KAAKu3C,MAAsBnV,GAC3C,OAAO,IAAKziC,GAAMA,EAAGq2C,QAAUh2C,KAAKg2C,QAAQh2C,KAAMoiC,EAAOziC,EAAIC,GAEjEJ,aAAaiE,GACT,IAAI2+B,EAAQpiC,KAAKy6B,SAAS2H,MAAM3+B,GAChC,QAAclC,IAAV6gC,EAAqB,OACzB,IAAIziC,GAACA,EAAEC,IAAEA,GAAOI,KAAKu3C,MAAsBnV,GAC3C,OAAO,IAAKziC,GAAMA,EAAGs2C,cAAgBj2C,KAAKi2C,cAAcj2C,KAAMoiC,EAAOziC,EAAIC,GAE7E80C,iBACI,OAAO10C,KAAKy6B,SAASiJ,SAAS0K,OAAO7mC,GAAKvH,KAAK+0C,UAAUxtC,IAAIa,IAAIb,GACtDvH,KAAKqiB,KAAKriB,KAAKq1C,OAAO9tC,KAIrC/H,MAAMqlC,GACF,IAAIllC,GAACA,EAAEC,IAAEA,GAAOI,KAAKu3C,MAAoB1S,GACzC,OAAO,IAAKllC,GAAMA,EAAG02C,OAASr2C,KAAKq2C,OAAOr2C,KAAM6kC,EAAMllC,EAAIC,GAE9D+0C,gBACI,OAAO30C,KAAKy6B,SAASkJ,QAAQyK,OAAO7mC,GAAKvH,KAAK+0C,UAAUxtC,IAAIa,IAAIb,GACrDvH,KAAKqiB,KAAKriB,KAAKs1C,MAAM/tC,KAIpC/H,SAASiH,GACL,IAAI9G,GAACA,EAAEC,IAAEA,GAAOI,KAAKu3C,MAA0B9wC,GAC/C,OAAO,IAAK9G,GAAMA,EAAG22C,UAAYt2C,KAAKs2C,UAAUt2C,KAAMyG,EAAS9G,EAAIC,GAEvEg1C,mBACI,OAAO50C,KAAKy6B,SAASoJ,WAAWuK,OAAO7mC,GAAKvH,KAAK+0C,UAAUxtC,IAAIa,IAAIb,GACxDvH,KAAKqiB,KAAKriB,KAAKu1C,SAAShuC,KAIvC/H,SAASslC,GACL,IAAInlC,GAACA,EAAEC,IAAEA,GAAOI,KAAKu3C,MAA0BzS,GAC/C,OAAO,IAAKnlC,GAAMA,EAAG62C,UAAYx2C,KAAKw2C,UAAUx2C,KAAM8kC,EAASnlC,EAAIC,GAEvEi1C,mBACI,OAAO70C,KAAKy6B,SAASqJ,WAAWsK,OAAO7mC,GAAKvH,KAAK+0C,UAAUxtC,IAAIa,IAAIb,GACxDvH,KAAKqiB,KAAKriB,KAAKw1C,SAASjuC,KAIvC/H,KAAK4I,GACD,IAAIzI,GAACA,EAAEC,IAAEA,GAAOI,KAAKu3C,MAAkBnvC,GACvC,OAAO,IAAKzI,GAAMA,EAAGu2C,MAAQl2C,KAAKk2C,MAAMl2C,KAAMoI,EAAKzI,EAAIC,GAE3D20C,eACI,OAAOv0C,KAAKy6B,SAASmJ,OAAOwK,OAAO7mC,GAAKvH,KAAK+0C,UAAUxtC,IAAIa,IAAIb,GACpDvH,KAAKqiB,KAAKriB,KAAKk1C,KAAK3tC,KAInC/H,eAAeymB,GACX,IAAItO,MAACA,GAASsO,EACd,QAAc1kB,IAAVoW,EAAqB,CACrB,IAAIhY,GAACA,GAAMK,KAAKu3C,MAAoBtxB,GACpC,OAAQtmB,GAAMA,EAAG4C,SAAY8iB,EAAA,EAE5B,CACD,IAAI1lB,GAACA,GAAMK,KAAKu3C,MAAoB5/B,GACpC,OAAQhY,GAAMA,EAAG4lB,MAAQ5lB,EAAG4lB,KAAKU,EAAK/lB,MAAMqC,SAAY8iB,EAAA,GAI1D7lB,SAASymB,EAAW3iB,2CACtB,IAAIqU,MAACA,GAASsO,EACV3L,EAAIta,KAAKioB,UAAUtQ,GAAUsO,SAC3B3L,EAAE5U,MAAMpC,KAGlBk0C,UAAgC,OAAOvD,EAEvCz0C,SAEI,OADQ,IAAKQ,KAAQ,IAAEA,MACdsiB,UCtdjBjkB,EAAAC,EAAAC,EAAA,sBAAAm3C,qYCWO,MAAM+B,UAAiBz1B,EAAA,EAA9BxiB,kCAQIQ,KAAA03C,WAAa,EAAC5wC,EAAcuB,IACjBqH,EAAA,cAAC1P,KAAK23C,QAAO,CAAC7wC,KAAMA,KAGvB9G,KAAA23C,QAAU73C,OAAAwP,EAAA,EAAAxP,CAAS,EAAEgH,WACzB,IAGI+7B,EAAK+U,EASLl8B,EAUAnZ,EAAS2mC,EAAQ2O,GAtBjB5xB,KAACA,EAAI6xB,IAAEA,EAAGt9B,SAAEA,EAAQu9B,OAAEA,EAAMC,SAAEA,EAAQv3C,OAAEA,GAAUqG,EAClDmxC,EAAQj4C,KAAK6D,WAAWq0C,OAAOF,IAC9Bz1C,QAAQ41C,EAAUC,cAAEA,EAAep3C,KAAKq3C,GAAWJ,EAqBxD,IAnBoB,IAAhBj4C,KAAKyiB,SACLogB,EAAMnzB,EAAA,wBAAQzH,UAAU,sBAAsBwE,QAAS,IAAIzM,KAAK6D,WAAWy0C,SAASxxC,IAChF4I,EAAA,cAACiT,EAAA,GAAE,CAACziB,KAAK,UAEb03C,EAASloC,EAAA,wBAAQzH,UAAU,sBAAsBwE,QAAS,IAAIzM,KAAK6D,WAAW00C,YAAYzxC,IACtF4I,EAAA,cAACiT,EAAA,GAAE,CAAC1a,UAAU,YAAY/H,KAAK,aAIxB,IAAX63C,EAEIr8B,EADa,IAAbs8B,EACQnV,EAEAnzB,EAAA,cAAAA,EAAA,cAAGkoC,WAAgB/U,GAE1BmV,EAAW,IAChBt8B,EAAQk8B,IAGG,IAAXG,EACAx1C,OAAUhB,EACNd,IAEAo3C,GAAcO,GAAiB/yB,EAAA,GAAiB5kB,EAAQT,KAAKC,QAGhE,CACDipC,EAAS,gBACT,IAAIloC,EAAOq3C,GAAWA,EAAQr4C,KAAKC,GACnCsC,EAAUmN,EAAA,cAACiT,EAAA,KAAI,CACX1a,UAAU,OACVjG,MAAOwY,EACP1T,KAAM,CAAC2F,aAAQlL,EAAW+gB,OAAOtiB,KAAK03C,YACtC12C,KAAMA,IAEd,OAAO0O,EAAA,qBAAKzH,UAAU,sBAClByH,EAAA,cAACiT,EAAA,IAAG,CAAC1a,UAAW4U,IAAU,OAAQ,OAAQqsB,GACtCxtB,MAAOA,GAEPhM,EAAA,qBAAKzH,UAAU,QAAQnI,OAAA+lB,EAAA,EAAA/lB,CAAGg4C,EAAKK,EAAYn4C,KAAKC,IAChDyP,EAAA,qBAAKzH,UAAU,yBAAyB4vC,IAE3Ct1C,KAxDH/C,KAAKuD,2CACP/C,KAAKyiB,OAASziB,KAAK6D,WAAW4e,OAC9BziB,KAAKoiB,SAASpiB,KAAKqG,QA0DvBA,WAAuB,MAAO,IAAMqJ,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQrK,KAAKI,OAC/CsP,EAAA,cAACiT,EAAA,KAAI,CAAC3gB,MAAOhC,KAAK6D,WAAW7B,MAAO8E,KAAM,CAACmB,UAAU,OAAQwE,aAAQlL,EAAW+gB,OAAOtiB,KAAK03C,gSCpEjG,MAAMc,UAAqBx2B,EAAA,EAAlCxiB,kCAQYQ,KAAAy4C,eAAiB,KAAYC,EAAA14C,UAAA,qBACjCA,KAAK4kB,YACL,IAAInkB,EAAST,KAAKkjB,MAAMI,YACxBtjB,KAAK2jB,WAAWljB,MAGZT,KAAAqG,KAAO,KACJqJ,EAAA,cAACgT,EAAA,KAAI,KACP1iB,KAAKkjB,MAAMZ,WAbd9iB,KAAKuD,2CACP/C,KAAKkjB,MAAQljB,KAAK8D,WAAW9D,KAAKy4C,gBAClCz4C,KAAK4jB,gBAAgBlU,EAAA,cAAC1P,KAAKqG,KAAI,mRCQhC,MAAMsyC,EAQTn5C,YAAY+L,EAAgB0a,EAAW6xB,EAAWE,GAFlDh4C,KAAAwa,SAAsBiP,EAAA,EAAW0I,MAAM,GAAI,CAACC,MAAM,IAG9CpyB,KAAKuL,OAASA,EACdvL,KAAKimB,KAAOA,EACZjmB,KAAK83C,IAAMA,EACX93C,KAAKg4C,SAAWA,EAChBh4C,KAAK+3C,QAAS,GAIf,MAAMa,UAAa52B,EAAA,EAA1BxiB,kCA+FIQ,KAAAs4C,SAAW,CAAMxxC,GAAiB+xC,EAAA74C,UAAA,qBAC9B,IAAIg4C,SAACA,EAAQx9B,SAAEA,GAAY1T,EACvBgyC,EAAU94C,KAAK+4C,UAAUnzC,OACzBozC,EAAWF,EAAQ,EACnBG,EAAMjB,EAAW,EACrB,GAAIiB,GAAOH,EAAS,OACpB,IAAII,EAAWl5C,KAAK+4C,UAAUE,GAC1BE,EAAKD,EAASh5C,KACd+lB,EAAOizB,EAAS/2C,MAChBi3C,EAAc,GACd3lC,EAAO,GACX,IAAK,IAAIxM,EAAEH,OAASvF,IAAJ0F,EAAcA,EAAEA,EAAEsE,OAAQ,CACtC,IAAKysC,SAASqB,EAAEvB,IAAEA,GAAO7wC,EACrBkyC,EAAKn5C,KAAK+4C,UAAUM,GAAIn5C,KAE5Bk5C,EAAYD,GAAM1lC,EAAK0lC,GAAMrB,EAAIx0C,GAGrC,IAAIA,QAAWtD,KAAKs5C,YAAYJ,EAAUE,GAC1C,QAAW73C,IAAP+B,GAAoBA,GAAM,EAAG,OACjC2iB,EAAKziB,MAAMF,GACX,IAAIwsB,EAAQ7J,EAAK4J,MAAMvsB,GACnBi2C,EAAO,GACP94C,EAAa,GACjB,GAAIu3C,EAAS,IAAIgB,GAIb,GAHA/yB,EAAKziB,MAAMF,GAEX7C,EAAO04C,GAAMI,EAAKJ,GAAMrpB,EACpB9vB,KAAKN,OAAO2B,OAAOuE,OAAS,EAAG,CAC/B,IAAI/E,QAAYb,KAAKuzC,MAAMiF,EAAc/kC,GACzC,IAAK,IAAIvM,KAAKrG,EAEVJ,EAAOyG,GAAKqyC,EAAKryC,GAAKrG,EAAIqG,QAIjC,CAEDzG,EAAO04C,GAAM1lC,EAAK0lC,GAAMrpB,EACxB,IAAK,IAAI5oB,EAAE+xC,EAAI,EAAE/xC,EAAE8xC,EAAS9xC,IAExBuM,EAAKzT,KAAK+4C,UAAU7xC,GAAGhH,MAAQ,EAInCq5C,EAAKv5C,KAAK+4C,UAAUC,GAAU94C,MAAQ,EACtC,IAAImB,OAACA,GAAUrB,KAAKN,OACpB,IAAK,IAAI4xB,KAAKjwB,EAAQ,CAClB,IAAInB,KAACA,EAAI2H,KAAEA,EAAMijB,KAAK0uB,GAAYloB,GACf,IAAbkoB,IAEFD,EAAKjoB,EAAEpxB,MAAQJ,OAAA26B,EAAA,EAAA36B,CAAkB+H,KAI7C4L,EAAK8lC,KAAO,CAACA,SACPv5C,KAAKN,OAAO6gC,QAAQsC,IAAIxZ,OAAO5V,GACrC,IAAIgmC,EAAWj/B,EAASqG,UAAUtZ,GAAKA,EAAEuwC,IAAIx0C,KAAOA,GACpD,GAAIm2C,EAAW,EACXj/B,EAAShU,KAAKxG,KAAK05C,WAAW5yC,EAAMmf,EAAM6J,EAAOmpB,EAAKx4C,QAErD,CACD,IAAIY,OAACA,GAAUrB,KAAKN,OACpB,QAAe6B,IAAXF,GAAwBA,EAAOuE,OAAS,EAAG,CAC3C,IAAI8rB,EAAMlX,EAASi/B,GACnBj/B,EAAS+iB,OAAOkc,EAAU,GAC1B/nB,EAAIjxB,OAASA,EAMb+Z,EAAS+iB,OAAOkc,EAAU,EAAG/nB,IAGrC1xB,KAAKqD,kBAGTrD,KAAAu4C,YAAc,CAAMzxC,GAAiB+xC,EAAA74C,UAAA,qBACjC,IACIimB,EADWjmB,KAAK+4C,UAAUjyC,EAAKkxC,UACf71C,MAEhB/B,EADYJ,KAAKP,IAAIw1C,UAAUhvB,EAAKuZ,MAClBma,SAAS1zB,GAC3B2zB,EACA55C,KAAKJ,IAAIg6C,eACNvjC,EAAAhD,EAAEwmC,SAAS,0CAClB,IAA8C,IAA1CpyC,QAAQmyC,EAAc,CAACx5C,MAAMA,KAAoB,OACrD,IAAIgI,EAAUpI,KAAKN,OACf+T,EAAO,GAEPqmC,EAAK,IADErmC,EAAW,KAAI,IAErBjN,KAAKszC,GACV,IAAK,IAAI7yC,EAAEH,OAAUvF,IAAJ0F,EAAcA,EAAEA,EAAEsE,OAAQ,CACvC,IAAI8tC,EAAGpyC,EAAE+wC,SAET8B,EAAG95C,KAAK+4C,UAAUM,GAAIn5C,MAAQ+G,EAAE6wC,IAAIx0C,GAExC,IAAI6D,EAAMnH,KAAK+4C,UAAUnzC,OACzB,IAAK,IAAIsB,EAAEJ,EAAKkxC,SAAS,EAAG9wC,EAAEC,EAAKD,IAAK,CAGpC4yC,EAFQ95C,KAAK+4C,UAAU7xC,GAElBhH,OAAS,QAEZkI,EAAIm4B,QAAQuC,IAAIzZ,OAAO5V,GAC7B,IAAI+G,EAAW1T,EAAKyE,OAAOiP,SACvBnS,EAAQmS,EAASqG,UAAUtZ,GAAKA,IAAMT,GACtCuB,GAAS,GAAGmS,EAAS+iB,OAAOl1B,EAAO,MAnM3B7I,wDACZ,IAAIqzB,KAACA,EAAIhL,WAAEA,GAAc7nB,KAAKN,OAC9BM,KAAKyiB,YAAwBlhB,IAAfsmB,EACd,IAAIkyB,EAAI/5C,KAAKN,OAAOgjC,QAAQxhB,IAGxBrgB,SAFek5C,EAAE3X,MAAM,KAEVvhC,IACbi4C,EAAUjmB,EAAKjtB,OACnB5F,KAAKk4C,OAAS7hC,EAAAhD,EAAEa,MAAMlU,KAAKL,GAAGkzB,MAAQ,IACtC7yB,KAAK+4C,UAAY,GACjB,IAAIiB,EAAYD,EAAE/e,QAAQ,GAAG35B,OAC7B,IAAK,IAAI6F,EAAE,EAAGA,EAAE4xC,EAAS5xC,IACrBlH,KAAK+4C,UAAUvyC,KAAKwzC,EAAU9yC,IAC1BA,GAAKlH,KAAKk4C,OAAOtyC,QACjB5F,KAAKk4C,OAAO1xC,KAAK,CACbjE,QAAS8iB,EAAA,IAIrBrlB,KAAKgC,MAAQlC,OAAA2pB,EAAA,EAAA3pB,CAAW,IACxB,IAAIgH,OAAevF,EACnB,IAAK,IAAIypB,KAAKnqB,EAAK,CACf,IAAIo5C,EAAUj6C,KAAKk6C,QAAQpzC,EAAMkkB,QACjBzpB,IAAZ04C,IACAj6C,KAAKgC,MAAMwE,KAAKyzC,GAChBnzC,EAAOmzC,SAITj6C,KAAK8nB,UAAU9nB,KAAKm6C,YAGtB36C,WAAW+L,EAAgB0a,EAAW6xB,EAAWE,EAAiBv3C,GACtE,IAAIqG,EAAO,IAAI6xC,EAAQptC,EAAQ0a,EAAM6xB,EAAKE,GAK1C,OAJIA,IAAah4C,KAAK+4C,UAAUnzC,OAAS,IACrCkB,EAAKixC,QAAS,EACdjxC,EAAKrG,OAASA,GAEXqG,EAGXtH,QAAQsH,EAAc4qB,GAClB,IAAI7wB,OAAcU,EACdu3C,EAAU94C,KAAK+4C,UAAUnzC,OACzBqB,EAAIH,EACR,IAAK,IAAII,EAAE,EAAEA,EAAE4xC,EAAQ5xC,IAAK,CACxB,IAAIP,EAAM3G,KAAK+4C,UAAU7xC,IACrBhH,KAACA,GAAQyG,EACTsf,EAAOtf,EAAIxE,MACX+N,EAAYwhB,EAAIxxB,GACpB,QAAYqB,IAAR2O,EAAmB,MACvB,IAAI5M,GAACA,GAAM4M,EACX,GAAU,IAANhJ,EAAS,CACT,GAAW,IAAP5D,EAAU,cACJ/B,IAAN0F,GAAmBA,EAAE6wC,IAAIx0C,KAAOA,IAChCzC,EAAMoG,EAAIjH,KAAK05C,gBAAWn4C,EAAW0kB,EAAM/V,EAAKhJ,EAAGwqB,IAEvD,SAEJ,IAAIlX,SAACA,EAAQs9B,IAAEA,GAAO7wC,EAClBE,EAAMqT,EAAS5U,OACnB,GAAIuB,EAAM,EAAG,CACT,IAAIiY,EAAI5E,EAASrT,EAAI,GACrB,GAAIiY,EAAE04B,IAAIx0C,KAAOA,EAAI,CACjB2D,EAAImY,EACJ,UAGJ9b,EAAK,GACLkX,EAAShU,KAAKS,EAAIjH,KAAK05C,WAAWzyC,EAAGgf,EAAM/V,EAAKhJ,EAAGwqB,IAG3D,OAAO7wB,EAGLrB,YAAY05C,EAAgBn2C,2CAC9B,IAAIZ,MAACA,EAAKS,YAAEA,GAAes2C,EACvBr2C,EAAc7C,KAAKP,IAAIoD,YAAYV,GACnCi4C,EAAYr3C,OACIxB,IAAhBqB,GAEyB,kBADzBw3C,EAAYr3C,EAAMH,EAAY1C,SAE1Bk6C,EAAYA,EAAU92C,IAG9B,IAAIzC,QAAYgC,EAAYO,KAAKg3C,GACjC,OAAOj4C,EAAM2iB,aAAajkB,KAgH9Bs5C,eAA0C,OAAO1C,GCjPrDp5C,EAAAC,EAAAC,EAAA,sBAAAq6C,IAAAv6C,EAAAC,EAAAC,EAAA,sBAAAk5C,gUCMO,MAAM4C,UAAqBr4B,EAAA,EAAlCxiB,kCAKcQ,KAAAqG,KAAO,KAAMqJ,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQrK,KAAKI,OAAK,YAJzCZ,KAAKuD,2CACP/C,KAAKoiB,SAASpiB,KAAKqG,kRCCpB,MAAMi0C,UAAiBt4B,EAAA,EACVxiB,8DACNQ,KAAK8nB,UAAU9nB,KAAKu6C,gBAG9BA,mBAAkD,OAAOF,GCd7Dh8C,EAAAC,EAAAC,EAAA,sBAAA+7C,wUCQO,MAAME,UAAoBx4B,EAAA,EAAjCxiB,kCASYQ,KAAAQ,SAAW,KAAWmC,EAAA3C,UAAA,qBAC1B,IAAIS,EAAST,KAAKkjB,MAAMI,YACxBtjB,KAAKg7B,cAAgBh7B,KAAK6D,WAAWwlB,OAAO5oB,GAC5CT,KAAKojB,YACLpjB,KAAKoiB,SAASpiB,KAAKy6C,eAGbz6C,KAAA06C,SAAW,MACjB,IAAIt6C,MAACA,GAASJ,KAAK6D,WACnB,OAAO6L,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQjK,GAChBJ,KAAKkjB,MAAMZ,OAAO,gBAIjBtiB,KAAAy6C,WAAa,MACnB,IAAIr6C,MAACA,GAASJ,KAAK6D,WACnB,OAAO6L,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQjK,EAAO4E,KAAK,8BAE7B0K,EAAA,yBACK5P,OAAA+lB,EAAA,EAAA/lB,CAAcE,KAAKg7B,aAxB1Bx7B,KAAKuD,2CACP/C,KAAKkjB,MAAQljB,KAAK8D,WAAW9D,KAAKQ,SAAUuC,GAC5C/C,KAAKoiB,SAASpiB,KAAK06C,sRCLpB,MAAMC,UAAgB34B,EAAA,EACTxiB,8DACNQ,KAAK8nB,UAAU9nB,KAAK46C,eAG9BA,kBAAgD,OAAOJ,EAEjDh7C,OAAOiB,2CACT,OAAOT,KAAKN,OAAO2pB,OAAO5oB,MCjBlCpC,EAAAC,EAAAC,EAAA,sBAAAo8C,gUCMO,MAAME,UAAqB74B,EAAA,EAAlCxiB,kCAKcQ,KAAAqG,KAAO,KAAMqJ,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQrK,KAAKI,OAAK,YAJzCZ,KAAKuD,2CACP/C,KAAKoiB,SAASpiB,KAAKqG,kRCCpB,MAAMy0C,UAAiB94B,EAAA,EACVxiB,8DACNQ,KAAK8nB,UAAU9nB,KAAK+6C,gBAG9BA,mBAAkD,OAAOF,GCd7Dx8C,EAAAC,EAAAC,EAAA,sBAAAu8C,yVCOO,MAAeE,EAUlBx7C,YAAYy7C,EAAwBC,EAAe96C,EAAc8O,GAH3ClP,KAAA4oC,WAAqB,EAIvC5oC,KAAKi7C,WAAaA,EAClBj7C,KAAKk7C,OAASA,EACdl7C,KAAKkP,MAAQA,EACb,IAAIhP,KAACA,GAAQ+6C,EACbj7C,KAAKE,KAAOA,EACZF,KAAKI,MAAQA,EAEXZ,gDACF,aAAaQ,KAAKm7C,kBAKhB37C,oDACIQ,KAAKo7C,gBAGC57C,sDAA6BoR,EAAA,EAAI7J,uUArBrCyH,CAAA,CAAXC,EAAA,kECbLpQ,EAAAC,EAAAC,EAAA,sBAAA88C,IAAA,IAAAC,EAAAj9C,EAAA,IAAAk9C,EAAAl9C,EAAA,IAGO,MAAMg9C,EAAW,CACpB77C,IAAIoZ,EAAehN,GACf9L,OAAAw7C,EAAA,EAAAx7C,CAAe8Y,EAAQhN,GACvB2vC,EAAA,EAAU5iC,eAAe/M,IAE7BpM,QACIM,OAAAw7C,EAAA,EAAAx7C,CAAe,OAAGyB,GAClBg6C,EAAA,EAAU5iC,oBAAepX,4TC4CjC,MAAMi6C,EAAU,IAnDT,cAAsBC,EAAA,EACnBj8C,MAAMkY,2CAER,IAAI7W,QAAYb,KAAKmJ,IAAI,QAASuO,GAClC,cAAe7W,GACX,QAAS,OACT,IAAK,SAAU,OAAOf,OAAA47C,EAAA,EAAA57C,CAAgBe,GACtC,IAAK,SACD,IAAI+K,EAAQ/K,EAAI+K,MACZjD,EAAO7I,OAAA47C,EAAA,EAAA57C,CAAgB8L,IACvBm7B,KAACA,EAAI1mC,KAAEA,GAAQQ,EAGnB,OAFIkmC,IAAMp+B,EAAKo+B,KAAOA,GAClB1mC,IAAMsI,EAAKtI,KAAOA,GACfsI,KAIbnJ,SAASkY,2CAUX,aAAa1X,KAAKyX,KAAK,WAAYC,KAGjClY,UAAUm8C,EAAgB9zC,2CAC5B,aAAa7H,KAAKyX,KAAK,aAAc,CAACkkC,QAAQA,EAAS9zC,KAAKA,MAG1DrI,YAAYm8C,EAAgBC,2CAC9B,aAAa57C,KAAKyX,KAAK,eAAgB,CAACkkC,QAAQA,EAASC,OAAOA,MAG9Dp8C,SAASm8C,2CACX,aAAa37C,KAAKmJ,IAAI,YAAa,CAACwyC,QAAQA,MAG1Cn8C,cAAcm8C,EAAgBpiB,EAAiBqiB,EAAe/zC,2CAChE,aAAa7H,KAAKyX,KAAK,iBAAkB,CAACkkC,QAAQA,EAASpiB,WAAUqiB,SAAQ/zC,WAG3ErI,YAAYq8C,EAAa3sC,iDACrBlP,KAAKyX,KAAK,oBAAqB,CAACokC,KAAKA,EAAM3sC,MAAMA,QAInC,gBAAY3N,GAEzBhD,EAAA,mCCxDfF,EAAAC,EAAAC,EAAA,sBAAAu9C,IAAA,MAAMC,EAAO,iBACN,SAASD,EAAME,EAAYC,GAC9B,QAAY16C,IAARy6C,EAAmB,MAAO,GAC9B,IAAIhxB,EAAIgxB,EAAIphC,WACRzT,EAAM80C,EAAMjxB,EAAEplB,OAClB,OAAIuB,GAAO,EAAU6jB,EACd+wB,EAAK5sC,OAAO,EAAGhI,GAAO6jB,0aCA1B,MAAekxB,EAYlB18C,YAAYI,GAPHI,KAAAquC,MAAgB8N,EAAA,EAsDjBn8C,KAAAo8C,iBAAmB,CAAOt0C,GAA6BnF,EAAA3C,UAAA,2BACrDA,KAAKq8C,UAAUv0C,MA/CrB9H,KAAKJ,IAAMA,GAAO,GAClBI,KAAKC,EAAID,KAAKJ,IAAIK,GAAK,GAR3B0I,WAAiB,OAAO69B,EAAA,EAAI79B,KAC5B2zC,gBACI,IAAI3zC,KAACA,GAAQ69B,EAAA,EACb,YAAajlC,IAAToH,GACGA,EAAKrF,GAAK,EAUb9D,UAEJgnC,EAAA,EAAI+V,yBAAyBv8C,KAAKw8C,kBAClCx8C,KAAKy8C,YAGCj9C,aAGMA,UAAUk9C,EAAsD35C,iDACtE,IAAK25C,EAAG18C,MAAOkO,KAAKnL,KAGpBvD,WAAW6G,EAAuDtD,GACxE,OAAO,IAAKsD,EAAKrG,MAAOsiB,OAAOvf,GAG7BvD,MAAMqI,EAAaqH,iDACflP,KAAKqzC,QAAQxrC,EAAMqH,KAGb1P,QAAQqI,EAAaqH,8CAG3B1P,IAAI+hB,GACVqE,MAAMrE,GAEA/hB,UAAU6K,EAAepE,GAC/BjG,KAAKoiB,SAAS3d,EAAA,cAAC2F,EAAA,EAAI,CAACC,OAAO,cACvB5F,EAAA,yBACoB,kBAARwB,EAAkBA,EAAMA,EAAI6B,WAKtCtI,UAAUsI,IAQJtI,sDAMZ,OAAO,IAEDA,yBACNQ,KAAKw8C,iBAAmBhW,EAAA,EAAImW,uBAAuB38C,KAAKo8C,kBAItD58C,MAAMuD,2CACR/C,KAAKsG,SAAWtG,KAAKgH,QAAQ/B,KAAKjF,MAClCA,KAAK28C,0BAEO,WADI38C,KAAK0sC,uBAEf1sC,KAAKm7C,cAAcp4C,MAG7B2gB,gBAAyB,YAA2BniB,IAApBvB,KAAK48C,WAG/Bp9C,KAAKuD,2CAEP,YADwBxB,IAApBvB,KAAK48C,aAA0B58C,KAAK48C,WAAa,IAC9C,IAAIjvC,QAAc,CAAOC,EAASC,IAAUlL,EAAA3C,UAAA,qBAC/CA,KAAK48C,WAAWp2C,KAAKoH,SACf5N,KAAK0F,MAAM3C,QAInBvD,MAAMk9C,EAAsD35C,2CAE9D,YADwBxB,IAApBvB,KAAK48C,aAA0B58C,KAAK48C,WAAa,IAC9C,IAAIjvC,QAAc,CAAOC,EAASC,IAAUlL,EAAA3C,UAAA,qBAC/CA,KAAK48C,WAAWp2C,KAAKoH,SACf,IAAK8uC,EAAG18C,MAAOkO,KAAKnL,QAIlCvD,WAAW0P,GACP,QAAwB3N,IAApBvB,KAAK48C,WAA0B,OACnC,IAAIhvC,EAAU5N,KAAK48C,WAAW71C,WACdxF,IAAZqM,EAIJA,EAAQsB,GAHJ0W,MAAM,wDAMdpmB,SAASsS,GACL00B,EAAA,EAAIhgC,KAAKsL,EAAM9R,KAAKsG,UACpBtG,KAAKsG,cAAW/E,EAGpB/B,YAAYsS,GACR00B,EAAA,EAAIt5B,QAAQ4E,EAAM9R,KAAKsG,UACvBtG,KAAKsG,cAAW/E,EAGpB/B,WACIgnC,EAAA,EAAIxhC,OAGRxF,UAAUmG,GACN6gC,EAAA,EAAIz/B,IAAIpB,GAGZnG,UAAUmG,GACN6gC,EAAA,EAAIn5B,SAAS1H,GAGjBnG,eACIgnC,EAAA,EAAInjC,eAGR7D,gBAAgBgI,GACZg/B,EAAA,EAAIl5B,gBAAgB9F,IAKrB,MAAeq1C,EAKlBr9C,YAAYqE,GACR7D,KAAK6D,WAAaA,EAClB7D,KAAKJ,IAAMiE,EAAWjE,IACtBI,KAAKC,EAAI4D,EAAW5D,EAGxBouC,YAAuB,OAAO8N,EAAA,EAIpB38C,SAASwP,EAA4CjM,GAC3D,OAAO,IAAKiM,EAAGhP,KAAK6D,YAAaye,OAAOvf,GAG5BvD,UAAUk9C,EAAsD35C,iDACtE,IAAK25C,EAAG18C,KAAK6D,YAAaqK,KAAKnL,KAGzBvD,MAAMqI,EAAaqH,iDAMzBlP,KAAK6D,WAAWwa,MAAMxW,EAAMqH,KAG5B1P,WAAW0P,GACjBlP,KAAK6D,WAAW8f,WAAWzU,GAGrB1P,SAAS6G,EAAqCtD,GACpD/C,KAAK6D,WAAWue,SAAS3d,EAAA,cAAoB4B,EAAMtD,IAG7CvD,YAAY6G,EAAqCtD,GACvD/C,KAAK6D,WAAWwjC,YAAY5iC,EAAA,cAAoB4B,EAAMtD,IAGhDvD,gBAAgBsS,GACtB9R,KAAK6D,WAAWue,SAAStQ,GAGnBtS,mBAAmBsS,GACzB9R,KAAK6D,WAAWwjC,YAAYv1B,GAGtBtS,WACNQ,KAAK6D,WAAWqsC,WAGV1wC,UAAUmG,GAChB3F,KAAK6D,WAAWuf,UAAUzd,GAGpBnG,UAAUmG,GAChB3F,KAAK6D,WAAW+gB,UAAUjf,GAGpBnG,eACNQ,KAAK6D,WAAWR,eAGV7D,gBAAgBgI,GACtBxH,KAAK6D,WAAWyJ,gBAAgB9F,IAIjC,MAAes1C,UAAoCD,EACtDr9C,YAAYu9C,GACRl9C,MAAMk9C,GAKVv9C,OAAOuD,GAAyB,OAAO,qCCxO3C,IAAAi6C,EAAA3+C,EAAA,IAAAA,EAAAK,EAAAs+C,EAAA,SAAA3+C,EAAAC,EAAAC,EAAA,yBAAAy+C,EAAA,OAAA3+C,EAAAK,EAAAs+C,EAAA,SAAA3+C,EAAAC,EAAAC,EAAA,yBAAAy+C,EAAA,OAAA3+C,EAAAK,EAAAs+C,EAAA,UAAA3+C,EAAAC,EAAAC,EAAA,0BAAAy+C,EAAA,QAAA3+C,EAAAK,EAAAs+C,EAAA,YAAA3+C,EAAAC,EAAAC,EAAA,4BAAAy+C,EAAA,cAAAC,EAAA5+C,EAAA,IAAAA,EAAAK,EAAAu+C,EAAA,SAAA5+C,EAAAC,EAAAC,EAAA,yBAAA0+C,EAAA,OAAA5+C,EAAAK,EAAAu+C,EAAA,SAAA5+C,EAAAC,EAAAC,EAAA,yBAAA0+C,EAAA,OAAA5+C,EAAAK,EAAAu+C,EAAA,UAAA5+C,EAAAC,EAAAC,EAAA,0BAAA0+C,EAAA,QAAA5+C,EAAAK,EAAAu+C,EAAA,YAAA5+C,EAAAC,EAAAC,EAAA,4BAAA0+C,EAAA,kLCcA,IAAaC,EAAb,cAA+Bz4C,EAAA,UAE3BjF,YAAYkF,GACR7E,MAAM6E,GACN1E,KAAK+0B,SAAW,IAAIooB,EAAA,EAASn9C,KAAK0E,OAEtClF,qBACIQ,KAAK+0B,SAASgR,cAAc/lC,KAAK0E,MAAMktB,YAE3CpyB,SAGAA,SACI,IAAIyI,UAACA,EAASuS,SAAEA,EAAQoX,WAAEA,GAAc5xB,KAAK0E,MAC7C,OAAOD,EAAA,qBAAKwD,UAAWA,QAEF1G,IAAbiZ,EACIxa,KAAK+0B,SAASzS,SACd7d,EAAA,sBAAMjE,SAAUR,KAAK+0B,SAASv0B,UAAWga,MAlBhD0iC,uUAAS1uC,CAAA,CADrBM,EAAA,GACYouC,iCCdb7+C,EAAAC,EAAAC,EAAA,sBAAA6+C,IAAA,IAAA34C,EAAApG,EAAA,GAAA6gB,EAAA7gB,EAAA,GAAA8gB,EAAA9gB,EAAA+gB,EAAAF,GAmBO,MAAMk+B,UAAwB34C,EAAA,UAGjCjF,YAAYkF,GACR7E,MAAM6E,GAgBF1E,KAAAq9C,oBAAsB,CAAC7pC,KACK,IAA5BxT,KAAKoF,MAAMk4C,eACXt9C,KAAK4uB,QAAU5uB,KAAK4uB,OAAO2uB,SAAS/pC,EAAI0G,SACvCla,KAAKw9C,MAEVx9C,KAAKy9C,YAGDz9C,KAAAy9C,OAAS,MACbz9C,KAAK8E,SAAS,CACVw4C,cAAet9C,KAAKoF,MAAMk4C,iBAzB9Bt9C,KAAKoF,MAAQ,CACTk4C,cAAc,GAItB99C,qBACIuL,SAASxF,iBAAiB,QAASvF,KAAKq9C,qBACxCtyC,SAASxF,iBAAiB,aAAcvF,KAAKq9C,qBAGjD79C,uBACIuL,SAAS2yC,oBAAoB,QAAS19C,KAAKq9C,qBAC3CtyC,SAAS2yC,oBAAoB,aAAc19C,KAAKq9C,qBAiBpD79C,SACI,IAAIa,KAACA,EAAIkgC,QAAEA,EAAOod,QAAEA,GAAW39C,KAAK0E,WACpBnD,IAAZo8C,IAAuBA,GAAU,GACrC,IAAIC,EAAUrd,EAAQgK,KAAKhjC,QAAchG,IAATgG,EAAElH,OAC9Bi9C,aAACA,GAAgBt9C,KAAKoF,MAE1B,OAAOX,EAAA,qBAAKwD,UAAU,YAClBxD,EAAA,wBAAQ+mB,IAAKjkB,GAAGvH,KAAK4uB,OAAOrnB,EAAGU,UAAU,4CAA2C41C,cACpE,WAAUC,gBACPR,EACf7wC,QAASzM,KAAKy9C,QACdh5C,EAAA,mBAAGwD,UAAWkX,IAAW,KAAM,OAAO9e,GAAM,kBAEhDoE,EAAA,qBAAK+mB,IAAKjkB,GAAKvH,KAAKw9C,KAAKj2C,EAAGU,UAAWkX,IAAW,CAAC4+B,iBAAgB,EAAMC,sBAAsBL,EAAS1wC,KAAOqwC,KAEvG/c,EAAQn4B,IAAI,CAACb,EAAEc,KACX,IAGInB,GAHA7G,KAACA,EAAImpB,QAAEA,EAAOtU,OAAEA,GAAU3N,EAC9B,YAAahG,IAATlB,QAAkCkB,IAAZioB,EACf/kB,EAAA,qBAAKwD,UAAU,uBAEV,IAAZ21C,SACar8C,IAATlB,IAAoBA,EAAO,MAAQA,GACvC6G,EAAIzC,EAAA,cAAAA,EAAA,cAAEA,EAAA,mBAAGwD,UAAWkX,IAAW,KAAM9e,EAAM,SAAQ49C,eAAe,mBAEvD18C,IAAX2T,EACOzQ,EAAA,oBAAIwD,UAAU,mBAAmBf,MAAIsiB,GACzC/kB,EAAA,mBAAGwD,UAAU,gBAAgBtB,IAAK0B,EAAOs+B,KAAK,IAAIl6B,QAAU+G,IAA4CA,EAAI6Z,iBAAiBnY,MAAYhO,MAAIsiB,wCC/E5KnrB,EAAAC,EAAAC,EAAA,sBAAA2/C,IAAA,IAAAz5C,EAAApG,EAAA,GAMO,MAAM6/C,UAAiBz5C,EAAA,UAC1BjF,SACI,IAAI2O,KAACA,GAAQnO,KAAK0E,MAClB,IAAKyJ,EAAM,OAAO,KAClB,IAAI7P,EAAqB,kBAAT6P,EAAoB,IAAIC,KAAKA,KAAK2H,MAAM5H,IAASA,EAC7DgwC,EAAM,IAAI/vC,KACV8K,EAAOilC,EAAI9vC,UAAY/P,EAAE+P,UACzB+vC,EAAMD,EAAIE,UACVC,EAAMhgD,EAAE+/C,UAAWE,EAAKjgD,EAAEkgD,WAAYC,EAAOngD,EAAEogD,aAAcC,EAAMrgD,EAAEsgD,WAAW,EAChFC,EAAKN,GAASE,EAAO,GAAG,KAAK,KAAOA,EACxC,OAAIvlC,GAAO,MAAsB5a,EAAEwgD,cAAc,SAAIH,EAAM,SAAIL,EAAM,UAAOO,EACxE3lC,EAAO,MACAolC,IAAQF,GACVllC,EAAO,EAAG,gBAAQ,iBAAS2lC,EAC1BA,EAEN3lC,EAAO,QACAylC,EAAM,SAAIL,EAAM,UAEpBhgD,EAAEwgD,cAAc,SAAIH,EAAM,SAAIL,EAAM,yCCzBnDjgD,EAAAC,EAAAC,EAAA,sBAAAwgD,IAAA,IAAAt6C,EAAApG,EAAA,GAAA6gB,EAAA7gB,EAAA,GAAA8gB,EAAA9gB,EAAA+gB,EAAAF,GAAA8/B,EAAA3gD,EAAA,GAYO,MAAM0gD,UAAct6C,EAAA,UACvBjF,SACI,IACIy/C,GADA5+C,KAACA,EAAI8nC,KAAEA,EAAI3H,YAAEA,EAAW0e,GAAEA,EAAEC,GAAEA,GAAMn/C,KAAK0E,MAGzCu6C,EADuB,kBAAhBze,EACA/7B,EAAA,yBAAM+7B,GAENA,EACX,IAAIvkB,EAAKkD,IACL,aACK5d,IAAL29C,EAAgB,OAAO,MAAMA,OACxB39C,IAAL49C,EAAgB,OAAO,MAAMA,GACjC,OAAO16C,EAAA,qBAAKwD,UAAWgU,GACnBxX,EAAA,cAACu6C,EAAA,MAAK,CAAC/2C,UAAU,iBAAiBgG,IAAK5N,IACvCoE,EAAA,qBAAKwD,UAAU,cACXxD,EAAA,oBAAIwD,UAAU,QAAQkgC,GACrB8W,2WCLV,MAAMG,UAAkB36C,EAAA,UAA/BjF,kCAEYQ,KAAA2G,IAAc,KAGd3G,KAAA8rB,SAAW,CAACtY,IAChBxT,KAAK2G,IAAM6M,EAAI0G,OAAOhL,WACL3N,IAAbvB,KAAK2G,MACL3G,KAAK2G,IAAM3G,KAAK2G,IAAIkjB,OACH,KAAb7pB,KAAK2G,MAAY3G,KAAK2G,SAAMpF,KAEA,IAAhCvB,KAAK0E,MAAM26C,mBACXr/C,KAAKupB,UAAYvpB,KAAK2G,OAGtB3G,KAAAQ,SAAW,CAAOgT,GAA6B7Q,EAAA3C,UAAA,qBAGnD,GAFAwT,EAAI6Z,iBACa,OAAbrtB,KAAK2G,MAAc3G,KAAK2G,IAAM3G,KAAK0E,MAAMyf,SAAW,KACpB,IAAhCnkB,KAAK0E,MAAM26C,iBAA2B,CACtC,IAAKr/C,KAAK2G,IAAK,OACX3G,KAAKyrB,QAAOzrB,KAAKyrB,MAAMlC,UAAW,SAEpCvpB,KAAK0E,MAAMyd,SAASniB,KAAK2G,KAC3B3G,KAAKyrB,QAAOzrB,KAAKyrB,MAAMlC,UAAW,MAE1C/pB,QACQQ,KAAKyrB,QAAOzrB,KAAKyrB,MAAMvc,MAAQ,IAEvC1P,SACI,IAEI8/C,EAOAC,GATAt3C,UAACA,EAASu3C,eAAEA,EAAc7zB,QAAEA,EAAOvrB,MACnCA,EAAKwiB,YAAEA,EAAW68B,WAAEA,EAAUnzB,UAAEA,EAASzI,KAAEA,GAAQ7jB,KAAK0E,MAE5D,OAAQmf,GACJ,QACA,IAAK,KAAMy7B,EAAY,iBAAkB,MACzC,IAAK,KAAMA,EAAY,iBAAkB,MACzC,IAAK,KAAMA,EAAY,iBAI3B,YADc/9C,IAAVnB,IAAqBm/C,EAAM96C,EAAA,uBAAOwD,UAAU,qBAAqB7H,IAC9DqE,EAAA,sBAAMwD,UAAWA,EAAWzH,SAAUR,KAAKQ,UAC9CiE,EAAA,qBAAKwD,UAAWkX,IAAW,cAAemgC,IACrCC,EACD96C,EAAA,uBAAO+mB,IAAKjkB,GAAGvH,KAAKyrB,MAAMlkB,EAAGukB,SAAU9rB,KAAK8rB,SACxCjkB,KAAK,OACL3H,KAAK,MACLyrB,QAASA,EACT1jB,UAAWkX,IAAW,eAAgBqgC,GAAkB,kBACxD58B,YAAaA,EACb8S,aAAc11B,KAAK0E,MAAMyf,QACzBmI,UAAWA,IACf7nB,EAAA,qBAAKwD,UAAU,sBACXxD,EAAA,wBAAQwD,UAAU,kBACdJ,KAAK,SACL0hB,SAAUvpB,KAAKupB,UACf9kB,EAAA,mBAAGwD,UAAU,iBACbxD,EAAA,mBAAGwD,UAAU,OACZw3C,qUAtDTjxC,CAAA,CAAX86B,EAAA,gEC1BLjrC,EAAAC,EAAAC,EAAA,sBAAAmhD,IAAA,IAAAj7C,EAAApG,EAAA,GAAAshD,EAAAthD,EAAA,GAAAuhD,EAAAvhD,EAAA+gB,EAAAugC,GAAAE,EAAAxhD,EAAA,GAAA6d,EAAA7d,EAAA+gB,EAAAygC,GAAAC,EAAAzhD,EAAA,IAmCO,MAAMqhD,UAAkBj7C,EAAA,UAI3BjF,YAAYkF,GACR7E,MAAM6E,GAJF1E,KAAAS,OAAc,GACdT,KAAA+/C,UAAwB,GAI5B//C,KAAKoF,MAAQ,CACT46C,aAASz+C,EACTw+C,UAAW,IAEf//C,KAAKigD,OAASjgD,KAAKigD,OAAOh7C,KAAKjF,MAC/BA,KAAKkgD,OAASlgD,KAAKkgD,OAAOj7C,KAAKjF,MAG3BR,QAAQ2gD,GACZ,IAGI3pB,EAAaL,EAHb5nB,EAAOvO,KAAK0E,MAAM07C,MAAMD,GAC5B,QAAa5+C,IAATgN,EAAoB,YACHhN,IAAjBvB,KAAKggD,SAAuBhgD,KAAK+/C,UAAUv5C,KAAKxG,KAAKggD,SAErDhgD,KAAK+/C,UAAUn6C,OAAS,IACxB4wB,EAAc/xB,EAAA,cAAC47C,EAAY,CAACC,OAAO,OAAO/+B,KAAK,uBAC/C4U,EAAUn2B,KAAKigD,QAEnB,IAAI51C,OAACA,EAAMoR,OAAEA,GAAUzb,KAAK0E,MACxB67C,OAA2Bh/C,IAAdgN,EAAKyU,KAClB,CAACs9B,OAAQ,eAAgB/+B,KAAMvhB,KAAK0E,MAAM6xB,cAAgB,gBAC1D,CAACrK,OAAQ,cAAe3K,KAAM,sBAC9Bi/B,EAAY,CACZ/V,SAAUl8B,EAAKk8B,SACflU,aAAc9xB,EAAA,cAAC47C,EAAYvgD,OAAAqI,OAAA,GAAKo4C,IAChC//C,SAAUR,KAAKkgD,OACf1pB,YAAaA,EACbL,QAASA,GAEHn2B,KAAK+/C,UAAUn6C,OACzB5F,KAAKggD,QAAU,CACXG,SAAUA,EACV5xC,KAAMA,EACN7J,MAAO87C,GAEXxgD,KAAK8E,SAAS,CACVk7C,QAAShgD,KAAKggD,QACdD,UAAW//C,KAAK+/C,YAGxBvgD,qBACIQ,KAAKygD,QAAQzgD,KAAK0E,MAAMsiB,OAEpBxnB,OAAOiB,GACXm/C,EAAAvsC,EAAElL,OAAOnI,KAAKS,OAAQA,GACtBT,KAAKggD,QAAUhgD,KAAK+/C,UAAUh5C,MAC9B/G,KAAK8E,SAAS,CACVk7C,QAAShgD,KAAKggD,QACdD,UAAW//C,KAAK+/C,YAGhBvgD,OAAOiB,GACXm/C,EAAAvsC,EAAElL,OAAOnI,KAAKS,OAAQA,GAEtB,IAIIigD,GAJA19B,KAACA,GAAQhjB,KAAKggD,QAAQzxC,KAC1B,QAAahN,IAATyhB,EACA,OAAOhjB,KAAK0E,MAAMlE,SAASR,KAAKS,QAIhCigD,EADgB,kBAAT19B,EACQA,EAGAA,EAAKhjB,KAAKS,QAE7BT,KAAKygD,QAAQC,GAEjBlhD,SACI,IAAIyI,UAACA,EAASoC,OAAEA,EAAMoR,OAAEA,GAAUzb,KAAK0E,OACnCs7C,QAACA,EAAOD,UAAEA,GAAa//C,KAAKoF,OAC5B+6C,SAACA,EAAQ5xC,KAAEA,GAAQyxC,EAEnBhE,EAAM+D,EAAUn6C,OAAS,EAC7B,OAAOnB,EAAA,qBAAKwD,UAAWA,GACnBxD,EAAA,yBACK4F,GAAUA,EAAOkE,EAAMytC,GACxBv3C,EAAA,cAACq7C,EAAA,UAAShgD,OAAAqI,OAAA,CAACxB,IAAKw5C,EAAUvuB,WAAY5xB,KAAKS,QAAYu/C,EAAQt7C,QAC9D+W,GAAUA,EAAOlN,EAAMytC,MAMxC,MAAMqE,EAAgB37C,IAClB,IACIi8C,EAAOC,GADPN,OAACA,EAAM/+B,KAAEA,EAAI2K,OAAEA,GAAUxnB,EAI7B,YAFenD,IAAX++C,IAAsBK,EAAQl8C,EAAA,mBAAGwD,UAAWiU,IAAU,KAAM,MAAQokC,WACzD/+C,IAAX2qB,IAAsB00B,EAAQn8C,EAAA,mBAAGwD,UAAWiU,IAAU,KAAM,MAAQgQ,MACjEznB,EAAA,cAACA,EAAA,SAAc,KAAEk8C,MAAQj8C,EAAM6c,SAAOq/B,kqBC7H1C,MAAev8B,EAClB7kB,YAAYqhD,GAAyB,GAG7B7gD,KAAA8gD,SAAmB,EACf9gD,KAAA+gD,SAAmB,EACX/gD,KAAAghD,YAAsB,EACpBhhD,KAAAihD,QAAkB,EAE5BjhD,KAAAkhD,WAAqB,EAiBvBlhD,KAAAmhD,UAAY,IACZnhD,KAAA4X,eAAYrW,EACZvB,KAAA6X,SAAW,GACX7X,KAAAohD,eAA+B,OA3BrCphD,KAAKqhD,OAASC,EAAA,EAAWnvB,MAAS,GAAI,CAACC,KAAKyuB,IAQtC7+C,YACN,OAAwB,IAApBhC,KAAKghD,WAA4B,MACjB,IAAhBhhD,KAAKihD,OACFjhD,KAAKqhD,YADZ,EAMJ7hD,cACIQ,KAAKuhD,OAAS,KAAKzhD,OAAA0hD,EAAA,EAAA1hD,GAEvBN,iBACIQ,KAAKyhD,UAAY,KAAK3hD,OAAA0hD,EAAA,EAAA1hD,GAY1BN,QACIQ,KAAK8gD,SAAU,EACf9gD,KAAKghD,YAAa,EAClBhhD,KAAKihD,QAAS,EACdjhD,KAAK+C,WAAQxB,EACbvB,KAAKkhD,WAAY,EACjBlhD,KAAKqhD,OAAO96C,QACZvG,KAAK0hD,kBAAangD,GAGtB/B,OAAOsH,GACyB,SAAxB9G,KAAKohD,eACLphD,KAAKqhD,OAAOM,QAAQ76C,GAEpB9G,KAAKqhD,OAAO76C,KAAKM,GAGnBtH,MAAMuD,2CACR/C,KAAKmjB,QACLnjB,KAAKghD,YAAa,EAClBhhD,KAAK+C,MAAQA,QACP/C,KAAK8hC,SAGTtiC,+CACF,IAAuB,IAAnBQ,KAAKkhD,UAAoB,OAC7B,IAAqB,IAAjBlhD,KAAK+gD,QAAkB,OAC3B/gD,KAAK+gD,SAAU,EACf,IAAIlpC,EAAW7X,KAAK6X,SAAW,GACV,IAAjB7X,KAAK8gD,SACD9gD,KAAKmhD,UAAYnhD,KAAK6X,WAAUA,EAAW7X,KAAKmhD,UAAU,GAElE,IAAItgD,QAAYb,KAAKwb,KACbxb,KAAK+C,MACL/C,KAAK4X,UACLC,GACR7X,KAAK+gD,SAAU,EACf/gD,KAAKihD,QAAS,EACd,IAAI95C,EAAMtG,EAAI+E,QACK,IAAf5F,KAAK8gD,SAAkB35C,EAAInH,KAAKmhD,YACjB,IAAfnhD,KAAK8gD,SAAmB35C,EAAInH,KAAK6X,UAEjC7X,KAAKkhD,WAAY,IACf/5C,EACFtG,EAAI08B,OAAOp2B,EAAK,IAGhBnH,KAAKkhD,WAAY,EAET,IAAR/5C,GAIJnH,KAAK0hD,aAAa7gD,EAAIsG,EAAI,IACE,SAAxBnH,KAAKohD,eACLphD,KAAKqhD,OAAO76C,QAAQ3F,GAEpBb,KAAKqhD,OAAOM,WAAW9gD,EAAI+gD,WAC/B5hD,KAAK8gD,SAAU,GARX9gD,KAAKqhD,OAAO96C,WA/ERiI,EAAA,CAAX8yC,EAAA,iCACW9yC,EAAA,CAAX8yC,EAAA,oCACW9yC,EAAA,CAAX8yC,EAAA,gCAEW9yC,EAAA,CAAX8yC,EAAA,mCACS9yC,EAAA,CAAT8yC,EAAA,6BAMW9yC,EAAA,CAAX8yC,EAAA,gCACW9yC,EAAA,CAAX8yC,EAAA,iXCdE,MAAeO,EAClBriD,YAAYsiD,EAAkB,KAItB9hD,KAAA+B,IAAU,GACN/B,KAAA+hD,KAAO,IAAIC,IAJnBhiD,KAAK8hD,SAAWA,EAMpBtiD,QAAQwY,GACJ,IAAIjW,EAAe,GACnB,IAAK,IAAIuB,KAAM0U,EAAK,CAChB,GAAW,OAAP1U,EAAa,SACjB,IAAIwD,EAAO9G,KAAK+hD,KAAK54C,IAAI7F,QACZ/B,IAATuF,IACA/E,EAAIyE,KAAKlD,GACTwD,EAAO,CAACxD,GAAGA,GACXtD,KAAK+hD,KAAKt8C,IAAInC,EAAIwD,IAG1B9G,KAAKiiD,OAAOlgD,GAGhBvC,IAAI8D,GACA,QAAW/B,IAAP+B,GAA2B,OAAPA,EAAa,OAAO,KAC5C,IAAIwD,EAAO9G,KAAK+hD,KAAK54C,IAAI7F,GAMzB,YALa/B,IAATuF,IACA9G,KAAK+hD,KAAKt8C,IAAInC,EAAI,CAACA,GAAGA,IACtBtD,KAAKiiD,OAAO,CAAC3+C,IACbwD,EAAO9G,KAAK+hD,KAAK54C,IAAI7F,IAElBwD,EAEHtH,QAAQ8D,EAAWwD,QACVvF,IAATuF,GACA9G,KAAK+hD,KAAKt8C,IAAInC,EAAI,MAClBtD,KAAK+B,IAAIyE,KAAK,CAAClD,GAAIA,MAGnBtD,KAAK+hD,KAAKt8C,IAAInC,EAAIwD,GAClB9G,KAAK+B,IAAIyE,KAAKM,IAEd9G,KAAK+B,IAAI6D,OAAS5F,KAAK8hD,WACvBh7C,EAAO9G,KAAK+B,IAAIg8B,QAChB/9B,KAAK+hD,KAAKtkB,OAAO32B,EAAKxD,KAGhB9D,OAAOwY,2CACjB,IAAIhW,QAAchC,KAAKkiD,SAASlqC,GAChC,QAAczW,IAAVS,EACA,IAAK,IAAIsB,KAAM0U,EAAK,CAChB,GAAW,OAAP1U,EAAa,SACjB,IAAIwD,QAAa9G,KAAKmiD,QAAQ7+C,GAC9BtD,KAAK0W,QAAQpT,EAAIwD,QAIrB,IAAK,IAAIxD,KAAM0U,EAAK,CAChB,IAAIlR,EAAO9E,EAAMsF,KAAKC,GAAKA,EAAEjE,KAAOA,GACpCtD,KAAK0W,QAAQpT,EAAIwD,qUApDjB0H,CAAA,CAAX8yC,EAAA,uLCRE,MAAe53B,GAOf,MAAM04B,UAAmB14B,EAE5BlqB,YAAY6iD,GACRxiD,QACAG,KAAKqiD,KAAOA,EAEhB7iD,MAAMoqB,EAAe1a,GACjB,IAAIrO,EAAMb,KAAKqiD,KAAKnzC,GACpB,QAAY3N,IAARV,EACJ,cAAeA,GACX,IAAK,YAAa,OAClB,IAAK,SAAoC,YAA1B+oB,EAAKpjB,KAAK3F,GACzB,QAA4B,YAAnB+oB,EAAKpjB,QAAQ3F,KAK3B,MAAeyhD,UAAuB54B,EAEzClqB,YAAYI,GACRC,QACAG,KAAKJ,IAAMA,GAIZ,MAAM+pB,UAAqB24B,EAC9B9iD,MAAMoqB,EAAe1a,GACjB,cAAeA,GACX,QACA,IAAK,UAAW,OAChB,IAAK,SACD,GAAc,OAAVA,EAAgB,OACpB,MACJ,IAAK,SACD,GAAKA,EAAiB2a,OAAOjkB,OAAS,EAAG,OACzC,MACJ,IAAK,SACD,GAA0BkkB,MAArB5a,EAA0B,OAC/B,MACJ,IAAK,aAGT0a,EAAKpjB,KAAKxG,KAAKJ,IAAIirB,WAIpB,MAAM03B,UAAgBD,EAKzB9iD,YAAYI,EAAcwqB,EAAcG,GACpC1qB,MAAMD,GACNI,KAAKwiD,OAASnsC,EAAAhD,EAAEwmC,SAASj6C,EAAIwqB,KAC7BpqB,KAAKyiD,OAASpsC,EAAAhD,EAAEwmC,SAASj6C,EAAI2qB,KAC7BvqB,KAAKoqB,IAAMA,EACXpqB,KAAKuqB,IAAMA,EAEf/qB,MAAMoqB,EAAe1a,GACjB,QAAc3N,IAAV2N,GAAiC,OAAVA,EAAgB,OAC3C,IAAIkQ,EAAIvN,OAAO3C,GACL4a,MAAN1K,EACAwK,EAAKpjB,KAAKxG,KAAKJ,IAAI45B,QAGnBx5B,KAAK0iD,UAAU94B,EAAMxK,GAInB5f,UAAUoqB,EAAe1a,QACd3N,IAAbvB,KAAKoqB,KAAqBvY,OAAO3C,GAASlP,KAAKoqB,KAC/CR,EAAKpjB,KAAKxG,KAAKwiD,OAAO,CAACp4B,IAAIpqB,KAAKoqB,YAEnB7oB,IAAbvB,KAAKuqB,KAAqB1Y,OAAO3C,GAASlP,KAAKuqB,KAC/CX,EAAKpjB,KAAKxG,KAAKyiD,OAAO,CAACl4B,IAAIvqB,KAAKuqB,QAKrC,MAAMP,UAAgBu4B,EACf/iD,UAAUoqB,EAAexK,GAC/Bvf,MAAM6iD,UAAU94B,EAAMxK,IACM,IAAxBvN,OAAOqY,UAAU9K,IACjBwK,EAAKpjB,KAAKxG,KAAKJ,IAAI+iD,6VCpFxB,MAAeC,EAiBlBpjD,YAAYqjD,EAAiB5H,EAAuB6H,EAAuBtoC,GAPrDxa,KAAAirB,OAAmB,GACnBjrB,KAAA+iD,cAA0B,GAiHtC/iD,KAAAgjD,cAAgB,CAACxvC,IACvBxT,KAAKijD,YAAYzvC,EAAI0G,OAAOhL,OAAO,KAoCvClP,KAAAkjD,UAAYpjD,OAAAwP,EAAA,EAAAxP,CAAS,KACjB,IAAqB,IAAjBE,KAAKmjD,QAAmB,OAAO,KACnC,IAEI/iD,GAFAsB,KAACA,EAAI0hD,OAAEA,GAAUpjD,KAAK6iD,QAC1B,IAAe,IAAXO,EAAiB,OAAOpjD,KAAKsiB,SAEjC,QAAgB/gB,IAAZvB,KAAKL,GACLS,EAAQJ,KAAKE,SAEZ,CACD,IAAImjD,EAAUrjD,KAAKL,GAAGS,MACN,OAAZijD,IAAkBjjD,EAAQ,MAC9BA,EAAQijD,GAAWrjD,KAAKE,KAK5B,OAHiC,IAA7BF,KAAKi7C,WAAWpwB,WAAiD,IAA5BnpB,EAAKgD,MAAM4+C,cAClC,OAAVljD,IAAgBA,EAAQsP,EAAA,cAAAA,EAAA,cAAGtP,SAAYsP,EAAA,sBAAMzH,UAAU,eAAa,OAErEvG,EAAK6hD,eAAenjD,EAAOJ,KAAKsiB,YA/JvCtiB,KAAK6iD,QAAUA,EACf,IAAI3iD,KAACA,GAAQ+6C,EAMb,GALAj7C,KAAKE,KAAOA,EACZF,KAAKi7C,WAAaA,EAClBj7C,KAAK8iD,WAAaA,EAClB9iD,KAAKwa,SAAWA,EAChBxa,KAAKL,GAAKkjD,EAAQW,UAAUtjD,QACZqB,IAAZvB,KAAKL,GACLK,KAAKqsB,UAAW,EAChBrsB,KAAKupB,UAAW,EAChBvpB,KAAKmjD,SAAU,MAEd,CACD,IAAI92B,SAACA,EAAQ9C,SAAEA,EAAQ45B,QAAEA,GAAWnjD,KAAKL,GACzCK,KAAKqsB,UAAyB,IAAbA,EACjBrsB,KAAKupB,UAAyB,IAAbA,EACjBvpB,KAAKmjD,WAAwB,IAAZA,GAErBnjD,KAAKkP,MAAQlP,KAAK01B,aAAgBmtB,EAAQ7/C,SAAS9C,GACnDF,KAAK0qB,OAzBCuK,eAAkC,OAAQj1B,KAAKirB,OAAOrlB,OAAS5F,KAAK+iD,cAAcn9C,OAAQ,EA4B1FpG,OAMN,GALAQ,KAAK4qB,MAAQ,IACoB,IAA7B5qB,KAAKi7C,WAAWpwB,UAChB7qB,KAAK4qB,MAAMpkB,KAAK,IAAImjB,EAAa3pB,KAAK6iD,QAAQnhD,KAAK9B,MAEvDI,KAAK2qB,kBACWppB,IAAZvB,KAAKL,GAAkB,OAC3B,IAAIirB,MAACA,GAAS5qB,KAAKL,GACnB,QAAc4B,IAAVqpB,EACJ,IAA6B,IAAzB4K,MAAMC,QAAQ7K,GAIlB,IAAK,IAAImL,KAAQnL,EACb5qB,KAAK4qB,MAAMpkB,KAAK,IAAI47C,EAAWrsB,SAJ/B/1B,KAAK4qB,MAAMpkB,KAAK,IAAI47C,EAAWx3B,IAQ7BprB,cAGVA,aACI,IAAIoqB,EAAgB,GACpB,IAAK,IAAIoB,KAAKhrB,KAAK4qB,MAAOI,EAAEX,MAAMT,EAAM5pB,KAAKkP,OACzB,IAAhB0a,EAAKhkB,OACL5F,KAAK6iD,QAAQY,kBAAkBzjD,OAG/BA,KAAK6iD,QAAQa,eAAe1jD,MAC5BA,KAAKirB,OAAOzkB,QAAQojB,IAIlBN,WACN,OAA6B,IAAtBtpB,KAAKirB,OAAOrlB,OAGvBpG,SAASyG,QACO1E,IAAR0E,IACe,kBAARA,EAAkBjG,KAAKirB,OAAOzkB,KAAKP,GACzCjG,KAAKirB,OAAOzkB,QAAQP,IAG7BzG,gBAAgByG,QACA1E,IAAR0E,IACe,kBAARA,EAAkBjG,KAAK+iD,cAAcv8C,KAAKP,GAChDjG,KAAK+iD,cAAcv8C,QAAQP,IAGpCzG,aACIQ,KAAKirB,OAAOsS,OAAO,GAGvB/9B,oBACIQ,KAAK+iD,cAAcxlB,OAAO,GAGpB/9B,MAAM0P,GAAgB,OAAOA,EAE7B1P,gBAAgB0P,IAChB1P,aAAa0P,IACK,IAApBlP,KAAK2jD,aACT3jD,KAAK6iD,QAAQe,SAAS5jD,KAAKE,MAAQF,KAAKkP,MAAQlP,KAAK+V,MAAM7G,IAG/D1P,SAAS0P,IACmB,IAApBlP,KAAK2jD,YAGT3jD,KAAKijD,YAAY/zC,GAAO,GAG5B1P,WACI,OAAOQ,KAAK6iD,QAAQ7/C,SAAShD,KAAKE,MAGtCV,cAAuB,OAAOQ,KAAKqsB,SACnC7sB,cAAuB,OAAOQ,KAAKupB,SACnC/pB,aAAsB,OAAOQ,KAAKmjD,QAClC3jD,YAAY0P,GAAgBlP,KAAKqsB,SAAWnd,EAC5C1P,YAAY0P,GAAgBlP,KAAKupB,SAAWra,EAC5C1P,WAAW0P,GAAgBlP,KAAKmjD,QAAUj0C,EAOhC1P,YAAYqkD,EAAeC,GACjC,IACIC,EACAC,EAFAC,EAAOjkD,KAAKkP,WAGA3N,IAAZvB,KAAKL,KACLokD,EAAa/jD,KAAKL,GAAGokD,WACrBC,EAAYhkD,KAAKL,GAAGqkD,WAExB,IAAIE,GAAc,OACC3iD,IAAfwiD,IACA/jD,KAAK2jD,YAAa,EAClBO,EAAcH,EAAW/jD,KAAK6iD,QAAS7iD,KAAKkP,MAAO+0C,GACnDjkD,KAAK2jD,YAAa,IAEF,IAAhBO,IACAlkD,KAAKmkD,aAAaN,IACE,IAAhBC,GAAsB9jD,KAAKokD,gBAAgBP,QAC7BtiD,IAAdyiD,IACAhkD,KAAK2jD,YAAa,EAClBK,EAAUhkD,KAAK6iD,QAAS7iD,KAAKkP,MAAO+0C,GACpCjkD,KAAK2jD,YAAa,IAK9B17C,gBACI,IAAIo8C,EAEJ,OAD4B,IAAxBrkD,KAAK6iD,QAAQO,SAAkBiB,EAAa,gBACzCxnC,IAAWwnC,EAAYrkD,KAAK6iD,QAAQnhD,KAAK4iD,WAAYtkD,KAAKL,IAAMK,KAAKL,GAAGsI,WAwBzEzI,gBACN,QAAsB+B,IAAlBvB,KAAKwa,SACL,OAAO9K,EAAA,cAAAA,EAAA,cAAG1P,KAAKwa,UAEnB,QAAgBjZ,IAAZvB,KAAKL,GAAkB,OAC3B,IAAI4kD,QAACA,GAAWvkD,KAAKL,GACrB,MAAuB,oBAAZ4kD,EAA+BA,EAAQvkD,KAAKkP,OAChDq1C,EAGD/kD,eACN,IAAIglD,EAAqB,IAAIxkD,KAAKirB,UAAWjrB,KAAK+iD,eAClD,GAAyB,IAArByB,EAAU5+C,OAAc,OAAO,KACnC,IAAIw9C,OAACA,GAAUpjD,KAAK6iD,QAChB4B,GAAiB,IAAXrB,EAAiB,OAAS,MACpC,OAAOoB,EAAUp8C,IAAInC,GAAOyJ,EAAA,cAAoB+0C,EAC5C,CACI99C,IAAKV,EACLgC,UAAW,wCAEfyH,EAAA,cAAAA,EAAA,cAAEA,EAAA,mBAAGzH,UAAU,qCAAqChC,MA9LhDuI,EAAA,CAAXib,EAAA,gCACWjb,EAAA,CAAXib,EAAA,uCACSjb,EAAA,CAATib,EAAA,gCAGWjb,EAAA,CAAXib,EAAA,iCA0DSjb,EAAA,CAATib,EAAA,4BC7EE,MAAMi7B,UAAmB9B,EAAhCpjD,kCACcQ,KAAAosB,UAAY,OAIZ5sB,gBAAgB0P,GACH,OAAflP,KAAKyrB,QACTzrB,KAAKyrB,MAAMvc,MAAQA,GAEvB0T,kBAA6B,OAAQ5iB,KAAKL,IAAMK,KAAKL,GAAGijB,aAAgB5iB,KAAKE,KAGnEV,OAAOgU,GACbxT,KAAKgjD,cAAcxvC,GACnBxT,KAAK+qB,aACL/qB,KAAK6iD,QAAQ8B,oBAEPnlD,QAAQgU,GACdxT,KAAK6E,aACL7E,KAAK6iD,QAAQY,kBAAkBzjD,MAC/BA,KAAK6iD,QAAQ+B,eAEPplD,SAASgU,IAGnBhU,YAAY0P,GACW,OAAflP,KAAKyrB,QACTzrB,KAAKyrB,MAAMY,SAAWrsB,KAAKqsB,SAAWnd,GAE1C1P,YAAY0P,GACW,OAAflP,KAAKyrB,QACTzrB,KAAKyrB,MAAMlC,SAAWvpB,KAAKupB,SAAWra,GAG1C1P,SACI,IAAIqlD,EAAgB7kD,KAAK6kD,gBACzB,QAAsBtjD,IAAlBsjD,EAA6B,OAAOA,EACxC,IAAI5oC,EAAK,GAST,OANsB,IAAlBjc,KAAKi1B,SACLhZ,EAAG,eAAgB,EAGnBA,EAAG,kBAAgD,IAA7Bjc,KAAKi7C,WAAWpwB,SAEnCnb,EAAA,cAAAA,EAAA,cAAEA,EAAA,uBAAO8b,IAAKC,GAAOzrB,KAAKyrB,MAAQA,EACrCxjB,UAAW4U,IAAW7c,KAAKiI,UAAWgU,GACtCpU,KAAM7H,KAAKosB,UACXsJ,aAAc11B,KAAKkP,MACnB4c,SAAWtY,GAAgCxT,KAAK8rB,SAAStY,GACzDoP,YAAa5iB,KAAK4iB,YAClByJ,SAAUrsB,KAAKqsB,SACf9C,SAAUvpB,KAAKupB,SACfu7B,UAAa9kD,KAAK8kD,UAClBn5B,QAAYnY,GAA+BxT,KAAK2rB,QAAQnY,GACxDoY,OAASpY,GAA+BxT,KAAK4rB,OAAOpY,GACpD8Y,UAAYtsB,KAAKi7C,WAA4B3uB,YAC5CtsB,KAAK+kD,iBC3DX,MAAMC,UAAqBN,EAAlCllD,kCACcQ,KAAAosB,UAAY,SAGZ5sB,aACNK,MAAM8qB,aACN,IAAI/qB,EAAMI,KAAK6iD,QAAQnhD,KAAK9B,KACxBwqB,IAACA,EAAGG,IAAEA,GAAOvqB,KAAKi7C,WACtBj7C,KAAK4qB,MAAMpkB,KACkB,YAAzBxG,KAAKi7C,WAAWpzC,KACZ,IAAI06C,EAAQ3iD,EAAKwqB,EAAKG,GACtB,IAAIP,EAAQpqB,EAAKwqB,EAAKG,IAYxB/qB,MAAM0P,GACZ,QAAc3N,IAAV2N,GAAiC,OAAVA,EAC3B,OAAO2C,OAAO3C,IC3Bf,MAAM+1C,UAAqBD,EAAlCxlD,kCACcQ,KAAAosB,UAAY,SASZpsB,KAAA8kD,UAAY,CAACtxC,IACnB,IAAI7M,EAAM6M,EAAI0xC,QACd7mC,MAAM8mC,YAAcnlD,KAAKolD,WAAWz+C,KAT9BnH,WAAWmH,GACjB,OAAa,KAANA,GAAkB,IAANA,GAAiB,KAANA,GAAkB,KAANA,GACnCA,GAAK,IAAMA,GAAK,IAChBA,GAAK,IAAMA,GAAK,KACV,MAANA,GAAmB,MAANA,GCPrB,MAAM0+C,UAAmBX,EAAhCllD,kCACcQ,KAAAosB,UAAY,QCCnB,MAAMk5B,UAAuB1C,EAApCpjD,kCA0BcQ,KAAAgjD,cAAgB,CAACxvC,IACvBxT,KAAKmkD,cAAoC,IAAvB3wC,EAAI0G,OAAO2f,QAAkB75B,KAAK25B,UAAY35B,KAAK45B,cAG/D55B,KAAAyM,QAAU,MAChBzM,KAAK6iD,QAAQ+B,iBAzBPplD,OAEN,GADAK,MAAM6qB,YACUnpB,IAAZvB,KAAKL,GAAkB,CACvB,IAAIg6B,UAACA,EAASC,WAAEA,GAAc55B,KAAKL,GACNK,KAAK25B,eAAhBp4B,IAAdo4B,GACkBA,EACQ35B,KAAK45B,gBAAhBr4B,IAAfq4B,GACmBA,OAGvB55B,KAAK25B,WAAY,EACjB35B,KAAK45B,YAAa,EAGhBp6B,gBAAgB0P,GACtBlP,KAAKyrB,MAAMoO,QAAU3qB,IAAUlP,KAAK25B,UAExCn6B,YAAY0P,GAAgBlP,KAAKyrB,MAAMY,SAAWrsB,KAAKqsB,SAAWnd,EAClE1P,YAAY0P,GAAgBlP,KAAKyrB,MAAMlC,SAAWvpB,KAAKupB,SAAWra,EAUlE1P,SACI,IAAIyc,EAAKY,IAAW7c,KAAKiI,UAAW,yBAChCwjB,EAAQ/b,EAAA,uBACR8b,IAAMC,GAAQzrB,KAAKyrB,MAAQA,EAC3BxjB,UAAW,oBACXJ,KAAK,WACL09C,eAAgBvlD,KAAK01B,aACrB5J,SAAU9rB,KAAKgjD,cACfv2C,QAASzM,KAAKyM,UAClB,OAA4B,IAAxBzM,KAAK6iD,QAAQO,OACN1zC,EAAA,uBAAOzH,UAAWgU,GACpBwP,MAASzrB,KAAKL,IAAIK,KAAKL,GAAGS,OAAUJ,KAAKE,MAIvCwP,EAAA,qBAAKzH,UAAWgU,GACnBvM,EAAA,uBAAOzH,UAAU,kDAAkDwjB,KCjD5E,MAAM+5B,UAAqB5C,EAAlCpjD,kCAMcQ,KAAAgjD,cAAgB,CAACxvC,IACvBxT,KAAKmkD,aAAa3wC,EAAI0G,OAAOhL,SAFvB1P,gBAAgB0P,GAAYlP,KAAKqC,OAAO6M,MAAQA,EAK1D1P,YAAY0P,GAAgBlP,KAAKqC,OAAOknB,SAAWvpB,KAAKqsB,UAAYnd,EACpE1P,YAAY0P,GAAgBlP,KAAKqC,OAAOknB,SAAWvpB,KAAKupB,SAAWra,EAEnE1P,SACI,IAAsB,IAAlBQ,KAAKqsB,SAAmB,CACxB,IAAIo5B,EAASzlD,KAAKL,GAAG0uB,KAAK/mB,KAAKC,GAAKA,EAAE2H,QAAUlP,KAAKkP,OACjD2M,OAAoBta,IAAXkkD,EAAuB,QAAUA,EAAO5pC,MACrD,OAAOnM,EAAA,sBAAMzH,UAAU,yBAAyB4T,GAEpD,OAAOnM,EAAA,wBACH8b,IAAMnpB,GAASrC,KAAKqC,OAASA,EAC7B4F,UAAW4U,IAAW7c,KAAKiI,UAAW,gBACtCytB,aAAc11B,KAAK01B,aACnB5J,SAAU9rB,KAAKgjD,eACdhjD,KAAKL,GAAG0uB,KAAKjmB,IAAI,CAACb,EAAEc,KACjB,IAAIwT,MAACA,EAAK3M,MAAEA,GAAS3H,EAIrB,OAAOmI,EAAA,wBAAQzH,eAHXgU,EAG0BtV,IAAK0B,EAAO6G,MAAOA,GAAQ2M,GAAS3M,qUA1BlEw2C,CAAA,CAAXj8B,EAAA,2SCHE,MAAMk8B,UAAiB/C,EAA9BpjD,kCAMcQ,KAAAyM,QAAU,KAAW9J,EAAA3C,UAAA,qBAC3B,IAAI4lD,EAAS5lD,KAAKL,IAAMK,KAAKL,GAAGimD,OAChC,QAAerkD,IAAXqkD,EAEA,YADAhgC,MAAM,sBAGV,IAAItiB,QAAWsiD,EAAO5lD,KAAK6iD,QAAS7iD,KAAKE,KAAMF,KAAKkP,OACpDlP,KAAKmkD,aAAa7gD,GAClBtD,KAAK6E,aACL7E,KAAK6lD,oBACL7lD,KAAK+qB,gBAbTvrB,YAAY0P,GAAgBlP,KAAKqsB,SAAWnd,EAC5C1P,YAAY0P,GAAgBlP,KAAKupB,SAAWra,EAe5C1P,SACI,IAAIojB,EAAgC2hC,OACpBhjD,IAAZvB,KAAKL,KACLijB,EAAc5iB,KAAKL,GAAGijB,YACtB2hC,EAAUvkD,KAAKL,GAAG4kD,SAEtB,IAMIhiD,EANA0Z,EAAK,CACL6a,gBAAgB,EAChBgvB,iBAA8C,IAA7B9lD,KAAKi7C,WAAWpwB,SACjCk7B,kBAAkB,EAClB/uB,aAAch3B,KAAKi1B,UAgBvB,YAbmB1zB,IAAfvB,KAAKkP,OAAsC,OAAflP,KAAKkP,OACjC3M,EAAUqgB,GAAe,cACzB3G,EAAG,eAAgB,GAGnB1Z,OADiBhB,IAAZgjD,EACK70C,EAAA,cAAAA,EAAA,cAAG1P,KAAKkP,OAEM,oBAAZq1C,EACFA,EAAQvkD,KAAKkP,OAGbq1C,EAEP70C,EAAA,cAAAA,EAAA,cACHA,EAAA,qBAAKzH,UAAW4U,IAAWZ,GAAKxP,QAASzM,KAAKyM,SAAUlK,GACvDvC,KAAK+kD,+UA7CFiB,CAAA,CAAXv8B,EAAA,+BCJE,MAAMw8B,EAAU,CAACC,EAAmBC,EAAeC,IAC/C12C,EAAA,sBAAMzH,UAAU,8BAA2Bi+C,oBAAyBE,GAAa,IAAI/uC,KAAK,wBAAsB8uC,iRCCpH,MAAME,UAAqBzD,EAAlCpjD,kCAGcQ,KAAAyM,QAAU,KAAY65C,EAAAtmD,UAAA,qBAC5BA,KAAK6E,aACL7E,KAAK6lD,oBACL,IAAI3lD,KAACA,EAAI2H,KAAEA,GAAQ7H,KAAKi7C,WACxB,GAAa,WAATpzC,IACA7H,KAAK6iD,QAAQ93B,cACiB,IAA1B/qB,KAAK6iD,QAAQ5tB,UACb,OAGR,IAAIsxB,cAACA,GAAiBvmD,KAAK6iD,QAAQnhD,KAAKgD,MACxC,QAAsBnD,IAAlBglD,EAEA,YADA3gC,gBAAgB1lB,mDAGpB,IAAIW,QAAY0lD,EAAcrmD,EAAMF,KAAK6iD,cAC7BthD,IAARV,GACJb,KAAK6iD,QAAQp/B,SAASvjB,EAAMW,MAGxBb,KAAAwmD,eAAiB1mD,OAAAwP,EAAA,EAAAxP,CAAS,KAC9B,IACIykD,EAAqBtoC,EAAW7b,GADhCF,KAACA,EAAI2H,KAAEA,GAAQ7H,KAAKi7C,WAExB,QAAgB15C,IAAZvB,KAAKL,GAAkB,CACvB,IAAK8mD,OAAOC,GAAc1mD,KAAKL,GAC/B,GAAmB,WAAf+mD,EAAyB,OAAOT,EAAQp+C,EAAM6+C,EAAY,CAAC,WAC/DnC,EAAUvkD,KAAKL,GAAG4kD,QAClBtoC,EAAKjc,KAAKL,GAAGsI,UACb7H,EAAQJ,KAAKL,GAAGS,MAEpB,IAGImC,GAHAb,KAACA,EAAIuzB,SAAEA,GAAYj1B,KAAK6iD,QACxBA,EAAU7iD,KAAK6iD,QACft5B,EAAkB,WAAP1hB,GAAmBotB,EAED1yB,OAAXhB,IAAlBvB,KAAKwa,SAAkCxa,KAAKwa,SACpB,oBAAZ+pC,EAAkCA,SAC7BhjD,IAAZgjD,EAAiCA,EAC3BnkD,EACf,IAAIwuB,EAASlf,EAAA,wBACTzH,UAAWgU,EACXpU,KAAK,SACL0hB,SAAUA,EACV9c,QAASzM,KAAKyM,SACblK,GAAWrC,GAEhB,OAAuB,IAAnB2iD,EAAQO,OAAwB1zC,EAAA,cAAAA,EAAA,cAAGkf,EAAQ5uB,KAAK+kD,gBAC7Cr1C,EAAA,qBAAKzH,UAAWvG,EAAKilD,aACxBj3C,EAAA,yBAAM1P,KAAK+kD,gBACVn2B,KAITpvB,SACI,OAAOkQ,EAAA,cAAC1P,KAAKwmD,eAAc,MAG/BhnD,kBACI,IAAqB,IAAjBQ,KAAKmjD,QAAmB,OAAO,KACnC,IAAIzhD,KAACA,EAAI0hD,OAAEA,GAAUpjD,KAAK6iD,QAC1B,OAAe,IAAXO,EAAwBpjD,KAAKsiB,SAC1B5gB,EAAK6hD,eAAe,KAAMvjD,KAAKsiB,uVC3DvC,MAAeskC,EAYlBpnD,YAAYkC,EAAYmlD,EAAoBpzC,EAAW2vC,EAAiB0D,GAMpE,GAZK9mD,KAAA+mD,QAAmC,GAGhC/mD,KAAAirB,OAAmB,GACnBjrB,KAAAgnD,aAAwB,GA6JpChnD,KAAA+kD,aAAejlD,OAAAwP,EAAA,EAAAxP,CAAS,KACpB,IAAImrB,OAACA,GAAUjrB,KACf,OAAsB,IAAlBirB,EAAOrlB,OAAqB,KACzB8J,EAAA,cAAAA,EAAA,cACFub,EAAO7iB,IAAInC,GAAOyJ,EAAA,sBAAM/I,IAAKV,EAAKgC,UAAU,sCACzCyH,EAAA,mBAAGzH,UAAU,qCAAqChC,OA/J1DjG,KAAK0B,KAAOA,EACZ1B,KAAK6mD,SAAWA,EAChB7mD,KAAK4jD,SAAWnwC,EAChBzT,KAAKojD,OAASA,EACdpjD,KAAK8mD,MAAQA,OACIvlD,IAAbslD,EAAwB,CACxB,IAAIj8B,MAACA,GAASi8B,OACAtlD,IAAVqpB,IACA5qB,KAAK4qB,MAAQ,IACgB,IAAzB4K,MAAMC,QAAQ7K,GACd5qB,KAAK4qB,MAAMpkB,KAAKokB,GAEhB5qB,KAAK4qB,MAAMpkB,QAAQokB,KAKnCprB,kBAAkB87B,QACW/5B,IAArBvB,KAAKinD,cAA2BjnD,KAAKinD,YAAc,IACvD,IAAIC,EAAiBlnD,KAAKinD,YAAY/mD,MAEtC,YADuBqB,IAAnB2lD,IAA8BlnD,KAAKinD,YAAY/mD,MAAQgnD,EAAiB,IACrEA,EAMX5rB,eACA97B,SAAS2nD,GAAsB,OAAOnnD,KAAK4jD,SAASuD,GACpD3nD,SAAS2nD,EAAiBj4C,GACtBlP,KAAK4jD,SAASuD,GAAYj4C,EAC1B,IAAIu3C,EAASzmD,KAAK+mD,QAAQI,QACX5lD,IAAXklD,GAAsBA,EAAOz6B,SAAS9c,GAE9C1P,YAAY2nD,GACR,IAAIV,EAASzmD,KAAK+mD,QAAQI,GAC1B,QAAe5lD,IAAXklD,EAAsB,OAAOA,EAAOW,cAG5C5nD,YAAY2nD,EAAiBj4C,GACzB,IAAIu3C,EAASzmD,KAAK+mD,QAAQI,QACX5lD,IAAXklD,GAAsBA,EAAOY,YAAYn4C,GAEjD1P,YAAY2nD,GACR,IAAIV,EAASzmD,KAAK+mD,QAAQI,QACX5lD,IAAXklD,GAAsBA,EAAOa,cAGrC9nD,YAAY2nD,EAAiBj4C,GACzB,IAAIu3C,EAASzmD,KAAK+mD,QAAQI,QACX5lD,IAAXklD,GAAsBA,EAAOc,YAAYr4C,GAEjD1P,WAAW2nD,GACP,IAAIV,EAASzmD,KAAK+mD,QAAQI,QACX5lD,IAAXklD,GAAsBA,EAAOe,aAGrChoD,WAAW2nD,EAAiBj4C,GACxB,IAAIu3C,EAASzmD,KAAK+mD,QAAQI,QACX5lD,IAAXklD,GAAsBA,EAAOgB,WAAWv4C,GAGhD1P,kBACI,IAAK,IAAI0H,KAAKlH,KAAK+mD,QACf/mD,KAAK+mD,QAAQ7/C,GAAG6jB,aAEpB,QAAyBxpB,IAArBvB,KAAKinD,YACT,IAAK,IAAI//C,KAAKlH,KAAKinD,YAAa,CAC5B,IAAIC,EAAiBlnD,KAAKinD,YAAY//C,GACtC,IAAK,IAAIia,KAAK+lC,EACVA,EAAe/lC,GAAGumC,mBAK9BloD,oBACI,QAAmB+B,IAAfvB,KAAK4qB,MAAT,CACA5qB,KAAK2nD,qBACL,IAAK,IAAI5xB,KAAQ/1B,KAAK4qB,MAAO,CACzB,IAAI/pB,EAAMk1B,EAAK/1B,MACf,QAAYuB,IAARV,EACJ,IAA2B,IAAvB20B,MAAMC,QAAQ50B,GACdb,KAAKirB,OAAOzkB,QAAQ3F,QAEnB,GAAmB,kBAARA,EACZb,KAAKirB,OAAOzkB,KAAK3F,QAGjB,IAAK,IAAIqG,KAAKrG,EAAeb,KAAKyjB,SAASvc,EAAGrG,EAAIqG,IAG1D,QAAyB3F,IAArBvB,KAAKinD,YACT,IAAK,IAAI//C,KAAKlH,KAAKinD,YAAa,CAC5B,IAAIC,EAAiBlnD,KAAKinD,YAAY//C,GACtC,IAAK,IAAIia,KAAK+lC,EAAgB,CAC1B,IAAIU,EAAaV,EAAe/lC,GAChCymC,EAAWhD,eACXgD,EAAWjD,uBAKvBnlD,SAAS2nD,EAAiBjhD,GACtB,IAAIugD,EAASzmD,KAAK+mD,QAAQI,QACX5lD,IAAXklD,IACJA,EAAOoB,gBAAgB3hD,GACvBlG,KAAK0jD,eAAe+C,IAGxBjnD,qBACI,IAAK,IAAI0H,KAAKlH,KAAK+mD,QAAS/mD,KAAK+mD,QAAQ7/C,GAAG2+C,oBAGhDrmD,aACIQ,KAAK0nD,kBACL1nD,KAAK2kD,oBAGTnlD,eAAeinD,GACDzmD,KAAKgnD,aAAanmC,UAAUtZ,GAAKA,IAAMk/C,GACvC,GAAGzmD,KAAKgnD,aAAaxgD,KAAKigD,GAExCjnD,kBAAkBinD,GACd,IAAIqB,EAAM9nD,KAAKgnD,aAAanmC,UAAUtZ,GAAKA,IAAMk/C,GAC7CqB,GAAO,GAAG9nD,KAAKgnD,aAAazpB,OAAOuqB,EAAK,GAGtCtoD,gBAEN,IAAY,IADDQ,KAAKgnD,aAAaphD,OAAS5F,KAAKirB,OAAOrlB,OAAU,EAC1C,OAAO,EACzB,QAAyBrE,IAArBvB,KAAKinD,YAA2B,OAAO,EAC3C,IAAK,IAAI//C,KAAKlH,KAAKinD,YAAa,CAC5B,IAAIC,EAAiBlnD,KAAKinD,YAAY//C,GACtC,IAAK,IAAIia,KAAK+lC,EACV,IAAmC,IAA/BA,EAAe/lC,GAAG8T,SAAmB,OAAO,EAGxD,OAAO,EAGDA,eACN,OAAOj1B,KAAK+nD,gBAGhBvoD,eACIQ,KAAKirB,OAAOsS,OAAO,GACnBv9B,KAAKgnD,aAAazpB,OAAO,GACzB,IAAK,IAAIr2B,KAAKlH,KAAK+mD,QAAS,CACxB,IAAIN,EAASzmD,KAAK+mD,QAAQ7/C,QACX3F,IAAXklD,GACJA,EAAOZ,sBA1JHmC,EAAA,CAAXv+B,EAAA,gCACWu+B,EAAA,CAAXv+B,EAAA,sCA+ISu+B,EAAA,CAATv+B,EAAA,gCAyBL,IAAIw+B,EAAoB,EACjB,MAAMC,UAAmBtB,EAO5BpnD,YAAY2oD,EAAuBC,EAAsB30C,EAAW2vC,GAChE,IAAIiF,GACAxB,SAACA,GAAYsB,EACjB,QAAiB5mD,IAAbslD,EAAwB,CACxB,IAAI7kD,MAACA,GAAS6kD,OACAtlD,IAAVS,IAAqBqmD,EAAQrmD,EAAMomD,EAAUloD,OAErDL,MAAMsoD,EAAczmD,KAAM2mD,EAAO50C,EAAM2vC,GAAQ,GAC/CpjD,KAAKmoD,cAAgBA,EACrBnoD,KAAKooD,UAAYA,EACjBpoD,KAAKwmB,OAASyhC,IACdjoD,KAAKyT,KAAOA,EAEhBjU,cAAc2nD,GAA6B,OAAOnnD,KAAKooD,UAAUE,YAAYnB,GAC7E3nD,UAAU2nD,GACN,QAAsB5lD,IAAlBvB,KAAK6mD,SAAwB,OACjC,IAAI7kD,MAACA,GAAShC,KAAK6mD,SACnB,YAActlD,IAAVS,EACGA,EAAMmlD,QADb,EAGJ7rB,cAAsB,OAAOt7B,KAAKooD,UAAUloD,KAE5CV,eACIK,MAAM+kD,eACN5kD,KAAKmoD,cAAcvD,eAGvB2D,iBAAsB,OAAOvoD,KAAKmoD,cAAc10C,MAG7C,MAAM+0C,UAAoB5B,EAC7BpnD,YAAYkC,EAAW0hD,GACnBvjD,MAAM6B,EAAMA,EAAKmlD,SAAUnlD,EAAK+R,KAAM2vC,GAAQ,GAElD3vC,WAAgB,OAAOzT,KAAK0B,KAAK+R,KACjCjU,cAAc2nD,GAA6B,OAAOnnD,KAAK0B,KAAK4mD,YAAYnB,GACxE3nD,UAAU2nD,GACN,IAAIN,SAACA,GAAY7mD,KAAK0B,KACtB,QAAiBH,IAAbslD,EAAwB,OAC5B,IAAI7kD,MAACA,GAAS6kD,EACd,YAActlD,IAAVS,EACGA,EAAMmlD,QADb,GAKD,MAAMsB,EAAmB/4C,EAAA,cAA6B,ICvOhDg5C,EAAe5oD,OAAAwP,EAAA,EAAAxP,CAAS,EAChCqoD,gBAAeC,YAAW5tC,eAE3B,IAMI+pC,EACAoE,EAAoBC,EAAmBC,GAPvC3oD,KAACA,EAAI6B,IAAEA,GAAOqmD,EACd30C,EAAO00C,EAAcvE,SAAS1jD,IAC9BwB,KAACA,GAAQymD,EACTjB,EAAiBiB,EAAcW,kBAAkB5oD,GACjDP,EAAKwoD,EAAc3E,UAAUtjD,GAC7B6oD,EAAW7oD,GAGX8oD,aAACA,EAAYpjB,aAAEA,EAAYqjB,aAAEA,EAAYpC,SAAEA,GAAYnlD,EAC3D,QAAiBH,IAAbslD,EAAwB,CACxB,IAAK8B,WAAWO,EAAgBN,UAAUO,EAAeN,WAAWO,GAAkBvC,GACnE,IAAf8B,IAAqBA,EAAaO,IACpB,IAAdN,IAAoBA,EAAYO,IACjB,IAAfN,IAAqBA,EAAaO,GAE1C,QAAW7nD,IAAP5B,EAAkB,CAClB,IAAK8mD,OAAOC,EAAUtmD,MAAEA,EACpBuoD,WAAWU,EAAeT,UAAUU,EAAcT,WAAWU,EAC7DP,aAAaQ,EAAI5jB,aAAa6jB,EAAIR,aAAaS,GAC/C/pD,EAQJ,QAPsB4B,IAAlB8nD,IAA6BV,EAAaU,QACzB9nD,IAAjB+nD,IAA4BV,EAAYU,QACtB/nD,IAAlBgoD,IAA6BV,EAAaU,QACnChoD,IAAPioD,IAAkBR,EAAeQ,QAC1BjoD,IAAPkoD,IAAkB7jB,EAAe6jB,QAC1BloD,IAAPmoD,IAAkBT,EAAeS,GACrCnF,EAAU5kD,EAAG4kD,QACM,QAAfmC,EAAsB,OAAOT,EAAQmC,EAAUvgD,KAAM6+C,EAAY,CAAC,QACtEqC,EAAW3oD,GAAS2oD,EAExB,IAAI/hC,GAAQ,EACZ,OAAOgiC,EAAaD,EAAUr5C,EAAA,cAAAA,EAAA,cACzB+D,EAAKrL,IAAI,CAACspB,EAASrpB,KAChB,IAAIu/C,EACAxiC,EACAukC,OAAMpoD,EAGV,IAFc,IAAVylB,EAAiB2iC,EAAMV,EACtBjiC,GAAQ,OACIzlB,IAAbiZ,EACAotC,EAAa,IAAIM,EAAWC,EAAeC,EAAW12B,GAAK,GAC3DtM,EAAa1V,EAAA,cAAAA,EAAA,cAAG8K,OAEf,CACD,IAAIovC,SAAuBrF,EACL,aAAlBqF,GACAhC,EAAa,IAAIM,EAAWC,EAAeC,EAAW12B,GAAK,GAC3DtM,EAAa1V,EAAA,cAAoB5P,OAAAwP,EAAA,EAAAxP,CAASykD,GAAsC7yB,IAEzD,WAAlBk4B,GACLhC,EAAa,IAAIM,EAAWC,EAAeC,EAAW12B,GAAK,GAC3DtM,EAAam/B,IAGbqD,EAAa,IAAIM,EAAWC,EAAeC,EAAW12B,GAAK,GAC3DtM,EAAa1V,EAAA,cAAAA,EAAA,cACT3N,EAAIqG,IAAI,CAACb,EAAGc,IACDqH,EAAA,cAACA,EAAA,SAAc,CAAC/I,IAAKY,EAAErH,MACzB2pD,EAAQjC,EAAYrgD,OAAGhG,OAM5C,IAGIuoD,EAAyBC,GAHzBvjC,OAACA,GAAUohC,EAIf,GAHAV,EAAe1gC,GAAUohC,GAGN,IAAfe,EAAqB,CACrB,IAAIl8C,EAAW+G,IACX,IAAIqmB,QAACA,GAAYrmB,EAAI0G,OACrBwX,EAAIs4B,YAAcnwB,EAClB,IAAIowB,QAACA,GAAWv4B,OACAnwB,IAAZ0oD,IAAuBA,EAAQD,YAAcnwB,GACjD+tB,EAAWhD,gBAEfkF,EAAcp6C,EAAA,qBAAKzH,UAAU,qBACzByH,EAAA,uBAAO7H,KAAK,WAAW4E,QAASA,EAAS84C,eAAgB7zB,EAAIs4B,eAGrE,IAAIE,SAA+B3oD,IAAjBmwB,EAAIy4B,aAA2C,IAAjBz4B,EAAIy4B,YACpD,IAAkB,IAAdvB,EAAoB,CACpB,IAAIvoD,EAAO6pD,EAAW,UAAY,WAC9BE,EAAa,KACb,IAAmB,IAAfvB,EAAqB,CACrBn3B,EAAIy4B,YAAcD,EAClB,IAAID,QAACA,GAAWv4B,OACAnwB,IAAZ0oD,IAAuBA,EAAQE,YAAcD,OAEhD,CACD,IAAIjjD,EAAIwM,EAAK4N,QAAQqQ,GACjBzqB,GAAG,GAAGwM,EAAK8pB,OAAOt2B,EAAG,GAE7B2gD,EAAWhD,gBAEfmF,EAAar6C,EAAA,qBAAKzH,UAAU,0BAA0BwE,QAAS29C,GAC3D16C,EAAA,mBAAGzH,UAAW4U,IAAW,KAAMxc,EAAM,YAG7C,IAAIgqD,GAA6B,IAAb1B,IAAiC,IAAZC,EACpCrmD,GAAgBmN,EAAA,0BAAU6Z,SAAU2gC,GAAWx6C,EAAA,qBAAKzH,UAAW4U,IAAW,SAAU,CAACytC,QAAUJ,EAAWK,eAAe74B,EAAIs4B,eACzHF,EAAYp6C,EAAA,qBAAKzH,UAAU,eAAe1F,GAAewnD,IAG7DxnD,GAAgBA,EAErB,OAAOmN,EAAA,cAAC+4C,EAAiB+B,SAAQ,CAAC7jD,IAAK6f,EAAQtX,MAAO04C,GACjD+B,EACA/jB,EAAaykB,EAAc36C,EAAA,cAAAA,EAAA,cAAEA,EAAA,cAACk4C,EAAW7C,aAAY,MAAI3/B,qSC/GnE,MAAMqlC,UAAoB7H,EAAjCpjD,kCAUcQ,KAAAyM,QAAU,KAAYi+C,EAAA1qD,UAAA,qBAC5B,IAAI+nB,EAAO,IAAI4iC,EAAA,EAAc3qD,KAAKi7C,WAAYj7C,KAAKL,GAAIK,KAAKL,GAAGS,MAAOJ,KAAKkP,OACvErO,QAAYknB,EAAKriB,QACT,OAAR7E,IACAb,KAAKgsB,SAASnrB,GACdb,KAAK4qD,SAAW/pD,SAEdknB,EAAK8iC,SAOP7qD,KAAAwmD,eAAiB1mD,OAAAwP,EAAA,EAAAxP,CAAS,KAC9B,IAGI2M,EAHAwP,EAAK,CACL,8CAOJ,OAJKjc,KAAKqsB,UAAarsB,KAAKupB,WACxBtN,EAAGzV,KAAK,kBACRiG,EAAUzM,KAAKyM,SAEZiD,EAAA,qBAAKzH,UAAW4U,IAAWZ,GAAKxP,QAASA,GAC5CiD,EAAA,cAACo7C,EAAA,EAAK,CAAC78C,IAAKjO,KAAK4qD,SAAU3iD,UAAU,iBA7BnCzI,OACNK,MAAM6qB,OACN1qB,KAAK4qD,SAAW5qD,KAAKkP,MAazB1P,SACI,OAAOkQ,EAAA,cAAC1P,KAAKwmD,eAAc,qUAlBnBuE,CAAA,CAAXthC,EAAA,kCCSL,MAAMuhC,EAAkF,CACpF1nD,GAAI,CACA8iD,UAAW,CAAC,MACZK,OAAQd,GAEZpkC,KAAM,CACF6kC,UAAW,CAAC,UAAW,SAAU,UACjCK,OAAQ/B,GAEZvqB,SAAU,CACNisB,UAAW,CAAC,UACZK,OC1BD,cAA6B7D,EAApCpjD,kCAMcQ,KAAAgjD,cAAgB,CAACxvC,IACvBxT,KAAKgsB,SAASxY,EAAIuY,cAAc7c,SAF1B1P,gBAAgB0P,GAAYlP,KAAKyrB,MAAMvc,MAAQA,EAKzD1P,YAAY0P,GAAgBlP,KAAKyrB,MAAMY,SAAWrsB,KAAKqsB,SAAWnd,EAClE1P,YAAY0P,GAAgBlP,KAAKyrB,MAAMlC,SAAWvpB,KAAKupB,SAAWra,EAElE1P,SACI,IAAIqlD,EAAgB7kD,KAAK6kD,gBACzB,QAAsBtjD,IAAlBsjD,EAA6B,OAAOA,EACxC,IAAI5oC,EAAK,GAOT,OANsB,IAAlBjc,KAAKi1B,SACLhZ,EAAG,eAAgB,EAGnBA,EAAG,kBAAgD,IAA7Bjc,KAAKi7C,WAAWpwB,SAEnCnb,EAAA,0BAAU8b,IAAMC,GAAUzrB,KAAKyrB,MAAMA,EACxCxjB,UAAW4U,IAAW7c,KAAKiI,UAAWgU,GACtCwV,KAAMzxB,KAAKL,IAAMK,KAAKL,GAAG8xB,KACzBnF,UAAWtsB,KAAKi7C,WAAW3uB,UAC3BoJ,aAAc11B,KAAK01B,aAAc5J,SAAU9rB,KAAKgjD,mBDCxDzpB,SAAU,CACN6sB,UAAW,CAAC,UACZK,OEjCD,cAA6B/B,EAApCllD,kCACcQ,KAAAosB,UAAY,cFkCtBje,KAAM,CACFi4C,UAAW,CAAC,QACZK,OAAQpB,GAEZ4F,SAAU,CACN7E,UAAW,CAAC,QACZK,OTrCD,cAA6B/B,EAApCllD,kCACcQ,KAAAosB,UAAY,cSsCtB8+B,KAAM,CACF9E,UAAW,CAAC,QACZK,OTrCD,cAAyB/B,EAAhCllD,kCACcQ,KAAAosB,UAAY,USsCtBuyB,MAAO,CACHyH,UAAW,CAAC,QACZK,OTrCD,cAA0B/B,EAAjCllD,kCACcQ,KAAAosB,UAAY,WSsCtB/pB,OAAQ,CACJ+jD,UAAW,CAAC,UAAW,SAAU,SAAU,OAAQ,WACnDK,OAAQjB,GAEZj7C,IAAK,CACD67C,UAAW,CAAC,UACZK,OErDD,cAAwB/B,EAA/BllD,kCACcQ,KAAAosB,UAAY,SFsDtB++B,MAAO,CACH/E,UAAW,CAAC,UACZK,OErDD,cAA0B/B,EAAjCllD,kCACcQ,KAAAosB,UAAY,WFsDtBoN,OAAQ,CACJ4sB,UAAW,CAAC,UAAW,UACvBK,OAAQzB,GAEZoG,OAAQ,CACJhF,UAAW,CAAC,UAAW,UACvBK,OAAQxB,GAEZx4B,MAAO,GAGPiN,SAAU,CACN0sB,UAAW,CAAC,UAAW,UAAW,UAClCK,OAAQnB,GAEZ+F,MAAO,CACHjF,UAAW,CAAC,UACZK,OAAQgE,GAEZa,WAAY,GAGZC,MAAO,CACHnF,UAAW,CAAC,UAAW,SAAU,SAAU,OAAQ,WACnDK,OGjFD,cAA0B7D,EAAjCpjD,kCACcQ,KAAA4B,OAA6C,GAG7CpC,gBAAgB0P,GACtB,IAAK,IAAIhI,KAAKlH,KAAK4B,OAAQ,CACvB,IAAI6pB,EAAQzrB,KAAK4B,OAAOsF,GACxBukB,EAAMoO,QAAU3qB,IAAUuc,EAAMvc,OAGxC1P,YAAY0P,GACRlP,KAAKqsB,SAAWnd,EAChB,IAAK,IAAIhI,KAAKlH,KAAK4B,OAAQ5B,KAAK4B,OAAOsF,GAAGmlB,SAAWnd,EAEzD1P,YAAY0P,GACRlP,KAAKupB,SAAWra,EAChB,IAAK,IAAIhI,KAAKlH,KAAK4B,OAAQ5B,KAAK4B,OAAOsF,GAAGqiB,SAAWra,EAGzD1P,SACI,IAEIgnB,GAFAkP,aAACA,EAAYrH,KAAEA,GAAQruB,KAAKL,IAC5BmnD,MAACA,EAAK1D,OAAEA,GAAUpjD,KAAK6iD,SAEb,IAAViE,IACAtgC,EAAUxmB,KAAK6iD,QAAuBr8B,QAE1C,IAAIvK,EAAKY,IAAW7c,KAAKiI,UAAW,qBACpC,OAAOyH,EAAA,sBAAMzH,UAAWgU,GACfoS,EAAKjmB,IAAI,CAACb,EAAEc,KACT,IAAI6G,MAACA,EAAK2M,MAAEA,GAAStU,EACjBrH,EAAOF,KAAKE,KAEhB,YADeqB,IAAXilB,IAAsBtmB,GAAQ,IAAMsmB,GACjC9W,EAAA,uBAAO/I,IAAK0B,EAAOJ,UAAU,qBAChCyH,EAAA,uBAAO8b,IAAKC,GAAOzrB,KAAK4B,OAAOyG,GAAOojB,EAAO5jB,KAAK,QAAQ3H,KAAMA,EAC5DgP,MAAOA,EAAOq2C,gBAAiBvlD,KAAK01B,cAAgBA,KAAgBxmB,IACvE2M,GAAS3M,SHgD9Bs8C,MAAO,CACHpF,UAAW,CAAC,WACZK,OIzFD,cAA0B7D,EAAjCpjD,kCACcQ,KAAAosB,UAAY,QAItB5sB,YAAY0P,GAAgBlP,KAAKyrB,MAAMY,SAAWrsB,KAAKqsB,SAAWnd,EAClE1P,YAAY0P,GAAgBlP,KAAKyrB,MAAMlC,SAAWvpB,KAAKupB,SAAWra,EAElE1P,SACI,IAAI4qB,IAACA,EAAGG,IAAEA,EAAGhc,KAAEA,GAAQvO,KAAKL,GAC5B,OAAO+P,EAAA,cAAAA,EAAA,cAAEA,EAAA,uBAAO8b,IAAKC,GAAOzrB,KAAKyrB,MAAQA,EACrCxjB,UAAW4U,IAAW7c,KAAKiI,UAAW,eAAgB,YACtDJ,KAAM7H,KAAKosB,UACXsJ,aAAc11B,KAAK01B,aACnB5J,SAAU9rB,KAAKgjD,cACfz4B,IAAKA,EACLH,IAAKA,EACL7b,KAAMA,QJ0EdqgB,OAAQ,CACJw3B,UAAW,CAAC,SAAU,UACtBK,OAAQJ,IAIT,SAASwD,EAAQhH,EAAkB5H,EAAwBzgC,EAA0BsoC,GACxF,QAAgBvhD,IAAZshD,EAEA,OAAO,KAEX,QAAmBthD,IAAf05C,EAA0B,OAC9B,IASIwQ,GATAvrD,KAACA,EAAI2H,KAAEA,GAAQozC,EACnB,OAAQpzC,GACR,IAAK,MACD,IAAIugD,EAAYvF,EAAQ6I,cAAcxrD,GACtC,OAAOwP,EAAA,cAACg5C,EAAY,CAACP,cAAetF,EAASuF,UAAWA,EAAW5tC,SAAUA,IAMjF,IAAI7a,EAAKkjD,EAAQW,UAAUtjD,GAC3B,SAASyrD,EAAc77C,GACnB,OAAOA,GACP,QAAS,OAAO40C,EAChB,IAAK,KAAM,OAAOiB,EAClB,IAAK,UAAW,OAAOV,EACvB,IAAK,SAAU,OAAOD,EACtB,IAAK,SAAU,OAAON,EACtB,IAAK,OAAQ,OAAOW,EACpB,IAAK,UAAW,OAAOC,EACvB,IAAK,SACL,IAAK,SAAU,OAAOe,GAG1B,QAAW9kD,IAAP5B,EACA8rD,EAAaE,EAAc9jD,OAE1B,CACD,IAAK4+C,OAAOC,GAAc/mD,EAC1B,OAAQ+mD,GACR,QACI,QAAmBnlD,IAAfmlD,EAA0B,CAE1B+E,EADoBT,EAAetE,GACRD,YAEZllD,IAAfkqD,IAA0BA,EAAaE,EAAc9jD,IACzD,MACJ,IAAK,SACD4jD,EAAc9rD,EAAgBisD,YAC9B,MACJ,IAAK,QACD,OAAOl8C,EAAA,+CAKf,IAAIo3C,MAACA,EAAKC,QAAEA,GAAWlE,EACnB4D,EAAS,IAAIgF,EAAW5I,EAAS5H,EAAY6H,EAAYtoC,GAG7D,OAFAusC,EAAQ7mD,GAAQumD,EAET/2C,EAAA,cAAC+2C,EAAOvD,UAAS,YKnJrB,MAAM2I,EAAuB,CAChC73B,EAAG,CACCnJ,SAAU,WACV2O,OAAQ,mBACRmpB,QAAS,oBACTv4B,IAAK,sBACLG,IAAK,uBAETuhC,GAAI,CACA93B,EAAG,CACCnJ,SAAU,qBACV2O,OAAQ,2BACRmpB,QAAS,2BACTv4B,IAAK,iCACLG,IAAK,qTCKV,MAAMwhC,UAAar8C,EAAA,UAmBtBlQ,YAAYkF,GACR7E,MAAM6E,GAuGF1E,KAAAgsD,mBAAqB,MACzB,QAAsBzqD,IAAlBvB,KAAKisD,SACT,IAAK,IAAIhR,KAAcj7C,KAAKi7B,OACxBj7B,KAAKksD,gBAAgBjR,KAsDnBj7C,KAAAmsD,iBAAmB,CAAC5pD,GACnBmN,EAAA,sBAAMzH,UAAW4U,IAAW7c,KAAK0E,MAAMuD,YACzC1F,IAOCvC,KAAAosD,sBAAwB,EAAChsD,EAA0BmC,KAEzD,IAAI8pD,eAACA,GAAkBrsD,KAAK0E,MAE5B,GAAI2nD,EAAiB,EAAG,CACpB,IAAIC,EACU,OAAVlsD,EACAisD,EAAiB,EAGjBC,EAAY58C,EAAA,uBAAOzH,UAAW4U,IAAW,UAAYwvC,EAAgB,mBAAoBjsD,GAE7F,IAAImsD,EAAW,WAAa,GAAKF,GACjC,OAAO38C,EAAA,qBAAKzH,UAAU,kBACjBqkD,EACD58C,EAAA,qBAAKzH,UAAWskD,GAAWhqD,IAGnC,OAAOmN,EAAA,qBAAKzH,UAAU,cACT,OAAR7H,EAAc,KAAKsP,EAAA,uBAAOzH,UAAU,kBAAkB7H,GACtDmC,KAGCvC,KAAAwsD,uBAA2BjrD,EAC3BvB,KAAAysD,mBAAqB,mBACrBzsD,KAAA0sD,WAAqB5sD,OAAA6sD,EAAA,EAAA7sD,CAAiB+rD,GAEhD7rD,KAAAgpD,aAAe,EAAC5oD,EAAWmC,IAChBmN,EAAA,yBACHA,EAAA,qBAAKzH,UAAW4U,IAAW,8DAA+Dzc,GACzFmC,IAGTvC,KAAA4lC,aAAe,CAACrjC,IAEZ,IAAI0Z,EAAKY,IAAW,CAChB+vC,QAAQ,IAEZ,OAAOl9C,EAAA,qBAAKzH,UAAWgU,GAAK1Z,KAEhCvC,KAAAipD,aAAev5C,EAAA,qBAAKzH,UAAU,kCAhN1B,IAAIgzB,OAACA,EAAM4rB,SAAEA,EAAQoF,SAAEA,EAAQY,UAC3BA,EAAStJ,eAAEA,EAAce,WAAEA,EAAUqC,YACrCA,EAAW/mD,IACXA,GAGA8E,EACJ1E,KAAK6sD,UAAYA,GAAa7sD,KAAKmsD,iBACnCnsD,KAAKujD,eAAiBA,GAAkBvjD,KAAKosD,sBAC7CpsD,KAAKskD,gBAA0B/iD,IAAb+iD,GAAuC,KAAbA,GAA8B,OAAbA,EAAmBA,EAAatkD,KAAKwsD,kBAClGxsD,KAAKJ,IAAMA,GAAOI,KAAK0sD,WACvB1sD,KAAK2mD,YAAcA,GAAe3mD,KAAKysD,mBAKvCzsD,KAAKi7B,OAASA,EACdj7B,KAAKsoD,YAAc,GACnB,IAAK,IAAIrN,KAAcj7C,KAAKi7B,OACxBj7B,KAAKsoD,YAAYrN,EAAW/6C,MAAQ+6C,EAExCj7C,KAAK6mD,SAAWA,EAChB7mD,KAAKisD,SAAWA,EAChBjsD,KAAKsG,SAAWxG,OAAA2pB,EAAA,EAAA3pB,CAAQE,KAAKgsD,oBAC7BhsD,KAAKyT,KAAO,GACZzT,KAAK4jD,SAASqI,QAC+B1qD,IAAxBvB,KAAK0E,MAAM8V,UAA0Bxa,KAAK6mD,UAAY7mD,KAAK6mD,SAAStC,QAAzF,IAEI/pC,SAACA,GAAYxa,KAAK0E,MAGtB,QAAiBnD,IAAbiZ,EAEAxa,KAAKuC,QAAUmN,EAAA,cAAAA,EAAA,cAAG8K,GAClBxa,KAAK8sD,YAAc,IAAItE,EAAYxoD,MAAM,OAExC,CACD,IAAIukD,OACkBhjD,IAAlBvB,KAAK6mD,WACLtC,EAAUvkD,KAAK6mD,SAAStC,cAEZhjD,IAAZgjD,GAEAvkD,KAAKuC,QAA8B,oBAAd,EAA0BgiD,EAAQvkD,KAAKyT,MAAQ8wC,EACpEvkD,KAAK8sD,YAAc,IAAItE,EAAYxoD,MAAM,KAIzCA,KAAK8sD,YAAc,IAAItE,EAAYxoD,MAAM,GACzCA,KAAKuC,QAAUmN,EAAA,cAAAA,EAAA,cAAG1P,KAAKi7B,OAAO7yB,IAAI,CAACb,EAAGc,IAC3BqH,EAAA,cAACA,EAAA,SAAc,CAAC/I,IAAK0B,GAAQwhD,EAAQ7pD,KAAK8sD,YAAavlD,EAAGiT,QAMzEhb,SAASysD,QACI1qD,IAAb0qD,IAAwBA,EAAW,IACvC,IAAK,IAAIhR,KAAcj7C,KAAKi7B,OACxBj7B,KAAK+sD,aAAa9R,EAAYj7C,KAAKyT,KAAMw4C,GAIzCzsD,aAAay7C,EAAwBxnC,EAAUw4C,GACnD,IAAI/rD,KAACA,EAAI2H,KAAEA,GAAQozC,EACnB,GAAa,WAATpzC,EACJ,GAAa,QAATA,EAiCJ4L,EAAKvT,GAAQ+rD,EAAS/rD,OAjCtB,CACI,IAAI8sD,EAAoB/R,GACnBl5C,IAAIkrD,GAAYD,EACrB,QAAiBzrD,IAAb0rD,EAAwB,OAC5B,IAAIC,EAAUF,EAAQ1E,YAAc,GACpC,IAAK,IAAIxhD,KAAQmmD,EACbC,EAAQpmD,EAAK5G,MAAQ4G,EAEzB,IAAIoJ,EAAY+7C,EAAS/rD,QACbqB,IAAR2O,EAAmBA,EAAM,IACG,IAAvBslB,MAAMC,QAAQvlB,KAAgBA,EAAM,CAACA,IAC9C,IAAInO,EAAY,GAChB,IAAK,IAAI2vB,KAAOxhB,EAAK,CACjB,IAAI85C,YAACA,EAAWG,WAAEA,GAAcz4B,EAC5B1G,EAAI,CACJi/B,QAASv4B,EACTs4B,YAAaA,EACbG,WAAYA,GAEhB,IAAK,IAAIrjD,KAAQmmD,EACbjtD,KAAK+sD,aAAajmD,EAAMkkB,EAAG0G,GAQ/B3vB,EAAIyE,KAAKwkB,GAEbvX,EAAKvT,GAAQJ,OAAA2pB,EAAA,EAAA3pB,CAAWiC,IAaxBvC,gBAAgBy7C,GACpB,IAAI/6C,KAACA,EAAI2H,KAAEA,GAAQozC,EACnB,GAAa,QAATpzC,EAAgB,OACpB,QAAkBtG,IAAdvB,KAAKyT,KAAoB,OAC7B,IAAI05C,EAAantD,KAAKyT,KAAKvT,GAC3B,QAAmBqB,IAAf4rD,EAA0B,OAC9B,IAAKprD,IAAKkrD,GAAYhS,EACtB,IAAK,IAAIvpB,KAAOy7B,EAAY,CACxB,IAAIlD,QAACA,GAAWv4B,EAChB,QAAgBnwB,IAAZ0oD,EAAuB,SAC3B,IAAID,YAACA,EAAWG,WAAEA,GAAcF,EAChCv4B,EAAIs4B,YAAcA,EAClBt4B,EAAIy4B,WAAaA,EAEjB,IAAK,IAAIrjD,KAAQmmD,EACbjtD,KAAKksD,gBAAgBplD,IAKjCtH,oBACI,IAAI4tD,WAACA,GAAcptD,KAAK0E,WACLnD,IAAf6rD,GAA0BA,EAAWptD,KAAK8sD,aAGlDttD,uBACIQ,KAAKsG,WAGT9G,SACI,OAAOkQ,EAAA,cAAC+4C,EAAiB+B,SAAQ,CAACt7C,MAAOlP,KAAK8sD,aAC1Cp9C,EAAA,cAAC1P,KAAK8sD,YAAY/H,aAAY,MAC7B/kD,KAAK6sD,UAAU7sD,KAAKuC,UAIvB/C,YAAY6tD,2CAEd,GADArtD,KAAK8sD,YAAY/hC,cACiB,IAA9B/qB,KAAK8sD,YAAY73B,SAAmB,OAExC,IAAIsxB,cAACA,GAAiBvmD,KAAK8sD,YAAYprD,KAAKgD,MAC5C,QAAsBnD,IAAlBglD,EAEA,YADA3gC,MAAM,wCAGV,IAAI/kB,QAAY0lD,EAAc8G,EAAYrtD,KAAK8sD,kBACnCvrD,IAARV,GACJb,KAAK8sD,YAAYrpC,SAAS4pC,EAAYxsD,oUAxK9BysD,CAAA,CAAX7jC,EAAA,+BC/BE,cAAoB/Z,EAAA,UAEvBlQ,SACI,IAAIU,KAACA,EAAIsa,SAAEA,GAAaxa,KAAK0E,MACzBm+C,EAAkB7iD,KAAK6iD,QAC3B,QAAgBthD,IAAZshD,EAAuB,OAAOnzC,EAAA,sBAAMzH,UAAU,eAAa,kBAC/D,IAAIgzC,EAAa4H,EAAQ6I,cAAcxrD,GACnCqC,EAAUsnD,EAAQhH,EAAS5H,EAAYzgC,EAAUxa,KAAK0E,OAC1D,YAAgBnD,IAAZgB,EACOmN,EAAA,sBAAMzH,UAAU,oBAAiB/H,uBAErCqC,KAVJgrD,YAAc9E,ECTzBpqD,EAAAC,EAAAC,EAAA,sBAAAwtD,2ECeA,IAAayB,EAAb,cAA2B99C,EAAA,UACvBlQ,SACI,IASIsnC,GATA7+B,UAACA,EAAS+lC,MAAEA,EAAKnqB,KAAEA,EAAI4I,MAAEA,EAAKghC,WAAEA,EAAUC,cAAEA,EAAalzC,SAAEA,GAAYxa,KAAK0E,MAC5EuX,EAAKY,IACL5U,EACA,WACA4b,GAAQ,YAAYA,EACpB,aAAe4I,GAAO,aACtBghC,GAAc,WAAWA,EACzBC,GAAiB,WAAWA,GAIhC,OADI1f,IAAOlH,EAAIp3B,EAAA,uBAAIs+B,IACZt+B,EAAA,qBAAKzH,UAAWgU,GAClBzB,EACAssB,KAfA0mB,uUAAKh/C,CAAA,CADjBc,EAAA,GACYk+C,UCFb,IAAaG,EAAb,cAAyBj+C,EAAA,UACrBlQ,SACI,IACIy0B,EAAGjJ,EAGH4iC,GAJA3lD,UAACA,EAAS0kB,KAAEA,EAAInS,SAAEA,EAAQkB,MAAEA,EAAKjP,QAAEA,GAAWzM,KAAK0E,MAMvD,YAJanD,IAATorB,IAAoBsH,EAAIvkB,EAAA,4BAASid,SACvBprB,IAAVma,IAAqBsP,EAAItb,EAAA,4BAASgM,SAEtBna,IAAZkL,IAAuBmhD,EAAS,kBAC7Bl+C,EAAA,qBAAKzH,UAAW4uB,EAAW,SAAU5uB,EAAW2lD,GAASnhD,QAASA,GACpEwnB,EACDvkB,EAAA,yBAAM8K,GACLwQ,KAXA2iC,uUAAGE,CAAA,CADfv+C,EAAA,GACYq+C,GCIN,MAAMG,UAAWp+C,EAAA,UACpBlQ,SACI,IAAIU,KAACA,EAAI+H,UAAEA,EAAS4b,KAAEA,EAAIkqC,KAAEA,EAAIxgB,SAAEA,EAAQrE,OAAEA,EAAM8kB,KAAEA,EAAIC,MAAEA,EAAKC,OAAEA,EAAMC,KAAEA,EAAIC,QAAEA,GAAWpuD,KAAK0E,MAC3FuX,EAAK4a,EAAW5uB,EAAW,KAC3B/H,GAAS,MAAQA,EACjB2jB,GAAQ,MAAMA,EACd0pB,GAAY,QACZrE,GAAU,YACV8kB,GAAQ,WAAaA,EACrBD,GAAQ,UACRE,GAAS,WACTC,GAAU,aAAeA,EACzBC,GAAQ,WAAaA,EACrBC,GAAW,cAEf,OAAO1+C,EAAA,mBAAGzH,UAAWgU,KC7BtB,MAAMoyC,EAAS3pD,GACtBgL,EAAA,uBAAOzH,UAAW4uB,EAAW,aAAcnyB,EAAMuD,WAAYK,MAAO5D,EAAM4D,OACrE5D,EAAM8V,UCLXnc,EAAAC,EAAAC,EAAA,sBAAAivD,IAAAnvD,EAAAC,EAAAC,EAAA,sBAAAovD,IAAAtvD,EAAAC,EAAAC,EAAA,sBAAAuvD,IAAAzvD,EAAAC,EAAAC,EAAA,sBAAA8vD,2ECKO,MAAeC,EAElB9uD,YAAY6uB,GACRruB,KAAKquB,KAAOA,EAEhBwT,cACI,IAAI7/B,EAAQhC,KAAKquB,KAAK3pB,MAAM1C,MAC5B,OAAkB,OAAVA,QAA4BT,IAAVS,IAAgD,IAAzBwzB,MAAMC,QAAQzzB,GAEnEA,YACI,IAAIA,EAAQhC,KAAKquB,KAAK3pB,MAAM1C,MAC5B,OAAc,OAAVA,EAAuB,UACbT,IAAVS,GACyB,IAAzBwzB,MAAMC,QAAQzzB,GACPA,EAECA,EAAyBA,WAJrC,EAMM++C,cACN,IAAI/+C,EAAQhC,KAAKquB,KAAK3pB,MAAM1C,MAC5B,GAAc,OAAVA,EAAgB,OAAO,EAC3B,QAAcT,IAAVS,EAAqB,OAAO,EAChC,IAAIusD,EAAYvsD,EAChB,YAAwBT,IAApBgtD,EAAUvsD,OACPusD,EAAUxN,QAErByN,qBACAhvD,YAAYivD,IAEFjvD,cAAcsH,EAAUuB,GAC9B,IAAIia,OAACA,GAAUtiB,KAAKquB,KAAK3pB,MAAMoC,KAC/B,YAAevF,IAAX+gB,EAA6B5S,EAAA,qBAAKzH,UAAU,aAAa8D,KAAKC,UAAUlF,IACrEwb,EAAOxb,EAAMuB,kUAddmG,CAAA,CAATib,EAAA,+BCnBE,MAAMilC,UAAkBJ,EAC3B9uD,OAAOsH,EAAUuB,GACb,IAAIJ,UAACA,EAAStB,IAAEA,EAAG8F,QAAEA,GAAWzM,KAAKquB,KAAK3pB,MAAMoC,KAChD,OAAO4I,EAAA,oBAAI/I,SAAWpF,IAANoF,EAAgB0B,EAAM1B,EAAIG,GAAOmB,UAAW4uB,EAAW,mBAAoB5uB,GAAYwE,QAAS,IAAIA,EAAQ3F,IACvH9G,KAAK0oB,cAAc5hB,EAAMuB,iBCH/B,MAAMsmD,UAAeL,EACxB9uD,OAAOsH,EAAUuB,GACb,IAAIJ,UAACA,EAAStB,IAAEA,EAAG2b,OAAEA,GAAUtiB,KAAKquB,KAAK3pB,MAAMoC,KAC/C,GAAoB,kBAATA,EAAmB,CAC1B,IAAImV,EAAK4a,EAAW,cAAe,OAAQ,QAC3C,OAAOnnB,EAAA,oBAAI/I,IAAK7G,OAAA2e,EAAA,EAAA3e,GAAOmI,UAAWgU,GAAKnV,GAE3C,OAAO4I,EAAA,oBAAI/I,SAAWpF,IAANoF,EAAgB0B,EAAM1B,EAAIG,GAAOmB,UAAW4uB,EAAW5uB,IAClEjI,KAAK0oB,cAAc5hB,EAAMuB,KCA/B,MAAMumD,UAAmBN,EAIpB9uD,aACJ0D,QAAQC,IAAI,gCACZ,IACI0rD,GADA7sD,MAACA,EAAKwsD,cAAEA,EAAaM,QAAEA,GAAW9uD,KAAKquB,KAAK3pB,MAEhD,YAAcnD,IAAVS,EACOhC,KAAKqhD,YAAS9/C,EAEX,OAAVS,EACOhC,KAAKqhD,OAAS,MAGrBwN,GADyB,IAAzBr5B,MAAMC,QAAQzzB,GACDA,EAGCA,EAAyBA,MAG3ChC,KAAK+uD,eAAiBP,EAEXxuD,KAAKqhD,YADM9/C,IAAlBitD,EACqBK,EAAWzmD,IAAIb,IACzB,CACHynD,UAAS,EACTloD,KAAKS,EACL0nD,QAAQnvD,OAAA2e,EAAA,EAAA3e,WAIJyB,IAAZutD,EACqBD,EAAWzmD,IAAIb,IACzB,CACHynD,cAAgDztD,IAAvCitD,EAAclnD,KAAK4nD,GAAMA,IAAO3nD,GACzCT,KAAKS,EACL0nD,QAAQnvD,OAAA2e,EAAA,EAAA3e,MAIC+uD,EAAWzmD,IAAIb,IACzB,CACHynD,cAAsDztD,IAA7CitD,EAAclnD,KAAK4nD,GAAMJ,EAAQvnD,EAAG2nD,IAC7CpoD,KAAKS,EACL0nD,QAAQnvD,OAAA2e,EAAA,EAAA3e,OAIVkC,YAGN,OADAhC,KAAKmvD,aACEnvD,KAAKqhD,OAEhB7hD,YAAYivD,GACJA,EAAUD,gBAAkBxuD,KAAK+uD,gBACrC/uD,KAAKmvD,aAED3vD,SAASsH,EAAqBkoD,GAClCloD,EAAKkoD,SAAWA,EAChB,IAAII,EAAcpvD,KAAKqhD,OAAO9W,KAAKhjC,GAAKA,EAAEynD,UAC1ChvD,KAAKquB,KAAK3pB,MAAMoC,KAAKuoD,SAASvoD,EAAKA,KAAMkoD,EAAUI,GAGvDZ,oBACI,OAAOxuD,KAAKqhD,OAAOjT,OAAO7mC,IAAoB,IAAfA,EAAEynD,UAAmB5mD,IAAIb,GAAKA,EAAET,MA0BnEtH,OAAOsH,EAAqBuB,GACxB,IAAIJ,UAACA,EAAStB,IAAEA,EAAG2b,OAAEA,EAAM+sC,SAAEA,GAAYrvD,KAAKquB,KAAK3pB,MAAMoC,MACrDmoD,QAACA,EAAOD,SAAEA,GAAYloD,EAC1B,OAAO4I,EAAA,oBAAI/I,SAAWpF,IAANoF,EAAgB0B,EAAM1B,EAAIG,GAAOmB,UAAW4uB,EAAW5uB,IACnEyH,EAAA,qBAAKzH,UAAU,kCACXyH,EAAA,uBAAO8b,IAAKC,IACCA,IACLzrB,KAAKyrB,MAAQA,EAAOA,EAAMoO,QAAUm1B,IAExC/mD,UAAU,GAAGJ,KAAK,WAAWqH,MAAM,GAAG5L,GAAI2rD,EAC1C1J,eAAgByJ,EAChBljC,SAAWzf,IACPrM,KAAKqvD,SAASvoD,EAAMuF,EAAE6N,OAAO2f,YAErCnqB,EAAA,uBAAOzH,UAAU,GAAGK,MAAO,CAACgnD,KAAK,EAAGC,aAAa,GAAIC,QAASP,GACzDjvD,KAAK0oB,cAAc5hB,EAAKA,KAAMuB,qUAzDrConD,CAAA,CAAThmC,EAAA,oEC5BL,IAAaimC,EAAb,cAA0BhgD,EAAA,UAEtBlQ,YAAYkF,GACR7E,MAAM6E,GAUV1E,KAAA2a,SAAW,CAACJ,IACRrX,QAAQC,IAAI,mCAAqCoX,KAVjD,IAAIzT,KAACA,GAAQ9G,KAAK0E,OACd+H,QAACA,EAAO4iD,SAAEA,GAAYvoD,EAEtB9G,KAAK2vD,cADQpuD,IAAb8tD,EACgB,IAAIT,EAAW5uD,WACduB,IAAZkL,EACW,IAAIiiD,EAAU1uD,MAEd,IAAI2uD,EAAO3uD,MAKnCR,oBAAoBivD,EAAqBmB,EAAWC,GAChD7vD,KAAK2vD,SAASG,YAAYrB,GAE9BD,oBACI,OAAOxuD,KAAK2vD,SAASnB,cAEzBhvD,SACI,IAAIyI,UAACA,EAASoC,OAAEA,EAAMoR,OAAEA,EAAM+I,OAAEA,EAAMu8B,QAAEA,EAAO//C,KAAEA,EAAI8F,KAAEA,EAAI0nD,cAAEA,GAAiBxuD,KAAK0E,WACpEnD,IAAXijB,IAAsBA,EAAS,eACnBjjB,IAAZw/C,IAAuBA,EAAU,gBACxBx/C,IAATP,IAAoBA,EAAO,QAE/B,IAUIuB,GAVAs/B,QAACA,EAAO7/B,MAAEA,EAAO++C,QAAQgP,GAAa/vD,KAAK2vD,SAC/C,SAASK,EAAUt+B,EAAe7pB,GAC9B,GAAK6pB,EACL,cAAeA,GACX,QACA,IAAK,SAAU,OAAOhiB,EAAA,oBAAIzH,UAAW,WAAWJ,GAAO6pB,GACvD,IAAK,WAAY,OAAOhiB,EAAA,oBAAIzH,UAAW,WAAWJ,GAAQ6pB,KAC1D,IAAK,SAAU,OAAOhiB,EAAA,wBAAKgiB,IAenC,OAVInvB,EADU,OAAVP,EACUguD,EAAUxrC,EAAQ,eACbjjB,IAAVS,EACKguD,EAAUjP,EAAS,WACP,IAAjB/+C,EAAM4D,OACDoqD,EAAUhvD,EAAM,QAEhBgB,EAAMoG,IAAI,CAACtB,EAAMuB,IAChBrI,KAAK2vD,SAASrtC,OAAOxb,EAAMuB,IAGnCqH,EAAA,oBAAIzH,UAAW4U,IAAW,UAAW5U,IACvC+nD,EAAU3lD,EAAQ,UAClB9H,EACAytD,EAAUv0C,EAAQ,aArDlBi0C,uUAAIO,CAAA,CADhB3gD,EAAA,GACYogD,mDC1BN,MAAeQ,EAClB1wD,UAAUiB,KAIP,MAAM0vD,UAAmBD,EAC5B1wD,OAAOmH,GACH,OAAO+I,EAAA,qBAAK/I,IAAK,MAAQA,EAAKsB,UAAU,IACpCyH,EAAA,qBAAKzH,UAAU,aACXyH,EAAA,qBAAKpH,MAAO,CAAC8nD,UAAW,0BAMjC,MAAMC,UAAgBH,EAEzB1wD,YAAYuD,GACRlD,QACAG,KAAK+C,MAAQA,EAEjBvD,OAAOmH,GACH,IAAI2pD,EACJ,OAAQtwD,KAAK+C,OACT,QAASutD,EAAI,OAAQ,MACrB,IAAK,IAAKA,EAAI,OAAQ,MACtB,IAAK,IAAKA,EAAI,OAElB,IAAIr0C,EAAK4a,EAAUy5B,GACnB,OAAO5gD,EAAA,qBAAK/I,IAAK,MAAQA,EAAKsB,UAAWgU,EAAI3T,MAAO,CAACioD,gBAAiB,cAI9E,MAAMC,EAAkB,wBAClBC,EAAmB,yBACnBC,EAAgB,sBACf,MAAeC,UAAuBT,EAKzC1wD,YAAYoxD,EAAyB/U,GACjCh8C,QACAG,KAAK4wD,UAAYA,EACjB5wD,KAAK67C,KAAOA,EAGhBr8C,OAAOmH,GACH,IAAI8F,QAACA,EAAOokD,GAAEA,GAAM7wD,KAAK67C,KACrB5/B,EAAK4a,EAAU,CACfkvB,sBAA8BxkD,IAAZkL,EAClBqkD,gBAAmBvvD,IAAPsvD,EACZn/B,KAAO,IAEX,OAAOhiB,EAAA,qBAAK/I,IAAKA,EAAKsB,UAAWgU,EAAIxP,QAASA,GACzCzM,KAAK+wD,cACL/wD,KAAKgxD,cAGJxxD,cACN,IAAIY,MAACA,GAASJ,KAAK67C,KACnB,YAAct6C,IAAVnB,EAA4B,KACzBsP,EAAA,uBAAOzH,UAAU,2BACnB7H,GAGCZ,aACN,IACIyxD,EAAOC,EAaPC,GAdA/wD,MAACA,EAAKgxD,KAAEA,GAAQpxD,KAAK67C,KAEzB,OAAQ77C,KAAK4wD,UAAUS,YACnB,IAAK,OAAQJ,EAAQT,EAAiB,MACtC,IAAK,SAAUS,EAAQR,EAAkB,MACzC,IAAK,QAASQ,EAAQP,EAE1B,OAAQ1wD,KAAK67C,KAAKqV,QACd,IAAK,MAAOA,EAAS,oBAAqB,MAC1C,QACA,IAAK,SAAUA,EAAS,qBAAsB,MAC9C,IAAK,SAAUA,EAAS,kBAAmB,MAC3C,IAAK,UAAWA,EAAS,sBAO7B,IAAIj1C,EAAK4a,EAAUo6B,EAAOC,EAHtBC,GADS,IAATC,OACc7vD,IAARnB,EAAmB,YAAY,YAE/B,QAC6B,UACvC,OAAOsP,EAAA,qBAAKzH,UAAWgU,GAClBjc,KAAKsxD,kBAGJ9xD,iBACN,OAAOkQ,EAAA,qBAAKzH,UAAU,0BACjBjI,KAAKuxD,qBAGJ/xD,oBACN,OAAOQ,KAAKuC,SAIb,MAAMivD,UAAsBb,EAE/BnxD,UAAUiB,GACoBT,KAAKuC,aAAhBhB,IAAXd,OAAqCc,EACrBd,EAAOT,KAAK67C,KAAK37C,OAItC,MAAMuxD,UAAsBd,EAE/BnxD,UAAUiB,GACoBT,KAAKuC,aAAhBhB,IAAXd,OAAqCc,EACrBd,EAAOT,KAAK67C,KAAK37C,OAItC,MAAMwxD,UAAoBf,EAE7BnxD,UAAUiB,GACN,QAAec,IAAXd,EAAsBT,KAAKuC,aAAUhB,MACpC,CACD,IAAI8sB,EAAOruB,KAAK67C,KAAKxtB,KACSruB,KAAKuC,QAAf,kBAAT8rB,EAAkC5tB,EAAO4tB,QAChC9sB,GAGlB/B,iBACN,IAAI6uB,KAACA,EAAIqD,IAAEA,GAAO1xB,KAAK67C,KACnB75C,EAA8B,kBAATqsB,EAAmBruB,KAAKuC,QAAU8rB,EAC3D,YAAc9sB,IAAVS,EAA4B0N,EAAA,0BAEzBA,EAAA,qBAAKzH,UAAU,SAEdjG,EAAMoG,IAAI,CAACtB,EAAMuB,IAAUqH,EAAA,cAACA,EAAA,SAAc,CAAC/I,IAAK0B,GACnC,IAARA,EAAW,KAAMqH,EAAA,qBAAKpH,MAAO,CAACqmC,MAAM,OAAQgjB,aAAa,uBACzDjiD,EAAA,cAAoBgiB,EAAK5qB,OAOvC,MAAM8qD,UAAyBjB,EAExBnxD,iBACN,IAAI04B,UAACA,GAAal4B,KAAK67C,KACvB,OAAO3jB,GC1GR,MAAM25B,EAMTryD,YAAYoxD,EAAyBlsD,GACjC1E,KAAK4wD,UAAYA,EACjB5wD,KAAK0E,MAAQA,EAEb1E,KAAKsqC,YAGD9qC,YACJQ,KAAKyxB,KAAO,GACZ,IAAIqgC,GAAgB,EACpB,IAAK,IAAIjW,KAAQ77C,KAAK0E,MAClB,GAAoB,kBAATm3C,EACP77C,KAAKyxB,KAAKjrB,KAAK,IAAI6pD,EAAQxU,IAC3BiW,GAAQ,MAEP,CAED,IAAIpgC,EACJ,OAFKogC,GAAO9xD,KAAKyxB,KAAKjrB,KAAK,IAAI2pD,GAEvBtU,EAAKh0C,MACT,QAAS,SACT,IAAK,SAAU6pB,EAAM,IAAI8/B,EAAcxxD,KAAK4wD,UAAW/U,GAAO,MAC9D,IAAK,SAAUnqB,EAAM,IAAI+/B,EAAczxD,KAAK4wD,UAAW/U,GAAO,MAC9D,IAAK,OAAQnqB,EAAM,IAAIggC,EAAY1xD,KAAK4wD,UAAW/U,GAAO,MAC1D,IAAK,YAAanqB,EAAM,IAAIkgC,EAAiB5xD,KAAK4wD,UAAW/U,GAEjE77C,KAAKyxB,KAAKjrB,KAAKkrB,GACfogC,GAAQ,GAKpBtyD,UAAUiB,GACN,IAAK,IAAIuqB,KAAKhrB,KAAKyxB,KAAMzG,EAAEjqB,UAAUN,GAGzCjB,SACI,OAAOQ,KAAKyxB,KAAKrpB,IAAI,CAACspB,EAAKrpB,IAAUqpB,EAAIpP,OAAO0V,OAAO3vB,iBC5E/D,IAAa0pD,EAAb,cAA8BriD,EAAA,UAmB1BlQ,SACI,IAAIyI,UAACA,EAASwpB,KAAEA,EAAIhxB,OAAEA,GAAUT,KAAK0E,MACjCstD,EAAW,IAAIH,EAAS7xD,KAAK0E,MAAO+sB,GACxCugC,EAASjxD,UAAUN,GACnB,IAAIwb,EAAK4a,EAAW,kBAAmB5uB,GACvC,OAAOyH,EAAA,qBAAKzH,UAAWgU,GAClB+1C,EAAS1vC,YAzBTyvC,uUAAQvjD,CAAA,CADpBc,EAAA,GACYyiD,GCdb1zD,EAAAC,EAAAC,EAAA,sBAAAwzD,gVCQO,MAAME,UAAuBC,EAAA,EAApC1yD,kCASYQ,KAAA8rB,SAAW,CAACtY,IAChBxT,KAAK6jD,SAAWrwC,EAAI0G,OAAOhL,MAC3B,IAAIijD,EAAWnyD,KAAKkP,MACpBlP,KAAK4oC,UAAa5oC,KAAK6jD,UAAYsO,IAG/BnyD,KAAA8R,KAAOhS,OAAAwP,EAAA,EAAAxP,CAAU4E,IACrB,IAAIkJ,QAACA,EAAOC,OAAEA,GAAUnJ,EACpBgX,EAAQhM,EAAA,wBACRzH,UAAU,yBACVshB,UAAWvpB,KAAK4oC,UAChBn8B,QAAS,IAAImB,EAAQ5N,KAAK6jD,WAAS,gBACvC,OAAOn0C,EAAA,cAACoC,EAAA,EAAI,CAACzH,OAAQ,eAAOrK,KAAKI,MAAOsb,MAAOA,GAC3ChM,EAAA,qBAAKzH,UAAU,OACXyH,EAAA,uBAAO7H,KAAK,OACRikB,SAAU9rB,KAAK8rB,SACf7jB,UAAU,eACVytB,aAAc11B,KAAKkP,QAEnBlP,KAAKk7C,QAAUxrC,EAAA,qBAAKzH,UAAU,mBAAmBjI,KAAKk7C,OAAOt4B,iBA1B7DpjB,wDACZ,OAAO,IAAImO,QAAa,CAACC,EAASC,KAC9B,IAAI0nB,EAAU7lB,EAAA,cAAoB1P,KAAK8R,KAAM,CAAClE,QAAQA,EAASC,OAAOA,IACtErI,EAAA,EAAIgB,KAAK+uB,EAAQ1nB,iSCU7B,IAAaukD,EAAb,cAA0B1iD,EAAA,UAStBlQ,YAAYkF,GACR7E,MAAM6E,GATF1E,KAAAqyD,oBAAsB,iCACtBryD,KAAAsyD,6BAA+B,8DAuD/BtyD,KAAA4wC,SAAW,EAAOqK,EAAwBC,EAAgB96C,EAAc8O,IAAeqjD,EAAAvyD,UAAA,qBAC3F,IACIijD,GADAuP,cAACA,EAAaC,YAAEA,GAAezyD,KAAK0E,MAExC,QAAoBnD,IAAhBkxD,EAEA,kBADMA,EAAYxX,EAAYC,EAAQhsC,IAG1C,IAAIwjD,EAmBZ,SAAwBzX,EAAwBC,EAAe96C,EAAc8O,GACzE,IAAIwjD,EACJ,QAAenxD,IAAX25C,EACA,OAAQA,EAAOuL,QACX,IAAK,OAAQiM,EAAWT,EAAgB,MACxC,IAAK,QAASS,EAAW/H,EAAA,OAI7B,OAAQ1P,EAAWpzC,MACf,IAAK,SAAU6qD,EAAWT,EAAgB,MAC1C,IAAK,QAASS,EAAW/H,EAAA,EAGjC,QAAiBppD,IAAbmxD,EAAwB,OAC5B,OAAO,IAAIA,EAASzX,EAAYC,EAAQ96C,EAAO8O,GAlCnByjD,CAAe1X,EAAYC,EAAQ96C,EAAO8O,GAClE,KACI+zC,QAAoByP,EAAShtD,UACVwJ,SACO3N,IAAlBixD,EACA5sC,SAASq1B,EAAW/6C,4BAA4B+iD,WAAqB/zC,WAG/DsjD,EAAcvX,EAAYgI,EAAa/zC,UAG/CwjD,EAAS7H,MAEnB,MAAO5kD,GACH/C,QAAQC,IAAI,wBAnEhB,IAAIyvD,mBAACA,EAAkBC,sBAAEA,EAAqBC,aAAEA,EAAYC,sBAAEA,EAAqBlM,SAAEA,GAAYniD,EACjG1E,KAAKgzD,UAAYtjD,EAAA,qBAAKzH,UAAW2qD,GAAsB5yD,KAAKqyD,sBAC5DryD,KAAKizD,aAAevjD,EAAA,qBAAKzH,UAAW4qD,GAAyB7yD,KAAKqyD,sBAClEryD,KAAK+yD,sBAAwBA,GAAyB/yD,KAAKsyD,6BAC3DtyD,KAAK2pD,IAAMj6C,EAAA,qBAAKzH,UAAW6qD,GAAgB9yD,KAAKqyD,sBAChDryD,KAAK6mD,SAAYA,GAAYA,EAAS7kD,OAAU,GAGpDxC,SACI,IAAI0zD,EAAwB,IACxBj4B,OAACA,GAAUj7B,KAAK0E,MAChByC,EAAM8zB,EAAOr1B,OAEjBstD,EAAQ1sD,KAAKxG,KAAKgzD,WAClB,IAAK,IAAI9rD,EAAE,EAAGA,EAAEC,EAAKD,IACbA,EAAE,GAAGgsD,EAAQ1sD,KAAKxG,KAAK2pD,KAC3BuJ,EAAQ1sD,KAAKxG,KAAKqmB,UAAU4U,EAAO/zB,KAIvC,OAFAgsD,EAAQ1sD,KAAKxG,KAAKizD,cAEXvjD,EAAA,yBACFwjD,EAAQ9qD,IAAI,CAACb,EAAGc,IAAUqH,EAAA,cAACA,EAAA,SAAc,CAAC/I,IAAK0B,GAAQd,KAIxD/H,UAAUy7C,GACd,IACIkY,GADAjzD,KAACA,EAAI2H,KAAEA,GAAQozC,EAEfC,EAASl7C,KAAK6mD,SAAS3mD,GACvBE,EAAgB86C,GAAUA,EAAO96C,OAAUF,EAC3CgP,EAAYlP,KAAK0E,MAAM+O,KAAKvT,GAChC,OAAQ2H,GACJ,QACIsrD,EAAWjkD,EAAOQ,EAAA,uBAAIR,GAAaQ,EAAA,uBAAOzH,UAAU,cAAY,YAChE,MACJ,IAAK,QACDkrD,EAAWzjD,EAAA,cAACo7C,EAAA,EAAK,CAAC7iD,UAAU,YAAYgG,IAAKiB,IAGrD,OAAOQ,EAAA,qBAAKzH,UAAWjI,KAAK+yD,sBAAuBtmD,QAAS,IAAU8lD,EAAAvyD,UAAA,kCAAMA,KAAK4wC,SAASqK,EAAYC,EAAQ96C,EAAO8O,MACjHQ,EAAA,qBAAKzH,UAAU,QAAQ7H,GACvBsP,EAAA,qBAAKzH,UAAU,wCAAwCkrD,GACvDzjD,EAAA,qBAAKzH,UAAU,mBAAkByH,EAAA,mBAAGzH,UAAU,4BArD7CmqD,uUAAI5jD,CAAA,CADhBc,EAAA,GACY8iD,GCvBb/zD,EAAAC,EAAAC,EAAA,sBAAA6zD,kEC4BA,IAAagB,EAAb,cAA6B1jD,EAAA,UACzBlQ,YAAYkF,GACR7E,MAAM6E,GACN1E,KAAKoF,MAAQ,CACTiuD,SAAS,GAGjB7zD,SACI,IACI6K,EAAQipD,EAAgBC,EAoBxBC,EAWA/3C,EAOAg4C,GAvCAtlD,KAACA,EAAIg6B,KAAEA,EAAIurB,KAAEA,EAAIC,OAAEA,EAAMC,QAAEA,EAAOvzD,KAAEA,EAAIwzD,OAAEA,EAAMn4C,MAAEA,EAAKjP,QAAEA,GAAWzM,KAAK0E,MAE7E,QAAenD,IAAXsyD,EAAsB,CACtB,IAAIC,GAC4BA,EAAV,kBAAXD,EAA0BA,EAC3BA,EAAO1qD,OACJ,EACToqD,EAAU7jD,EAAA,uBAAIokD,GACTA,EAAK,IACVP,EAAU7jD,EAAA,mBAAGzH,UAAU,SAE/B,cAAe5H,GACX,IAAK,SACDgK,EAASqF,EAAA,4BAASrP,EAAMkzD,GACxBD,GAAQ,EACR,MACJ,IAAK,SACDjpD,EAASqF,EAAA,wBAAQzH,UAAU,QAAOyH,EAAA,qBAAKzB,IAAK5N,IAAmBkzD,GAC/DD,GAAQ,EAIhB,QAAe/xD,IAAXoyD,EACA,cAAeA,GACX,IAAK,SACDH,EAAM9jD,EAAA,qBAAKpH,MAAO,CAACgnD,KAAKsE,IAAWD,GACnC,MACJ,QACIH,EAAMG,OAKJpyD,IAAVma,IAEID,EADiB,kBAAVC,EACEhM,EAAA,4BAAQA,EAAA,uBAAOzH,UAAU,cAAcyT,IAEvChM,EAAA,4BAASgM,SAGbna,IAATmyD,IAAoBD,EAAW/jD,EAAA,0BAAOgkD,IAC1C,IAAIz3C,EAAK4a,EAAW,SAAU,CAACx2B,KAAKizD,EAAQD,QAASrzD,KAAKoF,MAAMiuD,SAAU,CAACU,iBAAyBxyD,IAAZkL,IACxF,OACAiD,EAAA,oBAAIzH,UAAWgU,EAAIxP,QAASA,GACvBpC,EACDqF,EAAA,yBACIA,EAAA,yBAAMy4B,GACLsrB,GAEJD,EACA/3C,KA1DA23C,uUAAO5kD,CAAA,CADnBc,EAAA,GACY8jD,GCTb,IAAaY,EAAb,cAA8BtkD,EAAA,UAC1BlQ,SACI,IAEI+C,EAAS0xD,GAFT5pD,OAACA,EAAMrI,MAAEA,EAAKg/C,WAAEA,EAAUhgD,KAAEA,EAAIqlB,UAAEA,EAASpe,UAAEA,EAASwT,OAAEA,EAAMy4C,UAAEA,EAASC,UAAEA,GAAan0D,KAAK0E,MAC7FuX,EAAK4a,EAAW5uB,EAAW,WA6C/B,OA1CI1F,OADUhB,IAAVS,EACyB,OAAfg/C,EAAqB,KAAOtxC,EAAA,oBAAIzH,UAAU,SAC/C+4C,GAAc,OAEG,IAAjBh/C,EAAM4D,OAEX8J,EAAA,oBAAIzH,UAAU,SAENjH,GAAQ,eAIGO,IAAd8kB,EACKrkB,EAAMoG,IAAI,CAACtB,EAAMuB,IAAUge,EAAUvf,EAAMuB,EAAOrI,KAAK0E,MAAM0vD,KAG7DpyD,EAAMoG,IAAI,CAACtB,EAAMuB,KACvB,IAGIgsD,EAHA5nD,EAAU3F,EAAK2F,QAInB,QAHgBlL,IAAZkL,QAAuClL,IAAd2yD,IACzBznD,EAAU,KAAIynD,EAAUptD,UAEVvF,IAAd4yD,GAEA,QAAiB5yD,KADjB8yD,EAAWF,EAAUrtD,IACO,OAAO,UAGnCutD,EAAQv0D,OAAAqI,OAAA,GACDrB,GAIX,YADqBvF,IAAjB8yD,EAAS1tD,MAAmB0tD,EAAS1tD,IAAM0tD,EAASlsB,MACjDz4B,EAAA,cAAC0jD,EAAOtzD,OAAAqI,OAAA,CAACsE,QAASA,GAAa4nD,WAG/B9yD,IAAX8I,IAEI4pD,EADkB,kBAAX5pD,EACIqF,EAAA,qBAAKzH,UAAU,kBAAkBoC,GAGjCA,GAKnBqF,EAAA,qBAAKzH,UAAWgU,GACXg4C,EACDvkD,EAAA,wBACKnN,GAEJkZ,KAtDAu4C,uUAAQM,CAAA,CADpBhlD,EAAA,GACY0kD,soBCHGxlD,CAAA,CAAXib,EAAA,GAXE,cAAyB/Z,EAAA,UAa5BlQ,YAAYkF,GACR7E,MAAM6E,GAbF1E,KAAAi7B,OAAsB,CAC1B,CAAC/6B,KAAK,OAAQ2H,KAAK,UACnB,CAAC3H,KAAK,OAAQ2H,KAAK,UAEf7H,KAAA6mD,SAAoB,CACxB7kD,MAAO,CACH+kC,KAAM,CAAC0f,OAAO,OAAQrmD,MAAM,eAAMwiB,YAAY,0DAC9CviB,KAAM,CAAComD,OAAO,QAASrmD,MAAM,kBAc7BJ,KAAAwyD,cAAgB,EAAOvX,EAAuB4I,EAAcsO,IAAgBxvD,EAAA3C,UAAA,qBAChF,IAAIE,KAACA,GAAQ+6C,QACPO,EAAA,EAAQ+Y,YAAYr0D,EAAM2jD,GAChC7jD,KAAKyT,KAAKvT,GAAQ2jD,EAClBlkD,EAAA,IAAIgJ,KAAKzI,GAAQ2jD,EACjBlkD,EAAA,IAAIsM,mBAZJ,IAAI86B,KAACA,EAAI1mC,KAAEA,GAAQV,EAAA,IAAIgJ,KACvB3I,KAAKyT,KAAO,CACRszB,KAAMA,EACN1mC,KAAMA,GAYdb,SACI,OAAOkQ,EAAA,cAAC/P,EAAA,KAAI,CAAC0K,OAAO,4BAChBqF,EAAA,cAAC/P,EAAA,KAAI,CAACs7B,OAAQj7B,KAAKi7B,OAAQ4rB,SAAU7mD,KAAK6mD,SACtCpzC,KAAMzT,KAAKyT,KACX++C,cAAexyD,KAAKwyD,2bCfpC,MAAMgC,EAQFjyD,cACI,OAAsB,IAAlBvC,KAAKgvD,SAA0BhvD,KAAKy0D,cAClBlzD,IAAlBvB,KAAKy0D,SAA+Bz0D,KAAKy0D,SACtCz0D,KAAKy0D,SAAWz0D,KAAK00D,kBATpBlmD,EAAA,CAAXib,EAAA,kCAmBK,IAAakrC,EAAb,cAA0BjlD,EAAA,UAQhClQ,YAAYkF,GACR7E,MAAM6E,GAHU1E,KAAAgb,KAAc,GA+B1Bhb,KAAA40D,SAAW,CAAC15C,IAChBlb,KAAK60D,YAAY7F,UAAW,EAC5B9zC,EAAI8zC,UAAW,EACfhvD,KAAK60D,YAAc35C,IA9BnB,IAAI2I,KAACA,EAAI7I,KAAEA,EAAI85C,QAAEA,EAAOC,YAAEA,EAAWpL,IAAEA,EAAGqF,SAAEA,GAAYhvD,KAAK0E,MAC7D,OAAQmf,GACJ,QACA,IAAK,KAAM7jB,KAAK6jB,KAAO,SAAU,MACjC,IAAK,KAAM7jB,KAAK6jB,KAAO,OAAQ,MAC/B,IAAK,KAAM7jB,KAAK6jB,KAAO,SAE3B7jB,KAAKgb,KAAKxU,QAAQwU,EAAK5S,IAAIb,IACnB,IAAI2T,EAAM,IAAIs5C,EAMd,OALAt5C,EAAIhb,KAAOqH,EAAErH,KACbgb,EAAI8zC,UAAW,EACf9zC,EAAIsO,QAAUjiB,EAAEiiB,QAChBtO,EAAIw5C,eAAiBntD,EAAEhF,QACvB2Y,EAAI85C,OAASztD,EAAEytD,OACR95C,KAGflb,KAAK80D,QAAUA,GAAW,WAC1B90D,KAAK+0D,YAAcA,EACnB/0D,KAAK2pD,IAAMA,GAAO,8BACDpoD,IAAbytD,IACAhvD,KAAK60D,YAAc70D,KAAKgb,KAAK1T,KAAKC,GAAKA,EAAErH,OAAS8uD,SAE7BztD,IAArBvB,KAAK60D,cAA2B70D,KAAK60D,YAAc70D,KAAKgb,KAAK,IACjEhb,KAAK60D,YAAY7F,UAAW,EAShCxvD,SACI,OAAOkQ,EAAA,qBAAKzH,UAAU,OAClByH,EAAA,qBAAKzH,UAAWjI,KAAK+0D,YAAazsD,MAAO,CAAC2sD,OAAQ,eAAiBj1D,KAAK6jB,KAAO,MAC1E7jB,KAAKgb,KAAK5S,IAAI,CAACb,EAAEc,KACd,IAAIC,EAA0B,CAC1B4sD,SAAsB,IAAb3tD,EAAEynD,cAAiBztD,EAAY,QAC5C,OAAOmO,EAAA,qBAAK/I,IAAK0B,EAAOC,MAAOA,GAAQf,EAAEhF,YAGjDmN,EAAA,qBAAKzH,UAAW4U,IAAW7c,KAAK80D,QAAS90D,KAAK2pD,KAAMrhD,MAAO,CAAC2sD,OAAQj1D,KAAK6jB,OACpE7jB,KAAKgb,KAAK5S,IAAI,CAACb,EAAEc,KACd,IACI8sD,GADAnG,SAACA,EAAQxlC,QAAEA,EAAOwrC,OAAEA,GAAUztD,EAElC,QAAehG,IAAXyzD,EAAsB,CACtB,IAAIhZ,EAAMgZ,EAAO7rD,WACL5H,IAARy6C,IACIA,EAAM,EAAGmZ,EAAezlD,EAAA,uBAAIssC,EAAI,GAAG,MAAMA,GACpCA,EAAM,IAAGmZ,EAAezlD,EAAA,mBAAGzH,UAAU,UAGtD,OAAOyH,EAAA,qBAAK/I,IAAK0B,EAAOJ,UAAU,GAAGwE,QAAS,IAAIzM,KAAK40D,SAASrtD,IAC5DmI,EAAA,qBAAKzH,UAAU,qBACVktD,EACA3rC,EAAQwlC,WA7DrBxgD,EAAA,CAAXib,EAAA,qCACWjb,EAAA,CAAXib,EAAA,8BANkBkrC,EAAInmD,EAAA,CAA1Bc,EAAA,GAAsBqlD,yVCrCR,MAAMS,UAAuB3wD,EAAA,UAA5CjF,kCACYQ,KAAAq1D,MAAQ,KAAW1yD,EAAA3C,UAAA,qBACvBA,KAAK0E,MAAMG,aACX,MAAMqS,QAACA,EAAO3M,IAAEA,EAAG5J,QAAEA,EAAOiN,QAAEA,EAAOC,OAAEA,GAAU7N,KAAK0E,YAChD5E,OAAAw1D,EAAA,EAAAx1D,CAAWoX,EAAS3M,EAAK5J,EAASiN,EAASC,MAE7C7N,KAAAoe,MAAQ,KAAWzb,EAAA3C,UAAA,qBACvBA,KAAK0E,MAAMG,gBAEfrF,SACI,IAEI+1D,GAFArvD,MAACA,EAAKqE,IAAEA,GAAOvK,KAAK0E,MAGxB,GAAqB,kBAAVwB,EAAoB,CAC3B,IAAID,EAAM,GACV,IAAK,IAAIiB,KAAKhB,EACVD,EAAIO,KAAK/B,EAAA,oBAAIkC,IAAKO,GAAGzC,EAAA,2BAAQyC,GAAUzC,EAAA,yBAAMyB,EAAMgB,MAEvDquD,EAAa9wD,EAAA,wBAAKwB,QAGlBsvD,EAAa9wD,EAAA,yBAAMyB,GAEvB,OAAOzB,EAAA,wBACHA,EAAA,yBAASwD,UAAU,kBACfxD,EAAA,6BACIA,EAAA,qBAAMwD,UAAU,YACZxD,EAAA,iEACAA,EAAA,iEACAA,EAAA,iCAAW8F,GACVgrD,EACD9wD,EAAA,qBAAKwD,UAAU,OACXxD,EAAA,wBAAQoD,KAAK,SAAS4E,QAASzM,KAAKq1D,OAAK,mBACzC5wD,EAAA,wBAAQoD,KAAK,SAAS4E,QAASzM,KAAKoe,OAAK,qDCnCrE/f,EAAAC,EAAAC,EAAA,sBAAAi3D,IAAO,MAAMC,EAGTj2D,YAAYU,GAAeF,KAAKE,KAAOA,EACvCV,MACI,QAAmB+B,IAAfvB,KAAKkP,MAAqB,OAAOlP,KAAKkP,MAC1C,IAAI3H,EAAIsO,aAAaC,QAAQ9V,KAAKE,MAClC,OAAOF,KAAKkP,MAAc,OAAN3H,OAAahG,EAAYwK,KAAKgK,MAAMxO,GAE5D/H,IAAI0P,GACKA,GACLlP,KAAKkP,MAAQA,EACb2G,aAAaa,QAAQ1W,KAAKE,KAAM6L,KAAKC,UAAUkD,KAFjClP,KAAKuG,QAIvB/G,QACIQ,KAAKkP,WAAQ3N,EACbsU,aAAaU,WAAWvW,KAAKE,OAI9B,MAAMs1D,EAAbh2D,cACIQ,KAAA2I,KAAO,IAAI8sD,EAAW,QACtBz1D,KAAAiJ,MAAQ,IAAIwsD,EAAY,SACxBz1D,KAAA8J,KAAO,IAAI2rD,EAAW,QACtBz1D,KAAA01D,WAAa,IAAID,EAAa,cAE9Bj2D,cACI,CACIQ,KAAK2I,KACL3I,KAAK01D,YACPttD,IAAI9J,GAAKA,EAAEiI,+CCpCrBovD,EAAAC,QAAiBv3D,EAAA4I,EAAuB,0lBCmJjC,MAAM4uD,EAAU,IAhJvB,cAAsBnzC,EAAA,UACZljB,mDACF,aAAaQ,KAAKmJ,IAAI,cAAe,CAACzD,MAAM,EAAGmS,SAAS,OAGtDrY,+CACF,aAAaQ,KAAKmJ,IAAI,WAAY,CAACzD,MAAM,EAAGmS,SAAS,OAGnDrY,KAAKsK,2CACP,aAAa9J,KAAKmJ,IAAI,WAAY,CAACW,KAAKA,MAGtCtK,OAAOsK,EAAa62B,EAAYptB,2CAClC,aAAavT,KAAKmJ,IAAI,cAAe,CAACW,KAAKA,EAAM62B,IAAIA,EAAKptB,QAAQA,MAGhE/T,OAAOU,2CACT,aAAaF,KAAKmJ,IAAI,cAAe,CAACjJ,KAAKA,MAGzCV,yDACF,aAAaQ,KAAKmJ,IAAI,uBAAwB,MAG5C3J,YAAYs2D,EAAejuD,EAAatF,2CAC1C,IAAIuH,KAACA,GAAQ4Y,EAAA,UAEb,aAAa1iB,KAAKyX,KAAK,mBAAoB,CACvC5P,KAAMA,EACNkuD,SAAUjsD,EACVksD,QAJW,EAKXF,OAAQA,EACRvzD,QAASA,MAIX/C,KAAKsK,2CACP,aAAa9J,KAAKmJ,IAAI,QAAS,CAACW,KAAKA,MAGnCtK,gBAAgBsK,2CAClB,aAAa9J,KAAKmJ,IAAI,oBAAqB,CAACW,KAAKA,MAG/CtK,WAAWsK,2CACb,aAAa9J,KAAKmJ,IAAI,cAAe,CAACW,KAAKA,MAGzCtK,aAAay2D,EAAensD,EAAaosD,EAAgBC,2CAC3D,aAAan2D,KAAKyX,KAAK,iBAAkB,CAACw+C,OAAOA,EAAQnsD,KAAKA,EAAMosD,QAAQA,EAASC,QAAQA,MAG3F32D,aAAamJ,EAAamB,EAAaosD,EAAgBC,2CACzD,aAAan2D,KAAKyX,KAAK,iBAAkB,CAAC9O,KAAKA,EAAMmB,KAAKA,EAAMosD,QAAQA,EAASC,QAAQA,MAGvF32D,SAASsK,2CACX,aAAa9J,KAAKmJ,IAAI,YAAa,CAACW,KAAKA,MAGvCtK,WAAWsK,EAAa62B,2CAE1B,aADgB3gC,KAAKyX,KAAK,eAAgB,CAAC3N,KAAKA,EAAM62B,IAAIA,MAIxDnhC,cAAcsK,EAAa62B,EAAY2pB,iDACnCtqD,KAAKyX,KAAK,kBAAmB,CAAC3N,KAAKA,EAAM62B,IAAIA,EAAK2pB,QAAQA,MAG9D9qD,eAAesK,EAAa+xC,EAAa3sC,iDACrClP,KAAKyX,KAAK,mBAAoB,CAAC3N,KAAKA,EAAM+xC,KAAKA,EAAM3sC,MAAMA,MAG/D1P,UAAUsK,EAAanD,EAAYiR,EAAeC,2CACpD,aAAa7X,KAAKmJ,IAAI,kBAAmB,CAACW,KAAKA,EAAMnD,IAAIA,EAAKiR,UAAUA,EAAWC,SAASA,MAG1FrY,UAAUsK,2CACZ,aAAa9J,KAAKmJ,IAAI,aAAc,CAACW,KAAKA,MAGxCtK,YAAYsK,EAAa5J,EAAasgC,2CACxC,aAAaxgC,KAAKyX,KAAK,gBAAiB,CAAC3N,KAAKA,EAAM5J,KAAKA,EAAMsgC,YAAYA,MAGzEhhC,mBAAmBsK,EAAa0tB,EAAaqkB,EAAa3sC,iDACtDlP,KAAKyX,KAAK,wBAAyB,CAAC3N,KAAKA,EAAM0tB,KAAKA,EAAMqkB,KAAKA,EAAM3sC,MAAMA,MAG/E1P,aAAasK,EAAa0tB,2CAC5B,aAAax3B,KAAKmJ,IAAI,iBAAkB,CAACW,KAAKA,EAAM0tB,KAAKA,MAGvDh4B,gBAAgBsK,EAAa0tB,EAAa4+B,iDACtCp2D,KAAKyX,KAAK,qBAAsB,CAAC3N,KAAKA,EAAM0tB,KAAKA,EAAM4+B,KAAKA,MAGhE52D,YAAYsK,EAAa0tB,EAAa7wB,EAAYiR,EAAkBC,2CACtE,aAAa7X,KAAKmJ,IAAI,eAAgB,CAACW,KAAKA,EAAM0tB,KAAKA,EAAM7wB,MAAKiR,YAAWC,eAG3ErY,iBAAiBsK,EAAausD,EAAeC,iDACzCt2D,KAAKyX,KAAK,qBAAsB,CAAC3N,KAAKA,EAAMusD,OAAOA,EAAQC,SAASA,MAGxE92D,gBAAgBsK,EAAausD,2CAC/B,aAAar2D,KAAKmJ,IAAI,oBAAqB,CAACW,KAAKA,EAAMusD,OAAOA,MAG5D72D,mBAAmBsK,EAAausD,EAAeE,iDAC3Cv2D,KAAKyX,KAAK,wBAAyB,CAAC3N,KAAKA,EAAMusD,OAAOA,EAAQE,MAAMA,MAGxE/2D,UAAUsK,EAAanD,EAAYiR,EAAkBC,2CACvD,aAAa7X,KAAKmJ,IAAI,aAAc,CAACW,KAAMA,EAAMnD,IAAIA,EAAKiR,UAAUA,EAAWC,SAASA,MAEtFrY,aAAasK,EAAanD,EAAYiR,EAAkBC,2CAC1D,aAAa7X,KAAKmJ,IAAI,iBAAkB,CAACW,KAAMA,EAAMnD,IAAIA,EAAKiR,UAAUA,EAAWC,SAASA,MAE1FrY,gBAAgBsK,EAAa62B,EAAY/oB,EAAkBC,2CAC7D,aAAa7X,KAAKmJ,IAAI,qBAAsB,CAACW,KAAMA,EAAM62B,IAAIA,EAAK/oB,UAAUA,EAAWC,SAASA,MAE9FrY,gBAAgBsK,EAAanB,EAAaiP,EAAkBC,2CAC9D,aAAa7X,KAAKmJ,IAAI,qBAAsB,CAACW,KAAMA,EAAMnB,KAAKA,EAAMiP,UAAUA,EAAWC,SAASA,MAEhGrY,iBAAiBsK,EAAa62B,EAAYh6B,EAAYiR,EAAkBC,2CAC1E,aAAa7X,KAAKmJ,IAAI,sBAAuB,CAACW,KAAMA,EAAM62B,IAAIA,EAAKh6B,IAAIA,EAAKiR,UAAUA,EAAWC,SAASA,MAExGrY,iBAAiBsK,EAAanB,EAAahC,EAAYiR,EAAkBC,2CAC3E,aAAa7X,KAAKmJ,IAAI,sBAAuB,CAACW,KAAMA,EAAMnB,KAAKA,EAAMhC,IAAIA,EAAKiR,UAAUA,EAAWC,SAASA,MAE1GrY,YAAYsK,EAAa62B,EAAYh4B,EAAa1D,iDAC9CjF,KAAKyX,KAAK,qBAAsB,CAAC3N,KAAMA,EAAM62B,IAAIA,EAAKh4B,KAAKA,EAAM1D,KAAKA,MAG1EzF,YAAYmH,2CACd,aAAa3G,KAAKmJ,IAAI,oBAAqB,CAACxC,IAAIA,MAE9CnH,YAAYsK,EAAanB,iDACrB3I,KAAKyX,KAAK,gBAAiB,CAAC3N,KAAKA,EAAMnB,KAAKA,QAIvB,WAAOpH,4QChCnC,MAAMi1D,EAAS,IAjHtB,cAAqB9zC,EAAA,UACXljB,uDAEF,aADgBQ,KAAKmJ,IAAI,sBAAkB5H,KAGzC/B,OAAOsK,2CACT,aAAa9J,KAAKmJ,IAAI,SAAU,CAACW,KAAKA,MAEpCtK,IAAI8D,2CACN,aAAatD,KAAKmJ,IAAI,MAAO,CAAC7F,GAAGA,MAE/B9D,GAAG8D,2CACL,aAAatD,KAAKmJ,IAAI,KAAM,CAAC7F,GAAGA,MAE9B9D,OAAO8D,2CACT,aAAatD,KAAKmJ,IAAI,SAAU,CAAC7F,GAAGA,MAElC9D,KAAK8D,2CACP,aAAatD,KAAKmJ,IAAI,OAAQ,CAAC7F,GAAGA,MAEhC9D,KAAKsK,EAAa+N,EAAgB,4CACpC,aAAa7X,KAAKmJ,IAAI,OAAQ,CAACW,KAAKA,EAAM+N,SAAUA,MAElDrY,IAAIsK,EAAa+N,EAAgB,4CACnC,aAAa7X,KAAKmJ,IAAI,MAAO,CAACW,KAAKA,EAAM+N,SAAUA,MAEjDrY,MAAMsK,EAAa+N,EAAgB,4CACrC,aAAa7X,KAAKmJ,IAAI,QAAS,CAACW,KAAKA,EAAM+N,SAAUA,MAEnDrY,QAAQsK,EAAa+N,EAAgB,4CACvC,aAAa7X,KAAKmJ,IAAI,UAAW,CAACW,KAAKA,EAAM+N,SAAUA,MAErDrY,MAAMsK,EAAa+N,EAAgB,4CACrC,aAAa7X,KAAKmJ,IAAI,QAAS,CAACW,KAAKA,EAAM+N,SAAUA,MAEnDrY,SAASsK,EAAa+N,EAAgB,4CACxC,aAAa7X,KAAKmJ,IAAI,WAAY,CAACW,KAAKA,EAAM+N,SAAUA,MAEtDrY,QAAQiB,2CACV,aAAaT,KAAKyX,KAAK,WAAYhX,KAEjCjB,OAAOiB,2CACT,aAAaT,KAAKyX,KAAK,UAAWhX,KAEhCjB,QAAQiB,2CACV,aAAaT,KAAKyX,KAAK,WAAYhX,KAEjCjB,WAAWiB,2CACb,aAAaT,KAAKyX,KAAK,cAAehX,KAEpCjB,SAASiB,2CACX,aAAaT,KAAKyX,KAAK,YAAahX,KAElCjB,YAAYiB,2CACd,aAAaT,KAAKyX,KAAK,eAAgBhX,KAErCjB,OAAOsK,EAAYxG,2CACrB,aAAatD,KAAKyX,KAAK,UAAW,CAAC3N,KAAKA,EAAMxG,GAAGA,MAE/C9D,MAAMsK,EAAYxG,2CACpB,aAAatD,KAAKyX,KAAK,SAAU,CAAC3N,KAAKA,EAAMxG,GAAGA,MAE9C9D,OAAOsK,EAAYxG,2CACrB,aAAatD,KAAKyX,KAAK,UAAW,CAAC3N,KAAKA,EAAMxG,GAAGA,MAE/C9D,UAAUsK,EAAYxG,2CACxB,aAAatD,KAAKyX,KAAK,aAAc,CAAC3N,KAAKA,EAAMxG,GAAGA,MAElD9D,QAAQsK,EAAYxG,2CACtB,aAAatD,KAAKyX,KAAK,WAAY,CAAC3N,KAAKA,EAAMxG,GAAGA,MAEhD9D,WAAWsK,EAAYxG,2CACzB,aAAatD,KAAKyX,KAAK,cAAe,CAAC3N,KAAKA,EAAMxG,GAAGA,MAEnD9D,WAAWmhC,2CACb,aAAa3gC,KAAKmJ,IAAI,UAAW,CAACw3B,IAAKA,MAErCnhC,UAAUsK,EAAY62B,EAAWnuB,2CACnC,IAAIikD,OACQl1D,IAARiR,IACAikD,EAAUjkD,EAAIpK,IAAIb,GAAKywB,OAAOzwB,EAAEjE,IAAI,IAAIiE,EAAEuP,OAAOO,KAAK,MAAMA,KAAK,YAE/DrX,KAAKyX,KAAK,cAAe,CAAC3N,KAAKA,EAAM62B,IAAIA,EAAKnuB,IAAIikD,MAEtDj3D,SAASsK,EAAYnD,EAAWiR,EAAiBC,2CACnD,aAAa7X,KAAKmJ,IAAI,YAAa,CAACW,KAAKA,EAAMnD,IAAIA,EAAKiR,UAAUA,EAAWC,SAASA,MAEpFrY,SAASsK,2CACX,aAAa9J,KAAKmJ,IAAI,SAAU,CAACW,KAAKA,MAEpCtK,UAAUsK,EAAYnD,EAAWiR,EAAiBC,2CACpD,aAAa7X,KAAKmJ,IAAI,aAAc,CAACW,KAAKA,EAAMnD,IAAIA,EAAKiR,UAAUA,EAAWC,SAASA,MAErFrY,aAAasK,EAAYnD,EAAWiR,EAAiBC,2CACvD,aAAa7X,KAAKmJ,IAAI,gBAAiB,CAACW,KAAKA,EAAMnD,IAAIA,EAAKiR,UAAUA,EAAWC,SAASA,MAExFrY,WAAWsK,EAAYnD,EAAWiR,EAAiBC,2CACrD,aAAa7X,KAAKmJ,IAAI,cAAe,CAACW,KAAKA,EAAMnD,IAAIA,EAAKiR,UAAUA,EAAWC,SAASA,MAKtFrY,eAAesK,EAAa8I,2CAC9B,aAAa5S,KAAKmJ,IAAI,cAAe,CAACW,KAAKA,EAAM8I,GAAGA,MAElDpT,kBAAkBsK,EAAa4sD,EAAgB7a,EAAa3sC,2CAC9D,aAAalP,KAAKyX,KAAK,sBAAuB,CAAC3N,KAAKA,EAAM4sD,QAAQA,EAAS7a,KAAKA,EAAM3sC,MAAMA,MAE1F1P,cAAcsK,EAAa8I,2CAC7B,aAAa5S,KAAKmJ,IAAI,kBAAmB,CAACW,KAAKA,EAAM8I,GAAGA,QAI/B,eAAWrR,olBC9GrC,MAAMo1D,EAETn3D,YAAYo3D,GAIA52D,KAAA+a,SAAiBxZ,EACjBvB,KAAA62D,YAAsBt1D,EACtBvB,KAAA82D,YAAsBv1D,EACtBvB,KAAA+2D,aAAuBx1D,EAN/BvB,KAAK42D,MAAQA,EAQXp3D,+CACF,IAAIsK,EAAO9J,KAAK42D,MAAM9sD,KACtB,QAAavI,IAATuI,EAAoB,OACxB,QAAgBvI,IAAZuI,EAAKxG,GAAkB,OAC3B,QAAoB/B,IAAhBvB,KAAK82D,OAAsB,OAC/B,IAAI51C,QAAY20C,EAAQmB,WAAWltD,EAAKxG,IACpCuzD,EAAqB,GACrBC,EAAqB,GACrBC,EAAsB,GAC1B71C,EAAIzG,QAAQw8C,IACR,IAAIf,QAACA,EAAOC,QAAEA,GAAWc,EACT,IAAZf,GAA6B,IAAZC,EACjBY,EAAQvwD,KAAKywD,IAEG,IAAZf,GAAeW,EAAOrwD,KAAKywD,GACf,IAAZd,GAAeW,EAAOtwD,KAAKywD,MAGvCj3D,KAAK62D,OAASA,EACd72D,KAAK82D,OAASA,EACd92D,KAAK+2D,QAAUA,IAGXv3D,UAAUuC,GACd,IAAIsG,EAAQtG,EAAI8e,UAAUtZ,GAAKA,EAAEjE,KAAKtD,KAAK+a,IAAIzX,IAC3C+E,GAAQ,GAAGtG,EAAIw7B,OAAOl1B,EAAO,GAG/B7I,aAAa02D,EAAgBC,2CAC/B,IAAIp7C,EAAM/a,KAAK+a,IACfA,EAAIm7C,QAAUA,EACdn7C,EAAIo7C,QAAUA,EACd,IAAIe,EAAWn8C,EAAIzX,GAAI4G,EAASlK,KAAK42D,MAAM9sD,KAAKxG,SAC1CuyD,EAAQsB,aAAaD,EAAUhtD,EAAQgsD,EAASC,GACtDn2D,KAAKo3D,UAAUp3D,KAAK62D,QACpB72D,KAAKo3D,UAAUp3D,KAAK82D,QACpB92D,KAAKo3D,UAAUp3D,KAAK+2D,SACJ,IAAZb,GAA6B,IAAZC,EACjBn2D,KAAK+2D,QAAQpV,QAAQ5mC,IAEL,IAAZm7C,GAAel2D,KAAK62D,OAAOlV,QAAQ5mC,GACvB,IAAZo7C,GAAen2D,KAAK82D,OAAOnV,QAAQ5mC,MAIzCvb,OAAOmJ,EAAautD,EAAgBC,2CACtC,IAAIkB,QAAcxB,EAAQyB,aAAa3uD,EAAM3I,KAAK42D,MAAM9sD,KAAKxG,GAAI4yD,EAASC,GAC1E,QAAc50D,IAAV81D,EAAqB,CACrB,IAAIt8C,EAAM/a,KAAK+a,IAAMs8C,EACrBr3D,KAAKo3D,UAAUp3D,KAAK62D,QACpB72D,KAAKo3D,UAAUp3D,KAAK82D,QACpB92D,KAAKo3D,UAAUp3D,KAAK+2D,SACJ,IAAZb,GAA6B,IAAZC,EACjBn2D,KAAK+2D,QAAQpV,QAAQ5mC,IAEL,IAAZm7C,GAAel2D,KAAK62D,OAAOlV,QAAQ5mC,GACvB,IAAZo7C,GAAen2D,KAAK82D,OAAOnV,QAAQ5mC,IAG/C,OAAOs8C,KAhEC7oD,EAAA,CAAXib,EAAA,6BACWjb,EAAA,CAAXib,EAAA,gCACWjb,EAAA,CAAXib,EAAA,gCACWjb,EAAA,CAAXib,EAAA,knBCCE,MAAe8tC,EAGlB/3D,YAAYo3D,EAAaY,GAKbx3D,KAAAgC,WAAaT,EACbvB,KAAA+a,SAASxZ,EALjBvB,KAAK42D,MAAQA,EACb52D,KAAKw3D,IAAMA,EAMTh4D,+CACD,IAAIqB,QAAYb,KAAKy3D,QACrBz3D,KAAKgC,MAAQnB,IAGZrB,QAAQsH,2CACV,IAAIrG,EAAa,QACAc,IAAbvB,KAAK+a,IACL1E,EAAAhD,EAAElL,OAAO1H,EAAQT,KAAK+a,IAAKjU,GAG3BuP,EAAAhD,EAAElL,OAAO1H,EAAQqG,GAGrBrG,EAAOqJ,KAAOhD,EAAKgD,KAAO9J,KAAK42D,MAAM9sD,KAAKxG,GAC1C,IAAIA,QAAWtD,KAAK03D,MAAMj3D,GAC1B,QAAiBc,IAAbvB,KAAK+a,IAAmB,CACxB,GAAW,IAAPzX,EAAU,OAAO,EACrB7C,EAAO6C,GAAKA,OACO/B,IAAfvB,KAAKgC,OAAqBhC,KAAKgC,MAAM2/C,QAAQlhD,GACjDT,KAAK23D,OACL33D,KAAK+a,IAAMjb,OAAA2pB,EAAA,EAAA3pB,CAAWW,QAGtB4V,EAAAhD,EAAElL,OAAOnI,KAAK+a,IAAKta,GAEvB,OAAO,IAELjB,KAAKsH,2CACP,IAAIrG,EAAa,GACjB4V,EAAAhD,EAAElL,OAAO1H,EAAQqG,GAEjBrG,EAAOqJ,KAAOhD,EAAKgD,KAAO9J,KAAK42D,MAAM9sD,KAAKxG,GAC1C,IAAIA,QAAWtD,KAAK03D,MAAMj3D,GAC1B,GAAW,IAAP6C,EAEJ,OADA7C,EAAO6C,GAAKA,EACL7C,IAGLjB,8CACF,IAAI8a,EAAIta,KAAK+a,IACb,QAAUxZ,IAAN+Y,EAAiB,OACrB,IAAIhX,EAAKgX,EAAEhX,GAEX,SADMtD,KAAK43D,KAAKt9C,QACG/Y,IAAfvB,KAAKgC,MAAqB,OAC9B,IAAIqG,EAAQrI,KAAKgC,MAAM6e,UAAUtZ,GAAKA,EAAEjE,KAAOA,GAC3C+E,GAAO,IACPrI,KAAKgC,MAAMu7B,OAAOl1B,EAAO,GACzBrI,KAAK63D,WAnDDC,EAAA,CAAXruC,EAAA,+BACWquC,EAAA,CAAXruC,EAAA,6BA0DL,MAAMsuC,UAAaR,EAAnB/3D,kCACgBQ,KAAAwS,SAAqBjR,EACrBvB,KAAAg4D,iBAA6Bz2D,EAEzB/B,gDACZ,aAAag3D,EAAOJ,KAAKp2D,KAAK42D,MAAM9sD,KAAKxG,MAE7B9D,MAAMsH,2CAClB,aAAa0vD,EAAOyB,QAAQnxD,KAEhBtH,KAAKsH,iDACX0vD,EAAO0B,OAAOl4D,KAAK42D,MAAM9sD,KAAKxG,GAAIwD,EAAKxD,MAEvC9D,OAASQ,KAAKw3D,IAAIW,OAAOx3B,MACzBnhC,OAASQ,KAAKw3D,IAAIW,OAAOx3B,MAEtBnhC,qDACT,IAAIqB,QAAY21D,EAAOrkD,WAAWnS,KAAK+a,IAAIzX,IAC3CtD,KAAKwS,IAAM3R,IAEFrB,SAASmH,2CAClB3G,KAAKg4D,kBAAoBxB,EAAO4B,SAASp4D,KAAK42D,MAAM9sD,KAAKxG,GAAIqD,EAAK,EAAG0xD,KAE5D74D,UAAUgT,EAAoCvN,2CACvD,IAAIqzD,EAAwCt4D,KAAKwS,IAAIpK,IAAIb,IACrD,IAAIjE,GAACA,EAAEwT,OAAEA,GAAUvP,EACnB,MAAO,CAACjE,GAAIA,EAAIwT,OAAQ,CAACA,MAE7B,IAAK,IAAIlE,KAAMJ,EAAK,CAChB,IAAInK,EAAQiwD,EAAOz3C,UAAUtZ,GAAKA,EAAEjE,KAAOsP,EAAGtP,KACjC,IAAT2B,EACIoD,EAAQ,GAAGiwD,EAAO3W,QAAQ/uC,GAG9B0lD,EAAO/6B,OAAOl1B,EAAO,SAGvBmuD,EAAO+B,UAAUv4D,KAAK42D,MAAM9sD,KAAKxG,GAAItD,KAAK+a,IAAIzX,GAAIg1D,GACxD,IAAK,IAAI1lD,KAAMJ,EAAK,CAChB,IAAInK,EAAQrI,KAAKwS,IAAIqO,UAAUxN,GAAKA,EAAE/P,KAAOsP,EAAGtP,IAEhD,GADI+E,GAAO,GAAGrI,KAAKwS,IAAI+qB,OAAOl1B,EAAO,IACxB,IAATpD,QACyB1D,IAArBvB,KAAKg4D,YAA2B,CAChC,IAAI1wD,EAAOtH,KAAKg4D,YAAY1wD,KAAK+L,GAAKA,EAAE/P,KAAOsP,EAAGtP,SACrC/B,IAAT+F,GAAoBtH,KAAKwS,IAAImvC,QAAQr6C,QA3C7CwwD,EAAA,CAAXruC,EAAA,6BACWquC,EAAA,CAAXruC,EAAA,qCAoDL,MAAM+uC,UAAYjB,EACE/3D,gDAEZ,aADgBg3D,EAAOhkD,IAAIxS,KAAK42D,MAAM9sD,KAAKxG,MAG/B9D,MAAMsH,2CAKlB,aAAa0vD,EAAOiC,OAAO3xD,KAEftH,KAAKsH,iDACX0vD,EAAOkC,MAAM14D,KAAK42D,MAAM9sD,KAAKxG,GAAIwD,EAAKxD,MAEtC9D,OAASQ,KAAKw3D,IAAIW,OAAOvlD,KACzBpT,OAASQ,KAAKw3D,IAAIW,OAAOvlD,MAGvC,MAAM+lD,UAAcpB,EACA/3D,gDAEZ,aADgBg3D,EAAOoC,MAAM54D,KAAK42D,MAAM9sD,KAAKxG,MAGjC9D,MAAMsH,2CAClB,aAAa0vD,EAAOqC,QAAQ/xD,KAEhBtH,KAAKsH,iDACX0vD,EAAOsC,OAAO94D,KAAK42D,MAAM9sD,KAAKxG,GAAIwD,EAAKxD,MAEvC9D,OAASQ,KAAKw3D,IAAIW,OAAOY,MACzBv5D,OAASQ,KAAKw3D,IAAIW,OAAOY,OAGvC,MAAMC,UAAgBzB,EACF/3D,gDACZ,aAAag3D,EAAOyC,QAAQj5D,KAAK42D,MAAM9sD,KAAKxG,MAEhC9D,MAAMsH,2CAClB,aAAa0vD,EAAO0C,WAAWpyD,KAEnBtH,KAAKsH,iDACX0vD,EAAO2C,UAAUn5D,KAAK42D,MAAM9sD,KAAKxG,GAAIwD,EAAKxD,MAE1C9D,OAASQ,KAAKw3D,IAAIW,OAAOiB,SACzB55D,OAASQ,KAAKw3D,IAAIW,OAAOiB,UAiBvC,MAAMC,UAAiB9B,EACH/3D,gDACZ,aAAag3D,EAAO8C,SAASt5D,KAAK42D,MAAM9sD,KAAKxG,MAEjC9D,MAAMsH,2CAClB,aAAa0vD,EAAO+C,YAAYzyD,KAEpBtH,KAAKsH,iDACX0vD,EAAOgD,WAAWx5D,KAAK42D,MAAM9sD,KAAKxG,GAAIwD,EAAKxD,MAE3C9D,OAASQ,KAAKw3D,IAAIW,OAAOzB,UACzBl3D,OAASQ,KAAKw3D,IAAIW,OAAOzB,UAC7Bl3D,WAAWq8C,EAAa3sC,2CAC1B,IAAIrO,QAAY21D,EAAOiD,kBAAkBz5D,KAAK42D,MAAM9sD,KAAKxG,GAAItD,KAAK+a,IAAIzX,GAAIu4C,EAAM3sC,GAChF,OAAQ2sC,GACJ,IAAK,MAAO77C,KAAK+a,IAAIxQ,IAAM2E,EAAO,MAClC,IAAK,SAAUlP,KAAK+a,IAAIq+C,OAASlqD,EAAO,MACxC,IAAK,KAAMlP,KAAK+a,IAAI2+C,GAAKxqD,EAAO,MAChC,IAAK,UAAWlP,KAAK+a,IAAI4+C,QAAUzqD,EAAO,MAC1C,IAAK,aAAclP,KAAK+a,IAAI6+C,WAAa1qD,EAE7C,OAAOrO,IAELrB,eAAeoT,2CACjB,IAAI/R,QAAY21D,EAAOqD,eAAe75D,KAAK42D,MAAM9sD,KAAKxG,GAAIsP,GAC1D5S,KAAKgC,MAAQnB,EAAI,MAIzB,MAAMw3D,EAAiB,GAEvB,MAAMyB,EAKFt6D,YAAYo3D,EAAaY,EAAStxC,GAMtBlmB,KAAAgC,WAAaT,EACzBvB,KAAAkhD,WAAqB,EAEblhD,KAAA4X,UAAY,EARhB5X,KAAK42D,MAAQA,EACb52D,KAAKw3D,IAAMA,EACXx3D,KAAKkmB,OAASA,EAQZ1mB,MAAMmH,2CACR3G,KAAK2G,IAAMA,EACX3G,KAAKgC,WAAQT,EACbvB,KAAKkhD,WAAY,EACjBlhD,KAAK4X,UAAY,QACX5X,KAAK8hC,SAGTtiC,+CACF,IAAuB,IAAnBQ,KAAKkhD,UAAoB,OAC7B,IAAIrgD,QAAYb,KAAKkmB,OAAOlmB,KAAK42D,MAAM9sD,KAAKxG,GAAItD,KAAK2G,IAAK3G,KAAK4X,UAAWygD,GACtElxD,EAAMtG,EAAI+E,OACVuB,EAAMkxD,GACNr4D,KAAKkhD,WAAY,IACf/5C,EACFtG,EAAI08B,OAAOp2B,EAAK,IAGhBnH,KAAKkhD,WAAY,EAEjB/5C,EAAM,GACNnH,KAAK4X,UAAY/W,EAAIsG,EAAI,GAAG7D,QACT/B,IAAfvB,KAAKgC,MACLhC,KAAKgC,MAAQnB,EAEbb,KAAKgC,MAAMwE,QAAQ3F,IAGvBb,KAAKgC,MAAQ,MAjCT81D,EAAA,CAAXruC,EAAA,+BAsCE,MAAMswC,EAETv6D,YAAYo3D,GAaA52D,KAAAm4D,YAAgB52D,EAC5BvB,KAAAo2D,UAAY70D,EACZvB,KAAAwS,SAAUjR,EACVvB,KAAA44D,WAAcr3D,EACdvB,KAAAi5D,aAAkB13D,EAElBvB,KAAAs5D,cAAoB/3D,EAEpBvB,KAAAg6D,eAAsCz4D,EACtCvB,KAAAo4D,cAAoC72D,EACpCvB,KAAAi6D,kBAA4C14D,EAC5CvB,KAAAk6D,gBAAwC34D,EAvBpCvB,KAAK42D,MAAQA,EACb52D,KAAKo2D,KAAO,IAAI2B,EAAKnB,EAAO52D,MAC5BA,KAAKwS,IAAM,IAAIgmD,EAAI5B,EAAO52D,MAC1BA,KAAK44D,MAAQ,IAAID,EAAM/B,EAAO52D,MAC9BA,KAAKi5D,QAAU,IAAID,EAAQpC,EAAO52D,MAElCA,KAAKs5D,SAAW,IAAID,EAASzC,EAAO52D,MACpCA,KAAKg6D,UAAY,IAAIF,EAA0BlD,EAAO52D,KAAMw2D,EAAOwD,UAAU/0D,KAAKuxD,IAClFx2D,KAAKo4D,SAAW,IAAI0B,EAAyBlD,EAAO52D,KAAMw2D,EAAO4B,SAASnzD,KAAKuxD,IAC/Ex2D,KAAKi6D,aAAe,IAAIH,EAA6BlD,EAAO52D,KAAMw2D,EAAOyD,aAAah1D,KAAKuxD,IAgBzFh3D,qDACF,IAAIsK,KAACA,GAAQ9J,KAAK42D,MAClB52D,KAAKm4D,aAAe3B,EAAO2B,OAAOruD,EAAKxG,OAf/Bw0D,EAAA,CAAXruC,EAAA,ySCjSE,MAAM0wC,UAAmBz3C,EAAA,SACZljB,SAASwY,8CAGTxY,QAAQ8D,2CACpB,aAAauyD,EAAQ/rD,KAAKxG,MAI3B,MAAM82D,UAAiB13C,EAAA,SACVljB,SAASwY,8CAGTxY,QAAQ8D,2CACpB,aAAakzD,EAAO5jD,GAAGtP,MAIxB,MAAM+2D,UAAkB33C,EAAA,SACXljB,SAASwY,8CAGTxY,QAAQ8D,2CACpB,aAAakzD,EAAO71B,IAAIr9B,MAIzB,MAAMg3D,UAAqB53C,EAAA,SACdljB,SAASwY,8CAGTxY,QAAQ8D,2CACpB,aAAakzD,EAAO4C,OAAO91D,ulBC3B5B,MAAMi3D,EACTrwD,aAA6B,OAAOwY,EAAA,UAAU5Y,KAmB9CtK,OACIQ,KAAK8J,UAAOvI,EACZvB,KAAK82D,OAAS,IAAIH,EAAO32D,MACzBA,KAAKw3D,IAAM,IAAIuC,EAAI/5D,MACnBA,KAAKw6D,WAAa,IAAIL,EACtBn6D,KAAKy6D,SAAW,IAAIL,EACpBp6D,KAAK06D,UAAY,IAAIL,EACrBr6D,KAAK26D,aAAe,IAAIL,EAG5B96D,SAEIkjB,EAAA,UAAU5X,UAAOvJ,EAIjBmhB,EAAA,UAAU5Y,UAAOvI,EACjBvB,KAAK0qB,OACL1qB,KAAK46D,iBAAcr5D,EACnBvB,KAAKo2D,UAAO70D,EACZvB,KAAKw3B,UAAOj2B,EACZvB,KAAKu2D,WAAQh1D,EACbvB,KAAK66D,cAAWt5D,EAChBvB,KAAK86D,gBAAav5D,EAClBvB,KAAK+6D,iBAAcx5D,EACnBvB,KAAKg7D,iBAAcz5D,EAGvB/B,QAAQg4B,GACAx3B,KAAKw3B,OAASA,IAClBx3B,KAAKw3B,KAAOA,EACZx3B,KAAK66D,cAAWt5D,EAChBvB,KAAK86D,gBAAav5D,EAClBvB,KAAK+6D,iBAAcx5D,EACnBvB,KAAKg7D,iBAAcz5D,GAGvB/B,YAAYmJ,GACJ3I,KAAK86D,aAAenyD,IACxB3I,KAAK86D,WAAanyD,EAClB3I,KAAKg7D,iBAAcz5D,GAGjB/B,eAAeq8C,EAAa3sC,iDACxB2mD,EAAQoF,eAAej7D,KAAK8J,KAAKxG,GAAIu4C,EAAM3sC,GACjDlP,KAAK8J,KAAK+xC,GAAQ3sC,IAGhB1P,wDACgB+B,IAAdvB,KAAKo2D,OACTp2D,KAAKo2D,WAAaP,EAAQqF,SAASl7D,KAAKkK,WAGtC1K,mDACF,QAAoB+B,IAAhBvB,KAAKkK,OAAsB,OAC/B,IAAIrJ,QAAYg1D,EAAQ/rD,KAAK9J,KAAKkK,QAClClK,KAAK8J,KAAOjJ,EACZqC,QAAQC,IAAI,mBAAoBtC,GAChCb,KAAK46D,kBAAoB/E,EAAQsF,gBAAgBn7D,KAAKkK,QACtD,IAAIkxD,QAAiB5E,EAAO6E,gBACxB9wD,IAACA,EAAGyI,SAAEA,GAAYooD,EACtBp7D,KAAKo7D,SAAW14C,EAAA,KAAKvP,cAAc5I,EAAKyI,GACxC9P,QAAQC,IAAI,eAAgB4I,KAAKC,UAAUhM,KAAKo7D,aAG9C57D,YAAYihC,iDACRo1B,EAAQyF,cAAct7D,KAAK8J,KAAKxG,GAAIm9B,EAAO,GACvCzgC,KAAKo2D,KAAK9uD,KAAKC,GAAKA,EAAEjE,KAAOm9B,GACnC86B,OAAS,IAGX/7D,eAAeihC,2CACjB,IAAI5/B,QAAYg1D,EAAQ2F,WAAWx7D,KAAK8J,KAAKxG,GAAIm9B,GACjD,OAAI5/B,GAAO,EAAUA,GACXb,KAAKo2D,KAAK9uD,KAAKC,GAAKA,EAAEjE,KAAOm9B,GACnC86B,OAAS,EACN,KAGL/7D,WAAWmhC,2CACb,IAAI9/B,QAAYg1D,EAAQ2F,WAAWx7D,KAAK8J,KAAKxG,GAAIq9B,EAAIr9B,IACrD,OAAIzC,GAAO,EAAUA,GACrBb,KAAKo2D,KAAK5vD,KAAKm6B,GACR,KAGLnhC,oDACF,QAAmB+B,IAAfvB,KAAKu2D,MAAqB,OAC9B,IAAI11D,QAAYg1D,EAAQ4F,UAAUz7D,KAAK8J,KAAKxG,IAC5CzC,EAAI4Z,QAAQlT,IACR,OAAQA,EAAEjE,IACN,KAAK,EACDiE,EAAErH,KAAM,eACRqH,EAAEi5B,YAAc,mDAChB,MACJ,KAAK,EACDj5B,EAAErH,KAAM,eACRqH,EAAEi5B,YAAc,4DAI5BxgC,KAAKu2D,MAAQ11D,IAGXrB,YAAYU,EAAasgC,2CAC3B,IAAIl9B,QAAWuyD,EAAQ6F,YAAY17D,KAAK8J,KAAKxG,GAAIpD,EAAMsgC,GASvD,OARIl9B,EAAK,GACLtD,KAAKu2D,MAAM/vD,KAAK,CACZlD,GAAIA,EACJpD,KAAMA,EACNsgC,YAAaA,EACbkB,WAAOngC,IAGR+B,IAGL9D,eAAeq8C,EAAa3sC,iDACxB2mD,EAAQ8F,mBAAmB37D,KAAK8J,KAAKxG,GAAItD,KAAKw3B,KAAKl0B,GAAIu4C,EAAM3sC,GACnElP,KAAKw3B,KAAKqkB,GAAQ3sC,IAGhB1P,uDACF,IAAIqB,QAAYg1D,EAAQ+F,aAAa57D,KAAK8J,KAAKxG,GAAItD,KAAKw3B,KAAKl0B,IAC7DtD,KAAK66D,SAAWh6D,EAAIuH,IAAIb,GACbvH,KAAKo2D,KAAK9uD,KAAKq5B,GAAKA,EAAIr9B,KAAOiE,EAAEjE,OAI1C9D,YAAY42D,iDACRP,EAAQgG,gBAAgB77D,KAAK8J,KAAKxG,GAAItD,KAAKw3B,KAAKl0B,GAAI8yD,EAAKhuD,IAAIb,GAAGA,EAAEjE,KACxEtD,KAAK66D,SAAWzE,IAGd52D,sDACF,IAAIqB,QAAYg1D,EAAQiG,YAAY97D,KAAK8J,KAAKxG,QAAkB/B,IAAdvB,KAAKw3B,KAAoB,EAAEx3B,KAAKw3B,KAAKl0B,QAAI/B,EAAW,EAAG,KACzGvB,KAAK+6D,YAAcl6D,IAGjBrB,iBAAiB82D,iDACbT,EAAQkG,iBAAiB/7D,KAAK8J,KAAKxG,GAAItD,KAAK86D,WAAWx3D,GAAIgzD,GACjEt2D,KAAK86D,WAAWxE,SAAWA,IAGzB92D,0DACF,IACI+2D,SADYV,EAAQmG,gBAAgBh8D,KAAK8J,KAAKxG,GAAItD,KAAK86D,WAAWx3D,KAC/C8E,IAAIb,IACvB,IAAI00D,EAAM10D,EAAEjE,GACRk0B,EAAOx3B,KAAKu2D,MAAMjvD,KAAK0jB,GAAKA,EAAE1nB,KAAO24D,GACzC,OAAO5lD,EAAAhD,EAAEa,MAAMsjB,KAEnBx3B,KAAKg7D,YAAczE,IAGjB/2D,eAAew7D,iDACXnF,EAAQqG,mBAAmBl8D,KAAK8J,KAAKxG,GAAItD,KAAK86D,WAAWx3D,GAAI03D,EAAY5yD,IAAIb,GAAGA,EAAEjE,KACxFtD,KAAKu2D,MAAM97C,QAAQ+c,IACf,IAAIykC,EAAMzkC,EAAKl0B,GACX64D,EAAMn8D,KAAKg7D,YAAY1zD,KAAKC,GAAKA,EAAEjE,KAAO24D,GAC1ClhD,EAAMigD,EAAY1zD,KAAKC,GAAKA,EAAEjE,KAAO24D,GACzC,QAAY16D,IAAR46D,OAKQ56D,IAARwZ,GACJyc,EAAKkK,YANL,CACI,QAAYngC,IAARwZ,EAAmB,OACvByc,EAAKkK,WAMb1hC,KAAKg7D,YAAcA,KAlLXoB,EAAA,CAAX3yC,EAAA,8BACW2yC,EAAA,CAAX3yC,EAAA,qCACW2yC,EAAA,CAAX3yC,EAAA,8BACW2yC,EAAA,CAAX3yC,EAAA,8BACW2yC,EAAA,CAAX3yC,EAAA,+BACW2yC,EAAA,CAAX3yC,EAAA,kCACW2yC,EAAA,CAAX3yC,EAAA,oCACW2yC,EAAA,CAAX3yC,EAAA,qCACW2yC,EAAA,CAAX3yC,EAAA,qCA8KE,MAAM4yC,EAAQ,IAAI9B,2QCnMzB,IAAqB+B,EAArB,cAA2C5sD,EAAA,UAD3ClQ,kCAGYQ,KAAAi7B,OAAiB,CACrB,CAAC/6B,KAAK,OAAQ2H,KAAK,SAAUgjB,UAAS,GACtC,CAAC3qB,KAAK,SAAU2H,KAAK,WAEjB7H,KAAA6mD,SAAqB,CACzB7kD,MAAO,CACH2G,KAAM,CAAC89C,OAAO,OAAQn6B,UAAW,IAAK1J,YAAa,qBAAOxiB,MAAO,4BACjEipB,OAAQ,CAACo9B,OAAO,SAAUrmD,MAAO,kBAiCjCJ,KAAAu8D,iBAAmB,EAAOr8D,EAAa2iD,IAAqC2Z,EAAAx8D,UAAA,qBAChF,IAAIk2D,QAACA,EAAOC,QAAEA,GAAWn2D,KAAK0E,MAC1BiE,EAAOk6C,EAAQnhD,KAAK+R,KAAW,KAEnC,QAAYlS,WADI86D,EAAMvF,OAAO2F,OAAO9zD,EAAMutD,EAAQ,EAAE,EAAGC,EAAQ,EAAE,IAKjE,OAAOxtD,EAAO,uCAHV+Z,EAAA,IAAI3b,SAwBZvH,SACI,IAAI02D,QAACA,EAAOC,QAAEA,GAAWn2D,KAAK0E,MAC1B8kB,EAAU0sC,EAAS,eAAO,qBAC9B,OAAOxmD,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQ,eAAOmf,GACxB9Z,EAAA,qBAAKzH,UAAU,aACXyH,EAAA,qBAAKzH,UAAU,+GACKuhB,GAEpB9Z,EAAA,cAACgT,EAAA,KAAI,CAACuY,OAAQj7B,KAAKi7B,OAAQ4rB,SAAU7mD,KAAK6mD,SAAUN,cAAevmD,KAAKu8D,uBA/EnE,IAAAG,EAAAJ,uUAAaK,CAAA,CADjCrtD,EAAA,GACoBgtD,wQCGrB,IAAqBM,EAArB,cAAuCltD,EAAA,UAIrBlQ,SAASU,EAAa2iD,2CAChC,IAAIqT,QAACA,EAAOC,QAAEA,GAAWtT,EAAQnhD,KAAK+R,WAChC4oD,EAAMvF,OAAOK,aAAajB,EAASC,GACzCzzC,EAAA,IAAI3b,QAERvH,qBACI,IAAIsK,KAACA,GAAQuyD,GACTQ,OAACA,EAAM3G,QAAEA,EAAOC,QAAEA,GAAWrsD,EAG7ButD,GAFYgF,EAAMvF,OAAO/7C,IAEN,CAAC7a,KAAM,UAAW2H,KAAM,YAC3CwhB,EAAsB,CAACnpB,KAAM,SAAU2H,KAAM,UAClC,IAAXg1D,EAAc78D,KAAKi7B,OAAS,CAHT,CAAC/6B,KAAM,UAAW2H,KAAM,WAGPwvD,EAAOhuC,GAC1B,IAAZ6sC,IAAel2D,KAAKi7B,OAAS,CAACo8B,EAAOhuC,IAE9CrpB,KAAK6mD,SAAW,CACZ7kD,MAAO,CACHk0D,QAAW,CAACzP,OAAQ,WAAYrmD,MAAO,eAAMu5B,UAAU,EAAGC,WAAW,GACrEu8B,QAAW,CAAC1P,OAAQ,WAAYrmD,MAAO,qBAAOu5B,UAAU,EAAGC,WAAW,GACtEvQ,OAAU,CAACo9B,OAAQ,SAAUrmD,MAAO,kBA+BhDZ,SACI,OAAOkQ,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAO,gBAChBqF,EAAA,cAACotD,EAAMh9D,OAAAqI,OAAA,GAAKk0D,EAAMvF,OAAO/7C,MACzBrL,EAAA,cAACgT,EAAA,KAAI,CAACuY,OAAQj7B,KAAKi7B,OAAQ4rB,SAAU7mD,KAAK6mD,SAAUN,cAAevmD,KAAKQ,cAzD/D,IAAAu8D,EAAAH,uUAASI,CAAA,CAD7B1tD,EAAA,GACoBstD,GA8DrB,MAAME,EAAUp4D,IACZ,IAAIxE,KAACA,EAAI6mC,KAAEA,EAAI1mC,KAAEA,GAAQqE,EAEzB,OAAOgL,EAAA,qBAAKzH,UAAU,aAClByH,EAAA,qBAAKzH,UAAU,YACXyH,EAAA,qBAAKzH,UAAU,yDACXyH,EAAA,cAACgT,EAAA,MAAK,CAACza,UAAU,OAAOgG,IAAK5N,KAEjCqP,EAAA,qBAAKzH,UAAU,eACXyH,EAAA,oBAAIzH,UAAU,aAAa/H,GAC3BwP,EAAA,wBAAIA,EAAA,uBAAOzH,UAAU,kBAAkB8+B,IACvCr3B,EAAA,qBAAKzH,UAAU,aAAW,0CAGlCyH,EAAA,oBAAIzH,UAAU,oRC3EtB,IAAqBg1D,EAArB,cAA6CvtD,EAAA,UAD7ClQ,kCAaYQ,KAAA0xB,IAAM,GAAErxB,OAAMH,OAAM6mC,WACxB,IAAIxkC,EAOJ,OALIA,OADShB,IAATwlC,EACUr3B,EAAA,uBAAIxP,GAGJwP,EAAA,cAAAA,EAAA,cAAEA,EAAA,uBAAIq3B,YAAiBr3B,EAAA,uBAAOzH,UAAU,cAAc/H,IAE7DwP,EAAA,cAACiT,EAAA,IAAG,CAAC1a,UAAU,gCAClB0kB,KAAMjd,EAAA,cAACiT,EAAA,MAAK,CAACkB,KAAK,MAAKnU,EAAA,cAACgT,EAAA,MAAK,CAACza,UAAU,YAAYgG,IAAK5N,MACzDqP,EAAA,qBAAKzH,UAAU,QAAQ1F,MAIvBvC,KAAAk9D,WAAa,CAAC1pD,IAClBxT,KAAKm9D,SAAS3pD,GAAK,GAAM,KAGrBxT,KAAAo9D,WAAa,CAAC5pD,IAClBxT,KAAKm9D,SAAS3pD,GAAK,GAAO,KA9BxBhU,kEACI68D,EAAMvF,OAAOt7C,SAGvBhc,eAGAA,YAAYy3D,GACRoF,EAAMvF,OAAO/7C,IAAMk8C,EACnBv0C,EAAA,IAAIlc,KAAKkJ,EAAA,cAACqtD,EAAS,OAwBfv9D,SAASgU,EAA0C0iD,EAAiBC,GACxE3iD,EAAI6Z,iBACJ3K,EAAA,IAAIlc,KAAKkJ,EAAA,cAACgtD,EAAS,CAACxG,QAASA,EAASC,QAASA,KAEnD32D,SAGI,IAAIsK,KAACA,GAAQuyD,EACb,QAAa96D,IAATuI,EAAoB,OACxB,IAIIuzD,EAAYC,GAJZzG,OAACA,EAAMC,OAAEA,EAAMC,QAAEA,GAAWsF,EAAMvF,OAClCp7C,EAAQhM,EAAA,wBAAQzH,UAAU,yBAAyBwE,QAASzM,KAAKu9D,aAAW,4BAE5EC,GAAa,EAAOC,GAAa,EAOrC,GALoB,IAAhB3zD,EAAK+yD,SACLW,GAAa,EACbC,GAAa,GAEI,IAAjB3zD,EAAKosD,UAAeuH,GAAa,IAClB,IAAfD,EAAqB,CACrB,IAAInzD,EAASqF,EAAA,cAACiT,EAAA,IAAG,CACb1a,UAAU,aACV0kB,KAAK,eACLjR,MAAOhM,EAAA,mBAAGzH,UAAU,QAAQ0+B,KAAK,IAAIl6B,QAASzM,KAAKk9D,YAAU,kBACjEG,EAAa3tD,EAAA,cAACiT,EAAA,KAAI,CACd1a,UAAU,OACVoC,OAAQA,EAAQrI,MAAO60D,EACvB71D,KAAK,WACL8F,KAAM,CAAC2F,QAASzM,KAAKyyD,YAAanwC,OAAQtiB,KAAK0xB,OAGvD,IAAmB,IAAf+rC,EAAqB,CACrB,IAAIpzD,EAASqF,EAAA,cAACiT,EAAA,IAAG,CACb1a,UAAU,aACV0kB,KAAK,qBACLjR,MAAOhM,EAAA,mBAAGzH,UAAU,QAAQ0+B,KAAK,IAAIl6B,QAASzM,KAAKo9D,YAAU,kBACjEE,EAAa5tD,EAAA,cAACiT,EAAA,KAAI,CACd1a,UAAU,OACVoC,OAAQA,EAAQrI,MAAO80D,EACvB91D,KAAK,WACL8F,KAAM,CAAC2F,QAASzM,KAAKyyD,YAAanwC,OAAQtiB,KAAK0xB,OAGvD,OAAOhiB,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAO,qBAAMqR,MAAOA,GAC5B2hD,EACAC,EACD5tD,EAAA,qBAAKzH,UAAU,kBACXyH,EAAA,qBAAKzH,UAAU,cAAY,gBAC3ByH,EAAA,qBAAKzH,UAAU,aACXyH,EAAA,oBAAIpH,MAAO,CAACinB,YAAY,QACpB7f,EAAA,wBAAIA,EAAA,qBAAKzH,UAAU,aAAW,yFAC9ByH,EAAA,wBAAIA,EAAA,qBAAKzH,UAAU,aAAW,iEAC9ByH,EAAA,wBAAIA,EAAA,qBAAKzH,UAAU,aAAW,2DAC9ByH,EAAA,wBAAIA,EAAA,qBAAKzH,UAAU,aAAW,mIAvFjC,IAAAy1D,EAAAT,uUAAeU,CAAA,CADnCruD,EAAA,GACoB2tD,mBCFd,MAAMW,UAAgBluD,EAAA,UACzBlQ,SACI,IAAIq+D,UAACA,EAASC,YAAEA,GAAe99D,KAAK0E,MACpC,OAAOgL,EAAA,uBAAOzH,UAAU,2CACdyH,EAAA,cAACiT,EAAA,SAAQ,CAACxU,KAAM2vD,IACtBpuD,EAAA,mBAAGzH,UAAU,8BACTyH,EAAA,cAACiT,EAAA,SAAQ,CAACxU,KAAM0vD,MCXzB,SAASE,EACZC,EACA/1D,EACAwE,EACAlK,GAEA,IAAIkiD,EACA//C,EAeJ,OAde,IAAXs5D,GACAvZ,EAAM,IACN//C,EAAQ,CACJuD,UAAW4uB,EAAW5uB,EAAW,kBACjCwE,QAASA,EACTk6B,KAAM,OAIV8d,EAAM,OACN//C,EAAQ,CACJuD,UAAWA,IAGZyH,EAAA,cAAoB+0C,EAAK//C,EAAOnC,+UCX3C,IAAa07D,GAAb,cAA8BvuD,EAAA,UAD9BlQ,kCAEIQ,KAAAyM,QAAU,CAAC+G,IACPA,EAAI6Z,iBACJ3K,EAAA,IAAIlc,KAAKkJ,EAAA,cAACwuD,GAAQ,CAAC56D,GAAItD,KAAK0E,MAAMpB,OAC3B,IAEX9D,SACI,IAAI8D,GAACA,EAAE06D,OAAEA,EAAM/1D,UAAEA,GAAajI,KAAK0E,MACnC,QAAWnD,IAAP+B,EAAkB,OAAO,KAC7B,IACIf,EADAuH,EAAOuyD,EAAM7B,WAAWrxD,IAAI7F,IAE5BpD,KAACA,EAAI6mC,KAAEA,EAAIvG,YAAEA,GAAe12B,EAC5B+pC,EAAOrT,GAAe,KAAOA,EAUjC,OARIj+B,EADAwkC,EACUr3B,EAAA,cAAAA,EAAA,cAAGq3B,WAAar3B,EAAA,uBAAOzH,UAAU,cAAc/H,MAAO2zC,IAE3D3zC,EACKwP,EAAA,cAAAA,EAAA,cAAGxP,WAAawP,EAAA,uBAAOzH,UAAU,cAAc4rC,IAG/CvwC,EAEPy6D,EAAKC,EAAQ/1D,EAAWjI,KAAKyM,QAASlK,KAtBxC07D,GAAQE,EAAA,CADpB7uD,EAAA,GACY2uD,IA2Bb,IAAaG,GAAb,cAA8B1uD,EAAA,UAC1BlQ,SACI,IAAI8D,GAACA,EAAE06D,OAAEA,EAAM/1D,UAAEA,GAAajI,KAAK0E,MACnC,QAAWnD,IAAP+B,EAAkB,OAAO,KAC7B,IAAIwG,EAAOuyD,EAAM7B,WAAWrxD,IAAI7F,IAC5BpD,KAACA,GAAQ4J,EACb,OAAO4F,EAAA,cAAAA,EAAA,cAAGxP,KANLk+D,GAAQD,EAAA,CADpB7uD,EAAA,GACY8uD,IAUb,MAAMF,WAAiBxuD,EAAA,UAEnBlQ,YAAYkF,GACR7E,MAAM6E,GAEVlF,SACI,IAAIsK,EAAOuyD,EAAM7B,WAAWrxD,IAAInJ,KAAK0E,MAAMpB,KACvCpD,KAACA,EAAI6mC,KAAEA,EAAI1mC,KAAEA,EAAImgC,YAAEA,GAAe12B,EAMtC,OALA9J,KAAKyxB,KAAO,CACR,GACA,CAAC5pB,KAAM,YAAaqwB,UAAWxoB,EAAA,cAACiT,EAAA,MAAK,CAACtiB,KAAMA,EAAM8nC,KAAMjoC,EAAMsgC,YAAaA,KAC3E,IAEG9wB,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQ,2CACjBqF,EAAA,cAACiT,EAAA,SAAQ,CAAC8O,KAAMzxB,KAAKyxB,KAAMhxB,OAAQT,KAAK0E,UCjE7C,MAAM25D,GAAU,0CACVC,GAAc,uXCiB3B,IAAaC,GAAb,cAA4B7uD,EAAA,UAD5BlQ,kCAEIQ,KAAAyM,QAAU,CAAC+G,IACPA,EAAI6Z,iBACJ3K,EAAA,IAAIlc,KAAKkJ,EAAA,cAAC8uD,GAAM,CAACl7D,GAAItD,KAAK0E,MAAMpB,OACzB,IAEX9D,SACI,IAEI+C,GAFAe,GAACA,EAAE2E,UAAEA,EAAS+1D,OAAEA,GAAUh+D,KAAK0E,MAC/Bw5B,EAAMm+B,EAAM5B,SAAStxD,IAAI7F,GAE7B,GAAY,OAAR46B,EACA37B,EAAUe,MAET,CACD,IAAIpD,KAACA,EAAIsgC,YAAEA,GAAetC,EACtB2V,EAAOrT,GAAe,KAAOA,EAE7Bj+B,OADShB,IAATrB,EACUwP,EAAA,cAACA,EAAA,SAAc,KAAExP,WAAawP,EAAA,uBAAOzH,UAAU,cAAc4rC,IAG7DvwC,EAGlB,OAAOy6D,EAAKC,EAAQ/1D,EAAWjI,KAAKyM,QAASlK,KAvBxCg8D,GAAME,GAAA,CADlBnvD,EAAA,GACYivD,IA4Bb,IAAMC,GAAN,cAAqB9uD,EAAA,UAEjBlQ,YAAYkF,GACR7E,MAAM6E,GAEVlF,SACI,IAAIoT,EAAKypD,EAAM5B,SAAStxD,IAAInJ,KAAK0E,MAAMpB,KACnCpD,KAACA,EAAIsgC,YAAEA,EAAW12B,KAAEA,EAAI+zD,UAAEA,EAASC,YAAEA,GAAelrD,EACpDqsC,EAAOvvC,EAAA,yBACPA,EAAA,yBAAM8wB,GACN9wB,EAAA,cAACkuD,EAAO,CAACE,YAAaA,EAAaD,UAAWA,KAQlD,OANA79D,KAAKyxB,KAAO,CACR,GACA,CAAC5pB,KAAM,YAAaqwB,UAAWxoB,EAAA,cAACiT,EAAA,MAAK,CAACtiB,KAAMg+D,GAASl2B,KAAMjoC,EAAMsgC,YAAaye,KAC9E,GACA,CAACp3C,KAAM,YAAazH,MAAO,qBAAO83B,UAAWxoB,EAAA,qBAAKzH,UAAU,QAAOyH,EAAA,cAACuuD,GAAQ,CAAC36D,GAAIwG,EAAMk0D,QAAQ,OAE5FtuD,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQ,iCACjBqF,EAAA,cAACiT,EAAA,SAAQ,CAAC8O,KAAMzxB,KAAKyxB,KAAMhxB,OAAQT,KAAK0E,WAnB9C85D,GAAMC,GAAA,CADXnvD,EAAA,GACKkvD,ulBC5BN,IAAaE,GAAb,cAA6BhvD,EAAA,UAD7BlQ,kCAYIQ,KAAAyM,QAAU,CAAC+G,IACPA,EAAI6Z,iBACJ3K,EAAA,IAAIlc,KAAKkJ,EAAA,cAACivD,GAAO,CAACr7D,GAAItD,KAAK0E,MAAMpB,OAC1B,IAEX9D,SACI,IAEI+C,GAFAe,GAACA,EAAE06D,OAAEA,EAAM/1D,UAAEA,GAAajI,KAAK0E,MAC/Bi8B,EAAM07B,EAAM3B,UAAUvxD,IAAI7F,GAE9B,GAAY,OAARq9B,EACAp+B,EAAUe,MAET,CACD,IAAIpD,KAACA,EAAIG,KAAEA,EAAImgC,YAAEA,GAAeG,EAE5BkT,GADWlT,EAAIi+B,OACRp+B,GAAe,KAAOA,GAE7Bj+B,OADShB,IAATrB,EACUwP,EAAA,cAACA,EAAA,SAAc,KAAExP,WAAawP,EAAA,uBAAOzH,UAAU,cAAc4rC,IAG7DvwC,EAGlB,OAAOy6D,EAAKC,EAAQ/1D,EAAWjI,KAAKyM,QAASlK,KAlCxCm8D,GAAOG,GAAA,CADnBvvD,EAAA,GACYovD,IAwCb,IAAMC,GAAN,cAAsBjvD,EAAA,UAKlBlQ,YAAYkF,GACR7E,MAAM6E,GAJU1E,KAAA8+D,KAAgB,CAChC1+D,MAAO,kBAASyH,KAAM,OAAQwmB,UAAM9sB,EAAWmwB,IAAKqtC,IAKlDv/D,6DACFQ,KAAK8+D,KAAKzwC,WAAamoC,EAAOrkD,WAAWnS,KAAK0E,MAAMpB,MAExD9D,SACI,IAAImhC,EAAM07B,EAAM3B,UAAUvxD,IAAInJ,KAAK0E,MAAMpB,KACrCwG,KAACA,EAAI5J,KAAEA,EAAIsgC,YAAEA,EAAWngC,KAAEA,EAAIw9D,UAAEA,EAASC,YAAEA,GAAen9B,EAC1Dse,EAAOvvC,EAAA,yBACPA,EAAA,yBAAM8wB,GACN9wB,EAAA,cAACkuD,EAAO,CAACE,YAAaA,EAAaD,UAAWA,KASlD,OAPA79D,KAAKyxB,KAAO,CACR,GACA,CAAC5pB,KAAM,YAAaqwB,UAAWxoB,EAAA,cAACiT,EAAA,MAAK,CAACtiB,KAAMA,EAAM8nC,KAAMjoC,EAAMsgC,YAAaye,KAC3E,GACA,CAACp3C,KAAM,YAAazH,MAAO,qBAAO83B,UAAWxoB,EAAA,qBAAKzH,UAAU,QAAOyH,EAAA,cAACuuD,GAAQ,CAAC36D,GAAIwG,EAAMk0D,QAAQ,MAC/Fh+D,KAAK8+D,MAEFpvD,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQ,kCACjBqF,EAAA,cAACiT,EAAA,SAAQ,CAAC8O,KAAMzxB,KAAKyxB,KAAMhxB,OAAQT,KAAK0E,WAxBpCm6D,GAAA,CAAXp1C,EAAA,+BAFCk1C,GAAOE,GAAA,CADZvvD,EAAA,GACKqvD,IA+BN,MAAMI,WAAervD,EAAA,UACjBlQ,SACI,IACIy/C,GADA/+C,KAACA,EAAIsgC,YAAEA,GAAexgC,KAAK0E,MAG/B,OADI87B,IAAaye,EAAOvvC,EAAA,qBAAKzH,UAAU,oBAAoBu4B,IACpD9wB,EAAA,qBAAKzH,UAAU,0BAClByH,EAAA,yBAAMxP,GACL++C,IC5Eb,IAAa+f,GAAb,cAAgCtvD,EAAA,UADhClQ,kCAYIQ,KAAAyM,QAAU,CAAC+G,IACPA,EAAI6Z,iBACJ3K,EAAA,IAAIlc,KAAKkJ,EAAA,cAACuvD,GAAU,CAAC37D,GAAItD,KAAK0E,MAAMpB,OAC7B,IAEX9D,SACI,IAEI+C,GAFAe,GAACA,EAAE06D,OAAEA,EAAM/1D,UAAEA,GAAajI,KAAK0E,MAC/B00D,EAASiD,EAAM1B,aAAaxxD,IAAI7F,GAEpC,GAAe,OAAX81D,EACA72D,EAAUe,MAET,CACD,IAAI47D,MAACA,EAAKC,GAAEA,EAAE3+B,YAAEA,GAAe44B,EAE3B72D,OADgBhB,IAAhBi/B,EACU9wB,EAAA,cAACA,EAAA,SAAc,KAAE8wB,WAAoB9wB,EAAA,uBAAOzH,UAAU,cAAck3D,IAGpE77D,EAGlB,OAAOy6D,EAAKC,EAAQ/1D,EAAWjI,KAAKyM,QAASlK,KAhCxCy8D,wUAAUI,CAAA,CADtB9vD,EAAA,GACY0vD,IAoCb,MAAMC,WAAmBvvD,EAAA,UAErBlQ,YAAYkF,GACR7E,MAAM6E,GAEVlF,SACI,IAAI45D,EAASiD,EAAM1B,aAAaxxD,IAAInJ,KAAK0E,MAAMpB,KAC3Ck9B,YAACA,EAAW0+B,MAAEA,EAAKC,GAAEA,EAAEr1D,KAAEA,EAAI+zD,UAAEA,EAASC,YAAEA,GAAe1E,EAClD1pD,EAAA,yBACPA,EAAA,yBAAM8wB,GACN9wB,EAAA,cAACkuD,EAAO,CAACE,YAAaA,EAAaD,UAAWA,KASlD,OAPA79D,KAAKyxB,KAAO,CACR,GACA,CAAC5pB,KAAM,YAAaqwB,UAAWxoB,EAAA,cAACiT,EAAA,MAAK,CAACtiB,KAAMg+D,GAASl2B,KAAM3H,EAAaA,YAAa2+B,KACrF,GACA,CAACt3D,KAAM,YAAazH,MAAO,qBAAO83B,UAAWxoB,EAAA,qBAAKzH,UAAU,QAAOyH,EAAA,cAACuuD,GAAQ,CAAC36D,GAAIwG,EAAMk0D,QAAQ,MAC/F,CAACn2D,KAAM,SAAUzH,MAAO,qBAAOF,KAAM,UAElCwP,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQ,iDACjBqF,EAAA,cAACiT,EAAA,SAAQ,CAAC8O,KAAMzxB,KAAKyxB,KAAMhxB,OAAQT,KAAK0E,oRC7D7C,MAAM26D,WAAwB3vD,EAAA,UAGjClQ,YAAYkF,GACR7E,MAAM6E,GAWF1E,KAAA8rB,SAAW,CAACtY,IAChB,IAAItD,EAAMlQ,KAAK0E,MAAMwK,MACjBitD,EAAMjsD,GAAOA,EAAI2Z,OACrB7pB,KAAKkP,MAAQsE,EAAIuY,cAAc7c,MAAM2a,OACrC7pB,KAAK8E,SAAS,CACVykB,SAAU4yC,IAAQn8D,KAAKkP,UAIrBlP,KAAAQ,SAAW,KAAY8+D,GAAAt/D,UAAA,qBAC7B,IAAIkQ,EAAMlQ,KAAK0E,MAAMwK,MACjBitD,EAAMjsD,GAAOA,EAAI2Z,OACjBtiB,EAAIvH,KAAKkP,MACT80C,EAAYhkD,KAAK0E,MAAMs/C,UAC3B,QAAkBziD,IAAdyiD,EAAyB,CACzB,IAAInjD,QAAYmjD,EAAUz8C,EAAG40D,GAC7B,GAAmB,kBAARt7D,EAEP,YADAb,KAAK8E,SAAS,CAACoB,MAAOrF,IAG1B6hB,EAAA,IAAI3b,UA9BR/G,KAAKoF,MAAQ,CACTmkB,UAAU,GAgCR/pB,gBACN,OAAOkQ,EAAA,uBAAOzH,UAAU,qBAAqBJ,KAAK,OAE9C6tB,aAAc11B,KAAK0E,MAAMwK,MACzB4c,SAAU9rB,KAAK8rB,WAEvBtsB,SACI,IASI+/D,GATA1jD,MAACA,EAAKmoC,UAAEA,EAASvE,WAAEA,EAAU+f,KAAEA,EAAItwD,MAAEA,GAASlP,KAAK0E,OACnD6kB,SAACA,EAAQrjB,MAAEA,GAASlG,KAAKoF,MACzBsW,EAAQhM,EAAA,wBACRzH,UAAU,yBACVshB,SAAUA,EACV9c,QAASzM,KAAKQ,UAEbi/C,GAAY,gBAIjB,YADcl+C,IAAV2E,IAAqBq5D,EAAW7vD,EAAA,qBAAKzH,UAAU,eAAe/B,IAC3DwJ,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQwR,EAAOH,MAAOA,GAC/BhM,EAAA,qBAAKzH,UAAU,aACVjI,KAAKg1B,gBACLuqC,EACD7vD,EAAA,uBAAOzH,UAAU,2BAA2Bu3D,MAMrD,MAAMC,WAAsBJ,GAAnC7/D,kCASYQ,KAAA0/D,iBAAmB,CAAClsD,IACxB,IAAItD,EAAMlQ,KAAK0E,MAAMwK,MACjBitD,EAAMjsD,GAAOA,EAAI2Z,OACrB7pB,KAAKkP,MAAQsE,EAAIuY,cAAc7c,MAAM2a,OACrC7pB,KAAK8E,SAAS,CACVykB,SAAU4yC,IAAQn8D,KAAKkP,UAGrB1P,gBACN,OAAOkQ,EAAA,0BAAUzH,UAAU,qBAAqBwpB,KAAM,EAElDiE,aAAc11B,KAAK0E,MAAMwK,MACzB4c,SAAU9rB,KAAK0/D,umBCpF3B,IAAaC,GAAb,cAAgCjwD,EAAA,UADhClQ,kCAUYQ,KAAAk0D,UAAY,CAACptD,IACjB,IAAI8G,QAACA,EAAOrK,WAAEA,GAAcvD,KAAK0E,MACjCkJ,EAAQrK,EAAWuD,IACnB4b,EAAA,IAAI3b,QAGA/G,KAAAmiB,SAAW,CAAOxb,GAA8Bi5D,GAAA5/D,UAAA,qBACpD,IAAI6/D,eAACA,EAAcnoD,OAAEA,GAAU1X,KAAK0E,MACpC,GAA8B,oBAAnBm7D,EAA+B,CACtC,IAAIh/D,QAAYg/D,EAAenoD,EAAQ/Q,GACvC3G,KAAKgC,MAAQnB,MAhBfrB,6DACF,IAAIqgE,eAACA,EAAcnoD,OAAEA,GAAU1X,KAAK0E,MACpC1E,KAAKgC,MAAQwzB,MAAMC,QAAQoqC,GACvBA,QACQA,EAAenoD,EAAQ,MAgBvClY,SACI,IAAIgqB,QAACA,EAAOkI,IAAEA,EAAGouC,kBAAEA,GAAqB9/D,KAAK0E,MAC7C,OAAOgL,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQmf,EAASxkB,KAAK,SAC/B0K,EAAA,qBAAKzH,UAAU,aACXyH,EAAA,cAACiT,EAAA,UAAS,CAAC1a,UAAU,OACjBka,SAAUniB,KAAKmiB,SACfS,YAAak9C,EACbxzC,UAAW,OAEnB5c,EAAA,cAACiT,EAAA,KAAI,CAAC3gB,MAAOhC,KAAKgC,MAAO8E,KAAM,CAAC2F,QAAQzM,KAAKk0D,UAAW5xC,OAAOoP,QA/B3DquC,GAAA,CAAXt2C,EAAA,gCADQk2C,GAAUI,GAAA,CADtBzwD,EAAA,GACYqwD,ulBCLb,IAAaK,GAAb,cAA0BtwD,EAAA,UAD1BlQ,kCAOYQ,KAAAigE,YAAc,EAACC,EAAc73D,KACjC,IAAInI,KAACA,EAAIyX,MAAEA,EAAK7N,KAAEA,EAAI02B,YAAEA,GAAe0/B,EACvC,OAAOxwD,EAAA,cAACiT,EAAA,IAAG,CAAC1a,UAAU,OAAOyT,MAAOhM,EAAA,uBAAOzH,UAAU,cAAcu4B,IAC9D7oB,QAAUzX,KAIXF,KAAAmgE,IAAM,KAAYC,GAAApgE,UAAA,qBACtB,IAAI2gC,IAACA,EAAG0/B,SAAEA,GAAYrgE,KAAK0E,OACvBpB,GAACA,EAAEwG,KAAEA,EAAIyxD,OAAEA,GAAU56B,EACrB2/B,EAAmB,EACvB,GAAe,IAAX/E,EAAc,QACEc,EAAMkE,eAAej9D,KAC1B,GAAGsiB,MAAM,6DAEnB,GAAe,IAAX21C,QACCc,EAAMmE,YAAYl9D,GACxBg9D,EAAY,MAEX,CACD,IAAIG,EAAiBpqD,EAAAhD,EAAEa,MAAMysB,GAC7B8/B,EAAOn9D,GAAKA,EACZm9D,EAAOlF,OAAS,SACAc,EAAMqE,WAAWD,KACtB,GAAG76C,MAAM,6DAEPrkB,IAAb8+D,GACAA,EAAS/8D,EAAIg9D,GAEjB59C,EAAA,IAAI3b,SAjCFvH,8DACFQ,KAAK2gE,iBAAmBnK,EAAOrkD,WAAWnS,KAAK0E,MAAMi8B,IAAIr9B,MAkC7D9D,SACI,IAKIohE,EAAer/C,EAAakL,GAL5B3iB,KAACA,EAAI5J,KAAEA,EAAIsgC,YAAEA,EAAWngC,KAAEA,EAAIk7D,OAAEA,EAAMsC,UAAEA,EAASC,YAAEA,GAAe99D,KAAK0E,MAAMi8B,IAC7Ese,EAAOvvC,EAAA,yBACPA,EAAA,yBAAM8wB,GACN9wB,EAAA,cAACkuD,EAAO,CAACE,YAAaA,EAAaD,UAAWA,KAGnC,IAAXtC,GACAqF,EAAS,MACTr/C,EAAO,kBACPkL,EAAQ,cAEQ,IAAX8uC,GACLqF,EAAS,UACTr/C,EAAO,kBACPkL,EAAQ,gBAGRm0C,EAAS,OACTr/C,EAAO,kBACPkL,EAAQ,eAEZ,IAAIgF,EAAc,CACd,GACA,CACI5pB,KAAM,YACNqwB,UAAWxoB,EAAA,cAACiT,EAAA,MAAK,CAACtiB,KAAMA,EAAM8nC,KAAMjoC,EAAMsgC,YAAaye,KAE3D,GACA,CACIp3C,KAAM,YACNzH,MAAO,qBACP83B,UAAWxoB,EAAA,qBAAKzH,UAAU,QAAOyH,EAAA,cAACuuD,GAAQ,CAAC36D,GAAIwG,EAAMk0D,QAAQ,MAEjE,CACIn2D,KAAM,YACNzH,MAAO,iBACP83B,UAAWxoB,EAAA,cAACiT,EAAA,KAAI,CAAC1a,UAAU,QAAQjG,MAAOhC,KAAK2gE,WAAY75D,KAAM,CAACwb,OAAQtiB,KAAKigE,gBAEnF,GACA,GACA,CACIp4D,KAAM,YACNgpD,GAAI,GACJ34B,UAAWxoB,EAAA,wBAAQzH,UAAW4U,IAAW,MAAO,QAAS4P,GAAQhgB,QAASzM,KAAKmgE,KAC3EzwD,EAAA,cAACiT,EAAA,GAAE,CAACziB,KAAM0gE,EAAQ/8C,KAAK,WAAStC,KAI5C,OAAO7R,EAAA,yBACHA,EAAA,cAACiT,EAAA,SAAQ,CAAC8O,KAAMA,EAAMhxB,OAAQT,KAAK0E,WAtF/Bm8D,GAAA,CAAXp3C,EAAA,qCADQu2C,GAAIa,GAAA,CADhBvxD,EAAA,GACY0wD,8QCHb,MAAMc,WAAiBp+C,EAAA,UAEnBljB,YAAY0K,GACRrK,QACAG,KAAKkK,OAASA,EAEF1K,gDACZ,aAAaq2D,EAAQmE,UAAUh6D,KAAKkK,OAAQlK,KAAK+C,MAAO/C,KAAK4X,UAAW5X,KAAK6X,YAEvErY,aAAasH,GAEf9G,KAAK4X,eADIrW,IAATuF,EACiB,EAEAA,EAAKxD,IAKlC,IAAay9D,GAAb,cAA4BrxD,EAAA,UAExBlQ,YAAYkF,GACR7E,MAAM6E,GAGF1E,KAAAmiB,SAAW,CAAOxb,GAAeq6D,GAAAhhE,UAAA,2BAC/BA,KAAKo2D,KAAKpvC,MAAMrgB,MAElB3G,KAAAihE,SAAW,CAACtgC,IAChBje,EAAA,IAAIlc,KAAKkJ,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAO,+BAClBqF,EAAA,cAACswD,GAAI,CAACr/B,IAAKA,EAAK0/B,SAAUrgE,KAAKqgE,eAG/BrgE,KAAAqgE,SAAW,EAAC5/B,EAAc86B,KAC9B,IAAInF,EAAOp2D,KAAKo2D,KAAKp0D,MACjB2+B,EAAMy1B,EAAK9uD,KAAKC,GAAKA,EAAEjE,KAAOm9B,GAClCE,EAAI46B,OAASA,EACbnF,EAAKlpD,QAAQ,CAACyzB,MAdd3gC,KAAKo2D,KAAO,IAAI0K,GAASzE,EAAMvyD,KAAKxG,IAgBhC9D,UAAUmhC,GACd,IACIjlB,GADAxb,KAACA,EAAIsgC,YAAEA,EAAWngC,KAAEA,EAAIk7D,OAAEA,GAAU56B,EAMxC,OAJe,IAAX46B,EACA7/C,EAAQhM,EAAA,iDACQ,IAAX6rD,IACL7/C,EAAQhM,EAAA,kDACLA,EAAA,cAACiT,EAAA,IAAG,CAAC1a,UAAU,YAClB0kB,KAAMjd,EAAA,cAACiT,EAAA,MAAK,KAACjT,EAAA,cAACgT,EAAA,MAAK,CAACzU,IAAK5N,KACzBqb,MAAOA,GACPhM,EAAA,qBAAKzH,UAAU,QACXyH,EAAA,yBAAMxP,GACNwP,EAAA,uBAAOzH,UAAU,cAAcu4B,KAI3ChhC,SACI,IAAIwC,EAAQhC,KAAKo2D,KAAKp0D,MAClBoa,EAAS1M,EAAA,cAACiT,EAAA,UAAS,CAACR,SAAUniB,KAAKmiB,SACnCla,UAAU,aACV2a,YAAY,kBACZ0J,UAAW,MACf,OAAO5c,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQ+R,GACjB1M,EAAA,cAACiT,EAAA,KAAI,CACD3gB,MAAOA,EACP8E,KAAM,CAAC2F,QAAQzM,KAAKihE,SAAU3+C,OAAOtiB,KAAKkhE,WAC1C18C,OAAO,mCA9CVu8C,wUAAMI,CAAA,CADlB7xD,EAAA,GACYyxD,8QClBb,IAAqBK,GAArB,cAAsC1xD,EAAA,UAC5BlQ,mEACI68D,EAAMgF,aAER7hE,WAAWmhC,EAAat4B,GAC5B,IACIi5D,GADAphE,KAACA,EAAIsgC,YAAEA,EAAWngC,KAAEA,EAAIk7D,OAAEA,GAAU56B,EAIxC,OAFe,IAAX46B,IACA+F,EAAM5xD,EAAA,cAACiT,EAAA,GAAE,CAAC1a,UAAU,cAAc/H,KAAK,SACpCwP,EAAA,cAACiT,EAAA,IAAG,CAAC1a,UAAU,YAClB0kB,KAAMjd,EAAA,cAACiT,EAAA,MAAK,KAACjT,EAAA,cAACgT,EAAA,MAAK,CAACzU,IAAK5N,KACzBqb,MAAO4lD,GACP5xD,EAAA,qBAAKzH,UAAU,QACXyH,EAAA,yBAAMxP,GACNwP,EAAA,uBAAOzH,UAAU,cAAcu4B,KAInChhC,SAASmhC,GACbje,EAAA,IAAIlc,KAAKkJ,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAO,+BAClBqF,EAAA,cAACswD,GAAI,CAACr/B,IAAKA,MAGXnhC,UACJkjB,EAAA,IAAIlc,KAAKkJ,EAAA,cAACqxD,GAAMjhE,OAAAqI,OAAA,GAAKnI,KAAK0E,SAE9BlF,SACI,IAAIkc,EAAQhM,EAAA,wBACRzH,UAAU,2BACVwE,QAAS,IAAIzM,KAAKi6C,WAAWvqC,EAAA,cAACiT,EAAA,GAAE,CAACziB,KAAK,UAC1C,OAAOwP,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAO,kBAAQqR,MAAOA,GAC/BhM,EAAA,cAACiT,EAAA,KAAI,CAAC3gB,MAAOq6D,EAAMjG,KAAMtvD,KAAM,CAACwb,OAAQtiB,KAAK03C,WAAYjrC,QAASzM,KAAKihE,eA/B9D,IAAAM,GAAAH,wUAAQI,CAAA,CAD5BlyD,EAAA,GACoB8xD,0QCJd,MAAMK,WAAgB/xD,EAAA,UAA7BlQ,kCAEYQ,KAAAyqC,SAAqB,CACzB,CACIrqC,MAAO,eACP8B,MAAO,CAAChC,KAAM,OAAQ2H,KAAM,SAAUykB,UAAW,GAAIzB,UAAU,IAEnE,CACIzqB,MAAO,eACP8B,MAAO,CAAChC,KAAM,cAAe2H,KAAM,SAAUykB,UAAW,KACxD+I,KAAM,CAACxtB,KAAM,cAGPrI,SAASiB,4CACnB,IAAIP,KAACA,EAAIsgC,YAAEA,GAAe//B,SACX47D,EAAMX,YAAYx7D,EAAMsgC,KAC7B,EACNxgC,KAAK0B,KAAKqzB,SAAStR,SAAS,OAAQ,sBAASvjB,EAAO,6BAGxDwiB,EAAA,IAAI3b,QAGRvH,SACI,OAAOkQ,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAO,4BAChBqF,EAAA,cAACiT,EAAA,UAAS,CAAC1a,UAAU,MAAMujB,IAAKk2C,GAAM1hE,KAAK0B,KAAOggE,EAC9Cj3B,SAAUzqC,KAAKyqC,SACfjqC,SAAUR,KAAKQ,uRCjBxB,MAAMmhE,WAAiBjyD,EAAA,UAC1BlQ,YAAYkF,GACR7E,MAAM6E,GACN1E,KAAKoF,MAAQ,CAACgxD,UAAK70D,GAEjB/B,6DACF,IAAIqB,QAAYg1D,EAAQ+F,aAAaS,EAAMvyD,KAAKxG,GAAItD,KAAK0E,MAAM8yB,KAAKl0B,IACpEtD,KAAK8E,SAAS,CACVsxD,KAAMv1D,MAGNrB,cAAcmhC,EAAat4B,GAC/B,OAAOqH,EAAA,cAACiT,EAAA,IAAG,CAAC1a,UAAU,+BACd0kB,KAAMgU,EAAIzgC,KACVwb,MAAOhM,EAAA,uBAAOzH,UAAU,cAAc04B,EAAIH,eAEtDhhC,SACI,IAAIg4B,KAACA,GAAQx3B,KAAK0E,MAClB,OAAOgL,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQmtB,EAAKt3B,KAAO,sBAC7BwP,EAAA,cAACiT,EAAA,KAAI,CACD3gB,MAAOhC,KAAKoF,MAAMgxD,KAClBtvD,KAAM,CAACwb,OAAQtiB,KAAK4hE,eACpB5gE,KAAK,ymBC3BrB,IAAa6gE,GAAb,cAAgCnyD,EAAA,UADhClQ,kCASYQ,KAAA8hE,iBAAmB,CAACtqC,IACxB,IAAIt3B,KAACA,EAAIsgC,YAAEA,GAAehJ,EAC1B,OAAO9nB,EAAA,cAACiT,EAAA,IAAG,CAAC1a,UAAU,+BACd0kB,KAAMzsB,EACNwb,MAAOhM,EAAA,cAACiT,EAAA,MAAK,KAAE6d,OAKnBxgC,KAAA+hE,QAAU,MACdr/C,EAAA,IAAIlc,KAAKkJ,EAAA,cAACsyD,GAAO,SAjBfxiE,mEACI68D,EAAM4F,kBACN5F,EAAM6F,oBAEV1iE,WAAW0P,EAAWizD,kDAClB9F,EAAMN,iBAAiB7sD,KAQzB1P,UAAUg4B,GACd9U,EAAA,IAAIlc,KAAKkJ,EAAA,cAACiyD,GAAQ,CAACnqC,KAAMA,KAK7Bh4B,SACI,IAAI4iE,EAAW/F,EAAMvB,YACjB/zB,KAACA,EAAI7mC,KAAEA,EAAIo2D,SAAEA,EAAQj2D,KAAEA,GAAQ+hE,EAC/BnjB,EAAOvvC,EAAA,yBACPA,EAAA,yBAAKA,EAAA,cAACiT,EAAA,MAAK,sCAAuBziB,GAClCwP,EAAA,yBAAKA,EAAA,cAACiT,EAAA,MAAK,gCAAsBokB,GAAMr3B,EAAA,cAACiT,EAAA,MAAK,mBAE7C8O,EAAc,CACd,GACA,CACI5pB,KAAM,YACNqwB,UAAWxoB,EAAA,cAACiT,EAAA,MAAK,CAACtiB,KAAMA,GAAMg+D,GAASl2B,KAAMi6B,EAAS9L,UAAUvvB,GAAM7mC,EAAMsgC,YAAaye,KAE7F,GACA,CACI7+C,MAAO,qBACPyH,KAAM,SACN3H,KAAM,WACNuM,QAAS,IAAIiW,EAAA,IAAIlc,KAAKkJ,EAAA,cAAC2vD,GAAe,CAClCxjD,MAAM,iCACN3M,MAAOkzD,EAAS9L,SAChBtS,UAAWhkD,KAAKqiE,WAChB7C,KAAK,+EAEb,IAEA9jD,EAAQhM,EAAA,wBAAQzH,UAAU,yBAAyBwE,QAASzM,KAAK+hE,SAAO,4BAC5E,OAAOryD,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAO,2BAAOqR,MAAOA,GAC9BhM,EAAA,cAACiT,EAAA,SAAQ,CAAC8O,KAAMA,EAAMhxB,OAAQ2hE,IAC9B1yD,EAAA,qBAAKzH,UAAU,aAAYyH,EAAA,2BAAOA,EAAA,cAACiT,EAAA,GAAE,CAACziB,KAAK,qDAC3CwP,EAAA,cAACiT,EAAA,KAAI,CACD3gB,MAAOq6D,EAAMrB,YACbl0D,KAAM,CAACwb,OAAQtiB,KAAK8hE,iBAAkBr1D,QAASzM,KAAKsiE,gBApDvDT,GAAUU,GAAA,CADtBjzD,EAAA,GACYuyD,IA0Db,IAAMG,GAAN,cAAsBtyD,EAAA,UAElBlQ,YAAYkF,GACR7E,MAAM6E,GACN1E,KAAKqpB,OAASrpB,KAAKqpB,OAAOpkB,KAAKjF,MAE7BR,mEACI68D,EAAM4F,kBACN5F,EAAM6F,oBAER1iE,WAAWg4B,EAAWnvB,GAC1B,OAAOqH,EAAA,cAACiT,EAAA,IAAG,CAAC1a,UAAU,+BACd0kB,KAAM6K,EAAKt3B,KACXwb,MAAOhM,EAAA,uBAAOzH,UAAU,cAAcuvB,EAAKgJ,eAE/ChhC,WAAWg4B,EAAWpc,EAAqBg0C,IAErC5vD,wDACJ68D,EAAMmG,eAAexiE,KAAKquB,KAAKmgC,eACrC9rC,EAAA,IAAI3b,QAERvH,SACI,IAAIkc,EAAQhM,EAAA,wBAAQzH,UAAU,yBAAyBwE,QAASzM,KAAKqpB,QAAM,gBACvEktC,EAAQ8F,EAAM9F,MACdyE,EAAcqB,EAAMrB,YACxB,OAAOtrD,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAO,2BAAOqR,MAAOA,GAC9BhM,EAAA,cAACiT,EAAA,KAAI,CACD6I,IAAK6C,GAAMruB,KAAKquB,KAAKA,EACrBrsB,MAAOu0D,EACP/H,cAAewM,EACflM,QAAS,CAACt3B,EAAWirC,IAAkBjrC,EAAKl0B,KAAOm/D,EAAWn/D,GAC9DwD,KAAM,CAACwb,OAAQtiB,KAAK0iE,WAAYrT,SAAUrvD,KAAK2iE,iBA/BzDX,GAAOO,GAAA,CADZjzD,EAAA,GACK0yD,8QC3DN,IAAaY,GAAb,cAAiClzD,EAAA,UACvBlQ,mEACI68D,EAAMwG,gBAERrjE,aAAa62D,EAAmBhuD,GACpC,OAAOqH,EAAA,cAACozD,GAAShjE,OAAAqI,OAAA,GAAKkuD,IAElB72D,UAAUmJ,GACd0zD,EAAM0G,YAAYp6D,GAClB+Z,EAAA,IAAIlc,KAAKkJ,EAAA,cAACmyD,GAAU,OAEhBriE,WACJ,IAAIg4B,EAAO6kC,EAAM7kC,KACbwrC,OAAkBzhE,IAATi2B,EAAoB,EAAEA,EAAKl0B,GACxCof,EAAA,IAAIlc,KAAKkJ,EAAA,cAACuzD,GAAY,CAACD,OAAQA,KAEnCxjE,SACI,IAAIkc,EAAQhM,EAAA,wBAAQzH,UAAU,aAAawE,QAASzM,KAAKmiB,UAAUzS,EAAA,cAACiT,EAAA,GAAE,CAACziB,KAAK,YAC5E,OAAOwP,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAO,eAAKqR,MAAOA,GAC5BhM,EAAA,cAACiT,EAAA,KAAI,CAAC3gB,MAAOq6D,EAAMtB,YAAaj0D,KAAM,CAACwb,OAAQtiB,KAAKkjE,aAAcz2D,QAASzM,KAAKmjE,gBAnB/EP,wUAAWQ,CAAA,CADvB9zD,EAAA,GACYszD,IAwBb,MAAME,GAAazM,IACf,IACI9zD,GADAwkC,KAACA,EAAI7mC,KAAEA,EAAIo2D,SAAEA,EAAQj2D,KAAEA,GAAQg2D,EAQnC,OALI9zD,EADA+zD,EACU5mD,EAAA,cAAAA,EAAA,cAAEA,EAAA,yBAAKA,EAAA,uBAAI4mD,OAAc5mD,EAAA,cAACiT,EAAA,MAAK,KAAEokB,IAAmBr3B,EAAA,cAACiT,EAAA,MAAK,KAAEziB,IACjE6mC,EACKr3B,EAAA,cAAAA,EAAA,cAAEA,EAAA,yBAAKA,EAAA,uBAAIq3B,IAAer3B,EAAA,cAACiT,EAAA,MAAK,KAAEziB,IAElCwP,EAAA,yBAAKA,EAAA,uBAAIxP,IAChBwP,EAAA,cAACiT,EAAA,IAAG,CAAC1a,UAAU,gCAClB0kB,KAAMjd,EAAA,cAACiT,EAAA,MAAK,CAACkB,KAAK,MAAKnU,EAAA,cAACgT,EAAA,MAAK,CAACzU,IAAK5N,MACnCqP,EAAA,qBAAKzH,UAAU,QAAQ1F,KAUxB,MAAM0gE,WAAqBvzD,EAAA,UAC9BlQ,YAAYkF,GACR7E,MAAM6E,GACN1E,KAAKmiB,SAAWniB,KAAKmiB,SAASld,KAAKjF,MACnCA,KAAKoF,MAAQ,CACTi+D,QAAS,MAGH7jE,SAASmH,4CACnB,IAAI9F,QAAYg1D,EAAQiG,YAAYO,EAAMvyD,KAAKxG,GAAItD,KAAK0E,MAAMs+D,OAAQr8D,EAAK,EAAG,KAC9E3G,KAAK8E,SAAS,CAACu+D,QAASxiE,MAEpBrB,aAAa62D,EAAmBhuD,GACpC,OAAOqH,EAAA,cAACozD,GAAShjE,OAAAqI,OAAA,GAAKkuD,IAElB72D,UAAUmJ,GACd0zD,EAAM0G,YAAYp6D,GAClB+Z,EAAA,IAAIlc,KAAKkJ,EAAA,cAACmyD,GAAU,OAExBriE,SACI,IAAI6K,EAASqF,EAAA,cAACiT,EAAA,UAAS,CAAC1a,UAAU,aAC9Bka,SAAUniB,KAAKmiB,SACfmK,UAAW,IACX1J,YAAY,6BAChB,OAAOlT,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQA,GACjBqF,EAAA,cAACiT,EAAA,KAAI,CACD3gB,MAAOhC,KAAKoF,MAAMi+D,QAClBv8D,KAAM,CAACwb,OAAQtiB,KAAKkjE,aAAcz2D,QAASzM,KAAKmjE,kmBCxEhE,IAAaG,GAAb,cAA8B5zD,EAAA,UAD9BlQ,kCASYQ,KAAA4hE,cAAgB,EAACjhC,EAAat4B,IAC3BqH,EAAA,cAACiT,EAAA,IAAG,CAAC1a,UAAU,+BACd0kB,KAAMgU,EAAIzgC,KACVwb,MAAOhM,EAAA,uBAAOzH,UAAU,cAAc04B,EAAIH,gBAE9CxgC,KAAAujE,aAAe,CAAC5iC,IACpBje,EAAA,IAAIlc,KAAKkJ,EAAA,cAAC8zD,GAAQ,SAbhBhkE,mEACI68D,EAAMgF,iBACNhF,EAAMoH,iBAERjkE,WACJkjB,EAAA,IAAIlc,KAAKkJ,EAAA,cAACg0D,GAAQ,OAUdlkE,aACJkjB,EAAA,IAAIlc,KAAKkJ,EAAA,cAAC8zD,GAAQ,OAEdhkE,UACJkjB,EAAA,IAAIlc,KAAKkJ,EAAA,cAACkzD,GAAW,OAEzBpjE,SACI,IACImkE,EAAgBC,EAAaC,GAD7B3jE,KAACA,EAAIsgC,YAAEA,EAAWkB,MAAEA,GAAS26B,EAAM7kC,UAE3Bj2B,IAARmgC,GAA6B,OAARA,GAAwB,IAARA,EACrCkiC,EAAcl0D,EAAA,uBAAOzH,UAAU,cAAY,uBAG3C27D,kBAAoBliC,iBACpBmiC,EAAen0D,EAAA,yBAAKA,EAAA,cAACiT,EAAA,GAAE,CAACziB,KAAK,mBAC7ByjE,EAAiB3jE,KAAKqjE,SAE1B,IAAI5xC,EAAc,CACd,GACA,CACI5pB,KAAM,YACNqwB,UAAWxoB,EAAA,cAACiT,EAAA,MAAK,CAACtiB,UAAMkB,EAAW4mC,KAAMjoC,EAAMsgC,YAAaA,IAC5D/zB,QAASzM,KAAK8jE,UAElB,GACA,CACIj8D,KAAM,YACNqwB,UAAWxoB,EAAA,cAACiT,EAAA,IAAG,CAAC1a,UAAU,OAAO0kB,KAAMi3C,EAAaloD,MAAOmoD,IAC3Dp3D,QAASk3D,GAEb,KAEAjoD,EAAQhM,EAAA,wBAAQzH,UAAU,yBAAyBwE,QAAS,IAAIzM,KAAK+jE,cAAcr0D,EAAA,cAACiT,EAAA,GAAE,CAACziB,KAAK,iBAChG,OAAOwP,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAO,eAAKqR,MAAOA,GAC5BhM,EAAA,cAACiT,EAAA,SAAQ,CAAC8O,KAAMA,EAAMhxB,OAAQ,KAC9BiP,EAAA,qBAAKzH,UAAU,aAAYyH,EAAA,2BAAOA,EAAA,cAACiT,EAAA,GAAE,CAACziB,KAAK,wDAC3CwP,EAAA,cAACiT,EAAA,KAAI,CACD3gB,MAAOq6D,EAAMxB,SACb/zD,KAAM,CAACwb,OAAQtiB,KAAK4hE,cAAen1D,QAAQzM,KAAKujE,cAChDviE,KAAM0O,EAAA,uBAAOzH,UAAU,wBAAsB,mFAvDhDq7D,GAAQU,GAAA,CADpB10D,EAAA,GACYg0D,IA6Db,IAAMI,GAAN,cAAuBh0D,EAAA,UACblQ,cAAc0P,EAAWizD,kDACrB9F,EAAM4H,eAAe,OAAQ/0D,KAEjC1P,qBAAqB0P,EAAWizD,kDAC5B9F,EAAM4H,eAAe,cAAe/0D,KAE9C1P,SACI,IAAIg4B,EAAO6kC,EAAM7kC,MACbl0B,GAACA,GAAMk0B,EACP0sC,EAAmB,IAAP5gE,GAAmB,IAAPA,EACxBmuB,EAAc,CACd,GACA,CACIrxB,MAAO,eACPyH,KAAM,SACN3H,KAAM,OACNuM,QAASy3D,OAAW3iE,EAAY,IAAImhB,EAAA,IAAIlc,KAAKkJ,EAAA,cAAC2vD,GAAe,CACzDxjD,MAAM,2BACN3M,MAAOsoB,EAAKt3B,KACZ8jD,UAAWhkD,KAAKmkE,cAChB3E,KAAK,uDAEb,CACIp/D,MAAO,eACPyH,KAAM,SACN3H,KAAM,cACNuM,QAASy3D,OAAW3iE,EAAY,IAAImhB,EAAA,IAAIlc,KAAKkJ,EAAA,cAAC2vD,GAAe,CACzDxjD,MAAM,2BACN3M,MAAOsoB,EAAKgJ,YACZwjB,UAAWhkD,KAAKokE,qBAChB5E,KAAK,wDAGjB,OAAO9vD,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAO,wCAChBqF,EAAA,cAACiT,EAAA,SAAQ,CAAC8O,KAAMA,EAAMhxB,OAAQ+2B,EAAM65B,WAAW,aAnCrDqS,GAAQM,GAAA,CADb10D,EAAA,GACKo0D,IAyCN,IAAMF,GAAN,cAAuB9zD,EAAA,UAEnBlQ,YAAYkF,GACR7E,MAAM6E,GACN1E,KAAKqpB,OAASrpB,KAAKqpB,OAAOpkB,KAAKjF,MAE7BR,mEACI68D,EAAMgF,iBACNhF,EAAMoH,iBAERjkE,UAAUmhC,EAAat4B,GAC3B,OAAOqH,EAAA,cAACiT,EAAA,IAAG,CAAC1a,UAAU,+BACd0kB,KAAMgU,EAAIzgC,KACVwb,MAAOhM,EAAA,uBAAOzH,UAAU,cAAc04B,EAAIH,eAE9ChhC,UAAUmhC,EAAavlB,EAAqBg0C,IAGtC5vD,wDACJ68D,EAAMgI,YAAYrkE,KAAKquB,KAAKmgC,eAClC9rC,EAAA,IAAI3b,QAERvH,SACI,IAAIkc,EAAQhM,EAAA,wBAAQzH,UAAU,yBAAyBwE,QAASzM,KAAKqpB,QAAM,gBACvE+sC,EAAOiG,EAAMjG,KACbyE,EAAWwB,EAAMxB,SACrB,OAAOnrD,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAO,kBAAQqR,MAAOA,GAC/BhM,EAAA,cAACiT,EAAA,KAAI,CACD6I,IAAK6C,GAAMruB,KAAKquB,KAAKA,EACrBrsB,MAAOo0D,EACP5H,cAAeqM,EACf/zD,KAAM,CAACwb,OAAQtiB,KAAKkhE,UAAW7R,SAAUrvD,KAAKskE,gBA/BxDd,GAAQQ,GAAA,CADb10D,EAAA,GACKk0D,ulBCrGN,MAAMe,GAAe1nD,IAAW,SAAU,QAAS,qBAAsB,OAAQ,QAAS,cAG1F,IAAa2nD,GAAb,cAA6B90D,EAAA,UAD7BlQ,kCAKYQ,KAAA0iE,WAAa,EAAClrC,EAAWnvB,KAC7B,IAAInI,KAACA,EAAIsgC,YAAEA,EAAWkB,MAAEA,GAASlK,EACjC,OAAO9nB,EAAA,cAACiT,EAAA,IAAG,CACP1a,UAAU,YACV0kB,KAAMzsB,EACNwb,MAAOsc,OAAO0J,GAAS,KACvBhyB,EAAA,qBAAKzH,UAAWs8D,IACX/jC,MAILxgC,KAAAsiE,UAAY,CAAC9qC,IACjB6kC,EAAM0F,QAAQvqC,GACd9U,EAAA,IAAIlc,KAAKkJ,EAAA,cAAC4zD,GAAQ,SAEdtjE,KAAAykE,QAAU,CAACjxD,IACfA,EAAI6Z,iBACJ3K,EAAA,IAAIlc,KAAKkJ,EAAA,cAAC+xD,GAAO,SAEbzhE,KAAA0kE,cAAgB,MACpBrI,EAAM0F,aAAQxgE,GACdmhB,EAAA,IAAIlc,KAAKkJ,EAAA,cAACkzD,GAAW,SAxBnBpjE,mEACI68D,EAAM4F,cAyBhBziE,SACI,IAAIkc,EAAQhM,EAAA,mBAAGzH,UAAU,QAAQ0+B,KAAK,IAAIl6B,QAASzM,KAAKykE,SAAO,gBAC3Dp6D,EAASqF,EAAA,cAACiT,EAAA,IAAG,CAAC1a,UAAU,sBAAsB0kB,KAAK,eAAKjR,MAAOA,IACnE,OAAOhM,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAO,4BAChBqF,EAAA,cAACiT,EAAA,IAAG,CACA1a,UAAU,0BACV0kB,KAAM,eACNjR,MAAOsc,OAAOqkC,EAAMzB,aACpBnuD,QAASzM,KAAK0kE,eACdh1D,EAAA,qBAAKzH,UAAWs8D,IAAY,yCAIhC70D,EAAA,cAACiT,EAAA,KAAI,CACDtY,OAAQA,EACRrI,MAAOq6D,EAAM9F,MACbv1D,KAAK,WACL8F,KAAM,CAACwb,OAAOtiB,KAAK0iE,WAAYj2D,QAAQzM,KAAKsiE,gBA5C/CkC,GAAOG,GAAA,CADnBr1D,EAAA,GACYk1D,uRC2BE,0QC5BA,IAAAI,GAPG,CACdx8D,ICLW,CACXy8D,WFoBa,CACb3uB,KAnBJ,cAA6B4uB,GAAA,KACnBtlE,YAAY05C,EAAgBn2C,gEAC9B,OAAQm2C,EAASh5C,MACb,QAAS,aAAa6kE,EAAA,eAAiB3hE,KAAApD,KAACk5C,EAAUn2C,GAClD,IAAK,OAAQ,aAAa/C,KAAKglE,aAAajiE,MAItCvD,aAAauD,4CACvB,IAAIkiE,EAAcjlE,KAAK0D,aAAa,aAEpC,aADgBuhE,EAAY7hE,KAAKL,IAChB,KAAEO,OASvBuvB,KAAM,CACF,CACItwB,QAAS,EAAErC,OAAMoD,MAASrD,IAAUyP,EAAA,cAAAA,EAAA,cAAEA,EAAA,cAACiT,EAAA,MAAK,KAAE1iB,EAAEilE,mBAAuBhlE,GACvEc,KAAOf,GAAQA,EAAEklE,SAErB,CACI5iE,QAAS,EAAErC,OAAMoD,MAASrD,IAAUyP,EAAA,cAAAA,EAAA,cAAEA,EAAA,cAACiT,EAAA,MAAK,KAAE1iB,EAAEmlE,oBAAwBllE,WAAawP,EAAA,cAACiT,EAAA,MAAK,KAAE1iB,EAAE8vC,OAAKjwC,OAAA4iB,EAAA,MAAA5iB,CAAMwD,EAAI,KAC9GtC,KAAOf,GAAQA,EAAEolE,QAErB,CACI9iE,QAAS,EAAEsZ,QAAOvY,MAASrD,IAAUyP,EAAA,cAAAA,EAAA,cAAEA,EAAA,cAACiT,EAAA,MAAK,KAAE1iB,EAAEwX,mBAAuBoE,GACxE7a,UAAMO,MC5Bd0kB,KELW,CACXtd,KCec,CACdmtC,YAhBJ,cAA0BgvB,GAAA,YACZtlE,iBACN,IAAI4iC,EAAepiC,KAAKP,IAAI23C,UAAU,QAAS,cAC/C,OAAO,IAAI0tB,GAAA,eAAe1iC,EAAM1iC,QAEpCF,WAAWsH,GAAW,OAAOA,EAAKxD,GAE5B9D,WAAWmH,iDACUpF,IAAnBvB,KAAKqkB,YACLrkB,KAAKqkB,UAAYrkB,KAAK+mB,uBAEdxlB,IAARoF,UAAyB3G,KAAKqkB,UAAU2C,MAAM,CAACrgB,IAAKA,SAM5DpE,QAAUuE,GAAqB4I,EAAA,cAAAA,EAAA,cAAG5I,EAAK5G,ODhBvColE,aEFc,CACd//C,KAAM,CACF9N,KAAM,CACFlV,QAAUuE,IACN,IAAI+U,MAACA,GAAS/U,EACd,OAAO4I,EAAA,cAAAA,EAAA,cAAGmM,IAEduJ,WAAate,IACT,IAAI+U,MAACA,GAAS/U,EACd,OAAO4I,EAAA,cAAAA,EAAA,cAAGmM,QJHtBumB,MKPW,CACXmjC,UCCe,CACf7zC,IAAK5xB,OAAAwP,EAAA,EAAAxP,CAAUgH,IACX,IAAI2Q,KAACA,GAAQ3Q,EACb,OAAO4I,EAAA,qBAAKzH,UAAU,aAAawP,EAAKlV,eNG5C3C,IORQ,CACRksD,GAAI,CACA0Z,GCDO,CACXvlE,EAAG,CACC8vC,GAAI,eACJm1B,KAAM,eACNE,MAAO,eACPD,QAAS,qBACT1tD,KAAM,eACN4tD,OAAQ,qBACRhyD,EAAG,MACHyzB,EAAG,CACCrF,EAAG,MACHnjC,EAAG,IAAI2lB,EAAA5Q,EAAA6Q,cAAA,QAAMjc,UAAU,gBAAc,QAEzCqS,EAAG,IAAI2J,EAAA5Q,EAAA6Q,cAAA,QAAMjc,UAAU,eAAa,QAExC2K,GAAI,SACJqT,KAAM,2BACN7d,IAAK,qBACL0F,MAAO,eACPg3B,QAAS,qBACTD,KAAM,SACN3vB,OAAQ,eACRuwD,gBAAiB,eACjBp8C,OAAQ,eACRq8C,OAAQ,eACRC,QAAS,eACTjmE,OAAQ,CACJoI,QAAS,CACL1H,MAAO,uBACPslE,OAAQ,2BACRC,QAAS,2BACTtkE,OAAQ,CACJukE,SAAU,qBACV7P,SAAU,2BACVluD,KAAM,eACNsG,KAAM,eACN03D,QAAS,eACTrlC,YAAa,eACbj+B,QAAS,iBAGjBujE,WAAY,CACR1lE,MAAO,sBACPipB,OAAQ,2BACRhoB,OAAQ,CACJoI,IAAK,iBAGbs8D,WAAY,CACR3lE,MAAO,2BACPiB,OAAQ,CACJwG,KAAM,eACNg+D,QAAS,gBAEblkE,KAAM,CACF26B,GAAI,CACAl8B,MAAO,eACP6uB,UAAW,iBACX+2C,WAAY,kBAEhBngC,GAAI,CACAzlC,MAAO,eACP6uB,UAAW,iBACX+2C,WAAY,oBAIxBC,YAAa,CACT7lE,MAAO,+CAEXykE,WAAY,CACRzkE,MAAO,8CACPiB,OAAQ,GAERu4C,cAAevjC,EAAAhD,EAAEwmC,SAAS,iDAE9BqsB,iBAAkB,CACd9lE,MAAO,+CAEXmlE,UAAW,CACPnlE,MAAO,+CAEX+lE,OAAQ,CACJ/lE,MAAO,eACPiB,OAAQ,CACJnB,KAAM,eACN6mC,KAAM,eACNq/B,MAAO,eACPC,IAAK,SACLC,OAAQ,eACR39D,KAAM,iBAGd28D,aAAc,CACVllE,MAAO,eACPuB,KAAM,CACF8V,KAAM,CACFrX,MAAO,kBAInBuI,KAAM,CACFvI,MAAO,gBAEX8kE,KAAM,CACF9kE,MAAO,gBAEXmmE,QAAS,CACLnmE,MAAO,2RCtFZ,MAAMomE,WAAmB9jD,EAAA,MAAhCljB,kCAIYQ,KAAAymE,iBAA0B,EAuJ1BzmE,KAAA0mE,aAAe5mE,OAAAwP,EAAA,EAAAxP,CAAS,EAAE6mE,cAC9B,IAAIC,EAAMD,EAAQx9D,MAClB,OAAO8a,EAAA5Q,EAAA6Q,cAAA,OAAKjc,UAAU,2BACV1G,IAARqlE,GAAoC,IAAfA,EAAIhhE,OAAcqe,EAAA5Q,EAAA6Q,cAACvB,EAAA,MAAK,6BAC7CikD,EAAIx+D,IAAI,CAACb,EAAEc,IACA4b,EAAA5Q,EAAA6Q,cAAA,QACHvd,IAAKY,EACLU,UAAU,8DACTV,OAoITvH,KAAA6mE,gBAAkB,EAAC//D,EAAoBuB,KAC3C,IAAI/E,GAACA,EAAEpD,KAAEA,GAAQ4G,EACjB,OAAOmd,EAAA5Q,EAAA6Q,cAAA,iBAAS5gB,WAAUpD,KAEtBF,KAAA8mE,QAAU,EAAChgE,EAAsBuB,IAC9B4b,EAAA5Q,EAAA6Q,cAAClkB,KAAK+mE,kBAAiBjnE,OAAAqI,OAAA,GAAKrB,KAE/B9G,KAAAgnE,WAAa,EAAClgE,EAAyBuB,IACpC4b,EAAA5Q,EAAA6Q,cAAClkB,KAAKinE,qBAAoBnnE,OAAAqI,OAAA,GAAKrB,KAElC9G,KAAAknE,QAAU,EAACpgE,EAAqBuB,IAC7B4b,EAAA5Q,EAAA6Q,cAAClkB,KAAKmnE,kBAAiBrnE,OAAAqI,OAAA,GAAKrB,KAE/B9G,KAAAonE,UAAgC,CAAChiE,IACrC,IAAIokB,QAACA,GAAWpkB,EAQZsW,EAAQuI,EAAA5Q,EAAA6Q,cAAA,UAAQjc,UAAU,yBAAyBwE,QAAS,IAAU46D,GAAArnE,UAAA,kCAAMA,KAAKsnE,QAAQliE,MAAM,gBACnG,OAAO6e,EAAA5Q,EAAA6Q,cAACxB,EAAA,KAAI,CAACrY,UAAWrK,KAAK8N,MAAM5N,UAAUspB,IACzCxkB,KAAK,QACL0W,MAAOA,GACPuI,EAAA5Q,EAAA6Q,cAAA,OAAKjc,UAAU,aACXgc,EAAA5Q,EAAA6Q,cAACvB,EAAA,MAAK,8FAEVsB,EAAA5Q,EAAA6Q,cAACvB,EAAA,KAAI,CAAC1a,UAAU,OACZjG,MAAOhC,KAAKunE,gBACZzgE,KAAM,CAACwb,OAAQtiB,KAAKknE,cAuExBlnE,KAAAmnE,kBAAoBrnE,OAAAwP,EAAA,EAAAxP,CAAUgH,IAClC,IAEI0gE,GAFA/vD,KAACA,EAAIu3C,SAAEA,EAAQyY,MAAEA,GAAS3gE,GAC1B+U,MAACA,GAASpE,EAEViwD,EAAkB1Y,EAAS7lD,MAI/B,OAHwB,IAApBu+D,IACAF,EAAYvjD,EAAA5Q,EAAA6Q,cAACvB,EAAA,KAAI,CAAC1a,UAAU,0BAA0BjG,MAAOylE,EAAO3gE,KAAM,CAACwb,OAAOtiB,KAAK8mE,YAEpF7iD,EAAA5Q,EAAA6Q,cAAA,OAAKjc,UAAU,eAClBgc,EAAA5Q,EAAA6Q,cAAA,SAAOjc,UAAU,wBACbgc,EAAA5Q,EAAA6Q,cAAA,SAAOjc,UAAU,oBACbJ,KAAK,WACL09C,eAAgBmiB,EAChB57C,SAAWtY,GAAMxT,KAAK2nE,oBAAoB7gE,EAAM0M,EAAI0G,OAAO2f,WAC/D5V,EAAA5Q,EAAA6Q,cAACvB,EAAA,MAAK,8BAAoB9G,GAE7B2rD,KAIDxnE,KAAA+mE,kBAAoBjnE,OAAAwP,EAAA,EAAAxP,CAAUgH,IAClC,IAEI0gE,GAFAtC,KAACA,EAAIlW,SAAEA,EAAQ4Y,SAAEA,GAAY9gE,GAC7B5G,KAACA,GAAQglE,EAETwC,EAAkB1Y,EAAS7lD,MAI/B,OAHwB,IAApBu+D,GAA4BE,EAAShiE,OAAS,IAC9C4hE,EAAYvjD,EAAA5Q,EAAA6Q,cAACvB,EAAA,KAAI,CAAC1a,UAAU,0BAA0BjG,MAAO4lE,EAAU9gE,KAAM,CAACwb,OAAOtiB,KAAKgnE,eAEvF/iD,EAAA5Q,EAAA6Q,cAAA,OAAKjc,UAAU,eAClBgc,EAAA5Q,EAAA6Q,cAAA,SAAOjc,UAAU,wBACbgc,EAAA5Q,EAAA6Q,cAAA,SAAOjc,UAAU,oBACbJ,KAAK,WACL09C,eAAgBmiB,EAChB57C,SAAWtY,GAAMxT,KAAK6nE,oBAAoB/gE,EAAM0M,EAAI0G,OAAO2f,WAC/D5V,EAAA5Q,EAAA6Q,cAACvB,EAAA,MAAK,8BAAoBziB,GAE7BsnE,KAIDxnE,KAAAinE,qBAAuBnnE,OAAAwP,EAAA,EAAAxP,CAAUgH,IACrC,IAAIy/D,QAACA,EAAOvX,SAAEA,GAAYloD,GACtB5G,KAACA,GAAQqmE,EACTmB,EAAkB1Y,EAAS7lD,MAC/B,OAAO8a,EAAA5Q,EAAA6Q,cAAA,OAAKjc,UAAU,eAClBgc,EAAA5Q,EAAA6Q,cAAA,SAAOjc,UAAU,wBACbgc,EAAA5Q,EAAA6Q,cAAA,SAAOjc,UAAU,oBACbJ,KAAK,WACL09C,eAAgBmiB,EAChB57C,SAAWtY,GAAMxT,KAAK8nE,uBAAuBhhE,EAAM0M,EAAI0G,OAAO2f,WAClE5V,EAAA5Q,EAAA6Q,cAACvB,EAAA,MAAK,8BAAoBziB,MAzb9BV,WAAW4F,GACf,IAAI2iE,cAACA,EAAaN,MAAEA,EAAKG,SAAEA,EAAQI,MAAEA,GAAShoE,KAAK6D,WAC/CokE,EAA+B,IAC/BrB,IAACA,GAAOxhE,EACZ,QAAY7D,IAARqlE,EACA,IAAK,IAAItqC,KAAMsqC,EAAK,CAChB,IAAInvD,KAACA,GAAQ6kB,EACT4rC,EAAMzwD,EAAKnU,GACX6kE,EAAMF,EAAQC,QACN3mE,IAAR4mE,IAAmBF,EAAQC,GAAOC,EAAM,IAC5CA,EAAI3hE,KAAK81B,GAGjBt8B,KAAKunE,gBAAkBS,EAAM5/D,IAAIb,GAAKvH,KAAKooE,oBAAoB7gE,EAAG0gE,IAQlEjoE,KAAKymE,iBAAkB,EACvBzmE,KAAKoiB,SAASpiB,KAAKonE,UAAWhiE,GAC9BpF,KAAKsN,gBAAgB,IAA6B+5D,GAAArnE,UAAA,qBAC9C,OAA6B,IAAzBA,KAAKymE,iBACFh/D,QAAQ,qEAIfjI,oBAAoBiY,EAAWwwD,GACnC,IACIjZ,EACAyY,EAFAU,EAAMF,EAAQxwD,EAAKnU,IAgBvB,YAbY/B,IAAR4mE,GACAnZ,GAAW,EACXyY,EAAQ,KAGRzY,GAAW,EACXyY,EAAQznE,KAAKqoE,qBAAqB5wD,EAAM0wD,IAElC,CACN1wD,KAAMA,EACNu3C,SAAUvlC,EAAA,EAAWquB,IAAIkX,GACzByY,MAAOA,GAKPjoE,qBAAqBiY,EAAWmvD,GACpC,IAAI0B,EAA+B,GAC/BC,GAAc,EAClB,IAAK,IAAIjsC,KAAMsqC,EAAK,CAChB,IACI4B,GADAtD,KAACA,GAAQ5oC,OAEA/6B,IAAT2jE,GACAsD,EAAS,EACTD,GAAc,GAGdC,EAAStD,EAAK5hE,GAElB,IAAImlE,EAAMH,EAAQE,QACNjnE,IAARknE,IAAmBH,EAAQE,GAAUC,EAAM,IAC/CA,EAAIjiE,KAAK81B,GAEb,IAAIsrC,EAAqB,IACrBtC,aAACA,GAAgB7tD,EACrB,QAAqBlW,IAAjB+jE,QAAqD/jE,IAAvB+jE,EAAamC,MAC3C,IAAK,IAAIvC,KAAQztD,EAAK6tD,aAAamC,WACTlmE,IAAlB2jE,EAAK0C,UAAwBA,EAASphE,QAAQ0+D,EAAK0C,UAG/D,IAAIH,EAAyB,GACzBiB,EAAUJ,EAAQ,GAClBK,EAAkB3oE,KAAK4oE,wBAAwBhB,EAAUc,GAsB7D,GArBAjB,EAAMjhE,KAAK,CACP0+D,KAAM,CACF5hE,GAAI,EACJpD,KAAM,6BACN6vC,QAAIxuC,EACJqmE,SAAUA,EACVG,mBAAexmE,GAEnBytD,SAAUvlC,EAAA,EAAWquB,SAAcv2C,IAAVmnE,GACzBd,SAAUe,SAEOpnE,IAAjB+jE,QAAqD/jE,IAAvB+jE,EAAamC,OAC3ChwD,EAAK6tD,aAAamC,MAAMhtD,QAAQlT,IAC5B,IAAIshE,EAASP,EAAQ/gE,EAAEjE,IACvBmkE,EAAMjhE,KAAK,CACP0+D,KAAM39D,EACNynD,SAAUvlC,EAAA,EAAWquB,SAAav2C,IAATsnE,GACzBjB,SAAU5nE,KAAK4oE,wBAAwBhB,EAAUiB,QAIzC,IAAhBN,GAAuC,IAAf3B,EAAIhhE,OAAc,CAC1C,IAAIkjE,EAAkBrB,EAAM,GACxBsB,GAAa,EACjB,IAAK,IAAIC,KAAqBF,EAAgBlB,SAC1C,IAAyC,IAArCoB,EAAkBha,SAAS7lD,MAAgB,CAC3C4/D,GAAa,EACb,OAGW,IAAfA,IACAD,EAAgB9Z,SAASvpD,KAAI,GAC7BqjE,EAAgBlB,SAAW,IAGnC,OAAOH,EAGHjoE,wBAAwBooE,EAAoBhB,GAChD,IAAIqC,EAAyC,GAC7C,IAAK,IAAI1C,KAAWqB,EAChBqB,EAAmBziE,KAAK,CACpB+/D,QAASA,EACTvX,SAAUvlC,EAAA,EAAWquB,IAAI8uB,QAAmErlE,IAA5DqlE,EAAIt/D,KAAKC,GAAKA,EAAEg/D,SAAWA,EAAQjjE,KAAOiE,EAAEg/D,QAAQjjE,OAG5F,OAAO2lE,EAGHzpE,YAAY0pE,GAChB,IACI3mE,GADArC,KAACA,EAAIspB,QAAEA,EAAOo9C,IAAEA,EAAGD,QAAEA,EAAOwC,WAAEA,GAAcD,EAEhD,IAAmB,IAAfC,EAAqB,CACrB,IAAIztD,EAAQuI,EAAA5Q,EAAA6Q,cAACvB,EAAA,GAAE,CAAC1a,UAAU,+BAA+B/H,KAAK,kBAC1DuM,EAAU,IAAMzM,KAAKopE,WAAWF,GAChCG,EAAUplD,EAAA5Q,EAAA6Q,cAAClkB,KAAK0mE,aAAY,CAACC,QAASA,IAC1CpkE,EAAU0hB,EAAA5Q,EAAA6Q,cAAAD,EAAA5Q,EAAAyhC,SAAA,KACN7wB,EAAA5Q,EAAA6Q,cAACvB,EAAA,IAAG,CAAC1a,UAAU,oCAAoCyT,MAAOA,EAAOjP,QAASA,GACrE+c,GAEJ6/C,QAIL9mE,EAAU0hB,EAAA5Q,EAAA6Q,cAAA,OAAKjc,UAAU,sBACpBuhB,GAGT,OAAOvF,EAAA5Q,EAAA6Q,cAAA,OAAKvd,IAAKzG,EAAM+H,UAAU,yCAC5B1F,GAmBD/C,SAASonE,GACb,OAAOA,GAAOA,EAAIx+D,IAAI,CAACb,EAAEc,KACrB,IAAIoP,KAACA,EAAIytD,KAAEA,EAAIqB,QAAEA,GAAWh/D,EACxBhF,EAAiBkV,EAAKoE,MAM1B,YALata,IAAT2jE,GAAsBA,EAAK5hE,GAAK,IAAGf,GAAW,MAAQ2iE,EAAKhlE,WAC/CqB,IAAZglE,SACahlE,IAAT2jE,GAAkC,IAAZA,EAAK5hE,KAAUf,GAAW,SACpDA,GAAW,MAAQgkE,EAAQrmE,MAExBqC,IAIT/C,MAAKE,OAACA,EAAM4pE,MAAEA,6CAChBtpE,KAAK8N,MAAQpO,EACb,IAAIQ,KAACA,EAAIkgC,OAAEA,GAAU1gC,EACrB,QAAe6B,IAAX6+B,EAAsB,CACtB,IAAIwmC,EAAM0C,EAAS,EAWnB,OAVAtpE,KAAKogC,OAAS,CAAC,CACXlgC,KAAM,IACNspB,QAAS,2BACT2/C,YAAY,EACZvC,IAAKA,EACLD,QAASl9C,EAAA,EAAWquB,IAAc93C,KAAKupE,SAAS3C,WAEpD5mE,KAAK4jB,gBAAgBK,EAAA5Q,EAAA6Q,cAACxB,EAAA,KAAI,CAACrY,OAAQnK,EAAO,mBACrCF,KAAKogC,OAAOh4B,IAAIb,GAAKvH,KAAK+tC,YAAYxmC,MAK/CvH,KAAKogC,OAASA,EAAOh4B,IAAIb,IACrB,IACIiiB,EACA2/C,EACAvC,EACJ,OAJar/D,EAAE4H,OAAO,EAAG,IAKrB,IAAK,IAAKqa,EAAUvF,EAAA5Q,EAAA6Q,cAAAD,EAAA5Q,EAAAyhC,SAAA,KAAGvtC,EAAE4H,OAAO,YAAW8U,EAAA5Q,EAAA6Q,cAACvB,EAAA,MAAK,sBAAgBwmD,GAAa,EAAO,MACrF,IAAK,IAAK3/C,EAAUvF,EAAA5Q,EAAA6Q,cAAAD,EAAA5Q,EAAAyhC,SAAA,KAAGvtC,EAAE4H,OAAO,YAAW8U,EAAA5Q,EAAA6Q,cAACvB,EAAA,MAAK,sBAAgBwmD,GAAa,EAAO,MACrF,IAAK,IACD3/C,EAAU,uBACV2/C,GAAa,EACbvC,EAAM0C,EAAM/hE,GACZ,MACJ,QACIiiB,EAAUjiB,EACV4hE,GAAa,EACbvC,EAAM0C,EAAM/hE,GAGpB,MAAO,CACHrH,KAAMqH,EACNiiB,QAASA,EACT2/C,WAAYA,EACZvC,IAAKA,EACLD,QAASl9C,EAAA,EAAWquB,IAAc93C,KAAKupE,SAAS3C,OAGxD5mE,KAAK4jB,gBAAgBK,EAAA5Q,EAAA6Q,cAACxB,EAAA,KAAI,CAACrY,OAAQ,sDAAgBnK,GAC9CF,KAAKogC,OAAOh4B,IAAIb,GAAKvH,KAAK+tC,YAAYxmC,QAIjC/H,QAAQ0pE,4CAClB,IAAIM,EAAcN,EAAQhpE,KACtB0mE,EAAW,GACX6C,EAAqD,GACzD,IAAK,IAAIC,KAAM1pE,KAAKunE,gBAAiB,CACjC,IAA0B,IAAtBmC,EAAG1a,SAAS7lD,MAAiB,SACjC,IAAIwgE,EAASD,EAAGjyD,KAAKnU,GACjBsmE,EAAY,EAChB,IAAK,IAAIC,KAAMH,EAAGjC,MAAO,CACrB,IAA0B,IAAtBoC,EAAG7a,SAAS7lD,MAAiB,SACjC,IAAIq/D,EAASqB,EAAG3E,KAAK5hE,KACnBsmE,EACF,IAAIE,EAAe,EACnB,IAAK,IAAIC,KAAMF,EAAGjC,SAAU,CACxB,IAA0B,IAAtBmC,EAAG/a,SAAS7lD,MAAiB,SACjC,IAAI6gE,EAAYD,EAAGxD,QAAQjjE,KACzBwmE,EACFL,EAAMjjE,KAAK,CACPiR,KAAMkyD,EACNzE,KAAMsD,EACNjC,QAASyD,IAEbpD,EAAIpgE,KAAK,CACLiR,KAAMiyD,EAAGjyD,KACTytD,KAAM2E,EAAG3E,KACTqB,QAASwD,EAAGxD,UAGC,IAAjBuD,IACAL,EAAMjjE,KAAK,CACPiR,KAAMkyD,EACNzE,KAAMsD,EACNjC,QAAS,IAEbK,EAAIpgE,KAAK,CACLiR,KAAMiyD,EAAGjyD,KACTytD,KAAM2E,EAAG3E,KACTqB,aAAShlE,KAIH,IAAdqoE,IACAH,EAAMjjE,KAAK,CACPiR,KAAMkyD,EACNzE,KAAM,EACNqB,QAAS,IAEbK,EAAIpgE,KAAK,CACLiR,KAAMiyD,EAAGjyD,KACTytD,UAAM3jE,EACNglE,aAAShlE,WAIfvB,KAAK6D,WAAWomE,oBAAoBjqE,KAAK8N,MAAO07D,EAAaC,GACnE,IAAIrkE,EAAQpF,KAAKogC,OAAO94B,KAAKC,GAAKA,EAAErH,OAASspE,GAC7CpkE,EAAMwhE,IAAMA,EACZ,IAAI2C,EAAWvpE,KAAKupE,SAAS3C,GAC7BxhE,EAAMuhE,QAAQlhE,IAAI8jE,GAClBvpE,KAAKojB,cA2CD5jB,oBAAoBsH,EAAqB+yB,GAC7C75B,KAAKymE,iBAAkB,EACvB,IAAIhvD,KAACA,EAAIu3C,SAAEA,GAAYloD,EACvB,IAAgB,IAAZ+yB,EAAkB,CAClB,IAAI+tC,EAAqB,IACrBtC,aAACA,GAAgB7tD,EACrB,QAAqBlW,IAAjB+jE,QAAqD/jE,IAAvB+jE,EAAamC,MAC3C,IAAK,IAAIvC,KAAQztD,EAAK6tD,aAAamC,WACTlmE,IAAlB2jE,EAAK0C,UAAwBA,EAASphE,QAAQ0+D,EAAK0C,UAG/D9gE,EAAK2gE,MAAMjhE,KAAK,CACZ0+D,KAAM,CACF5hE,GAAI,EACJpD,KAAM,6BACN6vC,QAAIxuC,EACJqmE,SAAUA,EACVG,mBAAexmE,GAEnBytD,SAAUvlC,EAAA,EAAWquB,KAAI,GACzB8vB,SAAS,UAEQrmE,IAAjB+jE,QAAqD/jE,IAAvB+jE,EAAamC,OAC3ChwD,EAAK6tD,aAAamC,MAAMhtD,QAAQlT,IAC5BT,EAAK2gE,MAAMjhE,KAAK,CACZ0+D,KAAM39D,EACNynD,SAAUvlC,EAAA,EAAWquB,KAAI,GACzB8vB,SAAU,YAMtB9gE,EAAK2gE,MAAMlqC,OAAO,GAEtByxB,EAASvpD,IAAIo0B,GAGTr6B,oBAAoBsH,EAAqB+yB,GAC7C75B,KAAKymE,iBAAkB,EACvB,IAAIvB,KAACA,EAAIlW,SAAEA,GAAYloD,GACP,IAAZ+yB,EAEAqrC,EAAK0C,SAASntD,QAAQlT,IAClBT,EAAK8gE,SAASphE,KAAK,CACf+/D,QAASh/D,EACTynD,SAAUvlC,EAAA,EAAWquB,KAAI,OAKjChxC,EAAK8gE,SAASrqC,OAAO,GAEzByxB,EAASvpD,IAAIo0B,GAGTr6B,uBAAuBsH,EAAwB+yB,GACnD75B,KAAKymE,iBAAkB,EACvB,IAAIF,QAACA,EAAOvX,SAAEA,GAAYloD,EAC1BkoD,EAASvpD,IAAIo0B,8QCrZd,MAAMqwC,WAAkBxnD,EAAA,MAA/BljB,kCAGYQ,KAAA65B,QAAoC,GAExB75B,KAAA4oC,WAAoB,EAuChC5oC,KAAAmqE,eAAiB,EAACzqE,EAAem6B,KACrC75B,KAAK65B,QAAQn6B,EAAOQ,MAAM25B,QAAUA,EACpC,IAAI+O,GAAoB,EACxB,IAAK,IAAI1hC,KAAKlH,KAAK65B,QAAS,CACxB,IAAIuwC,IAACA,EAAGvwC,QAAEA,GAAW75B,KAAK65B,QAAQ3yB,GAClC,GAAIkjE,IAAQvwC,EAAS,CACjB+O,GAAY,EACZ,OAGR5oC,KAAK4oC,UAAYA,IAGb5oC,KAAAqqE,WAAa,KAAYC,GAAAtqE,UAAA,qBAC7B,IAAIy6B,EAA6B,GACjC,IAAK,IAAIvzB,KAAKlH,KAAK65B,SACiB,IAA5B75B,KAAK65B,QAAQ3yB,GAAG2yB,SACpBY,EAASj0B,KAAK,CAAC9G,OAAQwH,IAE3B,IAAIqjE,EAAqBvqE,KAAK6D,WAAWpE,IAAI23C,UAAU,SAAU,4BACjDmzB,EAAmB7qE,OAAO2pB,OAAO,CAC7CzW,GAAI5S,KAAK4S,GAAGtP,GACZm3B,SAAUA,IAEdz6B,KAAK4kB,YACL5kB,KAAK4jB,gBAAgBlU,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAO,6CAAUrF,KAAK,SAC7C0K,EAAA,qBAAKzH,UAAU,OACXyH,EAAA,cAACiT,EAAA,GAAE,CAACziB,KAAK,eAAe+H,UAAU,kDAmBtCjI,KAAAwqE,WAAa1qE,OAAAwP,EAAA,EAAAxP,CAAS,KAa1B,IAAI2qE,GAA8B,IAAjBzqE,KAAK4oC,UAAkBl5B,EAAA,wBAAQzH,UAAU,yBAAyBwE,QAASzM,KAAKqqE,YAAU,gBAAgB,KAC3H,OAAO36D,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQ,6CAAWqR,MAAO+uD,GACnC/6D,EAAA,qBAAKzH,UAAU,wBACXyH,EAAA,qBAAKpH,MAAO,CAACoiE,WAAW,MAAOC,WAAW,SAAO,gBACjDj7D,EAAA,oBAAIzH,UAAU,OAAOK,MAAO,CAACsiE,cAAe,IAAKF,WAAY,QACzDh7D,EAAA,kLAGAA,EAAA,wLAGAA,EAAA,0LAKP1P,KAAK6qE,OAAOziE,IAAI0iE,IACb,IAAI9oE,MAACA,EAAK6F,KAAEA,GAAQijE,EAChBzqE,EAAOykE,GAAA,YAAYj9D,GACvB,OAAO7F,GAASA,EAAM4D,OAAO,GACzB8J,EAAA,cAACiT,EAAA,KAAI,CAAChc,IAAKkB,EACPI,UAAU,OACVoC,OAAQqF,EAAA,cAACiT,EAAA,MAAK,CAAC1a,UAAU,4BAA4BjI,KAAKJ,IAAIiI,IAAOA,GACrE7F,MAAOA,EACP8E,KAAM,CACFwb,OAAO,CAACxb,EAAUuB,IAAerI,KAAK6iB,aAAa/b,EAAMzG,GACzDoM,aAASlL,UA3H3B/B,KAAKoT,4CACP5S,KAAK4S,GAAKA,EACV,IAAI1S,KAACA,EAAIk+B,MAAEA,EAAKmC,QAAEA,EAAO6C,KAAEA,EAAID,MAAEA,EAAKT,QAAEA,EAAOW,UAAEA,EAASC,SAAEA,EAAQJ,OAAEA,GAAUljC,KAAK4S,GACrF5S,KAAK6qE,OAAS,CACV,CAAC7oE,MAAOo8B,EAAOv2B,KAAM,QACrB,CAAC7F,MAAOkhC,EAAQr7B,KAAM,SACtB,CAAC7F,MAAOu+B,EAAS14B,KAAM,UACvB,CAAC7F,MAAOohC,EAAMv7B,KAAM,OACpB,CAAC7F,MAAOmhC,EAAOt7B,KAAM,QACrB,CAAC7F,MAAO0gC,EAAS76B,KAAM,SACvB,CAAC7F,MAAOqhC,EAAWx7B,KAAM,WACzB,CAAC7F,MAAOshC,EAAUz7B,KAAM,YAE5B,IAAIkjE,EAAoB/qE,KAAK6D,WAAWpE,IAAI23C,UAAU,QAAS,qBAC3D4zB,QAA6BD,EAAkBrrE,OAAO0iC,MAAM,CAACxvB,GAAI5S,KAAK4S,GAAGtP,KACzE2nE,EAA2C,GAC/C,IAAK,IAAIC,KAAOF,EAAqBnqE,IACjCoqE,EAAeC,EAAIxrE,SAAU,EAEjC,IAAK,IAAIonC,KAAK9mC,KAAK6qE,OAAQ,CACvB,IAAI7oE,MAACA,GAAS8kC,EACd,QAAcvlC,IAAVS,EACJ,IAAK,IAAI8E,KAAQ9E,EAAO,CACpB,IAAI9B,KAACA,GAAQ4G,EACT+yB,GAAoC,IAAzBoxC,EAAe/qE,GAC9BF,KAAK65B,QAAQ35B,GAAQ,CACjBkqE,IAAKvwC,EACLA,QAASA,IAIrB75B,KAAKoiB,SAASpiB,KAAKwqE,YACnBxqE,KAAKsN,gBAAgB,IAA6Bg9D,GAAAtqE,UAAA,qBAC9C,OAAuB,IAAnBA,KAAK4oC,WACFnhC,QAAQ,uEAqCfjI,aAAaE,EAAeW,GAChC,IAAIH,KAACA,GAAQR,EACTgc,EAAQhM,EAAA,uBAAOzH,UAAU,oBACzBJ,KAAK,WACL09C,eAAgBvlD,KAAK65B,QAAQ35B,GAAMkqE,IACnCt+C,SAAWtY,GAAMxT,KAAKmqE,eAAezqE,EAAQ8T,EAAI0G,OAAO2f,WAE5D,OAAOnqB,EAAA,cAACiT,EAAA,IAAG,CAAC1a,UAAU,+BAClByT,MAAOA,GACNrb,WAAcH,kUAjFXirE,CAAA,CAAX1hD,EAAA,8SCLE,MAAM2hD,WAAsB1oD,EAAA,MAAnCljB,kCAEwBQ,KAAAqrE,MAAe,GAkB3BrrE,KAAAsrE,YAAc,CAAOxkE,GAAaykE,GAAAvrE,UAAA,qBACtCA,KAAK4jB,gBAAgBlU,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQ,kCAC/BqF,EAAA,qBAAKzH,UAAU,OACXyH,EAAA,yBAAKA,EAAA,mBAAGzH,UAAU,kBAAkBnB,EAAK6B,KAAKpG,+DAAuBmN,EAAA,qDACrEA,EAAA,qBAAKzH,UAAU,OACXyH,EAAA,wBAAQzH,UAAU,kBAAkBwE,QAAS,IAAIzM,KAAKwrE,iBAAiB1kE,IAAK,kCAC5E4I,EAAA,wBAAQzH,UAAU,8BAA8BwE,QAASzM,KAAKyrE,cAAY,uBAMlFzrE,KAAAwrE,iBAAmB,CAAO1kE,GAAaykE,GAAAvrE,UAAA,qBAC3C,IAAIyT,EAAO,CAACi4D,IAAK1rE,KAAK4S,GAAGtP,GAAIi2C,KAAK,CAAC,CAACoyB,MAAO7kE,EAAK6B,KAAKrF,YAC/CtD,KAAK4rE,kBAAkBlsE,OAAO6gC,QAAQuC,IAAIzZ,OAAO5V,GACvD,IAAIpL,EAAQrI,KAAKqrE,MAAMxqD,UAAUtZ,GAAKA,IAAMT,GACxCuB,GAAS,GAAGrI,KAAKqrE,MAAM9tC,OAAOl1B,EAAO,GACzCrI,KAAKojB,eAGDpjB,KAAAyrE,aAAe,KAAMzrE,KAAKojB,aAE1BpjB,KAAAs4C,SAAW,KAAYizB,GAAAvrE,UAAA,qBAC3B,IAAI2I,QAAa3I,KAAK6D,WAAWgoE,eAAe7rE,KAAK4S,IACrD5S,KAAK8rE,eAAenjE,MAQhB3I,KAAA+rE,WAAa,EAACjlE,EAAUuB,IACrBqH,EAAA,qBAAKzH,UAAU,aAAanB,EAAK6B,KAAKpG,YAGzCvC,KAAAmiB,SAAW,CAAOxb,GAAe4kE,GAAAvrE,UAAA,2BAC/BA,KAAKgsE,UAAUhlD,MAAM,CAACrgB,IAAKA,OAE7B3G,KAAAisE,WAAa,CAAOnlE,GAAaykE,GAAAvrE,UAAA,2BAC/BA,KAAK4rE,kBAAkBlsE,OAAO6gC,QAAQsC,IAAIxZ,OAAO,CAACqiD,IAAK1rE,KAAK4S,GAAGtP,GAAIi2C,KAAK,CAAC,CAACoyB,MAAO7kE,EAAKxD,OAC5FtD,KAAKksE,SAASxsE,OAAO8D,MAAMsD,EAAKxD,IAChC,IAAIouB,EAAM,CACN9e,GAAI5S,KAAK4S,GAAGtP,GACZqF,KAAM3I,KAAKksE,SAASxsE,OAAOmwB,MAAM/oB,EAAKxD,KAE1CtD,KAAKqrE,MAAM7kE,KAAKkrB,GAChB1xB,KAAKojB,UAAU,MAEXpjB,KAAAmsE,cAAgB,MAAOnsE,KAAKkwC,aAC5BlwC,KAAA8rE,eAAiB,CAAChlE,IACtB9G,KAAK4jB,gBAAgBlU,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAO,gBAC9BqF,EAAA,qBAAKzH,UAAU,OACXyH,EAAA,yBAAKA,EAAA,mBAAGzH,UAAU,kBAAkBnB,EAAK5G,oPAAiDwP,EAAA,qDAC1FA,EAAA,qBAAKzH,UAAU,OACXyH,EAAA,wBAAQzH,UAAU,kBAAkBwE,QAAS,IAAIzM,KAAKisE,WAAWnlE,IAAK,oDACtE4I,EAAA,wBAAQzH,UAAU,8BAA8BwE,QAASzM,KAAKmsE,eAAa,sBAKnFnsE,KAAAosE,iBAAmB,EAACtlE,EAAUuB,IAC3BqH,EAAA,qBAAKzH,UAAU,aAAa8D,KAAKC,UAAUlF,KAE9C9G,KAAAqsE,UAAY,MAChB,IAAInmD,EAASxW,EAAA,cAACiT,EAAA,UAAS,CAAC1a,UAAU,QAAQka,SAAUniB,KAAKmiB,SAAUS,YAAY,6BAC/E,OAAOlT,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQ6b,GACjBxW,EAAA,cAACiT,EAAA,KAAI,CACD6B,OAAO,iCACPxiB,MAAOhC,KAAKgsE,UACZllE,KAAM,CAACwb,OAAQtiB,KAAKosE,iBAAkB3/D,QAAQzM,KAAK8rE,qBApFzDtsE,KAAKoT,4CACP5S,KAAK4S,GAAKA,EACV5S,KAAK4rE,kBAAoB5rE,KAAK6D,WAAWpE,IAAI23C,UAAU,MAAO,qBAC9Dp3C,KAAKksE,SAAWlsE,KAAK6D,WAAWpE,IAAI23C,UAAU,OAAQ,cAChDp3C,KAAK4rE,kBAAkBlsE,OAAOa,aACpC,IAAI2gB,QAAYlhB,KAAK4rE,kBAAkBlsE,OAAOgjC,QAAQxhB,IAAIkhB,MAAM,CAACspC,IAAK1rE,KAAK4S,GAAGtP,KAC1EoY,EAAQhM,EAAA,wBAAQzH,UAAU,yBAAyBwE,QAASzM,KAAKs4C,UAAU5oC,EAAA,cAACiT,EAAA,GAAE,CAACziB,KAAK,UACxFF,KAAKqrE,MAAM7kE,QAAQ0a,EAAIrgB,KACvBb,KAAK4jB,gBAAgBlU,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQ,iCAASqR,MAAOA,GAC/ChM,EAAA,cAACiT,EAAA,KAAI,CAAC3gB,MAAOhC,KAAKqrE,MAAOvkE,KAAM,CAACwb,OAAOtiB,KAAK+rE,WAAYt/D,QAASzM,KAAKsrE,kVAblEgB,CAAA,CAAX7iD,EAAA,0SCVE,MAAM8iD,WAAoB7pD,EAAA,MAAjCljB,kCAEYQ,KAAAgsE,UAAY,IAAIQ,GAEhBxsE,KAAAysE,YAAc,CAAC3lE,IACnB9G,KAAKojB,YACLpjB,KAAK2jB,WAAW7c,KAEZ9G,KAAAmiB,SAAW,CAAOxb,GAAe+lE,GAAA1sE,UAAA,2BAC/BA,KAAKgsE,UAAUhlD,MAAM,CAACrgB,IAAKA,EAAKmD,KAAK9J,KAAK8J,KAAM0tB,UAAKj2B,OAEvDvB,KAAAosE,iBAAmB,EAACtlE,EAAUuB,IAC3BqH,EAAA,qBAAKzH,UAAU,aAAa8D,KAAKC,UAAUlF,KAEhDtH,KAAKsK,4CACP9J,KAAK8J,KAAOA,EACZ,IAAIoc,EAASxW,EAAA,cAACiT,EAAA,UAAS,CAAC1a,UAAU,QAAQka,SAAUniB,KAAKmiB,SAAUS,YAAY,6BAC/E5iB,KAAK4jB,gBAAgBlU,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQ6b,GAC/BxW,EAAA,cAACiT,EAAA,KAAI,CACD6B,OAAO,iCACPxiB,MAAOhC,KAAKgsE,UACZllE,KAAM,CAACwb,OAAQtiB,KAAKosE,iBAAkB3/D,QAAQzM,KAAKysE,oBAKnE,MAAMD,WAAkB9pD,EAAA,UACJljB,KAAKuD,EAA8C6U,EAAgBC,4CAC/E,IAAI/N,KAACA,EAAI0tB,KAAEA,EAAI7wB,IAAEA,GAAO5D,EAExB,aADgB+hE,GAAA,UAAU37D,IAAI,eAAgB,CAACxC,IAAKA,EAAKmD,KAAKA,EAAM0tB,KAAKA,EAAM5f,UAAUA,EAAWC,SAASA,MAGvGrY,aAAasH,GAEf9G,KAAK4X,eADIrW,IAATuF,EACiB,EAEAA,EAAKxD,8QC/B3B,MAAMqpE,WAAmB7H,GAAA,aAAhCtlE,kCAOIQ,KAAAK,KAAO4jB,EAAA5Q,EAAA6Q,cAACvB,EAAA,GAAE,CAACziB,KAAK,QAAQ+H,UAAU,eAAeslC,UAAU,IAC3DvtC,KAAAI,MAAQ,4CAkKAJ,KAAA4sE,UAAY,EAACjsC,EAASt4B,KAC1B,IAAInI,KAACA,EAAIsgC,YAAEA,GAAeG,EAC1B,OAAO1c,EAAA5Q,EAAA6Q,cAACvB,EAAA,IAAG,CAAC1a,UAAU,YAAYyT,MAAO8kB,GAAevc,EAAA5Q,EAAA6Q,cAACvB,EAAA,MAAK,KAAE6d,IAC3DtgC,KAIDF,KAAAihE,SAAW,CAACtgC,IAChB3gC,KAAKoiB,SAAS6B,EAAA5Q,EAAA6Q,cAAClkB,KAAK6sE,QAAO/sE,OAAAqI,OAAA,GAAKw4B,OAQ5B3gC,KAAA8sE,SAAW,KAAM7oD,EAAA5Q,EAAA6Q,cAACxB,EAAA,KAAI,CAACrY,OAAQrK,KAAKI,OACxC6jB,EAAA5Q,EAAA6Q,cAAA,OAAKjc,UAAU,wBACXgc,EAAA5Q,EAAA6Q,cAAA,OAAK5b,MAAO,CAACoiE,WAAW,MAAOC,WAAW,SAAO,gBACjD1mD,EAAA5Q,EAAA6Q,cAAA,MAAIjc,UAAU,OAAOK,MAAO,CAACsiE,cAAe,IAAKF,WAAY,QACzDzmD,EAAA5Q,EAAA6Q,cAAA,yFAGAD,EAAA5Q,EAAA6Q,cAAA,iLAGAD,EAAA5Q,EAAA6Q,cAAA,4EAKRD,EAAA5Q,EAAA6Q,cAACvB,EAAA,KAAI,CAAC3gB,MAAOhC,KAAKo2D,KAAMtvD,KAAM,CAACwb,OAAOtiB,KAAK4sE,UAAWngE,QAAQzM,KAAKihE,cAa/DjhE,KAAA8iB,YAAc,EAAOgoD,EAAmBprE,IAAkBqtE,GAAA/sE,UAAA,qBAE9D,IAAIgtE,EAAchtE,KAAKP,IAAI23C,UAAU,QAAS,iBAC1Cv2C,QAAYmsE,EAAYttE,OAAO0iC,MAAM,CAACxvB,GAAIlT,EAAOkT,GAAGtP,GAAI2zC,WAAYv3C,EAAOQ,OAC3EopE,EAA2B,GAC/B,IAAK,IAAI53C,KAAO7wB,EAAIA,IAAK,CACrB,IAAIw/B,GAACA,EAAE5oB,KAAEA,EAAIytD,KAAEA,EAAIqB,QAAEA,GAAW70C,EAC5Bu7C,EAAO3D,EAAMjpC,QACJ9+B,IAAT0rE,IAAoB3D,EAAMjpC,GAAM4sC,EAAO,IAC3CA,EAAKzmE,KAAK,CACNiR,KAAMzX,KAAKktE,SAASz1D,GACpBytD,KAAMllE,KAAKmtE,SAASjI,GACpBqB,QAASvmE,KAAKotE,YAAY7G,KAGlCvmE,KAAK8nB,UAAU0+C,GAAY,CAAC9mE,OAAOA,EAAQ4pE,MAAMA,OAE7CtpE,KAAAqtE,WAAa,EAAOvC,EAAmBh9D,IAAgBi/D,GAAA/sE,UAAA,qBAC3DA,KAAKstE,cAAcx/D,MAGf9N,KAAAstE,cAAgB,CAAOx/D,GAAgBi/D,GAAA/sE,UAAA,qBAC3C,IAAIgtE,EAAchtE,KAAKP,IAAI23C,UAAU,QAAS,iBAC1Cv2C,QAAYmsE,EAAYttE,OAAO0iC,MAAM,CAACxvB,GAAI9E,EAAM8E,GAAGtP,GAAI2zC,WAAYnpC,EAAM5N,OACzEopE,EAA2B,GAC/B,IAAK,IAAI53C,KAAO7wB,EAAIA,IAAK,CACrB,IAAIw/B,GAACA,EAAE5oB,KAAEA,EAAIytD,KAAEA,EAAIqB,QAAEA,GAAW70C,EAC5Bu7C,EAAO3D,EAAMjpC,QACJ9+B,IAAT0rE,IAAoB3D,EAAMjpC,GAAM4sC,EAAO,IAC3CA,EAAKzmE,KAAK,CACNiR,KAAMzX,KAAKktE,SAASz1D,GACpBytD,KAAMllE,KAAKmtE,SAASjI,GACpBqB,QAASvmE,KAAKotE,YAAY7G,KAGlCvmE,KAAK8nB,UAAU0+C,GAAY,CAAC9mE,OAAOoO,EAAOw7D,MAAMA,OAG5CtpE,KAAAutE,cAAgB,EAACzmE,EAAUuB,KAC/B,IAAIhI,KAACA,EAAIosB,MAAEA,EAAKlL,KAAEA,GAAQza,EAC1B,OAAOmd,EAAA5Q,EAAA6Q,cAAA,OAAKjc,UAAU,gCACjBgc,EAAA5Q,EAAA6Q,cAACvB,EAAA,GAAE,CAACziB,KAAMG,EAAMktC,UAAU,EAAMtlC,UAAWwkB,aAAmBlL,KAI/DvhB,KAAAwtE,aAAe,EAAC1mE,EAAU8L,KAC9B,IACI66D,GADAvtE,KAACA,GAAQ4G,EAEb,OAAQ5G,GACJ,QAAS,OACT,IAAK,qBAAsButE,EAAIvD,GAAW,MAC1C,IAAK,oBAAqBuD,EAAIrC,GAElCprE,KAAK8nB,UAAU2lD,EAAG76D,KAGd5S,KAAA0tE,SAAW,EAAC96D,EAAOvK,KACvB,IAAInI,KAACA,EAAIk+B,MAAEA,EAAKmC,QAAEA,EAAO6C,KAAEA,EAAID,MAAEA,EAAKT,QAAEA,EAAOW,UAAEA,EAASC,SAAEA,EAAQJ,OAAEA,GAAUtwB,EAC5E+6D,EAAa3tE,KAAK6iB,aAClBgoD,EAAuB,CACvB,CAAC7oE,MAAOo8B,EAAOv2B,KAAM,OAAQqsD,UAAWl0D,KAAK8iB,aAC7C,CAAC9gB,MAAOkhC,EAAQr7B,KAAM,QAASqsD,UAAWl0D,KAAKqtE,WAAY31B,WAAY13C,KAAK4tE,aAC5E,CAAC5rE,MAAOu+B,EAAS14B,KAAM,SAAUqsD,UAAWl0D,KAAK8iB,aACjD,CAAC9gB,MAAOohC,EAAMv7B,KAAM,MAAOqsD,UAAWl0D,KAAK8iB,aAC3C,CAAC9gB,MAAOmhC,EAAOt7B,KAAM,OAAQqsD,UAAWl0D,KAAK8iB,aAC7C,CAAC9gB,MAAO0gC,EAAS76B,KAAM,QAASqsD,UAAWl0D,KAAK8iB,aAChD,CAAC9gB,MAAOqhC,EAAWx7B,KAAM,UAAWqsD,UAAWl0D,KAAK8iB,aACpD,CAAC9gB,MAAOshC,EAAUz7B,KAAM,UAAWqsD,UAAWl0D,KAAK8iB,cASvD,OAAOmB,EAAA5Q,EAAA6Q,cAAA,OAAKvd,IAAKzG,EAAM+H,UAAU,QAC7Bgc,EAAA5Q,EAAA6Q,cAAA,OAAKjc,UAAU,yBAAyB/H,GACxC+jB,EAAA5Q,EAAA6Q,cAACvB,EAAA,KAAI,CAAC1a,UAAU,OACZjG,MATa,CACjB,CAAC9B,KAAK,qBAAsBG,KAAM,MAAOosB,MAAO,eAAgBlL,KAAM,8CACtE,CAACrhB,KAAM,oBAAqBG,KAAM,MAAOosB,MAAO,eAAgBlL,KAAM,mCAQlEza,KAAM,CACFH,IAAMG,GAAWA,EAAK5G,KACtBoiB,OAAQtiB,KAAKutE,cACb9gE,QAAS3F,GAAW9G,KAAKwtE,aAAa1mE,EAAM8L,MAGnDi4D,EAAOziE,IAAI0iE,IACR,IAAI9oE,MAACA,EAAK6F,KAAEA,EAAIqsD,UAAEA,EAASxc,WAAEA,GAAcozB,EACvCzqE,EAAOykE,GAAA,YAAYj9D,GACvB,OAAO7F,GAASA,EAAM4D,OAAO,GACzBqe,EAAA5Q,EAAA6Q,cAACvB,EAAA,KAAI,CAAChc,IAAKkB,EAAMI,UAAU,OACvBoC,OAAQ4Z,EAAA5Q,EAAA6Q,cAACvB,EAAA,MAAK,CAAC1a,UAAU,4BAA4BjI,KAAKJ,IAAIiI,IAAOA,GACrE7F,MAAOA,EACP8E,KAAM,CACFH,IAAMG,GAAWA,EAAK5G,KACtBoiB,OAAO,CAACxb,EAAUuB,KAAgBqvC,GAAci2B,GAAY7mE,EAAMzG,GAClEoM,QAAU3F,GAAcotD,EAAU4W,EAAOhkE,WA6BzD9G,KAAA6sE,QAAU,CAAClsC,GAAY1c,EAAA5Q,EAAA6Q,cAACxB,EAAA,KAAI,CAACrY,OAAQs2B,EAAIzgC,KAAO,4BAEhDygC,EAAInuB,IAAIpK,IAAI,CAACb,EAAGc,IAAUrI,KAAK0tE,SAASnmE,EAAGc,MAhUnC7I,+DACNQ,KAAK6tE,mBACL7tE,KAAK8tE,eACX9tE,KAAKoiB,SAAS6B,EAAA5Q,EAAA6Q,cAAClkB,KAAK8sE,SAAQ,SAGlBttE,wDACV,IAAIsK,EAAO4Y,EAAA,UAAU5Y,KACjBjJ,QAAoBikE,GAAA,UAAU37D,IAAI,iBAAkB,CAACW,KAAMA,IAC/D9J,KAAKo2D,KAAOv1D,EAAI,GAChB,IAAI2R,EAAY3R,EAAI,GAEpB,IAAK,IAAI8/B,KAAO3gC,KAAKo2D,KACjBz1B,EAAInuB,IAAM,GAEd,IAAK,IAAII,KAAMJ,EAAK,CAChB,IAAImuB,EAAM3gC,KAAKo2D,KAAK9uD,KAAKC,GAAKA,EAAEjE,KAAOsP,EAAG+tB,UAC9Bp/B,IAARo/B,IACJA,EAAInuB,IAAIhM,KAAKoM,GACb5S,KAAK+tE,cAAcn7D,OAIbpT,sDACV,IAAIwuE,EAAgBhuE,KAAKP,IAAI23C,UAAU,QAAS,YAC5Cv2C,QAAoBmtE,EAActuE,OAAO0iC,WAAM7gC,GACnDvB,KAAKynE,MAAQ5mE,EAAW,MACxBb,KAAK+nE,cAAgBlnE,EAAkB,aACvCb,KAAKgoE,MAAQnnE,EAAsB,iBACnCb,KAAK4nE,SAAW/mE,EAAc,SAC9Bb,KAAKktE,SAAW,GAChBltE,KAAKmtE,SAAW,GAChBntE,KAAKiuE,iBAAmB,GACxBjuE,KAAKotE,YAAc,GACnB,IAAK,IAAI9H,KAAgBtlE,KAAK+nE,cAC1BzC,EAAa0C,MAAQ,GACrB1C,EAAamC,MAAQ,GACrBznE,KAAKiuE,iBAAiB3I,EAAahiE,IAAMgiE,EAE7C,IAAK,IAAIJ,KAAQllE,KAAKynE,MAClBvC,EAAK6C,cAAgB,GACrB7C,EAAK0C,SAAW,GAChB5nE,KAAKmtE,SAASjI,EAAK5hE,IAAM4hE,EAE7B,IAAK,IAAIqB,KAAWvmE,KAAK4nE,SACrBrB,EAAQkB,MAAQ,GAChBznE,KAAKotE,YAAY7G,EAAQjjE,IAAMijE,EAEnC,IAAK,IAAI9uD,KAAQzX,KAAKgoE,MAAO,CACzBhoE,KAAKktE,SAASz1D,EAAKnU,IAAMmU,EACzB,IAAI6tD,EAAetlE,KAAKiuE,iBAAiBx2D,EAAKE,YACzBpW,IAAjB+jE,IAGJ7tD,EAAK6tD,aAAeA,EACpBA,EAAa0C,MAAMxhE,KAAKiR,IAG5B,IAAK,IAAIyuD,KAAoBrlE,EAAsB,iBAAG,CAClD,IAAKqkE,KAAKgJ,EAAI5I,aAAa6I,GAAMjI,EAC7BhB,EAAOllE,KAAKmtE,SAASe,GACrB5I,EAAetlE,KAAKiuE,iBAAiBE,GACzCjJ,EAAK6C,cAAcvhE,KAAK8+D,GACxBA,EAAamC,MAAMjhE,KAAK0+D,GAG5B,IAAK,IAAIe,KAAeplE,EAAiB,YAAG,CACxC,IAAK0lE,QAAQ6H,EAAKlJ,KAAKgJ,GAAMjI,EACzBM,EAAUvmE,KAAKotE,YAAYgB,GAC3BlJ,EAAOllE,KAAKmtE,SAASe,GACzB3H,EAAQkB,MAAMjhE,KAAK0+D,GACnBA,EAAK0C,SAASphE,KAAK+/D,MAInB/mE,cAAcoT,GAClB,IAAI6nB,EAAW7nB,EAAG6nB,SAClB,GAAiB,OAAbA,EAAmB,OACvB,IAEIxzB,EAFAonE,EAAM5zC,EAAS7oB,MAAM,MACrBzK,EAAMknE,EAAIzoE,OAEd,IAAK,IAAIsB,EAAE,EAAGA,EAAEC,GAAM,CAClB,OAAQknE,EAAInnE,IACR,IAAK,OAAQD,EAAIjH,KAAKsuE,YAAY17D,EAAGwrB,MAAQ,GAAIiwC,EAAKnnE,EAAG0L,GAAK,MAC9D,IAAK,MAAO3L,EAAIjH,KAAKsuE,YAAY17D,EAAGwwB,KAAO,GAAIirC,EAAKnnE,EAAG0L,GAAK,MAC5D,IAAK,OAAQ3L,EAAIjH,KAAKsuE,YAAY17D,EAAGuwB,MAAQ,GAAIkrC,EAAKnnE,EAAG0L,GAAK,MAC9D,IAAK,UAAW3L,EAAIjH,KAAKsuE,YAAY17D,EAAGywB,UAAY,GAAIgrC,EAAKnnE,EAAG0L,GAAK,MACrE,IAAK,UAAW3L,EAAIjH,KAAKsuE,YAAY17D,EAAG0wB,SAAW,GAAI+qC,EAAKnnE,EAAG0L,GAAK,MACpE,IAAK,QAAS3L,EAAIjH,KAAKsuE,YAAY17D,EAAG8vB,QAAU,GAAI2rC,EAAKnnE,EAAG0L,GAAK,MACjE,IAAK,SAAU3L,EAAIjH,KAAKsuE,YAAY17D,EAAG2tB,QAAU,GAAI8tC,EAAKnnE,EAAG0L,GAAK,MAClE,IAAK,QAAS3L,EAAIjH,KAAKuuE,UAAU37D,EAAGswB,OAAS,GAAImrC,EAAKnnE,EAAG0L,GAAK,MAC9D,QAEI,YADAgT,MAAM,wBAA0ByoD,EAAInnE,IAG5CA,EAAID,GAIJzH,YAAYi7B,EAAmB+zC,EAAgBvnE,EAAU2L,GAC7D,IAAIzL,EAAMqnE,EAAM5oE,OACZsB,EAAID,EAAE,EACV,KAAOC,EAAEC,EAAKD,IAAK,CACf,IAAIqzB,EAAKi0C,EAAMtnE,GACf,KAAIqzB,EAAG30B,OAAS,GAQX,OAAOsB,EAAE,EARK,CACf,IAAIhH,EAAOq6B,EACXE,EAASj0B,KAAK,CACVoM,GAAIA,EACJ1S,KAAMA,EACNkgC,YAAQ7+B,KAKpB,OAAO2F,EAGH1H,UAAU0jC,EAAgBsrC,EAAgBvnE,EAAU2L,GACxD,IAAIzL,EAAMqnE,EAAM5oE,OACZsB,EAAID,EAAE,EACV,KAAOC,EAAEC,EAAKD,IAAK,CACf,IAAIqzB,EAAKi0C,EAAMtnE,GACf,KAAIqzB,EAAG30B,OAAS,GAWX,OAAOsB,EAAE,EAXK,CACf,IAAIyK,EAAiB4oB,EAAG3oB,MAAM,MAC1B1R,EAAOyR,EAAM,GACjBA,EAAM,GAAK,IACX,IAAI7D,EAAc,CACd8E,GAAIA,EACJ1S,KAAMA,EACNkgC,OAAQzuB,GAEZuxB,EAAO18B,KAAKsH,IAIpB,OAAO5G,EAGL1H,oBAAoBsO,EAAakjC,EAAkBy4B,4CACrD,IAAIgF,EAAyBzuE,KAAKP,IAAI23C,UAAU,SAAU,qBACtDxkC,GAACA,EAAE1S,KAAEA,GAAQ4N,QACX2gE,EAAuBplD,OAAO,CAChCzW,GAAIA,EAAGtP,GACP2zC,WAAY/2C,EACZwuE,OAAQ19B,EACRg3B,MAAOyB,MAeTjqE,eAAeoT,4CAEjB,aADiB5S,KAAKuzC,MAAMg5B,GAAa7pD,EAAA,UAAU5Y,QAsB/CtK,aAAaE,EAAeW,GAChC,IAAIH,KAACA,GAAQR,EACb,OAAOukB,EAAA5Q,EAAA6Q,cAAA,OAAKjc,UAAU,gCAAgC5H,WAAcH,GAEhEV,YAAYsO,EAAazN,GAC7B,IAAIH,KAACA,EAAIkgC,OAAEA,GAAUtyB,EACrB,OAAOmW,EAAA5Q,EAAA6Q,cAAA,OAAKjc,UAAU,gCACjB5H,WAAcH,MAAM+jB,EAAA5Q,EAAA6Q,cAACvB,EAAA,MAAK,cAAU7U,EAAMsyB,OAAO/oB,KAAK,mRCvN5D,MAAMs3D,WAAsB7J,GAAA,IAC/BtlE,cACIK,WAAM0B,EAAW,aAAc,EAAG,OAAGA,EAAWqjE,IAGpD5kE,KAAAI,MAAQ,2BACRJ,KAAAK,KAAO,UAGGb,kBAKMA,6DAENQ,KAAKy6B,SAAS0J,iBAGR3kC,+DACNQ,KAAKO,aACXP,KAAK4uE,MAAO,CACR,GACA,IAAI9J,GAAA,MAAM,IAAI6H,GAAW3sE,KAAMA,KAAKJ,MACpC,GACAI,KAAKonB,aAAa,MAAO,cACzBpnB,KAAKonB,aAAa,MAAO,eACzBpnB,KAAKonB,aAAa,MAAO,oBACzB,GACApnB,KAAKonB,aAAa,OAAQ,UAC1BpnB,KAAKonB,aAAa,OAAQ,QAC1BpnB,KAAKonB,aAAa,OAAQ,WAC1BpnB,KAAKonB,aAAa,OAAQ,iBAE9BpnB,KAAK8nB,UAAU+mD,OAKvB,MAAMA,WAAsBnsD,EAAA,MAA5BljB,kCAKYQ,KAAAqmB,UAAY,EAAChE,EAAYha,IACtBga,EAAKC,OAAO,aAGbtiB,KAAAmtC,QAAU,MAChB,IAAIyhC,MAACA,EAAKxuE,MAAEA,GAASJ,KAAK6D,WAC1B,OAAO6L,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQjK,EAAOsM,OAAQ,QAChCgD,EAAA,cAACiT,EAAA,KAAI,CAAC3gB,MAAO4sE,EAAO9nE,KAAM,CAACwb,OAAQtiB,KAAKqmB,gBAX1C7mB,gDACFQ,KAAKoiB,SAASpiB,KAAKmtC,sRCnCpB,SAAS2hC,GAAapqE,GACzB,OAAO,SAAS2wB,EAAkB3d,GAC9B,OAAO,IAAI/J,QAAc,CAACC,EAASC,KAC/B6U,EAAA,IAAIlc,KAAKkJ,EAAA,cAACq/D,GAAUjvE,OAAAqI,OAAA,CAACyF,QAASA,EAASynB,KAAMA,EAAM3d,OAAQA,GAAYhT,QAcnF,MAAMqqE,WAAmBr/D,EAAA,UAErBlQ,YAAYkF,GACR7E,MAAM6E,GACN1E,KAAKoF,MAAQ,CACTpD,MAAO,MAEXhC,KAAKk0D,UAAYl0D,KAAKk0D,UAAUjvD,KAAKjF,MACrCA,KAAKmiB,SAAWniB,KAAKmiB,SAASld,KAAKjF,MAEjCR,6DACF,IAAI61B,KAACA,EAAIwqC,eAAEA,EAAcnoD,OAAEA,GAAU1X,KAAK0E,MAC1C1E,KAAK8E,SAAS,CACV9C,MAAOwzB,MAAMC,QAAQoqC,GAAiBA,QAAuBA,EAAenoD,EAAQ,QAG5FlY,UAAUsH,GACN,IAAI8G,QAACA,GAAW5N,KAAK0E,MACrBkJ,EAAQ9G,GACR4b,EAAA,IAAI3b,MAEFvH,SAASmH,4CAGX,IAAIk5D,eAACA,EAAcnoD,OAAEA,GAAU1X,KAAK0E,MACpC,GAA8B,oBAAnBm7D,EAA+B,CACtC,IAAIh/D,QAAYg/D,EAAenoD,EAAQ/Q,GACvC3G,KAAK8E,SAAS,CAAC9C,MAAOnB,OAG9BrB,SACI,IAAIgqB,QAACA,EAAOkI,IAAEA,EAAGouC,kBAAEA,GAAqB9/D,KAAK0E,MAC7C,OAAOgL,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQmf,EAASxkB,KAAK,SAC/B0K,EAAA,qBAAKzH,UAAU,aACXyH,EAAA,cAACiT,EAAA,UAAS,CAAC1a,UAAU,OACjBka,SAAUniB,KAAKmiB,SACfS,YAAak9C,EACbxzC,UAAW,OAEnB5c,EAAA,cAACiT,EAAA,KAAI,CAAC3gB,MAAOhC,KAAKoF,MAAMpD,MAAO8E,KAAM,CAAC2F,QAAQzM,KAAKk0D,UAAW5xC,OAAOoP,iRC1DjF,MAAMs9C,GAAiBloE,IACnB,IAAI05B,YAACA,EAAW0+B,MAAEA,EAAKC,GAAEA,GAAMr4D,EAC/B,OAAO4I,EAAA,cAAAA,EAAA,cAAG8wB,MAAc0+B,MAAQC,IAyD9B8P,IAhBYH,GAvCqB,CACnCtlD,QAAS,iCACTs2C,kBAAmB,iCACnBD,eAAgB,CAAOnoD,EAAY/Q,IAAeuoE,QAAD3tE,OAAA,qBAE7C,aADM86D,EAAM7E,IAAIyC,aAAajzC,MAAMrgB,GAC5B01D,EAAM7E,IAAIyC,aAAaj4D,QAElCmtE,eAAgB,IAAYD,QAAD3tE,OAAA,2BACjB86D,EAAM7E,IAAIyC,aAAan4B,SAEjCpQ,IAAK,CAAC5qB,EAAsBuB,IACjBqH,EAAA,qBAAKzH,UAAU,aAAYyH,EAAA,cAACs/D,GAAalvE,OAAAqI,OAAA,GAAKrB,OA4CjC,CACxB,CAAC5G,KAAM,OAAQ2H,KAAM,SAAUykB,UAAW,IAAKzB,UAAU,GACzD,CAAC3qB,KAAM,cAAe2H,KAAM,SAAUykB,UAAW,KACjD,CAACpsB,KAAM,MAAO2H,KAAM,SAAUykB,UAAW,KACzC,CAACpsB,KAAM,SAAU2H,KAAM,WACvB,CAAC3H,KAAM,SAAU2H,KAAM,MACvB,CAAC3H,KAAM,OAAQ2H,KAAM,SACrB,CAAC3H,KAAM,SAAU2H,KAAM,YAGpB,MAAeunE,WAAqB1sD,EAAA,MAA3CljB,kCACYQ,KAAA6/D,eAAiB,EAAOnoD,EAAY/Q,IAA8BuoE,GAAAlvE,UAAA,qBAEtE,aADMq8D,EAAM7E,IAAIyC,aAAajzC,MAAMrgB,GAC5B01D,EAAM7E,IAAIyC,aAAaj4D,SAG1BhC,KAAAmvE,eAAiB,KAA0BD,GAAAlvE,UAAA,2BACzCq8D,EAAM7E,IAAIyC,aAAan4B,UAGzB9hC,KAAAqmB,UAAY,EAACvf,EAAsBuB,IAChCqH,EAAA,qBAAKzH,UAAU,aAAYyH,EAAA,cAACs/D,GAAalvE,OAAAqI,OAAA,GAAKrB,MAGjD9G,KAAAqvE,aAAe,EAACxsB,EAAiB3iD,EAAagP,IAC3C,IAAIvB,QAAgB,CAACC,EAASC,KACjC6U,EAAA,IAAIlc,KAAKkJ,EAAA,cAACiwD,GAAU,CAChBn2C,QAAQ,iCACRs2C,kBAAkB,iCAClBD,eAAgB7/D,KAAK6/D,eACrBsP,eAAgBnvE,KAAKmvE,eACrBz9C,IAAK1xB,KAAKqmB,UACV9iB,WAAauD,GAAyBA,EAAKxD,GAC3CsK,QAASA,EAAS8J,YAAQnW,IAC1B,KACIsM,SAKR7N,KAAAsvE,kBAAoB,CAACC,GAClB7/D,EAAA,cAACsvD,GAAU,CAAC17D,GAAIisE,KAGnBvvE,KAAA6mD,SAAoB,CACxB7kD,MAAO,CACH9B,KAAM,CAACumD,OAAQ,OAAQrmD,MAAO,gBAC9BogC,YAAa,CAACimB,OAAQ,WAAYrmD,MAAO,eAAMqxB,KAAM,GACrDlnB,IAAK,CAACk8C,OAAQ,OAAQrmD,MAAO,MAAOwiB,YAAa,6BACjDg8C,OAAU,CAACnY,OAAQ,WAAYrmD,MAAO,gBACtCg5D,OAAQ,CAAC3S,OAAQ,KAAMrmD,MAAO,qBAAOwlD,OAAQ5lD,KAAKqvE,aAAc9qB,QAASvkD,KAAKsvE,mBAC9EjvE,KAAM,CAAComD,OAAQ,QAASrmD,MAAO,sBAC/BipB,OAAQ,CAACo9B,OAAQ,SAAUrmD,MAAO,eAAM6H,UAAW,qBAOjDjI,KAAAQ,SAAW,CAAOC,GAAqCyuE,GAAAlvE,UAAA,2BACvDA,KAAK6D,WAAWo0D,QAAQx3D,GAC9BiiB,EAAA,IAAI3b,SAGA/G,KAAAumD,cAAgB,EAAOrmD,EAAa2iD,IAAqBqsB,GAAAlvE,UAAA,qBAC7D,IAAIyT,KAACA,GAAQovC,EACTliB,EAAMtqB,EAAAhD,EAAEa,MAAMlU,KAAK6D,WAAW88B,KAClCtqB,EAAAhD,EAAE8U,MAAMwY,EAAKltB,SACPzT,KAAK6D,WAAWo0D,QAAQt3B,GAC9Bje,EAAA,IAAI3b,SAGE/G,KAAA0B,KAAO5B,OAAAwP,EAAA,EAAAxP,CAAS,IAOf4P,EAAA,cAACgT,EAAA,KAAI,CAAC2pC,eAAgB,EACzBpkD,UAAU,MACVgzB,OAAQg0C,GACRpoB,SAAU7mD,KAAK6mD,SACfoF,SAAUjsD,KAAK4xB,WACf20B,cAAevmD,KAAKumD,iBA5BtB/mD,gDACFQ,KAAKoiB,SAASpiB,KAAK8R,SAgCpB,MAAM09D,WAAiBJ,GAA9B5vE,kCAEcQ,KAAA8R,KAAO,MACb,IAAI6uB,IAACA,GAAO3gC,KAAK6D,YACb3D,KAACA,GAAQygC,EACb,OAAOjxB,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQ,qBAAanK,EAAM8E,KAAK,SACzC0K,EAAA,cAAC1P,KAAK0B,KAAI,SALlBkwB,iBAAsB,OAAO5xB,KAAK6D,WAAW88B,KAU1C,MAAM8uC,WAAgBL,GAA7B5vE,kCAEcQ,KAAA8R,KAAO,KACNpC,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQ,kBAASrF,KAAK,SAC/B0K,EAAA,cAAC1P,KAAK0B,KAAI,QAHlBkwB,iBAAsB,MAAO,8QCpK1B,MAAM89C,WAAiBhtD,EAAA,MAA9BljB,kCAIYQ,KAAAi6C,QAAU,MACdj6C,KAAK8nB,UAAU2nD,MAEXzvE,KAAA8R,KAAO,MACX,IAAI69D,QAACA,EAAOC,aAAEA,GAAgB5vE,KAAK6D,WAC/B6X,EAAQhM,EAAA,wBAAQzH,UAAU,2BAA2BwE,QAAS,IAAIzM,KAAKi6C,WAAWvqC,EAAA,cAACiT,EAAA,GAAE,CAACziB,KAAK,UAC/F,OAAOwP,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAO,MAAMqR,MAAOA,GAC7BhM,EAAA,cAACiT,EAAA,KAAI,CAAC3gB,MAAO2tE,EAAS7oE,KAAM,CAACwb,OAAQtiB,KAAK6vE,OAAQpjE,QAASmjE,QAG3D5vE,KAAA6vE,OAAS,CAAC/oE,IACd,IAAI5G,KAACA,EAAIsgC,YAAEA,EAAWngC,KAAEA,EAAIkK,IAAEA,EAAGyI,SAAEA,GAAYlM,EAC3C6lB,EAAOjd,EAAA,cAACiT,EAAA,MAAK,CAACkB,KAAK,MAAKnU,EAAA,cAACgT,EAAA,MAAK,CAACzU,IAAK5N,KACpCqb,EAAQhM,EAAA,qBAAKzH,UAAU,+BACtBsC,GAAO,IAAImF,EAAA,yBACXsD,GAEL,OAAOtD,EAAA,cAACiT,EAAA,IAAG,CAAC1a,UAAU,gCAClB0kB,KAAMA,EAAMjR,MAAOA,GACnBhM,EAAA,qBAAKzH,UAAU,QACXyH,EAAA,yBAAKA,EAAA,uBAAIxP,IACTwP,EAAA,yBAAKA,EAAA,cAACiT,EAAA,MAAK,KAAE6d,QAxBnBhhC,KAAKuD,4CACP/C,KAAKoiB,SAASpiB,KAAK8R,4lBCEpB,MAAMg+D,WAAqBptD,EAAA,MAAlCljB,kCAQYQ,KAAAmiB,SAAW,CAAOxb,GAAeopE,GAAA/vE,UAAA,qBAGrCA,KAAKwS,UAAYxS,KAAK6D,WAAWu0D,SAASzxD,EAF1B,EACD,QAIX3G,KAAA8R,KAAOhS,OAAAwP,EAAA,EAAAxP,CAAS,KACpB,IAAIuK,EAASqF,EAAA,cAACiT,EAAA,UAAS,CAAC1a,UAAU,aAC9Bka,SAAUniB,KAAKmiB,SACfS,YAAY,6BACZ0J,UAAW,MACf,OAAO5c,EAAA,cAACgT,EAAA,KAAI,CAAC1d,KAAK,QAAQqF,OAAQA,GAC9BqF,EAAA,cAACiT,EAAA,KAAI,CAAC3gB,MAAOhC,KAAKwS,IAAK1L,KAAM,CAACwb,OAAQtiB,KAAK0xB,IAAKjlB,QAASzM,KAAK6D,WAAWmsE,WAIzEhwE,KAAA0xB,IAAM,CAAC9e,IACX,IAAI+E,MAACA,EAAKzX,KAAEA,EAAIsgC,YAAEA,GAAe5tB,EACjC,OAAOlD,EAAA,cAACiT,EAAA,IAAG,CAAC1a,UAAU,YAAYyT,MAAO8kB,GACrC9wB,EAAA,yBAAMiI,QAAUzX,MAxBlBV,gDACFQ,KAAKwS,UAAYxS,KAAK6D,WAAWosE,WACjCjwE,KAAKoiB,SAASpiB,KAAK8R,SAJXo+D,GAAA,CAAXzmD,EAAA,8BAgCL,IAAa0mD,GAAb,cAA4BzgE,EAAA,UAD5BlQ,kCAEgBQ,KAAAovD,aAAuB,EAE3BpvD,KAAAqvD,SAAW,EAACvoD,EAAmBsU,EAAoBg0C,KACvDpvD,KAAKovD,YAAcA,IAEfpvD,KAAA0xB,IAAM,CAAC5qB,IACX,IAAI5G,KAACA,EAAI4J,KAAEA,EAAI02B,YAAEA,GAAe15B,EAChC,OAAO4I,EAAA,cAACiT,EAAA,IAAG,CAAC1a,UAAU,MAAMyT,MAAOhM,EAAA,uBAAOzH,UAAU,cAAcu4B,IAC9D9wB,EAAA,cAACuuD,GAAQ,CAAC36D,GAAIwG,QAAU5J,KAGxBF,KAAAowE,WAAa,MACjB,GAAkB,OAAdpwE,KAAKquB,KAAe,OACxB,IAAImgC,cAACA,GAAiBxuD,KAAKquB,UACL9sB,IAAlBitD,GACyB,IAAzBA,EAAc5oD,QAClBy2D,EAAM7E,IAAIpB,KAAKmC,UACX/J,EAAcpmD,IAAIb,IACP,CAACjE,GAAGiE,EAAEjE,GAAIwT,OAAO,CAAC,SAE7B,KAERtX,SACI,IAAI6wE,EAAWrwE,KAAKovD,YAChB,CAAC3iC,MAAM,SAAUhgB,QAAQzM,KAAKowE,WAAY/vE,KAAK,QAASkhB,KAAK,gBAC7D,CAACkL,MAAM,UAAWhgB,QAAQ,IAAIiW,EAAA,IAAIlc,KAAKkJ,EAAA,cAAC4gE,GAAG,OAAKjwE,KAAK,OAAQkhB,KAAK,gBAMlEgvD,EAAa7gE,EAAA,qBAAKzH,UAAU,sCALtB,CAAChB,GAAIyI,EAAA,wBACXzH,UAAW4U,IAAW,MAAO,eAAe5V,EAAEwlB,MAAO,UACrDhgB,QAASxF,EAAEwF,SACXiD,EAAA,mBAAGzH,UAAW,SAAWhB,EAAE5G,WAAU4G,EAAEsa,qBAE2BivD,CAAIH,IAC1E,OAAO3gE,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAO,kBAChBqF,EAAA,cAACiT,EAAA,KAAI,CAAC6I,IAAK6C,GAAMruB,KAAKquB,KAAKA,EAAMhkB,OAAQkmE,EACrCvuE,MAAOq6D,EAAM7E,IAAIpB,KAAK5jD,IACtB1L,KAAM,CAACwb,OAAQtiB,KAAK0xB,IAAK29B,SAAUrvD,KAAKqvD,eAnCxC6gB,GAAA,CAAXzmD,EAAA,sCADQ0mD,GAAMD,GAAA,CADlB5gE,EAAA,GACY6gE,IA0Cb,IAAMG,GAAN,cAAkB5gE,EAAA,UADlBlQ,kCAEIQ,KAAAmiB,SAAW,CAAOxb,GAAeopE,GAAA/vE,UAAA,2BACvBq8D,EAAM7E,IAAIpB,KAAKgC,SAASzxD,MAKlC3G,KAAA0xB,IAAM,CAAC9e,IACH,IAEI2tC,EAAgB9zC,EADhBwP,EAAK,CAAC,MAAO,UAYjB,YAbmE1a,IAAjD86D,EAAM7E,IAAIpB,KAAK5jD,IAAIlL,KAAK+L,GAAKA,EAAE/P,KAAOsP,EAAGtP,KAIvD2Y,EAAGzV,KAAK,eACRiG,EAAU,KAAIzM,KAAKywE,OAAO79D,GAAI,IAC9B2tC,EAAa,uBAGbtkC,EAAGzV,KAAK,eACRiG,EAAU,KAAIzM,KAAKywE,OAAO79D,GAAI,IAC9B2tC,EAAa7wC,EAAA,0BAAMA,EAAA,mBAAGzH,UAAU,kCAE7ByH,EAAA,qBAAKzH,UAAU,0CAClByH,EAAA,qBAAKzH,UAAU,qBAAqB2K,EAAG1S,KAAO,MAAQ0S,EAAG4tB,aACzD9wB,EAAA,wBAAQzH,UAAU,WAAUyH,EAAA,wBAAQzH,UAAW4U,IAAWZ,GAAKxP,QAASA,GAAU8zC,OAnB1F/gD,OAAOoT,EAAiB3N,GACpBo3D,EAAM7E,IAAIpB,KAAKmC,UAAU,CAAC,CAACj1D,GAAGsP,EAAGtP,GAAIwT,OAAO,CAAC,OAAQ7R,GAqBzDzF,SACI,IAAI6K,EAASqF,EAAA,cAACiT,EAAA,UAAS,CAAC1a,UAAU,aAC9Bka,SAAUniB,KAAKmiB,SACfS,YAAY,6BACZ0J,UAAW,MACf,OAAO5c,EAAA,cAACgT,EAAA,KAAI,CAAC1d,KAAK,QAAQqF,OAAQA,GAC9BqF,EAAA,cAACiT,EAAA,KAAI,CAAC3gB,MAAOq6D,EAAM7E,IAAIpB,KAAK4B,YAAalxD,KAAM,CAACwb,OAAQtiB,KAAK0xB,KAAMqvB,QAAS,UAhClFuvB,GAAGJ,GAAA,CADR5gE,EAAA,GACKghE,8QC7EC,MAAMI,WAAgBhuD,EAAA,MAA7BljB,kCAMYQ,KAAA2wE,SAAW,KAAYC,GAAA5wE,UAAA,2BACrBA,KAAK8nB,UAAU0nD,OAIjBxvE,KAAA6wE,WAAa,KAAYD,GAAA5wE,UAAA,sBACgB,IAAzCyH,QAAQ,kKACFzH,KAAK6D,WAAWitE,YACtBpuD,EAAA,IAAI3b,UAIJ/G,KAAA8R,KAAOhS,OAAAwP,EAAA,EAAAxP,CAAS,KACpB,IAAI6gC,IAACA,GAAO3gC,KAAK6D,YACbiG,KAACA,EAAI5J,KAAEA,EAAIsgC,YAAEA,EAAWngC,KAAEA,EAAI+4D,OAAEA,EAAMyE,UAAEA,EAASC,YAAEA,GAAen9B,EAClEse,EAAOvvC,EAAA,yBACPA,EAAA,yBAAM8wB,GACN9wB,EAAA,cAACkuD,EAAO,CAACE,YAAaA,EAAaD,UAAWA,KAE9CkT,EAAY,CAEZ,CAACvnD,QAAQ,kBAAStU,OAAOlV,KAAK2wE,SAAUtwE,KAAK,QAC7C,CAACmpB,QAAQ,eAAMtU,OAAOlV,KAAK6wE,WAAYxwE,KAAK,YAG5Cqb,EAAQhM,EAAA,cAACiT,EAAA,gBAAe,CAAC4d,QAASwwC,IAElCt/C,EAAc,CACd,GACA,CACI5pB,KAAM,YACNqwB,UAAWxoB,EAAA,cAACiT,EAAA,MAAK,CAACtiB,KAAMA,EAAM8nC,KAAMjoC,EAAMsgC,YAAaye,KAE3D,GACA,CACIp3C,KAAM,YACNzH,MAAO,qBACP83B,UAAWxoB,EAAA,qBAAKzH,UAAU,QAAOyH,EAAA,cAACuuD,GAAQ,CAAC36D,GAAIwG,EAAMk0D,QAAQ,MASjE,CACI59D,MAAO,MACPF,KAAM,MACN2H,KAAM,UAEV,CACIA,KAAM,YACNzH,MAAO,qBACP83B,UAAWxoB,EAAA,cAACsvD,GAAU,CAAC17D,GAAI81D,KAE/B,IAGA4X,EAAWthE,EAAA,wBAAQzH,UAAU,iCAAiCwE,QAAS,IAAIzM,KAAK8nB,UAAUgoD,KAAa,4BAG3G,OAAOpgE,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQ,SAAWnK,EAAMwb,MAAOA,GACzChM,EAAA,cAACiT,EAAA,SAAQ,CAAC8O,KAAMA,EAAMhxB,OAAQkgC,IAC9BjxB,EAAA,cAACiT,EAAA,IAAG,CAAC1a,UAAU,iBAAiByT,MAAOs1D,GAAQ,kBAG/CthE,EAAA,cAACiT,EAAA,KAAI,CAAC3gB,MAAOhC,KAAK6D,WAAW88D,WAAY75D,KAAM,CAACwb,OAAOtiB,KAAKigE,YAAaxzD,QAAQzM,KAAKixE,cAItFjxE,KAAAixE,QAAU,CAAC/Q,IACflgE,KAAK6D,WAAWmsE,KAAK9P,EAASttD,MAG1B5S,KAAAigE,YAAc,EAACC,EAAmB73D,KACtC,IAEI42C,EACAiyB,GAHAt+D,GAACA,EAAIu+D,YAAar6D,GAAUopD,GAC5BhgE,KAACA,EAAIsgC,YAAEA,EAAW12B,KAAEA,GAAQ8I,EAOhC,OAJIkE,GAAUA,EAAOlR,OAAS,IAC1BsrE,EAAWxhE,EAAA,cAAAA,EAAA,oBAAMoH,EAAOO,KAAK,YAE7BmpB,IAAaye,EAAOvvC,EAAA,qBAAKzH,UAAU,6BAA4Bu4B,IAC5D9wB,EAAA,cAACiT,EAAA,IAAG,CAAC1a,UAAU,+BAA+ByT,MAAOujC,GACxDvvC,EAAA,cAAC0uD,GAAQ,CAAC96D,GAAIwG,UAAY5J,MAAOgxE,KA1FnC1xE,gDAEFQ,KAAKoiB,SAASpiB,KAAK8R,mRCPpB,MAAMs/D,WAAmB1uD,EAAA,MAAhCljB,kCAkBYQ,KAAAmqE,eAAiB,CAAC32D,IACtB,IAAI0G,OAACA,GAAU1G,EACfxT,KAAKqxE,cAAcn3D,EAAOha,MAAQga,EAAO2f,UAGrC75B,KAAAsxE,WAAa,KAAYC,GAAAvxE,UAAA,qBAC7B,IAAIoX,EAAe,GACnB,GAAIpX,KAAKikC,SACL,IAAK,IAAI/8B,KAAKlH,KAAKqxE,eACe,IAA1BrxE,KAAKqxE,cAAcnqE,IAAakQ,EAAI5Q,KAAKU,SAG/ClH,KAAK6D,WAAWytE,WAAWtxE,KAAKkgE,SAASttD,GAAIwE,GACnDsL,EAAA,IAAI3b,SAGA/G,KAAAwxE,aAAe,KAAYD,GAAAvxE,UAAA,2BACzBA,KAAK6D,WAAW2tE,aAAaxxE,KAAKkgE,SAASttD,IACjD8P,EAAA,IAAI3b,SAGA/G,KAAA8R,KAAO,MACX,IAEI2/D,EAIAC,GANA9+D,GAACA,EAAEu+D,YAAEA,GAAenxE,KAAKkgE,UACzBvoD,MAACA,EAAKzX,KAAEA,EAAIsgC,YAAEA,EAAW1pB,OAAEA,GAAUlE,EAoBzC,OAlBoB,OAAhBu+D,QAAwC5vE,IAAhB4vE,IACxBM,EAAY/hE,EAAA,wBAAQzH,UAAU,gCAAgCwE,QAASzM,KAAKwxE,cAAY,6BAGxFxxE,KAAKikC,WACLytC,EAAkBhiE,EAAA,qBAAKzH,UAAU,QAE7BjI,KAAKikC,SAAS77B,IAAIb,IACd,IAAIsyB,EAAU75B,KAAKqxE,cAAc9pE,GACjC,OAAOmI,EAAA,uBAAO/I,IAAKY,EAAGU,UAAU,uBAC5ByH,EAAA,uBAAOoc,SAAU9rB,KAAKmqE,eAClB7hE,MAAO,CAACqmC,MAAM,SAAUsmB,OAAO,UAC/B/0D,KAAMqH,EAAGM,KAAK,WAAW09C,eAAgB1rB,WAAkBtyB,OAMxEmI,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAO,kBAChBqF,EAAA,qBAAKzH,UAAU,iCACXyH,EAAA,yBAAMiI,QAAUzX,GAChBwP,EAAA,qBAAKzH,UAAU,cAAcu4B,GAC5BkxC,EACDhiE,EAAA,cAACiT,EAAA,IAAG,CAAC1a,UAAU,OAAOyT,MAAO+1D,GACzB/hE,EAAA,wBAAQzH,UAAU,yBAAyBwE,QAASzM,KAAKsxE,YAAU,iCA/D7E9xE,KAAK0gE,4CACPlgE,KAAKkgE,SAAWA,EAChB,IAAIttD,GAACA,EAAEu+D,YAAEA,GAAenxE,KAAKkgE,UACzBppD,OAACA,GAAUlE,EACf,GAAIkE,EAAQ,CACR9W,KAAKqxE,cAAgB,GACrBrxE,KAAKikC,SAAWntB,EAAOlF,MAAM,KAC7B,IAAK,IAAIwF,KAAOpX,KAAKikC,SACjBjkC,KAAKqxE,cAAcj6D,QAA+D7V,KAAvD4vE,GAAeA,EAAY7pE,KAAKqqE,GAAMA,IAAOv6D,IAGhFpX,KAAKoiB,SAASpiB,KAAK8R,4lBCLpB,MAAM8/D,WAAsBlvD,EAAA,WAAnCljB,kCAWIQ,KAAA4vE,aAAe,CAAO9oE,GAAsB+qE,GAAA7xE,UAAA,qBACxCA,KAAK2gC,IAAM75B,EACX,IAAIjG,QAAY21D,EAAOrkD,WAAWrL,EAAKxD,IACvCtD,KAAK2gE,WAAa9/D,EAAIuH,IAAIb,IACtB,IAAIoQ,MAACA,EAAKb,OAAEA,EAAMxT,GAAEA,EAAEpD,KAAEA,EAAIsgC,YAAEA,EAAW12B,KAAEA,EAAI+zD,UAAEA,EAASC,YAAEA,EAAWqT,YAAEA,GAAe5pE,EACxF,MAAO,CACHqL,GAAI,CACAtP,GAAIA,EACJpD,KAAMA,EACNsgC,YAAaA,EACb12B,KAAMA,EACNgN,OAAQA,EACRa,MAAOA,EACPkmD,UAAWA,EACXC,YAAaA,EACbgU,mBAAevwE,GAEnBsR,QAAS8E,EACTw5D,YAAaA,GAAeA,EAAYv/D,MAAM,QAGtD5R,KAAK8nB,UAAU4oD,OAGnB1wE,KAAAi4D,QAAU,CAAOx3D,GAAyBoxE,GAAA7xE,UAAA,qBACtC,IAAI2gC,OACap/B,IAAbvB,KAAK2gC,IACLA,EAAMtqB,EAAAhD,EAAEa,MAAMzT,IAGdkgC,EAAMtqB,EAAAhD,EAAEa,MAAMlU,KAAK2gC,KACnBtqB,EAAAhD,EAAE8U,MAAMwY,EAAKlgC,IAEjBkgC,EAAI72B,KAAO9J,KAAKkK,OAChB,IAAIrJ,QAAY21D,EAAOyB,QAAQt3B,GAC/BA,EAAIr9B,GAAKzC,EACT,IAAIs7D,EAAMn8D,KAAK2vE,QAAQroE,KAAKC,GAAKA,EAAEjE,KAAOzC,QAC9BU,IAAR46D,EACA9lD,EAAAhD,EAAE8U,MAAMg0C,EAAKx7B,GAGb3gC,KAAK2vE,QAAQnpE,KAAKm6B,MAI1B3gC,KAAA8wE,UAAY,KAAYe,GAAA7xE,UAAA,2BACdw2D,EAAO0B,OAAOl4D,KAAKkK,OAAQlK,KAAK2gC,IAAIr9B,IAC1C,IAAI+E,EAAQrI,KAAK2vE,QAAQ9uD,UAAUtZ,GAAKA,EAAEjE,KAAOtD,KAAK2gC,IAAIr9B,IACtD+E,GAAS,GAAGrI,KAAK2vE,QAAQpyC,OAAOl1B,EAAO,MAG/CrI,KAAAo4D,SAAW,EAAOzxD,EAAYiR,EAAkBC,IAAoBg6D,GAAA7xE,UAAA,qBAChE,aAAaw2D,EAAO4B,SAASp4D,KAAKkK,OAAQvD,EAAKiR,EAAWC,MAG9D7X,KAAAiwE,SAAW,KAAY4B,GAAA7xE,UAAA,qBACnB,aAAaw2D,EAAOyZ,SAASjwE,KAAKkK,WAGtClK,KAAAgwE,KAAO,CAACp9D,IACJ,IAAIstD,EAAoBlgE,KAAK2gE,WAAWr5D,KAAKC,GAAKA,EAAEqL,GAAGtP,KAAOsP,EAAGtP,IACjE,QAAiB/B,IAAb2+D,EACAA,EAAW,CACPttD,GAAIA,EACJu+D,iBAAa5vE,OAGhB,CACD,IAAIuV,EAASopD,EAASiR,YACP,OAAXr6D,QAA8BvV,IAAXuV,IAAsBopD,EAASiR,YAAc,IAExEnxE,KAAK8nB,UAAUspD,GAAYlR,KAyB/BlgE,KAAAsxE,WAAa,EAAO1+D,EAAiBqxB,IAAsB4tC,GAAA7xE,UAAA,qBACvD,IAAIwS,EAAqCxS,KAAK+xE,aAAan/D,EAAIqxB,GAE/D,SADMuyB,EAAO+B,UAAUv4D,KAAKkK,OAAQlK,KAAK2gC,IAAIr9B,GAAIkP,GAC7CA,EAAI5M,OAAS5F,KAAK2gE,WAAW/6D,OAC7B5F,KAAK2gE,WAAWhf,QAAQ,CACpB/uC,GAAIA,EACJu+D,YAAaltC,QAGhB,CACQjkC,KAAK2gE,WAAWr5D,KAAKC,GAAKA,EAAEqL,GAAGtP,KAAOsP,EAAGtP,IAC/C6tE,YAAcltC,MAIzBjkC,KAAAwxE,aAAe,CAAO5+D,GAAoBi/D,GAAA7xE,UAAA,qBACtC,IAAIwS,EAAqCxS,KAAK+xE,aAAan/D,SACrD4jD,EAAO+B,UAAUv4D,KAAKkK,OAAQlK,KAAK2gC,IAAIr9B,GAAIkP,GACjD,IAAInK,EAAQrI,KAAK2gE,WAAW9/C,UAAUtZ,GAAKA,EAAEqL,GAAGtP,KAAOsP,EAAGtP,IACtD+E,GAAO,GAAGrI,KAAK2gE,WAAWpjC,OAAOl1B,EAAO,MAzHhC7I,cAAc0K,4CAC1BlK,KAAKkK,OAASA,EACdlK,KAAK2vE,cAAgBnZ,EAAOJ,KAAKp2D,KAAKkK,QACtClK,KAAK8nB,UAAU4nD,MA8EXlwE,aAAaoT,EAAiBqxB,GAClC,IAAIzxB,EAAqC,GACrCw/D,GAAQ,EACZ,IAAK,IAAI/a,KAAMj3D,KAAK2gE,WAAY,CAC5B,IAAK/tD,GAAGq/D,EAAId,YAAEA,GAAela,EAC7B,GAAIgb,EAAK3uE,KAAOsP,EAAGtP,GAAI,CACnB,QAAiB/B,IAAb0iC,EAAwB,SAC5BktC,EAAcltC,EACd+tC,GAAQ,EAEZx/D,EAAIhM,KAAK,CACLlD,GAAI2uE,EAAK3uE,GACTwT,OAAQq6D,GAAe,KAM/B,YAHiB5vE,IAAb0iC,IAAoC,IAAV+tC,GAC1Bx/D,EAAIhM,KAAK,CAAClD,GAAIsP,EAAGtP,GAAIwT,OAAQmtB,IAE1BzxB,GArGC0/D,GAAA,CAAXzoD,EAAA,kCACWyoD,GAAA,CAAXzoD,EAAA,+SCFE,MAAM0oD,WAAiBziE,EAAA,UAG1BlQ,YAAYkF,GACR7E,MAAM6E,GAKF1E,KAAAgqC,cAAgB,CAACx2B,IACrB,IAAI4+D,EAAgB,IAChB3oC,MAACA,GAASj2B,EAAI0G,OACd/S,EAAMsiC,EAAM7jC,OAChB,IAAK,IAAIsB,EAAE,EAAGA,EAAEC,EAAKD,IACjBkrE,EAAQ5rE,KAAKijC,EAAMviC,IAEvBlH,KAAK8E,SAAS,CACV2kC,MAAO2oC,MAuBPpyE,KAAAqyE,UAAY,CAACzoC,IACjB,IAAI0oC,EAAK,IAAIC,WACbD,EAAGE,OAAS,SAASlhD,GAEjB5O,EAAA,IAAIlc,KAAKkJ,EAAA,cAAC+iE,GAAM,CAACvyE,KAAM0pC,EAAK1pC,KAAMqC,QAASvC,KAAK0U,WAEpD49D,EAAGI,WAAW9oC,EAAM,UAEhB5pC,KAAAQ,SAAW,CAACgT,IAChBA,EAAI6Z,mBA2BArtB,KAAA2yE,SAAW,KAAYC,GAAA5yE,UAAA,2BAErBA,KAAK6yE,QADM,MAGb7yE,KAAA8yE,mBAAqB,KAAYF,GAAA5yE,UAAA,2BAE/BA,KAAK6yE,QADM,MA5EjB7yE,KAAKoF,MAAQ,CACTqkC,WAAOloC,GAcf/B,WAAWoqC,EAAMvhC,GACb,IAAInI,KAACA,EAAI2jB,KAAEA,EAAIkvD,iBAAEA,GAAoBnpC,EAcrC,OAAOl6B,EAAA,cAACiT,EAAA,IAAG,CAAC1a,UAAU,YAAYyT,MAAOhM,EAAA,cAACiT,EAAA,MAAK,KAb/C,WACI,IAAIvD,EAAUnN,EAUd,OATI4R,EAAO,MACPzE,EAAIyE,EAAM5R,EAAI,KAET4R,EAAO,SACZzE,EAAIN,KAAKk0D,MAAOnvD,EAAO,KAAQ,KAAK,IAAK5R,EAAI,MAG7CmN,EAAIN,KAAKk0D,MAAOnvD,EAAO,KAAO,KAAQ,KAAK,IAAK5R,EAAI,KAEjDmN,EAAI,IAAMnN,EAE4BghE,KAC7CvjE,EAAA,yBAAMxP,GACNwP,EAAA,yBAAKA,EAAA,cAACiT,EAAA,MAAK,kCAAOjT,EAAA,cAACiT,EAAA,SAAQ,CAACxU,KAAM4kE,OAe5BvzE,OAAO0zE,4CACjB,IAAIzpC,EAAiBzpC,KAAK0pC,UAAUD,MAChCh2B,EAAO,IAAIk2B,SACf,IAAIxiC,EAAMsiC,EAAM7jC,OAChB,IAAK,IAAIsB,EAAE,EAAGA,EAAEC,EAAKD,IAAK,CACtB,IAAI0iC,EAAOH,EAAMviC,GACjBuM,EAAKmgB,OAAO,UAAWgW,EAAMA,EAAK1pC,MAGtC,IAAIqK,EAAM8xD,EAAMjB,SAAW,cAAgBp7D,KAAK0E,MAAMkO,GAAGtP,GAAK,WAC3C,IAAf4vE,IAAqB3oE,GAAO,eAChC,IACI,IAAIs/B,EAAkB,IAAIC,gBACtBlqC,QAAYgK,MAAMW,EAAK,CACvBiK,OAAQ,OACRC,KAAMhB,EACNs2B,OAAQF,EAAgBE,SAE5BrnB,EAAA,IAAIlc,KAAKkJ,EAAA,cAACyjE,GAAarzE,OAAAqI,OAAA,GAAKnI,KAAK0E,MAAK,CAAE9E,IAAKA,EAAKiqC,gBAAiBA,MAEvE,MAAOx9B,GACHnJ,QAAQgD,MAAM,QAASqE,EAAK8B,MAWpC7M,SACI,IACI4zE,EAOAxkD,GARA6a,MAACA,GAASzpC,KAAKoF,MAiBnB,YAfc7D,IAAVkoC,IACA2pC,EAAW1jE,EAAA,cAACiT,EAAA,KAAI,CACZ1a,UAAU,OACVjG,MAAOynC,EACP3iC,KAAM,CAACwb,OAAQtiB,KAAKqzE,WAAY5mE,QAASzM,KAAKqyE,mBAGxC9wE,IAAVkoC,GAAuBA,EAAM7jC,OAAS,IACtCgpB,EAASlf,EAAA,qBAAKzH,UAAU,eACpByH,EAAA,wBAAQzH,UAAU,kBAAkBJ,KAAK,SAAS4E,QAASzM,KAAK2yE,UAAQ,4BACxEjjE,EAAA,qBAAKzH,UAAU,qBACfyH,EAAA,wBAAQzH,UAAU,0BACdJ,KAAK,SAAS4E,QAASzM,KAAK8yE,oBAAkB,8BAGnDpjE,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQ,kBAAUrK,KAAK0E,MAAMkO,GAAG1S,MACzCwP,EAAA,qBAAKzH,UAAU,aACXyH,EAAA,+EACAA,EAAA,sBAAMzH,UAAU,OAAOqrE,QAAQ,sBAAsB9yE,SAAUR,KAAKQ,UAChEkP,EAAA,qBAAKzH,UAAU,QACXyH,EAAA,uBAAO8b,IAAMke,GAAc1pC,KAAK0pC,UAAUA,EAAU7hC,KAAK,OAAOvE,GAAG,QAC/D2E,UAAU,0BAA0B/H,KAAK,QAAQ8oC,UAAU,EAC3Dld,SAAU9rB,KAAKgqC,iBAEtBopC,EACAxkD,GAELlf,EAAA,yBAAM1P,KAAKoF,MAAMmuE,UACjB7jE,EAAA,yBAAM1P,KAAKoF,MAAMmc,SAUjC,MAAMkxD,WAAe/iE,EAAA,UACjBlQ,SACI,OAAOkQ,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQrK,KAAK0E,MAAMxE,MAC5BwP,EAAA,qBAAKzH,UAAU,aAAajI,KAAK0E,MAAMnC,WAanD,MAAM4wE,WAAsBzjE,EAAA,UAGxBlQ,YAAYkF,GACR7E,MAAM6E,GAgFF1E,KAAAwzE,YAAc,MAClB,IAAIC,EAAO1oE,SAAS+I,eAAe,aACnC,IAAIq0B,EAAOnoC,KAAK0zE,UAAUD,GACrBtrC,IACDA,EAAKhuB,WAAaguB,EAAK9tB,aAAe,EACtCra,KAAK2zE,cAGL3zE,KAAK4zE,oBAvFT5zE,KAAK6zE,MAAQ,GACb7zE,KAAKoF,MAAQ,CACTyuE,MAAO7zE,KAAK6zE,MACZC,SAAU,GAGlBt0E,qBACIkjB,EAAA,IAAIpV,gBAAgB,IAA2BslE,GAAA5yE,UAAA,qBAC3C,OAAIA,KAAKoF,MAAM0uE,SAAS,GACjB,IAAInmE,QAAiB,CAACC,EAASC,KAClC,IACI,IAAiC,IAA7BpG,QAAQ,kFAA2B,CACnC,IACIzH,KAAK0E,MAAMmlC,gBAAgBkqC,QAE/B,MAAO9tE,GACH/C,QAAQgD,MAAMD,GAElB2H,GAAQ,QAGRA,GAAQ,GAGhB,MAAO3H,GACH4H,EAAO5H,SAKfzG,wBACqB+B,IAArBvB,KAAKg0E,cACLhuE,aAAahG,KAAKg0E,aAClBh0E,KAAKg0E,iBAAczyE,GAGnB/B,UAAUqU,GACd,GAAKA,EACL,MAAmB,SAAfA,EAAGogE,QAA2BpgE,EAC3B7T,KAAK0zE,UAAU7/D,EAAGqgE,eAErB10E,eAAek+B,EAAe,KAClC19B,KAAKm0E,mBACL,IAAIv2D,EAAO5d,KACXA,KAAKg0E,YAAcjuE,WAAW,KAC1B,IAAI0tE,EAAO1oE,SAAS+I,eAAe,aACnC2/D,GAAQA,EAAKW,iBAQbx2D,EAAKu2D,oBACNz2C,GAECl+B,cACJ,IAAIi0E,EAAO1oE,SAAS+I,eAAe,UACnC2/D,GAAQA,EAAKW,iBAST50E,iBACJ,IAAIi0E,EAAO1oE,SAAS+I,eAAe,aACnC2/D,GAAQA,EAAKW,iBAoBX50E,6DACF,IAAIoe,EAAO5d,KACPkrD,EAAO,IAAI98C,KAgCf,UA/BiBimE,EAgCCr0E,KAAK0E,MAAM9E,IAAI6U,KAAK6/D,YA9B3B,IAAI3mE,QAAQ,CAACC,EAASC,MAMzB,SAAS0mE,IACLF,EAAOG,OAAOloE,KAAK,EAAEmoE,OAAMvlE,YACvB,GAAIulE,EAMA,OALA72D,EAAK82D,iBACL92D,EAAK9Y,SAAS,CACVgvE,SAAU,IAAI1lE,MAAOC,UAAY68C,EAAK78C,iBAE1CT,IAGJ,IAAI2T,EAfZ,SAAsBozD,GAClB,IAAIC,EAAgB58C,OAAO68C,aAAaC,MAAM,KAAMH,GAEpD,OADoBI,mBAAmB94C,OAAO24C,IAa/BI,CAAa9lE,GACxB0O,EAAKi2D,MAAMrtE,KAAK+a,GAChB3D,EAAK9Y,SAAS,CACV+uE,MAAOj2D,EAAKi2D,QAEP3kE,EAAM+lE,WACfr3D,EAAK82D,iBACLH,MACD/yD,MAAM3T,GAEb0mE,MAMR,MAAOtuE,GACH/C,QAAQgD,MAAMD,GAnClB,IAAiBouE,IAsCrB70E,SACI,IAAIs0E,QAACA,EAAOD,MAAEA,GAAS7zE,KAAKoF,MAC5B,OAAOsK,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQypE,GAAS,EAAG,2BAAS,wBAAU9uE,KAAK,SACrD0K,EAAA,qBAAKpM,GAAG,WACRoM,EAAA,qBAAKpM,GAAG,YACJ4xE,cAAel1E,KAAKwzE,YACpBvrE,UAAU,YACVK,MAAO,CAAC6sE,SAAU,aAAcC,WAAY,WAC3CvB,EAAMzrE,IAAI,CAACb,EAAGL,IAAMwI,EAAA,qBAAKpH,MAAO,CAAC8sE,WAAY,YAAazuE,IAAKO,GAAIK,KAEvEusE,GAAS,EAAGpkE,EAAA,qBAAKzH,UAAU,YAAYK,MAAO,CAACmkB,MAAO,MAAOk+C,WAAY,kEAC5D7rD,KAAKC,MAAM+0D,EAAQ,oBACxBvyE,EACTmO,EAAA,qBAAKpM,GAAG,0RC3SpB,MAAM+xE,GAAiBvuE,IACnB,IAAI05B,YAACA,EAAW0+B,MAAEA,EAAKC,GAAEA,GAAMr4D,EAC/B,OAAO4I,EAAA,cAAAA,EAAA,cAAG8wB,MAAc0+B,MAAQC,IAwB9BmW,GAAS,CACXl1E,MAAO,MACP8B,MARmB,CAAChC,KAAM,MAAO2H,KAAM,SAAUgjB,UAAS,EAAMyB,UAAU,MAWxEipD,GAAY,CACdn1E,MAAO,qBACP8B,MAZsB,CAAChC,KAAM,SAAU2H,KAAM,MAa7CwtB,KAAM,CACFxtB,KAAM,UACNkwB,YAAa,uCACbJ,KAAMm3C,GAhCyB,CACnCtlD,QAAS,iCACTs2C,kBAAmB,iCACnBD,eAAgB,CAAOnoD,EAAY/Q,IAAe6uE,QAADj0E,OAAA,qBAE7C,aADM86D,EAAM7E,IAAIyC,aAAajzC,MAAMrgB,GAC5B01D,EAAM7E,IAAIyC,aAAaj4D,QAElCmtE,eAAgB,IAAYqG,QAADj0E,OAAA,2BACjB86D,EAAM7E,IAAIyC,aAAan4B,SAEjCpQ,IAAK,CAAC5qB,EAAsBuB,IACjBqH,EAAA,qBAAKzH,UAAU,aAAYyH,EAAA,cAAC2lE,GAAav1E,OAAAqI,OAAA,GAAKrB,OAsBrD8wB,WAAa9wB,IACF,CACHxD,GAAIwD,EAAKxD,GACTkmB,QAAS9Z,EAAA,cAAC2lE,GAAav1E,OAAAqI,OAAA,GAAKrB,MAGpCgxB,WAAax0B,GAAY+4D,EAAM1B,aAAaxxD,IAAI7F,KAIlDmyE,GAAoB,CACtBr1E,MAAO,iCACP8B,MA5BsB,CAAChC,KAAM,UAAW2H,KAAM,SAAUykB,UAAU,GAAIoJ,aAAa,SA6BnFL,KAAM,CACFxtB,KAAM,SACNqjB,UAAU,IAIZwqD,GAAQ,CACVt1E,MAAO,iCACP8B,MApCkB,CAAChC,KAAM,KAAM2H,KAAM,SAAUykB,UAAU,GAAIzB,UAAU,IAuCrE8qD,GAAgB,CAClBv1E,MAAO,iCACP8B,MAxC0B,CAAChC,KAAK,aAAc2H,KAAK,SAAUykB,UAAU,KAyCvE+I,KAAM,CACFxtB,KAAM,WACNykB,UAAW,IACXmF,KAAM,IAIP,MAAMmkD,WAAuBlzD,EAAA,MAApCljB,kCAEYQ,KAAAyqC,SAAqB,CACzB6qC,GACAC,GACAE,GACAC,GACAC,IAKI31E,KAAAQ,SAAW,CAAOC,GAAiD+0E,GAAAx1E,UAAA,qBACvES,EAAOoH,KAAO,EACdpH,EAAOo1E,OAAS71E,KAAK6D,WAAW+O,GAAGtP,GAEvB,WADItD,KAAK6D,WAAW01D,YAAY94D,IAO5CiiB,EAAA,IAAI3b,WALuBxF,IAAnBvB,KAAK81E,WACL91E,KAAK81E,UAAU/gD,SAAStR,SAAS,MAAO,2DAO5CzjB,KAAA8R,KAAO,KACJpC,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAO,uBAChBqF,EAAA,cAACiT,EAAA,UAAS,CAAC6I,IAAK1b,GAAG9P,KAAK81E,UAAUhmE,EAAG7H,UAAU,MAAMwiC,SAAUzqC,KAAKyqC,SAAUjqC,SAAUR,KAAKQ,aAlB/FhB,gDACFQ,KAAKoiB,SAASpiB,KAAK8R,mRClFpB,MAAMikE,WAAoBrzD,EAAA,MAAjCljB,kCASYQ,KAAAg2E,aAAe,EAAO9mE,EAAWizD,IAAsC8T,GAAAj2E,UAAA,qBAE3E,GAAY,WADIA,KAAKk2E,WAAW,MAAOhnE,IAEnC,MAAO,0CAEXlP,KAAK02D,QAAQnsD,IAAM2E,KAEflP,KAAAm2E,YAAc,EAAOjnE,EAAWizD,IAAsC8T,GAAAj2E,UAAA,qBAE1E,GAAY,WADIA,KAAKk2E,WAAW,KAAMhnE,IAElC,MAAO,yCAEXlP,KAAK02D,QAAQgD,GAAKxqD,KAEdlP,KAAAo2E,gBAAkB,EAAOlnE,EAAcizD,IAAsC8T,GAAAj2E,UAAA,qBACjF,QAAcuB,IAAV2N,GAAiC,OAAVA,EAAgB,OAC3C,GAAmC,UAA/BA,EAAMskB,cAAc3J,OAAoB,MAAO,4CACnC7pB,KAAKk2E,WAAW,UAAWhnE,GAC3ClP,KAAK02D,QAAQiD,QAAUzqD,KAEnBlP,KAAAq2E,oBAAsB,EAAOnnE,EAAcizD,IAAsC8T,GAAAj2E,UAAA,2BAC/EA,KAAKk2E,WAAW,aAAchnE,GACpClP,KAAK02D,QAAQkD,WAAa1qD,KAEtBlP,KAAAs2E,cAAgB,KAAYL,GAAAj2E,UAAA,sBACe,IAA3CyH,QAAQ,uJACNzH,KAAK6D,WAAW21D,WAAWx5D,KAAK02D,SACtCh0C,EAAA,IAAI3b,UAEA/G,KAAA8R,KAAO,MACX,IAAIc,GAACA,GAAM5S,KAAK6D,YACZgE,KAACA,EAAI3H,KAAEA,EAAIsgC,YAAEA,EAAW44B,OAAEA,EAAM7uD,IAAEA,EAAGmvD,GAAEA,EAAEC,QAAEA,EAAOC,WAAEA,GAAc55D,KAAK02D,QACvEjlC,EAAc,CACd,GASA,CACI5pB,KAAM,SACN3H,KAAM,MACNE,MAAO,MACPqM,QAAS,IAAIiW,EAAA,IAAIlc,KAAKkJ,EAAA,cAAC2vD,GAAe,CAClCxjD,MAAM,kBACN3M,MAAO3E,EACPy5C,UAAWhkD,KAAKg2E,iBAExB,CACInuE,KAAM,YACNzH,MAAO,qBACP83B,UAAWxoB,EAAA,cAACsvD,GAAU,CAAC17D,GAAI81D,KAE/B,CACIvxD,KAAM,SACN3H,KAAM,UACNE,MAAO,iCACPqM,QAAS,IAAIiW,EAAA,IAAIlc,KAAKkJ,EAAA,cAAC2vD,GAAe,CAClCxjD,MAAM,iCACN3M,MAAOyqD,EACP3V,UAAWhkD,KAAKo2E,oBAExB,CACIvuE,KAAM,SACN3H,KAAM,KACNE,MAAO,2BACPqM,QAAS,IAAIiW,EAAA,IAAIlc,KAAKkJ,EAAA,cAAC2vD,GAAe,CAClCxjD,MAAM,iCACN3M,MAAOwqD,EACP1V,UAAWhkD,KAAKm2E,gBAExB,CACItuE,KAAM,SACN3H,KAAM,aACNE,MAAO,iCACPqM,QAAS,IAAIiW,EAAA,IAAIlc,KAAKkJ,EAAA,cAAC+vD,GAAa,CAChC5jD,MAAM,iCACN3M,MAAO0qD,EACP5V,UAAWhkD,KAAKq2E,yBAGxB36D,EAAQhM,EAAA,wBAAQjD,QAASzM,KAAKs2E,cAAeruE,UAAU,mBAAiB,gBAC5E,OAAOyH,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQ,QAAUuI,EAAG1S,KAAMwb,MAAOA,GAC3ChM,EAAA,cAACiT,EAAA,SAAQ,CAAC8O,KAAMA,EAAMhxB,OAAQT,KAAK02D,aA7FrCl3D,KAAKk3D,4CACP12D,KAAK02D,QAAUA,EACf12D,KAAKoiB,SAASpiB,KAAK8R,QAETtS,WAAWq8C,EAAa3sC,4CAClC,aAAalP,KAAK6D,WAAW41D,kBAAkBz5D,KAAK02D,QAAS7a,EAAM3sC,oUAN3DqnE,CAAA,CAAX9sD,EAAA,4SCJL,MAAM+sD,GAAW,CACb,CACIp2E,MAAO,eACP8B,MAAO,CAAChC,KAAM,OAAQ2H,KAAM,SAAUykB,UAAW,IAAKzB,UAAU,IAEpE,CACIzqB,MAAO,eACP8B,MAAO,CAAChC,KAAM,cAAe2H,KAAM,SAAUykB,UAAW,KACxD+I,KAAM,CAACxtB,KAAM,cAUd,MAAe4uE,WAAqB/zD,EAAA,MAA3CljB,kCAIcQ,KAAAQ,SAAW,CAAOC,GAAqCi2E,GAAA12E,UAAA,2BACvDA,KAAK6D,WAAW40D,OAAOh4D,GAC7BiiB,EAAA,IAAI3b,SALFvH,gDACFQ,KAAKoiB,SAASpiB,KAAK8R,QAQbtS,KAAKoyB,GACX,OAAOliB,EAAA,cAACiT,EAAA,UAAS,CACb1a,UAAU,MACVwiC,SAAU+rC,GACVh2E,SAAUR,KAAKQ,SAAUoxB,WAAYA,KAI1C,MAAM+kD,WAAiBF,GAA9Bj3E,kCACcQ,KAAA8R,KAAO,MACb,IAAIc,GAACA,GAAM5S,KAAK6D,YACZ3D,KAACA,GAAQ0S,EACb,OAAOlD,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQ,oBAAYnK,EAAM8E,KAAK,SACvChF,KAAK0B,KAAKkR,OAKhB,MAAMgkE,WAAgBH,GAA7Bj3E,kCACcQ,KAAA8R,KAAO,KACNpC,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQ,iBAAQrF,KAAK,SAC7BhF,KAAK0B,KAAK,iRC9ChB,MAAMm1E,WAAen0D,EAAA,MAA5BljB,kCAKYQ,KAAA2wE,SAAW,KAAYmG,GAAA92E,UAAA,2BACrBA,KAAK8nB,UAAU6uD,OAIjB32E,KAAA6wE,WAAa,KAAYiG,GAAA92E,UAAA,sBACA,IAAzByH,QAAQ,wDACFzH,KAAK6D,WAAWkzE,WACtBr0D,EAAA,IAAI3b,UAIJ/G,KAAA8R,KAAO,MACX,IAAIklE,WAACA,EAAUC,aAAEA,EAAYrkE,GAAEA,EAAE0mD,SAAEA,GAAYt5D,KAAK6D,YAChDP,GAACA,EAAEpD,KAAEA,EAAIsgC,YAAEA,EAAW1pB,OAAEA,EAAMhN,KAAEA,EAAI+zD,UAAEA,EAASC,YAAEA,GAAelrD,EAChEqsC,EAAOvvC,EAAA,yBACPA,EAAA,yBAAM8wB,GACN9wB,EAAA,cAACkuD,EAAO,CAACE,YAAaA,EAAaD,UAAWA,KAE9CkT,EAAY,CACZ,CAACvnD,QAAQ,iBAAQtU,OAAOlV,KAAK2wE,SAAUtwE,KAAK,QAC5C,CAACmpB,QAAQ,eAAMtU,OAAOlV,KAAK6wE,WAAYxwE,KAAK,YAE5Cqb,EAAQhM,EAAA,cAACiT,EAAA,gBAAe,CAAC4d,QAASwwC,IAClCt/C,EAAc,CACd,GACA,CACI5pB,KAAM,YACNqwB,UAAWxoB,EAAA,cAACiT,EAAA,IAAG,CAAC1a,UAAU,OACtB0kB,KAAMjd,EAAA,cAACiT,EAAA,GAAE,CAACziB,KAAK,WAAW+H,UAAU,6BACpCyH,EAAA,yBAAKA,EAAA,uBAAIxP,IACR++C,IAGT,CACIp3C,KAAM,YACNzH,MAAO,qBACP83B,UAAWxoB,EAAA,qBAAKzH,UAAU,QAAOyH,EAAA,cAACuuD,GAAQ,CAAC36D,GAAIwG,EAAMk0D,QAAQ,MAElE,GACA,CACKn2D,KAAM,YACNzH,MAAO,2BACP83B,UAAWxoB,EAAA,cAACiT,EAAA,IAAG,CAAClW,QAAS,IAAIuqE,IAAc/uE,UAAU,4BACjD0kB,KAAK,yCAAWjR,MAAOhM,EAAA,cAACiT,EAAA,GAAE,CAAC1a,UAAU,oBAAoB/H,KAAK,sBAU1E,OAAOwP,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQ,QAAUnK,EAAMwb,MAAOA,GACxChM,EAAA,cAACiT,EAAA,SAAQ,CAAC8O,KAAMA,EAAMhxB,OAAQmS,IAC9BlD,EAAA,qBAAKzH,UAAU,yCACXyH,EAAA,cAACiT,EAAA,MAAK,CAACra,MAAO,CAAC4sD,QAAQ,QAAS5F,KAAK,IAAE,WACvC5/C,EAAA,wBACIzH,UAAU,iCACVwE,QAAS,IAAIzM,KAAK6D,WAAWqzE,sBAAoB,iBAIzDxnE,EAAA,cAACiT,EAAA,KAAI,CAAC3gB,MAAOs3D,EAAUxyD,KAAM,CAACwb,OAAOtiB,KAAKm3E,cAAe1qE,QAAQwqE,QApEnEz3E,gDACFQ,KAAKoiB,SAASpiB,KAAK8R,QAsEftS,cAAck3D,EAA0BruD,GAC5C,IAAIkC,IAACA,EAAG6uD,OAAEA,EAAMM,GAAEA,EAAEC,QAAEA,EAAOyd,aAAEA,GAAgB1gB,EAC3C2gB,EAAWD,EAEX1nE,EAAA,cAAAA,EAAA,cAAEA,EAAA,cAACiT,EAAA,MAAK,uBAAajT,EAAA,cAACiT,EAAA,SAAQ,CAACxU,KAAMipE,KADrC1nE,EAAA,cAACiT,EAAA,MAAK,2BAGV,OAAOjT,EAAA,cAACiT,EAAA,IAAG,CAAC1a,UAAU,2DAClByT,MAAOhM,EAAA,2BAAQ2nE,IAEf3nE,EAAA,yBACIA,EAAA,yBAAMnF,GACNmF,EAAA,yBAAMiqD,MAAUD,GAChBhqD,EAAA,cAACiT,EAAA,MAAK,KAACjT,EAAA,cAACsvD,GAAU,CAAC17D,GAAI81D,kRCrFhC,MAAMke,WAAiB50D,EAAA,MAA9BljB,kCAIYQ,KAAAi6C,QAAU,MACdj6C,KAAK6D,WAAW+O,QAAKrR,EACrBvB,KAAK8nB,UAAU8uD,MAEX52E,KAAA8R,KAAO,MACX,IAAKylE,OAAQlpD,EAAIuhD,aAAEA,GAAgB5vE,KAAK6D,WACpC6X,EAAQhM,EAAA,wBAAQzH,UAAU,2BAA2BwE,QAAS,IAAIzM,KAAKi6C,WAAWvqC,EAAA,cAACiT,EAAA,GAAE,CAACziB,KAAK,UAC/F,OAAOwP,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAO,KAAKqR,MAAOA,GAC5BhM,EAAA,cAACiT,EAAA,KAAI,CAAC3gB,MAAOqsB,EAAMvnB,KAAM,CAACwb,OAAQtiB,KAAK+wC,QAAStkC,QAASmjE,QAGzD5vE,KAAA+wC,QAAU,CAACjqC,IACf,IAAI5G,KAACA,EAAIsgC,YAAEA,EAAWsxC,cAAEA,GAAiBhrE,EACzC,OAAO4I,EAAA,cAACiT,EAAA,IAAG,CAAC1a,UAAU,+BAClB0kB,KAAMjd,EAAA,cAACiT,EAAA,GAAE,CAACziB,KAAK,WAAW+H,UAAU,uBACpCyT,MAAOhM,EAAA,cAAAA,EAAA,cAAGoiE,IACVpiE,EAAA,qBAAKzH,UAAU,aACXyH,EAAA,yBAAKA,EAAA,uBAAIxP,IACTwP,EAAA,yBAAKA,EAAA,cAACiT,EAAA,MAAK,KAAE6d,QArBnBhhC,KAAKuD,4CACP/C,KAAKoiB,SAASpiB,KAAK8R,4lBCGpB,MAAM0lE,WAAqB90D,EAAA,WAAlCljB,kCAaIQ,KAAA4vE,aAAe,CAAO9oE,GAAqB2wE,GAAAz3E,UAAA,qBACvCA,KAAK4S,GAAK9L,QACJ9G,KAAK03E,eAAe5wE,EAAKxD,IAC/BtD,KAAK8nB,UAAU+uD,OAWnB72E,KAAAi3E,aAAe,CAACvgB,IACZ12D,KAAK8nB,UAAUiuD,GAAarf,KAGhC12D,KAAAg3E,WAAa,KAAWS,GAAAz3E,UAAA,qBAGpB0iB,EAAA,IAAIlc,KAAKkJ,EAAA,cAACyiE,GAAQ,CAACv/D,GAAI5S,KAAK4S,GAAI0mD,SAAUt5D,KAAKs5D,WAF/B,WAKpBt5D,KAAAy4D,OAAS,CAAOh4D,GAAwBg3E,GAAAz3E,UAAA,qBACpC,IAAI4S,OACYrR,IAAZvB,KAAK4S,GACLA,EAAKyD,EAAAhD,EAAEa,MAAMzT,IAGbmS,EAAKyD,EAAAhD,EAAEa,MAAMlU,KAAK4S,IAClByD,EAAAhD,EAAE8U,MAAMvV,EAAInS,IAEhBmS,EAAG9I,KAAO9J,KAAKkK,OACf,IAAIrJ,QAAY21D,EAAOiC,OAAO7lD,GAC9BA,EAAGtP,GAAKzC,EACRb,KAAKu3E,OAAO/wE,KAAKoM,MAGrB5S,KAAA+2E,SAAW,KAAYU,GAAAz3E,UAAA,2BACbw2D,EAAOkC,MAAM14D,KAAKkK,OAAQlK,KAAK4S,GAAGtP,IACxC,IAAI+E,EAAQrI,KAAKu3E,OAAO12D,UAAUtZ,GAAKA,EAAEjE,KAAOtD,KAAK4S,GAAGtP,IACpD+E,GAAS,GAAGrI,KAAKu3E,OAAOh6C,OAAOl1B,MAsBvCrI,KAAAk3E,mBAAqB,KAAYO,GAAAz3E,UAAA,2BACvBA,KAAK8nB,UAAU8tD,OAvETp2E,cAAc0K,4CAC1BlK,KAAKkK,OAASA,EACdlK,KAAKu3E,aAAe/gB,EAAOhkD,IAAIxS,KAAKkK,QACpClK,KAAK8nB,UAAUwvD,MASL93E,eAAeulC,4CACzB,IAAIlkC,QAAY21D,EAAOmhB,cAAc33E,KAAKkK,OAAQ66B,GAC9C6yC,EAAK/2E,EAAI,GAAG,GAChBb,KAAK8W,OAAS8gE,EAAG9gE,OACjB9W,KAAKy6B,SAAWm9C,EAAGn9C,SACnBz6B,KAAKs5D,SAAWz4D,EAAI,KAkClBrB,kBAAkBk3D,EAA2B7a,EAAa3sC,4CAC5D,aAAasnD,EAAOiD,kBAAkBz5D,KAAKkK,OAAQwsD,EAAQpzD,GAAIu4C,EAAM3sC,KAGnE1P,YAAYk3D,4CACd,IAAImhB,EAAMxhE,EAAAhD,EAAEa,MAAMwiD,GAClBmhB,EAAI/tE,KAAO9J,KAAKkK,OAChB,IAAIrJ,QAAY21D,EAAO+C,YAAYse,GAGnC,OAFAA,EAAIv0E,GAAKzC,EACTb,KAAKs5D,SAAS9yD,KAAKqxE,GACZh3E,IAGLrB,WAAWk3D,kDACPF,EAAOgD,WAAWx5D,KAAKkK,OAAQwsD,EAAQpzD,IAC7C,IAAI+E,EAAQrI,KAAKs5D,SAASz4C,UAAUtZ,GAAKA,EAAEjE,IAAMozD,EAAQpzD,IACrD+E,GAAS,GAAGrI,KAAKs5D,SAAS/7B,OAAOl1B,MArE7ByvE,GAAA,CAAXruD,EAAA,iCACWquD,GAAA,CAAXruD,EAAA,mCCTE,MAAMsuD,WAAYroE,EAAA,UACrBlQ,SACI,IAAIa,KAACA,EAAI8nC,KAAEA,EAAIurB,KAAEA,GAAQ1zD,KAAK0E,MAC9B,OAAOgL,EAAA,cAACiT,EAAA,IAAG,CAAC1a,UAAU,gCAClB0kB,KAAMjd,EAAA,cAACiT,EAAA,MAAK,CAACkB,KAAK,KAAK5b,UAAU,QAAOyH,EAAA,qBAAKzB,IAAK5N,MAClDqP,EAAA,qBAAKzH,UAAU,QACXyH,EAAA,yBAAKA,EAAA,uBAAIy4B,IACTz4B,EAAA,yBAAKA,EAAA,cAACiT,EAAA,MAAK,KAAE+wC,0lBCH7B,IAAMskB,GAAN,cAAmBtoE,EAAA,UAwBTlQ,gEAGNA,SACI,IAAIsK,KAACA,EAAI5J,KAAEA,EAAIsgC,YAAEA,EAAWvF,OAAEA,EAAM4iC,UAAEA,EAASC,YAAEA,GAAe99D,KAAK0E,MACjEu6C,EAAOvvC,EAAA,yBACPA,EAAA,yBAAM8wB,GACN9wB,EAAA,cAACkuD,EAAO,CAACE,YAAaA,EAAaD,UAAWA,KAE9CpsC,EAAc,CACd,GACA,CAAC5pB,KAAM,YAAaqwB,UAAWxoB,EAAA,cAACiT,EAAA,MAAK,CAACtiB,KAAMg+D,GAASl2B,KAAMjoC,EAAMsgC,YAAaye,KAC9E,GACA,CAACp3C,KAAM,YAAazH,MAAO,qBAAO83B,UAAWxoB,EAAA,qBAAKzH,UAAU,QAAOyH,EAAA,cAACuuD,GAAQ,CAAC36D,GAAIwG,EAAMk0D,QAAQ,MAC/F,GACA,CACIn2D,KAAM,YACNzH,MAAO,SACP8wD,OAAQ,UACRh5B,UAAWxoB,EAAA,cAACuoE,GAAU,QAG9B,OAAOvoE,EAAA,yBACHA,EAAA,cAACiT,EAAA,SAAQ,CAAC8O,KAAMA,EAAMhxB,OAAQT,KAAK0E,WA/CzCszE,GAAIE,GAAA,CADT5oE,EAAA,GACK0oE,IAqDN,IAAaC,GAAb,cAAgCvoE,EAAA,UAC5BlQ,SACI,IAAIu5D,EAAMsD,EAAM7E,IAAIoB,MAAM79C,IAC1B,GAAY,OAARg+C,EAAc,MAAO,MACzB,IAAIx2D,EAAUw2D,EAAI99B,OAClB,OAAOvrB,EAAA,qBAAKzH,UAAU,uCAAuCK,MAAO,CAACgnD,KAAK,IACtE5/C,EAAA,yBACKnN,MAPJ01E,GAAUC,GAAA,CADtB5oE,EAAA,GACY2oE,IA4CE,IAAArf,GA9B+B,CAC1C/8C,MAAO,MACP4uB,SAAU,CACN,CACIrqC,MAAO,eACP8B,MAAO,CAAChC,KAAM,OAAQ2H,KAAM,SAAUykB,UAAW,IAAKzB,UAAU,IAEpE,CACIzqB,MAAO,eACP8B,MAAO,CAAChC,KAAM,cAAe2H,KAAM,SAAUykB,UAAW,KACxD+I,KAAM,CAACxtB,KAAM,aAEjB,CACIzH,MAAO,SACP8B,MAAO,CAAChC,KAAM,SAAU2H,KAAM,SAAUykB,UAAW,MACnD+I,KAAM,CAACxtB,KAAM,WAAY4pB,KAAM,KAGvCC,IAAM5qB,IACF,IAAI6Q,MAACA,EAAKzX,KAAEA,EAAIsgC,YAAEA,GAAe15B,EACjC,OAAO4I,EAAA,cAACqoE,GAAG,CAAC13E,KAAMi+D,GAAan2B,KAAMxwB,EAAQ,MAAQzX,EAAMwzD,KAAMlzB,KAErEx+B,MAAO,IAAIq6D,EAAM7E,IAAIoB,MACrBuf,SAAU,CACNj4E,KAAM,OACN+F,IAAK,oDAETu5D,KAAMwY,ICxCK,IAAA/e,GAnCoC,CAC/Cp9C,MAAO,SACP2jD,KA3BJ,cAAmB9vD,EAAA,UACflQ,SACI,IAAIghC,YAACA,EAAW0+B,MAAEA,EAAKC,GAAEA,EAAEr1D,KAAEA,EAAI+zD,UAAEA,EAASC,YAAEA,GAAe99D,KAAK0E,MAC9Du6C,EAAOvvC,EAAA,yBACPA,EAAA,yBAAM8wB,GACN9wB,EAAA,cAACkuD,EAAO,CAACE,YAAaA,EAAaD,UAAWA,KAG9CpsC,EAAc,CACd,GACA,CAAC5pB,KAAM,YAAaqwB,UAAWxoB,EAAA,cAACiT,EAAA,IAAG,CAAC1a,UAAU,OAC1C0kB,KAAMjd,EAAA,cAACiT,EAAA,GAAE,CAACziB,KAAK,SAAS+H,UAAU,6BAClCyH,EAAA,yBAAKA,EAAA,uBAAIyvD,IACRlgB,IAEL,GACA,CAACp3C,KAAM,YAAazH,MAAO,qBAAO83B,UAAWxoB,EAAA,qBAAKzH,UAAU,QAAOyH,EAAA,cAACuuD,GAAQ,CAAC36D,GAAIwG,EAAMk0D,QAAQ,MAC/F,CAACn2D,KAAM,SAAUzH,MAAO,qBAAOF,KAAM,UAEzC,OAAOwP,EAAA,yBACHA,EAAA,cAACiT,EAAA,SAAQ,CAAC8O,KAAMA,EAAMhxB,OAAQT,KAAK0E,WAQ3C+lC,SAAU,CACN,CACIrqC,MAAO,eACP8B,MAAO,CAAChC,KAAM,cAAe2H,KAAM,SAAUykB,UAAW,GAAIzB,UAAU,IAE1E,CACIzqB,MAAO,2BACP8B,MAAO,CAAChC,KAAM,QAAS2H,KAAM,SAAUykB,UAAW,GAAIzB,UAAU,IAEpE,CACIzqB,MAAO,iBACP8B,MAAO,CAAChC,KAAM,KAAM2H,KAAM,SAAUykB,UAAW,MAGvDoF,IAAM5qB,IACF,IAAI05B,YAACA,EAAW0+B,MAAEA,GAASp4D,EAE3B,OAAO4I,EAAA,cAACiT,EAAA,IAAG,CAAC1a,UAAU,+BAClB0kB,KAAMjd,EAAA,cAACiT,EAAA,GAAE,CAACziB,KAAK,SAAS+H,UAAU,wBAClCyH,EAAA,qBAAKzH,UAAU,QACXyH,EAAA,yBAAKA,EAAA,uBAAI8wB,IACT9wB,EAAA,yBAAKA,EAAA,cAACiT,EAAA,MAAK,KAAEu8C,OAIzBl9D,MAAO,IAAIq6D,EAAM7E,IAAIyB,QACrBkf,SAAU,CACNj4E,KAAM,cACN+F,IAAK,ySC1Bb,MAeMmyE,GAA8B,CAChC5uD,QAAS,kBACTs2C,kBAAmB,kBACnBD,eAAgB,CAAOnoD,EAAY/Q,IAAe0xE,QAAD92E,OAAA,qBAE7C,aADM86D,EAAM7E,IAAIwC,UAAUhzC,MAAMrgB,GACzB01D,EAAM7E,IAAIwC,UAAUh4D,QAE/BmtE,eAAgB,IAAYkJ,QAAD92E,OAAA,2BACjB86D,EAAM7E,IAAIwC,UAAUl4B,SAE9BpQ,IAAK,CAAC5qB,EAAmBuB,IACdqH,EAAA,yBAAM5I,EAAK5G,KAAO,IAAM4G,EAAK05B,cAItC83C,GAA6B,CAC/B9uD,QAAS,iBACTs2C,kBAAmB,iBACnBD,eAAgB,CAAOnoD,EAAY/Q,IAAe0xE,QAAD92E,OAAA,qBAE7C,aADM86D,EAAM7E,IAAIY,SAASpxC,MAAMrgB,GACxB01D,EAAM7E,IAAIY,SAASp2D,QAE9BmtE,eAAgB,IAAYkJ,QAAD92E,OAAA,2BACjB86D,EAAM7E,IAAIY,SAASt2B,SAE7BpQ,IAAK,CAAC5qB,EAAkBuB,IACbqH,EAAA,yBAAM5I,EAAK5G,KAAO,IAAM4G,EAAK05B,cAItC+3C,GAAmB,CAAC,eAAM,eAAM,MAAO,MAKvCC,GAAoB,CAACt4E,KAAM,SAAU2H,KAAM,UAG3C4wE,GAAS,CACXr4E,MAAO,MACP8B,MATmB,CAAChC,KAAM,MAAO2H,KAAM,SAAUgjB,UAAS,EAAMyB,UAAU,MAWxEosD,GAAiB,CACnBt4E,MAAO,eACP8B,MAZ2B,CAAChC,KAAM,cAAe2H,KAAM,SAAUykB,UAAU,MAezEqsD,GAAY,CACdv4E,MAAO,qBACP8B,MAhBsB,CAAChC,KAAM,SAAU2H,KAAM,MAiB7CwtB,KAAM,CACFxtB,KAAM,UACNkwB,YAAa,uCACbJ,KAAMm3C,GApEyB,CACnCtlD,QAAS,iCACTs2C,kBAAmB,iCACnBD,eAAgB,CAAOnoD,EAAY/Q,IAAe0xE,QAAD92E,OAAA,qBAE7C,aADM86D,EAAM7E,IAAIyC,aAAajzC,MAAMrgB,GAC5B01D,EAAM7E,IAAIyC,aAAaj4D,QAElCmtE,eAAgB,IAAYkJ,QAAD92E,OAAA,2BACjB86D,EAAM7E,IAAIyC,aAAan4B,SAEjCpQ,IAAK,CAAC5qB,EAAsBuB,IACjBqH,EAAA,qBAAKzH,UAAU,aAAanB,EAAK05B,YAAc,IAAM15B,EAAKo4D,MAAQ,IAAMp4D,EAAKq4D,MA0DpFvnC,WAAa9wB,IACF,CACHxD,GAAIwD,EAAKxD,GACTkmB,QAAS1iB,EAAK05B,YAAc,IAAM15B,EAAKq4D,KAG/CrnC,WAAax0B,GAAY+4D,EAAM1B,aAAaxxD,IAAI7F,KA8C1BwrE,GAAasJ,IAqBbtJ,GAAawJ,IA8B5B,mlBCxMf,IAAaM,GAAb,cAAyDlpE,EAAA,UADzDlQ,kCAYIQ,KAAAk0D,UAAY,CAACptD,IACT9G,KAAK0E,MAAM1C,QAAQ+Y,IAAMjb,OAAA2pB,EAAA,EAAA3pB,CAAWgH,GACpC4b,EAAA,IAAIlc,KAAKkJ,EAAA,cAACmpE,GAAI/4E,OAAAqI,OAAA,GAAKnI,KAAK0E,WAZtBlF,mEACIQ,KAAK0E,MAAM1C,QAAQwZ,SAK7Bhc,UACIQ,KAAK0E,MAAM1C,QAAQ+Y,SAAMxZ,EACzBmhB,EAAA,IAAIlc,KAAKkJ,EAAA,cAACopE,GAAGh5E,OAAAqI,OAAA,GAAKnI,KAAK0E,SAM3BlF,SACI,IAAIqc,MAACA,EAAK7Z,MAAEA,GAAShC,KAAK0E,MACtBgX,EAAQhM,EAAA,wBAAQzH,UAAU,2BAA2BwE,QAAS,IAAIzM,KAAKi6C,WAAWvqC,EAAA,cAACiT,EAAA,GAAE,CAACziB,KAAK,UAC/F,OAAOwP,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQwR,EAAOH,MAAOA,GAC/BhM,EAAA,cAACiT,EAAA,KAAI,CAAC3gB,MAAOA,IAAQA,MACjB8E,KAAM,CAACwb,OAAQtiB,KAAK0E,MAAMgtB,IAAKjlB,QAASzM,KAAKk0D,gBApBhD0kB,GAAOG,GAAA,CADnBzpE,EAAA,GACYspE,IA4Bb,MAAME,WAAwCppE,EAAA,UAC1ClQ,YAAYkF,GACR7E,MAAM6E,GACN1E,KAAKQ,SAAWR,KAAKQ,SAASyE,KAAKjF,MAEjCR,SAASiB,4CAEX,IAAY,WADIT,KAAK0E,MAAM1C,QAAQg3E,QAAQv4E,IAEvCiiB,EAAA,IAAI3b,UAEH,CACc/G,KAAK0E,MAAMyzE,YAKlC34E,SACI,IAAI+C,GACAsZ,MAACA,EAAKukC,MAAEA,EAAK64B,WAAEA,GAAcj5E,KAAK0E,OAClC+lC,SAACA,EAAQzoC,MAAEA,GAAShC,KAAK0E,MAa7B,OAXInC,OADUhB,IAAV6+C,EACU1wC,EAAA,cAACiT,EAAA,UAAS,CAAC1a,UAAU,OAAOoC,OAAQ4uE,EAAY74B,MAAOA,EAAOp5B,MAAM,QAAQxmB,SAAUR,KAAKQ,gBAEnFe,IAAbkpC,EACK/6B,EAAA,cAACiT,EAAA,UAAS,CAChB1a,UAAU,MACVwiC,SAAUA,EACVjqC,SAAUR,KAAKQ,SAAUoxB,WAAY5vB,IAAQ+Y,MAGvC,yCAEPrL,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQ,eAAKwR,GACrBtZ,IAMb,IAAMs2E,GAAN,cAA+CnpE,EAAA,UAD/ClQ,kCAEYQ,KAAA+wE,UAAY,CAChB,CAACvnD,QAAQ,eAAOxpB,KAAK0E,MAAMmX,MAAO3G,OAAOlV,KAAK2wE,SAAS1rE,KAAKjF,MAAOK,KAAK,QACxE,CAACmpB,QAAQ,eAAMtU,OAAOlV,KAAK6wE,WAAW5rE,KAAKjF,MAAOK,KAAK,YAErDb,uDAC2C,IAAzCiI,QAAQ,kKACFzH,KAAK0E,MAAM1C,QAAQ8gC,MACzBpgB,EAAA,IAAI3b,SAGZvH,WACIkjB,EAAA,IAAIlc,KAAKkJ,EAAA,cAACwpE,GAAIp5E,OAAAqI,OAAA,GAAKnI,KAAK0E,SAE5BlF,SACI,IAAI+gC,EAAU,GACV6zB,EAAKp0D,KAAK0E,MAAMy0E,sBACT53E,IAAP6yD,GAAkB7zB,EAAQ/5B,QAAQ4tD,GACtC7zB,EAAQ/5B,QAAQxG,KAAK+wE,WACrB,IAAIr1D,EAAQhM,EAAA,cAACiT,EAAA,gBAAe,CAAC4d,QAASA,IAClCz5B,EAAO9G,KAAK0E,MAAM1C,QAAQ+Y,IAC9B,OAAOrL,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQrK,KAAK0E,MAAMmX,MAAQ,8BAAWH,MAAOA,GACtDhM,EAAA,cAAC1P,KAAK0E,MAAM86D,KAAI1/D,OAAAqI,OAAA,GAAKrB,OAtB3B+xE,GAAIE,GAAA,CADTzpE,EAAA,GACKupE,IA2BN,MAAMK,WAAyCxpE,EAAA,UAI3ClQ,YAAYkF,GACR7E,MAAM6E,GAJF1E,KAAAugC,QAAU,CACd,CAAC/W,QAAQ,eAAMtU,OAAOlV,KAAK6wE,WAAW5rE,KAAKjF,MAAOK,KAAK,YAIvDL,KAAKQ,SAAWR,KAAKQ,SAASyE,KAAKjF,MAEvCR,sBAEMA,SAASiB,kDACLT,KAAK0E,MAAM1C,QAAQg3E,QAAQv4E,GACjCiiB,EAAA,IAAI3b,QAGFvH,uDAC2C,IAAzCiI,QAAQ,kKACFzH,KAAK0E,MAAM1C,QAAQ8gC,MACzBpgB,EAAA,IAAI3b,SAGZvH,SACI,IAAIkc,EAAQhM,EAAA,cAACiT,EAAA,gBAAe,CAAC4d,QAASvgC,KAAKugC,UAC3C,OAAO7wB,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQ,gBAAMrK,KAAK0E,MAAMmX,MAAOH,MAAOA,EAAO1W,KAAK,SAC5D0K,EAAA,cAACiT,EAAA,UAAS,CACN1a,UAAU,MACVwiC,SAAUzqC,KAAK0E,MAAM+lC,SACrBjqC,SAAUR,KAAKQ,SAAUoxB,WAAY5xB,KAAK0E,MAAM1C,QAAQ+Y,wRC5HjE,MAAMq+D,WAAc12D,EAAA,MAA3BljB,kCAKYQ,KAAAqmB,UAAY,EAACgzD,EAAoBhxE,KACrC,IAAIs4B,IAACA,EAAG0qC,MAAEA,GAASgO,GACf/1E,GAACA,EAAEpD,KAAEA,EAAIsgC,YAAEA,GAAeG,EAC1BjlB,EAAQhM,EAAA,uBAAOzH,UAAU,cAAcu4B,GAC3C,OAAO9wB,EAAA,qBAAKzH,UAAU,qBAClByH,EAAA,cAACiT,EAAA,IAAG,CAAC1a,UAAU,OAAOyT,MAAOA,GACzBhM,EAAA,cAACiT,EAAA,GAAE,CAACziB,KAAK,iBAAiB+H,UAAU,sBACpCyH,EAAA,uBAAIxP,IAERwP,EAAA,yBACIA,EAAA,uBAAOzH,UAAU,cAAY,kBACb,IAAfojE,EAAMzlE,OAAW,WAAMylE,EAAMjjE,IAAI6J,GAAKA,EAAEqkD,UAAYrkD,EAAE80B,MAAQ90B,EAAE/R,MAAMmX,KAAK,UAKhFrX,KAAA8R,KAAOhS,OAAAwP,EAAA,EAAAxP,CAAS,KACpB,IAAIw5E,aAACA,EAAYtf,UAAEA,EAASuf,YAAEA,GAAev5E,KAAK6D,WAC9C21E,EAAY9pE,EAAA,cAACiT,EAAA,UAAS,CAAC1a,UAAU,aACjCka,SAAU63C,EACVp3C,YAAY,kBACZy8B,kBAAkB,IACtB,OAAO3vC,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQmvE,GACjB9pE,EAAA,cAACiT,EAAA,KAAI,CAAC3gB,MAAOs3E,EACTxyE,KAAM,CAACwb,OAAQtiB,KAAKqmB,UAAW5Z,QAAQ8sE,EAAc5yE,IAAMG,GAAMA,EAAK65B,IAAIr9B,SA5BhF9D,gDACFQ,KAAKoiB,SAASpiB,KAAK8R,mRCFpB,MAAM2nE,WAAe/2D,EAAA,MAA5BljB,kCAKYQ,KAAAqmB,UAAY,EAACqzD,EAAoBrxE,KACrC,IAAIM,KAACA,EAAIytD,KAAEA,GAAQsjB,GACfp2E,GAACA,EAAEpD,KAAEA,EAAI6mC,KAAEA,EAAI1mC,KAAEA,EAAIi2D,SAAEA,GAAY3tD,EACvC,OAAO+G,EAAA,qBAAKzH,UAAU,qBAClByH,EAAA,qBAAKzH,UAAU,QACXyH,EAAA,cAACiT,EAAA,GAAE,CAACziB,KAAK,SAAS+H,UAAU,sBAC5ByH,EAAA,uBAAI4mD,GAAYvvB,GAAQ7mC,IAE5BwP,EAAA,yBACIA,EAAA,uBAAOzH,UAAU,cAAY,SACd,IAAdmuD,EAAKxwD,OAAW,WAAMwwD,EAAKhuD,IAAIiL,GAAKA,EAAEnT,MAAMmX,KAAK,UAKtDrX,KAAA8R,KAAOhS,OAAAwP,EAAA,EAAAxP,CAAS,KACpB,IAAI65E,aAACA,EAAYC,WAAEA,EAAUC,aAAEA,GAAgB75E,KAAK6D,WAChD21E,EAAY9pE,EAAA,cAACiT,EAAA,UAAS,CAAC1a,UAAU,aACjCka,SAAUy3D,EACVh3D,YAAY,2BACZy8B,kBAAkB,IACtB,OAAO3vC,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQmvE,GACjB9pE,EAAA,cAACiT,EAAA,KAAI,CAAC3gB,MAAO23E,EACT7yE,KAAM,CAACwb,OAAQtiB,KAAKqmB,UAAW5Z,QAAQotE,EAAclzE,IAAMG,GAAMA,EAAK6B,KAAKrF,SA3BjF9D,gDACFQ,KAAKoiB,SAASpiB,KAAK8R,mRCFpB,MAAMgoE,WAAap3D,EAAA,MAA1BljB,kCAKYQ,KAAA8R,KAAOhS,OAAAwP,EAAA,EAAAxP,CAAS,KACpB,IAAIi6E,OAACA,EAAMC,YAAEA,EAAWC,eAAEA,GAAkBj6E,KAAK6D,WAC7C6X,EAAQhM,EAAA,wBAAQzH,UAAU,yBAAyBwE,QAAS,IAAIwtE,KAAgB,4BACpF,OAAOvqE,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQ,SAAY0vE,EAAW,KAAGr+D,MAAOA,GAClDhM,EAAA,cAACiT,EAAA,KAAI,CAAC3gB,MAAOg4E,EAAalzE,KAAM,CAACwb,OAAOtiB,KAAKkhE,gBAI7ClhE,KAAAkhE,UAAY,EAACv4D,EAAYN,KAC7B,IACI9F,GADArC,KAACA,EAAI6mC,KAAEA,EAAIuvB,SAAEA,GAAY3tD,EAQ7B,OALIpG,EADA+zD,EACU5mD,EAAA,0BAAO4mD,WAAiB5mD,EAAA,uBAAOzH,UAAU,cAAc/H,IAC5D6mC,EACKr3B,EAAA,0BAAOq3B,WAAar3B,EAAA,uBAAOzH,UAAU,cAAc/H,IAEnDwP,EAAA,cAAAA,EAAA,cAAGxP,GACVwP,EAAA,qBAAKzH,UAAU,aAAa1F,KArBjC/C,gDACFQ,KAAKoiB,SAASpiB,KAAK8R,mRCFpB,MAAMooE,WAAcx3D,EAAA,MAA3BljB,kCAKYQ,KAAA8R,KAAOhS,OAAAwP,EAAA,EAAAxP,CAAS,KACpB,IAAIq6E,QAACA,EAAOC,YAAEA,EAAWC,eAAEA,GAAkBr6E,KAAK6D,WAC9C6X,EAAQhM,EAAA,wBAAQzH,UAAU,yBAAyBwE,QAAS,IAAI4tE,KAAgB,mBACpF,OAAO3qE,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQ,mBAAW8vE,EAAQ7jB,UAAY6jB,EAAQpzC,MAAQozC,EAAQj6E,MACxEwb,MAAOA,GACPhM,EAAA,cAACiT,EAAA,KAAI,CAAC3gB,MAAOo4E,EAAatzE,KAAM,CAACwb,OAAOtiB,KAAKkhE,gBAI7ClhE,KAAAkhE,UAAY,EAACvgC,EAAUt4B,KAC3B,IAAInI,KAACA,EAAIsgC,YAAEA,GAAeG,EAC1B,OAAOjxB,EAAA,qBAAKzH,UAAU,aAAa/H,MAAOsgC,KAfxChhC,gDACFQ,KAAKoiB,SAASpiB,KAAK8R,mRCFpB,MAAMwoE,WAAsB53D,EAAA,MAAnCljB,kCAKYQ,KAAA8R,KAAOhS,OAAAwP,EAAA,EAAAxP,CAAS,KACpB,IAAIi6E,OAACA,EAAMQ,aAAEA,EAAYN,eAAEA,GAAkBj6E,KAAK6D,WAClD,OAAO6L,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQ0vE,EAAO75E,KAAO,+BAC/BwP,EAAA,cAACiT,EAAA,KAAI,CAAC3gB,MAAOu4E,EAAczzE,KAAM,CAACwb,OAAOtiB,KAAK+rE,iBAI9C/rE,KAAA+rE,WAAa,EAACyO,EAAoBnyE,KACtC,IACI9F,GADArC,KAACA,EAAI6mC,KAAEA,EAAIuvB,SAAEA,EAAQrxD,KAAEA,GAAQu1E,EAG/Bj4E,EADA+zD,EACU5mD,EAAA,cAAAA,EAAA,cAAG4mD,MAAU5mD,EAAA,cAACiT,EAAA,MAAK,KAAEziB,IAC1B6mC,EACKr3B,EAAA,cAAAA,EAAA,cAAGq3B,MAAMr3B,EAAA,cAACiT,EAAA,MAAK,KAAEziB,IAEjBwP,EAAA,cAAAA,EAAA,cAAGxP,GACjB,IAAIwb,EAAQhM,EAAA,uBAAO7H,KAAK,WAAW09C,eAAuB,IAAPtgD,EAC/C6mB,SAAWtY,GAAMxT,KAAKy6E,cAAcD,EAAUhnE,EAAI0G,OAAO2f,WAC7D,OAAOnqB,EAAA,cAACiT,EAAA,IAAG,CAAC1a,UAAU,+BAA+ByT,MAAOA,GACvDnZ,KAIDvC,KAAAy6E,cAAgB,EAAOD,EAAoB3gD,IAAoB6gD,GAAA16E,UAAA,2BAC7DA,KAAK6D,WAAW82E,YAAYH,EAAU3gD,GAC5C2gD,EAASv1E,MAAiB,IAAV40B,EAAgB,EAAG,KA7BjCr6B,gDACFQ,KAAKoiB,SAASpiB,KAAK8R,mRCFpB,MAAM8oE,WAAsBl4D,EAAA,MAAnCljB,kCAKYQ,KAAA8R,KAAOhS,OAAAwP,EAAA,EAAAxP,CAAS,KACpB,IAAIq6E,QAACA,EAAOU,aAAEA,EAAYR,eAAEA,GAAkBr6E,KAAK6D,WACnD,OAAO6L,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQ,sBAAc8vE,EAAQ7jB,UAAY6jB,EAAQpzC,MAAQozC,EAAQj6E,OAC3EwP,EAAA,cAACiT,EAAA,KAAI,CAAC3gB,MAAO64E,EAAc/zE,KAAM,CAACwb,OAAOtiB,KAAKkhE,gBAI9ClhE,KAAAkhE,UAAY,EAAC4Z,EAAkBzyE,KACnC,IAAInI,KAACA,EAAIsgC,YAAEA,EAAWv7B,KAAEA,GAAQ61E,EAC5Bp/D,EAAQhM,EAAA,uBAAO7H,KAAK,WAAW09C,eAAuB,IAAPtgD,EAC/C6mB,SAAWtY,GAAMxT,KAAK+6E,aAAaD,EAAStnE,EAAI0G,OAAO2f,WAC3D,OAAOnqB,EAAA,cAACiT,EAAA,IAAG,CAAC1a,UAAU,YAAYyT,MAAOA,GACpCxb,MAAOsgC,KAIRxgC,KAAA+6E,aAAe,EAAOD,EAAkBjhD,IAAoBmhD,GAAAh7E,UAAA,2BAC1DA,KAAK6D,WAAWo3E,YAAYH,EAASjhD,GAC3CihD,EAAQ71E,MAAiB,IAAV40B,EAAgB,EAAG,KAtBhCr6B,gDACFQ,KAAKoiB,SAASpiB,KAAK8R,mRCApB,MAAMopE,WAAiBx4D,EAAA,MAA9BljB,kCACwBQ,KAAA2I,KAAa,KAOzB3I,KAAA8R,KAAOhS,OAAAwP,EAAA,EAAAxP,CAAS,KACpB,IAMIyC,EANAi3E,EAAY9pE,EAAA,cAACiT,EAAA,UAAS,CAAC6I,IAAKjkB,GAAGvH,KAAKw5E,UAAUjyE,EAC9CU,UAAU,QACVka,SAAUniB,KAAKmiB,SACfwJ,QAAS3rB,KAAKm7E,cACdv4D,YAAY,6DAGhB,GAAkB,OAAd5iB,KAAK2I,WAEJ,QAAkBpH,IAAdvB,KAAK2I,KACVpG,EAAUmN,EAAA,qBAAKzH,UAAU,iBAAe,4CAEvC,CACD,IACImzE,GADAl7E,KAACA,EAAI6mC,KAAEA,EAAI1mC,KAAEA,GAAQL,KAAK2I,KAG1ByyE,EADAr0C,EACUr3B,EAAA,cAAAA,EAAA,cAAEA,EAAA,yBAAKA,EAAA,uBAAIq3B,IAAer3B,EAAA,yBAAMxP,IAGhCwP,EAAA,yBAAKA,EAAA,uBAAIxP,IAEvBqC,EAAUmN,EAAA,yBACNA,EAAA,qBAAKzH,UAAU,2BACXyH,EAAA,cAACgT,EAAA,MAAK,CAACzU,IAAK5N,IACZqP,EAAA,qBAAKzH,UAAU,QAAQmzE,IAE3B1rE,EAAA,qBAAKzH,UAAU,iCACXyH,EAAA,wBAAQzH,UAAU,8BAA8BwE,QAASzM,KAAKq7E,WAAS,8BAkBnF,OAAO3rE,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQmvE,GAChBj3E,KAKDvC,KAAAmiB,SAAW,CAAOxb,GAAe20E,GAAAt7E,UAAA,qBACrCA,KAAK2I,WAAaktD,EAAQ0lB,YAAY50E,MAGlC3G,KAAAq7E,UAAY,KAAYC,GAAAt7E,UAAA,2BACtBA,KAAK6D,WAAW23E,QAAQx7E,KAAK2I,KAAKrF,IACxCtD,KAAK6D,WAAWs2E,QAAUn6E,KAAK2I,KAC/B3I,KAAK2I,KAAO,KACZ3I,KAAKw5E,UAAUjzE,QACfvG,KAAKqnC,YAAYrnC,KAAKy7E,cAGlBz7E,KAAAm7E,cAAgB,MACpBn7E,KAAK2I,KAAO,KAER3I,KAAKw5E,WAAWx5E,KAAKw5E,UAAUjzE,UAG/BvG,KAAA07E,UAAY,MAChB17E,KAAKojB,YACLpjB,KAAK6D,WAAWw2E,mBAGZr6E,KAAA27E,kBAAoB,MACxB37E,KAAKojB,YACLpjB,KAAK6D,WAAWw3E,cAGZr7E,KAAAy7E,UAAY,KACT/rE,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAO,4BAChBqF,EAAA,qBAAKzH,UAAU,mBACXyH,EAAA,sDACW1P,KAAK6D,WAAWs2E,QAAQj6E,MAEnCwP,EAAA,qBAAKzH,UAAU,QACXyH,EAAA,wBAAQzH,UAAU,uBACdwE,QAASzM,KAAK07E,WAAS,qCAG3BhsE,EAAA,wBAAQzH,UAAU,0BACdwE,QAASzM,KAAK27E,mBAAiB,kDAhG7Cn8E,gDACFQ,KAAKoiB,SAASpiB,KAAK8R,uUAJX8pE,CAAA,CAAXnyD,EAAA,knBCgCE,MAAMoyD,WAAwBn5D,EAAA,WAArCljB,kCAuBYQ,KAAA87E,WAAa,KAAYC,GAAA/7E,UAAA,2BACvBA,KAAKg8E,kBAAaz6E,GACxBvB,KAAK8nB,UAAUsxD,OAGXp5E,KAAAi8E,WAAa,KAAYF,GAAA/7E,UAAA,2BACvBA,KAAKk8E,kBAAa36E,GACxBvB,KAAK8nB,UAAU2xD,OA6DnBz5E,KAAA45E,WAAa,CAAMjzE,GAAeo1E,GAAA/7E,UAAA,2BACxBA,KAAKk8E,aAAav1E,MAG5B3G,KAAAg6D,UAAY,CAAMrzD,GAAeo1E,GAAA/7E,UAAA,2BACvBA,KAAKg8E,aAAar1E,MAG5B3G,KAAAu5E,YAAc,CAAOF,GAAuB0C,GAAA/7E,UAAA,qBACxCA,KAAK+5E,OAASV,EAAS14C,IAGvB3gC,KAAKg6E,kBAAoBnkB,EAAQsmB,gBAAgBn8E,KAAK8J,KAAKxG,GAAItD,KAAK+5E,OAAOz2E,GAF3D,EACD,KAEftD,KAAK8nB,UAAUgyD,OAGnB95E,KAAA65E,aAAe,CAAOH,GAAuBqC,GAAA/7E,UAAA,qBACzCA,KAAKm6E,QAAUT,EAAS/wE,KAGxB3I,KAAKo6E,kBAAoBvkB,EAAQumB,gBAAgBp8E,KAAK8J,KAAKxG,GAAItD,KAAKm6E,QAAQ72E,GAF5D,EACD,KAEftD,KAAK8nB,UAAUoyD,OAGnBl6E,KAAAi6E,eAAiB,CAAOtzE,GAAgBo1E,GAAA/7E,UAAA,qBAGpCA,KAAKu6E,mBAAqB1kB,EAAQwmB,iBAAiBr8E,KAAK8J,KAAKxG,GAAItD,KAAK+5E,OAAOz2E,GAAIqD,EAFjE,EACD,KAEf3G,KAAK8nB,UAAUwyD,OAGnBt6E,KAAAq7E,UAAY,MACRr7E,KAAK8nB,UAAUozD,MAGnBl7E,KAAAq6E,eAAiB,CAAO1zE,GAAgBo1E,GAAA/7E,UAAA,qBAGpCA,KAAK66E,mBAAqBhlB,EAAQymB,iBAAiBt8E,KAAK8J,KAAKxG,GAAItD,KAAKm6E,QAAQ72E,GAAIqD,EAFlE,EACD,KAEf3G,KAAK8nB,UAAU8yD,OAGnB56E,KAAA26E,YAAc,EAAMhyE,EAAWkxB,IAAoBkiD,GAAA/7E,UAAA,2BACzC61D,EAAQ8kB,YAAY36E,KAAK8J,KAAKxG,GAAItD,KAAK+5E,OAAOz2E,GAAIqF,EAAKrF,IAAc,IAAVu2B,EAAgB,EAAE,GACnF,IAAIw/C,EAAWr5E,KAAKs5E,aAAahyE,KAAKC,GAAKA,EAAEo5B,IAAIr9B,KAAOtD,KAAK+5E,OAAOz2E,IACpE,IAAgB,IAAZu2B,EACA75B,KAAKg6E,YAAYxzE,KAAKmC,GAClB0wE,GAAUA,EAAShO,MAAM7kE,KAAKmC,OAEjC,CACD,IAAIN,EAAQrI,KAAKg6E,YAAYn5D,UAAUtZ,GAAKA,EAAEjE,KAAOqF,EAAKrF,IACtD+E,GAAO,GAAGrI,KAAKg6E,YAAYz8C,OAAOl1B,EAAO,GACzCgxE,IACAhxE,EAAQgxE,EAAShO,MAAMxqD,UAAUtZ,GAAKA,EAAEjE,KAAOqF,EAAKrF,MACzC,GAAG+1E,EAAShO,MAAM9tC,OAAOl1B,EAAO,OAKvDrI,KAAAi7E,YAAc,EAAMt6C,EAAS9G,IAAoBkiD,GAAA/7E,UAAA,qBAE7C,SADM61D,EAAQ8kB,YAAY36E,KAAK8J,KAAKxG,GAAIq9B,EAAIr9B,GAAItD,KAAKm6E,QAAQ72E,IAAc,IAAVu2B,EAAgB,EAAE,QACzDt4B,IAAtBvB,KAAK25E,aAA4B,OACrC,IAAID,EAAW15E,KAAK25E,aAAaryE,KAAKC,GAAKA,EAAEoB,KAAKrF,KAAOtD,KAAKm6E,QAAQ72E,IACtE,IAAgB,IAAZu2B,EACA75B,KAAKo6E,YAAY5zE,KAAKm6B,GAClB+4C,GAAUA,EAAStjB,KAAK5vD,KAAKm6B,OAEhC,CACD,IAAIt4B,EAAQrI,KAAKo6E,YAAYv5D,UAAUtZ,GAAKA,EAAEjE,KAAOq9B,EAAIr9B,IACrD+E,GAAO,GAAGrI,KAAKo6E,YAAY78C,OAAOl1B,EAAO,GACzCqxE,IACArxE,EAAQqxE,EAAStjB,KAAKv1C,UAAUtZ,GAAKA,EAAEjE,KAAOq9B,EAAIr9B,MACvC,GAAGo2E,EAAStjB,KAAK74B,OAAOl1B,EAAO,OAKtDrI,KAAAw7E,QAAU,CAAO5iE,GAAmBmjE,GAAA/7E,UAAA,2BAC1B61D,EAAQ0mB,YAAYv8E,KAAK8J,KAAKxG,GAAIsV,MA9J5BpZ,cAAcsK,4CAC1B9J,KAAK8J,KAAOA,EACZ,IAAImS,EAAK,0BACLugE,EAAU9sE,EAAA,cAACiT,EAAA,GAAE,CAACziB,KAAK,UAAU+H,UAAU,sBACvCw0E,EAAW/sE,EAAA,cAACiT,EAAA,GAAE,CAACziB,KAAK,YAAY+H,UAAU,sBAC1CyT,EAAQhM,EAAA,wBAAQzH,UAAU,yBAAyBwE,QAASzM,KAAKq7E,WAAW3rE,EAAA,cAACiT,EAAA,GAAE,CAACziB,KAAK,UACzFF,KAAKoiB,SAAS1S,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQ,8BAAarK,KAAK8J,KAAK5J,KAAMwb,MAAOA,GAC5DhM,EAAA,cAACiT,EAAA,IAAG,CAAC1a,UAAWgU,EAAIxP,QAASzM,KAAK87E,WAAYnvD,KAAM6vD,GAAO,OAC3D9sE,EAAA,cAACiT,EAAA,IAAG,CAAC1a,UAAWgU,EAAIxP,QAASzM,KAAKi8E,WAAYtvD,KAAM8vD,GAAQ,oBActDj9E,aAAamH,4CACvB,IAAI0nB,EAAkB,GAGlBxtB,QAAYg1D,EAAQ6mB,aAAa18E,KAAK8J,KAAKxG,GAAIqD,EAFnC,EACD,KAEXyvD,EAAOv1D,EAAI,GACXwqE,EAAQxqE,EAAI,GACZ87E,EAA+B,GACnC,IAAK,IAAItpE,KAAK+iD,EAAM,CAChB,IAAIz1B,EAAU,CACVr9B,GAAI+P,EAAE/P,GACNpD,KAAMmT,EAAEnT,KACRsgC,YAAantB,EAAEmtB,aAEnBnS,EAAK7nB,KAAKm2E,EAAKtpE,EAAE/P,IAAM,CAACq9B,IAAIA,EAAK0qC,MAAM,KAE3C,IAAK,IAAIp5D,KAAKo5D,EAAO,CACjB,IAAI1iE,EAAY,CACZrF,GAAI2O,EAAEtJ,KACNzI,KAAM+R,EAAE/R,KACR6mC,KAAM90B,EAAE80B,KACR1mC,KAAM4R,EAAE5R,KACRi2D,SAAUrkD,EAAEqkD,UAEhBqmB,EAAK1qE,EAAE0uB,KAAK0qC,MAAM7kE,KAAKmC,GAE3B3I,KAAKs5E,aAAejrD,IAGV7uB,aAAamH,4CACvB,IAAI0nB,EAAkB,GAGlBxtB,QAAYg1D,EAAQ+mB,UAAU58E,KAAK8J,KAAKxG,GAAIqD,EAFhC,EACD,KAEX0kE,EAAQxqE,EAAI,GACZu1D,EAAOv1D,EAAI,GACX87E,EAA+B,GACnC,IAAK,IAAI1qE,KAAKo5D,EAAO,CACjB,IAAI1iE,EAAY,CACZrF,GAAI2O,EAAE3O,GACNpD,KAAM+R,EAAE/R,KACR6mC,KAAM90B,EAAE80B,KACR1mC,KAAM4R,EAAE5R,KACRi2D,SAAUrkD,EAAEqkD,UAEhBjoC,EAAK7nB,KAAKm2E,EAAK1qE,EAAE3O,IAAM,CAACqF,KAAKA,EAAMytD,KAAK,KAE5C,IAAK,IAAI/iD,KAAK+iD,EAAM,CAChB,IAAIz1B,EAAU,CACVr9B,GAAI+P,EAAEstB,IACNzgC,KAAMmT,EAAEnT,KACRsgC,YAAantB,EAAEmtB,aAEnBm8C,EAAKtpE,EAAE1K,MAAMytD,KAAK5vD,KAAKm6B,GAE3B3gC,KAAK25E,aAAetrD,KAtFZwuD,GAAA,CAAXpzD,EAAA,uCACWozD,GAAA,CAAXpzD,EAAA,uCAEWozD,GAAA,CAAXpzD,EAAA,sCACWozD,GAAA,CAAXpzD,EAAA,uCAEWozD,GAAA,CAAXpzD,EAAA,sCACWozD,GAAA,CAAXpzD,EAAA,0nBC9BE,MAAMqzD,WAAep6D,EAAA,WAIVljB,0DACV,IAAIqB,QAAYg1D,EAAQknB,iBACpBC,EAAah9E,KAAKg9E,WAAan8E,EAAI,GACvCqC,QAAQC,IAAI,iBAAkB65E,GACJ,IAAtBA,EAAWp3E,SACX8c,EAAA,UAAU5Y,KAAOkzE,EAAW,GAAG15E,SACzB+4D,EAAMzxD,cAGJpL,cAAcuD,4CAM1B,GALAs5D,EAAM3xC,OAEN1qB,KAAKosC,aAAerhC,SAASC,SAASF,KAAKK,WAAW,OACtDjI,QAAQC,IAAI,yBAA0BnD,KAAKosC,eAEjB,IAAtBpsC,KAAKosC,aAGL,aAFMpsC,KAAKi9E,sBACXj9E,KAAK8nB,UAAUo1D,UAGb7gB,EAAMzxD,WACZ5K,KAAK8nB,UAAUo1D,OAsBhB,MAAMA,WAAex6D,EAAA,MAA5BljB,kCAkBYQ,KAAA0rC,eAAiB,KACdh8B,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAO,2BAAOqC,OAAQA,IAC/BgD,EAAA,cAACiT,EAAA,KAAI,CAAC3gB,MAAOhC,KAAK6D,WAAWm5E,WAAYl2E,KAAM,CAACwb,OAAQtiB,KAAKqmB,UAAW5Z,QAASzM,KAAKyrC,gBAItFzrC,KAAAm9E,WAAa,MACjB,IAAIp2C,KAACA,EAAI7mC,KAAEA,GAAQwiB,EAAA,IAAI/Z,KACvB,OAAO+G,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAO,2BAAOqC,OAAQA,IAC/BgD,EAAA,qBAAKzH,UAAU,uBACV8+B,GAAQ7mC,iEAOrBF,KAAAqmB,UAAY,EAACvf,EAAiBuB,IACnBqH,EAAA,cAACiT,EAAA,IAAG,CAAC1a,UAAU,MAAMyT,MAAO,OAAS5U,EAAKxD,IAC7CoM,EAAA,yBAAM5I,EAAKigC,MAAQjgC,EAAK5G,QAGhCF,KAAAyrC,WAAa,CAAO3kC,GAAoBs2E,GAAAp9E,UAAA,qBACpC0iB,EAAA,UAAU5Y,KAAOhD,EAAKxD,SAChB+4D,EAAMzxD,WACZ5K,KAAKojB,YACLpjB,KAAK4jB,gBAAgBlU,EAAA,cAAC2tE,GAAS,UA3C7B79E,gDACF,IAAI4sC,aAACA,EAAY4wC,WAAEA,GAAch9E,KAAK6D,WACtC,IAAqB,IAAjBuoC,EACA,OAAQ4wC,EAAWp3E,QACf,QAA6C,YAApC5F,KAAKoiB,SAASpiB,KAAK0rC,gBAC5B,KAAK,EAAmC,YAAhC1rC,KAAKoiB,SAASpiB,KAAKm9E,YAC3B,KAAK,EAAwC,YAArCn9E,KAAK4jB,gBAAgBlU,EAAA,cAAC2tE,GAAS,YAI5B97E,IAAf86D,EAAMvyD,KAIV9J,KAAK4jB,gBAAgBlU,EAAA,cAAC2tE,GAAS,OAH3Br9E,KAAKoiB,SAASpiB,KAAKm9E,cAqB3B92E,aAeJ,MAAMqG,GAAS,KACX2vD,EAAM3vD,UAsBJ4wE,GAAS5tE,EAAA,cAACiT,EAAA,GAAE,CAACziB,KAAK,kBAClBq9E,GAAe,CACjBC,EAAG,qBACHC,EAAG,eACHC,EAAG,sBAGP,IAAcL,GAAd,cAAgC3tE,EAAA,UADhClQ,kCAmBYQ,KAAA29E,WAAwB,CAC5Bx1C,KAAM,kBACNzsB,MAAO4hE,GACPj9E,KAAM,gBACNyR,KAAMyvD,IAEFvhE,KAAA49E,YAAyB,CAC7Bz1C,KAAM,2BACNzsB,MAAO4hE,GACPj9E,KAAM,QACNyR,KAAM0yD,IAEFxkE,KAAA69E,eAA4B,CAChC11C,KAAM,2BACNzsB,MAAO4hE,GACPj9E,KAAM,SACNwD,WAAY,IAAIg4E,QAAgBt6E,IAS5BvB,KAAA89E,aAA0B,CAC9B31C,KAAM,qBACNzsB,MAAO4hE,GACPj9E,KAAM,mBACNyR,KAAM4rD,GAGF19D,KAAA+9E,cAAgB,IAAIpP,GACpB3uE,KAAAg+E,eAA4B,CAChC71C,KAAMnoC,KAAK+9E,cAAc39E,MACzBsb,MAAO4hE,GACPj9E,KAAML,KAAK+9E,cAAc19E,KACzBwD,WAAY7D,KAAK+9E,eAGb/9E,KAAAi+E,WAAwB,CAC5B91C,KAAM,yDACN9nC,KAAM,mBA2DFL,KAAA0xB,IAAM,EAAC5qB,EAAWuB,KACtB,GAAoB,kBAATvB,EACP,OAAO4I,EAAA,qBAAKzH,UAAU,kCAAkCK,MAAO,CAACioD,gBAAgB,YAAazpD,GAEjG,IACI6lB,EAAU6mC,EAASxoC,GADnBnP,MAACA,GAAS/U,EAEd,QAAcvF,IAAVsa,EAAqB,CACrB,IAAIxb,KAACA,EAAIqhC,MAAEA,GAAS56B,EACpB6lB,EAAOjd,EAAA,cAACiT,EAAA,GAAE,CAAC1a,UAAU,eAAe/H,KAAMG,EAAMktC,UAAU,EAAM1pB,KAAK,OACrE2vC,EAAM33C,EACNmP,EAAI0W,EAAM,GAAKhyB,EAAA,0BAAOgyB,OAErB,CACD,IAAIhmB,MAACA,EAAKysB,KAAEA,EAAI9nC,KAAEA,GAAQyG,EAC1B6lB,EAAuB,kBAATtsB,EACVqP,EAAA,cAACiT,EAAA,GAAE,CAAC1a,UAAU,eAAe/H,KAAMG,EAAMktC,UAAU,EAAM1pB,KAAK,OAC9D/c,EAAKzG,KACTmzD,EAAMrrB,EACNnd,EAAItb,EAAA,0BAAOgM,GAEf,OAAOhM,EAAA,cAACiT,EAAA,IAAG,CAAC1a,UAAU,+BAA+B0kB,KAAMA,EAAMjR,MAAOsP,GACpEtb,EAAA,qBAAKzH,UAAU,QAAOyH,EAAA,uBAAI8jD,OAG1BxzD,KAAA4wC,SAAW,CAAO9pC,GAAcs2E,GAAAp9E,UAAA,qBACpC,IAAI6b,MAACA,GAAS/U,EACd,QAAcvF,IAAVsa,EAAqB,CACrB,IAAIqiE,SAACA,EAAQzxE,QAAEA,GAAW3F,EAC1B,YAAiBvF,IAAb28E,EACOx7D,EAAA,IAAIlc,KAAKkJ,EAAA,cAACkpE,GAAO94E,OAAAqI,OAAA,GAAK+1E,UAE7BzxE,IAIH,CACD,IAAKqF,KAAKqsE,EAACt6E,WAAEA,GAAciD,OACjBvF,IAAN48E,EACAz7D,EAAA,IAAIlc,KAAKkJ,EAAA,cAACyuE,EAAC,aAELt6E,EAAW6B,MAAM22D,EAAMvyD,UA5JnCtK,8DACF,IAAIsK,KAACA,EAAI0tD,IAAEA,GAAO6E,GACdlG,QAACA,EAAOD,QAAEA,EAAOruD,KAAEA,GAAQiC,EAC/B9J,KAAKwpB,QAAU+zD,GAAa11E,GAOT,KAAP,EAAPA,WACKw0D,EAAM7E,IAAI4mB,gBAiDhB5+E,aACJ,IAAIsK,KAACA,EAAI0tD,IAAEA,GAAO6E,GACdlG,QAACA,EAAOD,QAAEA,EAAOruD,KAAEA,GAAQiC,EAC3B9H,EAAe,GAKnB,GAJgB,IAAZk0D,GACAl0D,EAAMwE,KAAKxG,KAAK89E,cAEpB56E,QAAQC,IAAI,QAAS2G,GACL,IAAZqsD,IACmB,KAAP,EAAPtuD,IAED7F,EAAMwE,KACF,2BACAxG,KAAK29E,WAEL39E,KAAK69E,gBAIM,KAAP,EAAPh2E,IAAiB,CAElB,IAAIswD,OAACA,GAAUX,EAEX6mB,EAAgD,CAChD,iCACA,CACIxiE,MAAO,MACP6lB,MAAOy2B,GAAUA,EAAOx3B,IACxBtgC,KAAM,SACNoM,QAAS,IAAM,IAAImlE,QAAcrwE,GAAWmE,MAAMoE,EAAKxG,KAE3D,CACIuY,MAAO,KACP6lB,MAAOy2B,GAAUA,EAAOvlD,GACxBvS,KAAM,WACNoM,QAAS,IAAM,IAAI+qE,QAAaj2E,GAAWmE,MAAMoE,EAAKxG,KAE1D,CACIuY,MAAO,MACP6lB,MAAOy2B,GAAUA,EAAOY,IACxB14D,KAAM,OACN69E,SAAUtlB,IAEd,CACI/8C,MAAO,SACP6lB,MAAOy2B,GAAUA,EAAOiB,OACxB/4D,KAAM,SACN69E,SAAUjlB,KAGlBj3D,EAAMwE,QAAQ63E,GAItB,OAAOr8E,EA8CXxC,SACI,IAAIsK,EAAYuyD,EAAMvyD,KACtB,QAAavI,IAATuI,EAEA,OADA5G,QAAQC,IAAI,6BACL,KAEXD,QAAQC,IAAI,0BACZ,IAIIkH,EAAY1C,EAJZ3F,EAAQhC,KAAKmvD,aACjB,QAAc5tD,IAAVS,EACA,OAAO0N,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAO,KAGxB,QAAa9I,IAATuI,EAAoB,CACpB,IAAI5J,KAACA,EAAI6mC,KAAEA,EAAI1mC,KAAEA,EAAImgC,YAAEA,GAAe12B,EACtCO,EAAS08B,GAAQ7mC,OACIqB,IAAjBvB,KAAKwpB,UAAuBnf,EAASrK,KAAKwpB,QAAU,MAAQnf,GAChE1C,EAAM+H,EAAA,cAACiT,EAAA,IAAG,CAAC1a,UAAU,yCAAyCwE,QAAS,IAAIiW,EAAA,IAAIlc,KAAKkJ,EAAA,cAAC4uE,GAAS,OAC1F3xD,KAAMjd,EAAA,yBAAKA,EAAA,cAACgT,EAAA,MAAK,CAACza,UAAU,YAAYgG,IAAK5N,MAC7CqP,EAAA,qBAAKzH,UAAU,QACXyH,EAAA,oBAAIzH,UAAU,aAAa/H,GAC3BwP,EAAA,wBAAIA,EAAA,uBAAOzH,UAAU,kBAAkB8+B,IACvCr3B,EAAA,qBAAKzH,UAAU,mBAAmBu4B,UAK1Cn2B,EAAS,2BAEb,OAAOqF,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAQA,EAAQqC,OAAQA,IAChC/E,EACD+H,EAAA,cAACiT,EAAA,KAAI,CAAC3gB,MAAOA,EAAO8E,KAAM,CAACwb,OAAOtiB,KAAK0xB,IAAKjlB,QAAQzM,KAAK4wC,eAjMvDysC,GAASkB,GAAA,CADtBjvE,EAAA,GACa+tE,IAsMd,MAAMiB,WAAkB5uE,EAAA,UAAxBlQ,kCA6BYQ,KAAAi7B,OAAqB,CACzB,CAAC/6B,KAAM,OAAQ2H,KAAM,SACrB,CAAC3H,KAAM,OAAQ2H,KAAM,UACrB,CAAC3H,KAAM,cAAe2H,KAAM,WAExB7H,KAAA6mD,SAAoB,CACxB7kD,MAAO,CACH+kC,KAAM,CAAC0f,OAAO,OAAQrmD,MAAM,eAAMwiB,YAAY,0DAC9CviB,KAAM,CAAComD,OAAO,QAASrmD,MAAM,sBAC7BogC,YAAa,CAACimB,OAAO,OAAQrmD,MAAM,eAAMwiB,YAAY,gDAWrD5iB,KAAAwyD,cAAgB,EAAOvX,EAAuB4I,EAAcsO,IAAiBirB,GAAAp9E,UAAA,qBACjF,IAAIE,KAACA,GAAQ+6C,QAEPohB,EAAMpB,eAAe/6D,EAAM2jD,MAMrCrkD,SACI,OAAOkQ,EAAA,cAACgT,EAAA,KAAI,CAACrY,OAAO,4BAChBqF,EAAA,cAACgT,EAAA,KAAI,CAACuY,OAAQj7B,KAAKi7B,OAAQ4rB,SAAU7mD,KAAK6mD,SACtCpzC,KAAM4oD,EAAMvyD,KACZ0oD,cAAexyD,KAAKwyD,mSCjYrB,IAAAgsB,GAff,cAAkB9uE,EAAA,UACRlQ,qDACQuL,SAASC,SACnB0X,EAAA,IAAInc,QAEJ,IAAIk4E,EAAS,IAAI3B,GAAO,UAClB2B,EAAO/4E,UAEjBlG,SACI,OACIkQ,EAAA,cAACgT,EAAA,QAAO,CAAChX,UAAW1L,KAAK0L,cCJrC,MAAMgzE,GAAcC,QACW,cAA7Br5E,OAAO0F,SAAS4zE,UAEe,UAA7Bt5E,OAAO0F,SAAS4zE,UAEhBt5E,OAAO0F,SAAS4zE,SAASC,MACvB,2DAgCN,SAASC,GAAgBC,GACvB76E,UAAU86E,cACPC,SAASF,GACTzyE,KAAK4yE,IACJA,EAAaC,cAAgB,MAC3B,MAAMC,EAAmBF,EAAaG,WAClCD,IACFA,EAAiBE,cAAgB,MACA,cAA3BF,EAAiBh6E,QACflB,UAAU86E,cAAcn7E,WAK1BX,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,8CAOvBqe,MAAMtb,IACLhD,QAAQgD,MAAM,4CAA6CA,mBCrEjEq5E,EAAA,OACE7vE,EAAA,cAAC8uE,GAAG,MACJzzE,SAAS+I,eAAe,SDYX,WACb,GAA6C,kBAAmB5P,UAAW,CAMzE,GAJkB,IAAIs7E,IACpB,IACAl6E,OAAO0F,SAAS4P,YAEJ3P,SAAW3F,OAAO0F,SAASC,OAIvC,OAGF3F,OAAOC,iBAAiB,OAAQ,KAC9B,MAAMw5E,EAAQ,sBAETL,GA0CX,SAAiCK,GAE/Bn1E,MAAMm1E,GACHzyE,KAAKmzE,IAGkB,MAApBA,EAASC,SACwD,IAAjED,EAASt/D,QAAQhX,IAAI,gBAAiBkY,QAAQ,cAG9Cnd,UAAU86E,cAAcW,MAAMrzE,KAAK4yE,IACjCA,EAAaU,aAAatzE,KAAK,KAC7BhH,OAAO0F,SAAS60E,aAKpBf,GAAgBC,KAGnBv9D,MAAM,KACLte,QAAQC,IACN,mEA3DA28E,CAAwBf,GAHxBD,GAAgBC,MC7BxBE","file":"static/js/main.839bda9c.chunk.js","sourcesContent":["export {left0} from './left0';\r\nexport * from './user';\r\nexport * from './net';\r\nexport * from './ui';\r\nexport * from './uid';\r\nexport {PageItems} from './pageItems';\r\nexport {CacheIds} from './cacheIds';\r\nexport * from './entry';\r\n\r\n","export * from './form';\r\nexport * from './list';\r\nexport * from './dropDownActions';\r\nexport * from './easyDate';\r\nexport * from './propGrid';\r\nexport * from './components';\r\nexport * from './media';\r\nexport * from './listView';\r\nexport * from './searchBox';\r\nexport * from './multiStep';\r\nexport * from './uid';\r\n","import * as React from 'react';\r\nimport { Controller, VPage, View } from 'tonva-tools';\r\nimport { Entity, Field, TuidMain } from '../entities';\r\nimport { CUq } from './uq/cUq';\r\nimport { VForm, FieldInputs, FieldCall, FormOptions, FormMode } from './form';\r\nimport { CQuerySelect } from './query';\r\nimport { FormUI, FieldTuidUI } from './formUI';\r\nimport { entityIcons } from './icons';\r\nimport { ControllerUq } from './ControllerUq';\r\n\r\nexport interface EntityUI {\r\n    form?: FormUI;\r\n}\r\n\r\nexport abstract class CEntity<T extends Entity, UI extends EntityUI> extends ControllerUq {\r\n    constructor(cUq: CUq, entity: T, ui: UI, res: any) {\r\n        super(cUq, res);\r\n        Object.setPrototypeOf(this.x, cUq.x);\r\n        let {name, typeName} = entity;\r\n        this.entity = entity;\r\n        this.ui = ui; // || entityUI.ui;\r\n        this.label = this.res.label || name;\r\n        this.icon = entityIcons[typeName];\r\n    }\r\n    readonly entity: T;\r\n    readonly ui: UI;\r\n\r\n    protected async beforeStart():Promise<boolean> {\r\n        //if (await super.beforeStart() === false) return false;\r\n        await this.entity.loadSchema();\r\n        return true;\r\n    }\r\n\r\n    createForm(onSubmit:()=>Promise<void>, values?:any, mode?:FormMode) {\r\n        let options = this.buildFormOptions(mode);\r\n        let ret = new VForm(options, onSubmit);\r\n        ret.setValues(values);\r\n        return ret;\r\n    }\r\n\r\n    private buildFormOptions(mode?:FormMode):FormOptions {\r\n        let {fields, arrFields} = this.entity;\r\n        let none, submitCaption, arrNewCaption, arrEditCaption, arrTitleNewButton;\r\n        if (this.res !== undefined) {\r\n            none = this.res['none'];\r\n            submitCaption = this.res['submit'];\r\n            arrNewCaption = this.res['arrNew'];\r\n            arrEditCaption = this.res['arrEdit'];\r\n            arrTitleNewButton = this.res['arrTitleNewButton'];\r\n        }\r\n        if (none === undefined) {\r\n            none = this.cUq.res['none'] || 'none';\r\n        }\r\n        if (submitCaption === undefined)\r\n            submitCaption = this.cUq.res['submit'] || 'Submit';\r\n        if (arrNewCaption === undefined)\r\n            arrNewCaption = this.cUq.res['arrNew'] || 'New';\r\n        if (arrEditCaption === undefined)\r\n            arrEditCaption = this.cUq.res['arrEdit'] || 'Edit';\r\n        if (arrTitleNewButton === undefined)\r\n        arrTitleNewButton = this.cUq.res['arrTitleNewButton'];\r\n        if (mode === undefined) mode = FormMode.new;\r\n        let formUI = this.ui.form;\r\n        let ret:FormOptions = {\r\n            fields: fields,\r\n            arrs: arrFields,\r\n            ui: formUI,\r\n            res: this.res || {},\r\n            inputs: this.buildInputs(formUI),\r\n            none: none,\r\n            submitCaption: submitCaption,\r\n            arrNewCaption: arrNewCaption,\r\n            arrEditCaption: arrEditCaption,\r\n            arrTitleNewButton: arrTitleNewButton,\r\n            mode: mode,\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private buildInputs(formUI: FormUI):FieldInputs {\r\n        let {fields, arrFields} = this.entity;\r\n        let ret:FieldInputs = {};\r\n        this.buildFieldsInputs(ret, fields, undefined, formUI);\r\n        if (arrFields !== undefined) {\r\n            for (let arr of arrFields) {\r\n                let {name, fields} = arr;\r\n                let items = formUI && formUI.items;\r\n                this.buildFieldsInputs(ret, fields, name, items && items[name] as FormUI);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private buildFieldsInputs(ret:FieldInputs, fields:Field[], arr:string, formUI: FormUI) {\r\n        if (arr !== undefined) {\r\n            let arrFieldInputs = ret[arr];\r\n            if (arrFieldInputs === undefined) {\r\n                ret[arr] = arrFieldInputs = {};\r\n                ret = arrFieldInputs;\r\n            }\r\n        }\r\n        for (let field of fields) {\r\n            let {name, _tuid} = field;\r\n            if (_tuid === undefined) continue;\r\n            let fieldUI = formUI && formUI.items && formUI.items[name] as FieldTuidUI;\r\n            ret[name] = {\r\n                select: this.buildSelect(field, arr, fieldUI),\r\n                content: this.buildContent(field, arr),\r\n                placeHolder: this.cUq.getTuidPlaceHolder(_tuid),\r\n            };\r\n        }\r\n    }\r\n\r\n    protected buildSelect(field:Field, arr:string, fieldUI: FieldTuidUI):FieldCall {\r\n        return async (form:VForm, field:Field, values:any):Promise<any> => {\r\n            let {_tuid, _ownerField} = field;\r\n            let cTuidSelect = await (_tuid as TuidMain).cSelectFrom();\r\n            let param:any = undefined;\r\n            if (_ownerField !== undefined) param = form.getValue(_ownerField.name);\r\n            if (fieldUI && fieldUI.autoList === true) {\r\n                console.log('select search set param=empty string');\r\n                param = '';\r\n            }\r\n            let ret = await cTuidSelect.call(param);\r\n            cTuidSelect.removeCeased(); // 清除已经废弃的顶部页面\r\n            if (ret === undefined) return undefined;\r\n            let id = cTuidSelect.idFromItem(ret);\r\n            _tuid.useId(id);\r\n            return id;\r\n        };\r\n    }\r\n\r\n    protected buildContent(field:Field, arr:string): React.StatelessComponent<any> {\r\n        return;\r\n    }\r\n\r\n    cQuerySelect(queryName:string):CQuerySelect {\r\n        return this.cUq.cQuerySelect(queryName);\r\n    }\r\n}\r\n\r\nexport abstract class VEntity<T extends Entity, UI extends EntityUI, C extends CEntity<T, UI>> extends VPage<C> {\r\n    protected readonly entity: T;\r\n    protected readonly ui: UI;\r\n    constructor(controller: C) {\r\n        super(controller);\r\n        this.entity = controller.entity;\r\n        this.ui = controller.ui;\r\n    }\r\n\r\n    get label():string {return this.controller.label}\r\n\r\n    //private _form_$: VForm;\r\n    protected createForm(onSubmit:()=>Promise<void>, values?:any, mode?:FormMode): VForm {\r\n        //if (this._form_$ !== undefined) return this._form_$;\r\n        return this.controller.createForm(onSubmit, values, mode);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport {User, Guest/*, UserInNav*/} from '../user';\r\nimport {Page} from './page';\r\nimport {netToken} from '../net/netToken';\r\nimport FetchErrorView from './fetchErrorView';\r\nimport {FetchError} from '../fetchError';\r\nimport {appUrl, setMeInFrame, logoutUqTokens} from '../net/appBridge';\r\nimport {LocalData} from '../local';\r\nimport {guestApi, logoutApis, setCenterUrl, setCenterToken, WSChannel, meInFrame, isDevelopment, host} from '../net';\r\nimport { WsBase, wsBridge } from '../net/wsChannel';\r\nimport { resOptions } from './res';\r\nimport { Loading } from './loading';\r\n\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport '../css/va-form.css';\r\nimport '../css/va.css';\r\nimport '../css/animation.css';\r\n\r\nconst regEx = new RegExp('Android|webOS|iPhone|iPad|' +\r\n    'BlackBerry|Windows Phone|'  +\r\n    'Opera Mini|IEMobile|Mobile' , \r\n    'i');\r\nconst isMobile = regEx.test(navigator.userAgent);\r\nexport const mobileHeaderStyle = isMobile? {\r\n    minHeight:  '3em'\r\n} : undefined;\r\n\r\nconst logo = require('../img/logo.svg');\r\nlet logMark: number;\r\nconst logs:string[] = [];\r\n\r\nexport interface Props //extends React.Props<Nav>\r\n{\r\n    //view: JSX.Element | (()=>JSX.Element);\r\n    //start?: ()=>Promise<void>;\r\n    onLogined: ()=>Promise<void>;\r\n    notLogined?: ()=>Promise<void>;\r\n};\r\nlet stackKey = 1;\r\nexport interface StackItem {\r\n    key: number;\r\n    view: JSX.Element;\r\n    ceased: boolean;\r\n    confirmClose?: ()=>Promise<boolean>;\r\n    disposer?: ()=>void;\r\n}\r\nexport interface State {\r\n    stack: StackItem[];\r\n    wait: 0|1|2;\r\n    fetchError: FetchError\r\n}\r\n\r\nexport class NavView extends React.Component<Props, State> {\r\n    private stack: StackItem[];\r\n    private htmlTitle: string;\r\n    private waitCount: number = 0;\r\n    private waitTimeHandler?: NodeJS.Timer;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.back = this.back.bind(this);\r\n        this.navBack = this.navBack.bind(this);\r\n        this.stack = [];\r\n        this.state = {\r\n            stack: this.stack,\r\n            wait: 0,\r\n            fetchError: undefined\r\n        };\r\n    }\r\n    async componentWillMount() {\r\n        window.addEventListener('popstate', this.navBack);\r\n    }\r\n\r\n    async componentDidMount()\r\n    {\r\n        nav.set(this);\r\n        /*\r\n        let start = this.props.start;\r\n        if (start !== undefined) {\r\n            await start();\r\n        }\r\n        else {\r\n        */\r\n            await nav.start();\r\n        //}\r\n    }\r\n\r\n    get level(): number {\r\n        return this.stack.length;\r\n    }\r\n\r\n    startWait() {\r\n        if (this.waitCount === 0) {\r\n            this.setState({wait: 1});\r\n            this.waitTimeHandler = global.setTimeout(\r\n                () => {\r\n                    this.waitTimeHandler = undefined;\r\n                    this.setState({wait: 2});\r\n                },\r\n                1000) as NodeJS.Timer;\r\n        }\r\n        ++this.waitCount;\r\n        this.setState({\r\n            fetchError: undefined,\r\n        });\r\n    }\r\n\r\n    endWait() {\r\n        setTimeout(() => {\r\n            /*\r\n            this.setState({\r\n                fetchError: undefined,\r\n            });*/\r\n            --this.waitCount;\r\n            if (this.waitCount === 0) {\r\n                if (this.waitTimeHandler !== undefined) {\r\n                    clearTimeout(this.waitTimeHandler);\r\n                    this.waitTimeHandler = undefined;\r\n                }\r\n                this.setState({wait: 0});\r\n            }\r\n        },100);\r\n    }\r\n\r\n    async onError(fetchError: FetchError)\r\n    {\r\n        let err = fetchError.error;\r\n        if (err !== undefined && err.unauthorized === true) {\r\n            await nav.showLogin(undefined);\r\n            return;\r\n        }\r\n        this.setState({\r\n            fetchError: fetchError,\r\n        });\r\n    }\r\n\r\n    show(view: JSX.Element, disposer?: ()=>void): number {\r\n        this.clear();\r\n        return this.push(view, disposer);\r\n    }\r\n\r\n    push(view: JSX.Element, disposer?: ()=>void): number {\r\n        this.removeCeased();\r\n        if (this.stack.length > 0) {\r\n            window.history.pushState('forward', null, null);\r\n        }\r\n        let key = stackKey++;\r\n        this.stack.push({\r\n            key: key,\r\n            view: view, \r\n            ceased: false,\r\n            disposer: disposer\r\n        });\r\n        this.refresh();\r\n        //console.log('push: %s pages', this.stack.length);\r\n        return key;\r\n    }\r\n\r\n    replace(view: JSX.Element, disposer?: ()=>void): number {\r\n        let item:StackItem = undefined;\r\n        let stack = this.stack;\r\n        if (stack.length > 0) {\r\n            item = stack.pop();\r\n            //this.popAndDispose();\r\n        }\r\n        let key = stackKey++;\r\n        this.stack.push({\r\n            key: key, \r\n            view: view, \r\n            ceased: false,\r\n            disposer: disposer\r\n        });\r\n        if (item !== undefined) this.dispose(item.disposer);\r\n        this.refresh();\r\n        //console.log('replace: %s pages', this.stack.length);\r\n        return key;\r\n    }\r\n\r\n    ceaseTop(level:number = 1) {\r\n        let p = this.stack.length - 1;\r\n        for (let i=0; i<level; i++, p--) {\r\n            if (p < 0) break;\r\n            let item = this.stack[p];\r\n            item.ceased = true;\r\n        }\r\n    }\r\n\r\n    pop(level:number = 1) {\r\n        let stack = this.stack;\r\n        let len = stack.length;\r\n        //console.log('pop start: %s pages level=%s', len, level);\r\n        if (level <= 0 || len <= 1) return;\r\n        if (len < level) level = len;\r\n        let backLevel = 0;\r\n        for (let i = 0; i < level; i++) {\r\n            if (stack.length === 0) break;\r\n            //stack.pop();\r\n            this.popAndDispose();\r\n            ++backLevel;\r\n        }\r\n        if (backLevel >= len) backLevel--;\r\n        this.refresh();\r\n        if (this.isHistoryBack !== true) {\r\n            //window.removeEventListener('popstate', this.navBack);\r\n            //window.history.back(backLevel);\r\n            //window.addEventListener('popstate', this.navBack);\r\n        }\r\n        //console.log('pop: %s pages', stack.length);\r\n    }\r\n\r\n    popTo(key: number) {\r\n        if (key === undefined) return;\r\n        if (this.stack.find(v => v.key === key) === undefined) return;\r\n        while (this.stack.length >0) {\r\n            let len = this.stack.length;\r\n            let top = this.stack[len-1];\r\n            if (top.key === key) break;\r\n            this.pop();\r\n        }\r\n    }\r\n\r\n    topKey():number {\r\n        let len = this.stack.length;\r\n        if (len === 0) return undefined;\r\n        return this.stack[len-1].key;\r\n    }\r\n\r\n    removeCeased() {\r\n        for (;;) {\r\n            let p=this.stack.length-1;\r\n            if (p < 0) break;\r\n            let top = this.stack[p];\r\n            if (top.ceased === false) break;\r\n            let item = this.stack.pop();\r\n            let {disposer} = item;\r\n            this.dispose(disposer);\r\n        }\r\n        this.refresh();\r\n    }\r\n\r\n    private popAndDispose() {\r\n        this.removeCeased();\r\n        let item = this.stack.pop();\r\n        if (item === undefined) return;\r\n        let {disposer} = item;\r\n        this.dispose(disposer);\r\n        this.removeCeased();\r\n        return item;\r\n    }\r\n\r\n    private dispose(disposer:()=>void) {\r\n        if (disposer === undefined) return;\r\n        let item = this.stack.find(v => v.disposer === disposer);\r\n        if (item === undefined) disposer();\r\n    }\r\n\r\n    clear() {\r\n        let len = this.stack.length;\r\n        while (this.stack.length > 0) this.popAndDispose();\r\n        this.refresh();\r\n        if (len > 1) {\r\n            //window.removeEventListener('popstate', this.navBack);\r\n            //window.history.back(len-1);\r\n            //window.addEventListener('popstate', this.navBack);\r\n        }\r\n    }\r\n\r\n    regConfirmClose(confirmClose:()=>Promise<boolean>) {\r\n        let stack = this.stack;\r\n        let len = stack.length;\r\n        if (len === 0) return;\r\n        let top = stack[len-1];\r\n        top.confirmClose = confirmClose;\r\n    }\r\n\r\n    private isHistoryBack:boolean = false;\r\n    navBack() {\r\n        nav.log('backbutton pressed - nav level: ' + this.stack.length);\r\n        this.isHistoryBack = true;\r\n        this.back(true);\r\n        this.isHistoryBack = false;\r\n    }\r\n\r\n    async back(confirm:boolean = true) {\r\n        let stack = this.stack;\r\n        let len = stack.length;\r\n        if (len === 0) return;\r\n        if (len === 1) {\r\n            if (self != window.top) {\r\n                window.top.postMessage({type:'pop-app'}, '*');\r\n            }\r\n            return;\r\n        }\r\n        let top = stack[len-1];\r\n        if (confirm===true && top.confirmClose) {\r\n            if (await top.confirmClose()===true) this.pop();\r\n        }\r\n        else {\r\n            this.pop();\r\n        }\r\n    }\r\n\r\n    confirmBox(message?:string): boolean {\r\n        return window.confirm(message);\r\n    }\r\n    clearError = () => {\r\n        this.setState({fetchError: undefined});\r\n    }\r\n    render() {\r\n        const {wait, fetchError} = this.state;\r\n        let stack = this.state.stack;\r\n        let top = stack.length - 1;\r\n        let elWait = null, elError = null;\r\n        switch (wait) {\r\n            case 1:\r\n                elWait = <li className=\"va-wait va-wait1\">\r\n                </li>;\r\n                break;\r\n            case 2:\r\n                elWait = <li className=\"va-wait va-wait2\">\r\n                    <i className=\"fa fa-spinner fa-spin fa-3x fa-fw\"></i>\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </li>;\r\n                break;\r\n        }\r\n        if (fetchError)\r\n            elError = <FetchErrorView clearError={this.clearError} {...fetchError} />\r\n        return (\r\n        <ul className='va'>\r\n            {\r\n                stack.map((item, index) => {\r\n                    let {key, view} = item;\r\n                    return <li key={key} style={index<top? {visibility: 'hidden'}:undefined}>\r\n                        {view}\r\n                    </li>\r\n                })\r\n            }\r\n            {elWait}\r\n            {elError}\r\n        </ul>\r\n        );\r\n    }\r\n\r\n    private refresh() {\r\n        // this.setState({flag: !this.state.flag});\r\n        this.setState({stack: this.stack });\r\n        // this.forceUpdate();\r\n    }\r\n}\r\n\r\nexport class Nav {\r\n    private nav:NavView;\r\n    private ws: WsBase;\r\n    private wsHost: string;\r\n    private local: LocalData = new LocalData();\r\n    @observable user: User/*InNav*/ = undefined;\r\n    language: string;\r\n    culture: string;\r\n    resUrl: string;\r\n\r\n    constructor() {\r\n        let {lang, district} = resOptions;\r\n        this.language = lang;\r\n        this.culture = district;\r\n    }\r\n\r\n    get guest(): number {\r\n        let guest = this.local.guest;\r\n        if (guest === undefined) return 0;\r\n        let g = guest.get();\r\n        if (g === undefined) return 0;\r\n        return g.guest;\r\n    }\r\n\r\n    set(nav:NavView) {\r\n        //this.logo = logo;\r\n        this.nav = nav;\r\n    }\r\n\r\n    registerReceiveHandler(handler: (message:any)=>Promise<void>):number {\r\n        if (this.ws === undefined) return;\r\n        return this.ws.onWsReceiveAny(handler);\r\n    }\r\n\r\n    unregisterReceiveHandler(handlerId:number) {\r\n        if (this.ws === undefined) return;\r\n        if (handlerId === undefined) return;\r\n        this.ws.endWsReceive(handlerId);\r\n    }\r\n\r\n    async onReceive(msg:any) {\r\n        if (this.ws === undefined) return;\r\n        await this.ws.receive(msg);\r\n    }\r\n\r\n    private async getUnitName() {\r\n        try {\r\n            let unitRes = await fetch('unit.json', {});\r\n            //if (unitRes)\r\n            let res = await unitRes.json();\r\n            return res.unit;\r\n        }\r\n        catch (err) {\r\n            this.local.unit.clear();\r\n            return;\r\n        }\r\n    }\r\n\r\n    private async loadUnit() {\r\n        let unitName:string;\r\n        let unit = this.local.unit.get();\r\n        if (unit !== undefined) {\r\n            if (isDevelopment !== true) return unit.id;\r\n            unitName = await this.getUnitName();\r\n            if (unitName === undefined) return;\r\n            if (unit.name === unitName) return unit.id;\r\n        }\r\n        else {\r\n            unitName = await this.getUnitName();\r\n            if (unitName === undefined) return;\r\n        }\r\n        let unitId = await guestApi.unitFromName(unitName);\r\n        if (unitId !== undefined) {\r\n            this.local.unit.set({id: unitId, name: unitName});\r\n        }\r\n        return unitId;\r\n    }\r\n\r\n    private isInFrame:boolean;\r\n    private centerHost: string;\r\n    async start() {\r\n        nav.clear();\r\n        nav.push(<Page header={false}><Loading /></Page>);\r\n        await host.start();\r\n        let {url, ws, resHost} = host;\r\n        this.centerHost = url;\r\n        this.resUrl = 'http://' + resHost + '/res/';\r\n        this.wsHost = ws;\r\n        setCenterUrl(url);\r\n        \r\n        let unit = await this.loadUnit();\r\n        meInFrame.unit = unit;\r\n\r\n        let guest:Guest = this.local.guest.get();\r\n        if (guest === undefined) {\r\n            guest = await guestApi.guest();\r\n        }\r\n        nav.setGuest(guest);\r\n\r\n        let hash = document.location.hash;\r\n        // document.title = document.location.origin;\r\n        console.log(\"url=%s hash=%s\", document.location.origin, hash);\r\n        this.isInFrame = hash !== undefined && hash !== '' && hash.startsWith('#tv');\r\n        if (this.isInFrame === true) {\r\n            let mif = setMeInFrame(hash);\r\n            if (mif !== undefined) {\r\n                this.ws = wsBridge;\r\n                console.log('this.ws = wsBridge in sub frame');\r\n                //nav.user = {id:0} as User;\r\n                if (self !== window.parent) {\r\n                    window.parent.postMessage({type:'sub-frame-started', hash: mif.hash}, '*');\r\n                }\r\n                // 下面这一句，已经移到 appBridge.ts 里面的 initSubWin，也就是响应从main frame获得user之后开始。\r\n                //await this.showAppView();\r\n                return;\r\n            }\r\n        }\r\n\r\n        let user: User = this.local.user.get();\r\n        if (user === undefined) {\r\n            let {notLogined} = this.nav.props;\r\n            if (notLogined !== undefined) {\r\n                await notLogined();\r\n            }\r\n            else {\r\n                await nav.showLogin(undefined);\r\n            }\r\n            return;\r\n        }\r\n\r\n        await nav.logined(user);\r\n    }\r\n\r\n    async showAppView() {\r\n        let {onLogined} = this.nav.props;\r\n        if (onLogined === undefined) {\r\n            nav.push(<div>NavView has no prop onLogined</div>);\r\n            return;\r\n        }\r\n        nav.clear();\r\n        await onLogined();\r\n        console.log('logined: AppView shown');\r\n    }\r\n\r\n    setGuest(guest: Guest) {\r\n        this.local.guest.set(guest);\r\n        netToken.set(0, guest.token);\r\n    }\r\n\r\n    saveLocalUser() {\r\n        this.local.user.set(this.user);\r\n    }\r\n\r\n    async logined(user: User, callback?: (user:User)=>Promise<void>) {\r\n        let ws:WSChannel = this.ws = new WSChannel(this.wsHost, user.token);\r\n        ws.connect();\r\n\r\n        console.log(\"logined: %s\", JSON.stringify(user));\r\n        this.user = user;\r\n        this.saveLocalUser();\r\n        netToken.set(user.id, user.token);\r\n        if (callback !== undefined) //this.loginCallbacks.has)\r\n            callback(user);\r\n            //this.loginCallbacks.call(user);\r\n        else {\r\n            await this.showAppView();\r\n        }\r\n    }\r\n\r\n    async showLogin(callback?: (user:User)=>Promise<void>, top?:any, withBack?:boolean) {\r\n        let lv = await import('../entry/login');\r\n         let loginView = <lv.default withBack={withBack} callback={callback} top={top} />;\r\n        if (withBack !== true) {\r\n            this.nav.clear();\r\n            this.pop();\r\n        }\r\n        this.nav.push(loginView);\r\n    }\r\n\r\n    async showLogout(callback?: ()=>Promise<void>) {\r\n        nav.push(<Page header=\"安全退出\" back=\"close\">\r\n            <div className=\"m-5 border border-info bg-white rounded p-3 text-center\">\r\n                <div>退出当前账号不会删除任何历史数据，下次登录依然可以使用本账号</div>\r\n                <div className=\"mt-3\">\r\n                    <button className=\"btn btn-danger\" onClick={()=>this.logout(callback)}>退出</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n    }\r\n\r\n    async logout(callback?:()=>Promise<void>) { //notShowLogin?:boolean) {\r\n        this.local.logoutClear();\r\n        this.user = undefined; //{} as User;\r\n        logoutApis();\r\n        logoutUqTokens();\r\n        let guest = this.local.guest.get();\r\n        setCenterToken(0, guest && guest.token);\r\n        this.ws = undefined;\r\n        /*\r\n        if (this.loginCallbacks.has)\r\n            this.logoutCallbacks.call();\r\n        else {\r\n            if (notShowLogin === true) return;\r\n        }\r\n        await nav.start();\r\n        */\r\n        if (callback === undefined)\r\n            await nav.start();\r\n        else\r\n            await callback();\r\n    }\r\n\r\n    async changePassword() {\r\n        let cp = await import('../entry/changePassword');\r\n        nav.push(<cp.ChangePasswordPage />);\r\n    }\r\n\r\n    get level(): number {\r\n        return this.nav.level;\r\n    }\r\n    startWait() {\r\n        this.nav.startWait();\r\n    }\r\n    endWait() {\r\n        this.nav.endWait();\r\n    }\r\n    async onError(error: FetchError) {\r\n        await this.nav.onError(error);\r\n    }\r\n    show (view: JSX.Element, disposer?: ()=>void): void {\r\n        this.nav.show(view, disposer);\r\n    }\r\n    push(view: JSX.Element, disposer?: ()=>void): void {\r\n        this.nav.push(view, disposer);\r\n    }\r\n    replace(view: JSX.Element, disposer?: ()=>void): void {\r\n        this.nav.replace(view, disposer);\r\n    }\r\n    pop(level:number = 1) {\r\n        this.nav.pop(level);\r\n    }\r\n    topKey():number {\r\n        return this.nav.topKey();\r\n    }\r\n    popTo(key:number) {\r\n        this.nav.popTo(key);\r\n    }\r\n    clear() {\r\n        this.nav.clear();\r\n    }\r\n    navBack() {\r\n        this.nav.navBack();\r\n    }\r\n    ceaseTop(level?:number) {\r\n        this.nav.ceaseTop(level);\r\n    }\r\n    removeCeased() {\r\n        this.nav.removeCeased();\r\n    }\r\n    async back(confirm:boolean = true) {\r\n        await this.nav.back(confirm);\r\n    }\r\n    regConfirmClose(confirmClose: ()=>Promise<boolean>) {\r\n        this.nav.regConfirmClose(confirmClose);\r\n    }\r\n    confirmBox(message?:string): boolean {\r\n        return this.nav.confirmBox(message);\r\n    }\r\n    async navToApp(url: string, unitId: number, apiId?:number, sheetType?:number, sheetId?:number):Promise<void> {\r\n        return new Promise<void>((resolve, reject) => {\r\n            let sheet = this.centerHost.includes('http://localhost:') === true? 'sheet_debug':'sheet'\r\n            let uh = sheetId === undefined?\r\n                    appUrl(url, unitId) :\r\n                    appUrl(url, unitId, sheet, [apiId, sheetType, sheetId]);\r\n            console.log('navToApp: %s', JSON.stringify(uh));\r\n            nav.push(<article className='app-container'>\r\n                <span id={uh.hash} onClick={()=>this.back()} style={mobileHeaderStyle}>\r\n                    <i className=\"fa fa-arrow-left\" />\r\n                </span>\r\n                <iframe src={uh.url} />\r\n            </article>, \r\n            ()=> {\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n\r\n    navToSite(url: string) {\r\n        // show in new window\r\n        window.open(url);\r\n    }\r\n\r\n    get logs() {return logs};\r\n    log(msg:string) {\r\n        logs.push(msg);\r\n    }\r\n    logMark() {\r\n        let date = new Date();\r\n        logMark = date.getTime();\r\n        logs.push('log-mark: ' + date.toTimeString());\r\n    }\r\n    logStep(step:string) {\r\n        logs.push(step + ': ' + (new Date().getTime() - logMark));\r\n    }\r\n}\r\nexport const nav: Nav = new Nav();\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { jsonStringify } from '../../tools';\r\n\r\nexport type TypeViewModel = typeof ViewModel;\r\nexport type TypeView = React.StatelessComponent<{vm: ViewModel, className?:string|string[]}>;\r\nexport type TypeContent = React.StatelessComponent<any>;\r\n\r\nexport abstract class ViewModel {\r\n    protected abstract get view(): TypeView;\r\n    render(className?:string|string[]):JSX.Element {\r\n        if (this.view === undefined) return <div>??? viewModel 必须定义 view ???</div>\r\n        return React.createElement(this.view, {vm: this, className:className});\r\n    }\r\n}\r\n\r\nexport const PureJSONContent = (values, x?:any) => <>content: {jsonStringify(values)}</>;\r\nexport const JSONContent = observer(PureJSONContent);\r\nexport const RowContent = \r\n    (values) => <div className=\"px-3 py-2\">{jsonStringify(values)}</div>\r\n;\r\n","function replacer(key:string, value:any) {\r\n    let first = key.substr(0, 1);\r\n    switch (first) {\r\n        default: return value;\r\n        case '$':\r\n        case '_': return;\r\n    }\r\n}\r\n\r\nexport function jsonStringify(value:any) {\r\n    return JSON.stringify(value, replacer, ' ');\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { BoxId, Tuid } from \"../entities\";\r\nimport { PureJSONContent } from '../controllers';\r\n\r\ntype TvTemplet = (values?:any, x?:any) => JSX.Element;\r\n\r\ninterface Props {\r\n    tuidValue: number|BoxId, \r\n    ui?: TvTemplet,\r\n    x?: any,\r\n    nullUI?: ()=>JSX.Element\r\n}\r\n\r\nfunction boxIdContent(bi: number|BoxId, ui:TvTemplet, x:any) {\r\n    if (typeof bi === 'number') return <>{bi}</>;\r\n    let {id, _$tuid, _$com} = bi as BoxId;\r\n    let t:Tuid = _$tuid;\r\n    if (t === undefined) {\r\n        if (ui !== undefined) return ui(bi, x);\r\n        return PureJSONContent(bi, x);\r\n    }\r\n    let com = ui || _$com;\r\n    if (com === undefined) {\r\n        com = bi._$com = t.getTuidContent();\r\n    }\r\n    let val = t.valueFromId(id);\r\n    if (typeof val === 'number') val = {id: val};\r\n    if (ui !== undefined) {\r\n        let ret = ui(val, x);\r\n        if (ret !== undefined) return ret;\r\n        return <>{id}</>;\r\n    }\r\n    return React.createElement(com, val);\r\n}\r\n\r\nconst Tv = observer(({tuidValue, ui, x, nullUI}:Props) => {\r\n    let ttv = typeof tuidValue;\r\n    switch (ttv) {\r\n        default:\r\n            if (ui === undefined)\r\n                return <>{ttv}-{tuidValue}</>;\r\n            else {\r\n                let ret = ui(tuidValue, x);\r\n                if (ret !== undefined) return ret;\r\n                return <>{tuidValue}</>;\r\n            }\r\n        case 'undefined':\r\n            break;\r\n        case 'object':\r\n            if (tuidValue !== null) return boxIdContent(tuidValue, ui, x);\r\n            break;\r\n        case 'number':\r\n            return <>id...{tuidValue}</>;\r\n    }       \r\n    if (nullUI === undefined) return <>null</>;\r\n    return nullUI();\r\n});\r\n\r\nexport const tv = (tuidValue:number|BoxId, ui?:TvTemplet, x?:any, nullUI?:()=>JSX.Element):JSX.Element => {\r\n    return <Tv tuidValue={tuidValue} ui={ui} x={x} nullUI={nullUI} />;\r\n};\r\n","export * from './jsonStringify';\r\nexport * from './tv';\r\n","import { decodeGuestToken } from '../user';\r\nimport { CenterApi } from './uqApi';\r\n\r\nexport class GuestApi extends CenterApi {\r\n    async guest(): Promise<any> {\r\n        //let guest = nav.local.guest.get();\r\n        let ret = await this.get('', {});\r\n        switch (typeof ret) {\r\n            default: return;\r\n            case 'string': return decodeGuestToken(ret);\r\n            case 'object':\r\n                let guest = decodeGuestToken(ret.token);\r\n                return guest;\r\n        }\r\n    }\r\n\r\n    async unitFromName(unitName:string): Promise<number> {\r\n        let ret = await this.get(unitName);\r\n        return ret && ret.unit;\r\n    }\r\n}\r\n\r\nexport const guestApi = new GuestApi('tv/guest/', undefined);\r\n","export {WSChannel, wsBridge, postWsToTop} from './wsChannel';\r\nexport * from './apiBase';\r\nexport * from './guestApi';\r\nexport * from './uqApi';\r\nexport {meInFrame, loadAppUqs, isBridged} from './appBridge';\r\nexport * from './host';\r\nexport {httpGet} from './httpChannel';\r\n","export * from './nav';\r\nexport * from './titleBar';\r\nexport * from './page';\r\nexport * from './VM';\r\nexport * from './schema';\r\nexport * from './form';\r\nexport * from './edit';\r\nexport * from './res';\r\nexport * from './tabs';\r\nexport * from './loading';\r\nexport * from './image';\r\nexport * from './resUploader';","import _ from 'lodash';\r\nimport {nav} from '../ui';\r\nimport {uid} from '../uid';\r\nimport {uqTokenApi as uqTokenApi, callCenterapi, CenterAppApi, AppUq, centerToken, App, setCenterToken} from './uqApi';\r\nimport {setSubAppWindow} from './wsChannel';\r\nimport { host } from './host';\r\n\r\nexport interface UqToken {\r\n    name: string;\r\n    url: string;\r\n    urlDebug: string;\r\n    token: string;\r\n}\r\ninterface UqTokenAction extends UqToken {\r\n    resolve: (value?: UqToken | PromiseLike<UqToken>) => void;\r\n    reject: (reason?: any) => void;\r\n}\r\nconst uqTokens:{[uqName:string]: UqTokenAction}  = {};\r\nexport function logoutUqTokens() {\r\n    for (let i in uqTokens) uqTokens[i] = undefined;\r\n}\r\n\r\nexport interface AppInFrame {\r\n    hash: string;\r\n    unit: number;       // unit id\r\n    page?: string;\r\n    param?: string[];\r\n}\r\nconst appsInFrame:{[key:string]:AppInFrame} = {};\r\n\r\nclass AppInFrameClass implements AppInFrame {\r\n    hash: string;\r\n    private _unit: number;\r\n    get unit(): number {return this._unit;}       // unit id\r\n    set unit(val:number) { this._unit=val;}\r\n    page?: string;\r\n    param?: string[];\r\n}\r\n\r\nexport let meInFrame:AppInFrame = new AppInFrameClass();\r\n/* {\r\n    hash: undefined,\r\n    get unit():number {return } undefined, //debugUnitId,\r\n    page: undefined;\r\n    param: undefined,\r\n}*/\r\n\r\nexport function isBridged():boolean {\r\n    return self !== window.parent;\r\n}\r\n\r\nwindow.addEventListener('message', async function(evt) {\r\n    var message = evt.data;\r\n    switch (message.type) {\r\n        case 'sub-frame-started':\r\n            subFrameStarted(evt);\r\n            break;\r\n        case 'ws':\r\n            //wsBridge.receive(message.msg);\r\n            await nav.onReceive(message.msg);\r\n            break;\r\n        case 'init-sub-win':\r\n            await initSubWin(message);\r\n            break;\r\n        case 'pop-app':\r\n            nav.navBack();\r\n            break;\r\n        case 'center-api':\r\n            await callCenterApiFromMessage(evt.source as Window, message);\r\n            break;\r\n        case 'center-api-return':\r\n            bridgeCenterApiReturn(message);\r\n            break;\r\n        case 'app-api':\r\n            console.log(\"receive PostMessage: %s\", JSON.stringify(message));\r\n            let ret = await onReceiveAppApiMessage(message.hash, message.apiName);\r\n            console.log(\"onReceiveAppApiMessage: %s\", JSON.stringify(ret));\r\n            (evt.source as Window).postMessage({\r\n                type: 'app-api-return', \r\n                apiName: message.apiName,\r\n                url: ret.url,\r\n                urlDebug: ret.urlDebug,\r\n                token: ret.token} as any, \"*\");\r\n            break;\r\n        case 'app-api-return':\r\n            console.log(\"app-api-return: %s\", JSON.stringify(message));\r\n            console.log('await onAppApiReturn(message);');\r\n            await onAppApiReturn(message);\r\n            break;\r\n        default:\r\n            this.console.log('message: %s', JSON.stringify(message));\r\n            break;\r\n    }\r\n});\r\n\r\nfunction subFrameStarted(evt:any) {\r\n    var message = evt.data;\r\n    let subWin = evt.source as Window;\r\n    setSubAppWindow(subWin);\r\n    hideFrameBack(message.hash);\r\n    let msg:any = _.clone(nav.user);\r\n    msg.type = 'init-sub-win';\r\n    subWin.postMessage(msg, '*');\r\n}\r\nfunction hideFrameBack(hash:string) {\r\n    let el = document.getElementById(hash);\r\n    if (el !== undefined) el.hidden = true;\r\n}\r\nasync function initSubWin(message:any) {\r\n    console.log('initSubWin: set nav.user', message);\r\n    let user = nav.user = message; // message.user;\r\n    setCenterToken(user.id, user.token);\r\n    await nav.showAppView();\r\n}\r\nasync function onReceiveAppApiMessage(hash: string, apiName: string): Promise<UqToken> {\r\n    let appInFrame = appsInFrame[hash];\r\n    if (appInFrame === undefined) return {name:apiName, url:undefined, urlDebug:undefined, token:undefined};\r\n    let {unit} = appInFrame;\r\n    let parts = apiName.split('/');\r\n    let ret = await uqTokenApi.uq({unit: unit, uqOwner: parts[0], uqName: parts[1]});\r\n    if (ret === undefined) {\r\n        console.log('apiTokenApi.api return undefined. api=%s, unit=%s', apiName, unit);\r\n        throw 'api not found';\r\n    }\r\n    return {name: apiName, url: ret.url, urlDebug:ret.urlDebug, token: ret.token};\r\n}\r\n\r\nasync function onAppApiReturn(message:any) {\r\n    let {apiName, url, urlDebug, token} = message;\r\n    let action = uqTokens[apiName];\r\n    if (action === undefined) {\r\n        throw 'error app api return';\r\n        //return;\r\n    }\r\n    let realUrl = host.getUrlOrDebug(url, urlDebug);\r\n    console.log('onAppApiReturn(message:any): url=' + url + ', debug=' + urlDebug + ', real=' + realUrl);\r\n    action.url = realUrl;\r\n    action.token = token;\r\n    action.resolve(action);\r\n}\r\n\r\nexport function setMeInFrame(appHash: string):AppInFrame {\r\n    let parts = appHash.split('-');\r\n    let len = parts.length;\r\n    meInFrame.hash = parts[0].substr(3);\r\n    if (len>0) meInFrame.unit = Number(parts[1]);\r\n    if (len>1) meInFrame.page = parts[2];\r\n    if (len>2) meInFrame.param = parts.slice(3);\r\n    return meInFrame;\r\n}\r\n\r\nexport function appUrl(url: string, unitId: number, page?:string, param?:any[]):{url:string; hash:string} {\r\n    let u:string;\r\n    for (;;) {\r\n        u = uid();\r\n        let a = appsInFrame[u];\r\n        if (a === undefined) {\r\n            appsInFrame[u] = {hash:u, unit:unitId};\r\n            break;\r\n        }\r\n    }\r\n    url += '#tv' + u + '-' + unitId;\r\n    if (page !== undefined) {\r\n        url += '-' + page;\r\n        if (param !== undefined) {\r\n            for (let i=0; i<param.length; i++) {\r\n                url += '-' + param[i];\r\n            }\r\n        }\r\n    }\r\n    return {url: url, hash: u};\r\n}\r\n\r\nexport async function loadAppUqs(appOwner:string, appName): Promise<App> {\r\n    let centerAppApi = new CenterAppApi('tv/', undefined);\r\n    let unit = meInFrame.unit;\r\n    let ret = await centerAppApi.uqs(unit, appOwner, appName);\r\n    centerAppApi.checkUqs(unit, appOwner, appName).then(v => {\r\n        if (v === false) nav.start();\r\n    });\r\n    return ret;\r\n}\r\n\r\nexport async function appUq(uq:string, uqOwner:string, uqName:string): Promise<UqToken> {\r\n    let uqToken = uqTokens[uq];\r\n    if (uqToken !== undefined) return uqToken;\r\n    if (!isBridged()) {\r\n        uqToken = await uqTokenApi.uq({unit: meInFrame.unit, uqOwner:uqOwner, uqName:uqName});\r\n        if (uqToken === undefined) {\r\n            let err = 'unauthorized call: uqTokenApi center return undefined!';\r\n            throw err;\r\n        }\r\n        if (uqToken.token === undefined) uqToken.token = centerToken;\r\n        let {url, urlDebug} = uqToken;\r\n        let realUrl = host.getUrlOrDebug(url, urlDebug);\r\n        console.log('realUrl: %s', realUrl);\r\n        uqToken.url = realUrl;\r\n        uqTokens[uq] = uqToken;\r\n        return uqToken;\r\n    }\r\n    console.log(\"appApi parent send: %s\", meInFrame.hash);\r\n    uqToken = {\r\n        name: uq,\r\n        url: undefined,\r\n        urlDebug: undefined,\r\n        token: undefined,\r\n        resolve: undefined,\r\n        reject: undefined,\r\n    };\r\n    uqTokens[uq] = uqToken;\r\n    return new Promise<UqToken>((resolve, reject) => {\r\n        uqToken.resolve = async (at) => {\r\n            let a = await at;\r\n            console.log('return from parent window: %s', JSON.stringify(a));\r\n            uqToken.url = a.url;\r\n            uqToken.urlDebug = a.urlDebug;\r\n            uqToken.token = a.token;\r\n            resolve(uqToken);\r\n        }\r\n        uqToken.reject = reject;\r\n        (window.opener || window.parent).postMessage({\r\n            type: 'app-api',\r\n            apiName: uq,\r\n            hash: meInFrame.hash,\r\n        }, \"*\");\r\n    });\r\n}\r\n\r\ninterface BridgeCenterApi {\r\n    id: string;\r\n    resolve: (value?:any)=>any;\r\n    reject: (reason?:any)=>void;\r\n}\r\nconst brideCenterApis:{[id:string]: BridgeCenterApi} = {};\r\nexport async function bridgeCenterApi(url:string, method:string, body:any):Promise<any> {\r\n    console.log('bridgeCenterApi: url=%s, method=%s', url, method);\r\n    return await new Promise<any>(async (resolve, reject) => {\r\n        let callId:string;\r\n        for (;;) {\r\n            callId = uid();\r\n            let bca = brideCenterApis[callId];\r\n            if (bca === undefined) {\r\n                brideCenterApis[callId] = {\r\n                    id: callId,\r\n                    resolve: resolve,\r\n                    reject: reject,\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        (window.opener || window.parent).postMessage({\r\n            type: 'center-api',\r\n            callId: callId,\r\n            url: url,\r\n            method: method,\r\n            body: body\r\n        }, '*');\r\n    });\r\n}\r\n\r\nasync function callCenterApiFromMessage(from:Window, message):Promise<void> {\r\n    let {callId, url, method, body} = message;\r\n    let result = await callCenterapi.directCall(url, method, body);\r\n    from.postMessage({\r\n        type: 'center-api-return',\r\n        callId: callId,\r\n        result: result,\r\n    }, '*');\r\n}\r\n\r\nfunction bridgeCenterApiReturn(message:any) {\r\n    let {callId, result} = message;\r\n    let bca = brideCenterApis[callId];\r\n    if (bca === undefined) return;\r\n    brideCenterApis[callId] = undefined;\r\n    bca.resolve(result);\r\n}\r\n","import {nav} from '../ui/nav';\r\nimport {FetchError} from '../fetchError';\r\n\r\nexport interface HttpChannelUI {\r\n    startWait():void;\r\n    endWait():void;\r\n    showError(error:FetchError):Promise<void>;\r\n}\r\n\r\nexport class HttpChannelNavUI implements HttpChannelUI {\r\n    startWait() {\r\n        nav.startWait();\r\n    }\r\n    endWait() {\r\n        nav.endWait();\r\n    }\r\n    async showError(error:FetchError):Promise<void> {\r\n        nav.endWait();\r\n        /*\r\n        if (error.name === 'SyntaxError') {\r\n            error = {\r\n                name: error.name,\r\n                message: error.message,\r\n            }\r\n        }*/\r\n        await nav.onError(error);\r\n    }\r\n}\r\n\r\n","import _ from 'lodash';\r\nimport {HttpChannel} from './httpChannel';\r\nimport {HttpChannelUI, HttpChannelNavUI} from './httpChannelUI';\r\nimport {appUq} from './appBridge';\r\nimport {ApiBase} from './apiBase';\r\nimport { host } from './host';\r\n\r\nlet channelUIs:{[name:string]: HttpChannel} = {};\r\nlet channelNoUIs:{[name:string]: HttpChannel} = {};\r\n\r\nexport function logoutApis() {\r\n    channelUIs = {};\r\n    channelNoUIs = {};\r\n    logoutUnitxApis();\r\n}\r\n\r\ninterface UqLocal {\r\n    value: any;\r\n    tick?: number;\r\n    isNet?: boolean;\r\n}\r\ninterface UqLocals {\r\n    user: number;\r\n    unit: number;\r\n    uqs: {[uq:string]: UqLocal};\r\n}\r\n\r\nconst uqLocalEntities = 'uqLocalEntities';\r\nclass CacheUqLocals {\r\n    private local:UqLocals;\r\n\r\n    async loadAccess(uqApi: UqApi):Promise<any> {\r\n        try {\r\n            let {uqOwner, uqName} = uqApi;\r\n            if (this.local === undefined) {\r\n                let ls = localStorage.getItem(uqLocalEntities);\r\n                if (ls !== null) {\r\n                    this.local = JSON.parse(ls);\r\n                }\r\n            }\r\n            if (this.local !== undefined) {\r\n                let {user, uqs} = this.local;\r\n                if (user !== loginedUserId || uqs === undefined) {\r\n                    this.local = undefined;\r\n                }\r\n                else {\r\n                    for (let i in uqs) {\r\n                        let ul = uqs[i];\r\n                        ul.isNet = undefined;\r\n                    }\r\n                }\r\n            }\r\n            if (this.local === undefined) {\r\n                this.local = {\r\n                    user: loginedUserId,\r\n                    unit: undefined,\r\n                    uqs: {}\r\n                };\r\n            }\r\n\r\n            let ret: any;\r\n            let un = uqOwner+'/'+uqName;\r\n            let uq = this.local.uqs[un];\r\n            if (uq !== undefined) {\r\n                let {value} = uq;\r\n                ret = value;\r\n            }\r\n            if (ret === undefined) {\r\n                ret = await uqApi.__loadAccess();\r\n                this.saveLocal(un, ret);\r\n            }\r\n            return _.cloneDeep(ret);\r\n        }\r\n        catch (err) {\r\n            this.local = undefined;\r\n            localStorage.removeItem(uqLocalEntities);\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    private saveLocal(uqName:string, accessValue: any) {\r\n        this.local.uqs[uqName] = {\r\n            value: accessValue,\r\n            isNet: true,\r\n        }\r\n        let str = JSON.stringify(this.local);\r\n        localStorage.setItem(uqLocalEntities, str);\r\n    }\r\n\r\n    async checkAccess(uqApi: UqApi):Promise<boolean> {\r\n        let {uqOwner, uqName} = uqApi;\r\n        let un = uqOwner+'/'+uqName;\r\n        let uq = this.local.uqs[un];\r\n        if (uq === undefined) return false;\r\n        let {isNet, value} = uq;\r\n        if (isNet === true) return true;\r\n        let ret = await uqApi.__loadAccess();\r\n        let isMatch = _.isMatch(value, ret);\r\n        if (isMatch === false) {\r\n            this.saveLocal(un, ret);\r\n        }\r\n        return isMatch;\r\n\r\n    }\r\n}\r\n\r\nconst localUqs = new CacheUqLocals;\r\nexport class UqApi extends ApiBase {\r\n    private access:string[];\r\n    uqOwner: string;\r\n    uqName: string;\r\n    uq: string;\r\n\r\n    constructor(basePath: string, uqOwner: string, uqName: string, access:string[], showWaiting?: boolean) {\r\n        super(basePath, showWaiting);\r\n        if (uqName) {\r\n            this.uqOwner = uqOwner;\r\n            this.uqName = uqName;\r\n            this.uq = uqOwner + '/' + uqName;\r\n        }\r\n        this.access = access;\r\n        this.showWaiting = showWaiting;\r\n    }\r\n\r\n    protected async getHttpChannel(): Promise<HttpChannel> {\r\n        let channels: {[name:string]: HttpChannel};\r\n        let channelUI: HttpChannelNavUI;\r\n        if (this.showWaiting === true || this.showWaiting === undefined) {\r\n            channels = channelUIs;\r\n            channelUI = new HttpChannelNavUI();\r\n        }\r\n        else {\r\n            channels = channelNoUIs;\r\n        }\r\n        let channel = channels[this.uq];\r\n        if (channel !== undefined) return channel;\r\n        let uqToken = await appUq(this.uq, this.uqOwner, this.uqName);\r\n        this.token = uqToken.token;\r\n        channel = new HttpChannel(false, uqToken.url, uqToken.token, channelUI);\r\n        return channels[this.uq] = channel;\r\n    }\r\n\r\n\r\n    async update():Promise<string> {\r\n        return await this.get('update');\r\n    }\r\n\r\n    async __loadAccess():Promise<any> {\r\n        let acc = this.access === undefined?\r\n            '' :\r\n            this.access.join('|');\r\n        let ret = await this.get('access', {acc:acc});\r\n        return ret;\r\n    }\r\n\r\n    async loadAccess():Promise<any> {\r\n        return await localUqs.loadAccess(this);\r\n    }\r\n\r\n    async loadEntities():Promise<any> {\r\n        return await this.get('entities');\r\n    }\r\n\r\n    async checkAccess():Promise<boolean> {\r\n        return await localUqs.checkAccess(this);\r\n    }\r\n\r\n    async schema(name:string):Promise<any> {\r\n        return await this.get('schema/' + name);\r\n    }\r\n\r\n    async schemas(names:string[]):Promise<any[]> {\r\n        return await this.post('schema', names);\r\n    }\r\n\r\n    async tuidGet(name:string, id:number):Promise<any> {\r\n        return await this.get('tuid/' + name + '/' + id);\r\n    }\r\n\r\n    async tuidGetAll(name:string):Promise<any[]> {\r\n        return await this.get('tuid-all/' + name + '/');\r\n    }\r\n\r\n    async tuidSave(name:string, params):Promise<any> {\r\n        return await this.post('tuid/' + name, params);\r\n    }\r\n\r\n    async tuidSearch(name:string, arr:string, owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        let ret = await this.post('tuids/' + name, {\r\n            arr: arr,\r\n            owner: owner,\r\n            key: key,\r\n            pageStart: pageStart,\r\n            pageSize: pageSize\r\n        });\r\n        return ret;\r\n    }\r\n    async tuidArrGet(name:string, arr:string, owner:number, id:number):Promise<any> {\r\n        return await this.get('tuid-arr/' + name + '/' + owner + '/' + arr + '/' + id);\r\n    }\r\n    async tuidArrGetAll(name:string, arr:string, owner:number):Promise<any[]> {\r\n        return await this.get('tuid-arr-all/' + name + '/' + owner + '/' + arr + '/');\r\n    }\r\n    async tuidArrSave(name:string, arr:string, owner:number, params):Promise<any> {\r\n        return await this.post('tuid-arr/' + name + '/' + owner + '/' + arr + '/', params);\r\n    }\r\n    async tuidArrPos(name:string, arr:string, owner:number, id:number, order:number):Promise<any> {\r\n        return await this.post('tuid-arr-pos/' + name + '/' + owner + '/' + arr + '/', {\r\n            id: id,\r\n            $order: order\r\n        });\r\n    }\r\n\r\n    async tuidIds(name:string, arr:string, ids:number[]):Promise<any[]> {\r\n        try {\r\n            let url = 'tuidids/' + name + '/';\r\n            if (arr !== undefined) url += arr;\r\n            else url += '$';\r\n            let ret = await this.post(url, ids);\r\n            return ret;\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    async proxied(name:string, proxy:string, id:number):Promise<any> {\r\n        try {\r\n            let url = 'tuid-proxy/' + name + '/' + proxy + '/' + id;\r\n            let ret = await this.get(url);\r\n            return ret;\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    async sheetSave(name:string, data:object):Promise<any> {\r\n        return await this.post('sheet/' + name, data);\r\n    }\r\n\r\n    async sheetAction(name:string, data:object) {\r\n        return await this.put('sheet/' + name, data);\r\n    }\r\n\r\n    async stateSheets(name:string, data:object) {\r\n        return await this.post('sheet/' + name + '/states', data);\r\n    }\r\n\r\n    async stateSheetCount(name:string):Promise<any> {\r\n        return await this.get('sheet/' + name + '/statecount');\r\n    }\r\n\r\n    async getSheet(name:string, id:number):Promise<any> {\r\n        return await this.get('sheet/' + name + '/get/' + id);\r\n    }\r\n\r\n    async sheetArchives(name:string, data:object):Promise<any> {\r\n        return await this.post('sheet/' + name + '/archives', data);\r\n    }\r\n\r\n    async sheetArchive(name:string, id:number):Promise<any> {\r\n        return await this.get('sheet/' + name + '/archive/' + id);\r\n    }\r\n\r\n    async action(name:string, data:object):Promise<any> {\r\n        return await this.post('action/' + name, data);\r\n    }\r\n\r\n    async page(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\r\n        let p:any;\r\n        switch (typeof params) {\r\n            case 'undefined': p = {key: ''}; break;\r\n            default: p = _.clone(params); break;\r\n        }\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        return await this.post('query-page/' + name, p);\r\n    }\r\n\r\n    async query(name:string, params:any):Promise<any> {\r\n        let ret = await this.post('query/' + name, params);\r\n        return ret;\r\n    }\r\n/*\r\n    async history(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\r\n        let p = _.clone(params);\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        let ret = await this.post('history/' + name, p);\r\n        return ret;\r\n    }\r\n\r\n    async book(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\r\n        let p = _.clone(params);\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        let ret = await this.post('history/' + name, p);\r\n        return ret;\r\n    }\r\n*/\r\n    async user():Promise<any> {\r\n        return await this.get('user');\r\n    }\r\n}\r\n\r\nlet channels:{[unitId:number]: HttpChannel} = {};\r\n\r\nexport function logoutUnitxApis() {\r\n    channels = {};\r\n}\r\n\r\nexport class UnitxApi extends UqApi {\r\n    private unitId:number;\r\n    constructor(unitId:number) {\r\n        super('tv/', undefined, undefined, undefined, true);\r\n        this.unitId = unitId;\r\n    }\r\n\r\n    protected async getHttpChannel(): Promise<HttpChannel> {\r\n        let channel = channels[this.unitId];\r\n        if (channel !== undefined) return channel;\r\n        return channels[this.unitId] = await this.buildChannel();\r\n    }\r\n\r\n    private async buildChannel():Promise<HttpChannel> {\r\n        let channelUI = new HttpChannelNavUI();\r\n        let centerAppApi = new CenterAppApi('tv/', undefined);\r\n        let ret = await centerAppApi.unitxUq(this.unitId);\r\n        let {token, url, urlDebug} = ret;\r\n        let realUrl = host.getUrlOrDebug(url, urlDebug);\r\n        this.token = token;\r\n        return new HttpChannel(false, realUrl, token, channelUI);\r\n    }\r\n}\r\n\r\nlet centerHost:string;\r\n\r\nexport function setCenterUrl(url:string) {\r\n    console.log('setCenterUrl %s', url);\r\n    centerHost = url;\r\n    centerToken = undefined;\r\n    centerChannel = undefined;\r\n    centerChannelUI = undefined;\r\n}\r\n\r\nexport let centerToken:string|undefined = undefined;\r\n\r\nlet loginedUserId:number = 0;\r\nexport function setCenterToken(userId:number, t?:string) {\r\n    centerToken = t;\r\n    console.log('setCenterToken %s', t);\r\n    centerChannel = undefined;\r\n    centerChannelUI = undefined;\r\n}\r\n\r\nlet centerChannelUI:HttpChannel;\r\nlet centerChannel:HttpChannel;\r\nfunction getCenterChannelUI():HttpChannel {\r\n    if (centerChannelUI !== undefined) return centerChannelUI;\r\n    return centerChannelUI = new HttpChannel(true, centerHost, centerToken, new HttpChannelNavUI());\r\n}\r\nfunction getCenterChannel():HttpChannel {\r\n    if (centerChannel !== undefined) return centerChannel;\r\n    return centerChannel = new HttpChannel(true, centerHost, centerToken);\r\n}\r\n\r\nexport abstract class CenterApi extends ApiBase {\r\n    constructor(path: string, showWaiting?: boolean) {\r\n        super(path, showWaiting);\r\n    }\r\n\r\n    protected async getHttpChannel(): Promise<HttpChannel> {\r\n        return (this.showWaiting === true || this.showWaiting === undefined)?\r\n            getCenterChannelUI():\r\n            getCenterChannel();\r\n    }\r\n}\r\n\r\nconst uqTokens = 'uqTokens';\r\nexport class UqTokenApi extends CenterApi {\r\n    private local: UqLocals;\r\n    async uq(params: {unit:number, uqOwner:string, uqName:string}):Promise<any> {\r\n        try {\r\n            let {unit:unitParam, uqOwner, uqName} = params;\r\n            if (this.local === undefined) {\r\n                let ls = localStorage.getItem(uqTokens);\r\n                if (ls !== null) {\r\n                    this.local = JSON.parse(ls);\r\n                }\r\n            }\r\n            if (this.local !== undefined) {\r\n                let {unit, user} = this.local;\r\n                if (unit !== unitParam || user !== loginedUserId) this.local = undefined;\r\n            }\r\n            if (this.local === undefined) {\r\n                this.local = {\r\n                    user: loginedUserId,\r\n                    unit: params.unit,\r\n                    uqs: {}\r\n                };\r\n            }\r\n\r\n            let un = uqOwner+'/'+uqName;\r\n            let nowTick = new Date().getTime();\r\n            let uq = this.local.uqs[un];\r\n            if (uq !== undefined) {\r\n                let {tick, value} = uq;\r\n                if ((nowTick - tick) < 24*3600*1000) {\r\n                    return _.clone(value);\r\n                }\r\n            }\r\n            let ret = await this.get('app-uq', params);\r\n            this.local.uqs[un] = {\r\n                tick: nowTick,\r\n                value: ret,\r\n            }\r\n            localStorage.setItem(uqTokens, JSON.stringify(this.local));\r\n            return _.clone(ret);\r\n        }\r\n        catch (err) {\r\n            this.local = undefined;\r\n            localStorage.removeItem(uqTokens);\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport const uqTokenApi = new UqTokenApi('tv/tie/', undefined);\r\n\r\nexport class CallCenterApi extends CenterApi {\r\n    directCall(url:string, method:string, body:any):Promise<any> {\r\n        return this.call(url, method, body);\r\n    }\r\n}\r\nexport const callCenterapi = new CallCenterApi('', undefined);\r\n\r\nexport interface App {\r\n    id: number;\r\n    uqs: AppUq[];\r\n}\r\n\r\nexport interface AppUq {\r\n    id: number;\r\n    uqOwner: string;\r\n    uqName: string;\r\n    url: string;\r\n    urlDebug: string;\r\n    ws: string;\r\n    wsDebug: string;\r\n    access: string;\r\n    token: string;\r\n}\r\n\r\nexport class CenterAppApi extends CenterApi {\r\n    private cachedUqs: any;\r\n    async uqs(unit:number, appOwner:string, appName:string):Promise<App> {\r\n        let ret:any;\r\n        let ls = localStorage.getItem('appUqs');\r\n        if (ls !== null) {\r\n            let rLs = JSON.parse(ls);\r\n            let {unit:rUnit, appOwner:rAppOwner, appName:rAppName, value} = rLs;\r\n            if (unit === rUnit && appOwner === rAppOwner && appName === rAppName) ret = value;\r\n        }\r\n        if (ret === undefined) {\r\n            ret = await this.uqsPure(unit, appOwner, appName);\r\n            let obj = {\r\n                unit:unit, \r\n                appOwner:appOwner, \r\n                appName:appName, \r\n                value: ret,\r\n            }\r\n            localStorage.setItem('appUqs', JSON.stringify(obj));\r\n        }\r\n        return this.cachedUqs = _.cloneDeep(ret);\r\n    }\r\n    private async uqsPure(unit:number, appOwner:string, appName:string):Promise<App> {\r\n        return await this.get('tie/app-uqs', {unit:unit, appOwner:appOwner, appName:appName});\r\n    }\r\n    async checkUqs(unit:number, appOwner:string, appName:string):Promise<boolean> {\r\n        let ret = await this.uqsPure(unit, appOwner, appName);\r\n        return _.isMatch(this.cachedUqs, ret);\r\n    }\r\n    async unitxUq(unit:number):Promise<AppUq> {\r\n        return await this.get('tie/unitx-uq', {unit:unit});\r\n    }\r\n    async changePassword(param: {orgPassword:string, newPassword:string}) {\r\n        return await this.post('tie/reset-password', param);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {IComputedValue} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash';\r\nimport {TitleBar} from './titleBar';\r\n\r\nexport interface ScrollProps {\r\n    onScroll?: (e:any) => void;\r\n    onScrollTop?: () => void;\r\n    onScrollBottom?: () => void;\r\n}\r\ninterface ScrollViewProps extends ScrollProps {\r\n    className?: string;\r\n}\r\nconst scrollTimeGap = 100;\r\nclass ScrollView extends React.Component<ScrollViewProps, null> {\r\n    private bottomTime:number = 0;\r\n    private topTime:number = 0;\r\n\r\n    private onScroll = async (e) => {\r\n        let {onScroll, onScrollTop, onScrollBottom} = this.props;\r\n        if (onScroll) this.props.onScroll(e);\r\n        let el = e.target as HTMLBaseElement;\r\n        if (el.scrollTop < 30) {\r\n            //this.eachChild(this, 'top');\r\n            if (onScrollTop !== undefined) {\r\n                let topTime = new Date().getTime();\r\n                if (topTime-this.topTime > scrollTimeGap) {\r\n                    this.topTime = topTime;\r\n                    onScrollTop();\r\n                }\r\n            }\r\n        }\r\n        if (el.scrollTop + el.offsetHeight > el.scrollHeight - 30) {\r\n            //this.eachChild(this, 'bottom');\r\n            if (onScrollBottom !== undefined) {\r\n                let bottomTime = new Date().getTime();\r\n                if (bottomTime - this.bottomTime > scrollTimeGap) {\r\n                    this.bottomTime = bottomTime;\r\n                    onScrollBottom();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    private eachChild(c:any, direct:'top'|'bottom') {\r\n        let { props } = c;\r\n        if (props === undefined)\r\n            return;\r\n        let { children } = props;\r\n        if (children === undefined)\r\n            return;\r\n        React.Children.forEach(children, (child, index) => {\r\n            let {_$scroll} = child as any;\r\n            if (_$scroll) _$scroll(direct);\r\n            console.log(child.toString());\r\n            this.eachChild(child, direct);\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <main className={this.props.className} onScroll={this.onScroll}>\r\n                {this.props.children}\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport interface Tab extends ScrollProps {\r\n    title: string;\r\n    icon?: string;\r\n    content?: JSX.Element | (()=>JSX.Element);\r\n    header?: string;\r\n    isSelected?: boolean;\r\n    redDot?: IComputedValue<number>;\r\n    load?: () => Promise<void>;\r\n}\r\nexport interface TabState extends Tab {\r\n    isMounted?: boolean;\r\n}\r\nexport interface PageProps extends ScrollProps {\r\n    back?: 'close' | 'back' | 'none';\r\n    header?: boolean | string | JSX.Element;\r\n    keepHeader?: boolean;\r\n    right?: JSX.Element;\r\n    sideBar?: JSX.Element;\r\n    footer?: JSX.Element;\r\n    tabs?: Tab[];\r\n    logout?: boolean | (()=>void);\r\n}\r\nexport interface PageState {\r\n    cur?: Tab;\r\n    tabs?: TabState[];\r\n}\r\n\r\n@observer\r\nexport class Page extends React.Component<PageProps, PageState> {\r\n    private tabs:TabState[];\r\n    constructor(props: PageProps) {\r\n        super(props);\r\n        let {tabs} = props;\r\n        if (tabs === undefined || tabs.length === 0) return;\r\n        this.tabs = tabs;\r\n        let cur:Tab;\r\n        let tabStates:Tab[] = [];\r\n        for (let tab of tabs) {\r\n            let t:TabState = _.clone(tab);\r\n            if (cur === undefined) {\r\n                if (t.isSelected === true)\r\n                    cur = t;\r\n                else\r\n                    t.isSelected = false;\r\n            }\r\n            else {\r\n                t.isSelected = false;\r\n            }\r\n            t.isMounted = false;\r\n            tabStates.push(t);\r\n        }\r\n        this.state = {\r\n            cur: cur,\r\n            tabs: tabStates,\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (this.tabs === undefined) return;\r\n        let t0 = this.state.tabs[0];\r\n        if (t0 === undefined) return;\r\n        await this.onTabClick(t0);\r\n    }\r\n\r\n    private async onTabClick(tab: TabState) {\r\n        if (tab.isSelected === true) return;\r\n        let cur:TabState;\r\n        let tabs = this.state.tabs;\r\n        for (let t of tabs) {\r\n            if (t === tab) {\r\n                t.isSelected = true;\r\n                cur = t;\r\n            }\r\n            else\r\n                t.isSelected = false;\r\n        }\r\n        if (cur.isMounted !== true) {\r\n            let {load} = cur;\r\n            if (load !== undefined) {\r\n                await load();\r\n            }\r\n        }\r\n        this.setState({\r\n            cur: cur,\r\n            tabs: tabs\r\n        });\r\n    }\r\n\r\n    private onTouchStart(evt: React.TouchEvent<HTMLElement>) {\r\n    }\r\n\r\n    private renderTabs(footer: JSX.Element) {\r\n        const {header, back, right, keepHeader} = this.props;\r\n        let cur = this.state.cur;\r\n        let tabs = <div>{\r\n                this.state.tabs.map((tab, index) => {\r\n                    const {icon, isSelected, title, redDot} = tab;\r\n                    let img:any, redDotView:any, cn:any;\r\n                    if (icon !== undefined) img = <img src={icon} />;\r\n                    if (redDot !== undefined) {\r\n                        let v = redDot.get();\r\n                        if (v < 0) {\r\n                            cn = classNames('red-dot');\r\n                            redDotView = <u />;\r\n                        }\r\n                        else if (v > 0) {\r\n                            cn = classNames('red-dot', 'num');\r\n                            redDotView = <u>{v}</u>;\r\n                        }\r\n                    }\r\n                    return <div key={index}\r\n                        className= {classNames('va-tab', {cur: isSelected})}\r\n                        onClick={() => this.onTabClick(tab)}>\r\n                        {img}<div className={cn}>{title}{redDotView}</div>\r\n                    </div>\r\n                })\r\n            }</div>;\r\n        let titleBar;\r\n        if (header !== false) {\r\n            titleBar = <TitleBar \r\n                back={back} \r\n                center={keepHeader===true? (header as string) : (cur && (cur.header || cur.title))}\r\n                right={right} \r\n            />;\r\n        }\r\n\r\n        return <article className='page-container'>\r\n            {titleBar}\r\n            <section className=\"position-relative\">\r\n            {this.props.sideBar}\r\n            {\r\n                this.state.tabs.map((tab, index) => {\r\n                    let {isSelected, isMounted, content} = tab;\r\n                    if (isSelected === true || isMounted === true) {\r\n                        tab.isMounted = true;\r\n                        return <ScrollView key={index}\r\n                            className={classNames({invisible: isSelected===false})}\r\n                            onScroll={tab.onScroll}\r\n                            onScrollTop={tab.onScrollTop}\r\n                            onScrollBottom={tab.onScrollBottom}\r\n                        >\r\n                            {(typeof content)==='function'? (content as ()=>JSX.Element)():content}\r\n                        </ScrollView>;\r\n                    }\r\n                })\r\n            }\r\n            </section>\r\n            {tabs}\r\n            {footer}\r\n        </article>;\r\n    }\r\n    private renderSingle(footer: JSX.Element) {\r\n        const {back, header, right, onScroll, onScrollTop, onScrollBottom, children} = this.props;\r\n        let titleBar;\r\n        if (header !== false)\r\n            titleBar = <TitleBar \r\n                back={back} \r\n                center={header as any}\r\n                right={right}\r\n                logout={this.props.logout}\r\n            />;\r\n        return (\r\n            <article className='page-container' onTouchStart={this.onTouchStart}>\r\n                {titleBar}\r\n                <section className=\"position-relative\">\r\n                    {this.props.sideBar}\r\n                    <ScrollView\r\n                        onScroll={onScroll}\r\n                        onScrollTop={onScrollTop}\r\n                        onScrollBottom={onScrollBottom}\r\n                    >\r\n                        {children}\r\n                    </ScrollView>\r\n                </section>\r\n                {footer}\r\n            </article>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const {footer} = this.props;\r\n        let elFooter;\r\n        if (footer !== undefined) elFooter = <footer>{footer}</footer>;\r\n        if (this.tabs !== undefined)\r\n            return this.renderTabs(elFooter);\r\n        else\r\n            return this.renderSingle(elFooter);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Controller } from 'tonva-tools';\r\n\r\nexport abstract class Link {\r\n    abstract onClick: () => void;\r\n    abstract render(className?:string):JSX.Element;\r\n}\r\n\r\nexport class CLink extends Link {\r\n    private controller: Controller;\r\n    protected icon:string|JSX.Element;\r\n    protected label:string|JSX.Element;\r\n\r\n    constructor(controller:Controller) {\r\n        super();\r\n        this.controller = controller;\r\n        this.icon = controller.icon;\r\n        this.label = controller.label;\r\n    }\r\n\r\n    onClick = async () => {\r\n        await this.controller.start();\r\n    }\r\n\r\n    render(className?:string) {\r\n        return <div\r\n            className={classNames('px-3', 'py-2', 'align-items-center', 'cursor-pointer', className)}\r\n            onClick={this.onClick}>\r\n            {this.icon} &nbsp; {this.label}\r\n        </div>;\r\n        //return React.createElement(this.view, className);\r\n    }\r\n}\r\n","export * from './cLink';\r\n","\r\nlet subAppWindow:Window;\r\nfunction postWsToSubApp(msg:any) {\r\n    if (subAppWindow === undefined) return;\r\n    subAppWindow.postMessage({\r\n        type: 'ws',\r\n        msg: msg\r\n    }, '*');\r\n}\r\n\r\nexport function setSubAppWindow(win:Window) {\r\n    subAppWindow = win;\r\n}\r\n\r\nexport function postWsToTop(msg:any) {\r\n    window.top.postMessage({\r\n        type: 'ws',\r\n        msg: msg\r\n    }, '*');\r\n}\r\n\r\nexport abstract class WsBase {\r\n    wsBaseId:string;\r\n    private handlerSeed = 1;\r\n    private anyHandlers:{[id:number]:(msg:any)=>Promise<void>} = {};\r\n    private msgHandlers:{[id:number]:{type:string, handler:(msg:any)=>Promise<void>}} = {};\r\n    onWsReceiveAny(handler:(msg:any)=>Promise<void>):number {\r\n        let seed = this.handlerSeed++;\r\n        this.anyHandlers[seed] = handler;\r\n        return seed;\r\n    }\r\n    onWsReceive(type:string, handler:(msg:any)=>Promise<void>):number {\r\n        let seed = this.handlerSeed++;\r\n        this.msgHandlers[seed] = {type:type, handler: handler};\r\n        return seed;\r\n    }\r\n    endWsReceive(handlerId:number) {\r\n        delete this.anyHandlers[handlerId];\r\n        delete this.msgHandlers[handlerId];\r\n    }\r\n    async receive(msg:any) {\r\n        let {$type} = msg;\r\n        for (let i in this.anyHandlers) {\r\n            await this.anyHandlers[i](msg);\r\n        }\r\n        for (let i in this.msgHandlers) {\r\n            let {type, handler} = this.msgHandlers[i];\r\n            if (type !== $type) continue;\r\n            await handler(msg);\r\n        }\r\n    }\r\n}\r\n\r\nlet wsBaseSeed = 1;\r\nexport class WsBridge extends WsBase {\r\n    wsBaseId:string = 'WsBridge seed ' + wsBaseSeed++;\r\n}\r\n\r\nexport const wsBridge = new WsBridge();\r\n\r\nexport class WSChannel extends WsBase {\r\n    wsBaseId:string = 'WSChannel seed ' + wsBaseSeed++;\r\n    static centerToken:string;\r\n    private wsHost: string;\r\n    private token: string;\r\n    private ws: WebSocket;\r\n\r\n    constructor(wsHost: string, token: string) {\r\n        super();\r\n        this.wsHost = wsHost;\r\n        this.token = token;\r\n    }\r\n\r\n    static setCenterToken(token?: string) {\r\n        WSChannel.centerToken = token;\r\n    }\r\n    \r\n    connect():Promise<void> {\r\n        //this.wsHost = wsHost;\r\n        //this.token = token || WSChannel.centerToken;\r\n        if (this.ws !== undefined) return;\r\n        let that = this;\r\n        return new Promise((resolve, reject) => {\r\n            let ws = new WebSocket(this.wsHost, this.token || WSChannel.centerToken);\r\n            console.log('connect webSocket %s', this.wsHost);\r\n            ws.onopen = (ev) => {\r\n                console.log('webSocket connected %s', this.wsHost);\r\n                that.ws = ws;\r\n                resolve();\r\n            };\r\n            ws.onerror = (ev) => {\r\n                reject('webSocket can\\'t open!');\r\n            };\r\n            ws.onmessage = async (msg) => await that.wsMessage(msg);\r\n            ws.onclose = (ev) => {\r\n                that.ws = undefined;\r\n                console.log('webSocket closed!');\r\n            }\r\n        });\r\n    }\r\n    close() {\r\n        if (this.ws !== undefined) {\r\n            this.ws.close();\r\n            this.ws = undefined;\r\n        }\r\n    }\r\n    private async wsMessage(event:any):Promise<void> {\r\n        try {\r\n            console.log('websocket message: %s', event.data);\r\n            let msg = JSON.parse(event.data);\r\n            postWsToSubApp(msg);\r\n            await this.receive(msg);\r\n        }\r\n        catch (err) {\r\n            console.log('ws msg error: ', err);\r\n        }\r\n    }\r\n    sendWs(msg:any) {\r\n        let netThis = this;\r\n        this.connect().then(() => {\r\n            netThis.ws.send(msg);\r\n        });\r\n    }\r\n}\r\n","const ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\nconst ID_LENGTH = 8;\r\n\r\nexport function uid():string {\r\n    let len = ALPHABET.length;\r\n    let rtn = '';\r\n    for (let i = 0; i < ID_LENGTH; i++) {\r\n        rtn += ALPHABET.charAt(Math.floor(Math.random() * len));\r\n    }\r\n    return rtn;\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { nav } from './nav';\r\n\r\nexport interface ImageProps {\r\n    src: string;\r\n    className?: string;\r\n    style?: React.CSSProperties;\r\n}\r\n\r\nexport function Image(props: ImageProps) {\r\n    let {className, style, src} = props;\r\n    if (!src) {\r\n        return <div className={classNames(className, 'image-none')} style={style}>\r\n            <i className=\"fa fa-camera\" />\r\n        </div>;\r\n    }\r\n    if (src.startsWith(':') === true) {\r\n        src = nav.resUrl + src.substr(1);\r\n    }\r\n    return <img src={src} className={className} style={style} />;\r\n}\r\n","export const isDevelopment = process.env.NODE_ENV === 'development';\r\n\r\nconst centerHost = process.env['REACT_APP_CENTER_HOST'];\r\nconst centerDebugHost = 'localhost:3000'; //'192.168.86.64';\r\nconst resHost = process.env['REACT_APP_RES_HOST'] || centerHost;\r\nconst resDebugHost = 'localhost:3015'; //'192.168.86.63';\r\nconst uqDebugHost = 'localhost:3015'; //'192.168.86.63';\r\nconst uqDebugBuilderHost = 'localhost:3009';\r\ninterface HostValue {\r\n    value: string;\r\n    local: boolean;\r\n}\r\nconst hosts:{[name:string]:HostValue} = {\r\n    centerhost: {\r\n        value: process.env['REACT_APP_CENTER_DEBUG_HOST'] || centerDebugHost, \r\n        local: false\r\n    },\r\n    reshost: {\r\n        value: process.env['REACT_APP_RES_DEBUG_HOST'] || resDebugHost,\r\n        local: false\r\n    },\r\n    uqhost: {\r\n        value: process.env['REACT_APP_UQ_DEBUG_HOST'] || uqDebugHost, \r\n        local: false\r\n    },\r\n    unitxhost: {\r\n        value: process.env['REACT_APP_UQ_DEBUG_HOST'] || uqDebugHost, \r\n        local: false\r\n    },\r\n    \"uq-build\": {\r\n        value: process.env['REACT_APP_UQ_DEBUG_BUILDER_HOST'] || uqDebugBuilderHost, \r\n        local: false\r\n    }\r\n}\r\n\r\nfunction centerUrlFromHost(host:string) {return `http://${host}/`}\r\nfunction centerWsFromHost(host:string) {return `ws://${host}/tv/`}\r\n\r\nconst fetchOptions = {\r\n    method: \"GET\",\r\n    mode: \"no-cors\", // no-cors, cors, *same-origin\r\n    headers: {\r\n        \"Content-Type\": \"text/plain\"\r\n    },\r\n};\r\n\r\nclass Host {\r\n    url: string;\r\n    ws: string;\r\n    resHost: string;\r\n\r\n    async start() {\r\n        if (isDevelopment === true) {\r\n            await this.tryLocal();\r\n        }\r\n        let host = this.getCenterHost();\r\n        this.url = centerUrlFromHost(host);\r\n        this.ws = centerWsFromHost(host);\r\n        this.resHost = this.getResHost();\r\n    }\r\n\r\n    private debugHostUrl(host:string) {return `http://${host}/hello`}\r\n    private async tryLocal() {\r\n        let promises:PromiseLike<any>[] = [];\r\n        let hostArr:string[] = [];\r\n        for (let i in hosts) {\r\n            let hostValue = hosts[i];\r\n            let {value} = hostValue;\r\n            if (hostArr.findIndex(v => v === value) < 0) hostArr.push(value);\r\n        }\r\n\r\n        for (let host of hostArr) {\r\n            let fetchUrl = this.debugHostUrl(host);\r\n            promises.push(localCheck(fetchUrl));\r\n        }\r\n        let results = await Promise.all(promises);\r\n        let len = hostArr.length;\r\n        for (let i=0; i<len; i++) {\r\n            let local = results[i];\r\n            let host = hostArr[i];\r\n            for (let j in hosts) {\r\n                let hostValue = hosts[j];\r\n                if (hostValue.value === host) {\r\n                    hostValue.local = local;\r\n                }\r\n            }\r\n        }\r\n        /*\r\n        let p = 0;\r\n        for (let i in hosts) {\r\n            let hostValue = hosts[i];\r\n            hostValue.local = results[p];\r\n            ++p;\r\n        }\r\n        */\r\n    }\r\n\r\n    private getCenterHost():string {\r\n        let {value, local} = hosts.centerhost;\r\n        let hash = document.location.hash;\r\n        if (hash.includes('sheet_debug') === true) {\r\n            return value;\r\n        }\r\n        if (isDevelopment === true) {\r\n            if (local === true) return value;\r\n        }\r\n        return centerHost;\r\n    }\r\n\r\n    private getResHost():string {\r\n        let {value, local} = hosts.reshost;\r\n        let hash = document.location.hash;\r\n        if (hash.includes('sheet_debug') === true) {\r\n            return value;\r\n        }\r\n        if (isDevelopment === true) {\r\n            if (local === true) return value;\r\n        }\r\n        return resHost;\r\n    }\r\n\r\n    getUrlOrDebug(url:string, urlDebug:string):string {\r\n        if (isDevelopment !== true) return url;\r\n        if (!urlDebug) return url;\r\n        for (let i in hosts) {\r\n            let host = hosts[i];\r\n            let {value, local} = host;\r\n            let hostString = `://${i}/`;\r\n            let pos = urlDebug.indexOf(hostString);\r\n            if (pos > 0) {\r\n                if (local === false) return url;\r\n                urlDebug = urlDebug.replace(hostString, `://${value}/`);\r\n                return urlDebug;\r\n            }\r\n        }\r\n        return url;\r\n    }\r\n\r\n    async localCheck(urlDebug: string):Promise<boolean> {\r\n        return await localCheck(urlDebug);\r\n    }\r\n}\r\n\r\nexport const host:Host = new Host();\r\n\r\n// 因为测试的都是局域网服务器，甚至本机服务器，所以一秒足够了\r\n// 网上找了上面的fetch timeout代码。\r\n// 尽管timeout了，fetch仍然继续，没有cancel\r\n\r\n// 实际上，一秒钟不够。web服务器会自动停。重启的时候，可能会比较长时间。也许两秒甚至更多。\r\n//const timeout = 2000;\r\nconst timeout = 200;\r\n\r\nfunction fetchLocalCheck(url:string):Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      fetch(url, fetchOptions as any)\r\n      .then(v => {\r\n          v.text().then(resolve).catch(reject);\r\n      })\r\n      .catch(reject);\r\n      const e = new Error(\"Connection timed out\");\r\n      setTimeout(reject, timeout, e);\r\n    });\r\n}\r\n\r\nasync function localCheck(url:string):Promise<boolean> {\r\n    try {\r\n        await fetchLocalCheck(url);\r\n        return true;\r\n    }\r\n    catch (err) {\r\n        return false;\r\n    }\r\n}\r\n","import jwtDecode from 'jwt-decode';\r\n\r\nexport interface Unit {\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\nexport interface Guest {\r\n    id: number;             // id = 0\r\n    guest: number;\r\n    token: string;\r\n}\r\n\r\nexport interface User extends Guest {\r\n    id: number;\r\n    name: string;\r\n    nick?: string;\r\n    icon?: string;\r\n}\r\n\r\n/*\r\nexport class UserInNav {\r\n    private user: User;\r\n    constructor(user: User) {\r\n        this.user = user;\r\n    }\r\n    get id():number {return this.user.id}\r\n    get name(): string {return this.user.name}\r\n    get nick(): string {return this.user.nick}\r\n    get icon(): string {return this.user.icon || ('http://' + process.env['REACT_APP_CENTER_HOST'] + '/imgs/Bear-icon.png');}\r\n    get guest(): number {return this.user.guest}\r\n    get token(): string {return this.user.token}\r\n}\r\n*/\r\nexport function decodeUserToken(token: string): User {\r\n    let ret:any = jwtDecode(token);\r\n    let user: User = {\r\n        id: ret.id,\r\n        name: ret.name,\r\n        guest: ret.guest,\r\n        token: token,\r\n    };\r\n    return user;\r\n}\r\n\r\nexport function decodeGuestToken(token: string): Guest {\r\n    let ret:any = jwtDecode(token);\r\n    let guest: Guest = {\r\n        id: 0,\r\n        guest: ret.guest,\r\n        token: token,\r\n    };\r\n    return guest;\r\n}\r\n","const ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\nconst ID_LENGTH = 8;\r\n\r\nexport function uid():string {\r\n    let len = ALPHABET.length;\r\n    let rtn = '';\r\n    for (let i = 0; i < ID_LENGTH; i++) {\r\n        rtn += ALPHABET.charAt(Math.floor(Math.random() * len));\r\n    }\r\n    return rtn;\r\n}\r\n","import * as React from 'react';\r\nimport { SearchBox, List, Muted } from 'tonva-react-form';\r\nimport { TuidMain, Entity } from '../../entities';\r\nimport { Page } from 'tonva-tools';\r\nimport { CLink } from '../link';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CTuidMain, TuidUI } from './cTuid';\r\n\r\nexport class VTuidMain extends VEntity<TuidMain, TuidUI, CTuidMain> {\r\n    protected controller: CTuidMain;\r\n    onNew = () => this.event('new');\r\n    onList = () => this.event('list');\r\n    onSearch = async (key:string) => this.event('list', key);\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected entityRender(link: CLink, index: number): JSX.Element {\r\n        return link.render();\r\n    }\r\n\r\n    protected async entityClick(link: CLink) {\r\n        await link.onClick();\r\n    }\r\n\r\n    protected get view() {\r\n        let {label, proxyLinks, isFrom} = this.controller;\r\n        let newButton;\r\n        if (isFrom === false) newButton = <button className=\"btn btn-primary ml-3\" onClick={this.onNew}>新增</button>;\r\n        return () => <Page header={label}>\r\n            {proxyLinks === undefined ?\r\n            <>\r\n                <SearchBox className=\"w-100\" onSearch={this.onSearch} placeholder={'搜索'+label} />\r\n                <div className='my-3'>\r\n                    {newButton}\r\n                    <button className=\"btn btn-primary ml-3\" onClick={this.onList}>列表</button>\r\n                </div>\r\n            </> :\r\n            <List className=\"my-2\"\r\n                header={<Muted>{label} 代理下列Tuid</Muted>}\r\n                items={proxyLinks}\r\n                item={{render: this.entityRender, onClick:this.entityClick}} />\r\n            }\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { FA } from 'tonva-react-form';\r\nimport { Page } from 'tonva-tools';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CTuidMain, TuidUI } from './cTuid';\r\nimport { TuidMain, Tuid } from '../../entities';\r\n\r\nexport type TypeVTuidEdit = typeof VTuidEdit;\r\n\r\nexport class VTuidEdit extends VEntity<Tuid, TuidUI, CTuidMain> {\r\n    private vForm: VForm;\r\n    private id: number;\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        if (param !== undefined) {\r\n            this.id = param.id;\r\n        }\r\n        this.openPage(this.editView);\r\n    }\r\n\r\n    protected get editView() {\r\n        return () => <Page header={(this.id===undefined? '新增':'编辑') + ' - ' + this.label}>\r\n            {this.vForm.render('py-3')}\r\n        </Page>;\r\n    }\r\n\r\n    protected next = async () => {\r\n        this.vForm.reset();\r\n        this.closePage();\r\n    }\r\n\r\n    protected finish = () => {\r\n        this.closePage(2);\r\n        this.event('edit-end');\r\n    }\r\n\r\n    protected resetForm() {\r\n        this.vForm.reset();\r\n    }\r\n\r\n    protected onSubmit = async () => {\r\n        let values = this.vForm.getValues();\r\n        let ret = await this.controller.entity.save(this.id, values);\r\n        let {id} = ret;\r\n        if (id < 0) {\r\n            let {unique} = this.controller.entity;\r\n            if (unique !== undefined) {\r\n                for (let u of unique) {\r\n                    this.vForm.setError(u, '不能重复');\r\n                }\r\n            }\r\n            return;\r\n        }\r\n        if (this.controller.isCalling) {\r\n            this.returnCall(id);\r\n            this.closePage();\r\n            return;\r\n        }\r\n        this.openPageElement(<Page header={this.label + '提交成功'} back=\"none\">\r\n            <div className='m-3'>\r\n                <span className=\"text-success\">\r\n                    <FA name='check-circle' size='lg' /> 成功提交！\r\n                </span>\r\n                <div className='mt-5'>\r\n                    <button className=\"btn btn-primary mr-3\" onClick={this.next}>继续录入</button>\r\n                    <button className=\"btn btn-outline-primary\" onClick={this.finish}>不继续</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n\r\n        this.event('item-changed', {id: this.id, values: values});\r\n        return;\r\n    }\r\n\r\n    //protected view = TuidNewPage;\r\n}\r\n/*\r\nconst TuidNewPage = observer(({vm}:{vm:VmTuidEdit}) => {\r\n    let {label, id, vmForm} = vm;\r\n    return <Page header={(id===undefined? '新增':'编辑') + ' - ' + label}>\r\n        {vmForm.render('mx-3 my-2')}\r\n    </Page>;\r\n});\r\n*/","import { nav, Page } from 'tonva-tools';\r\nimport { VTuidMainListBase, VTuidDivListBase } from './vTuidList';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Tuid } from '../../entities';\r\nimport { CTuid, TuidUI } from './cTuid';\r\nimport { SearchBox, List } from 'tonva-react-form';\r\nimport React from 'react';\r\nimport { RowContent } from '../form/viewModel';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class VTuidSelect extends VEntity<Tuid, TuidUI, CTuid<Tuid>> {\r\n    protected mainRowContent: (row:any) => JSX.Element;\r\n    protected divRowContent: (row:any) => JSX.Element;\r\n\r\n    async open(param?:any): Promise<void> {\r\n        if (param === undefined)\r\n            await this.showMain(param);\r\n        else\r\n            await this.showDiv(param);\r\n    }\r\n\r\n    private async showMain(param) {\r\n        this.mainRowContent = this.ui.rowContent || RowContent;\r\n        await this.controller.searchMain(param);\r\n        this.openPage(this.mainView);\r\n    }\r\n\r\n    private async showDiv(ownerValue: any) {\r\n        let {divs} = this.ui;\r\n        if (divs !== undefined) {\r\n            this.divRowContent = divs[this.entity.name].rowContent;\r\n        }\r\n        if (this.divRowContent === undefined) {\r\n            this.divRowContent = RowContent;\r\n        }\r\n        let divItems = await this.controller.getDivItems(ownerValue);\r\n        this.openPage(this.divView, {items: divItems});\r\n    }\r\n\r\n    protected mainView = observer(() => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearchMain} placeholder={'搜索'+this.label} />;\r\n        return <Page header={header} back=\"close\">\r\n            <List\r\n                items={this.controller.PageItems.items}\r\n                item={{render: this.renderMainRow, onClick: this.clickMainRow}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    });\r\n\r\n    onSearchMain = async (key:string) => {\r\n        await this.controller.searchMain(key);\r\n        //await this.PageItems.first(key);\r\n    }\r\n    renderMainRow = (item:any, index:number):JSX.Element => <this.mainRowContent {...item} />;\r\n    clickMainRow = async (item:any) => {\r\n        this.ceasePage();\r\n        if (this.controller.entity.owner === undefined) {\r\n            this.returnCall(item);\r\n            return;\r\n        }\r\n        await this.showDiv(this.entity.getIdFromObj(item));\r\n    }\r\n\r\n    protected divView = (param:any) => {\r\n        return <Page header=\"选择Div\">\r\n            <List\r\n                items={param.items}\r\n                item={{render: this.renderDivRow, onClick: this.clickDivRow}} />\r\n        </Page>;\r\n    }\r\n    renderDivRow = (item:any, index:number):JSX.Element => <this.divRowContent {...item} />;\r\n    clickDivRow = (item:any) => {\r\n        this.ceasePage();\r\n        this.returnCall(item);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { FA } from 'tonva-react-form';\r\nimport { Page } from 'tonva-tools';\r\nimport { jsonStringify } from '../../tools';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { TuidMain } from '../../entities';\r\nimport { TuidUI, CTuidMain } from './cTuid';\r\n\r\nexport type TypeVTuidView = typeof VTuidView;\r\n\r\nexport class VTuidView extends VEntity<TuidMain, TuidUI, CTuidMain> {\r\n    vForm: VForm;\r\n    id: number;\r\n\r\n    protected buildForm(param:any) {\r\n        this.vForm = this.createForm(undefined, param);\r\n    }\r\n\r\n    async open(param:any) {\r\n        this.buildForm(param);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    render(param:any) {\r\n        this.buildForm(param);\r\n        return this.vForm.render();\r\n    }\r\n\r\n    async loadId(id: number) {\r\n        this.id = id;\r\n    }\r\n\r\n    protected next = async () => {\r\n        this.vForm.reset();\r\n        this.closePage();\r\n    }\r\n\r\n    protected finish = () => {\r\n        this.closePage(2);\r\n    }\r\n\r\n    protected resetForm() {\r\n        this.vForm.reset();\r\n    }\r\n\r\n    protected onSubmit = async () => {\r\n        let values = this.vForm.getValues();\r\n        let ret = await this.entity.save(this.id, values);\r\n        if (ret) {\r\n            alert('这里还要判断返回值，先不处理了 \\n' + jsonStringify(ret));\r\n        }\r\n        this.openPage(() => <Page header={this.label + '提交成功'} back=\"none\">\r\n            <div className='m-3'>\r\n                <span className=\"text-success\">\r\n                    <FA name='check-circle' size='lg' /> 成功提交！\r\n                </span>\r\n                <div className='mt-5'>\r\n                    <button className=\"btn btn-primary mr-3\" onClick={this.next}>继续录入</button>\r\n                    <button className=\"btn btn-outline-primary\" onClick={this.finish}>不继续</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n        return;\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n            {this.vForm.render('py-3')}\r\n    </Page>;\r\n}\r\n","import React from 'react';\r\nimport { VTuidView } from './vTuidView';\r\n\r\nexport class VTuidInfo  extends VTuidView {\r\n/*\r\n    async open(param?:any) {\r\n        this.open(this.view);\r\n    }\r\n*/\r\n/*\r\n    private view = () => {\r\n        return <Page>\r\n            TuidInfo\r\n        </Page>\r\n    }\r\n*/\r\n}\r\n","import { PageItems } from 'tonva-tools';\r\nimport { Tuid } from \"../../entities\";\r\n\r\nexport class TuidPageItems<T> extends PageItems<T> {\r\n    private tuid: Tuid;\r\n    constructor(tuid: Tuid) {\r\n        super(true);\r\n        this.tuid = tuid;\r\n    }\r\n    protected async load(param:any, pageStart:any, pageSize:number):Promise<any[]> {\r\n        let ret = await this.tuid.search(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:any) {\r\n        this.pageStart = item === undefined? 0 : item.id;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { FA, SearchBox, List } from 'tonva-react-form';\r\nimport { Page, PageItems } from 'tonva-tools';\r\nimport { jsonStringify } from '../../tools';\r\nimport { TuidMain, Entity, Tuid, TuidDiv } from '../../entities';\r\nimport { VEntity } from '../CVEntity';\r\nimport { TuidUI, CTuidMain, CTuidDiv } from './cTuid';\r\nimport { JSONContent, RowContent } from '../form/viewModel';\r\n\r\nexport abstract class VTuidMainListBase  extends VEntity<TuidMain, TuidUI, CTuidMain> {\r\n    protected rowContent: (row:any) => JSX.Element;\r\n    protected ownerId: number;\r\n\r\n    async open(param?:any) {\r\n        this.rowContent = this.ui.rowContent || RowContent;\r\n        if (this.entity.owner !== undefined) this.ownerId = Number(param);\r\n        // 初始查询, key是空的\r\n        //await this.onSearch('');\r\n        await this.controller.searchMain('');\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSearch = async (key:string) => {\r\n        await this.controller.searchMain(key);\r\n        //await this.PageItems.first(key);\r\n    }\r\n    renderRow = (item:any, index:number):JSX.Element => <this.rowContent {...item} />;\r\n\r\n    protected abstract onSelected(item:any): Promise<void>;\r\n    private callOnSelected(item:any) {\r\n        if (this.onSelected === undefined) {\r\n            alert('onSelect is undefined');\r\n            return;\r\n        }\r\n        this.onSelected(item);\r\n    }\r\n    clickRow = (item:any) => {\r\n        this.callOnSelected(item);\r\n    }\r\n    private rowKey = (item:any) => {\r\n        let {id} = item;\r\n        return id;\r\n    }\r\n    protected view = observer(() => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\r\n        let {owner} = this.entity;\r\n        let ownerTop;\r\n        if (owner !== undefined) {\r\n            let ownerObj = owner.valueFromId(this.ownerId);\r\n            ownerTop = <div>owner: {jsonStringify(ownerObj)}</div>;\r\n        }\r\n        return <Page header={header}>\r\n            {ownerTop}\r\n            <List\r\n                items={this.controller.PageItems.items}\r\n                item={{render: this.renderRow, onClick: this.clickRow, key:this.rowKey}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    });\r\n}\r\n\r\nexport class VTuidMainList extends VTuidMainListBase {\r\n    protected async onSelected(item:any) {\r\n        if (this.controller.isFrom === false)\r\n            this.event('edit', item.id);\r\n        else\r\n            this.event('info', item.id);\r\n    }\r\n}\r\n\r\nexport abstract class VTuidDivListBase  extends VEntity<TuidDiv, TuidUI, CTuidDiv> {\r\n    protected ownerId: number;\r\n\r\n    async open(param?:any) {\r\n        //this.PageItems = new TuidPageItems(this.entity);\r\n        if (this.entity.owner !== undefined) this.ownerId = Number(param);\r\n        // 初始查询, key是空的\r\n        //await this.onSearch('');\r\n        await this.controller.searchMain('');\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSearch = async (key:string) => {\r\n        await this.controller.searchMain(key);\r\n        //await this.PageItems.first(key);\r\n    }\r\n    renderRow = (item:any, index:number):JSX.Element => {\r\n        return <div className=\"px-3 py-2\">{jsonStringify(item)}</div>;\r\n    }\r\n\r\n    protected abstract onSelected(item:any): Promise<void>;\r\n    private callOnSelected(item:any) {\r\n        if (this.onSelected === undefined) {\r\n            alert('onSelect is undefined');\r\n            return;\r\n        }\r\n        this.onSelected(item);\r\n    }\r\n    clickRow = (item:any) => {\r\n        this.callOnSelected(item);\r\n    }\r\n\r\n    protected view = observer(() => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\r\n        let {owner} = this.entity;\r\n        let ownerTop;\r\n        if (owner !== undefined) {\r\n            let ownerObj = owner.valueFromId(this.ownerId);\r\n            ownerTop = <div>owner: {jsonStringify(ownerObj)}</div>;\r\n        }\r\n        return <Page header={header}>\r\n            {ownerTop}\r\n            <List\r\n                items={this.controller.PageItems.items}\r\n                item={{render: this.renderRow, onClick: this.clickRow}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    });\r\n}\r\n\r\nexport class VTuidDivList extends VTuidDivListBase {\r\n    protected async onSelected(item:any) {\r\n        this.event('edit', item.id);\r\n    }\r\n}\r\n","import _ from 'lodash';\r\nimport { TypeVPage, PageItems } from 'tonva-tools';\r\nimport { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { TuidMain, Tuid, TuidDiv } from \"../../entities\";\r\nimport { VTuidMain } from './vTuidMain';\r\nimport { VTuidEdit } from './vTuidEdit';\r\nimport { VTuidSelect } from './vTuidSelect';\r\nimport { CUq } from \"../uq/cUq\";\r\nimport { CLink } from \"../link\";\r\nimport { VTuidInfo } from \"./vTuidInfo\";\r\nimport { TuidPageItems } from \"./pageItems\";\r\nimport { VTuidMainList } from './vTuidList';\r\n\r\nexport interface TuidUI extends EntityUI {\r\n    CTuidMain?: typeof CTuidMain;\r\n    CTuidEdit?: typeof CTuidEdit;\r\n    CTuidList?: typeof CTuidList;\r\n\r\n    CTuidSelect?: typeof CTuidSelect;\r\n    CTuidInfo?: typeof CTuidInfo;\r\n    content?: React.StatelessComponent<any>;\r\n    rowContent?: React.StatelessComponent<any>;\r\n    divs?: {\r\n        [div:string]: {\r\n            CTuidSelect?: typeof CTuidSelect;\r\n            content?: React.StatelessComponent<any>;\r\n            rowContent?: React.StatelessComponent<any>;\r\n        }\r\n    }\r\n}\r\n\r\nexport abstract class CTuid<T extends Tuid> extends CEntity<T, TuidUI> {\r\n    PageItems:PageItems<any>;\r\n\r\n    protected buildPageItems():PageItems<any> {\r\n        return new TuidPageItems(this.entity.owner || this.entity);\r\n    }\r\n\r\n    async searchMain(key:string) {\r\n        if (this.PageItems === undefined) {\r\n            this.PageItems = this.buildPageItems();\r\n        }\r\n        if (key !== undefined) await this.PageItems.first(key);\r\n    }\r\n\r\n    async getDivItems(ownerId:number):Promise<any[]> {\r\n        let ret = await this.entity.searchArr(ownerId, undefined, 0, 1000);\r\n        return ret;\r\n    }\r\n}\r\n\r\nexport class CTuidMain extends CTuid<TuidMain> {\r\n    constructor(cUq: CUq, entity: TuidMain, ui: TuidUI, res:any) {\r\n        super(cUq, entity, ui, res);\r\n        let tuid = this.entity;\r\n        this.proxies = tuid.proxies;\r\n        if (this.proxies !== undefined) {\r\n            this.proxyLinks = [];\r\n            for (let i in this.proxies) {\r\n                let link = this.cUq.linkFromName('tuid', i);\r\n                this.proxyLinks.push(link);\r\n            }\r\n        }\r\n    }\r\n\r\n    async from():Promise<CTuidMain> {\r\n        let ret = await this.entity.cFrom();\r\n        if (ret === undefined) return this;\r\n        return ret;\r\n    }\r\n\r\n    async cUqFrom():Promise<CUq> {\r\n        return await this.entity.cUqFrom();\r\n    }\r\n    async cEditFrom(): Promise<CTuidEdit> {\r\n        let cUq = await this.entity.cUqFrom();\r\n        return await cUq.cTuidEditFromName(this.entity.name);\r\n    }\r\n    async cInfoFrom(): Promise<CTuidInfo> {\r\n        let cUq = await this.entity.cUqFrom();\r\n        return await cUq.cTuidInfoFromName(this.entity.name);\r\n    }\r\n    async cSelectFrom(): Promise<CTuidSelect> {\r\n        let cUq = await this.entity.cUqFrom();\r\n        return await cUq.cTuidSelectFromName(this.entity.name);\r\n    }\r\n\r\n    getLable(tuid:Tuid):string {\r\n        if (tuid === this.entity) return this.label;\r\n        let {name} = tuid;\r\n        let {arrs} = this.res;\r\n        if (arrs !== undefined) {\r\n            let arr = arrs[name];\r\n            if (arr !== undefined) {\r\n                let label = arr.label;\r\n                if (label !== undefined) return label;\r\n            }\r\n        }\r\n        return name;\r\n    }\r\n\r\n    proxies: {[name:string]: TuidMain};\r\n    proxyLinks: CLink[];\r\n    isFrom: boolean;\r\n\r\n    protected get VTuidMain():typeof VTuidMain {return VTuidMain}\r\n    protected get VTuidEdit():typeof VTuidEdit {return VTuidEdit}\r\n    protected get VTuidList():typeof VTuidMainList {return VTuidMainList}\r\n\r\n    protected async internalStart(param?:any):Promise<void> {\r\n        this.isFrom = this.entity.schemaFrom !== undefined;\r\n        await this.openVPage(this.VTuidMain);\r\n    }\r\n\r\n    protected async onEvent(type:string, value:any) {\r\n        let v: TypeVPage<CTuidMain>;\r\n        switch (type) {\r\n            default: return;\r\n            case 'new': v = this.VTuidEdit; break;\r\n            case 'list': v = this.VTuidList; break;\r\n            case 'edit': await this.edit(value); return;\r\n            case 'item-changed': this.itemChanged(value); return;\r\n            case 'info': \r\n                let cTuidInfo = new CTuidInfo(this.cUq, this.entity, this.ui, this.res);\r\n                await cTuidInfo.start(value);\r\n                return;\r\n        }\r\n        await this.openVPage(v, value);\r\n    }\r\n\r\n    protected async edit(id:number) {\r\n        let values:any = undefined;\r\n        if (id !== undefined) {\r\n            values = await this.entity.load(id);\r\n        }\r\n        let v = this.VTuidEdit;\r\n        await this.openVPage(v, values);\r\n    }\r\n\r\n    private itemChanged({id, values}:{id:number, values: any}) {\r\n        if (this.PageItems === undefined) return;\r\n        let items = this.PageItems.items;\r\n        let item = items.find(v => v.id === id);\r\n        if (item !== undefined) {\r\n            _.merge(item, values);\r\n        }\r\n    }\r\n}\r\n\r\nexport class CTuidEdit extends CTuidMain {\r\n    protected async internalStart(id:number):Promise<void> {\r\n        await this.edit(id);\r\n    }\r\n}\r\n\r\nexport class CTuidList extends CTuidMain {\r\n    protected async internalStart(id:number):Promise<void> {\r\n        await this.openVPage(this.VTuidList);\r\n    }\r\n}\r\n\r\nexport class CTuidDiv extends CTuid<TuidDiv> {\r\n    protected async internalStart():Promise<void> {\r\n        alert('tuid div: ' + this.entity.name);\r\n    }\r\n}\r\n\r\nexport class CTuidSelect extends CTuid<Tuid> {\r\n    protected async internalStart(param?: any):Promise<void> {\r\n        await this.openVPage(this.VTuidSelect, param);\r\n    }\r\n    protected async beforeStart():Promise<boolean> {\r\n        //if (await super.beforeStart() === false) return false;\r\n        await this.entity.loadSchema();\r\n        if (this.PageItems !== undefined) this.PageItems.reset();\r\n        return true;\r\n    }\r\n    protected get VTuidSelect():typeof VTuidSelect {return VTuidSelect}\r\n    idFromItem(item:any) {\r\n        return item.id;\r\n    }\r\n}\r\n\r\nexport class CTuidInfo extends CTuid<Tuid> {\r\n    protected async internalStart(id: any):Promise<void> {\r\n        let data = await this.entity.load(id)\r\n        await this.openVPage(this.VTuidInfo, data);\r\n    }\r\n    protected get VTuidInfo():typeof VTuidInfo {return VTuidInfo}\r\n}\r\n","export * from './cTuid';\r\nexport * from './vTuidMain';\r\nexport * from './vTuidEdit';\r\nexport * from './vTuidInfo';\r\nexport * from './vTuidView';\r\n","import * as React from 'react';\r\nimport { VField } from './vField';\r\nimport { VArr } from './vArr';\r\nimport { VSubmit } from './vSubmit';\r\nimport { uid } from 'tonva-react-form';\r\n\r\nexport abstract class VBand {\r\n    protected label: string;\r\n    protected view = () => <div />;\r\n\r\n    constructor(label:string) {\r\n        this.label = label;\r\n    }\r\n\r\n    render():JSX.Element {\r\n        //text-sm-right\r\n        return <div key={this.key} className=\"px-3\">\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-sm-2 col-form-label\">\r\n                    {this.label}\r\n                </label>\r\n                <div className=\"col-sm-10\">\r\n                    {this.renderContent()}\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    setAddRow(addRow:()=>Promise<void>) {}\r\n    get key() {return this.label}\r\n    public getVFields():VField[] {return;}\r\n    public getVArr():VArr {return;}\r\n    public getVSubmit():VSubmit {return;}\r\n\r\n    protected renderContent():JSX.Element {\r\n        return <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">content</div>;\r\n    }\r\n}\r\n\r\nexport interface FieldRes {\r\n    label: string;\r\n    placeHolder: string;\r\n    suffix: string;\r\n}\r\nexport class VFieldBand extends VBand {\r\n    protected vField:VField;\r\n    constructor(label:string, vField:VField) {\r\n        super(label);\r\n        this.vField = vField;\r\n    }\r\n\r\n    get key() {return this.vField.name}\r\n    public getVFields():VField[] {return [this.vField];}\r\n\r\n    protected renderContent():JSX.Element {\r\n        return this.vField.render();\r\n        /*\r\n        <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">\r\n            {this.vField.render()}\r\n        </div>;*/\r\n    }\r\n}\r\n\r\nexport class VArrBand extends VBand {\r\n    protected vArr:VArr;\r\n    constructor(label:string, vArr:VArr) {\r\n        super(label);\r\n        this.vArr = vArr;\r\n    }\r\n\r\n    setAddRow(addRow:()=>Promise<void>) {this.vArr.setAddRow(addRow)}\r\n    get key() {return this.vArr.name}\r\n    public getVArr():VArr {return this.vArr;}\r\n\r\n    render():JSX.Element {\r\n        return <React.Fragment key={this.key}>\r\n            {this.vArr && this.vArr.render()}\r\n        </React.Fragment>;\r\n    }\r\n}\r\n\r\nexport class VFieldsBand extends VBand {\r\n    protected vFields: VField[];\r\n    constructor(label:string, vFields:VField[]) {\r\n        super(label);\r\n        this.vFields = vFields;\r\n    }\r\n\r\n    get key() {return this.vFields[0].name}\r\n    public getVFields():VField[] {return this.vFields;}\r\n\r\n    protected renderContent():JSX.Element {\r\n        return <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">\r\n            fields\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class VSubmitBand extends VBand {\r\n    protected vSubmit: VSubmit;\r\n    constructor(vSubmit:VSubmit) {\r\n        super(undefined);\r\n        this.vSubmit = vSubmit;\r\n    }\r\n\r\n    get key() {return '$submit'}\r\n\r\n    public getVSubmit():VSubmit {return this.vSubmit;}\r\n\r\n    render():JSX.Element {\r\n        return <div key=\"$submit\" className=\"px-3\">\r\n            <div className=\"form-group row\">\r\n                <div className=\"offset-sm-2 col-sm-10\">\r\n                    {this.vSubmit.render()}\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames'\r\nimport { ViewModel } from \"./viewModel\";\r\nimport { VForm } from './vForm';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\n\r\nexport class VSubmit extends ViewModel {\r\n    private vForm: VForm;\r\n    constructor(vForm: VForm) {\r\n        super();\r\n        this.vForm = vForm;\r\n        this.caption = this.vForm.submitCaption;\r\n        this.className = 'btn btn-primary w-25';\r\n    }\r\n    @observable caption: string;\r\n    @observable className: string;\r\n\r\n    private onClickSubmit = async () => {\r\n        this.vForm.submit();\r\n    }\r\n\r\n    protected view = observer(() => {\r\n        let {isOk} = this.vForm;\r\n        return <button type=\"button\" \r\n            onClick={this.onClickSubmit}\r\n            className={this.className}\r\n            disabled={isOk === false}>\r\n            {this.caption}\r\n        </button>;\r\n    });\r\n}","\r\nexport abstract class Rule {\r\n    abstract check(defy:string[], value:any);\r\n}\r\n\r\nexport class RuleRequired extends Rule {\r\n    check(defy:string[], value:any) {\r\n        switch (typeof value) {\r\n            default:\r\n            case 'boolean': return;\r\n            case 'object':\r\n                if (value !== null) return;\r\n                break;\r\n            case 'string':\r\n                if ((value as string).trim().length > 0) return;\r\n                break;\r\n            case 'number':\r\n                if ((value as number) !== NaN) return;\r\n                break;\r\n            case 'undefined':\r\n                break;\r\n        }\r\n        defy.push('不能为空');\r\n    }\r\n}\r\n\r\nexport class RuleNum extends Rule {\r\n    check(defy:string[], value:any) {\r\n        if (value === undefined || value === null) return;\r\n        let n = Number(value);\r\n        if (n === NaN) defy.push('必须是数字');\r\n    }\r\n}\r\n\r\nexport class RuleInt extends Rule {\r\n    check(defy:string[], value:any) {\r\n        if (value === undefined || value === null) return;\r\n        let n = Number(value);\r\n        if (Number.isNaN(n) === true || Number.isInteger(n) === false) {\r\n            defy.push('必须是整数');\r\n        }\r\n    }\r\n}\r\n\r\nexport class RuleMin extends RuleNum {\r\n    constructor(min: number) {\r\n        super();\r\n        this.min = min;\r\n    }\r\n    min: number;\r\n    check(defy:string[], value:any) {\r\n        super.check(defy, value);\r\n        if (Number(value) < this.min) defy.push('不能小于' + this.min);\r\n    }\r\n}\r\n\r\nexport class RuleMax extends RuleNum {\r\n    constructor(max: number) {\r\n        super();\r\n        this.max = max;\r\n    }\r\n    max: number;\r\n    check(defy:string[], value:any) {\r\n        super.check(defy, value);\r\n        if (Number(value) > this.max) defy.push('不能小于' + this.max);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { computed, action } from 'mobx';\r\nimport classNames from 'classnames';\r\nimport { observer } from 'mobx-react';\r\nimport { FA } from 'tonva-react-form';\r\nimport { ViewModel } from \"../viewModel\";\r\nimport { VForm, FormMode } from '../vForm';\r\nimport { Rule, RuleRequired, RuleInt, RuleNum, RuleMin, RuleMax } from '../rule';\r\nimport { Field } from '../../../entities';\r\nimport { FieldRes } from '../vBand';\r\nimport { FieldUI, FieldInputUI, FieldStringUI, FieldNumberUI } from '../../formUI';\r\n\r\nexport abstract class VField extends ViewModel {\r\n    protected form: VForm;\r\n    protected fieldUI: FieldUI;\r\n    protected fieldRes:FieldRes;\r\n    protected field: Field;\r\n    protected rules: Rule[];\r\n    constructor(form:VForm, field:Field, fieldUI: FieldUI, fieldRes:FieldRes) {\r\n        super();\r\n        this.form = form;\r\n        this.field = field;\r\n        this.name = field.name;\r\n        this.fieldUI = fieldUI || {} as any;\r\n        this.fieldRes = fieldRes || {} as any;\r\n        this.init();\r\n    }\r\n\r\n    name: string;\r\n\r\n    protected init() {\r\n        this.buildRules();\r\n    }\r\n\r\n    protected buildRules() {\r\n        this.rules = [];\r\n        let {required} = this.fieldUI;\r\n        if (required === true || this.field !== undefined && this.field.null === false) {\r\n            this.rules.push(new RuleRequired);\r\n        }\r\n    }\r\n\r\n    @computed get checkRules(): string[] {\r\n        let defy = [];\r\n        for (let r of this.rules) r.check(defy, this.value);\r\n        return defy;\r\n    }\r\n\r\n    @computed get isOk() {\r\n        if (this.rules.length === 0) return true;\r\n        let defy = this.checkRules;\r\n        return defy.length === 0;\r\n    }\r\n\r\n    @computed get value() { return this.form.values[this.name]; }\r\n    setValue(v:any) {\r\n        this.form.values[this.name]=v; \r\n    }\r\n    get error() { return this.form.errors[this.name]; }\r\n    set error(err:any) { this.form.errors[this.name]=err; }\r\n    protected parse(str:string):any {return str;}\r\n    get readonly():boolean {\r\n        let {mode} = this.form;\r\n        return mode === FormMode.readonly || \r\n            mode === FormMode.edit && this.fieldUI.editable === false;\r\n    }\r\n}\r\n\r\nexport class VUnknownField extends VField {\r\n    protected view = () => {\r\n        //let {name, type} = this.fieldUI;\r\n        let type='', name = '';\r\n        return <input type=\"text\" className=\"form-control form-control-plaintext border border-info rounded bg-light\"\r\n            placeholder={'unkown control: ' + type + '-' + name} />;\r\n    }\r\n}\r\n\r\nexport abstract class VInputControl extends VField {\r\n    protected fieldUI: FieldInputUI;\r\n    protected input: HTMLInputElement;\r\n\r\n    protected inputType:string;\r\n    protected get maxLength():number {return}\r\n\r\n    protected renderError = (className:string) => {\r\n        let {errors} = this.form;\r\n        let error = errors[this.name];\r\n        if (error === undefined) return;\r\n        return <div className={className}><FA name=\"exclamation-circle\" /> {error}</div>\r\n    }\r\n\r\n    /*\r\n    get value() {\r\n        return super.value;\r\n    }*/\r\n    setValue(v:any) {\r\n        super.setValue(v); this.setInputValue(); \r\n    }\r\n\r\n    protected ref = (input:HTMLInputElement) => {\r\n        this.input = input;\r\n        this.setInputValue();\r\n    }\r\n\r\n    protected setInputValue() {\r\n        if (!this.input) return;\r\n        let v = this.value;\r\n        this.input.value = v === null || v === undefined? '' : v;\r\n    }\r\n\r\n    protected onFocus = () => {\r\n        this.error = undefined;\r\n    }\r\n\r\n    protected onBlur = () => {\r\n        let defy = this.checkRules;\r\n        if (defy.length > 0) {\r\n            this.error = defy[0];\r\n        }\r\n        this.form.computeFields();\r\n    }\r\n\r\n    protected onChange = (evt: React.ChangeEvent<any>) => {\r\n        let v = this.parse(evt.currentTarget.value);\r\n        if (v === null) {\r\n            return;\r\n        }\r\n        this.setValue(v);\r\n    }\r\n\r\n    protected onKeyPress: (event:React.KeyboardEvent<HTMLInputElement>) => void;\r\n    \r\n    protected view = observer(() => {\r\n        let {required} = this.fieldUI;\r\n        let {placeHolder, suffix} = this.fieldRes;\r\n        let ctrlCN = ['form-control', 'form-control-input'];\r\n        let errCN = 'text-danger small mt-1 mx-2';\r\n    \r\n        let redDot;\r\n        let input;\r\n        if (this.readonly === true) {\r\n            input = <input className={classNames(ctrlCN, 'bg-light')}\r\n                ref={this.ref}\r\n                type={this.inputType}\r\n                readOnly={true}\r\n            />;\r\n        }\r\n        else {\r\n            input = <input className={classNames(ctrlCN)}\r\n                ref={this.ref}\r\n                type={this.inputType}\r\n                onFocus={this.onFocus}\r\n                onBlur={this.onBlur}\r\n                onChange={this.onChange}\r\n                placeholder={placeHolder}\r\n                readOnly={false}\r\n                maxLength={this.maxLength}\r\n                onKeyPress={this.onKeyPress}\r\n            />;\r\n            if (required === true || this.field.null === false) {\r\n                redDot = <RedMark />;\r\n            }\r\n        }\r\n\r\n        let inputGroup;\r\n        if (suffix === undefined)\r\n            inputGroup = input;\r\n        else\r\n            inputGroup = <div className=\"input-group\">\r\n                {input}\r\n                <div className=\"input-group-append\">\r\n                    <span className=\"input-group-text\">{suffix}</span>\r\n                </div>\r\n            </div>;\r\n\r\n        return <>\r\n            {redDot}\r\n            {inputGroup}\r\n            {this.renderError(errCN)}\r\n        </>\r\n    });\r\n}\r\n\r\nexport const RedMark = () => <b style={{color:'red', position:'absolute', left:'0.1em', top:'0.5em'}}>*</b>;\r\n\r\nexport class VStringField extends VInputControl {\r\n    protected fieldUI: FieldStringUI;\r\n    protected inputType:string = 'text';\r\n    protected get maxLength():number {return this.field.size}\r\n}\r\n\r\nconst KeyCode_Neg = 45;\r\nconst KeyCode_Dot = 46;\r\n\r\nexport abstract class VNumberControl extends VInputControl {\r\n    protected fieldUI: FieldNumberUI;\r\n    protected extraChars: number[];\r\n\r\n    protected init() {\r\n        super.init();\r\n        this.extraChars = [];\r\n        if (this.fieldUI !== undefined) {\r\n            let {min, max} = this.fieldUI;\r\n            if (min !== undefined) {\r\n                //this.rules.push((v:number) => {if (v === undefined) return; if (v<min) return ErrMin + min; return true;});\r\n                if (min < 0) this.extraChars.push(KeyCode_Neg);\r\n            }\r\n            else {\r\n                this.extraChars.push(KeyCode_Neg);\r\n            }\r\n    \r\n            if (max !== undefined) {\r\n                //this.rules.push((v:number) => {if (v === undefined) return; if (v>max) return ErrMax + max; return true});\r\n            }\r\n        }\r\n        switch (this.field.type) {\r\n            case 'dec':\r\n            case 'bigint':\r\n            case 'int':\r\n            case 'smallint':\r\n            case 'tinyint':\r\n                this.extraChars.push(KeyCode_Dot); break;\r\n        }\r\n    }\r\n\r\n    protected buildRules() {\r\n        super.buildRules();\r\n        this.rules.push(new RuleNum);\r\n        let {min, max} = this.fieldUI;\r\n        if (min !== undefined) this.rules.push(new RuleMin(min));\r\n        if (max !== undefined) this.rules.push(new RuleMax(max));\r\n    }\r\n\r\n    inputType:string = 'number';\r\n\r\n    protected parse(text:string):any {\r\n        try {\r\n            if (text.trim().length === 0) return undefined;\r\n            let ret = Number(text);\r\n            return (ret === NaN)? null : ret;\r\n        }\r\n        catch {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    protected setInputValue() {\r\n        if (!this.input) return;\r\n        let v = this.value;\r\n        if (this.parse(this.input.value) == v) return;\r\n        this.input.value = v === null || v === undefined? '' : v;\r\n    }\r\n\r\n    protected onKeyPress = (event:React.KeyboardEvent<HTMLInputElement>) => {\r\n        let ch = event.charCode;\r\n        if (ch === 8 || ch === 0 || ch === 13 || ch >= 48 && ch <= 57) return;\r\n        if (this.extraChars !== undefined) {\r\n            if (this.extraChars.indexOf(ch) >= 0) {\r\n                switch (ch) {\r\n                    case KeyCode_Dot: this.onKeyDot(); break;\r\n                    case KeyCode_Neg: this.onKeyNeg(); event.preventDefault(); break;\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    private onKeyDot() {\r\n        let v = this.input.value;\r\n        let p = v.indexOf('.');\r\n        if (p >= 0) this.input.value = v.replace('.', '');\r\n    }\r\n    private onKeyNeg() {\r\n        let v = this.input.value;\r\n        let p = v.indexOf('-');\r\n        if (p >= 0) v = v.replace('-', '');\r\n        else v = '-'+v;\r\n        this.input.value = v;\r\n    }\r\n}\r\n\r\nexport class VIntField extends VNumberControl {\r\n    protected buildRules() {\r\n        super.buildRules();\r\n        this.rules.push(new RuleInt);\r\n    }\r\n}\r\n\r\nexport class VDecField extends VNumberControl {\r\n}\r\n\r\nexport class VTextField extends VStringField {\r\n\r\n}\r\n\r\nexport class VDateTimeField extends VStringField {\r\n\r\n}\r\n","import React from 'react';\r\nimport { VField } from './vField';\r\nimport { Field } from '../../../entities';\r\nimport { VForm } from '../vForm';\r\nimport { observer } from 'mobx-react';\r\nimport { FieldRes } from '../vBand';\r\n\r\nexport class VComputeField extends VField {\r\n    constructor(form:VForm, field: Field, fieldRes: FieldRes) {\r\n        super(form, field, undefined, fieldRes);\r\n    }\r\n    protected view = observer(() => {\r\n        let value = this.form.values[this.field.name];\r\n        let {placeHolder, suffix} = this.fieldRes;\r\n        let ctrlCN = 'form-control form-control-input bg-light';\r\n        if (value === null) value = '';\r\n        let input = <input className={ctrlCN}\r\n            type=\"text\"\r\n            placeholder={placeHolder}\r\n            readOnly={true}\r\n            value={value}/>\r\n        let inputGroup;\r\n        if (suffix === undefined)\r\n            inputGroup = input;\r\n        else\r\n            inputGroup = <div className=\"input-group\">\r\n                {input}\r\n                <div className=\"input-group-append\">\r\n                    <span className=\"input-group-text\">{suffix}</span>\r\n                </div>\r\n            </div>;\r\n        return inputGroup;\r\n        /*\r\n            return <div \r\n            className=\"form-control form-control-plaintext border border-info rounded bg-light cursor-pointer\">\r\n            {value} &nbsp;\r\n        </div>;\r\n        */\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { IObservableArray, observable } from 'mobx';\r\nimport _ from 'lodash';\r\nimport { List, FA, Muted } from 'tonva-react-form';\r\nimport { Page, nav } from 'tonva-tools';\r\nimport { ViewModel, RowContent, TypeContent, JSONContent } from './viewModel';\r\nimport { ArrFields, Field } from '../../entities';\r\nimport { VForm, FieldInputs, FormMode } from './vForm';\r\nimport { FormArr } from '../formUI';\r\n\r\nexport type ArrEditRow = (initValues:any, onRowChanged:(rowValues:any)=>void) => Promise<void>;\r\n\r\nexport class VArr extends ViewModel {\r\n    protected mode: FormMode;\r\n    protected label: any;\r\n    protected header: any;\r\n    protected footer: any;\r\n    protected rowValues: any;                 // 仅仅用来判断是不是新增，undefined则是新增\r\n    protected onEditRow: ArrEditRow;\r\n    protected ownerForm:VForm;\r\n    protected vForm:VForm;\r\n    protected rowContent:TypeContent;\r\n    protected none: string;\r\n    protected newSubmitCaption: string;\r\n    protected editSubmitCaption: string;\r\n    protected addRow: ()=>Promise<void>;\r\n\r\n    name:string;\r\n    list: IObservableArray<any>;\r\n\r\n    constructor(ownerForm:VForm, arr:ArrFields, onEditRow?:ArrEditRow) {\r\n        super();\r\n        this.ownerForm = ownerForm;\r\n        let {name, fields} = arr;\r\n        this.name = name;\r\n        let {ui, res, mode, inputs, values} = ownerForm;\r\n        let arrsRes = res.arrs;\r\n        let arrRes = arrsRes !== undefined? arrsRes[name] : {};\r\n        let {label, none, newSubmit, editSubmit} = arrRes;\r\n        this.none = none || ownerForm.none;\r\n        this.newSubmitCaption = newSubmit || ownerForm.arrNewCaption;\r\n        this.editSubmitCaption = editSubmit || ownerForm.arrEditCaption;\r\n        this.label = label || name;\r\n        let arrUI = ((ui && ui.items[name]) || {}) as FormArr;\r\n        this.rowContent = arrUI.rowContent;// || JSONContent;\r\n        this.mode = mode;\r\n        if (this.onEditRow === undefined) {\r\n            this.vForm = new VForm({\r\n                fields: fields,\r\n                arrs: undefined,\r\n                ui: arrUI,\r\n                res: arrRes,\r\n                inputs: inputs[name] as FieldInputs,\r\n                none: ownerForm.none,\r\n                submitCaption: 'submit',\r\n                arrNewCaption: undefined,\r\n                arrEditCaption: undefined,\r\n                arrTitleNewButton: undefined,\r\n                mode: mode,\r\n            }, \r\n            mode===FormMode.readonly? undefined: this.onSubmit);\r\n        }\r\n        else {\r\n            this.onEditRow = onEditRow;\r\n        }\r\n        this.list = values[name];\r\n    }\r\n\r\n    reset() {\r\n        this.vForm.reset();\r\n        this.list.clear();\r\n    }\r\n\r\n    setAddRow(addRow:()=>Promise<void>) {\r\n        this.addRow = addRow;\r\n    }\r\n\r\n    protected rowPage = () => {\r\n        return <Page header={this.label} back=\"close\">\r\n            {this.vForm.render('py-3')}\r\n        </Page>\r\n    }\r\n    private onSubmit = async () => {\r\n        let {valueBoxs} = this.vForm;\r\n        await this.onRowChanged(valueBoxs);\r\n    }\r\n\r\n    private onRowChanged = async (rowValues:any) => {\r\n        if (this.rowValues === undefined) {\r\n            rowValues.$owner = this.ownerForm.values;\r\n            this.list.push(rowValues);\r\n            if (this.onEditRow === undefined)\r\n                this.vForm.reset();\r\n            else\r\n                await this.onEditRow(undefined, this.onRowChanged);\r\n        }\r\n        else {\r\n            _.merge(this.rowValues, rowValues);\r\n            if (this.onEditRow === undefined) nav.pop();\r\n        }\r\n    }\r\n\r\n    private renderItem = (item:any, index:number) => {\r\n        if (this.rowContent === undefined)\r\n            return <div className=\"px-3 py-2\"><JSONContent {...item} /></div>\r\n        return <this.rowContent {...item} />;\r\n    }\r\n    private showRow = async (rowValues:any):Promise<any> => {\r\n        if (this.onEditRow !== undefined) {\r\n            await this.onEditRow(rowValues, this.onRowChanged);\r\n            return;\r\n        }\r\n        this.vForm.reset();\r\n        if (rowValues !== undefined) this.vForm.setValues(rowValues);\r\n        nav.push(<this.rowPage />);\r\n    }\r\n    private editRow = async (rowValues:any): Promise<void> => {\r\n        this.rowValues = rowValues;\r\n        let {vSubmit} = this.vForm;\r\n        if (vSubmit !== undefined) {\r\n            vSubmit.caption = this.editSubmitCaption;\r\n            vSubmit.className = 'btn btn-outline-success';\r\n        }\r\n        this.vForm.mode = this.ownerForm.mode;\r\n        await this.showRow(rowValues);\r\n    }\r\n    private internalAddRow = async () => {\r\n        this.rowValues = undefined;\r\n        let {vSubmit} = this.vForm;\r\n        vSubmit.caption = this.newSubmitCaption;\r\n        vSubmit.className = 'btn btn-outline-success';\r\n        this.vForm.reset();\r\n        this.vForm.mode = FormMode.new;\r\n        await this.showRow(undefined);\r\n    }\r\n\r\n    protected view = () => {\r\n        let button;\r\n        if (this.addRow !== undefined || this.mode !== FormMode.readonly) {\r\n            button = <button onClick={this.addRow || this.internalAddRow}\r\n                type=\"button\" \r\n                className=\"btn btn-link p-0\">\r\n                {this.ownerForm.arrTitleNewButton}\r\n            </button>;\r\n        }\r\n        let header = this.header || <div className=\"px-3 bg-light small\" style={{paddingTop:'1px', paddingBottom:'1px'}}>\r\n            <div className=\"flex-fill align-self-center\">{this.label}</div>\r\n            {button}\r\n        </div>;\r\n        return <List className=\"pb-3\"\r\n            header={header}\r\n            none={<Muted className=\"px-3 py-2\">{this.none}</Muted>}\r\n            items={this.list}\r\n            item={{render: this.renderItem, onClick: this.editRow}} />;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { tv } from '../../../tools';\r\nimport { Field, Tuid } from '../../../entities';\r\nimport { VField, RedMark } from \"./vField\";\r\nimport { FieldUI } from '../../formUI';\r\nimport { VForm, FieldInput, FormMode } from '../vForm';\r\nimport { FieldRes } from '../vBand';\r\n\r\nconst buttonStyle:React.CSSProperties = {\r\n    textAlign:'left', \r\n    paddingLeft:'0.75rem', \r\n    paddingRight:'0.75rem', \r\n    overflow: 'hidden'\r\n};\r\n\r\nexport class VTuidField extends VField {\r\n    protected vForm: VForm;\r\n    protected input: FieldInput;\r\n    protected tuid: Tuid;\r\n\r\n    constructor(vForm: VForm, field:Field, fieldUI: FieldUI, fieldRes:FieldRes) {\r\n        super(vForm, field, fieldUI, fieldRes);\r\n        this.tuid = field._tuid;\r\n        this.vForm = vForm;\r\n        this.input = vForm.inputs[field.name] as FieldInput;\r\n    }\r\n\r\n    onClick = async () => {\r\n        if (this.readonly === true) {\r\n            if (!this.value) return;\r\n            await this.tuid.showInfo(this.value.id);\r\n            return;\r\n        }\r\n        let id:number;\r\n        if (this.input !== undefined) {\r\n            id = await this.input.select(this.vForm, this.field, this.vForm.getValues());\r\n        }\r\n        else {\r\n            alert('call undefined');\r\n            id = 0;\r\n        }\r\n        this.setValue(this.tuid.boxId(id));\r\n    }\r\n    protected view = observer(() => {\r\n        let {placeHolder} = this.fieldRes;\r\n        let disabled:boolean = false;\r\n        let {_ownerField} = this.field;\r\n        if (_ownerField !== undefined) {\r\n            let {name, arr} = _ownerField;\r\n            disabled = this.vForm.getValue(name) === null;\r\n        }\r\n        let content;\r\n        if (this.value === null)\r\n            content = <>{placeHolder || this.input.placeHolder}</>;\r\n        else if (typeof this.value === 'object') {\r\n            content = tv(this.value);\r\n        }\r\n        else {\r\n            let idBox = this.tuid.boxId(this.value);\r\n            content = tv(idBox); // idBox.content();\r\n        }\r\n        if (this.readonly === true)\r\n        {\r\n            return <div \r\n                className=\"form-control form-control-plaintext border border-info rounded bg-light cursor-pointer\"\r\n                onClick={this.onClick}>\r\n                {content}\r\n            </div>;\r\n        }\r\n        let redDot;\r\n        let {required} = this.fieldUI;\r\n        if (required === true || this.field.null === false) {\r\n            redDot = <RedMark />;\r\n        }\r\n        return <>\r\n            {redDot}\r\n            <button className=\"form-control btn btn-outline-info\"\r\n                type=\"button\"\r\n                disabled={disabled}\r\n                style={buttonStyle}\r\n                onClick={this.onClick}>\r\n                {content}\r\n            </button>\r\n        </>;\r\n    })\r\n}\r\n","import { VBand, VFieldBand, VArrBand, VFieldsBand, VSubmitBand, FieldRes } from \"./vBand\";\r\nimport { Field, ArrFields } from \"../../entities\";\r\nimport { VForm, FormOptions } from \"./vForm\";\r\nimport { FormItems, FieldUI, FormItem } from \"../formUI\";\r\nimport { VSubmit } from \"./vSubmit\";\r\nimport { VField, buildVField, VComputeField } from \"./vField\";\r\nimport { VArr } from \"./vArr\";\r\nimport { VTuidField } from \"./vField/vTuidField\";\r\n\r\nexport class BandsBuilder {\r\n    private vForm: VForm;\r\n    private onSubmit: (values:any)=>Promise<void>;\r\n    private fields: Field[];\r\n    private arrs: ArrFields[];\r\n    private formItems: FormItems;\r\n    private layout: string[];\r\n    private res: any;\r\n    constructor(vForm:VForm, options: FormOptions, onSubmit: (values:any)=>Promise<void>) {\r\n        this.vForm = vForm;\r\n        this.onSubmit = onSubmit;\r\n        let {fields, arrs, ui, res} = options;\r\n        this.fields = fields;\r\n        this.arrs = arrs;\r\n        if (ui !== undefined) {\r\n            let {items, layout} = ui;\r\n            this.formItems = items;\r\n            this.layout = layout;\r\n        }\r\n        this.res = res;\r\n    }\r\n\r\n    build():VBand[] {\r\n        //return this.bandUIs === undefined? this.bandsOnFly() : this.bandsFromUI();\r\n        return this.layout === undefined? this.bandsOnFly() : this.bandsFromLayout();\r\n    }\r\n\r\n    private resFromName(name:string, res:any):string|FieldRes {\r\n        if (res === undefined) return;\r\n        let {fields} = res;\r\n        if (fields === undefined) return;\r\n        return fields[name] || name;\r\n    }\r\n\r\n    private bandsOnFly():VBand[] {\r\n        let bands:VBand[] = [];\r\n        this.bandsFromFields(bands, this.fields, this.res);\r\n        if (this.arrs !== undefined) {\r\n            for (let arr of this.arrs) bands.push(this.bandFromArr(arr));\r\n        }\r\n        if (this.onSubmit !== undefined) {\r\n            bands.push(new VSubmitBand(new VSubmit(this.vForm)));\r\n        }\r\n        return bands;\r\n    }\r\n\r\n    private bandsFromFields(bands:VBand[], fields:Field[], res:any) {\r\n        if (fields === undefined) return;\r\n        for (let field of fields) bands.push(this.bandFromField(field, res));\r\n    }\r\n\r\n    private bandsFromLayout():VBand[] {\r\n        let bands:VBand[] = [];\r\n        /*\r\n        for (let bandUI of this.bandUIs)  {\r\n            let band = this.bandFromUI(bandUI);\r\n            bands.push(band);\r\n        }\r\n        */\r\n        return bands;\r\n    }\r\n\r\n    /*\r\n    private bandFromUI(bandUI:BandUI):VBand {\r\n        let {band} = bandUI;\r\n        switch (band) {\r\n            default: return this.bandFromFieldUI(bandUI as FieldBandUI);\r\n            case 'arr': return this.bandFromArrUI(bandUI as ArrBandUI);\r\n            case 'fields': return this.bandFromFieldsUI(bandUI as FieldsBandUI);\r\n            case 'submit': return this.bandFromSubmitUI(bandUI as SubmitBandUI);\r\n        }\r\n    }\r\n    \r\n    private bandFromFieldUI(bandUI: FieldBandUI): VFieldBand {\r\n        let {label} = bandUI;\r\n        let vField = this.vFieldFromUI(bandUI);\r\n        return new VFieldBand(label, vField);\r\n    }\r\n    private bandFromArrUI(bandUI: ArrBandUI): VArrBand {\r\n        let {label, name} = bandUI;\r\n        let vArr = this.vArrFromUI(bandUI);\r\n        return new VArrBand(label, vArr);\r\n    }\r\n    private bandFromFieldsUI(bandUI: FieldsBandUI): VFieldsBand {\r\n        let {label, fieldUIs} = bandUI;\r\n        let vFields = fieldUIs.map(v => this.vFieldFromUI(v));\r\n        return new VFieldsBand(label, vFields);\r\n    }\r\n    private bandFromSubmitUI(bandUI: SubmitBandUI): VSubmitBand {\r\n        if (this.onSubmit === undefined) return;\r\n        let vSubmit = new VSubmit(this.vForm);\r\n        return new VSubmitBand(vSubmit);\r\n    }\r\n    */\r\n/*\r\n    private vFieldFromField(field:Field, fieldRes:FieldRes, formItem: FormItem): VField {\r\n        let fieldUI:FieldUI = undefined;\r\n        if (formItem !== undefined) {\r\n            if (typeof formItem === 'function') {\r\n                return new VComputeField(this.vForm, field, fieldRes);\r\n            }\r\n        }\r\n        let ret = buildVField(this.vForm, field, formItem, fieldRes);\r\n        if (ret !== undefined) return ret;\r\n        return new VTuidField(field, fieldUI, fieldRes, this.vForm);\r\n    }\r\n*/\r\n    private bandFromField(field:Field, res:any):VBand {\r\n        let {name} = field;\r\n        let fieldRes:FieldRes;\r\n        let rfn = this.resFromName(name, res);\r\n        let label:string;\r\n        if (typeof rfn === 'object') {\r\n            label = rfn.label;\r\n            fieldRes = rfn;\r\n        }\r\n        else {\r\n            label = rfn as string;\r\n            fieldRes = undefined;\r\n        }\r\n        let vField:VField;\r\n        let formItem:FormItem;\r\n        if (this.formItems !== undefined) formItem = this.formItems[name];\r\n        //let vField = this.vFieldFromField(field, fieldRes as FieldRes, formItem);\r\n        //let fieldUI:FieldUI = undefined;\r\n        if (typeof formItem === 'function') {\r\n            vField = new VComputeField(this.vForm, field, fieldRes);\r\n        }\r\n        else {\r\n            vField = buildVField(this.vForm, field, formItem as FieldUI, fieldRes);\r\n        }\r\n        if (vField === undefined) {\r\n            vField = new VTuidField(this.vForm, field, formItem as FieldUI, fieldRes);\r\n        }\r\n        return new VFieldBand(label || name, vField);\r\n    }\r\n\r\n    private bandFromArr(arr: ArrFields):VBand {\r\n        let {name, fields} = arr;\r\n        //let row = JSONContent;\r\n        //let bands:VBand[] = [];\r\n        //this.bandsFromFields(bands, fields, res);\r\n        let vArr = new VArr(this.vForm, arr); // name, res && res.label || name, row, bands);\r\n        return new VArrBand(name, vArr);\r\n    }\r\n\r\n    /*\r\n    private vFieldFromUI(fieldUI:FieldUI):VField {\r\n        return;\r\n    }\r\n\r\n    private vArrFromUI(arrBandUI:ArrBandUI):VArr {\r\n        return;\r\n    }\r\n    */\r\n}\r\n","import { VField, VIntField, VDecField, VStringField, VTextField, VDateTimeField } from './vField';\r\nimport { Field } from '../../../entities';\r\nimport { FieldRes } from '../vBand';\r\nimport { VForm } from '../vForm';\r\nimport { FieldUI } from '../../formUI';\r\n\r\nexport function buildVField(form:VForm, field: Field, fieldUI: FieldUI, fieldRes:FieldRes): VField {\r\n    let vField:new (form:VForm, field:Field, ui:FieldUI, fieldRes:FieldRes) => VField;\r\n    switch (field.type) {\r\n        default: return;\r\n        case 'tinyint':\r\n        case 'smallint':\r\n        case 'int':\r\n            vField = VIntField;\r\n            break;\r\n        case 'bigint':\r\n            let {_tuid} = field;\r\n            if (_tuid !== undefined) return;\r\n            vField = VIntField;\r\n            break;\r\n        case 'dec':\r\n            vField = VDecField;\r\n            break;\r\n        case 'char':\r\n            vField = VStringField;\r\n            break;\r\n        case 'text':\r\n            vField = VTextField;\r\n            break;\r\n        case 'datetime':\r\n            vField = VDateTimeField;\r\n            break;\r\n    }\r\n    return new vField(form, field, fieldUI, fieldRes);\r\n}\r\n\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport { observer } from \"mobx-react\";\r\nimport { VBand } from './vBand';\r\nimport { BandsBuilder } from './bandsBuilder';\r\nimport { Field, ArrFields } from '../../entities';\r\nimport { computed, observable, IObservableObject, IObservableValue } from 'mobx';\r\nimport { VArr } from './vArr';\r\nimport { FormUI, FormUIBase, FormItems } from '../formUI';\r\nimport { VField } from './vField';\r\nimport { VSubmit } from './vSubmit';\r\nimport { IObservableArray } from 'mobx';\r\nimport { FA } from 'tonva-react-form';\r\n\r\nexport type FieldCall = (form:VForm, field:Field, values:any) => Promise<any>;\r\nexport interface FieldInput {\r\n    select: FieldCall;\r\n    content: React.StatelessComponent<any>;\r\n    placeHolder: string;\r\n}\r\nexport interface FieldInputs {\r\n    [fieldOrArr:string]: FieldInput | {[field:string]: FieldInput};\r\n}\r\nexport enum FormMode {new, edit, readonly}\r\n\r\nexport interface FormOptions {\r\n    fields: Field[];\r\n    arrs?: ArrFields[];\r\n    ui: FormUIBase;\r\n    res: any;\r\n    inputs: FieldInputs;\r\n    submitCaption: string;\r\n    arrNewCaption: string;\r\n    arrEditCaption: string;\r\n    arrTitleNewButton: JSX.Element;\r\n    none: string;\r\n    mode: FormMode;\r\n}\r\n\r\nexport class VForm {\r\n    protected fields: Field[];\r\n    protected arrs: ArrFields[];\r\n    protected bands: VBand[];\r\n    protected bandColl: {[key:string]: VBand};\r\n    protected onSubmit: ()=>Promise<void>;\r\n\r\n    constructor(options: FormOptions, onSubmit: ()=>Promise<void>) {\r\n        let {fields, arrs, ui, res, inputs, none, submitCaption, arrNewCaption, arrEditCaption, arrTitleNewButton, mode} = options;\r\n        this.fields = fields;\r\n        this.arrs = arrs;\r\n        this.ui = ui;\r\n        if (this.ui !== undefined) this.formItems = this.ui.items; //.compute = this.ui.compute;\r\n        this.res = res;\r\n        this.inputs = inputs;\r\n        this.none = none;\r\n        this.submitCaption = submitCaption;\r\n        this.arrNewCaption = arrNewCaption;\r\n        this.arrEditCaption = arrEditCaption;\r\n        this.arrTitleNewButton = arrTitleNewButton || <small><FA name=\"plus\" /> 新增</small>;\r\n        if (onSubmit === undefined) this.mode = FormMode.readonly;\r\n        else this.mode = mode;\r\n        this.buildFormValues();\r\n        this.buildBands(options, onSubmit);\r\n        this.onSubmit = onSubmit;\r\n    }\r\n\r\n    ui: FormUI;\r\n    res: any;\r\n    values: any;\r\n    errors: any;\r\n    formItems: FormItems;\r\n    mode: FormMode;\r\n    vFields: {[name:string]:VField} = {};\r\n    vArrs: {[name:string]: VArr} = {};\r\n    vSubmit: VSubmit;\r\n    inputs: FieldInputs;\r\n    none: string;\r\n    submitCaption: string;\r\n    arrNewCaption: string;\r\n    arrEditCaption: string;\r\n    arrTitleNewButton: JSX.Element;\r\n\r\n    private buildBands(options: FormOptions, onSubmit: (values:any)=>Promise<void>) {\r\n        this.bandColl = {};\r\n        let bandsBuilder = new BandsBuilder(this, options, onSubmit);\r\n        this.bands = bandsBuilder.build();\r\n        for (let band of this.bands) {\r\n            this.bandColl[band.key] = band;\r\n            let vFields = band.getVFields();\r\n            if (vFields !== undefined) for (let f of vFields) this.vFields[f.name] = f;\r\n            let vArr = band.getVArr();\r\n            if (vArr !== undefined) this.vArrs[vArr.name] = vArr;\r\n            let vSubmit = band.getVSubmit();\r\n            if (vSubmit !== undefined) this.vSubmit = vSubmit;\r\n        }\r\n    }\r\n\r\n    private onFormSubmit = (event:React.FormEvent<any>) => {\r\n        event.preventDefault();\r\n        return false;\r\n    }\r\n\r\n    protected view = observer(({className}:{className:string}) => {\r\n        return <form className={className} onSubmit={this.onFormSubmit}>\r\n            {this.bands.map(v => v.render())}\r\n        </form>;\r\n    });\r\n\r\n    getBand(name:string) {\r\n        return this.bandColl[name];\r\n    }\r\n\r\n    computeFields() {\r\n        if (this.formItems === undefined) return;\r\n        let values = this.values;\r\n        for (let i in this.formItems) {\r\n            let item = this.formItems[i];\r\n            if (typeof item !== 'function') continue;\r\n            values[i] = item.call(values);\r\n        }\r\n    }\r\n\r\n    async submit() {\r\n        if (this.onSubmit === undefined) return;\r\n        await this.onSubmit();\r\n    }\r\n    \r\n    getValues() {\r\n        let ret:any = {};\r\n        let values = this.values;\r\n        for (let f of this.fields) {\r\n            let {name} = f;\r\n            let v = values[name]\r\n            ret[name] =  v !== null && typeof v === 'object' ? v.id : v;\r\n        }\r\n        if (this.arrs !== undefined) {\r\n            for (let arr of this.arrs) {\r\n                let {name, fields, id, order} = arr;\r\n                let list = ret[name] = [];\r\n                let rows = this.vArrs[name].list;\r\n                for (let row of rows) {\r\n                    let item = {} as any;\r\n                    if (id !== undefined) item[id] = row[id];\r\n                    if (order !== undefined) item[order] = row[order];\r\n                    for (let f of fields) {\r\n                        let {name:fn} = f;\r\n                        let v = row[fn]\r\n                        item[fn] =  v !== null && typeof v === 'object' ? v.id : v;\r\n                    }\r\n                    list.push(item);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    get valueBoxs() {\r\n        let ret:any = {};\r\n        let values = this.values;\r\n        for (let f of this.fields) {\r\n            let {name, _tuid} = f;\r\n            let v = values[name]\r\n            ret[name] =  _tuid === undefined || typeof v === 'object' ? v : _tuid.boxId(v);\r\n        }\r\n        if (this.arrs === undefined) return ret;\r\n        for (let arr of this.arrs) {\r\n            let {name, fields, id, order} = arr;\r\n            let list = ret[name] = this.vArrs[name].list.slice();\r\n            for (let row of list) {\r\n                for (let f of fields) {\r\n                    let {name:fn, _tuid} = f;\r\n                    let v = row[fn]\r\n                    row[fn] =  _tuid === undefined || typeof v === 'object' ? v : _tuid.boxId(v);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    setValues(initValues:any) {\r\n        if (initValues === undefined) {\r\n            this.reset();\r\n            return;\r\n        }\r\n        let values = this.values;\r\n        let errors = this.errors;\r\n        for (let f of this.fields) {\r\n            let fn = f.name;\r\n            errors[fn] = undefined;\r\n            let v =  initValues[fn];\r\n            values[fn] = v;\r\n        }\r\n        // 还要设置arrs的values\r\n        for (let i in this.vArrs) {\r\n            let list = initValues[i];\r\n            if (list === undefined) continue;\r\n            let arrList = values[i] as IObservableArray<any>;\r\n            arrList.clear();\r\n            arrList.push(...list);\r\n        }\r\n    }\r\n\r\n    @computed get isOk():boolean {\r\n        for (let i in this.vFields) {\r\n            if (this.vFields[i].isOk === false) return false;\r\n        }\r\n        return true;\r\n    }\r\n    reset() {\r\n        let values = this.values;\r\n        let errors = this.errors;\r\n        for (let f of this.fields) {\r\n            let fn = f.name;\r\n            //if (this.compute !== undefined && this.compute[fn] !== undefined) continue;\r\n            values[fn] = null;\r\n            errors[fn] = undefined;\r\n        }\r\n        for (let i in this.vFields) {\r\n            let ctrl = this.vFields[i];\r\n            let cn = ctrl.name;\r\n            if (cn === undefined) continue;\r\n            //if (this.compute !== undefined && this.compute[cn] !== undefined) continue;\r\n            ctrl.setValue(null);\r\n        }\r\n        for (let i in this.vArrs) {\r\n            let vArr = this.vArrs[i];\r\n            vArr.reset();\r\n        }\r\n    }\r\n\r\n    getValue(fieldName: string) {\r\n        return this.values[fieldName];\r\n    }\r\n    setValue(fieldName: string, value: any) { this.values[fieldName] = value }\r\n\r\n    setError(fieldName:string, error:string) {this.errors[fieldName] = error}\r\n\r\n    private buildFieldValues(fields: Field[]):any {\r\n        let v: {[p:string]: any} = {\r\n            valueFromFieldName: function(propName:string) {\r\n                return this[propName];\r\n            }\r\n        };\r\n        for (let f of fields) {\r\n            let fn = f.name;\r\n            v[fn] = null;\r\n        }\r\n        return v;\r\n    }\r\n    private buildObservableValues():IObservableObject {\r\n        let v: {[p:string]: any} = this.buildFieldValues(this.fields);\r\n        if (this.arrs !== undefined) {\r\n            for (let arr of this.arrs) {\r\n                v[arr.name] = observable.array([], {deep:true});\r\n            }\r\n        }\r\n        let ret = observable(v);\r\n        return ret;\r\n    }\r\n    private buildFormValues() {\r\n        this.values = this.buildObservableValues();\r\n        this.errors = observable(this.buildFieldValues(this.fields));\r\n    }\r\n\r\n    render(className:string = \"py-3\"):JSX.Element {\r\n        return <this.view className={className} />\r\n    }\r\n}\r\n","export * from './vForm';\r\n","import {bridgeCenterApi, isBridged} from './appBridge';\r\nimport {FetchError} from '../fetchError';\r\nimport {HttpChannelUI} from './httpChannelUI';\r\nimport {nav} from '../ui/nav';\r\nimport { isDevelopment } from './host';\r\n\r\nexport async function httpGet(url:string, params?:any):Promise<any> {\r\n    let channel = new HttpChannel(false, url, undefined, undefined);\r\n    let ret = await channel.get('', params);\r\n    return ret;\r\n}\r\n\r\nexport async function httpPost(url:string, params?:any):Promise<any> {\r\n    let channel = new HttpChannel(false, url, undefined, undefined);\r\n    let ret = await channel.post('', params);\r\n    return ret;\r\n}\r\n\r\nexport class HttpChannel {\r\n    private isCenter: boolean;\r\n    private hostUrl: string;\r\n    private apiToken: string;\r\n    private ui?: HttpChannelUI;\r\n    private timeout: number;\r\n\r\n    constructor(isCenter: boolean, hostUrl: string, apiToken:string, ui?: HttpChannelUI) {\r\n        this.isCenter = isCenter;\r\n        this.hostUrl = hostUrl;\r\n        this.apiToken = apiToken;\r\n        this.ui = ui;\r\n        this.timeout = isDevelopment === true? 500000:5000;\r\n    }\r\n\r\n    private startWait = () => {\r\n        if (this.ui !== undefined) this.ui.startWait();\r\n    }\r\n\r\n    private endWait = (url?:string, reject?:(reason?:any)=>void) => {\r\n        if (this.ui !== undefined) this.ui.endWait();\r\n        if (reject !== undefined) reject('访问webapi超时 ' + url);\r\n    }\r\n\r\n    private showError = async (error:FetchError) => {\r\n        if (this.ui !== undefined) await this.ui.showError(error);\r\n    }\r\n\r\n    used() {\r\n        this.post('', {});\r\n    }\r\n\r\n    async get(url: string, params: any = undefined): Promise<any> {\r\n        if (params) {\r\n            let keys = Object.keys(params);\r\n            if (keys.length > 0) {\r\n                let c = '?';\r\n                for (let k of keys) {\r\n                    let v = params[k];\r\n                    if (v === undefined) continue;\r\n                    url += c + k + '=' + params[k];\r\n                    c = '&';\r\n                }\r\n            }\r\n        }\r\n        let options = this.buildOptions();\r\n        options.method = 'GET';\r\n        return await this.innerFetch(url, options);\r\n    }\r\n\r\n    async post(url: string, params: any): Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = 'POST';\r\n        options.body = JSON.stringify(params);\r\n        return await this.innerFetch(url, options);\r\n    }\r\n\r\n    async put(url: string, params: any): Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = 'PUT';\r\n        options.body = JSON.stringify(params);\r\n        return await this.innerFetch(url, options);\r\n    }\r\n\r\n    async delete(url: string, params: any): Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = 'DELETE';\r\n        options.body = JSON.stringify(params);\r\n        return await this.innerFetch(url, options);\r\n    }\r\n    async fetch(url: string, options: any, resolve:(value?:any)=>any, reject:(reason?:any)=>void):Promise<void> {\r\n        let that = this;\r\n        this.startWait();\r\n        let path = url;\r\n        function buildError(err: string) {\r\n            return {\r\n                channel: that,\r\n                url: path,\r\n                options: options,\r\n                resolve: resolve,\r\n                reject: reject,\r\n                error: err,\r\n            }\r\n        }\r\n        try {\r\n            console.log('%s %s', options.method, path);\r\n            let timeOutHandler = setTimeout(() => that.endWait(url, reject), this.timeout);\r\n            let res = await fetch(encodeURI(path), options);\r\n            if (res.ok === false) {\r\n                clearTimeout(timeOutHandler);\r\n                that.endWait();\r\n                console.log('call error %s', res.statusText);\r\n                throw res.statusText;\r\n            }\r\n            let ct = res.headers.get('content-type');\r\n            if (ct && ct.indexOf('json')>=0) {\r\n                return res.json().then(async retJson => {\r\n                    clearTimeout(timeOutHandler);\r\n                    that.endWait();\r\n                    if (retJson.ok === true) {\r\n                        return resolve(retJson.res);\r\n                    }\r\n                    if (retJson.error === undefined) {\r\n                        await that.showError(buildError('not valid tonva json'));\r\n                    }\r\n                    else {\r\n                        await that.showError(buildError(retJson.error));\r\n                        reject(retJson.error);\r\n                    }\r\n                    //throw retJson.error;\r\n                }).catch(async error => {\r\n                    await that.showError(buildError(error.message));\r\n                });\r\n            }\r\n            else {\r\n                let text = await res.text();\r\n                clearTimeout(timeOutHandler);\r\n                that.endWait();\r\n                resolve(text);\r\n            }\r\n        }\r\n        catch(error) {\r\n            if (typeof error === 'string') {\r\n                if (error.toLowerCase().startsWith('unauthorized') === true) {\r\n                    nav.logout();\r\n                    return;\r\n                }\r\n            }\r\n            await this.showError(buildError(error.message));\r\n        };\r\n    }\r\n\r\n    private async innerFetch(url: string, options: any): Promise<any> {\r\n        let u = this.hostUrl + url;\r\n        if (this.isCenter === true && this.apiToken === undefined && isBridged())\r\n            return await bridgeCenterApi(u, options.method, options.body);\r\n        return await new Promise<any>(async (resolve, reject) => {\r\n            await this.fetch(u, options, resolve, reject);\r\n        });\r\n    }\r\n\r\n    async callFetch(url:string, method:string, body:any):Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = method;\r\n        options.body = body;\r\n        return await new Promise<any>(async (resolve, reject) => {\r\n            await this.fetch(url, options, resolve, reject);\r\n        });\r\n    }\r\n\r\n    private buildOptions(): any {\r\n        let {language, culture} = nav;\r\n        let headers = new Headers();\r\n        //headers.append('Access-Control-Allow-Origin', '*');\r\n        headers.append('Content-Type', 'application/json;charset=UTF-8');\r\n        let lang = language;\r\n        if (culture) lang += '-' + culture;\r\n        headers.append('Accept-Language', lang);\r\n        if (this.apiToken) { \r\n            headers.append('Authorization', this.apiToken); \r\n        }\r\n        let options = {\r\n            headers: headers,\r\n            // cache: 'no-cache',\r\n        };\r\n        return options;\r\n    }\r\n}\r\n","import _ from 'lodash';\r\n\r\nexport interface KeyValueRes {\r\n    [key:string]: any;\r\n}\r\n\r\nexport interface Res<T extends KeyValueRes> {\r\n    [lang:string]: T | {[district:string]: T};\r\n}\r\n\r\nexport const resOptions:{lang:string, district:string} = {\r\n    lang: undefined,\r\n    district: undefined,\r\n}\r\n\r\nexport function setResOptions(lang:string, district:string) {\r\n    resOptions.lang = lang;\r\n    resOptions.district = district;\r\n}\r\n\r\n(function() {\r\n    let lang: string, district: string;\r\n    let language = navigator.languages && navigator.languages[0] || // Chrome / Firefox\r\n        navigator.language; // ||   // All browsers\r\n    //navigator.userLanguage; // IE <= 10\r\n    if (!language) {\r\n        lang = 'zh';\r\n        district = 'CN';\r\n    }\r\n    else {\r\n        let parts = language.split('-');\r\n        lang = parts[0];\r\n        if (parts.length > 1) district = parts[1];\r\n    }\r\n    setResOptions(lang, district);\r\n}());\r\n\r\nexport function resLang<T extends KeyValueRes>(res:Res<T>):T {\r\n    let {lang, district} = resOptions;\r\n    let ret:T = {} as T;\r\n    if (res === undefined) return ret;\r\n    _.merge(ret, res._);\r\n    let l = res[lang];\r\n    if (l === undefined) return ret;\r\n    _.merge(ret, l._);\r\n    let d = l[district];\r\n    if (d === undefined) return ret;\r\n    _.merge(ret, d);\r\n    let {entity} = ret;\r\n    if (entity !== undefined) {\r\n        for (let i in entity) {\r\n            entity[i.toLowerCase()] = entity[i];\r\n        }\r\n    }\r\n    return ret;\r\n}\r\n","export * from './CApp';\r\nexport * from './startApp';\r\nexport * from './uq';\r\nexport * from './action';\r\nexport * from './tuid';\r\nexport * from './sheet';\r\nexport * from './query';\r\nexport * from './map';\r\nexport * from './history';\r\nexport * from './pending';\r\nexport * from './form/viewModel';\r\nexport * from './form';\r\nexport * from './formUI';\r\nexport * from './ControllerUq';\r\nexport * from './CVEntity';\r\nexport * from './link';\r\nexport * from './icons';\r\n","import * as React from 'react';\r\nimport {observable, computed} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face} from '../face';\r\nimport {Rule} from '../rule';\r\n\r\nexport abstract class ControlBase {\r\n    protected formView: FormView;\r\n    constructor(formView:FormView) {\r\n        this.formView = formView;\r\n    }\r\n    render():JSX.Element {\r\n        return <div className=\"col-sm-10\">\r\n            {this.renderControl()}\r\n        </div>;\r\n    }\r\n    protected abstract renderControl():JSX.Element;\r\n    @computed get hasError():boolean {return false;}\r\n    @computed get filled():boolean {return false;}\r\n    clear() {}\r\n    clearErrors() {}\r\n    readValues(values:any):any {}\r\n    setError(fieldName:string, error:string) {}\r\n    setInitValues(values: any) {}\r\n    isOk():boolean {this.validate(); return !this.hasError;}\r\n    protected validate() {}\r\n}\r\n\r\nexport abstract class Control extends ControlBase {\r\n    protected field: Field;\r\n    protected face: Face;\r\n    protected props: any;\r\n    protected rules: Rule[];\r\n\r\n    protected element: HTMLElement;\r\n    @observable protected isOK?: boolean;\r\n    @observable protected error: string;\r\n    @observable protected value: any;\r\n\r\n    constructor(formView:FormView, field:Field, face:Face) {\r\n        super(formView);\r\n        this.field = field;\r\n        this.face = face;\r\n        this.init();\r\n        this.setProps();\r\n    }\r\n    protected ref(element: HTMLElement) {\r\n        this.element = element;\r\n    }\r\n    protected init() {\r\n        this.rules = [];\r\n        let r = this.field.rules;\r\n        if (r !== undefined) {\r\n            if (Array.isArray(r) === true) this.rules.push(...(r as Rule[]));\r\n            else this.rules.push(r as Rule);\r\n        }\r\n    };\r\n    protected setProps():any {\r\n        return this.props = {\r\n            ref: this.ref.bind(this),\r\n            name: this.field.name,\r\n        }\r\n    };\r\n    @computed get hasError():boolean {return this.error !== undefined;}\r\n    @computed get filled():boolean {\r\n        let ret = this.value !== undefined && this.value !== this.field.defaultValue;\r\n        return ret;\r\n    }\r\n    clearValue() { this.value = undefined; }\r\n    clear() { this.clearErrors(); this.clearValue(); }\r\n    clearErrors() { this.isOK = undefined; this.error = undefined; }\r\n    readValues(values:any):any {\r\n        values[this.field.name] = this.value;\r\n    }\r\n    setError(fieldName:string, error:string) {}\r\n    setInitValues(values: any) {}\r\n    protected getValueFromElement():any {return this.value;}\r\n    protected validate() {\r\n        try {\r\n            let v = this.getValueFromElement();\r\n            if (this.rules.length > 0) {\r\n                let isOk:boolean;\r\n                for (let rule of this.rules) {\r\n                    console.log('validate: %s', v);\r\n                    let err = rule(v);\r\n                    console.log('validate: %s err: %s', v, err);\r\n                    if (err === true) {\r\n                        this.error = undefined;\r\n                        isOk = true;\r\n                    }\r\n                    else if (err !== undefined) {\r\n                        //console.log('field %s onBlur v=%s rule=%s err=%s', \r\n                        //    this.field.name, JSON.stringify(v), rule, err);\r\n                        this.error = err;\r\n                        this.isOK = false;\r\n                        return;\r\n                    }\r\n                }\r\n                this.isOK = isOk;\r\n            }\r\n            this.value = v;\r\n        }\r\n        catch (e) {\r\n            this.error = e.message;\r\n        }\r\n    }\r\n    render():JSX.Element {\r\n        let n;\r\n        if (this.face !== undefined) {\r\n            let {notes} = this.face;\r\n            if (notes !== undefined) n = <small className=\"text-muted\">{notes}</small>;\r\n        }\r\n        return <div className=\"col-sm-10\">\r\n            {this.renderControl()}\r\n            {n}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face} from '../face';\r\nimport {ControlBase} from './control';\r\n\r\nexport class ButtonsControl extends ControlBase {\r\n    constructor(props) {\r\n        super(props);\r\n        this.otherClick = this.otherClick.bind(this);\r\n    }\r\n    private otherClick() {\r\n        let onOther = this.formView.props.onOther;\r\n        if (onOther === undefined) return;\r\n        let values = this.formView.readValues();\r\n        onOther(values);\r\n    }\r\n    renderControl():JSX.Element {\r\n        console.log('buttons.renderControl');\r\n        let nothing = this.formView.nothing;\r\n        let hasError = this.formView.hasError;\r\n        let props = this.formView.props;\r\n        console.log('buttons.renderControl nothing:%s hasError:%s', nothing, hasError);\r\n        let {submitButton, otherButton, onOther} = props;\r\n        let btnOther;\r\n        if (otherButton !== undefined) {\r\n            btnOther = <button className=\"btn btn-outline-info ml-auto\" onClick={this.otherClick}>\r\n                {otherButton}\r\n            </button>\r\n        }\r\n        return <div className=\"d-flex justify-content-start\">\r\n            <button\r\n                className=\"btn btn-primary\"\r\n                type=\"submit\" \r\n                disabled={nothing || hasError}>\r\n                {submitButton || '提交'}\r\n            </button>\r\n            {btnOther}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable, computed} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, Placeholder} from '../face';\r\nimport {Control} from './control';\r\n\r\nconst TxtRequired = '必须填入要求内容';\r\n\r\nexport abstract class CharsControl extends Control {\r\n    protected init() {\r\n        super.init();\r\n        if (this.field.required === true) {\r\n            this.rules.push((v) => {\r\n                if (v===null || v===undefined || (v as string).trim().length === 0) return TxtRequired;\r\n                return true;\r\n            });\r\n        }\r\n    }\r\n\r\n    protected element: HTMLInputElement;\r\n    protected getValueFromElement():any {return this.parseValue(this.element.value)}\r\n\r\n    protected setProps() {\r\n        super.setProps();\r\n        _.assign(this.props, {\r\n            onBlur: this.onBlur.bind(this),\r\n            onFocus: this.onFocus.bind(this),\r\n            onChange: this.onChange.bind(this),\r\n        });\r\n        let face = this.face as Placeholder;\r\n        if (face !== undefined) {\r\n            _.assign(this.props, {\r\n                placeholder: face.placeholder,\r\n            });\r\n        }\r\n        return this.props;\r\n    };\r\n    protected parseValue(value?:string):any {return value;}\r\n    private onBlur() {\r\n        //console.log('field %s onBlure', this.field.name);\r\n        this.validate();\r\n    }\r\n    private onChange() {\r\n        console.log('onChange');\r\n        this.validate();\r\n    }\r\n    private onFocus() {\r\n        this.clearErrors();\r\n        //this.error = undefined;\r\n        //this.formView.clearErrors();\r\n    }\r\n    protected className() {\r\n        return classNames({\r\n            \"form-control\": true,\r\n            \"has-success\": this.isOK === true,\r\n            \"is-invalid\": this.error !== undefined,\r\n            \"is-valid\": this.error === undefined && this.isOK === true,\r\n        });\r\n    }\r\n    protected renderInput():JSX.Element {\r\n        return <input className={this.className()} {...this.props} />;\r\n    }\r\n    protected ref(element: HTMLInputElement) {\r\n        super.ref(element);\r\n        if (element) {\r\n            element.value = this.value === undefined? '':this.value;\r\n        }\r\n    }\r\n    protected renderError():JSX.Element {\r\n        //if (this.field.name === 'name') console.log('charsControl renderControl');\r\n        if (this.error === undefined) return null;\r\n        return <div className=\"invalid-feedback\">{this.error}</div>\r\n    }\r\n    clearValue() { super.clearValue(); this.element.value = ''; }\r\n    setError(fieldName:string, error:string) {\r\n        if (this.field.name === fieldName) this.error = error;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        if (v === undefined) return;\r\n        //this.element.value = v;\r\n        this.value = v;\r\n    }\r\n    renderControl():JSX.Element {\r\n        return <React.Fragment>\r\n            {this.renderInput()}\r\n            {this.renderError()}\r\n        </React.Fragment>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport {CharsControl} from './charsControl';\r\nimport {StringField} from '../field';\r\n\r\nexport class StringControl extends CharsControl {\r\n    protected field: StringField;\r\n    protected setProps() {\r\n        let p = super.setProps();\r\n        _.assign(p, {\r\n            type: 'text',\r\n            maxLength: this.field.maxLength,\r\n        });\r\n        return p;\r\n    };\r\n    protected parseValue(value?:string):any {\r\n        if (value === undefined) return undefined;\r\n        if (value.trim().length === 0) return undefined;\r\n        return value;\r\n    }\r\n}\r\n\r\nexport class PasswordControl extends StringControl {\r\n    protected setProps() {\r\n        let p = super.setProps();\r\n        _.assign(p, {\r\n            type: 'password',\r\n            maxLength: this.field.maxLength,\r\n        });\r\n        return p;\r\n    };\r\n}","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport {IntField, DecField, NumberField} from '../field';\r\nimport {CharsControl} from './charsControl';\r\n\r\nconst ErrInvalidNumber = '无效的数字';\r\nconst ErrMin = '最小值为';\r\nconst ErrMax = '最大值为';\r\n\r\nconst KeyCode_Neg = 45;\r\nconst KeyCode_Dot = 46;\r\n\r\nexport class NumberControl extends CharsControl {\r\n    protected field: IntField | DecField | NumberField;\r\n    protected value: number;\r\n    protected extraChars: number[];\r\n    \r\n    protected init() {\r\n        super.init();\r\n        this.extraChars = [];\r\n        let {min, max} = this.field;\r\n        if (min !== undefined) {\r\n            this.rules.push((v:number) => {if (v === undefined) return; if (v<min) return ErrMin + min; return true;});\r\n            if (min < 0) this.extraChars.push(KeyCode_Neg);\r\n        }\r\n        else {\r\n            this.extraChars.push(KeyCode_Neg);\r\n        }\r\n\r\n        if (max !== undefined) {\r\n            this.rules.push((v:number) => {if (v === undefined) return; if (v>max) return ErrMax + max; return true});\r\n        }\r\n        switch (this.field.type) {\r\n            case 'dec':\r\n            case 'number': this.extraChars.push(KeyCode_Dot); break;\r\n        }\r\n    }\r\n\r\n    protected parseValue(value?:string):any {\r\n        if (value === undefined) return undefined;\r\n        if (value.trim().length === 0) return undefined;\r\n        let n = Number.parseFloat(value);\r\n        if (isNaN(n)) throw new Error(ErrInvalidNumber);\r\n        return n;\r\n    }\r\n\r\n    protected setProps() {\r\n        super.setProps();\r\n        _.assign(this.props, {\r\n            type: 'number',\r\n            step: (this.field as DecField).step,\r\n            onKeyPress: this.onKeyPress.bind(this),\r\n        });\r\n    }\r\n\r\n    onKeyPress(event:KeyboardEvent) {\r\n        let ch = event.charCode;\r\n        if (ch === 8 || ch === 0 || ch === 13 || ch >= 48 && ch <= 57) return;\r\n        if (this.extraChars !== undefined) {\r\n            if (this.extraChars.indexOf(ch) >= 0) {\r\n                switch (ch) {\r\n                    case KeyCode_Dot: this.onKeyDot(); break;\r\n                    case KeyCode_Neg: this.onKeyNeg(); event.preventDefault(); break;\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    private onKeyDot() {\r\n        let v = this.element.value;\r\n        let p = v.indexOf('.');\r\n        if (p >= 0) this.element.value = v.replace('.', '');\r\n    }\r\n    private onKeyNeg() {\r\n        let v = this.element.value;\r\n        let p = v.indexOf('-');\r\n        if (p >= 0) v = v.replace('-', '');\r\n        else v = '-'+v;\r\n        this.element.value = v;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {Control, ControlBase} from './control';\r\nimport {FormView} from '../formView';\r\n\r\nexport class UnknownControl extends Control {\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-plaintext\">\r\n            <div className=\"alert alert-primary\" role=\"alert\">\r\n            don't know how to create control<br/>\r\n            field: {JSON.stringify(this.field)} must be object <br/>\r\n            face: {JSON.stringify(this.face)} must be object <br/>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class EmptyControl extends ControlBase {\r\n    private element:JSX.Element;\r\n    constructor(formView:FormView, element:JSX.Element) {\r\n        super(formView);\r\n        this.element = element;\r\n    }\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-plaintext\">\r\n            {this.element}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, IdPickFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class PickIdControl extends Control {\r\n    protected face: IdPickFace;\r\n    @observable private caption: string|JSX.Element;\r\n\r\n    private onClick = async () => {\r\n        let {pick, fromPicked} = this.face;\r\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\r\n        if (item === undefined) {\r\n            this.value = undefined;\r\n            return;\r\n        }\r\n        if (fromPicked === undefined) {\r\n            this.value = item.id;\r\n            return;\r\n        }\r\n        let {id, caption} = fromPicked(item);\r\n        this.value = id;\r\n        this.caption = caption;\r\n    }\r\n    onPicked = (value: any) => {\r\n        this.value = value.id;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        this.value = v;\r\n    }\r\n    private controlContent():string|JSX.Element {\r\n        let {itemFromId, fromPicked, initCaption} = this.face;\r\n        if (this.value === undefined) {\r\n            return initCaption || '请选择Id';\r\n        }\r\n        if (this.caption !== undefined) {\r\n            return this.caption;\r\n        }\r\n        if (itemFromId !== undefined) {\r\n            if (fromPicked !== undefined) {\r\n                let item = itemFromId(this.value);\r\n                if (item) {\r\n                    let ret = fromPicked(item);\r\n                    if (ret !== undefined) return ret.caption;\r\n                }\r\n            }\r\n        }\r\n        return String(this.value);\r\n    }\r\n    /*\r\n    private buildContent():string|JSX.Element {\r\n        let {tuid, input} = this.face;\r\n        if (input === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n            return <div onClick={this.onClick}>{this.controlContent()}</div>;\r\n        }\r\n        return <input.component id={this.value} \r\n            tuid={tuid}\r\n            input={input}\r\n            entitiesUI={this.formView.props.context} \r\n            params={this.formView.readValues()}\r\n            onPicked={this.onPicked} />;\r\n    }*/\r\n    renderControl():JSX.Element {\r\n        let {tuid, input} = this.face;\r\n        if (input === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n            return <div className=\"form-control-plaintext px-2 border text-primary rounded cursor-pointer\"\r\n                onClick={this.onClick}>\r\n                {this.controlContent()}\r\n            </div>;\r\n        }\r\n        return <div className=\"form-control-static \">\r\n            <input.component id={this.value} \r\n                ui={tuid}\r\n                //input={input}\r\n                //entitiesUI={this.formView.props.context} \r\n                //params={this.formView.readValues()}\r\n                //onPicked={this.onPicked}\r\n                />\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, TuidPickFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class PickTuidControl extends Control {\r\n    protected face: TuidPickFace;\r\n    // protected value: number;\r\n    @observable private caption: string|JSX.Element;\r\n    constructor(formView:FormView, field:Field, face:Face) {\r\n        super(formView, field, face);\r\n        this.onIdChanged = this.onIdChanged.bind(this);\r\n        //this.onClick = this.onClick.bind(this);\r\n    }\r\n    /*\r\n    private async onClick() {\r\n        let {pick, fromPicked} = this.face;\r\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\r\n        if (item === undefined) {\r\n            this.value = undefined;\r\n            return;\r\n        }\r\n        if (fromPicked === undefined) {\r\n            this.value = item.id;\r\n            return;\r\n        }\r\n        let {id, caption} = fromPicked(item);\r\n        this.value = id;\r\n        this.caption = caption;\r\n    }*/\r\n    onIdChanged(id: any) {\r\n        this.value = id.id;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        this.value = v;\r\n    }\r\n    private buildContent():JSX.Element {\r\n        //let {tuid, input} = this.face;\r\n        return <this.face.input.component \r\n            {...this.face}\r\n            id={this.value}\r\n            //ui={this.face.ui}\r\n            //input={input}\r\n            //entitiesUI={this.formView.props.context} \r\n            onFormValues={()=>this.formView.readValues()}\r\n            onIdChanged={this.onIdChanged} />;\r\n    }\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-static \">\r\n            {this.buildContent()}\r\n        </div>;\r\n    }\r\n}\r\n/*\r\n<button className=\"form-control btn btn-outline-info\"\r\ntype=\"button\"\r\nstyle={{textAlign:'left', paddingLeft:'0.75rem'}}\r\nonClick={this.onClick}>\r\n{this.buildContent()}\r\n</button>\r\n*/","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, PickFace} from '../face';\r\nimport {Control} from './control';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class PickControl extends Control {\r\n    protected face: PickFace;\r\n    @observable private caption: string|JSX.Element;\r\n\r\n    private onClick = async () => {\r\n        let {pick, fromPicked} = this.face;\r\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\r\n        if (item === undefined) {\r\n            this.value = undefined;\r\n            return;\r\n        }\r\n        let {id, caption} = fromPicked(item);\r\n        this.value = id;\r\n        this.caption = caption;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        this.value = v;\r\n    }\r\n    /*\r\n    private controlContent():string|JSX.Element {\r\n        let {content: Content} = this.face;\r\n        if (this.value === undefined) {\r\n            return '请选择';\r\n        }\r\n        \r\n        if (this.caption !== undefined) {\r\n            return this.caption;\r\n        }\r\n        return <Content id={this.value} />;\r\n    }*/\r\n    /*\r\n    private buildContent():string|JSX.Element {\r\n        let {tuid, input} = this.face;\r\n        if (input === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n            return <div onClick={this.onClick}>{this.controlContent()}</div>;\r\n        }\r\n        return <input.component id={this.value} \r\n            tuid={tuid}\r\n            input={input}\r\n            entitiesUI={this.formView.props.context} \r\n            params={this.formView.readValues()}\r\n            onPicked={this.onPicked} />;\r\n    }*/\r\n    renderControl():JSX.Element {\r\n        return <this.view />;\r\n        /*\r\n        let {content:Content} = this.face;\r\n        //if (this.value === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n        //}\r\n        //return <div className=\"form-control-static \">\r\n        //    <Content />\r\n        //</div>;\r\n        */\r\n    }\r\n\r\n    private view = observer(() => {\r\n        let content;\r\n        let {content: Content} = this.face;\r\n        if (this.value === undefined || this.value === null) {\r\n            content = '请选择';\r\n        }\r\n        /*\r\n        else if (this.caption !== undefined) {\r\n            content = this.caption;\r\n        }*/\r\n        else {\r\n            content = <Content id={this.value} />;\r\n        } \r\n        return <div\r\n            className=\"form-control-plaintext px-2 border text-primary rounded cursor-pointer bg-light\"\r\n            onClick={this.onClick}>\r\n            {content}\r\n        </div>\r\n    });\r\n}\r\n","export * from './control';\r\nexport * from './buttonsControl';\r\nexport * from './stringControl';\r\nexport * from './numberControl';\r\n\r\nimport {Field} from '../field';\r\nimport {Face} from '../face';\r\nimport {Control, ControlBase} from './control';\r\nimport {ButtonsControl} from './buttonsControl';\r\nimport {CheckControl} from './checkControl';\r\nimport {RadioControl} from './radioControl';\r\nimport {TextAreaControl} from './textAreaControl';\r\nimport {SelectControl} from './selectControl';\r\nimport {UnknownControl, EmptyControl} from './unknownControl';\r\nimport {StringControl, PasswordControl} from './stringControl';\r\nimport {NumberControl} from './numberControl';\r\n\r\nimport {FormView, FormRow, GroupRow, FieldRow, LabelFormRow} from '../formView';\r\nimport { PickIdControl } from './pickIdControl';\r\nimport { PickTuidControl } from './pickTuidControl';\r\nimport { PickControl } from './pickControl';\r\n\r\nexport type CreateControl = (form:FormView, row: FormRow) => ControlBase\r\n\r\nexport const createControl:CreateControl = (form:FormView, row: LabelFormRow):ControlBase => {\r\n    let label = row.label;\r\n    if ((<GroupRow>row).group !== undefined)\r\n        return createGroupControl(form, label, row as GroupRow);\r\n    if ((<FieldRow>row).field !== undefined)\r\n        return createFieldControl(form, label, row as FieldRow);\r\n    return new EmptyControl(form, row.help);\r\n}\r\n\r\nconst controls:{[type:string]: new (formView:FormView, field:Field, face:Face) => Control} = {\r\n    \"string\": StringControl,\r\n    \"password\": PasswordControl,\r\n    \"number\": NumberControl,\r\n    \"checkbox\": CheckControl,\r\n    \"radiobox\": RadioControl,\r\n    \"select\": SelectControl,\r\n    \"pick-id\": PickIdControl,\r\n    \"pick-tuid\": PickTuidControl,\r\n    \"textarea\": TextAreaControl,\r\n    \"pick\": PickControl,\r\n};\r\nconst defaultFaces:{[type:string]: Face} = {\r\n    \"string\": {type:'string'},\r\n    \"number\": {type:'number'},\r\n    \"int\": {type:'number'},\r\n    \"dec\": {type:'number'},\r\n    \"bool\": {type:'checkbox'},\r\n}\r\nfunction createFieldControl(form:FormView, label:string, fieldRow: FieldRow):Control {\r\n    let {field, face} = fieldRow;\r\n    switch (typeof field) {\r\n        case 'string':\r\n            field = {\r\n                name: (field as any) as string,\r\n                type: 'string',\r\n            }\r\n            break;\r\n        case 'object':\r\n            break;\r\n        default:\r\n            return new UnknownControl(form, field, face);\r\n    }\r\n    let fieldType = field.type || 'string';\r\n    if (face === undefined) {\r\n        face = defaultFaces[fieldType];\r\n        if (face === undefined) return new UnknownControl(form, field, face);\r\n    }\r\n    else if (face.type === undefined) {\r\n        let f = defaultFaces[fieldType];\r\n        face.type = f===undefined? 'string' : f.type;\r\n    }\r\n    let control = controls[face.type || fieldType] || UnknownControl;\r\n    return new control(form, field, face);\r\n}\r\n\r\nfunction createGroupControl(form:FormView, label:string, groupRow: GroupRow):Control {\r\n    return new UnknownControl(form, groupRow as any, undefined);\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field, BoolField} from '../field';\r\nimport {Face, CheckBoxFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class CheckControl extends Control {    \r\n    protected element: HTMLInputElement;\r\n    protected field: BoolField;\r\n    protected face: CheckBoxFace;\r\n    private trueValue: any;\r\n    private falseValue: any;\r\n\r\n    protected init() {\r\n        super.init();\r\n        let {trueValue, falseValue} = this.field;\r\n        if (trueValue === undefined) this.trueValue = 1;\r\n        if (falseValue === undefined) this.falseValue = 0;\r\n    }\r\n\r\n    setProps() {\r\n        super.setProps();\r\n        _.assign(this.props, {\r\n            onChange: this.onChange.bind(this),\r\n        });\r\n    }\r\n\r\n    clearValue() {\r\n        this.element.checked = this.field.defaultValue === this.trueValue;\r\n        this.value = this.getValueFromElement();\r\n    }\r\n\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        if (v === undefined) {\r\n            v = this.field.defaultValue;\r\n        }\r\n        if (v !== undefined) {\r\n            //this.element.checked = v === this.trueValue;\r\n            //this.value = this.getValueFromElement();\r\n        }\r\n    }\r\n\r\n    protected getValueFromElement():any { return this.element.checked? this.trueValue:this.falseValue; }\r\n\r\n    private onChange() {\r\n        this.value = this.getValueFromElement();\r\n    }\r\n\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-static\">\r\n            <label className=\"form-control\">\r\n                <label className=\"custom-control custom-checkbox mb-0\">\r\n                    <input type='checkbox'\r\n                        name={this.field.name}\r\n                        ref={this.props.ref}\r\n                        onChange={this.props.onChange}\r\n                        className=\"custom-control-input\" />\r\n                    <span className=\"custom-control-indicator\" />\r\n                    <span className=\"custom-control-description\">{this.face.label}</span>\r\n                </label>\r\n            </label>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, RadioFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class RadioControl extends Control {\r\n    protected face: RadioFace;\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-static\">\r\n            <div className=\"form-control\">\r\n            {\r\n                this.face.list.map((item, index) => {\r\n                    let t, v;\r\n                    if (typeof item !== 'object') t = v = item;\r\n                    else {\r\n                        t = item.text;\r\n                        v = item.value;\r\n                    }\r\n                    return <label key={index} className=\"custom-control custom-radio w-25\">\r\n                        <input type='radio'\r\n                            name={this.field.name} \r\n                            className=\"custom-control-input\" />\r\n                        <span className=\"custom-control-indicator\"></span>\r\n                        <span className=\"custom-control-description\">{t}</span>\r\n                    </label>;\r\n                })\r\n            }\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, SelectFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class SelectControl extends Control {\r\n    constructor (formView:FormView, field:Field, face:Face) {\r\n        super(formView, field, face);\r\n        this.ref = this.ref.bind(this);\r\n    }\r\n    protected face: SelectFace;\r\n    protected element: HTMLSelectElement;\r\n    protected getValueFromElement():any {\r\n        let {selectedIndex, selectedOptions} = this.element;\r\n        let v:any = selectedOptions[0].value;\r\n        switch (this.field.type) {\r\n            case 'number': v = Number(v); break;\r\n            case 'date': v = new Date(v); break;\r\n            case 'bool': \r\n                if (typeof v === 'string') {\r\n                    v = ((v as string).toLowerCase() === 'true');\r\n                }\r\n                break;\r\n        }\r\n        return v;\r\n    }\r\n    renderControl():JSX.Element {\r\n        let {list} = this.face;\r\n        let def = this.face.default;\r\n        let options: any[] = [];\r\n        if (def === undefined)\r\n            options.push(<option key={-1} value={undefined}>请选择</option>);\r\n        options.push(...list.map((item, index) => {\r\n            let t, v;\r\n            if (typeof item !== 'object') t = v = item;\r\n            else {\r\n                t = item.text;\r\n                v = item.value;\r\n            }\r\n            return <option key={index} value={v}>{t}</option>;\r\n        }));\r\n        return <div className=\"form-control-static\">\r\n            <select name={this.field.name} className=\"form-control\" ref={this.ref}>\r\n                {options}\r\n            </select>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport {CharsControl} from './charsControl';\r\nimport {StringField} from '../field';\r\nimport {TextAreaFace} from '../face';\r\n\r\nexport class TextAreaControl extends CharsControl {\r\n    protected field: StringField;\r\n    protected face: TextAreaFace;\r\n    private el: HTMLTextAreaElement;\r\n    protected setProps() {\r\n        let p = super.setProps();\r\n        let {maxLength} = this.field;\r\n        let {rows} = this.face;\r\n        _.assign(p, {\r\n            maxLength: maxLength,\r\n            rows: rows,\r\n        });\r\n        return p;\r\n    };\r\n    protected renderInput():JSX.Element {\r\n        return <textarea ref={t=>{this.el = t;if (t!==undefined) t.value=''}} className={this.className()} {...this.props} />;\r\n    }\r\n}\r\n","import { Entities, Field, ArrFields, FieldMap } from './entities';\r\nimport { TuidMain, Tuid } from './tuid';\r\n\r\nconst tab = '\\t';\r\nconst ln = '\\n';\r\n\r\nexport abstract class Entity {\r\n    protected entities: Entities;\r\n    protected schema: any;\r\n    private jName: string;\r\n    sys?: boolean;\r\n    readonly name: string;\r\n    readonly typeId: number;\r\n    abstract get typeName(): string;\r\n    get sName():string {return this.jName || this.name}\r\n    fields: Field[];\r\n    arrFields: ArrFields[];\r\n    returns: ArrFields[];\r\n\r\n    constructor(entities:Entities, name:string, typeId:number) {\r\n        this.entities = entities;\r\n        this.name = name;\r\n        this.typeId = typeId;\r\n        this.sys = this.name.indexOf('$') >= 0;\r\n    }\r\n\r\n    public face: any;           // 对应字段的label, placeHolder等等的中文，或者语言的翻译\r\n\r\n    protected get tvApi() {return this.entities.uqApi;}\r\n    async getApiFrom() {return this.entities.uqApi;}\r\n\r\n    private fieldMaps: {[arr:string]: FieldMap} = {};\r\n    fieldMap(arr?:string): FieldMap {\r\n        if (arr === undefined) arr = '$';\r\n        let ret = this.fieldMaps[arr];\r\n        if (ret === undefined) {\r\n            let fields:Field[];\r\n            if (arr === '$') fields = this.fields;\r\n            else if (this.arrFields !== undefined) {\r\n                let arrFields = this.arrFields.find(v => v.name === arr);\r\n                if (arrFields !== undefined) fields = arrFields.fields;\r\n            }\r\n            else if (this.returns !== undefined) {\r\n                let arrFields = this.returns.find(v => v.name === arr);\r\n                if (arrFields !== undefined) fields = arrFields.fields;\r\n            }\r\n            if (fields === undefined) return {};\r\n            ret = {};\r\n            for (let f of fields) ret[f.name] = f;\r\n            this.fieldMaps[arr] = ret;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    public async loadSchema():Promise<void> {\r\n        if (this.schema !== undefined) return;\r\n        let schema = await this.entities.uqApi.schema(this.name);\r\n        this.setSchema(schema);\r\n    }\r\n\r\n    public setSchema(schema:any) {\r\n        if (schema === undefined) return;\r\n        if (this.schema !== undefined) return;\r\n        this.schema = schema;\r\n        let {name, fields, arrs, returns} = schema;\r\n        if (name !== this.name) this.jName = name;\r\n        this.entities.buildFieldTuid(this.fields = fields);\r\n        this.entities.buildArrFieldsTuid(this.arrFields = arrs, fields);\r\n        this.entities.buildArrFieldsTuid(this.returns = returns, fields);\r\n        //this.newMain = this.buildCreater(fields);\r\n        //this.newArr = this.buildArrCreater(arrs);\r\n        //this.newRet = this.buildArrCreater(returns);\r\n    }\r\n\r\n    schemaStringify():string {\r\n        return JSON.stringify(this.schema, (key:string, value:any) => {\r\n            if (key === '_tuid') return undefined;\r\n            return value;\r\n        }, 4);\r\n    }\r\n\r\n    tuidFromField(field:Field):Tuid {\r\n        let {_tuid, tuid} = field;\r\n        if (tuid === undefined) return;\r\n        if (_tuid !== undefined) return _tuid;\r\n        return field._tuid = this.entities.getTuid(tuid, undefined);\r\n    }\r\n\r\n    tuidFromName(fieldName:string, arrName?:string):Tuid {\r\n        if (this.schema === undefined) return;\r\n        let {fields, arrs} = this.schema;\r\n        let entities = this.entities;\r\n        function getTuid(fn:string, fieldArr:Field[]) {\r\n            if (fieldArr === undefined) return;\r\n            let f = fieldArr.find(v => v.name === fn);\r\n            if (f === undefined) return;\r\n            return entities.getTuid(f.tuid, undefined);\r\n        }\r\n        let fn = fieldName.toLowerCase();\r\n        if (arrName === undefined) return getTuid(fn, fields);\r\n        if (arrs === undefined) return;\r\n        let an = arrName.toLowerCase();\r\n        let arr = (arrs as ArrFields[]).find(v => v.name === an);\r\n        if (arr === undefined) return;\r\n        return getTuid(fn, arr.fields);\r\n    }\r\n\r\n    protected buildParams(params:any):any {\r\n        let result = {};\r\n        let fields = this.fields;\r\n        if (fields !== undefined) this.buildFieldsParams(result, fields, params);\r\n        let arrs = this.arrFields; \r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                let {name, fields} = arr;\r\n                let paramsArr:any[] = params[name];\r\n                if (paramsArr === undefined) continue;\r\n                let arrResult = [];\r\n                result[name] = arrResult;\r\n                for (let pa of params) {\r\n                    let rowResult = {};\r\n                    this.buildFieldsParams(rowResult, fields, pa);\r\n                    arrResult.push(rowResult);\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private buildFieldsParams(result:any, fields:Field[], params:any) {\r\n        for (let field of fields) {\r\n            let {name} = field;\r\n            let d = params[name];\r\n            let val:any;\r\n            switch (typeof d) {\r\n                default: val = d; break;\r\n                case 'object':\r\n                    let tuid = field._tuid;\r\n                    if (tuid === undefined) val = d.id;\r\n                    else val = tuid.getIdFromObj(d);\r\n                    break;\r\n            }\r\n            result[name] = val;\r\n        }\r\n    }\r\n\r\n    pack(data:any):string {\r\n        let ret:string[] = [];\r\n        let fields = this.fields;\r\n        if (fields !== undefined) this.packRow(ret, fields, data);\r\n        let arrs = this.arrFields; //schema['arrs'];\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                this.packArr(ret, arr.fields, data[arr.name]);\r\n            }\r\n        }\r\n        return ret.join('');\r\n    }\r\n    \r\n    private escape(row:any, field:Field):any {\r\n        let d = row[field.name];\r\n        switch (typeof d) {\r\n            default: return d;\r\n            case 'object':\r\n                let tuid = field._tuid;\r\n                if (tuid === undefined) return d.id;\r\n                return tuid.getIdFromObj(d);\r\n            case 'string':\r\n                let len = d.length;\r\n                let r = '', p = 0;\r\n                for (let i=0;i<len;i++) {\r\n                    let c = d.charCodeAt(i);\r\n                    switch(c) {\r\n                        case 9: r += d.substring(p, i) + '\\\\t'; p = i+1; break;\r\n                        case 10: r += d.substring(p, i) + '\\\\n'; p = i+1; break;\r\n                    }\r\n                }\r\n                return r + d.substring(p);\r\n            case 'undefined': return '';\r\n        }\r\n    }\r\n    \r\n    private packRow(result:string[], fields:Field[], data:any) {\r\n        let len = fields.length;\r\n        if (len === 0) return;\r\n        let ret = '';\r\n        ret += this.escape(data, fields[0]);\r\n        for (let i=1;i<len;i++) {\r\n            let f = fields[i];\r\n            ret += tab + this.escape(data, f);\r\n        }\r\n        result.push(ret + ln);\r\n    }\r\n    \r\n    private packArr(result:string[], fields:Field[], data:any[]) {\r\n        if (data !== undefined) {\r\n            for (let row of data) {\r\n                this.packRow(result, fields, row);\r\n            }\r\n        }\r\n        result.push(ln);\r\n    }\r\n    \r\n    unpackSheet(data:string):any {\r\n        let ret = {} as any; //new this.newMain();\r\n        //if (schema === undefined || data === undefined) return;\r\n        let fields = this.fields;\r\n        let p = 0;\r\n        if (fields !== undefined) p = this.unpackRow(ret, fields, data, p);\r\n        let arrs = this.arrFields; //schema['arrs'];\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                p = this.unpackArr(ret, arr, data, p);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    \r\n    unpackReturns(data:string):any {\r\n        let ret = {} as any;\r\n        //if (schema === undefined || data === undefined) return;\r\n        //let fields = schema.fields;\r\n        let p = 0;\r\n        //if (fields !== undefined) p = unpackRow(ret, schema.fields, data, p);\r\n        let arrs = this.returns; //schema['returns'];\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                //let creater = this.newRet[arr.name];\r\n                p = this.unpackArr(ret, arr, data, p);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    \r\n    private unpackRow(ret:any, fields:Field[], data:string, p:number):number {\r\n        let ch0 = 0, ch = 0, c = p, i = 0, len = data.length, fLen = fields.length;\r\n        for (;p<len;p++) {\r\n            ch0 = ch;\r\n            ch = data.charCodeAt(p);\r\n            if (ch === 9) {\r\n                let f = fields[i];\r\n                if (ch0 !== 8) {\r\n                    if (p>c) {\r\n                        let v = data.substring(c, p);\r\n                        ret[f.name] = this.to(ret, v, f);\r\n                    }\r\n                }\r\n                else {\r\n                    ret[f.name] = null;\r\n                }\r\n                c = p+1;\r\n                ++i;\r\n                if (i>=fLen) break;\r\n            }\r\n            else if (ch === 10) {\r\n                let f = fields[i];\r\n                if (ch0 !== 8) {\r\n                    if (p>c) {\r\n                        let v = data.substring(c, p);\r\n                        ret[f.name] = this.to(ret, v, f);\r\n                    }\r\n                }\r\n                else {\r\n                    ret[f.name] = null;\r\n                }\r\n                ++p;\r\n                ++i;\r\n                break;\r\n            }\r\n        }\r\n        return p;\r\n    }\r\n\r\n    private to(ret:any, v:string, f:Field):any {\r\n        switch (f.type) {\r\n            default: return v;\r\n            case 'datetime':\r\n            case 'date':\r\n            case 'time':\r\n                let date = new Date(Number(v));\r\n                return date;\r\n            case 'tinyint':\r\n            case 'smallint':\r\n            case 'int':\r\n            case 'dec': return Number(v);\r\n            case 'bigint':\r\n                let id = Number(v);\r\n                let {_tuid} = f;\r\n                if (_tuid === undefined) return id;\r\n                _tuid.useId(id, true);\r\n                return _tuid.boxId(id);\r\n        }\r\n    }\r\n\r\n    private unpackArr(ret:any, arr:ArrFields, data:string, p:number):number {\r\n        let vals:any[] = [], len = data.length;\r\n        let {name, fields} = arr;\r\n        while (p<len) {\r\n            let ch = data.charCodeAt(p);\r\n            if (ch === 10) {\r\n                ++p;\r\n                break;\r\n            }\r\n            let val = {} as any; //new creater();\r\n            vals.push(val);\r\n            p = this.unpackRow(val, fields, data, p);\r\n        }\r\n        ret[name] = vals;\r\n        return p;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport _ from 'lodash';\r\nimport { Entity } from './entity';\r\nimport { Entities, Field, ArrFields } from './entities';\r\nimport { isNumber } from 'util';\r\nimport { CUq, CTuidMain, CTuidEdit, CTuidInfo, CTuidSelect } from '../controllers';\r\n\r\nexport class BoxId {\r\n    id: number;\r\n    obj?: any;\r\n    content: (templet?:(values?:any, x?:any)=>JSX.Element, x?:any)=>JSX.Element;\r\n    valueFromFieldName: (fieldName:string)=>BoxId|any;\r\n    _$com?: any;\r\n    _$tuid?: Tuid;\r\n    getObj: ()=>any;\r\n}\r\n\r\nconst maxCacheSize = 1000;\r\nexport abstract class Tuid extends Entity {\r\n    private BoxId: ()=>void;\r\n    get typeName(): string { return 'tuid';}\r\n    private queue: number[] = [];               // 每次使用，都排到队头\r\n    private waitingIds: number[] = [];          // 等待loading的\r\n    private cache = observable.map({}, {deep: false});    // 已经缓冲的\r\n    idName: string;\r\n    owner: TuidMain;                    // 用这个值来区分是不是TuidArr\r\n    unique: string[];\r\n    schemaFrom: {owner:string; uq:string};\r\n\r\n    constructor(entities:Entities, name:string, typeId:number) {\r\n        super(entities, name, typeId);\r\n        this.buildIdBoxer();\r\n    }\r\n\r\n    abstract get Main();\r\n\r\n    private buildIdBoxer() {\r\n        this.BoxId = function():void {};\r\n        let prototype = this.BoxId.prototype;\r\n        Object.defineProperty(prototype, '_$tuid', {\r\n            value: this,\r\n            writable: false,\r\n            enumerable: false,\r\n        })\r\n        Object.defineProperty(prototype, 'obj', {\r\n            enumerable: false,\r\n            get: function() {\r\n                if (this.id === undefined || this.id<=0) return undefined;\r\n                return this._$tuid.valueFromId(this.id);\r\n            }\r\n        })\r\n        prototype.valueFromFieldName = function(fieldName:string):BoxId|any {\r\n            let t:Tuid = this._$tuid;\r\n            return t.valueFromFieldName(fieldName, this.obj);\r\n        }\r\n        prototype.getObj = function():any {\r\n            if (this._$tuid !== undefined) {\r\n                return this._$tuid.getCacheValue(this.id);\r\n            }\r\n        }\r\n        prototype.toJSON = function() {return this.id}\r\n    }\r\n    boxId(id:number):BoxId {\r\n        this.useId(id);\r\n        let ret:BoxId = new this.BoxId();\r\n        ret.id = id;\r\n        return ret;\r\n    }\r\n    getTuidContent() {\r\n        return this.entities.cUq.getTuidContent(this);\r\n    }\r\n    getIdFromObj(item:any):number {\r\n        return item[this.idName];\r\n    }\r\n\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        let {id, unique} = schema;\r\n        this.idName = id;\r\n        this.unique = unique;\r\n        this.schemaFrom = this.schema.from;\r\n    }\r\n\r\n    private moveToHead(id:number) {\r\n        let index = this.queue.findIndex(v => v === id);\r\n        this.queue.splice(index, 1);\r\n        this.queue.push(id);\r\n    }\r\n\r\n    valueFromId(id:number|BoxId):any {\r\n        let _id:number;\r\n        let tId = typeof id;\r\n        switch (typeof id) {\r\n            case 'object': _id = (id as BoxId).id; break;\r\n            case 'number': _id = id as number; break;\r\n            default: return;\r\n        }\r\n        return this.getCacheValue(_id);\r\n    }\r\n    getCacheValue(id:number) {\r\n        let v = this.cache.get(id);\r\n        if (this.owner !== undefined && typeof v === 'object') {\r\n            v.$owner = this.owner.boxId(v.owner); // this.owner.valueFromId(v.owner);\r\n        }\r\n        return v;\r\n    }\r\n    valueFromFieldName(fieldName:string, obj:any):BoxId|any {\r\n        if (obj === undefined) return;\r\n        let f = this.fields.find(v => v.name === fieldName);\r\n        if (f === undefined) return;\r\n        let v = obj[fieldName];\r\n        let {_tuid} = f;\r\n        if (_tuid === undefined) return v;\r\n        return _tuid.valueFromId(v);\r\n    }\r\n    resetCache(id:number) {\r\n        this.cache.delete(id);\r\n        let index = this.queue.findIndex(v => v === id);\r\n        this.queue.splice(index, 1);\r\n        this.useId(id);\r\n    }\r\n    useId(id:number, defer?:boolean) {\r\n        if (id === undefined || id === 0) return;\r\n        if (isNumber(id) === false) return;\r\n        if (this.cache.has(id) === true) {\r\n            this.moveToHead(id);\r\n            return;\r\n        }\r\n        this.entities.cacheTuids(defer===true?70:20);\r\n        //let idVal = this.createID(id);\r\n        this.cache.set(id, id);\r\n        if (this.waitingIds.findIndex(v => v === id) >= 0) {\r\n            this.moveToHead(id);\r\n            return;\r\n        }\r\n\r\n        if (this.queue.length >= maxCacheSize) {\r\n            // 缓冲已满，先去掉最不常用的\r\n            let r = this.queue.shift();\r\n            if (r === id) {\r\n                // 如果移除的，正好是现在用的，则插入\r\n                this.queue.push(r);\r\n                return;\r\n            }\r\n\r\n            //let rKey = String(r);\r\n            if (this.cache.has(r) === true) {\r\n                // 如果移除r已经缓存\r\n                this.cache.delete(r);\r\n            }\r\n            else {\r\n                // 如果移除r还没有缓存\r\n                let index = this.waitingIds.findIndex(v => v === r);\r\n                this.waitingIds.splice(index, 1);\r\n            }\r\n        }\r\n        this.waitingIds.push(id);\r\n        this.queue.push(id);\r\n        return;\r\n    }\r\n    async proxied(name:string, id:number):Promise<any> {\r\n        let proxyTuid = this.entities.getTuid(name, undefined);\r\n        proxyTuid.useId(id);\r\n        let proxied = await this.tvApi.proxied(this.name, name, id);\r\n        this.cacheValue(proxied);\r\n        return proxied;\r\n    }\r\n    cacheValue(val:any):boolean {\r\n        if (val === undefined) return false;\r\n        let id = this.getIdFromObj(val);\r\n        if (id === undefined) return false;\r\n        let index = this.waitingIds.findIndex(v => v === id);\r\n        if (index>=0) this.waitingIds.splice(index, 1);\r\n        //let cacheVal = this.createID(id, val);\r\n        this.cache.set(id, val);\r\n        // 下面的代码应该是cache proxy id, 需要的时候再写吧\r\n        /*\r\n        let {tuids, fields} = this.schema;\r\n        if (tuids !== undefined && fields !== undefined) {\r\n            for (let f of fields) {\r\n                let {name, tuid} = f;\r\n                if (tuid === undefined) continue;\r\n                let t = this.entities.tuid(tuid);\r\n                if (t === undefined) continue;\r\n                t.useId(val[name]);\r\n            }\r\n        }*/\r\n        return true;\r\n    }\r\n    protected afterCacheId(tuidValue:any) {\r\n        for (let f of this.fields) {\r\n            let {_tuid} = f;\r\n            if (_tuid === undefined) continue;\r\n            _tuid.useId(tuidValue[f.name]);\r\n        }\r\n    }\r\n    async cacheIds():Promise<void> {\r\n        if (this.waitingIds.length === 0) return;\r\n        let name:string, arr:string;\r\n        if (this.owner === undefined) {\r\n            name = this.name;\r\n        }\r\n        else {\r\n            name = this.owner.name;\r\n            arr = this.name;\r\n        }\r\n        let api = await this.getApiFrom();\r\n        let tuids = await api.tuidIds(name, arr, this.waitingIds);\r\n        for (let tuidValue of tuids) {\r\n            if (this.cacheValue(tuidValue) === false) continue;\r\n            this.cacheTuidFieldValues(tuidValue);\r\n            this.afterCacheId(tuidValue);\r\n        }\r\n        await this.cacheDivIds();\r\n    }\r\n    protected async cacheDivIds():Promise<void> {\r\n    }\r\n    async load(id:number):Promise<any> {\r\n        if (id === undefined || id === 0) return;\r\n        let api = await this.getApiFrom();\r\n        let values = await api.tuidGet(this.name, id);\r\n        if (values === undefined) return;\r\n        values._$tuid = this;\r\n        this.cacheValue(values);\r\n        this.cacheTuidFieldValues(values);\r\n        return values;\r\n    }\r\n    protected getDiv(divName:string):TuidDiv {return;}\r\n    private cacheTuidFieldValues(values:any) {\r\n        let {fields, arrs} = this.schema;\r\n        this.cacheFieldsInValue(values, fields);\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs as ArrFields[]) {\r\n                let {name, fields} = arr;\r\n                let arrValues = values[name];\r\n                if (arrValues === undefined) continue;\r\n                let tuidDiv = this.getDiv(name);\r\n                for (let row of arrValues) {\r\n                    row._$tuid = tuidDiv;\r\n                    row.$owner = this.boxId(row.owner);\r\n                    tuidDiv.cacheValue(row);\r\n                    this.cacheFieldsInValue(row, fields);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    private cacheFieldsInValue(values:any, fields:Field[]) {\r\n        for (let f of fields as Field[]) {\r\n            let {name, _tuid} = f;\r\n            if (_tuid === undefined) continue;\r\n            let id = values[name];\r\n            //_tuid.useId(id);\r\n            values[name] = _tuid.boxId(id);\r\n        }\r\n    }\r\n    async save(id:number, props:any) {\r\n        let params = _.clone(props);\r\n        params[\"$id\"] = id;\r\n        let ret = await this.tvApi.tuidSave(this.name, params);\r\n        let {id:retId, inId} = ret;\r\n        if (retId === undefined) {\r\n            params.id = id;\r\n            this.cacheValue(params);\r\n        }\r\n        else if (retId > 0) {\r\n            params.id = retId;\r\n            this.cacheValue(params);\r\n        }\r\n        return ret;\r\n    }\r\n    async search(key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        let ret:any[] = await this.searchArr(undefined, key, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    async searchArr(owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        let {fields} = this.schema;\r\n        let name:string, arr:string;\r\n        if (this.owner !== undefined) {\r\n            name = this.owner.name;\r\n            arr = this.name;\r\n        }\r\n        else {\r\n            name = this.name;\r\n            arr = undefined;\r\n        }\r\n        let api = await this.getApiFrom();\r\n        let ret = await api.tuidSearch(name, arr, owner, key, pageStart, pageSize);\r\n        for (let row of ret) {\r\n            this.cacheFieldsInValue(row, fields);\r\n            if (this.owner !== undefined) row.$owner = this.owner.boxId(row.owner);\r\n        }\r\n        return ret;\r\n    }\r\n    async loadArr(arr:string, owner:number, id:number):Promise<any> {\r\n        if (id === undefined || id === 0) return;\r\n        let api = await this.getApiFrom();\r\n        return await api.tuidArrGet(this.name, arr, owner, id);\r\n    }\r\n    /*\r\n    async loadArrAll(owner:number):Promise<any[]> {\r\n        return this.all = await this.tvApi.tuidGetAll(this.name);\r\n    }*/\r\n    async saveArr(arr:string, owner:number, id:number, props:any) {\r\n        let params = _.clone(props);\r\n        params[\"$id\"] = id;\r\n        return await this.tvApi.tuidArrSave(this.name, arr, owner, params);\r\n    }\r\n    async posArr(arr:string, owner:number, id:number, order:number) {\r\n        return await this.tvApi.tuidArrPos(this.name, arr, owner, id, order);\r\n    }\r\n    \r\n    // cache放到Tuid里面之后，这个函数不再需要公开调用了\r\n    //private async ids(idArr:number[]) {\r\n    //    return await this.tvApi.tuidIds(this.name, idArr);\r\n    //}\r\n    async showInfo(id:number) {\r\n        await this.entities.cUq.showTuid(this, id);\r\n    }\r\n}\r\n\r\nexport class TuidMain extends Tuid {\r\n    get Main() {return this}\r\n    get uqApi() {return this.entities.uqApi};\r\n\r\n    divs: {[name:string]: TuidDiv};\r\n    proxies: {[name:string]: TuidMain};\r\n\r\n    public setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        let {arrs} = schema;\r\n        if (arrs !== undefined) {\r\n            this.divs = {};\r\n            for (let arr of arrs) {\r\n                let {name} = arr;\r\n                let tuidDiv = new TuidDiv(this.entities, name, this.typeId);\r\n                tuidDiv.owner = this;\r\n                this.divs[name] = tuidDiv;\r\n                tuidDiv.setSchema(arr);\r\n            }\r\n        }\r\n    }\r\n    protected getDiv(divName:string):TuidDiv {return this.divs[divName];}\r\n    /* 努力回避async里面的super调用，edge不兼容\r\n    async cacheIds():Promise<void> {\r\n        await super.cacheIds();\r\n        if (this.divs === undefined) return;\r\n        for (let i in this.divs) {\r\n            await this.divs[i].cacheIds();\r\n        }\r\n    }\r\n    */\r\n    protected async cacheDivIds():Promise<void> {\r\n        if (this.divs === undefined) return;\r\n        for (let i in this.divs) {\r\n            await this.divs[i].cacheIds();\r\n        }\r\n    }\r\n\r\n    async cUqFrom(): Promise<CUq> {\r\n        if (this.schemaFrom === undefined) return this.entities.cUq;\r\n        let {owner, uq: uq} = this.schemaFrom;\r\n        let cUq = await this.entities.cUq\r\n        let cApp = cUq.cApp;\r\n        if (cApp === undefined) return cUq;\r\n        let cUqFrm = await cApp.getImportUq(owner, uq);\r\n        if (cUqFrm === undefined) {\r\n            console.error(`${owner}/${uq} 不存在`);\r\n            debugger;\r\n            return cUq;\r\n        }\r\n        let retErrors = await cUqFrm.loadSchema();\r\n        if (retErrors !== undefined) {\r\n            console.error('cUq.loadSchema: ' + retErrors);\r\n            debugger;\r\n            return cUq;\r\n        }\r\n        return cUqFrm;\r\n    }\r\n\r\n    async getApiFrom() {\r\n        let from = await this.from();\r\n        if (from !== undefined) {\r\n            return from.entities.uqApi;\r\n        }\r\n        return this.entities.uqApi;\r\n    }\r\n\r\n    async from(): Promise<TuidMain> {\r\n        let cUq = await this.cUqFrom();\r\n        return cUq.tuid(this.name);\r\n    }\r\n\r\n    async cFrom(): Promise<CTuidMain> {\r\n        let cUq = await this.cUqFrom();\r\n        return cUq.cTuidMainFromName(this.name);\r\n    }\r\n\r\n    async cEditFrom(): Promise<CTuidEdit> {\r\n        let cUq = await this.cUqFrom();\r\n        return cUq.cTuidEditFromName(this.name);\r\n    }\r\n\r\n    async cInfoFrom(): Promise<CTuidInfo> {\r\n        let cUq = await this.cUqFrom();\r\n        return cUq.cTuidInfoFromName(this.name);\r\n    }\r\n\r\n    async cSelectFrom(): Promise<CTuidSelect> {\r\n        let cUq = await this.cUqFrom();\r\n        if (cUq === undefined) return;\r\n        return cUq.cTuidSelectFromName(this.name);\r\n    }\r\n\r\n    protected afterCacheId(tuidValue:any) {\r\n        super.afterCacheId(tuidValue);\r\n        if (this.proxies === undefined) return;\r\n        let {type, $proxy} = tuidValue;\r\n        let pTuid = this.proxies[type];\r\n        pTuid.useId($proxy);\r\n    }\r\n}\r\n\r\nexport class TuidDiv extends Tuid {\r\n    get Main() {return this.owner}\r\n\r\n    async getApiFrom() {\r\n        return await this.owner.getApiFrom();\r\n    }\r\n}\r\n","import {Entity} from './entity';\r\n\r\nexport class Action extends Entity {\r\n    get typeName(): string { return 'action';}\r\n    async submit(data:object) {\r\n        await this.loadSchema();\r\n        let text = this.pack(data);\r\n        return await this.tvApi.action(this.name, {data:text});\r\n    }\r\n}\r\n\r\n","import {observable, IObservableArray} from 'mobx';\r\nimport {Entity} from './entity';\r\nimport { PageItems } from 'tonva-tools';\r\n\r\nexport interface SheetState {\r\n    name: string;\r\n    actions: SheetAction[];\r\n}\r\n\r\nexport interface SheetAction {\r\n    name: string;\r\n}\r\n\r\nexport interface StateCount {\r\n    state: string;\r\n    count: number;\r\n}\r\n\r\nexport class Sheet extends Entity {\r\n    get typeName(): string { return 'sheet';}\r\n    states: SheetState[];\r\n\r\n    /*\r\n    setStates(states: SheetState[]) {\r\n        for (let state of states) {\r\n            this.setStateAccess(this.states.find(s=>s.name==state.name), state);\r\n        }\r\n    }*/\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        this.states = schema.states;\r\n    }\r\n    build(obj:any) {\r\n        this.states = [];\r\n        for (let op of obj.ops) {\r\n            this.states.push({name: op, actions:undefined});\r\n        }\r\n        /*\r\n        for (let p in obj) {\r\n            switch(p) {\r\n                case '#':\r\n                case '$': continue;\r\n                default: this.states.push(this.createSheetState(p, obj[p])); break;\r\n            }\r\n        }*/\r\n    }\r\n    private createSheetState(name:string, obj:object):SheetState {\r\n        let ret:SheetState = {name:name, actions:[]};\r\n        let actions = ret.actions;\r\n        for (let p in obj) {\r\n            let action:SheetAction = {name: p};\r\n            actions.push(action);\r\n        }\r\n        return ret;\r\n    }\r\n    /*\r\n    private setStateAccess(s:SheetState, s1:SheetState) {\r\n        if (s === undefined) return;\r\n        for (let action of s1.actions) {\r\n            let acn = action.name;\r\n            let ac = s.actions.find(a=>a.name === acn);\r\n            if (ac === undefined) continue;\r\n            s.actions.push(action);\r\n        }\r\n    }*/\r\n    async save(discription:string, data:any):Promise<any> {\r\n        await this.loadSchema();\r\n        let {appId} = this.entities;\r\n        let text = this.pack(data);\r\n\r\n        let ret = await this.tvApi.sheetSave(this.name, {app: appId, discription: discription, data:text});\r\n        return ret;\r\n        /*\r\n        let {id, state} = ret;\r\n        if (id > 0) this.changeStateCount(state, 1);\r\n        return ret;\r\n        */\r\n    }\r\n    async action(id:number, flow:number, state:string, action:string) {\r\n        await this.loadSchema();\r\n        return await this.tvApi.sheetAction(this.name, {id:id, flow:flow, state:state, action:action});\r\n    }\r\n    private async unpack(data:any):Promise<any> {\r\n        //if (this.schema === undefined) await this.loadSchema();\r\n        let ret = data[0];\r\n        let brief = ret[0];\r\n        let sheetData = this.unpackSheet(brief.data);\r\n        let flows = data[1];\r\n        return {\r\n            brief: brief,\r\n            data: sheetData,\r\n            flows: flows,\r\n        }\r\n    }\r\n    async getSheet(id:number):Promise<any> {\r\n        await this.loadSchema();\r\n        let ret = await this.tvApi.getSheet(this.name, id);\r\n        if (ret[0].length === 0) return await this.getArchive(id);\r\n        return await this.unpack(ret);\r\n    }\r\n    async getArchive(id:number):Promise<any> {\r\n        await this.loadSchema();\r\n        let ret = await this.tvApi.sheetArchive(this.name, id)\r\n        return await this.unpack(ret);\r\n    }\r\n\r\n    async getArchives(pageStart:number, pageSize:number) {\r\n        await this.loadSchema();\r\n        let ret = await this.tvApi.sheetArchives(this.name, {pageStart:pageStart, pageSize:pageSize});\r\n        return ret;\r\n    }\r\n\r\n    async getStateSheets(state:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        await this.loadSchema();\r\n        let ret = await this.tvApi.stateSheets(this.name, {state:state, pageStart:pageStart, pageSize:pageSize});\r\n        return ret;\r\n    }\r\n    createPageStateItems<T>(): PageStateItems<T> {return new PageStateItems<T>(this);}\r\n\r\n    async stateSheetCount():Promise<StateCount[]> {\r\n        await this.loadSchema();\r\n        let ret:StateCount[] = await this.tvApi.stateSheetCount(this.name);\r\n        return this.states.map(s => {\r\n            let n = s.name, count = 0;\r\n            let r = ret.find(v => v.state === n);\r\n            if (r !== undefined) count = r.count;\r\n            return {state: n, count: count} \r\n        });\r\n    }\r\n}\r\n\r\nexport class PageStateItems<T> extends PageItems<T> {\r\n    private sheet: Sheet;\r\n    constructor(sheet: Sheet) {\r\n        super(true);\r\n        this.sheet = sheet;\r\n        this.pageSize = 10;\r\n    }\r\n    protected async load(param:any, pageStart:any, pageSize:number):Promise<any[]> {\r\n        let ret = await this.sheet.getStateSheets(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:any) {\r\n        this.pageStart = item === undefined? 0 : item.id;\r\n    }\r\n}\r\n","import {observable, IObservableArray} from 'mobx';\r\nimport {Field, ArrFields} from './entities';\r\nimport {Entity} from './entity';\r\n\r\nexport type QueryPageApi = (name:string, pageStart:any, pageSize:number, params:any) => Promise<string>;\r\nexport class Query extends Entity {\r\n    get typeName(): string { return 'query';}\r\n    private pageStart: any;\r\n    private pageSize:number;\r\n    private params:any;\r\n    private more: boolean;\r\n    private startField: Field;\r\n    @observable list:IObservableArray; // = observable.array([], {deep: false});\r\n    returns: ArrFields[];\r\n    isPaged: boolean;\r\n\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        let {returns} = schema;\r\n        this.returns = returns;\r\n        this.isPaged = (returns as any[]).find(v => v.name === '$page') !== undefined;\r\n    }\r\n\r\n    resetPage(size:number, params:any) {\r\n        this.pageStart = undefined;\r\n        this.pageSize = size;\r\n        this.params = params;\r\n        this.more = false;\r\n        this.list = undefined;\r\n    }\r\n    get hasMore() {return this.more;}\r\n    async loadPage():Promise<void> {\r\n        if (this.pageSize === undefined) {\r\n            throw 'call resetPage(size:number, params:any) first';\r\n        }\r\n        let pageStart:any;\r\n        if (this.pageStart !== undefined) {\r\n            switch (this.startField.type) {\r\n                default: pageStart = this.pageStart; break;\r\n                case 'date':\r\n                case 'time':\r\n                case 'datetime': pageStart = (this.pageStart as Date).getTime(); break;\r\n            }\r\n        }\r\n        let page = await this.page(this.params, pageStart, this.pageSize+1);\r\n        /*\r\n        await this.loadSchema();\r\n        let res = await this.tvApi.page(this.name, pageStart, this.pageSize+1, this.params);\r\n        let data = await this.unpackReturns(res);\r\n        let page = data['$page'] as any[];\r\n        */\r\n        this.list = observable.array([], {deep: false});\r\n        if (page !== undefined) {\r\n            if (page.length > this.pageSize) {\r\n                this.more = true;\r\n                page.pop();\r\n                let ret = this.returns.find(r => r.name === '$page');\r\n                this.startField = ret.fields[0];\r\n                this.pageStart = page[page.length-1][this.startField.name];\r\n            }\r\n            else {\r\n                this.more = false;\r\n            }\r\n            this.list.push(...page);\r\n        }\r\n        //this.loaded = true;\r\n    }\r\n\r\n    async page(params:any, pageStart:any, pageSize:number):Promise<any[]> {\r\n        await this.loadSchema();\r\n        let res = await this.tvApi.page(this.name, pageStart, pageSize+1, this.buildParams(params));\r\n        let data = await this.unpackReturns(res);\r\n        return data.$page;// as any[];\r\n    }\r\n    async query(params:any):Promise<any> {\r\n        await this.loadSchema();\r\n        let res = await this.tvApi.query(this.name, this.buildParams(params));\r\n        let data = await this.unpackReturns(res);\r\n        return data;\r\n    }\r\n    async table(params:any): Promise<any[]> {\r\n        let ret = await this.query(params);\r\n        for (let i in ret) {\r\n            return ret[i];\r\n        }\r\n    }\r\n    async obj(params:any):Promise<any> {\r\n        let ret = await this.table(params);\r\n        if (ret.length > 0) return ret[0];\r\n    }\r\n    async scalar(params:any):Promise<any> {\r\n        let ret = await this.obj(params);\r\n        for (let i in ret) return ret[i];\r\n    }\r\n}\r\n","import {Query} from './query';\r\n\r\nexport class Book extends Query {\r\n    get typeName(): string { return 'book';}\r\n    protected queryApiName = 'book';\r\n}\r\n","import {Query} from './query';\r\n\r\nexport class History extends Query {\r\n    get typeName(): string { return 'history';}\r\n    protected queryApiName = 'history';\r\n}\r\n","import { Entity } from './entity';\r\nimport { Action } from './action';\r\nimport { Query } from './query';\r\nimport { Field } from './entities';\r\n\r\ninterface MapActions {\r\n    add: Action;\r\n    del: Action;\r\n}\r\ninterface MapQueries {\r\n    all: Query;\r\n    page: Query;\r\n    query: Query;\r\n}\r\n\r\nexport class Map extends Entity {\r\n    get typeName(): string { return 'map';}\r\n    keys: Field[];\r\n    actions: MapActions = {} as any;\r\n    queries: MapQueries = {} as any;\r\n    schemaFrom: {owner:string; uq:string};\r\n\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        this.schemaFrom = this.schema.from;\r\n        let {actions, queries, keys} = schema;\r\n        this.entities.buildFieldTuid(this.keys = keys);\r\n        //let t = this.schemaStringify();\r\n        for (let i in actions) {\r\n            let schema = actions[i];\r\n            let {name} = schema;\r\n            let action = this.entities.newAction(name, undefined);\r\n            action.setSchema(schema);\r\n            this.actions[i] = action;\r\n        }\r\n        for (let i in queries) {\r\n            let schema = queries[i];\r\n            let {name} = schema;\r\n            let query = this.entities.newQuery(name, undefined);\r\n            query.setSchema(schema);\r\n            this.queries[i] = query;\r\n        }\r\n    }\r\n\r\n    async add(param:any) {\r\n        await this.loadSchema();\r\n        return await this.actions.add.submit(param);\r\n    }\r\n\r\n    async del(param:any) {\r\n        await this.loadSchema();\r\n        return await this.actions.del.submit(param);\r\n    }\r\n\r\n    async all() {\r\n        await this.loadSchema();\r\n        return await this.queries.all.query({});\r\n    }\r\n\r\n    async page(param:any, pageStart:any, pageSize: number) {\r\n        await this.loadSchema();\r\n        return await this.queries.page.page(param, pageStart, pageSize);\r\n    }\r\n\r\n    async query(param:any) {\r\n        await this.loadSchema();\r\n        return await this.queries.query.query(param);\r\n    }\r\n    async table(params:any): Promise<any[]> {\r\n        let ret = await this.query(params);\r\n        for (let i in ret) {\r\n            return ret[i];\r\n        }\r\n    }\r\n    async obj(params:any):Promise<any> {\r\n        let ret = await this.table(params);\r\n        if (ret.length > 0) return ret[0];\r\n    }\r\n    async scalar(params:any):Promise<any> {\r\n        let ret = await this.obj(params);\r\n        for (let i in ret) return ret[i];\r\n    }\r\n}\r\n","import {Query} from './query';\r\n\r\nexport class Pending extends Query {\r\n    get typeName(): string { return 'pending';}\r\n    protected queryApiName = 'pending';\r\n}\r\n","import {TuidMain, Tuid} from './tuid';\r\nimport {Action} from './action';\r\nimport {Sheet, SheetState, SheetAction} from './sheet';\r\nimport {Query} from './query';\r\nimport {Book} from './book';\r\nimport {History} from './history';\r\nimport { UqApi } from 'tonva-tools';\r\nimport { Map } from './map';\r\nimport { Pending } from './pending';\r\nimport { CUq } from '../controllers';\r\n\r\nexport type FieldType = 'tinyint' | 'smallint' | 'int' | 'bigint' | 'dec' | 'char' | 'text' \r\n    | 'datetime' | 'date' | 'time';\r\n\r\nexport function fieldDefaultValue(type:FieldType) {\r\n    switch (type) {\r\n        case 'tinyint':\r\n        case 'smallint':\r\n        case 'int':\r\n        case 'bigint':\r\n        case 'dec':\r\n            return 0;\r\n        case 'char':\r\n        case 'text': \r\n            return '';\r\n        case 'datetime':\r\n        case 'date':\r\n            return '2000-1-1';\r\n        case 'time':\r\n            return '0:00';\r\n    }\r\n}\r\n\r\nexport interface Field {\r\n    name: string;\r\n    type: FieldType;\r\n    tuid?: string;\r\n    arr?: string;\r\n    url?: string;\r\n    null?: boolean;\r\n    size?: number;\r\n    owner?: string;\r\n    _ownerField: Field;\r\n    _tuid: Tuid;\r\n}\r\nexport interface ArrFields {\r\n    name: string;\r\n    fields: Field[];\r\n    id?: string;\r\n    order?: string;\r\n}\r\nexport interface FieldMap {\r\n    [name:string]: Field;\r\n}\r\n\r\nexport class Entities {\r\n    private tuids: {[name:string]: TuidMain} = {};\r\n    private actions: {[name:string]: Action} = {};\r\n    private sheets: {[name:string]: Sheet} = {};\r\n    private queries: {[name:string]: Query} = {};\r\n    private books: {[name:string]: Book} = {};\r\n    private maps: {[name:string]: Map} = {};\r\n    private histories: {[name:string]: History} = {};\r\n    private pendings: {[name:string]: Pending} = {};\r\n    private cacheTimer: any;\r\n    cUq: CUq;\r\n    uqApi: UqApi;\r\n    appId: number;\r\n    uqId: number;\r\n\r\n    constructor(cUq: CUq, uqApi:UqApi, appId: number) {\r\n        this.cUq = cUq;\r\n        this.uqApi = uqApi;\r\n        this.appId = appId;\r\n    }\r\n\r\n    tuid(name:string):TuidMain {return this.tuids[name.toLowerCase()]}\r\n    action(name:string):Action {return this.actions[name.toLowerCase()]}\r\n    sheet(name:string):Sheet {return this.sheets[name.toLowerCase()]}\r\n    query(name:string):Query {return this.queries[name.toLowerCase()]}\r\n    book(name:string):Book {return this.books[name.toLowerCase()]}\r\n    map(name:string):Map {return this.maps[name.toLowerCase()]}\r\n    history(name:string):History {return this.histories[name.toLowerCase()]}\r\n    pending(name:string):Pending {return this.pendings[name.toLowerCase()]}\r\n\r\n    sheetFromTypeId(typeId:number):Sheet {\r\n        for (let i in this.sheets) {\r\n            let sheet = this.sheets[i];\r\n            if (sheet.typeId === typeId) return sheet;\r\n        }\r\n    }\r\n\r\n    tuidArr: TuidMain[] = [];\r\n    actionArr: Action[] = [];\r\n    sheetArr: Sheet[] = [];\r\n    queryArr: Query[] = [];\r\n    bookArr: Book[] = [];\r\n    mapArr: Map[] = [];\r\n    historyArr: History[] = [];\r\n    pendingArr: Pending[] = [];\r\n\r\n    async loadAccess() {\r\n        let accesses = await this.uqApi.loadAccess();\r\n        if (accesses === undefined) return;\r\n        this.buildEntities(accesses);\r\n    }\r\n\r\n    async loadEntities() {\r\n        let accesses = await this.uqApi.loadEntities();\r\n        this.buildEntities(accesses);\r\n    }\r\n\r\n    private buildEntities(entities:any) {\r\n        if (entities === undefined) {\r\n            debugger;\r\n        }\r\n        let {access, tuids} = entities;\r\n        this.buildTuids(tuids);\r\n        this.buildAccess(access);\r\n    }\r\n\r\n    getTuid(name:string, div?:string, tuidUrl?:string): Tuid {\r\n        let tuid = this.tuids[name];\r\n        if (tuid === undefined) return;\r\n        if (div === undefined) return tuid;\r\n        return tuid.divs[div];\r\n    }\r\n\r\n    cacheTuids(defer:number) {\r\n        this.clearCacheTimer();\r\n        this.cacheTimer = setTimeout(this.loadIds, defer);\r\n    }\r\n    private clearCacheTimer() {\r\n        if (this.cacheTimer === undefined) return;\r\n        clearTimeout(this.cacheTimer);\r\n        this.cacheTimer = undefined;\r\n    }\r\n    private loadIds = () => {\r\n        this.clearCacheTimer();\r\n        for (let i in this.tuids) {\r\n            let tuid = this.tuids[i];\r\n            tuid.cacheIds();\r\n        }\r\n    }\r\n\r\n    private buildTuids(tuids:any) {\r\n        let proxyColl = {} as any;\r\n        for (let i in tuids) {\r\n            let schema = tuids[i];\r\n            let {name, typeId, proxies} = schema;\r\n            let tuid = this.newTuid(i, typeId);\r\n            tuid.sys = true;\r\n            //tuid.setSchema(schema);\r\n            if (proxies !== undefined) proxyColl[i] = proxies;\r\n        }\r\n        for (let i in tuids) {\r\n            let schema = tuids[i];\r\n            let {name} = schema;\r\n            let tuid = this.getTuid(i);\r\n            //tuid.sys = true;\r\n            tuid.setSchema(schema);\r\n        }\r\n        for (let i in proxyColl) {\r\n            let proxies:string[] = proxyColl[i];\r\n            let tuid = this.tuids[i];\r\n            tuid.proxies = {};\r\n            for (let p of proxies) {\r\n                tuid.proxies[p] = this.tuids[p];\r\n            }\r\n        }\r\n    }\r\n\r\n    private buildAccess(access:any) {\r\n        for (let a in access) {\r\n            let v = access[a];\r\n            switch (typeof v) {\r\n                case 'string': this.fromType(a, v); break;\r\n                case 'object': this.fromObj(a, v); break;\r\n            }\r\n        }\r\n        /*\r\n        for (let tuid of this.tuidArr) {\r\n            tuid.setProxies(this);\r\n        }*/\r\n    }\r\n\r\n    newAction(name:string, id:number):Action {\r\n        let action = this.actions[name];\r\n        if (action !== undefined) return action;\r\n        action = this.actions[name] = new Action(this, name, id)\r\n        this.actionArr.push(action);\r\n        return action;\r\n    }\r\n    newTuid(name:string, id:number):TuidMain {\r\n        let tuid = this.tuids[name];\r\n        if (tuid !== undefined) return tuid;\r\n        tuid = this.tuids[name] = new TuidMain(this, name, id);\r\n        this.tuidArr.push(tuid);\r\n        return tuid;\r\n    }\r\n    newQuery(name:string, id:number):Query {\r\n        let query = this.queries[name];\r\n        if (query !== undefined) return query;\r\n        query = this.queries[name] = new Query(this, name, id)\r\n        this.queryArr.push(query);\r\n        return query;\r\n    }\r\n    newBook(name:string, id:number):Book {\r\n        let book = this.books[name];\r\n        if (book !== undefined) return book;\r\n        book = this.books[name] = new Book(this, name, id);\r\n        this.bookArr.push(book);\r\n        return book;\r\n    }\r\n    newMap(name:string, id:number):Map {\r\n        let map = this.maps[name];\r\n        if (map !== undefined) return map;\r\n        map = this.maps[name] = new Map(this, name, id)\r\n        this.mapArr.push(map);\r\n        return map;\r\n    }\r\n    newHistory(name:string, id:number):History {\r\n        let history = this.histories[name];\r\n        if (history !== undefined) return;\r\n        history = this.histories[name] = new History(this, name, id)\r\n        this.historyArr.push(history);\r\n        return history;\r\n    }\r\n    newPending(name:string, id:number):Pending {\r\n        let pending = this.pendings[name];\r\n        if (pending !== undefined) return;\r\n        pending = this.pendings[name] = new Pending(this, name, id)\r\n        this.pendingArr.push(pending);\r\n        return pending;\r\n    }\r\n    newSheet(name:string, id:number):Sheet {\r\n        let sheet = this.sheets[name];\r\n        if (sheet !== undefined) return sheet;\r\n        sheet = this.sheets[name] = new Sheet(this, name, id);\r\n        this.sheetArr.push(sheet);\r\n        return sheet;\r\n    }\r\n    private fromType(name:string, type:string) {\r\n        let parts = type.split('|');\r\n        type = parts[0];\r\n        let id = Number(parts[1]);\r\n        switch (type) {\r\n            case 'uq': this.uqId = id; break;\r\n            case 'tuid': \r\n                let tuid = this.newTuid(name, id);\r\n                tuid.sys = false;\r\n                break;\r\n            case 'action': this.newAction(name, id); break;\r\n            case 'query': this.newQuery(name, id); break;\r\n            case 'book': this.newBook(name, id); break;\r\n            case 'map': this.newMap(name, id); break;\r\n            case 'history': this.newHistory(name, id); break;\r\n            case 'sheet':this.newSheet(name, id); break;\r\n            case 'pending': this.newPending(name, id); break;\r\n        }\r\n    }\r\n    private fromObj(name:string, obj:any) {\r\n        switch (obj['$']) {\r\n            case 'sheet': this.buildSheet(name, obj); break;\r\n        }\r\n    }\r\n    private buildSheet(name:string, obj:any) {\r\n        let sheet = this.sheets[name];\r\n        if (sheet === undefined) sheet = this.newSheet(name, obj.id);\r\n        sheet.build(obj);\r\n        /*\r\n        let states = sheet.states;\r\n        for (let p in obj) {\r\n            switch(p) {\r\n                case '#':\r\n                case '$': continue;\r\n                default: states.push(this.createSheetState(p, obj[p])); break;\r\n            }\r\n        }*/\r\n    }\r\n    /*\r\n    private createSheetState(name:string, obj:object):SheetState {\r\n        let ret:SheetState = {name:name, actions:[]};\r\n        let actions = ret.actions;\r\n        for (let p in obj) {\r\n            let action:SheetAction = {name: p};\r\n            actions.push(action);\r\n        }\r\n        return ret;\r\n    }*/\r\n    buildFieldTuid(fields:Field[], mainFields?:Field[]) {\r\n        if (fields === undefined) return;\r\n        for (let f of fields) {\r\n            let {tuid, arr, url} = f;\r\n            if (tuid === undefined) continue;\r\n            f._tuid = this.getTuid(tuid, arr, url);\r\n        }\r\n        for (let f of fields) {\r\n            let {owner} = f;\r\n            if (owner === undefined) continue;\r\n            let ownerField = fields.find(v => v.name === owner);\r\n            if (ownerField === undefined) {\r\n                if (mainFields !== undefined) {\r\n                    ownerField = mainFields.find(v => v.name === owner);\r\n                }\r\n                if (ownerField === undefined) {\r\n                    throw `owner field ${owner} is undefined`;\r\n                }\r\n            }\r\n            f._ownerField = ownerField;\r\n            let {arr, url} = f;\r\n            f._tuid = this.getTuid(ownerField._tuid.name, arr, url);\r\n            if (f._tuid === undefined) throw 'owner field ${owner} is not tuid';\r\n        }\r\n    }\r\n    buildArrFieldsTuid(arrFields:ArrFields[], mainFields:Field[]) {\r\n        if (arrFields === undefined) return;\r\n        for (let af of arrFields) {\r\n            let {fields} = af;\r\n            if (fields === undefined) continue;\r\n            this.buildFieldTuid(fields, mainFields);\r\n        }\r\n    }\r\n}\r\n","export * from './entities';\r\nexport * from './entity';\r\nexport * from './action';\r\nexport * from './query';\r\nexport * from './sheet';\r\nexport * from './tuid';\r\nexport * from './book';\r\nexport * from './map';\r\nexport * from './history';\r\nexport * from './pending';\r\n","import * as React from 'react';\r\nimport {FormView, FormRow, FieldRow, GroupRow, LabelFormRow} from '../formView';\r\nimport {Control, ControlBase, createControl, CreateControl} from '../control';\r\n\r\nexport type CreateRow = (form:FormView, row: FormRow)=>RowContainer;\r\n\r\nexport abstract class RowContainer {\r\n    protected form:FormView;\r\n    protected row: FormRow;\r\n    protected control: ControlBase;\r\n    constructor(form:FormView, row: FormRow) {\r\n        this.form = form;\r\n        this.row = row;\r\n        if ((row as JSX.Element).type === undefined) {\r\n            let cc:CreateControl = (row as LabelFormRow).createControl;\r\n            if (cc === undefined) cc = form.createControl;\r\n            if (cc === undefined) cc = createControl;\r\n            this.control = cc(form, row);\r\n        }\r\n    }\r\n    abstract render(key:string):JSX.Element;\r\n    \r\n    isOk():boolean {\r\n        if (this.control === undefined) return true;\r\n        return this.control.isOk();\r\n    }\r\n\r\n    contains(fieldName:string):boolean {\r\n        let field = (this.row as FieldRow).field;\r\n        if (field !== undefined) return fieldName === field.name;\r\n        let group = (this.row as GroupRow).group;\r\n        if (group !== undefined) return group.find(g => g.field.name === fieldName)!==undefined;\r\n        return false;\r\n    }\r\n    get hasError():boolean {return this.control.hasError;}\r\n    get filled():boolean {return this.control.filled;}\r\n    clear() {\r\n        if (this.control !== undefined) this.control.clear();\r\n    }\r\n    clearErrors() {\r\n        if (this.control !== undefined) this.control.clearErrors();\r\n    }\r\n    readValues(values:any):any {\r\n        if (this.control !== undefined) this.control.readValues(values);\r\n    }\r\n    setError(fieldName:string, error:string) {\r\n        if (this.control !== undefined) this.control.setError(fieldName, error);\r\n    }\r\n    setInitValues(values:any) {\r\n        if (this.control !== undefined) this.control.setInitValues(values);\r\n    }\r\n}\r\n\r\nclass ElementRowContainer extends RowContainer {\r\n    render(key:string):JSX.Element {\r\n        return <div key={key} className=\"form-group\">{this.row as JSX.Element}</div>;\r\n    }\r\n    get hasError():boolean {return false;}\r\n    get filled():boolean {return false;}\r\n}\r\n\r\nclass BootStrapRowContainer extends RowContainer {\r\n    render(key:string):JSX.Element {\r\n        return <div key={key} className='form-group row'>\r\n            <label className='col-sm-2 col-form-label'>\r\n                {(this.row as LabelFormRow).label}\r\n            </label>\r\n            {this.control.render()}\r\n        </div>;\r\n\r\n        //has-success is-valid\r\n    }\r\n}\r\n\r\nexport function bootstrapCreateRow(form:FormView, row: FormRow):RowContainer {\r\n    return new BootStrapRowContainer(form, row);\r\n}\r\n\r\nexport function elementCreateRow(form:FormView, row: FormRow):RowContainer {\r\n    return new ElementRowContainer(form, row);\r\n}\r\n","//import {isDevelopment} from '../local';\r\nimport {HttpChannel} from './httpChannel';\r\n\r\nexport async function refetchApi(channel:HttpChannel, url, options, resolve, reject) {\r\n    await channel.fetch(url, options, resolve, reject);\r\n}\r\n\r\nexport abstract class ApiBase {\r\n    protected token: string;\r\n    protected path: string;\r\n    protected showWaiting: boolean;\r\n\r\n    constructor(path: string, showWaiting: boolean) {\r\n        this.path = path || '';\r\n        this.showWaiting = showWaiting;\r\n    }\r\n\r\n    protected abstract async getHttpChannel(): Promise<HttpChannel>;\r\n\r\n    public async call(url:string, method:string, body:any):Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.callFetch(url, method, body);\r\n    }\r\n\r\n    public async get(path:string, params:any=undefined): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.get(this.path + path, params);\r\n    }\r\n\r\n    public async post(path:string, params:any): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.post(this.path + path, params);\r\n    }\r\n\r\n    public async put(path:string, params:any): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.put(this.path + path, params);\r\n    }\r\n\r\n    public async delete(path:string, params:any): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.delete(this.path + path, params);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport {nav, mobileHeaderStyle} from './nav';\r\nimport { Page } from './page';\r\n\r\nexport interface TitleBarProps {\r\n    back?: 'back' | 'close' | 'none';\r\n    center: string | JSX.Element;\r\n    right?: JSX.Element;\r\n    logout?: boolean | (()=>void);\r\n}\r\nexport interface TitleBarState {\r\n    hasBack: boolean;\r\n}\r\nexport class TitleBar extends React.Component<TitleBarProps, TitleBarState> {\r\n    private navChangeHandler: ()=>void;\r\n    constructor(props) {\r\n        super(props);\r\n        this.navChange = this.navChange.bind(this);\r\n        this.state = {\r\n            hasBack: false,\r\n        };\r\n    }\r\n    navChange() {\r\n        this.setState({\r\n            hasBack: nav.level > 1\r\n        })\r\n    }\r\n    componentWillMount() {\r\n        this.navChange();\r\n        //this.navChangeHandler = nav.events.add('change', this.navChange);\r\n    }\r\n    componentWillUnmount() {\r\n        //nav.events.remove('change', this.navChangeHandler);\r\n    }\r\n    async back() {\r\n        await nav.back(); // 这个才会显示confirm box，在dataForm里面，如果输入了数据的话\r\n    }\r\n    openWindow() {\r\n        window.open(document.location.href);\r\n    }\r\n    private logoutClick = () => {\r\n        nav.push(<Page header=\"安全退出\" back=\"close\">\r\n            <div className=\"m-5 border border-info bg-white rounded p-3 text-center\">\r\n                <div>退出当前账号不会删除任何历史数据，下次登录依然可以使用本账号</div>\r\n                <div className=\"mt-3\">\r\n                    <button className=\"btn btn-danger\" onClick={()=>this.logout()}>退出</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n    }\r\n    private logout() {\r\n        let {logout} = this.props;\r\n        if (typeof logout === 'function') {\r\n            logout(); \r\n        }\r\n        nav.logout(undefined);\r\n    }\r\n    render() {\r\n        let b = this.state.hasBack || self != top;\r\n        let {right, center, logout} = this.props;\r\n        let back, pop, debugLogout;\r\n        if (logout !== undefined && self === top) {\r\n            if (typeof logout === 'boolean' && logout === true\r\n                || typeof logout === 'function')\r\n            {\r\n                let {nick, name} = nav.user;\r\n                debugLogout = <div className=\"d-flex align-items-center\">\r\n                    <small className=\"text-light\">{nick || name}</small>\r\n                    <a className=\"dropdown-toggle btn btn-secondary btn-sm ml-2\"\r\n                        role=\"button\"\r\n                        onClick={this.logoutClick}>\r\n                        <i className=\"fa fa-sign-out\" />\r\n                    </a>\r\n                </div>;\r\n            }\r\n        }\r\n        if (b) {\r\n            switch (this.props.back) {\r\n                case 'none': back = undefined; break;\r\n                default:\r\n                case 'back': back = <nav onClick={this.back}><i className=\"fa fa-arrow-left\" /></nav>; break;\r\n                case 'close': back = <nav onClick={this.back}><i className=\"fa fa-close\" /></nav>; break;\r\n            }\r\n        }\r\n        if (self != top) {\r\n            console.log(document.location.href);\r\n            pop = <header onClick={this.openWindow} />;\r\n        }\r\n        let rightView;\r\n        if (right || debugLogout) rightView = <aside>{right} {debugLogout}</aside>;\r\n        return (\r\n        <header style={mobileHeaderStyle}>\r\n            {pop}\r\n            {back}\r\n            <div>{center}</div>\r\n            {rightView}\r\n        </header>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { jsonStringify } from '../../tools';\r\n\r\nexport const DefaultRow = (values) => <div className=\"px-3 py-2\">{jsonStringify(values)}</div>;\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { List, FA } from 'tonva-react-form';\r\nimport { Page, nav } from 'tonva-tools';\r\nimport { TuidMain, Query, Entity } from '../../entities';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { QueryUI, CQuery } from './cQuery';\r\nimport { DefaultRow } from './defaultRow';\r\n\r\nexport class VQueryMain extends VEntity<Query, QueryUI, CQuery> {\r\n    protected vForm: VForm;\r\n    private row: React.StatelessComponent;\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        let {row, queryRow} = this.ui;\r\n        this.row = queryRow || row || DefaultRow;\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSubmit = async () => {\r\n        let params = this.vForm.getValues();\r\n        if (this.entity.isPaged === true) {\r\n            await this.entity.resetPage(30, params);\r\n            await this.entity.loadPage();\r\n            this.replacePage(this.pageResult);\r\n        }\r\n        else {\r\n            let data = await this.entity.query(params);\r\n            this.replacePage(this.queryResult, data);\r\n        }\r\n    }\r\n\r\n    again = () => {\r\n        this.vForm.reset();\r\n        this.replacePage(this.view);\r\n    }\r\n\r\n    renderExtra() {\r\n        return;\r\n    }\r\n\r\n    renderRow = (item:any, index:number) => <this.row {...item} />;\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render('mx-3 my-2')}\r\n        {this.renderExtra()}\r\n    </Page>;\r\n\r\n    protected pageResult = () => {\r\n        let {name, list} = this.entity;\r\n        let rightClose = <button\r\n            className=\"btn btn-outline-success\"\r\n            onClick={this.again}>\r\n            <FA name=\"search\" /> 再查询\r\n        </button>;\r\n        return <Page header={this.label} right={rightClose}>\r\n            <List items={list} item={{render: this.renderRow}} />\r\n        </Page>;\r\n    }\r\n\r\n    protected queryResult = observer((result:any) => {\r\n        let rightClose = <button\r\n            className=\"btn btn-outline-success\"\r\n            onClick={this.again}>\r\n            <FA name=\"search\" /> 再查询\r\n        </button>;\r\n        return <Page header={this.label} right={rightClose}>\r\n            <pre>{JSON.stringify(result, undefined, '\\t')}</pre>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport { FA, SearchBox, List } from 'tonva-react-form';\r\nimport { Page, PageItems } from 'tonva-tools';\r\nimport { Query } from '../../entities';\r\nimport { VEntity } from '../CVEntity';\r\nimport { QueryUI, CQuerySelect } from './cQuery';\r\nimport { DefaultRow } from './defaultRow';\r\n\r\nexport class VQuerySelect extends VEntity<Query, QueryUI, CQuerySelect> {\r\n    private row: React.StatelessComponent;\r\n\r\n    PageItems:QueryPageItems;\r\n    ownerId: number;\r\n\r\n    async open(param?:any) {\r\n        let {row, selectRow} = this.ui;\r\n        this.row = selectRow || row || DefaultRow;\r\n        //this.entity = this.controller.entity;\r\n        this.PageItems = new QueryPageItems(this.entity);\r\n        await this.onSearch(param);\r\n        this.openPage(this.view);\r\n    }\r\n    onSearch = async (key:string) => {\r\n        await this.PageItems.first(key);\r\n    }\r\n\r\n    renderRow = (item:any, index:number) => <this.row {...item} />;\r\n\r\n    private callOnSelected(item:any) {\r\n       this.closePage();\r\n       this.returnCall(item);\r\n    }\r\n    clickRow = (item:any) => {\r\n        this.callOnSelected(item);\r\n    }\r\n\r\n    view = () => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\r\n        return <Page header={header}>\r\n            <List\r\n                items={this.PageItems.items}\r\n                item={{render: this.renderRow, onClick: this.clickRow}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    };\r\n}\r\n\r\nexport class QueryPageItems extends PageItems<any> {\r\n    private query: Query;\r\n    constructor(query: Query) {\r\n        super();\r\n        this.query = query;\r\n    }\r\n    protected async load():Promise<any[]> {\r\n        await  this.query.loadSchema();\r\n        let ret:any[];\r\n        if (this.query.isPaged === true)\r\n            ret = await this.query.page(this.param, this.pageStart, this.pageSize);\r\n        else {\r\n            let data = await this.query.query(this.param);\r\n            //let data = await this.query.unpackReturns(res);\r\n            ret = data[this.query.returns[0].name];\r\n        }\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:any) {\r\n        if (item === undefined) this.pageStart = 0;\r\n    }\r\n}\r\n","import { StatelessComponent } from \"react\";\r\nimport { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Query } from \"../../entities\";\r\nimport { VQueryMain } from \"./vQueryMain\";\r\nimport { VQuerySelect } from \"./vQuerySelect\";\r\n\r\nexport interface QueryUI extends EntityUI {\r\n    CQuery?: typeof CQuery;\r\n    CQuerySelect?: typeof CQuerySelect;\r\n    main?: typeof VQueryMain;\r\n    row?: StatelessComponent;\r\n    queryRow?: StatelessComponent;\r\n    selectRow?: StatelessComponent;\r\n}\r\n\r\nexport abstract class CQueryBase extends CEntity<Query, QueryUI> {\r\n}\r\n\r\nexport class CQuery extends CQueryBase {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VQueryMain);\r\n    }\r\n\r\n    protected get VQueryMain():typeof VQueryMain {return this.ui && this.ui.main || VQueryMain}\r\n}\r\n\r\nexport class CQuerySelect extends CQueryBase {\r\n    protected async internalStart(param?:any) {\r\n        await this.openVPage(this.VQuerySelect, param);\r\n    }\r\n\r\n    protected get VQuerySelect():typeof VQuerySelect {return VQuerySelect}\r\n}\r\n","export * from './cQuery';\r\nexport * from './vQueryMain';\r\nexport * from './vQuerySelect';","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\r\nimport { ResUploader } from '../resUploader';\r\nimport { Image } from '../image';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { ItemEdit } from './itemEdit';\r\nimport { FA } from 'tonva-react-form';\r\n\r\nexport class ImageItemEdit extends ItemEdit {\r\n    protected uiItem: UiTextItem;\r\n    private resUploader: ResUploader;\r\n    @observable private resId: string;\r\n    @observable private overSize: boolean = false;\r\n\r\n    protected async internalStart():Promise<any> {\r\n        this.resId = this.value;        \r\n        return new Promise<any>((resolve, reject) => {\r\n            nav.push(React.createElement(this.page, {resolve:resolve, reject:reject}), ()=>reject());\r\n        });\r\n    }\r\n\r\n    /*\r\n    private onChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.newValue = evt.target.value;\r\n        let preValue = this.value;\r\n        this.isChanged = (this.newValue != preValue);\r\n    }\r\n    */\r\n\r\n    private upload = async () => {\r\n        if (!this.resUploader) return;\r\n        let ret = await this.resUploader.upload();\r\n        if (ret === null) {\r\n            this.overSize = true;\r\n            setTimeout(() => this.overSize = false, 3000);\r\n            return;\r\n        }\r\n        this.resId = ret;\r\n        this.isChanged = (this.resId != this.value);\r\n    }\r\n\r\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\r\n        let {resolve} = props;\r\n        let right = <button\r\n            className=\"btn btn-sm btn-success\"\r\n            disabled={!this.isChanged}\r\n            onClick={()=>resolve(this.resId)}>保存</button>;\r\n        let overSize:any;\r\n        if (this.overSize === true) {\r\n            overSize = <div className=\"text-danger\">\r\n                <FA name=\"times-circle\" /> 图片文件大小超过2M，无法上传\r\n            </div>;\r\n        }\r\n        return <Page header={'更改' + this.label} right={right}>\r\n            <div className=\"my-3 px-3 py-3 bg-white\">\r\n                <div>上传图片：\r\n                    <ResUploader ref={v=>this.resUploader=v} multiple={false} maxSize={2048} />\r\n                    <button className=\"btn btn-primary ml-5\" onClick={this.upload}>上传</button>\r\n                </div>\r\n                {overSize}\r\n                <div className=\"small muted my-4\">支持JPG、GIF、PNG格式图片，不超过2M。</div>\r\n                <div className=\"d-flex\">\r\n                    <div className=\"mr-5\" style={{border: '1px dotted gray', padding: '8px'}}>\r\n                        <Image className=\"w-12c h-12c\" src={this.resId} />\r\n                    </div>\r\n                    <div className=\"ml-5\">\r\n                        <div className=\"small\">图片预览</div>\r\n                        <Image className=\"w-4c h-4c mt-3\" src={this.resId} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\n\r\nexport function Loading() {\r\n    return <div className=\"d-flex h-100 align-items-center justify-content-center\">\r\n        <i className=\"fa fa-spinner fa-spin fa-2x fa-fw text-info\" />\r\n    </div>;\r\n}\r\n\r\n/*\r\nexport function Loading() {\r\n    return <div style={{height:'100%'}} className=\"d-flex flex-fill align-items-center justify-content-center\">\r\n    <div className=\"d-flex align-items-center justify-content-center slide text-info\" style={{width:'5em', height:'2em'}}>\r\n        加载中...\r\n    </div>\r\n    </div>\r\n}\r\n*/\r\n\r\n\r\n","import * as React from 'react';\r\nimport { nav } from './nav';\r\n\r\nexport interface ResUploaderProps {\r\n    className?: string;\r\n    multiple?: boolean;\r\n    maxSize?: number;\r\n    onFilesChange?: (evt: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nexport class ResUploader extends React.Component<ResUploaderProps> {\r\n    private fileInput: HTMLInputElement;\r\n\r\n    upload = async ():Promise<string> => {\r\n        let {maxSize} = this.props;\r\n        if (maxSize === undefined || maxSize <= 0) \r\n            maxSize = 100000000000;\r\n        else\r\n            maxSize = maxSize * 1024;\r\n        let resUrl = nav.resUrl + 'upload';\r\n        var files:FileList = this.fileInput.files;\r\n        var data = new FormData();\r\n        let len = files.length;\r\n        for (let i=0; i<len; i++) {\r\n            let file = files[i];\r\n            if (file.size > maxSize) return null;\r\n            data.append('files[]', file, file.name);\r\n        }\r\n  \r\n        try {\r\n            let abortController = new AbortController();\r\n            let res = await fetch(resUrl, {\r\n                method: \"POST\",\r\n                body: data,\r\n                signal: abortController.signal,\r\n            });\r\n            let json = await res.json();\r\n            return ':' + json.res.id;\r\n        }\r\n        catch (err) {\r\n            console.error('%s %s', resUrl, err);\r\n        }\r\n    }\r\n    render() {\r\n        let {className, multiple, onFilesChange} = this.props;\r\n        return <input \r\n            className={className}\r\n            ref={t=>this.fileInput=t} \r\n            onChange={onFilesChange}\r\n            type='file' name='file' multiple={multiple} />\r\n    }\r\n}\r\n","export * from './rule';\r\nexport * from './field';\r\nexport * from './face';\r\nexport * from './rowContainer';\r\nexport * from './formView';\r\nexport * from './TonvaForm';\r\nexport {ControlBase} from './control';\r\n","import * as React from 'react';\r\nimport {FormEvent} from 'react';\r\nimport {computed} from 'mobx';\r\nimport {uid} from '../uid';\r\nimport {Rule} from './rule';\r\nimport {Field} from './field';\r\nimport {Face} from './face';\r\nimport {CreateControl, ButtonsControl} from './control';\r\nimport {RowContainer, CreateRow, bootstrapCreateRow, elementCreateRow} from './rowContainer';\r\n\r\nexport interface FieldView {\r\n    field: Field;\r\n    face?: Face;\r\n}\r\n\r\nexport interface LabeledRow {\r\n    label?: string;\r\n    createRow?: CreateRow;\r\n    createControl?: CreateControl;\r\n    help?: JSX.Element;\r\n}\r\n\r\nexport interface FieldRow extends LabeledRow, FieldView {\r\n}\r\n\r\nexport interface GroupRow extends LabeledRow {\r\n    group: FieldView[];\r\n}\r\n\r\nexport type LabelFormRow = FieldRow|GroupRow|LabeledRow;\r\nexport type FormRow = LabelFormRow|JSX.Element;\r\n\r\nexport interface SubmitResult {\r\n    success: boolean;\r\n    message?: string\r\n    result?: any;\r\n}\r\n\r\nexport interface FormProps {\r\n    formRows: FormRow[];\r\n    //context?: any;              // form context，比如，可以是EntitiesUI\r\n    rules?: Rule | Rule[];\r\n    onSubmit: (values:any) => Promise<SubmitResult|undefined>;\r\n    submitButton?: string|JSX.Element;\r\n    otherButton?: string|JSX.Element;\r\n    onOther?: (values:any) => void;\r\n    createRow?: CreateRow;\r\n    createControl?: CreateControl;\r\n    readOnly?: boolean;\r\n}\r\n\r\nexport class FormView {\r\n    uid:string;\r\n    private rows: RowContainer[] = [];\r\n    private buttonsRow: RowContainer;\r\n    props: FormProps;\r\n    createControl?: CreateControl;\r\n    constructor(props:FormProps) {\r\n        this.uid = uid();\r\n        this.props = props;\r\n        this.buildRows(props);\r\n        this.createControl = props.createControl;\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    @computed get hasError():boolean {\r\n        let ret = this.rows.map((v, index) => index + ': ' + v.hasError + '\\n');\r\n        console.log(ret);\r\n        return this.rows.some(row => row.hasError);\r\n    }\r\n    @computed get nothing():boolean {\r\n        let ret = this.rows.every(row => !row.filled);\r\n        return ret;\r\n    }\r\n\r\n    readValues():any {\r\n        let values = {} as any;\r\n        for (let row of this.rows) {\r\n            row.readValues(values);\r\n        }\r\n        return values;\r\n    }\r\n\r\n    clear() {\r\n        for (let row of this.rows) {\r\n            row.clear();\r\n        }\r\n    }\r\n\r\n    clearErrors() {\r\n        for (let row of this.rows) {\r\n            row.clearErrors();\r\n        }\r\n    }\r\n\r\n    setError(fieldName:string, error:string) {\r\n        for (let row of this.rows) {\r\n            row.setError(fieldName, error);\r\n        }\r\n    }\r\n\r\n    setInitValues(initValues:any) {\r\n        if (initValues === undefined) return;\r\n        for (let row of this.rows) {\r\n            row.setInitValues(initValues);\r\n        }\r\n    }\r\n\r\n    private buildRows(props:FormProps) {\r\n        let {formRows, createRow} = props;\r\n        if (formRows !== undefined) {\r\n            for (let row of formRows) {\r\n                this.rows.push(this.buildRow(row, createRow));\r\n            }\r\n            if (this.props.readOnly !== true) {\r\n                this.buttonsRow = this.buildRow({createControl:this.createButtons.bind(this)}, undefined);\r\n            }\r\n        }\r\n        else {\r\n            this.rows.push(elementCreateRow(this, <div className=\"text-warning\">TonvaForm need formRows defined</div>));\r\n        }\r\n    }\r\n\r\n    private buildRow(formRow: FormRow, formRowCreator: CreateRow):RowContainer {\r\n        let createRow:CreateRow;\r\n        let type = (formRow as JSX.Element).type;\r\n        if (type !== undefined) {\r\n            createRow = elementCreateRow;\r\n        }\r\n        else {\r\n            createRow = (formRow as (FieldRow | GroupRow | LabeledRow)).createRow;\r\n            if (createRow === undefined) {\r\n                createRow = formRowCreator;\r\n                if (createRow === undefined) createRow = bootstrapCreateRow;\r\n            }\r\n        }\r\n        let row = createRow(this, formRow);\r\n        return row;\r\n    }\r\n\r\n    private createButtons(form:FormView, row: FormRow) {\r\n        return new ButtonsControl(form);\r\n    }\r\n\r\n    private isOk():boolean {\r\n        let isOk = true;\r\n        for (let row of this.rows) {\r\n            if (!row.isOk()) isOk = false;\r\n        }\r\n        return isOk;\r\n    }\r\n\r\n    render():JSX.Element {\r\n        return <form onSubmit={this.onSubmit}>\r\n            {this.rows.map((row,index) => row.render(this.uid + index))}\r\n            {this.buttons()}\r\n        </form>;\r\n    }\r\n\r\n    buttons():JSX.Element {\r\n        if (this.buttonsRow === undefined) return;\r\n        return this.buttonsRow.render(this.uid + this.rows.length);\r\n    }\r\n    \r\n    async onSubmit(event:FormEvent<HTMLFormElement>) {\r\n        event.preventDefault();\r\n        if (!this.isOk()) return;\r\n        let values = this.readValues();\r\n        await this.props.onSubmit(values);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { Page, loadAppUqs, nav, meInFrame, Controller, TypeVPage, VPage, resLang} from 'tonva-tools';\r\nimport { List, LMR, FA } from 'tonva-react-form';\r\nimport { CUq, EntityType, UqUI } from './uq';\r\nimport { centerApi } from '../centerApi';\r\n\r\nexport interface AppUI {\r\n    CApp?: typeof CApp;\r\n    CUq?: typeof CUq;\r\n    main?: TypeVPage<CApp>;\r\n    uqs: {[uq:string]: UqUI};\r\n    res?: any;\r\n}\r\n\r\nexport class CApp extends Controller {\r\n    private appOwner:string;\r\n    private appName:string;\r\n    private isProduction:boolean;\r\n    private cImportUqs: {[uq:string]: CUq} = {};\r\n    protected ui:AppUI;\r\n    id: number;\r\n    appUnits:any[];\r\n\r\n    constructor(tonvaApp:string, ui?:AppUI) {\r\n        super(resLang(ui && ui.res));\r\n        let parts = tonvaApp.split('/');\r\n        if (parts.length !== 2) {\r\n            throw 'tonvaApp name must be / separated, owner/app';\r\n        }\r\n        this.appOwner = parts[0];\r\n        this.appName = parts[1];\r\n        this.ui = ui || {uqs:{}};\r\n        this.caption = this.res.caption || 'Tonva';\r\n    }\r\n    \r\n    readonly caption: string; // = 'View Model 版的 Uq App';\r\n    cUqCollection: {[uq:string]: CUq} = {};\r\n\r\n    async startDebug() {\r\n        let appName = this.appOwner + '/' + this.appName;\r\n        let cApp = new CApp(appName, {uqs:{}} );\r\n        let keepNavBackButton = true;\r\n        await cApp.start(keepNavBackButton);    \r\n    }\r\n\r\n    protected async loadUqs(): Promise<string[]> {\r\n        let retErrors:string[] = [];\r\n        let unit = meInFrame.unit;\r\n        let app = await loadAppUqs(this.appOwner, this.appName);\r\n        let {id, uqs} = app;\r\n        this.id = id;\r\n\r\n        let promises: PromiseLike<string>[] = [];\r\n        let promiseChecks: PromiseLike<boolean>[] = [];\r\n        for (let appUq of uqs) {\r\n            let {id:uqId, uqOwner, uqName, url, urlDebug, ws, access, token} = appUq;\r\n            let uq = uqOwner + '/' + uqName;\r\n            let ui = this.ui && this.ui.uqs && this.ui.uqs[uq];\r\n            let cUq = this.newCUq(uq, uqId, access, ui || {});\r\n            this.cUqCollection[uq] = cUq;\r\n            promises.push(cUq.loadSchema());\r\n            promiseChecks.push(cUq.entities.uqApi.checkAccess());\r\n        }\r\n        let results = await Promise.all(promises);\r\n        Promise.all(promiseChecks).then((checks) => {\r\n            for (let c of checks) {\r\n                if (c === false) {\r\n                    nav.start();\r\n                    return;\r\n                }\r\n            }\r\n        });\r\n        for (let result of results)\r\n        {\r\n            let retError = result; // await cUq.loadSchema();\r\n            if (retError !== undefined) {\r\n                retErrors.push(retError);\r\n                continue;\r\n            }\r\n        }\r\n        if (retErrors.length === 0) return;\r\n        return retErrors;\r\n    }\r\n\r\n    async getImportUq(uqOwner:string, uqName:string):Promise<CUq> {\r\n        let uq = uqOwner + '/' + uqName;\r\n        let cUq = this.cImportUqs[uq];\r\n        if (cUq !== undefined) return cUq;\r\n        let ui = this.ui && this.ui.uqs && this.ui.uqs[uq];\r\n        let uqId = -1; // unknown\r\n        this.cImportUqs[uq] = cUq = this.newCUq(uq, uqId, undefined, ui || {});\r\n        let retError = await cUq.loadSchema();\r\n        if (retError !== undefined) {\r\n            console.error(retError);\r\n            debugger;\r\n            return;\r\n        }\r\n        return cUq;\r\n    }\r\n\r\n    protected newCUq(uq:string, uqId:number, access:string, ui:any) {\r\n        let cUq = new (this.ui.CUq || CUq)(this, uq, this.id, uqId, access, ui);        \r\n        Object.setPrototypeOf(cUq.x, this.x);\r\n        return cUq;\r\n    }\r\n\r\n    get cUqArr():CUq[] {\r\n        let ret:CUq[] = [];\r\n        for (let i in this.cUqCollection) {\r\n            ret.push(this.cUqCollection[i]);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    getCUq(apiName:string):CUq {\r\n        return this.cUqCollection[apiName];\r\n    }\r\n\r\n    protected get VAppMain():TypeVPage<CApp> {return (this.ui&&this.ui.main) || VAppMain}\r\n    protected async beforeStart():Promise<boolean> {\r\n        //if (await super.beforeStart() === false) return false;\r\n        try {\r\n            let hash = document.location.hash;\r\n            if (hash.startsWith('#tvdebug')) {\r\n                this.isProduction = false;\r\n                //await this.showMainPage();\r\n                //return;\r\n            }\r\n            else {\r\n                this.isProduction = hash.startsWith('#tv');\r\n            }\r\n            let {unit} = meInFrame;\r\n            if (this.isProduction === false && (unit===undefined || unit<=0)) {\r\n                let app = await loadAppUqs(this.appOwner, this.appName);\r\n                let {id} = app;\r\n                this.id = id;\r\n                await this.loadAppUnits();\r\n                switch (this.appUnits.length) {\r\n                    case 0:\r\n                        this.showUnsupport();\r\n                        return false;\r\n                    case 1:\r\n                        unit = this.appUnits[0].id;\r\n                        if (unit === undefined || unit < 0) {\r\n                            this.showUnsupport();\r\n                            return false;\r\n                        }\r\n                        meInFrame.unit = unit;\r\n                        break;\r\n                    default: \r\n                        //nav.clear();\r\n                        nav.push(<this.selectUnitPage />)\r\n                        return false;\r\n                }\r\n            }\r\n\r\n            let retErrors = await this.loadUqs();\r\n            if (retErrors !== undefined) {\r\n                this.openPage(<Page header=\"ERROR\">\r\n                    <div className=\"m-3\">\r\n                        <div>Load Uqs 发生错误：</div>\r\n                        {retErrors.map((r, i) => <div key={i}>{r}</div>)}\r\n                    </div>\r\n                </Page>);\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        catch (err) {\r\n            nav.push(<Page header=\"App start error!\">\r\n                <pre>\r\n                    {typeof err === 'string'? err : err.message}\r\n                </pre>\r\n            </Page>);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    protected async internalStart(param:any) {\r\n        if (param !== true) {\r\n            this.clearPrevPages();\r\n        }\r\n        await this.showMainPage();\r\n    }\r\n    async load() {\r\n        await this.beforeStart();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        return this.renderView(this.VAppMain);\r\n    }\r\n\r\n    // 如果是独立app，删去显示app之前的页面。\r\n    // 如果非独立app，则不删\r\n    protected clearPrevPages() {\r\n        nav.clear();\r\n    }\r\n\r\n    private showUnsupport() {\r\n        this.clearPrevPages();\r\n        let {user} = nav;\r\n        let userName:string = user? user.name : '[未登录]';\r\n        this.openPage(<Page header=\"APP无法运行\" logout={true}>\r\n            <div className=\"m-3 text-danger container\">\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-2\">\r\n                        <FA name=\"exclamation-triangle\" />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        用户不支持APP\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-2\">用户: </div>\r\n                    <div className=\"col\">{userName}</div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-2\">App:</div>\r\n                    <div className=\"col\">{`${this.appOwner}/${this.appName}`}</div>\r\n                </div>\r\n            </div>\r\n        </Page>)\r\n    }\r\n\r\n    private async showMainPage() {\r\n        // #tvRwPBwMef-23-sheet-api-108\r\n        let parts = document.location.hash.split('-');\r\n        if (parts.length > 2) {\r\n            let action = parts[2];\r\n            // sheet_debug 表示centerUrl是debug方式的\r\n            if (action === 'sheet' || action === 'sheet_debug') {\r\n                let uqId = Number(parts[3]);\r\n                let sheetTypeId = Number(parts[4]);\r\n                let sheetId = Number(parts[5]);\r\n                let cUq = this.getCUqFromId(uqId);\r\n                if (cUq === undefined) {\r\n                    alert('unknown uqId: ' + uqId);\r\n                    return;\r\n                }\r\n                this.clearPrevPages();\r\n                await cUq.navSheet(sheetTypeId, sheetId);\r\n                return;\r\n            }\r\n        }\r\n        this.openVPage(this.VAppMain);\r\n    }\r\n\r\n    private getCUqFromId(uqId:number): CUq {\r\n        for (let i in this.cUqCollection) {\r\n            let cUq = this.cUqCollection[i];\r\n            if (cUq.id === uqId) return cUq;\r\n        }\r\n        return;\r\n    }\r\n\r\n    private async loadAppUnits() {\r\n        let ret = await centerApi.userAppUnits(this.id);\r\n        this.appUnits = ret;\r\n        if (ret.length === 1) {\r\n            meInFrame.unit = ret[0].id;\r\n        }\r\n    }\r\n\r\n    renderRow = (item: any, index: number):JSX.Element => {\r\n        let {id, nick, name} = item;\r\n        return <LMR className=\"px-3 py-2\" right={'id: ' + id}>\r\n            <div>{nick || name}</div>\r\n        </LMR>;\r\n    }\r\n    onRowClick = async (item: any) => {\r\n        meInFrame.unit = item.id; // 25;\r\n        await this.start();\r\n    }\r\n\r\n    protected selectUnitPage = () => {\r\n        return <Page header=\"选择小号\" logout={true}>\r\n            <List items={this.appUnits} item={{render: this.renderRow, onClick: this.onRowClick}}/>\r\n        </Page>\r\n    }\r\n}\r\n\r\nclass VAppMain extends VPage<CApp> {\r\n    async open(param?:any) {\r\n        this.openPage(this.appPage);\r\n    }\r\n\r\n    render(param?:any) {\r\n        return this.appContent();\r\n    }\r\n\r\n    protected appPage() {\r\n        let {caption} = this.controller;\r\n        return <Page header={caption} logout={()=>{meInFrame.unit = undefined}}>\r\n            {this.appContent()}\r\n        </Page>;\r\n    }\r\n\r\n    protected appContent = () => {\r\n        let {cUqArr} = this.controller;\r\n        let content:any;\r\n        if (cUqArr.length === 0) {\r\n            content = <div className=\"text-danger\">\r\n                <FA name=\"\" /> 此APP没有绑定任何的UQ\r\n            </div>;\r\n        }\r\n        else {\r\n            content = cUqArr.map((v,i) => <div key={i}>{v.render()}</div>);\r\n        }\r\n        return <>{content}</>;\r\n    };\r\n}\r\n","import React from 'react';\r\nimport { FA } from \"tonva-react-form\";\r\n\r\nfunction icon(className:string, name:string) {\r\n    return <FA className={className} name={name} fixWidth={true} />;\r\n}\r\n/*\r\nexport interface EntityRes {\r\n    caption: string;\r\n    icon: JSX.Element;\r\n}\r\n*/\r\n\r\nexport const entityIcons:{[type:string]:JSX.Element} = {\r\n    tuid: icon('text-info', 'list-alt'),\r\n    action: icon('text-info', 'hand-o-right'),\r\n    map: icon('text-muted', 'list-ul'),\r\n    book: icon('text-muted', 'book'),\r\n    query: icon('text-warning', 'search'),\r\n    history: icon('text-info', 'hand-o-right'),\r\n    pending: icon('text-info', 'forward'),\r\n    sheet: icon('text-primary', 'wpforms'),\r\n};\r\n","import { Controller } from \"tonva-tools\";\r\nimport { CUq } from \"./uq\";\r\n\r\nexport abstract class ControllerUq extends Controller {\r\n    constructor(cUq: CUq, res:any) {\r\n        super(res);\r\n        this.cUq = cUq;\r\n    }\r\n    cUq: CUq;\r\n}\r\n","import {CenterApi as CenterApiBase} from 'tonva-tools';\r\n\r\n//\r\n\r\nexport class CenterApi extends CenterApiBase {\r\n    async userAppUnits(app:number):Promise<any[]> {\r\n        return await this.get('tie/user-app-units', {app:app});\r\n    }\r\n}\r\n\r\nexport const centerApi = new CenterApi('tv/', undefined);\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Page } from 'tonva-tools';\r\nimport { List, Muted, LMR } from 'tonva-react-form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../entities';\r\nimport { CSheet, SheetUI } from './cSheet';\r\n\r\nexport class VSheetMain extends VEntity<Sheet, SheetUI, CSheet> {\r\n    async open() {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    newClick = () => this.event('new');\r\n    schemaClick = () => this.event('schema'); \r\n    archivesClick = () => this.event('archives');\r\n    sheetStateClick = (state) => this.event('state', state);\r\n\r\n    renderState = (item:any, index:number) => {\r\n        let {state, count} = item;\r\n        if (count === 0) return null;\r\n        let badge = <span className=\"badge badge-success ml-5 align-self-end\">{count}</span>;\r\n        return <LMR className=\"px-3 py-2\" left={this.controller.getStateLabel(state)} right={badge} />;\r\n    }\r\n\r\n    protected view = observer(() => {\r\n        let list = this.controller.statesCount.filter(row=>row.count);\r\n        let right = <button className=\"btn btn-outline-primary\" onClick={this.archivesClick}>已归档</button>;\r\n        let templet:any;\r\n        if (this.isDev === true) {\r\n            templet = <button className=\"btn btn-primary mr-2\" color=\"primary\" onClick={this.schemaClick}>模板</button>;\r\n        }\r\n        return <Page header={this.label}>\r\n            <LMR\r\n                className=\"mx-3 my-2\"\r\n                right={right}>\r\n                <button className=\"btn btn-primary mr-2\" color=\"primary\" onClick={this.newClick}>新建</button>\r\n                {templet}\r\n            </LMR>\r\n            <List className=\"my-2\"\r\n                header={<Muted className=\"mx-3 my-1\">待处理{this.label}</Muted>}\r\n                none=\"[ 无 ]\"\r\n                items={list}\r\n                item={{render:this.renderState, onClick:this.sheetStateClick}} />\r\n        </Page>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport { FA } from 'tonva-react-form';\r\nimport { Sheet } from '../../entities';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { SheetUI, CSheet } from './cSheet';\r\n\r\nexport class VSheetNew extends VEntity<Sheet, SheetUI, CSheet> {\r\n    vForm: VForm;\r\n\r\n    async open(param?:any) {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    private onSubmit = async ():Promise<void> => {\r\n        let values = this.vForm.getValues();\r\n        let valuesWithBox = this.vForm.values;\r\n        //let ret = \r\n        await this.controller.onSave(values, valuesWithBox);\r\n        /*\r\n        this.ceasePage();\r\n        //this.openPage(this.finishedPage);\r\n        await this.controller.showSaved(ret);\r\n        */\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render()}\r\n    </Page>;\r\n}\r\n","import * as React from 'react';\r\nimport {List, Muted, LMR, EasyDate, FA} from 'tonva-react-form';\r\nimport { Sheet } from '../../entities';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CSheet, SheetUI, SheetData } from './cSheet';\r\n\r\nconst leftFlowStyle = {width: '8rem'};\r\n\r\nexport abstract class VSheetView extends VEntity<Sheet, SheetUI, CSheet> {\r\n    protected vForm: VForm;\r\n    protected sheetData: SheetData;\r\n    //data: any;\r\n    //state: string;\r\n    //flows:any[];\r\n\r\n    flowRow = (item:any, index:number):JSX.Element => {\r\n        let {date, user, preState, state, action} = item;\r\n        if (action === undefined) action = <><FA className=\"text-primary\" name=\"pencil-square-o\" /> 制单</>;\r\n        let to;\r\n        switch (state) {\r\n            case '$': break;\r\n            case '#': to = <><FA className=\"text-success\" name=\"file-archive-o\" /></>; break;\r\n            default: to = <><FA className=\"text-muted\" name=\"arrow-right\" /> &nbsp; {state}</>; break;\r\n        }\r\n        /*\r\n        return <div className=\"row\">\r\n            <div className=\"col-sm\"></div>\r\n            <div className=\"col-sm\"><div className=\"p-2\">{to}</div></div>\r\n            <div className=\"col-sm text-right\"><div className=\"p-2\"><Muted><EasyDate date={date} /></Muted></div></div>\r\n        </div>;\r\n        */\r\n        return <LMR \r\n            left={<div className=\"pl-3 py-2\" style={leftFlowStyle}>{action}</div>}\r\n            right={<div className=\"p-2\"><Muted><EasyDate date={date} /></Muted></div>}>\r\n            <div className=\"p-2\">{to}</div>\r\n        </LMR>;\r\n    }\r\n\r\n    protected sheetView = () => {\r\n        let {brief, flows} = this.sheetData;\r\n        let removed;\r\n        if (brief.state === '-')\r\n            removed = <div className=\"mx-3 my-2\" style={{color:'red'}}>本单据作废</div>;\r\n        return <div>\r\n            {removed}\r\n            {this.vForm.render()}\r\n    \r\n            <List header={<Muted className=\"mx-3 my-1\">流程</Muted>}\r\n                items={flows}\r\n                item={{render:this.flowRow}}/>\r\n        </div>;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport { VForm, FormMode } from '../form';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\n\r\nexport class VSheetEdit extends VSheetView { //VEntity<Sheet, SheetUI, CSheet> {\r\n    protected sheetData: SheetData;\r\n    async open(param: SheetData) {\r\n        this.sheetData = param;\r\n        this.vForm = this.createForm(this.onSubmit, param.data, FormMode.edit);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSubmit = async ():Promise<void> => {\r\n        let values = this.vForm.getValues();\r\n        await this.controller.saveSheet(values, this.vForm.values);\r\n        this.closePage();\r\n        this.returnCall(this.vForm.values);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render()}\r\n    </Page>;\r\n}\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport { nav, Page } from 'tonva-tools';\r\nimport { FA } from 'tonva-react-form';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\n\r\nexport class VSheetAction extends VSheetView { \r\n    async open(sheetData:SheetData) {\r\n        this.sheetData = sheetData;\r\n        //let {brief, data, flows} = await this.controller.getSheetData(sheetId);\r\n        //this.brief = brief;\r\n        //this.flows = flows;\r\n        //this.data = data;\r\n        //this.state = this.brief.state;\r\n        this.vForm = this.createForm(undefined, sheetData.data);\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    actionClick = async (action:any) => {\r\n        let {id, flow, state} = this.sheetData.brief;\r\n        let res = await this.controller.action(id, flow, state, action.name);\r\n        this.ceasePage();\r\n        this.openPage(this.acted);\r\n        //alert(jsonStringify(res));\r\n        //await this.backPage();\r\n    }\r\n\r\n    deleteClick = async () => {\r\n        alert('单据作废：程序正在设计中');\r\n    }\r\n\r\n    editClick = async () => {\r\n        //alert('修改单据：程序正在设计中');\r\n        let values = await this.controller.editSheet(this.sheetData);\r\n        this.vForm.setValues(values);\r\n    }\r\n\r\n    protected page = () => {\r\n        let {brief} = this.sheetData;\r\n        let {state, no} = brief;\r\n        let stateLabel = this.controller.getStateLabel(state);\r\n        let {states} = this.entity;\r\n        let s = states.find(v => v.name === state);\r\n        let actionButtons, startButtons;\r\n        if (s === undefined) {\r\n            let text:string, cn:string;\r\n            switch (state) {\r\n                default:\r\n                    text = '不认识的单据状态\\'' + state + '\\'';\r\n                    cn = 'text-info';\r\n                    break;\r\n                case '-': \r\n                    text = '已作废';\r\n                    cn = 'text-danger';\r\n                    break;\r\n                case '#':\r\n                    text = '已归档';\r\n                    cn = 'text-success';\r\n                    break;\r\n            }\r\n            actionButtons = <div className={classNames(cn)}>[{text}]</div>;\r\n        }\r\n        else {\r\n            actionButtons = <div className=\"flex-grow-1\">{s.actions.map((v,index) => \r\n                <button\r\n                    key={index}\r\n                    className=\"btn btn-primary mr-2\"\r\n                    onClick={()=>this.actionClick(v)}\r\n                >\r\n                    {this.controller.getActionLabel(state, v.name)}\r\n                </button>)}\r\n            </div>;\r\n            if (state === '$') {\r\n                startButtons = <div>\r\n                    <button className=\"btn btn-outline-info ml-2\" onClick={this.editClick}>修改</button>\r\n                    <button className=\"btn btn-outline-danger ml-2\" onClick={this.deleteClick}>作废</button>\r\n                </div>\r\n            }\r\n        };\r\n        return <Page header={this.label + ':' + stateLabel + '-' + no}>\r\n            <div className=\"mb-2\">\r\n                <div className=\"d-flex px-3 py-2 border-bottom bg-light\">\r\n                    {actionButtons}\r\n                    {startButtons}\r\n                </div>\r\n                <this.sheetView />\r\n            </div>\r\n        </Page>;\r\n    }\r\n\r\n    private acted = () => {\r\n        let {discription} = this.sheetData.brief;\r\n        return <Page header=\"已处理\" back=\"close\">\r\n            <div className=\"p-3 d-flex flex-column align-items-center\">\r\n                <div className=\"p-3\">{discription}</div>\r\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已处理！</div>\r\n                <div className=\"p-3\">\r\n                    <button className=\"btn btn-outline-info\" onClick={()=>this.backPage()}>返回</button>\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../entities';\r\nimport { SheetUI, CSheet } from './cSheet';\r\n\r\nexport class VSheetSchema extends VEntity<Sheet, SheetUI, CSheet> {\r\n    async open(param?:any) {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label + \"模板\"}>\r\n        <pre className=\"mx-3 my-2\">{this.entity.schemaStringify()}</pre>\r\n    </Page>;\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport {List, LMR, FA, EasyDate, Muted} from 'tonva-react-form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../entities';\r\nimport { SheetUI, CSheet } from './cSheet';\r\n\r\nexport class VArchives extends VEntity<Sheet, SheetUI, CSheet> {\r\n    list: any[];\r\n\r\n    async open() {\r\n        this.list = await this.entity.getArchives(undefined, 10);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    archiveClick = async (brief:any) => {\r\n        if (brief.processing===1) return;\r\n        this.event('archived', brief);\r\n    }\r\n    archiveRow = (row:any, index:number) => {\r\n        let {id, no, discription, date} = row;\r\n        let left = <>\r\n            {row.processing===1? '... ' : ''}\r\n            {row.no} &nbsp; {row.discription}\r\n        </>;\r\n        let right = <Muted><EasyDate date={date} /></Muted>;\r\n        return <LMR className=\"px-3 py-2\" left={left} right={right} />\r\n    }\r\n\r\n    protected view = () => {\r\n        return <Page header={'已归档' + this.label}>\r\n            <List items={this.list} item={{render:this.archiveRow, onClick:this.archiveClick}} />\r\n        </Page>;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { Page, nav } from 'tonva-tools';\r\nimport { List, Muted, FA, LMR, EasyDate } from 'tonva-react-form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../entities';\r\nimport { CSheet, SheetUI } from './cSheet';\r\n\r\nexport class VSheetList extends VEntity<Sheet, SheetUI, CSheet> {\r\n    protected row: (values) => JSX.Element;\r\n    stateName: string;\r\n    stateLabel: string;\r\n\r\n    async open(item:any) {\r\n        this.row = this.ui.listRow || this.rowContent;\r\n        this.stateName = item.state;\r\n        this.stateLabel = this.controller.getStateLabel(this.stateName);\r\n        //await this.controller.getStateSheets(this.stateName, 0, 10);\r\n        await this.controller.pageStateItems.first(this.stateName);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    rowClick = async (brief:any) => {\r\n        if (brief.processing===1) {\r\n            this.event('processing', brief.id);\r\n            return;\r\n        }\r\n        this.event('action', brief.id);\r\n    }\r\n\r\n    private onScrollBottom = () => {\r\n        console.log('onScrollBottom');\r\n        this.controller.pageStateItems.more();\r\n    }\r\n\r\n    protected rowContent = (row:any):JSX.Element => {\r\n        let {id, no, discription, date, processing} = row;\r\n        let left = <>            \r\n            {no} &nbsp; <Muted>{discription}</Muted> {processing===1? '...' : ''}\r\n        </>;\r\n        let right = <Muted><EasyDate date={date} /></Muted>;\r\n        return <LMR className=\"px-3 py-2\" left={left} right={right} />;\r\n    }\r\n\r\n    private renderRow = (row:any, index:number) => <this.row {...row} />\r\n\r\n    protected view = () => {\r\n        //let sheets = this.controller.stateSheets;\r\n        let {pageStateItems} = this.controller;\r\n        return <Page header={this.label + ' - ' + this.stateLabel} onScrollBottom={this.onScrollBottom}>\r\n            <List items={pageStateItems} item={{render:this.renderRow, onClick:this.rowClick}} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {Page} from 'tonva-tools';\r\nimport { VSheetView } from './vSheetView';\r\nimport { CSheet, SheetUI, SheetData } from './cSheet';\r\n\r\nexport interface State {\r\n    flows: any;\r\n    data: any;\r\n}\r\nexport class VArchived extends VSheetView {\r\n    //protected controller: CSheet;\r\n    //brief: any;\r\n\r\n    async open(sheetData:SheetData) {\r\n        this.sheetData = sheetData;\r\n        /*\r\n        let {brief, data, flows} = await this.controller.getArchived(inBrief.id);\r\n        this.brief = brief;\r\n        this.data = data;\r\n        this.flows = flows;\r\n        */\r\n        this.vForm = this.createForm(undefined, this.sheetData.data);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => {\r\n        let {brief} = this.sheetData;\r\n        return <Page header={this.label + ':' + '-' + brief.no}>\r\n            <this.sheetView />\r\n        </Page>;\r\n    };\r\n}\r\n","import { Sheet } from \"../../entities\";\r\nimport { SheetUI, CSheet } from \"./cSheet\";\r\nimport { VEntity } from \"../CVEntity\";\r\n\r\nexport abstract class VSheet extends VEntity<Sheet, SheetUI, CSheet> {\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport { FA } from 'tonva-react-form';\r\nimport { VSheet } from \"./vSheet\";\r\n\r\nexport class VSheetSaved extends VSheet {\r\n    private brief: any;\r\n    async open(brief?:any) {\r\n        this.brief = brief;\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    private restart = async () => {\r\n        this.ceasePage();\r\n        await this.event('new');\r\n    }\r\n\r\n    actionClick = async (action:any) => {\r\n        this.ceasePage();\r\n        let {id, flow, state} = this.brief;\r\n        let res = await this.controller.action(id, flow, state, action.name);\r\n        this.openPage(this.acted);\r\n    }\r\n\r\n    private buttons = <>\r\n        <button className=\"btn btn-outline-primary mr-3\" onClick={this.restart}>继续开单</button>\r\n        <button className=\"btn btn-outline-info\" onClick={()=>this.backPage()}>返回</button>\r\n    </>;\r\n\r\n    private view = () => {\r\n        let {states} = this.entity;\r\n        const state = '$';\r\n        let s = states.find(v => v.name === state);\r\n        let actionButtons = <>{s.actions.map((v,index) => \r\n            <button\r\n                key={index}\r\n                className=\"btn btn-primary mr-3\"\r\n                onClick={()=>this.actionClick(v)}\r\n            >\r\n                {this.controller.getActionLabel(state, v.name)}\r\n            </button>)}\r\n        </>;\r\n        return <Page header=\"已保存\" back=\"close\">\r\n            <div className=\"p-3 d-flex flex-column align-items-center\">\r\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已保存！系统尚未处理</div>\r\n                <div className=\"p-3\">\r\n                    {actionButtons}\r\n                    {this.buttons}\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    }\r\n\r\n    private acted = () => {\r\n        return <Page>\r\n            <div className=\"p-3 d-flex flex-column align-items-center\">\r\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已处理！</div>\r\n                <div className=\"p-3\">\r\n                    {this.buttons}\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { nav, Page } from 'tonva-tools';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\n\r\nexport class VSheetProcessing extends VSheetView { \r\n    async open(sheetData:SheetData) {\r\n        this.sheetData = sheetData;\r\n        //let {brief, data, flows} = await this.controller.getSheetData(sheetId);\r\n        //this.brief = brief;\r\n        //this.flows = flows;\r\n        //this.data = data;\r\n        //this.state = this.brief.state;\r\n        this.vForm = this.createForm(undefined, sheetData.data);\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    protected page = () => {\r\n        let {brief} = this.sheetData;\r\n        let {state, no} = brief;\r\n        let stateLabel = this.controller.getStateLabel(state);\r\n        return <Page header={this.label + ':' + stateLabel + '-' + no}>\r\n            <div className=\"mb-2\">\r\n                <div className=\"d-flex px-3 py-2 border-bottom bg-light\">\r\n                    正在处理中...\r\n                </div>\r\n                <this.sheetView />\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n","import { IObservableArray, observable } from \"mobx\";\r\nimport { TypeVPage, VPage, PageItems, postWsToTop } from 'tonva-tools';\r\nimport { Sheet, StateCount } from \"../../entities\";\r\nimport { CEntity, EntityUI, VEntity } from \"../CVEntity\";\r\nimport { VSheetMain } from \"./vMain\";\r\nimport { VSheetNew } from \"./vNew\";\r\nimport { VSheetEdit } from \"./vEdit\";\r\nimport { VSheetAction } from \"./vSheetAction\";\r\nimport { VSheetSchema } from \"./vSchema\";\r\nimport { VArchives } from \"./vArchives\";\r\nimport { VSheetList } from \"./vList\";\r\nimport { VArchived } from \"./vArchived\";\r\nimport { VSheetSaved } from \"./vSaved\";\r\nimport { VSheetProcessing } from \"./vSheetProcessing\";\r\n\r\nexport interface SheetActionUI {\r\n    label: string;\r\n}\r\n\r\nexport interface StateUI {\r\n    label: string;\r\n    actions: {[name:string]: SheetActionUI}\r\n}\r\n\r\nexport interface SheetUI extends EntityUI {\r\n    CSheet?: typeof CSheet;\r\n    states?: {[name:string]: StateUI};\r\n    main?: TypeVPage<CSheet>;\r\n    sheetNew?: TypeVPage<CSheet>;\r\n    sheetSaved?: TypeVPage<CSheet>;\r\n    sheetEdit?: TypeVPage<CSheet>;\r\n    sheetAction?: TypeVPage<CSheet>;\r\n    listRow?: (row:any) => JSX.Element;\r\n    sheetTitle?: (sheetValues:any, x:any) => string;      // 返回单据的描述\r\n}\r\n\r\nexport interface SheetData {\r\n    brief: any;\r\n    data: any;\r\n    flows: any[];\r\n}\r\n\r\nexport class CSheet extends CEntity<Sheet, SheetUI> {\r\n    statesCount:IObservableArray<StateCount> = observable.array<StateCount>([], {deep:true});\r\n    curState:string;\r\n    pageStateItems: PageItems<any>;\r\n\r\n    protected async internalStart() {\r\n        await this.loadStateSheetCount();\r\n        this.pageStateItems = this.entity.createPageStateItems();\r\n        await this.openVPage(this.VSheetMain);\r\n    }\r\n\r\n    protected async onMessage(msg: any):Promise<void> {\r\n        let {type, body, from, to, push} = msg;\r\n        if (type === 'sheet') this.onSheet(from, to, body);\r\n    }\r\n    private onSheet(from:number, to:number[], sheetData:any) {\r\n        let me = this.user.id;\r\n        let {id, preState, state} = sheetData;\r\n        console.log({$:'onMessage sheet', from:from, to:to.join(','), id:id, preState:preState, state:state, me:me, sheetData:sheetData})\r\n        if (from === me) {\r\n            this.sheetActPreState(id, preState);\r\n        }\r\n        if (to.find(v=>v===me) !== undefined) {\r\n            this.sheetActState(id, state, sheetData);\r\n        }\r\n    }\r\n    private sheetActPreState(id:number, preState:string) {\r\n        this.changeStateCount(preState, -1);\r\n        if (this.curState === undefined || this.curState !== preState) return;\r\n        /*\r\n        let index = this.stateSheets.findIndex(v => v.id === id);\r\n        if (index>=0) {\r\n            this.stateSheets.splice(index, 1);\r\n        }*/\r\n        let index = this.pageStateItems.items.findIndex(v => v.id === id);\r\n        if (index>=0) {\r\n            this.pageStateItems.items.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    private sheetActState(id:number, state:string, msg:any) {\r\n        this.changeStateCount(state, 1);\r\n        if (this.curState === undefined || this.curState !== state) return;\r\n        /*\r\n        if (this.stateSheets.findIndex(v => v.id === id) < 0) {\r\n            this.stateSheets.push(msg);\r\n        }\r\n        */\r\n        if (this.pageStateItems.items.findIndex(v => v.id === id) < 0) {\r\n            this.pageStateItems.items.push(msg);\r\n        }\r\n    }\r\n\r\n    private changeStateCount(state:string, delta:number) {\r\n        if (state === undefined) return;\r\n        let index = this.statesCount.findIndex(v => v.state === state);\r\n        console.log({$:'changeState', state: state, delta: delta, index: index});\r\n        if (index < 0) return;\r\n        let stateCount = this.statesCount[index];\r\n        stateCount.count += delta;\r\n        if (stateCount.count < 0) stateCount.count = 0;\r\n    }\r\n\r\n    protected get VSheetMain():TypeVPage<CSheet> {return (this.ui&&this.ui.main) || VSheetMain}\r\n    protected get VSheetNew(): TypeVPage<CSheet> {return this.ui.sheetNew || VSheetNew}\r\n    protected get VSheetSaved(): TypeVPage<CSheet> {return this.ui.sheetSaved || VSheetSaved}\r\n    protected get VSheetEdit(): TypeVPage<CSheet> {return this.ui.sheetEdit || VSheetEdit}\r\n    protected get VSheetSchema(): TypeVPage<CSheet> {return VSheetSchema}\r\n    protected get VArchives(): TypeVPage<CSheet> {return VArchives}\r\n    protected get VArchived(): TypeVPage<CSheet> {return VArchived}\r\n    protected get VSheetList(): TypeVPage<CSheet> {return VSheetList}\r\n    protected get VSheetAction(): TypeVPage<CSheet> {return this.ui.sheetAction || VSheetAction}\r\n    protected get VSheetProcessing(): TypeVPage<CSheet> {return VSheetProcessing}\r\n    protected async onEvent(type:string, value:any) {\r\n        let c: TypeVPage<CSheet>;\r\n        switch (type) {\r\n            default: return;\r\n            case 'new': c = this.VSheetNew; break;\r\n            case 'schema': c = this.VSheetSchema; break;\r\n            case 'archives': c = this.VArchives; break;\r\n            case 'state':\r\n                this.curState = value.state;\r\n                c = this.VSheetList;\r\n                break;\r\n            case 'archived':\r\n                await this.showArchived(value); return;\r\n            case 'action':\r\n                await this.showAction(value); return;\r\n            case 'processing':\r\n                await this.showProcessing(value); return;\r\n        }\r\n        await this.openVPage(c, value);\r\n    }\r\n\r\n    async startSheet(sheetId:number) {\r\n        if (await this.beforeStart() === false) return;\r\n        await this.onEvent('action', sheetId);\r\n    }\r\n\r\n    async showAction(sheetId:number) {\r\n        let sheetData:SheetData = await this.getSheetData(sheetId);\r\n        postWsToTop({\r\n            body: {\r\n                $type: 'msg',\r\n                action: '$sheet',\r\n                msg: {\r\n                    id: sheetId,\r\n                    uq: this.cUq.id,\r\n                    state: sheetData.brief.state\r\n                }\r\n            }\r\n        });\r\n        await this.openVPage(this.VSheetAction, sheetData);\r\n    }\r\n\r\n    async showProcessing(sheetId:number) {\r\n        let sheetData:SheetData = await this.getSheetData(sheetId);\r\n        await this.openVPage(this.VSheetProcessing, sheetData);\r\n    }\r\n\r\n    async editSheet(sheetData:SheetData):Promise<any> {\r\n        //alert('修改单据：程序正在设计中');\r\n        let values = await this.vCall(this.VSheetEdit, sheetData);\r\n        return values;\r\n    }\r\n\r\n    async showArchived(inBrief:any) {\r\n        let sheetData = await this.getArchived(inBrief.id);\r\n        await this.openVPage(this.VArchived, sheetData);\r\n    }\r\n\r\n    onSave = async (values:any, valuesWithBox:any):Promise<void> => {\r\n        //let values = this.vForm.getValues();\r\n        //let ret = await this.controller.saveSheet(values, this.vForm.values);\r\n        let ret = await this.saveSheet(values, valuesWithBox);\r\n        this.ceasePage();\r\n        //this.openPage(this.finishedPage);\r\n        await this.showSaved(ret);\r\n    }\r\n\r\n    async showSaved(sheetData:any) {\r\n        await this.openVPage(this.VSheetSaved, sheetData);\r\n    }\r\n\r\n    private getStateUI(stateName:string) {\r\n        let {states} = this.res;\r\n        if (states === undefined) return;\r\n        return states[stateName];\r\n    }\r\n    getStateLabel(stateName:string) {\r\n        let state = this.getStateUI(stateName);\r\n        let ret = (state && state.label) || stateName;\r\n        switch (ret) {\r\n            default: return ret;\r\n            case '$': return '新单';\r\n        }\r\n    }\r\n    getActionLabel(stateName:string, actionName:string) {\r\n        let state = this.getStateUI(stateName);\r\n        if (state === undefined) return actionName;\r\n        let actions = state.actions;\r\n        if (actions === undefined) return actionName;\r\n        let action = actions[actionName];\r\n        return (action && action.label) || actionName;\r\n    }\r\n\r\n    private async loadStateSheetCount():Promise<void> {\r\n        this.statesCount.clear();\r\n        let statesCount = await this.entity.stateSheetCount();\r\n        this.statesCount.splice(0, 0, ...statesCount);\r\n    }\r\n\r\n    async getSheetData(sheetId:number):Promise<SheetData> {\r\n        return await this.entity.getSheet(sheetId);\r\n    }\r\n\r\n    async getArchived(sheetId:number):Promise<SheetData> {\r\n        return await this.entity.getArchive(sheetId);\r\n    }\r\n\r\n    async saveSheet(values:any, valuesWithBox:any):Promise<any> {\r\n        let {sheetTitle} = this.ui;\r\n        let disc = sheetTitle === undefined? this.label : sheetTitle(valuesWithBox, this.x);\r\n        let ret = await this.entity.save(disc, values);\r\n        //let {id, state} = ret;\r\n        //if (id > 0) this.changeStateCount(state, 1);\r\n        return ret;\r\n    }\r\n\r\n    async action(id:number, flow:number, state:string, actionName:string):Promise<any> {\r\n        return await this.entity.action(id, flow, state, actionName);\r\n    }\r\n}\r\n","export * from './cSheet';\r\nexport * from './vSheet';\r\nexport * from './vMain';\r\nexport * from './vNew';\r\nexport * from './vEdit';\r\nexport * from './vList';\r\nexport * from './vSheetAction';\r\nexport * from './vSchema';\r\nexport * from './vArchived';\r\nexport * from './vSheetView';\r\n","import * as React from 'react';\r\nimport { TuidMain, Book, Entity } from '../../entities';\r\nimport { Page } from 'tonva-tools';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CBook, BookUI } from './cBook';\r\n\r\nexport class VBookMain extends VEntity<Book, BookUI, CBook> {\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        Book\r\n    </Page>;\r\n}\r\n","import { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Book } from \"../../entities\";\r\nimport { VBookMain } from \"./vBookMain\";\r\n\r\nexport interface BookUI extends EntityUI {\r\n    CBook?: typeof CBook;\r\n    main: typeof VBookMain,\r\n}\r\n\r\nexport class CBook extends CEntity<Book, BookUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VBookMain);\r\n    }\r\n\r\n    protected get VBookMain():typeof VBookMain {return VBookMain}\r\n}\r\n","import React from \"react\";\r\nimport { View } from \"tonva-tools\";\r\nimport { List, Muted } from \"tonva-react-form\";\r\nimport { Entity } from \"../../entities\";\r\nimport { CLink } from \"../link\";\r\nimport { CUq } from \"./cUq\";\r\n\r\nexport class VUq extends View<CUq> {\r\n    protected isSysVisible = false;\r\n    protected tuidLinks: CLink[];\r\n    protected mapLinks: CLink[];\r\n    protected sheetLinks: CLink[];\r\n    protected actionLinks: CLink[];\r\n    protected queryLinks: CLink[];\r\n    protected bookLinks: CLink[];\r\n    protected historyLinks: CLink[];\r\n    protected pendingLinks: CLink[];\r\n\r\n    constructor(cUq: CUq) {\r\n        super(cUq);\r\n        let {tuidArr, mapArr, sheetArr, actionArr, queryArr, bookArr, historyArr, pendingArr} = cUq.entities;\r\n        this.tuidLinks = tuidArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cTuidMain(v)));\r\n        this.mapLinks = mapArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cMap(v)));\r\n        this.sheetLinks = sheetArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cSheet(v)));\r\n        this.actionLinks = actionArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cAction(v)));\r\n        this.queryLinks = queryArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cQuery(v)));\r\n        this.bookLinks = bookArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cBook(v)));\r\n        this.historyLinks = historyArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cHistory(v)));\r\n        this.pendingLinks = pendingArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cPending(v)));\r\n    }\r\n    protected isVisible(entity: Entity):boolean {\r\n        return entity.sys !== true || this.isSysVisible;\r\n    }\r\n    render(param?:any) {\r\n        if (this.view === undefined) return <div>??? viewModel 必须定义 view ???</div>\r\n        return React.createElement(this.view);\r\n    }\r\n\r\n    protected view = () => {\r\n        let {res, uq, error} = this.controller;\r\n        let linkItem = {\r\n            render: (cLink:CLink, index:number):JSX.Element => cLink.render(), \r\n            onClick: undefined, \r\n        };\r\n        let lists = [\r\n            {\r\n                header: res.tuid || 'TUID',\r\n                items: this.tuidLinks,\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.map || 'MAP',\r\n                items: this.mapLinks,\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.sheet || 'SHEET',\r\n                items: this.sheetLinks\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.action || 'ACTION',\r\n                items: this.actionLinks\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.query || 'QUERY',\r\n                items: this.queryLinks\r\n            },\r\n            {\r\n                cn: 'mt-2 mb-4',\r\n                header: res.book || 'BOOK',\r\n                items: this.bookLinks\r\n            },\r\n            {\r\n                cn: 'mt-2 mb-4',\r\n                header: res.history || 'HISTORY',\r\n                items: this.historyLinks\r\n            },\r\n            {\r\n                cn: 'mt-2 mb-4',\r\n                header: res.pending || 'PENDING',\r\n                items: this.pendingLinks\r\n            }\r\n        ];\r\n        let content;\r\n        if (error !== undefined) {\r\n            content = <div className=\"p-3 text-danger\">连接错误: {error}</div>;\r\n        }\r\n        else {\r\n            content = lists.map(({cn, header, items},index) => items.length > 0 && <List\r\n                key={index}\r\n                className={cn}\r\n                header={<div className=\"px-3 py-1 bg-light\"><Muted>{header}</Muted></div>}\r\n                items={items}\r\n                item={linkItem} />\r\n            );\r\n        }\r\n        return <>\r\n            <div className=\"px-3 py-1 small\">{res.uq || uq}</div>\r\n            {content}\r\n        </>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { UqApi, Controller, UnitxApi, meInFrame, resLang, nav } from 'tonva-tools';\r\nimport { Entities, TuidMain, Action, Sheet, Query, Book, Map, Entity, Tuid, History, Pending } from '../../entities';\r\nimport { CLink } from '../link';\r\nimport { CBook, BookUI } from '../book';\r\nimport { CSheet, SheetUI } from '../sheet';\r\nimport { ActionUI, CAction } from '../action';\r\nimport { QueryUI, CQuery, CQuerySelect } from '../query';\r\nimport { CTuidMain, TuidUI, CTuid, CTuidInfo, CTuidSelect, CTuidEdit, CTuidList } from '../tuid';\r\nimport { MapUI, CMap } from '../map';\r\nimport { CEntity, EntityUI } from '../CVEntity';\r\nimport { PureJSONContent } from '../form/viewModel';\r\nimport { VUq } from './vUq';\r\nimport { CHistory, HistoryUI } from '../history';\r\nimport { CPending, PendingUI } from '../pending';\r\nimport { CApp } from '../CApp';\r\n\r\nexport type EntityType = 'sheet' | 'action' | 'tuid' | 'query' | 'book' | 'map' | 'history' | 'pending';\r\n\r\nexport interface UqUI {\r\n    CTuidMain?: typeof CTuidMain;\r\n    CTuidEdit?: typeof CTuidEdit;\r\n    CTuidList?: typeof CTuidList;\r\n    CTuidSelect?: typeof CTuidSelect;\r\n    CTuidInfo?: typeof CTuidInfo;\r\n    CQuery?: typeof CQuery;\r\n    CQuerySelect?: typeof CQuerySelect;\r\n    CMap?: typeof CMap;\r\n    CAction?: typeof CAction;\r\n    CSheet?: typeof CSheet;\r\n    CBook?: typeof CBook;\r\n    CHistory?: typeof CHistory;\r\n    CPending?: typeof CPending;\r\n    tuid?: {[name:string]: TuidUI};\r\n    sheet?: {[name:string]: SheetUI};\r\n    action?: {[name:string]: ActionUI};\r\n    map?: {[name:string]: MapUI};\r\n    query?: {[name:string]: QueryUI};\r\n    book?: {[name:string]: BookUI};    \r\n    history?: {[name:string]: HistoryUI};\r\n    pending?: {[name:string]: PendingUI};\r\n    res?: any;\r\n}\r\n\r\nfunction lowerPropertyName(entities: {[name:string]: EntityUI}) {\r\n    if (entities === undefined) return;\r\n    for (let i in entities) entities[i.toLowerCase()] = entities[i];\r\n}\r\n\r\nexport class CUq extends Controller /* implements Uq*/ {\r\n    private ui:any;\r\n    private CTuidMain: typeof CTuidMain;\r\n    private CTuidEdit: typeof CTuidEdit;\r\n    private CTuidList: typeof CTuidList;\r\n    private CTuidSelect: typeof CTuidSelect;\r\n    private CTuidInfo: typeof CTuidInfo;\r\n    private CQuery: typeof CQuery;\r\n    private CQuerySelect: typeof CQuerySelect;\r\n    private CMap: typeof CMap;\r\n    private CAction: typeof CAction;\r\n    private CSheet: typeof CSheet;\r\n    private CBook: typeof CBook;\r\n    private CHistory: typeof CHistory;\r\n    private CPending: typeof CPending;\r\n\r\n    constructor(cApp:CApp, uq:string, appId:number, uqId:number, access:string, ui:UqUI) {\r\n        super(resLang(ui.res));\r\n        this.cApp = cApp;\r\n        this.uq = uq;\r\n        this.id = uqId;\r\n        // 每一个ui都转换成小写的key的版本\r\n        lowerPropertyName(ui.tuid);\r\n        lowerPropertyName(ui.sheet);\r\n        lowerPropertyName(ui.map);\r\n        lowerPropertyName(ui.query);\r\n        lowerPropertyName(ui.action);\r\n        lowerPropertyName(ui.book);\r\n        lowerPropertyName(ui.history);\r\n        lowerPropertyName(ui.pending);\r\n        this.ui = ui;\r\n        this.CTuidMain = ui.CTuidMain || CTuidMain;\r\n        this.CTuidEdit = ui.CTuidEdit || CTuidEdit;\r\n        this.CTuidList = ui.CTuidList || CTuidList;\r\n        this.CTuidSelect = ui.CTuidSelect || CTuidSelect;\r\n        this.CTuidInfo = ui.CTuidInfo || CTuidInfo;\r\n        this.CQuery = ui.CQuery || CQuery;\r\n        this.CQuerySelect = ui.CQuerySelect || CQuerySelect;\r\n        this.CMap = ui.CMap || CMap;\r\n        this.CAction = ui.CAction || CAction;\r\n        this.CSheet = ui.CSheet || CSheet;\r\n        this.CBook = ui.CBook || CBook;\r\n        this.CHistory = ui.CHistory || CHistory;\r\n        this.CPending = ui.CPending || CPending;\r\n\r\n        let token = undefined;\r\n        let uqOwner:string, uqName:string;\r\n        let p = uq.split('/');\r\n        switch (p.length) {\r\n            case 1:\r\n                uqOwner = '$$$';\r\n                uqName = p[0];\r\n                break;\r\n            case 2:\r\n                uqOwner = p[0];\r\n                uqName = p[1];\r\n                break;\r\n            default:\r\n                console.log('uq must be uqOwner/uqName format');\r\n                return;\r\n        }\r\n\r\n        let hash = document.location.hash;\r\n        let baseUrl = hash===undefined || hash===''? \r\n            'debug/':'tv/';\r\n\r\n        let acc: string[];\r\n        if (access === null || access === undefined || access === '*') {\r\n            acc = [];\r\n        }\r\n        else {\r\n            acc = access.split(';').map(v => v.trim()).filter(v => v.length > 0);\r\n        }\r\n        let uqApi:UqApi;\r\n        if (uq === '$$$/$unitx') {\r\n            // 这里假定，点击home link之后，已经设置unit了\r\n            // 调用 UnitxApi会自动搜索绑定 unitx service\r\n            uqApi = new UnitxApi(meInFrame.unit);\r\n        }\r\n        else {\r\n            uqApi = new UqApi(baseUrl, uqOwner, uqName, acc, true);\r\n        }\r\n        this.entities = new Entities(this, uqApi, appId);\r\n    }\r\n\r\n    protected async internalStart() {\r\n    }\r\n\r\n    cApp:CApp;\r\n    uq: string;\r\n    id: number;\r\n    res: any;\r\n    entities:Entities;\r\n    error: string;\r\n    private schemaLoaded:boolean = false;\r\n\r\n    protected async loadEntites() {\r\n        await this.entities.loadAccess();\r\n    }\r\n\r\n    async loadSchema():Promise<string> {\r\n        try {\r\n            if (this.schemaLoaded === true) return;\r\n            await this.loadEntites();\r\n            if (this.id === undefined) this.id = this.entities.uqId;\r\n\r\n            for (let i in this.ui) {\r\n                let g = this.ui[i];\r\n                if (g === undefined) continue;\r\n                let {caption, collection} = g;\r\n                if (collection === undefined) continue;\r\n                for (let j in collection) {\r\n                    if (this.entities[i](j) === undefined) {\r\n                        console.warn(i + ':' + '\\'' + j + '\\' is not uq entity');\r\n                    }\r\n                }\r\n            }\r\n            this.schemaLoaded = true;\r\n            return;\r\n        }\r\n        catch(err) {\r\n            console.error(err);\r\n            return this.error = err;\r\n            //debugger;\r\n            //return err.message;\r\n        }\r\n    }\r\n\r\n    async getQuerySearch(name:string):Promise<Query> {\r\n        let query = this.entities.query(name);\r\n        if (query === undefined) \r\n            alert(`QUERY ${name} 没有定义!`);\r\n        else {\r\n            await query.loadSchema();\r\n            let {returns} = query;\r\n            if (returns.length > 1) {\r\n                alert(`QUERY ${name} 返回多张表, 无法做QuerySearch`);\r\n            }\r\n        }\r\n        return query;\r\n    }\r\n    getTuidPlaceHolder(tuid:Tuid) {\r\n        let {tuidPlaceHolder, entity} = this.res;\r\n        let {name} = tuid;\r\n        let type:string;\r\n        if (entity !== undefined) {\r\n            let en = entity[name];\r\n            if (en !== undefined) {\r\n                type = en.label;\r\n            }\r\n        }\r\n        return (tuidPlaceHolder || 'Select');\r\n    }\r\n    getNone() {\r\n        let {none} = this.res;\r\n        return none || 'none';\r\n    }\r\n    protected isSysVisible = false;\r\n    protected isVisible(entity: Entity):boolean {\r\n        return entity.sys !== true || this.isSysVisible;\r\n    }\r\n\r\n    async navSheet(sheetTypeId:number, sheetId:number) {\r\n        let sheet = this.entities.sheetFromTypeId(sheetTypeId);\r\n        if (sheet === undefined) {\r\n            alert('sheetTypeId ' + sheetTypeId + ' is not exists!');\r\n            return;\r\n        }\r\n        let cSheet = this.cSheet(sheet);\r\n        await cSheet.startSheet(sheetId);\r\n    }\r\n\r\n    sheet(entityName:string) {return this.entities.sheet(entityName);}\r\n    action(entityName:string) {return this.entities.action(entityName);}\r\n    query(entityName:string) {return this.entities.query(entityName);}\r\n    book(entityName:string) {return this.entities.book(entityName);}\r\n    map(entityName:string) {return this.entities.map(entityName);}\r\n    history(entityName:string) {return this.entities.history(entityName);}\r\n    pending(entityName:string) {return this.entities.pending(entityName);}\r\n    tuid(entityName:string) {return this.entities.tuid(entityName)}\r\n    tuidDiv(entityName:string, divName:string) {\r\n        let tuid = this.entities.tuid(entityName);\r\n        if (tuid === undefined) return;\r\n        let {divs} = tuid;\r\n        if (divs === undefined) return;\r\n        return divs[divName];\r\n    }\r\n\r\n    cSheetFromName(entityName:string):CSheet {\r\n        let entity = this.entities.sheet(entityName);\r\n        if (entity !== undefined) return this.cSheet(entity);\r\n    }\r\n    cActionFromName(entityName:string) {\r\n        let entity = this.entities.action(entityName);\r\n        if (entity !== undefined) return this.cAction(entity);\r\n    }\r\n    cQueryFromName(entityName:string) {\r\n        let entity = this.entities.query(entityName);\r\n        if (entity !== undefined) return this.cQuery(entity);\r\n    }\r\n    cBookFromName(entityName:string) {\r\n        let entity = this.entities.book(entityName);\r\n        if (entity !== undefined) return this.cBook(entity);\r\n    }\r\n    cMapFromName(entityName:string) {\r\n        let entity = this.entities.map(entityName);\r\n        if (entity !== undefined) return this.cMap(entity);\r\n    }\r\n    cHistoryFromName(entityName:string) {\r\n        let entity = this.entities.history(entityName);\r\n        if (entity !== undefined) return this.cHistory(entity);\r\n    }\r\n    cPendingFromName(entityName:string) {\r\n        let entity = this.entities.pending(entityName);\r\n        if (entity !== undefined) return this.cPending(entity);\r\n    }\r\n    cTuidMainFromName(entityName:string) {\r\n        let entity = this.entities.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidMain(entity);\r\n    }\r\n    cTuidEditFromName(entityName:string) {\r\n        let entity = this.entities.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidEdit(entity);\r\n    }\r\n    cTuidInfoFromName(entityName:string) {\r\n        let entity = this.entities.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidInfo(entity);\r\n    }\r\n\r\n    cTuidSelectFromName(entityName:string) {\r\n        let entity = this.entities.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidSelect(entity);\r\n    }\r\n\r\n    cFromName(entityType:EntityType, entityName:string): CEntity<Entity, EntityUI> {\r\n        switch (entityType) {\r\n            case 'sheet':\r\n                let sheet = this.entities.sheet(entityName);\r\n                if (sheet === undefined) return;\r\n                return this.cSheet(sheet);\r\n            case 'action':\r\n                let action = this.entities.action(entityName);\r\n                if (action === undefined) return;\r\n                return this.cAction(action);\r\n            case 'tuid':\r\n                let tuid = this.entities.tuid(entityName);\r\n                if (tuid === undefined) return;\r\n                return this.cTuidMain(tuid);\r\n            case 'query':\r\n                let query = this.entities.query(entityName);\r\n                if (query === undefined) return;\r\n                return this.cQuery(query);\r\n            case 'book':\r\n                let book = this.entities.book(entityName);\r\n                if (book === undefined) return;\r\n                return this.cBook(book);\r\n            case 'map':\r\n                let map = this.entities.map(entityName);\r\n                if (map === undefined) return;\r\n                return this.cMap(map);\r\n            case 'history':\r\n                let history = this.entities.history(entityName);\r\n                if (history === undefined) return;\r\n                return this.cHistory(history);\r\n            case 'pending':\r\n                let pending = this.entities.pending(entityName);\r\n                if (pending === undefined) return;\r\n                return this.cPending(pending);\r\n        }\r\n    }\r\n\r\n    linkFromName(entityType:EntityType, entityName:string) {\r\n        return this.link(this.cFromName(entityType, entityName));\r\n    }\r\n\r\n    private getUI<T extends Entity, UI extends EntityUI>(t:T):{ui:UI, res:any} {\r\n        let ui, res;\r\n        let {name, typeName} = t;\r\n        if (this.ui !== undefined) {\r\n            let tUI = this.ui[typeName];\r\n            if (tUI !== undefined) {\r\n                ui = tUI[name];\r\n            }\r\n        }\r\n        let {entity} = this.res;\r\n        if (entity !== undefined) {\r\n            res = entity[name];\r\n        }\r\n        return {ui: ui || {}, res: res || {} };\r\n    }\r\n\r\n    link(cEntity:CEntity<Entity, EntityUI>) {\r\n        return new CLink(cEntity);\r\n    }\r\n\r\n    get tuidLinks() {\r\n        return this.entities.tuidArr.filter(v => this.isVisible(v)).map(v => this.link(this.cTuidMain(v)));\r\n    }\r\n    cTuidMain(tuid:TuidMain):CTuidMain {\r\n        let {ui, res} = this.getUI<TuidMain, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidMain || this.CTuidMain)(this, tuid, ui, res);\r\n    }\r\n    cTuidEdit(tuid:TuidMain):CTuidEdit {\r\n        let {ui, res} = this.getUI<TuidMain, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidEdit || this.CTuidEdit)(this, tuid, ui, res);\r\n    }\r\n    cTuidList(tuid:TuidMain):CTuidList {\r\n        let {ui, res} = this.getUI<TuidMain, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidList || this.CTuidList)(this, tuid, ui, res);\r\n    }\r\n    cTuidSelect(tuid:Tuid):CTuidSelect {\r\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid.owner || tuid);\r\n        return new (ui && ui.CTuidSelect || this.CTuidSelect)(this, tuid, ui, res);\r\n    }\r\n    cTuidInfo(tuid:TuidMain):CTuidInfo {\r\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidInfo || this.CTuidInfo)(this, tuid, ui, res);\r\n    }\r\n\r\n    cSheet(sheet:Sheet/*, sheetUI?:SheetUI, sheetRes?:any*/):CSheet {\r\n        let {ui, res} = this.getUI<Sheet, SheetUI>(sheet);\r\n        //if (sheetUI !== undefined) ui = sheetUI;\r\n        //if (sheetRes !== undefined) res = sheetRes;\r\n        //return new (ui && ui.CSheet || this.CSheet)(this, sheet, sheetUI, sheetRes);\r\n        return new (ui && ui.CSheet || this.CSheet)(this, sheet, ui, res);\r\n    }\r\n    get sheetLinks() { \r\n        return this.entities.sheetArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cSheet(v))\r\n        });\r\n    }\r\n\r\n    cAction(action:Action):CAction {\r\n        let {ui, res} = this.getUI<Action, ActionUI>(action);\r\n        return new (ui && ui.CAction || this.CAction)(this, action, ui, res);\r\n    }\r\n    get actionLinks() { \r\n        return this.entities.actionArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cAction(v))\r\n        });\r\n    }\r\n\r\n    cQuery(query:Query):CQuery {\r\n        let {ui, res} = this.getUI<Query, QueryUI>(query);\r\n        return new (ui && ui.CQuery || this.CQuery)(this, query, ui, res);\r\n    }\r\n    cQuerySelect(queryName:string):CQuerySelect {\r\n        let query = this.entities.query(queryName);\r\n        if (query === undefined) return;\r\n        let {ui, res} = this.getUI<Query, QueryUI>(query);\r\n        return new (ui && ui.CQuerySelect || this.CQuerySelect)(this, query, ui, res);\r\n    }\r\n    get queryLinks() {\r\n        return this.entities.queryArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cQuery(v))\r\n        });\r\n    }\r\n    \r\n    cBook(book:Book):CBook {\r\n        let {ui, res} = this.getUI<Book, BookUI>(book);\r\n        return new (ui && ui.CBook || this.CBook)(this, book, ui, res);\r\n    }\r\n    get bookLinks() { \r\n        return this.entities.bookArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cBook(v))\r\n        });\r\n    }\r\n    \r\n    cHistory(history:History):CHistory {\r\n        let {ui, res} = this.getUI<History, HistoryUI>(history);\r\n        return new (ui && ui.CHistory || this.CHistory)(this, history, ui, res);\r\n    }\r\n    get historyLinks() { \r\n        return this.entities.historyArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cHistory(v))\r\n        });\r\n    }\r\n    \r\n    cPending(pending:Pending):CPending {\r\n        let {ui, res} = this.getUI<Pending, PendingUI>(pending);\r\n        return new (ui && ui.CPending || this.CPending)(this, pending, ui, res);\r\n    }\r\n    get pendingLinks() { \r\n        return this.entities.pendingArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cPending(v))\r\n        });\r\n    }\r\n    \r\n    cMap(map:Map):CMap {\r\n        let {ui, res} = this.getUI<Map, MapUI>(map);\r\n        return new (ui && ui.CMap || this.CMap)(this, map, ui, res);\r\n    }\r\n    get mapLinks() { \r\n        return this.entities.mapArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cMap(v));\r\n        });\r\n    }\r\n\r\n    getTuidContent(tuid:Tuid): React.StatelessComponent<any> {\r\n        let {owner} = tuid;\r\n        if (owner === undefined) {\r\n            let {ui} = this.getUI<Tuid, TuidUI>(tuid);\r\n            return (ui && ui.content) || PureJSONContent;\r\n        }\r\n        else {\r\n            let {ui} = this.getUI<Tuid, TuidUI>(owner);\r\n            return (ui && ui.divs && ui.divs[tuid.name].content) || PureJSONContent;\r\n        }\r\n    }\r\n\r\n    async showTuid(tuid:Tuid, id:number):Promise<void> {\r\n        let {owner} = tuid;\r\n        let c = this.cTuidInfo(owner || (tuid as TuidMain));\r\n        await c.start(id);\r\n    }\r\n\r\n    protected get VUq():typeof VUq {return VUq}\r\n\r\n    render() {\r\n        let v = new (this.VUq)(this);\r\n        return v.render();\r\n    }\r\n}\r\n\r\n","export * from './cUq';\r\nexport * from './vUq';","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport className from 'classnames';\r\nimport { List, LMR, FA } from 'tonva-react-form';\r\nimport { Page, nav } from 'tonva-tools';\r\nimport { tv } from '../../tools';\r\nimport { Map } from '../../entities';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CMap, MapItem, MapKey, MapUI } from './cMap';\r\nimport { PureJSONContent } from '../form/viewModel';\r\n\r\nexport class VMapMain extends VEntity<Map, MapUI, CMap> {\r\n    private isFrom: boolean;\r\n\r\n    async open(param?:any) {\r\n        this.isFrom = this.controller.isFrom;\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    itemRender = (item:MapItem, index:number) => {\r\n        return <this.ItemRow item={item} />;\r\n    }\r\n\r\n    private ItemRow = observer(({item}: {item:MapItem}) => {\r\n        let {tuid, box, children, isLeaf, keyIndex, values} = item;\r\n        let keyUI = this.controller.keyUIs[keyIndex];\r\n        let {content:keyContent, valuesContent, none:keyNone} = keyUI;\r\n        let add, remove;\r\n        if (this.isFrom === false) {\r\n            add = <button className=\"btn btn-link btn-sm\" onClick={()=>this.controller.addClick(item)}>\r\n                <FA name=\"plus\" />\r\n            </button>;\r\n            remove = <button className=\"btn btn-link btn-sm\" onClick={()=>this.controller.removeClick(item)}>\r\n                <FA className=\"text-info\" name=\"trash\" />\r\n            </button>;\r\n        }\r\n        let right;\r\n        if (isLeaf === false) {\r\n            if (keyIndex === 0)\r\n                right = add;\r\n            else\r\n                right = <>{remove} &nbsp; {add}</>;\r\n        }\r\n        else if (keyIndex > 0) {\r\n            right = remove;\r\n        }\r\n        let content, border, valuesView;\r\n        if (isLeaf === true) {\r\n            content = undefined; //<div className=\"ml-5\">leaf</div>;\r\n            if (values) {\r\n                //valuesView = null; // 现在不显示values content了\r\n                valuesView = (valuesContent || PureJSONContent)(values, this.x);\r\n            }\r\n        }\r\n        else {\r\n            border = \"border-bottom\";\r\n            let none = keyNone && keyNone(this.x);\r\n            content = <List \r\n                className=\"ml-4\" \r\n                items={children} \r\n                item={{onClick:undefined, render:this.itemRender}}\r\n                none={none} />\r\n        }\r\n        return <div className=\"d-flex flex-column\">\r\n            <LMR className={className('px-3', 'py-2', border)} \r\n                right={right}\r\n            >\r\n                <div className=\"py-1\">{tv(box, keyContent, this.x)}</div>\r\n                <div className=\"py-1 font-weight-bold\">{valuesView}</div>\r\n            </LMR>\r\n            {content}\r\n        </div>;\r\n    });\r\n\r\n    protected get view() { return () => <Page header={this.label}>\r\n            <List items={this.controller.items} item={{className:'my-2', onClick:undefined, render:this.itemRender}} />\r\n        </Page>\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { VEntity } from \"../CVEntity\";\r\nimport { MapUI, CMap } from \"./cMap\";\r\nimport { Map } from \"../../entities\";\r\nimport { Page } from \"tonva-tools\";\r\nimport { VForm } from '../form';\r\n\r\nexport class VInputValues extends VEntity<Map, MapUI, CMap> {\r\n    private vForm: VForm;\r\n\r\n    async open(param?:any) {\r\n        this.vForm = this.createForm(this.onValuesSubmit);\r\n        this.openPageElement(<this.view />);\r\n    }\r\n\r\n    private onValuesSubmit = async () => {\r\n        this.ceasePage();\r\n        let values = this.vForm.getValues();\r\n        this.returnCall(values);\r\n    }\r\n\r\n    private view = () => {\r\n        return <Page>\r\n            {this.vForm.render()}\r\n        </Page>\r\n    }\r\n}\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\nimport { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Map, Tuid, BoxId, Field, TuidMain, fieldDefaultValue } from \"../../entities\";\r\nimport { VMapMain } from \"./vMain\";\r\nimport { observable } from \"mobx\";\r\nimport { PureJSONContent } from '../form/viewModel';\r\nimport { VInputValues } from './inputValues';\r\n\r\nexport interface MapKey {\r\n    content: (values, x?:any) => JSX.Element;\r\n    valuesContent?: (values, x?:any) => JSX.Element;\r\n    none?: (x:any)=>string;\r\n}\r\n\r\nexport interface MapUI extends EntityUI {\r\n    CMap?: typeof CMap;\r\n    keys?: MapKey[],\r\n}\r\n\r\nexport class MapItem {\r\n    parent: MapItem;\r\n    tuid: Tuid;\r\n    box: BoxId;\r\n    isLeaf: boolean;\r\n    keyIndex:number;\r\n    children: MapItem[] = observable.array([], {deep: true});\r\n    values: any;\r\n    constructor(parent:MapItem, tuid:Tuid, box:BoxId, keyIndex:number) {\r\n        this.parent = parent;\r\n        this.tuid = tuid;\r\n        this.box = box;\r\n        this.keyIndex = keyIndex;\r\n        this.isLeaf = false;\r\n    }\r\n}\r\n\r\nexport class CMap extends CEntity<Map, MapUI> {\r\n    isFrom: boolean;\r\n    items:MapItem[];\r\n    keyFields: Field[];\r\n    keyUIs: MapKey[];\r\n\r\n    protected async internalStart() {\r\n        let {keys, schemaFrom} = this.entity;\r\n        this.isFrom = schemaFrom !== undefined;\r\n        let q = this.entity.queries.all;\r\n        let result = await q.query({});\r\n        //let data = await this.entity.unpackReturns(res);\r\n        let ret = result.ret;\r\n        let keysLen = keys.length;\r\n        this.keyUIs = _.clone(this.ui.keys || []);\r\n        this.keyFields = [];\r\n        let retFields = q.returns[0].fields;\r\n        for (let i=0; i<keysLen; i++) {\r\n            this.keyFields.push(retFields[i]);\r\n            if (i >= this.keyUIs.length) {\r\n                this.keyUIs.push({\r\n                    content: PureJSONContent,\r\n                });\r\n            }\r\n        }\r\n        this.items = observable([]);\r\n        let item:MapItem = undefined;\r\n        for (let r of ret) {\r\n            let newItem = this.addItem(item, r);\r\n            if (newItem !== undefined) {\r\n                this.items.push(newItem);\r\n                item = newItem;\r\n            }\r\n        }\r\n\r\n        await this.openVPage(this.VMapMain);\r\n    }\r\n\r\n    private createItem(parent:MapItem, tuid:Tuid, box:BoxId, keyIndex:number, values?:any) {\r\n        let item = new MapItem(parent, tuid, box, keyIndex);\r\n        if (keyIndex === this.keyFields.length - 1) {\r\n            item.isLeaf = true;\r\n            item.values = values;\r\n        }\r\n        return item;\r\n    }\r\n\r\n    addItem(item:MapItem, row:any):MapItem {\r\n        let ret:MapItem = undefined;\r\n        let keysLen = this.keyFields.length;\r\n        let p = item;\r\n        for (let i=0;i<keysLen;i++) {\r\n            let key = this.keyFields[i];\r\n            let {name} = key;\r\n            let tuid = key._tuid;\r\n            let val:BoxId = row[name];\r\n            if (val === undefined) break;\r\n            let {id} = val;\r\n            if (i === 0) {\r\n                if (id === 0) continue;\r\n                if (p === undefined || p.box.id !== id) {\r\n                    ret = p = this.createItem(undefined, tuid, val, i, row);\r\n                }\r\n                continue;\r\n            }\r\n            let {children, box} = p;\r\n            let len = children.length;\r\n            if (len > 0) {\r\n                let n = children[len-1];\r\n                if (n.box.id === id) {\r\n                    p = n;\r\n                    continue;\r\n                }\r\n            }\r\n            if (id > 0) {\r\n                children.push(p = this.createItem(p, tuid, val, i, row));\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    async searchOnKey(keyField:Field, param):Promise<number> {\r\n        let {_tuid, _ownerField} = keyField;\r\n        let cTuidSelect = this.cUq.cTuidSelect(_tuid);\r\n        let callParam = param;\r\n        if (_ownerField !== undefined) {\r\n            callParam = param[_ownerField.name];\r\n            if (typeof callParam === 'object') {\r\n                callParam = callParam.id;\r\n            }\r\n        }\r\n        let ret = await cTuidSelect.call(callParam);\r\n        return _tuid.getIdFromObj(ret);\r\n    }\r\n\r\n    addClick = async(item:MapItem) => {\r\n        let {keyIndex, children} = item;\r\n        let keysLen = this.keyFields.length;\r\n        let keysLast = keysLen-1;\r\n        let idx = keyIndex + 1;\r\n        if (idx >= keysLen) return;\r\n        let keyField = this.keyFields[idx];\r\n        let kn = keyField.name;\r\n        let tuid = keyField._tuid;\r\n        let searchParam = {} as any;\r\n        let data = {} as any;\r\n        for (let p=item;p!==undefined;p=p.parent) {\r\n            let {keyIndex:ki, box} = p;\r\n            let kn = this.keyFields[ki].name;\r\n            //searchParam[kn] = data['_' + kn] = box.id;\r\n            searchParam[kn] = data[kn] = box.id;\r\n        }\r\n\r\n        let id = await this.searchOnKey(keyField, searchParam);\r\n        if (id === undefined || id <= 0) return;\r\n        tuid.useId(id);\r\n        let idBox = tuid.boxId(id);\r\n        let arr1 = {} as any;\r\n        let values:any = {};\r\n        if (keyIndex+1===keysLast) {\r\n            tuid.useId(id);\r\n            //values[kn] = arr1['_' + kn] = idBox;\r\n            values[kn] = arr1[kn] = idBox;\r\n            if (this.entity.fields.length > 0) {\r\n                let ret = await this.vCall(VInputValues, data);\r\n                for (let i in ret) {\r\n                    //values[i] = arr1['_' + i] = ret[i];\r\n                    values[i] = arr1[i] = ret[i];\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            //values[kn] = data['_' + kn] = idBox;\r\n            values[kn] = data[kn] = idBox;\r\n            for (let i=idx+1;i<keysLast;i++) {\r\n                //data['_' + this.keyFields[i].name] = 0;\r\n                data[this.keyFields[i].name] = 0;\r\n            }\r\n            // 填map的key field 0 值\r\n            //arr1['_' + this.keyFields[keysLast].name] = 0;\r\n            arr1[this.keyFields[keysLast].name] = 0;\r\n            let {fields} = this.entity;\r\n            for (let f of fields) {\r\n                let {name, type, null:nullable} = f;\r\n                if (!(nullable === true)) {\r\n                    //arr1['_' + f.name] = fieldDefaultValue(type);\r\n                    arr1[f.name] = fieldDefaultValue(type);\r\n                }\r\n            }\r\n        }\r\n        data.arr1 = [arr1];\r\n        await this.entity.actions.add.submit(data);\r\n        let rowIndex = children.findIndex(v => v.box.id === id);\r\n        if (rowIndex < 0) {\r\n            children.push(this.createItem(item, tuid, idBox, idx, values));\r\n        }\r\n        else {\r\n            let {fields} = this.entity;\r\n            if (fields !== undefined && fields.length > 0) {\r\n                let row = children[rowIndex];\r\n                children.splice(rowIndex, 1);\r\n                row.values = values;\r\n                /*\r\n                for (let f of fields) {\r\n                    let {name:fn} = f;\r\n                    row.values[fn] = values[fn];\r\n                }*/\r\n                children.splice(rowIndex, 0, row);\r\n            }\r\n        }\r\n        this.removeCeased();\r\n    }\r\n\r\n    removeClick = async(item:MapItem) => {\r\n        let keyField = this.keyFields[item.keyIndex];\r\n        let tuid = keyField._tuid;\r\n        let cTuidMain = this.cUq.cTuidMain(tuid.Main);\r\n        let label = cTuidMain.getLable(tuid);\r\n        let confirmDelete:_.TemplateExecutor = \r\n            this.res.confirmDelete \r\n            || _.template('do you really want to remove ${label}?');\r\n        if (confirm(confirmDelete({label:label})) === false) return;\r\n        let map:Map = this.entity;\r\n        let data = {} as any;\r\n        let arr1 = data['arr1'] = [];\r\n        let v0 = {} as any;\r\n        arr1.push(v0);\r\n        for (let p=item; p!==undefined;p=p.parent) {\r\n            let ki=p.keyIndex;\r\n            //v0['_'+this.keyFields[ki].name] = p.box.id;\r\n            v0[this.keyFields[ki].name] = p.box.id;\r\n        }\r\n        let len = this.keyFields.length;\r\n        for (let i=item.keyIndex+1; i<len; i++) {\r\n            let k = this.keyFields[i];\r\n            //v0['_'+k.name] = -1;\r\n            v0[k.name] = -1;\r\n        }\r\n        await map.actions.del.submit(data);\r\n        let children = item.parent.children;\r\n        let index = children.findIndex(v => v === item);\r\n        if (index >= 0) children.splice(index, 1);\r\n    }\r\n\r\n    protected get VMapMain():typeof VMapMain {return VMapMain}\r\n}\r\n","export * from './cMap';\r\nexport * from './vMain';\r\n","import * as React from 'react';\r\nimport { TuidMain, History, Entity } from '../../entities';\r\nimport { Page } from 'tonva-tools';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CHistory, HistoryUI } from './cHistory';\r\n\r\nexport class VHistoryMain extends VEntity<History, HistoryUI, CHistory> {\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        History\r\n    </Page>;\r\n}\r\n","import { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { History } from \"../../entities\";\r\nimport { VHistoryMain } from \"./vHistoryMain\";\r\n\r\nexport interface HistoryUI extends EntityUI {\r\n    CHistory?: typeof CHistory;\r\n    main: typeof VHistoryMain,\r\n}\r\n\r\nexport class CHistory extends CEntity<History, HistoryUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VHistoryMain);\r\n    }\r\n\r\n    protected get VHistoryMain():typeof VHistoryMain {return VHistoryMain}\r\n}\r\n","export * from './cHistory';\r\nexport * from './vHistoryMain';\r\n","import * as React from 'react';\r\nimport { VPage, Page } from 'tonva-tools';\r\nimport { jsonStringify } from '../../tools';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CAction, ActionUI } from './cAction';\r\nimport { Action } from '../../entities';\r\n\r\nexport class VActionMain extends VEntity<Action, ActionUI, CAction> {\r\n    protected vForm: VForm;\r\n    protected returns: any;\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        this.openPage(this.mainPage);\r\n    }\r\n\r\n    private onSubmit = async () => {\r\n        let values = this.vForm.getValues();\r\n        this.returns = await this.controller.submit(values);\r\n        this.closePage();\r\n        this.openPage(this.resultPage);\r\n    }\r\n\r\n    protected mainPage = () => {\r\n        let {label} = this.controller;\r\n        return <Page header={label}>\r\n            {this.vForm.render('mx-3 my-2')}\r\n        </Page>;\r\n    }\r\n\r\n    protected resultPage = () => {\r\n        let {label} = this.controller;\r\n        return <Page header={label} back=\"close\">\r\n            完成！\r\n            <pre>\r\n                {jsonStringify(this.returns)}\r\n            </pre>\r\n        </Page>;\r\n    }\r\n}\r\n","import { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Action } from \"../../entities\";\r\nimport { VActionMain } from \"./vActionMain\";\r\n\r\nexport interface ActionUI extends EntityUI {\r\n    CAction?: typeof CAction;\r\n    //main: typeof VActionMain,\r\n}\r\n\r\nexport class CAction extends CEntity<Action, ActionUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VActionMain);\r\n    }\r\n\r\n    protected get VActionMain():typeof VActionMain {return VActionMain}\r\n\r\n    async submit(values:any) {\r\n        return this.entity.submit(values);\r\n    }\r\n}\r\n","export * from './cAction';\r\nexport * from './vActionMain';\r\n","import * as React from 'react';\r\nimport { TuidMain, Pending, Entity } from '../../entities';\r\nimport { Page } from 'tonva-tools';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CPending, PendingUI } from './cPending';\r\n\r\nexport class VPendingMain extends VEntity<Pending, PendingUI, CPending> {\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        pending\r\n    </Page>;\r\n}\r\n","import { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Pending } from \"../../entities\";\r\nimport { VPendingMain } from \"./vPendingMain\";\r\n\r\nexport interface PendingUI extends EntityUI {\r\n    CPending?: typeof CPending;\r\n    main: typeof VPendingMain,\r\n}\r\n\r\nexport class CPending extends CEntity<Pending, PendingUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VPendingMain);\r\n    }\r\n\r\n    protected get VPendingMain():typeof VPendingMain {return VPendingMain}\r\n}\r\n","export * from './cPending';\r\nexport * from './vPendingMain';\r\n","import * as React from 'react';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\n\r\nexport abstract class ItemEdit {\r\n    protected name: string;\r\n    protected itemSchema: ItemSchema;\r\n    protected uiItem:UiItem;\r\n    protected value: any;\r\n    protected label: string;\r\n\r\n    @observable protected isChanged: boolean = false;\r\n    protected newValue: any;\r\n\r\n    constructor(itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any) {\r\n        this.itemSchema = itemSchema;\r\n        this.uiItem = uiItem\r\n        this.value = value;\r\n        let {name} = itemSchema;\r\n        this.name = name;\r\n        this.label = label;\r\n    }\r\n    async start():Promise<any> {\r\n        return await this.internalStart();\r\n    }\r\n\r\n    protected abstract internalStart():Promise<any>;\r\n\r\n    async end():Promise<any> {\r\n        await this.internalEnd()\r\n    }\r\n\r\n    protected async internalEnd():Promise<void> {nav.pop()}\r\n}\r\n","\r\nimport {setCenterToken} from './uqApi';\r\nimport {WSChannel} from './wsChannel';\r\n\r\nexport const netToken = {\r\n    set(userId:number, token:string) {\r\n        setCenterToken(userId, token);\r\n        WSChannel.setCenterToken(token);\r\n    },\r\n    clear() {\r\n        setCenterToken(0, undefined);\r\n        WSChannel.setCenterToken(undefined);\r\n    }\r\n};\r\n","import {CenterApi} from '../net';\r\nimport {User, decodeUserToken} from '../user';\r\n//import { nav } from '../ui';\r\n\r\nexport class UserApi extends CenterApi {\r\n    async login(params: {user: string, pwd: string, guest: number}): Promise<any> {\r\n        //(params as any).device = nav.local.device.get();\r\n        let ret = await this.get('login', params);\r\n        switch (typeof ret) {\r\n            default: return;\r\n            case 'string': return decodeUserToken(ret);\r\n            case 'object':\r\n                let token = ret.token;\r\n                let user = decodeUserToken(token);\r\n                let {nick, icon} = ret;\r\n                if (nick) user.nick = nick;\r\n                if (icon) user.icon = icon;\r\n                return user;\r\n        }\r\n        // !== undefined) return decodeToken(token);\r\n    }\r\n    async register(params: {\r\n        nick:string, \r\n        user:string, \r\n        pwd:string,\r\n        country:number, \r\n        mobile:number, \r\n        email:string,\r\n        verify:string,\r\n    }): Promise<any>\r\n    {\r\n        return await this.post('register', params);\r\n    }\r\n\r\n    async setVerify(account:string, type:'mobile'|'email') {\r\n        return await this.post('set-verify', {account:account, type:type});\r\n    }\r\n\r\n    async checkVerify(account:string, verify:string) {\r\n        return await this.post('check-verify', {account:account, verify:verify});\r\n    }\r\n\r\n    async isExists(account:string) {\r\n        return await this.get('is-exists', {account:account});\r\n    }\r\n\r\n    async resetPassword(account:string, password:string, verify:string, type:'mobile'|'email') {\r\n        return await this.post('reset-password', {account:account, password, verify, type});\r\n    }\r\n    \r\n    async userSetProp(prop:string, value:any) {\r\n        await this.post('tie/user-set-prop', {prop:prop, value:value});\r\n    }\r\n}\r\n\r\nconst userApi = new UserApi('tv/user/', undefined);\r\n\r\nexport default userApi;\r\n","\r\nconst zero = '00000000000000';\r\nexport function left0(num:number, fix:number) {\r\n    if (num === undefined) return '';\r\n    let r = num.toString();\r\n    let len = fix - r.length;\r\n    if (len <= 0) return r;\r\n    return zero.substr(0, len) + r;\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport {User} from '../user';\r\nimport {nav} from './nav';\r\nimport {Page} from './page';\r\nimport { isDevelopment } from '../net';\r\n\r\nexport abstract class Controller {\r\n    readonly res: any;\r\n    readonly x: any;\r\n    icon: string|JSX.Element;\r\n    label:string;\r\n    readonly isDev:boolean = isDevelopment;\r\n    get user():User {return nav.user}\r\n    get isLogined():boolean {\r\n        let {user} = nav;\r\n        if (user === undefined) return false;\r\n        return user.id > 0;\r\n    }\r\n    constructor(res:any) {\r\n        this.res = res || {};\r\n        this.x = this.res.x || {};\r\n    }\r\n\r\n    private receiveHandlerId:number;\r\n    private disposer:()=>void;\r\n\r\n    private dispose() {\r\n        // message listener的清理\r\n        nav.unregisterReceiveHandler(this.receiveHandlerId);\r\n        this.onDispose();\r\n    }\r\n\r\n    protected onDispose() {\r\n    }\r\n\r\n    protected async openVPage(vp: new (coordinator: Controller)=>VPage<Controller>, param?:any):Promise<void> {\r\n        await (new vp(this)).open(param);\r\n    }\r\n\r\n    protected renderView(view: new (coordinator: Controller)=>View<Controller>, param?:any) {\r\n        return (new view(this)).render(param);\r\n    }\r\n\r\n    async event(type:string, value:any) {\r\n        await this.onEvent(type, value);\r\n    }\r\n\r\n    protected async onEvent(type:string, value:any) {\r\n    }\r\n\r\n    protected msg(text:string) {\r\n        alert(text);\r\n    }\r\n    protected errorPage(header:string, err:any) {\r\n        this.openPage(<Page header=\"App error!\">\r\n            <pre>\r\n                {typeof err === 'string'? err : err.message}\r\n            </pre>\r\n        </Page>);\r\n    }\r\n\r\n    protected onMessage(message:any):Promise<void> {\r\n        return;\r\n    }\r\n\r\n    private onMessageReceive = async (message:any):Promise<void> => {\r\n        await this.onMessage(message);\r\n    }\r\n\r\n    protected async beforeStart():Promise<boolean> {\r\n        /*\r\n        console.log('this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);');\r\n        this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);\r\n        console.log('return true');\r\n        */\r\n        return true;\r\n    }\r\n    protected registerReceiveHandler() {\r\n        this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);\r\n    }\r\n\r\n    protected abstract internalStart(param?:any):Promise<void>;\r\n    async start(param?:any):Promise<void> {\r\n        this.disposer = this.dispose.bind(this);\r\n        this.registerReceiveHandler();\r\n        let ret = await this.beforeStart();\r\n        if (ret === false) return;\r\n        await this.internalStart(param);\r\n    }\r\n\r\n    get isCalling():boolean {return this._resolve_$ !== undefined}\r\n\r\n    private _resolve_$:((value:any) => void)[];\r\n    async call(param?:any):Promise<any> {\r\n        if (this._resolve_$ === undefined) this._resolve_$ = [];\r\n        return new Promise<any> (async (resolve, reject) => {\r\n            this._resolve_$.push(resolve);\r\n            await this.start(param);\r\n        });\r\n    }\r\n\r\n    async vCall(vp: new (coordinator: Controller)=>VPage<Controller>, param?:any):Promise<any> {\r\n        if (this._resolve_$ === undefined) this._resolve_$ = [];\r\n        return new Promise<any> (async (resolve, reject) => {\r\n            this._resolve_$.push(resolve);\r\n            await (new vp(this)).open(param);\r\n        });\r\n    }\r\n\r\n    returnCall(value:any) {\r\n        if (this._resolve_$ === undefined) return;\r\n        let resolve = this._resolve_$.pop();\r\n        if (resolve === undefined) {\r\n            alert('the Coordinator call already returned, or not called');\r\n            return;\r\n        }\r\n        resolve(value);\r\n    }\r\n\r\n    openPage(page:JSX.Element) {\r\n        nav.push(page, this.disposer);\r\n        this.disposer = undefined;\r\n    }\r\n\r\n    replacePage(page:JSX.Element) {\r\n        nav.replace(page, this.disposer);\r\n        this.disposer = undefined;\r\n    }\r\n\r\n    backPage() {\r\n        nav.back();\r\n    }\r\n\r\n    closePage(level?:number) {\r\n        nav.pop(level);\r\n    }\r\n\r\n    ceasePage(level?:number) {\r\n        nav.ceaseTop(level);\r\n    }\r\n\r\n    removeCeased() {\r\n        nav.removeCeased();\r\n    }\r\n\r\n    regConfirmClose(confirmClose: ()=>Promise<boolean>) {\r\n        nav.regConfirmClose(confirmClose);\r\n    }\r\n}\r\n\r\n\r\nexport abstract class View<C extends Controller> {\r\n    protected controller: C;\r\n    protected readonly res: any;\r\n    protected readonly x: any;\r\n\r\n    constructor(controller: C) {\r\n        this.controller = controller;\r\n        this.res = controller.res;\r\n        this.x = controller.x;\r\n    }\r\n\r\n    protected get isDev() {return isDevelopment}\r\n\r\n    abstract render(param?:any): JSX.Element;\r\n\r\n    protected renderVm(vm: new (coordinator: Controller)=>View<C>, param?:any) {\r\n        return (new vm(this.controller)).render(param);\r\n    }\r\n\r\n    protected async openVPage(vp: new (coordinator: Controller)=>VPage<Controller>, param?:any):Promise<void> {\r\n        await (new vp(this.controller)).open(param);\r\n    }\r\n\r\n    protected async event(type:string, value?:any) {\r\n        /*\r\n        if (this._resolve_$_ !== undefined) {\r\n            await this._resolve_$_({type:type, value:value});\r\n            return;\r\n        }*/\r\n        await this.controller.event(type, value);\r\n    }\r\n\r\n    protected returnCall(value:any) {\r\n        this.controller.returnCall(value);\r\n    }\r\n\r\n    protected openPage(view: React.StatelessComponent<any>, param?:any) {\r\n        this.controller.openPage(React.createElement(view, param));\r\n    }\r\n\r\n    protected replacePage(view: React.StatelessComponent<any>, param?:any) {\r\n        this.controller.replacePage(React.createElement(view, param));\r\n    }\r\n\r\n    protected openPageElement(page: JSX.Element) {\r\n        this.controller.openPage(page);\r\n    }\r\n\r\n    protected replacePageElement(page: JSX.Element) {\r\n        this.controller.replacePage(page);\r\n    }\r\n\r\n    protected backPage() {\r\n        this.controller.backPage();\r\n    }\r\n\r\n    protected closePage(level?:number) {\r\n        this.controller.closePage(level);\r\n    }\r\n\r\n    protected ceasePage(level?:number) {\r\n        this.controller.ceasePage(level);\r\n    }\r\n\r\n    protected removeCeased() {\r\n        this.controller.removeCeased();\r\n    }\r\n\r\n    protected regConfirmClose(confirmClose: ()=>Promise<boolean>) {\r\n        this.controller.regConfirmClose(confirmClose);\r\n    }\r\n}\r\n\r\nexport abstract class VPage<C extends Controller> extends View<C> {\r\n    constructor(coordinator: C) {\r\n        super(coordinator);\r\n    }\r\n\r\n    abstract open(param?:any):Promise<void>;\r\n\r\n    render(param?:any):JSX.Element {return null;}\r\n}\r\n\r\nexport type TypeVPage<C extends Controller> = new (coordinator: C)=>VPage<C>;\r\n\r\n","export * from './schema';\r\nexport * from './uiSchema';\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {FormView, FormProps} from './formView';\r\n\r\nexport function tonvaDebug() {\r\n    let a = 0;\r\n}\r\n\r\nexport interface TonvaFormProps extends FormProps {\r\n    className?: string;\r\n    initValues?: any;\r\n}\r\n\r\n@observer \r\nexport class TonvaForm extends React.Component<TonvaFormProps, {}> {\r\n    formView: FormView;\r\n    constructor(props:TonvaFormProps) {\r\n        super(props);\r\n        this.formView = new FormView(this.props);\r\n    }\r\n    componentWillMount() {\r\n        this.formView.setInitValues(this.props.initValues);\r\n    }\r\n    debug() {\r\n        let s = null;\r\n    }\r\n    render() {\r\n        let {className, children, initValues} = this.props;\r\n        return <div className={className}>\r\n            {\r\n                children === undefined? \r\n                    this.formView.render() : \r\n                    <form onSubmit={this.formView.onSubmit}>{children}</form>\r\n            }\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nexport interface Action {\r\n    icon?: string;\r\n    caption?: string;\r\n    action?: () => void;\r\n}\r\n\r\nexport interface DropdownActionsProps {\r\n    icon?: string;\r\n    actions: Action[];\r\n    isRight?: boolean;\r\n}\r\n\r\nexport interface DropdownActionsState {\r\n    dropdownOpen: boolean;\r\n}\r\n\r\nexport class DropdownActions extends React.Component<DropdownActionsProps, DropdownActionsState> {\r\n    private menu: HTMLDivElement;\r\n    private button: HTMLElement;\r\n    constructor(props:DropdownActionsProps) {\r\n        super(props);\r\n        this.state = {\r\n            dropdownOpen: false\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        document.addEventListener('click', this.handleDocumentClick);\r\n        document.addEventListener('touchstart', this.handleDocumentClick);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('click', this.handleDocumentClick);\r\n        document.removeEventListener('touchstart', this.handleDocumentClick);\r\n    }\r\n\r\n    private handleDocumentClick = (evt:any) => {\r\n        if (this.state.dropdownOpen === false) return;\r\n        if (this.button && this.button.contains(evt.target)) return;\r\n        if (!this.menu) return;\r\n        //if (!this.menu.contains(evt.target)) \r\n        this.toggle();\r\n    }\r\n\r\n    private toggle = () => {\r\n        this.setState({\r\n            dropdownOpen: !this.state.dropdownOpen\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let {icon, actions, isRight} = this.props;\r\n        if (isRight === undefined) isRight = true;\r\n        let hasIcon = actions.some(v => v.icon!==undefined);\r\n        let {dropdownOpen} = this.state;\r\n        //isOpen={this.state.dropdownOpen} toggle={this.toggle}\r\n        return <div className=\"dropdown\">\r\n            <button ref={v=>this.button=v} className=\"cursor-pointer dropdown-toggle btn btn-sm\"\r\n                data-toggle=\"dropdown\"\r\n                aria-expanded={dropdownOpen}\r\n                onClick={this.toggle}>\r\n                <i className={classNames('fa', 'fa-'+(icon||'ellipsis-v'))} />\r\n            </button>\r\n            <div ref={v => this.menu=v} className={classNames({\"dropdown-menu\":true, \"dropdown-menu-right\":isRight, \"show\":dropdownOpen})}>\r\n                {\r\n                    actions.map((v,index) => {\r\n                        let {icon, caption, action} = v;\r\n                        if (icon === undefined && caption === undefined) \r\n                            return <div className=\"dropdown-divider\" />;\r\n                        let i:any;\r\n                        if (hasIcon === true) {\r\n                            if (icon !== undefined) icon = 'fa-' + icon;\r\n                            i = <><i className={classNames('fa', icon, 'fa-fw')} aria-hidden={true}></i>&nbsp; </>;\r\n                        }\r\n                        if (action === undefined) \r\n                            return <h6 className=\"dropdown-header\">{i} {caption}</h6>;\r\n                        return <a className=\"dropdown-item\" key={index} href=\"#\" onClick={(evt:React.MouseEvent<HTMLAnchorElement>)=>{ evt.preventDefault();action()}}>{i} {caption}</a>\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\n/*\r\nexport class DropdownActions extends React.Component<DropdownActionsProps, DropdownActionsState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dropdownOpen: false\r\n        };\r\n    }\r\n    private toggle = () => {\r\n        this.setState({\r\n            dropdownOpen: !this.state.dropdownOpen\r\n        });\r\n    }\r\n    render() {\r\n        let {icon, actions, isRight} = this.props;\r\n        if (isRight === undefined) isRight = true;\r\n        let hasIcon = actions.some(v => v.icon!==undefined);\r\n        return <UncontrolledButtonDropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\r\n            <DropdownToggle caret={true} size=\"sm\" className=\"cursor-pointer\">\r\n                <i className={classNames('fa', 'fa-'+(icon||'ellipsis-v'))} />\r\n            </DropdownToggle>\r\n            <DropdownMenu right={isRight}>\r\n                {actions.map((v,index) => {\r\n                    let {icon, caption, action} = v;\r\n                    if (icon === undefined && caption === undefined) \r\n                        return <div className=\"dropdown-divider\" />;\r\n                    let i;\r\n                    if (hasIcon === true) {\r\n                        if (icon !== undefined) icon = 'fa-' + icon;\r\n                        i = <><i className={classNames('fa', icon, 'fa-fw')} aria-hidden={true}></i>&nbsp; </>;\r\n                    }\r\n                    if (action === undefined) \r\n                        return <h6 className=\"dropdown-header\">{i} {caption}</h6>;\r\n                    return <DropdownItem key={index} onClick={action}>{i} {caption}</DropdownItem>\r\n                })}\r\n            </DropdownMenu>\r\n        </UncontrolledButtonDropdown>\r\n    }\r\n}\r\n*/","import * as React from 'react';\r\n\r\nexport interface EasyDateProps {\r\n    date: Date | string;\r\n}\r\n\r\nexport class EasyDate extends React.Component<EasyDateProps> {\r\n    render() {\r\n        let {date} = this.props;\r\n        if (!date) return null;\r\n        let d = (typeof date === 'string')? new Date(Date.parse(date)) : date;\r\n        let now = new Date();\r\n        let tick = now.getTime() - d.getTime();\r\n        let nDate=now.getDate();\r\n        let _date=d.getDate(), hour=d.getHours(), minute=d.getMinutes(), month=d.getMonth()+1;\r\n        let hm = hour + ((minute<10?':0':':') + minute);\r\n        if (tick < -24*3600*1000) return d.getFullYear()+'年'+month+'月'+_date+'日 ' + hm;\r\n        if (tick < 24*3600*1000) {\r\n            return _date!==nDate? \r\n                (tick < 0? '明天 ' : '昨天 ') + hm \r\n                : hm;\r\n        }\r\n        if (tick < 365*24*3600*1000) {\r\n            return month+'月'+_date+'日 ';\r\n        }\r\n        return d.getFullYear()+'年'+month+'月'+_date+'日';\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Image } from 'tonva-tools';\r\n\r\nexport interface MediaProps {\r\n    icon: string;\r\n    main: string|JSX.Element;\r\n    discription?: string | JSX.Element;\r\n    px?: number;\r\n    py?: number;\r\n}\r\n\r\nexport class Media extends React.Component<MediaProps> {\r\n    render() {\r\n        let {icon, main, discription, px, py} = this.props;\r\n        let disp:any;\r\n        if (typeof discription === 'string')\r\n            disp = <div>{discription}</div>;\r\n        else\r\n            disp = discription;\r\n        let cn = classNames(\r\n            'media', \r\n            px===undefined? 'px-0':'px-'+px, \r\n            py===undefined? 'py-2':'py-'+py);\r\n        return <div className={cn}>\r\n            <Image className=\"mr-3 w-4c h-4c\" src={icon} />\r\n            <div className=\"media-body\">\r\n                <h5 className=\"mt-0\">{main}</h5>\r\n                {disp}\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\n\r\nexport interface SearchBoxProps {\r\n    className?: string;\r\n    label?: string;\r\n    initKey?: string;\r\n    placeholder?: string;\r\n    buttonText?: string;\r\n    maxLength?: number;\r\n    size?: 'sm' | 'md' | 'lg';\r\n    inputClassName?: string;\r\n    onSearch: (key:string)=>Promise<void>;\r\n    onFocus?: ()=>void;\r\n    allowEmptySearch?: boolean;\r\n}\r\n\r\n/*\r\nexport interface SearchBoxState {\r\n    disabled: boolean;\r\n}*/\r\n\r\nexport class SearchBox extends React.Component<SearchBoxProps> { //}, SearchBoxState> {\r\n    private input: HTMLInputElement;\r\n    private key: string = null;\r\n    @observable private disabled: boolean;\r\n\r\n    private onChange = (evt: React.ChangeEvent<any>) => {\r\n        this.key = evt.target.value;\r\n        if (this.key !== undefined) {\r\n            this.key = this.key.trim();\r\n            if (this.key === '') this.key = undefined;\r\n        }\r\n        if (this.props.allowEmptySearch !== true) {\r\n            this.disabled = !this.key;\r\n        }\r\n    }\r\n    private onSubmit = async (evt: React.FormEvent<any>) => {\r\n        evt.preventDefault();\r\n        if (this.key === null) this.key = this.props.initKey || '';\r\n        if (this.props.allowEmptySearch !== true) {\r\n            if (!this.key) return;\r\n            if (this.input) this.input.disabled = true;\r\n        }\r\n        await this.props.onSearch(this.key);\r\n        if (this.input) this.input.disabled = false;\r\n    }\r\n    clear() {\r\n        if (this.input) this.input.value = '';\r\n    }\r\n    render() {\r\n        let {className, inputClassName, onFocus,\r\n            label, placeholder, buttonText, maxLength, size} = this.props;\r\n        let inputSize:string;\r\n        switch (size) {\r\n            default:\r\n            case 'sm': inputSize = 'input-group-sm'; break;\r\n            case 'md': inputSize = 'input-group-md'; break;\r\n            case 'lg': inputSize = 'input-group-lg'; break;\r\n        }\r\n        let lab:any;\r\n        if (label !== undefined) lab = <label className=\"input-group-addon\">{label}</label>;\r\n        return <form className={className} onSubmit={this.onSubmit} >\r\n            <div className={classNames(\"input-group\", inputSize)}>\r\n                {lab}\r\n                <input ref={v=>this.input=v} onChange={this.onChange}\r\n                    type=\"text\"\r\n                    name=\"key\"\r\n                    onFocus={onFocus}\r\n                    className={classNames('form-control', inputClassName || 'border-primary')}\r\n                    placeholder={placeholder}\r\n                    defaultValue={this.props.initKey}\r\n                    maxLength={maxLength} />\r\n                <div className=\"input-group-append\">\r\n                    <button className=\"btn btn-primary\"\r\n                        type=\"submit\"\r\n                        disabled={this.disabled}>\r\n                        <i className='fa fa-search' />\r\n                        <i className=\"fa\"/>\r\n                        {buttonText}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </form>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport className from 'classnames';\r\nimport {FormProps, FormRow, SubmitResult, FormView, TonvaForm} from '../form';\r\n\r\nexport interface Step {\r\n    formRows: FormRow[];\r\n    next: undefined | string | ((values:any) => string);    // 返回下一步的step名称或者直接就是名称\r\n    ex?: any;                                   // 每一步额外的参数\r\n}\r\n\r\nexport interface MultiStepProps {\r\n    className?: string;\r\n    header?: (step:Step, num:number) => JSX.Element; //name: step name, num: 第几步，1开始\r\n    footer?: (step:Step, num:number) => JSX.Element; //name: step name, num: 第几步，1开始\r\n    steps: {[name:string]: Step};\r\n    first: string;         // 第一步的名字\r\n    onSubmit: (values:any) => Promise<SubmitResult|undefined>;\r\n    submitButton?: string|JSX.Element;\r\n}\r\n\r\nexport interface StepView {\r\n    stepName: string;\r\n    step: Step;\r\n    props: FormProps;\r\n    //view: JSX.Element;\r\n}\r\nexport interface MultiStepState {\r\n    //num: number;\r\n    //step: Step;\r\n    //formView: FormView;\r\n    topView: StepView;\r\n    stepViews: StepView[];\r\n}\r\n\r\nexport class MultiStep extends React.Component<MultiStepProps, MultiStepState> {\r\n    private values: any = {};\r\n    private stepViews: StepView[] = [];\r\n    private topView: StepView;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            topView: undefined,\r\n            stepViews: [],\r\n        }\r\n        this.onPrev = this.onPrev.bind(this);\r\n        this.onNext = this.onNext.bind(this);\r\n    }\r\n    \r\n    private setStep(stepName: string) {\r\n        let step = this.props.steps[stepName];\r\n        if (step === undefined) return; //throw new Error('Unknown step name: ' + stepName);\r\n        if (this.topView !== undefined) this.stepViews.push(this.topView);\r\n        let otherButton, onOther;\r\n        if (this.stepViews.length > 0) {\r\n            otherButton = <ButtonConten prefix=\"undo\" text=\"上一步\" />;\r\n            onOther = this.onPrev;\r\n        }\r\n        let {header, footer} = this.props;\r\n        let btnContent = step.next === undefined?\r\n            {prefix: 'cloud-upload', text: this.props.submitButton || '提交'} :\r\n            {suffix: 'arrow-right', text: '下一步'}\r\n        let formProps = {\r\n            formRows: step.formRows,\r\n            submitButton: <ButtonConten {...btnContent} />,\r\n            onSubmit: this.onNext,\r\n            otherButton: otherButton,\r\n            onOther: onOther,\r\n        };\r\n        let num = this.stepViews.length + 1;\r\n        this.topView = {\r\n            stepName: stepName,\r\n            step: step,\r\n            props: formProps,\r\n        };\r\n        this.setState({\r\n            topView: this.topView,\r\n            stepViews: this.stepViews\r\n        });\r\n    }\r\n    componentWillMount() {\r\n        this.setStep(this.props.first);\r\n    }\r\n    private onPrev(values:any) {\r\n        _.assign(this.values, values);\r\n        this.topView = this.stepViews.pop();\r\n        this.setState({\r\n            topView: this.topView,\r\n            stepViews: this.stepViews\r\n        });\r\n    }\r\n    private onNext(values:any): Promise<SubmitResult|undefined> {\r\n        _.assign(this.values, values);\r\n        //let {num, step} = this.state;\r\n        let {next} = this.topView.step;\r\n        if (next === undefined) {\r\n            return this.props.onSubmit(this.values)\r\n        }\r\n        let nextStepName:string;\r\n        if (typeof next === 'string') {\r\n            nextStepName = next;\r\n        }\r\n        else {\r\n            nextStepName = next(this.values);\r\n        }\r\n        this.setStep(nextStepName);\r\n    }\r\n    render() {\r\n        let {className, header, footer} = this.props;\r\n        let {topView, stepViews} = this.state;\r\n        let {stepName, step} = topView;\r\n        let hidden = {visibility: 'hidden'};\r\n        let num = stepViews.length + 1;\r\n        return <div className={className}>\r\n            <div>\r\n                {header && header(step, num)}\r\n                <TonvaForm key={stepName} initValues={this.values} {...topView.props} />\r\n                {footer && footer(step, num)}\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst ButtonConten = (props:{prefix?:string, text?:string|JSX.Element, suffix?:string}) => {\r\n    let {prefix, text, suffix} = props;\r\n    let pIcon, sIcon;\r\n    if (prefix !== undefined) pIcon = <i className={className('fa', 'fa-' + prefix)} />;\r\n    if (suffix !== undefined) sIcon = <i className={className('fa', 'fa-' + suffix)} />;\r\n    return <React.Fragment>{pIcon} {props.text} {sIcon}</React.Fragment>;\r\n}\r\n    \r\n","import {observable, IObservableArray, computed} from 'mobx';\r\nimport {uid} from './uid';\r\n\r\nexport abstract class PageItems<T> {\r\n    constructor(itemObservable:boolean = false) {\r\n        this._items = observable.array<T>([], {deep:itemObservable});\r\n    }\r\n    private isFirst: boolean = true;\r\n    @observable loading: boolean = false;\r\n    @observable private beforeLoad: boolean = true;\r\n    @observable protected loaded: boolean = false;\r\n    protected _items:IObservableArray<T>;\r\n    @observable allLoaded: boolean = false;\r\n    @computed get items():IObservableArray<T> {\r\n        if (this.beforeLoad === true) return null;\r\n        if (this.loaded === false) return undefined;\r\n        return this._items;\r\n    }\r\n\r\n    @observable topDiv:string;\r\n    @observable bottomDiv:string;\r\n    scrollToTop() {\r\n        this.topDiv = '$$'+uid();\r\n    }\r\n    scrollToBottom() {\r\n        this.bottomDiv = '$$'+uid();\r\n    }\r\n\r\n    protected param: any;\r\n    protected firstSize = 100;\r\n    protected pageStart = undefined;\r\n    protected pageSize = 30;\r\n    protected appendPosition:'head'|'tail' = 'tail';\r\n\r\n    protected abstract async load(param:any, pageStart:any, pageSize:number):Promise<T[]>;\r\n    protected abstract setPageStart(item:T);\r\n\r\n    reset() {\r\n        this.isFirst = true;\r\n        this.beforeLoad = true;\r\n        this.loaded = false;\r\n        this.param = undefined;\r\n        this.allLoaded = false;\r\n        this._items.clear();\r\n        this.setPageStart(undefined);\r\n    }\r\n\r\n    append(item:T) {\r\n        if (this.appendPosition === 'tail')\r\n            this._items.unshift(item);\r\n        else\r\n            this._items.push(item);\r\n    }\r\n\r\n    async first(param:any):Promise<void> {\r\n        this.reset();\r\n        this.beforeLoad = false;\r\n        this.param = param;\r\n        await this.more();        \r\n    }\r\n\r\n    async more():Promise<void> {\r\n        if (this.allLoaded === true) return;\r\n        if (this.loading === true) return;\r\n        this.loading = true;\r\n        let pageSize = this.pageSize + 1;\r\n        if (this.isFirst === true) {\r\n            if (this.firstSize > this.pageSize) pageSize = this.firstSize+1;\r\n        }\r\n        let ret = await this.load(\r\n                this.param, \r\n                this.pageStart,\r\n                pageSize);\r\n        this.loading = false;\r\n        this.loaded = true;\r\n        let len = ret.length;\r\n        if (this.isFirst===true && len>this.firstSize ||\r\n            this.isFirst===false && len>this.pageSize)\r\n        {\r\n            this.allLoaded = false;\r\n            --len;\r\n            ret.splice(len, 1);\r\n        }\r\n        else {\r\n            this.allLoaded = true;\r\n        }\r\n        if (len === 0) {\r\n            this._items.clear();\r\n            return;\r\n        }\r\n        this.setPageStart(ret[len-1]);\r\n        if (this.appendPosition === 'tail')\r\n            this._items.push(...ret);\r\n        else\r\n            this._items.unshift(...ret.reverse());\r\n        this.isFirst = false;\r\n    }\r\n}\r\n","import {observable, computed} from 'mobx';\r\n\r\nexport interface Id {\r\n    id: number;\r\n}\r\n\r\nexport abstract class CacheIds<T extends Id> {\r\n    constructor(maxCount:number = 100) {\r\n        this.maxCount = maxCount;\r\n    }\r\n    private maxCount:number;\r\n    private arr:T[] = [];\r\n    @observable dict = new Map<number, T>();\r\n\r\n    loadIds(ids:number[]) {\r\n        let arr:number[] = [];\r\n        for (let id of ids) {\r\n            if (id === null) continue;\r\n            let item = this.dict.get(id);\r\n            if (item === undefined) {\r\n                arr.push(id);\r\n                item = {id:id} as T;\r\n                this.dict.set(id, item);\r\n            }\r\n        }                \r\n        this.loadId(arr);\r\n    }\r\n\r\n    get(id:number):T {\r\n        if (id === undefined || id === null) return null;\r\n        let item = this.dict.get(id);\r\n        if (item === undefined) {\r\n            this.dict.set(id, {id:id} as T);\r\n            this.loadId([id]);\r\n            item = this.dict.get(id);\r\n        }\r\n        return item;\r\n    }\r\n    private setItem(id:number, item:T) {\r\n        if (item === undefined) {\r\n            this.dict.set(id, null);\r\n            this.arr.push({id: id} as T);\r\n        }\r\n        else {\r\n            this.dict.set(id, item);\r\n            this.arr.push(item);\r\n        }\r\n        if (this.arr.length > this.maxCount) {\r\n            item = this.arr.shift();\r\n            this.dict.delete(item.id);\r\n        }\r\n    }\r\n    private async loadId(ids:number[]) {\r\n        let items = await this._loadIds(ids);\r\n        if (items === undefined) {\r\n            for (let id of ids) {\r\n                if (id === null) continue;\r\n                let item = await this._loadId(id);\r\n                this.setItem(id, item);\r\n            }\r\n        }\r\n        else {\r\n            for (let id of ids) {\r\n                let item = items.find(v => v.id === id);\r\n                this.setItem(id, item);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected abstract async _loadIds(ids:number[]):Promise<T[]>;\r\n    protected abstract async _loadId(id:number):Promise<T>;\r\n}\r\n","import _ from 'lodash';\r\nimport { Context } from '../context';\r\nimport { FormRes } from '../formRes';\r\n\r\nexport abstract class Rule {\r\n    abstract check(defy:string[], value:any):void;\r\n}\r\n\r\nexport type ContextRule = (context:Context)=>{[target:string]:string[]|string} | string[] | string;\r\nexport type FieldRule = (value:any) => string[] | string;\r\n\r\nexport class RuleCustom extends Rule {\r\n    private func: FieldRule;\r\n    constructor(func: FieldRule) {\r\n        super();\r\n        this.func = func;\r\n    }\r\n    check(defy:string[], value:any) {\r\n        let ret = this.func(value);\r\n        if (ret === undefined) return;\r\n        switch (typeof ret) {\r\n            case 'undefined': return;\r\n            case 'string': defy.push(ret as string); return;\r\n            default: defy.push(...ret); return;\r\n        }        \r\n    }\r\n}\r\n\r\nexport abstract class RulePredefined extends Rule {\r\n    protected res: FormRes;\r\n    constructor(res: FormRes) {\r\n        super();\r\n        this.res = res;\r\n    }\r\n}\r\n\r\nexport class RuleRequired extends RulePredefined {\r\n    check(defy:string[], value:any) {\r\n        switch (typeof value) {\r\n            default:\r\n            case 'boolean': return;\r\n            case 'object':\r\n                if (value !== null) return;\r\n                break;\r\n            case 'string':\r\n                if ((value as string).trim().length > 0) return;\r\n                break;\r\n            case 'number':\r\n                if ((value as number) !== NaN) return;\r\n                break;\r\n            case 'undefined':\r\n                break;\r\n        }\r\n        defy.push(this.res.required);\r\n    }\r\n}\r\n\r\nexport class RuleNum extends RulePredefined {\r\n    private minMsg: _.TemplateExecutor;\r\n    private maxMsg: _.TemplateExecutor;\r\n    protected min: number;\r\n    protected max: number\r\n    constructor(res: FormRes, min?: number, max?: number) {\r\n        super(res);\r\n        this.minMsg = _.template(res.min);\r\n        this.maxMsg = _.template(res.max);\r\n        this.min = min;\r\n        this.max = max;\r\n    }\r\n    check(defy:string[], value:any) {\r\n        if (value === undefined || value === null) return;\r\n        let n = Number(value);\r\n        if (n === NaN) {\r\n            defy.push(this.res.number);\r\n        }\r\n        else {\r\n            this.checkMore(defy, n);\r\n        }\r\n    }\r\n\r\n    protected checkMore(defy:string[], value: number) {\r\n        if (this.min !== undefined && Number(value) < this.min) {\r\n            defy.push(this.minMsg({min:this.min}));\r\n        }\r\n        if (this.max !== undefined && Number(value) > this.max) {\r\n            defy.push(this.maxMsg({max:this.max}));\r\n        }\r\n    }\r\n}\r\n\r\nexport class RuleInt extends RuleNum {\r\n    protected checkMore(defy:string[], n: number) {\r\n        super.checkMore(defy, n);\r\n        if (Number.isInteger(n) === false) {\r\n            defy.push(this.res.integer);\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { UiItem, ChangingHandler, ChangedHandler } from '../../schema';\r\nimport { FieldProps } from '../field';\r\nimport { Context } from '../context';\r\nimport { ItemSchema } from '../../schema';\r\nimport { Rule, RuleRequired, RuleCustom, FieldRule } from '../rules';\r\nimport { computed, observable, reaction } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport abstract class Widget {\r\n    protected name: string;\r\n    protected context: Context;\r\n    protected fieldProps:FieldProps;\r\n    protected children: React.ReactNode;\r\n    protected itemSchema: ItemSchema;\r\n    protected ui: UiItem;\r\n    protected defaultValue: any;\r\n    protected value: any;\r\n    protected rules: Rule[];\r\n    @observable protected errors: string[] = [];\r\n    @observable protected contextErrors: string[] = [];\r\n    @computed protected get hasError():boolean {return (this.errors.length + this.contextErrors.length)>0}\r\n    protected readOnly:boolean;\r\n    protected disabled:boolean;\r\n    @observable visible:boolean;\r\n\r\n    constructor(context:Context, itemSchema:ItemSchema, fieldProps:FieldProps, children: React.ReactNode) {\r\n        this.context = context;\r\n        let {name} = itemSchema;\r\n        this.name = name;\r\n        this.itemSchema = itemSchema;\r\n        this.fieldProps = fieldProps;\r\n        this.children = children;\r\n        this.ui = context.getUiItem(name);\r\n        if (this.ui === undefined) {\r\n            this.readOnly = false;\r\n            this.disabled = false;\r\n            this.visible = true;\r\n        }\r\n        else {\r\n            let {readOnly, disabled, visible} = this.ui;\r\n            this.readOnly = (readOnly === true);\r\n            this.disabled = (disabled === true);\r\n            this.visible = !(visible === false);            \r\n        }\r\n        this.value = this.defaultValue =  context.getValue(name); //defaultValue;\r\n        this.init();\r\n    }\r\n\r\n    protected init() {\r\n        this.rules = [];\r\n        if (this.itemSchema.required === true) {\r\n            this.rules.push(new RuleRequired(this.context.form.res));\r\n        }\r\n        this.buildRules();\r\n        if (this.ui === undefined) return;\r\n        let {rules} = this.ui;\r\n        if (rules === undefined) return;\r\n        if (Array.isArray(rules) === false) {\r\n            this.rules.push(new RuleCustom(rules as FieldRule));\r\n            return;\r\n        }\r\n        for (let rule of rules as FieldRule[]) {\r\n            this.rules.push(new RuleCustom(rule));\r\n        }\r\n    }\r\n\r\n    protected buildRules() {\r\n    }\r\n\r\n    checkRules() {\r\n        let defy:string[] = [];\r\n        for (let r of this.rules) r.check(defy, this.value);\r\n        if (defy.length === 0) {\r\n            this.context.removeErrorWidget(this);\r\n        }\r\n        else {\r\n            this.context.addErrorWidget(this);\r\n            this.errors.push(...defy);\r\n        }\r\n    }\r\n\r\n    @computed get isOk() {\r\n        return this.errors.length ===0;\r\n    }\r\n\r\n    setError(err:string | string[]) {\r\n        if (err === undefined) return;\r\n        if (typeof err === 'string') this.errors.push(err);\r\n        else this.errors.push(...err);\r\n    }\r\n\r\n    setContextError(err:string | string[]) {\r\n        if (err === undefined) return;\r\n        if (typeof err === 'string') this.contextErrors.push(err);\r\n        else this.contextErrors.push(...err);\r\n    }\r\n\r\n    clearError() {\r\n        this.errors.splice(0);\r\n    }\r\n\r\n    clearContextError() {\r\n        this.contextErrors.splice(0);\r\n    }\r\n\r\n    protected parse(value:any):any {return value}\r\n\r\n    protected setElementValue(value:any) {}\r\n    protected setDataValue(value:any) {\r\n        if (this.isChanging === true) return;\r\n        this.context.initData[this.name] = this.value = this.parse(value);\r\n    }\r\n\r\n    setValue(value:any) {\r\n        if (this.isChanging === true) return;\r\n        //this.setDataValue(value);\r\n        //this.setElementValue(value);\r\n        this.changeValue(value, false);\r\n    }\r\n\r\n    getValue() {\r\n        return this.context.getValue(this.name);\r\n    }\r\n\r\n    getReadOnly():boolean {return this.readOnly}\r\n    getDisabled():boolean {return this.disabled}\r\n    getVisible():boolean {return this.visible}\r\n    setReadOnly(value:boolean) {this.readOnly = value}\r\n    setDisabled(value:boolean) {this.disabled = value}\r\n    setVisible(value:boolean) {this.visible = value}\r\n\r\n    private isChanging: boolean;\r\n    protected onInputChange = (evt: React.ChangeEvent<any>) => {\r\n        this.changeValue(evt.target.value, true);\r\n    }\r\n\r\n    protected changeValue(newValue: any, fromElement: boolean) {\r\n        let prev = this.value;\r\n        let onChanging: ChangingHandler;\r\n        let onChanged: ChangedHandler;\r\n        if (this.ui !== undefined) {\r\n            onChanging = this.ui.onChanging;\r\n            onChanged = this.ui.onChanged;\r\n        }\r\n        let allowChange = true;\r\n        if (onChanging !== undefined) {\r\n            this.isChanging = true;\r\n            allowChange = onChanging(this.context, this.value, prev);\r\n            this.isChanging = false;\r\n        }\r\n        if (allowChange === true) {\r\n            this.setDataValue(newValue);\r\n            if (fromElement !== true) this.setElementValue(newValue);\r\n            if (onChanged !== undefined) {\r\n                this.isChanging = true;\r\n                onChanged(this.context, this.value, prev);\r\n                this.isChanging = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    protected get className():string {\r\n        let fieldClass:string;\r\n        if (this.context.inNode === false) fieldClass = 'form-control';\r\n        return classNames(fieldClass, this.context.form.FieldClass, this.ui && this.ui.className);\r\n    }\r\n\r\n    protected abstract render():JSX.Element;\r\n\r\n    container = observer(():JSX.Element => {\r\n        if (this.visible === false) return null;\r\n        let {form, inNode} = this.context;\r\n        if (inNode === true) return this.render();\r\n        let label:any;\r\n        if (this.ui === undefined) {\r\n            label = this.name;\r\n        }\r\n        else {\r\n            let uiLabel = this.ui.label;\r\n            if (uiLabel === null) label = null;\r\n            label = uiLabel || this.name;\r\n        }\r\n        if (this.itemSchema.required === true && form.props.requiredFlag !== false) {\r\n            if (label !== null) label = <>{label}&nbsp;<span className=\"text-danger\">*</span></>;\r\n        }\r\n        return form.FieldContainer(label, this.render());\r\n    })\r\n\r\n    protected renderTemplet():JSX.Element | undefined {\r\n        if (this.children !== undefined) {\r\n            return <>{this.children}</>;\r\n        }\r\n        if (this.ui === undefined) return undefined;\r\n        let {Templet} = this.ui;\r\n        if (typeof Templet === 'function') return Templet(this.value);\r\n        return Templet;\r\n    }\r\n\r\n    protected renderErrors() {\r\n        let errorList:string[] = [...this.errors, ...this.contextErrors];\r\n        if (errorList.length === 0) return null;\r\n        let {inNode} = this.context;\r\n        let tag = inNode === true? 'span' : 'div';\r\n        return errorList.map(err => React.createElement(tag, \r\n            {\r\n                key: err, \r\n                className: 'text-danger d-inline-block my-2 ml-3'\r\n            },\r\n            <><i className=\"fa fa-exclamation-circle\" /> &nbsp;{err}</>\r\n        ));\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiTextItem } from '../../schema';\r\nimport { StringSchema } from '../../schema';\r\n\r\nexport class TextWidget extends Widget {\r\n    protected inputType = 'text';\r\n    protected ui: UiTextItem;\r\n    protected input: HTMLInputElement;\r\n\r\n    protected setElementValue(value:any) {\r\n        if (this.input === null) return;\r\n        this.input.value = value;\r\n    }\r\n    protected get placeholder() {return (this.ui && this.ui.placeholder) || this.name}\r\n    protected onKeyDown: (evt:React.KeyboardEvent<HTMLInputElement>)=>void;\r\n\r\n    protected onBlur(evt: React.FocusEvent<any>) {\r\n        this.onInputChange(evt);\r\n        this.checkRules();\r\n        this.context.checkContextRules();\r\n    }\r\n    protected onFocus(evt: React.FocusEvent<any>) {\r\n        this.clearError();\r\n        this.context.removeErrorWidget(this);\r\n        this.context.removeErrors();\r\n    }\r\n    protected onChange(evt: React.ChangeEvent<any>) {\r\n    }\r\n\r\n    setReadOnly(value:boolean) {\r\n        if (this.input === null) return;\r\n        this.input.readOnly = this.readOnly = value;\r\n    }\r\n    setDisabled(value:boolean) {\r\n        if (this.input === null) return;\r\n        this.input.disabled = this.disabled = value;\r\n    }\r\n\r\n    render() {\r\n        let renderTemplet = this.renderTemplet();\r\n        if (renderTemplet !== undefined) return renderTemplet;\r\n        let cn = {\r\n            //'form-control': true,\r\n        };\r\n        if (this.hasError === true) {\r\n            cn['is-invalid'] = true;\r\n        }\r\n        else {\r\n            cn['required-item'] = this.itemSchema.required === true;\r\n        }\r\n        return <><input ref={input=>this.input = input}\r\n            className={classNames(this.className, cn)}\r\n            type={this.inputType}\r\n            defaultValue={this.value}\r\n            onChange={(evt: React.ChangeEvent<any>) => this.onChange(evt)}\r\n            placeholder={this.placeholder}\r\n            readOnly={this.readOnly}\r\n            disabled={this.disabled}\r\n            onKeyDown = {this.onKeyDown}\r\n            onFocus = {(evt: React.FocusEvent<any>) => this.onFocus(evt)}\r\n            onBlur={(evt: React.FocusEvent<any>) => this.onBlur(evt)}\r\n            maxLength={(this.itemSchema as StringSchema).maxLength} />\r\n            {this.renderErrors()}\r\n        </>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { TextWidget } from './textWidget';\r\nimport { RuleNum, RuleInt } from '../rules';\r\nimport { NumBaseSchema } from '../../schema';\r\n\r\nexport class NumberWidget extends TextWidget {\r\n    protected inputType = 'number';\r\n    protected itemSchema: NumBaseSchema;\r\n\r\n    protected buildRules() {\r\n        super.buildRules();\r\n        let res = this.context.form.res;\r\n        let {min, max} = this.itemSchema;\r\n        this.rules.push(\r\n            this.itemSchema.type === 'integer'?\r\n                new RuleNum(res, min, max) :\r\n                new RuleInt(res, min, max)\r\n        );\r\n        /*\r\n        if (this.itemSchema.type === 'integer') {\r\n            this.rules.push(new RuleInt);\r\n        }\r\n        let {min, max} = this.itemSchema;\r\n        if (min !== undefined) this.rules.push(new RuleMin(min));\r\n        if (max !== undefined) this.rules.push(new RuleMax(max));\r\n        */\r\n    }\r\n\r\n    protected parse(value:any):any {\r\n        if (value === undefined || value === null) return;\r\n        return Number(value);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { NumberWidget } from './numberWidget';\r\n\r\nexport class UpdownWidget extends NumberWidget {\r\n    protected inputType = 'number';\r\n\r\n    protected isValidKey(key:number):boolean {\r\n        return key===46 || key===8 || key===37 || key===39\r\n            || key>=48 && key<=57\r\n            || key>=96 && key<=105\r\n            || key===109 || key===189;\r\n    }\r\n    \r\n    protected onKeyDown = (evt:React.KeyboardEvent<HTMLInputElement>) => {\r\n        let key = evt.keyCode;\r\n        event.returnValue = this.isValidKey(key);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { TextWidget } from './textWidget';\r\n\r\nexport class DateWidget extends TextWidget {\r\n    protected inputType = 'date';\r\n}\r\n\r\nexport class DateTimeWidget extends TextWidget {\r\n    protected inputType = 'datetime';\r\n}\r\n\r\nexport class TimeWidget extends TextWidget {\r\n    protected inputType = 'time';\r\n}\r\n\r\nexport class MonthWidget extends TextWidget {\r\n    protected inputType = 'month';\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiCheckItem } from '../../schema';\r\n\r\nexport class CheckBoxWidget extends Widget {\r\n    protected input: HTMLInputElement;\r\n    protected ui: UiCheckItem;\r\n    protected trueValue: any;\r\n    protected falseValue: any;\r\n\r\n    protected init() {\r\n        super.init();\r\n        if (this.ui !== undefined) {\r\n            let {trueValue, falseValue} = this.ui;\r\n            if (trueValue === undefined) this.trueValue = true;\r\n            else this.trueValue = trueValue;\r\n            if (falseValue === undefined) this.falseValue = false;\r\n            else this.falseValue = falseValue;\r\n        }\r\n        else {\r\n            this.trueValue = true;\r\n            this.falseValue = false;\r\n        }\r\n    }\r\n    protected setElementValue(value:any) {\r\n        this.input.checked = value === this.trueValue;\r\n    }\r\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\r\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\r\n\r\n    protected onInputChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setDataValue(evt.target.checked === true? this.trueValue : this.falseValue);\r\n    }\r\n\r\n    protected onClick = () => {\r\n        this.context.removeErrors();\r\n    }\r\n\r\n    render() {\r\n        let cn = classNames(this.className, 'form-check-inline p-0');\r\n        let input = <input\r\n            ref={(input)=>this.input = input}\r\n            className={'align-self-center'}\r\n            type=\"checkbox\"\r\n            defaultChecked={this.defaultValue} \r\n            onChange={this.onInputChange}\r\n            onClick={this.onClick} />;\r\n        if (this.context.inNode === true) {\r\n            return <label className={cn}>\r\n                {input} {(this.ui&&this.ui.label) || this.name}\r\n            </label>\r\n        }\r\n        else {\r\n            return <div className={cn}>\r\n                <label className=\"w-100 h-100 mb-0 d-flex justify-content-center\">{input}</label>\r\n            </div>;\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\nimport { Widget } from './widget';\r\nimport { UiSelect } from '../../schema';\r\n\r\nexport class SelectWidget extends Widget {\r\n    protected select: HTMLSelectElement;\r\n    protected ui: UiSelect;\r\n    @observable protected readOnly: boolean;\r\n\r\n    protected setElementValue(value:any) {this.select.value = value}\r\n    protected onInputChange = (evt:React.ChangeEvent<HTMLSelectElement>) => {\r\n        this.setDataValue(evt.target.value);\r\n    }\r\n\r\n    setReadOnly(value:boolean) {this.select.disabled = this.readOnly = !value}\r\n    setDisabled(value:boolean) {this.select.disabled = this.disabled = value}\r\n\r\n    render() {\r\n        if (this.readOnly === true) {\r\n            let option = this.ui.list.find(v => v.value === this.value);\r\n            let title = (option === undefined)? '(???)' : option.title;\r\n            return <span className=\"form-control w-min-6c\">{title}</span>;\r\n        }\r\n        return <select\r\n            ref={(select)=>this.select = select}\r\n            className={classNames(this.className, 'form-control')}\r\n            defaultValue={this.defaultValue} \r\n            onChange={this.onInputChange}>\r\n            {this.ui.list.map((v,index) => {\r\n                let {title, value} = v;\r\n                let cn:string;\r\n                //if (value === undefined || value === null) cn = 'text-light small';\r\n                //else cn = 'text-danger';\r\n                return <option className={cn} key={index} value={value}>{title || value}</option>\r\n            })}\r\n        </select>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiIdItem, TempletType } from '../../schema';\r\nimport { observable } from 'mobx';\r\n\r\nexport class IdWidget extends Widget {\r\n    protected ui: UiIdItem;\r\n    @observable protected value:number;\r\n    setReadOnly(value:boolean) {this.readOnly = value}\r\n    setDisabled(value:boolean) {this.disabled = value}    \r\n\r\n    protected onClick = async () => {\r\n        let pickId = this.ui && this.ui.pickId;\r\n        if (pickId === undefined) {\r\n            alert('no pickId defined!');\r\n            return;\r\n        }\r\n        let id = await pickId(this.context, this.name, this.value);        \r\n        this.setDataValue(id);\r\n        this.clearError();\r\n        this.clearContextError();\r\n        this.checkRules();\r\n    }\r\n\r\n    render() {\r\n        let placeholder:string|JSX.Element, Templet: TempletType;\r\n        if (this.ui !== undefined) {\r\n            placeholder = this.ui.placeholder;\r\n            Templet = this.ui.Templet;\r\n        }\r\n        let cn = {\r\n            'form-control': true,\r\n            'required-item': this.itemSchema.required === true,\r\n            'cursor-pointer': true,\r\n            'is-invalid': this.hasError,\r\n        };\r\n        let content;\r\n        if (this.value === undefined || this.value === null) {\r\n            content = placeholder || 'placeholder';\r\n            cn['text-muted'] = true;\r\n        }\r\n        else if (Templet === undefined) {\r\n            content = <>{this.value}</>;\r\n        }\r\n        else if (typeof Templet === 'function') {\r\n            content = Templet(this.value);\r\n        }\r\n        else {\r\n            content = Templet;\r\n        }\r\n        return <>\r\n            <div className={classNames(cn)} onClick={this.onClick}>{content}</div>\r\n            {this.renderErrors()}\r\n        </>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { DataType } from '../../schema';\r\nimport { UiType } from '../../schema';\r\n\r\nexport const Unknown = (dataType:DataType, uiType:UiType, dataTypes:DataType[]) => {\r\n    return <span className=\"text-danger\">!!data type {dataType} only support {(dataTypes || []).join(', ')}, can't use ui {uiType}!!</span>;\r\n};\r\n","import * as React from 'react';\r\nimport { UiButton, TempletType } from '../../schema';\r\nimport { Unknown } from './unknown';\r\nimport { Widget } from './widget';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class ButtonWidget extends Widget {\r\n    protected ui: UiButton;\r\n\r\n    protected onClick = async () => {\r\n        this.clearError();\r\n        this.clearContextError();\r\n        let {name, type} = this.itemSchema;\r\n        if (type === 'submit') {\r\n            this.context.checkRules()\r\n            if (this.context.hasError === true) {\r\n                return;\r\n            }\r\n        }\r\n        let {onButtonClick} = this.context.form.props;\r\n        if (onButtonClick === undefined) {\r\n            alert(`button ${name} clicked. you should define form onButtonClick`);\r\n            return;\r\n        }\r\n        let ret = await onButtonClick(name, this.context);\r\n        if (ret === undefined) return;\r\n        this.context.setError(name, ret);\r\n    }\r\n\r\n    private observerRender = observer(() => {\r\n        let {name, type} = this.itemSchema;\r\n        let Templet:TempletType, cn:string, label:string;\r\n        if (this.ui !== undefined) {\r\n            let {widget:widgetType} = this.ui;\r\n            if (widgetType !== 'button') return Unknown(type, widgetType, ['button']);\r\n            Templet = this.ui.Templet;\r\n            cn = this.ui.className;\r\n            label = this.ui.label;\r\n        }\r\n        let {form, hasError} = this.context;\r\n        let context = this.context;\r\n        let disabled = type==='submit' && hasError;\r\n        let content:any;\r\n        if (this.children !== undefined) content = this.children;\r\n        else if (typeof Templet === 'function') content = Templet();\r\n        else if (Templet !== undefined) content = Templet;\r\n        else content = label; \r\n        let button = <button \r\n            className={cn} \r\n            type=\"button\"\r\n            disabled={disabled}\r\n            onClick={this.onClick}>\r\n            {content || name}\r\n        </button>;\r\n        if (context.inNode === true) return <>{button}{this.renderErrors()}</>;\r\n        return <div className={form.ButtonClass}>\r\n            <div>{this.renderErrors()}</div>\r\n            {button}\r\n        </div>;\r\n    });\r\n    \r\n    render() {\r\n        return <this.observerRender />\r\n    }\r\n\r\n    renderContainer():JSX.Element {\r\n        if (this.visible === false) return null;        \r\n        let {form, inNode} = this.context;\r\n        if (inNode === true) return this.render();\r\n        return form.FieldContainer(null, this.render());\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Form } from './form';\r\nimport { UiSchema, UiArr, UiItem } from '../schema';\r\nimport { ArrSchema, ItemSchema } from '../schema';\r\nimport { Widget as Widget } from './widgets/widget';\r\n//import { ArrRow } from './arrRow';\r\nimport { observable, computed } from 'mobx';\r\nimport { ContextRule } from './rules';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport abstract class Context {\r\n    private subContexts:{[name:string]:{[rowKey:string]:Context}};\r\n    readonly form: Form;\r\n    readonly uiSchema: UiSchema;\r\n    readonly initData: any;\r\n    readonly inNode: boolean;           // true: 在</> 流中定义Field\r\n    readonly widgets: {[name:string]: Widget} = {};\r\n    readonly rules: ContextRule[];\r\n    readonly isRow: boolean;\r\n    @observable errors: string[] = [];\r\n    @observable errorWidgets:Widget[] = [];\r\n\r\n    constructor(form: Form, uiSchema: UiSchema, data: any, inNode: boolean, isRow: boolean) {\r\n        this.form = form;\r\n        this.uiSchema = uiSchema;\r\n        this.initData = data;\r\n        this.inNode = inNode;\r\n        this.isRow = isRow;\r\n        if (uiSchema !== undefined) {\r\n            let {rules} = uiSchema;\r\n            if (rules !== undefined) {\r\n                this.rules = [];\r\n                if (Array.isArray(rules) === false)\r\n                    this.rules.push(rules as ContextRule);\r\n                else\r\n                    this.rules.push(...rules as ContextRule[]);\r\n            }\r\n        }\r\n    }\r\n\r\n    getArrRowContexts(arrName: string) {\r\n        if (this.subContexts === undefined) this.subContexts = {};\r\n        let arrRowContexts = this.subContexts[name];\r\n        if (arrRowContexts === undefined) this.subContexts[name] = arrRowContexts = {};\r\n        return arrRowContexts;\r\n    }\r\n\r\n    abstract get data():any;\r\n    abstract getItemSchema(itemName:string):ItemSchema;\r\n    abstract getUiItem(itemName:string):UiItem;\r\n    get arrName():string {return undefined}\r\n    getValue(itemName:string):any {return this.initData[itemName]}\r\n    setValue(itemName:string, value:any) {\r\n        this.initData[itemName] = value;\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setValue(value);\r\n    }\r\n    getDisabled(itemName:string):boolean {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) return widget.getDisabled();\r\n        return undefined;\r\n    }\r\n    setDisabled(itemName:string, value:boolean) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setDisabled(value);\r\n    }\r\n    getReadOnly(itemName:string):boolean {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.getReadOnly();\r\n        return undefined;\r\n    }\r\n    setReadOnly(itemName:string, value:boolean) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setReadOnly(value);\r\n    }\r\n    getVisible(itemName:string):boolean {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.getVisible();\r\n        return undefined;\r\n    }\r\n    setVisible(itemName:string, value:boolean) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setVisible(value);\r\n    }\r\n\r\n    checkFieldRules() {\r\n        for (let i in this.widgets) {\r\n            this.widgets[i].checkRules();\r\n        }\r\n        if (this.subContexts === undefined) return;\r\n        for (let i in this.subContexts) {\r\n            let arrRowContexts = this.subContexts[i];\r\n            for (let j in arrRowContexts) {\r\n                arrRowContexts[j].checkFieldRules();\r\n            }\r\n        }\r\n    }\r\n\r\n    checkContextRules() {\r\n        if (this.rules === undefined) return;\r\n        this.clearContextErrors();\r\n        for (let rule of this.rules) {\r\n            let ret = rule(this);\r\n            if (ret === undefined) continue;\r\n            if (Array.isArray(ret) === true) {\r\n                this.errors.push(...ret as string[]);\r\n            }\r\n            else if (typeof ret === 'string') {\r\n                this.errors.push(ret as string);\r\n            }\r\n            else {\r\n                for (let i in ret as object) this.setError(i, ret[i]);\r\n            }\r\n        }\r\n        if (this.subContexts === undefined) return;\r\n        for (let i in this.subContexts) {\r\n            let arrRowContexts = this.subContexts[i];\r\n            for (let j in arrRowContexts) {\r\n                let rowContext = arrRowContexts[j];\r\n                rowContext.removeErrors();\r\n                rowContext.checkContextRules();\r\n            }\r\n        }\r\n    }\r\n\r\n    setError(itemName:string, error:string) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget === undefined) return;\r\n        widget.setContextError(error);\r\n        this.addErrorWidget(widget);\r\n    }\r\n\r\n    clearContextErrors() {\r\n        for (let i in this.widgets) this.widgets[i].clearContextError();\r\n    }\r\n\r\n    checkRules() {\r\n        this.checkFieldRules();\r\n        this.checkContextRules();\r\n    }\r\n\r\n    addErrorWidget(widget:Widget) {\r\n        let pos = this.errorWidgets.findIndex(v => v === widget);\r\n        if (pos < 0) this.errorWidgets.push(widget);\r\n    }\r\n    removeErrorWidget(widget:Widget) {\r\n        let pos = this.errorWidgets.findIndex(v => v === widget);\r\n        if (pos >= 0) this.errorWidgets.splice(pos, 1);\r\n    }\r\n\r\n    protected checkHasError():boolean {\r\n        let ret = (this.errorWidgets.length + this.errors.length) > 0;\r\n        if (ret === true) return true;\r\n        if (this.subContexts === undefined) return false;\r\n        for (let i in this.subContexts) {\r\n            let arrRowContexts = this.subContexts[i];\r\n            for (let j in arrRowContexts) {\r\n                if (arrRowContexts[j].hasError === true) return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    @computed get hasError():boolean {\r\n        return this.checkHasError();\r\n    };\r\n\r\n    removeErrors() {\r\n        this.errors.splice(0);\r\n        this.errorWidgets.splice(0);\r\n        for (let i in this.widgets) {\r\n            let widget = this.widgets[i];\r\n            if (widget === undefined) continue;\r\n            widget.clearContextError();\r\n        }\r\n    }\r\n\r\n    renderErrors = observer((): JSX.Element => {\r\n        let {errors} = this;\r\n        if (errors.length === 0) return null;\r\n        return <>\r\n            {errors.map(err => <span key={err} className=\"text-danger inline-block my-1 ml-3\">\r\n                <i className=\"fa fa-exclamation-circle\" /> &nbsp;{err}\r\n            </span>)}\r\n        </>\r\n    });\r\n}\r\n\r\nlet rowKeySeed:number = 1;\r\nexport class RowContext extends Context {\r\n    readonly parentContext: Context;\r\n    readonly arrSchema: ArrSchema;\r\n    readonly uiSchema: UiArr;\r\n    //readonly row: ArrRow;\r\n    readonly rowKey: number;\r\n    readonly data: any;\r\n    constructor(parentContext:Context, arrSchema: ArrSchema, data: any, inNode: boolean) {\r\n        let uiArr:UiArr;\r\n        let {uiSchema} = parentContext;\r\n        if (uiSchema !== undefined) {\r\n            let {items} = uiSchema;\r\n            if (items !== undefined) uiArr = items[arrSchema.name] as UiArr;\r\n        }\r\n        super(parentContext.form, uiArr, data, inNode, true);\r\n        this.parentContext = parentContext;\r\n        this.arrSchema = arrSchema;\r\n        this.rowKey = rowKeySeed++;\r\n        this.data = data;\r\n    }\r\n    getItemSchema(itemName:string):ItemSchema {return this.arrSchema.itemSchemas[itemName]}\r\n    getUiItem(itemName:string):UiItem {\r\n        if (this.uiSchema === undefined) return undefined;\r\n        let {items} = this.uiSchema;\r\n        if (items === undefined) return undefined;\r\n        return items[itemName]\r\n    }\r\n    get arrName():string {return this.arrSchema.name}\r\n    //get data() {return this.row.data;}\r\n    removeErrors() {\r\n        super.removeErrors();\r\n        this.parentContext.removeErrors();\r\n    }\r\n\r\n    get parentData():any {return this.parentContext.data;}\r\n}\r\n\r\nexport class FormContext extends Context {\r\n    constructor(form:Form, inNode:boolean) {\r\n        super(form, form.uiSchema, form.data, inNode, false);\r\n    }\r\n    get data():any {return this.form.data}\r\n    getItemSchema(itemName:string):ItemSchema {return this.form.itemSchemas[itemName]}\r\n    getUiItem(itemName:string):UiItem {\r\n        let {uiSchema} = this.form;\r\n        if (uiSchema === undefined) return undefined;\r\n        let {items} = uiSchema;\r\n        if (items === undefined) return undefined;\r\n        return items[itemName]\r\n    }\r\n}\r\n\r\nexport const ContextContainer = React.createContext<Context>({} as any);\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\n//import { ArrRow } from '../arrRow';\r\nimport { Context, RowContext, ContextContainer } from '../context';\r\nimport { ArrSchema } from '../../schema';\r\nimport { UiArr, TempletType } from '../../schema';\r\nimport { Unknown } from './unknown';\r\nimport { factory } from './factory';\r\n\r\nexport const ArrComponent = observer((\r\n    {parentContext, arrSchema, children}:{parentContext: Context, arrSchema: ArrSchema, children: React.ReactNode}) => \r\n{\r\n    let {name, arr} = arrSchema;\r\n    let data = parentContext.initData[name] as any[];\r\n    let {form} = parentContext;\r\n    let arrRowContexts = parentContext.getArrRowContexts(name);\r\n    let ui = parentContext.getUiItem(name) as UiArr;\r\n    let arrLabel = name;\r\n    let Templet:TempletType;\r\n    let selectable:boolean, deletable:boolean, restorable:boolean;\r\n    let {ArrContainer, RowContainer, RowSeperator, uiSchema} = form;\r\n    if (uiSchema !== undefined) {\r\n        let {selectable:formSelectable, deletable:formDeletable, restorable:formRestorable} = uiSchema;\r\n        if (selectable !== true) selectable = formSelectable;\r\n        if (deletable !== true) deletable = formDeletable;\r\n        if (restorable !== true) restorable = formRestorable;\r\n    }\r\n    if (ui !== undefined) {\r\n        let {widget:widgetType, label, \r\n            selectable:arrSelectable, deletable:arrDeletable, restorable:arrRestorable,\r\n            ArrContainer:ac, RowContainer:rc, RowSeperator:rs\r\n        } = ui;\r\n        if (arrSelectable !== undefined) selectable = arrSelectable;\r\n        if (arrDeletable !== undefined) deletable = arrDeletable;\r\n        if (arrRestorable !== undefined) restorable = arrRestorable;\r\n        if (ac !== undefined) ArrContainer = ac;\r\n        if (rc !== undefined) RowContainer = rc;\r\n        if (rs !== undefined) RowSeperator = rs;\r\n        Templet = ui.Templet;\r\n        if (widgetType !== 'arr') return Unknown(arrSchema.type, widgetType, ['arr']);\r\n        arrLabel = label || arrLabel;\r\n    }\r\n    let first = true;\r\n    return ArrContainer(arrLabel, <>\r\n        {data.map((row:any, index) => {\r\n            let rowContext: RowContext;\r\n            let rowContent: JSX.Element;\r\n            let sep = undefined;\r\n            if (first === false) sep = RowSeperator;\r\n            else first = false;\r\n            if (children !== undefined) {\r\n                rowContext = new RowContext(parentContext, arrSchema, row, true);\r\n                rowContent = <>{children}</>;\r\n            }\r\n            else {\r\n                let typeofTemplet = typeof Templet;\r\n                if (typeofTemplet === 'function') {\r\n                    rowContext = new RowContext(parentContext, arrSchema, row, true);\r\n                    rowContent = React.createElement(observer(Templet as React.StatelessComponent), row);\r\n                }\r\n                else if (typeofTemplet === 'object') {\r\n                    rowContext = new RowContext(parentContext, arrSchema, row, true);\r\n                    rowContent = Templet as JSX.Element;\r\n                }\r\n                else {\r\n                    rowContext = new RowContext(parentContext, arrSchema, row, false);\r\n                    rowContent = <>{\r\n                        arr.map((v, index) => {\r\n                            return <React.Fragment key={v.name}>\r\n                                {factory(rowContext, v, undefined)}\r\n                            </React.Fragment>\r\n                        })}\r\n                    </>;\r\n                }\r\n            }\r\n            let {rowKey} = rowContext;\r\n            arrRowContexts[rowKey] = rowContext;\r\n\r\n            let selectCheck:JSX.Element, deleteIcon:JSX.Element;\r\n            if (selectable === true) {\r\n                let onClick = (evt: React.MouseEvent<HTMLInputElement>)=>{\r\n                    let {checked} = (evt.target as HTMLInputElement);\r\n                    row.$isSelected = checked;\r\n                    let {$source} = row;\r\n                    if ($source !== undefined) $source.$isSelected = checked;\r\n                    rowContext.removeErrors();\r\n                }\r\n                selectCheck = <div className=\"form-row-checkbox\">\r\n                    <input type=\"checkbox\" onClick={onClick} defaultChecked={row.$isSelected} />\r\n                </div>;\r\n            }\r\n            let isDeleted = !(row.$isDeleted===undefined || row.$isDeleted===false);\r\n            if (deletable === true) {\r\n                let icon = isDeleted? 'fa-undo' : 'fa-trash';\r\n                let onDelClick = () => {\r\n                    if (restorable === true) {\r\n                        row.$isDeleted = !isDeleted;\r\n                        let {$source} = row;\r\n                        if ($source !== undefined) $source.$isDeleted = !isDeleted;\r\n                    }\r\n                    else {\r\n                        let p = data.indexOf(row);\r\n                        if (p>=0) data.splice(p, 1);\r\n                    }\r\n                    rowContext.removeErrors();\r\n                }\r\n                deleteIcon = <div className=\"form-row-edit text-info\" onClick={onDelClick}>\r\n                    <i className={classNames('fa', icon, 'fa-fw')} />\r\n                </div>;\r\n            }\r\n            let editContainer = selectable===true || deletable===true?\r\n                (content:any) => <fieldset disabled={isDeleted}><div className={classNames('d-flex', {'deleted':isDeleted, 'row-selected':row.$isSelected})}>\r\n                    {selectCheck}<div className=\"flex-grow-1\">{content}</div>{deleteIcon}\r\n                </div></fieldset>\r\n                :\r\n                (content:any) => content;\r\n\r\n            return <ContextContainer.Provider key={rowKey} value={rowContext}>\r\n                {sep}\r\n                {RowContainer(editContainer(<><rowContext.renderErrors />{rowContent}</>))}\r\n            </ContextContainer.Provider>;\r\n        })}\r\n    </>);\r\n});\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiImageItem } from '../../schema';\r\nimport { Image } from '../../image';\r\nimport { ImageItemEdit } from '../../edit/imageItemEdit';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\n\r\nexport class ImageWidget extends Widget {\r\n    protected input: HTMLInputElement;\r\n    protected ui: UiImageItem;\r\n    @observable private imageSrc: string;\r\n\r\n    protected init() {\r\n        super.init();\r\n        this.imageSrc = this.value;\r\n    }\r\n\r\n    protected onClick = async () => {\r\n        let edit = new ImageItemEdit(this.itemSchema, this.ui, this.ui.label, this.value);\r\n        let ret = await edit.start();\r\n        if (ret !== null) {\r\n            this.setValue(ret);\r\n            this.imageSrc = ret;\r\n        }\r\n        await edit.end();\r\n    }\r\n\r\n    render() {\r\n        return <this.observerRender />;\r\n    }\r\n\r\n    private observerRender = observer(() => {\r\n        let cn = [\r\n            'bg-white p-1 d-flex justify-content-center',\r\n        ];\r\n        let onClick: any;\r\n        if (!this.readOnly && !this.disabled) {\r\n            cn.push('cursor-pointer');\r\n            onClick = this.onClick;\r\n        }\r\n        return <div className={classNames(cn)} onClick={onClick}>\r\n            <Image src={this.imageSrc} className=\"w-4c h-4c\"/>\r\n        </div>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport { Schema, ArrSchema, DataType, ButtonSchema, ItemSchema } from '../../schema';\r\nimport { UiItem, UiArr, UiType, UiButton, TempletType, TypeWidget, UiCustom } from '../../schema';\r\nimport { TextWidget } from './textWidget';\r\nimport { TextAreaWidget } from './textareaWidget';\r\nimport { PasswordWidget, UrlWidget, EmailWidget } from './passwordWidget';\r\nimport { UpdownWidget } from './updownWidget';\r\nimport { NumberWidget } from './numberWidget';\r\nimport { DateWidget, DateTimeWidget, TimeWidget, MonthWidget } from './dateWidget';\r\nimport { CheckBoxWidget } from './checkBoxWidget';\r\nimport { FieldProps } from '../field';\r\nimport { Context, RowContext, FormContext, ContextContainer } from '../context';\r\nimport { SelectWidget } from './selectWidget';\r\nimport { RadioWidget } from './radioWidget';\r\nimport { RangeWidget } from './rangeWidget';\r\nimport { IdWidget } from './idWidget';\r\nimport { ButtonWidget } from './buttonWidget';\r\nimport { ArrComponent } from './arrComponent';\r\nimport { ImageWidget } from './imageWidget';\r\n\r\nconst widgetsFactory: {[type: string]: {widget?: TypeWidget, dataTypes?: DataType[]}} = {\r\n    id: {\r\n        dataTypes: ['id'],\r\n        widget: IdWidget,\r\n    },\r\n    text: {\r\n        dataTypes: ['integer', 'number', 'string'],\r\n        widget: TextWidget\r\n    },\r\n    textarea: {\r\n        dataTypes: ['string'],\r\n        widget: TextAreaWidget\r\n    },\r\n    password: {\r\n        dataTypes: ['string'],\r\n        widget: PasswordWidget\r\n    },\r\n    date: {\r\n        dataTypes: ['date'],\r\n        widget: DateWidget\r\n    },\r\n    datetime: {\r\n        dataTypes: ['date'],\r\n        widget: DateTimeWidget\r\n    },\r\n    time: {\r\n        dataTypes: ['date'],\r\n        widget: TimeWidget\r\n    },\r\n    month: {\r\n        dataTypes: ['date'],\r\n        widget: MonthWidget\r\n    },\r\n    select: {\r\n        dataTypes: ['integer', 'number', 'string', 'date', 'boolean'],\r\n        widget: SelectWidget\r\n    },\r\n    url: {\r\n        dataTypes: ['string'],\r\n        widget: UrlWidget\r\n    },\r\n    email: {\r\n        dataTypes: ['string'],\r\n        widget: EmailWidget\r\n    },\r\n    number: {\r\n        dataTypes: ['integer', 'number'],\r\n        widget: NumberWidget\r\n    },\r\n    updown: {\r\n        dataTypes: ['integer', 'number'],\r\n        widget: UpdownWidget\r\n    },\r\n    color: {\r\n\r\n    },\r\n    checkbox: {\r\n        dataTypes: ['boolean', 'integer', 'number'],\r\n        widget: CheckBoxWidget\r\n    },\r\n    image: {\r\n        dataTypes: ['string'],\r\n        widget: ImageWidget,\r\n    },\r\n    checkboxes: {\r\n\r\n    },\r\n    radio: {\r\n        dataTypes: ['integer', 'number', 'string', 'date', 'boolean'],\r\n        widget: RadioWidget\r\n    },\r\n    range: {\r\n        dataTypes: ['integer'],\r\n        widget: RangeWidget,\r\n    },\r\n    button: {\r\n        dataTypes: ['button', 'submit'],\r\n        widget: ButtonWidget,\r\n    }\r\n}\r\n\r\nexport function factory(context: Context, itemSchema: ItemSchema, children:React.ReactNode, fieldProps?: FieldProps):JSX.Element {\r\n    if (context === undefined) {\r\n        debugger;\r\n        return null;\r\n    }\r\n    if (itemSchema === undefined) return undefined;\r\n    let {name, type} = itemSchema;\r\n    switch (type) {\r\n    case 'arr':\r\n        let arrSchema = context.getItemSchema(name) as ArrSchema;\r\n        return <ArrComponent parentContext={context} arrSchema={arrSchema} children={children} />;\r\n    default:\r\n        break;\r\n    }\r\n\r\n    let typeWidget: TypeWidget;\r\n    let ui = context.getUiItem(name);\r\n    function getTypeWidget(t:DataType): TypeWidget {\r\n        switch(t) {\r\n        default: return TextWidget; \r\n        case 'id': return IdWidget;\r\n        case 'integer': return UpdownWidget;\r\n        case 'number': return NumberWidget; \r\n        case 'string': return TextWidget; \r\n        case 'date': return DateWidget; \r\n        case 'boolean': return CheckBoxWidget; \r\n        case 'button':\r\n        case 'submit': return ButtonWidget;\r\n        }\r\n    }\r\n    if (ui === undefined) { \r\n        typeWidget = getTypeWidget(type);\r\n    }\r\n    else {\r\n        let {widget:widgetType} = ui;\r\n        switch (widgetType) {\r\n        default:\r\n            if (widgetType !== undefined) {\r\n                let widgetFactory = widgetsFactory[widgetType];\r\n                typeWidget = widgetFactory.widget;\r\n            }\r\n            if (typeWidget === undefined) typeWidget = getTypeWidget(type);\r\n            break;\r\n        case 'custom':\r\n            typeWidget = (ui as UiCustom).WidgetClass;\r\n            break;\r\n        case 'group':\r\n            return <span>impletment group</span>;\r\n        }\r\n        //label = uiLabel || name;\r\n    }\r\n    \r\n    let {isRow, widgets} = context;\r\n    let widget = new typeWidget(context, itemSchema, fieldProps, children);\r\n    widgets[name] = widget;\r\n\r\n    return <widget.container />;\r\n    /*\r\n    if (isRow === false) {\r\n        let WidgetElement = observer(() => widget.container());\r\n        return <WidgetElement />;\r\n    }\r\n    else {\r\n        let widgetElement = widget.container();\r\n        return widgetElement;\r\n    }\r\n    */\r\n}\r\n\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiTextAreaItem } from '../../schema';\r\nimport { StringSchema } from '../../schema';\r\n\r\nexport class TextAreaWidget extends Widget {\r\n    protected itemSchema: StringSchema;\r\n    protected input: HTMLTextAreaElement;\r\n    protected ui: UiTextAreaItem;\r\n\r\n    protected setElementValue(value:any) {this.input.value = value}\r\n    protected onInputChange = (evt: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        this.setValue(evt.currentTarget.value);\r\n    }\r\n\r\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\r\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\r\n\r\n    render() {\r\n        let renderTemplet = this.renderTemplet();\r\n        if (renderTemplet !== undefined) return renderTemplet;\r\n        let cn = {};\r\n        if (this.hasError === true) {\r\n            cn['is-invalid'] = true;\r\n        }\r\n        else {\r\n            cn['required-item'] = this.itemSchema.required === true;\r\n        }\r\n        return <textarea ref={(input) => this.input=input} \r\n            className={classNames(this.className, cn)}\r\n            rows={this.ui && this.ui.rows}\r\n            maxLength={this.itemSchema.maxLength}\r\n            defaultValue={this.defaultValue} onChange={this.onInputChange} />\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { TextWidget } from './textWidget';\r\n\r\nexport class PasswordWidget extends TextWidget {\r\n    protected inputType = 'password';\r\n}\r\n\r\nexport class UrlWidget extends TextWidget {\r\n    protected inputType = 'url';\r\n}\r\n\r\nexport class EmailWidget extends TextWidget {\r\n    protected inputType = 'email';\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { TextWidget } from './textWidget';\r\nimport { Widget } from './widget';\r\nimport { UiRadio } from '../../schema';\r\nimport { RowContext } from '../context';\r\n\r\n\r\n//const radioStyle:React.CSSProperties = {width:'2em', height:'1.2em'};\r\nexport class RadioWidget extends Widget {\r\n    protected inputs: {[index:number]: HTMLInputElement} = {};\r\n    protected ui: UiRadio;\r\n\r\n    protected setElementValue(value:any) {\r\n        for (let i in this.inputs) {\r\n            let input = this.inputs[i];\r\n            input.checked = value === input.value;\r\n        }\r\n    }\r\n    setReadOnly(value:boolean) {\r\n        this.readOnly = value;\r\n        for (let i in this.inputs) this.inputs[i].readOnly = value;\r\n    }\r\n    setDisabled(value:boolean) {\r\n        this.disabled = value;\r\n        for (let i in this.inputs) this.inputs[i].disabled = value\r\n    }\r\n\r\n    render() {\r\n        let {defaultValue, list} = this.ui;\r\n        let {isRow, inNode} = this.context;\r\n        let rowKey:number;\r\n        if (isRow === true) {\r\n            rowKey = (this.context as RowContext).rowKey;\r\n        }\r\n        let cn = classNames(this.className, 'form-radio-inline');\r\n        return <span className={cn}>\r\n                {list.map((v,index) => {\r\n                    let {value, title} = v;\r\n                    let name = this.name;\r\n                    if (rowKey !== undefined) name += '-' + rowKey;\r\n                    return <label key={index} className=\"form-radio-inline\">\r\n                        <input ref={input=>this.inputs[index]=input} type=\"radio\" name={name}\r\n                            value={value} defaultChecked={(this.defaultValue || defaultValue)===value} />\r\n                        {title || value}\r\n                    </label>;\r\n                    //</span>\r\n                })}\r\n            </span>;\r\n    }\r\n}\r\n/*\r\n<div className=\"form-control d-flex border-0\"><input\r\nref={(input)=>this.input = input}\r\nclassName={classNames(this.className, 'align-self-center')}\r\ntype=\"checkbox\"\r\nstyle={{maxHeight:\"1.2em\"}}\r\ndefaultValue={this.defaultValue} \r\nonChange={this.onChange} />\r\n</div>\r\n*/","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { UiRange } from '../../schema';\r\nimport { Widget } from './widget';\r\n\r\nexport class RangeWidget extends Widget {\r\n    protected inputType = 'range';\r\n    protected input: HTMLInputElement;\r\n    protected ui: UiRange;\r\n\r\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\r\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\r\n\r\n    render() {\r\n        let {min, max, step} = this.ui;\r\n        return <><input ref={input=>this.input = input}\r\n            className={classNames(this.className, 'form-control', 'w-min-6c')}\r\n            type={this.inputType}\r\n            defaultValue={this.defaultValue} \r\n            onChange={this.onInputChange}\r\n            max={max}\r\n            min={min}\r\n            step={step}\r\n            />\r\n        </>;\r\n    }\r\n}\r\n","import _ from 'lodash';\r\nimport { KeyValueRes, Res } from '../res';\r\n\r\nexport interface FormRes extends KeyValueRes {\r\n    required: string;\r\n    number: string;\r\n    integer: string;\r\n    min: string;\r\n    max: string;\r\n}\r\n\r\nexport const formRes:Res<FormRes> = {\r\n    _: {\r\n        required: 'required',\r\n        number: 'not valid number',\r\n        integer: 'not valid integer',\r\n        min: 'min value is ${min}',\r\n        max: 'max value is ${max}',\r\n    },\r\n    zh: {\r\n        _: {\r\n            required: '必须填',\r\n            number: '需要数字',\r\n            integer: '需要整数',\r\n            min: '不能小于${min}',\r\n            max: '不能大于${max}',\r\n        }\r\n    },\r\n}\r\n","import * as React from 'react';\r\nimport {observable, IReactionDisposer, autorun} from 'mobx';\r\nimport classNames from 'classnames';\r\nimport { Schema, ItemSchema, ArrSchema } from '../schema';\r\nimport { UiSchema, TempletType } from '../schema';\r\nimport { factory } from './widgets';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport { ContextContainer, FormContext, Context, RowContext } from './context';\r\nimport { FormRes, formRes } from './formRes';\r\nimport { resLang } from '../res';\r\n\r\nexport type FormButtonClick = (name:string, context: Context) => Promise<any>;\r\n\r\nexport interface FormProps {\r\n    className?: string;\r\n    schema: Schema;\r\n    uiSchema?: UiSchema;\r\n    formData?: any;\r\n    onButtonClick?: FormButtonClick;\r\n    fieldLabelSize?: number;            // col-sm-2 for label\r\n    requiredFlag?: boolean;             // default=true\r\n    beforeShow?: (formContext:FormContext) => void;\r\n    res?: FormRes;\r\n\r\n    Container?: (content:JSX.Element) => JSX.Element;\r\n    FieldContainer?: (label:string|JSX.Element, content:JSX.Element) => JSX.Element;\r\n    FieldClass?: string;\r\n    ButtonClass?: string;\r\n}\r\n\r\nexport class Form extends React.Component<FormProps> {\r\n    readonly schema: Schema;\r\n    readonly itemSchemas: {[name:string]: ItemSchema};\r\n    readonly uiSchema: UiSchema;\r\n    readonly res?: FormRes;\r\n    protected formContext: FormContext;\r\n    private content: any;\r\n    private formData: any;\r\n    private disposer: IReactionDisposer;\r\n    @observable readonly data:any;\r\n\r\n    readonly Container: (content:JSX.Element) => JSX.Element;\r\n    readonly FieldContainer: (label:any, content:JSX.Element) => JSX.Element;\r\n    readonly FieldClass: string;\r\n    readonly ButtonClass: string;\r\n    //readonly ArrContainer: (label:any, content:JSX.Element) => JSX.Element;\r\n    //readonly RowContainer: (content:JSX.Element) => JSX.Element;\r\n    //readonly RowSeperator: JSX.Element;\r\n\r\n    constructor(props:FormProps) {\r\n        super(props);\r\n        let {schema, uiSchema, formData, \r\n            Container, FieldContainer, FieldClass, \r\n            ButtonClass, \r\n            res,\r\n            //ArrContainer, RowContainer, //ArrFieldContainer, \r\n            //RowSeperator,\r\n        } = props;\r\n        this.Container = Container || this.DefaultContainer;\r\n        this.FieldContainer = FieldContainer || this.DefaultFieldContainer;\r\n        this.FieldClass = FieldClass!==undefined && FieldClass!==''&&FieldClass!==null? FieldClass : this.DefaultFieldClass;\r\n        this.res = res || this.DefaultRes;\r\n        this.ButtonClass = ButtonClass || this.DefaultButtonClass;\r\n        //this.ArrContainer = ArrContainer || this.DefaultArrContainer;\r\n        //this.RowContainer = RowContainer || this.DefaultRowContainer;\r\n        //this.RowSeperator = RowSeperator || this.DefaultRowSeperator;\r\n\r\n        this.schema = schema;\r\n        this.itemSchemas = {};\r\n        for (let itemSchema of this.schema) {\r\n            this.itemSchemas[itemSchema.name] = itemSchema;\r\n        }\r\n        this.uiSchema = uiSchema;\r\n        this.formData = formData;\r\n        this.disposer = autorun(this.calcSelectOrDelete);\r\n        this.data = {};\r\n        this.initData(formData);\r\n        let inNode:boolean = this.props.children !== undefined || this.uiSchema && this.uiSchema.Templet !== undefined;\r\n        //this.formContext = new FormContext(this, inNode);\r\n        let {children} = this.props;\r\n        //let content:JSX.Element; //, inNode:boolean;\r\n        //let formContext: FormContext;\r\n        if (children !== undefined) {\r\n            //inNode = true;\r\n            this.content = <>{children}</>;\r\n            this.formContext = new FormContext(this, true);\r\n        }\r\n        else {\r\n            let Templet: TempletType;\r\n            if (this.uiSchema !== undefined) {\r\n                Templet = this.uiSchema.Templet;\r\n            }\r\n            if (Templet !== undefined) {\r\n                // inNode = true;\r\n                this.content = typeof(Templet) === 'function'? Templet(this.data) : Templet;\r\n                this.formContext = new FormContext(this, true);\r\n            }\r\n            else {\r\n                // inNode = false;\r\n                this.formContext = new FormContext(this, false);\r\n                this.content = <>{this.schema.map((v, index) => {\r\n                    return <React.Fragment key={index}>{factory(this.formContext, v, children)}</React.Fragment>\r\n                })}</>;\r\n            }\r\n        }\r\n    }\r\n\r\n    private initData(formData: any) {\r\n        if (formData === undefined) formData = {};\r\n        for (let itemSchema of this.schema) {\r\n            this.initDataItem(itemSchema, this.data, formData);\r\n        }\r\n    }\r\n\r\n    private initDataItem(itemSchema: ItemSchema, data:any, formData: any):any {\r\n        let {name, type} = itemSchema;\r\n        if (type === 'button') return;\r\n        if (type === 'arr') {\r\n            let arrItem:ArrSchema = itemSchema as ArrSchema;\r\n            let {arr:arrItems} = arrItem;\r\n            if (arrItems === undefined) return;\r\n            let arrDict = arrItem.itemSchemas = {};\r\n            for (let item of arrItems) {\r\n                arrDict[item.name] = item;\r\n            }\r\n            let val:any[] = formData[name];\r\n            if (val === undefined) val = [];\r\n            else if (Array.isArray(val) === false) val = [val];\r\n            let arr:any[] = [];\r\n            for (let row of val) {\r\n                let {$isSelected, $isDeleted} = row;\r\n                let r = {\r\n                    $source: row,\r\n                    $isSelected: $isSelected,\r\n                    $isDeleted: $isDeleted,\r\n                };\r\n                for (let item of arrItems) {\r\n                    this.initDataItem(item, r, row);\r\n                    /*\r\n                    let {name:nm} = item;\r\n                    let v = row[nm];\r\n                    if (v === undefined) v = null;\r\n                    r[nm] = v;\r\n                    */\r\n                }\r\n                arr.push(r);\r\n            }\r\n            data[name] = observable(arr);\r\n            return;\r\n        }\r\n        data[name] = formData[name];\r\n    }\r\n\r\n    private calcSelectOrDelete = () => {\r\n        if (this.formData === undefined) return;\r\n        for (let itemSchema of this.schema) {\r\n            this.arrItemOperated(itemSchema);\r\n        }\r\n    }\r\n\r\n    private arrItemOperated(itemSchema: ItemSchema) {\r\n        let {name, type} = itemSchema;\r\n        if (type !== 'arr') return;\r\n        if (this.data === undefined) return;\r\n        let formArrVal = this.data[name];\r\n        if (formArrVal === undefined) return;\r\n        let {arr: arrItems} = itemSchema as ArrSchema;\r\n        for (let row of formArrVal) {\r\n            let {$source} = row;\r\n            if ($source === undefined) continue;\r\n            let {$isSelected, $isDeleted} = $source;\r\n            row.$isSelected = $isSelected;\r\n            row.$isDeleted = $isDeleted;\r\n            //console.log($isSelected, $isDeleted);\r\n            for (let item of arrItems) {\r\n                this.arrItemOperated(item);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let {beforeShow} = this.props;\r\n        if (beforeShow !== undefined) beforeShow(this.formContext);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.disposer();\r\n    }\r\n\r\n    render() {\r\n        return <ContextContainer.Provider value={this.formContext}>\r\n            <this.formContext.renderErrors />\r\n            {this.Container(this.content)}\r\n        </ContextContainer.Provider>;\r\n    }\r\n\r\n    async buttonClick(buttonName:string) {\r\n        this.formContext.checkRules()\r\n        if (this.formContext.hasError === true) return;\r\n\r\n        let {onButtonClick} = this.formContext.form.props;\r\n        if (onButtonClick === undefined) {\r\n            alert(`you should define form onButtonClick`);\r\n            return;\r\n        }\r\n        let ret = await onButtonClick(buttonName, this.formContext);\r\n        if (ret === undefined) return;\r\n        this.formContext.setError(buttonName, ret);\r\n    }\r\n\r\n    protected DefaultContainer = (content:JSX.Element): JSX.Element => {\r\n        return <form className={classNames(this.props.className)}>\r\n            {content}\r\n        </form>;\r\n    }\r\n    /*\r\n    protected DefaultArrFieldContainer = (itemName:string, content:JSX.Element, context:RowContext): JSX.Element => {\r\n        return this.InnerFieldContainer(itemName, content, context);\r\n    }*/\r\n    protected DefaultFieldContainer = (label:string|JSX.Element, content:JSX.Element): JSX.Element => {\r\n        //return this.InnerFieldContainer(itemName, content, context);\r\n        let {fieldLabelSize} = this.props;\r\n\r\n        if (fieldLabelSize > 0) {\r\n            let labelView:any;\r\n            if (label === null) {\r\n                fieldLabelSize = 0;\r\n            }\r\n            else {\r\n                labelView = <label className={classNames('col-sm-' + fieldLabelSize, 'col-form-label')}>{label}</label>\r\n            }\r\n            let fieldCol = 'col-sm-' + (12 - fieldLabelSize);\r\n            return <div className=\"form-group row\">\r\n                {labelView}\r\n                <div className={fieldCol}>{content}</div>\r\n            </div>;\r\n        }\r\n        return <div className=\"form-group\">\r\n            {label===null? null:<label className=\"col-form-label\">{label}</label>}\r\n            {content}\r\n        </div>;\r\n    }\r\n    protected DefaultFieldClass:string = undefined;\r\n    protected DefaultButtonClass = 'text-center py-2';\r\n    protected DefaultRes:FormRes = resLang<FormRes>(formRes);\r\n\r\n    ArrContainer = (label:any, content:JSX.Element): JSX.Element => {\r\n        return <div>\r\n            <div className={classNames('small text-muted text-center bg-light py-1 px-3 mt-4 mb-1')}>{label}</div>\r\n            {content}\r\n        </div>;\r\n    }\r\n    RowContainer = (content:JSX.Element): JSX.Element => {\r\n        //return <div className=\"row\">{content}</div>;\r\n        let cn = classNames({\r\n            'py-3': true\r\n        });\r\n        return <div className={cn}>{content}</div>\r\n    }\r\n    RowSeperator = <div className=\"border border-gray border-top\" />;\r\n}\r\n","import * as React from 'react';\r\nimport { factory } from './widgets';\r\nimport { ContextContainer, Context } from './context';\r\n\r\nexport interface FieldProps {\r\n    name: string;\r\n}\r\n\r\nexport class Field extends React.Component<FieldProps> {\r\n    static contextType = ContextContainer;\r\n    render() {\r\n        let {name, children } = this.props;\r\n        let context:Context = this.context;\r\n        if (context === undefined) return <span className=\"text-danger\">!only in Form!</span>;\r\n        let itemSchema = context.getItemSchema(name);\r\n        let content = factory(context, itemSchema, children, this.props);\r\n        if (content === undefined) {\r\n            return <span className=\"text-danger\">!!{name} is not defined!!</span>;\r\n        }\r\n        return content;\r\n    }\r\n}\r\n","export {Form} from './form';\r\nexport {Field} from './field';\r\nexport {Context, RowContext} from './context';\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport '../css/va-badge.css';\r\n\r\nexport interface BadgeProps {\r\n    className?: string;\r\n    badge?: string|number;\r\n    size?: 'xs' | 'sm' | 'lg';\r\n    color?: 'secondary'|'success'|'danger'|'primary'|'info'|'warning';\r\n    badgeAlign?: 'left'|'center'|'right';\r\n    badgeVertical?: 'top'|'middle'|'bottom';\r\n}\r\n\r\n@observer\r\nexport class Badge extends React.Component<BadgeProps> {\r\n    render() {\r\n        let {className, badge, size, color, badgeAlign, badgeVertical, children} = this.props;\r\n        let cn = classNames(\r\n            className,\r\n            'va-badge',\r\n            size && 'va-badge-'+size,\r\n            'va-badge-' + (color||'secondary'),\r\n            badgeAlign && 'va-badg-'+badgeAlign,\r\n            badgeVertical && 'va-badg-'+badgeVertical,\r\n        );\r\n        let b;\r\n        if (badge) b = <b>{badge}</b>;\r\n        return <div className={cn}>\r\n            {children}\r\n            {b}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport * as classNames from 'classnames';\r\nimport '../css/va-lmr.css';\r\n\r\nexport interface LMRProps {\r\n    className?: string | string[];\r\n    left?: string|JSX.Element;\r\n    right?: string|JSX.Element;\r\n    onClick?: ()=>void;\r\n}\r\n\r\n@observer\r\nexport class LMR extends React.Component<LMRProps> {\r\n    render() {\r\n        let {className, left, children, right, onClick} = this.props;\r\n        let l, r;\r\n        if (left !== undefined) l = <header>{left}</header>;\r\n        if (right !== undefined) r = <footer>{right}</footer>;\r\n        let cursor;\r\n        if (onClick !== undefined) cursor = 'cursor-pointer';\r\n        return <div className={classNames('va-lmr', className, cursor)} onClick={onClick}>\r\n            {l}\r\n            <div>{children}</div>\r\n            {r}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\n\r\nexport interface FAProps {\r\n    name: string;\r\n    className?: string;\r\n    size?: 'lg'|'2x'|'3x'|'4x'|'5x';\r\n    spin?: boolean;\r\n    fixWidth?: boolean;\r\n    border?: boolean;\r\n    pull?: 'left'|'right';\r\n    pulse?: boolean;\r\n    rotate?: 90|180|270;\r\n    flip?: 'horizontal'|'vertical';\r\n    inverse?: boolean;\r\n}\r\n\r\nexport class FA extends React.Component<FAProps> {\r\n    render() {\r\n        let {name, className, size, spin, fixWidth, border, pull, pulse, rotate, flip, inverse} = this.props;\r\n        let cn = classNames(className, 'fa',\r\n            name && ('fa-' + name),\r\n            size && 'fa-'+size,\r\n            fixWidth && 'fa-fw',\r\n            border && 'fa-border',\r\n            pull && 'fa-pull-' + pull,\r\n            spin && 'fa-spin',\r\n            pulse && 'fa-pulse',\r\n            rotate && 'fa-rotate-' + rotate,\r\n            flip && 'fa-flip-' + flip,\r\n            inverse && 'fa-inverse',\r\n        );\r\n        return <i className={cn} />\r\n    }\r\n}\r\n\r\nexport interface StackedFAProps {\r\n    className?: string;\r\n    size?: 'lg',\r\n}\r\nexport class StackedFA extends React.Component<StackedFAProps> {\r\n    render() {\r\n        let {className, size, children} = this.props;\r\n        let cn = classNames(\r\n            'fa-stack',\r\n            className,\r\n            size && 'fa-' + size);\r\n        return <span className={cn}>\r\n            {children}\r\n        </span>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\n\r\nexport const Muted = (props:any) => \r\n<small className={classNames('text-muted', props.className)} style={props.style}>\r\n    {props.children}\r\n</small>;\r\n","export * from './Badge';\r\nexport * from './LMR';\r\nexport * from './FA';\r\nexport * from './IconText';\r\nexport * from './Muted';\r\n","import * as React from 'react';\r\nimport { IObservableArray, computed } from 'mobx';\r\nimport { PageItems } from 'tonva-tools';\r\nimport {List} from './index';\r\n\r\nexport abstract class ListBase {\r\n    protected list: List;\r\n    constructor(list: List) {\r\n        this.list = list;\r\n    }\r\n    get isPaged():boolean {\r\n        let items = this.list.props.items;\r\n        return (items !== null && items !== undefined && Array.isArray(items) === false);\r\n    }\r\n    get items():any[]|IObservableArray<any> {\r\n        let items = this.list.props.items;\r\n        if (items === null) return null;\r\n        if (items === undefined) return undefined;\r\n        if (Array.isArray(items) === true)\r\n            return items as IObservableArray<any>;\r\n        else\r\n            return (items as PageItems<any>).items;\r\n    }\r\n    @computed get loading():boolean {\r\n        let items = this.list.props.items;\r\n        if (items === null) return false;\r\n        if (items === undefined) return true;\r\n        let pageItems = items as PageItems<any>;\r\n        if (pageItems.items === undefined) return false;\r\n        return pageItems.loading;\r\n    }\r\n    get selectedItems():any[] { return; }\r\n    updateProps(nextProps:any) {}\r\n    abstract render(item:any, index:number):JSX.Element;\r\n    protected renderContent(item:any, index:number) {\r\n        let {render} = this.list.props.item;\r\n        if (render === undefined) return <div className=\"px-3 py-2\">{JSON.stringify(item)}</div>;\r\n        return render(item, index);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {ListBase} from './base';\r\n\r\nexport class Clickable extends ListBase {\r\n    render(item:any, index:number):JSX.Element {\r\n        let {className, key, onClick} = this.list.props.item;\r\n        return <li key={key===undefined?index:key(item)} className={classNames('va-row-clickable', className)} onClick={()=>onClick(item)}>\r\n            {this.renderContent(item, index)}\r\n        </li>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {ListBase} from './base';\r\nimport { uid } from '../uid';\r\n\r\nexport class Static extends ListBase {\r\n    render(item:any, index:number):JSX.Element {\r\n        let {className, key, render} = this.list.props.item;\r\n        if (typeof item === 'string') {\r\n            let cn = classNames('va-list-gap', 'px-3', 'pt-1');\r\n            return <li key={uid()} className={cn}>{item}</li>;\r\n        }\r\n        return <li key={key===undefined?index:key(item)} className={classNames(className)}>\r\n            {this.renderContent(item, index)}\r\n        </li>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable, computed, IObservableArray} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport {ListBase} from './base';\r\nimport {uid} from '../uid';\r\nimport { PageItems } from 'tonva-tools';\r\n\r\nexport interface SelectableItem {\r\n    selected: boolean;\r\n    item: any;\r\n    labelId: string;\r\n}\r\n\r\nexport class Selectable extends ListBase {\r\n    private _items: SelectableItem[];\r\n    private _selectedItems: any[];\r\n    private input: HTMLInputElement;\r\n    private buildItems() {\r\n        console.log('buildItems in selectable.tsx');\r\n        let {items, selectedItems, compare} = this.list.props;\r\n        let itemsArray:any[] | IObservableArray<any>;\r\n        if (items === undefined) {\r\n            return this._items = undefined;\r\n        }\r\n        if (items === null) {\r\n            return this._items = null;\r\n        }\r\n        if (Array.isArray(items) === true) {\r\n            itemsArray = items as any;\r\n        }\r\n        else {\r\n            itemsArray = (items as PageItems<any>).items;\r\n        }\r\n        //let items = this.items;\r\n        this._selectedItems = selectedItems;\r\n        if (selectedItems === undefined) {\r\n            return this._items = itemsArray.map(v => {\r\n                return {\r\n                    selected:false, \r\n                    item:v, \r\n                    labelId:uid()\r\n                };\r\n            });\r\n        }\r\n        if (compare === undefined) {\r\n            return this._items = itemsArray.map(v => {\r\n                return {\r\n                    selected:selectedItems.find(si => si === v) !== undefined, \r\n                    item:v, \r\n                    labelId:uid()\r\n                };\r\n            });\r\n        }\r\n        return this._items = itemsArray.map(v => {\r\n            return {\r\n                selected:selectedItems.find(si => compare(v, si)) !== undefined, \r\n                item:v, \r\n                labelId:uid()\r\n            };\r\n        });\r\n    }\r\n    @computed get items() {\r\n        //if (this._items === undefined) \r\n        this.buildItems();\r\n        return this._items;\r\n    }\r\n    updateProps(nextProps:any) {\r\n        if (nextProps.selectedItems === this._selectedItems) return;\r\n        this.buildItems();\r\n    }\r\n    private onSelect(item:SelectableItem, selected:boolean) {\r\n        item.selected = selected;\r\n        let anySelected = this._items.some(v => v.selected);\r\n        this.list.props.item.onSelect(item.item, selected, anySelected);\r\n    }\r\n    \r\n    get selectedItems():any[] {\r\n        return this._items.filter(v => v.selected === true).map(v => v.item);\r\n    }\r\n    /*\r\n    set selectedItems(value: any[]) {\r\n        if (value === undefined) return;\r\n        if (this._items === undefined) return;\r\n        let sLen = this._items.length;\r\n        let list = value.slice();\r\n        for (let n=0; n<sLen; n++) {\r\n            let sItem = this._items[n];\r\n            let len = list.length;\r\n            if (len === 0) break;\r\n            let item = sItem.item;\r\n            for (let i=0; i<len; i++) {\r\n                let v = list[i];\r\n                if (item === v) {\r\n                    sItem.selected = true;\r\n                    value.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n        };\r\n    }\r\n    */\r\n    //w-100 mb-0 pl-3\r\n    //m-0 w-100\r\n    render(item:SelectableItem, index:number):JSX.Element {\r\n        let {className, key, render, onSelect} = this.list.props.item;\r\n        let {labelId, selected} = item;\r\n        return <li key={key===undefined?index:key(item)} className={classNames(className)}>\r\n            <div className=\"d-flex align-items-center px-3\">\r\n                <input ref={input=>{\r\n                        if (!input) return;\r\n                        this.input = input; input.checked = selected;\r\n                    }}\r\n                    className=\"\" type=\"checkbox\" value=\"\" id={labelId}\r\n                    defaultChecked={selected}\r\n                    onChange={(e)=>{\r\n                        this.onSelect(item, e.target.checked)} \r\n                    }/>\r\n                <label className=\"\" style={{flex:1, marginBottom:0}} htmlFor={labelId}>\r\n                    {this.renderContent(item.item, index)}\r\n                </label>\r\n            </div>\r\n        </li>\r\n    }\r\n}\r\n/*\r\n<label>\r\n<label className=\"custom-control custom-checkbox\">\r\n    <input type='checkbox' className=\"custom-control-input\"\r\n        //checked={selected}\r\n        onChange={(e)=>this.onSelect(item, e.target.checked)} />\r\n    <span className=\"custom-control-indicator\" />\r\n</label>\r\n{this.renderContent(item.item, index)}\r\n</label>\r\n*/\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {PageItems} from 'tonva-tools';\r\nimport {ListBase} from './base';\r\nimport {Clickable} from './clickable';\r\nimport {Static} from './static';\r\nimport {Selectable} from './selectable';\r\nimport \"../css/va-list.css\";\r\nimport { IObservableArray } from 'mobx';\r\n\r\ntype StaticRow = string|JSX.Element|(()=>string|JSX.Element);\r\n\r\nexport interface ListProps {\r\n    className?: string|string[];\r\n    items: any[] | IObservableArray<any> | PageItems<any>;\r\n    item: {\r\n        className?: string|string[];\r\n        render?: (item:any, index:number) => JSX.Element;\r\n        onSelect?: (item:any, isSelected:boolean, anySelected:boolean)=>void;\r\n        onClick?: (item:any)=>void;\r\n        key?: (item:any)=>string;\r\n    };\r\n    compare?:(item:any, selectItem)=>boolean;\r\n    selectedItems?:any[];\r\n    header?: StaticRow;\r\n    footer?: StaticRow;\r\n    before?: StaticRow;\r\n    loading?: StaticRow;\r\n    none?: StaticRow;\r\n}\r\n\r\n@observer\r\nexport class List extends React.Component<ListProps> {\r\n    private listBase: ListBase;\r\n    constructor(props:ListProps) {\r\n        super(props);\r\n        let {item} = this.props;\r\n        let {onClick, onSelect} = item;\r\n        if (onSelect !== undefined)\r\n            this.listBase = new Selectable(this);\r\n        else if (onClick !== undefined)\r\n            this.listBase = new Clickable(this);\r\n        else\r\n            this.listBase = new Static(this);\r\n    }\r\n    _$scroll = (direct: 'top'|'bottom') => {\r\n        console.log('############### items scroll to ' + direct);\r\n    }\r\n    componentWillUpdate(nextProps:ListProps, nextState, nextContext) {\r\n        this.listBase.updateProps(nextProps);\r\n    }\r\n    get selectedItems():any[] {\r\n        return this.listBase.selectedItems;\r\n    }\r\n    render() {\r\n        let {className, header, footer, before, loading, none, item, selectedItems} = this.props;\r\n        if (before === undefined) before = 'before';\r\n        if (loading === undefined) loading = 'loading';\r\n        if (none === undefined) none = 'none';        \r\n        //this.listBase.selectedItems = selectedItems;\r\n        let {isPaged, items, loading:isLoading} = this.listBase;\r\n        function staticRow(row:StaticRow, type:string) {\r\n            if (!row) return;\r\n            switch (typeof row) {\r\n                default:\r\n                case 'string': return <li className={\"va-list-\"+type}>{row}</li>;\r\n                case 'function': return <li className={\"va-list-\"+type}>{(row as ()=>string|JSX.Element)()}</li>;\r\n                case 'object': return <li>{row}</li>\r\n            } \r\n        }\r\n        let content:any;\r\n        if (items === null)\r\n            content = staticRow(before, 'before');\r\n        else if (items === undefined)\r\n            content = staticRow(loading, 'loading');\r\n        else if (items.length === 0)\r\n            content = staticRow(none, 'none');\r\n        else {\r\n            content = items.map((item, index) => {\r\n                return this.listBase.render(item, index);\r\n            });\r\n        }\r\n        return <ul className={classNames('va-list', className)}>\r\n            {staticRow(header, 'header')}\r\n            {content}\r\n            {staticRow(footer, 'footer')}\r\n        </ul>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport * as className from 'classnames';\r\nimport {ListView} from '../listView';\r\nimport {PropGridProps} from './PropGrid';\r\nimport {LabeledProp, StringProp, NumberProp, ListProp, ComponentProp} from './propView';\r\n\r\nexport abstract class PropRow {\r\n    setValues(values: any) {}\r\n    abstract render(key:string): any;\r\n}\r\n\r\nexport class PropBorder extends PropRow {\r\n    render(key:string): JSX.Element {\r\n        return <div key={'_b_' + key} className=\"\">\r\n            <div className=\"col-sm-12\">\r\n                <div style={{borderTop: '1px solid #f0f0f0'}} />\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class PropGap extends PropRow {\r\n    private param: string;\r\n    constructor(param?: string) {\r\n        super();\r\n        this.param = param;\r\n    }\r\n    render(key:string): JSX.Element {\r\n        let w: string;\r\n        switch (this.param) {\r\n            default: w = 'py-2'; break;\r\n            case '=': w = 'py-1'; break;\r\n            case '-': w = 'pb-1'; break;\r\n        }\r\n        let cn = className(w);\r\n        return <div key={'_g_' + key} className={cn} style={{backgroundColor: '#f0f0f0'}} />;\r\n    }\r\n}\r\n\r\nconst valueAlignStart = 'justify-content-start';\r\nconst valueAlignCenter = 'justify-content-center';\r\nconst valueAlignEnd = 'justify-content-end';\r\nexport abstract class LabeledPropRow extends PropRow {\r\n    protected gridProps: PropGridProps;\r\n    protected prop: LabeledProp;\r\n    protected content: any;\r\n    //protected values: any;\r\n    constructor(gridProps:PropGridProps, prop: LabeledProp) {\r\n        super();\r\n        this.gridProps = gridProps;\r\n        this.prop = prop;\r\n        //this.values = values;\r\n    }\r\n    render(key:string):any {\r\n        let {onClick, bk} = this.prop;\r\n        let cn = className({\r\n            \"cursor-pointer\": onClick !== undefined,\r\n            \"bg-white\": bk === undefined, \r\n            \"row\": true\r\n        });\r\n        return <div key={key} className={cn} onClick={onClick}>\r\n            {this.renderLabel()}\r\n            {this.renderProp()}\r\n        </div>;\r\n    }\r\n    protected renderLabel():any {\r\n        let {label} = this.prop;\r\n        if (label === undefined) return null;\r\n        return <label className=\"col-sm-2 col-form-label\">\r\n            {label}\r\n        </label>;\r\n    }\r\n    protected renderProp():any {\r\n        let {label, full} = this.prop as any;\r\n        let align, vAlign;\r\n        switch (this.gridProps.alignValue) {\r\n            case 'left': align = valueAlignStart; break;\r\n            case 'center': align = valueAlignCenter; break;\r\n            case 'right': align = valueAlignEnd; break;\r\n        }\r\n        switch (this.prop.vAlign) {\r\n            case 'top': vAlign = 'align-items-start'; break;\r\n            default:\r\n            case 'center': vAlign = 'align-items-center'; break;\r\n            case 'bottom': vAlign = 'align-items-end'; break;\r\n            case 'stretch': vAlign = 'align-items-stretch'; break;\r\n        }\r\n        let col:string;\r\n        if (full !== true)\r\n            col = label===undefined? 'col-sm-12':'col-sm-10';\r\n        else\r\n            col = 'w-100';\r\n        let cn = className(align, vAlign, col, 'd-flex');\r\n        return <div className={cn}>\r\n            {this.renderPropBody()}\r\n        </div>;\r\n    }\r\n    protected renderPropBody():any {\r\n        return <div className=\"form-control-plaintext\">\r\n            {this.renderPropContent()}\r\n        </div>;\r\n    }\r\n    protected renderPropContent():any {\r\n        return this.content;\r\n    }\r\n}\r\n\r\nexport class StringPropRow extends LabeledPropRow {\r\n    protected prop: StringProp;\r\n    setValues(values:any) {\r\n        if (values === undefined) this.content = undefined;\r\n        else this.content = values[this.prop.name];\r\n    }\r\n}\r\n\r\nexport class NumberPropRow extends LabeledPropRow {\r\n    protected prop: NumberProp;\r\n    setValues(values:any) {\r\n        if (values === undefined) this.content = undefined;\r\n        else this.content = values[this.prop.name];\r\n    }\r\n}\r\n\r\nexport class ListPropRow extends LabeledPropRow {\r\n    protected prop: ListProp;\r\n    setValues(values:any) {\r\n        if (values === undefined) this.content = undefined;\r\n        else {\r\n            let list = this.prop.list;\r\n            if (typeof list === 'string') this.content = values[list];\r\n            else this.content = undefined;\r\n        }\r\n    }\r\n    protected renderPropBody() {\r\n        let {list, row} = this.prop;\r\n        let items:any[] = typeof list === 'string'? this.content : list;\r\n        if (items === undefined) return <div/>;\r\n        // new row(item)\r\n        return <div className=\"w-100\">\r\n            {\r\n                items.map((item, index) => <React.Fragment key={index}>\r\n                    {index===0? null: <div style={{width:'100%', borderBottom:'1px solid #f0f0f0'}} />}\r\n                    {React.createElement(row, item)}\r\n                </React.Fragment>)\r\n            }\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class ComponentPropRow extends LabeledPropRow {\r\n    protected prop: ComponentProp;\r\n    protected renderPropBody() {\r\n        let {component} = this.prop;\r\n        return component;\r\n    }\r\n}\r\n\r\nexport class PropContainer extends PropRow {\r\n    render(key:string): JSX.Element {\r\n        return <div className=\"bg-white\">\r\n            <label className=\"col-sm-2 col-form-label\">\r\n                AAABBBCCC\r\n            </label>\r\n            <div className=\"col-sm-10\">\r\n                <div className=\"form-control-plaintext\">\r\n                    dsfasfa sdf asdf a\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n","import {ListViewProps} from '../listView';\r\nimport {PropGridProps} from './PropGrid';\r\nimport {PropRow, PropBorder, PropGap, PropContainer,\r\n    StringPropRow, NumberPropRow, ListPropRow, ComponentPropRow} from './row';\r\n\r\nexport interface Format {\r\n\r\n}\r\n\r\nexport interface PropBase {\r\n    onClick?: ()=>void;\r\n}\r\n\r\nexport interface LabeledProp extends PropBase {\r\n    label?: string;\r\n    bk?: string;\r\n    vAlign?: 'top'|'bottom'|'center'|'stretch';\r\n}\r\n\r\nexport interface StringProp extends LabeledProp {\r\n    type: 'string';\r\n    name: string;\r\n}\r\n\r\nexport interface NumberProp extends LabeledProp {\r\n    type: 'number';\r\n    name: string;\r\n}\r\n\r\nexport interface FormatProp extends LabeledProp {\r\n    type: 'format';\r\n    format: Format;\r\n}\r\n\r\nexport interface ListProp extends LabeledProp {\r\n    type: 'list';\r\n    list: string | any[];  // string 表示名字，否则就是值\r\n    row: new (props:any) => React.Component;\r\n}\r\n\r\nexport interface ComponentProp extends LabeledProp {\r\n    type: 'component';\r\n    full?: boolean;\r\n    component: any; //JSX.Element;\r\n}\r\n\r\nexport type Prop = StringProp | NumberProp | FormatProp | ListProp | ComponentProp | string;\r\n\r\nexport class PropView {\r\n    private gridProps:PropGridProps\r\n    private props: Prop[];\r\n    //private values:any;\r\n    private rows: PropRow[];\r\n\r\n    constructor(gridProps:PropGridProps, props:Prop[]) {\r\n        this.gridProps = gridProps;\r\n        this.props = props;\r\n        //this.values = values;\r\n        this.buildRows();\r\n    }\r\n\r\n    private buildRows() {\r\n        this.rows = [];\r\n        let isGap:boolean = true;\r\n        for (let prop of this.props) {\r\n            if (typeof prop === 'string') {\r\n                this.rows.push(new PropGap(prop));\r\n                isGap = true;\r\n            }\r\n            else {\r\n                if (!isGap) this.rows.push(new PropBorder());\r\n                let row;\r\n                switch (prop.type) {\r\n                    default: continue;\r\n                    case 'string': row = new StringPropRow(this.gridProps, prop); break;\r\n                    case 'number': row = new NumberPropRow(this.gridProps, prop); break;\r\n                    case 'list': row = new ListPropRow(this.gridProps, prop); break;\r\n                    case 'component': row = new ComponentPropRow(this.gridProps, prop); break;\r\n                }\r\n                this.rows.push(row);\r\n                isGap = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    setValues(values: any) {\r\n        for (let r of this.rows) r.setValues(values);\r\n    }\r\n\r\n    render() {\r\n        return this.rows.map((row, index) => row.render(String(index)));\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {Prop, PropView} from './propView';\r\nimport {PropContainer, PropBorder, PropGap} from './row';\r\n\r\nexport interface PropGridProps {\r\n    className?: string;\r\n    rows: Prop[];\r\n    values: any;\r\n    alignValue?: 'left'|'center'|'right';\r\n}\r\n\r\n@observer\r\nexport class PropGrid extends React.Component<PropGridProps> {\r\n/*\r\n    private propView: PropView;\r\n    constructor(props:PropGridProps) {\r\n        super(props);\r\n    }\r\n*/\r\n/*\r\n    componentWillMount() {\r\n        this.propView = new PropView(this.props.rows);\r\n        this.propView.setValues(this.props.values);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps: Readonly<PropGridProps>, nextContext: any) {\r\n        this.propView = new PropView(this.props.rows);\r\n        this.propView.setValues(nextProps.values);\r\n        this.forceUpdate();\r\n    }\r\n*/\r\n    render() {\r\n        let {className, rows, values} = this.props;\r\n        let propView = new PropView(this.props, rows);\r\n        propView.setValues(values);\r\n        let cn = classNames('container-fluid', className);\r\n        return <div className={cn}>\r\n            {propView.render()}\r\n        </div>;\r\n    }\r\n}\r\n","export * from './propView';\r\nexport * from './row';\r\nexport * from './PropGrid';\r\n","import * as React from 'react';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { ItemEdit } from './itemEdit';\r\n\r\nexport class StringItemEdit extends ItemEdit {\r\n    protected uiItem: UiTextItem;\r\n    protected async internalStart():Promise<any> {\r\n        return new Promise<any>((resolve, reject) => {\r\n            let element = React.createElement(this.page, {resolve:resolve, reject:reject});\r\n            nav.push(element,reject);\r\n        });\r\n    }\r\n\r\n    private onChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.newValue = evt.target.value;\r\n        let preValue = this.value;\r\n        this.isChanged = (this.newValue != preValue);\r\n    }\r\n\r\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\r\n        let {resolve, reject} = props;\r\n        let right = <button\r\n            className=\"btn btn-sm btn-success\"\r\n            disabled={!this.isChanged}\r\n            onClick={()=>resolve(this.newValue)}>保存</button>;\r\n        return <Page header={'更改' + this.label} right={right}>\r\n            <div className=\"m-3\">\r\n                <input type=\"text\" \r\n                    onChange={this.onChange}\r\n                    className=\"form-control\" \r\n                    defaultValue={this.value} />\r\n                {\r\n                    this.uiItem && <div className=\"small muted m-2\">{this.uiItem.placeholder}</div>\r\n                }\r\n            </div>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\r\nimport { observer } from 'mobx-react';\r\nimport { ItemEdit } from './itemEdit';\r\nimport { StringItemEdit } from './stringItemEdit';\r\nimport { ImageItemEdit } from './imageItemEdit';\r\nimport { Image } from '../image';\r\n\r\nexport interface EditProps {\r\n    className?: string;\r\n    schema: Schema;\r\n    data: any;\r\n    onItemClick?: (itemSchema: ItemSchema, uiItem: UiItem, value: any) => Promise<void>;\r\n    onItemChanged?: (itemSchema: ItemSchema, newValue:any, preValue:any) => Promise<void>;\r\n    uiSchema?: UiSchema;\r\n    sepClassName?: string;\r\n    topBorderClassName?: string;\r\n    bottomBorderClassName?: string;\r\n    rowContainerClassName?: string;\r\n}\r\n\r\n@observer\r\nexport class Edit extends React.Component<EditProps> {\r\n    private defaultSepClassName = \"border-top edit-sep-light-gray\";\r\n    private defaultRowContainerClassName = \"d-flex px-3 py-2 cursor-pointer bg-white align-items-center\";\r\n    private topBorder:JSX.Element;\r\n    private bottomBorder:JSX.Element;\r\n    private rowContainerClassName?: string;\r\n    private sep:JSX.Element;\r\n    private uiSchema: {[name:string]: UiItem};\r\n\r\n    constructor(props: EditProps) {\r\n        super(props);\r\n        let {topBorderClassName, bottomBorderClassName, sepClassName, rowContainerClassName, uiSchema} = props;\r\n        this.topBorder = <div className={topBorderClassName || this.defaultSepClassName} />;\r\n        this.bottomBorder = <div className={bottomBorderClassName || this.defaultSepClassName} />;\r\n        this.rowContainerClassName = rowContainerClassName || this.defaultRowContainerClassName;\r\n        this.sep = <div className={sepClassName || this.defaultSepClassName} />;\r\n        this.uiSchema = (uiSchema && uiSchema.items) || {};\r\n    }\r\n\r\n    render() {\r\n        let elItems:JSX.Element[] = [];\r\n        let {schema} = this.props;\r\n        let len = schema.length;\r\n\r\n        elItems.push(this.topBorder);\r\n        for (let i=0; i<len; i++) {\r\n            if (i>0) elItems.push(this.sep);\r\n            elItems.push(this.renderRow(schema[i]));\r\n        }\r\n        elItems.push(this.bottomBorder);\r\n\r\n        return <div>\r\n            {elItems.map((v, index) => <React.Fragment key={index}>{v}</React.Fragment>)}\r\n        </div>;\r\n    }\r\n\r\n    private renderRow(itemSchema: ItemSchema):JSX.Element {\r\n        let {name, type} = itemSchema;\r\n        let divValue:any;\r\n        let uiItem = this.uiSchema[name];\r\n        let label:string = (uiItem && uiItem.label) || name;\r\n        let value:any = this.props.data[name];\r\n        switch (type) {\r\n            default:\r\n                divValue = value? <b>{value}</b> : <small className=\"text-muted\">(无)</small>;\r\n                break;\r\n            case 'image':\r\n                divValue = <Image className=\"w-4c h-4c\" src={value} />;\r\n                break;\r\n        }\r\n        return <div className={this.rowContainerClassName} onClick={async ()=>await this.rowClick(itemSchema, uiItem, label, value)}>\r\n            <div className=\"w-6c\">{label}</div>\r\n            <div className=\"flex-fill d-flex justify-content-end\">{divValue}</div>\r\n            <div className=\"w-2c text-right\"><i className=\"fa fa-chevron-right\" /></div>\r\n        </div>;\r\n    }\r\n\r\n    private rowClick = async (itemSchema: ItemSchema, uiItem: UiItem, label:string, value: any) => {\r\n        let {onItemChanged, onItemClick} = this.props;\r\n        let changeValue:any;\r\n        if (onItemClick !== undefined) {\r\n            await onItemClick(itemSchema, uiItem, value);\r\n            return;\r\n        }\r\n        let itemEdit:ItemEdit = createItemEdit(itemSchema, uiItem, label, value);\r\n        try {\r\n            changeValue = await itemEdit.start();\r\n            if (changeValue != value) {\r\n                if (onItemChanged === undefined) {\r\n                    alert(`${itemSchema.name} value changed, new: ${changeValue}, pre: ${value}`);\r\n                }\r\n                else {\r\n                    await onItemChanged(itemSchema, changeValue, value);\r\n                }\r\n            }\r\n            await itemEdit.end();\r\n        }\r\n        catch (err) {\r\n            console.log('no value changed');\r\n        }\r\n    }\r\n}\r\n\r\nfunction createItemEdit(itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any):ItemEdit {\r\n    let itemEdit: new (itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any) => ItemEdit;\r\n    if (uiItem !== undefined) {\r\n        switch (uiItem.widget) {\r\n            case 'text': itemEdit = StringItemEdit; break;\r\n            case 'image': itemEdit = ImageItemEdit; break;\r\n        }\r\n    }\r\n    else {\r\n        switch (itemSchema.type) {\r\n            case 'string': itemEdit = StringItemEdit; break;\r\n            case 'image': itemEdit = ImageItemEdit; break;\r\n        }\r\n    }\r\n    if (itemEdit === undefined) return;\r\n    return new itemEdit(itemSchema, uiItem, label, value);\r\n}\r\n","export * from './edit';\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {IObservableValue, IComputedValue} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport '../css/va-row.css';\r\n\r\nexport interface ListItem {\r\n    key?: string|number;\r\n    date?: Date;\r\n    icon?: string | JSX.Element;\r\n    main?: string;\r\n    vice?: string;\r\n    middle?: string | JSX.Element;\r\n    midSize?: number;\r\n    right?: string | JSX.Element;\r\n    onClick?: () => void;\r\n    unread?: number|IComputedValue<number>;         // <0 表示red dot\r\n}\r\n\r\nexport interface ListRowProps extends ListItem {\r\n    //onClick: () => void;\r\n}\r\n\r\nexport interface ListRowState {\r\n    pressed: boolean;\r\n}\r\n\r\n@observer\r\nexport class ListRow extends React.Component<ListRowProps, ListRowState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pressed: false,\r\n        }\r\n    }\r\n    render() {\r\n        let {date, main, vice, middle, midSize, icon, unread, right, onClick} = this.props;\r\n        let header, isIcon:boolean, noteNum;\r\n        if (unread !== undefined) {\r\n            let uv:number;\r\n            if (typeof unread === 'number') uv = unread;\r\n            else uv = unread.get();\r\n                if (uv > 0)\r\n                noteNum = <b>{uv}</b>;\r\n            else if (uv < 0)\r\n                noteNum = <b className='dot' />;\r\n        }\r\n        switch (typeof icon) {\r\n            case 'object':\r\n                header = <header>{icon}{noteNum}</header>; \r\n                isIcon= false;\r\n                break;\r\n            case 'string': \r\n                header = <header className='icon'><img src={icon as string} />{noteNum}</header>;\r\n                isIcon= true; \r\n                break;\r\n        }\r\n        let mid;\r\n        if (middle !== undefined) {\r\n            switch (typeof middle) {\r\n                case 'string':\r\n                    mid = <div style={{flex:midSize}}>{middle}</div>;\r\n                    break;\r\n                default:\r\n                    mid = middle;\r\n                    break;\r\n            }\r\n        }\r\n        let footer;\r\n        if (right !== undefined) {\r\n            if (typeof right === 'string')\r\n                footer = <footer><small className=\"text-muted\">{right}</small></footer>;\r\n            else\r\n                footer = <footer>{right}</footer>;\r\n        }\r\n        let viceSpan;\r\n        if (vice !== undefined) viceSpan = <span>{vice}</span>;\r\n        let cn = classNames('va-row', {icon:isIcon, pressed: this.state.pressed}, {\"va-action\": onClick !== undefined});\r\n        return (\r\n        <li className={cn} onClick={onClick}>\r\n            {header}\r\n            <div>\r\n                <div>{main}</div>\r\n                {viceSpan}\r\n            </div>\r\n            {mid}\r\n            {footer}\r\n        </li>\r\n        );\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {ListItem, ListRow} from './listRow';\r\n\r\nexport interface ListViewProps {\r\n    className?: string;\r\n    items?: any[];\r\n    renderRow?: (item:any, index:number, ex?:any) => JSX.Element;\r\n    ex?: any;\r\n    header?: string|JSX.Element;\r\n    beforeLoad?: string|JSX.Element;\r\n    none?: string|JSX.Element;\r\n    footer?: string|JSX.Element;\r\n    itemClick?: (item:any)=>void;\r\n    converter?: (item:any)=>ListItem;\r\n}\r\n\r\n@observer\r\nexport class ListView extends React.Component<ListViewProps, null> {\r\n    render() {\r\n        let {header, items, beforeLoad, none, renderRow, className, footer, itemClick, converter} = this.props;\r\n        let cn = classNames(className, 'va-list');\r\n        let content, elHeader;\r\n        if (items === undefined)\r\n            content = beforeLoad === null? null : <li className='empty'>\r\n                {beforeLoad || '...'}\r\n            </li>;\r\n        else if (items.length === 0) {\r\n            content = (\r\n            <li className='empty'>\r\n                {\r\n                    none || '[none]'\r\n                }\r\n            </li>);\r\n        }\r\n        else if (renderRow !== undefined) {\r\n            content = items.map((item, index) => renderRow(item, index, this.props.ex));\r\n        }\r\n        else {\r\n            content = items.map((item, index) => {\r\n                let onClick = item.onClick;\r\n                if (onClick === undefined && itemClick !== undefined) \r\n                    onClick = ()=>itemClick(item);\r\n                let listItem:ListItem;\r\n                if (converter !== undefined) {\r\n                    listItem = converter(item);\r\n                    if (listItem === undefined) return null;\r\n                }\r\n                else {\r\n                    listItem = {\r\n                        ...item\r\n                    }\r\n                }\r\n                if (listItem.key === undefined) listItem.key = listItem.main;\r\n                return <ListRow onClick={onClick} {...listItem} />;\r\n            });\r\n        }\r\n        if (header !== undefined) {\r\n            if (typeof header === 'string') {\r\n                elHeader = <div className='va-list-header'>{header}</div>;\r\n            }\r\n            else {\r\n                elHeader = header;\r\n            }\r\n        }\r\n\r\n        return (\r\n        <div className={cn}>\r\n            {elHeader}\r\n            <ul>\r\n                {content}\r\n            </ul>\r\n            {footer}\r\n        </div>\r\n        )\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { VPage, Page, Form, ItemSchema, UiSchema, StringSchema, UiTextItem, UiPasswordItem, ButtonSchema, Edit, ImageSchema, nav, UiImageItem } from '../ui';\r\nimport userApi from './userApi';\r\n\r\nexport class EditMeInfo extends React.Component {\r\n    private schema:ItemSchema[] = [\r\n        {name:'nick', type:'string'} as StringSchema,\r\n        {name:'icon', type:'image'} as ImageSchema\r\n    ];\r\n    private uiSchema:UiSchema = {\r\n        items: {\r\n            nick: {widget:'text', label:'别名', placeholder:'好的别名更方便记忆'} as UiTextItem,\r\n            icon: {widget:'image', label:'头像'} as UiImageItem,\r\n        }\r\n    }\r\n    @observable private data:any;\r\n\r\n    constructor(props:any) {\r\n        super(props);\r\n        let {nick, icon} = nav.user;\r\n        this.data = {\r\n            nick: nick,\r\n            icon: icon,\r\n        }\r\n    }\r\n\r\n    private onItemChanged = async (itemSchema:ItemSchema, newValue:any, preValue:any) => {\r\n        let {name} = itemSchema;\r\n        await userApi.userSetProp(name, newValue);\r\n        this.data[name] = newValue;\r\n        nav.user[name] = newValue;\r\n        nav.saveLocalUser();\r\n    }\r\n\r\n    render() {\r\n        return <Page header=\"个人信息\">\r\n            <Edit schema={this.schema} uiSchema={this.uiSchema}\r\n                data={this.data}\r\n                onItemChanged={this.onItemChanged} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport { IObservableValue } from 'mobx/lib/internal';\r\n\r\nexport type TabCaption = (selected:boolean) => JSX.Element;\r\n\r\nexport interface TabProp {\r\n    name: string;\r\n    caption: TabCaption;\r\n    content: () => JSX.Element;\r\n    notify?: IObservableValue<number>;\r\n}\r\n\r\nexport interface TabsProps {\r\n    tabs: TabProp[];\r\n    size?: 'sm' | 'lg' | 'md';\r\n    tabBack?: string;\r\n    contentBack?: string;\r\n    sep?: string;\r\n    selected?: string;\r\n}\r\n\r\nclass Tab {\r\n    name: string;\r\n    @observable selected: boolean;\r\n    caption: TabCaption;\r\n    contentBuilder: ()=>JSX.Element;\r\n    notify: IObservableValue<number>;\r\n\r\n    private _content: JSX.Element;\r\n    get content(): JSX.Element {\r\n        if (this.selected !== true) return this._content;\r\n        if (this._content !== undefined) return this._content;\r\n        return this._content = this.contentBuilder();\r\n    }\r\n}\r\n\r\nexport const TabCaptionComponent = (label:string, icon:string, color:string) => <div \r\n    className={'d-flex justify-content-center align-items-center flex-column cursor-pointer ' + color}>\r\n    <div><i className={'fa fa-lg fa-' + icon} /></div>\r\n    <small>{label}</small>\r\n</div>;\r\n\r\n@observer export class Tabs extends React.Component<TabsProps> {\r\n    private size: string;\r\n    private tabBack: string;\r\n    private contentBack: string;\r\n    private sep: string;\r\n    @observable private selectedTab: Tab;\r\n    @observable private tabs: Tab[] = [];\r\n\r\n    constructor(props: TabsProps) {\r\n        super(props);\r\n        let {size, tabs, tabBack, contentBack, sep, selected} = this.props;\r\n        switch (size) {\r\n            default:\r\n            case 'md': this.size = '3.2rem'; break;\r\n            case 'sm': this.size = '4rem'; break;\r\n            case 'lg': this.size = '2.5rem'; break;\r\n        }\r\n        this.tabs.push(...tabs.map(v => {\r\n                let tab = new Tab();\r\n                tab.name = v.name;\r\n                tab.selected = false;\r\n                tab.caption = v.caption;\r\n                tab.contentBuilder = v.content;\r\n                tab.notify = v.notify;\r\n                return tab;\r\n            }\r\n        ));\r\n        this.tabBack = tabBack || 'bg-light';\r\n        this.contentBack = contentBack;\r\n        this.sep = sep || 'border-top border-gray';\r\n        if (selected !== undefined) {\r\n            this.selectedTab = this.tabs.find(v => v.name === selected);\r\n        }\r\n        if (this.selectedTab === undefined) this.selectedTab = this.tabs[0];\r\n        this.selectedTab.selected = true;\r\n    }\r\n\r\n    private tabClick = (tab:Tab) => {\r\n        this.selectedTab.selected = false;\r\n        tab.selected = true;\r\n        this.selectedTab = tab;\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"tab\">\r\n            <div className={this.contentBack} style={{height: 'calc(100% - ' + this.size + ')'}}>\r\n                {this.tabs.map((v,index) => {\r\n                    let style:React.CSSProperties={\r\n                        display: v.selected===true? undefined : 'none'};\r\n                    return <div key={index} style={style}>{v.content}</div>;\r\n                })}\r\n            </div>\r\n            <div className={classNames(this.tabBack, this.sep)} style={{height: this.size}}>\r\n                {this.tabs.map((v,index) => {\r\n                    let {selected, caption, notify} = v;\r\n                    let notifyCircle:any;\r\n                    if (notify !== undefined) {\r\n                        let num = notify.get();\r\n                        if (num !== undefined) {\r\n                            if (num > 0) notifyCircle = <u>{num>99?'99+':num}</u>;\r\n                            else if (num < 0) notifyCircle = <u className=\"dot\" />;\r\n                        }\r\n                    }\r\n                    return <div key={index} className=\"\" onClick={()=>this.tabClick(v)}>\r\n                        <div className=\"align-self-center\">\r\n                            {notifyCircle}\r\n                            {caption(selected)}\r\n                        </div>\r\n                    </div>\r\n                })}\r\n            </div>\r\n        </div>\r\n    }\r\n};\r\n","import * as React from 'react';\r\nimport {FetchError} from '../fetchError';\r\nimport { refetchApi } from '../net';\r\n\r\nexport interface FetchErrorProps extends FetchError {\r\n    clearError: ()=>void\r\n}\r\n\r\nexport default class FetchErrorView extends React.Component<FetchErrorProps, null> {\r\n    private reApi = async () => {\r\n        this.props.clearError();\r\n        const {channel, url, options, resolve, reject} = this.props;\r\n        await refetchApi(channel, url, options, resolve, reject);\r\n    }\r\n    private close = async () => {\r\n        this.props.clearError();\r\n    }\r\n    render() {\r\n        let {error, url} = this.props;\r\n            //let errMsg = fetchError.errorMsg;\r\n        let errContent;\r\n        if (typeof error === 'object') {\r\n            let err = [];\r\n            for (let i in error) {\r\n                err.push(<li key={i}><label>{i}</label><div>{error[i]}</div></li>);\r\n            }\r\n            errContent = <ul>{err}</ul>;\r\n        }\r\n        else {\r\n            errContent = <div>{error}</div>;\r\n        }\r\n        return <li>\r\n            <article className=\"page-container\">\r\n                <section>\r\n                    <div  className=\"va-error\">\r\n                        <div>网络出现问题</div>\r\n                        <div>点击重新访问</div>\r\n                        <div>url: {url}</div>\r\n                        {errContent}\r\n                        <div className=\"p-3\">\r\n                            <button type='button' onClick={this.reApi}>重新API</button>\r\n                            <button type='button' onClick={this.close}>关闭</button>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </article>\r\n        </li>;\r\n    }\r\n}\r\n","import {User, Guest, Unit} from './user';\r\n\r\nexport interface ClearableData {\r\n    clear(): void;\r\n}\r\n\r\nexport class Data<T> implements ClearableData {\r\n    private name: string;\r\n    private value?: T;\r\n    constructor(name: string) {this.name = name; }\r\n    get(): T {\r\n        if (this.value !== undefined) return this.value;\r\n        let v = localStorage.getItem(this.name);\r\n        return this.value = v === null ? undefined : JSON.parse(v); \r\n    }\r\n    set(value: T) {\r\n        if (!value) { this.clear(); return; }\r\n        this.value = value;\r\n        localStorage.setItem(this.name, JSON.stringify(value));\r\n    }\r\n    clear() {\r\n        this.value = undefined;\r\n        localStorage.removeItem(this.name);\r\n    }\r\n}\r\n\r\nexport class LocalData {\r\n    user = new Data<User>('user');\r\n    guest = new Data<Guest>('guest');\r\n    unit = new Data<Unit>('unit');\r\n    homeTabCur = new Data<number>('homeTabCur');\r\n\r\n    logoutClear() {\r\n        [\r\n            this.user,\r\n            this.homeTabCur\r\n        ].map(d => d.clear());\r\n    }\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import {CenterApi, User, meInFrame} from 'tonva-tools';\r\nimport { string } from 'prop-types';\r\n\r\nclass MainApi extends CenterApi {\r\n    async stickies():Promise<any[]> {\r\n        return await this.get('sticky/list', {start:0, pageSize:30});\r\n    }\r\n\r\n    async ties():Promise<any[]> {\r\n        return await this.get('tie/list', {start:0, pageSize:30});\r\n    }\r\n\r\n    async apps(unit:number):Promise<any> {\r\n        return await this.get('tie/apps', {unit:unit});\r\n    }\r\n\r\n    async appApi(unit:number, app:number, apiName:string) {\r\n        return await this.get('tie/app-api', {unit:unit, app:app, apiName:apiName});\r\n    }\r\n\r\n    async userId(name:string):Promise<number> {\r\n        return await this.get('tie/user-id', {name:name});\r\n    }\r\n\r\n    async userAdminUnits():Promise<any[]> {\r\n        return await this.get('tie/user-admin-units', {});\r\n    }\r\n\r\n    async sendMessage(toUser:number, type:string, content:any) {\r\n        let {unit} = meInFrame;\r\n        let adminApp = 0;\r\n        return await this.post('tie/send-message', {\r\n            type: type, \r\n            fromUnit: unit, \r\n            fromApp: adminApp,\r\n            toUser: toUser, \r\n            content: content, \r\n        });\r\n    }\r\n\r\n    async unit(unit:number):Promise<any> {\r\n        return await this.get('unit/', {unit:unit});\r\n    }\r\n\r\n    async unitMemberCount(unit:number):Promise<number> {\r\n        return await this.get('unit/member-count', {unit:unit});\r\n    }\r\n\r\n    async unitAdmins(unit:number):Promise<any[]> {\r\n        return await this.get('unit/admins', {unit:unit});\r\n    }\r\n\r\n    async unitSetAdmin(fellow:number, unit:number, isOwner:number, isAdmin:number):Promise<any> {\r\n        return await this.post('unit/set-admin', {fellow:fellow, unit:unit, isOwner:isOwner, isAdmin:isAdmin});\r\n    }\r\n\r\n    async unitAddAdmin(user:string, unit:number, isOwner:number, isAdmin:number):Promise<any> {\r\n        return await this.post('unit/add-admin', {user:user, unit:unit, isOwner:isOwner, isAdmin:isAdmin});\r\n    }\r\n\r\n    async unitApps(unit:number):Promise<any[]> {\r\n        return await this.get('unit/apps', {unit:unit});\r\n    }\r\n\r\n    async unitAddApp(unit:number, app:number):Promise<number> {\r\n        let ret = await this.post('unit/add-app', {unit:unit, app:app});\r\n        return ret;\r\n    }\r\n\r\n    async unitDeleteApp(unit:number, app:number, deleted:number):Promise<void> {\r\n        await this.post('unit/delete-app', {unit:unit, app:app, deleted:deleted});\r\n    }\r\n\r\n    async unitChangeProp(unit:number, prop:string, value:any):Promise<void> {\r\n        await this.post('unit/change-prop', {unit:unit, prop:prop, value:value});\r\n    }\r\n\r\n    async searchApp(unit:number, key:string, pageStart:any, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/search-app', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n\r\n    async unitRoles(unit:number):Promise<any[]> {\r\n        return await this.get('unit/roles', {unit:unit});\r\n    }\r\n\r\n    async unitAddRole(unit:number, name:string, discription:string):Promise<number> {\r\n        return await this.post('unit/add-role', {unit:unit, name:name, discription:discription});\r\n    }\r\n\r\n    async unitRoleChangeProp(unit:number, role:number, prop:string, value:any):Promise<void> {\r\n        await this.post('unit/change-role-prop', {unit:unit, role:role, prop:prop, value:value});\r\n    }\r\n\r\n    async unitRoleApps(unit:number, role:number):Promise<any[]> {\r\n        return await this.get('unit/role-apps', {unit:unit, role:role});\r\n    }\r\n\r\n    async unitRoleSetApps(unit:number, role:number, apps:number[]):Promise<void> {\r\n        await this.post('unit/role-set-apps', {unit:unit, role:role, apps:apps});\r\n    }\r\n\r\n    async unitMembers(unit:number, role:number, key:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/members', {unit:unit, role:role, key, pageStart, pageSize});\r\n    }\r\n\r\n    async unitAssignMember(unit:number, member:number, assigned:string):Promise<void> {\r\n        await this.post('unit/assign-member', {unit:unit, member:member, assigned:assigned});\r\n    }\r\n\r\n    async unitMemberRoles(unit:number, member:number):Promise<any[]> {\r\n        return await this.get('unit/member-roles', {unit:unit, member:member});\r\n    }\r\n\r\n    async unitSetMemberRoles(unit:number, member:number, roles:number[]):Promise<void> {\r\n        await this.post('unit/member-set-roles', {unit:unit, member:member, roles:roles});\r\n    }\r\n\r\n    async unitUsers(unit:number, key:string, pageStart:number, pageSize:number):Promise<any> {\r\n        return await this.get('unit/users', {unit: unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitAppUsers(unit:number, key:string, pageStart:number, pageSize:number):Promise<any> {\r\n        return await this.get('unit/app-users', {unit: unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitOneAppUsers(unit:number, app:number, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/one-app-users', {unit: unit, app:app, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitOneUserApps(unit:number, user:number, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/one-user-apps', {unit: unit, user:user, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitAppEditUsers(unit:number, app:number, key:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/app-edit-users', {unit: unit, app:app, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitUserEditApps(unit:number, user:number, key:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/user-edit-apps', {unit: unit, user:user, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async bindAppUser(unit:number, app:number, user:number, bind:number):Promise<void> {\r\n        await this.post('unit/bind-app-user', {unit: unit, app:app, user:user, bind:bind});\r\n    }\r\n\r\n    async userFromKey(key:string):Promise<any> {\r\n        return await this.get('tie/user-from-key', {key:key});\r\n    }\r\n    async unitAddUser(unit:number, user:number) {\r\n        await this.post('unit/add-user', {unit:unit, user:user});\r\n    }\r\n}\r\n\r\nexport const mainApi = new MainApi('tv/', undefined);\r\n","import {CenterApi} from 'tonva-tools';\r\n\r\nclass DevApi extends CenterApi {\r\n    async uqBuilderUrl():Promise<any> {\r\n        let ret = await this.get('uq-builder-url', undefined);\r\n        return ret;\r\n    }    \r\n    async counts(unit:number):Promise<any> {\r\n        return await this.get('counts', {unit:unit});\r\n    }\r\n    async app(id:number):Promise<any> {\r\n        return await this.get('app', {id:id});\r\n    }\r\n    async uq(id:number):Promise<any> {\r\n        return await this.get('uq', {id:id});\r\n    }\r\n    async server(id:number):Promise<any> {\r\n        return await this.get('server', {id:id});\r\n    }\r\n    async uqdb(id:number):Promise<any> {\r\n        return await this.get('uqdb', {id:id});\r\n    }\r\n    async apps(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('apps', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async uqs(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('uqs', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async buses(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('buses', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async servers(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('servers', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async uqdbs(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('uqdbs', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async services(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('services', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async saveApp(values:any):Promise<number> {\r\n        return await this.post('app-save', values);\r\n    }\r\n    async saveUq(values:any):Promise<number> {\r\n        return await this.post('uq-save', values);\r\n    }\r\n    async saveBus(values:any):Promise<number> {\r\n        return await this.post('bus-save', values);\r\n    }\r\n    async saveServer(values:any):Promise<number> {\r\n        return await this.post('server-save', values);\r\n    }\r\n    async saveUqdb(values:any):Promise<number> {\r\n        return await this.post('uqdb-save', values);\r\n    }\r\n    async saveService(values:any):Promise<number> {\r\n        return await this.post('service-save', values);\r\n    }\r\n    async delApp(unit:number,id:number):Promise<void> {\r\n        return await this.post('app-del', {unit:unit, id:id});\r\n    }\r\n    async delUq(unit:number,id:number):Promise<void> {\r\n        return await this.post('uq-del', {unit:unit, id:id});\r\n    }\r\n    async delBus(unit:number,id:number):Promise<void> {\r\n        return await this.post('bus-del', {unit:unit, id:id});\r\n    }\r\n    async delServer(unit:number,id:number):Promise<void> {\r\n        return await this.post('server-del', {unit:unit, id:id});\r\n    }\r\n    async delUqdb(unit:number,id:number):Promise<void> {\r\n        return await this.post('uqdb-del', {unit:unit, id:id});\r\n    }\r\n    async delService(unit:number,id:number):Promise<void> {\r\n        return await this.post('service-del', {unit:unit, id:id});\r\n    }\r\n    async loadAppUqs(app:number):Promise<any[]> {\r\n        return await this.get('app-uqs', {app: app});\r\n    }\r\n    async appBindUq(unit:number,app:number,uqs:{id:number, access:string[]}[]):Promise<void> {\r\n        let uqsText:string;\r\n        if (uqs !== undefined) {\r\n            uqsText = uqs.map(v => String(v.id)+'|'+v.access.join(',')).join(';');\r\n        }\r\n        await this.post('app-bind-uq', {unit:unit, app:app, uqs:uqsText});\r\n    }\r\n    async searchUq(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('uq-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async getMyUqs(unit:number):Promise<any[]> {\r\n        return await this.get('my-uqs', {unit:unit});\r\n    }\r\n    async searchApp(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('app-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async searchServer(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('server-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async searchUqdb(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('uqdb-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    //async loadAppServices(unit:number, app:number):Promise<any[]> {\r\n    //    return await this.get('app-services', {unit:unit, app:app});\r\n    //}\r\n    async loadUqServices(unit:number, uq:number):Promise<any[]> {\r\n        return await this.get('uq-services', {unit:unit, uq:uq});\r\n    }\r\n    async changeServiceProp(unit:number, service:number, prop:string, value:any):Promise<number> {\r\n        return await this.post('service-change-prop', {unit:unit, service:service, prop:prop, value:value});\r\n    }\r\n    async uqGetEntities(unit:number, uq:number):Promise<any[][]> {\r\n        return await this.get('uq-get-entities', {unit:unit, uq:uq});\r\n    }\r\n}\r\n\r\nexport const devApi = new DevApi('tv/dev/', undefined);\r\n","import {observable} from 'mobx';\r\nimport {UnitAdmin} from '../model';\r\nimport {mainApi} from '../api';\r\nimport {Store} from './index';\r\n\r\nexport class Admins {\r\n    private store:Store;\r\n    constructor(store:Store) {\r\n        this.store = store;\r\n    }\r\n\r\n    @observable cur: UnitAdmin = undefined;\r\n    @observable owners: UnitAdmin[] = undefined;\r\n    @observable admins: UnitAdmin[] = undefined;\r\n    @observable fellows: UnitAdmin[] = undefined;\r\n    \r\n    async load(): Promise<void> {\r\n        let unit = this.store.unit;\r\n        if (unit === undefined) return;\r\n        if (unit.id === undefined) return;\r\n        if (this.admins !== undefined) return;\r\n        let all = await mainApi.unitAdmins(unit.id);\r\n        let owners:UnitAdmin[] = [];\r\n        let admins:UnitAdmin[] = [];\r\n        let fellows:UnitAdmin[] = [];\r\n        all.forEach(ua => {\r\n            let {isOwner, isAdmin} = ua;\r\n            if (isOwner === 0 && isAdmin === 0)\r\n                fellows.push(ua);\r\n            else {\r\n                if (isOwner === 1) owners.push(ua);\r\n                if (isAdmin === 1) admins.push(ua);\r\n            }\r\n        });\r\n        this.owners = owners;\r\n        this.admins = admins;\r\n        this.fellows = fellows;\r\n    }\r\n\r\n    private removeCur(arr: UnitAdmin[]) {\r\n        let index = arr.findIndex(v => v.id===this.cur.id);\r\n        if (index >=0) arr.splice(index, 1);\r\n    }\r\n\r\n    async unitSetAdmin(isOwner:number, isAdmin:number) {\r\n        let cur = this.cur;\r\n        cur.isOwner = isOwner;\r\n        cur.isAdmin = isAdmin;\r\n        let fellowId = cur.id, unitId = this.store.unit.id;\r\n        await mainApi.unitSetAdmin(fellowId, unitId, isOwner, isAdmin);\r\n        this.removeCur(this.owners);\r\n        this.removeCur(this.admins);\r\n        this.removeCur(this.fellows);\r\n        if (isOwner === 0 && isAdmin === 0)\r\n            this.fellows.unshift(cur);\r\n        else {\r\n            if (isOwner === 1) this.owners.unshift(cur);\r\n            if (isAdmin === 1) this.admins.unshift(cur);\r\n        }\r\n    }\r\n\r\n    async addNew(user:string, isOwner:number, isAdmin:number):Promise<UnitAdmin> {\r\n        let admin = await mainApi.unitAddAdmin(user, this.store.unit.id, isOwner, isAdmin);\r\n        if (admin !== undefined) {\r\n            let cur = this.cur = admin;\r\n            this.removeCur(this.owners);\r\n            this.removeCur(this.admins);\r\n            this.removeCur(this.fellows);\r\n            if (isOwner === 0 && isAdmin === 0)\r\n                this.fellows.unshift(cur);\r\n            else {\r\n                if (isOwner === 1) this.owners.unshift(cur);\r\n                if (isAdmin === 1) this.admins.unshift(cur);\r\n            }\r\n        }\r\n        return admin;\r\n    }\r\n}\r\n","import {observable, autorun} from 'mobx';\r\nimport _ from 'lodash';\r\nimport {devApi} from '../api';\r\nimport {DevModel, Unit} from '../model';\r\nimport {Store} from './index';\r\n\r\ninterface Counts {\r\n    uq: number;\r\n    app: number;\r\n    bus: number;\r\n    server: number;\r\n    service: number;\r\n    //uqdb: number;\r\n}\r\n\r\nexport abstract class ObjItems<T extends DevModel.ObjBase> {\r\n    protected store:Store;\r\n    protected dev:Dev;\r\n    constructor(store:Store, dev:Dev) {\r\n        this.store = store;\r\n        this.dev = dev;\r\n    }\r\n\r\n    @observable items: T[] = undefined;\r\n    @observable cur: T = undefined;\r\n\r\n    async load():Promise<void> {\r\n         let ret = await this._load();\r\n         this.items = ret;\r\n    }\r\n    protected abstract _load():Promise<T[]>;\r\n    async saveCur(item:T):Promise<boolean> {\r\n        let values:any = {};\r\n        if (this.cur !== undefined) {\r\n            _.assign(values, this.cur, item);\r\n        }\r\n        else {\r\n            _.assign(values, item);\r\n        }\r\n\r\n        values.unit = item.unit = this.store.unit.id;\r\n        let id = await this._save(values);\r\n        if (this.cur === undefined) {\r\n            if (id === 0) return false;\r\n            values.id = id;\r\n            if (this.items !== undefined) this.items.unshift(values);\r\n            this._inc();\r\n            this.cur = observable(values);\r\n        }\r\n        else {\r\n            _.assign(this.cur, values);\r\n        }\r\n        return true;\r\n    }\r\n    async save(item:T):Promise<T> {\r\n        let values:any = {};\r\n        _.assign(values, item);\r\n\r\n        values.unit = item.unit = this.store.unit.id;\r\n        let id = await this._save(values);\r\n        if (id === 0) return;\r\n        values.id = id;\r\n        return values;\r\n    }\r\n    protected abstract _save(item:T):Promise<number>;\r\n    async del():Promise<void> {\r\n        let c = this.cur;\r\n        if (c === undefined) return;\r\n        let id = c.id;\r\n        await this._del(c);\r\n        if (this.items === undefined) return;\r\n        let index = this.items.findIndex(v => v.id === id);\r\n        if (index>=0) {\r\n            this.items.splice(index, 1);\r\n            this._dec();\r\n        }\r\n    }\r\n    protected abstract _del(item:T):Promise<void>;\r\n    protected abstract _inc();\r\n    protected abstract _dec();\r\n}\r\n\r\nclass Apps extends ObjItems<DevModel.App> {\r\n    @observable uqs: DevModel.UQ[] = undefined;\r\n    @observable searchedUqs: DevModel.UQ[] = undefined;\r\n    //@observable service: DevModel.Service = null;\r\n    protected async _load() {\r\n        return await devApi.apps(this.store.unit.id);\r\n    }\r\n    protected async _save(item:DevModel.App):Promise<number> {\r\n        return await devApi.saveApp(item);\r\n    }\r\n    protected async _del(item:DevModel.App):Promise<void> {\r\n        await devApi.delApp(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.app++; }\r\n    protected _dec() { this.dev.counts.app--; }\r\n\r\n    public async loadCurUqs() {\r\n        let ret = await devApi.loadAppUqs(this.cur.id);\r\n        this.uqs = ret;\r\n    }\r\n    public async searchUq(key:string) {\r\n        this.searchedUqs = await devApi.searchUq(this.store.unit.id, key, 0, searchPageSize);\r\n    }\r\n    public async appBindUq(uqs:{id:number, access:string[]}[], bind:boolean) {\r\n        let allUqs:{id:number, access:string[]}[] = this.uqs.map(v => {\r\n            let {id, access} = v;\r\n            return {id: id, access: [access]};\r\n        });\r\n        for (let uq of uqs) {\r\n            let index = allUqs.findIndex(v => v.id === uq.id);\r\n            if (bind === true) {\r\n                if (index < 0) allUqs.unshift(uq);\r\n            }\r\n            else {\r\n                allUqs.splice(index, 1);\r\n            }\r\n        }\r\n        await devApi.appBindUq(this.store.unit.id, this.cur.id, allUqs);\r\n        for (let uq of uqs) {\r\n            let index = this.uqs.findIndex(a => a.id === uq.id);\r\n            if (index>=0) this.uqs.splice(index, 1);\r\n            if (bind === true) {\r\n                if (this.searchedUqs !== undefined) {\r\n                    let find = this.searchedUqs.find(a => a.id === uq.id);\r\n                    if (find !== undefined) this.uqs.unshift(find);\r\n                }\r\n            }\r\n            else {\r\n                // 已经删除，不需要处理\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass Uqs extends ObjItems<DevModel.UQ> {\r\n    protected async _load() {\r\n        let ret = await devApi.uqs(this.store.unit.id);\r\n        return ret;\r\n    }\r\n    protected async _save(item:DevModel.UQ):Promise<number> {\r\n        //let {access} = item;\r\n        //if (!access) access = \"*\";\r\n        //let parts = access.split(',').map(v => v.trim()).filter(v => v!=='');\r\n        //item.access = parts.join(',');\r\n        return await devApi.saveUq(item);\r\n    }\r\n    protected async _del(item:DevModel.UQ):Promise<void> {\r\n        await devApi.delUq(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.uq++; }\r\n    protected _dec() { this.dev.counts.uq--; }\r\n}\r\n\r\nclass Buses extends ObjItems<DevModel.Bus> {\r\n    protected async _load() {\r\n        let ret = await devApi.buses(this.store.unit.id);\r\n        return ret;\r\n    }\r\n    protected async _save(item:DevModel.Bus):Promise<number> {\r\n        return await devApi.saveBus(item);\r\n    }\r\n    protected async _del(item:DevModel.Bus):Promise<void> {\r\n        await devApi.delBus(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.bus++; }\r\n    protected _dec() { this.dev.counts.bus--; }\r\n}\r\n\r\nclass Servers extends ObjItems<DevModel.Server> {\r\n    protected async _load() {\r\n        return await devApi.servers(this.store.unit.id);\r\n    }\r\n    protected async _save(item:DevModel.Server):Promise<number> {\r\n        return await devApi.saveServer(item);\r\n    }\r\n    protected async _del(item:DevModel.Server):Promise<void> {\r\n        await devApi.delServer(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.server++; }\r\n    protected _dec() { this.dev.counts.server--; }\r\n}\r\n/*\r\nclass Uqdbs extends ObjItems<DevModel.Uqdb> {\r\n    protected async _load() {\r\n        return await devApi.uqdbs(this.store.unit.id);\r\n    }\r\n    protected async _save(item:DevModel.Uqdb):Promise<number> {\r\n        return await devApi.saveUqdb(item);\r\n    }\r\n    protected async _del(item:DevModel.Uqdb):Promise<void> {\r\n        await devApi.delUqdb(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.uqdb++; }\r\n    protected _dec() { this.dev.counts.uqdb--; }\r\n}\r\n*/\r\nclass Services extends ObjItems<DevModel.Service> {\r\n    protected async _load() {\r\n        return await devApi.services(this.store.unit.id);\r\n    }\r\n    protected async _save(item:DevModel.Service):Promise<number> {\r\n        return await devApi.saveService(item);\r\n    }\r\n    protected async _del(item:DevModel.Service):Promise<void> {\r\n        await devApi.delService(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.service++; }\r\n    protected _dec() { this.dev.counts.service--; }\r\n    async changeProp(prop:string, value:any):Promise<number> {\r\n        let ret = await devApi.changeServiceProp(this.store.unit.id, this.cur.id, prop, value);\r\n        switch (prop) {\r\n            case 'url': this.cur.url = value; break;\r\n            case 'server': this.cur.server = value; break;\r\n            case 'db': this.cur.db = value; break;\r\n            case 'db_type': this.cur.db_type = value; break;\r\n            case 'connection': this.cur.connection = value; break;\r\n        }\r\n        return ret;\r\n    }\r\n    async loadUqServices(uq:number):Promise<void> {\r\n        let ret = await devApi.loadUqServices(this.store.unit.id, uq);\r\n        this.items = ret[0];\r\n    }\r\n}\r\n\r\nconst searchPageSize = 50;\r\ntype Search = (unit:number,key:string,pageStart:number,pageSize:number)=>Promise<any[]>;\r\nclass SearchItems<T extends DevModel.ObjBase> {\r\n    private store:Store;\r\n    private dev:Dev;\r\n    private search:(unit:number,key:string,pageStart:number,pageSize:number)=>Promise<any[]>;\r\n\r\n    constructor(store:Store, dev:Dev, search:Search) {\r\n        this.store = store;\r\n        this.dev = dev;\r\n        this.search = search;\r\n    }\r\n\r\n    @observable items: T[] = undefined;\r\n    allLoaded: boolean = false;\r\n    private key: string;\r\n    private pageStart = 0;\r\n\r\n    async first(key:string) {\r\n        this.key = key;\r\n        this.items = undefined;\r\n        this.allLoaded = false;\r\n        this.pageStart = 0;\r\n        await this.more();\r\n    }\r\n\r\n    async more():Promise<void> {\r\n        if (this.allLoaded === true) return;\r\n        let ret = await this.search(this.store.unit.id, this.key, this.pageStart, searchPageSize);\r\n        let len = ret.length;\r\n        if (len > searchPageSize) {\r\n            this.allLoaded = false;\r\n            --len;\r\n            ret.splice(len, 1);\r\n        }\r\n        else {\r\n            this.allLoaded = true;\r\n        }\r\n        if (len > 0) {\r\n            this.pageStart = ret[len-1].id;\r\n            if (this.items === undefined)\r\n                this.items = ret;\r\n            else\r\n                this.items.push(...ret);\r\n        }\r\n        else {\r\n            this.items = [];\r\n        }\r\n    }\r\n}\r\n\r\nexport class Dev {\r\n    private store:Store;\r\n    constructor(store:Store) {\r\n        this.store = store;\r\n        this.apps = new Apps(store, this);\r\n        this.uqs = new Uqs(store, this);\r\n        this.buses = new Buses(store, this);\r\n        this.servers = new Servers(store, this);\r\n        //this.uqdbs = new Uqdbs(store, this);\r\n        this.services = new Services(store, this);\r\n        this.searchApp = new SearchItems<DevModel.App>(store, this, devApi.searchApp.bind(devApi));\r\n        this.searchUq = new SearchItems<DevModel.UQ>(store, this, devApi.searchUq.bind(devApi));\r\n        this.searchServer = new SearchItems<DevModel.Server>(store, this, devApi.searchServer.bind(devApi));\r\n    }\r\n\r\n    @observable counts:Counts = undefined;\r\n    apps:Apps = undefined;\r\n    uqs:Uqs = undefined;\r\n    buses:Buses = undefined;\r\n    servers:Servers = undefined;\r\n    //uqdbs:Uqdbs = undefined;\r\n    services:Services = undefined;\r\n\r\n    searchApp:SearchItems<DevModel.App> = undefined;\r\n    searchUq:SearchItems<DevModel.UQ> = undefined;\r\n    searchServer:SearchItems<DevModel.Server> = undefined;\r\n    searchUqdb:SearchItems<DevModel.Uqdb> = undefined;\r\n    \r\n    async loadCounts(): Promise<void> {\r\n        let {unit} = this.store;\r\n        this.counts = await devApi.counts(unit.id);\r\n    }\r\n}\r\n","import {CacheIds} from 'tonva-tools';\r\nimport {Id, Unit, DevModel} from '../model';\r\nimport {mainApi, devApi} from '../api';\r\n\r\nexport class CacheUnits extends CacheIds<Unit> {\r\n    protected async _loadIds(ids:number[]):Promise<Unit[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<Unit> {\r\n        return await mainApi.unit(id);\r\n    }\r\n}\r\n\r\nexport class CacheUqs extends CacheIds<DevModel.UQ> {\r\n    protected async _loadIds(ids:number[]):Promise<DevModel.UQ[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<DevModel.UQ> {\r\n        return await devApi.uq(id);\r\n    }\r\n}\r\n\r\nexport class CacheApps extends CacheIds<DevModel.App> {\r\n    protected async _loadIds(ids:number[]):Promise<DevModel.App[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<DevModel.App> {\r\n        return await devApi.app(id);\r\n    }\r\n}\r\n\r\nexport class CacheServers extends CacheIds<DevModel.Server> {\r\n    protected async _loadIds(ids:number[]):Promise<DevModel.Server[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<DevModel.Server> {\r\n        return await devApi.server(id);\r\n    }\r\n}\r\n","import {observable, autorun} from 'mobx';\r\nimport _ from 'lodash';\r\nimport {meInFrame, host} from 'tonva-tools';\r\nimport {mainApi, devApi} from '../api';\r\nimport {Unit, UnitApps, App, Api, UnitAdmin, UnitApp, Role, RoleMember} from '../model';\r\nimport {Admins} from './admins';\r\nimport {Dev} from './dev';\r\nimport {CacheUnits, CacheUqs, CacheApps, CacheServers} from './cacheIds';\r\n\r\nexport class Store {\r\n    private get unitId():number {return meInFrame.unit;};\r\n    admins:Admins;\r\n    dev:Dev;\r\n    cacheUnits: CacheUnits;\r\n    cacheUqs: CacheUqs;\r\n    cacheApps: CacheApps;\r\n    cacheServers: CacheServers;\r\n    uqServer: string;\r\n\r\n    @observable unit: Unit;\r\n    @observable memberCount: number;\r\n    @observable apps: UnitApp[];\r\n    @observable role:Role;\r\n    @observable roles: Role[];\r\n    @observable roleApps: UnitApp[];\r\n    @observable roleMember: RoleMember;\r\n    @observable roleMembers: RoleMember[];\r\n    @observable memberRoles: Role[];\r\n\r\n    init() {\r\n        this.unit = undefined;\r\n        this.admins = new Admins(this);\r\n        this.dev = new Dev(this);\r\n        this.cacheUnits = new CacheUnits();\r\n        this.cacheUqs = new CacheUqs();\r\n        this.cacheApps = new CacheApps();\r\n        this.cacheServers = new CacheServers();\r\n    }\r\n\r\n    logout() {\r\n        //meInFrame.app = undefined;\r\n        meInFrame.hash = undefined;\r\n        //let unitId = process.env.REACT_APP_DEBUG_UNITID;\r\n        //if (unitId !== undefined)\r\n        //    meInFrame.unit = Number(unitId);\r\n        meInFrame.unit = undefined;\r\n        this.init();\r\n        this.memberCount = undefined;\r\n        this.apps = undefined;\r\n        this.role = undefined;\r\n        this.roles = undefined;\r\n        this.roleApps = undefined;\r\n        this.roleMember = undefined;\r\n        this.roleMembers = undefined;\r\n        this.memberRoles = undefined;\r\n    }\r\n\r\n    setRole(role:Role) {\r\n        if (this.role === role) return;\r\n        this.role = role;\r\n        this.roleApps = undefined;\r\n        this.roleMember = undefined;\r\n        this.roleMembers = undefined;\r\n        this.memberRoles = undefined;\r\n    }\r\n\r\n    setRoleUser(user:RoleMember) {\r\n        if (this.roleMember === user) return;\r\n        this.roleMember = user;\r\n        this.memberRoles = undefined;\r\n    }\r\n\r\n    async unitChangeProp(prop:string, value:any):Promise<void> {\r\n        await mainApi.unitChangeProp(this.unit.id, prop, value);\r\n        this.unit[prop] = value;\r\n    }\r\n\r\n    async loadApps(): Promise<void> {\r\n        if (this.apps !== undefined) return;\r\n        this.apps = await mainApi.unitApps(this.unitId);\r\n    }\r\n\r\n    async loadUnit(): Promise<void> {\r\n        if (this.unitId === undefined) return;\r\n        let ret = await mainApi.unit(this.unitId);\r\n        this.unit = ret;\r\n        console.log(\"loadUnit unit=%s\", ret);\r\n        this.memberCount = await mainApi.unitMemberCount(this.unitId);\r\n        let uqServer = await devApi.uqBuilderUrl();\r\n        let {url, urlDebug} = uqServer;\r\n        this.uqServer = host.getUrlOrDebug(url, urlDebug);\r\n        console.log(\"uq-build: %s\", JSON.stringify(this.uqServer));\r\n    }\r\n\r\n    async stopUnitApp(appId:number): Promise<void> {\r\n        await mainApi.unitDeleteApp(this.unit.id, appId, 1);\r\n        let app = this.apps.find(v => v.id === appId);\r\n        app.inUnit = 0;\r\n    }\r\n\r\n    async restoreUnitApp(appId:number): Promise<number> {\r\n        let ret = await mainApi.unitAddApp(this.unit.id, appId);\r\n        if (ret <= 0) return ret;\r\n        let app = this.apps.find(v => v.id === appId);\r\n        app.inUnit = 1;\r\n        return 1;\r\n    }\r\n\r\n    async addUnitApp(app:UnitApp): Promise<number> {\r\n        let ret = await mainApi.unitAddApp(this.unit.id, app.id);\r\n        if (ret <= 0) return ret;\r\n        this.apps.push(app);\r\n        return 1;\r\n    }\r\n\r\n    async loadRoles(): Promise<void> {\r\n        if (this.roles !== undefined) return;\r\n        let ret = await mainApi.unitRoles(this.unit.id);\r\n        ret.forEach(v => {\r\n            switch (v.id) {\r\n                case 1: \r\n                    v.name= '访客';\r\n                    v.discription = '可以获取开放信息';\r\n                    break;\r\n                case 2: \r\n                    v.name= '普通';\r\n                    v.discription = '能访问最基本的功能';\r\n                    break;\r\n            }\r\n        });\r\n        this.roles = ret;\r\n    }\r\n\r\n    async unitAddRole(name:string, discription:string): Promise<number> {\r\n        let id = await mainApi.unitAddRole(this.unit.id, name, discription);\r\n        if (id > 0) {\r\n            this.roles.push({\r\n                id: id,\r\n                name: name,\r\n                discription: discription,\r\n                count: undefined,\r\n            });\r\n        }\r\n        return id;\r\n    }\r\n\r\n    async roleChangeProp(prop:string, value:any):Promise<void> {\r\n        await mainApi.unitRoleChangeProp(this.unit.id, this.role.id, prop, value);\r\n        this.role[prop] = value;\r\n    }\r\n\r\n    async loadRoleApps():Promise<void> {\r\n        let ret = await mainApi.unitRoleApps(this.unit.id, this.role.id);\r\n        this.roleApps = ret.map(v => {\r\n            return this.apps.find(app=>app.id === v.id);\r\n        });\r\n    }\r\n\r\n    async setRoleApps(apps:UnitApp[]) {\r\n        await mainApi.unitRoleSetApps(this.unit.id, this.role.id, apps.map(v=>v.id));\r\n        this.roleApps = apps;\r\n    }\r\n\r\n    async loadMembers():Promise<void> {\r\n        let ret = await mainApi.unitMembers(this.unit.id, this.role === undefined? 0:this.role.id, undefined, 0, 100);\r\n        this.roleMembers = ret;\r\n    }\r\n\r\n    async unitAssignMember(assigned:string):Promise<void> {\r\n        await mainApi.unitAssignMember(this.unit.id, this.roleMember.id, assigned);\r\n        this.roleMember.assigned = assigned;\r\n    }\r\n\r\n    async loadMemberRoles():Promise<void> {\r\n        let ret = await mainApi.unitMemberRoles(this.unit.id, this.roleMember.id);\r\n        let roles:Role[] = ret.map(v => {\r\n            let rId = v.id;\r\n            let role = this.roles.find(r => r.id === rId);\r\n            return _.clone(role);\r\n        });\r\n        this.memberRoles = roles;\r\n    }\r\n\r\n    async setMemberRoles(memberRoles:Role[]) {\r\n        await mainApi.unitSetMemberRoles(this.unit.id, this.roleMember.id, memberRoles.map(v=>v.id));\r\n        this.roles.forEach(role => {\r\n            let rId = role.id;\r\n            let org = this.memberRoles.find(v => v.id === rId);\r\n            let cur = memberRoles.find(v => v.id === rId);\r\n            if (org !== undefined) {\r\n                if (cur !== undefined) return;\r\n                role.count--;\r\n                return;\r\n            }\r\n            if (cur === undefined) return;\r\n            role.count++;\r\n        });\r\n        this.memberRoles = memberRoles;\r\n    }\r\n};\r\n\r\nexport const store = new Store();\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page, Context, Form, Schema, UiSchema, UiTextItem} from 'tonva-tools';\r\nimport {store} from '../store';\r\n\r\n@observer\r\nexport default class NewFellowPage extends React.Component<{isOwner:boolean, isAdmin:boolean}> {\r\n    //private form: TonvaForm;\r\n    private schema: Schema = [\r\n        {name:'user', type:'string', required:true},\r\n        {name:'submit', type:'submit'}\r\n    ]\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            user: {widget:'text', maxLength: 100, placeholder: '用户名', label: '邀请成员'} as UiTextItem,\r\n            submit: {widget:'button', label: '邀请'}\r\n        }\r\n    }\r\n    /*\r\n    private formRows:FormRow[] = [\r\n        {\r\n            label: '用户名',\r\n            field: {\r\n                type: 'string',\r\n                name: 'user',\r\n                required: true,\r\n                maxLength: 100,\r\n            },\r\n            face: {\r\n                type: 'string',\r\n                placeholder: '用户名',\r\n            }\r\n        },\r\n    ];\r\n    private schema:FormSchema = new FormSchema({\r\n        fields: [\r\n            {\r\n                type: 'string',\r\n                name: 'user',\r\n                placeholder: '用户名',\r\n                label: '邀请成员',\r\n                rules: ['required', 'maxlength:100']\r\n            },\r\n        ],\r\n        onSumit: this.onSendInvitation,\r\n        submitText: '邀请'\r\n    });\r\n    */\r\n    private onSendInvitation = async (name:string, context:Context): Promise<string> => {\r\n        let {isOwner, isAdmin} = this.props;\r\n        let user = context.form.data['user'];\r\n        let ret = await store.admins.addNew(user, isOwner?1:0, isAdmin?1:0);\r\n        if (ret !== undefined) {\r\n            nav.pop();\r\n            return;\r\n        }\r\n        return user + '没有关注小号';\r\n        /*\r\n        let msg = {a: 1, b: 'ddd'};\r\n        let toName = values['user'];\r\n        let userId = await mainApi.userId(toName);\r\n        if (userId === 0) {\r\n            this.form.formView.setError('user', '\\'' + toName +  '\\' 不存在');\r\n            return;\r\n        }\r\n        await mainApi.sendMessage(userId, 'unit-follow-invite', msg);\r\n        nav.replace(<Page header='完成' back=\"close\">\r\n            <Card>\r\n                <CardBody>\r\n                    <CardTitle>邀请成员</CardTitle>\r\n                    <CardText>已发送给{toName}，请等待确认。</CardText>\r\n                    <Button color='primary' onClick={()=>nav.back()}>完成</Button>\r\n                </CardBody>\r\n            </Card>\r\n        </Page>);\r\n        */\r\n    }\r\n    render() {\r\n        let {isOwner, isAdmin} = this.props;\r\n        let caption = isOwner? \"高管\" : \"管理员\";\r\n        return <Page header={'新增' + caption}>\r\n            <div className=\"container\">\r\n                <div className='my-4 text-info'>\r\n                    只有关注本小号的用户，才能成为{caption}\r\n                </div>\r\n                <Form schema={this.schema} uiSchema={this.uiSchema} onButtonClick={this.onSendInvitation}/>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n// <ValidForm formSchema={this.schema} />\r\n//<TonvaForm ref={f=>this.form=f} formRows={this.formRows} onSubmit={this.onSendInvitation} />\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page, Schema, UiSchema, ItemSchema, UiCheckItem, UiButton, ButtonSchema, Form, Context, Image} from 'tonva-tools';\r\nimport {store} from '../store';\r\nimport { UnitAdmin } from '../model/index';\r\n//import {mainApi} from '../api';\r\n//, ValidForm, FormSchema, FormFields, Field\r\n\r\n@observer\r\nexport default class EditAdmin extends React.Component {\r\n    private schema:Schema;\r\n    private uiSchema: UiSchema;\r\n\r\n    private async onSubmit(name:string, context:Context) {\r\n        let {isOwner, isAdmin} = context.form.data;\r\n        await store.admins.unitSetAdmin(isOwner, isAdmin);\r\n        nav.pop();\r\n    }\r\n    componentWillMount() {\r\n        let {unit} = store;\r\n        let {isRoot, isOwner, isAdmin} = unit;\r\n        let unitAdmin = store.admins.cur;\r\n        let owner:ItemSchema = {name: 'isOwner', type: 'boolean'};\r\n        let admin:ItemSchema = {name: 'isAdmin', type: 'boolean'};\r\n        let submit:ButtonSchema = {name: 'submit', type: 'submit'};\r\n        if (isRoot === 1) this.schema = [owner, admin, submit];\r\n        else if (isOwner === 1) this.schema = [admin, submit];\r\n\r\n        this.uiSchema = {\r\n            items: {\r\n                'isOwner': {widget: 'checkbox', label: '高管', trueValue:1, falseValue:0} as UiCheckItem,\r\n                'isAdmin': {widget: 'checkbox', label: '管理员', trueValue:1, falseValue:0} as UiCheckItem,\r\n                'submit': {widget: 'button', label: '提交'} as UiButton,\r\n            }\r\n        };\r\n        /*\r\n        let fields: Field[] = [];\r\n        let ownerField: Field = {\r\n            type: 'checkbox',\r\n            name: 'isOwner',\r\n            label: '高管',\r\n            defaultValue: unitAdmin.isOwner,\r\n        };\r\n        let adminField: Field = {\r\n            type: 'checkbox',\r\n            name: 'isAdmin',\r\n            label: '管理员',\r\n            defaultValue: unitAdmin.isAdmin,\r\n        };\r\n        if (isRoot === 1) {\r\n            fields.push(ownerField);\r\n            fields.push(adminField);\r\n        }\r\n        else if (isOwner === 1) {\r\n            fields.push(adminField);\r\n        }        \r\n        this.schema = new FormSchema({\r\n            fields: fields,\r\n            onSumit: this.onSubmit.bind(this),\r\n            submitText: '提交'\r\n        });\r\n        */\r\n    }\r\n    render() {\r\n        return <Page header='权限'>\r\n            <Fellow {...store.admins.cur} />\r\n            <Form schema={this.schema} uiSchema={this.uiSchema} onButtonClick={this.onSubmit} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nconst Fellow = (props:UnitAdmin) => {\r\n    let {name, nick, icon} = props;\r\n    //<img className='w-75' src={icon || process.env.REACT_APP_DEFAULT_ICON} />\r\n    return <div className=\"container\">\r\n        <div className='row my-4'>\r\n            <div className=\"col-xs-2 d-flex justify-content-end align-items-start\">\r\n                <Image className=\"w-75\" src={icon} />\r\n            </div>\r\n            <div className=\"col-xs-auto\">\r\n                <h4 className='text-dark'>{name}</h4>\r\n                <h6><small className='text-secondary'>{nick}</small></h6>\r\n                <div className='text-info'>设置成员权限</div>\r\n            </div>\r\n        </div>\r\n        <hr className='mb-4' />\r\n    </div>;\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page, Image} from 'tonva-tools';\r\nimport {UnitApps, UnitAdmin} from '../model';\r\nimport {store} from '../store';\r\nimport NewFellow from './NewFellow';\r\nimport EditAdmin from './EditAdmin';\r\nimport {LMR, Badge, List} from 'tonva-react-form';\r\n\r\n@observer\r\nexport default class AdministorsPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.admins.load();\r\n    }\r\n\r\n    onNewFellow() {\r\n        //nav.push(<NewFellow />);\r\n    }\r\n    onItemClick(ua:UnitAdmin) {\r\n        store.admins.cur = ua;\r\n        nav.push(<EditAdmin />);\r\n    }\r\n    private row = ({icon, name, nick}:UnitAdmin) => {\r\n        let content;\r\n        if (nick === undefined) {\r\n            content = <b>{name}</b>;\r\n        }\r\n        else {\r\n            content = <><b>{nick}</b> &nbsp; <small className=\"text-muted\">{name}</small></>;\r\n        }\r\n        return <LMR className=\"py-2 px-3 align-items-stretch\"\r\n            left={<Badge size=\"sm\"><Image className=\"w-3c h-3c\" src={icon} /></Badge>}>\r\n            <div className=\"px-3\">{content}</div>\r\n        </LMR>;\r\n    }\r\n\r\n    private onNewOwner = (evt: React.MouseEvent<HTMLAnchorElement>) => {\r\n        this.newAdmin(evt, true, false);\r\n    }\r\n\r\n    private onNewAdmin = (evt: React.MouseEvent<HTMLAnchorElement>) => {\r\n        this.newAdmin(evt, false, true);\r\n    }\r\n\r\n    private newAdmin(evt: React.MouseEvent<HTMLAnchorElement>, isOwner:boolean, isAdmin:boolean) {\r\n        evt.preventDefault();\r\n        nav.push(<NewFellow isOwner={isOwner} isAdmin={isAdmin} />);\r\n    } \r\n    render() {\r\n        //let n = nav;\r\n        //let me = n.local.user.get().id;\r\n        let {unit} = store;\r\n        if (unit === undefined) return;\r\n        let {owners, admins, fellows} = store.admins;\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.onNewFellow}>新增成员</button>;\r\n\r\n        let showOwners = false, showAdmins = false;\r\n        let ownersView, adminsView, fellowsView;\r\n        if (unit.isRoot === 1) {\r\n            showOwners = true;\r\n            showAdmins = true;\r\n        }\r\n        if (unit.isOwner === 1) showAdmins = true;\r\n        if (showOwners === true) {\r\n            let header = <LMR \r\n                className=\"px-3 small\"\r\n                left=\"高管\" \r\n                right={<a className=\"small\" href='#' onClick={this.onNewOwner}>新增</a>} />;\r\n            ownersView = <List \r\n                className=\"my-4\"\r\n                header={header} items={owners}\r\n                none=\"[无]\"\r\n                item={{onClick: this.onItemClick, render: this.row}}\r\n            />;\r\n        }\r\n        if (showAdmins === true) {\r\n            let header = <LMR \r\n                className=\"px-3 small\"\r\n                left=\"管理员\" \r\n                right={<a className=\"small\" href='#' onClick={this.onNewAdmin}>新增</a>} />;\r\n            adminsView = <List \r\n                className='my-4' \r\n                header={header} items={admins} \r\n                none='[无]'\r\n                item={{onClick: this.onItemClick, render: this.row}}\r\n            />;\r\n        }\r\n        return <Page header=\"管理员\" right={right}>\r\n            {ownersView}\r\n            {adminsView}\r\n            <div className=\"card mx-1 my-4\">\r\n                <div className=\"card-title\">说明</div>\r\n                <div className=\"card-body\">\r\n                    <ul style={{paddingLeft:'1em'}}>\r\n                        <li><div className=\"card-text\">管理组包括主人、高管、管理员</div></li>\r\n                        <li><div className=\"card-text\">小号主人可以增减高管</div></li>\r\n                        <li><div className=\"card-text\">高管可以增减管理员</div></li>\r\n                        <li><div className=\"card-text\">管理员可以管理小号，程序的开发，以及用户</div></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {EasyDate} from 'tonva-react-form';\r\n\r\nexport interface IdDatesProps {\r\n    date_init: Date;\r\n    date_update: Date;\r\n}\r\n\r\nexport class IdDates extends React.Component<IdDatesProps> {\r\n    render() {\r\n        let {date_init, date_update} = this.props;\r\n        return <small className=\"text-muted\">\r\n            上次修改: <EasyDate date={date_update}/>\r\n            <i className=\"fa fa-fw\" />\r\n            创建: <EasyDate date={date_init}/>\r\n        </small>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\n\r\nexport function span(\r\n    isLink:boolean,\r\n    className:string, \r\n    onClick:(evt:React.MouseEventHandler<HTMLElement>)=>void,\r\n    content:any): JSX.Element\r\n{\r\n    let tag:string;\r\n    let props:any;\r\n    if (isLink === true) {\r\n        tag = 'a';\r\n        props = {\r\n            className: classNames(className, 'cursor-pointer'),\r\n            onClick: onClick,\r\n            href: '#',\r\n        }\r\n    }\r\n    else {\r\n        tag = 'span';\r\n        props = {\r\n            className: className,\r\n        }\r\n    }\r\n    return React.createElement(tag, props, content);\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {Prop, ListProp, Media, PropGrid} from 'tonva-react-form';\r\nimport {nav, Page}  from 'tonva-tools';\r\nimport {store} from '../store';\r\nimport {span} from './span';\r\n\r\nexport interface UnitLinkProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class UnitSpan extends React.Component<UnitLinkProps> {\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<UnitInfo id={this.props.id} />);\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        if (id === undefined) return null;\r\n        let unit = store.cacheUnits.get(id);\r\n        let content;\r\n        let {name, nick, discription} = unit;\r\n        let disc = discription && '- ' + discription;\r\n        if (nick) {\r\n            content = <>{nick} &nbsp; <small className=\"text-muted\">{name} {disc}</small></>;\r\n        }\r\n        else if (name) {\r\n            content = <>{name} &nbsp; <small className=\"text-muted\">{disc}</small></>;\r\n        }\r\n        else {\r\n            content = id;\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\n@observer\r\nexport class UnitName extends React.Component<UnitLinkProps> {\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        if (id === undefined) return null;\r\n        let unit = store.cacheUnits.get(id);\r\n        let {name} = unit;\r\n        return <>{name}</>;\r\n    }\r\n}\r\n\r\nclass UnitInfo extends React.Component<UnitLinkProps> {\r\n    private rows:Prop[];\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        let unit = store.cacheUnits.get(this.props.id);\r\n        let {name, nick, icon, discription} = unit;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={icon} main={name} discription={discription} />},\r\n            '',\r\n        ];\r\n        return <Page header={'小号 - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n","export const appIcon = process.env.REACT_APP_ICON;\r\nexport const appItemIcon = process.env.REACT_APP_ITEM_ICON;\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport * as classNames from 'classnames';\r\nimport {Prop, Media, PropGrid} from 'tonva-react-form';\r\nimport {nav, Page}  from 'tonva-tools';\r\nimport {appIcon, appItemIcon} from 'consts';\r\nimport {store} from 'store';\r\nimport {IdDates} from './idDates';\r\nimport {span} from './span';\r\nimport {UnitSpan} from './unitSpan';\r\n\r\nexport interface UqLinkProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class UqSpan extends React.Component<UqLinkProps> {\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<UqInfo id={this.props.id} />);\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, className, isLink} = this.props;\r\n        let api = store.cacheUqs.get(id);\r\n        let content;\r\n        if (api === null) {\r\n            content = id;\r\n        }\r\n        else {\r\n            let {name, discription} = api;\r\n            let disc = discription && '- ' + discription;\r\n            if (name !== undefined) {\r\n                content = <React.Fragment>{name} &nbsp; <small className=\"text-muted\">{disc}</small></React.Fragment>;\r\n            }\r\n            else {\r\n                content = id;\r\n            }\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\n@observer\r\nclass UqInfo extends React.Component<UqLinkProps> {\r\n    private rows:Prop[];\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        let uq = store.cacheUqs.get(this.props.id);\r\n        let {name, discription, unit, date_init, date_update} = uq;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={name} discription={disp} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n        ];\r\n        return <Page header={'UQ - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport {Prop, ListProp, Media, PropGrid} from 'tonva-react-form';\r\nimport {nav, Page}  from 'tonva-tools';\r\nimport {store} from '../store';\r\nimport {devApi} from '../api';\r\nimport {span} from './span';\r\nimport {IdDates} from './idDates';\r\nimport {UnitSpan} from './unitSpan';\r\n\r\nexport interface AppSpanProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class AppSpan extends React.Component<AppSpanProps> {\r\n    /*\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.onClick = this.onClick.bind(this);\r\n    }\r\n    componentWillMount() {\r\n        let {id} = this.props;\r\n        store.cacheApps.get(id);\r\n    }\r\n    */\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<AppInfo id={this.props.id} />)\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        let app = store.cacheApps.get(id);\r\n        let content;\r\n        if (app === null) {\r\n            content = id;\r\n        }\r\n        else {\r\n            let {name, icon, discription} = app;\r\n            let isPublic = app.public;\r\n            let disc = discription && '- ' + discription;\r\n            if (name !== undefined) {\r\n                content = <React.Fragment>{name} &nbsp; <small className=\"text-muted\">{disc}</small></React.Fragment>;\r\n            }\r\n            else {\r\n                content = id;\r\n            }\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\n\r\n@observer\r\nclass AppInfo extends React.Component<AppSpanProps> {\r\n    private rows:Prop[];\r\n    @observable private apis:ListProp = {\r\n        label: '关联API', type: 'list', list: undefined, row: AppRow\r\n    };\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    async componentDidMount() {\r\n        this.apis.list = await devApi.loadAppUqs(this.props.id);\r\n    }\r\n    render() {\r\n        let app = store.cacheApps.get(this.props.id);\r\n        let {unit, name, discription, icon, date_init, date_update} = app;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={icon} main={name} discription={disp} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            this.apis,\r\n        ];\r\n        return <Page header={'APP - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass AppRow extends React.Component<any> {\r\n    render() {\r\n        let {name, discription} = this.props;\r\n        let disp;\r\n        if (discription) disp = <div className=\"small text-muted\">{discription}</div>;\r\n        return <div className='form-control-plaintext'>\r\n            <div>{name}</div>\r\n            {disp}\r\n        </div>\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport * as classNames from 'classnames';\r\nimport {Prop, ListProp, Media, PropGrid} from 'tonva-react-form';\r\nimport {nav, Page}  from 'tonva-tools';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {store} from '../store';\r\nimport {DevModel} from '../model';\r\nimport {devApi} from '../api';\r\nimport {span} from './span';\r\nimport {IdDates} from './idDates';\r\nimport {UnitSpan} from './unitSpan';\r\n\r\nexport interface ServerSpanProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class ServerSpan extends React.Component<ServerSpanProps> {\r\n    /*\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.onClick = this.onClick.bind(this);\r\n    }\r\n    componentWillMount() {\r\n        let {id} = this.props;\r\n        store.cacheServers.get(id);\r\n    }\r\n    */\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<ServerInfo id={this.props.id} />)\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        let server = store.cacheServers.get(id);\r\n        let content;\r\n        if (server === null) {\r\n            content = id;\r\n        }\r\n        else {\r\n            let {cloud, ip, discription} = server;\r\n            if (discription !== undefined) {\r\n                content = <React.Fragment>{discription} &nbsp; <small className=\"text-muted\">{ip}</small></React.Fragment>;\r\n            }\r\n            else {\r\n                content = id;\r\n            }\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\nclass ServerInfo extends React.Component<ServerSpanProps> {\r\n    private rows:Prop[];\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        let server = store.cacheServers.get(this.props.id);\r\n        let {discription, cloud, ip, unit, date_init, date_update} = server;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={discription} discription={ip} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            {type: 'string', label: '云服务', name: 'cloud'},\r\n        ];\r\n        return <Page header={'服务器 - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {nav, Page} from 'tonva-tools';\r\n\r\ninterface StringValueEditProps {\r\n    title: string;\r\n    onChanged:(value:any, orgValue:any)=>Promise<string|void>;\r\n    value?: any;\r\n    buttonText?: string;\r\n    info?: string;\r\n}\r\ninterface StringValueEditState {\r\n    disabled: boolean;\r\n    error?: string;\r\n}\r\n\r\nexport class StringValueEdit extends React.Component<StringValueEditProps, StringValueEditState> {\r\n    //private input:HTMLInputElement;\r\n    protected value: string;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            disabled: true,\r\n        };\r\n    }\r\n    /*\r\n    private ref = (input:HTMLInputElement) => {\r\n        if (!input) return;\r\n        input.value = this.props.value || '';\r\n        this.input = input;\r\n    }*/\r\n    private onChange = (evt:React.FormEvent<HTMLInputElement>) => {\r\n        let val = this.props.value;\r\n        let org = val && val.trim();\r\n        this.value = evt.currentTarget.value.trim();\r\n        this.setState({\r\n            disabled: org === this.value\r\n        });\r\n        \r\n    }\r\n    protected onSubmit = async () => {\r\n        let val = this.props.value;\r\n        let org = val && val.trim();\r\n        let v = this.value; // this.input.value.trim();\r\n        let onChanged = this.props.onChanged;\r\n        if (onChanged !== undefined) {\r\n            let ret = await onChanged(v, org);\r\n            if (typeof ret === 'string') {\r\n                this.setState({error: ret});\r\n                return;\r\n            }\r\n            nav.pop();\r\n        }\r\n    }\r\n    protected renderControl() {\r\n        return <input className=\"form-control w-100\" type=\"text\"\r\n            // ref={this.ref}\r\n            defaultValue={this.props.value}\r\n            onChange={this.onChange} />\r\n    }\r\n    render() {\r\n        let {title, onChanged, buttonText, info, value} = this.props;\r\n        let {disabled, error} = this.state;\r\n        let right = <button\r\n            className=\"btn btn-success btn-sm\"\r\n            disabled={disabled}\r\n            onClick={this.onSubmit}\r\n        >\r\n            {buttonText||'保存'}\r\n        </button>;\r\n        let errorDiv;\r\n        if (error !== undefined) errorDiv = <div className='text-danger'>{error}</div>;\r\n        return <Page header={title} right={right}>\r\n            <div className=\"my-4 mx-3\">\r\n                {this.renderControl()}\r\n                {errorDiv}\r\n                <small className=\"d-block mt-2 text-muted\">{info}</small>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n\r\nexport class TextValueEdit extends StringValueEdit {\r\n    /*\r\n    private textArea:HTMLTextAreaElement;\r\n    private refTextArea = (textArea:HTMLTextAreaElement) => {\r\n        if (!textArea) return;\r\n        textArea.value = this.props.value || '';\r\n        this.textArea = textArea;\r\n    }\r\n    */\r\n    private onTextAreaChange = (evt:React.FormEvent<HTMLTextAreaElement>) => {\r\n        let val = this.props.value;\r\n        let org = val && val.trim();\r\n        this.value = evt.currentTarget.value.trim();\r\n        this.setState({\r\n            disabled: org === this.value\r\n        })\r\n    }\r\n    protected renderControl() {\r\n        return <textarea className=\"form-control w-100\" rows={8}\r\n            // ref={this.refTextArea}\r\n            defaultValue={this.props.value}\r\n            onChange={this.onTextAreaChange} />\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { nav, Page } from 'tonva-tools';\r\nimport { SearchBox, List } from 'tonva-react-form';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport interface IdPickPageProps {\r\n    caption: string;\r\n    searchPlaceHolder?: string;\r\n    candidateItems: ((params:any, key:string) => Promise<any[]>) | any[];\r\n    moreCandidates: () => Promise<void>;\r\n    row: (item:any, index:number) => JSX.Element;\r\n    idFromItem: (item:any) => number;\r\n    resolve: (item?: any) => void;\r\n    params: any;\r\n}\r\n\r\n@observer\r\nexport class IdPickPage extends React.Component<IdPickPageProps> {\r\n    @observable private items:any[];\r\n\r\n    async componentDidMount() {\r\n        let {candidateItems, params} = this.props;\r\n        this.items = Array.isArray(candidateItems)? \r\n            candidateItems \r\n            : await candidateItems(params, '');\r\n    }\r\n    private itemClick = (item:any):Promise<void> => {\r\n        let {resolve, idFromItem} = this.props;\r\n        resolve(idFromItem(item));\r\n        nav.pop();\r\n        return;\r\n    }\r\n    private onSearch = async (key: string):Promise<void> => {\r\n        let {candidateItems, params} = this.props;\r\n        if (typeof candidateItems === 'function') {\r\n            let ret = await candidateItems(params, key);\r\n            this.items = ret;\r\n        }\r\n        return;\r\n    }\r\n    render() {\r\n        let {caption, row, searchPlaceHolder} = this.props;\r\n        return <Page header={caption} back=\"close\">\r\n            <div className=\"container\">\r\n                <SearchBox className=\"my-2\" \r\n                    onSearch={this.onSearch} \r\n                    placeholder={searchPlaceHolder}\r\n                    maxLength={100} />\r\n            </div>\r\n            <List items={this.items} item={{onClick:this.itemClick, render:row}} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport {SearchBox, Media, List, LMR, Badge, Prop, PropGrid, FA} from 'tonva-react-form';\r\nimport {nav, Page, PageItems} from 'tonva-tools';\r\nimport {IdDates, UnitSpan} from '../tools';\r\nimport {UnitApp, DevModel} from '../model';\r\nimport {store} from '../store';\r\nimport { devApi } from 'api';\r\n\r\n@observer\r\nexport class Info extends React.Component<{app:UnitApp, appActed?:(appId:number, inUnit:number)=>void}> {\r\n    @observable private uqAccesses: any[];\r\n    async componentWillMount() {\r\n        this.uqAccesses = await devApi.loadAppUqs(this.props.app.id);\r\n    }\r\n\r\n    private renderUqRow = (uqAccess:any, index:number):JSX.Element => {\r\n        let {name, owner, unit, discription} = uqAccess;\r\n        return <LMR className=\"py-2\" right={<small className=\"text-muted\">{discription}</small>}>\r\n            {owner} / {name}\r\n        </LMR>;\r\n    }\r\n\r\n    private act = async () => {\r\n        let {app, appActed} = this.props;\r\n        let {id, unit, inUnit} = app;\r\n        let newInUnit:number = 1;\r\n        if (inUnit === 0) {\r\n            let ret = await store.restoreUnitApp(id);\r\n            if (ret <= 0) alert('app 或者 uq 没有定义 service');\r\n        }\r\n        else if (inUnit === 1) {\r\n            await store.stopUnitApp(id);\r\n            newInUnit = 0;\r\n        }\r\n        else {\r\n            let newApp:UnitApp = _.clone(app);\r\n            newApp.id = id;\r\n            newApp.inUnit = 1;\r\n            let ret = await store.addUnitApp(newApp);\r\n            if (ret <= 0) alert('app 或者 uq 没有定义 service');\r\n        }\r\n        if (appActed !== undefined) {\r\n            appActed(id, newInUnit);\r\n        }\r\n        nav.pop();\r\n    }\r\n    render() {\r\n        let {unit, name, discription, icon, inUnit, date_init, date_update} = this.props.app;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let faName:string, text:string, color:string;\r\n        if (inUnit === 1) {\r\n            faName = 'ban';\r\n            text = '停用APP';\r\n            color = 'btn-danger';\r\n        }\r\n        else if (inUnit === 0) {\r\n            faName = 'refresh';\r\n            text = '恢复APP';\r\n            color = 'btn-success';\r\n        }\r\n        else {\r\n            faName = 'plus';\r\n            text = '启用APP';\r\n            color = 'btn-primary';\r\n        }\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <Media icon={icon} main={name} discription={disp} />\r\n            },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                label: '开发号', \r\n                component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div>\r\n            },\r\n            {\r\n                type: 'component', \r\n                label: '关联UQ', \r\n                component: <List className=\"w-100\" items={this.uqAccesses} item={{render: this.renderUqRow}} />\r\n            },\r\n            '',\r\n            '',\r\n            {\r\n                type: 'component', \r\n                bk: '', \r\n                component: <button className={classNames('btn', 'w-100', color)} onClick={this.act}>\r\n                    <FA name={faName} size=\"lg\" /> {text}\r\n                </button>\r\n            },\r\n        ];\r\n        return <div>\r\n            <PropGrid rows={rows} values={this.props} />\r\n        </div>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {IObservableArray} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport {SearchBox, Media, List, LMR, Badge, Prop, PropGrid} from 'tonva-react-form';\r\nimport {nav, Page, PageItems, Image} from 'tonva-tools';\r\nimport {mainApi} from '../api';\r\nimport {store} from '../store';\r\nimport {UnitApp} from '../model';\r\nimport {Info} from './info';\r\n\r\nclass PageApps extends PageItems<UnitApp> {\r\n    private unitId:number;\r\n    constructor(unitId:number) {\r\n        super();\r\n        this.unitId = unitId;\r\n    }\r\n    protected async load():Promise<UnitApp[]> {\r\n        return await mainApi.searchApp(this.unitId, this.param, this.pageStart, this.pageSize);\r\n    }\r\n    protected setPageStart(item:UnitApp) {\r\n        if (item === undefined)\r\n            this.pageStart = 0;\r\n        else\r\n            this.pageStart = item.id;\r\n    }\r\n}\r\n\r\n@observer\r\nexport class NewApp extends React.Component {\r\n    private apps: PageApps;\r\n    constructor(props) {\r\n        super(props);\r\n        this.apps = new PageApps(store.unit.id);\r\n    }\r\n    private onSearch = async (key:string) => {\r\n        await this.apps.first(key);\r\n    }\r\n    private appClick = (app:UnitApp) => {\r\n        nav.push(<Page header=\"App详细信息\">\r\n            <Info app={app} appActed={this.appActed}/>\r\n        </Page>);\r\n    }\r\n    private appActed = (appId:number, inUnit:number) => {\r\n        let apps = this.apps.items as IObservableArray<UnitApp>; //.replace .find(v => v.id === appId);\r\n        let app = apps.find(v => v.id === appId);\r\n        app.inUnit = inUnit;\r\n        apps.replace([app]);\r\n    }\r\n    private renderApp(app:UnitApp):JSX.Element {\r\n        let {name, discription, icon, inUnit} = app;\r\n        let right;\r\n        if (inUnit === 1)\r\n            right = <small>已启用</small>;\r\n        else if (inUnit === 0)\r\n            right = <small>已停用</small>;\r\n        return <LMR className=\"px-3 py-2\"\r\n            left={<Badge><Image src={icon} /></Badge>}\r\n            right={right}>\r\n            <div className=\"px-3\">\r\n                <div>{name}</div>\r\n                <small className=\"text-muted\">{discription}</small>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n    render() {\r\n        let items = this.apps.items;\r\n        let center = <SearchBox onSearch={this.onSearch} \r\n            className=\"w-100 mx-1\" \r\n            placeholder=\"搜索App\" \r\n            maxLength={100} />;\r\n        return <Page header={center}>\r\n            <List\r\n                items={items}\r\n                item={{onClick:this.appClick, render:this.renderApp}}\r\n                before=\"搜索App名字\" />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, FA, SubmitResult, LMR, Badge} from 'tonva-react-form';\r\nimport {nav, Page, Image} from 'tonva-tools';\r\nimport {store} from '../store';\r\nimport {NewApp} from './new';\r\nimport {UnitApp} from '../model';\r\nimport {Info} from './info';\r\n\r\n@observer\r\nexport default class AppsPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadApps();\r\n    }\r\n    private itemRender(app:UnitApp, index:number) {\r\n        let {name, discription, icon, inUnit} = app;\r\n        let ban;\r\n        if (inUnit === 0)\r\n            ban = <FA className=\"text-danger\" name='ban' />;\r\n        return <LMR className=\"px-3 py-1\"\r\n            left={<Badge><Image src={icon} /></Badge>}\r\n            right={ban}>\r\n            <div className=\"px-3\">\r\n                <div>{name}</div>\r\n                <small className=\"text-muted\">{discription}</small>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n    private appClick(app:UnitApp) {\r\n        nav.push(<Page header=\"App详细信息\">\r\n            <Info app={app} />\r\n        </Page>);\r\n    }\r\n    private newItem() {\r\n        nav.push(<NewApp {...this.props} />);\r\n    }\r\n    render() {\r\n        let right = <button \r\n            className='btn btn-secondary btn-sm' \r\n            onClick={()=>this.newItem()}><FA name=\"plus\" /></button>;\r\n        return <Page header=\"启停App\" right={right}>\r\n            <List items={store.apps} item={{render: this.itemRender, onClick: this.appClick}} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {List, LMR, FA, TonvaForm, SubmitResult, FormRow} from 'tonva-react-form';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {Role} from '../model';\r\nimport {store} from '../store';\r\n\r\nexport class NewRole extends React.Component {\r\n    private form:TonvaForm;\r\n    private formRows:FormRow[] = [\r\n        {\r\n            label: '名称', \r\n            field: {name: 'name', type: 'string', maxLength: 50, required: true},\r\n        },\r\n        {\r\n            label: '描述',\r\n            field: {name: 'discription', type: 'string', maxLength: 250},\r\n            face: {type: 'textarea'}\r\n        },\r\n    ];\r\n    private async onSubmit(values:any):Promise<SubmitResult> {\r\n        let {name, discription} = values;\r\n        let id = await store.unitAddRole(name, discription);\r\n        if (id <= 0) {\r\n            this.form.formView.setError('name', '角色名 ' + name + ' 已经存在');\r\n            return;\r\n        }\r\n        nav.pop();\r\n        return;\r\n    }\r\n    render() {\r\n        return <Page header=\"新建角色\">\r\n            <TonvaForm className=\"m-3\" ref={tf => this.form = tf} \r\n                formRows={this.formRows} \r\n                onSubmit={this.onSubmit} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, Media, LMR, FA, TonvaForm, SubmitResult, FormRow, \r\n    PropGrid, Prop, Badge, StackedFA} from 'tonva-react-form';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {StringValueEdit} from '../tools';\r\nimport {Role, UnitApp} from '../model';\r\nimport {store} from '../store';\r\nimport {mainApi} from '../api';\r\n\r\ninterface Props {\r\n    role: Role;\r\n}\r\ninterface State {\r\n    apps: UnitApp[]\r\n}\r\nexport class RoleApps extends React.Component<Props, State> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {apps:undefined};\r\n    }\r\n    async componentDidMount() {\r\n        let ret = await mainApi.unitRoleApps(store.unit.id, this.props.role.id);\r\n        this.setState({\r\n            apps: ret,\r\n        });\r\n    }\r\n    private renderRoleApp(app:UnitApp, index:number) {\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={app.name}\r\n                right={<small className=\"text-muted\">{app.discription}</small>} />\r\n    }\r\n    render() {\r\n        let {role} = this.props;\r\n        return <Page header={role.name + ' - 可用APP'}>\r\n            <List\r\n                items={this.state.apps}\r\n                item={{render: this.renderRoleApp}}\r\n                none=\"没有APP\" />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, LMR, FA, TonvaForm, SubmitResult, FormRow, Media, Muted, PropGrid, Prop} from 'tonva-react-form';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {Role} from '../model';\r\nimport {store} from '../store';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {StringValueEdit} from '../tools';\r\nimport {RoleApps} from './roleApps';\r\n\r\n@observer\r\nexport class MemberPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadRoles();\r\n        await store.loadMemberRoles();\r\n    }\r\n    async onAssigned(value:any, orgValue:any):Promise<void> {\r\n        await store.unitAssignMember(value);\r\n    }\r\n    private renderMemberRole = (role:Role) => {\r\n        let {name, discription} = role;\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={name}\r\n                right={<Muted>{discription}</Muted>} />\r\n    }\r\n    private roleClick(role:Role) {\r\n        nav.push(<RoleApps role={role} />);\r\n    }\r\n    private setRole = () => {\r\n        nav.push(<SetRole />);\r\n    }\r\n    render() {\r\n        let roleUser = store.roleMember;\r\n        let {nick, name, assigned, icon} = roleUser;\r\n        let disp = <div>\r\n            <div><Muted>唯一名: </Muted> &nbsp; {name}</div>\r\n            <div><Muted>昵称: </Muted> &nbsp; {nick||<Muted>[无]</Muted>}</div>\r\n        </div>;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component',\r\n                component: <Media icon={icon||appIcon} main={roleUser.assigned||nick||name} discription={disp} />\r\n            },\r\n            '',\r\n            {\r\n                label: '备注名',\r\n                type: 'string',\r\n                name: 'assigned',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"修改备注名\"\r\n                    value={roleUser.assigned}\r\n                    onChanged={this.onAssigned} \r\n                    info=\"加一个备注，便于甄别用户\" />),\r\n            },\r\n            '',\r\n        ];\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.setRole}>修改角色</button>;\r\n        return <Page header=\"用户详情\" right={right}>\r\n            <PropGrid rows={rows} values={roleUser} />\r\n            <div className=\"px-3 py-1\"><small><FA name=\"angle-double-right\" /> 所属角色</small></div>\r\n            <List\r\n                items={store.memberRoles} \r\n                item={{render: this.renderMemberRole, onClick: this.roleClick}} />\r\n        </Page>\r\n    }\r\n}\r\n\r\n@observer\r\nclass SetRole extends React.Component {\r\n    private list:List;\r\n    constructor(props) {\r\n        super(props);\r\n        this.submit = this.submit.bind(this);\r\n    }\r\n    async componentDidMount() {\r\n        await store.loadRoles();\r\n        await store.loadMemberRoles();\r\n    }\r\n    private renderRole(role:Role, index:number) {\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={role.name}\r\n                right={<small className=\"text-muted\">{role.discription}</small>} />\r\n    }\r\n    private roleSelect(role:Role, isSelected: boolean, anySelected: boolean) {\r\n    }\r\n    private async submit() {\r\n        await store.setMemberRoles(this.list.selectedItems);\r\n        nav.pop();\r\n    }\r\n    render() {\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.submit}>保存</button>;\r\n        let roles = store.roles;\r\n        let memberRoles = store.memberRoles;\r\n        return <Page header=\"修改角色\" right={right}>\r\n            <List \r\n                ref={list=>this.list=list}\r\n                items={roles}\r\n                selectedItems={memberRoles}\r\n                compare={(role:Role, selectRole:Role)=>role.id === selectRole.id}\r\n                item={{render: this.renderRole, onSelect: this.roleSelect}} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, LMR, Badge, FA, TonvaForm, SubmitResult, FormRow, Muted, SearchBox} from 'tonva-react-form';\r\nimport {nav, Page, Image} from 'tonva-tools';\r\nimport {Role, RoleMember} from '../model';\r\nimport {store} from '../store';\r\nimport {mainApi} from '../api';\r\nimport {MemberPage} from './memberPage';\r\n\r\n@observer\r\nexport class MembersPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadMembers();\r\n    }\r\n    private renderMember(member:RoleMember, index:number):JSX.Element {\r\n        return <MemberRow {...member} />;\r\n    }\r\n    private userClick(user:RoleMember) {\r\n        store.setRoleUser(user);\r\n        nav.push(<MemberPage />);\r\n    }\r\n    private onSearch() {\r\n        let role = store.role;\r\n        let roleId = role === undefined? 0:role.id;\r\n        nav.push(<MemberSearch roleId={roleId} />);\r\n    }\r\n    render() {\r\n        let right = <button className=\"btn btn-sm\" onClick={this.onSearch}><FA name=\"search\" /></button>;\r\n        return <Page header=\"用户\" right={right}>\r\n            <List items={store.roleMembers} item={{render: this.renderMember, onClick: this.userClick}} />\r\n        </Page>\r\n    }\r\n}\r\n\r\nconst MemberRow = (member:RoleMember) => {\r\n    let {nick, name, assigned, icon} = member;\r\n    let content;\r\n    if (assigned)\r\n        content = <><div><b>{assigned}</b> <Muted>{nick}</Muted></div><Muted>{name}</Muted></>;\r\n    else if (nick)\r\n        content = <><div><b>{nick}</b></div><Muted>{name}</Muted></>;\r\n    else\r\n        content = <div><b>{name}</b></div>;\r\n    return <LMR className=\"py-2 px-3 align-items-stretch\"\r\n        left={<Badge size=\"sm\"><Image src={icon} /></Badge>}>\r\n        <div className=\"px-3\">{content}</div>\r\n    </LMR>;\r\n};\r\n\r\ninterface SearchProps {\r\n    roleId: number;\r\n}\r\ninterface SearchState {\r\n    members: RoleMember[];\r\n}\r\nexport class MemberSearch extends React.Component<SearchProps, SearchState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.state = {\r\n            members: null,\r\n        }\r\n    }\r\n    private async onSearch(key:string) {\r\n        let ret = await mainApi.unitMembers(store.unit.id, this.props.roleId, key, 0, 100);\r\n        this.setState({members: ret});\r\n    }\r\n    private renderMember(member:RoleMember, index:number):JSX.Element {\r\n        return <MemberRow {...member} />;\r\n    }\r\n    private userClick(user:RoleMember) {\r\n        store.setRoleUser(user);\r\n        nav.push(<MemberPage />);\r\n    }\r\n    render() {\r\n        let header = <SearchBox className=\"w-100 mx-1\" \r\n            onSearch={this.onSearch} \r\n            maxLength={100}\r\n            placeholder=\"搜索用户\" />;\r\n        return <Page header={header}>\r\n            <List\r\n                items={this.state.members}\r\n                item={{render: this.renderMember, onClick: this.userClick}} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, Media, LMR, FA, PropGrid, Prop} from 'tonva-react-form';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {StringValueEdit} from '../tools';\r\nimport {Role, UnitApp} from '../model';\r\nimport {store} from '../store';\r\nimport {MembersPage} from './membersPage';\r\n\r\n@observer\r\nexport class RolePage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadApps();\r\n        await store.loadRoleApps();\r\n    }\r\n    private editRole() {\r\n        nav.push(<EditRole />);\r\n    }\r\n    private renderRoleApp = (app:UnitApp, index:number) => {\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={app.name}\r\n                right={<small className=\"text-muted\">{app.discription}</small>} />\r\n    }\r\n    private roleAppClick = (app:UnitApp) => {\r\n        nav.push(<RoleApps />);\r\n    }\r\n    private addRoleApp() {\r\n        nav.push(<RoleApps />);\r\n    }\r\n    private members() {\r\n        nav.push(<MembersPage />);\r\n    }\r\n    render() {\r\n        let {name, discription, count} = store.role;\r\n        let onMembersClick, membersLeft, membersRight;\r\n        if (count===undefined || count===null || count===0) {\r\n            membersLeft = <small className=\"text-muted\">无用户</small>;\r\n        }\r\n        else {\r\n            membersLeft = `共有 ${count} 用户`;\r\n            membersRight = <div><FA name=\"chevron-right\" /></div>;\r\n            onMembersClick = this.members;\r\n        }\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <Media icon={undefined} main={name} discription={discription} />,\r\n                onClick: this.editRole,\r\n            },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <LMR className=\"py-2\" left={membersLeft} right={membersRight} />,\r\n                onClick: onMembersClick,\r\n            },\r\n            '=',\r\n        ];\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={()=>this.addRoleApp()}><FA name=\"plus\" /> APP</button>;\r\n        return <Page header=\"角色\" right={right}>\r\n            <PropGrid rows={rows} values={{}} />\r\n            <div className=\"px-3 py-1\"><small><FA name=\"angle-double-right\" /> 可用APP列表</small></div>\r\n            <List\r\n                items={store.roleApps} \r\n                item={{render: this.renderRoleApp, onClick:this.roleAppClick}}\r\n                none={<small className=\"text-muted px-3 py-1\">没有APP, 点击右上角按钮选择APP</small>} />\r\n        </Page>\r\n    }\r\n}\r\n\r\n@observer\r\nclass EditRole extends React.Component {\r\n    async onNameChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.roleChangeProp('name', value);\r\n    }\r\n    async onDiscriptionChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.roleChangeProp('discription', value);\r\n    }\r\n    render() {\r\n        let role = store.role;\r\n        let {id} = role;\r\n        let isSysRole = id === 1 || id === 2;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                label: '名称', \r\n                type: 'string',\r\n                name: 'name', \r\n                onClick: isSysRole? undefined : ()=>nav.push(<StringValueEdit \r\n                    title=\"修改名称\"\r\n                    value={role.name}\r\n                    onChanged={this.onNameChanged} \r\n                    info=\"好的名字便于理解\" />)\r\n            },\r\n            {\r\n                label: '描述',\r\n                type: 'string',\r\n                name: 'discription',\r\n                onClick: isSysRole? undefined : ()=>nav.push(<StringValueEdit \r\n                    title=\"修改描述\"\r\n                    value={role.discription}\r\n                    onChanged={this.onDiscriptionChanged} \r\n                    info=\"对角色做一个说明\" />)\r\n            },\r\n        ];\r\n        return <Page header=\"修改角色信息\">\r\n            <PropGrid rows={rows} values={role} alignValue=\"right\" />\r\n        </Page>;\r\n    }\r\n}\r\n\r\n@observer\r\nclass RoleApps extends React.Component {\r\n    private list:List;\r\n    constructor(props) {\r\n        super(props);\r\n        this.submit = this.submit.bind(this);\r\n    }\r\n    async componentDidMount() {\r\n        await store.loadApps();\r\n        await store.loadRoleApps();\r\n    }\r\n    private renderApp(app:UnitApp, index:number) {\r\n        return <LMR className=\"py-1 px-2 align-items-center\"\r\n                left={app.name}\r\n                right={<small className=\"text-muted\">{app.discription}</small>} />\r\n    }\r\n    private appSelect(app:UnitApp, isSelected: boolean, anySelected: boolean) {\r\n\r\n    }\r\n    private async submit() {\r\n        await store.setRoleApps(this.list.selectedItems);\r\n        nav.pop();\r\n    }\r\n    render() {\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.submit}>保存</button>;\r\n        let apps = store.apps;\r\n        let roleApps = store.roleApps;\r\n        return <Page header=\"选择APP\" right={right}>\r\n            <List \r\n                ref={list=>this.list=list}\r\n                items={apps}\r\n                selectedItems={roleApps}\r\n                item={{render: this.renderApp, onSelect: this.appSelect}} />\r\n        </Page>;\r\n    }\r\n}","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {List, LMR, FA, Muted} from 'tonva-react-form';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {Role} from '../model';\r\nimport {store} from '../store';\r\nimport {NewRole} from './newRole';\r\nimport {RolePage} from './rolePage';\r\nimport {MembersPage} from './membersPage';\r\n\r\nconst midClassName = classNames('d-flex', 'h-100', 'align-items-center', 'px-5', 'small', 'text-muted');\r\n\r\n@observer\r\nexport class Members extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadRoles();\r\n    }\r\n    private renderRole = (role:Role, index:number) => {\r\n        let {name, discription, count} = role;\r\n        return <LMR\r\n            className=\"px-3 py-2\" \r\n            left={name}\r\n            right={String(count || '')}>\r\n            <div className={midClassName}>\r\n                {discription}\r\n            </div>\r\n        </LMR>;\r\n    }\r\n    private roleClick = (role:Role) => {\r\n        store.setRole(role);\r\n        nav.push(<RolePage />)\r\n    }\r\n    private newRole = (evt: React.MouseEvent<HTMLAnchorElement>) => {\r\n        evt.preventDefault();\r\n        nav.push(<NewRole />);\r\n    }\r\n    private allUsersClick = () => {\r\n        store.setRole(undefined);\r\n        nav.push(<MembersPage />);\r\n    }\r\n    render() {\r\n        let right = <a className=\"small\" href='#' onClick={this.newRole}>新增</a>;\r\n        let header = <LMR className=\"px-3 small bg-light\" left=\"角色\" right={right} />;\r\n        return <Page header=\"用户角色\">\r\n            <LMR\r\n                className=\"my-3 px-3 py-2 bg-white\" \r\n                left={'用户'}\r\n                right={String(store.memberCount)}\r\n                onClick={this.allUsersClick}>\r\n                <div className={midClassName}>\r\n                    设置用户角色\r\n                </div>\r\n            </LMR>\r\n            <List\r\n                header={header}\r\n                items={store.roles}\r\n                none=\"[无]\"\r\n                item={{render:this.renderRole, onClick:this.roleClick}} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Muted } from 'tonva-react-form';\r\nimport { left0 } from 'tonva-tools';\r\nimport { VMapMain, MapUI, Field, CMap }  from 'tonva-react-uq'; \r\n\r\nclass CMapTeamPerson extends CMap {\r\n    async searchOnKey(keyField:Field, param):Promise<number> {\r\n        switch (keyField.name) {\r\n            default: return await super.searchOnKey(keyField, param);\r\n            case 'post': return await this.searchOnPost(param);                \r\n        }\r\n    }\r\n\r\n    private async searchOnPost(param: any):Promise<number> {\r\n        let querySelect = this.cQuerySelect('teamPosts');\r\n        let val = await querySelect.call(param);\r\n        return val['post'].id;\r\n    }\r\n}\r\n\r\nclass VMapTeamPerson extends VMapMain {\r\n}\r\n\r\nconst ui:MapUI = {\r\n    CMap: CMapTeamPerson,\r\n    keys: [\r\n        {\r\n            content: ({name, id}:any, x:any) => <><Muted>{x.team} &nbsp; </Muted> {name}</>,\r\n            none: (x:any)=>x.noStaff,\r\n        },\r\n        {\r\n            content: ({name, id}:any, x:any) => <><Muted>{x.staff} &nbsp; </Muted> {name} &nbsp; <Muted>{x.no} {left0(id, 4)}</Muted></>,\r\n            none: (x:any)=>x.noPost,\r\n        },\r\n        {\r\n            content: ({title, id}:any, x:any) => <><Muted>{x.post} &nbsp; </Muted> {title}</>,\r\n            none: undefined,\r\n        },\r\n    ]\r\n}\r\n\r\nexport default ui;\r\n","import { UqUI } from 'tonva-react-uq';\r\nimport map from './map';\r\nimport tuid from './tuid';\r\nimport query from './query';\r\nimport res from './res';\r\n\r\nconst uqUI:UqUI = {\r\n    map: map,\r\n    tuid: tuid,\r\n    query: query,\r\n    res: res,\r\n}\r\n\r\nexport default uqUI;\r\n","import teamPerson from './teamPerson';\r\n\r\nexport default {\r\n    teamPerson: teamPerson,\r\n};\r\n","import user from './user';\r\nimport organization from './organization';\r\n\r\nexport default {\r\n    user: user,\r\n    organization: organization,\r\n};\r\n","import * as React from 'react';\r\nimport { TuidUI, CTuidSelect, CQuery, QueryPageItems } from \"tonva-react-uq\";\r\nimport { PageItems } from \"tonva-tools\";\r\n\r\nclass CUserSelect extends CTuidSelect {\r\n    protected buildPageItems():PageItems<any> {\r\n        let query:CQuery = this.cUq.cFromName('query', 'SearchUser') as CQuery;\r\n        return new QueryPageItems(query.entity);\r\n    }\r\n    idFromItem(item:any) {return item.id;}\r\n\r\n    async searchMain(key:string) {\r\n        if (this.PageItems === undefined) {\r\n            this.PageItems = this.buildPageItems();\r\n        }\r\n        if (key !== undefined) await this.PageItems.first({key: key});\r\n    }\r\n}\r\n\r\nconst ui:TuidUI = {\r\n    CTuidSelect: CUserSelect,\r\n    content: (item:any) => {return <>{item.name}</>},\r\n}\r\n\r\nexport default ui;\r\n","import * as React from 'react';\r\nimport { TuidUI } from \"tonva-react-uq\";\r\n\r\nconst ui:TuidUI = {\r\n    divs: {\r\n        post: {\r\n            content: (item:any) => {\r\n                let {title} = item;\r\n                return <>{title}</>;\r\n            },\r\n            rowContent: (item:any) => {\r\n                let {title} = item;\r\n                return <>{title}</>;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default ui;\r\n","import teamPosts from './teamPosts';\r\n\r\nexport default {\r\n    teamPosts: teamPosts,\r\n};\r\n","import * as React from 'react';\r\nimport { QueryUI } from \"tonva-react-uq\";\r\nimport { observer } from 'mobx-react';\r\n\r\nconst ui:QueryUI = {\r\n    row: observer((item:any) => {\r\n        let {post} = item;\r\n        return <div className=\"px-3 py-2\">{post.content()}</div>;\r\n    }),\r\n};\r\n\r\nexport default ui;\r\n","import CN from './zh/CN';\r\n\r\nconst res = {\r\n    zh: {\r\n        CN: CN\r\n    }\r\n};\r\n\r\nexport default res;\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\n\r\nexport default {\r\n    x: {\r\n        no: '编号',\r\n        team: '部门',\r\n        staff: '员工',\r\n        noStaff: '无员工',\r\n        post: '职位',\r\n        noPost: '无职位',\r\n        a: 'aaa',\r\n        b: {\r\n            s: 'sss',\r\n            d: ()=><span className=\"text-success\">ddd</span>,\r\n        },\r\n        c: ()=><span className=\"text-danger\">ccc</span>,\r\n    },\r\n    uq: '$UNITX',\r\n    tuid: '基础档案',\r\n    map: '对照表',\r\n    sheet: '单据',\r\n    pending: '待处理',\r\n    book: '帐',\r\n    action: '操作',\r\n    tuidNullCaption: '选择',\r\n    submit: '提交',\r\n    arrNew: '新增',\r\n    arrEdit: '保存',\r\n    entity: {\r\n        message: {\r\n            label: '消息-message',\r\n            arrNew: '新增消息',\r\n            arrEdit: '保存消息',\r\n            fields: {\r\n                fromUser: '发送人',\r\n                fromUnit: '发送部门',\r\n                type: '类型',\r\n                date: '日期',\r\n                subject: '主题',\r\n                discription: '描述',\r\n                content: '内容'\r\n            },\r\n        },\r\n        getMessage: {\r\n            label: '获取Message',\r\n            submit: '获取消息',\r\n            fields: {\r\n                msg: '消息'\r\n            }\r\n        },\r\n        newMessage: {\r\n            label: '新建消息',\r\n            fields: {\r\n                type: '类型',\r\n                subject: '主题',\r\n            },\r\n            arrs: {\r\n                to: {\r\n                    label: '发送',\r\n                    newSubmit: '新增to',\r\n                    editSumbit: '保存to',\r\n                },\r\n                cc: {\r\n                    label: '抄送',\r\n                    newSubmit: '新增cc',\r\n                    editSumbit: '保存cc',\r\n                }\r\n            }\r\n        },\r\n        sectionTeam: {\r\n            label: '大部-团队对照表',\r\n        },\r\n        teamPerson: {\r\n            label: '员工-岗位对照表',\r\n            fields: {\r\n            },\r\n            confirmDelete: _.template('真的要删除${label}吗'),\r\n        },\r\n        teamOrganization: {\r\n            label: '团队-机构对照表',\r\n        },\r\n        teamPosts: {\r\n            label: '团队-岗位对照表',\r\n        },\r\n        person: {\r\n            label: '员工',\r\n            fields: {\r\n                name: '姓名',\r\n                nick: '别名',\r\n                given: '名字',\r\n                sur: '姓',\r\n                gender: '性别',\r\n                user: '用户',\r\n            }\r\n        },\r\n        organization: {\r\n            label: '机构',\r\n            arrs: {\r\n                post: {\r\n                    label: '岗位',\r\n                }\r\n            }\r\n        },\r\n        user: {\r\n            label: '用户'\r\n        },\r\n        team: {\r\n            label: '团队',\r\n        },\r\n        section: {\r\n            label: '大部',\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { IObservableValue, observable } from 'mobx';\r\nimport { Page, VPage } from 'tonva-tools';\r\nimport { Muted, LMR, FA, List } from 'tonva-react-form';\r\nimport { COpBinding } from './cOpBinding';\r\nimport { StateTo, Sheet, Organization, Post, Team, Section, To, Entity } from './model';\r\n\r\ninterface SelectablePost {\r\n    post: Post;\r\n    selected: IObservableValue<boolean>;\r\n    teams?: SelectableTeam[];\r\n}\r\n\r\ninterface SelectableTeam {\r\n    team: Team;\r\n    selected: IObservableValue<boolean>;\r\n    sections?: SelectableSection[];\r\n}\r\n\r\ninterface SelectableSection {\r\n    section: Section;\r\n    selected: IObservableValue<boolean>;\r\n}\r\n\r\nexport class VOpBinding extends VPage<COpBinding> {\r\n    private sheet: Sheet;\r\n    private states: StateTo[];\r\n    private selectablePosts:SelectablePost[];\r\n    private sheetOpsChanged:boolean = false;\r\n\r\n    private stateClick(state:StateTo) {\r\n        let {organizations, teams, sections, posts} = this.controller;\r\n        let postTos:{[post:number]:To[]} = {};\r\n        let {tos} = state;\r\n        if (tos !== undefined) {\r\n            for (let to of tos) {\r\n                let {post} = to;\r\n                let pid = post.id;\r\n                let pto = postTos[pid];\r\n                if (pto === undefined) postTos[pid] = pto = [];\r\n                pto.push(to);\r\n            }\r\n        }\r\n        this.selectablePosts = posts.map(v => this.buildSelectablePost(v, postTos));\r\n        /*\r\n            return {\r\n                post: v,\r\n                selected: observable.box(false),\r\n                teams: [],\r\n            }\r\n        });*/\r\n        this.sheetOpsChanged = false;\r\n        this.openPage(this.stateView, state);\r\n        this.regConfirmClose(async ():Promise<boolean> => {\r\n            if (this.sheetOpsChanged === false) return true;\r\n            return confirm('未保存\\n真的不保存吗？');\r\n        });\r\n    }\r\n\r\n    private buildSelectablePost(post:Post, postTos:{[post:number]:To[]}):SelectablePost {\r\n        let pto = postTos[post.id];\r\n        let selected:boolean;\r\n        let teams:SelectableTeam[];\r\n        if (pto === undefined) {\r\n            selected = false;\r\n            teams = [];\r\n        }\r\n        else {\r\n            selected = true;\r\n            teams = this.buildSelectableTeams(post, pto);\r\n        }\r\n        let ret = {\r\n            post: post,\r\n            selected: observable.box(selected),\r\n            teams: teams,\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private buildSelectableTeams(post:Post, tos: To[]):SelectableTeam[] {\r\n        let teamTos:{[team:number]:To[]} = {};\r\n        let hasAllTeams = false;\r\n        for (let to of tos) {\r\n            let {team} = to;\r\n            let teamId;\r\n            if (team === undefined) {\r\n                teamId = 0;\r\n                hasAllTeams = true;\r\n            }\r\n            else {\r\n                teamId = team.id;\r\n            }\r\n            let tto = teamTos[teamId];\r\n            if (tto === undefined) teamTos[teamId] = tto = [];\r\n            tto.push(to);\r\n        }\r\n        let sections:Section[] = [];\r\n        let {organization} = post;\r\n        if (organization !== undefined && organization.teams !== undefined) {\r\n            for (let team of post.organization.teams) {\r\n                if (team.sections !== undefined) sections.push(...team.sections);\r\n            }\r\n        }\r\n        let teams:SelectableTeam[] = [];\r\n        let teamTo0 = teamTos[0];\r\n        let teamTo0Sections = this.buildSelectableSections(sections, teamTo0);\r\n        teams.push({\r\n            team: {\r\n                id: 0,\r\n                name: '* 所有部门',\r\n                no: undefined,\r\n                sections: sections,\r\n                organizations: undefined,\r\n            }, \r\n            selected: observable.box(teamTo0!==undefined), \r\n            sections: teamTo0Sections,\r\n        });\r\n        if (organization !== undefined && organization.teams !== undefined) {\r\n            post.organization.teams.forEach(v => {\r\n                let teamTo = teamTos[v.id];\r\n                teams.push({\r\n                    team: v,\r\n                    selected: observable.box(teamTo!==undefined),\r\n                    sections: this.buildSelectableSections(sections, teamTo),\r\n                });\r\n            });\r\n        }\r\n        if (hasAllTeams === true && tos.length === 1) {\r\n            let selectableTeam0 = teams[0];\r\n            let hasSection = false;\r\n            for (let selectableSection of selectableTeam0.sections) {\r\n                if (selectableSection.selected.get() === true) {\r\n                    hasSection = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (hasSection === false) {\r\n                selectableTeam0.selected.set(false);\r\n                selectableTeam0.sections = [];\r\n            }\r\n        }\r\n        return teams;\r\n    }\r\n\r\n    private buildSelectableSections(sections:Section[], tos: To[]):SelectableSection[] {\r\n        let selectableSections:SelectableSection[] = [];\r\n        for (let section of sections) {\r\n            selectableSections.push({\r\n                section: section,\r\n                selected: observable.box(tos && tos.find(v => v.section && section.id === v.section.id) !== undefined),\r\n            });\r\n        }\r\n        return selectableSections;\r\n    }\r\n\r\n    private renderState(stateTo:StateTo) {\r\n        let {name, caption, tos, tosText, configable} = stateTo;\r\n        let content;\r\n        if (configable === true) {\r\n            let right = <FA className=\"text-muted align-self-center\" name=\"chevron-right\" />;\r\n            let onClick = () => this.stateClick(stateTo);\r\n            let tosView = <this.stateTosView tosText={tosText} />;\r\n            content = <>\r\n                <LMR className=\"bg-white py-1 px-2 cursor-pointer\" right={right} onClick={onClick}>\r\n                    {caption}\r\n                </LMR>\r\n                {tosView}\r\n            </>\r\n        }\r\n        else {\r\n            content = <div className=\"bg-white py-1 px-2\">\r\n                {caption}\r\n            </div>;\r\n        }\r\n        return <div key={name} className=\"border border-light rounded mx-1 my-3\">\r\n            {content}\r\n        </div>\r\n    }\r\n\r\n    private stateTosView = observer(({tosText}:{tosText: IObservableValue<string[]>}) => {\r\n        let tos = tosText.get();\r\n        return <div className=\"bg-light py-1 px-2\">{\r\n            tos === undefined || tos.length === 0? <Muted>[无岗位]</Muted> :\r\n            tos.map((v,index) => {\r\n                return <span\r\n                    key={v}\r\n                    className=\"d-inline-block border bg-white rounded mr-2 my-1 py-1 px-2\">\r\n                    {v}\r\n                </span>\r\n            })\r\n        }\r\n        </div>\r\n    });\r\n\r\n    private tosTexts(tos: To[]):string[] {\r\n        return tos && tos.map((v,index) => {\r\n            let {post, team, section} = v;\r\n            let content:string = post.title;\r\n            if (team !== undefined && team.id > 0) content += ' @ ' + team.name;\r\n            if (section !== undefined) {\r\n                if (team === undefined || team.id === 0) content += ' @ * ';\r\n                content += ' / ' + section.name;\r\n            }\r\n            return content;\r\n        });\r\n    }\r\n\r\n    async open({entity, opTos}:{entity:Entity, opTos:{[op:string]:To[]}}) {\r\n        this.sheet = entity;\r\n        let {name, states} = entity;\r\n        if (states === undefined) {\r\n            let tos = opTos['$'];\r\n            this.states = [{\r\n                name: '$',\r\n                caption: '允许岗位',\r\n                configable: true,\r\n                tos: tos,\r\n                tosText: observable.box<string[]>(this.tosTexts(tos)),\r\n            }];\r\n            this.openPageElement(<Page header={name + ' - 岗位'}>\r\n                {this.states.map(v => this.renderState(v))}\r\n            </Page>);\r\n            return;\r\n        }\r\n\r\n        this.states = states.map(v => {\r\n            let prefix = v.substr(0, 1);\r\n            let caption: string | JSX.Element;\r\n            let configable: boolean;\r\n            let tos;\r\n            switch (prefix) {\r\n                case '<': caption = <>{v.substr(1)} &nbsp; <Muted>回复</Muted></>; configable = false; break;\r\n                case '#': caption = <>{v.substr(1)} &nbsp; <Muted>返初</Muted></>; configable = false; break;\r\n                case '$': \r\n                    caption = '[新开单]'; \r\n                    configable = true; \r\n                    tos = opTos[v];\r\n                    break;\r\n                default:\r\n                    caption = v;\r\n                    configable = true; \r\n                    tos = opTos[v];\r\n                    break;\r\n            }\r\n            return {\r\n                name: v,\r\n                caption: caption,\r\n                configable: configable,\r\n                tos: tos,\r\n                tosText: observable.box<string[]>(this.tosTexts(tos)),\r\n            };\r\n        });\r\n        this.openPageElement(<Page header={'单据状态对应岗位 - ' + name} >\r\n            {this.states.map(v => this.renderState(v))}\r\n        </Page>);\r\n    }\r\n\r\n    private async saveOps(stateTo: StateTo) {\r\n        let stateToName = stateTo.name;\r\n        let tos:To[] = [];\r\n        let toArr:{post:number, team:number, section:number}[] = [];\r\n        for (let sp of this.selectablePosts) {\r\n            if (sp.selected.get() === false) continue;\r\n            let postId = sp.post.id;\r\n            let teamCount = 0;\r\n            for (let st of sp.teams) {\r\n                if (st.selected.get() === false) continue;\r\n                let teamId = st.team.id;\r\n                ++teamCount;\r\n                let sectionCount = 0;\r\n                for (let ss of st.sections) {\r\n                    if (ss.selected.get() === false) continue;\r\n                    let sectionId = ss.section.id;\r\n                    ++sectionCount;\r\n                    toArr.push({\r\n                        post: postId,\r\n                        team: teamId,\r\n                        section: sectionId,\r\n                    });\r\n                    tos.push({\r\n                        post: sp.post,\r\n                        team: st.team,\r\n                        section: ss.section,\r\n                    });\r\n                }\r\n                if (sectionCount === 0) {\r\n                    toArr.push({\r\n                        post: postId,\r\n                        team: teamId,\r\n                        section: 0,\r\n                    });\r\n                    tos.push({\r\n                        post: sp.post,\r\n                        team: st.team,\r\n                        section: undefined,\r\n                    });\r\n                }\r\n            }\r\n            if (teamCount === 0) {\r\n                toArr.push({\r\n                    post: postId,\r\n                    team: 0,\r\n                    section: 0,\r\n                });\r\n                tos.push({\r\n                    post: sp.post,\r\n                    team: undefined,\r\n                    section: undefined,\r\n                });\r\n            }\r\n        }\r\n        await this.controller.saveSheetStatePosts(this.sheet, stateToName, toArr);\r\n        let state = this.states.find(v => v.name === stateToName);\r\n        state.tos = tos;\r\n        let tosTexts = this.tosTexts(tos);\r\n        state.tosText.set(tosTexts);\r\n        this.closePage();\r\n    }\r\n\r\n    private organizationRow = (item: Organization, index:number) => {\r\n        let {id, name} = item;\r\n        return <div>id:{id} name:{name}</div>;\r\n    }\r\n    private teamRow = (item: SelectableTeam, index:number) => {\r\n        return <this.observableTeamRow {...item} />;\r\n    }\r\n    private sectionRow = (item: SelectableSection, index:number) => {\r\n        return <this.observableSectionRow {...item} />;\r\n    }\r\n    private postRow = (item:SelectablePost, index:number) => {\r\n        return <this.observablePostRow {...item} />;\r\n    };\r\n    private stateView: React.SFC<StateTo> = (state:StateTo) => {\r\n        let {caption} = state;\r\n        /*\r\n        switch (state.name) {\r\n            case '-':  stateCaption = '允许岗位'; break;\r\n            case '$':  stateCaption = '[新开单]'; break;\r\n            default: stateCaption = state.name; break;\r\n        }\r\n        */\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={async ()=>await this.saveOps(state)}>保存</button>\r\n        return <Page header={`${this.sheet.name} - ${caption}`}\r\n            back=\"close\"\r\n            right={right}>\r\n            <div className=\"mx-3 my-2\">\r\n                <Muted>设置单据状态跟岗位的对应关系</Muted>\r\n            </div>\r\n            <List className=\"my-2\" \r\n                items={this.selectablePosts} \r\n                item={{render: this.postRow}} />\r\n        </Page>\r\n    }\r\n    /*\r\n    <List className=\"my-2\" header=\"Organization\" items={organizations} item={{render: this.organizationRow}} />\r\n    <List className=\"my-2\" header=\"Team\" items={teams} item={{render: this.teamRow}} />\r\n    <List className=\"my-2\" header=\"Section\" items={sections} item={{render: this.sectionRow}} />\r\n    */\r\n\r\n    private onPostSelectChanged(item:SelectablePost, checked:boolean) {\r\n        this.sheetOpsChanged = true;\r\n        let {post, selected} = item;\r\n        if (checked === true) {\r\n            let sections:Section[] = [];\r\n            let {organization} = post;\r\n            if (organization !== undefined && organization.teams !== undefined) {\r\n                for (let team of post.organization.teams) {\r\n                    if (team.sections !== undefined) sections.push(...team.sections);\r\n                }\r\n            }\r\n            item.teams.push({\r\n                team: {\r\n                    id: 0,\r\n                    name: '* 所有部门',\r\n                    no: undefined,\r\n                    sections: sections,\r\n                    organizations: undefined,\r\n                }, \r\n                selected: observable.box(false), \r\n                sections:[]\r\n            });\r\n            if (organization !== undefined && organization.teams !== undefined) {\r\n                post.organization.teams.forEach(v => {\r\n                    item.teams.push({\r\n                        team: v,\r\n                        selected: observable.box(false),\r\n                        sections: []\r\n                    });\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            item.teams.splice(0);\r\n        }\r\n        selected.set(checked);\r\n    }\r\n\r\n    private onTeamSelectChanged(item:SelectableTeam, checked:boolean) {\r\n        this.sheetOpsChanged = true;\r\n        let {team, selected} = item;\r\n        if (checked === true) {\r\n            //item.sections.push({section: undefined, selected: observable.box(false)});\r\n            team.sections.forEach(v => {\r\n                item.sections.push({\r\n                    section: v,\r\n                    selected: observable.box(false)\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            item.sections.splice(0);\r\n        }\r\n        selected.set(checked);\r\n    }\r\n\r\n    private onSectionSelectChanged(item:SelectableSection, checked:boolean) {\r\n        this.sheetOpsChanged = true;\r\n        let {section, selected} = item;\r\n        selected.set(checked);\r\n    }\r\n\r\n    private observablePostRow = observer((item:SelectablePost) => {\r\n        let {post, selected, teams} = item;\r\n        let {title} = post;\r\n        let teamsList;\r\n        let defaultSelected = selected.get();\r\n        if (defaultSelected === true) {\r\n            teamsList = <List className=\"ml-4 va-list-top-border\" items={teams} item={{render:this.teamRow}} />\r\n        }\r\n        return <div className=\"flex-column\">\r\n            <label className=\"px-3 py-2 w-100 mb-0\">\r\n                <input className=\"mr-3 align-middle\"\r\n                    type=\"checkbox\" \r\n                    defaultChecked={defaultSelected}\r\n                    onChange={(evt)=>this.onPostSelectChanged(item, evt.target.checked)} />\r\n                <Muted>岗位</Muted> &nbsp; {title}\r\n            </label>\r\n            {teamsList}\r\n        </div>;\r\n    });\r\n\r\n    private observableTeamRow = observer((item:SelectableTeam) => {\r\n        let {team, selected, sections} = item;\r\n        let {name} = team;\r\n        let teamsList;\r\n        let defaultSelected = selected.get();\r\n        if (defaultSelected === true && sections.length > 0) {\r\n            teamsList = <List className=\"ml-4 va-list-top-border\" items={sections} item={{render:this.sectionRow}} />\r\n        }\r\n        return <div className=\"flex-column\">\r\n            <label className=\"px-3 py-2 w-100 mb-0\">\r\n                <input className=\"mr-3 align-middle\"\r\n                    type=\"checkbox\" \r\n                    defaultChecked={defaultSelected}\r\n                    onChange={(evt)=>this.onTeamSelectChanged(item, evt.target.checked)} />\r\n                <Muted>部门</Muted> &nbsp; {name}\r\n            </label>\r\n            {teamsList}\r\n        </div>;\r\n    });\r\n\r\n    private observableSectionRow = observer((item:SelectableSection) => {\r\n        let {section, selected} = item;\r\n        let {name} = section;\r\n        let defaultSelected = selected.get();\r\n        return <div className=\"flex-column\">\r\n            <label className=\"px-3 py-2 w-100 mb-0\">\r\n                <input className=\"mr-3 align-middle\"\r\n                    type=\"checkbox\" \r\n                    defaultChecked={defaultSelected}\r\n                    onChange={(evt)=>this.onSectionSelectChanged(item, evt.target.checked)} />\r\n                <Muted>大部</Muted> &nbsp; {name}\r\n            </label>\r\n        </div>;\r\n    });\r\n}\r\n ","import * as React from 'react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { COpBinding } from \"./cOpBinding\";\r\nimport { Entity, EntityBlock, Uq } from './model';\r\nimport { entityIcons, CAction, CQuery } from 'tonva-react-uq';\r\nimport { List, Muted, LMR, FA } from 'tonva-react-form';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\n\r\ninterface Checked {\r\n    def: boolean;\r\n    checked: boolean;\r\n}\r\n\r\nexport class VAllPosts extends VPage<COpBinding> {\r\n    private uq: Uq;\r\n    private blocks:EntityBlock[];\r\n    private checked:{[entity:string]:Checked} = {};\r\n\r\n    @observable private isChanged:boolean = false;\r\n    async open(uq: Uq) {\r\n        this.uq = uq;\r\n        let {name, tuids, actions, maps, books, queries, histories, pendings, sheets} = this.uq;\r\n        this.blocks = [\r\n            {items: tuids, type: 'tuid'},\r\n            {items: sheets, type: 'sheet'},\r\n            {items: actions, type: 'action'},\r\n            {items: maps, type: 'map'},\r\n            {items: books, type: 'book'},\r\n            {items: queries, type: 'query'},\r\n            {items: histories, type: 'history'},\r\n            {items: pendings, type: 'pending'},\r\n        ];\r\n        let getEntityOpForAll = this.controller.cUq.cFromName('query', 'getEntityOpForAll') as CQuery;\r\n        let entityOpForAllResult = await getEntityOpForAll.entity.query({uq: this.uq.id});\r\n        let entityOpForAll:{[entity:string]:boolean} = {};\r\n        for (let eaa of entityOpForAllResult.ret) {\r\n            entityOpForAll[eaa.entity] = true;\r\n        }\r\n        for (let b of this.blocks) {\r\n            let {items} = b;\r\n            if (items === undefined) continue;\r\n            for (let item of items) {\r\n                let {name} = item;\r\n                let checked = (entityOpForAll[name] === true);\r\n                this.checked[name] = {\r\n                    def: checked,\r\n                    checked: checked,\r\n                };\r\n            }\r\n        }\r\n        this.openPage(this.pageRender);\r\n        this.regConfirmClose(async ():Promise<boolean> => {\r\n            if (this.isChanged === false) return true;\r\n            return confirm('未保存\\n真的不保存吗？');\r\n        });\r\n    }\r\n\r\n    private onCheckChanged = (entity:Entity, checked: boolean) => {\r\n        this.checked[entity.name].checked = checked;\r\n        let isChanged:boolean = false;\r\n        for (let i in this.checked) {\r\n            let {def, checked} = this.checked[i];\r\n            if (def !== checked) {\r\n                isChanged = true;\r\n                break;\r\n            }\r\n        }\r\n        this.isChanged = isChanged;\r\n    }\r\n\r\n    private saveChange = async () => {\r\n        let entities:{entity:string}[] = [];\r\n        for (let i in this.checked) {\r\n            if (this.checked[i].checked !== true) continue;\r\n            entities.push({entity: i});\r\n        }\r\n        let saveEntityOpForAll = this.controller.cUq.cFromName('action', 'saveEntityOpForAll') as CAction;\r\n        let ret = await saveEntityOpForAll.entity.submit({\r\n            uq: this.uq.id,\r\n            entities: entities,\r\n        });\r\n        this.ceasePage();\r\n        this.openPageElement(<Page header=\"所有岗位可操作\" back=\"close\">\r\n            <div className=\"p-3\">\r\n                <FA name=\"check-circle\" className=\"text-success\" /> &nbsp;\r\n                已保存\r\n            </div>\r\n        </Page>);\r\n    }\r\n\r\n    private entityRender(entity:Entity, icon:any) {\r\n        let {name} = entity;\r\n        let right = <input className=\"mr-3 align-middle\"\r\n            type=\"checkbox\" \r\n            defaultChecked={this.checked[name].def}\r\n            onChange={(evt)=>this.onCheckChanged(entity, evt.target.checked)}/>\r\n\r\n        return <LMR className=\"px-3 py-2 align-items-center\"\r\n            right={right}>\r\n            {icon} &nbsp; {name}\r\n        </LMR>;\r\n    }\r\n\r\n    private pageRender = observer(() => {\r\n        /*\r\n        let {name, tuids, actions, maps, books, queries, histories, pendings, sheets} = this.uq;\r\n        let blocks:EntityBlock[] = [\r\n            {items: tuids, type: 'tuid'},\r\n            {items: sheets, type: 'sheet'},\r\n            {items: actions, type: 'action'},\r\n            {items: maps, type: 'map'},\r\n            {items: books, type: 'book'},\r\n            {items: queries, type: 'query'},\r\n            {items: histories, type: 'history'},\r\n            {items: pendings, type: 'pending'},\r\n        ];*/\r\n        let buttonSave = this.isChanged===true? <button className=\"btn btn-sm btn-success\" onClick={this.saveChange}>保存</button> : null;\r\n        return <Page header={'所有岗位可操作'} right={buttonSave}>\r\n            <div className=\"text-muted p-3 small\">\r\n                <div style={{lineHeight:'1.8', fontWeight:'bold'}}>说明</div>\r\n                <ol className=\"pl-3\" style={{listStyleType: '1', lineHeight: '1.8'}}>\r\n                    <li >\r\n                        有些操作，默认允许所有用户可操作，可以在这里设置。\r\n                    </li>\r\n                    <li>\r\n                        比如，用户下订单。任何客户，登录进系统，都可以下单。\r\n                    </li>\r\n                    <li>\r\n                        如果每个用户都需要设置，用户会丢失，管理人员会繁琐。\r\n                    </li>\r\n                </ol>\r\n            </div>\r\n            {this.blocks.map(block => {\r\n                let {items, type} = block;\r\n                let icon = entityIcons[type];\r\n                return items && items.length>0 &&\r\n                    <List key={type}\r\n                        className=\"mt-3\"\r\n                        header={<Muted className=\"px-3 pt-1 bg-light w-100\">{this.res[type]||type}</Muted>} \r\n                        items={items} \r\n                        item={{\r\n                            render:(item:any, index:number)=>this.entityRender(item, icon), \r\n                            onClick: undefined\r\n                        }} />;\r\n            })}\r\n        </Page>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, nav } from \"tonva-tools\";\r\nimport { COpBinding } from \"./cOpBinding\";\r\nimport { Uq } from './model';\r\nimport { List, FA, SearchBox } from 'tonva-react-form';\r\nimport { observable } from 'mobx';\r\nimport { CMap, CQuery, QueryPageItems, Query, Tuid, CTuid } from 'tonva-react-uq';\r\n\r\nexport class PageUsers extends QueryPageItems {\r\n    protected setPageStart(item:any) {\r\n        this.pageStart = item === undefined? 0 : item.id;\r\n    }\r\n}\r\n\r\nexport class VFullFunction extends VPage<COpBinding> {\r\n    private uq: Uq;\r\n    @observable private users: any[] = [];\r\n    private entityOpUserFully:CMap;\r\n    private pageUsers: PageUsers;\r\n    private tuidUser: CTuid<Tuid>;\r\n    async open(uq: Uq) {\r\n        this.uq = uq;\r\n        this.entityOpUserFully = this.controller.cUq.cFromName('map', 'entityOpUserFully') as CMap;\r\n        this.tuidUser = this.controller.cUq.cFromName('tuid', 'user') as CTuid<Tuid>;\r\n        await this.entityOpUserFully.entity.loadSchema();\r\n        let all = await this.entityOpUserFully.entity.queries.all.query({_uq: this.uq.id});\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={this.addClick}><FA name=\"plus\" /></button>;\r\n        this.users.push(...all.ret);\r\n        this.openPageElement(<Page header={'全功能用户'} right={right}>\r\n            <List items={this.users} item={{render:this.renderUser, onClick: this.onStopFully}} />\r\n        </Page>);\r\n        return;\r\n    }\r\n\r\n    private onStopFully = async (item:any) => {\r\n        this.openPageElement(<Page header={'停止全功能'}>\r\n            <div className=\"p-3\">\r\n                <div><b className=\"text-danger h4\">{item.user.content()}</b> 停止全功能用户。<br/>请确认。</div>\r\n                <div className=\"p-3\">\r\n                    <button className=\"btn btn-success\" onClick={()=>this.onSumitStopFully(item)}>停止全功能</button>\r\n                    <button className=\"ml-3 btn btn-outline-danger\" onClick={this.onCancelStop}>不停</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n    }\r\n\r\n    private onSumitStopFully = async (item:any) => {\r\n        let data = {_uq: this.uq.id, arr1:[{_user: item.user.id}]};\r\n        await this.entityOpUserFully.entity.actions.del.submit(data);\r\n        let index = this.users.findIndex(v => v === item);\r\n        if (index >= 0) this.users.splice(index, 1);\r\n        this.closePage();\r\n    }\r\n\r\n    private onCancelStop = () => this.closePage();\r\n\r\n    private addClick = async () => {\r\n        let user = await this.controller.callSearchUser(this.uq);\r\n        this.onUserSelected(user);\r\n        /*\r\n        let searchUser = this.controller.cUq.cFromName('query', 'SearchUser') as CQuery;\r\n        this.pageUsers = new PageUsers(searchUser.entity);\r\n        this.openPage(this.usersView);\r\n        */\r\n    }\r\n\r\n    private renderUser = (item:any, index:number) => {\r\n        return <div className=\"px-3 py-2\">{item.user.content()}</div>;\r\n    }\r\n\r\n    private onSearch = async (key:string) => {\r\n        await this.pageUsers.first({key: key});\r\n    }\r\n    private onSetFully = async (item:any) => {\r\n        await this.entityOpUserFully.entity.actions.add.submit({_uq: this.uq.id, arr1:[{_user: item.id}]});\r\n        this.tuidUser.entity.useId(item.id);\r\n        let row = {\r\n            uq: this.uq.id,\r\n            user: this.tuidUser.entity.boxId(item.id),\r\n        }\r\n        this.users.push(row);\r\n        this.closePage(2);\r\n    }\r\n    private onCancelFully = () => {this.backPage()}\r\n    private onUserSelected = (item:any) => {\r\n        this.openPageElement(<Page header=\"确认\">\r\n            <div className=\"p-3\">\r\n                <div><b className=\"text-danger h4\">{item.name}</b> 将设置为全功能用户。只有系统管理员或者测试人员才需要全功能，可以操作所有数据。<br/>请确认。</div>\r\n                <div className=\"p-3\">\r\n                    <button className=\"btn btn-success\" onClick={()=>this.onSetFully(item)}>设置为全功能用户</button>\r\n                    <button className=\"ml-3 btn btn-outline-danger\" onClick={this.onCancelFully}>取消</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n    }\r\n    private renderSelectUser = (item:any, index:number) => {\r\n        return <div className=\"px-3 py-2\">{JSON.stringify(item)}</div>;\r\n    }\r\n    private usersView = () => {\r\n        let search = <SearchBox className=\"w-100\" onSearch={this.onSearch} placeholder=\"选择用户\" />;\r\n        return <Page header={search}>            \r\n            <List\r\n                before=\"搜索用户名\"\r\n                items={this.pageUsers} \r\n                item={{render: this.renderSelectUser, onClick:this.onUserSelected}} />\r\n        </Page>;\r\n    };\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { VPage, Page, PageItems } from \"tonva-tools\";\r\nimport { SearchBox, List } from 'tonva-react-form';\r\nimport { centerApi } from 'tonva-react-uq';\r\nimport { COpBinding } from \"./cOpBinding\";\r\n\r\nexport class VSearchUser extends VPage<COpBinding> {\r\n    private unit:number;\r\n    private pageUsers = new PageUsers();\r\n\r\n    private onUserClick = (item:any) => {\r\n        this.closePage();\r\n        this.returnCall(item);\r\n    }\r\n    private onSearch = async (key:string) => {\r\n        await this.pageUsers.first({key: key, unit:this.unit, role:undefined});\r\n    }\r\n    private renderSelectUser = (item:any, index:number) => {\r\n        return <div className=\"px-3 py-2\">{JSON.stringify(item)}</div>;\r\n    }\r\n    async open(unit: number) {\r\n        this.unit = unit;\r\n        let search = <SearchBox className=\"w-100\" onSearch={this.onSearch} placeholder=\"选择用户\" />;\r\n        this.openPageElement(<Page header={search}>\r\n            <List\r\n                before=\"搜索用户名\"\r\n                items={this.pageUsers}\r\n                item={{render: this.renderSelectUser, onClick:this.onUserClick}} />\r\n        </Page>);\r\n    }\r\n}\r\n\r\nclass PageUsers extends PageItems<any> {\r\n    protected async load(param:{key:string, unit:number, role:number}, pageStart: any, pageSize: number): Promise<any[]> {\r\n        let {unit, role, key} = param;\r\n        let ret = await centerApi.get('unit/members', {key: key, unit:unit, role:role, pageStart:pageStart, pageSize:pageSize});\r\n        return ret;\r\n    }\r\n    protected setPageStart(item: any): any {\r\n        if (item === undefined)\r\n            this.pageStart = 0;\r\n        else\r\n            this.pageStart = item.id;\r\n    }\r\n}","import React from \"react\";\r\nimport { Page, Controller, meInFrame, VPage } from \"tonva-tools\";\r\nimport { List, Muted, LMR, FA } from \"tonva-react-form\";\r\nimport { VOpBinding } from './vOpBinding';\r\nimport { CAction, CQuery, centerApi, entityIcons, ControllerUq } from \"tonva-react-uq\";\r\nimport { Organization, Team, Section, Post, Sheet, App, Uq, To, Entity, EntityBlock } from \"./model\";\r\nimport { VAllPosts } from \"./vAllPosts\";\r\nimport { VFullFunction } from \"./vFullFunction\";\r\nimport { VSearchUser } from \"./vSearchUser\";\r\n\r\n// 单据跟操作的绑定设置\r\nexport class COpBinding extends ControllerUq {\r\n    /*\r\n    constructor(unitxUq: CUq, res:any) {\r\n        super({});\r\n        this.unitxUq = unitxUq;\r\n    }*/\r\n\r\n    icon = <FA name=\"map-o\" className=\"text-success\" fixWidth={true} />;\r\n    label = '岗位权限 - UQ对象';\r\n\r\n    //private unitxUq: CUq;\r\n    private apps: App[];\r\n    organizations: Organization[];\r\n    teams: Team[];\r\n    sections: Section[];\r\n    posts: Post[];\r\n    postDict: {[id:number]:Post};\r\n    teamDict: {[id:number]:Team};\r\n    organizationDict: {[id:number]:Organization};\r\n    sectionDict: {[id:number]:Section};\r\n\r\n    protected async internalStart():Promise<void> {\r\n        await this.buildPosts();\r\n        await this.buildAppsUqs();\r\n        this.openPage(<this.appsView />);\r\n    }\r\n\r\n    private async buildAppsUqs() {\r\n        let unit = meInFrame.unit;\r\n        let ret:any[][] = await centerApi.get('/unit/apps-uqs', {unit: unit});\r\n        this.apps = ret[0];\r\n        let uqs: Uq[] = ret[1];\r\n\r\n        for (let app of this.apps) {\r\n            app.uqs = [];\r\n        }\r\n        for (let uq of uqs) {\r\n            let app = this.apps.find(v => v.id === uq.app);\r\n            if (app === undefined) continue;\r\n            app.uqs.push(uq);\r\n            this.setUqEntities(uq);\r\n        }\r\n    }\r\n\r\n    private async buildPosts() {\r\n        let queryAllTeams = this.cUq.cFromName('query', 'allteams') as CQuery;\r\n        let ret:any[][] = await queryAllTeams.entity.query(undefined);\r\n        this.teams = ret['teams'];\r\n        this.organizations = ret['organization'];\r\n        this.posts = ret['organizationpost'];\r\n        this.sections = ret['sections'];\r\n        this.postDict = {};\r\n        this.teamDict = {};\r\n        this.organizationDict = {};\r\n        this.sectionDict = {};\r\n        for (let organization of this.organizations) {\r\n            organization.posts = [];\r\n            organization.teams = [];\r\n            this.organizationDict[organization.id] = organization;\r\n        }\r\n        for (let team of this.teams) {\r\n            team.organizations = [];\r\n            team.sections = [];\r\n            this.teamDict[team.id] = team;\r\n        }\r\n        for (let section of this.sections) {\r\n            section.teams = [];\r\n            this.sectionDict[section.id] = section;\r\n        }\r\n        for (let post of this.posts) {\r\n            this.postDict[post.id] = post;\r\n            let organization = this.organizationDict[post.owner];\r\n            if (organization === undefined) {\r\n                continue;\r\n            }\r\n            post.organization = organization;\r\n            organization.posts.push(post);\r\n        }\r\n        // teamOrganization\r\n        for (let teamOrganization of ret['teamorganization']) {\r\n            let {team:tm, organization:og} = teamOrganization;\r\n            let team = this.teamDict[tm];\r\n            let organization = this.organizationDict[og];\r\n            team.organizations.push(organization);\r\n            organization.teams.push(team);\r\n        }\r\n        // sectionTeam\r\n        for (let sectionTeam of ret['sectionteam']) {\r\n            let {section:sec, team:tm} = sectionTeam;\r\n            let section = this.sectionDict[sec];\r\n            let team = this.teamDict[tm];\r\n            section.teams.push(team);\r\n            team.sections.push(section);\r\n        }\r\n    }\r\n\r\n    private setUqEntities(uq:Uq) {\r\n        let entities = uq.entities;\r\n        if (entities === null) return;\r\n        let lns = entities.split('\\n');\r\n        let len = lns.length;\r\n        let p:number;\r\n        for (let i=0; i<len;) {\r\n            switch (lns[i]) {\r\n                case 'tuid': p = this.setEntities(uq.tuids = [], lns, i, uq); break;\r\n                case 'map': p = this.setEntities(uq.maps = [], lns, i, uq); break;\r\n                case 'book': p = this.setEntities(uq.books = [], lns, i, uq); break;\r\n                case 'history': p = this.setEntities(uq.histories = [], lns, i, uq); break;\r\n                case 'pending': p = this.setEntities(uq.pendings = [], lns, i, uq); break;\r\n                case 'query': p = this.setEntities(uq.queries = [], lns, i, uq); break;\r\n                case 'action': p = this.setEntities(uq.actions = [], lns, i, uq); break;\r\n                case 'sheet': p = this.setSheets(uq.sheets = [], lns, i, uq); break;\r\n                default:\r\n                    alert('unknown entity type: ' + lns[i]);\r\n                    return;\r\n            }\r\n            i = p;\r\n        }\r\n    }\r\n\r\n    private setEntities(entities:Entity[], lines:string[], p:number, uq:Uq):number {\r\n        let len = lines.length;\r\n        let i = p+1;\r\n        for (; i<len; i++) {\r\n            let ln = lines[i];\r\n            if (ln.length > 0) {\r\n                let name = ln;\r\n                entities.push({\r\n                    uq: uq,\r\n                    name: name,\r\n                    states: undefined\r\n                });\r\n            }\r\n            else return i+1;\r\n        }\r\n        return i;\r\n    }\r\n\r\n    private setSheets(sheets:Sheet[], lines:string[], p:number, uq:Uq):number {\r\n        let len = lines.length;\r\n        let i = p+1;\r\n        for (; i<len; i++) {\r\n            let ln = lines[i];\r\n            if (ln.length > 0) {\r\n                let parts:string[] = ln.split('\\t');\r\n                let name = parts[0];\r\n                parts[0] = '$';\r\n                let sheet:Sheet = {\r\n                    uq: uq,\r\n                    name: name,\r\n                    states: parts,\r\n                }\r\n                sheets.push(sheet);\r\n            }\r\n            else return i+1;\r\n        }\r\n        return i;\r\n    }\r\n\r\n    async saveSheetStatePosts(sheet:Sheet, stateName:string, toArr:{post:number, team:number, section:number}[]) {\r\n        let actionSaveEntityOpPost = this.cUq.cFromName('action', 'saveentityoppost') as CAction;\r\n        let {uq, name} = sheet;\r\n        await actionSaveEntityOpPost.submit({\r\n            uq: uq.id,\r\n            entityName: name,\r\n            opName: stateName,\r\n            posts: toArr\r\n        });\r\n    }\r\n\r\n    private appRender = (app:App, index:number) => {\r\n        let {name, discription} = app;\r\n        return <LMR className=\"px-3 py-2\" right={discription && <Muted>{discription}</Muted>}>\r\n            {name}\r\n        </LMR>\r\n    }\r\n\r\n    private appClick = (app:App) => {\r\n        this.openPage(<this.appView {...app} />)\r\n    }\r\n\r\n    async callSearchUser(uq:Uq): Promise<any> {\r\n        let user = await this.vCall(VSearchUser, meInFrame.unit);\r\n        return user;\r\n    }\r\n\r\n    private appsView = () => <Page header={this.label}>\r\n        <div className=\"text-muted p-3 small\">\r\n            <div style={{lineHeight:'1.8', fontWeight:'bold'}}>说明</div>\r\n            <ol className=\"pl-3\" style={{listStyleType: '1', lineHeight: '1.8'}}>\r\n                <li >\r\n                    下面是全部启用的APP。请选择\r\n                </li>\r\n                <li>\r\n                    每个APP会使用一个以上的UQ。UQ里面定义了Tuid，Action，Map和Sheet等对象。\r\n                </li>\r\n                <li>\r\n                    设置对象跟岗位的关联\r\n                </li>\r\n            </ol>\r\n        </div>\r\n        <List items={this.apps} item={{render:this.appRender, onClick:this.appClick}} />\r\n    </Page>;\r\n\r\n    private entityRender(entity:Entity, icon:any) {\r\n        let {name} = entity;\r\n        return <div className=\"px-3 py-2 align-items-center\">{icon} &nbsp; {name}</div>\r\n    }\r\n    private sheetRender(sheet:Sheet, icon:any) {\r\n        let {name, states} = sheet;\r\n        return <div className=\"px-3 py-2 align-items-center\">\r\n            {icon} &nbsp; {name} <Muted> &nbsp; {sheet.states.join(', ')}</Muted>\r\n        </div>\r\n    }\r\n    private entityClick = async (block:EntityBlock, entity:Entity) => {\r\n        //alert('entity click');\r\n        let entityPosts = this.cUq.cFromName('query', 'getEntityPost') as CQuery;\r\n        let ret = await entityPosts.entity.query({uq: entity.uq.id, entityName: entity.name});\r\n        let opTos:{[op:string]:To[]} = {};\r\n        for (let row of ret.ret) {\r\n            let {op, post, team, section} = row;\r\n            let opTo = opTos[op];\r\n            if (opTo === undefined) opTos[op] = opTo = [];\r\n            opTo.push({\r\n                post: this.postDict[post],\r\n                team: this.teamDict[team],\r\n                section: this.sectionDict[section],\r\n            });\r\n        }\r\n        this.openVPage(VOpBinding, {entity:entity, opTos:opTos});\r\n    }\r\n    private sheetClick = async (block:EntityBlock, sheet:Sheet) => {\r\n        this.sheetClickOld(sheet);\r\n    }\r\n\r\n    private sheetClickOld = async (sheet:Sheet) => {\r\n        let entityPosts = this.cUq.cFromName('query', 'getEntityPost') as CQuery;\r\n        let ret = await entityPosts.entity.query({uq: sheet.uq.id, entityName: sheet.name});\r\n        let opTos:{[op:string]:To[]} = {};\r\n        for (let row of ret.ret) {\r\n            let {op, post, team, section} = row;\r\n            let opTo = opTos[op];\r\n            if (opTo === undefined) opTos[op] = opTo = [];\r\n            opTo.push({\r\n                post: this.postDict[post],\r\n                team: this.teamDict[team],\r\n                section: this.sectionDict[section],\r\n            });\r\n        }\r\n        this.openVPage(VOpBinding, {entity:sheet, opTos:opTos});\r\n    }\r\n\r\n    private renderSetting = (item:any, index:number) => {\r\n        let {icon, color, text} = item;\r\n        return <div className=\"px-3 py-2 align-items-center\">\r\n            {<FA name={icon} fixWidth={true} className={color} />} &nbsp; {text}\r\n        </div>\r\n    }\r\n\r\n    private settingClick = (item:any, uq:Uq) => {\r\n        let {name} = item;\r\n        let V: new (coordinator) => VPage<COpBinding>;\r\n        switch (name) {\r\n            default: return;\r\n            case 'entity-by-all-post': V = VAllPosts; break;\r\n            case 'user-all-entities': V = VFullFunction; break;\r\n        }\r\n        this.openVPage(V, uq);\r\n    }\r\n    \r\n    private uqRender = (uq:Uq, index:number) => {\r\n        let {name, tuids, actions, maps, books, queries, histories, pendings, sheets} = uq;\r\n        let nameRender = this.entityRender;\r\n        let blocks:EntityBlock[] = [\r\n            {items: tuids, type: 'tuid', itemClick: this.entityClick},\r\n            {items: sheets, type: 'sheet', itemClick: this.sheetClick, itemRender: this.sheetRender},\r\n            {items: actions, type: 'action', itemClick: this.entityClick},\r\n            {items: maps, type: 'map', itemClick: this.entityClick},\r\n            {items: books, type: 'book', itemClick: this.entityClick},\r\n            {items: queries, type: 'query', itemClick: this.entityClick},\r\n            {items: histories, type: 'history', itemClick: this.entityClick},\r\n            {items: pendings, type: 'pending', itemClick: this.entityClick},\r\n        ];\r\n\r\n        let settings:any[] = [\r\n            {name:'entity-by-all-post', icon: 'cog', color: 'text-success', text: '所有岗位可操作'},\r\n            {name: 'user-all-entities', icon: 'cog', color: 'text-success', text: '全功能用户'}\r\n        ];\r\n\r\n        // {icon} &nbsp; {name} <Muted> &nbsp; {sheet.states.join(', ')}</Muted>\r\n        return <div key={name} className=\"my-2\">\r\n            <div className=\"px-3 font-weight-bold\">{name}</div>\r\n            <List className=\"mt-3\"\r\n                items={settings}\r\n                item={{\r\n                    key: (item:any)=>item.name, \r\n                    render: this.renderSetting,\r\n                    onClick:(item:any)=>this.settingClick(item, uq) \r\n                }}\r\n             />\r\n            {blocks.map(block => {\r\n                let {items, type, itemClick, itemRender} = block;\r\n                let icon = entityIcons[type];\r\n                return items && items.length>0 &&\r\n                    <List key={type} className=\"mt-3\"\r\n                        header={<Muted className=\"px-3 pt-1 bg-light w-100\">{this.res[type]||type}</Muted>} \r\n                        items={items} \r\n                        item={{\r\n                            key: (item:any)=>item.name, \r\n                            render:(item:any, index:number)=>(itemRender || nameRender)(item, icon), \r\n                            onClick: (item:Entity)=>itemClick(block, item)\r\n                        }} />;\r\n            })}\r\n        </div>;\r\n        /*\r\n        function headerCaption(caption:string):JSX.Element {\r\n            return <Muted className=\"px-3 pt-1 bg-light w-100\">{caption}</Muted>\r\n        }\r\n        function itemList(items:any[], type:string, itemClick:(item:any)=>void, render:((item:any, icon:any)=>JSX.Element) = nameRender) {\r\n            //let res = entitiesRes;\r\n            //let {caption, icon} = res[type];\r\n            let icon = entityIcons[type];\r\n            return items && \r\n                <List className=\"mt-3\"\r\n                    header={headerCaption(type)} \r\n                    items={items} \r\n                    item={{render:(item:any, index:number)=>render(item, icon), onClick: itemClick}} />;\r\n        }\r\n            {itemList(tuids, 'tuid', this.tuidClick)}\r\n            {itemList(sheets, 'sheet', this.sheetClickOld, this.sheetRender)}\r\n            {itemList(actions, 'action', this.actionClick)}\r\n            {itemList(maps, 'map', this.mapClick)}\r\n            {itemList(books, 'book', this.bookClick)}\r\n            {itemList(queries, 'query', this.queryClick)}\r\n            {itemList(histories, 'history', this.historyClick)}\r\n            {itemList(pendings, 'pending', this.pendingClick)}\r\n        */\r\n    }\r\n\r\n    private appView = (app:App) => <Page header={app.name + '操作权限'}>\r\n        {\r\n            app.uqs.map((v, index) => this.uqRender(v, index))\r\n        }\r\n    </Page>;\r\n\r\n    /*\r\n    private tuidClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    private mapClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    private actionClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    private bookClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    private queryClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    private historyClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    private pendingClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    */\r\n}\r\n","import * as React from 'react';\r\nimport { Page, VPage } from 'tonva-tools';\r\nimport { List, FA } from 'tonva-react-form';\r\nimport { CUq, Link, CLink, CApp } from \"tonva-react-uq\";\r\nimport ui from './ui';\r\nimport { COpBinding } from './op';\r\n\r\nexport class COrganization extends CUq {\r\n    constructor() {\r\n        super(undefined, '$$$/$unitx', 0, 0, undefined, ui);\r\n    }\r\n\r\n    label = '岗位权限';\r\n    icon = 'sitemap';\r\n    links: (CLink|string)[];\r\n\r\n    protected clearPrevPages() {\r\n        // 保留回退按钮，所以，去掉下面这行\r\n        //nav.clear();\r\n    }\r\n\r\n    protected async loadEntites() {\r\n        // 只有赋Entity权限的地方，需要取全部的Entities，其它地方默认取user access，this.entities.loadAccess()\r\n        await this.entities.loadEntities();\r\n    }\r\n\r\n    protected async internalStart() {\r\n        await this.loadSchema();\r\n        this.links= [\r\n            '',\r\n            new CLink(new COpBinding(this, this.res)),\r\n            '',\r\n            this.linkFromName('map', 'teamPerson'),\r\n            this.linkFromName('map', 'sectionTeam'),\r\n            this.linkFromName('map', 'teamOrganization'),\r\n            '',\r\n            this.linkFromName('tuid', 'person'),\r\n            this.linkFromName('tuid', 'team'),\r\n            this.linkFromName('tuid', 'section'),\r\n            this.linkFromName('tuid', 'organization'),\r\n        ];\r\n        this.openVPage(VOrganization);\r\n    }\r\n    \r\n}\r\n\r\nclass VOrganization extends VPage<COrganization> {\r\n    async open() {\r\n        this.openPage(this.appPage);\r\n    }\r\n\r\n    private renderRow = (link: Link, index:number) => {\r\n        return link.render('bg-white');\r\n    }\r\n\r\n    protected appPage = () => {\r\n        let {links, label} = this.controller;\r\n        return <Page header={label} logout={()=>{}}>\r\n            <List items={links} item={{render: this.renderRow}} />\r\n        </Page>;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {IdPick, IdPickFace, List, SearchBox} from 'tonva-react-form';\r\nimport {DevModel} from './model';\r\n\r\nexport interface IdPickProps {\r\n    caption: string;\r\n    searchPlaceHolder?: string;\r\n    candidateItems: ((params:any, key:string) => Promise<any[]>) | any[];\r\n    moreCandidates: () => Promise<void>;\r\n    row: (item:any, index:number) => JSX.Element;\r\n}\r\n\r\nexport function createIdPick(props: IdPickProps):IdPick {\r\n    return function(face: IdPickFace, params: any):Promise<void> {\r\n        return new Promise<void>((resolve, reject) => {\r\n            nav.push(<IdPickPage resolve={resolve} face={face} params={params} {...props} />);\r\n        });\r\n    }\r\n}\r\n\r\ninterface IdPickPageProps extends IdPickProps {\r\n    face: IdPickFace;\r\n    resolve: (item?: any) => void;\r\n    params: any;\r\n}\r\ninterface IdPickPageState {\r\n    items?: any[];\r\n}\r\n\r\nclass IdPickPage extends React.Component<IdPickPageProps, IdPickPageState> {\r\n    private items:any[];\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: null,\r\n        }\r\n        this.itemClick = this.itemClick.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n    }\r\n    async componentDidMount() {\r\n        let {face, candidateItems, params} = this.props;\r\n        this.setState({\r\n            items: Array.isArray(candidateItems)? candidateItems : await candidateItems(params, ''),\r\n        });\r\n    }\r\n    itemClick(item:any) {\r\n        let {resolve} = this.props;\r\n        resolve(item);\r\n        nav.pop();\r\n    }\r\n    async onSearch(key: string) {\r\n        //alert('search ' + key);\r\n        //await store.dev.searchServer.first(key)\r\n        let {candidateItems, params} = this.props;\r\n        if (typeof candidateItems === 'function') {\r\n            let ret = await candidateItems(params, key);\r\n            this.setState({items: ret});\r\n        }\r\n    }\r\n    render() {\r\n        let {caption, row, searchPlaceHolder} = this.props;\r\n        return <Page header={caption} back=\"close\">\r\n            <div className=\"container\">\r\n                <SearchBox className=\"my-2\" \r\n                    onSearch={this.onSearch} \r\n                    placeholder={searchPlaceHolder}\r\n                    maxLength={100} />\r\n            </div>\r\n            <List items={this.state.items} item={{onClick:this.itemClick, render:row}} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { AppController } from '.';\r\nimport { VPage, nav, Page, ItemSchema, UiSchema, StringSchema, BoolSchema, UiTextItem, UiTextAreaItem, UiCheckItem, Form, ButtonSchema, Context, ImageSchema, UiImageItem, IdSchema, UiIdItem } from 'tonva-tools';\r\nimport { SubmitResult, DropdownActions, TonvaForm, FormRow } from 'tonva-react-form';\r\nimport { createIdPick, IdPickProps } from 'createIdPick';\r\nimport { DevModel } from 'model';\r\nimport { store } from 'store';\r\nimport { IdPickPage, ServerSpan } from '../../tools';\r\nimport { observer } from 'mobx-react';\r\n\r\nconst ServerCaption = (item:DevModel.Server) => {\r\n    let {discription, cloud, ip} = item;\r\n    return <>{discription} {cloud} {ip}</>;\r\n}\r\nconst idPickServerProps: IdPickProps = {\r\n    caption: '选择服务器',\r\n    searchPlaceHolder: '搜索服务器',\r\n    candidateItems: async (params:any, key:string) => {\r\n        await store.dev.searchServer.first(key);\r\n        return store.dev.searchServer.items;\r\n    },\r\n    moreCandidates: async () => {\r\n        await store.dev.searchServer.more();\r\n    },\r\n    row: (item:DevModel.Server, index:number) => {\r\n        return <div className=\"px-3 py-2\"><ServerCaption {...item} /></div>;\r\n    },\r\n};\r\n\r\nconst formRows:FormRow[] = [\r\n    {\r\n        label: '名称', \r\n        field: {name: 'name', type: 'string', maxLength: 100, required: true},\r\n    },\r\n    {\r\n        label: '描述',\r\n        field: {name: 'discription', type: 'string', maxLength: 250},\r\n        face: {type: 'textarea'}\r\n    },\r\n    {\r\n        label: '图标',\r\n        field: {name: 'icon', type: 'string', maxLength: 250},\r\n    },\r\n    {\r\n        label: 'URL',\r\n        field: {name: 'url', type: 'string', maxLength: 200},\r\n    },\r\n    {\r\n        label: '服务器',\r\n        field: {name: 'server', type: 'id'},\r\n        face: {\r\n            type: 'pick-id', \r\n            initCaption: '请选择服务器', \r\n            pick: createIdPick(idPickServerProps),\r\n            fromPicked: (item:DevModel.Server)=>{\r\n                return {\r\n                    id: item.id, \r\n                    caption: <ServerCaption {...item} />,\r\n                };\r\n            },\r\n            itemFromId: (id:number)=>store.cacheServers.get(id),\r\n        },\r\n    },\r\n    {\r\n        label: '公开',\r\n        field: {name: 'public', type: 'bool', defaultValue: 1}\r\n    },\r\n];\r\n\r\nconst schema:ItemSchema[] = [\r\n    {name: 'name', type: 'string', maxLength: 100, required: true} as StringSchema,\r\n    {name: 'discription', type: 'string', maxLength: 250} as StringSchema,\r\n    {name: 'url', type: 'string', maxLength: 200} as StringSchema,\r\n    {name: 'public', type: 'boolean'} as BoolSchema,\r\n    {name: 'server', type: 'id'} as IdSchema,\r\n    {name: 'icon', type: 'image'} as ImageSchema,\r\n    {name: 'submit', type: 'submit'} as ButtonSchema,\r\n];\r\n\r\nexport abstract class EditBasePage extends VPage<AppController> {\r\n    private candidateItems = async (params:any, key:string):Promise<any[]> => {\r\n        await store.dev.searchServer.first(key);\r\n        return store.dev.searchServer.items;\r\n    }\r\n\r\n    private moreCandidates = async ():Promise<void> => {\r\n        await store.dev.searchServer.more();\r\n    }\r\n\r\n    private renderRow = (item:DevModel.Server, index:number): JSX.Element => {\r\n        return <div className=\"px-3 py-2\"><ServerCaption {...item} /></div>;\r\n    }\r\n\r\n    private pickServerId = (context:Context, name:string, value:number): Promise<number> => {\r\n        return new Promise<number>((resolve, reject) => {\r\n            nav.push(<IdPickPage \r\n                caption=\"选择服务器\" \r\n                searchPlaceHolder=\"搜索服务器\"\r\n                candidateItems={this.candidateItems}\r\n                moreCandidates={this.moreCandidates}\r\n                row={this.renderRow}\r\n                idFromItem={(item:DevModel.Server) => item.id}\r\n                resolve={resolve} params={undefined} />, \r\n                ()=> {\r\n                    reject();\r\n                });\r\n        });\r\n    }\r\n\r\n    private renderServerInput = (itemId:number): JSX.Element => {\r\n        return <ServerSpan id={itemId} />;\r\n    };\r\n\r\n    private uiSchema:UiSchema = {\r\n        items: {\r\n            name: {widget: 'text', label: '名称'} as UiTextItem,\r\n            discription: {widget: 'textarea', label: '描述', rows: 5} as UiTextAreaItem,\r\n            url: {widget: 'text', label: 'URL', placeholder: 'http(s)://APP地址'} as UiTextItem,\r\n            'public': {widget: 'checkbox', label: '公开', } as UiCheckItem,\r\n            server: {widget: 'id', label: '服务器', pickId: this.pickServerId, Templet: this.renderServerInput} as UiIdItem,\r\n            icon: {widget: 'image', label: '标志图'} as UiImageItem,\r\n            submit: {widget: 'button', label: '提交', className: 'btn btn-primary'}\r\n        }\r\n    }\r\n    \r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n    protected onSubmit = async (values:any):Promise<SubmitResult> => {\r\n        await this.controller.saveApp(values);\r\n        nav.pop();\r\n        return;\r\n    }\r\n    private onButtonClick = async (name:string, context: Context) => {\r\n        let {data} = context;\r\n        let app = _.clone(this.controller.app);\r\n        _.merge(app, data);\r\n        await this.controller.saveApp(app);\r\n        nav.pop();\r\n    }\r\n    protected page: ()=>JSX.Element;\r\n    protected form = observer(() => {\r\n        /*\r\n        return <TonvaForm\r\n            className=\"m-3\"\r\n            formRows={formRows} \r\n            onSubmit={this.onSubmit} initValues={initValues} />\r\n        */\r\n        return <Form fieldLabelSize={2}\r\n            className=\"m-3\" \r\n            schema={schema} \r\n            uiSchema={this.uiSchema}\r\n            formData={this.initValues}\r\n            onButtonClick={this.onButtonClick} />\r\n    });\r\n    abstract get initValues():any;\r\n}\r\n\r\nexport class EditPage extends EditBasePage {\r\n    get initValues():any {return this.controller.app}\r\n    protected page = () => {\r\n        let {app} = this.controller;\r\n        let {name} = app;\r\n        return <Page header={'修改APP - ' + name} back=\"close\">\r\n            <this.form />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nexport class NewPage extends EditBasePage {\r\n    get initValues():any {return {}}\r\n    protected page = () => {\r\n        return <Page header={'新建APP'} back=\"close\">\r\n            <this.form />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, Image } from \"tonva-tools\";\r\nimport { AppController } from '.';\r\nimport { List, LMR, Badge, Muted, FA } from 'tonva-react-form';\r\nimport { DevModel } from 'model';\r\nimport { NewPage } from './editPage';\r\n\r\nexport class AppsPage extends VPage<AppController> {\r\n    async open(param:any) {\r\n        this.openPage(this.page);\r\n    }\r\n    private newItem = () => {\r\n        this.openVPage(NewPage);\r\n    }\r\n    private page = ():JSX.Element => {\r\n        let {appList, listRowClick} = this.controller;\r\n        let right = <button className='btn btn-secondary btn-sm' onClick={()=>this.newItem()}><FA name=\"plus\" /></button>;\r\n        return <Page header=\"App\" right={right}>\r\n            <List items={appList} item={{render: this.appRow, onClick: listRowClick}} />\r\n        </Page>\r\n    }\r\n    private appRow = (item:DevModel.App):JSX.Element => {\r\n        let {name, discription, icon, url, urlDebug} = item;\r\n        let left = <Badge size=\"sm\"><Image src={icon} /></Badge>;\r\n        let right = <div className=\"text-muted small text-right\">\r\n            {url || '-'}<br/>\r\n            {urlDebug}\r\n        </div>;\r\n        return <LMR className=\"py-2 px-3 align-items-stretch\"\r\n            left={left} right={right}>\r\n            <div className=\"px-3\">\r\n                <div><b>{name}</b></div>\r\n                <div><Muted>{discription}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { List, LMR, SearchBox } from 'tonva-react-form';\r\nimport { DevModel } from 'model';\r\nimport { UnitSpan } from 'tools';\r\nimport { store } from 'store';\r\nimport { nav, Page, VPage } from 'tonva-tools';\r\nimport { AppController } from '.';\r\n\r\nexport class SearchUqPage extends VPage<AppController> {\r\n    @observable private uqs: DevModel.UQ[];\r\n\r\n    async open() {\r\n        this.uqs = await this.controller.getMyUqs();\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private onSearch = async (key:string) => {\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.uqs = await this.controller.searchUq(key, pageStart, pageSize);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let header = <SearchBox className=\"w-100 mx-1\" \r\n            onSearch={this.onSearch}\r\n            placeholder=\"搜索UQ名字\" \r\n            maxLength={100} />;\r\n        return <Page back=\"close\" header={header}>\r\n            <List items={this.uqs} item={{render: this.row, onClick: this.controller.onUq}} />\r\n        </Page>;\r\n    });\r\n\r\n    private row = (uq: DevModel.UQ) => {\r\n        let {owner, name, discription} = uq;\r\n        return <LMR className=\"py-2 px-3\" right={discription}>\r\n            <div>{owner} / {name}</div>\r\n        </LMR>;\r\n    };\r\n}\r\n\r\n@observer\r\nexport class AppUqs extends React.Component {\r\n    @observable anySelected: boolean = false;\r\n    private list:List;\r\n    private onSelect = (item: DevModel.UQ, isSelected:boolean, anySelected:boolean) => {\r\n        this.anySelected = anySelected;\r\n    }\r\n    private row = (item: DevModel.UQ) => {\r\n        let {name, unit, discription} = item;\r\n        return <LMR className=\"p-2\" right={<small className=\"text-muted\">{discription}</small>}>\r\n            <UnitSpan id={unit} />/{name}\r\n        </LMR>;\r\n    }\r\n    private removeBind = () => {\r\n        if (this.list === null) return;\r\n        let {selectedItems} = this.list;\r\n        if (selectedItems === undefined) return;\r\n        if (selectedItems.length === 0) return;\r\n        store.dev.apps.appBindUq(\r\n            selectedItems.map(v => {\r\n                return {id:v.id, access:['*']}\r\n            }), \r\n            false);\r\n    }\r\n    render() {\r\n        let btnProps = this.anySelected?\r\n            {color:'danger', onClick:this.removeBind, icon:'trash', text:'取消'}:\r\n            {color:'primary', onClick:()=>nav.push(<Uqs/>), icon:'plus', text:'新增'};\r\n        let btn = (p)=><button \r\n            className={classNames('btn', 'btn-outline-'+p.color, 'btn-sm')} \r\n            onClick={p.onClick}>\r\n            <i className={\"fa fa-\" + p.icon} /> {p.text}关联\r\n        </button>;\r\n        let listHeader = <div className=\"va-row py-1 justify-content-center\">{btn(btnProps)}</div>;\r\n        return <Page header=\"关联UQ\">\r\n            <List ref={list=>this.list=list} header={listHeader}\r\n                items={store.dev.apps.uqs}\r\n                item={{render: this.row, onSelect: this.onSelect}} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\n@observer\r\nclass Uqs extends React.Component {\r\n    onSearch = async (key:string) => {\r\n        await store.dev.apps.searchUq(key);\r\n    }\r\n    onBind(uq: DevModel.UQ, bind: boolean) {\r\n        store.dev.apps.appBindUq([{id:uq.id, access:['*']}], bind);\r\n    }\r\n    row = (uq: DevModel.UQ) => {\r\n        let isConnected = store.dev.apps.uqs.find(a => a.id === uq.id) !== undefined;\r\n        let cn = ['btn', 'btn-sm'];\r\n        let btnContent:any, onClick:any;\r\n        if (isConnected) {\r\n            cn.push('btn-success');\r\n            onClick = ()=>this.onBind(uq, false);\r\n            btnContent = \"已关联\";\r\n        }\r\n        else {\r\n            cn.push('btn-primary');\r\n            onClick = ()=>this.onBind(uq, true);\r\n            btnContent = <span><i className=\"fa fa-check\"/> 关联</span>;\r\n        }\r\n        return <div className=\"d-flex justify-content-start py-1 px-3\">\r\n            <div className=\"align-self-center\">{uq.name + ' - ' + uq.discription}</div>\r\n            <footer className=\"ml-auto\"><button className={classNames(cn)} onClick={onClick}>{btnContent}</button></footer>\r\n        </div>\r\n    }\r\n    render() {\r\n        let header = <SearchBox className=\"w-100 mx-1\" \r\n            onSearch={this.onSearch} \r\n            placeholder=\"搜索UQ名字\" \r\n            maxLength={100} />;\r\n        return <Page back=\"close\" header={header}>\r\n            <List items={store.dev.apps.searchedUqs} item={{render: this.row}} loading={null} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, nav } from 'tonva-tools';\r\nimport { AppController, UqAccess } from '.';\r\nimport { IdDates, UnitSpan, ServerSpan, UnitName } from 'tools';\r\nimport { Prop, Media, PropGrid, ListProp, DropdownActions, List, LMR } from 'tonva-react-form';\r\nimport { EditPage } from './editPage';\r\nimport { AppUqs, SearchUqPage } from './appUqs';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class AppPage extends VPage<AppController> {\r\n    async open() {\r\n        //this.uqs.list = this.controller.uqs;\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private editItem = async () => {\r\n        await this.openVPage(EditPage);\r\n        //nav.push(<EditAppPage {...this.props} />);\r\n    }\r\n\r\n    private deleteItem = async () => {\r\n        if (confirm('真的要删除吗？系统删除时并不会检查相关引用，请谨慎') === true) {\r\n            await this.controller.deleteApp();\r\n            nav.pop();\r\n        }\r\n    }\r\n\r\n    private page = observer(():JSX.Element => {\r\n        let {app} = this.controller;\r\n        let {unit, name, discription, icon, server, date_init, date_update} = app;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let menuItems = [\r\n            // {icon: 'cogs', caption:'设置关联UQ', action: ()=>nav.push(<AppUqs />)},\r\n            {caption:'修改App', action:this.editItem, icon:'edit' },\r\n            {caption:'删除', action:this.deleteItem, icon:'trash-o' }\r\n        ];\r\n\r\n        let right = <DropdownActions actions={menuItems} />;\r\n\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <Media icon={icon} main={name} discription={disp} />\r\n            },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                label: '开发号', \r\n                component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> \r\n            },\r\n            /*\r\n            {\r\n                type: 'component', \r\n                label: 'Service',\r\n                vAlign: 'stretch',\r\n                component: <ServiceRow />,\r\n            },*/\r\n            {\r\n                label: 'URL',\r\n                name: 'url',\r\n                type: 'string',                \r\n            },\r\n            {\r\n                type: 'component',\r\n                label: '服务器',\r\n                component: <ServerSpan id={server} />\r\n            },\r\n            '',\r\n            //this.uqs,\r\n        ];\r\n        let btnAddUq = <button className=\"btn btn-outline-primary btn-sm\" onClick={()=>this.openVPage(SearchUqPage)}>\r\n            增加关联\r\n        </button>;\r\n        return <Page header={'App - ' + name} right={right}>\r\n            <PropGrid rows={rows} values={app} />\r\n            <LMR className=\"mx-3 mt-3 mb-1\" right={btnAddUq}>\r\n                关联UQ\r\n            </LMR>\r\n            <List items={this.controller.uqAccesses} item={{render:this.renderUqRow, onClick:this.uqClick}} />\r\n        </Page>\r\n    })\r\n\r\n    private uqClick = (uqAccess:UqAccess) => {\r\n        this.controller.onUq(uqAccess.uq);\r\n    }\r\n\r\n    private renderUqRow = (uqAccess:UqAccess, index:number):JSX.Element => {\r\n        let {uq, bind_access: access} = uqAccess;\r\n        let {name, discription, unit} = uq;\r\n        let disp: any;\r\n        let elAccess: any;\r\n        if (access && access.length > 0) {\r\n            elAccess = <> + {access.join(', ')} </>;\r\n        }\r\n        if (discription) disp = <div className=\"small text-muted\"> &nbsp; {discription}</div>;\r\n        return <LMR className=\"px-3 py-2 align-items-center\" right={disp}>\r\n            <UnitName id={unit} /> / {name} {elAccess}\r\n        </LMR>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, nav } from \"tonva-tools\";\r\nimport { AppController, UqAccess } from \".\";\r\nimport { LMR } from 'tonva-react-form';\r\n\r\nexport class UqBindPage extends VPage<AppController> {\r\n    private uqAccess: UqAccess;\r\n    private accesses: string[];\r\n    private accessChecked:{[name:string]:boolean};\r\n    async open(uqAccess: UqAccess) {\r\n        this.uqAccess = uqAccess;\r\n        let {uq, bind_access} = this.uqAccess;\r\n        let {access} = uq;\r\n        if (access) {\r\n            this.accessChecked = {};\r\n            this.accesses = access.split(',');\r\n            for (let acc of this.accesses) {\r\n                this.accessChecked[acc] = (bind_access && bind_access.find(bc => bc === acc)) !== undefined;\r\n            }\r\n        }\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private onCheckChanged = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        let {target} = evt;\r\n        this.accessChecked[target.name] = target.checked;\r\n    }\r\n\r\n    private saveUqBind = async () => {\r\n        let acc:string[] = [];\r\n        if (this.accesses) {\r\n            for (let i in this.accessChecked) {\r\n                if (this.accessChecked[i] === true) acc.push(i);\r\n            }\r\n        }\r\n        await this.controller.saveUqBind(this.uqAccess.uq, acc);\r\n        nav.pop();\r\n    }\r\n\r\n    private removeUqBind = async () => {\r\n        await this.controller.removeUqBind(this.uqAccess.uq);\r\n        nav.pop();\r\n    }\r\n\r\n    private page = ():JSX.Element => {\r\n        let {uq, bind_access} = this.uqAccess;\r\n        let {owner, name, discription, access} = uq;\r\n        let btnDelete:any;\r\n        if (bind_access !== null && bind_access !== undefined) {\r\n            btnDelete = <button className=\"btn btn-outline-danger btn-sm\" onClick={this.removeUqBind}>取消关联</button>;\r\n        }\r\n        let checkAccessList:any;\r\n        if (this.accesses) {\r\n            checkAccessList = <div className=\"mt-3\">\r\n            {\r\n                this.accesses.map(v => {\r\n                    let checked = this.accessChecked[v];\r\n                    return <label key={v} className=\"d-inline-block mr-4\">\r\n                        <input onChange={this.onCheckChanged}\r\n                            style={{width:'1.1rem', height:'1.1rem'}} \r\n                            name={v} type=\"checkbox\" defaultChecked={checked} />&nbsp;{v}\r\n                    </label>;\r\n                })\r\n            }\r\n            </div>;\r\n        }\r\n        return <Page header=\"关联UQ\">\r\n            <div className=\"m-3 py-3 px-3 bg-white border\">\r\n                <div>{owner} / {name}</div>\r\n                <div className=\"text-muted\">{discription}</div>\r\n                {checkAccessList}\r\n                <LMR className=\"pt-3\" right={btnDelete}>\r\n                    <button className=\"btn btn-primary btn-sm\" onClick={this.saveUqBind}>保存关联</button>\r\n                </LMR>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { observable } from 'mobx';\r\nimport { Controller } from \"tonva-tools\";\r\nimport { DevModel } from 'model';\r\nimport { devApi } from 'api';\r\nimport { AppsPage } from './appsPage';\r\nimport { AppPage } from './appPage';\r\nimport { UqBindPage } from './uqBindPage';\r\n\r\nexport interface UqAccess {\r\n    uq: DevModel.UQ;\r\n    bind_access: string[];\r\n}\r\n\r\nexport class AppController extends Controller {\r\n    private unitId: number;\r\n    app: DevModel.App;\r\n    @observable appList: DevModel.App[];\r\n    @observable uqAccesses: UqAccess[];\r\n    protected async internalStart(unitId:any) {\r\n        this.unitId = unitId;\r\n        this.appList = await devApi.apps(this.unitId);\r\n        this.openVPage(AppsPage);\r\n    }\r\n\r\n    listRowClick = async (item:DevModel.App) => {\r\n        this.app = item;\r\n        let ret = await devApi.loadAppUqs(item.id);\r\n        this.uqAccesses = ret.map(v => {\r\n            let {owner, access, id, name, discription, unit, date_init, date_update, bind_access} = v;\r\n            return {\r\n                uq: {\r\n                    id: id,\r\n                    name: name,\r\n                    discription: discription,\r\n                    unit: unit,\r\n                    access: access,\r\n                    owner: owner,\r\n                    date_init: date_init,\r\n                    date_update: date_update, \r\n                    service_count: undefined,\r\n                },\r\n                uqOwner: owner,\r\n                bind_access: bind_access && bind_access.split(',')\r\n            }\r\n        });\r\n        this.openVPage(AppPage);\r\n    }\r\n\r\n    saveApp = async (values: DevModel.App) => {\r\n        let app: DevModel.App;\r\n        if (this.app === undefined) {\r\n            app = _.clone(values);\r\n        }\r\n        else {\r\n            app = _.clone(this.app);\r\n            _.merge(app, values);\r\n        }\r\n        app.unit = this.unitId;\r\n        let ret = await devApi.saveApp(app);\r\n        app.id = ret;\r\n        let org = this.appList.find(v => v.id === ret);\r\n        if (org !== undefined) {\r\n            _.merge(org, app);\r\n        }\r\n        else {\r\n            this.appList.push(app);\r\n        }\r\n    }\r\n\r\n    deleteApp = async () => {\r\n        await devApi.delApp(this.unitId, this.app.id);\r\n        let index = this.appList.findIndex(v => v.id === this.app.id);\r\n        if (index >= 0) this.appList.splice(index, 1);\r\n    }\r\n\r\n    searchUq = async (key:string, pageStart:number, pageSize:number) => {\r\n        return await devApi.searchUq(this.unitId, key, pageStart, pageSize);\r\n    }\r\n\r\n    getMyUqs = async () => {\r\n        return await devApi.getMyUqs(this.unitId);\r\n    }\r\n\r\n    onUq = (uq: DevModel.UQ) => {\r\n        let uqAccess:UqAccess = this.uqAccesses.find(v => v.uq.id === uq.id);\r\n        if (uqAccess === undefined) {\r\n            uqAccess = {\r\n                uq: uq,\r\n                bind_access: undefined,\r\n            }\r\n        }\r\n        else {\r\n            let access = uqAccess.bind_access;\r\n            if (access === null || access === undefined) uqAccess.bind_access = [];\r\n        }\r\n        this.openVPage(UqBindPage, uqAccess);\r\n    }\r\n\r\n    // accesses = undefined, 表示删除\r\n    private buildBindUqs(uq: DevModel.UQ, accesses?:string[]) {\r\n        let uqs:{id:number, access:string[]}[] = [];\r\n        let isNew = true;\r\n        for (let ua of this.uqAccesses) {\r\n            let {uq:uaUq, bind_access} = ua;\r\n            if (uaUq.id === uq.id) {\r\n                if (accesses === undefined) continue;\r\n                bind_access = accesses;\r\n                isNew = false;\r\n            }\r\n            uqs.push({\r\n                id: uaUq.id,\r\n                access: bind_access || [],\r\n            });\r\n        }\r\n        if (accesses !== undefined && isNew === true) {\r\n            uqs.push({id: uq.id, access: accesses});\r\n        }\r\n        return uqs;\r\n    }\r\n\r\n    saveUqBind = async (uq: DevModel.UQ, accesses:string[]) => {\r\n        let uqs:{id:number, access:string[]}[] = this.buildBindUqs(uq, accesses);\r\n        await devApi.appBindUq(this.unitId, this.app.id, uqs);\r\n        if (uqs.length > this.uqAccesses.length) {\r\n            this.uqAccesses.unshift({\r\n                uq: uq,\r\n                bind_access: accesses,\r\n            });\r\n        }\r\n        else {\r\n            let ua = this.uqAccesses.find(v => v.uq.id === uq.id);\r\n            ua.bind_access = accesses;\r\n        }\r\n    }\r\n\r\n    removeUqBind = async (uq: DevModel.UQ) => {\r\n        let uqs:{id:number, access:string[]}[] = this.buildBindUqs(uq);\r\n        await devApi.appBindUq(this.unitId, this.app.id, uqs);\r\n        let index = this.uqAccesses.findIndex(v => v.uq.id === uq.id);\r\n        if (index>=0) this.uqAccesses.splice(index, 1);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {List, EasyDate, LMR, Muted} from 'tonva-react-form';\r\nimport {DevModel} from '../../model';\r\nimport {store} from '../../store';\r\n\r\ninterface State {\r\n    files: any[];\r\n    compiled?: string;\r\n    text?: string;\r\n}\r\n\r\nexport interface UpUploadProps {\r\n    uq: DevModel.UQ;\r\n    services: DevModel.Service[];\r\n}\r\n\r\nexport class UqUpload extends React.Component<UpUploadProps, State> {\r\n    private fileInput: HTMLInputElement;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            files: undefined,\r\n        }\r\n    }\r\n    private onFilesChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        let upFiles:any[] = [];\r\n        let {files} = evt.target;\r\n        let len = files.length;\r\n        for (let i=0; i<len; i++) {\r\n            upFiles.push(files[i]);\r\n        }\r\n        this.setState({\r\n            files: upFiles,\r\n        });\r\n    }\r\n    fileRender(file, index):JSX.Element {\r\n        let {name, size, lastModifiedDate} = file;\r\n        function sz():string {\r\n            let n:number, u:string;\r\n            if (size < 1024) {\r\n                n = size; u = 'b';\r\n            }\r\n            else if (size < 1024*1024) {\r\n                n = Math.trunc((size / 1024) * 100)/100; u = 'k';\r\n            }\r\n            else {\r\n                n = Math.trunc((size / 1024 / 1024) * 100)/100; u = 'm';\r\n            }\r\n            return n + ' ' + u;\r\n        }\r\n        return <LMR className=\"px-2 py-1\" right={<Muted>{sz()}</Muted>}>\r\n            <div>{name}</div>\r\n            <div><Muted>修改日期: <EasyDate date={lastModifiedDate} /></Muted></div>\r\n        </LMR>;\r\n    }\r\n    private fileClick = (file:any) => {\r\n        let fr = new FileReader();\r\n        fr.onload = function(f) {\r\n            //alert(this.result);\r\n            nav.push(<UqPage name={file.name} content={this.result} />)\r\n        }\r\n        fr.readAsText(file, \"utf8\");\r\n    }\r\n    private onSubmit = (evt:React.FormEvent<any>) => {\r\n        evt.preventDefault();\r\n    }\r\n\r\n    private async update(thoroughly:boolean) {\r\n        var files:FileList = this.fileInput.files;\r\n        var data = new FormData();\r\n        let len = files.length;\r\n        for (let i=0; i<len; i++) {\r\n            let file = files[i];\r\n            data.append('files[]', file, file.name);\r\n        }\r\n  \r\n        let url = store.uqServer + 'uq-compile/' + this.props.uq.id + '/update';\r\n        if (thoroughly === true) url += '-thoroughly';\r\n        try {\r\n            let abortController = new AbortController();\r\n            let res = await fetch(url, {\r\n                method: \"POST\",\r\n                body: data,\r\n                signal: abortController.signal,\r\n            });\r\n            nav.push(<CompileResult {...this.props} res={res} abortController={abortController} />);\r\n        }\r\n        catch (e) {\r\n            console.error('%s %s', url, e);\r\n        }\r\n    }\r\n    private onUpdate = async () => {\r\n        let thoroughly = false;\r\n        await this.update(thoroughly);\r\n    }\r\n    private onUpdateThoroughly = async () => {\r\n        let thoroughly = true;\r\n        await this.update(thoroughly);\r\n    }\r\n    render() {\r\n        let {files} = this.state;\r\n        let fileList:any;\r\n        if (files !== undefined) {\r\n            fileList = <List \r\n                className=\"my-3\" \r\n                items={files} \r\n                item={{render: this.fileRender, onClick: this.fileClick}}/>;\r\n        }\r\n        let button:any;\r\n        if (files !== undefined && files.length > 0) {\r\n            button = <div className=\"my-2 d-flex\">\r\n                <button className=\"btn btn-success\" type=\"submit\" onClick={this.onUpdate}>优化编译</button>\r\n                <div className=\"py-2 flex-grow-1\" />\r\n                <button className=\"btn btn-outline-warning\"\r\n                    type=\"submit\" onClick={this.onUpdateThoroughly}>完全编译</button>\r\n            </div>;\r\n        }\r\n        return <Page header={\"编译 - \" + this.props.uq.name}>\r\n            <div className=\"py-2 px-3\">\r\n                <div>请选择UQ源代码文件</div>\r\n                <form className=\"my-1\" encType=\"multipart/form-data\" onSubmit={this.onSubmit}>\r\n                    <div className=\"my-1\">\r\n                        <input ref={(fileInput) => this.fileInput=fileInput}type=\"file\" id=\"photo\" \r\n                            className=\"w-100 form-control-file\" name=\"files\" multiple={true} \r\n                            onChange={this.onFilesChange} />\r\n                    </div>\r\n                    {fileList}\r\n                    {button}\r\n                </form>\r\n                <pre>{this.state.compiled}</pre>\r\n                <div>{this.state.text}</div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n\r\ninterface UqPgeProps {\r\n    name: string;\r\n    content: string|ArrayBuffer;\r\n}\r\nclass UqPage extends React.Component<UqPgeProps> {\r\n    render() {\r\n        return <Page header={this.props.name}>\r\n            <pre className=\"px-3 py-2\">{this.props.content}</pre>\r\n        </Page>;\r\n    }\r\n}\r\n\r\ninterface CompileResultProps {\r\n    res: Response;\r\n    abortController: AbortController;\r\n}\r\ninterface CompileResultState {\r\n    texts: string[];\r\n    seconds: number;\r\n}\r\nclass CompileResult extends React.Component<CompileResultProps, CompileResultState> {\r\n    private texts: string[];\r\n    private timeHandler:any;\r\n    constructor(props) {\r\n        super(props);\r\n        this.texts = [];\r\n        this.state = {\r\n            texts: this.texts,\r\n            seconds: -1,\r\n        }\r\n    }\r\n    componentWillMount() {\r\n        nav.regConfirmClose(async ():Promise<boolean>=>{\r\n            if (this.state.seconds>=0) return true;\r\n            return new Promise<boolean>((resolve, reject) => {\r\n                try {\r\n                    if (confirm('正在编译中，真的要中止吗？') === true) {\r\n                        try {\r\n                            this.props.abortController.abort();\r\n                        }\r\n                        catch (err) {\r\n                            console.error(err);\r\n                        }\r\n                        resolve(true);\r\n                    }\r\n                    else {\r\n                        resolve(false);\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    reject(err);\r\n                }\r\n            })\r\n        });\r\n    }\r\n    private clearTimeHandler() {\r\n        if (this.timeHandler !== undefined) {\r\n            clearTimeout(this.timeHandler);\r\n            this.timeHandler = undefined;\r\n        }\r\n    }\r\n    private getParent(el:HTMLElement):HTMLElement {\r\n        if (!el) return;\r\n        if (el.tagName === 'MAIN') return el;\r\n        return this.getParent(el.parentElement);\r\n    }\r\n    private scrollToBottom(defer:number = 100) {\r\n        this.clearTimeHandler();\r\n        let that = this;\r\n        this.timeHandler = setTimeout(() => {\r\n            var pane = document.getElementById('bottomDiv');\r\n            pane && pane.scrollIntoView();\r\n            /*\r\n            if (pane !== undefined) {\r\n                let childNodes = pane.childNodes;\r\n                let last = childNodes.item(childNodes.length-1);\r\n                (last as HTMLElement).scrollIntoView();\r\n            }\r\n            */\r\n            that.clearTimeHandler();\r\n        }, defer);\r\n    }\r\n    private topIntoView() {\r\n        var pane = document.getElementById('topDiv');\r\n        pane && pane.scrollIntoView();\r\n        /*\r\n        let childNodes = pane.childNodes;\r\n        let len = childNodes.length;\r\n        if (len === 0) return;\r\n        let first = childNodes.item(0);\r\n        (first as HTMLElement).scrollIntoView();\r\n        */\r\n    }\r\n    private bottomIntoView() {\r\n        var pane = document.getElementById('bottomDiv');\r\n        pane && pane.scrollIntoView();\r\n        /*\r\n        let childNodes = pane.childNodes;\r\n        let len = childNodes.length;\r\n        if (len === 0) return;\r\n        let last = childNodes.item(len-1);\r\n        (last as HTMLElement).scrollIntoView();\r\n        */\r\n    }\r\n    private doubleClick = () => {\r\n        var pane = document.getElementById('scrollDiv');\r\n        let main = this.getParent(pane);\r\n        if (!main) return;\r\n        if (main.scrollTop >= main.scrollHeight / 2) {\r\n            this.topIntoView();\r\n        }\r\n        else {\r\n            this.bottomIntoView();\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        let that = this;\r\n        let time = new Date();\r\n        function consume(reader: ReadableStreamReader) {\r\n            var total = 0\r\n            return new Promise((resolve, reject) => {\r\n                function uintToString(uintArray):string {\r\n                    var encodedString = String.fromCharCode.apply(null, uintArray),\r\n                        decodedString = decodeURIComponent(escape(encodedString));\r\n                    return decodedString;\r\n                }\r\n                function pump() {\r\n                    reader.read().then(({done, value}) => {\r\n                        if (done) {\r\n                            that.scrollToBottom();\r\n                            that.setState({\r\n                                seconds: (new Date().getTime() - time.getTime()),\r\n                            })\r\n                            resolve();\r\n                            return;\r\n                        }\r\n                        let text = uintToString(value);\r\n                        that.texts.push(text);\r\n                        that.setState({\r\n                            texts: that.texts,\r\n                        });\r\n                        total += value.byteLength;\r\n                        that.scrollToBottom();\r\n                        pump();\r\n                    }).catch(reject)\r\n                }\r\n                pump();\r\n            });\r\n        }\r\n        try {\r\n            await consume(this.props.res.body.getReader());\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n    render() {\r\n        let {seconds, texts} = this.state;\r\n        return <Page header={seconds>=0? \"编译完成\" : \"编译中...\"} back=\"close\">\r\n            <div id='topDiv' />\r\n            <div id='scrollDiv'\r\n                onDoubleClick={this.doubleClick} \r\n                className='py-2 px-3' \r\n                style={{wordWrap: 'break-word', whiteSpace: 'normal'}}>\r\n                {texts.map((v, i) => <pre style={{whiteSpace: 'pre-wrap'}} key={i}>{v}</pre>)}\r\n            </div>\r\n            {seconds>=0? <div className='px-3 pb-3' style={{color: 'red', fontWeight: 'bold'}}>\r\n                编译完成。共计用时{Math.floor(seconds/1000)}秒\r\n            </div> : undefined}\r\n            <div id='bottomDiv' />\r\n        </Page>;\r\n    }\r\n}","import * as React from 'react';\r\nimport { DevModel } from \"model\";\r\nimport { IdPickProps, createIdPick } from 'createIdPick';\r\nimport { store } from 'store';\r\nimport { Field, FormRow, StringFace, TextAreaFace, TonvaForm, SubmitResult } from 'tonva-react-form';\r\nimport { UQController } from '.';\r\nimport { VPage, nav, Page } from 'tonva-tools';\r\n\r\nconst ServerCaption = (item:DevModel.Server) => {\r\n    let {discription, cloud, ip} = item;\r\n    return <>{discription} {cloud} {ip}</>;\r\n}\r\n\r\nconst idPickServerProps: IdPickProps = {\r\n    caption: '选择服务器',\r\n    searchPlaceHolder: '搜索服务器',\r\n    candidateItems: async (params:any, key:string) => {\r\n        await store.dev.searchServer.first(key);\r\n        return store.dev.searchServer.items;\r\n    },\r\n    moreCandidates: async () => {\r\n        await store.dev.searchServer.more();\r\n    },\r\n    row: (item:DevModel.Server, index:number) => {\r\n        return <div className=\"px-3 py-2\"><ServerCaption {...item} /></div>;\r\n    },\r\n};\r\n\r\nconst urlField:Field = {name: 'url', type: 'string', required:true, maxLength:200};\r\nconst serverField:Field = {name: 'server', type: 'id'};\r\nconst dbTypeField:Field = {name: 'db_type', type: 'string', maxLength:20, defaultValue:'mysql'};\r\nconst dbField:Field = {name: 'db', type: 'string', maxLength:50, required: true};\r\nconst connectionField:Field = {name:'connection', type:'string', maxLength:250};\r\n\r\nconst urlRow = {\r\n    label: 'URL',\r\n    field: urlField,\r\n};\r\n\r\nconst serverRow = {\r\n    label: '服务器', \r\n    field: serverField,\r\n    face: {\r\n        type: 'pick-id', \r\n        initCaption: '请选择服务器', \r\n        pick: createIdPick(idPickServerProps), //this.idPick,\r\n        fromPicked: (item:DevModel.Server)=>{\r\n            return {\r\n                id: item.id, \r\n                caption: <ServerCaption {...item} />,\r\n            };\r\n        },\r\n        itemFromId: (id:number)=>store.cacheServers.get(id),\r\n    },\r\n};\r\n\r\nconst dbTypeRow:FormRow = {\r\n    label: '数据库类型',\r\n    field: dbTypeField,\r\n    face: {\r\n        type: 'string',\r\n        readonly: true,\r\n    } as StringFace\r\n};\r\n\r\nconst dbRow = {\r\n    label: '数据库名字',\r\n    field: dbField,\r\n};\r\n\r\nconst connectionRow = {\r\n    label: '连接字符串',\r\n    field: connectionField,\r\n    face: {\r\n        type: 'textarea',\r\n        maxLength: 250,\r\n        rows: 8,\r\n    } as TextAreaFace,\r\n};\r\n\r\nexport class NewServicePage extends VPage<UQController> {\r\n    private tonvaForm:TonvaForm;\r\n    private formRows:FormRow[] = [\r\n        urlRow,\r\n        serverRow,\r\n        dbTypeRow,\r\n        dbRow,\r\n        connectionRow\r\n    ];\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n    private onSubmit = async (values:any):Promise<SubmitResult | undefined> => {\r\n        values.type = 2; // uq type, to be removed\r\n        values.bindId = this.controller.uq.id;\r\n        let ret = await this.controller.saveService(values);\r\n        if (ret === 0) {\r\n            if (this.tonvaForm !== undefined) {\r\n                this.tonvaForm.formView.setError('url', '已经有Service使用这个url');\r\n            }\r\n            return;\r\n        }\r\n        nav.pop();\r\n        return;\r\n    }\r\n    private page = () => {\r\n        return <Page header=\"新建Service\">\r\n            <TonvaForm ref={t=>this.tonvaForm=t} className=\"m-3\" formRows={this.formRows} onSubmit={this.onSubmit} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { Page, VPage, nav } from \"tonva-tools\";\r\nimport { UQController } from '.';\r\nimport { DevModel } from 'model';\r\nimport { Prop, PropGrid } from 'tonva-react-form';\r\nimport { StringValueEdit, ServerSpan, TextValueEdit } from 'tools';\r\n\r\nexport class ServicePage extends VPage<UQController> {\r\n    @observable private service: DevModel.Service;\r\n    async open(service: DevModel.Service) {\r\n        this.service = service;\r\n        this.openPage(this.page);\r\n    }\r\n    private async changeProp(prop:string, value:any):Promise<any> {\r\n        return await this.controller.changeServiceProp(this.service, prop, value);\r\n    }\r\n    private onUrlChanged = async (value:any, orgValue:any):Promise<string|void> => {\r\n        let ret = await this.changeProp('url', value);\r\n        if (ret === 0) {\r\n            return 'URL已经被使用了';\r\n        }\r\n        this.service.url = value;\r\n    }\r\n    private onDbChanged = async (value:any, orgValue:any):Promise<string|void> => {\r\n        let ret = await this.changeProp('db', value);\r\n        if (ret === 0) {\r\n            return 'Db已经被使用了';\r\n        }\r\n        this.service.db = value;\r\n    }\r\n    private onDbTypeChanged = async (value:string, orgValue:any):Promise<string|void> => {\r\n        if (value === undefined || value === null) return;\r\n        if (value.toLowerCase().trim() !== 'mysql') return '目前只支持mysql';\r\n        let ret = await this.changeProp('db_type', value);\r\n        this.service.db_type = value;\r\n    }\r\n    private onConnectionChanged = async (value:string, orgValue:any):Promise<string|void> => {        \r\n        await this.changeProp('connection', value);\r\n        this.service.connection = value;\r\n    }\r\n    private onDeleteClick = async () => {\r\n        if (confirm(\"真的要删除Service吗？删除了不可恢复，需要重新录入。\")!==true) return;\r\n        await this.controller.delService(this.service);\r\n        nav.pop();\r\n    }\r\n    private page = () => {\r\n        let {uq} = this.controller;\r\n        let {type, name, discription, server, url, db, db_type, connection} = this.service;\r\n        let rows:Prop[] = [\r\n            '',\r\n            /*\r\n            {\r\n                type: 'component',\r\n                component: <div className=\"px-3 py-2\">\r\n                    <b>{name}</b><br/><Muted>{discription}</Muted>\r\n                </div>,\r\n            },\r\n            '',*/\r\n            {\r\n                type: 'string',\r\n                name: 'url',\r\n                label: 'URL',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"修改URL\"\r\n                    value={url}\r\n                    onChanged={this.onUrlChanged} />)\r\n            },\r\n            {\r\n                type: 'component',\r\n                label: '服务器',\r\n                component: <ServerSpan id={server} />\r\n            },\r\n            {\r\n                type: 'string',\r\n                name: 'db_type',\r\n                label: '数据库类型',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"数据库类型\"\r\n                    value={db_type}\r\n                    onChanged={this.onDbTypeChanged} />)\r\n            },\r\n            {\r\n                type: 'string',\r\n                name: 'db',\r\n                label: '数据库名',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"数据库名字\"\r\n                    value={db}\r\n                    onChanged={this.onDbChanged} />)\r\n            },\r\n            {\r\n                type: 'string',\r\n                name: 'connection',\r\n                label: '连接字符串',\r\n                onClick: ()=>nav.push(<TextValueEdit\r\n                    title=\"连接字符串\"\r\n                    value={connection}\r\n                    onChanged={this.onConnectionChanged} />)\r\n            },\r\n        ];\r\n        let right = <button onClick={this.onDeleteClick} className=\"btn btn-success\">删除</button>;\r\n        return <Page header={'UQ - ' + uq.name} right={right}>\r\n            <PropGrid rows={rows} values={this.service} />\r\n        </Page>\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { UQController } from \".\";\r\nimport { VPage, nav, Page } from \"tonva-tools\";\r\nimport { SubmitResult, TonvaForm } from \"tonva-react-form\";\r\n\r\nconst formRows = [\r\n    {\r\n        label: '名称', \r\n        field: {name: 'name', type: 'string', maxLength: 100, required: true},\r\n    },\r\n    {\r\n        label: '描述',\r\n        field: {name: 'discription', type: 'string', maxLength: 250},\r\n        face: {type: 'textarea'}\r\n    },\r\n    //{\r\n    //    label: '入口',\r\n    //    field: {name: 'access', type: 'string', maxLength: 250},\r\n    //    face: {type: 'textarea', placeholder: '逗号分隔的入口名'}\r\n    //},\r\n];\r\n\r\n\r\nexport abstract class EditBasePage extends VPage<UQController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n    protected onSubmit = async (values:any):Promise<SubmitResult> => {\r\n        await this.controller.saveUq(values);\r\n        nav.pop();\r\n        return;\r\n    }\r\n    protected page: ()=>JSX.Element;\r\n    protected form(initValues:any):JSX.Element {\r\n        return <TonvaForm\r\n            className=\"m-3\"\r\n            formRows={formRows} \r\n            onSubmit={this.onSubmit} initValues={initValues} />\r\n    }\r\n}\r\n\r\nexport class EditPage extends EditBasePage {\r\n    protected page = () => {\r\n        let {uq} = this.controller;\r\n        let {name} = uq;\r\n        return <Page header={'修改UQ - ' + name} back=\"close\">\r\n            {this.form(uq)}\r\n        </Page>;\r\n    }\r\n}\r\n\r\nexport class NewPage extends EditBasePage {\r\n    protected page = () => {\r\n        return <Page header={'新建UQ'} back=\"close\">\r\n            {this.form({})}\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, nav } from 'tonva-tools';\r\nimport { UQController } from '.';\r\nimport { IdDates, UnitSpan, ServerSpan } from 'tools';\r\nimport { Prop, Media, LMR, FA, PropGrid, Muted, List, EasyDate, DropdownActions } from 'tonva-react-form';\r\nimport { DevModel } from 'model';\r\nimport { EditPage } from './editPage';\r\n\r\nexport class UQPage extends VPage<UQController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private editItem = async () => {\r\n        await this.openVPage(EditPage);\r\n        //nav.push(<EditAppPage {...this.props} />);\r\n    }\r\n\r\n    private deleteItem = async () => {\r\n        if (confirm('真的要删除UQ吗？') === true) {\r\n            await this.controller.deleteUq();\r\n            nav.pop();\r\n        }\r\n    }\r\n\r\n    private page = ():JSX.Element => {\r\n        let {onUqUpload, serviceClick, uq, services} = this.controller;\r\n        let {id, name, discription, access, unit, date_init, date_update} = uq;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let menuItems = [\r\n            {caption:'修改UQ', action:this.editItem, icon:'edit' },\r\n            {caption:'删除', action:this.deleteItem, icon:'trash-o' }\r\n        ];\r\n        let right = <DropdownActions actions={menuItems} />;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <LMR className=\"py-2\"\r\n                    left={<FA name=\"database\" className=\"text-primary fa-2x mr-3\" />}>\r\n                    <div><b>{name}</b></div>\r\n                    {disp}\r\n                </LMR>\r\n            },\r\n            {\r\n                type: 'component', \r\n                label: '开发号', \r\n                component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> \r\n            },\r\n           '',\r\n           {\r\n                type: 'component', \r\n                label: '编译代码', \r\n                component: <LMR onClick={()=>onUqUpload()} className=\"w-100 py-2 cursor-pointer\" \r\n                    left=\"上传编译uq代码\" right={<FA className=\"align-self-center\" name=\"chevron-right\" />} />\r\n            },\r\n            /*\r\n            {type: 'component', label: 'ACCESS', component: <div className=\"py-2\">{\r\n                access? \r\n                    access.split(',').join(', ')\r\n                    : <Muted>(全)</Muted>\r\n            }</div> },\r\n            */\r\n        ];\r\n        return <Page header={'UQ - ' + name} right={right}>\r\n            <PropGrid rows={rows} values={uq} />\r\n            <div className=\"d-flex mx-3 mt-3 mb-1 align-items-end\">\r\n                <Muted style={{display:'block', flex:1}}>Service</Muted>\r\n                <button\r\n                    className=\"btn btn-outline-primary btn-sm\"\r\n                    onClick={()=>this.controller.showNewServicePage()}>\r\n                    增加\r\n                </button>\r\n            </div>\r\n            <List items={services} item={{render:this.renderService, onClick:serviceClick}} />\r\n        </Page>;\r\n    }\r\n    private renderService(service:DevModel.Service, index:number):JSX.Element {\r\n        let {url, server, db, db_type, compile_time} = service;\r\n        let compile = !compile_time?\r\n            <Muted>未编译</Muted> :\r\n            <><Muted>编译: </Muted><EasyDate date={compile_time}/></>;\r\n\r\n        return <LMR className=\"d-flex w-100 align-items-center cursor-pointer py-2 px-3\"\r\n            right={<small>{compile}</small>}\r\n            >\r\n            <div>\r\n                <div>{url}</div>\r\n                <div>{db_type} {db}</div>\r\n                <Muted><ServerSpan id={server} /></Muted>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { UQController } from '.';\r\nimport { List, LMR, Badge, Muted, FA } from 'tonva-react-form';\r\nimport { DevModel } from 'model';\r\nimport { NewPage } from './editPage';\r\n\r\nexport class ListPage extends VPage<UQController> {\r\n    async open(param:any) {\r\n        this.openPage(this.page);\r\n    }\r\n    private newItem = () => {\r\n        this.controller.uq = undefined;\r\n        this.openVPage(NewPage);\r\n    }\r\n    private page = ():JSX.Element => {\r\n        let {uqList: list, listRowClick} = this.controller;\r\n        let right = <button className='btn btn-secondary btn-sm' onClick={()=>this.newItem()}><FA name=\"plus\" /></button>;\r\n        return <Page header=\"UQ\" right={right}>\r\n            <List items={list} item={{render: this.listRow, onClick: listRowClick}} />\r\n        </Page>\r\n    }\r\n    private listRow = (item:DevModel.UQ):JSX.Element => {\r\n        let {name, discription, service_count} = item;\r\n        return <LMR className=\"py-1 px-3 align-items-center\"\r\n            left={<FA name=\"database\" className=\"text-primary fa-lg\" />}\r\n            right={<>{service_count}</>}>\r\n            <div className=\"py-2 px-3\">\r\n                <div><b>{name}</b></div>\r\n                <div><Muted>{discription}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { observable } from 'mobx';\r\nimport { nav, Page, Controller, meInFrame, VPage } from 'tonva-tools';\r\nimport { DevModel } from '../../model';\r\nimport { UqUpload, UpUploadProps } from './uqUpload';\r\nimport { devApi } from 'api';\r\nimport { NewServicePage } from './newServicePage';\r\nimport { ServicePage } from './servicePage';\r\nimport { UQPage } from './uqPage';\r\nimport { ListPage } from './listPage';\r\n\r\nexport class UQController extends Controller {\r\n    private unitId: number;\r\n    uq: DevModel.UQ;\r\n    access: string;\r\n    entities: string;\r\n    @observable uqList: DevModel.UQ[];\r\n    @observable services: DevModel.Service[];\r\n    protected async internalStart(unitId:any) {\r\n        this.unitId = unitId;\r\n        this.uqList = await devApi.uqs(this.unitId);\r\n        this.openVPage(ListPage);\r\n    }\r\n\r\n    listRowClick = async (item:DevModel.UQ) => {\r\n        this.uq = item;\r\n        await this.loadUqEntities(item.id);\r\n        this.openVPage(UQPage);\r\n    }\r\n\r\n    private async loadUqEntities(uqId: number) {\r\n        let ret = await devApi.uqGetEntities(this.unitId, uqId);\r\n        let r0 = ret[0][0];\r\n        this.access = r0.access;\r\n        this.entities = r0.entities;\r\n        this.services = ret[1];\r\n    }\r\n\r\n    serviceClick = (service: DevModel.Service) => {\r\n        this.openVPage(ServicePage, service);\r\n    }\r\n\r\n    onUqUpload = async() => {\r\n        let onDispose = () => {\r\n        };\r\n        nav.push(<UqUpload uq={this.uq} services={this.services} />, onDispose);\r\n    }\r\n\r\n    saveUq = async (values: DevModel.UQ) => {\r\n        let uq: DevModel.UQ;\r\n        if (this.uq === undefined) {\r\n            uq = _.clone(values);\r\n        }\r\n        else {\r\n            uq = _.clone(this.uq);\r\n            _.merge(uq, values);\r\n        }\r\n        uq.unit = this.unitId;\r\n        let ret = await devApi.saveUq(uq);\r\n        uq.id = ret;\r\n        this.uqList.push(uq);\r\n    }\r\n\r\n    deleteUq = async () => {\r\n        await devApi.delUq(this.unitId, this.uq.id);\r\n        let index = this.uqList.findIndex(v => v.id === this.uq.id);\r\n        if (index >= 0) this.uqList.splice(index);\r\n    }\r\n\r\n    async changeServiceProp(service: DevModel.Service, prop:string, value:any):Promise<any> {\r\n        return await devApi.changeServiceProp(this.unitId, service.id, prop, value);\r\n    }\r\n\r\n    async saveService(service: DevModel.Service):Promise<number> {\r\n        let svc = _.clone(service);\r\n        svc.unit = this.unitId;\r\n        let ret = await devApi.saveService(svc);\r\n        svc.id = ret;\r\n        this.services.push(svc);\r\n        return ret;\r\n    }\r\n\r\n    async delService(service: DevModel.Service) {\r\n        await devApi.delService(this.unitId, service.id);\r\n        let index = this.services.findIndex(v => v.id == service.id);\r\n        if (index >= 0) this.services.splice(index);\r\n    }\r\n\r\n    showNewServicePage = async () => {\r\n        await this.openVPage(NewServicePage);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {LMR, Badge, Muted} from 'tonva-react-form';\r\n\r\nexport interface RowProps {\r\n    icon: string;\r\n    main: string|JSX.Element;\r\n    vice: string|JSX.Element;\r\n}\r\n\r\nexport class Row extends React.Component<RowProps> {\r\n    render() {\r\n        let {icon, main, vice} = this.props;\r\n        return <LMR className=\"py-1 px-3 align-items-stretch\"\r\n            left={<Badge size=\"sm\" className=\"pt-1\"><img src={icon} /></Badge>}>\r\n            <div className=\"px-3\">\r\n                <div><b>{main}</b></div>\r\n                <div><Muted>{vice}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport _ from 'lodash';\r\nimport {FormRow, EasyDate, Media, \r\n    Prop, ListProp, PropGrid, List, SearchBox, LMR, Badge, Muted} from 'tonva-react-form';\r\nimport {UnitSpan, IdDates, ServerSpan} from '../tools';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {DevModel} from '../model';\r\nimport {store} from '../store';\r\nimport {Row} from './row';\r\nimport {ObjViewProps} from './ObjViewProps';\r\n\r\n@observer\r\nclass Info extends React.Component<DevModel.Bus> {\r\n    /*\r\n    private rows: Prop[];\r\n    constructor(props:any) {\r\n        super(props);\r\n        let {unit, name, discription, schema, date_init, date_update} = this.props;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={name} discription={disp} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                label: 'Schema',\r\n                vAlign: 'stretch',\r\n                component: <SchemaView />,\r\n            },\r\n        ];\r\n    }*/\r\n    async componentDidMount() {\r\n        //await store.dev.buses.loadCurApis();\r\n    }\r\n    render() {\r\n        let {unit, name, discription, schema, date_init, date_update} = this.props;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={name} discription={disp} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                label: 'Schema',\r\n                vAlign: 'stretch',\r\n                component: <SchemaView />,\r\n            },\r\n        ];\r\n        return <div>\r\n            <PropGrid rows={rows} values={this.props} />\r\n        </div>\r\n    }\r\n}\r\n\r\n@observer\r\nexport class SchemaView extends React.Component {\r\n    render() {\r\n        let bus = store.dev.buses.cur;\r\n        if (bus === null) return '...';\r\n        let content = bus.schema;\r\n        return <div className=\"d-flex py-2 w-100 align-items-center\" style={{flex:1}}>\r\n            <pre>\r\n                {content}\r\n            </pre>\r\n        </div>;\r\n\r\n    }\r\n}\r\n\r\nconst busesProps:ObjViewProps<DevModel.Bus> = {\r\n    title: 'BUS',\r\n    formRows: [\r\n        {\r\n            label: '名称', \r\n            field: {name: 'name', type: 'string', maxLength: 100, required: true},\r\n        },\r\n        {\r\n            label: '描述',\r\n            field: {name: 'discription', type: 'string', maxLength: 250},\r\n            face: {type: 'textarea'}\r\n        },\r\n        {\r\n            label: 'Schema',\r\n            field: {name: 'schema', type: 'string', maxLength: 2500},\r\n            face: {type: 'textarea', rows: 8}\r\n        },\r\n    ],\r\n    row: (item:DevModel.Bus):JSX.Element => {\r\n        let {owner, name, discription} = item;\r\n        return <Row icon={appItemIcon} main={owner + ' / ' + name} vice={discription} />;\r\n    },\r\n    items: ()=>store.dev.buses,\r\n    repeated: {\r\n        name: 'name',\r\n        err: '跟已有的名称重复',\r\n    },\r\n    info: Info,\r\n};\r\n\r\nexport default busesProps;\r\n","import * as React from 'react';\r\nimport {Prop, PropGrid, LMR, Muted, FA} from 'tonva-react-form';\r\nimport {UnitSpan, IdDates} from '../tools';\r\nimport {DevModel} from '../model';\r\nimport {store} from '../store';\r\nimport {ObjViewProps} from './ObjViewProps';\r\n\r\nclass Info extends React.Component<DevModel.Server> {\r\n    render() {\r\n        let {discription, cloud, ip, unit, date_init, date_update} = this.props;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;        \r\n        //<Media icon={appIcon} main={discription} discription={ip} />},\r\n        let rows:Prop[] = [\r\n            '',\r\n            {type: 'component', component: <LMR className=\"py-2\"\r\n                left={<FA name=\"server\" className=\"text-primary fa-2x mr-3\" />}>\r\n                <div><b>{ip}</b></div>\r\n                {disp}\r\n            </LMR>},\r\n            '',\r\n            {type: 'component', label: '开发号', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            {type: 'string', label: '云服务', name: 'cloud'},\r\n        ];\r\n        return <div>\r\n            <PropGrid rows={rows} values={this.props} />\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst serversProps:ObjViewProps<DevModel.Server> = {\r\n    title: 'Server',\r\n    info: Info,\r\n    formRows: [\r\n        {\r\n            label: '描述', \r\n            field: {name: 'discription', type: 'string', maxLength: 50, required: true},\r\n        },\r\n        {\r\n            label: '云服务商', \r\n            field: {name: 'cloud', type: 'string', maxLength: 20, required: true},\r\n        },\r\n        {\r\n            label: 'IP地址', \r\n            field: {name: 'ip', type: 'string', maxLength: 20},\r\n        },\r\n    ],\r\n    row: (item: DevModel.Server):JSX.Element => {\r\n        let {discription, cloud} = item;\r\n        //return <Row main={item.discription} vice={<>{item.cloud}  {item.ip}</>} />;\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n            left={<FA name=\"server\" className=\"text-primary fa-lg\" />}>\r\n            <div className=\"px-3\">\r\n                <div><b>{discription}</b></div>\r\n                <div><Muted>{cloud}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    },\r\n    items: ()=>store.dev.servers,\r\n    repeated: {\r\n        name: 'discription',\r\n        err: '重复的描述',\r\n    }\r\n};\r\n\r\nexport default serversProps;\r\n","import * as React from 'react';\r\nimport {Step, Field, Prop, PropGrid, Media} from 'tonva-react-form';\r\nimport {UnitSpan, IdDates, ServerSpan, UqSpan, AppSpan} from '../tools';\r\nimport {Row} from './row';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {DevModel} from '../model';\r\nimport {store} from '../store';\r\nimport {ObjViewProps} from './ObjViewProps';\r\nimport {createIdPick, IdPickProps} from '../createIdPick';\r\n\r\nclass Info extends React.Component<DevModel.Service> {\r\n    render() {\r\n        let {url, type, discription, server, app, uq, unit, date_init, date_update} = this.props;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let obj:Prop;\r\n        if (app !== undefined)\r\n            obj = {type: 'component', label: 'APP', component: <div className=\"py-2\"><AppSpan id={app} isLink={true} /></div> };\r\n        else\r\n            obj = {type: 'component', label: 'UQ', component: <div className=\"py-2\"><UqSpan id={uq} isLink={true} /></div> };\r\n\r\n        let rows:Prop[] = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={discription} discription={url} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            {type: 'component', label: '服务器', component: <div className=\"py-2\"><ServerSpan id={server} isLink={true} /></div> },\r\n            obj,\r\n        ];\r\n        return <div>\r\n            <PropGrid rows={rows} values={this.props} />\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst idPickServerProps: IdPickProps = {\r\n    caption: '选择服务器',\r\n    searchPlaceHolder: '搜索服务器',\r\n    candidateItems: async (params:any, key:string) => {\r\n        await store.dev.searchServer.first(key);\r\n        return store.dev.searchServer.items;\r\n    },\r\n    moreCandidates: async () => {\r\n        await store.dev.searchServer.more();\r\n    },\r\n    row: (item:DevModel.Server, index:number) => {\r\n        return <div className=\"px-3 py-2\">{item.discription + ' ' + item.cloud + ' ' + item.ip}</div>;\r\n    },\r\n};\r\n\r\nconst idPickAppProps: IdPickProps = {\r\n    caption: '选择APP',\r\n    searchPlaceHolder: '搜索APP',\r\n    candidateItems: async (params:any, key:string) => {\r\n        await store.dev.searchApp.first(key);\r\n        return store.dev.searchApp.items;\r\n    },\r\n    moreCandidates: async () => {\r\n        await store.dev.searchApp.more();\r\n    },\r\n    row: (item:DevModel.App, index:number) => {\r\n        return <div>{item.name + ' ' + item.discription}</div>;\r\n    },\r\n};\r\n\r\nconst idPickUqProps: IdPickProps = {\r\n    caption: '选择UQ',\r\n    searchPlaceHolder: '搜索UQ',\r\n    candidateItems: async (params:any, key:string) => {\r\n        await store.dev.searchUq.first(key);\r\n        return store.dev.searchUq.items;\r\n    },\r\n    moreCandidates: async () => {\r\n        await store.dev.searchUq.more();\r\n    },\r\n    row: (item:DevModel.UQ, index:number) => {\r\n        return <div>{item.name + ' ' + item.discription}</div>;\r\n    },\r\n};\r\n\r\nconst serviceTypeNames = ['中心', '交换', 'APP', 'UQ'];\r\nconst urlField:Field = {name: 'url', type: 'string', required:true, maxLength:200};\r\nconst discriptionField:Field = {name: 'discription', type: 'string', maxLength:100};\r\nconst serverField:Field = {name: 'server', type: 'id'};\r\nconst bindTypeField:Field = {name: 'type', type: 'number'};\r\nconst bindIdField:Field = {name: 'bindId', type: 'number'};\r\nconst authField:Field = {name: 'auth', type: 'string', maxLength:200};\r\n\r\nconst urlRow = {\r\n    label: 'URL',\r\n    field: urlField,\r\n};\r\nconst discriptionRow = {\r\n    label: '描述',\r\n    field: discriptionField,\r\n};\r\n\r\nconst serverRow = {\r\n    label: '服务器', \r\n    field: serverField,\r\n    face: {\r\n        type: 'pick-id', \r\n        initCaption: '请选择服务器', \r\n        pick: createIdPick(idPickServerProps), //this.idPick,\r\n        fromPicked: (item:DevModel.Server)=>{\r\n            return {\r\n                id: item.id, \r\n                caption: item.discription + ' ' + item.ip,\r\n            };\r\n        },\r\n        itemFromId: (id:number)=>store.cacheServers.get(id),\r\n    },\r\n};\r\n\r\nconst servicesProps:ObjViewProps<DevModel.Service> = {\r\n    title: 'Service',\r\n    info: Info,\r\n    formRows: [\r\n        urlRow,\r\n        discriptionRow,\r\n        serverRow,\r\n    ],\r\n    steps: {\r\n        step1: {\r\n            formRows: [\r\n                {\r\n                    label: '服务类型', \r\n                    field: bindTypeField,\r\n                    face: {\r\n                        type: 'select', \r\n                        list: [\r\n                            {text:'APP', value:2}, \r\n                            {text:'UQ', value:3}\r\n                        ]\r\n                    }\r\n                },\r\n            ],\r\n            next: (values:any) => {\r\n                switch (values['type']) {\r\n                    case 2: return 'appStep';\r\n                    case 3: return 'uqStep';\r\n                }\r\n            },\r\n            ex: '服务类型',\r\n        },\r\n        appStep: {\r\n            formRows: [\r\n                urlRow,\r\n                discriptionRow,\r\n                serverRow,\r\n                {\r\n                    label: 'APP', \r\n                    field: bindIdField,\r\n                    face:{\r\n                        type: 'pick-id', \r\n                        initCaption: '请选择APP', \r\n                        pick: createIdPick(idPickAppProps), //this.idPick,\r\n                        fromPickedItem: (item:DevModel.App)=>{\r\n                            return {id: item.id, caption: item.name + ' ' + item.discription}\r\n                        },\r\n                    },\r\n                },\r\n            ],\r\n            next: undefined,\r\n            ex: '绑定APP'\r\n        },\r\n        uqStep: {\r\n            formRows: [\r\n                urlRow,\r\n                discriptionRow,\r\n                serverRow,\r\n                {\r\n                    label: 'UQ', \r\n                    field: bindIdField,\r\n                    face:{\r\n                        type: 'pick-id', \r\n                        initCaption: '请选择UQ', \r\n                        pick: createIdPick(idPickUqProps), //this.idPick,\r\n                        fromPickedItem: (item:DevModel.UQ)=>{\r\n                            return {id: item.id, caption: item.name + ' ' + item.discription}\r\n                        },\r\n                    },\r\n                },                \r\n                { label: 'Auth', field: authField },\r\n            ],\r\n            next: undefined,\r\n            ex: '绑定UQ',\r\n        },\r\n    },\r\n    stepHeader: (step:Step, num:number):JSX.Element => {\r\n        return <div className=\"d-flex justify-content-center align-items-center\">\r\n            <h4><small className=\"text-muted\">第{num}步</small> {step.ex}</h4>\r\n        </div>;\r\n    },\r\n    row: (item:DevModel.Service):JSX.Element => {\r\n        return <Row\r\n            icon={appItemIcon}\r\n            main={item.url}\r\n            vice={serviceTypeNames[item.type] + ': ' + item.discription} />;\r\n    },\r\n    items: ()=>store.dev.services,\r\n    repeated: {\r\n        name: 'url',\r\n        err: 'url重复',\r\n    }\r\n};\r\n\r\nexport default servicesProps;\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {FormRow, TonvaForm, Step, MultiStep, DropdownActions, Action, List, FA, SubmitResult} from 'tonva-react-form';\r\nimport {DevModel} from '../model';\r\nimport { ObjViewProps } from './ObjViewProps';\r\n\r\n@observer\r\nexport class ObjView<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    async componentDidMount() {\r\n        await this.props.items().load();\r\n    }\r\n    //converter(item:T):ListItem {\r\n    //    return this.props.converter(item);\r\n    //}\r\n    newItem() {\r\n        this.props.items().cur = undefined;\r\n        nav.push(<New {...this.props} />);\r\n    }\r\n    itemClick = (item:T) => {\r\n        this.props.items().cur = observable(item);\r\n        nav.push(<Info {...this.props} />);\r\n    }\r\n    render() {\r\n        let {title, items} = this.props;\r\n        let right = <button className='btn btn-secondary btn-sm' onClick={()=>this.newItem()}><FA name=\"plus\" /></button>;\r\n        return <Page header={title} right={right}>\r\n            <List items={items().items}\r\n                item={{render: this.props.row, onClick: this.itemClick}}\r\n                // converter={this.props.converter} \r\n                //itemClick={this.itemClick} \r\n                />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass New<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    async onSubmit(values:any):Promise<SubmitResult> {\r\n        let ret = await this.props.items().saveCur(values);\r\n        if (ret === true) {\r\n            nav.pop();\r\n        }\r\n        else {\r\n            let repeated = this.props.repeated;\r\n            //this.formView.setError(repeated.name, repeated.err);\r\n        }\r\n        return;\r\n    }\r\n    render() {\r\n        let content;\r\n        let {title, steps, stepHeader} = this.props;\r\n        let {formRows, items} = this.props;\r\n        if (steps !== undefined) {\r\n            content = <MultiStep className=\"mt-4\" header={stepHeader} steps={steps} first=\"step1\" onSubmit={this.onSubmit} />;\r\n        }\r\n        else if (formRows !== undefined) {\r\n            content = <TonvaForm \r\n                className=\"m-3\"\r\n                formRows={formRows} \r\n                onSubmit={this.onSubmit} initValues={items().cur} />;\r\n        }\r\n        else {\r\n            content = \"ObjViewProps: no steps and no formRows\";\r\n        }\r\n        return <Page header={'新增'+title}>\r\n            {content}\r\n        </Page>\r\n    }\r\n}\r\n\r\n@observer\r\nclass Info<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    private menuItems = [\r\n        {caption:'修改' + this.props.title, action:this.editItem.bind(this), icon:'edit' },\r\n        {caption:'删除', action:this.deleteItem.bind(this), icon:'trash-o' }\r\n    ];\r\n    async deleteItem() {\r\n        if (confirm('真的要删除吗？系统删除时并不会检查相关引用，请谨慎') === true) {\r\n            await this.props.items().del();\r\n            nav.pop();\r\n        }\r\n    }\r\n    editItem() {\r\n        nav.push(<Edit {...this.props} />);\r\n    }\r\n    render() {\r\n        let actions = [];\r\n        let ex = this.props.extraMenuActions;\r\n        if (ex !== undefined) actions.push(...ex);\r\n        actions.push(...this.menuItems);        \r\n        let right = <DropdownActions actions={actions} />\r\n        let item = this.props.items().cur;\r\n        return <Page header={this.props.title + ' - 详细资料'} right={right}>\r\n            <this.props.info {...item} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass Edit<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    private actions = [\r\n        {caption:'删除', action:this.deleteItem.bind(this), icon:'trash-o' }\r\n    ];\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    componentWillMount() {\r\n    }\r\n    async onSubmit(values:any):Promise<SubmitResult> {\r\n        await this.props.items().saveCur(values);\r\n        nav.pop();\r\n        return;\r\n    }\r\n    async deleteItem() {\r\n        if (confirm('真的要删除吗？系统删除时并不会检查相关引用，请谨慎') === true) {\r\n            await this.props.items().del();\r\n            nav.pop();\r\n        }\r\n    }\r\n    render() {\r\n        let right = <DropdownActions actions={this.actions} />\r\n        return <Page header={'修改 '+this.props.title} right={right} back=\"close\">\r\n            <TonvaForm \r\n                className=\"m-3\"\r\n                formRows={this.props.formRows} \r\n                onSubmit={this.onSubmit} initValues={this.props.items().cur} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { List, SearchBox, LMR, FA } from 'tonva-react-form';\r\nimport { UsersController, UserApps, AppUsers } from './cUsers';\r\n\r\nexport class VApps extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private renderRow = (appUsers: AppUsers, index:number):JSX.Element => {\r\n        let {app, users} = appUsers;\r\n        let {id, name, discription} = app;\r\n        let right = <small className=\"text-muted\">{discription}</small>;\r\n        return <div className=\"d-block px-3 py-2\">\r\n            <LMR className=\"mb-2\" right={right}>\r\n                <FA name=\"address-card-o\" className=\"text-primary mr-3\" />\r\n                <b>{name}</b>\r\n            </LMR>\r\n            <div>\r\n                <small className=\"text-muted\">用户: </small>\r\n                {users.length===0?'[无]':users.map(u => u.assigned || u.nick || u.name).join(', ')}\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {appUsersList, searchApp, onAppsClick} = this.controller;\r\n        let searchBox = <SearchBox className=\"w-100 pr-1\" \r\n            onSearch={searchApp} \r\n            placeholder=\"搜索App\" \r\n            allowEmptySearch={true} />;\r\n        return <Page header={searchBox}>\r\n            <List items={appUsersList} \r\n                item={{render: this.renderRow, onClick:onAppsClick,  key: (item=>item.app.id)}} />\r\n        </Page>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { List, SearchBox, LMR, FA } from 'tonva-react-form';\r\nimport { UsersController, UserApps } from './cUsers';\r\n\r\nexport class VUsers extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private renderRow = (userApps: UserApps, index:number):JSX.Element => {\r\n        let {user, apps} = userApps;\r\n        let {id, name, nick, icon, assigned} = user;\r\n        return <div className=\"d-block px-3 py-2\">\r\n            <div className=\"mb-2\">\r\n                <FA name=\"user-o\" className=\"text-primary mr-3\" />\r\n                <b>{assigned || nick || name}</b>\r\n            </div>\r\n            <div>\r\n                <small className=\"text-muted\">App: </small>\r\n                {apps.length===0?'[无]':apps.map(a => a.name).join(', ')}\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {userAppsList, searchUser, onUsersClick} = this.controller;\r\n        let searchBox = <SearchBox className=\"w-100 pr-1\" \r\n            onSearch={searchUser} \r\n            placeholder=\"搜索用户\" \r\n            allowEmptySearch={true} />;\r\n        return <Page header={searchBox}>\r\n            <List items={userAppsList} \r\n                item={{render: this.renderRow, onClick:onUsersClick, key: (item=>item.user.id)}} />\r\n        </Page>;\r\n    });\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { List, SearchBox, LMR, Muted } from 'tonva-react-form';\r\nimport { UsersController, UserApps, AppUsers, User } from './cUsers';\r\n\r\nexport class VApp extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curApp, curAppUsers, onAppEditUsers} = this.controller;\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={()=>onAppEditUsers()}>增减用户</button>;\r\n        return <Page header={'App - ' + (curApp.name)} right={right}>\r\n            <List items={curAppUsers} item={{render:this.renderApp}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderApp = (user: User, index:number):JSX.Element => {\r\n        let {name, nick, assigned} = user;\r\n        let content:any;\r\n        if (assigned)\r\n            content = <span>{assigned} &nbsp; <small className=\"text-muted\">{name}</small></span>;\r\n        else if (nick)\r\n            content = <span>{nick} &nbsp; <small className=\"text-muted\">{name}</small></span>;\r\n        else\r\n            content = <>{name}</>\r\n        return <div className=\"px-3 py-2\">{content}</div>\r\n    }\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { List, SearchBox, LMR } from 'tonva-react-form';\r\nimport { UsersController, UserApps, AppUsers, App } from './cUsers';\r\n\r\nexport class VUser extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curUser, curUserApps, onUserEditApps} = this.controller;\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={()=>onUserEditApps()}>增减App</button>;\r\n        return <Page header={'用户 - ' + (curUser.assigned || curUser.nick || curUser.name)}\r\n            right={right}>\r\n            <List items={curUserApps} item={{render:this.renderApp}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderApp = (app: App, index:number):JSX.Element => {\r\n        let {name, discription} = app;\r\n        return <div className=\"px-3 py-2\">{name} {discription}</div>\r\n    }\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { List, SearchBox, LMR, Muted, FA } from 'tonva-react-form';\r\nimport { UsersController, UserApps, AppUsers, User, EditUser } from './cUsers';\r\n\r\nexport class VAppEditUsers extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curApp, appEditUsers, onAppEditUsers} = this.controller;\r\n        return <Page header={curApp.name + ' - 增减用户'} >\r\n            <List items={appEditUsers} item={{render:this.renderUser}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderUser = (editUser: EditUser, index:number):JSX.Element => {\r\n        let {name, nick, assigned, bind} = editUser;\r\n        let content:any;\r\n        if (assigned)\r\n            content = <>{assigned} <Muted>{name}</Muted></>;\r\n        else if (nick)\r\n            content = <>{nick} <Muted>{name}</Muted></>;\r\n        else\r\n            content = <>{name}</>\r\n        let right = <input type=\"checkbox\" defaultChecked={bind===1} \r\n            onChange={(evt)=>this.onUserChanged(editUser, evt.target.checked)} />;\r\n        return <LMR className=\"px-3 py-2 align-items-center\" right={right}>\r\n            {content}\r\n        </LMR>\r\n    }\r\n\r\n    private onUserChanged = async (editUser: EditUser, checked:boolean) => {\r\n        await this.controller.bindAppUser(editUser, checked);\r\n        editUser.bind = checked===true? 1: 0;\r\n    }\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { List, SearchBox, LMR } from 'tonva-react-form';\r\nimport { UsersController, UserApps, AppUsers, App, EditApp } from './cUsers';\r\n\r\nexport class VUserEditApps extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curUser, userEditApps, onUserEditApps} = this.controller;\r\n        return <Page header={'增减App - ' + (curUser.assigned || curUser.nick || curUser.name)}>\r\n            <List items={userEditApps} item={{render:this.renderApp}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderApp = (editApp: EditApp, index:number):JSX.Element => {\r\n        let {name, discription, bind} = editApp;\r\n        let right = <input type=\"checkbox\" defaultChecked={bind===1} \r\n            onChange={(evt)=>this.onAppChanged(editApp, evt.target.checked)} />;\r\n        return <LMR className=\"px-3 py-2\" right={right}>\r\n            {name} {discription}\r\n        </LMR>\r\n    }\r\n\r\n    private onAppChanged = async (editApp: EditApp, checked:boolean) => {\r\n        await this.controller.bindUserApp(editApp, checked);\r\n        editApp.bind = checked===true? 1: 0;\r\n    }\r\n}","import * as React from 'react';\r\nimport { VPage, Page, Image, nav } from \"tonva-tools\";\r\nimport { UsersController, User } from \"./cUsers\";\r\nimport { SearchBox } from 'tonva-react-form';\r\nimport { mainApi } from 'api';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class VAddUser extends VPage<UsersController> {\r\n    @observable private user: User = null;\r\n    //@observable private addedUser: User;\r\n    private searchBox: SearchBox;\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(():JSX.Element => {\r\n        let searchBox = <SearchBox ref={v=>this.searchBox=v}\r\n            className=\"w-100\"\r\n            onSearch={this.onSearch}\r\n            onFocus={this.onSearchFocus}\r\n            placeholder=\"用户全名/手机号/邮箱\"\r\n             />;\r\n        let content:any;\r\n        if (this.user === null) {\r\n        }\r\n        else if (this.user === undefined) {\r\n            content = <div className=\"text-info p-3\">没有找到用户</div>;\r\n        }\r\n        else {\r\n            let {name, nick, icon} = this.user;\r\n            let divUser:any;\r\n            if (nick) {\r\n                divUser = <><div><b>{nick}</b></div><div>{name}</div></>;\r\n            }\r\n            else {\r\n                divUser = <div><b>{name}</b></div>;\r\n            }\r\n            content = <div>\r\n                <div className=\"m-3 p-3 d-flex bg-white\">\r\n                    <Image src={icon} />\r\n                    <div className=\"ml-3\">{divUser}</div>\r\n                </div>\r\n                <div className=\"d-flex justify-content-center\">\r\n                    <button className=\"btn btn-success text-center\" onClick={this.onAddUser}>增加用户</button>\r\n                </div>\r\n            </div>;\r\n        }\r\n        /*\r\n        let divUserAdded:any;\r\n        if (this.addedUser) {\r\n            divUserAdded = <div className=\"p-3\">\r\n                <div>\r\n                    新增用户: {this.addedUser.name} &nbsp; &nbsp; \r\n                    <button className=\"btn btn-success\" \r\n                        onClick={()=>this.controller.onUserEditApps()}>\r\n                        为用户添加App\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        }\r\n        */\r\n        return <Page header={searchBox}>\r\n            {content}\r\n        </Page>;\r\n    })\r\n    //{divUserAdded}\r\n\r\n    private onSearch = async (key:string) => {\r\n        this.user = await mainApi.userFromKey(key);\r\n    }\r\n\r\n    private onAddUser = async () => {\r\n        await this.controller.addUser(this.user.id);\r\n        this.controller.curUser = this.user;\r\n        this.user = null;\r\n        this.searchBox.clear();\r\n        this.replacePage(this.addedPage);\r\n    }\r\n\r\n    private onSearchFocus = () => {\r\n        this.user = null;\r\n        //this.addedUser = null;\r\n        if (this.searchBox) this.searchBox.clear();\r\n    }\r\n\r\n    private onAddApps = () => {\r\n        this.closePage();\r\n        this.controller.onUserEditApps();\r\n    }\r\n\r\n    private onContinueAddUser = () => {\r\n        this.closePage();\r\n        this.controller.onAddUser();\r\n    }\r\n\r\n    private addedPage = () => {\r\n        return <Page header=\"添加成功\">\r\n            <div className=\"p-3 text-center\">\r\n                <div>\r\n                    新增用户: {this.controller.curUser.name}\r\n                </div>\r\n                <div className=\"mt-3\">\r\n                    <button className=\"btn btn-success mr-3\" \r\n                        onClick={this.onAddApps}>\r\n                        为用户添加App\r\n                    </button>\r\n                    <button className=\"btn btn-outline-primary\"\r\n                        onClick={this.onContinueAddUser}>\r\n                        继续添加新用户\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { Controller, VPage, Page } from \"tonva-tools\";\r\nimport { mainApi } from 'api';\r\nimport { LMR, FA } from 'tonva-react-form';\r\nimport { VApps } from './vApps';\r\nimport { VUsers } from './vUsers';\r\nimport { VApp } from './vApp';\r\nimport { VUser } from './vUser';\r\nimport { VAppEditUsers } from './vAppEditUsers';\r\nimport { VUserEditApps } from './vUserEditApps';\r\nimport { VAddUser } from './VAddUser';\r\nimport { Unit } from 'model';\r\n\r\nexport interface User {\r\n    id: number;\r\n    name: string;\r\n    nick: string;\r\n    icon: string;\r\n    assigned: string;\r\n}\r\nexport interface App {\r\n    id: number;\r\n    name: string;\r\n    discription: string;\r\n}\r\nexport interface UserApps {\r\n    user: User;\r\n    apps: App[];\r\n}\r\nexport interface AppUsers {\r\n    app: App;\r\n    users: User[];\r\n}\r\nexport interface EditApp extends App {\r\n    bind: number;   // 0: not bind, 1: bind\r\n}\r\nexport interface EditUser extends User {\r\n    bind: number;  // 0: not bind, 1: bind\r\n}\r\n\r\nexport class UsersController extends Controller {\r\n    private unit: Unit;\r\n    @observable userAppsList: UserApps[];\r\n    @observable appUsersList: AppUsers[];\r\n    curUser: User;\r\n    @observable curUserApps: App[];\r\n    @observable userEditApps: EditApp[];\r\n    curApp: App;\r\n    @observable curAppUsers: User[];\r\n    @observable appEditUsers: EditUser[];\r\n\r\n    protected async internalStart(unit:Unit) {\r\n        this.unit = unit;\r\n        let cn = \"bg-white px-3 py-2 my-1\";\r\n        let appIcon = <FA name=\"columns\" className=\"text-primary mr-3\" />;\r\n        let userIcon = <FA name=\"user-plus\" className=\"text-primary mr-3\" />;\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={this.onAddUser}><FA name=\"plus\" /></button>;\r\n        this.openPage(<Page header={'用户管理 - ' +  this.unit.name} right={right}>\r\n            <LMR className={cn} onClick={this.onAppUsers} left={appIcon}>App</LMR>\r\n            <LMR className={cn} onClick={this.onUserApps} left={userIcon}>用户</LMR>\r\n        </Page>);\r\n    }\r\n\r\n    private onAppUsers = async () => {\r\n        await this.loadAppUsers(undefined);\r\n        this.openVPage(VApps);\r\n    }\r\n\r\n    private onUserApps = async () => {\r\n        await this.loadUserApps(undefined);\r\n        this.openVPage(VUsers);\r\n    }\r\n\r\n    private async loadAppUsers(key:string) {\r\n        let list:AppUsers[] = [];\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        let ret = await mainApi.unitAppUsers(this.unit.id, key, pageStart, pageSize);\r\n        let apps = ret[0];\r\n        let users = ret[1];\r\n        let coll: {[id:number]:AppUsers} = {}\r\n        for (let a of apps) {\r\n            let app:App = {\r\n                id: a.id,\r\n                name: a.name,\r\n                discription: a.discription,\r\n            };\r\n            list.push(coll[a.id] = {app:app, users:[]});\r\n        }\r\n        for (let u of users) {\r\n            let user:User = {\r\n                id: u.user,\r\n                name: u.name,\r\n                nick: u.nick,\r\n                icon: u.icon,\r\n                assigned: u.assigned\r\n            }\r\n            coll[u.app].users.push(user);\r\n        }\r\n        this.appUsersList = list;\r\n    }\r\n\r\n    private async loadUserApps(key:string) {\r\n        let list:UserApps[] = [];\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        let ret = await mainApi.unitUsers(this.unit.id, key, pageStart, pageSize);\r\n        let users = ret[0];\r\n        let apps = ret[1];\r\n        let coll: {[id:number]:UserApps} = {}\r\n        for (let u of users) {\r\n            let user:User = {\r\n                id: u.id,\r\n                name: u.name,\r\n                nick: u.nick,\r\n                icon: u.icon,\r\n                assigned: u.assigned\r\n            };\r\n            list.push(coll[u.id] = {user:user, apps:[]});\r\n        }\r\n        for (let a of apps) {\r\n            let app:App = {\r\n                id: a.app,\r\n                name: a.name,\r\n                discription: a.discription,\r\n            }\r\n            coll[a.user].apps.push(app);\r\n        }\r\n        this.userAppsList = list;\r\n    }\r\n\r\n    searchUser = async(key:string) => {\r\n        await this.loadUserApps(key);\r\n    }\r\n\r\n    searchApp = async(key:string) => {\r\n        await this.loadAppUsers(key);\r\n    }\r\n\r\n    onAppsClick = async (appUsers: AppUsers) => {\r\n        this.curApp = appUsers.app;\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.curAppUsers = await mainApi.unitOneAppUsers(this.unit.id, this.curApp.id, pageStart, pageSize);\r\n        this.openVPage(VApp);\r\n    }\r\n\r\n    onUsersClick = async (userApps: UserApps) => {\r\n        this.curUser = userApps.user;\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.curUserApps = await mainApi.unitOneUserApps(this.unit.id, this.curUser.id, pageStart, pageSize);\r\n        this.openVPage(VUser);\r\n    }\r\n\r\n    onAppEditUsers = async (key?:string) => {\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.appEditUsers = await mainApi.unitAppEditUsers(this.unit.id, this.curApp.id, key, pageStart, pageSize);\r\n        this.openVPage(VAppEditUsers);\r\n    }\r\n\r\n    onAddUser = () => {\r\n        this.openVPage(VAddUser);\r\n    }\r\n\r\n    onUserEditApps = async (key?:string) => {\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.userEditApps = await mainApi.unitUserEditApps(this.unit.id, this.curUser.id, key, pageStart, pageSize);\r\n        this.openVPage(VUserEditApps);\r\n    }\r\n\r\n    bindAppUser = async(user:User, checked:boolean) => {\r\n        await mainApi.bindAppUser(this.unit.id, this.curApp.id, user.id, checked===true? 1:0);\r\n        let appUsers = this.appUsersList.find(v => v.app.id === this.curApp.id);\r\n        if (checked === true) {\r\n            this.curAppUsers.push(user);\r\n            if (appUsers) appUsers.users.push(user);\r\n        }\r\n        else {\r\n            let index = this.curAppUsers.findIndex(v => v.id === user.id);\r\n            if (index>=0) this.curAppUsers.splice(index, 1);\r\n            if (appUsers) {\r\n                index = appUsers.users.findIndex(v => v.id === user.id);\r\n                if (index>=0) appUsers.users.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    bindUserApp = async(app:App, checked:boolean) => {\r\n        await mainApi.bindAppUser(this.unit.id, app.id, this.curUser.id, checked===true? 1:0);\r\n        if (this.userAppsList === undefined) return;\r\n        let userApps = this.userAppsList.find(v => v.user.id === this.curUser.id);\r\n        if (checked === true) {\r\n            this.curUserApps.push(app);\r\n            if (userApps) userApps.apps.push(app);\r\n        }\r\n        else {\r\n            let index = this.curUserApps.findIndex(v => v.id === app.id);\r\n            if (index>=0) this.curUserApps.splice(index, 1);\r\n            if (userApps) {\r\n                index = userApps.apps.findIndex(v => v.id === app.id);\r\n                if (index>=0) userApps.apps.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    addUser = async (userId: number) => {\r\n        await mainApi.unitAddUser(this.unit.id, userId);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page, meInFrame, Controller, VPage, Image, Edit, ItemSchema, UiSchema, StringSchema, ImageSchema, UiImageItem, UiTextItem} from  'tonva-tools'; \r\nimport {List, LMR, FA, StackedFA, PropGrid, Prop, Muted} from 'tonva-react-form';\r\nimport {StringValueEdit} from './tools';\r\nimport {Unit, UnitApps, UnitAdmin, DevModel} from './model';\r\nimport {store} from './store';\r\nimport Administors from './Administors';\r\nimport AppsPage from './Apps';\r\nimport {Members} from './Members';\r\nimport { mainApi } from 'api';\r\nimport { COrganization } from 'organization';\r\nimport {\r\n    ObjViewProps, ObjView,\r\n    //appsProps, \r\n    busesProps, \r\n    serversProps, /*uqdbsProps, */servicesProps, UQController} from './Dev';\r\nimport { AppController } from './Dev';\r\nimport { UsersController } from 'Users';\r\n\r\nexport class CAdmin extends Controller {\r\n    isProduction: boolean;\r\n    adminUnits: UnitAdmin[]; // 仅仅为Admins调试用。从登录用户获取units\r\n\r\n    private async loadAdminUnits(): Promise<void> {        \r\n        let ret = await mainApi.userAdminUnits();\r\n        let adminUnits = this.adminUnits = ret[0];\r\n        console.log('loadAdminUnits', adminUnits);\r\n        if (adminUnits.length === 1) {\r\n            meInFrame.unit = adminUnits[0].id;\r\n            await store.loadUnit();\r\n        }\r\n    }\r\n    protected async internalStart(param?:any):Promise<void> {\r\n        store.init();\r\n        \r\n        this.isProduction = document.location.hash.startsWith('#tv');\r\n        console.log('admins isProduction %s', this.isProduction);\r\n\r\n        if (this.isProduction === false) {\r\n            await this.loadAdminUnits();\r\n            this.openVPage(VAdmin);\r\n            return;\r\n        }\r\n        await store.loadUnit();\r\n        this.openVPage(VAdmin);\r\n    /*\r\n        let user = nav.user;\r\n        if (user === undefined) {\r\n            console.log('autorun: user has logged out');\r\n            return;\r\n        }\r\n    \r\n        console.log('autorun login');\r\n        */\r\n       /*\r\n        setTimeout(async () => {\r\n            // 等待 tonva-tools 里面的initSubWin的nav.user的赋值\r\n            // 这个地方实际上有问题的，不应该这么写。程序逻辑顺序逻辑错误。\r\n            // 2018-11-5: 临时凑合用延时的方式来解决。\r\n            await store.loadUnit();\r\n            this.showVPage(VAdmin);\r\n        }, 200);\r\n        */\r\n    }\r\n}\r\n\r\nexport class VAdmin extends VPage<CAdmin> {\r\n    async open() {\r\n        let {isProduction, adminUnits} = this.controller;\r\n        if (isProduction === false) {\r\n            switch (adminUnits.length) {\r\n                default: this.openPage(this.selectUnitPage); return;\r\n                case 0: this.openPage(this.noUnitPage); return;\r\n                case 1: this.openPageElement(<AdminPage />); return;\r\n            }\r\n        }\r\n\r\n        if (store.unit === undefined) {\r\n            this.openPage(this.noUnitPage);\r\n            return;\r\n        }\r\n        this.openPageElement(<AdminPage />);\r\n    }\r\n\r\n    private selectUnitPage = () => {\r\n        return <Page header=\"选择小号\" logout={logout}>\r\n            <List items={this.controller.adminUnits} item={{render: this.renderRow, onClick: this.onRowClick}}/>\r\n        </Page>;\r\n    }\r\n\r\n    private noUnitPage = () => {\r\n        let {nick, name} = nav.user;\r\n        return <Page header=\"没有小号\" logout={logout}>\r\n            <div className=\"p-3 small text-info\">\r\n                {nick || name}: 没有需要管理的小号\r\n            </div>\r\n        </Page>\r\n    }\r\n\r\n    protected get view() {return undefined}\r\n\r\n    renderRow = (item: UnitAdmin, index: number):JSX.Element => {\r\n        return <LMR className=\"p-2\" right={'id: ' + item.id}>\r\n            <div>{item.nick || item.name}</div>\r\n        </LMR>;\r\n    }\r\n    onRowClick = async (item: UnitAdmin) => {\r\n        meInFrame.unit = item.id; // 25;\r\n        await store.loadUnit();\r\n        this.closePage();\r\n        this.openPageElement(<AdminPage />);\r\n    }\r\n}\r\n\r\nconst logout = () => {\r\n    store.logout();\r\n}\r\n\r\ninterface ActionItem {\r\n    main: string | JSX.Element;\r\n    right?: string | JSX.Element;\r\n    icon: string|JSX.Element;\r\n    page?: new (props:any) => React.Component;\r\n    //onClick: () => nav.push(<Administors />),\r\n    controller?: Controller;\r\n}\r\n\r\ninterface DevItem<T extends DevModel.ObjBase> {\r\n    title: string;\r\n    count: number;\r\n    icon: string;\r\n    objProps?: ObjViewProps<T>;\r\n    onClick?: ()=>void;\r\n}\r\n\r\ntype Item = ActionItem|DevItem<DevModel.ObjBase>|string;\r\n\r\nconst rArrow = <FA name=\"chevron-right\" />;\r\nconst typeCaptions = {\r\n    1: '开发号',\r\n    2: '小号',\r\n    3: '系统号'\r\n}\r\n@observer\r\ndefault class AdminPage extends React.Component {\r\n    private caption:string;\r\n\r\n    async componentWillMount() {\r\n        let {unit, dev} = store;\r\n        let {isAdmin, isOwner, type} = unit;\r\n        this.caption = typeCaptions[type];\r\n        /*\r\n        switch (type) {\r\n            case 1: this.caption = '开发号'; break;\r\n            case 2: this.caption = '小号'; break;\r\n            case 3: this.caption = '系统号'; break;\r\n        }*/\r\n        if ((type & 1) !== 0) {\r\n            await store.dev.loadCounts();\r\n        }\r\n    }\r\n\r\n    private appsAction:ActionItem = {\r\n        main: '启停App',\r\n        right: rArrow, //'增减',\r\n        icon: 'play-circle-o',\r\n        page: AppsPage,\r\n    };\r\n    private usersAction:ActionItem = {\r\n        main: '用户角色',\r\n        right: rArrow,\r\n        icon: 'users',\r\n        page: Members,\r\n    };\r\n    private newUsersAction:ActionItem = {\r\n        main: '用户管理',\r\n        right: rArrow,\r\n        icon: 'user-o',\r\n        controller: new UsersController(undefined),\r\n    };\r\n    /*\r\n    private devAction:Item = {\r\n        main: <DevActions />,\r\n        right: '程序开发相关管理',\r\n        icon: 'laptop',\r\n        //page: Dev,\r\n    };*/\r\n    private adminsAction:ActionItem = {\r\n        main: '管理员',\r\n        right: rArrow,\r\n        icon: 'universal-access',\r\n        page: Administors,\r\n    };\r\n\r\n    private cOrganization = new COrganization;\r\n    private organizeAction:ActionItem = {\r\n        main: this.cOrganization.label,\r\n        right: rArrow,\r\n        icon: this.cOrganization.icon,\r\n        controller: this.cOrganization\r\n    };\r\n\r\n    private noneAction:ActionItem = {\r\n        main: '请耐心等待分配任务',\r\n        icon: 'hourglass-start',\r\n    };\r\n\r\n    private buildItems():Item[] {\r\n        let {unit, dev} = store;\r\n        let {isAdmin, isOwner, type} = unit;\r\n        let items:Item[] = [];\r\n        if (isOwner === 1) {\r\n            items.push(this.adminsAction);\r\n        }\r\n        console.log('unit:', unit);\r\n        if (isAdmin === 1) {\r\n            if ((type & 2) !== 0) {\r\n                // unit\r\n                items.push(\r\n                    '小号管理',\r\n                    this.appsAction, \r\n                    //this.usersAction, \r\n                    this.newUsersAction, \r\n                    //this.organizeAction\r\n                );\r\n            }\r\n            if ((type & 1) !== 0) {\r\n                // dev unit\r\n                let {counts} = dev;\r\n                //if (counts !== undefined) {\r\n                let devItems:(DevItem<DevModel.ObjBase>|string)[] = [\r\n                    '开发号管理',\r\n                    {\r\n                        title: 'APP', \r\n                        count: counts && counts.app, \r\n                        icon: 'tablet', \r\n                        onClick: () => new AppController(undefined).start(unit.id),\r\n                    },\r\n                    {\r\n                        title: 'UQ', \r\n                        count: counts && counts.uq, \r\n                        icon: 'database', \r\n                        onClick: () => new UQController(undefined).start(unit.id),\r\n                    },\r\n                    {\r\n                        title: 'BUS', \r\n                        count: counts && counts.bus, \r\n                        icon: 'cogs', \r\n                        objProps: busesProps,\r\n                    },\r\n                    {\r\n                        title: 'Server', \r\n                        count: counts && counts.server, \r\n                        icon: 'server', \r\n                        objProps: serversProps,\r\n                    },\r\n                ];\r\n                items.push(...devItems);\r\n            //}\r\n            }\r\n        }\r\n        return items;\r\n    }\r\n    private row = (item:Item, index:number):JSX.Element => {\r\n        if (typeof item === 'string') {\r\n            return <div className=\"px-3 pt-3 pb-1 small text-muted\" style={{backgroundColor:'#f0f0f0'}}>{item}</div>;\r\n        }\r\n        let {title} = item as DevItem<DevModel.ObjBase>;\r\n        let left:any, mid:any, r:any;\r\n        if (title !== undefined) {\r\n            let {icon, count} = item as DevItem<DevModel.ObjBase>;\r\n            left = <FA className=\"text-primary\" name={icon} fixWidth={true} size=\"lg\" />;\r\n            mid = title;\r\n            r = count>0 && <span>{count}</span>;\r\n        }\r\n        else {\r\n            let {right, main, icon} = item as ActionItem;\r\n            left = typeof icon === 'string'? \r\n                <FA className=\"text-primary\" name={icon} fixWidth={true} size=\"lg\" /> :\r\n                item.icon;\r\n            mid = main;\r\n            r = <span>{right}</span>;\r\n        }\r\n        return <LMR className=\"px-3 py-2 align-items-center\" left={left} right={r}>\r\n            <div className=\"px-3\"><b>{mid}</b></div>\r\n        </LMR>;\r\n    }\r\n    private rowClick = async (item:Item) => {\r\n        let {title} = item as DevItem<DevModel.ObjBase>;\r\n        if (title !== undefined) {\r\n            let {objProps, onClick} = item as DevItem<DevModel.ObjBase>;\r\n            if (objProps !== undefined)\r\n                return nav.push(<ObjView {...objProps} />);\r\n            else {\r\n                onClick();\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            let {page:P, controller} = item as ActionItem;\r\n            if (P !== undefined)\r\n                nav.push(<P />);\r\n            else {\r\n                await controller.start(store.unit);\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        let unit:Unit = store.unit;\r\n        if (unit === undefined) {\r\n            console.log(\"admin render without unit\");\r\n            return null;\r\n        }\r\n        console.log(\"admin render with unit\");\r\n        let items = this.buildItems();\r\n        if (items === undefined) {\r\n            return <Page header=\"\" />;\r\n        }\r\n        let header:any, top:any;\r\n        if (unit !== undefined) {\r\n            let {name, nick, icon, discription} = unit;\r\n            header = nick || name;\r\n            if (this.caption !== undefined) header = this.caption + ' - ' + header;            \r\n            top = <LMR className='px-3 my-4 bg-white py-2 cursor-pointer' onClick={()=>nav.push(<UnitProps />)}\r\n                left={<div><Image className=\"w-3c h-3c\" src={icon} /></div>}>\r\n                <div className=\"px-3\">\r\n                    <h6 className='text-dark'>{name}</h6>\r\n                    <h6><small className='text-secondary'>{nick}</small></h6>\r\n                    <div className='small text-info'>{discription}</div>\r\n                </div>\r\n            </LMR>;\r\n        }\r\n        else {\r\n            header = '系统管理';\r\n        }\r\n        return <Page header={header} logout={logout}>\r\n            {top}\r\n            <List items={items} item={{render:this.row, onClick:this.rowClick}} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass UnitProps extends React.Component {\r\n    /*\r\n    private rows:Prop[] = [\r\n        '',\r\n        {label: '标志图', type: 'string', name: 'icon'},\r\n        '=',\r\n        {label: '唯一号', type: 'string', name: 'name'},\r\n        {\r\n            label: '名称', \r\n            type: 'string',\r\n            name: 'nick', \r\n            onClick:()=>nav.push(<StringValueEdit \r\n                title=\"修改名称\"\r\n                value={store.unit.nick}\r\n                onChanged={this.onNickChanged} \r\n                info=\"好的名字会提升接受度\" />)\r\n        },\r\n        {\r\n            label: '说明',\r\n            type: 'string',\r\n            name: 'discription',\r\n            onClick:()=>nav.push(<StringValueEdit \r\n                title=\"修改说明\"\r\n                value={store.unit.discription}\r\n                onChanged={this.onDiscriptionChanged} \r\n                info=\"对小号做一个说明\" />)\r\n        },\r\n    ];\r\n    */\r\n    private schema:ItemSchema[] =[\r\n        {name: 'icon', type: 'image'} as ImageSchema,\r\n        {name: 'nick', type: 'string'} as StringSchema,\r\n        {name: 'discription', type: 'string'} as StringSchema,\r\n    ];\r\n    private uiSchema:UiSchema = {\r\n        items: {\r\n            nick: {widget:'text', label:'别名', placeholder:'好的别名更方便记忆'} as UiTextItem,\r\n            icon: {widget:'image', label:'标志图'} as UiImageItem,\r\n            discription: {widget:'text', label:'描述', placeholder:'简短清晰的描述'} as UiTextItem,\r\n        }\r\n    }\r\n    /*\r\n    async onNickChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.unitChangeProp('nick', value);\r\n    }\r\n    async onDiscriptionChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.unitChangeProp('discription', value);\r\n    }\r\n    */\r\n    private onItemChanged = async (itemSchema:ItemSchema, newValue:any, preValue:any) => {\r\n        let {name} = itemSchema;\r\n        //await userApi.userSetProp(name, newValue);\r\n        await store.unitChangeProp(name, newValue);\r\n        //this.data[name] = newValue;\r\n        //nav.user[name] = newValue;\r\n        //nav.saveLocalUser();\r\n    }\r\n    //<PropGrid rows={this.rows} values={store.unit} alignValue=\"right\" />\r\n    render() {\r\n        return <Page header=\"小号信息\">\r\n            <Edit schema={this.schema} uiSchema={this.uiSchema}\r\n                data={store.unit}\r\n                onItemChanged={this.onItemChanged} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\nimport { nav, NavView } from 'tonva-tools';\nimport { CAdmin } from './Admin';\nimport './App.css';\n\nclass App extends React.Component {\n    async onLogined() {\n        let loc = document.location;\n        nav.clear();\n        //nav.push(<StartPage />);\n        let cAdmin = new CAdmin({});\n        await cAdmin.start();\n    }\n    render() {\n        return (\n            <NavView onLogined={this.onLogined} />\n        )\n    }\n}\n\nexport default App;\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n"],"sourceRoot":""}