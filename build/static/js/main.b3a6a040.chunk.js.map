{"version":3,"sources":["tonva-tools/index.ts","tonva-react-form/index.ts","tonva-react-uq/controllers/CVEntity.tsx","tonva-tools/ui/nav.tsx","tonva-tools/ui/form/context.tsx","tonva-react-uq/controllers/form/viewModel.tsx","tonva-react-uq/tools/jsonStringify.ts","tonva-react-uq/tools/tv.tsx","tonva-react-uq/tools/index.ts","tonva-tools/net/guestApi.ts","tonva-tools/net/index.ts","tonva-tools/net/appBridge.ts","tonva-tools/ui/page.tsx","tonva-tools/net/httpChannelUI.ts","tonva-tools/net/uqApi.ts","tonva-react-uq/controllers/link/cLink.tsx","tonva-react-uq/controllers/link/index.ts","tonva-tools/net/wsChannel.ts","tonva-react-form/uid.ts","tonva-tools/ui/index.ts","tonva-tools/net/host.ts","tonva-tools/uid.ts","tonva-react-uq/controllers/tuid/vTuidMain.tsx","tonva-react-uq/controllers/tuid/vTuidEdit.tsx","tonva-react-uq/controllers/tuid/vTuidSelect.tsx","tonva-react-uq/controllers/tuid/vTuidView.tsx","tonva-react-uq/controllers/tuid/vTuidInfo.tsx","tonva-react-uq/controllers/tuid/pageItems.ts","tonva-react-uq/controllers/tuid/vTuidList.tsx","tonva-react-uq/controllers/tuid/cTuid.ts","tonva-react-uq/controllers/tuid/index.tsx","tonva-tools/ui/image.tsx","tonva-react-uq/controllers/form/vBand.tsx","tonva-react-uq/controllers/form/vSubmit.tsx","tonva-react-uq/controllers/form/rule.ts","tonva-react-uq/controllers/form/vField/vField.tsx","tonva-react-uq/controllers/form/vField/vComputeField.tsx","tonva-react-uq/controllers/form/vArr.tsx","tonva-react-uq/controllers/form/vField/vTuidField.tsx","tonva-react-uq/controllers/form/bandsBuilder.ts","tonva-react-uq/controllers/form/vField/buildVmField.ts","tonva-react-uq/controllers/form/vForm.tsx","tonva-react-uq/controllers/form/index.ts","tonva-tools/net/httpChannel.ts","tonva-tools/ui/res.ts","tonva-react-uq/controllers/index.ts","tonva-react-form/form/control/control.tsx","tonva-react-form/form/control/buttonsControl.tsx","tonva-react-form/form/control/charsControl.tsx","tonva-react-form/form/control/stringControl.tsx","tonva-react-form/form/control/numberControl.tsx","tonva-react-form/form/control/unknownControl.tsx","tonva-react-form/form/control/pickIdControl.tsx","tonva-react-form/form/control/pickTuidControl.tsx","tonva-react-form/form/control/pickControl.tsx","tonva-react-form/form/control/index.ts","tonva-react-form/form/control/checkControl.tsx","tonva-react-form/form/control/radioControl.tsx","tonva-react-form/form/control/selectControl.tsx","tonva-react-form/form/control/textAreaControl.tsx","tonva-react-uq/entities/entity.ts","tonva-react-uq/entities/tuid.ts","tonva-react-uq/entities/action.ts","tonva-react-uq/entities/sheet.ts","tonva-react-uq/entities/query.ts","tonva-react-uq/entities/book.ts","tonva-react-uq/entities/history.ts","tonva-react-uq/entities/map.ts","tonva-react-uq/entities/pending.ts","tonva-react-uq/entities/entities.ts","tonva-react-uq/entities/index.ts","tonva-react-form/form/rowContainer/index.tsx","tonva-tools/user.ts","tonva-tools/net/apiBase.ts","tonva-tools/ui/titleBar.tsx","tonva-react-uq/controllers/query/defaultRow.tsx","tonva-react-uq/controllers/query/vQueryMain.tsx","tonva-react-uq/controllers/query/vQuerySelect.tsx","tonva-react-uq/controllers/query/cQuery.ts","tonva-react-uq/controllers/query/index.ts","tonva-tools/ui/loading.tsx","tonva-tools/ui/resUploader.tsx","tonva-react-form/form/index.ts","tonva-react-form/form/formView.tsx","tonva-react-uq/controllers/CApp.tsx","tonva-react-uq/controllers/icons.tsx","tonva-react-uq/controllers/ControllerUq.ts","tonva-react-uq/centerApi.ts","tonva-tools/ui/form/rules/index.ts","tonva-tools/ui/form/widgets/widget.tsx","tonva-tools/ui/form/widgets/textWidget.tsx","tonva-tools/ui/form/widgets/numberWidget.tsx","tonva-tools/ui/form/widgets/updownWidget.tsx","tonva-tools/ui/form/widgets/dateWidget.tsx","tonva-tools/ui/form/widgets/checkBoxWidget.tsx","tonva-tools/ui/form/widgets/selectWidget.tsx","tonva-tools/ui/form/widgets/idWidget.tsx","tonva-tools/ui/form/widgets/unknown.tsx","tonva-tools/ui/form/widgets/buttonWidget.tsx","tonva-tools/ui/form/widgets/arrComponent.tsx","tonva-tools/ui/form/widgets/factory.tsx","tonva-tools/ui/form/widgets/textareaWidget.tsx","tonva-tools/ui/form/widgets/passwordWidget.tsx","tonva-tools/ui/form/widgets/radioWidget.tsx","tonva-tools/ui/form/widgets/rangeWidget.tsx","tonva-tools/ui/form/widgets/index.ts","tonva-react-uq/controllers/sheet/vMain.tsx","tonva-react-uq/controllers/sheet/vNew.tsx","tonva-react-uq/controllers/sheet/vSheetView.tsx","tonva-react-uq/controllers/sheet/vEdit.tsx","tonva-react-uq/controllers/sheet/vSheetAction.tsx","tonva-react-uq/controllers/sheet/vSchema.tsx","tonva-react-uq/controllers/sheet/vArchives.tsx","tonva-react-uq/controllers/sheet/vList.tsx","tonva-react-uq/controllers/sheet/vArchived.tsx","tonva-react-uq/controllers/sheet/vSheet.tsx","tonva-react-uq/controllers/sheet/vSaved.tsx","tonva-react-uq/controllers/sheet/vSheetProcessing.tsx","tonva-react-uq/controllers/sheet/cSheet.ts","tonva-react-uq/controllers/sheet/index.ts","tonva-react-uq/controllers/book/vBookMain.tsx","tonva-react-uq/controllers/book/cBook.ts","tonva-react-uq/controllers/uq/vUq.tsx","tonva-react-uq/controllers/uq/cUq.tsx","tonva-react-uq/controllers/uq/index.ts","tonva-react-uq/controllers/map/vMain.tsx","tonva-react-uq/controllers/map/inputValues.tsx","tonva-react-uq/controllers/map/cMap.ts","tonva-react-uq/controllers/map/index.ts","tonva-react-uq/controllers/action/vActionMain.tsx","tonva-react-uq/controllers/action/cAction.ts","tonva-react-uq/controllers/action/index.ts","tonva-react-uq/controllers/history/vHistoryMain.tsx","tonva-react-uq/controllers/history/cHistory.ts","tonva-react-uq/controllers/history/index.ts","tonva-react-uq/controllers/pending/vPendingMain.tsx","tonva-react-uq/controllers/pending/cPending.ts","tonva-react-uq/controllers/pending/index.ts","tonva-tools/net/netToken.ts","tonva-tools/left0.ts","tonva-tools/ui/VM.tsx","tonva-tools/ui/schema/index.ts","tonva-tools/pageItems.ts","tonva-tools/cacheIds.ts","tonva-react-form/form/TonvaForm.tsx","tonva-react-form/dropDownActions/index.tsx","tonva-react-form/easyDate/index.tsx","tonva-react-form/media.tsx","tonva-react-form/searchBox.tsx","tonva-react-form/multiStep/index.tsx","tonva-react-form/components/Badge.tsx","tonva-react-form/components/LMR.tsx","tonva-react-form/components/FA.tsx","tonva-react-form/components/Muted.tsx","tonva-react-form/components/index.ts","tonva-react-form/list/base.tsx","tonva-react-form/list/clickable.tsx","tonva-react-form/list/static.tsx","tonva-react-form/list/selectable.tsx","tonva-react-form/list/index.tsx","tonva-tools/ui/edit/itemEdit.tsx","tonva-tools/ui/edit/stringItemEdit.tsx","tonva-tools/ui/edit/imageItemEdit.tsx","tonva-tools/ui/edit/edit.tsx","tonva-react-form/propGrid/row.tsx","tonva-react-form/propGrid/propView.tsx","tonva-react-form/propGrid/PropGrid.tsx","tonva-react-form/propGrid/index.tsx","tonva-tools/ui/form/formRes.ts","tonva-tools/ui/form/form.tsx","tonva-tools/ui/form/field.tsx","tonva-tools/ui/form/index.ts","tonva-react-form/listView/listRow.tsx","tonva-react-form/listView/listView.tsx","tonva-tools/ui/tabs/tabs.tsx","tonva-tools/ui/fetchErrorView.tsx","tonva-tools/local.ts","tonva-tools/img/logo.svg","tools/idDates.tsx","consts.ts","api/mainApi.ts","api/devApi.ts","store/admins.ts","store/dev.ts","store/cacheIds.ts","store/index.ts","tools/span.tsx","tools/unitSpan.tsx","tools/uqSpan.tsx","tools/appSpan.tsx","tools/serverSpan.tsx","tools/stringValueEdit.tsx","Administors/NewFellow.tsx","Administors/EditAdmin.tsx","Administors/index.tsx","Apps/info.tsx","Apps/new.tsx","Apps/index.tsx","Members/newRole.tsx","Members/roleApps.tsx","Members/memberPage.tsx","Members/membersPage.tsx","Members/rolePage.tsx","Members/index.tsx","organization/ui/map/teamPerson/index.tsx","organization/ui/index.ts","organization/ui/map/index.ts","organization/ui/tuid/index.ts","organization/ui/tuid/user.tsx","organization/ui/tuid/organization.tsx","organization/ui/query/index.ts","organization/ui/query/teamPosts.tsx","organization/ui/res/index.ts","organization/ui/res/zh/CN.tsx","organization/op/vOpBinding.tsx","organization/op/vAllPosts.tsx","organization/op/vFullFunction.tsx","organization/op/vSearchUser.tsx","organization/op/cOpBinding.tsx","organization/organization.tsx","createIdPick.tsx","Dev/apps/editPage.tsx","Dev/apps/appsPage.tsx","Dev/apps/appUqs.tsx","Dev/apps/appPage.tsx","Dev/apps/uqBindPage.tsx","Dev/apps/index.tsx","Dev/uqs/uqUpload.tsx","Dev/uqs/newServicePage.tsx","Dev/uqs/servicePage.tsx","Dev/uqs/editPage.tsx","Dev/uqs/uqPage.tsx","Dev/uqs/listPage.tsx","Dev/uqs/index.tsx","Dev/row.tsx","Dev/buses.tsx","Dev/servers.tsx","Dev/services.tsx","Dev/ObjView.tsx","Users/vApps.tsx","Users/vUsers.tsx","Users/vApp.tsx","Users/vUser.tsx","Users/vAppEditUsers.tsx","Users/vUserEditApps.tsx","Users/VAddUser.tsx","Users/cUsers.tsx","Admin.tsx","App.tsx","registerServiceWorker.ts","index.tsx"],"names":["_left0__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d","__webpack_exports__","_net__WEBPACK_IMPORTED_MODULE_2__","_ui__WEBPACK_IMPORTED_MODULE_3__","o","_pageItems__WEBPACK_IMPORTED_MODULE_5__","_cacheIds__WEBPACK_IMPORTED_MODULE_6__","_form__WEBPACK_IMPORTED_MODULE_0__","_list__WEBPACK_IMPORTED_MODULE_1__","_dropDownActions__WEBPACK_IMPORTED_MODULE_2__","_easyDate__WEBPACK_IMPORTED_MODULE_3__","_propGrid__WEBPACK_IMPORTED_MODULE_4__","_components__WEBPACK_IMPORTED_MODULE_5__","_media__WEBPACK_IMPORTED_MODULE_6__","_searchBox__WEBPACK_IMPORTED_MODULE_8__","_multiStep__WEBPACK_IMPORTED_MODULE_9__","CEntity","_ControllerUq__WEBPACK_IMPORTED_MODULE_3__","[object Object]","cUq","entity","ui","res","super","Object","setPrototypeOf","this","x","name","typeName","label","icon","_icons__WEBPACK_IMPORTED_MODULE_2__","loadSchema","onSubmit","values","mode","options","buildFormOptions","ret","_form__WEBPACK_IMPORTED_MODULE_1__","setValues","none","submitCaption","arrNewCaption","arrEditCaption","arrTitleNewButton","fields","arrFields","undefined","new","formUI","form","arrs","inputs","buildInputs","buildFieldsInputs","arr","items","arrFieldInputs","field","_tuid","fieldUI","select","buildSelect","content","buildContent","placeHolder","getTuidPlaceHolder","__awaiter","_ownerField","cTuidSelect","cSelectFrom","param","getValue","autoList","console","log","call","removeCeased","id","idFromItem","useId","queryName","cQuerySelect","VEntity","tonva_tools__WEBPACK_IMPORTED_MODULE_0__","controller","createForm","mobileHeaderStyle","RegExp","test","navigator","userAgent","minHeight","logMark","logs","stackKey","NavView","react__WEBPACK_IMPORTED_MODULE_0__","props","waitCount","isHistoryBack","clearError","setState","fetchError","back","bind","navBack","stack","state","wait","window","addEventListener","nav","set","start","level","length","waitTimeHandler","global","setTimeout","clearTimeout","err","error","unauthorized","showLogin","view","disposer","clear","push","history","pushState","key","ceased","refresh","item","pop","dispose","p","i","len","backLevel","popAndDispose","Error","find","v","confirmClose","confirm","self","top","postMessage","type","message","elWait","elError","className","_fetchErrorView__WEBPACK_IMPORTED_MODULE_4__","assign","map","index","style","visibility","Nav","local","_local__WEBPACK_IMPORTED_MODULE_6__","user","lang","district","_res__WEBPACK_IMPORTED_MODULE_13__","language","culture","guest","g","get","handler","ws","onWsReceiveAny","handlerId","endWsReceive","msg","receive","unitRes","fetch","json","unit","unitName","_net__WEBPACK_IMPORTED_MODULE_7__","getUnitName","unitId","unitFromName","_page__WEBPACK_IMPORTED_MODULE_2__","header","_loading__WEBPACK_IMPORTED_MODULE_14__","url","resHost","centerHost","resUrl","wsHost","loadUnit","setGuest","hash","document","location","origin","isInFrame","startsWith","mif","_net_appBridge__WEBPACK_IMPORTED_MODULE_5__","_net_wsChannel__WEBPACK_IMPORTED_MODULE_12__","parent","logined","notLogined","onLogined","_net_netToken__WEBPACK_IMPORTED_MODULE_3__","token","callback","connect","JSON","stringify","saveLocalUser","showAppView","withBack","lv","e","then","loginView","default","onClick","logout","logoutClear","startWait","endWait","onError","show","replace","ceaseTop","regConfirmClose","confirmBox","apiId","sheetType","sheetId","Promise","resolve","reject","sheet","includes","uh","src","open","date","Date","getTime","toTimeString","step","__decorate","mobx__WEBPACK_IMPORTED_MODULE_1__","Context","uiSchema","data","inNode","isRow","widgets","errors","errorWidgets","renderErrors","mobx_react__WEBPACK_IMPORTED_MODULE_2__","initData","rules","Array","isArray","arrName","subContexts","arrRowContexts","itemName","value","widget","setValue","getDisabled","setDisabled","getReadOnly","setReadOnly","getVisible","setVisible","checkRules","j","checkFieldRules","clearContextErrors","rule","setError","rowContext","removeErrors","checkContextRules","setContextError","addErrorWidget","clearContextError","findIndex","pos","splice","hasError","checkHasError","rowKeySeed","RowContext","parentContext","arrSchema","uiArr","rowKey","itemSchemas","parentData","FormContext","ContextContainer","ViewModel","PureJSONContent","JSONContent","RowContent","mobx_react__WEBPACK_IMPORTED_MODULE_1__","_tools__WEBPACK_IMPORTED_MODULE_2__","vm","replacer","substr","jsonStringify","Tv","index_module","tuidValue","nullUI","ttv","react","bi","_$tuid","_$com","t","controllers","com","getTuidContent","val","valueFromId","boxIdContent","tv","guestApi","uqApi","wsChannel","apiBase","appBridge","host","uqTokens","logoutUqTokens","appsInFrame","meInFrame","_unit","isBridged","setMeInFrame","appHash","parts","split","Number","page","slice","appUrl","u","_uid__WEBPACK_IMPORTED_MODULE_2__","loadAppUqs","appOwner","appName","centerAppApi","_uqApi__WEBPACK_IMPORTED_MODULE_3__","uqs","checkUqs","_ui__WEBPACK_IMPORTED_MODULE_1__","appUq","uq","uqOwner","uqName","uqToken","urlDebug","realUrl","_host__WEBPACK_IMPORTED_MODULE_5__","getUrlOrDebug","at","a","opener","apiName","evt","subWin","source","_wsChannel__WEBPACK_IMPORTED_MODULE_4__","el","getElementById","hidden","hideFrameBack","lodash__WEBPACK_IMPORTED_MODULE_0___default","clone","subFrameStarted","onReceive","initSubWin","from","callId","method","body","result","directCall","callCenterApiFromMessage","bca","brideCenterApis","bridgeCenterApiReturn","appInFrame","onReceiveAppApiMessage","action","onAppApiReturn","bridgeCenterApi","scrollTimeGap","ScrollView","bottomTime","topTime","onScroll","onScrollTop","onScrollBottom","target","scrollTop","offsetHeight","scrollHeight","c","direct","children","forEach","child","_$scroll","toString","eachChild","Page","cur","tabs","tabStates","tab","lodash__WEBPACK_IMPORTED_MODULE_3___default","isSelected","isMounted","t0","onTabClick","load","footer","right","keepHeader","titleBar","title","redDot","img","redDotView","cn","classnames__WEBPACK_IMPORTED_MODULE_2___default","_titleBar__WEBPACK_IMPORTED_MODULE_4__","center","sideBar","invisible","onTouchStart","elFooter","renderTabs","renderSingle","httpChannelUI_HttpChannelNavUI","channelUIs","channelNoUIs","logoutApis","uqApi_channels","uqLocalEntities","localUqs","ls","localStorage","getItem","parse","loginedUserId","isNet","un","__loadAccess","saveLocal","lodash_default","cloneDeep","removeItem","accessValue","str","setItem","isMatch","uqApi_UqApi","basePath","access","showWaiting","channels","channelUI","channel","httpChannel","acc","join","loadAccess","checkAccess","names","post","params","owner","pageStart","pageSize","order","$order","ids","proxy","put","uqApi_UnitxApi","buildChannel","uqApi_CenterAppApi","unitxUq","setCenterUrl","centerToken","centerChannel","centerChannelUI","setCenterToken","userId","uqApi_CenterApi","path","uqTokenApi","unitParam","nowTick","tick","callCenterapi","rLs","rUnit","rAppOwner","rAppName","uqsPure","obj","cachedUqs","Link","cLink_CLink","classnames_default","subAppWindow","setSubAppWindow","win","postWsToTop","WsBase","handlerSeed","anyHandlers","msgHandlers","seed","$type","wsBaseSeed","wsBridge","wsBaseId","WSChannel","that","WebSocket","onopen","ev","onerror","onmessage","wsMessage","onclose","close","event","postWsToSubApp","netThis","send","uid","ALPHABET","ID_LENGTH","rtn","charAt","Math","floor","random","_nav__WEBPACK_IMPORTED_MODULE_0__","_VM__WEBPACK_IMPORTED_MODULE_3__","_schema__WEBPACK_IMPORTED_MODULE_4__","_form__WEBPACK_IMPORTED_MODULE_5__","_res__WEBPACK_IMPORTED_MODULE_7__","_image__WEBPACK_IMPORTED_MODULE_10__","isDevelopment","NODE_ENV","PUBLIC_URL","REACT_APP_CENTER_HOST","REACT_APP_ICON","REACT_APP_ITEM_ICON","hosts","centerhost","reshost","uqhost","unitxhost","uq-build","fetchOptions","headers","Content-Type","tryLocal","getCenterHost","centerUrlFromHost","centerWsFromHost","getResHost","promises","hostArr","hostValue","fetchUrl","debugHostUrl","localCheck","results","all","hostString","indexOf","timeout","text","catch","fetchLocalCheck","_a","vTuidMain_VTuidMain","CVEntity","onNew","onList","onSearch","openPage","link","render","newButton","proxyLinks","isFrom","tonva_tools","tonva_react_form","placeholder","entityRender","entityClick","vTuidEdit_VTuidEdit","next","vTuidEdit_awaiter","vForm","reset","closePage","finish","getValues","save","unique","isCalling","returnCall","openPageElement","size","editView","vTuidSelect_VTuidSelect","mainView","react_default","createElement","initKey","onSearchMain","PageItems","renderMainRow","clickMainRow","before","vTuidSelect_awaiter","searchMain","mainRowContent","ceasePage","showDiv","getIdFromObj","divView","renderDivRow","clickDivRow","divRowContent","showMain","rowContent","viewModel","ownerValue","divs","divItems","getDivItems","vTuidView_VTuidView","vTuidView_awaiter","alert","tools","buildForm","vTuidInfo_VTuidInfo","pageItems_TuidPageItems","tuid","search","vTuidList_VTuidMainListBase","vTuidList_awaiter","renderRow","clickRow","callOnSelected","ownerTop","ownerObj","ownerId","onSelected","VTuidMainList","cTuid_CTuid","buildPageItems","first","searchArr","cTuid_CTuidMain","proxies","linkFromName","cFrom","cUqFrom","cTuidEditFromName","cTuidInfoFromName","cTuidSelectFromName","VTuidMain","VTuidEdit","VTuidList","schemaFrom","openVPage","edit","itemChanged","cTuidInfo","cTuid_CTuidInfo","merge","CTuidEdit","CTuidList","cTuid_CTuidSelect","VTuidSelect","VTuidInfo","Image","_nav__WEBPACK_IMPORTED_MODULE_1__","defaultImage","vBand_VBand","renderContent","addRow","VFieldBand","vField","vBand_VArrBand","vArr","setAddRow","vBand_VSubmitBand","vSubmit","vSubmit_VSubmit","onClickSubmit","submit","isOk","disabled","caption","mobx_module","Rule","RuleRequired","defy","trim","NaN","RuleNum","RuleInt","n","isNaN","isInteger","RuleMin","min","check","RuleMax","max","vField_VField","fieldRes","init","buildRules","required","null","r","readonly","FormMode","editable","vField_decorate","vField_VInputControl","renderError","ref","input","setInputValue","onFocus","onBlur","computeFields","onChange","currentTarget","inputGroup","suffix","ctrlCN","inputType","readOnly","maxLength","onKeyPress","RedMark","color","position","left","VStringField","KeyCode_Neg","KeyCode_Dot","vField_VNumberControl","ch","charCode","extraChars","onKeyDot","onKeyNeg","preventDefault","vField_VIntField","VDecField","VTextField","VDateTimeField","vComputeField_VComputeField","vArr_VArr","ownerForm","onEditRow","rowPage","vArr_awaiter","valueBoxs","onRowChanged","rowValues","$owner","list","renderItem","showRow","editRow","editSubmitCaption","internalAddRow","newSubmitCaption","button","paddingTop","paddingBottom","arrsRes","arrRes","newSubmit","editSubmit","arrUI","vForm_VForm","buttonStyle","textAlign","paddingLeft","paddingRight","overflow","vTuidField_VTuidField","vTuidField_awaiter","showInfo","boxId","idBox","bandsBuilder_BandsBuilder","layout","formItems","bandsOnFly","bandsFromLayout","bands","bandsFromFields","bandFromArr","bandFromField","formItem","rfn","resFromName","buildVField","vFields","vArrs","onFormSubmit","buildFormValues","buildBands","bandColl","bandsBuilder","build","band","getVFields","f","getVArr","getVSubmit","rows","row","fn","initValues","arrList","ctrl","fieldName","valueFromFieldName","propName","buildFieldValues","array","deep","buildObservableValues","vForm_decorate","HttpChannel","isCenter","hostUrl","apiToken","showError","_host__WEBPACK_IMPORTED_MODULE_2__","keys","k","buildOptions","innerFetch","buildError","timeOutHandler","encodeURI","ok","statusText","ct","retJson","toLowerCase","_ui_nav__WEBPACK_IMPORTED_MODULE_1__","_appBridge__WEBPACK_IMPORTED_MODULE_0__","Headers","append","resOptions","resLang","lodash__WEBPACK_IMPORTED_MODULE_0__","_","l","languages","setResOptions","_CApp__WEBPACK_IMPORTED_MODULE_0__","_uq__WEBPACK_IMPORTED_MODULE_2__","_tuid__WEBPACK_IMPORTED_MODULE_4__","_query__WEBPACK_IMPORTED_MODULE_6__","_map__WEBPACK_IMPORTED_MODULE_7__","_form_viewModel__WEBPACK_IMPORTED_MODULE_10__","_formUI__WEBPACK_IMPORTED_MODULE_12__","_ControllerUq__WEBPACK_IMPORTED_MODULE_13__","_link__WEBPACK_IMPORTED_MODULE_15__","_icons__WEBPACK_IMPORTED_MODULE_16__","control_ControlBase","formView","renderControl","filled","validate","control_Control","face","setProps","element","defaultValue","clearErrors","clearValue","isOK","getValueFromElement","notes","buttonsControl_ButtonsControl","otherClick","onOther","readValues","nothing","btnOther","submitButton","otherButton","TxtRequired","charsControl_CharsControl","parseValue","lodash","classnames","form-control","has-success","is-invalid","is-valid","renderInput","stringControl_StringControl","ErrInvalidNumber","ErrMin","ErrMax","unknownControl_UnknownControl","role","unknownControl_EmptyControl","pickIdControl_PickIdControl","pick","fromPicked","onPicked","itemFromId","initCaption","String","controlContent","component","pickIdControl_decorate","pickTuidControl_PickTuidControl","onIdChanged","onFormValues","pickTuidControl_decorate","pickControl_PickControl","pickControl_awaiter","Content","pickControl_decorate","createControl","group","groupRow","createGroupControl","fieldRow","fieldType","defaultFaces","controls","createFieldControl","help","string","password","number","parseFloat","checkbox","trueValue","falseValue","checked","radiobox","selectedIndex","selectedOptions","pick-id","pick-tuid","textarea","int","dec","bool","ln","Entity","entities","typeId","fieldMaps","sys","sName","jName","tvApi","returns","schema","setSchema","buildFieldTuid","buildArrFieldsTuid","getTuid","fieldArr","an","buildFieldsParams","arrResult","pa","rowResult","packRow","packArr","charCodeAt","substring","escape","unpackRow","unpackArr","ch0","fLen","to","vals","maxCacheSize","tuid_Tuid","queue","waitingIds","cache","buildIdBoxer","BoxId","prototype","defineProperty","writable","enumerable","getObj","getCacheValue","toJSON","idName","_id","delete","defer","util","has","cacheTuids","moveToHead","shift","proxied","cacheValue","api","getApiFrom","tuids","tuidIds","cacheTuidFieldValues","afterCacheId","cacheDivIds","tuidGet","divName","cacheFieldsInValue","arrValues","tuidDiv","getDiv","tuidSave","retId","inId","tuidSearch","tuidArrGet","tuidArrSave","tuidArrPos","showTuid","TuidMain","Main","TuidDiv","cacheIds","cApp","cUqFrm","getImportUq","retErrors","cTuidMainFromName","$proxy","action_Action","pack","sheet_Sheet","states","op","ops","actions","discription","appId","sheetSave","app","flow","sheetAction","brief","unpackSheet","flows","getSheet","getArchive","unpack","sheetArchive","sheetArchives","stateSheets","sheet_PageStateItems","stateSheetCount","s","count","getStateSheets","query_Query","isPaged","more","hasMore","startField","buildParams","unpackReturns","$page","query","table","book_Book","queryApiName","history_History","map_Map","queries","newAction","newQuery","add","del","pending_Pending","fieldDefaultValue","entities_Entities","sheets","books","maps","histories","pendings","tuidArr","actionArr","sheetArr","queryArr","bookArr","mapArr","historyArr","pendingArr","loadIds","clearCacheTimer","accesses","buildEntities","loadEntities","buildTuids","buildAccess","div","tuidUrl","cacheTimer","proxyColl","newTuid","fromType","fromObj","book","pending","uqId","newBook","newMap","newHistory","newSheet","newPending","buildSheet","mainFields","ownerField","af","bootstrapCreateRow","elementCreateRow","_control__WEBPACK_IMPORTED_MODULE_1__","RowContainer","cc","control","setInitValues","ElementRowContainer","BootStrapRowContainer","decodeUserToken","decodeGuestToken","jwt_decode__WEBPACK_IMPORTED_MODULE_0__","jwt_decode__WEBPACK_IMPORTED_MODULE_0___default","refetchApi","ApiBase","getHttpChannel","callFetch","TitleBar","logoutClick","navChange","hasBack","href","debugLogout","rightView","b","nick","openWindow","DefaultRow","vQueryMain_VQueryMain","resetPage","loadPage","replacePage","pageResult","queryResult","again","renderExtra","rightClose","queryRow","vQuerySelect_VQuerySelect","vQuerySelect_awaiter","selectRow","vQuerySelect_QueryPageItems","cQuery_CQueryBase","cQuery_CQuery","VQueryMain","main","cQuery_CQuerySelect","VQuerySelect","Loading","ResUploader","upload","files","fileInput","FormData","file","abortController","AbortController","signal","multiple","onFilesChange","_rule__WEBPACK_IMPORTED_MODULE_0__","_field__WEBPACK_IMPORTED_MODULE_1__","_face__WEBPACK_IMPORTED_MODULE_2__","_TonvaForm__WEBPACK_IMPORTED_MODULE_5__","FormView","buildRows","some","every","formRows","createRow","buildRow","buttonsRow","createButtons","_rowContainer__WEBPACK_IMPORTED_MODULE_4__","formRow","formRowCreator","_control__WEBPACK_IMPORTED_MODULE_3__","buttons","CApp","tonva_tools__WEBPACK_IMPORTED_MODULE_1__","tonvaApp","cImportUqs","cUqCollection","tonva_react_form__WEBPACK_IMPORTED_MODULE_2__","onRowClick","selectUnitPage","appUnits","promiseChecks","newCUq","checks","retError","CUq","_uq__WEBPACK_IMPORTED_MODULE_3__","cUqArr","VAppMain","isProduction","loadAppUnits","showUnsupport","loadUqs","clearPrevPages","showMainPage","beforeStart","renderView","sheetTypeId","getCUqFromId","navSheet","_centerApi__WEBPACK_IMPORTED_MODULE_4__","userAppUnits","appContent","appPage","entityIcons","react__WEBPACK_IMPORTED_MODULE_0___default","tonva_react_form__WEBPACK_IMPORTED_MODULE_1__","fixWidth","ControllerUq","centerApi","RuleCustom","func","RulePredefined","rules_RuleNum","minMsg","template","maxMsg","checkMore","integer","widget_Widget","context","itemSchema","fieldProps","contextErrors","onInputChange","changeValue","getUiItem","visible","removeErrorWidget","isChanging","newValue","fromElement","onChanging","onChanged","prev","allowChange","setDataValue","setElementValue","fieldClass","FieldClass","uiLabel","requiredFlag","FieldContainer","Templet","errorList","tag","textWidget_TextWidget","renderTemplet","onKeyDown","numberWidget_NumberWidget","updownWidget_UpdownWidget","keyCode","returnValue","isValidKey","dateWidget_DateWidget","checkBoxWidget_CheckBoxWidget","defaultChecked","selectWidget_SelectWidget","option","selectWidget_decorate","idWidget_IdWidget","pickId","required-item","cursor-pointer","idWidget_decorate","Unknown","dataType","uiType","dataTypes","buttonWidget_ButtonWidget","buttonWidget_awaiter","onButtonClick","observerRender","widgetType","ButtonClass","ArrComponent","selectable","deletable","restorable","getArrRowContexts","arrLabel","ArrContainer","RowSeperator","formSelectable","formDeletable","formRestorable","arrSelectable","arrDeletable","arrRestorable","ac","rc","rs","sep","form_context","typeofTemplet","factory","selectCheck","deleteIcon","$isSelected","$source","isDeleted","$isDeleted","onDelClick","editContainer","deleted","row-selected","Provider","widgetsFactory","datetime","time","month","email","updown","checkboxes","radio","range","typeWidget","getItemSchema","getTypeWidget","WidgetClass","WidgetElement","renderContainer","vMain_VSheetMain","newClick","schemaClick","archivesClick","sheetStateClick","renderState","badge","getStateLabel","templet","statesCount","filter","isDev","vNew_VSheetNew","vNew_awaiter","valuesWithBox","onSave","leftFlowStyle","width","vSheetView_VSheetView","flowRow","preState","sheetView","removed","sheetData","vEdit_VSheetEdit","vEdit_awaiter","saveSheet","controllers_form","vSheetAction_VSheetAction","actionClick","vSheetAction_awaiter","acted","deleteClick","editClick","editSheet","actionButtons","startButtons","no","stateLabel","getActionLabel","backPage","vSchema_VSheetSchema","schemaStringify","vArchives_VArchives","archiveClick","vArchives_awaiter","processing","archiveRow","getArchives","vList_VSheetList","rowClick","vList_awaiter","pageStateItems","listRow","stateName","vArchived_VArchived","vSheet_VSheet","vSaved_VSheetSaved","restart","vSaved_awaiter","vSheetProcessing_VSheetProcessing","cSheet_CSheet","cSheet_awaiter","showSaved","loadStateSheetCount","createPageStateItems","VSheetMain","onSheet","me","$","sheetActPreState","sheetActState","changeStateCount","curState","delta","stateCount","VSheetNew","sheetNew","VSheetSaved","sheetSaved","VSheetEdit","sheetEdit","VSheetSchema","VArchives","VArchived","VSheetList","VSheetAction","VSheetProcessing","showArchived","showAction","showProcessing","onEvent","getSheetData","vCall","inBrief","getArchived","getStateUI","actionName","sheetTitle","disc","vBookMain_VBookMain","cBook_CBook","VBookMain","vUq_VUq","isSysVisible","linkItem","cLink","lists","tuidLinks","mapLinks","sheetLinks","actionLinks","queryLinks","bookLinks","historyLinks","pendingLinks","Fragment","isVisible","controllers_link","cTuidMain","cMap","cSheet","cAction","cQuery","cBook","cHistory","cPending","lowerPropertyName","cUq_CUq","schemaLoaded","CTuidMain","controllers_tuid","CTuidSelect","CTuidInfo","CQuery","CQuerySelect","CMap","CAction","CSheet","CBook","CHistory","controllers_history","CPending","baseUrl","loadEntites","collection","warn","tuidPlaceHolder","en","sheetFromTypeId","startSheet","entityName","cTuidEdit","entityType","cFromName","tUI","cEntity","getUI","VUq","vMain_VMapMain","itemRender","ItemRow","remove","border","valuesView","box","isLeaf","keyIndex","keyUI","keyUIs","keyContent","valuesContent","keyNone","addClick","removeClick","inputValues_VInputValues","onValuesSubmit","inputValues_awaiter","cMap_MapItem","cMap_CMap","cMap_awaiter","keysLen","keyFields","keysLast","idx","keyField","kn","searchParam","ki","searchOnKey","arr1","nullable","rowIndex","createItem","getLable","confirmDelete","v0","q","retFields","newItem","addItem","VMapMain","callParam","vActionMain_VActionMain","resultPage","mainPage","cAction_CAction","VActionMain","vHistoryMain_VHistoryMain","cHistory_CHistory","VHistoryMain","vPendingMain_VPendingMain","cPending_CPending","VPendingMain","netToken","_uqApi__WEBPACK_IMPORTED_MODULE_0__","_wsChannel__WEBPACK_IMPORTED_MODULE_1__","left0","zero","num","fix","Controller","_net__WEBPACK_IMPORTED_MODULE_3__","onMessageReceive","onMessage","isLogined","unregisterReceiveHandler","receiveHandlerId","onDispose","vp","registerReceiveHandler","internalStart","_resolve_$","View","VPage","coordinator","_schema__WEBPACK_IMPORTED_MODULE_0__","_uiSchema__WEBPACK_IMPORTED_MODULE_1__","itemObservable","isFirst","loading","beforeLoad","loaded","allLoaded","firstSize","appendPosition","_items","mobx__WEBPACK_IMPORTED_MODULE_0__","topDiv","_uid__WEBPACK_IMPORTED_MODULE_1__","bottomDiv","setPageStart","unshift","reverse","CacheIds","maxCount","dict","Map","loadId","_loadIds","_loadId","TonvaForm","_formView__WEBPACK_IMPORTED_MODULE_2__","DropdownActions","classnames__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_1___default","handleDocumentClick","dropdownOpen","contains","menu","toggle","removeEventListener","isRight","hasIcon","data-toggle","aria-expanded","dropdown-menu","dropdown-menu-right","aria-hidden","EasyDate","now","nDate","getDate","_date","hour","getHours","minute","getMinutes","getMonth","hm","getFullYear","Media","imgStyle","height","disp","px","py","alt","SearchBox","allowEmptySearch","inputSize","lab","inputClassName","buttonText","mobx__WEBPACK_IMPORTED_MODULE_2__","MultiStep","lodash__WEBPACK_IMPORTED_MODULE_1__","lodash__WEBPACK_IMPORTED_MODULE_1___default","classnames__WEBPACK_IMPORTED_MODULE_2__","_form__WEBPACK_IMPORTED_MODULE_3__","stepViews","topView","onPrev","onNext","stepName","steps","ButtonConten","prefix","btnContent","formProps","setStep","nextStepName","pIcon","sIcon","Badge_Badge","badgeAlign","badgeVertical","LMR_LMR","cursor","LMR_decorate","FA_FA","spin","pull","pulse","rotate","flip","inverse","Muted","base_ListBase","pageItems","selectedItems","nextProps","clickable_Clickable","static_Static","selectable_Selectable","itemsArray","compare","_selectedItems","selected","labelId","si","buildItems","anySelected","onSelect","flex","marginBottom","htmlFor","selectable_decorate","list_List","listBase","nextState","nextContext","updateProps","isLoading","staticRow","list_decorate","itemEdit_ItemEdit","uiItem","isChanged","internalEnd","stringItemEdit_StringItemEdit","preValue","imageItemEdit_ImageItemEdit","imageItemEdit_awaiter","resUploader","resId","padding","ui_image","imageItemEdit_decorate","edit_Edit","defaultSepClassName","defaultRowContainerClassName","edit_awaiter","onItemChanged","onItemClick","itemEdit","createItemEdit","end","topBorderClassName","bottomBorderClassName","sepClassName","rowContainerClassName","topBorder","bottomBorder","elItems","divValue","edit_decorate","PropRow","row_PropBorder","borderTop","row_PropGap","w","backgroundColor","valueAlignStart","valueAlignCenter","valueAlignEnd","row_LabeledPropRow","gridProps","prop","bk","bg-white","renderLabel","renderProp","align","vAlign","col","full","alignValue","renderPropBody","renderPropContent","StringPropRow","NumberPropRow","row_ListPropRow","borderBottom","ComponentPropRow","propView_PropView","isGap","PropGrid_PropGrid","propView","formRes","zh","form_Form","calcSelectOrDelete","formData","arrItemOperated","DefaultContainer","DefaultFieldContainer","fieldLabelSize","labelView","fieldCol","DefaultFieldClass","DefaultButtonClass","DefaultRes","ui_res","py-3","Container","formContext","initDataItem","arrItem","arrItems","arrDict","formArrVal","beforeShow","contextType","listRow_ListRow","pressed","isIcon","noteNum","mid","viceSpan","vice","middle","midSize","unread","uv","va-action","listView_ListView","elHeader","itemClick","converter","ex","listItem","listView_decorate","Tab","_content","contentBuilder","tabs_Tabs","tabClick","selectedTab","tabBack","contentBack","notify","display","notifyCircle","FetchErrorView","reApi","_net__WEBPACK_IMPORTED_MODULE_1__","errContent","LocalData","Data","homeTabCur","module","exports","idDates_IdDates","date_init","date_update","consts_appIcon","appItemIcon","mainApi","toUser","fromUnit","fromApp","fellow","isOwner","isAdmin","apps","member","assigned","roles","devApi","uqsText","service","admins_Admins","store","owners","admins","fellows","unitAdmins","ua","fellowId","unitSetAdmin","removeCur","admin","unitAddAdmin","dev_ObjItems","dev","_load","_save","_inc","_del","_dec","dev_decorate","dev_Apps","searchedUqs","saveApp","delApp","counts","searchUq","searchPageSize","allUqs","appBindUq","dev_Uqs","saveUq","delUq","dev_Buses","buses","saveBus","delBus","bus","dev_Servers","servers","saveServer","delServer","server","dev_Services","services","saveService","delService","changeServiceProp","db","db_type","connection","loadUqServices","SearchItems","dev_Dev","searchApp","searchServer","searchUqdb","cacheIds_CacheUnits","cacheIds_CacheUqs","cacheIds_CacheApps","cacheIds_CacheServers","store_Store","cacheUnits","cacheUqs","cacheApps","cacheServers","memberCount","roleApps","roleMember","roleMembers","memberRoles","unitChangeProp","unitApps","unitMemberCount","uqServer","uqBuilderUrl","unitDeleteApp","inUnit","unitAddApp","unitRoles","unitAddRole","unitRoleChangeProp","unitRoleApps","unitRoleSetApps","unitMembers","unitAssignMember","unitMemberRoles","rId","unitSetMemberRoles","org","store_decorate","store_store","span","isLink","unitSpan_UnitSpan","unitSpan_UnitInfo","unitSpan_decorate","unitSpan_UnitName","uqSpan_UqSpan","uqSpan_UqInfo","uqSpan_decorate","appSpan_AppSpan","appSpan_AppInfo","public","appSpan_decorate","apis","appSpan_AppRow","serverSpan_ServerSpan","serverSpan_ServerInfo","cloud","ip","serverSpan_decorate","stringValueEdit_StringValueEdit","stringValueEdit_awaiter","errorDiv","info","stringValueEdit_TextValueEdit","onTextAreaChange","NewFellow_NewFellowPage","onSendInvitation","NewFellow_awaiter","addNew","NewFellow","NewFellow_decorate","EditAdmin_EditAdmin","isRoot","Fellow","Administors_EditAdmin","EditAdmin_decorate","REACT_APP_DEFAULT_ICON","Administors_AdministorsPage","onNewOwner","newAdmin","onNewAdmin","ownersView","adminsView","onNewFellow","showOwners","showAdmins","Administors","Administors_decorate","info_Info","renderUqRow","uqAccess","act","info_awaiter","appActed","newInUnit","restoreUnitApp","stopUnitApp","newApp","addUnitApp","uqAccesses","faName","info_decorate","new_PageApps","new_NewApp","new_awaiter","appClick","renderApp","new_decorate","Apps_AppsPage","loadApps","ban","src_Apps","Apps_decorate","newRole_NewRole","tf","roleApps_RoleApps","renderRoleApp","memberPage_MemberPage","renderMemberRole","setRole","memberPage_SetRole","loadRoles","loadMemberRoles","orgValue","roleUser","onAssigned","roleClick","memberPage_decorate","setMemberRoles","selectRole","renderRole","roleSelect","membersPage_MembersPage","loadMembers","MemberRow","setRoleUser","roleId","membersPage_MemberSearch","renderMember","userClick","membersPage_decorate","members","rolePage_RolePage","roleAppClick","rolePage_RoleApps","loadRoleApps","rolePage_EditRole","onMembersClick","membersLeft","membersRight","editRole","addRoleApp","rolePage_decorate","roleChangeProp","isSysRole","onNameChanged","onDiscriptionChanged","setRoleApps","appSelect","midClassName","Members_Members","newRole","allUsersClick","Members_decorate","src_organization_ui","teamPerson","tonva_react_uq","_super","searchOnPost","querySelect","team","noStaff","staff","noPost","organization","teamPosts","CN","tuidNullCaption","arrNew","arrEdit","fromUser","subject","getMessage","newMessage","editSumbit","sectionTeam","teamOrganization","person","given","sur","gender","section","vOpBinding_VOpBinding","sheetOpsChanged","stateTosView","tosText","tos","organizationRow","teamRow","observableTeamRow","sectionRow","observableSectionRow","postRow","observablePostRow","stateView","vOpBinding_awaiter","saveOps","selectablePosts","teamsList","teams","defaultSelected","onPostSelectChanged","sections","onTeamSelectChanged","onSectionSelectChanged","organizations","posts","postTos","pid","pto","buildSelectablePost","buildSelectableTeams","teamTos","hasAllTeams","teamId","tto","teamTo0","teamTo0Sections","buildSelectableSections","teamTo","selectableTeam0","hasSection","selectableSection","selectableSections","stateTo","configable","stateClick","tosView","opTos","tosTexts","stateToName","toArr","sp","postId","teamCount","st","sectionCount","ss","sectionId","saveSheetStatePosts","vAllPosts_VAllPosts","onCheckChanged","def","saveChange","vAllPosts_awaiter","saveEntityOpForAll","pageRender","buttonSave","lineHeight","fontWeight","listStyleType","blocks","block","getEntityOpForAll","entityOpForAllResult","entityOpForAll","eaa","vAllPosts_decorate","vFullFunction_VFullFunction","users","onStopFully","vFullFunction_awaiter","onSumitStopFully","onCancelStop","_uq","_user","entityOpUserFully","callSearchUser","onUserSelected","renderUser","pageUsers","onSetFully","tuidUser","onCancelFully","renderSelectUser","usersView","vFullFunction_decorate","vSearchUser_VSearchUser","vSearchUser_PageUsers","onUserClick","vSearchUser_awaiter","cOpBinding_COpBinding","appRender","appView","appsView","cOpBinding_awaiter","entityPosts","opTo","postDict","teamDict","sectionDict","sheetClick","sheetClickOld","renderSetting","settingClick","V","uqRender","nameRender","sheetRender","buildPosts","buildAppsUqs","setUqEntities","queryAllTeams","organizationDict","tm","og","sec","lns","setEntities","setSheets","lines","actionSaveEntityOpPost","opName","organization_COrganization","links","organization_VOrganization","createIdPick","createIdPick_IdPickPage","candidateItems","searchPlaceHolder","ServerCaption","editPage_formRows","editPage_awaiter","moreCandidates","editPage_EditBasePage","editPage_EditPage","editPage_NewPage","appsPage_AppsPage","appList","listRowClick","appRow","appUqs_SearchUqPage","appUqs_awaiter","onUq","getMyUqs","appUqs_decorate","appUqs_AppUqs","removeBind","btnProps","appUqs_Uqs","listHeader","btn","onBind","appPage_AppPage","editItem","appPage_awaiter","deleteItem","deleteApp","menuItems","btnAddUq","uqClick","elAccess","bind_access","uqBindPage_UqBindPage","accessChecked","saveUqBind","uqBindPage_awaiter","removeUqBind","btnDelete","checkAccessList","bc","apps_AppController","apps_awaiter","service_count","buildBindUqs","isNew","uaUq","apps_decorate","uqUpload_UqUpload","upFiles","fileClick","fr","FileReader","onload","uqUpload_UqPage","readAsText","onUpdate","uqUpload_awaiter","update","onUpdateThoroughly","lastModifiedDate","trunc","sz","thoroughly","uqUpload_CompileResult","fileList","fileRender","encType","compiled","doubleClick","pane","getParent","topIntoView","bottomIntoView","texts","seconds","abort","timeHandler","tagName","parentElement","clearTimeHandler","scrollIntoView","reader","getReader","pump","read","done","scrollToBottom","uintArray","encodedString","fromCharCode","apply","decodeURIComponent","uintToString","byteLength","onDoubleClick","wordWrap","whiteSpace","newServicePage_ServerCaption","urlRow","serverRow","newServicePage_awaiter","dbTypeRow","dbRow","connectionRow","newServicePage_NewServicePage","bindId","tonvaForm","servicePage_ServicePage","onUrlChanged","servicePage_awaiter","changeProp","onDbChanged","onDbTypeChanged","onConnectionChanged","onDeleteClick","servicePage_decorate","uqs_editPage_formRows","uqs_editPage_EditBasePage","uqs_editPage_awaiter","uqs_editPage_EditPage","uqs_editPage_NewPage","uqPage_UQPage","uqPage_awaiter","deleteUq","onUqUpload","serviceClick","showNewServicePage","renderService","compile_time","compile","listPage_ListPage","uqList","uqs_UQController","uqs_awaiter","loadUqEntities","uqGetEntities","r0","svc","uqs_decorate","row_Row","buses_Info","buses_SchemaView","buses_decorate","repeated","idPickAppProps","services_awaiter","idPickUqProps","serviceTypeNames","bindIdField","services_urlRow","discriptionRow","services_serverRow","ObjView_ObjView","ObjView_Info","ObjView_New","ObjView_decorate","saveCur","stepHeader","ObjView_Edit","extraMenuActions","vApps_VApps","appUsers","appUsersList","onAppsClick","searchBox","vUsers_VUsers","userApps","userAppsList","searchUser","onUsersClick","vApp_VApp","curApp","curAppUsers","onAppEditUsers","vUser_VUser","curUser","curUserApps","onUserEditApps","vAppEditUsers_VAppEditUsers","appEditUsers","editUser","onUserChanged","vAppEditUsers_awaiter","bindAppUser","vUserEditApps_VUserEditApps","userEditApps","editApp","onAppChanged","vUserEditApps_awaiter","bindUserApp","VAddUser_VAddUser","onSearchFocus","divUser","onAddUser","VAddUser_awaiter","userFromKey","addUser","addedPage","onAddApps","onContinueAddUser","VAddUser_decorate","cUsers_UsersController","onAppUsers","cUsers_awaiter","loadAppUsers","onUserApps","loadUserApps","unitOneAppUsers","unitOneUserApps","unitAppEditUsers","unitUserEditApps","unitAddUser","appIcon","userIcon","unitAppUsers","coll","unitUsers","cUsers_decorate","Admin_CAdmin","userAdminUnits","adminUnits","loadAdminUnits","Admin_VAdmin","noUnitPage","Admin_awaiter","Admin_AdminPage","rArrow","typeCaptions","1","2","3","appsAction","usersAction","newUsersAction","adminsAction","cOrganization","organizeAction","noneAction","objProps","P","loadCounts","devItems","Admin_UnitProps","Admin_decorate","onNickChanged","src_App_0","cAdmin","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","react_dom","URL","response","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b3a6a040.chunk.js","sourcesContent":["export {left0} from './left0';\r\nexport * from './user';\r\nexport * from './net';\r\nexport * from './ui';\r\nexport * from './uid';\r\nexport {PageItems} from './pageItems';\r\nexport {CacheIds} from './cacheIds';\r\n","export * from './form';\r\nexport * from './list';\r\nexport * from './dropDownActions';\r\nexport * from './easyDate';\r\nexport * from './propGrid';\r\nexport * from './components';\r\nexport * from './media';\r\nexport * from './listView';\r\nexport * from './searchBox';\r\nexport * from './multiStep';\r\nexport * from './uid';\r\n","import * as React from 'react';\r\nimport { Controller, VPage, View } from 'tonva-tools';\r\nimport { Entity, Field, TuidMain } from '../entities';\r\nimport { CUq } from './uq/cUq';\r\nimport { VForm, FieldInputs, FieldCall, FormOptions, FormMode } from './form';\r\nimport { CQuerySelect } from './query';\r\nimport { FormUI, FieldTuidUI } from './formUI';\r\nimport { entityIcons } from './icons';\r\nimport { ControllerUq } from './ControllerUq';\r\n\r\nexport interface EntityUI {\r\n    form?: FormUI;\r\n}\r\n\r\nexport abstract class CEntity<T extends Entity, UI extends EntityUI> extends ControllerUq {\r\n    constructor(cUq: CUq, entity: T, ui: UI, res: any) {\r\n        super(cUq, res);\r\n        Object.setPrototypeOf(this.x, cUq.x);\r\n        let {name, typeName} = entity;\r\n        this.entity = entity;\r\n        this.ui = ui; // || entityUI.ui;\r\n        this.label = this.res.label || name;\r\n        this.icon = entityIcons[typeName];\r\n    }\r\n    readonly entity: T;\r\n    readonly ui: UI;\r\n\r\n    protected async beforeStart():Promise<boolean> {\r\n        //if (await super.beforeStart() === false) return false;\r\n        await this.entity.loadSchema();\r\n        return true;\r\n    }\r\n\r\n    createForm(onSubmit:()=>Promise<void>, values?:any, mode?:FormMode) {\r\n        let options = this.buildFormOptions(mode);\r\n        let ret = new VForm(options, onSubmit);\r\n        ret.setValues(values);\r\n        return ret;\r\n    }\r\n\r\n    private buildFormOptions(mode?:FormMode):FormOptions {\r\n        let {fields, arrFields} = this.entity;\r\n        let none, submitCaption, arrNewCaption, arrEditCaption, arrTitleNewButton;\r\n        if (this.res !== undefined) {\r\n            none = this.res['none'];\r\n            submitCaption = this.res['submit'];\r\n            arrNewCaption = this.res['arrNew'];\r\n            arrEditCaption = this.res['arrEdit'];\r\n            arrTitleNewButton = this.res['arrTitleNewButton'];\r\n        }\r\n        if (none === undefined) {\r\n            none = this.cUq.res['none'] || 'none';\r\n        }\r\n        if (submitCaption === undefined)\r\n            submitCaption = this.cUq.res['submit'] || 'Submit';\r\n        if (arrNewCaption === undefined)\r\n            arrNewCaption = this.cUq.res['arrNew'] || 'New';\r\n        if (arrEditCaption === undefined)\r\n            arrEditCaption = this.cUq.res['arrEdit'] || 'Edit';\r\n        if (arrTitleNewButton === undefined)\r\n        arrTitleNewButton = this.cUq.res['arrTitleNewButton'];\r\n        if (mode === undefined) mode = FormMode.new;\r\n        let formUI = this.ui.form;\r\n        let ret:FormOptions = {\r\n            fields: fields,\r\n            arrs: arrFields,\r\n            ui: formUI,\r\n            res: this.res || {},\r\n            inputs: this.buildInputs(formUI),\r\n            none: none,\r\n            submitCaption: submitCaption,\r\n            arrNewCaption: arrNewCaption,\r\n            arrEditCaption: arrEditCaption,\r\n            arrTitleNewButton: arrTitleNewButton,\r\n            mode: mode,\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private buildInputs(formUI: FormUI):FieldInputs {\r\n        let {fields, arrFields} = this.entity;\r\n        let ret:FieldInputs = {};\r\n        this.buildFieldsInputs(ret, fields, undefined, formUI);\r\n        if (arrFields !== undefined) {\r\n            for (let arr of arrFields) {\r\n                let {name, fields} = arr;\r\n                let items = formUI && formUI.items;\r\n                this.buildFieldsInputs(ret, fields, name, items && items[name] as FormUI);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private buildFieldsInputs(ret:FieldInputs, fields:Field[], arr:string, formUI: FormUI) {\r\n        if (arr !== undefined) {\r\n            let arrFieldInputs = ret[arr];\r\n            if (arrFieldInputs === undefined) {\r\n                ret[arr] = arrFieldInputs = {};\r\n                ret = arrFieldInputs;\r\n            }\r\n        }\r\n        for (let field of fields) {\r\n            let {name, _tuid} = field;\r\n            if (_tuid === undefined) continue;\r\n            let fieldUI = formUI && formUI.items && formUI.items[name] as FieldTuidUI;\r\n            ret[name] = {\r\n                select: this.buildSelect(field, arr, fieldUI),\r\n                content: this.buildContent(field, arr),\r\n                placeHolder: this.cUq.getTuidPlaceHolder(_tuid),\r\n            };\r\n        }\r\n    }\r\n\r\n    protected buildSelect(field:Field, arr:string, fieldUI: FieldTuidUI):FieldCall {\r\n        return async (form:VForm, field:Field, values:any):Promise<any> => {\r\n            let {_tuid, _ownerField} = field;\r\n            let cTuidSelect = await (_tuid as TuidMain).cSelectFrom();\r\n            let param:any = undefined;\r\n            if (_ownerField !== undefined) param = form.getValue(_ownerField.name);\r\n            if (fieldUI && fieldUI.autoList === true) {\r\n                console.log('select search set param=empty string');\r\n                param = '';\r\n            }\r\n            let ret = await cTuidSelect.call(param);\r\n            cTuidSelect.removeCeased(); // 清除已经废弃的顶部页面\r\n            if (ret === undefined) return undefined;\r\n            let id = cTuidSelect.idFromItem(ret);\r\n            _tuid.useId(id);\r\n            return id;\r\n        };\r\n    }\r\n\r\n    protected buildContent(field:Field, arr:string): React.StatelessComponent<any> {\r\n        return;\r\n    }\r\n\r\n    cQuerySelect(queryName:string):CQuerySelect {\r\n        return this.cUq.cQuerySelect(queryName);\r\n    }\r\n}\r\n\r\nexport abstract class VEntity<T extends Entity, UI extends EntityUI, C extends CEntity<T, UI>> extends VPage<C> {\r\n    protected readonly entity: T;\r\n    protected readonly ui: UI;\r\n    constructor(controller: C) {\r\n        super(controller);\r\n        this.entity = controller.entity;\r\n        this.ui = controller.ui;\r\n    }\r\n\r\n    get label():string {return this.controller.label}\r\n\r\n    //private _form_$: VForm;\r\n    protected createForm(onSubmit:()=>Promise<void>, values?:any, mode?:FormMode): VForm {\r\n        //if (this._form_$ !== undefined) return this._form_$;\r\n        return this.controller.createForm(onSubmit, values, mode);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport {User, Guest/*, UserInNav*/} from '../user';\r\nimport {Page} from './page';\r\nimport {netToken} from '../net/netToken';\r\nimport FetchErrorView from './fetchErrorView';\r\nimport {FetchError} from '../fetchError';\r\nimport {appUrl, setMeInFrame, logoutUqTokens} from '../net/appBridge';\r\nimport {LocalData} from '../local';\r\nimport {guestApi, logoutApis, setCenterUrl, setCenterToken, WSChannel, meInFrame, isDevelopment, host} from '../net';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport '../css/va-form.css';\r\nimport '../css/va.css';\r\nimport '../css/animation.css';\r\nimport { WsBase, wsBridge } from '../net/wsChannel';\r\nimport { resOptions } from './res';\r\nimport { Loading } from './loading';\r\nimport { Callbacks, Callback } from './callbacks';\r\n\r\nconst regEx = new RegExp('Android|webOS|iPhone|iPad|' +\r\n    'BlackBerry|Windows Phone|'  +\r\n    'Opera Mini|IEMobile|Mobile' , \r\n    'i');\r\nconst isMobile = regEx.test(navigator.userAgent);\r\nexport const mobileHeaderStyle = isMobile? {\r\n    minHeight:  '3em'\r\n} : undefined;\r\n\r\nconst logo = require('../img/logo.svg');\r\nlet logMark: number;\r\nconst logs:string[] = [];\r\n\r\nexport interface Props //extends React.Props<Nav>\r\n{\r\n    //view: JSX.Element | (()=>JSX.Element);\r\n    //start?: ()=>Promise<void>;\r\n    onLogined: ()=>Promise<void>;\r\n    notLogined?: ()=>Promise<void>;\r\n};\r\nlet stackKey = 1;\r\nexport interface StackItem {\r\n    key: number;\r\n    view: JSX.Element;\r\n    ceased: boolean;\r\n    confirmClose?: ()=>Promise<boolean>;\r\n    disposer?: ()=>void;\r\n}\r\nexport interface State {\r\n    stack: StackItem[];\r\n    wait: 0|1|2;\r\n    fetchError: FetchError\r\n}\r\n\r\nexport class NavView extends React.Component<Props, State> {\r\n    private stack: StackItem[];\r\n    private htmlTitle: string;\r\n    private waitCount: number = 0;\r\n    private waitTimeHandler?: NodeJS.Timer;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.back = this.back.bind(this);\r\n        this.navBack = this.navBack.bind(this);\r\n        this.stack = [];\r\n        this.state = {\r\n            stack: this.stack,\r\n            wait: 0,\r\n            fetchError: undefined\r\n        };\r\n    }\r\n    async componentWillMount() {\r\n        window.addEventListener('popstate', this.navBack);\r\n    }\r\n\r\n    async componentDidMount()\r\n    {\r\n        nav.set(this);\r\n        /*\r\n        let start = this.props.start;\r\n        if (start !== undefined) {\r\n            await start();\r\n        }\r\n        else {\r\n        */\r\n            await nav.start();\r\n        //}\r\n    }\r\n\r\n    get level(): number {\r\n        return this.stack.length;\r\n    }\r\n\r\n    startWait() {\r\n        if (this.waitCount === 0) {\r\n            this.setState({wait: 1});\r\n            this.waitTimeHandler = global.setTimeout(\r\n                () => {\r\n                    this.waitTimeHandler = undefined;\r\n                    this.setState({wait: 2});\r\n                },\r\n                1000) as NodeJS.Timer;\r\n        }\r\n        ++this.waitCount;\r\n        this.setState({\r\n            fetchError: undefined,\r\n        });\r\n    }\r\n\r\n    endWait() {\r\n        setTimeout(() => {\r\n            /*\r\n            this.setState({\r\n                fetchError: undefined,\r\n            });*/\r\n            --this.waitCount;\r\n            if (this.waitCount === 0) {\r\n                if (this.waitTimeHandler !== undefined) {\r\n                    clearTimeout(this.waitTimeHandler);\r\n                    this.waitTimeHandler = undefined;\r\n                }\r\n                this.setState({wait: 0});\r\n            }\r\n        },100);\r\n    }\r\n\r\n    async onError(fetchError: FetchError)\r\n    {\r\n        let err = fetchError.error;\r\n        if (err !== undefined && err.unauthorized === true) {\r\n            await nav.showLogin(undefined);\r\n            return;\r\n        }\r\n        this.setState({\r\n            fetchError: fetchError,\r\n        });\r\n    }\r\n\r\n    show(view: JSX.Element, disposer?: ()=>void): number {\r\n        this.clear();\r\n        return this.push(view, disposer);\r\n    }\r\n\r\n    push(view: JSX.Element, disposer?: ()=>void): number {\r\n        this.removeCeased();\r\n        if (this.stack.length > 0) {\r\n            window.history.pushState('forward', null, null);\r\n        }\r\n        let key = stackKey++;\r\n        this.stack.push({\r\n            key: key,\r\n            view: view, \r\n            ceased: false,\r\n            disposer: disposer\r\n        });\r\n        this.refresh();\r\n        //console.log('push: %s pages', this.stack.length);\r\n        return key;\r\n    }\r\n\r\n    replace(view: JSX.Element, disposer?: ()=>void): number {\r\n        let item:StackItem = undefined;\r\n        let stack = this.stack;\r\n        if (stack.length > 0) {\r\n            item = stack.pop();\r\n            //this.popAndDispose();\r\n        }\r\n        let key = stackKey++;\r\n        this.stack.push({\r\n            key: key, \r\n            view: view, \r\n            ceased: false,\r\n            disposer: disposer\r\n        });\r\n        if (item !== undefined) this.dispose(item.disposer);\r\n        this.refresh();\r\n        //console.log('replace: %s pages', this.stack.length);\r\n        return key;\r\n    }\r\n\r\n    ceaseTop(level:number = 1) {\r\n        let p = this.stack.length - 1;\r\n        for (let i=0; i<level; i++, p--) {\r\n            if (p < 0) break;\r\n            let item = this.stack[p];\r\n            item.ceased = true;\r\n        }\r\n    }\r\n\r\n    pop(level:number = 1) {\r\n        let stack = this.stack;\r\n        let len = stack.length;\r\n        //console.log('pop start: %s pages level=%s', len, level);\r\n        if (level <= 0 || len <= 1) return;\r\n        if (len < level) level = len;\r\n        let backLevel = 0;\r\n        for (let i = 0; i < level; i++) {\r\n            if (stack.length === 0) break;\r\n            //stack.pop();\r\n            this.popAndDispose();\r\n            ++backLevel;\r\n        }\r\n        if (backLevel >= len) backLevel--;\r\n        this.refresh();\r\n        if (this.isHistoryBack !== true) {\r\n            //window.removeEventListener('popstate', this.navBack);\r\n            //window.history.back(backLevel);\r\n            //window.addEventListener('popstate', this.navBack);\r\n        }\r\n        //console.log('pop: %s pages', stack.length);\r\n    }\r\n\r\n    popTo(key: number) {\r\n        throw new Error('to be designed');\r\n    }\r\n\r\n    removeCeased() {\r\n        for (;;) {\r\n            let p=this.stack.length-1;\r\n            if (p < 0) break;\r\n            let top = this.stack[p];\r\n            if (top.ceased === false) break;\r\n            let item = this.stack.pop();\r\n            let {disposer} = item;\r\n            this.dispose(disposer);\r\n        }\r\n        this.refresh();\r\n    }\r\n\r\n    private popAndDispose() {\r\n        this.removeCeased();\r\n        let item = this.stack.pop();\r\n        if (item === undefined) return;\r\n        let {disposer} = item;\r\n        this.dispose(disposer);\r\n        this.removeCeased();\r\n        return item;\r\n    }\r\n\r\n    private dispose(disposer:()=>void) {\r\n        if (disposer === undefined) return;\r\n        let item = this.stack.find(v => v.disposer === disposer);\r\n        if (item === undefined) disposer();\r\n    }\r\n\r\n    clear() {\r\n        let len = this.stack.length;\r\n        while (this.stack.length > 0) this.popAndDispose();\r\n        this.refresh();\r\n        if (len > 1) {\r\n            //window.removeEventListener('popstate', this.navBack);\r\n            //window.history.back(len-1);\r\n            //window.addEventListener('popstate', this.navBack);\r\n        }\r\n    }\r\n\r\n    regConfirmClose(confirmClose:()=>Promise<boolean>) {\r\n        let stack = this.stack;\r\n        let len = stack.length;\r\n        if (len === 0) return;\r\n        let top = stack[len-1];\r\n        top.confirmClose = confirmClose;\r\n    }\r\n\r\n    private isHistoryBack:boolean = false;\r\n    navBack() {\r\n        nav.log('backbutton pressed - nav level: ' + this.stack.length);\r\n        this.isHistoryBack = true;\r\n        this.back(true);\r\n        this.isHistoryBack = false;\r\n    }\r\n\r\n    async back(confirm:boolean = true) {\r\n        let stack = this.stack;\r\n        let len = stack.length;\r\n        if (len === 0) return;\r\n        if (len === 1) {\r\n            if (self != window.top) {\r\n                window.top.postMessage({type:'pop-app'}, '*');\r\n            }\r\n            return;\r\n        }\r\n        let top = stack[len-1];\r\n        if (confirm===true && top.confirmClose) {\r\n            if (await top.confirmClose()===true) this.pop();\r\n        }\r\n        else {\r\n            this.pop();\r\n        }\r\n    }\r\n\r\n    confirmBox(message?:string): boolean {\r\n        return window.confirm(message);\r\n    }\r\n    clearError = () => {\r\n        this.setState({fetchError: undefined});\r\n    }\r\n    render() {\r\n        const {wait, fetchError} = this.state;\r\n        let stack = this.state.stack;\r\n        let top = stack.length - 1;\r\n        let elWait = null, elError = null;\r\n        switch (wait) {\r\n            case 1:\r\n                elWait = <li className=\"va-wait va-wait1\">\r\n                </li>;\r\n                break;\r\n            case 2:\r\n                elWait = <li className=\"va-wait va-wait2\">\r\n                    <i className=\"fa fa-spinner fa-spin fa-3x fa-fw\"></i>\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </li>;\r\n                break;\r\n        }\r\n        if (fetchError)\r\n            elError = <FetchErrorView clearError={this.clearError} {...fetchError} />\r\n        return (\r\n        <ul className='va'>\r\n            {\r\n                stack.map((item, index) => {\r\n                    let {key, view} = item;\r\n                    return <li key={key} style={index<top? {visibility: 'hidden'}:undefined}>\r\n                        {view}\r\n                    </li>\r\n                })\r\n            }\r\n            {elWait}\r\n            {elError}\r\n        </ul>\r\n        );\r\n    }\r\n\r\n    private refresh() {\r\n        // this.setState({flag: !this.state.flag});\r\n        this.setState({stack: this.stack });\r\n        // this.forceUpdate();\r\n    }\r\n}\r\n\r\nexport class Nav {\r\n    private nav:NavView;\r\n    private ws: WsBase;\r\n    private wsHost: string;\r\n    private local: LocalData = new LocalData();\r\n    @observable user: User/*InNav*/ = undefined;\r\n    language: string;\r\n    culture: string;\r\n    resUrl: string;\r\n\r\n    constructor() {\r\n        let {lang, district} = resOptions;\r\n        this.language = lang;\r\n        this.culture = district;\r\n    }\r\n\r\n    get guest(): number {\r\n        let guest = this.local.guest;\r\n        if (guest === undefined) return 0;\r\n        let g = guest.get();\r\n        if (g === undefined) return 0;\r\n        return g.guest;\r\n    }\r\n\r\n    set(nav:NavView) {\r\n        //this.logo = logo;\r\n        this.nav = nav;\r\n    }\r\n\r\n    registerReceiveHandler(handler: (message:any)=>Promise<void>):number {\r\n        if (this.ws === undefined) return;\r\n        return this.ws.onWsReceiveAny(handler);\r\n    }\r\n\r\n    unregisterReceiveHandler(handlerId:number) {\r\n        if (this.ws === undefined) return;\r\n        if (handlerId === undefined) return;\r\n        this.ws.endWsReceive(handlerId);\r\n    }\r\n\r\n    async onReceive(msg:any) {\r\n        if (this.ws === undefined) return;\r\n        await this.ws.receive(msg);\r\n    }\r\n\r\n    private async getUnitName() {\r\n        try {\r\n            let unitRes = await fetch('unit.json', {});\r\n            //if (unitRes)\r\n            let res = await unitRes.json();\r\n            return res.unit;\r\n        }\r\n        catch (err) {\r\n            this.local.unit.clear();\r\n            return;\r\n        }\r\n    }\r\n\r\n    private async loadUnit() {\r\n        let unitName:string;\r\n        let unit = this.local.unit.get();\r\n        if (unit !== undefined) {\r\n            if (isDevelopment !== true) return unit.id;\r\n            unitName = await this.getUnitName();\r\n            if (unitName === undefined) return;\r\n            if (unit.name === unitName) return unit.id;\r\n        }\r\n        else {\r\n            unitName = await this.getUnitName();\r\n            if (unitName === undefined) return;\r\n        }\r\n        let unitId = await guestApi.unitFromName(unitName);\r\n        if (unitId !== undefined) {\r\n            this.local.unit.set({id: unitId, name: unitName});\r\n        }\r\n        return unitId;\r\n    }\r\n\r\n    private isInFrame:boolean;\r\n    private centerHost: string;\r\n    async start() {\r\n        nav.clear();\r\n        nav.push(<Page header={false}><Loading /></Page>);\r\n        await host.start();\r\n        let {url, ws, resHost} = host;\r\n        this.centerHost = url;\r\n        this.resUrl = 'http://' + resHost + '/res/';\r\n        this.wsHost = ws;\r\n        setCenterUrl(url);\r\n        \r\n        let unit = await this.loadUnit();\r\n        meInFrame.unit = unit;\r\n\r\n        let guest:Guest = this.local.guest.get();\r\n        if (guest === undefined) {\r\n            guest = await guestApi.guest();\r\n        }\r\n        nav.setGuest(guest);\r\n\r\n        let hash = document.location.hash;\r\n        // document.title = document.location.origin;\r\n        console.log(\"url=%s hash=%s\", document.location.origin, hash);\r\n        this.isInFrame = hash !== undefined && hash !== '' && hash.startsWith('#tv');\r\n        if (this.isInFrame === true) {\r\n            let mif = setMeInFrame(hash);\r\n            if (mif !== undefined) {\r\n                this.ws = wsBridge;\r\n                console.log('this.ws = wsBridge in sub frame');\r\n                //nav.user = {id:0} as User;\r\n                if (self !== window.parent) {\r\n                    window.parent.postMessage({type:'sub-frame-started', hash: mif.hash}, '*');\r\n                }\r\n                // 下面这一句，已经移到 appBridge.ts 里面的 initSubWin，也就是响应从main frame获得user之后开始。\r\n                //await this.showAppView();\r\n                return;\r\n            }\r\n        }\r\n\r\n        let user: User = this.local.user.get();\r\n        if (user === undefined) {\r\n            let {notLogined} = this.nav.props;\r\n            if (notLogined !== undefined) {\r\n                await notLogined();\r\n            }\r\n            else {\r\n                await nav.showLogin(undefined);\r\n            }\r\n            return;\r\n        }\r\n\r\n        await nav.logined(user);\r\n    }\r\n\r\n    async showAppView() {\r\n        let {onLogined} = this.nav.props;\r\n        if (onLogined === undefined) {\r\n            nav.push(<div>NavView has no prop onLogined</div>);\r\n            return;\r\n        }\r\n        nav.clear();\r\n        await onLogined();\r\n        console.log('logined: AppView shown');\r\n    }\r\n\r\n    setGuest(guest: Guest) {\r\n        this.local.guest.set(guest);\r\n        netToken.set(0, guest.token);\r\n    }\r\n\r\n    saveLocalUser() {\r\n        this.local.user.set(this.user);\r\n    }\r\n    /*\r\n    private loginCallbacks = new Callbacks<(user: User)=>Promise<void>>();\r\n    private logoutCallbacks = new Callbacks<()=>Promise<void>>();\r\n    registerLoginCallback(callback: (user:User)=>Promise<void>) {\r\n        this.loginCallbacks.register(callback);\r\n    }\r\n    unregisterLoginCallback(callback: (user:User)=>Promise<void>) {\r\n        this.loginCallbacks.unregister(callback);\r\n    }\r\n    registerLogoutCallback(callback: ()=>Promise<void>) {\r\n        this.logoutCallbacks.register(callback);\r\n    }\r\n    unregisterLogoutCallback(callback: ()=>Promise<void>) {\r\n        this.logoutCallbacks.unregister(callback);\r\n    }\r\n    */\r\n    async logined(user: User, callback?: (user:User)=>Promise<void>) {\r\n        let ws:WSChannel = this.ws = new WSChannel(this.wsHost, user.token);\r\n        ws.connect();\r\n\r\n        console.log(\"logined: %s\", JSON.stringify(user));\r\n        this.user = user;\r\n        this.saveLocalUser();\r\n        netToken.set(user.id, user.token);\r\n        if (callback !== undefined) //this.loginCallbacks.has)\r\n            callback(user);\r\n            //this.loginCallbacks.call(user);\r\n        else {\r\n            await this.showAppView();\r\n        }\r\n    }\r\n\r\n    async showLogin(callback?: (user:User)=>Promise<void>, withBack?:boolean) {\r\n        let lv = await import('../entry/login');\r\n        let loginView = <lv.default withBack={withBack} callback={callback} />;\r\n        if (withBack !== true) {\r\n            this.nav.clear();\r\n            this.pop();\r\n        }\r\n        this.nav.push(loginView);\r\n    }\r\n\r\n    async showLogout(callback?: ()=>Promise<void>) {\r\n        nav.push(<Page header=\"安全退出\" back=\"close\">\r\n            <div className=\"m-5 border border-info bg-white rounded p-3 text-center\">\r\n                <div>退出当前账号不会删除任何历史数据，下次登录依然可以使用本账号</div>\r\n                <div className=\"mt-3\">\r\n                    <button className=\"btn btn-danger\" onClick={()=>this.logout(callback)}>退出</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n    }\r\n\r\n    async logout(callback?:()=>Promise<void>) { //notShowLogin?:boolean) {\r\n        this.local.logoutClear();\r\n        this.user = undefined; //{} as User;\r\n        logoutApis();\r\n        logoutUqTokens();\r\n        let guest = this.local.guest.get();\r\n        setCenterToken(0, guest && guest.token);\r\n        this.ws = undefined;\r\n        /*\r\n        if (this.loginCallbacks.has)\r\n            this.logoutCallbacks.call();\r\n        else {\r\n            if (notShowLogin === true) return;\r\n        }\r\n        await nav.start();\r\n        */\r\n        if (callback === undefined)\r\n            await nav.start();\r\n        else\r\n            await callback();\r\n    }\r\n\r\n    get level(): number {\r\n        return this.nav.level;\r\n    }\r\n    startWait() {\r\n        this.nav.startWait();\r\n    }\r\n    endWait() {\r\n        this.nav.endWait();\r\n    }\r\n    async onError(error: FetchError) {\r\n        await this.nav.onError(error);\r\n    }\r\n    show (view: JSX.Element, disposer?: ()=>void): void {\r\n        this.nav.show(view, disposer);\r\n    }\r\n    push(view: JSX.Element, disposer?: ()=>void): void {\r\n        this.nav.push(view, disposer);\r\n    }\r\n    replace(view: JSX.Element, disposer?: ()=>void): void {\r\n        this.nav.replace(view, disposer);\r\n    }\r\n    pop(level:number = 1) {\r\n        this.nav.pop(level);\r\n    }\r\n    clear() {\r\n        this.nav.clear();\r\n    }\r\n    navBack() {\r\n        this.nav.navBack();\r\n    }\r\n    ceaseTop(level?:number) {\r\n        this.nav.ceaseTop(level);\r\n    }\r\n    removeCeased() {\r\n        this.nav.removeCeased();\r\n    }\r\n    async back(confirm:boolean = true) {\r\n        await this.nav.back(confirm);\r\n    }\r\n    regConfirmClose(confirmClose: ()=>Promise<boolean>) {\r\n        this.nav.regConfirmClose(confirmClose);\r\n    }\r\n    confirmBox(message?:string): boolean {\r\n        return this.nav.confirmBox(message);\r\n    }\r\n    async navToApp(url: string, unitId: number, apiId?:number, sheetType?:number, sheetId?:number):Promise<void> {\r\n        return new Promise<void>((resolve, reject) => {\r\n            let sheet = this.centerHost.includes('http://localhost:') === true? 'sheet_debug':'sheet'\r\n            let uh = sheetId === undefined?\r\n                    appUrl(url, unitId) :\r\n                    appUrl(url, unitId, sheet, [apiId, sheetType, sheetId]);\r\n            console.log('navToApp: %s', JSON.stringify(uh));\r\n            nav.push(<article className='app-container'>\r\n                <span id={uh.hash} onClick={()=>this.back()} style={mobileHeaderStyle}>\r\n                    <i className=\"fa fa-arrow-left\" />\r\n                </span>\r\n                <iframe src={uh.url} />\r\n            </article>, \r\n            ()=> {\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n\r\n    navToSite(url: string) {\r\n        // show in new window\r\n        window.open(url);\r\n    }\r\n\r\n    get logs() {return logs};\r\n    log(msg:string) {\r\n        logs.push(msg);\r\n    }\r\n    logMark() {\r\n        let date = new Date();\r\n        logMark = date.getTime();\r\n        logs.push('log-mark: ' + date.toTimeString());\r\n    }\r\n    logStep(step:string) {\r\n        logs.push(step + ': ' + (new Date().getTime() - logMark));\r\n    }\r\n}\r\nexport const nav: Nav = new Nav();\r\n","import * as React from 'react';\r\nimport { Form } from './form';\r\nimport { UiSchema, UiArr, UiItem } from '../schema';\r\nimport { ArrSchema, ItemSchema } from '../schema';\r\nimport { Widget as Widget } from './widgets/widget';\r\n//import { ArrRow } from './arrRow';\r\nimport { observable, computed } from 'mobx';\r\nimport { ContextRule } from './rules';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport abstract class Context {\r\n    private subContexts:{[name:string]:{[rowKey:string]:Context}};\r\n    readonly form: Form;\r\n    readonly uiSchema: UiSchema;\r\n    readonly initData: any;\r\n    readonly inNode: boolean;           // true: 在</> 流中定义Field\r\n    readonly widgets: {[name:string]: Widget} = {};\r\n    readonly rules: ContextRule[];\r\n    readonly isRow: boolean;\r\n    @observable errors: string[] = [];\r\n    @observable errorWidgets:Widget[] = [];\r\n\r\n    constructor(form: Form, uiSchema: UiSchema, data: any, inNode: boolean, isRow: boolean) {\r\n        this.form = form;\r\n        this.uiSchema = uiSchema;\r\n        this.initData = data;\r\n        this.inNode = inNode;\r\n        this.isRow = isRow;\r\n        if (uiSchema !== undefined) {\r\n            let {rules} = uiSchema;\r\n            if (rules !== undefined) {\r\n                this.rules = [];\r\n                if (Array.isArray(rules) === false)\r\n                    this.rules.push(rules as ContextRule);\r\n                else\r\n                    this.rules.push(...rules as ContextRule[]);\r\n            }\r\n        }\r\n    }\r\n\r\n    getArrRowContexts(arrName: string) {\r\n        if (this.subContexts === undefined) this.subContexts = {};\r\n        let arrRowContexts = this.subContexts[name];\r\n        if (arrRowContexts === undefined) this.subContexts[name] = arrRowContexts = {};\r\n        return arrRowContexts;\r\n    }\r\n\r\n    abstract get data():any;\r\n    abstract getItemSchema(itemName:string):ItemSchema;\r\n    abstract getUiItem(itemName:string):UiItem;\r\n    get arrName():string {return undefined}\r\n    getValue(itemName:string):any {return this.initData[itemName]}\r\n    setValue(itemName:string, value:any) {\r\n        this.initData[itemName] = value;\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setValue(value);\r\n    }\r\n    getDisabled(itemName:string):boolean {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) return widget.getDisabled();\r\n        return undefined;\r\n    }\r\n    setDisabled(itemName:string, value:boolean) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setDisabled(value);\r\n    }\r\n    getReadOnly(itemName:string):boolean {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.getReadOnly();\r\n        return undefined;\r\n    }\r\n    setReadOnly(itemName:string, value:boolean) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setReadOnly(value);\r\n    }\r\n    getVisible(itemName:string):boolean {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.getVisible();\r\n        return undefined;\r\n    }\r\n    setVisible(itemName:string, value:boolean) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setVisible(value);\r\n    }\r\n\r\n    checkFieldRules() {\r\n        for (let i in this.widgets) {\r\n            this.widgets[i].checkRules();\r\n        }\r\n        if (this.subContexts === undefined) return;\r\n        for (let i in this.subContexts) {\r\n            let arrRowContexts = this.subContexts[i];\r\n            for (let j in arrRowContexts) {\r\n                arrRowContexts[j].checkFieldRules();\r\n            }\r\n        }\r\n    }\r\n\r\n    checkContextRules() {\r\n        if (this.rules === undefined) return;\r\n        this.clearContextErrors();\r\n        for (let rule of this.rules) {\r\n            let ret = rule(this);\r\n            if (ret === undefined) continue;\r\n            if (Array.isArray(ret) === true) {\r\n                this.errors.push(...ret as string[]);\r\n            }\r\n            else if (typeof ret === 'string') {\r\n                this.errors.push(ret as string);\r\n            }\r\n            else {\r\n                for (let i in ret as object) this.setError(i, ret[i]);\r\n            }\r\n        }\r\n        if (this.subContexts === undefined) return;\r\n        for (let i in this.subContexts) {\r\n            let arrRowContexts = this.subContexts[i];\r\n            for (let j in arrRowContexts) {\r\n                let rowContext = arrRowContexts[j];\r\n                rowContext.removeErrors();\r\n                rowContext.checkContextRules();\r\n            }\r\n        }\r\n    }\r\n\r\n    setError(itemName:string, error:string) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget === undefined) return;\r\n        widget.setContextError(error);\r\n        this.addErrorWidget(widget);\r\n    }\r\n\r\n    clearContextErrors() {\r\n        for (let i in this.widgets) this.widgets[i].clearContextError();\r\n    }\r\n\r\n    checkRules() {\r\n        this.checkFieldRules();\r\n        this.checkContextRules();\r\n    }\r\n\r\n    addErrorWidget(widget:Widget) {\r\n        let pos = this.errorWidgets.findIndex(v => v === widget);\r\n        if (pos < 0) this.errorWidgets.push(widget);\r\n    }\r\n    removeErrorWidget(widget:Widget) {\r\n        let pos = this.errorWidgets.findIndex(v => v === widget);\r\n        if (pos >= 0) this.errorWidgets.splice(pos, 1);\r\n    }\r\n\r\n    protected checkHasError():boolean {\r\n        let ret = (this.errorWidgets.length + this.errors.length) > 0;\r\n        if (ret === true) return true;\r\n        if (this.subContexts === undefined) return false;\r\n        for (let i in this.subContexts) {\r\n            let arrRowContexts = this.subContexts[i];\r\n            for (let j in arrRowContexts) {\r\n                if (arrRowContexts[j].hasError === true) return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    @computed get hasError():boolean {\r\n        return this.checkHasError();\r\n    };\r\n\r\n    removeErrors() {\r\n        this.errors.splice(0);\r\n        this.errorWidgets.splice(0);\r\n        for (let i in this.widgets) {\r\n            let widget = this.widgets[i];\r\n            if (widget === undefined) continue;\r\n            widget.clearContextError();\r\n        }\r\n    }\r\n\r\n    renderErrors = observer((): JSX.Element => {\r\n        let {errors} = this;\r\n        if (errors.length === 0) return null;\r\n        return <>\r\n            {errors.map(err => <span key={err} className=\"text-danger inline-block my-1 ml-3\">\r\n                <i className=\"fa fa-exclamation-circle\" /> &nbsp;{err}\r\n            </span>)}\r\n        </>\r\n    });\r\n}\r\n\r\nlet rowKeySeed:number = 1;\r\nexport class RowContext extends Context {\r\n    readonly parentContext: Context;\r\n    readonly arrSchema: ArrSchema;\r\n    readonly uiSchema: UiArr;\r\n    //readonly row: ArrRow;\r\n    readonly rowKey: number;\r\n    readonly data: any;\r\n    constructor(parentContext:Context, arrSchema: ArrSchema, data: any, inNode: boolean) {\r\n        let uiArr:UiArr;\r\n        let {uiSchema} = parentContext;\r\n        if (uiSchema !== undefined) {\r\n            let {items} = uiSchema;\r\n            if (items !== undefined) uiArr = items[arrSchema.name] as UiArr;\r\n        }\r\n        super(parentContext.form, uiArr, data, inNode, true);\r\n        this.parentContext = parentContext;\r\n        this.arrSchema = arrSchema;\r\n        this.rowKey = rowKeySeed++;\r\n        this.data = data;\r\n    }\r\n    getItemSchema(itemName:string):ItemSchema {return this.arrSchema.itemSchemas[itemName]}\r\n    getUiItem(itemName:string):UiItem {\r\n        if (this.uiSchema === undefined) return undefined;\r\n        let {items} = this.uiSchema;\r\n        if (items === undefined) return undefined;\r\n        return items[itemName]\r\n    }\r\n    get arrName():string {return this.arrSchema.name}\r\n    //get data() {return this.row.data;}\r\n    removeErrors() {\r\n        super.removeErrors();\r\n        this.parentContext.removeErrors();\r\n    }\r\n\r\n    get parentData():any {return this.parentContext.data;}\r\n}\r\n\r\nexport class FormContext extends Context {\r\n    constructor(form:Form, inNode:boolean) {\r\n        super(form, form.uiSchema, form.data, inNode, false);\r\n    }\r\n    get data():any {return this.form.data}\r\n    getItemSchema(itemName:string):ItemSchema {return this.form.itemSchemas[itemName]}\r\n    getUiItem(itemName:string):UiItem {\r\n        let {uiSchema} = this.form;\r\n        if (uiSchema === undefined) return undefined;\r\n        let {items} = uiSchema;\r\n        if (items === undefined) return undefined;\r\n        return items[itemName]\r\n    }\r\n}\r\n\r\nexport const ContextContainer = React.createContext<Context>({} as any);\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { jsonStringify } from '../../tools';\r\n\r\nexport type TypeViewModel = typeof ViewModel;\r\nexport type TypeView = React.StatelessComponent<{vm: ViewModel, className?:string|string[]}>;\r\nexport type TypeContent = React.StatelessComponent<any>;\r\n\r\nexport abstract class ViewModel {\r\n    protected abstract get view(): TypeView;\r\n    render(className?:string|string[]):JSX.Element {\r\n        if (this.view === undefined) return <div>??? viewModel 必须定义 view ???</div>\r\n        return React.createElement(this.view, {vm: this, className:className});\r\n    }\r\n}\r\n\r\nexport const PureJSONContent = (values, x?:any) => <>content: {jsonStringify(values)}</>;\r\nexport const JSONContent = observer(PureJSONContent);\r\nexport const RowContent = \r\n    (values) => <div className=\"px-3 py-2\">{jsonStringify(values)}</div>\r\n;\r\n","function replacer(key:string, value:any) {\r\n    let first = key.substr(0, 1);\r\n    switch (first) {\r\n        default: return value;\r\n        case '$':\r\n        case '_': return;\r\n    }\r\n}\r\n\r\nexport function jsonStringify(value:any) {\r\n    return JSON.stringify(value, replacer, ' ');\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { BoxId, Tuid } from \"../entities\";\r\nimport { PureJSONContent } from '../controllers';\r\n\r\ntype TvTemplet = (values?:any, x?:any) => JSX.Element;\r\n\r\ninterface Props {\r\n    tuidValue: number|BoxId, \r\n    ui?: TvTemplet,\r\n    x?: any,\r\n    nullUI?: ()=>JSX.Element\r\n}\r\n\r\nfunction boxIdContent(bi: number|BoxId, ui:TvTemplet, x:any) {\r\n    if (typeof bi === 'number') return <>{bi}</>;\r\n    let {id, _$tuid, _$com} = bi as BoxId;\r\n    let t:Tuid = _$tuid;\r\n    if (t === undefined) {\r\n        if (ui !== undefined) return ui(bi, x);\r\n        return PureJSONContent(bi, x);\r\n    }\r\n    let com = ui || _$com;\r\n    if (com === undefined) {\r\n        com = bi._$com = t.getTuidContent();\r\n    }\r\n    let val = t.valueFromId(id);\r\n    if (typeof val === 'number') val = {id: val};\r\n    if (ui !== undefined) {\r\n        let ret = ui(val, x);\r\n        if (ret !== undefined) return ret;\r\n        return <>{id}</>;\r\n    }\r\n    return React.createElement(com, val);\r\n}\r\n\r\nconst Tv = observer(({tuidValue, ui, x, nullUI}:Props) => {\r\n    let ttv = typeof tuidValue;\r\n    switch (ttv) {\r\n        default:\r\n            if (ui === undefined)\r\n                return <>{ttv}-{tuidValue}</>;\r\n            else {\r\n                let ret = ui(tuidValue, x);\r\n                if (ret !== undefined) return ret;\r\n                return <>{tuidValue}</>;\r\n            }\r\n        case 'undefined':\r\n            break;\r\n        case 'object':\r\n            if (tuidValue !== null) return boxIdContent(tuidValue, ui, x);\r\n            break;\r\n        case 'number':\r\n            return <>id...{tuidValue}</>;\r\n    }       \r\n    if (nullUI === undefined) return <>null</>;\r\n    return nullUI();\r\n});\r\n\r\nexport const tv = (tuidValue:number|BoxId, ui?:TvTemplet, x?:any, nullUI?:()=>JSX.Element):JSX.Element => {\r\n    return <Tv tuidValue={tuidValue} ui={ui} x={x} nullUI={nullUI} />;\r\n};\r\n","export * from './jsonStringify';\r\nexport * from './tv';\r\n","import { decodeGuestToken } from '../user';\r\nimport { CenterApi } from './uqApi';\r\n\r\nexport class GuestApi extends CenterApi {\r\n    async guest(): Promise<any> {\r\n        //let guest = nav.local.guest.get();\r\n        let ret = await this.get('', {});\r\n        switch (typeof ret) {\r\n            default: return;\r\n            case 'string': return decodeGuestToken(ret);\r\n            case 'object':\r\n                let guest = decodeGuestToken(ret.token);\r\n                return guest;\r\n        }\r\n    }\r\n\r\n    async unitFromName(unitName:string): Promise<number> {\r\n        let ret = await this.get(unitName);\r\n        return ret && ret.unit;\r\n    }\r\n}\r\n\r\nexport const guestApi = new GuestApi('tv/guest/', undefined);\r\n","export {WSChannel, wsBridge, postWsToTop} from './wsChannel';\r\nexport * from './apiBase';\r\nexport * from './guestApi';\r\nexport * from './uqApi';\r\nexport {meInFrame, loadAppUqs, isBridged} from './appBridge';\r\nexport * from './host';\r\nexport {httpGet} from './httpChannel';\r\n","import _ from 'lodash';\r\nimport {nav} from '../ui';\r\nimport {uid} from '../uid';\r\nimport {uqTokenApi as uqTokenApi, callCenterapi, CenterAppApi, AppUq, centerToken, App} from './uqApi';\r\nimport {setSubAppWindow} from './wsChannel';\r\nimport { host } from './host';\r\n\r\nexport interface UqToken {\r\n    name: string;\r\n    url: string;\r\n    urlDebug: string;\r\n    token: string;\r\n}\r\ninterface UqTokenAction extends UqToken {\r\n    resolve: (value?: UqToken | PromiseLike<UqToken>) => void;\r\n    reject: (reason?: any) => void;\r\n}\r\nconst uqTokens:{[uqName:string]: UqTokenAction}  = {};\r\nexport function logoutUqTokens() {\r\n    for (let i in uqTokens) uqTokens[i] = undefined;\r\n}\r\n\r\nexport interface AppInFrame {\r\n    hash: string;\r\n    unit: number;       // unit id\r\n    page?: string;\r\n    param?: string[];\r\n}\r\nconst appsInFrame:{[key:string]:AppInFrame} = {};\r\n\r\nclass AppInFrameClass implements AppInFrame {\r\n    hash: string;\r\n    private _unit: number;\r\n    get unit(): number {return this._unit;}       // unit id\r\n    set unit(val:number) { this._unit=val;}\r\n    page?: string;\r\n    param?: string[];\r\n}\r\n\r\nexport let meInFrame:AppInFrame = new AppInFrameClass();\r\n/* {\r\n    hash: undefined,\r\n    get unit():number {return } undefined, //debugUnitId,\r\n    page: undefined;\r\n    param: undefined,\r\n}*/\r\n\r\nexport function isBridged():boolean {\r\n    return self !== window.parent;\r\n}\r\n\r\nwindow.addEventListener('message', async function(evt) {\r\n    var message = evt.data;\r\n    switch (message.type) {\r\n        case 'sub-frame-started':\r\n            subFrameStarted(evt);\r\n            break;\r\n        case 'ws':\r\n            //wsBridge.receive(message.msg);\r\n            await nav.onReceive(message.msg);\r\n            break;\r\n        case 'init-sub-win':\r\n            await initSubWin(message);\r\n            break;\r\n        case 'pop-app':\r\n            nav.navBack();\r\n            break;\r\n        case 'center-api':\r\n            await callCenterApiFromMessage(evt.source as Window, message);\r\n            break;\r\n        case 'center-api-return':\r\n            bridgeCenterApiReturn(message);\r\n            break;\r\n        case 'app-api':\r\n            console.log(\"receive PostMessage: %s\", JSON.stringify(message));\r\n            let ret = await onReceiveAppApiMessage(message.hash, message.apiName);\r\n            console.log(\"onReceiveAppApiMessage: %s\", JSON.stringify(ret));\r\n            (evt.source as Window).postMessage({\r\n                type: 'app-api-return', \r\n                apiName: message.apiName,\r\n                url: ret.url,\r\n                urlDebug: ret.urlDebug,\r\n                token: ret.token} as any, \"*\");\r\n            break;\r\n        case 'app-api-return':\r\n            console.log(\"app-api-return: %s\", JSON.stringify(message));\r\n            console.log('await onAppApiReturn(message);');\r\n            await onAppApiReturn(message);\r\n            break;\r\n        default:\r\n            this.console.log('message: %s', JSON.stringify(message));\r\n            break;\r\n    }\r\n});\r\n\r\nfunction subFrameStarted(evt:any) {\r\n    var message = evt.data;\r\n    let subWin = evt.source as Window;\r\n    setSubAppWindow(subWin);\r\n    hideFrameBack(message.hash);\r\n    let msg:any = _.clone(nav.user);\r\n    msg.type = 'init-sub-win';\r\n    subWin.postMessage(msg, '*');\r\n}\r\nfunction hideFrameBack(hash:string) {\r\n    let el = document.getElementById(hash);\r\n    if (el !== undefined) el.hidden = true;\r\n}\r\nasync function initSubWin(message:any) {\r\n    console.log('initSubWin: set nav.user', message);\r\n    nav.user = message; // message.user;\r\n    await nav.showAppView();\r\n}\r\nasync function onReceiveAppApiMessage(hash: string, apiName: string): Promise<UqToken> {\r\n    let appInFrame = appsInFrame[hash];\r\n    if (appInFrame === undefined) return {name:apiName, url:undefined, urlDebug:undefined, token:undefined};\r\n    let {unit} = appInFrame;\r\n    let parts = apiName.split('/');\r\n    let ret = await uqTokenApi.uq({unit: unit, uqOwner: parts[0], uqName: parts[1]});\r\n    if (ret === undefined) {\r\n        console.log('apiTokenApi.api return undefined. api=%s, unit=%s', apiName, unit);\r\n        throw 'api not found';\r\n    }\r\n    return {name: apiName, url: ret.url, urlDebug:ret.urlDebug, token: ret.token};\r\n}\r\n\r\nasync function onAppApiReturn(message:any) {\r\n    let {apiName, url, urlDebug, token} = message;\r\n    let action = uqTokens[apiName];\r\n    if (action === undefined) {\r\n        throw 'error app api return';\r\n        //return;\r\n    }\r\n    let realUrl = host.getUrlOrDebug(url, urlDebug);\r\n    console.log('onAppApiReturn(message:any): url=' + url + ', debug=' + urlDebug + ', real=' + realUrl);\r\n    action.url = realUrl;\r\n    action.token = token;\r\n    action.resolve(action);\r\n}\r\n\r\nexport function setMeInFrame(appHash: string):AppInFrame {\r\n    let parts = appHash.split('-');\r\n    let len = parts.length;\r\n    meInFrame.hash = parts[0].substr(3);\r\n    if (len>0) meInFrame.unit = Number(parts[1]);\r\n    if (len>1) meInFrame.page = parts[2];\r\n    if (len>2) meInFrame.param = parts.slice(3);\r\n    return meInFrame;\r\n}\r\n\r\nexport function appUrl(url: string, unitId: number, page?:string, param?:any[]):{url:string; hash:string} {\r\n    let u:string;\r\n    for (;;) {\r\n        u = uid();\r\n        let a = appsInFrame[u];\r\n        if (a === undefined) {\r\n            appsInFrame[u] = {hash:u, unit:unitId};\r\n            break;\r\n        }\r\n    }\r\n    url += '#tv' + u + '-' + unitId;\r\n    if (page !== undefined) {\r\n        url += '-' + page;\r\n        if (param !== undefined) {\r\n            for (let i=0; i<param.length; i++) {\r\n                url += '-' + param[i];\r\n            }\r\n        }\r\n    }\r\n    return {url: url, hash: u};\r\n}\r\n\r\nexport async function loadAppUqs(appOwner:string, appName): Promise<App> {\r\n    let centerAppApi = new CenterAppApi('tv/', undefined);\r\n    let unit = meInFrame.unit;\r\n    let ret = await centerAppApi.uqs(unit, appOwner, appName);\r\n    centerAppApi.checkUqs(unit, appOwner, appName).then(v => {\r\n        if (v === false) nav.start();\r\n    });\r\n    return ret;\r\n}\r\n\r\nexport async function appUq(uq:string, uqOwner:string, uqName:string): Promise<UqToken> {\r\n    let uqToken = uqTokens[uq];\r\n    if (uqToken !== undefined) return uqToken;\r\n    if (!isBridged()) {\r\n        uqToken = await uqTokenApi.uq({unit: meInFrame.unit, uqOwner:uqOwner, uqName:uqName});\r\n        if (uqToken === undefined) {\r\n            let err = 'unauthorized call: uqTokenApi center return undefined!';\r\n            throw err;\r\n        }\r\n        if (uqToken.token === undefined) uqToken.token = centerToken;\r\n        let {url, urlDebug} = uqToken;\r\n        let realUrl = host.getUrlOrDebug(url, urlDebug);\r\n        console.log('realUrl: %s', realUrl);\r\n        uqToken.url = realUrl;\r\n        uqTokens[uq] = uqToken;\r\n        return uqToken;\r\n    }\r\n    console.log(\"appApi parent send: %s\", meInFrame.hash);\r\n    uqToken = {\r\n        name: uq,\r\n        url: undefined,\r\n        urlDebug: undefined,\r\n        token: undefined,\r\n        resolve: undefined,\r\n        reject: undefined,\r\n    };\r\n    uqTokens[uq] = uqToken;\r\n    return new Promise<UqToken>((resolve, reject) => {\r\n        uqToken.resolve = async (at) => {\r\n            let a = await at;\r\n            console.log('return from parent window: %s', JSON.stringify(a));\r\n            uqToken.url = a.url;\r\n            uqToken.urlDebug = a.urlDebug;\r\n            uqToken.token = a.token;\r\n            resolve(uqToken);\r\n        }\r\n        uqToken.reject = reject;\r\n        (window.opener || window.parent).postMessage({\r\n            type: 'app-api',\r\n            apiName: uq,\r\n            hash: meInFrame.hash,\r\n        }, \"*\");\r\n    });\r\n}\r\n\r\ninterface BridgeCenterApi {\r\n    id: string;\r\n    resolve: (value?:any)=>any;\r\n    reject: (reason?:any)=>void;\r\n}\r\nconst brideCenterApis:{[id:string]: BridgeCenterApi} = {};\r\nexport async function bridgeCenterApi(url:string, method:string, body:any):Promise<any> {\r\n    console.log('bridgeCenterApi: url=%s, method=%s', url, method);\r\n    return await new Promise<any>(async (resolve, reject) => {\r\n        let callId:string;\r\n        for (;;) {\r\n            callId = uid();\r\n            let bca = brideCenterApis[callId];\r\n            if (bca === undefined) {\r\n                brideCenterApis[callId] = {\r\n                    id: callId,\r\n                    resolve: resolve,\r\n                    reject: reject,\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        (window.opener || window.parent).postMessage({\r\n            type: 'center-api',\r\n            callId: callId,\r\n            url: url,\r\n            method: method,\r\n            body: body\r\n        }, '*');\r\n    });\r\n}\r\n\r\nasync function callCenterApiFromMessage(from:Window, message):Promise<void> {\r\n    let {callId, url, method, body} = message;\r\n    let result = await callCenterapi.directCall(url, method, body);\r\n    from.postMessage({\r\n        type: 'center-api-return',\r\n        callId: callId,\r\n        result: result,\r\n    }, '*');\r\n}\r\n\r\nfunction bridgeCenterApiReturn(message:any) {\r\n    let {callId, result} = message;\r\n    let bca = brideCenterApis[callId];\r\n    if (bca === undefined) return;\r\n    brideCenterApis[callId] = undefined;\r\n    bca.resolve(result);\r\n}\r\n","import * as React from 'react';\r\nimport {IComputedValue} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash';\r\nimport {TitleBar} from './titleBar';\r\n\r\nexport interface ScrollProps {\r\n    onScroll?: (e:any) => void;\r\n    onScrollTop?: () => void;\r\n    onScrollBottom?: () => void;\r\n}\r\ninterface ScrollViewProps extends ScrollProps {\r\n    className?: string;\r\n}\r\nconst scrollTimeGap = 100;\r\nclass ScrollView extends React.Component<ScrollViewProps, null> {\r\n    private bottomTime:number = 0;\r\n    private topTime:number = 0;\r\n\r\n    private onScroll = async (e) => {\r\n        let {onScroll, onScrollTop, onScrollBottom} = this.props;\r\n        if (onScroll) this.props.onScroll(e);\r\n        let el = e.target as HTMLBaseElement;\r\n        if (el.scrollTop < 30) {\r\n            //this.eachChild(this, 'top');\r\n            if (onScrollTop !== undefined) {\r\n                let topTime = new Date().getTime();\r\n                if (topTime-this.topTime > scrollTimeGap) {\r\n                    this.topTime = topTime;\r\n                    onScrollTop();\r\n                }\r\n            }\r\n        }\r\n        if (el.scrollTop + el.offsetHeight > el.scrollHeight - 30) {\r\n            //this.eachChild(this, 'bottom');\r\n            if (onScrollBottom !== undefined) {\r\n                let bottomTime = new Date().getTime();\r\n                if (bottomTime - this.bottomTime > scrollTimeGap) {\r\n                    this.bottomTime = bottomTime;\r\n                    onScrollBottom();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    private eachChild(c:any, direct:'top'|'bottom') {\r\n        let { props } = c;\r\n        if (props === undefined)\r\n            return;\r\n        let { children } = props;\r\n        if (children === undefined)\r\n            return;\r\n        React.Children.forEach(children, (child, index) => {\r\n            let {_$scroll} = child as any;\r\n            if (_$scroll) _$scroll(direct);\r\n            console.log(child.toString());\r\n            this.eachChild(child, direct);\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <main className={this.props.className} onScroll={this.onScroll}>\r\n                {this.props.children}\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport interface Tab extends ScrollProps {\r\n    title: string;\r\n    icon?: string;\r\n    content?: JSX.Element | (()=>JSX.Element);\r\n    header?: string;\r\n    isSelected?: boolean;\r\n    redDot?: IComputedValue<number>;\r\n    load?: () => Promise<void>;\r\n}\r\nexport interface TabState extends Tab {\r\n    isMounted?: boolean;\r\n}\r\nexport interface PageProps extends ScrollProps {\r\n    back?: 'close' | 'back' | 'none';\r\n    header?: boolean | string | JSX.Element;\r\n    keepHeader?: boolean;\r\n    right?: JSX.Element;\r\n    sideBar?: JSX.Element;\r\n    footer?: JSX.Element;\r\n    tabs?: Tab[];\r\n    logout?: boolean | (()=>void);\r\n}\r\nexport interface PageState {\r\n    cur?: Tab;\r\n    tabs?: TabState[];\r\n}\r\n\r\n@observer\r\nexport class Page extends React.Component<PageProps, PageState> {\r\n    private tabs:TabState[];\r\n    constructor(props: PageProps) {\r\n        super(props);\r\n        let {tabs} = props;\r\n        if (tabs === undefined || tabs.length === 0) return;\r\n        this.tabs = tabs;\r\n        let cur:Tab;\r\n        let tabStates:Tab[] = [];\r\n        for (let tab of tabs) {\r\n            let t:TabState = _.clone(tab);\r\n            if (cur === undefined) {\r\n                if (t.isSelected === true)\r\n                    cur = t;\r\n                else\r\n                    t.isSelected = false;\r\n            }\r\n            else {\r\n                t.isSelected = false;\r\n            }\r\n            t.isMounted = false;\r\n            tabStates.push(t);\r\n        }\r\n        this.state = {\r\n            cur: cur,\r\n            tabs: tabStates,\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (this.tabs === undefined) return;\r\n        let t0 = this.state.tabs[0];\r\n        if (t0 === undefined) return;\r\n        await this.onTabClick(t0);\r\n    }\r\n\r\n    private async onTabClick(tab: TabState) {\r\n        if (tab.isSelected === true) return;\r\n        let cur:TabState;\r\n        let tabs = this.state.tabs;\r\n        for (let t of tabs) {\r\n            if (t === tab) {\r\n                t.isSelected = true;\r\n                cur = t;\r\n            }\r\n            else\r\n                t.isSelected = false;\r\n        }\r\n        if (cur.isMounted !== true) {\r\n            let {load} = cur;\r\n            if (load !== undefined) {\r\n                await load();\r\n            }\r\n        }\r\n        this.setState({\r\n            cur: cur,\r\n            tabs: tabs\r\n        });\r\n    }\r\n\r\n    private onTouchStart(evt: React.TouchEvent<HTMLElement>) {\r\n    }\r\n\r\n    private renderTabs(footer: JSX.Element) {\r\n        const {header, back, right, keepHeader} = this.props;\r\n        let cur = this.state.cur;\r\n        let tabs = <div>{\r\n                this.state.tabs.map((tab, index) => {\r\n                    const {icon, isSelected, title, redDot} = tab;\r\n                    let img:any, redDotView:any, cn:any;\r\n                    if (icon !== undefined) img = <img src={icon} />;\r\n                    if (redDot !== undefined) {\r\n                        let v = redDot.get();\r\n                        if (v < 0) {\r\n                            cn = classNames('red-dot');\r\n                            redDotView = <u />;\r\n                        }\r\n                        else if (v > 0) {\r\n                            cn = classNames('red-dot', 'num');\r\n                            redDotView = <u>{v}</u>;\r\n                        }\r\n                    }\r\n                    return <div key={index}\r\n                        className= {classNames('va-tab', {cur: isSelected})}\r\n                        onClick={() => this.onTabClick(tab)}>\r\n                        {img}<div className={cn}>{title}{redDotView}</div>\r\n                    </div>\r\n                })\r\n            }</div>;\r\n        let titleBar;\r\n        if (header !== false) {\r\n            titleBar = <TitleBar \r\n                back={back} \r\n                center={keepHeader===true? (header as string) : (cur && (cur.header || cur.title))}\r\n                right={right} \r\n            />;\r\n        }\r\n\r\n        return <article className='page-container'>\r\n            {titleBar}\r\n            <section className=\"position-relative\">\r\n            {this.props.sideBar}\r\n            {\r\n                this.state.tabs.map((tab, index) => {\r\n                    let {isSelected, isMounted, content} = tab;\r\n                    if (isSelected === true || isMounted === true) {\r\n                        tab.isMounted = true;\r\n                        return <ScrollView key={index}\r\n                            className={classNames({invisible: isSelected===false})}\r\n                            onScroll={tab.onScroll}\r\n                            onScrollTop={tab.onScrollTop}\r\n                            onScrollBottom={tab.onScrollBottom}\r\n                        >\r\n                            {(typeof content)==='function'? (content as ()=>JSX.Element)():content}\r\n                        </ScrollView>;\r\n                    }\r\n                })\r\n            }\r\n            </section>\r\n            {tabs}\r\n            {footer}\r\n        </article>;\r\n    }\r\n    private renderSingle(footer: JSX.Element) {\r\n        const {back, header, right, onScroll, onScrollTop, onScrollBottom, children} = this.props;\r\n        let titleBar;\r\n        if (header !== false)\r\n            titleBar = <TitleBar \r\n                back={back} \r\n                center={header as any}\r\n                right={right}\r\n                logout={this.props.logout}\r\n            />;\r\n        return (\r\n            <article className='page-container' onTouchStart={this.onTouchStart}>\r\n                {titleBar}\r\n                <section className=\"position-relative\">\r\n                    {this.props.sideBar}\r\n                    <ScrollView\r\n                        onScroll={onScroll}\r\n                        onScrollTop={onScrollTop}\r\n                        onScrollBottom={onScrollBottom}\r\n                    >\r\n                        {children}\r\n                    </ScrollView>\r\n                </section>\r\n                {footer}\r\n            </article>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const {footer} = this.props;\r\n        let elFooter;\r\n        if (footer !== undefined) elFooter = <footer>{footer}</footer>;\r\n        if (this.tabs !== undefined)\r\n            return this.renderTabs(elFooter);\r\n        else\r\n            return this.renderSingle(elFooter);\r\n    }\r\n}\r\n","import {nav} from '../ui/nav';\r\nimport {FetchError} from '../fetchError';\r\n\r\nexport interface HttpChannelUI {\r\n    startWait():void;\r\n    endWait():void;\r\n    showError(error:FetchError):Promise<void>;\r\n}\r\n\r\nexport class HttpChannelNavUI implements HttpChannelUI {\r\n    startWait() {\r\n        nav.startWait();\r\n    }\r\n    endWait() {\r\n        nav.endWait();\r\n    }\r\n    async showError(error:FetchError):Promise<void> {\r\n        nav.endWait();\r\n        /*\r\n        if (error.name === 'SyntaxError') {\r\n            error = {\r\n                name: error.name,\r\n                message: error.message,\r\n            }\r\n        }*/\r\n        await nav.onError(error);\r\n    }\r\n}\r\n\r\n","import _ from 'lodash';\r\nimport {HttpChannel} from './httpChannel';\r\nimport {HttpChannelUI, HttpChannelNavUI} from './httpChannelUI';\r\nimport {appUq} from './appBridge';\r\nimport {ApiBase} from './apiBase';\r\nimport { host } from './host';\r\n\r\nlet channelUIs:{[name:string]: HttpChannel} = {};\r\nlet channelNoUIs:{[name:string]: HttpChannel} = {};\r\n\r\nexport function logoutApis() {\r\n    channelUIs = {};\r\n    channelNoUIs = {};\r\n    logoutUnitxApis();\r\n}\r\n\r\ninterface UqLocal {\r\n    value: any;\r\n    tick?: number;\r\n    isNet?: boolean;\r\n}\r\ninterface UqLocals {\r\n    user: number;\r\n    unit: number;\r\n    uqs: {[uq:string]: UqLocal};\r\n}\r\n\r\nconst uqLocalEntities = 'uqLocalEntities';\r\nclass CacheUqLocals {\r\n    private local:UqLocals;\r\n\r\n    async loadAccess(uqApi: UqApi):Promise<any> {\r\n        try {\r\n            let {uqOwner, uqName} = uqApi;\r\n            if (this.local === undefined) {\r\n                let ls = localStorage.getItem(uqLocalEntities);\r\n                if (ls !== null) {\r\n                    this.local = JSON.parse(ls);\r\n                }\r\n            }\r\n            if (this.local !== undefined) {\r\n                let {user, uqs} = this.local;\r\n                if (user !== loginedUserId || uqs === undefined) {\r\n                    this.local = undefined;\r\n                }\r\n                else {\r\n                    for (let i in uqs) {\r\n                        let ul = uqs[i];\r\n                        ul.isNet = undefined;\r\n                    }\r\n                }\r\n            }\r\n            if (this.local === undefined) {\r\n                this.local = {\r\n                    user: loginedUserId,\r\n                    unit: undefined,\r\n                    uqs: {}\r\n                };\r\n            }\r\n\r\n            let ret: any;\r\n            let un = uqOwner+'/'+uqName;\r\n            let uq = this.local.uqs[un];\r\n            if (uq !== undefined) {\r\n                let {value} = uq;\r\n                ret = value;\r\n            }\r\n            if (ret === undefined) {\r\n                ret = await uqApi.__loadAccess();\r\n                this.saveLocal(un, ret);\r\n            }\r\n            return _.cloneDeep(ret);\r\n        }\r\n        catch (err) {\r\n            this.local = undefined;\r\n            localStorage.removeItem(uqLocalEntities);\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    private saveLocal(uqName:string, accessValue: any) {\r\n        this.local.uqs[uqName] = {\r\n            value: accessValue,\r\n            isNet: true,\r\n        }\r\n        let str = JSON.stringify(this.local);\r\n        localStorage.setItem(uqLocalEntities, str);\r\n    }\r\n\r\n    async checkAccess(uqApi: UqApi):Promise<boolean> {\r\n        let {uqOwner, uqName} = uqApi;\r\n        let un = uqOwner+'/'+uqName;\r\n        let uq = this.local.uqs[un];\r\n        if (uq === undefined) return false;\r\n        let {isNet, value} = uq;\r\n        if (isNet === true) return true;\r\n        let ret = await uqApi.__loadAccess();\r\n        let isMatch = _.isMatch(value, ret);\r\n        if (isMatch === false) {\r\n            this.saveLocal(un, ret);\r\n        }\r\n        return isMatch;\r\n\r\n    }\r\n}\r\n\r\nconst localUqs = new CacheUqLocals;\r\nexport class UqApi extends ApiBase {\r\n    private access:string[];\r\n    uqOwner: string;\r\n    uqName: string;\r\n    uq: string;\r\n\r\n    constructor(basePath: string, uqOwner: string, uqName: string, access:string[], showWaiting?: boolean) {\r\n        super(basePath, showWaiting);\r\n        if (uqName) {\r\n            this.uqOwner = uqOwner;\r\n            this.uqName = uqName;\r\n            this.uq = uqOwner + '/' + uqName;\r\n        }\r\n        this.access = access;\r\n        this.showWaiting = showWaiting;\r\n    }\r\n\r\n    protected async getHttpChannel(): Promise<HttpChannel> {\r\n        let channels: {[name:string]: HttpChannel};\r\n        let channelUI: HttpChannelNavUI;\r\n        if (this.showWaiting === true || this.showWaiting === undefined) {\r\n            channels = channelUIs;\r\n            channelUI = new HttpChannelNavUI();\r\n        }\r\n        else {\r\n            channels = channelNoUIs;\r\n        }\r\n        let channel = channels[this.uq];\r\n        if (channel !== undefined) return channel;\r\n        let uqToken = await appUq(this.uq, this.uqOwner, this.uqName);\r\n        this.token = uqToken.token;\r\n        channel = new HttpChannel(false, uqToken.url, uqToken.token, channelUI);\r\n        return channels[this.uq] = channel;\r\n    }\r\n\r\n\r\n    async update():Promise<string> {\r\n        return await this.get('update');\r\n    }\r\n\r\n    async __loadAccess():Promise<any> {\r\n        let acc = this.access === undefined?\r\n            '' :\r\n            this.access.join('|');\r\n        let ret = await this.get('access', {acc:acc});\r\n        return ret;\r\n    }\r\n\r\n    async loadAccess():Promise<any> {\r\n        return await localUqs.loadAccess(this);\r\n    }\r\n\r\n    async loadEntities():Promise<any> {\r\n        return await this.get('entities');\r\n    }\r\n\r\n    async checkAccess():Promise<boolean> {\r\n        return await localUqs.checkAccess(this);\r\n    }\r\n\r\n    async schema(name:string):Promise<any> {\r\n        return await this.get('schema/' + name);\r\n    }\r\n\r\n    async schemas(names:string[]):Promise<any[]> {\r\n        return await this.post('schema', names);\r\n    }\r\n\r\n    async tuidGet(name:string, id:number):Promise<any> {\r\n        return await this.get('tuid/' + name + '/' + id);\r\n    }\r\n\r\n    async tuidGetAll(name:string):Promise<any[]> {\r\n        return await this.get('tuid-all/' + name + '/');\r\n    }\r\n\r\n    async tuidSave(name:string, params):Promise<any> {\r\n        return await this.post('tuid/' + name, params);\r\n    }\r\n\r\n    async tuidSearch(name:string, arr:string, owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        let ret = await this.post('tuids/' + name, {\r\n            arr: arr,\r\n            owner: owner,\r\n            key: key,\r\n            pageStart: pageStart,\r\n            pageSize: pageSize\r\n        });\r\n        return ret;\r\n    }\r\n    async tuidArrGet(name:string, arr:string, owner:number, id:number):Promise<any> {\r\n        return await this.get('tuid-arr/' + name + '/' + owner + '/' + arr + '/' + id);\r\n    }\r\n    async tuidArrGetAll(name:string, arr:string, owner:number):Promise<any[]> {\r\n        return await this.get('tuid-arr-all/' + name + '/' + owner + '/' + arr + '/');\r\n    }\r\n    async tuidArrSave(name:string, arr:string, owner:number, params):Promise<any> {\r\n        return await this.post('tuid-arr/' + name + '/' + owner + '/' + arr + '/', params);\r\n    }\r\n    async tuidArrPos(name:string, arr:string, owner:number, id:number, order:number):Promise<any> {\r\n        return await this.post('tuid-arr-pos/' + name + '/' + owner + '/' + arr + '/', {\r\n            id: id,\r\n            $order: order\r\n        });\r\n    }\r\n\r\n    async tuidIds(name:string, arr:string, ids:number[]):Promise<any[]> {\r\n        try {\r\n            let url = 'tuidids/' + name + '/';\r\n            if (arr !== undefined) url += arr;\r\n            else url += '$';\r\n            let ret = await this.post(url, ids);\r\n            return ret;\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    async proxied(name:string, proxy:string, id:number):Promise<any> {\r\n        try {\r\n            let url = 'tuid-proxy/' + name + '/' + proxy + '/' + id;\r\n            let ret = await this.get(url);\r\n            return ret;\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    async sheetSave(name:string, data:object):Promise<any> {\r\n        return await this.post('sheet/' + name, data);\r\n    }\r\n\r\n    async sheetAction(name:string, data:object) {\r\n        return await this.put('sheet/' + name, data);\r\n    }\r\n\r\n    async stateSheets(name:string, data:object) {\r\n        return await this.post('sheet/' + name + '/states', data);\r\n    }\r\n\r\n    async stateSheetCount(name:string):Promise<any> {\r\n        return await this.get('sheet/' + name + '/statecount');\r\n    }\r\n\r\n    async getSheet(name:string, id:number):Promise<any> {\r\n        return await this.get('sheet/' + name + '/get/' + id);\r\n    }\r\n\r\n    async sheetArchives(name:string, data:object):Promise<any> {\r\n        return await this.post('sheet/' + name + '/archives', data);\r\n    }\r\n\r\n    async sheetArchive(name:string, id:number):Promise<any> {\r\n        return await this.get('sheet/' + name + '/archive/' + id);\r\n    }\r\n\r\n    async action(name:string, data:object):Promise<any> {\r\n        return await this.post('action/' + name, data);\r\n    }\r\n\r\n    async page(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\r\n        let p:any;\r\n        switch (typeof params) {\r\n            case 'undefined': p = {key: ''}; break;\r\n            default: p = _.clone(params); break;\r\n        }\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        return await this.post('query-page/' + name, p);\r\n    }\r\n\r\n    async query(name:string, params:any):Promise<any> {\r\n        let ret = await this.post('query/' + name, params);\r\n        return ret;\r\n    }\r\n/*\r\n    async history(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\r\n        let p = _.clone(params);\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        let ret = await this.post('history/' + name, p);\r\n        return ret;\r\n    }\r\n\r\n    async book(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\r\n        let p = _.clone(params);\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        let ret = await this.post('history/' + name, p);\r\n        return ret;\r\n    }\r\n*/\r\n    async user():Promise<any> {\r\n        return await this.get('user');\r\n    }\r\n}\r\n\r\nlet channels:{[unitId:number]: HttpChannel} = {};\r\n\r\nexport function logoutUnitxApis() {\r\n    channels = {};\r\n}\r\n\r\nexport class UnitxApi extends UqApi {\r\n    private unitId:number;\r\n    constructor(unitId:number) {\r\n        super('tv/', undefined, undefined, undefined, true);\r\n        this.unitId = unitId;\r\n    }\r\n\r\n    protected async getHttpChannel(): Promise<HttpChannel> {\r\n        let channel = channels[this.unitId];\r\n        if (channel !== undefined) return channel;\r\n        return channels[this.unitId] = await this.buildChannel();\r\n    }\r\n\r\n    private async buildChannel():Promise<HttpChannel> {\r\n        let channelUI = new HttpChannelNavUI();\r\n        let centerAppApi = new CenterAppApi('tv/', undefined);\r\n        let ret = await centerAppApi.unitxUq(this.unitId);\r\n        let {token, url, urlDebug} = ret;\r\n        let realUrl = host.getUrlOrDebug(url, urlDebug);\r\n        this.token = token;\r\n        return new HttpChannel(false, realUrl, token, channelUI);\r\n    }\r\n}\r\n\r\nlet centerHost:string;\r\n\r\nexport function setCenterUrl(url:string) {\r\n    console.log('setCenterUrl %s', url);\r\n    centerHost = url;\r\n    centerToken = undefined;\r\n    centerChannel = undefined;\r\n    centerChannelUI = undefined;\r\n}\r\n\r\nexport let centerToken:string|undefined = undefined;\r\n\r\nlet loginedUserId:number = 0;\r\nexport function setCenterToken(userId:number, t?:string) {\r\n    centerToken = t;\r\n    console.log('setCenterToken %s', t);\r\n    centerChannel = undefined;\r\n    centerChannelUI = undefined;\r\n}\r\n\r\nlet centerChannelUI:HttpChannel;\r\nlet centerChannel:HttpChannel;\r\nfunction getCenterChannelUI():HttpChannel {\r\n    if (centerChannelUI !== undefined) return centerChannelUI;\r\n    return centerChannelUI = new HttpChannel(true, centerHost, centerToken, new HttpChannelNavUI());\r\n}\r\nfunction getCenterChannel():HttpChannel {\r\n    if (centerChannel !== undefined) return centerChannel;\r\n    return centerChannel = new HttpChannel(true, centerHost, centerToken);\r\n}\r\n\r\nexport abstract class CenterApi extends ApiBase {\r\n    constructor(path: string, showWaiting?: boolean) {\r\n        super(path, showWaiting);\r\n    }\r\n\r\n    protected async getHttpChannel(): Promise<HttpChannel> {\r\n        return (this.showWaiting === true || this.showWaiting === undefined)?\r\n            getCenterChannelUI():\r\n            getCenterChannel();\r\n    }\r\n}\r\n\r\nconst uqTokens = 'uqTokens';\r\nexport class UqTokenApi extends CenterApi {\r\n    private local: UqLocals;\r\n    async uq(params: {unit:number, uqOwner:string, uqName:string}):Promise<any> {\r\n        try {\r\n            let {unit:unitParam, uqOwner, uqName} = params;\r\n            if (this.local === undefined) {\r\n                let ls = localStorage.getItem(uqTokens);\r\n                if (ls !== null) {\r\n                    this.local = JSON.parse(ls);\r\n                }\r\n            }\r\n            if (this.local !== undefined) {\r\n                let {unit, user} = this.local;\r\n                if (unit !== unitParam || user !== loginedUserId) this.local = undefined;\r\n            }\r\n            if (this.local === undefined) {\r\n                this.local = {\r\n                    user: loginedUserId,\r\n                    unit: params.unit,\r\n                    uqs: {}\r\n                };\r\n            }\r\n\r\n            let un = uqOwner+'/'+uqName;\r\n            let nowTick = new Date().getTime();\r\n            let uq = this.local.uqs[un];\r\n            if (uq !== undefined) {\r\n                let {tick, value} = uq;\r\n                if ((nowTick - tick) < 24*3600*1000) {\r\n                    return value;\r\n                }\r\n            }\r\n            let ret = await this.get('app-uq', params);\r\n            this.local.uqs[un] = {\r\n                tick: nowTick,\r\n                value: ret,\r\n            }\r\n            localStorage.setItem(uqTokens, JSON.stringify(this.local));\r\n            return ret;\r\n        }\r\n        catch (err) {\r\n            this.local = undefined;\r\n            localStorage.removeItem(uqTokens);\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport const uqTokenApi = new UqTokenApi('tv/tie/', undefined);\r\n\r\nexport class CallCenterApi extends CenterApi {\r\n    directCall(url:string, method:string, body:any):Promise<any> {\r\n        return this.call(url, method, body);\r\n    }\r\n}\r\nexport const callCenterapi = new CallCenterApi('', undefined);\r\n\r\nexport interface App {\r\n    id: number;\r\n    uqs: AppUq[];\r\n}\r\n\r\nexport interface AppUq {\r\n    id: number;\r\n    uqOwner: string;\r\n    uqName: string;\r\n    url: string;\r\n    urlDebug: string;\r\n    ws: string;\r\n    wsDebug: string;\r\n    access: string;\r\n    token: string;\r\n}\r\n\r\nexport class CenterAppApi extends CenterApi {\r\n    private cachedUqs: any;\r\n    async uqs(unit:number, appOwner:string, appName:string):Promise<App> {\r\n        let ret:any;\r\n        let ls = localStorage.getItem('appUqs');\r\n        if (ls !== null) {\r\n            let rLs = JSON.parse(ls);\r\n            let {unit:rUnit, appOwner:rAppOwner, appName:rAppName, value} = rLs;\r\n            if (unit === rUnit && appOwner === rAppOwner && appName === rAppName) ret = value;\r\n        }\r\n        if (ret === undefined) {\r\n            ret = await this.uqsPure(unit, appOwner, appName);\r\n            let obj = {\r\n                unit:unit, \r\n                appOwner:appOwner, \r\n                appName:appName, \r\n                value: ret,\r\n            }\r\n            localStorage.setItem('appUqs', JSON.stringify(obj));\r\n        }\r\n        return this.cachedUqs = _.cloneDeep(ret);\r\n    }\r\n    private async uqsPure(unit:number, appOwner:string, appName:string):Promise<App> {\r\n        return await this.get('tie/app-uqs', {unit:unit, appOwner:appOwner, appName:appName});\r\n    }\r\n    async checkUqs(unit:number, appOwner:string, appName:string):Promise<boolean> {\r\n        let ret = await this.uqsPure(unit, appOwner, appName);\r\n        return _.isMatch(this.cachedUqs, ret);\r\n    }\r\n    async unitxUq(unit:number):Promise<AppUq> {\r\n        return await this.get('tie/unitx-uq', {unit:unit});\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Controller } from 'tonva-tools';\r\n\r\nexport abstract class Link {\r\n    abstract onClick: () => void;\r\n    abstract render(className?:string):JSX.Element;\r\n}\r\n\r\nexport class CLink extends Link {\r\n    private controller: Controller;\r\n    protected icon:string|JSX.Element;\r\n    protected label:string|JSX.Element;\r\n\r\n    constructor(controller:Controller) {\r\n        super();\r\n        this.controller = controller;\r\n        this.icon = controller.icon;\r\n        this.label = controller.label;\r\n    }\r\n\r\n    onClick = async () => {\r\n        await this.controller.start();\r\n    }\r\n\r\n    render(className?:string) {\r\n        return <div\r\n            className={classNames('px-3', 'py-2', 'align-items-center', 'cursor-pointer', className)}\r\n            onClick={this.onClick}>\r\n            {this.icon} &nbsp; {this.label}\r\n        </div>;\r\n        //return React.createElement(this.view, className);\r\n    }\r\n}\r\n","export * from './cLink';\r\n","\r\nlet subAppWindow:Window;\r\nfunction postWsToSubApp(msg:any) {\r\n    if (subAppWindow === undefined) return;\r\n    subAppWindow.postMessage({\r\n        type: 'ws',\r\n        msg: msg\r\n    }, '*');\r\n}\r\n\r\nexport function setSubAppWindow(win:Window) {\r\n    subAppWindow = win;\r\n}\r\n\r\nexport function postWsToTop(msg:any) {\r\n    window.top.postMessage({\r\n        type: 'ws',\r\n        msg: msg\r\n    }, '*');\r\n}\r\n\r\nexport abstract class WsBase {\r\n    wsBaseId:string;\r\n    private handlerSeed = 1;\r\n    private anyHandlers:{[id:number]:(msg:any)=>Promise<void>} = {};\r\n    private msgHandlers:{[id:number]:{type:string, handler:(msg:any)=>Promise<void>}} = {};\r\n    onWsReceiveAny(handler:(msg:any)=>Promise<void>):number {\r\n        let seed = this.handlerSeed++;\r\n        this.anyHandlers[seed] = handler;\r\n        return seed;\r\n    }\r\n    onWsReceive(type:string, handler:(msg:any)=>Promise<void>):number {\r\n        let seed = this.handlerSeed++;\r\n        this.msgHandlers[seed] = {type:type, handler: handler};\r\n        return seed;\r\n    }\r\n    endWsReceive(handlerId:number) {\r\n        delete this.anyHandlers[handlerId];\r\n        delete this.msgHandlers[handlerId];\r\n    }\r\n    async receive(msg:any) {\r\n        let {$type} = msg;\r\n        for (let i in this.anyHandlers) {\r\n            await this.anyHandlers[i](msg);\r\n        }\r\n        for (let i in this.msgHandlers) {\r\n            let {type, handler} = this.msgHandlers[i];\r\n            if (type !== $type) continue;\r\n            await handler(msg);\r\n        }\r\n    }\r\n}\r\n\r\nlet wsBaseSeed = 1;\r\nexport class WsBridge extends WsBase {\r\n    wsBaseId:string = 'WsBridge seed ' + wsBaseSeed++;\r\n}\r\n\r\nexport const wsBridge = new WsBridge();\r\n\r\nexport class WSChannel extends WsBase {\r\n    wsBaseId:string = 'WSChannel seed ' + wsBaseSeed++;\r\n    static centerToken:string;\r\n    private wsHost: string;\r\n    private token: string;\r\n    private ws: WebSocket;\r\n\r\n    constructor(wsHost: string, token: string) {\r\n        super();\r\n        this.wsHost = wsHost;\r\n        this.token = token;\r\n    }\r\n\r\n    static setCenterToken(token?: string) {\r\n        WSChannel.centerToken = token;\r\n    }\r\n    \r\n    connect():Promise<void> {\r\n        //this.wsHost = wsHost;\r\n        //this.token = token || WSChannel.centerToken;\r\n        if (this.ws !== undefined) return;\r\n        let that = this;\r\n        return new Promise((resolve, reject) => {\r\n            let ws = new WebSocket(this.wsHost, this.token || WSChannel.centerToken);\r\n            console.log('connect webSocket %s', this.wsHost);\r\n            ws.onopen = (ev) => {\r\n                console.log('webSocket connected %s', this.wsHost);\r\n                that.ws = ws;\r\n                resolve();\r\n            };\r\n            ws.onerror = (ev) => {\r\n                reject('webSocket can\\'t open!');\r\n            };\r\n            ws.onmessage = async (msg) => await that.wsMessage(msg);\r\n            ws.onclose = (ev) => {\r\n                that.ws = undefined;\r\n                console.log('webSocket closed!');\r\n            }\r\n        });\r\n    }\r\n    close() {\r\n        if (this.ws !== undefined) {\r\n            this.ws.close();\r\n            this.ws = undefined;\r\n        }\r\n    }\r\n    private async wsMessage(event:any):Promise<void> {\r\n        try {\r\n            console.log('websocket message: %s', event.data);\r\n            let msg = JSON.parse(event.data);\r\n            postWsToSubApp(msg);\r\n            await this.receive(msg);\r\n        }\r\n        catch (err) {\r\n            console.log('ws msg error: ', err);\r\n        }\r\n    }\r\n    sendWs(msg:any) {\r\n        let netThis = this;\r\n        this.connect().then(() => {\r\n            netThis.ws.send(msg);\r\n        });\r\n    }\r\n}\r\n","const ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\nconst ID_LENGTH = 8;\r\n\r\nexport function uid():string {\r\n    let len = ALPHABET.length;\r\n    let rtn = '';\r\n    for (let i = 0; i < ID_LENGTH; i++) {\r\n        rtn += ALPHABET.charAt(Math.floor(Math.random() * len));\r\n    }\r\n    return rtn;\r\n}\r\n","export * from './nav';\r\nexport * from './titleBar';\r\nexport * from './page';\r\nexport * from './VM';\r\nexport * from './schema';\r\nexport * from './form';\r\nexport * from './edit';\r\nexport * from './res';\r\nexport * from './tabs';\r\nexport * from './loading';\r\nexport * from './image';\r\nexport * from './resUploader';","export const isDevelopment = process.env.NODE_ENV === 'development';\r\n\r\nconst centerHost = process.env['REACT_APP_CENTER_HOST'];\r\nconst centerDebugHost = 'localhost:3000'; //'192.168.86.64';\r\nconst resHost = process.env['REACT_APP_RES_HOST'] || centerHost;\r\nconst resDebugHost = 'localhost:3015'; //'192.168.86.63';\r\nconst uqDebugHost = 'localhost:3015'; //'192.168.86.63';\r\nconst uqDebugBuilderHost = 'localhost:3009';\r\ninterface HostValue {\r\n    value: string;\r\n    local: boolean;\r\n}\r\nconst hosts:{[name:string]:HostValue} = {\r\n    centerhost: {\r\n        value: process.env['REACT_APP_CENTER_DEBUG_HOST'] || centerDebugHost, \r\n        local: false\r\n    },\r\n    reshost: {\r\n        value: process.env['REACT_APP_RES_DEBUG_HOST'] || resDebugHost,\r\n        local: false\r\n    },\r\n    uqhost: {\r\n        value: process.env['REACT_APP_UQ_DEBUG_HOST'] || uqDebugHost, \r\n        local: false\r\n    },\r\n    unitxhost: {\r\n        value: process.env['REACT_APP_UQ_DEBUG_HOST'] || uqDebugHost, \r\n        local: false\r\n    },\r\n    \"uq-build\": {\r\n        value: process.env['REACT_APP_UQ_DEBUG_BUILDER_HOST'] || uqDebugBuilderHost, \r\n        local: false\r\n    }\r\n}\r\n\r\nfunction centerUrlFromHost(host:string) {return `http://${host}/`}\r\nfunction centerWsFromHost(host:string) {return `ws://${host}/tv/`}\r\n\r\nconst fetchOptions = {\r\n    method: \"GET\",\r\n    mode: \"no-cors\", // no-cors, cors, *same-origin\r\n    headers: {\r\n        \"Content-Type\": \"text/plain\"\r\n    },\r\n};\r\n\r\nclass Host {\r\n    url: string;\r\n    ws: string;\r\n    resHost: string;\r\n\r\n    async start() {\r\n        if (isDevelopment === true) {\r\n            await this.tryLocal();\r\n        }\r\n        let host = this.getCenterHost();\r\n        this.url = centerUrlFromHost(host);\r\n        this.ws = centerWsFromHost(host);\r\n        this.resHost = this.getResHost();\r\n    }\r\n\r\n    private debugHostUrl(host:string) {return `http://${host}/hello`}\r\n    private async tryLocal() {\r\n        let promises:PromiseLike<any>[] = [];\r\n        let hostArr:string[] = [];\r\n        for (let i in hosts) {\r\n            let hostValue = hosts[i];\r\n            let {value} = hostValue;\r\n            if (hostArr.findIndex(v => v === value) < 0) hostArr.push(value);\r\n        }\r\n\r\n        for (let host of hostArr) {\r\n            let fetchUrl = this.debugHostUrl(host);\r\n            promises.push(localCheck(fetchUrl, fetchOptions));\r\n        }\r\n        let results = await Promise.all(promises);\r\n        let len = hostArr.length;\r\n        for (let i=0; i<len; i++) {\r\n            let local = results[i];\r\n            let host = hostArr[i];\r\n            for (let j in hosts) {\r\n                let hostValue = hosts[j];\r\n                if (hostValue.value === host) {\r\n                    hostValue.local = local;\r\n                }\r\n            }\r\n        }\r\n        /*\r\n        let p = 0;\r\n        for (let i in hosts) {\r\n            let hostValue = hosts[i];\r\n            hostValue.local = results[p];\r\n            ++p;\r\n        }\r\n        */\r\n    }\r\n\r\n    private getCenterHost():string {\r\n        let {value, local} = hosts.centerhost;\r\n        let hash = document.location.hash;\r\n        if (hash.includes('sheet_debug') === true) {\r\n            return value;\r\n        }\r\n        if (isDevelopment === true) {\r\n            if (local === true) return value;\r\n        }\r\n        return centerHost;\r\n    }\r\n\r\n    private getResHost():string {\r\n        let {value, local} = hosts.reshost;\r\n        let hash = document.location.hash;\r\n        if (hash.includes('sheet_debug') === true) {\r\n            return value;\r\n        }\r\n        if (isDevelopment === true) {\r\n            if (local === true) return value;\r\n        }\r\n        return resHost;\r\n    }\r\n\r\n    getUrlOrDebug(url:string, urlDebug:string):string {\r\n        if (isDevelopment !== true) return url;\r\n        if (!urlDebug) return url;\r\n        for (let i in hosts) {\r\n            let host = hosts[i];\r\n            let {value, local} = host;\r\n            let hostString = `://${i}/`;\r\n            let pos = urlDebug.indexOf(hostString);\r\n            if (pos > 0) {\r\n                if (local === false) return url;\r\n                urlDebug = urlDebug.replace(hostString, `://${value}/`);\r\n                return urlDebug;\r\n            }\r\n        }\r\n        return url;\r\n    }\r\n}\r\n\r\nexport const host:Host = new Host();\r\n\r\n// 因为测试的都是局域网服务器，甚至本机服务器，所以一秒足够了\r\n// 网上找了上面的fetch timeout代码。\r\n// 尽管timeout了，fetch仍然继续，没有cancel\r\n\r\n// 实际上，一秒钟不够。web服务器会自动停。重启的时候，可能会比较长时间。也许两秒甚至更多。\r\n//const timeout = 2000;\r\nconst timeout = 100;\r\n\r\nfunction fetchLocalCheck(url:string, options?:any):Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      fetch(url, options)\r\n      .then(v => {\r\n          v.text().then(resolve).catch(reject);\r\n      })\r\n      .catch(reject);\r\n      const e = new Error(\"Connection timed out\");\r\n      setTimeout(reject, timeout, e);\r\n    });\r\n}\r\n\r\nasync function localCheck(url:string, options?:any):Promise<boolean> {\r\n    try {\r\n        await fetchLocalCheck(url, options);\r\n        return true;\r\n    }\r\n    catch {\r\n        return false;\r\n    }\r\n}\r\n","const ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\nconst ID_LENGTH = 8;\r\n\r\nexport function uid():string {\r\n    let len = ALPHABET.length;\r\n    let rtn = '';\r\n    for (let i = 0; i < ID_LENGTH; i++) {\r\n        rtn += ALPHABET.charAt(Math.floor(Math.random() * len));\r\n    }\r\n    return rtn;\r\n}\r\n","import * as React from 'react';\r\nimport { SearchBox, List, Muted } from 'tonva-react-form';\r\nimport { TuidMain, Entity } from '../../entities';\r\nimport { Page } from 'tonva-tools';\r\nimport { CLink } from '../link';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CTuidMain, TuidUI } from './cTuid';\r\n\r\nexport class VTuidMain extends VEntity<TuidMain, TuidUI, CTuidMain> {\r\n    protected controller: CTuidMain;\r\n    onNew = () => this.event('new');\r\n    onList = () => this.event('list');\r\n    onSearch = async (key:string) => this.event('list', key);\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected entityRender(link: CLink, index: number): JSX.Element {\r\n        return link.render();\r\n    }\r\n\r\n    protected async entityClick(link: CLink) {\r\n        await link.onClick();\r\n    }\r\n\r\n    protected get view() {\r\n        let {label, proxyLinks, isFrom} = this.controller;\r\n        let newButton;\r\n        if (isFrom === false) newButton = <button className=\"btn btn-primary ml-3\" onClick={this.onNew}>新增</button>;\r\n        return () => <Page header={label}>\r\n            {proxyLinks === undefined ?\r\n            <>\r\n                <SearchBox className=\"w-100\" onSearch={this.onSearch} placeholder={'搜索'+label} />\r\n                <div className='my-3'>\r\n                    {newButton}\r\n                    <button className=\"btn btn-primary ml-3\" onClick={this.onList}>列表</button>\r\n                </div>\r\n            </> :\r\n            <List className=\"my-2\"\r\n                header={<Muted>{label} 代理下列Tuid</Muted>}\r\n                items={proxyLinks}\r\n                item={{render: this.entityRender, onClick:this.entityClick}} />\r\n            }\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { FA } from 'tonva-react-form';\r\nimport { Page } from 'tonva-tools';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CTuidMain, TuidUI } from './cTuid';\r\nimport { TuidMain, Tuid } from '../../entities';\r\n\r\nexport type TypeVTuidEdit = typeof VTuidEdit;\r\n\r\nexport class VTuidEdit extends VEntity<Tuid, TuidUI, CTuidMain> {\r\n    private vForm: VForm;\r\n    private id: number;\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        if (param !== undefined) {\r\n            this.id = param.id;\r\n        }\r\n        this.openPage(this.editView);\r\n    }\r\n\r\n    protected get editView() {\r\n        return () => <Page header={(this.id===undefined? '新增':'编辑') + ' - ' + this.label}>\r\n            {this.vForm.render('py-3')}\r\n        </Page>;\r\n    }\r\n\r\n    protected next = async () => {\r\n        this.vForm.reset();\r\n        this.closePage();\r\n    }\r\n\r\n    protected finish = () => {\r\n        this.closePage(2);\r\n        this.event('edit-end');\r\n    }\r\n\r\n    protected resetForm() {\r\n        this.vForm.reset();\r\n    }\r\n\r\n    protected onSubmit = async () => {\r\n        let values = this.vForm.getValues();\r\n        let ret = await this.controller.entity.save(this.id, values);\r\n        let {id} = ret;\r\n        if (id < 0) {\r\n            let {unique} = this.controller.entity;\r\n            if (unique !== undefined) {\r\n                for (let u of unique) {\r\n                    this.vForm.setError(u, '不能重复');\r\n                }\r\n            }\r\n            return;\r\n        }\r\n        if (this.controller.isCalling) {\r\n            this.returnCall(id);\r\n            this.closePage();\r\n            return;\r\n        }\r\n        this.openPageElement(<Page header={this.label + '提交成功'} back=\"none\">\r\n            <div className='m-3'>\r\n                <span className=\"text-success\">\r\n                    <FA name='check-circle' size='lg' /> 成功提交！\r\n                </span>\r\n                <div className='mt-5'>\r\n                    <button className=\"btn btn-primary mr-3\" onClick={this.next}>继续录入</button>\r\n                    <button className=\"btn btn-outline-primary\" onClick={this.finish}>不继续</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n\r\n        this.event('item-changed', {id: this.id, values: values});\r\n        return;\r\n    }\r\n\r\n    //protected view = TuidNewPage;\r\n}\r\n/*\r\nconst TuidNewPage = observer(({vm}:{vm:VmTuidEdit}) => {\r\n    let {label, id, vmForm} = vm;\r\n    return <Page header={(id===undefined? '新增':'编辑') + ' - ' + label}>\r\n        {vmForm.render('mx-3 my-2')}\r\n    </Page>;\r\n});\r\n*/","import { nav, Page } from 'tonva-tools';\r\nimport { VTuidMainListBase, VTuidDivListBase } from './vTuidList';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Tuid } from '../../entities';\r\nimport { CTuid, TuidUI } from './cTuid';\r\nimport { SearchBox, List } from 'tonva-react-form';\r\nimport React from 'react';\r\nimport { RowContent } from '../form/viewModel';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class VTuidSelect extends VEntity<Tuid, TuidUI, CTuid<Tuid>> {\r\n    protected mainRowContent: (row:any) => JSX.Element;\r\n    protected divRowContent: (row:any) => JSX.Element;\r\n\r\n    async open(param?:any): Promise<void> {\r\n        if (param === undefined)\r\n            await this.showMain(param);\r\n        else\r\n            await this.showDiv(param);\r\n    }\r\n\r\n    private async showMain(param) {\r\n        this.mainRowContent = this.ui.rowContent || RowContent;\r\n        await this.controller.searchMain(param);\r\n        this.openPage(this.mainView);\r\n    }\r\n\r\n    private async showDiv(ownerValue: any) {\r\n        let {divs} = this.ui;\r\n        if (divs !== undefined) {\r\n            this.divRowContent = divs[this.entity.name].rowContent;\r\n        }\r\n        if (this.divRowContent === undefined) {\r\n            this.divRowContent = RowContent;\r\n        }\r\n        let divItems = await this.controller.getDivItems(ownerValue);\r\n        this.openPage(this.divView, {items: divItems});\r\n    }\r\n\r\n    protected mainView = observer(() => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearchMain} placeholder={'搜索'+this.label} />;\r\n        return <Page header={header} back=\"close\">\r\n            <List\r\n                items={this.controller.PageItems.items}\r\n                item={{render: this.renderMainRow, onClick: this.clickMainRow}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    });\r\n\r\n    onSearchMain = async (key:string) => {\r\n        await this.controller.searchMain(key);\r\n        //await this.PageItems.first(key);\r\n    }\r\n    renderMainRow = (item:any, index:number):JSX.Element => <this.mainRowContent {...item} />;\r\n    clickMainRow = async (item:any) => {\r\n        this.ceasePage();\r\n        if (this.controller.entity.owner === undefined) {\r\n            this.returnCall(item);\r\n            return;\r\n        }\r\n        await this.showDiv(this.entity.getIdFromObj(item));\r\n    }\r\n\r\n    protected divView = (param:any) => {\r\n        return <Page header=\"选择Div\">\r\n            <List\r\n                items={param.items}\r\n                item={{render: this.renderDivRow, onClick: this.clickDivRow}} />\r\n        </Page>;\r\n    }\r\n    renderDivRow = (item:any, index:number):JSX.Element => <this.divRowContent {...item} />;\r\n    clickDivRow = (item:any) => {\r\n        this.ceasePage();\r\n        this.returnCall(item);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { FA } from 'tonva-react-form';\r\nimport { Page } from 'tonva-tools';\r\nimport { jsonStringify } from '../../tools';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { TuidMain } from '../../entities';\r\nimport { TuidUI, CTuidMain } from './cTuid';\r\n\r\nexport type TypeVTuidView = typeof VTuidView;\r\n\r\nexport class VTuidView extends VEntity<TuidMain, TuidUI, CTuidMain> {\r\n    vForm: VForm;\r\n    id: number;\r\n\r\n    protected buildForm(param:any) {\r\n        this.vForm = this.createForm(undefined, param);\r\n    }\r\n\r\n    async open(param:any) {\r\n        this.buildForm(param);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    render(param:any) {\r\n        this.buildForm(param);\r\n        return this.vForm.render();\r\n    }\r\n\r\n    async loadId(id: number) {\r\n        this.id = id;\r\n    }\r\n\r\n    protected next = async () => {\r\n        this.vForm.reset();\r\n        this.closePage();\r\n    }\r\n\r\n    protected finish = () => {\r\n        this.closePage(2);\r\n    }\r\n\r\n    protected resetForm() {\r\n        this.vForm.reset();\r\n    }\r\n\r\n    protected onSubmit = async () => {\r\n        let values = this.vForm.getValues();\r\n        let ret = await this.entity.save(this.id, values);\r\n        if (ret) {\r\n            alert('这里还要判断返回值，先不处理了 \\n' + jsonStringify(ret));\r\n        }\r\n        this.openPage(() => <Page header={this.label + '提交成功'} back=\"none\">\r\n            <div className='m-3'>\r\n                <span className=\"text-success\">\r\n                    <FA name='check-circle' size='lg' /> 成功提交！\r\n                </span>\r\n                <div className='mt-5'>\r\n                    <button className=\"btn btn-primary mr-3\" onClick={this.next}>继续录入</button>\r\n                    <button className=\"btn btn-outline-primary\" onClick={this.finish}>不继续</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n        return;\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n            {this.vForm.render('py-3')}\r\n    </Page>;\r\n}\r\n","import React from 'react';\r\nimport { VTuidView } from './vTuidView';\r\n\r\nexport class VTuidInfo  extends VTuidView {\r\n/*\r\n    async open(param?:any) {\r\n        this.open(this.view);\r\n    }\r\n*/\r\n/*\r\n    private view = () => {\r\n        return <Page>\r\n            TuidInfo\r\n        </Page>\r\n    }\r\n*/\r\n}\r\n","import { PageItems } from 'tonva-tools';\r\nimport { Tuid } from \"../../entities\";\r\n\r\nexport class TuidPageItems<T> extends PageItems<T> {\r\n    private tuid: Tuid;\r\n    constructor(tuid: Tuid) {\r\n        super(true);\r\n        this.tuid = tuid;\r\n    }\r\n    protected async load(param:any, pageStart:any, pageSize:number):Promise<any[]> {\r\n        let ret = await this.tuid.search(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:any) {\r\n        this.pageStart = item === undefined? 0 : item.id;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { FA, SearchBox, List } from 'tonva-react-form';\r\nimport { Page, PageItems } from 'tonva-tools';\r\nimport { jsonStringify } from '../../tools';\r\nimport { TuidMain, Entity, Tuid, TuidDiv } from '../../entities';\r\nimport { VEntity } from '../CVEntity';\r\nimport { TuidUI, CTuidMain, CTuidDiv } from './cTuid';\r\nimport { JSONContent, RowContent } from '../form/viewModel';\r\n\r\nexport abstract class VTuidMainListBase  extends VEntity<TuidMain, TuidUI, CTuidMain> {\r\n    protected rowContent: (row:any) => JSX.Element;\r\n    protected ownerId: number;\r\n\r\n    async open(param?:any) {\r\n        this.rowContent = this.ui.rowContent || RowContent;\r\n        if (this.entity.owner !== undefined) this.ownerId = Number(param);\r\n        // 初始查询, key是空的\r\n        //await this.onSearch('');\r\n        await this.controller.searchMain('');\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSearch = async (key:string) => {\r\n        await this.controller.searchMain(key);\r\n        //await this.PageItems.first(key);\r\n    }\r\n    renderRow = (item:any, index:number):JSX.Element => <this.rowContent {...item} />;\r\n\r\n    protected abstract onSelected(item:any): Promise<void>;\r\n    private callOnSelected(item:any) {\r\n        if (this.onSelected === undefined) {\r\n            alert('onSelect is undefined');\r\n            return;\r\n        }\r\n        this.onSelected(item);\r\n    }\r\n    clickRow = (item:any) => {\r\n        this.callOnSelected(item);\r\n    }\r\n    private rowKey = (item:any) => {\r\n        let {id} = item;\r\n        return id;\r\n    }\r\n    protected view = observer(() => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\r\n        let {owner} = this.entity;\r\n        let ownerTop;\r\n        if (owner !== undefined) {\r\n            let ownerObj = owner.valueFromId(this.ownerId);\r\n            ownerTop = <div>owner: {jsonStringify(ownerObj)}</div>;\r\n        }\r\n        return <Page header={header}>\r\n            {ownerTop}\r\n            <List\r\n                items={this.controller.PageItems.items}\r\n                item={{render: this.renderRow, onClick: this.clickRow, key:this.rowKey}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    });\r\n}\r\n\r\nexport class VTuidMainList extends VTuidMainListBase {\r\n    protected async onSelected(item:any) {\r\n        if (this.controller.isFrom === false)\r\n            this.event('edit', item.id);\r\n        else\r\n            this.event('info', item.id);\r\n    }\r\n}\r\n\r\nexport abstract class VTuidDivListBase  extends VEntity<TuidDiv, TuidUI, CTuidDiv> {\r\n    protected ownerId: number;\r\n\r\n    async open(param?:any) {\r\n        //this.PageItems = new TuidPageItems(this.entity);\r\n        if (this.entity.owner !== undefined) this.ownerId = Number(param);\r\n        // 初始查询, key是空的\r\n        //await this.onSearch('');\r\n        await this.controller.searchMain('');\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSearch = async (key:string) => {\r\n        await this.controller.searchMain(key);\r\n        //await this.PageItems.first(key);\r\n    }\r\n    renderRow = (item:any, index:number):JSX.Element => {\r\n        return <div className=\"px-3 py-2\">{jsonStringify(item)}</div>;\r\n    }\r\n\r\n    protected abstract onSelected(item:any): Promise<void>;\r\n    private callOnSelected(item:any) {\r\n        if (this.onSelected === undefined) {\r\n            alert('onSelect is undefined');\r\n            return;\r\n        }\r\n        this.onSelected(item);\r\n    }\r\n    clickRow = (item:any) => {\r\n        this.callOnSelected(item);\r\n    }\r\n\r\n    protected view = observer(() => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\r\n        let {owner} = this.entity;\r\n        let ownerTop;\r\n        if (owner !== undefined) {\r\n            let ownerObj = owner.valueFromId(this.ownerId);\r\n            ownerTop = <div>owner: {jsonStringify(ownerObj)}</div>;\r\n        }\r\n        return <Page header={header}>\r\n            {ownerTop}\r\n            <List\r\n                items={this.controller.PageItems.items}\r\n                item={{render: this.renderRow, onClick: this.clickRow}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    });\r\n}\r\n\r\nexport class VTuidDivList extends VTuidDivListBase {\r\n    protected async onSelected(item:any) {\r\n        this.event('edit', item.id);\r\n    }\r\n}\r\n","import _ from 'lodash';\r\nimport { TypeVPage, PageItems } from 'tonva-tools';\r\nimport { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { TuidMain, Tuid, TuidDiv } from \"../../entities\";\r\nimport { VTuidMain } from './vTuidMain';\r\nimport { VTuidEdit } from './vTuidEdit';\r\nimport { VTuidSelect } from './vTuidSelect';\r\nimport { CUq } from \"../uq/cUq\";\r\nimport { CLink } from \"../link\";\r\nimport { VTuidInfo } from \"./vTuidInfo\";\r\nimport { TuidPageItems } from \"./pageItems\";\r\nimport { VTuidMainList } from './vTuidList';\r\n\r\nexport interface TuidUI extends EntityUI {\r\n    CTuidMain?: typeof CTuidMain;\r\n    CTuidEdit?: typeof CTuidEdit;\r\n    CTuidList?: typeof CTuidList;\r\n\r\n    CTuidSelect?: typeof CTuidSelect;\r\n    CTuidInfo?: typeof CTuidInfo;\r\n    content?: React.StatelessComponent<any>;\r\n    rowContent?: React.StatelessComponent<any>;\r\n    divs?: {\r\n        [div:string]: {\r\n            CTuidSelect?: typeof CTuidSelect;\r\n            content?: React.StatelessComponent<any>;\r\n            rowContent?: React.StatelessComponent<any>;\r\n        }\r\n    }\r\n}\r\n\r\nexport abstract class CTuid<T extends Tuid> extends CEntity<T, TuidUI> {\r\n    PageItems:PageItems<any>;\r\n\r\n    protected buildPageItems():PageItems<any> {\r\n        return new TuidPageItems(this.entity.owner || this.entity);\r\n    }\r\n\r\n    async searchMain(key:string) {\r\n        if (this.PageItems === undefined) {\r\n            this.PageItems = this.buildPageItems();\r\n        }\r\n        if (key !== undefined) await this.PageItems.first(key);\r\n    }\r\n\r\n    async getDivItems(ownerId:number):Promise<any[]> {\r\n        let ret = await this.entity.searchArr(ownerId, undefined, 0, 1000);\r\n        return ret;\r\n    }\r\n}\r\n\r\nexport class CTuidMain extends CTuid<TuidMain> {\r\n    constructor(cUq: CUq, entity: TuidMain, ui: TuidUI, res:any) {\r\n        super(cUq, entity, ui, res);\r\n        let tuid = this.entity;\r\n        this.proxies = tuid.proxies;\r\n        if (this.proxies !== undefined) {\r\n            this.proxyLinks = [];\r\n            for (let i in this.proxies) {\r\n                let link = this.cUq.linkFromName('tuid', i);\r\n                this.proxyLinks.push(link);\r\n            }\r\n        }\r\n    }\r\n\r\n    async from():Promise<CTuidMain> {\r\n        let ret = await this.entity.cFrom();\r\n        if (ret === undefined) return this;\r\n        return ret;\r\n    }\r\n\r\n    async cUqFrom():Promise<CUq> {\r\n        return await this.entity.cUqFrom();\r\n    }\r\n    async cEditFrom(): Promise<CTuidEdit> {\r\n        let cUq = await this.entity.cUqFrom();\r\n        return await cUq.cTuidEditFromName(this.entity.name);\r\n    }\r\n    async cInfoFrom(): Promise<CTuidInfo> {\r\n        let cUq = await this.entity.cUqFrom();\r\n        return await cUq.cTuidInfoFromName(this.entity.name);\r\n    }\r\n    async cSelectFrom(): Promise<CTuidSelect> {\r\n        let cUq = await this.entity.cUqFrom();\r\n        return await cUq.cTuidSelectFromName(this.entity.name);\r\n    }\r\n\r\n    getLable(tuid:Tuid):string {\r\n        if (tuid === this.entity) return this.label;\r\n        let {name} = tuid;\r\n        let {arrs} = this.res;\r\n        if (arrs !== undefined) {\r\n            let arr = arrs[name];\r\n            if (arr !== undefined) {\r\n                let label = arr.label;\r\n                if (label !== undefined) return label;\r\n            }\r\n        }\r\n        return name;\r\n    }\r\n\r\n    proxies: {[name:string]: TuidMain};\r\n    proxyLinks: CLink[];\r\n    isFrom: boolean;\r\n\r\n    protected get VTuidMain():typeof VTuidMain {return VTuidMain}\r\n    protected get VTuidEdit():typeof VTuidEdit {return VTuidEdit}\r\n    protected get VTuidList():typeof VTuidMainList {return VTuidMainList}\r\n\r\n    protected async internalStart(param?:any):Promise<void> {\r\n        this.isFrom = this.entity.schemaFrom !== undefined;\r\n        await this.openVPage(this.VTuidMain);\r\n    }\r\n\r\n    protected async onEvent(type:string, value:any) {\r\n        let v: TypeVPage<CTuidMain>;\r\n        switch (type) {\r\n            default: return;\r\n            case 'new': v = this.VTuidEdit; break;\r\n            case 'list': v = this.VTuidList; break;\r\n            case 'edit': await this.edit(value); return;\r\n            case 'item-changed': this.itemChanged(value); return;\r\n            case 'info': \r\n                let cTuidInfo = new CTuidInfo(this.cUq, this.entity, this.ui, this.res);\r\n                await cTuidInfo.start(value);\r\n                return;\r\n        }\r\n        await this.openVPage(v, value);\r\n    }\r\n\r\n    protected async edit(id:number) {\r\n        let values:any = undefined;\r\n        if (id !== undefined) {\r\n            values = await this.entity.load(id);\r\n        }\r\n        let v = this.VTuidEdit;\r\n        await this.openVPage(v, values);\r\n    }\r\n\r\n    private itemChanged({id, values}:{id:number, values: any}) {\r\n        if (this.PageItems === undefined) return;\r\n        let items = this.PageItems.items;\r\n        let item = items.find(v => v.id === id);\r\n        if (item !== undefined) {\r\n            _.merge(item, values);\r\n        }\r\n    }\r\n}\r\n\r\nexport class CTuidEdit extends CTuidMain {\r\n    protected async internalStart(id:number):Promise<void> {\r\n        await this.edit(id);\r\n    }\r\n}\r\n\r\nexport class CTuidList extends CTuidMain {\r\n    protected async internalStart(id:number):Promise<void> {\r\n        await this.openVPage(this.VTuidList);\r\n    }\r\n}\r\n\r\nexport class CTuidDiv extends CTuid<TuidDiv> {\r\n    protected async internalStart():Promise<void> {\r\n        alert('tuid div: ' + this.entity.name);\r\n    }\r\n}\r\n\r\nexport class CTuidSelect extends CTuid<Tuid> {\r\n    protected async internalStart(param?: any):Promise<void> {\r\n        await this.openVPage(this.VTuidSelect, param);\r\n    }\r\n    protected async beforeStart():Promise<boolean> {\r\n        //if (await super.beforeStart() === false) return false;\r\n        await this.entity.loadSchema();\r\n        if (this.PageItems !== undefined) this.PageItems.reset();\r\n        return true;\r\n    }\r\n    protected get VTuidSelect():typeof VTuidSelect {return VTuidSelect}\r\n    idFromItem(item:any) {\r\n        return item.id;\r\n    }\r\n}\r\n\r\nexport class CTuidInfo extends CTuid<Tuid> {\r\n    protected async internalStart(id: any):Promise<void> {\r\n        let data = await this.entity.load(id)\r\n        await this.openVPage(this.VTuidInfo, data);\r\n    }\r\n    protected get VTuidInfo():typeof VTuidInfo {return VTuidInfo}\r\n}\r\n","export * from './cTuid';\r\nexport * from './vTuidMain';\r\nexport * from './vTuidEdit';\r\nexport * from './vTuidInfo';\r\nexport * from './vTuidView';\r\n","import * as React from 'react';\r\nimport { nav } from './nav';\r\n\r\nexport interface ImageProps {\r\n    src: string;\r\n    className?: string;\r\n    style?: React.CSSProperties;\r\n}\r\n\r\nconst defaultImage = 'http://101.200.46.56/imgs/Bear-icon.png';\r\n\r\nexport function Image(props: ImageProps) {\r\n    let {className, style, src} = props;\r\n    if (!src) {\r\n        src = defaultImage;\r\n    }\r\n    else if (src.startsWith(':') === true) {\r\n        src = nav.resUrl + src.substr(1);\r\n    }\r\n    return <img src={src} className={className} style={style} />;\r\n}\r\n","import * as React from 'react';\r\nimport { VField } from './vField';\r\nimport { VArr } from './vArr';\r\nimport { VSubmit } from './vSubmit';\r\nimport { uid } from 'tonva-react-form';\r\n\r\nexport abstract class VBand {\r\n    protected label: string;\r\n    protected view = () => <div />;\r\n\r\n    constructor(label:string) {\r\n        this.label = label;\r\n    }\r\n\r\n    render():JSX.Element {\r\n        //text-sm-right\r\n        return <div key={this.key} className=\"px-3\">\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-sm-2 col-form-label\">\r\n                    {this.label}\r\n                </label>\r\n                <div className=\"col-sm-10\">\r\n                    {this.renderContent()}\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    setAddRow(addRow:()=>Promise<void>) {}\r\n    get key() {return this.label}\r\n    public getVFields():VField[] {return;}\r\n    public getVArr():VArr {return;}\r\n    public getVSubmit():VSubmit {return;}\r\n\r\n    protected renderContent():JSX.Element {\r\n        return <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">content</div>;\r\n    }\r\n}\r\n\r\nexport interface FieldRes {\r\n    label: string;\r\n    placeHolder: string;\r\n    suffix: string;\r\n}\r\nexport class VFieldBand extends VBand {\r\n    protected vField:VField;\r\n    constructor(label:string, vField:VField) {\r\n        super(label);\r\n        this.vField = vField;\r\n    }\r\n\r\n    get key() {return this.vField.name}\r\n    public getVFields():VField[] {return [this.vField];}\r\n\r\n    protected renderContent():JSX.Element {\r\n        return this.vField.render();\r\n        /*\r\n        <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">\r\n            {this.vField.render()}\r\n        </div>;*/\r\n    }\r\n}\r\n\r\nexport class VArrBand extends VBand {\r\n    protected vArr:VArr;\r\n    constructor(label:string, vArr:VArr) {\r\n        super(label);\r\n        this.vArr = vArr;\r\n    }\r\n\r\n    setAddRow(addRow:()=>Promise<void>) {this.vArr.setAddRow(addRow)}\r\n    get key() {return this.vArr.name}\r\n    public getVArr():VArr {return this.vArr;}\r\n\r\n    render():JSX.Element {\r\n        return <React.Fragment key={this.key}>\r\n            {this.vArr && this.vArr.render()}\r\n        </React.Fragment>;\r\n    }\r\n}\r\n\r\nexport class VFieldsBand extends VBand {\r\n    protected vFields: VField[];\r\n    constructor(label:string, vFields:VField[]) {\r\n        super(label);\r\n        this.vFields = vFields;\r\n    }\r\n\r\n    get key() {return this.vFields[0].name}\r\n    public getVFields():VField[] {return this.vFields;}\r\n\r\n    protected renderContent():JSX.Element {\r\n        return <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">\r\n            fields\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class VSubmitBand extends VBand {\r\n    protected vSubmit: VSubmit;\r\n    constructor(vSubmit:VSubmit) {\r\n        super(undefined);\r\n        this.vSubmit = vSubmit;\r\n    }\r\n\r\n    get key() {return '$submit'}\r\n\r\n    public getVSubmit():VSubmit {return this.vSubmit;}\r\n\r\n    render():JSX.Element {\r\n        return <div key=\"$submit\" className=\"px-3\">\r\n            <div className=\"form-group row\">\r\n                <div className=\"offset-sm-2 col-sm-10\">\r\n                    {this.vSubmit.render()}\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames'\r\nimport { ViewModel } from \"./viewModel\";\r\nimport { VForm } from './vForm';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\n\r\nexport class VSubmit extends ViewModel {\r\n    private vForm: VForm;\r\n    constructor(vForm: VForm) {\r\n        super();\r\n        this.vForm = vForm;\r\n        this.caption = this.vForm.submitCaption;\r\n        this.className = 'btn btn-primary w-25';\r\n    }\r\n    @observable caption: string;\r\n    @observable className: string;\r\n\r\n    private onClickSubmit = async () => {\r\n        this.vForm.submit();\r\n    }\r\n\r\n    protected view = observer(() => {\r\n        let {isOk} = this.vForm;\r\n        return <button type=\"button\" \r\n            onClick={this.onClickSubmit}\r\n            className={this.className}\r\n            disabled={isOk === false}>\r\n            {this.caption}\r\n        </button>;\r\n    });\r\n}","\r\nexport abstract class Rule {\r\n    abstract check(defy:string[], value:any);\r\n}\r\n\r\nexport class RuleRequired extends Rule {\r\n    check(defy:string[], value:any) {\r\n        switch (typeof value) {\r\n            default:\r\n            case 'boolean': return;\r\n            case 'object':\r\n                if (value !== null) return;\r\n                break;\r\n            case 'string':\r\n                if ((value as string).trim().length > 0) return;\r\n                break;\r\n            case 'number':\r\n                if ((value as number) !== NaN) return;\r\n                break;\r\n            case 'undefined':\r\n                break;\r\n        }\r\n        defy.push('不能为空');\r\n    }\r\n}\r\n\r\nexport class RuleNum extends Rule {\r\n    check(defy:string[], value:any) {\r\n        if (value === undefined || value === null) return;\r\n        let n = Number(value);\r\n        if (n === NaN) defy.push('必须是数字');\r\n    }\r\n}\r\n\r\nexport class RuleInt extends Rule {\r\n    check(defy:string[], value:any) {\r\n        if (value === undefined || value === null) return;\r\n        let n = Number(value);\r\n        if (Number.isNaN(n) === true || Number.isInteger(n) === false) {\r\n            defy.push('必须是整数');\r\n        }\r\n    }\r\n}\r\n\r\nexport class RuleMin extends RuleNum {\r\n    constructor(min: number) {\r\n        super();\r\n        this.min = min;\r\n    }\r\n    min: number;\r\n    check(defy:string[], value:any) {\r\n        super.check(defy, value);\r\n        if (Number(value) < this.min) defy.push('不能小于' + this.min);\r\n    }\r\n}\r\n\r\nexport class RuleMax extends RuleNum {\r\n    constructor(max: number) {\r\n        super();\r\n        this.max = max;\r\n    }\r\n    max: number;\r\n    check(defy:string[], value:any) {\r\n        super.check(defy, value);\r\n        if (Number(value) > this.max) defy.push('不能小于' + this.max);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { computed, action } from 'mobx';\r\nimport classNames from 'classnames';\r\nimport { observer } from 'mobx-react';\r\nimport { FA } from 'tonva-react-form';\r\nimport { ViewModel } from \"../viewModel\";\r\nimport { VForm, FormMode } from '../vForm';\r\nimport { Rule, RuleRequired, RuleInt, RuleNum, RuleMin, RuleMax } from '../rule';\r\nimport { Field } from '../../../entities';\r\nimport { FieldRes } from '../vBand';\r\nimport { FieldUI, FieldInputUI, FieldStringUI, FieldNumberUI } from '../../formUI';\r\n\r\nexport abstract class VField extends ViewModel {\r\n    protected form: VForm;\r\n    protected fieldUI: FieldUI;\r\n    protected fieldRes:FieldRes;\r\n    protected field: Field;\r\n    protected rules: Rule[];\r\n    constructor(form:VForm, field:Field, fieldUI: FieldUI, fieldRes:FieldRes) {\r\n        super();\r\n        this.form = form;\r\n        this.field = field;\r\n        this.name = field.name;\r\n        this.fieldUI = fieldUI || {} as any;\r\n        this.fieldRes = fieldRes || {} as any;\r\n        this.init();\r\n    }\r\n\r\n    name: string;\r\n\r\n    protected init() {\r\n        this.buildRules();\r\n    }\r\n\r\n    protected buildRules() {\r\n        this.rules = [];\r\n        let {required} = this.fieldUI;\r\n        if (required === true || this.field !== undefined && this.field.null === false) {\r\n            this.rules.push(new RuleRequired);\r\n        }\r\n    }\r\n\r\n    @computed get checkRules(): string[] {\r\n        let defy = [];\r\n        for (let r of this.rules) r.check(defy, this.value);\r\n        return defy;\r\n    }\r\n\r\n    @computed get isOk() {\r\n        if (this.rules.length === 0) return true;\r\n        let defy = this.checkRules;\r\n        return defy.length === 0;\r\n    }\r\n\r\n    @computed get value() { return this.form.values[this.name]; }\r\n    setValue(v:any) {\r\n        this.form.values[this.name]=v; \r\n    }\r\n    get error() { return this.form.errors[this.name]; }\r\n    set error(err:any) { this.form.errors[this.name]=err; }\r\n    protected parse(str:string):any {return str;}\r\n    get readonly():boolean {\r\n        let {mode} = this.form;\r\n        return mode === FormMode.readonly || \r\n            mode === FormMode.edit && this.fieldUI.editable === false;\r\n    }\r\n}\r\n\r\nexport class VUnknownField extends VField {\r\n    protected view = () => {\r\n        //let {name, type} = this.fieldUI;\r\n        let type='', name = '';\r\n        return <input type=\"text\" className=\"form-control form-control-plaintext border border-info rounded bg-light\"\r\n            placeholder={'unkown control: ' + type + '-' + name} />;\r\n    }\r\n}\r\n\r\nexport abstract class VInputControl extends VField {\r\n    protected fieldUI: FieldInputUI;\r\n    protected input: HTMLInputElement;\r\n\r\n    protected inputType:string;\r\n    protected get maxLength():number {return}\r\n\r\n    protected renderError = (className:string) => {\r\n        let {errors} = this.form;\r\n        let error = errors[this.name];\r\n        if (error === undefined) return;\r\n        return <div className={className}><FA name=\"exclamation-circle\" /> {error}</div>\r\n    }\r\n\r\n    /*\r\n    get value() {\r\n        return super.value;\r\n    }*/\r\n    setValue(v:any) {\r\n        super.setValue(v); this.setInputValue(); \r\n    }\r\n\r\n    protected ref = (input:HTMLInputElement) => {\r\n        this.input = input;\r\n        this.setInputValue();\r\n    }\r\n\r\n    protected setInputValue() {\r\n        if (!this.input) return;\r\n        let v = this.value;\r\n        this.input.value = v === null || v === undefined? '' : v;\r\n    }\r\n\r\n    protected onFocus = () => {\r\n        this.error = undefined;\r\n    }\r\n\r\n    protected onBlur = () => {\r\n        let defy = this.checkRules;\r\n        if (defy.length > 0) {\r\n            this.error = defy[0];\r\n        }\r\n        this.form.computeFields();\r\n    }\r\n\r\n    protected onChange = (evt: React.ChangeEvent<any>) => {\r\n        let v = this.parse(evt.currentTarget.value);\r\n        if (v === null) {\r\n            return;\r\n        }\r\n        this.setValue(v);\r\n    }\r\n\r\n    protected onKeyPress: (event:React.KeyboardEvent<HTMLInputElement>) => void;\r\n    \r\n    protected view = observer(() => {\r\n        let {required} = this.fieldUI;\r\n        let {placeHolder, suffix} = this.fieldRes;\r\n        let ctrlCN = ['form-control', 'form-control-input'];\r\n        let errCN = 'text-danger small mt-1 mx-2';\r\n    \r\n        let redDot;\r\n        let input;\r\n        if (this.readonly === true) {\r\n            input = <input className={classNames(ctrlCN, 'bg-light')}\r\n                ref={this.ref}\r\n                type={this.inputType}\r\n                readOnly={true}\r\n            />;\r\n        }\r\n        else {\r\n            input = <input className={classNames(ctrlCN)}\r\n                ref={this.ref}\r\n                type={this.inputType}\r\n                onFocus={this.onFocus}\r\n                onBlur={this.onBlur}\r\n                onChange={this.onChange}\r\n                placeholder={placeHolder}\r\n                readOnly={false}\r\n                maxLength={this.maxLength}\r\n                onKeyPress={this.onKeyPress}\r\n            />;\r\n            if (required === true || this.field.null === false) {\r\n                redDot = <RedMark />;\r\n            }\r\n        }\r\n\r\n        let inputGroup;\r\n        if (suffix === undefined)\r\n            inputGroup = input;\r\n        else\r\n            inputGroup = <div className=\"input-group\">\r\n                {input}\r\n                <div className=\"input-group-append\">\r\n                    <span className=\"input-group-text\">{suffix}</span>\r\n                </div>\r\n            </div>;\r\n\r\n        return <>\r\n            {redDot}\r\n            {inputGroup}\r\n            {this.renderError(errCN)}\r\n        </>\r\n    });\r\n}\r\n\r\nexport const RedMark = () => <b style={{color:'red', position:'absolute', left:'0.1em', top:'0.5em'}}>*</b>;\r\n\r\nexport class VStringField extends VInputControl {\r\n    protected fieldUI: FieldStringUI;\r\n    protected inputType:string = 'text';\r\n    protected get maxLength():number {return this.field.size}\r\n}\r\n\r\nconst KeyCode_Neg = 45;\r\nconst KeyCode_Dot = 46;\r\n\r\nexport abstract class VNumberControl extends VInputControl {\r\n    protected fieldUI: FieldNumberUI;\r\n    protected extraChars: number[];\r\n\r\n    protected init() {\r\n        super.init();\r\n        this.extraChars = [];\r\n        if (this.fieldUI !== undefined) {\r\n            let {min, max} = this.fieldUI;\r\n            if (min !== undefined) {\r\n                //this.rules.push((v:number) => {if (v === undefined) return; if (v<min) return ErrMin + min; return true;});\r\n                if (min < 0) this.extraChars.push(KeyCode_Neg);\r\n            }\r\n            else {\r\n                this.extraChars.push(KeyCode_Neg);\r\n            }\r\n    \r\n            if (max !== undefined) {\r\n                //this.rules.push((v:number) => {if (v === undefined) return; if (v>max) return ErrMax + max; return true});\r\n            }\r\n        }\r\n        switch (this.field.type) {\r\n            case 'dec':\r\n            case 'bigint':\r\n            case 'int':\r\n            case 'smallint':\r\n            case 'tinyint':\r\n                this.extraChars.push(KeyCode_Dot); break;\r\n        }\r\n    }\r\n\r\n    protected buildRules() {\r\n        super.buildRules();\r\n        this.rules.push(new RuleNum);\r\n        let {min, max} = this.fieldUI;\r\n        if (min !== undefined) this.rules.push(new RuleMin(min));\r\n        if (max !== undefined) this.rules.push(new RuleMax(max));\r\n    }\r\n\r\n    inputType:string = 'number';\r\n\r\n    protected parse(text:string):any {\r\n        try {\r\n            if (text.trim().length === 0) return undefined;\r\n            let ret = Number(text);\r\n            return (ret === NaN)? null : ret;\r\n        }\r\n        catch {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    protected setInputValue() {\r\n        if (!this.input) return;\r\n        let v = this.value;\r\n        if (this.parse(this.input.value) == v) return;\r\n        this.input.value = v === null || v === undefined? '' : v;\r\n    }\r\n\r\n    protected onKeyPress = (event:React.KeyboardEvent<HTMLInputElement>) => {\r\n        let ch = event.charCode;\r\n        if (ch === 8 || ch === 0 || ch === 13 || ch >= 48 && ch <= 57) return;\r\n        if (this.extraChars !== undefined) {\r\n            if (this.extraChars.indexOf(ch) >= 0) {\r\n                switch (ch) {\r\n                    case KeyCode_Dot: this.onKeyDot(); break;\r\n                    case KeyCode_Neg: this.onKeyNeg(); event.preventDefault(); break;\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    private onKeyDot() {\r\n        let v = this.input.value;\r\n        let p = v.indexOf('.');\r\n        if (p >= 0) this.input.value = v.replace('.', '');\r\n    }\r\n    private onKeyNeg() {\r\n        let v = this.input.value;\r\n        let p = v.indexOf('-');\r\n        if (p >= 0) v = v.replace('-', '');\r\n        else v = '-'+v;\r\n        this.input.value = v;\r\n    }\r\n}\r\n\r\nexport class VIntField extends VNumberControl {\r\n    protected buildRules() {\r\n        super.buildRules();\r\n        this.rules.push(new RuleInt);\r\n    }\r\n}\r\n\r\nexport class VDecField extends VNumberControl {\r\n}\r\n\r\nexport class VTextField extends VStringField {\r\n\r\n}\r\n\r\nexport class VDateTimeField extends VStringField {\r\n\r\n}\r\n","import React from 'react';\r\nimport { VField } from './vField';\r\nimport { Field } from '../../../entities';\r\nimport { VForm } from '../vForm';\r\nimport { observer } from 'mobx-react';\r\nimport { FieldRes } from '../vBand';\r\n\r\nexport class VComputeField extends VField {\r\n    constructor(form:VForm, field: Field, fieldRes: FieldRes) {\r\n        super(form, field, undefined, fieldRes);\r\n    }\r\n    protected view = observer(() => {\r\n        let value = this.form.values[this.field.name];\r\n        let {placeHolder, suffix} = this.fieldRes;\r\n        let ctrlCN = 'form-control form-control-input bg-light';\r\n        if (value === null) value = '';\r\n        let input = <input className={ctrlCN}\r\n            type=\"text\"\r\n            placeholder={placeHolder}\r\n            readOnly={true}\r\n            value={value}/>\r\n        let inputGroup;\r\n        if (suffix === undefined)\r\n            inputGroup = input;\r\n        else\r\n            inputGroup = <div className=\"input-group\">\r\n                {input}\r\n                <div className=\"input-group-append\">\r\n                    <span className=\"input-group-text\">{suffix}</span>\r\n                </div>\r\n            </div>;\r\n        return inputGroup;\r\n        /*\r\n            return <div \r\n            className=\"form-control form-control-plaintext border border-info rounded bg-light cursor-pointer\">\r\n            {value} &nbsp;\r\n        </div>;\r\n        */\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { IObservableArray, observable } from 'mobx';\r\nimport _ from 'lodash';\r\nimport { List, FA, Muted } from 'tonva-react-form';\r\nimport { Page, nav } from 'tonva-tools';\r\nimport { ViewModel, RowContent, TypeContent, JSONContent } from './viewModel';\r\nimport { ArrFields, Field } from '../../entities';\r\nimport { VForm, FieldInputs, FormMode } from './vForm';\r\nimport { FormArr } from '../formUI';\r\n\r\nexport type ArrEditRow = (initValues:any, onRowChanged:(rowValues:any)=>void) => Promise<void>;\r\n\r\nexport class VArr extends ViewModel {\r\n    protected mode: FormMode;\r\n    protected label: any;\r\n    protected header: any;\r\n    protected footer: any;\r\n    protected rowValues: any;                 // 仅仅用来判断是不是新增，undefined则是新增\r\n    protected onEditRow: ArrEditRow;\r\n    protected ownerForm:VForm;\r\n    protected vForm:VForm;\r\n    protected rowContent:TypeContent;\r\n    protected none: string;\r\n    protected newSubmitCaption: string;\r\n    protected editSubmitCaption: string;\r\n    protected addRow: ()=>Promise<void>;\r\n\r\n    name:string;\r\n    list: IObservableArray<any>;\r\n\r\n    constructor(ownerForm:VForm, arr:ArrFields, onEditRow?:ArrEditRow) {\r\n        super();\r\n        this.ownerForm = ownerForm;\r\n        let {name, fields} = arr;\r\n        this.name = name;\r\n        let {ui, res, mode, inputs, values} = ownerForm;\r\n        let arrsRes = res.arrs;\r\n        let arrRes = arrsRes !== undefined? arrsRes[name] : {};\r\n        let {label, none, newSubmit, editSubmit} = arrRes;\r\n        this.none = none || ownerForm.none;\r\n        this.newSubmitCaption = newSubmit || ownerForm.arrNewCaption;\r\n        this.editSubmitCaption = editSubmit || ownerForm.arrEditCaption;\r\n        this.label = label || name;\r\n        let arrUI = ((ui && ui.items[name]) || {}) as FormArr;\r\n        this.rowContent = arrUI.rowContent;// || JSONContent;\r\n        this.mode = mode;\r\n        if (this.onEditRow === undefined) {\r\n            this.vForm = new VForm({\r\n                fields: fields,\r\n                arrs: undefined,\r\n                ui: arrUI,\r\n                res: arrRes,\r\n                inputs: inputs[name] as FieldInputs,\r\n                none: ownerForm.none,\r\n                submitCaption: 'submit',\r\n                arrNewCaption: undefined,\r\n                arrEditCaption: undefined,\r\n                arrTitleNewButton: undefined,\r\n                mode: mode,\r\n            }, \r\n            mode===FormMode.readonly? undefined: this.onSubmit);\r\n        }\r\n        else {\r\n            this.onEditRow = onEditRow;\r\n        }\r\n        this.list = values[name];\r\n    }\r\n\r\n    reset() {\r\n        this.vForm.reset();\r\n        this.list.clear();\r\n    }\r\n\r\n    setAddRow(addRow:()=>Promise<void>) {\r\n        this.addRow = addRow;\r\n    }\r\n\r\n    protected rowPage = () => {\r\n        return <Page header={this.label} back=\"close\">\r\n            {this.vForm.render('py-3')}\r\n        </Page>\r\n    }\r\n    private onSubmit = async () => {\r\n        let {valueBoxs} = this.vForm;\r\n        await this.onRowChanged(valueBoxs);\r\n    }\r\n\r\n    private onRowChanged = async (rowValues:any) => {\r\n        if (this.rowValues === undefined) {\r\n            rowValues.$owner = this.ownerForm.values;\r\n            this.list.push(rowValues);\r\n            if (this.onEditRow === undefined)\r\n                this.vForm.reset();\r\n            else\r\n                await this.onEditRow(undefined, this.onRowChanged);\r\n        }\r\n        else {\r\n            _.merge(this.rowValues, rowValues);\r\n            if (this.onEditRow === undefined) nav.pop();\r\n        }\r\n    }\r\n\r\n    private renderItem = (item:any, index:number) => {\r\n        if (this.rowContent === undefined)\r\n            return <div className=\"px-3 py-2\"><JSONContent {...item} /></div>\r\n        return <this.rowContent {...item} />;\r\n    }\r\n    private showRow = async (rowValues:any):Promise<any> => {\r\n        if (this.onEditRow !== undefined) {\r\n            await this.onEditRow(rowValues, this.onRowChanged);\r\n            return;\r\n        }\r\n        this.vForm.reset();\r\n        if (rowValues !== undefined) this.vForm.setValues(rowValues);\r\n        nav.push(<this.rowPage />);\r\n    }\r\n    private editRow = async (rowValues:any): Promise<void> => {\r\n        this.rowValues = rowValues;\r\n        let {vSubmit} = this.vForm;\r\n        if (vSubmit !== undefined) {\r\n            vSubmit.caption = this.editSubmitCaption;\r\n            vSubmit.className = 'btn btn-outline-success';\r\n        }\r\n        this.vForm.mode = this.ownerForm.mode;\r\n        await this.showRow(rowValues);\r\n    }\r\n    private internalAddRow = async () => {\r\n        this.rowValues = undefined;\r\n        let {vSubmit} = this.vForm;\r\n        vSubmit.caption = this.newSubmitCaption;\r\n        vSubmit.className = 'btn btn-outline-success';\r\n        this.vForm.reset();\r\n        this.vForm.mode = FormMode.new;\r\n        await this.showRow(undefined);\r\n    }\r\n\r\n    protected view = () => {\r\n        let button;\r\n        if (this.addRow !== undefined || this.mode !== FormMode.readonly) {\r\n            button = <button onClick={this.addRow || this.internalAddRow}\r\n                type=\"button\" \r\n                className=\"btn btn-link p-0\">\r\n                {this.ownerForm.arrTitleNewButton}\r\n            </button>;\r\n        }\r\n        let header = this.header || <div className=\"px-3 bg-light small\" style={{paddingTop:'1px', paddingBottom:'1px'}}>\r\n            <div className=\"flex-fill align-self-center\">{this.label}</div>\r\n            {button}\r\n        </div>;\r\n        return <List className=\"pb-3\"\r\n            header={header}\r\n            none={<Muted className=\"px-3 py-2\">{this.none}</Muted>}\r\n            items={this.list}\r\n            item={{render: this.renderItem, onClick: this.editRow}} />;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { tv } from '../../../tools';\r\nimport { Field, Tuid } from '../../../entities';\r\nimport { VField, RedMark } from \"./vField\";\r\nimport { FieldUI } from '../../formUI';\r\nimport { VForm, FieldInput, FormMode } from '../vForm';\r\nimport { FieldRes } from '../vBand';\r\n\r\nconst buttonStyle:React.CSSProperties = {\r\n    textAlign:'left', \r\n    paddingLeft:'0.75rem', \r\n    paddingRight:'0.75rem', \r\n    overflow: 'hidden'\r\n};\r\n\r\nexport class VTuidField extends VField {\r\n    protected vForm: VForm;\r\n    protected input: FieldInput;\r\n    protected tuid: Tuid;\r\n\r\n    constructor(vForm: VForm, field:Field, fieldUI: FieldUI, fieldRes:FieldRes) {\r\n        super(vForm, field, fieldUI, fieldRes);\r\n        this.tuid = field._tuid;\r\n        this.vForm = vForm;\r\n        this.input = vForm.inputs[field.name] as FieldInput;\r\n    }\r\n\r\n    onClick = async () => {\r\n        if (this.readonly === true) {\r\n            if (!this.value) return;\r\n            await this.tuid.showInfo(this.value.id);\r\n            return;\r\n        }\r\n        let id:number;\r\n        if (this.input !== undefined) {\r\n            id = await this.input.select(this.vForm, this.field, this.vForm.getValues());\r\n        }\r\n        else {\r\n            alert('call undefined');\r\n            id = 0;\r\n        }\r\n        this.setValue(this.tuid.boxId(id));\r\n    }\r\n    protected view = observer(() => {\r\n        let {placeHolder} = this.fieldRes;\r\n        let disabled:boolean = false;\r\n        let {_ownerField} = this.field;\r\n        if (_ownerField !== undefined) {\r\n            let {name, arr} = _ownerField;\r\n            disabled = this.vForm.getValue(name) === null;\r\n        }\r\n        let content;\r\n        if (this.value === null)\r\n            content = <>{placeHolder || this.input.placeHolder}</>;\r\n        else if (typeof this.value === 'object') {\r\n            content = tv(this.value);\r\n        }\r\n        else {\r\n            let idBox = this.tuid.boxId(this.value);\r\n            content = tv(idBox); // idBox.content();\r\n        }\r\n        if (this.readonly === true)\r\n        {\r\n            return <div \r\n                className=\"form-control form-control-plaintext border border-info rounded bg-light cursor-pointer\"\r\n                onClick={this.onClick}>\r\n                {content}\r\n            </div>;\r\n        }\r\n        let redDot;\r\n        let {required} = this.fieldUI;\r\n        if (required === true || this.field.null === false) {\r\n            redDot = <RedMark />;\r\n        }\r\n        return <>\r\n            {redDot}\r\n            <button className=\"form-control btn btn-outline-info\"\r\n                type=\"button\"\r\n                disabled={disabled}\r\n                style={buttonStyle}\r\n                onClick={this.onClick}>\r\n                {content}\r\n            </button>\r\n        </>;\r\n    })\r\n}\r\n","import { VBand, VFieldBand, VArrBand, VFieldsBand, VSubmitBand, FieldRes } from \"./vBand\";\r\nimport { Field, ArrFields } from \"../../entities\";\r\nimport { VForm, FormOptions } from \"./vForm\";\r\nimport { FormItems, FieldUI, FormItem } from \"../formUI\";\r\nimport { VSubmit } from \"./vSubmit\";\r\nimport { VField, buildVField, VComputeField } from \"./vField\";\r\nimport { VArr } from \"./vArr\";\r\nimport { VTuidField } from \"./vField/vTuidField\";\r\n\r\nexport class BandsBuilder {\r\n    private vForm: VForm;\r\n    private onSubmit: (values:any)=>Promise<void>;\r\n    private fields: Field[];\r\n    private arrs: ArrFields[];\r\n    private formItems: FormItems;\r\n    private layout: string[];\r\n    private res: any;\r\n    constructor(vForm:VForm, options: FormOptions, onSubmit: (values:any)=>Promise<void>) {\r\n        this.vForm = vForm;\r\n        this.onSubmit = onSubmit;\r\n        let {fields, arrs, ui, res} = options;\r\n        this.fields = fields;\r\n        this.arrs = arrs;\r\n        if (ui !== undefined) {\r\n            let {items, layout} = ui;\r\n            this.formItems = items;\r\n            this.layout = layout;\r\n        }\r\n        this.res = res;\r\n    }\r\n\r\n    build():VBand[] {\r\n        //return this.bandUIs === undefined? this.bandsOnFly() : this.bandsFromUI();\r\n        return this.layout === undefined? this.bandsOnFly() : this.bandsFromLayout();\r\n    }\r\n\r\n    private resFromName(name:string, res:any):string|FieldRes {\r\n        if (res === undefined) return;\r\n        let {fields} = res;\r\n        if (fields === undefined) return;\r\n        return fields[name] || name;\r\n    }\r\n\r\n    private bandsOnFly():VBand[] {\r\n        let bands:VBand[] = [];\r\n        this.bandsFromFields(bands, this.fields, this.res);\r\n        if (this.arrs !== undefined) {\r\n            for (let arr of this.arrs) bands.push(this.bandFromArr(arr));\r\n        }\r\n        if (this.onSubmit !== undefined) {\r\n            bands.push(new VSubmitBand(new VSubmit(this.vForm)));\r\n        }\r\n        return bands;\r\n    }\r\n\r\n    private bandsFromFields(bands:VBand[], fields:Field[], res:any) {\r\n        if (fields === undefined) return;\r\n        for (let field of fields) bands.push(this.bandFromField(field, res));\r\n    }\r\n\r\n    private bandsFromLayout():VBand[] {\r\n        let bands:VBand[] = [];\r\n        /*\r\n        for (let bandUI of this.bandUIs)  {\r\n            let band = this.bandFromUI(bandUI);\r\n            bands.push(band);\r\n        }\r\n        */\r\n        return bands;\r\n    }\r\n\r\n    /*\r\n    private bandFromUI(bandUI:BandUI):VBand {\r\n        let {band} = bandUI;\r\n        switch (band) {\r\n            default: return this.bandFromFieldUI(bandUI as FieldBandUI);\r\n            case 'arr': return this.bandFromArrUI(bandUI as ArrBandUI);\r\n            case 'fields': return this.bandFromFieldsUI(bandUI as FieldsBandUI);\r\n            case 'submit': return this.bandFromSubmitUI(bandUI as SubmitBandUI);\r\n        }\r\n    }\r\n    \r\n    private bandFromFieldUI(bandUI: FieldBandUI): VFieldBand {\r\n        let {label} = bandUI;\r\n        let vField = this.vFieldFromUI(bandUI);\r\n        return new VFieldBand(label, vField);\r\n    }\r\n    private bandFromArrUI(bandUI: ArrBandUI): VArrBand {\r\n        let {label, name} = bandUI;\r\n        let vArr = this.vArrFromUI(bandUI);\r\n        return new VArrBand(label, vArr);\r\n    }\r\n    private bandFromFieldsUI(bandUI: FieldsBandUI): VFieldsBand {\r\n        let {label, fieldUIs} = bandUI;\r\n        let vFields = fieldUIs.map(v => this.vFieldFromUI(v));\r\n        return new VFieldsBand(label, vFields);\r\n    }\r\n    private bandFromSubmitUI(bandUI: SubmitBandUI): VSubmitBand {\r\n        if (this.onSubmit === undefined) return;\r\n        let vSubmit = new VSubmit(this.vForm);\r\n        return new VSubmitBand(vSubmit);\r\n    }\r\n    */\r\n/*\r\n    private vFieldFromField(field:Field, fieldRes:FieldRes, formItem: FormItem): VField {\r\n        let fieldUI:FieldUI = undefined;\r\n        if (formItem !== undefined) {\r\n            if (typeof formItem === 'function') {\r\n                return new VComputeField(this.vForm, field, fieldRes);\r\n            }\r\n        }\r\n        let ret = buildVField(this.vForm, field, formItem, fieldRes);\r\n        if (ret !== undefined) return ret;\r\n        return new VTuidField(field, fieldUI, fieldRes, this.vForm);\r\n    }\r\n*/\r\n    private bandFromField(field:Field, res:any):VBand {\r\n        let {name} = field;\r\n        let fieldRes:FieldRes;\r\n        let rfn = this.resFromName(name, res);\r\n        let label:string;\r\n        if (typeof rfn === 'object') {\r\n            label = rfn.label;\r\n            fieldRes = rfn;\r\n        }\r\n        else {\r\n            label = rfn as string;\r\n            fieldRes = undefined;\r\n        }\r\n        let vField:VField;\r\n        let formItem:FormItem;\r\n        if (this.formItems !== undefined) formItem = this.formItems[name];\r\n        //let vField = this.vFieldFromField(field, fieldRes as FieldRes, formItem);\r\n        //let fieldUI:FieldUI = undefined;\r\n        if (typeof formItem === 'function') {\r\n            vField = new VComputeField(this.vForm, field, fieldRes);\r\n        }\r\n        else {\r\n            vField = buildVField(this.vForm, field, formItem as FieldUI, fieldRes);\r\n        }\r\n        if (vField === undefined) {\r\n            vField = new VTuidField(this.vForm, field, formItem as FieldUI, fieldRes);\r\n        }\r\n        return new VFieldBand(label || name, vField);\r\n    }\r\n\r\n    private bandFromArr(arr: ArrFields):VBand {\r\n        let {name, fields} = arr;\r\n        //let row = JSONContent;\r\n        //let bands:VBand[] = [];\r\n        //this.bandsFromFields(bands, fields, res);\r\n        let vArr = new VArr(this.vForm, arr); // name, res && res.label || name, row, bands);\r\n        return new VArrBand(name, vArr);\r\n    }\r\n\r\n    /*\r\n    private vFieldFromUI(fieldUI:FieldUI):VField {\r\n        return;\r\n    }\r\n\r\n    private vArrFromUI(arrBandUI:ArrBandUI):VArr {\r\n        return;\r\n    }\r\n    */\r\n}\r\n","import { VField, VIntField, VDecField, VStringField, VTextField, VDateTimeField } from './vField';\r\nimport { Field } from '../../../entities';\r\nimport { FieldRes } from '../vBand';\r\nimport { VForm } from '../vForm';\r\nimport { FieldUI } from '../../formUI';\r\n\r\nexport function buildVField(form:VForm, field: Field, fieldUI: FieldUI, fieldRes:FieldRes): VField {\r\n    let vField:new (form:VForm, field:Field, ui:FieldUI, fieldRes:FieldRes) => VField;\r\n    switch (field.type) {\r\n        default: return;\r\n        case 'tinyint':\r\n        case 'smallint':\r\n        case 'int':\r\n            vField = VIntField;\r\n            break;\r\n        case 'bigint':\r\n            let {_tuid} = field;\r\n            if (_tuid !== undefined) return;\r\n            vField = VIntField;\r\n            break;\r\n        case 'dec':\r\n            vField = VDecField;\r\n            break;\r\n        case 'char':\r\n            vField = VStringField;\r\n            break;\r\n        case 'text':\r\n            vField = VTextField;\r\n            break;\r\n        case 'datetime':\r\n            vField = VDateTimeField;\r\n            break;\r\n    }\r\n    return new vField(form, field, fieldUI, fieldRes);\r\n}\r\n\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport { observer } from \"mobx-react\";\r\nimport { VBand } from './vBand';\r\nimport { BandsBuilder } from './bandsBuilder';\r\nimport { Field, ArrFields } from '../../entities';\r\nimport { computed, observable, IObservableObject, IObservableValue } from 'mobx';\r\nimport { VArr } from './vArr';\r\nimport { FormUI, FormUIBase, FormItems } from '../formUI';\r\nimport { VField } from './vField';\r\nimport { VSubmit } from './vSubmit';\r\nimport { IObservableArray } from 'mobx';\r\nimport { FA } from 'tonva-react-form';\r\n\r\nexport type FieldCall = (form:VForm, field:Field, values:any) => Promise<any>;\r\nexport interface FieldInput {\r\n    select: FieldCall;\r\n    content: React.StatelessComponent<any>;\r\n    placeHolder: string;\r\n}\r\nexport interface FieldInputs {\r\n    [fieldOrArr:string]: FieldInput | {[field:string]: FieldInput};\r\n}\r\nexport enum FormMode {new, edit, readonly}\r\n\r\nexport interface FormOptions {\r\n    fields: Field[];\r\n    arrs?: ArrFields[];\r\n    ui: FormUIBase;\r\n    res: any;\r\n    inputs: FieldInputs;\r\n    submitCaption: string;\r\n    arrNewCaption: string;\r\n    arrEditCaption: string;\r\n    arrTitleNewButton: JSX.Element;\r\n    none: string;\r\n    mode: FormMode;\r\n}\r\n\r\nexport class VForm {\r\n    protected fields: Field[];\r\n    protected arrs: ArrFields[];\r\n    protected bands: VBand[];\r\n    protected bandColl: {[key:string]: VBand};\r\n    protected onSubmit: ()=>Promise<void>;\r\n\r\n    constructor(options: FormOptions, onSubmit: ()=>Promise<void>) {\r\n        let {fields, arrs, ui, res, inputs, none, submitCaption, arrNewCaption, arrEditCaption, arrTitleNewButton, mode} = options;\r\n        this.fields = fields;\r\n        this.arrs = arrs;\r\n        this.ui = ui;\r\n        if (this.ui !== undefined) this.formItems = this.ui.items; //.compute = this.ui.compute;\r\n        this.res = res;\r\n        this.inputs = inputs;\r\n        this.none = none;\r\n        this.submitCaption = submitCaption;\r\n        this.arrNewCaption = arrNewCaption;\r\n        this.arrEditCaption = arrEditCaption;\r\n        this.arrTitleNewButton = arrTitleNewButton || <small><FA name=\"plus\" /> 新增</small>;\r\n        if (onSubmit === undefined) this.mode = FormMode.readonly;\r\n        else this.mode = mode;\r\n        this.buildFormValues();\r\n        this.buildBands(options, onSubmit);\r\n        this.onSubmit = onSubmit;\r\n    }\r\n\r\n    ui: FormUI;\r\n    res: any;\r\n    values: any;\r\n    errors: any;\r\n    formItems: FormItems;\r\n    mode: FormMode;\r\n    vFields: {[name:string]:VField} = {};\r\n    vArrs: {[name:string]: VArr} = {};\r\n    vSubmit: VSubmit;\r\n    inputs: FieldInputs;\r\n    none: string;\r\n    submitCaption: string;\r\n    arrNewCaption: string;\r\n    arrEditCaption: string;\r\n    arrTitleNewButton: JSX.Element;\r\n\r\n    private buildBands(options: FormOptions, onSubmit: (values:any)=>Promise<void>) {\r\n        this.bandColl = {};\r\n        let bandsBuilder = new BandsBuilder(this, options, onSubmit);\r\n        this.bands = bandsBuilder.build();\r\n        for (let band of this.bands) {\r\n            this.bandColl[band.key] = band;\r\n            let vFields = band.getVFields();\r\n            if (vFields !== undefined) for (let f of vFields) this.vFields[f.name] = f;\r\n            let vArr = band.getVArr();\r\n            if (vArr !== undefined) this.vArrs[vArr.name] = vArr;\r\n            let vSubmit = band.getVSubmit();\r\n            if (vSubmit !== undefined) this.vSubmit = vSubmit;\r\n        }\r\n    }\r\n\r\n    private onFormSubmit = (event:React.FormEvent<any>) => {\r\n        event.preventDefault();\r\n        return false;\r\n    }\r\n\r\n    protected view = observer(({className}:{className:string}) => {\r\n        return <form className={className} onSubmit={this.onFormSubmit}>\r\n            {this.bands.map(v => v.render())}\r\n        </form>;\r\n    });\r\n\r\n    getBand(name:string) {\r\n        return this.bandColl[name];\r\n    }\r\n\r\n    computeFields() {\r\n        if (this.formItems === undefined) return;\r\n        let values = this.values;\r\n        for (let i in this.formItems) {\r\n            let item = this.formItems[i];\r\n            if (typeof item !== 'function') continue;\r\n            values[i] = item.call(values);\r\n        }\r\n    }\r\n\r\n    async submit() {\r\n        if (this.onSubmit === undefined) return;\r\n        await this.onSubmit();\r\n    }\r\n    \r\n    getValues() {\r\n        let ret:any = {};\r\n        let values = this.values;\r\n        for (let f of this.fields) {\r\n            let {name} = f;\r\n            let v = values[name]\r\n            ret[name] =  v !== null && typeof v === 'object' ? v.id : v;\r\n        }\r\n        if (this.arrs !== undefined) {\r\n            for (let arr of this.arrs) {\r\n                let {name, fields, id, order} = arr;\r\n                let list = ret[name] = [];\r\n                let rows = this.vArrs[name].list;\r\n                for (let row of rows) {\r\n                    let item = {} as any;\r\n                    if (id !== undefined) item[id] = row[id];\r\n                    if (order !== undefined) item[order] = row[order];\r\n                    for (let f of fields) {\r\n                        let {name:fn} = f;\r\n                        let v = row[fn]\r\n                        item[fn] =  v !== null && typeof v === 'object' ? v.id : v;\r\n                    }\r\n                    list.push(item);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    get valueBoxs() {\r\n        let ret:any = {};\r\n        let values = this.values;\r\n        for (let f of this.fields) {\r\n            let {name, _tuid} = f;\r\n            let v = values[name]\r\n            ret[name] =  _tuid === undefined || typeof v === 'object' ? v : _tuid.boxId(v);\r\n        }\r\n        if (this.arrs === undefined) return ret;\r\n        for (let arr of this.arrs) {\r\n            let {name, fields, id, order} = arr;\r\n            let list = ret[name] = this.vArrs[name].list.slice();\r\n            for (let row of list) {\r\n                for (let f of fields) {\r\n                    let {name:fn, _tuid} = f;\r\n                    let v = row[fn]\r\n                    row[fn] =  _tuid === undefined || typeof v === 'object' ? v : _tuid.boxId(v);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    setValues(initValues:any) {\r\n        if (initValues === undefined) {\r\n            this.reset();\r\n            return;\r\n        }\r\n        let values = this.values;\r\n        let errors = this.errors;\r\n        for (let f of this.fields) {\r\n            let fn = f.name;\r\n            errors[fn] = undefined;\r\n            let v =  initValues[fn];\r\n            values[fn] = v;\r\n        }\r\n        // 还要设置arrs的values\r\n        for (let i in this.vArrs) {\r\n            let list = initValues[i];\r\n            if (list === undefined) continue;\r\n            let arrList = values[i] as IObservableArray<any>;\r\n            arrList.clear();\r\n            arrList.push(...list);\r\n        }\r\n    }\r\n\r\n    @computed get isOk():boolean {\r\n        for (let i in this.vFields) {\r\n            if (this.vFields[i].isOk === false) return false;\r\n        }\r\n        return true;\r\n    }\r\n    reset() {\r\n        let values = this.values;\r\n        let errors = this.errors;\r\n        for (let f of this.fields) {\r\n            let fn = f.name;\r\n            //if (this.compute !== undefined && this.compute[fn] !== undefined) continue;\r\n            values[fn] = null;\r\n            errors[fn] = undefined;\r\n        }\r\n        for (let i in this.vFields) {\r\n            let ctrl = this.vFields[i];\r\n            let cn = ctrl.name;\r\n            if (cn === undefined) continue;\r\n            //if (this.compute !== undefined && this.compute[cn] !== undefined) continue;\r\n            ctrl.setValue(null);\r\n        }\r\n        for (let i in this.vArrs) {\r\n            let vArr = this.vArrs[i];\r\n            vArr.reset();\r\n        }\r\n    }\r\n\r\n    getValue(fieldName: string) {\r\n        return this.values[fieldName];\r\n    }\r\n    setValue(fieldName: string, value: any) { this.values[fieldName] = value }\r\n\r\n    setError(fieldName:string, error:string) {this.errors[fieldName] = error}\r\n\r\n    private buildFieldValues(fields: Field[]):any {\r\n        let v: {[p:string]: any} = {\r\n            valueFromFieldName: function(propName:string) {\r\n                return this[propName];\r\n            }\r\n        };\r\n        for (let f of fields) {\r\n            let fn = f.name;\r\n            v[fn] = null;\r\n        }\r\n        return v;\r\n    }\r\n    private buildObservableValues():IObservableObject {\r\n        let v: {[p:string]: any} = this.buildFieldValues(this.fields);\r\n        if (this.arrs !== undefined) {\r\n            for (let arr of this.arrs) {\r\n                v[arr.name] = observable.array([], {deep:true});\r\n            }\r\n        }\r\n        let ret = observable(v);\r\n        return ret;\r\n    }\r\n    private buildFormValues() {\r\n        this.values = this.buildObservableValues();\r\n        this.errors = observable(this.buildFieldValues(this.fields));\r\n    }\r\n\r\n    render(className:string = \"py-3\"):JSX.Element {\r\n        return <this.view className={className} />\r\n    }\r\n}\r\n","export * from './vForm';\r\n","import {bridgeCenterApi, isBridged} from './appBridge';\r\nimport {FetchError} from '../fetchError';\r\nimport {HttpChannelUI} from './httpChannelUI';\r\nimport {nav} from '../ui/nav';\r\nimport { isDevelopment } from './host';\r\n\r\nexport async function httpGet(url:string, params?:any):Promise<any> {\r\n    let channel = new HttpChannel(false, url, undefined, undefined);\r\n    let ret = await channel.get('', params);\r\n    return ret;\r\n}\r\n\r\nexport async function httpPost(url:string, params?:any):Promise<any> {\r\n    let channel = new HttpChannel(false, url, undefined, undefined);\r\n    let ret = await channel.post('', params);\r\n    return ret;\r\n}\r\n\r\nexport class HttpChannel {\r\n    private isCenter: boolean;\r\n    private hostUrl: string;\r\n    private apiToken: string;\r\n    private ui?: HttpChannelUI;\r\n    private timeout: number;\r\n\r\n    constructor(isCenter: boolean, hostUrl: string, apiToken:string, ui?: HttpChannelUI) {\r\n        this.isCenter = isCenter;\r\n        this.hostUrl = hostUrl;\r\n        this.apiToken = apiToken;\r\n        this.ui = ui;\r\n        this.timeout = isDevelopment === true? 500000:5000;\r\n    }\r\n\r\n    private startWait = () => {\r\n        if (this.ui !== undefined) this.ui.startWait();\r\n    }\r\n\r\n    private endWait = (url?:string, reject?:(reason?:any)=>void) => {\r\n        if (this.ui !== undefined) this.ui.endWait();\r\n        if (reject !== undefined) reject('访问webapi超时 ' + url);\r\n    }\r\n\r\n    private showError = async (error:FetchError) => {\r\n        if (this.ui !== undefined) await this.ui.showError(error);\r\n    }\r\n\r\n    used() {\r\n        this.post('', {});\r\n    }\r\n\r\n    async get(url: string, params: any = undefined): Promise<any> {\r\n        if (params) {\r\n            let keys = Object.keys(params);\r\n            if (keys.length > 0) {\r\n                let c = '?';\r\n                for (let k of keys) {\r\n                    let v = params[k];\r\n                    if (v === undefined) continue;\r\n                    url += c + k + '=' + params[k];\r\n                    c = '&';\r\n                }\r\n            }\r\n        }\r\n        let options = this.buildOptions();\r\n        options.method = 'GET';\r\n        return await this.innerFetch(url, options);\r\n    }\r\n\r\n    async post(url: string, params: any): Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = 'POST';\r\n        options.body = JSON.stringify(params);\r\n        return await this.innerFetch(url, options);\r\n    }\r\n\r\n    async put(url: string, params: any): Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = 'PUT';\r\n        options.body = JSON.stringify(params);\r\n        return await this.innerFetch(url, options);\r\n    }\r\n\r\n    async delete(url: string, params: any): Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = 'DELETE';\r\n        options.body = JSON.stringify(params);\r\n        return await this.innerFetch(url, options);\r\n    }\r\n    async fetch(url: string, options: any, resolve:(value?:any)=>any, reject:(reason?:any)=>void):Promise<void> {\r\n        let that = this;\r\n        this.startWait();\r\n        let path = url;\r\n        function buildError(err: string) {\r\n            return {\r\n                channel: that,\r\n                url: path,\r\n                options: options,\r\n                resolve: resolve,\r\n                reject: reject,\r\n                error: err,\r\n            }\r\n        }\r\n        try {\r\n            console.log('%s %s', options.method, path);\r\n            let timeOutHandler = setTimeout(() => that.endWait(url, reject), this.timeout);\r\n            let res = await fetch(encodeURI(path), options);\r\n            if (res.ok === false) {\r\n                clearTimeout(timeOutHandler);\r\n                that.endWait();\r\n                console.log('call error %s', res.statusText);\r\n                throw res.statusText;\r\n            }\r\n            let ct = res.headers.get('content-type');\r\n            if (ct && ct.indexOf('json')>=0) {\r\n                return res.json().then(async retJson => {\r\n                    clearTimeout(timeOutHandler);\r\n                    that.endWait();\r\n                    if (retJson.ok === true) {\r\n                        return resolve(retJson.res);\r\n                    }\r\n                    if (retJson.error === undefined) {\r\n                        await that.showError(buildError('not valid tonva json'));\r\n                    }\r\n                    else {\r\n                        await that.showError(buildError(retJson.error));\r\n                        reject(retJson.error);\r\n                    }\r\n                    //throw retJson.error;\r\n                }).catch(async error => {\r\n                    await that.showError(buildError(error.message));\r\n                });\r\n            }\r\n            else {\r\n                let text = await res.text();\r\n                clearTimeout(timeOutHandler);\r\n                that.endWait();\r\n                resolve(text);\r\n            }\r\n        }\r\n        catch(error) {\r\n            if (typeof error === 'string') {\r\n                if (error.toLowerCase().startsWith('unauthorized') === true) {\r\n                    nav.logout();\r\n                    return;\r\n                }\r\n            }\r\n            await this.showError(buildError(error.message));\r\n        };\r\n    }\r\n\r\n    private async innerFetch(url: string, options: any): Promise<any> {\r\n        let u = this.hostUrl + url;\r\n        if (this.isCenter === true && this.apiToken === undefined && isBridged())\r\n            return await bridgeCenterApi(u, options.method, options.body);\r\n        return await new Promise<any>(async (resolve, reject) => {\r\n            await this.fetch(u, options, resolve, reject);\r\n        });\r\n    }\r\n\r\n    async callFetch(url:string, method:string, body:any):Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = method;\r\n        options.body = body;\r\n        return await new Promise<any>(async (resolve, reject) => {\r\n            await this.fetch(url, options, resolve, reject);\r\n        });\r\n    }\r\n\r\n    private buildOptions(): any {\r\n        let {language, culture} = nav;\r\n        let headers = new Headers();\r\n        //headers.append('Access-Control-Allow-Origin', '*');\r\n        headers.append('Content-Type', 'application/json;charset=UTF-8');\r\n        let lang = language;\r\n        if (culture) lang += '-' + culture;\r\n        headers.append('Accept-Language', lang);\r\n        if (this.apiToken) { \r\n            headers.append('Authorization', this.apiToken); \r\n        }\r\n        let options = {\r\n            headers: headers,\r\n            // cache: 'no-cache',\r\n        };\r\n        return options;\r\n    }\r\n}\r\n","import _ from 'lodash';\r\n\r\nexport interface KeyValueRes {\r\n    [key:string]: any;\r\n}\r\n\r\nexport interface Res<T extends KeyValueRes> {\r\n    [lang:string]: T | {[district:string]: T};\r\n}\r\n\r\nexport const resOptions:{lang:string, district:string} = {\r\n    lang: undefined,\r\n    district: undefined,\r\n}\r\n\r\nexport function setResOptions(lang:string, district:string) {\r\n    resOptions.lang = lang;\r\n    resOptions.district = district;\r\n}\r\n\r\n(function() {\r\n    let lang: string, district: string;\r\n    let language = navigator.languages && navigator.languages[0] || // Chrome / Firefox\r\n        navigator.language; // ||   // All browsers\r\n    //navigator.userLanguage; // IE <= 10\r\n    if (!language) {\r\n        lang = 'zh';\r\n        district = 'CN';\r\n    }\r\n    else {\r\n        let parts = language.split('-');\r\n        lang = parts[0];\r\n        if (parts.length > 1) district = parts[1];\r\n    }\r\n    setResOptions(lang, district);\r\n}());\r\n\r\nexport function resLang<T extends KeyValueRes>(res:Res<T>):T {\r\n    let {lang, district} = resOptions;\r\n    let ret:T = {} as T;\r\n    if (res === undefined) return ret;\r\n    _.merge(ret, res._);\r\n    let l = res[lang];\r\n    if (l === undefined) return ret;\r\n    _.merge(ret, l._);\r\n    let d = l[district];\r\n    if (d === undefined) return ret;\r\n    _.merge(ret, d);\r\n    let {entity} = ret;\r\n    if (entity !== undefined) {\r\n        for (let i in entity) {\r\n            entity[i.toLowerCase()] = entity[i];\r\n        }\r\n    }\r\n    return ret;\r\n}\r\n","export * from './CApp';\r\nexport * from './startApp';\r\nexport * from './uq';\r\nexport * from './action';\r\nexport * from './tuid';\r\nexport * from './sheet';\r\nexport * from './query';\r\nexport * from './map';\r\nexport * from './history';\r\nexport * from './pending';\r\nexport * from './form/viewModel';\r\nexport * from './form';\r\nexport * from './formUI';\r\nexport * from './ControllerUq';\r\nexport * from './CVEntity';\r\nexport * from './link';\r\nexport * from './icons';\r\n","import * as React from 'react';\r\nimport {observable, computed} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face} from '../face';\r\nimport {Rule} from '../rule';\r\n\r\nexport abstract class ControlBase {\r\n    protected formView: FormView;\r\n    constructor(formView:FormView) {\r\n        this.formView = formView;\r\n    }\r\n    render():JSX.Element {\r\n        return <div className=\"col-sm-10\">\r\n            {this.renderControl()}\r\n        </div>;\r\n    }\r\n    protected abstract renderControl():JSX.Element;\r\n    @computed get hasError():boolean {return false;}\r\n    @computed get filled():boolean {return false;}\r\n    clear() {}\r\n    clearErrors() {}\r\n    readValues(values:any):any {}\r\n    setError(fieldName:string, error:string) {}\r\n    setInitValues(values: any) {}\r\n    isOk():boolean {this.validate(); return !this.hasError;}\r\n    protected validate() {}\r\n}\r\n\r\nexport abstract class Control extends ControlBase {\r\n    protected field: Field;\r\n    protected face: Face;\r\n    protected props: any;\r\n    protected rules: Rule[];\r\n\r\n    protected element: HTMLElement;\r\n    @observable protected isOK?: boolean;\r\n    @observable protected error: string;\r\n    @observable protected value: any;\r\n\r\n    constructor(formView:FormView, field:Field, face:Face) {\r\n        super(formView);\r\n        this.field = field;\r\n        this.face = face;\r\n        this.init();\r\n        this.setProps();\r\n    }\r\n    protected ref(element: HTMLElement) {\r\n        this.element = element;\r\n    }\r\n    protected init() {\r\n        this.rules = [];\r\n        let r = this.field.rules;\r\n        if (r !== undefined) {\r\n            if (Array.isArray(r) === true) this.rules.push(...(r as Rule[]));\r\n            else this.rules.push(r as Rule);\r\n        }\r\n    };\r\n    protected setProps():any {\r\n        return this.props = {\r\n            ref: this.ref.bind(this),\r\n            name: this.field.name,\r\n        }\r\n    };\r\n    @computed get hasError():boolean {return this.error !== undefined;}\r\n    @computed get filled():boolean {\r\n        let ret = this.value !== undefined && this.value !== this.field.defaultValue;\r\n        return ret;\r\n    }\r\n    clearValue() { this.value = undefined; }\r\n    clear() { this.clearErrors(); this.clearValue(); }\r\n    clearErrors() { this.isOK = undefined; this.error = undefined; }\r\n    readValues(values:any):any {\r\n        values[this.field.name] = this.value;\r\n    }\r\n    setError(fieldName:string, error:string) {}\r\n    setInitValues(values: any) {}\r\n    protected getValueFromElement():any {return this.value;}\r\n    protected validate() {\r\n        try {\r\n            let v = this.getValueFromElement();\r\n            if (this.rules.length > 0) {\r\n                let isOk:boolean;\r\n                for (let rule of this.rules) {\r\n                    console.log('validate: %s', v);\r\n                    let err = rule(v);\r\n                    console.log('validate: %s err: %s', v, err);\r\n                    if (err === true) {\r\n                        this.error = undefined;\r\n                        isOk = true;\r\n                    }\r\n                    else if (err !== undefined) {\r\n                        //console.log('field %s onBlur v=%s rule=%s err=%s', \r\n                        //    this.field.name, JSON.stringify(v), rule, err);\r\n                        this.error = err;\r\n                        this.isOK = false;\r\n                        return;\r\n                    }\r\n                }\r\n                this.isOK = isOk;\r\n            }\r\n            this.value = v;\r\n        }\r\n        catch (e) {\r\n            this.error = e.message;\r\n        }\r\n    }\r\n    render():JSX.Element {\r\n        let n;\r\n        if (this.face !== undefined) {\r\n            let {notes} = this.face;\r\n            if (notes !== undefined) n = <small className=\"text-muted\">{notes}</small>;\r\n        }\r\n        return <div className=\"col-sm-10\">\r\n            {this.renderControl()}\r\n            {n}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face} from '../face';\r\nimport {ControlBase} from './control';\r\n\r\nexport class ButtonsControl extends ControlBase {\r\n    constructor(props) {\r\n        super(props);\r\n        this.otherClick = this.otherClick.bind(this);\r\n    }\r\n    private otherClick() {\r\n        let onOther = this.formView.props.onOther;\r\n        if (onOther === undefined) return;\r\n        let values = this.formView.readValues();\r\n        onOther(values);\r\n    }\r\n    renderControl():JSX.Element {\r\n        console.log('buttons.renderControl');\r\n        let nothing = this.formView.nothing;\r\n        let hasError = this.formView.hasError;\r\n        let props = this.formView.props;\r\n        console.log('buttons.renderControl nothing:%s hasError:%s', nothing, hasError);\r\n        let {submitButton, otherButton, onOther} = props;\r\n        let btnOther;\r\n        if (otherButton !== undefined) {\r\n            btnOther = <button className=\"btn btn-outline-info ml-auto\" onClick={this.otherClick}>\r\n                {otherButton}\r\n            </button>\r\n        }\r\n        return <div className=\"d-flex justify-content-start\">\r\n            <button\r\n                className=\"btn btn-primary\"\r\n                type=\"submit\" \r\n                disabled={nothing || hasError}>\r\n                {submitButton || '提交'}\r\n            </button>\r\n            {btnOther}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable, computed} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, Placeholder} from '../face';\r\nimport {Control} from './control';\r\n\r\nconst TxtRequired = '必须填入要求内容';\r\n\r\nexport abstract class CharsControl extends Control {\r\n    protected init() {\r\n        super.init();\r\n        if (this.field.required === true) {\r\n            this.rules.push((v) => {\r\n                if (v===null || v===undefined || (v as string).trim().length === 0) return TxtRequired;\r\n                return true;\r\n            });\r\n        }\r\n    }\r\n\r\n    protected element: HTMLInputElement;\r\n    protected getValueFromElement():any {return this.parseValue(this.element.value)}\r\n\r\n    protected setProps() {\r\n        super.setProps();\r\n        _.assign(this.props, {\r\n            onBlur: this.onBlur.bind(this),\r\n            onFocus: this.onFocus.bind(this),\r\n            onChange: this.onChange.bind(this),\r\n        });\r\n        let face = this.face as Placeholder;\r\n        if (face !== undefined) {\r\n            _.assign(this.props, {\r\n                placeholder: face.placeholder,\r\n            });\r\n        }\r\n        return this.props;\r\n    };\r\n    protected parseValue(value?:string):any {return value;}\r\n    private onBlur() {\r\n        //console.log('field %s onBlure', this.field.name);\r\n        this.validate();\r\n    }\r\n    private onChange() {\r\n        console.log('onChange');\r\n        this.validate();\r\n    }\r\n    private onFocus() {\r\n        this.clearErrors();\r\n        //this.error = undefined;\r\n        //this.formView.clearErrors();\r\n    }\r\n    protected className() {\r\n        return classNames({\r\n            \"form-control\": true,\r\n            \"has-success\": this.isOK === true,\r\n            \"is-invalid\": this.error !== undefined,\r\n            \"is-valid\": this.error === undefined && this.isOK === true,\r\n        });\r\n    }\r\n    protected renderInput():JSX.Element {\r\n        return <input className={this.className()} {...this.props} />;\r\n    }\r\n    protected ref(element: HTMLInputElement) {\r\n        super.ref(element);\r\n        if (element) {\r\n            element.value = this.value === undefined? '':this.value;\r\n        }\r\n    }\r\n    protected renderError():JSX.Element {\r\n        //if (this.field.name === 'name') console.log('charsControl renderControl');\r\n        if (this.error === undefined) return null;\r\n        return <div className=\"invalid-feedback\">{this.error}</div>\r\n    }\r\n    clearValue() { super.clearValue(); this.element.value = ''; }\r\n    setError(fieldName:string, error:string) {\r\n        if (this.field.name === fieldName) this.error = error;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        if (v === undefined) return;\r\n        //this.element.value = v;\r\n        this.value = v;\r\n    }\r\n    renderControl():JSX.Element {\r\n        return <React.Fragment>\r\n            {this.renderInput()}\r\n            {this.renderError()}\r\n        </React.Fragment>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport {CharsControl} from './charsControl';\r\nimport {StringField} from '../field';\r\n\r\nexport class StringControl extends CharsControl {\r\n    protected field: StringField;\r\n    protected setProps() {\r\n        let p = super.setProps();\r\n        _.assign(p, {\r\n            type: 'text',\r\n            maxLength: this.field.maxLength,\r\n        });\r\n        return p;\r\n    };\r\n    protected parseValue(value?:string):any {\r\n        if (value === undefined) return undefined;\r\n        if (value.trim().length === 0) return undefined;\r\n        return value;\r\n    }\r\n}\r\n\r\nexport class PasswordControl extends StringControl {\r\n    protected setProps() {\r\n        let p = super.setProps();\r\n        _.assign(p, {\r\n            type: 'password',\r\n            maxLength: this.field.maxLength,\r\n        });\r\n        return p;\r\n    };\r\n}","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport {IntField, DecField, NumberField} from '../field';\r\nimport {CharsControl} from './charsControl';\r\n\r\nconst ErrInvalidNumber = '无效的数字';\r\nconst ErrMin = '最小值为';\r\nconst ErrMax = '最大值为';\r\n\r\nconst KeyCode_Neg = 45;\r\nconst KeyCode_Dot = 46;\r\n\r\nexport class NumberControl extends CharsControl {\r\n    protected field: IntField | DecField | NumberField;\r\n    protected value: number;\r\n    protected extraChars: number[];\r\n    \r\n    protected init() {\r\n        super.init();\r\n        this.extraChars = [];\r\n        let {min, max} = this.field;\r\n        if (min !== undefined) {\r\n            this.rules.push((v:number) => {if (v === undefined) return; if (v<min) return ErrMin + min; return true;});\r\n            if (min < 0) this.extraChars.push(KeyCode_Neg);\r\n        }\r\n        else {\r\n            this.extraChars.push(KeyCode_Neg);\r\n        }\r\n\r\n        if (max !== undefined) {\r\n            this.rules.push((v:number) => {if (v === undefined) return; if (v>max) return ErrMax + max; return true});\r\n        }\r\n        switch (this.field.type) {\r\n            case 'dec':\r\n            case 'number': this.extraChars.push(KeyCode_Dot); break;\r\n        }\r\n    }\r\n\r\n    protected parseValue(value?:string):any {\r\n        if (value === undefined) return undefined;\r\n        if (value.trim().length === 0) return undefined;\r\n        let n = Number.parseFloat(value);\r\n        if (isNaN(n)) throw new Error(ErrInvalidNumber);\r\n        return n;\r\n    }\r\n\r\n    protected setProps() {\r\n        super.setProps();\r\n        _.assign(this.props, {\r\n            type: 'number',\r\n            step: (this.field as DecField).step,\r\n            onKeyPress: this.onKeyPress.bind(this),\r\n        });\r\n    }\r\n\r\n    onKeyPress(event:KeyboardEvent) {\r\n        let ch = event.charCode;\r\n        if (ch === 8 || ch === 0 || ch === 13 || ch >= 48 && ch <= 57) return;\r\n        if (this.extraChars !== undefined) {\r\n            if (this.extraChars.indexOf(ch) >= 0) {\r\n                switch (ch) {\r\n                    case KeyCode_Dot: this.onKeyDot(); break;\r\n                    case KeyCode_Neg: this.onKeyNeg(); event.preventDefault(); break;\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    private onKeyDot() {\r\n        let v = this.element.value;\r\n        let p = v.indexOf('.');\r\n        if (p >= 0) this.element.value = v.replace('.', '');\r\n    }\r\n    private onKeyNeg() {\r\n        let v = this.element.value;\r\n        let p = v.indexOf('-');\r\n        if (p >= 0) v = v.replace('-', '');\r\n        else v = '-'+v;\r\n        this.element.value = v;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {Control, ControlBase} from './control';\r\nimport {FormView} from '../formView';\r\n\r\nexport class UnknownControl extends Control {\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-plaintext\">\r\n            <div className=\"alert alert-primary\" role=\"alert\">\r\n            don't know how to create control<br/>\r\n            field: {JSON.stringify(this.field)} must be object <br/>\r\n            face: {JSON.stringify(this.face)} must be object <br/>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class EmptyControl extends ControlBase {\r\n    private element:JSX.Element;\r\n    constructor(formView:FormView, element:JSX.Element) {\r\n        super(formView);\r\n        this.element = element;\r\n    }\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-plaintext\">\r\n            {this.element}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, IdPickFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class PickIdControl extends Control {\r\n    protected face: IdPickFace;\r\n    @observable private caption: string|JSX.Element;\r\n\r\n    private onClick = async () => {\r\n        let {pick, fromPicked} = this.face;\r\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\r\n        if (item === undefined) {\r\n            this.value = undefined;\r\n            return;\r\n        }\r\n        if (fromPicked === undefined) {\r\n            this.value = item.id;\r\n            return;\r\n        }\r\n        let {id, caption} = fromPicked(item);\r\n        this.value = id;\r\n        this.caption = caption;\r\n    }\r\n    onPicked = (value: any) => {\r\n        this.value = value.id;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        this.value = v;\r\n    }\r\n    private controlContent():string|JSX.Element {\r\n        let {itemFromId, fromPicked, initCaption} = this.face;\r\n        if (this.value === undefined) {\r\n            return initCaption || '请选择Id';\r\n        }\r\n        if (this.caption !== undefined) {\r\n            return this.caption;\r\n        }\r\n        if (itemFromId !== undefined) {\r\n            if (fromPicked !== undefined) {\r\n                let item = itemFromId(this.value);\r\n                if (item) {\r\n                    let ret = fromPicked(item);\r\n                    if (ret !== undefined) return ret.caption;\r\n                }\r\n            }\r\n        }\r\n        return String(this.value);\r\n    }\r\n    /*\r\n    private buildContent():string|JSX.Element {\r\n        let {tuid, input} = this.face;\r\n        if (input === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n            return <div onClick={this.onClick}>{this.controlContent()}</div>;\r\n        }\r\n        return <input.component id={this.value} \r\n            tuid={tuid}\r\n            input={input}\r\n            entitiesUI={this.formView.props.context} \r\n            params={this.formView.readValues()}\r\n            onPicked={this.onPicked} />;\r\n    }*/\r\n    renderControl():JSX.Element {\r\n        let {tuid, input} = this.face;\r\n        if (input === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n            return <div className=\"form-control-plaintext px-2 border text-primary rounded cursor-pointer\"\r\n                onClick={this.onClick}>\r\n                {this.controlContent()}\r\n            </div>;\r\n        }\r\n        return <div className=\"form-control-static \">\r\n            <input.component id={this.value} \r\n                ui={tuid}\r\n                //input={input}\r\n                //entitiesUI={this.formView.props.context} \r\n                //params={this.formView.readValues()}\r\n                //onPicked={this.onPicked}\r\n                />\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, TuidPickFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class PickTuidControl extends Control {\r\n    protected face: TuidPickFace;\r\n    // protected value: number;\r\n    @observable private caption: string|JSX.Element;\r\n    constructor(formView:FormView, field:Field, face:Face) {\r\n        super(formView, field, face);\r\n        this.onIdChanged = this.onIdChanged.bind(this);\r\n        //this.onClick = this.onClick.bind(this);\r\n    }\r\n    /*\r\n    private async onClick() {\r\n        let {pick, fromPicked} = this.face;\r\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\r\n        if (item === undefined) {\r\n            this.value = undefined;\r\n            return;\r\n        }\r\n        if (fromPicked === undefined) {\r\n            this.value = item.id;\r\n            return;\r\n        }\r\n        let {id, caption} = fromPicked(item);\r\n        this.value = id;\r\n        this.caption = caption;\r\n    }*/\r\n    onIdChanged(id: any) {\r\n        this.value = id.id;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        this.value = v;\r\n    }\r\n    private buildContent():JSX.Element {\r\n        //let {tuid, input} = this.face;\r\n        return <this.face.input.component \r\n            {...this.face}\r\n            id={this.value}\r\n            //ui={this.face.ui}\r\n            //input={input}\r\n            //entitiesUI={this.formView.props.context} \r\n            onFormValues={()=>this.formView.readValues()}\r\n            onIdChanged={this.onIdChanged} />;\r\n    }\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-static \">\r\n            {this.buildContent()}\r\n        </div>;\r\n    }\r\n}\r\n/*\r\n<button className=\"form-control btn btn-outline-info\"\r\ntype=\"button\"\r\nstyle={{textAlign:'left', paddingLeft:'0.75rem'}}\r\nonClick={this.onClick}>\r\n{this.buildContent()}\r\n</button>\r\n*/","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, PickFace} from '../face';\r\nimport {Control} from './control';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class PickControl extends Control {\r\n    protected face: PickFace;\r\n    @observable private caption: string|JSX.Element;\r\n\r\n    private onClick = async () => {\r\n        let {pick, fromPicked} = this.face;\r\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\r\n        if (item === undefined) {\r\n            this.value = undefined;\r\n            return;\r\n        }\r\n        let {id, caption} = fromPicked(item);\r\n        this.value = id;\r\n        this.caption = caption;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        this.value = v;\r\n    }\r\n    /*\r\n    private controlContent():string|JSX.Element {\r\n        let {content: Content} = this.face;\r\n        if (this.value === undefined) {\r\n            return '请选择';\r\n        }\r\n        \r\n        if (this.caption !== undefined) {\r\n            return this.caption;\r\n        }\r\n        return <Content id={this.value} />;\r\n    }*/\r\n    /*\r\n    private buildContent():string|JSX.Element {\r\n        let {tuid, input} = this.face;\r\n        if (input === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n            return <div onClick={this.onClick}>{this.controlContent()}</div>;\r\n        }\r\n        return <input.component id={this.value} \r\n            tuid={tuid}\r\n            input={input}\r\n            entitiesUI={this.formView.props.context} \r\n            params={this.formView.readValues()}\r\n            onPicked={this.onPicked} />;\r\n    }*/\r\n    renderControl():JSX.Element {\r\n        return <this.view />;\r\n        /*\r\n        let {content:Content} = this.face;\r\n        //if (this.value === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n        //}\r\n        //return <div className=\"form-control-static \">\r\n        //    <Content />\r\n        //</div>;\r\n        */\r\n    }\r\n\r\n    private view = observer(() => {\r\n        let content;\r\n        let {content: Content} = this.face;\r\n        if (this.value === undefined || this.value === null) {\r\n            content = '请选择';\r\n        }\r\n        /*\r\n        else if (this.caption !== undefined) {\r\n            content = this.caption;\r\n        }*/\r\n        else {\r\n            content = <Content id={this.value} />;\r\n        } \r\n        return <div\r\n            className=\"form-control-plaintext px-2 border text-primary rounded cursor-pointer bg-light\"\r\n            onClick={this.onClick}>\r\n            {content}\r\n        </div>\r\n    });\r\n}\r\n","export * from './control';\r\nexport * from './buttonsControl';\r\nexport * from './stringControl';\r\nexport * from './numberControl';\r\n\r\nimport {Field} from '../field';\r\nimport {Face} from '../face';\r\nimport {Control, ControlBase} from './control';\r\nimport {ButtonsControl} from './buttonsControl';\r\nimport {CheckControl} from './checkControl';\r\nimport {RadioControl} from './radioControl';\r\nimport {TextAreaControl} from './textAreaControl';\r\nimport {SelectControl} from './selectControl';\r\nimport {UnknownControl, EmptyControl} from './unknownControl';\r\nimport {StringControl, PasswordControl} from './stringControl';\r\nimport {NumberControl} from './numberControl';\r\n\r\nimport {FormView, FormRow, GroupRow, FieldRow, LabelFormRow} from '../formView';\r\nimport { PickIdControl } from './pickIdControl';\r\nimport { PickTuidControl } from './pickTuidControl';\r\nimport { PickControl } from './pickControl';\r\n\r\nexport type CreateControl = (form:FormView, row: FormRow) => ControlBase\r\n\r\nexport const createControl:CreateControl = (form:FormView, row: LabelFormRow):ControlBase => {\r\n    let label = row.label;\r\n    if ((<GroupRow>row).group !== undefined)\r\n        return createGroupControl(form, label, row as GroupRow);\r\n    if ((<FieldRow>row).field !== undefined)\r\n        return createFieldControl(form, label, row as FieldRow);\r\n    return new EmptyControl(form, row.help);\r\n}\r\n\r\nconst controls:{[type:string]: new (formView:FormView, field:Field, face:Face) => Control} = {\r\n    \"string\": StringControl,\r\n    \"password\": PasswordControl,\r\n    \"number\": NumberControl,\r\n    \"checkbox\": CheckControl,\r\n    \"radiobox\": RadioControl,\r\n    \"select\": SelectControl,\r\n    \"pick-id\": PickIdControl,\r\n    \"pick-tuid\": PickTuidControl,\r\n    \"textarea\": TextAreaControl,\r\n    \"pick\": PickControl,\r\n};\r\nconst defaultFaces:{[type:string]: Face} = {\r\n    \"string\": {type:'string'},\r\n    \"number\": {type:'number'},\r\n    \"int\": {type:'number'},\r\n    \"dec\": {type:'number'},\r\n    \"bool\": {type:'checkbox'},\r\n}\r\nfunction createFieldControl(form:FormView, label:string, fieldRow: FieldRow):Control {\r\n    let {field, face} = fieldRow;\r\n    switch (typeof field) {\r\n        case 'string':\r\n            field = {\r\n                name: (field as any) as string,\r\n                type: 'string',\r\n            }\r\n            break;\r\n        case 'object':\r\n            break;\r\n        default:\r\n            return new UnknownControl(form, field, face);\r\n    }\r\n    let fieldType = field.type || 'string';\r\n    if (face === undefined) {\r\n        face = defaultFaces[fieldType];\r\n        if (face === undefined) return new UnknownControl(form, field, face);\r\n    }\r\n    else if (face.type === undefined) {\r\n        let f = defaultFaces[fieldType];\r\n        face.type = f===undefined? 'string' : f.type;\r\n    }\r\n    let control = controls[face.type || fieldType] || UnknownControl;\r\n    return new control(form, field, face);\r\n}\r\n\r\nfunction createGroupControl(form:FormView, label:string, groupRow: GroupRow):Control {\r\n    return new UnknownControl(form, groupRow as any, undefined);\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field, BoolField} from '../field';\r\nimport {Face, CheckBoxFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class CheckControl extends Control {    \r\n    protected element: HTMLInputElement;\r\n    protected field: BoolField;\r\n    protected face: CheckBoxFace;\r\n    private trueValue: any;\r\n    private falseValue: any;\r\n\r\n    protected init() {\r\n        super.init();\r\n        let {trueValue, falseValue} = this.field;\r\n        if (trueValue === undefined) this.trueValue = 1;\r\n        if (falseValue === undefined) this.falseValue = 0;\r\n    }\r\n\r\n    setProps() {\r\n        super.setProps();\r\n        _.assign(this.props, {\r\n            onChange: this.onChange.bind(this),\r\n        });\r\n    }\r\n\r\n    clearValue() {\r\n        this.element.checked = this.field.defaultValue === this.trueValue;\r\n        this.value = this.getValueFromElement();\r\n    }\r\n\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        if (v === undefined) {\r\n            v = this.field.defaultValue;\r\n        }\r\n        if (v !== undefined) {\r\n            //this.element.checked = v === this.trueValue;\r\n            //this.value = this.getValueFromElement();\r\n        }\r\n    }\r\n\r\n    protected getValueFromElement():any { return this.element.checked? this.trueValue:this.falseValue; }\r\n\r\n    private onChange() {\r\n        this.value = this.getValueFromElement();\r\n    }\r\n\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-static\">\r\n            <label className=\"form-control\">\r\n                <label className=\"custom-control custom-checkbox mb-0\">\r\n                    <input type='checkbox'\r\n                        name={this.field.name}\r\n                        ref={this.props.ref}\r\n                        onChange={this.props.onChange}\r\n                        className=\"custom-control-input\" />\r\n                    <span className=\"custom-control-indicator\" />\r\n                    <span className=\"custom-control-description\">{this.face.label}</span>\r\n                </label>\r\n            </label>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, RadioFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class RadioControl extends Control {\r\n    protected face: RadioFace;\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-static\">\r\n            <div className=\"form-control\">\r\n            {\r\n                this.face.list.map((item, index) => {\r\n                    let t, v;\r\n                    if (typeof item !== 'object') t = v = item;\r\n                    else {\r\n                        t = item.text;\r\n                        v = item.value;\r\n                    }\r\n                    return <label key={index} className=\"custom-control custom-radio w-25\">\r\n                        <input type='radio'\r\n                            name={this.field.name} \r\n                            className=\"custom-control-input\" />\r\n                        <span className=\"custom-control-indicator\"></span>\r\n                        <span className=\"custom-control-description\">{t}</span>\r\n                    </label>;\r\n                })\r\n            }\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, SelectFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class SelectControl extends Control {\r\n    constructor (formView:FormView, field:Field, face:Face) {\r\n        super(formView, field, face);\r\n        this.ref = this.ref.bind(this);\r\n    }\r\n    protected face: SelectFace;\r\n    protected element: HTMLSelectElement;\r\n    protected getValueFromElement():any {\r\n        let {selectedIndex, selectedOptions} = this.element;\r\n        let v:any = selectedOptions[0].value;\r\n        switch (this.field.type) {\r\n            case 'number': v = Number(v); break;\r\n            case 'date': v = new Date(v); break;\r\n            case 'bool': \r\n                if (typeof v === 'string') {\r\n                    v = ((v as string).toLowerCase() === 'true');\r\n                }\r\n                break;\r\n        }\r\n        return v;\r\n    }\r\n    renderControl():JSX.Element {\r\n        let {list} = this.face;\r\n        let def = this.face.default;\r\n        let options: any[] = [];\r\n        if (def === undefined)\r\n            options.push(<option key={-1} value={undefined}>请选择</option>);\r\n        options.push(...list.map((item, index) => {\r\n            let t, v;\r\n            if (typeof item !== 'object') t = v = item;\r\n            else {\r\n                t = item.text;\r\n                v = item.value;\r\n            }\r\n            return <option key={index} value={v}>{t}</option>;\r\n        }));\r\n        return <div className=\"form-control-static\">\r\n            <select name={this.field.name} className=\"form-control\" ref={this.ref}>\r\n                {options}\r\n            </select>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport {CharsControl} from './charsControl';\r\nimport {StringField} from '../field';\r\nimport {TextAreaFace} from '../face';\r\n\r\nexport class TextAreaControl extends CharsControl {\r\n    protected field: StringField;\r\n    protected face: TextAreaFace;\r\n    private el: HTMLTextAreaElement;\r\n    protected setProps() {\r\n        let p = super.setProps();\r\n        let {maxLength} = this.field;\r\n        let {rows} = this.face;\r\n        _.assign(p, {\r\n            maxLength: maxLength,\r\n            rows: rows,\r\n        });\r\n        return p;\r\n    };\r\n    protected renderInput():JSX.Element {\r\n        return <textarea ref={t=>{this.el = t;if (t!==undefined) t.value=''}} className={this.className()} {...this.props} />;\r\n    }\r\n}\r\n","import { Entities, Field, ArrFields, FieldMap } from './entities';\r\nimport { TuidMain, Tuid } from './tuid';\r\n\r\nconst tab = '\\t';\r\nconst ln = '\\n';\r\n\r\nexport abstract class Entity {\r\n    protected entities: Entities;\r\n    protected schema: any;\r\n    private jName: string;\r\n    sys?: boolean;\r\n    readonly name: string;\r\n    readonly typeId: number;\r\n    abstract get typeName(): string;\r\n    get sName():string {return this.jName || this.name}\r\n    fields: Field[];\r\n    arrFields: ArrFields[];\r\n    returns: ArrFields[];\r\n\r\n    constructor(entities:Entities, name:string, typeId:number) {\r\n        this.entities = entities;\r\n        this.name = name;\r\n        this.typeId = typeId;\r\n        this.sys = this.name.indexOf('$') >= 0;\r\n    }\r\n\r\n    public face: any;           // 对应字段的label, placeHolder等等的中文，或者语言的翻译\r\n\r\n    protected get tvApi() {return this.entities.uqApi;}\r\n    async getApiFrom() {return this.entities.uqApi;}\r\n\r\n    private fieldMaps: {[arr:string]: FieldMap} = {};\r\n    fieldMap(arr?:string): FieldMap {\r\n        if (arr === undefined) arr = '$';\r\n        let ret = this.fieldMaps[arr];\r\n        if (ret === undefined) {\r\n            let fields:Field[];\r\n            if (arr === '$') fields = this.fields;\r\n            else if (this.arrFields !== undefined) {\r\n                let arrFields = this.arrFields.find(v => v.name === arr);\r\n                if (arrFields !== undefined) fields = arrFields.fields;\r\n            }\r\n            else if (this.returns !== undefined) {\r\n                let arrFields = this.returns.find(v => v.name === arr);\r\n                if (arrFields !== undefined) fields = arrFields.fields;\r\n            }\r\n            if (fields === undefined) return {};\r\n            ret = {};\r\n            for (let f of fields) ret[f.name] = f;\r\n            this.fieldMaps[arr] = ret;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    public async loadSchema():Promise<void> {\r\n        if (this.schema !== undefined) return;\r\n        let schema = await this.entities.uqApi.schema(this.name);\r\n        this.setSchema(schema);\r\n    }\r\n\r\n    public setSchema(schema:any) {\r\n        if (schema === undefined) return;\r\n        if (this.schema !== undefined) return;\r\n        this.schema = schema;\r\n        let {name, fields, arrs, returns} = schema;\r\n        if (name !== this.name) this.jName = name;\r\n        this.entities.buildFieldTuid(this.fields = fields);\r\n        this.entities.buildArrFieldsTuid(this.arrFields = arrs, fields);\r\n        this.entities.buildArrFieldsTuid(this.returns = returns, fields);\r\n        //this.newMain = this.buildCreater(fields);\r\n        //this.newArr = this.buildArrCreater(arrs);\r\n        //this.newRet = this.buildArrCreater(returns);\r\n    }\r\n\r\n    schemaStringify():string {\r\n        return JSON.stringify(this.schema, (key:string, value:any) => {\r\n            if (key === '_tuid') return undefined;\r\n            return value;\r\n        }, 4);\r\n    }\r\n\r\n    tuidFromField(field:Field):Tuid {\r\n        let {_tuid, tuid} = field;\r\n        if (tuid === undefined) return;\r\n        if (_tuid !== undefined) return _tuid;\r\n        return field._tuid = this.entities.getTuid(tuid, undefined);\r\n    }\r\n\r\n    tuidFromName(fieldName:string, arrName?:string):Tuid {\r\n        if (this.schema === undefined) return;\r\n        let {fields, arrs} = this.schema;\r\n        let entities = this.entities;\r\n        function getTuid(fn:string, fieldArr:Field[]) {\r\n            if (fieldArr === undefined) return;\r\n            let f = fieldArr.find(v => v.name === fn);\r\n            if (f === undefined) return;\r\n            return entities.getTuid(f.tuid, undefined);\r\n        }\r\n        let fn = fieldName.toLowerCase();\r\n        if (arrName === undefined) return getTuid(fn, fields);\r\n        if (arrs === undefined) return;\r\n        let an = arrName.toLowerCase();\r\n        let arr = (arrs as ArrFields[]).find(v => v.name === an);\r\n        if (arr === undefined) return;\r\n        return getTuid(fn, arr.fields);\r\n    }\r\n\r\n    protected buildParams(params:any):any {\r\n        let result = {};\r\n        let fields = this.fields;\r\n        if (fields !== undefined) this.buildFieldsParams(result, fields, params);\r\n        let arrs = this.arrFields; \r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                let {name, fields} = arr;\r\n                let paramsArr:any[] = params[name];\r\n                if (paramsArr === undefined) continue;\r\n                let arrResult = [];\r\n                result[name] = arrResult;\r\n                for (let pa of params) {\r\n                    let rowResult = {};\r\n                    this.buildFieldsParams(rowResult, fields, pa);\r\n                    arrResult.push(rowResult);\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private buildFieldsParams(result:any, fields:Field[], params:any) {\r\n        for (let field of fields) {\r\n            let {name} = field;\r\n            let d = params[name];\r\n            let val:any;\r\n            switch (typeof d) {\r\n                default: val = d; break;\r\n                case 'object':\r\n                    let tuid = field._tuid;\r\n                    if (tuid === undefined) val = d.id;\r\n                    else val = tuid.getIdFromObj(d);\r\n                    break;\r\n            }\r\n            result[name] = val;\r\n        }\r\n    }\r\n\r\n    pack(data:any):string {\r\n        let ret:string[] = [];\r\n        let fields = this.fields;\r\n        if (fields !== undefined) this.packRow(ret, fields, data);\r\n        let arrs = this.arrFields; //schema['arrs'];\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                this.packArr(ret, arr.fields, data[arr.name]);\r\n            }\r\n        }\r\n        return ret.join('');\r\n    }\r\n    \r\n    private escape(row:any, field:Field):any {\r\n        let d = row[field.name];\r\n        switch (typeof d) {\r\n            default: return d;\r\n            case 'object':\r\n                let tuid = field._tuid;\r\n                if (tuid === undefined) return d.id;\r\n                return tuid.getIdFromObj(d);\r\n            case 'string':\r\n                let len = d.length;\r\n                let r = '', p = 0;\r\n                for (let i=0;i<len;i++) {\r\n                    let c = d.charCodeAt(i);\r\n                    switch(c) {\r\n                        case 9: r += d.substring(p, i) + '\\\\t'; p = i+1; break;\r\n                        case 10: r += d.substring(p, i) + '\\\\n'; p = i+1; break;\r\n                    }\r\n                }\r\n                return r + d.substring(p);\r\n            case 'undefined': return '';\r\n        }\r\n    }\r\n    \r\n    private packRow(result:string[], fields:Field[], data:any) {\r\n        let len = fields.length;\r\n        if (len === 0) return;\r\n        let ret = '';\r\n        ret += this.escape(data, fields[0]);\r\n        for (let i=1;i<len;i++) {\r\n            let f = fields[i];\r\n            ret += tab + this.escape(data, f);\r\n        }\r\n        result.push(ret + ln);\r\n    }\r\n    \r\n    private packArr(result:string[], fields:Field[], data:any[]) {\r\n        if (data !== undefined) {\r\n            for (let row of data) {\r\n                this.packRow(result, fields, row);\r\n            }\r\n        }\r\n        result.push(ln);\r\n    }\r\n    \r\n    unpackSheet(data:string):any {\r\n        let ret = {} as any; //new this.newMain();\r\n        //if (schema === undefined || data === undefined) return;\r\n        let fields = this.fields;\r\n        let p = 0;\r\n        if (fields !== undefined) p = this.unpackRow(ret, fields, data, p);\r\n        let arrs = this.arrFields; //schema['arrs'];\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                p = this.unpackArr(ret, arr, data, p);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    \r\n    unpackReturns(data:string):any {\r\n        let ret = {} as any;\r\n        //if (schema === undefined || data === undefined) return;\r\n        //let fields = schema.fields;\r\n        let p = 0;\r\n        //if (fields !== undefined) p = unpackRow(ret, schema.fields, data, p);\r\n        let arrs = this.returns; //schema['returns'];\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                //let creater = this.newRet[arr.name];\r\n                p = this.unpackArr(ret, arr, data, p);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    \r\n    private unpackRow(ret:any, fields:Field[], data:string, p:number):number {\r\n        let ch0 = 0, ch = 0, c = p, i = 0, len = data.length, fLen = fields.length;\r\n        for (;p<len;p++) {\r\n            ch0 = ch;\r\n            ch = data.charCodeAt(p);\r\n            if (ch === 9) {\r\n                let f = fields[i];\r\n                if (ch0 !== 8) {\r\n                    if (p>c) {\r\n                        let v = data.substring(c, p);\r\n                        ret[f.name] = this.to(ret, v, f);\r\n                    }\r\n                }\r\n                else {\r\n                    ret[f.name] = null;\r\n                }\r\n                c = p+1;\r\n                ++i;\r\n                if (i>=fLen) break;\r\n            }\r\n            else if (ch === 10) {\r\n                let f = fields[i];\r\n                if (ch0 !== 8) {\r\n                    if (p>c) {\r\n                        let v = data.substring(c, p);\r\n                        ret[f.name] = this.to(ret, v, f);\r\n                    }\r\n                }\r\n                else {\r\n                    ret[f.name] = null;\r\n                }\r\n                ++p;\r\n                ++i;\r\n                break;\r\n            }\r\n        }\r\n        return p;\r\n    }\r\n\r\n    private to(ret:any, v:string, f:Field):any {\r\n        switch (f.type) {\r\n            default: return v;\r\n            case 'datetime':\r\n            case 'date':\r\n            case 'time':\r\n                let date = new Date(Number(v));\r\n                return date;\r\n            case 'tinyint':\r\n            case 'smallint':\r\n            case 'int':\r\n            case 'dec': return Number(v);\r\n            case 'bigint':\r\n                let id = Number(v);\r\n                let {_tuid} = f;\r\n                if (_tuid === undefined) return id;\r\n                _tuid.useId(id, true);\r\n                return _tuid.boxId(id);\r\n        }\r\n    }\r\n\r\n    private unpackArr(ret:any, arr:ArrFields, data:string, p:number):number {\r\n        let vals:any[] = [], len = data.length;\r\n        let {name, fields} = arr;\r\n        while (p<len) {\r\n            let ch = data.charCodeAt(p);\r\n            if (ch === 10) {\r\n                ++p;\r\n                break;\r\n            }\r\n            let val = {} as any; //new creater();\r\n            vals.push(val);\r\n            p = this.unpackRow(val, fields, data, p);\r\n        }\r\n        ret[name] = vals;\r\n        return p;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport _ from 'lodash';\r\nimport { Entity } from './entity';\r\nimport { Entities, Field, ArrFields } from './entities';\r\nimport { isNumber } from 'util';\r\nimport { CUq, CTuidMain, CTuidEdit, CTuidInfo, CTuidSelect } from '../controllers';\r\n\r\nexport class BoxId {\r\n    id: number;\r\n    obj?: any;\r\n    content: (templet?:(values?:any, x?:any)=>JSX.Element, x?:any)=>JSX.Element;\r\n    valueFromFieldName: (fieldName:string)=>BoxId|any;\r\n    _$com?: any;\r\n    _$tuid?: Tuid;\r\n    getObj: ()=>any;\r\n}\r\n\r\nconst maxCacheSize = 1000;\r\nexport abstract class Tuid extends Entity {\r\n    private BoxId: ()=>void;\r\n    get typeName(): string { return 'tuid';}\r\n    private queue: number[] = [];               // 每次使用，都排到队头\r\n    private waitingIds: number[] = [];          // 等待loading的\r\n    private cache = observable.map({}, {deep: false});    // 已经缓冲的\r\n    idName: string;\r\n    owner: TuidMain;                    // 用这个值来区分是不是TuidArr\r\n    unique: string[];\r\n    schemaFrom: {owner:string; uq:string};\r\n\r\n    constructor(entities:Entities, name:string, typeId:number) {\r\n        super(entities, name, typeId);\r\n        this.buildIdBoxer();\r\n    }\r\n\r\n    abstract get Main();\r\n\r\n    private buildIdBoxer() {\r\n        this.BoxId = function():void {};\r\n        let prototype = this.BoxId.prototype;\r\n        Object.defineProperty(prototype, '_$tuid', {\r\n            value: this,\r\n            writable: false,\r\n            enumerable: false,\r\n        })\r\n        Object.defineProperty(prototype, 'obj', {\r\n            enumerable: false,\r\n            get: function() {\r\n                if (this.id === undefined || this.id<=0) return undefined;\r\n                return this._$tuid.valueFromId(this.id);\r\n            }\r\n        })\r\n        prototype.valueFromFieldName = function(fieldName:string):BoxId|any {\r\n            let t:Tuid = this._$tuid;\r\n            return t.valueFromFieldName(fieldName, this.obj);\r\n        }\r\n        prototype.getObj = function():any {\r\n            if (this._$tuid !== undefined) {\r\n                return this._$tuid.getCacheValue(this.id);\r\n            }\r\n        }\r\n        prototype.toJSON = function() {return this.id}\r\n    }\r\n    boxId(id:number):BoxId {\r\n        this.useId(id);\r\n        let ret:BoxId = new this.BoxId();\r\n        ret.id = id;\r\n        return ret;\r\n    }\r\n    getTuidContent() {\r\n        return this.entities.cUq.getTuidContent(this);\r\n    }\r\n    getIdFromObj(item:any):number {\r\n        return item[this.idName];\r\n    }\r\n\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        let {id, unique} = schema;\r\n        this.idName = id;\r\n        this.unique = unique;\r\n        this.schemaFrom = this.schema.from;\r\n    }\r\n\r\n    private moveToHead(id:number) {\r\n        let index = this.queue.findIndex(v => v === id);\r\n        this.queue.splice(index, 1);\r\n        this.queue.push(id);\r\n    }\r\n\r\n    valueFromId(id:number|BoxId):any {\r\n        let _id:number;\r\n        let tId = typeof id;\r\n        switch (typeof id) {\r\n            case 'object': _id = (id as BoxId).id; break;\r\n            case 'number': _id = id as number; break;\r\n            default: return;\r\n        }\r\n        return this.getCacheValue(_id);\r\n    }\r\n    getCacheValue(id:number) {\r\n        let v = this.cache.get(id);\r\n        if (this.owner !== undefined && typeof v === 'object') {\r\n            v.$owner = this.owner.boxId(v.owner); // this.owner.valueFromId(v.owner);\r\n        }\r\n        return v;\r\n    }\r\n    valueFromFieldName(fieldName:string, obj:any):BoxId|any {\r\n        if (obj === undefined) return;\r\n        let f = this.fields.find(v => v.name === fieldName);\r\n        if (f === undefined) return;\r\n        let v = obj[fieldName];\r\n        let {_tuid} = f;\r\n        if (_tuid === undefined) return v;\r\n        return _tuid.valueFromId(v);\r\n    }\r\n    resetCache(id:number) {\r\n        this.cache.delete(id);\r\n        let index = this.queue.findIndex(v => v === id);\r\n        this.queue.splice(index, 1);\r\n        this.useId(id);\r\n    }\r\n    useId(id:number, defer?:boolean) {\r\n        if (id === undefined || id === 0) return;\r\n        if (isNumber(id) === false) return;\r\n        if (this.cache.has(id) === true) {\r\n            this.moveToHead(id);\r\n            return;\r\n        }\r\n        this.entities.cacheTuids(defer===true?70:20);\r\n        //let idVal = this.createID(id);\r\n        this.cache.set(id, id);\r\n        if (this.waitingIds.findIndex(v => v === id) >= 0) {\r\n            this.moveToHead(id);\r\n            return;\r\n        }\r\n\r\n        if (this.queue.length >= maxCacheSize) {\r\n            // 缓冲已满，先去掉最不常用的\r\n            let r = this.queue.shift();\r\n            if (r === id) {\r\n                // 如果移除的，正好是现在用的，则插入\r\n                this.queue.push(r);\r\n                return;\r\n            }\r\n\r\n            //let rKey = String(r);\r\n            if (this.cache.has(r) === true) {\r\n                // 如果移除r已经缓存\r\n                this.cache.delete(r);\r\n            }\r\n            else {\r\n                // 如果移除r还没有缓存\r\n                let index = this.waitingIds.findIndex(v => v === r);\r\n                this.waitingIds.splice(index, 1);\r\n            }\r\n        }\r\n        this.waitingIds.push(id);\r\n        this.queue.push(id);\r\n        return;\r\n    }\r\n    async proxied(name:string, id:number):Promise<any> {\r\n        let proxyTuid = this.entities.getTuid(name, undefined);\r\n        proxyTuid.useId(id);\r\n        let proxied = await this.tvApi.proxied(this.name, name, id);\r\n        this.cacheValue(proxied);\r\n        return proxied;\r\n    }\r\n    cacheValue(val:any):boolean {\r\n        if (val === undefined) return false;\r\n        let id = this.getIdFromObj(val);\r\n        if (id === undefined) return false;\r\n        let index = this.waitingIds.findIndex(v => v === id);\r\n        if (index>=0) this.waitingIds.splice(index, 1);\r\n        //let cacheVal = this.createID(id, val);\r\n        this.cache.set(id, val);\r\n        // 下面的代码应该是cache proxy id, 需要的时候再写吧\r\n        /*\r\n        let {tuids, fields} = this.schema;\r\n        if (tuids !== undefined && fields !== undefined) {\r\n            for (let f of fields) {\r\n                let {name, tuid} = f;\r\n                if (tuid === undefined) continue;\r\n                let t = this.entities.tuid(tuid);\r\n                if (t === undefined) continue;\r\n                t.useId(val[name]);\r\n            }\r\n        }*/\r\n        return true;\r\n    }\r\n    protected afterCacheId(tuidValue:any) {\r\n        for (let f of this.fields) {\r\n            let {_tuid} = f;\r\n            if (_tuid === undefined) continue;\r\n            _tuid.useId(tuidValue[f.name]);\r\n        }\r\n    }\r\n    async cacheIds():Promise<void> {\r\n        if (this.waitingIds.length === 0) return;\r\n        let name:string, arr:string;\r\n        if (this.owner === undefined) {\r\n            name = this.name;\r\n        }\r\n        else {\r\n            name = this.owner.name;\r\n            arr = this.name;\r\n        }\r\n        let api = await this.getApiFrom();\r\n        let tuids = await api.tuidIds(name, arr, this.waitingIds);\r\n        for (let tuidValue of tuids) {\r\n            if (this.cacheValue(tuidValue) === false) continue;\r\n            this.cacheTuidFieldValues(tuidValue);\r\n            this.afterCacheId(tuidValue);\r\n        }\r\n        await this.cacheDivIds();\r\n    }\r\n    protected async cacheDivIds():Promise<void> {\r\n    }\r\n    async load(id:number):Promise<any> {\r\n        if (id === undefined || id === 0) return;\r\n        let api = await this.getApiFrom();\r\n        let values = await api.tuidGet(this.name, id);\r\n        if (values === undefined) return;\r\n        values._$tuid = this;\r\n        this.cacheValue(values);\r\n        this.cacheTuidFieldValues(values);\r\n        return values;\r\n    }\r\n    protected getDiv(divName:string):TuidDiv {return;}\r\n    private cacheTuidFieldValues(values:any) {\r\n        let {fields, arrs} = this.schema;\r\n        this.cacheFieldsInValue(values, fields);\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs as ArrFields[]) {\r\n                let {name, fields} = arr;\r\n                let arrValues = values[name];\r\n                if (arrValues === undefined) continue;\r\n                let tuidDiv = this.getDiv(name);\r\n                for (let row of arrValues) {\r\n                    row._$tuid = tuidDiv;\r\n                    row.$owner = this.boxId(row.owner);\r\n                    tuidDiv.cacheValue(row);\r\n                    this.cacheFieldsInValue(row, fields);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    private cacheFieldsInValue(values:any, fields:Field[]) {\r\n        for (let f of fields as Field[]) {\r\n            let {name, _tuid} = f;\r\n            if (_tuid === undefined) continue;\r\n            let id = values[name];\r\n            //_tuid.useId(id);\r\n            values[name] = _tuid.boxId(id);\r\n        }\r\n    }\r\n    async save(id:number, props:any) {\r\n        let params = _.clone(props);\r\n        params[\"$id\"] = id;\r\n        let ret = await this.tvApi.tuidSave(this.name, params);\r\n        let {id:retId, inId} = ret;\r\n        if (retId === undefined) {\r\n            params.id = id;\r\n            this.cacheValue(params);\r\n        }\r\n        else if (retId > 0) {\r\n            params.id = retId;\r\n            this.cacheValue(params);\r\n        }\r\n        return ret;\r\n    }\r\n    async search(key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        let ret:any[] = await this.searchArr(undefined, key, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    async searchArr(owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        let {fields} = this.schema;\r\n        let name:string, arr:string;\r\n        if (this.owner !== undefined) {\r\n            name = this.owner.name;\r\n            arr = this.name;\r\n        }\r\n        else {\r\n            name = this.name;\r\n            arr = undefined;\r\n        }\r\n        let api = await this.getApiFrom();\r\n        let ret = await api.tuidSearch(name, arr, owner, key, pageStart, pageSize);\r\n        for (let row of ret) {\r\n            this.cacheFieldsInValue(row, fields);\r\n            if (this.owner !== undefined) row.$owner = this.owner.boxId(row.owner);\r\n        }\r\n        return ret;\r\n    }\r\n    async loadArr(arr:string, owner:number, id:number):Promise<any> {\r\n        if (id === undefined || id === 0) return;\r\n        let api = await this.getApiFrom();\r\n        return await api.tuidArrGet(this.name, arr, owner, id);\r\n    }\r\n    /*\r\n    async loadArrAll(owner:number):Promise<any[]> {\r\n        return this.all = await this.tvApi.tuidGetAll(this.name);\r\n    }*/\r\n    async saveArr(arr:string, owner:number, id:number, props:any) {\r\n        let params = _.clone(props);\r\n        params[\"$id\"] = id;\r\n        return await this.tvApi.tuidArrSave(this.name, arr, owner, params);\r\n    }\r\n    async posArr(arr:string, owner:number, id:number, order:number) {\r\n        return await this.tvApi.tuidArrPos(this.name, arr, owner, id, order);\r\n    }\r\n    \r\n    // cache放到Tuid里面之后，这个函数不再需要公开调用了\r\n    //private async ids(idArr:number[]) {\r\n    //    return await this.tvApi.tuidIds(this.name, idArr);\r\n    //}\r\n    async showInfo(id:number) {\r\n        await this.entities.cUq.showTuid(this, id);\r\n    }\r\n}\r\n\r\nexport class TuidMain extends Tuid {\r\n    get Main() {return this}\r\n    get uqApi() {return this.entities.uqApi};\r\n\r\n    divs: {[name:string]: TuidDiv};\r\n    proxies: {[name:string]: TuidMain};\r\n\r\n    public setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        let {arrs} = schema;\r\n        if (arrs !== undefined) {\r\n            this.divs = {};\r\n            for (let arr of arrs) {\r\n                let {name} = arr;\r\n                let tuidDiv = new TuidDiv(this.entities, name, this.typeId);\r\n                tuidDiv.owner = this;\r\n                this.divs[name] = tuidDiv;\r\n                tuidDiv.setSchema(arr);\r\n            }\r\n        }\r\n    }\r\n    protected getDiv(divName:string):TuidDiv {return this.divs[divName];}\r\n    /* 努力回避async里面的super调用，edge不兼容\r\n    async cacheIds():Promise<void> {\r\n        await super.cacheIds();\r\n        if (this.divs === undefined) return;\r\n        for (let i in this.divs) {\r\n            await this.divs[i].cacheIds();\r\n        }\r\n    }\r\n    */\r\n    protected async cacheDivIds():Promise<void> {\r\n        if (this.divs === undefined) return;\r\n        for (let i in this.divs) {\r\n            await this.divs[i].cacheIds();\r\n        }\r\n    }\r\n\r\n    async cUqFrom(): Promise<CUq> {\r\n        if (this.schemaFrom === undefined) return this.entities.cUq;\r\n        let {owner, uq: uq} = this.schemaFrom;\r\n        let cUq = await this.entities.cUq\r\n        let cApp = cUq.cApp;\r\n        if (cApp === undefined) return cUq;\r\n        let cUqFrm = await cApp.getImportUq(owner, uq);\r\n        if (cUqFrm === undefined) {\r\n            console.error(`${owner}/${uq} 不存在`);\r\n            debugger;\r\n            return cUq;\r\n        }\r\n        let retErrors = await cUqFrm.loadSchema();\r\n        if (retErrors !== undefined) {\r\n            console.error('cUq.loadSchema: ' + retErrors);\r\n            debugger;\r\n            return cUq;\r\n        }\r\n        return cUqFrm;\r\n    }\r\n\r\n    async getApiFrom() {\r\n        let from = await this.from();\r\n        if (from !== undefined) {\r\n            return from.entities.uqApi;\r\n        }\r\n        return this.entities.uqApi;\r\n    }\r\n\r\n    async from(): Promise<TuidMain> {\r\n        let cUq = await this.cUqFrom();\r\n        return cUq.tuid(this.name);\r\n    }\r\n\r\n    async cFrom(): Promise<CTuidMain> {\r\n        let cUq = await this.cUqFrom();\r\n        return cUq.cTuidMainFromName(this.name);\r\n    }\r\n\r\n    async cEditFrom(): Promise<CTuidEdit> {\r\n        let cUq = await this.cUqFrom();\r\n        return cUq.cTuidEditFromName(this.name);\r\n    }\r\n\r\n    async cInfoFrom(): Promise<CTuidInfo> {\r\n        let cUq = await this.cUqFrom();\r\n        return cUq.cTuidInfoFromName(this.name);\r\n    }\r\n\r\n    async cSelectFrom(): Promise<CTuidSelect> {\r\n        let cUq = await this.cUqFrom();\r\n        if (cUq === undefined) return;\r\n        return cUq.cTuidSelectFromName(this.name);\r\n    }\r\n\r\n    protected afterCacheId(tuidValue:any) {\r\n        super.afterCacheId(tuidValue);\r\n        if (this.proxies === undefined) return;\r\n        let {type, $proxy} = tuidValue;\r\n        let pTuid = this.proxies[type];\r\n        pTuid.useId($proxy);\r\n    }\r\n}\r\n\r\nexport class TuidDiv extends Tuid {\r\n    get Main() {return this.owner}\r\n\r\n    async getApiFrom() {\r\n        return await this.owner.getApiFrom();\r\n    }\r\n}\r\n","import {Entity} from './entity';\r\n\r\nexport class Action extends Entity {\r\n    get typeName(): string { return 'action';}\r\n    async submit(data:object) {\r\n        await this.loadSchema();\r\n        let text = this.pack(data);\r\n        return await this.tvApi.action(this.name, {data:text});\r\n    }\r\n}\r\n\r\n","import {observable, IObservableArray} from 'mobx';\r\nimport {Entity} from './entity';\r\nimport { PageItems } from 'tonva-tools';\r\n\r\nexport interface SheetState {\r\n    name: string;\r\n    actions: SheetAction[];\r\n}\r\n\r\nexport interface SheetAction {\r\n    name: string;\r\n}\r\n\r\nexport interface StateCount {\r\n    state: string;\r\n    count: number;\r\n}\r\n\r\nexport class Sheet extends Entity {\r\n    get typeName(): string { return 'sheet';}\r\n    states: SheetState[];\r\n\r\n    /*\r\n    setStates(states: SheetState[]) {\r\n        for (let state of states) {\r\n            this.setStateAccess(this.states.find(s=>s.name==state.name), state);\r\n        }\r\n    }*/\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        this.states = schema.states;\r\n    }\r\n    build(obj:any) {\r\n        this.states = [];\r\n        for (let op of obj.ops) {\r\n            this.states.push({name: op, actions:undefined});\r\n        }\r\n        /*\r\n        for (let p in obj) {\r\n            switch(p) {\r\n                case '#':\r\n                case '$': continue;\r\n                default: this.states.push(this.createSheetState(p, obj[p])); break;\r\n            }\r\n        }*/\r\n    }\r\n    private createSheetState(name:string, obj:object):SheetState {\r\n        let ret:SheetState = {name:name, actions:[]};\r\n        let actions = ret.actions;\r\n        for (let p in obj) {\r\n            let action:SheetAction = {name: p};\r\n            actions.push(action);\r\n        }\r\n        return ret;\r\n    }\r\n    /*\r\n    private setStateAccess(s:SheetState, s1:SheetState) {\r\n        if (s === undefined) return;\r\n        for (let action of s1.actions) {\r\n            let acn = action.name;\r\n            let ac = s.actions.find(a=>a.name === acn);\r\n            if (ac === undefined) continue;\r\n            s.actions.push(action);\r\n        }\r\n    }*/\r\n    async save(discription:string, data:any):Promise<any> {\r\n        await this.loadSchema();\r\n        let {appId} = this.entities;\r\n        let text = this.pack(data);\r\n\r\n        let ret = await this.tvApi.sheetSave(this.name, {app: appId, discription: discription, data:text});\r\n        return ret;\r\n        /*\r\n        let {id, state} = ret;\r\n        if (id > 0) this.changeStateCount(state, 1);\r\n        return ret;\r\n        */\r\n    }\r\n    async action(id:number, flow:number, state:string, action:string) {\r\n        await this.loadSchema();\r\n        return await this.tvApi.sheetAction(this.name, {id:id, flow:flow, state:state, action:action});\r\n    }\r\n    private async unpack(data:any):Promise<any> {\r\n        //if (this.schema === undefined) await this.loadSchema();\r\n        let ret = data[0];\r\n        let brief = ret[0];\r\n        let sheetData = this.unpackSheet(brief.data);\r\n        let flows = data[1];\r\n        return {\r\n            brief: brief,\r\n            data: sheetData,\r\n            flows: flows,\r\n        }\r\n    }\r\n    async getSheet(id:number):Promise<any> {\r\n        await this.loadSchema();\r\n        let ret = await this.tvApi.getSheet(this.name, id);\r\n        if (ret[0].length === 0) return await this.getArchive(id);\r\n        return await this.unpack(ret);\r\n    }\r\n    async getArchive(id:number):Promise<any> {\r\n        await this.loadSchema();\r\n        let ret = await this.tvApi.sheetArchive(this.name, id)\r\n        return await this.unpack(ret);\r\n    }\r\n\r\n    async getArchives(pageStart:number, pageSize:number) {\r\n        await this.loadSchema();\r\n        let ret = await this.tvApi.sheetArchives(this.name, {pageStart:pageStart, pageSize:pageSize});\r\n        return ret;\r\n    }\r\n\r\n    async getStateSheets(state:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        await this.loadSchema();\r\n        let ret = await this.tvApi.stateSheets(this.name, {state:state, pageStart:pageStart, pageSize:pageSize});\r\n        return ret;\r\n    }\r\n    createPageStateItems<T>(): PageStateItems<T> {return new PageStateItems<T>(this);}\r\n\r\n    async stateSheetCount():Promise<StateCount[]> {\r\n        await this.loadSchema();\r\n        let ret:StateCount[] = await this.tvApi.stateSheetCount(this.name);\r\n        return this.states.map(s => {\r\n            let n = s.name, count = 0;\r\n            let r = ret.find(v => v.state === n);\r\n            if (r !== undefined) count = r.count;\r\n            return {state: n, count: count} \r\n        });\r\n    }\r\n}\r\n\r\nexport class PageStateItems<T> extends PageItems<T> {\r\n    private sheet: Sheet;\r\n    constructor(sheet: Sheet) {\r\n        super(true);\r\n        this.sheet = sheet;\r\n        this.pageSize = 10;\r\n    }\r\n    protected async load(param:any, pageStart:any, pageSize:number):Promise<any[]> {\r\n        let ret = await this.sheet.getStateSheets(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:any) {\r\n        this.pageStart = item === undefined? 0 : item.id;\r\n    }\r\n}\r\n","import {observable, IObservableArray} from 'mobx';\r\nimport {Field, ArrFields} from './entities';\r\nimport {Entity} from './entity';\r\n\r\nexport type QueryPageApi = (name:string, pageStart:any, pageSize:number, params:any) => Promise<string>;\r\nexport class Query extends Entity {\r\n    get typeName(): string { return 'query';}\r\n    private pageStart: any;\r\n    private pageSize:number;\r\n    private params:any;\r\n    private more: boolean;\r\n    private startField: Field;\r\n    @observable list:IObservableArray; // = observable.array([], {deep: false});\r\n    returns: ArrFields[];\r\n    isPaged: boolean;\r\n\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        let {returns} = schema;\r\n        this.returns = returns;\r\n        this.isPaged = (returns as any[]).find(v => v.name === '$page') !== undefined;\r\n    }\r\n\r\n    resetPage(size:number, params:any) {\r\n        this.pageStart = undefined;\r\n        this.pageSize = size;\r\n        this.params = params;\r\n        this.more = false;\r\n        this.list = undefined;\r\n    }\r\n    get hasMore() {return this.more;}\r\n    async loadPage():Promise<void> {\r\n        if (this.pageSize === undefined) {\r\n            throw 'call resetPage(size:number, params:any) first';\r\n        }\r\n        let pageStart:any;\r\n        if (this.pageStart !== undefined) {\r\n            switch (this.startField.type) {\r\n                default: pageStart = this.pageStart; break;\r\n                case 'date':\r\n                case 'time':\r\n                case 'datetime': pageStart = (this.pageStart as Date).getTime(); break;\r\n            }\r\n        }\r\n        let page = await this.page(this.params, pageStart, this.pageSize+1);\r\n        /*\r\n        await this.loadSchema();\r\n        let res = await this.tvApi.page(this.name, pageStart, this.pageSize+1, this.params);\r\n        let data = await this.unpackReturns(res);\r\n        let page = data['$page'] as any[];\r\n        */\r\n        this.list = observable.array([], {deep: false});\r\n        if (page !== undefined) {\r\n            if (page.length > this.pageSize) {\r\n                this.more = true;\r\n                page.pop();\r\n                let ret = this.returns.find(r => r.name === '$page');\r\n                this.startField = ret.fields[0];\r\n                this.pageStart = page[page.length-1][this.startField.name];\r\n            }\r\n            else {\r\n                this.more = false;\r\n            }\r\n            this.list.push(...page);\r\n        }\r\n        //this.loaded = true;\r\n    }\r\n\r\n    async page(params:any, pageStart:any, pageSize:number):Promise<any[]> {\r\n        await this.loadSchema();\r\n        let res = await this.tvApi.page(this.name, pageStart, pageSize+1, this.buildParams(params));\r\n        let data = await this.unpackReturns(res);\r\n        return data.$page;// as any[];\r\n    }\r\n    async query(params:any):Promise<any> {\r\n        await this.loadSchema();\r\n        let res = await this.tvApi.query(this.name, this.buildParams(params));\r\n        let data = await this.unpackReturns(res);\r\n        return data;\r\n    }\r\n    async table(params:any): Promise<any[]> {\r\n        let ret = await this.query(params);\r\n        for (let i in ret) {\r\n            return ret[i];\r\n        }\r\n    }\r\n    async obj(params:any):Promise<any> {\r\n        let ret = await this.table(params);\r\n        if (ret.length > 0) return ret[0];\r\n    }\r\n    async scalar(params:any):Promise<any> {\r\n        let ret = await this.obj(params);\r\n        for (let i in ret) return ret[i];\r\n    }\r\n}\r\n","import {Query} from './query';\r\n\r\nexport class Book extends Query {\r\n    get typeName(): string { return 'book';}\r\n    protected queryApiName = 'book';\r\n}\r\n","import {Query} from './query';\r\n\r\nexport class History extends Query {\r\n    get typeName(): string { return 'history';}\r\n    protected queryApiName = 'history';\r\n}\r\n","import { Entity } from './entity';\r\nimport { Action } from './action';\r\nimport { Query } from './query';\r\nimport { Field } from './entities';\r\n\r\ninterface MapActions {\r\n    add: Action;\r\n    del: Action;\r\n}\r\ninterface MapQueries {\r\n    all: Query;\r\n    page: Query;\r\n    query: Query;\r\n}\r\n\r\nexport class Map extends Entity {\r\n    get typeName(): string { return 'map';}\r\n    keys: Field[];\r\n    actions: MapActions = {} as any;\r\n    queries: MapQueries = {} as any;\r\n    schemaFrom: {owner:string; uq:string};\r\n\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        this.schemaFrom = this.schema.from;\r\n        let {actions, queries, keys} = schema;\r\n        this.entities.buildFieldTuid(this.keys = keys);\r\n        //let t = this.schemaStringify();\r\n        for (let i in actions) {\r\n            let schema = actions[i];\r\n            let {name} = schema;\r\n            let action = this.entities.newAction(name, undefined);\r\n            action.setSchema(schema);\r\n            this.actions[i] = action;\r\n        }\r\n        for (let i in queries) {\r\n            let schema = queries[i];\r\n            let {name} = schema;\r\n            let query = this.entities.newQuery(name, undefined);\r\n            query.setSchema(schema);\r\n            this.queries[i] = query;\r\n        }\r\n    }\r\n\r\n    async add(param:any) {\r\n        await this.loadSchema();\r\n        return await this.actions.add.submit(param);\r\n    }\r\n\r\n    async del(param:any) {\r\n        await this.loadSchema();\r\n        return await this.actions.del.submit(param);\r\n    }\r\n\r\n    async all() {\r\n        await this.loadSchema();\r\n        return await this.queries.all.query({});\r\n    }\r\n\r\n    async page(param:any, pageStart:any, pageSize: number) {\r\n        await this.loadSchema();\r\n        return await this.queries.page.page(param, pageStart, pageSize);\r\n    }\r\n\r\n    async query(param:any) {\r\n        await this.loadSchema();\r\n        return await this.queries.query.query(param);\r\n    }\r\n    async table(params:any): Promise<any[]> {\r\n        let ret = await this.query(params);\r\n        for (let i in ret) {\r\n            return ret[i];\r\n        }\r\n    }\r\n    async obj(params:any):Promise<any> {\r\n        let ret = await this.table(params);\r\n        if (ret.length > 0) return ret[0];\r\n    }\r\n    async scalar(params:any):Promise<any> {\r\n        let ret = await this.obj(params);\r\n        for (let i in ret) return ret[i];\r\n    }\r\n}\r\n","import {Query} from './query';\r\n\r\nexport class Pending extends Query {\r\n    get typeName(): string { return 'pending';}\r\n    protected queryApiName = 'pending';\r\n}\r\n","import {TuidMain, Tuid} from './tuid';\r\nimport {Action} from './action';\r\nimport {Sheet, SheetState, SheetAction} from './sheet';\r\nimport {Query} from './query';\r\nimport {Book} from './book';\r\nimport {History} from './history';\r\nimport { UqApi } from 'tonva-tools';\r\nimport { Map } from './map';\r\nimport { Pending } from './pending';\r\nimport { CUq } from '../controllers';\r\n\r\nexport type FieldType = 'tinyint' | 'smallint' | 'int' | 'bigint' | 'dec' | 'char' | 'text' \r\n    | 'datetime' | 'date' | 'time';\r\n\r\nexport function fieldDefaultValue(type:FieldType) {\r\n    switch (type) {\r\n        case 'tinyint':\r\n        case 'smallint':\r\n        case 'int':\r\n        case 'bigint':\r\n        case 'dec':\r\n            return 0;\r\n        case 'char':\r\n        case 'text': \r\n            return '';\r\n        case 'datetime':\r\n        case 'date':\r\n            return '2000-1-1';\r\n        case 'time':\r\n            return '0:00';\r\n    }\r\n}\r\n\r\nexport interface Field {\r\n    name: string;\r\n    type: FieldType;\r\n    tuid?: string;\r\n    arr?: string;\r\n    url?: string;\r\n    null?: boolean;\r\n    size?: number;\r\n    owner?: string;\r\n    _ownerField: Field;\r\n    _tuid: Tuid;\r\n}\r\nexport interface ArrFields {\r\n    name: string;\r\n    fields: Field[];\r\n    id?: string;\r\n    order?: string;\r\n}\r\nexport interface FieldMap {\r\n    [name:string]: Field;\r\n}\r\n\r\nexport class Entities {\r\n    private tuids: {[name:string]: TuidMain} = {};\r\n    private actions: {[name:string]: Action} = {};\r\n    private sheets: {[name:string]: Sheet} = {};\r\n    private queries: {[name:string]: Query} = {};\r\n    private books: {[name:string]: Book} = {};\r\n    private maps: {[name:string]: Map} = {};\r\n    private histories: {[name:string]: History} = {};\r\n    private pendings: {[name:string]: Pending} = {};\r\n    private cacheTimer: any;\r\n    cUq: CUq;\r\n    uqApi: UqApi;\r\n    appId: number;\r\n    uqId: number;\r\n\r\n    constructor(cUq: CUq, uqApi:UqApi, appId: number) {\r\n        this.cUq = cUq;\r\n        this.uqApi = uqApi;\r\n        this.appId = appId;\r\n    }\r\n\r\n    tuid(name:string):TuidMain {return this.tuids[name.toLowerCase()]}\r\n    action(name:string):Action {return this.actions[name.toLowerCase()]}\r\n    sheet(name:string):Sheet {return this.sheets[name.toLowerCase()]}\r\n    query(name:string):Query {return this.queries[name.toLowerCase()]}\r\n    book(name:string):Book {return this.books[name.toLowerCase()]}\r\n    map(name:string):Map {return this.maps[name.toLowerCase()]}\r\n    history(name:string):History {return this.histories[name.toLowerCase()]}\r\n    pending(name:string):Pending {return this.pendings[name.toLowerCase()]}\r\n\r\n    sheetFromTypeId(typeId:number):Sheet {\r\n        for (let i in this.sheets) {\r\n            let sheet = this.sheets[i];\r\n            if (sheet.typeId === typeId) return sheet;\r\n        }\r\n    }\r\n\r\n    tuidArr: TuidMain[] = [];\r\n    actionArr: Action[] = [];\r\n    sheetArr: Sheet[] = [];\r\n    queryArr: Query[] = [];\r\n    bookArr: Book[] = [];\r\n    mapArr: Map[] = [];\r\n    historyArr: History[] = [];\r\n    pendingArr: Pending[] = [];\r\n\r\n    async loadAccess() {\r\n        let accesses = await this.uqApi.loadAccess();\r\n        if (accesses === undefined) return;\r\n        this.buildEntities(accesses);\r\n    }\r\n\r\n    async loadEntities() {\r\n        let accesses = await this.uqApi.loadEntities();\r\n        this.buildEntities(accesses);\r\n    }\r\n\r\n    private buildEntities(entities:any) {\r\n        if (entities === undefined) {\r\n            debugger;\r\n        }\r\n        let {access, tuids} = entities;\r\n        this.buildTuids(tuids);\r\n        this.buildAccess(access);\r\n    }\r\n\r\n    getTuid(name:string, div?:string, tuidUrl?:string): Tuid {\r\n        let tuid = this.tuids[name];\r\n        if (tuid === undefined) return;\r\n        if (div === undefined) return tuid;\r\n        return tuid.divs[div];\r\n    }\r\n\r\n    cacheTuids(defer:number) {\r\n        this.clearCacheTimer();\r\n        this.cacheTimer = setTimeout(this.loadIds, defer);\r\n    }\r\n    private clearCacheTimer() {\r\n        if (this.cacheTimer === undefined) return;\r\n        clearTimeout(this.cacheTimer);\r\n        this.cacheTimer = undefined;\r\n    }\r\n    private loadIds = () => {\r\n        this.clearCacheTimer();\r\n        for (let i in this.tuids) {\r\n            let tuid = this.tuids[i];\r\n            tuid.cacheIds();\r\n        }\r\n    }\r\n\r\n    private buildTuids(tuids:any) {\r\n        let proxyColl = {} as any;\r\n        for (let i in tuids) {\r\n            let schema = tuids[i];\r\n            let {name, typeId, proxies} = schema;\r\n            let tuid = this.newTuid(i, typeId);\r\n            tuid.sys = true;\r\n            //tuid.setSchema(schema);\r\n            if (proxies !== undefined) proxyColl[i] = proxies;\r\n        }\r\n        for (let i in tuids) {\r\n            let schema = tuids[i];\r\n            let {name} = schema;\r\n            let tuid = this.getTuid(i);\r\n            //tuid.sys = true;\r\n            tuid.setSchema(schema);\r\n        }\r\n        for (let i in proxyColl) {\r\n            let proxies:string[] = proxyColl[i];\r\n            let tuid = this.tuids[i];\r\n            tuid.proxies = {};\r\n            for (let p of proxies) {\r\n                tuid.proxies[p] = this.tuids[p];\r\n            }\r\n        }\r\n    }\r\n\r\n    private buildAccess(access:any) {\r\n        for (let a in access) {\r\n            let v = access[a];\r\n            switch (typeof v) {\r\n                case 'string': this.fromType(a, v); break;\r\n                case 'object': this.fromObj(a, v); break;\r\n            }\r\n        }\r\n        /*\r\n        for (let tuid of this.tuidArr) {\r\n            tuid.setProxies(this);\r\n        }*/\r\n    }\r\n\r\n    newAction(name:string, id:number):Action {\r\n        let action = this.actions[name];\r\n        if (action !== undefined) return action;\r\n        action = this.actions[name] = new Action(this, name, id)\r\n        this.actionArr.push(action);\r\n        return action;\r\n    }\r\n    newTuid(name:string, id:number):TuidMain {\r\n        let tuid = this.tuids[name];\r\n        if (tuid !== undefined) return tuid;\r\n        tuid = this.tuids[name] = new TuidMain(this, name, id);\r\n        this.tuidArr.push(tuid);\r\n        return tuid;\r\n    }\r\n    newQuery(name:string, id:number):Query {\r\n        let query = this.queries[name];\r\n        if (query !== undefined) return query;\r\n        query = this.queries[name] = new Query(this, name, id)\r\n        this.queryArr.push(query);\r\n        return query;\r\n    }\r\n    newBook(name:string, id:number):Book {\r\n        let book = this.books[name];\r\n        if (book !== undefined) return book;\r\n        book = this.books[name] = new Book(this, name, id);\r\n        this.bookArr.push(book);\r\n        return book;\r\n    }\r\n    newMap(name:string, id:number):Map {\r\n        let map = this.maps[name];\r\n        if (map !== undefined) return map;\r\n        map = this.maps[name] = new Map(this, name, id)\r\n        this.mapArr.push(map);\r\n        return map;\r\n    }\r\n    newHistory(name:string, id:number):History {\r\n        let history = this.histories[name];\r\n        if (history !== undefined) return;\r\n        history = this.histories[name] = new History(this, name, id)\r\n        this.historyArr.push(history);\r\n        return history;\r\n    }\r\n    newPending(name:string, id:number):Pending {\r\n        let pending = this.pendings[name];\r\n        if (pending !== undefined) return;\r\n        pending = this.pendings[name] = new Pending(this, name, id)\r\n        this.pendingArr.push(pending);\r\n        return pending;\r\n    }\r\n    newSheet(name:string, id:number):Sheet {\r\n        let sheet = this.sheets[name];\r\n        if (sheet !== undefined) return sheet;\r\n        sheet = this.sheets[name] = new Sheet(this, name, id);\r\n        this.sheetArr.push(sheet);\r\n        return sheet;\r\n    }\r\n    private fromType(name:string, type:string) {\r\n        let parts = type.split('|');\r\n        type = parts[0];\r\n        let id = Number(parts[1]);\r\n        switch (type) {\r\n            case 'uq': this.uqId = id; break;\r\n            case 'tuid': \r\n                let tuid = this.newTuid(name, id);\r\n                tuid.sys = false;\r\n                break;\r\n            case 'action': this.newAction(name, id); break;\r\n            case 'query': this.newQuery(name, id); break;\r\n            case 'book': this.newBook(name, id); break;\r\n            case 'map': this.newMap(name, id); break;\r\n            case 'history': this.newHistory(name, id); break;\r\n            case 'sheet':this.newSheet(name, id); break;\r\n            case 'pending': this.newPending(name, id); break;\r\n        }\r\n    }\r\n    private fromObj(name:string, obj:any) {\r\n        switch (obj['$']) {\r\n            case 'sheet': this.buildSheet(name, obj); break;\r\n        }\r\n    }\r\n    private buildSheet(name:string, obj:any) {\r\n        let sheet = this.sheets[name];\r\n        if (sheet === undefined) sheet = this.newSheet(name, obj.id);\r\n        sheet.build(obj);\r\n        /*\r\n        let states = sheet.states;\r\n        for (let p in obj) {\r\n            switch(p) {\r\n                case '#':\r\n                case '$': continue;\r\n                default: states.push(this.createSheetState(p, obj[p])); break;\r\n            }\r\n        }*/\r\n    }\r\n    /*\r\n    private createSheetState(name:string, obj:object):SheetState {\r\n        let ret:SheetState = {name:name, actions:[]};\r\n        let actions = ret.actions;\r\n        for (let p in obj) {\r\n            let action:SheetAction = {name: p};\r\n            actions.push(action);\r\n        }\r\n        return ret;\r\n    }*/\r\n    buildFieldTuid(fields:Field[], mainFields?:Field[]) {\r\n        if (fields === undefined) return;\r\n        for (let f of fields) {\r\n            let {tuid, arr, url} = f;\r\n            if (tuid === undefined) continue;\r\n            f._tuid = this.getTuid(tuid, arr, url);\r\n        }\r\n        for (let f of fields) {\r\n            let {owner} = f;\r\n            if (owner === undefined) continue;\r\n            let ownerField = fields.find(v => v.name === owner);\r\n            if (ownerField === undefined) {\r\n                if (mainFields !== undefined) {\r\n                    ownerField = mainFields.find(v => v.name === owner);\r\n                }\r\n                if (ownerField === undefined) {\r\n                    throw `owner field ${owner} is undefined`;\r\n                }\r\n            }\r\n            f._ownerField = ownerField;\r\n            let {arr, url} = f;\r\n            f._tuid = this.getTuid(ownerField._tuid.name, arr, url);\r\n            if (f._tuid === undefined) throw 'owner field ${owner} is not tuid';\r\n        }\r\n    }\r\n    buildArrFieldsTuid(arrFields:ArrFields[], mainFields:Field[]) {\r\n        if (arrFields === undefined) return;\r\n        for (let af of arrFields) {\r\n            let {fields} = af;\r\n            if (fields === undefined) continue;\r\n            this.buildFieldTuid(fields, mainFields);\r\n        }\r\n    }\r\n}\r\n","export * from './entities';\r\nexport * from './entity';\r\nexport * from './action';\r\nexport * from './query';\r\nexport * from './sheet';\r\nexport * from './tuid';\r\nexport * from './book';\r\nexport * from './map';\r\nexport * from './history';\r\nexport * from './pending';\r\n","import * as React from 'react';\r\nimport {FormView, FormRow, FieldRow, GroupRow, LabelFormRow} from '../formView';\r\nimport {Control, ControlBase, createControl, CreateControl} from '../control';\r\n\r\nexport type CreateRow = (form:FormView, row: FormRow)=>RowContainer;\r\n\r\nexport abstract class RowContainer {\r\n    protected form:FormView;\r\n    protected row: FormRow;\r\n    protected control: ControlBase;\r\n    constructor(form:FormView, row: FormRow) {\r\n        this.form = form;\r\n        this.row = row;\r\n        if ((row as JSX.Element).type === undefined) {\r\n            let cc:CreateControl = (row as LabelFormRow).createControl;\r\n            if (cc === undefined) cc = form.createControl;\r\n            if (cc === undefined) cc = createControl;\r\n            this.control = cc(form, row);\r\n        }\r\n    }\r\n    abstract render(key:string):JSX.Element;\r\n    \r\n    isOk():boolean {\r\n        if (this.control === undefined) return true;\r\n        return this.control.isOk();\r\n    }\r\n\r\n    contains(fieldName:string):boolean {\r\n        let field = (this.row as FieldRow).field;\r\n        if (field !== undefined) return fieldName === field.name;\r\n        let group = (this.row as GroupRow).group;\r\n        if (group !== undefined) return group.find(g => g.field.name === fieldName)!==undefined;\r\n        return false;\r\n    }\r\n    get hasError():boolean {return this.control.hasError;}\r\n    get filled():boolean {return this.control.filled;}\r\n    clear() {\r\n        if (this.control !== undefined) this.control.clear();\r\n    }\r\n    clearErrors() {\r\n        if (this.control !== undefined) this.control.clearErrors();\r\n    }\r\n    readValues(values:any):any {\r\n        if (this.control !== undefined) this.control.readValues(values);\r\n    }\r\n    setError(fieldName:string, error:string) {\r\n        if (this.control !== undefined) this.control.setError(fieldName, error);\r\n    }\r\n    setInitValues(values:any) {\r\n        if (this.control !== undefined) this.control.setInitValues(values);\r\n    }\r\n}\r\n\r\nclass ElementRowContainer extends RowContainer {\r\n    render(key:string):JSX.Element {\r\n        return <div key={key} className=\"form-group\">{this.row as JSX.Element}</div>;\r\n    }\r\n    get hasError():boolean {return false;}\r\n    get filled():boolean {return false;}\r\n}\r\n\r\nclass BootStrapRowContainer extends RowContainer {\r\n    render(key:string):JSX.Element {\r\n        return <div key={key} className='form-group row'>\r\n            <label className='col-sm-2 col-form-label'>\r\n                {(this.row as LabelFormRow).label}\r\n            </label>\r\n            {this.control.render()}\r\n        </div>;\r\n\r\n        //has-success is-valid\r\n    }\r\n}\r\n\r\nexport function bootstrapCreateRow(form:FormView, row: FormRow):RowContainer {\r\n    return new BootStrapRowContainer(form, row);\r\n}\r\n\r\nexport function elementCreateRow(form:FormView, row: FormRow):RowContainer {\r\n    return new ElementRowContainer(form, row);\r\n}\r\n","import jwtDecode from 'jwt-decode';\r\n\r\nexport interface Unit {\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\nexport interface Guest {\r\n    id: number;             // id = 0\r\n    guest: number;\r\n    token: string;\r\n}\r\n\r\nexport interface User extends Guest {\r\n    id: number;\r\n    name: string;\r\n    nick?: string;\r\n    icon?: string;\r\n}\r\n\r\n/*\r\nexport class UserInNav {\r\n    private user: User;\r\n    constructor(user: User) {\r\n        this.user = user;\r\n    }\r\n    get id():number {return this.user.id}\r\n    get name(): string {return this.user.name}\r\n    get nick(): string {return this.user.nick}\r\n    get icon(): string {return this.user.icon || ('http://' + process.env['REACT_APP_CENTER_HOST'] + '/imgs/Bear-icon.png');}\r\n    get guest(): number {return this.user.guest}\r\n    get token(): string {return this.user.token}\r\n}\r\n*/\r\nexport function decodeUserToken(token: string): User {\r\n    let ret:any = jwtDecode(token);\r\n    let user: User = {\r\n        id: ret.id,\r\n        name: ret.name,\r\n        guest: ret.guest,\r\n        token: token,\r\n    };\r\n    return user;\r\n}\r\n\r\nexport function decodeGuestToken(token: string): Guest {\r\n    let ret:any = jwtDecode(token);\r\n    let guest: Guest = {\r\n        id: 0,\r\n        guest: ret.guest,\r\n        token: token,\r\n    };\r\n    return guest;\r\n}\r\n","//import {isDevelopment} from '../local';\r\nimport {HttpChannel} from './httpChannel';\r\n\r\nexport async function refetchApi(channel:HttpChannel, url, options, resolve, reject) {\r\n    await channel.fetch(url, options, resolve, reject);\r\n}\r\n\r\nexport abstract class ApiBase {\r\n    protected token: string;\r\n    protected path: string;\r\n    protected showWaiting: boolean;\r\n\r\n    constructor(path: string, showWaiting: boolean) {\r\n        this.path = path || '';\r\n        this.showWaiting = showWaiting;\r\n    }\r\n\r\n    protected abstract async getHttpChannel(): Promise<HttpChannel>;\r\n\r\n    public async call(url:string, method:string, body:any):Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.callFetch(url, method, body);\r\n    }\r\n\r\n    public async get(path:string, params:any=undefined): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.get(this.path + path, params);\r\n    }\r\n\r\n    public async post(path:string, params:any): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.post(this.path + path, params);\r\n    }\r\n\r\n    public async put(path:string, params:any): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.put(this.path + path, params);\r\n    }\r\n\r\n    public async delete(path:string, params:any): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.delete(this.path + path, params);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport {nav, mobileHeaderStyle} from './nav';\r\nimport { Page } from './page';\r\n\r\nexport interface TitleBarProps {\r\n    back?: 'back' | 'close' | 'none';\r\n    center: string | JSX.Element;\r\n    right?: JSX.Element;\r\n    logout?: boolean | (()=>void);\r\n}\r\nexport interface TitleBarState {\r\n    hasBack: boolean;\r\n}\r\nexport class TitleBar extends React.Component<TitleBarProps, TitleBarState> {\r\n    private navChangeHandler: ()=>void;\r\n    constructor(props) {\r\n        super(props);\r\n        this.navChange = this.navChange.bind(this);\r\n        this.state = {\r\n            hasBack: false,\r\n        };\r\n    }\r\n    navChange() {\r\n        this.setState({\r\n            hasBack: nav.level > 1\r\n        })\r\n    }\r\n    componentWillMount() {\r\n        this.navChange();\r\n        //this.navChangeHandler = nav.events.add('change', this.navChange);\r\n    }\r\n    componentWillUnmount() {\r\n        //nav.events.remove('change', this.navChangeHandler);\r\n    }\r\n    async back() {\r\n        await nav.back(); // 这个才会显示confirm box，在dataForm里面，如果输入了数据的话\r\n    }\r\n    openWindow() {\r\n        window.open(document.location.href);\r\n    }\r\n    private logoutClick = () => {\r\n        nav.push(<Page header=\"安全退出\" back=\"close\">\r\n            <div className=\"m-5 border border-info bg-white rounded p-3 text-center\">\r\n                <div>退出当前账号不会删除任何历史数据，下次登录依然可以使用本账号</div>\r\n                <div className=\"mt-3\">\r\n                    <button className=\"btn btn-danger\" onClick={()=>this.logout()}>退出</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n    }\r\n    private logout() {\r\n        let {logout} = this.props;\r\n        if (typeof logout === 'function') {\r\n            logout(); \r\n        }\r\n        nav.logout(undefined);\r\n    }\r\n    render() {\r\n        let b = this.state.hasBack || self != top;\r\n        let {right, center, logout} = this.props;\r\n        let back, pop, debugLogout;\r\n        if (logout !== undefined && self === top) {\r\n            if (typeof logout === 'boolean' && logout === true\r\n                || typeof logout === 'function')\r\n            {\r\n                let {nick, name} = nav.user;\r\n                debugLogout = <div className=\"d-flex align-items-center\">\r\n                    <small className=\"text-light\">{nick || name}</small>\r\n                    <a className=\"dropdown-toggle btn btn-secondary btn-sm ml-2\"\r\n                        role=\"button\"\r\n                        onClick={this.logoutClick}>\r\n                        <i className=\"fa fa-sign-out\" />\r\n                    </a>\r\n                </div>;\r\n            }\r\n        }\r\n        if (b) {\r\n            switch (this.props.back) {\r\n                case 'none': back = undefined; break;\r\n                default:\r\n                case 'back': back = <nav onClick={this.back}><i className=\"fa fa-arrow-left\" /></nav>; break;\r\n                case 'close': back = <nav onClick={this.back}><i className=\"fa fa-close\" /></nav>; break;\r\n            }\r\n        }\r\n        if (self != top) {\r\n            console.log(document.location.href);\r\n            pop = <header onClick={this.openWindow} />;\r\n        }\r\n        let rightView;\r\n        if (right || debugLogout) rightView = <aside>{right} {debugLogout}</aside>;\r\n        return (\r\n        <header style={mobileHeaderStyle}>\r\n            {pop}\r\n            {back}\r\n            <div>{center}</div>\r\n            {rightView}\r\n        </header>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { jsonStringify } from '../../tools';\r\n\r\nexport const DefaultRow = (values) => <div className=\"px-3 py-2\">{jsonStringify(values)}</div>;\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { List, FA } from 'tonva-react-form';\r\nimport { Page, nav } from 'tonva-tools';\r\nimport { TuidMain, Query, Entity } from '../../entities';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { QueryUI, CQuery } from './cQuery';\r\nimport { DefaultRow } from './defaultRow';\r\n\r\nexport class VQueryMain extends VEntity<Query, QueryUI, CQuery> {\r\n    protected vForm: VForm;\r\n    private row: React.StatelessComponent;\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        let {row, queryRow} = this.ui;\r\n        this.row = queryRow || row || DefaultRow;\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSubmit = async () => {\r\n        let params = this.vForm.getValues();\r\n        if (this.entity.isPaged === true) {\r\n            await this.entity.resetPage(30, params);\r\n            await this.entity.loadPage();\r\n            this.replacePage(this.pageResult);\r\n        }\r\n        else {\r\n            let data = await this.entity.query(params);\r\n            this.replacePage(this.queryResult, data);\r\n        }\r\n    }\r\n\r\n    again = () => {\r\n        this.vForm.reset();\r\n        this.replacePage(this.view);\r\n    }\r\n\r\n    renderExtra() {\r\n        return;\r\n    }\r\n\r\n    renderRow = (item:any, index:number) => <this.row {...item} />;\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render('mx-3 my-2')}\r\n        {this.renderExtra()}\r\n    </Page>;\r\n\r\n    protected pageResult = () => {\r\n        let {name, list} = this.entity;\r\n        let rightClose = <button\r\n            className=\"btn btn-outline-success\"\r\n            onClick={this.again}>\r\n            <FA name=\"search\" /> 再查询\r\n        </button>;\r\n        return <Page header={this.label} right={rightClose}>\r\n            <List items={list} item={{render: this.renderRow}} />\r\n        </Page>;\r\n    }\r\n\r\n    protected queryResult = observer((result:any) => {\r\n        let rightClose = <button\r\n            className=\"btn btn-outline-success\"\r\n            onClick={this.again}>\r\n            <FA name=\"search\" /> 再查询\r\n        </button>;\r\n        return <Page header={this.label} right={rightClose}>\r\n            <pre>{JSON.stringify(result, undefined, '\\t')}</pre>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport { FA, SearchBox, List } from 'tonva-react-form';\r\nimport { Page, PageItems } from 'tonva-tools';\r\nimport { Query } from '../../entities';\r\nimport { VEntity } from '../CVEntity';\r\nimport { QueryUI, CQuerySelect } from './cQuery';\r\nimport { DefaultRow } from './defaultRow';\r\n\r\nexport class VQuerySelect extends VEntity<Query, QueryUI, CQuerySelect> {\r\n    private row: React.StatelessComponent;\r\n\r\n    PageItems:QueryPageItems;\r\n    ownerId: number;\r\n\r\n    async open(param?:any) {\r\n        let {row, selectRow} = this.ui;\r\n        this.row = selectRow || row || DefaultRow;\r\n        //this.entity = this.controller.entity;\r\n        this.PageItems = new QueryPageItems(this.entity);\r\n        await this.onSearch(param);\r\n        this.openPage(this.view);\r\n    }\r\n    onSearch = async (key:string) => {\r\n        await this.PageItems.first(key);\r\n    }\r\n\r\n    renderRow = (item:any, index:number) => <this.row {...item} />;\r\n\r\n    private callOnSelected(item:any) {\r\n       this.closePage();\r\n       this.returnCall(item);\r\n    }\r\n    clickRow = (item:any) => {\r\n        this.callOnSelected(item);\r\n    }\r\n\r\n    view = () => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\r\n        return <Page header={header}>\r\n            <List\r\n                items={this.PageItems.items}\r\n                item={{render: this.renderRow, onClick: this.clickRow}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    };\r\n}\r\n\r\nexport class QueryPageItems extends PageItems<any> {\r\n    private query: Query;\r\n    constructor(query: Query) {\r\n        super();\r\n        this.query = query;\r\n    }\r\n    protected async load():Promise<any[]> {\r\n        await  this.query.loadSchema();\r\n        let ret:any[];\r\n        if (this.query.isPaged === true)\r\n            ret = await this.query.page(this.param, this.pageStart, this.pageSize);\r\n        else {\r\n            let data = await this.query.query(this.param);\r\n            //let data = await this.query.unpackReturns(res);\r\n            ret = data[this.query.returns[0].name];\r\n        }\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:any) {\r\n        if (item === undefined) this.pageStart = 0;\r\n    }\r\n}\r\n","import { StatelessComponent } from \"react\";\r\nimport { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Query } from \"../../entities\";\r\nimport { VQueryMain } from \"./vQueryMain\";\r\nimport { VQuerySelect } from \"./vQuerySelect\";\r\n\r\nexport interface QueryUI extends EntityUI {\r\n    CQuery?: typeof CQuery;\r\n    CQuerySelect?: typeof CQuerySelect;\r\n    main?: typeof VQueryMain;\r\n    row?: StatelessComponent;\r\n    queryRow?: StatelessComponent;\r\n    selectRow?: StatelessComponent;\r\n}\r\n\r\nexport abstract class CQueryBase extends CEntity<Query, QueryUI> {\r\n}\r\n\r\nexport class CQuery extends CQueryBase {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VQueryMain);\r\n    }\r\n\r\n    protected get VQueryMain():typeof VQueryMain {return this.ui && this.ui.main || VQueryMain}\r\n}\r\n\r\nexport class CQuerySelect extends CQueryBase {\r\n    protected async internalStart(param?:any) {\r\n        await this.openVPage(this.VQuerySelect, param);\r\n    }\r\n\r\n    protected get VQuerySelect():typeof VQuerySelect {return VQuerySelect}\r\n}\r\n","export * from './cQuery';\r\nexport * from './vQueryMain';\r\nexport * from './vQuerySelect';","import * as React from 'react';\r\n\r\nexport function Loading() {\r\n    return <div className=\"d-flex h-100 align-items-center justify-content-center\">\r\n        <i className=\"fa fa-spinner fa-spin fa-2x fa-fw text-info\" />\r\n    </div>;\r\n}\r\n\r\n/*\r\nexport function Loading() {\r\n    return <div style={{height:'100%'}} className=\"d-flex flex-fill align-items-center justify-content-center\">\r\n    <div className=\"d-flex align-items-center justify-content-center slide text-info\" style={{width:'5em', height:'2em'}}>\r\n        加载中...\r\n    </div>\r\n    </div>\r\n}\r\n*/\r\n\r\n\r\n","import * as React from 'react';\r\nimport { nav } from './nav';\r\n\r\nexport interface ResUploaderProps {\r\n    //url: string;\r\n    className?: string;\r\n    multiple?: boolean;\r\n    onFilesChange?: (evt: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nexport class ResUploader extends React.Component<ResUploaderProps> {\r\n    private fileInput: HTMLInputElement;\r\n\r\n    upload = async ():Promise<string> => {\r\n        let resUrl = nav.resUrl + 'upload';\r\n        var files:FileList = this.fileInput.files;\r\n        var data = new FormData();\r\n        let len = files.length;\r\n        for (let i=0; i<len; i++) {\r\n            let file = files[i];\r\n            data.append('files[]', file, file.name);\r\n        }\r\n  \r\n        try {\r\n            let abortController = new AbortController();\r\n            let res = await fetch(resUrl, {\r\n                method: \"POST\",\r\n                body: data,\r\n                signal: abortController.signal,\r\n            });\r\n            let json = await res.json();\r\n            return ':' + json.res.id;\r\n        }\r\n        catch (err) {\r\n            console.error('%s %s', resUrl, err);\r\n        }\r\n    }\r\n    render() {\r\n        let {className, multiple, onFilesChange} = this.props;\r\n        return <input \r\n            className={className}\r\n            ref={t=>this.fileInput=t} \r\n            onChange={onFilesChange}\r\n            type='file' name='file' multiple={multiple} />\r\n    }\r\n}\r\n","export * from './rule';\r\nexport * from './field';\r\nexport * from './face';\r\nexport * from './rowContainer';\r\nexport * from './formView';\r\nexport * from './TonvaForm';\r\nexport {ControlBase} from './control';\r\n","import * as React from 'react';\r\nimport {FormEvent} from 'react';\r\nimport {computed} from 'mobx';\r\nimport {uid} from '../uid';\r\nimport {Rule} from './rule';\r\nimport {Field} from './field';\r\nimport {Face} from './face';\r\nimport {CreateControl, ButtonsControl} from './control';\r\nimport {RowContainer, CreateRow, bootstrapCreateRow, elementCreateRow} from './rowContainer';\r\n\r\nexport interface FieldView {\r\n    field: Field;\r\n    face?: Face;\r\n}\r\n\r\nexport interface LabeledRow {\r\n    label?: string;\r\n    createRow?: CreateRow;\r\n    createControl?: CreateControl;\r\n    help?: JSX.Element;\r\n}\r\n\r\nexport interface FieldRow extends LabeledRow, FieldView {\r\n}\r\n\r\nexport interface GroupRow extends LabeledRow {\r\n    group: FieldView[];\r\n}\r\n\r\nexport type LabelFormRow = FieldRow|GroupRow|LabeledRow;\r\nexport type FormRow = LabelFormRow|JSX.Element;\r\n\r\nexport interface SubmitResult {\r\n    success: boolean;\r\n    message?: string\r\n    result?: any;\r\n}\r\n\r\nexport interface FormProps {\r\n    formRows: FormRow[];\r\n    //context?: any;              // form context，比如，可以是EntitiesUI\r\n    rules?: Rule | Rule[];\r\n    onSubmit: (values:any) => Promise<SubmitResult|undefined>;\r\n    submitButton?: string|JSX.Element;\r\n    otherButton?: string|JSX.Element;\r\n    onOther?: (values:any) => void;\r\n    createRow?: CreateRow;\r\n    createControl?: CreateControl;\r\n    readOnly?: boolean;\r\n}\r\n\r\nexport class FormView {\r\n    uid:string;\r\n    private rows: RowContainer[] = [];\r\n    private buttonsRow: RowContainer;\r\n    props: FormProps;\r\n    createControl?: CreateControl;\r\n    constructor(props:FormProps) {\r\n        this.uid = uid();\r\n        this.props = props;\r\n        this.buildRows(props);\r\n        this.createControl = props.createControl;\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    @computed get hasError():boolean {\r\n        let ret = this.rows.map((v, index) => index + ': ' + v.hasError + '\\n');\r\n        console.log(ret);\r\n        return this.rows.some(row => row.hasError);\r\n    }\r\n    @computed get nothing():boolean {\r\n        let ret = this.rows.every(row => !row.filled);\r\n        return ret;\r\n    }\r\n\r\n    readValues():any {\r\n        let values = {} as any;\r\n        for (let row of this.rows) {\r\n            row.readValues(values);\r\n        }\r\n        return values;\r\n    }\r\n\r\n    clear() {\r\n        for (let row of this.rows) {\r\n            row.clear();\r\n        }\r\n    }\r\n\r\n    clearErrors() {\r\n        for (let row of this.rows) {\r\n            row.clearErrors();\r\n        }\r\n    }\r\n\r\n    setError(fieldName:string, error:string) {\r\n        for (let row of this.rows) {\r\n            row.setError(fieldName, error);\r\n        }\r\n    }\r\n\r\n    setInitValues(initValues:any) {\r\n        if (initValues === undefined) return;\r\n        for (let row of this.rows) {\r\n            row.setInitValues(initValues);\r\n        }\r\n    }\r\n\r\n    private buildRows(props:FormProps) {\r\n        let {formRows, createRow} = props;\r\n        if (formRows !== undefined) {\r\n            for (let row of formRows) {\r\n                this.rows.push(this.buildRow(row, createRow));\r\n            }\r\n            if (this.props.readOnly !== true) {\r\n                this.buttonsRow = this.buildRow({createControl:this.createButtons.bind(this)}, undefined);\r\n            }\r\n        }\r\n        else {\r\n            this.rows.push(elementCreateRow(this, <div className=\"text-warning\">TonvaForm need formRows defined</div>));\r\n        }\r\n    }\r\n\r\n    private buildRow(formRow: FormRow, formRowCreator: CreateRow):RowContainer {\r\n        let createRow:CreateRow;\r\n        let type = (formRow as JSX.Element).type;\r\n        if (type !== undefined) {\r\n            createRow = elementCreateRow;\r\n        }\r\n        else {\r\n            createRow = (formRow as (FieldRow | GroupRow | LabeledRow)).createRow;\r\n            if (createRow === undefined) {\r\n                createRow = formRowCreator;\r\n                if (createRow === undefined) createRow = bootstrapCreateRow;\r\n            }\r\n        }\r\n        let row = createRow(this, formRow);\r\n        return row;\r\n    }\r\n\r\n    private createButtons(form:FormView, row: FormRow) {\r\n        return new ButtonsControl(form);\r\n    }\r\n\r\n    private isOk():boolean {\r\n        let isOk = true;\r\n        for (let row of this.rows) {\r\n            if (!row.isOk()) isOk = false;\r\n        }\r\n        return isOk;\r\n    }\r\n\r\n    render():JSX.Element {\r\n        return <form onSubmit={this.onSubmit}>\r\n            {this.rows.map((row,index) => row.render(this.uid + index))}\r\n            {this.buttons()}\r\n        </form>;\r\n    }\r\n\r\n    buttons():JSX.Element {\r\n        if (this.buttonsRow === undefined) return;\r\n        return this.buttonsRow.render(this.uid + this.rows.length);\r\n    }\r\n    \r\n    async onSubmit(event:FormEvent<HTMLFormElement>) {\r\n        event.preventDefault();\r\n        if (!this.isOk()) return;\r\n        let values = this.readValues();\r\n        await this.props.onSubmit(values);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { Page, loadAppUqs, nav, meInFrame, Controller, TypeVPage, VPage, resLang} from 'tonva-tools';\r\nimport { List, LMR, FA } from 'tonva-react-form';\r\nimport { CUq, EntityType, UqUI } from './uq';\r\nimport { centerApi } from '../centerApi';\r\n\r\nexport interface AppUI {\r\n    CApp?: typeof CApp;\r\n    CUq?: typeof CUq;\r\n    main?: TypeVPage<CApp>;\r\n    uqs: {[uq:string]: UqUI};\r\n    res?: any;\r\n}\r\n\r\nexport class CApp extends Controller {\r\n    private appOwner:string;\r\n    private appName:string;\r\n    private isProduction:boolean;\r\n    private cImportUqs: {[uq:string]: CUq} = {};\r\n    protected ui:AppUI;\r\n    id: number;\r\n    appUnits:any[];\r\n\r\n    constructor(tonvaApp:string, ui?:AppUI) {\r\n        super(resLang(ui && ui.res));\r\n        let parts = tonvaApp.split('/');\r\n        if (parts.length !== 2) {\r\n            throw 'tonvaApp name must be / separated, owner/app';\r\n        }\r\n        this.appOwner = parts[0];\r\n        this.appName = parts[1];\r\n        this.ui = ui || {uqs:{}};\r\n        this.caption = this.res.caption || 'Tonva';\r\n    }\r\n    \r\n    readonly caption: string; // = 'View Model 版的 Uq App';\r\n    cUqCollection: {[uq:string]: CUq} = {};\r\n\r\n    async startDebug() {\r\n        let appName = this.appOwner + '/' + this.appName;\r\n        let cApp = new CApp(appName, {uqs:{}} );\r\n        let keepNavBackButton = true;\r\n        await cApp.start(keepNavBackButton);    \r\n    }\r\n\r\n    protected async loadUqs(): Promise<string[]> {\r\n        let retErrors:string[] = [];\r\n        let unit = meInFrame.unit;\r\n        let app = await loadAppUqs(this.appOwner, this.appName);\r\n        let {id, uqs} = app;\r\n        this.id = id;\r\n\r\n        let promises: PromiseLike<string>[] = [];\r\n        let promiseChecks: PromiseLike<boolean>[] = [];\r\n        for (let appUq of uqs) {\r\n            let {id:uqId, uqOwner, uqName, url, urlDebug, ws, access, token} = appUq;\r\n            let uq = uqOwner + '/' + uqName;\r\n            let ui = this.ui && this.ui.uqs && this.ui.uqs[uq];\r\n            let cUq = this.newCUq(uq, uqId, access, ui || {});\r\n            this.cUqCollection[uq] = cUq;\r\n            promises.push(cUq.loadSchema());\r\n            promiseChecks.push(cUq.entities.uqApi.checkAccess());\r\n        }\r\n        let results = await Promise.all(promises);\r\n        Promise.all(promiseChecks).then((checks) => {\r\n            for (let c of checks) {\r\n                if (c === false) {\r\n                    nav.start();\r\n                    return;\r\n                }\r\n            }\r\n        });\r\n        for (let result of results)\r\n        {\r\n            let retError = result; // await cUq.loadSchema();\r\n            if (retError !== undefined) {\r\n                retErrors.push(retError);\r\n                continue;\r\n            }\r\n        }\r\n        if (retErrors.length === 0) return;\r\n        return retErrors;\r\n    }\r\n\r\n    async getImportUq(uqOwner:string, uqName:string):Promise<CUq> {\r\n        let uq = uqOwner + '/' + uqName;\r\n        let cUq = this.cImportUqs[uq];\r\n        if (cUq !== undefined) return cUq;\r\n        let ui = this.ui && this.ui.uqs && this.ui.uqs[uq];\r\n        let uqId = -1; // unknown\r\n        this.cImportUqs[uq] = cUq = this.newCUq(uq, uqId, undefined, ui || {});\r\n        let retError = await cUq.loadSchema();\r\n        if (retError !== undefined) {\r\n            console.error(retError);\r\n            debugger;\r\n            return;\r\n        }\r\n        return cUq;\r\n    }\r\n\r\n    protected newCUq(uq:string, uqId:number, access:string, ui:any) {\r\n        let cUq = new (this.ui.CUq || CUq)(this, uq, this.id, uqId, access, ui);        \r\n        Object.setPrototypeOf(cUq.x, this.x);\r\n        return cUq;\r\n    }\r\n\r\n    get cUqArr():CUq[] {\r\n        let ret:CUq[] = [];\r\n        for (let i in this.cUqCollection) {\r\n            ret.push(this.cUqCollection[i]);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    getCUq(apiName:string):CUq {\r\n        return this.cUqCollection[apiName];\r\n    }\r\n\r\n    protected get VAppMain():TypeVPage<CApp> {return (this.ui&&this.ui.main) || VAppMain}\r\n    protected async beforeStart():Promise<boolean> {\r\n        //if (await super.beforeStart() === false) return false;\r\n        try {\r\n            let hash = document.location.hash;\r\n            if (hash.startsWith('#tvdebug')) {\r\n                this.isProduction = false;\r\n                //await this.showMainPage();\r\n                //return;\r\n            }\r\n            else {\r\n                this.isProduction = hash.startsWith('#tv');\r\n            }\r\n            let {unit} = meInFrame;\r\n            if (this.isProduction === false && (unit===undefined || unit<=0)) {\r\n                let app = await loadAppUqs(this.appOwner, this.appName);\r\n                let {id} = app;\r\n                this.id = id;\r\n                await this.loadAppUnits();\r\n                switch (this.appUnits.length) {\r\n                    case 0:\r\n                        this.showUnsupport();\r\n                        return false;\r\n                    case 1:\r\n                        unit = this.appUnits[0].id;\r\n                        if (unit === undefined || unit < 0) {\r\n                            this.showUnsupport();\r\n                            return false;\r\n                        }\r\n                        meInFrame.unit = unit;\r\n                        break;\r\n                    default: \r\n                        //nav.clear();\r\n                        nav.push(<this.selectUnitPage />)\r\n                        return false;\r\n                }\r\n            }\r\n\r\n            let retErrors = await this.loadUqs();\r\n            if (retErrors !== undefined) {\r\n                this.openPage(<Page header=\"ERROR\">\r\n                    <div className=\"m-3\">\r\n                        <div>Load Uqs 发生错误：</div>\r\n                        {retErrors.map((r, i) => <div key={i}>{r}</div>)}\r\n                    </div>\r\n                </Page>);\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        catch (err) {\r\n            nav.push(<Page header=\"App start error!\">\r\n                <pre>\r\n                    {typeof err === 'string'? err : err.message}\r\n                </pre>\r\n            </Page>);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    protected async internalStart(param:any) {\r\n        if (param !== true) {\r\n            this.clearPrevPages();\r\n        }\r\n        await this.showMainPage();\r\n    }\r\n    async load() {\r\n        await this.beforeStart();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        return this.renderView(this.VAppMain);\r\n    }\r\n\r\n    // 如果是独立app，删去显示app之前的页面。\r\n    // 如果非独立app，则不删\r\n    protected clearPrevPages() {\r\n        nav.clear();\r\n    }\r\n\r\n    private showUnsupport() {\r\n        this.clearPrevPages();\r\n        this.openPage(<Page header=\"APP无法运行\" logout={true}>\r\n            <div className=\"m-3 text-danger container\">\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-2\">\r\n                        <FA name=\"exclamation-triangle\" />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        用户不支持APP\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-2\">用户: </div>\r\n                    <div className=\"col\">{`${nav.user.name}`}</div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-2\">App:</div>\r\n                    <div className=\"col\">{`${this.appOwner}/${this.appName}`}</div>\r\n                </div>\r\n            </div>\r\n        </Page>)\r\n    }\r\n\r\n    private async showMainPage() {\r\n        // #tvRwPBwMef-23-sheet-api-108\r\n        let parts = document.location.hash.split('-');\r\n        if (parts.length > 2) {\r\n            let action = parts[2];\r\n            // sheet_debug 表示centerUrl是debug方式的\r\n            if (action === 'sheet' || action === 'sheet_debug') {\r\n                let uqId = Number(parts[3]);\r\n                let sheetTypeId = Number(parts[4]);\r\n                let sheetId = Number(parts[5]);\r\n                let cUq = this.getCUqFromId(uqId);\r\n                if (cUq === undefined) {\r\n                    alert('unknown uqId: ' + uqId);\r\n                    return;\r\n                }\r\n                this.clearPrevPages();\r\n                await cUq.navSheet(sheetTypeId, sheetId);\r\n                return;\r\n            }\r\n        }\r\n        this.openVPage(this.VAppMain);\r\n    }\r\n\r\n    private getCUqFromId(uqId:number): CUq {\r\n        for (let i in this.cUqCollection) {\r\n            let cUq = this.cUqCollection[i];\r\n            if (cUq.id === uqId) return cUq;\r\n        }\r\n        return;\r\n    }\r\n\r\n    private async loadAppUnits() {\r\n        let ret = await centerApi.userAppUnits(this.id);\r\n        this.appUnits = ret;\r\n        if (ret.length === 1) {\r\n            meInFrame.unit = ret[0].id;\r\n        }\r\n    }\r\n\r\n    renderRow = (item: any, index: number):JSX.Element => {\r\n        let {id, nick, name} = item;\r\n        return <LMR className=\"px-3 py-2\" right={'id: ' + id}>\r\n            <div>{nick || name}</div>\r\n        </LMR>;\r\n    }\r\n    onRowClick = async (item: any) => {\r\n        meInFrame.unit = item.id; // 25;\r\n        await this.start();\r\n    }\r\n\r\n    protected selectUnitPage = () => {\r\n        return <Page header=\"选择小号\" logout={true}>\r\n            <List items={this.appUnits} item={{render: this.renderRow, onClick: this.onRowClick}}/>\r\n        </Page>\r\n    }\r\n}\r\n\r\nclass VAppMain extends VPage<CApp> {\r\n    async open(param?:any) {\r\n        this.openPage(this.appPage);\r\n    }\r\n\r\n    render(param?:any) {\r\n        return this.appContent();\r\n    }\r\n\r\n    protected appPage() {\r\n        let {caption} = this.controller;\r\n        return <Page header={caption} logout={()=>{meInFrame.unit = undefined}}>\r\n            {this.appContent()}\r\n        </Page>;\r\n    }\r\n\r\n    protected appContent = () => {\r\n        let {cUqArr} = this.controller;\r\n        let content:any;\r\n        if (cUqArr.length === 0) {\r\n            content = <div className=\"text-danger\">\r\n                <FA name=\"\" /> 此APP没有绑定任何的UQ\r\n            </div>;\r\n        }\r\n        else {\r\n            content = cUqArr.map((v,i) => <div key={i}>{v.render()}</div>);\r\n        }\r\n        return <>{content}</>;\r\n    };\r\n}\r\n","import React from 'react';\r\nimport { FA } from \"tonva-react-form\";\r\n\r\nfunction icon(className:string, name:string) {\r\n    return <FA className={className} name={name} fixWidth={true} />;\r\n}\r\n/*\r\nexport interface EntityRes {\r\n    caption: string;\r\n    icon: JSX.Element;\r\n}\r\n*/\r\n\r\nexport const entityIcons:{[type:string]:JSX.Element} = {\r\n    tuid: icon('text-info', 'list-alt'),\r\n    action: icon('text-info', 'hand-o-right'),\r\n    map: icon('text-muted', 'list-ul'),\r\n    book: icon('text-muted', 'book'),\r\n    query: icon('text-warning', 'search'),\r\n    history: icon('text-info', 'hand-o-right'),\r\n    pending: icon('text-info', 'forward'),\r\n    sheet: icon('text-primary', 'wpforms'),\r\n};\r\n","import { Controller } from \"tonva-tools\";\r\nimport { CUq } from \"./uq\";\r\n\r\nexport abstract class ControllerUq extends Controller {\r\n    constructor(cUq: CUq, res:any) {\r\n        super(res);\r\n        this.cUq = cUq;\r\n    }\r\n    cUq: CUq;\r\n}\r\n","import {CenterApi as CenterApiBase} from 'tonva-tools';\r\n\r\n//\r\n\r\nexport class CenterApi extends CenterApiBase {\r\n    async userAppUnits(app:number):Promise<any[]> {\r\n        return await this.get('tie/user-app-units', {app:app});\r\n    }\r\n}\r\n\r\nexport const centerApi = new CenterApi('tv/', undefined);\r\n","import _ from 'lodash';\r\nimport { Context } from '../context';\r\nimport { FormRes } from '../formRes';\r\n\r\nexport abstract class Rule {\r\n    abstract check(defy:string[], value:any):void;\r\n}\r\n\r\nexport type ContextRule = (context:Context)=>{[target:string]:string[]|string} | string[] | string;\r\nexport type FieldRule = (value:any) => string[] | string;\r\n\r\nexport class RuleCustom extends Rule {\r\n    private func: FieldRule;\r\n    constructor(func: FieldRule) {\r\n        super();\r\n        this.func = func;\r\n    }\r\n    check(defy:string[], value:any) {\r\n        let ret = this.func(value);\r\n        if (ret === undefined) return;\r\n        switch (typeof ret) {\r\n            case 'undefined': return;\r\n            case 'string': defy.push(ret as string); return;\r\n            default: defy.push(...ret); return;\r\n        }        \r\n    }\r\n}\r\n\r\nexport abstract class RulePredefined extends Rule {\r\n    protected res: FormRes;\r\n    constructor(res: FormRes) {\r\n        super();\r\n        this.res = res;\r\n    }\r\n}\r\n\r\nexport class RuleRequired extends RulePredefined {\r\n    check(defy:string[], value:any) {\r\n        switch (typeof value) {\r\n            default:\r\n            case 'boolean': return;\r\n            case 'object':\r\n                if (value !== null) return;\r\n                break;\r\n            case 'string':\r\n                if ((value as string).trim().length > 0) return;\r\n                break;\r\n            case 'number':\r\n                if ((value as number) !== NaN) return;\r\n                break;\r\n            case 'undefined':\r\n                break;\r\n        }\r\n        defy.push(this.res.required);\r\n    }\r\n}\r\n\r\nexport class RuleNum extends RulePredefined {\r\n    private minMsg: _.TemplateExecutor;\r\n    private maxMsg: _.TemplateExecutor;\r\n    protected min: number;\r\n    protected max: number\r\n    constructor(res: FormRes, min?: number, max?: number) {\r\n        super(res);\r\n        this.minMsg = _.template(res.min);\r\n        this.maxMsg = _.template(res.max);\r\n        this.min = min;\r\n        this.max = max;\r\n    }\r\n    check(defy:string[], value:any) {\r\n        if (value === undefined || value === null) return;\r\n        let n = Number(value);\r\n        if (n === NaN) {\r\n            defy.push(this.res.number);\r\n        }\r\n        else {\r\n            this.checkMore(defy, n);\r\n        }\r\n    }\r\n\r\n    protected checkMore(defy:string[], value: number) {\r\n        if (this.min !== undefined && Number(value) < this.min) {\r\n            defy.push(this.minMsg({min:this.min}));\r\n        }\r\n        if (this.max !== undefined && Number(value) > this.max) {\r\n            defy.push(this.maxMsg({max:this.max}));\r\n        }\r\n    }\r\n}\r\n\r\nexport class RuleInt extends RuleNum {\r\n    protected checkMore(defy:string[], n: number) {\r\n        super.checkMore(defy, n);\r\n        if (Number.isInteger(n) === false) {\r\n            defy.push(this.res.integer);\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { UiItem, ChangingHandler, ChangedHandler } from '../../schema';\r\nimport { FieldProps } from '../field';\r\nimport { Context } from '../context';\r\nimport { ItemSchema } from '../../schema';\r\nimport { Rule, RuleRequired, RuleCustom, FieldRule } from '../rules';\r\nimport { computed, observable, reaction } from 'mobx';\r\n\r\nexport abstract class Widget {\r\n    protected name: string;\r\n    protected context: Context;\r\n    protected fieldProps:FieldProps;\r\n    protected children: React.ReactNode;\r\n    protected itemSchema: ItemSchema;\r\n    protected ui: UiItem;\r\n    protected defaultValue: any;\r\n    protected value: any;\r\n    protected rules: Rule[];\r\n    @observable protected errors: string[] = [];\r\n    @observable protected contextErrors: string[] = [];\r\n    @computed protected get hasError():boolean {return (this.errors.length + this.contextErrors.length)>0}\r\n    protected readOnly:boolean;\r\n    protected disabled:boolean;\r\n    @observable visible:boolean;\r\n\r\n    constructor(context:Context, itemSchema:ItemSchema, fieldProps:FieldProps, children: React.ReactNode) {\r\n        this.context = context;\r\n        let {name} = itemSchema;\r\n        this.name = name;\r\n        this.itemSchema = itemSchema;\r\n        this.fieldProps = fieldProps;\r\n        this.children = children;\r\n        this.ui = context.getUiItem(name);\r\n        if (this.ui === undefined) {\r\n            this.readOnly = false;\r\n            this.disabled = false;\r\n            this.visible = true;\r\n        }\r\n        else {\r\n            let {readOnly, disabled, visible} = this.ui;\r\n            this.readOnly = (readOnly === true);\r\n            this.disabled = (disabled === true);\r\n            this.visible = !(visible === false);            \r\n        }\r\n        this.value = this.defaultValue =  context.getValue(name); //defaultValue;\r\n        this.init();\r\n    }\r\n\r\n    protected init() {\r\n        this.rules = [];\r\n        if (this.itemSchema.required === true) {\r\n            this.rules.push(new RuleRequired(this.context.form.res));\r\n        }\r\n        this.buildRules();\r\n        if (this.ui === undefined) return;\r\n        let {rules} = this.ui;\r\n        if (rules === undefined) return;\r\n        if (Array.isArray(rules) === false) {\r\n            this.rules.push(new RuleCustom(rules as FieldRule));\r\n            return;\r\n        }\r\n        for (let rule of rules as FieldRule[]) {\r\n            this.rules.push(new RuleCustom(rule));\r\n        }\r\n    }\r\n\r\n    protected buildRules() {\r\n    }\r\n\r\n    checkRules() {\r\n        let defy:string[] = [];\r\n        for (let r of this.rules) r.check(defy, this.value);\r\n        if (defy.length === 0) {\r\n            this.context.removeErrorWidget(this);\r\n        }\r\n        else {\r\n            this.context.addErrorWidget(this);\r\n            this.errors.push(...defy);\r\n        }\r\n    }\r\n\r\n    @computed get isOk() {\r\n        return this.errors.length ===0;\r\n    }\r\n\r\n    setError(err:string | string[]) {\r\n        if (err === undefined) return;\r\n        if (typeof err === 'string') this.errors.push(err);\r\n        else this.errors.push(...err);\r\n    }\r\n\r\n    setContextError(err:string | string[]) {\r\n        if (err === undefined) return;\r\n        if (typeof err === 'string') this.contextErrors.push(err);\r\n        else this.contextErrors.push(...err);\r\n    }\r\n\r\n    clearError() {\r\n        this.errors.splice(0);\r\n    }\r\n\r\n    clearContextError() {\r\n        this.contextErrors.splice(0);\r\n    }\r\n\r\n    protected parse(value:any):any {return value}\r\n\r\n    protected setElementValue(value:any) {}\r\n    protected setDataValue(value:any) {\r\n        if (this.isChanging === true) return;\r\n        this.context.initData[this.name] = this.value = this.parse(value);\r\n    }\r\n\r\n    setValue(value:any) {\r\n        if (this.isChanging === true) return;\r\n        //this.setDataValue(value);\r\n        //this.setElementValue(value);\r\n        this.changeValue(value, false);\r\n    }\r\n\r\n    getValue() {\r\n        return this.context.getValue(this.name);\r\n    }\r\n\r\n    getReadOnly():boolean {return this.readOnly}\r\n    getDisabled():boolean {return this.disabled}\r\n    getVisible():boolean {return this.visible}\r\n    setReadOnly(value:boolean) {this.readOnly = value}\r\n    setDisabled(value:boolean) {this.disabled = value}\r\n    setVisible(value:boolean) {this.visible = value}\r\n\r\n    private isChanging: boolean;\r\n    protected onInputChange = (evt: React.ChangeEvent<any>) => {\r\n        this.changeValue(evt.target.value, true);\r\n        /*\r\n        let prev = this.value;\r\n        let onChanging: ChangingHandler;\r\n        let onChanged: ChangedHandler;\r\n        if (this.ui !== undefined) {\r\n            onChanging = this.ui.onChanging;\r\n            onChanged = this.ui.onChanged;\r\n        }\r\n        let allowChange = true;\r\n        if (onChanging !== undefined) {\r\n            this.isChanging = true;\r\n            allowChange = onChanging(this.context, this.value, prev);\r\n            this.isChanging = false;\r\n        }\r\n        if (allowChange === true) {\r\n            this.setDataValue(evt.currentTarget.value);\r\n            if (onChanged !== undefined) {\r\n                this.isChanging = true;\r\n                onChanged(this.context, this.value, prev);\r\n                this.isChanging = false;\r\n            }\r\n        }\r\n        */\r\n    }\r\n\r\n    protected changeValue(newValue: any, fromElement: boolean) {\r\n        let prev = this.value;\r\n        let onChanging: ChangingHandler;\r\n        let onChanged: ChangedHandler;\r\n        if (this.ui !== undefined) {\r\n            onChanging = this.ui.onChanging;\r\n            onChanged = this.ui.onChanged;\r\n        }\r\n        let allowChange = true;\r\n        if (onChanging !== undefined) {\r\n            this.isChanging = true;\r\n            allowChange = onChanging(this.context, this.value, prev);\r\n            this.isChanging = false;\r\n        }\r\n        if (allowChange === true) {\r\n            this.setDataValue(newValue);\r\n            if (fromElement !== true) this.setElementValue(newValue);\r\n            if (onChanged !== undefined) {\r\n                this.isChanging = true;\r\n                onChanged(this.context, this.value, prev);\r\n                this.isChanging = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    protected get className():string {\r\n        let fieldClass:string;\r\n        if (this.context.inNode === false) fieldClass = 'form-control';\r\n        return classNames(fieldClass, this.context.form.FieldClass, this.ui && this.ui.className);\r\n    }\r\n\r\n    protected abstract render():JSX.Element;\r\n\r\n    renderContainer():JSX.Element {\r\n        if (this.visible === false) return null;\r\n        let {form, inNode} = this.context;\r\n        if (inNode === true) return this.render();\r\n        let label:any;\r\n        if (this.ui === undefined) {\r\n            label = this.name;\r\n        }\r\n        else {\r\n            let uiLabel = this.ui.label;\r\n            if (uiLabel === null) label = null;\r\n            label = uiLabel || this.name;\r\n        }\r\n        if (this.itemSchema.required === true && form.props.requiredFlag !== false) {\r\n            if (label !== null) label = <>{label}&nbsp;<span className=\"text-danger\">*</span></>;\r\n        }\r\n        return form.FieldContainer(label, this.render());\r\n    }\r\n\r\n    protected renderTemplet():JSX.Element | undefined {\r\n        if (this.children !== undefined) {\r\n            return <>{this.children}</>;\r\n        }\r\n        if (this.ui === undefined) return undefined;\r\n        let {Templet} = this.ui;\r\n        if (typeof Templet === 'function') return Templet(this.value);\r\n        return Templet;\r\n    }\r\n\r\n    protected renderErrors() {\r\n        let errorList:string[] = [...this.errors, ...this.contextErrors];\r\n        if (errorList.length === 0) return null;\r\n        let {inNode} = this.context;\r\n        let tag = inNode === true? 'span' : 'div';\r\n        return errorList.map(err => React.createElement(tag, \r\n            {\r\n                key: err, \r\n                className: 'text-danger d-inline-block my-2 ml-3'\r\n            },\r\n            <><i className=\"fa fa-exclamation-circle\" /> &nbsp;{err}</>\r\n        ));\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiTextItem } from '../../schema';\r\nimport { StringSchema } from '../../schema';\r\n\r\nexport class TextWidget extends Widget {\r\n    protected inputType = 'text';\r\n    protected ui: UiTextItem;\r\n    protected input: HTMLInputElement;\r\n\r\n    protected setElementValue(value:any) {\r\n        if (this.input === null) return;\r\n        this.input.value = value;\r\n    }\r\n    protected get placeholder() {return (this.ui && this.ui.placeholder) || this.name}\r\n    protected onKeyDown: (evt:React.KeyboardEvent<HTMLInputElement>)=>void;\r\n\r\n    protected onBlur(evt: React.FocusEvent<any>) {\r\n        this.onInputChange(evt);\r\n        this.checkRules();\r\n        this.context.checkContextRules();\r\n    }\r\n    protected onFocus(evt: React.FocusEvent<any>) {\r\n        this.clearError();\r\n        this.context.removeErrorWidget(this);\r\n        this.context.removeErrors();\r\n    }\r\n    protected onChange(evt: React.ChangeEvent<any>) {\r\n    }\r\n\r\n    setReadOnly(value:boolean) {\r\n        if (this.input === null) return;\r\n        this.input.readOnly = this.readOnly = value;\r\n    }\r\n    setDisabled(value:boolean) {\r\n        if (this.input === null) return;\r\n        this.input.disabled = this.disabled = value;\r\n    }\r\n\r\n    render() {\r\n        let renderTemplet = this.renderTemplet();\r\n        if (renderTemplet !== undefined) return renderTemplet;\r\n        let cn = {\r\n            //'form-control': true,\r\n        };\r\n        if (this.hasError === true) {\r\n            cn['is-invalid'] = true;\r\n        }\r\n        else {\r\n            cn['required-item'] = this.itemSchema.required === true;\r\n        }\r\n        return <><input ref={input=>this.input = input}\r\n            className={classNames(this.className, cn)}\r\n            type={this.inputType}\r\n            defaultValue={this.value}\r\n            onChange={(evt: React.ChangeEvent<any>) => this.onChange(evt)}\r\n            placeholder={this.placeholder}\r\n            readOnly={this.readOnly}\r\n            disabled={this.disabled}\r\n            onKeyDown = {this.onKeyDown}\r\n            onFocus = {(evt: React.FocusEvent<any>) => this.onFocus(evt)}\r\n            onBlur={(evt: React.FocusEvent<any>) => this.onBlur(evt)}\r\n            maxLength={(this.itemSchema as StringSchema).maxLength} />\r\n            {this.renderErrors()}\r\n        </>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { TextWidget } from './textWidget';\r\nimport { RuleNum, RuleInt } from '../rules';\r\nimport { NumBaseSchema } from '../../schema';\r\n\r\nexport class NumberWidget extends TextWidget {\r\n    protected inputType = 'number';\r\n    protected itemSchema: NumBaseSchema;\r\n\r\n    protected buildRules() {\r\n        super.buildRules();\r\n        let res = this.context.form.res;\r\n        let {min, max} = this.itemSchema;\r\n        this.rules.push(\r\n            this.itemSchema.type === 'integer'?\r\n                new RuleNum(res, min, max) :\r\n                new RuleInt(res, min, max)\r\n        );\r\n        /*\r\n        if (this.itemSchema.type === 'integer') {\r\n            this.rules.push(new RuleInt);\r\n        }\r\n        let {min, max} = this.itemSchema;\r\n        if (min !== undefined) this.rules.push(new RuleMin(min));\r\n        if (max !== undefined) this.rules.push(new RuleMax(max));\r\n        */\r\n    }\r\n\r\n    protected parse(value:any):any {\r\n        if (value === undefined || value === null) return;\r\n        return Number(value);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { NumberWidget } from './numberWidget';\r\n\r\nexport class UpdownWidget extends NumberWidget {\r\n    protected inputType = 'number';\r\n\r\n    protected isValidKey(key:number):boolean {\r\n        return key===46 || key===8 || key===37 || key===39\r\n            || key>=48 && key<=57\r\n            || key>=96 && key<=105\r\n            || key===109 || key===189;\r\n    }\r\n    \r\n    protected onKeyDown = (evt:React.KeyboardEvent<HTMLInputElement>) => {\r\n        let key = evt.keyCode;\r\n        event.returnValue = this.isValidKey(key);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { TextWidget } from './textWidget';\r\n\r\nexport class DateWidget extends TextWidget {\r\n    protected inputType = 'date';\r\n}\r\n\r\nexport class DateTimeWidget extends TextWidget {\r\n    protected inputType = 'datetime';\r\n}\r\n\r\nexport class TimeWidget extends TextWidget {\r\n    protected inputType = 'time';\r\n}\r\n\r\nexport class MonthWidget extends TextWidget {\r\n    protected inputType = 'month';\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiCheckItem } from '../../schema';\r\n\r\nexport class CheckBoxWidget extends Widget {\r\n    protected input: HTMLInputElement;\r\n    protected ui: UiCheckItem;\r\n    protected trueValue: any;\r\n    protected falseValue: any;\r\n\r\n    protected init() {\r\n        super.init();\r\n        if (this.ui !== undefined) {\r\n            let {trueValue, falseValue} = this.ui;\r\n            if (trueValue === undefined) this.trueValue = true;\r\n            else this.trueValue = trueValue;\r\n            if (falseValue === undefined) this.falseValue = false;\r\n            else this.falseValue = falseValue;\r\n        }\r\n        else {\r\n            this.trueValue = true;\r\n            this.falseValue = false;\r\n        }\r\n    }\r\n    protected setElementValue(value:any) {\r\n        this.input.checked = value === this.trueValue;\r\n    }\r\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\r\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\r\n\r\n    protected onInputChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setDataValue(evt.target.checked === true? this.trueValue : this.falseValue);\r\n    }\r\n\r\n    protected onClick = () => {\r\n        this.context.removeErrors();\r\n    }\r\n\r\n    render() {\r\n        let cn = classNames(this.className, 'form-check-inline');\r\n        let input = <input\r\n            ref={(input)=>this.input = input}\r\n            className={'align-self-center'}\r\n            type=\"checkbox\"\r\n            defaultChecked={this.defaultValue} \r\n            onChange={this.onInputChange}\r\n            onClick={this.onClick} />;\r\n        return this.context.inNode?\r\n            <label className={cn}>\r\n                {input} {(this.ui&&this.ui.label) || this.name}\r\n            </label>\r\n            :\r\n            <div className={cn}>{input}</div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\nimport { Widget } from './widget';\r\nimport { UiSelect } from '../../schema';\r\n\r\nexport class SelectWidget extends Widget {\r\n    protected select: HTMLSelectElement;\r\n    protected ui: UiSelect;\r\n    @observable protected readOnly: boolean;\r\n\r\n    protected setElementValue(value:any) {this.select.value = value}\r\n    protected onInputChange = (evt:React.ChangeEvent<HTMLSelectElement>) => {\r\n        this.setDataValue(evt.target.value);\r\n    }\r\n\r\n    setReadOnly(value:boolean) {this.select.disabled = this.readOnly = !value}\r\n    setDisabled(value:boolean) {this.select.disabled = this.disabled = value}\r\n\r\n    render() {\r\n        if (this.readOnly === true) {\r\n            let option = this.ui.list.find(v => v.value === this.value);\r\n            let title = (option === undefined)? '(???)' : option.title;\r\n            return <span className=\"form-control w-min-6c\">{title}</span>;\r\n        }\r\n        return <select\r\n            ref={(select)=>this.select = select}\r\n            className={classNames(this.className, 'form-control')}\r\n            defaultValue={this.defaultValue} \r\n            onChange={this.onInputChange}>\r\n            {this.ui.list.map((v,index) => {\r\n                let {title, value} = v;\r\n                let cn:string;\r\n                //if (value === undefined || value === null) cn = 'text-light small';\r\n                //else cn = 'text-danger';\r\n                return <option className={cn} key={index} value={value}>{title || value}</option>\r\n            })}\r\n        </select>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiIdItem, TempletType } from '../../schema';\r\nimport { observable } from 'mobx';\r\n\r\nexport class IdWidget extends Widget {\r\n    protected ui: UiIdItem;\r\n    @observable protected value:number;\r\n    setReadOnly(value:boolean) {this.readOnly = value}\r\n    setDisabled(value:boolean) {this.disabled = value}    \r\n\r\n    protected onClick = async () => {\r\n        let pickId = this.ui && this.ui.pickId;\r\n        if (pickId === undefined) {\r\n            alert('no pickId defined!');\r\n            return;\r\n        }\r\n        let id = await pickId(this.context, this.name, this.value);        \r\n        this.setDataValue(id);\r\n        this.clearError();\r\n        this.clearContextError();\r\n        this.checkRules();\r\n    }\r\n\r\n    render() {\r\n        let placeholder:string|JSX.Element, Templet: TempletType;\r\n        if (this.ui !== undefined) {\r\n            placeholder = this.ui.placeholder;\r\n            Templet = this.ui.Templet;\r\n        }\r\n        let cn = {\r\n            'form-control': true,\r\n            'required-item': this.itemSchema.required === true,\r\n            'cursor-pointer': true,\r\n            'is-invalid': this.hasError,\r\n        };\r\n        let content;\r\n        if (this.value === undefined || this.value === null) {\r\n            content = placeholder || 'placeholder';\r\n            cn['text-muted'] = true;\r\n        }\r\n        else if (Templet === undefined) {\r\n            content = <>{this.value}</>;\r\n        }\r\n        else if (typeof Templet === 'function') {\r\n            content = Templet(this.value);\r\n        }\r\n        else {\r\n            content = Templet;\r\n        }\r\n        return <>\r\n            <div className={classNames(cn)} onClick={this.onClick}>{content}</div>\r\n            {this.renderErrors()}\r\n        </>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { DataType } from '../../schema';\r\nimport { UiType } from '../../schema';\r\n\r\nexport const Unknown = (dataType:DataType, uiType:UiType, dataTypes:DataType[]) => {\r\n    return <span className=\"text-danger\">!!data type {dataType} only support {(dataTypes || []).join(', ')}, can't use ui {uiType}!!</span>;\r\n};\r\n","import * as React from 'react';\r\nimport { UiButton, TempletType } from '../../schema';\r\nimport { Unknown } from './unknown';\r\nimport { Widget } from './widget';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class ButtonWidget extends Widget {\r\n    protected ui: UiButton;\r\n\r\n    protected onClick = async () => {\r\n        this.clearError();\r\n        this.clearContextError();\r\n        let {name, type} = this.itemSchema;\r\n        if (type === 'submit') {\r\n            this.context.checkRules()\r\n            if (this.context.hasError === true) {\r\n                return;\r\n            }\r\n        }\r\n        let {onButtonClick} = this.context.form.props;\r\n        if (onButtonClick === undefined) {\r\n            alert(`button ${name} clicked. you should define form onButtonClick`);\r\n            return;\r\n        }\r\n        let ret = await onButtonClick(name, this.context);\r\n        if (ret === undefined) return;\r\n        this.context.setError(name, ret);\r\n    }\r\n\r\n    private observerRender = observer(() => {\r\n        let {name, type} = this.itemSchema;\r\n        let Templet:TempletType, cn:string, label:string;\r\n        if (this.ui !== undefined) {\r\n            let {widget:widgetType} = this.ui;\r\n            if (widgetType !== 'button') return Unknown(type, widgetType, ['button']);\r\n            Templet = this.ui.Templet;\r\n            cn = this.ui.className;\r\n            label = this.ui.label;\r\n        }\r\n        let {form, hasError} = this.context;\r\n        let context = this.context;\r\n        let disabled = type==='submit' && hasError;\r\n        let content:any;\r\n        if (this.children !== undefined) content = this.children;\r\n        else if (typeof Templet === 'function') content = Templet();\r\n        else if (Templet !== undefined) content = Templet;\r\n        else content = label; \r\n        let button = <button \r\n            className={cn} \r\n            type=\"button\"\r\n            disabled={disabled}\r\n            onClick={this.onClick}>\r\n            {content || name}\r\n        </button>;\r\n        if (context.inNode === true) return <>{button}{this.renderErrors()}</>;\r\n        return <div className={form.ButtonClass}>\r\n            <div>{this.renderErrors()}</div>\r\n            {button}\r\n        </div>;\r\n    });\r\n    \r\n    render() {\r\n        return <this.observerRender />\r\n    }\r\n\r\n    renderContainer():JSX.Element {\r\n        if (this.visible === false) return null;        \r\n        let {form, inNode} = this.context;\r\n        if (inNode === true) return this.render();\r\n        return form.FieldContainer(null, this.render());\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\n//import { ArrRow } from '../arrRow';\r\nimport { Context, RowContext, ContextContainer } from '../context';\r\nimport { ArrSchema } from '../../schema';\r\nimport { UiArr, TempletType } from '../../schema';\r\nimport { Unknown } from './unknown';\r\nimport { factory } from './factory';\r\n\r\nexport const ArrComponent = observer((\r\n    {parentContext, arrSchema, children}:{parentContext: Context, arrSchema: ArrSchema, children: React.ReactNode}) => \r\n{\r\n    let {name, arr} = arrSchema;\r\n    let data = parentContext.initData[name] as any[];\r\n    let {form} = parentContext;\r\n    let arrRowContexts = parentContext.getArrRowContexts(name);\r\n    let ui = parentContext.getUiItem(name) as UiArr;\r\n    let arrLabel = name;\r\n    let Templet:TempletType;\r\n    let selectable:boolean, deletable:boolean, restorable:boolean;\r\n    let {ArrContainer, RowContainer, RowSeperator, uiSchema} = form;\r\n    if (uiSchema !== undefined) {\r\n        let {selectable:formSelectable, deletable:formDeletable, restorable:formRestorable} = uiSchema;\r\n        if (selectable !== true) selectable = formSelectable;\r\n        if (deletable !== true) deletable = formDeletable;\r\n        if (restorable !== true) restorable = formRestorable;\r\n    }\r\n    if (ui !== undefined) {\r\n        let {widget:widgetType, label, \r\n            selectable:arrSelectable, deletable:arrDeletable, restorable:arrRestorable,\r\n            ArrContainer:ac, RowContainer:rc, RowSeperator:rs\r\n        } = ui;\r\n        if (arrSelectable !== undefined) selectable = arrSelectable;\r\n        if (arrDeletable !== undefined) deletable = arrDeletable;\r\n        if (arrRestorable !== undefined) restorable = arrRestorable;\r\n        if (ac !== undefined) ArrContainer = ac;\r\n        if (rc !== undefined) RowContainer = rc;\r\n        if (rs !== undefined) RowSeperator = rs;\r\n        Templet = ui.Templet;\r\n        if (widgetType !== 'arr') return Unknown(arrSchema.type, widgetType, ['arr']);\r\n        arrLabel = label || arrLabel;\r\n    }\r\n    let first = true;\r\n    return ArrContainer(arrLabel, <>\r\n        {data.map((row:any, index) => {\r\n            let rowContext: RowContext;\r\n            let rowContent: JSX.Element;\r\n            let sep = undefined;\r\n            if (first === false) sep = RowSeperator;\r\n            else first = false;\r\n            if (children !== undefined) {\r\n                rowContext = new RowContext(parentContext, arrSchema, row, true);\r\n                rowContent = <>{children}</>;\r\n            }\r\n            else {\r\n                let typeofTemplet = typeof Templet;\r\n                if (typeofTemplet === 'function') {\r\n                    rowContext = new RowContext(parentContext, arrSchema, row, true);\r\n                    rowContent = React.createElement(observer(Templet as React.StatelessComponent), row);\r\n                }\r\n                else if (typeofTemplet === 'object') {\r\n                    rowContext = new RowContext(parentContext, arrSchema, row, true);\r\n                    rowContent = Templet as JSX.Element;\r\n                }\r\n                else {\r\n                    rowContext = new RowContext(parentContext, arrSchema, row, false);\r\n                    rowContent = <>{\r\n                        arr.map((v, index) => {\r\n                            return <React.Fragment key={v.name}>\r\n                                {factory(rowContext, v, undefined)}\r\n                            </React.Fragment>\r\n                        })}\r\n                    </>;\r\n                }\r\n            }\r\n            let {rowKey} = rowContext;\r\n            arrRowContexts[rowKey] = rowContext;\r\n\r\n            let selectCheck:JSX.Element, deleteIcon:JSX.Element;\r\n            if (selectable === true) {\r\n                let onClick = (evt: React.MouseEvent<HTMLInputElement>)=>{\r\n                    let {checked} = (evt.target as HTMLInputElement);\r\n                    row.$isSelected = checked;\r\n                    let {$source} = row;\r\n                    if ($source !== undefined) $source.$isSelected = checked;\r\n                    rowContext.removeErrors();\r\n                }\r\n                selectCheck = <div className=\"form-row-checkbox\">\r\n                    <input type=\"checkbox\" onClick={onClick} defaultChecked={row.$isSelected} />\r\n                </div>;\r\n            }\r\n            let isDeleted = !(row.$isDeleted===undefined || row.$isDeleted===false);\r\n            if (deletable === true) {\r\n                let icon = isDeleted? 'fa-undo' : 'fa-trash';\r\n                let onDelClick = () => {\r\n                    if (restorable === true) {\r\n                        row.$isDeleted = !isDeleted;\r\n                        let {$source} = row;\r\n                        if ($source !== undefined) $source.$isDeleted = !isDeleted;\r\n                    }\r\n                    else {\r\n                        let p = data.indexOf(row);\r\n                        if (p>=0) data.splice(p, 1);\r\n                    }\r\n                    rowContext.removeErrors();\r\n                }\r\n                deleteIcon = <div className=\"form-row-edit text-info\" onClick={onDelClick}>\r\n                    <i className={classNames('fa', icon, 'fa-fw')} />\r\n                </div>;\r\n            }\r\n            let editContainer = selectable===true || deletable===true?\r\n                (content:any) => <fieldset disabled={isDeleted}><div className={classNames('d-flex', {'deleted':isDeleted, 'row-selected':row.$isSelected})}>\r\n                    {selectCheck}<div className=\"flex-grow-1\">{content}</div>{deleteIcon}\r\n                </div></fieldset>\r\n                :\r\n                (content:any) => content;\r\n\r\n            return <ContextContainer.Provider key={rowKey} value={rowContext}>\r\n                {sep}\r\n                {RowContainer(editContainer(<><rowContext.renderErrors />{rowContent}</>))}\r\n            </ContextContainer.Provider>;\r\n        })}\r\n    </>);\r\n});\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport { Schema, ArrSchema, DataType, ButtonSchema, ItemSchema } from '../../schema';\r\nimport { UiItem, UiArr, UiType, UiButton, TempletType, TypeWidget, UiCustom } from '../../schema';\r\nimport { TextWidget } from './textWidget';\r\nimport { TextAreaWidget } from './textareaWidget';\r\nimport { PasswordWidget, UrlWidget, EmailWidget } from './passwordWidget';\r\nimport { UpdownWidget } from './updownWidget';\r\nimport { NumberWidget } from './numberWidget';\r\nimport { DateWidget, DateTimeWidget, TimeWidget, MonthWidget } from './dateWidget';\r\nimport { CheckBoxWidget } from './checkBoxWidget';\r\nimport { FieldProps } from '../field';\r\nimport { Context, RowContext, FormContext, ContextContainer } from '../context';\r\nimport { SelectWidget } from './selectWidget';\r\nimport { RadioWidget } from './radioWidget';\r\nimport { RangeWidget } from './rangeWidget';\r\nimport { IdWidget } from './idWidget';\r\nimport { ButtonWidget } from './buttonWidget';\r\nimport { ArrComponent } from './arrComponent';\r\n\r\nconst widgetsFactory: {[type: string]: {widget?: TypeWidget, dataTypes?: DataType[]}} = {\r\n    id: {\r\n        dataTypes: ['id'],\r\n        widget: IdWidget,\r\n    },\r\n    text: {\r\n        dataTypes: ['integer', 'number', 'string'],\r\n        widget: TextWidget\r\n    },\r\n    textarea: {\r\n        dataTypes: ['string'],\r\n        widget: TextAreaWidget\r\n    },\r\n    password: {\r\n        dataTypes: ['string'],\r\n        widget: PasswordWidget\r\n    },\r\n    date: {\r\n        dataTypes: ['date'],\r\n        widget: DateWidget\r\n    },\r\n    datetime: {\r\n        dataTypes: ['date'],\r\n        widget: DateTimeWidget\r\n    },\r\n    time: {\r\n        dataTypes: ['date'],\r\n        widget: TimeWidget\r\n    },\r\n    month: {\r\n        dataTypes: ['date'],\r\n        widget: MonthWidget\r\n    },\r\n    select: {\r\n        dataTypes: ['integer', 'number', 'string', 'date', 'boolean'],\r\n        widget: SelectWidget\r\n    },\r\n    url: {\r\n        dataTypes: ['string'],\r\n        widget: UrlWidget\r\n    },\r\n    email: {\r\n        dataTypes: ['string'],\r\n        widget: EmailWidget\r\n    },\r\n    number: {\r\n        dataTypes: ['integer', 'number'],\r\n        widget: NumberWidget\r\n    },\r\n    updown: {\r\n        dataTypes: ['integer', 'number'],\r\n        widget: UpdownWidget\r\n    },\r\n    color: {\r\n\r\n    },\r\n    checkbox: {\r\n        dataTypes: ['boolean', 'integer', 'number'],\r\n        widget: CheckBoxWidget\r\n    },\r\n    checkboxes: {\r\n\r\n    },\r\n    radio: {\r\n        dataTypes: ['integer', 'number', 'string', 'date', 'boolean'],\r\n        widget: RadioWidget\r\n    },\r\n    range: {\r\n        dataTypes: ['integer'],\r\n        widget: RangeWidget,\r\n    },\r\n    button: {\r\n        dataTypes: ['button', 'submit'],\r\n        widget: ButtonWidget,\r\n    }\r\n}\r\n\r\nexport function factory(context: Context, itemSchema: ItemSchema, children:React.ReactNode, fieldProps?: FieldProps):JSX.Element {\r\n    if (context === undefined) {\r\n        debugger;\r\n        return null;\r\n    }\r\n    if (itemSchema === undefined) return undefined;\r\n    let {name, type} = itemSchema;\r\n    switch (type) {\r\n    case 'arr':\r\n        let arrSchema = context.getItemSchema(name) as ArrSchema;\r\n        return <ArrComponent parentContext={context} arrSchema={arrSchema} children={children} />;\r\n    default:\r\n        break;\r\n    }\r\n\r\n    let typeWidget: TypeWidget;\r\n    let ui = context.getUiItem(name);\r\n    function getTypeWidget(t:DataType): TypeWidget {\r\n        switch(t) {\r\n        default: return TextWidget; \r\n        case 'id': return IdWidget;\r\n        case 'integer': return UpdownWidget;\r\n        case 'number': return NumberWidget; \r\n        case 'string': return TextWidget; \r\n        case 'date': return DateWidget; \r\n        case 'boolean': return CheckBoxWidget; \r\n        case 'button':\r\n        case 'submit': return ButtonWidget;\r\n        }\r\n    }\r\n    if (ui === undefined) { \r\n        typeWidget = getTypeWidget(type);\r\n    }\r\n    else {\r\n        let {widget:widgetType} = ui;\r\n        switch (widgetType) {\r\n        default:\r\n            if (widgetType !== undefined) {\r\n                let widgetFactory = widgetsFactory[widgetType];\r\n                typeWidget = widgetFactory.widget;\r\n            }\r\n            if (typeWidget === undefined) typeWidget = getTypeWidget(type);\r\n            break;\r\n        case 'custom':\r\n            typeWidget = (ui as UiCustom).WidgetClass;\r\n            break;\r\n        case 'group':\r\n            return <span>impletment group</span>;\r\n        }\r\n        //label = uiLabel || name;\r\n    }\r\n    \r\n    let {isRow, widgets} = context;\r\n    let widget = new typeWidget(context, itemSchema, fieldProps, children);\r\n    widgets[name] = widget;\r\n\r\n    if (isRow === false) {\r\n        let WidgetElement = observer(() => widget.renderContainer());\r\n        return <WidgetElement />;\r\n    }\r\n    else {\r\n        let widgetElement = widget.renderContainer();\r\n        return widgetElement;\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { Widget } from './widget';\r\nimport { UiTextAreaItem } from '../../schema';\r\nimport { StringSchema } from '../../schema';\r\n\r\nexport class TextAreaWidget extends Widget {\r\n    protected itemSchema: StringSchema;\r\n    protected input: HTMLTextAreaElement;\r\n    protected ui: UiTextAreaItem;\r\n\r\n    protected setElementValue(value:any) {this.input.value = value}\r\n    protected onInputChange = (evt: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        this.setValue(evt.currentTarget.value);\r\n    }\r\n\r\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\r\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\r\n\r\n    render() {\r\n        return <textarea ref={(input) => this.input=input} \r\n            rows={this.ui && this.ui.rows}\r\n            maxLength={this.itemSchema.maxLength}\r\n            defaultValue={this.defaultValue} onChange={this.onInputChange} />\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { TextWidget } from './textWidget';\r\n\r\nexport class PasswordWidget extends TextWidget {\r\n    protected inputType = 'password';\r\n}\r\n\r\nexport class UrlWidget extends TextWidget {\r\n    protected inputType = 'url';\r\n}\r\n\r\nexport class EmailWidget extends TextWidget {\r\n    protected inputType = 'email';\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { TextWidget } from './textWidget';\r\nimport { Widget } from './widget';\r\nimport { UiRadio } from '../../schema';\r\nimport { RowContext } from '../context';\r\n\r\n\r\n//const radioStyle:React.CSSProperties = {width:'2em', height:'1.2em'};\r\nexport class RadioWidget extends Widget {\r\n    protected inputs: {[index:number]: HTMLInputElement} = {};\r\n    protected ui: UiRadio;\r\n\r\n    protected setElementValue(value:any) {\r\n        for (let i in this.inputs) {\r\n            let input = this.inputs[i];\r\n            input.checked = value === input.value;\r\n        }\r\n    }\r\n    setReadOnly(value:boolean) {\r\n        this.readOnly = value;\r\n        for (let i in this.inputs) this.inputs[i].readOnly = value;\r\n    }\r\n    setDisabled(value:boolean) {\r\n        this.disabled = value;\r\n        for (let i in this.inputs) this.inputs[i].disabled = value\r\n    }\r\n\r\n    render() {\r\n        let {defaultValue, list} = this.ui;\r\n        let {isRow, inNode} = this.context;\r\n        let rowKey:number;\r\n        if (isRow === true) {\r\n            rowKey = (this.context as RowContext).rowKey;\r\n        }\r\n        let cn = classNames(this.className, 'form-radio-inline');\r\n        return <span className={cn}>\r\n                {list.map((v,index) => {\r\n                    let {value, title} = v;\r\n                    let name = this.name;\r\n                    if (rowKey !== undefined) name += '-' + rowKey;\r\n                    return <label key={index} className=\"form-radio-inline\">\r\n                        <input ref={input=>this.inputs[index]=input} type=\"radio\" name={name}\r\n                            value={value} defaultChecked={(this.defaultValue || defaultValue)===value} />\r\n                        {title || value}\r\n                    </label>;\r\n                    //</span>\r\n                })}\r\n            </span>;\r\n    }\r\n}\r\n/*\r\n<div className=\"form-control d-flex border-0\"><input\r\nref={(input)=>this.input = input}\r\nclassName={classNames(this.className, 'align-self-center')}\r\ntype=\"checkbox\"\r\nstyle={{maxHeight:\"1.2em\"}}\r\ndefaultValue={this.defaultValue} \r\nonChange={this.onChange} />\r\n</div>\r\n*/","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { UiRange } from '../../schema';\r\nimport { Widget } from './widget';\r\n\r\nexport class RangeWidget extends Widget {\r\n    protected inputType = 'range';\r\n    protected input: HTMLInputElement;\r\n    protected ui: UiRange;\r\n\r\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\r\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\r\n\r\n    render() {\r\n        let {min, max, step} = this.ui;\r\n        return <><input ref={input=>this.input = input}\r\n            className={classNames(this.className, 'form-control', 'w-min-6c')}\r\n            type={this.inputType}\r\n            defaultValue={this.defaultValue} \r\n            onChange={this.onInputChange}\r\n            max={max}\r\n            min={min}\r\n            step={step}\r\n            />\r\n        </>;\r\n    }\r\n}\r\n","export { factory } from './factory';\r\nexport { Widget } from './widget';\r\nexport { TextWidget } from './textWidget';\r\nexport { TextAreaWidget } from './textareaWidget';\r\nexport { PasswordWidget, UrlWidget, EmailWidget } from './passwordWidget';\r\nexport { UpdownWidget } from './updownWidget';\r\nexport { NumberWidget } from './numberWidget';\r\nexport { DateWidget, DateTimeWidget, TimeWidget, MonthWidget } from './dateWidget';\r\nexport { CheckBoxWidget } from './checkBoxWidget';\r\nexport { Context, RowContext, FormContext, ContextContainer } from '../context';\r\nexport { SelectWidget } from './selectWidget';\r\nexport { RadioWidget } from './radioWidget';\r\nexport { RangeWidget } from './rangeWidget';\r\nexport { IdWidget } from './idWidget';\r\nexport { ButtonWidget } from './buttonWidget';\r\nexport { Unknown } from './unknown';\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Page } from 'tonva-tools';\r\nimport { List, Muted, LMR } from 'tonva-react-form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../entities';\r\nimport { CSheet, SheetUI } from './cSheet';\r\n\r\nexport class VSheetMain extends VEntity<Sheet, SheetUI, CSheet> {\r\n    async open() {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    newClick = () => this.event('new');\r\n    schemaClick = () => this.event('schema'); \r\n    archivesClick = () => this.event('archives');\r\n    sheetStateClick = (state) => this.event('state', state);\r\n\r\n    renderState = (item:any, index:number) => {\r\n        let {state, count} = item;\r\n        if (count === 0) return null;\r\n        let badge = <span className=\"badge badge-success ml-5 align-self-end\">{count}</span>;\r\n        return <LMR className=\"px-3 py-2\" left={this.controller.getStateLabel(state)} right={badge} />;\r\n    }\r\n\r\n    protected view = observer(() => {\r\n        let list = this.controller.statesCount.filter(row=>row.count);\r\n        let right = <button className=\"btn btn-outline-primary\" onClick={this.archivesClick}>已归档</button>;\r\n        let templet:any;\r\n        if (this.isDev === true) {\r\n            templet = <button className=\"btn btn-primary mr-2\" color=\"primary\" onClick={this.schemaClick}>模板</button>;\r\n        }\r\n        return <Page header={this.label}>\r\n            <LMR\r\n                className=\"mx-3 my-2\"\r\n                right={right}>\r\n                <button className=\"btn btn-primary mr-2\" color=\"primary\" onClick={this.newClick}>新建</button>\r\n                {templet}\r\n            </LMR>\r\n            <List className=\"my-2\"\r\n                header={<Muted className=\"mx-3 my-1\">待处理{this.label}</Muted>}\r\n                none=\"[ 无 ]\"\r\n                items={list}\r\n                item={{render:this.renderState, onClick:this.sheetStateClick}} />\r\n        </Page>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport { FA } from 'tonva-react-form';\r\nimport { Sheet } from '../../entities';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { SheetUI, CSheet } from './cSheet';\r\n\r\nexport class VSheetNew extends VEntity<Sheet, SheetUI, CSheet> {\r\n    vForm: VForm;\r\n\r\n    async open(param?:any) {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    private onSubmit = async ():Promise<void> => {\r\n        let values = this.vForm.getValues();\r\n        let valuesWithBox = this.vForm.values;\r\n        //let ret = \r\n        await this.controller.onSave(values, valuesWithBox);\r\n        /*\r\n        this.ceasePage();\r\n        //this.openPage(this.finishedPage);\r\n        await this.controller.showSaved(ret);\r\n        */\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render()}\r\n    </Page>;\r\n}\r\n","import * as React from 'react';\r\nimport {List, Muted, LMR, EasyDate, FA} from 'tonva-react-form';\r\nimport { Sheet } from '../../entities';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CSheet, SheetUI, SheetData } from './cSheet';\r\n\r\nconst leftFlowStyle = {width: '8rem'};\r\n\r\nexport abstract class VSheetView extends VEntity<Sheet, SheetUI, CSheet> {\r\n    protected vForm: VForm;\r\n    protected sheetData: SheetData;\r\n    //data: any;\r\n    //state: string;\r\n    //flows:any[];\r\n\r\n    flowRow = (item:any, index:number):JSX.Element => {\r\n        let {date, user, preState, state, action} = item;\r\n        if (action === undefined) action = <><FA className=\"text-primary\" name=\"pencil-square-o\" /> 制单</>;\r\n        let to;\r\n        switch (state) {\r\n            case '$': break;\r\n            case '#': to = <><FA className=\"text-success\" name=\"file-archive-o\" /></>; break;\r\n            default: to = <><FA className=\"text-muted\" name=\"arrow-right\" /> &nbsp; {state}</>; break;\r\n        }\r\n        /*\r\n        return <div className=\"row\">\r\n            <div className=\"col-sm\"></div>\r\n            <div className=\"col-sm\"><div className=\"p-2\">{to}</div></div>\r\n            <div className=\"col-sm text-right\"><div className=\"p-2\"><Muted><EasyDate date={date} /></Muted></div></div>\r\n        </div>;\r\n        */\r\n        return <LMR \r\n            left={<div className=\"pl-3 py-2\" style={leftFlowStyle}>{action}</div>}\r\n            right={<div className=\"p-2\"><Muted><EasyDate date={date} /></Muted></div>}>\r\n            <div className=\"p-2\">{to}</div>\r\n        </LMR>;\r\n    }\r\n\r\n    protected sheetView = () => {\r\n        let {brief, flows} = this.sheetData;\r\n        let removed;\r\n        if (brief.state === '-')\r\n            removed = <div className=\"mx-3 my-2\" style={{color:'red'}}>本单据作废</div>;\r\n        return <div>\r\n            {removed}\r\n            {this.vForm.render()}\r\n    \r\n            <List header={<Muted className=\"mx-3 my-1\">流程</Muted>}\r\n                items={flows}\r\n                item={{render:this.flowRow}}/>\r\n        </div>;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport { VForm, FormMode } from '../form';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\n\r\nexport class VSheetEdit extends VSheetView { //VEntity<Sheet, SheetUI, CSheet> {\r\n    protected sheetData: SheetData;\r\n    async open(param: SheetData) {\r\n        this.sheetData = param;\r\n        this.vForm = this.createForm(this.onSubmit, param.data, FormMode.edit);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSubmit = async ():Promise<void> => {\r\n        let values = this.vForm.getValues();\r\n        await this.controller.saveSheet(values, this.vForm.values);\r\n        this.closePage();\r\n        this.returnCall(this.vForm.values);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render()}\r\n    </Page>;\r\n}\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport { nav, Page } from 'tonva-tools';\r\nimport { FA } from 'tonva-react-form';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\n\r\nexport class VSheetAction extends VSheetView { \r\n    async open(sheetData:SheetData) {\r\n        this.sheetData = sheetData;\r\n        //let {brief, data, flows} = await this.controller.getSheetData(sheetId);\r\n        //this.brief = brief;\r\n        //this.flows = flows;\r\n        //this.data = data;\r\n        //this.state = this.brief.state;\r\n        this.vForm = this.createForm(undefined, sheetData.data);\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    actionClick = async (action:any) => {\r\n        let {id, flow, state} = this.sheetData.brief;\r\n        let res = await this.controller.action(id, flow, state, action.name);\r\n        this.ceasePage();\r\n        this.openPage(this.acted);\r\n        //alert(jsonStringify(res));\r\n        //await this.backPage();\r\n    }\r\n\r\n    deleteClick = async () => {\r\n        alert('单据作废：程序正在设计中');\r\n    }\r\n\r\n    editClick = async () => {\r\n        //alert('修改单据：程序正在设计中');\r\n        let values = await this.controller.editSheet(this.sheetData);\r\n        this.vForm.setValues(values);\r\n    }\r\n\r\n    protected page = () => {\r\n        let {brief} = this.sheetData;\r\n        let {state, no} = brief;\r\n        let stateLabel = this.controller.getStateLabel(state);\r\n        let {states} = this.entity;\r\n        let s = states.find(v => v.name === state);\r\n        let actionButtons, startButtons;\r\n        if (s === undefined) {\r\n            let text:string, cn:string;\r\n            switch (state) {\r\n                default:\r\n                    text = '不认识的单据状态\\'' + state + '\\'';\r\n                    cn = 'text-info';\r\n                    break;\r\n                case '-': \r\n                    text = '已作废';\r\n                    cn = 'text-danger';\r\n                    break;\r\n                case '#':\r\n                    text = '已归档';\r\n                    cn = 'text-success';\r\n                    break;\r\n            }\r\n            actionButtons = <div className={classNames(cn)}>[{text}]</div>;\r\n        }\r\n        else {\r\n            actionButtons = <div className=\"flex-grow-1\">{s.actions.map((v,index) => \r\n                <button\r\n                    key={index}\r\n                    className=\"btn btn-primary mr-2\"\r\n                    onClick={()=>this.actionClick(v)}\r\n                >\r\n                    {this.controller.getActionLabel(state, v.name)}\r\n                </button>)}\r\n            </div>;\r\n            if (state === '$') {\r\n                startButtons = <div>\r\n                    <button className=\"btn btn-outline-info ml-2\" onClick={this.editClick}>修改</button>\r\n                    <button className=\"btn btn-outline-danger ml-2\" onClick={this.deleteClick}>作废</button>\r\n                </div>\r\n            }\r\n        };\r\n        return <Page header={this.label + ':' + stateLabel + '-' + no}>\r\n            <div className=\"mb-2\">\r\n                <div className=\"d-flex px-3 py-2 border-bottom bg-light\">\r\n                    {actionButtons}\r\n                    {startButtons}\r\n                </div>\r\n                <this.sheetView />\r\n            </div>\r\n        </Page>;\r\n    }\r\n\r\n    private acted = () => {\r\n        let {discription} = this.sheetData.brief;\r\n        return <Page header=\"已处理\" back=\"close\">\r\n            <div className=\"p-3 d-flex flex-column align-items-center\">\r\n                <div className=\"p-3\">{discription}</div>\r\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已处理！</div>\r\n                <div className=\"p-3\">\r\n                    <button className=\"btn btn-outline-info\" onClick={()=>this.backPage()}>返回</button>\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../entities';\r\nimport { SheetUI, CSheet } from './cSheet';\r\n\r\nexport class VSheetSchema extends VEntity<Sheet, SheetUI, CSheet> {\r\n    async open(param?:any) {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label + \"模板\"}>\r\n        <pre className=\"mx-3 my-2\">{this.entity.schemaStringify()}</pre>\r\n    </Page>;\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport {List, LMR, FA, EasyDate, Muted} from 'tonva-react-form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../entities';\r\nimport { SheetUI, CSheet } from './cSheet';\r\n\r\nexport class VArchives extends VEntity<Sheet, SheetUI, CSheet> {\r\n    list: any[];\r\n\r\n    async open() {\r\n        this.list = await this.entity.getArchives(undefined, 10);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    archiveClick = async (brief:any) => {\r\n        if (brief.processing===1) return;\r\n        this.event('archived', brief);\r\n    }\r\n    archiveRow = (row:any, index:number) => {\r\n        let {id, no, discription, date} = row;\r\n        let left = <>\r\n            {row.processing===1? '... ' : ''}\r\n            {row.no} &nbsp; {row.discription}\r\n        </>;\r\n        let right = <Muted><EasyDate date={date} /></Muted>;\r\n        return <LMR className=\"px-3 py-2\" left={left} right={right} />\r\n    }\r\n\r\n    protected view = () => {\r\n        return <Page header={'已归档' + this.label}>\r\n            <List items={this.list} item={{render:this.archiveRow, onClick:this.archiveClick}} />\r\n        </Page>;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { Page, nav } from 'tonva-tools';\r\nimport { List, Muted, FA, LMR, EasyDate } from 'tonva-react-form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../entities';\r\nimport { CSheet, SheetUI } from './cSheet';\r\n\r\nexport class VSheetList extends VEntity<Sheet, SheetUI, CSheet> {\r\n    protected row: (values) => JSX.Element;\r\n    stateName: string;\r\n    stateLabel: string;\r\n\r\n    async open(item:any) {\r\n        this.row = this.ui.listRow || this.rowContent;\r\n        this.stateName = item.state;\r\n        this.stateLabel = this.controller.getStateLabel(this.stateName);\r\n        //await this.controller.getStateSheets(this.stateName, 0, 10);\r\n        await this.controller.pageStateItems.first(this.stateName);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    rowClick = async (brief:any) => {\r\n        if (brief.processing===1) {\r\n            this.event('processing', brief.id);\r\n            return;\r\n        }\r\n        this.event('action', brief.id);\r\n    }\r\n\r\n    private onScrollBottom = () => {\r\n        console.log('onScrollBottom');\r\n        this.controller.pageStateItems.more();\r\n    }\r\n\r\n    protected rowContent = (row:any):JSX.Element => {\r\n        let {id, no, discription, date, processing} = row;\r\n        let left = <>            \r\n            {no} &nbsp; <Muted>{discription}</Muted> {processing===1? '...' : ''}\r\n        </>;\r\n        let right = <Muted><EasyDate date={date} /></Muted>;\r\n        return <LMR className=\"px-3 py-2\" left={left} right={right} />;\r\n    }\r\n\r\n    private renderRow = (row:any, index:number) => <this.row {...row} />\r\n\r\n    protected view = () => {\r\n        //let sheets = this.controller.stateSheets;\r\n        let {pageStateItems} = this.controller;\r\n        return <Page header={this.label + ' - ' + this.stateLabel} onScrollBottom={this.onScrollBottom}>\r\n            <List items={pageStateItems} item={{render:this.renderRow, onClick:this.rowClick}} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {Page} from 'tonva-tools';\r\nimport { VSheetView } from './vSheetView';\r\nimport { CSheet, SheetUI, SheetData } from './cSheet';\r\n\r\nexport interface State {\r\n    flows: any;\r\n    data: any;\r\n}\r\nexport class VArchived extends VSheetView {\r\n    //protected controller: CSheet;\r\n    //brief: any;\r\n\r\n    async open(sheetData:SheetData) {\r\n        this.sheetData = sheetData;\r\n        /*\r\n        let {brief, data, flows} = await this.controller.getArchived(inBrief.id);\r\n        this.brief = brief;\r\n        this.data = data;\r\n        this.flows = flows;\r\n        */\r\n        this.vForm = this.createForm(undefined, this.sheetData.data);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => {\r\n        let {brief} = this.sheetData;\r\n        return <Page header={this.label + ':' + '-' + brief.no}>\r\n            <this.sheetView />\r\n        </Page>;\r\n    };\r\n}\r\n","import { Sheet } from \"../../entities\";\r\nimport { SheetUI, CSheet } from \"./cSheet\";\r\nimport { VEntity } from \"../CVEntity\";\r\n\r\nexport abstract class VSheet extends VEntity<Sheet, SheetUI, CSheet> {\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport { FA } from 'tonva-react-form';\r\nimport { VSheet } from \"./vSheet\";\r\n\r\nexport class VSheetSaved extends VSheet {\r\n    private brief: any;\r\n    async open(brief?:any) {\r\n        this.brief = brief;\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    private restart = async () => {\r\n        this.ceasePage();\r\n        await this.event('new');\r\n    }\r\n\r\n    actionClick = async (action:any) => {\r\n        this.ceasePage();\r\n        let {id, flow, state} = this.brief;\r\n        let res = await this.controller.action(id, flow, state, action.name);\r\n        this.openPage(this.acted);\r\n    }\r\n\r\n    private buttons = <>\r\n        <button className=\"btn btn-outline-primary mr-3\" onClick={this.restart}>继续开单</button>\r\n        <button className=\"btn btn-outline-info\" onClick={()=>this.backPage()}>返回</button>\r\n    </>;\r\n\r\n    private view = () => {\r\n        let {states} = this.entity;\r\n        const state = '$';\r\n        let s = states.find(v => v.name === state);\r\n        let actionButtons = <>{s.actions.map((v,index) => \r\n            <button\r\n                key={index}\r\n                className=\"btn btn-primary mr-3\"\r\n                onClick={()=>this.actionClick(v)}\r\n            >\r\n                {this.controller.getActionLabel(state, v.name)}\r\n            </button>)}\r\n        </>;\r\n        return <Page header=\"已保存\" back=\"close\">\r\n            <div className=\"p-3 d-flex flex-column align-items-center\">\r\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已保存！系统尚未处理</div>\r\n                <div className=\"p-3\">\r\n                    {actionButtons}\r\n                    {this.buttons}\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    }\r\n\r\n    private acted = () => {\r\n        return <Page>\r\n            <div className=\"p-3 d-flex flex-column align-items-center\">\r\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已处理！</div>\r\n                <div className=\"p-3\">\r\n                    {this.buttons}\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { nav, Page } from 'tonva-tools';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\n\r\nexport class VSheetProcessing extends VSheetView { \r\n    async open(sheetData:SheetData) {\r\n        this.sheetData = sheetData;\r\n        //let {brief, data, flows} = await this.controller.getSheetData(sheetId);\r\n        //this.brief = brief;\r\n        //this.flows = flows;\r\n        //this.data = data;\r\n        //this.state = this.brief.state;\r\n        this.vForm = this.createForm(undefined, sheetData.data);\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    protected page = () => {\r\n        let {brief} = this.sheetData;\r\n        let {state, no} = brief;\r\n        let stateLabel = this.controller.getStateLabel(state);\r\n        return <Page header={this.label + ':' + stateLabel + '-' + no}>\r\n            <div className=\"mb-2\">\r\n                <div className=\"d-flex px-3 py-2 border-bottom bg-light\">\r\n                    正在处理中...\r\n                </div>\r\n                <this.sheetView />\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n","import { IObservableArray, observable } from \"mobx\";\r\nimport { TypeVPage, VPage, PageItems, postWsToTop } from 'tonva-tools';\r\nimport { Sheet, StateCount } from \"../../entities\";\r\nimport { CEntity, EntityUI, VEntity } from \"../CVEntity\";\r\nimport { VSheetMain } from \"./vMain\";\r\nimport { VSheetNew } from \"./vNew\";\r\nimport { VSheetEdit } from \"./vEdit\";\r\nimport { VSheetAction } from \"./vSheetAction\";\r\nimport { VSheetSchema } from \"./vSchema\";\r\nimport { VArchives } from \"./vArchives\";\r\nimport { VSheetList } from \"./vList\";\r\nimport { VArchived } from \"./vArchived\";\r\nimport { VSheetSaved } from \"./vSaved\";\r\nimport { VSheetProcessing } from \"./vSheetProcessing\";\r\n\r\nexport interface SheetActionUI {\r\n    label: string;\r\n}\r\n\r\nexport interface StateUI {\r\n    label: string;\r\n    actions: {[name:string]: SheetActionUI}\r\n}\r\n\r\nexport interface SheetUI extends EntityUI {\r\n    CSheet?: typeof CSheet;\r\n    states?: {[name:string]: StateUI};\r\n    main?: TypeVPage<CSheet>;\r\n    sheetNew?: TypeVPage<CSheet>;\r\n    sheetSaved?: TypeVPage<CSheet>;\r\n    sheetEdit?: TypeVPage<CSheet>;\r\n    sheetAction?: TypeVPage<CSheet>;\r\n    listRow?: (row:any) => JSX.Element;\r\n    sheetTitle?: (sheetValues:any, x:any) => string;      // 返回单据的描述\r\n}\r\n\r\nexport interface SheetData {\r\n    brief: any;\r\n    data: any;\r\n    flows: any[];\r\n}\r\n\r\nexport class CSheet extends CEntity<Sheet, SheetUI> {\r\n    statesCount:IObservableArray<StateCount> = observable.array<StateCount>([], {deep:true});\r\n    curState:string;\r\n    pageStateItems: PageItems<any>;\r\n\r\n    protected async internalStart() {\r\n        await this.loadStateSheetCount();\r\n        this.pageStateItems = this.entity.createPageStateItems();\r\n        await this.openVPage(this.VSheetMain);\r\n    }\r\n\r\n    protected async onMessage(msg: any):Promise<void> {\r\n        let {type, body, from, to, push} = msg;\r\n        if (type === 'sheet') this.onSheet(from, to, body);\r\n    }\r\n    private onSheet(from:number, to:number[], sheetData:any) {\r\n        let me = this.user.id;\r\n        let {id, preState, state} = sheetData;\r\n        console.log({$:'onMessage sheet', from:from, to:to.join(','), id:id, preState:preState, state:state, me:me, sheetData:sheetData})\r\n        if (from === me) {\r\n            this.sheetActPreState(id, preState);\r\n        }\r\n        if (to.find(v=>v===me) !== undefined) {\r\n            this.sheetActState(id, state, sheetData);\r\n        }\r\n    }\r\n    private sheetActPreState(id:number, preState:string) {\r\n        this.changeStateCount(preState, -1);\r\n        if (this.curState === undefined || this.curState !== preState) return;\r\n        /*\r\n        let index = this.stateSheets.findIndex(v => v.id === id);\r\n        if (index>=0) {\r\n            this.stateSheets.splice(index, 1);\r\n        }*/\r\n        let index = this.pageStateItems.items.findIndex(v => v.id === id);\r\n        if (index>=0) {\r\n            this.pageStateItems.items.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    private sheetActState(id:number, state:string, msg:any) {\r\n        this.changeStateCount(state, 1);\r\n        if (this.curState === undefined || this.curState !== state) return;\r\n        /*\r\n        if (this.stateSheets.findIndex(v => v.id === id) < 0) {\r\n            this.stateSheets.push(msg);\r\n        }\r\n        */\r\n        if (this.pageStateItems.items.findIndex(v => v.id === id) < 0) {\r\n            this.pageStateItems.items.push(msg);\r\n        }\r\n    }\r\n\r\n    private changeStateCount(state:string, delta:number) {\r\n        if (state === undefined) return;\r\n        let index = this.statesCount.findIndex(v => v.state === state);\r\n        console.log({$:'changeState', state: state, delta: delta, index: index});\r\n        if (index < 0) return;\r\n        let stateCount = this.statesCount[index];\r\n        stateCount.count += delta;\r\n        if (stateCount.count < 0) stateCount.count = 0;\r\n    }\r\n\r\n    protected get VSheetMain():TypeVPage<CSheet> {return (this.ui&&this.ui.main) || VSheetMain}\r\n    protected get VSheetNew(): TypeVPage<CSheet> {return this.ui.sheetNew || VSheetNew}\r\n    protected get VSheetSaved(): TypeVPage<CSheet> {return this.ui.sheetSaved || VSheetSaved}\r\n    protected get VSheetEdit(): TypeVPage<CSheet> {return this.ui.sheetEdit || VSheetEdit}\r\n    protected get VSheetSchema(): TypeVPage<CSheet> {return VSheetSchema}\r\n    protected get VArchives(): TypeVPage<CSheet> {return VArchives}\r\n    protected get VArchived(): TypeVPage<CSheet> {return VArchived}\r\n    protected get VSheetList(): TypeVPage<CSheet> {return VSheetList}\r\n    protected get VSheetAction(): TypeVPage<CSheet> {return this.ui.sheetAction || VSheetAction}\r\n    protected get VSheetProcessing(): TypeVPage<CSheet> {return VSheetProcessing}\r\n    protected async onEvent(type:string, value:any) {\r\n        let c: TypeVPage<CSheet>;\r\n        switch (type) {\r\n            default: return;\r\n            case 'new': c = this.VSheetNew; break;\r\n            case 'schema': c = this.VSheetSchema; break;\r\n            case 'archives': c = this.VArchives; break;\r\n            case 'state':\r\n                this.curState = value.state;\r\n                c = this.VSheetList;\r\n                break;\r\n            case 'archived':\r\n                await this.showArchived(value); return;\r\n            case 'action':\r\n                await this.showAction(value); return;\r\n            case 'processing':\r\n                await this.showProcessing(value); return;\r\n        }\r\n        await this.openVPage(c, value);\r\n    }\r\n\r\n    async startSheet(sheetId:number) {\r\n        if (await this.beforeStart() === false) return;\r\n        await this.onEvent('action', sheetId);\r\n    }\r\n\r\n    async showAction(sheetId:number) {\r\n        let sheetData:SheetData = await this.getSheetData(sheetId);\r\n        postWsToTop({\r\n            body: {\r\n                $type: 'msg',\r\n                action: '$sheet',\r\n                msg: {\r\n                    id: sheetId,\r\n                    uq: this.cUq.id,\r\n                    state: sheetData.brief.state\r\n                }\r\n            }\r\n        });\r\n        await this.openVPage(this.VSheetAction, sheetData);\r\n    }\r\n\r\n    async showProcessing(sheetId:number) {\r\n        let sheetData:SheetData = await this.getSheetData(sheetId);\r\n        await this.openVPage(this.VSheetProcessing, sheetData);\r\n    }\r\n\r\n    async editSheet(sheetData:SheetData):Promise<any> {\r\n        //alert('修改单据：程序正在设计中');\r\n        let values = await this.vCall(this.VSheetEdit, sheetData);\r\n        return values;\r\n    }\r\n\r\n    async showArchived(inBrief:any) {\r\n        let sheetData = await this.getArchived(inBrief.id);\r\n        await this.openVPage(this.VArchived, sheetData);\r\n    }\r\n\r\n    onSave = async (values:any, valuesWithBox:any):Promise<void> => {\r\n        //let values = this.vForm.getValues();\r\n        //let ret = await this.controller.saveSheet(values, this.vForm.values);\r\n        let ret = await this.saveSheet(values, valuesWithBox);\r\n        this.ceasePage();\r\n        //this.openPage(this.finishedPage);\r\n        await this.showSaved(ret);\r\n    }\r\n\r\n    async showSaved(sheetData:any) {\r\n        await this.openVPage(this.VSheetSaved, sheetData);\r\n    }\r\n\r\n    private getStateUI(stateName:string) {\r\n        let {states} = this.res;\r\n        if (states === undefined) return;\r\n        return states[stateName];\r\n    }\r\n    getStateLabel(stateName:string) {\r\n        let state = this.getStateUI(stateName);\r\n        let ret = (state && state.label) || stateName;\r\n        switch (ret) {\r\n            default: return ret;\r\n            case '$': return '新单';\r\n        }\r\n    }\r\n    getActionLabel(stateName:string, actionName:string) {\r\n        let state = this.getStateUI(stateName);\r\n        if (state === undefined) return actionName;\r\n        let actions = state.actions;\r\n        if (actions === undefined) return actionName;\r\n        let action = actions[actionName];\r\n        return (action && action.label) || actionName;\r\n    }\r\n\r\n    private async loadStateSheetCount():Promise<void> {\r\n        this.statesCount.clear();\r\n        let statesCount = await this.entity.stateSheetCount();\r\n        this.statesCount.splice(0, 0, ...statesCount);\r\n    }\r\n\r\n    async getSheetData(sheetId:number):Promise<SheetData> {\r\n        return await this.entity.getSheet(sheetId);\r\n    }\r\n\r\n    async getArchived(sheetId:number):Promise<SheetData> {\r\n        return await this.entity.getArchive(sheetId);\r\n    }\r\n\r\n    async saveSheet(values:any, valuesWithBox:any):Promise<any> {\r\n        let {sheetTitle} = this.ui;\r\n        let disc = sheetTitle === undefined? this.label : sheetTitle(valuesWithBox, this.x);\r\n        let ret = await this.entity.save(disc, values);\r\n        //let {id, state} = ret;\r\n        //if (id > 0) this.changeStateCount(state, 1);\r\n        return ret;\r\n    }\r\n\r\n    async action(id:number, flow:number, state:string, actionName:string):Promise<any> {\r\n        return await this.entity.action(id, flow, state, actionName);\r\n    }\r\n}\r\n","export * from './cSheet';\r\nexport * from './vSheet';\r\nexport * from './vMain';\r\nexport * from './vNew';\r\nexport * from './vEdit';\r\nexport * from './vList';\r\nexport * from './vSheetAction';\r\nexport * from './vSchema';\r\nexport * from './vArchived';\r\nexport * from './vSheetView';\r\n","import * as React from 'react';\r\nimport { TuidMain, Book, Entity } from '../../entities';\r\nimport { Page } from 'tonva-tools';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CBook, BookUI } from './cBook';\r\n\r\nexport class VBookMain extends VEntity<Book, BookUI, CBook> {\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        Book\r\n    </Page>;\r\n}\r\n","import { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Book } from \"../../entities\";\r\nimport { VBookMain } from \"./vBookMain\";\r\n\r\nexport interface BookUI extends EntityUI {\r\n    CBook?: typeof CBook;\r\n    main: typeof VBookMain,\r\n}\r\n\r\nexport class CBook extends CEntity<Book, BookUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VBookMain);\r\n    }\r\n\r\n    protected get VBookMain():typeof VBookMain {return VBookMain}\r\n}\r\n","import React from \"react\";\r\nimport { View } from \"tonva-tools\";\r\nimport { List, Muted } from \"tonva-react-form\";\r\nimport { Entity } from \"../../entities\";\r\nimport { CLink } from \"../link\";\r\nimport { CUq } from \"./cUq\";\r\n\r\nexport class VUq extends View<CUq> {\r\n    protected isSysVisible = false;\r\n    protected tuidLinks: CLink[];\r\n    protected mapLinks: CLink[];\r\n    protected sheetLinks: CLink[];\r\n    protected actionLinks: CLink[];\r\n    protected queryLinks: CLink[];\r\n    protected bookLinks: CLink[];\r\n    protected historyLinks: CLink[];\r\n    protected pendingLinks: CLink[];\r\n\r\n    constructor(cUq: CUq) {\r\n        super(cUq);\r\n        let {tuidArr, mapArr, sheetArr, actionArr, queryArr, bookArr, historyArr, pendingArr} = cUq.entities;\r\n        this.tuidLinks = tuidArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cTuidMain(v)));\r\n        this.mapLinks = mapArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cMap(v)));\r\n        this.sheetLinks = sheetArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cSheet(v)));\r\n        this.actionLinks = actionArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cAction(v)));\r\n        this.queryLinks = queryArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cQuery(v)));\r\n        this.bookLinks = bookArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cBook(v)));\r\n        this.historyLinks = historyArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cHistory(v)));\r\n        this.pendingLinks = pendingArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cPending(v)));\r\n    }\r\n    protected isVisible(entity: Entity):boolean {\r\n        return entity.sys !== true || this.isSysVisible;\r\n    }\r\n    render(param?:any) {\r\n        if (this.view === undefined) return <div>??? viewModel 必须定义 view ???</div>\r\n        return React.createElement(this.view);\r\n    }\r\n\r\n    protected view = () => {\r\n        let {res, uq, error} = this.controller;\r\n        let linkItem = {\r\n            render: (cLink:CLink, index:number):JSX.Element => cLink.render(), \r\n            onClick: undefined, \r\n        };\r\n        let lists = [\r\n            {\r\n                header: res.tuid || 'TUID',\r\n                items: this.tuidLinks,\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.map || 'MAP',\r\n                items: this.mapLinks,\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.sheet || 'SHEET',\r\n                items: this.sheetLinks\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.action || 'ACTION',\r\n                items: this.actionLinks\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.query || 'QUERY',\r\n                items: this.queryLinks\r\n            },\r\n            {\r\n                cn: 'mt-2 mb-4',\r\n                header: res.book || 'BOOK',\r\n                items: this.bookLinks\r\n            },\r\n            {\r\n                cn: 'mt-2 mb-4',\r\n                header: res.history || 'HISTORY',\r\n                items: this.historyLinks\r\n            },\r\n            {\r\n                cn: 'mt-2 mb-4',\r\n                header: res.pending || 'PENDING',\r\n                items: this.pendingLinks\r\n            }\r\n        ];\r\n        let content;\r\n        if (error !== undefined) {\r\n            content = <div className=\"p-3 text-danger\">连接错误: {error}</div>;\r\n        }\r\n        else {\r\n            content = lists.map(({cn, header, items},index) => items.length > 0 && <List\r\n                key={index}\r\n                className={cn}\r\n                header={<div className=\"px-3 py-1 bg-light\"><Muted>{header}</Muted></div>}\r\n                items={items}\r\n                item={linkItem} />\r\n            );\r\n        }\r\n        return <>\r\n            <div className=\"px-3 py-1 small\">{res.uq || uq}</div>\r\n            {content}\r\n        </>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { UqApi, Controller, UnitxApi, meInFrame, resLang, nav } from 'tonva-tools';\r\nimport { Entities, TuidMain, Action, Sheet, Query, Book, Map, Entity, Tuid, History, Pending } from '../../entities';\r\nimport { CLink } from '../link';\r\nimport { CBook, BookUI } from '../book';\r\nimport { CSheet, SheetUI } from '../sheet';\r\nimport { ActionUI, CAction } from '../action';\r\nimport { QueryUI, CQuery, CQuerySelect } from '../query';\r\nimport { CTuidMain, TuidUI, CTuid, CTuidInfo, CTuidSelect, CTuidEdit, CTuidList } from '../tuid';\r\nimport { MapUI, CMap } from '../map';\r\nimport { CEntity, EntityUI } from '../CVEntity';\r\nimport { PureJSONContent } from '../form/viewModel';\r\nimport { VUq } from './vUq';\r\nimport { CHistory, HistoryUI } from '../history';\r\nimport { CPending, PendingUI } from '../pending';\r\nimport { CApp } from '../CApp';\r\n\r\nexport type EntityType = 'sheet' | 'action' | 'tuid' | 'query' | 'book' | 'map' | 'history' | 'pending';\r\n\r\nexport interface UqUI {\r\n    CTuidMain?: typeof CTuidMain;\r\n    CTuidEdit?: typeof CTuidEdit;\r\n    CTuidList?: typeof CTuidList;\r\n    CTuidSelect?: typeof CTuidSelect;\r\n    CTuidInfo?: typeof CTuidInfo;\r\n    CQuery?: typeof CQuery;\r\n    CQuerySelect?: typeof CQuerySelect;\r\n    CMap?: typeof CMap;\r\n    CAction?: typeof CAction;\r\n    CSheet?: typeof CSheet;\r\n    CBook?: typeof CBook;\r\n    CHistory?: typeof CHistory;\r\n    CPending?: typeof CPending;\r\n    tuid?: {[name:string]: TuidUI};\r\n    sheet?: {[name:string]: SheetUI};\r\n    action?: {[name:string]: ActionUI};\r\n    map?: {[name:string]: MapUI};\r\n    query?: {[name:string]: QueryUI};\r\n    book?: {[name:string]: BookUI};    \r\n    history?: {[name:string]: HistoryUI};\r\n    pending?: {[name:string]: PendingUI};\r\n    res?: any;\r\n}\r\n\r\nfunction lowerPropertyName(entities: {[name:string]: EntityUI}) {\r\n    if (entities === undefined) return;\r\n    for (let i in entities) entities[i.toLowerCase()] = entities[i];\r\n}\r\n\r\nexport class CUq extends Controller /* implements Uq*/ {\r\n    private ui:any;\r\n    private CTuidMain: typeof CTuidMain;\r\n    private CTuidEdit: typeof CTuidEdit;\r\n    private CTuidList: typeof CTuidList;\r\n    private CTuidSelect: typeof CTuidSelect;\r\n    private CTuidInfo: typeof CTuidInfo;\r\n    private CQuery: typeof CQuery;\r\n    private CQuerySelect: typeof CQuerySelect;\r\n    private CMap: typeof CMap;\r\n    private CAction: typeof CAction;\r\n    private CSheet: typeof CSheet;\r\n    private CBook: typeof CBook;\r\n    private CHistory: typeof CHistory;\r\n    private CPending: typeof CPending;\r\n\r\n    constructor(cApp:CApp, uq:string, appId:number, uqId:number, access:string, ui:UqUI) {\r\n        super(resLang(ui.res));\r\n        this.cApp = cApp;\r\n        this.uq = uq;\r\n        this.id = uqId;\r\n        // 每一个ui都转换成小写的key的版本\r\n        lowerPropertyName(ui.tuid);\r\n        lowerPropertyName(ui.sheet);\r\n        lowerPropertyName(ui.map);\r\n        lowerPropertyName(ui.query);\r\n        lowerPropertyName(ui.action);\r\n        lowerPropertyName(ui.book);\r\n        lowerPropertyName(ui.history);\r\n        lowerPropertyName(ui.pending);\r\n        this.ui = ui;\r\n        this.CTuidMain = ui.CTuidMain || CTuidMain;\r\n        this.CTuidEdit = ui.CTuidEdit || CTuidEdit;\r\n        this.CTuidList = ui.CTuidList || CTuidList;\r\n        this.CTuidSelect = ui.CTuidSelect || CTuidSelect;\r\n        this.CTuidInfo = ui.CTuidInfo || CTuidInfo;\r\n        this.CQuery = ui.CQuery || CQuery;\r\n        this.CQuerySelect = ui.CQuerySelect || CQuerySelect;\r\n        this.CMap = ui.CMap || CMap;\r\n        this.CAction = ui.CAction || CAction;\r\n        this.CSheet = ui.CSheet || CSheet;\r\n        this.CBook = ui.CBook || CBook;\r\n        this.CHistory = ui.CHistory || CHistory;\r\n        this.CPending = ui.CPending || CPending;\r\n\r\n        let token = undefined;\r\n        let uqOwner:string, uqName:string;\r\n        let p = uq.split('/');\r\n        switch (p.length) {\r\n            case 1:\r\n                uqOwner = '$$$';\r\n                uqName = p[0];\r\n                break;\r\n            case 2:\r\n                uqOwner = p[0];\r\n                uqName = p[1];\r\n                break;\r\n            default:\r\n                console.log('uq must be uqOwner/uqName format');\r\n                return;\r\n        }\r\n\r\n        let hash = document.location.hash;\r\n        let baseUrl = hash===undefined || hash===''? \r\n            'debug/':'tv/';\r\n\r\n        let acc: string[];\r\n        if (access === null || access === undefined || access === '*') {\r\n            acc = [];\r\n        }\r\n        else {\r\n            acc = access.split(';').map(v => v.trim()).filter(v => v.length > 0);\r\n        }\r\n        let uqApi:UqApi;\r\n        if (uq === '$$$/$unitx') {\r\n            // 这里假定，点击home link之后，已经设置unit了\r\n            // 调用 UnitxApi会自动搜索绑定 unitx service\r\n            uqApi = new UnitxApi(meInFrame.unit);\r\n        }\r\n        else {\r\n            uqApi = new UqApi(baseUrl, uqOwner, uqName, acc, true);\r\n        }\r\n        this.entities = new Entities(this, uqApi, appId);\r\n    }\r\n\r\n    protected async internalStart() {\r\n    }\r\n\r\n    cApp:CApp;\r\n    uq: string;\r\n    id: number;\r\n    res: any;\r\n    entities:Entities;\r\n    error: string;\r\n    private schemaLoaded:boolean = false;\r\n\r\n    protected async loadEntites() {\r\n        await this.entities.loadAccess();\r\n    }\r\n\r\n    async loadSchema():Promise<string> {\r\n        try {\r\n            if (this.schemaLoaded === true) return;\r\n            await this.loadEntites();\r\n            if (this.id === undefined) this.id = this.entities.uqId;\r\n\r\n            for (let i in this.ui) {\r\n                let g = this.ui[i];\r\n                if (g === undefined) continue;\r\n                let {caption, collection} = g;\r\n                if (collection === undefined) continue;\r\n                for (let j in collection) {\r\n                    if (this.entities[i](j) === undefined) {\r\n                        console.warn(i + ':' + '\\'' + j + '\\' is not uq entity');\r\n                    }\r\n                }\r\n            }\r\n            this.schemaLoaded = true;\r\n            return;\r\n        }\r\n        catch(err) {\r\n            console.error(err);\r\n            return this.error = err;\r\n            //debugger;\r\n            //return err.message;\r\n        }\r\n    }\r\n\r\n    async getQuerySearch(name:string):Promise<Query> {\r\n        let query = this.entities.query(name);\r\n        if (query === undefined) \r\n            alert(`QUERY ${name} 没有定义!`);\r\n        else {\r\n            await query.loadSchema();\r\n            let {returns} = query;\r\n            if (returns.length > 1) {\r\n                alert(`QUERY ${name} 返回多张表, 无法做QuerySearch`);\r\n            }\r\n        }\r\n        return query;\r\n    }\r\n    getTuidPlaceHolder(tuid:Tuid) {\r\n        let {tuidPlaceHolder, entity} = this.res;\r\n        let {name} = tuid;\r\n        let type:string;\r\n        if (entity !== undefined) {\r\n            let en = entity[name];\r\n            if (en !== undefined) {\r\n                type = en.label;\r\n            }\r\n        }\r\n        return (tuidPlaceHolder || 'Select');\r\n    }\r\n    getNone() {\r\n        let {none} = this.res;\r\n        return none || 'none';\r\n    }\r\n    protected isSysVisible = false;\r\n    protected isVisible(entity: Entity):boolean {\r\n        return entity.sys !== true || this.isSysVisible;\r\n    }\r\n\r\n    async navSheet(sheetTypeId:number, sheetId:number) {\r\n        let sheet = this.entities.sheetFromTypeId(sheetTypeId);\r\n        if (sheet === undefined) {\r\n            alert('sheetTypeId ' + sheetTypeId + ' is not exists!');\r\n            return;\r\n        }\r\n        let cSheet = this.cSheet(sheet);\r\n        await cSheet.startSheet(sheetId);\r\n    }\r\n\r\n    sheet(entityName:string) {return this.entities.sheet(entityName);}\r\n    action(entityName:string) {return this.entities.action(entityName);}\r\n    query(entityName:string) {return this.entities.query(entityName);}\r\n    book(entityName:string) {return this.entities.book(entityName);}\r\n    map(entityName:string) {return this.entities.map(entityName);}\r\n    history(entityName:string) {return this.entities.history(entityName);}\r\n    pending(entityName:string) {return this.entities.pending(entityName);}\r\n    tuid(entityName:string) {return this.entities.tuid(entityName)}\r\n    tuidDiv(entityName:string, divName:string) {\r\n        let tuid = this.entities.tuid(entityName);\r\n        if (tuid === undefined) return;\r\n        let {divs} = tuid;\r\n        if (divs === undefined) return;\r\n        return divs[divName];\r\n    }\r\n\r\n    cSheetFromName(entityName:string):CSheet {\r\n        let entity = this.entities.sheet(entityName);\r\n        if (entity !== undefined) return this.cSheet(entity);\r\n    }\r\n    cActionFromName(entityName:string) {\r\n        let entity = this.entities.action(entityName);\r\n        if (entity !== undefined) return this.cAction(entity);\r\n    }\r\n    cQueryFromName(entityName:string) {\r\n        let entity = this.entities.query(entityName);\r\n        if (entity !== undefined) return this.cQuery(entity);\r\n    }\r\n    cBookFromName(entityName:string) {\r\n        let entity = this.entities.book(entityName);\r\n        if (entity !== undefined) return this.cBook(entity);\r\n    }\r\n    cMapFromName(entityName:string) {\r\n        let entity = this.entities.map(entityName);\r\n        if (entity !== undefined) return this.cMap(entity);\r\n    }\r\n    cHistoryFromName(entityName:string) {\r\n        let entity = this.entities.history(entityName);\r\n        if (entity !== undefined) return this.cHistory(entity);\r\n    }\r\n    cPendingFromName(entityName:string) {\r\n        let entity = this.entities.pending(entityName);\r\n        if (entity !== undefined) return this.cPending(entity);\r\n    }\r\n    cTuidMainFromName(entityName:string) {\r\n        let entity = this.entities.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidMain(entity);\r\n    }\r\n    cTuidEditFromName(entityName:string) {\r\n        let entity = this.entities.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidEdit(entity);\r\n    }\r\n    cTuidInfoFromName(entityName:string) {\r\n        let entity = this.entities.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidInfo(entity);\r\n    }\r\n\r\n    cTuidSelectFromName(entityName:string) {\r\n        let entity = this.entities.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidSelect(entity);\r\n    }\r\n\r\n    cFromName(entityType:EntityType, entityName:string): CEntity<Entity, EntityUI> {\r\n        switch (entityType) {\r\n            case 'sheet':\r\n                let sheet = this.entities.sheet(entityName);\r\n                if (sheet === undefined) return;\r\n                return this.cSheet(sheet);\r\n            case 'action':\r\n                let action = this.entities.action(entityName);\r\n                if (action === undefined) return;\r\n                return this.cAction(action);\r\n            case 'tuid':\r\n                let tuid = this.entities.tuid(entityName);\r\n                if (tuid === undefined) return;\r\n                return this.cTuidMain(tuid);\r\n            case 'query':\r\n                let query = this.entities.query(entityName);\r\n                if (query === undefined) return;\r\n                return this.cQuery(query);\r\n            case 'book':\r\n                let book = this.entities.book(entityName);\r\n                if (book === undefined) return;\r\n                return this.cBook(book);\r\n            case 'map':\r\n                let map = this.entities.map(entityName);\r\n                if (map === undefined) return;\r\n                return this.cMap(map);\r\n            case 'history':\r\n                let history = this.entities.history(entityName);\r\n                if (history === undefined) return;\r\n                return this.cHistory(history);\r\n            case 'pending':\r\n                let pending = this.entities.pending(entityName);\r\n                if (pending === undefined) return;\r\n                return this.cPending(pending);\r\n        }\r\n    }\r\n\r\n    linkFromName(entityType:EntityType, entityName:string) {\r\n        return this.link(this.cFromName(entityType, entityName));\r\n    }\r\n\r\n    private getUI<T extends Entity, UI extends EntityUI>(t:T):{ui:UI, res:any} {\r\n        let ui, res;\r\n        let {name, typeName} = t;\r\n        if (this.ui !== undefined) {\r\n            let tUI = this.ui[typeName];\r\n            if (tUI !== undefined) {\r\n                ui = tUI[name];\r\n            }\r\n        }\r\n        let {entity} = this.res;\r\n        if (entity !== undefined) {\r\n            res = entity[name];\r\n        }\r\n        return {ui: ui || {}, res: res || {} };\r\n    }\r\n\r\n    link(cEntity:CEntity<Entity, EntityUI>) {\r\n        return new CLink(cEntity);\r\n    }\r\n\r\n    get tuidLinks() {\r\n        return this.entities.tuidArr.filter(v => this.isVisible(v)).map(v => this.link(this.cTuidMain(v)));\r\n    }\r\n    cTuidMain(tuid:TuidMain):CTuidMain {\r\n        let {ui, res} = this.getUI<TuidMain, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidMain || this.CTuidMain)(this, tuid, ui, res);\r\n    }\r\n    cTuidEdit(tuid:TuidMain):CTuidEdit {\r\n        let {ui, res} = this.getUI<TuidMain, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidEdit || this.CTuidEdit)(this, tuid, ui, res);\r\n    }\r\n    cTuidList(tuid:TuidMain):CTuidList {\r\n        let {ui, res} = this.getUI<TuidMain, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidList || this.CTuidList)(this, tuid, ui, res);\r\n    }\r\n    cTuidSelect(tuid:Tuid):CTuidSelect {\r\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid.owner || tuid);\r\n        return new (ui && ui.CTuidSelect || this.CTuidSelect)(this, tuid, ui, res);\r\n    }\r\n    cTuidInfo(tuid:TuidMain):CTuidInfo {\r\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidInfo || this.CTuidInfo)(this, tuid, ui, res);\r\n    }\r\n\r\n    cSheet(sheet:Sheet/*, sheetUI?:SheetUI, sheetRes?:any*/):CSheet {\r\n        let {ui, res} = this.getUI<Sheet, SheetUI>(sheet);\r\n        //if (sheetUI !== undefined) ui = sheetUI;\r\n        //if (sheetRes !== undefined) res = sheetRes;\r\n        //return new (ui && ui.CSheet || this.CSheet)(this, sheet, sheetUI, sheetRes);\r\n        return new (ui && ui.CSheet || this.CSheet)(this, sheet, ui, res);\r\n    }\r\n    get sheetLinks() { \r\n        return this.entities.sheetArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cSheet(v))\r\n        });\r\n    }\r\n\r\n    cAction(action:Action):CAction {\r\n        let {ui, res} = this.getUI<Action, ActionUI>(action);\r\n        return new (ui && ui.CAction || this.CAction)(this, action, ui, res);\r\n    }\r\n    get actionLinks() { \r\n        return this.entities.actionArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cAction(v))\r\n        });\r\n    }\r\n\r\n    cQuery(query:Query):CQuery {\r\n        let {ui, res} = this.getUI<Query, QueryUI>(query);\r\n        return new (ui && ui.CQuery || this.CQuery)(this, query, ui, res);\r\n    }\r\n    cQuerySelect(queryName:string):CQuerySelect {\r\n        let query = this.entities.query(queryName);\r\n        if (query === undefined) return;\r\n        let {ui, res} = this.getUI<Query, QueryUI>(query);\r\n        return new (ui && ui.CQuerySelect || this.CQuerySelect)(this, query, ui, res);\r\n    }\r\n    get queryLinks() {\r\n        return this.entities.queryArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cQuery(v))\r\n        });\r\n    }\r\n    \r\n    cBook(book:Book):CBook {\r\n        let {ui, res} = this.getUI<Book, BookUI>(book);\r\n        return new (ui && ui.CBook || this.CBook)(this, book, ui, res);\r\n    }\r\n    get bookLinks() { \r\n        return this.entities.bookArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cBook(v))\r\n        });\r\n    }\r\n    \r\n    cHistory(history:History):CHistory {\r\n        let {ui, res} = this.getUI<History, HistoryUI>(history);\r\n        return new (ui && ui.CHistory || this.CHistory)(this, history, ui, res);\r\n    }\r\n    get historyLinks() { \r\n        return this.entities.historyArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cHistory(v))\r\n        });\r\n    }\r\n    \r\n    cPending(pending:Pending):CPending {\r\n        let {ui, res} = this.getUI<Pending, PendingUI>(pending);\r\n        return new (ui && ui.CPending || this.CPending)(this, pending, ui, res);\r\n    }\r\n    get pendingLinks() { \r\n        return this.entities.pendingArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cPending(v))\r\n        });\r\n    }\r\n    \r\n    cMap(map:Map):CMap {\r\n        let {ui, res} = this.getUI<Map, MapUI>(map);\r\n        return new (ui && ui.CMap || this.CMap)(this, map, ui, res);\r\n    }\r\n    get mapLinks() { \r\n        return this.entities.mapArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cMap(v));\r\n        });\r\n    }\r\n\r\n    getTuidContent(tuid:Tuid): React.StatelessComponent<any> {\r\n        let {owner} = tuid;\r\n        if (owner === undefined) {\r\n            let {ui} = this.getUI<Tuid, TuidUI>(tuid);\r\n            return (ui && ui.content) || PureJSONContent;\r\n        }\r\n        else {\r\n            let {ui} = this.getUI<Tuid, TuidUI>(owner);\r\n            return (ui && ui.divs && ui.divs[tuid.name].content) || PureJSONContent;\r\n        }\r\n    }\r\n\r\n    async showTuid(tuid:Tuid, id:number):Promise<void> {\r\n        let {owner} = tuid;\r\n        let c = this.cTuidInfo(owner || (tuid as TuidMain));\r\n        await c.start(id);\r\n    }\r\n\r\n    protected get VUq():typeof VUq {return VUq}\r\n\r\n    render() {\r\n        let v = new (this.VUq)(this);\r\n        return v.render();\r\n    }\r\n}\r\n\r\n","export * from './cUq';\r\nexport * from './vUq';","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport className from 'classnames';\r\nimport { List, LMR, FA } from 'tonva-react-form';\r\nimport { Page, nav } from 'tonva-tools';\r\nimport { tv } from '../../tools';\r\nimport { Map } from '../../entities';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CMap, MapItem, MapKey, MapUI } from './cMap';\r\nimport { PureJSONContent } from '../form/viewModel';\r\n\r\nexport class VMapMain extends VEntity<Map, MapUI, CMap> {\r\n    private isFrom: boolean;\r\n\r\n    async open(param?:any) {\r\n        this.isFrom = this.controller.isFrom;\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    itemRender = (item:MapItem, index:number) => {\r\n        return <this.ItemRow item={item} />;\r\n    }\r\n\r\n    private ItemRow = observer(({item}: {item:MapItem}) => {\r\n        let {tuid, box, children, isLeaf, keyIndex, values} = item;\r\n        let keyUI = this.controller.keyUIs[keyIndex];\r\n        let {content:keyContent, valuesContent, none:keyNone} = keyUI;\r\n        let add, remove;\r\n        if (this.isFrom === false) {\r\n            add = <button className=\"btn btn-link btn-sm\" onClick={()=>this.controller.addClick(item)}>\r\n                <FA name=\"plus\" />\r\n            </button>;\r\n            remove = <button className=\"btn btn-link btn-sm\" onClick={()=>this.controller.removeClick(item)}>\r\n                <FA className=\"text-info\" name=\"trash\" />\r\n            </button>;\r\n        }\r\n        let right;\r\n        if (isLeaf === false) {\r\n            if (keyIndex === 0)\r\n                right = add;\r\n            else\r\n                right = <>{remove} &nbsp; {add}</>;\r\n        }\r\n        else if (keyIndex > 0) {\r\n            right = remove;\r\n        }\r\n        let content, border, valuesView;\r\n        if (isLeaf === true) {\r\n            content = undefined; //<div className=\"ml-5\">leaf</div>;\r\n            if (values) {\r\n                //valuesView = null; // 现在不显示values content了\r\n                valuesView = (valuesContent || PureJSONContent)(values, this.x);\r\n            }\r\n        }\r\n        else {\r\n            border = \"border-bottom\";\r\n            let none = keyNone && keyNone(this.x);\r\n            content = <List \r\n                className=\"ml-4\" \r\n                items={children} \r\n                item={{onClick:undefined, render:this.itemRender}}\r\n                none={none} />\r\n        }\r\n        return <div className=\"d-flex flex-column\">\r\n            <LMR className={className('px-3', 'py-2', border)} \r\n                right={right}\r\n            >\r\n                <div className=\"py-1\">{tv(box, keyContent, this.x)}</div>\r\n                <div className=\"py-1 font-weight-bold\">{valuesView}</div>\r\n            </LMR>\r\n            {content}\r\n        </div>;\r\n    });\r\n\r\n    protected get view() { return () => <Page header={this.label}>\r\n            <List items={this.controller.items} item={{className:'my-2', onClick:undefined, render:this.itemRender}} />\r\n        </Page>\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { VEntity } from \"../CVEntity\";\r\nimport { MapUI, CMap } from \"./cMap\";\r\nimport { Map } from \"../../entities\";\r\nimport { Page } from \"tonva-tools\";\r\nimport { VForm } from '../form';\r\n\r\nexport class VInputValues extends VEntity<Map, MapUI, CMap> {\r\n    private vForm: VForm;\r\n\r\n    async open(param?:any) {\r\n        this.vForm = this.createForm(this.onValuesSubmit);\r\n        this.openPageElement(<this.view />);\r\n    }\r\n\r\n    private onValuesSubmit = async () => {\r\n        this.ceasePage();\r\n        let values = this.vForm.getValues();\r\n        this.returnCall(values);\r\n    }\r\n\r\n    private view = () => {\r\n        return <Page>\r\n            {this.vForm.render()}\r\n        </Page>\r\n    }\r\n}\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\nimport { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Map, Tuid, BoxId, Field, TuidMain, fieldDefaultValue } from \"../../entities\";\r\nimport { VMapMain } from \"./vMain\";\r\nimport { observable } from \"mobx\";\r\nimport { PureJSONContent } from '../form/viewModel';\r\nimport { VInputValues } from './inputValues';\r\n\r\nexport interface MapKey {\r\n    content: (values, x?:any) => JSX.Element;\r\n    valuesContent?: (values, x?:any) => JSX.Element;\r\n    none?: (x:any)=>string;\r\n}\r\n\r\nexport interface MapUI extends EntityUI {\r\n    CMap?: typeof CMap;\r\n    keys?: MapKey[],\r\n}\r\n\r\nexport class MapItem {\r\n    parent: MapItem;\r\n    tuid: Tuid;\r\n    box: BoxId;\r\n    isLeaf: boolean;\r\n    keyIndex:number;\r\n    children: MapItem[] = observable.array([], {deep: true});\r\n    values: any;\r\n    constructor(parent:MapItem, tuid:Tuid, box:BoxId, keyIndex:number) {\r\n        this.parent = parent;\r\n        this.tuid = tuid;\r\n        this.box = box;\r\n        this.keyIndex = keyIndex;\r\n        this.isLeaf = false;\r\n    }\r\n}\r\n\r\nexport class CMap extends CEntity<Map, MapUI> {\r\n    isFrom: boolean;\r\n    items:MapItem[];\r\n    keyFields: Field[];\r\n    keyUIs: MapKey[];\r\n\r\n    protected async internalStart() {\r\n        let {keys, schemaFrom} = this.entity;\r\n        this.isFrom = schemaFrom !== undefined;\r\n        let q = this.entity.queries.all;\r\n        let result = await q.query({});\r\n        //let data = await this.entity.unpackReturns(res);\r\n        let ret = result.ret;\r\n        let keysLen = keys.length;\r\n        this.keyUIs = _.clone(this.ui.keys || []);\r\n        this.keyFields = [];\r\n        let retFields = q.returns[0].fields;\r\n        for (let i=0; i<keysLen; i++) {\r\n            this.keyFields.push(retFields[i]);\r\n            if (i >= this.keyUIs.length) {\r\n                this.keyUIs.push({\r\n                    content: PureJSONContent,\r\n                });\r\n            }\r\n        }\r\n        this.items = observable([]);\r\n        let item:MapItem = undefined;\r\n        for (let r of ret) {\r\n            let newItem = this.addItem(item, r);\r\n            if (newItem !== undefined) {\r\n                this.items.push(newItem);\r\n                item = newItem;\r\n            }\r\n        }\r\n\r\n        await this.openVPage(this.VMapMain);\r\n    }\r\n\r\n    private createItem(parent:MapItem, tuid:Tuid, box:BoxId, keyIndex:number, values?:any) {\r\n        let item = new MapItem(parent, tuid, box, keyIndex);\r\n        if (keyIndex === this.keyFields.length - 1) {\r\n            item.isLeaf = true;\r\n            item.values = values;\r\n        }\r\n        return item;\r\n    }\r\n\r\n    addItem(item:MapItem, row:any):MapItem {\r\n        let ret:MapItem = undefined;\r\n        let keysLen = this.keyFields.length;\r\n        let p = item;\r\n        for (let i=0;i<keysLen;i++) {\r\n            let key = this.keyFields[i];\r\n            let {name} = key;\r\n            let tuid = key._tuid;\r\n            let val:BoxId = row[name];\r\n            if (val === undefined) break;\r\n            let {id} = val;\r\n            if (i === 0) {\r\n                if (id === 0) continue;\r\n                if (p === undefined || p.box.id !== id) {\r\n                    ret = p = this.createItem(undefined, tuid, val, i, row);\r\n                }\r\n                continue;\r\n            }\r\n            let {children, box} = p;\r\n            let len = children.length;\r\n            if (len > 0) {\r\n                let n = children[len-1];\r\n                if (n.box.id === id) {\r\n                    p = n;\r\n                    continue;\r\n                }\r\n            }\r\n            if (id > 0) {\r\n                children.push(p = this.createItem(p, tuid, val, i, row));\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    async searchOnKey(keyField:Field, param):Promise<number> {\r\n        let {_tuid, _ownerField} = keyField;\r\n        let cTuidSelect = this.cUq.cTuidSelect(_tuid);\r\n        let callParam = param;\r\n        if (_ownerField !== undefined) {\r\n            callParam = param[_ownerField.name];\r\n            if (typeof callParam === 'object') {\r\n                callParam = callParam.id;\r\n            }\r\n        }\r\n        let ret = await cTuidSelect.call(callParam);\r\n        return _tuid.getIdFromObj(ret);\r\n    }\r\n\r\n    addClick = async(item:MapItem) => {\r\n        let {keyIndex, children} = item;\r\n        let keysLen = this.keyFields.length;\r\n        let keysLast = keysLen-1;\r\n        let idx = keyIndex + 1;\r\n        if (idx >= keysLen) return;\r\n        let keyField = this.keyFields[idx];\r\n        let kn = keyField.name;\r\n        let tuid = keyField._tuid;\r\n        let searchParam = {} as any;\r\n        let data = {} as any;\r\n        for (let p=item;p!==undefined;p=p.parent) {\r\n            let {keyIndex:ki, box} = p;\r\n            let kn = this.keyFields[ki].name;\r\n            //searchParam[kn] = data['_' + kn] = box.id;\r\n            searchParam[kn] = data[kn] = box.id;\r\n        }\r\n\r\n        let id = await this.searchOnKey(keyField, searchParam);\r\n        if (id === undefined || id <= 0) return;\r\n        tuid.useId(id);\r\n        let idBox = tuid.boxId(id);\r\n        let arr1 = {} as any;\r\n        let values:any = {};\r\n        if (keyIndex+1===keysLast) {\r\n            tuid.useId(id);\r\n            //values[kn] = arr1['_' + kn] = idBox;\r\n            values[kn] = arr1[kn] = idBox;\r\n            if (this.entity.fields.length > 0) {\r\n                let ret = await this.vCall(VInputValues, data);\r\n                for (let i in ret) {\r\n                    //values[i] = arr1['_' + i] = ret[i];\r\n                    values[i] = arr1[i] = ret[i];\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            //values[kn] = data['_' + kn] = idBox;\r\n            values[kn] = data[kn] = idBox;\r\n            for (let i=idx+1;i<keysLast;i++) {\r\n                //data['_' + this.keyFields[i].name] = 0;\r\n                data[this.keyFields[i].name] = 0;\r\n            }\r\n            // 填map的key field 0 值\r\n            //arr1['_' + this.keyFields[keysLast].name] = 0;\r\n            arr1[this.keyFields[keysLast].name] = 0;\r\n            let {fields} = this.entity;\r\n            for (let f of fields) {\r\n                let {name, type, null:nullable} = f;\r\n                if (!(nullable === true)) {\r\n                    //arr1['_' + f.name] = fieldDefaultValue(type);\r\n                    arr1[f.name] = fieldDefaultValue(type);\r\n                }\r\n            }\r\n        }\r\n        data.arr1 = [arr1];\r\n        await this.entity.actions.add.submit(data);\r\n        let rowIndex = children.findIndex(v => v.box.id === id);\r\n        if (rowIndex < 0) {\r\n            children.push(this.createItem(item, tuid, idBox, idx, values));\r\n        }\r\n        else {\r\n            let {fields} = this.entity;\r\n            if (fields !== undefined && fields.length > 0) {\r\n                let row = children[rowIndex];\r\n                children.splice(rowIndex, 1);\r\n                row.values = values;\r\n                /*\r\n                for (let f of fields) {\r\n                    let {name:fn} = f;\r\n                    row.values[fn] = values[fn];\r\n                }*/\r\n                children.splice(rowIndex, 0, row);\r\n            }\r\n        }\r\n        this.removeCeased();\r\n    }\r\n\r\n    removeClick = async(item:MapItem) => {\r\n        let keyField = this.keyFields[item.keyIndex];\r\n        let tuid = keyField._tuid;\r\n        let cTuidMain = this.cUq.cTuidMain(tuid.Main);\r\n        let label = cTuidMain.getLable(tuid);\r\n        let confirmDelete:_.TemplateExecutor = \r\n            this.res.confirmDelete \r\n            || _.template('do you really want to remove ${label}?');\r\n        if (confirm(confirmDelete({label:label})) === false) return;\r\n        let map:Map = this.entity;\r\n        let data = {} as any;\r\n        let arr1 = data['arr1'] = [];\r\n        let v0 = {} as any;\r\n        arr1.push(v0);\r\n        for (let p=item; p!==undefined;p=p.parent) {\r\n            let ki=p.keyIndex;\r\n            //v0['_'+this.keyFields[ki].name] = p.box.id;\r\n            v0[this.keyFields[ki].name] = p.box.id;\r\n        }\r\n        let len = this.keyFields.length;\r\n        for (let i=item.keyIndex+1; i<len; i++) {\r\n            let k = this.keyFields[i];\r\n            //v0['_'+k.name] = -1;\r\n            v0[k.name] = -1;\r\n        }\r\n        await map.actions.del.submit(data);\r\n        let children = item.parent.children;\r\n        let index = children.findIndex(v => v === item);\r\n        if (index >= 0) children.splice(index, 1);\r\n    }\r\n\r\n    protected get VMapMain():typeof VMapMain {return VMapMain}\r\n}\r\n","export * from './cMap';\r\nexport * from './vMain';\r\n","import * as React from 'react';\r\nimport { VPage, Page } from 'tonva-tools';\r\nimport { jsonStringify } from '../../tools';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CAction, ActionUI } from './cAction';\r\nimport { Action } from '../../entities';\r\n\r\nexport class VActionMain extends VEntity<Action, ActionUI, CAction> {\r\n    protected vForm: VForm;\r\n    protected returns: any;\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        this.openPage(this.mainPage);\r\n    }\r\n\r\n    private onSubmit = async () => {\r\n        let values = this.vForm.getValues();\r\n        this.returns = await this.controller.submit(values);\r\n        this.closePage();\r\n        this.openPage(this.resultPage);\r\n    }\r\n\r\n    protected mainPage = () => {\r\n        let {label} = this.controller;\r\n        return <Page header={label}>\r\n            {this.vForm.render('mx-3 my-2')}\r\n        </Page>;\r\n    }\r\n\r\n    protected resultPage = () => {\r\n        let {label} = this.controller;\r\n        return <Page header={label} back=\"close\">\r\n            完成！\r\n            <pre>\r\n                {jsonStringify(this.returns)}\r\n            </pre>\r\n        </Page>;\r\n    }\r\n}\r\n","import { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Action } from \"../../entities\";\r\nimport { VActionMain } from \"./vActionMain\";\r\n\r\nexport interface ActionUI extends EntityUI {\r\n    CAction?: typeof CAction;\r\n    //main: typeof VActionMain,\r\n}\r\n\r\nexport class CAction extends CEntity<Action, ActionUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VActionMain);\r\n    }\r\n\r\n    protected get VActionMain():typeof VActionMain {return VActionMain}\r\n\r\n    async submit(values:any) {\r\n        return this.entity.submit(values);\r\n    }\r\n}\r\n","export * from './cAction';\r\nexport * from './vActionMain';\r\n","import * as React from 'react';\r\nimport { TuidMain, History, Entity } from '../../entities';\r\nimport { Page } from 'tonva-tools';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CHistory, HistoryUI } from './cHistory';\r\n\r\nexport class VHistoryMain extends VEntity<History, HistoryUI, CHistory> {\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        History\r\n    </Page>;\r\n}\r\n","import { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { History } from \"../../entities\";\r\nimport { VHistoryMain } from \"./vHistoryMain\";\r\n\r\nexport interface HistoryUI extends EntityUI {\r\n    CHistory?: typeof CHistory;\r\n    main: typeof VHistoryMain,\r\n}\r\n\r\nexport class CHistory extends CEntity<History, HistoryUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VHistoryMain);\r\n    }\r\n\r\n    protected get VHistoryMain():typeof VHistoryMain {return VHistoryMain}\r\n}\r\n","export * from './cHistory';\r\nexport * from './vHistoryMain';\r\n","import * as React from 'react';\r\nimport { TuidMain, Pending, Entity } from '../../entities';\r\nimport { Page } from 'tonva-tools';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CPending, PendingUI } from './cPending';\r\n\r\nexport class VPendingMain extends VEntity<Pending, PendingUI, CPending> {\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        pending\r\n    </Page>;\r\n}\r\n","import { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Pending } from \"../../entities\";\r\nimport { VPendingMain } from \"./vPendingMain\";\r\n\r\nexport interface PendingUI extends EntityUI {\r\n    CPending?: typeof CPending;\r\n    main: typeof VPendingMain,\r\n}\r\n\r\nexport class CPending extends CEntity<Pending, PendingUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VPendingMain);\r\n    }\r\n\r\n    protected get VPendingMain():typeof VPendingMain {return VPendingMain}\r\n}\r\n","export * from './cPending';\r\nexport * from './vPendingMain';\r\n","\r\nimport {setCenterToken} from './uqApi';\r\nimport {WSChannel} from './wsChannel';\r\n\r\nexport const netToken = {\r\n    set(userId:number, token:string) {\r\n        setCenterToken(userId, token);\r\n        WSChannel.setCenterToken(token);\r\n    },\r\n    clear() {\r\n        setCenterToken(0, undefined);\r\n        WSChannel.setCenterToken(undefined);\r\n    }\r\n};\r\n","\r\nconst zero = '00000000000000';\r\nexport function left0(num:number, fix:number) {\r\n    if (num === undefined) return '';\r\n    let r = num.toString();\r\n    let len = fix - r.length;\r\n    if (len <= 0) return r;\r\n    return zero.substr(0, len) + r;\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport {User} from '../user';\r\nimport {nav} from './nav';\r\nimport {Page} from './page';\r\nimport { isDevelopment } from '../net';\r\n\r\nexport abstract class Controller {\r\n    readonly res: any;\r\n    readonly x: any;\r\n    icon: string|JSX.Element;\r\n    label:string;\r\n    readonly isDev:boolean = isDevelopment;\r\n    get user():User {return nav.user}\r\n    get isLogined():boolean {\r\n        let {user} = nav;\r\n        if (user === undefined) return false;\r\n        return user.id > 0;\r\n    }\r\n    constructor(res:any) {\r\n        this.res = res || {};\r\n        this.x = this.res.x || {};\r\n    }\r\n\r\n    private receiveHandlerId:number;\r\n    private disposer:()=>void;\r\n\r\n    private dispose() {\r\n        // message listener的清理\r\n        nav.unregisterReceiveHandler(this.receiveHandlerId);\r\n        this.onDispose();\r\n    }\r\n\r\n    protected onDispose() {\r\n    }\r\n\r\n    protected async openVPage(vp: new (coordinator: Controller)=>VPage<Controller>, param?:any):Promise<void> {\r\n        await (new vp(this)).open(param);\r\n    }\r\n\r\n    protected renderView(view: new (coordinator: Controller)=>View<Controller>, param?:any) {\r\n        return (new view(this)).render(param);\r\n    }\r\n\r\n    async event(type:string, value:any) {\r\n        await this.onEvent(type, value);\r\n    }\r\n\r\n    protected async onEvent(type:string, value:any) {\r\n    }\r\n\r\n    protected msg(text:string) {\r\n        alert(text);\r\n    }\r\n    protected errorPage(header:string, err:any) {\r\n        this.openPage(<Page header=\"App error!\">\r\n            <pre>\r\n                {typeof err === 'string'? err : err.message}\r\n            </pre>\r\n        </Page>);\r\n    }\r\n\r\n    protected onMessage(message:any):Promise<void> {\r\n        return;\r\n    }\r\n\r\n    private onMessageReceive = async (message:any):Promise<void> => {\r\n        await this.onMessage(message);\r\n    }\r\n\r\n    protected async beforeStart():Promise<boolean> {\r\n        /*\r\n        console.log('this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);');\r\n        this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);\r\n        console.log('return true');\r\n        */\r\n        return true;\r\n    }\r\n    protected registerReceiveHandler() {\r\n        this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);\r\n    }\r\n\r\n    protected abstract internalStart(param?:any):Promise<void>;\r\n    async start(param?:any):Promise<void> {\r\n        this.disposer = this.dispose.bind(this);\r\n        this.registerReceiveHandler();\r\n        let ret = await this.beforeStart();\r\n        if (ret === false) return;\r\n        await this.internalStart(param);\r\n    }\r\n\r\n    get isCalling():boolean {return this._resolve_$ !== undefined}\r\n\r\n    private _resolve_$:((value:any) => void)[];\r\n    async call(param?:any):Promise<any> {\r\n        if (this._resolve_$ === undefined) this._resolve_$ = [];\r\n        return new Promise<any> (async (resolve, reject) => {\r\n            this._resolve_$.push(resolve);\r\n            await this.start(param);\r\n        });\r\n    }\r\n\r\n    async vCall(vp: new (coordinator: Controller)=>VPage<Controller>, param?:any):Promise<any> {\r\n        if (this._resolve_$ === undefined) this._resolve_$ = [];\r\n        return new Promise<any> (async (resolve, reject) => {\r\n            this._resolve_$.push(resolve);\r\n            await (new vp(this)).open(param);\r\n        });\r\n    }\r\n\r\n    returnCall(value:any) {\r\n        if (this._resolve_$ === undefined) return;\r\n        let resolve = this._resolve_$.pop();\r\n        if (resolve === undefined) {\r\n            alert('the Coordinator call already returned, or not called');\r\n            return;\r\n        }\r\n        resolve(value);\r\n    }\r\n\r\n    openPage(page:JSX.Element) {\r\n        nav.push(page, this.disposer);\r\n        this.disposer = undefined;\r\n    }\r\n\r\n    replacePage(page:JSX.Element) {\r\n        nav.replace(page, this.disposer);\r\n        this.disposer = undefined;\r\n    }\r\n\r\n    backPage() {\r\n        nav.back();\r\n    }\r\n\r\n    closePage(level?:number) {\r\n        nav.pop(level);\r\n    }\r\n\r\n    ceasePage(level?:number) {\r\n        nav.ceaseTop(level);\r\n    }\r\n\r\n    removeCeased() {\r\n        nav.removeCeased();\r\n    }\r\n\r\n    regConfirmClose(confirmClose: ()=>Promise<boolean>) {\r\n        nav.regConfirmClose(confirmClose);\r\n    }\r\n}\r\n\r\n\r\nexport abstract class View<C extends Controller> {\r\n    protected controller: C;\r\n    protected readonly res: any;\r\n    protected readonly x: any;\r\n\r\n    constructor(controller: C) {\r\n        this.controller = controller;\r\n        this.res = controller.res;\r\n        this.x = controller.x;\r\n    }\r\n\r\n    protected get isDev() {return isDevelopment}\r\n\r\n    abstract render(param?:any): JSX.Element;\r\n\r\n    protected renderVm(vm: new (coordinator: Controller)=>View<C>, param?:any) {\r\n        return (new vm(this.controller)).render(param);\r\n    }\r\n\r\n    protected async openVPage(vp: new (coordinator: Controller)=>VPage<Controller>, param?:any):Promise<void> {\r\n        await (new vp(this.controller)).open(param);\r\n    }\r\n\r\n    protected async event(type:string, value?:any) {\r\n        /*\r\n        if (this._resolve_$_ !== undefined) {\r\n            await this._resolve_$_({type:type, value:value});\r\n            return;\r\n        }*/\r\n        await this.controller.event(type, value);\r\n    }\r\n\r\n    protected returnCall(value:any) {\r\n        this.controller.returnCall(value);\r\n    }\r\n\r\n    protected openPage(view: React.StatelessComponent<any>, param?:any) {\r\n        this.controller.openPage(React.createElement(view, param));\r\n    }\r\n\r\n    protected replacePage(view: React.StatelessComponent<any>, param?:any) {\r\n        this.controller.replacePage(React.createElement(view, param));\r\n    }\r\n\r\n    protected openPageElement(page: JSX.Element) {\r\n        this.controller.openPage(page);\r\n    }\r\n\r\n    protected replacePageElement(page: JSX.Element) {\r\n        this.controller.replacePage(page);\r\n    }\r\n\r\n    protected backPage() {\r\n        this.controller.backPage();\r\n    }\r\n\r\n    protected closePage(level?:number) {\r\n        this.controller.closePage(level);\r\n    }\r\n\r\n    protected ceasePage(level?:number) {\r\n        this.controller.ceasePage(level);\r\n    }\r\n\r\n    protected removeCeased() {\r\n        this.controller.removeCeased();\r\n    }\r\n\r\n    protected regConfirmClose(confirmClose: ()=>Promise<boolean>) {\r\n        this.controller.regConfirmClose(confirmClose);\r\n    }\r\n}\r\n\r\nexport abstract class VPage<C extends Controller> extends View<C> {\r\n    constructor(coordinator: C) {\r\n        super(coordinator);\r\n    }\r\n\r\n    abstract open(param?:any):Promise<void>;\r\n\r\n    render(param?:any):JSX.Element {return null;}\r\n}\r\n\r\nexport type TypeVPage<C extends Controller> = new (coordinator: C)=>VPage<C>;\r\n\r\n","export * from './schema';\r\nexport * from './uiSchema';\r\n","import {observable, IObservableArray, computed} from 'mobx';\r\nimport {uid} from './uid';\r\n\r\nexport abstract class PageItems<T> {\r\n    constructor(itemObservable:boolean = false) {\r\n        this._items = observable.array<T>([], {deep:itemObservable});\r\n    }\r\n    private isFirst: boolean = true;\r\n    @observable loading: boolean = false;\r\n    @observable private beforeLoad: boolean = true;\r\n    @observable protected loaded: boolean = false;\r\n    protected _items:IObservableArray<T>;\r\n    @observable allLoaded: boolean = false;\r\n    @computed get items():IObservableArray<T> {\r\n        if (this.beforeLoad === true) return null;\r\n        if (this.loaded === false) return undefined;\r\n        return this._items;\r\n    }\r\n\r\n    @observable topDiv:string;\r\n    @observable bottomDiv:string;\r\n    scrollToTop() {\r\n        this.topDiv = '$$'+uid();\r\n    }\r\n    scrollToBottom() {\r\n        this.bottomDiv = '$$'+uid();\r\n    }\r\n\r\n    protected param: any;\r\n    protected firstSize = 100;\r\n    protected pageStart = undefined;\r\n    protected pageSize = 30;\r\n    protected appendPosition:'head'|'tail' = 'tail';\r\n\r\n    protected abstract async load(param:any, pageStart:any, pageSize:number):Promise<T[]>;\r\n    protected abstract setPageStart(item:T);\r\n\r\n    reset() {\r\n        this.isFirst = true;\r\n        this.beforeLoad = true;\r\n        this.loaded = false;\r\n        this.param = undefined;\r\n        this.allLoaded = false;\r\n        this._items.clear();\r\n        this.setPageStart(undefined);\r\n    }\r\n\r\n    append(item:T) {\r\n        if (this.appendPosition === 'tail')\r\n            this._items.unshift(item);\r\n        else\r\n            this._items.push(item);\r\n    }\r\n\r\n    async first(param:any):Promise<void> {\r\n        this.reset();\r\n        this.beforeLoad = false;\r\n        this.param = param;\r\n        await this.more();        \r\n    }\r\n\r\n    async more():Promise<void> {\r\n        if (this.allLoaded === true) return;\r\n        if (this.loading === true) return;\r\n        this.loading = true;\r\n        let pageSize = this.pageSize + 1;\r\n        if (this.isFirst === true) {\r\n            if (this.firstSize > this.pageSize) pageSize = this.firstSize+1;\r\n        }\r\n        let ret = await this.load(\r\n                this.param, \r\n                this.pageStart,\r\n                pageSize);\r\n        this.loading = false;\r\n        this.loaded = true;\r\n        let len = ret.length;\r\n        if (this.isFirst===true && len>this.firstSize ||\r\n            this.isFirst===false && len>this.pageSize)\r\n        {\r\n            this.allLoaded = false;\r\n            --len;\r\n            ret.splice(len, 1);\r\n        }\r\n        else {\r\n            this.allLoaded = true;\r\n        }\r\n        if (len === 0) {\r\n            this._items.clear();\r\n            return;\r\n        }\r\n        this.setPageStart(ret[len-1]);\r\n        if (this.appendPosition === 'tail')\r\n            this._items.push(...ret);\r\n        else\r\n            this._items.unshift(...ret.reverse());\r\n        this.isFirst = false;\r\n    }\r\n}\r\n","import {observable, computed} from 'mobx';\r\n\r\nexport interface Id {\r\n    id: number;\r\n}\r\n\r\nexport abstract class CacheIds<T extends Id> {\r\n    constructor(maxCount:number = 100) {\r\n        this.maxCount = maxCount;\r\n    }\r\n    private maxCount:number;\r\n    private arr:T[] = [];\r\n    @observable dict = new Map<number, T>();\r\n\r\n    loadIds(ids:number[]) {\r\n        let arr:number[] = [];\r\n        for (let id of ids) {\r\n            if (id === null) continue;\r\n            let item = this.dict.get(id);\r\n            if (item === undefined) {\r\n                arr.push(id);\r\n                item = {id:id} as T;\r\n                this.dict.set(id, item);\r\n            }\r\n        }                \r\n        this.loadId(arr);\r\n    }\r\n\r\n    get(id:number):T {\r\n        if (id === undefined || id === null) return null;\r\n        let item = this.dict.get(id);\r\n        if (item === undefined) {\r\n            this.dict.set(id, {id:id} as T);\r\n            this.loadId([id]);\r\n            item = this.dict.get(id);\r\n        }\r\n        return item;\r\n    }\r\n    private setItem(id:number, item:T) {\r\n        if (item === undefined) {\r\n            this.dict.set(id, null);\r\n            this.arr.push({id: id} as T);\r\n        }\r\n        else {\r\n            this.dict.set(id, item);\r\n            this.arr.push(item);\r\n        }\r\n        if (this.arr.length > this.maxCount) {\r\n            item = this.arr.shift();\r\n            this.dict.delete(item.id);\r\n        }\r\n    }\r\n    private async loadId(ids:number[]) {\r\n        let items = await this._loadIds(ids);\r\n        if (items === undefined) {\r\n            for (let id of ids) {\r\n                if (id === null) continue;\r\n                let item = await this._loadId(id);\r\n                this.setItem(id, item);\r\n            }\r\n        }\r\n        else {\r\n            for (let id of ids) {\r\n                let item = items.find(v => v.id === id);\r\n                this.setItem(id, item);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected abstract async _loadIds(ids:number[]):Promise<T[]>;\r\n    protected abstract async _loadId(id:number):Promise<T>;\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {FormView, FormProps} from './formView';\r\n\r\nexport function tonvaDebug() {\r\n    let a = 0;\r\n}\r\n\r\nexport interface TonvaFormProps extends FormProps {\r\n    className?: string;\r\n    initValues?: any;\r\n}\r\n\r\n@observer \r\nexport class TonvaForm extends React.Component<TonvaFormProps, {}> {\r\n    formView: FormView;\r\n    constructor(props:TonvaFormProps) {\r\n        super(props);\r\n        this.formView = new FormView(this.props);\r\n    }\r\n    componentWillMount() {\r\n        this.formView.setInitValues(this.props.initValues);\r\n    }\r\n    debug() {\r\n        let s = null;\r\n    }\r\n    render() {\r\n        let {className, children, initValues} = this.props;\r\n        return <div className={className}>\r\n            {\r\n                children === undefined? \r\n                    this.formView.render() : \r\n                    <form onSubmit={this.formView.onSubmit}>{children}</form>\r\n            }\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nexport interface Action {\r\n    icon?: string;\r\n    caption?: string;\r\n    action?: () => void;\r\n}\r\n\r\nexport interface DropdownActionsProps {\r\n    icon?: string;\r\n    actions: Action[];\r\n    isRight?: boolean;\r\n}\r\n\r\nexport interface DropdownActionsState {\r\n    dropdownOpen: boolean;\r\n}\r\n\r\nexport class DropdownActions extends React.Component<DropdownActionsProps, DropdownActionsState> {\r\n    private menu: HTMLDivElement;\r\n    private button: HTMLElement;\r\n    constructor(props:DropdownActionsProps) {\r\n        super(props);\r\n        this.state = {\r\n            dropdownOpen: false\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        document.addEventListener('click', this.handleDocumentClick);\r\n        document.addEventListener('touchstart', this.handleDocumentClick);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('click', this.handleDocumentClick);\r\n        document.removeEventListener('touchstart', this.handleDocumentClick);\r\n    }\r\n\r\n    private handleDocumentClick = (evt:any) => {\r\n        if (this.state.dropdownOpen === false) return;\r\n        if (this.button && this.button.contains(evt.target)) return;\r\n        if (!this.menu) return;\r\n        //if (!this.menu.contains(evt.target)) \r\n        this.toggle();\r\n    }\r\n\r\n    private toggle = () => {\r\n        this.setState({\r\n            dropdownOpen: !this.state.dropdownOpen\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let {icon, actions, isRight} = this.props;\r\n        if (isRight === undefined) isRight = true;\r\n        let hasIcon = actions.some(v => v.icon!==undefined);\r\n        let {dropdownOpen} = this.state;\r\n        //isOpen={this.state.dropdownOpen} toggle={this.toggle}\r\n        return <div className=\"dropdown\">\r\n            <button ref={v=>this.button=v} className=\"cursor-pointer dropdown-toggle btn btn-sm\"\r\n                data-toggle=\"dropdown\"\r\n                aria-expanded={dropdownOpen}\r\n                onClick={this.toggle}>\r\n                <i className={classNames('fa', 'fa-'+(icon||'ellipsis-v'))} />\r\n            </button>\r\n            <div ref={v => this.menu=v} className={classNames({\"dropdown-menu\":true, \"dropdown-menu-right\":isRight, \"show\":dropdownOpen})}>\r\n                {\r\n                    actions.map((v,index) => {\r\n                        let {icon, caption, action} = v;\r\n                        if (icon === undefined && caption === undefined) \r\n                            return <div className=\"dropdown-divider\" />;\r\n                        let i:any;\r\n                        if (hasIcon === true) {\r\n                            if (icon !== undefined) icon = 'fa-' + icon;\r\n                            i = <><i className={classNames('fa', icon, 'fa-fw')} aria-hidden={true}></i>&nbsp; </>;\r\n                        }\r\n                        if (action === undefined) \r\n                            return <h6 className=\"dropdown-header\">{i} {caption}</h6>;\r\n                        return <a className=\"dropdown-item\" key={index} href=\"#\" onClick={(evt:React.MouseEvent<HTMLAnchorElement>)=>{ evt.preventDefault();action()}}>{i} {caption}</a>\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\n/*\r\nexport class DropdownActions extends React.Component<DropdownActionsProps, DropdownActionsState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dropdownOpen: false\r\n        };\r\n    }\r\n    private toggle = () => {\r\n        this.setState({\r\n            dropdownOpen: !this.state.dropdownOpen\r\n        });\r\n    }\r\n    render() {\r\n        let {icon, actions, isRight} = this.props;\r\n        if (isRight === undefined) isRight = true;\r\n        let hasIcon = actions.some(v => v.icon!==undefined);\r\n        return <UncontrolledButtonDropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\r\n            <DropdownToggle caret={true} size=\"sm\" className=\"cursor-pointer\">\r\n                <i className={classNames('fa', 'fa-'+(icon||'ellipsis-v'))} />\r\n            </DropdownToggle>\r\n            <DropdownMenu right={isRight}>\r\n                {actions.map((v,index) => {\r\n                    let {icon, caption, action} = v;\r\n                    if (icon === undefined && caption === undefined) \r\n                        return <div className=\"dropdown-divider\" />;\r\n                    let i;\r\n                    if (hasIcon === true) {\r\n                        if (icon !== undefined) icon = 'fa-' + icon;\r\n                        i = <><i className={classNames('fa', icon, 'fa-fw')} aria-hidden={true}></i>&nbsp; </>;\r\n                    }\r\n                    if (action === undefined) \r\n                        return <h6 className=\"dropdown-header\">{i} {caption}</h6>;\r\n                    return <DropdownItem key={index} onClick={action}>{i} {caption}</DropdownItem>\r\n                })}\r\n            </DropdownMenu>\r\n        </UncontrolledButtonDropdown>\r\n    }\r\n}\r\n*/","import * as React from 'react';\r\n\r\nexport interface EasyDateProps {\r\n    date: Date | string;\r\n}\r\n\r\nexport class EasyDate extends React.Component<EasyDateProps> {\r\n    render() {\r\n        let {date} = this.props;\r\n        if (!date) return null;\r\n        let d = (typeof date === 'string')? new Date(Date.parse(date)) : date;\r\n        let now = new Date();\r\n        let tick = now.getTime() - d.getTime();\r\n        let nDate=now.getDate();\r\n        let _date=d.getDate(), hour=d.getHours(), minute=d.getMinutes(), month=d.getMonth()+1;\r\n        let hm = hour + ((minute<10?':0':':') + minute);\r\n        if (tick < -24*3600*1000) return d.getFullYear()+'年'+month+'月'+_date+'日 ' + hm;\r\n        if (tick < 24*3600*1000) {\r\n            return _date!==nDate? \r\n                (tick < 0? '明天 ' : '昨天 ') + hm \r\n                : hm;\r\n        }\r\n        if (tick < 365*24*3600*1000) {\r\n            return month+'月'+_date+'日 ';\r\n        }\r\n        return d.getFullYear()+'年'+month+'月'+_date+'日';\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as className from 'classnames';\r\nimport {observer} from 'mobx-react';\r\n\r\nexport interface MediaProps {\r\n    icon: string|JSX.Element;\r\n    main: string|JSX.Element;\r\n    discription?: string | JSX.Element;\r\n    px?: number;\r\n    py?: number;\r\n}\r\n\r\nconst imgStyle = {\r\n    width: '4rem', \r\n    height: '4rem',\r\n};\r\n\r\nexport class Media extends React.Component<MediaProps> {\r\n    render() {\r\n        let {icon, main, discription, px, py} = this.props;\r\n        let disp;\r\n        if (typeof discription === 'string')\r\n            disp = <div>{discription}</div>;\r\n        else\r\n            disp = discription;\r\n        let img = icon;\r\n        if (typeof icon === 'string')\r\n            img = <img className=\"d-flex mr-3\" src={icon} alt=\"img\" style={imgStyle} />;\r\n        let cn = className(\r\n            'media', \r\n            px===undefined? 'px-0':'px-'+px, \r\n            py===undefined? 'py-2':'py-'+py);\r\n        return <div className={cn}>\r\n            {img}\r\n            <div className=\"media-body\">\r\n                <h5 className=\"mt-0\">{main}</h5>\r\n                {disp}\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\n\r\nexport interface SearchBoxProps {\r\n    className?: string;\r\n    label?: string;\r\n    initKey?: string;\r\n    placeholder?: string;\r\n    buttonText?: string;\r\n    maxLength?: number;\r\n    size?: 'sm' | 'md' | 'lg';\r\n    inputClassName?: string;\r\n    onSearch: (key:string)=>Promise<void>;\r\n    onFocus?: ()=>void;\r\n    allowEmptySearch?: boolean;\r\n}\r\n\r\n/*\r\nexport interface SearchBoxState {\r\n    disabled: boolean;\r\n}*/\r\n\r\nexport class SearchBox extends React.Component<SearchBoxProps> { //}, SearchBoxState> {\r\n    private input: HTMLInputElement;\r\n    private key: string = null;\r\n    @observable private disabled: boolean;\r\n\r\n    private onChange = (evt: React.ChangeEvent<any>) => {\r\n        this.key = evt.target.value;\r\n        if (this.key !== undefined) {\r\n            this.key = this.key.trim();\r\n            if (this.key === '') this.key = undefined;\r\n        }\r\n        if (this.props.allowEmptySearch !== true) {\r\n            this.disabled = !this.key;\r\n        }\r\n    }\r\n    private onSubmit = async (evt: React.FormEvent<any>) => {\r\n        evt.preventDefault();\r\n        if (this.key === null) this.key = this.props.initKey || '';\r\n        if (this.props.allowEmptySearch !== true) {\r\n            if (!this.key) return;\r\n            if (this.input) this.input.disabled = true;\r\n        }\r\n        await this.props.onSearch(this.key);\r\n        if (this.input) this.input.disabled = false;\r\n    }\r\n    clear() {\r\n        if (this.input) this.input.value = '';\r\n    }\r\n    render() {\r\n        let {className, inputClassName, onFocus,\r\n            label, placeholder, buttonText, maxLength, size} = this.props;\r\n        let inputSize:string;\r\n        switch (size) {\r\n            default:\r\n            case 'sm': inputSize = 'input-group-sm'; break;\r\n            case 'md': inputSize = 'input-group-md'; break;\r\n            case 'lg': inputSize = 'input-group-lg'; break;\r\n        }\r\n        let lab:any;\r\n        if (label !== undefined) lab = <label className=\"input-group-addon\">{label}</label>;\r\n        return <form className={className} onSubmit={this.onSubmit} >\r\n            <div className={classNames(\"input-group\", inputSize)}>\r\n                {lab}\r\n                <input ref={v=>this.input=v} onChange={this.onChange}\r\n                    type=\"text\"\r\n                    name=\"key\"\r\n                    onFocus={onFocus}\r\n                    className={classNames('form-control', inputClassName || 'border-primary')}\r\n                    placeholder={placeholder}\r\n                    defaultValue={this.props.initKey}\r\n                    maxLength={maxLength} />\r\n                <div className=\"input-group-append\">\r\n                    <button className=\"btn btn-primary\"\r\n                        type=\"submit\"\r\n                        disabled={this.disabled}>\r\n                        <i className='fa fa-search' />\r\n                        <i className=\"fa\"/>\r\n                        {buttonText}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </form>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport className from 'classnames';\r\nimport {FormProps, FormRow, SubmitResult, FormView, TonvaForm} from '../form';\r\n\r\nexport interface Step {\r\n    formRows: FormRow[];\r\n    next: undefined | string | ((values:any) => string);    // 返回下一步的step名称或者直接就是名称\r\n    ex?: any;                                   // 每一步额外的参数\r\n}\r\n\r\nexport interface MultiStepProps {\r\n    className?: string;\r\n    header?: (step:Step, num:number) => JSX.Element; //name: step name, num: 第几步，1开始\r\n    footer?: (step:Step, num:number) => JSX.Element; //name: step name, num: 第几步，1开始\r\n    steps: {[name:string]: Step};\r\n    first: string;         // 第一步的名字\r\n    onSubmit: (values:any) => Promise<SubmitResult|undefined>;\r\n    submitButton?: string|JSX.Element;\r\n}\r\n\r\nexport interface StepView {\r\n    stepName: string;\r\n    step: Step;\r\n    props: FormProps;\r\n    //view: JSX.Element;\r\n}\r\nexport interface MultiStepState {\r\n    //num: number;\r\n    //step: Step;\r\n    //formView: FormView;\r\n    topView: StepView;\r\n    stepViews: StepView[];\r\n}\r\n\r\nexport class MultiStep extends React.Component<MultiStepProps, MultiStepState> {\r\n    private values: any = {};\r\n    private stepViews: StepView[] = [];\r\n    private topView: StepView;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            topView: undefined,\r\n            stepViews: [],\r\n        }\r\n        this.onPrev = this.onPrev.bind(this);\r\n        this.onNext = this.onNext.bind(this);\r\n    }\r\n    \r\n    private setStep(stepName: string) {\r\n        let step = this.props.steps[stepName];\r\n        if (step === undefined) return; //throw new Error('Unknown step name: ' + stepName);\r\n        if (this.topView !== undefined) this.stepViews.push(this.topView);\r\n        let otherButton, onOther;\r\n        if (this.stepViews.length > 0) {\r\n            otherButton = <ButtonConten prefix=\"undo\" text=\"上一步\" />;\r\n            onOther = this.onPrev;\r\n        }\r\n        let {header, footer} = this.props;\r\n        let btnContent = step.next === undefined?\r\n            {prefix: 'cloud-upload', text: this.props.submitButton || '提交'} :\r\n            {suffix: 'arrow-right', text: '下一步'}\r\n        let formProps = {\r\n            formRows: step.formRows,\r\n            submitButton: <ButtonConten {...btnContent} />,\r\n            onSubmit: this.onNext,\r\n            otherButton: otherButton,\r\n            onOther: onOther,\r\n        };\r\n        let num = this.stepViews.length + 1;\r\n        this.topView = {\r\n            stepName: stepName,\r\n            step: step,\r\n            props: formProps,\r\n        };\r\n        this.setState({\r\n            topView: this.topView,\r\n            stepViews: this.stepViews\r\n        });\r\n    }\r\n    componentWillMount() {\r\n        this.setStep(this.props.first);\r\n    }\r\n    private onPrev(values:any) {\r\n        _.assign(this.values, values);\r\n        this.topView = this.stepViews.pop();\r\n        this.setState({\r\n            topView: this.topView,\r\n            stepViews: this.stepViews\r\n        });\r\n    }\r\n    private onNext(values:any): Promise<SubmitResult|undefined> {\r\n        _.assign(this.values, values);\r\n        //let {num, step} = this.state;\r\n        let {next} = this.topView.step;\r\n        if (next === undefined) {\r\n            return this.props.onSubmit(this.values)\r\n        }\r\n        let nextStepName:string;\r\n        if (typeof next === 'string') {\r\n            nextStepName = next;\r\n        }\r\n        else {\r\n            nextStepName = next(this.values);\r\n        }\r\n        this.setStep(nextStepName);\r\n    }\r\n    render() {\r\n        let {className, header, footer} = this.props;\r\n        let {topView, stepViews} = this.state;\r\n        let {stepName, step} = topView;\r\n        let hidden = {visibility: 'hidden'};\r\n        let num = stepViews.length + 1;\r\n        return <div className={className}>\r\n            <div>\r\n                {header && header(step, num)}\r\n                <TonvaForm key={stepName} initValues={this.values} {...topView.props} />\r\n                {footer && footer(step, num)}\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst ButtonConten = (props:{prefix?:string, text?:string|JSX.Element, suffix?:string}) => {\r\n    let {prefix, text, suffix} = props;\r\n    let pIcon, sIcon;\r\n    if (prefix !== undefined) pIcon = <i className={className('fa', 'fa-' + prefix)} />;\r\n    if (suffix !== undefined) sIcon = <i className={className('fa', 'fa-' + suffix)} />;\r\n    return <React.Fragment>{pIcon} {props.text} {sIcon}</React.Fragment>;\r\n}\r\n    \r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport '../css/va-badge.css';\r\n\r\nexport interface BadgeProps {\r\n    className?: string;\r\n    badge?: string|number;\r\n    size?: 'xs' | 'sm' | 'lg';\r\n    color?: 'secondary'|'success'|'danger'|'primary'|'info'|'warning';\r\n    badgeAlign?: 'left'|'center'|'right';\r\n    badgeVertical?: 'top'|'middle'|'bottom';\r\n}\r\n\r\n@observer\r\nexport class Badge extends React.Component<BadgeProps> {\r\n    render() {\r\n        let {className, badge, size, color, badgeAlign, badgeVertical, children} = this.props;\r\n        let cn = classNames(\r\n            className,\r\n            'va-badge',\r\n            size && 'va-badge-'+size,\r\n            'va-badge-' + (color||'secondary'),\r\n            badgeAlign && 'va-badg-'+badgeAlign,\r\n            badgeVertical && 'va-badg-'+badgeVertical,\r\n        );\r\n        let b;\r\n        if (badge) b = <b>{badge}</b>;\r\n        return <div className={cn}>\r\n            {children}\r\n            {b}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport * as classNames from 'classnames';\r\nimport '../css/va-lmr.css';\r\n\r\nexport interface LMRProps {\r\n    className?: string | string[];\r\n    left?: string|JSX.Element;\r\n    right?: string|JSX.Element;\r\n    onClick?: ()=>void;\r\n}\r\n\r\n@observer\r\nexport class LMR extends React.Component<LMRProps> {\r\n    render() {\r\n        let {className, left, children, right, onClick} = this.props;\r\n        let l, r;\r\n        if (left !== undefined) l = <header>{left}</header>;\r\n        if (right !== undefined) r = <footer>{right}</footer>;\r\n        let cursor;\r\n        if (onClick !== undefined) cursor = 'cursor-pointer';\r\n        return <div className={classNames('va-lmr', className, cursor)} onClick={onClick}>\r\n            {l}\r\n            <div>{children}</div>\r\n            {r}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\n\r\nexport interface FAProps {\r\n    name: string;\r\n    className?: string;\r\n    size?: 'lg'|'2x'|'3x'|'4x'|'5x';\r\n    spin?: boolean;\r\n    fixWidth?: boolean;\r\n    border?: boolean;\r\n    pull?: 'left'|'right';\r\n    pulse?: boolean;\r\n    rotate?: 90|180|270;\r\n    flip?: 'horizontal'|'vertical';\r\n    inverse?: boolean;\r\n}\r\n\r\nexport class FA extends React.Component<FAProps> {\r\n    render() {\r\n        let {name, className, size, spin, fixWidth, border, pull, pulse, rotate, flip, inverse} = this.props;\r\n        let cn = classNames(className, 'fa',\r\n            name && ('fa-' + name),\r\n            size && 'fa-'+size,\r\n            fixWidth && 'fa-fw',\r\n            border && 'fa-border',\r\n            pull && 'fa-pull-' + pull,\r\n            spin && 'fa-spin',\r\n            pulse && 'fa-pulse',\r\n            rotate && 'fa-rotate-' + rotate,\r\n            flip && 'fa-flip-' + flip,\r\n            inverse && 'fa-inverse',\r\n        );\r\n        return <i className={cn} />\r\n    }\r\n}\r\n\r\nexport interface StackedFAProps {\r\n    className?: string;\r\n    size?: 'lg',\r\n}\r\nexport class StackedFA extends React.Component<StackedFAProps> {\r\n    render() {\r\n        let {className, size, children} = this.props;\r\n        let cn = classNames(\r\n            'fa-stack',\r\n            className,\r\n            size && 'fa-' + size);\r\n        return <span className={cn}>\r\n            {children}\r\n        </span>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\n\r\nexport const Muted = (props:any) => \r\n<small className={classNames('text-muted', props.className)} style={props.style}>\r\n    {props.children}\r\n</small>;\r\n","export * from './Badge';\r\nexport * from './LMR';\r\nexport * from './FA';\r\nexport * from './IconText';\r\nexport * from './Muted';\r\n","import * as React from 'react';\r\nimport { IObservableArray, computed } from 'mobx';\r\nimport { PageItems } from 'tonva-tools';\r\nimport {List} from './index';\r\n\r\nexport abstract class ListBase {\r\n    protected list: List;\r\n    constructor(list: List) {\r\n        this.list = list;\r\n    }\r\n    get isPaged():boolean {\r\n        let items = this.list.props.items;\r\n        return (items !== null && items !== undefined && Array.isArray(items) === false);\r\n    }\r\n    get items():any[]|IObservableArray<any> {\r\n        let items = this.list.props.items;\r\n        if (items === null) return null;\r\n        if (items === undefined) return undefined;\r\n        if (Array.isArray(items) === true)\r\n            return items as IObservableArray<any>;\r\n        else\r\n            return (items as PageItems<any>).items;\r\n    }\r\n    @computed get loading():boolean {\r\n        let items = this.list.props.items;\r\n        if (items === null) return false;\r\n        if (items === undefined) return true;\r\n        let pageItems = items as PageItems<any>;\r\n        if (pageItems.items === undefined) return false;\r\n        return pageItems.loading;\r\n    }\r\n    get selectedItems():any[] { return; }\r\n    updateProps(nextProps:any) {}\r\n    abstract render(item:any, index:number):JSX.Element;\r\n    protected renderContent(item:any, index:number) {\r\n        let {render} = this.list.props.item;\r\n        if (render === undefined) return <div className=\"px-3 py-2\">{JSON.stringify(item)}</div>;\r\n        return render(item, index);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {ListBase} from './base';\r\n\r\nexport class Clickable extends ListBase {\r\n    render(item:any, index:number):JSX.Element {\r\n        let {className, key, onClick} = this.list.props.item;\r\n        return <li key={key===undefined?index:key(item)} className={classNames('va-row-clickable', className)} onClick={()=>onClick(item)}>\r\n            {this.renderContent(item, index)}\r\n        </li>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {ListBase} from './base';\r\nimport { uid } from '../uid';\r\n\r\nexport class Static extends ListBase {\r\n    render(item:any, index:number):JSX.Element {\r\n        let {className, key, render} = this.list.props.item;\r\n        if (typeof item === 'string') {\r\n            let cn = classNames('va-list-gap', 'px-3', 'pt-1');\r\n            return <li key={uid()} className={cn}>{item}</li>;\r\n        }\r\n        return <li key={key===undefined?index:key(item)} className={classNames(className)}>\r\n            {this.renderContent(item, index)}\r\n        </li>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable, computed, IObservableArray} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport {ListBase} from './base';\r\nimport {uid} from '../uid';\r\nimport { PageItems } from 'tonva-tools';\r\n\r\nexport interface SelectableItem {\r\n    selected: boolean;\r\n    item: any;\r\n    labelId: string;\r\n}\r\n\r\nexport class Selectable extends ListBase {\r\n    private _items: SelectableItem[];\r\n    private _selectedItems: any[];\r\n    private input: HTMLInputElement;\r\n    private buildItems() {\r\n        console.log('buildItems in selectable.tsx');\r\n        let {items, selectedItems, compare} = this.list.props;\r\n        let itemsArray:any[] | IObservableArray<any>;\r\n        if (items === undefined) {\r\n            return this._items = undefined;\r\n        }\r\n        if (items === null) {\r\n            return this._items = null;\r\n        }\r\n        if (Array.isArray(items) === true) {\r\n            itemsArray = items as any;\r\n        }\r\n        else {\r\n            itemsArray = (items as PageItems<any>).items;\r\n        }\r\n        //let items = this.items;\r\n        this._selectedItems = selectedItems;\r\n        if (selectedItems === undefined) {\r\n            return this._items = itemsArray.map(v => {\r\n                return {\r\n                    selected:false, \r\n                    item:v, \r\n                    labelId:uid()\r\n                };\r\n            });\r\n        }\r\n        if (compare === undefined) {\r\n            return this._items = itemsArray.map(v => {\r\n                return {\r\n                    selected:selectedItems.find(si => si === v) !== undefined, \r\n                    item:v, \r\n                    labelId:uid()\r\n                };\r\n            });\r\n        }\r\n        return this._items = itemsArray.map(v => {\r\n            return {\r\n                selected:selectedItems.find(si => compare(v, si)) !== undefined, \r\n                item:v, \r\n                labelId:uid()\r\n            };\r\n        });\r\n    }\r\n    @computed get items() {\r\n        //if (this._items === undefined) \r\n        this.buildItems();\r\n        return this._items;\r\n    }\r\n    updateProps(nextProps:any) {\r\n        if (nextProps.selectedItems === this._selectedItems) return;\r\n        this.buildItems();\r\n    }\r\n    private onSelect(item:SelectableItem, selected:boolean) {\r\n        item.selected = selected;\r\n        let anySelected = this._items.some(v => v.selected);\r\n        this.list.props.item.onSelect(item.item, selected, anySelected);\r\n    }\r\n    \r\n    get selectedItems():any[] {\r\n        return this._items.filter(v => v.selected === true).map(v => v.item);\r\n    }\r\n    /*\r\n    set selectedItems(value: any[]) {\r\n        if (value === undefined) return;\r\n        if (this._items === undefined) return;\r\n        let sLen = this._items.length;\r\n        let list = value.slice();\r\n        for (let n=0; n<sLen; n++) {\r\n            let sItem = this._items[n];\r\n            let len = list.length;\r\n            if (len === 0) break;\r\n            let item = sItem.item;\r\n            for (let i=0; i<len; i++) {\r\n                let v = list[i];\r\n                if (item === v) {\r\n                    sItem.selected = true;\r\n                    value.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n        };\r\n    }\r\n    */\r\n    //w-100 mb-0 pl-3\r\n    //m-0 w-100\r\n    render(item:SelectableItem, index:number):JSX.Element {\r\n        let {className, key, render, onSelect} = this.list.props.item;\r\n        let {labelId, selected} = item;\r\n        return <li key={key===undefined?index:key(item)} className={classNames(className)}>\r\n            <div className=\"d-flex align-items-center px-3\">\r\n                <input ref={input=>{\r\n                        if (!input) return;\r\n                        this.input = input; input.checked = selected;\r\n                    }}\r\n                    className=\"\" type=\"checkbox\" value=\"\" id={labelId}\r\n                    defaultChecked={selected}\r\n                    onChange={(e)=>{\r\n                        this.onSelect(item, e.target.checked)} \r\n                    }/>\r\n                <label className=\"\" style={{flex:1, marginBottom:0}} htmlFor={labelId}>\r\n                    {this.renderContent(item.item, index)}\r\n                </label>\r\n            </div>\r\n        </li>\r\n    }\r\n}\r\n/*\r\n<label>\r\n<label className=\"custom-control custom-checkbox\">\r\n    <input type='checkbox' className=\"custom-control-input\"\r\n        //checked={selected}\r\n        onChange={(e)=>this.onSelect(item, e.target.checked)} />\r\n    <span className=\"custom-control-indicator\" />\r\n</label>\r\n{this.renderContent(item.item, index)}\r\n</label>\r\n*/\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {PageItems} from 'tonva-tools';\r\nimport {ListBase} from './base';\r\nimport {Clickable} from './clickable';\r\nimport {Static} from './static';\r\nimport {Selectable} from './selectable';\r\nimport \"../css/va-list.css\";\r\nimport { IObservableArray } from 'mobx';\r\n\r\ntype StaticRow = string|JSX.Element|(()=>string|JSX.Element);\r\n\r\nexport interface ListProps {\r\n    className?: string|string[];\r\n    items: any[] | IObservableArray<any> | PageItems<any>;\r\n    item: {\r\n        className?: string|string[];\r\n        render?: (item:any, index:number) => JSX.Element;\r\n        onSelect?: (item:any, isSelected:boolean, anySelected:boolean)=>void;\r\n        onClick?: (item:any)=>void;\r\n        key?: (item:any)=>string;\r\n    };\r\n    compare?:(item:any, selectItem)=>boolean;\r\n    selectedItems?:any[];\r\n    header?: StaticRow;\r\n    footer?: StaticRow;\r\n    before?: StaticRow;\r\n    loading?: StaticRow;\r\n    none?: StaticRow;\r\n}\r\n\r\n@observer\r\nexport class List extends React.Component<ListProps> {\r\n    private listBase: ListBase;\r\n    constructor(props:ListProps) {\r\n        super(props);\r\n        let {item} = this.props;\r\n        let {onClick, onSelect} = item;\r\n        if (onSelect !== undefined)\r\n            this.listBase = new Selectable(this);\r\n        else if (onClick !== undefined)\r\n            this.listBase = new Clickable(this);\r\n        else\r\n            this.listBase = new Static(this);\r\n    }\r\n    _$scroll = (direct: 'top'|'bottom') => {\r\n        console.log('############### items scroll to ' + direct);\r\n    }\r\n    componentWillUpdate(nextProps:ListProps, nextState, nextContext) {\r\n        this.listBase.updateProps(nextProps);\r\n    }\r\n    get selectedItems():any[] {\r\n        return this.listBase.selectedItems;\r\n    }\r\n    render() {\r\n        let {className, header, footer, before, loading, none, item, selectedItems} = this.props;\r\n        if (before === undefined) before = 'before';\r\n        if (loading === undefined) loading = 'loading';\r\n        if (none === undefined) none = 'none';        \r\n        //this.listBase.selectedItems = selectedItems;\r\n        let {isPaged, items, loading:isLoading} = this.listBase;\r\n        function staticRow(row:StaticRow, type:string) {\r\n            if (!row) return;\r\n            switch (typeof row) {\r\n                default:\r\n                case 'string': return <li className={\"va-list-\"+type}>{row}</li>;\r\n                case 'function': return <li className={\"va-list-\"+type}>{(row as ()=>string|JSX.Element)()}</li>;\r\n                case 'object': return <li>{row}</li>\r\n            } \r\n        }\r\n        let content:any;\r\n        if (items === null)\r\n            content = staticRow(before, 'before');\r\n        else if (items === undefined)\r\n            content = staticRow(loading, 'loading');\r\n        else if (items.length === 0)\r\n            content = staticRow(none, 'none');\r\n        else {\r\n            content = items.map((item, index) => {\r\n                return this.listBase.render(item, index);\r\n            });\r\n        }\r\n        return <ul className={classNames('va-list', className)}>\r\n            {staticRow(header, 'header')}\r\n            {content}\r\n            {staticRow(footer, 'footer')}\r\n        </ul>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\n\r\nexport abstract class ItemEdit {\r\n    protected name: string;\r\n    protected itemSchema: ItemSchema;\r\n    protected uiItem:UiItem;\r\n    protected value: any;\r\n    protected label: string;\r\n\r\n    @observable protected isChanged: boolean = false;\r\n    protected newValue: any;\r\n\r\n    constructor(itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any) {\r\n        this.itemSchema = itemSchema;\r\n        this.uiItem = uiItem\r\n        this.value = value;\r\n        let {name} = itemSchema;\r\n        this.name = name;\r\n        this.label = label;\r\n    }\r\n    async start():Promise<any> {\r\n        return await this.internalStart();\r\n    }\r\n\r\n    protected abstract internalStart():Promise<any>;\r\n\r\n    async end():Promise<any> {\r\n        await this.internalEnd()\r\n    }\r\n\r\n    protected async internalEnd():Promise<void> {nav.pop()}\r\n}\r\n","import * as React from 'react';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { ItemEdit } from './itemEdit';\r\n\r\nexport class StringItemEdit extends ItemEdit {\r\n    protected uiItem: UiTextItem;\r\n    protected async internalStart():Promise<any> {\r\n        return new Promise<any>((resolve, reject) => {\r\n            let element = React.createElement(this.page, {resolve:resolve, reject:reject});\r\n            nav.push(element,reject);\r\n        });\r\n    }\r\n\r\n    private onChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.newValue = evt.target.value;\r\n        let preValue = this.value;\r\n        this.isChanged = (this.newValue != preValue);\r\n    }\r\n\r\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\r\n        let {resolve, reject} = props;\r\n        let right = <button\r\n            className=\"btn btn-sm btn-success\"\r\n            disabled={!this.isChanged}\r\n            onClick={()=>resolve(this.newValue)}>保存</button>;\r\n        return <Page header={'更改' + this.label} right={right}>\r\n            <div className=\"m-3\">\r\n                <input type=\"text\" \r\n                    onChange={this.onChange}\r\n                    className=\"form-control\" \r\n                    defaultValue={this.value} />\r\n                {\r\n                    this.uiItem && <div className=\"small muted m-2\">{this.uiItem.placeholder}</div>\r\n                }\r\n            </div>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\r\nimport { ResUploader } from '../resUploader';\r\nimport { Image } from '../image';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { ItemEdit } from './itemEdit';\r\n\r\nexport class ImageItemEdit extends ItemEdit {\r\n    protected uiItem: UiTextItem;\r\n    private resUploader: ResUploader;\r\n    @observable private resId:string;\r\n\r\n    protected async internalStart():Promise<any> {\r\n        this.resId = this.value;\r\n        return new Promise<any>((resolve, reject) => {\r\n            nav.push(React.createElement(this.page, {resolve:resolve, reject:reject}), ()=>reject());\r\n        });\r\n    }\r\n\r\n    /*\r\n    private onChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.newValue = evt.target.value;\r\n        let preValue = this.value;\r\n        this.isChanged = (this.newValue != preValue);\r\n    }\r\n    */\r\n\r\n    private upload = async () => {\r\n        if (!this.resUploader) return;\r\n        this.resId = await this.resUploader.upload();\r\n        this.isChanged = (this.resId != this.value);\r\n    }\r\n\r\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\r\n        let {resolve, reject} = props;\r\n        let right = <button\r\n            className=\"btn btn-sm btn-success\"\r\n            disabled={!this.isChanged}\r\n            onClick={()=>resolve(this.resId)}>保存</button>;\r\n        return <Page header={'更改' + this.label} right={right}>\r\n            <div className=\"my-3 px-3 py-3 bg-white\">\r\n                <div>上传图片：\r\n                    <ResUploader ref={v=>this.resUploader=v} />\r\n                    <button className=\"btn btn-primary\" onClick={this.upload}>上传</button>\r\n                </div>\r\n                <div className=\"small muted my-4\">支持JPG、GIF、PNG格式图片，不超过2M。</div>\r\n                <div className=\"d-flex\">\r\n                    <div className=\"mr-5\" style={{border: '1px dotted gray', padding: '8px'}}>\r\n                        <Image className=\"w-12c h-12c\" src={this.resId} />\r\n                    </div>\r\n                    <div className=\"ml-5\">\r\n                        <div className=\"small\">图片预览</div>\r\n                        <Image className=\"w-4c h-4c mt-3\" src={this.resId} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\r\nimport { observer } from 'mobx-react';\r\nimport { ItemEdit } from './itemEdit';\r\nimport { StringItemEdit } from './stringItemEdit';\r\nimport { ImageItemEdit } from './imageItemEdit';\r\nimport { Image } from '../image';\r\n\r\nexport interface EditProps {\r\n    className?: string;\r\n    schema: Schema;\r\n    data: any;\r\n    onItemClick?: (itemSchema: ItemSchema, uiItem: UiItem, value: any) => Promise<void>;\r\n    onItemChanged?: (itemSchema: ItemSchema, newValue:any, preValue:any) => Promise<void>;\r\n    uiSchema?: UiSchema;\r\n    sepClassName?: string;\r\n    topBorderClassName?: string;\r\n    bottomBorderClassName?: string;\r\n    rowContainerClassName?: string;\r\n}\r\n\r\n@observer\r\nexport class Edit extends React.Component<EditProps> {\r\n    private defaultSepClassName = \"border-top edit-sep-light-gray\";\r\n    private defaultRowContainerClassName = \"px-3 py-2 cursor-pointer bg-white\";\r\n    private topBorder:JSX.Element;\r\n    private bottomBorder:JSX.Element;\r\n    private rowContainerClassName?: string;\r\n    private sep:JSX.Element;\r\n    private uiSchema: {[name:string]: UiItem};\r\n\r\n    constructor(props: EditProps) {\r\n        super(props);\r\n        let {topBorderClassName, bottomBorderClassName, sepClassName, rowContainerClassName, uiSchema} = props;\r\n        this.topBorder = <div className={topBorderClassName || this.defaultSepClassName} />;\r\n        this.bottomBorder = <div className={bottomBorderClassName || this.defaultSepClassName} />;\r\n        this.rowContainerClassName = rowContainerClassName || this.defaultRowContainerClassName;\r\n        this.sep = <div className={sepClassName || this.defaultSepClassName} />;\r\n        this.uiSchema = (uiSchema && uiSchema.items) || {};\r\n    }\r\n\r\n    render() {\r\n        let elItems:JSX.Element[] = [];\r\n        let {schema} = this.props;\r\n        let len = schema.length;\r\n\r\n        elItems.push(this.topBorder);\r\n        for (let i=0; i<len; i++) {\r\n            if (i>0) elItems.push(this.sep);\r\n            elItems.push(this.renderRow(schema[i]));\r\n        }\r\n        elItems.push(this.bottomBorder);\r\n\r\n        return <div>\r\n            {elItems.map((v, index) => <React.Fragment key={index}>{v}</React.Fragment>)}\r\n        </div>;\r\n    }\r\n\r\n    private renderRow(itemSchema: ItemSchema):JSX.Element {\r\n        let {name, type} = itemSchema;\r\n        let divValue:any;\r\n        let uiItem = this.uiSchema[name];\r\n        let label:string = (uiItem && uiItem.label) || name;\r\n        let value:any = this.props.data[name];\r\n        switch (type) {\r\n            default:\r\n                divValue = <b>{value}</b>;\r\n                break;\r\n            case 'image':\r\n                divValue = <Image className=\"w-4c h-4c\" src={value} />;\r\n                break;\r\n        }\r\n        return <div className={this.rowContainerClassName} onClick={async ()=>await this.rowClick(itemSchema, uiItem, label, value)}>\r\n            <div className=\"row align-items-center\">\r\n                <div className=\"col-sm-2\">{label}</div>\r\n                <div className=\"col-sm-9 text-right\">{divValue}</div>\r\n                <div className=\"col-sm-1 text-right\"><i className=\"fa fa-chevron-right\" /></div>\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    private rowClick = async (itemSchema: ItemSchema, uiItem: UiItem, label:string, value: any) => {\r\n        let {onItemChanged, onItemClick} = this.props;\r\n        let changeValue:any;\r\n        if (onItemClick !== undefined) {\r\n            await onItemClick(itemSchema, uiItem, value);\r\n            return;\r\n        }\r\n        let itemEdit:ItemEdit = createItemEdit(itemSchema, uiItem, label, value);\r\n        try {\r\n            changeValue = await itemEdit.start();\r\n            if (changeValue != value) {\r\n                if (onItemChanged === undefined) {\r\n                    alert(`${itemSchema.name} value changed, new: ${changeValue}, pre: ${value}`);\r\n                }\r\n                else {\r\n                    await onItemChanged(itemSchema, changeValue, value);\r\n                }\r\n            }\r\n            await itemEdit.end();\r\n        }\r\n        catch (err) {\r\n            console.log('no value changed');\r\n        }\r\n    }\r\n}\r\n\r\nfunction createItemEdit(itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any):ItemEdit {\r\n    let itemEdit: new (itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any) => ItemEdit;\r\n    if (uiItem !== undefined) {\r\n        switch (uiItem.widget) {\r\n            case 'text': itemEdit = StringItemEdit; break;\r\n            case 'image': itemEdit = ImageItemEdit; break;\r\n        }\r\n    }\r\n    else {\r\n        switch (itemSchema.type) {\r\n            case 'string': itemEdit = StringItemEdit; break;\r\n            case 'image': itemEdit = ImageItemEdit; break;\r\n        }\r\n    }\r\n    if (itemEdit === undefined) return;\r\n    return new itemEdit(itemSchema, uiItem, label, value);\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport * as className from 'classnames';\r\nimport {ListView} from '../listView';\r\nimport {PropGridProps} from './PropGrid';\r\nimport {LabeledProp, StringProp, NumberProp, ListProp, ComponentProp} from './propView';\r\n\r\nexport abstract class PropRow {\r\n    setValues(values: any) {}\r\n    abstract render(key:string): any;\r\n}\r\n\r\nexport class PropBorder extends PropRow {\r\n    render(key:string): JSX.Element {\r\n        return <div key={'_b_' + key} className=\"\">\r\n            <div className=\"col-sm-12\">\r\n                <div style={{borderTop: '1px solid #f0f0f0'}} />\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class PropGap extends PropRow {\r\n    private param: string;\r\n    constructor(param?: string) {\r\n        super();\r\n        this.param = param;\r\n    }\r\n    render(key:string): JSX.Element {\r\n        let w: string;\r\n        switch (this.param) {\r\n            default: w = 'py-2'; break;\r\n            case '=': w = 'py-1'; break;\r\n            case '-': w = 'pb-1'; break;\r\n        }\r\n        let cn = className(w);\r\n        return <div key={'_g_' + key} className={cn} style={{backgroundColor: '#f0f0f0'}} />;\r\n    }\r\n}\r\n\r\nconst valueAlignStart = 'justify-content-start';\r\nconst valueAlignCenter = 'justify-content-center';\r\nconst valueAlignEnd = 'justify-content-end';\r\nexport abstract class LabeledPropRow extends PropRow {\r\n    protected gridProps: PropGridProps;\r\n    protected prop: LabeledProp;\r\n    protected content: any;\r\n    //protected values: any;\r\n    constructor(gridProps:PropGridProps, prop: LabeledProp) {\r\n        super();\r\n        this.gridProps = gridProps;\r\n        this.prop = prop;\r\n        //this.values = values;\r\n    }\r\n    render(key:string):any {\r\n        let {onClick, bk} = this.prop;\r\n        let cn = className({\r\n            \"cursor-pointer\": onClick !== undefined,\r\n            \"bg-white\": bk === undefined, \r\n            \"row\": true\r\n        });\r\n        return <div key={key} className={cn} onClick={onClick}>\r\n            {this.renderLabel()}\r\n            {this.renderProp()}\r\n        </div>;\r\n    }\r\n    protected renderLabel():any {\r\n        let {label} = this.prop;\r\n        if (label === undefined) return null;\r\n        return <label className=\"col-sm-2 col-form-label\">\r\n            {label}\r\n        </label>;\r\n    }\r\n    protected renderProp():any {\r\n        let {label, full} = this.prop as any;\r\n        let align, vAlign;\r\n        switch (this.gridProps.alignValue) {\r\n            case 'left': align = valueAlignStart; break;\r\n            case 'center': align = valueAlignCenter; break;\r\n            case 'right': align = valueAlignEnd; break;\r\n        }\r\n        switch (this.prop.vAlign) {\r\n            case 'top': vAlign = 'align-items-start'; break;\r\n            default:\r\n            case 'center': vAlign = 'align-items-center'; break;\r\n            case 'bottom': vAlign = 'align-items-end'; break;\r\n            case 'stretch': vAlign = 'align-items-stretch'; break;\r\n        }\r\n        let col:string;\r\n        if (full !== true)\r\n            col = label===undefined? 'col-sm-12':'col-sm-10';\r\n        else\r\n            col = 'w-100';\r\n        let cn = className(align, vAlign, col, 'd-flex');\r\n        return <div className={cn}>\r\n            {this.renderPropBody()}\r\n        </div>;\r\n    }\r\n    protected renderPropBody():any {\r\n        return <div className=\"form-control-plaintext\">\r\n            {this.renderPropContent()}\r\n        </div>;\r\n    }\r\n    protected renderPropContent():any {\r\n        return this.content;\r\n    }\r\n}\r\n\r\nexport class StringPropRow extends LabeledPropRow {\r\n    protected prop: StringProp;\r\n    setValues(values:any) {\r\n        if (values === undefined) this.content = undefined;\r\n        else this.content = values[this.prop.name];\r\n    }\r\n}\r\n\r\nexport class NumberPropRow extends LabeledPropRow {\r\n    protected prop: NumberProp;\r\n    setValues(values:any) {\r\n        if (values === undefined) this.content = undefined;\r\n        else this.content = values[this.prop.name];\r\n    }\r\n}\r\n\r\nexport class ListPropRow extends LabeledPropRow {\r\n    protected prop: ListProp;\r\n    setValues(values:any) {\r\n        if (values === undefined) this.content = undefined;\r\n        else {\r\n            let list = this.prop.list;\r\n            if (typeof list === 'string') this.content = values[list];\r\n            else this.content = undefined;\r\n        }\r\n    }\r\n    protected renderPropBody() {\r\n        let {list, row} = this.prop;\r\n        let items:any[] = typeof list === 'string'? this.content : list;\r\n        if (items === undefined) return <div/>;\r\n        // new row(item)\r\n        return <div className=\"w-100\">\r\n            {\r\n                items.map((item, index) => <React.Fragment key={index}>\r\n                    {index===0? null: <div style={{width:'100%', borderBottom:'1px solid #f0f0f0'}} />}\r\n                    {React.createElement(row, item)}\r\n                </React.Fragment>)\r\n            }\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class ComponentPropRow extends LabeledPropRow {\r\n    protected prop: ComponentProp;\r\n    protected renderPropBody() {\r\n        let {component} = this.prop;\r\n        return component;\r\n    }\r\n}\r\n\r\nexport class PropContainer extends PropRow {\r\n    render(key:string): JSX.Element {\r\n        return <div className=\"bg-white\">\r\n            <label className=\"col-sm-2 col-form-label\">\r\n                AAABBBCCC\r\n            </label>\r\n            <div className=\"col-sm-10\">\r\n                <div className=\"form-control-plaintext\">\r\n                    dsfasfa sdf asdf a\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n","import {ListViewProps} from '../listView';\r\nimport {PropGridProps} from './PropGrid';\r\nimport {PropRow, PropBorder, PropGap, PropContainer,\r\n    StringPropRow, NumberPropRow, ListPropRow, ComponentPropRow} from './row';\r\n\r\nexport interface Format {\r\n\r\n}\r\n\r\nexport interface PropBase {\r\n    onClick?: ()=>void;\r\n}\r\n\r\nexport interface LabeledProp extends PropBase {\r\n    label?: string;\r\n    bk?: string;\r\n    vAlign?: 'top'|'bottom'|'center'|'stretch';\r\n}\r\n\r\nexport interface StringProp extends LabeledProp {\r\n    type: 'string';\r\n    name: string;\r\n}\r\n\r\nexport interface NumberProp extends LabeledProp {\r\n    type: 'number';\r\n    name: string;\r\n}\r\n\r\nexport interface FormatProp extends LabeledProp {\r\n    type: 'format';\r\n    format: Format;\r\n}\r\n\r\nexport interface ListProp extends LabeledProp {\r\n    type: 'list';\r\n    list: string | any[];  // string 表示名字，否则就是值\r\n    row: new (props:any) => React.Component;\r\n}\r\n\r\nexport interface ComponentProp extends LabeledProp {\r\n    type: 'component';\r\n    full?: boolean;\r\n    component: any; //JSX.Element;\r\n}\r\n\r\nexport type Prop = StringProp | NumberProp | FormatProp | ListProp | ComponentProp | string;\r\n\r\nexport class PropView {\r\n    private gridProps:PropGridProps\r\n    private props: Prop[];\r\n    //private values:any;\r\n    private rows: PropRow[];\r\n\r\n    constructor(gridProps:PropGridProps, props:Prop[]) {\r\n        this.gridProps = gridProps;\r\n        this.props = props;\r\n        //this.values = values;\r\n        this.buildRows();\r\n    }\r\n\r\n    private buildRows() {\r\n        this.rows = [];\r\n        let isGap:boolean = true;\r\n        for (let prop of this.props) {\r\n            if (typeof prop === 'string') {\r\n                this.rows.push(new PropGap(prop));\r\n                isGap = true;\r\n            }\r\n            else {\r\n                if (!isGap) this.rows.push(new PropBorder());\r\n                let row;\r\n                switch (prop.type) {\r\n                    default: continue;\r\n                    case 'string': row = new StringPropRow(this.gridProps, prop); break;\r\n                    case 'number': row = new NumberPropRow(this.gridProps, prop); break;\r\n                    case 'list': row = new ListPropRow(this.gridProps, prop); break;\r\n                    case 'component': row = new ComponentPropRow(this.gridProps, prop); break;\r\n                }\r\n                this.rows.push(row);\r\n                isGap = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    setValues(values: any) {\r\n        for (let r of this.rows) r.setValues(values);\r\n    }\r\n\r\n    render() {\r\n        return this.rows.map((row, index) => row.render(String(index)));\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {Prop, PropView} from './propView';\r\nimport {PropContainer, PropBorder, PropGap} from './row';\r\n\r\nexport interface PropGridProps {\r\n    className?: string;\r\n    rows: Prop[];\r\n    values: any;\r\n    alignValue?: 'left'|'center'|'right';\r\n}\r\n\r\n@observer\r\nexport class PropGrid extends React.Component<PropGridProps> {\r\n/*\r\n    private propView: PropView;\r\n    constructor(props:PropGridProps) {\r\n        super(props);\r\n    }\r\n*/\r\n/*\r\n    componentWillMount() {\r\n        this.propView = new PropView(this.props.rows);\r\n        this.propView.setValues(this.props.values);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps: Readonly<PropGridProps>, nextContext: any) {\r\n        this.propView = new PropView(this.props.rows);\r\n        this.propView.setValues(nextProps.values);\r\n        this.forceUpdate();\r\n    }\r\n*/\r\n    render() {\r\n        let {className, rows, values} = this.props;\r\n        let propView = new PropView(this.props, rows);\r\n        propView.setValues(values);\r\n        let cn = classNames('container-fluid', className);\r\n        return <div className={cn}>\r\n            {propView.render()}\r\n        </div>;\r\n    }\r\n}\r\n","export * from './propView';\r\nexport * from './row';\r\nexport * from './PropGrid';\r\n","import _ from 'lodash';\r\nimport { KeyValueRes, Res } from '../res';\r\n\r\nexport interface FormRes extends KeyValueRes {\r\n    required: string;\r\n    number: string;\r\n    integer: string;\r\n    min: string;\r\n    max: string;\r\n}\r\n\r\nexport const formRes:Res<FormRes> = {\r\n    _: {\r\n        required: 'required',\r\n        number: 'not valid number',\r\n        integer: 'not valid integer',\r\n        min: 'min value is ${min}',\r\n        max: 'max value is ${max}',\r\n    },\r\n    zh: {\r\n        _: {\r\n            required: '必须填',\r\n            number: '需要数字',\r\n            integer: '需要整数',\r\n            min: '不能小于${min}',\r\n            max: '不能大于${max}',\r\n        }\r\n    },\r\n}\r\n","import * as React from 'react';\r\nimport {observable, IReactionDisposer, autorun} from 'mobx';\r\nimport classNames from 'classnames';\r\nimport { Schema, ItemSchema, ArrSchema } from '../schema';\r\nimport { UiSchema, TempletType } from '../schema';\r\nimport { factory } from './widgets';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport { ContextContainer, FormContext, Context, RowContext } from './context';\r\nimport { FormRes, formRes } from './formRes';\r\nimport { resLang } from '../res';\r\n\r\nexport type FormButtonClick = (name:string, context: Context) => Promise<any>;\r\n\r\nexport interface FormProps {\r\n    className?: string;\r\n    schema: Schema;\r\n    uiSchema?: UiSchema;\r\n    formData?: any;\r\n    onButtonClick?: FormButtonClick;\r\n    fieldLabelSize?: number;            // col-sm-2 for label\r\n    requiredFlag?: boolean;             // default=true\r\n    beforeShow?: (formContext:FormContext) => void;\r\n    res?: FormRes;\r\n\r\n    Container?: (content:JSX.Element) => JSX.Element;\r\n    FieldContainer?: (label:string|JSX.Element, content:JSX.Element) => JSX.Element;\r\n    FieldClass?: string;\r\n    ButtonClass?: string;\r\n/*    \r\n    ArrContainer?: (label:any, content:JSX.Element) => JSX.Element;\r\n    RowContainer?: (content:JSX.Element) => JSX.Element;\r\n    RowSeperator?: JSX.Element;\r\n*/\r\n}\r\n\r\nexport class Form extends React.Component<FormProps> {\r\n    readonly schema: Schema;\r\n    readonly itemSchemas: {[name:string]: ItemSchema};\r\n    readonly uiSchema: UiSchema;\r\n    readonly res?: FormRes;\r\n    protected formContext: FormContext;\r\n    private content: any;\r\n    private formData: any;\r\n    private disposer: IReactionDisposer;\r\n    @observable readonly data:any;\r\n\r\n    readonly Container: (content:JSX.Element) => JSX.Element;\r\n    readonly FieldContainer: (label:any, content:JSX.Element) => JSX.Element;\r\n    readonly FieldClass: string;\r\n    readonly ButtonClass: string;\r\n    //readonly ArrContainer: (label:any, content:JSX.Element) => JSX.Element;\r\n    //readonly RowContainer: (content:JSX.Element) => JSX.Element;\r\n    //readonly RowSeperator: JSX.Element;\r\n\r\n    constructor(props:FormProps) {\r\n        super(props);\r\n        let {schema, uiSchema, formData, \r\n            Container, FieldContainer, FieldClass, \r\n            ButtonClass, \r\n            res,\r\n            //ArrContainer, RowContainer, //ArrFieldContainer, \r\n            //RowSeperator,\r\n        } = props;\r\n        this.Container = Container || this.DefaultContainer;\r\n        this.FieldContainer = FieldContainer || this.DefaultFieldContainer;\r\n        this.FieldClass = FieldClass!==undefined && FieldClass!==''&&FieldClass!==null? FieldClass : this.DefaultFieldClass;\r\n        this.res = res || this.DefaultRes;\r\n        this.ButtonClass = ButtonClass || this.DefaultButtonClass;\r\n        //this.ArrContainer = ArrContainer || this.DefaultArrContainer;\r\n        //this.RowContainer = RowContainer || this.DefaultRowContainer;\r\n        //this.RowSeperator = RowSeperator || this.DefaultRowSeperator;\r\n\r\n        this.schema = schema;\r\n        this.itemSchemas = {};\r\n        for (let itemSchema of this.schema) {\r\n            this.itemSchemas[itemSchema.name] = itemSchema;\r\n        }\r\n        this.uiSchema = uiSchema;\r\n        this.formData = formData;\r\n        this.disposer = autorun(this.calcSelectOrDelete);\r\n        this.data = {};\r\n        this.initData(formData);\r\n        let inNode:boolean = this.props.children !== undefined || this.uiSchema && this.uiSchema.Templet !== undefined;\r\n        //this.formContext = new FormContext(this, inNode);\r\n        let {children} = this.props;\r\n        //let content:JSX.Element; //, inNode:boolean;\r\n        //let formContext: FormContext;\r\n        if (children !== undefined) {\r\n            //inNode = true;\r\n            this.content = <>{children}</>;\r\n            this.formContext = new FormContext(this, true);\r\n        }\r\n        else {\r\n            let Templet: TempletType;\r\n            if (this.uiSchema !== undefined) {\r\n                Templet = this.uiSchema.Templet;\r\n            }\r\n            if (Templet !== undefined) {\r\n                // inNode = true;\r\n                this.content = typeof(Templet) === 'function'? Templet(this.data) : Templet;\r\n                this.formContext = new FormContext(this, true);\r\n            }\r\n            else {\r\n                // inNode = false;\r\n                this.formContext = new FormContext(this, false);\r\n                this.content = <>{this.schema.map((v, index) => {\r\n                    return <React.Fragment key={index}>{factory(this.formContext, v, children)}</React.Fragment>\r\n                })}</>;\r\n            }\r\n        }\r\n    }\r\n\r\n    private initData(formData: any) {\r\n        if (formData === undefined) formData = {};\r\n        for (let itemSchema of this.schema) {\r\n            this.initDataItem(itemSchema, this.data, formData);\r\n        }\r\n    }\r\n\r\n    private initDataItem(itemSchema: ItemSchema, data:any, formData: any):any {\r\n        let {name, type} = itemSchema;\r\n        if (type === 'button') return;\r\n        if (type === 'arr') {\r\n            let arrItem:ArrSchema = itemSchema as ArrSchema;\r\n            let {arr:arrItems} = arrItem;\r\n            if (arrItems === undefined) return;\r\n            let arrDict = arrItem.itemSchemas = {};\r\n            for (let item of arrItems) {\r\n                arrDict[item.name] = item;\r\n            }\r\n            let val:any[] = formData[name];\r\n            if (val === undefined) val = [];\r\n            else if (Array.isArray(val) === false) val = [val];\r\n            let arr:any[] = [];\r\n            for (let row of val) {\r\n                let {$isSelected, $isDeleted} = row;\r\n                let r = {\r\n                    $source: row,\r\n                    $isSelected: $isSelected,\r\n                    $isDeleted: $isDeleted,\r\n                };\r\n                for (let item of arrItems) {\r\n                    this.initDataItem(item, r, row);\r\n                    /*\r\n                    let {name:nm} = item;\r\n                    let v = row[nm];\r\n                    if (v === undefined) v = null;\r\n                    r[nm] = v;\r\n                    */\r\n                }\r\n                arr.push(r);\r\n            }\r\n            data[name] = observable(arr);\r\n            return;\r\n        }\r\n        data[name] = formData[name];\r\n    }\r\n\r\n    private calcSelectOrDelete = () => {\r\n        if (this.formData === undefined) return;\r\n        for (let itemSchema of this.schema) {\r\n            this.arrItemOperated(itemSchema);\r\n        }\r\n    }\r\n\r\n    private arrItemOperated(itemSchema: ItemSchema) {\r\n        let {name, type} = itemSchema;\r\n        if (type !== 'arr') return;\r\n        //let arrVal = this.formData[name];\r\n        //if (arrVal === undefined) return;\r\n        let formArrVal = this.data[name];\r\n        let {arr: arrItems} = itemSchema as ArrSchema;\r\n        for (let row of formArrVal) {\r\n            let {$source} = row;\r\n            if ($source === undefined) continue;\r\n            let {$isSelected, $isDeleted} = $source;\r\n            row.$isSelected = $isSelected;\r\n            row.$isDeleted = $isDeleted;\r\n            //console.log($isSelected, $isDeleted);\r\n            for (let item of arrItems) {\r\n                this.arrItemOperated(item);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let {beforeShow} = this.props;\r\n        if (beforeShow !== undefined) beforeShow(this.formContext);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.disposer();\r\n    }\r\n\r\n    render() {\r\n        return <ContextContainer.Provider value={this.formContext}>\r\n            <this.formContext.renderErrors />\r\n            {this.Container(this.content)}\r\n        </ContextContainer.Provider>;\r\n    }\r\n\r\n    protected DefaultContainer = (content:JSX.Element): JSX.Element => {\r\n        return <form className={classNames(this.props.className)}>\r\n            {content}\r\n        </form>;\r\n    }\r\n    /*\r\n    protected DefaultArrFieldContainer = (itemName:string, content:JSX.Element, context:RowContext): JSX.Element => {\r\n        return this.InnerFieldContainer(itemName, content, context);\r\n    }*/\r\n    protected DefaultFieldContainer = (label:string|JSX.Element, content:JSX.Element): JSX.Element => {\r\n        //return this.InnerFieldContainer(itemName, content, context);\r\n        let {fieldLabelSize} = this.props;\r\n\r\n        if (fieldLabelSize > 0) {\r\n            let labelView:any;\r\n            if (label === null) {\r\n                fieldLabelSize = 0;\r\n            }\r\n            else {\r\n                labelView = <label className={classNames('col-sm-' + fieldLabelSize, 'col-form-label')}>{label}</label>\r\n            }\r\n            let fieldCol = 'col-sm-' + (12 - fieldLabelSize);\r\n            return <div className=\"form-group row\">\r\n                {labelView}\r\n                <div className={fieldCol}>{content}</div>\r\n            </div>;\r\n        }\r\n        return <div className=\"form-group\">\r\n            {label===null? null:<label className=\"col-form-label\">{label}</label>}\r\n            {content}\r\n        </div>;\r\n    }\r\n    protected DefaultFieldClass:string = undefined;\r\n    protected DefaultButtonClass = 'text-center py-2';\r\n    protected DefaultRes:FormRes = resLang<FormRes>(formRes);\r\n\r\n    ArrContainer = (label:any, content:JSX.Element): JSX.Element => {\r\n        return <div>\r\n            <div className={classNames('small text-muted text-center bg-light py-1 px-3 mt-4 mb-1')}>{label}</div>\r\n            {content}\r\n        </div>;\r\n    }\r\n    RowContainer = (content:JSX.Element): JSX.Element => {\r\n        //return <div className=\"row\">{content}</div>;\r\n        let cn = classNames({\r\n            'py-3': true\r\n        });\r\n        return <div className={cn}>{content}</div>\r\n    }\r\n    RowSeperator = <div className=\"border border-gray border-top\" />;\r\n}\r\n","import * as React from 'react';\r\nimport { factory } from './widgets';\r\nimport { ContextContainer, Context } from './context';\r\n\r\nexport interface FieldProps {\r\n    name: string;\r\n}\r\n\r\nexport class Field extends React.Component<FieldProps> {\r\n    static contextType = ContextContainer;\r\n    render() {\r\n        let {name, children } = this.props;\r\n        let context:Context = this.context;\r\n        if (context === undefined) return <span className=\"text-danger\">!only in Form!</span>;\r\n        let itemSchema = context.getItemSchema(name);\r\n        let content = factory(context, itemSchema, children, this.props);\r\n        if (content === undefined) {\r\n            return <span className=\"text-danger\">!!{name} is not defined!!</span>;\r\n        }\r\n        return content;\r\n    }\r\n}\r\n","export {Form} from './form';\r\nexport {Field} from './field';\r\nexport {Context, RowContext} from './context';\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {IObservableValue, IComputedValue} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport '../css/va-row.css';\r\n\r\nexport interface ListItem {\r\n    key?: string|number;\r\n    date?: Date;\r\n    icon?: string | JSX.Element;\r\n    main?: string;\r\n    vice?: string;\r\n    middle?: string | JSX.Element;\r\n    midSize?: number;\r\n    right?: string | JSX.Element;\r\n    onClick?: () => void;\r\n    unread?: number|IComputedValue<number>;         // <0 表示red dot\r\n}\r\n\r\nexport interface ListRowProps extends ListItem {\r\n    //onClick: () => void;\r\n}\r\n\r\nexport interface ListRowState {\r\n    pressed: boolean;\r\n}\r\n\r\n@observer\r\nexport class ListRow extends React.Component<ListRowProps, ListRowState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pressed: false,\r\n        }\r\n    }\r\n    render() {\r\n        let {date, main, vice, middle, midSize, icon, unread, right, onClick} = this.props;\r\n        let header, isIcon:boolean, noteNum;\r\n        if (unread !== undefined) {\r\n            let uv:number;\r\n            if (typeof unread === 'number') uv = unread;\r\n            else uv = unread.get();\r\n                if (uv > 0)\r\n                noteNum = <b>{uv}</b>;\r\n            else if (uv < 0)\r\n                noteNum = <b className='dot' />;\r\n        }\r\n        switch (typeof icon) {\r\n            case 'object':\r\n                header = <header>{icon}{noteNum}</header>; \r\n                isIcon= false;\r\n                break;\r\n            case 'string': \r\n                header = <header className='icon'><img src={icon as string} />{noteNum}</header>;\r\n                isIcon= true; \r\n                break;\r\n        }\r\n        let mid;\r\n        if (middle !== undefined) {\r\n            switch (typeof middle) {\r\n                case 'string':\r\n                    mid = <div style={{flex:midSize}}>{middle}</div>;\r\n                    break;\r\n                default:\r\n                    mid = middle;\r\n                    break;\r\n            }\r\n        }\r\n        let footer;\r\n        if (right !== undefined) {\r\n            if (typeof right === 'string')\r\n                footer = <footer><small className=\"text-muted\">{right}</small></footer>;\r\n            else\r\n                footer = <footer>{right}</footer>;\r\n        }\r\n        let viceSpan;\r\n        if (vice !== undefined) viceSpan = <span>{vice}</span>;\r\n        let cn = classNames('va-row', {icon:isIcon, pressed: this.state.pressed}, {\"va-action\": onClick !== undefined});\r\n        return (\r\n        <li className={cn} onClick={onClick}>\r\n            {header}\r\n            <div>\r\n                <div>{main}</div>\r\n                {viceSpan}\r\n            </div>\r\n            {mid}\r\n            {footer}\r\n        </li>\r\n        );\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {ListItem, ListRow} from './listRow';\r\n\r\nexport interface ListViewProps {\r\n    className?: string;\r\n    items?: any[];\r\n    renderRow?: (item:any, index:number, ex?:any) => JSX.Element;\r\n    ex?: any;\r\n    header?: string|JSX.Element;\r\n    beforeLoad?: string|JSX.Element;\r\n    none?: string|JSX.Element;\r\n    footer?: string|JSX.Element;\r\n    itemClick?: (item:any)=>void;\r\n    converter?: (item:any)=>ListItem;\r\n}\r\n\r\n@observer\r\nexport class ListView extends React.Component<ListViewProps, null> {\r\n    render() {\r\n        let {header, items, beforeLoad, none, renderRow, className, footer, itemClick, converter} = this.props;\r\n        let cn = classNames(className, 'va-list');\r\n        let content, elHeader;\r\n        if (items === undefined)\r\n            content = beforeLoad === null? null : <li className='empty'>\r\n                {beforeLoad || '...'}\r\n            </li>;\r\n        else if (items.length === 0) {\r\n            content = (\r\n            <li className='empty'>\r\n                {\r\n                    none || '[none]'\r\n                }\r\n            </li>);\r\n        }\r\n        else if (renderRow !== undefined) {\r\n            content = items.map((item, index) => renderRow(item, index, this.props.ex));\r\n        }\r\n        else {\r\n            content = items.map((item, index) => {\r\n                let onClick = item.onClick;\r\n                if (onClick === undefined && itemClick !== undefined) \r\n                    onClick = ()=>itemClick(item);\r\n                let listItem:ListItem;\r\n                if (converter !== undefined) {\r\n                    listItem = converter(item);\r\n                    if (listItem === undefined) return null;\r\n                }\r\n                else {\r\n                    listItem = {\r\n                        ...item\r\n                    }\r\n                }\r\n                if (listItem.key === undefined) listItem.key = listItem.main;\r\n                return <ListRow onClick={onClick} {...listItem} />;\r\n            });\r\n        }\r\n        if (header !== undefined) {\r\n            if (typeof header === 'string') {\r\n                elHeader = <div className='va-list-header'>{header}</div>;\r\n            }\r\n            else {\r\n                elHeader = header;\r\n            }\r\n        }\r\n\r\n        return (\r\n        <div className={cn}>\r\n            {elHeader}\r\n            <ul>\r\n                {content}\r\n            </ul>\r\n            {footer}\r\n        </div>\r\n        )\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport { IObservableValue } from 'mobx/lib/internal';\r\n\r\nexport type TabCaption = (selected:boolean) => JSX.Element;\r\n\r\nexport interface TabProp {\r\n    name: string;\r\n    caption: TabCaption;\r\n    content: () => JSX.Element;\r\n    notify?: IObservableValue<number>;\r\n}\r\n\r\nexport interface TabsProps {\r\n    tabs: TabProp[];\r\n    size?: 'sm' | 'lg' | 'md';\r\n    tabBack?: string;\r\n    contentBack?: string;\r\n    sep?: string;\r\n    selected?: string;\r\n}\r\n\r\nclass Tab {\r\n    name: string;\r\n    @observable selected: boolean;\r\n    caption: TabCaption;\r\n    contentBuilder: ()=>JSX.Element;\r\n    notify: IObservableValue<number>;\r\n\r\n    private _content: JSX.Element;\r\n    get content(): JSX.Element {\r\n        if (this.selected !== true) return this._content;\r\n        if (this._content !== undefined) return this._content;\r\n        return this._content = this.contentBuilder();\r\n    }\r\n}\r\n\r\nexport const TabCaptionComponent = (label:string, icon:string, color:string) => <div \r\n    className={'d-flex justify-content-center align-items-center flex-column cursor-pointer ' + color}>\r\n    <div><i className={'fa fa-lg fa-' + icon} /></div>\r\n    <small>{label}</small>\r\n</div>;\r\n\r\n@observer export class Tabs extends React.Component<TabsProps> {\r\n    private size: string;\r\n    private tabBack: string;\r\n    private contentBack: string;\r\n    private sep: string;\r\n    @observable private selectedTab: Tab;\r\n    @observable private tabs: Tab[] = [];\r\n\r\n    constructor(props: TabsProps) {\r\n        super(props);\r\n        let {size, tabs, tabBack, contentBack, sep, selected} = this.props;\r\n        switch (size) {\r\n            default:\r\n            case 'md': this.size = '3.2rem'; break;\r\n            case 'sm': this.size = '4rem'; break;\r\n            case 'lg': this.size = '2.5rem'; break;\r\n        }\r\n        this.tabs.push(...tabs.map(v => {\r\n                let tab = new Tab();\r\n                tab.name = v.name;\r\n                tab.selected = false;\r\n                tab.caption = v.caption;\r\n                tab.contentBuilder = v.content;\r\n                tab.notify = v.notify;\r\n                return tab;\r\n            }\r\n        ));\r\n        this.tabBack = tabBack || 'bg-light';\r\n        this.contentBack = contentBack;\r\n        this.sep = sep || 'border-top border-gray';\r\n        if (selected !== undefined) {\r\n            this.selectedTab = this.tabs.find(v => v.name === selected);\r\n        }\r\n        if (this.selectedTab === undefined) this.selectedTab = this.tabs[0];\r\n        this.selectedTab.selected = true;\r\n    }\r\n\r\n    private tabClick = (tab:Tab) => {\r\n        this.selectedTab.selected = false;\r\n        tab.selected = true;\r\n        this.selectedTab = tab;\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"tab\">\r\n            <div className={this.contentBack} style={{height: 'calc(100% - ' + this.size + ')'}}>\r\n                {this.tabs.map((v,index) => {\r\n                    let style:React.CSSProperties={\r\n                        display: v.selected===true? undefined : 'none'};\r\n                    return <div key={index} style={style}>{v.content}</div>;\r\n                })}\r\n            </div>\r\n            <div className={classNames(this.tabBack, this.sep)} style={{height: this.size}}>\r\n                {this.tabs.map((v,index) => {\r\n                    let {selected, caption, notify} = v;\r\n                    let notifyCircle:any;\r\n                    if (notify !== undefined) {\r\n                        let num = notify.get();\r\n                        if (num !== undefined) {\r\n                            if (num > 0) notifyCircle = <u>{num>99?'99+':num}</u>;\r\n                            else if (num < 0) notifyCircle = <u className=\"dot\" />;\r\n                        }\r\n                    }\r\n                    return <div key={index} className=\"\" onClick={()=>this.tabClick(v)}>\r\n                        <div className=\"align-self-center\">\r\n                            {notifyCircle}\r\n                            {caption(selected)}\r\n                        </div>\r\n                    </div>\r\n                })}\r\n            </div>\r\n        </div>\r\n    }\r\n};\r\n","import * as React from 'react';\r\nimport {FetchError} from '../fetchError';\r\nimport { refetchApi } from '../net';\r\n\r\nexport interface FetchErrorProps extends FetchError {\r\n    clearError: ()=>void\r\n}\r\n\r\nexport default class FetchErrorView extends React.Component<FetchErrorProps, null> {\r\n    private reApi = async () => {\r\n        this.props.clearError();\r\n        const {channel, url, options, resolve, reject} = this.props;\r\n        await refetchApi(channel, url, options, resolve, reject);\r\n    }\r\n    private close = async () => {\r\n        this.props.clearError();\r\n    }\r\n    render() {\r\n        let {error, url} = this.props;\r\n            //let errMsg = fetchError.errorMsg;\r\n        let errContent;\r\n        if (typeof error === 'object') {\r\n            let err = [];\r\n            for (let i in error) {\r\n                err.push(<li key={i}><label>{i}</label><div>{error[i]}</div></li>);\r\n            }\r\n            errContent = <ul>{err}</ul>;\r\n        }\r\n        else {\r\n            errContent = <div>{error}</div>;\r\n        }\r\n        return <li>\r\n            <article className=\"page-container\">\r\n                <section>\r\n                    <div  className=\"va-error\">\r\n                        <div>网络出现问题</div>\r\n                        <div>点击重新访问</div>\r\n                        <div>url: {url}</div>\r\n                        {errContent}\r\n                        <div className=\"p-3\">\r\n                            <button type='button' onClick={this.reApi}>重新API</button>\r\n                            <button type='button' onClick={this.close}>关闭</button>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </article>\r\n        </li>;\r\n    }\r\n}\r\n","import {User, Guest, Unit} from './user';\r\n\r\nexport interface ClearableData {\r\n    clear(): void;\r\n}\r\n\r\nexport class Data<T> implements ClearableData {\r\n    private name: string;\r\n    private value?: T;\r\n    constructor(name: string) {this.name = name; }\r\n    get(): T {\r\n        if (this.value !== undefined) return this.value;\r\n        let v = localStorage.getItem(this.name);\r\n        return this.value = v === null ? undefined : JSON.parse(v); \r\n    }\r\n    set(value: T) {\r\n        if (!value) { this.clear(); return; }\r\n        this.value = value;\r\n        localStorage.setItem(this.name, JSON.stringify(value));\r\n    }\r\n    clear() {\r\n        this.value = undefined;\r\n        localStorage.removeItem(this.name);\r\n    }\r\n}\r\n\r\nexport class LocalData {\r\n    user = new Data<User>('user');\r\n    guest = new Data<Guest>('guest');\r\n    unit = new Data<Unit>('unit');\r\n    homeTabCur = new Data<number>('homeTabCur');\r\n\r\n    logoutClear() {\r\n        [\r\n            this.user,\r\n            this.homeTabCur\r\n        ].map(d => d.clear());\r\n    }\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import * as React from 'react';\r\nimport {EasyDate} from 'tonva-react-form';\r\n\r\nexport interface IdDatesProps {\r\n    date_init: Date;\r\n    date_update: Date;\r\n}\r\n\r\nexport class IdDates extends React.Component<IdDatesProps> {\r\n    render() {\r\n        let {date_init, date_update} = this.props;\r\n        return <small className=\"text-muted\">\r\n            上次修改: <EasyDate date={date_update}/>\r\n            <i className=\"fa fa-fw\" />\r\n            创建: <EasyDate date={date_init}/>\r\n        </small>\r\n    }\r\n}\r\n","export const appIcon = process.env.REACT_APP_ICON;\r\nexport const appItemIcon = process.env.REACT_APP_ITEM_ICON;\r\n\r\n/*\r\nconst consts = {\r\n    form: {\r\n        label: {sm:3, md:2},\r\n        input: {sm: 9, md: 9},\r\n        submit: {\r\n            xs: undefined,\r\n            sm: {offset: 3, size: 3},\r\n            md: {offset: 2, size: 3},\r\n            lg: undefined,\r\n        }\r\n    },\r\n\r\n    appIcon: 'http://101.200.46.56/imgs/Bear-icon.png',\r\n    appItemIcon: 'http://101.200.46.56/imgs/Bear-icon.png',\r\n};\r\n\r\nexport default consts;\r\n*/","import {CenterApi, User, meInFrame} from 'tonva-tools';\r\nimport { string } from 'prop-types';\r\n\r\nclass MainApi extends CenterApi {\r\n    async stickies():Promise<any[]> {\r\n        return await this.get('sticky/list', {start:0, pageSize:30});\r\n    }\r\n\r\n    async ties():Promise<any[]> {\r\n        return await this.get('tie/list', {start:0, pageSize:30});\r\n    }\r\n\r\n    async apps(unit:number):Promise<any> {\r\n        return await this.get('tie/apps', {unit:unit});\r\n    }\r\n\r\n    async appApi(unit:number, app:number, apiName:string) {\r\n        return await this.get('tie/app-api', {unit:unit, app:app, apiName:apiName});\r\n    }\r\n\r\n    async userId(name:string):Promise<number> {\r\n        return await this.get('tie/user-id', {name:name});\r\n    }\r\n\r\n    async userAdminUnits():Promise<any[]> {\r\n        return await this.get('tie/user-admin-units', {});\r\n    }\r\n\r\n    async sendMessage(toUser:number, type:string, content:any) {\r\n        let {unit} = meInFrame;\r\n        let adminApp = 0;\r\n        return await this.post('tie/send-message', {\r\n            type: type, \r\n            fromUnit: unit, \r\n            fromApp: adminApp,\r\n            toUser: toUser, \r\n            content: content, \r\n        });\r\n    }\r\n\r\n    async unit(unit:number):Promise<any> {\r\n        return await this.get('unit/', {unit:unit});\r\n    }\r\n\r\n    async unitMemberCount(unit:number):Promise<number> {\r\n        return await this.get('unit/member-count', {unit:unit});\r\n    }\r\n\r\n    async unitAdmins(unit:number):Promise<any[]> {\r\n        return await this.get('unit/admins', {unit:unit});\r\n    }\r\n\r\n    async unitSetAdmin(fellow:number, unit:number, isOwner:number, isAdmin:number):Promise<any> {\r\n        return await this.post('unit/set-admin', {fellow:fellow, unit:unit, isOwner:isOwner, isAdmin:isAdmin});\r\n    }\r\n\r\n    async unitAddAdmin(user:string, unit:number, isOwner:number, isAdmin:number):Promise<any> {\r\n        return await this.post('unit/add-admin', {user:user, unit:unit, isOwner:isOwner, isAdmin:isAdmin});\r\n    }\r\n\r\n    async unitApps(unit:number):Promise<any[]> {\r\n        return await this.get('unit/apps', {unit:unit});\r\n    }\r\n\r\n    async unitAddApp(unit:number, app:number):Promise<number> {\r\n        let ret = await this.post('unit/add-app', {unit:unit, app:app});\r\n        return ret;\r\n    }\r\n\r\n    async unitDeleteApp(unit:number, app:number, deleted:number):Promise<void> {\r\n        await this.post('unit/delete-app', {unit:unit, app:app, deleted:deleted});\r\n    }\r\n\r\n    async unitChangeProp(unit:number, prop:string, value:any):Promise<void> {\r\n        await this.post('unit/change-prop', {unit:unit, prop:prop, value:value});\r\n    }\r\n\r\n    async searchApp(unit:number, key:string, pageStart:any, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/search-app', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n\r\n    async unitRoles(unit:number):Promise<any[]> {\r\n        return await this.get('unit/roles', {unit:unit});\r\n    }\r\n\r\n    async unitAddRole(unit:number, name:string, discription:string):Promise<number> {\r\n        return await this.post('unit/add-role', {unit:unit, name:name, discription:discription});\r\n    }\r\n\r\n    async unitRoleChangeProp(unit:number, role:number, prop:string, value:any):Promise<void> {\r\n        await this.post('unit/change-role-prop', {unit:unit, role:role, prop:prop, value:value});\r\n    }\r\n\r\n    async unitRoleApps(unit:number, role:number):Promise<any[]> {\r\n        return await this.get('unit/role-apps', {unit:unit, role:role});\r\n    }\r\n\r\n    async unitRoleSetApps(unit:number, role:number, apps:number[]):Promise<void> {\r\n        await this.post('unit/role-set-apps', {unit:unit, role:role, apps:apps});\r\n    }\r\n\r\n    async unitMembers(unit:number, role:number, key:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/members', {unit:unit, role:role, key, pageStart, pageSize});\r\n    }\r\n\r\n    async unitAssignMember(unit:number, member:number, assigned:string):Promise<void> {\r\n        await this.post('unit/assign-member', {unit:unit, member:member, assigned:assigned});\r\n    }\r\n\r\n    async unitMemberRoles(unit:number, member:number):Promise<any[]> {\r\n        return await this.get('unit/member-roles', {unit:unit, member:member});\r\n    }\r\n\r\n    async unitSetMemberRoles(unit:number, member:number, roles:number[]):Promise<void> {\r\n        await this.post('unit/member-set-roles', {unit:unit, member:member, roles:roles});\r\n    }\r\n\r\n    async unitUsers(unit:number, key:string, pageStart:number, pageSize:number):Promise<any> {\r\n        return await this.get('unit/users', {unit: unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitAppUsers(unit:number, key:string, pageStart:number, pageSize:number):Promise<any> {\r\n        return await this.get('unit/app-users', {unit: unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitOneAppUsers(unit:number, app:number, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/one-app-users', {unit: unit, app:app, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitOneUserApps(unit:number, user:number, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/one-user-apps', {unit: unit, user:user, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitAppEditUsers(unit:number, app:number, key:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/app-edit-users', {unit: unit, app:app, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitUserEditApps(unit:number, user:number, key:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/user-edit-apps', {unit: unit, user:user, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async bindAppUser(unit:number, app:number, user:number, bind:number):Promise<void> {\r\n        await this.post('unit/bind-app-user', {unit: unit, app:app, user:user, bind:bind});\r\n    }\r\n\r\n    async userFromKey(key:string):Promise<any> {\r\n        return await this.get('tie/user-from-key', {key:key});\r\n    }\r\n    async unitAddUser(unit:number, user:number) {\r\n        await this.post('unit/add-user', {unit:unit, user:user});\r\n    }\r\n}\r\n\r\nexport const mainApi = new MainApi('tv/', undefined);\r\n","import {CenterApi} from 'tonva-tools';\r\n\r\nclass DevApi extends CenterApi {\r\n    async uqBuilderUrl():Promise<any> {\r\n        let ret = await this.get('uq-builder-url', undefined);\r\n        return ret;\r\n    }    \r\n    async counts(unit:number):Promise<any> {\r\n        return await this.get('counts', {unit:unit});\r\n    }\r\n    async app(id:number):Promise<any> {\r\n        return await this.get('app', {id:id});\r\n    }\r\n    async uq(id:number):Promise<any> {\r\n        return await this.get('uq', {id:id});\r\n    }\r\n    async server(id:number):Promise<any> {\r\n        return await this.get('server', {id:id});\r\n    }\r\n    async uqdb(id:number):Promise<any> {\r\n        return await this.get('uqdb', {id:id});\r\n    }\r\n    async apps(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('apps', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async uqs(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('uqs', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async buses(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('buses', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async servers(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('servers', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async uqdbs(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('uqdbs', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async services(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('services', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async saveApp(values:any):Promise<number> {\r\n        return await this.post('app-save', values);\r\n    }\r\n    async saveUq(values:any):Promise<number> {\r\n        return await this.post('uq-save', values);\r\n    }\r\n    async saveBus(values:any):Promise<number> {\r\n        return await this.post('bus-save', values);\r\n    }\r\n    async saveServer(values:any):Promise<number> {\r\n        return await this.post('server-save', values);\r\n    }\r\n    async saveUqdb(values:any):Promise<number> {\r\n        return await this.post('uqdb-save', values);\r\n    }\r\n    async saveService(values:any):Promise<number> {\r\n        return await this.post('service-save', values);\r\n    }\r\n    async delApp(unit:number,id:number):Promise<void> {\r\n        return await this.post('app-del', {unit:unit, id:id});\r\n    }\r\n    async delUq(unit:number,id:number):Promise<void> {\r\n        return await this.post('uq-del', {unit:unit, id:id});\r\n    }\r\n    async delBus(unit:number,id:number):Promise<void> {\r\n        return await this.post('bus-del', {unit:unit, id:id});\r\n    }\r\n    async delServer(unit:number,id:number):Promise<void> {\r\n        return await this.post('server-del', {unit:unit, id:id});\r\n    }\r\n    async delUqdb(unit:number,id:number):Promise<void> {\r\n        return await this.post('uqdb-del', {unit:unit, id:id});\r\n    }\r\n    async delService(unit:number,id:number):Promise<void> {\r\n        return await this.post('service-del', {unit:unit, id:id});\r\n    }\r\n    async loadAppUqs(app:number):Promise<any[]> {\r\n        return await this.get('app-uqs', {app: app});\r\n    }\r\n    async appBindUq(unit:number,app:number,uqs:{id:number, access:string[]}[]):Promise<void> {\r\n        let uqsText:string;\r\n        if (uqs !== undefined) {\r\n            uqsText = uqs.map(v => String(v.id)+'|'+v.access.join(',')).join(';');\r\n        }\r\n        await this.post('app-bind-uq', {unit:unit, app:app, uqs:uqsText});\r\n    }\r\n    async searchUq(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('uq-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async getMyUqs(unit:number):Promise<any[]> {\r\n        return await this.get('my-uqs', {unit:unit});\r\n    }\r\n    async searchApp(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('app-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async searchServer(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('server-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async searchUqdb(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('uqdb-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    //async loadAppServices(unit:number, app:number):Promise<any[]> {\r\n    //    return await this.get('app-services', {unit:unit, app:app});\r\n    //}\r\n    async loadUqServices(unit:number, uq:number):Promise<any[]> {\r\n        return await this.get('uq-services', {unit:unit, uq:uq});\r\n    }\r\n    async changeServiceProp(unit:number, service:number, prop:string, value:any):Promise<number> {\r\n        return await this.post('service-change-prop', {unit:unit, service:service, prop:prop, value:value});\r\n    }\r\n    async uqGetEntities(unit:number, uq:number):Promise<any[][]> {\r\n        return await this.get('uq-get-entities', {unit:unit, uq:uq});\r\n    }\r\n}\r\n\r\nexport const devApi = new DevApi('tv/dev/', undefined);\r\n","import {observable} from 'mobx';\r\nimport {UnitAdmin} from '../model';\r\nimport {mainApi} from '../api';\r\nimport {Store} from './index';\r\n\r\nexport class Admins {\r\n    private store:Store;\r\n    constructor(store:Store) {\r\n        this.store = store;\r\n    }\r\n\r\n    @observable cur: UnitAdmin = undefined;\r\n    @observable owners: UnitAdmin[] = undefined;\r\n    @observable admins: UnitAdmin[] = undefined;\r\n    @observable fellows: UnitAdmin[] = undefined;\r\n    \r\n    async load(): Promise<void> {\r\n        let unit = this.store.unit;\r\n        if (unit === undefined) return;\r\n        if (unit.id === undefined) return;\r\n        if (this.admins !== undefined) return;\r\n        let all = await mainApi.unitAdmins(unit.id);\r\n        let owners:UnitAdmin[] = [];\r\n        let admins:UnitAdmin[] = [];\r\n        let fellows:UnitAdmin[] = [];\r\n        all.forEach(ua => {\r\n            let {isOwner, isAdmin} = ua;\r\n            if (isOwner === 0 && isAdmin === 0)\r\n                fellows.push(ua);\r\n            else {\r\n                if (isOwner === 1) owners.push(ua);\r\n                if (isAdmin === 1) admins.push(ua);\r\n            }\r\n        });\r\n        this.owners = owners;\r\n        this.admins = admins;\r\n        this.fellows = fellows;\r\n    }\r\n\r\n    private removeCur(arr: UnitAdmin[]) {\r\n        let index = arr.findIndex(v => v.id===this.cur.id);\r\n        if (index >=0) arr.splice(index, 1);\r\n    }\r\n\r\n    async unitSetAdmin(isOwner:number, isAdmin:number) {\r\n        let cur = this.cur;\r\n        cur.isOwner = isOwner;\r\n        cur.isAdmin = isAdmin;\r\n        let fellowId = cur.id, unitId = this.store.unit.id;\r\n        await mainApi.unitSetAdmin(fellowId, unitId, isOwner, isAdmin);\r\n        this.removeCur(this.owners);\r\n        this.removeCur(this.admins);\r\n        this.removeCur(this.fellows);\r\n        if (isOwner === 0 && isAdmin === 0)\r\n            this.fellows.unshift(cur);\r\n        else {\r\n            if (isOwner === 1) this.owners.unshift(cur);\r\n            if (isAdmin === 1) this.admins.unshift(cur);\r\n        }\r\n    }\r\n\r\n    async addNew(user:string, isOwner:number, isAdmin:number):Promise<UnitAdmin> {\r\n        let admin = await mainApi.unitAddAdmin(user, this.store.unit.id, isOwner, isAdmin);\r\n        if (admin !== undefined) {\r\n            let cur = this.cur = admin;\r\n            this.removeCur(this.owners);\r\n            this.removeCur(this.admins);\r\n            this.removeCur(this.fellows);\r\n            if (isOwner === 0 && isAdmin === 0)\r\n                this.fellows.unshift(cur);\r\n            else {\r\n                if (isOwner === 1) this.owners.unshift(cur);\r\n                if (isAdmin === 1) this.admins.unshift(cur);\r\n            }\r\n        }\r\n        return admin;\r\n    }\r\n}\r\n","import {observable, autorun} from 'mobx';\r\nimport _ from 'lodash';\r\nimport {devApi} from '../api';\r\nimport {DevModel, Unit} from '../model';\r\nimport {Store} from './index';\r\n\r\ninterface Counts {\r\n    uq: number;\r\n    app: number;\r\n    bus: number;\r\n    server: number;\r\n    service: number;\r\n    //uqdb: number;\r\n}\r\n\r\nexport abstract class ObjItems<T extends DevModel.ObjBase> {\r\n    protected store:Store;\r\n    protected dev:Dev;\r\n    constructor(store:Store, dev:Dev) {\r\n        this.store = store;\r\n        this.dev = dev;\r\n    }\r\n\r\n    @observable items: T[] = undefined;\r\n    @observable cur: T = undefined;\r\n\r\n    async load():Promise<void> {\r\n         let ret = await this._load();\r\n         this.items = ret;\r\n    }\r\n    protected abstract _load():Promise<T[]>;\r\n    async saveCur(item:T):Promise<boolean> {\r\n        let values:any = {};\r\n        if (this.cur !== undefined) {\r\n            _.assign(values, this.cur, item);\r\n        }\r\n        else {\r\n            _.assign(values, item);\r\n        }\r\n\r\n        values.unit = item.unit = this.store.unit.id;\r\n        let id = await this._save(values);\r\n        if (this.cur === undefined) {\r\n            if (id === 0) return false;\r\n            values.id = id;\r\n            if (this.items !== undefined) this.items.unshift(values);\r\n            this._inc();\r\n            this.cur = observable(values);\r\n        }\r\n        else {\r\n            _.assign(this.cur, values);\r\n        }\r\n        return true;\r\n    }\r\n    async save(item:T):Promise<T> {\r\n        let values:any = {};\r\n        _.assign(values, item);\r\n\r\n        values.unit = item.unit = this.store.unit.id;\r\n        let id = await this._save(values);\r\n        if (id === 0) return;\r\n        values.id = id;\r\n        return values;\r\n    }\r\n    protected abstract _save(item:T):Promise<number>;\r\n    async del():Promise<void> {\r\n        let c = this.cur;\r\n        if (c === undefined) return;\r\n        let id = c.id;\r\n        await this._del(c);\r\n        if (this.items === undefined) return;\r\n        let index = this.items.findIndex(v => v.id === id);\r\n        if (index>=0) {\r\n            this.items.splice(index, 1);\r\n            this._dec();\r\n        }\r\n    }\r\n    protected abstract _del(item:T):Promise<void>;\r\n    protected abstract _inc();\r\n    protected abstract _dec();\r\n}\r\n\r\nclass Apps extends ObjItems<DevModel.App> {\r\n    @observable uqs: DevModel.UQ[] = undefined;\r\n    @observable searchedUqs: DevModel.UQ[] = undefined;\r\n    //@observable service: DevModel.Service = null;\r\n    protected async _load() {\r\n        return await devApi.apps(this.store.unit.id);\r\n    }\r\n    protected async _save(item:DevModel.App):Promise<number> {\r\n        return await devApi.saveApp(item);\r\n    }\r\n    protected async _del(item:DevModel.App):Promise<void> {\r\n        await devApi.delApp(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.app++; }\r\n    protected _dec() { this.dev.counts.app--; }\r\n\r\n    public async loadCurUqs() {\r\n        let ret = await devApi.loadAppUqs(this.cur.id);\r\n        this.uqs = ret;\r\n    }\r\n    public async searchUq(key:string) {\r\n        this.searchedUqs = await devApi.searchUq(this.store.unit.id, key, 0, searchPageSize);\r\n    }\r\n    public async appBindUq(uqs:{id:number, access:string[]}[], bind:boolean) {\r\n        let allUqs:{id:number, access:string[]}[] = this.uqs.map(v => {\r\n            let {id, access} = v;\r\n            return {id: id, access: [access]};\r\n        });\r\n        for (let uq of uqs) {\r\n            let index = allUqs.findIndex(v => v.id === uq.id);\r\n            if (bind === true) {\r\n                if (index < 0) allUqs.unshift(uq);\r\n            }\r\n            else {\r\n                allUqs.splice(index, 1);\r\n            }\r\n        }\r\n        await devApi.appBindUq(this.store.unit.id, this.cur.id, allUqs);\r\n        for (let uq of uqs) {\r\n            let index = this.uqs.findIndex(a => a.id === uq.id);\r\n            if (index>=0) this.uqs.splice(index, 1);\r\n            if (bind === true) {\r\n                if (this.searchedUqs !== undefined) {\r\n                    let find = this.searchedUqs.find(a => a.id === uq.id);\r\n                    if (find !== undefined) this.uqs.unshift(find);\r\n                }\r\n            }\r\n            else {\r\n                // 已经删除，不需要处理\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass Uqs extends ObjItems<DevModel.UQ> {\r\n    protected async _load() {\r\n        let ret = await devApi.uqs(this.store.unit.id);\r\n        return ret;\r\n    }\r\n    protected async _save(item:DevModel.UQ):Promise<number> {\r\n        //let {access} = item;\r\n        //if (!access) access = \"*\";\r\n        //let parts = access.split(',').map(v => v.trim()).filter(v => v!=='');\r\n        //item.access = parts.join(',');\r\n        return await devApi.saveUq(item);\r\n    }\r\n    protected async _del(item:DevModel.UQ):Promise<void> {\r\n        await devApi.delUq(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.uq++; }\r\n    protected _dec() { this.dev.counts.uq--; }\r\n}\r\n\r\nclass Buses extends ObjItems<DevModel.Bus> {\r\n    protected async _load() {\r\n        let ret = await devApi.buses(this.store.unit.id);\r\n        return ret;\r\n    }\r\n    protected async _save(item:DevModel.Bus):Promise<number> {\r\n        return await devApi.saveBus(item);\r\n    }\r\n    protected async _del(item:DevModel.Bus):Promise<void> {\r\n        await devApi.delBus(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.bus++; }\r\n    protected _dec() { this.dev.counts.bus--; }\r\n}\r\n\r\nclass Servers extends ObjItems<DevModel.Server> {\r\n    protected async _load() {\r\n        return await devApi.servers(this.store.unit.id);\r\n    }\r\n    protected async _save(item:DevModel.Server):Promise<number> {\r\n        return await devApi.saveServer(item);\r\n    }\r\n    protected async _del(item:DevModel.Server):Promise<void> {\r\n        await devApi.delServer(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.server++; }\r\n    protected _dec() { this.dev.counts.server--; }\r\n}\r\n/*\r\nclass Uqdbs extends ObjItems<DevModel.Uqdb> {\r\n    protected async _load() {\r\n        return await devApi.uqdbs(this.store.unit.id);\r\n    }\r\n    protected async _save(item:DevModel.Uqdb):Promise<number> {\r\n        return await devApi.saveUqdb(item);\r\n    }\r\n    protected async _del(item:DevModel.Uqdb):Promise<void> {\r\n        await devApi.delUqdb(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.uqdb++; }\r\n    protected _dec() { this.dev.counts.uqdb--; }\r\n}\r\n*/\r\nclass Services extends ObjItems<DevModel.Service> {\r\n    protected async _load() {\r\n        return await devApi.services(this.store.unit.id);\r\n    }\r\n    protected async _save(item:DevModel.Service):Promise<number> {\r\n        return await devApi.saveService(item);\r\n    }\r\n    protected async _del(item:DevModel.Service):Promise<void> {\r\n        await devApi.delService(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.service++; }\r\n    protected _dec() { this.dev.counts.service--; }\r\n    async changeProp(prop:string, value:any):Promise<number> {\r\n        let ret = await devApi.changeServiceProp(this.store.unit.id, this.cur.id, prop, value);\r\n        switch (prop) {\r\n            case 'url': this.cur.url = value; break;\r\n            case 'server': this.cur.server = value; break;\r\n            case 'db': this.cur.db = value; break;\r\n            case 'db_type': this.cur.db_type = value; break;\r\n            case 'connection': this.cur.connection = value; break;\r\n        }\r\n        return ret;\r\n    }\r\n    async loadUqServices(uq:number):Promise<void> {\r\n        let ret = await devApi.loadUqServices(this.store.unit.id, uq);\r\n        this.items = ret[0];\r\n    }\r\n}\r\n\r\nconst searchPageSize = 50;\r\ntype Search = (unit:number,key:string,pageStart:number,pageSize:number)=>Promise<any[]>;\r\nclass SearchItems<T extends DevModel.ObjBase> {\r\n    private store:Store;\r\n    private dev:Dev;\r\n    private search:(unit:number,key:string,pageStart:number,pageSize:number)=>Promise<any[]>;\r\n\r\n    constructor(store:Store, dev:Dev, search:Search) {\r\n        this.store = store;\r\n        this.dev = dev;\r\n        this.search = search;\r\n    }\r\n\r\n    @observable items: T[] = undefined;\r\n    allLoaded: boolean = false;\r\n    private key: string;\r\n    private pageStart = 0;\r\n\r\n    async first(key:string) {\r\n        this.key = key;\r\n        this.items = undefined;\r\n        this.allLoaded = false;\r\n        this.pageStart = 0;\r\n        await this.more();\r\n    }\r\n\r\n    async more():Promise<void> {\r\n        if (this.allLoaded === true) return;\r\n        let ret = await this.search(this.store.unit.id, this.key, this.pageStart, searchPageSize);\r\n        let len = ret.length;\r\n        if (len > searchPageSize) {\r\n            this.allLoaded = false;\r\n            --len;\r\n            ret.splice(len, 1);\r\n        }\r\n        else {\r\n            this.allLoaded = true;\r\n        }\r\n        if (len > 0) {\r\n            this.pageStart = ret[len-1].id;\r\n            if (this.items === undefined)\r\n                this.items = ret;\r\n            else\r\n                this.items.push(...ret);\r\n        }\r\n        else {\r\n            this.items = [];\r\n        }\r\n    }\r\n}\r\n\r\nexport class Dev {\r\n    private store:Store;\r\n    constructor(store:Store) {\r\n        this.store = store;\r\n        this.apps = new Apps(store, this);\r\n        this.uqs = new Uqs(store, this);\r\n        this.buses = new Buses(store, this);\r\n        this.servers = new Servers(store, this);\r\n        //this.uqdbs = new Uqdbs(store, this);\r\n        this.services = new Services(store, this);\r\n        this.searchApp = new SearchItems<DevModel.App>(store, this, devApi.searchApp.bind(devApi));\r\n        this.searchUq = new SearchItems<DevModel.UQ>(store, this, devApi.searchUq.bind(devApi));\r\n        this.searchServer = new SearchItems<DevModel.Server>(store, this, devApi.searchServer.bind(devApi));\r\n    }\r\n\r\n    @observable counts:Counts = undefined;\r\n    apps:Apps = undefined;\r\n    uqs:Uqs = undefined;\r\n    buses:Buses = undefined;\r\n    servers:Servers = undefined;\r\n    //uqdbs:Uqdbs = undefined;\r\n    services:Services = undefined;\r\n\r\n    searchApp:SearchItems<DevModel.App> = undefined;\r\n    searchUq:SearchItems<DevModel.UQ> = undefined;\r\n    searchServer:SearchItems<DevModel.Server> = undefined;\r\n    searchUqdb:SearchItems<DevModel.Uqdb> = undefined;\r\n    \r\n    async loadCounts(): Promise<void> {\r\n        let {unit} = this.store;\r\n        this.counts = await devApi.counts(unit.id);\r\n    }\r\n}\r\n","import {CacheIds} from 'tonva-tools';\r\nimport {Id, Unit, DevModel} from '../model';\r\nimport {mainApi, devApi} from '../api';\r\n\r\nexport class CacheUnits extends CacheIds<Unit> {\r\n    protected async _loadIds(ids:number[]):Promise<Unit[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<Unit> {\r\n        return await mainApi.unit(id);\r\n    }\r\n}\r\n\r\nexport class CacheUqs extends CacheIds<DevModel.UQ> {\r\n    protected async _loadIds(ids:number[]):Promise<DevModel.UQ[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<DevModel.UQ> {\r\n        return await devApi.uq(id);\r\n    }\r\n}\r\n\r\nexport class CacheApps extends CacheIds<DevModel.App> {\r\n    protected async _loadIds(ids:number[]):Promise<DevModel.App[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<DevModel.App> {\r\n        return await devApi.app(id);\r\n    }\r\n}\r\n\r\nexport class CacheServers extends CacheIds<DevModel.Server> {\r\n    protected async _loadIds(ids:number[]):Promise<DevModel.Server[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<DevModel.Server> {\r\n        return await devApi.server(id);\r\n    }\r\n}\r\n","import {observable, autorun} from 'mobx';\r\nimport _ from 'lodash';\r\n//import {appIcon, appItemIcon} from './consts';\r\nimport {meInFrame, host} from 'tonva-tools';\r\nimport {mainApi, devApi} from '../api';\r\nimport {Unit, UnitApps, App, Api, UnitAdmin, UnitApp, Role, RoleMember} from '../model';\r\nimport {Admins} from './admins';\r\nimport {Dev} from './dev';\r\nimport {CacheUnits, CacheUqs, CacheApps, CacheServers} from './cacheIds';\r\n\r\nexport class Store {\r\n    private get unitId():number {return meInFrame.unit;};\r\n    admins:Admins;\r\n    dev:Dev;\r\n    cacheUnits: CacheUnits;\r\n    cacheUqs: CacheUqs;\r\n    cacheApps: CacheApps;\r\n    cacheServers: CacheServers;\r\n    uqServer: string;\r\n\r\n    @observable unit: Unit;\r\n    @observable memberCount: number;\r\n    @observable apps: UnitApp[];\r\n    @observable role:Role;\r\n    @observable roles: Role[];\r\n    @observable roleApps: UnitApp[];\r\n    @observable roleMember: RoleMember;\r\n    @observable roleMembers: RoleMember[];\r\n    @observable memberRoles: Role[];\r\n\r\n    init() {\r\n        this.unit = undefined;\r\n        this.admins = new Admins(this);\r\n        this.dev = new Dev(this);\r\n        this.cacheUnits = new CacheUnits();\r\n        this.cacheUqs = new CacheUqs();\r\n        this.cacheApps = new CacheApps();\r\n        this.cacheServers = new CacheServers();\r\n    }\r\n\r\n    logout() {\r\n        //meInFrame.app = undefined;\r\n        meInFrame.hash = undefined;\r\n        //let unitId = process.env.REACT_APP_DEBUG_UNITID;\r\n        //if (unitId !== undefined)\r\n        //    meInFrame.unit = Number(unitId);\r\n        meInFrame.unit = undefined;\r\n        this.init();\r\n        this.memberCount = undefined;\r\n        this.apps = undefined;\r\n        this.role = undefined;\r\n        this.roles = undefined;\r\n        this.roleApps = undefined;\r\n        this.roleMember = undefined;\r\n        this.roleMembers = undefined;\r\n        this.memberRoles = undefined;\r\n    }\r\n\r\n    setRole(role:Role) {\r\n        if (this.role === role) return;\r\n        this.role = role;\r\n        this.roleApps = undefined;\r\n        this.roleMember = undefined;\r\n        this.roleMembers = undefined;\r\n        this.memberRoles = undefined;\r\n    }\r\n\r\n    setRoleUser(user:RoleMember) {\r\n        if (this.roleMember === user) return;\r\n        this.roleMember = user;\r\n        this.memberRoles = undefined;\r\n    }\r\n\r\n    async unitChangeProp(prop:string, value:any):Promise<void> {\r\n        await mainApi.unitChangeProp(this.unit.id, prop, value);\r\n        this.unit[prop] = value;\r\n    }\r\n\r\n    async loadApps(): Promise<void> {\r\n        if (this.apps !== undefined) return;\r\n        this.apps = await mainApi.unitApps(this.unitId);\r\n    }\r\n\r\n    async loadUnit(): Promise<void> {\r\n        if (this.unitId === undefined) return;\r\n        let ret = await mainApi.unit(this.unitId);\r\n        this.unit = ret;\r\n        console.log(\"loadUnit unit=%s\", ret);\r\n        this.memberCount = await mainApi.unitMemberCount(this.unitId);\r\n        let uqServer = await devApi.uqBuilderUrl();\r\n        let {url, urlDebug} = uqServer;\r\n        this.uqServer = host.getUrlOrDebug(url, urlDebug);\r\n        console.log(\"uq-build: %s\", JSON.stringify(this.uqServer));\r\n    }\r\n\r\n    async stopUnitApp(appId:number): Promise<void> {\r\n        await mainApi.unitDeleteApp(this.unit.id, appId, 1);\r\n        let app = this.apps.find(v => v.id === appId);\r\n        app.inUnit = 0;\r\n    }\r\n\r\n    async restoreUnitApp(appId:number): Promise<number> {\r\n        let ret = await mainApi.unitAddApp(this.unit.id, appId);\r\n        if (ret <= 0) return ret;\r\n        let app = this.apps.find(v => v.id === appId);\r\n        app.inUnit = 1;\r\n        return 1;\r\n    }\r\n\r\n    async addUnitApp(app:UnitApp): Promise<number> {\r\n        let ret = await mainApi.unitAddApp(this.unit.id, app.id);\r\n        if (ret <= 0) return ret;\r\n        this.apps.push(app);\r\n        return 1;\r\n    }\r\n\r\n    async loadRoles(): Promise<void> {\r\n        if (this.roles !== undefined) return;\r\n        let ret = await mainApi.unitRoles(this.unit.id);\r\n        ret.forEach(v => {\r\n            switch (v.id) {\r\n                case 1: \r\n                    v.name= '访客';\r\n                    v.discription = '可以获取开放信息';\r\n                    break;\r\n                case 2: \r\n                    v.name= '普通';\r\n                    v.discription = '能访问最基本的功能';\r\n                    break;\r\n            }\r\n        });\r\n        this.roles = ret;\r\n    }\r\n\r\n    async unitAddRole(name:string, discription:string): Promise<number> {\r\n        let id = await mainApi.unitAddRole(this.unit.id, name, discription);\r\n        if (id > 0) {\r\n            this.roles.push({\r\n                id: id,\r\n                name: name,\r\n                discription: discription,\r\n                count: undefined,\r\n            });\r\n        }\r\n        return id;\r\n    }\r\n\r\n    async roleChangeProp(prop:string, value:any):Promise<void> {\r\n        await mainApi.unitRoleChangeProp(this.unit.id, this.role.id, prop, value);\r\n        this.role[prop] = value;\r\n    }\r\n\r\n    async loadRoleApps():Promise<void> {\r\n        let ret = await mainApi.unitRoleApps(this.unit.id, this.role.id);\r\n        this.roleApps = ret.map(v => {\r\n            return this.apps.find(app=>app.id === v.id);\r\n        });\r\n    }\r\n\r\n    async setRoleApps(apps:UnitApp[]) {\r\n        await mainApi.unitRoleSetApps(this.unit.id, this.role.id, apps.map(v=>v.id));\r\n        this.roleApps = apps;\r\n    }\r\n\r\n    async loadMembers():Promise<void> {\r\n        let ret = await mainApi.unitMembers(this.unit.id, this.role === undefined? 0:this.role.id, undefined, 0, 100);\r\n        this.roleMembers = ret;\r\n    }\r\n\r\n    async unitAssignMember(assigned:string):Promise<void> {\r\n        await mainApi.unitAssignMember(this.unit.id, this.roleMember.id, assigned);\r\n        this.roleMember.assigned = assigned;\r\n    }\r\n\r\n    async loadMemberRoles():Promise<void> {\r\n        let ret = await mainApi.unitMemberRoles(this.unit.id, this.roleMember.id);\r\n        let roles:Role[] = ret.map(v => {\r\n            let rId = v.id;\r\n            let role = this.roles.find(r => r.id === rId);\r\n            return _.clone(role);\r\n        });\r\n        this.memberRoles = roles;\r\n    }\r\n\r\n    async setMemberRoles(memberRoles:Role[]) {\r\n        await mainApi.unitSetMemberRoles(this.unit.id, this.roleMember.id, memberRoles.map(v=>v.id));\r\n        this.roles.forEach(role => {\r\n            let rId = role.id;\r\n            let org = this.memberRoles.find(v => v.id === rId);\r\n            let cur = memberRoles.find(v => v.id === rId);\r\n            if (org !== undefined) {\r\n                if (cur !== undefined) return;\r\n                role.count--;\r\n                return;\r\n            }\r\n            if (cur === undefined) return;\r\n            role.count++;\r\n        });\r\n        this.memberRoles = memberRoles;\r\n    }\r\n};\r\n\r\nexport const store = new Store();\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\n\r\nexport function span(\r\n    isLink:boolean,\r\n    className:string, \r\n    onClick:(evt:React.MouseEventHandler<HTMLElement>)=>void,\r\n    content:any): JSX.Element\r\n{\r\n    let tag:string;\r\n    let props:any;\r\n    if (isLink === true) {\r\n        tag = 'a';\r\n        props = {\r\n            className: classNames(className, 'cursor-pointer'),\r\n            onClick: onClick,\r\n            href: '#',\r\n        }\r\n    }\r\n    else {\r\n        tag = 'span';\r\n        props = {\r\n            className: className,\r\n        }\r\n    }\r\n    return React.createElement(tag, props, content);\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport * as classNames from 'classnames';\r\nimport {Prop, ListProp, Media, PropGrid} from 'tonva-react-form';\r\nimport {nav, Page}  from 'tonva-tools';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {store} from '../store';\r\nimport {Unit, DevModel} from '../model';\r\nimport {devApi} from '../api';\r\nimport {span} from './span';\r\n\r\nexport interface UnitLinkProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class UnitSpan extends React.Component<UnitLinkProps> {\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<UnitInfo id={this.props.id} />);\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        if (id === undefined) return null;\r\n        let unit = store.cacheUnits.get(id);\r\n        let content;\r\n        let {name, nick, discription} = unit;\r\n        let disc = discription && '- ' + discription;\r\n        if (nick) {\r\n            content = <>{nick} &nbsp; <small className=\"text-muted\">{name} {disc}</small></>;\r\n        }\r\n        else if (name) {\r\n            content = <>{name} &nbsp; <small className=\"text-muted\">{disc}</small></>;\r\n        }\r\n        else {\r\n            content = id;\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\n@observer\r\nexport class UnitName extends React.Component<UnitLinkProps> {\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        if (id === undefined) return null;\r\n        let unit = store.cacheUnits.get(id);\r\n        let {name} = unit;\r\n        return <>{name}</>;\r\n    }\r\n}\r\n\r\nclass UnitInfo extends React.Component<UnitLinkProps> {\r\n    private rows:Prop[];\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        let unit = store.cacheUnits.get(this.props.id);\r\n        let {name, nick, icon, discription} = unit;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={icon || appIcon} main={name} discription={discription} />},\r\n            '',\r\n        ];\r\n        return <Page header={'小号 - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport * as classNames from 'classnames';\r\nimport {Prop, Media, PropGrid} from 'tonva-react-form';\r\nimport {nav, Page}  from 'tonva-tools';\r\nimport {appIcon, appItemIcon} from 'consts';\r\nimport {store} from 'store';\r\nimport {DevModel} from 'model';\r\nimport {IdDates} from './idDates';\r\nimport {span} from './span';\r\nimport {UnitSpan} from './unitSpan';\r\n\r\nexport interface UqLinkProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class UqSpan extends React.Component<UqLinkProps> {\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<UqInfo id={this.props.id} />);\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, className, isLink} = this.props;\r\n        let api = store.cacheUqs.get(id);\r\n        let content;\r\n        if (api === null) {\r\n            content = id;\r\n        }\r\n        else {\r\n            let {name, discription} = api;\r\n            let disc = discription && '- ' + discription;\r\n            if (name !== undefined) {\r\n                content = <React.Fragment>{name} &nbsp; <small className=\"text-muted\">{disc}</small></React.Fragment>;\r\n            }\r\n            else {\r\n                content = id;\r\n            }\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\n@observer\r\nclass UqInfo extends React.Component<UqLinkProps> {\r\n    private rows:Prop[];\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        let uq = store.cacheUqs.get(this.props.id);\r\n        let {name, discription, unit, date_init, date_update} = uq;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={name} discription={disp} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n        ];\r\n        return <Page header={'UQ - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport * as classNames from 'classnames';\r\nimport {Prop, ListProp, Media, PropGrid} from 'tonva-react-form';\r\nimport {nav, Page}  from 'tonva-tools';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {store} from '../store';\r\nimport {DevModel} from '../model';\r\nimport {devApi} from '../api';\r\nimport {span} from './span';\r\nimport {IdDates} from './idDates';\r\nimport {UnitSpan} from './unitSpan';\r\n\r\nexport interface AppSpanProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class AppSpan extends React.Component<AppSpanProps> {\r\n    /*\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.onClick = this.onClick.bind(this);\r\n    }\r\n    componentWillMount() {\r\n        let {id} = this.props;\r\n        store.cacheApps.get(id);\r\n    }\r\n    */\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<AppInfo id={this.props.id} />)\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        let app = store.cacheApps.get(id);\r\n        let content;\r\n        if (app === null) {\r\n            content = id;\r\n        }\r\n        else {\r\n            let {name, icon, discription} = app;\r\n            let isPublic = app.public;\r\n            let disc = discription && '- ' + discription;\r\n            if (name !== undefined) {\r\n                content = <React.Fragment>{name} &nbsp; <small className=\"text-muted\">{disc}</small></React.Fragment>;\r\n            }\r\n            else {\r\n                content = id;\r\n            }\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\n\r\n@observer\r\nclass AppInfo extends React.Component<AppSpanProps> {\r\n    private rows:Prop[];\r\n    @observable private apis:ListProp = {\r\n        label: '关联API', type: 'list', list: undefined, row: AppRow\r\n    };\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    async componentDidMount() {\r\n        this.apis.list = await devApi.loadAppUqs(this.props.id);\r\n    }\r\n    render() {\r\n        let app = store.cacheApps.get(this.props.id);\r\n        let {unit, name, discription, icon, date_init, date_update} = app;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={icon || appIcon} main={name} discription={disp} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            this.apis,\r\n        ];\r\n        return <Page header={'APP - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass AppRow extends React.Component<any> {\r\n    render() {\r\n        let {name, discription} = this.props;\r\n        let disp;\r\n        if (discription) disp = <div className=\"small text-muted\">{discription}</div>;\r\n        return <div className='form-control-plaintext'>\r\n            <div>{name}</div>\r\n            {disp}\r\n        </div>\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport * as classNames from 'classnames';\r\nimport {Prop, ListProp, Media, PropGrid} from 'tonva-react-form';\r\nimport {nav, Page}  from 'tonva-tools';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {store} from '../store';\r\nimport {DevModel} from '../model';\r\nimport {devApi} from '../api';\r\nimport {span} from './span';\r\nimport {IdDates} from './idDates';\r\nimport {UnitSpan} from './unitSpan';\r\n\r\nexport interface ServerSpanProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class ServerSpan extends React.Component<ServerSpanProps> {\r\n    /*\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.onClick = this.onClick.bind(this);\r\n    }\r\n    componentWillMount() {\r\n        let {id} = this.props;\r\n        store.cacheServers.get(id);\r\n    }\r\n    */\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<ServerInfo id={this.props.id} />)\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        let server = store.cacheServers.get(id);\r\n        let content;\r\n        if (server === null) {\r\n            content = id;\r\n        }\r\n        else {\r\n            let {cloud, ip, discription} = server;\r\n            if (discription !== undefined) {\r\n                content = <React.Fragment>{discription} &nbsp; <small className=\"text-muted\">{ip}</small></React.Fragment>;\r\n            }\r\n            else {\r\n                content = id;\r\n            }\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\nclass ServerInfo extends React.Component<ServerSpanProps> {\r\n    private rows:Prop[];\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        let server = store.cacheServers.get(this.props.id);\r\n        let {discription, cloud, ip, unit, date_init, date_update} = server;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={discription} discription={ip} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            {type: 'string', label: '云服务', name: 'cloud'},\r\n        ];\r\n        return <Page header={'服务器 - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {nav, Page} from 'tonva-tools';\r\n\r\ninterface StringValueEditProps {\r\n    title: string;\r\n    onChanged:(value:any, orgValue:any)=>Promise<string|void>;\r\n    value?: any;\r\n    buttonText?: string;\r\n    info?: string;\r\n}\r\ninterface StringValueEditState {\r\n    disabled: boolean;\r\n    error?: string;\r\n}\r\n\r\nexport class StringValueEdit extends React.Component<StringValueEditProps, StringValueEditState> {\r\n    //private input:HTMLInputElement;\r\n    protected value: string;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            disabled: true,\r\n        };\r\n    }\r\n    /*\r\n    private ref = (input:HTMLInputElement) => {\r\n        if (!input) return;\r\n        input.value = this.props.value || '';\r\n        this.input = input;\r\n    }*/\r\n    private onChange = (evt:React.FormEvent<HTMLInputElement>) => {\r\n        let val = this.props.value;\r\n        let org = val && val.trim();\r\n        this.value = evt.currentTarget.value.trim();\r\n        this.setState({\r\n            disabled: org === this.value\r\n        });\r\n        \r\n    }\r\n    protected onSubmit = async () => {\r\n        let val = this.props.value;\r\n        let org = val && val.trim();\r\n        let v = this.value; // this.input.value.trim();\r\n        let onChanged = this.props.onChanged;\r\n        if (onChanged !== undefined) {\r\n            let ret = await onChanged(v, org);\r\n            if (typeof ret === 'string') {\r\n                this.setState({error: ret});\r\n                return;\r\n            }\r\n            nav.pop();\r\n        }\r\n    }\r\n    protected renderControl() {\r\n        return <input className=\"form-control w-100\" type=\"text\"\r\n            // ref={this.ref}\r\n            defaultValue={this.props.value}\r\n            onChange={this.onChange} />\r\n    }\r\n    render() {\r\n        let {title, onChanged, buttonText, info, value} = this.props;\r\n        let {disabled, error} = this.state;\r\n        let right = <button\r\n            className=\"btn btn-success btn-sm\"\r\n            disabled={disabled}\r\n            onClick={this.onSubmit}\r\n        >\r\n            {buttonText||'保存'}\r\n        </button>;\r\n        let errorDiv;\r\n        if (error !== undefined) errorDiv = <div className='text-danger'>{error}</div>;\r\n        return <Page header={title} right={right}>\r\n            <div className=\"my-4 mx-3\">\r\n                {this.renderControl()}\r\n                {errorDiv}\r\n                <small className=\"d-block mt-2 text-muted\">{info}</small>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n\r\nexport class TextValueEdit extends StringValueEdit {\r\n    /*\r\n    private textArea:HTMLTextAreaElement;\r\n    private refTextArea = (textArea:HTMLTextAreaElement) => {\r\n        if (!textArea) return;\r\n        textArea.value = this.props.value || '';\r\n        this.textArea = textArea;\r\n    }\r\n    */\r\n    private onTextAreaChange = (evt:React.FormEvent<HTMLTextAreaElement>) => {\r\n        let val = this.props.value;\r\n        let org = val && val.trim();\r\n        this.value = evt.currentTarget.value.trim();\r\n        this.setState({\r\n            disabled: org === this.value\r\n        })\r\n    }\r\n    protected renderControl() {\r\n        return <textarea className=\"form-control w-100\" rows={8}\r\n            // ref={this.refTextArea}\r\n            defaultValue={this.props.value}\r\n            onChange={this.onTextAreaChange} />\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page, Context, Form, Schema, UiSchema, UiTextItem} from 'tonva-tools';\r\nimport {store} from '../store';\r\n\r\n@observer\r\nexport default class NewFellowPage extends React.Component<{isOwner:boolean, isAdmin:boolean}> {\r\n    //private form: TonvaForm;\r\n    private schema: Schema = [\r\n        {name:'user', type:'string', required:true},\r\n        {name:'submit', type:'submit'}\r\n    ]\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            user: {widget:'text', maxLength: 100, placeholder: '用户名', label: '邀请成员'} as UiTextItem,\r\n            submit: {widget:'button', label: '邀请'}\r\n        }\r\n    }\r\n    /*\r\n    private formRows:FormRow[] = [\r\n        {\r\n            label: '用户名',\r\n            field: {\r\n                type: 'string',\r\n                name: 'user',\r\n                required: true,\r\n                maxLength: 100,\r\n            },\r\n            face: {\r\n                type: 'string',\r\n                placeholder: '用户名',\r\n            }\r\n        },\r\n    ];\r\n    private schema:FormSchema = new FormSchema({\r\n        fields: [\r\n            {\r\n                type: 'string',\r\n                name: 'user',\r\n                placeholder: '用户名',\r\n                label: '邀请成员',\r\n                rules: ['required', 'maxlength:100']\r\n            },\r\n        ],\r\n        onSumit: this.onSendInvitation,\r\n        submitText: '邀请'\r\n    });\r\n    */\r\n    private onSendInvitation = async (name:string, context:Context): Promise<string> => {\r\n        let {isOwner, isAdmin} = this.props;\r\n        let user = context.form.data['user'];\r\n        let ret = await store.admins.addNew(user, isOwner?1:0, isAdmin?1:0);\r\n        if (ret !== undefined) {\r\n            nav.pop();\r\n            return;\r\n        }\r\n        return user + '没有关注小号';\r\n        /*\r\n        let msg = {a: 1, b: 'ddd'};\r\n        let toName = values['user'];\r\n        let userId = await mainApi.userId(toName);\r\n        if (userId === 0) {\r\n            this.form.formView.setError('user', '\\'' + toName +  '\\' 不存在');\r\n            return;\r\n        }\r\n        await mainApi.sendMessage(userId, 'unit-follow-invite', msg);\r\n        nav.replace(<Page header='完成' back=\"close\">\r\n            <Card>\r\n                <CardBody>\r\n                    <CardTitle>邀请成员</CardTitle>\r\n                    <CardText>已发送给{toName}，请等待确认。</CardText>\r\n                    <Button color='primary' onClick={()=>nav.back()}>完成</Button>\r\n                </CardBody>\r\n            </Card>\r\n        </Page>);\r\n        */\r\n    }\r\n    render() {\r\n        let {isOwner, isAdmin} = this.props;\r\n        let caption = isOwner? \"高管\" : \"管理员\";\r\n        return <Page header={'新增' + caption}>\r\n            <div className=\"container\">\r\n                <div className='my-4 text-info'>\r\n                    只有关注本小号的用户，才能成为{caption}\r\n                </div>\r\n                <Form schema={this.schema} uiSchema={this.uiSchema} onButtonClick={this.onSendInvitation}/>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n// <ValidForm formSchema={this.schema} />\r\n//<TonvaForm ref={f=>this.form=f} formRows={this.formRows} onSubmit={this.onSendInvitation} />\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page, Schema, UiSchema, ItemSchema, UiCheckItem, UiButton, ButtonSchema, Form, Context} from 'tonva-tools';\r\nimport {store} from '../store';\r\nimport { UnitAdmin } from '../model/index';\r\n//import {mainApi} from '../api';\r\n//, ValidForm, FormSchema, FormFields, Field\r\n\r\n@observer\r\nexport default class EditAdmin extends React.Component {\r\n    private schema:Schema;\r\n    private uiSchema: UiSchema;\r\n\r\n    private async onSubmit(name:string, context:Context) {\r\n        let {isOwner, isAdmin} = context.form.data;\r\n        await store.admins.unitSetAdmin(isOwner, isAdmin);\r\n        nav.pop();\r\n    }\r\n    componentWillMount() {\r\n        let {unit} = store;\r\n        let {isRoot, isOwner, isAdmin} = unit;\r\n        let unitAdmin = store.admins.cur;\r\n        let owner:ItemSchema = {name: 'isOwner', type: 'boolean'};\r\n        let admin:ItemSchema = {name: 'isAdmin', type: 'boolean'};\r\n        let submit:ButtonSchema = {name: 'submit', type: 'submit'};\r\n        if (isRoot === 1) this.schema = [owner, admin, submit];\r\n        else if (isOwner === 1) this.schema = [admin, submit];\r\n\r\n        this.uiSchema = {\r\n            items: {\r\n                'isOwner': {widget: 'checkbox', label: '高管', trueValue:1, falseValue:0} as UiCheckItem,\r\n                'isAdmin': {widget: 'checkbox', label: '管理员', trueValue:1, falseValue:0} as UiCheckItem,\r\n                'submit': {widget: 'button', label: '提交'} as UiButton,\r\n            }\r\n        };\r\n        /*\r\n        let fields: Field[] = [];\r\n        let ownerField: Field = {\r\n            type: 'checkbox',\r\n            name: 'isOwner',\r\n            label: '高管',\r\n            defaultValue: unitAdmin.isOwner,\r\n        };\r\n        let adminField: Field = {\r\n            type: 'checkbox',\r\n            name: 'isAdmin',\r\n            label: '管理员',\r\n            defaultValue: unitAdmin.isAdmin,\r\n        };\r\n        if (isRoot === 1) {\r\n            fields.push(ownerField);\r\n            fields.push(adminField);\r\n        }\r\n        else if (isOwner === 1) {\r\n            fields.push(adminField);\r\n        }        \r\n        this.schema = new FormSchema({\r\n            fields: fields,\r\n            onSumit: this.onSubmit.bind(this),\r\n            submitText: '提交'\r\n        });\r\n        */\r\n    }\r\n    render() {\r\n        return <Page header='权限'>\r\n            <Fellow {...store.admins.cur} />\r\n            <Form schema={this.schema} uiSchema={this.uiSchema} onButtonClick={this.onSubmit} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nconst Fellow = (props:UnitAdmin) => {\r\n    let {name, nick, icon} = props;\r\n    return <div className=\"container\">\r\n        <div className='row my-4'>\r\n            <div className=\"col-xs-2 d-flex justify-content-end align-items-start\">\r\n                <img className='w-75' src={icon || process.env.REACT_APP_DEFAULT_ICON} />\r\n            </div>\r\n            <div className=\"col-xs-auto\">\r\n                <h4 className='text-dark'>{name}</h4>\r\n                <h6><small className='text-secondary'>{nick}</small></h6>\r\n                <div className='text-info'>设置成员权限</div>\r\n            </div>\r\n        </div>\r\n        <hr className='mb-4' />\r\n    </div>;\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {UnitApps, UnitAdmin} from '../model';\r\nimport {store} from '../store';\r\nimport NewFellow from './NewFellow';\r\nimport EditAdmin from './EditAdmin';\r\nimport {LMR, Badge, List} from 'tonva-react-form';\r\n\r\n@observer\r\nexport default class AdministorsPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.admins.load();\r\n    }\r\n\r\n    onNewFellow() {\r\n        //nav.push(<NewFellow />);\r\n    }\r\n    onItemClick(ua:UnitAdmin) {\r\n        store.admins.cur = ua;\r\n        nav.push(<EditAdmin />);\r\n    }\r\n    private row = ({icon, name, nick}:UnitAdmin) => {\r\n        let content;\r\n        if (nick === undefined) {\r\n            content = <b>{name}</b>;\r\n        }\r\n        else {\r\n            content = <><b>{nick}</b> &nbsp; <small className=\"text-muted\">{name}</small></>;\r\n        }\r\n        return <LMR className=\"py-2 px-3 align-items-stretch\"\r\n            left={<Badge size=\"sm\"><img src={icon|| appItemIcon} /></Badge>}>\r\n            <div className=\"px-3\">{content}</div>\r\n        </LMR>;\r\n    }\r\n\r\n    private onNewOwner = (evt: React.MouseEvent<HTMLAnchorElement>) => {\r\n        this.newAdmin(evt, true, false);\r\n    }\r\n\r\n    private onNewAdmin = (evt: React.MouseEvent<HTMLAnchorElement>) => {\r\n        this.newAdmin(evt, false, true);\r\n    }\r\n\r\n    private newAdmin(evt: React.MouseEvent<HTMLAnchorElement>, isOwner:boolean, isAdmin:boolean) {\r\n        evt.preventDefault();\r\n        nav.push(<NewFellow isOwner={isOwner} isAdmin={isAdmin} />);\r\n    } \r\n    render() {\r\n        //let n = nav;\r\n        //let me = n.local.user.get().id;\r\n        let {unit} = store;\r\n        if (unit === undefined) return;\r\n        let {owners, admins, fellows} = store.admins;\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.onNewFellow}>新增成员</button>;\r\n\r\n        let showOwners = false, showAdmins = false;\r\n        let ownersView, adminsView, fellowsView;\r\n        if (unit.isRoot === 1) {\r\n            showOwners = true;\r\n            showAdmins = true;\r\n        }\r\n        if (unit.isOwner === 1) showAdmins = true;\r\n        if (showOwners === true) {\r\n            let header = <LMR \r\n                className=\"px-3 small\"\r\n                left=\"高管\" \r\n                right={<a className=\"small\" href='#' onClick={this.onNewOwner}>新增</a>} />;\r\n            ownersView = <List \r\n                className=\"my-4\"\r\n                header={header} items={owners}\r\n                none=\"[无]\"\r\n                item={{onClick: this.onItemClick, render: this.row}}\r\n            />;\r\n        }\r\n        if (showAdmins === true) {\r\n            let header = <LMR \r\n                className=\"px-3 small\"\r\n                left=\"管理员\" \r\n                right={<a className=\"small\" href='#' onClick={this.onNewAdmin}>新增</a>} />;\r\n            adminsView = <List \r\n                className='my-4' \r\n                header={header} items={admins} \r\n                none='[无]'\r\n                item={{onClick: this.onItemClick, render: this.row}}\r\n            />;\r\n        }\r\n        return <Page header=\"管理员\" right={right}>\r\n            {ownersView}\r\n            {adminsView}\r\n            <div className=\"card mx-1 my-4\">\r\n                <div className=\"card-title\">说明</div>\r\n                <div className=\"card-body\">\r\n                    <ul style={{paddingLeft:'1em'}}>\r\n                        <li><div className=\"card-text\">管理组包括主人、高管、管理员</div></li>\r\n                        <li><div className=\"card-text\">小号主人可以增减高管</div></li>\r\n                        <li><div className=\"card-text\">高管可以增减管理员</div></li>\r\n                        <li><div className=\"card-text\">管理员可以管理小号，程序的开发，以及用户</div></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport {SearchBox, Media, List, LMR, Badge, Prop, PropGrid, FA} from 'tonva-react-form';\r\nimport {nav, Page, PageItems} from 'tonva-tools';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {IdDates, UnitSpan} from '../tools';\r\nimport {UnitApp, DevModel} from '../model';\r\nimport {store} from '../store';\r\nimport { devApi } from 'api';\r\n\r\n@observer\r\nexport class Info extends React.Component<{app:UnitApp, appActed?:(appId:number, inUnit:number)=>void}> {\r\n    @observable private uqAccesses: any[];\r\n    async componentWillMount() {\r\n        this.uqAccesses = await devApi.loadAppUqs(this.props.app.id);\r\n    }\r\n\r\n    private renderUqRow = (uqAccess:any, index:number):JSX.Element => {\r\n        let {name, owner, unit, discription} = uqAccess;\r\n        return <LMR className=\"py-2\" right={<small className=\"text-muted\">{discription}</small>}>\r\n            {owner} / {name}\r\n        </LMR>;\r\n    }\r\n\r\n    private act = async () => {\r\n        let {app, appActed} = this.props;\r\n        let {id, unit, inUnit} = app;\r\n        let newInUnit:number = 1;\r\n        if (inUnit === 0) {\r\n            let ret = await store.restoreUnitApp(id);\r\n            if (ret <= 0) alert('app 或者 uq 没有定义 service');\r\n        }\r\n        else if (inUnit === 1) {\r\n            await store.stopUnitApp(id);\r\n            newInUnit = 0;\r\n        }\r\n        else {\r\n            let newApp:UnitApp = _.clone(app);\r\n            newApp.id = id;\r\n            newApp.inUnit = 1;\r\n            let ret = await store.addUnitApp(newApp);\r\n            if (ret <= 0) alert('app 或者 uq 没有定义 service');\r\n        }\r\n        if (appActed !== undefined) {\r\n            appActed(id, newInUnit);\r\n        }\r\n        nav.pop();\r\n    }\r\n    render() {\r\n        let {unit, name, discription, icon, inUnit, date_init, date_update} = this.props.app;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let faName:string, text:string, color:string;\r\n        if (inUnit === 1) {\r\n            faName = 'ban';\r\n            text = '停用APP';\r\n            color = 'btn-danger';\r\n        }\r\n        else if (inUnit === 0) {\r\n            faName = 'refresh';\r\n            text = '恢复APP';\r\n            color = 'btn-success';\r\n        }\r\n        else {\r\n            faName = 'plus';\r\n            text = '启用APP';\r\n            color = 'btn-primary';\r\n        }\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <Media icon={icon || appIcon} main={name} discription={disp} />\r\n            },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                label: '开发号', \r\n                component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div>\r\n            },\r\n            {\r\n                type: 'component', \r\n                label: '关联UQ', \r\n                component: <List className=\"w-100\" items={this.uqAccesses} item={{render: this.renderUqRow}} />\r\n            },\r\n            '',\r\n            '',\r\n            {\r\n                type: 'component', \r\n                bk: '', \r\n                component: <button className={classNames('btn', 'w-100', color)} onClick={this.act}>\r\n                    <FA name={faName} size=\"lg\" /> {text}\r\n                </button>\r\n            },\r\n        ];\r\n        return <div>\r\n            <PropGrid rows={rows} values={this.props} />\r\n        </div>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {IObservableArray} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport {SearchBox, Media, List, LMR, Badge, Prop, PropGrid} from 'tonva-react-form';\r\nimport {nav, Page, PageItems} from 'tonva-tools';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {IdDates, UnitSpan} from '../tools';\r\nimport {mainApi} from '../api';\r\nimport {store} from '../store';\r\nimport {UnitApp} from '../model';\r\nimport {Info} from './info';\r\n\r\nclass PageApps extends PageItems<UnitApp> {\r\n    private unitId:number;\r\n    constructor(unitId:number) {\r\n        super();\r\n        this.unitId = unitId;\r\n    }\r\n    protected async load():Promise<UnitApp[]> {\r\n        return await mainApi.searchApp(this.unitId, this.param, this.pageStart, this.pageSize);\r\n    }\r\n    protected setPageStart(item:UnitApp) {\r\n        if (item === undefined)\r\n            this.pageStart = 0;\r\n        else\r\n            this.pageStart = item.id;\r\n    }\r\n}\r\n\r\n@observer\r\nexport class NewApp extends React.Component {\r\n    private apps: PageApps;\r\n    constructor(props) {\r\n        super(props);\r\n        this.apps = new PageApps(store.unit.id);\r\n    }\r\n    private onSearch = async (key:string) => {\r\n        await this.apps.first(key);\r\n    }\r\n    private appClick = (app:UnitApp) => {\r\n        nav.push(<Page header=\"App详细信息\">\r\n            <Info app={app} appActed={this.appActed}/>\r\n        </Page>);\r\n    }\r\n    private appActed = (appId:number, inUnit:number) => {\r\n        let apps = this.apps.items as IObservableArray<UnitApp>; //.replace .find(v => v.id === appId);\r\n        let app = apps.find(v => v.id === appId);\r\n        app.inUnit = inUnit;\r\n        apps.replace([app]);\r\n    }\r\n    private renderApp(app:UnitApp):JSX.Element {\r\n        let {name, discription, icon, inUnit} = app;\r\n        let right;\r\n        if (inUnit === 1)\r\n            right = <small>已启用</small>;\r\n        else if (inUnit === 0)\r\n            right = <small>已停用</small>;\r\n        return <LMR className=\"px-3 py-2\"\r\n            left={<Badge><img src={icon || appIcon} /></Badge>}\r\n            right={right}>\r\n            <div className=\"px-3\">\r\n                <div>{name}</div>\r\n                <small className=\"text-muted\">{discription}</small>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n    render() {\r\n        let items = this.apps.items;\r\n        let center = <SearchBox onSearch={this.onSearch} \r\n            className=\"w-100 mx-1\" \r\n            placeholder=\"搜索App\" \r\n            maxLength={100} />;\r\n        return <Page header={center}>\r\n            <List\r\n                items={items}\r\n                item={{onClick:this.appClick, render:this.renderApp}}\r\n                before=\"搜索App名字\" />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, FA, SubmitResult, LMR, Badge} from 'tonva-react-form';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {store} from '../store';\r\nimport {NewApp} from './new';\r\nimport {UnitApp} from '../model';\r\nimport {Info} from './info';\r\n\r\n@observer\r\nexport default class AppsPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadApps();\r\n    }\r\n    private itemRender(app:UnitApp, index:number) {\r\n        let {name, discription, icon, inUnit} = app;\r\n        let ban;\r\n        if (inUnit === 0)\r\n            ban = <FA className=\"text-danger\" name='ban' />;\r\n        return <LMR className=\"px-3 py-1\"\r\n            left={<Badge><img src={icon || appIcon} /></Badge>}\r\n            right={ban}>\r\n            <div className=\"px-3\">\r\n                <div>{name}</div>\r\n                <small className=\"text-muted\">{discription}</small>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n    private appClick(app:UnitApp) {\r\n        nav.push(<Page header=\"App详细信息\">\r\n            <Info app={app} />\r\n        </Page>);\r\n    }\r\n    private newItem() {\r\n        nav.push(<NewApp {...this.props} />);\r\n    }\r\n    render() {\r\n        let right = <button \r\n            className='btn btn-secondary btn-sm' \r\n            onClick={()=>this.newItem()}><FA name=\"plus\" /></button>;\r\n        return <Page header=\"启停App\" right={right}>\r\n            <List items={store.apps} item={{render: this.itemRender, onClick: this.appClick}} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {List, LMR, FA, TonvaForm, SubmitResult, FormRow} from 'tonva-react-form';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {Role} from '../model';\r\nimport {store} from '../store';\r\n\r\nexport class NewRole extends React.Component {\r\n    private form:TonvaForm;\r\n    private formRows:FormRow[] = [\r\n        {\r\n            label: '名称', \r\n            field: {name: 'name', type: 'string', maxLength: 50, required: true},\r\n        },\r\n        {\r\n            label: '描述',\r\n            field: {name: 'discription', type: 'string', maxLength: 250},\r\n            face: {type: 'textarea'}\r\n        },\r\n    ];\r\n    private async onSubmit(values:any):Promise<SubmitResult> {\r\n        let {name, discription} = values;\r\n        let id = await store.unitAddRole(name, discription);\r\n        if (id <= 0) {\r\n            this.form.formView.setError('name', '角色名 ' + name + ' 已经存在');\r\n            return;\r\n        }\r\n        nav.pop();\r\n        return;\r\n    }\r\n    render() {\r\n        return <Page header=\"新建角色\">\r\n            <TonvaForm className=\"m-3\" ref={tf => this.form = tf} \r\n                formRows={this.formRows} \r\n                onSubmit={this.onSubmit} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, Media, LMR, FA, TonvaForm, SubmitResult, FormRow, \r\n    PropGrid, Prop, Badge, StackedFA} from 'tonva-react-form';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {StringValueEdit} from '../tools';\r\nimport {Role, UnitApp} from '../model';\r\nimport {store} from '../store';\r\nimport {mainApi} from '../api';\r\n\r\ninterface Props {\r\n    role: Role;\r\n}\r\ninterface State {\r\n    apps: UnitApp[]\r\n}\r\nexport class RoleApps extends React.Component<Props, State> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {apps:undefined};\r\n    }\r\n    async componentDidMount() {\r\n        let ret = await mainApi.unitRoleApps(store.unit.id, this.props.role.id);\r\n        this.setState({\r\n            apps: ret,\r\n        });\r\n    }\r\n    private renderRoleApp(app:UnitApp, index:number) {\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={app.name}\r\n                right={<small className=\"text-muted\">{app.discription}</small>} />\r\n    }\r\n    render() {\r\n        let {role} = this.props;\r\n        return <Page header={role.name + ' - 可用APP'}>\r\n            <List\r\n                items={this.state.apps}\r\n                item={{render: this.renderRoleApp}}\r\n                none=\"没有APP\" />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, LMR, FA, TonvaForm, SubmitResult, FormRow, Media, Muted, PropGrid, Prop} from 'tonva-react-form';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {Role} from '../model';\r\nimport {store} from '../store';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {StringValueEdit} from '../tools';\r\nimport {RoleApps} from './roleApps';\r\n\r\n@observer\r\nexport class MemberPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadRoles();\r\n        await store.loadMemberRoles();\r\n    }\r\n    async onAssigned(value:any, orgValue:any):Promise<void> {\r\n        await store.unitAssignMember(value);\r\n    }\r\n    private renderMemberRole = (role:Role) => {\r\n        let {name, discription} = role;\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={name}\r\n                right={<Muted>{discription}</Muted>} />\r\n    }\r\n    private roleClick(role:Role) {\r\n        nav.push(<RoleApps role={role} />);\r\n    }\r\n    private setRole = () => {\r\n        nav.push(<SetRole />);\r\n    }\r\n    render() {\r\n        let roleUser = store.roleMember;\r\n        let {nick, name, assigned, icon} = roleUser;\r\n        let disp = <div>\r\n            <div><Muted>唯一名: </Muted> &nbsp; {name}</div>\r\n            <div><Muted>昵称: </Muted> &nbsp; {nick||<Muted>[无]</Muted>}</div>\r\n        </div>;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component',\r\n                component: <Media icon={icon||appIcon} main={roleUser.assigned||nick||name} discription={disp} />\r\n            },\r\n            '',\r\n            {\r\n                label: '备注名',\r\n                type: 'string',\r\n                name: 'assigned',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"修改备注名\"\r\n                    value={roleUser.assigned}\r\n                    onChanged={this.onAssigned} \r\n                    info=\"加一个备注，便于甄别用户\" />),\r\n            },\r\n            '',\r\n        ];\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.setRole}>修改角色</button>;\r\n        return <Page header=\"用户详情\" right={right}>\r\n            <PropGrid rows={rows} values={roleUser} />\r\n            <div className=\"px-3 py-1\"><small><FA name=\"angle-double-right\" /> 所属角色</small></div>\r\n            <List\r\n                items={store.memberRoles} \r\n                item={{render: this.renderMemberRole, onClick: this.roleClick}} />\r\n        </Page>\r\n    }\r\n}\r\n\r\n@observer\r\nclass SetRole extends React.Component {\r\n    private list:List;\r\n    constructor(props) {\r\n        super(props);\r\n        this.submit = this.submit.bind(this);\r\n    }\r\n    async componentDidMount() {\r\n        await store.loadRoles();\r\n        await store.loadMemberRoles();\r\n    }\r\n    private renderRole(role:Role, index:number) {\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={role.name}\r\n                right={<small className=\"text-muted\">{role.discription}</small>} />\r\n    }\r\n    private roleSelect(role:Role, isSelected: boolean, anySelected: boolean) {\r\n    }\r\n    private async submit() {\r\n        await store.setMemberRoles(this.list.selectedItems);\r\n        nav.pop();\r\n    }\r\n    render() {\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.submit}>保存</button>;\r\n        let roles = store.roles;\r\n        let memberRoles = store.memberRoles;\r\n        return <Page header=\"修改角色\" right={right}>\r\n            <List \r\n                ref={list=>this.list=list}\r\n                items={roles}\r\n                selectedItems={memberRoles}\r\n                compare={(role:Role, selectRole:Role)=>role.id === selectRole.id}\r\n                item={{render: this.renderRole, onSelect: this.roleSelect}} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, LMR, Badge, FA, TonvaForm, SubmitResult, FormRow, Muted, SearchBox} from 'tonva-react-form';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {Role, RoleMember} from '../model';\r\nimport {store} from '../store';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {mainApi} from '../api';\r\nimport {MemberPage} from './memberPage';\r\n\r\n@observer\r\nexport class MembersPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadMembers();\r\n    }\r\n    private renderMember(member:RoleMember, index:number):JSX.Element {\r\n        return <MemberRow {...member} />;\r\n    }\r\n    private userClick(user:RoleMember) {\r\n        store.setRoleUser(user);\r\n        nav.push(<MemberPage />);\r\n    }\r\n    private onSearch() {\r\n        let role = store.role;\r\n        let roleId = role === undefined? 0:role.id;\r\n        nav.push(<MemberSearch roleId={roleId} />);\r\n    }\r\n    render() {\r\n        let right = <button className=\"btn btn-sm\" onClick={this.onSearch}><FA name=\"search\" /></button>;\r\n        return <Page header=\"用户\" right={right}>\r\n            <List items={store.roleMembers} item={{render: this.renderMember, onClick: this.userClick}} />\r\n        </Page>\r\n    }\r\n}\r\n\r\nconst MemberRow = (member:RoleMember) => {\r\n    let {nick, name, assigned, icon} = member;\r\n    let content;\r\n    if (assigned)\r\n        content = <><div><b>{assigned}</b> <Muted>{nick}</Muted></div><Muted>{name}</Muted></>;\r\n    else if (nick)\r\n        content = <><div><b>{nick}</b></div><Muted>{name}</Muted></>;\r\n    else\r\n        content = <div><b>{name}</b></div>;\r\n    return <LMR className=\"py-2 px-3 align-items-stretch\"\r\n        left={<Badge size=\"sm\"><img src={icon||appIcon} /></Badge>}>\r\n        <div className=\"px-3\">{content}</div>\r\n    </LMR>;\r\n};\r\n\r\ninterface SearchProps {\r\n    roleId: number;\r\n}\r\ninterface SearchState {\r\n    members: RoleMember[];\r\n}\r\nexport class MemberSearch extends React.Component<SearchProps, SearchState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.state = {\r\n            members: null,\r\n        }\r\n    }\r\n    private async onSearch(key:string) {\r\n        let ret = await mainApi.unitMembers(store.unit.id, this.props.roleId, key, 0, 100);\r\n        this.setState({members: ret});\r\n    }\r\n    private renderMember(member:RoleMember, index:number):JSX.Element {\r\n        return <MemberRow {...member} />;\r\n    }\r\n    private userClick(user:RoleMember) {\r\n        store.setRoleUser(user);\r\n        nav.push(<MemberPage />);\r\n    }\r\n    render() {\r\n        let header = <SearchBox className=\"w-100 mx-1\" \r\n            onSearch={this.onSearch} \r\n            maxLength={100}\r\n            placeholder=\"搜索用户\" />;\r\n        return <Page header={header}>\r\n            <List\r\n                items={this.state.members}\r\n                item={{render: this.renderMember, onClick: this.userClick}} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, Media, LMR, FA, PropGrid, Prop} from 'tonva-react-form';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {StringValueEdit} from '../tools';\r\nimport {Role, UnitApp} from '../model';\r\nimport {store} from '../store';\r\nimport {MembersPage} from './membersPage';\r\n\r\n@observer\r\nexport class RolePage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadApps();\r\n        await store.loadRoleApps();\r\n    }\r\n    private editRole() {\r\n        nav.push(<EditRole />);\r\n    }\r\n    private renderRoleApp = (app:UnitApp, index:number) => {\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={app.name}\r\n                right={<small className=\"text-muted\">{app.discription}</small>} />\r\n    }\r\n    private roleAppClick = (app:UnitApp) => {\r\n        nav.push(<RoleApps />);\r\n    }\r\n    private addRoleApp() {\r\n        nav.push(<RoleApps />);\r\n    }\r\n    private members() {\r\n        nav.push(<MembersPage />);\r\n    }\r\n    render() {\r\n        let {name, discription, count} = store.role;\r\n        let onMembersClick, membersLeft, membersRight;\r\n        if (count===undefined || count===null || count===0) {\r\n            membersLeft = <small className=\"text-muted\">无用户</small>;\r\n        }\r\n        else {\r\n            membersLeft = `共有 ${count} 用户`;\r\n            membersRight = <div><FA name=\"chevron-right\" /></div>;\r\n            onMembersClick = this.members;\r\n        }\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <Media icon={undefined} main={name} discription={discription} />,\r\n                onClick: this.editRole,\r\n            },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <LMR className=\"py-2\" left={membersLeft} right={membersRight} />,\r\n                onClick: onMembersClick,\r\n            },\r\n            '=',\r\n        ];\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={()=>this.addRoleApp()}><FA name=\"plus\" /> APP</button>;\r\n        return <Page header=\"角色\" right={right}>\r\n            <PropGrid rows={rows} values={{}} />\r\n            <div className=\"px-3 py-1\"><small><FA name=\"angle-double-right\" /> 可用APP列表</small></div>\r\n            <List\r\n                items={store.roleApps} \r\n                item={{render: this.renderRoleApp, onClick:this.roleAppClick}}\r\n                none={<small className=\"text-muted px-3 py-1\">没有APP, 点击右上角按钮选择APP</small>} />\r\n        </Page>\r\n    }\r\n}\r\n\r\n@observer\r\nclass EditRole extends React.Component {\r\n    async onNameChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.roleChangeProp('name', value);\r\n    }\r\n    async onDiscriptionChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.roleChangeProp('discription', value);\r\n    }\r\n    render() {\r\n        let role = store.role;\r\n        let {id} = role;\r\n        let isSysRole = id === 1 || id === 2;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                label: '名称', \r\n                type: 'string',\r\n                name: 'name', \r\n                onClick: isSysRole? undefined : ()=>nav.push(<StringValueEdit \r\n                    title=\"修改名称\"\r\n                    value={role.name}\r\n                    onChanged={this.onNameChanged} \r\n                    info=\"好的名字便于理解\" />)\r\n            },\r\n            {\r\n                label: '描述',\r\n                type: 'string',\r\n                name: 'discription',\r\n                onClick: isSysRole? undefined : ()=>nav.push(<StringValueEdit \r\n                    title=\"修改描述\"\r\n                    value={role.discription}\r\n                    onChanged={this.onDiscriptionChanged} \r\n                    info=\"对角色做一个说明\" />)\r\n            },\r\n        ];\r\n        return <Page header=\"修改角色信息\">\r\n            <PropGrid rows={rows} values={role} alignValue=\"right\" />\r\n        </Page>;\r\n    }\r\n}\r\n\r\n@observer\r\nclass RoleApps extends React.Component {\r\n    private list:List;\r\n    constructor(props) {\r\n        super(props);\r\n        this.submit = this.submit.bind(this);\r\n    }\r\n    async componentDidMount() {\r\n        await store.loadApps();\r\n        await store.loadRoleApps();\r\n    }\r\n    private renderApp(app:UnitApp, index:number) {\r\n        return <LMR className=\"py-1 px-2 align-items-center\"\r\n                left={app.name}\r\n                right={<small className=\"text-muted\">{app.discription}</small>} />\r\n    }\r\n    private appSelect(app:UnitApp, isSelected: boolean, anySelected: boolean) {\r\n\r\n    }\r\n    private async submit() {\r\n        await store.setRoleApps(this.list.selectedItems);\r\n        nav.pop();\r\n    }\r\n    render() {\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.submit}>保存</button>;\r\n        let apps = store.apps;\r\n        let roleApps = store.roleApps;\r\n        return <Page header=\"选择APP\" right={right}>\r\n            <List \r\n                ref={list=>this.list=list}\r\n                items={apps}\r\n                selectedItems={roleApps}\r\n                item={{render: this.renderApp, onSelect: this.appSelect}} />\r\n        </Page>;\r\n    }\r\n}","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {List, LMR, FA, Muted} from 'tonva-react-form';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {Role} from '../model';\r\nimport {store} from '../store';\r\nimport {NewRole} from './newRole';\r\nimport {RolePage} from './rolePage';\r\nimport {MembersPage} from './membersPage';\r\n\r\nconst midClassName = classNames('d-flex', 'h-100', 'align-items-center', 'px-5', 'small', 'text-muted');\r\n\r\n@observer\r\nexport class Members extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadRoles();\r\n    }\r\n    private renderRole = (role:Role, index:number) => {\r\n        let {name, discription, count} = role;\r\n        return <LMR\r\n            className=\"px-3 py-2\" \r\n            left={name}\r\n            right={String(count || '')}>\r\n            <div className={midClassName}>\r\n                {discription}\r\n            </div>\r\n        </LMR>;\r\n    }\r\n    private roleClick = (role:Role) => {\r\n        store.setRole(role);\r\n        nav.push(<RolePage />)\r\n    }\r\n    private newRole = (evt: React.MouseEvent<HTMLAnchorElement>) => {\r\n        evt.preventDefault();\r\n        nav.push(<NewRole />);\r\n    }\r\n    private allUsersClick = () => {\r\n        store.setRole(undefined);\r\n        nav.push(<MembersPage />);\r\n    }\r\n    render() {\r\n        let right = <a className=\"small\" href='#' onClick={this.newRole}>新增</a>;\r\n        let header = <LMR className=\"px-3 small bg-light\" left=\"角色\" right={right} />;\r\n        return <Page header=\"用户角色\">\r\n            <LMR\r\n                className=\"my-3 px-3 py-2 bg-white\" \r\n                left={'用户'}\r\n                right={String(store.memberCount)}\r\n                onClick={this.allUsersClick}>\r\n                <div className={midClassName}>\r\n                    设置用户角色\r\n                </div>\r\n            </LMR>\r\n            <List\r\n                header={header}\r\n                items={store.roles}\r\n                none=\"[无]\"\r\n                item={{render:this.renderRole, onClick:this.roleClick}} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Muted } from 'tonva-react-form';\r\nimport { left0 } from 'tonva-tools';\r\nimport { VMapMain, MapUI, Field, CMap }  from 'tonva-react-uq'; \r\n\r\nclass CMapTeamPerson extends CMap {\r\n    async searchOnKey(keyField:Field, param):Promise<number> {\r\n        switch (keyField.name) {\r\n            default: return await super.searchOnKey(keyField, param);\r\n            case 'post': return await this.searchOnPost(param);                \r\n        }\r\n    }\r\n\r\n    private async searchOnPost(param: any):Promise<number> {\r\n        let querySelect = this.cQuerySelect('teamPosts');\r\n        let val = await querySelect.call(param);\r\n        return val['post'].id;\r\n    }\r\n}\r\n\r\nclass VMapTeamPerson extends VMapMain {\r\n}\r\n\r\nconst ui:MapUI = {\r\n    CMap: CMapTeamPerson,\r\n    keys: [\r\n        {\r\n            content: ({name, id}:any, x:any) => <><Muted>{x.team} &nbsp; </Muted> {name}</>,\r\n            none: (x:any)=>x.noStaff,\r\n        },\r\n        {\r\n            content: ({name, id}:any, x:any) => <><Muted>{x.staff} &nbsp; </Muted> {name} &nbsp; <Muted>{x.no} {left0(id, 4)}</Muted></>,\r\n            none: (x:any)=>x.noPost,\r\n        },\r\n        {\r\n            content: ({title, id}:any, x:any) => <><Muted>{x.post} &nbsp; </Muted> {title}</>,\r\n            none: undefined,\r\n        },\r\n    ]\r\n}\r\n\r\nexport default ui;\r\n","import { UqUI } from 'tonva-react-uq';\r\nimport map from './map';\r\nimport tuid from './tuid';\r\nimport query from './query';\r\nimport res from './res';\r\n\r\nconst uqUI:UqUI = {\r\n    map: map,\r\n    tuid: tuid,\r\n    query: query,\r\n    res: res,\r\n}\r\n\r\nexport default uqUI;\r\n","import teamPerson from './teamPerson';\r\n\r\nexport default {\r\n    teamPerson: teamPerson,\r\n};\r\n","import user from './user';\r\nimport organization from './organization';\r\n\r\nexport default {\r\n    user: user,\r\n    organization: organization,\r\n};\r\n","import * as React from 'react';\r\nimport { TuidUI, CTuidSelect, CQuery, QueryPageItems } from \"tonva-react-uq\";\r\nimport { PageItems } from \"tonva-tools\";\r\n\r\nclass CUserSelect extends CTuidSelect {\r\n    protected buildPageItems():PageItems<any> {\r\n        let query:CQuery = this.cUq.cFromName('query', 'SearchUser') as CQuery;\r\n        return new QueryPageItems(query.entity);\r\n    }\r\n    idFromItem(item:any) {return item.id;}\r\n\r\n    async searchMain(key:string) {\r\n        if (this.PageItems === undefined) {\r\n            this.PageItems = this.buildPageItems();\r\n        }\r\n        if (key !== undefined) await this.PageItems.first({key: key});\r\n    }\r\n}\r\n\r\nconst ui:TuidUI = {\r\n    CTuidSelect: CUserSelect,\r\n    content: (item:any) => {return <>{item.name}</>},\r\n}\r\n\r\nexport default ui;\r\n","import * as React from 'react';\r\nimport { TuidUI } from \"tonva-react-uq\";\r\n\r\nconst ui:TuidUI = {\r\n    divs: {\r\n        post: {\r\n            content: (item:any) => {\r\n                let {title} = item;\r\n                return <>{title}</>;\r\n            },\r\n            rowContent: (item:any) => {\r\n                let {title} = item;\r\n                return <>{title}</>;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default ui;\r\n","import teamPosts from './teamPosts';\r\n\r\nexport default {\r\n    teamPosts: teamPosts,\r\n};\r\n","import * as React from 'react';\r\nimport { QueryUI } from \"tonva-react-uq\";\r\nimport { observer } from 'mobx-react';\r\n\r\nconst ui:QueryUI = {\r\n    row: observer((item:any) => {\r\n        let {post} = item;\r\n        return <div className=\"px-3 py-2\">{post.content()}</div>;\r\n    }),\r\n};\r\n\r\nexport default ui;\r\n","import CN from './zh/CN';\r\n\r\nconst res = {\r\n    zh: {\r\n        CN: CN\r\n    }\r\n};\r\n\r\nexport default res;\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\n\r\nexport default {\r\n    x: {\r\n        no: '编号',\r\n        team: '部门',\r\n        staff: '员工',\r\n        noStaff: '无员工',\r\n        post: '职位',\r\n        noPost: '无职位',\r\n        a: 'aaa',\r\n        b: {\r\n            s: 'sss',\r\n            d: ()=><span className=\"text-success\">ddd</span>,\r\n        },\r\n        c: ()=><span className=\"text-danger\">ccc</span>,\r\n    },\r\n    uq: '$UNITX',\r\n    tuid: '基础档案',\r\n    map: '对照表',\r\n    sheet: '单据',\r\n    pending: '待处理',\r\n    book: '帐',\r\n    action: '操作',\r\n    tuidNullCaption: '选择',\r\n    submit: '提交',\r\n    arrNew: '新增',\r\n    arrEdit: '保存',\r\n    entity: {\r\n        message: {\r\n            label: '消息-message',\r\n            arrNew: '新增消息',\r\n            arrEdit: '保存消息',\r\n            fields: {\r\n                fromUser: '发送人',\r\n                fromUnit: '发送部门',\r\n                type: '类型',\r\n                date: '日期',\r\n                subject: '主题',\r\n                discription: '描述',\r\n                content: '内容'\r\n            },\r\n        },\r\n        getMessage: {\r\n            label: '获取Message',\r\n            submit: '获取消息',\r\n            fields: {\r\n                msg: '消息'\r\n            }\r\n        },\r\n        newMessage: {\r\n            label: '新建消息',\r\n            fields: {\r\n                type: '类型',\r\n                subject: '主题',\r\n            },\r\n            arrs: {\r\n                to: {\r\n                    label: '发送',\r\n                    newSubmit: '新增to',\r\n                    editSumbit: '保存to',\r\n                },\r\n                cc: {\r\n                    label: '抄送',\r\n                    newSubmit: '新增cc',\r\n                    editSumbit: '保存cc',\r\n                }\r\n            }\r\n        },\r\n        sectionTeam: {\r\n            label: '大部-团队对照表',\r\n        },\r\n        teamPerson: {\r\n            label: '员工-岗位对照表',\r\n            fields: {\r\n            },\r\n            confirmDelete: _.template('真的要删除${label}吗'),\r\n        },\r\n        teamOrganization: {\r\n            label: '团队-机构对照表',\r\n        },\r\n        teamPosts: {\r\n            label: '团队-岗位对照表',\r\n        },\r\n        person: {\r\n            label: '员工',\r\n            fields: {\r\n                name: '姓名',\r\n                nick: '别名',\r\n                given: '名字',\r\n                sur: '姓',\r\n                gender: '性别',\r\n                user: '用户',\r\n            }\r\n        },\r\n        organization: {\r\n            label: '机构',\r\n            arrs: {\r\n                post: {\r\n                    label: '岗位',\r\n                }\r\n            }\r\n        },\r\n        user: {\r\n            label: '用户'\r\n        },\r\n        team: {\r\n            label: '团队',\r\n        },\r\n        section: {\r\n            label: '大部',\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { IObservableValue, observable } from 'mobx';\r\nimport { Page, VPage } from 'tonva-tools';\r\nimport { Muted, LMR, FA, List } from 'tonva-react-form';\r\nimport { COpBinding } from './cOpBinding';\r\nimport { StateTo, Sheet, Organization, Post, Team, Section, To, Entity } from './model';\r\n\r\ninterface SelectablePost {\r\n    post: Post;\r\n    selected: IObservableValue<boolean>;\r\n    teams?: SelectableTeam[];\r\n}\r\n\r\ninterface SelectableTeam {\r\n    team: Team;\r\n    selected: IObservableValue<boolean>;\r\n    sections?: SelectableSection[];\r\n}\r\n\r\ninterface SelectableSection {\r\n    section: Section;\r\n    selected: IObservableValue<boolean>;\r\n}\r\n\r\nexport class VOpBinding extends VPage<COpBinding> {\r\n    private sheet: Sheet;\r\n    private states: StateTo[];\r\n    private selectablePosts:SelectablePost[];\r\n    private sheetOpsChanged:boolean = false;\r\n\r\n    private stateClick(state:StateTo) {\r\n        let {organizations, teams, sections, posts} = this.controller;\r\n        let postTos:{[post:number]:To[]} = {};\r\n        let {tos} = state;\r\n        if (tos !== undefined) {\r\n            for (let to of tos) {\r\n                let {post} = to;\r\n                let pid = post.id;\r\n                let pto = postTos[pid];\r\n                if (pto === undefined) postTos[pid] = pto = [];\r\n                pto.push(to);\r\n            }\r\n        }\r\n        this.selectablePosts = posts.map(v => this.buildSelectablePost(v, postTos));\r\n        /*\r\n            return {\r\n                post: v,\r\n                selected: observable.box(false),\r\n                teams: [],\r\n            }\r\n        });*/\r\n        this.sheetOpsChanged = false;\r\n        this.openPage(this.stateView, state);\r\n        this.regConfirmClose(async ():Promise<boolean> => {\r\n            if (this.sheetOpsChanged === false) return true;\r\n            return confirm('未保存\\n真的不保存吗？');\r\n        });\r\n    }\r\n\r\n    private buildSelectablePost(post:Post, postTos:{[post:number]:To[]}):SelectablePost {\r\n        let pto = postTos[post.id];\r\n        let selected:boolean;\r\n        let teams:SelectableTeam[];\r\n        if (pto === undefined) {\r\n            selected = false;\r\n            teams = [];\r\n        }\r\n        else {\r\n            selected = true;\r\n            teams = this.buildSelectableTeams(post, pto);\r\n        }\r\n        let ret = {\r\n            post: post,\r\n            selected: observable.box(selected),\r\n            teams: teams,\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private buildSelectableTeams(post:Post, tos: To[]):SelectableTeam[] {\r\n        let teamTos:{[team:number]:To[]} = {};\r\n        let hasAllTeams = false;\r\n        for (let to of tos) {\r\n            let {team} = to;\r\n            let teamId;\r\n            if (team === undefined) {\r\n                teamId = 0;\r\n                hasAllTeams = true;\r\n            }\r\n            else {\r\n                teamId = team.id;\r\n            }\r\n            let tto = teamTos[teamId];\r\n            if (tto === undefined) teamTos[teamId] = tto = [];\r\n            tto.push(to);\r\n        }\r\n        let sections:Section[] = [];\r\n        let {organization} = post;\r\n        if (organization !== undefined && organization.teams !== undefined) {\r\n            for (let team of post.organization.teams) {\r\n                if (team.sections !== undefined) sections.push(...team.sections);\r\n            }\r\n        }\r\n        let teams:SelectableTeam[] = [];\r\n        let teamTo0 = teamTos[0];\r\n        let teamTo0Sections = this.buildSelectableSections(sections, teamTo0);\r\n        teams.push({\r\n            team: {\r\n                id: 0,\r\n                name: '* 所有部门',\r\n                no: undefined,\r\n                sections: sections,\r\n                organizations: undefined,\r\n            }, \r\n            selected: observable.box(teamTo0!==undefined), \r\n            sections: teamTo0Sections,\r\n        });\r\n        if (organization !== undefined && organization.teams !== undefined) {\r\n            post.organization.teams.forEach(v => {\r\n                let teamTo = teamTos[v.id];\r\n                teams.push({\r\n                    team: v,\r\n                    selected: observable.box(teamTo!==undefined),\r\n                    sections: this.buildSelectableSections(sections, teamTo),\r\n                });\r\n            });\r\n        }\r\n        if (hasAllTeams === true && tos.length === 1) {\r\n            let selectableTeam0 = teams[0];\r\n            let hasSection = false;\r\n            for (let selectableSection of selectableTeam0.sections) {\r\n                if (selectableSection.selected.get() === true) {\r\n                    hasSection = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (hasSection === false) {\r\n                selectableTeam0.selected.set(false);\r\n                selectableTeam0.sections = [];\r\n            }\r\n        }\r\n        return teams;\r\n    }\r\n\r\n    private buildSelectableSections(sections:Section[], tos: To[]):SelectableSection[] {\r\n        let selectableSections:SelectableSection[] = [];\r\n        for (let section of sections) {\r\n            selectableSections.push({\r\n                section: section,\r\n                selected: observable.box(tos && tos.find(v => v.section && section.id === v.section.id) !== undefined),\r\n            });\r\n        }\r\n        return selectableSections;\r\n    }\r\n\r\n    private renderState(stateTo:StateTo) {\r\n        let {name, caption, tos, tosText, configable} = stateTo;\r\n        let content;\r\n        if (configable === true) {\r\n            let right = <FA className=\"text-muted align-self-center\" name=\"chevron-right\" />;\r\n            let onClick = () => this.stateClick(stateTo);\r\n            let tosView = <this.stateTosView tosText={tosText} />;\r\n            content = <>\r\n                <LMR className=\"bg-white py-1 px-2 cursor-pointer\" right={right} onClick={onClick}>\r\n                    {caption}\r\n                </LMR>\r\n                {tosView}\r\n            </>\r\n        }\r\n        else {\r\n            content = <div className=\"bg-white py-1 px-2\">\r\n                {caption}\r\n            </div>;\r\n        }\r\n        return <div key={name} className=\"border border-light rounded mx-1 my-3\">\r\n            {content}\r\n        </div>\r\n    }\r\n\r\n    private stateTosView = observer(({tosText}:{tosText: IObservableValue<string[]>}) => {\r\n        let tos = tosText.get();\r\n        return <div className=\"bg-light py-1 px-2\">{\r\n            tos === undefined || tos.length === 0? <Muted>[无岗位]</Muted> :\r\n            tos.map((v,index) => {\r\n                return <span\r\n                    key={v}\r\n                    className=\"d-inline-block border bg-white rounded mr-2 my-1 py-1 px-2\">\r\n                    {v}\r\n                </span>\r\n            })\r\n        }\r\n        </div>\r\n    });\r\n\r\n    private tosTexts(tos: To[]):string[] {\r\n        return tos && tos.map((v,index) => {\r\n            let {post, team, section} = v;\r\n            let content:string = post.title;\r\n            if (team !== undefined && team.id > 0) content += ' @ ' + team.name;\r\n            if (section !== undefined) {\r\n                if (team === undefined || team.id === 0) content += ' @ * ';\r\n                content += ' / ' + section.name;\r\n            }\r\n            return content;\r\n        });\r\n    }\r\n\r\n    async open({entity, opTos}:{entity:Entity, opTos:{[op:string]:To[]}}) {\r\n        this.sheet = entity;\r\n        let {name, states} = entity;\r\n        if (states === undefined) {\r\n            let tos = opTos['$'];\r\n            this.states = [{\r\n                name: '$',\r\n                caption: '允许岗位',\r\n                configable: true,\r\n                tos: tos,\r\n                tosText: observable.box<string[]>(this.tosTexts(tos)),\r\n            }];\r\n            this.openPageElement(<Page header={name + ' - 岗位'}>\r\n                {this.states.map(v => this.renderState(v))}\r\n            </Page>);\r\n            return;\r\n        }\r\n\r\n        this.states = states.map(v => {\r\n            let prefix = v.substr(0, 1);\r\n            let caption: string | JSX.Element;\r\n            let configable: boolean;\r\n            let tos;\r\n            switch (prefix) {\r\n                case '<': caption = <>{v.substr(1)} &nbsp; <Muted>回复</Muted></>; configable = false; break;\r\n                case '#': caption = <>{v.substr(1)} &nbsp; <Muted>返初</Muted></>; configable = false; break;\r\n                case '$': \r\n                    caption = '[新开单]'; \r\n                    configable = true; \r\n                    tos = opTos[v];\r\n                    break;\r\n                default:\r\n                    caption = v;\r\n                    configable = true; \r\n                    tos = opTos[v];\r\n                    break;\r\n            }\r\n            return {\r\n                name: v,\r\n                caption: caption,\r\n                configable: configable,\r\n                tos: tos,\r\n                tosText: observable.box<string[]>(this.tosTexts(tos)),\r\n            };\r\n        });\r\n        this.openPageElement(<Page header={'单据状态对应岗位 - ' + name} >\r\n            {this.states.map(v => this.renderState(v))}\r\n        </Page>);\r\n    }\r\n\r\n    private async saveOps(stateTo: StateTo) {\r\n        let stateToName = stateTo.name;\r\n        let tos:To[] = [];\r\n        let toArr:{post:number, team:number, section:number}[] = [];\r\n        for (let sp of this.selectablePosts) {\r\n            if (sp.selected.get() === false) continue;\r\n            let postId = sp.post.id;\r\n            let teamCount = 0;\r\n            for (let st of sp.teams) {\r\n                if (st.selected.get() === false) continue;\r\n                let teamId = st.team.id;\r\n                ++teamCount;\r\n                let sectionCount = 0;\r\n                for (let ss of st.sections) {\r\n                    if (ss.selected.get() === false) continue;\r\n                    let sectionId = ss.section.id;\r\n                    ++sectionCount;\r\n                    toArr.push({\r\n                        post: postId,\r\n                        team: teamId,\r\n                        section: sectionId,\r\n                    });\r\n                    tos.push({\r\n                        post: sp.post,\r\n                        team: st.team,\r\n                        section: ss.section,\r\n                    });\r\n                }\r\n                if (sectionCount === 0) {\r\n                    toArr.push({\r\n                        post: postId,\r\n                        team: teamId,\r\n                        section: 0,\r\n                    });\r\n                    tos.push({\r\n                        post: sp.post,\r\n                        team: st.team,\r\n                        section: undefined,\r\n                    });\r\n                }\r\n            }\r\n            if (teamCount === 0) {\r\n                toArr.push({\r\n                    post: postId,\r\n                    team: 0,\r\n                    section: 0,\r\n                });\r\n                tos.push({\r\n                    post: sp.post,\r\n                    team: undefined,\r\n                    section: undefined,\r\n                });\r\n            }\r\n        }\r\n        await this.controller.saveSheetStatePosts(this.sheet, stateToName, toArr);\r\n        let state = this.states.find(v => v.name === stateToName);\r\n        state.tos = tos;\r\n        let tosTexts = this.tosTexts(tos);\r\n        state.tosText.set(tosTexts);\r\n        this.closePage();\r\n    }\r\n\r\n    private organizationRow = (item: Organization, index:number) => {\r\n        let {id, name} = item;\r\n        return <div>id:{id} name:{name}</div>;\r\n    }\r\n    private teamRow = (item: SelectableTeam, index:number) => {\r\n        return <this.observableTeamRow {...item} />;\r\n    }\r\n    private sectionRow = (item: SelectableSection, index:number) => {\r\n        return <this.observableSectionRow {...item} />;\r\n    }\r\n    private postRow = (item:SelectablePost, index:number) => {\r\n        return <this.observablePostRow {...item} />;\r\n    };\r\n    private stateView: React.SFC<StateTo> = (state:StateTo) => {\r\n        let {caption} = state;\r\n        /*\r\n        switch (state.name) {\r\n            case '-':  stateCaption = '允许岗位'; break;\r\n            case '$':  stateCaption = '[新开单]'; break;\r\n            default: stateCaption = state.name; break;\r\n        }\r\n        */\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={async ()=>await this.saveOps(state)}>保存</button>\r\n        return <Page header={`${this.sheet.name} - ${caption}`}\r\n            back=\"close\"\r\n            right={right}>\r\n            <div className=\"mx-3 my-2\">\r\n                <Muted>设置单据状态跟岗位的对应关系</Muted>\r\n            </div>\r\n            <List className=\"my-2\" \r\n                items={this.selectablePosts} \r\n                item={{render: this.postRow}} />\r\n        </Page>\r\n    }\r\n    /*\r\n    <List className=\"my-2\" header=\"Organization\" items={organizations} item={{render: this.organizationRow}} />\r\n    <List className=\"my-2\" header=\"Team\" items={teams} item={{render: this.teamRow}} />\r\n    <List className=\"my-2\" header=\"Section\" items={sections} item={{render: this.sectionRow}} />\r\n    */\r\n\r\n    private onPostSelectChanged(item:SelectablePost, checked:boolean) {\r\n        this.sheetOpsChanged = true;\r\n        let {post, selected} = item;\r\n        if (checked === true) {\r\n            let sections:Section[] = [];\r\n            let {organization} = post;\r\n            if (organization !== undefined && organization.teams !== undefined) {\r\n                for (let team of post.organization.teams) {\r\n                    if (team.sections !== undefined) sections.push(...team.sections);\r\n                }\r\n            }\r\n            item.teams.push({\r\n                team: {\r\n                    id: 0,\r\n                    name: '* 所有部门',\r\n                    no: undefined,\r\n                    sections: sections,\r\n                    organizations: undefined,\r\n                }, \r\n                selected: observable.box(false), \r\n                sections:[]\r\n            });\r\n            if (organization !== undefined && organization.teams !== undefined) {\r\n                post.organization.teams.forEach(v => {\r\n                    item.teams.push({\r\n                        team: v,\r\n                        selected: observable.box(false),\r\n                        sections: []\r\n                    });\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            item.teams.splice(0);\r\n        }\r\n        selected.set(checked);\r\n    }\r\n\r\n    private onTeamSelectChanged(item:SelectableTeam, checked:boolean) {\r\n        this.sheetOpsChanged = true;\r\n        let {team, selected} = item;\r\n        if (checked === true) {\r\n            //item.sections.push({section: undefined, selected: observable.box(false)});\r\n            team.sections.forEach(v => {\r\n                item.sections.push({\r\n                    section: v,\r\n                    selected: observable.box(false)\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            item.sections.splice(0);\r\n        }\r\n        selected.set(checked);\r\n    }\r\n\r\n    private onSectionSelectChanged(item:SelectableSection, checked:boolean) {\r\n        this.sheetOpsChanged = true;\r\n        let {section, selected} = item;\r\n        selected.set(checked);\r\n    }\r\n\r\n    private observablePostRow = observer((item:SelectablePost) => {\r\n        let {post, selected, teams} = item;\r\n        let {title} = post;\r\n        let teamsList;\r\n        let defaultSelected = selected.get();\r\n        if (defaultSelected === true) {\r\n            teamsList = <List className=\"ml-4 va-list-top-border\" items={teams} item={{render:this.teamRow}} />\r\n        }\r\n        return <div className=\"flex-column\">\r\n            <label className=\"px-3 py-2 w-100 mb-0\">\r\n                <input className=\"mr-3 align-middle\"\r\n                    type=\"checkbox\" \r\n                    defaultChecked={defaultSelected}\r\n                    onChange={(evt)=>this.onPostSelectChanged(item, evt.target.checked)} />\r\n                <Muted>岗位</Muted> &nbsp; {title}\r\n            </label>\r\n            {teamsList}\r\n        </div>;\r\n    });\r\n\r\n    private observableTeamRow = observer((item:SelectableTeam) => {\r\n        let {team, selected, sections} = item;\r\n        let {name} = team;\r\n        let teamsList;\r\n        let defaultSelected = selected.get();\r\n        if (defaultSelected === true && sections.length > 0) {\r\n            teamsList = <List className=\"ml-4 va-list-top-border\" items={sections} item={{render:this.sectionRow}} />\r\n        }\r\n        return <div className=\"flex-column\">\r\n            <label className=\"px-3 py-2 w-100 mb-0\">\r\n                <input className=\"mr-3 align-middle\"\r\n                    type=\"checkbox\" \r\n                    defaultChecked={defaultSelected}\r\n                    onChange={(evt)=>this.onTeamSelectChanged(item, evt.target.checked)} />\r\n                <Muted>部门</Muted> &nbsp; {name}\r\n            </label>\r\n            {teamsList}\r\n        </div>;\r\n    });\r\n\r\n    private observableSectionRow = observer((item:SelectableSection) => {\r\n        let {section, selected} = item;\r\n        let {name} = section;\r\n        let defaultSelected = selected.get();\r\n        return <div className=\"flex-column\">\r\n            <label className=\"px-3 py-2 w-100 mb-0\">\r\n                <input className=\"mr-3 align-middle\"\r\n                    type=\"checkbox\" \r\n                    defaultChecked={defaultSelected}\r\n                    onChange={(evt)=>this.onSectionSelectChanged(item, evt.target.checked)} />\r\n                <Muted>大部</Muted> &nbsp; {name}\r\n            </label>\r\n        </div>;\r\n    });\r\n}\r\n ","import * as React from 'react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { COpBinding } from \"./cOpBinding\";\r\nimport { Entity, EntityBlock, Uq } from './model';\r\nimport { entityIcons, CAction, CQuery } from 'tonva-react-uq';\r\nimport { List, Muted, LMR, FA } from 'tonva-react-form';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\n\r\ninterface Checked {\r\n    def: boolean;\r\n    checked: boolean;\r\n}\r\n\r\nexport class VAllPosts extends VPage<COpBinding> {\r\n    private uq: Uq;\r\n    private blocks:EntityBlock[];\r\n    private checked:{[entity:string]:Checked} = {};\r\n\r\n    @observable private isChanged:boolean = false;\r\n    async open(uq: Uq) {\r\n        this.uq = uq;\r\n        let {name, tuids, actions, maps, books, queries, histories, pendings, sheets} = this.uq;\r\n        this.blocks = [\r\n            {items: tuids, type: 'tuid'},\r\n            {items: sheets, type: 'sheet'},\r\n            {items: actions, type: 'action'},\r\n            {items: maps, type: 'map'},\r\n            {items: books, type: 'book'},\r\n            {items: queries, type: 'query'},\r\n            {items: histories, type: 'history'},\r\n            {items: pendings, type: 'pending'},\r\n        ];\r\n        let getEntityOpForAll = this.controller.cUq.cFromName('query', 'getEntityOpForAll') as CQuery;\r\n        let entityOpForAllResult = await getEntityOpForAll.entity.query({uq: this.uq.id});\r\n        let entityOpForAll:{[entity:string]:boolean} = {};\r\n        for (let eaa of entityOpForAllResult.ret) {\r\n            entityOpForAll[eaa.entity] = true;\r\n        }\r\n        for (let b of this.blocks) {\r\n            let {items} = b;\r\n            if (items === undefined) continue;\r\n            for (let item of items) {\r\n                let {name} = item;\r\n                let checked = (entityOpForAll[name] === true);\r\n                this.checked[name] = {\r\n                    def: checked,\r\n                    checked: checked,\r\n                };\r\n            }\r\n        }\r\n        this.openPage(this.pageRender);\r\n        this.regConfirmClose(async ():Promise<boolean> => {\r\n            if (this.isChanged === false) return true;\r\n            return confirm('未保存\\n真的不保存吗？');\r\n        });\r\n    }\r\n\r\n    private onCheckChanged = (entity:Entity, checked: boolean) => {\r\n        this.checked[entity.name].checked = checked;\r\n        let isChanged:boolean = false;\r\n        for (let i in this.checked) {\r\n            let {def, checked} = this.checked[i];\r\n            if (def !== checked) {\r\n                isChanged = true;\r\n                break;\r\n            }\r\n        }\r\n        this.isChanged = isChanged;\r\n    }\r\n\r\n    private saveChange = async () => {\r\n        let entities:{entity:string}[] = [];\r\n        for (let i in this.checked) {\r\n            if (this.checked[i].checked !== true) continue;\r\n            entities.push({entity: i});\r\n        }\r\n        let saveEntityOpForAll = this.controller.cUq.cFromName('action', 'saveEntityOpForAll') as CAction;\r\n        let ret = await saveEntityOpForAll.entity.submit({\r\n            uq: this.uq.id,\r\n            entities: entities,\r\n        });\r\n        this.ceasePage();\r\n        this.openPageElement(<Page header=\"所有岗位可操作\" back=\"close\">\r\n            <div className=\"p-3\">\r\n                <FA name=\"check-circle\" className=\"text-success\" /> &nbsp;\r\n                已保存\r\n            </div>\r\n        </Page>);\r\n    }\r\n\r\n    private entityRender(entity:Entity, icon:any) {\r\n        let {name} = entity;\r\n        let right = <input className=\"mr-3 align-middle\"\r\n            type=\"checkbox\" \r\n            defaultChecked={this.checked[name].def}\r\n            onChange={(evt)=>this.onCheckChanged(entity, evt.target.checked)}/>\r\n\r\n        return <LMR className=\"px-3 py-2 align-items-center\"\r\n            right={right}>\r\n            {icon} &nbsp; {name}\r\n        </LMR>;\r\n    }\r\n\r\n    private pageRender = observer(() => {\r\n        /*\r\n        let {name, tuids, actions, maps, books, queries, histories, pendings, sheets} = this.uq;\r\n        let blocks:EntityBlock[] = [\r\n            {items: tuids, type: 'tuid'},\r\n            {items: sheets, type: 'sheet'},\r\n            {items: actions, type: 'action'},\r\n            {items: maps, type: 'map'},\r\n            {items: books, type: 'book'},\r\n            {items: queries, type: 'query'},\r\n            {items: histories, type: 'history'},\r\n            {items: pendings, type: 'pending'},\r\n        ];*/\r\n        let buttonSave = this.isChanged===true? <button className=\"btn btn-sm btn-success\" onClick={this.saveChange}>保存</button> : null;\r\n        return <Page header={'所有岗位可操作'} right={buttonSave}>\r\n            <div className=\"text-muted p-3 small\">\r\n                <div style={{lineHeight:'1.8', fontWeight:'bold'}}>说明</div>\r\n                <ol className=\"pl-3\" style={{listStyleType: '1', lineHeight: '1.8'}}>\r\n                    <li >\r\n                        有些操作，默认允许所有用户可操作，可以在这里设置。\r\n                    </li>\r\n                    <li>\r\n                        比如，用户下订单。任何客户，登录进系统，都可以下单。\r\n                    </li>\r\n                    <li>\r\n                        如果每个用户都需要设置，用户会丢失，管理人员会繁琐。\r\n                    </li>\r\n                </ol>\r\n            </div>\r\n            {this.blocks.map(block => {\r\n                let {items, type} = block;\r\n                let icon = entityIcons[type];\r\n                return items && items.length>0 &&\r\n                    <List key={type}\r\n                        className=\"mt-3\"\r\n                        header={<Muted className=\"px-3 pt-1 bg-light w-100\">{this.res[type]||type}</Muted>} \r\n                        items={items} \r\n                        item={{\r\n                            render:(item:any, index:number)=>this.entityRender(item, icon), \r\n                            onClick: undefined\r\n                        }} />;\r\n            })}\r\n        </Page>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, nav } from \"tonva-tools\";\r\nimport { COpBinding } from \"./cOpBinding\";\r\nimport { Uq } from './model';\r\nimport { List, FA, SearchBox } from 'tonva-react-form';\r\nimport { observable } from 'mobx';\r\nimport { CMap, CQuery, QueryPageItems, Query, Tuid, CTuid } from 'tonva-react-uq';\r\n\r\nexport class PageUsers extends QueryPageItems {\r\n    protected setPageStart(item:any) {\r\n        this.pageStart = item === undefined? 0 : item.id;\r\n    }\r\n}\r\n\r\nexport class VFullFunction extends VPage<COpBinding> {\r\n    private uq: Uq;\r\n    @observable private users: any[] = [];\r\n    private entityOpUserFully:CMap;\r\n    private pageUsers: PageUsers;\r\n    private tuidUser: CTuid<Tuid>;\r\n    async open(uq: Uq) {\r\n        this.uq = uq;\r\n        this.entityOpUserFully = this.controller.cUq.cFromName('map', 'entityOpUserFully') as CMap;\r\n        this.tuidUser = this.controller.cUq.cFromName('tuid', 'user') as CTuid<Tuid>;\r\n        await this.entityOpUserFully.entity.loadSchema();\r\n        let all = await this.entityOpUserFully.entity.queries.all.query({_uq: this.uq.id});\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={this.addClick}><FA name=\"plus\" /></button>;\r\n        this.users.push(...all.ret);\r\n        this.openPageElement(<Page header={'全功能用户'} right={right}>\r\n            <List items={this.users} item={{render:this.renderUser, onClick: this.onStopFully}} />\r\n        </Page>);\r\n        return;\r\n    }\r\n\r\n    private onStopFully = async (item:any) => {\r\n        this.openPageElement(<Page header={'停止全功能'}>\r\n            <div className=\"p-3\">\r\n                <div><b className=\"text-danger h4\">{item.user.content()}</b> 停止全功能用户。<br/>请确认。</div>\r\n                <div className=\"p-3\">\r\n                    <button className=\"btn btn-success\" onClick={()=>this.onSumitStopFully(item)}>停止全功能</button>\r\n                    <button className=\"ml-3 btn btn-outline-danger\" onClick={this.onCancelStop}>不停</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n    }\r\n\r\n    private onSumitStopFully = async (item:any) => {\r\n        let data = {_uq: this.uq.id, arr1:[{_user: item.user.id}]};\r\n        await this.entityOpUserFully.entity.actions.del.submit(data);\r\n        let index = this.users.findIndex(v => v === item);\r\n        if (index >= 0) this.users.splice(index, 1);\r\n        this.closePage();\r\n    }\r\n\r\n    private onCancelStop = () => this.closePage();\r\n\r\n    private addClick = async () => {\r\n        let user = await this.controller.callSearchUser(this.uq);\r\n        this.onUserSelected(user);\r\n        /*\r\n        let searchUser = this.controller.cUq.cFromName('query', 'SearchUser') as CQuery;\r\n        this.pageUsers = new PageUsers(searchUser.entity);\r\n        this.openPage(this.usersView);\r\n        */\r\n    }\r\n\r\n    private renderUser = (item:any, index:number) => {\r\n        return <div className=\"px-3 py-2\">{item.user.content()}</div>;\r\n    }\r\n\r\n    private onSearch = async (key:string) => {\r\n        await this.pageUsers.first({key: key});\r\n    }\r\n    private onSetFully = async (item:any) => {\r\n        await this.entityOpUserFully.entity.actions.add.submit({_uq: this.uq.id, arr1:[{_user: item.id}]});\r\n        this.tuidUser.entity.useId(item.id);\r\n        let row = {\r\n            uq: this.uq.id,\r\n            user: this.tuidUser.entity.boxId(item.id),\r\n        }\r\n        this.users.push(row);\r\n        this.closePage(2);\r\n    }\r\n    private onCancelFully = () => {this.backPage()}\r\n    private onUserSelected = (item:any) => {\r\n        this.openPageElement(<Page header=\"确认\">\r\n            <div className=\"p-3\">\r\n                <div><b className=\"text-danger h4\">{item.name}</b> 将设置为全功能用户。只有系统管理员或者测试人员才需要全功能，可以操作所有数据。<br/>请确认。</div>\r\n                <div className=\"p-3\">\r\n                    <button className=\"btn btn-success\" onClick={()=>this.onSetFully(item)}>设置为全功能用户</button>\r\n                    <button className=\"ml-3 btn btn-outline-danger\" onClick={this.onCancelFully}>取消</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n    }\r\n    private renderSelectUser = (item:any, index:number) => {\r\n        return <div className=\"px-3 py-2\">{JSON.stringify(item)}</div>;\r\n    }\r\n    private usersView = () => {\r\n        let search = <SearchBox className=\"w-100\" onSearch={this.onSearch} placeholder=\"选择用户\" />;\r\n        return <Page header={search}>            \r\n            <List\r\n                before=\"搜索用户名\"\r\n                items={this.pageUsers} \r\n                item={{render: this.renderSelectUser, onClick:this.onUserSelected}} />\r\n        </Page>;\r\n    };\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { VPage, Page, PageItems } from \"tonva-tools\";\r\nimport { SearchBox, List } from 'tonva-react-form';\r\nimport { centerApi } from 'tonva-react-uq';\r\nimport { COpBinding } from \"./cOpBinding\";\r\n\r\nexport class VSearchUser extends VPage<COpBinding> {\r\n    private unit:number;\r\n    private pageUsers = new PageUsers();\r\n\r\n    private onUserClick = (item:any) => {\r\n        this.closePage();\r\n        this.returnCall(item);\r\n    }\r\n    private onSearch = async (key:string) => {\r\n        await this.pageUsers.first({key: key, unit:this.unit, role:undefined});\r\n    }\r\n    private renderSelectUser = (item:any, index:number) => {\r\n        return <div className=\"px-3 py-2\">{JSON.stringify(item)}</div>;\r\n    }\r\n    async open(unit: number) {\r\n        this.unit = unit;\r\n        let search = <SearchBox className=\"w-100\" onSearch={this.onSearch} placeholder=\"选择用户\" />;\r\n        this.openPageElement(<Page header={search}>\r\n            <List\r\n                before=\"搜索用户名\"\r\n                items={this.pageUsers}\r\n                item={{render: this.renderSelectUser, onClick:this.onUserClick}} />\r\n        </Page>);\r\n    }\r\n}\r\n\r\nclass PageUsers extends PageItems<any> {\r\n    protected async load(param:{key:string, unit:number, role:number}, pageStart: any, pageSize: number): Promise<any[]> {\r\n        let {unit, role, key} = param;\r\n        let ret = await centerApi.get('unit/members', {key: key, unit:unit, role:role, pageStart:pageStart, pageSize:pageSize});\r\n        return ret;\r\n    }\r\n    protected setPageStart(item: any): any {\r\n        if (item === undefined)\r\n            this.pageStart = 0;\r\n        else\r\n            this.pageStart = item.id;\r\n    }\r\n}","import React from \"react\";\r\nimport { Page, Controller, meInFrame, VPage } from \"tonva-tools\";\r\nimport { List, Muted, LMR, FA } from \"tonva-react-form\";\r\nimport { VOpBinding } from './vOpBinding';\r\nimport { CAction, CQuery, centerApi, entityIcons, ControllerUq } from \"tonva-react-uq\";\r\nimport { Organization, Team, Section, Post, Sheet, App, Uq, To, Entity, EntityBlock } from \"./model\";\r\nimport { VAllPosts } from \"./vAllPosts\";\r\nimport { VFullFunction } from \"./vFullFunction\";\r\nimport { VSearchUser } from \"./vSearchUser\";\r\n\r\n// 单据跟操作的绑定设置\r\nexport class COpBinding extends ControllerUq {\r\n    /*\r\n    constructor(unitxUq: CUq, res:any) {\r\n        super({});\r\n        this.unitxUq = unitxUq;\r\n    }*/\r\n\r\n    icon = <FA name=\"map-o\" className=\"text-success\" fixWidth={true} />;\r\n    label = '岗位权限 - UQ对象';\r\n\r\n    //private unitxUq: CUq;\r\n    private apps: App[];\r\n    organizations: Organization[];\r\n    teams: Team[];\r\n    sections: Section[];\r\n    posts: Post[];\r\n    postDict: {[id:number]:Post};\r\n    teamDict: {[id:number]:Team};\r\n    organizationDict: {[id:number]:Organization};\r\n    sectionDict: {[id:number]:Section};\r\n\r\n    protected async internalStart():Promise<void> {\r\n        await this.buildPosts();\r\n        await this.buildAppsUqs();\r\n        this.openPage(<this.appsView />);\r\n    }\r\n\r\n    private async buildAppsUqs() {\r\n        let unit = meInFrame.unit;\r\n        let ret:any[][] = await centerApi.get('/unit/apps-uqs', {unit: unit});\r\n        this.apps = ret[0];\r\n        let uqs: Uq[] = ret[1];\r\n\r\n        for (let app of this.apps) {\r\n            app.uqs = [];\r\n        }\r\n        for (let uq of uqs) {\r\n            let app = this.apps.find(v => v.id === uq.app);\r\n            if (app === undefined) continue;\r\n            app.uqs.push(uq);\r\n            this.setUqEntities(uq);\r\n        }\r\n    }\r\n\r\n    private async buildPosts() {\r\n        let queryAllTeams = this.cUq.cFromName('query', 'allteams') as CQuery;\r\n        let ret:any[][] = await queryAllTeams.entity.query(undefined);\r\n        this.teams = ret['teams'];\r\n        this.organizations = ret['organization'];\r\n        this.posts = ret['organizationpost'];\r\n        this.sections = ret['sections'];\r\n        this.postDict = {};\r\n        this.teamDict = {};\r\n        this.organizationDict = {};\r\n        this.sectionDict = {};\r\n        for (let organization of this.organizations) {\r\n            organization.posts = [];\r\n            organization.teams = [];\r\n            this.organizationDict[organization.id] = organization;\r\n        }\r\n        for (let team of this.teams) {\r\n            team.organizations = [];\r\n            team.sections = [];\r\n            this.teamDict[team.id] = team;\r\n        }\r\n        for (let section of this.sections) {\r\n            section.teams = [];\r\n            this.sectionDict[section.id] = section;\r\n        }\r\n        for (let post of this.posts) {\r\n            this.postDict[post.id] = post;\r\n            let organization = this.organizationDict[post.owner];\r\n            if (organization === undefined) {\r\n                continue;\r\n            }\r\n            post.organization = organization;\r\n            organization.posts.push(post);\r\n        }\r\n        // teamOrganization\r\n        for (let teamOrganization of ret['teamorganization']) {\r\n            let {team:tm, organization:og} = teamOrganization;\r\n            let team = this.teamDict[tm];\r\n            let organization = this.organizationDict[og];\r\n            team.organizations.push(organization);\r\n            organization.teams.push(team);\r\n        }\r\n        // sectionTeam\r\n        for (let sectionTeam of ret['sectionteam']) {\r\n            let {section:sec, team:tm} = sectionTeam;\r\n            let section = this.sectionDict[sec];\r\n            let team = this.teamDict[tm];\r\n            section.teams.push(team);\r\n            team.sections.push(section);\r\n        }\r\n    }\r\n\r\n    private setUqEntities(uq:Uq) {\r\n        let entities = uq.entities;\r\n        if (entities === null) return;\r\n        let lns = entities.split('\\n');\r\n        let len = lns.length;\r\n        let p:number;\r\n        for (let i=0; i<len;) {\r\n            switch (lns[i]) {\r\n                case 'tuid': p = this.setEntities(uq.tuids = [], lns, i, uq); break;\r\n                case 'map': p = this.setEntities(uq.maps = [], lns, i, uq); break;\r\n                case 'book': p = this.setEntities(uq.books = [], lns, i, uq); break;\r\n                case 'history': p = this.setEntities(uq.histories = [], lns, i, uq); break;\r\n                case 'pending': p = this.setEntities(uq.pendings = [], lns, i, uq); break;\r\n                case 'query': p = this.setEntities(uq.queries = [], lns, i, uq); break;\r\n                case 'action': p = this.setEntities(uq.actions = [], lns, i, uq); break;\r\n                case 'sheet': p = this.setSheets(uq.sheets = [], lns, i, uq); break;\r\n                default:\r\n                    alert('unknown entity type: ' + lns[i]);\r\n                    return;\r\n            }\r\n            i = p;\r\n        }\r\n    }\r\n\r\n    private setEntities(entities:Entity[], lines:string[], p:number, uq:Uq):number {\r\n        let len = lines.length;\r\n        let i = p+1;\r\n        for (; i<len; i++) {\r\n            let ln = lines[i];\r\n            if (ln.length > 0) {\r\n                let name = ln;\r\n                entities.push({\r\n                    uq: uq,\r\n                    name: name,\r\n                    states: undefined\r\n                });\r\n            }\r\n            else return i+1;\r\n        }\r\n        return i;\r\n    }\r\n\r\n    private setSheets(sheets:Sheet[], lines:string[], p:number, uq:Uq):number {\r\n        let len = lines.length;\r\n        let i = p+1;\r\n        for (; i<len; i++) {\r\n            let ln = lines[i];\r\n            if (ln.length > 0) {\r\n                let parts:string[] = ln.split('\\t');\r\n                let name = parts[0];\r\n                parts[0] = '$';\r\n                let sheet:Sheet = {\r\n                    uq: uq,\r\n                    name: name,\r\n                    states: parts,\r\n                }\r\n                sheets.push(sheet);\r\n            }\r\n            else return i+1;\r\n        }\r\n        return i;\r\n    }\r\n\r\n    async saveSheetStatePosts(sheet:Sheet, stateName:string, toArr:{post:number, team:number, section:number}[]) {\r\n        let actionSaveEntityOpPost = this.cUq.cFromName('action', 'saveentityoppost') as CAction;\r\n        let {uq, name} = sheet;\r\n        await actionSaveEntityOpPost.submit({\r\n            uq: uq.id,\r\n            entityName: name,\r\n            opName: stateName,\r\n            posts: toArr\r\n        });\r\n    }\r\n\r\n    private appRender = (app:App, index:number) => {\r\n        let {name, discription} = app;\r\n        return <LMR className=\"px-3 py-2\" right={discription && <Muted>{discription}</Muted>}>\r\n            {name}\r\n        </LMR>\r\n    }\r\n\r\n    private appClick = (app:App) => {\r\n        this.openPage(<this.appView {...app} />)\r\n    }\r\n\r\n    async callSearchUser(uq:Uq): Promise<any> {\r\n        let user = await this.vCall(VSearchUser, meInFrame.unit);\r\n        return user;\r\n    }\r\n\r\n    private appsView = () => <Page header={this.label}>\r\n        <div className=\"text-muted p-3 small\">\r\n            <div style={{lineHeight:'1.8', fontWeight:'bold'}}>说明</div>\r\n            <ol className=\"pl-3\" style={{listStyleType: '1', lineHeight: '1.8'}}>\r\n                <li >\r\n                    下面是全部启用的APP。请选择\r\n                </li>\r\n                <li>\r\n                    每个APP会使用一个以上的UQ。UQ里面定义了Tuid，Action，Map和Sheet等对象。\r\n                </li>\r\n                <li>\r\n                    设置对象跟岗位的关联\r\n                </li>\r\n            </ol>\r\n        </div>\r\n        <List items={this.apps} item={{render:this.appRender, onClick:this.appClick}} />\r\n    </Page>;\r\n\r\n    private entityRender(entity:Entity, icon:any) {\r\n        let {name} = entity;\r\n        return <div className=\"px-3 py-2 align-items-center\">{icon} &nbsp; {name}</div>\r\n    }\r\n    private sheetRender(sheet:Sheet, icon:any) {\r\n        let {name, states} = sheet;\r\n        return <div className=\"px-3 py-2 align-items-center\">\r\n            {icon} &nbsp; {name} <Muted> &nbsp; {sheet.states.join(', ')}</Muted>\r\n        </div>\r\n    }\r\n    private entityClick = async (block:EntityBlock, entity:Entity) => {\r\n        //alert('entity click');\r\n        let entityPosts = this.cUq.cFromName('query', 'getEntityPost') as CQuery;\r\n        let ret = await entityPosts.entity.query({uq: entity.uq.id, entityName: entity.name});\r\n        let opTos:{[op:string]:To[]} = {};\r\n        for (let row of ret.ret) {\r\n            let {op, post, team, section} = row;\r\n            let opTo = opTos[op];\r\n            if (opTo === undefined) opTos[op] = opTo = [];\r\n            opTo.push({\r\n                post: this.postDict[post],\r\n                team: this.teamDict[team],\r\n                section: this.sectionDict[section],\r\n            });\r\n        }\r\n        this.openVPage(VOpBinding, {entity:entity, opTos:opTos});\r\n    }\r\n    private sheetClick = async (block:EntityBlock, sheet:Sheet) => {\r\n        this.sheetClickOld(sheet);\r\n    }\r\n\r\n    private sheetClickOld = async (sheet:Sheet) => {\r\n        let entityPosts = this.cUq.cFromName('query', 'getEntityPost') as CQuery;\r\n        let ret = await entityPosts.entity.query({uq: sheet.uq.id, entityName: sheet.name});\r\n        let opTos:{[op:string]:To[]} = {};\r\n        for (let row of ret.ret) {\r\n            let {op, post, team, section} = row;\r\n            let opTo = opTos[op];\r\n            if (opTo === undefined) opTos[op] = opTo = [];\r\n            opTo.push({\r\n                post: this.postDict[post],\r\n                team: this.teamDict[team],\r\n                section: this.sectionDict[section],\r\n            });\r\n        }\r\n        this.openVPage(VOpBinding, {entity:sheet, opTos:opTos});\r\n    }\r\n\r\n    private renderSetting = (item:any, index:number) => {\r\n        let {icon, color, text} = item;\r\n        return <div className=\"px-3 py-2 align-items-center\">\r\n            {<FA name={icon} fixWidth={true} className={color} />} &nbsp; {text}\r\n        </div>\r\n    }\r\n\r\n    private settingClick = (item:any, uq:Uq) => {\r\n        let {name} = item;\r\n        let V: new (coordinator) => VPage<COpBinding>;\r\n        switch (name) {\r\n            default: return;\r\n            case 'entity-by-all-post': V = VAllPosts; break;\r\n            case 'user-all-entities': V = VFullFunction; break;\r\n        }\r\n        this.openVPage(V, uq);\r\n    }\r\n    \r\n    private uqRender = (uq:Uq, index:number) => {\r\n        let {name, tuids, actions, maps, books, queries, histories, pendings, sheets} = uq;\r\n        let nameRender = this.entityRender;\r\n        let blocks:EntityBlock[] = [\r\n            {items: tuids, type: 'tuid', itemClick: this.entityClick},\r\n            {items: sheets, type: 'sheet', itemClick: this.sheetClick, itemRender: this.sheetRender},\r\n            {items: actions, type: 'action', itemClick: this.entityClick},\r\n            {items: maps, type: 'map', itemClick: this.entityClick},\r\n            {items: books, type: 'book', itemClick: this.entityClick},\r\n            {items: queries, type: 'query', itemClick: this.entityClick},\r\n            {items: histories, type: 'history', itemClick: this.entityClick},\r\n            {items: pendings, type: 'pending', itemClick: this.entityClick},\r\n        ];\r\n\r\n        let settings:any[] = [\r\n            {name:'entity-by-all-post', icon: 'cog', color: 'text-success', text: '所有岗位可操作'},\r\n            {name: 'user-all-entities', icon: 'cog', color: 'text-success', text: '全功能用户'}\r\n        ];\r\n\r\n        // {icon} &nbsp; {name} <Muted> &nbsp; {sheet.states.join(', ')}</Muted>\r\n        return <div key={name} className=\"my-2\">\r\n            <div className=\"px-3 font-weight-bold\">{name}</div>\r\n            <List className=\"mt-3\"\r\n                items={settings}\r\n                item={{\r\n                    key: (item:any)=>item.name, \r\n                    render: this.renderSetting,\r\n                    onClick:(item:any)=>this.settingClick(item, uq) \r\n                }}\r\n             />\r\n            {blocks.map(block => {\r\n                let {items, type, itemClick, itemRender} = block;\r\n                let icon = entityIcons[type];\r\n                return items && items.length>0 &&\r\n                    <List key={type} className=\"mt-3\"\r\n                        header={<Muted className=\"px-3 pt-1 bg-light w-100\">{this.res[type]||type}</Muted>} \r\n                        items={items} \r\n                        item={{\r\n                            key: (item:any)=>item.name, \r\n                            render:(item:any, index:number)=>(itemRender || nameRender)(item, icon), \r\n                            onClick: (item:Entity)=>itemClick(block, item)\r\n                        }} />;\r\n            })}\r\n        </div>;\r\n        /*\r\n        function headerCaption(caption:string):JSX.Element {\r\n            return <Muted className=\"px-3 pt-1 bg-light w-100\">{caption}</Muted>\r\n        }\r\n        function itemList(items:any[], type:string, itemClick:(item:any)=>void, render:((item:any, icon:any)=>JSX.Element) = nameRender) {\r\n            //let res = entitiesRes;\r\n            //let {caption, icon} = res[type];\r\n            let icon = entityIcons[type];\r\n            return items && \r\n                <List className=\"mt-3\"\r\n                    header={headerCaption(type)} \r\n                    items={items} \r\n                    item={{render:(item:any, index:number)=>render(item, icon), onClick: itemClick}} />;\r\n        }\r\n            {itemList(tuids, 'tuid', this.tuidClick)}\r\n            {itemList(sheets, 'sheet', this.sheetClickOld, this.sheetRender)}\r\n            {itemList(actions, 'action', this.actionClick)}\r\n            {itemList(maps, 'map', this.mapClick)}\r\n            {itemList(books, 'book', this.bookClick)}\r\n            {itemList(queries, 'query', this.queryClick)}\r\n            {itemList(histories, 'history', this.historyClick)}\r\n            {itemList(pendings, 'pending', this.pendingClick)}\r\n        */\r\n    }\r\n\r\n    private appView = (app:App) => <Page header={app.name + '操作权限'}>\r\n        {\r\n            app.uqs.map((v, index) => this.uqRender(v, index))\r\n        }\r\n    </Page>;\r\n\r\n    /*\r\n    private tuidClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    private mapClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    private actionClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    private bookClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    private queryClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    private historyClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    private pendingClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    */\r\n}\r\n","import * as React from 'react';\r\nimport { Page, VPage } from 'tonva-tools';\r\nimport { List, FA } from 'tonva-react-form';\r\nimport { CUq, Link, CLink, CApp } from \"tonva-react-uq\";\r\nimport ui from './ui';\r\nimport { COpBinding } from './op';\r\n\r\nexport class COrganization extends CUq {\r\n    constructor() {\r\n        super(undefined, '$$$/$unitx', 0, 0, undefined, ui);\r\n    }\r\n\r\n    label = '岗位权限';\r\n    icon = 'sitemap';\r\n    links: (CLink|string)[];\r\n\r\n    protected clearPrevPages() {\r\n        // 保留回退按钮，所以，去掉下面这行\r\n        //nav.clear();\r\n    }\r\n\r\n    protected async loadEntites() {\r\n        // 只有赋Entity权限的地方，需要取全部的Entities，其它地方默认取user access，this.entities.loadAccess()\r\n        await this.entities.loadEntities();\r\n    }\r\n\r\n    protected async internalStart() {\r\n        await this.loadSchema();\r\n        this.links= [\r\n            '',\r\n            new CLink(new COpBinding(this, this.res)),\r\n            '',\r\n            this.linkFromName('map', 'teamPerson'),\r\n            this.linkFromName('map', 'sectionTeam'),\r\n            this.linkFromName('map', 'teamOrganization'),\r\n            '',\r\n            this.linkFromName('tuid', 'person'),\r\n            this.linkFromName('tuid', 'team'),\r\n            this.linkFromName('tuid', 'section'),\r\n            this.linkFromName('tuid', 'organization'),\r\n        ];\r\n        this.openVPage(VOrganization);\r\n    }\r\n    \r\n}\r\n\r\nclass VOrganization extends VPage<COrganization> {\r\n    async open() {\r\n        this.openPage(this.appPage);\r\n    }\r\n\r\n    private renderRow = (link: Link, index:number) => {\r\n        return link.render('bg-white');\r\n    }\r\n\r\n    protected appPage = () => {\r\n        let {links, label} = this.controller;\r\n        return <Page header={label} logout={()=>{}}>\r\n            <List items={links} item={{render: this.renderRow}} />\r\n        </Page>;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {IdPick, IdPickFace, List, SearchBox} from 'tonva-react-form';\r\nimport {DevModel} from './model';\r\n\r\nexport interface IdPickProps {\r\n    caption: string;\r\n    searchPlaceHolder?: string;\r\n    candidateItems: ((params:any, key:string) => Promise<any[]>) | any[];\r\n    moreCandidates: () => Promise<void>;\r\n    row: (item:any, index:number) => JSX.Element;\r\n}\r\n\r\nexport function createIdPick(props: IdPickProps):IdPick {\r\n    return function(face: IdPickFace, params: any):Promise<void> {\r\n        return new Promise<void>((resolve, reject) => {\r\n            nav.push(<IdPickPage resolve={resolve} face={face} params={params} {...props} />);\r\n        });\r\n    }\r\n}\r\n\r\ninterface IdPickPageProps extends IdPickProps {\r\n    face: IdPickFace;\r\n    resolve: (item?: any) => void;\r\n    params: any;\r\n}\r\ninterface IdPickPageState {\r\n    items?: any[];\r\n}\r\n\r\nclass IdPickPage extends React.Component<IdPickPageProps, IdPickPageState> {\r\n    private items:any[];\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: null,\r\n        }\r\n        this.itemClick = this.itemClick.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n    }\r\n    async componentDidMount() {\r\n        let {face, candidateItems, params} = this.props;\r\n        this.setState({\r\n            items: Array.isArray(candidateItems)? candidateItems : await candidateItems(params, ''),\r\n        });\r\n    }\r\n    itemClick(item:any) {\r\n        let {resolve} = this.props;\r\n        resolve(item);\r\n        nav.pop();\r\n    }\r\n    async onSearch(key: string) {\r\n        //alert('search ' + key);\r\n        //await store.dev.searchServer.first(key)\r\n        let {candidateItems, params} = this.props;\r\n        if (typeof candidateItems === 'function') {\r\n            let ret = await candidateItems(params, key);\r\n            this.setState({items: ret});\r\n        }\r\n    }\r\n    render() {\r\n        let {caption, row, searchPlaceHolder} = this.props;\r\n        return <Page header={caption} back=\"close\">\r\n            <div className=\"container\">\r\n                <SearchBox className=\"my-2\" \r\n                    onSearch={this.onSearch} \r\n                    placeholder={searchPlaceHolder}\r\n                    maxLength={100} />\r\n            </div>\r\n            <List items={this.state.items} item={{onClick:this.itemClick, render:row}} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { AppController } from '.';\r\nimport { VPage, nav, Page } from 'tonva-tools';\r\nimport { SubmitResult, DropdownActions, TonvaForm, FormRow } from 'tonva-react-form';\r\nimport { createIdPick, IdPickProps } from 'createIdPick';\r\nimport { DevModel } from 'model';\r\nimport { store } from 'store';\r\n\r\nconst ServerCaption = (item:DevModel.Server) => {\r\n    let {discription, cloud, ip} = item;\r\n    return <>{discription} {cloud} {ip}</>;\r\n}\r\nconst idPickServerProps: IdPickProps = {\r\n    caption: '选择服务器',\r\n    searchPlaceHolder: '搜索服务器',\r\n    candidateItems: async (params:any, key:string) => {\r\n        await store.dev.searchServer.first(key);\r\n        return store.dev.searchServer.items;\r\n    },\r\n    moreCandidates: async () => {\r\n        await store.dev.searchServer.more();\r\n    },\r\n    row: (item:DevModel.Server, index:number) => {\r\n        return <div className=\"px-3 py-2\"><ServerCaption {...item} /></div>;\r\n    },\r\n};\r\n\r\nconst formRows:FormRow[] = [\r\n    {\r\n        label: '名称', \r\n        field: {name: 'name', type: 'string', maxLength: 100, required: true},\r\n    },\r\n    {\r\n        label: '描述',\r\n        field: {name: 'discription', type: 'string', maxLength: 250},\r\n        face: {type: 'textarea'}\r\n    },\r\n    {\r\n        label: '图标',\r\n        field: {name: 'icon', type: 'string', maxLength: 250},\r\n    },\r\n    {\r\n        label: 'URL',\r\n        field: {name: 'url', type: 'string', maxLength: 200},\r\n    },\r\n    {\r\n        label: '服务器',\r\n        field: {name: 'server', type: 'id'},\r\n        face: {\r\n            type: 'pick-id', \r\n            initCaption: '请选择服务器', \r\n            pick: createIdPick(idPickServerProps),\r\n            fromPicked: (item:DevModel.Server)=>{\r\n                return {\r\n                    id: item.id, \r\n                    caption: <ServerCaption {...item} />,\r\n                };\r\n            },\r\n            itemFromId: (id:number)=>store.cacheServers.get(id),\r\n        },\r\n    },\r\n    {\r\n        label: '公开',\r\n        field: {name: 'public', type: 'bool', defaultValue: 1}\r\n    },\r\n];\r\n\r\nexport abstract class EditBasePage extends VPage<AppController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n    protected onSubmit = async (values:any):Promise<SubmitResult> => {\r\n        await this.controller.saveApp(values);\r\n        nav.pop();\r\n        return;\r\n    }\r\n    protected page: ()=>JSX.Element;\r\n    protected form(initValues:any) {\r\n        return <TonvaForm\r\n            className=\"m-3\"\r\n            formRows={formRows} \r\n            onSubmit={this.onSubmit} initValues={initValues} />\r\n    }\r\n}\r\n\r\nexport class EditPage extends EditBasePage {\r\n    protected page = () => {\r\n        let {app} = this.controller;\r\n        let {name} = app;\r\n        return <Page header={'修改APP - ' + name} back=\"close\">\r\n            {this.form(app)}\r\n        </Page>;\r\n    }\r\n}\r\n\r\nexport class NewPage extends EditBasePage {\r\n    protected page = () => {\r\n        return <Page header={'新建APP'} back=\"close\">\r\n            {this.form({})}\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { AppController } from '.';\r\nimport { List, LMR, Badge, Muted, FA } from 'tonva-react-form';\r\nimport { DevModel } from 'model';\r\nimport { appItemIcon } from 'consts';\r\nimport { NewPage } from './editPage';\r\n\r\nexport class AppsPage extends VPage<AppController> {\r\n    async open(param:any) {\r\n        this.openPage(this.page);\r\n    }\r\n    private newItem = () => {\r\n        this.openVPage(NewPage);\r\n    }\r\n    private page = ():JSX.Element => {\r\n        let {appList, listRowClick} = this.controller;\r\n        let right = <button className='btn btn-secondary btn-sm' onClick={()=>this.newItem()}><FA name=\"plus\" /></button>;\r\n        return <Page header=\"App\" right={right}>\r\n            <List items={appList} item={{render: this.appRow, onClick: listRowClick}} />\r\n        </Page>\r\n    }\r\n    private appRow = (item:DevModel.App):JSX.Element => {\r\n        let {name, discription, url, urlDebug} = item;\r\n        let icon = appItemIcon;\r\n        let left = <Badge size=\"sm\" className=\"pt-1\"><img src={icon} /></Badge>;\r\n        let right = <div className=\"text-muted small text-right\">\r\n            {url || '-'}<br/>\r\n            {urlDebug}\r\n        </div>;\r\n        return <LMR className=\"py-1 px-3 align-items-stretch\"\r\n            left={left} right={right}>\r\n            <div className=\"px-3\">\r\n                <div><b>{name}</b></div>\r\n                <div><Muted>{discription}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { List, LMR, SearchBox } from 'tonva-react-form';\r\nimport { DevModel } from 'model';\r\nimport { UnitSpan } from 'tools';\r\nimport { store } from 'store';\r\nimport { nav, Page, VPage } from 'tonva-tools';\r\nimport { AppController } from '.';\r\n\r\nexport class SearchUqPage extends VPage<AppController> {\r\n    @observable private uqs: DevModel.UQ[];\r\n\r\n    async open() {\r\n        this.uqs = await this.controller.getMyUqs();\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private onSearch = async (key:string) => {\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.uqs = await this.controller.searchUq(key, pageStart, pageSize);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let header = <SearchBox className=\"w-100 mx-1\" \r\n            onSearch={this.onSearch}\r\n            placeholder=\"搜索UQ名字\" \r\n            maxLength={100} />;\r\n        return <Page back=\"close\" header={header}>\r\n            <List items={this.uqs} item={{render: this.row, onClick: this.controller.onUq}} />\r\n        </Page>;\r\n    });\r\n\r\n    private row = (uq: DevModel.UQ) => {\r\n        let {owner, name, discription} = uq;\r\n        return <LMR className=\"py-2 px-3\" right={discription}>\r\n            <div>{owner} / {name}</div>\r\n        </LMR>;\r\n    };\r\n}\r\n\r\n@observer\r\nexport class AppUqs extends React.Component {\r\n    @observable anySelected: boolean = false;\r\n    private list:List;\r\n    private onSelect = (item: DevModel.UQ, isSelected:boolean, anySelected:boolean) => {\r\n        this.anySelected = anySelected;\r\n    }\r\n    private row = (item: DevModel.UQ) => {\r\n        let {name, unit, discription} = item;\r\n        return <LMR className=\"p-2\" right={<small className=\"text-muted\">{discription}</small>}>\r\n            <UnitSpan id={unit} />/{name}\r\n        </LMR>;\r\n    }\r\n    private removeBind = () => {\r\n        if (this.list === null) return;\r\n        let {selectedItems} = this.list;\r\n        if (selectedItems === undefined) return;\r\n        if (selectedItems.length === 0) return;\r\n        store.dev.apps.appBindUq(\r\n            selectedItems.map(v => {\r\n                return {id:v.id, access:['*']}\r\n            }), \r\n            false);\r\n    }\r\n    render() {\r\n        let btnProps = this.anySelected?\r\n            {color:'danger', onClick:this.removeBind, icon:'trash', text:'取消'}:\r\n            {color:'primary', onClick:()=>nav.push(<Uqs/>), icon:'plus', text:'新增'};\r\n        let btn = (p)=><button \r\n            className={classNames('btn', 'btn-outline-'+p.color, 'btn-sm')} \r\n            onClick={p.onClick}>\r\n            <i className={\"fa fa-\" + p.icon} /> {p.text}关联\r\n        </button>;\r\n        let listHeader = <div className=\"va-row py-1 justify-content-center\">{btn(btnProps)}</div>;\r\n        return <Page header=\"关联UQ\">\r\n            <List ref={list=>this.list=list} header={listHeader}\r\n                items={store.dev.apps.uqs}\r\n                item={{render: this.row, onSelect: this.onSelect}} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\n@observer\r\nclass Uqs extends React.Component {\r\n    onSearch = async (key:string) => {\r\n        await store.dev.apps.searchUq(key);\r\n    }\r\n    onBind(uq: DevModel.UQ, bind: boolean) {\r\n        store.dev.apps.appBindUq([{id:uq.id, access:['*']}], bind);\r\n    }\r\n    row = (uq: DevModel.UQ) => {\r\n        let isConnected = store.dev.apps.uqs.find(a => a.id === uq.id) !== undefined;\r\n        let cn = ['btn', 'btn-sm'];\r\n        let btnContent:any, onClick:any;\r\n        if (isConnected) {\r\n            cn.push('btn-success');\r\n            onClick = ()=>this.onBind(uq, false);\r\n            btnContent = \"已关联\";\r\n        }\r\n        else {\r\n            cn.push('btn-primary');\r\n            onClick = ()=>this.onBind(uq, true);\r\n            btnContent = <span><i className=\"fa fa-check\"/> 关联</span>;\r\n        }\r\n        return <div className=\"d-flex justify-content-start py-1 px-3\">\r\n            <div className=\"align-self-center\">{uq.name + ' - ' + uq.discription}</div>\r\n            <footer className=\"ml-auto\"><button className={classNames(cn)} onClick={onClick}>{btnContent}</button></footer>\r\n        </div>\r\n    }\r\n    render() {\r\n        let header = <SearchBox className=\"w-100 mx-1\" \r\n            onSearch={this.onSearch} \r\n            placeholder=\"搜索UQ名字\" \r\n            maxLength={100} />;\r\n        return <Page back=\"close\" header={header}>\r\n            <List items={store.dev.apps.searchedUqs} item={{render: this.row}} loading={null} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { VPage, Page, nav } from 'tonva-tools';\r\nimport { AppController, UqAccess } from '.';\r\nimport { IdDates, UnitSpan, ServerSpan, UnitName } from 'tools';\r\nimport { Prop, Media, PropGrid, ListProp, DropdownActions, List, LMR } from 'tonva-react-form';\r\nimport { appIcon } from 'consts';\r\nimport { DevModel } from 'model';\r\nimport { EditPage } from './editPage';\r\nimport { AppUqs, SearchUqPage } from './appUqs';\r\n\r\nexport class AppPage extends VPage<AppController> {\r\n    /*\r\n    @observable private uqs:ListProp = {\r\n        label: '关联UQ', \r\n        type: 'list', \r\n        list: undefined, \r\n        row: UqRow\r\n    };\r\n    */\r\n\r\n    async open() {\r\n        //this.uqs.list = this.controller.uqs;\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private editItem = async () => {\r\n        await this.openVPage(EditPage);\r\n        //nav.push(<EditAppPage {...this.props} />);\r\n    }\r\n\r\n    private deleteItem = async () => {\r\n        if (confirm('真的要删除吗？系统删除时并不会检查相关引用，请谨慎') === true) {\r\n            await this.controller.deleteApp();\r\n            nav.pop();\r\n        }\r\n    }\r\n\r\n    private page = ():JSX.Element => {\r\n        let {app} = this.controller;\r\n        let {unit, name, discription, icon, server, date_init, date_update} = app;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let menuItems = [\r\n            // {icon: 'cogs', caption:'设置关联UQ', action: ()=>nav.push(<AppUqs />)},\r\n            {caption:'修改App', action:this.editItem, icon:'edit' },\r\n            {caption:'删除', action:this.deleteItem, icon:'trash-o' }\r\n        ];\r\n\r\n        let right = <DropdownActions actions={menuItems} />;\r\n\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <Media icon={icon || appIcon} main={name} discription={disp} />\r\n            },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                label: '开发号', \r\n                component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> \r\n            },\r\n            /*\r\n            {\r\n                type: 'component', \r\n                label: 'Service',\r\n                vAlign: 'stretch',\r\n                component: <ServiceRow />,\r\n            },*/\r\n            {\r\n                label: 'URL',\r\n                name: 'url',\r\n                type: 'string',                \r\n            },\r\n            {\r\n                type: 'component',\r\n                label: '服务器',\r\n                component: <ServerSpan id={server} />\r\n            },\r\n            '',\r\n            //this.uqs,\r\n        ];\r\n        let btnAddUq = <button className=\"btn btn-outline-primary btn-sm\" onClick={()=>this.openVPage(SearchUqPage)}>\r\n            增加关联\r\n        </button>;\r\n        return <Page header={'App - ' + name} right={right}>\r\n            <PropGrid rows={rows} values={app} />\r\n            <LMR className=\"mx-3 mt-3 mb-1\" right={btnAddUq}>\r\n                关联UQ\r\n            </LMR>\r\n            <List items={this.controller.uqAccesses} item={{render:this.renderUqRow, onClick:this.uqClick}} />\r\n        </Page>\r\n    }\r\n\r\n    private uqClick = (uqAccess:UqAccess) => {\r\n        this.controller.onUq(uqAccess.uq);\r\n    }\r\n\r\n    private renderUqRow = (uqAccess:UqAccess, index:number):JSX.Element => {\r\n        let {uq, bind_access: access} = uqAccess;\r\n        let {name, discription, unit} = uq;\r\n        let disp: any;\r\n        let elAccess: any;\r\n        if (access && access.length > 0) {\r\n            elAccess = <> + {access.join(', ')} </>;\r\n        }\r\n        if (discription) disp = <div className=\"small text-muted\"> &nbsp; {discription}</div>;\r\n        return <LMR className=\"px-3 py-2 align-items-center\" right={disp}>\r\n            <UnitName id={unit} /> / {name} {elAccess}\r\n        </LMR>\r\n    }\r\n}\r\n/*\r\nclass UqRow extends React.Component<any> {\r\n    render() {\r\n        let {name, discription, unit} = this.props;\r\n        let disp: any;\r\n        if (discription) disp = <div className=\"small text-muted\">{discription}</div>;\r\n        return <div className='form-control-plaintext'>\r\n            <div><UnitName id={unit} /> / {name}</div>\r\n            {disp}\r\n        </div>\r\n    }\r\n}\r\n*/","import * as React from 'react';\r\nimport { VPage, Page, nav } from \"tonva-tools\";\r\nimport { AppController, UqAccess } from \".\";\r\nimport { LMR } from 'tonva-react-form';\r\n\r\nexport class UqBindPage extends VPage<AppController> {\r\n    private uqAccess: UqAccess;\r\n    private accesses: string[];\r\n    private accessChecked:{[name:string]:boolean};\r\n    async open(uqAccess: UqAccess) {\r\n        this.uqAccess = uqAccess;\r\n        let {uq, bind_access} = this.uqAccess;\r\n        let {access} = uq;\r\n        if (access) {\r\n            this.accessChecked = {};\r\n            this.accesses = access.split(',');\r\n            for (let acc of this.accesses) {\r\n                this.accessChecked[acc] = (bind_access && bind_access.find(bc => bc === acc)) !== undefined;\r\n            }\r\n        }\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private onCheckChanged = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        let {target} = evt;\r\n        this.accessChecked[target.name] = target.checked;\r\n    }\r\n\r\n    private saveUqBind = async () => {\r\n        let acc:string[] = [];\r\n        if (this.accesses) {\r\n            for (let i in this.accessChecked) {\r\n                if (this.accessChecked[i] === true) acc.push(i);\r\n            }\r\n        }\r\n        await this.controller.saveUqBind(this.uqAccess.uq, acc);\r\n        nav.pop();\r\n    }\r\n\r\n    private removeUqBind = async () => {\r\n        await this.controller.removeUqBind(this.uqAccess.uq);\r\n        nav.pop();\r\n    }\r\n\r\n    private page = ():JSX.Element => {\r\n        let {uq, bind_access} = this.uqAccess;\r\n        let {owner, name, discription, access} = uq;\r\n        let btnDelete:any;\r\n        if (bind_access !== null && bind_access !== undefined) {\r\n            btnDelete = <button className=\"btn btn-outline-danger btn-sm\" onClick={this.removeUqBind}>取消关联</button>;\r\n        }\r\n        let checkAccessList:any;\r\n        if (this.accesses) {\r\n            checkAccessList = <div className=\"mt-3\">\r\n            {\r\n                this.accesses.map(v => {\r\n                    let checked = this.accessChecked[v];\r\n                    return <label key={v} className=\"d-inline-block mr-4\">\r\n                        <input onChange={this.onCheckChanged}\r\n                            style={{width:'1.1rem', height:'1.1rem'}} \r\n                            name={v} type=\"checkbox\" defaultChecked={checked} />&nbsp;{v}\r\n                    </label>;\r\n                })\r\n            }\r\n            </div>;\r\n        }\r\n        return <Page header=\"关联UQ\">\r\n            <div className=\"m-3 py-3 px-3 bg-white border\">\r\n                <div>{owner} / {name}</div>\r\n                <div className=\"text-muted\">{discription}</div>\r\n                {checkAccessList}\r\n                <LMR className=\"pt-3\" right={btnDelete}>\r\n                    <button className=\"btn btn-primary btn-sm\" onClick={this.saveUqBind}>保存关联</button>\r\n                </LMR>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { observable } from 'mobx';\r\nimport { Controller } from \"tonva-tools\";\r\nimport { DevModel } from 'model';\r\nimport { devApi } from 'api';\r\nimport { AppsPage } from './appsPage';\r\nimport { AppPage } from './appPage';\r\nimport { UqBindPage } from './uqBindPage';\r\n\r\nexport interface UqAccess {\r\n    uq: DevModel.UQ;\r\n    bind_access: string[];\r\n}\r\n\r\nexport class AppController extends Controller {\r\n    private unitId: number;\r\n    app: DevModel.App;\r\n    @observable appList: DevModel.App[];\r\n    @observable uqAccesses: UqAccess[];\r\n    protected async internalStart(unitId:any) {\r\n        this.unitId = unitId;\r\n        this.appList = await devApi.apps(this.unitId);\r\n        this.openVPage(AppsPage);\r\n    }\r\n\r\n    listRowClick = async (item:DevModel.App) => {\r\n        this.app = item;\r\n        let ret = await devApi.loadAppUqs(item.id);\r\n        this.uqAccesses = ret.map(v => {\r\n            let {owner, access, id, name, discription, unit, date_init, date_update, bind_access} = v;\r\n            return {\r\n                uq: {\r\n                    id: id,\r\n                    name: name,\r\n                    discription: discription,\r\n                    unit: unit,\r\n                    access: access,\r\n                    owner: owner,\r\n                    date_init: date_init,\r\n                    date_update: date_update, \r\n                    service_count: undefined,\r\n                },\r\n                uqOwner: owner,\r\n                bind_access: bind_access && bind_access.split(',')\r\n            }\r\n        });\r\n        this.openVPage(AppPage);\r\n    }\r\n\r\n    saveApp = async (values: DevModel.App) => {\r\n        let app = _.clone(values);\r\n        app.unit = this.unitId;\r\n        let ret = await devApi.saveApp(app);\r\n        app.id = ret;\r\n        this.appList.push(app);\r\n    }\r\n\r\n    deleteApp = async () => {\r\n        await devApi.delApp(this.unitId, this.app.id);\r\n        let index = this.appList.findIndex(v => v.id === this.app.id);\r\n        if (index >= 0) this.appList.splice(index, 1);\r\n    }\r\n\r\n    searchUq = async (key:string, pageStart:number, pageSize:number) => {\r\n        return await devApi.searchUq(this.unitId, key, pageStart, pageSize);\r\n    }\r\n\r\n    getMyUqs = async () => {\r\n        return await devApi.getMyUqs(this.unitId);\r\n    }\r\n\r\n    onUq = (uq: DevModel.UQ) => {\r\n        let uqAccess:UqAccess = this.uqAccesses.find(v => v.uq.id === uq.id);\r\n        if (uqAccess === undefined) {\r\n            uqAccess = {\r\n                uq: uq,\r\n                bind_access: undefined,\r\n            }\r\n        }\r\n        else {\r\n            let access = uqAccess.bind_access;\r\n            if (access === null || access === undefined) uqAccess.bind_access = [];\r\n        }\r\n        this.openVPage(UqBindPage, uqAccess);\r\n    }\r\n\r\n    // accesses = undefined, 表示删除\r\n    private buildBindUqs(uq: DevModel.UQ, accesses?:string[]) {\r\n        let uqs:{id:number, access:string[]}[] = [];\r\n        let isNew = true;\r\n        for (let ua of this.uqAccesses) {\r\n            let {uq:uaUq, bind_access} = ua;\r\n            if (uaUq.id === uq.id) {\r\n                if (accesses === undefined) continue;\r\n                bind_access = accesses;\r\n                isNew = false;\r\n            }\r\n            uqs.push({\r\n                id: uaUq.id,\r\n                access: bind_access || [],\r\n            });\r\n        }\r\n        if (accesses !== undefined && isNew === true) {\r\n            uqs.push({id: uq.id, access: accesses});\r\n        }\r\n        return uqs;\r\n    }\r\n\r\n    saveUqBind = async (uq: DevModel.UQ, accesses:string[]) => {\r\n        let uqs:{id:number, access:string[]}[] = this.buildBindUqs(uq, accesses);\r\n        await devApi.appBindUq(this.unitId, this.app.id, uqs);\r\n        if (uqs.length > this.uqAccesses.length) {\r\n            this.uqAccesses.unshift({\r\n                uq: uq,\r\n                bind_access: accesses,\r\n            });\r\n        }\r\n        else {\r\n            let ua = this.uqAccesses.find(v => v.uq.id === uq.id);\r\n            ua.bind_access = accesses;\r\n        }\r\n    }\r\n\r\n    removeUqBind = async (uq: DevModel.UQ) => {\r\n        let uqs:{id:number, access:string[]}[] = this.buildBindUqs(uq);\r\n        await devApi.appBindUq(this.unitId, this.app.id, uqs);\r\n        let index = this.uqAccesses.findIndex(v => v.uq.id === uq.id);\r\n        if (index>=0) this.uqAccesses.splice(index, 1);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {List, EasyDate, LMR, Muted} from 'tonva-react-form';\r\nimport {DevModel} from '../../model';\r\nimport {store} from '../../store';\r\n\r\ninterface State {\r\n    files: any[];\r\n    compiled?: string;\r\n    text?: string;\r\n}\r\n\r\nexport interface UpUploadProps {\r\n    uq: DevModel.UQ;\r\n    services: DevModel.Service[];\r\n}\r\n\r\nexport class UqUpload extends React.Component<UpUploadProps, State> {\r\n    private fileInput: HTMLInputElement;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            files: undefined,\r\n        }\r\n    }\r\n    private onFilesChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        let upFiles:any[] = [];\r\n        let {files} = evt.target;\r\n        let len = files.length;\r\n        for (let i=0; i<len; i++) {\r\n            upFiles.push(files[i]);\r\n        }\r\n        this.setState({\r\n            files: upFiles,\r\n        });\r\n    }\r\n    fileRender(file, index):JSX.Element {\r\n        let {name, size, lastModifiedDate} = file;\r\n        function sz():string {\r\n            let n:number, u:string;\r\n            if (size < 1024) {\r\n                n = size; u = 'b';\r\n            }\r\n            else if (size < 1024*1024) {\r\n                n = Math.trunc((size / 1024) * 100)/100; u = 'k';\r\n            }\r\n            else {\r\n                n = Math.trunc((size / 1024 / 1024) * 100)/100; u = 'm';\r\n            }\r\n            return n + ' ' + u;\r\n        }\r\n        return <LMR className=\"px-2 py-1\" right={<Muted>{sz()}</Muted>}>\r\n            <div>{name}</div>\r\n            <div><Muted>修改日期: <EasyDate date={lastModifiedDate} /></Muted></div>\r\n        </LMR>;\r\n    }\r\n    private fileClick = (file:any) => {\r\n        let fr = new FileReader();\r\n        fr.onload = function(f) {\r\n            //alert(this.result);\r\n            nav.push(<UqPage name={file.name} content={this.result} />)\r\n        }\r\n        fr.readAsText(file, \"utf8\");\r\n    }\r\n    private onSubmit = (evt:React.FormEvent<any>) => {\r\n        evt.preventDefault();\r\n    }\r\n\r\n    private async update(thoroughly:boolean) {\r\n        var files:FileList = this.fileInput.files;\r\n        var data = new FormData();\r\n        let len = files.length;\r\n        for (let i=0; i<len; i++) {\r\n            let file = files[i];\r\n            data.append('files[]', file, file.name);\r\n        }\r\n  \r\n        let url = store.uqServer + 'uq-compile/' + this.props.uq.id + '/update';\r\n        if (thoroughly === true) url += '-thoroughly';\r\n        try {\r\n            let abortController = new AbortController();\r\n            let res = await fetch(url, {\r\n                method: \"POST\",\r\n                body: data,\r\n                signal: abortController.signal,\r\n            });\r\n            nav.push(<CompileResult {...this.props} res={res} abortController={abortController} />);\r\n        }\r\n        catch (e) {\r\n            console.error('%s %s', url, e);\r\n        }\r\n    }\r\n    private onUpdate = async () => {\r\n        let thoroughly = false;\r\n        await this.update(thoroughly);\r\n    }\r\n    private onUpdateThoroughly = async () => {\r\n        let thoroughly = true;\r\n        await this.update(thoroughly);\r\n    }\r\n    render() {\r\n        let {files} = this.state;\r\n        let fileList:any;\r\n        if (files !== undefined) {\r\n            fileList = <List \r\n                className=\"my-3\" \r\n                items={files} \r\n                item={{render: this.fileRender, onClick: this.fileClick}}/>;\r\n        }\r\n        let button:any;\r\n        if (files !== undefined && files.length > 0) {\r\n            button = <div className=\"my-2 d-flex\">\r\n                <button className=\"btn btn-success\" type=\"submit\" onClick={this.onUpdate}>优化编译</button>\r\n                <div className=\"py-2 flex-grow-1\" />\r\n                <button className=\"btn btn-outline-warning\"\r\n                    type=\"submit\" onClick={this.onUpdateThoroughly}>完全编译</button>\r\n            </div>;\r\n        }\r\n        return <Page header={\"编译 - \" + this.props.uq.name}>\r\n            <div className=\"py-2 px-3\">\r\n                <div>请选择UQ源代码文件</div>\r\n                <form className=\"my-1\" encType=\"multipart/form-data\" onSubmit={this.onSubmit}>\r\n                    <div className=\"my-1\">\r\n                        <input ref={(fileInput) => this.fileInput=fileInput}type=\"file\" id=\"photo\" \r\n                            className=\"w-100 form-control-file\" name=\"files\" multiple={true} \r\n                            onChange={this.onFilesChange} />\r\n                    </div>\r\n                    {fileList}\r\n                    {button}\r\n                </form>\r\n                <pre>{this.state.compiled}</pre>\r\n                <div>{this.state.text}</div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n\r\ninterface UqPgeProps {\r\n    name: string;\r\n    content: string|ArrayBuffer;\r\n}\r\nclass UqPage extends React.Component<UqPgeProps> {\r\n    render() {\r\n        return <Page header={this.props.name}>\r\n            <pre className=\"px-3 py-2\">{this.props.content}</pre>\r\n        </Page>;\r\n    }\r\n}\r\n\r\ninterface CompileResultProps {\r\n    res: Response;\r\n    abortController: AbortController;\r\n}\r\ninterface CompileResultState {\r\n    texts: string[];\r\n    seconds: number;\r\n}\r\nclass CompileResult extends React.Component<CompileResultProps, CompileResultState> {\r\n    private texts: string[];\r\n    private timeHandler:any;\r\n    constructor(props) {\r\n        super(props);\r\n        this.texts = [];\r\n        this.state = {\r\n            texts: this.texts,\r\n            seconds: -1,\r\n        }\r\n    }\r\n    componentWillMount() {\r\n        nav.regConfirmClose(async ():Promise<boolean>=>{\r\n            if (this.state.seconds>=0) return true;\r\n            return new Promise<boolean>((resolve, reject) => {\r\n                try {\r\n                    if (confirm('正在编译中，真的要中止吗？') === true) {\r\n                        try {\r\n                            this.props.abortController.abort();\r\n                        }\r\n                        catch (err) {\r\n                            console.error(err);\r\n                        }\r\n                        resolve(true);\r\n                    }\r\n                    else {\r\n                        resolve(false);\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    reject(err);\r\n                }\r\n            })\r\n        });\r\n    }\r\n    private clearTimeHandler() {\r\n        if (this.timeHandler !== undefined) {\r\n            clearTimeout(this.timeHandler);\r\n            this.timeHandler = undefined;\r\n        }\r\n    }\r\n    private getParent(el:HTMLElement):HTMLElement {\r\n        if (!el) return;\r\n        if (el.tagName === 'MAIN') return el;\r\n        return this.getParent(el.parentElement);\r\n    }\r\n    private scrollToBottom(defer:number = 100) {\r\n        this.clearTimeHandler();\r\n        let that = this;\r\n        this.timeHandler = setTimeout(() => {\r\n            var pane = document.getElementById('bottomDiv');\r\n            pane && pane.scrollIntoView();\r\n            /*\r\n            if (pane !== undefined) {\r\n                let childNodes = pane.childNodes;\r\n                let last = childNodes.item(childNodes.length-1);\r\n                (last as HTMLElement).scrollIntoView();\r\n            }\r\n            */\r\n            that.clearTimeHandler();\r\n        }, defer);\r\n    }\r\n    private topIntoView() {\r\n        var pane = document.getElementById('topDiv');\r\n        pane && pane.scrollIntoView();\r\n        /*\r\n        let childNodes = pane.childNodes;\r\n        let len = childNodes.length;\r\n        if (len === 0) return;\r\n        let first = childNodes.item(0);\r\n        (first as HTMLElement).scrollIntoView();\r\n        */\r\n    }\r\n    private bottomIntoView() {\r\n        var pane = document.getElementById('bottomDiv');\r\n        pane && pane.scrollIntoView();\r\n        /*\r\n        let childNodes = pane.childNodes;\r\n        let len = childNodes.length;\r\n        if (len === 0) return;\r\n        let last = childNodes.item(len-1);\r\n        (last as HTMLElement).scrollIntoView();\r\n        */\r\n    }\r\n    private doubleClick = () => {\r\n        var pane = document.getElementById('scrollDiv');\r\n        let main = this.getParent(pane);\r\n        if (!main) return;\r\n        if (main.scrollTop >= main.scrollHeight / 2) {\r\n            this.topIntoView();\r\n        }\r\n        else {\r\n            this.bottomIntoView();\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        let that = this;\r\n        let time = new Date();\r\n        function consume(reader: ReadableStreamReader) {\r\n            var total = 0\r\n            return new Promise((resolve, reject) => {\r\n                function uintToString(uintArray):string {\r\n                    var encodedString = String.fromCharCode.apply(null, uintArray),\r\n                        decodedString = decodeURIComponent(escape(encodedString));\r\n                    return decodedString;\r\n                }\r\n                function pump() {\r\n                    reader.read().then(({done, value}) => {\r\n                        if (done) {\r\n                            that.scrollToBottom();\r\n                            that.setState({\r\n                                seconds: (new Date().getTime() - time.getTime()),\r\n                            })\r\n                            resolve();\r\n                            return;\r\n                        }\r\n                        let text = uintToString(value);\r\n                        that.texts.push(text);\r\n                        that.setState({\r\n                            texts: that.texts,\r\n                        });\r\n                        total += value.byteLength;\r\n                        that.scrollToBottom();\r\n                        pump();\r\n                    }).catch(reject)\r\n                }\r\n                pump();\r\n            });\r\n        }\r\n        try {\r\n            await consume(this.props.res.body.getReader());\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n    render() {\r\n        let {seconds, texts} = this.state;\r\n        return <Page header={seconds>=0? \"编译完成\" : \"编译中...\"} back=\"close\">\r\n            <div id='topDiv' />\r\n            <div id='scrollDiv'\r\n                onDoubleClick={this.doubleClick} \r\n                className='py-2 px-3' \r\n                style={{wordWrap: 'break-word', whiteSpace: 'normal'}}>\r\n                {texts.map((v, i) => <pre style={{whiteSpace: 'pre-wrap'}} key={i}>{v}</pre>)}\r\n            </div>\r\n            {seconds>=0? <div className='px-3 pb-3' style={{color: 'red', fontWeight: 'bold'}}>\r\n                编译完成。共计用时{Math.floor(seconds/1000)}秒\r\n            </div> : undefined}\r\n            <div id='bottomDiv' />\r\n        </Page>;\r\n    }\r\n}","import * as React from 'react';\r\nimport { DevModel } from \"model\";\r\nimport { IdPickProps, createIdPick } from 'createIdPick';\r\nimport { store } from 'store';\r\nimport { Field, FormRow, StringFace, TextAreaFace, TonvaForm, SubmitResult } from 'tonva-react-form';\r\nimport { UQController } from '.';\r\nimport { VPage, nav, Page } from 'tonva-tools';\r\n\r\nconst ServerCaption = (item:DevModel.Server) => {\r\n    let {discription, cloud, ip} = item;\r\n    return <>{discription} {cloud} {ip}</>;\r\n}\r\n\r\nconst idPickServerProps: IdPickProps = {\r\n    caption: '选择服务器',\r\n    searchPlaceHolder: '搜索服务器',\r\n    candidateItems: async (params:any, key:string) => {\r\n        await store.dev.searchServer.first(key);\r\n        return store.dev.searchServer.items;\r\n    },\r\n    moreCandidates: async () => {\r\n        await store.dev.searchServer.more();\r\n    },\r\n    row: (item:DevModel.Server, index:number) => {\r\n        return <div className=\"px-3 py-2\"><ServerCaption {...item} /></div>;\r\n    },\r\n};\r\n\r\nconst urlField:Field = {name: 'url', type: 'string', required:true, maxLength:200};\r\nconst serverField:Field = {name: 'server', type: 'id'};\r\nconst dbTypeField:Field = {name: 'db_type', type: 'string', maxLength:20, defaultValue:'mysql'};\r\nconst dbField:Field = {name: 'db', type: 'string', maxLength:50, required: true};\r\nconst connectionField:Field = {name:'connection', type:'string', maxLength:250};\r\n\r\nconst urlRow = {\r\n    label: 'URL',\r\n    field: urlField,\r\n};\r\n\r\nconst serverRow = {\r\n    label: '服务器', \r\n    field: serverField,\r\n    face: {\r\n        type: 'pick-id', \r\n        initCaption: '请选择服务器', \r\n        pick: createIdPick(idPickServerProps), //this.idPick,\r\n        fromPicked: (item:DevModel.Server)=>{\r\n            return {\r\n                id: item.id, \r\n                caption: <ServerCaption {...item} />,\r\n            };\r\n        },\r\n        itemFromId: (id:number)=>store.cacheServers.get(id),\r\n    },\r\n};\r\n\r\nconst dbTypeRow:FormRow = {\r\n    label: '数据库类型',\r\n    field: dbTypeField,\r\n    face: {\r\n        type: 'string',\r\n        readonly: true,\r\n    } as StringFace\r\n};\r\n\r\nconst dbRow = {\r\n    label: '数据库名字',\r\n    field: dbField,\r\n};\r\n\r\nconst connectionRow = {\r\n    label: '连接字符串',\r\n    field: connectionField,\r\n    face: {\r\n        type: 'textarea',\r\n        maxLength: 250,\r\n        rows: 8,\r\n    } as TextAreaFace,\r\n};\r\n\r\nexport class NewServicePage extends VPage<UQController> {\r\n    private tonvaForm:TonvaForm;\r\n    private formRows:FormRow[] = [\r\n        urlRow,\r\n        serverRow,\r\n        dbTypeRow,\r\n        dbRow,\r\n        connectionRow\r\n    ];\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n    private onSubmit = async (values:any):Promise<SubmitResult | undefined> => {\r\n        values.type = 2; // uq type, to be removed\r\n        values.bindId = this.controller.uq.id;\r\n        let ret = await this.controller.saveService(values);\r\n        if (ret === 0) {\r\n            if (this.tonvaForm !== undefined) {\r\n                this.tonvaForm.formView.setError('url', '已经有Service使用这个url');\r\n            }\r\n            return;\r\n        }\r\n        nav.pop();\r\n        return;\r\n    }\r\n    private page = () => {\r\n        return <Page header=\"新建Service\">\r\n            <TonvaForm ref={t=>this.tonvaForm=t} className=\"m-3\" formRows={this.formRows} onSubmit={this.onSubmit} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { Page, VPage, nav } from \"tonva-tools\";\r\nimport { UQController } from '.';\r\nimport { DevModel } from 'model';\r\nimport { Prop, PropGrid } from 'tonva-react-form';\r\nimport { StringValueEdit, ServerSpan, TextValueEdit } from 'tools';\r\n\r\nexport class ServicePage extends VPage<UQController> {\r\n    @observable private service: DevModel.Service;\r\n    async open(service: DevModel.Service) {\r\n        this.service = service;\r\n        this.openPage(this.page);\r\n    }\r\n    private async changeProp(prop:string, value:any):Promise<any> {\r\n        return await this.controller.changeServiceProp(this.service, prop, value);\r\n    }\r\n    private onUrlChanged = async (value:any, orgValue:any):Promise<string|void> => {\r\n        let ret = await this.changeProp('url', value);\r\n        if (ret === 0) {\r\n            return 'URL已经被使用了';\r\n        }\r\n        this.service.url = value;\r\n    }\r\n    private onDbChanged = async (value:any, orgValue:any):Promise<string|void> => {\r\n        let ret = await this.changeProp('db', value);\r\n        if (ret === 0) {\r\n            return 'Db已经被使用了';\r\n        }\r\n        this.service.db = value;\r\n    }\r\n    private onDbTypeChanged = async (value:string, orgValue:any):Promise<string|void> => {\r\n        if (value === undefined || value === null) return;\r\n        if (value.toLowerCase().trim() !== 'mysql') return '目前只支持mysql';\r\n        let ret = await this.changeProp('db_type', value);\r\n        this.service.db_type = value;\r\n    }\r\n    private onConnectionChanged = async (value:string, orgValue:any):Promise<string|void> => {        \r\n        await this.changeProp('connection', value);\r\n        this.service.connection = value;\r\n    }\r\n    private onDeleteClick = async () => {\r\n        if (confirm(\"真的要删除Service吗？删除了不可恢复，需要重新录入。\")!==true) return;\r\n        await this.controller.delService(this.service);\r\n        nav.pop();\r\n    }\r\n    private page = () => {\r\n        let {uq} = this.controller;\r\n        let {type, name, discription, server, url, db, db_type, connection} = this.service;\r\n        let rows:Prop[] = [\r\n            '',\r\n            /*\r\n            {\r\n                type: 'component',\r\n                component: <div className=\"px-3 py-2\">\r\n                    <b>{name}</b><br/><Muted>{discription}</Muted>\r\n                </div>,\r\n            },\r\n            '',*/\r\n            {\r\n                type: 'string',\r\n                name: 'url',\r\n                label: 'URL',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"修改URL\"\r\n                    value={url}\r\n                    onChanged={this.onUrlChanged} />)\r\n            },\r\n            {\r\n                type: 'component',\r\n                label: '服务器',\r\n                component: <ServerSpan id={server} />\r\n            },\r\n            {\r\n                type: 'string',\r\n                name: 'db_type',\r\n                label: '数据库类型',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"数据库类型\"\r\n                    value={db_type}\r\n                    onChanged={this.onDbTypeChanged} />)\r\n            },\r\n            {\r\n                type: 'string',\r\n                name: 'db',\r\n                label: '数据库名',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"数据库名字\"\r\n                    value={db}\r\n                    onChanged={this.onDbChanged} />)\r\n            },\r\n            {\r\n                type: 'string',\r\n                name: 'connection',\r\n                label: '连接字符串',\r\n                onClick: ()=>nav.push(<TextValueEdit\r\n                    title=\"连接字符串\"\r\n                    value={connection}\r\n                    onChanged={this.onConnectionChanged} />)\r\n            },\r\n        ];\r\n        let right = <button onClick={this.onDeleteClick} className=\"btn btn-success\">删除</button>;\r\n        return <Page header={'UQ - ' + uq.name} right={right}>\r\n            <PropGrid rows={rows} values={this.service} />\r\n        </Page>\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { UQController } from \".\";\r\nimport { VPage, nav, Page } from \"tonva-tools\";\r\nimport { SubmitResult, TonvaForm } from \"tonva-react-form\";\r\n\r\nconst formRows = [\r\n    {\r\n        label: '名称', \r\n        field: {name: 'name', type: 'string', maxLength: 100, required: true},\r\n    },\r\n    {\r\n        label: '描述',\r\n        field: {name: 'discription', type: 'string', maxLength: 250},\r\n        face: {type: 'textarea'}\r\n    },\r\n    //{\r\n    //    label: '入口',\r\n    //    field: {name: 'access', type: 'string', maxLength: 250},\r\n    //    face: {type: 'textarea', placeholder: '逗号分隔的入口名'}\r\n    //},\r\n];\r\n\r\n\r\nexport abstract class EditBasePage extends VPage<UQController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n    protected onSubmit = async (values:any):Promise<SubmitResult> => {\r\n        await this.controller.saveUq(values);\r\n        nav.pop();\r\n        return;\r\n    }\r\n    protected page: ()=>JSX.Element;\r\n    protected form(initValues:any):JSX.Element {\r\n        return <TonvaForm\r\n            className=\"m-3\"\r\n            formRows={formRows} \r\n            onSubmit={this.onSubmit} initValues={initValues} />\r\n    }\r\n}\r\n\r\nexport class EditPage extends EditBasePage {\r\n    protected page = () => {\r\n        let {uq} = this.controller;\r\n        let {name} = uq;\r\n        return <Page header={'修改UQ - ' + name} back=\"close\">\r\n            {this.form(uq)}\r\n        </Page>;\r\n    }\r\n}\r\n\r\nexport class NewPage extends EditBasePage {\r\n    protected page = () => {\r\n        return <Page header={'新建UQ'} back=\"close\">\r\n            {this.form({})}\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, nav } from 'tonva-tools';\r\nimport { UQController } from '.';\r\nimport { IdDates, UnitSpan, ServerSpan } from 'tools';\r\nimport { Prop, Media, LMR, FA, PropGrid, Muted, List, EasyDate, DropdownActions } from 'tonva-react-form';\r\nimport { appIcon } from 'consts';\r\nimport { DevModel } from 'model';\r\nimport { EditPage } from './editPage';\r\n\r\nexport class UQPage extends VPage<UQController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private editItem = async () => {\r\n        await this.openVPage(EditPage);\r\n        //nav.push(<EditAppPage {...this.props} />);\r\n    }\r\n\r\n    private deleteItem = async () => {\r\n        if (confirm('真的要删除UQ吗？') === true) {\r\n            await this.controller.deleteUq();\r\n            nav.pop();\r\n        }\r\n    }\r\n\r\n    private page = ():JSX.Element => {\r\n        let {onUqUpload, serviceClick, uq, services} = this.controller;\r\n        let {id, name, discription, access, unit, date_init, date_update} = uq;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let menuItems = [\r\n            {caption:'修改UQ', action:this.editItem, icon:'edit' },\r\n            {caption:'删除', action:this.deleteItem, icon:'trash-o' }\r\n        ];\r\n        let right = <DropdownActions actions={menuItems} />;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <Media icon={appIcon} main={name} discription={disp} />\r\n            },\r\n            {\r\n                type: 'component', \r\n                label: '开发号', \r\n                component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> \r\n            },\r\n           '',\r\n           {\r\n                type: 'component', \r\n                label: '编译代码', \r\n                component: <LMR onClick={()=>onUqUpload()} className=\"w-100 py-2 cursor-pointer\" \r\n                    left=\"上传编译uq代码\" right={<FA className=\"align-self-center\" name=\"chevron-right\" />} />\r\n            },\r\n            /*\r\n            {type: 'component', label: 'ACCESS', component: <div className=\"py-2\">{\r\n                access? \r\n                    access.split(',').join(', ')\r\n                    : <Muted>(全)</Muted>\r\n            }</div> },\r\n            */\r\n        ];\r\n        return <Page header={'UQ - ' + name} right={right}>\r\n            <PropGrid rows={rows} values={uq} />\r\n            <div className=\"d-flex mx-3 mt-3 mb-1 align-items-end\">\r\n                <Muted style={{display:'block', flex:1}}>Service</Muted>\r\n                <button\r\n                    className=\"btn btn-outline-primary btn-sm\"\r\n                    onClick={()=>this.controller.showNewServicePage()}>\r\n                    增加\r\n                </button>\r\n            </div>\r\n            <List items={services} item={{render:this.renderService, onClick:serviceClick}} />\r\n        </Page>;\r\n    }\r\n    private renderService(service:DevModel.Service, index:number):JSX.Element {\r\n        let {url, server, db, db_type, compile_time} = service;\r\n        let compile = !compile_time?\r\n            <Muted>未编译</Muted> :\r\n            <><Muted>编译: </Muted><EasyDate date={compile_time}/></>;\r\n\r\n        return <LMR className=\"d-flex w-100 align-items-center cursor-pointer py-2 px-3\"\r\n            right={<small>{compile}</small>}\r\n            >\r\n            <div>\r\n                <div>{url}</div>\r\n                <div>{db_type} {db}</div>\r\n                <Muted><ServerSpan id={server} /></Muted>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { UQController } from '.';\r\nimport { List, LMR, Badge, Muted, FA } from 'tonva-react-form';\r\nimport { DevModel } from 'model';\r\nimport { appItemIcon } from 'consts';\r\nimport { NewPage } from './editPage';\r\n\r\nexport class ListPage extends VPage<UQController> {\r\n    async open(param:any) {\r\n        this.openPage(this.page);\r\n    }\r\n    private newItem = () => {\r\n        this.openVPage(NewPage);\r\n    }\r\n    private page = ():JSX.Element => {\r\n        let {uqList: list, listRowClick} = this.controller;\r\n        let right = <button className='btn btn-secondary btn-sm' onClick={()=>this.newItem()}><FA name=\"plus\" /></button>;\r\n        return <Page header=\"UQ\" right={right}>\r\n            <List items={list} item={{render: this.listRow, onClick: listRowClick}} />\r\n        </Page>\r\n    }\r\n    private listRow = (item:DevModel.UQ):JSX.Element => {\r\n        let {name, discription, service_count} = item;\r\n        let icon = appItemIcon;\r\n        return <LMR className=\"py-1 px-3 align-items-stretch\"\r\n            left={<Badge size=\"sm\" className=\"pt-1\"><img src={icon} /></Badge>}\r\n            right={<>{service_count}</>}>\r\n            <div className=\"px-3\">\r\n                <div><b>{name}</b></div>\r\n                <div><Muted>{discription}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { observable } from 'mobx';\r\nimport { nav, Page, Controller, meInFrame, VPage } from 'tonva-tools';\r\nimport { DevModel } from '../../model';\r\nimport { UqUpload, UpUploadProps } from './uqUpload';\r\nimport { devApi } from 'api';\r\nimport { NewServicePage } from './newServicePage';\r\nimport { ServicePage } from './servicePage';\r\nimport { UQPage } from './uqPage';\r\nimport { ListPage } from './listPage';\r\n\r\nexport class UQController extends Controller {\r\n    private unitId: number;\r\n    uq: DevModel.UQ;\r\n    access: string;\r\n    entities: string;\r\n    @observable uqList: DevModel.UQ[];\r\n    @observable services: DevModel.Service[];\r\n    protected async internalStart(unitId:any) {\r\n        this.unitId = unitId;\r\n        this.uqList = await devApi.uqs(this.unitId);\r\n        this.openVPage(ListPage);\r\n    }\r\n\r\n    listRowClick = async (item:DevModel.UQ) => {\r\n        this.uq = item;\r\n        await this.loadUqEntities(item.id);\r\n        this.openVPage(UQPage);\r\n    }\r\n\r\n    private async loadUqEntities(uqId: number) {\r\n        let ret = await devApi.uqGetEntities(this.unitId, uqId);\r\n        let r0 = ret[0][0];\r\n        this.access = r0.access;\r\n        this.entities = r0.entities;\r\n        this.services = ret[1];\r\n    }\r\n\r\n    serviceClick = (service: DevModel.Service) => {\r\n        this.openVPage(ServicePage, service);\r\n    }\r\n\r\n    onUqUpload = async() => {\r\n        let onDispose = () => {\r\n        };\r\n        nav.push(<UqUpload uq={this.uq} services={this.services} />, onDispose);\r\n    }\r\n\r\n    saveUq = async (values: DevModel.UQ) => {\r\n        let uq = _.clone(values);\r\n        uq.unit = this.unitId;\r\n        let ret = await devApi.saveUq(uq);\r\n        uq.id = ret;\r\n        this.uqList.push(uq);\r\n    }\r\n\r\n    deleteUq = async () => {\r\n        await devApi.delUq(this.unitId, this.uq.id);\r\n        let index = this.uqList.findIndex(v => v.id === this.uq.id);\r\n        if (index >= 0) this.uqList.splice(index);\r\n    }\r\n\r\n    async changeServiceProp(service: DevModel.Service, prop:string, value:any):Promise<any> {\r\n        return await devApi.changeServiceProp(this.unitId, service.id, prop, value);\r\n    }\r\n\r\n    async saveService(service: DevModel.Service):Promise<number> {\r\n        let svc = _.clone(service);\r\n        svc.unit = this.unitId;\r\n        let ret = await devApi.saveService(svc);\r\n        svc.id = ret;\r\n        this.services.push(svc);\r\n        return ret;\r\n    }\r\n\r\n    async delService(service: DevModel.Service) {\r\n        await devApi.delService(this.unitId, service.id);\r\n        let index = this.services.findIndex(v => v.id == service.id);\r\n        if (index >= 0) this.services.splice(index);\r\n    }\r\n\r\n    showNewServicePage = async () => {\r\n        await this.openVPage(NewServicePage);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {LMR, Badge, Muted} from 'tonva-react-form';\r\n\r\nexport interface RowProps {\r\n    icon: string;\r\n    main: string|JSX.Element;\r\n    vice: string|JSX.Element;\r\n}\r\n\r\nexport class Row extends React.Component<RowProps> {\r\n    render() {\r\n        let {icon, main, vice} = this.props;\r\n        return <LMR className=\"py-1 px-3 align-items-stretch\"\r\n            left={<Badge size=\"sm\" className=\"pt-1\"><img src={icon} /></Badge>}>\r\n            <div className=\"px-3\">\r\n                <div><b>{main}</b></div>\r\n                <div><Muted>{vice}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable, computed} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport _ from 'lodash';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {FormRow, EasyDate, Media, \r\n    Prop, ListProp, PropGrid, List, SearchBox, LMR, Badge, Muted} from 'tonva-react-form';\r\nimport {UnitSpan, IdDates, ServerSpan} from '../tools';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {DevModel} from '../model';\r\nimport {store} from '../store';\r\nimport {Row} from './row';\r\nimport {ObjViewProps} from './ObjViewProps';\r\n\r\n@observer\r\nclass Info extends React.Component<DevModel.Bus> {\r\n    /*\r\n    private rows: Prop[];\r\n    constructor(props:any) {\r\n        super(props);\r\n        let {unit, name, discription, schema, date_init, date_update} = this.props;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={name} discription={disp} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                label: 'Schema',\r\n                vAlign: 'stretch',\r\n                component: <SchemaView />,\r\n            },\r\n        ];\r\n    }*/\r\n    async componentDidMount() {\r\n        //await store.dev.buses.loadCurApis();\r\n    }\r\n    render() {\r\n        let {unit, name, discription, schema, date_init, date_update} = this.props;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={name} discription={disp} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                label: 'Schema',\r\n                vAlign: 'stretch',\r\n                component: <SchemaView />,\r\n            },\r\n        ];\r\n        return <div>\r\n            <PropGrid rows={rows} values={this.props} />\r\n        </div>\r\n    }\r\n}\r\n\r\n@observer\r\nexport class SchemaView extends React.Component {\r\n    render() {\r\n        let bus = store.dev.buses.cur;\r\n        if (bus === null) return '...';\r\n        let content = bus.schema;\r\n        return <div className=\"d-flex py-2 w-100 align-items-center\" style={{flex:1}}>\r\n            <pre>\r\n                {content}\r\n            </pre>\r\n        </div>;\r\n\r\n    }\r\n}\r\n\r\nconst busesProps:ObjViewProps<DevModel.Bus> = {\r\n    title: 'BUS',\r\n    formRows: [\r\n        {\r\n            label: '名称', \r\n            field: {name: 'name', type: 'string', maxLength: 100, required: true},\r\n        },\r\n        {\r\n            label: '描述',\r\n            field: {name: 'discription', type: 'string', maxLength: 250},\r\n            face: {type: 'textarea'}\r\n        },\r\n        {\r\n            label: 'Schema',\r\n            field: {name: 'schema', type: 'string', maxLength: 2500},\r\n            face: {type: 'textarea', rows: 8}\r\n        },\r\n    ],\r\n    row: (item:DevModel.Bus):JSX.Element => {\r\n        let {owner, name, discription} = item;\r\n        return <Row icon={appItemIcon} main={owner + ' / ' + name} vice={discription} />;\r\n    },\r\n    items: ()=>store.dev.buses,\r\n    repeated: {\r\n        name: 'name',\r\n        err: '跟已有的名称重复',\r\n    },\r\n    info: Info,\r\n};\r\n\r\nexport default busesProps;\r\n","import * as React from 'react';\r\nimport {EasyDate, Media, Prop, PropGrid} from 'tonva-react-form';\r\nimport {UnitSpan, IdDates} from '../tools';\r\nimport {Row} from './row';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {DevModel} from '../model';\r\nimport {store} from '../store';\r\nimport {ObjViewProps} from './ObjViewProps';\r\n\r\nclass Info extends React.Component<DevModel.Server> {\r\n    render() {\r\n        let {discription, cloud, ip, unit, date_init, date_update} = this.props;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={discription} discription={ip} />},\r\n            '',\r\n            {type: 'component', label: '开发号', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            {type: 'string', label: '云服务', name: 'cloud'},\r\n        ];\r\n        return <div>\r\n            <PropGrid rows={rows} values={this.props} />\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst serversProps:ObjViewProps<DevModel.Server> = {\r\n    title: 'Server',\r\n    info: Info,\r\n    formRows: [\r\n        {\r\n            label: '描述', \r\n            field: {name: 'discription', type: 'string', maxLength: 50, required: true},\r\n        },\r\n        {\r\n            label: '云服务商', \r\n            field: {name: 'cloud', type: 'string', maxLength: 20, required: true},\r\n        },\r\n        {\r\n            label: 'IP地址', \r\n            field: {name: 'ip', type: 'string', maxLength: 20},\r\n        },\r\n    ],\r\n    row: (item: DevModel.Server):JSX.Element => {\r\n        return <Row icon={appItemIcon} main={item.discription} vice={<>{item.cloud}  {item.ip}</>} />;\r\n    },\r\n    items: ()=>store.dev.servers,\r\n    repeated: {\r\n        name: 'discription',\r\n        err: '重复的描述',\r\n    }\r\n};\r\n\r\nexport default serversProps;\r\n","import * as React from 'react';\r\nimport {Step, Field, Prop, PropGrid, Media} from 'tonva-react-form';\r\nimport {UnitSpan, IdDates, ServerSpan, UqSpan, AppSpan} from '../tools';\r\nimport {Row} from './row';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {DevModel} from '../model';\r\nimport {store} from '../store';\r\nimport {ObjViewProps} from './ObjViewProps';\r\nimport {createIdPick, IdPickProps} from '../createIdPick';\r\n\r\nclass Info extends React.Component<DevModel.Service> {\r\n    render() {\r\n        let {url, type, discription, server, app, uq, unit, date_init, date_update} = this.props;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let obj:Prop;\r\n        if (app !== undefined)\r\n            obj = {type: 'component', label: 'APP', component: <div className=\"py-2\"><AppSpan id={app} isLink={true} /></div> };\r\n        else\r\n            obj = {type: 'component', label: 'UQ', component: <div className=\"py-2\"><UqSpan id={uq} isLink={true} /></div> };\r\n\r\n        let rows:Prop[] = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={discription} discription={url} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            {type: 'component', label: '服务器', component: <div className=\"py-2\"><ServerSpan id={server} isLink={true} /></div> },\r\n            obj,\r\n        ];\r\n        return <div>\r\n            <PropGrid rows={rows} values={this.props} />\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst idPickServerProps: IdPickProps = {\r\n    caption: '选择服务器',\r\n    searchPlaceHolder: '搜索服务器',\r\n    candidateItems: async (params:any, key:string) => {\r\n        await store.dev.searchServer.first(key);\r\n        return store.dev.searchServer.items;\r\n    },\r\n    moreCandidates: async () => {\r\n        await store.dev.searchServer.more();\r\n    },\r\n    row: (item:DevModel.Server, index:number) => {\r\n        return <div className=\"px-3 py-2\">{item.discription + ' ' + item.cloud + ' ' + item.ip}</div>;\r\n    },\r\n};\r\n\r\nconst idPickAppProps: IdPickProps = {\r\n    caption: '选择APP',\r\n    searchPlaceHolder: '搜索APP',\r\n    candidateItems: async (params:any, key:string) => {\r\n        await store.dev.searchApp.first(key);\r\n        return store.dev.searchApp.items;\r\n    },\r\n    moreCandidates: async () => {\r\n        await store.dev.searchApp.more();\r\n    },\r\n    row: (item:DevModel.App, index:number) => {\r\n        return <div>{item.name + ' ' + item.discription}</div>;\r\n    },\r\n};\r\n\r\nconst idPickUqProps: IdPickProps = {\r\n    caption: '选择UQ',\r\n    searchPlaceHolder: '搜索UQ',\r\n    candidateItems: async (params:any, key:string) => {\r\n        await store.dev.searchUq.first(key);\r\n        return store.dev.searchUq.items;\r\n    },\r\n    moreCandidates: async () => {\r\n        await store.dev.searchUq.more();\r\n    },\r\n    row: (item:DevModel.UQ, index:number) => {\r\n        return <div>{item.name + ' ' + item.discription}</div>;\r\n    },\r\n};\r\n\r\nconst serviceTypeNames = ['中心', '交换', 'APP', 'UQ'];\r\nconst urlField:Field = {name: 'url', type: 'string', required:true, maxLength:200};\r\nconst discriptionField:Field = {name: 'discription', type: 'string', maxLength:100};\r\nconst serverField:Field = {name: 'server', type: 'id'};\r\nconst bindTypeField:Field = {name: 'type', type: 'number'};\r\nconst bindIdField:Field = {name: 'bindId', type: 'number'};\r\nconst authField:Field = {name: 'auth', type: 'string', maxLength:200};\r\n\r\nconst urlRow = {\r\n    label: 'URL',\r\n    field: urlField,\r\n};\r\nconst discriptionRow = {\r\n    label: '描述',\r\n    field: discriptionField,\r\n};\r\n\r\nconst serverRow = {\r\n    label: '服务器', \r\n    field: serverField,\r\n    face: {\r\n        type: 'pick-id', \r\n        initCaption: '请选择服务器', \r\n        pick: createIdPick(idPickServerProps), //this.idPick,\r\n        fromPicked: (item:DevModel.Server)=>{\r\n            return {\r\n                id: item.id, \r\n                caption: item.discription + ' ' + item.ip,\r\n            };\r\n        },\r\n        itemFromId: (id:number)=>store.cacheServers.get(id),\r\n    },\r\n};\r\n\r\nconst servicesProps:ObjViewProps<DevModel.Service> = {\r\n    title: 'Service',\r\n    info: Info,\r\n    formRows: [\r\n        urlRow,\r\n        discriptionRow,\r\n        serverRow,\r\n    ],\r\n    steps: {\r\n        step1: {\r\n            formRows: [\r\n                {\r\n                    label: '服务类型', \r\n                    field: bindTypeField,\r\n                    face: {\r\n                        type: 'select', \r\n                        list: [\r\n                            {text:'APP', value:2}, \r\n                            {text:'UQ', value:3}\r\n                        ]\r\n                    }\r\n                },\r\n            ],\r\n            next: (values:any) => {\r\n                switch (values['type']) {\r\n                    case 2: return 'appStep';\r\n                    case 3: return 'uqStep';\r\n                }\r\n            },\r\n            ex: '服务类型',\r\n        },\r\n        appStep: {\r\n            formRows: [\r\n                urlRow,\r\n                discriptionRow,\r\n                serverRow,\r\n                {\r\n                    label: 'APP', \r\n                    field: bindIdField,\r\n                    face:{\r\n                        type: 'pick-id', \r\n                        initCaption: '请选择APP', \r\n                        pick: createIdPick(idPickAppProps), //this.idPick,\r\n                        fromPickedItem: (item:DevModel.App)=>{\r\n                            return {id: item.id, caption: item.name + ' ' + item.discription}\r\n                        },\r\n                    },\r\n                },\r\n            ],\r\n            next: undefined,\r\n            ex: '绑定APP'\r\n        },\r\n        uqStep: {\r\n            formRows: [\r\n                urlRow,\r\n                discriptionRow,\r\n                serverRow,\r\n                {\r\n                    label: 'UQ', \r\n                    field: bindIdField,\r\n                    face:{\r\n                        type: 'pick-id', \r\n                        initCaption: '请选择UQ', \r\n                        pick: createIdPick(idPickUqProps), //this.idPick,\r\n                        fromPickedItem: (item:DevModel.UQ)=>{\r\n                            return {id: item.id, caption: item.name + ' ' + item.discription}\r\n                        },\r\n                    },\r\n                },                \r\n                { label: 'Auth', field: authField },\r\n            ],\r\n            next: undefined,\r\n            ex: '绑定UQ',\r\n        },\r\n    },\r\n    stepHeader: (step:Step, num:number):JSX.Element => {\r\n        return <div className=\"d-flex justify-content-center align-items-center\">\r\n            <h4><small className=\"text-muted\">第{num}步</small> {step.ex}</h4>\r\n        </div>;\r\n    },\r\n    row: (item:DevModel.Service):JSX.Element => {\r\n        return <Row\r\n            icon={appItemIcon}\r\n            main={item.url}\r\n            vice={serviceTypeNames[item.type] + ': ' + item.discription} />;\r\n    },\r\n    items: ()=>store.dev.services,\r\n    repeated: {\r\n        name: 'url',\r\n        err: 'url重复',\r\n    }\r\n};\r\n\r\nexport default servicesProps;\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {FormRow, TonvaForm, Step, MultiStep, DropdownActions, Action, List, FA, SubmitResult} from 'tonva-react-form';\r\nimport {DevModel} from '../model';\r\nimport { ObjViewProps } from './ObjViewProps';\r\n\r\n@observer\r\nexport class ObjView<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    async componentDidMount() {\r\n        await this.props.items().load();\r\n    }\r\n    //converter(item:T):ListItem {\r\n    //    return this.props.converter(item);\r\n    //}\r\n    newItem() {\r\n        this.props.items().cur = undefined;\r\n        nav.push(<New {...this.props} />);\r\n    }\r\n    itemClick = (item:T) => {\r\n        this.props.items().cur = observable(item);\r\n        nav.push(<Info {...this.props} />);\r\n    }\r\n    render() {\r\n        let {title, items} = this.props;\r\n        let right = <button className='btn btn-secondary btn-sm' onClick={()=>this.newItem()}><FA name=\"plus\" /></button>;\r\n        return <Page header={title} right={right}>\r\n            <List items={items().items}\r\n                item={{render: this.props.row, onClick: this.itemClick}}\r\n                // converter={this.props.converter} \r\n                //itemClick={this.itemClick} \r\n                />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass New<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    async onSubmit(values:any):Promise<SubmitResult> {\r\n        let ret = await this.props.items().saveCur(values);\r\n        if (ret === true) {\r\n            nav.pop();\r\n        }\r\n        else {\r\n            let repeated = this.props.repeated;\r\n            //this.formView.setError(repeated.name, repeated.err);\r\n        }\r\n        return;\r\n    }\r\n    render() {\r\n        let content;\r\n        let {title, steps, stepHeader} = this.props;\r\n        let {formRows, items} = this.props;\r\n        if (steps !== undefined) {\r\n            content = <MultiStep className=\"mt-4\" header={stepHeader} steps={steps} first=\"step1\" onSubmit={this.onSubmit} />;\r\n        }\r\n        else if (formRows !== undefined) {\r\n            content = <TonvaForm \r\n                className=\"m-3\"\r\n                formRows={formRows} \r\n                onSubmit={this.onSubmit} initValues={items().cur} />;\r\n        }\r\n        else {\r\n            content = \"ObjViewProps: no steps and no formRows\";\r\n        }\r\n        return <Page header={'新增'+title}>\r\n            {content}\r\n        </Page>\r\n    }\r\n}\r\n\r\n@observer\r\nclass Info<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    private menuItems = [\r\n        {caption:'修改' + this.props.title, action:this.editItem.bind(this), icon:'edit' },\r\n        {caption:'删除', action:this.deleteItem.bind(this), icon:'trash-o' }\r\n    ];\r\n    async deleteItem() {\r\n        if (confirm('真的要删除吗？系统删除时并不会检查相关引用，请谨慎') === true) {\r\n            await this.props.items().del();\r\n            nav.pop();\r\n        }\r\n    }\r\n    editItem() {\r\n        nav.push(<Edit {...this.props} />);\r\n    }\r\n    render() {\r\n        let actions = [];\r\n        let ex = this.props.extraMenuActions;\r\n        if (ex !== undefined) actions.push(...ex);\r\n        actions.push(...this.menuItems);        \r\n        let right = <DropdownActions actions={actions} />\r\n        let item = this.props.items().cur;\r\n        return <Page header={this.props.title + ' - 详细资料'} right={right}>\r\n            <this.props.info {...item} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass Edit<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    private actions = [\r\n        {caption:'删除', action:this.deleteItem.bind(this), icon:'trash-o' }\r\n    ];\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    componentWillMount() {\r\n    }\r\n    async onSubmit(values:any):Promise<SubmitResult> {\r\n        await this.props.items().saveCur(values);\r\n        nav.pop();\r\n        return;\r\n    }\r\n    async deleteItem() {\r\n        if (confirm('真的要删除吗？系统删除时并不会检查相关引用，请谨慎') === true) {\r\n            await this.props.items().del();\r\n            nav.pop();\r\n        }\r\n    }\r\n    render() {\r\n        let right = <DropdownActions actions={this.actions} />\r\n        return <Page header={'修改 '+this.props.title} right={right} back=\"close\">\r\n            <TonvaForm \r\n                className=\"m-3\"\r\n                formRows={this.props.formRows} \r\n                onSubmit={this.onSubmit} initValues={this.props.items().cur} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { List, SearchBox, LMR, FA } from 'tonva-react-form';\r\nimport { UsersController, UserApps, AppUsers } from './cUsers';\r\n\r\nexport class VApps extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private renderRow = (appUsers: AppUsers, index:number):JSX.Element => {\r\n        let {app, users} = appUsers;\r\n        let {id, name, discription} = app;\r\n        let right = <small className=\"text-muted\">{discription}</small>;\r\n        return <div className=\"d-block px-3 py-2\">\r\n            <LMR className=\"mb-2\" right={right}>\r\n                <FA name=\"address-card-o\" className=\"text-primary mr-3\" />\r\n                <b>{name}</b>\r\n            </LMR>\r\n            <div>\r\n                <small className=\"text-muted\">用户: </small>\r\n                {users.length===0?'[无]':users.map(u => u.assigned || u.nick || u.name).join(', ')}\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {appUsersList, searchApp, onAppsClick} = this.controller;\r\n        let searchBox = <SearchBox className=\"w-100 pr-1\" \r\n            onSearch={searchApp} \r\n            placeholder=\"搜索App\" \r\n            allowEmptySearch={true} />;\r\n        return <Page header={searchBox}>\r\n            <List items={appUsersList} \r\n                item={{render: this.renderRow, onClick:onAppsClick,  key: (item=>item.app.id)}} />\r\n        </Page>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { List, SearchBox, LMR, FA } from 'tonva-react-form';\r\nimport { UsersController, UserApps } from './cUsers';\r\n\r\nexport class VUsers extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private renderRow = (userApps: UserApps, index:number):JSX.Element => {\r\n        let {user, apps} = userApps;\r\n        let {id, name, nick, icon, assigned} = user;\r\n        return <div className=\"d-block px-3 py-2\">\r\n            <div className=\"mb-2\">\r\n                <FA name=\"user-o\" className=\"text-primary mr-3\" />\r\n                <b>{assigned || nick || name}</b>\r\n            </div>\r\n            <div>\r\n                <small className=\"text-muted\">App: </small>\r\n                {apps.length===0?'[无]':apps.map(a => a.name).join(', ')}\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {userAppsList, searchUser, onUsersClick} = this.controller;\r\n        let searchBox = <SearchBox className=\"w-100 pr-1\" \r\n            onSearch={searchUser} \r\n            placeholder=\"搜索用户\" \r\n            allowEmptySearch={true} />;\r\n        return <Page header={searchBox}>\r\n            <List items={userAppsList} \r\n                item={{render: this.renderRow, onClick:onUsersClick, key: (item=>item.user.id)}} />\r\n        </Page>;\r\n    });\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { List, SearchBox, LMR, Muted } from 'tonva-react-form';\r\nimport { UsersController, UserApps, AppUsers, User } from './cUsers';\r\n\r\nexport class VApp extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curApp, curAppUsers, onAppEditUsers} = this.controller;\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={()=>onAppEditUsers()}>增减用户</button>;\r\n        return <Page header={'App - ' + (curApp.name)} right={right}>\r\n            <List items={curAppUsers} item={{render:this.renderApp}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderApp = (user: User, index:number):JSX.Element => {\r\n        let {name, nick, assigned} = user;\r\n        let content:any;\r\n        if (assigned)\r\n            content = <span>{assigned} &nbsp; <small className=\"text-muted\">{name}</small></span>;\r\n        else if (nick)\r\n            content = <span>{nick} &nbsp; <small className=\"text-muted\">{name}</small></span>;\r\n        else\r\n            content = <>{name}</>\r\n        return <div className=\"px-3 py-2\">{content}</div>\r\n    }\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { List, SearchBox, LMR } from 'tonva-react-form';\r\nimport { UsersController, UserApps, AppUsers, App } from './cUsers';\r\n\r\nexport class VUser extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curUser, curUserApps, onUserEditApps} = this.controller;\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={()=>onUserEditApps()}>增减App</button>;\r\n        return <Page header={'用户 - ' + (curUser.assigned || curUser.nick || curUser.name)}\r\n            right={right}>\r\n            <List items={curUserApps} item={{render:this.renderApp}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderApp = (app: App, index:number):JSX.Element => {\r\n        let {name, discription} = app;\r\n        return <div className=\"px-3 py-2\">{name} {discription}</div>\r\n    }\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { List, SearchBox, LMR, Muted, FA } from 'tonva-react-form';\r\nimport { UsersController, UserApps, AppUsers, User, EditUser } from './cUsers';\r\n\r\nexport class VAppEditUsers extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curApp, appEditUsers, onAppEditUsers} = this.controller;\r\n        return <Page header={curApp.name + ' - 增减用户'} >\r\n            <List items={appEditUsers} item={{render:this.renderUser}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderUser = (editUser: EditUser, index:number):JSX.Element => {\r\n        let {name, nick, assigned, bind} = editUser;\r\n        let content:any;\r\n        if (assigned)\r\n            content = <>{assigned} <Muted>{name}</Muted></>;\r\n        else if (nick)\r\n            content = <>{nick} <Muted>{name}</Muted></>;\r\n        else\r\n            content = <>{name}</>\r\n        let right = <input type=\"checkbox\" defaultChecked={bind===1} \r\n            onChange={(evt)=>this.onUserChanged(editUser, evt.target.checked)} />;\r\n        return <LMR className=\"px-3 py-2 align-items-center\" right={right}>\r\n            {content}\r\n        </LMR>\r\n    }\r\n\r\n    private onUserChanged = async (editUser: EditUser, checked:boolean) => {\r\n        await this.controller.bindAppUser(editUser, checked);\r\n        editUser.bind = checked===true? 1: 0;\r\n    }\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { List, SearchBox, LMR } from 'tonva-react-form';\r\nimport { UsersController, UserApps, AppUsers, App, EditApp } from './cUsers';\r\n\r\nexport class VUserEditApps extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curUser, userEditApps, onUserEditApps} = this.controller;\r\n        return <Page header={'增减App - ' + (curUser.assigned || curUser.nick || curUser.name)}>\r\n            <List items={userEditApps} item={{render:this.renderApp}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderApp = (editApp: EditApp, index:number):JSX.Element => {\r\n        let {name, discription, bind} = editApp;\r\n        let right = <input type=\"checkbox\" defaultChecked={bind===1} \r\n            onChange={(evt)=>this.onAppChanged(editApp, evt.target.checked)} />;\r\n        return <LMR className=\"px-3 py-2\" right={right}>\r\n            {name} {discription}\r\n        </LMR>\r\n    }\r\n\r\n    private onAppChanged = async (editApp: EditApp, checked:boolean) => {\r\n        await this.controller.bindUserApp(editApp, checked);\r\n        editApp.bind = checked===true? 1: 0;\r\n    }\r\n}","import * as React from 'react';\r\nimport { VPage, Page, Image, nav } from \"tonva-tools\";\r\nimport { UsersController, User } from \"./cUsers\";\r\nimport { SearchBox } from 'tonva-react-form';\r\nimport { mainApi } from 'api';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class VAddUser extends VPage<UsersController> {\r\n    @observable private user: User = null;\r\n    //@observable private addedUser: User;\r\n    private searchBox: SearchBox;\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(():JSX.Element => {\r\n        let searchBox = <SearchBox ref={v=>this.searchBox=v}\r\n            className=\"w-100\"\r\n            onSearch={this.onSearch}\r\n            onFocus={this.onSearchFocus}\r\n            placeholder=\"用户全名/手机号/邮箱\"\r\n             />;\r\n        let content:any;\r\n        if (this.user === null) {\r\n        }\r\n        else if (this.user === undefined) {\r\n            content = <div className=\"text-info p-3\">没有找到用户</div>;\r\n        }\r\n        else {\r\n            let {name, nick, icon} = this.user;\r\n            let divUser:any;\r\n            if (nick) {\r\n                divUser = <><div><b>{nick}</b></div><div>{name}</div></>;\r\n            }\r\n            else {\r\n                divUser = <div><b>{name}</b></div>;\r\n            }\r\n            content = <div>\r\n                <div className=\"m-3 p-3 d-flex bg-white\">\r\n                    <Image src={icon} />\r\n                    <div className=\"ml-3\">{divUser}</div>\r\n                </div>\r\n                <div className=\"d-flex justify-content-center\">\r\n                    <button className=\"btn btn-success text-center\" onClick={this.onAddUser}>增加用户</button>\r\n                </div>\r\n            </div>;\r\n        }\r\n        /*\r\n        let divUserAdded:any;\r\n        if (this.addedUser) {\r\n            divUserAdded = <div className=\"p-3\">\r\n                <div>\r\n                    新增用户: {this.addedUser.name} &nbsp; &nbsp; \r\n                    <button className=\"btn btn-success\" \r\n                        onClick={()=>this.controller.onUserEditApps()}>\r\n                        为用户添加App\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        }\r\n        */\r\n        return <Page header={searchBox}>\r\n            {content}\r\n        </Page>;\r\n    })\r\n    //{divUserAdded}\r\n\r\n    private onSearch = async (key:string) => {\r\n        this.user = await mainApi.userFromKey(key);\r\n    }\r\n\r\n    private onAddUser = async () => {\r\n        await this.controller.addUser(this.user.id);\r\n        this.controller.curUser = this.user;\r\n        this.user = null;\r\n        this.searchBox.clear();\r\n        this.replacePage(this.addedPage);\r\n    }\r\n\r\n    private onSearchFocus = () => {\r\n        this.user = null;\r\n        //this.addedUser = null;\r\n        if (this.searchBox) this.searchBox.clear();\r\n    }\r\n\r\n    private onAddApps = () => {\r\n        this.closePage();\r\n        this.controller.onUserEditApps();\r\n    }\r\n\r\n    private onContinueAddUser = () => {\r\n        this.closePage();\r\n        this.controller.onAddUser();\r\n    }\r\n\r\n    private addedPage = () => {\r\n        return <Page header=\"添加成功\">\r\n            <div className=\"p-3 text-center\">\r\n                <div>\r\n                    新增用户: {this.controller.curUser.name}\r\n                </div>\r\n                <div className=\"mt-3\">\r\n                    <button className=\"btn btn-success mr-3\" \r\n                        onClick={this.onAddApps}>\r\n                        为用户添加App\r\n                    </button>\r\n                    <button className=\"btn btn-outline-primary\"\r\n                        onClick={this.onContinueAddUser}>\r\n                        继续添加新用户\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { Controller, VPage, Page } from \"tonva-tools\";\r\nimport { mainApi } from 'api';\r\nimport { LMR, FA } from 'tonva-react-form';\r\nimport { VApps } from './vApps';\r\nimport { VUsers } from './vUsers';\r\nimport { VApp } from './vApp';\r\nimport { VUser } from './vUser';\r\nimport { VAppEditUsers } from './vAppEditUsers';\r\nimport { VUserEditApps } from './vUserEditApps';\r\nimport { VAddUser } from './VAddUser';\r\nimport { Unit } from 'model';\r\n\r\nexport interface User {\r\n    id: number;\r\n    name: string;\r\n    nick: string;\r\n    icon: string;\r\n    assigned: string;\r\n}\r\nexport interface App {\r\n    id: number;\r\n    name: string;\r\n    discription: string;\r\n}\r\nexport interface UserApps {\r\n    user: User;\r\n    apps: App[];\r\n}\r\nexport interface AppUsers {\r\n    app: App;\r\n    users: User[];\r\n}\r\nexport interface EditApp extends App {\r\n    bind: number;   // 0: not bind, 1: bind\r\n}\r\nexport interface EditUser extends User {\r\n    bind: number;  // 0: not bind, 1: bind\r\n}\r\n\r\nexport class UsersController extends Controller {\r\n    private unit: Unit;\r\n    @observable userAppsList: UserApps[];\r\n    @observable appUsersList: AppUsers[];\r\n    curUser: User;\r\n    @observable curUserApps: App[];\r\n    @observable userEditApps: EditApp[];\r\n    curApp: App;\r\n    @observable curAppUsers: User[];\r\n    @observable appEditUsers: EditUser[];\r\n\r\n    protected async internalStart(unit:Unit) {\r\n        this.unit = unit;\r\n        let cn = \"bg-white px-3 py-2 my-1\";\r\n        let appIcon = <FA name=\"columns\" className=\"text-primary mr-3\" />;\r\n        let userIcon = <FA name=\"user-plus\" className=\"text-primary mr-3\" />;\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={this.onAddUser}><FA name=\"plus\" /></button>;\r\n        this.openPage(<Page header={'用户管理 - ' +  this.unit.name} right={right}>\r\n            <LMR className={cn} onClick={this.onAppUsers} left={appIcon}>App</LMR>\r\n            <LMR className={cn} onClick={this.onUserApps} left={userIcon}>用户</LMR>\r\n        </Page>);\r\n    }\r\n\r\n    private onAppUsers = async () => {\r\n        await this.loadAppUsers(undefined);\r\n        this.openVPage(VApps);\r\n    }\r\n\r\n    private onUserApps = async () => {\r\n        await this.loadUserApps(undefined);\r\n        this.openVPage(VUsers);\r\n    }\r\n\r\n    private async loadAppUsers(key:string) {\r\n        let list:AppUsers[] = [];\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        let ret = await mainApi.unitAppUsers(this.unit.id, key, pageStart, pageSize);\r\n        let apps = ret[0];\r\n        let users = ret[1];\r\n        let coll: {[id:number]:AppUsers} = {}\r\n        for (let a of apps) {\r\n            let app:App = {\r\n                id: a.id,\r\n                name: a.name,\r\n                discription: a.discription,\r\n            };\r\n            list.push(coll[a.id] = {app:app, users:[]});\r\n        }\r\n        for (let u of users) {\r\n            let user:User = {\r\n                id: u.user,\r\n                name: u.name,\r\n                nick: u.nick,\r\n                icon: u.icon,\r\n                assigned: u.assigned\r\n            }\r\n            coll[u.app].users.push(user);\r\n        }\r\n        this.appUsersList = list;\r\n    }\r\n\r\n    private async loadUserApps(key:string) {\r\n        let list:UserApps[] = [];\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        let ret = await mainApi.unitUsers(this.unit.id, key, pageStart, pageSize);\r\n        let users = ret[0];\r\n        let apps = ret[1];\r\n        let coll: {[id:number]:UserApps} = {}\r\n        for (let u of users) {\r\n            let user:User = {\r\n                id: u.id,\r\n                name: u.name,\r\n                nick: u.nick,\r\n                icon: u.icon,\r\n                assigned: u.assigned\r\n            };\r\n            list.push(coll[u.id] = {user:user, apps:[]});\r\n        }\r\n        for (let a of apps) {\r\n            let app:App = {\r\n                id: a.app,\r\n                name: a.name,\r\n                discription: a.discription,\r\n            }\r\n            coll[a.user].apps.push(app);\r\n        }\r\n        this.userAppsList = list;\r\n    }\r\n\r\n    searchUser = async(key:string) => {\r\n        await this.loadUserApps(key);\r\n    }\r\n\r\n    searchApp = async(key:string) => {\r\n        await this.loadAppUsers(key);\r\n    }\r\n\r\n    onAppsClick = async (appUsers: AppUsers) => {\r\n        this.curApp = appUsers.app;\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.curAppUsers = await mainApi.unitOneAppUsers(this.unit.id, this.curApp.id, pageStart, pageSize);\r\n        this.openVPage(VApp);\r\n    }\r\n\r\n    onUsersClick = async (userApps: UserApps) => {\r\n        this.curUser = userApps.user;\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.curUserApps = await mainApi.unitOneUserApps(this.unit.id, this.curUser.id, pageStart, pageSize);\r\n        this.openVPage(VUser);\r\n    }\r\n\r\n    onAppEditUsers = async (key?:string) => {\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.appEditUsers = await mainApi.unitAppEditUsers(this.unit.id, this.curApp.id, key, pageStart, pageSize);\r\n        this.openVPage(VAppEditUsers);\r\n    }\r\n\r\n    onAddUser = () => {\r\n        this.openVPage(VAddUser);\r\n    }\r\n\r\n    onUserEditApps = async (key?:string) => {\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.userEditApps = await mainApi.unitUserEditApps(this.unit.id, this.curUser.id, key, pageStart, pageSize);\r\n        this.openVPage(VUserEditApps);\r\n    }\r\n\r\n    bindAppUser = async(user:User, checked:boolean) => {\r\n        await mainApi.bindAppUser(this.unit.id, this.curApp.id, user.id, checked===true? 1:0);\r\n        let appUsers = this.appUsersList.find(v => v.app.id === this.curApp.id);\r\n        if (checked === true) {\r\n            this.curAppUsers.push(user);\r\n            if (appUsers) appUsers.users.push(user);\r\n        }\r\n        else {\r\n            let index = this.curAppUsers.findIndex(v => v.id === user.id);\r\n            if (index>=0) this.curAppUsers.splice(index, 1);\r\n            if (appUsers) {\r\n                index = appUsers.users.findIndex(v => v.id === user.id);\r\n                if (index>=0) appUsers.users.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    bindUserApp = async(app:App, checked:boolean) => {\r\n        await mainApi.bindAppUser(this.unit.id, app.id, this.curUser.id, checked===true? 1:0);\r\n        if (this.userAppsList === undefined) return;\r\n        let userApps = this.userAppsList.find(v => v.user.id === this.curUser.id);\r\n        if (checked === true) {\r\n            this.curUserApps.push(app);\r\n            if (userApps) userApps.apps.push(app);\r\n        }\r\n        else {\r\n            let index = this.curUserApps.findIndex(v => v.id === app.id);\r\n            if (index>=0) this.curUserApps.splice(index, 1);\r\n            if (userApps) {\r\n                index = userApps.apps.findIndex(v => v.id === app.id);\r\n                if (index>=0) userApps.apps.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    addUser = async (userId: number) => {\r\n        await mainApi.unitAddUser(this.unit.id, userId);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page, meInFrame, Controller, VPage} from  'tonva-tools'; \r\nimport {List, LMR, FA, StackedFA, PropGrid, Prop, Muted} from 'tonva-react-form';\r\nimport {StringValueEdit} from './tools';\r\nimport {appIcon, appItemIcon} from './consts';\r\nimport {Unit, UnitApps, UnitAdmin, DevModel} from './model';\r\nimport {store} from './store';\r\nimport Administors from './Administors';\r\n//import DevActions from './Dev';\r\nimport AppsPage from './Apps';\r\nimport {Members} from './Members';\r\nimport { mainApi } from 'api';\r\nimport { COrganization } from 'organization';\r\nimport {\r\n    ObjViewProps, ObjView,\r\n    //appsProps, \r\n    busesProps, \r\n    serversProps, /*uqdbsProps, */servicesProps, UQController} from './Dev';\r\nimport { AppController } from './Dev';\r\nimport { UsersController } from 'Users';\r\n\r\nexport class CAdmin extends Controller {\r\n    isProduction: boolean;\r\n    adminUnits: UnitAdmin[]; // 仅仅为Admins调试用。从登录用户获取units\r\n\r\n    private async loadAdminUnits(): Promise<void> {\r\n        let ret = await mainApi.userAdminUnits();\r\n        let adminUnits = this.adminUnits = ret[0];\r\n        if (adminUnits.length === 1) {\r\n            meInFrame.unit = adminUnits[0].id;\r\n            await store.loadUnit();\r\n        }\r\n    }\r\n    protected async internalStart(param?:any):Promise<void> {\r\n        store.init();\r\n        \r\n        this.isProduction = document.location.hash.startsWith('#tv');\r\n        console.log('admins isProduction %s', this.isProduction);\r\n\r\n        if (this.isProduction === false) {\r\n            await this.loadAdminUnits();\r\n            this.openVPage(VAdmin);\r\n            return;\r\n        }\r\n        await store.loadUnit();\r\n        this.openVPage(VAdmin);\r\n    /*\r\n        let user = nav.user;\r\n        if (user === undefined) {\r\n            console.log('autorun: user has logged out');\r\n            return;\r\n        }\r\n    \r\n        console.log('autorun login');\r\n        */\r\n       /*\r\n        setTimeout(async () => {\r\n            // 等待 tonva-tools 里面的initSubWin的nav.user的赋值\r\n            // 这个地方实际上有问题的，不应该这么写。程序逻辑顺序逻辑错误。\r\n            // 2018-11-5: 临时凑合用延时的方式来解决。\r\n            await store.loadUnit();\r\n            this.showVPage(VAdmin);\r\n        }, 200);\r\n        */\r\n    }\r\n}\r\n\r\nexport class VAdmin extends VPage<CAdmin> {\r\n    async open() {\r\n        let {isProduction, adminUnits} = this.controller;\r\n        if (isProduction === false) {\r\n            switch (adminUnits.length) {\r\n                default: this.openPage(this.selectUnitPage); return;\r\n                case 0: this.openPage(this.noUnitPage); return;\r\n                case 1: this.openPageElement(<AdminPage />); return;\r\n            }\r\n        }\r\n\r\n        if (store.unit === undefined) {\r\n            this.openPage(this.noUnitPage);\r\n            return;\r\n        }\r\n        this.openPageElement(<AdminPage />);\r\n    }\r\n\r\n    private selectUnitPage = () => {\r\n        return <Page header=\"选择小号\" logout={logout}>\r\n            <List items={this.controller.adminUnits} item={{render: this.renderRow, onClick: this.onRowClick}}/>\r\n        </Page>;\r\n    }\r\n\r\n    private noUnitPage = () => {\r\n        let {nick, name} = nav.user;\r\n        return <Page header=\"没有小号\" logout={logout}>\r\n            <div className=\"p-3 small text-info\">\r\n                {nick || name}: 没有需要管理的小号\r\n            </div>\r\n        </Page>\r\n    }\r\n\r\n    protected get view() {return undefined}\r\n\r\n    renderRow = (item: UnitAdmin, index: number):JSX.Element => {\r\n        return <LMR className=\"p-2\" right={'id: ' + item.id}>\r\n            <div>{item.nick || item.name}</div>\r\n        </LMR>;\r\n    }\r\n    onRowClick = async (item: UnitAdmin) => {\r\n        meInFrame.unit = item.id; // 25;\r\n        await store.loadUnit();\r\n        this.closePage();\r\n        this.openPageElement(<AdminPage />);\r\n    }\r\n}\r\n\r\nconst logout = () => {\r\n    store.logout();\r\n}\r\n\r\ninterface ActionItem {\r\n    main: string | JSX.Element;\r\n    right?: string | JSX.Element;\r\n    icon: string|JSX.Element;\r\n    page?: new (props:any) => React.Component;\r\n    //onClick: () => nav.push(<Administors />),\r\n    controller?: Controller;\r\n}\r\n\r\ninterface DevItem<T extends DevModel.ObjBase> {\r\n    title: string;\r\n    count: number;\r\n    icon: string;\r\n    objProps?: ObjViewProps<T>;\r\n    onClick?: ()=>void;\r\n}\r\n\r\ntype Item = ActionItem|DevItem<DevModel.ObjBase>|string;\r\n\r\nconst rArrow = <FA name=\"chevron-right\" />;\r\nconst typeCaptions = {\r\n    1: '开发号',\r\n    2: '小号',\r\n    3: '系统号'\r\n}\r\n@observer\r\ndefault class AdminPage extends React.Component {\r\n    private caption:string;\r\n\r\n    async componentWillMount() {\r\n        let {unit, dev} = store;\r\n        let {isAdmin, isOwner, type} = unit;\r\n        this.caption = typeCaptions[type];\r\n        /*\r\n        switch (type) {\r\n            case 1: this.caption = '开发号'; break;\r\n            case 2: this.caption = '小号'; break;\r\n            case 3: this.caption = '系统号'; break;\r\n        }*/\r\n        if ((type & 1) !== 0) {\r\n            await store.dev.loadCounts();\r\n        }\r\n    }\r\n\r\n    private appsAction:ActionItem = {\r\n        main: '启停App',\r\n        right: rArrow, //'增减',\r\n        icon: 'play-circle-o',\r\n        page: AppsPage,\r\n    };\r\n    private usersAction:ActionItem = {\r\n        main: '用户角色',\r\n        right: rArrow,\r\n        icon: 'users',\r\n        page: Members,\r\n    };\r\n    private newUsersAction:ActionItem = {\r\n        main: '用户管理',\r\n        right: rArrow,\r\n        icon: 'user-o',\r\n        controller: new UsersController(undefined),\r\n    };\r\n    /*\r\n    private devAction:Item = {\r\n        main: <DevActions />,\r\n        right: '程序开发相关管理',\r\n        icon: 'laptop',\r\n        //page: Dev,\r\n    };*/\r\n    private adminsAction:ActionItem = {\r\n        main: '管理员',\r\n        right: rArrow,\r\n        icon: 'universal-access',\r\n        page: Administors,\r\n    };\r\n\r\n    private cOrganization = new COrganization;\r\n    private organizeAction:ActionItem = {\r\n        main: this.cOrganization.label,\r\n        right: rArrow,\r\n        icon: this.cOrganization.icon,\r\n        controller: this.cOrganization\r\n    };\r\n\r\n    private noneAction:ActionItem = {\r\n        main: '请耐心等待分配任务',\r\n        icon: 'hourglass-start',\r\n    };\r\n\r\n    private buildItems():Item[] {\r\n        let {unit, dev} = store;\r\n        let {isAdmin, isOwner, type} = unit;\r\n        let items:Item[] = [];\r\n        if (isOwner === 1) {\r\n            items.push(this.adminsAction);\r\n        }\r\n        console.log('unit:', unit);\r\n        if (isAdmin === 1) {\r\n            if ((type & 2) !== 0) {\r\n                // unit\r\n                items.push(\r\n                    '小号管理',\r\n                    this.appsAction, \r\n                    //this.usersAction, \r\n                    this.newUsersAction, \r\n                    //this.organizeAction\r\n                );\r\n            }\r\n            if ((type & 1) !== 0) {\r\n                // dev unit\r\n                let {counts} = dev;\r\n                //if (counts !== undefined) {\r\n                let devItems:(DevItem<DevModel.ObjBase>|string)[] = [\r\n                    '开发号管理',\r\n                    {\r\n                        title: 'APP', \r\n                        count: counts && counts.app, \r\n                        icon: 'tablet', \r\n                        onClick: () => new AppController(undefined).start(unit.id),\r\n                    },\r\n                    {\r\n                        title: 'UQ', \r\n                        count: counts && counts.uq, \r\n                        icon: 'database', \r\n                        onClick: () => new UQController(undefined).start(unit.id),\r\n                    },\r\n                    {\r\n                        title: 'BUS', \r\n                        count: counts && counts.bus, \r\n                        icon: 'cogs', \r\n                        objProps: busesProps,\r\n                    },\r\n                    {\r\n                        title: 'Server', \r\n                        count: counts && counts.server, \r\n                        icon: 'server', \r\n                        objProps: serversProps,\r\n                    },\r\n                ];\r\n                items.push(...devItems);\r\n            //}\r\n            }\r\n        }\r\n        return items;\r\n    }\r\n    private row = (item:Item, index:number):JSX.Element => {\r\n        if (typeof item === 'string') {\r\n            return <div className=\"px-3 pt-3 pb-1 small text-muted\" style={{backgroundColor:'#f0f0f0'}}>{item}</div>;\r\n        }\r\n        let {title} = item as DevItem<DevModel.ObjBase>;\r\n        let left:any, mid:any, r:any;\r\n        if (title !== undefined) {\r\n            let {icon, count} = item as DevItem<DevModel.ObjBase>;\r\n            left = <FA className=\"text-primary\" name={icon} fixWidth={true} size=\"lg\" />;\r\n            mid = title;\r\n            r = count>0 && <span>{count}</span>;\r\n        }\r\n        else {\r\n            let {right, main, icon} = item as ActionItem;\r\n            left = typeof icon === 'string'? \r\n                <FA className=\"text-primary\" name={icon} fixWidth={true} size=\"lg\" /> :\r\n                item.icon;\r\n            mid = main;\r\n            r = <span>{right}</span>;\r\n        }\r\n        return <LMR className=\"px-3 py-2 align-items-center\" left={left} right={r}>\r\n            <div className=\"px-3\"><b>{mid}</b></div>\r\n        </LMR>;\r\n    }\r\n    private rowClick = async (item:Item) => {\r\n        let {title} = item as DevItem<DevModel.ObjBase>;\r\n        if (title !== undefined) {\r\n            let {objProps, onClick} = item as DevItem<DevModel.ObjBase>;\r\n            if (objProps !== undefined)\r\n                return nav.push(<ObjView {...objProps} />);\r\n            else {\r\n                onClick();\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            let {page:P, controller} = item as ActionItem;\r\n            if (P !== undefined)\r\n                nav.push(<P />);\r\n            else {\r\n                await controller.start(store.unit);\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        let unit:Unit = store.unit;\r\n        if (unit === undefined) {\r\n            console.log(\"admin render without unit\");\r\n            return null;\r\n        }\r\n        console.log(\"admin render with unit\");\r\n        let items = this.buildItems();\r\n        if (items === undefined) {\r\n            return <Page header=\"\" />;\r\n        }\r\n        let header:any, top:any;\r\n        if (unit !== undefined) {\r\n            let {name, nick, icon, discription} = unit;\r\n            header = nick || name;\r\n            if (this.caption !== undefined) header = this.caption + ' - ' + header;            \r\n            top = <LMR className='px-3 my-4 bg-white py-2 cursor-pointer' onClick={()=>nav.push(<UnitProps />)}\r\n                left={<div><img src={icon || appIcon} /></div>}>\r\n                <div className=\"px-3\">\r\n                    <h6 className='text-dark'>{name}</h6>\r\n                    <h6><small className='text-secondary'>{nick}</small></h6>\r\n                    <div className='small text-info'>{discription}</div>\r\n                </div>\r\n            </LMR>;\r\n        }\r\n        else {\r\n            header = '系统管理';\r\n        }\r\n        return <Page header={header} logout={logout}>\r\n            {top}\r\n            <List items={items} item={{render:this.row, onClick:this.rowClick}} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass UnitProps extends React.Component {\r\n    private rows:Prop[] = [\r\n        '',\r\n        {label: '标志图', type: 'string', name: 'icon'},\r\n        '=',\r\n        {label: '唯一号', type: 'string', name: 'name'},\r\n        {\r\n            label: '名称', \r\n            type: 'string',\r\n            name: 'nick', \r\n            onClick:()=>nav.push(<StringValueEdit \r\n                title=\"修改名称\"\r\n                value={store.unit.nick}\r\n                onChanged={this.onNickChanged} \r\n                info=\"好的名字会提升接受度\" />)\r\n        },\r\n        {\r\n            label: '说明',\r\n            type: 'string',\r\n            name: 'discription',\r\n            onClick:()=>nav.push(<StringValueEdit \r\n                title=\"修改说明\"\r\n                value={store.unit.discription}\r\n                onChanged={this.onDiscriptionChanged} \r\n                info=\"对小号做一个说明\" />)\r\n        },\r\n    ];\r\n    async onNickChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.unitChangeProp('nick', value);\r\n    }\r\n    async onDiscriptionChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.unitChangeProp('discription', value);\r\n    }\r\n    render() {\r\n        return <Page header=\"小号信息\">\r\n            <PropGrid rows={this.rows} values={store.unit} alignValue=\"right\" />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\nimport { nav, NavView } from 'tonva-tools';\nimport { CAdmin } from './Admin';\nimport './App.css';\n\nclass App extends React.Component {\n    async onLogined() {\n        let loc = document.location;\n        nav.clear();\n        //nav.push(<StartPage />);\n        let cAdmin = new CAdmin({});\n        await cAdmin.start();\n    }\n    render() {\n        return (\n            <NavView onLogined={this.onLogined} />\n        )\n    }\n}\n\nexport default App;\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n"],"sourceRoot":""}