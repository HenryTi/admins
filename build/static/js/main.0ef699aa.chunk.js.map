{"version":3,"sources":["tonva/index.ts","tonva/components/index.ts","tonva/CApp/CVEntity.tsx","tonva/net/guestApi.ts","tonva/net/caller.ts","tonva/net/index.ts","tonva/components/nav.tsx","tonva/tool/cacheIds.ts","tonva/tool/localDb.ts","tonva/tool/env.ts","tonva/tool/local.ts","tonva/tool/index.ts","tonva/CApp/tools/jsonStringify.ts","tonva/CApp/tools/pureJsonContent.tsx","tonva/CApp/tools/index.ts","tonva/net/appBridge.ts","tonva/components/page.tsx","tonva/uq/caller.ts","tonva/CApp/form/viewModel.tsx","tonva/net/httpChannel.ts","tonva/net/httpChannelUI.ts","tonva/net/uqApi.ts","tonva/CApp/link/cLink.tsx","tonva/CApp/link/index.ts","tonva/uq/entity.ts","tonva/tool/uid.ts","tonva/net/wsChannel.ts","tonva/uq/index.ts","tonva/uq/query.ts","tonva/components/edit/itemEdit.tsx","tonva/components/image.tsx","tonva/tool/user.ts","tonva/net/host.ts","tonva/CApp/cUq/reactBoxId.tsx","tonva-form/index.ts","tonva/CApp/tuid/vTuidMain.tsx","tonva/CApp/tuid/vTuidEdit.tsx","tonva/CApp/tuid/vTuidSelect.tsx","tonva/CApp/tuid/vTuidView.tsx","tonva/CApp/tuid/vTuidInfo.tsx","tonva/CApp/tuid/pageItems.ts","tonva/CApp/tuid/vTuidList.tsx","tonva/CApp/tuid/cTuid.ts","tonva/CApp/tuid/index.tsx","tonva/uq/action.ts","tonva/CApp/form/vBand.tsx","tonva/CApp/form/vSubmit.tsx","tonva/CApp/form/rule.ts","tonva/CApp/form/vField/vField.tsx","tonva/CApp/form/vField/vComputeField.tsx","tonva/CApp/form/vArr.tsx","tonva/CApp/form/vField/vTuidField.tsx","tonva/CApp/form/bandsBuilder.ts","tonva/CApp/form/vField/buildVmField.ts","tonva/CApp/form/vForm.tsx","tonva/CApp/form/index.ts","tonva/uq/tuid/idCache.ts","tonva/uq/tuid/tuid.ts","tonva/components/res.ts","tonva-form/form/control/control.tsx","tonva-form/form/control/buttonsControl.tsx","tonva-form/form/control/charsControl.tsx","tonva-form/form/control/stringControl.tsx","tonva-form/form/control/numberControl.tsx","tonva-form/form/control/unknownControl.tsx","tonva-form/form/control/pickIdControl.tsx","tonva-form/form/control/pickTuidControl.tsx","tonva-form/form/control/pickControl.tsx","tonva-form/form/control/index.ts","tonva-form/form/control/checkControl.tsx","tonva-form/form/control/radioControl.tsx","tonva-form/form/control/selectControl.tsx","tonva-form/form/control/textAreaControl.tsx","tonva/uq/tuid/index.ts","tonva-form/form/rowContainer/index.tsx","tonva/uq/tuid/reactBoxId.tsx","tonva/net/apiBase.ts","tonva/components/pageHeader.tsx","tonva/CApp/query/defaultRow.tsx","tonva/CApp/query/vQueryMain.tsx","tonva/CApp/query/vQuerySelect.tsx","tonva/CApp/query/cQuery.ts","tonva/CApp/query/index.ts","tonva/components/edit/imageItemEdit.tsx","tonva/tool/pageItems.ts","tonva/components/loading.tsx","tonva/components/resUploader.tsx","tonva/uq/uqMan.ts","tonva/uq/sheet.ts","tonva/uq/book.ts","tonva/uq/history.ts","tonva/uq/map.ts","tonva/uq/pending.ts","tonva/CApp/icons.tsx","tonva/CApp/ControllerUq.ts","tonva-form/form/index.ts","tonva-form/form/formView.tsx","tonva/CApp/sheet/vMain.tsx","tonva/CApp/sheet/vNew.tsx","tonva/CApp/sheet/vSheetView.tsx","tonva/CApp/sheet/vEdit.tsx","tonva/CApp/sheet/vSheetAction.tsx","tonva/CApp/sheet/vSchema.tsx","tonva/CApp/sheet/vArchives.tsx","tonva/CApp/sheet/vList.tsx","tonva/CApp/sheet/vArchived.tsx","tonva/CApp/sheet/vSheet.tsx","tonva/CApp/sheet/vSaved.tsx","tonva/CApp/sheet/vSheetProcessing.tsx","tonva/CApp/sheet/cSheet.ts","tonva/CApp/sheet/index.ts","tonva/components/simple/Badge.tsx","tonva/components/simple/LMR.tsx","tonva/components/simple/FA.tsx","tonva/components/simple/Muted.tsx","tonva/components/simple/index.ts","tonva/CApp/book/vBookMain.tsx","tonva/CApp/book/cBook.ts","tonva/CApp/cUq/vUq.tsx","tonva/CApp/cUq/cUq.tsx","tonva/CApp/cUq/index.ts","tonva/CApp/centerApi.ts","tonva/CApp/app/vApp.tsx","tonva/CApp/app/CApp.tsx","tonva/CApp/app/index.ts","tonva/CApp/map/vMain.tsx","tonva/CApp/map/inputValues.tsx","tonva/CApp/map/cMap.ts","tonva/CApp/map/index.ts","tonva/CApp/action/vActionMain.tsx","tonva/CApp/action/cAction.ts","tonva/CApp/action/index.ts","tonva/CApp/history/vHistoryMain.tsx","tonva/CApp/history/cHistory.ts","tonva/CApp/history/index.ts","tonva/CApp/pending/vPendingMain.tsx","tonva/CApp/pending/cPending.ts","tonva/CApp/pending/index.ts","tonva/net/netToken.ts","tonva/components/VM.tsx","tonva/components/schema/index.ts","tonva/components/rules/index.ts","tonva/components/dropDownActions/index.tsx","tonva/components/easyDate/index.tsx","tonva/components/media.tsx","tonva/components/searchBox.tsx","tonva/uq/tuid/tuidsCache.ts","tonva/uq/uqsMan.ts","tonva/CApp/index.ts","tonva-form/form/TonvaForm.tsx","tonva-form/multiStep/index.tsx","tonva/components/form/rules/index.ts","tonva/components/form/widgets/widget.tsx","tonva/components/form/widgets/textWidget.tsx","tonva/components/form/widgets/numberWidget.tsx","tonva/components/form/widgets/updownWidget.tsx","tonva/components/form/widgets/dateWidget.tsx","tonva/components/form/widgets/checkBoxWidget.tsx","tonva/components/form/widgets/selectWidget.tsx","tonva/components/form/widgets/radioWidget.tsx","tonva/components/form/widgets/idWidget.tsx","tonva/components/form/widgets/unknown.tsx","tonva/components/form/widgets/buttonWidget.tsx","tonva/components/form/context.tsx","tonva/components/form/widgets/arrComponent.tsx","tonva/components/form/widgets/imageWidget.tsx","tonva/components/form/widgets/factory.tsx","tonva/components/form/widgets/textareaWidget.tsx","tonva/components/form/widgets/passwordWidget.tsx","tonva/components/form/widgets/rangeWidget.tsx","tonva/components/form/formRes.ts","tonva/components/form/form.tsx","tonva/components/form/field.tsx","tonva/components/form/index.ts","tonva/components/edit/stringItemEdit.tsx","tonva/components/edit/radioItemEdit.tsx","tonva/components/edit/selectItemEdit.tsx","tonva/components/edit/idItemEdit.tsx","tonva/components/edit/edit.tsx","tonva/components/edit/index.tsx","tonva/app/centerApi.ts","tonva/components/list/base.tsx","tonva/components/list/clickable.tsx","tonva/components/list/static.tsx","tonva/components/list/selectable.tsx","tonva/components/list/index.tsx","tonva/components/propGrid/row.tsx","tonva/components/propGrid/propView.tsx","tonva/components/propGrid/PropGrid.tsx","tonva/components/propGrid/index.tsx","tonva/entry/meInfo.tsx","tonva/components/tabs/tabs.tsx","tonva/components/fetchErrorView.tsx","api/mainApi.ts","api/devApi.ts","store/admins.ts","store/dev.ts","store/cacheIds.ts","store/index.ts","Administors/NewFellow.tsx","Administors/EditAdmin.tsx","Administors/index.tsx","tools/idDates.tsx","tools/span.tsx","tools/unitSpan.tsx","consts.ts","tools/uqSpan.tsx","tools/appSpan.tsx","tools/serverSpan.tsx","tools/stringValueEdit.tsx","tools/idPickPage.tsx","Apps/info.tsx","Apps/new.tsx","Apps/index.tsx","Members/newRole.tsx","Members/roleApps.tsx","Members/memberPage.tsx","Members/membersPage.tsx","Members/rolePage.tsx","Members/index.tsx","Dev/apps/editPage.tsx","Dev/apps/appsPage.tsx","Dev/apps/appUqs.tsx","Dev/apps/appPage.tsx","Dev/apps/uqBindPage.tsx","Dev/apps/index.tsx","Dev/uqs/resultSections.tsx","Dev/uqs/uqUpload.tsx","createIdPick.tsx","Dev/uqs/newServicePage.tsx","Dev/uqs/servicePage.tsx","Dev/uqs/editPage.tsx","Dev/uqs/uqPage.tsx","Dev/uqs/listPage.tsx","Dev/uqs/uqController.tsx","Dev/buses.tsx","Dev/servers.tsx","Dev/ObjView.tsx","Users/vApps.tsx","Users/vUsers.tsx","Users/vApp.tsx","Users/vUser.tsx","Users/vAppEditUsers.tsx","Users/vUserEditApps.tsx","Users/VAddUser.tsx","Users/cUsers.tsx","Admin.tsx","App.tsx","registerServiceWorker.ts","index.tsx"],"names":["_tool__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d","__webpack_exports__","_net__WEBPACK_IMPORTED_MODULE_1__","_components__WEBPACK_IMPORTED_MODULE_2__","o","_uq__WEBPACK_IMPORTED_MODULE_4__","_CApp__WEBPACK_IMPORTED_MODULE_5__","_nav__WEBPACK_IMPORTED_MODULE_0__","_page__WEBPACK_IMPORTED_MODULE_2__","_VM__WEBPACK_IMPORTED_MODULE_3__","_schema__WEBPACK_IMPORTED_MODULE_4__","_form__WEBPACK_IMPORTED_MODULE_5__","_edit__WEBPACK_IMPORTED_MODULE_6__","_res__WEBPACK_IMPORTED_MODULE_7__","_image__WEBPACK_IMPORTED_MODULE_10__","_rules__WEBPACK_IMPORTED_MODULE_12__","_list__WEBPACK_IMPORTED_MODULE_13__","_dropDownActions__WEBPACK_IMPORTED_MODULE_14__","_easyDate__WEBPACK_IMPORTED_MODULE_15__","_propGrid__WEBPACK_IMPORTED_MODULE_16__","_simple__WEBPACK_IMPORTED_MODULE_17__","_media__WEBPACK_IMPORTED_MODULE_18__","_searchBox__WEBPACK_IMPORTED_MODULE_19__","CEntity","_ControllerUq__WEBPACK_IMPORTED_MODULE_3__","[object Object]","cUq","entity","ui","res","super","Object","setPrototypeOf","this","x","name","typeName","label","icon","_icons__WEBPACK_IMPORTED_MODULE_2__","loadSchema","onSubmit","values","mode","options","buildFormOptions","ret","_form__WEBPACK_IMPORTED_MODULE_1__","setValues","none","submitCaption","arrNewCaption","arrEditCaption","arrTitleNewButton","fields","arrFields","undefined","new","formUI","form","arrs","inputs","buildInputs","buildFieldsInputs","arr","items","arrFieldInputs","field","_tuid","tuid","fieldUI","select","buildSelect","content","buildContent","placeHolder","getTuidPlaceHolder","__awaiter","ownerField","queryName","cQuerySelect","VEntity","_components__WEBPACK_IMPORTED_MODULE_0__","controller","createForm","guestApi","uqApi","get","user","token","unitName","unit","Caller","params","method","headers","wsChannel","apiBase","appBridge","host","logMark","logs","stackKey","NavView","react__WEBPACK_IMPORTED_MODULE_0__","props","waitCount","upgradeUq","nav","start","isHistoryBack","clearError","setState","fetchError","back","bind","navBack","stack","state","wait","window","addEventListener","set","level","length","waitTimeHandler","global","setTimeout","clearTimeout","err","error","unauthorized","showLogin","uq","version","show","header","className","onClick","view","disposer","clear","push","removeCeased","history","pushState","key","ceased","refresh","item","pop","dispose","p","i","len","backLevel","popAndDispose","find","v","confirmClose","log","confirm","self","top","postMessage","type","message","elWait","elError","_loading__WEBPACK_IMPORTED_MODULE_10__","_fetchErrorView__WEBPACK_IMPORTED_MODULE_4__","assign","test","testing","style","lineHeight","_simple__WEBPACK_IMPORTED_MODULE_15__","map","index","visibility","Nav","local","_tool__WEBPACK_IMPORTED_MODULE_6__","lang","district","_res__WEBPACK_IMPORTED_MODULE_9__","language","culture","guest","g","handler","ws","onWsReceiveAny","handlerId","endWsReceive","msg","receive","unitJsonPath","unitRes","fetch","json","remove","envUnit","NODE_ENV","PUBLIC_URL","REACT_APP_CENTER_HOST","REACT_APP_UNIT","Number","isDevelopment","id","getPredefinedUnitName","unitId","_net__WEBPACK_IMPORTED_MODULE_7__","unitFromName","settings","navSettings","oem","href","document","location","toLowerCase","endsWith","substr","hash","pos","_net_appBridge__WEBPACK_IMPORTED_MODULE_5__","hashParam","substring","startWait","url","resHost","centerHost","resUrl","wsHost","setGuest","exHash","appInFrame","parent","_net_wsChannel__WEBPACK_IMPORTED_MODULE_8__","console","predefinedUnit","loadPredefinedUnit","notLogined","logined","endWait","onLogined","_net_netToken__WEBPACK_IMPORTED_MODULE_3__","me","nick","callback","JSON","stringify","saveLocalUser","showAppView","connect","defaultTop","loginTop","withBack","lv","e","then","loginView","default","logout","logoutClear","cp","ChangePasswordPage","onError","showUpgradeUq","replace","topKey","popTo","ceaseTop","regConfirmClose","confirmBox","apiId","sheetType","sheetId","Promise","resolve","reject","sheet","includes","uh","src","title","String","open","date","Date","getTime","toTimeString","step","__decorate","mobx__WEBPACK_IMPORTED_MODULE_1__","CacheIds","maxCount","dict","Map","ids","loadId","shift","delete","_loadIds","_loadId","setItem","mobx_module","__ls","localStorage","getItem","value","removeItem","LocalCache","text","parse","t","removeLocal","child","Local","caches","locals","k","keyForGet","keyForSet","sk","localDb_LocalArr","LocalMap","keyForRemove","removeAll","ks","maxArrSize","split","join","lodash_default","a","indexOf","unshift","splice","saveIndex","max","forEach","l","isNaN","ls","testingTags","env","pathname","pn","isTesting","localDb","local_LocalData","uid","pageItems","replacer","jsonStringify","PureJSONContent","react","uqTokens","logoutUqTokens","appsInFrame","_unit","val","isBridged","setAppInFrame","appHash","parts","page","param","slice","getExHashPos","lastIndexOf","getExHash","appUrl","u","_tool_uid__WEBPACK_IMPORTED_MODULE_2__","evt","data","subWin","source","_wsChannel__WEBPACK_IMPORTED_MODULE_4__","el","getElementById","hidden","hideFrameBack","lodash__WEBPACK_IMPORTED_MODULE_0___default","clone","_components__WEBPACK_IMPORTED_MODULE_1__","subFrameStarted","onReceive","_uqApi__WEBPACK_IMPORTED_MODULE_3__","initSubWin","from","callId","body","result","directCall","callCenterApiFromMessage","bca","brideCenterApis","bridgeCenterApiReturn","apiName","db","uqOwner","uqName","onReceiveAppApiMessage","urlTest","action","uqTokenActions","Error","realUrl","_host__WEBPACK_IMPORTED_MODULE_5__","getUrlOrTest","onAppApiReturn","buildAppUq","realUnit","getUnit","uqToken","at","opener","appUq","bridgeCenterApi","scrollTimeGap","ScrollView","bottomTime","topTime","onScroll","onScrollTop","onScrollBottom","target","scrollTop","offsetHeight","scrollHeight","c","direct","children","_$scroll","toString","eachChild","Page","cur","tabs","tabStates","tab","lodash__WEBPACK_IMPORTED_MODULE_3___default","isSelected","isMounted","t0","load","footer","right","keepHeader","headerClassName","tabPosition","redDot","img","redDotView","cn","alt","classnames__WEBPACK_IMPORTED_MODULE_2___default","onTabClick","pageHeader","_pageHeader__WEBPACK_IMPORTED_MODULE_4__","center","sideBar","invisible","onTouchStart","elFooter","renderTabs","renderSingle","mobx_react__WEBPACK_IMPORTED_MODULE_1__","EntityCaller","_net__WEBPACK_IMPORTED_MODULE_0__","tries","_entity","innerRequest","xcall","jsonResult","innerCall","$uq","$modify","pullModify","xresult","retry","ver","uqVersion","en","schema","rebuildSchema","buildEntities","setSchema","ActionCaller","QueryQueryCaller","path","unpackReturns","buildParams","QueryPageCaller","pageStart","pageSize","$page","ViewModel","JSONContent","RowContent","_tools__WEBPACK_IMPORTED_MODULE_2__","vm","methodsWithBody","httpChannel_HttpChannel","hostUrl","apiToken","showError","timeout","tool","post","urlPrefix","caller","buildOptions","h","append","encodeURI","innerFetch","keys","innerFetchResult","that","buildError","channel","timeOutHandler","ok","statusText","ct","retJson","Array","isArray","retError","catch","startsWith","buildHeaders","Headers","httpChannel_CenterHttpChannel","UqHttpChannel","httpChannelUI_HttpChannelNavUI","channelUIs","channelNoUIs","logoutApis","uqApi_channels","uqApi_UqApi","basePath","access","showWaiting","channels","channelUI","init","acc","entities","uqApi_UnitxApi","buildChannel","centerAppApi","uqApi_CenterAppApi","unitxUq","setCenterUrl","centerToken","centerChannel","centerChannelUI","loginedUserId","setCenterToken","userId","uqApi_CenterApiBase","uqTokensName","uqTokenApi","localMap","un","localCache","nowTick","Math","floor","now","tick","appUqParams","callCenterapi","call","appUqsName","appOwner","appName","appUqs","rAppOwner","rAppName","uqsPure","cachedId","uqs","cachedUqs","retId","retUqs","isMatch","isOkCheckUqs","components","loadAppUqs","checkUqs","userApi","tool_user","account","verify","password","prop","Link","cLink_CLink","classnames_default","ln","Entity","typeId","fieldMaps","sys","cache","sName","jName","returns","f","loadEntitySchema","buildFieldsTuid","buildFieldTuid","buildArrFieldsTuid","fieldName","arrName","getTuid","fn","fieldArr","an","buildFieldsParams","arrResult","pa","rowResult","buildDateTimeParam","getIdFromObj","dt","toISOString","packRow","packArr","row","r","charCodeAt","escape","boxId","unpackRow","unpackArr","ch0","ch","fLen","to","n","vals","ALPHABET","ID_LENGTH","rtn","charAt","random","subAppWindow","setSubAppWindow","win","postWsToTop","WsBase","handlerSeed","anyHandlers","msgHandlers","seed","$type","wsBaseSeed","wsBridge","wsBaseId","WSChannel","WebSocket","onopen","ev","onerror","onmessage","wsMessage","onclose","close","event","postWsToSubApp","netThis","send","_uqMan__WEBPACK_IMPORTED_MODULE_0__","_tuid__WEBPACK_IMPORTED_MODULE_5__","_uqsMan__WEBPACK_IMPORTED_MODULE_10__","Query","_entity__WEBPACK_IMPORTED_MODULE_2__","isPaged","size","more","list","hasMore","startField","mobx__WEBPACK_IMPORTED_MODULE_0__","array","deep","_caller__WEBPACK_IMPORTED_MODULE_3__","pageCaller","request","queryCaller","query","table","obj","ItemEdit","itemSchema","uiItem","isChanged","internalStart","internalEnd","rules","nv","newValue","verifyRule","rule","Image","classnames__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_1___default","_nav__WEBPACK_IMPORTED_MODULE_2__","altImage","currentTarget","decodeUserToken","decodeGuestToken","jwt_decode__WEBPACK_IMPORTED_MODULE_0__","jwt_decode__WEBPACK_IMPORTED_MODULE_0___default","hosts","centerhost","reshost","uqhost","unitxhost","uq-build","httpArr","urlFromHost","str","isAbsoluteUrl","resUrlFromHost","fetchOptions","Content-Type","tryLocal","getCenterHost","centerUrlFromHost","centerWsFromHost","getResHost","promises","hostArr","hostValue","findIndex","fetchUrl","debugHostUrl","localCheck","results","all","j","debugHost","getUrlOrDebug","urlDebug","fetchLocalCheck","TuidWithUIRes","ReactBoxId","tuidUR","isUndefined","valueFromId","boxName","assureBox","Tv","tuidValue","nullUI","ttv","divObj","bi","logContent","render","boxIdContent","tv","_form__WEBPACK_IMPORTED_MODULE_0__","_multiStep__WEBPACK_IMPORTED_MODULE_1__","vTuidMain_VTuidMain","CVEntity","onNew","onList","onSearch","openPage","link","newButton","isImport","placeholder","vTuidEdit_VTuidEdit","next","vTuidEdit_awaiter","vForm","reset","closePage","finish","getValues","save","unique","setError","isCalling","returnCall","openPageElement","editView","vTuidSelect_VTuidSelect","mainView","index_module","react_default","createElement","initKey","onSearchMain","PageItems","renderMainRow","clickMainRow","before","vTuidSelect_awaiter","searchMain","mainRowContent","ceasePage","hasDiv","showDiv","divView","renderDivRow","clickDivRow","divRowContent","showMain","rowContent","viewModel","ownerValue","divs","divItems","getDivItems","vTuidView_VTuidView","vTuidView_awaiter","alert","tools","buildForm","vTuidInfo_VTuidInfo","pageItems_TuidPageItems","search","vTuidList_VTuidListBase","vTuidList_awaiter","renderRow","clickRow","callOnSelected","rowKey","ownerId","onSelected","VTuidList","cTuid_CTuid","buildPageItems","first","searchArr","cTuid_CTuidBase","cTuidEditFromName","cTuidInfoFromName","cTuidSelectFromName","VTuidMain","VTuidEdit","openVPage","onEdit","itemChanged","cTuidInfo","cTuid_CTuidInfo","cTuidEdit","CTuidEdit","edit","cTuidList","CTuidList","merge","CTuidMain","cTuid_CTuidSelect","VTuidSelect","VTuidInfo","Action","_entity__WEBPACK_IMPORTED_MODULE_0__","ActionSubmitCaller","SubmitReturnsCaller","_caller__WEBPACK_IMPORTED_MODULE_1__","pack","vBand_VBand","renderContent","addRow","VFieldBand","vField","vBand_VArrBand","vArr","setAddRow","vBand_VSubmitBand","vSubmit","vSubmit_VSubmit","onClickSubmit","submit","isOk","disabled","caption","Rule","RuleRequired","defy","trim","RuleNum","RuleInt","isInteger","RuleMin","min","check","RuleMax","vField_VField","fieldRes","buildRules","required","null","checkRules","errors","readonly","FormMode","editable","vField_decorate","vField_VInputControl","renderError","ref","input","setInputValue","onFocus","onBlur","computeFields","onChange","setValue","inputGroup","suffix","ctrlCN","inputType","readOnly","maxLength","onKeyPress","RedMark","color","position","left","VStringField","KeyCode_Neg","KeyCode_Dot","vField_VNumberControl","charCode","extraChars","onKeyDot","onKeyNeg","preventDefault","_a","vField_VIntField","VDecField","VTextField","VDateTimeField","VDateField","vComputeField_VComputeField","vArr_VArr","ownerForm","onEditRow","rowPage","vArr_awaiter","valueBoxs","onRowChanged","rowValues","$owner","renderItem","showRow","editRow","editSubmitCaption","internalAddRow","newSubmitCaption","button","paddingTop","paddingBottom","arrsRes","arrRes","newSubmit","editSubmit","arrUI","vForm_VForm","buttonStyle","textAlign","paddingLeft","paddingRight","overflow","vTuidField_VTuidField","vTuidField_awaiter","showInfo","getValue","reactBoxId","idBox","bandsBuilder_BandsBuilder","layout","formItems","bandsOnFly","bandsFromLayout","bands","bandsFromFields","bandFromArr","bandFromField","formItem","rfn","resFromName","buildVField","vFields","vArrs","onFormSubmit","buildFormValues","buildBands","bandColl","bandsBuilder","build","band","getVFields","getVArr","getVSubmit","order","rows","initValues","arrList","ctrl","valueFromFieldName","propName","buildFieldValues","buildObservableValues","vForm_decorate","maxCacheSize","idCache_IdCache","tuidLocal","queue","waitingIds","divName","tuidInner","initLocalArr","localArr","defer","util","has","cacheTuids","moveToHead","_id","useId","tuidValues","loadIds","cacheIdValues","tuids","unpackTuidIds","cacheValue","cacheTuidFieldValues","localedValues","loadTuidIdsOrLocal","filter","netIds","netRet","loadTuidIds","IdDivCache","div","tuid_Tuid","idName","TuidBox","tuid_TuidInner","idCache","newVersion","tuidDiv","tuid_TuidDiv","createBoxId","assureObj","cacheIds","modifyIds","IdsCaller","cached","valuesText","GetCaller","cacheFieldsInValue","arrValues","mainFields","cacheFields","unpackTuidIdsOfFields","SaveCaller","AllCaller","owner","SearchCaller","LoadArrCaller","tuid_SaveArrCaller","ArrPosCaller","tuid_TuidCaller","$id","transParams","arrParams","arrValue","buildDateParam","bid","$order","TuidImport","loadMain","loadArr","saveArr","posArr","TuidBoxDiv","resOptions","resLang","lodash__WEBPACK_IMPORTED_MODULE_0__","_","navigator","languages","setResOptions","control_ControlBase","formView","renderControl","hasError","filled","validate","control_Control","face","setProps","element","defaultValue","clearErrors","clearValue","isOK","getValueFromElement","notes","buttonsControl_ButtonsControl","otherClick","onOther","readValues","nothing","btnOther","submitButton","otherButton","TxtRequired","charsControl_CharsControl","parseValue","lodash","classnames","form-control","has-success","is-invalid","is-valid","renderInput","stringControl_StringControl","ErrInvalidNumber","ErrMin","ErrMax","unknownControl_UnknownControl","role","unknownControl_EmptyControl","pickIdControl_PickIdControl","pick","fromPicked","onPicked","itemFromId","initCaption","controlContent","component","pickIdControl_decorate","pickTuidControl_PickTuidControl","onIdChanged","onFormValues","pickTuidControl_decorate","pickControl_PickControl","pickControl_awaiter","Content","pickControl_decorate","createControl","group","groupRow","createGroupControl","fieldRow","fieldType","defaultFaces","controls","createFieldControl","help","string","number","parseFloat","checkbox","trueValue","falseValue","checked","radiobox","selectedIndex","selectedOptions","pick-id","pick-tuid","textarea","int","dec","bool","_boxId__WEBPACK_IMPORTED_MODULE_0__","_tuid__WEBPACK_IMPORTED_MODULE_1__","_tuidsCache__WEBPACK_IMPORTED_MODULE_2__","bootstrapCreateRow","elementCreateRow","_control__WEBPACK_IMPORTED_MODULE_1__","RowContainer","cc","control","setInitValues","ElementRowContainer","BootStrapRowContainer","TuidContent","tuidName","s","refetchApi","ApiBase","getHttpChannel","callFetch","put","PageHeader","logoutClick","_nav__WEBPACK_IMPORTED_MODULE_1__","showLogout","hasBack","debugLogout","b","openWindow","rightView","DefaultRow","vQueryMain_VQueryMain","resetPage","loadPage","replacePage","pageResult","queryResult","again","renderExtra","rightClose","queryRow","vQuerySelect_VQuerySelect","vQuerySelect_awaiter","selectRow","vQuerySelect_QueryPageItems","cQuery_CQueryBase","cQuery_CQuery","VQueryMain","main","cQuery_CQuerySelect","VQuerySelect","ImageItemEdit","_itemEdit__WEBPACK_IMPORTED_MODULE_7__","overSize","upload","resUploader","resId","_page__WEBPACK_IMPORTED_MODULE_6__","_resUploader__WEBPACK_IMPORTED_MODULE_3__","multiple","maxSize","border","padding","_image__WEBPACK_IMPORTED_MODULE_4__","_nav__WEBPACK_IMPORTED_MODULE_5__","mobx__WEBPACK_IMPORTED_MODULE_2__","itemObservable","isFirst","loading","beforeLoad","loaded","allLoaded","firstSize","appendPosition","_items","topDiv","_uid__WEBPACK_IMPORTED_MODULE_1__","bottomDiv","onLoad","setPageStart","reverse","Loading","ResUploader","files","fileInput","FormData","file","abortController","AbortController","signal","onFilesChange","fieldDefaultValue","UqMan","uqData","tvs","actions","sheets","queries","books","maps","histories","pendings","createBoxIdFromTVs","_tuid_reactBoxId__WEBPACK_IMPORTED_MODULE_10__","tuidArr","actionArr","sheetArr","queryArr","bookArr","mapArr","historyArr","pendingArr","clearTuids","localModifyMax","localAccess","tuidsCache","_tuid__WEBPACK_IMPORTED_MODULE_2__","accesses","loadAccess","buildTuids","buildAccess","entityName","newTuid","fromType","fromObj","_action__WEBPACK_IMPORTED_MODULE_3__","_query__WEBPACK_IMPORTED_MODULE_5__","book","_book__WEBPACK_IMPORTED_MODULE_6__","_map__WEBPACK_IMPORTED_MODULE_8__","_history__WEBPACK_IMPORTED_MODULE_7__","pending","_pending__WEBPACK_IMPORTED_MODULE_9__","_sheet__WEBPACK_IMPORTED_MODULE_4__","newAction","newQuery","newBook","newMap","newHistory","newSheet","newPending","buildSheet","buildTuidBox","buildTuidDivBox","af","modifyMax","Sheet","states","op","ops","discription","app","flow","brief","unpackSheet","flows","GetSheetCaller","getArchive","unpack","SheetArchiveCaller","SheetArchivesCaller","StateSheetsCaller","PageStateItems","StateSheetCountCaller","UserSheetsCaller","MySheetsCaller","SheetCaller","_caller__WEBPACK_IMPORTED_MODULE_2__","count","_tool_pageItems__WEBPACK_IMPORTED_MODULE_1__","getStateSheets","Book","_query__WEBPACK_IMPORTED_MODULE_0__","queryApiName","BookQueryCaller","History","schemaFrom","actionSchema","querySchema","AddCaller","DelCaller","PageCaller","qc","QueryCaller","MapCaller","getCaller","MapAddCaller","add","MapDelCaller","MapAllCaller","MapPageCaller","MapQueryCaller","_action__WEBPACK_IMPORTED_MODULE_1__","Pending","entityIcons","react__WEBPACK_IMPORTED_MODULE_0___default","fixWidth","ControllerUq","_rule__WEBPACK_IMPORTED_MODULE_0__","_field__WEBPACK_IMPORTED_MODULE_1__","_face__WEBPACK_IMPORTED_MODULE_2__","_TonvaForm__WEBPACK_IMPORTED_MODULE_5__","FormView","tonva__WEBPACK_IMPORTED_MODULE_2__","buildRows","some","every","formRows","createRow","buildRow","buttonsRow","createButtons","_rowContainer__WEBPACK_IMPORTED_MODULE_4__","formRow","formRowCreator","_control__WEBPACK_IMPORTED_MODULE_3__","buttons","vMain_VSheetMain","newClick","schemaClick","archivesClick","sheetStateClick","renderState","badge","getStateLabel","templet","statesCount","isDev","vNew_VSheetNew","vNew_awaiter","valuesWithBox","onSave","leftFlowStyle","width","vSheetView_VSheetView","flowRow","sheetView","removed","sheetData","vEdit_VSheetEdit","vEdit_awaiter","saveSheet","CApp_form","vSheetAction_VSheetAction","actionClick","vSheetAction_awaiter","acted","deleteClick","editClick","editSheet","actionButtons","startButtons","no","stateLabel","getActionLabel","backPage","vSchema_VSheetSchema","schemaStringify","vArchives_VArchives","archiveClick","vArchives_awaiter","processing","archiveRow","getArchives","vList_VSheetList","rowClick","vList_awaiter","pageStateItems","listRow","stateName","vArchived_VArchived","vSheet_VSheet","vSaved_VSheetSaved","restart","vSaved_awaiter","vSheetProcessing_VSheetProcessing","cSheet_CSheet","cSheet_awaiter","showSaved","loadStateSheetCount","createPageStateItems","VSheetMain","onSheet","preState","$","sheetActPreState","sheetActState","changeStateCount","curState","delta","stateCount","VSheetNew","sheetNew","VSheetSaved","sheetSaved","VSheetEdit","sheetEdit","VSheetSchema","VArchives","VArchived","VSheetList","VSheetAction","sheetAction","VSheetProcessing","showArchived","showAction","showProcessing","beforeStart","onEvent","getSheetData","net","vCall","inBrief","getArchived","getStateUI","actionName","stateSheetCount","getSheet","sheetTitle","disc","Badge_Badge","badgeAlign","badgeVertical","LMR_LMR","cursor","LMR_decorate","FA_FA","spin","pull","pulse","rotate","flip","inverse","Muted","vBookMain_VBookMain","cBook_CBook","VBookMain","vUq_VUq","isSysVisible","linkItem","cLink","lists","tuidLinks","mapLinks","sheetLinks","actionLinks","queryLinks","bookLinks","historyLinks","pendingLinks","Fragment","isVisible","CApp_link","cTuidMain","cMap","cSheet","cAction","cQuery","cBook","cHistory","cPending","lowerPropertyName","cUq_CUq","cApp","tuidURs","getUI","CApp_tuid","CTuidSelect","CTuidInfo","CQuery","CQuerySelect","CMap","CAction","CSheet","CBook","CHistory","CApp_history","CPending","tonva_uq","loadEntities","tuidPlaceHolder","sheetTypeId","sheetFromTypeId","startSheet","cTuidSelect","entityType","cFromName","ownerTuid","tUIs","tUI","cEntity","VUq","centerApi","vApp_VAppMain","appPage","vApp_awaiter","appContent","cUqArr","vApp_VUnsupportedUnit","userName","vApp_VUnitSelect","onRowClick","appUnits","vApp_VErrorsPage","vApp_VAppStartError","CApp_CApp","cUqCollection","cImportUqs","setSettings","getCUq","uqUI","CUq","CApp_cUq","VAppMain","retErrors","userAppUnits","showUnsupport","appUnit","localData","uqAppData","promiseInits","uqFullName","newCUq","addUq","setTuidImportsLocal","clearPrevPages","showMainPage","uqId","getCUqFromId","navSheet","vMain_VMapMain","itemRender","ItemRow","valuesView","box","isLeaf","keyIndex","keyUI","keyUIs","keyContent","valuesContent","keyNone","isFrom","addClick","removeClick","inputValues_VInputValues","onValuesSubmit","inputValues_awaiter","cMap_MapItem","cMap_CMap","cMap_awaiter","keysLen","keyFields","keysLast","idx","keyField","kn","searchParam","ki","searchOnKey","arr1","nullable","rowIndex","createItem","getLable","confirmDelete","template","v0","del","q","retFields","newItem","addItem","VMapMain","tuidBox","callParam","vActionMain_VActionMain","resultPage","mainPage","cAction_CAction","VActionMain","submitReturns","vHistoryMain_VHistoryMain","cHistory_CHistory","VHistoryMain","vPendingMain_VPendingMain","cPending_CPending","VPendingMain","netToken","_uqApi__WEBPACK_IMPORTED_MODULE_0__","_wsChannel__WEBPACK_IMPORTED_MODULE_1__","Controller","_tool__WEBPACK_IMPORTED_MODULE_3__","onMessageReceive","onMessage","isLogined","unregisterReceiveHandler","receiveHandlerId","onDispose","vp","registerReceiveHandler","_resolve_$","View","VPage","_schema__WEBPACK_IMPORTED_MODULE_0__","_uiSchema__WEBPACK_IMPORTED_MODULE_1__","mobileRegex","emailRegex","DropdownActions","handleDocumentClick","dropdownOpen","contains","menu","toggle","removeEventListener","isRight","hasIcon","data-toggle","aria-expanded","dropdown-menu","dropdown-menu-right","aria-hidden","EasyDate","EasyTime","renderDate","vDate","withTime","nDate","_date","month","year","hm","nowYear","hour","getHours","minute","getMinutes","getDate","getMonth","getFullYear","Media","___WEBPACK_IMPORTED_MODULE_2__","disp","px","py","SearchBox","allowEmptySearch","inputSize","lab","inputClassName","buttonText","TuidsCache","clearCacheTimer","cacheTimer","seconds","tuidCached","innerPullModify","tuidLists","queueModify","modify","UQsMan","tonvaAppName","buildTVs","collection","uqTVs","lj","uqsData","_uqMan__WEBPACK_IMPORTED_MODULE_1__","lower","uqMan","setInner","tuidImport","fromName","iName","setFrom","_formUI__WEBPACK_IMPORTED_MODULE_12__","TonvaForm","_formView__WEBPACK_IMPORTED_MODULE_2__","MultiStep","lodash__WEBPACK_IMPORTED_MODULE_1__","lodash__WEBPACK_IMPORTED_MODULE_1___default","classnames__WEBPACK_IMPORTED_MODULE_2__","_form__WEBPACK_IMPORTED_MODULE_3__","stepViews","topView","onPrev","onNext","stepName","steps","ButtonConten","prefix","btnContent","formProps","setStep","nextStepName","num","pIcon","sIcon","RuleCustom","func","RulePredefined","rules_RuleNum","minMsg","maxMsg","checkMore","integer","widget_Widget","context","fieldProps","contextErrors","onInputChange","changeValue","container","visible","inNode","requiredFlag","FieldContainer","renderBody","_itemSchema","_ui","getUiItem","removeErrorWidget","addErrorWidget","isChanging","initData","fromElement","onChanging","onChanged","prev","allowChange","setDataValue","setElementValue","fieldClass","FieldClass","elDiscription","discriptionClassName","uiLabel","Templet","errorList","tag","textWidget_TextWidget","onKeyDown","internalOnKeyDown","keyCode","onEnter","blur","checkContextRules","renderTemplet","renderErrors","numberWidget_NumberWidget","updownWidget_UpdownWidget","returnValue","isValidKey","dateWidget_DateWidget","checkBoxWidget_CheckBoxWidget","defaultChecked","selectWidget_SelectWidget","option","selectWidget_decorate","radioStyle","height","idWidget_IdWidget","idWidget_awaiter","pickId","clearContextError","required-item","cursor-pointer","idWidget_decorate","Unknown","dataType","uiType","dataTypes","buttonWidget_ButtonWidget","buttonWidget_awaiter","observerRender","widget","widgetType","ButtonClass","context_Context","uiSchema","isRow","widgets","errorWidgets","subContexts","arrRowContexts","itemName","getDisabled","setDisabled","getReadOnly","setReadOnly","getVisible","setVisible","buttonName","ew","onButtonClick","checkFieldRules","rowContext","setContextError","clearWidgetsErrors","checkHasError","clearContextErrors","context_decorate","rowKeySeed","RowContext","parentContext","arrSchema","uiArr","itemSchemas","parentData","FormContext","ContextContainer","ArrComponent","selectable","deletable","restorable","getArrRowContexts","arrLabel","ArrContainer","RowSeperator","formSelectable","formDeletable","formRestorable","arrSelectable","arrDeletable","arrRestorable","ac","rc","rs","sep","typeofTemplet","factory","selectCheck","deleteIcon","$isSelected","$source","isDeleted","$isDeleted","onDelClick","editContainer","deleted","row-selected","Provider","imageWidget_ImageWidget","imageWidget_awaiter","imageItemEdit","imageSrc","end","components_image","imageWidget_decorate","widgetsFactory","datetime","time","email","updown","image","checkboxes","radio","range","typeWidget","getItemSchema","getTypeWidget","WidgetClass","formRes","zh","form_Form","watch","formData","calcSelectOrDelete","DefaultContainer","DefaultFieldContainer","fieldLabelSize","labelView","fieldCol","DefaultFieldClass","DefaultButtonClass","DefaultRes","components_res","py-3","Container","formContext","dv","initDataItem","arrItem","arrItems","arrDict","arrItemOperated","formArrVal","beforeShow","contextType","stringItemEdit_StringItemEdit","edit_itemEdit","preValue","verifyValue","radioItemEdit_RadioItemEdit","selectItemEdit_SelectItemEdit","idItemEdit_IdItemEdit","idItemEdit_awaiter","edit_Edit","defaultSepClassName","defaultRowContainerClassName","divValue","requireFlag","rowContainerClassName","edit_awaiter","stopEdit","onItemChanged","onItemClick","itemEdit","createItemEdit","topBorderClassName","bottomBorderClassName","sepClassName","topBorder","bottomBorder","elItems","base_ListBase","selectedItems","clickable_Clickable","static_Static","selectable_Selectable","buildItems","itemsArray","comp","compare","selectItem","retItems","selected","si","labelId","obItem","onSelect","flex","marginBottom","htmlFor","anySelected","selectable_decorate","list_List","buildBase","listBase","selectAll","unselectAll","waitingMore","isLoading","staticRow","list_decorate","PropRow","row_PropBorder","borderTop","row_PropGap","w","backgroundColor","valueAlignStart","valueAlignCenter","valueAlignEnd","row_LabeledPropRow","gridProps","col","labelFixLeft","bk","bg-white","renderLabel","renderProp","align","vAlign","alignValue","renderPropBody","renderPropContent","StringPropRow","NumberPropRow","row_ListPropRow","borderBottom","row_ComponentPropRow","full","propView_PropView","isGap","PropGrid_PropGrid","propView","userSetProp","Tab","_content","contentBuilder","onShown","tabs_Tabs","tabClick","shown","selectedTab","tabBg","tabBack","contentBg","contentBack","notify","tabName","bsCur","bsTab","display","borderColor","borderStyle","borderTopWidth","borderLeftWidth","borderRightWidth","borderBottomWidth","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","notifyCircle","FetchErrorView","reApi","errContent","mainApi","tonva","toUser","fromUnit","fromApp","fellow","isOwner","isAdmin","apps","member","assigned","roles","devApi","uqsText","service","admins_Admins","store","owners","admins","fellows","unitAdmins","ua","fellowId","unitSetAdmin","removeCur","admin","unitAddAdmin","dev_ObjItems","dev","_load","_save","_inc","_del","_dec","dev_decorate","dev_Apps","searchedUqs","saveApp","delApp","counts","searchUq","searchPageSize","allUqs","appBindUq","dev_Uqs","saveUq","delUq","dev_Buses","buses","saveBus","delBus","bus","checkBusFace","checkBusQuery","busTypes","refNameOk","faceName","refArrayOk","checkBusQueryParam","dev_Servers","servers","saveServer","delServer","server","dev_Services","services","saveService","delService","changeServiceProp","loadUqServices","SearchItems","dev_Dev","searchApp","searchServer","cacheIds_CacheUnits","cacheIds_CacheUqs","cacheIds_CacheApps","cacheIds_CacheServers","store_Store","cacheUnits","cacheUqs","cacheApps","cacheServers","memberCount","roleApps","roleMember","roleMembers","memberRoles","unitChangeProp","unitApps","unitMemberCount","uqServer","uqBuilderUrl","appId","unitDeleteApp","inUnit","unitAddApp","unitRoles","unitAddRole","unitRoleChangeProp","unitRoleApps","unitRoleSetApps","unitMembers","unitAssignMember","unitMemberRoles","rId","unitSetMemberRoles","org","store_decorate","store_store","NewFellow_NewFellowPage","onSendInvitation","NewFellow_awaiter","addNew","NewFellow","NewFellow_decorate","EditAdmin_EditAdmin","EditAdmin_awaiter","isRoot","unitAdmin","Fellow","Administors_EditAdmin","EditAdmin_decorate","Administors_AdministorsPage","onNewOwner","newAdmin","onNewAdmin","ownersView","adminsView","onNewFellow","showOwners","showAdmins","Administors","Administors_decorate","idDates_IdDates","date_init","date_update","span","isLink","unitSpan_UnitSpan","unitSpan_UnitInfo","unitSpan_decorate","unitSpan_UnitName","consts_appIcon","REACT_APP_ICON","REACT_APP_ITEM_ICON","uqSpan_UqSpan","uqSpan_UqInfo","api","uqSpan_decorate","appSpan_AppSpan","appSpan_AppInfo","public","appSpan_decorate","apis","appSpan_AppRow","serverSpan_ServerSpan","serverSpan_ServerInfo","cloud","ip","serverSpan_decorate","stringValueEdit_StringValueEdit","stringValueEdit_awaiter","errorDiv","info","idPickPage_IdPickPage","itemClick","idFromItem","idPickPage_awaiter","candidateItems","searchPlaceHolder","idPickPage_decorate","info_Info","renderUqRow","uqAccess","act","info_awaiter","appActed","newInUnit","restoreUnitApp","stopUnitApp","newApp","addUnitApp","uqAccesses","faName","info_decorate","new_PageApps","new_NewApp","new_awaiter","appClick","renderApp","new_decorate","Apps_AppsPage","loadApps","ban","src_Apps","Apps_decorate","newRole_NewRole","newRole_awaiter","roleApps_RoleApps","renderRoleApp","memberPage_MemberPage","renderMemberRole","setRole","memberPage_SetRole","loadRoles","loadMemberRoles","orgValue","roleUser","onAssigned","roleClick","memberPage_decorate","setMemberRoles","selectRole","renderRole","roleSelect","membersPage_MembersPage","loadMembers","MemberRow","setRoleUser","roleId","membersPage_MemberSearch","renderMember","userClick","membersPage_decorate","members","rolePage_RolePage","roleAppClick","rolePage_RoleApps","loadRoleApps","rolePage_EditRole","onMembersClick","membersLeft","membersRight","editRole","addRoleApp","rolePage_decorate","roleChangeProp","isSysRole","onNameChanged","onDiscriptionChanged","setRoleApps","appSelect","midClassName","Members_Members","newRole","allUsersClick","Members_decorate","ServerCaption","editPage_schema","editPage_EditBasePage","editPage_awaiter","moreCandidates","pickServerId","renderServerInput","itemId","editPage_EditPage","editPage_NewPage","appsPage_AppsPage","appList","listRowClick","appRow","spanCaption","appUqs_SearchUqPage","appUqs_awaiter","onUq","getMyUqs","appUqs_decorate","appUqs_AppUqs","removeBind","btnProps","appUqs_Uqs","listHeader","btn","onBind","appPage_AppPage","editItem","appPage_awaiter","deleteItem","deleteApp","menuItems","btnAddUq","uqClick","elAccess","bind_access","uqBindPage_UqBindPage","onCheckChanged","accessChecked","saveUqBind","uqBindPage_awaiter","removeUqBind","btnDelete","checkAccessList","bc","apps_AppController","apps_awaiter","service_count","buildBindUqs","isNew","uaUq","apps_decorate","groupStart","groupEnd","Section","resultSections_StringSection","resultSections_GroupSection","line","titleIcon","collaps","whiteSpace","resultSections_decorate","resultSections_ErrorSection","ResultSections","sectionId","sections","stop","addToGroup","addText","section","rowId","mayStart","addSection","uqUpload_UqUpload","upFiles","fileClick","fr","FileReader","onload","uqUpload_UqPage","readAsText","onUpload","uqUpload_awaiter","lastModifiedDate","trunc","sz","uqUpload_CompileResult","fileList","fileRender","encType","compiled","fast","thoroughly","description","uqUpload_deploy","uqUpload_UqDeploy","onCompile","compile","onCompileThoroughly","isThoroughly","autoScrollEnd","clearAutoScrollToBottom","timeHandler","clearInterval","doubleClick","pane","getParent","topIntoView","bottomIntoView","lastScrollTop","startAutoScrollToBottom","renderText","resultSections","abort","setInterval","scrollIntoView","tagName","parentElement","uintArray","encodedString","fromCharCode","decodeURIComponent","reader","read","done","startTime","compile_time","deploy_time","uintToString","total","byteLength","getReader","pump","endAutoScrollToBottom","onDoubleClick","wordWrap","fontWeight","uqUpload_decorate","createIdPick_IdPickPage","newServicePage_ServerCaption","urlRow","urlRowTest","serverRow","newServicePage_awaiter","dbRow","newServicePage_NewServicePage","bindId","tonva_form","tonvaForm","servicePage_ServicePage","onUrlChanged","servicePage_awaiter","changeProp","onUrlTestChanged","onDbChanged","onDeleteClick","servicePage_decorate","editPage_formRows","uqs_editPage_EditBasePage","uqs_editPage_awaiter","uqs_editPage_EditPage","uqs_editPage_NewPage","uqPage_UQPage","uqPage_awaiter","deleteUq","onServiceClick","onUqUpload","onUqTest","onUqDeploy","serviceClick","btnAddService","showNewServicePage","renderService","deploy","listPage_ListPage","batchCompile","batchCompilePage","uqList","listCompileRow","testThoroughly","deployThoroughly","cnBtn","bar","selectItems","uqController_UQController","uqController_awaiter","loadUqEntities","uqGetEntities","r0","svc","uqController_decorate","buses_Info","mine","buses_SchemaView","buses_decorate","repeated","canEdit","ObjView_ObjView","ObjView_Info","ObjView_New","ObjView_decorate","saveCur","stepHeader","ObjView_Edit","ex","extraMenuActions","vApps_VApps","appUsers","users","appUsersList","onAppsClick","searchBox","vUsers_VUsers","userApps","userAppsList","searchUser","onUsersClick","vApp_VApp","curApp","curAppUsers","onAppEditUsers","vUser_VUser","curUser","curUserApps","onUserEditApps","vAppEditUsers_VAppEditUsers","appEditUsers","renderUser","editUser","onUserChanged","vAppEditUsers_awaiter","bindAppUser","vUserEditApps_VUserEditApps","userEditApps","editApp","onAppChanged","vUserEditApps_awaiter","bindUserApp","VAddUser_VAddUser","onSearchFocus","divUser","onAddUser","VAddUser_awaiter","userFromKey","addUser","addedPage","onAddApps","onContinueAddUser","VAddUser_decorate","cUsers_UsersController","onAppUsers","cUsers_awaiter","loadAppUsers","onUserApps","loadUserApps","unitOneAppUsers","unitOneUserApps","unitAppEditUsers","unitUserEditApps","unitAddUser","appIcon","userIcon","unitAppUsers","coll","unitUsers","cUsers_decorate","Admin_CAdmin","userAdminUnits","adminUnits","loadUnit","isProduction","loadAdminUnits","Admin_VAdmin","selectUnitPage","noUnitPage","Admin_awaiter","Admin_AdminPage","rArrow","typeCaptions","1","2","3","appsAction","usersAction","newUsersAction","adminsAction","noneAction","mid","objProps","P","loadCounts","appAction","uqAction","busAction","serverAction","vice","Admin_UnitProps","Admin_decorate","src_App_0","cAdmin","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","react_dom","URL","origin","response","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.0ef699aa.chunk.js","sourcesContent":["export * from './tool';\r\nexport * from './net';\r\nexport * from './components';\r\nexport * from './entry';\r\nexport * from './uq';\r\nexport * from './CApp';\r\nexport * from './app';\r\n","export * from './nav';\r\nexport * from './pageHeader';\r\nexport * from './page';\r\nexport * from './VM';\r\nexport * from './schema';\r\nexport * from './form';\r\nexport * from './edit';\r\nexport * from './res';\r\nexport * from './tabs';\r\nexport * from './loading';\r\nexport * from './image';\r\nexport * from './resUploader';\r\nexport * from './rules';\r\nexport * from './list';\r\nexport * from './dropDownActions';\r\nexport * from './easyDate';\r\nexport * from './propGrid';\r\nexport * from './simple';\r\nexport * from './media';\r\nexport * from './searchBox';\r\n","import * as React from 'react';\r\nimport { VPage } from '../components';\r\nimport { Entity, Field } from '../uq';\r\nimport { CUq } from './cUq/cUq';\r\nimport { VForm, FieldInputs, FieldCall, FormOptions, FormMode } from './form';\r\nimport { CQuerySelect } from './query';\r\nimport { FormUI, FieldTuidUI } from './formUI';\r\nimport { entityIcons } from './icons';\r\nimport { ControllerUq } from './ControllerUq';\r\n\r\nexport interface EntityUI {\r\n    form?: FormUI;\r\n}\r\n\r\nexport abstract class CEntity<T extends Entity, UI extends EntityUI> extends ControllerUq {\r\n    constructor(cUq: CUq, entity: T, ui: UI, res: any) {\r\n        super(cUq, res);\r\n        Object.setPrototypeOf(this.x, cUq.x);\r\n        let {name, typeName} = entity;\r\n        this.entity = entity;\r\n        this.ui = ui; // || entityUI.ui;\r\n        this.label = this.res.label || name;\r\n        this.icon = entityIcons[typeName];\r\n    }\r\n    readonly entity: T;\r\n    readonly ui: UI;\r\n\r\n    protected async beforeStart():Promise<boolean> {\r\n        //if (await super.beforeStart() === false) return false;\r\n        await this.entity.loadSchema();\r\n        return true;\r\n    }\r\n\r\n    createForm(onSubmit:()=>Promise<void>, values?:any, mode?:FormMode) {\r\n        let options = this.buildFormOptions(mode);\r\n        let ret = new VForm(options, onSubmit);\r\n        ret.setValues(values);\r\n        return ret;\r\n    }\r\n\r\n    private buildFormOptions(mode?:FormMode):FormOptions {\r\n        let {fields, arrFields} = this.entity;\r\n        let none, submitCaption, arrNewCaption, arrEditCaption, arrTitleNewButton;\r\n        if (this.res !== undefined) {\r\n            none = this.res['none'];\r\n            submitCaption = this.res['submit'];\r\n            arrNewCaption = this.res['arrNew'];\r\n            arrEditCaption = this.res['arrEdit'];\r\n            arrTitleNewButton = this.res['arrTitleNewButton'];\r\n        }\r\n        if (none === undefined) {\r\n            none = this.cUq.res['none'] || 'none';\r\n        }\r\n        if (submitCaption === undefined)\r\n            submitCaption = this.cUq.res['submit'] || 'Submit';\r\n        if (arrNewCaption === undefined)\r\n            arrNewCaption = this.cUq.res['arrNew'] || 'New';\r\n        if (arrEditCaption === undefined)\r\n            arrEditCaption = this.cUq.res['arrEdit'] || 'Edit';\r\n        if (arrTitleNewButton === undefined)\r\n        arrTitleNewButton = this.cUq.res['arrTitleNewButton'];\r\n        if (mode === undefined) mode = FormMode.new;\r\n        let formUI = this.ui.form;\r\n        let ret:FormOptions = {\r\n            fields: fields,\r\n            arrs: arrFields,\r\n            ui: formUI,\r\n            res: this.res || {},\r\n            inputs: this.buildInputs(formUI),\r\n            none: none,\r\n            submitCaption: submitCaption,\r\n            arrNewCaption: arrNewCaption,\r\n            arrEditCaption: arrEditCaption,\r\n            arrTitleNewButton: arrTitleNewButton,\r\n            mode: mode,\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private buildInputs(formUI: FormUI):FieldInputs {\r\n        let {fields, arrFields} = this.entity;\r\n        let ret:FieldInputs = {};\r\n        this.buildFieldsInputs(ret, fields, undefined, formUI);\r\n        if (arrFields !== undefined) {\r\n            for (let arr of arrFields) {\r\n                let {name, fields} = arr;\r\n                let items = formUI && formUI.items;\r\n                this.buildFieldsInputs(ret, fields, name, items && items[name] as FormUI);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private buildFieldsInputs(ret:FieldInputs, fields:Field[], arr:string, formUI: FormUI) {\r\n        if (arr !== undefined) {\r\n            let arrFieldInputs = ret[arr];\r\n            if (arrFieldInputs === undefined) {\r\n                ret[arr] = arrFieldInputs = {};\r\n                ret = arrFieldInputs;\r\n            }\r\n        }\r\n        for (let field of fields) {\r\n            let {name, _tuid} = field;\r\n            if (_tuid === undefined) continue;\r\n            let {tuid} = _tuid;\r\n            let fieldUI = formUI && formUI.items && formUI.items[name] as FieldTuidUI;\r\n            ret[name] = {\r\n                select: this.buildSelect(field, arr, fieldUI),\r\n                content: this.buildContent(field, arr),\r\n                placeHolder: this.cUq.getTuidPlaceHolder(tuid),\r\n            };\r\n        }\r\n    }\r\n\r\n    protected buildSelect(field:Field, arr:string, fieldUI: FieldTuidUI):FieldCall {\r\n        return async (form:VForm, field:Field, values:any):Promise<any> => {\r\n            let {_tuid } = field;\r\n            let {ownerField} = _tuid;\r\n            let cTuidSelect = undefined; // await tuid.cSelectFrom();\r\n            return;\r\n            // eslint-disable-next-line\r\n            let param:any = undefined;\r\n            if (ownerField !== undefined) param = form.getValue(ownerField.name);\r\n            if (fieldUI && fieldUI.autoList === true) {\r\n                console.log('select search set param=empty string');\r\n                param = '';\r\n            }\r\n            let ret = await cTuidSelect.call(param);\r\n            cTuidSelect.removeCeased(); // 清除已经废弃的顶部页面\r\n            if (ret === undefined) return undefined;\r\n            let id = cTuidSelect.idFromItem(ret);\r\n            _tuid.useId(id);\r\n            return id;\r\n        };\r\n    }\r\n\r\n    protected buildContent(field:Field, arr:string): React.StatelessComponent<any> {\r\n        return;\r\n    }\r\n\r\n    cQuerySelect(queryName:string):CQuerySelect {\r\n        return this.cUq.cQuerySelect(queryName);\r\n    }\r\n}\r\n\r\nexport abstract class VEntity<T extends Entity, UI extends EntityUI, C extends CEntity<T, UI>> extends VPage<C> {\r\n    protected readonly entity: T;\r\n    protected readonly ui: UI;\r\n    constructor(controller: C) {\r\n        super(controller);\r\n        this.entity = controller.entity;\r\n        this.ui = controller.ui;\r\n    }\r\n\r\n    get label():string {return this.controller.label}\r\n\r\n    //private _form_$: VForm;\r\n    protected createForm(onSubmit:()=>Promise<void>, values?:any, mode?:FormMode): VForm {\r\n        //if (this._form_$ !== undefined) return this._form_$;\r\n        return this.controller.createForm(onSubmit, values, mode);\r\n    }\r\n}\r\n","import { decodeGuestToken } from '../tool/user';\r\nimport { CenterApiBase } from './uqApi';\r\n\r\nexport class GuestApi extends CenterApiBase {\r\n    async guest(): Promise<any> {\r\n        //let guest = nav.local.guest.get();\r\n        let ret = await this.get('', {});\r\n        switch (typeof ret) {\r\n            default: return;\r\n            case 'string': return decodeGuestToken(ret);\r\n            case 'object':\r\n                let guest = decodeGuestToken(ret.token);\r\n                return guest;\r\n        }\r\n    }\r\n\r\n    async unitFromName(unitName:string): Promise<number> {\r\n        let ret = await this.get(unitName);\r\n        return ret && ret.unit;\r\n    }\r\n}\r\n\r\nexport const guestApi = new GuestApi('tv/guest/', undefined);\r\n","export abstract class Caller<T> {\r\n    protected readonly params: T;\r\n    constructor(params: T) {\r\n        this.params = params;\r\n    }\r\n    buildParams():any {return this.params;}\r\n    method: string  = 'POST';\r\n    abstract get path(): string;\r\n    get headers(): {[header:string]: string} {return undefined}\r\n}\r\n","export {WSChannel, wsBridge, postWsToTop} from './wsChannel';\r\nexport * from './apiBase';\r\nexport * from './guestApi';\r\nexport * from './caller';\r\nexport * from './uqApi';\r\nexport {appInFrame, isBridged, getExHash} from './appBridge';\r\nexport * from './host';\r\n//export {userApi} from './userApi';","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport {User, Guest/*, UserInNav*/} from '../tool/user';\r\nimport {Page} from './page';\r\nimport {netToken} from '../net/netToken';\r\nimport FetchErrorView from './fetchErrorView';\r\nimport {FetchError} from '../net/fetchError';\r\nimport {appUrl, setAppInFrame, getExHash, getExHashPos} from '../net/appBridge';\r\nimport {LocalData, env} from '../tool';\r\nimport {guestApi, logoutApis, setCenterUrl, setCenterToken, WSChannel, appInFrame, host, resUrlFromHost} from '../net';\r\nimport { WsBase, wsBridge } from '../net/wsChannel';\r\nimport { resOptions } from './res';\r\nimport { Loading } from './loading';\r\n\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport '../css/va-form.css';\r\nimport '../css/va.css';\r\nimport '../css/animation.css';\r\nimport { FA } from './simple';\r\nimport { userApi } from '../net';\r\n\r\n/*\r\nconst regEx = new RegExp('Android|webOS|iPhone|iPad|' +\r\n    'BlackBerry|Windows Phone|'  +\r\n    'Opera Mini|IEMobile|Mobile' , \r\n    'i');\r\nconst isMobile = regEx.test(navigator.userAgent);\r\n*/\r\n/*\r\nexport const mobileHeaderStyle = isMobile? {\r\n    minHeight:  '3em'\r\n} : undefined;\r\n*/\r\n//const logo = require('../img/logo.svg');\r\nlet logMark: number;\r\nconst logs:string[] = [];\r\n\r\nexport interface Props //extends React.Props<Nav>\r\n{\r\n    //view: JSX.Element | (()=>JSX.Element);\r\n    //start?: ()=>Promise<void>;\r\n    onLogined: ()=>Promise<void>;\r\n    notLogined?: ()=>Promise<void>;\r\n};\r\nlet stackKey = 1;\r\nexport interface StackItem {\r\n    key: number;\r\n    view: JSX.Element;\r\n    ceased: boolean;\r\n    confirmClose?: ()=>Promise<boolean>;\r\n    disposer?: ()=>void;\r\n}\r\nexport interface NavViewState {\r\n    stack: StackItem[];\r\n    wait: 0|1|2;\r\n    fetchError: FetchError\r\n}\r\n\r\nexport class NavView extends React.Component<Props, NavViewState> {\r\n    private stack: StackItem[];\r\n    private htmlTitle: string;\r\n    private waitCount: number = 0;\r\n    private waitTimeHandler?: NodeJS.Timer;\r\n\r\n    constructor(props:Props) {\r\n        super(props);\r\n        this.back = this.back.bind(this);\r\n        this.navBack = this.navBack.bind(this);\r\n        this.stack = [];\r\n        this.state = {\r\n            stack: this.stack,\r\n            wait: 0,\r\n            fetchError: undefined\r\n        };\r\n    }\r\n    /*\r\n    async componentWillMount() {\r\n        window.addEventListener('popstate', this.navBack);\r\n    }\r\n    */\r\n    async componentDidMount()\r\n    {\r\n        window.addEventListener('popstate', this.navBack);\r\n        nav.set(this);\r\n        /*\r\n        let start = this.props.start;\r\n        if (start !== undefined) {\r\n            await start();\r\n        }\r\n        else {\r\n        */\r\n            await nav.start();\r\n        //}\r\n    }\r\n\r\n    get level(): number {\r\n        return this.stack.length;\r\n    }\r\n\r\n    startWait() {\r\n        if (this.waitCount === 0) {\r\n            this.setState({wait: 1});\r\n            this.waitTimeHandler = global.setTimeout(\r\n                () => {\r\n                    this.waitTimeHandler = undefined;\r\n                    this.setState({wait: 2});\r\n                },\r\n                1000) as NodeJS.Timer;\r\n        }\r\n        ++this.waitCount;\r\n        this.setState({\r\n            fetchError: undefined,\r\n        });\r\n    }\r\n\r\n    endWait() {\r\n        setTimeout(() => {\r\n            /*\r\n            this.setState({\r\n                fetchError: undefined,\r\n            });*/\r\n            --this.waitCount;\r\n            if (this.waitCount === 0) {\r\n                if (this.waitTimeHandler !== undefined) {\r\n                    clearTimeout(this.waitTimeHandler);\r\n                    this.waitTimeHandler = undefined;\r\n                }\r\n                this.setState({wait: 0});\r\n            }\r\n        },100);\r\n    }\r\n\r\n    async onError(fetchError: FetchError)\r\n    {\r\n        let err = fetchError.error;\r\n        if (err !== undefined && err.unauthorized === true) {\r\n            await nav.showLogin(undefined);\r\n            return;\r\n        }\r\n        this.setState({\r\n            fetchError: fetchError,\r\n        });\r\n    }\r\n\r\n    private upgradeUq = () => {\r\n        nav.start();\r\n    }\r\n\r\n    async showUpgradeUq(uq:string, version:number):Promise<void> {\r\n        this.show(<Page header={false}>\r\n            <div>\r\n                UQ升级了，请点击按钮升级 <br />\r\n                <small className=\"text-muted\">{uq} ver-{version}</small>\r\n                <button className=\"btn btn-primary\" onClick={this.upgradeUq}>升级</button>\r\n            </div>\r\n        </Page>)\r\n    }\r\n\r\n    show(view: JSX.Element, disposer?: ()=>void): number {\r\n        this.clear();\r\n        return this.push(view, disposer);\r\n    }\r\n\r\n    push(view: JSX.Element, disposer?: ()=>void): number {\r\n        this.removeCeased();\r\n        if (this.stack.length > 0) {\r\n            window.history.pushState('forward', null, null);\r\n        }\r\n        let key = stackKey++;\r\n        this.stack.push({\r\n            key: key,\r\n            view: view, \r\n            ceased: false,\r\n            disposer: disposer\r\n        });\r\n        this.refresh();\r\n        //console.log('push: %s pages', this.stack.length);\r\n        return key;\r\n    }\r\n\r\n    replace(view: JSX.Element, disposer?: ()=>void): number {\r\n        let item:StackItem = undefined;\r\n        let stack = this.stack;\r\n        if (stack.length > 0) {\r\n            item = stack.pop();\r\n            //this.popAndDispose();\r\n        }\r\n        let key = stackKey++;\r\n        this.stack.push({\r\n            key: key, \r\n            view: view, \r\n            ceased: false,\r\n            disposer: disposer\r\n        });\r\n        if (item !== undefined) this.dispose(item.disposer);\r\n        this.refresh();\r\n        //console.log('replace: %s pages', this.stack.length);\r\n        return key;\r\n    }\r\n\r\n    ceaseTop(level:number = 1) {\r\n        let p = this.stack.length - 1;\r\n        for (let i=0; i<level; i++, p--) {\r\n            if (p < 0) break;\r\n            let item = this.stack[p];\r\n            item.ceased = true;\r\n        }\r\n    }\r\n\r\n    pop(level:number = 1) {\r\n        let stack = this.stack;\r\n        let len = stack.length;\r\n        //console.log('pop start: %s pages level=%s', len, level);\r\n        if (level <= 0 || len <= 1) return;\r\n        if (len < level) level = len;\r\n        let backLevel = 0;\r\n        for (let i = 0; i < level; i++) {\r\n            if (stack.length === 0) break;\r\n            //stack.pop();\r\n            this.popAndDispose();\r\n            ++backLevel;\r\n        }\r\n        if (backLevel >= len) backLevel--;\r\n        this.refresh();\r\n        if (this.isHistoryBack !== true) {\r\n            //window.removeEventListener('popstate', this.navBack);\r\n            //window.history.back(backLevel);\r\n            //window.addEventListener('popstate', this.navBack);\r\n        }\r\n        //console.log('pop: %s pages', stack.length);\r\n    }\r\n\r\n    popTo(key: number) {\r\n        if (key === undefined) return;\r\n        if (this.stack.find(v => v.key === key) === undefined) return;\r\n        while (this.stack.length >0) {\r\n            let len = this.stack.length;\r\n            let top = this.stack[len-1];\r\n            if (top.key === key) break;\r\n            this.pop();\r\n        }\r\n    }\r\n\r\n    topKey():number {\r\n        let len = this.stack.length;\r\n        if (len === 0) return undefined;\r\n        return this.stack[len-1].key;\r\n    }\r\n\r\n    removeCeased() {\r\n        for (;;) {\r\n            let p=this.stack.length-1;\r\n            if (p < 0) break;\r\n            let top = this.stack[p];\r\n            if (top.ceased === false) break;\r\n            let item = this.stack.pop();\r\n            let {disposer} = item;\r\n            this.dispose(disposer);\r\n        }\r\n        this.refresh();\r\n    }\r\n\r\n    private popAndDispose() {\r\n        this.removeCeased();\r\n        let item = this.stack.pop();\r\n        if (item === undefined) return;\r\n        let {disposer} = item;\r\n        this.dispose(disposer);\r\n        this.removeCeased();\r\n        return item;\r\n    }\r\n\r\n    private dispose(disposer:()=>void) {\r\n        if (disposer === undefined) return;\r\n        let item = this.stack.find(v => v.disposer === disposer);\r\n        if (item === undefined) disposer();\r\n    }\r\n\r\n    clear() {\r\n        let len = this.stack.length;\r\n        while (this.stack.length > 0) this.popAndDispose();\r\n        //this.refresh();\r\n        if (len > 1) {\r\n            //window.removeEventListener('popstate', this.navBack);\r\n            //window.history.back(len-1);\r\n            //window.addEventListener('popstate', this.navBack);\r\n        }\r\n    }\r\n\r\n    regConfirmClose(confirmClose:()=>Promise<boolean>) {\r\n        let stack = this.stack;\r\n        let len = stack.length;\r\n        if (len === 0) return;\r\n        let top = stack[len-1];\r\n        top.confirmClose = confirmClose;\r\n    }\r\n\r\n    private isHistoryBack:boolean = false;\r\n    navBack() {\r\n        nav.log('backbutton pressed - nav level: ' + this.stack.length);\r\n        this.isHistoryBack = true;\r\n        this.back(true);\r\n        this.isHistoryBack = false;\r\n    }\r\n\r\n    async back(confirm:boolean = true) {\r\n        let stack = this.stack;\r\n        let len = stack.length;\r\n        if (len === 0) return;\r\n        if (len === 1) {\r\n            if (window.self !== window.top) {\r\n                window.top.postMessage({type:'pop-app'}, '*');\r\n            }\r\n            return;\r\n        }\r\n        let top = stack[len-1];\r\n        if (confirm===true && top.confirmClose) {\r\n            if (await top.confirmClose()===true) this.pop();\r\n        }\r\n        else {\r\n            this.pop();\r\n        }\r\n    }\r\n\r\n    confirmBox(message?:string): boolean {\r\n        return window.confirm(message);\r\n    }\r\n    clearError = () => {\r\n        this.setState({fetchError: undefined});\r\n    }\r\n    /*\r\n    private clickCount = 0;\r\n    private firstClick: number = 0;\r\n    private clickRange = 3000;\r\n    private clickMax = 6;\r\n    private onClick = () => {\r\n        let now = Date.now();\r\n        if (now - this.firstClick > this.clickRange) {\r\n            this.clickCount = 1;\r\n            this.firstClick = now;\r\n            return;\r\n        }\r\n        ++this.clickCount;\r\n        if (this.clickCount >= this.clickMax) {\r\n            nav.reverseTest();\r\n            this.firstClick = 0;\r\n            return;\r\n        }\r\n    }\r\n    */\r\n    /*\r\n    private onTestClick = () => {\r\n        nav.testing = false;\r\n        nav.push(<Page header={false}>\r\n            <div className=\"m-5 border border-info bg-white rounded p-4 text-center\">\r\n                <div>当前运行在测试模式</div>\r\n                <div className=\"mt-4\">\r\n                    <button className=\"btn btn-danger\" onClick={nav.toNormal}>正常模式</button>\r\n                    <button className=\"btn btn-outline-info ml-3\" onClick={()=>{nav.testing=true;this.pop()}}>测试模式</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n    }\r\n    */\r\n    render() {\r\n        const {wait, fetchError} = this.state;\r\n        let stack = this.state.stack;\r\n        let top = stack.length - 1;\r\n        let elWait = null, elError = null;\r\n        switch (wait) {\r\n            case 1:\r\n                elWait = <li className=\"va-wait va-wait1\">\r\n                </li>;\r\n                break;\r\n            case 2:\r\n                elWait = <li className=\"va-wait va-wait2\">\r\n                    <Loading />\r\n                </li>;\r\n                break;\r\n        }\r\n        if (fetchError)\r\n            elError = <FetchErrorView clearError={this.clearError} {...fetchError} />;\r\n        let test = nav.testing===true && \r\n            <span className=\"cursor-pointer position-absolute\" style={{lineHeight:0}}>\r\n                <FA className=\"text-warning\" name=\"info-circle\" />\r\n            </span>;\r\n        //onClick={this.onClick}\r\n        return (\r\n        <ul className=\"va\">\r\n            {\r\n                stack.map((item, index) => {\r\n                    let {key, view} = item;\r\n                    return <li key={key} style={index<top? {visibility: 'hidden'}:undefined}>\r\n                        {view}\r\n                    </li>\r\n                })\r\n            }\r\n            {elWait}\r\n            {elError}\r\n            {test}\r\n        </ul>\r\n        );\r\n    }\r\n\r\n    private refresh() {\r\n        // this.setState({flag: !this.state.flag});\r\n        this.setState({stack: this.stack });\r\n        // this.forceUpdate();\r\n    }\r\n}\r\n\r\nexport interface NavSettings {\r\n    oem?: string;\r\n    loginTop?: JSX.Element;\r\n}\r\n\r\nexport class Nav {\r\n    private nav:NavView;\r\n    private ws: WsBase;\r\n    private wsHost: string;\r\n    private local: LocalData = new LocalData();\r\n    private navSettings: NavSettings;\r\n    @observable user: User/*InNav*/ = undefined;\r\n    testing: boolean;\r\n    language: string;\r\n    culture: string;\r\n    resUrl: string;\r\n\r\n    constructor() {\r\n        let {lang, district} = resOptions;\r\n        this.language = lang;\r\n        this.culture = district;\r\n        this.testing = false;\r\n    }\r\n\r\n    get guest(): number {\r\n        let guest = this.local.guest;\r\n        if (guest === undefined) return 0;\r\n        let g = guest.get();\r\n        if (g === undefined) return 0;\r\n        return g.guest;\r\n    }\r\n\r\n    set(nav:NavView) {\r\n        //this.logo = logo;\r\n        this.nav = nav;\r\n    }\r\n\r\n    registerReceiveHandler(handler: (message:any)=>Promise<void>):number {\r\n        if (this.ws === undefined) return;\r\n        return this.ws.onWsReceiveAny(handler);\r\n    }\r\n\r\n    unregisterReceiveHandler(handlerId:number) {\r\n        if (this.ws === undefined) return;\r\n        if (handlerId === undefined) return;\r\n        this.ws.endWsReceive(handlerId);\r\n    }\r\n\r\n    /*\r\n    private static testMode = '测试';\r\n    private static normalMode = '正常';\r\n    private setTesting(testing:boolean) {\r\n        this.testing = testing;\r\n        this.local.testing.set(testing);\r\n    };\r\n    private resetTest = () => {\r\n        this.setTesting(!this.testing);\r\n        //this.pop();\r\n        this.start();\r\n    }\r\n    toNormal = () => {\r\n        this.setTesting(false);\r\n        this.start();\r\n    }\r\n    reverseTest() {\r\n        let m1:string, m2:string;\r\n        if (this.testing === true) {\r\n            m1 = Nav.testMode;\r\n            m2 = Nav.normalMode;\r\n        }\r\n        else {\r\n            m1 = Nav.normalMode;\r\n            m2 = Nav.testMode;\r\n        }\r\n\r\n        this.push(<Page back=\"close\" header={false}>\r\n            <div className=\"m-5 border border-info bg-white rounded p-4 text-center\">\r\n                <div>\r\n                    <p>从{m1}模式切换到{m2}模式吗?</p>\r\n                    <p className=\"small text-muted\">测试模式下，页面左上角会有一个 <FA className=\"text-warning\" name=\"info-circle\" /></p>\r\n                </div>\r\n                <div className=\"mt-4\">\r\n                    <button className=\"btn btn-danger\" onClick={this.resetTest}>切换</button>\r\n                    <button className=\"btn btn-outline-info ml-3\" onClick={()=>this.pop()}>取消</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n    }\r\n    */\r\n\r\n    async onReceive(msg:any) {\r\n        if (this.ws === undefined) return;\r\n        await this.ws.receive(msg);\r\n    }\r\n\r\n    private async getPredefinedUnitName() {\r\n        try {\r\n            let unitJsonPath = this.unitJsonPath();\r\n            let unitRes = await fetch(unitJsonPath, {});\r\n            let res = await unitRes.json();\r\n            return res.unit;\r\n        }\r\n        catch (err) {\r\n            this.local.unit.remove();\r\n            return;\r\n        }\r\n    }\r\n\r\n    private async loadPredefinedUnit() {\r\n        let envUnit = process.env.REACT_APP_UNIT;\r\n        if (envUnit !== undefined) {\r\n            return Number(envUnit);\r\n        }\r\n        let unitName:string;\r\n        let unit = this.local.unit.get();\r\n        if (unit !== undefined) {\r\n            if (env.isDevelopment !== true) return unit.id;\r\n            unitName = await this.getPredefinedUnitName();\r\n            if (unitName === undefined) return;\r\n            if (unit.name === unitName) return unit.id;\r\n        }\r\n        else {\r\n            unitName = await this.getPredefinedUnitName();\r\n            if (unitName === undefined) return;\r\n        }\r\n        let unitId = await guestApi.unitFromName(unitName);\r\n        if (unitId !== undefined) {\r\n            this.local.unit.set({id: unitId, name: unitName});\r\n        }\r\n        return unitId;\r\n    }\r\n\r\n    setSettings(settings?: NavSettings) {\r\n        this.navSettings = settings;\r\n    }\r\n\r\n    get oem():string {\r\n        return this.navSettings && this.navSettings.oem;\r\n    }\r\n\r\n    hashParam: string;\r\n    private centerHost: string;\r\n    private arrs = ['/test', '/test/'];\r\n    private unitJsonPath():string {\r\n        let {href} = document.location;\r\n        href = href.toLowerCase();\r\n        for (let item of this.arrs) {\r\n            if (href.endsWith(item) === true) {\r\n                href = href.substr(0, href.length - item.length);\r\n                break;\r\n            }\r\n        }\r\n        if (href.endsWith('/') === true || href.endsWith('\\\\') === true) {\r\n            href = href.substr(0, href.length-1);\r\n        }\r\n        return href + '/unit.json';\r\n    }\r\n    async start() {\r\n        try {\r\n            this.testing = env.testing;\r\n            await host.start(this.testing);\r\n            let hash = document.location.hash;\r\n            if (hash !== undefined && hash.length > 0) {\r\n                let pos = getExHashPos();\r\n                if (pos < 0) pos = undefined;\r\n                this.hashParam = hash.substring(1, pos);\r\n            }\r\n            nav.clear();\r\n            this.startWait();\r\n            let {url, ws, resHost} = host;\r\n            this.centerHost = url;\r\n            this.resUrl = resUrlFromHost( resHost);\r\n            this.wsHost = ws;\r\n            setCenterUrl(url);\r\n            \r\n            let guest:Guest = this.local.guest.get();\r\n            if (guest === undefined) {\r\n                guest = await guestApi.guest();\r\n            }\r\n            nav.setGuest(guest);\r\n\r\n            let exHash = getExHash();\r\n            let appInFrame = setAppInFrame(exHash);\r\n            if (exHash !== undefined && window !== window.parent) {\r\n                // is in frame\r\n                if (appInFrame !== undefined) {\r\n                    this.ws = wsBridge;\r\n                    console.log('this.ws = wsBridge in sub frame');\r\n                    //nav.user = {id:0} as User;\r\n                    if (window.self !== window.parent) {\r\n                        window.parent.postMessage({type:'sub-frame-started', hash: appInFrame.hash}, '*');\r\n                    }\r\n                    // 下面这一句，已经移到 appBridge.ts 里面的 initSubWin，也就是响应从main frame获得user之后开始。\r\n                    //await this.showAppView();\r\n                    return;\r\n                }\r\n            }\r\n\r\n            let predefinedUnit = await this.loadPredefinedUnit();\r\n            appInFrame.predefinedUnit = predefinedUnit;\r\n\r\n            let user: User = this.local.user.get();\r\n            if (user === undefined) {\r\n                let {notLogined} = this.nav.props;\r\n                if (notLogined !== undefined) {\r\n                    await notLogined();\r\n                }\r\n                else {\r\n                    await nav.showLogin(undefined);\r\n                }\r\n                return;\r\n            }\r\n\r\n            await nav.logined(user);\r\n        }\r\n        catch (err) {\r\n        }\r\n        finally {\r\n            this.endWait();\r\n        }\r\n    }\r\n\r\n    async showAppView() {\r\n        let {onLogined} = this.nav.props;\r\n        if (onLogined === undefined) {\r\n            nav.push(<div>NavView has no prop onLogined</div>);\r\n            return;\r\n        }\r\n        nav.clear();\r\n        await onLogined();\r\n        console.log('logined: AppView shown');\r\n    }\r\n\r\n    setGuest(guest: Guest) {\r\n        this.local.guest.set(guest);\r\n        netToken.set(0, guest.token);\r\n    }\r\n\r\n    saveLocalUser() {\r\n        this.local.user.set(this.user);\r\n    }\r\n\r\n    async loadMe() {\r\n        let me = await userApi.me();\r\n        this.user.icon = me.icon;\r\n        this.user.nick = me.nick;\r\n    }\r\n\r\n    async logined(user: User, callback?: (user:User)=>Promise<void>) {\r\n        logoutApis();\r\n        console.log(\"logined: %s\", JSON.stringify(user));\r\n        this.user = user;\r\n        this.saveLocalUser();\r\n        netToken.set(user.id, user.token);\r\n        if (callback !== undefined) //this.loginCallbacks.has)\r\n            callback(user);\r\n            //this.loginCallbacks.call(user);\r\n        else {\r\n            await this.showAppView();\r\n        }\r\n    }\r\n\r\n    wsConnect() {\r\n        let ws:WSChannel = this.ws = new WSChannel(this.wsHost, this.user.token);\r\n        ws.connect();\r\n    }\r\n\r\n    loginTop(defaultTop:JSX.Element) {\r\n        return (this.navSettings && this.navSettings.loginTop) || defaultTop;\r\n    }\r\n\r\n    async showLogin(callback?: (user:User)=>Promise<void>, withBack?:boolean) {\r\n        let lv = await import('../entry/login');\r\n        let loginView = <lv.default \r\n            withBack={withBack} \r\n            callback={callback} />;\r\n        if (withBack !== true) {\r\n            this.nav.clear();\r\n            this.pop();\r\n        }\r\n        this.nav.push(loginView);\r\n    }\r\n\r\n    async showLogout(callback?: ()=>Promise<void>) {\r\n        nav.push(<Page header=\"安全退出\" back=\"close\">\r\n            <div className=\"m-5 border border-info bg-white rounded p-3 text-center\">\r\n                <div>退出当前账号不会删除任何历史数据，下次登录依然可以使用本账号</div>\r\n                <div className=\"mt-3\">\r\n                    <button className=\"btn btn-danger\" onClick={()=>this.logout(callback)}>退出</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n    }\r\n\r\n    async logout(callback?:()=>Promise<void>) { //notShowLogin?:boolean) {\r\n        appInFrame.unit = undefined;\r\n        this.local.logoutClear();\r\n        this.user = undefined; //{} as User;\r\n        logoutApis();\r\n        let guest = this.local.guest.get();\r\n        setCenterToken(0, guest && guest.token);\r\n        this.ws = undefined;\r\n        /*\r\n        if (this.loginCallbacks.has)\r\n            this.logoutCallbacks.call();\r\n        else {\r\n            if (notShowLogin === true) return;\r\n        }\r\n        await nav.start();\r\n        */\r\n        if (callback === undefined)\r\n            await nav.start();\r\n        else\r\n            await callback();\r\n    }\r\n\r\n    async changePassword() {\r\n        let cp = await import('../entry/changePassword');\r\n        nav.push(<cp.ChangePasswordPage />);\r\n    }\r\n\r\n    get level(): number {\r\n        return this.nav.level;\r\n    }\r\n    startWait() {\r\n        this.nav.startWait();\r\n    }\r\n    endWait() {\r\n        this.nav.endWait();\r\n    }\r\n    async onError(error: FetchError) {\r\n        await this.nav.onError(error);\r\n    }\r\n    async showUpgradeUq(uq:string, version:number):Promise<void> {\r\n        await this.nav.showUpgradeUq(uq, version);\r\n    }\r\n\r\n    show (view: JSX.Element, disposer?: ()=>void): void {\r\n        this.nav.show(view, disposer);\r\n    }\r\n    push(view: JSX.Element, disposer?: ()=>void): void {\r\n        this.nav.push(view, disposer);\r\n    }\r\n    replace(view: JSX.Element, disposer?: ()=>void): void {\r\n        this.nav.replace(view, disposer);\r\n    }\r\n    pop(level:number = 1) {\r\n        this.nav.pop(level);\r\n    }\r\n    topKey():number {\r\n        return this.nav.topKey();\r\n    }\r\n    popTo(key:number) {\r\n        this.nav.popTo(key);\r\n    }\r\n    clear() {\r\n        this.nav.clear();\r\n    }\r\n    navBack() {\r\n        this.nav.navBack();\r\n    }\r\n    ceaseTop(level?:number) {\r\n        this.nav.ceaseTop(level);\r\n    }\r\n    removeCeased() {\r\n        this.nav.removeCeased();\r\n    }\r\n    async back(confirm:boolean = true) {\r\n        await this.nav.back(confirm);\r\n    }\r\n    regConfirmClose(confirmClose: ()=>Promise<boolean>) {\r\n        this.nav.regConfirmClose(confirmClose);\r\n    }\r\n    confirmBox(message?:string): boolean {\r\n        return this.nav.confirmBox(message);\r\n    }\r\n    async navToApp(url: string, unitId: number, apiId?:number, sheetType?:number, sheetId?:number):Promise<void> {\r\n        return new Promise<void>((resolve, reject) => {\r\n            let sheet = this.centerHost.includes('http://localhost:') === true? 'sheet_debug':'sheet'\r\n            let uh = sheetId === undefined?\r\n                    appUrl(url, unitId) :\r\n                    appUrl(url, unitId, sheet, [apiId, sheetType, sheetId]);\r\n            console.log('navToApp: %s', JSON.stringify(uh));\r\n            nav.push(<article className='app-container'>\r\n                <span id={uh.hash} onClick={()=>this.back()} /*style={mobileHeaderStyle}*/>\r\n                    <i className=\"fa fa-arrow-left\" />\r\n                </span>\r\n                {\r\n                    // eslint-disable-next-line \r\n                    <iframe src={uh.url} title={String(sheetId)} />\r\n                }\r\n            </article>, \r\n            ()=> {\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n\r\n    navToSite(url: string) {\r\n        // show in new window\r\n        window.open(url);\r\n    }\r\n\r\n    get logs() {return logs};\r\n    log(msg:string) {\r\n        logs.push(msg);\r\n    }\r\n    logMark() {\r\n        let date = new Date();\r\n        logMark = date.getTime();\r\n        logs.push('log-mark: ' + date.toTimeString());\r\n    }\r\n    logStep(step:string) {\r\n        logs.push(step + ': ' + (new Date().getTime() - logMark));\r\n    }\r\n}\r\nexport const nav: Nav = new Nav();\r\n","import {observable} from 'mobx';\r\n\r\nexport interface Id {\r\n    id: number;\r\n}\r\n\r\nexport abstract class CacheIds<T extends Id> {\r\n    constructor(maxCount:number = 100) {\r\n        this.maxCount = maxCount;\r\n    }\r\n    private maxCount:number;\r\n    private arr:T[] = [];\r\n    @observable dict = new Map<number, T>();\r\n\r\n    loadIds(ids:number[]) {\r\n        let arr:number[] = [];\r\n        for (let id of ids) {\r\n            if (id === null) continue;\r\n            let item = this.dict.get(id);\r\n            if (item === undefined) {\r\n                arr.push(id);\r\n                item = {id:id} as T;\r\n                this.dict.set(id, item);\r\n            }\r\n        }                \r\n        this.loadId(arr);\r\n    }\r\n\r\n    get(id:number):T {\r\n        if (id === undefined || id === null) return null;\r\n        let item = this.dict.get(id);\r\n        if (item === undefined) {\r\n            this.dict.set(id, {id:id} as T);\r\n            this.loadId([id]);\r\n            item = this.dict.get(id);\r\n        }\r\n        return item;\r\n    }\r\n    private setItem(id:number, item:T) {\r\n        if (item === undefined) {\r\n            this.dict.set(id, null);\r\n            this.arr.push({id: id} as T);\r\n        }\r\n        else {\r\n            this.dict.set(id, item);\r\n            this.arr.push(item);\r\n        }\r\n        if (this.arr.length > this.maxCount) {\r\n            item = this.arr.shift();\r\n            this.dict.delete(item.id);\r\n        }\r\n    }\r\n    private async loadId(ids:number[]) {\r\n        let items = await this._loadIds(ids);\r\n        if (items === undefined) {\r\n            for (let id of ids) {\r\n                if (id === null) continue;\r\n                let item = await this._loadId(id);\r\n                this.setItem(id, item);\r\n            }\r\n        }\r\n        else {\r\n            for (let id of ids) {\r\n                let item = items.find(v => v.id === id);\r\n                this.setItem(id, item);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected abstract async _loadIds(ids:number[]):Promise<T[]>;\r\n    protected abstract async _loadId(id:number):Promise<T>;\r\n}\r\n","import _ from 'lodash';\r\n\r\nclass _LocalStorage {\r\n    getItem(key:string) {\r\n        return localStorage.getItem(key)\r\n    }\r\n    setItem(key:string, value:string) {\r\n        localStorage.setItem(key, value);\r\n    }\r\n    removeItem(key:string) {\r\n        localStorage.removeItem(key);\r\n    }\r\n}\r\n\r\nconst __ls = new _LocalStorage(); // new Ls;\r\n\r\nexport class LocalCache {\r\n    private readonly local: Local;\r\n    //private value: T;\r\n    readonly key: string|number;\r\n\r\n    constructor(local:Local, key:string|number) {\r\n        this.local = local;\r\n        this.key = key;\r\n    }\r\n    get():any {\r\n        try {\r\n            // 下面缓冲的内容不能有，可能会被修改，造成circular引用\r\n            //if (this.value !== undefined) return this.value;\r\n            let text = this.local.getItem(this.key);\r\n            if (text === null) return;\r\n            if (text === undefined) return undefined;\r\n            //return this.value = \r\n            return JSON.parse(text);\r\n        }\r\n        catch (err) {\r\n            this.local.removeItem(this.key);\r\n            return;\r\n        }\r\n    }\r\n    set(value:any) {\r\n        //this.value = value;\r\n        let t = JSON.stringify(value);\r\n        this.local.setItem(this.key, t);\r\n        /*\r\n        let text = Flatted.stringify(value, undefined, undefined);\r\n        let objs:object[] = [];\r\n        let circular:any = {};\r\n        let path:string[] = [];\r\n        try {\r\n            if (testCircular(value, objs, circular, path) === true) debugger;\r\n            let t = JSON.stringify(value);\r\n            this.local.setItem(this.key, t);\r\n        }\r\n        catch (e) {\r\n            let s = null;\r\n        }\r\n        */\r\n    }\r\n    remove(local?:Local) {\r\n        if (local === undefined) {\r\n            this.local.removeItem(this.key);\r\n            //this.value = undefined;\r\n        }\r\n        else {\r\n            this.local.removeLocal(local);\r\n        }\r\n    }\r\n    child(key:string|number):LocalCache {\r\n        return this.local.child(key);\r\n    }\r\n    arr(key:string|number):LocalArr {\r\n        return this.local.arr(key);\r\n    }\r\n    map(key:string|number):LocalMap {\r\n        return this.local.map(key);\r\n    }\r\n}\r\n\r\nabstract class Local {\r\n    private readonly caches: {[key:string]:LocalCache};\r\n    private readonly locals: {[key:string]:Local};\r\n    protected readonly name: string;\r\n    constructor(name: string) {\r\n        this.name = name;\r\n        this.caches = {};\r\n        this.locals = {};\r\n    }\r\n\r\n    protected abstract keyForGet(key:string|number):string;\r\n    protected abstract keyForSet(key:string|number):string;\r\n    protected abstract keyForRemove(key:string|number):string;\r\n    abstract removeAll():void;\r\n    getItem(key:string|number):string {\r\n        let k = this.keyForGet(key);\r\n        if (k === undefined) return;\r\n        return __ls.getItem(k);\r\n    }\r\n    setItem(key:string|number, value: string):void {\r\n        let k = this.keyForSet(key);\r\n        __ls.setItem(k, value);\r\n    }\r\n    removeItem(key:string|number):void {\r\n        let k = this.keyForSet(key);\r\n        if (k === undefined) return;\r\n        localStorage.removeItem(k);\r\n    }\r\n    arr(key:string|number):LocalArr {\r\n        let sk = String(key);\r\n        let arr = this.locals[sk] as LocalArr;\r\n        if (arr === undefined) {\r\n            let k = this.keyForSet(key);\r\n            this.locals[sk] = arr = new LocalArr(k);\r\n        }\r\n        return arr;\r\n    }\r\n    map(key:string|number):LocalMap {\r\n        let sk = String(key);\r\n        let map = this.locals[sk] as LocalMap;\r\n        if (map === undefined) {\r\n            let k = this.keyForSet(key);\r\n            this.locals[sk] = map = new LocalMap(k);\r\n        }\r\n        return map;\r\n    }\r\n    removeLocal(local:Local) {\r\n        let sk = local.name;\r\n        let k = this.keyForRemove(sk);\r\n        if (k === undefined) return;\r\n        let arr = this.locals[sk];\r\n        if (arr === undefined) arr = new LocalArr(k);\r\n        else this.locals[sk] = undefined;\r\n        arr.removeAll();\r\n    }\r\n    child(key:string|number):LocalCache {\r\n        let ks = String(key);\r\n        let ret = this.caches[ks];\r\n        if (ret !== undefined) return ret;\r\n        return this.caches[ks] =ret = new LocalCache(this, key);\r\n    }\r\n}\r\n\r\nconst maxArrSize = 500;\r\nexport class LocalArr extends Local {\r\n    private readonly index: number[];\r\n    constructor(name: string) {\r\n        super(name);\r\n        let index = __ls.getItem(this.name);\r\n        this.index = index === null? [] : index.split('\\n').map(v => Number(v));\r\n    }\r\n    private saveIndex() {\r\n        __ls.setItem(this.name, this.index.join('\\n'));\r\n    }\r\n    protected keyForGet(key:number):string {\r\n        let i = _.indexOf(this.index, key);\r\n        if (i < 0) return undefined;\r\n        return `${this.name}.${key}`;\r\n    }\r\n    protected keyForSet(key:number):string {\r\n        let i = _.indexOf(this.index, key);\r\n        if (i<0) {\r\n            this.index.unshift(key);\r\n            if (this.index.length > maxArrSize) this.index.pop();\r\n        }\r\n        else {\r\n            this.index.splice(i, 1);\r\n            this.index.unshift(key)\r\n        }\r\n        this.saveIndex();\r\n        return `${this.name}.${key}`;\r\n    }\r\n    protected keyForRemove(key:number):string {\r\n        let i = _.indexOf(this.index, key);\r\n        if (i<0) return;\r\n        this.index.splice(i, 1);\r\n        this.saveIndex();\r\n        return `${this.name}.${key}`;\r\n    }\r\n    removeAll():void {\r\n        for (let i of this.index) {\r\n            __ls.removeItem(`${this.name}.${i}`);\r\n        }\r\n        __ls.removeItem(this.name);\r\n        this.index.splice(0);\r\n    }\r\n    item(index:number):LocalCache {\r\n        return this.child(index);\r\n    }\r\n}\r\n\r\nexport class LocalMap extends Local {\r\n    private readonly index: {[key:string]:number};\r\n    private max: number;\r\n    constructor(name: string) {\r\n        super(name);\r\n        this.max = 0;\r\n        this.index = {};\r\n        let index = __ls.getItem(this.name);\r\n        if (index !== null) {\r\n            let ls = index.split('\\n');\r\n            ls.forEach(l => {\r\n                let p = l.indexOf('\\t');\r\n                if (p<0) return;\r\n                let key = l.substr(0, p);\r\n                let i = Number(l.substr(p+1));\r\n                if (isNaN(i) === true) return;\r\n                this.index[key] = i;\r\n                if (i>this.max) this.max = i;\r\n            });\r\n        }\r\n    }\r\n    private saveIndex() {\r\n        let ls:string[] = [];\r\n        for (let k in this.index) {\r\n            let v = this.index[k];\r\n            if (v === undefined) continue;\r\n            ls.push(`${k}\\t${v}`);\r\n        }\r\n        __ls.setItem(this.name, ls.join('\\n'));\r\n    }\r\n    protected keyForGet(key:number):string {\r\n        let i = this.index[key];\r\n        if (i === undefined) return undefined;\r\n        return `${this.name}.${i}`;\r\n    }\r\n    protected keyForSet(key:number):string {\r\n        let i = this.index[key];\r\n        if (i === undefined) {\r\n            ++this.max;\r\n            i = this.max;\r\n            this.index[key] = i;\r\n            this.saveIndex();\r\n        }\r\n        return `${this.name}.${i}`;\r\n    }\r\n    protected keyForRemove(key:string|number):string {\r\n        let i = this.index[key];\r\n        if (i===undefined) return;\r\n        this.index[key] = undefined;\r\n        this.saveIndex();\r\n        return `${this.name}.${i}`;\r\n    }\r\n    removeAll():void {\r\n        for (let i in this.index) {\r\n            __ls.removeItem(`${this.name}.${this.index[i]}`);\r\n            this.index[i] = undefined;\r\n        }\r\n        __ls.removeItem(this.name);\r\n        this.max = 0;\r\n    }\r\n    item(key:string):LocalCache {\r\n        return this.child(key);\r\n    }\r\n}\r\n","import { LocalMap } from './localDb';\r\n\r\nconst testingTags:string[] = ['/test', '/test/', '-test', '-test/'];\r\nfunction isTesting():boolean {\r\n    let {pathname} = document.location;\r\n    let pn = pathname.toLowerCase();\r\n    for (let item of testingTags) {\r\n        if (pn.endsWith(item) === true) return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport const env = (function () {\r\n    let testing = isTesting();\r\n    let localDb = new LocalMap(testing===true? '$$':'$');\r\n    return {\r\n        testing: testing,\r\n        isDevelopment: process.env.NODE_ENV === 'development',\r\n        localDb: localDb,\r\n    }\r\n}());\r\n","import { env } from './env';\r\n\r\nexport class LocalData {\r\n    user = env.localDb.child('user');\r\n    guest = env.localDb.child('guest');\r\n    unit = env.localDb.child('unit');\r\n\r\n    logoutClear() {\r\n        [\r\n            this.user,\r\n            this.unit,\r\n        ].forEach(d => d.remove());\r\n    }\r\n}\r\n","export {left0} from './left0';\r\nexport * from './user';\r\nexport * from './uid';\r\nexport {PageItems} from './pageItems';\r\nexport {CacheIds} from './cacheIds';\r\nexport {LocalMap, LocalArr, LocalCache} from './localDb';\r\nexport {LocalData} from './local';\r\nexport {env} from './env';","function replacer(key:string, value:any) {\r\n    let first = key.substr(0, 1);\r\n    switch (first) {\r\n        default: return value;\r\n        case '$':\r\n        case '_': return;\r\n    }\r\n}\r\n\r\nexport function jsonStringify(value:any) {\r\n    return JSON.stringify(value, replacer, ' ');\r\n}\r\n","import * as React from 'react';\r\n\r\nexport const PureJSONContent = (values:any, x?:any) => <>content: {JSON.stringify(values)}</>;\r\n","export * from './jsonStringify';\r\nexport * from './pureJsonContent';","import _ from 'lodash';\r\nimport {nav} from '../components';\r\nimport {uid} from '../tool/uid';\r\nimport {uqTokenApi, callCenterapi, centerToken, setCenterToken} from './uqApi';\r\nimport {setSubAppWindow} from './wsChannel';\r\nimport { host } from './host';\r\n\r\nexport interface UqToken {\r\n    name: string;\r\n    db: string;\r\n    url: string;\r\n    token: string;\r\n}\r\nconst uqTokens:{[uqName:string]: UqToken}  = {};\r\nexport function logoutUqTokens() {\r\n    for (let i in uqTokens) {\r\n        uqTokens[i] = undefined;\r\n    }\r\n}\r\n\r\nexport interface AppInFrame {\r\n    hash: string;\r\n    unit: number;       // unit id\r\n    page?: string;\r\n    param?: string[];\r\n    predefinedUnit?: number;  // 比如像Cart这样的应用，直接让用户访问的，就需要在unit.json里面定义unitName\r\n}\r\nconst appsInFrame:{[key:string]:AppInFrame} = {};\r\n\r\nclass AppInFrameClass implements AppInFrame {\r\n    hash: string;\r\n    private _unit: number;\r\n    get unit(): number {return this._unit;}       // unit id\r\n    set unit(val:number) { this._unit=val;}\r\n    page?: string;\r\n    param?: string[];\r\n}\r\n\r\nexport let appInFrame:AppInFrame = new AppInFrameClass();\r\n/* {\r\n    hash: undefined,\r\n    get unit():number {return } undefined, //debugUnitId,\r\n    page: undefined;\r\n    param: undefined,\r\n}*/\r\n\r\nexport function isBridged():boolean {\r\n    return window.self !== window.parent;\r\n}\r\n\r\nwindow.addEventListener('message', async function(evt) {\r\n    var message = evt.data;\r\n    switch (message.type) {\r\n        case 'sub-frame-started':\r\n            subFrameStarted(evt);\r\n            break;\r\n        case 'ws':\r\n            //wsBridge.receive(message.msg);\r\n            await nav.onReceive(message.msg);\r\n            break;\r\n        case 'init-sub-win':\r\n            await initSubWin(message);\r\n            break;\r\n        case 'pop-app':\r\n            nav.navBack();\r\n            break;\r\n        case 'center-api':\r\n            await callCenterApiFromMessage(evt.source as Window, message);\r\n            break;\r\n        case 'center-api-return':\r\n            bridgeCenterApiReturn(message);\r\n            break;\r\n        case 'app-api':\r\n            let ret = await onReceiveAppApiMessage(message.hash, message.apiName);\r\n            (evt.source as Window).postMessage({\r\n                type: 'app-api-return', \r\n                apiName: message.apiName,\r\n                db: ret.db,\r\n                url: ret.url,\r\n                token: ret.token} as any, \"*\");\r\n            break;\r\n        case 'app-api-return':\r\n            console.log(\"app-api-return: %s\", JSON.stringify(message));\r\n            console.log('await onAppApiReturn(message);');\r\n            await onAppApiReturn(message);\r\n            break;\r\n        default:\r\n            this.console.log('message: %s', JSON.stringify(message));\r\n            break;\r\n    }\r\n});\r\n\r\nfunction subFrameStarted(evt:any) {\r\n    var message = evt.data;\r\n    let subWin = evt.source as Window;\r\n    setSubAppWindow(subWin);\r\n    hideFrameBack(message.hash);\r\n    let msg:any = _.clone(nav.user);\r\n    msg.type = 'init-sub-win';\r\n    subWin.postMessage(msg, '*');\r\n}\r\nfunction hideFrameBack(hash:string) {\r\n    let el = document.getElementById(hash);\r\n    if (el !== undefined) el.hidden = true;\r\n}\r\nasync function initSubWin(message:any) {\r\n    console.log('initSubWin: set nav.user', message);\r\n    let user = nav.user = message; // message.user;\r\n    setCenterToken(user.id, user.token);\r\n    await nav.showAppView();\r\n}\r\nasync function onReceiveAppApiMessage(hash: string, apiName: string): Promise<UqToken> {\r\n    let appInFrame = appsInFrame[hash];\r\n    if (appInFrame === undefined) return {name:apiName, db:undefined, url:undefined, token:undefined};\r\n    //let unit = getUnit();\r\n    let {unit, predefinedUnit} = appInFrame;\r\n    unit = unit || predefinedUnit;\r\n    if (!unit) {\r\n        console.error('no unit defined in unit.json or not logined in', unit);\r\n    }\r\n    let parts = apiName.split('/');\r\n    let param = {unit: unit, uqOwner: parts[0], uqName: parts[1]};\r\n    console.log('uqTokenApi.uq onReceiveAppApiMessage', param);\r\n    let ret = await uqTokenApi.uq(param);\r\n    let {db, url, token} = ret;\r\n    return {name: apiName, db:db, url: url, token: token};\r\n}\r\n\r\nasync function onAppApiReturn(message:any) {\r\n    let {apiName, db, url, urlTest, token} = message;\r\n    let action = uqTokenActions[apiName];\r\n    if (action === undefined) {\r\n        throw new Error('error app api return');\r\n        //return;\r\n    }\r\n    let realUrl = host.getUrlOrTest(db, url, urlTest);\r\n    console.log('onAppApiReturn(message:any): url=' + url + ', real=' + realUrl);\r\n    //action.url = realUrl;\r\n    //action.token = token;\r\n    action.resolve({\r\n        name: apiName,\r\n        db: db,\r\n        url: realUrl,\r\n        token: token,\r\n    } as UqToken);\r\n}\r\n\r\nexport function setAppInFrame(appHash: string):AppInFrame {\r\n    if (appHash) {\r\n        let parts = appHash.split('-');\r\n        let len = parts.length;\r\n        if (len > 0) {\r\n            let p = 1;\r\n            appInFrame.hash = parts[p++];\r\n            if (len>0) appInFrame.unit = Number(parts[p++]);\r\n            if (len>1) appInFrame.page = parts[p++];\r\n            if (len>2) appInFrame.param = parts.slice(p++);\r\n        }\r\n    }\r\n    return appInFrame;\r\n}\r\n\r\nexport function getExHashPos():number {\r\n    let hash = document.location.hash;\r\n    if (hash !== undefined && hash.length > 0) {\r\n        let pos = hash.lastIndexOf('#tv-');\r\n        if (pos < 0) pos = hash.lastIndexOf('#tvdebug-');\r\n        return pos;\r\n    }\r\n    return -1;\r\n}\r\n\r\nexport function getExHash():string {\r\n    let pos = getExHashPos();\r\n    if (pos < 0) return undefined;\r\n    return document.location.hash.substring(pos);\r\n}\r\n\r\nexport function appUrl(url: string, unitId: number, page?:string, param?:any[]):{url:string; hash:string} {\r\n    let u:string;\r\n    for (;;) {\r\n        u = uid();\r\n        let a = appsInFrame[u];\r\n        if (a === undefined) {\r\n            appsInFrame[u] = {hash:u, unit:unitId};\r\n            break;\r\n        }\r\n    }\r\n    url += '#tv-' + u + '-' + unitId;\r\n    if (page !== undefined) {\r\n        url += '-' + page;\r\n        if (param !== undefined) {\r\n            for (let i=0; i<param.length; i++) {\r\n                url += '-' + param[i];\r\n            }\r\n        }\r\n    }\r\n    return {url: url, hash: u};\r\n}\r\n\r\nfunction getUnit():number {\r\n    let {unit, predefinedUnit} = appInFrame;\r\n    let realUnit = unit || predefinedUnit;\r\n    if (realUnit === undefined) {\r\n        throw new Error('no unit defined in unit.json or not logined in');\r\n    }\r\n    return realUnit;\r\n}\r\n\r\ninterface UqTokenAction {\r\n    resolve: (value?: UqToken | PromiseLike<UqToken>) => void;\r\n    reject: (reason?: any) => void;\r\n}\r\nconst uqTokenActions:{[uq:string]: UqTokenAction} = {};\r\nexport async function buildAppUq(uq:string, uqOwner:string, uqName:string):Promise<void> {\r\n    if (!isBridged()) {\r\n        let unit = getUnit();\r\n        let uqToken = await uqTokenApi.uq({unit:unit, uqOwner:uqOwner, uqName:uqName});\r\n        if (uqToken.token === undefined) uqToken.token = centerToken;\r\n        let {db, url, urlTest} = uqToken;\r\n        let realUrl = host.getUrlOrTest(db, url, urlTest);\r\n        console.log('realUrl: %s', realUrl);\r\n        uqToken.url = realUrl;\r\n        uqTokens[uq] = uqToken;\r\n        return uqToken;\r\n    }\r\n    console.log(\"**** before buildAppUq ****\", appInFrame);\r\n    let bp = uqTokenActions[uq];\r\n    if (bp !== undefined) return;\r\n    return new Promise<void>((resolve, reject) => {\r\n        uqTokenActions[uq] = {\r\n            resolve: async (at:any) => {\r\n                let {db, url, token} = await at;\r\n                uqTokens[uq] = {\r\n                    name: uq,\r\n                    db: db,\r\n                    url: url,\r\n                    token: token,\r\n                };\r\n                uqTokenActions[uq] = undefined;\r\n                console.log(\"**** after buildAppUq ****\", appInFrame);\r\n                resolve();\r\n            },\r\n            reject: reject,\r\n        };\r\n        (window.opener || window.parent).postMessage({\r\n            type: 'app-api',\r\n            apiName: uq,\r\n            hash: appInFrame.hash,\r\n        }, \"*\");\r\n    });\r\n}\r\n\r\nexport function appUq(uq:string):UqToken {\r\n    let uts = uqTokens;\r\n    return uts[uq];\r\n}\r\n/*\r\nexport async function appUq(uq:string, uqOwner:string, uqName:string): Promise<UqToken> {\r\n    let uqToken = uqTokens[uq];\r\n    if (uqToken !== undefined) return uqToken;\r\n    if (!isBridged()) {\r\n        let unit = getUnit();\r\n        uqToken = await uqTokenApi.uq({unit:unit, uqOwner:uqOwner, uqName:uqName});\r\n        if (uqToken.token === undefined) uqToken.token = centerToken;\r\n        let {url, urlDebug} = uqToken;\r\n        let realUrl = host.getUrlOrDebug(url, urlDebug);\r\n        console.log('realUrl: %s', realUrl);\r\n        uqToken.url = realUrl;\r\n        uqTokens[uq] = uqToken;\r\n        return uqToken;\r\n    }\r\n    console.log(\"appApi parent send: %s\", appInFrame.hash);\r\n    uqToken = {\r\n        name: uq,\r\n        url: undefined,\r\n        urlDebug: undefined,\r\n        token: undefined,\r\n        resolve: undefined,\r\n        reject: undefined,\r\n    };\r\n    uqTokens[uq] = uqToken;\r\n    return new Promise<UqToken>((resolve, reject) => {\r\n        uqToken.resolve = async (at) => {\r\n            let a = await at;\r\n            console.log('return from parent window: %s', JSON.stringify(a));\r\n            uqToken.url = a.url;\r\n            uqToken.urlDebug = a.urlDebug;\r\n            uqToken.token = a.token;\r\n            resolve(uqToken);\r\n        }\r\n        uqToken.reject = reject;\r\n        (window.opener || window.parent).postMessage({\r\n            type: 'app-api',\r\n            apiName: uq,\r\n            hash: appInFrame.hash,\r\n        }, \"*\");\r\n    });\r\n}\r\n*/\r\ninterface BridgeCenterApi {\r\n    id: string;\r\n    resolve: (value?:any)=>any;\r\n    reject: (reason?:any)=>void;\r\n}\r\nconst brideCenterApis:{[id:string]: BridgeCenterApi} = {};\r\nexport async function bridgeCenterApi(url:string, method:string, body:any):Promise<any> {\r\n    console.log('bridgeCenterApi: url=%s, method=%s', url, method);\r\n    return await new Promise<any>(async (resolve, reject) => {\r\n        let callId:string;\r\n        for (;;) {\r\n            callId = uid();\r\n            let bca = brideCenterApis[callId];\r\n            if (bca === undefined) {\r\n                brideCenterApis[callId] = {\r\n                    id: callId,\r\n                    resolve: resolve,\r\n                    reject: reject,\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        (window.opener || window.parent).postMessage({\r\n            type: 'center-api',\r\n            callId: callId,\r\n            url: url,\r\n            method: method,\r\n            body: body\r\n        }, '*');\r\n    });\r\n}\r\n\r\nasync function callCenterApiFromMessage(from:Window, message:any):Promise<void> {\r\n    let {callId, url, method, body} = message;\r\n    let result = await callCenterapi.directCall(url, method, body);\r\n    from.postMessage({\r\n        type: 'center-api-return',\r\n        callId: callId,\r\n        result: result,\r\n    }, '*');\r\n}\r\n\r\nfunction bridgeCenterApiReturn(message:any) {\r\n    let {callId, result} = message;\r\n    let bca = brideCenterApis[callId];\r\n    if (bca === undefined) return;\r\n    brideCenterApis[callId] = undefined;\r\n    bca.resolve(result);\r\n}\r\n","import * as React from 'react';\r\nimport {IComputedValue} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash';\r\nimport {PageHeader} from './pageHeader';\r\n\r\nexport interface ScrollProps {\r\n    onScroll?: (e:any) => void;\r\n    onScrollTop?: () => void;\r\n    onScrollBottom?: () => void;\r\n}\r\ninterface ScrollViewProps extends ScrollProps {\r\n    className?: string;\r\n}\r\nconst scrollTimeGap = 100;\r\nclass ScrollView extends React.Component<ScrollViewProps, null> {\r\n    private bottomTime:number = 0;\r\n    private topTime:number = 0;\r\n\r\n    private onScroll = async (e:any) => {\r\n        let {onScroll, onScrollTop, onScrollBottom} = this.props;\r\n        if (onScroll) this.props.onScroll(e);\r\n        let el = e.target as HTMLBaseElement;\r\n        if (el.scrollTop < 30) {\r\n            //this.eachChild(this, 'top');\r\n            if (onScrollTop !== undefined) {\r\n                let topTime = new Date().getTime();\r\n                if (topTime-this.topTime > scrollTimeGap) {\r\n                    this.topTime = topTime;\r\n                    onScrollTop();\r\n                }\r\n            }\r\n        }\r\n        if (el.scrollTop + el.offsetHeight > el.scrollHeight - 30) {\r\n            //this.eachChild(this, 'bottom');\r\n            if (onScrollBottom !== undefined) {\r\n                let bottomTime = new Date().getTime();\r\n                if (bottomTime - this.bottomTime > scrollTimeGap) {\r\n                    this.bottomTime = bottomTime;\r\n                    onScrollBottom();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    private eachChild(c:any, direct:'top'|'bottom') {\r\n        let { props } = c;\r\n        if (props === undefined)\r\n            return;\r\n        let { children } = props;\r\n        if (children === undefined)\r\n            return;\r\n        React.Children.forEach(children, (child, index) => {\r\n            let {_$scroll} = child as any;\r\n            if (_$scroll) _$scroll(direct);\r\n            console.log(child.toString());\r\n            this.eachChild(child, direct);\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <main className={this.props.className} onScroll={this.onScroll}>\r\n                {this.props.children}\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport interface Tab extends ScrollProps {\r\n    title: string | JSX.Element;    \r\n    icon?: string;\r\n    className?: string;\r\n    content?: JSX.Element | (()=>JSX.Element);\r\n    header?: string;\r\n    isSelected?: boolean;\r\n    redDot?: IComputedValue<number>;\r\n    load?: () => Promise<void>;\r\n}\r\nexport interface TabState extends Tab {\r\n    isMounted?: boolean;\r\n}\r\nexport interface PageProps extends ScrollProps {\r\n    back?: 'close' | 'back' | 'none';\r\n    header?: boolean | string | JSX.Element;\r\n    keepHeader?: boolean;\r\n    right?: JSX.Element;\r\n    sideBar?: JSX.Element;\r\n    footer?: JSX.Element;\r\n    tabs?: Tab[];\r\n    tabPosition?: 'top' | 'bottom';\r\n    logout?: boolean | (()=>Promise<void>);\r\n    headerClassName?: string;\r\n}\r\nexport interface PageState {\r\n    cur?: Tab;\r\n    tabs?: TabState[];\r\n}\r\n\r\n@observer\r\nexport class Page extends React.Component<PageProps, PageState> {\r\n    private tabs:TabState[];\r\n    constructor(props: PageProps) {\r\n        super(props);\r\n        let {tabs} = props;\r\n        if (tabs === undefined || tabs.length === 0) return;\r\n        this.tabs = tabs;\r\n        let cur:Tab;\r\n        let tabStates:Tab[] = [];\r\n        for (let tab of tabs) {\r\n            let t:TabState = _.clone(tab);\r\n            if (cur === undefined) {\r\n                if (t.isSelected === true)\r\n                    cur = t;\r\n                else\r\n                    t.isSelected = false;\r\n            }\r\n            else {\r\n                t.isSelected = false;\r\n            }\r\n            t.isMounted = false;\r\n            tabStates.push(t);\r\n        }\r\n        this.state = {\r\n            cur: cur,\r\n            tabs: tabStates,\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (this.tabs === undefined) return;\r\n        let t0 = this.state.tabs.find(v => v.isSelected === true);\r\n        if (t0 === undefined) {\r\n            t0 = this.state.tabs[0];\r\n            if (t0 === undefined) return;\r\n        }\r\n        await t0.load && await t0.load();\r\n        //await this.onTabClick(t0);\r\n    }\r\n\r\n    private async onTabClick(tab: TabState) {\r\n        if (tab.isSelected === true) return;\r\n        let cur:TabState;\r\n        let tabs = this.state.tabs;\r\n        for (let t of tabs) {\r\n            if (t === tab) {\r\n                t.isSelected = true;\r\n                cur = t;\r\n            }\r\n            else\r\n                t.isSelected = false;\r\n        }\r\n        if (cur.isMounted !== true) {\r\n            let {load} = cur;\r\n            if (load !== undefined) {\r\n                await load();\r\n            }\r\n        }\r\n        this.setState({\r\n            cur: cur,\r\n            tabs: tabs\r\n        });\r\n    }\r\n\r\n    private onTouchStart(evt: React.TouchEvent<HTMLElement>) {\r\n    }\r\n\r\n    private renderTabs(footer: JSX.Element) {\r\n        const {header, back, right, keepHeader, headerClassName, tabPosition} = this.props;\r\n        let cur = this.state.cur;\r\n        let tabs = <div>{\r\n                this.state.tabs.map((tab, index) => {\r\n                    const {icon, isSelected, title, redDot, className} = tab;\r\n                    let img:any, redDotView:any, cn:any;\r\n                    if (icon !== undefined) img = <img src={icon} alt=\"tab icon\" />;\r\n                    if (redDot !== undefined) {\r\n                        let v = redDot.get();\r\n                        if (v < 0) {\r\n                            cn = classNames('red-dot', className);\r\n                            redDotView = <u />;\r\n                        }\r\n                        else if (v > 0) {\r\n                            cn = classNames('red-dot', 'num', className);\r\n                            redDotView = <u>{v}</u>;\r\n                        }\r\n                    }\r\n                    return <div key={index}\r\n                        className= {classNames('va-tab', {cur: isSelected})}\r\n                        onClick={() => this.onTabClick(tab)}>\r\n                        {img}<div className={cn}>{title}{redDotView}</div>\r\n                    </div>\r\n                })\r\n            }</div>;\r\n        let pageHeader = header !== false &&\r\n            <PageHeader \r\n                back={back} \r\n                center={keepHeader===true? (header as string) : (cur && (cur.header || cur.title))}\r\n                right={right}\r\n                className={headerClassName}\r\n            />;\r\n\r\n        return <article className='page-container'>\r\n            {pageHeader}\r\n            {tabPosition==='top' && tabs}\r\n            <section className=\"position-relative\">\r\n            {this.props.sideBar}\r\n            {\r\n                this.state.tabs.map((tab, index) => {\r\n                    let {isSelected, isMounted, content} = tab;\r\n                    if (isSelected === true || isMounted === true) {\r\n                        tab.isMounted = true;\r\n                        return <ScrollView key={index}\r\n                            className={classNames({invisible: isSelected===false})}\r\n                            onScroll={tab.onScroll}\r\n                            onScrollTop={tab.onScrollTop}\r\n                            onScrollBottom={tab.onScrollBottom}\r\n                        >\r\n                            {(typeof content)==='function'? (content as ()=>JSX.Element)():content}\r\n                        </ScrollView>;\r\n                    }\r\n                    return undefined;\r\n                })\r\n            }\r\n            </section>\r\n            {tabPosition!=='top' && tabs}\r\n            {footer}\r\n        </article>;\r\n    }\r\n    private renderSingle(footer: JSX.Element) {\r\n        const {back, header, right, onScroll, onScrollTop, onScrollBottom, children, headerClassName} = this.props;\r\n        let pageHeader = header !== false && <PageHeader \r\n            back={back} \r\n            center={header as any}\r\n            right={right}\r\n            logout={this.props.logout}\r\n            className={headerClassName}\r\n        />;\r\n        return (\r\n            <article className='page-container' onTouchStart={this.onTouchStart}>\r\n                {pageHeader}\r\n                <section className=\"position-relative\">\r\n                    {this.props.sideBar}\r\n                    <ScrollView\r\n                        onScroll={onScroll}\r\n                        onScrollTop={onScrollTop}\r\n                        onScrollBottom={onScrollBottom}\r\n                    >\r\n                        {children}\r\n                    </ScrollView>\r\n                </section>\r\n                {footer}\r\n            </article>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const {footer} = this.props;\r\n        let elFooter = footer !== undefined && <footer>{footer}</footer>;\r\n        if (this.tabs !== undefined)\r\n            return this.renderTabs(elFooter);\r\n        else\r\n            return this.renderSingle(elFooter);\r\n    }\r\n}\r\n","//import _ from 'lodash';\r\nimport { Caller } from '../net';\r\nimport { Entity } from './entity';\r\nimport { Action } from './action';\r\nimport { Query } from './query';\r\n\r\ninterface UqResponseSchema {\r\n    uq: any;\r\n    entity: any;\r\n}\r\n\r\nexport abstract class EntityCaller<T> extends Caller<T> {\r\n    private tries: number;\r\n    protected _entity: Entity;\r\n\r\n    constructor(entity: Entity, params:T) {\r\n        super(params);\r\n        this.tries = 0;\r\n        this._entity = entity;\r\n    }\r\n\r\n    protected get entity(): Entity {return this._entity;}\r\n\r\n    //大多的entityCaller都不需要这个\r\n    //buildParams() {return this.entity.buildParams(this.params);}\r\n    \r\n    async request(): Promise<any> {\r\n        await this.entity.loadSchema();\r\n        let ret = await this.innerRequest();\r\n        return ret;\r\n    }\r\n\r\n    protected async innerCall(): Promise<any> {\r\n        return await this.entity.uqApi.xcall(this);\r\n    }\r\n\r\n    async innerRequest(): Promise<any> {\r\n        let jsonResult = await this.innerCall();\r\n        let {$uq, $modify, res} = jsonResult;\r\n        this.entity.uq.pullModify($modify);\r\n        if ($uq === undefined) {\r\n            //if (res === undefined) debugger;\r\n            let ret = this.xresult(res);\r\n            //if (ret === undefined) debugger;\r\n            return ret;\r\n        }\r\n        return await this.retry($uq);\r\n    }\r\n\r\n    xresult(res:any):any {return res}\r\n\r\n    get headers(): {[header:string]: string} {\r\n        let {ver, uq} = this.entity;\r\n        let {uqVersion} = uq;\r\n        return {\r\n            uq: `${uqVersion}`,\r\n            en: `${ver}`,\r\n        }\r\n    }\r\n\r\n    private async retry(schema: UqResponseSchema) {\r\n        ++this.tries;\r\n        if (this.tries > 5) throw new Error('can not get right uq response schema, 5 tries');\r\n        this.rebuildSchema(schema);\r\n        return await this.innerRequest();\r\n    }\r\n\r\n    private rebuildSchema(schema: UqResponseSchema) {\r\n        let {uq, entity} = schema;\r\n        if (uq !== undefined) this.entity.uq.buildEntities(uq);\r\n        if (entity !== undefined) this.entity.setSchema(entity);\r\n    }\r\n}\r\n\r\nexport abstract class ActionCaller extends EntityCaller<any> {\r\n    protected get entity(): Action {return this._entity as Action;}\r\n}\r\n\r\nexport class QueryQueryCaller extends EntityCaller<any> {\r\n    protected get entity(): Query {return this._entity as Query};\r\n    get path():string {return `query/${this.entity.name}`;}\r\n    xresult(res:any) {\r\n        let data = this.entity.unpackReturns(res);\r\n        return data;\r\n    }\r\n    buildParams() {return this.entity.buildParams(this.params);}\r\n}\r\n\r\nexport class QueryPageCaller extends EntityCaller<any> {\r\n    protected readonly params: {pageStart:any; pageSize:number, params:any};\r\n    protected get entity(): Query {return this._entity as Query};\r\n    get path():string {return `query-page/${this.entity.name}`;}\r\n    buildParams() {\r\n        let {pageStart, pageSize, params} = this.params;\r\n        let p:any;\r\n        if (params === undefined) {\r\n            p = {key: ''};\r\n        }\r\n        else {\r\n            p = this.entity.buildParams(params);\r\n        }\r\n        /*\r\n        switch (typeof params) {\r\n            case 'undefined': p = {key: ''}; break;\r\n            default: p = _.clone(params); break;\r\n        }\r\n        */\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        return p;\r\n    };\r\n    xresult(res:any) {\r\n        let data = this.entity.unpackReturns(res);\r\n        return data.$page;// as any[];\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { jsonStringify, PureJSONContent } from '../tools';\r\n\r\nexport type TypeViewModel = typeof ViewModel;\r\nexport type TypeView = React.StatelessComponent<{vm: ViewModel, className?:string|string[]}>;\r\nexport type TypeContent = React.StatelessComponent<any>;\r\n\r\nexport abstract class ViewModel {\r\n    protected abstract get view(): TypeView;\r\n    render(className?:string|string[]):JSX.Element {\r\n        if (this.view === undefined) return <div>??? viewModel 必须定义 view ???</div>\r\n        return React.createElement(this.view, {vm: this, className:className});\r\n    }\r\n}\r\n\r\n/*\r\nexport const PureJSONContent = (values:any, x?:any) => {\r\n    return <>content: {jsonStringify(values)}</>;\r\n}\r\n*/\r\n\r\nexport const JSONContent = observer(PureJSONContent);\r\nexport const RowContent = \r\n    (values:any) => <div className=\"px-3 py-2\">{jsonStringify(values)}</div>\r\n;\r\n","import {bridgeCenterApi, isBridged} from './appBridge';\r\nimport {FetchError} from './fetchError';\r\nimport {HttpChannelUI} from './httpChannelUI';\r\nimport {nav} from '../components/nav';\r\nimport { Caller } from './caller';\r\nimport { env } from '../tool';\r\n\r\n/*\r\nexport async function httpGet(url:string, params?:any):Promise<any> {\r\n    let channel = new HttpChannel(false, url, undefined, undefined);\r\n    let ret = await channel.get('', params);\r\n    return ret;\r\n}\r\n\r\nexport async function httpPost(url:string, params?:any):Promise<any> {\r\n    let channel = new HttpChannel(false, url, undefined, undefined);\r\n    let ret = await channel.post('', params);\r\n    return ret;\r\n}\r\n*/\r\n\r\nconst methodsWithBody = ['POST', 'PUT'];\r\n\r\nexport abstract class HttpChannel {\r\n    private timeout: number;\r\n    protected ui?: HttpChannelUI;\r\n    protected hostUrl: string;\r\n    protected apiToken: string;\r\n\r\n    constructor(hostUrl: string, apiToken:string, ui?: HttpChannelUI) {\r\n        this.hostUrl = hostUrl;\r\n        this.apiToken = apiToken;\r\n        this.ui = ui;\r\n        this.timeout = env.isDevelopment === true? 500000:5000;\r\n    }\r\n\r\n    private startWait = () => {\r\n        if (this.ui !== undefined) this.ui.startWait();\r\n    }\r\n\r\n    private endWait = (url?:string, reject?:(reason?:any)=>void) => {\r\n        if (this.ui !== undefined) this.ui.endWait();\r\n        if (reject !== undefined) reject('访问webapi超时 ' + url);\r\n    }\r\n\r\n    private showError = async (error:FetchError) => {\r\n        if (this.ui !== undefined) await this.ui.showError(error);\r\n    }\r\n\r\n    used() {\r\n        this.post('', {});\r\n    }\r\n\r\n    async xcall(urlPrefix:string, caller:Caller<any>): Promise<void> {\r\n        let options = this.buildOptions();\r\n        let {headers, path, method} = caller;\r\n        if (headers !== undefined) {\r\n            let h = options.headers;\r\n            for (let i in headers) {\r\n                h.append(i, encodeURI(headers[i]));\r\n            }\r\n        }\r\n        options.method = method;\r\n        let p = caller.buildParams();\r\n        if (methodsWithBody.indexOf(method) >= 0 && p !== undefined) {\r\n            options.body = JSON.stringify(p)\r\n        }\r\n        return await this.innerFetch(urlPrefix + path, options);\r\n    }\r\n\r\n    private async innerFetchResult(url: string, options: any): Promise<any> {\r\n        let ret = await this.innerFetch(url, options);\r\n        return ret.res;\r\n    }\r\n\r\n    async get(url: string, params: any = undefined): Promise<any> {\r\n        if (params) {\r\n            let keys = Object.keys(params);\r\n            if (keys.length > 0) {\r\n                let c = '?';\r\n                for (let k of keys) {\r\n                    let v = params[k];\r\n                    if (v === undefined) continue;\r\n                    url += c + k + '=' + params[k];\r\n                    c = '&';\r\n                }\r\n            }\r\n        }\r\n        let options = this.buildOptions();\r\n        options.method = 'GET';\r\n        return await this.innerFetchResult(url, options);\r\n    }\r\n\r\n    async post(url: string, params: any): Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = 'POST';\r\n        options.body = JSON.stringify(params);\r\n        return await this.innerFetchResult(url, options);\r\n    }\r\n\r\n    async put(url: string, params: any): Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = 'PUT';\r\n        options.body = JSON.stringify(params);\r\n        return await this.innerFetchResult(url, options);\r\n    }\r\n\r\n    async delete(url: string, params: any): Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = 'DELETE';\r\n        options.body = JSON.stringify(params);\r\n        return await this.innerFetchResult(url, options);\r\n    }\r\n    async fetch(url: string, options: any, resolve:(value?:any)=>any, reject:(reason?:any)=>void):Promise<void> {\r\n        let that = this;\r\n        this.startWait();\r\n        let path = url;\r\n        function buildError(err: any) {\r\n            return {\r\n                channel: that,\r\n                url: path,\r\n                options: options,\r\n                resolve: resolve,\r\n                reject: reject,\r\n                error: err,\r\n            }\r\n        }\r\n        try {\r\n            console.log('%s %s', options.method, path);\r\n            let timeOutHandler = setTimeout(() => that.endWait(url, reject), this.timeout);\r\n            let res = await fetch(encodeURI(path), options);\r\n            if (res.ok === false) {\r\n                clearTimeout(timeOutHandler);\r\n                that.endWait();\r\n                console.log('call error %s', res.statusText);\r\n                throw res.statusText;\r\n            }\r\n            let ct = res.headers.get('content-type');\r\n            if (ct && ct.indexOf('json')>=0) {\r\n                return res.json().then(async retJson => {\r\n                    clearTimeout(timeOutHandler);\r\n                    that.endWait();\r\n                    if (retJson.ok === true) {\r\n                        if (typeof retJson !== 'object') {\r\n                            debugger;\r\n                        }\r\n                        else if (Array.isArray(retJson) === true) {\r\n                            debugger;\r\n                        }\r\n                        /*\r\n                        let json = retJson.res;\r\n                        if (json === undefined) {\r\n                            json = {\r\n                                $uq: retJson.$uq\r\n                            }\r\n                        }\r\n                        */\r\n                        //json.$modify = retJson.$modify;\r\n                        //return resolve(json);\r\n                        return resolve(retJson);\r\n                    }\r\n                    let retError = retJson.error;\r\n                    if (retError === undefined) {\r\n                        await that.showError(buildError('not valid tonva json'));\r\n                    }\r\n                    else {\r\n                        await that.showError(buildError(retError));\r\n                        reject(retError);\r\n                    }\r\n                }).catch(async error => {\r\n                    await that.showError(buildError(error));\r\n                });\r\n            }\r\n            else {\r\n                let text = await res.text();\r\n                clearTimeout(timeOutHandler);\r\n                that.endWait();\r\n                resolve(text);\r\n            }\r\n        }\r\n        catch(error) {\r\n            if (typeof error === 'string') {\r\n                let err = error.toLowerCase();\r\n                if (err.startsWith('unauthorized') === true) {\r\n                    nav.logout();\r\n                    return;\r\n                }\r\n            }\r\n            await this.showError(buildError(error.message));\r\n        };\r\n    }\r\n\r\n    protected abstract async innerFetch(url: string, options: any): Promise<any>;\r\n\r\n    async callFetch(url:string, method:string, body:any):Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = method;\r\n        options.body = body;\r\n        return await new Promise<any>(async (resolve, reject) => {\r\n            await this.fetch(url, options, resolve, reject);\r\n        });\r\n    }\r\n\r\n    private buildOptions(): {method:string; headers:Headers; body:any} {\r\n        let headers = this.buildHeaders();\r\n        let options = {\r\n            headers: headers,\r\n            method: undefined as any,\r\n            body: undefined as any,\r\n            // cache: 'no-cache',\r\n        };\r\n        return options;\r\n    }\r\n\r\n    protected buildHeaders():Headers {\r\n        let {language, culture} = nav;\r\n        let headers = new Headers();\r\n        //headers.append('Access-Control-Allow-Origin', '*');\r\n        headers.append('Content-Type', 'application/json;charset=UTF-8');\r\n        let lang = language;\r\n        if (culture) lang += '-' + culture;\r\n        headers.append('Accept-Language', lang);\r\n        if (this.apiToken) { \r\n            headers.append('Authorization', this.apiToken); \r\n        }\r\n        return headers;\r\n    }\r\n}\r\n\r\nexport class CenterHttpChannel extends HttpChannel {\r\n    protected async innerFetch(url: string, options: any): Promise<any> {\r\n        let u = this.hostUrl + url;\r\n        if (this.apiToken === undefined && isBridged())\r\n            return await bridgeCenterApi(u, options.method, options.body);\r\n        return await new Promise<any>(async (resolve, reject) => {\r\n            await this.fetch(u, options, resolve, reject);\r\n        });\r\n    }\r\n}\r\n\r\nexport class UqHttpChannel extends HttpChannel {\r\n    /*\r\n    private uqForChannel: IUqForChannel;\r\n    constructor(hostUrl: string, apiToken:string, uqForChannel: IUqForChannel, ui?: HttpChannelUI) {\r\n        super(hostUrl, apiToken, ui);\r\n        this.uqForChannel = uqForChannel;\r\n    }\r\n    */\r\n    protected async innerFetch(url: string, options: any): Promise<any> {\r\n        let u = this.hostUrl + url;\r\n        return await new Promise<any>(async (resolve, reject) => {\r\n            await this.fetch(u, options, resolve, reject);\r\n        });\r\n    }\r\n\r\n    /*\r\n    protected buildHeaders():Headers {\r\n        let headers = super.buildHeaders();\r\n        if (this.uqForChannel !== undefined) {\r\n            let {uqVersion} = this.uqForChannel;\r\n            if (uqVersion !== undefined) {\r\n                headers.append('tonva-uq-version', String(uqVersion));\r\n            }\r\n        }\r\n        return headers;\r\n    }\r\n\r\n    protected async showSpecificError(err:string):Promise<boolean> {\r\n        if (err === 'unmatched uq version') {\r\n            if (this.ui !== undefined) {\r\n                let uq:string, uqVersion:number;\r\n                if (this.uqForChannel !== undefined) {\r\n                    uq = this.uqForChannel.uq;\r\n                    uqVersion = this.uqForChannel.uqVersion;\r\n                }\r\n                else {\r\n                    uq = 'undefined uq';\r\n                    uqVersion = 0;\r\n                }\r\n                await this.ui.showUpgradeUq(uq, uqVersion);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    */\r\n}\r\n","import {nav} from '../components/nav';\r\nimport {FetchError} from './fetchError';\r\n\r\nexport interface HttpChannelUI {\r\n    startWait():void;\r\n    endWait():void;\r\n    showError(error:FetchError):Promise<void>;\r\n    showUpgradeUq(uq:string, version:number):Promise<void>;\r\n}\r\n\r\nexport class HttpChannelNavUI implements HttpChannelUI {\r\n    startWait() {\r\n        nav.startWait();\r\n    }\r\n    endWait() {\r\n        nav.endWait();\r\n    }\r\n    async showError(error:FetchError):Promise<void> {\r\n        nav.endWait();\r\n        /*\r\n        if (error.name === 'SyntaxError') {\r\n            error = {\r\n                name: error.name,\r\n                message: error.message,\r\n            }\r\n        }*/\r\n        await nav.onError(error);\r\n    }\r\n    async showUpgradeUq(uq:string, version:number):Promise<void> {\r\n        await nav.showUpgradeUq(uq, version);\r\n    }\r\n}\r\n\r\n","import _ from 'lodash';\r\nimport {HttpChannel, CenterHttpChannel, UqHttpChannel} from './httpChannel';\r\nimport {HttpChannelNavUI} from './httpChannelUI';\r\nimport {appUq, logoutUqTokens, buildAppUq} from './appBridge';\r\nimport {ApiBase} from './apiBase';\r\nimport { host } from './host';\r\nimport { nav } from '../components';\r\nimport { LocalCache, LocalMap, env } from '../tool';\r\nimport {decodeUserToken} from '../tool/user';\r\n\r\nlet channelUIs:{[name:string]: HttpChannel} = {};\r\nlet channelNoUIs:{[name:string]: HttpChannel} = {};\r\n\r\nexport function logoutApis() {\r\n    channelUIs = {};\r\n    channelNoUIs = {};\r\n    logoutUnitxApis();\r\n    logoutUqTokens();\r\n}\r\n\r\ninterface UqLocal {\r\n    user: number;\r\n    unit: number;\r\n    value: any;\r\n    tick?: number;\r\n    isNet?: boolean;\r\n}\r\ninterface UqLocals {\r\n    user: number;\r\n    unit: number;\r\n    uqs: {[uq:string]: UqLocal};\r\n}\r\n/*\r\nconst uqLocalEntities = 'uqLocalEntities';\r\nclass CacheUqLocals {\r\n    private local:UqLocals;\r\n\r\n    async loadAccess(uqApi: UqApi):Promise<any> {\r\n        try {\r\n            let {uqOwner, uqName} = uqApi;\r\n            if (this.local === undefined) {\r\n                let ls = null; // localStorage.getItem(uqLocalEntities);\r\n                if (ls !== null) {\r\n                    this.local = JSON.parse(ls);\r\n                }\r\n            }\r\n            if (this.local !== undefined) {\r\n                let {user, uqs} = this.local;\r\n                if (user !== loginedUserId || uqs === undefined) {\r\n                    this.local = undefined;\r\n                }\r\n                else {\r\n                    for (let i in uqs) {\r\n                        let ul = uqs[i];\r\n                        ul.isNet = undefined;\r\n                    }\r\n                }\r\n            }\r\n            if (this.local === undefined) {\r\n                this.local = {\r\n                    user: loginedUserId,\r\n                    unit: undefined,\r\n                    uqs: {}\r\n                };\r\n            }\r\n\r\n            let ret: any;\r\n            let un = uqOwner+'/'+uqName;\r\n            let uq = this.local.uqs[un];\r\n            if (uq !== undefined) {\r\n                let {value} = uq;\r\n                ret = value;\r\n            }\r\n            if (ret === undefined) {\r\n                ret = await uqApi.__loadAccess();\r\n                //this.saveLocal(un, ret);\r\n            }\r\n            return _.cloneDeep(ret);\r\n        }\r\n        catch (err) {\r\n            this.local = undefined;\r\n            localStorage.removeItem(uqLocalEntities);\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    private saveLocal(uqName:string, accessValue: any) {\r\n        this.local.uqs[uqName] = {\r\n            value: accessValue,\r\n            isNet: true,\r\n        }\r\n        let str = JSON.stringify(this.local);\r\n        localStorage.setItem(uqLocalEntities, str);\r\n    }\r\n\r\n    async checkAccess(uqApi: UqApi):Promise<boolean> {\r\n        if (this.local === undefined) return false;\r\n        let {uqOwner, uqName} = uqApi;\r\n        let un = uqOwner+'/'+uqName;\r\n        let uq = this.local.uqs[un];\r\n        if (uq === undefined) return false;\r\n        let {isNet, value} = uq;\r\n        if (isNet === true) return true;\r\n        let ret = await uqApi.__loadAccess();\r\n        let isMatch = _.isMatch(value, ret);\r\n        if (isMatch === false) {\r\n            this.saveLocal(un, ret);\r\n            return false;\r\n        }\r\n        uq.isNet = true;\r\n        return true;\r\n    }\r\n}\r\n\r\nconst localUqs = new CacheUqLocals;\r\n*/\r\nexport class UqApi extends ApiBase {\r\n    private access:string[];\r\n    uqOwner: string;\r\n    uqName: string;\r\n    uq: string;\r\n    //uqVersion: number;\r\n\r\n    constructor(basePath: string, uqOwner: string, uqName: string, access:string[], showWaiting?: boolean) {\r\n        super(basePath, showWaiting);\r\n        if (uqName) {\r\n            this.uqOwner = uqOwner;\r\n            this.uqName = uqName;\r\n            this.uq = uqOwner + '/' + uqName;\r\n        }\r\n        this.access = access;\r\n        this.showWaiting = showWaiting;\r\n    }\r\n\r\n    //setUqVersion(uqVersion:number) {this.uqVersion = undefined}\r\n\r\n    async init() {\r\n        await buildAppUq(this.uq, this.uqOwner, this.uqName);\r\n    }\r\n\r\n    protected async getHttpChannel(): Promise<HttpChannel> {\r\n        let channels: {[name:string]: HttpChannel};\r\n        let channelUI: HttpChannelNavUI;\r\n        if (this.showWaiting === true || this.showWaiting === undefined) {\r\n            channels = channelUIs;\r\n            channelUI = new HttpChannelNavUI();\r\n        }\r\n        else {\r\n            channels = channelNoUIs;\r\n        }\r\n        let channel = channels[this.uq];\r\n        if (channel !== undefined) return channel;\r\n        let uqToken = appUq(this.uq); //, this.uqOwner, this.uqName);\r\n        if (!uqToken) {\r\n            debugger;\r\n            await this.init();\r\n            uqToken = appUq(this.uq);\r\n        }\r\n        let {url, token} = uqToken;\r\n        this.token = token;\r\n        channel = new UqHttpChannel(url, token, channelUI);\r\n        return channels[this.uq] = channel;\r\n    }\r\n\r\n    /*async update():Promise<string> {\r\n        return await this.get('update');\r\n    }*/\r\n\r\n    /*\r\n    async __loadAccess():Promise<any> {\r\n        let acc = this.access === undefined?\r\n            '' :\r\n            this.access.join('|');\r\n        let ret = await this.get('access', {acc:acc});\r\n        return ret;\r\n    }\r\n    */\r\n    async loadAccess():Promise<any> {\r\n        //return await localUqs.loadAccess(this);\r\n        let acc = this.access === undefined?\r\n            '' :\r\n            this.access.join('|');\r\n        let ret = await this.get('access', {acc:acc});\r\n        return ret;\r\n    }\r\n\r\n    /*async loadEntities():Promise<any> {\r\n        return await this.get('entities');\r\n    }*/\r\n\r\n    /*\r\n    async checkAccess():Promise<boolean> {\r\n        return await localUqs.checkAccess(this);\r\n    }\r\n    */\r\n\r\n    async schema(name:string):Promise<any> {\r\n        return await this.get('schema/' + name);\r\n    }\r\n\r\n    async queueModify(start:number, page:number, entities:string) {\r\n        return await this.post('queue-modify', {start:start, page:page, entities:entities});\r\n    }\r\n\r\n    /*async schemas(names:string[]):Promise<any[]> {\r\n        return await this.post('schema', names);\r\n    }*/\r\n\r\n    /*\r\n    async tuidGet(name:string, id:number):Promise<any> {\r\n        return await this.get('tuid/' + name + '/' + id);\r\n    }\r\n\r\n    async tuidGetAll(name:string):Promise<any[]> {\r\n        return await this.get('tuid-all/' + name + '/');\r\n    }\r\n\r\n    async tuidSave(name:string, params:any):Promise<any> {\r\n        return await this.post('tuid/' + name, params);\r\n    }\r\n\r\n    async tuidSearch(name:string, arr:string, owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        let ret = await this.post('tuids/' + name, {\r\n            arr: arr,\r\n            owner: owner,\r\n            key: key,\r\n            pageStart: pageStart,\r\n            pageSize: pageSize\r\n        });\r\n        return ret;\r\n    }\r\n    async tuidArrGet(name:string, arr:string, owner:number, id:number):Promise<any> {\r\n        return await this.get('tuid-arr/' + name + '/' + owner + '/' + arr + '/' + id);\r\n    }\r\n    async tuidArrGetAll(name:string, arr:string, owner:number):Promise<any[]> {\r\n        return await this.get('tuid-arr-all/' + name + '/' + owner + '/' + arr + '/');\r\n    }\r\n    async tuidArrSave(name:string, arr:string, owner:number, params:any):Promise<any> {\r\n        return await this.post('tuid-arr/' + name + '/' + owner + '/' + arr + '/', params);\r\n    }\r\n    async tuidArrPos(name:string, arr:string, owner:number, id:number, order:number):Promise<any> {\r\n        return await this.post('tuid-arr-pos/' + name + '/' + owner + '/' + arr + '/', {\r\n            id: id,\r\n            $order: order\r\n        });\r\n    }\r\n\r\n    async tuidIds(name:string, arr:string, ids:number[]):Promise<any[]> {\r\n        try {\r\n            let url = 'tuidids/' + name + '/';\r\n            if (arr !== undefined) url += arr;\r\n            else url += '$';\r\n            let ret = await this.post(url, ids);\r\n            return ret;\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n    */\r\n    /*async sheetSave(name:string, data:object):Promise<any> {\r\n        return await this.post('sheet/' + name, data);\r\n    }*/\r\n\r\n    /*async sheetAction(name:string, data:object) {\r\n        return await this.put('sheet/' + name, data);\r\n    }*/\r\n\r\n    /*async stateSheets(name:string, data:object) {\r\n        return await this.post('sheet/' + name + '/states', data);\r\n    }*/\r\n\r\n    /*async stateSheetCount(name:string):Promise<any> {\r\n        return await this.get('sheet/' + name + '/statecount');\r\n    }*/\r\n\r\n    /*async mySheets(name:string, data:object) {\r\n        return await this.post('sheet/' + name + '/my-sheets', data);\r\n    }*/\r\n\r\n    /*async getSheet(name:string, id:number):Promise<any> {\r\n        return await this.get('sheet/' + name + '/get/' + id);\r\n    }*/\r\n\r\n    /*async sheetArchives(name:string, data:object):Promise<any> {\r\n        return await this.post('sheet/' + name + '/archives', data);\r\n    }\r\n\r\n    async sheetArchive(name:string, id:number):Promise<any> {\r\n        return await this.get('sheet/' + name + '/archive/' + id);\r\n    }*/\r\n\r\n    /*async action(name:string, data:object):Promise<any> {\r\n        return await this.post('action/' + name, data);\r\n    }\r\n\r\n    async actionReturns(name:string, data:object):Promise<any[][]> {\r\n        return await this.post('action/' + name + '/returns', data);\r\n    }\r\n\r\n    async page(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\r\n        let p:any;\r\n        switch (typeof params) {\r\n            case 'undefined': p = {key: ''}; break;\r\n            default: p = _.clone(params); break;\r\n        }\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        return await this.post('query-page/' + name, p);\r\n    }\r\n\r\n    async query(name:string, params:any):Promise<any> {\r\n        let ret = await this.post('query/' + name, params);\r\n        return ret;\r\n    }\r\n    */\r\n/*\r\n    async history(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\r\n        let p = _.clone(params);\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        let ret = await this.post('history/' + name, p);\r\n        return ret;\r\n    }\r\n\r\n    async book(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\r\n        let p = _.clone(params);\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        let ret = await this.post('history/' + name, p);\r\n        return ret;\r\n    }\r\n*/\r\n    /*async user():Promise<any> {\r\n        return await this.get('user');\r\n    }*/\r\n}\r\n\r\nlet channels:{[unitId:number]: HttpChannel} = {};\r\n\r\nexport function logoutUnitxApis() {\r\n    channels = {};\r\n}\r\n\r\nexport class UnitxApi extends UqApi {\r\n    private unitId:number;\r\n    constructor(unitId:number) {\r\n        super('tv/', undefined, undefined, undefined, true);\r\n        this.unitId = unitId;\r\n    }\r\n\r\n    protected async getHttpChannel(): Promise<HttpChannel> {\r\n        let channel = channels[this.unitId];\r\n        if (channel !== undefined) return channel;\r\n        return channels[this.unitId] = await this.buildChannel();\r\n    }\r\n\r\n    private async buildChannel():Promise<HttpChannel> {\r\n        let channelUI = new HttpChannelNavUI();\r\n        let centerAppApi = new CenterAppApi('tv/', undefined);\r\n        let ret = await centerAppApi.unitxUq(this.unitId);\r\n        let {token, db, url, urlTest} = ret;\r\n        let realUrl = host.getUrlOrTest(db, url, urlTest);\r\n        this.token = token;\r\n        return new UqHttpChannel(realUrl, token, channelUI);\r\n    }\r\n}\r\n\r\nlet centerHost:string;\r\n\r\nexport function setCenterUrl(url:string) {\r\n    console.log('setCenterUrl %s', url);\r\n    centerHost = url;\r\n    centerToken = undefined;\r\n    centerChannel = undefined;\r\n    centerChannelUI = undefined;\r\n}\r\n\r\nexport let centerToken:string|undefined = undefined;\r\n\r\nlet loginedUserId:number = 0;\r\nexport function setCenterToken(userId:number, t?:string) {\r\n    loginedUserId = userId;\r\n    centerToken = t;\r\n    console.log('setCenterToken %s', t);\r\n    centerChannel = undefined;\r\n    centerChannelUI = undefined;\r\n}\r\n\r\nlet centerChannelUI:HttpChannel;\r\nlet centerChannel:HttpChannel;\r\nfunction getCenterChannelUI():HttpChannel {\r\n    if (centerChannelUI !== undefined) return centerChannelUI;\r\n    return centerChannelUI = new CenterHttpChannel(centerHost, centerToken, new HttpChannelNavUI());\r\n}\r\nfunction getCenterChannel():HttpChannel {\r\n    if (centerChannel !== undefined) return centerChannel;\r\n    return centerChannel = new CenterHttpChannel(centerHost, centerToken);\r\n}\r\n\r\nexport abstract class CenterApiBase extends ApiBase {\r\n    /*\r\n    constructor(path: string, showWaiting?: boolean) {\r\n        super(path, showWaiting);\r\n    }*/\r\n\r\n    protected async getHttpChannel(): Promise<HttpChannel> {\r\n        return (this.showWaiting === true || this.showWaiting === undefined)?\r\n            getCenterChannelUI():\r\n            getCenterChannel();\r\n    }\r\n}\r\n\r\nconst uqTokensName = 'uqTokens';\r\nexport class UqTokenApi extends CenterApiBase {\r\n    private localMap: LocalMap = env.localDb.map(uqTokensName);\r\n\r\n    async uq(params: {unit:number, uqOwner:string, uqName:string}):Promise<any> {\r\n        let {uqOwner, uqName} = params;\r\n        let un = uqOwner+'/'+uqName;\r\n        let localCache = this.localMap.child(un);\r\n        try {\r\n            let uqToken:UqLocal = localCache.get();\r\n            if (uqToken !== undefined) {\r\n                let {unit, user} = uqToken;\r\n                if (unit !== params.unit || user !== loginedUserId) {\r\n                    localCache.remove();\r\n                    uqToken = undefined;\r\n                }\r\n            }\r\n            let nowTick = Math.floor(Date.now() / 1000);\r\n            if (uqToken !== undefined) {\r\n                let {tick, value} = uqToken;\r\n                if (value !== undefined && (nowTick - tick) < 24*3600) {\r\n                    return _.clone(value);\r\n                }\r\n            }\r\n            let appUqParams:any = _.clone(params);\r\n            appUqParams.testing = host.testing;\r\n            let ret = await this.get('app-uq', appUqParams);\r\n            if (ret === undefined) {\r\n                let {unit, uqOwner, uqName} = params;\r\n                let err = `center get app-uq(unit=${unit}, '${uqOwner}/${uqName}') - not exists or no unit-service`;\r\n                throw err;\r\n            }\r\n\r\n            uqToken = {\r\n                unit: params.unit,\r\n                user: loginedUserId,\r\n                tick: nowTick,\r\n                value: ret,\r\n            }\r\n            localCache.set(uqToken);\r\n            return _.clone(ret);\r\n        }\r\n        catch (err) {\r\n            localCache.remove();\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport const uqTokenApi = new UqTokenApi('tv/tie/', undefined);\r\n\r\nexport class CallCenterApi extends CenterApiBase {\r\n    directCall(url:string, method:string, body:any):Promise<any> {\r\n        return this.call(url, method, body);\r\n    }\r\n}\r\nexport const callCenterapi = new CallCenterApi('', undefined);\r\n\r\nexport interface UqAppData {\r\n    appName: string;\r\n    appOwner: string;\r\n    id: number;\r\n    version: string;        // AppUI version\r\n    uqs: UqData[];\r\n}\r\n\r\nexport interface UqData {\r\n    id: number;\r\n    uqOwner: string;\r\n    uqName: string;\r\n    access: string;\r\n    newVersion: boolean;\r\n}\r\n\r\nexport interface UqServiceData {\r\n    id: number;\r\n    db: string;\r\n    url: string;\r\n    urlTest: string;\r\n    token: string;\r\n}\r\n\r\nconst appUqsName = 'appUqs';\r\n\r\nexport class CenterAppApi extends CenterApiBase {\r\n    private local: LocalCache = env.localDb.item(appUqsName);\r\n    //private cachedUqs: UqAppData;\r\n    async uqs(appOwner:string, appName:string):Promise<UqAppData> {\r\n        let ret:UqAppData;\r\n        let appUqs = this.local.get();\r\n        if (appUqs) {\r\n            let {appOwner:rAppOwner, appName:rAppName} = appUqs;\r\n            if (appOwner === rAppOwner && appName === rAppName) ret = appUqs;\r\n        }\r\n        if (ret === undefined) {\r\n            ret = await this.uqsPure(appOwner, appName);\r\n            ret.appName = appName;\r\n            ret.appOwner = appOwner;\r\n            //localStorage.setItem(JSON.stringify(obj));\r\n            this.local.set(ret);\r\n        }\r\n        //return this.cachedUqs = _.cloneDeep(ret);\r\n        return ret;\r\n    }\r\n    private async uqsPure(appOwner:string, appName:string):Promise<UqAppData> {\r\n        return await this.get('tie/app-uqs', {appOwner:appOwner, appName:appName});\r\n    }\r\n    private async isOkCheckUqs(appOwner:string, appName:string):Promise<boolean> {\r\n        let ret = await this.uqsPure(appOwner, appName);\r\n        let {id:cachedId, uqs:cachedUqs} = this.local.get(); //.cachedUqs;\r\n        let {id:retId, uqs:retUqs} = ret;\r\n        if (cachedId !== retId) return false;\r\n        if (cachedUqs.length !== retUqs.length) return false;\r\n        let len = cachedUqs.length;\r\n        for (let i=0; i<len; i++) {\r\n            if (_.isMatch(cachedUqs[i], retUqs[i]) === false) return false;\r\n        }\r\n        return true;\r\n    }\r\n    async checkUqs(appOwner:string, appName:string):Promise<boolean> {\r\n        let ret = await this.isOkCheckUqs(appOwner, appName);\r\n        if (ret === false) {\r\n            this.local.remove();\r\n            nav.start();\r\n        }\r\n        return ret;\r\n    }\r\n    async unitxUq(unit:number):Promise<UqServiceData> {\r\n        return await this.get('tie/unitx-uq', {unit:unit});\r\n    }\r\n    async changePassword(param: {orgPassword:string, newPassword:string}) {\r\n        return await this.post('tie/change-password', param);\r\n    }\r\n}\r\n\r\nexport async function loadAppUqs(appOwner:string, appName:string): Promise<UqAppData> {\r\n    let centerAppApi = new CenterAppApi('tv/', undefined);\r\n    //let unit = meInFrame.unit;\r\n    let ret = await centerAppApi.uqs(appOwner, appName);\r\n    await centerAppApi.checkUqs(appOwner, appName);\r\n    /*\r\n    .then(v => {\r\n        if (v === false) {\r\n            localStorage.removeItem(appUqs);\r\n            nav.start();\r\n        }\r\n    });\r\n    */\r\n    return ret;\r\n}\r\n\r\n//import { nav } from '../ui';\r\n\r\nexport interface RegisterParameter {\r\n    nick:string, \r\n    user:string, \r\n    pwd:string,\r\n    country:number, \r\n    mobile:number, \r\n    mobileCountry:number,\r\n    email:string,\r\n    verify:string,\r\n};\r\n\r\nexport class UserApi extends CenterApiBase {\r\n    async login(params: {user: string, pwd: string, guest: number}): Promise<any> {\r\n        //(params as any).device = nav.local.device.get();\r\n        let ret = await this.get('user/login', params);\r\n        switch (typeof ret) {\r\n            default: return;\r\n            case 'string': return decodeUserToken(ret);\r\n            case 'object':\r\n                let token = ret.token;\r\n                let user = decodeUserToken(token);\r\n                let {nick, icon} = ret;\r\n                if (nick) user.nick = nick;\r\n                if (icon) user.icon = icon;\r\n                return user;\r\n        }\r\n        // !== undefined) return decodeToken(token);\r\n    }\r\n    async register(params: RegisterParameter): Promise<any>\r\n    {\r\n        return await this.post('user/register', params);\r\n    }\r\n\r\n    async setVerify(account:string, type:'mobile'|'email', oem:string) {\r\n        return await this.post('user/set-verify', {account:account, type:type});\r\n    }\r\n\r\n    async checkVerify(account:string, verify:string) {\r\n        return await this.post('user/check-verify', {account:account, verify:verify});\r\n    }\r\n\r\n    async isExists(account:string) {\r\n        return await this.get('user/is-exists', {account:account});\r\n    }\r\n\r\n    async resetPassword(account:string, password:string, verify:string, type:'mobile'|'email') {\r\n        return await this.post('user/reset-password', {account:account, password, verify, type});\r\n    }\r\n    \r\n    async userSetProp(prop:string, value:any) {\r\n        await this.post('tie/user-set-prop', {prop:prop, value:value});\r\n    }\r\n\r\n    async me():Promise<any> {\r\n        return await this.get('tie/me');\r\n    }\r\n}\r\n\r\nexport const userApi = new UserApi('tv/', undefined);\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Controller } from '../../components';\r\n\r\nexport abstract class Link {\r\n    abstract onClick: () => void;\r\n    abstract render(className?:string):JSX.Element;\r\n}\r\n\r\nexport class CLink extends Link {\r\n    private controller: Controller;\r\n    protected icon:string|JSX.Element;\r\n    protected label:string|JSX.Element;\r\n\r\n    constructor(controller:Controller) {\r\n        super();\r\n        this.controller = controller;\r\n        this.icon = controller.icon;\r\n        this.label = controller.label;\r\n    }\r\n\r\n    onClick = async () => {\r\n        await this.controller.start();\r\n    }\r\n\r\n    render(className?:string) {\r\n        return <div\r\n            className={classNames('px-3', 'py-2', 'align-items-center', 'cursor-pointer', className)}\r\n            onClick={this.onClick}>\r\n            {this.icon} &nbsp; {this.label}\r\n        </div>;\r\n        //return React.createElement(this.view, className);\r\n    }\r\n}\r\n","export * from './cLink';\r\n","import { UqApi } from '../net';\r\nimport { LocalCache } from '../tool';\r\nimport { UqMan, Field, ArrFields, FieldMap } from './uqMan';\r\nimport { Tuid } from './tuid';\r\n//import { EntityCache } from './caches';\r\n\r\nconst tab = '\\t';\r\nconst ln = '\\n';\r\n\r\nexport abstract class Entity {\r\n    private jName: string;\r\n    schema: any;\r\n    ver: number = 0;\r\n    sys?: boolean;\r\n    readonly uq: UqMan;\r\n    readonly name: string;\r\n    readonly typeId: number;\r\n    readonly cache: LocalCache;\r\n    readonly uqApi: UqApi;\r\n    abstract get typeName(): string;\r\n    get sName():string {return this.jName || this.name}\r\n    fields: Field[];\r\n    arrFields: ArrFields[];\r\n    returns: ArrFields[];\r\n\r\n    constructor(uq:UqMan, name:string, typeId:number) {\r\n        this.uq = uq;\r\n        this.name = name;\r\n        this.typeId = typeId;\r\n        this.sys = this.name.indexOf('$') >= 0;\r\n        this.cache = this.uq.localMap.item(this.name); // new EntityCache(this);\r\n        this.uqApi = this.uq.uqApi;\r\n    }\r\n\r\n    public face: any;           // 对应字段的label, placeHolder等等的中文，或者语言的翻译\r\n\r\n    //getApiFrom() {return this.entities.uqApi;}\r\n\r\n    private fieldMaps: {[arr:string]: FieldMap} = {};\r\n    fieldMap(arr?:string): FieldMap {\r\n        if (arr === undefined) arr = '$';\r\n        let ret = this.fieldMaps[arr];\r\n        if (ret === undefined) {\r\n            let fields:Field[];\r\n            if (arr === '$') fields = this.fields;\r\n            else if (this.arrFields !== undefined) {\r\n                let arrFields = this.arrFields.find(v => v.name === arr);\r\n                if (arrFields !== undefined) fields = arrFields.fields;\r\n            }\r\n            else if (this.returns !== undefined) {\r\n                let arrFields = this.returns.find(v => v.name === arr);\r\n                if (arrFields !== undefined) fields = arrFields.fields;\r\n            }\r\n            if (fields === undefined) return {};\r\n            ret = {};\r\n            for (let f of fields) ret[f.name] = f;\r\n            this.fieldMaps[arr] = ret;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    public async loadSchema():Promise<void> {\r\n        if (this.schema !== undefined) return;\r\n        let schema = this.cache.get();\r\n        if (!schema) {\r\n            schema = await this.uq.loadEntitySchema(this.name);\r\n        }\r\n        this.setSchema(schema);\r\n        this.buildFieldsTuid();\r\n    }\r\n\r\n    // 如果要在setSchema里面保存cache，必须先调用clearSchema\r\n    public clearSchema() {\r\n        this.schema = undefined;\r\n    }\r\n\r\n    public setSchema(schema:any) {\r\n        if (schema === undefined) return;\r\n        let {name, version} = schema;\r\n        this.ver = version || 0;\r\n        if (name !== this.name) this.jName = name;\r\n        //if (this.schema === undefined) \r\n        this.cache.set(schema);\r\n        this.schema = schema;\r\n        //this.buildFieldsTuid();\r\n    }\r\n\r\n    public buildFieldsTuid() {\r\n        let {fields, arrs, returns} = this.schema;\r\n        this.uq.buildFieldTuid(this.fields = fields);\r\n        this.uq.buildArrFieldsTuid(this.arrFields = arrs, fields);\r\n        this.uq.buildArrFieldsTuid(this.returns = returns, fields);\r\n    }\r\n\r\n    schemaStringify():string {\r\n        return JSON.stringify(this.schema, (key:string, value:any) => {\r\n            if (key === '_tuid') return undefined;\r\n            return value;\r\n        }, 4);\r\n    }\r\n\r\n    tuidFromName(fieldName:string, arrName?:string):Tuid {\r\n        if (this.schema === undefined) return;\r\n        let {fields, arrs} = this.schema;\r\n        let entities = this.uq;\r\n        function getTuid(fn:string, fieldArr:Field[]) {\r\n            if (fieldArr === undefined) return;\r\n            let f = fieldArr.find(v => v.name === fn);\r\n            if (f === undefined) return;\r\n            return entities.getTuid(f.tuid);\r\n        }\r\n        let fn = fieldName.toLowerCase();\r\n        if (arrName === undefined) return getTuid(fn, fields);\r\n        if (arrs === undefined) return;\r\n        let an = arrName.toLowerCase();\r\n        let arr = (arrs as ArrFields[]).find(v => v.name === an);\r\n        if (arr === undefined) return;\r\n        return getTuid(fn, arr.fields);\r\n    }\r\n\r\n    buildParams(params:any):any {\r\n        let result:any = {};\r\n        let fields = this.fields;\r\n        if (fields !== undefined) this.buildFieldsParams(result, fields, params);\r\n        let arrs = this.arrFields;\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                let {name, fields} = arr;\r\n                let paramsArr:any[] = params[name];\r\n                if (paramsArr === undefined) continue;\r\n                let arrResult:any[] = [];\r\n                result[name] = arrResult;\r\n                for (let pa of params) {\r\n                    let rowResult = {};\r\n                    this.buildFieldsParams(rowResult, fields, pa);\r\n                    arrResult.push(rowResult);\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private buildFieldsParams(result:any, fields:Field[], params:any) {\r\n        for (let field of fields) {\r\n            let {name, type} = field;            \r\n            let d = params[name];\r\n            let val:any;\r\n            if (type === 'datetime') {\r\n                val = this.buildDateTimeParam(d);\r\n            }\r\n            else {\r\n                switch (typeof d) {\r\n                    default: val = d; break;\r\n                    case 'object':\r\n                        let tuid = field._tuid;\r\n                        if (tuid === undefined) val = d.id;\r\n                        else val = tuid.getIdFromObj(d);\r\n                        break;\r\n                }\r\n            }\r\n            result[name] = val;\r\n        }\r\n    }\r\n\r\n    buildDateTimeParam(val:any) {\r\n        let dt: Date;\r\n        switch (typeof val) {\r\n            default: debugger; throw new Error('escape datetime field in pack data error: value=' + val);\r\n            case 'undefined': return undefined;\r\n            case 'object': dt = (val as Date); break;\r\n            case 'string':\r\n            case 'number': dt = new Date(val); break;\r\n        }\r\n        return Math.floor(dt.getTime()/1000);\r\n    }\r\n\r\n    buildDateParam(val:any) {\r\n        let dt: Date;\r\n        switch (typeof val) {\r\n            default: debugger; throw new Error('escape datetime field in pack data error: value=' + val);\r\n            case 'undefined': return undefined;\r\n            case 'string': return val;\r\n            case 'object': dt = (val as Date); break;\r\n            case 'number': dt = new Date(val); break;\r\n        }\r\n        let ret = dt.toISOString();\r\n        let p = ret.indexOf('T');\r\n        return p>0? ret.substr(0, p) : ret;\r\n}\r\n\r\n    pack(data:any):string {\r\n        let ret:string[] = [];\r\n        let fields = this.fields;\r\n        if (fields !== undefined) this.packRow(ret, fields, data);\r\n        let arrs = this.arrFields; \r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                this.packArr(ret, arr.fields, data[arr.name]);\r\n            }\r\n        }\r\n        return ret.join('');\r\n    }\r\n\r\n    private escape(row:any, field:Field):any {\r\n        let d = row[field.name];\r\n        switch (field.type) {\r\n            case 'datetime':\r\n                return this.buildDateTimeParam(d);\r\n            default:\r\n                switch (typeof d) {\r\n                    default: return d;\r\n                    case 'object':\r\n                        let tuid = field._tuid;\r\n                        if (tuid === undefined) return d.id;\r\n                        return tuid.getIdFromObj(d);\r\n                    case 'string':\r\n                        let len = d.length;\r\n                        let r = '', p = 0;\r\n                        for (let i=0;i<len;i++) {\r\n                            let c = d.charCodeAt(i);\r\n                            switch(c) {\r\n                                case 9: r += d.substring(p, i) + '\\\\t'; p = i+1; break;\r\n                                case 10: r += d.substring(p, i) + '\\\\n'; p = i+1; break;\r\n                            }\r\n                        }\r\n                        return r + d.substring(p);\r\n                    case 'undefined': return '';\r\n                }\r\n        }\r\n    }\r\n\r\n    private packRow(result:string[], fields:Field[], data:any) {\r\n        let len = fields.length;\r\n        if (len === 0) return;\r\n        let ret = '';\r\n        ret += this.escape(data, fields[0]);\r\n        for (let i=1;i<len;i++) {\r\n            let f = fields[i];\r\n            ret += tab + this.escape(data, f);\r\n        }\r\n        result.push(ret + ln);\r\n    }\r\n\r\n    private packArr(result:string[], fields:Field[], data:any[]) {\r\n        if (data !== undefined) {\r\n            for (let row of data) {\r\n                this.packRow(result, fields, row);\r\n            }\r\n        }\r\n        result.push(ln);\r\n    }\r\n    protected cacheFieldsInValue(values:any, fields:Field[]) {\r\n        for (let f of fields as Field[]) {\r\n            let {name, _tuid} = f;\r\n            if (_tuid === undefined) continue;\r\n            let id = values[name];\r\n            //_tuid.useId(id);\r\n            values[name] = _tuid.boxId(id);\r\n        }\r\n    }\r\n\r\n    protected unpackTuidIdsOfFields(values:string[], fields: Field[]):any[] {\r\n        if (fields === undefined) return values as any[];\r\n        //if (this.fields === undefined) return values as any[];\r\n        let ret:any[] = []\r\n        for (let ln of values) {\r\n            if (!ln) continue;\r\n            let len = ln.length;\r\n            let p = 0;\r\n            while (p<len) {\r\n                let ch = ln.charCodeAt(p);\r\n                if (ch === 10) {\r\n                    ++p;\r\n                    break;\r\n                }\r\n                let row = {};\r\n                p = this.unpackRow(row, fields, ln, p);\r\n                ret.push(row);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    unpackSheet(data:string):any {\r\n        let ret = {} as any; //new this.newMain();\r\n        //if (schema === undefined || data === undefined) return;\r\n        let fields = this.fields;\r\n        let p = 0;\r\n        if (fields !== undefined) p = this.unpackRow(ret, fields, data, p);\r\n        let arrs = this.arrFields; //schema['arrs'];\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                p = this.unpackArr(ret, arr, data, p);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    unpackReturns(data:string):any {\r\n        if (data === undefined) debugger;\r\n        let ret = {} as any;\r\n        //if (schema === undefined || data === undefined) return;\r\n        //let fields = schema.fields;\r\n        let p = 0;\r\n        //if (fields !== undefined) p = unpackRow(ret, schema.fields, data, p);\r\n        let arrs = this.returns; //schema['returns'];\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                //let creater = this.newRet[arr.name];\r\n                p = this.unpackArr(ret, arr, data, p);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    protected unpackRow(ret:any, fields:Field[], data:string, p:number):number {\r\n        let ch0 = 0, ch = 0, c = p, i = 0, len = data.length, fLen = fields.length;\r\n        for (;p<len;p++) {\r\n            ch0 = ch;\r\n            ch = data.charCodeAt(p);\r\n            if (ch === 9) {\r\n                let f = fields[i];\r\n                let {name} = f;\r\n                if (ch0 !== 8) {\r\n                    if (p>c) {\r\n                        let v = data.substring(c, p);\r\n                        ret[name] = this.to(ret, v, f);\r\n                    }\r\n                }\r\n                else {\r\n                    ret[name] = null;\r\n                }\r\n                c = p+1;\r\n                ++i;\r\n                if (i>=fLen) {\r\n                    p = data.indexOf('\\n', c);\r\n                    if (p >= 0) ++p;\r\n                    else p = len;\r\n                    return p;\r\n                }\r\n            }\r\n            else if (ch === 10) {\r\n                let f = fields[i];\r\n                let {name} = f;\r\n                if (ch0 !== 8) {\r\n                    if (p>c) {\r\n                        let v = data.substring(c, p);\r\n                        ret[name] = this.to(ret, v, f);\r\n                    }\r\n                }\r\n                else {\r\n                    ret[name] = null;\r\n                }\r\n                ++p;\r\n                ++i;\r\n                return p;\r\n            }\r\n        }\r\n        let f = fields[i];\r\n        let {name} = f;\r\n        if (ch0 !== 8) {\r\n            let v = data.substring(c);\r\n            ret[name] = this.to(ret, v, f);\r\n        }\r\n        return len;\r\n    }\r\n\r\n    private to(ret:any, v:string, f:Field):any {\r\n        switch (f.type) {\r\n            default: return v;\r\n            case 'datetime':\r\n            case 'time':\r\n                let n = Number(v);\r\n                let date = isNaN(n) === true? new Date(v) : new Date(n*1000);\r\n                return date;\r\n            case 'date':\r\n                let parts = v.split('-');\r\n                return new Date(Number(parts[0]), Number(parts[1])-1, Number(parts[2]));\r\n            case 'tinyint':\r\n            case 'smallint':\r\n            case 'int':\r\n            case 'bigint':\r\n            case 'dec':\r\n                return Number(v);\r\n            case 'id':\r\n                let id = Number(v);\r\n                let {_tuid} = f;\r\n                if (_tuid === undefined) return id;\r\n                return _tuid.boxId(id);\r\n        }\r\n    }\r\n\r\n    private unpackArr(ret:any, arr:ArrFields, data:string, p:number):number {\r\n        let vals:any[] = [], len = data.length;\r\n        let {name, fields} = arr;\r\n        while (p<len) {\r\n            let ch = data.charCodeAt(p);\r\n            if (ch === 10) {\r\n                ++p;\r\n                break;\r\n            }\r\n            let val = {} as any; //new creater();\r\n            vals.push(val);\r\n            p = this.unpackRow(val, fields, data, p);\r\n        }\r\n        ret[name] = vals;\r\n        return p;\r\n    }\r\n}\r\n","const ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\nconst ID_LENGTH = 8;\r\n\r\nexport function uid():string {\r\n    let len = ALPHABET.length;\r\n    let rtn = '';\r\n    for (let i = 0; i < ID_LENGTH; i++) {\r\n        rtn += ALPHABET.charAt(Math.floor(Math.random() * len));\r\n    }\r\n    return rtn;\r\n}\r\n","\r\nlet subAppWindow:Window;\r\nfunction postWsToSubApp(msg:any) {\r\n    if (subAppWindow === undefined) return;\r\n    subAppWindow.postMessage({\r\n        type: 'ws',\r\n        msg: msg\r\n    }, '*');\r\n}\r\n\r\nexport function setSubAppWindow(win:Window) {\r\n    subAppWindow = win;\r\n}\r\n\r\nexport function postWsToTop(msg:any) {\r\n    window.top.postMessage({\r\n        type: 'ws',\r\n        msg: msg\r\n    }, '*');\r\n}\r\n\r\nexport abstract class WsBase {\r\n    wsBaseId:string;\r\n    private handlerSeed = 1;\r\n    private anyHandlers:{[id:number]:(msg:any)=>Promise<void>} = {};\r\n    private msgHandlers:{[id:number]:{type:string, handler:(msg:any)=>Promise<void>}} = {};\r\n    onWsReceiveAny(handler:(msg:any)=>Promise<void>):number {\r\n        let seed = this.handlerSeed++;\r\n        this.anyHandlers[seed] = handler;\r\n        return seed;\r\n    }\r\n    onWsReceive(type:string, handler:(msg:any)=>Promise<void>):number {\r\n        let seed = this.handlerSeed++;\r\n        this.msgHandlers[seed] = {type:type, handler: handler};\r\n        return seed;\r\n    }\r\n    endWsReceive(handlerId:number) {\r\n        delete this.anyHandlers[handlerId];\r\n        delete this.msgHandlers[handlerId];\r\n    }\r\n    async receive(msg:any) {\r\n        let {$type} = msg;\r\n        for (let i in this.anyHandlers) {\r\n            await this.anyHandlers[i](msg);\r\n        }\r\n        for (let i in this.msgHandlers) {\r\n            let {type, handler} = this.msgHandlers[i];\r\n            if (type !== $type) continue;\r\n            await handler(msg);\r\n        }\r\n    }\r\n}\r\n\r\nlet wsBaseSeed = 1;\r\nexport class WsBridge extends WsBase {\r\n    wsBaseId:string = 'WsBridge seed ' + wsBaseSeed++;\r\n}\r\n\r\nexport const wsBridge = new WsBridge();\r\n\r\nexport class WSChannel extends WsBase {\r\n    wsBaseId:string = 'WSChannel seed ' + wsBaseSeed++;\r\n    static centerToken:string;\r\n    private wsHost: string;\r\n    private token: string;\r\n    private ws: WebSocket;\r\n\r\n    constructor(wsHost: string, token: string) {\r\n        super();\r\n        this.wsHost = wsHost;\r\n        this.token = token;\r\n    }\r\n\r\n    static setCenterToken(token?: string) {\r\n        WSChannel.centerToken = token;\r\n    }\r\n    \r\n    connect():Promise<void> {\r\n        //this.wsHost = wsHost;\r\n        //this.token = token || WSChannel.centerToken;\r\n        if (this.ws !== undefined) return;\r\n        let that = this;\r\n        return new Promise((resolve, reject) => {\r\n            let ws = new WebSocket(this.wsHost, this.token || WSChannel.centerToken);\r\n            console.log('connect webSocket %s', this.wsHost);\r\n            ws.onopen = (ev) => {\r\n                console.log('webSocket connected %s', this.wsHost);\r\n                that.ws = ws;\r\n                resolve();\r\n            };\r\n            ws.onerror = (ev) => {\r\n                reject('webSocket can\\'t open!');\r\n            };\r\n            ws.onmessage = async (msg) => await that.wsMessage(msg);\r\n            ws.onclose = (ev) => {\r\n                that.ws = undefined;\r\n                console.log('webSocket closed!');\r\n            }\r\n        });\r\n    }\r\n    close() {\r\n        if (this.ws !== undefined) {\r\n            this.ws.close();\r\n            this.ws = undefined;\r\n        }\r\n    }\r\n    private async wsMessage(event:any):Promise<void> {\r\n        try {\r\n            console.log('websocket message: %s', event.data);\r\n            let msg = JSON.parse(event.data);\r\n            postWsToSubApp(msg);\r\n            await this.receive(msg);\r\n        }\r\n        catch (err) {\r\n            console.log('ws msg error: ', err);\r\n        }\r\n    }\r\n    sendWs(msg:any) {\r\n        let netThis = this;\r\n        this.connect().then(() => {\r\n            netThis.ws.send(msg);\r\n        });\r\n    }\r\n}\r\n","export * from './uqMan';\r\nexport * from './entity';\r\nexport * from './action';\r\nexport * from './query';\r\nexport * from './sheet';\r\nexport * from './tuid';\r\nexport * from './book';\r\nexport * from './map';\r\nexport * from './history';\r\nexport * from './pending';\r\nexport * from './uqsMan';\r\n","//import _ from 'lodash';\r\nimport {observable, IObservableArray} from 'mobx';\r\nimport { PageItems } from '../tool';\r\nimport {Field, ArrFields} from './uqMan';\r\nimport {Entity} from './entity';\r\nimport { QueryQueryCaller, QueryPageCaller } from './caller';\r\n\r\nexport type QueryPageApi = (name:string, pageStart:any, pageSize:number, params:any) => Promise<string>;\r\n\r\nexport class QueryPager<T extends any> extends PageItems<T> {\r\n    private query: Query;\r\n    constructor(query: Query, pageSize?: number, firstSize?: number) {\r\n        super();\r\n        this.query = query;\r\n        if (pageSize !== undefined) this.pageSize = pageSize;\r\n        if (firstSize !== undefined) this.firstSize = firstSize;\r\n    }\r\n\r\n    protected async onLoad() {\r\n        let {schema} = this.query;\r\n        if (schema === undefined) await this.query.loadSchema();\r\n    }\r\n\r\n    protected async load(param:any, pageStart:any, pageSize:number):Promise<T[]> {\r\n        if (pageStart === undefined) pageStart = 0;\r\n        let ret = await this.query.page(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:T) {\r\n        let {schema} = this.query;\r\n        if (schema === undefined) return;\r\n        let $page = (schema.returns as any[]).find(v => v.name === '$page');\r\n        if ($page === undefined) return;\r\n        let {order} = $page;\r\n        if (order === undefined) return;\r\n        let {field, type, asc} = order;\r\n        let start:any;\r\n        if (item !== undefined) start = item[field];\r\n        if (asc === false) {\r\n            this.appendPosition = 'head';\r\n            switch (type) {\r\n                default:\r\n                case 'tinyint':\r\n                case 'smallint':\r\n                case 'int':\r\n                case 'bigint':\r\n                case 'dec': start = 999999999999; break;\r\n                case 'date':\r\n                case 'datetime': start = undefined; break;          // 会自动使用现在\r\n                case 'char': start = ''; break;\r\n            }\r\n        }\r\n        else {\r\n            this.appendPosition = 'tail';\r\n            switch (type) {\r\n                default:\r\n                case 'tinyint':\r\n                case 'smallint':\r\n                case 'int':\r\n                case 'bigint':\r\n                case 'dec': start = 0; break;\r\n                case 'date':\r\n                case 'datetime': start = '1970-1-1'; break;\r\n                case 'char': start = ''; break;\r\n            }\r\n        }\r\n        this.pageStart = start;\r\n    }\r\n}\r\n\r\nexport class Query extends Entity {\r\n    get typeName(): string { return 'query';}\r\n    private pageStart: any;\r\n    private pageSize:number;\r\n    private params:any;\r\n    private more: boolean;\r\n    private startField: Field;\r\n    @observable list:IObservableArray; // = observable.array([], {deep: false});\r\n    returns: ArrFields[];\r\n    isPaged: boolean;\r\n\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        let {returns} = schema;\r\n        //this.returns = returns;\r\n        this.isPaged = returns && (returns as any[]).find(v => v.name === '$page') !== undefined;\r\n    }\r\n\r\n    resetPage(size:number, params:any) {\r\n        this.pageStart = undefined;\r\n        this.pageSize = size;\r\n        this.params = params;\r\n        this.more = false;\r\n        this.list = undefined;\r\n    }\r\n    get hasMore() {return this.more;}\r\n    async loadPage():Promise<void> {\r\n        if (this.pageSize === undefined) {\r\n            throw new Error('call resetPage(size:number, params:any) first');\r\n        }\r\n        let pageStart:any;\r\n        if (this.pageStart !== undefined) {\r\n            switch (this.startField.type) {\r\n                default: pageStart = this.pageStart; break;\r\n                case 'date':\r\n                case 'time':\r\n                case 'datetime': pageStart = (this.pageStart as Date).getTime(); break;\r\n            }\r\n        }\r\n        let page = await this.page(this.params, pageStart, this.pageSize+1);\r\n        /*\r\n        await this.loadSchema();\r\n        let res = await this.tvApi.page(this.name, pageStart, this.pageSize+1, this.params);\r\n        let data = await this.unpackReturns(res);\r\n        let page = data['$page'] as any[];\r\n        */\r\n        this.list = observable.array([], {deep: false});\r\n        if (page !== undefined) {\r\n            if (page.length > this.pageSize) {\r\n                this.more = true;\r\n                page.pop();\r\n                let ret = this.returns.find(r => r.name === '$page');\r\n                this.startField = ret.fields[0];\r\n                this.pageStart = page[page.length-1][this.startField.name];\r\n            }\r\n            else {\r\n                this.more = false;\r\n            }\r\n            this.list.push(...page);\r\n        }\r\n        //this.loaded = true;\r\n    }\r\n\r\n    protected pageCaller(params: any): QueryPageCaller {\r\n        return new QueryPageCaller(this, params);\r\n    }\r\n\r\n    async page(params:any, pageStart:any, pageSize:number):Promise<any[]> {\r\n        /*\r\n        await this.loadSchema();\r\n        let res = await this.uqApi.page(this.name, pageStart, pageSize+1, this.buildParams(params));\r\n        */\r\n        let p = {pageStart:pageStart, pageSize:pageSize+1, params:params};\r\n        let res = await this.pageCaller(p).request();\r\n        //let data = this.unpackReturns(res);\r\n        //return data.$page;// as any[];\r\n        return res;\r\n    }\r\n    protected queryCaller(params: any): QueryQueryCaller {\r\n        return new QueryQueryCaller(this, params);\r\n    }\r\n    async query(params:any):Promise<any> {\r\n        /*\r\n        await this.loadSchema();\r\n        let res = await this.uqApi.query(this.name, this.buildParams(params));\r\n        */\r\n        let res = await this.queryCaller(params).request();\r\n        //let data = this.unpackReturns(res);\r\n        //return data;\r\n        return res;\r\n    }\r\n    async table(params:any): Promise<any[]> {\r\n        let ret = await this.query(params);\r\n        for (let i in ret) {\r\n            return ret[i];\r\n        }\r\n    }\r\n    async obj(params:any):Promise<any> {\r\n        let ret = await this.table(params);\r\n        if (ret.length > 0) return ret[0];\r\n    }\r\n    async scalar(params:any):Promise<any> {\r\n        let ret = await this.obj(params);\r\n        for (let i in ret) return ret[i];\r\n    }\r\n}\r\n","//import * as React from 'react';\r\nimport { ItemSchema, UiItem } from '../schema';\r\nimport { nav } from '../nav';\r\n//import { Page } from '../page';\r\n//import { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { FieldRule } from '../form/rules';\r\n\r\nexport abstract class ItemEdit {\r\n    protected name: string;\r\n    protected itemSchema: ItemSchema;\r\n    protected uiItem:UiItem;\r\n    protected value: any;\r\n    protected label: string;\r\n\r\n    @observable protected error: string;\r\n    @observable protected isChanged: boolean = false;\r\n    protected newValue: any;\r\n\r\n    constructor(itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any) {\r\n        this.itemSchema = itemSchema;\r\n        this.uiItem = uiItem\r\n        this.value = value;\r\n        let {name} = itemSchema;\r\n        this.name = name;\r\n        this.label = label;\r\n    }\r\n    async start():Promise<any> {\r\n        return await this.internalStart();\r\n    }\r\n\r\n    protected abstract internalStart():Promise<any>;\r\n\r\n    async end():Promise<any> {\r\n        await this.internalEnd()\r\n    }\r\n\r\n    protected async internalEnd():Promise<void> {nav.pop()}\r\n\r\n    protected verifyValue() {\r\n        if (this.uiItem === undefined) return;\r\n        let {rules} = this.uiItem;\r\n        if (rules === undefined) return;\r\n        let nv = this.newValue;\r\n        function verifyRule(rule:FieldRule, value: any):string {\r\n            let error = rule(nv);\r\n            if (error !== undefined) {\r\n                if (typeof error !== 'object')\r\n                    return error;\r\n                else\r\n                    return JSON.stringify(error);\r\n            }\r\n        }\r\n        if (Array.isArray(rules)) {\r\n            for (let rule of rules) {\r\n                let error = verifyRule(rule as FieldRule, nv);\r\n                if (error !== undefined) {\r\n                    this.error = error;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.error = verifyRule(rules as FieldRule, nv);\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { nav } from './nav';\r\n\r\nexport interface ImageProps {\r\n    src: string;\r\n    className?: string;\r\n    style?: React.CSSProperties;\r\n    altImage?: string;\r\n}\r\n\r\nexport function Image(props: ImageProps) {\r\n    let {className, style, src, altImage} = props;\r\n    if (!src) {\r\n        return <div className={classNames(className, 'image-none')} style={style}>\r\n            <i className=\"fa fa-file-o\" />\r\n        </div>;\r\n    }\r\n    if (src.startsWith(':') === true) {\r\n        src = nav.resUrl + src.substr(1);\r\n    }\r\n    return <img src={src} className={className} alt=\"img\"\r\n        style={style}\r\n        onError={evt=>{\r\n            if (altImage) evt.currentTarget.src=altImage;\r\n            else evt.currentTarget.src = 'https://tv.jkchemical.com/imgs/0001.png';\r\n        }} />;\r\n}\r\n","import jwtDecode from 'jwt-decode';\r\n\r\nexport interface Unit {\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\nexport interface Guest {\r\n    id: number;             // id = 0\r\n    guest: number;\r\n    token: string;\r\n}\r\n\r\nexport interface User extends Guest {\r\n    id: number;\r\n    name: string;\r\n    nick?: string;\r\n    icon?: string;\r\n}\r\n\r\nexport function decodeUserToken(token: string): User {\r\n    let ret:any = jwtDecode(token);\r\n    let user: User = {\r\n        id: ret.id,\r\n        name: ret.name,\r\n        guest: ret.guest,\r\n        token: token,\r\n    };\r\n    return user;\r\n}\r\n\r\nexport function decodeGuestToken(token: string): Guest {\r\n    let ret:any = jwtDecode(token);\r\n    let guest: Guest = {\r\n        id: 0,\r\n        guest: ret.guest,\r\n        token: token,\r\n    };\r\n    return guest;\r\n}\r\n","import { env } from '../tool';\r\n\r\nconst centerHost = process.env['REACT_APP_CENTER_HOST'];\r\nconst centerDebugHost = 'localhost:3000'; //'192.168.86.64';\r\nconst resHost = process.env['REACT_APP_RES_HOST'] || centerHost;\r\nconst resDebugHost = 'localhost:3015'; //'192.168.86.63';\r\nconst uqDebugHost = 'localhost:3015'; //'192.168.86.63';\r\nconst uqDebugBuilderHost = 'localhost:3009';\r\ninterface HostValue {\r\n    value: string;\r\n    local: boolean;\r\n}\r\nconst hosts:{[name:string]:HostValue} = {\r\n    centerhost: {\r\n        value: process.env['REACT_APP_CENTER_DEBUG_HOST'] || centerDebugHost, \r\n        local: false\r\n    },\r\n    reshost: {\r\n        value: process.env['REACT_APP_RES_DEBUG_HOST'] || resDebugHost,\r\n        local: false\r\n    },\r\n    uqhost: {\r\n        value: process.env['REACT_APP_UQ_DEBUG_HOST'] || uqDebugHost, \r\n        local: false\r\n    },\r\n    unitxhost: {\r\n        value: process.env['REACT_APP_UQ_DEBUG_HOST'] || uqDebugHost, \r\n        local: false\r\n    },\r\n    \"uq-build\": {\r\n        value: process.env['REACT_APP_UQ_DEBUG_BUILDER_HOST'] || uqDebugBuilderHost, \r\n        local: false\r\n    }\r\n}\r\n\r\nconst httpArr = ['https://', 'http://'];\r\nfunction isAbsoluteUrl(url:string):boolean {\r\n    for (let str of httpArr) {\r\n        if (url.startsWith(str) === true) return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction urlFromHost(host:string):string {\r\n    if (isAbsoluteUrl(host) === true) {\r\n        if (host.endsWith('/')) return host;\r\n        return host + '/';\r\n    }\r\n    return `http://${host}/`;\r\n}\r\n\r\nfunction centerUrlFromHost(host:string):string {\r\n    return urlFromHost(host);\r\n}\r\nfunction centerWsFromHost(host:string) {\r\n    let https = 'https://';\r\n    if (host.startsWith(https) === true) {\r\n        host = host.substr(https.length);\r\n        if (host.endsWith('/') === true) host = host.substr(0, host.length-1);\r\n        return 'wss://' + host + '/tv/';\r\n    }\r\n    return `ws://${host}/tv/`\r\n}\r\nexport function resUrlFromHost(host:string) {\r\n    let url = urlFromHost(host);\r\n    return url + 'res/';\r\n}\r\n\r\nconst fetchOptions = {\r\n    method: \"GET\",\r\n    mode: \"no-cors\", // no-cors, cors, *same-origin\r\n    headers: {\r\n        \"Content-Type\": \"text/plain\"\r\n    },\r\n};\r\n\r\nclass Host {\r\n    testing: boolean;\r\n    url: string;\r\n    ws: string;\r\n    resHost: string;\r\n\r\n    async start(testing:boolean) {\r\n        this.testing = testing;\r\n        if (env.isDevelopment === true) {\r\n            await this.tryLocal();\r\n        }\r\n        let host = this.getCenterHost();\r\n        this.url = centerUrlFromHost(host);\r\n        this.ws = centerWsFromHost(host);\r\n        this.resHost = this.getResHost();\r\n    }\r\n\r\n    private debugHostUrl(host:string) {return `http://${host}/hello`}\r\n    private async tryLocal() {\r\n        let promises:PromiseLike<any>[] = [];\r\n        let hostArr:string[] = [];\r\n        for (let i in hosts) {\r\n            let hostValue = hosts[i];\r\n            let {value} = hostValue;\r\n            if (hostArr.findIndex(v => v === value) < 0) hostArr.push(value);\r\n        }\r\n\r\n        for (let host of hostArr) {\r\n            let fetchUrl = this.debugHostUrl(host);\r\n            promises.push(localCheck(fetchUrl));\r\n        }\r\n        let results = await Promise.all(promises);\r\n        let len = hostArr.length;\r\n        for (let i=0; i<len; i++) {\r\n            let local = results[i];\r\n            let host = hostArr[i];\r\n            for (let j in hosts) {\r\n                let hostValue = hosts[j];\r\n                if (hostValue.value === host) {\r\n                    hostValue.local = local;\r\n                }\r\n            }\r\n        }\r\n        /*\r\n        let p = 0;\r\n        for (let i in hosts) {\r\n            let hostValue = hosts[i];\r\n            hostValue.local = results[p];\r\n            ++p;\r\n        }\r\n        */\r\n    }\r\n\r\n    private getCenterHost():string {\r\n        let {value, local} = hosts.centerhost;\r\n        let hash = document.location.hash;\r\n        if (hash.includes('sheet_debug') === true) {\r\n            return value;\r\n        }\r\n        if (env.isDevelopment === true) {\r\n            if (local === true) return value;\r\n        }\r\n        return centerHost;\r\n    }\r\n\r\n    private getResHost():string {\r\n        let {value, local} = hosts.reshost;\r\n        let hash = document.location.hash;\r\n        if (hash.includes('sheet_debug') === true) {\r\n            return value;\r\n        }\r\n        if (env.isDevelopment === true) {\r\n            if (local === true) return value;\r\n        }\r\n        return resHost;\r\n    }\r\n\r\n    getUrlOrDebug(url:string, debugHost:string = 'uqhost'):string {\r\n        if (env.isDevelopment === false) return url;\r\n        let host = hosts[debugHost];\r\n        if (host === undefined) return url;\r\n        let {value, local} = host;\r\n        if (local === false) return url;\r\n        return `http://${value}/`;\r\n    }\r\n    getUrlOrTest(db:string, url:string, urlTest:string):string {\r\n        let path:string;\r\n        if (this.testing === true) {\r\n            if (urlTest !== '-') url = urlTest;\r\n            path = 'uq/test/' + db + '/';\r\n        }\r\n        else {\r\n            path = 'uq/prod/' + db + '/';\r\n        }\r\n        url = this.getUrlOrDebug(url);\r\n        return url + path;\r\n    }\r\n\r\n    async localCheck(urlDebug: string):Promise<boolean> {\r\n        return await localCheck(urlDebug);\r\n    }\r\n}\r\n\r\nexport const host:Host = new Host();\r\n\r\n// 因为测试的都是局域网服务器，甚至本机服务器，所以一秒足够了\r\n// 网上找了上面的fetch timeout代码。\r\n// 尽管timeout了，fetch仍然继续，没有cancel\r\n\r\n// 实际上，一秒钟不够。web服务器会自动停。重启的时候，可能会比较长时间。也许两秒甚至更多。\r\n//const timeout = 2000;\r\nconst timeout = 200;\r\n\r\nfunction fetchLocalCheck(url:string):Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      fetch(url, fetchOptions as any)\r\n      .then(v => {\r\n          v.text().then(resolve).catch(reject);\r\n      })\r\n      .catch(reject);\r\n      const e = new Error(\"Connection timed out\");\r\n      setTimeout(reject, timeout, e);\r\n    });\r\n}\r\n\r\nasync function localCheck(url:string):Promise<boolean> {\r\n    try {\r\n        await fetchLocalCheck(url);\r\n        return true;\r\n    }\r\n    catch (err) {\r\n        return false;\r\n    }\r\n}\r\n\r\n/*\r\nexport interface IUqForChannel {\r\n    uq: string;\r\n    uqVersion: number;\r\n}\r\n*/","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Tuid, BoxId } from '../../uq';\r\nimport { PureJSONContent } from '../tools';\r\n\r\nexport class TuidWithUIRes {\r\n    readonly tuid: Tuid;\r\n    readonly ui: any;\r\n    readonly res: any;\r\n    constructor(tuid:Tuid, ui:any, res:any) {\r\n        this.tuid = tuid;\r\n        this.ui = ui;\r\n        this.res = res;\r\n    }\r\n}\r\n\r\nexport class ReactBoxId implements BoxId {\r\n    readonly id: number;\r\n    protected tuidUR: TuidWithUIRes;\r\n    readonly isUndefined:boolean;\r\n    constructor(tuidUR: TuidWithUIRes, id: number) {\r\n        this.tuidUR = tuidUR;\r\n        this.id = id;\r\n        this.isUndefined = (this.tuidUR.tuid === undefined);\r\n    }\r\n\r\n    get obj():any {\r\n        return this.tuidUR.tuid.valueFromId(this.id);\r\n    }\r\n\r\n    render(ui:TvTemplet, x:any):JSX.Element {\r\n        if (this.id === undefined || this.id === null) return;\r\n        let boxName = this.boxName; // this.tuid.name;\r\n        let val = this.obj; // this.tuid.valueFromId(this.id);\r\n        if (this.isUndefined === true) {\r\n            if (ui !== undefined) return ui(val, x);\r\n            return PureJSONContent(val, x);\r\n        }\r\n        switch (typeof val) {\r\n            case 'undefined':\r\n                return <del className=\"text-black-50\">{boxName} undefined</del>;\r\n            case 'number':\r\n                return <del className=\"text-black-50\">{boxName} {this.id}</del>;\r\n        }\r\n        if (ui === undefined) {\r\n            ui = this.tuidUR.ui;\r\n        }\r\n        if (ui !== undefined) {\r\n            if (typeof ui !== 'function') {\r\n                ui = (ui as any).content;\r\n            }\r\n            if (ui !== undefined) {\r\n                let ret = ui(val, this.tuidUR.res);\r\n                if (ret !== undefined) return ret;\r\n                return <del className=\"text-danger\">{boxName} {this.id}</del>;\r\n            }\r\n        }\r\n\r\n        return PureJSONContent(val);\r\n    }\r\n\r\n    get boxName():string {return this.tuidUR.tuid.name}\r\n    // ui(): TvTemplet {return this.tuid.ui}\r\n    // res(): any {return this.tuid.res}\r\n\r\n    async assure(): Promise<void> {\r\n        await this.tuidUR.tuid.assureBox(this.id);\r\n    }\r\n}\r\n\r\nfunction boxIdContent(bi: number|BoxId, ui:TvTemplet, x:any) {\r\n    let logContent:any;\r\n    let boxId:ReactBoxId = bi as ReactBoxId;\r\n    switch(typeof bi) {\r\n        case 'undefined': logContent = <>boxId undefined</>; break;\r\n        case 'number': logContent = <>id:{bi}</>; break;\r\n        default:\r\n            if (typeof boxId.render !== 'function') {\r\n                if (ui === undefined) {\r\n                    logContent = PureJSONContent(bi, x);\r\n                }\r\n                else {\r\n                    return ui(bi, x);\r\n                }\r\n            }\r\n            break;\r\n    }\r\n    if (logContent !== undefined) {\r\n        return <del className=\"text-danger\">{logContent}</del>;\r\n    }\r\n    return boxId.render(ui, x);\r\n}\r\n\r\nexport type TvTemplet = (values?:any, x?:any) => JSX.Element;\r\n\r\ninterface Props {\r\n    tuidValue: number|BoxId, \r\n    ui?: TvTemplet,\r\n    x?: any,\r\n    nullUI?: ()=>JSX.Element\r\n}\r\n\r\nconst Tv = observer(({tuidValue, ui, x, nullUI}:Props) => {\r\n    if (tuidValue === undefined) {\r\n        if (nullUI === undefined) return <>[undefined]</>;\r\n        return nullUI();\r\n    }\r\n    if (tuidValue === null) {\r\n        if (nullUI === undefined) return <>[null]</>;\r\n        return nullUI();\r\n    }\r\n    let ttv = typeof tuidValue;\r\n    switch (ttv) {\r\n        default:\r\n            if (ui === undefined)\r\n                return <>{ttv}-{tuidValue}</>;\r\n            else {\r\n                let ret = ui(tuidValue, x);\r\n                if (ret !== undefined) return ret;\r\n                return <>{tuidValue}</>;\r\n            }\r\n        case 'object':\r\n            let divObj = boxIdContent(tuidValue, ui, x);\r\n            if (divObj !== undefined) return divObj;\r\n            return nullUI === undefined? <>id null</>: nullUI();\r\n        case 'number':\r\n            return <>id...{tuidValue}</>;\r\n    }\r\n});\r\n\r\nexport const tv = (tuidValue:number|BoxId, ui?:TvTemplet, x?:any, nullUI?:()=>JSX.Element):JSX.Element => {\r\n    return <Tv tuidValue={tuidValue} ui={ui} x={x} nullUI={nullUI} />;\r\n};\r\n\r\n/*\r\nclass BoxDivId extends BoxId {\r\n    private div: TuidDiv;\r\n    constructor(tuid: Tuid, div: TuidDiv, id: number) {\r\n        super(tuid, id);\r\n        this.div = div;\r\n    }\r\n    get obj():any {\r\n        return this.div.valueFromId(this.id);\r\n    }\r\n    boxName():string {return this.div.name}\r\n    isUndefined(): boolean {return this.div === undefined}\r\n    ui(): TvTemplet {return this.div.ui}\r\n    res(): any {return this.div.res}\r\n\r\n    async assure(): Promise<void> {\r\n        await this.div.assureBox(this.id);\r\n    }\r\n}\r\n*/\r\n","export * from './form';\r\nexport * from './multiStep';","import * as React from 'react';\r\nimport { Page, SearchBox, LMR } from '../../components';\r\nimport { Tuid } from '../../uq';\r\nimport { CLink } from '../link';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CTuidMain, TuidUI } from './cTuid';\r\n\r\nexport class VTuidMain extends VEntity<Tuid, TuidUI, CTuidMain> {\r\n    protected controller: CTuidMain;\r\n    onNew = () => this.event('new');\r\n    onList = () => this.event('list');\r\n    onSearch = async (key:string) => this.event('list', key);\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected entityRender(link: CLink, index: number): JSX.Element {\r\n        return link.render();\r\n    }\r\n\r\n    protected async entityClick(link: CLink) {\r\n        await link.onClick();\r\n    }\r\n\r\n    protected get view() {\r\n        let {label, isImport} = this.controller;\r\n        let newButton:any;\r\n        if (isImport === false) newButton = <button className=\"btn btn-outline-success ml-2\" onClick={this.onNew}>新增</button>;\r\n        let right = <>\r\n            {newButton}\r\n            <button className=\"btn btn-outline-info ml-2\" onClick={this.onList}>全部</button>\r\n        </>;\r\n        let content = <LMR className='m-3' right={right}>\r\n            <SearchBox className=\"w-100\" size=\"md\"\r\n                onSearch={this.onSearch} \r\n                placeholder={'搜索'+label} />\r\n        </LMR>;\r\n        return () => <Page header={label}>\r\n            {content}\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Page, FA } from '../../components';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CTuidMain, TuidUI } from './cTuid';\r\nimport { Tuid } from '../../uq';\r\n\r\nexport type TypeVTuidEdit = typeof VTuidEdit;\r\n\r\nexport class VTuidEdit extends VEntity<Tuid, TuidUI, CTuidMain> {\r\n    private vForm: VForm;\r\n    private id: number;\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        if (param !== undefined) {\r\n            this.id = param.id;\r\n        }\r\n        this.openPage(this.editView);\r\n    }\r\n\r\n    protected get editView() {\r\n        return () => <Page header={(this.id===undefined? '新增':'编辑') + ' - ' + this.label}>\r\n            {this.vForm.render('py-3')}\r\n        </Page>;\r\n    }\r\n\r\n    protected next = async () => {\r\n        this.vForm.reset();\r\n        this.closePage();\r\n    }\r\n\r\n    protected finish = () => {\r\n        this.closePage(2);\r\n        this.event('edit-end');\r\n    }\r\n\r\n    protected resetForm() {\r\n        this.vForm.reset();\r\n    }\r\n\r\n    protected onSubmit = async () => {\r\n        let values = this.vForm.getValues();\r\n        let ret = await this.controller.entity.save(this.id, values);\r\n        let {id} = ret;\r\n        if (id < 0) {\r\n            let {unique} = this.controller.entity;\r\n            if (unique !== undefined) {\r\n                for (let u of unique) {\r\n                    this.vForm.setError(u, '不能重复');\r\n                }\r\n            }\r\n            return;\r\n        }\r\n        if (this.controller.isCalling) {\r\n            this.returnCall(id);\r\n            this.closePage();\r\n            return;\r\n        }\r\n        this.openPageElement(<Page header={this.label + '提交成功'} back=\"none\">\r\n            <div className='m-3'>\r\n                <span className=\"text-success\">\r\n                    <FA name='check-circle' size='lg' /> 成功提交！\r\n                </span>\r\n                <div className='mt-5'>\r\n                    <button className=\"btn btn-primary mr-3\" onClick={this.next}>继续录入</button>\r\n                    <button className=\"btn btn-outline-primary\" onClick={this.finish}>不继续</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n\r\n        this.event('item-changed', {id: this.id, values: values});\r\n        return;\r\n    }\r\n\r\n    //protected view = TuidNewPage;\r\n}\r\n/*\r\nconst TuidNewPage = observer(({vm}:{vm:VmTuidEdit}) => {\r\n    let {label, id, vmForm} = vm;\r\n    return <Page header={(id===undefined? '新增':'编辑') + ' - ' + label}>\r\n        {vmForm.render('mx-3 my-2')}\r\n    </Page>;\r\n});\r\n*/","import { Page, SearchBox, List } from '../../components';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Tuid } from '../../uq';\r\nimport { CTuid, TuidUI } from './cTuid';\r\nimport React from 'react';\r\nimport { RowContent } from '../form/viewModel';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class VTuidSelect extends VEntity<Tuid, TuidUI, CTuid<Tuid>> {\r\n    protected mainRowContent: (row:any) => JSX.Element;\r\n    protected divRowContent: (row:any) => JSX.Element;\r\n\r\n    async open(param?:any): Promise<void> {\r\n        if (param === undefined)\r\n            await this.showMain(param);\r\n        else\r\n            await this.showDiv(param);\r\n    }\r\n\r\n    private async showMain(param:any) {\r\n        this.mainRowContent = this.ui.rowContent || RowContent;\r\n        await this.controller.searchMain(param);\r\n        this.openPage(this.mainView);\r\n    }\r\n\r\n    private async showDiv(ownerValue: any) {\r\n        let {divs} = this.ui;\r\n        if (divs !== undefined) {\r\n            this.divRowContent = divs[this.entity.name].rowContent;\r\n        }\r\n        if (this.divRowContent === undefined) {\r\n            this.divRowContent = RowContent;\r\n        }\r\n        let divItems = await this.controller.getDivItems(ownerValue);\r\n        this.openPage(this.divView, {items: divItems});\r\n    }\r\n\r\n    protected mainView = observer(() => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearchMain} placeholder={'搜索'+this.label} />;\r\n        return <Page header={header} back=\"close\">\r\n            <List\r\n                items={this.controller.PageItems.items}\r\n                item={{render: this.renderMainRow, onClick: this.clickMainRow}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    });\r\n\r\n    onSearchMain = async (key:string) => {\r\n        await this.controller.searchMain(key);\r\n        //await this.PageItems.first(key);\r\n    }\r\n    renderMainRow = (item:any, index:number):JSX.Element => <this.mainRowContent {...item} />;\r\n    clickMainRow = async (item:any) => {\r\n        this.ceasePage();\r\n        if (this.controller.entity.hasDiv === undefined) {\r\n            this.returnCall(item);\r\n            return;\r\n        }\r\n        await this.showDiv(this.entity.getIdFromObj(item));\r\n    }\r\n\r\n    protected divView = (param:any) => {\r\n        return <Page header=\"选择Div\">\r\n            <List\r\n                items={param.items}\r\n                item={{render: this.renderDivRow, onClick: this.clickDivRow}} />\r\n        </Page>;\r\n    }\r\n    renderDivRow = (item:any, index:number):JSX.Element => <this.divRowContent {...item} />;\r\n    clickDivRow = (item:any) => {\r\n        this.ceasePage();\r\n        this.returnCall(item);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { FA, Page } from '../../components';\r\nimport { jsonStringify } from '../tools';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Tuid } from '../../uq';\r\nimport { TuidUI, CTuidMain } from './cTuid';\r\n\r\nexport type TypeVTuidView = typeof VTuidView;\r\n\r\nexport class VTuidView extends VEntity<Tuid, TuidUI, CTuidMain> {\r\n    vForm: VForm;\r\n    id: number;\r\n\r\n    protected buildForm(param:any) {\r\n        this.vForm = this.createForm(undefined, param);\r\n    }\r\n\r\n    async open(param:any) {\r\n        this.buildForm(param);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    render(param:any) {\r\n        this.buildForm(param);\r\n        return this.vForm.render();\r\n    }\r\n\r\n    async loadId(id: number) {\r\n        this.id = id;\r\n    }\r\n\r\n    protected next = async () => {\r\n        this.vForm.reset();\r\n        this.closePage();\r\n    }\r\n\r\n    protected finish = () => {\r\n        this.closePage(2);\r\n    }\r\n\r\n    protected resetForm() {\r\n        this.vForm.reset();\r\n    }\r\n\r\n    protected onSubmit = async () => {\r\n        let values = this.vForm.getValues();\r\n        let ret = await this.entity.save(this.id, values);\r\n        if (ret) {\r\n            alert('这里还要判断返回值，先不处理了 \\n' + jsonStringify(ret));\r\n        }\r\n        this.openPage(() => <Page header={this.label + '提交成功'} back=\"none\">\r\n            <div className='m-3'>\r\n                <span className=\"text-success\">\r\n                    <FA name='check-circle' size='lg' /> 成功提交！\r\n                </span>\r\n                <div className='mt-5'>\r\n                    <button className=\"btn btn-primary mr-3\" onClick={this.next}>继续录入</button>\r\n                    <button className=\"btn btn-outline-primary\" onClick={this.finish}>不继续</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n        return;\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n            {this.vForm.render('py-3')}\r\n    </Page>;\r\n}\r\n","//import React from 'react';\r\nimport { VTuidView } from './vTuidView';\r\n\r\nexport class VTuidInfo  extends VTuidView {\r\n/*\r\n    async open(param?:any) {\r\n        this.open(this.view);\r\n    }\r\n*/\r\n/*\r\n    private view = () => {\r\n        return <Page>\r\n            TuidInfo\r\n        </Page>\r\n    }\r\n*/\r\n}\r\n","import { PageItems } from '../../tool';\r\nimport { Tuid } from '../../uq';\r\n\r\nexport class TuidPageItems<T> extends PageItems<T> {\r\n    private tuid: Tuid;\r\n    constructor(tuid: Tuid) {\r\n        super(true);\r\n        this.tuid = tuid;\r\n    }\r\n    protected async load(param:any, pageStart:any, pageSize:number):Promise<any[]> {\r\n        let ret = await this.tuid.search(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:any) {\r\n        this.pageStart = item === undefined? 0 : item.id;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { SearchBox, List, Page } from '../../components';\r\n//import { jsonStringify } from '../tools';\r\nimport { Tuid } from '../../uq';\r\nimport { VEntity } from '../CVEntity';\r\nimport { TuidUI, CTuidMain } from './cTuid';\r\nimport { RowContent } from '../form/viewModel';\r\n\r\nexport abstract class VTuidListBase  extends VEntity<Tuid, TuidUI, CTuidMain> {\r\n    protected rowContent: (row:any) => JSX.Element;\r\n    protected ownerId: number;\r\n\r\n    async open(param?:any) {\r\n        this.rowContent = this.ui.rowContent || RowContent;\r\n        //if (this.entity.owner !== undefined) \r\n        this.ownerId = Number(param);\r\n        // 初始查询, key是空的\r\n        //await this.onSearch('');\r\n        await this.controller.searchMain('');\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSearch = async (key:string) => {\r\n        await this.controller.searchMain(key);\r\n        //await this.PageItems.first(key);\r\n    }\r\n    renderRow = (item:any, index:number):JSX.Element => <this.rowContent {...item} />;\r\n\r\n    protected abstract onSelected(item:any): Promise<void>;\r\n    private callOnSelected(item:any) {\r\n        if (this.onSelected === undefined) {\r\n            alert('onSelect is undefined');\r\n            return;\r\n        }\r\n        this.onSelected(item);\r\n    }\r\n    clickRow = (item:any) => {\r\n        this.callOnSelected(item);\r\n    }\r\n    private rowKey = (item:any) => {\r\n        let {id} = item;\r\n        return id;\r\n    }\r\n    protected view = observer(() => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\r\n        /*\r\n        let {owner} = this.entity;\r\n        let ownerTop;\r\n        if (owner !== undefined) {\r\n            let ownerObj = owner.valueFromId(this.ownerId);\r\n            ownerTop = <div>owner: {jsonStringify(ownerObj)}</div>;\r\n        }\r\n        */\r\n        return <Page header={header}>\r\n            {/*ownerTop*/}\r\n            <List\r\n                items={this.controller.PageItems.items}\r\n                item={{render: this.renderRow, onClick: this.clickRow, key:this.rowKey}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    });\r\n}\r\n\r\nexport class VTuidList extends VTuidListBase {\r\n    protected async onSelected(item:any) {\r\n        if (this.controller.isImport === false)\r\n            this.event('edit', item.id);\r\n        else\r\n            this.event('info', item.id);\r\n    }\r\n}\r\n/*\r\nexport abstract class VTuidDivListBase  extends VPage<CTuidDiv> {\r\n    protected ownerId: number;\r\n\r\n    async open(param?:any) {\r\n        //this.PageItems = new TuidPageItems(this.entity);\r\n        if (this.entity.owner !== undefined) this.ownerId = Number(param);\r\n        // 初始查询, key是空的\r\n        //await this.onSearch('');\r\n        await this.controller.searchMain('');\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSearch = async (key:string) => {\r\n        await this.controller.searchMain(key);\r\n        //await this.PageItems.first(key);\r\n    }\r\n    renderRow = (item:any, index:number):JSX.Element => {\r\n        return <div className=\"px-3 py-2\">{jsonStringify(item)}</div>;\r\n    }\r\n\r\n    protected abstract onSelected(item:any): Promise<void>;\r\n    private callOnSelected(item:any) {\r\n        if (this.onSelected === undefined) {\r\n            alert('onSelect is undefined');\r\n            return;\r\n        }\r\n        this.onSelected(item);\r\n    }\r\n    clickRow = (item:any) => {\r\n        this.callOnSelected(item);\r\n    }\r\n\r\n    protected view = observer(() => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\r\n        let {owner} = this.entity;\r\n        let ownerTop;\r\n        if (owner !== undefined) {\r\n            let ownerObj = owner.valueFromId(this.ownerId);\r\n            ownerTop = <div>owner: {jsonStringify(ownerObj)}</div>;\r\n        }\r\n        return <Page header={header}>\r\n            {ownerTop}\r\n            <List\r\n                items={this.controller.PageItems.items}\r\n                item={{render: this.renderRow, onClick: this.clickRow}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    });\r\n}\r\n\r\nexport class VTuidDivList extends VTuidDivListBase {\r\n    protected async onSelected(item:any) {\r\n        this.event('edit', item.id);\r\n    }\r\n}\r\n*/","import _ from 'lodash';\r\nimport { CEntity, EntityUI } from '../CVEntity';\r\nimport { Tuid } from '../../uq';\r\nimport { VTuidMain } from './vTuidMain';\r\nimport { VTuidEdit } from './vTuidEdit';\r\nimport { VTuidSelect } from './vTuidSelect';\r\nimport { CUq } from '../cUq/cUq';\r\n//import { CLink } from '../link';\r\nimport { VTuidInfo } from './vTuidInfo';\r\nimport { TuidPageItems } from './pageItems';\r\nimport { VTuidList } from './vTuidList';\r\nimport { PageItems } from '../../tool';\r\n//import { Controller } from 'ui';\r\n\r\nexport interface TuidUI extends EntityUI {\r\n    CTuidMain?: typeof CTuidMain;\r\n    CTuidEdit?: typeof CTuidEdit;\r\n    CTuidList?: typeof CTuidList;\r\n\r\n    CTuidSelect?: typeof CTuidSelect;\r\n    CTuidInfo?: typeof CTuidInfo;\r\n    content?: React.StatelessComponent<any>;\r\n    rowContent?: React.StatelessComponent<any>;\r\n    divs?: {\r\n        [div:string]: {\r\n            CTuidSelect?: typeof CTuidSelect;\r\n            content?: React.StatelessComponent<any>;\r\n            rowContent?: React.StatelessComponent<any>;\r\n        }\r\n    }\r\n}\r\n\r\nexport abstract class CTuid<T extends Tuid> extends CEntity<T, TuidUI> {\r\n    PageItems:PageItems<any>;\r\n\r\n    protected buildPageItems():PageItems<any> {\r\n        return new TuidPageItems(this.entity);\r\n    }\r\n\r\n    async searchMain(key:string) {\r\n        if (this.PageItems === undefined) {\r\n            this.PageItems = this.buildPageItems();\r\n        }\r\n        if (key !== undefined) await this.PageItems.first(key);\r\n    }\r\n\r\n    async getDivItems(ownerId:number):Promise<any[]> {\r\n        let ret = await this.entity.searchArr(ownerId, undefined, 0, 1000);\r\n        return ret;\r\n    }\r\n}\r\n\r\nexport abstract class CTuidBase extends CTuid<Tuid> {\r\n    /*\r\n    constructor(cUq: CUq, entity:Tuid, ui: TuidUI, res:any) {\r\n        super(cUq, entity, ui, res);\r\n    }*/\r\n    \r\n    from():CTuidBase {\r\n        let ret = this; // this.entity.cFrom();\r\n        if (ret === undefined) return this;\r\n        return ret;\r\n    }\r\n\r\n    cUqFrom():CUq {\r\n        return this.cUq; // this.entity.cUqFrom();\r\n    }\r\n    cEditFrom(): CTuidEdit {\r\n        let cUq = this.cUq; // this.entity.cUqFrom();\r\n        return cUq.cTuidEditFromName(this.entity.name);\r\n    }\r\n    cInfoFrom(): CTuidInfo {\r\n        let cUq = this.cUq; // this.entity.cUqFrom();\r\n        return cUq.cTuidInfoFromName(this.entity.name);\r\n    }\r\n    cSelectFrom(): CTuidSelect {\r\n        let cUq = this.cUq;// this.entity.cUqFrom();\r\n        return cUq.cTuidSelectFromName(this.entity.name);\r\n    }\r\n\r\n    getLable(tuid:Tuid):string {\r\n        if (tuid === this.entity) return this.label;\r\n        let {name} = tuid;\r\n        let {arrs} = this.res;\r\n        if (arrs !== undefined) {\r\n            let arr = arrs[name];\r\n            if (arr !== undefined) {\r\n                let label = arr.label;\r\n                if (label !== undefined) return label;\r\n            }\r\n        }\r\n        return name;\r\n    }\r\n\r\n    isImport: boolean;\r\n\r\n    protected get VTuidMain():typeof VTuidMain {return VTuidMain}\r\n    protected get VTuidEdit():typeof VTuidEdit {return VTuidEdit}\r\n    protected get VTuidList():typeof VTuidList {return VTuidList}\r\n\r\n    protected async internalStart(param?:any):Promise<void> {\r\n        this.isImport = this.entity.isImport;\r\n        await this.openVPage(this.VTuidMain);\r\n    }\r\n\r\n    protected async onEvent(type:string, value:any) {\r\n        //let v: TypeVPage<CTuidMain>;\r\n        switch (type) {\r\n            default: return;\r\n            case 'new': await this.onNew(); break;\r\n            case 'list': await this.onList(); break;\r\n            case 'edit': await this.onEdit(value); return;\r\n            case 'item-changed': this.itemChanged(value); return;\r\n            case 'info': \r\n                let cTuidInfo = new CTuidInfo(this.cUq, this.entity, this.ui, this.res);\r\n                await cTuidInfo.start(value);\r\n                return;\r\n        }\r\n        //await this.openVPage(v, value);\r\n    }\r\n\r\n    protected async edit(values:any) {\r\n        let cTuidEdit = this.ui && this.ui.CTuidEdit;\r\n        if (cTuidEdit === undefined) {\r\n            await this.openVPage(this.VTuidEdit, values);\r\n        }\r\n        else {\r\n            await (new cTuidEdit(this.cUq, this.entity, this.ui, this.res)).start(values);\r\n        }\r\n    }\r\n\r\n    private async onNew() {\r\n        await this.edit(undefined);\r\n    }\r\n\r\n    private async onList() {\r\n        let cTuidList = this.ui && this.ui.CTuidList;\r\n        if (cTuidList === undefined) {\r\n            await this.openVPage(this.VTuidList, undefined);\r\n        }\r\n        else {\r\n            await (new cTuidList(this.cUq, this.entity, this.ui, this.res)).start(undefined);\r\n        }\r\n    }\r\n\r\n    protected async onEdit(id:number) {\r\n        let values:any = undefined;\r\n        if (id !== undefined) {\r\n            values = await this.entity.load(id);\r\n        }\r\n        this.edit(values);\r\n        //await this.openVPage(this.VTuidEdit, values);\r\n    }\r\n\r\n    private itemChanged({id, values}:{id:number, values: any}) {\r\n        if (this.PageItems === undefined) return;\r\n        let items = this.PageItems.items;\r\n        let item = items.find(v => v.id === id);\r\n        if (item !== undefined) {\r\n            _.merge(item, values);\r\n        }\r\n    }\r\n}\r\n\r\nexport class CTuidMain extends CTuidBase {\r\n    protected async internalStart(param?:any):Promise<void> {\r\n        this.isImport = this.entity.isImport;\r\n        await this.openVPage(this.VTuidMain);\r\n    }\r\n\r\n}\r\n\r\nexport class CTuidEdit extends CTuidBase {\r\n    protected async internalStart(id:number):Promise<void> {\r\n        this.isImport = this.entity.isImport;\r\n        if (typeof(id) === 'number') {\r\n            await this.onEdit(id);\r\n        }\r\n        else {\r\n            await this.edit(id);\r\n        }\r\n    }\r\n\r\n    protected async edit(values:any) {\r\n        await this.openVPage(this.VTuidEdit, values);\r\n    }\r\n}\r\n\r\nexport class CTuidList extends CTuidBase {\r\n    protected async internalStart(id:number):Promise<void> {\r\n        this.isImport = this.entity.isImport;\r\n        await this.openVPage(this.VTuidList);\r\n    }\r\n}\r\n\r\nexport class CTuidDiv extends CTuid<Tuid> {\r\n    protected async internalStart():Promise<void> {\r\n        alert('tuid div: ??');\r\n    }\r\n}\r\n\r\nexport class CTuidSelect extends CTuid<Tuid> {\r\n    protected async internalStart(param?: any):Promise<void> {\r\n        await this.openVPage(this.VTuidSelect, param);\r\n    }\r\n    protected async beforeStart():Promise<boolean> {\r\n        //if (await super.beforeStart() === false) return false;\r\n        await this.entity.loadSchema();\r\n        if (this.PageItems !== undefined) this.PageItems.reset();\r\n        return true;\r\n    }\r\n    protected get VTuidSelect():typeof VTuidSelect {return VTuidSelect}\r\n    idFromItem(item:any) {\r\n        return item.id;\r\n    }\r\n}\r\n\r\nexport class CTuidInfo extends CTuid<Tuid> {\r\n    protected async internalStart(id: any):Promise<void> {\r\n        let data = await this.entity.load(id)\r\n        await this.openVPage(this.VTuidInfo, data);\r\n    }\r\n    protected get VTuidInfo():typeof VTuidInfo {return VTuidInfo}\r\n}\r\n","export * from './cTuid';\r\nexport * from './vTuidMain';\r\nexport * from './vTuidEdit';\r\nexport * from './vTuidInfo';\r\nexport * from './vTuidView';\r\nexport * from './vTuidSelect';\r\n","import { Entity } from './entity';\r\nimport { ActionCaller } from './caller';\r\n\r\nexport class Action extends Entity {\r\n    get typeName(): string { return 'action';}\r\n    async submit(data:object) {\r\n        //await this.loadSchema();\r\n        //let text = this.pack(data);\r\n        //return await this.uqApi.action(this.name, {data:text});\r\n        return await new ActionSubmitCaller(this, data).request();\r\n    }\r\n    async submitReturns(data:object):Promise<{[ret:string]:any[]}> {\r\n        /*\r\n        await this.loadSchema();\r\n        let text = this.pack(data);\r\n        let result = await this.uqApi.actionReturns(this.name, {data:text});\r\n        */\r\n       return await new SubmitReturnsCaller(this, data).request();\r\n    }\r\n}\r\n\r\nexport class ActionSubmitCaller extends ActionCaller {\r\n    get path():string {return 'action/' + this.entity.name;}\r\n    buildParams():any {return {data: this.entity.pack(this.params)}}\r\n}\r\n\r\nclass SubmitReturnsCaller extends ActionSubmitCaller {\r\n    get path():string {return 'action/' + this.entity.name + '/returns';}\r\n    xresult(res:any):any {\r\n        let {returns} = this.entity;\r\n        let len = returns.length;\r\n        let ret:{[r:string]:any[]} = {};\r\n        for (let i=0; i<len; i++) {\r\n            let retSchema = returns[i];\r\n            ret[retSchema.name] = res[i];\r\n        }\r\n        return ret;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VField } from './vField';\r\nimport { VArr } from './vArr';\r\nimport { VSubmit } from './vSubmit';\r\n\r\nexport abstract class VBand {\r\n    protected label: string;\r\n    protected view = () => <div />;\r\n\r\n    constructor(label:string) {\r\n        this.label = label;\r\n    }\r\n\r\n    render():JSX.Element {\r\n        //text-sm-right\r\n        return <div key={this.key} className=\"px-3\">\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-sm-2 col-form-label\">\r\n                    {this.label}\r\n                </label>\r\n                <div className=\"col-sm-10\">\r\n                    {this.renderContent()}\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    setAddRow(addRow:()=>Promise<void>) {}\r\n    get key() {return this.label}\r\n    public getVFields():VField[] {return;}\r\n    public getVArr():VArr {return;}\r\n    public getVSubmit():VSubmit {return;}\r\n\r\n    protected renderContent():JSX.Element {\r\n        return <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">content</div>;\r\n    }\r\n}\r\n\r\nexport interface FieldRes {\r\n    label: string;\r\n    placeHolder: string;\r\n    suffix: string;\r\n}\r\nexport class VFieldBand extends VBand {\r\n    protected vField:VField;\r\n    constructor(label:string, vField:VField) {\r\n        super(label);\r\n        this.vField = vField;\r\n    }\r\n\r\n    get key() {return this.vField.name}\r\n    public getVFields():VField[] {return [this.vField];}\r\n\r\n    protected renderContent():JSX.Element {\r\n        return this.vField.render();\r\n        /*\r\n        <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">\r\n            {this.vField.render()}\r\n        </div>;*/\r\n    }\r\n}\r\n\r\nexport class VArrBand extends VBand {\r\n    protected vArr:VArr;\r\n    constructor(label:string, vArr:VArr) {\r\n        super(label);\r\n        this.vArr = vArr;\r\n    }\r\n\r\n    setAddRow(addRow:()=>Promise<void>) {this.vArr.setAddRow(addRow)}\r\n    get key() {return this.vArr.name}\r\n    public getVArr():VArr {return this.vArr;}\r\n\r\n    render():JSX.Element {\r\n        return <React.Fragment key={this.key}>\r\n            {this.vArr && this.vArr.render()}\r\n        </React.Fragment>;\r\n    }\r\n}\r\n\r\nexport class VFieldsBand extends VBand {\r\n    protected vFields: VField[];\r\n    constructor(label:string, vFields:VField[]) {\r\n        super(label);\r\n        this.vFields = vFields;\r\n    }\r\n\r\n    get key() {return this.vFields[0].name}\r\n    public getVFields():VField[] {return this.vFields;}\r\n\r\n    protected renderContent():JSX.Element {\r\n        return <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">\r\n            fields\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class VSubmitBand extends VBand {\r\n    protected vSubmit: VSubmit;\r\n    constructor(vSubmit:VSubmit) {\r\n        super(undefined);\r\n        this.vSubmit = vSubmit;\r\n    }\r\n\r\n    get key() {return '$submit'}\r\n\r\n    public getVSubmit():VSubmit {return this.vSubmit;}\r\n\r\n    render():JSX.Element {\r\n        return <div key=\"$submit\" className=\"px-3\">\r\n            <div className=\"form-group row\">\r\n                <div className=\"offset-sm-2 col-sm-10\">\r\n                    {this.vSubmit.render()}\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\n//import classNames from 'classnames'\r\nimport { ViewModel } from './viewModel';\r\nimport { VForm } from './vForm';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\n\r\nexport class VSubmit extends ViewModel {\r\n    private vForm: VForm;\r\n    constructor(vForm: VForm) {\r\n        super();\r\n        this.vForm = vForm;\r\n        this.caption = this.vForm.submitCaption;\r\n        this.className = 'btn btn-primary w-25';\r\n    }\r\n    @observable caption: string;\r\n    @observable className: string;\r\n\r\n    private onClickSubmit = async () => {\r\n        this.vForm.submit();\r\n    }\r\n\r\n    protected view = observer(() => {\r\n        let {isOk} = this.vForm;\r\n        return <button type=\"button\" \r\n            onClick={this.onClickSubmit}\r\n            className={this.className}\r\n            disabled={isOk === false}>\r\n            {this.caption}\r\n        </button>;\r\n    });\r\n}","\r\nexport abstract class Rule {\r\n    abstract check(defy:string[], value:any):void;\r\n}\r\n\r\nexport class RuleRequired extends Rule {\r\n    check(defy:string[], value:any) {\r\n        switch (typeof value) {\r\n            default:\r\n            case 'boolean': return;\r\n            case 'object':\r\n                if (value !== null) return;\r\n                break;\r\n            case 'string':\r\n                if ((value as string).trim().length > 0) return;\r\n                break;\r\n            case 'number':\r\n                if (isNaN(value as number) === true) return;\r\n                break;\r\n            case 'undefined':\r\n                break;\r\n        }\r\n        defy.push('不能为空');\r\n    }\r\n}\r\n\r\nexport class RuleNum extends Rule {\r\n    check(defy:string[], value:any) {\r\n        if (value === undefined || value === null) return;\r\n        let n = Number(value);\r\n        if (isNaN(n) === true) defy.push('必须是数字');\r\n    }\r\n}\r\n\r\nexport class RuleInt extends Rule {\r\n    check(defy:string[], value:any) {\r\n        if (value === undefined || value === null) return;\r\n        let n = Number(value);\r\n        if (Number.isNaN(n) === true || Number.isInteger(n) === false) {\r\n            defy.push('必须是整数');\r\n        }\r\n    }\r\n}\r\n\r\nexport class RuleMin extends RuleNum {\r\n    constructor(min: number) {\r\n        super();\r\n        this.min = min;\r\n    }\r\n    min: number;\r\n    check(defy:string[], value:any) {\r\n        super.check(defy, value);\r\n        if (Number(value) < this.min) defy.push('不能小于' + this.min);\r\n    }\r\n}\r\n\r\nexport class RuleMax extends RuleNum {\r\n    constructor(max: number) {\r\n        super();\r\n        this.max = max;\r\n    }\r\n    max: number;\r\n    check(defy:string[], value:any) {\r\n        super.check(defy, value);\r\n        if (Number(value) > this.max) defy.push('不能小于' + this.max);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { computed } from 'mobx';\r\nimport classNames from 'classnames';\r\nimport { observer } from 'mobx-react';\r\nimport { FA } from '../../../components';\r\nimport { ViewModel } from '../viewModel';\r\nimport { VForm, FormMode } from '../vForm';\r\nimport { Rule, RuleRequired, RuleInt, RuleNum, RuleMin, RuleMax } from '../rule';\r\nimport { Field } from '../../../uq';\r\nimport { FieldRes } from '../vBand';\r\nimport { FieldUI, FieldInputUI, FieldStringUI, FieldNumberUI } from '../../formUI';\r\n\r\nexport abstract class VField extends ViewModel {\r\n    protected form: VForm;\r\n    protected fieldUI: FieldUI;\r\n    protected fieldRes:FieldRes;\r\n    protected field: Field;\r\n    protected rules: Rule[];\r\n    constructor(form:VForm, field:Field, fieldUI: FieldUI, fieldRes:FieldRes) {\r\n        super();\r\n        this.form = form;\r\n        this.field = field;\r\n        this.name = field.name;\r\n        this.fieldUI = fieldUI || {} as any;\r\n        this.fieldRes = fieldRes || {} as any;\r\n        this.init();\r\n    }\r\n\r\n    name: string;\r\n\r\n    protected init() {\r\n        this.buildRules();\r\n    }\r\n\r\n    protected buildRules() {\r\n        this.rules = [];\r\n        let {required} = this.fieldUI;\r\n        if (required === true || (this.field !== undefined && this.field.null === false)) {\r\n            this.rules.push(new RuleRequired());\r\n        }\r\n    }\r\n\r\n    @computed get checkRules(): string[] {\r\n        let defy:string[] = [];\r\n        for (let r of this.rules) r.check(defy, this.value);\r\n        return defy;\r\n    }\r\n\r\n    @computed get isOk() {\r\n        if (this.rules.length === 0) return true;\r\n        let defy = this.checkRules;\r\n        return defy.length === 0;\r\n    }\r\n\r\n    @computed get value() { return this.form.values[this.name]; }\r\n    setValue(v:any) {\r\n        this.form.values[this.name]=v; \r\n    }\r\n    get error() { return this.form.errors[this.name]; }\r\n    set error(err:any) { this.form.errors[this.name]=err; }\r\n    protected parse(str:string):any {return str;}\r\n    get readonly():boolean {\r\n        let {mode} = this.form;\r\n        return mode === FormMode.readonly || \r\n            (mode === FormMode.edit && this.fieldUI.editable === false);\r\n    }\r\n}\r\n\r\nexport class VUnknownField extends VField {\r\n    protected view = () => {\r\n        //let {name, type} = this.fieldUI;\r\n        let type='', name = '';\r\n        return <input type=\"text\" className=\"form-control form-control-plaintext border border-info rounded bg-light\"\r\n            placeholder={'unkown control: ' + type + '-' + name} />;\r\n    }\r\n}\r\n\r\nexport abstract class VInputControl extends VField {\r\n    protected fieldUI: FieldInputUI;\r\n    protected input: HTMLInputElement;\r\n\r\n    protected inputType:string;\r\n    protected get maxLength():number {return undefined}\r\n\r\n    protected renderError = (className:string) => {\r\n        let {errors} = this.form;\r\n        let error = errors[this.name];\r\n        if (error === undefined) return;\r\n        return <div className={className}><FA name=\"exclamation-circle\" /> {error}</div>\r\n    }\r\n\r\n    /*\r\n    get value() {\r\n        return super.value;\r\n    }*/\r\n    setValue(v:any) {\r\n        super.setValue(v); this.setInputValue(); \r\n    }\r\n\r\n    protected ref = (input:HTMLInputElement) => {\r\n        this.input = input;\r\n        this.setInputValue();\r\n    }\r\n\r\n    protected setInputValue() {\r\n        if (!this.input) return;\r\n        let v = this.value;\r\n        this.input.value = v === null || v === undefined? '' : v;\r\n    }\r\n\r\n    protected onFocus = () => {\r\n        this.error = undefined;\r\n    }\r\n\r\n    protected onBlur = () => {\r\n        let defy = this.checkRules;\r\n        if (defy.length > 0) {\r\n            this.error = defy[0];\r\n        }\r\n        this.form.computeFields();\r\n    }\r\n\r\n    protected onChange = (evt: React.ChangeEvent<any>) => {\r\n        let v = this.parse(evt.currentTarget.value);\r\n        if (v === null) {\r\n            return;\r\n        }\r\n        this.setValue(v);\r\n    }\r\n\r\n    protected onKeyPress: (event:React.KeyboardEvent<HTMLInputElement>) => void;\r\n    \r\n    protected view = observer(() => {\r\n        let {required} = this.fieldUI;\r\n        let {placeHolder, suffix} = this.fieldRes;\r\n        let ctrlCN = ['form-control', 'form-control-input'];\r\n        let errCN = 'text-danger small mt-1 mx-2';\r\n    \r\n        let redDot;\r\n        let input;\r\n        if (this.readonly === true) {\r\n            input = <input className={classNames(ctrlCN, 'bg-light')}\r\n                ref={this.ref}\r\n                type={this.inputType}\r\n                readOnly={true}\r\n            />;\r\n        }\r\n        else {\r\n            input = <input className={classNames(ctrlCN)}\r\n                ref={this.ref}\r\n                type={this.inputType}\r\n                onFocus={this.onFocus}\r\n                onBlur={this.onBlur}\r\n                onChange={this.onChange}\r\n                placeholder={placeHolder}\r\n                readOnly={false}\r\n                maxLength={this.maxLength}\r\n                onKeyPress={this.onKeyPress}\r\n            />;\r\n            if (required === true || this.field.null === false) {\r\n                redDot = <RedMark />;\r\n            }\r\n        }\r\n\r\n        let inputGroup;\r\n        if (suffix === undefined)\r\n            inputGroup = input;\r\n        else\r\n            inputGroup = <div className=\"input-group\">\r\n                {input}\r\n                <div className=\"input-group-append\">\r\n                    <span className=\"input-group-text\">{suffix}</span>\r\n                </div>\r\n            </div>;\r\n\r\n        return <>\r\n            {redDot}\r\n            {inputGroup}\r\n            {this.renderError(errCN)}\r\n        </>\r\n    });\r\n}\r\n\r\nexport const RedMark = () => <b style={{color:'red', position:'absolute', left:'0.1em', top:'0.5em'}}>*</b>;\r\n\r\nexport class VStringField extends VInputControl {\r\n    protected fieldUI: FieldStringUI;\r\n    protected inputType:string = 'text';\r\n    protected get maxLength():number {return this.field.size}\r\n}\r\n\r\nconst KeyCode_Neg = 45;\r\nconst KeyCode_Dot = 46;\r\n\r\nexport abstract class VNumberControl extends VInputControl {\r\n    protected fieldUI: FieldNumberUI;\r\n    protected extraChars: number[];\r\n\r\n    protected init() {\r\n        super.init();\r\n        this.extraChars = [];\r\n        if (this.fieldUI !== undefined) {\r\n            let {min, max} = this.fieldUI;\r\n            if (min !== undefined) {\r\n                //this.rules.push((v:number) => {if (v === undefined) return; if (v<min) return ErrMin + min; return true;});\r\n                if (min < 0) this.extraChars.push(KeyCode_Neg);\r\n            }\r\n            else {\r\n                this.extraChars.push(KeyCode_Neg);\r\n            }\r\n    \r\n            if (max !== undefined) {\r\n                //this.rules.push((v:number) => {if (v === undefined) return; if (v>max) return ErrMax + max; return true});\r\n            }\r\n        }\r\n        switch (this.field.type) {\r\n            case 'dec':\r\n            case 'bigint':\r\n            case 'int':\r\n            case 'smallint':\r\n            case 'tinyint':\r\n                this.extraChars.push(KeyCode_Dot); break;\r\n        }\r\n    }\r\n\r\n    protected buildRules() {\r\n        super.buildRules();\r\n        this.rules.push(new RuleNum());\r\n        let {min, max} = this.fieldUI;\r\n        if (min !== undefined) this.rules.push(new RuleMin(min));\r\n        if (max !== undefined) this.rules.push(new RuleMax(max));\r\n    }\r\n\r\n    inputType:string = 'number';\r\n\r\n    protected parse(text:string):any {\r\n        try {\r\n            if (text.trim().length === 0) return undefined;\r\n            let ret = Number(text);\r\n            return (isNaN(ret) === true)? null : ret;\r\n        }\r\n        catch {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    protected setInputValue() {\r\n        if (!this.input) return;\r\n        let v = this.value;\r\n        if (this.parse(this.input.value) === v) return;\r\n        this.input.value = v === null || v === undefined? '' : v;\r\n    }\r\n\r\n    protected onKeyPress = (event:React.KeyboardEvent<HTMLInputElement>) => {\r\n        let ch = event.charCode;\r\n        if (ch === 8 || ch === 0 || ch === 13 || (ch >= 48 && ch <= 57)) return;\r\n        if (this.extraChars !== undefined) {\r\n            if (this.extraChars.indexOf(ch) >= 0) {\r\n                switch (ch) {\r\n                    case KeyCode_Dot: this.onKeyDot(); break;\r\n                    case KeyCode_Neg: this.onKeyNeg(); event.preventDefault(); break;\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    private onKeyDot() {\r\n        let v = this.input.value;\r\n        let p = v.indexOf('.');\r\n        if (p >= 0) this.input.value = v.replace('.', '');\r\n    }\r\n    private onKeyNeg() {\r\n        let v = this.input.value;\r\n        let p = v.indexOf('-');\r\n        if (p >= 0) v = v.replace('-', '');\r\n        else v = '-'+v;\r\n        this.input.value = v;\r\n    }\r\n}\r\n\r\nexport class VIntField extends VNumberControl {\r\n    protected buildRules() {\r\n        super.buildRules();\r\n        this.rules.push(new RuleInt());\r\n    }\r\n}\r\n\r\nexport class VDecField extends VNumberControl {\r\n}\r\n\r\nexport class VTextField extends VStringField {\r\n\r\n}\r\n\r\nexport class VDateTimeField extends VStringField {\r\n\r\n}\r\n\r\nexport class VDateField extends VStringField {\r\n\r\n}\r\n","import React from 'react';\r\nimport { VField } from './vField';\r\nimport { Field } from '../../../uq';\r\nimport { VForm } from '../vForm';\r\nimport { observer } from 'mobx-react';\r\nimport { FieldRes } from '../vBand';\r\n\r\nexport class VComputeField extends VField {\r\n    constructor(form:VForm, field: Field, fieldRes: FieldRes) {\r\n        super(form, field, undefined, fieldRes);\r\n    }\r\n    protected view = observer(() => {\r\n        let value = this.form.values[this.field.name];\r\n        let {placeHolder, suffix} = this.fieldRes;\r\n        let ctrlCN = 'form-control form-control-input bg-light';\r\n        if (value === null) value = '';\r\n        let input = <input className={ctrlCN}\r\n            type=\"text\"\r\n            placeholder={placeHolder}\r\n            readOnly={true}\r\n            value={value}/>\r\n        let inputGroup;\r\n        if (suffix === undefined)\r\n            inputGroup = input;\r\n        else\r\n            inputGroup = <div className=\"input-group\">\r\n                {input}\r\n                <div className=\"input-group-append\">\r\n                    <span className=\"input-group-text\">{suffix}</span>\r\n                </div>\r\n            </div>;\r\n        return inputGroup;\r\n        /*\r\n            return <div \r\n            className=\"form-control form-control-plaintext border border-info rounded bg-light cursor-pointer\">\r\n            {value} &nbsp;\r\n        </div>;\r\n        */\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { IObservableArray } from 'mobx';\r\nimport _ from 'lodash';\r\nimport { Page, nav, List, Muted } from '../../components';\r\nimport { ViewModel, TypeContent, JSONContent } from './viewModel';\r\nimport { ArrFields } from '../../uq';\r\nimport { VForm, FieldInputs, FormMode } from './vForm';\r\nimport { FormArr } from '../formUI';\r\n\r\nexport type ArrEditRow = (initValues:any, onRowChanged:(rowValues:any)=>void) => Promise<void>;\r\n\r\nexport class VArr extends ViewModel {\r\n    protected mode: FormMode;\r\n    protected label: any;\r\n    protected header: any;\r\n    protected footer: any;\r\n    protected rowValues: any;                 // 仅仅用来判断是不是新增，undefined则是新增\r\n    protected onEditRow: ArrEditRow;\r\n    protected ownerForm:VForm;\r\n    protected vForm:VForm;\r\n    protected rowContent:TypeContent;\r\n    protected none: string;\r\n    protected newSubmitCaption: string;\r\n    protected editSubmitCaption: string;\r\n    protected addRow: ()=>Promise<void>;\r\n\r\n    name:string;\r\n    list: IObservableArray<any>;\r\n\r\n    constructor(ownerForm:VForm, arr:ArrFields, onEditRow?:ArrEditRow) {\r\n        super();\r\n        this.ownerForm = ownerForm;\r\n        let {name, fields} = arr;\r\n        this.name = name;\r\n        let {ui, res, mode, inputs, values} = ownerForm;\r\n        let arrsRes = res.arrs;\r\n        let arrRes = arrsRes !== undefined? arrsRes[name] : {};\r\n        let {label, none, newSubmit, editSubmit} = arrRes;\r\n        this.none = none || ownerForm.none;\r\n        this.newSubmitCaption = newSubmit || ownerForm.arrNewCaption;\r\n        this.editSubmitCaption = editSubmit || ownerForm.arrEditCaption;\r\n        this.label = label || name;\r\n        let arrUI = ((ui && ui.items[name]) || {}) as FormArr;\r\n        this.rowContent = arrUI.rowContent;// || JSONContent;\r\n        this.mode = mode;\r\n        if (this.onEditRow === undefined) {\r\n            this.vForm = new VForm({\r\n                fields: fields,\r\n                arrs: undefined,\r\n                ui: arrUI,\r\n                res: arrRes,\r\n                inputs: inputs[name] as FieldInputs,\r\n                none: ownerForm.none,\r\n                submitCaption: 'submit',\r\n                arrNewCaption: undefined,\r\n                arrEditCaption: undefined,\r\n                arrTitleNewButton: undefined,\r\n                mode: mode,\r\n            }, \r\n            mode===FormMode.readonly? undefined: this.onSubmit);\r\n        }\r\n        else {\r\n            this.onEditRow = onEditRow;\r\n        }\r\n        this.list = values[name];\r\n    }\r\n\r\n    reset() {\r\n        this.vForm.reset();\r\n        this.list.clear();\r\n    }\r\n\r\n    setAddRow(addRow:()=>Promise<void>) {\r\n        this.addRow = addRow;\r\n    }\r\n\r\n    protected rowPage = () => {\r\n        return <Page header={this.label} back=\"close\">\r\n            {this.vForm.render('py-3')}\r\n        </Page>\r\n    }\r\n    private onSubmit = async () => {\r\n        let {valueBoxs} = this.vForm;\r\n        await this.onRowChanged(valueBoxs);\r\n    }\r\n\r\n    private onRowChanged = async (rowValues:any) => {\r\n        if (this.rowValues === undefined) {\r\n            rowValues.$owner = this.ownerForm.values;\r\n            this.list.push(rowValues);\r\n            if (this.onEditRow === undefined)\r\n                this.vForm.reset();\r\n            else\r\n                await this.onEditRow(undefined, this.onRowChanged);\r\n        }\r\n        else {\r\n            _.merge(this.rowValues, rowValues);\r\n            if (this.onEditRow === undefined) nav.pop();\r\n        }\r\n    }\r\n\r\n    private renderItem = (item:any, index:number) => {\r\n        if (this.rowContent === undefined)\r\n            return <div className=\"px-3 py-2\"><JSONContent {...item} /></div>\r\n        return <this.rowContent {...item} />;\r\n    }\r\n    private showRow = async (rowValues:any):Promise<any> => {\r\n        if (this.onEditRow !== undefined) {\r\n            await this.onEditRow(rowValues, this.onRowChanged);\r\n            return;\r\n        }\r\n        this.vForm.reset();\r\n        if (rowValues !== undefined) this.vForm.setValues(rowValues);\r\n        nav.push(<this.rowPage />);\r\n    }\r\n    private editRow = async (rowValues:any): Promise<void> => {\r\n        this.rowValues = rowValues;\r\n        let {vSubmit} = this.vForm;\r\n        if (vSubmit !== undefined) {\r\n            vSubmit.caption = this.editSubmitCaption;\r\n            vSubmit.className = 'btn btn-outline-success';\r\n        }\r\n        this.vForm.mode = this.ownerForm.mode;\r\n        await this.showRow(rowValues);\r\n    }\r\n    private internalAddRow = async () => {\r\n        this.rowValues = undefined;\r\n        let {vSubmit} = this.vForm;\r\n        vSubmit.caption = this.newSubmitCaption;\r\n        vSubmit.className = 'btn btn-outline-success';\r\n        this.vForm.reset();\r\n        this.vForm.mode = FormMode.new;\r\n        await this.showRow(undefined);\r\n    }\r\n\r\n    protected view = () => {\r\n        let button;\r\n        if (this.addRow !== undefined || this.mode !== FormMode.readonly) {\r\n            button = <button onClick={this.addRow || this.internalAddRow}\r\n                type=\"button\" \r\n                className=\"btn btn-link p-0\">\r\n                {this.ownerForm.arrTitleNewButton}\r\n            </button>;\r\n        }\r\n        let header = this.header || <div className=\"px-3 bg-light small\" style={{paddingTop:'1px', paddingBottom:'1px'}}>\r\n            <div className=\"flex-fill align-self-center\">{this.label}</div>\r\n            {button}\r\n        </div>;\r\n        return <List className=\"pb-3\"\r\n            header={header}\r\n            none={<Muted className=\"px-3 py-2\">{this.none}</Muted>}\r\n            items={this.list}\r\n            item={{render: this.renderItem, onClick: this.editRow}} />;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { tv } from '../../cUq/reactBoxId';\r\nimport { Field, TuidBox } from '../../../uq';\r\nimport { VField, RedMark } from './vField';\r\nimport { FieldUI } from '../../formUI';\r\nimport { VForm, FieldInput } from '../vForm';\r\nimport { FieldRes } from '../vBand';\r\n\r\nconst buttonStyle:React.CSSProperties = {\r\n    textAlign:'left', \r\n    paddingLeft:'0.75rem', \r\n    paddingRight:'0.75rem', \r\n    overflow: 'hidden'\r\n};\r\n\r\nexport class VTuidField extends VField {\r\n    protected vForm: VForm;\r\n    protected input: FieldInput;\r\n    protected tuid: TuidBox;\r\n\r\n    constructor(vForm: VForm, field:Field, fieldUI: FieldUI, fieldRes:FieldRes) {\r\n        super(vForm, field, fieldUI, fieldRes);\r\n        this.tuid = field._tuid;\r\n        this.vForm = vForm;\r\n        this.input = vForm.inputs[field.name] as FieldInput;\r\n    }\r\n\r\n    onClick = async () => {\r\n        if (this.readonly === true) {\r\n            if (!this.value) return;\r\n            await this.tuid.showInfo(); //this.value.id);\r\n            return;\r\n        }\r\n        let id:number;\r\n        if (this.input !== undefined) {\r\n            id = await this.input.select(this.vForm, this.field, this.vForm.getValues());\r\n        }\r\n        else {\r\n            alert('call undefined');\r\n            id = 0;\r\n        }\r\n        this.setValue(this.tuid.boxId(id));\r\n    }\r\n    protected view = observer(() => {\r\n        let {placeHolder} = this.fieldRes;\r\n        let disabled:boolean = false;\r\n        //let {_ownerField} = this.field;\r\n        let {_tuid} = this.field;\r\n        let {ownerField} = _tuid;\r\n        if (ownerField !== undefined) {\r\n            let {name} = ownerField;\r\n            disabled = this.vForm.getValue(name) === null;\r\n        }\r\n        let content;\r\n        if (this.value === null)\r\n            content = <>{placeHolder || this.input.placeHolder}</>;\r\n        else if (typeof this.value === 'object') {\r\n            content = tv(this.value);\r\n        }\r\n        else {\r\n            let idBox = this.tuid.boxId(this.value);\r\n            content = tv(idBox); // idBox.content();\r\n        }\r\n        if (this.readonly === true)\r\n        {\r\n            return <div \r\n                className=\"form-control form-control-plaintext border border-info rounded bg-light cursor-pointer\"\r\n                onClick={this.onClick}>\r\n                {content}\r\n            </div>;\r\n        }\r\n        let {required} = this.fieldUI;\r\n        let redDot = (required === true || this.field.null === false) && <RedMark />;\r\n        return <>\r\n            {redDot}\r\n            <button className=\"form-control btn btn-outline-info\"\r\n                type=\"button\"\r\n                disabled={disabled}\r\n                style={buttonStyle}\r\n                onClick={this.onClick}>\r\n                {content}\r\n            </button>\r\n        </>;\r\n    })\r\n}\r\n","import { VBand, VFieldBand, VArrBand, VSubmitBand, FieldRes } from './vBand';\r\nimport { Field, ArrFields } from '../../uq';\r\nimport { VForm, FormOptions } from './vForm';\r\nimport { FormItems, FieldUI, FormItem } from '../formUI';\r\nimport { VSubmit } from './vSubmit';\r\nimport { VField, buildVField, VComputeField } from './vField';\r\nimport { VArr } from './vArr';\r\nimport { VTuidField } from './vField/vTuidField';\r\n\r\nexport class BandsBuilder {\r\n    private vForm: VForm;\r\n    private onSubmit: (values:any)=>Promise<void>;\r\n    private fields: Field[];\r\n    private arrs: ArrFields[];\r\n    private formItems: FormItems;\r\n    private layout: string[];\r\n    private res: any;\r\n    constructor(vForm:VForm, options: FormOptions, onSubmit: (values:any)=>Promise<void>) {\r\n        this.vForm = vForm;\r\n        this.onSubmit = onSubmit;\r\n        let {fields, arrs, ui, res} = options;\r\n        this.fields = fields;\r\n        this.arrs = arrs;\r\n        if (ui !== undefined) {\r\n            let {items, layout} = ui;\r\n            this.formItems = items;\r\n            this.layout = layout;\r\n        }\r\n        this.res = res;\r\n    }\r\n\r\n    build():VBand[] {\r\n        //return this.bandUIs === undefined? this.bandsOnFly() : this.bandsFromUI();\r\n        return this.layout === undefined? this.bandsOnFly() : this.bandsFromLayout();\r\n    }\r\n\r\n    private resFromName(name:string, res:any):string|FieldRes {\r\n        if (res === undefined) return;\r\n        let {fields} = res;\r\n        if (fields === undefined) return;\r\n        return fields[name] || name;\r\n    }\r\n\r\n    private bandsOnFly():VBand[] {\r\n        let bands:VBand[] = [];\r\n        this.bandsFromFields(bands, this.fields, this.res);\r\n        if (this.arrs !== undefined) {\r\n            for (let arr of this.arrs) bands.push(this.bandFromArr(arr));\r\n        }\r\n        if (this.onSubmit !== undefined) {\r\n            bands.push(new VSubmitBand(new VSubmit(this.vForm)));\r\n        }\r\n        return bands;\r\n    }\r\n\r\n    private bandsFromFields(bands:VBand[], fields:Field[], res:any) {\r\n        if (fields === undefined) return;\r\n        for (let field of fields) bands.push(this.bandFromField(field, res));\r\n    }\r\n\r\n    private bandsFromLayout():VBand[] {\r\n        let bands:VBand[] = [];\r\n        /*\r\n        for (let bandUI of this.bandUIs)  {\r\n            let band = this.bandFromUI(bandUI);\r\n            bands.push(band);\r\n        }\r\n        */\r\n        return bands;\r\n    }\r\n\r\n    /*\r\n    private bandFromUI(bandUI:BandUI):VBand {\r\n        let {band} = bandUI;\r\n        switch (band) {\r\n            default: return this.bandFromFieldUI(bandUI as FieldBandUI);\r\n            case 'arr': return this.bandFromArrUI(bandUI as ArrBandUI);\r\n            case 'fields': return this.bandFromFieldsUI(bandUI as FieldsBandUI);\r\n            case 'submit': return this.bandFromSubmitUI(bandUI as SubmitBandUI);\r\n        }\r\n    }\r\n    \r\n    private bandFromFieldUI(bandUI: FieldBandUI): VFieldBand {\r\n        let {label} = bandUI;\r\n        let vField = this.vFieldFromUI(bandUI);\r\n        return new VFieldBand(label, vField);\r\n    }\r\n    private bandFromArrUI(bandUI: ArrBandUI): VArrBand {\r\n        let {label, name} = bandUI;\r\n        let vArr = this.vArrFromUI(bandUI);\r\n        return new VArrBand(label, vArr);\r\n    }\r\n    private bandFromFieldsUI(bandUI: FieldsBandUI): VFieldsBand {\r\n        let {label, fieldUIs} = bandUI;\r\n        let vFields = fieldUIs.map(v => this.vFieldFromUI(v));\r\n        return new VFieldsBand(label, vFields);\r\n    }\r\n    private bandFromSubmitUI(bandUI: SubmitBandUI): VSubmitBand {\r\n        if (this.onSubmit === undefined) return;\r\n        let vSubmit = new VSubmit(this.vForm);\r\n        return new VSubmitBand(vSubmit);\r\n    }\r\n    */\r\n/*\r\n    private vFieldFromField(field:Field, fieldRes:FieldRes, formItem: FormItem): VField {\r\n        let fieldUI:FieldUI = undefined;\r\n        if (formItem !== undefined) {\r\n            if (typeof formItem === 'function') {\r\n                return new VComputeField(this.vForm, field, fieldRes);\r\n            }\r\n        }\r\n        let ret = buildVField(this.vForm, field, formItem, fieldRes);\r\n        if (ret !== undefined) return ret;\r\n        return new VTuidField(field, fieldUI, fieldRes, this.vForm);\r\n    }\r\n*/\r\n    private bandFromField(field:Field, res:any):VBand {\r\n        let {name} = field;\r\n        let fieldRes:FieldRes;\r\n        let rfn = this.resFromName(name, res);\r\n        let label:string;\r\n        if (typeof rfn === 'object') {\r\n            label = rfn.label;\r\n            fieldRes = rfn;\r\n        }\r\n        else {\r\n            label = rfn as string;\r\n            fieldRes = undefined;\r\n        }\r\n        let vField:VField;\r\n        let formItem:FormItem;\r\n        if (this.formItems !== undefined) formItem = this.formItems[name];\r\n        //let vField = this.vFieldFromField(field, fieldRes as FieldRes, formItem);\r\n        //let fieldUI:FieldUI = undefined;\r\n        if (typeof formItem === 'function') {\r\n            vField = new VComputeField(this.vForm, field, fieldRes);\r\n        }\r\n        else {\r\n            vField = buildVField(this.vForm, field, formItem as FieldUI, fieldRes);\r\n        }\r\n        if (vField === undefined) {\r\n            vField = new VTuidField(this.vForm, field, formItem as FieldUI, fieldRes);\r\n        }\r\n        return new VFieldBand(label || name, vField);\r\n    }\r\n\r\n    private bandFromArr(arr: ArrFields):VBand {\r\n        let {name} = arr;\r\n        //let row = JSONContent;\r\n        //let bands:VBand[] = [];\r\n        //this.bandsFromFields(bands, fields, res);\r\n        let vArr = new VArr(this.vForm, arr); // name, res && res.label || name, row, bands);\r\n        return new VArrBand(name, vArr);\r\n    }\r\n\r\n    /*\r\n    private vFieldFromUI(fieldUI:FieldUI):VField {\r\n        return;\r\n    }\r\n\r\n    private vArrFromUI(arrBandUI:ArrBandUI):VArr {\r\n        return;\r\n    }\r\n    */\r\n}\r\n","import { VField, VIntField, VDecField, VStringField, VTextField, VDateTimeField, VDateField } from './vField';\r\nimport { Field } from '../../../uq';\r\nimport { FieldRes } from '../vBand';\r\nimport { VForm } from '../vForm';\r\nimport { FieldUI } from '../../formUI';\r\n\r\nexport function buildVField(form:VForm, field: Field, fieldUI: FieldUI, fieldRes:FieldRes): VField {\r\n    let vField:new (form:VForm, field:Field, ui:FieldUI, fieldRes:FieldRes) => VField;\r\n    switch (field.type) {\r\n        default: return;\r\n        case 'tinyint':\r\n        case 'smallint':\r\n        case 'int':\r\n        case 'bigint':\r\n            vField = VIntField;\r\n            break;\r\n        case 'id':\r\n            let {_tuid} = field;\r\n            if (_tuid !== undefined) return;\r\n            vField = VIntField;\r\n            break;\r\n        case 'dec':\r\n            vField = VDecField;\r\n            break;\r\n        case 'char':\r\n            vField = VStringField;\r\n            break;\r\n        case 'text':\r\n            vField = VTextField;\r\n            break;\r\n        case 'datetime':\r\n            vField = VDateTimeField;\r\n            break;\r\n        case 'date':\r\n            vField = VDateField;\r\n            break;\r\n    }\r\n    return new vField(form, field, fieldUI, fieldRes);\r\n}\r\n\r\n","import * as React from 'react';\r\n//import * as _ from 'lodash';\r\nimport { observer } from 'mobx-react';\r\nimport { VBand } from './vBand';\r\nimport { BandsBuilder } from './bandsBuilder';\r\nimport { Field, ArrFields } from '../../uq';\r\nimport { computed, observable, IObservableObject } from 'mobx';\r\nimport { VArr } from './vArr';\r\nimport { FormUI, FormUIBase, FormItems } from '../formUI';\r\nimport { VField } from './vField';\r\nimport { VSubmit } from './vSubmit';\r\nimport { IObservableArray } from 'mobx';\r\nimport { FA } from '../../components';\r\n\r\nexport type FieldCall = (form:VForm, field:Field, values:any) => Promise<any>;\r\nexport interface FieldInput {\r\n    select: FieldCall;\r\n    content: React.StatelessComponent<any>;\r\n    placeHolder: string;\r\n}\r\nexport interface FieldInputs {\r\n    [fieldOrArr:string]: FieldInput | {[field:string]: FieldInput};\r\n}\r\nexport enum FormMode {new, edit, readonly}\r\n\r\nexport interface FormOptions {\r\n    fields: Field[];\r\n    arrs?: ArrFields[];\r\n    ui: FormUIBase;\r\n    res: any;\r\n    inputs: FieldInputs;\r\n    submitCaption: string;\r\n    arrNewCaption: string;\r\n    arrEditCaption: string;\r\n    arrTitleNewButton: JSX.Element;\r\n    none: string;\r\n    mode: FormMode;\r\n}\r\n\r\nexport class VForm {\r\n    protected fields: Field[];\r\n    protected arrs: ArrFields[];\r\n    protected bands: VBand[];\r\n    protected bandColl: {[key:string]: VBand};\r\n    protected onSubmit: ()=>Promise<void>;\r\n\r\n    constructor(options: FormOptions, onSubmit: ()=>Promise<void>) {\r\n        let {fields, arrs, ui, res, inputs, none, submitCaption, arrNewCaption, arrEditCaption, arrTitleNewButton, mode} = options;\r\n        this.fields = fields;\r\n        this.arrs = arrs;\r\n        this.ui = ui;\r\n        if (this.ui !== undefined) this.formItems = this.ui.items; //.compute = this.ui.compute;\r\n        this.res = res;\r\n        this.inputs = inputs;\r\n        this.none = none;\r\n        this.submitCaption = submitCaption;\r\n        this.arrNewCaption = arrNewCaption;\r\n        this.arrEditCaption = arrEditCaption;\r\n        this.arrTitleNewButton = arrTitleNewButton || <small><FA name=\"plus\" /> 新增</small>;\r\n        if (onSubmit === undefined) this.mode = FormMode.readonly;\r\n        else this.mode = mode;\r\n        this.buildFormValues();\r\n        this.buildBands(options, onSubmit);\r\n        this.onSubmit = onSubmit;\r\n    }\r\n\r\n    ui: FormUI;\r\n    res: any;\r\n    values: any;\r\n    errors: any;\r\n    formItems: FormItems;\r\n    mode: FormMode;\r\n    vFields: {[name:string]:VField} = {};\r\n    vArrs: {[name:string]: VArr} = {};\r\n    vSubmit: VSubmit;\r\n    inputs: FieldInputs;\r\n    none: string;\r\n    submitCaption: string;\r\n    arrNewCaption: string;\r\n    arrEditCaption: string;\r\n    arrTitleNewButton: JSX.Element;\r\n\r\n    private buildBands(options: FormOptions, onSubmit: (values:any)=>Promise<void>) {\r\n        this.bandColl = {};\r\n        let bandsBuilder = new BandsBuilder(this, options, onSubmit);\r\n        this.bands = bandsBuilder.build();\r\n        for (let band of this.bands) {\r\n            this.bandColl[band.key] = band;\r\n            let vFields = band.getVFields();\r\n            if (vFields !== undefined) for (let f of vFields) this.vFields[f.name] = f;\r\n            let vArr = band.getVArr();\r\n            if (vArr !== undefined) this.vArrs[vArr.name] = vArr;\r\n            let vSubmit = band.getVSubmit();\r\n            if (vSubmit !== undefined) this.vSubmit = vSubmit;\r\n        }\r\n    }\r\n\r\n    private onFormSubmit = (event:React.FormEvent<any>) => {\r\n        event.preventDefault();\r\n        return false;\r\n    }\r\n\r\n    protected view = observer(({className}:{className:string}) => {\r\n        return <form className={className} onSubmit={this.onFormSubmit}>\r\n            {this.bands.map(v => v.render())}\r\n        </form>;\r\n    });\r\n\r\n    getBand(name:string) {\r\n        return this.bandColl[name];\r\n    }\r\n\r\n    computeFields() {\r\n        if (this.formItems === undefined) return;\r\n        let values = this.values;\r\n        for (let i in this.formItems) {\r\n            let item = this.formItems[i];\r\n            if (typeof item !== 'function') continue;\r\n            values[i] = item.call(this, values);\r\n        }\r\n    }\r\n\r\n    async submit() {\r\n        if (this.onSubmit === undefined) return;\r\n        await this.onSubmit();\r\n    }\r\n    \r\n    getValues() {\r\n        let ret:any = {};\r\n        let values = this.values;\r\n        for (let f of this.fields) {\r\n            let {name} = f;\r\n            let v = values[name]\r\n            ret[name] =  v !== null && typeof v === 'object' ? v.id : v;\r\n        }\r\n        if (this.arrs !== undefined) {\r\n            for (let arr of this.arrs) {\r\n                let {name, fields, id, order} = arr;\r\n                let list:any[] = ret[name] = [];\r\n                let rows = this.vArrs[name].list;\r\n                for (let row of rows) {\r\n                    let item = {} as any;\r\n                    if (id !== undefined) item[id] = row[id];\r\n                    if (order !== undefined) item[order] = row[order];\r\n                    for (let f of fields) {\r\n                        let {name:fn} = f;\r\n                        let v = row[fn]\r\n                        item[fn] =  v !== null && typeof v === 'object' ? v.id : v;\r\n                    }\r\n                    list.push(item);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    get valueBoxs() {\r\n        let ret:any = {};\r\n        let values = this.values;\r\n        for (let f of this.fields) {\r\n            let {name, _tuid} = f;\r\n            let v = values[name]\r\n            ret[name] =  _tuid === undefined || typeof v === 'object' ? v : _tuid.boxId(v);\r\n        }\r\n        if (this.arrs === undefined) return ret;\r\n        for (let arr of this.arrs) {\r\n            let {name, fields} = arr;\r\n            let list = ret[name] = this.vArrs[name].list.slice();\r\n            for (let row of list) {\r\n                for (let f of fields) {\r\n                    let {name:fn, _tuid} = f;\r\n                    let v = row[fn]\r\n                    row[fn] =  _tuid === undefined || typeof v === 'object' ? v : _tuid.boxId(v);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    setValues(initValues:any) {\r\n        if (initValues === undefined) {\r\n            this.reset();\r\n            return;\r\n        }\r\n        let values = this.values;\r\n        let errors = this.errors;\r\n        for (let f of this.fields) {\r\n            let fn = f.name;\r\n            errors[fn] = undefined;\r\n            let v =  initValues[fn];\r\n            values[fn] = v;\r\n        }\r\n        // 还要设置arrs的values\r\n        for (let i in this.vArrs) {\r\n            let list = initValues[i];\r\n            if (list === undefined) continue;\r\n            let arrList = values[i] as IObservableArray<any>;\r\n            arrList.clear();\r\n            arrList.push(...list);\r\n        }\r\n    }\r\n\r\n    @computed get isOk():boolean {\r\n        for (let i in this.vFields) {\r\n            if (this.vFields[i].isOk === false) return false;\r\n        }\r\n        return true;\r\n    }\r\n    reset() {\r\n        let values = this.values;\r\n        let errors = this.errors;\r\n        for (let f of this.fields) {\r\n            let fn = f.name;\r\n            //if (this.compute !== undefined && this.compute[fn] !== undefined) continue;\r\n            values[fn] = null;\r\n            errors[fn] = undefined;\r\n        }\r\n        for (let i in this.vFields) {\r\n            let ctrl = this.vFields[i];\r\n            let cn = ctrl.name;\r\n            if (cn === undefined) continue;\r\n            //if (this.compute !== undefined && this.compute[cn] !== undefined) continue;\r\n            ctrl.setValue(null);\r\n        }\r\n        for (let i in this.vArrs) {\r\n            let vArr = this.vArrs[i];\r\n            vArr.reset();\r\n        }\r\n    }\r\n\r\n    getValue(fieldName: string) {\r\n        return this.values[fieldName];\r\n    }\r\n    setValue(fieldName: string, value: any) { this.values[fieldName] = value }\r\n\r\n    setError(fieldName:string, error:string) {this.errors[fieldName] = error}\r\n\r\n    private buildFieldValues(fields: Field[]):any {\r\n        let v: {[p:string]: any} = {\r\n            valueFromFieldName: function(propName:string) {\r\n                return this[propName];\r\n            }\r\n        };\r\n        for (let f of fields) {\r\n            let fn = f.name;\r\n            v[fn] = null;\r\n        }\r\n        return v;\r\n    }\r\n    private buildObservableValues():IObservableObject {\r\n        let v: {[p:string]: any} = this.buildFieldValues(this.fields);\r\n        if (this.arrs !== undefined) {\r\n            for (let arr of this.arrs) {\r\n                v[arr.name] = observable.array([], {deep:true});\r\n            }\r\n        }\r\n        let ret = observable(v);\r\n        return ret;\r\n    }\r\n    private buildFormValues() {\r\n        this.values = this.buildObservableValues();\r\n        this.errors = observable(this.buildFieldValues(this.fields));\r\n    }\r\n\r\n    render(className:string = \"py-3\"):JSX.Element {\r\n        return <this.view className={className} />\r\n    }\r\n}\r\n","export * from './vForm';\r\n","import { observable } from 'mobx';\r\nimport { isNumber } from 'util';\r\nimport _ from 'lodash';\r\nimport { LocalArr } from '../../tool';\r\nimport { BoxId } from './boxId';\r\nimport { TuidInner, TuidDiv } from './tuid';\r\n\r\nconst maxCacheSize = 1000;\r\n\r\nexport class IdCache {\r\n    private queue: number[] = [];               // 每次使用，都排到队头\r\n    private cache = observable.map({}, {deep: false});    // 已经缓冲的\r\n\r\n    protected localArr:LocalArr;\r\n    protected waitingIds: number[] = [];          // 等待loading的\r\n    protected tuidInner: TuidInner;\r\n\r\n    constructor(tuidLocal: TuidInner) {\r\n        this.tuidInner = tuidLocal;\r\n        this.initLocalArr();\r\n    }\r\n\r\n    protected initLocalArr() {\r\n        this.localArr = this.tuidInner.cache.arr(this.tuidInner.name + '.ids');\r\n    }\r\n\r\n    useId(id:number, defer?:boolean) {\r\n        if (id === undefined || id === 0) return;\r\n        if (isNumber(id) === false) return;\r\n        if (this.cache.has(id) === true) {\r\n            this.moveToHead(id);\r\n            return;\r\n        }\r\n        this.tuidInner.cacheTuids(defer===true?70:20);\r\n        this.cache.set(id, id);\r\n        if (this.waitingIds.findIndex(v => v === id) >= 0) {\r\n            this.moveToHead(id);\r\n            return;\r\n        }\r\n\r\n        if (this.queue.length >= maxCacheSize) {\r\n            // 缓冲已满，先去掉最不常用的\r\n            let r = this.queue.shift();\r\n            if (r === id) {\r\n                // 如果移除的，正好是现在用的，则插入\r\n                this.queue.push(r);\r\n                return;\r\n            }\r\n\r\n            //let rKey = String(r);\r\n            if (this.cache.has(r) === true) {\r\n                // 如果移除r已经缓存\r\n                this.cache.delete(r);\r\n            }\r\n            else {\r\n                // 如果移除r还没有缓存\r\n                let index = this.waitingIds.findIndex(v => v === r);\r\n                this.waitingIds.splice(index, 1);\r\n            }\r\n        }\r\n        this.waitingIds.push(id);\r\n        this.queue.push(id);\r\n        return;\r\n    }\r\n\r\n    private moveToHead(id:number) {\r\n        let index = this.queue.findIndex(v => v === id);\r\n        this.queue.splice(index, 1);\r\n        this.queue.push(id);\r\n    }\r\n\r\n    getValue(id:number) {\r\n        return this.cache.get(id);\r\n    }\r\n\r\n    remove(id:number) {\r\n        this.cache.delete(id);\r\n        let index = this.queue.findIndex(v => v === id);\r\n        this.queue.splice(index, 1);\r\n    }\r\n\r\n    valueFromId(id:number|BoxId):any {\r\n        let _id:number;\r\n        switch (typeof id) {\r\n            case 'object': _id = (id as BoxId).id; break;\r\n            case 'number': _id = id as number; break;\r\n            default: return;\r\n        }\r\n        return this.getValue(_id);\r\n    }\r\n\r\n    resetCache(id:number) {\r\n        this.remove(id);\r\n        this.useId(id);\r\n    }\r\n\r\n    cacheValue(val:any):boolean {\r\n        if (val === undefined) return false;\r\n        let id = this.getIdFromObj(val);\r\n        if (id === undefined) return false;\r\n        let index = this.waitingIds.findIndex(v => v === id);\r\n        if (index>=0) this.waitingIds.splice(index, 1);\r\n        this.cache.set(id, val);\r\n        return true;\r\n    }\r\n    protected getIdFromObj(val:any) {return this.tuidInner.getIdFromObj(val)}\r\n\r\n    async cacheIds():Promise<void> {\r\n        if (this.waitingIds.length === 0) return;\r\n        let tuidValues = await this.loadIds();\r\n        await this.cacheIdValues(tuidValues);\r\n    }\r\n\r\n    private async cacheIdValues(tuidValues: any[]) {\r\n        if (tuidValues === undefined) return;\r\n        let tuids = this.unpackTuidIds(tuidValues);\r\n        for (let tuidValue of tuids) {\r\n            if (this.cacheValue(tuidValue) === false) continue;\r\n            this.cacheTuidFieldValues(tuidValue);\r\n        }\r\n    }\r\n    async modifyIds(ids:any[]):Promise<void> {\r\n        //let tuidValues:string[] = await this.tuidInner.loadTuidIds(this.divName, ids);\r\n        let tuidValues:string[] = await this.loadTuidIdsOrLocal(ids);\r\n        let localedValues = tuidValues.filter(v => {\r\n            let p = v.indexOf('\\t');\r\n            if (p<0) p = v.length;\r\n            let id = Number(v.substr(0, p));\r\n            let val = this.localArr.getItem(id);\r\n            return (val !== undefined);\r\n        });\r\n        if (localedValues.length === 0) return;\r\n        await this.cacheIdValues(localedValues);\r\n    }\r\n    protected divName:string = undefined;\r\n    protected async loadIds(): Promise<any[]> {\r\n        //let ret = await this.tuidInner.loadTuidIds(this.divName, this.waitingIds);\r\n        let ret = await this.loadTuidIdsOrLocal(this.waitingIds);\r\n        return ret;\r\n    }\r\n    protected unpackTuidIds(values:string[]):any[] {\r\n        return this.tuidInner.unpackTuidIds(values);\r\n    }\r\n    protected cacheTuidFieldValues(tuidValue: any) {\r\n        this.tuidInner.cacheTuidFieldValues(tuidValue);\r\n    }\r\n\r\n    async assureObj(id:number):Promise<any> {\r\n        let val = this.cache.get(id);\r\n        switch (typeof val) {\r\n            case 'object': return;\r\n            case 'number': this.cache.set(id, id); break;\r\n        }\r\n        //let ret = await this.tuidInner.loadTuidIds(this.divName, [id]);\r\n        let ret = await this.loadTuidIdsOrLocal([id]);\r\n        await this.cacheIdValues(ret);\r\n    }\r\n\r\n    private async loadTuidIdsOrLocal(ids:number[]):Promise<string[]> {\r\n        let ret:string[] = [];        \r\n        let netIds:number[] = [];\r\n        for (let id of ids) {\r\n            let value = this.localArr.getItem(id);\r\n            if (value === undefined)\r\n                netIds.push(id);\r\n            else\r\n                ret.push(value);\r\n        }\r\n        let len = netIds.length;\r\n        if (len > 0) {\r\n            let netRet = await this.tuidInner.loadTuidIds(this.divName, netIds);\r\n            for (let i=0; i<len; i++) {\r\n                //有些id可能没有内容，不会返回\r\n                //let id = netIds[i]; \r\n                let row:string = netRet[i];\r\n                if (!row) continue;\r\n                let p = row.indexOf('\\t');\r\n                if (p < 0) p = row.length;\r\n                let id = Number(row.substr(0, p));\r\n                _.remove(netIds, v => v === id);\r\n                ret.push(row);\r\n                this.localArr.setItem(id, row);\r\n            }\r\n            len = netIds.length;\r\n            for (let i=0; i<len; i++) {\r\n                this.localArr.setItem(netIds[i], '');\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n}\r\n\r\nexport class IdDivCache extends IdCache {\r\n    private div: TuidDiv;\r\n    protected divName:string;\r\n\r\n    constructor(tuidLocal:TuidInner, div: TuidDiv) {\r\n        super(tuidLocal);\r\n        this.div = div;\r\n        this.divName = div.name;\r\n        this.localArr = tuidLocal.cache.arr(tuidLocal.name + '.ids.' + this.divName);\r\n    }\r\n\r\n    protected initLocalArr() {\r\n        // 这个不需要，必须去掉\r\n        // this.localArr = this.tuidInner.cache.arr(this.tuidInner.name + '.ids');\r\n    }\r\n\r\n    protected getIdFromObj(val:any) {return this.div.getIdFromObj(val)}\r\n    protected unpackTuidIds(values:string[]):any[] {\r\n        return this.div.unpackTuidIds(values);\r\n    }\r\n    protected cacheTuidFieldValues(tuidValue: any) {\r\n        this.div.cacheTuidFieldValues(tuidValue);\r\n    }\r\n\r\n    /*\r\n    async cacheIds():Promise<void> {\r\n        if (this.waitingIds.length === 0) return;\r\n        let tuidValues = await this.loadIds();\r\n        if (tuidValues !== undefined) {\r\n            let tuids = this.tuidLocal.unpackTuidIds(tuidValues);\r\n            for (let tuidValue of tuids) {\r\n                if (this.cacheValue(tuidValue) === false) continue;\r\n                this.tuidLocal.cacheTuidFieldValues(tuidValue);\r\n                this.afterCacheValue(tuidValue);\r\n            }\r\n        }\r\n    }\r\n    */\r\n}\r\n","import _ from 'lodash';\r\nimport { LocalArr } from '../../tool';\r\nimport { Entity } from '../entity';\r\nimport { UqMan, ArrFields, Field, SchemaFrom } from '../uqMan';\r\nimport { EntityCaller } from '../caller';\r\nimport { BoxId } from './boxId';\r\nimport { IdCache, IdDivCache } from './idCache';\r\n\r\nexport interface TuidSaveResult {\r\n    id: number;\r\n    inId: number;\r\n}\r\n\r\nexport abstract class Tuid extends Entity {\r\n    readonly typeName:string = 'tuid';\r\n    protected idName: string;\r\n    cached: boolean;\r\n    unique: string[];\r\n\r\n    /*\r\n    constructor(uq:UqMan, name:string, typeId:number) {\r\n        super(uq, name, typeId)\r\n    }*/\r\n\r\n    public setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        let {id} = schema;\r\n        this.idName = id;\r\n    }\r\n\r\n    buildTuidBox(): TuidBox {\r\n        return new TuidBox(this);\r\n    }\r\n\r\n    getIdFromObj(obj:any):number {return obj[this.idName]}\r\n    abstract useId(id:number):void;\r\n    abstract boxId(id:number):BoxId;\r\n    abstract valueFromId(id:number):any;\r\n    abstract async assureBox (id:number): Promise<void>;\r\n    cacheIds() {}\r\n    async modifyIds(ids:any[]) {}\r\n    isImport = false;\r\n    abstract get hasDiv():boolean;// {return this.divs!==undefined}\r\n    abstract div(name:string):TuidDiv;\r\n    abstract async loadMain(id:number|BoxId):Promise<any>;\r\n    abstract async load(id:number|BoxId):Promise<any>;\r\n    abstract async all():Promise<any[]>;\r\n    abstract async save(id:number, props:any):Promise<TuidSaveResult>;\r\n    abstract async search(key:string, pageStart:string|number, pageSize:number):Promise<any>;\r\n    abstract async searchArr(owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any>;\r\n    abstract async loadArr(arr:string, owner:number, id:number):Promise<any>;\r\n    abstract async saveArr(arr:string, owner:number, id:number, props:any):Promise<void>;\r\n    abstract async posArr(arr:string, owner:number, id:number, order:number):Promise<void>;\r\n}\r\n\r\nexport class TuidInner extends Tuid {\r\n    private divs: {[div:string]: TuidDiv};\r\n    protected cacheFields: Field[];\r\n    protected idCache: IdCache;\r\n    protected localArr:LocalArr;\r\n    constructor(uq:UqMan, name:string, typeId:number) {\r\n        super(uq, name, typeId);\r\n        this.idCache = new IdCache(this);\r\n        this.localArr = this.cache.arr(this.name + '.whole');\r\n        if (uq.newVersion === true) this.localArr.removeAll();\r\n    }\r\n\r\n    public setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        let {arrs} = schema;\r\n        if (arrs !== undefined) {\r\n            this.divs = {};\r\n            for (let arr of arrs) {\r\n                let {name} = arr;\r\n                let tuidDiv = new TuidDiv(this.uq, this, name);\r\n                this.divs[name] = tuidDiv;\r\n                tuidDiv.setSchema(arr);\r\n                tuidDiv.buildFieldsTuid();\r\n            }\r\n        }\r\n    }\r\n    \r\n    useId(id:number, defer?:boolean) {\r\n        this.idCache.useId(id, defer);\r\n    }\r\n    boxId(id:number):BoxId {\r\n        if (typeof id === 'object') return id;\r\n        this.useId(id);\r\n        let {createBoxId} = this.uq;\r\n        if (!createBoxId) return {id: id} as BoxId;\r\n        return createBoxId(this, id);\r\n    }\r\n    valueFromId(id:number) {return this.idCache.getValue(id)}\r\n    async assureBox (id:number):Promise<void> {\r\n        await this.idCache.assureObj(id);\r\n    }\r\n\r\n    cacheIds() {\r\n        this.idCache.cacheIds();\r\n        if (this.divs === undefined) return;\r\n        for (let i in this.divs) this.divs[i].cacheIds();\r\n    }\r\n    async modifyIds(ids:any[]) {\r\n        await this.idCache.modifyIds(ids);\r\n    }\r\n    cacheTuids(defer:number) {this.uq.cacheTuids(defer)}\r\n    get hasDiv():boolean {return this.divs!==undefined}\r\n    div(name:string):TuidDiv {\r\n        return this.divs && this.divs[name];\r\n    }\r\n    async loadTuidIds(divName:string, ids:number[]):Promise<any[]> {\r\n        //return await this.uqApi.tuidIds(this.name, divName, ids);\r\n        let ret:any[] = await new IdsCaller(this, {divName:divName, ids:ids}).request();\r\n        if (ret.length > 0) this.cached = true;\r\n        return ret;\r\n    }\r\n    async loadMain(id:number|BoxId):Promise<any> {\r\n        if (typeof id === 'object') id = id.id;\r\n        await this.idCache.assureObj(id);\r\n        return this.idCache.valueFromId(id);\r\n    }\r\n    async load(id:number|BoxId):Promise<any> {\r\n        if (id === undefined || id === 0) return;\r\n        //let cacheValue = this.idCache.valueFromId(id); \r\n        //if (typeof cacheValue === 'object') return cacheValue;\r\n        if (typeof id === 'object') id = id.id;\r\n        let valuesText = this.localArr.getItem(id);\r\n        let values: any;\r\n        if (valuesText) {\r\n            values = JSON.parse(valuesText);\r\n        }\r\n        else {\r\n            values = await new GetCaller(this, id).request();\r\n            if (values !== undefined) {\r\n                this.localArr.setItem(id, JSON.stringify(values));\r\n            }\r\n        }\r\n        if (values === undefined) return;\r\n        for (let f of this.schema.fields) {\r\n            let {tuid} = f;\r\n            if (tuid === undefined) continue;\r\n            let t = this.uq.getTuid(tuid);\r\n            if (t === undefined) continue;\r\n            let n = f.name;\r\n            values[n] = t.boxId(values[n]);\r\n        }\r\n        this.idCache.cacheValue(values);\r\n        this.cacheTuidFieldValues(values);\r\n        return values;\r\n    }\r\n\r\n    cacheTuidFieldValues(values:any) {\r\n        let {fields, arrs} = this.schema;\r\n        this.cacheFieldsInValue(values, fields);\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs as ArrFields[]) {\r\n                let {name, fields} = arr;\r\n                let arrValues = values[name];\r\n                if (arrValues === undefined) continue;\r\n                let tuidDiv = this.div(name);\r\n                for (let row of arrValues) {\r\n                    //row._$tuid = tuidDiv;\r\n                    //row.$owner = this.boxId(row.owner);\r\n                    tuidDiv.cacheValue(row);\r\n                    this.cacheFieldsInValue(row, fields);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public buildFieldsTuid() {\r\n        super.buildFieldsTuid();\r\n        let {mainFields} = this.schema;\r\n        if (mainFields === undefined) debugger;\r\n        this.uq.buildFieldTuid(this.cacheFields = mainFields || this.fields);\r\n    }\r\n\r\n    unpackTuidIds(values:string[]):any[] {\r\n        return this.unpackTuidIdsOfFields(values, this.cacheFields);\r\n    }\r\n\r\n    async save(id:number, props:any):Promise<TuidSaveResult> {\r\n        /*\r\n        let {fields} = this.schema;\r\n        let params:any = {$id: id};\r\n        for (let field of fields as Field[]) {\r\n            let {name, tuid, type} = field;\r\n            let val = props[name];\r\n            if (tuid !== undefined) {\r\n                if (typeof val === 'object') {\r\n                    if (val !== null) val = val.id;\r\n                }\r\n            }\r\n            else {\r\n                switch (type) {\r\n                    case 'date':\r\n                    case 'datetime':\r\n                        val = new Date(val).toISOString();\r\n                        val = (val as string).replace('T', ' ');\r\n                        val = (val as string).replace('Z', '');\r\n                        break;\r\n                }\r\n            }\r\n            params[name] = val;\r\n        }\r\n        let ret = await this.uqApi.tuidSave(this.name, params);\r\n        return ret;\r\n        */\r\n        let ret = new SaveCaller(this, {id:id, props:props}).request();\r\n        if (id !== undefined) {\r\n            this.idCache.remove(id);\r\n            this.localArr.removeItem(id);\r\n        }\r\n        return ret;\r\n    }\r\n    async all():Promise<any[]> {\r\n        let ret: any[] = await new AllCaller(this, {}).request();\r\n        return ret;\r\n    }\r\n    async search(key:string, pageStart:string|number, pageSize:number):Promise<any[]> {\r\n        let ret:any[] = await this.searchArr(undefined, key, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    async searchArr(owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        //let api = this.uqApi;\r\n        //let ret = await api.tuidSearch(this.name, undefined, owner, key, pageStart, pageSize);\r\n        let params:any = {arr:undefined, owner:owner, key:key, pageStart:pageStart, pageSize:pageSize};\r\n        let ret = await new SearchCaller(this, params).request();\r\n        let {fields} = this.schema;\r\n        for (let row of ret) {\r\n            this.cacheFieldsInValue(row, fields);\r\n        }\r\n        return ret;\r\n    }\r\n    async loadArr(arr:string, owner:number, id:number):Promise<any> {\r\n        if (id === undefined || id === 0) return;\r\n        //let api = this.uqApi;\r\n        //return await api.tuidArrGet(this.name, arr, owner, id);\r\n        return await new LoadArrCaller(this, {arr:arr, owner:owner, id:id}).request();\r\n    }\r\n    async saveArr(arr:string, owner:number, id:number, props:any) {\r\n        //let params = _.clone(props);\r\n        //params[\"$id\"] = id;\r\n        //return await this.uqApi.tuidArrSave(this.name, arr, owner, params);\r\n        return await new SaveArrCaller(this, {arr:arr, owner:owner, id:id, props:props}).request();\r\n    }\r\n\r\n    async posArr(arr:string, owner:number, id:number, order:number) {\r\n        //return await this.uqApi.tuidArrPos(this.name, arr, owner, id, order);\r\n        return await new ArrPosCaller(this, {arr:arr, owner:owner, id:id, order:order}).request();\r\n    }\r\n}\r\n\r\nabstract class TuidCaller<T> extends EntityCaller<T> {\r\n    protected get entity(): Tuid {return this._entity as Tuid};\r\n}\r\n\r\n// 包含main字段的load id\r\n// 当前为了兼容，先调用的包含所有字段的内容\r\nclass GetCaller extends TuidCaller<number> {\r\n    method = 'GET';\r\n    get path():string {return `tuid/${this.entity.name}/${this.params}`}\r\n}\r\n\r\nclass IdsCaller extends TuidCaller<{divName:string, ids:number[]}> {\r\n    get path():string {\r\n        let {divName} = this.params;\r\n        return `tuidids/${this.entity.name}/${divName !== undefined?divName:'$'}`;\r\n    }\r\n    buildParams():any {return this.params.ids}\r\n    xresult(res:any):any {\r\n        return (res as string).split('\\n');\r\n    }\r\n}\r\n\r\n\r\nclass SaveCaller extends TuidCaller<{id:number, props:any}> {\r\n    get path():string {return `tuid/${this.entity.name}`}\r\n    buildParams():any {\r\n        let {fields, arrs} = this.entity.schema;\r\n        let {id, props} = this.params;\r\n        let params:any = {$id: id};\r\n        this.transParams(params, props, fields);\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                let arrName = arr.name;\r\n                let arrParams = [];\r\n                let arrFields = arr.fields;\r\n                let arrValues = props[arrName];\r\n                if (arrValues !== undefined) {\r\n                    for (let arrValue of arrValues) {\r\n                        let row = {};\r\n                        this.transParams(row, arrValue, arrFields);\r\n                        arrParams.push(row);\r\n                    }\r\n                }\r\n                params[arrName] = arrParams;\r\n            }\r\n        }\r\n        return params;\r\n    }\r\n    private transParams(values:any, params:any, fields:Field[]) {\r\n        if (params === undefined) return;\r\n        for (let field of fields) {\r\n            let {name, tuid, type} = field;\r\n            let val = params[name];\r\n            if (tuid !== undefined) {\r\n                if (typeof val === 'object') {\r\n                    if (val !== null) val = val.id;\r\n                }\r\n            }\r\n            else {\r\n                switch (type) {\r\n                    case 'date':\r\n                        val = this.entity.buildDateParam(val); \r\n                        //val = (val as string).replace('T', ' ');\r\n                        //val = (val as string).replace('Z', '');\r\n                        break;\r\n                    case 'datetime':\r\n                        val = this.entity.buildDateTimeParam(val);\r\n                        //val = new Date(val).toISOString();\r\n                        //val = (val as string).replace('T', ' ');\r\n                        //val = (val as string).replace('Z', '');\r\n                        break;\r\n                }\r\n            }\r\n            values[name] = val;\r\n        }\r\n    }\r\n}\r\n\r\nclass SearchCaller extends TuidCaller<{arr:string, owner:number, key:string, pageStart:string|number, pageSize:number}> {\r\n    get path():string {return `tuids/${this.entity.name}`}\r\n}\r\n\r\nclass AllCaller extends TuidCaller<{}> {\r\n    method = 'GET';\r\n    get path():string {return `tuid-all/${this.entity.name}`}\r\n}\r\n\r\nclass LoadArrCaller extends TuidCaller<{arr:string, owner:number, id:number}> {\r\n    method = 'GET';\r\n    get path():string {\r\n        let {arr, owner, id} = this.params;\r\n        return `tuid-arr/${this.entity.name}/${owner}/${arr}/${id}`;\r\n    }\r\n}\r\n\r\nclass SaveArrCaller extends TuidCaller<{arr:string, owner:number, id:number, props:any}> {\r\n    get path():string {\r\n        let {arr, owner} = this.params;\r\n        return `tuid-arr/${this.entity.name}/${owner}/${arr}/`;\r\n    }\r\n    buildParams():any {\r\n        let {id, props} = this.params;\r\n        let params = _.clone(props);\r\n        params['$id'] = id;\r\n        return params;\r\n    }\r\n}\r\n\r\nclass ArrPosCaller extends TuidCaller<{arr:string, owner:number, id:number, order:number}> {\r\n    get path():string {\r\n        let {arr, owner} = this.params;\r\n        return `tuid-arr-pos/${this.entity.name}/${owner}/${arr}/`;\r\n    }\r\n    buildParams():any {\r\n        let {id, order} = this.params;\r\n        return { bid: id, $order: order}\r\n    }\r\n}\r\n\r\nexport class TuidImport extends Tuid {\r\n    private tuidLocal: TuidInner;\r\n\r\n    constructor(uq:UqMan, name:string, typeId:number, from: SchemaFrom) {\r\n        super(uq, name, typeId);\r\n        this.from = from;\r\n    }\r\n\r\n    setFrom(tuidLocal: TuidInner) {this.tuidLocal = tuidLocal}\r\n    \r\n    readonly from: SchemaFrom;\r\n    isImport = true;\r\n\r\n    useId(id:number) {this.tuidLocal.useId(id);}\r\n    boxId(id:number):BoxId {return this.tuidLocal.boxId(id);}\r\n    valueFromId(id:number) {return this.tuidLocal.valueFromId(id)}\r\n    async assureBox(id:number):Promise<void> {\r\n        await this.tuidLocal.assureBox(id);\r\n    }\r\n    get hasDiv():boolean {return this.tuidLocal.hasDiv}\r\n    div(name:string):TuidDiv {return this.tuidLocal.div(name)}\r\n    async loadMain(id:number|BoxId):Promise<any> {\r\n        let ret = await this.tuidLocal.loadMain(id);\r\n        return ret;\r\n    }\r\n    async load(id:number|BoxId):Promise<any> {\r\n        return await this.tuidLocal.load(id);\r\n    }\r\n    async save(id:number, props:any):Promise<TuidSaveResult> {\r\n        return await this.tuidLocal.save(id, props);\r\n    }\r\n    async all():Promise<any[]> {\r\n        return await this.tuidLocal.all();\r\n    }\r\n    async search(key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        return await this.tuidLocal.search(key, pageStart, pageSize);\r\n    }\r\n    async searchArr(owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        return await this.tuidLocal.searchArr(owner, key, pageStart, pageSize);\r\n    }\r\n    async loadArr(arr:string, owner:number, id:number):Promise<any> {\r\n        return await this.tuidLocal.loadArr(arr, owner, id);\r\n    }\r\n    async saveArr(arr:string, owner:number, id:number, props:any):Promise<void> {\r\n        await this.tuidLocal.saveArr(arr, owner, id, props);\r\n    }\r\n    async posArr(arr:string, owner:number, id:number, order:number):Promise<void> {\r\n        await this.tuidLocal.posArr(arr, owner, id, order);\r\n    }\r\n}\r\n\r\n// field._tuid 用这个接口\r\n// Tuid, TuidDiv 实现这个接口\r\nexport class TuidBox {\r\n    tuid: Tuid;\r\n    ownerField:Field = undefined;\r\n    constructor(tuid: Tuid) {\r\n        this.tuid = tuid;\r\n    }\r\n\r\n    boxId(id:number):BoxId {\r\n        return this.tuid.boxId(id);\r\n    }\r\n    getIdFromObj(obj:any):number {\r\n        return this.tuid.getIdFromObj(obj);\r\n    }\r\n    useId(id:number):void {\r\n        return this.tuid.useId(id);\r\n    }\r\n    async showInfo() {\r\n        alert('showInfo not implemented');\r\n    }\r\n}\r\n\r\n\r\nexport class TuidDiv extends TuidInner /* Entity*/ {\r\n    readonly typeName:string = 'div';\r\n    protected cacheFields: Field[];\r\n    protected tuid: TuidInner;\r\n    protected idName: string;\r\n    protected idCache: IdDivCache;\r\n\r\n    //ui: React.StatelessComponent<any>;\r\n    //res: any;\r\n\r\n    constructor(uq: UqMan, tuid: TuidInner, name: string) {\r\n        super(uq, name, 0);\r\n        this.tuid = tuid;\r\n        this.idName = 'id';\r\n        this.idCache = new IdDivCache(tuid, this);\r\n    }\r\n\r\n    get owner() {return this.tuid}\r\n\r\n    /*\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        this.buildFieldsTuid();\r\n    }*/\r\n\r\n    /*\r\n    setUIRes(ui:any, res:any) {\r\n        this.ui = ui && ui.content;\r\n        this.res = res;\r\n    }\r\n    */\r\n\r\n    buildFieldsTuid() {\r\n        super.buildFieldsTuid();\r\n        let {mainFields} = this.schema;\r\n        if (mainFields === undefined) debugger;\r\n        this.uq.buildFieldTuid(this.cacheFields = mainFields);\r\n    }\r\n\r\n    buildTuidDivBox(ownerField: Field): TuidBoxDiv {\r\n        return new TuidBoxDiv(this.tuid, this, ownerField);\r\n    }\r\n\r\n    getIdFromObj(obj:any):number {return obj[this.idName]}\r\n    cacheValue(value:any):void {\r\n        this.idCache.cacheValue(value);\r\n    }\r\n\r\n    useId(id:number, defer?:boolean):void {\r\n        this.idCache.useId(id, defer);\r\n    }\r\n\r\n    /*\r\n    boxId(id:number):BoxId {\r\n        if (typeof id === 'object') return id;\r\n        this.useId(id);\r\n        //return new BoxDivId(this.tuid, this, id);\r\n        return this.tuid.boxDivId(this, id);\r\n    }\r\n    */\r\n    valueFromId(id:number):any {\r\n        return this.idCache.getValue(id)\r\n    }\r\n\r\n    async assureBox(id:number):Promise<void> {\r\n        await this.idCache.assureObj(id);\r\n    }\r\n\r\n    async cacheIds() {\r\n        await this.idCache.cacheIds();\r\n    }\r\n\r\n    cacheTuidFieldValues(values:any) {\r\n        let fields = this.schema.fields;\r\n        this.cacheFieldsInValue(values, fields);\r\n    }\r\n\r\n    unpackTuidIds(values:string[]):any[] {\r\n        return this.unpackTuidIdsOfFields(values, this.cacheFields);\r\n    }\r\n}\r\n\r\nexport class TuidBoxDiv extends TuidBox {\r\n    ownerField: Field;\r\n    private div: TuidDiv;\r\n    constructor(tuid: Tuid, div: TuidDiv, ownerField: Field) {\r\n        super(tuid);\r\n        this.div = div;\r\n        this.ownerField = ownerField;\r\n    }\r\n\r\n    boxId(id:number):BoxId {\r\n        return this.div.boxId(id);\r\n    }\r\n    getIdFromObj(obj:any):number {\r\n        return this.div.getIdFromObj(obj);\r\n    }\r\n    useId(id:number):void {\r\n        return this.div.useId(id);\r\n    }\r\n}\r\n","import _ from 'lodash';\r\n\r\nexport interface KeyValueRes {\r\n    [key:string]: any;\r\n}\r\n\r\nexport interface Res<T extends KeyValueRes> {\r\n    [lang:string]: T | {[district:string]: T};\r\n}\r\n\r\nexport const resOptions:{lang:string, district:string} = {\r\n    lang: undefined,\r\n    district: undefined,\r\n}\r\n\r\nexport function setResOptions(lang:string, district:string) {\r\n    resOptions.lang = lang;\r\n    resOptions.district = district;\r\n}\r\n\r\n(function() {\r\n    let lang: string, district: string;\r\n    let language = (navigator.languages && navigator.languages[0])  // Chrome / Firefox\r\n        || navigator.language; // ||   // All browsers\r\n    //navigator.userLanguage; // IE <= 10\r\n    if (!language) {\r\n        lang = 'zh';\r\n        district = 'CN';\r\n    }\r\n    else {\r\n        let parts = language.split('-');\r\n        lang = parts[0];\r\n        if (parts.length > 1) district = parts[1];\r\n    }\r\n    setResOptions(lang, district);\r\n}());\r\n\r\nexport function resLang<T extends KeyValueRes>(res:Res<T>):T {\r\n    let {lang, district} = resOptions;\r\n    let ret:T = {} as T;\r\n    if (res === undefined) return ret;\r\n    _.merge(ret, res._);\r\n    let l = res[lang];\r\n    if (l === undefined) return ret;\r\n    _.merge(ret, l._);\r\n    let d = l[district];\r\n    if (d === undefined) return ret;\r\n    _.merge(ret, d);\r\n    let {entity} = ret;\r\n    if (entity !== undefined) {\r\n        for (let i in entity) {\r\n            entity[i.toLowerCase()] = entity[i];\r\n        }\r\n    }\r\n    return ret;\r\n}\r\n","import * as React from 'react';\r\nimport {observable, computed} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face} from '../face';\r\nimport {Rule} from '../rule';\r\n\r\nexport abstract class ControlBase {\r\n    protected formView: FormView;\r\n    constructor(formView:FormView) {\r\n        this.formView = formView;\r\n    }\r\n    render():JSX.Element {\r\n        return <div className=\"col-sm-10\">\r\n            {this.renderControl()}\r\n        </div>;\r\n    }\r\n    protected abstract renderControl():JSX.Element;\r\n    @computed get hasError():boolean {return false;}\r\n    @computed get filled():boolean {return false;}\r\n    clear() {}\r\n    clearErrors() {}\r\n    readValues(values:any):any {}\r\n    setError(fieldName:string, error:string) {}\r\n    setInitValues(values: any) {}\r\n    isOk():boolean {this.validate(); return !this.hasError;}\r\n    protected validate() {}\r\n}\r\n\r\nexport abstract class Control extends ControlBase {\r\n    protected field: Field;\r\n    protected face: Face;\r\n    protected props: any;\r\n    protected rules: Rule[];\r\n\r\n    protected element: HTMLElement;\r\n    @observable protected isOK?: boolean;\r\n    @observable protected error: string;\r\n    @observable protected value: any;\r\n\r\n    constructor(formView:FormView, field:Field, face:Face) {\r\n        super(formView);\r\n        this.field = field;\r\n        this.face = face;\r\n        this.init();\r\n        this.setProps();\r\n    }\r\n    protected ref(element: HTMLElement) {\r\n        this.element = element;\r\n    }\r\n    protected init() {\r\n        this.rules = [];\r\n        let r = this.field.rules;\r\n        if (r !== undefined) {\r\n            if (Array.isArray(r) === true) this.rules.push(...(r as Rule[]));\r\n            else this.rules.push(r as Rule);\r\n        }\r\n    };\r\n    protected setProps():any {\r\n        return this.props = {\r\n            ref: this.ref.bind(this),\r\n            name: this.field.name,\r\n        }\r\n    };\r\n    @computed get hasError():boolean {return this.error !== undefined;}\r\n    @computed get filled():boolean {\r\n        let ret = this.value !== undefined && this.value !== this.field.defaultValue;\r\n        return ret;\r\n    }\r\n    clearValue() { this.value = undefined; }\r\n    clear() { this.clearErrors(); this.clearValue(); }\r\n    clearErrors() { this.isOK = undefined; this.error = undefined; }\r\n    readValues(values:any):any {\r\n        values[this.field.name] = this.value;\r\n    }\r\n    setError(fieldName:string, error:string) {}\r\n    setInitValues(values: any) {}\r\n    protected getValueFromElement():any {return this.value;}\r\n    protected validate() {\r\n        try {\r\n            let v = this.getValueFromElement();\r\n            if (this.rules.length > 0) {\r\n                let isOk:boolean;\r\n                for (let rule of this.rules) {\r\n                    console.log('validate: %s', v);\r\n                    let err = rule(v);\r\n                    console.log('validate: %s err: %s', v, err);\r\n                    if (err === true) {\r\n                        this.error = undefined;\r\n                        isOk = true;\r\n                    }\r\n                    else if (err !== undefined) {\r\n                        //console.log('field %s onBlur v=%s rule=%s err=%s', \r\n                        //    this.field.name, JSON.stringify(v), rule, err);\r\n                        this.error = err;\r\n                        this.isOK = false;\r\n                        return;\r\n                    }\r\n                }\r\n                this.isOK = isOk;\r\n            }\r\n            this.value = v;\r\n        }\r\n        catch (e) {\r\n            this.error = e.message;\r\n        }\r\n    }\r\n    render():JSX.Element {\r\n        let n;\r\n        if (this.face !== undefined) {\r\n            let {notes} = this.face;\r\n            if (notes !== undefined) n = <small className=\"text-muted\">{notes}</small>;\r\n        }\r\n        return <div className=\"col-sm-10\">\r\n            {this.renderControl()}\r\n            {n}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face} from '../face';\r\nimport {ControlBase} from './control';\r\n\r\nexport class ButtonsControl extends ControlBase {\r\n    constructor(props) {\r\n        super(props);\r\n        this.otherClick = this.otherClick.bind(this);\r\n    }\r\n    private otherClick() {\r\n        let onOther = this.formView.props.onOther;\r\n        if (onOther === undefined) return;\r\n        let values = this.formView.readValues();\r\n        onOther(values);\r\n    }\r\n    renderControl():JSX.Element {\r\n        console.log('buttons.renderControl');\r\n        let nothing = this.formView.nothing;\r\n        let hasError = this.formView.hasError;\r\n        let props = this.formView.props;\r\n        console.log('buttons.renderControl nothing:%s hasError:%s', nothing, hasError);\r\n        let {submitButton, otherButton, onOther} = props;\r\n        let btnOther;\r\n        if (otherButton !== undefined) {\r\n            btnOther = <button className=\"btn btn-outline-info ml-auto\" onClick={this.otherClick}>\r\n                {otherButton}\r\n            </button>\r\n        }\r\n        return <div className=\"d-flex justify-content-start\">\r\n            <button\r\n                className=\"btn btn-primary\"\r\n                type=\"submit\" \r\n                disabled={nothing || hasError}>\r\n                {submitButton || '提交'}\r\n            </button>\r\n            {btnOther}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable, computed} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, Placeholder} from '../face';\r\nimport {Control} from './control';\r\n\r\nconst TxtRequired = '必须填入要求内容';\r\n\r\nexport abstract class CharsControl extends Control {\r\n    protected init() {\r\n        super.init();\r\n        if (this.field.required === true) {\r\n            this.rules.push((v) => {\r\n                if (v===null || v===undefined || (v as string).trim().length === 0) return TxtRequired;\r\n                return true;\r\n            });\r\n        }\r\n    }\r\n\r\n    protected element: HTMLInputElement;\r\n    protected getValueFromElement():any {return this.parseValue(this.element.value)}\r\n\r\n    protected setProps() {\r\n        super.setProps();\r\n        _.assign(this.props, {\r\n            onBlur: this.onBlur.bind(this),\r\n            onFocus: this.onFocus.bind(this),\r\n            onChange: this.onChange.bind(this),\r\n        });\r\n        let face = this.face as Placeholder;\r\n        if (face !== undefined) {\r\n            _.assign(this.props, {\r\n                placeholder: face.placeholder,\r\n            });\r\n        }\r\n        return this.props;\r\n    };\r\n    protected parseValue(value?:string):any {return value;}\r\n    private onBlur() {\r\n        //console.log('field %s onBlure', this.field.name);\r\n        this.validate();\r\n    }\r\n    private onChange() {\r\n        console.log('onChange');\r\n        this.validate();\r\n    }\r\n    private onFocus() {\r\n        this.clearErrors();\r\n        //this.error = undefined;\r\n        //this.formView.clearErrors();\r\n    }\r\n    protected className() {\r\n        return classNames({\r\n            \"form-control\": true,\r\n            \"has-success\": this.isOK === true,\r\n            \"is-invalid\": this.error !== undefined,\r\n            \"is-valid\": this.error === undefined && this.isOK === true,\r\n        });\r\n    }\r\n    protected renderInput():JSX.Element {\r\n        return <input className={this.className()} {...this.props} />;\r\n    }\r\n    protected ref(element: HTMLInputElement) {\r\n        super.ref(element);\r\n        if (element) {\r\n            element.value = this.value === undefined? '':this.value;\r\n        }\r\n    }\r\n    protected renderError():JSX.Element {\r\n        //if (this.field.name === 'name') console.log('charsControl renderControl');\r\n        if (this.error === undefined) return null;\r\n        return <div className=\"invalid-feedback\">{this.error}</div>\r\n    }\r\n    clearValue() { super.clearValue(); this.element.value = ''; }\r\n    setError(fieldName:string, error:string) {\r\n        if (this.field.name === fieldName) this.error = error;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        if (v === undefined) return;\r\n        //this.element.value = v;\r\n        this.value = v;\r\n    }\r\n    renderControl():JSX.Element {\r\n        return <React.Fragment>\r\n            {this.renderInput()}\r\n            {this.renderError()}\r\n        </React.Fragment>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport {CharsControl} from './charsControl';\r\nimport {StringField} from '../field';\r\n\r\nexport class StringControl extends CharsControl {\r\n    protected field: StringField;\r\n    protected setProps() {\r\n        let p = super.setProps();\r\n        _.assign(p, {\r\n            type: 'text',\r\n            maxLength: this.field.maxLength,\r\n        });\r\n        return p;\r\n    };\r\n    protected parseValue(value?:string):any {\r\n        if (value === undefined) return undefined;\r\n        if (value.trim().length === 0) return undefined;\r\n        return value;\r\n    }\r\n}\r\n\r\nexport class PasswordControl extends StringControl {\r\n    protected setProps() {\r\n        let p = super.setProps();\r\n        _.assign(p, {\r\n            type: 'password',\r\n            maxLength: this.field.maxLength,\r\n        });\r\n        return p;\r\n    };\r\n}","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport {IntField, DecField, NumberField} from '../field';\r\nimport {CharsControl} from './charsControl';\r\n\r\nconst ErrInvalidNumber = '无效的数字';\r\nconst ErrMin = '最小值为';\r\nconst ErrMax = '最大值为';\r\n\r\nconst KeyCode_Neg = 45;\r\nconst KeyCode_Dot = 46;\r\n\r\nexport class NumberControl extends CharsControl {\r\n    protected field: IntField | DecField | NumberField;\r\n    protected value: number;\r\n    protected extraChars: number[];\r\n    \r\n    protected init() {\r\n        super.init();\r\n        this.extraChars = [];\r\n        let {min, max} = this.field;\r\n        if (min !== undefined) {\r\n            this.rules.push((v:number) => {if (v === undefined) return; if (v<min) return ErrMin + min; return true;});\r\n            if (min < 0) this.extraChars.push(KeyCode_Neg);\r\n        }\r\n        else {\r\n            this.extraChars.push(KeyCode_Neg);\r\n        }\r\n\r\n        if (max !== undefined) {\r\n            this.rules.push((v:number) => {if (v === undefined) return; if (v>max) return ErrMax + max; return true});\r\n        }\r\n        switch (this.field.type) {\r\n            case 'dec':\r\n            case 'number': this.extraChars.push(KeyCode_Dot); break;\r\n        }\r\n    }\r\n\r\n    protected parseValue(value?:string):any {\r\n        if (value === undefined) return undefined;\r\n        if (value.trim().length === 0) return undefined;\r\n        let n = Number.parseFloat(value);\r\n        if (isNaN(n)) throw new Error(ErrInvalidNumber);\r\n        return n;\r\n    }\r\n\r\n    protected setProps() {\r\n        super.setProps();\r\n        _.assign(this.props, {\r\n            type: 'number',\r\n            step: (this.field as DecField).step,\r\n            onKeyPress: this.onKeyPress.bind(this),\r\n        });\r\n    }\r\n\r\n    onKeyPress(event:KeyboardEvent) {\r\n        let ch = event.charCode;\r\n        if (ch === 8 || ch === 0 || ch === 13 || ch >= 48 && ch <= 57) return;\r\n        if (this.extraChars !== undefined) {\r\n            if (this.extraChars.indexOf(ch) >= 0) {\r\n                switch (ch) {\r\n                    case KeyCode_Dot: this.onKeyDot(); break;\r\n                    case KeyCode_Neg: this.onKeyNeg(); event.preventDefault(); break;\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    private onKeyDot() {\r\n        let v = this.element.value;\r\n        let p = v.indexOf('.');\r\n        if (p >= 0) this.element.value = v.replace('.', '');\r\n    }\r\n    private onKeyNeg() {\r\n        let v = this.element.value;\r\n        let p = v.indexOf('-');\r\n        if (p >= 0) v = v.replace('-', '');\r\n        else v = '-'+v;\r\n        this.element.value = v;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {Control, ControlBase} from './control';\r\nimport {FormView} from '../formView';\r\n\r\nexport class UnknownControl extends Control {\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-plaintext\">\r\n            <div className=\"alert alert-primary\" role=\"alert\">\r\n            don't know how to create control<br/>\r\n            field: {JSON.stringify(this.field)} must be object <br/>\r\n            face: {JSON.stringify(this.face)} must be object <br/>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class EmptyControl extends ControlBase {\r\n    private element:JSX.Element;\r\n    constructor(formView:FormView, element:JSX.Element) {\r\n        super(formView);\r\n        this.element = element;\r\n    }\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-plaintext\">\r\n            {this.element}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, IdPickFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class PickIdControl extends Control {\r\n    protected face: IdPickFace;\r\n    @observable private caption: string|JSX.Element;\r\n\r\n    private onClick = async () => {\r\n        let {pick, fromPicked} = this.face;\r\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\r\n        if (item === undefined) {\r\n            this.value = undefined;\r\n            return;\r\n        }\r\n        if (fromPicked === undefined) {\r\n            this.value = item.id;\r\n            return;\r\n        }\r\n        let {id, caption} = fromPicked(item);\r\n        this.value = id;\r\n        this.caption = caption;\r\n    }\r\n    onPicked = (value: any) => {\r\n        this.value = value.id;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        this.value = v;\r\n    }\r\n    private controlContent():string|JSX.Element {\r\n        let {itemFromId, fromPicked, initCaption} = this.face;\r\n        if (this.value === undefined) {\r\n            return initCaption || '请选择Id';\r\n        }\r\n        if (this.caption !== undefined) {\r\n            return this.caption;\r\n        }\r\n        if (itemFromId !== undefined) {\r\n            if (fromPicked !== undefined) {\r\n                let item = itemFromId(this.value);\r\n                if (item) {\r\n                    let ret = fromPicked(item);\r\n                    if (ret !== undefined) return ret.caption;\r\n                }\r\n            }\r\n        }\r\n        return String(this.value);\r\n    }\r\n    /*\r\n    private buildContent():string|JSX.Element {\r\n        let {tuid, input} = this.face;\r\n        if (input === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n            return <div onClick={this.onClick}>{this.controlContent()}</div>;\r\n        }\r\n        return <input.component id={this.value} \r\n            tuid={tuid}\r\n            input={input}\r\n            entitiesUI={this.formView.props.context} \r\n            params={this.formView.readValues()}\r\n            onPicked={this.onPicked} />;\r\n    }*/\r\n    renderControl():JSX.Element {\r\n        let {tuid, input} = this.face;\r\n        if (input === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n            return <div className=\"form-control-plaintext px-2 border text-primary rounded cursor-pointer\"\r\n                onClick={this.onClick}>\r\n                {this.controlContent()}\r\n            </div>;\r\n        }\r\n        return <div className=\"form-control-static \">\r\n            <input.component id={this.value} \r\n                ui={tuid}\r\n                //input={input}\r\n                //entitiesUI={this.formView.props.context} \r\n                //params={this.formView.readValues()}\r\n                //onPicked={this.onPicked}\r\n                />\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, TuidPickFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class PickTuidControl extends Control {\r\n    protected face: TuidPickFace;\r\n    // protected value: number;\r\n    @observable private caption: string|JSX.Element;\r\n    constructor(formView:FormView, field:Field, face:Face) {\r\n        super(formView, field, face);\r\n        this.onIdChanged = this.onIdChanged.bind(this);\r\n        //this.onClick = this.onClick.bind(this);\r\n    }\r\n    /*\r\n    private async onClick() {\r\n        let {pick, fromPicked} = this.face;\r\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\r\n        if (item === undefined) {\r\n            this.value = undefined;\r\n            return;\r\n        }\r\n        if (fromPicked === undefined) {\r\n            this.value = item.id;\r\n            return;\r\n        }\r\n        let {id, caption} = fromPicked(item);\r\n        this.value = id;\r\n        this.caption = caption;\r\n    }*/\r\n    onIdChanged(id: any) {\r\n        this.value = id.id;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        this.value = v;\r\n    }\r\n    private buildContent():JSX.Element {\r\n        //let {tuid, input} = this.face;\r\n        return <this.face.input.component \r\n            {...this.face}\r\n            id={this.value}\r\n            //ui={this.face.ui}\r\n            //input={input}\r\n            //entitiesUI={this.formView.props.context} \r\n            onFormValues={()=>this.formView.readValues()}\r\n            onIdChanged={this.onIdChanged} />;\r\n    }\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-static \">\r\n            {this.buildContent()}\r\n        </div>;\r\n    }\r\n}\r\n/*\r\n<button className=\"form-control btn btn-outline-info\"\r\ntype=\"button\"\r\nstyle={{textAlign:'left', paddingLeft:'0.75rem'}}\r\nonClick={this.onClick}>\r\n{this.buildContent()}\r\n</button>\r\n*/","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, PickFace} from '../face';\r\nimport {Control} from './control';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class PickControl extends Control {\r\n    protected face: PickFace;\r\n    @observable private caption: string|JSX.Element;\r\n\r\n    private onClick = async () => {\r\n        let {pick, fromPicked} = this.face;\r\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\r\n        if (item === undefined) {\r\n            this.value = undefined;\r\n            return;\r\n        }\r\n        let {id, caption} = fromPicked(item);\r\n        this.value = id;\r\n        this.caption = caption;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        this.value = v;\r\n    }\r\n    /*\r\n    private controlContent():string|JSX.Element {\r\n        let {content: Content} = this.face;\r\n        if (this.value === undefined) {\r\n            return '请选择';\r\n        }\r\n        \r\n        if (this.caption !== undefined) {\r\n            return this.caption;\r\n        }\r\n        return <Content id={this.value} />;\r\n    }*/\r\n    /*\r\n    private buildContent():string|JSX.Element {\r\n        let {tuid, input} = this.face;\r\n        if (input === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n            return <div onClick={this.onClick}>{this.controlContent()}</div>;\r\n        }\r\n        return <input.component id={this.value} \r\n            tuid={tuid}\r\n            input={input}\r\n            entitiesUI={this.formView.props.context} \r\n            params={this.formView.readValues()}\r\n            onPicked={this.onPicked} />;\r\n    }*/\r\n    renderControl():JSX.Element {\r\n        return <this.view />;\r\n        /*\r\n        let {content:Content} = this.face;\r\n        //if (this.value === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n        //}\r\n        //return <div className=\"form-control-static \">\r\n        //    <Content />\r\n        //</div>;\r\n        */\r\n    }\r\n\r\n    private view = observer(() => {\r\n        let content;\r\n        let {content: Content} = this.face;\r\n        if (this.value === undefined || this.value === null) {\r\n            content = '请选择';\r\n        }\r\n        /*\r\n        else if (this.caption !== undefined) {\r\n            content = this.caption;\r\n        }*/\r\n        else {\r\n            content = <Content id={this.value} />;\r\n        } \r\n        return <div\r\n            className=\"form-control-plaintext px-2 border text-primary rounded cursor-pointer bg-light\"\r\n            onClick={this.onClick}>\r\n            {content}\r\n        </div>\r\n    });\r\n}\r\n","export * from './control';\r\nexport * from './buttonsControl';\r\nexport * from './stringControl';\r\nexport * from './numberControl';\r\n\r\nimport {Field} from '../field';\r\nimport {Face} from '../face';\r\nimport {Control, ControlBase} from './control';\r\nimport {ButtonsControl} from './buttonsControl';\r\nimport {CheckControl} from './checkControl';\r\nimport {RadioControl} from './radioControl';\r\nimport {TextAreaControl} from './textAreaControl';\r\nimport {SelectControl} from './selectControl';\r\nimport {UnknownControl, EmptyControl} from './unknownControl';\r\nimport {StringControl, PasswordControl} from './stringControl';\r\nimport {NumberControl} from './numberControl';\r\n\r\nimport {FormView, FormRow, GroupRow, FieldRow, LabelFormRow} from '../formView';\r\nimport { PickIdControl } from './pickIdControl';\r\nimport { PickTuidControl } from './pickTuidControl';\r\nimport { PickControl } from './pickControl';\r\n\r\nexport type CreateControl = (form:FormView, row: FormRow) => ControlBase\r\n\r\nexport const createControl:CreateControl = (form:FormView, row: LabelFormRow):ControlBase => {\r\n    let label = row.label;\r\n    if ((<GroupRow>row).group !== undefined)\r\n        return createGroupControl(form, label, row as GroupRow);\r\n    if ((<FieldRow>row).field !== undefined)\r\n        return createFieldControl(form, label, row as FieldRow);\r\n    return new EmptyControl(form, row.help);\r\n}\r\n\r\nconst controls:{[type:string]: new (formView:FormView, field:Field, face:Face) => Control} = {\r\n    \"string\": StringControl,\r\n    \"password\": PasswordControl,\r\n    \"number\": NumberControl,\r\n    \"checkbox\": CheckControl,\r\n    \"radiobox\": RadioControl,\r\n    \"select\": SelectControl,\r\n    \"pick-id\": PickIdControl,\r\n    \"pick-tuid\": PickTuidControl,\r\n    \"textarea\": TextAreaControl,\r\n    \"pick\": PickControl,\r\n};\r\nconst defaultFaces:{[type:string]: Face} = {\r\n    \"string\": {type:'string'},\r\n    \"number\": {type:'number'},\r\n    \"int\": {type:'number'},\r\n    \"dec\": {type:'number'},\r\n    \"bool\": {type:'checkbox'},\r\n}\r\nfunction createFieldControl(form:FormView, label:string, fieldRow: FieldRow):Control {\r\n    let {field, face} = fieldRow;\r\n    switch (typeof field) {\r\n        case 'string':\r\n            field = {\r\n                name: (field as any) as string,\r\n                type: 'string',\r\n            }\r\n            break;\r\n        case 'object':\r\n            break;\r\n        default:\r\n            return new UnknownControl(form, field, face);\r\n    }\r\n    let fieldType = field.type || 'string';\r\n    if (face === undefined) {\r\n        face = defaultFaces[fieldType];\r\n        if (face === undefined) return new UnknownControl(form, field, face);\r\n    }\r\n    else if (face.type === undefined) {\r\n        let f = defaultFaces[fieldType];\r\n        face.type = f===undefined? 'string' : f.type;\r\n    }\r\n    let control = controls[face.type || fieldType] || UnknownControl;\r\n    return new control(form, field, face);\r\n}\r\n\r\nfunction createGroupControl(form:FormView, label:string, groupRow: GroupRow):Control {\r\n    return new UnknownControl(form, groupRow as any, undefined);\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field, BoolField} from '../field';\r\nimport {Face, CheckBoxFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class CheckControl extends Control {    \r\n    protected element: HTMLInputElement;\r\n    protected field: BoolField;\r\n    protected face: CheckBoxFace;\r\n    private trueValue: any;\r\n    private falseValue: any;\r\n\r\n    protected init() {\r\n        super.init();\r\n        let {trueValue, falseValue} = this.field;\r\n        if (trueValue === undefined) this.trueValue = 1;\r\n        if (falseValue === undefined) this.falseValue = 0;\r\n    }\r\n\r\n    setProps() {\r\n        super.setProps();\r\n        _.assign(this.props, {\r\n            onChange: this.onChange.bind(this),\r\n        });\r\n    }\r\n\r\n    clearValue() {\r\n        this.element.checked = this.field.defaultValue === this.trueValue;\r\n        this.value = this.getValueFromElement();\r\n    }\r\n\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        if (v === undefined) {\r\n            v = this.field.defaultValue;\r\n        }\r\n        if (v !== undefined) {\r\n            //this.element.checked = v === this.trueValue;\r\n            //this.value = this.getValueFromElement();\r\n        }\r\n    }\r\n\r\n    protected getValueFromElement():any { return this.element.checked? this.trueValue:this.falseValue; }\r\n\r\n    private onChange() {\r\n        this.value = this.getValueFromElement();\r\n    }\r\n\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-static\">\r\n            <label className=\"form-control\">\r\n                <label className=\"custom-control custom-checkbox mb-0\">\r\n                    <input type='checkbox'\r\n                        name={this.field.name}\r\n                        ref={this.props.ref}\r\n                        onChange={this.props.onChange}\r\n                        className=\"custom-control-input\" />\r\n                    <span className=\"custom-control-indicator\" />\r\n                    <span className=\"custom-control-description\">{this.face.label}</span>\r\n                </label>\r\n            </label>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, RadioFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class RadioControl extends Control {\r\n    protected face: RadioFace;\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-static\">\r\n            <div className=\"form-control\">\r\n            {\r\n                this.face.list.map((item, index) => {\r\n                    let t, v;\r\n                    if (typeof item !== 'object') t = v = item;\r\n                    else {\r\n                        t = item.text;\r\n                        v = item.value;\r\n                    }\r\n                    return <label key={index} className=\"custom-control custom-radio w-25\">\r\n                        <input type='radio'\r\n                            name={this.field.name} \r\n                            className=\"custom-control-input\" />\r\n                        <span className=\"custom-control-indicator\"></span>\r\n                        <span className=\"custom-control-description\">{t}</span>\r\n                    </label>;\r\n                })\r\n            }\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, SelectFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class SelectControl extends Control {\r\n    constructor (formView:FormView, field:Field, face:Face) {\r\n        super(formView, field, face);\r\n        this.ref = this.ref.bind(this);\r\n    }\r\n    protected face: SelectFace;\r\n    protected element: HTMLSelectElement;\r\n    protected getValueFromElement():any {\r\n        let {selectedIndex, selectedOptions} = this.element;\r\n        let v:any = selectedOptions[0].value;\r\n        switch (this.field.type) {\r\n            case 'number': v = Number(v); break;\r\n            case 'date': v = new Date(v); break;\r\n            case 'bool': \r\n                if (typeof v === 'string') {\r\n                    v = ((v as string).toLowerCase() === 'true');\r\n                }\r\n                break;\r\n        }\r\n        return v;\r\n    }\r\n    renderControl():JSX.Element {\r\n        let {list} = this.face;\r\n        let def = this.face.default;\r\n        let options: any[] = [];\r\n        if (def === undefined)\r\n            options.push(<option key={-1} value={undefined}>请选择</option>);\r\n        options.push(...list.map((item, index) => {\r\n            let t, v;\r\n            if (typeof item !== 'object') t = v = item;\r\n            else {\r\n                t = item.text;\r\n                v = item.value;\r\n            }\r\n            return <option key={index} value={v}>{t}</option>;\r\n        }));\r\n        return <div className=\"form-control-static\">\r\n            <select name={this.field.name} className=\"form-control\" ref={this.ref}>\r\n                {options}\r\n            </select>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport {CharsControl} from './charsControl';\r\nimport {StringField} from '../field';\r\nimport {TextAreaFace} from '../face';\r\n\r\nexport class TextAreaControl extends CharsControl {\r\n    protected field: StringField;\r\n    protected face: TextAreaFace;\r\n    private el: HTMLTextAreaElement;\r\n    protected setProps() {\r\n        let p = super.setProps();\r\n        let {maxLength} = this.field;\r\n        let {rows} = this.face;\r\n        _.assign(p, {\r\n            maxLength: maxLength,\r\n            rows: rows,\r\n        });\r\n        return p;\r\n    };\r\n    protected renderInput():JSX.Element {\r\n        return <textarea ref={t=>{this.el = t;if (t!==undefined) t.value=''}} className={this.className()} {...this.props} />;\r\n    }\r\n}\r\n","\r\nexport * from './boxId';\r\nexport { Tuid, TuidImport, TuidInner, TuidDiv, TuidBox } from './tuid';\r\nexport { TuidsCache } from './tuidsCache';\r\nexport { tv, ReactBoxId } from './reactBoxId';","import * as React from 'react';\r\nimport {FormView, FormRow, FieldRow, GroupRow, LabelFormRow} from '../formView';\r\nimport {Control, ControlBase, createControl, CreateControl} from '../control';\r\n\r\nexport type CreateRow = (form:FormView, row: FormRow)=>RowContainer;\r\n\r\nexport abstract class RowContainer {\r\n    protected form:FormView;\r\n    protected row: FormRow;\r\n    protected control: ControlBase;\r\n    constructor(form:FormView, row: FormRow) {\r\n        this.form = form;\r\n        this.row = row;\r\n        if ((row as JSX.Element).type === undefined) {\r\n            let cc:CreateControl = (row as LabelFormRow).createControl;\r\n            if (cc === undefined) cc = form.createControl;\r\n            if (cc === undefined) cc = createControl;\r\n            this.control = cc(form, row);\r\n        }\r\n    }\r\n    abstract render(key:string):JSX.Element;\r\n    \r\n    isOk():boolean {\r\n        if (this.control === undefined) return true;\r\n        return this.control.isOk();\r\n    }\r\n\r\n    contains(fieldName:string):boolean {\r\n        let field = (this.row as FieldRow).field;\r\n        if (field !== undefined) return fieldName === field.name;\r\n        let group = (this.row as GroupRow).group;\r\n        if (group !== undefined) return group.find(g => g.field.name === fieldName)!==undefined;\r\n        return false;\r\n    }\r\n    get hasError():boolean {return this.control.hasError;}\r\n    get filled():boolean {return this.control.filled;}\r\n    clear() {\r\n        if (this.control !== undefined) this.control.clear();\r\n    }\r\n    clearErrors() {\r\n        if (this.control !== undefined) this.control.clearErrors();\r\n    }\r\n    readValues(values:any):any {\r\n        if (this.control !== undefined) this.control.readValues(values);\r\n    }\r\n    setError(fieldName:string, error:string) {\r\n        if (this.control !== undefined) this.control.setError(fieldName, error);\r\n    }\r\n    setInitValues(values:any) {\r\n        if (this.control !== undefined) this.control.setInitValues(values);\r\n    }\r\n}\r\n\r\nclass ElementRowContainer extends RowContainer {\r\n    render(key:string):JSX.Element {\r\n        return <div key={key} className=\"form-group\">{this.row as JSX.Element}</div>;\r\n    }\r\n    get hasError():boolean {return false;}\r\n    get filled():boolean {return false;}\r\n}\r\n\r\nclass BootStrapRowContainer extends RowContainer {\r\n    render(key:string):JSX.Element {\r\n        return <div key={key} className='form-group row'>\r\n            <label className='col-sm-2 col-form-label'>\r\n                {(this.row as LabelFormRow).label}\r\n            </label>\r\n            {this.control.render()}\r\n        </div>;\r\n\r\n        //has-success is-valid\r\n    }\r\n}\r\n\r\nexport function bootstrapCreateRow(form:FormView, row: FormRow):RowContainer {\r\n    return new BootStrapRowContainer(form, row);\r\n}\r\n\r\nexport function elementCreateRow(form:FormView, row: FormRow):RowContainer {\r\n    return new ElementRowContainer(form, row);\r\n}\r\n","import * as React from 'react';\r\nimport { BoxId } from './boxId';\r\nimport { Tuid } from './tuid';\r\nimport { observer } from 'mobx-react';\r\n\r\nconst TuidContent = (tuidName:string, values:any, x?:any) => {\r\n    return <>{tuidName}: {stringify(values)}</>;\r\n};\r\n\r\nfunction stringify(values: any): string {\r\n    let s = '{';\r\n    if (values === undefined) return 'undefined';\r\n    for (let i in values) {\r\n        let v = values[i];\r\n        s += i + ': ';\r\n        if (v === undefined) {\r\n            s += 'undefined';\r\n        }\r\n        else if (v === null) {\r\n            s += 'null';\r\n        }\r\n        else {\r\n            switch (typeof v) {\r\n                default:\r\n                    s += v;\r\n                    break;\r\n                case 'function':\r\n                    s += 'function';\r\n                    break;\r\n                case 'object':\r\n                    s += '{obj}';\r\n                    break;\r\n            }\r\n        }\r\n        s += ', ';\r\n    }\r\n    return s + '}';\r\n}\r\n\r\nexport class ReactBoxId implements BoxId {\r\n    readonly id: number;\r\n    protected tuid: Tuid;\r\n    protected ui: (values:any) => JSX.Element;\r\n    readonly isUndefined:boolean;\r\n    constructor(id: number, tuid: Tuid, ui: (values:any) => JSX.Element) {\r\n        this.id = id;\r\n        this.tuid = tuid;\r\n        this.ui = ui;\r\n        this.isUndefined = (this.tuid === undefined);\r\n    }\r\n\r\n    get obj():any {\r\n        return this.tuid.valueFromId(this.id);\r\n    }\r\n\r\n    render(ui:TvTemplet, x:any):JSX.Element {\r\n        if (this.id === undefined || this.id === null) return;\r\n        let boxName = this.boxName; // this.tuid.name;\r\n        let val = this.obj; // this.tuid.valueFromId(this.id);\r\n        if (this.isUndefined === true) {\r\n            if (ui !== undefined) return ui(val, x);\r\n            return TuidContent(boxName, val, x);\r\n        }\r\n        switch (typeof val) {\r\n            case 'undefined':\r\n                return <span className=\"text-black-50\">{boxName} undefined</span>;\r\n            case 'number':\r\n                return <span className=\"text-light\">{boxName} {this.id}</span>;\r\n        }\r\n        if (ui === undefined) {\r\n            ui = this.ui;\r\n        }\r\n        if (ui !== undefined) {\r\n            if (typeof ui !== 'function') {\r\n                ui = (ui as any).content;\r\n            }\r\n            if (ui !== undefined) {\r\n                let ret = ui(val/*, this.tuidUR.res*/);\r\n                if (ret !== undefined) return ret;\r\n                return <del className=\"text-danger\">{boxName} {this.id}</del>;\r\n            }\r\n        }\r\n\r\n        return TuidContent(boxName, val);\r\n    }\r\n\r\n    get boxName():string {return this.tuid.name}\r\n    // ui(): TvTemplet {return this.tuid.ui}\r\n    // res(): any {return this.tuid.res}\r\n\r\n    async assure(): Promise<void> {\r\n        await this.tuid.assureBox(this.id);\r\n    }\r\n}\r\n\r\nfunction boxIdContent(bi: number|BoxId, ui:TvTemplet, x:any) {\r\n    let logContent:any;\r\n    let boxId:ReactBoxId = bi as ReactBoxId;\r\n    switch(typeof bi) {\r\n        case 'undefined': logContent = <>boxId undefined</>; break;\r\n        case 'number': logContent = <>id:{bi}</>; break;\r\n        default:\r\n            if (typeof boxId.render !== 'function') {\r\n                if (ui === undefined) {\r\n                    logContent = TuidContent(boxId.boxName, bi, x);\r\n                }\r\n                else {\r\n                    return ui(bi, x);\r\n                }\r\n            }\r\n            break;\r\n    }\r\n    if (logContent !== undefined) {\r\n        return <del className=\"text-danger\">{logContent}</del>;\r\n    }\r\n    return boxId.render(ui, x);\r\n}\r\n\r\nexport type TvTemplet = (values?:any, x?:any) => JSX.Element;\r\n\r\ninterface Props {\r\n    tuidValue: number|BoxId, \r\n    ui?: TvTemplet,\r\n    x?: any,\r\n    nullUI?: ()=>JSX.Element\r\n}\r\n\r\nconst Tv = observer(({tuidValue, ui, x, nullUI}:Props) => {\r\n    if (tuidValue === undefined) {\r\n        if (nullUI === undefined) return <>[undefined]</>;\r\n        return nullUI();\r\n    }\r\n    if (tuidValue === null) {\r\n        if (nullUI === undefined) return <>[null]</>;\r\n        return nullUI();\r\n    }\r\n    let ttv = typeof tuidValue;\r\n    switch (ttv) {\r\n        default:\r\n            if (ui === undefined)\r\n                return <>{ttv}-{tuidValue}</>;\r\n            else {\r\n                let ret = ui(tuidValue, x);\r\n                if (ret !== undefined) return ret;\r\n                return <>{tuidValue}</>;\r\n            }\r\n        case 'object':\r\n            let divObj = boxIdContent(tuidValue, ui, x);\r\n            if (divObj !== undefined) return divObj;\r\n            return nullUI === undefined? <>id null</>: nullUI();\r\n        case 'number':\r\n            return <>id...{tuidValue}</>;\r\n    }\r\n});\r\n\r\nexport const tv = (tuidValue:number|BoxId, ui?:TvTemplet, x?:any, nullUI?:()=>JSX.Element):JSX.Element => {\r\n    return <Tv tuidValue={tuidValue} ui={ui} x={x} nullUI={nullUI} />;\r\n};\r\n","import {HttpChannel} from './httpChannel';\r\nimport { Caller } from './caller';\r\n\r\nexport async function refetchApi(channel:HttpChannel, url:string, options:any, \r\n    resolve:(values:any)=>any, reject:(reason:any)=>void)\r\n{\r\n    await channel.fetch(url, options, resolve, reject);\r\n}\r\n\r\nexport abstract class ApiBase {\r\n    protected token: string;\r\n    protected path: string;\r\n    protected showWaiting: boolean;\r\n\r\n    constructor(path: string, showWaiting: boolean) {\r\n        this.path = path || '';\r\n        this.showWaiting = showWaiting;\r\n    }\r\n\r\n    protected abstract async getHttpChannel(): Promise<HttpChannel>;\r\n\r\n    async xcall(caller:Caller<any>):Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.xcall(this.path, caller);\r\n    }\r\n\r\n    public async call(url:string, method:string, body:any):Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.callFetch(url, method, body);\r\n    }\r\n\r\n    public async get(path:string, params:any=undefined): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.get(this.path + path, params);\r\n    }\r\n\r\n    public async post(path:string, params:any): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.post(this.path + path, params);\r\n    }\r\n\r\n    public async put(path:string, params:any): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.put(this.path + path, params);\r\n    }\r\n\r\n    public async delete(path:string, params:any): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.delete(this.path + path, params);\r\n    }\r\n}\r\n","import * as React from 'react';\r\n//import _ from 'lodash';\r\nimport {nav} from './nav';\r\n\r\nexport interface PageHeaderProps {\r\n    back?: 'back' | 'close' | 'none';\r\n    center: string | JSX.Element;\r\n    right?: JSX.Element;\r\n    logout?: boolean | (()=>Promise<void>);\r\n    className?: string;\r\n}\r\nexport interface PageHeaderState {\r\n    hasBack: boolean;\r\n}\r\n\r\nexport class PageHeader extends React.Component<PageHeaderProps, PageHeaderState> {\r\n    constructor(props: PageHeaderProps) {\r\n        super(props);\r\n        //this.navChange = this.navChange.bind(this);\r\n        this.state = {\r\n            //hasBack: false,\r\n            hasBack: nav.level > 1\r\n        };\r\n    }\r\n    /*\r\n    navChange() {\r\n        this.setState({\r\n            hasBack: nav.level > 1\r\n        })\r\n    }\r\n    */\r\n    /*\r\n    componentWillMount() {\r\n        this.navChange();\r\n        //this.navChangeHandler = nav.events.add('change', this.navChange);\r\n    }\r\n    */\r\n    componentWillUnmount() {\r\n        //nav.events.remove('change', this.navChangeHandler);\r\n    }\r\n    async back() {\r\n        await nav.back(); // 这个才会显示confirm box，在dataForm里面，如果输入了数据的话\r\n    }\r\n    openWindow() {\r\n        window.open(document.location.href);\r\n    }\r\n    private logoutClick = () => {\r\n        nav.showLogout(this.logout);\r\n    }\r\n    private logout = async () => {\r\n        let {logout} = this.props;\r\n        if (typeof logout === 'function') {\r\n            await logout(); \r\n        }\r\n        await nav.logout(undefined);\r\n    }\r\n    render() {\r\n        let b = this.state.hasBack || window.self !== window.top;\r\n        let {right, center, logout, className} = this.props;\r\n        let back:any, pop:any, debugLogout:any;\r\n        if (logout !== undefined && window.self === window.top) {\r\n            if ((typeof logout === 'boolean' && logout === true)\r\n                || typeof logout === 'function')\r\n            {\r\n                let {user} = nav;\r\n                if (user !== undefined) {\r\n                    let {nick, name} = user;\r\n                    debugLogout = <div className=\"d-flex align-items-center\">\r\n                        <small className=\"text-light\">{nick || name}</small>\r\n                        {\r\n                            // eslint-disable-next-line\r\n                            <div className=\"ml-2 py-2 px-3 cursor-pointer\"\r\n                                role=\"button\"\r\n                                onClick={this.logoutClick}>\r\n                                <i className=\"fa fa-sign-out fa-lg\" />\r\n                            </div>\r\n                        }\r\n                    </div>;\r\n                }\r\n            }\r\n        }\r\n        if (b) {\r\n            switch (this.props.back) {\r\n                case 'none':\r\n                    back = undefined;\r\n                    break;\r\n                default:\r\n                case 'back':\r\n                    back = <nav onClick={this.back}><i className=\"fa fa-angle-left\" /></nav>;\r\n                    break;\r\n                case 'close':\r\n                    back = <nav onClick={this.back}><i className=\"fa fa-close\" /></nav>;\r\n                    break;\r\n            }\r\n        }\r\n        if (window.self !== window.top) {\r\n            console.log(document.location.href);\r\n            pop = <header onClick={this.openWindow} />;\r\n        }\r\n        if (back === undefined && typeof center === 'string') {\r\n            center = <div className=\"px-3\">{center}</div>;\r\n        }\r\n        let rightView = (right || debugLogout) && <aside>{right} {debugLogout}</aside>;\r\n        return <header className={className}>\r\n            {pop}\r\n            {back}\r\n            <div>{center}</div>\r\n            {rightView}\r\n        </header>;\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { jsonStringify } from '../tools';\r\n\r\nexport const DefaultRow = (values:any) => <div className=\"px-3 py-2\">{jsonStringify(values)}</div>;\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Page, List, FA } from '../../components';\r\nimport { Query } from '../../uq';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { QueryUI, CQuery } from './cQuery';\r\nimport { DefaultRow } from './defaultRow';\r\n\r\nexport class VQueryMain extends VEntity<Query, QueryUI, CQuery> {\r\n    protected vForm: VForm;\r\n    private row: React.StatelessComponent;\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        let {row, queryRow} = this.ui;\r\n        this.row = queryRow || row || DefaultRow;\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSubmit = async () => {\r\n        let params = this.vForm.getValues();\r\n        if (this.entity.isPaged === true) {\r\n            await this.entity.resetPage(30, params);\r\n            await this.entity.loadPage();\r\n            this.replacePage(this.pageResult);\r\n        }\r\n        else {\r\n            let data = await this.entity.query(params);\r\n            this.replacePage(this.queryResult, data);\r\n        }\r\n    }\r\n\r\n    again = () => {\r\n        this.vForm.reset();\r\n        this.replacePage(this.view);\r\n    }\r\n\r\n    renderExtra() {\r\n        return;\r\n    }\r\n\r\n    renderRow = (item:any, index:number) => <this.row {...item} />;\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render('mx-3 my-2')}\r\n        {this.renderExtra()}\r\n    </Page>;\r\n\r\n    protected pageResult = () => {\r\n        let {list} = this.entity;\r\n        let rightClose = <button\r\n            className=\"btn btn-outline-success\"\r\n            onClick={this.again}>\r\n            <FA name=\"search\" /> 再查询\r\n        </button>;\r\n        return <Page header={this.label} right={rightClose}>\r\n            <List items={list} item={{render: this.renderRow}} />\r\n        </Page>;\r\n    }\r\n\r\n    protected queryResult = observer((result:any) => {\r\n        let rightClose = <button\r\n            className=\"btn btn-outline-success\"\r\n            onClick={this.again}>\r\n            <FA name=\"search\" /> 再查询\r\n        </button>;\r\n        return <Page header={this.label} right={rightClose}>\r\n            <pre>{JSON.stringify(result, undefined, '\\t')}</pre>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport { Page, SearchBox, List } from '../../components';\r\nimport { PageItems } from '../../tool';\r\nimport { Query } from '../../uq';\r\nimport { VEntity } from '../CVEntity';\r\nimport { QueryUI, CQuerySelect } from './cQuery';\r\nimport { DefaultRow } from './defaultRow';\r\n\r\nexport class VQuerySelect extends VEntity<Query, QueryUI, CQuerySelect> {\r\n    private row: React.StatelessComponent;\r\n\r\n    PageItems:QueryPageItems;\r\n    ownerId: number;\r\n\r\n    async open(param?:any) {\r\n        let {row, selectRow} = this.ui;\r\n        this.row = selectRow || row || DefaultRow;\r\n        //this.entity = this.controller.entity;\r\n        this.PageItems = new QueryPageItems(this.entity);\r\n        await this.onSearch(param);\r\n        this.openPage(this.view);\r\n    }\r\n    onSearch = async (key:string) => {\r\n        await this.PageItems.first(key);\r\n    }\r\n\r\n    renderRow = (item:any, index:number) => <this.row {...item} />;\r\n\r\n    private callOnSelected(item:any) {\r\n       this.closePage();\r\n       this.returnCall(item);\r\n    }\r\n    clickRow = (item:any) => {\r\n        this.callOnSelected(item);\r\n    }\r\n\r\n    view = () => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\r\n        return <Page header={header}>\r\n            <List\r\n                items={this.PageItems.items}\r\n                item={{render: this.renderRow, onClick: this.clickRow}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    };\r\n}\r\n\r\nexport class QueryPageItems extends PageItems<any> {\r\n    private query: Query;\r\n    constructor(query: Query) {\r\n        super();\r\n        this.query = query;\r\n    }\r\n    protected async load():Promise<any[]> {\r\n        await  this.query.loadSchema();\r\n        let ret:any[];\r\n        if (this.query.isPaged === true)\r\n            ret = await this.query.page(this.param, this.pageStart, this.pageSize);\r\n        else {\r\n            let data = await this.query.query(this.param);\r\n            //let data = await this.query.unpackReturns(res);\r\n            ret = data[this.query.returns[0].name];\r\n        }\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:any) {\r\n        if (item === undefined) this.pageStart = 0;\r\n    }\r\n}\r\n","import { StatelessComponent } from 'react';\r\nimport { CEntity, EntityUI } from '../CVEntity';\r\nimport { Query } from '../../uq';\r\nimport { VQueryMain } from './vQueryMain';\r\nimport { VQuerySelect } from './vQuerySelect';\r\n\r\nexport interface QueryUI extends EntityUI {\r\n    CQuery?: typeof CQuery;\r\n    CQuerySelect?: typeof CQuerySelect;\r\n    main?: typeof VQueryMain;\r\n    row?: StatelessComponent;\r\n    queryRow?: StatelessComponent;\r\n    selectRow?: StatelessComponent;\r\n}\r\n\r\nexport abstract class CQueryBase extends CEntity<Query, QueryUI> {\r\n}\r\n\r\nexport class CQuery extends CQueryBase {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VQueryMain);\r\n    }\r\n\r\n    protected get VQueryMain():typeof VQueryMain {return (this.ui && this.ui.main) || VQueryMain}\r\n}\r\n\r\nexport class CQuerySelect extends CQueryBase {\r\n    protected async internalStart(param?:any) {\r\n        await this.openVPage(this.VQuerySelect, param);\r\n    }\r\n\r\n    protected get VQuerySelect():typeof VQuerySelect {return VQuerySelect}\r\n}\r\n","export * from './cQuery';\r\nexport * from './vQueryMain';\r\nexport * from './vQuerySelect';","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { UiTextItem } from '../schema';\r\nimport { ResUploader } from '../resUploader';\r\nimport { Image } from '../image';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { ItemEdit } from './itemEdit';\r\n\r\nexport class ImageItemEdit extends ItemEdit {\r\n    protected uiItem: UiTextItem;\r\n    private resUploader: ResUploader;\r\n    @observable private resId: string;\r\n    @observable private overSize: boolean = false;\r\n\r\n    protected async internalStart():Promise<any> {\r\n        this.resId = this.value;        \r\n        return new Promise<any>((resolve, reject) => {\r\n            nav.push(React.createElement(this.page, {resolve:resolve, reject:reject}), ()=>reject());\r\n        });\r\n    }\r\n\r\n    private upload = async () => {\r\n        if (!this.resUploader) return;\r\n        let ret = await this.resUploader.upload();\r\n        if (ret === null) {\r\n            this.overSize = true;\r\n            setTimeout(() => this.overSize = false, 3000);\r\n            return;\r\n        }\r\n        this.resId = ret;\r\n        this.isChanged = (this.resId !== this.value);\r\n    }\r\n\r\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\r\n        let {resolve} = props;\r\n        let right = <button\r\n            className=\"btn btn-sm btn-success\"\r\n            disabled={!this.isChanged}\r\n            onClick={()=>resolve(this.resId)}>保存</button>;\r\n        let overSize:any;\r\n        if (this.overSize === true) {\r\n            overSize = <div className=\"text-danger\">\r\n                <i className=\"fa fa-times-circle\" /> 图片文件大小超过2M，无法上传\r\n            </div>;\r\n        }\r\n        return <Page header={'更改' + this.label} right={right}>\r\n            <div className=\"my-3 px-3 py-3 bg-white\">\r\n                <div>\r\n                    <div>上传图片：</div>\r\n                    <div className=\"my-3\">\r\n                        <ResUploader ref={v=>this.resUploader=v} multiple={false} maxSize={2048} />\r\n                    </div>\r\n                    <div>\r\n                        <button className=\"btn btn-primary\" onClick={this.upload}>上传</button>\r\n                    </div>\r\n                </div>\r\n                {overSize}\r\n                <div className=\"small muted my-4\">支持JPG、GIF、PNG格式图片，不超过2M。</div>\r\n                <div className=\"d-flex\">\r\n                    <div className=\"w-12c h-12c mr-4\"\r\n                        style={{border: '1px dotted gray', padding: '8px'}}>\r\n                        <Image className=\"w-100 h-100\" src={this.resId} />\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"small\">图片预览</div>\r\n                        <Image className=\"w-4c h-4c mt-3\" src={this.resId} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    })\r\n}\r\n","import {observable, IObservableArray, computed} from 'mobx';\r\nimport {uid} from './uid';\r\n\r\nexport abstract class PageItems<T> {\r\n    constructor(itemObservable:boolean = false) {\r\n        this._items = observable.array<T>([], {deep:itemObservable});\r\n    }\r\n    private isFirst: boolean = true;\r\n    @observable loading: boolean = false;\r\n    @observable private beforeLoad: boolean = true;\r\n    @observable protected loaded: boolean = false;\r\n    protected _items:IObservableArray<T>;\r\n    @observable allLoaded: boolean = false;\r\n    @computed get items():IObservableArray<T> {\r\n        if (this.beforeLoad === true) return null;\r\n        if (this.loaded === false) return undefined;\r\n        return this._items;\r\n    }\r\n\r\n    @observable topDiv:string;\r\n    @observable bottomDiv:string;\r\n    scrollToTop() {\r\n        this.topDiv = '$$'+uid();\r\n    }\r\n    scrollToBottom() {\r\n        this.bottomDiv = '$$'+uid();\r\n    }\r\n\r\n    protected param: any;\r\n    protected firstSize = 100;\r\n    protected pageStart:any = undefined;\r\n    protected pageSize = 30;\r\n    protected appendPosition:'head'|'tail' = 'tail';\r\n\r\n    protected abstract async load(param:any, pageStart:any, pageSize:number):Promise<T[]>;\r\n    protected abstract setPageStart(item:T):void;\r\n\r\n    reset() {\r\n        this.isFirst = true;\r\n        this.beforeLoad = true;\r\n        this.loaded = false;\r\n        this.param = undefined;\r\n        this.allLoaded = false;\r\n        this._items.clear();\r\n        //this.setPageStart(undefined);\r\n    }\r\n\r\n    append(item:T) {\r\n        if (this.appendPosition === 'tail')\r\n            this._items.unshift(item);\r\n        else\r\n            this._items.push(item);\r\n    }\r\n\r\n    async first(param:any):Promise<void> {\r\n        this.reset();\r\n        this.beforeLoad = false;\r\n        this.param = param;\r\n        await this.more();        \r\n    }\r\n\r\n    protected async onLoad(): Promise<void> {}\r\n\r\n    async more():Promise<void> {\r\n        if (this.allLoaded === true) return;\r\n        if (this.loading === true) return;\r\n        this.loading = true;\r\n        await this.onLoad();\r\n        if (this.pageStart === undefined) this.setPageStart(undefined);\r\n        let pageSize = this.pageSize + 1;\r\n        if (this.isFirst === true) {\r\n            if (this.firstSize > this.pageSize) pageSize = this.firstSize+1;\r\n        }\r\n        let ret = await this.load(\r\n                this.param, \r\n                this.pageStart,\r\n                pageSize);\r\n        this.loading = false;\r\n        this.loaded = true;\r\n        let len = ret.length;\r\n        if ((this.isFirst===true && len>this.firstSize) ||\r\n            (this.isFirst===false && len>this.pageSize))\r\n        {\r\n            this.allLoaded = false;\r\n            --len;\r\n            ret.splice(len, 1);\r\n        }\r\n        else {\r\n            this.allLoaded = true;\r\n        }\r\n        if (len === 0) {\r\n            this._items.clear();\r\n            return;\r\n        }\r\n        this.setPageStart(ret[len-1]);\r\n        if (this.appendPosition === 'tail')\r\n            this._items.push(...ret);\r\n        else\r\n            this._items.unshift(...ret.reverse());\r\n        this.isFirst = false;\r\n    }\r\n}\r\n","import * as React from 'react';\r\n\r\nexport function Loading() {\r\n    return <div className=\"d-flex h-100 align-items-center justify-content-center\">\r\n        <i className=\"fa fa-spinner fa-spin fa-2x fa-fw text-info\" />\r\n    </div>;\r\n}\r\n","import * as React from 'react';\r\nimport { nav } from './nav';\r\n\r\nexport interface ResUploaderProps {\r\n    className?: string;\r\n    multiple?: boolean;\r\n    maxSize?: number;\r\n    onFilesChange?: (evt: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nexport class ResUploader extends React.Component<ResUploaderProps> {\r\n    private fileInput: HTMLInputElement;\r\n\r\n    upload = async ():Promise<string> => {\r\n        let {maxSize} = this.props;\r\n        if (maxSize === undefined || maxSize <= 0) \r\n            maxSize = 100000000000;\r\n        else\r\n            maxSize = maxSize * 1024;\r\n        let resUrl = nav.resUrl + 'upload';\r\n        var files:FileList = this.fileInput.files;\r\n        var data = new FormData();\r\n        let len = files.length;\r\n        for (let i=0; i<len; i++) {\r\n            let file = files[i];\r\n            if (file.size > maxSize) return null;\r\n            data.append('files[]', file, file.name);\r\n        }\r\n  \r\n        try {\r\n            let abortController = new AbortController();\r\n            let res = await fetch(resUrl, {\r\n                method: \"POST\",\r\n                body: data,\r\n                signal: abortController.signal,\r\n            });\r\n            let json = await res.json();\r\n            return ':' + json.res.id;\r\n        }\r\n        catch (err) {\r\n            console.error('%s %s', resUrl, err);\r\n        }\r\n    }\r\n    render() {\r\n        let {className, multiple, onFilesChange} = this.props;\r\n        return <input \r\n            className={className}\r\n            ref={t=>this.fileInput=t} \r\n            onChange={onFilesChange}\r\n            type='file' name='file' multiple={multiple} />\r\n    }\r\n}\r\n","import _ from 'lodash';\r\nimport { UqApi, UqData, UnitxApi, appInFrame } from '../net';\r\nimport { Tuid, TuidDiv, TuidImport, TuidInner, TuidBox, TuidsCache } from './tuid';\r\nimport { Action } from './action';\r\nimport { Sheet } from './sheet';\r\nimport { Query } from './query';\r\nimport { Book } from './book';\r\nimport { History } from './history';\r\nimport { Map } from './map';\r\nimport { Pending } from './pending';\r\nimport { CreateBoxId, BoxId } from './tuid';\r\n//import { UqCache } from './caches';\r\nimport { LocalMap, LocalCache } from '../tool';\r\nimport { UQsMan } from './uqsMan';\r\nimport { ReactBoxId } from './tuid/reactBoxId';\r\n\r\nexport type FieldType = 'id' | 'tinyint' | 'smallint' | 'int' | 'bigint' | 'dec' | 'char' | 'text'\r\n    | 'datetime' | 'date' | 'time';\r\n\r\nexport function fieldDefaultValue(type:FieldType) {\r\n    switch (type) {\r\n        case 'tinyint':\r\n        case 'smallint':\r\n        case 'int':\r\n        case 'bigint':\r\n        case 'dec':\r\n            return 0;\r\n        case 'char':\r\n        case 'text':\r\n            return '';\r\n        case 'datetime':\r\n        case 'date':\r\n            return '2000-1-1';\r\n        case 'time':\r\n            return '0:00';\r\n    }\r\n}\r\n\r\nexport interface Field {\r\n    name: string;\r\n    type: FieldType;\r\n    tuid?: string;\r\n    arr?: string;\r\n    null?: boolean;\r\n    size?: number;\r\n    owner?: string;\r\n    _tuid: TuidBox;\r\n}\r\nexport interface ArrFields {\r\n    name: string;\r\n    fields: Field[];\r\n    id?: string;\r\n    order?: string;\r\n}\r\nexport interface FieldMap {\r\n    [name:string]: Field;\r\n}\r\nexport interface SchemaFrom {\r\n    owner:string;\r\n    uq:string;\r\n}\r\nexport interface TuidModify {\r\n    max: number;\r\n    seconds: number;\r\n}\r\n\r\nexport class UqMan {\r\n    private readonly actions: {[name:string]: Action} = {};\r\n    private readonly sheets: {[name:string]: Sheet} = {};\r\n    private readonly queries: {[name:string]: Query} = {};\r\n    private readonly books: {[name:string]: Book} = {};\r\n    private readonly maps: {[name:string]: Map} = {};\r\n    private readonly histories: {[name:string]: History} = {};\r\n    private readonly pendings: {[name:string]: Pending} = {};\r\n    private readonly tuidsCache: TuidsCache;\r\n    private readonly localAccess: LocalCache;\r\n    private readonly tvs:{[entity:string]:(values:any)=>JSX.Element};\r\n    readonly localMap: LocalMap;\r\n    readonly localModifyMax: LocalCache;\r\n    readonly tuids: {[name:string]: Tuid} = {};\r\n    readonly createBoxId: CreateBoxId;\r\n    readonly newVersion: boolean;\r\n    readonly uqOwner: string;\r\n    readonly uqName: string;\r\n    readonly name: string;\r\n    readonly uqApi: UqApi;\r\n    readonly id: number;\r\n\r\n    uqVersion: number;\r\n\r\n    constructor(uqs:UQsMan, uqData: UqData, createBoxId:CreateBoxId, tvs:{[entity:string]:(values:any)=>JSX.Element}) {\r\n        this.createBoxId = createBoxId;\r\n        if (createBoxId === undefined) {\r\n            this.createBoxId = this.createBoxIdFromTVs;\r\n            this.tvs = tvs || {};\r\n        }\r\n        let {id, uqOwner, uqName, access, newVersion: clearTuids} = uqData;\r\n        this.newVersion = clearTuids;\r\n        this.uqOwner = uqOwner;\r\n        this.uqName = uqName;\r\n        this.id = id;\r\n        this.name = uqOwner + '/' + uqName;\r\n        this.uqVersion = 0;\r\n        this.localMap = uqs.localMap.map(this.name);\r\n        this.localModifyMax = this.localMap.child('$modifyMax');\r\n        this.localAccess = this.localMap.child('$access');\r\n        //let hash = document.location.hash;\r\n        let baseUrl = 'tv/';\r\n\r\n        let acc: string[];\r\n        if (access === null || access === undefined || access === '*') {\r\n            acc = [];\r\n        }\r\n        else {\r\n            acc = access.split(';').map(v => v.trim()).filter(v => v.length > 0);\r\n        }\r\n        if (this.name === '$$$/$unitx') {\r\n            // 这里假定，点击home link之后，已经设置unit了\r\n            // 调用 UnitxApi会自动搜索绑定 unitx service\r\n            this.uqApi = new UnitxApi(appInFrame.unit);\r\n        }\r\n        else {\r\n            this.uqApi = new UqApi(baseUrl, uqOwner, uqName, acc, true);\r\n        }\r\n        this.tuidsCache = new TuidsCache(this);\r\n    }\r\n\r\n    get entities() {\r\n        return _.merge({}, \r\n            this.actions, this.sheets, this.queries, this.books,\r\n            this.maps, this.histories, this.pendings, this.tuids\r\n        );\r\n    }\r\n\r\n    private createBoxIdFromTVs:CreateBoxId = (tuid:Tuid, id:number):BoxId =>{\r\n        let {name} = tuid;\r\n        /*\r\n        let tuidUR = this.tuidURs[name];\r\n        if (tuidUR === undefined) {\r\n            let {ui, res} = this.getUI(tuid);\r\n            this.tuidURs[name] = tuidUR = new TuidWithUIRes(tuid, ui, res);\r\n        }\r\n        */\r\n        return new ReactBoxId(id, tuid, this.tvs[name]);\r\n    }\r\n\r\n    tuid(name:string):Tuid {return this.tuids[name.toLowerCase()]}\r\n    tuidDiv(name:string, div:string):TuidDiv {\r\n        let tuid = this.tuids[name.toLowerCase()]\r\n        return tuid && tuid.div(div.toLowerCase());\r\n    }\r\n    action(name:string):Action {return this.actions[name.toLowerCase()]}\r\n    sheet(name:string):Sheet {return this.sheets[name.toLowerCase()]}\r\n    query(name:string):Query {return this.queries[name.toLowerCase()]}\r\n    book(name:string):Book {return this.books[name.toLowerCase()]}\r\n    map(name:string):Map {return this.maps[name.toLowerCase()]}\r\n    history(name:string):History {return this.histories[name.toLowerCase()]}\r\n    pending(name:string):Pending {return this.pendings[name.toLowerCase()]}\r\n\r\n    sheetFromTypeId(typeId:number):Sheet {\r\n        for (let i in this.sheets) {\r\n            let sheet = this.sheets[i];\r\n            if (sheet.typeId === typeId) return sheet;\r\n        }\r\n    }\r\n\r\n    tuidArr: Tuid[] = [];\r\n    actionArr: Action[] = [];\r\n    sheetArr: Sheet[] = [];\r\n    queryArr: Query[] = [];\r\n    bookArr: Book[] = [];\r\n    mapArr: Map[] = [];\r\n    historyArr: History[] = [];\r\n    pendingArr: Pending[] = [];\r\n\r\n    async init() {\r\n        await this.uqApi.init();\r\n    }\r\n\r\n    async loadEntities(): Promise<string> {\r\n        try {\r\n            let accesses = this.localAccess.get();\r\n            if (!accesses) {\r\n                accesses = await this.uqApi.loadAccess();\r\n            }\r\n            if (!accesses) return;\r\n            this.buildEntities(accesses);\r\n            if (this.uqName === 'common') {\r\n                this.pullModify(12);\r\n            }\r\n        }\r\n        catch (err) {\r\n            return err;\r\n        }\r\n    }\r\n    /*\r\n    async loadEntities() {\r\n        let accesses = await this.uqApi.loadEntities();\r\n        this.buildEntities(accesses);\r\n    }\r\n    */\r\n    buildEntities(entities:any) {\r\n        if (entities === undefined) {\r\n            debugger;\r\n        }\r\n        this.localAccess.set(entities);\r\n        let {access, tuids, version} = entities;\r\n        this.uqVersion = version;\r\n        this.buildTuids(tuids);\r\n        this.buildAccess(access);\r\n    }\r\n\r\n    /*\r\n    async checkAccess() {\r\n        return await this.uqApi.checkAccess();\r\n    }\r\n    */\r\n\r\n    async loadEntitySchema(entityName: string): Promise<any> {\r\n        return await this.uqApi.schema(entityName);\r\n    }\r\n\r\n    getTuid(name:string): Tuid {\r\n        return this.tuids[name];\r\n    }\r\n\r\n    private buildTuids(tuids:any) {\r\n        for (let i in tuids) {\r\n            let schema = tuids[i];\r\n            let {typeId, from} = schema;\r\n            let tuid = this.newTuid(i, typeId, from);\r\n            tuid.sys = true;\r\n        }\r\n        for (let i in tuids) {\r\n            let schema = tuids[i];\r\n            let tuid = this.getTuid(i);\r\n            tuid.setSchema(schema);\r\n        }\r\n        for (let i in this.tuids) {\r\n            let tuid = this.tuids[i];\r\n            tuid.buildFieldsTuid();\r\n        }\r\n    }\r\n\r\n    private buildAccess(access:any) {\r\n        for (let a in access) {\r\n            let v = access[a];\r\n            switch (typeof v) {\r\n                case 'string': this.fromType(a, v); break;\r\n                case 'object': this.fromObj(a, v); break;\r\n            }\r\n        }\r\n    }\r\n\r\n    cacheTuids(defer:number) {\r\n        this.tuidsCache.cacheTuids(defer);\r\n    }\r\n\r\n    newAction(name:string, id:number):Action {\r\n        let action = this.actions[name];\r\n        if (action !== undefined) return action;\r\n        action = this.actions[name] = new Action(this, name, id)\r\n        this.actionArr.push(action);\r\n        return action;\r\n    }\r\n    private newTuid(name:string, id:number, from:SchemaFrom):Tuid {\r\n        let tuid = this.tuids[name];\r\n        if (tuid !== undefined) return tuid;\r\n        if (from !== undefined)\r\n            tuid = new TuidImport(this, name, id, from);\r\n        else\r\n            tuid = new TuidInner(this, name, id);\r\n        this.tuids[name] = tuid;\r\n        this.tuidArr.push(tuid);\r\n        return tuid;\r\n    }\r\n    newQuery(name:string, id:number):Query {\r\n        let query = this.queries[name];\r\n        if (query !== undefined) return query;\r\n        query = this.queries[name] = new Query(this, name, id)\r\n        this.queryArr.push(query);\r\n        return query;\r\n    }\r\n    private newBook(name:string, id:number):Book {\r\n        let book = this.books[name];\r\n        if (book !== undefined) return book;\r\n        book = this.books[name] = new Book(this, name, id);\r\n        this.bookArr.push(book);\r\n        return book;\r\n    }\r\n    private newMap(name:string, id:number):Map {\r\n        let map = this.maps[name];\r\n        if (map !== undefined) return map;\r\n        map = this.maps[name] = new Map(this, name, id)\r\n        this.mapArr.push(map);\r\n        return map;\r\n    }\r\n    private newHistory(name:string, id:number):History {\r\n        let history = this.histories[name];\r\n        if (history !== undefined) return;\r\n        history = this.histories[name] = new History(this, name, id)\r\n        this.historyArr.push(history);\r\n        return history;\r\n    }\r\n    private newPending(name:string, id:number):Pending {\r\n        let pending = this.pendings[name];\r\n        if (pending !== undefined) return;\r\n        pending = this.pendings[name] = new Pending(this, name, id)\r\n        this.pendingArr.push(pending);\r\n        return pending;\r\n    }\r\n    newSheet(name:string, id:number):Sheet {\r\n        let sheet = this.sheets[name];\r\n        if (sheet !== undefined) return sheet;\r\n        sheet = this.sheets[name] = new Sheet(this, name, id);\r\n        this.sheetArr.push(sheet);\r\n        return sheet;\r\n    }\r\n    private fromType(name:string, type:string) {\r\n        let parts = type.split('|');\r\n        type = parts[0];\r\n        let id = Number(parts[1]);\r\n        switch (type) {\r\n            //case 'uq': this.id = id; break;\r\n            case 'tuid':\r\n                // Tuid should not be created here!;\r\n                //let tuid = this.newTuid(name, id);\r\n                //tuid.sys = false;\r\n                break;\r\n            case 'action': this.newAction(name, id); break;\r\n            case 'query': this.newQuery(name, id); break;\r\n            case 'book': this.newBook(name, id); break;\r\n            case 'map': this.newMap(name, id); break;\r\n            case 'history': this.newHistory(name, id); break;\r\n            case 'sheet':this.newSheet(name, id); break;\r\n            case 'pending': this.newPending(name, id); break;\r\n        }\r\n    }\r\n    private fromObj(name:string, obj:any) {\r\n        switch (obj['$']) {\r\n            case 'sheet': this.buildSheet(name, obj); break;\r\n        }\r\n    }\r\n    private buildSheet(name:string, obj:any) {\r\n        let sheet = this.sheets[name];\r\n        if (sheet === undefined) sheet = this.newSheet(name, obj.id);\r\n        sheet.build(obj);\r\n    }\r\n    buildFieldTuid(fields:Field[], mainFields?:Field[]) {\r\n        if (fields === undefined) return;\r\n        for (let f of fields) {\r\n            let {tuid} = f;\r\n            if (tuid === undefined) continue;\r\n            let t = this.getTuid(tuid);\r\n            if (t === undefined) continue;\r\n            f._tuid = t.buildTuidBox();\r\n        }\r\n        for (let f of fields) {\r\n            let {owner} = f;\r\n            if (owner === undefined) continue;\r\n            let ownerField = fields.find(v => v.name === owner);\r\n            if (ownerField === undefined) {\r\n                if (mainFields !== undefined) {\r\n                    ownerField = mainFields.find(v => v.name === owner);\r\n                }\r\n                if (ownerField === undefined) {\r\n                    debugger;\r\n                    throw new Error(`owner field ${owner} is undefined`);\r\n                }\r\n            }\r\n            let {arr, tuid} = f;\r\n            let t = this.getTuid(ownerField._tuid.tuid.name);\r\n            if (t === undefined) continue;\r\n            let div = t.div(arr || tuid);\r\n            f._tuid = div && div.buildTuidDivBox(ownerField);\r\n            if (f._tuid === undefined) {\r\n                debugger;\r\n                throw new Error(`owner field ${owner} is not tuid`);\r\n            }\r\n        }\r\n    }\r\n    buildArrFieldsTuid(arrFields:ArrFields[], mainFields:Field[]) {\r\n        if (arrFields === undefined) return;\r\n        for (let af of arrFields) {\r\n            let {fields} = af;\r\n            if (fields === undefined) continue;\r\n            this.buildFieldTuid(fields, mainFields);\r\n        }\r\n    }\r\n\r\n    pullModify(modifyMax:number) {\r\n        this.tuidsCache.pullModify(modifyMax);\r\n    }\r\n}\r\n","import { Entity } from './entity';\r\nimport { PageItems } from '../tool/pageItems';\r\nimport { EntityCaller } from './caller';\r\n\r\nexport interface SheetState {\r\n    name: string;\r\n    actions: SheetAction[];\r\n}\r\n\r\nexport interface SheetAction {\r\n    name: string;\r\n}\r\n\r\nexport interface StateCount {\r\n    state: string;\r\n    count: number;\r\n}\r\n\r\nexport class Sheet extends Entity {\r\n    get typeName(): string { return 'sheet';}\r\n    states: SheetState[];\r\n\r\n    /*\r\n    setStates(states: SheetState[]) {\r\n        for (let state of states) {\r\n            this.setStateAccess(this.states.find(s=>s.name==state.name), state);\r\n        }\r\n    }*/\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        this.states = schema.states;\r\n    }\r\n    build(obj:any) {\r\n        this.states = [];\r\n        for (let op of obj.ops) {\r\n            this.states.push({name: op, actions:undefined});\r\n        }\r\n        /*\r\n        for (let p in obj) {\r\n            switch(p) {\r\n                case '#':\r\n                case '$': continue;\r\n                default: this.states.push(this.createSheetState(p, obj[p])); break;\r\n            }\r\n        }*/\r\n    }\r\n    private createSheetState(name:string, obj:object):SheetState {\r\n        let ret:SheetState = {name:name, actions:[]};\r\n        let actions = ret.actions;\r\n        for (let p in obj) {\r\n            let action:SheetAction = {name: p};\r\n            actions.push(action);\r\n        }\r\n        return ret;\r\n    }\r\n    /*\r\n    private setStateAccess(s:SheetState, s1:SheetState) {\r\n        if (s === undefined) return;\r\n        for (let action of s1.actions) {\r\n            let acn = action.name;\r\n            let ac = s.actions.find(a=>a.name === acn);\r\n            if (ac === undefined) continue;\r\n            s.actions.push(action);\r\n        }\r\n    }*/\r\n    async save(discription:string, data:any):Promise<any> {\r\n        /*\r\n        await this.loadSchema();\r\n        let {id} = this.uq;\r\n        let text = this.pack(data);\r\n\r\n        let ret = await this.uqApi.sheetSave(this.name, );\r\n        return ret;\r\n        */\r\n        let {id} = this.uq;\r\n        //let text = this.pack(data);\r\n        let params = {app: id, discription: discription, data:data};\r\n        return await new SaveCaller(this, params).request();\r\n        /*\r\n        let {id, state} = ret;\r\n        if (id > 0) this.changeStateCount(state, 1);\r\n        return ret;\r\n        */\r\n    }\r\n    async action(id:number, flow:number, state:string, action:string) {\r\n        /*\r\n        await this.loadSchema();\r\n        return await this.uqApi.sheetAction(this.name, {id:id, flow:flow, state:state, action:action});\r\n        */\r\n        return await new ActionCaller(this, {id:id, flow:flow, state:state, action:action}).request();\r\n    }\r\n    private unpack(data:any):any {\r\n        //if (this.schema === undefined) await this.loadSchema();\r\n        let ret = data[0];\r\n        let brief = ret[0];\r\n        let sheetData = this.unpackSheet(brief.data);\r\n        let flows = data[1];\r\n        return {\r\n            brief: brief,\r\n            data: sheetData,\r\n            flows: flows,\r\n        }\r\n    }\r\n    async getSheet(id:number):Promise<any> {\r\n        /*\r\n        await this.loadSchema();\r\n        let ret = await this.uqApi.getSheet(this.name, id);\r\n        */\r\n        let ret = await new GetSheetCaller(this, id).request();\r\n        if (ret[0].length === 0) return await this.getArchive(id);\r\n        return this.unpack(ret);\r\n    }\r\n    async getArchive(id:number):Promise<any> {\r\n        /*\r\n        await this.loadSchema();\r\n        let ret = await this.uqApi.sheetArchive(this.name, id)\r\n        return this.unpack(ret);\r\n        */\r\n        let ret = await new SheetArchiveCaller(this, id).request();\r\n        return this.unpack(ret);\r\n    }\r\n\r\n    async getArchives(pageStart:number, pageSize:number) {\r\n        /*\r\n        await this.loadSchema();\r\n        let ret = await this.uqApi.sheetArchives(this.name, {pageStart:pageStart, pageSize:pageSize});\r\n        return ret;\r\n        */\r\n        let params = {pageStart:pageStart, pageSize:pageSize};\r\n        return await new SheetArchivesCaller(this, params).request();\r\n    }\r\n\r\n    async getStateSheets(state:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        /*\r\n        await this.loadSchema();\r\n        let ret = await this.uqApi.stateSheets(this.name, {state:state, pageStart:pageStart, pageSize:pageSize});\r\n        return ret;\r\n        */\r\n        let params = {state:state, pageStart:pageStart, pageSize:pageSize};\r\n        return await new StateSheetsCaller(this, params).request();\r\n    }\r\n    createPageStateItems<T>(): PageStateItems<T> {return new PageStateItems<T>(this);}\r\n\r\n    async stateSheetCount():Promise<StateCount[]> {\r\n        /*\r\n        await this.loadSchema();\r\n        let ret:StateCount[] = await this.uqApi.stateSheetCount(this.name);\r\n        return this.states.map(s => {\r\n            let n = s.name, count = 0;\r\n            let r = ret.find(v => v.state === n);\r\n            if (r !== undefined) count = r.count;\r\n            return {state: n, count: count} \r\n        });\r\n        */\r\n        return await new StateSheetCountCaller(this, undefined).request();\r\n    }\r\n\r\n    async userSheets(state:string, user:number, pageStart:number, pageSize:number):Promise<any[]> {\r\n        let params = {state:state, user:user, pageStart:pageStart, pageSize:pageSize};\r\n        return await new UserSheetsCaller(this, params).request();\r\n    }\r\n\r\n    async mySheets(state:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        /*\r\n        await this.loadSchema();\r\n        let ret = await this.uqApi.mySheets(this.name, {state:state, pageStart:pageStart, pageSize:pageSize});\r\n        return ret;\r\n        */\r\n        let params = {state:state, pageStart:pageStart, pageSize:pageSize};\r\n        return await new MySheetsCaller(this, params).request();\r\n    }\r\n}\r\n\r\n\r\nabstract class SheetCaller<T> extends EntityCaller<T> {\r\n    protected get entity(): Sheet {return this._entity as Sheet;}\r\n    protected readonly suffix:string;\r\n    get path():string {return `sheet/${this.entity.name}/${this.suffix}`;}\r\n}\r\n\r\nclass SaveCaller extends SheetCaller<{app:number; discription:string; data:any}> {\r\n    get path():string {return `sheet/${this.entity.name}`;}\r\n    buildParams() {\r\n        let {app, discription, data} = this.params;\r\n        return {\r\n            app: app,\r\n            discription: discription,\r\n            data: this.entity.pack(data)\r\n        };\r\n    }\r\n}\r\n\r\nclass ActionCaller extends SheetCaller<{id:number, flow:number, state:string, action:string}> {\r\n    method = 'PUT';\r\n    get path():string {return `sheet/${this.entity.name}`;}\r\n    //buildParams() {return this.entity.buildParams(this.params);}\r\n}\r\n\r\nclass GetSheetCaller extends SheetCaller<number> {\r\n    //protected readonly params: number;  // id\r\n    method = 'GET';\r\n    //private id:number;\r\n    //protected readonly suffix = 'archive';\r\n    buildParams() {}\r\n    get path():string {return `sheet/${this.entity.name}/get/${this.params}`;}\r\n}\r\n\r\nclass SheetArchiveCaller extends SheetCaller<number> {\r\n    protected readonly params: number;  // id\r\n    method = 'GET';\r\n    //protected readonly suffix = 'archive';\r\n    buildParams() {}\r\n    get path():string {return `sheet/${this.entity.name}/archive/${this.params}`;}\r\n}\r\n\r\nclass SheetArchivesCaller extends SheetCaller<{pageStart:number, pageSize:number}> {\r\n    protected readonly suffix = 'archives';\r\n}\r\n\r\nclass StateSheetsCaller extends SheetCaller<{state:string, pageStart:number, pageSize:number}> {\r\n    protected readonly suffix = 'states';\r\n}\r\n\r\nclass StateSheetCountCaller extends SheetCaller<undefined> {\r\n    method = 'GET';\r\n    protected readonly suffix = 'statecount';\r\n    xresult(res:any):any {\r\n        let {states} = this.entity;\r\n        return states.map(s => {\r\n            let n = s.name, count = 0;\r\n            let r = (res as any[]).find(v => v.state === n);\r\n            if (r !== undefined) count = r.count;\r\n            return {state: n, count: count} \r\n        });\r\n    }\r\n}\r\n\r\nclass UserSheetsCaller extends SheetCaller<{state:string, user:number, pageStart:number, pageSize:number}> {\r\n    protected readonly suffix = 'user-sheets';\r\n    xresult(res:any):any {\r\n        return res;\r\n    }\r\n}\r\n\r\nclass MySheetsCaller extends SheetCaller<{state:string, pageStart:number, pageSize:number}> {\r\n    protected readonly suffix = 'my-sheets';\r\n    xresult(res:any):any {\r\n        return res;\r\n    }\r\n}\r\n\r\nexport class PageStateItems<T> extends PageItems<T> {\r\n    private sheet: Sheet;\r\n    constructor(sheet: Sheet) {\r\n        super(true);\r\n        this.sheet = sheet;\r\n        this.pageSize = 10;\r\n    }\r\n    protected async load(param:any, pageStart:any, pageSize:number):Promise<any[]> {\r\n        let ret = await this.sheet.getStateSheets(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:any) {\r\n        this.pageStart = item === undefined? 0 : item.id;\r\n    }\r\n}\r\n","import {Query} from './query';\r\nimport { QueryQueryCaller } from './caller';\r\n\r\nexport class Book extends Query {\r\n    get typeName(): string { return 'book';}\r\n    protected queryApiName = 'book';\r\n\r\n    protected queryCaller(params: any): QueryQueryCaller {\r\n        return new BookQueryCaller(this, params);\r\n    }\r\n}\r\n\r\nexport class BookQueryCaller extends QueryQueryCaller {\r\n    //protected get entity(): Query {return this._entity as Query};\r\n    get path():string {return `book/${this.entity.name}`;}\r\n    /*\r\n    xresult(res:any) {\r\n        let data = this.entity.unpackReturns(res);\r\n        return data;\r\n    }\r\n    buildParams() {return this.entity.buildParams(this.params);}\r\n    */\r\n}\r\n","import {Query} from './query';\r\n\r\nexport class History extends Query {\r\n    get typeName(): string { return 'history';}\r\n    protected queryApiName = 'history';\r\n}\r\n","import { Entity } from './entity';\r\nimport { Action, ActionSubmitCaller } from './action';\r\nimport { Query } from './query';\r\nimport { Field } from './uqMan';\r\nimport { EntityCaller, QueryPageCaller, QueryQueryCaller } from './caller';\r\n\r\ninterface MapActions {\r\n    add: Action;\r\n    del: Action;\r\n}\r\ninterface MapQueries {\r\n    all: Query;\r\n    page: Query;\r\n    query: Query;\r\n}\r\n\r\nexport class Map extends Entity {\r\n    get typeName(): string { return 'map';}\r\n    keys: Field[];\r\n    actions: MapActions = {} as any;\r\n    queries: MapQueries = {} as any;\r\n    schemaFrom: {owner:string; uq:string};\r\n\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        this.schemaFrom = this.schema.from;\r\n        let {actions, queries, keys} = schema;\r\n        this.uq.buildFieldTuid(this.keys = keys);\r\n        //let t = this.schemaStringify();\r\n        for (let i in actions) {\r\n            let actionSchema = actions[i];\r\n            let {name} = actionSchema;\r\n            let action = this.uq.newAction(name, undefined);\r\n            action.setSchema(actionSchema);\r\n            action.buildFieldsTuid();\r\n            (this.actions as any)[i] = action;\r\n        }\r\n        for (let i in queries) {\r\n            let querySchema = queries[i];\r\n            let {name} = querySchema;\r\n            let query = this.uq.newQuery(name, undefined);\r\n            query.setSchema(querySchema);\r\n            query.buildFieldsTuid();\r\n            (this.queries as any)[i] = query;\r\n        }\r\n    }\r\n\r\n    async add(param:any) {\r\n        /*\r\n        await this.loadSchema();\r\n        return await this.actions.add.submit(param);\r\n        */\r\n        let ret = await new AddCaller(this, param).request();\r\n        return ret;\r\n    }\r\n\r\n    async del(param:any) {\r\n        /*\r\n        await this.loadSchema();\r\n        return await this.actions.del.submit(param);\r\n        */\r\n        let ret = await new DelCaller(this, param).request();\r\n        return ret;\r\n    }\r\n\r\n    async all() {\r\n        /*\r\n        await this.loadSchema();\r\n        return await this.queries.all.query({});\r\n        */\r\n        let ret = await new AllCaller(this, undefined).request();\r\n        return ret;\r\n    }\r\n\r\n    async page(param:any, pageStart:any, pageSize: number) {\r\n        /*\r\n        await this.loadSchema();\r\n        return await this.queries.page.page(param, pageStart, pageSize);\r\n        */\r\n        let ret = await new PageCaller(this, {pageStart:pageStart, pageSize:pageSize, param:param}).request();\r\n        return ret;\r\n    }\r\n\r\n    async query(param:any) {\r\n        /*\r\n        await this.loadSchema();\r\n        return await this.queries.query.query(param);\r\n        */\r\n       let qc = new QueryCaller(this, param);\r\n       let ret = await qc.request();\r\n       return ret;\r\n   }\r\n    async table(params:any): Promise<any[]> {\r\n        let ret = await this.query(params);\r\n        for (let i in ret) {\r\n            return ret[i];\r\n        }\r\n    }\r\n    async obj(params:any):Promise<any> {\r\n        let ret = await this.table(params);\r\n        if (ret.length > 0) return ret[0];\r\n    }\r\n    async scalar(params:any):Promise<any> {\r\n        let ret = await this.obj(params);\r\n        for (let i in ret) return ret[i];\r\n    }\r\n}\r\n\r\nabstract class MapCaller extends EntityCaller<any> {\r\n    protected get entity(): Map {return this._entity as Map;}\r\n    get path():string {return undefined;}\r\n\r\n    protected abstract getCaller(param: any):EntityCaller<any>;\r\n\r\n    protected async innerCall(): Promise<any> {\r\n        let caller = this.getCaller(this.params);\r\n        let res = await this.entity.uqApi.xcall(caller);\r\n        let ret = caller.xresult(res.res);\r\n        return {res: ret};\r\n    }\r\n\r\n    buildParams() {\r\n        let p = super.buildParams();\r\n        return p;\r\n    }\r\n}\r\n\r\nclass AddCaller extends MapCaller {\r\n    protected getCaller(param:any):EntityCaller<any> {\r\n        return new MapAddCaller(this.entity, this.entity.actions.add, param);\r\n    }\r\n}\r\n\r\nclass DelCaller extends MapCaller {\r\n    protected getCaller(param:any):EntityCaller<any> {\r\n        return new MapDelCaller(this.entity, this.entity.actions.add, param);\r\n    }\r\n}\r\n\r\nclass AllCaller extends MapCaller {\r\n    protected getCaller(param:any):EntityCaller<any> {\r\n        return new MapAllCaller(this.entity, this.entity.queries.all, param);\r\n    }\r\n}\r\n\r\nclass PageCaller extends MapCaller {\r\n    protected getCaller(param:any):EntityCaller<any> {\r\n        return new MapPageCaller(this.entity, this.entity.queries.page, param);\r\n    }\r\n}\r\n\r\nclass QueryCaller extends MapCaller {\r\n    protected getCaller(param:any):EntityCaller<any> {\r\n        return new MapQueryCaller(this.entity, this.entity.queries.query, param);\r\n    }\r\n}\r\n\r\nclass MapAddCaller extends ActionSubmitCaller {\r\n    private map: Map;\r\n    constructor(map:Map, action:Action, params:any) {\r\n        super(action, params);\r\n        this.map = map;\r\n    }\r\n\r\n    get path():string {return `map/${this.map.name}/add`}\r\n    get headers(): {[header:string]: string} {return undefined;}\r\n    /*\r\n        let {ver, uq} = this.map;\r\n        let {uqVersion} = uq;\r\n        return {\r\n            uq: `${uqVersion}`,\r\n            en: `${ver}`,\r\n        }\r\n    }*/\r\n}\r\n\r\nclass MapDelCaller extends ActionSubmitCaller {\r\n    private map: Map;\r\n    constructor(map:Map, action:Action, params:any) {\r\n        super(action, params);\r\n        this.map = map;\r\n    }\r\n\r\n    get path():string {return `map/${this.map.name}/del`}\r\n    get headers(): {[header:string]: string} {return undefined}\r\n    /*\r\n        let {ver, uq} = this.map;\r\n        let {uqVersion} = uq;\r\n        return {\r\n            uq: `${uqVersion}`,\r\n            en: `${ver}`,\r\n        }\r\n    }*/\r\n}\r\n\r\nclass MapAllCaller extends QueryPageCaller {\r\n    private map: Map;\r\n    constructor(map:Map, query:Query, params:any) {\r\n        super(query, params);\r\n        this.map = map;\r\n    }\r\n\r\n    get path():string {return `map/${this.map.name}/all`}\r\n    get headers(): {[header:string]: string} {return undefined}\r\n    /*\r\n        let {ver, uq} = this.map;\r\n        let {uqVersion} = uq;\r\n        return {\r\n            uq: `${uqVersion}`,\r\n            en: `${ver}`,\r\n        }\r\n    }*/\r\n}\r\n\r\n\r\nclass MapPageCaller extends QueryPageCaller {\r\n    private map: Map;\r\n    constructor(map:Map, query:Query, params:any) {\r\n        super(query, params);\r\n        this.map = map;\r\n    }\r\n\r\n    get path():string {return `map/${this.map.name}/page`}\r\n    get headers(): {[header:string]: string} {return undefined}\r\n    /*\r\n        let {ver, uq} = this.map;\r\n        let {uqVersion} = uq;\r\n        return {\r\n            uq: `${uqVersion}`,\r\n            en: `${ver}`,\r\n        }\r\n    }*/\r\n}\r\n\r\nclass MapQueryCaller extends QueryQueryCaller {\r\n    private map: Map;\r\n    constructor(map:Map, query:Query, params:any) {\r\n        super(query, params);\r\n        this.map = map;\r\n    }\r\n\r\n    get path():string {return `map/${this.map.name}/query`}\r\n    get headers(): {[header:string]: string} {return undefined}\r\n    /*\r\n        let {ver, uq} = this.map;\r\n        let {uqVersion} = uq;\r\n        return {\r\n            uq: `${uqVersion}`,\r\n            en: `${ver}`,\r\n        }\r\n    }*/\r\n}","import {Query} from './query';\r\n\r\nexport class Pending extends Query {\r\n    get typeName(): string { return 'pending';}\r\n    protected queryApiName = 'pending';\r\n}\r\n","import React from 'react';\r\nimport { FA } from '../components';\r\n\r\nfunction icon(className:string, name:string) {\r\n    return <FA className={className} name={name} fixWidth={true} />;\r\n}\r\n\r\nexport const entityIcons:{[type:string]:JSX.Element} = {\r\n    tuid: icon('text-info', 'list-alt'),\r\n    action: icon('text-info', 'hand-o-right'),\r\n    map: icon('text-muted', 'list-ul'),\r\n    book: icon('text-muted', 'book'),\r\n    query: icon('text-warning', 'search'),\r\n    history: icon('text-info', 'hand-o-right'),\r\n    pending: icon('text-info', 'forward'),\r\n    sheet: icon('text-primary', 'wpforms'),\r\n};\r\n","import { Controller } from '../components';\r\nimport { CUq } from './cUq';\r\n\r\nexport abstract class ControllerUq extends Controller {\r\n    constructor(cUq: CUq, res:any) {\r\n        super(res);\r\n        this.cUq = cUq;\r\n    }\r\n    cUq: CUq;\r\n}\r\n","export * from './rule';\r\nexport * from './field';\r\nexport * from './face';\r\nexport * from './rowContainer';\r\nexport * from './formView';\r\nexport * from './TonvaForm';\r\nexport {ControlBase} from './control';\r\n","import * as React from 'react';\r\nimport {FormEvent} from 'react';\r\nimport {computed} from 'mobx';\r\nimport {uid} from 'tonva';\r\nimport {Rule} from './rule';\r\nimport {Field} from './field';\r\nimport {Face} from './face';\r\nimport {CreateControl, ButtonsControl} from './control';\r\nimport {RowContainer, CreateRow, bootstrapCreateRow, elementCreateRow} from './rowContainer';\r\n\r\nexport interface FieldView {\r\n    field: Field;\r\n    face?: Face;\r\n}\r\n\r\nexport interface LabeledRow {\r\n    label?: string;\r\n    createRow?: CreateRow;\r\n    createControl?: CreateControl;\r\n    help?: JSX.Element;\r\n}\r\n\r\nexport interface FieldRow extends LabeledRow, FieldView {\r\n}\r\n\r\nexport interface GroupRow extends LabeledRow {\r\n    group: FieldView[];\r\n}\r\n\r\nexport type LabelFormRow = FieldRow|GroupRow|LabeledRow;\r\nexport type FormRow = LabelFormRow|JSX.Element;\r\n\r\nexport interface SubmitResult {\r\n    success: boolean;\r\n    message?: string\r\n    result?: any;\r\n}\r\n\r\nexport interface FormProps {\r\n    formRows: FormRow[];\r\n    //context?: any;              // form context，比如，可以是EntitiesUI\r\n    rules?: Rule | Rule[];\r\n    onSubmit: (values:any) => Promise<SubmitResult|undefined>;\r\n    submitButton?: string|JSX.Element;\r\n    otherButton?: string|JSX.Element;\r\n    onOther?: (values:any) => void;\r\n    createRow?: CreateRow;\r\n    createControl?: CreateControl;\r\n    readOnly?: boolean;\r\n}\r\n\r\nexport class FormView {\r\n    uid:string;\r\n    private rows: RowContainer[] = [];\r\n    private buttonsRow: RowContainer;\r\n    props: FormProps;\r\n    createControl?: CreateControl;\r\n    constructor(props:FormProps) {\r\n        this.uid = uid();\r\n        this.props = props;\r\n        this.buildRows(props);\r\n        this.createControl = props.createControl;\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    @computed get hasError():boolean {\r\n        let ret = this.rows.map((v, index) => index + ': ' + v.hasError + '\\n');\r\n        console.log(ret);\r\n        return this.rows.some(row => row.hasError);\r\n    }\r\n    @computed get nothing():boolean {\r\n        let ret = this.rows.every(row => !row.filled);\r\n        return ret;\r\n    }\r\n\r\n    readValues():any {\r\n        let values = {} as any;\r\n        for (let row of this.rows) {\r\n            row.readValues(values);\r\n        }\r\n        return values;\r\n    }\r\n\r\n    clear() {\r\n        for (let row of this.rows) {\r\n            row.clear();\r\n        }\r\n    }\r\n\r\n    clearErrors() {\r\n        for (let row of this.rows) {\r\n            row.clearErrors();\r\n        }\r\n    }\r\n\r\n    setError(fieldName:string, error:string) {\r\n        for (let row of this.rows) {\r\n            row.setError(fieldName, error);\r\n        }\r\n    }\r\n\r\n    setInitValues(initValues:any) {\r\n        if (initValues === undefined) return;\r\n        for (let row of this.rows) {\r\n            row.setInitValues(initValues);\r\n        }\r\n    }\r\n\r\n    private buildRows(props:FormProps) {\r\n        let {formRows, createRow} = props;\r\n        if (formRows !== undefined) {\r\n            for (let row of formRows) {\r\n                this.rows.push(this.buildRow(row, createRow));\r\n            }\r\n            if (this.props.readOnly !== true) {\r\n                this.buttonsRow = this.buildRow({createControl:this.createButtons.bind(this)}, undefined);\r\n            }\r\n        }\r\n        else {\r\n            this.rows.push(elementCreateRow(this, <div className=\"text-warning\">TonvaForm need formRows defined</div>));\r\n        }\r\n    }\r\n\r\n    private buildRow(formRow: FormRow, formRowCreator: CreateRow):RowContainer {\r\n        let createRow:CreateRow;\r\n        let type = (formRow as JSX.Element).type;\r\n        if (type !== undefined) {\r\n            createRow = elementCreateRow;\r\n        }\r\n        else {\r\n            createRow = (formRow as (FieldRow | GroupRow | LabeledRow)).createRow;\r\n            if (createRow === undefined) {\r\n                createRow = formRowCreator;\r\n                if (createRow === undefined) createRow = bootstrapCreateRow;\r\n            }\r\n        }\r\n        let row = createRow(this, formRow);\r\n        return row;\r\n    }\r\n\r\n    private createButtons(form:FormView, row: FormRow) {\r\n        return new ButtonsControl(form);\r\n    }\r\n\r\n    private isOk():boolean {\r\n        let isOk = true;\r\n        for (let row of this.rows) {\r\n            if (!row.isOk()) isOk = false;\r\n        }\r\n        return isOk;\r\n    }\r\n\r\n    render():JSX.Element {\r\n        return <form onSubmit={this.onSubmit}>\r\n            {this.rows.map((row,index) => row.render(this.uid + index))}\r\n            {this.buttons()}\r\n        </form>;\r\n    }\r\n\r\n    buttons():JSX.Element {\r\n        if (this.buttonsRow === undefined) return;\r\n        return this.buttonsRow.render(this.uid + this.rows.length);\r\n    }\r\n    \r\n    async onSubmit(event:FormEvent<HTMLFormElement>) {\r\n        event.preventDefault();\r\n        if (!this.isOk()) return;\r\n        let values = this.readValues();\r\n        await this.props.onSubmit(values);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Page, List, Muted, LMR } from '../../components';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../uq';\r\nimport { CSheet, SheetUI } from './cSheet';\r\n\r\nexport class VSheetMain extends VEntity<Sheet, SheetUI, CSheet> {\r\n    async open() {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    newClick = () => this.event('new');\r\n    schemaClick = () => this.event('schema'); \r\n    archivesClick = () => this.event('archives');\r\n    sheetStateClick = (state:any) => this.event('state', state);\r\n\r\n    renderState = (item:any, index:number) => {\r\n        let {state, count} = item;\r\n        if (count === 0) return null;\r\n        let badge = <span className=\"badge badge-success ml-5 align-self-end\">{count}</span>;\r\n        return <LMR className=\"px-3 py-2\" left={this.controller.getStateLabel(state)} right={badge} />;\r\n    }\r\n\r\n    protected view = observer(() => {\r\n        let list = this.controller.statesCount.filter(row=>row.count);\r\n        let right = <button className=\"btn btn-outline-primary\" onClick={this.archivesClick}>已归档</button>;\r\n        let templet:any;\r\n        if (this.isDev === true) {\r\n            templet = <button className=\"btn btn-primary mr-2\" color=\"primary\" onClick={this.schemaClick}>模板</button>;\r\n        }\r\n        return <Page header={this.label}>\r\n            <LMR\r\n                className=\"mx-3 my-2\"\r\n                right={right}>\r\n                <button className=\"btn btn-primary mr-2\" color=\"primary\" onClick={this.newClick}>新建</button>\r\n                {templet}\r\n            </LMR>\r\n            <List className=\"my-2\"\r\n                header={<Muted className=\"mx-3 my-1\">待处理{this.label}</Muted>}\r\n                none=\"[ 无 ]\"\r\n                items={list}\r\n                item={{render:this.renderState, onClick:this.sheetStateClick}} />\r\n        </Page>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from '../../components';\r\nimport { Sheet } from '../../uq';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { SheetUI, CSheet } from './cSheet';\r\n\r\nexport class VSheetNew extends VEntity<Sheet, SheetUI, CSheet> {\r\n    vForm: VForm;\r\n\r\n    async open(param?:any) {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    private onSubmit = async ():Promise<void> => {\r\n        let values = this.vForm.getValues();\r\n        let valuesWithBox = this.vForm.values;\r\n        //let ret = \r\n        await this.controller.onSave(values, valuesWithBox);\r\n        /*\r\n        this.ceasePage();\r\n        //this.openPage(this.finishedPage);\r\n        await this.controller.showSaved(ret);\r\n        */\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render()}\r\n    </Page>;\r\n}\r\n","import * as React from 'react';\r\nimport {List, Muted, LMR, EasyDate, FA} from '../../components';\r\nimport { Sheet } from '../../uq';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CSheet, SheetUI, SheetData } from './cSheet';\r\n\r\nconst leftFlowStyle = {width: '8rem'};\r\n\r\nexport abstract class VSheetView extends VEntity<Sheet, SheetUI, CSheet> {\r\n    protected vForm: VForm;\r\n    protected sheetData: SheetData;\r\n    //data: any;\r\n    //state: string;\r\n    //flows:any[];\r\n\r\n    flowRow = (item:any, index:number):JSX.Element => {\r\n        let {date, state, action} = item;\r\n        if (action === undefined) action = <><FA className=\"text-primary\" name=\"pencil-square-o\" /> 制单</>;\r\n        let to;\r\n        switch (state) {\r\n            case '$': break;\r\n            case '#': to = <><FA className=\"text-success\" name=\"file-archive-o\" /></>; break;\r\n            default: to = <><FA className=\"text-muted\" name=\"arrow-right\" /> &nbsp; {state}</>; break;\r\n        }\r\n        /*\r\n        return <div className=\"row\">\r\n            <div className=\"col-sm\"></div>\r\n            <div className=\"col-sm\"><div className=\"p-2\">{to}</div></div>\r\n            <div className=\"col-sm text-right\"><div className=\"p-2\"><Muted><EasyDate date={date} /></Muted></div></div>\r\n        </div>;\r\n        */\r\n        return <LMR \r\n            left={<div className=\"pl-3 py-2\" style={leftFlowStyle}>{action}</div>}\r\n            right={<div className=\"p-2\"><Muted><EasyDate date={date} /></Muted></div>}>\r\n            <div className=\"p-2\">{to}</div>\r\n        </LMR>;\r\n    }\r\n\r\n    protected sheetView = () => {\r\n        let {brief, flows} = this.sheetData;\r\n        let removed;\r\n        if (brief.state === '-')\r\n            removed = <div className=\"mx-3 my-2\" style={{color:'red'}}>本单据作废</div>;\r\n        return <div>\r\n            {removed}\r\n            {this.vForm.render()}\r\n    \r\n            <List header={<Muted className=\"mx-3 my-1\">流程</Muted>}\r\n                items={flows}\r\n                item={{render:this.flowRow}}/>\r\n        </div>;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from '../../components';\r\nimport { FormMode } from '../form';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\n\r\nexport class VSheetEdit extends VSheetView { //VEntity<Sheet, SheetUI, CSheet> {\r\n    protected sheetData: SheetData;\r\n    async open(param: SheetData) {\r\n        this.sheetData = param;\r\n        this.vForm = this.createForm(this.onSubmit, param.data, FormMode.edit);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSubmit = async ():Promise<void> => {\r\n        let values = this.vForm.getValues();\r\n        await this.controller.saveSheet(values, this.vForm.values);\r\n        this.closePage();\r\n        this.returnCall(this.vForm.values);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render()}\r\n    </Page>;\r\n}\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport { FA, Page } from '../../components';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\n\r\nexport class VSheetAction extends VSheetView { \r\n    async open(sheetData:SheetData) {\r\n        this.sheetData = sheetData;\r\n        //let {brief, data, flows} = await this.controller.getSheetData(sheetId);\r\n        //this.brief = brief;\r\n        //this.flows = flows;\r\n        //this.data = data;\r\n        //this.state = this.brief.state;\r\n        this.vForm = this.createForm(undefined, sheetData.data);\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    actionClick = async (action:any) => {\r\n        let {id, flow, state} = this.sheetData.brief;\r\n        await this.controller.action(id, flow, state, action.name);\r\n        this.ceasePage();\r\n        this.openPage(this.acted);\r\n        //alert(jsonStringify(res));\r\n        //await this.backPage();\r\n    }\r\n\r\n    deleteClick = async () => {\r\n        alert('单据作废：程序正在设计中');\r\n    }\r\n\r\n    editClick = async () => {\r\n        //alert('修改单据：程序正在设计中');\r\n        let values = await this.controller.editSheet(this.sheetData);\r\n        this.vForm.setValues(values);\r\n    }\r\n\r\n    protected page = () => {\r\n        let {brief} = this.sheetData;\r\n        let {state, no} = brief;\r\n        let stateLabel = this.controller.getStateLabel(state);\r\n        let {states} = this.entity;\r\n        let s = states.find(v => v.name === state);\r\n        let actionButtons, startButtons;\r\n        if (s === undefined) {\r\n            let text:string, cn:string;\r\n            switch (state) {\r\n                default:\r\n                    text = '不认识的单据状态\\'' + state + '\\'';\r\n                    cn = 'text-info';\r\n                    break;\r\n                case '-': \r\n                    text = '已作废';\r\n                    cn = 'text-danger';\r\n                    break;\r\n                case '#':\r\n                    text = '已归档';\r\n                    cn = 'text-success';\r\n                    break;\r\n            }\r\n            actionButtons = <div className={classNames(cn)}>[{text}]</div>;\r\n        }\r\n        else {\r\n            actionButtons = <div className=\"flex-grow-1\">{s.actions.map((v,index) => \r\n                <button\r\n                    key={index}\r\n                    className=\"btn btn-primary mr-2\"\r\n                    onClick={()=>this.actionClick(v)}\r\n                >\r\n                    {this.controller.getActionLabel(state, v.name)}\r\n                </button>)}\r\n            </div>;\r\n            if (state === '$') {\r\n                startButtons = <div>\r\n                    <button className=\"btn btn-outline-info ml-2\" onClick={this.editClick}>修改</button>\r\n                    <button className=\"btn btn-outline-danger ml-2\" onClick={this.deleteClick}>作废</button>\r\n                </div>\r\n            }\r\n        };\r\n        return <Page header={this.label + ':' + stateLabel + '-' + no}>\r\n            <div className=\"mb-2\">\r\n                <div className=\"d-flex px-3 py-2 border-bottom bg-light\">\r\n                    {actionButtons}\r\n                    {startButtons}\r\n                </div>\r\n                <this.sheetView />\r\n            </div>\r\n        </Page>;\r\n    }\r\n\r\n    private acted = () => {\r\n        let {discription} = this.sheetData.brief;\r\n        return <Page header=\"已处理\" back=\"close\">\r\n            <div className=\"p-3 d-flex flex-column align-items-center\">\r\n                <div className=\"p-3\">{discription}</div>\r\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已处理！</div>\r\n                <div className=\"p-3\">\r\n                    <button className=\"btn btn-outline-info\" onClick={()=>this.backPage()}>返回</button>\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from '../../components';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../uq';\r\nimport { SheetUI, CSheet } from './cSheet';\r\n\r\nexport class VSheetSchema extends VEntity<Sheet, SheetUI, CSheet> {\r\n    async open(param?:any) {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label + \"模板\"}>\r\n        <pre className=\"mx-3 my-2\">{this.entity.schemaStringify()}</pre>\r\n    </Page>;\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { Page, List, LMR, EasyDate, Muted } from '../../components';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../uq';\r\nimport { SheetUI, CSheet } from './cSheet';\r\n\r\nexport class VArchives extends VEntity<Sheet, SheetUI, CSheet> {\r\n    list: any[];\r\n\r\n    async open() {\r\n        this.list = await this.entity.getArchives(undefined, 10);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    archiveClick = async (brief:any) => {\r\n        if (brief.processing===1) return;\r\n        this.event('archived', brief);\r\n    }\r\n    archiveRow = (row:any, index:number) => {\r\n        let {date} = row;\r\n        let left = <>\r\n            {row.processing===1? '... ' : ''}\r\n            {row.no} &nbsp; {row.discription}\r\n        </>;\r\n        let right = <Muted><EasyDate date={date} /></Muted>;\r\n        return <LMR className=\"px-3 py-2\" left={left} right={right} />\r\n    }\r\n\r\n    protected view = () => {\r\n        return <Page header={'已归档' + this.label}>\r\n            <List items={this.list} item={{render:this.archiveRow, onClick:this.archiveClick}} />\r\n        </Page>;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { Page, List, Muted, LMR, EasyDate } from '../../components';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../uq';\r\nimport { CSheet, SheetUI } from './cSheet';\r\n\r\nexport class VSheetList extends VEntity<Sheet, SheetUI, CSheet> {\r\n    protected row: (values:any) => JSX.Element;\r\n    stateName: string;\r\n    stateLabel: string;\r\n\r\n    async open(item:any) {\r\n        this.row = this.ui.listRow || this.rowContent;\r\n        this.stateName = item.state;\r\n        this.stateLabel = this.controller.getStateLabel(this.stateName);\r\n        //await this.controller.getStateSheets(this.stateName, 0, 10);\r\n        await this.controller.pageStateItems.first(this.stateName);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    rowClick = async (brief:any) => {\r\n        if (brief.processing===1) {\r\n            this.event('processing', brief.id);\r\n            return;\r\n        }\r\n        this.event('action', brief.id);\r\n    }\r\n\r\n    private onScrollBottom = () => {\r\n        console.log('onScrollBottom');\r\n        this.controller.pageStateItems.more();\r\n    }\r\n\r\n    protected rowContent = (row:any):JSX.Element => {\r\n        let {no, discription, date, processing} = row;\r\n        let left = <>            \r\n            {no} &nbsp; <Muted>{discription}</Muted> {processing===1? '...' : ''}\r\n        </>;\r\n        let right = <Muted><EasyDate date={date} /></Muted>;\r\n        return <LMR className=\"px-3 py-2\" left={left} right={right} />;\r\n    }\r\n\r\n    private renderRow = (row:any, index:number) => <this.row {...row} />\r\n\r\n    protected view = () => {\r\n        //let sheets = this.controller.stateSheets;\r\n        let {pageStateItems} = this.controller;\r\n        return <Page header={this.label + ' - ' + this.stateLabel} onScrollBottom={this.onScrollBottom}>\r\n            <List items={pageStateItems} item={{render:this.renderRow, onClick:this.rowClick}} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from '../../components';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\n\r\nexport interface SheetStateFlows {\r\n    flows: any;\r\n    data: any;\r\n}\r\nexport class VArchived extends VSheetView {\r\n    //protected controller: CSheet;\r\n    //brief: any;\r\n\r\n    async open(sheetData:SheetData) {\r\n        this.sheetData = sheetData;\r\n        /*\r\n        let {brief, data, flows} = await this.controller.getArchived(inBrief.id);\r\n        this.brief = brief;\r\n        this.data = data;\r\n        this.flows = flows;\r\n        */\r\n        this.vForm = this.createForm(undefined, this.sheetData.data);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => {\r\n        let {brief} = this.sheetData;\r\n        return <Page header={this.label + '-' + brief.no}>\r\n            <this.sheetView />\r\n        </Page>;\r\n    };\r\n}\r\n","import { Sheet } from '../../uq';\r\nimport { SheetUI, CSheet } from './cSheet';\r\nimport { VEntity } from '../CVEntity';\r\n\r\nexport abstract class VSheet extends VEntity<Sheet, SheetUI, CSheet> {\r\n}\r\n","import * as React from 'react';\r\nimport { Page, FA } from '../../components';\r\nimport { VSheet } from './vSheet';\r\n\r\nexport class VSheetSaved extends VSheet {\r\n    private brief: any;\r\n    async open(brief?:any) {\r\n        this.brief = brief;\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    private restart = async () => {\r\n        this.ceasePage();\r\n        await this.event('new');\r\n    }\r\n\r\n    actionClick = async (action:any) => {\r\n        this.ceasePage();\r\n        let {id, flow, state} = this.brief;\r\n        await this.controller.action(id, flow, state, action.name);\r\n        this.openPage(this.acted);\r\n    }\r\n\r\n    private buttons = <>\r\n        <button className=\"btn btn-outline-primary mr-3\" onClick={this.restart}>继续开单</button>\r\n        <button className=\"btn btn-outline-info\" onClick={()=>this.backPage()}>返回</button>\r\n    </>;\r\n\r\n    private view = () => {\r\n        let {states} = this.entity;\r\n        const state = '$';\r\n        let s = states.find(v => v.name === state);\r\n        let actionButtons = <>{s.actions.map((v,index) => \r\n            <button\r\n                key={index}\r\n                className=\"btn btn-primary mr-3\"\r\n                onClick={()=>this.actionClick(v)}\r\n            >\r\n                {this.controller.getActionLabel(state, v.name)}\r\n            </button>)}\r\n        </>;\r\n        return <Page header=\"已保存\" back=\"close\">\r\n            <div className=\"p-3 d-flex flex-column align-items-center\">\r\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已保存！系统尚未处理</div>\r\n                <div className=\"p-3\">\r\n                    {actionButtons}\r\n                    {this.buttons}\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    }\r\n\r\n    private acted = () => {\r\n        return <Page>\r\n            <div className=\"p-3 d-flex flex-column align-items-center\">\r\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已处理！</div>\r\n                <div className=\"p-3\">\r\n                    {this.buttons}\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Page } from '../../components';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\n\r\nexport class VSheetProcessing extends VSheetView { \r\n    async open(sheetData:SheetData) {\r\n        this.sheetData = sheetData;\r\n        //let {brief, data, flows} = await this.controller.getSheetData(sheetId);\r\n        //this.brief = brief;\r\n        //this.flows = flows;\r\n        //this.data = data;\r\n        //this.state = this.brief.state;\r\n        this.vForm = this.createForm(undefined, sheetData.data);\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    protected page = () => {\r\n        let {brief} = this.sheetData;\r\n        let {state, no} = brief;\r\n        let stateLabel = this.controller.getStateLabel(state);\r\n        return <Page header={this.label + ':' + stateLabel + '-' + no}>\r\n            <div className=\"mb-2\">\r\n                <div className=\"d-flex px-3 py-2 border-bottom bg-light\">\r\n                    正在处理中...\r\n                </div>\r\n                <this.sheetView />\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n","import { IObservableArray, observable } from 'mobx';\r\nimport { postWsToTop } from '../../net';\r\nimport { TypeVPage } from '../../components';\r\nimport { PageItems } from '../../tool';\r\nimport { Sheet, StateCount } from '../../uq';\r\nimport { CEntity, EntityUI } from '../CVEntity';\r\nimport { VSheetMain } from './vMain';\r\nimport { VSheetNew } from './vNew';\r\nimport { VSheetEdit } from './vEdit';\r\nimport { VSheetAction } from './vSheetAction';\r\nimport { VSheetSchema } from './vSchema';\r\nimport { VArchives } from './vArchives';\r\nimport { VSheetList } from './vList';\r\nimport { VArchived } from './vArchived';\r\nimport { VSheetSaved } from './vSaved';\r\nimport { VSheetProcessing } from './vSheetProcessing';\r\n\r\nexport interface SheetActionUI {\r\n    label: string;\r\n}\r\n\r\nexport interface StateUI {\r\n    label: string;\r\n    actions: {[name:string]: SheetActionUI}\r\n}\r\n\r\nexport interface SheetUI extends EntityUI {\r\n    CSheet?: typeof CSheet;\r\n    states?: {[name:string]: StateUI};\r\n    main?: TypeVPage<CSheet>;\r\n    sheetNew?: TypeVPage<CSheet>;\r\n    sheetSaved?: TypeVPage<CSheet>;\r\n    sheetEdit?: TypeVPage<CSheet>;\r\n    sheetAction?: TypeVPage<CSheet>;\r\n    listRow?: (row:any) => JSX.Element;\r\n    sheetTitle?: (sheetValues:any, x:any) => string;      // 返回单据的描述\r\n}\r\n\r\nexport interface SheetData {\r\n    brief: any;\r\n    data: any;\r\n    flows: any[];\r\n}\r\n\r\nexport class CSheet extends CEntity<Sheet, SheetUI> {\r\n    statesCount:IObservableArray<StateCount> = observable.array<StateCount>([], {deep:true});\r\n    curState:string;\r\n    pageStateItems: PageItems<any>;\r\n\r\n    protected async internalStart() {\r\n        await this.loadStateSheetCount();\r\n        this.pageStateItems = this.entity.createPageStateItems();\r\n        await this.openVPage(this.VSheetMain);\r\n    }\r\n\r\n    protected async onMessage(msg: any):Promise<void> {\r\n        let {type, body, from, to} = msg;\r\n        if (type === 'sheet') this.onSheet(from, to, body);\r\n    }\r\n    private onSheet(from:number, to:number[], sheetData:any) {\r\n        let me = this.user.id;\r\n        let {id, preState, state} = sheetData;\r\n        console.log({$:'onMessage sheet', from:from, to:to.join(','), id:id, preState:preState, state:state, me:me, sheetData:sheetData})\r\n        if (from === me) {\r\n            this.sheetActPreState(id, preState);\r\n        }\r\n        if (to.find(v=>v===me) !== undefined) {\r\n            this.sheetActState(id, state, sheetData);\r\n        }\r\n    }\r\n    private sheetActPreState(id:number, preState:string) {\r\n        this.changeStateCount(preState, -1);\r\n        if (this.curState === undefined || this.curState !== preState) return;\r\n        /*\r\n        let index = this.stateSheets.findIndex(v => v.id === id);\r\n        if (index>=0) {\r\n            this.stateSheets.splice(index, 1);\r\n        }*/\r\n        let index = this.pageStateItems.items.findIndex(v => v.id === id);\r\n        if (index>=0) {\r\n            this.pageStateItems.items.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    private sheetActState(id:number, state:string, msg:any) {\r\n        this.changeStateCount(state, 1);\r\n        if (this.curState === undefined || this.curState !== state) return;\r\n        /*\r\n        if (this.stateSheets.findIndex(v => v.id === id) < 0) {\r\n            this.stateSheets.push(msg);\r\n        }\r\n        */\r\n        if (this.pageStateItems.items.findIndex(v => v.id === id) < 0) {\r\n            this.pageStateItems.items.push(msg);\r\n        }\r\n    }\r\n\r\n    private changeStateCount(state:string, delta:number) {\r\n        if (state === undefined) return;\r\n        let index = this.statesCount.findIndex(v => v.state === state);\r\n        console.log({$:'changeState', state: state, delta: delta, index: index});\r\n        if (index < 0) return;\r\n        let stateCount = this.statesCount[index];\r\n        stateCount.count += delta;\r\n        if (stateCount.count < 0) stateCount.count = 0;\r\n    }\r\n\r\n    protected get VSheetMain():TypeVPage<CSheet> {return (this.ui&&this.ui.main) || VSheetMain}\r\n    protected get VSheetNew(): TypeVPage<CSheet> {return this.ui.sheetNew || VSheetNew}\r\n    protected get VSheetSaved(): TypeVPage<CSheet> {return this.ui.sheetSaved || VSheetSaved}\r\n    protected get VSheetEdit(): TypeVPage<CSheet> {return this.ui.sheetEdit || VSheetEdit}\r\n    protected get VSheetSchema(): TypeVPage<CSheet> {return VSheetSchema}\r\n    protected get VArchives(): TypeVPage<CSheet> {return VArchives}\r\n    protected get VArchived(): TypeVPage<CSheet> {return VArchived}\r\n    protected get VSheetList(): TypeVPage<CSheet> {return VSheetList}\r\n    protected get VSheetAction(): TypeVPage<CSheet> {return this.ui.sheetAction || VSheetAction}\r\n    protected get VSheetProcessing(): TypeVPage<CSheet> {return VSheetProcessing}\r\n    protected async onEvent(type:string, value:any) {\r\n        let c: TypeVPage<CSheet>;\r\n        switch (type) {\r\n            default: return;\r\n            case 'new': c = this.VSheetNew; break;\r\n            case 'schema': c = this.VSheetSchema; break;\r\n            case 'archives': c = this.VArchives; break;\r\n            case 'state':\r\n                this.curState = value.state;\r\n                c = this.VSheetList;\r\n                break;\r\n            case 'archived':\r\n                await this.showArchived(value); return;\r\n            case 'action':\r\n                await this.showAction(value); return;\r\n            case 'processing':\r\n                await this.showProcessing(value); return;\r\n        }\r\n        await this.openVPage(c, value);\r\n    }\r\n\r\n    async startSheet(sheetId:number) {\r\n        if (await this.beforeStart() === false) return;\r\n        await this.onEvent('action', sheetId);\r\n    }\r\n\r\n    async showAction(sheetId:number) {\r\n        let sheetData:SheetData = await this.getSheetData(sheetId);\r\n        postWsToTop({\r\n            body: {\r\n                $type: 'msg',\r\n                action: '$sheet',\r\n                msg: {\r\n                    id: sheetId,\r\n                    uq: this.cUq.uq.id,\r\n                    state: sheetData.brief.state\r\n                }\r\n            }\r\n        });\r\n        await this.openVPage(this.VSheetAction, sheetData);\r\n    }\r\n\r\n    async showProcessing(sheetId:number) {\r\n        let sheetData:SheetData = await this.getSheetData(sheetId);\r\n        await this.openVPage(this.VSheetProcessing, sheetData);\r\n    }\r\n\r\n    async editSheet(sheetData:SheetData):Promise<any> {\r\n        //alert('修改单据：程序正在设计中');\r\n        let values = await this.vCall(this.VSheetEdit, sheetData);\r\n        return values;\r\n    }\r\n\r\n    async showArchived(inBrief:any) {\r\n        let sheetData = await this.getArchived(inBrief.id);\r\n        await this.openVPage(this.VArchived, sheetData);\r\n    }\r\n\r\n    onSave = async (values:any, valuesWithBox:any):Promise<void> => {\r\n        //let values = this.vForm.getValues();\r\n        //let ret = await this.controller.saveSheet(values, this.vForm.values);\r\n        let ret = await this.saveSheet(values, valuesWithBox);\r\n        this.ceasePage();\r\n        //this.openPage(this.finishedPage);\r\n        await this.showSaved(ret);\r\n    }\r\n\r\n    async showSaved(sheetData:any) {\r\n        await this.openVPage(this.VSheetSaved, sheetData);\r\n    }\r\n\r\n    private getStateUI(stateName:string) {\r\n        let {states} = this.res;\r\n        if (states === undefined) return;\r\n        return states[stateName];\r\n    }\r\n    getStateLabel(stateName:string) {\r\n        let state = this.getStateUI(stateName);\r\n        let ret = (state && state.label) || stateName;\r\n        switch (ret) {\r\n            default: return ret;\r\n            case '$': return '新单';\r\n        }\r\n    }\r\n    getActionLabel(stateName:string, actionName:string) {\r\n        let state = this.getStateUI(stateName);\r\n        if (state === undefined) return actionName;\r\n        let actions = state.actions;\r\n        if (actions === undefined) return actionName;\r\n        let action = actions[actionName];\r\n        return (action && action.label) || actionName;\r\n    }\r\n\r\n    private async loadStateSheetCount():Promise<void> {\r\n        this.statesCount.clear();\r\n        let statesCount = await this.entity.stateSheetCount();\r\n        this.statesCount.splice(0, 0, ...statesCount);\r\n    }\r\n\r\n    async getSheetData(sheetId:number):Promise<SheetData> {\r\n        return await this.entity.getSheet(sheetId);\r\n    }\r\n\r\n    async getArchived(sheetId:number):Promise<SheetData> {\r\n        return await this.entity.getArchive(sheetId);\r\n    }\r\n\r\n    async saveSheet(values:any, valuesWithBox:any):Promise<any> {\r\n        let {sheetTitle} = this.ui;\r\n        let disc = sheetTitle === undefined? this.label : sheetTitle(valuesWithBox, this.x);\r\n        let ret = await this.entity.save(disc, values);\r\n        //let {id, state} = ret;\r\n        //if (id > 0) this.changeStateCount(state, 1);\r\n        return ret;\r\n    }\r\n\r\n    async action(id:number, flow:number, state:string, actionName:string):Promise<any> {\r\n        return await this.entity.action(id, flow, state, actionName);\r\n    }\r\n}\r\n","export * from './cSheet';\r\nexport * from './vSheet';\r\nexport * from './vMain';\r\nexport * from './vNew';\r\nexport * from './vEdit';\r\nexport * from './vList';\r\nexport * from './vSheetAction';\r\nexport * from './vSchema';\r\nexport * from './vArchived';\r\nexport * from './vSheetView';\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport '../../css/va-badge.css';\r\n\r\nexport interface BadgeProps {\r\n    className?: string;\r\n    badge?: string|number;\r\n    size?: 'xs' | 'sm' | 'lg';\r\n    color?: 'secondary'|'success'|'danger'|'primary'|'info'|'warning';\r\n    badgeAlign?: 'left'|'center'|'right';\r\n    badgeVertical?: 'top'|'middle'|'bottom';\r\n}\r\n\r\n@observer\r\nexport class Badge extends React.Component<BadgeProps> {\r\n    render() {\r\n        let {className, badge, size, color, badgeAlign, badgeVertical, children} = this.props;\r\n        let cn = classNames(\r\n            className,\r\n            'va-badge',\r\n            size && 'va-badge-'+size,\r\n            'va-badge-' + (color||'secondary'),\r\n            badgeAlign && 'va-badg-'+badgeAlign,\r\n            badgeVertical && 'va-badg-'+badgeVertical,\r\n        );\r\n        let b;\r\n        if (badge) b = <b>{badge}</b>;\r\n        return <div className={cn}>\r\n            {children}\r\n            {b}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport '../../css/va-lmr.css';\r\n\r\nexport interface LMRProps {\r\n    className?: string | string[];\r\n    left?: string|JSX.Element;\r\n    right?: string|JSX.Element;\r\n    onClick?: ()=>void;\r\n}\r\n\r\n@observer\r\nexport class LMR extends React.Component<LMRProps> {\r\n    render() {\r\n        let {className, left, children, right, onClick} = this.props;\r\n        let l, r;\r\n        if (left !== undefined) l = <header>{left}</header>;\r\n        if (right !== undefined) r = <footer>{right}</footer>;\r\n        let cursor;\r\n        if (onClick !== undefined) cursor = 'cursor-pointer';\r\n        return <div className={classNames('va-lmr', className, cursor)} onClick={onClick}>\r\n            {l}\r\n            <div>{children}</div>\r\n            {r}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nexport interface FAProps {\r\n    name: string;\r\n    className?: string;\r\n    size?: 'lg'|'2x'|'3x'|'4x'|'5x';\r\n    spin?: boolean;\r\n    fixWidth?: boolean;\r\n    border?: boolean;\r\n    pull?: 'left'|'right';\r\n    pulse?: boolean;\r\n    rotate?: 90|180|270;\r\n    flip?: 'horizontal'|'vertical';\r\n    inverse?: boolean;\r\n}\r\n\r\nexport class FA extends React.Component<FAProps> {\r\n    render() {\r\n        let {name, className, size, spin, fixWidth, border, pull, pulse, rotate, flip, inverse} = this.props;\r\n        let cn = classNames(className, 'fa',\r\n            name && ('fa-' + name),\r\n            size && 'fa-'+size,\r\n            fixWidth && 'fa-fw',\r\n            border && 'fa-border',\r\n            pull && 'fa-pull-' + pull,\r\n            spin && 'fa-spin',\r\n            pulse && 'fa-pulse',\r\n            rotate && 'fa-rotate-' + rotate,\r\n            flip && 'fa-flip-' + flip,\r\n            inverse && 'fa-inverse',\r\n        );\r\n        return <i className={cn} />\r\n    }\r\n}\r\n\r\nexport interface StackedFAProps {\r\n    className?: string;\r\n    size?: 'lg',\r\n}\r\nexport class StackedFA extends React.Component<StackedFAProps> {\r\n    render() {\r\n        let {className, size, children} = this.props;\r\n        let cn = classNames(\r\n            'fa-stack',\r\n            className,\r\n            size && 'fa-' + size);\r\n        return <span className={cn}>\r\n            {children}\r\n        </span>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nexport const Muted = (props:any) => \r\n<small className={classNames('text-muted', props.className)} style={props.style}>\r\n    {props.children}\r\n</small>;\r\n","export * from './Badge';\r\nexport * from './LMR';\r\nexport * from './FA';\r\nexport * from './IconText';\r\nexport * from './Muted';\r\n","import * as React from 'react';\r\nimport { Book } from '../../uq';\r\nimport { Page } from '../../components';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CBook, BookUI } from './cBook';\r\n\r\nexport class VBookMain extends VEntity<Book, BookUI, CBook> {\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        Book\r\n    </Page>;\r\n}\r\n","import { CEntity, EntityUI } from '../CVEntity';\r\nimport { Book } from '../../uq';\r\nimport { VBookMain } from './vBookMain';\r\n\r\nexport interface BookUI extends EntityUI {\r\n    CBook?: typeof CBook;\r\n    main: typeof VBookMain,\r\n}\r\n\r\nexport class CBook extends CEntity<Book, BookUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VBookMain);\r\n    }\r\n\r\n    protected get VBookMain():typeof VBookMain {return VBookMain}\r\n}\r\n","import React from 'react';\r\nimport { View, List, Muted } from '../../components';\r\nimport { Entity } from '../../uq';\r\nimport { CLink } from '../link';\r\nimport { CUq } from './cUq';\r\n\r\nexport class VUq extends View<CUq> {\r\n    protected isSysVisible = false;\r\n    protected tuidLinks: CLink[];\r\n    protected mapLinks: CLink[];\r\n    protected sheetLinks: CLink[];\r\n    protected actionLinks: CLink[];\r\n    protected queryLinks: CLink[];\r\n    protected bookLinks: CLink[];\r\n    protected historyLinks: CLink[];\r\n    protected pendingLinks: CLink[];\r\n\r\n    constructor(cUq: CUq) {\r\n        super(cUq);\r\n        let {tuidArr, mapArr, sheetArr, actionArr, queryArr, bookArr, historyArr, pendingArr} = cUq.uq;\r\n        this.tuidLinks = tuidArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cTuidMain(v)));\r\n        this.mapLinks = mapArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cMap(v)));\r\n        this.sheetLinks = sheetArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cSheet(v)));\r\n        this.actionLinks = actionArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cAction(v)));\r\n        this.queryLinks = queryArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cQuery(v)));\r\n        this.bookLinks = bookArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cBook(v)));\r\n        this.historyLinks = historyArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cHistory(v)));\r\n        this.pendingLinks = pendingArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cPending(v)));\r\n    }\r\n    protected isVisible(entity: Entity):boolean {\r\n        return entity.sys !== true || this.isSysVisible;\r\n    }\r\n    render(param?:any) {\r\n        if (this.view === undefined) return <div>??? viewModel 必须定义 view ???</div>\r\n        return React.createElement(this.view);\r\n    }\r\n\r\n    protected view = () => {\r\n        let {res, uq, error} = this.controller;\r\n        let linkItem = {\r\n            render: (cLink:CLink, index:number):JSX.Element => cLink.render(), \r\n            onClick: undefined as any, \r\n        };\r\n        let lists = [\r\n            {\r\n                header: res.tuid || 'TUID',\r\n                items: this.tuidLinks,\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.map || 'MAP',\r\n                items: this.mapLinks,\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.sheet || 'SHEET',\r\n                items: this.sheetLinks\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.action || 'ACTION',\r\n                items: this.actionLinks\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.query || 'QUERY',\r\n                items: this.queryLinks\r\n            },\r\n            {\r\n                cn: 'mt-2 mb-4',\r\n                header: res.book || 'BOOK',\r\n                items: this.bookLinks\r\n            },\r\n            {\r\n                cn: 'mt-2 mb-4',\r\n                header: res.history || 'HISTORY',\r\n                items: this.historyLinks\r\n            },\r\n            {\r\n                cn: 'mt-2 mb-4',\r\n                header: res.pending || 'PENDING',\r\n                items: this.pendingLinks\r\n            }\r\n        ];\r\n        let content;\r\n        if (error !== undefined) {\r\n            content = <div className=\"p-3 text-danger\">连接错误: {error}</div>;\r\n        }\r\n        else {\r\n            content = lists.map(({cn, header, items},index) => items.length > 0 && <List\r\n                key={index}\r\n                className={cn}\r\n                header={<div className=\"px-3 py-1 bg-light\"><Muted>{header}</Muted></div>}\r\n                items={items}\r\n                item={linkItem} />\r\n            );\r\n        }\r\n        return <>\r\n            <div className=\"px-3 py-1 small\">{res.uq || uq}</div>\r\n            {content}\r\n        </>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\n//import _ from 'lodash';\r\nimport { Controller, resLang } from '../../components';\r\nimport { UqData } from '../../net';\r\nimport { PureJSONContent } from '../tools';\r\nimport { UqMan, Action, Sheet, Query, Book, Map, Entity, Tuid, History, Pending, TuidDiv, CreateBoxId, BoxId } from '../../uq';\r\nimport { CLink } from '../link';\r\nimport { CBook, BookUI } from '../book';\r\nimport { CSheet, SheetUI } from '../sheet';\r\nimport { ActionUI, CAction } from '../action';\r\nimport { QueryUI, CQuery, CQuerySelect } from '../query';\r\nimport { CTuidMain, TuidUI, CTuidInfo, CTuidSelect, CTuidEdit, CTuidList } from '../tuid';\r\nimport { MapUI, CMap } from '../map';\r\nimport { CEntity, EntityUI } from '../CVEntity';\r\nimport { VUq } from './vUq';\r\nimport { CHistory, HistoryUI } from '../history';\r\nimport { CPending, PendingUI } from '../pending';\r\nimport { CApp } from '../app';\r\nimport { TuidWithUIRes, ReactBoxId } from './reactBoxId';\r\n\r\nexport type EntityType = 'sheet' | 'action' | 'tuid' | 'query' | 'book' | 'map' | 'history' | 'pending';\r\n\r\nexport interface UqUI {\r\n    CTuidMain?: typeof CTuidMain;\r\n    CTuidEdit?: typeof CTuidEdit;\r\n    CTuidList?: typeof CTuidList;\r\n    CTuidSelect?: typeof CTuidSelect;\r\n    CTuidInfo?: typeof CTuidInfo;\r\n    CQuery?: typeof CQuery;\r\n    CQuerySelect?: typeof CQuerySelect;\r\n    CMap?: typeof CMap;\r\n    CAction?: typeof CAction;\r\n    CSheet?: typeof CSheet;\r\n    CBook?: typeof CBook;\r\n    CHistory?: typeof CHistory;\r\n    CPending?: typeof CPending;\r\n    tuid?: {[name:string]: TuidUI};\r\n    sheet?: {[name:string]: SheetUI};\r\n    action?: {[name:string]: ActionUI};\r\n    map?: {[name:string]: MapUI};\r\n    query?: {[name:string]: QueryUI};\r\n    book?: {[name:string]: BookUI};    \r\n    history?: {[name:string]: HistoryUI};\r\n    pending?: {[name:string]: PendingUI};\r\n    res?: any;\r\n}\r\n\r\nfunction lowerPropertyName(entities: {[name:string]: EntityUI}) {\r\n    if (entities === undefined) return;\r\n    for (let i in entities) entities[i.toLowerCase()] = entities[i];\r\n}\r\n\r\nexport class CUq extends Controller /* implements Uq*/ {\r\n    private ui:any;\r\n    private tuidURs: {[name:string]: TuidWithUIRes} = {};\r\n    private CTuidMain: typeof CTuidMain;\r\n    private CTuidEdit: typeof CTuidEdit;\r\n    private CTuidList: typeof CTuidList;\r\n    private CTuidSelect: typeof CTuidSelect;\r\n    private CTuidInfo: typeof CTuidInfo;\r\n    private CQuery: typeof CQuery;\r\n    private CQuerySelect: typeof CQuerySelect;\r\n    private CMap: typeof CMap;\r\n    private CAction: typeof CAction;\r\n    private CSheet: typeof CSheet;\r\n    private CBook: typeof CBook;\r\n    private CHistory: typeof CHistory;\r\n    private CPending: typeof CPending;\r\n\r\n    //constructor(cApp:CApp, uq:string, appId:number, uqId:number, access:string, ui:UqUI) {\r\n    constructor(cApp:CApp, uqData:UqData, ui:UqUI) {\r\n        super(resLang(ui.res));\r\n        this.cApp = cApp;\r\n        //this.id = uqId;\r\n        // 每一个ui都转换成小写的key的版本\r\n        lowerPropertyName(ui.tuid);\r\n        lowerPropertyName(ui.sheet);\r\n        lowerPropertyName(ui.map);\r\n        lowerPropertyName(ui.query);\r\n        lowerPropertyName(ui.action);\r\n        lowerPropertyName(ui.book);\r\n        lowerPropertyName(ui.history);\r\n        lowerPropertyName(ui.pending);\r\n        this.ui = ui;\r\n        this.CTuidMain = ui.CTuidMain || CTuidMain;\r\n        this.CTuidEdit = ui.CTuidEdit || CTuidEdit;\r\n        this.CTuidList = ui.CTuidList || CTuidList;\r\n        this.CTuidSelect = ui.CTuidSelect || CTuidSelect;\r\n        this.CTuidInfo = ui.CTuidInfo || CTuidInfo;\r\n        this.CQuery = ui.CQuery || CQuery;\r\n        this.CQuerySelect = ui.CQuerySelect || CQuerySelect;\r\n        this.CMap = ui.CMap || CMap;\r\n        this.CAction = ui.CAction || CAction;\r\n        this.CSheet = ui.CSheet || CSheet;\r\n        this.CBook = ui.CBook || CBook;\r\n        this.CHistory = ui.CHistory || CHistory;\r\n        this.CPending = ui.CPending || CPending;\r\n\r\n        this.uq = new UqMan(cApp.uqs, uqData, this.createBoxId, undefined);\r\n    }\r\n\r\n    protected async internalStart() {\r\n    }\r\n\r\n    cApp:CApp;\r\n    res: any;\r\n    uq: UqMan;\r\n    error: string;\r\n    \r\n    private createBoxId:CreateBoxId = (tuid:Tuid, id:number):BoxId =>{\r\n        let {name} = tuid;\r\n        let tuidUR = this.tuidURs[name];\r\n        if (tuidUR === undefined) {\r\n            let {ui, res} = this.getUI(tuid);\r\n            this.tuidURs[name] = tuidUR = new TuidWithUIRes(tuid, ui, res);\r\n        }\r\n        return new ReactBoxId(tuidUR, id);\r\n    }\r\n\r\n    async init():Promise<void> {\r\n        return await this.uq.init();\r\n    }\r\n\r\n    async loadEntities():Promise<string> {\r\n        try {\r\n            await this.uq.loadEntities();\r\n        }\r\n        catch (err) {\r\n            return err;\r\n        }\r\n    }\r\n\r\n    async getQuerySearch(name:string):Promise<Query> {\r\n        let query = this.uq.query(name);\r\n        if (query === undefined) \r\n            alert(`QUERY ${name} 没有定义!`);\r\n        else {\r\n            await query.loadSchema();\r\n            let {returns} = query;\r\n            if (returns.length > 1) {\r\n                alert(`QUERY ${name} 返回多张表, 无法做QuerySearch`);\r\n            }\r\n        }\r\n        return query;\r\n    }\r\n    getTuidPlaceHolder(tuid:Tuid) {\r\n        let {tuidPlaceHolder, entity} = this.res;\r\n        let {name} = tuid;\r\n        //let type:string;\r\n        if (entity !== undefined) {\r\n            let en = entity[name];\r\n            if (en !== undefined) {\r\n                //type = en.label;\r\n            }\r\n        }\r\n        return (tuidPlaceHolder || 'Select');\r\n    }\r\n    getNone() {\r\n        let {none} = this.res;\r\n        return none || 'none';\r\n    }\r\n    protected isSysVisible = false;\r\n    protected isVisible(entity: Entity):boolean {\r\n        return entity.sys !== true || this.isSysVisible;\r\n    }\r\n\r\n    async navSheet(sheetTypeId:number, sheetId:number) {\r\n        let sheet = this.uq.sheetFromTypeId(sheetTypeId);\r\n        if (sheet === undefined) {\r\n            alert('sheetTypeId ' + sheetTypeId + ' is not exists!');\r\n            return;\r\n        }\r\n        let cSheet = this.cSheet(sheet);\r\n        await cSheet.startSheet(sheetId);\r\n    }\r\n\r\n    sheet(entityName:string) {return this.uq.sheet(entityName);}\r\n    action(entityName:string) {return this.uq.action(entityName);}\r\n    query(entityName:string) {return this.uq.query(entityName);}\r\n    book(entityName:string) {return this.uq.book(entityName);}\r\n    map(entityName:string) {return this.uq.map(entityName);}\r\n    history(entityName:string) {return this.uq.history(entityName);}\r\n    pending(entityName:string) {return this.uq.pending(entityName);}\r\n    tuid(entityName:string) {return this.uq.tuid(entityName)}\r\n    tuidDiv(entityName:string, divName:string) {\r\n        return this.uq.tuidDiv(entityName, divName);\r\n    }\r\n\r\n    cSheetFromName(entityName:string):CSheet {\r\n        let entity = this.uq.sheet(entityName);\r\n        if (entity !== undefined) return this.cSheet(entity);\r\n    }\r\n    cActionFromName(entityName:string) {\r\n        let entity = this.uq.action(entityName);\r\n        if (entity !== undefined) return this.cAction(entity);\r\n    }\r\n    cQueryFromName(entityName:string) {\r\n        let entity = this.uq.query(entityName);\r\n        if (entity !== undefined) return this.cQuery(entity);\r\n    }\r\n    cBookFromName(entityName:string) {\r\n        let entity = this.uq.book(entityName);\r\n        if (entity !== undefined) return this.cBook(entity);\r\n    }\r\n    cMapFromName(entityName:string) {\r\n        let entity = this.uq.map(entityName);\r\n        if (entity !== undefined) return this.cMap(entity);\r\n    }\r\n    cHistoryFromName(entityName:string) {\r\n        let entity = this.uq.history(entityName);\r\n        if (entity !== undefined) return this.cHistory(entity);\r\n    }\r\n    cPendingFromName(entityName:string) {\r\n        let entity = this.uq.pending(entityName);\r\n        if (entity !== undefined) return this.cPending(entity);\r\n    }\r\n    cTuidMainFromName(entityName:string) {\r\n        let entity = this.uq.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidMain(entity);\r\n    }\r\n    cTuidEditFromName(entityName:string) {\r\n        let entity = this.uq.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidEdit(entity);\r\n    }\r\n    cTuidInfoFromName(entityName:string) {\r\n        let entity = this.uq.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidInfo(entity);\r\n    }\r\n\r\n    cTuidSelectFromName(entityName:string) {\r\n        let entity = this.uq.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidSelect(entity);\r\n    }\r\n\r\n    cFromName(entityType:EntityType, entityName:string): CEntity<Entity, EntityUI> {\r\n        switch (entityType) {\r\n            case 'sheet':\r\n                let sheet = this.uq.sheet(entityName);\r\n                if (sheet === undefined) return;\r\n                return this.cSheet(sheet);\r\n            case 'action':\r\n                let action = this.uq.action(entityName);\r\n                if (action === undefined) return;\r\n                return this.cAction(action);\r\n            case 'tuid':\r\n                let tuid = this.uq.tuid(entityName);\r\n                if (tuid === undefined) return;\r\n                return this.cTuidMain(tuid);\r\n            case 'query':\r\n                let query = this.uq.query(entityName);\r\n                if (query === undefined) return;\r\n                return this.cQuery(query);\r\n            case 'book':\r\n                let book = this.uq.book(entityName);\r\n                if (book === undefined) return;\r\n                return this.cBook(book);\r\n            case 'map':\r\n                let map = this.uq.map(entityName);\r\n                if (map === undefined) return;\r\n                return this.cMap(map);\r\n            case 'history':\r\n                let history = this.uq.history(entityName);\r\n                if (history === undefined) return;\r\n                return this.cHistory(history);\r\n            case 'pending':\r\n                let pending = this.uq.pending(entityName);\r\n                if (pending === undefined) return;\r\n                return this.cPending(pending);\r\n        }\r\n    }\r\n\r\n    linkFromName(entityType:EntityType, entityName:string) {\r\n        return this.link(this.cFromName(entityType, entityName));\r\n    }\r\n\r\n    private getUI<T extends Entity, UI extends EntityUI>(t:T):{ui:UI, res:any} {\r\n        let ui:any, res:any;\r\n        let {name, typeName} = t;\r\n        if (this.ui !== undefined) {\r\n            if (typeName === 'div') {\r\n                let tuidDiv:TuidDiv = t as unknown as TuidDiv;\r\n                let ownerTuid = tuidDiv.owner;\r\n                let tUIs = this.ui[ownerTuid.typeName] as TuidUI;\r\n                if (tUIs) {\r\n                    let tUI = (tUIs as any)[ownerTuid.name];\r\n                    if (tUI) {\r\n                        let divs = tUI.divs;\r\n                        if (divs) {\r\n                            ui = divs[name];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                let tUI = this.ui[typeName];\r\n                if (tUI !== undefined) {\r\n                    ui = tUI[name];\r\n                }\r\n            }\r\n        }\r\n        let {entity} = this.res;\r\n        if (entity !== undefined) {\r\n            res = entity[name];\r\n        }\r\n        return {ui: ui || {}, res: res || {} };\r\n    }\r\n\r\n    link(cEntity:CEntity<Entity, EntityUI>) {\r\n        return new CLink(cEntity);\r\n    }\r\n\r\n    get tuidLinks() {\r\n        return this.uq.tuidArr.filter(v => this.isVisible(v)).map(v => this.link(this.cTuidMain(v)));\r\n    }\r\n    cTuidMain(tuid:Tuid):CTuidMain {\r\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid);\r\n        return new ((ui && ui.CTuidMain) || this.CTuidMain)(this, tuid, ui, res);\r\n    }\r\n    cTuidEdit(tuid:Tuid):CTuidEdit {\r\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid);\r\n        return new ((ui && ui.CTuidEdit) || this.CTuidEdit)(this, tuid, ui, res);\r\n    }\r\n    cTuidList(tuid:Tuid):CTuidList {\r\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid);\r\n        return new ((ui && ui.CTuidList) || this.CTuidList)(this, tuid, ui, res);\r\n    }\r\n    cTuidSelect(tuid:Tuid):CTuidSelect {\r\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid);\r\n        return new ((ui && ui.CTuidSelect) || this.CTuidSelect)(this, tuid, ui, res);\r\n    }\r\n    cTuidInfo(tuid:Tuid):CTuidInfo {\r\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid);\r\n        return new ((ui && ui.CTuidInfo) || this.CTuidInfo)(this, tuid, ui, res);\r\n    }\r\n\r\n    cSheet(sheet:Sheet/*, sheetUI?:SheetUI, sheetRes?:any*/):CSheet {\r\n        let {ui, res} = this.getUI<Sheet, SheetUI>(sheet);\r\n        //if (sheetUI !== undefined) ui = sheetUI;\r\n        //if (sheetRes !== undefined) res = sheetRes;\r\n        //return new (ui && ui.CSheet || this.CSheet)(this, sheet, sheetUI, sheetRes);\r\n        return new ((ui && ui.CSheet) || this.CSheet)(this, sheet, ui, res);\r\n    }\r\n    get sheetLinks() { \r\n        return this.uq.sheetArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cSheet(v))\r\n        });\r\n    }\r\n\r\n    cAction(action:Action):CAction {\r\n        let {ui, res} = this.getUI<Action, ActionUI>(action);\r\n        return new ((ui && ui.CAction) || this.CAction)(this, action, ui, res);\r\n    }\r\n    get actionLinks() { \r\n        return this.uq.actionArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cAction(v))\r\n        });\r\n    }\r\n\r\n    cQuery(query:Query):CQuery {\r\n        let {ui, res} = this.getUI<Query, QueryUI>(query);\r\n        return new ((ui && ui.CQuery) || this.CQuery)(this, query, ui, res);\r\n    }\r\n    cQuerySelect(queryName:string):CQuerySelect {\r\n        let query = this.uq.query(queryName);\r\n        if (query === undefined) return;\r\n        let {ui, res} = this.getUI<Query, QueryUI>(query);\r\n        return new ((ui && ui.CQuerySelect) || this.CQuerySelect)(this, query, ui, res);\r\n    }\r\n    get queryLinks() {\r\n        return this.uq.queryArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cQuery(v))\r\n        });\r\n    }\r\n    \r\n    cBook(book:Book):CBook {\r\n        let {ui, res} = this.getUI<Book, BookUI>(book);\r\n        return new ((ui && ui.CBook) || this.CBook)(this, book, ui, res);\r\n    }\r\n    get bookLinks() { \r\n        return this.uq.bookArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cBook(v))\r\n        });\r\n    }\r\n    \r\n    cHistory(history:History):CHistory {\r\n        let {ui, res} = this.getUI<History, HistoryUI>(history);\r\n        return new ((ui && ui.CHistory) || this.CHistory)(this, history, ui, res);\r\n    }\r\n    get historyLinks() { \r\n        return this.uq.historyArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cHistory(v))\r\n        });\r\n    }\r\n    \r\n    cPending(pending:Pending):CPending {\r\n        let {ui, res} = this.getUI<Pending, PendingUI>(pending);\r\n        return new ((ui && ui.CPending) || this.CPending)(this, pending, ui, res);\r\n    }\r\n    get pendingLinks() { \r\n        return this.uq.pendingArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cPending(v))\r\n        });\r\n    }\r\n    \r\n    cMap(map:Map):CMap {\r\n        let {ui, res} = this.getUI<Map, MapUI>(map);\r\n        return new ((ui && ui.CMap) || this.CMap)(this, map, ui, res);\r\n    }\r\n    get mapLinks() { \r\n        return this.uq.mapArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cMap(v));\r\n        });\r\n    }\r\n\r\n    getTuidContent(tuid:Tuid): React.StatelessComponent<any> {\r\n        let {ui} = this.getUI<Tuid, TuidUI>(tuid);\r\n        return (ui && ui.content) || PureJSONContent;\r\n    }\r\n\r\n    getTuidDivContent(tuidDiv:TuidDiv): React.StatelessComponent<any> {\r\n        let {owner} = tuidDiv;\r\n        let {ui} = this.getUI<Tuid, TuidUI>(owner);\r\n        return (ui && ui.divs && ui.divs[tuidDiv.name].content) || PureJSONContent;\r\n    }\r\n\r\n    async showTuid(tuid:Tuid, id:number):Promise<void> {\r\n        let c = this.cTuidInfo(tuid);\r\n        await c.start(id);\r\n    }\r\n\r\n    async showTuidDiv(tuid:TuidDiv, id:number):Promise<void> {\r\n        let {owner} = tuid;\r\n        let c = this.cTuidInfo(owner);\r\n        await c.start(id);\r\n    }\r\n\r\n    protected get VUq():typeof VUq {return VUq}\r\n\r\n    render() {\r\n        let v = new (this.VUq)(this);\r\n        return v.render();\r\n    }\r\n}\r\n\r\n","export * from './cUq';\r\nexport * from './vUq';\r\n//export * from './reactBoxId';","import {CenterApiBase} from '../net';\r\n\r\nexport class CenterApi extends CenterApiBase {\r\n    async userAppUnits(app:number):Promise<any[]> {\r\n        return await this.get('tie/user-app-units', {app:app});\r\n    }\r\n}\r\n\r\nexport const centerApi = new CenterApi('tv/', undefined);\r\n","import * as React from 'react';\r\nimport { VPage, Page, FA, nav, LMR, List } from \"../../components\";\r\nimport { appInFrame } from '../../net';\r\nimport { CApp } from \"./CApp\";\r\n\r\nexport class VAppMain extends VPage<CApp> {\r\n    async open(param?:any) {\r\n        this.openPage(this.appPage);\r\n    }\r\n\r\n    render(param?:any) {\r\n        return this.appContent();\r\n    }\r\n\r\n    protected appPage = () => {\r\n        let {caption} = this.controller;\r\n        return <Page header={caption} logout={async()=>{appInFrame.unit = undefined}}>\r\n            {this.appContent()}\r\n        </Page>;\r\n    }\r\n\r\n    protected appContent = () => {\r\n        let {cUqArr} = this.controller;\r\n        let content:any;\r\n        if (cUqArr.length === 0) {\r\n            content = <div className=\"text-danger\">\r\n                <FA name=\"\" /> 此APP没有绑定任何的UQ\r\n            </div>;\r\n        }\r\n        else {\r\n            content = cUqArr.map((v,i) => <div key={i}>{v.render()}</div>);\r\n        }\r\n        return <>{content}</>;\r\n    };\r\n}\r\n\r\nexport class VUnsupportedUnit extends VPage<CApp> {\r\n    async open(predefinedUnit: number) {\r\n        this.openPage(this.page, predefinedUnit);\r\n    }\r\n\r\n    private page = (predefinedUnit: number) => {\r\n        let {user} = nav;\r\n        let userName:string = user? user.name : '[未登录]';\r\n        let {appOwner, appName} = this.controller.uqs;\r\n        return <Page header=\"APP无法运行\" logout={true}>\r\n            <div className=\"m-3 text-danger container\">\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-sm-3 font-weight-bold\">登录用户</div>\r\n                    <div className=\"col-sm text-body\">{userName}</div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-sm-3 font-weight-bold\">App</div>\r\n                    <div className=\"col-sm text-body\">{`${appOwner}/${appName}`}</div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-sm-3 font-weight-bold\">预设小号</div>\r\n                    <div className=\"col-sm text-body\">{predefinedUnit || <small className=\"\">[无预设小号]</small>}</div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-sm-3 font-weight-bold\">\r\n                        可能原因<FA name=\"exclamation-triangle\" />\r\n                    </div>\r\n                    <div className=\"col-sm text-body\">\r\n                        <ul className=\"p-0\">\r\n                            <li>没有小号运行 {appName}</li>\r\n                            <li>用户 <b>{userName}</b> 没有加入任何一个运行{appName}的小号</li>\r\n                            {\r\n                                predefinedUnit && \r\n                                <li>预设小号 <b>{predefinedUnit}</b> 没有运行App {appName}</li>\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-sm-3 font-weight-bold\">小号{predefinedUnit}</div>\r\n                    <div className=\"col-sm text-body\">\r\n                        预设小号定义在 public/unit.json 文件中。\r\n                        定义了这个文件的程序，只能由url直接启动。\r\n                        用户第一次访问app之后，会缓存在localStorage里。<br/>\r\n                        如果要删去缓存的预定义Unit，logout然后再login。\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n\r\nexport class VUnitSelect extends VPage<CApp> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private renderRow = (item: any, index: number):JSX.Element => {\r\n        let {id, nick, name} = item;\r\n        return <LMR className=\"px-3 py-2\" right={'id: ' + id}>\r\n            <div>{nick || name}</div>\r\n        </LMR>;\r\n    }\r\n    private onRowClick = async (item: any) => {\r\n        appInFrame.unit = item.id; // 25;\r\n        await this.controller.start();\r\n    }\r\n\r\n    private page = () => {\r\n        return <Page header=\"选择小号\" logout={true}>\r\n            <List items={this.controller.appUnits} item={{render: this.renderRow, onClick: this.onRowClick}}/>\r\n        </Page>\r\n    }\r\n}\r\n\r\nexport class VErrorsPage extends VPage<CApp> {\r\n    async open(errors:string[]) {\r\n        this.openPage(this.page, errors);\r\n    }\r\n\r\n    private page = (errors:string[]) => {\r\n        return <Page header=\"ERROR\">\r\n            <div className=\"m-3\">\r\n                <div>Load Uqs 发生错误：</div>\r\n                {errors.map((r, i) => <div key={i}>{r}</div>)}\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n\r\nexport class VAppStartError extends VPage<CApp> {\r\n    async open(error:any) {\r\n        this.openPage(this.page, error);\r\n    }\r\n\r\n    private page = (error:any) => {\r\n        return <Page header=\"App start error!\">\r\n            <pre>\r\n                {typeof error === 'string'? error : error.message}\r\n            </pre>\r\n        </Page>;\r\n    }\r\n}","//import _ from 'lodash';\r\nimport { nav, Controller, TypeVPage, resLang, NavSettings} from '../../components';\r\nimport { loadAppUqs, appInFrame, getExHash, UqData} from '../../net';\r\nimport { CUq, UqUI } from '../cUq';\r\nimport { centerApi } from '../centerApi';\r\nimport { UQsMan } from '../../uq';\r\nimport { VUnsupportedUnit, VAppMain, VUnitSelect, VErrorsPage, VAppStartError } from './vApp';\r\n\r\nexport interface RoleAppUI {\r\n    CApp?: typeof CApp;\r\n    CUq?: typeof CUq;\r\n    main?: TypeVPage<CApp>;\r\n    uqs: {[uq:string]: UqUI | (()=>Promise<UqUI>)};\r\n    res?: any;\r\n}\r\n\r\nexport interface AppUI extends RoleAppUI, NavSettings {\r\n    appName: string;        // 格式: owner/appName\r\n    version: string;        // 版本变化，缓存的uqs才会重载\r\n    roles?: {[role:string]: RoleAppUI | (()=>Promise<RoleAppUI>)};\r\n}\r\n\r\nexport class CApp extends Controller {\r\n    private readonly cUqCollection: {[uq:string]: CUq} = {};\r\n    private readonly cImportUqs: {[uq:string]: CUq} = {};\r\n    protected ui:AppUI;\r\n    readonly name: string;\r\n    readonly version: string;\r\n    readonly uqs: UQsMan;\r\n    readonly caption: string; // = 'View Model 版的 Uq App';\r\n    appUnits:any[];\r\n\r\n    constructor(ui:AppUI) {\r\n        super(resLang(ui && ui.res));\r\n        nav.setSettings(ui);\r\n        this.name = ui.appName;\r\n        this.version = ui.version;\r\n        if (this.name === undefined) {\r\n            throw new Error('appName like \"owner/app\" must be defined in UI');\r\n        }\r\n        this.uqs = new UQsMan(this.name, undefined);\r\n        if (ui.uqs === undefined) ui.uqs = {};\r\n        this.ui = ui;\r\n        this.caption = this.res.caption || 'Tonva';\r\n    }\r\n    \r\n    getImportUq(uqOwner:string, uqName:string):CUq {\r\n        let uq = uqOwner + '/' + uqName;\r\n        let cUq = this.cImportUqs[uq];\r\n        if (cUq !== undefined) return cUq;\r\n        //let ui = this.ui && this.ui.uqs && this.ui.uqs[uq];\r\n        //let uqId = -1; // unknown\r\n        this.cImportUqs[uq] = cUq = this.getCUq(uq);\r\n        return cUq;\r\n    }\r\n\r\n    protected newCUq(uqData: UqData, uqUI: UqUI) {\r\n        let cUq = new (this.ui.CUq || CUq)(this, uqData, uqUI);\r\n        Object.setPrototypeOf(cUq.x, this.x);\r\n        return cUq;\r\n    }\r\n\r\n    get cUqArr():CUq[] {\r\n        let ret:CUq[] = [];\r\n        for (let i in this.cUqCollection) {\r\n            ret.push(this.cUqCollection[i]);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    getCUq(uq:string):CUq {\r\n        return this.cUqCollection[uq];\r\n    }\r\n\r\n    protected get VAppMain():TypeVPage<CApp> {return (this.ui&&this.ui.main) || VAppMain}\r\n    protected async beforeStart():Promise<boolean> {\r\n        try {\r\n            let retErrors = await this.load();\r\n            //let app = await loadAppUqs(this.appOwner, this.appName);\r\n            // if (isDevelopment === true) {\r\n            // 这段代码原本打算只是在程序员调试方式下使用，实际上，也可以开放给普通用户，production方式下\r\n            let {predefinedUnit} = appInFrame;\r\n            //let {id} = app;\r\n            //this.id = id;\r\n            let {user} = nav;\r\n            if (user !== undefined && user.id > 0) {\r\n                this.appUnits = await centerApi.userAppUnits(this.uqs.id);\r\n                switch (this.appUnits.length) {\r\n                    case 0:\r\n                        this.showUnsupport(predefinedUnit);\r\n                        return false;\r\n                    case 1:\r\n                        let appUnit = this.appUnits[0].id;\r\n                        if (appUnit === undefined || appUnit < 0 || \r\n                            (predefinedUnit !== undefined && appUnit !== predefinedUnit))\r\n                        {\r\n                            this.showUnsupport(predefinedUnit);\r\n                            return false;\r\n                        }\r\n                        appInFrame.unit = appUnit;\r\n                        break;\r\n                    default:\r\n                        if (predefinedUnit>0 && this.appUnits.find(v => v.id===predefinedUnit) !== undefined) {\r\n                            appInFrame.unit = predefinedUnit;\r\n                            break;\r\n                        }\r\n                        //nav.push(<this.selectUnitPage />)\r\n                        this.openVPage(VUnitSelect);\r\n                        return false;\r\n                }\r\n            }\r\n            if (retErrors !== undefined) {\r\n                this.openVPage(VErrorsPage);\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        catch (err) {\r\n            this.openVPage(VAppStartError);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    private async load(): Promise<string[]> {\r\n        let {appOwner, appName} = this.uqs;\r\n        let {localData} = this.uqs;\r\n        let uqAppData = localData.get();\r\n        if (!uqAppData || uqAppData.version !== this.version) {\r\n            uqAppData = await loadAppUqs(appOwner, appName);\r\n            uqAppData.version = this.version;\r\n            localData.set(uqAppData);\r\n            for (let uq of uqAppData.uqs) uq.newVersion = true;\r\n        }\r\n        let {id, uqs} = uqAppData;\r\n        this.uqs.id = id;\r\n\r\n        let retErrors:string[] = [];\r\n\r\n        let promiseInits: PromiseLike<void>[] = [];\r\n        let promises: PromiseLike<string>[] = [];\r\n        for (let uqData of uqs) {\r\n            let {uqOwner, uqName} = uqData;\r\n            let uqFullName = uqOwner + '/' + uqName;\r\n            let uqUI = this.ui.uqs[uqFullName] as UqUI || {};\r\n            let cUq = this.newCUq(uqData, uqUI);\r\n            this.cUqCollection[uqFullName] = cUq;\r\n            this.uqs.addUq(cUq.uq);\r\n            promiseInits.push(cUq.init());\r\n        }\r\n        await Promise.all(promiseInits);\r\n\r\n        for (let i in this.cUqCollection) {\r\n            let cUq = this.cUqCollection[i];\r\n            promises.push(cUq.loadEntities());\r\n        }\r\n        let results = await Promise.all(promises);\r\n        for (let result of results)\r\n        {\r\n            let retError = result; // await cUq.loadSchema();\r\n            if (retError !== undefined) {\r\n                retErrors.push(retError);\r\n                continue;\r\n            }\r\n        }\r\n        if (retErrors.length === 0) {\r\n            retErrors.push(...this.uqs.setTuidImportsLocal());\r\n            if (retErrors.length === 0) {\r\n                return;\r\n            }\r\n        }\r\n        return retErrors;\r\n    }\r\n\r\n    protected async internalStart(param:any) {\r\n        if (param !== true) {\r\n            this.clearPrevPages();\r\n        }\r\n        await this.showMainPage();\r\n    }\r\n\r\n    /*\r\n    render(): JSX.Element {\r\n        return this.renderView(this.VAppMain);\r\n    }*/\r\n\r\n    // 如果是独立app，删去显示app之前的页面。\r\n    // 如果非独立app，则不删\r\n    protected clearPrevPages() {\r\n        nav.clear();\r\n    }\r\n\r\n    private showUnsupport(predefinedUnit: number) {\r\n        this.clearPrevPages();\r\n        this.openVPage(VUnsupportedUnit, predefinedUnit);\r\n    }\r\n\r\n    private async showMainPage() {\r\n        // #tv-RwPBwMef-23-sheet-api-108\r\n        let exHash = getExHash();\r\n        if (exHash !== undefined) {\r\n            let parts = exHash.split('-');\r\n            if (parts.length > 3) {\r\n                let action = parts[3];\r\n                // sheet_debug 表示centerUrl是debug方式的\r\n                if (action === 'sheet' || action === 'sheet_debug') {\r\n                    let uqId = Number(parts[4]);\r\n                    let sheetTypeId = Number(parts[5]);\r\n                    let sheetId = Number(parts[6]);\r\n                    let cUq = this.getCUqFromId(uqId);\r\n                    if (cUq === undefined) {\r\n                        alert('unknown uqId: ' + uqId);\r\n                        return;\r\n                    }\r\n                    this.clearPrevPages();\r\n                    await cUq.navSheet(sheetTypeId, sheetId);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        this.openVPage(this.VAppMain);\r\n    }\r\n\r\n    private getCUqFromId(uqId:number): CUq {\r\n        for (let i in this.cUqCollection) {\r\n            let cUq = this.cUqCollection[i];\r\n            if (cUq.uq.id === uqId) return cUq;\r\n        }\r\n        return;\r\n    }\r\n}\r\n","export * from './CApp';\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport className from 'classnames';\r\nimport { Page, List, LMR, FA } from '../../components';\r\nimport { PureJSONContent } from '../tools';\r\nimport { Map } from '../../uq';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CMap, MapItem, MapUI } from './cMap';\r\nimport { tv } from '../cUq/reactBoxId';\r\n\r\nexport class VMapMain extends VEntity<Map, MapUI, CMap> {\r\n    private isFrom: boolean;\r\n\r\n    async open(param?:any) {\r\n        this.isFrom = this.controller.isFrom;\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    itemRender = (item:MapItem, index:number) => {\r\n        return <this.ItemRow item={item} />;\r\n    }\r\n\r\n    private ItemRow = observer(({item}: {item:MapItem}) => {\r\n        let {box, children, isLeaf, keyIndex, values} = item;\r\n        let keyUI = this.controller.keyUIs[keyIndex];\r\n        let {content:keyContent, valuesContent, none:keyNone} = keyUI;\r\n        let add:any, remove:any;\r\n        if (this.isFrom === false) {\r\n            add = <button className=\"btn btn-link btn-sm\" onClick={()=>this.controller.addClick(item)}>\r\n                <FA name=\"plus\" />\r\n            </button>;\r\n            remove = <button className=\"btn btn-link btn-sm\" onClick={()=>this.controller.removeClick(item)}>\r\n                <FA className=\"text-info\" name=\"trash\" />\r\n            </button>;\r\n        }\r\n        let right:any;\r\n        if (isLeaf === false) {\r\n            if (keyIndex === 0)\r\n                right = add;\r\n            else\r\n                right = <>{remove} &nbsp; {add}</>;\r\n        }\r\n        else if (keyIndex > 0) {\r\n            right = remove;\r\n        }\r\n        let content:any, border:any, valuesView:any;\r\n        if (isLeaf === true) {\r\n            content = undefined; //<div className=\"ml-5\">leaf</div>;\r\n            if (values) {\r\n                //valuesView = null; // 现在不显示values content了\r\n                valuesView = (valuesContent || PureJSONContent)(values, this.x);\r\n            }\r\n        }\r\n        else {\r\n            border = 'border-bottom';\r\n            let none = keyNone && keyNone(this.x);\r\n            content = <List \r\n                className=\"ml-4\" \r\n                items={children} \r\n                item={{onClick:undefined, render:this.itemRender}}\r\n                none={none} />\r\n        }\r\n        let left = <div className=\"py-1 pr-3\">{tv(box, keyContent, this.x)}</div>;\r\n        return <div className=\"d-flex flex-column\">\r\n            <LMR className={className('px-3', 'py-2', border)}\r\n                left={left}\r\n                right={right}\r\n            >\r\n                <div className=\"py-1\">{valuesView}</div>\r\n            </LMR>\r\n            {content}\r\n        </div>;\r\n    });\r\n\r\n    protected get view() { return () => <Page header={this.label}>\r\n            <List items={this.controller.items} item={{className:'my-2', onClick:undefined, render:this.itemRender}} />\r\n        </Page>\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { VEntity } from '../CVEntity';\r\nimport { MapUI, CMap } from './cMap';\r\nimport { Map } from '../../uq';\r\nimport { Page } from '../../components';\r\nimport { VForm } from '../form';\r\n\r\nexport class VInputValues extends VEntity<Map, MapUI, CMap> {\r\n    private vForm: VForm;\r\n\r\n    async open(param?:any) {\r\n        this.vForm = this.createForm(this.onValuesSubmit);\r\n        this.openPageElement(<this.view />);\r\n    }\r\n\r\n    private onValuesSubmit = async () => {\r\n        this.ceasePage();\r\n        let values = this.vForm.getValues();\r\n        this.returnCall(values);\r\n    }\r\n\r\n    private view = () => {\r\n        return <Page>\r\n            {this.vForm.render()}\r\n        </Page>\r\n    }\r\n}\r\n","import _ from 'lodash';\r\nimport { observable } from 'mobx';\r\nimport { Map, Tuid, BoxId, Field, fieldDefaultValue } from '../../uq';\r\nimport { PureJSONContent } from '../tools';\r\nimport { CEntity, EntityUI } from '../CVEntity';\r\nimport { VMapMain } from './vMain';\r\nimport { VInputValues } from './inputValues';\r\n\r\nexport interface MapKey {\r\n    content: (values:any, x?:any) => JSX.Element;\r\n    valuesContent?: (values:any, x?:any) => JSX.Element;\r\n    none?: (x:any)=>string;\r\n}\r\n\r\nexport interface MapUI extends EntityUI {\r\n    CMap?: typeof CMap;\r\n    keys?: MapKey[],\r\n}\r\n\r\nexport class MapItem {\r\n    parent: MapItem;\r\n    tuid: Tuid;\r\n    box: BoxId;\r\n    isLeaf: boolean;\r\n    keyIndex:number;\r\n    children: MapItem[] = observable.array([], {deep: true});\r\n    values: any;\r\n    constructor(parent:MapItem, tuid:Tuid, box:BoxId, keyIndex:number) {\r\n        this.parent = parent;\r\n        this.tuid = tuid;\r\n        this.box = box;\r\n        this.keyIndex = keyIndex;\r\n        this.isLeaf = false;\r\n    }\r\n}\r\n\r\n/*eslint no-template-curly-in-string: 0*/\r\nexport class CMap extends CEntity<Map, MapUI> {\r\n    isFrom: boolean;\r\n    items:MapItem[];\r\n    keyFields: Field[];\r\n    keyUIs: MapKey[];\r\n\r\n    protected async internalStart() {\r\n        let {keys, schemaFrom} = this.entity;\r\n        this.isFrom = schemaFrom !== undefined;\r\n        let q = this.entity.queries.all;\r\n        let result = await q.query({});\r\n        //let data = await this.entity.unpackReturns(res);\r\n        let ret = result.ret;\r\n        let keysLen = keys.length;\r\n        this.keyUIs = _.clone(this.ui.keys || []);\r\n        this.keyFields = [];\r\n        let retFields = q.returns[0].fields;\r\n        for (let i=0; i<keysLen; i++) {\r\n            this.keyFields.push(retFields[i]);\r\n            if (i >= this.keyUIs.length) {\r\n                this.keyUIs.push({\r\n                    content: PureJSONContent,\r\n                });\r\n            }\r\n        }\r\n        this.items = observable([]);\r\n        let item:MapItem = undefined;\r\n        for (let r of ret) {\r\n            let newItem = this.addItem(item, r);\r\n            if (newItem !== undefined) {\r\n                this.items.push(newItem);\r\n                item = newItem;\r\n            }\r\n        }\r\n\r\n        await this.openVPage(this.VMapMain);\r\n    }\r\n\r\n    private createItem(parent:MapItem, tuid:Tuid, box:BoxId, keyIndex:number, values?:any) {\r\n        let item = new MapItem(parent, tuid, box, keyIndex);\r\n        if (keyIndex === this.keyFields.length - 1) {\r\n            item.isLeaf = true;\r\n            item.values = values;\r\n        }\r\n        return item;\r\n    }\r\n\r\n    addItem(item:MapItem, row:any):MapItem {\r\n        let ret:MapItem = undefined;\r\n        let keysLen = this.keyFields.length;\r\n        let p = item;\r\n        for (let i=0;i<keysLen;i++) {\r\n            let key = this.keyFields[i];\r\n            let {name} = key;\r\n            let tuidBox = key._tuid;\r\n            let val:BoxId = row[name];\r\n            if (val === undefined) break;\r\n            let {id} = val;\r\n            if (i === 0) {\r\n                if (id === 0) continue;\r\n                if (p === undefined || p.box.id !== id) {\r\n                    ret = p = this.createItem(undefined, tuidBox.tuid, val, i, row);\r\n                }\r\n                continue;\r\n            }\r\n            let {children} = p;\r\n            let len = children.length;\r\n            if (len > 0) {\r\n                let n = children[len-1];\r\n                if (n.box.id === id) {\r\n                    p = n;\r\n                    continue;\r\n                }\r\n            }\r\n            if (id > 0) {\r\n                children.push(p = this.createItem(p, tuidBox.tuid, val, i, row));\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    async searchOnKey(keyField:Field, param:any):Promise<number> {\r\n        let {_tuid} = keyField;\r\n        let {tuid, ownerField} = _tuid;\r\n        let cTuidSelect = this.cUq.cTuidSelect(tuid);\r\n        let callParam = param;\r\n        if (ownerField !== undefined) {\r\n            callParam = param[ownerField.name];\r\n            if (typeof callParam === 'object') {\r\n                callParam = callParam.id;\r\n            }\r\n        }\r\n        let ret = await cTuidSelect.call(callParam);\r\n        return _tuid.getIdFromObj(ret);\r\n    }\r\n\r\n    addClick = async(item:MapItem) => {\r\n        let {keyIndex, children} = item;\r\n        let keysLen = this.keyFields.length;\r\n        let keysLast = keysLen-1;\r\n        let idx = keyIndex + 1;\r\n        if (idx >= keysLen) return;\r\n        let keyField = this.keyFields[idx];\r\n        let kn = keyField.name;\r\n        let tuid = keyField._tuid;\r\n        let searchParam = {} as any;\r\n        let data = {} as any;\r\n        for (let p=item;p!==undefined;p=p.parent) {\r\n            let {keyIndex:ki, box} = p;\r\n            let kn = this.keyFields[ki].name;\r\n            //searchParam[kn] = data['_' + kn] = box.id;\r\n            searchParam[kn] = data[kn] = box.id;\r\n        }\r\n\r\n        let id = await this.searchOnKey(keyField, searchParam);\r\n        if (id === undefined || id <= 0) return;\r\n        tuid.useId(id);\r\n        let idBox = tuid.boxId(id);\r\n        let arr1 = {} as any;\r\n        let values:any = {};\r\n        if (keyIndex+1===keysLast) {\r\n            tuid.useId(id);\r\n            //values[kn] = arr1['_' + kn] = idBox;\r\n            values[kn] = arr1[kn] = idBox;\r\n            if (this.entity.fields.length > 0) {\r\n                let ret = await this.vCall(VInputValues, data);\r\n                for (let i in ret) {\r\n                    //values[i] = arr1['_' + i] = ret[i];\r\n                    values[i] = arr1[i] = ret[i];\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            //values[kn] = data['_' + kn] = idBox;\r\n            values[kn] = data[kn] = idBox;\r\n            for (let i=idx+1;i<keysLast;i++) {\r\n                //data['_' + this.keyFields[i].name] = 0;\r\n                data[this.keyFields[i].name] = 0;\r\n            }\r\n            // 填map的key field 0 值\r\n            //arr1['_' + this.keyFields[keysLast].name] = 0;\r\n            arr1[this.keyFields[keysLast].name] = 0;\r\n            let {fields} = this.entity;\r\n            for (let f of fields) {\r\n                let {type, null:nullable} = f;\r\n                if (!(nullable === true)) {\r\n                    //arr1['_' + f.name] = fieldDefaultValue(type);\r\n                    arr1[f.name] = fieldDefaultValue(type);\r\n                }\r\n            }\r\n        }\r\n        data.arr1 = [arr1];\r\n        await this.entity.actions.add.submit(data);\r\n        let rowIndex = children.findIndex(v => v.box.id === id);\r\n        if (rowIndex < 0) {\r\n            children.push(this.createItem(item, tuid.tuid, idBox, idx, values));\r\n        }\r\n        else {\r\n            let {fields} = this.entity;\r\n            if (fields !== undefined && fields.length > 0) {\r\n                let row = children[rowIndex];\r\n                children.splice(rowIndex, 1);\r\n                row.values = values;\r\n                /*\r\n                for (let f of fields) {\r\n                    let {name:fn} = f;\r\n                    row.values[fn] = values[fn];\r\n                }*/\r\n                children.splice(rowIndex, 0, row);\r\n            }\r\n        }\r\n        this.removeCeased();\r\n    }\r\n\r\n    removeClick = async(item:MapItem) => {\r\n        let keyField = this.keyFields[item.keyIndex];\r\n        let tuid = keyField._tuid;\r\n        let cTuidMain = this.cUq.cTuidMain(tuid.tuid);\r\n        let label = cTuidMain.getLable(tuid.tuid);\r\n        let confirmDelete:_.TemplateExecutor = \r\n            this.res.confirmDelete \r\n            || _.template('do you really want to remove ${label}?');\r\n        if (window.confirm(confirmDelete({label:label})) === false) return;\r\n        let map:Map = this.entity;\r\n        let data = {} as any;\r\n        let arr1:any[] = data['arr1'] = [];\r\n        let v0 = {} as any;\r\n        arr1.push(v0);\r\n        for (let p=item; p!==undefined;p=p.parent) {\r\n            let ki=p.keyIndex;\r\n            //v0['_'+this.keyFields[ki].name] = p.box.id;\r\n            v0[this.keyFields[ki].name] = p.box.id;\r\n        }\r\n        let len = this.keyFields.length;\r\n        for (let i=item.keyIndex+1; i<len; i++) {\r\n            let k = this.keyFields[i];\r\n            //v0['_'+k.name] = -1;\r\n            v0[k.name] = -1;\r\n        }\r\n        await map.actions.del.submit(data);\r\n        let children = item.parent.children;\r\n        let index = children.findIndex(v => v === item);\r\n        if (index >= 0) children.splice(index, 1);\r\n    }\r\n\r\n    protected get VMapMain():typeof VMapMain {return VMapMain}\r\n}\r\n","export * from './cMap';\r\nexport * from './vMain';\r\n","import * as React from 'react';\r\nimport { Page } from '../../components';\r\nimport { jsonStringify } from '../tools';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CAction, ActionUI } from './cAction';\r\nimport { Action } from '../../uq';\r\n\r\nexport class VActionMain extends VEntity<Action, ActionUI, CAction> {\r\n    protected vForm: VForm;\r\n    protected returns: any;\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        this.openPage(this.mainPage);\r\n    }\r\n\r\n    private onSubmit = async () => {\r\n        let values = this.vForm.getValues();\r\n        this.returns = await this.controller.submit(values);\r\n        this.closePage();\r\n        this.openPage(this.resultPage);\r\n    }\r\n\r\n    protected mainPage = () => {\r\n        let {label} = this.controller;\r\n        return <Page header={label}>\r\n            {this.vForm.render('mx-3 my-2')}\r\n        </Page>;\r\n    }\r\n\r\n    protected resultPage = () => {\r\n        let {label} = this.controller;\r\n        return <Page header={label} back=\"close\">\r\n            完成！\r\n            <pre>\r\n                {jsonStringify(this.returns)}\r\n            </pre>\r\n        </Page>;\r\n    }\r\n}\r\n","import { CEntity, EntityUI } from '../CVEntity';\r\nimport { Action } from '../../uq';\r\nimport { VActionMain } from './vActionMain';\r\n\r\nexport interface ActionUI extends EntityUI {\r\n    CAction?: typeof CAction;\r\n    //main: typeof VActionMain,\r\n}\r\n\r\nexport class CAction extends CEntity<Action, ActionUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VActionMain);\r\n    }\r\n\r\n    protected get VActionMain():typeof VActionMain {return VActionMain}\r\n\r\n    async submit(values:any) {\r\n        return this.entity.submit(values);\r\n    }\r\n\r\n    async submitReturns(values:any) {\r\n        return this.entity.submitReturns(values);\r\n    }\r\n}\r\n","export * from './cAction';\r\nexport * from './vActionMain';\r\n","import * as React from 'react';\r\nimport { History } from '../../uq';\r\nimport { Page } from '../../components';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CHistory, HistoryUI } from './cHistory';\r\n\r\nexport class VHistoryMain extends VEntity<History, HistoryUI, CHistory> {\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        History\r\n    </Page>;\r\n}\r\n","import { CEntity, EntityUI } from '../CVEntity';\r\nimport { History } from '../../uq';\r\nimport { VHistoryMain } from './vHistoryMain';\r\n\r\nexport interface HistoryUI extends EntityUI {\r\n    CHistory?: typeof CHistory;\r\n    main: typeof VHistoryMain,\r\n}\r\n\r\nexport class CHistory extends CEntity<History, HistoryUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VHistoryMain);\r\n    }\r\n\r\n    protected get VHistoryMain():typeof VHistoryMain {return VHistoryMain}\r\n}\r\n","export * from './cHistory';\r\nexport * from './vHistoryMain';\r\n","import * as React from 'react';\r\nimport { Pending } from '../../uq';\r\nimport { Page } from '../../components';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CPending, PendingUI } from './cPending';\r\n\r\nexport class VPendingMain extends VEntity<Pending, PendingUI, CPending> {\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        pending\r\n    </Page>;\r\n}\r\n","import { CEntity, EntityUI } from '../CVEntity';\r\nimport { Pending } from '../../uq';\r\nimport { VPendingMain } from './vPendingMain';\r\n\r\nexport interface PendingUI extends EntityUI {\r\n    CPending?: typeof CPending;\r\n    main: typeof VPendingMain,\r\n}\r\n\r\nexport class CPending extends CEntity<Pending, PendingUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VPendingMain);\r\n    }\r\n\r\n    protected get VPendingMain():typeof VPendingMain {return VPendingMain}\r\n}\r\n","export * from './cPending';\r\nexport * from './vPendingMain';\r\n","\r\nimport {setCenterToken} from './uqApi';\r\nimport {WSChannel} from './wsChannel';\r\n\r\nexport const netToken = {\r\n    set(userId:number, token:string) {\r\n        setCenterToken(userId, token);\r\n        WSChannel.setCenterToken(token);\r\n    },\r\n    clear() {\r\n        setCenterToken(0, undefined);\r\n        WSChannel.setCenterToken(undefined);\r\n    }\r\n};\r\n","import * as React from 'react';\r\n//import _ from 'lodash';\r\nimport {nav} from './nav';\r\nimport {Page} from './page';\r\nimport { User, env } from '../tool';\r\n\r\nexport abstract class Controller {\r\n    readonly res: any;\r\n    readonly x: any;\r\n    icon: string|JSX.Element;\r\n    label:string;\r\n    readonly isDev:boolean = env.isDevelopment;\r\n    get user():User {return nav.user}\r\n    get isLogined():boolean {\r\n        let {user} = nav;\r\n        if (user === undefined) return false;\r\n        return user.id > 0;\r\n    }\r\n    constructor(res:any) {\r\n        this.res = res || {};\r\n        this.x = this.res.x || {};\r\n    }\r\n\r\n    private receiveHandlerId:number;\r\n    private disposer:()=>void;\r\n\r\n    private dispose() {\r\n        // message listener的清理\r\n        nav.unregisterReceiveHandler(this.receiveHandlerId);\r\n        this.onDispose();\r\n    }\r\n\r\n    protected onDispose() {\r\n    }\r\n\r\n    protected async openVPage<C extends Controller>(vp: new (controller: C)=>VPage<C>, param?:any):Promise<void> {\r\n        await (new vp((this as any) as C)).open(param);\r\n    }\r\n\r\n    protected renderView<C extends Controller>(view: new (controller: C)=>View<C>, param?:any) {\r\n        return (new view((this as any) as C)).render(param);\r\n    }\r\n\r\n    async event(type:string, value:any) {\r\n        await this.onEvent(type, value);\r\n    }\r\n\r\n    protected async onEvent(type:string, value:any) {\r\n    }\r\n\r\n    protected msg(text:string) {\r\n        alert(text);\r\n    }\r\n    protected errorPage(header:string, err:any) {\r\n        this.openPage(<Page header=\"App error!\">\r\n            <pre>\r\n                {typeof err === 'string'? err : err.message}\r\n            </pre>\r\n        </Page>);\r\n    }\r\n\r\n    protected onMessage(message:any):Promise<void> {\r\n        return;\r\n    }\r\n\r\n    private onMessageReceive = async (message:any):Promise<void> => {\r\n        await this.onMessage(message);\r\n    }\r\n\r\n    protected async beforeStart():Promise<boolean> {\r\n        /*\r\n        console.log('this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);');\r\n        this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);\r\n        console.log('return true');\r\n        */\r\n        return true;\r\n    }\r\n    protected registerReceiveHandler() {\r\n        this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);\r\n    }\r\n\r\n    protected abstract internalStart(param?:any, ...params:any[]):Promise<void>;\r\n    async start(param?:any, ...params:any[]):Promise<void> {\r\n        this.disposer = this.dispose.bind(this);\r\n        this.registerReceiveHandler();\r\n        let ret = await this.beforeStart();\r\n        if (ret === false) return;\r\n        await this.internalStart(param, ...params);\r\n    }\r\n\r\n    get isCalling():boolean {return this._resolve_$ !== undefined}\r\n\r\n    private _resolve_$:((value:any) => void)[];\r\n    async call<T>(param?:any, ...params:any[]):Promise<T> {\r\n        if (this._resolve_$ === undefined) this._resolve_$ = [];\r\n        return new Promise<T> (async (resolve, reject) => {\r\n            this._resolve_$.push(resolve);\r\n            await this.start(param, ...params);\r\n        });\r\n    }\r\n\r\n    async vCall<C extends Controller>(vp: new (controller: C)=>VPage<C>, param?:any):Promise<any> {\r\n        if (this._resolve_$ === undefined) this._resolve_$ = [];\r\n        return new Promise<any> (async (resolve, reject) => {\r\n            this._resolve_$.push(resolve);\r\n            await (new vp(this as any)).open(param);\r\n        });\r\n    }\r\n\r\n    returnCall(value:any) {\r\n        if (this._resolve_$ === undefined) return;\r\n        let resolve = this._resolve_$.pop();\r\n        if (resolve === undefined) {\r\n            alert('the Controller call already returned, or not called');\r\n            return;\r\n        }\r\n        resolve(value);\r\n    }\r\n\r\n    openPage(page:JSX.Element) {\r\n        nav.push(page, this.disposer);\r\n        this.disposer = undefined;\r\n    }\r\n\r\n    replacePage(page:JSX.Element) {\r\n        nav.replace(page, this.disposer);\r\n        this.disposer = undefined;\r\n    }\r\n\r\n    backPage() {\r\n        nav.back();\r\n    }\r\n\r\n    closePage(level?:number) {\r\n        nav.pop(level);\r\n    }\r\n\r\n    ceasePage(level?:number) {\r\n        nav.ceaseTop(level);\r\n    }\r\n\r\n    removeCeased() {\r\n        nav.removeCeased();\r\n    }\r\n\r\n    regConfirmClose(confirmClose: ()=>Promise<boolean>) {\r\n        nav.regConfirmClose(confirmClose);\r\n    }\r\n}\r\n\r\n\r\nexport abstract class View<C extends Controller> {\r\n    protected controller: C;\r\n    protected readonly res: any;\r\n    protected readonly x: any;\r\n\r\n    constructor(controller: C) {\r\n        this.controller = controller;\r\n        this.res = controller.res;\r\n        this.x = controller.x;\r\n    }\r\n\r\n    protected get isDev() {return  env.isDevelopment}\r\n\r\n    abstract render(param?:any): JSX.Element;\r\n\r\n    protected renderVm(vm: new (controller: C)=>View<C>, param?:any) {\r\n        return (new vm(this.controller)).render(param);\r\n    }\r\n\r\n    protected async openVPage(vp: new (controller: C)=>VPage<C>, param?:any):Promise<void> {\r\n        await (new vp(this.controller)).open(param);\r\n    }\r\n\r\n    protected async event(type:string, value?:any) {\r\n        /*\r\n        if (this._resolve_$_ !== undefined) {\r\n            await this._resolve_$_({type:type, value:value});\r\n            return;\r\n        }*/\r\n        await this.controller.event(type, value);\r\n    }\r\n\r\n    async vCall<C extends Controller>(vp: new (controller: C)=>VPage<C>, param?:any):Promise<any> {\r\n        return await this.controller.vCall(vp, param);\r\n    }\r\n\r\n    protected returnCall(value:any) {\r\n        this.controller.returnCall(value);\r\n    }\r\n\r\n    protected openPage(view: React.StatelessComponent<any>, param?:any) {\r\n        this.controller.openPage(React.createElement(view, param));\r\n    }\r\n\r\n    protected replacePage(view: React.StatelessComponent<any>, param?:any) {\r\n        this.controller.replacePage(React.createElement(view, param));\r\n    }\r\n\r\n    protected openPageElement(page: JSX.Element) {\r\n        this.controller.openPage(page);\r\n    }\r\n\r\n    protected replacePageElement(page: JSX.Element) {\r\n        this.controller.replacePage(page);\r\n    }\r\n\r\n    protected backPage() {\r\n        this.controller.backPage();\r\n    }\r\n\r\n    protected closePage(level?:number) {\r\n        this.controller.closePage(level);\r\n    }\r\n\r\n    protected ceasePage(level?:number) {\r\n        this.controller.ceasePage(level);\r\n    }\r\n\r\n    protected removeCeased() {\r\n        this.controller.removeCeased();\r\n    }\r\n\r\n    protected regConfirmClose(confirmClose: ()=>Promise<boolean>) {\r\n        this.controller.regConfirmClose(confirmClose);\r\n    }\r\n}\r\n\r\nexport abstract class VPage<C extends Controller> extends View<C> {\r\n    abstract open(param?:any):Promise<void>;\r\n\r\n    render(param?:any):JSX.Element {return null;}\r\n}\r\n\r\nexport type TypeVPage<C extends Controller> = new (controller: C)=>VPage<C>;\r\n\r\n","export * from './schema';\r\nexport * from './uiSchema';\r\nexport * from './toUiSelectItems';","\r\nexport const mobileRegex = /^[0-9]*$/;\r\nexport const emailRegex = /\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/;\r\n// /^([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+@([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+\\.[a-zA-Z]{2,3}$/\r\n\r\nexport const EmailFieldRule = (value:any): string|string[] => {\r\n    if (emailRegex.test(value as string) === false) return '电子邮件格式错误';\r\n}\r\n\r\nexport const MobileFieldRule = (value:any): string|string[] => {\r\n    if (emailRegex.test(value as string) === false) return '手机格式错误';\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nexport interface DropdownAction {\r\n    icon?: string;\r\n    caption?: string;\r\n    action?: () => void;\r\n}\r\n\r\nexport interface DropdownActionsProps {\r\n    icon?: string;\r\n    actions: DropdownAction[];\r\n    isRight?: boolean;\r\n}\r\n\r\nexport interface DropdownActionsState {\r\n    dropdownOpen: boolean;\r\n}\r\n\r\nexport class DropdownActions extends React.Component<DropdownActionsProps, DropdownActionsState> {\r\n    private menu: HTMLDivElement;\r\n    private button: HTMLElement;\r\n    constructor(props:DropdownActionsProps) {\r\n        super(props);\r\n        this.state = {\r\n            dropdownOpen: false\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        document.addEventListener('click', this.handleDocumentClick);\r\n        document.addEventListener('touchstart', this.handleDocumentClick);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('click', this.handleDocumentClick);\r\n        document.removeEventListener('touchstart', this.handleDocumentClick);\r\n    }\r\n\r\n    private handleDocumentClick = (evt:any) => {\r\n        if (this.state.dropdownOpen === false) return;\r\n        if (this.button && this.button.contains(evt.target)) return;\r\n        if (!this.menu) return;\r\n        //if (!this.menu.contains(evt.target)) \r\n        this.toggle();\r\n    }\r\n\r\n    private toggle = () => {\r\n        this.setState({\r\n            dropdownOpen: !this.state.dropdownOpen\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let {icon, actions, isRight} = this.props;\r\n        if (isRight === undefined) isRight = true;\r\n        let hasIcon = actions.some(v => v.icon!==undefined);\r\n        let {dropdownOpen} = this.state;\r\n        //isOpen={this.state.dropdownOpen} toggle={this.toggle}\r\n        return <div className=\"dropdown\">\r\n            <button ref={v=>this.button=v} className=\"cursor-pointer dropdown-toggle btn btn-sm\"\r\n                data-toggle=\"dropdown\"\r\n                aria-expanded={dropdownOpen}\r\n                onClick={this.toggle}>\r\n                <i className={classNames('fa', 'fa-'+(icon||'ellipsis-v'))} />\r\n            </button>\r\n            <div ref={v => this.menu=v} className={classNames({\"dropdown-menu\":true, \"dropdown-menu-right\":isRight, \"show\":dropdownOpen})}>\r\n                {\r\n                    actions.map((v,index) => {\r\n                        let {icon, caption, action} = v;\r\n                        if (icon === undefined && caption === undefined) \r\n                            return <div className=\"dropdown-divider\" />;\r\n                        let i:any;\r\n                        if (hasIcon === true) {\r\n                            if (icon !== undefined) icon = 'fa-' + icon;\r\n                            i = <><i className={classNames('fa', icon, 'fa-fw')} aria-hidden={true}></i>&nbsp; </>;\r\n                        }\r\n                        if (action === undefined) \r\n                            return <h6 className=\"dropdown-header\">{i} {caption}</h6>;\r\n                        // eslint-disable-next-line\r\n                        return <a className=\"dropdown-item\" key={index} href=\"#/\" onClick={(evt:React.MouseEvent<HTMLAnchorElement>)=>{ evt.preventDefault();action()}}>{i} {caption}</a>\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\n/*\r\nexport class DropdownActions extends React.Component<DropdownActionsProps, DropdownActionsState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dropdownOpen: false\r\n        };\r\n    }\r\n    private toggle = () => {\r\n        this.setState({\r\n            dropdownOpen: !this.state.dropdownOpen\r\n        });\r\n    }\r\n    render() {\r\n        let {icon, actions, isRight} = this.props;\r\n        if (isRight === undefined) isRight = true;\r\n        let hasIcon = actions.some(v => v.icon!==undefined);\r\n        return <UncontrolledButtonDropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\r\n            <DropdownToggle caret={true} size=\"sm\" className=\"cursor-pointer\">\r\n                <i className={classNames('fa', 'fa-'+(icon||'ellipsis-v'))} />\r\n            </DropdownToggle>\r\n            <DropdownMenu right={isRight}>\r\n                {actions.map((v,index) => {\r\n                    let {icon, caption, action} = v;\r\n                    if (icon === undefined && caption === undefined) \r\n                        return <div className=\"dropdown-divider\" />;\r\n                    let i;\r\n                    if (hasIcon === true) {\r\n                        if (icon !== undefined) icon = 'fa-' + icon;\r\n                        i = <><i className={classNames('fa', icon, 'fa-fw')} aria-hidden={true}></i>&nbsp; </>;\r\n                    }\r\n                    if (action === undefined) \r\n                        return <h6 className=\"dropdown-header\">{i} {caption}</h6>;\r\n                    return <DropdownItem key={index} onClick={action}>{i} {caption}</DropdownItem>\r\n                })}\r\n            </DropdownMenu>\r\n        </UncontrolledButtonDropdown>\r\n    }\r\n}\r\n*/","import * as React from 'react';\r\n\r\nexport interface EasyDateProps {\r\n    date: Date | number;\r\n}\r\n\r\nfunction renderDate(vDate:Date|number, withTime:boolean) {\r\n    if (!vDate) return null;\r\n    let date: Date;\r\n    switch (typeof vDate) {\r\n        default: date = vDate as Date; break;\r\n        case 'string': date = new Date(vDate); break;\r\n        case 'number': date = new Date((vDate as number)*1000); break;\r\n    }\r\n\r\n    let now = new Date();\r\n    let tick:number, nDate:number, _date:number, month:number, year:number, hm:string, nowYear:number;\r\n    let d = date;\r\n    tick = now.getTime() - d.getTime();\r\n    let hour=d.getHours(), minute=d.getMinutes();\r\n    nDate=now.getDate();\r\n    _date=d.getDate();\r\n    month=d.getMonth()+1;\r\n    year=d.getFullYear();\r\n    nowYear = now.getFullYear();\r\n    hm = withTime === true? ' ' + hour + ((minute<10?':0':':') + minute) : '';\r\n\r\n    if (tick < -24*3600*1000) {\r\n        if (year === nowYear)\r\n            return month+'月'+_date+'日' + hm;\r\n        else\r\n            return year+'年'+month+'月'+_date+'日' + hm;\r\n    }\r\n    if (tick < 24*3600*1000) {\r\n        return _date!==nDate? \r\n            (tick < 0? '明天 ' : '昨天 ') + hm \r\n            : withTime===true? hm : '今天';\r\n    }\r\n    if (year === nowYear) {\r\n        return month+'月'+_date+'日';\r\n    }\r\n    return year+'年'+month+'月'+_date+'日';\r\n}\r\n\r\n\r\nexport class EasyDate extends React.Component<EasyDateProps> {\r\n    render() {\r\n        return renderDate(this.props.date, false);\r\n    }\r\n}\r\n\r\nexport class EasyTime extends React.Component<EasyDateProps> {\r\n    render() {\r\n        return renderDate(this.props.date, true);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Image } from '.';\r\n\r\nexport interface MediaProps {\r\n    icon: string;\r\n    main: string|JSX.Element;\r\n    discription?: string | JSX.Element;\r\n    px?: number;\r\n    py?: number;\r\n}\r\n\r\nexport class Media extends React.Component<MediaProps> {\r\n    render() {\r\n        let {icon, main, discription, px, py} = this.props;\r\n        let disp:any;\r\n        if (typeof discription === 'string')\r\n            disp = <div>{discription}</div>;\r\n        else\r\n            disp = discription;\r\n        let cn = classNames(\r\n            'media', \r\n            px===undefined? 'px-0':'px-'+px, \r\n            py===undefined? 'py-2':'py-'+py);\r\n        return <div className={cn}>\r\n            <Image className=\"mr-3 w-4c h-4c\" src={icon} />\r\n            <div className=\"media-body\">\r\n                <h5 className=\"mt-0\">{main}</h5>\r\n                {disp}\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\n\r\nexport interface SearchBoxProps {\r\n    className?: string;\r\n    label?: string;\r\n    initKey?: string;\r\n    placeholder?: string;\r\n    buttonText?: string;\r\n    maxLength?: number;\r\n    size?: 'sm' | 'md' | 'lg';\r\n    inputClassName?: string;\r\n    onSearch: (key:string)=>Promise<void>;\r\n    onFocus?: ()=>void;\r\n    allowEmptySearch?: boolean;\r\n}\r\n\r\n/*\r\nexport interface SearchBoxState {\r\n    disabled: boolean;\r\n}*/\r\n\r\nexport class SearchBox extends React.Component<SearchBoxProps> { //}, SearchBoxState> {\r\n    private input: HTMLInputElement;\r\n    private key: string = null;\r\n    @observable private disabled: boolean;\r\n\r\n    private onChange = (evt: React.ChangeEvent<any>) => {\r\n        this.key = evt.target.value;\r\n        if (this.key !== undefined) {\r\n            this.key = this.key.trim();\r\n            if (this.key === '') this.key = undefined;\r\n        }\r\n        if (this.props.allowEmptySearch !== true) {\r\n            this.disabled = !this.key;\r\n        }\r\n    }\r\n    private onSubmit = async (evt: React.FormEvent<any>) => {\r\n        evt.preventDefault();\r\n        if (this.key === null) this.key = this.props.initKey || '';\r\n        if (this.props.allowEmptySearch !== true) {\r\n            if (!this.key) return;\r\n            if (this.input) this.input.disabled = true;\r\n        }\r\n        await this.props.onSearch(this.key);\r\n        if (this.input) this.input.disabled = false;\r\n    }\r\n    clear() {\r\n        if (this.input) this.input.value = '';\r\n    }\r\n    render() {\r\n        let {className, inputClassName, onFocus,\r\n            label, placeholder, buttonText, maxLength, size} = this.props;\r\n        let inputSize:string;\r\n        switch (size) {\r\n            default:\r\n            case 'sm': inputSize = 'input-group-sm'; break;\r\n            case 'md': inputSize = 'input-group-md'; break;\r\n            case 'lg': inputSize = 'input-group-lg'; break;\r\n        }\r\n        let lab:any;\r\n        if (label !== undefined) lab = <label className=\"input-group-addon\">{label}</label>;\r\n        return <form className={className} onSubmit={this.onSubmit} >\r\n            <div className={classNames(\"input-group\", inputSize)}>\r\n                {lab}\r\n                <input ref={v=>this.input=v} onChange={this.onChange}\r\n                    type=\"text\"\r\n                    name=\"key\"\r\n                    onFocus={onFocus}\r\n                    className={classNames('form-control', inputClassName || 'border-primary')}\r\n                    placeholder={placeholder}\r\n                    defaultValue={this.props.initKey}\r\n                    maxLength={maxLength} />\r\n                <div className=\"input-group-append\">\r\n                    <button className=\"btn btn-primary\"\r\n                        type=\"submit\"\r\n                        disabled={this.disabled}>\r\n                        <i className='fa fa-search' />\r\n                        <i className=\"fa\"/>\r\n                        {buttonText}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </form>;\r\n    }\r\n}\r\n","import { UqMan, TuidModify } from '../uqMan';\r\nimport { Tuid } from \"./tuid\";\r\n\r\ninterface Modify {\r\n    id: number;\r\n    entity: string;\r\n    key: string;\r\n}\r\n\r\nexport class TuidsCache {\r\n    private readonly uq: UqMan;\r\n    //private readonly uqApi: UqApi;\r\n    //private readonly tuids: {[name:string]: Tuid};\r\n    private modifyMax: TuidModify;\r\n    private cacheTimer: any;\r\n    constructor(uq: UqMan) {\r\n        this.uq = uq;\r\n        //this.uqApi = uq.uqApi;\r\n        //this.tuids = uq.tuids;\r\n    }\r\n\r\n    cacheTuids(defer:number) {\r\n        this.clearCacheTimer();\r\n        this.cacheTimer = setTimeout(this.loadIds, defer);\r\n    }\r\n    private clearCacheTimer() {\r\n        if (this.cacheTimer === undefined) return;\r\n        clearTimeout(this.cacheTimer);\r\n        this.cacheTimer = undefined;\r\n    }\r\n    private loadIds = () => {\r\n        this.clearCacheTimer();\r\n        let {tuids} = this.uq;\r\n        for (let i in tuids) {\r\n            let tuid = tuids[i];\r\n            tuid.cacheIds();\r\n        }\r\n    }\r\n    \r\n    pullModify(modifyMax:number) {\r\n        if (modifyMax === undefined) return;\r\n        let now = Math.floor(Date.now() / 1000);\r\n        if (this.modifyMax === undefined) {\r\n            this.modifyMax = this.uq.localModifyMax.get();\r\n            if (this.modifyMax === undefined) {\r\n                this.modifyMax = {\r\n                    max: modifyMax,\r\n                    seconds: now,\r\n                };\r\n                this.uq.localModifyMax.set(this.modifyMax);\r\n            }\r\n        }\r\n        let {max, seconds} = this.modifyMax;\r\n        let lockGap = 3600;\r\n        if (now - seconds < lockGap) return;\r\n        if (modifyMax <= max) return;\r\n        let tuidCached:string[] = [];\r\n        let {tuids} = this.uq;\r\n        for (let i in tuids) {\r\n            //if (tuids[i].cached === true) \r\n            tuidCached.push(i);\r\n        }\r\n        if (tuidCached.length === 0) return;\r\n        this.modifyMax.seconds = now;\r\n        this.innerPullModify(tuidCached.join('\\t'));\r\n    }\r\n\r\n    private async innerPullModify(tuidLists:string):Promise<void> {\r\n        let {uqApi, tuids} = this.uq;\r\n        let {max} = this.modifyMax;\r\n        let ret:{queue:Modify[], queueMax:number} = await uqApi.queueModify(max, 30, tuidLists);\r\n        let group:{[entity:string]: {tuid:Tuid; ids: string[]}} = {};\r\n        let modifyMax:number = 0;\r\n        for (let modify of ret.queue) {\r\n            let {id, entity, key} = modify;\r\n            let tuid = tuids[entity];\r\n            if (tuid === undefined) continue;\r\n            let item = group[entity];\r\n            if (item === undefined) {\r\n                item = group[entity] = {tuid: tuid, ids:[]};\r\n            }\r\n            item.ids.push(key);\r\n            if (id > modifyMax) modifyMax = id;\r\n        }\r\n        for (let i in group) {\r\n            let {tuid, ids} = group[i];\r\n            await tuid.modifyIds(ids);\r\n        }\r\n        let now = Math.floor(Date.now() / 1000);\r\n        this.modifyMax = {\r\n            max: modifyMax,\r\n            seconds: now,\r\n        }\r\n        this.uq.localModifyMax.set(this.modifyMax);\r\n    }\r\n}\r\n","import { LocalMap, LocalCache, env } from '../tool';\r\nimport { UqData } from '../net';\r\nimport { UqMan } from './uqMan';\r\nimport { TuidImport, TuidInner } from './tuid';\r\n\r\nexport interface TVs {\r\n    [uqName:string]: {\r\n        [tuidName: string]: (values: any) => JSX.Element;\r\n    }\r\n}\r\n\r\nexport class UQsMan {\r\n    private collection: {[uqName: string]: UqMan};\r\n    private readonly tvs: TVs;\r\n\r\n    readonly name: string;\r\n    readonly appOwner: string;\r\n    readonly appName: string;\r\n    readonly localMap: LocalMap;\r\n    readonly localData: LocalCache;\r\n    id: number;\r\n\r\n    constructor(tonvaAppName:string, tvs:TVs) {\r\n        this.tvs = tvs || {};\r\n        this.buildTVs();\r\n        this.collection = {};\r\n        let parts = tonvaAppName.split('/');\r\n        if (parts.length !== 2) {\r\n            throw new Error('tonvaApp name must be / separated, owner/app');\r\n        }\r\n        this.appOwner = parts[0];\r\n        this.appName = parts[1];\r\n        this.localMap = env.localDb.map(tonvaAppName);\r\n        this.localData = this.localMap.child('uqData');\r\n    }\r\n\r\n    // to be removed in the future\r\n    addUq(uq: UqMan) {\r\n        this.collection[uq.name] = uq;\r\n    }\r\n\r\n    private buildTVs() {\r\n        for (let i in this.tvs) {\r\n            let uqTVs = this.tvs[i];\r\n            if (uqTVs === undefined) continue;\r\n            let l = i.toLowerCase();\r\n            if (l === i) continue;\r\n            this.tvs[l] = uqTVs;\r\n            for (let j in uqTVs) {\r\n                let en = uqTVs[j];\r\n                if (en === undefined) continue;\r\n                let lj = j.toLowerCase();\r\n                if (lj === j) continue;\r\n                uqTVs[lj] = en;\r\n            }\r\n        }\r\n    }\r\n\r\n    async init(uqsData:UqData[]):Promise<void> {\r\n        let promiseInits: PromiseLike<void>[] = [];\r\n        for (let uqData of uqsData) {\r\n            let {uqOwner, uqName} = uqData;\r\n            let uqFullName = uqOwner + '/' + uqName;\r\n            //let uqUI = this.ui.uqs[uqFullName] as UqUI || {};\r\n            //let cUq = this.newCUq(uqData, uqUI);\r\n            //this.cUqCollection[uqFullName] = cUq;\r\n            //this.uqs.addUq(cUq.uq);\r\n            let uq = new UqMan(this, uqData, undefined, this.tvs[uqFullName] || this.tvs[uqName]);\r\n            this.collection[uqFullName] = uq;\r\n            let lower = uqFullName.toLowerCase();\r\n            if (lower !== uqFullName) {\r\n                this.collection[lower] = uq;\r\n            }\r\n            promiseInits.push(uq.init());\r\n        }\r\n        await Promise.all(promiseInits);\r\n    }\r\n\r\n    async load(): Promise<string[]> {\r\n        let retErrors:string[] = [];\r\n        let promises: PromiseLike<string>[] = [];\r\n        for (let i in this.collection) {\r\n            let uq = this.collection[i];\r\n            promises.push(uq.loadEntities());\r\n        }\r\n        let results = await Promise.all(promises);\r\n        for (let result of results)\r\n        {\r\n            let retError = result; // await cUq.loadSchema();\r\n            if (retError !== undefined) {\r\n                retErrors.push(retError);\r\n                continue;\r\n            }\r\n        }\r\n        return retErrors;\r\n    }\r\n\r\n    buildUQs(): any {\r\n        let uqs:any = {};\r\n        for (let i in this.collection) {\r\n            let uqMan = this.collection[i];\r\n            //let n = uqMan.name;\r\n            let uqName = uqMan.uqName;\r\n            let l = uqName.toLowerCase();\r\n            let entities = uqMan.entities;\r\n            let keys = Object.keys(entities);\r\n            for (let key of keys) {\r\n                let entity = entities[key];\r\n                let {name, sName} = entity;\r\n                if (name !== sName) entities[sName] = entity;\r\n            }\r\n            uqs[i] = entities;\r\n            uqs[uqName] = entities;\r\n            if (l !== uqName) uqs[l] = entities;\r\n        }\r\n        return uqs;\r\n    }\r\n\r\n    setTuidImportsLocal():string[] {\r\n        let ret:string[] = [];\r\n        for (let i in this.collection) {\r\n            let uq = this.collection[i];\r\n            for (let tuid of uq.tuidArr) {\r\n                if (tuid.isImport === true) {\r\n                    let error = this.setInner(tuid as TuidImport);\r\n                    if (error) ret.push(error);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private setInner(tuidImport: TuidImport):string {\r\n        let {from} = tuidImport;\r\n        let fromName = from.owner + '/' + from.uq;\r\n        let uq = this.collection[fromName];\r\n        if (uq === undefined) {\r\n            //debugger;\r\n            return `setInner(tuidImport: TuidImport): uq ${fromName} is not loaded`;\r\n        }\r\n        let iName = tuidImport.name\r\n        let tuid = uq.tuid(iName);\r\n        if (tuid === undefined) {\r\n            //debugger;\r\n            return `setInner(tuidImport: TuidImport): uq ${fromName} has no Tuid ${iName}`;\r\n        }\r\n        if (tuid.isImport === true) {\r\n            //debugger;\r\n            return `setInner(tuidImport: TuidImport): uq ${fromName} Tuid ${iName} is import`;\r\n        }\r\n        tuidImport.setFrom(tuid as TuidInner);\r\n    }\r\n}\r\n","export * from './app';\r\nexport * from './startApp';\r\nexport * from './cUq';\r\nexport * from './action';\r\nexport * from './tuid';\r\nexport * from './sheet';\r\nexport * from './query';\r\nexport * from './map';\r\nexport * from './history';\r\nexport * from './pending';\r\nexport * from './form/viewModel';\r\nexport * from './form';\r\nexport * from './formUI';\r\nexport * from './ControllerUq';\r\nexport * from './CVEntity';\r\nexport * from './link';\r\nexport * from './icons';\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {FormView, FormProps} from './formView';\r\n\r\nexport function tonvaDebug() {\r\n    let a = 0;\r\n}\r\n\r\nexport interface TonvaFormProps extends FormProps {\r\n    className?: string;\r\n    initValues?: any;\r\n}\r\n\r\n@observer \r\nexport class TonvaForm extends React.Component<TonvaFormProps, {}> {\r\n    formView: FormView;\r\n    constructor(props:TonvaFormProps) {\r\n        super(props);\r\n        this.formView = new FormView(this.props);\r\n    }\r\n    componentWillMount() {\r\n        this.formView.setInitValues(this.props.initValues);\r\n    }\r\n    debug() {\r\n        let s = null;\r\n    }\r\n    render() {\r\n        let {className, children, initValues} = this.props;\r\n        return <div className={className}>\r\n            {\r\n                children === undefined? \r\n                    this.formView.render() : \r\n                    <form onSubmit={this.formView.onSubmit}>{children}</form>\r\n            }\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport className from 'classnames';\r\nimport {FormProps, FormRow, SubmitResult, FormView, TonvaForm} from '../form';\r\n\r\nexport interface Step {\r\n    formRows: FormRow[];\r\n    next: undefined | string | ((values:any) => string);    // 返回下一步的step名称或者直接就是名称\r\n    ex?: any;                                   // 每一步额外的参数\r\n}\r\n\r\nexport interface MultiStepProps {\r\n    className?: string;\r\n    header?: (step:Step, num:number) => JSX.Element; //name: step name, num: 第几步，1开始\r\n    footer?: (step:Step, num:number) => JSX.Element; //name: step name, num: 第几步，1开始\r\n    steps: {[name:string]: Step};\r\n    first: string;         // 第一步的名字\r\n    onSubmit: (values:any) => Promise<SubmitResult|undefined>;\r\n    submitButton?: string|JSX.Element;\r\n}\r\n\r\nexport interface StepView {\r\n    stepName: string;\r\n    step: Step;\r\n    props: FormProps;\r\n    //view: JSX.Element;\r\n}\r\nexport interface MultiStepState {\r\n    //num: number;\r\n    //step: Step;\r\n    //formView: FormView;\r\n    topView: StepView;\r\n    stepViews: StepView[];\r\n}\r\n\r\nexport class MultiStep extends React.Component<MultiStepProps, MultiStepState> {\r\n    private values: any = {};\r\n    private stepViews: StepView[] = [];\r\n    private topView: StepView;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            topView: undefined,\r\n            stepViews: [],\r\n        }\r\n        this.onPrev = this.onPrev.bind(this);\r\n        this.onNext = this.onNext.bind(this);\r\n    }\r\n    \r\n    private setStep(stepName: string) {\r\n        let step = this.props.steps[stepName];\r\n        if (step === undefined) return; //throw new Error('Unknown step name: ' + stepName);\r\n        if (this.topView !== undefined) this.stepViews.push(this.topView);\r\n        let otherButton, onOther;\r\n        if (this.stepViews.length > 0) {\r\n            otherButton = <ButtonConten prefix=\"undo\" text=\"上一步\" />;\r\n            onOther = this.onPrev;\r\n        }\r\n        let {header, footer} = this.props;\r\n        let btnContent = step.next === undefined?\r\n            {prefix: 'cloud-upload', text: this.props.submitButton || '提交'} :\r\n            {suffix: 'arrow-right', text: '下一步'}\r\n        let formProps = {\r\n            formRows: step.formRows,\r\n            submitButton: <ButtonConten {...btnContent} />,\r\n            onSubmit: this.onNext,\r\n            otherButton: otherButton,\r\n            onOther: onOther,\r\n        };\r\n        let num = this.stepViews.length + 1;\r\n        this.topView = {\r\n            stepName: stepName,\r\n            step: step,\r\n            props: formProps,\r\n        };\r\n        this.setState({\r\n            topView: this.topView,\r\n            stepViews: this.stepViews\r\n        });\r\n    }\r\n    componentWillMount() {\r\n        this.setStep(this.props.first);\r\n    }\r\n    private onPrev(values:any) {\r\n        _.assign(this.values, values);\r\n        this.topView = this.stepViews.pop();\r\n        this.setState({\r\n            topView: this.topView,\r\n            stepViews: this.stepViews\r\n        });\r\n    }\r\n    private onNext(values:any): Promise<SubmitResult|undefined> {\r\n        _.assign(this.values, values);\r\n        //let {num, step} = this.state;\r\n        let {next} = this.topView.step;\r\n        if (next === undefined) {\r\n            return this.props.onSubmit(this.values)\r\n        }\r\n        let nextStepName:string;\r\n        if (typeof next === 'string') {\r\n            nextStepName = next;\r\n        }\r\n        else {\r\n            nextStepName = next(this.values);\r\n        }\r\n        this.setStep(nextStepName);\r\n    }\r\n    render() {\r\n        let {className, header, footer} = this.props;\r\n        let {topView, stepViews} = this.state;\r\n        let {stepName, step} = topView;\r\n        let hidden = {visibility: 'hidden'};\r\n        let num = stepViews.length + 1;\r\n        return <div className={className}>\r\n            <div>\r\n                {header && header(step, num)}\r\n                <TonvaForm key={stepName} initValues={this.values} {...topView.props} />\r\n                {footer && footer(step, num)}\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst ButtonConten = (props:{prefix?:string, text?:string|JSX.Element, suffix?:string}) => {\r\n    let {prefix, text, suffix} = props;\r\n    let pIcon, sIcon;\r\n    if (prefix !== undefined) pIcon = <i className={className('fa', 'fa-' + prefix)} />;\r\n    if (suffix !== undefined) sIcon = <i className={className('fa', 'fa-' + suffix)} />;\r\n    return <React.Fragment>{pIcon} {props.text} {sIcon}</React.Fragment>;\r\n}\r\n    \r\n","import _ from 'lodash';\r\nimport { Context } from '../context';\r\nimport { FormRes } from '../formRes';\r\n\r\nexport abstract class Rule {\r\n    abstract check(defy:string[], value:any):void;\r\n}\r\n\r\nexport type ContextRule = (context:Context)=>{[target:string]:string[]|string} | string[] | string;\r\nexport type FieldRule = (value:any) => string[] | string;\r\n\r\nexport class RuleCustom extends Rule {\r\n    private func: FieldRule;\r\n    constructor(func: FieldRule) {\r\n        super();\r\n        this.func = func;\r\n    }\r\n    check(defy:string[], value:any) {\r\n        let ret = this.func(value);\r\n        if (ret === undefined) return;\r\n        switch (typeof ret) {\r\n            case 'undefined': return;\r\n            case 'string': defy.push(ret as string); return;\r\n            default: defy.push(...ret); return;\r\n        }        \r\n    }\r\n}\r\n\r\nexport abstract class RulePredefined extends Rule {\r\n    protected res: FormRes;\r\n    constructor(res: FormRes) {\r\n        super();\r\n        this.res = res;\r\n    }\r\n}\r\n\r\nexport class RuleRequired extends RulePredefined {\r\n    check(defy:string[], value:any) {\r\n        switch (typeof value) {\r\n            default:\r\n            case 'boolean': return;\r\n            case 'object':\r\n                if (value !== null) return;\r\n                break;\r\n            case 'string':\r\n                if ((value as string).trim().length > 0) return;\r\n                break;\r\n            case 'number':\r\n                if (isNaN(value as number) === false) return;\r\n                break;\r\n            case 'undefined':\r\n                break;\r\n        }\r\n        defy.push(this.res.required);\r\n    }\r\n}\r\n\r\nexport class RuleNum extends RulePredefined {\r\n    private minMsg: _.TemplateExecutor;\r\n    private maxMsg: _.TemplateExecutor;\r\n    protected min: number;\r\n    protected max: number\r\n    constructor(res: FormRes, min?: number, max?: number) {\r\n        super(res);\r\n        this.minMsg = _.template(res.min);\r\n        this.maxMsg = _.template(res.max);\r\n        this.min = min;\r\n        this.max = max;\r\n    }\r\n    check(defy:string[], value:any) {\r\n        if (value === undefined || value === null) return;\r\n        let n = Number(value);\r\n        if (isNaN(n) === true) {\r\n            defy.push(this.res.number);\r\n        }\r\n        else {\r\n            this.checkMore(defy, n);\r\n        }\r\n    }\r\n\r\n    protected checkMore(defy:string[], value: number) {\r\n        if (this.min !== undefined && Number(value) < this.min) {\r\n            defy.push(this.minMsg({min:this.min}));\r\n        }\r\n        if (this.max !== undefined && Number(value) > this.max) {\r\n            defy.push(this.maxMsg({max:this.max}));\r\n        }\r\n    }\r\n}\r\n\r\nexport class RuleInt extends RuleNum {\r\n    protected checkMore(defy:string[], n: number) {\r\n        super.checkMore(defy, n);\r\n        if (Number.isInteger(n) === false) {\r\n            defy.push(this.res.integer);\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { UiItem, ChangingHandler, ChangedHandler } from '../../schema';\r\nimport { FieldProps } from '../field';\r\nimport { Context } from '../context';\r\nimport { ItemSchema } from '../../schema';\r\nimport { Rule, RuleRequired, RuleCustom, FieldRule } from '../rules';\r\nimport { computed, observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport abstract class Widget {\r\n    name: string;\r\n    protected context: Context;\r\n    protected fieldProps:FieldProps;\r\n    protected children: React.ReactNode;\r\n    protected _itemSchema: ItemSchema;\r\n    protected _ui: UiItem;\r\n    protected defaultValue: any;\r\n    protected value: any;\r\n    protected rules: Rule[];\r\n    @observable errors: string[] = [];\r\n    @observable protected contextErrors: string[] = [];\r\n    @computed protected get hasError():boolean {return (this.errors.length + this.contextErrors.length)>0}\r\n    protected readOnly:boolean;\r\n    protected disabled:boolean;\r\n    @observable visible:boolean;\r\n\r\n    constructor(context:Context, itemSchema:ItemSchema, fieldProps:FieldProps, children: React.ReactNode) {\r\n        this.context = context;\r\n        let {name} = itemSchema;\r\n        this.name = name;\r\n        this._itemSchema = itemSchema;\r\n        this.fieldProps = fieldProps;\r\n        this.children = children;\r\n        this._ui = context.getUiItem(name);\r\n        if (this.ui === undefined) {\r\n            this.readOnly = false;\r\n            this.disabled = false;\r\n            this.visible = true;\r\n        }\r\n        else {\r\n            let {readOnly, disabled, visible} = this.ui;\r\n            this.readOnly = (readOnly === true);\r\n            this.disabled = (disabled === true);\r\n            this.visible = !(visible === false);            \r\n        }\r\n        this.value = this.defaultValue =  context.getValue(name); //defaultValue;\r\n        this.init();\r\n    }\r\n\r\n    protected get itemSchema(): ItemSchema {return this._itemSchema};\r\n    protected get ui(): UiItem {return this._ui};\r\n\r\n    protected init() {\r\n        this.rules = [];\r\n        if (this.itemSchema.required === true) {\r\n            this.rules.push(new RuleRequired(this.context.form.res));\r\n        }\r\n        this.buildRules();\r\n        if (this.ui === undefined) return;\r\n        let {rules} = this.ui;\r\n        if (rules === undefined) return;\r\n        if (Array.isArray(rules) === false) {\r\n            this.rules.push(new RuleCustom(rules as FieldRule));\r\n            return;\r\n        }\r\n        for (let rule of rules as FieldRule[]) {\r\n            this.rules.push(new RuleCustom(rule));\r\n        }\r\n    }\r\n\r\n    protected buildRules() {\r\n    }\r\n\r\n    checkRules() {\r\n        let defy:string[] = [];\r\n        for (let r of this.rules) r.check(defy, this.value);\r\n        if (defy.length === 0) {\r\n            this.context.removeErrorWidget(this);\r\n        }\r\n        else {\r\n            this.context.addErrorWidget(this);\r\n            this.errors.push(...defy);\r\n        }\r\n    }\r\n\r\n    @computed get isOk() {\r\n        return this.errors.length ===0;\r\n    }\r\n\r\n    setError(err:string | string[]) {\r\n        if (err === undefined) return;\r\n        if (typeof err === 'string') this.errors.push(err);\r\n        else this.errors.push(...err);\r\n    }\r\n\r\n    setContextError(err:string | string[]) {\r\n        if (err === undefined) return;\r\n        if (typeof err === 'string') this.contextErrors.push(err);\r\n        else this.contextErrors.push(...err);\r\n    }\r\n\r\n    clearError() {\r\n        this.errors.splice(0);\r\n    }\r\n\r\n    clearContextError() {\r\n        this.contextErrors.splice(0);\r\n    }\r\n\r\n    protected parse(value:any):any {return value}\r\n\r\n    protected setElementValue(value:any) {}\r\n    protected setDataValue(value:any) {\r\n        if (this.isChanging === true) return;\r\n        this.context.initData[this.name] = this.value = this.parse(value);\r\n    }\r\n\r\n    setValue(value:any) {\r\n        if (this.isChanging === true) return;\r\n        //this.setDataValue(value);\r\n        //this.setElementValue(value);\r\n        this.changeValue(value, false);\r\n    }\r\n\r\n    getValue() {\r\n        return this.context.getValue(this.name);\r\n    }\r\n\r\n    getReadOnly():boolean {return this.readOnly}\r\n    getDisabled():boolean {return this.disabled}\r\n    getVisible():boolean {return this.visible}\r\n    setReadOnly(value:boolean) {this.readOnly = value}\r\n    setDisabled(value:boolean) {this.disabled = value}\r\n    setVisible(value:boolean) {this.visible = value}\r\n\r\n    private isChanging: boolean;\r\n    protected onInputChange = (evt: React.ChangeEvent<any>) => {\r\n        this.changeValue(evt.target.value, true);\r\n    }\r\n\r\n    protected changeValue(newValue: any, fromElement: boolean) {\r\n        let prev = this.value;\r\n        let onChanging: ChangingHandler;\r\n        let onChanged: ChangedHandler;\r\n        if (this.ui !== undefined) {\r\n            onChanging = this.ui.onChanging;\r\n            onChanged = this.ui.onChanged;\r\n        }\r\n        let allowChange = true;\r\n        if (onChanging !== undefined) {\r\n            this.isChanging = true;\r\n            allowChange = onChanging(this.context, this.value, prev);\r\n            this.isChanging = false;\r\n        }\r\n        if (allowChange === true) {\r\n            this.setDataValue(newValue);\r\n            if (fromElement !== true) this.setElementValue(newValue);\r\n            if (onChanged !== undefined) {\r\n                this.isChanging = true;\r\n                onChanged(this.context, this.value, prev);\r\n                this.isChanging = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    protected get className():string {\r\n        let fieldClass:string;\r\n        if (this.context.inNode === false) fieldClass = 'form-control';\r\n        return classNames(fieldClass, this.context.form.FieldClass, this.ui && this.ui.className);\r\n    }\r\n\r\n    protected abstract render():JSX.Element;\r\n\r\n    protected renderBody():JSX.Element {\r\n        let elDiscription;\r\n        if (this.hasError === false && this.ui) {\r\n            let {discription, discriptionClassName} = this.ui;\r\n            if (discriptionClassName === undefined) discriptionClassName = 'small text-muted';\r\n            elDiscription = <span className={discriptionClassName}>\r\n                {discription}\r\n            </span>;\r\n        }\r\n        return <>\r\n            {this.render()}\r\n            {elDiscription}\r\n        </>;\r\n    }\r\n\r\n    container = observer(():JSX.Element => {\r\n        if (this.visible === false) return null;\r\n        let {form, inNode} = this.context;\r\n        if (inNode === true) return this.render();\r\n        let label:any = this.label;\r\n        if (this.itemSchema.required === true && form.props.requiredFlag !== false) {\r\n            if (label !== null) label = <>{label}&nbsp;<span className=\"text-danger\">*</span></>;\r\n        }\r\n        return form.FieldContainer(label, this.renderBody());\r\n    })\r\n\r\n    protected get label():string {\r\n        let label:any;\r\n        if (this.ui === undefined) {\r\n            label = this.name;\r\n        }\r\n        else {\r\n            let uiLabel = this.ui.label;\r\n            if (uiLabel === null) label = null;\r\n            else label = uiLabel || this.name;\r\n        }\r\n        return label;\r\n    }\r\n\r\n    protected renderTemplet():JSX.Element | undefined {\r\n        if (this.children !== undefined) {\r\n            return <>{this.children}</>;\r\n        }\r\n        if (this.ui === undefined) return undefined;\r\n        let {Templet} = this.ui;\r\n        if (typeof Templet === 'function') return Templet(this.value);\r\n        return Templet;\r\n    }\r\n\r\n    protected renderErrors() {\r\n        let errorList:string[] = [...this.errors, ...this.contextErrors];\r\n        if (errorList.length === 0) return null;\r\n        let {inNode} = this.context;\r\n        let tag = inNode === true? 'span' : 'div';\r\n        return errorList.map(err => React.createElement(tag, \r\n            {\r\n                key: err, \r\n                className: 'text-danger d-inline-block my-2 ml-3'\r\n            },\r\n            <><i className=\"fa fa-exclamation-circle\" /> &nbsp;{err}</>\r\n        ));\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiTextItem, StringSchema } from '../../schema';\r\n\r\nexport class TextWidget extends Widget {\r\n    protected inputType = 'text';\r\n    protected get ui(): UiTextItem {return this._ui as UiTextItem};\r\n    protected input: HTMLInputElement;\r\n\r\n    protected setElementValue(value:any) {\r\n        if (this.input === null) return;\r\n        this.input.value = value;\r\n    }\r\n    protected get placeholder() {return (this.ui && this.ui.placeholder) || this.name}\r\n    protected onKeyDown = async (evt:React.KeyboardEvent<HTMLInputElement>) => {\r\n        this.internalOnKeyDown(evt);\r\n        if (evt.keyCode !== 13) return;\r\n        let {onEnter} = this.context.form.props;\r\n        if (onEnter === undefined) return;\r\n\r\n        this.changeValue(evt.currentTarget.value, true);\r\n\r\n        //this.checkRules();\r\n        //this.context.checkContextRules();\r\n        this.input.blur();\r\n\r\n        let ret = await onEnter(this.name, this.context);\r\n        if (ret !== undefined) {\r\n            this.context.setError(this.name, ret);\r\n        }\r\n    }\r\n\r\n    protected internalOnKeyDown(evt:React.KeyboardEvent<HTMLInputElement>) {\r\n    }\r\n\r\n    protected onBlur(evt: React.FocusEvent<any>) {\r\n        this.onInputChange(evt);\r\n        this.checkRules();\r\n        this.context.checkContextRules();\r\n    }\r\n    protected onFocus(evt: React.FocusEvent<any>) {\r\n        this.clearError();\r\n        this.context.removeErrorWidget(this);\r\n        this.context.clearErrors();\r\n    }\r\n    protected onChange(evt: React.ChangeEvent<any>) {\r\n    }\r\n\r\n    setReadOnly(value:boolean) {\r\n        if (this.input === null) return;\r\n        this.input.readOnly = this.readOnly = value;\r\n    }\r\n    setDisabled(value:boolean) {\r\n        if (this.input === null) return;\r\n        this.input.disabled = this.disabled = value;\r\n    }\r\n\r\n    render() {\r\n        let renderTemplet = this.renderTemplet();\r\n        if (renderTemplet !== undefined) return renderTemplet;\r\n        let cn:any = {\r\n            //'form-control': true,\r\n        };\r\n        if (this.hasError === true) {\r\n            cn['is-invalid'] = true;\r\n        }\r\n        else {\r\n            cn['required-item'] = this.itemSchema.required === true;\r\n        }\r\n        return <><input ref={input=>this.input = input}\r\n            className={classNames(this.className, cn)}\r\n            type={this.inputType}\r\n            defaultValue={this.value}\r\n            onChange={(evt: React.ChangeEvent<any>) => this.onChange(evt)}\r\n            placeholder={this.placeholder}\r\n            readOnly={this.readOnly}\r\n            disabled={this.disabled}\r\n            onKeyDown = {this.onKeyDown}\r\n            onFocus = {(evt: React.FocusEvent<any>) => this.onFocus(evt)}\r\n            onBlur={(evt: React.FocusEvent<any>) => this.onBlur(evt)}\r\n            maxLength={(this.itemSchema as StringSchema).maxLength} />\r\n            {this.renderErrors()}\r\n        </>;\r\n    }\r\n}\r\n","//import * as React from 'react';\r\nimport { TextWidget } from './textWidget';\r\nimport { RuleNum, RuleInt } from '../rules';\r\nimport { NumBaseSchema } from '../../schema';\r\n\r\nexport class NumberWidget extends TextWidget {\r\n    protected inputType = 'number';\r\n    protected get itemSchema(): NumBaseSchema {return this._itemSchema as NumBaseSchema};\r\n\r\n    protected buildRules() {\r\n        super.buildRules();\r\n        let res = this.context.form.res;\r\n        let {min, max} = this.itemSchema;\r\n        this.rules.push(\r\n            this.itemSchema.type === 'integer'?\r\n                new RuleNum(res, min, max) :\r\n                new RuleInt(res, min, max)\r\n        );\r\n        /*\r\n        if (this.itemSchema.type === 'integer') {\r\n            this.rules.push(new RuleInt);\r\n        }\r\n        let {min, max} = this.itemSchema;\r\n        if (min !== undefined) this.rules.push(new RuleMin(min));\r\n        if (max !== undefined) this.rules.push(new RuleMax(max));\r\n        */\r\n    }\r\n\r\n    protected parse(value:any):any {\r\n        if (value === undefined || value === null) return;\r\n        return Number(value);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { NumberWidget } from './numberWidget';\r\n\r\nexport class UpdownWidget extends NumberWidget {\r\n    protected inputType = 'number';\r\n\r\n    protected isValidKey(key:number):boolean {\r\n        return key===46 || key===8 || key===37 || key===39\r\n            || (key>=48 && key<=57)\r\n            || (key>=96 && key<=105)\r\n            || key===109 || key===189;\r\n    }\r\n    \r\n    protected internalOnKeyDown(evt:React.KeyboardEvent<HTMLInputElement>) {\r\n        let key = evt.keyCode;\r\n        window.event.returnValue = this.isValidKey(key);\r\n    }\r\n}\r\n","//import * as React from 'react';\r\nimport { TextWidget } from './textWidget';\r\n\r\nexport class DateWidget extends TextWidget {\r\n    protected inputType = 'date';\r\n}\r\n\r\nexport class DateTimeWidget extends TextWidget {\r\n    protected inputType = 'datetime';\r\n}\r\n\r\nexport class TimeWidget extends TextWidget {\r\n    protected inputType = 'time';\r\n}\r\n\r\nexport class MonthWidget extends TextWidget {\r\n    protected inputType = 'month';\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiCheckItem } from '../../schema';\r\n\r\nexport class CheckBoxWidget extends Widget {\r\n    protected input: HTMLInputElement;\r\n    protected get ui(): UiCheckItem {return this._ui as UiCheckItem};\r\n    protected trueValue: any;\r\n    protected falseValue: any;\r\n\r\n    protected init() {\r\n        super.init();\r\n        if (this.ui !== undefined) {\r\n            let {trueValue, falseValue} = this.ui;\r\n            if (trueValue === undefined) this.trueValue = true;\r\n            else this.trueValue = trueValue;\r\n            if (falseValue === undefined) this.falseValue = false;\r\n            else this.falseValue = falseValue;\r\n        }\r\n        else {\r\n            this.trueValue = true;\r\n            this.falseValue = false;\r\n        }\r\n    }\r\n    protected setElementValue(value:any) {\r\n        this.input.checked = value === this.trueValue;\r\n    }\r\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\r\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\r\n\r\n    protected onInputChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setDataValue(evt.target.checked === true? this.trueValue : this.falseValue);\r\n    }\r\n\r\n    protected onClick = () => {\r\n        this.context.clearErrors();\r\n    }\r\n\r\n    render() {\r\n        let cn = classNames(this.className, 'form-check-inline p-0');\r\n        let input = <input\r\n            ref={(input)=>this.input = input}\r\n            className={'align-self-center'}\r\n            type=\"checkbox\"\r\n            defaultChecked={this.defaultValue} \r\n            onChange={this.onInputChange}\r\n            onClick={this.onClick} />;\r\n        if (this.context.inNode === true) {\r\n            return <label className={cn}>\r\n                {input} {(this.ui&&this.ui.label) || this.name}\r\n            </label>\r\n        }\r\n        else {\r\n            return <div className={cn}>\r\n                <label className=\"w-100 h-100 mb-0 d-flex justify-content-center\">{input}</label>\r\n            </div>;\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\nimport { Widget } from './widget';\r\nimport { UiSelect } from '../../schema';\r\n\r\nexport class SelectWidget extends Widget {\r\n    protected select: HTMLSelectElement;\r\n    protected get ui(): UiSelect {return this._ui as UiSelect};\r\n    @observable protected readOnly: boolean;\r\n\r\n    protected setElementValue(value:any) {this.select.value = value}\r\n    protected onInputChange = (evt:React.ChangeEvent<HTMLSelectElement>) => {\r\n        this.setDataValue(evt.target.value);\r\n    }\r\n\r\n    setReadOnly(value:boolean) {this.select.disabled = this.readOnly = !value}\r\n    setDisabled(value:boolean) {this.select.disabled = this.disabled = value}\r\n\r\n    render() {\r\n        if (this.readOnly === true) {\r\n            let option = this.ui.list.find(v => v.value === this.value);\r\n            let title = (option === undefined)? '(???)' : option.title;\r\n            return <span className=\"form-control w-min-6c\">{title}</span>;\r\n        }\r\n        return <select\r\n            ref={(select)=>this.select = select}\r\n            className={classNames(this.className, 'form-control')}\r\n            defaultValue={this.defaultValue} \r\n            onChange={this.onInputChange}>\r\n            {this.ui.list.map((v,index) => {\r\n                let {title, value} = v;\r\n                let cn:string;\r\n                //if (value === undefined || value === null) cn = 'text-light small';\r\n                //else cn = 'text-danger';\r\n                return <option className={cn} key={index} value={value}>{title || value}</option>\r\n            })}\r\n        </select>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\n//import { TextWidget } from './textWidget';\r\nimport { Widget } from './widget';\r\nimport { UiRadio } from '../../schema';\r\nimport { RowContext } from '../context';\r\n\r\n\r\nconst radioStyle:React.CSSProperties = {height: 'auto'};\r\n\r\nexport class RadioWidget extends Widget {\r\n    protected inputs: {[index:number]: HTMLInputElement} = {};\r\n    protected get ui(): UiRadio {return this._ui as UiRadio};\r\n\r\n    protected setElementValue(value:any) {\r\n        for (let i in this.inputs) {\r\n            let input = this.inputs[i];\r\n            input.checked = value === input.value;\r\n        }\r\n    }\r\n    setReadOnly(value:boolean) {\r\n        this.readOnly = value;\r\n        for (let i in this.inputs) this.inputs[i].readOnly = value;\r\n    }\r\n    setDisabled(value:boolean) {\r\n        this.disabled = value;\r\n        for (let i in this.inputs) this.inputs[i].disabled = value\r\n    }\r\n\r\n    /*\r\n    protected onInputChange = (evt: React.ChangeEvent<any>) => {\r\n        this.changeValue(evt.target.value, true);\r\n    }\r\n    */\r\n\r\n    render() {\r\n        let {defaultValue, list} = this.ui;\r\n        let {isRow} = this.context;\r\n        let rowKey:number;\r\n        if (isRow === true) {\r\n            rowKey = (this.context as RowContext).rowKey;\r\n        }\r\n        let cn = classNames(this.className, 'py-0');\r\n        return <span className={cn} style={radioStyle}>\r\n                {list.map((v,index) => {\r\n                    let {value, title} = v;\r\n                    let name = this.name;\r\n                    if (rowKey !== undefined) name += '-' + rowKey;\r\n                    return <label key={index} className=\"form-radio-inline\">\r\n                        <input ref={input=>this.inputs[index]=input} type=\"radio\" name={name}\r\n                            value={value} defaultChecked={(this.defaultValue || defaultValue)===value}\r\n                            onChange={this.onInputChange} />\r\n                        {title || value}\r\n                    </label>;\r\n                    //</span>\r\n                })}\r\n            </span>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiIdItem, TempletType } from '../../schema';\r\nimport { observable } from 'mobx';\r\n\r\nexport class IdWidget extends Widget {\r\n    protected get ui(): UiIdItem {return this._ui as UiIdItem};\r\n    @observable protected value:number;\r\n    setReadOnly(value:boolean) {this.readOnly = value}\r\n    setDisabled(value:boolean) {this.disabled = value}    \r\n\r\n    protected onClick = async () => {\r\n        let pickId = this.ui && this.ui.pickId;\r\n        if (pickId === undefined) {\r\n            alert('no pickId defined!');\r\n            return;\r\n        }\r\n        let id = await pickId(this.context, this.name, this.value);        \r\n        this.setDataValue(id);\r\n        this.clearError();\r\n        this.clearContextError();\r\n        this.checkRules();\r\n    }\r\n\r\n    render() {\r\n        let placeholder:string|JSX.Element, Templet: TempletType;\r\n        if (this.ui !== undefined) {\r\n            placeholder = this.ui.placeholder;\r\n            Templet = this.ui.Templet;\r\n        }\r\n        let cn:any = {\r\n            'form-control': true,\r\n            'required-item': this.itemSchema.required === true,\r\n            'cursor-pointer': true,\r\n            'is-invalid': this.hasError,\r\n        };\r\n        let content;\r\n        if (this.value === undefined || this.value === null) {\r\n            content = placeholder || 'placeholder';\r\n            cn['text-muted'] = true;\r\n        }\r\n        else if (Templet === undefined) {\r\n            content = <>{this.value}</>;\r\n        }\r\n        else if (typeof Templet === 'function') {\r\n            content = Templet(this.value);\r\n        }\r\n        else {\r\n            content = Templet;\r\n        }\r\n        return <>\r\n            <div className={classNames(cn)} onClick={this.onClick}>{content}</div>\r\n            {this.renderErrors()}\r\n        </>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { DataType } from '../../schema';\r\nimport { UiType } from '../../schema';\r\n\r\nexport const Unknown = (dataType:DataType, uiType:UiType, dataTypes:DataType[]) => {\r\n    return <span className=\"text-danger\">!!data type {dataType} only support {(dataTypes || []).join(', ')}, can't use ui {uiType}!!</span>;\r\n};\r\n","import * as React from 'react';\r\nimport { UiButton, TempletType } from '../../schema';\r\nimport { Unknown } from './unknown';\r\nimport { Widget } from './widget';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class ButtonWidget extends Widget {\r\n    protected get ui(): UiButton {return this._ui as UiButton};\r\n\r\n    protected onClick = async () => {\r\n        this.clearError();\r\n        this.clearContextError();\r\n        let {name, type} = this.itemSchema;\r\n        if (type === 'submit') {\r\n            await this.context.submit(name);\r\n        }\r\n        /*\r\n        let {onButtonClick} = this.context.form.props;\r\n        if (onButtonClick === undefined) {\r\n            alert(`button ${name} clicked. you should define form onButtonClick`);\r\n            return;\r\n        }\r\n        let ret = await onButtonClick(name, this.context);\r\n        if (ret === undefined) return;\r\n        this.context.setError(name, ret);\r\n        */\r\n    }\r\n\r\n    private observerRender = observer(() => {\r\n        let {name, type} = this.itemSchema;\r\n        let Templet:TempletType, cn:string, caption:string;\r\n        if (this.ui !== undefined) {\r\n            let {widget:widgetType} = this.ui;\r\n            if (widgetType !== 'button') return Unknown(type, widgetType, ['button']);\r\n            Templet = this.ui.Templet;\r\n            cn = this.ui.className;\r\n            caption = this.ui.label;\r\n        }\r\n        let {form, hasError} = this.context;\r\n        let context = this.context;\r\n        let disabled = type==='submit' && hasError;\r\n        let content:any;\r\n        if (this.children !== undefined) content = this.children;\r\n        else if (typeof Templet === 'function') content = Templet();\r\n        else if (Templet !== undefined) content = Templet;\r\n        else content = caption; \r\n        let button = <button \r\n            className={cn} \r\n            type=\"button\"\r\n            disabled={disabled}\r\n            onClick={this.onClick}>\r\n            {content || name}\r\n        </button>;\r\n        if (context.inNode === true) return <>{button}{this.renderErrors()}</>;\r\n        return <div className={form.ButtonClass}>\r\n            <div>{this.renderErrors()}</div>\r\n            {button}\r\n        </div>;\r\n    });\r\n    \r\n    protected get label():string {return null}\r\n\r\n    render() {\r\n        return <this.observerRender />\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Form } from './form';\r\nimport { UiSchema, UiArr, UiItem } from '../schema';\r\nimport { ArrSchema, ItemSchema } from '../schema';\r\nimport { Widget } from './widgets/widget';\r\n//import { ArrRow } from './arrRow';\r\nimport { observable, computed } from 'mobx';\r\nimport { ContextRule } from './rules';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport abstract class Context {\r\n    private subContexts:{[name:string]:{[rowKey:string]:Context}};\r\n    readonly form: Form;\r\n    readonly uiSchema: UiSchema;\r\n    readonly initData: any;\r\n    readonly inNode: boolean;           // true: 在</> 流中定义Field\r\n    readonly widgets: {[name:string]: Widget} = {};\r\n    readonly rules: ContextRule[];\r\n    readonly isRow: boolean;\r\n    @observable errors: string[] = [];\r\n    @observable errorWidgets:Widget[] = [];\r\n\r\n    constructor(form: Form, uiSchema: UiSchema, data: any, inNode: boolean, isRow: boolean) {\r\n        this.form = form;\r\n        this.uiSchema = uiSchema;\r\n        this.initData = data;\r\n        this.inNode = inNode;\r\n        this.isRow = isRow;\r\n        if (uiSchema !== undefined) {\r\n            let {rules} = uiSchema;\r\n            if (rules !== undefined) {\r\n                this.rules = [];\r\n                if (Array.isArray(rules) === false)\r\n                    this.rules.push(rules as ContextRule);\r\n                else\r\n                    this.rules.push(...rules as ContextRule[]);\r\n            }\r\n        }\r\n    }\r\n\r\n    getArrRowContexts(arrName: string) {\r\n        if (this.subContexts === undefined) this.subContexts = {};\r\n        let arrRowContexts = this.subContexts[arrName];\r\n        if (arrRowContexts === undefined) this.subContexts[arrName] = arrRowContexts = {};\r\n        return arrRowContexts;\r\n    }\r\n\r\n    abstract get data():any;\r\n    abstract getItemSchema(itemName:string):ItemSchema;\r\n    abstract getUiItem(itemName:string):UiItem;\r\n    get arrName():string {return undefined}\r\n    getValue(itemName:string):any {return this.initData[itemName]}\r\n    setValue(itemName:string, value:any) {\r\n        this.initData[itemName] = value;\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setValue(value);\r\n    }\r\n    getDisabled(itemName:string):boolean {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) return widget.getDisabled();\r\n        return undefined;\r\n    }\r\n    setDisabled(itemName:string, value:boolean) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setDisabled(value);\r\n    }\r\n    getReadOnly(itemName:string):boolean {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.getReadOnly();\r\n        return undefined;\r\n    }\r\n    setReadOnly(itemName:string, value:boolean) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setReadOnly(value);\r\n    }\r\n    getVisible(itemName:string):boolean {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.getVisible();\r\n        return undefined;\r\n    }\r\n    setVisible(itemName:string, value:boolean) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setVisible(value);\r\n    }\r\n\r\n    async submit(buttonName: string) {\r\n        this.checkRules()\r\n        if (this.hasError === true) {\r\n            let err = '';\r\n            for (let ew of this.errorWidgets) {\r\n                err += ew.name + ':\\n' + ew.errors.join('\\n');\r\n            }\r\n            console.error(err);\r\n            return;\r\n        }\r\n        let {onButtonClick} = this.form.props;\r\n        if (onButtonClick === undefined) {\r\n            alert(`button ${buttonName} clicked. you should define form onButtonClick`);\r\n            return;\r\n        }\r\n        let ret = await onButtonClick(buttonName, this);\r\n        if (ret === undefined) return;\r\n        this.setError(buttonName, ret);\r\n\r\n    }\r\n\r\n    checkFieldRules() {\r\n        for (let i in this.widgets) {\r\n            this.widgets[i].checkRules();\r\n        }\r\n        if (this.subContexts === undefined) return;\r\n        for (let i in this.subContexts) {\r\n            let arrRowContexts = this.subContexts[i];\r\n            for (let j in arrRowContexts) {\r\n                arrRowContexts[j].checkFieldRules();\r\n            }\r\n        }\r\n    }\r\n\r\n    checkContextRules() {\r\n        this.clearErrors();\r\n        if (this.rules === undefined) return;\r\n        for (let rule of this.rules) {\r\n            let ret = rule(this);\r\n            if (ret === undefined) continue;\r\n            if (Array.isArray(ret) === true) {\r\n                this.errors.push(...ret as string[]);\r\n            }\r\n            else if (typeof ret === 'string') {\r\n                this.errors.push(ret as string);\r\n            }\r\n            else {\r\n                for (let i in ret as object) this.setError(i, (ret as any)[i]);\r\n            }\r\n        }\r\n        if (this.subContexts === undefined) return;\r\n        for (let i in this.subContexts) {\r\n            let arrRowContexts = this.subContexts[i];\r\n            for (let j in arrRowContexts) {\r\n                let rowContext = arrRowContexts[j];\r\n                rowContext.clearErrors();\r\n                rowContext.checkContextRules();\r\n            }\r\n        }\r\n    }\r\n\r\n    setError(itemName:string, error:string) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget === undefined) return;\r\n        widget.setContextError(error);\r\n        this.addErrorWidget(widget);\r\n    }\r\n\r\n    clearContextErrors() {\r\n        for (let i in this.widgets) {\r\n            let widget = this.widgets[i];\r\n            if (widget === undefined) continue;\r\n            widget.clearContextError();\r\n        }\r\n    }\r\n\r\n    clearWidgetsErrors() {\r\n        for (let i in this.widgets) {\r\n            let widget = this.widgets[i];\r\n            if (widget === undefined) continue;\r\n            widget.clearError();\r\n        }\r\n    }\r\n\r\n    checkRules() {\r\n        this.clearErrors();\r\n        this.clearWidgetsErrors();\r\n        this.checkFieldRules();\r\n        if (this.hasError === true) return;\r\n        this.checkContextRules();\r\n    }\r\n\r\n    addErrorWidget(widget:Widget) {\r\n        let pos = this.errorWidgets.findIndex(v => v === widget);\r\n        if (pos < 0) this.errorWidgets.push(widget);\r\n    }\r\n    removeErrorWidget(widget:Widget) {\r\n        let pos = this.errorWidgets.findIndex(v => v === widget);\r\n        if (pos >= 0) this.errorWidgets.splice(pos, 1);\r\n    }\r\n\r\n    protected checkHasError():boolean {\r\n        let ret = (this.errorWidgets.length + this.errors.length) > 0;\r\n        if (ret === true) return true;\r\n        if (this.subContexts === undefined) return false;\r\n        for (let i in this.subContexts) {\r\n            let arrRowContexts = this.subContexts[i];\r\n            for (let j in arrRowContexts) {\r\n                if (arrRowContexts[j].hasError === true) return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    @computed get hasError():boolean {\r\n        return this.checkHasError();\r\n    };\r\n\r\n    clearErrors() {\r\n        this.errors.splice(0);\r\n        this.errorWidgets.splice(0);\r\n        this.clearContextErrors();\r\n    }\r\n\r\n    renderErrors = observer((): JSX.Element => {\r\n        let {errors} = this;\r\n        if (errors.length === 0) return null;\r\n        return <>\r\n            {errors.map(err => <span key={err} className=\"text-danger inline-block my-1 ml-3\">\r\n                <i className=\"fa fa-exclamation-circle\" /> &nbsp;{err}\r\n            </span>)}\r\n        </>\r\n    });\r\n}\r\n\r\nlet rowKeySeed:number = 1;\r\nexport class RowContext extends Context {\r\n    readonly parentContext: Context;\r\n    readonly arrSchema: ArrSchema;\r\n    readonly uiSchema: UiArr;\r\n    //readonly row: ArrRow;\r\n    readonly rowKey: number;\r\n    readonly data: any;\r\n    constructor(parentContext:Context, arrSchema: ArrSchema, data: any, inNode: boolean) {\r\n        let uiArr:UiArr;\r\n        let {uiSchema} = parentContext;\r\n        if (uiSchema !== undefined) {\r\n            let {items} = uiSchema;\r\n            if (items !== undefined) uiArr = items[arrSchema.name] as UiArr;\r\n        }\r\n        super(parentContext.form, uiArr, data, inNode, true);\r\n        this.parentContext = parentContext;\r\n        this.arrSchema = arrSchema;\r\n        this.rowKey = rowKeySeed++;\r\n        this.data = data;\r\n    }\r\n    getItemSchema(itemName:string):ItemSchema {return this.arrSchema.itemSchemas[itemName]}\r\n    getUiItem(itemName:string):UiItem {\r\n        if (this.uiSchema === undefined) return undefined;\r\n        let {items} = this.uiSchema;\r\n        if (items === undefined) return undefined;\r\n        return items[itemName]\r\n    }\r\n    get arrName():string {return this.arrSchema.name}\r\n    clearErrors() {\r\n        super.clearErrors();\r\n        this.parentContext.clearErrors();\r\n    }\r\n\r\n    get parentData():any {return this.parentContext.data;}\r\n}\r\n\r\nexport class FormContext extends Context {\r\n    constructor(form:Form, inNode:boolean) {\r\n        super(form, form.uiSchema, form.data, inNode, false);\r\n    }\r\n    get data():any {return this.form.data}\r\n    getItemSchema(itemName:string):ItemSchema {return this.form.itemSchemas[itemName]}\r\n    getUiItem(itemName:string):UiItem {\r\n        let {uiSchema} = this.form;\r\n        if (uiSchema === undefined) return undefined;\r\n        let {items} = uiSchema;\r\n        if (items === undefined) return undefined;\r\n        return items[itemName];\r\n    }\r\n}\r\n\r\nexport const ContextContainer = React.createContext<Context>({} as any);\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\n//import { ArrRow } from '../arrRow';\r\nimport { Context, RowContext, ContextContainer } from '../context';\r\nimport { ArrSchema } from '../../schema';\r\nimport { UiArr, TempletType } from '../../schema';\r\nimport { Unknown } from './unknown';\r\nimport { factory } from './factory';\r\n\r\nexport const ArrComponent = observer((\r\n    {parentContext, arrSchema, children}:{parentContext: Context, arrSchema: ArrSchema, children: React.ReactNode}) => \r\n{\r\n    let {name, arr} = arrSchema;\r\n    let data = parentContext.initData[name] as any[];\r\n    let {form} = parentContext;\r\n    let arrRowContexts = parentContext.getArrRowContexts(name);\r\n    let ui = parentContext.getUiItem(name) as UiArr;\r\n    let arrLabel = name;\r\n    let Templet:TempletType;\r\n    let selectable:boolean, deletable:boolean, restorable:boolean;\r\n    let {ArrContainer, RowContainer, RowSeperator, uiSchema} = form;\r\n    if (uiSchema !== undefined) {\r\n        let {selectable:formSelectable, deletable:formDeletable, restorable:formRestorable} = uiSchema;\r\n        if (selectable !== true) selectable = formSelectable;\r\n        if (deletable !== true) deletable = formDeletable;\r\n        if (restorable !== true) restorable = formRestorable;\r\n    }\r\n    if (ui !== undefined) {\r\n        let {widget:widgetType, label, \r\n            selectable:arrSelectable, deletable:arrDeletable, restorable:arrRestorable,\r\n            ArrContainer:ac, RowContainer:rc, RowSeperator:rs\r\n        } = ui;\r\n        if (arrSelectable !== undefined) selectable = arrSelectable;\r\n        if (arrDeletable !== undefined) deletable = arrDeletable;\r\n        if (arrRestorable !== undefined) restorable = arrRestorable;\r\n        if (ac !== undefined) ArrContainer = ac;\r\n        if (rc !== undefined) RowContainer = rc;\r\n        if (rs !== undefined) RowSeperator = rs;\r\n        Templet = ui.Templet;\r\n        if (widgetType !== 'arr') return Unknown(arrSchema.type, widgetType, ['arr']);\r\n        arrLabel = label || arrLabel;\r\n    }\r\n    let first = true;\r\n    return ArrContainer(arrLabel, <>\r\n        {data.map((row:any, index) => {\r\n            let rowContext: RowContext;\r\n            let rowContent: JSX.Element;\r\n            let sep = undefined;\r\n            if (first === false) sep = RowSeperator;\r\n            else first = false;\r\n            if (children !== undefined) {\r\n                rowContext = new RowContext(parentContext, arrSchema, row, true);\r\n                rowContent = <>{children}</>;\r\n            }\r\n            else {\r\n                let typeofTemplet = typeof Templet;\r\n                if (typeofTemplet === 'function') {\r\n                    rowContext = new RowContext(parentContext, arrSchema, row, true);\r\n                    rowContent = React.createElement(observer(Templet as React.StatelessComponent), row);\r\n                }\r\n                else if (typeofTemplet === 'object') {\r\n                    rowContext = new RowContext(parentContext, arrSchema, row, true);\r\n                    rowContent = Templet as JSX.Element;\r\n                }\r\n                else {\r\n                    rowContext = new RowContext(parentContext, arrSchema, row, false);\r\n                    rowContent = <>{\r\n                        arr.map((v, index) => {\r\n                            return <React.Fragment key={v.name}>\r\n                                {factory(rowContext, v, undefined)}\r\n                            </React.Fragment>\r\n                        })}\r\n                    </>;\r\n                }\r\n            }\r\n            let {rowKey} = rowContext;\r\n            arrRowContexts[rowKey] = rowContext;\r\n\r\n            let selectCheck:JSX.Element, deleteIcon:JSX.Element;\r\n            if (selectable === true) {\r\n                let onClick = (evt: React.MouseEvent<HTMLInputElement>)=>{\r\n                    let {checked} = (evt.target as HTMLInputElement);\r\n                    row.$isSelected = checked;\r\n                    let {$source} = row;\r\n                    if ($source !== undefined) $source.$isSelected = checked;\r\n                    rowContext.clearErrors();\r\n                }\r\n                selectCheck = <div className=\"form-row-checkbox\">\r\n                    <input type=\"checkbox\" onClick={onClick} defaultChecked={row.$isSelected} />\r\n                </div>;\r\n            }\r\n            let isDeleted = !(row.$isDeleted===undefined || row.$isDeleted===false);\r\n            if (deletable === true) {\r\n                let icon = isDeleted? 'fa-undo' : 'fa-trash';\r\n                let onDelClick = () => {\r\n                    if (restorable === true) {\r\n                        row.$isDeleted = !isDeleted;\r\n                        let {$source} = row;\r\n                        if ($source !== undefined) $source.$isDeleted = !isDeleted;\r\n                    }\r\n                    else {\r\n                        let p = data.indexOf(row);\r\n                        if (p>=0) data.splice(p, 1);\r\n                    }\r\n                    rowContext.clearErrors();\r\n                }\r\n                deleteIcon = <div className=\"form-row-edit text-info\" onClick={onDelClick}>\r\n                    <i className={classNames('fa', icon, 'fa-fw')} />\r\n                </div>;\r\n            }\r\n            let editContainer = selectable===true || deletable===true?\r\n                (content:any) => <fieldset disabled={isDeleted}><div className={classNames('d-flex', {'deleted':isDeleted, 'row-selected':row.$isSelected})}>\r\n                    {selectCheck}\r\n                    <div className={selectable===true && deletable===true? \"form-row-content\":\"form-row-content-1\"}>{content}</div>\r\n                    {deleteIcon}\r\n                </div></fieldset>\r\n                :\r\n                (content:any) => content;\r\n\r\n            return <ContextContainer.Provider key={rowKey} value={rowContext}>\r\n                {sep}\r\n                {RowContainer(editContainer(<><rowContext.renderErrors />{rowContent}</>))}\r\n            </ContextContainer.Provider>;\r\n        })}\r\n    </>);\r\n});\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiImageItem } from '../../schema';\r\nimport { Image } from '../../image';\r\nimport { ImageItemEdit } from '../../edit/imageItemEdit';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\n\r\nexport class ImageWidget extends Widget {\r\n    protected input: HTMLInputElement;\r\n    protected get ui(): UiImageItem {return this._ui as UiImageItem};\r\n    @observable private imageSrc: string;\r\n\r\n    protected init() {\r\n        super.init();\r\n        this.imageSrc = this.value;\r\n    }\r\n\r\n    protected onClick = async () => {\r\n        let edit = new ImageItemEdit(this.itemSchema, this.ui, this.ui.label, this.value);\r\n        let ret = await edit.start();\r\n        if (ret !== null) {\r\n            this.setValue(ret);\r\n            this.imageSrc = ret;\r\n        }\r\n        await edit.end();\r\n    }\r\n\r\n    render() {\r\n        return <this.observerRender />;\r\n    }\r\n\r\n    private observerRender = observer(() => {\r\n        let cn = [\r\n            'bg-white p-1 d-flex justify-content-center',\r\n        ];\r\n        let onClick: any;\r\n        if (!this.readOnly && !this.disabled) {\r\n            cn.push('cursor-pointer');\r\n            onClick = this.onClick;\r\n        }\r\n        return <div className={classNames(cn)} onClick={onClick}>\r\n            <Image src={this.imageSrc} className=\"w-4c h-4c\"/>\r\n        </div>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { ArrSchema, DataType, ItemSchema } from '../../schema';\r\nimport { TypeWidget, UiCustom } from '../../schema';\r\nimport { TextWidget } from './textWidget';\r\nimport { TextAreaWidget } from './textareaWidget';\r\nimport { PasswordWidget, UrlWidget, EmailWidget } from './passwordWidget';\r\nimport { UpdownWidget } from './updownWidget';\r\nimport { NumberWidget } from './numberWidget';\r\nimport { DateWidget, DateTimeWidget, TimeWidget, MonthWidget } from './dateWidget';\r\nimport { CheckBoxWidget } from './checkBoxWidget';\r\nimport { FieldProps } from '../field';\r\nimport { Context } from '../context';\r\nimport { SelectWidget } from './selectWidget';\r\nimport { RadioWidget } from './radioWidget';\r\nimport { RangeWidget } from './rangeWidget';\r\nimport { IdWidget } from './idWidget';\r\nimport { ButtonWidget } from './buttonWidget';\r\nimport { ArrComponent } from './arrComponent';\r\nimport { ImageWidget } from './imageWidget';\r\n\r\nconst widgetsFactory: {[type: string]: {widget?: TypeWidget, dataTypes?: DataType[]}} = {\r\n    id: {\r\n        dataTypes: ['id'],\r\n        widget: IdWidget,\r\n    },\r\n    text: {\r\n        dataTypes: ['integer', 'number', 'string'],\r\n        widget: TextWidget\r\n    },\r\n    textarea: {\r\n        dataTypes: ['string'],\r\n        widget: TextAreaWidget\r\n    },\r\n    password: {\r\n        dataTypes: ['string'],\r\n        widget: PasswordWidget\r\n    },\r\n    date: {\r\n        dataTypes: ['date'],\r\n        widget: DateWidget\r\n    },\r\n    datetime: {\r\n        dataTypes: ['date'],\r\n        widget: DateTimeWidget\r\n    },\r\n    time: {\r\n        dataTypes: ['date'],\r\n        widget: TimeWidget\r\n    },\r\n    month: {\r\n        dataTypes: ['date'],\r\n        widget: MonthWidget\r\n    },\r\n    select: {\r\n        dataTypes: ['integer', 'number', 'string', 'date', 'boolean'],\r\n        widget: SelectWidget\r\n    },\r\n    url: {\r\n        dataTypes: ['string'],\r\n        widget: UrlWidget\r\n    },\r\n    email: {\r\n        dataTypes: ['string'],\r\n        widget: EmailWidget\r\n    },\r\n    number: {\r\n        dataTypes: ['integer', 'number'],\r\n        widget: NumberWidget\r\n    },\r\n    updown: {\r\n        dataTypes: ['integer', 'number'],\r\n        widget: UpdownWidget\r\n    },\r\n    color: {\r\n\r\n    },\r\n    checkbox: {\r\n        dataTypes: ['boolean', 'integer', 'number'],\r\n        widget: CheckBoxWidget\r\n    },\r\n    image: {\r\n        dataTypes: ['string'],\r\n        widget: ImageWidget,\r\n    },\r\n    checkboxes: {\r\n\r\n    },\r\n    radio: {\r\n        dataTypes: ['integer', 'number', 'string', 'date', 'boolean'],\r\n        widget: RadioWidget\r\n    },\r\n    range: {\r\n        dataTypes: ['integer'],\r\n        widget: RangeWidget,\r\n    },\r\n    button: {\r\n        dataTypes: ['button', 'submit'],\r\n        widget: ButtonWidget,\r\n    }\r\n}\r\n\r\nexport function factory(context: Context, itemSchema: ItemSchema, children:React.ReactNode, fieldProps?: FieldProps):JSX.Element {\r\n    if (context === undefined) {\r\n        debugger;\r\n        return null;\r\n    }\r\n    if (itemSchema === undefined) return undefined;\r\n    let {name, type} = itemSchema;\r\n    switch (type) {\r\n    case 'arr':\r\n        let arrSchema = context.getItemSchema(name) as ArrSchema;\r\n        return <ArrComponent parentContext={context} arrSchema={arrSchema} children={children} />;\r\n    default:\r\n        break;\r\n    }\r\n\r\n    let typeWidget: TypeWidget;\r\n    let ui = context.getUiItem(name);\r\n    function getTypeWidget(t:DataType): TypeWidget {\r\n        switch(t) {\r\n        default: return TextWidget; \r\n        case 'id': return IdWidget;\r\n        case 'integer': return UpdownWidget;\r\n        case 'number': return NumberWidget; \r\n        case 'string': return TextWidget; \r\n        case 'date': return DateWidget; \r\n        case 'boolean': return CheckBoxWidget; \r\n        case 'button':\r\n        case 'submit': return ButtonWidget;\r\n        }\r\n    }\r\n    if (ui === undefined) { \r\n        typeWidget = getTypeWidget(type);\r\n    }\r\n    else {\r\n        let {widget:widgetType} = ui;\r\n        switch (widgetType) {\r\n        default:\r\n            if (widgetType !== undefined) {\r\n                let widgetFactory = widgetsFactory[widgetType];\r\n                typeWidget = widgetFactory.widget;\r\n            }\r\n            if (typeWidget === undefined) typeWidget = getTypeWidget(type);\r\n            break;\r\n        case 'custom':\r\n            typeWidget = (ui as UiCustom).WidgetClass;\r\n            break;\r\n        case 'group':\r\n            return <span>impletment group</span>;\r\n        }\r\n        //label = uiLabel || name;\r\n    }\r\n    \r\n    let {widgets} = context;\r\n    let widget = new typeWidget(context, itemSchema, fieldProps, children);\r\n    widgets[name] = widget;\r\n\r\n    return <widget.container />;\r\n    /*\r\n    if (isRow === false) {\r\n        let WidgetElement = observer(() => widget.container());\r\n        return <WidgetElement />;\r\n    }\r\n    else {\r\n        let widgetElement = widget.container();\r\n        return widgetElement;\r\n    }\r\n    */\r\n}\r\n\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiTextAreaItem } from '../../schema';\r\nimport { StringSchema } from '../../schema';\r\n\r\nexport class TextAreaWidget extends Widget {\r\n    protected get itemSchema(): StringSchema {return this._itemSchema as StringSchema};\r\n    protected input: HTMLTextAreaElement;\r\n    protected get ui(): UiTextAreaItem {return this._ui as UiTextAreaItem};\r\n\r\n    protected setElementValue(value:any) {this.input.value = value}\r\n    protected onInputChange = (evt: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        this.setValue(evt.currentTarget.value);\r\n    }\r\n\r\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\r\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\r\n\r\n    render() {\r\n        let renderTemplet = this.renderTemplet();\r\n        if (renderTemplet !== undefined) return renderTemplet;\r\n        let cn:any = {};\r\n        if (this.hasError === true) {\r\n            cn['is-invalid'] = true;\r\n        }\r\n        else {\r\n            cn['required-item'] = this.itemSchema.required === true;\r\n        }\r\n        return <>\r\n            <textarea ref={(input) => this.input=input} \r\n                className={classNames(this.className, cn)}\r\n                rows={this.ui && this.ui.rows}\r\n                maxLength={this.itemSchema.maxLength}\r\n                defaultValue={this.defaultValue} onChange={this.onInputChange} />\r\n            {this.renderErrors()}\r\n        </>;\r\n    }\r\n}\r\n","//import * as React from 'react';\r\nimport { TextWidget } from './textWidget';\r\n\r\nexport class PasswordWidget extends TextWidget {\r\n    protected inputType = 'password';\r\n}\r\n\r\nexport class UrlWidget extends TextWidget {\r\n    protected inputType = 'url';\r\n}\r\n\r\nexport class EmailWidget extends TextWidget {\r\n    protected inputType = 'email';\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { UiRange } from '../../schema';\r\nimport { Widget } from './widget';\r\n\r\nexport class RangeWidget extends Widget {\r\n    protected inputType = 'range';\r\n    protected input: HTMLInputElement;\r\n    protected get ui(): UiRange {return this._ui as UiRange};\r\n\r\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\r\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\r\n\r\n    render() {\r\n        let {min, max, step} = this.ui;\r\n        return <><input ref={input=>this.input = input}\r\n            className={classNames(this.className, 'form-control', 'w-min-6c')}\r\n            type={this.inputType}\r\n            defaultValue={this.defaultValue} \r\n            onChange={this.onInputChange}\r\n            max={max}\r\n            min={min}\r\n            step={step}\r\n            />\r\n        </>;\r\n    }\r\n}\r\n","//import _ from 'lodash';\r\nimport { KeyValueRes, Res } from '../res';\r\n\r\nexport interface FormRes extends KeyValueRes {\r\n    required: string;\r\n    number: string;\r\n    integer: string;\r\n    min: string;\r\n    max: string;\r\n}\r\n\r\n/*eslint no-template-curly-in-string: 0*/\r\nexport const formRes:Res<FormRes> = {\r\n    _: {\r\n        required: 'required',\r\n        number: 'not valid number',\r\n        integer: 'not valid integer',\r\n        min: 'min value is ${min}',\r\n        max: 'max value is ${max}',\r\n    },\r\n    zh: {\r\n        _: {\r\n            required: '必须填',\r\n            number: '需要数字',\r\n            integer: '需要整数',\r\n            min: '不能小于${min}',\r\n            max: '不能大于${max}',\r\n        }\r\n    },\r\n}\r\n","import * as React from 'react';\r\nimport {observable, IReactionDisposer, autorun} from 'mobx';\r\nimport classNames from 'classnames';\r\nimport { Schema, ItemSchema, ArrSchema } from '../schema';\r\nimport { UiSchema, TempletType } from '../schema';\r\nimport { factory } from './widgets';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport { ContextContainer, FormContext, Context } from './context';\r\nimport { FormRes, formRes } from './formRes';\r\nimport { resLang } from '../res';\r\n\r\nexport type FormButtonClick = (name:string, context: Context) => Promise<any>;\r\nexport type InputEnter = (name:string, context: Context) => Promise<any>;\r\n\r\nexport interface FormProps {\r\n    className?: string;\r\n    schema: Schema;\r\n    uiSchema?: UiSchema;\r\n    formData?: any;\r\n    onButtonClick?: FormButtonClick;\r\n    onEnter?: InputEnter;\r\n    fieldLabelSize?: number;            // col-sm-2 for label\r\n    requiredFlag?: boolean;             // default=true\r\n    beforeShow?: (formContext:FormContext) => void;\r\n    res?: FormRes;\r\n\r\n    Container?: (content:JSX.Element) => JSX.Element;\r\n    FieldContainer?: (label:string|JSX.Element, content:JSX.Element) => JSX.Element;\r\n    FieldClass?: string;\r\n    ButtonClass?: string;\r\n}\r\n\r\nexport class Form extends React.Component<FormProps> {\r\n    readonly schema: Schema;\r\n    readonly itemSchemas: {[name:string]: ItemSchema};\r\n    readonly uiSchema: UiSchema;\r\n    readonly res?: FormRes;\r\n    protected formContext: FormContext;\r\n    //private content: any;\r\n    //private formData: any;\r\n    private disposer: IReactionDisposer;\r\n    //@observable \r\n    readonly data:any;\r\n\r\n    readonly Container: (content:JSX.Element) => JSX.Element;\r\n    readonly FieldContainer: (label:any, content:JSX.Element) => JSX.Element;\r\n    readonly FieldClass: string;\r\n    readonly ButtonClass: string;\r\n    //readonly ArrContainer: (label:any, content:JSX.Element) => JSX.Element;\r\n    //readonly RowContainer: (content:JSX.Element) => JSX.Element;\r\n    //readonly RowSeperator: JSX.Element;\r\n\r\n    constructor(props:FormProps) {\r\n        super(props);\r\n        let {schema, uiSchema, \r\n            Container, FieldContainer, FieldClass, \r\n            ButtonClass, res,\r\n        } = props;\r\n        this.Container = Container || this.DefaultContainer;\r\n        this.FieldContainer = FieldContainer || this.DefaultFieldContainer;\r\n        this.FieldClass = FieldClass!==undefined && FieldClass!==''&&FieldClass!==null? FieldClass : this.DefaultFieldClass;\r\n        this.res = res || this.DefaultRes;\r\n        this.ButtonClass = ButtonClass || this.DefaultButtonClass;\r\n\r\n        this.schema = schema;\r\n        this.itemSchemas = {};\r\n        for (let itemSchema of this.schema) {\r\n            this.itemSchemas[itemSchema.name] = itemSchema;\r\n        }\r\n        this.uiSchema = uiSchema;\r\n\r\n        //this.formData = formData;\r\n        this.disposer = autorun(this.watch);\r\n        this.data = {};\r\n        // this.initRender();\r\n    }\r\n\r\n    private renderContent():any {\r\n        this.initData(this.props.formData);\r\n        let {children} = this.props;\r\n        if (children !== undefined) {\r\n            this.formContext = new FormContext(this, true);\r\n            return <>{children}</>;\r\n        }\r\n\r\n        let Templet: TempletType;\r\n        if (this.uiSchema !== undefined) {\r\n            Templet = this.uiSchema.Templet;\r\n        }\r\n        if (Templet !== undefined) {\r\n            this.formContext = new FormContext(this, true);\r\n            return typeof(Templet) === 'function'? Templet(this.data) : Templet;\r\n        }\r\n\r\n        this.formContext = new FormContext(this, false);\r\n        return <>{this.schema.map((v, index) => {\r\n            return <React.Fragment key={index}>{factory(this.formContext, v, children)}</React.Fragment>\r\n        })}</>;\r\n    }\r\n\r\n    private initData(formData: any) {\r\n        if (formData === undefined) formData = {};\r\n        if (this.uiSchema !== undefined) {\r\n            let {items} = this.uiSchema;\r\n            if (items !== undefined) {\r\n                for (let i in items) {\r\n                    let ui = items[i];\r\n                    let dv = ui.defaultValue;\r\n                    if (dv !== undefined) {\r\n                        if (formData[i] === undefined) {\r\n                            formData[i] = dv;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for (let itemSchema of this.schema) {\r\n            this.initDataItem(itemSchema, this.data, formData);\r\n        }\r\n    }\r\n\r\n    private initDataItem(itemSchema: ItemSchema, data:any, formData: any):any {\r\n        let {name, type} = itemSchema;\r\n        if (type === 'button') return;\r\n        if (type !== 'arr') {\r\n            data[name] = formData[name];\r\n            return;\r\n        }\r\n\r\n        let arrItem:ArrSchema = itemSchema as ArrSchema;\r\n        let {arr:arrItems} = arrItem;\r\n        if (arrItems === undefined) return;\r\n        let arrDict:any = arrItem.itemSchemas = {};\r\n        for (let item of arrItems) {\r\n            arrDict[item.name] = item;\r\n        }\r\n        let val:any[] = formData[name];\r\n        if (val === undefined) val = [];\r\n        else if (Array.isArray(val) === false) val = [val];\r\n        let arr:any[] = [];\r\n        for (let row of val) {\r\n            let {$isSelected, $isDeleted} = row;\r\n            let r = {\r\n                $source: row,\r\n                $isSelected: $isSelected,\r\n                $isDeleted: $isDeleted,\r\n            };\r\n            for (let item of arrItems) {\r\n                this.initDataItem(item, r, row);\r\n                /*\r\n                let {name:nm} = item;\r\n                let v = row[nm];\r\n                if (v === undefined) v = null;\r\n                r[nm] = v;\r\n                */\r\n            }\r\n            arr.push(r);\r\n        }\r\n        // 如果没有observable，行删除标志点击不管用\r\n        // 不知道这里为什么要去掉observable。有可能会有别的问题\r\n        data[name] = observable(arr);\r\n        //data[name] = arr;\r\n        return;\r\n    }\r\n\r\n    private watch = () => {\r\n        let {formData} = this.props;\r\n        if (formData === undefined) return;\r\n        //this.initData(formData);\r\n        this.calcSelectOrDelete();\r\n    }\r\n    private calcSelectOrDelete() {\r\n        for (let itemSchema of this.schema) {\r\n            this.arrItemOperated(itemSchema);\r\n        }\r\n    }\r\n\r\n    private arrItemOperated(itemSchema: ItemSchema) {\r\n        let {name, type} = itemSchema;\r\n        if (type !== 'arr') return;\r\n        if (this.data === undefined) return;\r\n        let formArrVal = this.data[name];\r\n        if (formArrVal === undefined) return;\r\n        let {arr: arrItems} = itemSchema as ArrSchema;\r\n        for (let row of formArrVal) {\r\n            let {$source} = row;\r\n            if ($source === undefined) continue;\r\n            let {$isSelected, $isDeleted} = $source;\r\n            row.$isSelected = $isSelected;\r\n            row.$isDeleted = $isDeleted;\r\n            //console.log($isSelected, $isDeleted);\r\n            for (let item of arrItems) {\r\n                this.arrItemOperated(item);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let {beforeShow} = this.props;\r\n        if (beforeShow !== undefined) beforeShow(this.formContext);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.disposer !== undefined) this.disposer();\r\n    }\r\n\r\n    render() {\r\n        let content = this.renderContent();\r\n        return <ContextContainer.Provider value={this.formContext}>\r\n            <this.formContext.renderErrors />\r\n            {this.Container(content)}\r\n        </ContextContainer.Provider>;\r\n    }\r\n\r\n    async buttonClick(buttonName:string) {\r\n        this.formContext.checkRules()\r\n        if (this.formContext.hasError === true) return;\r\n\r\n        let {onButtonClick} = this.formContext.form.props;\r\n        if (onButtonClick === undefined) {\r\n            alert(`you should define form onButtonClick`);\r\n            return;\r\n        }\r\n        let ret = await onButtonClick(buttonName, this.formContext);\r\n        if (ret === undefined) return;\r\n        this.formContext.setError(buttonName, ret);\r\n    }\r\n\r\n    protected DefaultContainer = (content:JSX.Element): JSX.Element => {\r\n        return <form className={classNames(this.props.className)} onSubmit={e=>e.preventDefault()}>\r\n            {content}\r\n        </form>;\r\n    }\r\n    protected DefaultFieldContainer = (label:string|JSX.Element, content:JSX.Element): JSX.Element => {\r\n        let {fieldLabelSize} = this.props;\r\n\r\n        if (fieldLabelSize > 0) {\r\n            let labelView:any;\r\n            if (label === null) {\r\n                fieldLabelSize = 0;\r\n            }\r\n            else {\r\n                labelView = <label className={classNames('col-sm-' + fieldLabelSize, 'col-form-label')}>{label}</label>\r\n            }\r\n            let fieldCol = 'col-sm-' + (12 - fieldLabelSize);\r\n            return <div className=\"form-group row\">\r\n                {labelView}\r\n                <div className={fieldCol}>{content}</div>\r\n            </div>;\r\n        }\r\n        return <div className=\"form-group\">\r\n            {label===null? null:<label className=\"col-form-label\">{label}</label>}\r\n            {content}\r\n        </div>;\r\n    }\r\n    protected DefaultFieldClass:string = undefined;\r\n    protected DefaultButtonClass = 'text-center py-2';\r\n    protected DefaultRes:FormRes = resLang<FormRes>(formRes);\r\n\r\n    ArrContainer = (label:any, content:JSX.Element): JSX.Element => {\r\n        return <div>\r\n            <div className={classNames('small text-muted text-center bg-light py-1 px-3 mt-4 mb-1')}>{label}</div>\r\n            {content}\r\n        </div>;\r\n    }\r\n    RowContainer = (content:JSX.Element): JSX.Element => {\r\n        let cn = classNames({\r\n            'py-3': true\r\n        });\r\n        return <div className={cn}>{content}</div>\r\n    }\r\n    RowSeperator = <div className=\"border border-gray border-top\" />;\r\n}\r\n","import * as React from 'react';\r\nimport { factory } from './widgets';\r\nimport { ContextContainer, Context } from './context';\r\n\r\nexport interface FieldProps {\r\n    name: string;\r\n}\r\n\r\nexport class FormField extends React.Component<FieldProps> {\r\n    static contextType = ContextContainer;\r\n    render() {\r\n        let {name, children } = this.props;\r\n        let context:Context = this.context;\r\n        if (context === undefined) return <span className=\"text-danger\">!only in Form!</span>;\r\n        let itemSchema = context.getItemSchema(name);\r\n        let content = factory(context, itemSchema, children, this.props);\r\n        if (content === undefined) {\r\n            return <span className=\"text-danger\">!!{name} is not defined!!</span>;\r\n        }\r\n        return content;\r\n    }\r\n}\r\n","export {Form} from './form';\r\nexport {FormField} from './field';\r\nexport {Context, RowContext} from './context';\r\nexport * from './widgets';\r\n","import * as React from 'react';\r\nimport { UiTextItem } from '../schema';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { observer } from 'mobx-react';\r\nimport { ItemEdit } from './itemEdit';\r\n\r\nexport class StringItemEdit extends ItemEdit {\r\n    protected uiItem: UiTextItem;\r\n    protected async internalStart():Promise<any> {\r\n        return new Promise<any>((resolve, reject) => {\r\n            let element = React.createElement(this.page, {resolve:resolve, reject:reject});\r\n            nav.push(element,reject);\r\n        });\r\n    }\r\n\r\n    private onChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.newValue = evt.target.value;\r\n        let preValue = this.value;\r\n        this.isChanged = (this.newValue !== preValue);\r\n    }\r\n\r\n    private onBlur = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.verifyValue();\r\n    }\r\n\r\n    private onFocus = () => {\r\n        this.error = undefined;\r\n    }\r\n\r\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\r\n        let {resolve} = props;\r\n        let right = <button\r\n            className=\"btn btn-sm btn-success\"\r\n            disabled={!this.isChanged}\r\n            onClick={()=>{\r\n                this.verifyValue();\r\n                if (this.error === undefined) resolve(this.newValue);\r\n            }}>保存</button>;\r\n        return <Page header={'更改' + this.label} right={right}>\r\n            <div className=\"m-3\">\r\n                <input type=\"text\" \r\n                    onChange={this.onChange}\r\n                    onBlur={this.onBlur}\r\n                    onFocus={this.onFocus}\r\n                    className=\"form-control\" \r\n                    defaultValue={this.value} />\r\n                {\r\n                    this.uiItem && <div className=\"small muted m-2\">{this.uiItem.placeholder}</div>\r\n                }\r\n                {this.error && <div className=\"text-danger\">{this.error}</div>}\r\n            </div>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport { ItemSchema, UiRadio } from '../schema';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { observer } from 'mobx-react';\r\nimport { ItemEdit } from './itemEdit';\r\n\r\nexport class RadioItemEdit extends ItemEdit {\r\n    protected uiItem: UiRadio;\r\n\r\n    constructor(itemSchema: ItemSchema, uiItem:UiRadio, label:string, value: any) {\r\n        super(itemSchema, uiItem, label, value);\r\n        if (this.value === undefined) {\r\n            this.value = uiItem.defaultValue;\r\n        }\r\n    }\r\n\r\n    protected async internalStart():Promise<any> {\r\n        return new Promise<any>((resolve, reject) => {\r\n            let element = React.createElement(this.page, {resolve:resolve, reject:reject});\r\n            nav.push(element,reject);\r\n        });\r\n    }\r\n\r\n    private onChange = (value: any) => {\r\n        this.newValue = value;\r\n        let preValue = this.value;\r\n        this.isChanged = (this.newValue !== preValue);\r\n    }\r\n\r\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\r\n        let {resolve} = props;\r\n        let {name} = this.itemSchema;\r\n        let {list} = this.uiItem;\r\n        let right = <button\r\n            className=\"btn btn-sm btn-success\"\r\n            disabled={!this.isChanged}\r\n            onClick={()=>{\r\n                this.verifyValue();\r\n                if (this.error === undefined) resolve(this.newValue);\r\n            }}>保存</button>;\r\n        let content = list?\r\n            list.map((v, index:number) => {\r\n                let {title, value} = v;\r\n                return <label key={index} className=\"px-3 py-2 cursor-pointer\">\r\n                    <input name={name} type=\"radio\" value={value} \r\n                        onClick={()=>this.onChange(value)} \r\n                        defaultChecked={value === this.value} /> {title || value} &nbsp;\r\n                </label>;\r\n            })\r\n            :\r\n            <>no list defined</>;\r\n        return <Page header={'更改' + this.label} right={right}>\r\n            <div className=\"m-3\">{content}</div>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport { UiSelect } from '../schema';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { observer } from 'mobx-react';\r\nimport { ItemEdit } from './itemEdit';\r\n\r\nexport class SelectItemEdit extends ItemEdit {\r\n    protected uiItem: UiSelect;\r\n    protected async internalStart():Promise<any> {\r\n        return new Promise<any>((resolve, reject) => {\r\n            let element = React.createElement(this.page, {resolve:resolve, reject:reject});\r\n            nav.push(element,reject);\r\n        });\r\n    }\r\n\r\n    private onChange = (value:any) => {\r\n        this.newValue = value;\r\n        let preValue = this.value;\r\n        this.isChanged = (this.newValue !== preValue);\r\n    }\r\n\r\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\r\n        let {resolve} = props;\r\n        let {list} = this.uiItem;\r\n        let content = list?\r\n            list.map((v, index:number) => {\r\n                let {title, value} = v;\r\n                return <div key={index} className=\"px-3 py-2 cursor-pointer bg-white mb-1\" onClick={()=>{this.onChange(value); resolve(this.newValue)}}>\r\n                    {title || value}\r\n                </div>;\r\n            })\r\n            :\r\n            <>no list defined</>;\r\n        return <Page header={'更改' + this.label}>\r\n            <div className=\"my-3\">\r\n                {content}\r\n            </div>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport { UiIdItem } from '../schema';\r\nimport { Page } from '../page';\r\nimport { observer } from 'mobx-react';\r\nimport { ItemEdit } from './itemEdit';\r\n\r\nexport class IdItemEdit extends ItemEdit {\r\n    protected uiItem: UiIdItem;\r\n    protected async internalStart():Promise<any> {\r\n        return new Promise<any>(async (resolve, reject) => {\r\n            //let element = React.createElement(this.page, {resolve:resolve, reject:reject});\r\n            //nav.push(element,reject);\r\n\r\n            let {pickId} = this.uiItem;\r\n            if (pickId === undefined) {\r\n                alert('IdItemEdit.pickId = undefined');\r\n                return;\r\n            }\r\n            let boxId = await pickId(undefined, undefined, this.value);\r\n            //if (typeof id === 'object') {\r\n            //    id = (id as any).id;\r\n            //}\r\n            this.onChange(boxId.id);\r\n            resolve(boxId);\r\n            //this.newValue = id;\r\n        });\r\n    }\r\n\r\n    protected async internalEnd():Promise<void> {}\r\n\r\n    private onChange = (value:any) => {\r\n        this.newValue = value;\r\n        let preValue = this.value;\r\n        this.isChanged = (this.newValue !== preValue);\r\n    }\r\n\r\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\r\n        /*\r\n        let {resolve, reject} = props;\r\n        let {list} = this.uiItem;\r\n        let content = list?\r\n            list.map((v, index:number) => {\r\n                let {title, value} = v;\r\n                return <div key={index} className=\"px-3 py-2 cursor-pointer bg-white mb-1\" onClick={()=>{this.onChange(value); resolve(this.newValue)}}>\r\n                    {title || value}\r\n                </div>;\r\n            })\r\n            :\r\n            <>no list defined</>;\r\n        return <Page header={'更改' + this.label}>\r\n            <div className=\"my-3\">\r\n                {content}\r\n            </div>\r\n        </Page>;\r\n        */\r\n        return <Page header={'更改' + this.label}>\r\n            ddd\r\n        </Page>\r\n    })\r\n}\r\n","import * as React from 'react';\r\n//import _ from 'lodash';\r\nimport { observer } from 'mobx-react';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiSelectBase, UiRadio } from '../schema';\r\nimport { ItemEdit } from './itemEdit';\r\nimport { StringItemEdit } from './stringItemEdit';\r\nimport { ImageItemEdit } from './imageItemEdit';\r\nimport { Image } from '../image';\r\nimport { RadioItemEdit } from './radioItemEdit';\r\nimport { SelectItemEdit } from './selectItemEdit';\r\nimport { IdItemEdit } from './idItemEdit';\r\n\r\nexport interface EditProps {\r\n    className?: string;\r\n    schema: Schema;\r\n    data: any;\r\n    onItemClick?: (itemSchema: ItemSchema, uiItem: UiItem, value: any) => Promise<void>;\r\n    onItemChanged?: (itemSchema: ItemSchema, newValue:any, preValue:any) => Promise<void>;\r\n    stopEdit?: boolean;\r\n    uiSchema?: UiSchema;\r\n    sepClassName?: string;\r\n    topBorderClassName?: string;\r\n    bottomBorderClassName?: string;\r\n    rowContainerClassName?: string;\r\n}\r\n\r\n@observer\r\nexport class Edit extends React.Component<EditProps> {\r\n    private defaultSepClassName = 'border-top edit-sep-light-gray';\r\n    private defaultRowContainerClassName = 'd-flex px-3 py-2 bg-white align-items-center';\r\n    private topBorder:JSX.Element;\r\n    private bottomBorder:JSX.Element;\r\n    private rowContainerClassName?: string;\r\n    private sep:JSX.Element;\r\n    private uiSchema: {[name:string]: UiItem};\r\n\r\n    constructor(props: EditProps) {\r\n        super(props);\r\n        let {topBorderClassName, bottomBorderClassName, sepClassName, rowContainerClassName, uiSchema, stopEdit} = props;\r\n        this.topBorder = <div className={topBorderClassName || this.defaultSepClassName} />;\r\n        this.bottomBorder = <div className={bottomBorderClassName || this.defaultSepClassName} />;\r\n        this.rowContainerClassName = rowContainerClassName || this.defaultRowContainerClassName;\r\n        if (stopEdit !== true) this.rowContainerClassName += ' cursor-pointer';\r\n        this.sep = <div className={sepClassName || this.defaultSepClassName} />;\r\n        this.uiSchema = (uiSchema && uiSchema.items) || {};\r\n    }\r\n\r\n    render() {\r\n        let elItems:JSX.Element[] = [];\r\n        let {schema} = this.props;\r\n        let len = schema.length;\r\n\r\n        elItems.push(this.topBorder);\r\n        for (let i=0; i<len; i++) {\r\n            let itemSchema = schema[i];\r\n            if (i>0) elItems.push(this.sep);\r\n            let value = this.props.data[itemSchema.name];\r\n            elItems.push(this.renderRow(itemSchema, value));\r\n        }\r\n        elItems.push(this.bottomBorder);\r\n\r\n        return <div>\r\n            {elItems.map((v, index) => <React.Fragment key={index}>{v}</React.Fragment>)}\r\n        </div>;\r\n    }\r\n\r\n    private renderRow = (itemSchema: ItemSchema, value:any):JSX.Element => {\r\n        let {name, type, required} = itemSchema;\r\n        let divValue:any;\r\n        let uiItem = this.uiSchema[name];\r\n        let label:string;\r\n        if (uiItem === undefined) {\r\n            label = name;\r\n        }\r\n        else {\r\n            label = uiItem.label;\r\n            let templet = uiItem.Templet;\r\n            if (templet !== undefined) {\r\n                if (typeof templet === 'function')\r\n                    divValue = <b>{templet(value)}</b>;\r\n                else\r\n                    divValue = <b>{templet}</b>;\r\n            }\r\n            else if (value !== undefined) {\r\n                switch (uiItem.widget) {\r\n                    case 'radio':\r\n                    case 'select':\r\n                        let {list} = uiItem as UiSelectBase;\r\n                        divValue = <b>{list.find(v => v.value === value).title}</b>;\r\n                        break;\r\n                    case 'id':\r\n                        divValue = <b>no templet for {name}={value}</b>\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        //let value:any = this.props.data[name];\r\n        /*\r\n        if (uiItem !== undefined && value) {\r\n            switch (uiItem.widget) {\r\n                case 'radio':\r\n                case 'select':\r\n                    let {list} = uiItem as UiSelectBase;\r\n                    divValue = <b>{list.find(v => v.value === value).title}</b>;\r\n                    break;\r\n                case 'id':\r\n                    divValue = <b>no templet for {name}={value}</b>\r\n                    break;\r\n            }\r\n        }\r\n        */\r\n        if (divValue === undefined) {\r\n            switch (type) {\r\n                default:\r\n                    divValue = value? <b>{value}</b> : <small className=\"text-muted\">(无)</small>;\r\n                    break;\r\n                case 'image':\r\n                    divValue = <Image className=\"w-4c h-4c\" src={value} />;\r\n                    break;\r\n            }\r\n        }\r\n        let requireFlag = required===true && <span className=\"text-danger\">*</span>;\r\n        return <div className={this.rowContainerClassName} onClick={async ()=>await this.rowClick(itemSchema, uiItem, label, value)}>\r\n            <div className=\"w-6c\">{label} {requireFlag}</div>\r\n            <div className=\"flex-fill d-flex justify-content-end\">{divValue}</div>\r\n            {this.props.stopEdit!==true && <div className=\"w-2c text-right\"><i className=\"fa fa-angle-right\" /></div>}\r\n        </div>;\r\n    };\r\n\r\n    private rowClick = async (itemSchema: ItemSchema, uiItem: UiItem, label:string, value: any) => {\r\n        let {onItemChanged, onItemClick, stopEdit} = this.props;\r\n        if (stopEdit === true) return;\r\n        let changeValue:any;\r\n        if (onItemClick !== undefined) {\r\n            await onItemClick(itemSchema, uiItem, value);\r\n            return;\r\n        }\r\n        let itemEdit:ItemEdit = createItemEdit(itemSchema, uiItem, label, value);\r\n        if (itemEdit === undefined) {\r\n            alert('undefined: let itemEdit:ItemEdit = createItemEdit(itemSchema, uiItem, label, value);');\r\n            return;\r\n        }\r\n        try {\r\n            changeValue = await itemEdit.start();\r\n            if (changeValue !== value) {\r\n                if (onItemChanged === undefined) {\r\n                    alert(`${itemSchema.name} value changed, new: ${changeValue}, pre: ${value}`);\r\n                    this.props.data[itemSchema.name] = changeValue;\r\n                }\r\n                else {\r\n                    await onItemChanged(itemSchema, changeValue, value);\r\n                }\r\n            }\r\n            await itemEdit.end();\r\n        }\r\n        catch (err) {\r\n            // 如果直接back，会触发reject，就到这里了\r\n            console.log('no value changed');\r\n        }\r\n    }\r\n}\r\n\r\nfunction createItemEdit(itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any):ItemEdit {\r\n    let itemEdit: new (itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any) => ItemEdit;\r\n    if (uiItem !== undefined) {\r\n        switch (uiItem.widget) {\r\n            default: break;\r\n            case 'id': itemEdit = IdItemEdit; break;\r\n            case 'text': itemEdit = StringItemEdit; break;\r\n            case 'image': itemEdit = ImageItemEdit; break;\r\n            case 'select': itemEdit = SelectItemEdit; break;\r\n            case 'radio': \r\n                return new RadioItemEdit(itemSchema, uiItem as UiRadio, label, value);\r\n        }\r\n    }\r\n    if (itemEdit === undefined) {\r\n        switch (itemSchema.type) {\r\n            case 'string': itemEdit = StringItemEdit; break;\r\n            case 'image': itemEdit = ImageItemEdit; break;\r\n        }\r\n    }\r\n    if (itemEdit === undefined) return;\r\n    return new itemEdit(itemSchema, uiItem, label, value);\r\n}\r\n","export * from './edit';\r\n","import {CenterApiBase} from '../net';\r\n\r\nexport class CenterApi extends CenterApiBase {\r\n    async userAppUnits(app:number):Promise<any[]> {\r\n        return await this.get('tie/user-app-units', {app:app});\r\n    }\r\n}\r\n\r\nexport const centerApi = new CenterApi('tv/', undefined);\r\n","import * as React from 'react';\r\nimport { IObservableArray, computed } from 'mobx';\r\nimport { PageItems } from '../../tool/pageItems';\r\nimport {List} from './index';\r\n\r\nexport abstract class ListBase {\r\n    protected list: List;\r\n    constructor(list: List) {\r\n        this.list = list;\r\n    }\r\n    get isPaged():boolean {\r\n        let items = this.list.props.items;\r\n        return (items !== null && items !== undefined && Array.isArray(items) === false);\r\n    }\r\n    get items():any[]|IObservableArray<any> {\r\n        let items = this.list.props.items;\r\n        if (items === null) return null;\r\n        if (items === undefined) return undefined;\r\n        if (Array.isArray(items) === true)\r\n            return items as IObservableArray<any>;\r\n        else\r\n            return (items as PageItems<any>).items;\r\n    }\r\n    @computed get loading():boolean {\r\n        let items = this.list.props.items;\r\n        if (items === null) return false;\r\n        if (items === undefined) return true;\r\n        let pageItems = items as PageItems<any>;\r\n        if (pageItems.items === undefined) return false;\r\n        return pageItems.loading;\r\n    }\r\n    get selectedItems():any[] { return undefined; }\r\n    //updateProps(nextProps:any) {}\r\n    dispose() {};\r\n    abstract render: (item:any, index:number) => JSX.Element;\r\n    protected renderContent(item:any, index:number) {\r\n        let {render} = this.list.props.item;\r\n        if (render === undefined) return <div className=\"px-3 py-2\">{JSON.stringify(item)}</div>;\r\n        return render(item, index);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport {ListBase} from './base';\r\n\r\nexport class Clickable extends ListBase {\r\n    render = (item:any, index:number):JSX.Element => {\r\n        let {className, key, onClick} = this.list.props.item;\r\n        return <li key={key===undefined?index:key(item)} className={classNames('va-row-clickable', className)} onClick={()=>onClick && onClick(item)}>\r\n            {this.renderContent(item, index)}\r\n        </li>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { ListBase } from './base';\r\nimport { uid } from '../../tool/uid';\r\n\r\nexport class Static extends ListBase {\r\n    render = (item:any, index:number):JSX.Element => {\r\n        let {className, key} = this.list.props.item;\r\n        if (typeof item === 'string') {\r\n            let cn = classNames('va-list-gap', 'px-3', 'pt-1');\r\n            return <li key={uid()} className={cn}>{item}</li>;\r\n        }\r\n        return <li key={key===undefined?index:key(item)} className={classNames(className)}>\r\n            {this.renderContent(item, index)}\r\n        </li>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable, IObservableArray, autorun, IReactionDisposer} from 'mobx';\r\nimport classNames from 'classnames';\r\nimport {ListBase} from './base';\r\nimport {uid} from '../../tool/uid';\r\nimport { PageItems } from '../../tool/pageItems';\r\nimport { List } from './index';\r\n\r\nexport interface SelectableItem {\r\n    selected: boolean;\r\n    item: any;\r\n    labelId: string;\r\n}\r\n\r\nexport class Selectable extends ListBase {\r\n    @observable private _items: SelectableItem[];\r\n    //private _selectedItems: any[];\r\n    private input: HTMLInputElement;\r\n    private disposer: IReactionDisposer;\r\n\r\n    constructor(list: List) {\r\n        super(list);\r\n        this.disposer = autorun(this.buildItems);\r\n        //this.buildItems();\r\n    }\r\n    dispose() {this.disposer()};\r\n    private buildItems = () => {\r\n        console.log('buildItems in selectable.tsx');\r\n        let {items, selectedItems, compare} = this.list.props;\r\n        let itemsArray:any[] | IObservableArray<any>;\r\n        if (items === undefined) {\r\n            this._items = undefined;\r\n            return;\r\n        }\r\n        if (items === null) {\r\n            this._items = null;\r\n            return;\r\n        }\r\n        if (Array.isArray(items) === true) {\r\n            itemsArray = items as any;\r\n        }\r\n        else {\r\n            itemsArray = (items as PageItems<any>).items;\r\n        }\r\n        //let items = this.items;\r\n        //this._selectedItems = selectedItems;\r\n\r\n        let comp: ((item:any, selectItem:any)=>boolean);\r\n        if (compare === undefined) {\r\n            comp = (item:any, selectItem:any) => item === selectItem;\r\n        }\r\n        else {\r\n            comp = compare;\r\n        }\r\n        let retItems = itemsArray.map(v => {\r\n            //let isObserved = isObservable(v);\r\n            //let obj = isObserved === true? toJS(v) : v;\r\n            //let obj = v;\r\n            let selected = selectedItems === undefined?\r\n                false\r\n                : selectedItems.find(si => comp(v, si)) !== undefined;\r\n            return {\r\n                selected: selected, \r\n                item: v, \r\n                labelId:uid()\r\n            };\r\n        });\r\n        this._items = retItems;\r\n    }\r\n\r\n    get items() {\r\n        //if (this._items === undefined) \r\n        //this.buildItems();\r\n        return this._items;\r\n    }\r\n    selectAll() {\r\n        if (this._items) this._items.forEach(v => v.selected = true);\r\n    }\r\n    unselectAll() {\r\n        if (this._items) this._items.forEach(v => v.selected = false);\r\n    }\r\n    /*\r\n    updateProps(nextProps:any) {\r\n        if (nextProps.selectedItems === this._selectedItems) return;\r\n        this.buildItems();\r\n    }\r\n    */\r\n    private onSelect(item:SelectableItem, selected:boolean) {\r\n        item.selected = selected;\r\n        let anySelected = this._items.some(v => v.selected);\r\n        this.list.props.item.onSelect(item.item, selected, anySelected);\r\n    }\r\n    \r\n    get selectedItems():any[] {\r\n        return this._items.filter(v => v.selected === true).map(v => v.item);\r\n    }\r\n    /*\r\n    set selectedItems(value: any[]) {\r\n        if (value === undefined) return;\r\n        if (this._items === undefined) return;\r\n        let sLen = this._items.length;\r\n        let list = value.slice();\r\n        for (let n=0; n<sLen; n++) {\r\n            let sItem = this._items[n];\r\n            let len = list.length;\r\n            if (len === 0) break;\r\n            let item = sItem.item;\r\n            for (let i=0; i<len; i++) {\r\n                let v = list[i];\r\n                if (item === v) {\r\n                    sItem.selected = true;\r\n                    value.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n        };\r\n    }\r\n    */\r\n    //w-100 mb-0 pl-3\r\n    //m-0 w-100\r\n    render = (item:SelectableItem, index:number):JSX.Element => {\r\n        let {className, key} = this.list.props.item;\r\n        let {labelId, selected, item:obItem} = item;\r\n        return <li key={key===undefined?index:key(item)} className={classNames(className)}>\r\n            <div className=\"d-flex align-items-center px-3\">\r\n                <input ref={input=>{\r\n                        if (!input) return;\r\n                        this.input = input; input.checked = selected;\r\n                    }}\r\n                    className=\"\" type=\"checkbox\" value=\"\" id={labelId}\r\n                    defaultChecked={selected}\r\n                    onChange={(e)=>{\r\n                        this.onSelect(item, e.target.checked)} \r\n                    }/>\r\n                <label className=\"\" style={{flex:1, marginBottom:0}} htmlFor={labelId}>\r\n                    {this.renderContent(obItem, index)}\r\n                </label>\r\n            </div>\r\n        </li>\r\n    }\r\n}\r\n/*\r\n<label>\r\n<label className=\"custom-control custom-checkbox\">\r\n    <input type='checkbox' className=\"custom-control-input\"\r\n        //checked={selected}\r\n        onChange={(e)=>this.onSelect(item, e.target.checked)} />\r\n    <span className=\"custom-control-indicator\" />\r\n</label>\r\n{this.renderContent(item.item, index)}\r\n</label>\r\n*/\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {PageItems} from '../../tool/pageItems';\r\nimport {ListBase} from './base';\r\nimport {Clickable} from './clickable';\r\nimport {Static} from './static';\r\nimport {Selectable} from './selectable';\r\nimport '../../css/va-list.css';\r\nimport { IObservableArray } from 'mobx';\r\n\r\ntype StaticRow = string|JSX.Element|(()=>string|JSX.Element);\r\n\r\nexport interface ListProps {\r\n    className?: string|string[];\r\n    items: any[] | IObservableArray<any> | PageItems<any>;\r\n    item: {\r\n        className?: string|string[];\r\n        render?: (item:any, index:number) => JSX.Element;\r\n        onSelect?: (item:any, isSelected:boolean, anySelected:boolean)=>void;\r\n        onClick?: (item:any)=>void;\r\n        key?: (item:any)=>string|number;\r\n    };\r\n    compare?:(item:any, selectItem:any)=>boolean;\r\n    selectedItems?:any[];\r\n    header?: StaticRow;\r\n    footer?: StaticRow;\r\n    before?: StaticRow;\r\n    loading?: StaticRow;\r\n    none?: StaticRow;\r\n}\r\n\r\n@observer\r\nexport class List extends React.Component<ListProps> {\r\n    private listBase: ListBase;\r\n    private selectable: Selectable;\r\n    constructor(props:ListProps) {\r\n        super(props);\r\n        this.buildBase();\r\n    }\r\n    _$scroll = (direct: 'top'|'bottom') => {\r\n        console.log('############### items scroll to ' + direct);\r\n    }\r\n    private buildBase() {\r\n        let {item} = this.props;\r\n        let {onClick, onSelect} = item;\r\n        if (onSelect !== undefined)\r\n            this.selectable = this.listBase = new Selectable(this);\r\n        else if (onClick !== undefined)\r\n            this.listBase = new Clickable(this);\r\n        else\r\n            this.listBase = new Static(this);\r\n    }\r\n    /*\r\n    componentWillUpdate(nextProps:ListProps, nextState, nextContext) {\r\n        //this.listBase.updateProps(nextProps);\r\n    }\r\n    */\r\n    componentWillUnmount() {\r\n        this.listBase.dispose();\r\n    }\r\n    selectAll() {\r\n        if (this.selectable) this.selectable.selectAll();\r\n    }\r\n    unselectAll() {\r\n        if (this.selectable) this.selectable.unselectAll();\r\n    }\r\n    get selectedItems():any[] {\r\n        return this.listBase.selectedItems;\r\n    }\r\n    render() {\r\n        let {className, header, footer, before, loading, none} = this.props;\r\n        if (before === undefined) before = '-';\r\n        if (loading === undefined) loading = () => <i className=\"fa fa-spinner fa-spin fa-2x fa-fw text-info\" />;\r\n        if (none === undefined) none = 'none';\r\n        //this.listBase.selectedItems = selectedItems;\r\n        let {items, loading:isLoading} = this.listBase;\r\n        function staticRow(row:StaticRow, type:string) {\r\n            if (!row) return;\r\n            switch (typeof row) {\r\n                default:\r\n                case 'string': return <li className={\"va-list-\"+type}>{row}</li>;\r\n                case 'function': return <li className={\"va-list-\"+type}>{(row as ()=>string|JSX.Element)()}</li>;\r\n                case 'object': return <li>{row}</li>\r\n            } \r\n        }\r\n        let content:any, waitingMore:any;\r\n        if (items === null)\r\n            content = staticRow(before, 'before');\r\n        else if (items === undefined)\r\n            content = staticRow(loading, 'loading');\r\n        else if (items.length === 0)\r\n            content = staticRow(none, 'none');\r\n        else {\r\n            content = items.map((item, index) => {\r\n                return this.listBase.render(item, index);\r\n            });\r\n        }\r\n        if (isLoading === true && items) {\r\n            waitingMore = staticRow(loading, 'loading');\r\n        }\r\n        return <ul className={classNames('va-list', className)}>\r\n            {staticRow(header, 'header')}\r\n            {content}\r\n            {waitingMore}\r\n            {staticRow(footer, 'footer')}\r\n        </ul>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport className from 'classnames';\r\nimport {PropGridProps} from './PropGrid';\r\nimport {LabeledProp, StringProp, NumberProp, ListProp, ComponentProp} from './propView';\r\n\r\nexport abstract class PropRow {\r\n    setValues(values: any) {}\r\n    abstract render(key:string): any;\r\n}\r\n\r\nexport class PropBorder extends PropRow {\r\n    render(key:string): JSX.Element {\r\n        return <div key={'_b_' + key} className=\"\">\r\n            <div className=\"w-100\">\r\n                <div style={{borderTop: '1px solid #f0f0f0'}} />\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class PropGap extends PropRow {\r\n    private param: string;\r\n    constructor(param?: string) {\r\n        super();\r\n        this.param = param;\r\n    }\r\n    render(key:string): JSX.Element {\r\n        let w: string;\r\n        switch (this.param) {\r\n            default: w = 'py-2'; break;\r\n            case '=': w = 'py-1'; break;\r\n            case '-': w = 'pb-1'; break;\r\n        }\r\n        let cn = className(w);\r\n        return <div key={'_g_' + key} className={cn} style={{backgroundColor: '#f0f0f0'}} />;\r\n    }\r\n}\r\n\r\nconst valueAlignStart = 'justify-content-start';\r\nconst valueAlignCenter = 'justify-content-center';\r\nconst valueAlignEnd = 'justify-content-end';\r\nexport abstract class LabeledPropRow extends PropRow {\r\n    protected gridProps: PropGridProps;\r\n    protected prop: LabeledProp;\r\n    protected content: any;\r\n    protected col: string;\r\n    //protected values: any;\r\n    constructor(gridProps:PropGridProps, prop: LabeledProp) {\r\n        super();\r\n        this.gridProps = gridProps;\r\n        this.prop = prop;\r\n        this.col = gridProps.labelFixLeft === true? 'col' : 'col-sm';\r\n        //this.values = values;\r\n    }\r\n    render(key:string):any {\r\n        let {onClick, bk} = this.prop;\r\n        let cn = className({\r\n            \"cursor-pointer\": onClick !== undefined,\r\n            \"bg-white\": bk === undefined, \r\n            \"row\": true\r\n        });\r\n        return <div key={key} className={cn} onClick={onClick}>\r\n            {this.renderLabel()}\r\n            {this.renderProp()}\r\n        </div>;\r\n    }\r\n    protected renderLabel():any {\r\n        let {label} = this.prop;\r\n        if (label === undefined) return null;\r\n        return <label className={this.col + '-3 col-form-label'}>\r\n            {label}\r\n        </label>;\r\n    }\r\n    protected renderProp():any {\r\n        let {label} = this.prop;\r\n        let align, vAlign;\r\n        switch (this.gridProps.alignValue) {\r\n            case 'left': align = valueAlignStart; break;\r\n            case 'center': align = valueAlignCenter; break;\r\n            case 'right': align = valueAlignEnd; break;\r\n        }\r\n        switch (this.prop.vAlign) {\r\n            case 'top': vAlign = 'align-items-start'; break;\r\n            default:\r\n            case 'center': vAlign = 'align-items-center'; break;\r\n            case 'bottom': vAlign = 'align-items-end'; break;\r\n            case 'stretch': vAlign = 'align-items-stretch'; break;\r\n        }\r\n        let col:string = this.col + (label===undefined? '-12':'-9');\r\n        let cn = className(align, vAlign, col, 'd-flex');\r\n        return <div className={cn}>\r\n            {this.renderPropBody()}\r\n        </div>;\r\n    }\r\n    protected renderPropBody():any {\r\n        return <div className=\"form-control-plaintext\">\r\n            {this.renderPropContent()}\r\n        </div>;\r\n    }\r\n    protected renderPropContent():any {\r\n        return this.content;\r\n    }\r\n}\r\n\r\nexport class StringPropRow extends LabeledPropRow {\r\n    protected prop: StringProp;\r\n    setValues(values:any) {\r\n        if (values === undefined) this.content = undefined;\r\n        else this.content = values[this.prop.name];\r\n    }\r\n}\r\n\r\nexport class NumberPropRow extends LabeledPropRow {\r\n    protected prop: NumberProp;\r\n    setValues(values:any) {\r\n        if (values === undefined) this.content = undefined;\r\n        else this.content = values[this.prop.name];\r\n    }\r\n}\r\n\r\nexport class ListPropRow extends LabeledPropRow {\r\n    protected prop: ListProp;\r\n    setValues(values:any) {\r\n        if (values === undefined) this.content = undefined;\r\n        else {\r\n            let list = this.prop.list;\r\n            if (typeof list === 'string') this.content = values[list];\r\n            else this.content = undefined;\r\n        }\r\n    }\r\n    protected renderPropBody() {\r\n        let {list, row} = this.prop;\r\n        let items:any[] = typeof list === 'string'? this.content : list;\r\n        if (items === undefined) return <div/>;\r\n        // new row(item)\r\n        return <div className=\"w-100\">\r\n            {\r\n                items.map((item, index) => <React.Fragment key={index}>\r\n                    {index===0? null: <div style={{width:'100%', borderBottom:'1px solid #f0f0f0'}} />}\r\n                    {React.createElement(row, item)}\r\n                </React.Fragment>)\r\n            }\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class ComponentPropRow extends LabeledPropRow {\r\n    protected prop: ComponentProp;\r\n    protected renderPropBody() {\r\n        let {component} = this.prop;\r\n        return component;\r\n    }\r\n    protected renderProp():any {\r\n        let {label, full} = this.prop;\r\n        let align, vAlign;\r\n        switch (this.gridProps.alignValue) {\r\n            case 'left': align = valueAlignStart; break;\r\n            case 'center': align = valueAlignCenter; break;\r\n            case 'right': align = valueAlignEnd; break;\r\n        }\r\n        switch (this.prop.vAlign) {\r\n            case 'top': vAlign = 'align-items-start'; break;\r\n            default:\r\n            case 'center': vAlign = 'align-items-center'; break;\r\n            case 'bottom': vAlign = 'align-items-end'; break;\r\n            case 'stretch': vAlign = 'align-items-stretch'; break;\r\n        }\r\n        let col:string;\r\n        if (full !== true)\r\n            col = this.col + (label===undefined? '-12':'-9');\r\n        else\r\n            col = 'w-100';\r\n        let cn = className(align, vAlign, col, 'd-flex');\r\n        return <div className={cn}>\r\n            {this.renderPropBody()}\r\n        </div>;\r\n    }\r\n}\r\n","import { PropGridProps } from './PropGrid';\r\nimport {\r\n    PropRow, PropBorder, PropGap, \r\n    StringPropRow, NumberPropRow, ListPropRow, ComponentPropRow\r\n} from './row';\r\n\r\nexport interface Format {\r\n\r\n}\r\n\r\nexport interface PropBase {\r\n    onClick?: () => void;\r\n}\r\n\r\nexport interface LabeledProp extends PropBase {\r\n    label?: string;\r\n    bk?: string;\r\n    vAlign?: 'top' | 'bottom' | 'center' | 'stretch';\r\n}\r\n\r\nexport interface StringProp extends LabeledProp {\r\n    type: 'string';\r\n    name: string;\r\n}\r\n\r\nexport interface NumberProp extends LabeledProp {\r\n    type: 'number';\r\n    name: string;\r\n}\r\n\r\nexport interface FormatProp extends LabeledProp {\r\n    type: 'format';\r\n    format: Format;\r\n}\r\n\r\nexport interface ListProp extends LabeledProp {\r\n    type: 'list';\r\n    list: string | any[];  // string 表示名字，否则就是值\r\n    row: new (props: any) => React.Component;\r\n}\r\n\r\nexport interface ComponentProp extends LabeledProp {\r\n    type: 'component';\r\n    full?: boolean;\r\n    component: any; //JSX.Element;\r\n}\r\n\r\nexport type Prop = StringProp | NumberProp | FormatProp | ListProp | ComponentProp | string;\r\n\r\nexport class PropView {\r\n    private gridProps: PropGridProps\r\n    private props: Prop[];\r\n    //private values:any;\r\n    private rows: PropRow[];\r\n\r\n    constructor(gridProps: PropGridProps, props: Prop[]) {\r\n        this.gridProps = gridProps;\r\n        this.props = props;\r\n        //this.values = values;\r\n        this.buildRows();\r\n    }\r\n\r\n    private buildRows() {\r\n        this.rows = [];\r\n        let isGap: boolean = true;\r\n        for (let prop of this.props) {\r\n            if (typeof prop === 'string') {\r\n                this.rows.push(new PropGap(prop));\r\n                isGap = true;\r\n            }\r\n            else {\r\n                if (!isGap) this.rows.push(new PropBorder());\r\n                let row;\r\n                switch (prop.type) {\r\n                    default: continue;\r\n                    case 'string': row = new StringPropRow(this.gridProps, prop); break;\r\n                    case 'number': row = new NumberPropRow(this.gridProps, prop); break;\r\n                    case 'list': row = new ListPropRow(this.gridProps, prop); break;\r\n                    case 'component': row = new ComponentPropRow(this.gridProps, prop); break;\r\n                }\r\n                this.rows.push(row);\r\n                isGap = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    setValues(values: any) {\r\n        for (let r of this.rows) r.setValues(values);\r\n    }\r\n\r\n    render() {\r\n        return this.rows.map((row, index) => row.render(String(index)));\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {Prop, PropView} from './propView';\r\n\r\nexport interface PropGridProps {\r\n    className?: string;\r\n    rows: Prop[];\r\n    values: any;\r\n    alignValue?: 'left'|'center'|'right';\r\n    labelFixLeft?: boolean;\r\n}\r\n\r\n@observer\r\nexport class PropGrid extends React.Component<PropGridProps> {\r\n    render() {\r\n        let {className, rows, values} = this.props;\r\n        let propView = new PropView(this.props, rows);\r\n        propView.setValues(values);\r\n        let cn = classNames('container-fluid', className);\r\n        return <div className={cn}>\r\n            {propView.render()}\r\n        </div>;\r\n    }\r\n}\r\n","export * from './propView';\r\nexport * from './row';\r\nexport * from './PropGrid';\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { Page, ItemSchema, UiSchema, StringSchema, UiTextItem, Edit, ImageSchema, nav, UiImageItem } from '../components';\r\nimport { userApi } from '../net';\r\n\r\nexport class EditMeInfo extends React.Component {\r\n    private schema:ItemSchema[] = [\r\n        {name:'nick', type:'string'} as StringSchema,\r\n        {name:'icon', type:'image'} as ImageSchema\r\n    ];\r\n    private uiSchema:UiSchema = {\r\n        items: {\r\n            nick: {widget:'text', label:'别名', placeholder:'好的别名更方便记忆'} as UiTextItem,\r\n            icon: {widget:'image', label:'头像'} as UiImageItem,\r\n        }\r\n    }\r\n    @observable private data:any;\r\n\r\n    constructor(props:any) {\r\n        super(props);\r\n        let {nick, icon} = nav.user;\r\n        this.data = {\r\n            nick: nick,\r\n            icon: icon,\r\n        }\r\n    }\r\n\r\n    private onItemChanged = async (itemSchema:ItemSchema, newValue:any, preValue:any) => {\r\n        let {name} = itemSchema;\r\n        await userApi.userSetProp(name, newValue);\r\n        this.data[name] = newValue;\r\n        nav.user.name = newValue;\r\n        nav.saveLocalUser();\r\n    }\r\n\r\n    render() {\r\n        return <Page header=\"个人信息\">\r\n            <Edit schema={this.schema} uiSchema={this.uiSchema}\r\n                data={this.data}\r\n                onItemChanged={this.onItemChanged} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport { IObservableValue } from 'mobx/lib/internal';\r\nimport '../../css/va-tab.css';\r\n\r\nexport type TabCaption = (selected:boolean) => JSX.Element;\r\n\r\nexport interface TabProp {\r\n    name: string;\r\n    caption: TabCaption;\r\n    content: () => JSX.Element;\r\n    notify?: IObservableValue<number>;\r\n    load?: () => Promise<void>;\r\n    onShown?: () => Promise<void>;\r\n}\r\n\r\nexport interface TabsProps {\r\n    tabs: TabProp[];\r\n    tabPosition?: 'top' | 'bottom';\r\n    size?: 'sm' | 'lg' | 'md';\r\n    tabBg?: string;\r\n    contentBg?: string;\r\n    sep?: string;\r\n    selected?: string;\r\n    borderColor?: string;\r\n    borderWidth?: string;\r\n}\r\n\r\nclass Tab {\r\n    name: string;\r\n    @observable selected: boolean;\r\n    caption: TabCaption;\r\n    contentBuilder: ()=>JSX.Element;\r\n    notify: IObservableValue<number>;\r\n    load?: () => Promise<void>;\r\n    onShown?: () => Promise<void>;\r\n\r\n    private _content: JSX.Element;\r\n    \r\n    get content(): JSX.Element {\r\n        if (this.selected !== true) return this._content;\r\n        if (this._content !== undefined) return this._content;\r\n        return this._content = this.contentBuilder();\r\n    }\r\n\r\n    async shown() {\r\n        if (this.onShown !== undefined) {\r\n            await this.onShown();\r\n        }\r\n        if (this._content !== undefined) return;\r\n        if (this.load !== undefined) {\r\n            await this.load();\r\n        }\r\n    }\r\n}\r\n\r\nexport const TabCaptionComponent = (label:string, icon:string, color:string) => <div \r\n    className={'d-flex justify-content-center align-items-center flex-column cursor-pointer ' + color}>\r\n    <div><i className={'fa fa-lg fa-' + icon} /></div>\r\n    <small>{label}</small>\r\n</div>;\r\n\r\n@observer export class Tabs extends React.Component<TabsProps> {\r\n    private size: string;\r\n    private tabBg: string;\r\n    private contentBg: string;\r\n    private sep: string;\r\n    @observable private selectedTab: Tab;\r\n    @observable private tabs: Tab[];\r\n\r\n    constructor(props: TabsProps) {\r\n        super(props);\r\n        let {size, tabs, tabBg: tabBack, contentBg: contentBack, sep, selected} = this.props;\r\n        this.size = size || 'md';\r\n        this.tabs = tabs.map(v => {\r\n            let tab = new Tab();\r\n            let {name, caption, content, notify, load, onShown} = v;\r\n            tab.name = name;\r\n            tab.selected = false;\r\n            tab.caption = caption;\r\n            tab.contentBuilder = content;\r\n            tab.notify = notify;\r\n            tab.load = load;\r\n            tab.onShown = onShown;\r\n            return tab;\r\n        });\r\n        this.tabBg = tabBack || 'bg-light';\r\n        this.contentBg = contentBack;\r\n        this.sep = sep || 'border-top border-gray';\r\n        if (selected !== undefined) {\r\n            this.selectedTab = this.tabs.find(v => v.name === selected);\r\n        }\r\n        if (this.selectedTab === undefined) this.selectedTab = this.tabs[0];\r\n        this.selectedTab.selected = true;\r\n    }\r\n    /*\r\n    async componentWillMount() {\r\n        if (this.tabs === undefined) return;\r\n        if (this.tabs.length === 0) return;\r\n        let tab = this.tabs[0];\r\n        await tab.start();\r\n    }\r\n    */\r\n    async componentDidMount() {\r\n        if (this.tabs === undefined) return;\r\n        if (this.tabs.length === 0) return;\r\n        let tab = this.tabs[0];\r\n        await tab.shown();\r\n    }\r\n\r\n    private tabClick = async (tab:Tab) => {\r\n        await tab.shown();\r\n        this.selectedTab.selected = false;\r\n        tab.selected = true;\r\n        this.selectedTab = tab;\r\n    }\r\n\r\n    showTab(tabName: string) {\r\n        let tab = this.tabs.find(v => v.name === tabName);\r\n        if (tab === undefined) return;\r\n        if (this.selectedTab !== undefined) this.selectedTab.selected = false;\r\n        tab.selected = true;\r\n        this.selectedTab = tab;\r\n    }\r\n\r\n    render() {\r\n        let cn = classNames('tab', 'tab-' + this.size);\r\n        let content = <div className={classNames(this.contentBg, 'tab-content')}>\r\n            {this.tabs.map((v,index) => {\r\n                let style:React.CSSProperties={\r\n                    display: v.selected===true? undefined : 'none'};\r\n                return <div key={index} style={style}>{v.content}</div>;\r\n            })}\r\n        </div>;        \r\n\r\n        let {tabPosition, borderColor} = this.props;\r\n        let bsCur:React.CSSProperties, bsTab:React.CSSProperties\r\n        if (borderColor) {\r\n            bsCur = {\r\n                borderColor: borderColor,\r\n                borderStyle: 'solid',\r\n                borderTopWidth: 1,\r\n                borderLeftWidth: 1,\r\n                borderRightWidth: 1,\r\n                borderBottomWidth: 1,\r\n            }\r\n            bsTab = {\r\n                borderColor: borderColor,\r\n                borderStyle: 'solid',\r\n                borderTopWidth: 1,\r\n                borderBottomWidth: 1,\r\n                borderLeftWidth: 0,\r\n                borderRightWidth: 0,\r\n            }\r\n            if (tabPosition === 'top') {\r\n                bsCur.borderBottomWidth = 0;\r\n                bsCur.borderTopLeftRadius = 10;\r\n                bsCur.borderTopRightRadius = 10;\r\n                bsTab.borderTopWidth = 0;\r\n            }\r\n            else {\r\n                bsCur.borderTopWidth = 0;\r\n                bsCur.borderBottomLeftRadius = 10;\r\n                bsCur.borderBottomRightRadius = 10;\r\n                bsTab.borderBottomWidth = 0;\r\n            }\r\n        }\r\n\r\n        let tabs = <div className={classNames(this.tabBg, this.sep, 'tab-tabs')}>\r\n            {this.tabs.map((v,index) => {\r\n                let {selected, caption, notify} = v;\r\n                let notifyCircle:any;\r\n                if (notify !== undefined) {\r\n                    let num = notify.get();\r\n                    if (num !== undefined) {\r\n                        if (num > 0) notifyCircle = <u>{num>99?'99+':num}</u>;\r\n                        else if (num < 0) notifyCircle = <u className=\"dot\" />;\r\n                    }\r\n                }\r\n                return <div key={index} className=\"\" onClick={()=>this.tabClick(v)} style={selected===true? bsCur:bsTab}>\r\n                    <div className=\"align-self-center\">\r\n                        {notifyCircle}\r\n                        {caption(selected)}\r\n                    </div>\r\n                </div>\r\n            })}\r\n        </div>;\r\n\r\n        return <div className={cn}>\r\n            {\r\n                tabPosition === 'top'? \r\n                    <>{tabs}{content}</> :\r\n                    <>{content}{tabs}</>\r\n            }\r\n        </div>\r\n    }\r\n};\r\n","import * as React from 'react';\r\nimport {FetchError} from '../net/fetchError';\r\nimport { refetchApi } from '../net';\r\n\r\nexport interface FetchErrorProps extends FetchError {\r\n    clearError: ()=>void\r\n}\r\n\r\nexport default class FetchErrorView extends React.Component<FetchErrorProps, null> {\r\n    private reApi = async () => {\r\n        this.props.clearError();\r\n        const {channel, url, options, resolve, reject} = this.props;\r\n        await refetchApi(channel, url, options, resolve, reject);\r\n    }\r\n    private close = async () => {\r\n        this.props.clearError();\r\n    }\r\n    render() {\r\n        let {error, url} = this.props;\r\n            //let errMsg = fetchError.errorMsg;\r\n        let errContent;\r\n        if (typeof error === 'object') {\r\n            let err = [];\r\n            for (let i in error) {\r\n                err.push(<li key={i}><label>{i}</label><div>{error[i]}</div></li>);\r\n            }\r\n            errContent = <ul>{err}</ul>;\r\n        }\r\n        else {\r\n            errContent = <div>{error}</div>;\r\n        }\r\n        return <li>\r\n            <article className=\"page-container\">\r\n                <section>\r\n                    <div  className=\"va-error\">\r\n                        <div>网络出现问题</div>\r\n                        <div>点击重新访问</div>\r\n                        <div>url: {url}</div>\r\n                        {errContent}\r\n                        <div className=\"p-3\">\r\n                            <button type='button' onClick={this.reApi}>重新API</button>\r\n                            <button type='button' onClick={this.close}>关闭</button>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </article>\r\n        </li>;\r\n    }\r\n}\r\n","import {User, appInFrame, CenterApiBase} from 'tonva';\r\nimport { string } from 'prop-types';\r\n\r\nclass MainApi extends CenterApiBase {\r\n    async userAppUnits(app:number):Promise<any[]> {\r\n        return await this.get('tie/user-app-units', {app:app});\r\n    }\r\n    async stickies():Promise<any[]> {\r\n        return await this.get('sticky/list', {start:0, pageSize:30});\r\n    }\r\n\r\n    async ties():Promise<any[]> {\r\n        return await this.get('tie/list', {start:0, pageSize:30});\r\n    }\r\n\r\n    async apps(unit:number):Promise<any> {\r\n        return await this.get('tie/apps', {unit:unit});\r\n    }\r\n\r\n    async appApi(unit:number, app:number, apiName:string) {\r\n        return await this.get('tie/app-api', {unit:unit, app:app, apiName:apiName});\r\n    }\r\n\r\n    async userId(name:string):Promise<number> {\r\n        return await this.get('tie/user-id', {name:name});\r\n    }\r\n\r\n    async userAdminUnits():Promise<any[]> {\r\n        return await this.get('tie/user-admin-units', {});\r\n    }\r\n\r\n    async sendMessage(toUser:number, type:string, content:any) {\r\n        let {unit} = appInFrame;\r\n        let adminApp = 0;\r\n        return await this.post('tie/send-message', {\r\n            type: type, \r\n            fromUnit: unit, \r\n            fromApp: adminApp,\r\n            toUser: toUser, \r\n            content: content, \r\n        });\r\n    }\r\n\r\n    async unit(unit:number):Promise<any> {\r\n        return await this.get('unit/', {unit:unit});\r\n    }\r\n\r\n    async unitMemberCount(unit:number):Promise<number> {\r\n        return await this.get('unit/member-count', {unit:unit});\r\n    }\r\n\r\n    async unitAdmins(unit:number):Promise<any[]> {\r\n        return await this.get('unit/admins', {unit:unit});\r\n    }\r\n\r\n    async unitSetAdmin(fellow:number, unit:number, isOwner:number, isAdmin:number):Promise<any> {\r\n        return await this.post('unit/set-admin', {fellow:fellow, unit:unit, isOwner:isOwner, isAdmin:isAdmin});\r\n    }\r\n\r\n    async unitAddAdmin(user:string, unit:number, isOwner:number, isAdmin:number):Promise<any> {\r\n        return await this.post('unit/add-admin', {user:user, unit:unit, isOwner:isOwner, isAdmin:isAdmin});\r\n    }\r\n\r\n    async unitApps(unit:number):Promise<any[]> {\r\n        return await this.get('unit/apps', {unit:unit});\r\n    }\r\n\r\n    async unitAddApp(unit:number, app:number):Promise<number> {\r\n        let ret = await this.post('unit/add-app', {unit:unit, app:app});\r\n        return ret;\r\n    }\r\n\r\n    async unitDeleteApp(unit:number, app:number, deleted:number):Promise<void> {\r\n        await this.post('unit/delete-app', {unit:unit, app:app, deleted:deleted});\r\n    }\r\n\r\n    async unitChangeProp(unit:number, prop:string, value:any):Promise<void> {\r\n        await this.post('unit/change-prop', {unit:unit, prop:prop, value:value});\r\n    }\r\n\r\n    async searchApp(unit:number, key:string, pageStart:any, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/search-app', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n\r\n    async unitRoles(unit:number):Promise<any[]> {\r\n        return await this.get('unit/roles', {unit:unit});\r\n    }\r\n\r\n    async unitAddRole(unit:number, name:string, discription:string):Promise<number> {\r\n        return await this.post('unit/add-role', {unit:unit, name:name, discription:discription});\r\n    }\r\n\r\n    async unitRoleChangeProp(unit:number, role:number, prop:string, value:any):Promise<void> {\r\n        await this.post('unit/change-role-prop', {unit:unit, role:role, prop:prop, value:value});\r\n    }\r\n\r\n    async unitRoleApps(unit:number, role:number):Promise<any[]> {\r\n        return await this.get('unit/role-apps', {unit:unit, role:role});\r\n    }\r\n\r\n    async unitRoleSetApps(unit:number, role:number, apps:number[]):Promise<void> {\r\n        await this.post('unit/role-set-apps', {unit:unit, role:role, apps:apps});\r\n    }\r\n\r\n    async unitMembers(unit:number, role:number, key:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/members', {unit:unit, role:role, key, pageStart, pageSize});\r\n    }\r\n\r\n    async unitAssignMember(unit:number, member:number, assigned:string):Promise<void> {\r\n        await this.post('unit/assign-member', {unit:unit, member:member, assigned:assigned});\r\n    }\r\n\r\n    async unitMemberRoles(unit:number, member:number):Promise<any[]> {\r\n        return await this.get('unit/member-roles', {unit:unit, member:member});\r\n    }\r\n\r\n    async unitSetMemberRoles(unit:number, member:number, roles:number[]):Promise<void> {\r\n        await this.post('unit/member-set-roles', {unit:unit, member:member, roles:roles});\r\n    }\r\n\r\n    async unitUsers(unit:number, key:string, pageStart:number, pageSize:number):Promise<any> {\r\n        return await this.get('unit/users', {unit: unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitAppUsers(unit:number, key:string, pageStart:number, pageSize:number):Promise<any> {\r\n        return await this.get('unit/app-users', {unit: unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitOneAppUsers(unit:number, app:number, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/one-app-users', {unit: unit, app:app, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitOneUserApps(unit:number, user:number, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/one-user-apps', {unit: unit, user:user, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitAppEditUsers(unit:number, app:number, key:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/app-edit-users', {unit: unit, app:app, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitUserEditApps(unit:number, user:number, key:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/user-edit-apps', {unit: unit, user:user, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async bindAppUser(unit:number, app:number, user:number, bind:number):Promise<void> {\r\n        await this.post('unit/bind-app-user', {unit: unit, app:app, user:user, bind:bind});\r\n    }\r\n\r\n    async userFromKey(key:string):Promise<any> {\r\n        return await this.get('tie/user-from-key', {key:key});\r\n    }\r\n    async unitAddUser(unit:number, user:number) {\r\n        await this.post('unit/add-user', {unit:unit, user:user});\r\n    }\r\n}\r\n\r\nexport const mainApi = new MainApi('tv/', undefined);\r\n","import {CenterApiBase} from 'tonva';\r\n\r\nclass DevApi extends CenterApiBase {\r\n    async userAppUnits(app:number):Promise<any[]> {\r\n        return await this.get('tie/user-app-units', {app:app});\r\n    }\r\n    async uqBuilderUrl():Promise<any> {\r\n        let ret = await this.get('uq-builder-url', undefined);\r\n        return ret;\r\n    }    \r\n    async counts(unit:number):Promise<any> {\r\n        return await this.get('counts', {unit:unit});\r\n    }\r\n    async app(id:number):Promise<any> {\r\n        return await this.get('app', {id:id});\r\n    }\r\n    async uq(id:number):Promise<any> {\r\n        return await this.get('uq', {id:id});\r\n    }\r\n    async server(id:number):Promise<any> {\r\n        return await this.get('server', {id:id});\r\n    }\r\n    async apps(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('apps', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async uqs(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('uqs', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async buses(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('buses', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async servers(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('servers', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async services(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('services', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async saveApp(values:any):Promise<number> {\r\n        return await this.post('app-save', values);\r\n    }\r\n    async saveUq(values:any):Promise<number> {\r\n        return await this.post('uq-save', values);\r\n    }\r\n    async saveBus(values:any):Promise<number> {\r\n        return await this.post('bus-save', values);\r\n    }\r\n    async saveServer(values:any):Promise<number> {\r\n        return await this.post('server-save', values);\r\n    }\r\n    async saveService(values:any):Promise<number> {\r\n        return await this.post('service-save', values);\r\n    }\r\n    async delApp(unit:number,id:number):Promise<void> {\r\n        return await this.post('app-del', {unit:unit, id:id});\r\n    }\r\n    async delUq(unit:number,id:number):Promise<void> {\r\n        return await this.post('uq-del', {unit:unit, id:id});\r\n    }\r\n    async delBus(unit:number,id:number):Promise<void> {\r\n        return await this.post('bus-del', {unit:unit, id:id});\r\n    }\r\n    async delServer(unit:number,id:number):Promise<void> {\r\n        return await this.post('server-del', {unit:unit, id:id});\r\n    }\r\n    async delUqdb(unit:number,id:number):Promise<void> {\r\n        return await this.post('uqdb-del', {unit:unit, id:id});\r\n    }\r\n    async delService(unit:number,id:number):Promise<void> {\r\n        return await this.post('service-del', {unit:unit, id:id});\r\n    }\r\n    async loadAppUqs(app:number):Promise<any[]> {\r\n        return await this.get('app-uqs', {app: app});\r\n    }\r\n    async appBindUq(unit:number,app:number,uqs:{id:number, access:string[]}[]):Promise<void> {\r\n        let uqsText:string;\r\n        if (uqs !== undefined) {\r\n            uqsText = uqs.map(v => String(v.id)+'|'+v.access.join(',')).join(';');\r\n        }\r\n        await this.post('app-bind-uq', {unit:unit, app:app, uqs:uqsText});\r\n    }\r\n    async searchUq(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('uq-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async getMyUqs(unit:number):Promise<any[]> {\r\n        return await this.get('my-uqs', {unit:unit});\r\n    }\r\n    async searchApp(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('app-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async searchServer(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('server-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async searchUqdb(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('uqdb-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async loadUqServices(unit:number, uq:number):Promise<any[]> {\r\n        return await this.get('uq-services', {unit:unit, uq:uq});\r\n    }\r\n    async changeServiceProp(unit:number, service:number, prop:string, value:any):Promise<number> {\r\n        return await this.post('service-change-prop', {unit:unit, service:service, prop:prop, value:value});\r\n    }\r\n    async uqGetEntities(unit:number, uq:number):Promise<any[][]> {\r\n        return await this.get('uq-get-entities', {unit:unit, uq:uq});\r\n    }\r\n}\r\n\r\nexport const devApi = new DevApi('tv/dev/', undefined);\r\n","import {observable} from 'mobx';\r\nimport {UnitAdmin} from '../model';\r\nimport {mainApi} from '../api';\r\nimport {Store} from './index';\r\n\r\nexport class Admins {\r\n    private store:Store;\r\n    constructor(store:Store) {\r\n        this.store = store;\r\n    }\r\n\r\n    @observable cur: UnitAdmin = undefined;\r\n    @observable owners: UnitAdmin[] = undefined;\r\n    @observable admins: UnitAdmin[] = undefined;\r\n    @observable fellows: UnitAdmin[] = undefined;\r\n    \r\n    async load(): Promise<void> {\r\n        let unit = this.store.unit;\r\n        if (unit === undefined) return;\r\n        if (unit.id === undefined) return;\r\n        if (this.admins !== undefined) return;\r\n        let all = await mainApi.unitAdmins(unit.id);\r\n        let owners:UnitAdmin[] = [];\r\n        let admins:UnitAdmin[] = [];\r\n        let fellows:UnitAdmin[] = [];\r\n        all.forEach(ua => {\r\n            let {isOwner, isAdmin} = ua;\r\n            if (isOwner === 0 && isAdmin === 0)\r\n                fellows.push(ua);\r\n            else {\r\n                if (isOwner === 1) owners.push(ua);\r\n                if (isAdmin === 1) admins.push(ua);\r\n            }\r\n        });\r\n        this.owners = owners;\r\n        this.admins = admins;\r\n        this.fellows = fellows;\r\n    }\r\n\r\n    private removeCur(arr: UnitAdmin[]) {\r\n        let index = arr.findIndex(v => v.id===this.cur.id);\r\n        if (index >=0) arr.splice(index, 1);\r\n    }\r\n\r\n    async unitSetAdmin(isOwner:number, isAdmin:number) {\r\n        let cur = this.cur;\r\n        cur.isOwner = isOwner;\r\n        cur.isAdmin = isAdmin;\r\n        let fellowId = cur.id, unitId = this.store.unit.id;\r\n        await mainApi.unitSetAdmin(fellowId, unitId, isOwner, isAdmin);\r\n        this.removeCur(this.owners);\r\n        this.removeCur(this.admins);\r\n        this.removeCur(this.fellows);\r\n        if (isOwner === 0 && isAdmin === 0)\r\n            this.fellows.unshift(cur);\r\n        else {\r\n            if (isOwner === 1) this.owners.unshift(cur);\r\n            if (isAdmin === 1) this.admins.unshift(cur);\r\n        }\r\n    }\r\n\r\n    async addNew(user:string, isOwner:number, isAdmin:number):Promise<UnitAdmin> {\r\n        let admin = await mainApi.unitAddAdmin(user, this.store.unit.id, isOwner, isAdmin);\r\n        if (admin !== undefined) {\r\n            let cur = this.cur = admin;\r\n            this.removeCur(this.owners);\r\n            this.removeCur(this.admins);\r\n            this.removeCur(this.fellows);\r\n            if (isOwner === 0 && isAdmin === 0)\r\n                this.fellows.unshift(cur);\r\n            else {\r\n                if (isOwner === 1) this.owners.unshift(cur);\r\n                if (isAdmin === 1) this.admins.unshift(cur);\r\n            }\r\n        }\r\n        return admin;\r\n    }\r\n}\r\n","import {observable, autorun} from 'mobx';\r\nimport _ from 'lodash';\r\nimport {devApi} from '../api';\r\nimport {DevModel, Unit} from '../model';\r\nimport {Store} from './index';\r\n\r\ninterface Counts {\r\n    uq: number;\r\n    app: number;\r\n    bus: number;\r\n    server: number;\r\n    service: number;\r\n    //uqdb: number;\r\n}\r\n\r\nexport abstract class ObjItems<T extends DevModel.ObjBase> {\r\n    protected store:Store;\r\n    protected dev:Dev;\r\n    constructor(store:Store, dev:Dev) {\r\n        this.store = store;\r\n        this.dev = dev;\r\n    }\r\n\r\n    @observable items: T[] = undefined;\r\n    @observable cur: T = undefined;\r\n\r\n    async load():Promise<void> {\r\n         let ret = await this._load();\r\n         this.items = ret;\r\n    }\r\n    protected abstract _load():Promise<T[]>;\r\n    async saveCur(item:T):Promise<boolean> {\r\n        let values:any = {};\r\n        if (this.cur !== undefined) {\r\n            _.assign(values, this.cur, item);\r\n        }\r\n        else {\r\n            _.assign(values, item);\r\n        }\r\n\r\n        values.unit = item.unit = this.store.unit.id;\r\n        let id = await this._save(values);\r\n        if (this.cur === undefined) {\r\n            if (id === 0) return false;\r\n            values.id = id;\r\n            if (this.items !== undefined) this.items.unshift(values);\r\n            this._inc();\r\n            this.cur = observable(values);\r\n        }\r\n        else {\r\n            _.assign(this.cur, values);\r\n        }\r\n        return true;\r\n    }\r\n    async check(item:T):Promise<boolean> {\r\n        return true;\r\n    }\r\n    async save(item:T):Promise<T> {\r\n        let values:any = {};\r\n        _.assign(values, item);\r\n\r\n        values.unit = item.unit = this.store.unit.id;\r\n        let id = await this._save(values);\r\n        if (id === 0) return;\r\n        values.id = id;\r\n        return values;\r\n    }\r\n    protected abstract _save(item:T):Promise<number>;\r\n    async del():Promise<void> {\r\n        let c = this.cur;\r\n        if (c === undefined) return;\r\n        let id = c.id;\r\n        await this._del(c);\r\n        if (this.items === undefined) return;\r\n        let index = this.items.findIndex(v => v.id === id);\r\n        if (index>=0) {\r\n            this.items.splice(index, 1);\r\n            this._dec();\r\n        }\r\n    }\r\n    protected abstract _del(item:T):Promise<void>;\r\n    protected abstract _inc();\r\n    protected abstract _dec();\r\n}\r\n\r\nclass Apps extends ObjItems<DevModel.App> {\r\n    @observable uqs: DevModel.UQ[] = undefined;\r\n    @observable searchedUqs: DevModel.UQ[] = undefined;\r\n    //@observable service: DevModel.Service = null;\r\n    protected async _load() {\r\n        return await devApi.apps(this.store.unit.id);\r\n    }\r\n    protected async _save(item:DevModel.App):Promise<number> {\r\n        return await devApi.saveApp(item);\r\n    }\r\n    protected async _del(item:DevModel.App):Promise<void> {\r\n        await devApi.delApp(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.app++; }\r\n    protected _dec() { this.dev.counts.app--; }\r\n\r\n    public async loadCurUqs() {\r\n        let ret = await devApi.loadAppUqs(this.cur.id);\r\n        this.uqs = ret;\r\n    }\r\n    public async searchUq(key:string) {\r\n        this.searchedUqs = await devApi.searchUq(this.store.unit.id, key, 0, searchPageSize);\r\n    }\r\n    public async appBindUq(uqs:{id:number, access:string[]}[], bind:boolean) {\r\n        let allUqs:{id:number, access:string[]}[] = this.uqs.map(v => {\r\n            let {id, access} = v;\r\n            return {id: id, access: [access]};\r\n        });\r\n        for (let uq of uqs) {\r\n            let index = allUqs.findIndex(v => v.id === uq.id);\r\n            if (bind === true) {\r\n                if (index < 0) allUqs.unshift(uq);\r\n            }\r\n            else {\r\n                allUqs.splice(index, 1);\r\n            }\r\n        }\r\n        await devApi.appBindUq(this.store.unit.id, this.cur.id, allUqs);\r\n        for (let uq of uqs) {\r\n            let index = this.uqs.findIndex(a => a.id === uq.id);\r\n            if (index>=0) this.uqs.splice(index, 1);\r\n            if (bind === true) {\r\n                if (this.searchedUqs !== undefined) {\r\n                    let find = this.searchedUqs.find(a => a.id === uq.id);\r\n                    if (find !== undefined) this.uqs.unshift(find);\r\n                }\r\n            }\r\n            else {\r\n                // 已经删除，不需要处理\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass Uqs extends ObjItems<DevModel.UQ> {\r\n    protected async _load() {\r\n        let ret = await devApi.uqs(this.store.unit.id);\r\n        return ret;\r\n    }\r\n    protected async _save(item:DevModel.UQ):Promise<number> {\r\n        //let {access} = item;\r\n        //if (!access) access = \"*';\r\n        //let parts = access.split(',').map(v => v.trim()).filter(v => v!=='');\r\n        //item.access = parts.join(',');\r\n        return await devApi.saveUq(item);\r\n    }\r\n    protected async _del(item:DevModel.UQ):Promise<void> {\r\n        await devApi.delUq(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.uq++; }\r\n    protected _dec() { this.dev.counts.uq--; }\r\n}\r\n\r\nclass Buses extends ObjItems<DevModel.Bus> {\r\n    protected async _load() {\r\n        let ret = await devApi.buses(this.store.unit.id);\r\n        return ret;\r\n    }\r\n    protected async _save(item:DevModel.Bus):Promise<number> {\r\n        return await devApi.saveBus(item);\r\n    }\r\n    protected async _del(item:DevModel.Bus):Promise<void> {\r\n        await devApi.delBus(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.bus++; }\r\n    protected _dec() { this.dev.counts.bus--; }\r\n    async check(item:DevModel.Bus):Promise<boolean> {\r\n        let {schema} = item;\r\n        try {\r\n            let bus = JSON.parse(schema);\r\n            for (let i in bus) {\r\n                let face = bus[i];\r\n                if (face === null || face === undefined) {\r\n                    alert(`face ${i} is null，请设置内容`);\r\n                    return false;\r\n                }\r\n                switch (typeof face) {\r\n                    case 'function':\r\n                        alert(`face ${i} is function，不接受function`);\r\n                        return false;\r\n                    //case 'bigint':\r\n                    case 'boolean':\r\n                    case 'number':\r\n                    case 'string':\r\n                        alert(`face ${i} 应该是数组或者对象`);\r\n                        return false;\r\n                }\r\n                if (Array.isArray(face) === true) {\r\n                    if (checkBusFace(face, bus) === false) return false;\r\n                }\r\n                else {\r\n                    if (checkBusQuery(face, bus) === false) return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        catch (err) {\r\n            alert(err.message);\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nconst paramTypes = ['id', 'number', 'string'];\r\nconst busTypes = [...paramTypes, 'array'];\r\nfunction refNameOk(faceName:string, bus:any):boolean {\r\n    let face = bus[faceName];\r\n    if (face === undefined) {\r\n        alert(`face ${faceName} not defined`);\r\n        return false;\r\n    }\r\n    if (Array.isArray(face) === false) {\r\n        alert(`face ${faceName} is referenced, bus is not array`);\r\n        return false;\r\n    }\r\n    return refArrayOk(face as any[], bus);\r\n}\r\n\r\nfunction refArrayOk(items:any[], bus:any):boolean {\r\n    for (let item of items) {\r\n        let {type} = item;\r\n        if (['id', 'string', 'number', 'array'].indexOf(type) < 0) {\r\n            alert(`type ${type} out of ['id', 'string', 'number', 'array']`);\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction checkBusFace(face: any[], bus:any):boolean {\r\n    if (!face || typeof face !== 'object') {\r\n        alert('only object');\r\n        return false;\r\n    }\r\n    for (let field of face) {\r\n        let {type} = field;\r\n        if (type === undefined) {\r\n            alert('type not defined');\r\n            return false;\r\n        }\r\n        else if (type === 'array') {\r\n            let {fields} = field;\r\n            if (refNameOk(fields, bus) === false) {\r\n                return false;\r\n            }\r\n        }\r\n        if (busTypes.indexOf(type) < 0) {\r\n            if (type === 'date') {\r\n                alert('不再支持数据类型date，请用number unixtime作为媒介')\r\n            }\r\n            else {\r\n                alert(`不支持数据类型 ${type}`);\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction checkBusQuery(face: any, bus:any):boolean {\r\n    for (let i in face) {\r\n        let item = face[i];\r\n        switch (i) {\r\n            default:\r\n                alert(i + ': not allowed in bus query.');\r\n                return false;\r\n            case 'param':\r\n                if (checkBusQueryParam(item, bus) === false) return false;\r\n                break;\r\n            case 'returns':\r\n                let returns = item;\r\n                if (typeof item === 'string') {\r\n                    returns = bus[item];\r\n                    if (returns === undefined) {\r\n                        alert(item + ' is not defined');\r\n                        return false;\r\n                    }\r\n                }\r\n                if (checkBusFace(returns, bus) === false) return false;\r\n                break;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction checkBusQueryParam(param: any, bus:any):boolean {\r\n    if (param === null || param === undefined) return;\r\n    switch (typeof param) {\r\n        case 'string':\r\n            return refNameOk(param, bus);\r\n        default:\r\n            if (Array.isArray(param)) {\r\n                return refArrayOk(param, bus);\r\n            }\r\n            break;\r\n    }\r\n    alert('param of a query can only be string or array');\r\n    return false;\r\n}\r\n\r\nclass Servers extends ObjItems<DevModel.Server> {\r\n    protected async _load() {\r\n        return await devApi.servers(this.store.unit.id);\r\n    }\r\n    protected async _save(item:DevModel.Server):Promise<number> {\r\n        return await devApi.saveServer(item);\r\n    }\r\n    protected async _del(item:DevModel.Server):Promise<void> {\r\n        await devApi.delServer(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.server++; }\r\n    protected _dec() { this.dev.counts.server--; }\r\n}\r\nclass Services extends ObjItems<DevModel.Service> {\r\n    protected async _load() {\r\n        return await devApi.services(this.store.unit.id);\r\n    }\r\n    protected async _save(item:DevModel.Service):Promise<number> {\r\n        return await devApi.saveService(item);\r\n    }\r\n    protected async _del(item:DevModel.Service):Promise<void> {\r\n        await devApi.delService(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.service++; }\r\n    protected _dec() { this.dev.counts.service--; }\r\n    async changeProp(prop:string, value:any):Promise<number> {\r\n        let ret = await devApi.changeServiceProp(this.store.unit.id, this.cur.id, prop, value);\r\n        switch (prop) {\r\n            case 'url': this.cur.url = value; break;\r\n            case 'urlTest': this.cur.urlTest = value; break;\r\n            case 'server': this.cur.server = value; break;\r\n            case 'db': this.cur.db = value; break;\r\n            //case 'db_type': this.cur.db_type = value; break;\r\n            //case 'connection': this.cur.connection = value; break;\r\n        }\r\n        return ret;\r\n    }\r\n    async loadUqServices(uq:number):Promise<void> {\r\n        let ret = await devApi.loadUqServices(this.store.unit.id, uq);\r\n        this.items = ret[0];\r\n    }\r\n}\r\n\r\nconst searchPageSize = 50;\r\ntype Search = (unit:number,key:string,pageStart:number,pageSize:number)=>Promise<any[]>;\r\nclass SearchItems<T extends DevModel.ObjBase> {\r\n    private store:Store;\r\n    private dev:Dev;\r\n    private search:(unit:number,key:string,pageStart:number,pageSize:number)=>Promise<any[]>;\r\n\r\n    constructor(store:Store, dev:Dev, search:Search) {\r\n        this.store = store;\r\n        this.dev = dev;\r\n        this.search = search;\r\n    }\r\n\r\n    @observable items: T[] = undefined;\r\n    allLoaded: boolean = false;\r\n    private key: string;\r\n    private pageStart = 0;\r\n\r\n    async first(key:string) {\r\n        this.key = key;\r\n        this.items = undefined;\r\n        this.allLoaded = false;\r\n        this.pageStart = 0;\r\n        await this.more();\r\n    }\r\n\r\n    async more():Promise<void> {\r\n        if (this.allLoaded === true) return;\r\n        let ret = await this.search(this.store.unit.id, this.key, this.pageStart, searchPageSize);\r\n        let len = ret.length;\r\n        if (len > searchPageSize) {\r\n            this.allLoaded = false;\r\n            --len;\r\n            ret.splice(len, 1);\r\n        }\r\n        else {\r\n            this.allLoaded = true;\r\n        }\r\n        if (len > 0) {\r\n            this.pageStart = ret[len-1].id;\r\n            if (this.items === undefined)\r\n                this.items = ret;\r\n            else\r\n                this.items.push(...ret);\r\n        }\r\n        else {\r\n            this.items = [];\r\n        }\r\n    }\r\n}\r\n\r\nexport class Dev {\r\n    private store:Store;\r\n    constructor(store:Store) {\r\n        this.store = store;\r\n        this.apps = new Apps(store, this);\r\n        this.uqs = new Uqs(store, this);\r\n        this.buses = new Buses(store, this);\r\n        this.servers = new Servers(store, this);\r\n        //this.uqdbs = new Uqdbs(store, this);\r\n        this.services = new Services(store, this);\r\n        this.searchApp = new SearchItems<DevModel.App>(store, this, devApi.searchApp.bind(devApi));\r\n        this.searchUq = new SearchItems<DevModel.UQ>(store, this, devApi.searchUq.bind(devApi));\r\n        this.searchServer = new SearchItems<DevModel.Server>(store, this, devApi.searchServer.bind(devApi));\r\n    }\r\n\r\n    @observable counts:Counts = undefined;\r\n    apps:Apps = undefined;\r\n    uqs:Uqs = undefined;\r\n    buses:Buses = undefined;\r\n    servers:Servers = undefined;\r\n    //uqdbs:Uqdbs = undefined;\r\n    services:Services = undefined;\r\n\r\n    searchApp:SearchItems<DevModel.App> = undefined;\r\n    searchUq:SearchItems<DevModel.UQ> = undefined;\r\n    searchServer:SearchItems<DevModel.Server> = undefined;\r\n    //searchUqdb:SearchItems<DevModel.Uqdb> = undefined;\r\n    \r\n    async loadCounts(): Promise<void> {\r\n        let {unit} = this.store;\r\n        this.counts = await devApi.counts(unit.id);\r\n    }\r\n}\r\n","import {CacheIds} from 'tonva';\r\nimport {Id, Unit, DevModel} from '../model';\r\nimport {mainApi, devApi} from '../api';\r\n\r\nexport class CacheUnits extends CacheIds<Unit> {\r\n    protected async _loadIds(ids:number[]):Promise<Unit[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<Unit> {\r\n        return await mainApi.unit(id);\r\n    }\r\n}\r\n\r\nexport class CacheUqs extends CacheIds<DevModel.UQ> {\r\n    protected async _loadIds(ids:number[]):Promise<DevModel.UQ[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<DevModel.UQ> {\r\n        return await devApi.uq(id);\r\n    }\r\n}\r\n\r\nexport class CacheApps extends CacheIds<DevModel.App> {\r\n    protected async _loadIds(ids:number[]):Promise<DevModel.App[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<DevModel.App> {\r\n        return await devApi.app(id);\r\n    }\r\n}\r\n\r\nexport class CacheServers extends CacheIds<DevModel.Server> {\r\n    protected async _loadIds(ids:number[]):Promise<DevModel.Server[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<DevModel.Server> {\r\n        return await devApi.server(id);\r\n    }\r\n}\r\n","import {observable, autorun} from 'mobx';\r\nimport _ from 'lodash';\r\nimport {appInFrame, host} from 'tonva';\r\nimport {mainApi, devApi} from '../api';\r\nimport {Unit, UnitApps, App, Api, UnitAdmin, UnitApp, Role, RoleMember} from '../model';\r\nimport {Admins} from './admins';\r\nimport {Dev} from './dev';\r\nimport {CacheUnits, CacheUqs, CacheApps, CacheServers} from './cacheIds';\r\n\r\nexport class Store {\r\n    private get unitId():number {return appInFrame.unit;};\r\n    admins:Admins;\r\n    dev:Dev;\r\n    cacheUnits: CacheUnits;\r\n    cacheUqs: CacheUqs;\r\n    cacheApps: CacheApps;\r\n    cacheServers: CacheServers;\r\n    uqServer: string;\r\n\r\n    @observable unit: Unit;\r\n    @observable memberCount: number;\r\n    @observable apps: UnitApp[];\r\n    @observable role:Role;\r\n    @observable roles: Role[];\r\n    @observable roleApps: UnitApp[];\r\n    @observable roleMember: RoleMember;\r\n    @observable roleMembers: RoleMember[];\r\n    @observable memberRoles: Role[];\r\n\r\n    init() {\r\n        this.unit = undefined;\r\n        this.admins = new Admins(this);\r\n        this.dev = new Dev(this);\r\n        this.cacheUnits = new CacheUnits();\r\n        this.cacheUqs = new CacheUqs();\r\n        this.cacheApps = new CacheApps();\r\n        this.cacheServers = new CacheServers();\r\n    }\r\n\r\n    logout() {\r\n        //meInFrame.app = undefined;\r\n        appInFrame.hash = undefined;\r\n        //let unitId = process.env.REACT_APP_DEBUG_UNITID;\r\n        //if (unitId !== undefined)\r\n        //    meInFrame.unit = Number(unitId);\r\n        appInFrame.unit = undefined;\r\n        this.init();\r\n        this.memberCount = undefined;\r\n        this.apps = undefined;\r\n        this.role = undefined;\r\n        this.roles = undefined;\r\n        this.roleApps = undefined;\r\n        this.roleMember = undefined;\r\n        this.roleMembers = undefined;\r\n        this.memberRoles = undefined;\r\n    }\r\n\r\n    setRole(role:Role) {\r\n        if (this.role === role) return;\r\n        this.role = role;\r\n        this.roleApps = undefined;\r\n        this.roleMember = undefined;\r\n        this.roleMembers = undefined;\r\n        this.memberRoles = undefined;\r\n    }\r\n\r\n    setRoleUser(user:RoleMember) {\r\n        if (this.roleMember === user) return;\r\n        this.roleMember = user;\r\n        this.memberRoles = undefined;\r\n    }\r\n\r\n    async unitChangeProp(prop:string, value:any):Promise<void> {\r\n        await mainApi.unitChangeProp(this.unit.id, prop, value);\r\n        this.unit[prop] = value;\r\n    }\r\n\r\n    async loadApps(): Promise<void> {\r\n        if (this.apps !== undefined) return;\r\n        this.apps = await mainApi.unitApps(this.unitId);\r\n    }\r\n\r\n    async loadUnit(): Promise<void> {\r\n        if (this.unitId === undefined) return;\r\n        let ret = await mainApi.unit(this.unitId);\r\n        this.unit = ret;\r\n        console.log(\"loadUnit unit=%s\", ret);\r\n        this.memberCount = await mainApi.unitMemberCount(this.unitId);\r\n        let uqServer = await devApi.uqBuilderUrl();\r\n        let {url} = uqServer;\r\n        this.uqServer = host.getUrlOrDebug(url, 'uq-build');\r\n        console.log(\"uq-build: %s\", JSON.stringify(this.uqServer));\r\n    }\r\n\r\n    async stopUnitApp(appId:number): Promise<void> {\r\n        await mainApi.unitDeleteApp(this.unit.id, appId, 1);\r\n        let app = this.apps.find(v => v.id === appId);\r\n        app.inUnit = 0;\r\n    }\r\n\r\n    async restoreUnitApp(appId:number): Promise<number> {\r\n        let ret = await mainApi.unitAddApp(this.unit.id, appId);\r\n        if (ret <= 0) return ret;\r\n        let app = this.apps.find(v => v.id === appId);\r\n        app.inUnit = 1;\r\n        return 1;\r\n    }\r\n\r\n    async addUnitApp(app:UnitApp): Promise<number> {\r\n        let ret = await mainApi.unitAddApp(this.unit.id, app.id);\r\n        if (ret <= 0) return ret;\r\n        this.apps.push(app);\r\n        return 1;\r\n    }\r\n\r\n    async loadRoles(): Promise<void> {\r\n        if (this.roles !== undefined) return;\r\n        let ret = await mainApi.unitRoles(this.unit.id);\r\n        ret.forEach(v => {\r\n            switch (v.id) {\r\n                case 1: \r\n                    v.name= '访客';\r\n                    v.discription = '可以获取开放信息';\r\n                    break;\r\n                case 2: \r\n                    v.name= '普通';\r\n                    v.discription = '能访问最基本的功能';\r\n                    break;\r\n            }\r\n        });\r\n        this.roles = ret;\r\n    }\r\n\r\n    async unitAddRole(name:string, discription:string): Promise<number> {\r\n        let id = await mainApi.unitAddRole(this.unit.id, name, discription);\r\n        if (id > 0) {\r\n            this.roles.push({\r\n                id: id,\r\n                name: name,\r\n                discription: discription,\r\n                count: undefined,\r\n            });\r\n        }\r\n        return id;\r\n    }\r\n\r\n    async roleChangeProp(prop:string, value:any):Promise<void> {\r\n        await mainApi.unitRoleChangeProp(this.unit.id, this.role.id, prop, value);\r\n        this.role[prop] = value;\r\n    }\r\n\r\n    async loadRoleApps():Promise<void> {\r\n        let ret = await mainApi.unitRoleApps(this.unit.id, this.role.id);\r\n        this.roleApps = ret.map(v => {\r\n            return this.apps.find(app=>app.id === v.id);\r\n        });\r\n    }\r\n\r\n    async setRoleApps(apps:UnitApp[]) {\r\n        await mainApi.unitRoleSetApps(this.unit.id, this.role.id, apps.map(v=>v.id));\r\n        this.roleApps = apps;\r\n    }\r\n\r\n    async loadMembers():Promise<void> {\r\n        let ret = await mainApi.unitMembers(this.unit.id, this.role === undefined? 0:this.role.id, undefined, 0, 100);\r\n        this.roleMembers = ret;\r\n    }\r\n\r\n    async unitAssignMember(assigned:string):Promise<void> {\r\n        await mainApi.unitAssignMember(this.unit.id, this.roleMember.id, assigned);\r\n        this.roleMember.assigned = assigned;\r\n    }\r\n\r\n    async loadMemberRoles():Promise<void> {\r\n        let ret = await mainApi.unitMemberRoles(this.unit.id, this.roleMember.id);\r\n        let roles:Role[] = ret.map(v => {\r\n            let rId = v.id;\r\n            let role = this.roles.find(r => r.id === rId);\r\n            return _.clone(role);\r\n        });\r\n        this.memberRoles = roles;\r\n    }\r\n\r\n    async setMemberRoles(memberRoles:Role[]) {\r\n        await mainApi.unitSetMemberRoles(this.unit.id, this.roleMember.id, memberRoles.map(v=>v.id));\r\n        this.roles.forEach(role => {\r\n            let rId = role.id;\r\n            let org = this.memberRoles.find(v => v.id === rId);\r\n            let cur = memberRoles.find(v => v.id === rId);\r\n            if (org !== undefined) {\r\n                if (cur !== undefined) return;\r\n                role.count--;\r\n                return;\r\n            }\r\n            if (cur === undefined) return;\r\n            role.count++;\r\n        });\r\n        this.memberRoles = memberRoles;\r\n    }\r\n};\r\n\r\nexport const store = new Store();\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page, Context, Form, Schema, UiSchema, UiTextItem} from 'tonva';\r\nimport {store} from '../store';\r\n\r\n@observer\r\nexport default class NewFellowPage extends React.Component<{isOwner:boolean, isAdmin:boolean}> {\r\n    //private form: TonvaForm;\r\n    private schema: Schema = [\r\n        {name:'user', type:'string', required:true},\r\n        {name:'submit', type:'submit'}\r\n    ]\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            user: {widget:'text', maxLength: 100, placeholder: '用户名', label: '管理员'} as UiTextItem,\r\n            submit: {widget:'button', label: '添加', className: 'btn btn-primary'}\r\n        }\r\n    }\r\n    /*\r\n    private formRows:FormRow[] = [\r\n        {\r\n            label: '用户名',\r\n            field: {\r\n                type: 'string',\r\n                name: 'user',\r\n                required: true,\r\n                maxLength: 100,\r\n            },\r\n            face: {\r\n                type: 'string',\r\n                placeholder: '用户名',\r\n            }\r\n        },\r\n    ];\r\n    private schema:FormSchema = new FormSchema({\r\n        fields: [\r\n            {\r\n                type: 'string',\r\n                name: 'user',\r\n                placeholder: '用户名',\r\n                label: '邀请成员',\r\n                rules: ['required', 'maxlength:100']\r\n            },\r\n        ],\r\n        onSumit: this.onSendInvitation,\r\n        submitText: '邀请'\r\n    });\r\n    */\r\n    private onSendInvitation = async (name:string, context:Context): Promise<string> => {\r\n        let {isOwner, isAdmin} = this.props;\r\n        let user = context.form.data['user'];\r\n        let ret = await store.admins.addNew(user, isOwner?1:0, isAdmin?1:0);\r\n        if (ret !== undefined) {\r\n            nav.pop();\r\n            return;\r\n        }\r\n        return user + '没有关注小号';\r\n        /*\r\n        let msg = {a: 1, b: 'ddd'};\r\n        let toName = values['user'];\r\n        let userId = await mainApi.userId(toName);\r\n        if (userId === 0) {\r\n            this.form.formView.setError('user', '\\'' + toName +  '\\' 不存在');\r\n            return;\r\n        }\r\n        await mainApi.sendMessage(userId, 'unit-follow-invite', msg);\r\n        nav.replace(<Page header='完成' back=\"close\">\r\n            <Card>\r\n                <CardBody>\r\n                    <CardTitle>邀请成员</CardTitle>\r\n                    <CardText>已发送给{toName}，请等待确认。</CardText>\r\n                    <Button color='primary' onClick={()=>nav.back()}>完成</Button>\r\n                </CardBody>\r\n            </Card>\r\n        </Page>);\r\n        */\r\n    }\r\n    render() {\r\n        let {isOwner, isAdmin} = this.props;\r\n        let caption = isOwner? \"高管\" : \"管理员\";\r\n        return <Page header={'新增' + caption}>\r\n            <div className=\"container\">\r\n                <div className='my-4 text-info'>\r\n                    只有关注本小号的用户，才能成为{caption}\r\n                </div>\r\n                <Form schema={this.schema} uiSchema={this.uiSchema} onButtonClick={this.onSendInvitation}/>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n// <ValidForm formSchema={this.schema} />\r\n//<TonvaForm ref={f=>this.form=f} formRows={this.formRows} onSubmit={this.onSendInvitation} />\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page, Schema, UiSchema, ItemSchema, UiCheckItem, UiButton, ButtonSchema, Form, Context, Image} from 'tonva';\r\nimport {store} from '../store';\r\nimport { UnitAdmin } from '../model/index';\r\n//import {mainApi} from '../api';\r\n//, ValidForm, FormSchema, FormFields, Field\r\n\r\n@observer\r\nexport default class EditAdmin extends React.Component {\r\n    private onSubmit = async (name:string, context:Context) => {\r\n        let {isOwner, isAdmin} = context.form.data;\r\n        await store.admins.unitSetAdmin(isOwner, isAdmin);\r\n        nav.pop();\r\n    }\r\n    render() {\r\n        let {unit} = store;\r\n        let {isRoot, isOwner, isAdmin} = unit;\r\n        let unitAdmin = store.admins.cur;\r\n        let owner:ItemSchema = {name: 'isOwner', type: 'boolean'};\r\n        let admin:ItemSchema = {name: 'isAdmin', type: 'boolean'};\r\n        let submit:ButtonSchema = {name: 'submit', type: 'submit'};\r\n        let schema:ItemSchema[];\r\n        if (isRoot === 1) schema = [owner, admin, submit];\r\n        else if (isOwner === 1) schema = [admin, submit];\r\n        let data = {\r\n            isOwner: unitAdmin.isOwner,\r\n            isAdmin: unitAdmin.isAdmin,\r\n        };\r\n\r\n        let uiSchema = {\r\n            items: {\r\n                'isOwner': {widget: 'checkbox', label: '高管', trueValue:1, falseValue:0} as UiCheckItem,\r\n                'isAdmin': {widget: 'checkbox', label: '管理员', trueValue:1, falseValue:0} as UiCheckItem,\r\n                'submit': {widget: 'button', label: '提交', className: 'btn btn-primary'} as UiButton,\r\n            }\r\n        };\r\n\r\n        return <Page header='权限'>\r\n            <div className=\"px-3\">\r\n                <Fellow {...store.admins.cur} />\r\n                <Form schema={schema} uiSchema={uiSchema} formData={data} onButtonClick={this.onSubmit} />\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n\r\nconst Fellow = (props:UnitAdmin) => {\r\n    let {name, nick, icon} = props;\r\n    //<img className='w-75' src={icon || process.env.REACT_APP_DEFAULT_ICON} />\r\n    return <div>\r\n        <div className='d-flex my-4'>\r\n            <Image className=\"w-3c h-3c mr-3\" src={icon} />\r\n            <div className=\"\">\r\n                <h4 className='text-dark'>{name}</h4>\r\n                {nick && <h6><small className='text-secondary'>{nick}</small></h6>}\r\n            </div>\r\n        </div>\r\n        <hr className='mb-4' />\r\n    </div>;\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page, Image} from 'tonva';\r\nimport {UnitApps, UnitAdmin} from '../model';\r\nimport {store} from '../store';\r\nimport NewFellow from './NewFellow';\r\nimport EditAdmin from './EditAdmin';\r\nimport {LMR, Badge, List} from 'tonva';\r\n\r\n@observer\r\nexport default class AdministorsPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.admins.load();\r\n    }\r\n\r\n    onNewFellow() {\r\n        //nav.push(<NewFellow />);\r\n    }\r\n    onItemClick(ua:UnitAdmin) {\r\n        store.admins.cur = ua;\r\n        nav.push(<EditAdmin />);\r\n    }\r\n    private row = ({icon, name, nick}:UnitAdmin) => {\r\n        let content = nick?\r\n            <><b>{nick}</b> &nbsp; <small className=\"text-muted\">{name}</small></>\r\n            :\r\n            <b>{name}</b>;\r\n        let left = <Image className=\"w-2-5c h-2-5c\" src={icon} />; \r\n        return <LMR className=\"py-2 px-3 align-items-stretch\" left={left}>\r\n            <div className=\"px-3\">{content}</div>\r\n        </LMR>;\r\n    }\r\n\r\n    private onNewOwner = (evt: React.MouseEvent<HTMLAnchorElement>) => {\r\n        this.newAdmin(evt, true, false);\r\n    }\r\n\r\n    private onNewAdmin = (evt: React.MouseEvent<HTMLAnchorElement>) => {\r\n        this.newAdmin(evt, false, true);\r\n    }\r\n\r\n    private newAdmin(evt: React.MouseEvent<HTMLAnchorElement>, isOwner:boolean, isAdmin:boolean) {\r\n        evt.preventDefault();\r\n        nav.push(<NewFellow isOwner={isOwner} isAdmin={isAdmin} />);\r\n    } \r\n    render() {\r\n        //let n = nav;\r\n        //let me = n.local.user.get().id;\r\n        let {unit} = store;\r\n        if (unit === undefined) return;\r\n        let {owners, admins, fellows} = store.admins;\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.onNewFellow}>新增成员</button>;\r\n\r\n        let showOwners = false, showAdmins = false;\r\n        let ownersView, adminsView, fellowsView;\r\n        if (unit.isRoot === 1) {\r\n            showOwners = true;\r\n            showAdmins = true;\r\n        }\r\n        if (unit.isOwner === 1) showAdmins = true;\r\n        if (showOwners === true) {\r\n            let header = <LMR \r\n                className=\"px-3 py-1 small\"\r\n                left=\"高管\" \r\n                right={<a className=\"small\" href='#' onClick={this.onNewOwner}>新增</a>} />;\r\n            ownersView = <List \r\n                className=\"my-4\"\r\n                header={header} items={owners}\r\n                none=\"[无]\"\r\n                item={{onClick: this.onItemClick, render: this.row}}\r\n            />;\r\n        }\r\n        if (showAdmins === true) {\r\n            let header = <LMR \r\n                className=\"px-3 py-1 small\"\r\n                left=\"管理员\" \r\n                right={<a className=\"small\" href='#' onClick={this.onNewAdmin}>新增</a>} />;\r\n            adminsView = <List \r\n                className='my-4' \r\n                header={header} items={admins} \r\n                none='[无]'\r\n                item={{onClick: this.onItemClick, render: this.row}}\r\n            />;\r\n        }\r\n        return <Page header=\"管理员\" right={right}>\r\n            {ownersView}\r\n            {adminsView}\r\n            <div className=\"my-4 p-3\">\r\n                <div className=\"ml-2 mb-2\">说明</div>\r\n                <div className=\"\">\r\n                    <ul className=\"pl-2\">\r\n                        <li className=\"card-text\">管理组包括主人、高管、管理员</li>\r\n                        <li className=\"card-text\">小号主人可以增减高管</li>\r\n                        <li className=\"card-text\">高管可以增减管理员</li>\r\n                        <li className=\"card-text\">管理员可以管理小号，程序的开发，以及用户</li>\r\n                        <li className=\"card-text\">开发号高管可以增减编辑APP，UQ，Server，Service</li>\r\n                        <li className=\"card-text\">开发号管理员可以编译指定UQ，BUS</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {EasyDate, EasyTime} from 'tonva';\r\n\r\nexport interface IdDatesProps {\r\n    date_init: Date;\r\n    date_update: Date;\r\n}\r\n\r\nexport class IdDates extends React.Component<IdDatesProps> {\r\n    render() {\r\n        let {date_init, date_update} = this.props;\r\n        return <small className=\"text-muted\">\r\n            最新: <EasyTime date={date_update}/>\r\n            <i className=\"fa fa-fw\" />\r\n            创建: <EasyDate date={date_init}/>\r\n        </small>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\n\r\nexport function span(\r\n    isLink:boolean,\r\n    className:string, \r\n    onClick:(evt:React.MouseEventHandler<HTMLElement>)=>void,\r\n    content:any): JSX.Element\r\n{\r\n    let tag:string;\r\n    let props:any;\r\n    if (isLink === true) {\r\n        tag = 'a';\r\n        props = {\r\n            className: classNames(className, 'cursor-pointer'),\r\n            onClick: onClick,\r\n            href: '#',\r\n        }\r\n    }\r\n    else {\r\n        tag = 'span';\r\n        props = {\r\n            className: className,\r\n        }\r\n    }\r\n    return React.createElement(tag, props, content);\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {Prop, ListProp, Media, PropGrid} from 'tonva';\r\nimport {nav, Page}  from 'tonva';\r\nimport {store} from '../store';\r\nimport {span} from './span';\r\n\r\nexport interface UnitLinkProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class UnitSpan extends React.Component<UnitLinkProps> {\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<UnitInfo id={this.props.id} />);\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        if (id === undefined) return null;\r\n        let unit = store.cacheUnits.get(id);\r\n        let content;\r\n        let {name, nick, discription} = unit;\r\n        let disc = discription && '- ' + discription;\r\n        if (nick) {\r\n            content = <>{nick} &nbsp; <small className=\"text-muted\">{name} {disc}</small></>;\r\n        }\r\n        else if (name) {\r\n            content = <>{name} &nbsp; <small className=\"text-muted\">{disc}</small></>;\r\n        }\r\n        else {\r\n            content = id;\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\n@observer\r\nexport class UnitName extends React.Component<UnitLinkProps> {\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        if (id === undefined) return null;\r\n        let unit = store.cacheUnits.get(id);\r\n        let {name} = unit;\r\n        return <>{name}</>;\r\n    }\r\n}\r\n\r\nclass UnitInfo extends React.Component<UnitLinkProps> {\r\n    private rows:Prop[];\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        let unit = store.cacheUnits.get(this.props.id);\r\n        let {name, nick, icon, discription} = unit;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={icon} main={name} discription={discription} />},\r\n            '',\r\n        ];\r\n        return <Page header={'小号 - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n","export const appIcon = process.env.REACT_APP_ICON;\r\nexport const appItemIcon = process.env.REACT_APP_ITEM_ICON;\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport * as classNames from 'classnames';\r\nimport {Prop, Media, PropGrid} from 'tonva';\r\nimport {nav, Page}  from 'tonva';\r\nimport {appIcon, appItemIcon} from 'consts';\r\nimport {store} from 'store';\r\nimport {IdDates} from './idDates';\r\nimport {span} from './span';\r\nimport {UnitSpan} from './unitSpan';\r\n\r\nexport interface UqLinkProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class UqSpan extends React.Component<UqLinkProps> {\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<UqInfo id={this.props.id} />);\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, className, isLink} = this.props;\r\n        let api = store.cacheUqs.get(id);\r\n        let content;\r\n        if (api === null) {\r\n            content = id;\r\n        }\r\n        else {\r\n            let {name, discription} = api;\r\n            let disc = discription && '- ' + discription;\r\n            if (name !== undefined) {\r\n                content = <React.Fragment>{name} &nbsp; <small className=\"text-muted\">{disc}</small></React.Fragment>;\r\n            }\r\n            else {\r\n                content = id;\r\n            }\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\n@observer\r\nclass UqInfo extends React.Component<UqLinkProps> {\r\n    private rows:Prop[];\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        let uq = store.cacheUqs.get(this.props.id);\r\n        let {name, discription, unit, date_init, date_update} = uq;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={name} discription={disp} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n        ];\r\n        return <Page header={'UQ - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport {Prop, ListProp, Media, PropGrid} from 'tonva';\r\nimport {nav, Page}  from 'tonva';\r\nimport {store} from '../store';\r\nimport {devApi} from '../api';\r\nimport {span} from './span';\r\nimport {IdDates} from './idDates';\r\nimport {UnitSpan} from './unitSpan';\r\n\r\nexport interface AppSpanProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class AppSpan extends React.Component<AppSpanProps> {\r\n    /*\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.onClick = this.onClick.bind(this);\r\n    }\r\n    componentWillMount() {\r\n        let {id} = this.props;\r\n        store.cacheApps.get(id);\r\n    }\r\n    */\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<AppInfo id={this.props.id} />)\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        let app = store.cacheApps.get(id);\r\n        let content;\r\n        if (app === null) {\r\n            content = id;\r\n        }\r\n        else {\r\n            let {name, icon, discription} = app;\r\n            let isPublic = app.public;\r\n            let disc = discription && '- ' + discription;\r\n            if (name !== undefined) {\r\n                content = <React.Fragment>{name} &nbsp; <small className=\"text-muted\">{disc}</small></React.Fragment>;\r\n            }\r\n            else {\r\n                content = id;\r\n            }\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\n\r\n@observer\r\nclass AppInfo extends React.Component<AppSpanProps> {\r\n    private rows:Prop[];\r\n    @observable private apis:ListProp = {\r\n        label: '关联API', type: 'list', list: undefined, row: AppRow\r\n    };\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    async componentDidMount() {\r\n        this.apis.list = await devApi.loadAppUqs(this.props.id);\r\n    }\r\n    render() {\r\n        let app = store.cacheApps.get(this.props.id);\r\n        let {unit, name, discription, icon, date_init, date_update} = app;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={icon} main={name} discription={disp} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            this.apis,\r\n        ];\r\n        return <Page header={'APP - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass AppRow extends React.Component<any> {\r\n    render() {\r\n        let {name, discription} = this.props;\r\n        let disp;\r\n        if (discription) disp = <div className=\"small text-muted\">{discription}</div>;\r\n        return <div className='form-control-plaintext'>\r\n            <div>{name}</div>\r\n            {disp}\r\n        </div>\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport * as classNames from 'classnames';\r\nimport {Prop, ListProp, Media, PropGrid} from 'tonva';\r\nimport {nav, Page}  from 'tonva';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {store} from '../store';\r\nimport {DevModel} from '../model';\r\nimport {devApi} from '../api';\r\nimport {span} from './span';\r\nimport {IdDates} from './idDates';\r\nimport {UnitSpan} from './unitSpan';\r\n\r\nexport interface ServerSpanProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class ServerSpan extends React.Component<ServerSpanProps> {\r\n    /*\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.onClick = this.onClick.bind(this);\r\n    }\r\n    componentWillMount() {\r\n        let {id} = this.props;\r\n        store.cacheServers.get(id);\r\n    }\r\n    */\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<ServerInfo id={this.props.id} />)\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        let server = store.cacheServers.get(id);\r\n        let content;\r\n        if (server === null) {\r\n            content = id;\r\n        }\r\n        else {\r\n            let {cloud, ip, discription} = server;\r\n            if (discription !== undefined) {\r\n                content = <React.Fragment>{discription} &nbsp; <small className=\"text-muted\">{ip}</small></React.Fragment>;\r\n            }\r\n            else {\r\n                content = id;\r\n            }\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\nclass ServerInfo extends React.Component<ServerSpanProps> {\r\n    private rows:Prop[];\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        let server = store.cacheServers.get(this.props.id);\r\n        let {discription, cloud, ip, unit, date_init, date_update} = server;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={discription} discription={ip} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            {type: 'string', label: '云服务', name: 'cloud'},\r\n        ];\r\n        return <Page header={'服务器 - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {nav, Page} from 'tonva';\r\n\r\ninterface StringValueEditProps {\r\n    title: string;\r\n    onChanged:(value:any, orgValue:any)=>Promise<string|void>;\r\n    value?: any;\r\n    buttonText?: string;\r\n    info?: string;\r\n}\r\ninterface StringValueEditState {\r\n    disabled: boolean;\r\n    error?: string;\r\n}\r\n\r\nexport class StringValueEdit extends React.Component<StringValueEditProps, StringValueEditState> {\r\n    //private input:HTMLInputElement;\r\n    protected value: string;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            disabled: true,\r\n        };\r\n    }\r\n    /*\r\n    private ref = (input:HTMLInputElement) => {\r\n        if (!input) return;\r\n        input.value = this.props.value || '';\r\n        this.input = input;\r\n    }*/\r\n    private onChange = (evt:React.FormEvent<HTMLInputElement>) => {\r\n        let val = this.props.value;\r\n        let org = val && val.trim();\r\n        this.value = evt.currentTarget.value.trim();\r\n        this.setState({\r\n            disabled: org === this.value\r\n        });\r\n        \r\n    }\r\n    protected onSubmit = async () => {\r\n        let val = this.props.value;\r\n        let org = val && val.trim();\r\n        let v = this.value; // this.input.value.trim();\r\n        let onChanged = this.props.onChanged;\r\n        if (onChanged !== undefined) {\r\n            let ret = await onChanged(v, org);\r\n            if (typeof ret === 'string') {\r\n                this.setState({error: ret});\r\n                return;\r\n            }\r\n            nav.pop();\r\n        }\r\n    }\r\n    protected renderControl() {\r\n        return <input className=\"form-control w-100\" type=\"text\"\r\n            // ref={this.ref}\r\n            defaultValue={this.props.value}\r\n            onChange={this.onChange} />\r\n    }\r\n    render() {\r\n        let {title, onChanged, buttonText, info, value} = this.props;\r\n        let {disabled, error} = this.state;\r\n        let right = <button\r\n            className=\"btn btn-success btn-sm\"\r\n            disabled={disabled}\r\n            onClick={this.onSubmit}\r\n        >\r\n            {buttonText||'保存'}\r\n        </button>;\r\n        let errorDiv;\r\n        if (error !== undefined) errorDiv = <div className='text-danger'>{error}</div>;\r\n        return <Page header={title} right={right}>\r\n            <div className=\"my-4 mx-3\">\r\n                {this.renderControl()}\r\n                {errorDiv}\r\n                <small className=\"d-block mt-2 text-muted\">{info}</small>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n\r\nexport class TextValueEdit extends StringValueEdit {\r\n    /*\r\n    private textArea:HTMLTextAreaElement;\r\n    private refTextArea = (textArea:HTMLTextAreaElement) => {\r\n        if (!textArea) return;\r\n        textArea.value = this.props.value || '';\r\n        this.textArea = textArea;\r\n    }\r\n    */\r\n    private onTextAreaChange = (evt:React.FormEvent<HTMLTextAreaElement>) => {\r\n        let val = this.props.value;\r\n        let org = val && val.trim();\r\n        this.value = evt.currentTarget.value.trim();\r\n        this.setState({\r\n            disabled: org === this.value\r\n        })\r\n    }\r\n    protected renderControl() {\r\n        return <textarea className=\"form-control w-100\" rows={8}\r\n            // ref={this.refTextArea}\r\n            defaultValue={this.props.value}\r\n            onChange={this.onTextAreaChange} />\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { nav, Page } from 'tonva';\r\nimport { SearchBox, List } from 'tonva';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport interface IdPickPageProps {\r\n    caption: string;\r\n    searchPlaceHolder?: string;\r\n    candidateItems: ((params:any, key:string) => Promise<any[]>) | any[];\r\n    moreCandidates: () => Promise<void>;\r\n    row: (item:any, index:number) => JSX.Element;\r\n    idFromItem: (item:any) => number;\r\n    resolve: (item?: any) => void;\r\n    params: any;\r\n}\r\n\r\n@observer\r\nexport class IdPickPage extends React.Component<IdPickPageProps> {\r\n    @observable private items:any[];\r\n\r\n    async componentDidMount() {\r\n        let {candidateItems, params} = this.props;\r\n        this.items = Array.isArray(candidateItems)? \r\n            candidateItems \r\n            : await candidateItems(params, '');\r\n    }\r\n    private itemClick = (item:any):Promise<void> => {\r\n        let {resolve, idFromItem} = this.props;\r\n        resolve(idFromItem(item));\r\n        nav.pop();\r\n        return;\r\n    }\r\n    private onSearch = async (key: string):Promise<void> => {\r\n        let {candidateItems, params} = this.props;\r\n        if (typeof candidateItems === 'function') {\r\n            let ret = await candidateItems(params, key);\r\n            this.items = ret;\r\n        }\r\n        return;\r\n    }\r\n    render() {\r\n        let {caption, row, searchPlaceHolder} = this.props;\r\n        return <Page header={caption} back=\"close\">\r\n            <div className=\"container\">\r\n                <SearchBox className=\"my-2\" \r\n                    onSearch={this.onSearch} \r\n                    placeholder={searchPlaceHolder}\r\n                    maxLength={100} />\r\n            </div>\r\n            <List items={this.items} item={{onClick:this.itemClick, render:row}} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport {SearchBox, Media, List, LMR, Badge, Prop, PropGrid, FA} from 'tonva';\r\nimport {nav, Page, PageItems} from 'tonva';\r\nimport {IdDates, UnitSpan} from '../tools';\r\nimport {UnitApp, DevModel} from '../model';\r\nimport {store} from '../store';\r\nimport { devApi } from 'api';\r\n\r\n@observer\r\nexport class Info extends React.Component<{app:UnitApp, appActed?:(appId:number, inUnit:number)=>void}> {\r\n    @observable private uqAccesses: any[];\r\n    async componentWillMount() {\r\n        this.uqAccesses = await devApi.loadAppUqs(this.props.app.id);\r\n    }\r\n\r\n    private renderUqRow = (uqAccess:any, index:number):JSX.Element => {\r\n        let {name, owner, unit, discription} = uqAccess;\r\n        return <LMR className=\"py-2\" right={<small className=\"text-muted\">{discription}</small>}>\r\n            {owner} / {name}\r\n        </LMR>;\r\n    }\r\n\r\n    private act = async () => {\r\n        let {app, appActed} = this.props;\r\n        let {id, unit, inUnit} = app;\r\n        let newInUnit:number = 1;\r\n        if (inUnit === 0) {\r\n            let ret = await store.restoreUnitApp(id);\r\n            if (ret <= 0) alert('app 或者 uq 没有定义 service');\r\n        }\r\n        else if (inUnit === 1) {\r\n            await store.stopUnitApp(id);\r\n            newInUnit = 0;\r\n        }\r\n        else {\r\n            let newApp:UnitApp = _.clone(app);\r\n            newApp.id = id;\r\n            newApp.inUnit = 1;\r\n            let ret = await store.addUnitApp(newApp);\r\n            if (ret <= 0) alert('app 或者 uq 没有定义 service');\r\n        }\r\n        if (appActed !== undefined) {\r\n            appActed(id, newInUnit);\r\n        }\r\n        nav.pop();\r\n    }\r\n    render() {\r\n        let {unit, name, discription, icon, inUnit, date_init, date_update} = this.props.app;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let faName:string, text:string, color:string;\r\n        if (inUnit === 1) {\r\n            faName = 'ban';\r\n            text = '停用APP';\r\n            color = 'btn-danger';\r\n        }\r\n        else if (inUnit === 0) {\r\n            faName = 'refresh';\r\n            text = '恢复APP';\r\n            color = 'btn-success';\r\n        }\r\n        else {\r\n            faName = 'plus';\r\n            text = '启用APP';\r\n            color = 'btn-primary';\r\n        }\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <Media icon={icon} main={name} discription={disp} />\r\n            },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                label: '开发号', \r\n                component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div>\r\n            },\r\n            {\r\n                type: 'component', \r\n                label: '关联UQ', \r\n                component: <List className=\"w-100\" items={this.uqAccesses} item={{render: this.renderUqRow}} />\r\n            },\r\n            '',\r\n            '',\r\n            {\r\n                type: 'component', \r\n                bk: '', \r\n                component: <button className={classNames('btn', 'w-100', color)} onClick={this.act}>\r\n                    <FA name={faName} size=\"lg\" /> {text}\r\n                </button>\r\n            },\r\n        ];\r\n        return <div>\r\n            <PropGrid rows={rows} values={this.props} />\r\n        </div>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {IObservableArray} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport {SearchBox, Media, List, LMR, Badge, Prop, PropGrid} from 'tonva';\r\nimport {nav, Page, PageItems, Image} from 'tonva';\r\nimport {mainApi} from '../api';\r\nimport {store} from '../store';\r\nimport {UnitApp} from '../model';\r\nimport {Info} from './info';\r\n\r\nclass PageApps extends PageItems<UnitApp> {\r\n    private unitId:number;\r\n    constructor(unitId:number) {\r\n        super();\r\n        this.unitId = unitId;\r\n    }\r\n    protected async load():Promise<UnitApp[]> {\r\n        return await mainApi.searchApp(this.unitId, this.param, this.pageStart, this.pageSize);\r\n    }\r\n    protected setPageStart(item:UnitApp) {\r\n        if (item === undefined)\r\n            this.pageStart = 0;\r\n        else\r\n            this.pageStart = item.id;\r\n    }\r\n}\r\n\r\n@observer\r\nexport class NewApp extends React.Component {\r\n    private apps: PageApps;\r\n    constructor(props) {\r\n        super(props);\r\n        this.apps = new PageApps(store.unit.id);\r\n    }\r\n    private onSearch = async (key:string) => {\r\n        await this.apps.first(key);\r\n    }\r\n    private appClick = (app:UnitApp) => {\r\n        nav.push(<Page header=\"App详细信息\">\r\n            <Info app={app} appActed={this.appActed}/>\r\n        </Page>);\r\n    }\r\n    private appActed = (appId:number, inUnit:number) => {\r\n        let apps = this.apps.items as IObservableArray<UnitApp>; //.replace .find(v => v.id === appId);\r\n        let app = apps.find(v => v.id === appId);\r\n        app.inUnit = inUnit;\r\n        apps.replace([app]);\r\n    }\r\n    private renderApp(app:UnitApp):JSX.Element {\r\n        let {name, discription, icon, inUnit} = app;\r\n        let right;\r\n        if (inUnit === 1)\r\n            right = <small>已启用</small>;\r\n        else if (inUnit === 0)\r\n            right = <small>已停用</small>;\r\n        return <LMR className=\"px-3 py-2\"\r\n            left={<Badge><Image src={icon} /></Badge>}\r\n            right={right}>\r\n            <div className=\"px-3\">\r\n                <div>{name}</div>\r\n                <small className=\"text-muted\">{discription}</small>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n    render() {\r\n        let items = this.apps.items;\r\n        let center = <SearchBox onSearch={this.onSearch} \r\n            className=\"w-100 mx-1\" \r\n            placeholder=\"搜索App\" \r\n            maxLength={100} />;\r\n        return <Page header={center}>\r\n            <List\r\n                items={items}\r\n                item={{onClick:this.appClick, render:this.renderApp}}\r\n                before=\"搜索App名字\" />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, FA, LMR, Badge} from 'tonva';\r\nimport {nav, Page, Image} from 'tonva';\r\nimport {store} from '../store';\r\nimport {NewApp} from './new';\r\nimport {UnitApp} from '../model';\r\nimport {Info} from './info';\r\n\r\n@observer\r\nexport default class AppsPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadApps();\r\n    }\r\n    private itemRender(app:UnitApp, index:number) {\r\n        let {name, discription, icon, inUnit} = app;\r\n        let ban;\r\n        if (inUnit === 0)\r\n            ban = <FA className=\"text-danger\" name='ban' />;\r\n        return <LMR className=\"px-3 py-1\"\r\n            left={<Badge><Image src={icon} /></Badge>}\r\n            right={ban}>\r\n            <div className=\"px-3\">\r\n                <div>{name}</div>\r\n                <small className=\"text-muted\">{discription}</small>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n    private appClick(app:UnitApp) {\r\n        nav.push(<Page header=\"App详细信息\">\r\n            <Info app={app} />\r\n        </Page>);\r\n    }\r\n    private newItem() {\r\n        nav.push(<NewApp {...this.props} />);\r\n    }\r\n    render() {\r\n        let right = <button \r\n            className='btn btn-secondary btn-sm' \r\n            onClick={()=>this.newItem()}><FA name=\"plus\" /></button>;\r\n        return <Page header=\"启停App\" right={right}>\r\n            <List items={store.apps} item={{render: this.itemRender, onClick: this.appClick}} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {TonvaForm, SubmitResult, FormRow} from 'tonva-form';\r\nimport {nav, Page, ItemSchema, StringSchema, UiSchema, Form, Context} from 'tonva';\r\nimport {store} from '../store';\r\n\r\nexport class NewRole extends React.Component {\r\n    /*\r\n    private form:TonvaForm;\r\n    private formRows:FormRow[] = [\r\n        {\r\n            label: '名称', \r\n            field: {name: 'name', type: 'string', maxLength: 50, required: true},\r\n        },\r\n        {\r\n            label: '描述',\r\n            field: {name: 'discription', type: 'string', maxLength: 250},\r\n            face: {type: 'textarea'}\r\n        },\r\n    ];*/\r\n    private schema: ItemSchema[] = [\r\n        {name: 'name', type: 'string', maxLength: 5, required: true} as StringSchema,\r\n        {name: 'discription', type: 'string', maxLength: 250},\r\n        {name: 'submit', type: 'button'},\r\n    ];\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            name: {widget: 'text', label: '名称'},\r\n            discription: {widget: 'textarea', label: '描述'},\r\n            submit: {widget:'button', label: '提交'}\r\n        }\r\n    }\r\n    private onSubmit = async (buttonName:string, context: Context):Promise<SubmitResult> => {\r\n        //let {name, discription} = values;\r\n        let {name, discription} = this.context.formData;\r\n        let id = await store.unitAddRole(name, discription);\r\n        if (id <= 0) {\r\n            this.context.setError('name', '角色名 ' + name + ' 已经存在');\r\n            return;\r\n        }\r\n        nav.pop();\r\n        return;\r\n    }\r\n    render() {\r\n        return <Page header=\"新建角色\">\r\n            <Form className=\"m-3\" \r\n                schema={this.schema} uiSchema={this.uiSchema} \r\n                formData={{}}\r\n                onButtonClick={this.onSubmit} />\r\n        </Page>;\r\n    }\r\n    /*\r\n    <TonvaForm className=\"m-3\" ref={tf => this.form = tf} \r\n    formRows={this.formRows} \r\n    onSubmit={this.onSubmit} />\r\n    */\r\n}\r\n","import * as React from 'react';\r\nimport {List, LMR} from 'tonva';\r\nimport {nav, Page} from 'tonva';\r\nimport {Role, UnitApp} from '../model';\r\nimport {store} from '../store';\r\nimport {mainApi} from '../api';\r\n\r\ninterface Props {\r\n    role: Role;\r\n}\r\ninterface State {\r\n    apps: UnitApp[]\r\n}\r\nexport class RoleApps extends React.Component<Props, State> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {apps:undefined};\r\n    }\r\n    async componentDidMount() {\r\n        let ret = await mainApi.unitRoleApps(store.unit.id, this.props.role.id);\r\n        this.setState({\r\n            apps: ret,\r\n        });\r\n    }\r\n    private renderRoleApp(app:UnitApp, index:number) {\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={app.name}\r\n                right={<small className=\"text-muted\">{app.discription}</small>} />\r\n    }\r\n    render() {\r\n        let {role} = this.props;\r\n        return <Page header={role.name + ' - 可用APP'}>\r\n            <List\r\n                items={this.state.apps}\r\n                item={{render: this.renderRoleApp}}\r\n                none=\"没有APP\" />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, LMR, FA, Media, Muted, PropGrid, Prop} from 'tonva';\r\nimport {nav, Page} from 'tonva';\r\nimport {Role} from '../model';\r\nimport {store} from '../store';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {StringValueEdit} from '../tools';\r\nimport {RoleApps} from './roleApps';\r\n\r\n@observer\r\nexport class MemberPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadRoles();\r\n        await store.loadMemberRoles();\r\n    }\r\n    async onAssigned(value:any, orgValue:any):Promise<void> {\r\n        await store.unitAssignMember(value);\r\n    }\r\n    private renderMemberRole = (role:Role) => {\r\n        let {name, discription} = role;\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={name}\r\n                right={<Muted>{discription}</Muted>} />\r\n    }\r\n    private roleClick(role:Role) {\r\n        nav.push(<RoleApps role={role} />);\r\n    }\r\n    private setRole = () => {\r\n        nav.push(<SetRole />);\r\n    }\r\n    render() {\r\n        let roleUser = store.roleMember;\r\n        let {nick, name, assigned, icon} = roleUser;\r\n        let disp = <div>\r\n            <div><Muted>唯一名: </Muted> &nbsp; {name}</div>\r\n            <div><Muted>昵称: </Muted> &nbsp; {nick||<Muted>[无]</Muted>}</div>\r\n        </div>;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component',\r\n                component: <Media icon={icon||appIcon} main={roleUser.assigned||nick||name} discription={disp} />\r\n            },\r\n            '',\r\n            {\r\n                label: '备注名',\r\n                type: 'string',\r\n                name: 'assigned',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"修改备注名\"\r\n                    value={roleUser.assigned}\r\n                    onChanged={this.onAssigned} \r\n                    info=\"加一个备注，便于甄别用户\" />),\r\n            },\r\n            '',\r\n        ];\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.setRole}>修改角色</button>;\r\n        return <Page header=\"用户详情\" right={right}>\r\n            <PropGrid rows={rows} values={roleUser} />\r\n            <div className=\"px-3 py-1\"><small><FA name=\"angle-double-right\" /> 所属角色</small></div>\r\n            <List\r\n                items={store.memberRoles} \r\n                item={{render: this.renderMemberRole, onClick: this.roleClick}} />\r\n        </Page>\r\n    }\r\n}\r\n\r\n@observer\r\nclass SetRole extends React.Component {\r\n    private list:List;\r\n    constructor(props) {\r\n        super(props);\r\n        this.submit = this.submit.bind(this);\r\n    }\r\n    async componentDidMount() {\r\n        await store.loadRoles();\r\n        await store.loadMemberRoles();\r\n    }\r\n    private renderRole(role:Role, index:number) {\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={role.name}\r\n                right={<small className=\"text-muted\">{role.discription}</small>} />\r\n    }\r\n    private roleSelect(role:Role, isSelected: boolean, anySelected: boolean) {\r\n    }\r\n    private async submit() {\r\n        await store.setMemberRoles(this.list.selectedItems);\r\n        nav.pop();\r\n    }\r\n    render() {\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.submit}>保存</button>;\r\n        let roles = store.roles;\r\n        let memberRoles = store.memberRoles;\r\n        return <Page header=\"修改角色\" right={right}>\r\n            <List \r\n                ref={list=>this.list=list}\r\n                items={roles}\r\n                selectedItems={memberRoles}\r\n                compare={(role:Role, selectRole:Role)=>role.id === selectRole.id}\r\n                item={{render: this.renderRole, onSelect: this.roleSelect}} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, LMR, Badge, FA, Muted, SearchBox} from 'tonva';\r\nimport {nav, Page, Image} from 'tonva';\r\nimport {Role, RoleMember} from '../model';\r\nimport {store} from '../store';\r\nimport {mainApi} from '../api';\r\nimport {MemberPage} from './memberPage';\r\n\r\n@observer\r\nexport class MembersPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadMembers();\r\n    }\r\n    private renderMember(member:RoleMember, index:number):JSX.Element {\r\n        return <MemberRow {...member} />;\r\n    }\r\n    private userClick(user:RoleMember) {\r\n        store.setRoleUser(user);\r\n        nav.push(<MemberPage />);\r\n    }\r\n    private onSearch() {\r\n        let role = store.role;\r\n        let roleId = role === undefined? 0:role.id;\r\n        nav.push(<MemberSearch roleId={roleId} />);\r\n    }\r\n    render() {\r\n        let right = <button className=\"btn btn-sm\" onClick={this.onSearch}><FA name=\"search\" /></button>;\r\n        return <Page header=\"用户\" right={right}>\r\n            <List items={store.roleMembers} item={{render: this.renderMember, onClick: this.userClick}} />\r\n        </Page>\r\n    }\r\n}\r\n\r\nconst MemberRow = (member:RoleMember) => {\r\n    let {nick, name, assigned, icon} = member;\r\n    let content;\r\n    if (assigned)\r\n        content = <><div><b>{assigned}</b> <Muted>{nick}</Muted></div><Muted>{name}</Muted></>;\r\n    else if (nick)\r\n        content = <><div><b>{nick}</b></div><Muted>{name}</Muted></>;\r\n    else\r\n        content = <div><b>{name}</b></div>;\r\n    return <LMR className=\"py-2 px-3 align-items-stretch\"\r\n        left={<Badge size=\"sm\"><Image src={icon} /></Badge>}>\r\n        <div className=\"px-3\">{content}</div>\r\n    </LMR>;\r\n};\r\n\r\ninterface SearchProps {\r\n    roleId: number;\r\n}\r\ninterface SearchState {\r\n    members: RoleMember[];\r\n}\r\nexport class MemberSearch extends React.Component<SearchProps, SearchState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.state = {\r\n            members: null,\r\n        }\r\n    }\r\n    private async onSearch(key:string) {\r\n        let ret = await mainApi.unitMembers(store.unit.id, this.props.roleId, key, 0, 100);\r\n        this.setState({members: ret});\r\n    }\r\n    private renderMember(member:RoleMember, index:number):JSX.Element {\r\n        return <MemberRow {...member} />;\r\n    }\r\n    private userClick(user:RoleMember) {\r\n        store.setRoleUser(user);\r\n        nav.push(<MemberPage />);\r\n    }\r\n    render() {\r\n        let header = <SearchBox className=\"w-100 mx-1\" \r\n            onSearch={this.onSearch} \r\n            maxLength={100}\r\n            placeholder=\"搜索用户\" />;\r\n        return <Page header={header}>\r\n            <List\r\n                items={this.state.members}\r\n                item={{render: this.renderMember, onClick: this.userClick}} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, Media, LMR, FA, PropGrid, Prop} from 'tonva';\r\nimport {nav, Page} from 'tonva';\r\nimport {StringValueEdit} from '../tools';\r\nimport {Role, UnitApp} from '../model';\r\nimport {store} from '../store';\r\nimport {MembersPage} from './membersPage';\r\n\r\n@observer\r\nexport class RolePage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadApps();\r\n        await store.loadRoleApps();\r\n    }\r\n    private editRole() {\r\n        nav.push(<EditRole />);\r\n    }\r\n    private renderRoleApp = (app:UnitApp, index:number) => {\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={app.name}\r\n                right={<small className=\"text-muted\">{app.discription}</small>} />\r\n    }\r\n    private roleAppClick = (app:UnitApp) => {\r\n        nav.push(<RoleApps />);\r\n    }\r\n    private addRoleApp() {\r\n        nav.push(<RoleApps />);\r\n    }\r\n    private members() {\r\n        nav.push(<MembersPage />);\r\n    }\r\n    render() {\r\n        let {name, discription, count} = store.role;\r\n        let onMembersClick, membersLeft, membersRight;\r\n        if (count===undefined || count===null || count===0) {\r\n            membersLeft = <small className=\"text-muted\">无用户</small>;\r\n        }\r\n        else {\r\n            membersLeft = `共有 ${count} 用户`;\r\n            membersRight = <div><FA name=\"chevron-right\" /></div>;\r\n            onMembersClick = this.members;\r\n        }\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <Media icon={undefined} main={name} discription={discription} />,\r\n                onClick: this.editRole,\r\n            },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <LMR className=\"py-2\" left={membersLeft} right={membersRight} />,\r\n                onClick: onMembersClick,\r\n            },\r\n            '=',\r\n        ];\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={()=>this.addRoleApp()}><FA name=\"plus\" /> APP</button>;\r\n        return <Page header=\"角色\" right={right}>\r\n            <PropGrid rows={rows} values={{}} />\r\n            <div className=\"px-3 py-1\"><small><FA name=\"angle-double-right\" /> 可用APP列表</small></div>\r\n            <List\r\n                items={store.roleApps} \r\n                item={{render: this.renderRoleApp, onClick:this.roleAppClick}}\r\n                none={<small className=\"text-muted px-3 py-1\">没有APP, 点击右上角按钮选择APP</small>} />\r\n        </Page>\r\n    }\r\n}\r\n\r\n@observer\r\nclass EditRole extends React.Component {\r\n    async onNameChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.roleChangeProp('name', value);\r\n    }\r\n    async onDiscriptionChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.roleChangeProp('discription', value);\r\n    }\r\n    render() {\r\n        let role = store.role;\r\n        let {id} = role;\r\n        let isSysRole = id === 1 || id === 2;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                label: '名称', \r\n                type: 'string',\r\n                name: 'name', \r\n                onClick: isSysRole? undefined : ()=>nav.push(<StringValueEdit \r\n                    title=\"修改名称\"\r\n                    value={role.name}\r\n                    onChanged={this.onNameChanged} \r\n                    info=\"好的名字便于理解\" />)\r\n            },\r\n            {\r\n                label: '描述',\r\n                type: 'string',\r\n                name: 'discription',\r\n                onClick: isSysRole? undefined : ()=>nav.push(<StringValueEdit \r\n                    title=\"修改描述\"\r\n                    value={role.discription}\r\n                    onChanged={this.onDiscriptionChanged} \r\n                    info=\"对角色做一个说明\" />)\r\n            },\r\n        ];\r\n        return <Page header=\"修改角色信息\">\r\n            <PropGrid rows={rows} values={role} alignValue=\"right\" />\r\n        </Page>;\r\n    }\r\n}\r\n\r\n@observer\r\nclass RoleApps extends React.Component {\r\n    private list:List;\r\n    constructor(props) {\r\n        super(props);\r\n        this.submit = this.submit.bind(this);\r\n    }\r\n    async componentDidMount() {\r\n        await store.loadApps();\r\n        await store.loadRoleApps();\r\n    }\r\n    private renderApp(app:UnitApp, index:number) {\r\n        return <LMR className=\"py-1 px-2 align-items-center\"\r\n                left={app.name}\r\n                right={<small className=\"text-muted\">{app.discription}</small>} />\r\n    }\r\n    private appSelect(app:UnitApp, isSelected: boolean, anySelected: boolean) {\r\n\r\n    }\r\n    private async submit() {\r\n        await store.setRoleApps(this.list.selectedItems);\r\n        nav.pop();\r\n    }\r\n    render() {\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.submit}>保存</button>;\r\n        let apps = store.apps;\r\n        let roleApps = store.roleApps;\r\n        return <Page header=\"选择APP\" right={right}>\r\n            <List \r\n                ref={list=>this.list=list}\r\n                items={apps}\r\n                selectedItems={roleApps}\r\n                item={{render: this.renderApp, onSelect: this.appSelect}} />\r\n        </Page>;\r\n    }\r\n}","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {List, LMR, FA, Muted} from 'tonva';\r\nimport {nav, Page} from 'tonva';\r\nimport {Role} from '../model';\r\nimport {store} from '../store';\r\nimport {NewRole} from './newRole';\r\nimport {RolePage} from './rolePage';\r\nimport {MembersPage} from './membersPage';\r\n\r\nconst midClassName = classNames('d-flex', 'h-100', 'align-items-center', 'px-5', 'small', 'text-muted');\r\n\r\n@observer\r\nexport class Members extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadRoles();\r\n    }\r\n    private renderRole = (role:Role, index:number) => {\r\n        let {name, discription, count} = role;\r\n        return <LMR\r\n            className=\"px-3 py-2\" \r\n            left={name}\r\n            right={String(count || '')}>\r\n            <div className={midClassName}>\r\n                {discription}\r\n            </div>\r\n        </LMR>;\r\n    }\r\n    private roleClick = (role:Role) => {\r\n        store.setRole(role);\r\n        nav.push(<RolePage />)\r\n    }\r\n    private newRole = (evt: React.MouseEvent<HTMLAnchorElement>) => {\r\n        evt.preventDefault();\r\n        nav.push(<NewRole />);\r\n    }\r\n    private allUsersClick = () => {\r\n        store.setRole(undefined);\r\n        nav.push(<MembersPage />);\r\n    }\r\n    render() {\r\n        let right = <a className=\"small\" href='#' onClick={this.newRole}>新增</a>;\r\n        let header = <LMR className=\"px-3 small bg-light\" left=\"角色\" right={right} />;\r\n        return <Page header=\"用户角色\">\r\n            <LMR\r\n                className=\"my-3 px-3 py-2 bg-white\" \r\n                left={'用户'}\r\n                right={String(store.memberCount)}\r\n                onClick={this.allUsersClick}>\r\n                <div className={midClassName}>\r\n                    设置用户角色\r\n                </div>\r\n            </LMR>\r\n            <List\r\n                header={header}\r\n                items={store.roles}\r\n                none=\"[无]\"\r\n                item={{render:this.renderRole, onClick:this.roleClick}} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { AppController } from '.';\r\nimport { VPage, nav, Page, ItemSchema, UiSchema, StringSchema, BoolSchema, \r\n    UiTextItem, UiTextAreaItem, UiCheckItem, Form, \r\n    ButtonSchema, Context, ImageSchema, UiImageItem, IdSchema, UiIdItem } from 'tonva';\r\nimport { createIdPick, IdPickProps } from 'createIdPick';\r\nimport { DevModel } from 'model';\r\nimport { store } from 'store';\r\nimport { IdPickPage, ServerSpan } from '../../tools';\r\nimport { observer } from 'mobx-react';\r\n\r\nconst ServerCaption = (item:DevModel.Server) => {\r\n    let {discription, cloud, ip} = item;\r\n    return <>{discription} {cloud} {ip}</>;\r\n}\r\nconst idPickServerProps: IdPickProps = {\r\n    caption: '选择服务器',\r\n    searchPlaceHolder: '搜索服务器',\r\n    candidateItems: async (params:any, key:string) => {\r\n        await store.dev.searchServer.first(key);\r\n        return store.dev.searchServer.items;\r\n    },\r\n    moreCandidates: async () => {\r\n        await store.dev.searchServer.more();\r\n    },\r\n    row: (item:DevModel.Server, index:number) => {\r\n        return <div className=\"px-3 py-2\"><ServerCaption {...item} /></div>;\r\n    },\r\n};\r\n\r\nconst schema:ItemSchema[] = [\r\n    {name: 'name', type: 'string', maxLength: 100, required: true} as StringSchema,\r\n    {name: 'caption', type: 'string', maxLength: 100} as StringSchema,\r\n    {name: 'discription', type: 'string', maxLength: 250} as StringSchema,\r\n    {name: 'url', type: 'string', maxLength: 200} as StringSchema,\r\n    {name: 'public', type: 'boolean'} as BoolSchema,\r\n    {name: 'server', type: 'id'} as IdSchema,\r\n    {name: 'icon', type: 'image'} as ImageSchema,\r\n    {name: 'submit', type: 'submit'} as ButtonSchema,\r\n];\r\n\r\nexport abstract class EditBasePage extends VPage<AppController> {\r\n    private candidateItems = async (params:any, key:string):Promise<any[]> => {\r\n        await store.dev.searchServer.first(key);\r\n        return store.dev.searchServer.items;\r\n    }\r\n\r\n    private moreCandidates = async ():Promise<void> => {\r\n        await store.dev.searchServer.more();\r\n    }\r\n\r\n    private renderRow = (item:DevModel.Server, index:number): JSX.Element => {\r\n        return <div className=\"px-3 py-2\"><ServerCaption {...item} /></div>;\r\n    }\r\n\r\n    private pickServerId = (context:Context, name:string, value:number): Promise<number> => {\r\n        return new Promise<number>((resolve, reject) => {\r\n            nav.push(<IdPickPage \r\n                caption=\"选择服务器\" \r\n                searchPlaceHolder=\"搜索服务器\"\r\n                candidateItems={this.candidateItems}\r\n                moreCandidates={this.moreCandidates}\r\n                row={this.renderRow}\r\n                idFromItem={(item:DevModel.Server) => item.id}\r\n                resolve={resolve} params={undefined} />, \r\n                ()=> {\r\n                    reject();\r\n                });\r\n        });\r\n    }\r\n\r\n    private renderServerInput = (itemId:number): JSX.Element => {\r\n        return <ServerSpan id={itemId} />;\r\n    };\r\n\r\n    private uiSchema:UiSchema = {\r\n        items: {\r\n            name: {widget: 'text', label: '名称'} as UiTextItem,\r\n            caption: {widget: 'text', label: '标题'} as UiTextItem,\r\n            discription: {widget: 'textarea', label: '描述', rows: 5} as UiTextAreaItem,\r\n            url: {widget: 'text', label: 'URL', placeholder: 'http(s)://APP地址'} as UiTextItem,\r\n            'public': {widget: 'checkbox', label: '公开', } as UiCheckItem,\r\n            server: {widget: 'id', label: '服务器', pickId: this.pickServerId, Templet: this.renderServerInput} as UiIdItem,\r\n            icon: {widget: 'image', label: '标志图'} as UiImageItem,\r\n            submit: {widget: 'button', label: '提交', className: 'btn btn-primary'}\r\n        }\r\n    }\r\n    \r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n    private onButtonClick = async (name:string, context: Context) => {\r\n        let {data} = context;\r\n        let app:DevModel.App = _.clone(this.controller.app) || {} as any;\r\n        _.merge(app, data);\r\n        await this.controller.saveApp(app);\r\n        nav.pop();\r\n    }\r\n    protected page: ()=>JSX.Element;\r\n    protected form = observer(() => {\r\n        return <Form fieldLabelSize={2}\r\n            className=\"m-3\" \r\n            schema={schema} \r\n            uiSchema={this.uiSchema}\r\n            formData={this.initValues}\r\n            onButtonClick={this.onButtonClick} />\r\n    });\r\n    abstract get initValues():any;\r\n}\r\n\r\nexport class EditPage extends EditBasePage {\r\n    get initValues():any {return this.controller.app}\r\n    protected page = () => {\r\n        let {app} = this.controller;\r\n        let {name} = app;\r\n        return <Page header={'修改APP - ' + name} back=\"close\">\r\n            <this.form />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nexport class NewPage extends EditBasePage {\r\n    get initValues():any {return {}}\r\n    protected page = () => {\r\n        return <Page header={'新建APP'} back=\"close\">\r\n            <this.form />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, Image } from 'tonva';\r\nimport { AppController } from '.';\r\nimport { List, LMR, Badge, Muted, FA } from 'tonva';\r\nimport { DevModel } from 'model';\r\nimport { NewPage } from './editPage';\r\n\r\nexport class AppsPage extends VPage<AppController> {\r\n    async open(param:any) {\r\n        this.openPage(this.page);\r\n    }\r\n    private newItem = () => {\r\n        this.openVPage(NewPage);\r\n    }\r\n    private page = ():JSX.Element => {\r\n        let {appList, listRowClick} = this.controller;\r\n        let right = <button className='btn btn-secondary btn-sm' onClick={()=>this.newItem()}><FA name=\"plus\" /></button>;\r\n        return <Page header=\"App\" right={right}>\r\n            <List items={appList} item={{render: this.appRow, onClick: listRowClick}} />\r\n        </Page>\r\n    }\r\n    private appRow = (item:DevModel.App):JSX.Element => {\r\n        let {name, caption, discription, icon, url, urlDebug} = item;\r\n        let left = <Badge size=\"sm\"><Image src={icon} /></Badge>;\r\n        let right = <div className=\"text-muted small text-right\">\r\n            {url || '-'}<br/>\r\n            {urlDebug}\r\n        </div>;\r\n        let spanCaption = caption?\r\n            <>{name}: <b>{caption}</b></> :\r\n            <b>{name}</b>;\r\n        return <LMR className=\"py-2 px-3 align-items-stretch\"\r\n            left={left} right={right}>\r\n            <div className=\"px-3\">\r\n                <div>{spanCaption}</div>\r\n                <div><Muted>{discription}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { List, LMR, SearchBox } from 'tonva';\r\nimport { DevModel } from 'model';\r\nimport { UnitSpan } from 'tools';\r\nimport { store } from 'store';\r\nimport { nav, Page, VPage } from 'tonva';\r\nimport { AppController } from '.';\r\n\r\nexport class SearchUqPage extends VPage<AppController> {\r\n    @observable private uqs: DevModel.UQ[];\r\n\r\n    async open() {\r\n        this.uqs = await this.controller.getMyUqs();\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private onSearch = async (key:string) => {\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.uqs = await this.controller.searchUq(key, pageStart, pageSize);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let header = <SearchBox className=\"w-100 mx-1\" \r\n            onSearch={this.onSearch}\r\n            placeholder=\"搜索UQ名字\" \r\n            maxLength={100} />;\r\n        return <Page back=\"close\" header={header}>\r\n            <List items={this.uqs} item={{render: this.row, onClick: this.controller.onUq}} />\r\n        </Page>;\r\n    });\r\n\r\n    private row = (uq: DevModel.UQ) => {\r\n        let {owner, name, discription} = uq;\r\n        return <LMR className=\"py-2 px-3\" right={discription}>\r\n            <div>{owner} / {name}</div>\r\n        </LMR>;\r\n    };\r\n}\r\n\r\n@observer\r\nexport class AppUqs extends React.Component {\r\n    @observable anySelected: boolean = false;\r\n    private list:List;\r\n    private onSelect = (item: DevModel.UQ, isSelected:boolean, anySelected:boolean) => {\r\n        this.anySelected = anySelected;\r\n    }\r\n    private row = (item: DevModel.UQ) => {\r\n        let {name, unit, discription} = item;\r\n        return <LMR className=\"p-2\" right={<small className=\"text-muted\">{discription}</small>}>\r\n            <UnitSpan id={unit} />/{name}\r\n        </LMR>;\r\n    }\r\n    private removeBind = () => {\r\n        if (this.list === null) return;\r\n        let {selectedItems} = this.list;\r\n        if (selectedItems === undefined) return;\r\n        if (selectedItems.length === 0) return;\r\n        store.dev.apps.appBindUq(\r\n            selectedItems.map(v => {\r\n                return {id:v.id, access:['*']}\r\n            }), \r\n            false);\r\n    }\r\n    render() {\r\n        let btnProps = this.anySelected?\r\n            {color:'danger', onClick:this.removeBind, icon:'trash', text:'取消'}:\r\n            {color:'primary', onClick:()=>nav.push(<Uqs/>), icon:'plus', text:'新增'};\r\n        let btn = (p)=><button \r\n            className={classNames('btn', 'btn-outline-'+p.color, 'btn-sm')} \r\n            onClick={p.onClick}>\r\n            <i className={\"fa fa-\" + p.icon} /> {p.text}关联\r\n        </button>;\r\n        let listHeader = <div className=\"va-row py-1 justify-content-center\">{btn(btnProps)}</div>;\r\n        return <Page header=\"关联UQ\">\r\n            <List ref={list=>this.list=list} header={listHeader}\r\n                items={store.dev.apps.uqs}\r\n                item={{render: this.row, onSelect: this.onSelect}} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\n@observer\r\nclass Uqs extends React.Component {\r\n    onSearch = async (key:string) => {\r\n        await store.dev.apps.searchUq(key);\r\n    }\r\n    onBind(uq: DevModel.UQ, bind: boolean) {\r\n        store.dev.apps.appBindUq([{id:uq.id, access:['*']}], bind);\r\n    }\r\n    row = (uq: DevModel.UQ) => {\r\n        let isConnected = store.dev.apps.uqs.find(a => a.id === uq.id) !== undefined;\r\n        let cn = ['btn', 'btn-sm'];\r\n        let btnContent:any, onClick:any;\r\n        if (isConnected) {\r\n            cn.push('btn-success');\r\n            onClick = ()=>this.onBind(uq, false);\r\n            btnContent = \"已关联\";\r\n        }\r\n        else {\r\n            cn.push('btn-primary');\r\n            onClick = ()=>this.onBind(uq, true);\r\n            btnContent = <span><i className=\"fa fa-check\"/> 关联</span>;\r\n        }\r\n        return <div className=\"d-flex justify-content-start py-1 px-3\">\r\n            <div className=\"align-self-center\">{uq.name + ' - ' + uq.discription}</div>\r\n            <footer className=\"ml-auto\"><button className={classNames(cn)} onClick={onClick}>{btnContent}</button></footer>\r\n        </div>\r\n    }\r\n    render() {\r\n        let header = <SearchBox className=\"w-100 mx-1\" \r\n            onSearch={this.onSearch} \r\n            placeholder=\"搜索UQ名字\" \r\n            maxLength={100} />;\r\n        return <Page back=\"close\" header={header}>\r\n            <List items={store.dev.apps.searchedUqs} item={{render: this.row}} loading={null} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, nav } from 'tonva';\r\nimport { AppController, UqAccess } from '.';\r\nimport { IdDates, UnitSpan, ServerSpan, UnitName } from 'tools';\r\nimport { Prop, Media, PropGrid, ListProp, DropdownActions, List, LMR } from 'tonva';\r\nimport { EditPage } from './editPage';\r\nimport { AppUqs, SearchUqPage } from './appUqs';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class AppPage extends VPage<AppController> {\r\n    async open() {\r\n        //this.uqs.list = this.controller.uqs;\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private editItem = async () => {\r\n        await this.openVPage(EditPage);\r\n        //nav.push(<EditAppPage {...this.props} />);\r\n    }\r\n\r\n    private deleteItem = async () => {\r\n        if (confirm('真的要删除吗？系统删除时并不会检查相关引用，请谨慎') === true) {\r\n            await this.controller.deleteApp();\r\n            nav.pop();\r\n        }\r\n    }\r\n\r\n    private page = observer(():JSX.Element => {\r\n        let {app} = this.controller;\r\n        let {unit, name, caption, discription, icon, server, date_init, date_update} = app;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let menuItems = [\r\n            // {icon: 'cogs', caption:'设置关联UQ', action: ()=>nav.push(<AppUqs />)},\r\n            {caption:'修改App', action:this.editItem, icon:'edit' },\r\n            {caption:'删除', action:this.deleteItem, icon:'trash-o' }\r\n        ];\r\n\r\n        let right = <DropdownActions actions={menuItems} />;\r\n        let spanCaption = caption?\r\n            <>{name}: <b>{caption}</b></> :\r\n            <b>{name}</b>;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <Media icon={icon} main={spanCaption} discription={disp} />\r\n            },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                label: '开发号', \r\n                component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> \r\n            },\r\n            /*\r\n            {\r\n                type: 'component', \r\n                label: 'Service',\r\n                vAlign: 'stretch',\r\n                component: <ServiceRow />,\r\n            },*/\r\n            {\r\n                label: 'URL',\r\n                name: 'url',\r\n                type: 'string',                \r\n            },\r\n            {\r\n                type: 'component',\r\n                label: '服务器',\r\n                component: <ServerSpan id={server} />\r\n            },\r\n            '',\r\n            //this.uqs,\r\n        ];\r\n        let btnAddUq = <button className=\"btn btn-outline-primary btn-sm\" onClick={()=>this.openVPage(SearchUqPage)}>\r\n            增加关联\r\n        </button>;\r\n        return <Page header={'App - ' + name} right={right}>\r\n            <PropGrid rows={rows} values={app} />\r\n            <LMR className=\"mx-3 mt-3 mb-1\" right={btnAddUq}>\r\n                关联UQ\r\n            </LMR>\r\n            <List items={this.controller.uqAccesses} item={{render:this.renderUqRow, onClick:this.uqClick}} />\r\n        </Page>\r\n    })\r\n\r\n    private uqClick = (uqAccess:UqAccess) => {\r\n        this.controller.onUq(uqAccess.uq);\r\n    }\r\n\r\n    private renderUqRow = (uqAccess:UqAccess, index:number):JSX.Element => {\r\n        let {uq, bind_access: access} = uqAccess;\r\n        let {name, discription, unit} = uq;\r\n        let disp: any;\r\n        let elAccess: any;\r\n        if (access && access.length > 0) {\r\n            elAccess = <> + {access.join(', ')} </>;\r\n        }\r\n        if (discription) disp = <div className=\"small text-muted\"> &nbsp; {discription}</div>;\r\n        return <LMR className=\"px-3 py-2 align-items-center\" right={disp}>\r\n            <UnitName id={unit} /> / {name} {elAccess}\r\n        </LMR>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, nav } from 'tonva';\r\nimport { AppController, UqAccess } from '.';\r\nimport { LMR } from 'tonva';\r\n\r\nexport class UqBindPage extends VPage<AppController> {\r\n    private uqAccess: UqAccess;\r\n    private accesses: string[];\r\n    private accessChecked:{[name:string]:boolean};\r\n    async open(uqAccess: UqAccess) {\r\n        this.uqAccess = uqAccess;\r\n        let {uq, bind_access} = this.uqAccess;\r\n        let {access} = uq;\r\n        if (access) {\r\n            this.accessChecked = {};\r\n            this.accesses = access.split(',');\r\n            for (let acc of this.accesses) {\r\n                this.accessChecked[acc] = (bind_access && bind_access.find(bc => bc === acc)) !== undefined;\r\n            }\r\n        }\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private onCheckChanged = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        let {target} = evt;\r\n        this.accessChecked[target.name] = target.checked;\r\n    }\r\n\r\n    private saveUqBind = async () => {\r\n        let acc:string[] = [];\r\n        if (this.accesses) {\r\n            for (let i in this.accessChecked) {\r\n                if (this.accessChecked[i] === true) acc.push(i);\r\n            }\r\n        }\r\n        await this.controller.saveUqBind(this.uqAccess.uq, acc);\r\n        nav.pop();\r\n    }\r\n\r\n    private removeUqBind = async () => {\r\n        await this.controller.removeUqBind(this.uqAccess.uq);\r\n        nav.pop();\r\n    }\r\n\r\n    private page = ():JSX.Element => {\r\n        let {uq, bind_access} = this.uqAccess;\r\n        let {owner, name, discription, access} = uq;\r\n        let btnDelete:any;\r\n        if (bind_access !== null && bind_access !== undefined) {\r\n            btnDelete = <button className=\"btn btn-outline-danger btn-sm\" onClick={this.removeUqBind}>取消关联</button>;\r\n        }\r\n        let checkAccessList:any;\r\n        if (this.accesses) {\r\n            checkAccessList = <div className=\"mt-3\">\r\n            {\r\n                this.accesses.map(v => {\r\n                    let checked = this.accessChecked[v];\r\n                    return <label key={v} className=\"d-inline-block mr-4\">\r\n                        <input onChange={this.onCheckChanged}\r\n                            style={{width:'1.1rem', height:'1.1rem'}} \r\n                            name={v} type=\"checkbox\" defaultChecked={checked} />&nbsp;{v}\r\n                    </label>;\r\n                })\r\n            }\r\n            </div>;\r\n        }\r\n        return <Page header=\"关联UQ\">\r\n            <div className=\"m-3 py-3 px-3 bg-white border\">\r\n                <div>{owner} / {name}</div>\r\n                <div className=\"text-muted\">{discription}</div>\r\n                {checkAccessList}\r\n                <LMR className=\"pt-3\" right={btnDelete}>\r\n                    <button className=\"btn btn-primary btn-sm\" onClick={this.saveUqBind}>保存关联</button>\r\n                </LMR>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { observable } from 'mobx';\r\nimport { Controller } from 'tonva';\r\nimport { DevModel } from 'model';\r\nimport { devApi } from 'api';\r\nimport { AppsPage } from './appsPage';\r\nimport { AppPage } from './appPage';\r\nimport { UqBindPage } from './uqBindPage';\r\n\r\nexport interface UqAccess {\r\n    uq: DevModel.UQ;\r\n    bind_access: string[];\r\n}\r\n\r\nexport class AppController extends Controller {\r\n    private unitId: number;\r\n    app: DevModel.App;\r\n    @observable appList: DevModel.App[];\r\n    @observable uqAccesses: UqAccess[];\r\n    protected async internalStart(unitId:any) {\r\n        this.unitId = unitId;\r\n        this.appList = await devApi.apps(this.unitId);\r\n        this.openVPage(AppsPage);\r\n    }\r\n\r\n    listRowClick = async (item:DevModel.App) => {\r\n        this.app = item;\r\n        let ret = await devApi.loadAppUqs(item.id);\r\n        this.uqAccesses = ret.map(v => {\r\n            let {owner, access, id, name, discription, unit, date_init, date_update, bind_access} = v;\r\n            return {\r\n                uq: {\r\n                    id: id,\r\n                    name: name,\r\n                    discription: discription,\r\n                    unit: unit,\r\n                    access: access,\r\n                    owner: owner,\r\n                    date_init: date_init,\r\n                    date_update: date_update, \r\n                    service_count: undefined,\r\n                },\r\n                uqOwner: owner,\r\n                bind_access: bind_access && bind_access.split(',')\r\n            }\r\n        });\r\n        this.openVPage(AppPage);\r\n    }\r\n\r\n    saveApp = async (values: DevModel.App) => {\r\n        let app: DevModel.App;\r\n        let now = new Date();\r\n        if (this.app === undefined) {\r\n            app = _.clone(values);\r\n            app.date_init = now;\r\n        }\r\n        else {\r\n            app = _.clone(this.app);\r\n            _.merge(app, values);\r\n        }\r\n        app.unit = this.unitId;\r\n        app.date_update = now;\r\n        let ret = await devApi.saveApp(app);\r\n        app.id = ret;\r\n        let org = this.appList.find(v => v.id === ret);\r\n        if (org !== undefined) {\r\n            _.merge(org, app);\r\n        }\r\n        else {\r\n            this.appList.push(app);\r\n        }\r\n    }\r\n\r\n    deleteApp = async () => {\r\n        await devApi.delApp(this.unitId, this.app.id);\r\n        let index = this.appList.findIndex(v => v.id === this.app.id);\r\n        if (index >= 0) this.appList.splice(index, 1);\r\n    }\r\n\r\n    searchUq = async (key:string, pageStart:number, pageSize:number) => {\r\n        return await devApi.searchUq(this.unitId, key, pageStart, pageSize);\r\n    }\r\n\r\n    getMyUqs = async () => {\r\n        return await devApi.getMyUqs(this.unitId);\r\n    }\r\n\r\n    onUq = (uq: DevModel.UQ) => {\r\n        let uqAccess:UqAccess = this.uqAccesses.find(v => v.uq.id === uq.id);\r\n        if (uqAccess === undefined) {\r\n            uqAccess = {\r\n                uq: uq,\r\n                bind_access: undefined,\r\n            }\r\n        }\r\n        else {\r\n            let access = uqAccess.bind_access;\r\n            if (access === null || access === undefined) uqAccess.bind_access = [];\r\n        }\r\n        this.openVPage(UqBindPage, uqAccess);\r\n    }\r\n\r\n    // accesses = undefined, 表示删除\r\n    private buildBindUqs(uq: DevModel.UQ, accesses?:string[]) {\r\n        let uqs:{id:number, access:string[]}[] = [];\r\n        let isNew = true;\r\n        for (let ua of this.uqAccesses) {\r\n            let {uq:uaUq, bind_access} = ua;\r\n            if (uaUq.id === uq.id) {\r\n                if (accesses === undefined) continue;\r\n                bind_access = accesses;\r\n                isNew = false;\r\n            }\r\n            uqs.push({\r\n                id: uaUq.id,\r\n                access: bind_access || [],\r\n            });\r\n        }\r\n        if (accesses !== undefined && isNew === true) {\r\n            uqs.push({id: uq.id, access: accesses});\r\n        }\r\n        return uqs;\r\n    }\r\n\r\n    saveUqBind = async (uq: DevModel.UQ, accesses:string[]) => {\r\n        let uqs:{id:number, access:string[]}[] = this.buildBindUqs(uq, accesses);\r\n        await devApi.appBindUq(this.unitId, this.app.id, uqs);\r\n        if (uqs.length > this.uqAccesses.length) {\r\n            this.uqAccesses.unshift({\r\n                uq: uq,\r\n                bind_access: accesses,\r\n            });\r\n        }\r\n        else {\r\n            let ua = this.uqAccesses.find(v => v.uq.id === uq.id);\r\n            ua.bind_access = accesses;\r\n        }\r\n    }\r\n\r\n    removeUqBind = async (uq: DevModel.UQ) => {\r\n        let uqs:{id:number, access:string[]}[] = this.buildBindUqs(uq);\r\n        await devApi.appBindUq(this.unitId, this.app.id, uqs);\r\n        let index = this.uqAccesses.findIndex(v => v.uq.id === uq.id);\r\n        if (index>=0) this.uqAccesses.splice(index, 1);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { FA } from 'tonva';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\n\r\nconst groupStart = '///++++++';\r\nconst groupEnd = '------///';\r\n\r\nexport abstract class Section {\r\n    rowId: number;\r\n    render: () => JSX.Element;\r\n}\r\n\r\nclass StringSection extends Section {\r\n    text: string;\r\n    constructor(text:string) {\r\n        super(); \r\n        this.text = text;\r\n    }\r\n    render = (): JSX.Element => {\r\n        if (this.text.trim().length === 0) return null;\r\n        let parts = this.text.split('\\n');\r\n        return <>{parts.map((v, i) => v.length === 0?\r\n            <div key={i}>&nbsp;</div> :\r\n            <div key={i}>{v}</div>\r\n        )}</>;\r\n    }\r\n}\r\n\r\nclass GroupSection extends Section {\r\n    group: string[];\r\n    @observable collaps: boolean;\r\n    constructor(group:string[]) {\r\n        super();\r\n        this.group = group;\r\n        this.collaps = true;\r\n    }\r\n    render = observer(():JSX.Element => {\r\n        //let groupId = 'text-group-' + index;\r\n        let line = this.group[0];\r\n        let title: string;\r\n        let p0 = 0, p = line.indexOf('\\n');\r\n        if (p < 0) p = undefined;\r\n        else {\r\n            let l = line.indexOf('(');\r\n            if (l < p) p = l;\r\n        }\r\n        title = line.substring(p0, p);\r\n\r\n        let onClick = () => {\r\n            let c = this.collaps;\r\n            if (c === false) c = true;\r\n            else c = false;\r\n            this.collaps = c;\r\n            /*\r\n            this.setState(prevState => ({\r\n                collaps: {\r\n                    ...prevState.collaps,\r\n                    [index]: c,\r\n                },\r\n            }));*/\r\n        }\r\n        let titleIcon:any, content:any;\r\n        if (this.collaps===false) {\r\n            titleIcon = <FA name='arrow-circle-up' className='text-success' />;\r\n            content = <div>\r\n                {\r\n                    this.group.map((v, i) => {\r\n                        if (v.trim().length === 0) return null;\r\n                        return <pre style={{whiteSpace: 'pre-wrap'}} key={i}>{v}</pre>\r\n                    })\r\n                }\r\n            </div>;\r\n        }\r\n        else {\r\n            titleIcon = <FA name='arrow-circle-down' className='text-success' />;\r\n        }\r\n        return <>\r\n            <div className=\"cursor-pointer text-primary\" onClick={onClick}>{titleIcon} <u>{title}</u></div>\r\n            {content}\r\n        </>;\r\n    });\r\n}\r\n\r\nclass ErrorSection extends Section {\r\n    error: string[];\r\n    constructor(error:string[]) {super(); this.error = error}\r\n    render = ():JSX.Element => {\r\n        return <div className=\"text-danger\">\r\n            <FA name=\"exclamation-circle\" />&nbsp;\r\n            {this.error.join().split('\\n').map((v, index)=><React.Fragment key={index}>{v}<br/></React.Fragment>)}\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class ResultSections {\r\n    private text: string;\r\n    private p: number;\r\n    private group: string[];\r\n    private stop: boolean;\r\n    @observable hasError: boolean = false;\r\n    @observable seconds: number;\r\n    //readonly sections: (string | string[])[] = [];\r\n    private sectionId: number = 1;\r\n    @observable readonly sections: Section[] = [];\r\n\r\n    add(text:string):void {\r\n        this.stop = false;\r\n        if (this.text === undefined) {\r\n            this.p = 0;\r\n            this.text = text;\r\n        }\r\n        else {\r\n            this.text = this.text + text;\r\n        }\r\n        if (this.text.length < 10) return;\r\n        while (this.stop === false) {\r\n            this.addToGroup();\r\n            this.addText();\r\n        }\r\n    }\r\n\r\n    private addSection(section:Section) {\r\n        section.rowId = this.sectionId;\r\n        this.sectionId++;\r\n        this.sections.push(section);\r\n        let len = this.sections.length;\r\n        if (len > 500) {\r\n            this.sections.splice(0, len - 500);\r\n        }\r\n    }\r\n\r\n    private mayStart(token:string):boolean {\r\n        let len = this.text.length - token.length;\r\n        if (this.p < len) return false;\r\n        for (let i=0; i<len; i++) {\r\n            if (this.text.charCodeAt(this.p + i) !== token.charCodeAt(i)) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private parse():Section {\r\n        let type: string = '';\r\n        let len = this.group.length;\r\n        for (let i=0; i<len; i++) {\r\n            let ln = this.group[i];\r\n            let pos = ln.indexOf('\\n');\r\n            if (pos < 0) {\r\n                type += ln;\r\n                continue;\r\n            }\r\n            type += ln.substr(0, pos);\r\n            for (let s=0; s<i+1; s++) this.group.shift();\r\n            this.group.unshift(ln.substr(pos+1));\r\n            switch (type) {\r\n                default:\r\n                case '': \r\n                    return new GroupSection(this.group);\r\n                case 'error': \r\n                    this.hasError = true;\r\n                    return new ErrorSection(this.group);\r\n            }            \r\n        }\r\n    }\r\n\r\n    private addToGroup():void {\r\n        if (this.group === undefined) return;\r\n        if (this.text === undefined) return;\r\n        let p = this.text.indexOf(groupEnd, this.p);\r\n        if (p < 0) {\r\n            if (this.mayStart(groupEnd) === true) return;\r\n            this.group.push(this.p === 0? this.text : this.text.substr(this.p));\r\n            this.p = 0;\r\n            this.text = undefined;\r\n            this.stop = true;\r\n            return;\r\n        }\r\n        this.group.push(this.text.substring(this.p, p));\r\n        this.addSection(this.parse());\r\n        this.group = undefined;\r\n        this.p = p + 9;\r\n    }\r\n\r\n    private addText():void {\r\n        if (this.text === undefined) return;\r\n        let p = this.text.indexOf(groupStart, this.p);\r\n        if (p < 0) {\r\n            if (this.mayStart(groupStart) === true) return;\r\n            this.addSection(new StringSection(this.p === 0? this.text : this.text.substr(this.p)));\r\n            this.p = 0;\r\n            this.text = undefined;\r\n            this.stop = true;\r\n            return;\r\n        }\r\n        this.addSection(new StringSection(this.text.substring(this.p, p)));\r\n        this.p = p + 9;\r\n        this.group = [];\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {nav, Page, FA} from 'tonva';\r\nimport {List, EasyDate, LMR, Muted} from 'tonva';\r\nimport {DevModel} from '../../model';\r\nimport {store} from '../../store';\r\nimport { ResultSections, Section } from './resultSections';\r\nimport { observer } from 'mobx-react';\r\n\r\ninterface State {\r\n    files: any[];\r\n    compiled?: string;\r\n    text?: string;\r\n}\r\n\r\nexport interface UqActionProps {\r\n    uq: DevModel.UQ;\r\n    action?: 'upload' | 'test' | 'deploy';\r\n    services: DevModel.Service[];\r\n}\r\n\r\n//const fastUpload = '快速测试';\r\n//const thoroughlyUpload = '完全测试';\r\nexport class UqUpload extends React.Component<UqActionProps, State> {\r\n    private fileInput: HTMLInputElement;\r\n\r\n    constructor(props:UqActionProps) {\r\n        super(props);\r\n        this.state = {\r\n            files: undefined,\r\n        }\r\n    }\r\n\r\n    private onFilesChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        let upFiles:any[] = [];\r\n        let {files} = evt.target;\r\n        let len = files.length;\r\n        for (let i=0; i<len; i++) {\r\n            upFiles.push(files[i]);\r\n        }\r\n        this.setState({\r\n            files: upFiles,\r\n        });\r\n    }\r\n    fileRender(file:any, index:number):JSX.Element {\r\n        let {name, size, lastModifiedDate} = file;\r\n        function sz():string {\r\n            let n:number, u:string;\r\n            if (size < 1024) {\r\n                n = size; u = 'b';\r\n            }\r\n            else if (size < 1024*1024) {\r\n                n = Math.trunc((size / 1024) * 100)/100; u = 'k';\r\n            }\r\n            else {\r\n                n = Math.trunc((size / 1024 / 1024) * 100)/100; u = 'm';\r\n            }\r\n            return n + ' ' + u;\r\n        }\r\n        return <LMR className=\"px-2 py-1\" right={<Muted>{sz()}</Muted>}>\r\n            <div>{name}</div>\r\n            <div><Muted>修改日期: <EasyDate date={lastModifiedDate} /></Muted></div>\r\n        </LMR>;\r\n    }\r\n    private fileClick = (file:any) => {\r\n        let fr = new FileReader();\r\n        fr.onload = function(f) {\r\n            //alert(this.result);\r\n            nav.push(<UqPage name={file.name} content={this.result} />)\r\n        }\r\n        fr.readAsText(file, \"utf8\");\r\n    }\r\n    private onSubmit = (evt:React.FormEvent<any>) => {\r\n        evt.preventDefault();\r\n    }\r\n\r\n    private async upload() {\r\n        var files:FileList = this.fileInput.files;\r\n        var data = new FormData();\r\n        let len = files.length;\r\n        for (let i=0; i<len; i++) {\r\n            let file = files[i];\r\n            data.append('files[]', file, file.name);\r\n        }\r\n  \r\n        let url = store.uqServer + 'uq-compile/' + this.props.uq.id + '/upload';\r\n        /*\r\n        let actionName:string;\r\n        if (thoroughly === true) {\r\n            actionName = thoroughlyUpload;\r\n            url += '-thoroughly';\r\n        }\r\n        else {\r\n            actionName = fastUpload;\r\n        }\r\n        */\r\n        try {\r\n            let abortController = new AbortController();\r\n            let res = await fetch(url, {\r\n                method: \"POST\",\r\n                body: data,\r\n                signal: abortController.signal,\r\n            });\r\n            nav.push(<CompileResult {...this.props} \r\n                actionName=\"上传\" \r\n                action=\"upload\"\r\n                res={res} abortController={abortController} />);\r\n        }\r\n        catch (e) {\r\n            console.error('%s %s', url, e);\r\n        }\r\n    }\r\n    private onUpload = async () => {\r\n        nav.ceaseTop();\r\n        await this.upload();\r\n    }\r\n    render() {\r\n        let {files} = this.state;\r\n        let fileList:any;\r\n        if (files !== undefined) {\r\n            fileList = <List \r\n                className=\"my-3\" \r\n                items={files} \r\n                item={{render: this.fileRender, onClick: this.fileClick}}/>;\r\n        }\r\n        let button:any;\r\n        if (files !== undefined && files.length > 0) {\r\n            button = <div className=\"my-2 d-flex\">\r\n                <button className=\"btn btn-success\" type=\"submit\" onClick={this.onUpload}>提交</button>\r\n            </div>;\r\n        }\r\n        return <Page header={'测试 - ' + this.props.uq.name}>\r\n            <div className=\"py-2 px-3\">\r\n                <div>请选择UQ源代码文件</div>\r\n                <form className=\"my-1\" encType=\"multipart/form-data\" onSubmit={this.onSubmit}>\r\n                    <div className=\"my-1\">\r\n                        <input ref={(fileInput) => this.fileInput=fileInput}type=\"file\" id=\"photo\" \r\n                            className=\"w-100 form-control-file\" name=\"files\" multiple={true} \r\n                            onChange={this.onFilesChange} />\r\n                    </div>\r\n                    {fileList}\r\n                    {button}\r\n                </form>\r\n                <pre>{this.state.compiled}</pre>\r\n                <div>{this.state.text}</div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n\r\ninterface Options {\r\n    action: 'test' | 'deploy';\r\n    caption: string;\r\n    fast: string;\r\n    thoroughly: string;\r\n    description: any;\r\n}\r\nconst test:Options = {\r\n    action: 'test',\r\n    caption: '测试',\r\n    fast: '快速测试',\r\n    thoroughly: '完全测试',\r\n    description: <>\r\n        <li>用上传的UQ代码，生成测试数据库</li>\r\n        <li>优化测试快速比较代码，仅仅根据修改代码的部分修改数据库</li>\r\n        <li>彻底测试仅用于底层代码有突破性变化时</li>\r\n    </>\r\n}\r\n\r\nconst deploy:Options = {\r\n    action: 'deploy',\r\n    caption: '发布',\r\n    fast: '快速发布',\r\n    thoroughly: '完全发布',\r\n    description: <>\r\n        <li>将已经编译测试过的代码，发布到生产服务器</li>\r\n        <li>优化发布快速比较代码，仅仅对修改代码的部分发布</li>\r\n        <li>彻底发布仅用于底层代码有突破性变化时</li>\r\n    </>\r\n}\r\n\r\nexport class UqDeploy extends React.Component<UqActionProps> {\r\n    readonly options: Options;\r\n    constructor(props: UqActionProps) {\r\n        super(props);\r\n        switch (props.action) {\r\n            case 'test':\r\n                this.options = test;\r\n                break;\r\n            case 'deploy':\r\n                this.options = deploy;\r\n                break;\r\n        }\r\n    }\r\n\r\n    private onCompile = async () => {\r\n        nav.ceaseTop();\r\n        let thoroughly = false;\r\n        await this.compile(thoroughly);\r\n    }\r\n    private onCompileThoroughly = async () => {\r\n        nav.ceaseTop();\r\n        let thoroughly = true;\r\n        await this.compile(thoroughly);\r\n    }\r\n    private async compile(isThoroughly:boolean) {\r\n        let {action, thoroughly, fast} = this.options;\r\n        let url = store.uqServer + 'uq-compile/' + this.props.uq.id + '/' + action;\r\n        let actionName:string;\r\n        if (isThoroughly === true) {\r\n            actionName = thoroughly;\r\n            url += '-thoroughly';\r\n        }\r\n        else {\r\n            actionName = fast;\r\n        }\r\n        try {\r\n            let abortController = new AbortController();\r\n            let res = await fetch(url, {\r\n                method: \"POST\",\r\n                signal: abortController.signal,\r\n            });\r\n            nav.push(<CompileResult {...this.props} \r\n                action={action}\r\n                actionName={actionName}\r\n                res={res} abortController={abortController} />);\r\n        }\r\n        catch (e) {\r\n            console.error('%s %s', url, e);\r\n        }\r\n    }\r\n    render() {\r\n        let {caption, fast, thoroughly, description} = this.options;\r\n        return <Page header={caption + ' - ' + this.props.uq.name}>\r\n            <div className=\"m-3 bg-white p-3\">\r\n                <ul className=\"my-3\">{description}</ul>\r\n                <div className=\"d-flex p-3\">\r\n                    <button className=\"btn btn-success\" type=\"submit\" onClick={this.onCompile}>{fast}</button>\r\n                    <div className=\"py-2 flex-grow-1\" />\r\n                    <button className=\"btn btn-outline-warning\"\r\n                        type=\"submit\" onClick={this.onCompileThoroughly}>{thoroughly}</button>\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n\r\ninterface UqPgeProps {\r\n    name: string;\r\n    content: string|ArrayBuffer;\r\n}\r\nclass UqPage extends React.Component<UqPgeProps> {\r\n    render() {\r\n        return <Page header={this.props.name}>\r\n            <pre className=\"px-3 py-2\">{this.props.content}</pre>\r\n        </Page>;\r\n    }\r\n}\r\n\r\ninterface CompileResultProps extends UqActionProps {\r\n    uq: DevModel.UQ;\r\n    action: 'upload' | 'test' | 'deploy';\r\n    actionName: string;\r\n    res: Response;\r\n    abortController: AbortController;\r\n}\r\n\r\n@observer\r\nexport class CompileResult extends React.Component<CompileResultProps> {\r\n    private resultSections: ResultSections;\r\n    private timeHandler:any;\r\n    constructor(props:CompileResultProps) {\r\n        super(props);\r\n        this.resultSections = new ResultSections();\r\n    }\r\n    componentWillMount() {\r\n        nav.regConfirmClose(async ():Promise<boolean>=>{\r\n            if (this.resultSections.seconds>=0) return true;\r\n            return new Promise<boolean>((resolve, reject) => {\r\n                try {\r\n                    if (confirm(`正在${this.props.actionName}中，真的要中止吗？`) === true) {\r\n                        try {\r\n                            this.props.abortController.abort();\r\n                        }\r\n                        catch (err) {\r\n                            console.error(err);\r\n                        }\r\n                        resolve(true);\r\n                    }\r\n                    else {\r\n                        resolve(false);\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    reject(err);\r\n                }\r\n            })\r\n        });\r\n    }\r\n    private autoScrollEnd:boolean = false;\r\n    private startAutoScrollToBottom() {\r\n        if (this.autoScrollEnd === true) return;\r\n        this.timeHandler = setInterval(() => {\r\n            var pane = document.getElementById('bottomDiv');\r\n            pane && pane.scrollIntoView();\r\n        }, 100);\r\n    }\r\n    private clearAutoScrollToBottom = () => {\r\n        if (this.timeHandler === undefined) return;\r\n        clearInterval(this.timeHandler);\r\n        this.timeHandler = undefined;\r\n}\r\n    private endAutoScrollToBottom() {\r\n        this.autoScrollEnd = true;\r\n        setTimeout(this.clearAutoScrollToBottom, 300);\r\n    }\r\n    private getParent(el:HTMLElement):HTMLElement {\r\n        if (!el) return;\r\n        if (el.tagName === 'MAIN') return el;\r\n        return this.getParent(el.parentElement);\r\n    }\r\n    private topIntoView() {\r\n        var pane = document.getElementById('topDiv');\r\n        pane && pane.scrollIntoView();\r\n    }\r\n    private bottomIntoView() {\r\n        var pane = document.getElementById('bottomDiv');\r\n        pane && pane.scrollIntoView();\r\n    }\r\n    private doubleClick = () => {\r\n        var pane = document.getElementById('scrollDiv');\r\n        let main = this.getParent(pane);\r\n        if (!main) return;\r\n        if (main.scrollTop >= main.scrollHeight / 2) {\r\n            this.topIntoView();\r\n        }\r\n        else {\r\n            this.bottomIntoView();\r\n        }\r\n    }\r\n    private lastScrollTop = 0;\r\n    private onScroll = (e:any) => {\r\n        let el = e.target as HTMLBaseElement;\r\n        \r\n        let {scrollTop, scrollHeight, offsetHeight} = el;\r\n        if (scrollTop < this.lastScrollTop) {\r\n            //this.clearAutoScrollToBottom();\r\n        }\r\n        else if (scrollTop + offsetHeight > scrollHeight - 30) {\r\n            if (this.timeHandler === undefined) {\r\n                this.startAutoScrollToBottom();\r\n            }\r\n        }\r\n\r\n        this.lastScrollTop = scrollTop;\r\n    }\r\n\r\n    private uintToString(uintArray:number[]):string {\r\n        let encodedString = String.fromCharCode(...uintArray);\r\n        try {\r\n            return decodeURIComponent(escape(encodedString));\r\n        }\r\n        catch (err) {\r\n            return encodedString;\r\n        }\r\n    }\r\n\r\n    private startTime: Date;\r\n    private reader: ReadableStreamReader;\r\n    private total: number;\r\n    private async pump():Promise<boolean> {\r\n        let ret = await this.reader.read();\r\n        let {done, value} = ret;\r\n        if (done) {\r\n            this.resultSections.seconds = (new Date().getTime() - this.startTime.getTime());\r\n            let {action, services} = this.props;\r\n            if (services !== undefined) {\r\n                let now = Date.now() / 1000;\r\n                for (let service of services) {\r\n                    switch (action) {\r\n                        case 'test': service.compile_time = now; break;\r\n                        case 'deploy': service.deploy_time = now; break;\r\n                    }\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        let text = this.uintToString(value);\r\n        this.resultSections.add(text);\r\n        this.total += value.byteLength;\r\n        //await pump();\r\n        return false;\r\n    }\r\n\r\n    async componentDidMount() {\r\n        /*\r\n        let that = this;\r\n        let time = new Date();\r\n        function consume(reader: ReadableStreamReader) {\r\n            let total = 0;\r\n            return new Promise(async (resolve, reject) => {\r\n                async function pump() {\r\n                    let ret = await reader.read();\r\n                    let {done, value} = ret;\r\n                    try {\r\n                        function uintToString(uintArray:number[]):string {\r\n                            let encodedString = String.fromCharCode.apply(null, uintArray);\r\n                            try {\r\n                                return decodeURIComponent(escape(encodedString));\r\n                            }\r\n                            catch (err) {\r\n                                return encodedString;\r\n                            }\r\n                        }\r\n                        if (done) {\r\n                            that.resultSections.seconds = (new Date().getTime() - time.getTime());\r\n                            let {action, services} = that.props;\r\n                            let now = Date.now() / 1000;\r\n                            for (let service of services) {\r\n                                switch (action) {\r\n                                    case 'test': service.compile_time = now; break;\r\n                                    case 'deploy': service.deploy_time = now; break;\r\n                                }\r\n                            }\r\n                            resolve();\r\n                            return;\r\n                        }\r\n                        let text = uintToString(value);\r\n                        that.resultSections.add(text);\r\n                        total += value.byteLength;\r\n                        await pump();\r\n                    }\r\n                    catch (err) {\r\n                        reject(err);\r\n                    }\r\n                }\r\n                await pump();\r\n            });\r\n        }\r\n        */\r\n        this.startAutoScrollToBottom();\r\n        try {\r\n            //await consume(this.props.res.body.getReader());\r\n            this.reader = this.props.res.body.getReader();\r\n            this.startTime = new Date;\r\n            this.total = 0;\r\n            while (true) {\r\n                if (await this.pump() === true) break;\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n        }\r\n        finally {\r\n            this.endAutoScrollToBottom();\r\n        }\r\n    }\r\n    private renderText = (section:Section, index:number):JSX.Element => {\r\n        return <section.render key={section.rowId} />;\r\n    }\r\n    render() {\r\n        let {uq, actionName} = this.props;\r\n        let {seconds, sections, hasError} = this.resultSections;\r\n        let finish = hasError === true? '发生错误' : '完成';\r\n        let header = actionName + (seconds>=0? finish : \"中...\");\r\n        if (uq !== undefined) header = uq.name + ' - ' + header;\r\n        return <Page header={header} back=\"close\" onScroll={this.onScroll}>\r\n            <div id='topDiv' />\r\n            <div id='scrollDiv'\r\n                onDoubleClick={this.doubleClick} \r\n                className='py-2 px-3' \r\n                style={{wordWrap: 'break-word', whiteSpace: 'normal'}}>\r\n                {sections.map(this.renderText)}\r\n            </div>\r\n            {seconds>=0? <div className='px-3 pb-3' style={{color: 'red', fontWeight: 'bold'}}>\r\n                {actionName}完成。共计用时{Math.floor(seconds/1000)}秒\r\n            </div> : undefined}\r\n            <div id='bottomDiv' />\r\n        </Page>;\r\n    }\r\n}","import * as React from 'react';\r\nimport {nav, Page} from 'tonva';\r\nimport {IdPick, IdPickFace} from 'tonva-form';\r\nimport {List, SearchBox} from 'tonva';\r\n\r\nexport interface IdPickProps {\r\n    caption: string;\r\n    searchPlaceHolder?: string;\r\n    candidateItems: ((params:any, key:string) => Promise<any[]>) | any[];\r\n    moreCandidates: () => Promise<void>;\r\n    row: (item:any, index:number) => JSX.Element;\r\n}\r\n\r\nexport function createIdPick(props: IdPickProps):IdPick {\r\n    return function(face: IdPickFace, params: any):Promise<void> {\r\n        return new Promise<void>((resolve, reject) => {\r\n            nav.push(<IdPickPage resolve={resolve} face={face} params={params} {...props} />);\r\n        });\r\n    }\r\n}\r\n\r\ninterface IdPickPageProps extends IdPickProps {\r\n    face: IdPickFace;\r\n    resolve: (item?: any) => void;\r\n    params: any;\r\n}\r\ninterface IdPickPageState {\r\n    items?: any[];\r\n}\r\n\r\nclass IdPickPage extends React.Component<IdPickPageProps, IdPickPageState> {\r\n    private items:any[];\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: null,\r\n        }\r\n        this.itemClick = this.itemClick.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n    }\r\n    async componentDidMount() {\r\n        let {face, candidateItems, params} = this.props;\r\n        this.setState({\r\n            items: Array.isArray(candidateItems)? candidateItems : await candidateItems(params, ''),\r\n        });\r\n    }\r\n    itemClick(item:any) {\r\n        let {resolve} = this.props;\r\n        resolve(item);\r\n        nav.pop();\r\n    }\r\n    async onSearch(key: string) {\r\n        //alert('search ' + key);\r\n        //await store.dev.searchServer.first(key)\r\n        let {candidateItems, params} = this.props;\r\n        if (typeof candidateItems === 'function') {\r\n            let ret = await candidateItems(params, key);\r\n            this.setState({items: ret});\r\n        }\r\n    }\r\n    render() {\r\n        let {caption, row, searchPlaceHolder} = this.props;\r\n        return <Page header={caption} back=\"close\">\r\n            <div className=\"container\">\r\n                <SearchBox className=\"my-2\" \r\n                    onSearch={this.onSearch} \r\n                    placeholder={searchPlaceHolder}\r\n                    maxLength={100} />\r\n            </div>\r\n            <List items={this.state.items} item={{onClick:this.itemClick, render:row}} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { DevModel } from 'model';\r\nimport { IdPickProps, createIdPick } from 'createIdPick';\r\nimport { store } from 'store';\r\nimport { Field, FormRow, StringFace, TextAreaFace, TonvaForm, SubmitResult } from 'tonva-form';\r\nimport { UQController } from './uqController';\r\nimport { VPage, nav, Page } from 'tonva';\r\n\r\nconst ServerCaption = (item:DevModel.Server) => {\r\n    let {discription, cloud, ip} = item;\r\n    return <>{discription} {cloud} {ip}</>;\r\n}\r\n\r\nconst idPickServerProps: IdPickProps = {\r\n    caption: '选择服务器',\r\n    searchPlaceHolder: '搜索服务器',\r\n    candidateItems: async (params:any, key:string) => {\r\n        await store.dev.searchServer.first(key);\r\n        return store.dev.searchServer.items;\r\n    },\r\n    moreCandidates: async () => {\r\n        await store.dev.searchServer.more();\r\n    },\r\n    row: (item:DevModel.Server, index:number) => {\r\n        return <div className=\"px-3 py-2\"><ServerCaption {...item} /></div>;\r\n    },\r\n};\r\n\r\nconst urlField:Field = {name: 'url', type: 'string', required:true, maxLength:200};\r\nconst urlTestField:Field = {name: 'urlTest', type: 'string', required:false, maxLength:200};\r\nconst serverField:Field = {name: 'server', type: 'id'};\r\nconst dbTypeField:Field = {name: 'db_type', type: 'string', maxLength:20, defaultValue:'mysql'};\r\nconst dbField:Field = {name: 'db', type: 'string', maxLength:50, required: true};\r\nconst connectionField:Field = {name:'connection', type:'string', maxLength:250};\r\n\r\nconst urlRow = {\r\n    label: 'URL',\r\n    field: urlField,\r\n};\r\n\r\nconst urlRowTest = {\r\n    label: 'URL-Test',\r\n    field: urlTestField,\r\n    face: {placeholder:'如果同URL，请不要输入'}\r\n};\r\n\r\nconst serverRow = {\r\n    label: '服务器', \r\n    field: serverField,\r\n    face: {\r\n        type: 'pick-id', \r\n        initCaption: '请选择服务器', \r\n        pick: createIdPick(idPickServerProps), //this.idPick,\r\n        fromPicked: (item:DevModel.Server)=>{\r\n            return {\r\n                id: item.id, \r\n                caption: <ServerCaption {...item} />,\r\n            };\r\n        },\r\n        itemFromId: (id:number)=>store.cacheServers.get(id),\r\n    },\r\n};\r\n/*\r\nconst dbTypeRow:FormRow = {\r\n    label: '数据库类型',\r\n    field: dbTypeField,\r\n    face: {\r\n        type: 'string',\r\n        readonly: true,\r\n    } as StringFace\r\n};\r\n*/\r\nconst dbRow = {\r\n    label: '数据库名字',\r\n    field: dbField,\r\n};\r\n/*\r\nconst connectionRow = {\r\n    label: '连接字符串',\r\n    field: connectionField,\r\n    face: {\r\n        type: 'textarea',\r\n        maxLength: 250,\r\n        rows: 8,\r\n    } as TextAreaFace,\r\n};\r\n*/\r\nexport class NewServicePage extends VPage<UQController> {\r\n    private tonvaForm:TonvaForm;\r\n    private formRows:FormRow[] = [\r\n        urlRow,\r\n        urlRowTest,\r\n        serverRow,\r\n        //dbTypeRow,\r\n        dbRow,\r\n        //connectionRow\r\n    ];\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n    private onSubmit = async (values:any):Promise<SubmitResult | undefined> => {\r\n        /*\r\n        if (values.url.indexOf('/uq/')<0) {\r\n            this.tonvaForm.formView.setError('url', 'service url 必须包含/uq/');\r\n            return;\r\n        }\r\n        */\r\n        values.type = 2; // uq type, to be removed\r\n        values.bindId = this.controller.uq.id;\r\n        let ret = await this.controller.saveService(values);\r\n        if (ret === 0) {\r\n            /*\r\n            if (this.tonvaForm !== undefined) {\r\n                this.tonvaForm.formView.setError('url', '已经有Service使用这个url');\r\n            }\r\n            */\r\n            return;\r\n        }\r\n        nav.pop();\r\n        return;\r\n    }\r\n    private page = () => {\r\n        return <Page header=\"新建Service\">\r\n            <TonvaForm ref={t=>this.tonvaForm=t} className=\"m-3\" formRows={this.formRows} onSubmit={this.onSubmit} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { Page, VPage, nav } from 'tonva';\r\nimport { UQController } from './uqController';\r\nimport { DevModel } from 'model';\r\nimport { Prop, PropGrid } from 'tonva';\r\nimport { StringValueEdit, ServerSpan, TextValueEdit } from 'tools';\r\n\r\nexport class ServicePage extends VPage<UQController> {\r\n    @observable private service: DevModel.Service;\r\n    async open(service: DevModel.Service) {\r\n        this.service = service;\r\n        this.openPage(this.page);\r\n    }\r\n    private async changeProp(prop:string, value:any):Promise<any> {\r\n        return await this.controller.changeServiceProp(this.service, prop, value);\r\n    }\r\n    private onUrlChanged = async (value:any, orgValue:any):Promise<string|void> => {\r\n        /*\r\n        if ((value as string).indexOf('/uq/')<0) {\r\n            return 'URL必须包含/uq/';\r\n        }\r\n        */\r\n        let ret = await this.changeProp('url', value);\r\n        if (ret === 0) {\r\n            //return 'URL已经被使用了';\r\n            return;\r\n        }\r\n        this.service.url = value;\r\n    }\r\n    private onUrlTestChanged = async (value:any, orgValue:any):Promise<string|void> => {\r\n        /*\r\n        if ((value as string).indexOf('/uq/')<0) {\r\n            return 'URL必须包含/uq/';\r\n        }\r\n        */\r\n        let ret = await this.changeProp('urlTest', value);\r\n        if (ret === 0) {\r\n            //return 'URL已经被使用了';\r\n            return;\r\n        }\r\n        this.service.urlTest = value;\r\n    }\r\n    private onDbChanged = async (value:any, orgValue:any):Promise<string|void> => {\r\n        let ret = await this.changeProp('db', value);\r\n        if (ret === 0) {\r\n            return 'Db已经被使用了';\r\n        }\r\n        this.service.db = value;\r\n    }\r\n    /*\r\n    private onDbTypeChanged = async (value:string, orgValue:any):Promise<string|void> => {\r\n        if (value === undefined || value === null) return;\r\n        if (value.toLowerCase().trim() !== 'mysql') return '目前只支持mysql';\r\n        let ret = await this.changeProp('db_type', value);\r\n        this.service.db_type = value;\r\n    }\r\n    private onConnectionChanged = async (value:string, orgValue:any):Promise<string|void> => {        \r\n        await this.changeProp('connection', value);\r\n        this.service.connection = value;\r\n    }\r\n    */\r\n    private onDeleteClick = async () => {\r\n        if (confirm(\"真的要删除Service吗？删除了不可恢复，需要重新录入。\")!==true) return;\r\n        await this.controller.delService(this.service);\r\n        nav.pop();\r\n    }\r\n    private page = () => {\r\n        let {uq} = this.controller;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'string',\r\n                name: 'url',\r\n                label: 'URL',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"修改URL\"\r\n                    value={this.service.url}\r\n                    onChanged={this.onUrlChanged} />)\r\n            },\r\n            {\r\n                type: 'string',\r\n                name: 'urlTest',\r\n                label: 'URL-Test',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"修改URL-Test\"\r\n                    value={this.service.urlTest}\r\n                    onChanged={this.onUrlTestChanged} />)\r\n            },\r\n            {\r\n                type: 'component',\r\n                label: '服务器',\r\n                component: <ServerSpan id={this.service.server} />\r\n            },\r\n            /*\r\n            {\r\n                type: 'string',\r\n                name: 'db_type',\r\n                label: '数据库类型',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"数据库类型\"\r\n                    value={this.service.db_type}\r\n                    onChanged={this.onDbTypeChanged} />)\r\n            },\r\n            */\r\n            {\r\n                type: 'string',\r\n                name: 'db',\r\n                label: '数据库名',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"数据库名字\"\r\n                    value={this.service.db}\r\n                    onChanged={this.onDbChanged} />)\r\n            },\r\n            /*\r\n            {\r\n                type: 'string',\r\n                name: 'connection',\r\n                label: '连接字符串',\r\n                onClick: ()=>nav.push(<TextValueEdit\r\n                    title=\"连接字符串\"\r\n                    value={this.service.connection}\r\n                    onChanged={this.onConnectionChanged} />)\r\n            },\r\n            */\r\n        ];\r\n        let right = <button onClick={this.onDeleteClick} className=\"btn btn-success\">删除</button>;\r\n        return <Page header={'UQ - ' + uq.name} right={right}>\r\n            <PropGrid rows={rows} values={this.service} />\r\n        </Page>\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { UQController } from './uqController';\r\nimport { VPage, nav, Page } from 'tonva';\r\nimport { SubmitResult, TonvaForm } from 'tonva-form';\r\n\r\nconst formRows = [\r\n    {\r\n        label: '名称', \r\n        field: {name: 'name', type: 'string', maxLength: 100, required: true},\r\n    },\r\n    {\r\n        label: '描述',\r\n        field: {name: 'discription', type: 'string', maxLength: 250},\r\n        face: {type: 'textarea'}\r\n    },\r\n    //{\r\n    //    label: '入口',\r\n    //    field: {name: 'access', type: 'string', maxLength: 250},\r\n    //    face: {type: 'textarea', placeholder: '逗号分隔的入口名'}\r\n    //},\r\n];\r\n\r\n\r\nexport abstract class EditBasePage extends VPage<UQController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n    protected onSubmit = async (values:any):Promise<SubmitResult> => {\r\n        await this.controller.saveUq(values);\r\n        nav.pop();\r\n        return;\r\n    }\r\n    protected page: ()=>JSX.Element;\r\n    protected form(initValues:any):JSX.Element {\r\n        return <TonvaForm\r\n            className=\"m-3\"\r\n            formRows={formRows} \r\n            onSubmit={this.onSubmit} initValues={initValues} />\r\n    }\r\n}\r\n\r\nexport class EditPage extends EditBasePage {\r\n    protected page = () => {\r\n        let {uq} = this.controller;\r\n        let {name} = uq;\r\n        return <Page header={'修改UQ - ' + name} back=\"close\">\r\n            {this.form(uq)}\r\n        </Page>;\r\n    }\r\n}\r\n\r\nexport class NewPage extends EditBasePage {\r\n    protected page = () => {\r\n        return <Page header={'新建UQ'} back=\"close\">\r\n            {this.form({})}\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, nav, EasyTime } from 'tonva';\r\nimport { UQController } from './uqController';\r\nimport { IdDates, UnitSpan, ServerSpan } from 'tools';\r\nimport { Prop, Media, LMR, FA, PropGrid, Muted, List, EasyDate, DropdownActions } from 'tonva';\r\nimport { DevModel } from 'model';\r\nimport { EditPage } from './editPage';\r\nimport { store } from 'store';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class UQPage extends VPage<UQController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private editItem = async () => {\r\n        await this.openVPage(EditPage);\r\n        //nav.push(<EditAppPage {...this.props} />);\r\n    }\r\n\r\n    private deleteItem = async () => {\r\n        if (confirm('真的要删除UQ吗？') === true) {\r\n            await this.controller.deleteUq();\r\n            nav.pop();\r\n        }\r\n    }\r\n\r\n    private page = ():JSX.Element => {\r\n        let {onUqUpload, onUqTest, onUqDeploy, serviceClick, uq, services} = this.controller;\r\n        let {isOwner} = store.unit;\r\n        let {id, name, discription, access, unit, date_init, date_update} = uq;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let menuItems = [\r\n            {caption:'修改UQ', action:this.editItem, icon:'edit' },\r\n            {caption:'删除', action:this.deleteItem, icon:'trash-o' }\r\n        ];\r\n        let right = isOwner>0 && <DropdownActions actions={menuItems} />;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <LMR className=\"py-2\"\r\n                    left={<FA name=\"database\" className=\"text-primary fa-2x mr-3\" />}>\r\n                    <div><b>{name}</b></div>\r\n                    {disp}\r\n                </LMR>\r\n            },\r\n            {\r\n                type: 'component', \r\n                label: '开发号', \r\n                component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> \r\n            },\r\n            '',\r\n            {\r\n                type: 'component',\r\n                label: '上传UQ', \r\n                component: <LMR onClick={onUqUpload} className=\"w-100 py-2 cursor-pointer\" \r\n                    left=\"上传提交UQ代码\" right={<FA className=\"align-self-center\" name=\"chevron-right\" />} />\r\n            },\r\n            {\r\n                type: 'component', \r\n                label: '测试UQ', \r\n                component: <LMR onClick={onUqTest} className=\"w-100 py-2 cursor-pointer\" \r\n                    left=\"升级UQ测试数据库\" right={<FA className=\"align-self-center\" name=\"chevron-right\" />} />\r\n            },\r\n            {\r\n                type: 'component', \r\n                label: '发布UQ', \r\n                component: <LMR onClick={onUqDeploy} className=\"w-100 py-2 cursor-pointer\" \r\n                    left=\"升级UQ生产数据库\" right={<FA className=\"align-self-center\" name=\"chevron-right\" />} />\r\n            },\r\n        ];\r\n        let btnAddService = isOwner>0 && <button\r\n            className=\"btn btn-outline-primary btn-sm\"\r\n            onClick={()=>this.controller.showNewServicePage()}>\r\n            增加\r\n        </button>;\r\n        \r\n        let onServiceClick:any;\r\n        if (isOwner>0) onServiceClick = serviceClick;\r\n\r\n        return <Page header={'UQ - ' + name} right={right}>\r\n            <PropGrid rows={rows} values={uq} />\r\n            <div className=\"d-flex mx-3 mt-3 mb-1 align-items-end\">\r\n                <Muted style={{display:'block', flex:1}}>Service</Muted>\r\n                {btnAddService}\r\n            </div>\r\n            <List items={services} item={{\r\n                render:(service:DevModel.Service, index:number)=><this.renderService service={service} index={index} />, \r\n                onClick:onServiceClick\r\n            }} />\r\n        </Page>;\r\n    }\r\n    private renderService = observer((props: {service:DevModel.Service; index:number}):JSX.Element => {\r\n        let {service, index} = props;\r\n        let {url, server, db, compile_time, deploy_time} = service;\r\n        let compile = !compile_time?\r\n            <Muted>未测试</Muted> \r\n            :\r\n            <><Muted>测试: </Muted><EasyTime date={compile_time}/></>;\r\n        let deploy = !deploy_time?\r\n            <Muted>未发布</Muted> \r\n            :\r\n            <><Muted>发布: </Muted><EasyTime date={deploy_time}/></>;\r\n\r\n        return <LMR className=\"d-flex w-100 align-items-center cursor-pointer py-2 px-3\"\r\n            right={<small>{compile}<br/>{deploy}</small>}\r\n            >\r\n            <div>\r\n                <div>{url}</div>\r\n                <Muted><ServerSpan id={server} /></Muted>\r\n            </div>\r\n        </LMR>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, EasyDate, EasyTime, DropdownActions, DropdownAction, nav } from 'tonva';\r\nimport { UQController } from './uqController';\r\nimport { List, LMR, Badge, Muted, FA } from 'tonva';\r\nimport { DevModel } from 'model';\r\nimport { NewPage } from './editPage';\r\nimport { store } from 'store';\r\nimport { CompileResult } from './uqUpload';\r\n\r\nexport class ListPage extends VPage<UQController> {\r\n    async open(param:any) {\r\n        this.openPage(this.page);\r\n    }\r\n    private newItem = () => {\r\n        this.controller.uq = undefined;\r\n        this.openVPage(NewPage);\r\n    }\r\n    private batchCompile = () => {\r\n        this.openPage(this.batchCompilePage);\r\n    }\r\n    private page = ():JSX.Element => {\r\n        let {uqList: list, listRowClick} = this.controller;\r\n        let {isOwner} = store.unit;\r\n        let actions:DropdownAction[] = [\r\n            {icon:'plus', caption:'新增UQ', action: this.newItem},\r\n            {icon:'plus', caption:'批量编译', action: this.batchCompile},\r\n        ];\r\n        let right = isOwner>0 && \r\n            <DropdownActions icon=\"bars\" actions={actions}>\r\n                <button className='btn btn-secondary btn-sm' onClick={()=>this.newItem()}><FA name=\"plus\" /></button>\r\n            </DropdownActions>\r\n        return <Page header=\"UQ\" right={right}>\r\n            <List items={list} item={{render: this.listRow, onClick: listRowClick}} />\r\n        </Page>\r\n    }\r\n    private listRow = (item:DevModel.UQ):JSX.Element => {\r\n        let {name, discription, service_count, date_init, date_update} = item;\r\n        return <LMR className=\"py-1 px-3 align-items-center\"\r\n            left={<FA name=\"database\" className=\"text-primary fa-lg\" />}\r\n            right={<div className=\"text-right\">\r\n                <div><small className=\"text-muted\">服务数:</small> {service_count}</div>\r\n                <div className=\"small text-muted\"><EasyTime date={date_update} /></div>\r\n            </div>}>\r\n            <div className=\"py-2 px-3\">\r\n                <div><b>{name}</b></div>\r\n                <div><Muted>{discription}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n\r\n    private onSelect = (item:DevModel.UQ, isSelected:boolean, anySelected:boolean) => {\r\n        //alert('ok');\r\n    }\r\n\r\n    private listCompileRow = (item:DevModel.UQ):JSX.Element => {\r\n        let {name, discription, service_count, date_init, date_update} = item;\r\n        return <LMR className=\"py-1 px-3 align-items-center\"\r\n            left={<FA name=\"database\" className=\"text-info fa-lg\" />}\r\n            right={<div className=\"text-right\">\r\n                <div className=\"small text-muted\"><EasyTime date={date_update} /></div>\r\n            </div>}>\r\n            <div className=\"py-2 px-3\">\r\n                <div><b>{name}</b></div>\r\n                <div><Muted>{discription}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n\r\n    private list:List;\r\n    private selectAll = () => {\r\n        this.list.selectAll();\r\n    }\r\n    private unselectAll = () => {\r\n        this.list.unselectAll();\r\n    }\r\n    private test = () => {\r\n        this.compile('test', false);\r\n    }\r\n    private testThoroughly = () => {\r\n        this.compile('test', true);\r\n    }\r\n    private deploy = () => {\r\n        this.compile('deploy', false);\r\n    }\r\n    private deployThoroughly = () => {\r\n        this.compile('deploy', true);\r\n    }\r\n    private async compile(action:'test'|'deploy', thoroughly: boolean) {\r\n        let selectItems = this.list.selectedItems;\r\n        //let {action, thoroughly, fast} = this.options;\r\n        let url = store.uqServer + 'uq-compile/batch';\r\n        let actionName:string;\r\n        switch (action) {\r\n            case 'test': actionName = '测试'; break;\r\n            case 'deploy': actionName = '发布'; break;\r\n        }\r\n        try {\r\n            let abortController = new AbortController();\r\n            let body = {\r\n                test: action === 'test',\r\n                thoroughly: thoroughly,\r\n                uqs: selectItems.map(v => v.id)\r\n            };\r\n            //let data = new FormData();\r\n            //data.append( \"json\", JSON.stringify(body) );\r\n            let res = await fetch(url, {\r\n                method: \"POST\",\r\n                signal: abortController.signal,\r\n                headers: {\r\n                    //'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(body)\r\n            });\r\n            nav.push(<CompileResult uq={undefined} services={undefined}\r\n                action={action}\r\n                actionName={actionName}\r\n                res={res} abortController={abortController} />);\r\n        }\r\n        catch (e) {\r\n            console.error('%s %s', url, e);\r\n        }\r\n    }\r\n\r\n    private batchCompilePage = ():JSX.Element => {\r\n        let {uqList: list} = this.controller;\r\n        let right = <span>\r\n            <button className=\"btn btn-sm btn-link\" onClick={this.selectAll}>全选</button> \r\n            <button className=\"btn btn-sm btn-link\" onClick={this.unselectAll}>全清</button>\r\n        </span>;\r\n        let cnBtn = 'btn btn-sm btn-outline-primary mr-3';\r\n        let bar = <span className=\"px-3 py-1 d-flex w-100\">\r\n            <span className=\"flex-grow-1\">\r\n                <button className={cnBtn} onClick={this.test}>测试</button>\r\n                <button className={cnBtn} onClick={this.deploy}>发布</button>\r\n                <button className={cnBtn} onClick={this.testThoroughly}>彻底测试</button>\r\n                <button className={cnBtn} onClick={this.deployThoroughly}>彻底发布</button>\r\n            </span>\r\n            {right}\r\n        </span>;\r\n\r\n        return <Page header=\"批量编译\" footer={bar}>\r\n            <List ref={list=>this.list = list} items={list} item={{render: this.listCompileRow, onSelect: this.onSelect}} />\r\n        </Page>\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { observable } from 'mobx';\r\nimport { nav, Controller } from 'tonva';\r\nimport { DevModel } from '../../model';\r\nimport { UqUpload, UqActionProps, UqDeploy } from './uqUpload';\r\nimport { devApi } from 'api';\r\nimport { NewServicePage } from './newServicePage';\r\nimport { ServicePage } from './servicePage';\r\nimport { UQPage } from './uqPage';\r\nimport { ListPage } from './listPage';\r\n\r\nexport class UQController extends Controller {\r\n    private unitId: number;\r\n    uq: DevModel.UQ;\r\n    access: string;\r\n    entities: string;\r\n    @observable uqList: DevModel.UQ[];\r\n    @observable services: DevModel.Service[];\r\n    protected async internalStart(unitId:any) {\r\n        this.unitId = unitId;\r\n        this.uqList = await devApi.uqs(this.unitId);\r\n        this.openVPage(ListPage);\r\n    }\r\n\r\n    listRowClick = async (item:DevModel.UQ) => {\r\n        this.uq = item;\r\n        await this.loadUqEntities(item.id);\r\n        this.openVPage(UQPage);\r\n    }\r\n\r\n    private async loadUqEntities(uqId: number) {\r\n        let ret = await devApi.uqGetEntities(this.unitId, uqId);\r\n        let r0 = ret[0][0];\r\n        this.access = r0.access;\r\n        this.entities = r0.entities;\r\n        this.services = ret[1];\r\n    }\r\n\r\n    serviceClick = (service: DevModel.Service) => {\r\n        this.openVPage(ServicePage, service);\r\n    }\r\n\r\n    onUqUpload = async() => {\r\n        let onDispose = () => {}\r\n        nav.push(<UqUpload uq={this.uq} services={this.services} />, onDispose);\r\n    }\r\n\r\n    onUqTest = async() => {\r\n        let onDispose = () => {}\r\n        nav.push(<UqDeploy uq={this.uq} action=\"test\" services={this.services} />, onDispose);\r\n    }\r\n\r\n    onUqDeploy = async() => {\r\n        let onDispose = () => {}\r\n        nav.push(<UqDeploy uq={this.uq} action=\"deploy\" services={this.services} />, onDispose);\r\n    }\r\n\r\n    saveUq = async (values: DevModel.UQ) => {\r\n        let uq: DevModel.UQ;\r\n        if (this.uq === undefined) {\r\n            uq = _.clone(values);\r\n        }\r\n        else {\r\n            uq = _.clone(this.uq);\r\n            _.merge(uq, values);\r\n        }\r\n        uq.unit = this.unitId;\r\n        let ret = await devApi.saveUq(uq);\r\n        uq.id = ret;\r\n        this.uqList.push(uq);\r\n    }\r\n\r\n    deleteUq = async () => {\r\n        await devApi.delUq(this.unitId, this.uq.id);\r\n        let index = this.uqList.findIndex(v => v.id === this.uq.id);\r\n        if (index >= 0) this.uqList.splice(index);\r\n    }\r\n\r\n    async changeServiceProp(service: DevModel.Service, prop:string, value:any):Promise<any> {\r\n        return await devApi.changeServiceProp(this.unitId, service.id, prop, value);\r\n    }\r\n\r\n    async saveService(service: DevModel.Service):Promise<number> {\r\n        let svc = _.clone(service);\r\n        svc.unit = this.unitId;\r\n        if (!svc.urlTest) svc.urlTest = '-';\r\n        let ret = await devApi.saveService(svc);\r\n        svc.id = ret;\r\n        this.services.push(svc);\r\n        return ret;\r\n    }\r\n\r\n    async delService(service: DevModel.Service) {\r\n        await devApi.delService(this.unitId, service.id);\r\n        let index = this.services.findIndex(v => v.id == service.id);\r\n        if (index >= 0) this.services.splice(index);\r\n    }\r\n\r\n    showNewServicePage = async () => {\r\n        await this.openVPage(NewServicePage);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport _ from 'lodash';\r\nimport {EasyDate, Media, \r\n    Prop, ListProp, PropGrid, List, SearchBox, LMR, Badge, Muted, FA} from 'tonva';\r\nimport {UnitSpan, IdDates, ServerSpan} from '../tools';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {DevModel} from '../model';\r\nimport {store} from '../store';\r\nimport {Row} from './row';\r\nimport {ObjViewProps} from './ObjViewProps';\r\n\r\n\r\nconst busIcon = 'cogs';\r\n\r\n@observer\r\nclass Info extends React.Component<DevModel.Bus> {\r\n    async componentDidMount() {\r\n        //await store.dev.buses.loadCurApis();\r\n    }\r\n    render() {\r\n        let {unit, owner, name, discription, mine, schema, version, date_init, date_update} = this.props;\r\n        let disp = <small>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </small>;\r\n        let caption:any = owner + ' / ' + name;\r\n        if (mine === 1) {\r\n            caption = <b>{caption}</b>;\r\n        }\r\n        let rows:Prop[] = [\r\n            '',\r\n            {type: 'component', component: <LMR className=\"py-2\"\r\n                left={<FA className=\"pt-2 pr-1 text-primary\" name={busIcon} size=\"3x\" />}>\r\n                <div className=\"pl-3\">\r\n                    <div className=\"mb-2\">{caption}</div>\r\n                    {disp}\r\n                </div>\r\n            </LMR>},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            {\r\n                type: 'component', \r\n                label: '版本号', \r\n                component: <LMR className=\"py-2 w-100\" right={<small className=\"text-muted\"><EasyDate date={date_update}/></small>} >{version}</LMR> },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                label: 'Schema',\r\n                vAlign: 'stretch',\r\n                component: <SchemaView />,\r\n            },\r\n        ];\r\n        return <div>\r\n            <PropGrid rows={rows} values={this.props} />\r\n        </div>\r\n    }\r\n}\r\n\r\n@observer\r\nexport class SchemaView extends React.Component {\r\n    render() {\r\n        let bus = store.dev.buses.cur;\r\n        if (bus === null) return '...';\r\n        let content = bus.schema;\r\n        return <div className=\"d-flex py-2 w-100 align-items-center\" style={{flex:1}}>\r\n            <pre>\r\n                {content}\r\n            </pre>\r\n        </div>;\r\n\r\n    }\r\n}\r\n\r\nconst busesProps:ObjViewProps<DevModel.Bus> = {\r\n    title: 'BUS',\r\n    formRows: [\r\n        {\r\n            label: '名称', \r\n            field: {name: 'name', type: 'string', maxLength: 100, required: true},\r\n        },\r\n        {\r\n            label: '描述',\r\n            field: {name: 'discription', type: 'string', maxLength: 250},\r\n            face: {type: 'textarea'}\r\n        },\r\n        {\r\n            label: 'Schema',\r\n            field: {name: 'schema', type: 'string', maxLength: 2500},\r\n            face: {type: 'textarea', rows: 8}\r\n        },\r\n    ],\r\n    row: (item:DevModel.Bus):JSX.Element => {\r\n        let {owner, name, discription, mine} = item;\r\n        let icon = appIcon;\r\n        let main = owner + ' / ' + name;\r\n        return <LMR className=\"py-2 px-3 align-items-stretch\"\r\n            left={<FA className=\"pt-2 pr-1 text-primary\" name='cogs' size=\"lg\" />}>\r\n            <div className=\"px-3\">\r\n                <div>{mine===1? <b>{main}</b> : main}</div>\r\n                <div><Muted>{discription}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    },\r\n    items: ()=>store.dev.buses,\r\n    repeated: {\r\n        name: 'name',\r\n        err: '跟已有的名称重复',\r\n    },\r\n    info: Info,\r\n    canEdit: bus => bus.mine === 1,\r\n};\r\n\r\nexport default busesProps;\r\n","import * as React from 'react';\r\nimport {Prop, PropGrid, LMR, Muted, FA} from 'tonva';\r\nimport {UnitSpan, IdDates} from '../tools';\r\nimport {DevModel} from '../model';\r\nimport {store} from '../store';\r\nimport {ObjViewProps} from './ObjViewProps';\r\n\r\nclass Info extends React.Component<DevModel.Server> {\r\n    render() {\r\n        let {discription, cloud, ip, unit, date_init, date_update} = this.props;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;        \r\n        //<Media icon={appIcon} main={discription} discription={ip} />},\r\n        let rows:Prop[] = [\r\n            '',\r\n            {type: 'component', component: <LMR className=\"py-2\"\r\n                left={<FA name=\"server\" className=\"text-primary fa-2x mr-3\" />}>\r\n                <div><b>{ip}</b></div>\r\n                {disp}\r\n            </LMR>},\r\n            '',\r\n            {type: 'component', label: '开发号', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            {type: 'string', label: '云服务', name: 'cloud'},\r\n        ];\r\n        return <div>\r\n            <PropGrid rows={rows} values={this.props} />\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst serversProps:ObjViewProps<DevModel.Server> = {\r\n    title: 'Server',\r\n    info: Info,\r\n    formRows: [\r\n        {\r\n            label: '描述', \r\n            field: {name: 'discription', type: 'string', maxLength: 50, required: true},\r\n        },\r\n        {\r\n            label: '云服务商', \r\n            field: {name: 'cloud', type: 'string', maxLength: 20, required: true},\r\n        },\r\n        {\r\n            label: 'IP地址', \r\n            field: {name: 'ip', type: 'string', maxLength: 20},\r\n        },\r\n    ],\r\n    row: (item: DevModel.Server):JSX.Element => {\r\n        let {discription, cloud} = item;\r\n        //return <Row main={item.discription} vice={<>{item.cloud}  {item.ip}</>} />;\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n            left={<FA name=\"server\" className=\"text-primary fa-lg\" />}>\r\n            <div className=\"px-3\">\r\n                <div><b>{discription}</b></div>\r\n                <div><Muted>{cloud}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    },\r\n    items: ()=>store.dev.servers,\r\n    repeated: {\r\n        name: 'discription',\r\n        err: '重复的描述',\r\n    }\r\n};\r\n\r\nexport default serversProps;\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page} from 'tonva';\r\nimport {FormRow, TonvaForm, Step, MultiStep, SubmitResult} from 'tonva-form';\r\nimport {DropdownActions, Action, List, FA} from 'tonva';\r\nimport {DevModel} from '../model';\r\nimport { ObjViewProps } from './ObjViewProps';\r\nimport { store } from 'store';\r\n\r\n@observer\r\nexport class ObjView<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    async componentDidMount() {\r\n        await this.props.items().load();\r\n    }\r\n    //converter(item:T):ListItem {\r\n    //    return this.props.converter(item);\r\n    //}\r\n    newItem() {\r\n        this.props.items().cur = undefined;\r\n        nav.push(<New {...this.props} />);\r\n    }\r\n    itemClick = (item:T) => {\r\n        this.props.items().cur = observable(item);\r\n        nav.push(<Info {...this.props} />);\r\n    }\r\n    render() {\r\n        let {title, items} = this.props;\r\n        let {isOwner} = store.unit;\r\n        let right = isOwner>0 && <button className='btn btn-secondary btn-sm' onClick={()=>this.newItem()}><FA name=\"plus\" /></button>;\r\n        return <Page header={title} right={right}>\r\n            <List items={items().items}\r\n                item={{render: this.props.row, onClick: this.itemClick}}\r\n                />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass New<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    async onSubmit(values:any):Promise<SubmitResult> {\r\n        if (await this.props.items().check(values) === false) return;\r\n        let ret = await this.props.items().saveCur(values);\r\n        if (ret === true) {\r\n            nav.pop();\r\n        }\r\n        else {\r\n            let repeated = this.props.repeated;\r\n            //this.formView.setError(repeated.name, repeated.err);\r\n        }\r\n        return;\r\n    }\r\n    render() {\r\n        let content;\r\n        let {title, steps, stepHeader} = this.props;\r\n        let {formRows, items} = this.props;\r\n        if (steps !== undefined) {\r\n            content = <MultiStep className=\"mt-4\" header={stepHeader} steps={steps} first=\"step1\" onSubmit={this.onSubmit} />;\r\n        }\r\n        else if (formRows !== undefined) {\r\n            content = <TonvaForm \r\n                className=\"m-3\"\r\n                formRows={formRows} \r\n                onSubmit={this.onSubmit} initValues={items().cur} />;\r\n        }\r\n        else {\r\n            content = 'ObjViewProps: no steps and no formRows';\r\n        }\r\n        return <Page header={'新增'+title}>\r\n            {content}\r\n        </Page>\r\n    }\r\n}\r\n\r\n@observer\r\nclass Info<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    private menuItems = [\r\n        {caption:'修改' + this.props.title, action:this.editItem.bind(this), icon:'edit' },\r\n        {caption:'删除', action:this.deleteItem.bind(this), icon:'trash-o' }\r\n    ];\r\n    async deleteItem() {\r\n        if (confirm('真的要删除吗？系统删除时并不会检查相关引用，请谨慎') === true) {\r\n            await this.props.items().del();\r\n            nav.pop();\r\n        }\r\n    }\r\n    editItem() {\r\n        nav.push(<Edit {...this.props} />);\r\n    }\r\n    render() {\r\n        let item = this.props.items().cur;\r\n        let actions = [];\r\n        let ex = this.props.extraMenuActions;\r\n        if (ex !== undefined) actions.push(...ex);\r\n        actions.push(...this.menuItems);\r\n        let canEdit = this.props.canEdit;\r\n        let right:any;\r\n        if (canEdit && canEdit(item) === true) {\r\n            right = <DropdownActions actions={actions} />;\r\n        }\r\n        return <Page header={this.props.title + ' - 详细资料'} right={right}>\r\n            <this.props.info {...item} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass Edit<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    private actions = [\r\n        {caption:'删除', action:this.deleteItem.bind(this), icon:'trash-o' }\r\n    ];\r\n    constructor(props: ObjViewProps<T>) {\r\n        super(props);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    componentWillMount() {\r\n    }\r\n    async onSubmit(values:any):Promise<SubmitResult> {\r\n        if (await this.props.items().check(values) === false) return;\r\n        await this.props.items().saveCur(values);\r\n        nav.pop();\r\n        return;\r\n    }\r\n    async deleteItem() {\r\n        if (confirm('真的要删除吗？系统删除时并不会检查相关引用，请谨慎') === true) {\r\n            await this.props.items().del();\r\n            nav.pop();\r\n        }\r\n    }\r\n    render() {\r\n        let right = <DropdownActions actions={this.actions} />\r\n        return <Page header={'修改 '+this.props.title} right={right} back=\"close\">\r\n            <TonvaForm \r\n                className=\"m-3\"\r\n                formRows={this.props.formRows} \r\n                onSubmit={this.onSubmit} initValues={this.props.items().cur} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from 'tonva';\r\nimport { List, SearchBox, LMR, FA } from 'tonva';\r\nimport { UsersController, UserApps, AppUsers } from './cUsers';\r\n\r\nexport class VApps extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private renderRow = (appUsers: AppUsers, index:number):JSX.Element => {\r\n        let {app, more, users} = appUsers;\r\n        let {id, name, discription} = app;\r\n        let right = <small className=\"text-muted\">{discription}</small>;\r\n        return <div className=\"d-block px-3 py-2\">\r\n            <LMR className=\"mb-2\" right={right}>\r\n                <FA name=\"address-card-o\" className=\"text-primary mr-3\" />\r\n                <b>{name}</b>\r\n            </LMR>\r\n            <div>\r\n                <small className=\"text-muted\">用户: </small>\r\n                {users.length===0?\r\n                    '[无]':\r\n                    users.map(u => u.assigned || u.nick || u.name).join(', ') + (more===true? ' ...' : '')}\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {appUsersList, searchApp, onAppsClick} = this.controller;\r\n        let searchBox = <SearchBox className=\"w-100 pr-1\" \r\n            onSearch={searchApp} \r\n            placeholder=\"搜索App\" \r\n            allowEmptySearch={true} />;\r\n        return <Page header={searchBox}>\r\n            <List items={appUsersList} \r\n                item={{render: this.renderRow, onClick:onAppsClick,  key: (item=>item.app.id)}} />\r\n        </Page>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from 'tonva';\r\nimport { List, SearchBox, LMR, FA } from 'tonva';\r\nimport { UsersController, UserApps } from './cUsers';\r\n\r\nexport class VUsers extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private renderRow = (userApps: UserApps, index:number):JSX.Element => {\r\n        let {user, apps} = userApps;\r\n        let {id, name, nick, icon, assigned} = user;\r\n        return <div className=\"d-block px-3 py-2\">\r\n            <div className=\"mb-2\">\r\n                <FA name=\"user-o\" className=\"text-primary mr-3\" />\r\n                <b>{assigned || nick || name}</b>\r\n            </div>\r\n            <div>\r\n                <small className=\"text-muted\">App: </small>\r\n                {apps.length===0?'[无]':apps.map(a => a.name).join(', ')}\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {userAppsList, searchUser, onUsersClick} = this.controller;\r\n        let searchBox = <SearchBox className=\"w-100 pr-1\" \r\n            onSearch={searchUser} \r\n            placeholder=\"搜索用户\" \r\n            allowEmptySearch={true} />;\r\n        return <Page header={searchBox}>\r\n            <List items={userAppsList} \r\n                item={{render: this.renderRow, onClick:onUsersClick, key: (item=>item.user.id)}} />\r\n        </Page>;\r\n    });\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from 'tonva';\r\nimport { List } from 'tonva';\r\nimport { UsersController, User } from './cUsers';\r\n\r\nexport class VApp extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curApp, curAppUsers, onAppEditUsers} = this.controller;\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={()=>onAppEditUsers()}>增减用户</button>;\r\n        return <Page header={'App - ' + (curApp.name)} right={right}>\r\n            <List items={curAppUsers} item={{render:this.renderApp}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderApp = (user: User, index:number):JSX.Element => {\r\n        let {name, nick, assigned} = user;\r\n        let content:any;\r\n        if (assigned)\r\n            content = <span>{assigned} &nbsp; <small className=\"text-muted\">{name}</small></span>;\r\n        else if (nick)\r\n            content = <span>{nick} &nbsp; <small className=\"text-muted\">{name}</small></span>;\r\n        else\r\n            content = <>{name}</>\r\n        return <div className=\"px-3 py-2\">{content}</div>\r\n    }\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from 'tonva';\r\nimport { List, SearchBox, LMR } from 'tonva';\r\nimport { UsersController, UserApps, AppUsers, App } from './cUsers';\r\n\r\nexport class VUser extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curUser, curUserApps, onUserEditApps} = this.controller;\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={()=>onUserEditApps()}>增减App</button>;\r\n        return <Page header={'用户 - ' + (curUser.assigned || curUser.nick || curUser.name)}\r\n            right={right}>\r\n            <List items={curUserApps} item={{render:this.renderApp}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderApp = (app: App, index:number):JSX.Element => {\r\n        let {name, discription} = app;\r\n        return <div className=\"px-3 py-2\">{name} {discription}</div>\r\n    }\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from 'tonva';\r\nimport { List, SearchBox, LMR, Muted, FA } from 'tonva';\r\nimport { UsersController, EditUser } from './cUsers';\r\n\r\nexport class VAppEditUsers extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curApp, appEditUsers, onAppEditUsers} = this.controller;\r\n        return <Page header={curApp.name + ' - 增减用户'} >\r\n            <List items={appEditUsers} item={{render:this.renderUser}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderUser = (editUser: EditUser, index:number):JSX.Element => {\r\n        let {name, nick, assigned, bind} = editUser;\r\n        let content:any;\r\n        if (assigned)\r\n            content = <>{assigned} <Muted>{name}</Muted></>;\r\n        else if (nick)\r\n            content = <>{nick} <Muted>{name}</Muted></>;\r\n        else\r\n            content = <>{name}</>\r\n        let right = <input type=\"checkbox\" defaultChecked={bind===1} \r\n            onChange={(evt)=>this.onUserChanged(editUser, evt.target.checked)} />;\r\n        return <LMR className=\"px-3 py-2 align-items-center\" right={right}>\r\n            {content}\r\n        </LMR>\r\n    }\r\n\r\n    private onUserChanged = async (editUser: EditUser, checked:boolean) => {\r\n        await this.controller.bindAppUser(editUser, checked);\r\n        editUser.bind = checked===true? 1: 0;\r\n    }\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from 'tonva';\r\nimport { List, SearchBox, LMR } from 'tonva';\r\nimport { UsersController, UserApps, AppUsers, App, EditApp } from './cUsers';\r\n\r\nexport class VUserEditApps extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curUser, userEditApps, onUserEditApps} = this.controller;\r\n        return <Page header={'增减App - ' + (curUser.assigned || curUser.nick || curUser.name)}>\r\n            <List items={userEditApps} item={{render:this.renderApp}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderApp = (editApp: EditApp, index:number):JSX.Element => {\r\n        let {name, discription, bind} = editApp;\r\n        let right = <input type=\"checkbox\" defaultChecked={bind===1} \r\n            onChange={(evt)=>this.onAppChanged(editApp, evt.target.checked)} />;\r\n        return <LMR className=\"px-3 py-2\" right={right}>\r\n            {name} {discription}\r\n        </LMR>\r\n    }\r\n\r\n    private onAppChanged = async (editApp: EditApp, checked:boolean) => {\r\n        await this.controller.bindUserApp(editApp, checked);\r\n        editApp.bind = checked===true? 1: 0;\r\n    }\r\n}","import * as React from 'react';\r\nimport { VPage, Page, Image, nav } from 'tonva';\r\nimport { UsersController, User } from './cUsers';\r\nimport { SearchBox } from 'tonva';\r\nimport { mainApi } from 'api';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class VAddUser extends VPage<UsersController> {\r\n    @observable private user: User = null;\r\n    //@observable private addedUser: User;\r\n    private searchBox: SearchBox;\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(():JSX.Element => {\r\n        let searchBox = <SearchBox ref={v=>this.searchBox=v}\r\n            className=\"w-100\"\r\n            onSearch={this.onSearch}\r\n            onFocus={this.onSearchFocus}\r\n            placeholder=\"用户全名/手机号/邮箱\"\r\n             />;\r\n        let content:any;\r\n        if (this.user === null) {\r\n        }\r\n        else if (this.user === undefined) {\r\n            content = <div className=\"text-info p-3\">没有找到用户</div>;\r\n        }\r\n        else {\r\n            let {name, nick, icon} = this.user;\r\n            let divUser:any;\r\n            if (nick) {\r\n                divUser = <><div><b>{nick}</b></div><div>{name}</div></>;\r\n            }\r\n            else {\r\n                divUser = <div><b>{name}</b></div>;\r\n            }\r\n            content = <div>\r\n                <div className=\"m-3 p-3 d-flex bg-white\">\r\n                    <Image src={icon} />\r\n                    <div className=\"ml-3\">{divUser}</div>\r\n                </div>\r\n                <div className=\"d-flex justify-content-center\">\r\n                    <button className=\"btn btn-success text-center\" onClick={this.onAddUser}>增加用户</button>\r\n                </div>\r\n            </div>;\r\n        }\r\n        /*\r\n        let divUserAdded:any;\r\n        if (this.addedUser) {\r\n            divUserAdded = <div className=\"p-3\">\r\n                <div>\r\n                    新增用户: {this.addedUser.name} &nbsp; &nbsp; \r\n                    <button className=\"btn btn-success\" \r\n                        onClick={()=>this.controller.onUserEditApps()}>\r\n                        为用户添加App\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        }\r\n        */\r\n        return <Page header={searchBox}>\r\n            {content}\r\n        </Page>;\r\n    })\r\n    //{divUserAdded}\r\n\r\n    private onSearch = async (key:string) => {\r\n        this.user = await mainApi.userFromKey(key);\r\n    }\r\n\r\n    private onAddUser = async () => {\r\n        await this.controller.addUser(this.user.id);\r\n        this.controller.curUser = this.user;\r\n        this.user = null;\r\n        this.searchBox.clear();\r\n        this.replacePage(this.addedPage);\r\n    }\r\n\r\n    private onSearchFocus = () => {\r\n        this.user = null;\r\n        //this.addedUser = null;\r\n        if (this.searchBox) this.searchBox.clear();\r\n    }\r\n\r\n    private onAddApps = () => {\r\n        this.closePage();\r\n        this.controller.onUserEditApps();\r\n    }\r\n\r\n    private onContinueAddUser = () => {\r\n        this.closePage();\r\n        this.controller.onAddUser();\r\n    }\r\n\r\n    private addedPage = () => {\r\n        return <Page header=\"添加成功\">\r\n            <div className=\"p-3 text-center\">\r\n                <div>\r\n                    新增用户: {this.controller.curUser.name}\r\n                </div>\r\n                <div className=\"mt-3\">\r\n                    <button className=\"btn btn-success mr-3\" \r\n                        onClick={this.onAddApps}>\r\n                        为用户添加App\r\n                    </button>\r\n                    <button className=\"btn btn-outline-primary\"\r\n                        onClick={this.onContinueAddUser}>\r\n                        继续添加新用户\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { Controller, VPage, Page } from 'tonva';\r\nimport { mainApi } from 'api';\r\nimport { LMR, FA } from 'tonva';\r\nimport { VApps } from './vApps';\r\nimport { VUsers } from './vUsers';\r\nimport { VApp } from './vApp';\r\nimport { VUser } from './vUser';\r\nimport { VAppEditUsers } from './vAppEditUsers';\r\nimport { VUserEditApps } from './vUserEditApps';\r\nimport { VAddUser } from './VAddUser';\r\nimport { Unit } from 'model';\r\n\r\nexport interface User {\r\n    id: number;\r\n    name: string;\r\n    nick: string;\r\n    icon: string;\r\n    assigned: string;\r\n}\r\nexport interface App {\r\n    id: number;\r\n    name: string;\r\n    discription: string;\r\n}\r\nexport interface UserApps {\r\n    user: User;\r\n    apps: App[];\r\n}\r\nexport interface AppUsers {\r\n    app: App;\r\n    users: User[];\r\n    more: boolean;\r\n}\r\nexport interface EditApp extends App {\r\n    bind: number;   // 0: not bind, 1: bind\r\n}\r\nexport interface EditUser extends User {\r\n    bind: number;  // 0: not bind, 1: bind\r\n}\r\n\r\nexport class UsersController extends Controller {\r\n    private unit: Unit;\r\n    @observable userAppsList: UserApps[];\r\n    @observable appUsersList: AppUsers[];\r\n    curUser: User;\r\n    @observable curUserApps: App[];\r\n    @observable userEditApps: EditApp[];\r\n    curApp: App;\r\n    @observable curAppUsers: User[];\r\n    @observable appEditUsers: EditUser[];\r\n\r\n    protected async internalStart(unit:Unit) {\r\n        this.unit = unit;\r\n        let cn = \"bg-white px-3 py-2 my-1\";\r\n        let appIcon = <FA name=\"columns\" className=\"text-primary mr-3\" />;\r\n        let userIcon = <FA name=\"user-plus\" className=\"text-primary mr-3\" />;\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={this.onAddUser}><FA name=\"plus\" /></button>;\r\n        this.openPage(<Page header={'用户管理 - ' +  this.unit.name} right={right}>\r\n            <LMR className={cn} onClick={this.onAppUsers} left={appIcon}>App</LMR>\r\n            <LMR className={cn} onClick={this.onUserApps} left={userIcon}>用户</LMR>\r\n        </Page>);\r\n    }\r\n\r\n    private onAppUsers = async () => {\r\n        await this.loadAppUsers(undefined);\r\n        this.openVPage(VApps);\r\n    }\r\n\r\n    private onUserApps = async () => {\r\n        await this.loadUserApps(undefined);\r\n        this.openVPage(VUsers);\r\n    }\r\n\r\n    private async loadAppUsers(key:string) {\r\n        let list:AppUsers[] = [];\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        let ret = await mainApi.unitAppUsers(this.unit.id, key, pageStart, pageSize);\r\n        let apps = ret[0];\r\n        let users = ret[1];\r\n        let coll: {[id:number]:AppUsers} = {}\r\n        for (let a of apps) {\r\n            let app:App = {\r\n                id: a.id,\r\n                name: a.name,\r\n                discription: a.discription,\r\n            };\r\n            list.push(coll[a.id] = {app:app, more:false, users:[]});\r\n        }\r\n        for (let u of users) {\r\n            let user:User = {\r\n                id: u.user,\r\n                name: u.name,\r\n                nick: u.nick,\r\n                icon: u.icon,\r\n                assigned: u.assigned\r\n            }\r\n            let item = coll[u.app];\r\n            let {users} = item;\r\n            if (users.length >= 5) {\r\n                item.more = true;\r\n            }\r\n            else {\r\n                users.push(user);\r\n            }\r\n        }\r\n        this.appUsersList = list;\r\n    }\r\n\r\n    private async loadUserApps(key:string) {\r\n        let list:UserApps[] = [];\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        let ret = await mainApi.unitUsers(this.unit.id, key, pageStart, pageSize);\r\n        let users = ret[0];\r\n        let apps = ret[1];\r\n        let coll: {[id:number]:UserApps} = {}\r\n        for (let u of users) {\r\n            let user:User = {\r\n                id: u.id,\r\n                name: u.name,\r\n                nick: u.nick,\r\n                icon: u.icon,\r\n                assigned: u.assigned\r\n            };\r\n            list.push(coll[u.id] = {user:user, apps:[]});\r\n        }\r\n        for (let a of apps) {\r\n            let app:App = {\r\n                id: a.app,\r\n                name: a.name,\r\n                discription: a.discription,\r\n            }\r\n            coll[a.user].apps.push(app);\r\n        }\r\n        this.userAppsList = list;\r\n    }\r\n\r\n    searchUser = async(key:string) => {\r\n        await this.loadUserApps(key);\r\n    }\r\n\r\n    searchApp = async(key:string) => {\r\n        await this.loadAppUsers(key);\r\n    }\r\n\r\n    onAppsClick = async (appUsers: AppUsers) => {\r\n        this.curApp = appUsers.app;\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.curAppUsers = await mainApi.unitOneAppUsers(this.unit.id, this.curApp.id, pageStart, pageSize);\r\n        this.openVPage(VApp);\r\n    }\r\n\r\n    onUsersClick = async (userApps: UserApps) => {\r\n        this.curUser = userApps.user;\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.curUserApps = await mainApi.unitOneUserApps(this.unit.id, this.curUser.id, pageStart, pageSize);\r\n        this.openVPage(VUser);\r\n    }\r\n\r\n    onAppEditUsers = async (key?:string) => {\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.appEditUsers = await mainApi.unitAppEditUsers(this.unit.id, this.curApp.id, key, pageStart, pageSize);\r\n        this.openVPage(VAppEditUsers);\r\n    }\r\n\r\n    onAddUser = () => {\r\n        this.openVPage(VAddUser);\r\n    }\r\n\r\n    onUserEditApps = async (key?:string) => {\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.userEditApps = await mainApi.unitUserEditApps(this.unit.id, this.curUser.id, key, pageStart, pageSize);\r\n        this.openVPage(VUserEditApps);\r\n    }\r\n\r\n    bindAppUser = async(user:User, checked:boolean) => {\r\n        await mainApi.bindAppUser(this.unit.id, this.curApp.id, user.id, checked===true? 1:0);\r\n        let appUsers = this.appUsersList.find(v => v.app.id === this.curApp.id);\r\n        if (checked === true) {\r\n            this.curAppUsers.push(user);\r\n            if (appUsers) appUsers.users.push(user);\r\n        }\r\n        else {\r\n            let index = this.curAppUsers.findIndex(v => v.id === user.id);\r\n            if (index>=0) this.curAppUsers.splice(index, 1);\r\n            if (appUsers) {\r\n                index = appUsers.users.findIndex(v => v.id === user.id);\r\n                if (index>=0) appUsers.users.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    bindUserApp = async(app:App, checked:boolean) => {\r\n        await mainApi.bindAppUser(this.unit.id, app.id, this.curUser.id, checked===true? 1:0);\r\n        if (this.userAppsList === undefined) return;\r\n        let userApps = this.userAppsList.find(v => v.user.id === this.curUser.id);\r\n        if (checked === true) {\r\n            this.curUserApps.push(app);\r\n            if (userApps) userApps.apps.push(app);\r\n        }\r\n        else {\r\n            let index = this.curUserApps.findIndex(v => v.id === app.id);\r\n            if (index>=0) this.curUserApps.splice(index, 1);\r\n            if (userApps) {\r\n                index = userApps.apps.findIndex(v => v.id === app.id);\r\n                if (index>=0) userApps.apps.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    addUser = async (userId: number) => {\r\n        await mainApi.unitAddUser(this.unit.id, userId);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page, appInFrame, Controller, \r\n    VPage, Image, Edit, ItemSchema, UiSchema, \r\n    StringSchema, ImageSchema, UiImageItem, UiTextItem} from 'tonva'; \r\nimport {List, LMR, FA} from 'tonva';\r\n//, StackedFA, PropGrid, Prop, Muted\r\n//import {StringValueEdit} from './tools';\r\nimport {Unit, UnitApps, UnitAdmin, DevModel} from './model';\r\nimport {store} from './store';\r\nimport Administors from './Administors';\r\nimport AppsPage from './Apps';\r\nimport {Members} from './Members';\r\nimport { mainApi } from 'api';\r\n//import { COrganization } from 'organization';\r\nimport {\r\n    ObjViewProps, ObjView,\r\n    //appsProps, \r\n    busesProps, \r\n    serversProps, /*uqdbsProps, servicesProps, */ UQController} from './Dev';\r\nimport { AppController } from './Dev';\r\nimport { UsersController } from 'Users';\r\n\r\nexport class CAdmin extends Controller {\r\n    isProduction: boolean;\r\n    adminUnits: UnitAdmin[]; // 仅仅为Admins调试用。从登录用户获取units\r\n\r\n    private async loadAdminUnits(): Promise<void> {        \r\n        let ret = await mainApi.userAdminUnits();\r\n        let adminUnits = this.adminUnits = ret[0];\r\n        console.log('loadAdminUnits', adminUnits);\r\n        if (adminUnits.length === 1) {\r\n            appInFrame.unit = adminUnits[0].id;\r\n            await store.loadUnit();\r\n        }\r\n    }\r\n    protected async internalStart(param?:any):Promise<void> {\r\n        store.init();\r\n        \r\n        this.isProduction = document.location.hash.startsWith('#tv');\r\n        console.log('admins isProduction %s', this.isProduction);\r\n\r\n        if (this.isProduction === false) {\r\n            await this.loadAdminUnits();\r\n            this.openVPage(VAdmin);\r\n            return;\r\n        }\r\n        await store.loadUnit();\r\n        this.openVPage(VAdmin);\r\n    /*\r\n        let user = nav.user;\r\n        if (user === undefined) {\r\n            console.log('autorun: user has logged out');\r\n            return;\r\n        }\r\n    \r\n        console.log('autorun login');\r\n        */\r\n       /*\r\n        setTimeout(async () => {\r\n            // 等待 tonva-tools 里面的initSubWin的nav.user的赋值\r\n            // 这个地方实际上有问题的，不应该这么写。程序逻辑顺序逻辑错误。\r\n            // 2018-11-5: 临时凑合用延时的方式来解决。\r\n            await store.loadUnit();\r\n            this.showVPage(VAdmin);\r\n        }, 200);\r\n        */\r\n    }\r\n}\r\n\r\nexport class VAdmin extends VPage<CAdmin> {\r\n    async open() {\r\n        let {isProduction, adminUnits} = this.controller;\r\n        if (isProduction === false) {\r\n            switch (adminUnits.length) {\r\n                default: this.openPage(this.selectUnitPage); return;\r\n                case 0: this.openPage(this.noUnitPage); return;\r\n                case 1: this.openPageElement(<AdminPage />); return;\r\n            }\r\n        }\r\n\r\n        if (store.unit === undefined) {\r\n            this.openPage(this.noUnitPage);\r\n            return;\r\n        }\r\n        this.openPageElement(<AdminPage />);\r\n    }\r\n\r\n    private selectUnitPage = () => {\r\n        return <Page header=\"选择小号\" logout={logout}>\r\n            <List items={this.controller.adminUnits} item={{render: this.renderRow, onClick: this.onRowClick}}/>\r\n        </Page>;\r\n    }\r\n\r\n    private noUnitPage = () => {\r\n        let {nick, name} = nav.user;\r\n        return <Page header=\"没有小号\" logout={logout}>\r\n            <div className=\"p-3 small text-info\">\r\n                {nick || name}: 没有需要管理的小号\r\n            </div>\r\n        </Page>\r\n    }\r\n\r\n    protected get view() {return undefined}\r\n\r\n    renderRow = (item: UnitAdmin, index: number):JSX.Element => {\r\n        return <LMR className=\"p-2\" right={'id: ' + item.id}>\r\n            <div>{item.nick || item.name}</div>\r\n        </LMR>;\r\n    }\r\n    onRowClick = async (item: UnitAdmin) => {\r\n        appInFrame.unit = item.id; // 25;\r\n        store.init();\r\n        await store.loadUnit();\r\n        this.closePage();\r\n        this.openPageElement(<AdminPage />);\r\n    }\r\n}\r\n\r\nconst logout = async () => {\r\n    store.logout();\r\n}\r\n\r\ninterface ActionItem {\r\n    main: string | JSX.Element;\r\n    right?: string | JSX.Element;\r\n    icon: string|JSX.Element;\r\n    page?: new (props:any) => React.Component;\r\n    //onClick: () => nav.push(<Administors />),\r\n    controller?: Controller;\r\n}\r\n\r\ninterface DevItem<T extends DevModel.ObjBase> {\r\n    title: string;\r\n    count: number;\r\n    icon: string;\r\n    objProps?: ObjViewProps<T>;\r\n    onClick?: ()=>void;\r\n}\r\n\r\ntype Item = ActionItem|DevItem<DevModel.ObjBase>|string;\r\n\r\nconst rArrow = <FA name=\"chevron-right\" />;\r\nconst typeCaptions = {\r\n    1: '开发号',\r\n    2: '小号',\r\n    3: '系统号'\r\n}\r\n@observer\r\ndefault class AdminPage extends React.Component {\r\n    private caption:string;\r\n\r\n    async componentWillMount() {\r\n        let {unit, dev} = store;\r\n        let {isAdmin, isOwner, type} = unit;\r\n        this.caption = typeCaptions[type];\r\n        if ((type & 1) !== 0) {\r\n            await store.dev.loadCounts();\r\n        }\r\n    }\r\n\r\n    private appsAction:ActionItem = {\r\n        main: '启停App',\r\n        right: rArrow, //'增减',\r\n        icon: 'play-circle-o',\r\n        page: AppsPage,\r\n    };\r\n    private usersAction:ActionItem = {\r\n        main: '用户角色',\r\n        right: rArrow,\r\n        icon: 'users',\r\n        page: Members,\r\n    };\r\n    private newUsersAction:ActionItem = {\r\n        main: '用户管理',\r\n        right: rArrow,\r\n        icon: 'user-o',\r\n        controller: new UsersController(undefined),\r\n    };\r\n    /*\r\n    private devAction:Item = {\r\n        main: <DevActions />,\r\n        right: '程序开发相关管理',\r\n        icon: 'laptop',\r\n        //page: Dev,\r\n    };*/\r\n    private adminsAction:ActionItem = {\r\n        main: '管理员',\r\n        right: rArrow,\r\n        icon: 'universal-access',\r\n        page: Administors,\r\n    };\r\n\r\n    /*\r\n    private cOrganization = new COrganization;\r\n    private organizeAction:ActionItem = {\r\n        main: this.cOrganization.label,\r\n        right: rArrow,\r\n        icon: this.cOrganization.icon,\r\n        controller: this.cOrganization\r\n    };\r\n    */\r\n\r\n    private noneAction:ActionItem = {\r\n        main: '请耐心等待分配任务',\r\n        icon: 'hourglass-start',\r\n    };\r\n\r\n    private buildItems():Item[] {\r\n        let {unit, dev} = store;\r\n        let {isAdmin, isOwner, type} = unit;\r\n        let items:Item[] = [];\r\n        if (isOwner === 1) {\r\n            items.push(this.adminsAction);\r\n        }\r\n        console.log('unit:', unit);\r\n        if (isAdmin === 1) {\r\n            if ((type & 2) !== 0) {\r\n                // unit\r\n                items.push(\r\n                    '小号管理',\r\n                    this.appsAction, \r\n                    //this.usersAction, \r\n                    this.newUsersAction, \r\n                    //this.organizeAction\r\n                );\r\n            }\r\n            if ((type & 1) !== 0) {\r\n                // dev unit\r\n                let {counts} = dev;\r\n\r\n                let appAction:DevItem<DevModel.ObjBase> = {\r\n                    title: 'APP', \r\n                    count: counts && counts.app, \r\n                    icon: 'tablet', \r\n                    onClick: () => new AppController(undefined).start(unit.id),\r\n                };\r\n                let uqAction:DevItem<DevModel.ObjBase> = {\r\n                    title: 'UQ', \r\n                    count: counts && counts.uq, \r\n                    icon: 'database', \r\n                    onClick: () => new UQController(undefined).start(unit.id),\r\n                };\r\n                let busAction:DevItem<DevModel.ObjBase> = {\r\n                    title: 'BUS', \r\n                    count: counts && counts.bus, \r\n                    icon: 'cogs', \r\n                    objProps: busesProps,\r\n                };\r\n                let serverAction:DevItem<DevModel.ObjBase> = {\r\n                    title: 'Server', \r\n                    count: counts && counts.server, \r\n                    icon: 'server', \r\n                    objProps: serversProps,\r\n                };\r\n                items.push('开发号管理')\r\n                if (isOwner>0) items.push(appAction);\r\n                items.push(uqAction, busAction);\r\n                if (isOwner>0) items.push(serverAction);\r\n            }\r\n        }\r\n        return items;\r\n    }\r\n    private row = (item:Item, index:number):JSX.Element => {\r\n        if (typeof item === 'string') {\r\n            return <div className=\"px-3 pt-3 pb-1 small text-muted\" style={{backgroundColor:'#f0f0f0'}}>{item}</div>;\r\n        }\r\n        let {title} = item as DevItem<DevModel.ObjBase>;\r\n        let left:any, mid:any, r:any;\r\n        if (title !== undefined) {\r\n            let {icon, count} = item as DevItem<DevModel.ObjBase>;\r\n            left = <FA className=\"text-primary\" name={icon} fixWidth={true} size=\"lg\" />;\r\n            mid = title;\r\n            r = count>0 && <span>{count}</span>;\r\n        }\r\n        else {\r\n            let {right, main, icon} = item as ActionItem;\r\n            left = typeof icon === 'string'? \r\n                <FA className=\"text-primary\" name={icon} fixWidth={true} size=\"lg\" /> :\r\n                item.icon;\r\n            mid = main;\r\n            r = <span>{right}</span>;\r\n        }\r\n        return <LMR className=\"px-3 py-2 align-items-center\" left={left} right={r}>\r\n            <div className=\"px-3\"><b>{mid}</b></div>\r\n        </LMR>;\r\n    }\r\n    private rowClick = async (item:Item) => {\r\n        let {title} = item as DevItem<DevModel.ObjBase>;\r\n        if (title !== undefined) {\r\n            let {objProps, onClick} = item as DevItem<DevModel.ObjBase>;\r\n            if (objProps !== undefined)\r\n                return nav.push(<ObjView {...objProps} />);\r\n            else {\r\n                onClick();\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            let {page:P, controller} = item as ActionItem;\r\n            if (P !== undefined)\r\n                nav.push(<P />);\r\n            else {\r\n                await controller.start(store.unit);\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        let unit:Unit = store.unit;\r\n        if (unit === undefined) {\r\n            console.log(\"admin render without unit\");\r\n            return null;\r\n        }\r\n        console.log(\"admin render with unit\");\r\n        let items = this.buildItems();\r\n        if (items === undefined) {\r\n            return <Page header=\"\" />;\r\n        }\r\n        let header:any, top:any;\r\n        if (unit !== undefined) {\r\n            let {name, nick, icon, discription} = unit;\r\n            let title:string, vice:any;\r\n            if (nick) {\r\n                title = nick;\r\n                vice = <h6><small className='text-secondary'>{name}</small></h6>;\r\n            }\r\n            else {\r\n                title = name;\r\n            }\r\n            if (this.caption !== undefined) header = this.caption + ' - ' + title;\r\n            top = <LMR className='px-3 my-4 bg-white py-2 cursor-pointer' onClick={()=>nav.push(<UnitProps />)}\r\n                left={<div><Image className=\"w-3c h-3c\" src={icon} /></div>}>\r\n                <div className=\"px-3\">\r\n                    <LMR right={vice}><h6 className='text-dark font-weight-bold'>{title}</h6></LMR>\r\n                    <div className='small text-info'>{discription}</div>\r\n                </div>\r\n            </LMR>;\r\n        }\r\n        else {\r\n            header = '系统管理';\r\n        }\r\n        return <Page header={header} logout={logout}>\r\n            {top}\r\n            <List items={items} item={{render:this.row, onClick:this.rowClick}} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass UnitProps extends React.Component {\r\n    /*\r\n    private rows:Prop[] = [\r\n        '',\r\n        {label: '标志图', type: 'string', name: 'icon'},\r\n        '=',\r\n        {label: '唯一号', type: 'string', name: 'name'},\r\n        {\r\n            label: '名称', \r\n            type: 'string',\r\n            name: 'nick', \r\n            onClick:()=>nav.push(<StringValueEdit \r\n                title=\"修改名称\"\r\n                value={store.unit.nick}\r\n                onChanged={this.onNickChanged} \r\n                info=\"好的名字会提升接受度\" />)\r\n        },\r\n        {\r\n            label: '说明',\r\n            type: 'string',\r\n            name: 'discription',\r\n            onClick:()=>nav.push(<StringValueEdit \r\n                title=\"修改说明\"\r\n                value={store.unit.discription}\r\n                onChanged={this.onDiscriptionChanged} \r\n                info=\"对小号做一个说明\" />)\r\n        },\r\n    ];\r\n    */\r\n    private schema:ItemSchema[] =[\r\n        {name: 'icon', type: 'image'} as ImageSchema,\r\n        {name: 'nick', type: 'string'} as StringSchema,\r\n        {name: 'discription', type: 'string'} as StringSchema,\r\n    ];\r\n    private uiSchema:UiSchema = {\r\n        items: {\r\n            nick: {widget:'text', label:'别名', placeholder:'好的别名更方便记忆'} as UiTextItem,\r\n            icon: {widget:'image', label:'标志图'} as UiImageItem,\r\n            discription: {widget:'text', label:'描述', placeholder:'简短清晰的描述'} as UiTextItem,\r\n        }\r\n    }\r\n    /*\r\n    async onNickChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.unitChangeProp('nick', value);\r\n    }\r\n    async onDiscriptionChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.unitChangeProp('discription', value);\r\n    }\r\n    */\r\n    private onItemChanged = async (itemSchema:ItemSchema, newValue:any, preValue:any) => {\r\n        let {name} = itemSchema;\r\n        //await userApi.userSetProp(name, newValue);\r\n        await store.unitChangeProp(name, newValue);\r\n        //this.data[name] = newValue;\r\n        //nav.user[name] = newValue;\r\n        //nav.saveLocalUser();\r\n    }\r\n    //<PropGrid rows={this.rows} values={store.unit} alignValue=\"right\" />\r\n    render() {\r\n        let unit:Unit = store.unit;\r\n        let {isRoot, isOwner} = unit;\r\n        return <Page header=\"小号信息\">\r\n            <Edit schema={this.schema} uiSchema={this.uiSchema}\r\n                data={store.unit}\r\n                onItemChanged={this.onItemChanged}\r\n                stopEdit={!(isRoot>0 && isOwner>0)} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { nav, NavView } from 'tonva';\r\nimport { CAdmin } from './Admin';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n    async onLogined() {\r\n        let loc = document.location;\r\n        nav.clear();\r\n        //nav.push(<StartPage />);\r\n        let cAdmin = new CAdmin({});\r\n        await cAdmin.start();\r\n    }\r\n    render() {\r\n        return (\r\n            <NavView onLogined={this.onLogined} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n"],"sourceRoot":""}