{"version":3,"sources":["tonva-tools/index.ts","tonva-react-form/index.ts","tonva-react-uq/controllers/CVEntity.tsx","tonva-tools/ui/nav.tsx","tonva-react-uq/controllers/form/viewModel.tsx","tonva-tools/net/guestApi.ts","tonva-tools/net/index.ts","tonva-react-uq/tools/jsonStringify.ts","tonva-react-uq/tools/tv.tsx","tonva-react-uq/tools/index.ts","tonva-tools/ui/index.ts","tonva-tools/net/appBridge.ts","tonva-tools/net/httpChannelUI.ts","tonva-tools/net/uqApi.ts","tonva-react-uq/controllers/link/cLink.tsx","tonva-react-uq/controllers/link/index.ts","tonva-tools/net/wsChannel.ts","tonva-tools/ui/page.tsx","tonva-react-form/uid.ts","tonva-tools/ui/image.tsx","tonva-tools/net/host.ts","tonva-tools/user.ts","tonva-tools/uid.ts","tonva-react-uq/controllers/tuid/vTuidMain.tsx","tonva-react-uq/controllers/tuid/vTuidEdit.tsx","tonva-react-uq/controllers/tuid/vTuidSelect.tsx","tonva-react-uq/controllers/tuid/vTuidView.tsx","tonva-react-uq/controllers/tuid/vTuidInfo.tsx","tonva-react-uq/controllers/tuid/pageItems.ts","tonva-react-uq/controllers/tuid/vTuidList.tsx","tonva-react-uq/controllers/tuid/cTuid.ts","tonva-react-uq/controllers/tuid/index.tsx","tonva-react-uq/controllers/form/vBand.tsx","tonva-react-uq/controllers/form/vSubmit.tsx","tonva-react-uq/controllers/form/rule.ts","tonva-react-uq/controllers/form/vField/vField.tsx","tonva-react-uq/controllers/form/vField/vComputeField.tsx","tonva-react-uq/controllers/form/vArr.tsx","tonva-react-uq/controllers/form/vField/vTuidField.tsx","tonva-react-uq/controllers/form/bandsBuilder.ts","tonva-react-uq/controllers/form/vField/buildVmField.ts","tonva-react-uq/controllers/form/vForm.tsx","tonva-react-uq/controllers/form/index.ts","tonva-tools/net/httpChannel.ts","tonva-tools/ui/res.ts","tonva-react-uq/controllers/index.ts","tonva-react-form/form/control/control.tsx","tonva-react-form/form/control/buttonsControl.tsx","tonva-react-form/form/control/charsControl.tsx","tonva-react-form/form/control/stringControl.tsx","tonva-react-form/form/control/numberControl.tsx","tonva-react-form/form/control/unknownControl.tsx","tonva-react-form/form/control/pickIdControl.tsx","tonva-react-form/form/control/pickTuidControl.tsx","tonva-react-form/form/control/pickControl.tsx","tonva-react-form/form/control/index.ts","tonva-react-form/form/control/checkControl.tsx","tonva-react-form/form/control/radioControl.tsx","tonva-react-form/form/control/selectControl.tsx","tonva-react-form/form/control/textAreaControl.tsx","tonva-react-uq/entities/entity.ts","tonva-react-uq/entities/tuid.ts","tonva-react-uq/entities/action.ts","tonva-react-uq/entities/sheet.ts","tonva-react-uq/entities/query.ts","tonva-react-uq/entities/book.ts","tonva-react-uq/entities/history.ts","tonva-react-uq/entities/map.ts","tonva-react-uq/entities/pending.ts","tonva-react-uq/entities/entities.ts","tonva-react-uq/entities/index.ts","tonva-react-form/form/rowContainer/index.tsx","tonva-tools/net/apiBase.ts","tonva-tools/ui/titleBar.tsx","tonva-react-uq/controllers/query/defaultRow.tsx","tonva-react-uq/controllers/query/vQueryMain.tsx","tonva-react-uq/controllers/query/vQuerySelect.tsx","tonva-react-uq/controllers/query/cQuery.ts","tonva-react-uq/controllers/query/index.ts","tonva-tools/ui/edit/imageItemEdit.tsx","tonva-tools/ui/loading.tsx","tonva-tools/ui/resUploader.tsx","tonva-react-form/form/index.ts","tonva-react-form/form/formView.tsx","tonva-react-uq/controllers/CApp.tsx","tonva-react-uq/controllers/icons.tsx","tonva-react-uq/controllers/ControllerUq.ts","tonva-react-uq/centerApi.ts","tonva-react-uq/controllers/sheet/vMain.tsx","tonva-react-uq/controllers/sheet/vNew.tsx","tonva-react-uq/controllers/sheet/vSheetView.tsx","tonva-react-uq/controllers/sheet/vEdit.tsx","tonva-react-uq/controllers/sheet/vSheetAction.tsx","tonva-react-uq/controllers/sheet/vSchema.tsx","tonva-react-uq/controllers/sheet/vArchives.tsx","tonva-react-uq/controllers/sheet/vList.tsx","tonva-react-uq/controllers/sheet/vArchived.tsx","tonva-react-uq/controllers/sheet/vSheet.tsx","tonva-react-uq/controllers/sheet/vSaved.tsx","tonva-react-uq/controllers/sheet/vSheetProcessing.tsx","tonva-react-uq/controllers/sheet/cSheet.ts","tonva-react-uq/controllers/sheet/index.ts","tonva-react-uq/controllers/book/vBookMain.tsx","tonva-react-uq/controllers/book/cBook.ts","tonva-react-uq/controllers/uq/vUq.tsx","tonva-react-uq/controllers/uq/cUq.tsx","tonva-react-uq/controllers/uq/index.ts","tonva-react-uq/controllers/map/vMain.tsx","tonva-react-uq/controllers/map/inputValues.tsx","tonva-react-uq/controllers/map/cMap.ts","tonva-react-uq/controllers/map/index.ts","tonva-react-uq/controllers/history/vHistoryMain.tsx","tonva-react-uq/controllers/history/cHistory.ts","tonva-react-uq/controllers/history/index.ts","tonva-react-uq/controllers/action/vActionMain.tsx","tonva-react-uq/controllers/action/cAction.ts","tonva-react-uq/controllers/action/index.ts","tonva-react-uq/controllers/pending/vPendingMain.tsx","tonva-react-uq/controllers/pending/cPending.ts","tonva-react-uq/controllers/pending/index.ts","tonva-tools/ui/edit/itemEdit.tsx","tonva-tools/net/netToken.ts","tonva-tools/entry/userApi.ts","tonva-tools/left0.ts","tonva-tools/ui/VM.tsx","tonva-tools/ui/schema/index.ts","tonva-tools/pageItems.ts","tonva-tools/cacheIds.ts","tonva-react-form/form/TonvaForm.tsx","tonva-react-form/dropDownActions/index.tsx","tonva-react-form/easyDate/index.tsx","tonva-react-form/media.tsx","tonva-react-form/searchBox.tsx","tonva-react-form/multiStep/index.tsx","tonva-tools/ui/form/rules/index.ts","tonva-tools/ui/form/widgets/widget.tsx","tonva-tools/ui/form/widgets/textWidget.tsx","tonva-tools/ui/form/widgets/numberWidget.tsx","tonva-tools/ui/form/widgets/updownWidget.tsx","tonva-tools/ui/form/widgets/dateWidget.tsx","tonva-tools/ui/form/widgets/checkBoxWidget.tsx","tonva-tools/ui/form/widgets/selectWidget.tsx","tonva-tools/ui/form/widgets/idWidget.tsx","tonva-tools/ui/form/widgets/unknown.tsx","tonva-tools/ui/form/widgets/buttonWidget.tsx","tonva-tools/ui/form/context.tsx","tonva-tools/ui/form/widgets/arrComponent.tsx","tonva-tools/ui/form/widgets/imageWidget.tsx","tonva-tools/ui/form/widgets/factory.tsx","tonva-tools/ui/form/widgets/textareaWidget.tsx","tonva-tools/ui/form/widgets/passwordWidget.tsx","tonva-tools/ui/form/widgets/radioWidget.tsx","tonva-tools/ui/form/widgets/rangeWidget.tsx","tonva-tools/ui/form/formRes.ts","tonva-tools/ui/form/form.tsx","tonva-tools/ui/form/field.tsx","tonva-tools/ui/form/index.ts","tonva-react-form/components/Badge.tsx","tonva-react-form/components/LMR.tsx","tonva-react-form/components/FA.tsx","tonva-react-form/components/Muted.tsx","tonva-react-form/components/index.ts","tonva-react-form/list/base.tsx","tonva-react-form/list/clickable.tsx","tonva-react-form/list/static.tsx","tonva-react-form/list/selectable.tsx","tonva-react-form/list/index.tsx","tonva-react-form/propGrid/row.tsx","tonva-react-form/propGrid/propView.tsx","tonva-react-form/propGrid/PropGrid.tsx","tonva-react-form/propGrid/index.tsx","tonva-tools/ui/edit/stringItemEdit.tsx","tonva-tools/ui/edit/edit.tsx","tonva-tools/ui/edit/index.tsx","tonva-react-form/listView/listRow.tsx","tonva-react-form/listView/listView.tsx","tonva-tools/ui/tabs/tabs.tsx","tonva-tools/entry/meInfo.tsx","tonva-tools/ui/fetchErrorView.tsx","tonva-tools/local.ts","tonva-tools/img/logo.svg","api/mainApi.ts","api/devApi.ts","store/admins.ts","store/dev.ts","store/cacheIds.ts","store/index.ts","Administors/NewFellow.tsx","Administors/EditAdmin.tsx","Administors/index.tsx","tools/idDates.tsx","tools/span.tsx","tools/unitSpan.tsx","consts.ts","tools/uqSpan.tsx","tools/appSpan.tsx","tools/serverSpan.tsx","tools/stringValueEdit.tsx","tools/idPickPage.tsx","Apps/info.tsx","Apps/new.tsx","Apps/index.tsx","Members/newRole.tsx","Members/roleApps.tsx","Members/memberPage.tsx","Members/membersPage.tsx","Members/rolePage.tsx","Members/index.tsx","organization/ui/map/teamPerson/index.tsx","organization/ui/index.ts","organization/ui/map/index.ts","organization/ui/tuid/index.ts","organization/ui/tuid/user.tsx","organization/ui/tuid/organization.tsx","organization/ui/query/index.ts","organization/ui/query/teamPosts.tsx","organization/ui/res/index.ts","organization/ui/res/zh/CN.tsx","organization/op/vOpBinding.tsx","organization/op/vAllPosts.tsx","organization/op/vFullFunction.tsx","organization/op/vSearchUser.tsx","organization/op/cOpBinding.tsx","organization/organization.tsx","Dev/apps/editPage.tsx","Dev/apps/appsPage.tsx","Dev/apps/appUqs.tsx","Dev/apps/appPage.tsx","Dev/apps/uqBindPage.tsx","Dev/apps/index.tsx","Dev/uqs/uqUpload.tsx","createIdPick.tsx","Dev/uqs/newServicePage.tsx","Dev/uqs/servicePage.tsx","Dev/uqs/editPage.tsx","Dev/uqs/uqPage.tsx","Dev/uqs/listPage.tsx","Dev/uqs/index.tsx","Dev/row.tsx","Dev/buses.tsx","Dev/servers.tsx","Dev/services.tsx","Dev/ObjView.tsx","Users/vApps.tsx","Users/vUsers.tsx","Users/vApp.tsx","Users/vUser.tsx","Users/vAppEditUsers.tsx","Users/vUserEditApps.tsx","Users/VAddUser.tsx","Users/cUsers.tsx","Admin.tsx","App.tsx","registerServiceWorker.ts","index.tsx"],"names":["_left0__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d","__webpack_exports__","_net__WEBPACK_IMPORTED_MODULE_2__","_ui__WEBPACK_IMPORTED_MODULE_3__","o","_pageItems__WEBPACK_IMPORTED_MODULE_5__","_cacheIds__WEBPACK_IMPORTED_MODULE_6__","_form__WEBPACK_IMPORTED_MODULE_0__","_list__WEBPACK_IMPORTED_MODULE_1__","_dropDownActions__WEBPACK_IMPORTED_MODULE_2__","_easyDate__WEBPACK_IMPORTED_MODULE_3__","_propGrid__WEBPACK_IMPORTED_MODULE_4__","_components__WEBPACK_IMPORTED_MODULE_5__","_media__WEBPACK_IMPORTED_MODULE_6__","_searchBox__WEBPACK_IMPORTED_MODULE_8__","_multiStep__WEBPACK_IMPORTED_MODULE_9__","CEntity","_ControllerUq__WEBPACK_IMPORTED_MODULE_3__","[object Object]","cUq","entity","ui","res","super","Object","setPrototypeOf","this","x","name","typeName","label","icon","_icons__WEBPACK_IMPORTED_MODULE_2__","loadSchema","onSubmit","values","mode","options","buildFormOptions","ret","_form__WEBPACK_IMPORTED_MODULE_1__","setValues","none","submitCaption","arrNewCaption","arrEditCaption","arrTitleNewButton","fields","arrFields","undefined","new","formUI","form","arrs","inputs","buildInputs","buildFieldsInputs","arr","items","arrFieldInputs","field","_tuid","fieldUI","select","buildSelect","content","buildContent","placeHolder","getTuidPlaceHolder","__awaiter","_ownerField","cTuidSelect","cSelectFrom","param","getValue","autoList","console","log","call","removeCeased","id","idFromItem","useId","queryName","cQuerySelect","VEntity","tonva_tools__WEBPACK_IMPORTED_MODULE_0__","controller","createForm","mobileHeaderStyle","RegExp","test","navigator","userAgent","minHeight","logMark","logs","stackKey","NavView","react__WEBPACK_IMPORTED_MODULE_0__","props","waitCount","isHistoryBack","clearError","setState","fetchError","back","bind","navBack","stack","state","wait","window","addEventListener","nav","set","start","level","length","waitTimeHandler","global","setTimeout","clearTimeout","err","error","unauthorized","showLogin","view","disposer","clear","push","history","pushState","key","ceased","refresh","item","pop","dispose","p","i","len","backLevel","popAndDispose","find","v","confirmClose","confirm","self","top","postMessage","type","message","elWait","elError","className","_loading__WEBPACK_IMPORTED_MODULE_10__","_fetchErrorView__WEBPACK_IMPORTED_MODULE_4__","assign","map","index","style","visibility","Nav","local","_local__WEBPACK_IMPORTED_MODULE_6__","user","lang","district","_res__WEBPACK_IMPORTED_MODULE_9__","language","culture","guest","g","get","handler","ws","onWsReceiveAny","handlerId","endWsReceive","msg","receive","unitRes","fetch","json","unit","unitName","_net__WEBPACK_IMPORTED_MODULE_7__","getPredefinedUnitName","unitId","unitFromName","settings","navSettings","hash","document","location","pos","_net_appBridge__WEBPACK_IMPORTED_MODULE_5__","hashParam","substring","startWait","url","resHost","centerHost","resUrl","wsHost","setGuest","exHash","appInFrame","parent","_net_wsChannel__WEBPACK_IMPORTED_MODULE_8__","predefinedUnit","loadPredefinedUnit","notLogined","logined","endWait","onLogined","_net_netToken__WEBPACK_IMPORTED_MODULE_3__","token","callback","connect","JSON","stringify","saveLocalUser","showAppView","defaultTop","loginTop","withBack","lv","e","then","loginView","default","_page__WEBPACK_IMPORTED_MODULE_2__","header","onClick","logout","logoutClear","cp","ChangePasswordPage","onError","show","replace","topKey","popTo","ceaseTop","regConfirmClose","confirmBox","apiId","sheetType","sheetId","Promise","resolve","reject","sheet","includes","uh","src","open","date","Date","getTime","toTimeString","step","__decorate","mobx__WEBPACK_IMPORTED_MODULE_1__","ViewModel","PureJSONContent","JSONContent","RowContent","mobx_react__WEBPACK_IMPORTED_MODULE_1__","_tools__WEBPACK_IMPORTED_MODULE_2__","vm","guestApi","uqApi","wsChannel","apiBase","appBridge","host","replacer","value","substr","jsonStringify","Tv","index_module","tuidValue","nullUI","ttv","react","bi","_$tuid","_$com","t","controllers","com","getTuidContent","val","valueFromId","boxIdContent","tv","_nav__WEBPACK_IMPORTED_MODULE_0__","_VM__WEBPACK_IMPORTED_MODULE_3__","_schema__WEBPACK_IMPORTED_MODULE_4__","_form__WEBPACK_IMPORTED_MODULE_5__","_edit__WEBPACK_IMPORTED_MODULE_6__","_res__WEBPACK_IMPORTED_MODULE_7__","_image__WEBPACK_IMPORTED_MODULE_10__","uqTokens","logoutUqTokens","appsInFrame","_unit","isBridged","setAppInFrame","appHash","parts","split","Number","page","slice","getExHashPos","lastIndexOf","getExHash","appUrl","u","_uid__WEBPACK_IMPORTED_MODULE_2__","appUq","uq","uqOwner","uqName","uqToken","_uqApi__WEBPACK_IMPORTED_MODULE_3__","urlDebug","realUrl","_host__WEBPACK_IMPORTED_MODULE_5__","getUrlOrDebug","at","a","opener","apiName","evt","data","subWin","source","_wsChannel__WEBPACK_IMPORTED_MODULE_4__","el","getElementById","hidden","hideFrameBack","lodash__WEBPACK_IMPORTED_MODULE_0___default","clone","_ui__WEBPACK_IMPORTED_MODULE_1__","subFrameStarted","onReceive","initSubWin","from","callId","method","body","result","directCall","callCenterApiFromMessage","bca","brideCenterApis","bridgeCenterApiReturn","onReceiveAppApiMessage","action","onAppApiReturn","bridgeCenterApi","httpChannelUI_HttpChannelNavUI","channelUIs","channelNoUIs","logoutApis","uqApi_channels","uqLocalEntities","localUqs","ls","localStorage","getItem","parse","uqs","loginedUserId","isNet","un","__loadAccess","saveLocal","lodash_default","cloneDeep","removeItem","accessValue","str","setItem","isMatch","uqApi_UqApi","basePath","access","showWaiting","channels","channelUI","channel","httpChannel","acc","join","loadAccess","checkAccess","names","post","params","owner","pageStart","pageSize","order","$order","ids","proxy","put","uqApi_UnitxApi","buildChannel","centerAppApi","uqApi_CenterAppApi","unitxUq","setCenterUrl","centerToken","centerChannel","centerChannelUI","setCenterToken","userId","uqApi_CenterApi","path","uqTokenApi","unitParam","nowTick","tick","callCenterapi","appUqs","appOwner","appName","rLs","rAppOwner","rAppName","uqsPure","obj","cachedUqs","cachedId","retId","retUqs","loadAppUqs","checkUqs","Link","cLink_CLink","classnames_default","subAppWindow","setSubAppWindow","win","postWsToTop","WsBase","handlerSeed","anyHandlers","msgHandlers","seed","$type","wsBaseSeed","wsBridge","wsBaseId","WSChannel","that","WebSocket","onopen","ev","onerror","onmessage","wsMessage","onclose","close","event","postWsToSubApp","netThis","send","scrollTimeGap","ScrollView","bottomTime","topTime","onScroll","onScrollTop","onScrollBottom","target","scrollTop","offsetHeight","scrollHeight","c","direct","children","forEach","child","_$scroll","toString","eachChild","Page","cur","tabs","tabStates","tab","lodash__WEBPACK_IMPORTED_MODULE_3___default","isSelected","isMounted","t0","onTabClick","load","footer","right","keepHeader","titleBar","title","redDot","img","redDotView","cn","classnames__WEBPACK_IMPORTED_MODULE_2___default","_titleBar__WEBPACK_IMPORTED_MODULE_4__","center","sideBar","invisible","onTouchStart","elFooter","renderTabs","renderSingle","uid","ALPHABET","ID_LENGTH","rtn","charAt","Math","floor","random","Image","classnames__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_1___default","n","_nav__WEBPACK_IMPORTED_MODULE_2__","startsWith","isDevelopment","NODE_ENV","PUBLIC_URL","REACT_APP_CENTER_HOST","REACT_APP_ICON","REACT_APP_ITEM_ICON","hosts","centerhost","reshost","uqhost","unitxhost","uq-build","fetchOptions","headers","Content-Type","tryLocal","getCenterHost","centerUrlFromHost","centerWsFromHost","getResHost","promises","hostArr","hostValue","findIndex","fetchUrl","debugHostUrl","localCheck","results","all","j","hostString","indexOf","timeout","text","catch","Error","fetchLocalCheck","decodeUserToken","decodeGuestToken","jwt_decode__WEBPACK_IMPORTED_MODULE_0__","jwt_decode__WEBPACK_IMPORTED_MODULE_0___default","vTuidMain_VTuidMain","CVEntity","onNew","onList","onSearch","openPage","link","render","newButton","proxyLinks","isFrom","tonva_react_form","size","placeholder","entityRender","entityClick","tonva_tools","vTuidEdit_VTuidEdit","next","vTuidEdit_awaiter","vForm","reset","closePage","finish","getValues","save","unique","setError","isCalling","returnCall","openPageElement","editView","vTuidSelect_VTuidSelect","mainView","react_default","createElement","initKey","onSearchMain","PageItems","renderMainRow","clickMainRow","before","vTuidSelect_awaiter","searchMain","mainRowContent","ceasePage","showDiv","getIdFromObj","divView","renderDivRow","clickDivRow","divRowContent","showMain","rowContent","viewModel","ownerValue","divs","divItems","getDivItems","vTuidView_VTuidView","vTuidView_awaiter","alert","tools","buildForm","vTuidInfo_VTuidInfo","pageItems_TuidPageItems","tuid","search","vTuidList_VTuidMainListBase","vTuidList_awaiter","renderRow","clickRow","callOnSelected","rowKey","ownerTop","ownerObj","ownerId","onSelected","VTuidMainList","cTuid_CTuid","buildPageItems","first","searchArr","cTuid_CTuidBase","proxies","linkFromName","cFrom","cUqFrom","cTuidEditFromName","cTuidInfoFromName","cTuidSelectFromName","VTuidMain","VTuidEdit","VTuidList","schemaFrom","openVPage","onEdit","itemChanged","cTuidInfo","cTuid_CTuidInfo","cTuidEdit","CTuidEdit","edit","cTuidList","CTuidList","merge","CTuidMain","cTuid_CTuidSelect","VTuidSelect","VTuidInfo","vBand_VBand","renderContent","addRow","VFieldBand","vField","vBand_VArrBand","vArr","setAddRow","vBand_VSubmitBand","vSubmit","vSubmit_VSubmit","onClickSubmit","submit","isOk","disabled","caption","mobx_module","Rule","RuleRequired","defy","trim","NaN","RuleNum","RuleInt","isNaN","isInteger","RuleMin","min","check","RuleMax","max","vField_VField","fieldRes","init","buildRules","rules","required","null","checkRules","r","errors","readonly","FormMode","editable","vField_decorate","vField_VInputControl","renderError","ref","input","setInputValue","onFocus","onBlur","computeFields","onChange","currentTarget","setValue","inputGroup","suffix","ctrlCN","inputType","readOnly","maxLength","onKeyPress","RedMark","color","position","left","VStringField","KeyCode_Neg","KeyCode_Dot","vField_VNumberControl","ch","charCode","extraChars","onKeyDot","onKeyNeg","preventDefault","_a","vField_VIntField","VDecField","VTextField","VDateTimeField","vComputeField_VComputeField","vArr_VArr","ownerForm","onEditRow","rowPage","vArr_awaiter","valueBoxs","onRowChanged","rowValues","$owner","list","renderItem","showRow","editRow","editSubmitCaption","internalAddRow","newSubmitCaption","button","paddingTop","paddingBottom","arrsRes","arrRes","newSubmit","editSubmit","arrUI","vForm_VForm","buttonStyle","textAlign","paddingLeft","paddingRight","overflow","vTuidField_VTuidField","vTuidField_awaiter","showInfo","boxId","idBox","bandsBuilder_BandsBuilder","layout","formItems","bandsOnFly","bandsFromLayout","bands","bandsFromFields","bandFromArr","bandFromField","formItem","rfn","resFromName","buildVField","vFields","vArrs","onFormSubmit","buildFormValues","buildBands","bandColl","bandsBuilder","build","band","getVFields","f","getVArr","getVSubmit","rows","row","fn","initValues","arrList","ctrl","fieldName","valueFromFieldName","propName","buildFieldValues","array","deep","buildObservableValues","vForm_decorate","HttpChannel","isCenter","hostUrl","apiToken","showError","_host__WEBPACK_IMPORTED_MODULE_2__","keys","k","buildOptions","innerFetch","buildError","timeOutHandler","encodeURI","ok","statusText","ct","retJson","toLowerCase","_ui_nav__WEBPACK_IMPORTED_MODULE_1__","_appBridge__WEBPACK_IMPORTED_MODULE_0__","Headers","append","resOptions","resLang","lodash__WEBPACK_IMPORTED_MODULE_0__","_","l","languages","setResOptions","_CApp__WEBPACK_IMPORTED_MODULE_0__","_uq__WEBPACK_IMPORTED_MODULE_2__","_tuid__WEBPACK_IMPORTED_MODULE_4__","_query__WEBPACK_IMPORTED_MODULE_6__","_map__WEBPACK_IMPORTED_MODULE_7__","_form_viewModel__WEBPACK_IMPORTED_MODULE_10__","_formUI__WEBPACK_IMPORTED_MODULE_12__","_ControllerUq__WEBPACK_IMPORTED_MODULE_13__","_link__WEBPACK_IMPORTED_MODULE_15__","_icons__WEBPACK_IMPORTED_MODULE_16__","control_ControlBase","formView","renderControl","hasError","filled","validate","control_Control","face","setProps","element","Array","isArray","defaultValue","clearErrors","clearValue","isOK","getValueFromElement","rule","notes","buttonsControl_ButtonsControl","otherClick","onOther","readValues","nothing","btnOther","submitButton","otherButton","TxtRequired","charsControl_CharsControl","parseValue","lodash","classnames","form-control","has-success","is-invalid","is-valid","renderInput","stringControl_StringControl","ErrInvalidNumber","ErrMin","ErrMax","unknownControl_UnknownControl","role","unknownControl_EmptyControl","pickIdControl_PickIdControl","pick","fromPicked","onPicked","itemFromId","initCaption","String","controlContent","component","pickIdControl_decorate","pickTuidControl_PickTuidControl","onIdChanged","onFormValues","pickTuidControl_decorate","pickControl_PickControl","pickControl_awaiter","Content","pickControl_decorate","createControl","group","groupRow","createGroupControl","fieldRow","fieldType","defaultFaces","controls","createFieldControl","help","string","password","number","parseFloat","checkbox","trueValue","falseValue","checked","radiobox","selectedIndex","selectedOptions","pick-id","pick-tuid","textarea","int","dec","bool","ln","Entity","entities","typeId","fieldMaps","sys","sName","jName","tvApi","returns","schema","setSchema","buildFieldsTuid","buildFieldTuid","buildArrFieldsTuid","getTuid","arrName","fieldArr","an","buildFieldsParams","arrResult","pa","rowResult","packRow","packArr","charCodeAt","escape","unpackRow","unpackArr","ch0","fLen","to","vals","maxCacheSize","tuid_Tuid","queue","waitingIds","cache","buildIdBoxer","BoxId","prototype","defineProperty","writable","enumerable","getObj","getCacheValue","toJSON","idName","mainFields","mf","splice","_id","delete","defer","util","has","cacheTuids","moveToHead","shift","proxied","cacheValue","unpackTuidIds","api","getApiFrom","tuids","tuidIds","cacheTuidFieldValues","afterCacheId","cacheDivIds","tuidGet","divName","cacheFieldsInValue","arrValues","tuidDiv","getDiv","tuidSave","tuidSearch","tuidArrGet","tuidArrSave","tuidArrPos","showTuid","TuidMain","Main","TuidDiv","cacheIds","cApp","cUqFrm","getImportUq","cTuidMainFromName","action_Action","pack","sheet_Sheet","states","op","ops","actions","discription","appId","sheetSave","app","flow","sheetAction","brief","unpackSheet","flows","getSheet","getArchive","unpack","sheetArchive","sheetArchives","stateSheets","sheet_PageStateItems","stateSheetCount","s","count","mySheets","getStateSheets","query_Query","isPaged","more","hasMore","startField","buildParams","unpackReturns","$page","query","table","book_Book","queryApiName","history_History","map_Map","queries","newAction","newQuery","add","del","pending_Pending","fieldDefaultValue","entities_Entities","sheets","books","maps","histories","pendings","tuidArr","actionArr","sheetArr","queryArr","bookArr","mapArr","historyArr","pendingArr","loadIds","clearCacheTimer","accesses","buildEntities","loadEntities","buildTuids","buildAccess","div","tuidUrl","cacheTimer","newTuid","fromType","fromObj","book","pending","uqId","newBook","newMap","newHistory","newSheet","newPending","buildSheet","ownerField","af","bootstrapCreateRow","elementCreateRow","_control__WEBPACK_IMPORTED_MODULE_1__","RowContainer","cc","control","setInitValues","ElementRowContainer","BootStrapRowContainer","refetchApi","ApiBase","getHttpChannel","callFetch","TitleBar","logoutClick","_nav__WEBPACK_IMPORTED_MODULE_1__","showLogout","navChange","hasBack","href","debugLogout","rightView","b","nick","openWindow","DefaultRow","vQueryMain_VQueryMain","resetPage","loadPage","replacePage","pageResult","queryResult","again","renderExtra","rightClose","queryRow","vQuerySelect_VQuerySelect","vQuerySelect_awaiter","selectRow","vQuerySelect_QueryPageItems","cQuery_CQueryBase","cQuery_CQuery","VQueryMain","main","cQuery_CQuerySelect","VQuerySelect","ImageItemEdit","_itemEdit__WEBPACK_IMPORTED_MODULE_7__","overSize","upload","resUploader","resId","isChanged","_page__WEBPACK_IMPORTED_MODULE_6__","_resUploader__WEBPACK_IMPORTED_MODULE_3__","multiple","maxSize","border","padding","_image__WEBPACK_IMPORTED_MODULE_4__","_nav__WEBPACK_IMPORTED_MODULE_5__","mobx__WEBPACK_IMPORTED_MODULE_2__","Loading","ResUploader","files","fileInput","FormData","file","abortController","AbortController","signal","onFilesChange","_rule__WEBPACK_IMPORTED_MODULE_0__","_field__WEBPACK_IMPORTED_MODULE_1__","_face__WEBPACK_IMPORTED_MODULE_2__","_TonvaForm__WEBPACK_IMPORTED_MODULE_5__","FormView","buildRows","some","every","formRows","createRow","buildRow","buttonsRow","createButtons","_rowContainer__WEBPACK_IMPORTED_MODULE_4__","formRow","formRowCreator","_control__WEBPACK_IMPORTED_MODULE_3__","buttons","CApp","tonva_tools__WEBPACK_IMPORTED_MODULE_2__","cImportUqs","cUqCollection","tonva_react_form__WEBPACK_IMPORTED_MODULE_3__","onRowClick","selectUnitPage","appUnits","setSettings","tonvaApp","retErrors","promiseChecks","roleAppUI","buildRoleAppUI","uqUI","newCUq","checks","retError","roles","lodash__WEBPACK_IMPORTED_MODULE_1___default","getCUq","CUq","_uq__WEBPACK_IMPORTED_MODULE_4__","cUqArr","VAppMain","_centerApi__WEBPACK_IMPORTED_MODULE_5__","userAppUnits","showUnsupport","appUnit","loadUqs","clearPrevPages","showMainPage","renderView","userName","sheetTypeId","getCUqFromId","navSheet","appContent","appPage","entityIcons","react__WEBPACK_IMPORTED_MODULE_0___default","tonva_react_form__WEBPACK_IMPORTED_MODULE_1__","fixWidth","ControllerUq","centerApi","vMain_VSheetMain","newClick","schemaClick","archivesClick","sheetStateClick","renderState","badge","getStateLabel","templet","statesCount","filter","isDev","vNew_VSheetNew","vNew_awaiter","valuesWithBox","onSave","leftFlowStyle","width","vSheetView_VSheetView","flowRow","preState","sheetView","removed","sheetData","vEdit_VSheetEdit","vEdit_awaiter","saveSheet","controllers_form","vSheetAction_VSheetAction","actionClick","vSheetAction_awaiter","acted","deleteClick","editClick","editSheet","actionButtons","startButtons","no","stateLabel","getActionLabel","backPage","vSchema_VSheetSchema","schemaStringify","vArchives_VArchives","archiveClick","vArchives_awaiter","processing","archiveRow","getArchives","vList_VSheetList","rowClick","vList_awaiter","pageStateItems","listRow","stateName","vArchived_VArchived","vSheet_VSheet","vSaved_VSheetSaved","restart","vSaved_awaiter","vSheetProcessing_VSheetProcessing","cSheet_CSheet","cSheet_awaiter","showSaved","loadStateSheetCount","createPageStateItems","VSheetMain","onSheet","me","$","sheetActPreState","sheetActState","changeStateCount","curState","delta","stateCount","VSheetNew","sheetNew","VSheetSaved","sheetSaved","VSheetEdit","sheetEdit","VSheetSchema","VArchives","VArchived","VSheetList","VSheetAction","VSheetProcessing","showArchived","showAction","showProcessing","beforeStart","onEvent","getSheetData","vCall","inBrief","getArchived","getStateUI","actionName","sheetTitle","disc","vBookMain_VBookMain","cBook_CBook","VBookMain","vUq_VUq","isSysVisible","linkItem","cLink","lists","tuidLinks","mapLinks","sheetLinks","actionLinks","queryLinks","bookLinks","historyLinks","pendingLinks","Fragment","isVisible","controllers_link","cTuidMain","cMap","cSheet","cAction","cQuery","cBook","cHistory","cPending","lowerPropertyName","cUq_CUq","schemaLoaded","controllers_tuid","CTuidSelect","CTuidInfo","CQuery","CQuerySelect","CMap","CAction","CSheet","CBook","CHistory","controllers_history","CPending","baseUrl","loadEntites","collection","warn","tuidPlaceHolder","en","sheetFromTypeId","startSheet","entityName","entityType","cFromName","tUI","cEntity","getUI","VUq","vMain_VMapMain","itemRender","ItemRow","remove","valuesView","box","isLeaf","keyIndex","keyUI","keyUIs","keyContent","valuesContent","keyNone","addClick","removeClick","inputValues_VInputValues","onValuesSubmit","inputValues_awaiter","cMap_MapItem","cMap_CMap","cMap_awaiter","keysLen","keyFields","keysLast","idx","keyField","kn","searchParam","ki","searchOnKey","arr1","nullable","rowIndex","createItem","getLable","confirmDelete","template","v0","q","retFields","newItem","addItem","VMapMain","callParam","vHistoryMain_VHistoryMain","cHistory_CHistory","VHistoryMain","vActionMain_VActionMain","resultPage","mainPage","cAction_CAction","VActionMain","vPendingMain_VPendingMain","cPending_CPending","VPendingMain","ItemEdit","itemSchema","uiItem","internalStart","internalEnd","netToken","_uqApi__WEBPACK_IMPORTED_MODULE_0__","_wsChannel__WEBPACK_IMPORTED_MODULE_1__","userApi","_net__WEBPACK_IMPORTED_MODULE_0__","_user__WEBPACK_IMPORTED_MODULE_1__","account","verify","prop","left0","zero","num","fix","Controller","_net__WEBPACK_IMPORTED_MODULE_3__","onMessageReceive","onMessage","isLogined","unregisterReceiveHandler","receiveHandlerId","onDispose","vp","registerReceiveHandler","_resolve_$","View","VPage","_schema__WEBPACK_IMPORTED_MODULE_0__","_uiSchema__WEBPACK_IMPORTED_MODULE_1__","itemObservable","isFirst","loading","beforeLoad","loaded","allLoaded","firstSize","appendPosition","_items","mobx__WEBPACK_IMPORTED_MODULE_0__","topDiv","_uid__WEBPACK_IMPORTED_MODULE_1__","bottomDiv","setPageStart","unshift","reverse","CacheIds","maxCount","dict","Map","loadId","_loadIds","_loadId","TonvaForm","_formView__WEBPACK_IMPORTED_MODULE_2__","DropdownActions","handleDocumentClick","dropdownOpen","contains","menu","toggle","removeEventListener","isRight","hasIcon","data-toggle","aria-expanded","dropdown-menu","dropdown-menu-right","aria-hidden","EasyDate","now","nDate","getDate","_date","hour","getHours","minute","getMinutes","month","getMonth","hm","getFullYear","Media","disp","px","py","SearchBox","allowEmptySearch","inputSize","lab","inputClassName","buttonText","MultiStep","lodash__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_2__","_form__WEBPACK_IMPORTED_MODULE_3__","stepViews","topView","onPrev","onNext","stepName","steps","ButtonConten","prefix","btnContent","formProps","setStep","nextStepName","pIcon","sIcon","RuleCustom","func","RulePredefined","rules_RuleNum","minMsg","maxMsg","checkMore","integer","widget_Widget","context","fieldProps","contextErrors","onInputChange","changeValue","container","visible","inNode","requiredFlag","FieldContainer","getUiItem","removeErrorWidget","addErrorWidget","isChanging","initData","newValue","fromElement","onChanging","onChanged","prev","allowChange","setDataValue","setElementValue","fieldClass","FieldClass","uiLabel","Templet","errorList","tag","textWidget_TextWidget","onKeyDown","internalOnKeyDown","keyCode","onEnter","checkContextRules","removeErrors","renderTemplet","renderErrors","numberWidget_NumberWidget","updownWidget_UpdownWidget","returnValue","isValidKey","dateWidget_DateWidget","checkBoxWidget_CheckBoxWidget","defaultChecked","selectWidget_SelectWidget","option","selectWidget_decorate","idWidget_IdWidget","idWidget_awaiter","pickId","clearContextError","required-item","cursor-pointer","idWidget_decorate","Unknown","dataType","uiType","dataTypes","buttonWidget_ButtonWidget","buttonWidget_awaiter","onButtonClick","observerRender","widget","widgetType","ButtonClass","context_Context","uiSchema","isRow","widgets","errorWidgets","subContexts","arrRowContexts","itemName","getDisabled","setDisabled","getReadOnly","setReadOnly","getVisible","setVisible","checkFieldRules","clearContextErrors","rowContext","setContextError","checkHasError","context_decorate","rowKeySeed","RowContext","parentContext","arrSchema","uiArr","itemSchemas","parentData","FormContext","ContextContainer","ArrComponent","selectable","deletable","restorable","getArrRowContexts","arrLabel","ArrContainer","RowSeperator","formSelectable","formDeletable","formRestorable","arrSelectable","arrDeletable","arrRestorable","ac","rc","rs","sep","typeofTemplet","factory","selectCheck","deleteIcon","$isSelected","$source","isDeleted","$isDeleted","onDelClick","editContainer","deleted","row-selected","Provider","imageWidget_ImageWidget","imageWidget_awaiter","imageItemEdit","imageSrc","end","ui_image","imageWidget_decorate","widgetsFactory","datetime","time","email","updown","image","checkboxes","radio","range","typeWidget","getItemSchema","getTypeWidget","WidgetClass","formRes","zh","form_Form","watch","formData","calcSelectOrDelete","DefaultContainer","DefaultFieldContainer","fieldLabelSize","labelView","fieldCol","DefaultFieldClass","DefaultButtonClass","DefaultRes","ui_res","py-3","Container","formContext","initDataItem","arrItem","arrItems","arrDict","arrItemOperated","formArrVal","beforeShow","buttonName","contextType","Badge_Badge","badgeAlign","badgeVertical","LMR_LMR","cursor","LMR_decorate","FA_FA","spin","pull","pulse","rotate","flip","inverse","Muted","base_ListBase","pageItems","selectedItems","nextProps","clickable_Clickable","static_Static","selectable_Selectable","itemsArray","compare","_selectedItems","selected","labelId","si","buildItems","anySelected","onSelect","flex","marginBottom","htmlFor","selectable_decorate","list_List","listBase","nextState","nextContext","updateProps","isLoading","staticRow","list_decorate","PropRow","row_PropBorder","borderTop","row_PropGap","w","backgroundColor","valueAlignStart","valueAlignCenter","valueAlignEnd","row_LabeledPropRow","gridProps","bk","bg-white","renderLabel","renderProp","align","vAlign","col","full","alignValue","renderPropBody","renderPropContent","StringPropRow","NumberPropRow","row_ListPropRow","borderBottom","ComponentPropRow","propView_PropView","isGap","PropGrid_PropGrid","propView","stringItemEdit_StringItemEdit","edit_itemEdit","preValue","edit_Edit","defaultSepClassName","defaultRowContainerClassName","edit_awaiter","onItemChanged","onItemClick","itemEdit","createItemEdit","topBorderClassName","bottomBorderClassName","sepClassName","rowContainerClassName","topBorder","bottomBorder","elItems","divValue","listRow_ListRow","pressed","isIcon","noteNum","mid","viceSpan","vice","middle","midSize","unread","uv","va-action","listView_ListView","elHeader","itemClick","converter","ex","listItem","listView_decorate","Tab","_content","contentBuilder","tabs_Tabs","tabClick","selectedTab","tabBack","contentBack","notify","tabName","height","display","notifyCircle","userSetProp","FetchErrorView","reApi","_net__WEBPACK_IMPORTED_MODULE_1__","errContent","LocalData","Data","homeTabCur","module","exports","mainApi","toUser","fromUnit","fromApp","fellow","isOwner","isAdmin","apps","member","assigned","devApi","uqsText","service","admins_Admins","store","owners","admins","fellows","unitAdmins","ua","fellowId","unitSetAdmin","removeCur","admin","unitAddAdmin","dev_ObjItems","dev","_load","_save","_inc","_del","_dec","dev_decorate","dev_Apps","searchedUqs","saveApp","delApp","counts","searchUq","searchPageSize","allUqs","appBindUq","dev_Uqs","saveUq","delUq","dev_Buses","buses","saveBus","delBus","bus","dev_Servers","servers","saveServer","delServer","server","dev_Services","services","saveService","delService","changeServiceProp","db","db_type","connection","loadUqServices","SearchItems","dev_Dev","searchApp","searchServer","searchUqdb","cacheIds_CacheUnits","cacheIds_CacheUqs","cacheIds_CacheApps","cacheIds_CacheServers","store_Store","cacheUnits","cacheUqs","cacheApps","cacheServers","memberCount","roleApps","roleMember","roleMembers","memberRoles","unitChangeProp","unitApps","unitMemberCount","uqServer","uqBuilderUrl","unitDeleteApp","inUnit","unitAddApp","unitRoles","unitAddRole","unitRoleChangeProp","unitRoleApps","unitRoleSetApps","unitMembers","unitAssignMember","unitMemberRoles","rId","unitSetMemberRoles","org","store_decorate","store_store","NewFellow_NewFellowPage","onSendInvitation","NewFellow_awaiter","addNew","NewFellow","NewFellow_decorate","EditAdmin_EditAdmin","isRoot","Fellow","Administors_EditAdmin","EditAdmin_decorate","Administors_AdministorsPage","onNewOwner","newAdmin","onNewAdmin","ownersView","adminsView","onNewFellow","showOwners","showAdmins","Administors","Administors_decorate","idDates_IdDates","date_init","date_update","span","isLink","unitSpan_UnitSpan","unitSpan_UnitInfo","unitSpan_decorate","unitSpan_UnitName","consts_appIcon","appItemIcon","uqSpan_UqSpan","uqSpan_UqInfo","uqSpan_decorate","appSpan_AppSpan","appSpan_AppInfo","public","appSpan_decorate","apis","appSpan_AppRow","serverSpan_ServerSpan","serverSpan_ServerInfo","cloud","ip","serverSpan_decorate","stringValueEdit_StringValueEdit","stringValueEdit_awaiter","errorDiv","info","stringValueEdit_TextValueEdit","onTextAreaChange","idPickPage_IdPickPage","idPickPage_awaiter","candidateItems","searchPlaceHolder","idPickPage_decorate","info_Info","renderUqRow","uqAccess","act","info_awaiter","appActed","newInUnit","restoreUnitApp","stopUnitApp","newApp","addUnitApp","uqAccesses","faName","info_decorate","new_PageApps","new_NewApp","new_awaiter","appClick","renderApp","new_decorate","Apps_AppsPage","loadApps","ban","src_Apps","Apps_decorate","newRole_NewRole","newRole_awaiter","roleApps_RoleApps","renderRoleApp","memberPage_MemberPage","renderMemberRole","setRole","memberPage_SetRole","loadRoles","loadMemberRoles","orgValue","roleUser","onAssigned","roleClick","memberPage_decorate","setMemberRoles","selectRole","renderRole","roleSelect","membersPage_MembersPage","loadMembers","MemberRow","setRoleUser","roleId","membersPage_MemberSearch","renderMember","userClick","membersPage_decorate","members","rolePage_RolePage","roleAppClick","rolePage_RoleApps","loadRoleApps","rolePage_EditRole","onMembersClick","membersLeft","membersRight","editRole","addRoleApp","rolePage_decorate","roleChangeProp","isSysRole","onNameChanged","onDiscriptionChanged","setRoleApps","appSelect","midClassName","Members_Members","newRole","allUsersClick","Members_decorate","src_organization_ui","teamPerson","tonva_react_uq","_super","searchOnPost","querySelect","team","noStaff","staff","noPost","organization","teamPosts","CN","tuidNullCaption","arrNew","arrEdit","fromUser","subject","getMessage","newMessage","editSumbit","sectionTeam","teamOrganization","person","given","sur","gender","section","vOpBinding_VOpBinding","sheetOpsChanged","stateTosView","tosText","tos","organizationRow","teamRow","observableTeamRow","sectionRow","observableSectionRow","postRow","observablePostRow","stateView","vOpBinding_awaiter","saveOps","selectablePosts","teamsList","teams","defaultSelected","onPostSelectChanged","sections","onTeamSelectChanged","onSectionSelectChanged","organizations","posts","postTos","pid","pto","buildSelectablePost","buildSelectableTeams","teamTos","hasAllTeams","teamId","tto","teamTo0","teamTo0Sections","buildSelectableSections","teamTo","selectableTeam0","hasSection","selectableSection","selectableSections","stateTo","configable","stateClick","tosView","opTos","tosTexts","stateToName","toArr","sp","postId","teamCount","st","sectionCount","ss","sectionId","saveSheetStatePosts","vAllPosts_VAllPosts","onCheckChanged","def","saveChange","vAllPosts_awaiter","saveEntityOpForAll","pageRender","buttonSave","lineHeight","fontWeight","listStyleType","blocks","block","getEntityOpForAll","entityOpForAllResult","entityOpForAll","eaa","vAllPosts_decorate","vFullFunction_VFullFunction","users","onStopFully","vFullFunction_awaiter","onSumitStopFully","onCancelStop","_uq","_user","entityOpUserFully","callSearchUser","onUserSelected","renderUser","pageUsers","onSetFully","tuidUser","onCancelFully","renderSelectUser","usersView","vFullFunction_decorate","vSearchUser_VSearchUser","vSearchUser_PageUsers","onUserClick","vSearchUser_awaiter","cOpBinding_COpBinding","appRender","appView","appsView","cOpBinding_awaiter","entityPosts","opTo","postDict","teamDict","sectionDict","sheetClick","sheetClickOld","renderSetting","settingClick","V","uqRender","nameRender","sheetRender","buildPosts","buildAppsUqs","setUqEntities","queryAllTeams","organizationDict","tm","og","sec","lns","setEntities","setSheets","lines","actionSaveEntityOpPost","opName","organization_COrganization","links","organization_VOrganization","organization_awaiter","ServerCaption","editPage_schema","editPage_EditBasePage","editPage_awaiter","moreCandidates","pickServerId","renderServerInput","itemId","editPage_EditPage","editPage_NewPage","appsPage_AppsPage","appList","listRowClick","appRow","appUqs_SearchUqPage","appUqs_awaiter","onUq","getMyUqs","appUqs_decorate","appUqs_AppUqs","removeBind","btnProps","appUqs_Uqs","listHeader","btn","onBind","appPage_AppPage","editItem","appPage_awaiter","deleteItem","deleteApp","menuItems","btnAddUq","uqClick","elAccess","bind_access","uqBindPage_UqBindPage","accessChecked","saveUqBind","uqBindPage_awaiter","removeUqBind","btnDelete","checkAccessList","bc","apps_AppController","apps_awaiter","service_count","buildBindUqs","isNew","uaUq","apps_decorate","uqUpload_UqUpload","upFiles","fileClick","fr","FileReader","onload","uqUpload_UqPage","readAsText","onUpdate","uqUpload_awaiter","update","onUpdateThoroughly","lastModifiedDate","trunc","sz","thoroughly","uqUpload_CompileResult","fileList","fileRender","encType","compiled","doubleClick","pane","getParent","topIntoView","bottomIntoView","texts","seconds","abort","timeHandler","tagName","parentElement","clearTimeHandler","scrollIntoView","reader","getReader","pump","read","done","scrollToBottom","uintArray","encodedString","fromCharCode","apply","decodeURIComponent","uintToString","byteLength","onDoubleClick","wordWrap","whiteSpace","createIdPick","createIdPick_IdPickPage","newServicePage_ServerCaption","urlRow","serverRow","newServicePage_awaiter","dbTypeRow","dbRow","connectionRow","newServicePage_NewServicePage","bindId","tonvaForm","servicePage_ServicePage","onUrlChanged","servicePage_awaiter","changeProp","onDbChanged","onDbTypeChanged","onConnectionChanged","onDeleteClick","servicePage_decorate","editPage_formRows","uqs_editPage_EditBasePage","uqs_editPage_awaiter","uqs_editPage_EditPage","uqs_editPage_NewPage","uqPage_UQPage","uqPage_awaiter","deleteUq","onUqUpload","serviceClick","showNewServicePage","renderService","compile_time","compile","listPage_ListPage","uqList","uqs_UQController","uqs_awaiter","loadUqEntities","uqGetEntities","r0","svc","uqs_decorate","row_Row","buses_Info","buses_SchemaView","buses_decorate","repeated","idPickAppProps","services_awaiter","idPickUqProps","serviceTypeNames","bindIdField","services_urlRow","discriptionRow","services_serverRow","ObjView_ObjView","ObjView_Info","ObjView_New","ObjView_decorate","saveCur","stepHeader","ObjView_Edit","extraMenuActions","vApps_VApps","appUsers","appUsersList","onAppsClick","searchBox","vUsers_VUsers","userApps","userAppsList","searchUser","onUsersClick","vApp_VApp","curApp","curAppUsers","onAppEditUsers","vUser_VUser","curUser","curUserApps","onUserEditApps","vAppEditUsers_VAppEditUsers","appEditUsers","editUser","onUserChanged","vAppEditUsers_awaiter","bindAppUser","vUserEditApps_VUserEditApps","userEditApps","editApp","onAppChanged","vUserEditApps_awaiter","bindUserApp","VAddUser_VAddUser","onSearchFocus","divUser","onAddUser","VAddUser_awaiter","userFromKey","addUser","addedPage","onAddApps","onContinueAddUser","VAddUser_decorate","cUsers_UsersController","onAppUsers","cUsers_awaiter","loadAppUsers","onUserApps","loadUserApps","unitOneAppUsers","unitOneUserApps","unitAppEditUsers","unitUserEditApps","unitAddUser","appIcon","userIcon","unitAppUsers","coll","unitUsers","cUsers_decorate","Admin_CAdmin","userAdminUnits","adminUnits","loadUnit","isProduction","loadAdminUnits","Admin_VAdmin","noUnitPage","Admin_awaiter","Admin_AdminPage","rArrow","typeCaptions","1","2","3","appsAction","usersAction","newUsersAction","adminsAction","cOrganization","organizeAction","noneAction","objProps","P","loadCounts","devItems","Admin_UnitProps","Admin_decorate","src_App_0","cAdmin","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","react_dom","URL","origin","response","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.02944b77.chunk.js","sourcesContent":["export {left0} from './left0';\r\nexport * from './user';\r\nexport * from './net';\r\nexport * from './ui';\r\nexport * from './uid';\r\nexport {PageItems} from './pageItems';\r\nexport {CacheIds} from './cacheIds';\r\nexport * from './entry';\r\n\r\n","export * from './form';\r\nexport * from './list';\r\nexport * from './dropDownActions';\r\nexport * from './easyDate';\r\nexport * from './propGrid';\r\nexport * from './components';\r\nexport * from './media';\r\nexport * from './listView';\r\nexport * from './searchBox';\r\nexport * from './multiStep';\r\nexport * from './uid';\r\n","import * as React from 'react';\r\nimport { Controller, VPage, View } from 'tonva-tools';\r\nimport { Entity, Field, TuidMain } from '../entities';\r\nimport { CUq } from './uq/cUq';\r\nimport { VForm, FieldInputs, FieldCall, FormOptions, FormMode } from './form';\r\nimport { CQuerySelect } from './query';\r\nimport { FormUI, FieldTuidUI } from './formUI';\r\nimport { entityIcons } from './icons';\r\nimport { ControllerUq } from './ControllerUq';\r\n\r\nexport interface EntityUI {\r\n    form?: FormUI;\r\n}\r\n\r\nexport abstract class CEntity<T extends Entity, UI extends EntityUI> extends ControllerUq {\r\n    constructor(cUq: CUq, entity: T, ui: UI, res: any) {\r\n        super(cUq, res);\r\n        Object.setPrototypeOf(this.x, cUq.x);\r\n        let {name, typeName} = entity;\r\n        this.entity = entity;\r\n        this.ui = ui; // || entityUI.ui;\r\n        this.label = this.res.label || name;\r\n        this.icon = entityIcons[typeName];\r\n    }\r\n    readonly entity: T;\r\n    readonly ui: UI;\r\n\r\n    protected async beforeStart():Promise<boolean> {\r\n        //if (await super.beforeStart() === false) return false;\r\n        await this.entity.loadSchema();\r\n        return true;\r\n    }\r\n\r\n    createForm(onSubmit:()=>Promise<void>, values?:any, mode?:FormMode) {\r\n        let options = this.buildFormOptions(mode);\r\n        let ret = new VForm(options, onSubmit);\r\n        ret.setValues(values);\r\n        return ret;\r\n    }\r\n\r\n    private buildFormOptions(mode?:FormMode):FormOptions {\r\n        let {fields, arrFields} = this.entity;\r\n        let none, submitCaption, arrNewCaption, arrEditCaption, arrTitleNewButton;\r\n        if (this.res !== undefined) {\r\n            none = this.res['none'];\r\n            submitCaption = this.res['submit'];\r\n            arrNewCaption = this.res['arrNew'];\r\n            arrEditCaption = this.res['arrEdit'];\r\n            arrTitleNewButton = this.res['arrTitleNewButton'];\r\n        }\r\n        if (none === undefined) {\r\n            none = this.cUq.res['none'] || 'none';\r\n        }\r\n        if (submitCaption === undefined)\r\n            submitCaption = this.cUq.res['submit'] || 'Submit';\r\n        if (arrNewCaption === undefined)\r\n            arrNewCaption = this.cUq.res['arrNew'] || 'New';\r\n        if (arrEditCaption === undefined)\r\n            arrEditCaption = this.cUq.res['arrEdit'] || 'Edit';\r\n        if (arrTitleNewButton === undefined)\r\n        arrTitleNewButton = this.cUq.res['arrTitleNewButton'];\r\n        if (mode === undefined) mode = FormMode.new;\r\n        let formUI = this.ui.form;\r\n        let ret:FormOptions = {\r\n            fields: fields,\r\n            arrs: arrFields,\r\n            ui: formUI,\r\n            res: this.res || {},\r\n            inputs: this.buildInputs(formUI),\r\n            none: none,\r\n            submitCaption: submitCaption,\r\n            arrNewCaption: arrNewCaption,\r\n            arrEditCaption: arrEditCaption,\r\n            arrTitleNewButton: arrTitleNewButton,\r\n            mode: mode,\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private buildInputs(formUI: FormUI):FieldInputs {\r\n        let {fields, arrFields} = this.entity;\r\n        let ret:FieldInputs = {};\r\n        this.buildFieldsInputs(ret, fields, undefined, formUI);\r\n        if (arrFields !== undefined) {\r\n            for (let arr of arrFields) {\r\n                let {name, fields} = arr;\r\n                let items = formUI && formUI.items;\r\n                this.buildFieldsInputs(ret, fields, name, items && items[name] as FormUI);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private buildFieldsInputs(ret:FieldInputs, fields:Field[], arr:string, formUI: FormUI) {\r\n        if (arr !== undefined) {\r\n            let arrFieldInputs = ret[arr];\r\n            if (arrFieldInputs === undefined) {\r\n                ret[arr] = arrFieldInputs = {};\r\n                ret = arrFieldInputs;\r\n            }\r\n        }\r\n        for (let field of fields) {\r\n            let {name, _tuid} = field;\r\n            if (_tuid === undefined) continue;\r\n            let fieldUI = formUI && formUI.items && formUI.items[name] as FieldTuidUI;\r\n            ret[name] = {\r\n                select: this.buildSelect(field, arr, fieldUI),\r\n                content: this.buildContent(field, arr),\r\n                placeHolder: this.cUq.getTuidPlaceHolder(_tuid),\r\n            };\r\n        }\r\n    }\r\n\r\n    protected buildSelect(field:Field, arr:string, fieldUI: FieldTuidUI):FieldCall {\r\n        return async (form:VForm, field:Field, values:any):Promise<any> => {\r\n            let {_tuid, _ownerField} = field;\r\n            let cTuidSelect = await (_tuid as TuidMain).cSelectFrom();\r\n            let param:any = undefined;\r\n            if (_ownerField !== undefined) param = form.getValue(_ownerField.name);\r\n            if (fieldUI && fieldUI.autoList === true) {\r\n                console.log('select search set param=empty string');\r\n                param = '';\r\n            }\r\n            let ret = await cTuidSelect.call(param);\r\n            cTuidSelect.removeCeased(); // 清除已经废弃的顶部页面\r\n            if (ret === undefined) return undefined;\r\n            let id = cTuidSelect.idFromItem(ret);\r\n            _tuid.useId(id);\r\n            return id;\r\n        };\r\n    }\r\n\r\n    protected buildContent(field:Field, arr:string): React.StatelessComponent<any> {\r\n        return;\r\n    }\r\n\r\n    cQuerySelect(queryName:string):CQuerySelect {\r\n        return this.cUq.cQuerySelect(queryName);\r\n    }\r\n}\r\n\r\nexport abstract class VEntity<T extends Entity, UI extends EntityUI, C extends CEntity<T, UI>> extends VPage<C> {\r\n    protected readonly entity: T;\r\n    protected readonly ui: UI;\r\n    constructor(controller: C) {\r\n        super(controller);\r\n        this.entity = controller.entity;\r\n        this.ui = controller.ui;\r\n    }\r\n\r\n    get label():string {return this.controller.label}\r\n\r\n    //private _form_$: VForm;\r\n    protected createForm(onSubmit:()=>Promise<void>, values?:any, mode?:FormMode): VForm {\r\n        //if (this._form_$ !== undefined) return this._form_$;\r\n        return this.controller.createForm(onSubmit, values, mode);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable, has} from 'mobx';\r\nimport {User, Guest/*, UserInNav*/} from '../user';\r\nimport {Page} from './page';\r\nimport {netToken} from '../net/netToken';\r\nimport FetchErrorView from './fetchErrorView';\r\nimport {FetchError} from '../fetchError';\r\nimport {appUrl, setAppInFrame, logoutUqTokens, getExHash, getExHashPos} from '../net/appBridge';\r\nimport {LocalData} from '../local';\r\nimport {guestApi, logoutApis, setCenterUrl, setCenterToken, WSChannel, appInFrame, isDevelopment, host} from '../net';\r\nimport { WsBase, wsBridge } from '../net/wsChannel';\r\nimport { resOptions } from './res';\r\nimport { Loading } from './loading';\r\n\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport '../css/va-form.css';\r\nimport '../css/va.css';\r\nimport '../css/animation.css';\r\n\r\nconst regEx = new RegExp('Android|webOS|iPhone|iPad|' +\r\n    'BlackBerry|Windows Phone|'  +\r\n    'Opera Mini|IEMobile|Mobile' , \r\n    'i');\r\nconst isMobile = regEx.test(navigator.userAgent);\r\nexport const mobileHeaderStyle = isMobile? {\r\n    minHeight:  '3em'\r\n} : undefined;\r\n\r\nconst logo = require('../img/logo.svg');\r\nlet logMark: number;\r\nconst logs:string[] = [];\r\n\r\nexport interface Props //extends React.Props<Nav>\r\n{\r\n    //view: JSX.Element | (()=>JSX.Element);\r\n    //start?: ()=>Promise<void>;\r\n    onLogined: ()=>Promise<void>;\r\n    notLogined?: ()=>Promise<void>;\r\n};\r\nlet stackKey = 1;\r\nexport interface StackItem {\r\n    key: number;\r\n    view: JSX.Element;\r\n    ceased: boolean;\r\n    confirmClose?: ()=>Promise<boolean>;\r\n    disposer?: ()=>void;\r\n}\r\nexport interface State {\r\n    stack: StackItem[];\r\n    wait: 0|1|2;\r\n    fetchError: FetchError\r\n}\r\n\r\nexport class NavView extends React.Component<Props, State> {\r\n    private stack: StackItem[];\r\n    private htmlTitle: string;\r\n    private waitCount: number = 0;\r\n    private waitTimeHandler?: NodeJS.Timer;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.back = this.back.bind(this);\r\n        this.navBack = this.navBack.bind(this);\r\n        this.stack = [];\r\n        this.state = {\r\n            stack: this.stack,\r\n            wait: 0,\r\n            fetchError: undefined\r\n        };\r\n    }\r\n    async componentWillMount() {\r\n        window.addEventListener('popstate', this.navBack);\r\n    }\r\n\r\n    async componentDidMount()\r\n    {\r\n        nav.set(this);\r\n        /*\r\n        let start = this.props.start;\r\n        if (start !== undefined) {\r\n            await start();\r\n        }\r\n        else {\r\n        */\r\n            await nav.start();\r\n        //}\r\n    }\r\n\r\n    get level(): number {\r\n        return this.stack.length;\r\n    }\r\n\r\n    startWait() {\r\n        if (this.waitCount === 0) {\r\n            this.setState({wait: 1});\r\n            this.waitTimeHandler = global.setTimeout(\r\n                () => {\r\n                    this.waitTimeHandler = undefined;\r\n                    this.setState({wait: 2});\r\n                },\r\n                1000) as NodeJS.Timer;\r\n        }\r\n        ++this.waitCount;\r\n        this.setState({\r\n            fetchError: undefined,\r\n        });\r\n    }\r\n\r\n    endWait() {\r\n        setTimeout(() => {\r\n            /*\r\n            this.setState({\r\n                fetchError: undefined,\r\n            });*/\r\n            --this.waitCount;\r\n            if (this.waitCount === 0) {\r\n                if (this.waitTimeHandler !== undefined) {\r\n                    clearTimeout(this.waitTimeHandler);\r\n                    this.waitTimeHandler = undefined;\r\n                }\r\n                this.setState({wait: 0});\r\n            }\r\n        },100);\r\n    }\r\n\r\n    async onError(fetchError: FetchError)\r\n    {\r\n        let err = fetchError.error;\r\n        if (err !== undefined && err.unauthorized === true) {\r\n            await nav.showLogin(undefined);\r\n            return;\r\n        }\r\n        this.setState({\r\n            fetchError: fetchError,\r\n        });\r\n    }\r\n\r\n    show(view: JSX.Element, disposer?: ()=>void): number {\r\n        this.clear();\r\n        return this.push(view, disposer);\r\n    }\r\n\r\n    push(view: JSX.Element, disposer?: ()=>void): number {\r\n        this.removeCeased();\r\n        if (this.stack.length > 0) {\r\n            window.history.pushState('forward', null, null);\r\n        }\r\n        let key = stackKey++;\r\n        this.stack.push({\r\n            key: key,\r\n            view: view, \r\n            ceased: false,\r\n            disposer: disposer\r\n        });\r\n        this.refresh();\r\n        //console.log('push: %s pages', this.stack.length);\r\n        return key;\r\n    }\r\n\r\n    replace(view: JSX.Element, disposer?: ()=>void): number {\r\n        let item:StackItem = undefined;\r\n        let stack = this.stack;\r\n        if (stack.length > 0) {\r\n            item = stack.pop();\r\n            //this.popAndDispose();\r\n        }\r\n        let key = stackKey++;\r\n        this.stack.push({\r\n            key: key, \r\n            view: view, \r\n            ceased: false,\r\n            disposer: disposer\r\n        });\r\n        if (item !== undefined) this.dispose(item.disposer);\r\n        this.refresh();\r\n        //console.log('replace: %s pages', this.stack.length);\r\n        return key;\r\n    }\r\n\r\n    ceaseTop(level:number = 1) {\r\n        let p = this.stack.length - 1;\r\n        for (let i=0; i<level; i++, p--) {\r\n            if (p < 0) break;\r\n            let item = this.stack[p];\r\n            item.ceased = true;\r\n        }\r\n    }\r\n\r\n    pop(level:number = 1) {\r\n        let stack = this.stack;\r\n        let len = stack.length;\r\n        //console.log('pop start: %s pages level=%s', len, level);\r\n        if (level <= 0 || len <= 1) return;\r\n        if (len < level) level = len;\r\n        let backLevel = 0;\r\n        for (let i = 0; i < level; i++) {\r\n            if (stack.length === 0) break;\r\n            //stack.pop();\r\n            this.popAndDispose();\r\n            ++backLevel;\r\n        }\r\n        if (backLevel >= len) backLevel--;\r\n        this.refresh();\r\n        if (this.isHistoryBack !== true) {\r\n            //window.removeEventListener('popstate', this.navBack);\r\n            //window.history.back(backLevel);\r\n            //window.addEventListener('popstate', this.navBack);\r\n        }\r\n        //console.log('pop: %s pages', stack.length);\r\n    }\r\n\r\n    popTo(key: number) {\r\n        if (key === undefined) return;\r\n        if (this.stack.find(v => v.key === key) === undefined) return;\r\n        while (this.stack.length >0) {\r\n            let len = this.stack.length;\r\n            let top = this.stack[len-1];\r\n            if (top.key === key) break;\r\n            this.pop();\r\n        }\r\n    }\r\n\r\n    topKey():number {\r\n        let len = this.stack.length;\r\n        if (len === 0) return undefined;\r\n        return this.stack[len-1].key;\r\n    }\r\n\r\n    removeCeased() {\r\n        for (;;) {\r\n            let p=this.stack.length-1;\r\n            if (p < 0) break;\r\n            let top = this.stack[p];\r\n            if (top.ceased === false) break;\r\n            let item = this.stack.pop();\r\n            let {disposer} = item;\r\n            this.dispose(disposer);\r\n        }\r\n        this.refresh();\r\n    }\r\n\r\n    private popAndDispose() {\r\n        this.removeCeased();\r\n        let item = this.stack.pop();\r\n        if (item === undefined) return;\r\n        let {disposer} = item;\r\n        this.dispose(disposer);\r\n        this.removeCeased();\r\n        return item;\r\n    }\r\n\r\n    private dispose(disposer:()=>void) {\r\n        if (disposer === undefined) return;\r\n        let item = this.stack.find(v => v.disposer === disposer);\r\n        if (item === undefined) disposer();\r\n    }\r\n\r\n    clear() {\r\n        let len = this.stack.length;\r\n        while (this.stack.length > 0) this.popAndDispose();\r\n        //this.refresh();\r\n        if (len > 1) {\r\n            //window.removeEventListener('popstate', this.navBack);\r\n            //window.history.back(len-1);\r\n            //window.addEventListener('popstate', this.navBack);\r\n        }\r\n    }\r\n\r\n    regConfirmClose(confirmClose:()=>Promise<boolean>) {\r\n        let stack = this.stack;\r\n        let len = stack.length;\r\n        if (len === 0) return;\r\n        let top = stack[len-1];\r\n        top.confirmClose = confirmClose;\r\n    }\r\n\r\n    private isHistoryBack:boolean = false;\r\n    navBack() {\r\n        nav.log('backbutton pressed - nav level: ' + this.stack.length);\r\n        this.isHistoryBack = true;\r\n        this.back(true);\r\n        this.isHistoryBack = false;\r\n    }\r\n\r\n    async back(confirm:boolean = true) {\r\n        let stack = this.stack;\r\n        let len = stack.length;\r\n        if (len === 0) return;\r\n        if (len === 1) {\r\n            if (self != window.top) {\r\n                window.top.postMessage({type:'pop-app'}, '*');\r\n            }\r\n            return;\r\n        }\r\n        let top = stack[len-1];\r\n        if (confirm===true && top.confirmClose) {\r\n            if (await top.confirmClose()===true) this.pop();\r\n        }\r\n        else {\r\n            this.pop();\r\n        }\r\n    }\r\n\r\n    confirmBox(message?:string): boolean {\r\n        return window.confirm(message);\r\n    }\r\n    clearError = () => {\r\n        this.setState({fetchError: undefined});\r\n    }\r\n    render() {\r\n        const {wait, fetchError} = this.state;\r\n        let stack = this.state.stack;\r\n        let top = stack.length - 1;\r\n        let elWait = null, elError = null;\r\n        switch (wait) {\r\n            case 1:\r\n                elWait = <li className=\"va-wait va-wait1\">\r\n                </li>;\r\n                break;\r\n            case 2:\r\n                elWait = <li className=\"va-wait va-wait2\">\r\n                    <Loading />\r\n                </li>;\r\n                break;\r\n                //<i className=\"fa fa-spinner fa-spin fa-3x fa-fw\"></i>\r\n                //<span className=\"sr-only\">Loading...</span>\r\n        }\r\n        if (fetchError)\r\n            elError = <FetchErrorView clearError={this.clearError} {...fetchError} />\r\n        return (\r\n        <ul className='va'>\r\n            {\r\n                stack.map((item, index) => {\r\n                    let {key, view} = item;\r\n                    return <li key={key} style={index<top? {visibility: 'hidden'}:undefined}>\r\n                        {view}\r\n                    </li>\r\n                })\r\n            }\r\n            {elWait}\r\n            {elError}\r\n        </ul>\r\n        );\r\n    }\r\n\r\n    private refresh() {\r\n        // this.setState({flag: !this.state.flag});\r\n        this.setState({stack: this.stack });\r\n        // this.forceUpdate();\r\n    }\r\n}\r\n\r\nexport interface NavSettings {\r\n    loginTop?: JSX.Element;\r\n}\r\n\r\nexport class Nav {\r\n    private nav:NavView;\r\n    private ws: WsBase;\r\n    private wsHost: string;\r\n    private local: LocalData = new LocalData();\r\n    private navSettings: NavSettings;\r\n    @observable user: User/*InNav*/ = undefined;\r\n    language: string;\r\n    culture: string;\r\n    resUrl: string;\r\n\r\n    constructor() {\r\n        let {lang, district} = resOptions;\r\n        this.language = lang;\r\n        this.culture = district;\r\n    }\r\n\r\n    get guest(): number {\r\n        let guest = this.local.guest;\r\n        if (guest === undefined) return 0;\r\n        let g = guest.get();\r\n        if (g === undefined) return 0;\r\n        return g.guest;\r\n    }\r\n\r\n    set(nav:NavView) {\r\n        //this.logo = logo;\r\n        this.nav = nav;\r\n    }\r\n\r\n    registerReceiveHandler(handler: (message:any)=>Promise<void>):number {\r\n        if (this.ws === undefined) return;\r\n        return this.ws.onWsReceiveAny(handler);\r\n    }\r\n\r\n    unregisterReceiveHandler(handlerId:number) {\r\n        if (this.ws === undefined) return;\r\n        if (handlerId === undefined) return;\r\n        this.ws.endWsReceive(handlerId);\r\n    }\r\n\r\n    async onReceive(msg:any) {\r\n        if (this.ws === undefined) return;\r\n        await this.ws.receive(msg);\r\n    }\r\n\r\n    private async getPredefinedUnitName() {\r\n        try {\r\n            let unitRes = await fetch('unit.json', {});\r\n            //if (unitRes)\r\n            let res = await unitRes.json();\r\n            return res.unit;\r\n        }\r\n        catch (err) {\r\n            this.local.unit.clear();\r\n            return;\r\n        }\r\n    }\r\n\r\n    private async loadPredefinedUnit() {\r\n        let unitName:string;\r\n        let unit = this.local.unit.get();\r\n        if (unit !== undefined) {\r\n            if (isDevelopment !== true) return unit.id;\r\n            unitName = await this.getPredefinedUnitName();\r\n            if (unitName === undefined) return;\r\n            if (unit.name === unitName) return unit.id;\r\n        }\r\n        else {\r\n            unitName = await this.getPredefinedUnitName();\r\n            if (unitName === undefined) return;\r\n        }\r\n        let unitId = await guestApi.unitFromName(unitName);\r\n        if (unitId !== undefined) {\r\n            this.local.unit.set({id: unitId, name: unitName});\r\n        }\r\n        return unitId;\r\n    }\r\n\r\n    setSettings(settings?: NavSettings) {\r\n        this.navSettings = settings;\r\n    }\r\n\r\n    hashParam: string;\r\n    private centerHost: string;\r\n    async start() {\r\n        try {\r\n            let hash = document.location.hash;\r\n            if (hash !== undefined && hash.length > 0) {\r\n                let pos = getExHashPos();\r\n                if (pos < 0) pos = undefined;\r\n                this.hashParam = hash.substring(1, pos);\r\n            }\r\n            nav.clear();\r\n            this.startWait();\r\n            await host.start();\r\n            let {url, ws, resHost} = host;\r\n            this.centerHost = url;\r\n            this.resUrl = 'http://' + resHost + '/res/';\r\n            this.wsHost = ws;\r\n            setCenterUrl(url);\r\n            \r\n            let guest:Guest = this.local.guest.get();\r\n            if (guest === undefined) {\r\n                guest = await guestApi.guest();\r\n            }\r\n            nav.setGuest(guest);\r\n\r\n            let exHash = getExHash();\r\n            let appInFrame = setAppInFrame(exHash);\r\n            if (exHash !== undefined && window !== window.parent) {\r\n                // is in frame\r\n                if (appInFrame !== undefined) {\r\n                    this.ws = wsBridge;\r\n                    console.log('this.ws = wsBridge in sub frame');\r\n                    //nav.user = {id:0} as User;\r\n                    if (self !== window.parent) {\r\n                        window.parent.postMessage({type:'sub-frame-started', hash: appInFrame.hash}, '*');\r\n                    }\r\n                    // 下面这一句，已经移到 appBridge.ts 里面的 initSubWin，也就是响应从main frame获得user之后开始。\r\n                    //await this.showAppView();\r\n                    return;\r\n                }\r\n            }\r\n\r\n            let predefinedUnit = await this.loadPredefinedUnit();\r\n            appInFrame.predefinedUnit = predefinedUnit;\r\n\r\n            let user: User = this.local.user.get();\r\n            if (user === undefined) {\r\n                let {notLogined} = this.nav.props;\r\n                if (notLogined !== undefined) {\r\n                    await notLogined();\r\n                }\r\n                else {\r\n                    await nav.showLogin(undefined);\r\n                }\r\n                return;\r\n            }\r\n\r\n            await nav.logined(user);\r\n        }\r\n        catch (err) {\r\n        }\r\n        finally {\r\n            this.endWait();\r\n        }\r\n    }\r\n\r\n    async showAppView() {\r\n        let {onLogined} = this.nav.props;\r\n        if (onLogined === undefined) {\r\n            nav.push(<div>NavView has no prop onLogined</div>);\r\n            return;\r\n        }\r\n        nav.clear();\r\n        await onLogined();\r\n        console.log('logined: AppView shown');\r\n    }\r\n\r\n    setGuest(guest: Guest) {\r\n        this.local.guest.set(guest);\r\n        netToken.set(0, guest.token);\r\n    }\r\n\r\n    saveLocalUser() {\r\n        this.local.user.set(this.user);\r\n    }\r\n\r\n    async logined(user: User, callback?: (user:User)=>Promise<void>) {\r\n        logoutApis();\r\n        let ws:WSChannel = this.ws = new WSChannel(this.wsHost, user.token);\r\n        ws.connect();\r\n\r\n        console.log(\"logined: %s\", JSON.stringify(user));\r\n        this.user = user;\r\n        this.saveLocalUser();\r\n        netToken.set(user.id, user.token);\r\n        if (callback !== undefined) //this.loginCallbacks.has)\r\n            callback(user);\r\n            //this.loginCallbacks.call(user);\r\n        else {\r\n            await this.showAppView();\r\n        }\r\n    }\r\n\r\n    loginTop(defaultTop:JSX.Element) {\r\n        return (this.navSettings && this.navSettings.loginTop) || defaultTop;\r\n    }\r\n\r\n    async showLogin(callback?: (user:User)=>Promise<void>, withBack?:boolean) {\r\n        let lv = await import('../entry/login');\r\n        let loginView = <lv.default \r\n            withBack={withBack} \r\n            callback={callback} />;\r\n        if (withBack !== true) {\r\n            this.nav.clear();\r\n            this.pop();\r\n        }\r\n        this.nav.push(loginView);\r\n    }\r\n\r\n    async showLogout(callback?: ()=>Promise<void>) {\r\n        nav.push(<Page header=\"安全退出\" back=\"close\">\r\n            <div className=\"m-5 border border-info bg-white rounded p-3 text-center\">\r\n                <div>退出当前账号不会删除任何历史数据，下次登录依然可以使用本账号</div>\r\n                <div className=\"mt-3\">\r\n                    <button className=\"btn btn-danger\" onClick={()=>this.logout(callback)}>退出</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n    }\r\n\r\n    async logout(callback?:()=>Promise<void>) { //notShowLogin?:boolean) {\r\n        appInFrame.unit = undefined;\r\n        this.local.logoutClear();\r\n        this.user = undefined; //{} as User;\r\n        logoutApis();\r\n        let guest = this.local.guest.get();\r\n        setCenterToken(0, guest && guest.token);\r\n        this.ws = undefined;\r\n        /*\r\n        if (this.loginCallbacks.has)\r\n            this.logoutCallbacks.call();\r\n        else {\r\n            if (notShowLogin === true) return;\r\n        }\r\n        await nav.start();\r\n        */\r\n        if (callback === undefined)\r\n            await nav.start();\r\n        else\r\n            await callback();\r\n    }\r\n\r\n    async changePassword() {\r\n        let cp = await import('../entry/changePassword');\r\n        nav.push(<cp.ChangePasswordPage />);\r\n    }\r\n\r\n    get level(): number {\r\n        return this.nav.level;\r\n    }\r\n    startWait() {\r\n        this.nav.startWait();\r\n    }\r\n    endWait() {\r\n        this.nav.endWait();\r\n    }\r\n    async onError(error: FetchError) {\r\n        await this.nav.onError(error);\r\n    }\r\n    show (view: JSX.Element, disposer?: ()=>void): void {\r\n        this.nav.show(view, disposer);\r\n    }\r\n    push(view: JSX.Element, disposer?: ()=>void): void {\r\n        this.nav.push(view, disposer);\r\n    }\r\n    replace(view: JSX.Element, disposer?: ()=>void): void {\r\n        this.nav.replace(view, disposer);\r\n    }\r\n    pop(level:number = 1) {\r\n        this.nav.pop(level);\r\n    }\r\n    topKey():number {\r\n        return this.nav.topKey();\r\n    }\r\n    popTo(key:number) {\r\n        this.nav.popTo(key);\r\n    }\r\n    clear() {\r\n        this.nav.clear();\r\n    }\r\n    navBack() {\r\n        this.nav.navBack();\r\n    }\r\n    ceaseTop(level?:number) {\r\n        this.nav.ceaseTop(level);\r\n    }\r\n    removeCeased() {\r\n        this.nav.removeCeased();\r\n    }\r\n    async back(confirm:boolean = true) {\r\n        await this.nav.back(confirm);\r\n    }\r\n    regConfirmClose(confirmClose: ()=>Promise<boolean>) {\r\n        this.nav.regConfirmClose(confirmClose);\r\n    }\r\n    confirmBox(message?:string): boolean {\r\n        return this.nav.confirmBox(message);\r\n    }\r\n    async navToApp(url: string, unitId: number, apiId?:number, sheetType?:number, sheetId?:number):Promise<void> {\r\n        return new Promise<void>((resolve, reject) => {\r\n            let sheet = this.centerHost.includes('http://localhost:') === true? 'sheet_debug':'sheet'\r\n            let uh = sheetId === undefined?\r\n                    appUrl(url, unitId) :\r\n                    appUrl(url, unitId, sheet, [apiId, sheetType, sheetId]);\r\n            console.log('navToApp: %s', JSON.stringify(uh));\r\n            nav.push(<article className='app-container'>\r\n                <span id={uh.hash} onClick={()=>this.back()} style={mobileHeaderStyle}>\r\n                    <i className=\"fa fa-arrow-left\" />\r\n                </span>\r\n                <iframe src={uh.url} />\r\n            </article>, \r\n            ()=> {\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n\r\n    navToSite(url: string) {\r\n        // show in new window\r\n        window.open(url);\r\n    }\r\n\r\n    get logs() {return logs};\r\n    log(msg:string) {\r\n        logs.push(msg);\r\n    }\r\n    logMark() {\r\n        let date = new Date();\r\n        logMark = date.getTime();\r\n        logs.push('log-mark: ' + date.toTimeString());\r\n    }\r\n    logStep(step:string) {\r\n        logs.push(step + ': ' + (new Date().getTime() - logMark));\r\n    }\r\n}\r\nexport const nav: Nav = new Nav();\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { jsonStringify } from '../../tools';\r\n\r\nexport type TypeViewModel = typeof ViewModel;\r\nexport type TypeView = React.StatelessComponent<{vm: ViewModel, className?:string|string[]}>;\r\nexport type TypeContent = React.StatelessComponent<any>;\r\n\r\nexport abstract class ViewModel {\r\n    protected abstract get view(): TypeView;\r\n    render(className?:string|string[]):JSX.Element {\r\n        if (this.view === undefined) return <div>??? viewModel 必须定义 view ???</div>\r\n        return React.createElement(this.view, {vm: this, className:className});\r\n    }\r\n}\r\n\r\nexport const PureJSONContent = (values, x?:any) => <>content: {jsonStringify(values)}</>;\r\nexport const JSONContent = observer(PureJSONContent);\r\nexport const RowContent = \r\n    (values) => <div className=\"px-3 py-2\">{jsonStringify(values)}</div>\r\n;\r\n","import { decodeGuestToken } from '../user';\r\nimport { CenterApi } from './uqApi';\r\n\r\nexport class GuestApi extends CenterApi {\r\n    async guest(): Promise<any> {\r\n        //let guest = nav.local.guest.get();\r\n        let ret = await this.get('', {});\r\n        switch (typeof ret) {\r\n            default: return;\r\n            case 'string': return decodeGuestToken(ret);\r\n            case 'object':\r\n                let guest = decodeGuestToken(ret.token);\r\n                return guest;\r\n        }\r\n    }\r\n\r\n    async unitFromName(unitName:string): Promise<number> {\r\n        let ret = await this.get(unitName);\r\n        return ret && ret.unit;\r\n    }\r\n}\r\n\r\nexport const guestApi = new GuestApi('tv/guest/', undefined);\r\n","export {WSChannel, wsBridge, postWsToTop} from './wsChannel';\r\nexport * from './apiBase';\r\nexport * from './guestApi';\r\nexport * from './uqApi';\r\nexport {appInFrame, isBridged, getExHash} from './appBridge';\r\nexport * from './host';\r\nexport {httpGet} from './httpChannel';\r\n","function replacer(key:string, value:any) {\r\n    let first = key.substr(0, 1);\r\n    switch (first) {\r\n        default: return value;\r\n        case '$':\r\n        case '_': return;\r\n    }\r\n}\r\n\r\nexport function jsonStringify(value:any) {\r\n    return JSON.stringify(value, replacer, ' ');\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { BoxId, Tuid } from \"../entities\";\r\nimport { PureJSONContent } from '../controllers';\r\n\r\ntype TvTemplet = (values?:any, x?:any) => JSX.Element;\r\n\r\ninterface Props {\r\n    tuidValue: number|BoxId, \r\n    ui?: TvTemplet,\r\n    x?: any,\r\n    nullUI?: ()=>JSX.Element\r\n}\r\n\r\nfunction boxIdContent(bi: number|BoxId, ui:TvTemplet, x:any) {\r\n    if (typeof bi === 'number') return <>{bi}</>;\r\n    let {id, _$tuid, _$com} = bi as BoxId;\r\n    let t:Tuid = _$tuid;\r\n    if (t === undefined) {\r\n        if (ui !== undefined) return ui(bi, x);\r\n        return PureJSONContent(bi, x);\r\n    }\r\n    let com = ui || _$com;\r\n    if (com === undefined) {\r\n        com = bi._$com = t.getTuidContent();\r\n    }\r\n    let val = t.valueFromId(id);\r\n    if (typeof val === 'number') val = {id: val};\r\n    if (ui !== undefined) {\r\n        let ret = ui(val, x);\r\n        if (ret !== undefined) return ret;\r\n        return <>{id}</>;\r\n    }\r\n    return React.createElement(com, val);\r\n}\r\n\r\nconst Tv = observer(({tuidValue, ui, x, nullUI}:Props) => {\r\n    let ttv = typeof tuidValue;\r\n    switch (ttv) {\r\n        default:\r\n            if (ui === undefined)\r\n                return <>{ttv}-{tuidValue}</>;\r\n            else {\r\n                let ret = ui(tuidValue, x);\r\n                if (ret !== undefined) return ret;\r\n                return <>{tuidValue}</>;\r\n            }\r\n        case 'undefined':\r\n            break;\r\n        case 'object':\r\n            if (tuidValue !== null) return boxIdContent(tuidValue, ui, x);\r\n            break;\r\n        case 'number':\r\n            return <>id...{tuidValue}</>;\r\n    }       \r\n    if (nullUI === undefined) return <>.</>;\r\n    return nullUI();\r\n});\r\n\r\nexport const tv = (tuidValue:number|BoxId, ui?:TvTemplet, x?:any, nullUI?:()=>JSX.Element):JSX.Element => {\r\n    return <Tv tuidValue={tuidValue} ui={ui} x={x} nullUI={nullUI} />;\r\n};\r\n","export * from './jsonStringify';\r\nexport * from './tv';\r\n","export * from './nav';\r\nexport * from './titleBar';\r\nexport * from './page';\r\nexport * from './VM';\r\nexport * from './schema';\r\nexport * from './form';\r\nexport * from './edit';\r\nexport * from './res';\r\nexport * from './tabs';\r\nexport * from './loading';\r\nexport * from './image';\r\nexport * from './resUploader';","import _ from 'lodash';\r\nimport {nav} from '../ui';\r\nimport {uid} from '../uid';\r\nimport {uqTokenApi as uqTokenApi, callCenterapi, CenterAppApi, AppUq, centerToken, App, setCenterToken} from './uqApi';\r\nimport {setSubAppWindow} from './wsChannel';\r\nimport { host } from './host';\r\n\r\nexport interface UqToken {\r\n    name: string;\r\n    url: string;\r\n    urlDebug: string;\r\n    token: string;\r\n}\r\ninterface UqTokenAction extends UqToken {\r\n    resolve: (value?: UqToken | PromiseLike<UqToken>) => void;\r\n    reject: (reason?: any) => void;\r\n}\r\nconst uqTokens:{[uqName:string]: UqTokenAction}  = {};\r\nexport function logoutUqTokens() {\r\n    for (let i in uqTokens) uqTokens[i] = undefined;\r\n}\r\n\r\nexport interface AppInFrame {\r\n    hash: string;\r\n    unit: number;       // unit id\r\n    page?: string;\r\n    param?: string[];\r\n    predefinedUnit?: number;  // 比如像Cart这样的应用，直接让用户访问的，就需要在unit.json里面定义unitName\r\n}\r\nconst appsInFrame:{[key:string]:AppInFrame} = {};\r\n\r\nclass AppInFrameClass implements AppInFrame {\r\n    hash: string;\r\n    private _unit: number;\r\n    get unit(): number {return this._unit;}       // unit id\r\n    set unit(val:number) { this._unit=val;}\r\n    page?: string;\r\n    param?: string[];\r\n}\r\n\r\nexport let appInFrame:AppInFrame = new AppInFrameClass();\r\n/* {\r\n    hash: undefined,\r\n    get unit():number {return } undefined, //debugUnitId,\r\n    page: undefined;\r\n    param: undefined,\r\n}*/\r\n\r\nexport function isBridged():boolean {\r\n    return self !== window.parent;\r\n}\r\n\r\nwindow.addEventListener('message', async function(evt) {\r\n    var message = evt.data;\r\n    switch (message.type) {\r\n        case 'sub-frame-started':\r\n            subFrameStarted(evt);\r\n            break;\r\n        case 'ws':\r\n            //wsBridge.receive(message.msg);\r\n            await nav.onReceive(message.msg);\r\n            break;\r\n        case 'init-sub-win':\r\n            await initSubWin(message);\r\n            break;\r\n        case 'pop-app':\r\n            nav.navBack();\r\n            break;\r\n        case 'center-api':\r\n            await callCenterApiFromMessage(evt.source as Window, message);\r\n            break;\r\n        case 'center-api-return':\r\n            bridgeCenterApiReturn(message);\r\n            break;\r\n        case 'app-api':\r\n            console.log(\"receive PostMessage: %s\", JSON.stringify(message));\r\n            let ret = await onReceiveAppApiMessage(message.hash, message.apiName);\r\n            console.log(\"onReceiveAppApiMessage: %s\", JSON.stringify(ret));\r\n            (evt.source as Window).postMessage({\r\n                type: 'app-api-return', \r\n                apiName: message.apiName,\r\n                url: ret.url,\r\n                urlDebug: ret.urlDebug,\r\n                token: ret.token} as any, \"*\");\r\n            break;\r\n        case 'app-api-return':\r\n            console.log(\"app-api-return: %s\", JSON.stringify(message));\r\n            console.log('await onAppApiReturn(message);');\r\n            await onAppApiReturn(message);\r\n            break;\r\n        default:\r\n            this.console.log('message: %s', JSON.stringify(message));\r\n            break;\r\n    }\r\n});\r\n\r\nfunction subFrameStarted(evt:any) {\r\n    var message = evt.data;\r\n    let subWin = evt.source as Window;\r\n    setSubAppWindow(subWin);\r\n    hideFrameBack(message.hash);\r\n    let msg:any = _.clone(nav.user);\r\n    msg.type = 'init-sub-win';\r\n    subWin.postMessage(msg, '*');\r\n}\r\nfunction hideFrameBack(hash:string) {\r\n    let el = document.getElementById(hash);\r\n    if (el !== undefined) el.hidden = true;\r\n}\r\nasync function initSubWin(message:any) {\r\n    console.log('initSubWin: set nav.user', message);\r\n    let user = nav.user = message; // message.user;\r\n    setCenterToken(user.id, user.token);\r\n    await nav.showAppView();\r\n}\r\nasync function onReceiveAppApiMessage(hash: string, apiName: string): Promise<UqToken> {\r\n    let appInFrame = appsInFrame[hash];\r\n    if (appInFrame === undefined) return {name:apiName, url:undefined, urlDebug:undefined, token:undefined};\r\n    let {unit, predefinedUnit} = appInFrame;\r\n    let parts = apiName.split('/');\r\n    let ret = await uqTokenApi.uq({unit: unit||predefinedUnit, uqOwner: parts[0], uqName: parts[1]});\r\n    if (ret === undefined) {\r\n        console.log('apiTokenApi.api return undefined. api=%s, unit=%s', apiName, unit);\r\n        throw 'api not found';\r\n    }\r\n    return {name: apiName, url: ret.url, urlDebug:ret.urlDebug, token: ret.token};\r\n}\r\n\r\nasync function onAppApiReturn(message:any) {\r\n    let {apiName, url, urlDebug, token} = message;\r\n    let action = uqTokens[apiName];\r\n    if (action === undefined) {\r\n        throw 'error app api return';\r\n        //return;\r\n    }\r\n    let realUrl = host.getUrlOrDebug(url, urlDebug);\r\n    console.log('onAppApiReturn(message:any): url=' + url + ', debug=' + urlDebug + ', real=' + realUrl);\r\n    action.url = realUrl;\r\n    action.token = token;\r\n    action.resolve(action);\r\n}\r\n\r\nexport function setAppInFrame(appHash: string):AppInFrame {\r\n    if (appHash) {\r\n        let parts = appHash.split('-');\r\n        let len = parts.length;\r\n        if (len > 0) {\r\n            let p = 1;\r\n            appInFrame.hash = parts[p++];\r\n            if (len>0) appInFrame.unit = Number(parts[p++]);\r\n            if (len>1) appInFrame.page = parts[p++];\r\n            if (len>2) appInFrame.param = parts.slice(p++);\r\n        }\r\n    }\r\n    return appInFrame;\r\n}\r\n\r\nexport function getExHashPos():number {\r\n    let hash = document.location.hash;\r\n    if (hash !== undefined && hash.length > 0) {\r\n        let pos = hash.lastIndexOf('#tv-');\r\n        if (pos < 0) pos = hash.lastIndexOf('#tvdebug-');\r\n        return pos;\r\n    }\r\n    return -1;\r\n}\r\n\r\nexport function getExHash():string {\r\n    let pos = getExHashPos();\r\n    if (pos < 0) return undefined;\r\n    return document.location.hash.substring(pos);\r\n}\r\n\r\nexport function appUrl(url: string, unitId: number, page?:string, param?:any[]):{url:string; hash:string} {\r\n    let u:string;\r\n    for (;;) {\r\n        u = uid();\r\n        let a = appsInFrame[u];\r\n        if (a === undefined) {\r\n            appsInFrame[u] = {hash:u, unit:unitId};\r\n            break;\r\n        }\r\n    }\r\n    url += '#tv-' + u + '-' + unitId;\r\n    if (page !== undefined) {\r\n        url += '-' + page;\r\n        if (param !== undefined) {\r\n            for (let i=0; i<param.length; i++) {\r\n                url += '-' + param[i];\r\n            }\r\n        }\r\n    }\r\n    return {url: url, hash: u};\r\n}\r\n\r\nexport async function appUq(uq:string, uqOwner:string, uqName:string): Promise<UqToken> {\r\n    let uqToken = uqTokens[uq];\r\n    if (uqToken !== undefined) return uqToken;\r\n    if (!isBridged()) {\r\n        let {unit, predefinedUnit} = appInFrame;\r\n        uqToken = await uqTokenApi.uq({unit: unit || predefinedUnit, uqOwner:uqOwner, uqName:uqName});\r\n        if (uqToken === undefined) {\r\n            let err = 'unauthorized call: uqTokenApi center return undefined!';\r\n            throw err;\r\n        }\r\n        if (uqToken.token === undefined) uqToken.token = centerToken;\r\n        let {url, urlDebug} = uqToken;\r\n        let realUrl = host.getUrlOrDebug(url, urlDebug);\r\n        console.log('realUrl: %s', realUrl);\r\n        uqToken.url = realUrl;\r\n        uqTokens[uq] = uqToken;\r\n        return uqToken;\r\n    }\r\n    console.log(\"appApi parent send: %s\", appInFrame.hash);\r\n    uqToken = {\r\n        name: uq,\r\n        url: undefined,\r\n        urlDebug: undefined,\r\n        token: undefined,\r\n        resolve: undefined,\r\n        reject: undefined,\r\n    };\r\n    uqTokens[uq] = uqToken;\r\n    return new Promise<UqToken>((resolve, reject) => {\r\n        uqToken.resolve = async (at) => {\r\n            let a = await at;\r\n            console.log('return from parent window: %s', JSON.stringify(a));\r\n            uqToken.url = a.url;\r\n            uqToken.urlDebug = a.urlDebug;\r\n            uqToken.token = a.token;\r\n            resolve(uqToken);\r\n        }\r\n        uqToken.reject = reject;\r\n        (window.opener || window.parent).postMessage({\r\n            type: 'app-api',\r\n            apiName: uq,\r\n            hash: appInFrame.hash,\r\n        }, \"*\");\r\n    });\r\n}\r\n\r\ninterface BridgeCenterApi {\r\n    id: string;\r\n    resolve: (value?:any)=>any;\r\n    reject: (reason?:any)=>void;\r\n}\r\nconst brideCenterApis:{[id:string]: BridgeCenterApi} = {};\r\nexport async function bridgeCenterApi(url:string, method:string, body:any):Promise<any> {\r\n    console.log('bridgeCenterApi: url=%s, method=%s', url, method);\r\n    return await new Promise<any>(async (resolve, reject) => {\r\n        let callId:string;\r\n        for (;;) {\r\n            callId = uid();\r\n            let bca = brideCenterApis[callId];\r\n            if (bca === undefined) {\r\n                brideCenterApis[callId] = {\r\n                    id: callId,\r\n                    resolve: resolve,\r\n                    reject: reject,\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        (window.opener || window.parent).postMessage({\r\n            type: 'center-api',\r\n            callId: callId,\r\n            url: url,\r\n            method: method,\r\n            body: body\r\n        }, '*');\r\n    });\r\n}\r\n\r\nasync function callCenterApiFromMessage(from:Window, message):Promise<void> {\r\n    let {callId, url, method, body} = message;\r\n    let result = await callCenterapi.directCall(url, method, body);\r\n    from.postMessage({\r\n        type: 'center-api-return',\r\n        callId: callId,\r\n        result: result,\r\n    }, '*');\r\n}\r\n\r\nfunction bridgeCenterApiReturn(message:any) {\r\n    let {callId, result} = message;\r\n    let bca = brideCenterApis[callId];\r\n    if (bca === undefined) return;\r\n    brideCenterApis[callId] = undefined;\r\n    bca.resolve(result);\r\n}\r\n","import {nav} from '../ui/nav';\r\nimport {FetchError} from '../fetchError';\r\n\r\nexport interface HttpChannelUI {\r\n    startWait():void;\r\n    endWait():void;\r\n    showError(error:FetchError):Promise<void>;\r\n}\r\n\r\nexport class HttpChannelNavUI implements HttpChannelUI {\r\n    startWait() {\r\n        nav.startWait();\r\n    }\r\n    endWait() {\r\n        nav.endWait();\r\n    }\r\n    async showError(error:FetchError):Promise<void> {\r\n        nav.endWait();\r\n        /*\r\n        if (error.name === 'SyntaxError') {\r\n            error = {\r\n                name: error.name,\r\n                message: error.message,\r\n            }\r\n        }*/\r\n        await nav.onError(error);\r\n    }\r\n}\r\n\r\n","import _ from 'lodash';\r\nimport {HttpChannel} from './httpChannel';\r\nimport {HttpChannelUI, HttpChannelNavUI} from './httpChannelUI';\r\nimport {appUq, appInFrame, logoutUqTokens} from './appBridge';\r\nimport {ApiBase} from './apiBase';\r\nimport { host } from './host';\r\nimport { nav } from '../ui';\r\n\r\nlet channelUIs:{[name:string]: HttpChannel} = {};\r\nlet channelNoUIs:{[name:string]: HttpChannel} = {};\r\n\r\nexport function logoutApis() {\r\n    channelUIs = {};\r\n    channelNoUIs = {};\r\n    logoutUnitxApis();\r\n    logoutUqTokens();\r\n}\r\n\r\ninterface UqLocal {\r\n    value: any;\r\n    tick?: number;\r\n    isNet?: boolean;\r\n}\r\ninterface UqLocals {\r\n    user: number;\r\n    unit: number;\r\n    uqs: {[uq:string]: UqLocal};\r\n}\r\n\r\nconst uqLocalEntities = 'uqLocalEntities';\r\nclass CacheUqLocals {\r\n    private local:UqLocals;\r\n\r\n    async loadAccess(uqApi: UqApi):Promise<any> {\r\n        try {\r\n            let {uqOwner, uqName} = uqApi;\r\n            if (this.local === undefined) {\r\n                let ls = localStorage.getItem(uqLocalEntities);\r\n                if (ls !== null) {\r\n                    this.local = JSON.parse(ls);\r\n                }\r\n            }\r\n            if (this.local !== undefined) {\r\n                let {user, uqs} = this.local;\r\n                if (user !== loginedUserId || uqs === undefined) {\r\n                    this.local = undefined;\r\n                }\r\n                else {\r\n                    for (let i in uqs) {\r\n                        let ul = uqs[i];\r\n                        ul.isNet = undefined;\r\n                    }\r\n                }\r\n            }\r\n            if (this.local === undefined) {\r\n                this.local = {\r\n                    user: loginedUserId,\r\n                    unit: undefined,\r\n                    uqs: {}\r\n                };\r\n            }\r\n\r\n            let ret: any;\r\n            let un = uqOwner+'/'+uqName;\r\n            let uq = this.local.uqs[un];\r\n            if (uq !== undefined) {\r\n                let {value} = uq;\r\n                ret = value;\r\n            }\r\n            if (ret === undefined) {\r\n                ret = await uqApi.__loadAccess();\r\n                this.saveLocal(un, ret);\r\n            }\r\n            return _.cloneDeep(ret);\r\n        }\r\n        catch (err) {\r\n            this.local = undefined;\r\n            localStorage.removeItem(uqLocalEntities);\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    private saveLocal(uqName:string, accessValue: any) {\r\n        this.local.uqs[uqName] = {\r\n            value: accessValue,\r\n            isNet: true,\r\n        }\r\n        let str = JSON.stringify(this.local);\r\n        localStorage.setItem(uqLocalEntities, str);\r\n    }\r\n\r\n    async checkAccess(uqApi: UqApi):Promise<boolean> {\r\n        let {uqOwner, uqName} = uqApi;\r\n        let un = uqOwner+'/'+uqName;\r\n        let uq = this.local.uqs[un];\r\n        if (uq === undefined) return false;\r\n        let {isNet, value} = uq;\r\n        if (isNet === true) return true;\r\n        let ret = await uqApi.__loadAccess();\r\n        let isMatch = _.isMatch(value, ret);\r\n        if (isMatch === false) {\r\n            this.saveLocal(un, ret);\r\n            return false;\r\n        }\r\n        uq.isNet = true;\r\n        return true;\r\n    }\r\n}\r\n\r\nconst localUqs = new CacheUqLocals;\r\nexport class UqApi extends ApiBase {\r\n    private access:string[];\r\n    uqOwner: string;\r\n    uqName: string;\r\n    uq: string;\r\n\r\n    constructor(basePath: string, uqOwner: string, uqName: string, access:string[], showWaiting?: boolean) {\r\n        super(basePath, showWaiting);\r\n        if (uqName) {\r\n            this.uqOwner = uqOwner;\r\n            this.uqName = uqName;\r\n            this.uq = uqOwner + '/' + uqName;\r\n        }\r\n        this.access = access;\r\n        this.showWaiting = showWaiting;\r\n    }\r\n\r\n    protected async getHttpChannel(): Promise<HttpChannel> {\r\n        let channels: {[name:string]: HttpChannel};\r\n        let channelUI: HttpChannelNavUI;\r\n        if (this.showWaiting === true || this.showWaiting === undefined) {\r\n            channels = channelUIs;\r\n            channelUI = new HttpChannelNavUI();\r\n        }\r\n        else {\r\n            channels = channelNoUIs;\r\n        }\r\n        let channel = channels[this.uq];\r\n        if (channel !== undefined) return channel;\r\n        let uqToken = await appUq(this.uq, this.uqOwner, this.uqName);\r\n        this.token = uqToken.token;\r\n        channel = new HttpChannel(false, uqToken.url, uqToken.token, channelUI);\r\n        return channels[this.uq] = channel;\r\n    }\r\n\r\n\r\n    async update():Promise<string> {\r\n        return await this.get('update');\r\n    }\r\n\r\n    async __loadAccess():Promise<any> {\r\n        let acc = this.access === undefined?\r\n            '' :\r\n            this.access.join('|');\r\n        let ret = await this.get('access', {acc:acc});\r\n        return ret;\r\n    }\r\n\r\n    async loadAccess():Promise<any> {\r\n        return await localUqs.loadAccess(this);\r\n    }\r\n\r\n    async loadEntities():Promise<any> {\r\n        return await this.get('entities');\r\n    }\r\n\r\n    async checkAccess():Promise<boolean> {\r\n        return await localUqs.checkAccess(this);\r\n    }\r\n\r\n    async schema(name:string):Promise<any> {\r\n        return await this.get('schema/' + name);\r\n    }\r\n\r\n    async schemas(names:string[]):Promise<any[]> {\r\n        return await this.post('schema', names);\r\n    }\r\n\r\n    async tuidGet(name:string, id:number):Promise<any> {\r\n        return await this.get('tuid/' + name + '/' + id);\r\n    }\r\n\r\n    async tuidGetAll(name:string):Promise<any[]> {\r\n        return await this.get('tuid-all/' + name + '/');\r\n    }\r\n\r\n    async tuidSave(name:string, params):Promise<any> {\r\n        return await this.post('tuid/' + name, params);\r\n    }\r\n\r\n    async tuidSearch(name:string, arr:string, owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        let ret = await this.post('tuids/' + name, {\r\n            arr: arr,\r\n            owner: owner,\r\n            key: key,\r\n            pageStart: pageStart,\r\n            pageSize: pageSize\r\n        });\r\n        return ret;\r\n    }\r\n    async tuidArrGet(name:string, arr:string, owner:number, id:number):Promise<any> {\r\n        return await this.get('tuid-arr/' + name + '/' + owner + '/' + arr + '/' + id);\r\n    }\r\n    async tuidArrGetAll(name:string, arr:string, owner:number):Promise<any[]> {\r\n        return await this.get('tuid-arr-all/' + name + '/' + owner + '/' + arr + '/');\r\n    }\r\n    async tuidArrSave(name:string, arr:string, owner:number, params):Promise<any> {\r\n        return await this.post('tuid-arr/' + name + '/' + owner + '/' + arr + '/', params);\r\n    }\r\n    async tuidArrPos(name:string, arr:string, owner:number, id:number, order:number):Promise<any> {\r\n        return await this.post('tuid-arr-pos/' + name + '/' + owner + '/' + arr + '/', {\r\n            id: id,\r\n            $order: order\r\n        });\r\n    }\r\n\r\n    async tuidIds(name:string, arr:string, ids:number[]):Promise<any[]> {\r\n        try {\r\n            let url = 'tuidids/' + name + '/';\r\n            if (arr !== undefined) url += arr;\r\n            else url += '$';\r\n            let ret = await this.post(url, ids);\r\n            return ret;\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    async proxied(name:string, proxy:string, id:number):Promise<any> {\r\n        try {\r\n            let url = 'tuid-proxy/' + name + '/' + proxy + '/' + id;\r\n            let ret = await this.get(url);\r\n            return ret;\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    async sheetSave(name:string, data:object):Promise<any> {\r\n        return await this.post('sheet/' + name, data);\r\n    }\r\n\r\n    async sheetAction(name:string, data:object) {\r\n        return await this.put('sheet/' + name, data);\r\n    }\r\n\r\n    async stateSheets(name:string, data:object) {\r\n        return await this.post('sheet/' + name + '/states', data);\r\n    }\r\n\r\n    async stateSheetCount(name:string):Promise<any> {\r\n        return await this.get('sheet/' + name + '/statecount');\r\n    }\r\n\r\n    async mySheets(name:string, data:object) {\r\n        return await this.post('sheet/' + name + '/my-sheets', data);\r\n    }\r\n\r\n    async getSheet(name:string, id:number):Promise<any> {\r\n        return await this.get('sheet/' + name + '/get/' + id);\r\n    }\r\n\r\n    async sheetArchives(name:string, data:object):Promise<any> {\r\n        return await this.post('sheet/' + name + '/archives', data);\r\n    }\r\n\r\n    async sheetArchive(name:string, id:number):Promise<any> {\r\n        return await this.get('sheet/' + name + '/archive/' + id);\r\n    }\r\n\r\n    async action(name:string, data:object):Promise<any> {\r\n        return await this.post('action/' + name, data);\r\n    }\r\n\r\n    async page(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\r\n        let p:any;\r\n        switch (typeof params) {\r\n            case 'undefined': p = {key: ''}; break;\r\n            default: p = _.clone(params); break;\r\n        }\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        return await this.post('query-page/' + name, p);\r\n    }\r\n\r\n    async query(name:string, params:any):Promise<any> {\r\n        let ret = await this.post('query/' + name, params);\r\n        return ret;\r\n    }\r\n/*\r\n    async history(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\r\n        let p = _.clone(params);\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        let ret = await this.post('history/' + name, p);\r\n        return ret;\r\n    }\r\n\r\n    async book(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\r\n        let p = _.clone(params);\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        let ret = await this.post('history/' + name, p);\r\n        return ret;\r\n    }\r\n*/\r\n    async user():Promise<any> {\r\n        return await this.get('user');\r\n    }\r\n}\r\n\r\nlet channels:{[unitId:number]: HttpChannel} = {};\r\n\r\nexport function logoutUnitxApis() {\r\n    channels = {};\r\n}\r\n\r\nexport class UnitxApi extends UqApi {\r\n    private unitId:number;\r\n    constructor(unitId:number) {\r\n        super('tv/', undefined, undefined, undefined, true);\r\n        this.unitId = unitId;\r\n    }\r\n\r\n    protected async getHttpChannel(): Promise<HttpChannel> {\r\n        let channel = channels[this.unitId];\r\n        if (channel !== undefined) return channel;\r\n        return channels[this.unitId] = await this.buildChannel();\r\n    }\r\n\r\n    private async buildChannel():Promise<HttpChannel> {\r\n        let channelUI = new HttpChannelNavUI();\r\n        let centerAppApi = new CenterAppApi('tv/', undefined);\r\n        let ret = await centerAppApi.unitxUq(this.unitId);\r\n        let {token, url, urlDebug} = ret;\r\n        let realUrl = host.getUrlOrDebug(url, urlDebug);\r\n        this.token = token;\r\n        return new HttpChannel(false, realUrl, token, channelUI);\r\n    }\r\n}\r\n\r\nlet centerHost:string;\r\n\r\nexport function setCenterUrl(url:string) {\r\n    console.log('setCenterUrl %s', url);\r\n    centerHost = url;\r\n    centerToken = undefined;\r\n    centerChannel = undefined;\r\n    centerChannelUI = undefined;\r\n}\r\n\r\nexport let centerToken:string|undefined = undefined;\r\n\r\nlet loginedUserId:number = 0;\r\nexport function setCenterToken(userId:number, t?:string) {\r\n    loginedUserId = userId;\r\n    centerToken = t;\r\n    console.log('setCenterToken %s', t);\r\n    centerChannel = undefined;\r\n    centerChannelUI = undefined;\r\n}\r\n\r\nlet centerChannelUI:HttpChannel;\r\nlet centerChannel:HttpChannel;\r\nfunction getCenterChannelUI():HttpChannel {\r\n    if (centerChannelUI !== undefined) return centerChannelUI;\r\n    return centerChannelUI = new HttpChannel(true, centerHost, centerToken, new HttpChannelNavUI());\r\n}\r\nfunction getCenterChannel():HttpChannel {\r\n    if (centerChannel !== undefined) return centerChannel;\r\n    return centerChannel = new HttpChannel(true, centerHost, centerToken);\r\n}\r\n\r\nexport abstract class CenterApi extends ApiBase {\r\n    constructor(path: string, showWaiting?: boolean) {\r\n        super(path, showWaiting);\r\n    }\r\n\r\n    protected async getHttpChannel(): Promise<HttpChannel> {\r\n        return (this.showWaiting === true || this.showWaiting === undefined)?\r\n            getCenterChannelUI():\r\n            getCenterChannel();\r\n    }\r\n}\r\n\r\nconst uqTokens = 'uqTokens';\r\nexport class UqTokenApi extends CenterApi {\r\n    private local: UqLocals;\r\n    async uq(params: {unit:number, uqOwner:string, uqName:string}):Promise<any> {\r\n        try {\r\n            let {unit:unitParam, uqOwner, uqName} = params;\r\n            if (this.local === undefined) {\r\n                let ls = localStorage.getItem(uqTokens);\r\n                if (ls !== null) {\r\n                    this.local = JSON.parse(ls);\r\n                }\r\n            }\r\n            if (this.local !== undefined) {\r\n                let {unit, user} = this.local;\r\n                if (unit !== unitParam || user !== loginedUserId) this.local = undefined;\r\n            }\r\n            if (this.local === undefined) {\r\n                this.local = {\r\n                    user: loginedUserId,\r\n                    unit: params.unit,\r\n                    uqs: {}\r\n                };\r\n            }\r\n\r\n            let un = uqOwner+'/'+uqName;\r\n            let nowTick = new Date().getTime();\r\n            let uq = this.local.uqs[un];\r\n            if (uq !== undefined) {\r\n                let {tick, value} = uq;\r\n                if ((nowTick - tick) < 24*3600*1000) {\r\n                    return _.clone(value);\r\n                }\r\n            }\r\n            let ret = await this.get('app-uq', params);\r\n            this.local.uqs[un] = {\r\n                tick: nowTick,\r\n                value: ret,\r\n            }\r\n            localStorage.setItem(uqTokens, JSON.stringify(this.local));\r\n            return _.clone(ret);\r\n        }\r\n        catch (err) {\r\n            this.local = undefined;\r\n            localStorage.removeItem(uqTokens);\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport const uqTokenApi = new UqTokenApi('tv/tie/', undefined);\r\n\r\nexport class CallCenterApi extends CenterApi {\r\n    directCall(url:string, method:string, body:any):Promise<any> {\r\n        return this.call(url, method, body);\r\n    }\r\n}\r\nexport const callCenterapi = new CallCenterApi('', undefined);\r\n\r\nexport interface App {\r\n    id: number;\r\n    uqs: AppUq[];\r\n}\r\n\r\nexport interface AppUq {\r\n    id: number;\r\n    uqOwner: string;\r\n    uqName: string;\r\n    access: string;\r\n}\r\n\r\nexport interface UqService {\r\n    id: number;\r\n    url: string;\r\n    urlDebug: string;\r\n    token: string;\r\n}\r\n\r\nconst appUqs = 'appUqs';\r\n\r\nexport class CenterAppApi extends CenterApi {\r\n    private cachedUqs: App;\r\n    async uqs(appOwner:string, appName:string):Promise<App> {\r\n        let ret:any;\r\n        let ls = localStorage.getItem(appUqs);\r\n        if (ls !== null) {\r\n            let rLs = JSON.parse(ls);\r\n            let {appOwner:rAppOwner, appName:rAppName, value} = rLs;\r\n            if (appOwner === rAppOwner && appName === rAppName) ret = value;\r\n        }\r\n        if (ret === undefined) {\r\n            ret = await this.uqsPure(appOwner, appName);\r\n            let obj = {\r\n                appOwner:appOwner, \r\n                appName:appName, \r\n                value: ret,\r\n            }\r\n            localStorage.setItem(appUqs, JSON.stringify(obj));\r\n        }\r\n        return this.cachedUqs = _.cloneDeep(ret);\r\n    }\r\n    private async uqsPure(appOwner:string, appName:string):Promise<App> {\r\n        return await this.get('tie/app-uqs', {appOwner:appOwner, appName:appName});\r\n    }\r\n    async checkUqs(appOwner:string, appName:string):Promise<boolean> {\r\n        let ret = await this.uqsPure(appOwner, appName);\r\n        let {id:cachedId, uqs:cachedUqs} = this.cachedUqs;\r\n        let {id:retId, uqs:retUqs} = ret;\r\n        if (cachedId !== retId) return false;\r\n        if (cachedUqs.length !== retUqs.length) return false;\r\n        let len = cachedUqs.length;\r\n        for (let i=0; i<len; i++) {\r\n            if (_.isMatch(cachedUqs[i], retUqs[i]) === false) return false;\r\n        }\r\n        return true;\r\n    }\r\n    async unitxUq(unit:number):Promise<UqService> {\r\n        return await this.get('tie/unitx-uq', {unit:unit});\r\n    }\r\n    async changePassword(param: {orgPassword:string, newPassword:string}) {\r\n        return await this.post('tie/reset-password', param);\r\n    }\r\n}\r\n\r\nexport async function loadAppUqs(appOwner:string, appName:string): Promise<App> {\r\n    let centerAppApi = new CenterAppApi('tv/', undefined);\r\n    //let unit = meInFrame.unit;\r\n    let ret = await centerAppApi.uqs(appOwner, appName);\r\n    centerAppApi.checkUqs(appOwner, appName).then(v => {\r\n        if (v === false) {\r\n            localStorage.removeItem(appUqs);\r\n            nav.start();\r\n        }\r\n    });\r\n    return ret;\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Controller } from 'tonva-tools';\r\n\r\nexport abstract class Link {\r\n    abstract onClick: () => void;\r\n    abstract render(className?:string):JSX.Element;\r\n}\r\n\r\nexport class CLink extends Link {\r\n    private controller: Controller;\r\n    protected icon:string|JSX.Element;\r\n    protected label:string|JSX.Element;\r\n\r\n    constructor(controller:Controller) {\r\n        super();\r\n        this.controller = controller;\r\n        this.icon = controller.icon;\r\n        this.label = controller.label;\r\n    }\r\n\r\n    onClick = async () => {\r\n        await this.controller.start();\r\n    }\r\n\r\n    render(className?:string) {\r\n        return <div\r\n            className={classNames('px-3', 'py-2', 'align-items-center', 'cursor-pointer', className)}\r\n            onClick={this.onClick}>\r\n            {this.icon} &nbsp; {this.label}\r\n        </div>;\r\n        //return React.createElement(this.view, className);\r\n    }\r\n}\r\n","export * from './cLink';\r\n","\r\nlet subAppWindow:Window;\r\nfunction postWsToSubApp(msg:any) {\r\n    if (subAppWindow === undefined) return;\r\n    subAppWindow.postMessage({\r\n        type: 'ws',\r\n        msg: msg\r\n    }, '*');\r\n}\r\n\r\nexport function setSubAppWindow(win:Window) {\r\n    subAppWindow = win;\r\n}\r\n\r\nexport function postWsToTop(msg:any) {\r\n    window.top.postMessage({\r\n        type: 'ws',\r\n        msg: msg\r\n    }, '*');\r\n}\r\n\r\nexport abstract class WsBase {\r\n    wsBaseId:string;\r\n    private handlerSeed = 1;\r\n    private anyHandlers:{[id:number]:(msg:any)=>Promise<void>} = {};\r\n    private msgHandlers:{[id:number]:{type:string, handler:(msg:any)=>Promise<void>}} = {};\r\n    onWsReceiveAny(handler:(msg:any)=>Promise<void>):number {\r\n        let seed = this.handlerSeed++;\r\n        this.anyHandlers[seed] = handler;\r\n        return seed;\r\n    }\r\n    onWsReceive(type:string, handler:(msg:any)=>Promise<void>):number {\r\n        let seed = this.handlerSeed++;\r\n        this.msgHandlers[seed] = {type:type, handler: handler};\r\n        return seed;\r\n    }\r\n    endWsReceive(handlerId:number) {\r\n        delete this.anyHandlers[handlerId];\r\n        delete this.msgHandlers[handlerId];\r\n    }\r\n    async receive(msg:any) {\r\n        let {$type} = msg;\r\n        for (let i in this.anyHandlers) {\r\n            await this.anyHandlers[i](msg);\r\n        }\r\n        for (let i in this.msgHandlers) {\r\n            let {type, handler} = this.msgHandlers[i];\r\n            if (type !== $type) continue;\r\n            await handler(msg);\r\n        }\r\n    }\r\n}\r\n\r\nlet wsBaseSeed = 1;\r\nexport class WsBridge extends WsBase {\r\n    wsBaseId:string = 'WsBridge seed ' + wsBaseSeed++;\r\n}\r\n\r\nexport const wsBridge = new WsBridge();\r\n\r\nexport class WSChannel extends WsBase {\r\n    wsBaseId:string = 'WSChannel seed ' + wsBaseSeed++;\r\n    static centerToken:string;\r\n    private wsHost: string;\r\n    private token: string;\r\n    private ws: WebSocket;\r\n\r\n    constructor(wsHost: string, token: string) {\r\n        super();\r\n        this.wsHost = wsHost;\r\n        this.token = token;\r\n    }\r\n\r\n    static setCenterToken(token?: string) {\r\n        WSChannel.centerToken = token;\r\n    }\r\n    \r\n    connect():Promise<void> {\r\n        //this.wsHost = wsHost;\r\n        //this.token = token || WSChannel.centerToken;\r\n        if (this.ws !== undefined) return;\r\n        let that = this;\r\n        return new Promise((resolve, reject) => {\r\n            let ws = new WebSocket(this.wsHost, this.token || WSChannel.centerToken);\r\n            console.log('connect webSocket %s', this.wsHost);\r\n            ws.onopen = (ev) => {\r\n                console.log('webSocket connected %s', this.wsHost);\r\n                that.ws = ws;\r\n                resolve();\r\n            };\r\n            ws.onerror = (ev) => {\r\n                reject('webSocket can\\'t open!');\r\n            };\r\n            ws.onmessage = async (msg) => await that.wsMessage(msg);\r\n            ws.onclose = (ev) => {\r\n                that.ws = undefined;\r\n                console.log('webSocket closed!');\r\n            }\r\n        });\r\n    }\r\n    close() {\r\n        if (this.ws !== undefined) {\r\n            this.ws.close();\r\n            this.ws = undefined;\r\n        }\r\n    }\r\n    private async wsMessage(event:any):Promise<void> {\r\n        try {\r\n            console.log('websocket message: %s', event.data);\r\n            let msg = JSON.parse(event.data);\r\n            postWsToSubApp(msg);\r\n            await this.receive(msg);\r\n        }\r\n        catch (err) {\r\n            console.log('ws msg error: ', err);\r\n        }\r\n    }\r\n    sendWs(msg:any) {\r\n        let netThis = this;\r\n        this.connect().then(() => {\r\n            netThis.ws.send(msg);\r\n        });\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {IComputedValue} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash';\r\nimport {TitleBar} from './titleBar';\r\n\r\nexport interface ScrollProps {\r\n    onScroll?: (e:any) => void;\r\n    onScrollTop?: () => void;\r\n    onScrollBottom?: () => void;\r\n}\r\ninterface ScrollViewProps extends ScrollProps {\r\n    className?: string;\r\n}\r\nconst scrollTimeGap = 100;\r\nclass ScrollView extends React.Component<ScrollViewProps, null> {\r\n    private bottomTime:number = 0;\r\n    private topTime:number = 0;\r\n\r\n    private onScroll = async (e) => {\r\n        let {onScroll, onScrollTop, onScrollBottom} = this.props;\r\n        if (onScroll) this.props.onScroll(e);\r\n        let el = e.target as HTMLBaseElement;\r\n        if (el.scrollTop < 30) {\r\n            //this.eachChild(this, 'top');\r\n            if (onScrollTop !== undefined) {\r\n                let topTime = new Date().getTime();\r\n                if (topTime-this.topTime > scrollTimeGap) {\r\n                    this.topTime = topTime;\r\n                    onScrollTop();\r\n                }\r\n            }\r\n        }\r\n        if (el.scrollTop + el.offsetHeight > el.scrollHeight - 30) {\r\n            //this.eachChild(this, 'bottom');\r\n            if (onScrollBottom !== undefined) {\r\n                let bottomTime = new Date().getTime();\r\n                if (bottomTime - this.bottomTime > scrollTimeGap) {\r\n                    this.bottomTime = bottomTime;\r\n                    onScrollBottom();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    private eachChild(c:any, direct:'top'|'bottom') {\r\n        let { props } = c;\r\n        if (props === undefined)\r\n            return;\r\n        let { children } = props;\r\n        if (children === undefined)\r\n            return;\r\n        React.Children.forEach(children, (child, index) => {\r\n            let {_$scroll} = child as any;\r\n            if (_$scroll) _$scroll(direct);\r\n            console.log(child.toString());\r\n            this.eachChild(child, direct);\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <main className={this.props.className} onScroll={this.onScroll}>\r\n                {this.props.children}\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport interface Tab extends ScrollProps {\r\n    title: string;\r\n    icon?: string;\r\n    content?: JSX.Element | (()=>JSX.Element);\r\n    header?: string;\r\n    isSelected?: boolean;\r\n    redDot?: IComputedValue<number>;\r\n    load?: () => Promise<void>;\r\n}\r\nexport interface TabState extends Tab {\r\n    isMounted?: boolean;\r\n}\r\nexport interface PageProps extends ScrollProps {\r\n    back?: 'close' | 'back' | 'none';\r\n    header?: boolean | string | JSX.Element;\r\n    keepHeader?: boolean;\r\n    right?: JSX.Element;\r\n    sideBar?: JSX.Element;\r\n    footer?: JSX.Element;\r\n    tabs?: Tab[];\r\n    logout?: boolean | (()=>Promise<void>);\r\n}\r\nexport interface PageState {\r\n    cur?: Tab;\r\n    tabs?: TabState[];\r\n}\r\n\r\n@observer\r\nexport class Page extends React.Component<PageProps, PageState> {\r\n    private tabs:TabState[];\r\n    constructor(props: PageProps) {\r\n        super(props);\r\n        let {tabs} = props;\r\n        if (tabs === undefined || tabs.length === 0) return;\r\n        this.tabs = tabs;\r\n        let cur:Tab;\r\n        let tabStates:Tab[] = [];\r\n        for (let tab of tabs) {\r\n            let t:TabState = _.clone(tab);\r\n            if (cur === undefined) {\r\n                if (t.isSelected === true)\r\n                    cur = t;\r\n                else\r\n                    t.isSelected = false;\r\n            }\r\n            else {\r\n                t.isSelected = false;\r\n            }\r\n            t.isMounted = false;\r\n            tabStates.push(t);\r\n        }\r\n        this.state = {\r\n            cur: cur,\r\n            tabs: tabStates,\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (this.tabs === undefined) return;\r\n        let t0 = this.state.tabs[0];\r\n        if (t0 === undefined) return;\r\n        await this.onTabClick(t0);\r\n    }\r\n\r\n    private async onTabClick(tab: TabState) {\r\n        if (tab.isSelected === true) return;\r\n        let cur:TabState;\r\n        let tabs = this.state.tabs;\r\n        for (let t of tabs) {\r\n            if (t === tab) {\r\n                t.isSelected = true;\r\n                cur = t;\r\n            }\r\n            else\r\n                t.isSelected = false;\r\n        }\r\n        if (cur.isMounted !== true) {\r\n            let {load} = cur;\r\n            if (load !== undefined) {\r\n                await load();\r\n            }\r\n        }\r\n        this.setState({\r\n            cur: cur,\r\n            tabs: tabs\r\n        });\r\n    }\r\n\r\n    private onTouchStart(evt: React.TouchEvent<HTMLElement>) {\r\n    }\r\n\r\n    private renderTabs(footer: JSX.Element) {\r\n        const {header, back, right, keepHeader} = this.props;\r\n        let cur = this.state.cur;\r\n        let tabs = <div>{\r\n                this.state.tabs.map((tab, index) => {\r\n                    const {icon, isSelected, title, redDot} = tab;\r\n                    let img:any, redDotView:any, cn:any;\r\n                    if (icon !== undefined) img = <img src={icon} />;\r\n                    if (redDot !== undefined) {\r\n                        let v = redDot.get();\r\n                        if (v < 0) {\r\n                            cn = classNames('red-dot');\r\n                            redDotView = <u />;\r\n                        }\r\n                        else if (v > 0) {\r\n                            cn = classNames('red-dot', 'num');\r\n                            redDotView = <u>{v}</u>;\r\n                        }\r\n                    }\r\n                    return <div key={index}\r\n                        className= {classNames('va-tab', {cur: isSelected})}\r\n                        onClick={() => this.onTabClick(tab)}>\r\n                        {img}<div className={cn}>{title}{redDotView}</div>\r\n                    </div>\r\n                })\r\n            }</div>;\r\n        let titleBar;\r\n        if (header !== false) {\r\n            titleBar = <TitleBar \r\n                back={back} \r\n                center={keepHeader===true? (header as string) : (cur && (cur.header || cur.title))}\r\n                right={right} \r\n            />;\r\n        }\r\n\r\n        return <article className='page-container'>\r\n            {titleBar}\r\n            <section className=\"position-relative\">\r\n            {this.props.sideBar}\r\n            {\r\n                this.state.tabs.map((tab, index) => {\r\n                    let {isSelected, isMounted, content} = tab;\r\n                    if (isSelected === true || isMounted === true) {\r\n                        tab.isMounted = true;\r\n                        return <ScrollView key={index}\r\n                            className={classNames({invisible: isSelected===false})}\r\n                            onScroll={tab.onScroll}\r\n                            onScrollTop={tab.onScrollTop}\r\n                            onScrollBottom={tab.onScrollBottom}\r\n                        >\r\n                            {(typeof content)==='function'? (content as ()=>JSX.Element)():content}\r\n                        </ScrollView>;\r\n                    }\r\n                })\r\n            }\r\n            </section>\r\n            {tabs}\r\n            {footer}\r\n        </article>;\r\n    }\r\n    private renderSingle(footer: JSX.Element) {\r\n        const {back, header, right, onScroll, onScrollTop, onScrollBottom, children} = this.props;\r\n        let titleBar;\r\n        if (header !== false)\r\n            titleBar = <TitleBar \r\n                back={back} \r\n                center={header as any}\r\n                right={right}\r\n                logout={this.props.logout}\r\n            />;\r\n        return (\r\n            <article className='page-container' onTouchStart={this.onTouchStart}>\r\n                {titleBar}\r\n                <section className=\"position-relative\">\r\n                    {this.props.sideBar}\r\n                    <ScrollView\r\n                        onScroll={onScroll}\r\n                        onScrollTop={onScrollTop}\r\n                        onScrollBottom={onScrollBottom}\r\n                    >\r\n                        {children}\r\n                    </ScrollView>\r\n                </section>\r\n                {footer}\r\n            </article>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const {footer} = this.props;\r\n        let elFooter;\r\n        if (footer !== undefined) elFooter = <footer>{footer}</footer>;\r\n        if (this.tabs !== undefined)\r\n            return this.renderTabs(elFooter);\r\n        else\r\n            return this.renderSingle(elFooter);\r\n    }\r\n}\r\n","const ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\nconst ID_LENGTH = 8;\r\n\r\nexport function uid():string {\r\n    let len = ALPHABET.length;\r\n    let rtn = '';\r\n    for (let i = 0; i < ID_LENGTH; i++) {\r\n        rtn += ALPHABET.charAt(Math.floor(Math.random() * len));\r\n    }\r\n    return rtn;\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { nav } from './nav';\r\n\r\nexport interface ImageProps {\r\n    src: string;\r\n    className?: string;\r\n    style?: React.CSSProperties;\r\n}\r\n\r\nexport function Image(props: ImageProps) {\r\n    let {className, style, src} = props;\r\n    if (!src) {\r\n        return <div className={classNames(className, 'image-none')} style={style}>\r\n            <i className=\"fa fa-file-o\" />\r\n        </div>;\r\n    }\r\n    if (src.startsWith(':') === true) {\r\n        src = nav.resUrl + src.substr(1);\r\n    }\r\n    return <img src={src} className={className} style={style} />;\r\n}\r\n","export const isDevelopment = process.env.NODE_ENV === 'development';\r\n\r\nconst centerHost = process.env['REACT_APP_CENTER_HOST'];\r\nconst centerDebugHost = 'localhost:3000'; //'192.168.86.64';\r\nconst resHost = process.env['REACT_APP_RES_HOST'] || centerHost;\r\nconst resDebugHost = 'localhost:3015'; //'192.168.86.63';\r\nconst uqDebugHost = 'localhost:3015'; //'192.168.86.63';\r\nconst uqDebugBuilderHost = 'localhost:3009';\r\ninterface HostValue {\r\n    value: string;\r\n    local: boolean;\r\n}\r\nconst hosts:{[name:string]:HostValue} = {\r\n    centerhost: {\r\n        value: process.env['REACT_APP_CENTER_DEBUG_HOST'] || centerDebugHost, \r\n        local: false\r\n    },\r\n    reshost: {\r\n        value: process.env['REACT_APP_RES_DEBUG_HOST'] || resDebugHost,\r\n        local: false\r\n    },\r\n    uqhost: {\r\n        value: process.env['REACT_APP_UQ_DEBUG_HOST'] || uqDebugHost, \r\n        local: false\r\n    },\r\n    unitxhost: {\r\n        value: process.env['REACT_APP_UQ_DEBUG_HOST'] || uqDebugHost, \r\n        local: false\r\n    },\r\n    \"uq-build\": {\r\n        value: process.env['REACT_APP_UQ_DEBUG_BUILDER_HOST'] || uqDebugBuilderHost, \r\n        local: false\r\n    }\r\n}\r\n\r\nfunction centerUrlFromHost(host:string) {return `http://${host}/`}\r\nfunction centerWsFromHost(host:string) {return `ws://${host}/tv/`}\r\n\r\nconst fetchOptions = {\r\n    method: \"GET\",\r\n    mode: \"no-cors\", // no-cors, cors, *same-origin\r\n    headers: {\r\n        \"Content-Type\": \"text/plain\"\r\n    },\r\n};\r\n\r\nclass Host {\r\n    url: string;\r\n    ws: string;\r\n    resHost: string;\r\n\r\n    async start() {\r\n        if (isDevelopment === true) {\r\n            await this.tryLocal();\r\n        }\r\n        let host = this.getCenterHost();\r\n        this.url = centerUrlFromHost(host);\r\n        this.ws = centerWsFromHost(host);\r\n        this.resHost = this.getResHost();\r\n    }\r\n\r\n    private debugHostUrl(host:string) {return `http://${host}/hello`}\r\n    private async tryLocal() {\r\n        let promises:PromiseLike<any>[] = [];\r\n        let hostArr:string[] = [];\r\n        for (let i in hosts) {\r\n            let hostValue = hosts[i];\r\n            let {value} = hostValue;\r\n            if (hostArr.findIndex(v => v === value) < 0) hostArr.push(value);\r\n        }\r\n\r\n        for (let host of hostArr) {\r\n            let fetchUrl = this.debugHostUrl(host);\r\n            promises.push(localCheck(fetchUrl));\r\n        }\r\n        let results = await Promise.all(promises);\r\n        let len = hostArr.length;\r\n        for (let i=0; i<len; i++) {\r\n            let local = results[i];\r\n            let host = hostArr[i];\r\n            for (let j in hosts) {\r\n                let hostValue = hosts[j];\r\n                if (hostValue.value === host) {\r\n                    hostValue.local = local;\r\n                }\r\n            }\r\n        }\r\n        /*\r\n        let p = 0;\r\n        for (let i in hosts) {\r\n            let hostValue = hosts[i];\r\n            hostValue.local = results[p];\r\n            ++p;\r\n        }\r\n        */\r\n    }\r\n\r\n    private getCenterHost():string {\r\n        let {value, local} = hosts.centerhost;\r\n        let hash = document.location.hash;\r\n        if (hash.includes('sheet_debug') === true) {\r\n            return value;\r\n        }\r\n        if (isDevelopment === true) {\r\n            if (local === true) return value;\r\n        }\r\n        return centerHost;\r\n    }\r\n\r\n    private getResHost():string {\r\n        let {value, local} = hosts.reshost;\r\n        let hash = document.location.hash;\r\n        if (hash.includes('sheet_debug') === true) {\r\n            return value;\r\n        }\r\n        if (isDevelopment === true) {\r\n            if (local === true) return value;\r\n        }\r\n        return resHost;\r\n    }\r\n\r\n    getUrlOrDebug(url:string, urlDebug:string):string {\r\n        if (isDevelopment !== true) return url;\r\n        if (!urlDebug) return url;\r\n        for (let i in hosts) {\r\n            let host = hosts[i];\r\n            let {value, local} = host;\r\n            let hostString = `://${i}/`;\r\n            let pos = urlDebug.indexOf(hostString);\r\n            if (pos > 0) {\r\n                if (local === false) return url;\r\n                urlDebug = urlDebug.replace(hostString, `://${value}/`);\r\n                return urlDebug;\r\n            }\r\n        }\r\n        return url;\r\n    }\r\n\r\n    async localCheck(urlDebug: string):Promise<boolean> {\r\n        return await localCheck(urlDebug);\r\n    }\r\n}\r\n\r\nexport const host:Host = new Host();\r\n\r\n// 因为测试的都是局域网服务器，甚至本机服务器，所以一秒足够了\r\n// 网上找了上面的fetch timeout代码。\r\n// 尽管timeout了，fetch仍然继续，没有cancel\r\n\r\n// 实际上，一秒钟不够。web服务器会自动停。重启的时候，可能会比较长时间。也许两秒甚至更多。\r\n//const timeout = 2000;\r\nconst timeout = 200;\r\n\r\nfunction fetchLocalCheck(url:string):Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      fetch(url, fetchOptions as any)\r\n      .then(v => {\r\n          v.text().then(resolve).catch(reject);\r\n      })\r\n      .catch(reject);\r\n      const e = new Error(\"Connection timed out\");\r\n      setTimeout(reject, timeout, e);\r\n    });\r\n}\r\n\r\nasync function localCheck(url:string):Promise<boolean> {\r\n    try {\r\n        await fetchLocalCheck(url);\r\n        return true;\r\n    }\r\n    catch (err) {\r\n        return false;\r\n    }\r\n}\r\n","import jwtDecode from 'jwt-decode';\r\n\r\nexport interface Unit {\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\nexport interface Guest {\r\n    id: number;             // id = 0\r\n    guest: number;\r\n    token: string;\r\n}\r\n\r\nexport interface User extends Guest {\r\n    id: number;\r\n    name: string;\r\n    nick?: string;\r\n    icon?: string;\r\n}\r\n\r\n/*\r\nexport class UserInNav {\r\n    private user: User;\r\n    constructor(user: User) {\r\n        this.user = user;\r\n    }\r\n    get id():number {return this.user.id}\r\n    get name(): string {return this.user.name}\r\n    get nick(): string {return this.user.nick}\r\n    get icon(): string {return this.user.icon || ('http://' + process.env['REACT_APP_CENTER_HOST'] + '/imgs/Bear-icon.png');}\r\n    get guest(): number {return this.user.guest}\r\n    get token(): string {return this.user.token}\r\n}\r\n*/\r\nexport function decodeUserToken(token: string): User {\r\n    let ret:any = jwtDecode(token);\r\n    let user: User = {\r\n        id: ret.id,\r\n        name: ret.name,\r\n        guest: ret.guest,\r\n        token: token,\r\n    };\r\n    return user;\r\n}\r\n\r\nexport function decodeGuestToken(token: string): Guest {\r\n    let ret:any = jwtDecode(token);\r\n    let guest: Guest = {\r\n        id: 0,\r\n        guest: ret.guest,\r\n        token: token,\r\n    };\r\n    return guest;\r\n}\r\n","const ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\nconst ID_LENGTH = 8;\r\n\r\nexport function uid():string {\r\n    let len = ALPHABET.length;\r\n    let rtn = '';\r\n    for (let i = 0; i < ID_LENGTH; i++) {\r\n        rtn += ALPHABET.charAt(Math.floor(Math.random() * len));\r\n    }\r\n    return rtn;\r\n}\r\n","import * as React from 'react';\r\nimport { SearchBox, List, Muted, LMR } from 'tonva-react-form';\r\nimport { TuidMain, Entity } from '../../entities';\r\nimport { Page } from 'tonva-tools';\r\nimport { CLink } from '../link';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CTuidMain, TuidUI } from './cTuid';\r\n\r\nexport class VTuidMain extends VEntity<TuidMain, TuidUI, CTuidMain> {\r\n    protected controller: CTuidMain;\r\n    onNew = () => this.event('new');\r\n    onList = () => this.event('list');\r\n    onSearch = async (key:string) => this.event('list', key);\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected entityRender(link: CLink, index: number): JSX.Element {\r\n        return link.render();\r\n    }\r\n\r\n    protected async entityClick(link: CLink) {\r\n        await link.onClick();\r\n    }\r\n\r\n    protected get view() {\r\n        let {label, proxyLinks, isFrom} = this.controller;\r\n        let newButton:any;\r\n        if (isFrom === false) newButton = <button className=\"btn btn-outline-success ml-2\" onClick={this.onNew}>新增</button>;\r\n        let content:any;\r\n        if (proxyLinks === undefined) {\r\n            let right = <>\r\n                {newButton}\r\n                <button className=\"btn btn-outline-info ml-2\" onClick={this.onList}>全部</button>\r\n            </>;\r\n            content = <LMR className='m-3' right={right}>\r\n                <SearchBox className=\"w-100\" size=\"md\"\r\n                    onSearch={this.onSearch} \r\n                    placeholder={'搜索'+label} />\r\n            </LMR>;\r\n        }\r\n        else {\r\n            content = <List className=\"my-2\"\r\n                header={<Muted>{label} 代理下列Tuid</Muted>}\r\n                items={proxyLinks}\r\n                item={{render: this.entityRender, onClick:this.entityClick}} />\r\n        }\r\n        return () => <Page header={label}>\r\n            {content}\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { FA } from 'tonva-react-form';\r\nimport { Page } from 'tonva-tools';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CTuidMain, TuidUI } from './cTuid';\r\nimport { TuidMain, Tuid } from '../../entities';\r\n\r\nexport type TypeVTuidEdit = typeof VTuidEdit;\r\n\r\nexport class VTuidEdit extends VEntity<Tuid, TuidUI, CTuidMain> {\r\n    private vForm: VForm;\r\n    private id: number;\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        if (param !== undefined) {\r\n            this.id = param.id;\r\n        }\r\n        this.openPage(this.editView);\r\n    }\r\n\r\n    protected get editView() {\r\n        return () => <Page header={(this.id===undefined? '新增':'编辑') + ' - ' + this.label}>\r\n            {this.vForm.render('py-3')}\r\n        </Page>;\r\n    }\r\n\r\n    protected next = async () => {\r\n        this.vForm.reset();\r\n        this.closePage();\r\n    }\r\n\r\n    protected finish = () => {\r\n        this.closePage(2);\r\n        this.event('edit-end');\r\n    }\r\n\r\n    protected resetForm() {\r\n        this.vForm.reset();\r\n    }\r\n\r\n    protected onSubmit = async () => {\r\n        let values = this.vForm.getValues();\r\n        let ret = await this.controller.entity.save(this.id, values);\r\n        let {id} = ret;\r\n        if (id < 0) {\r\n            let {unique} = this.controller.entity;\r\n            if (unique !== undefined) {\r\n                for (let u of unique) {\r\n                    this.vForm.setError(u, '不能重复');\r\n                }\r\n            }\r\n            return;\r\n        }\r\n        if (this.controller.isCalling) {\r\n            this.returnCall(id);\r\n            this.closePage();\r\n            return;\r\n        }\r\n        this.openPageElement(<Page header={this.label + '提交成功'} back=\"none\">\r\n            <div className='m-3'>\r\n                <span className=\"text-success\">\r\n                    <FA name='check-circle' size='lg' /> 成功提交！\r\n                </span>\r\n                <div className='mt-5'>\r\n                    <button className=\"btn btn-primary mr-3\" onClick={this.next}>继续录入</button>\r\n                    <button className=\"btn btn-outline-primary\" onClick={this.finish}>不继续</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n\r\n        this.event('item-changed', {id: this.id, values: values});\r\n        return;\r\n    }\r\n\r\n    //protected view = TuidNewPage;\r\n}\r\n/*\r\nconst TuidNewPage = observer(({vm}:{vm:VmTuidEdit}) => {\r\n    let {label, id, vmForm} = vm;\r\n    return <Page header={(id===undefined? '新增':'编辑') + ' - ' + label}>\r\n        {vmForm.render('mx-3 my-2')}\r\n    </Page>;\r\n});\r\n*/","import { nav, Page } from 'tonva-tools';\r\nimport { VTuidMainListBase, VTuidDivListBase } from './vTuidList';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Tuid } from '../../entities';\r\nimport { CTuid, TuidUI } from './cTuid';\r\nimport { SearchBox, List } from 'tonva-react-form';\r\nimport React from 'react';\r\nimport { RowContent } from '../form/viewModel';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class VTuidSelect extends VEntity<Tuid, TuidUI, CTuid<Tuid>> {\r\n    protected mainRowContent: (row:any) => JSX.Element;\r\n    protected divRowContent: (row:any) => JSX.Element;\r\n\r\n    async open(param?:any): Promise<void> {\r\n        if (param === undefined)\r\n            await this.showMain(param);\r\n        else\r\n            await this.showDiv(param);\r\n    }\r\n\r\n    private async showMain(param) {\r\n        this.mainRowContent = this.ui.rowContent || RowContent;\r\n        await this.controller.searchMain(param);\r\n        this.openPage(this.mainView);\r\n    }\r\n\r\n    private async showDiv(ownerValue: any) {\r\n        let {divs} = this.ui;\r\n        if (divs !== undefined) {\r\n            this.divRowContent = divs[this.entity.name].rowContent;\r\n        }\r\n        if (this.divRowContent === undefined) {\r\n            this.divRowContent = RowContent;\r\n        }\r\n        let divItems = await this.controller.getDivItems(ownerValue);\r\n        this.openPage(this.divView, {items: divItems});\r\n    }\r\n\r\n    protected mainView = observer(() => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearchMain} placeholder={'搜索'+this.label} />;\r\n        return <Page header={header} back=\"close\">\r\n            <List\r\n                items={this.controller.PageItems.items}\r\n                item={{render: this.renderMainRow, onClick: this.clickMainRow}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    });\r\n\r\n    onSearchMain = async (key:string) => {\r\n        await this.controller.searchMain(key);\r\n        //await this.PageItems.first(key);\r\n    }\r\n    renderMainRow = (item:any, index:number):JSX.Element => <this.mainRowContent {...item} />;\r\n    clickMainRow = async (item:any) => {\r\n        this.ceasePage();\r\n        if (this.controller.entity.owner === undefined) {\r\n            this.returnCall(item);\r\n            return;\r\n        }\r\n        await this.showDiv(this.entity.getIdFromObj(item));\r\n    }\r\n\r\n    protected divView = (param:any) => {\r\n        return <Page header=\"选择Div\">\r\n            <List\r\n                items={param.items}\r\n                item={{render: this.renderDivRow, onClick: this.clickDivRow}} />\r\n        </Page>;\r\n    }\r\n    renderDivRow = (item:any, index:number):JSX.Element => <this.divRowContent {...item} />;\r\n    clickDivRow = (item:any) => {\r\n        this.ceasePage();\r\n        this.returnCall(item);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { FA } from 'tonva-react-form';\r\nimport { Page } from 'tonva-tools';\r\nimport { jsonStringify } from '../../tools';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { TuidMain } from '../../entities';\r\nimport { TuidUI, CTuidMain } from './cTuid';\r\n\r\nexport type TypeVTuidView = typeof VTuidView;\r\n\r\nexport class VTuidView extends VEntity<TuidMain, TuidUI, CTuidMain> {\r\n    vForm: VForm;\r\n    id: number;\r\n\r\n    protected buildForm(param:any) {\r\n        this.vForm = this.createForm(undefined, param);\r\n    }\r\n\r\n    async open(param:any) {\r\n        this.buildForm(param);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    render(param:any) {\r\n        this.buildForm(param);\r\n        return this.vForm.render();\r\n    }\r\n\r\n    async loadId(id: number) {\r\n        this.id = id;\r\n    }\r\n\r\n    protected next = async () => {\r\n        this.vForm.reset();\r\n        this.closePage();\r\n    }\r\n\r\n    protected finish = () => {\r\n        this.closePage(2);\r\n    }\r\n\r\n    protected resetForm() {\r\n        this.vForm.reset();\r\n    }\r\n\r\n    protected onSubmit = async () => {\r\n        let values = this.vForm.getValues();\r\n        let ret = await this.entity.save(this.id, values);\r\n        if (ret) {\r\n            alert('这里还要判断返回值，先不处理了 \\n' + jsonStringify(ret));\r\n        }\r\n        this.openPage(() => <Page header={this.label + '提交成功'} back=\"none\">\r\n            <div className='m-3'>\r\n                <span className=\"text-success\">\r\n                    <FA name='check-circle' size='lg' /> 成功提交！\r\n                </span>\r\n                <div className='mt-5'>\r\n                    <button className=\"btn btn-primary mr-3\" onClick={this.next}>继续录入</button>\r\n                    <button className=\"btn btn-outline-primary\" onClick={this.finish}>不继续</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n        return;\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n            {this.vForm.render('py-3')}\r\n    </Page>;\r\n}\r\n","import React from 'react';\r\nimport { VTuidView } from './vTuidView';\r\n\r\nexport class VTuidInfo  extends VTuidView {\r\n/*\r\n    async open(param?:any) {\r\n        this.open(this.view);\r\n    }\r\n*/\r\n/*\r\n    private view = () => {\r\n        return <Page>\r\n            TuidInfo\r\n        </Page>\r\n    }\r\n*/\r\n}\r\n","import { PageItems } from 'tonva-tools';\r\nimport { Tuid } from \"../../entities\";\r\n\r\nexport class TuidPageItems<T> extends PageItems<T> {\r\n    private tuid: Tuid;\r\n    constructor(tuid: Tuid) {\r\n        super(true);\r\n        this.tuid = tuid;\r\n    }\r\n    protected async load(param:any, pageStart:any, pageSize:number):Promise<any[]> {\r\n        let ret = await this.tuid.search(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:any) {\r\n        this.pageStart = item === undefined? 0 : item.id;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { FA, SearchBox, List } from 'tonva-react-form';\r\nimport { Page, PageItems } from 'tonva-tools';\r\nimport { jsonStringify } from '../../tools';\r\nimport { TuidMain, Entity, Tuid, TuidDiv } from '../../entities';\r\nimport { VEntity } from '../CVEntity';\r\nimport { TuidUI, CTuidMain, CTuidDiv } from './cTuid';\r\nimport { JSONContent, RowContent } from '../form/viewModel';\r\n\r\nexport abstract class VTuidMainListBase  extends VEntity<TuidMain, TuidUI, CTuidMain> {\r\n    protected rowContent: (row:any) => JSX.Element;\r\n    protected ownerId: number;\r\n\r\n    async open(param?:any) {\r\n        this.rowContent = this.ui.rowContent || RowContent;\r\n        if (this.entity.owner !== undefined) this.ownerId = Number(param);\r\n        // 初始查询, key是空的\r\n        //await this.onSearch('');\r\n        await this.controller.searchMain('');\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSearch = async (key:string) => {\r\n        await this.controller.searchMain(key);\r\n        //await this.PageItems.first(key);\r\n    }\r\n    renderRow = (item:any, index:number):JSX.Element => <this.rowContent {...item} />;\r\n\r\n    protected abstract onSelected(item:any): Promise<void>;\r\n    private callOnSelected(item:any) {\r\n        if (this.onSelected === undefined) {\r\n            alert('onSelect is undefined');\r\n            return;\r\n        }\r\n        this.onSelected(item);\r\n    }\r\n    clickRow = (item:any) => {\r\n        this.callOnSelected(item);\r\n    }\r\n    private rowKey = (item:any) => {\r\n        let {id} = item;\r\n        return id;\r\n    }\r\n    protected view = observer(() => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\r\n        let {owner} = this.entity;\r\n        let ownerTop;\r\n        if (owner !== undefined) {\r\n            let ownerObj = owner.valueFromId(this.ownerId);\r\n            ownerTop = <div>owner: {jsonStringify(ownerObj)}</div>;\r\n        }\r\n        return <Page header={header}>\r\n            {ownerTop}\r\n            <List\r\n                items={this.controller.PageItems.items}\r\n                item={{render: this.renderRow, onClick: this.clickRow, key:this.rowKey}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    });\r\n}\r\n\r\nexport class VTuidMainList extends VTuidMainListBase {\r\n    protected async onSelected(item:any) {\r\n        if (this.controller.isFrom === false)\r\n            this.event('edit', item.id);\r\n        else\r\n            this.event('info', item.id);\r\n    }\r\n}\r\n\r\nexport abstract class VTuidDivListBase  extends VEntity<TuidDiv, TuidUI, CTuidDiv> {\r\n    protected ownerId: number;\r\n\r\n    async open(param?:any) {\r\n        //this.PageItems = new TuidPageItems(this.entity);\r\n        if (this.entity.owner !== undefined) this.ownerId = Number(param);\r\n        // 初始查询, key是空的\r\n        //await this.onSearch('');\r\n        await this.controller.searchMain('');\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSearch = async (key:string) => {\r\n        await this.controller.searchMain(key);\r\n        //await this.PageItems.first(key);\r\n    }\r\n    renderRow = (item:any, index:number):JSX.Element => {\r\n        return <div className=\"px-3 py-2\">{jsonStringify(item)}</div>;\r\n    }\r\n\r\n    protected abstract onSelected(item:any): Promise<void>;\r\n    private callOnSelected(item:any) {\r\n        if (this.onSelected === undefined) {\r\n            alert('onSelect is undefined');\r\n            return;\r\n        }\r\n        this.onSelected(item);\r\n    }\r\n    clickRow = (item:any) => {\r\n        this.callOnSelected(item);\r\n    }\r\n\r\n    protected view = observer(() => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\r\n        let {owner} = this.entity;\r\n        let ownerTop;\r\n        if (owner !== undefined) {\r\n            let ownerObj = owner.valueFromId(this.ownerId);\r\n            ownerTop = <div>owner: {jsonStringify(ownerObj)}</div>;\r\n        }\r\n        return <Page header={header}>\r\n            {ownerTop}\r\n            <List\r\n                items={this.controller.PageItems.items}\r\n                item={{render: this.renderRow, onClick: this.clickRow}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    });\r\n}\r\n\r\nexport class VTuidDivList extends VTuidDivListBase {\r\n    protected async onSelected(item:any) {\r\n        this.event('edit', item.id);\r\n    }\r\n}\r\n","import _ from 'lodash';\r\nimport { TypeVPage, PageItems } from 'tonva-tools';\r\nimport { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { TuidMain, Tuid, TuidDiv } from \"../../entities\";\r\nimport { VTuidMain } from './vTuidMain';\r\nimport { VTuidEdit } from './vTuidEdit';\r\nimport { VTuidSelect } from './vTuidSelect';\r\nimport { CUq } from \"../uq/cUq\";\r\nimport { CLink } from \"../link\";\r\nimport { VTuidInfo } from \"./vTuidInfo\";\r\nimport { TuidPageItems } from \"./pageItems\";\r\nimport { VTuidMainList } from './vTuidList';\r\n\r\nexport interface TuidUI extends EntityUI {\r\n    CTuidMain?: typeof CTuidMain;\r\n    CTuidEdit?: typeof CTuidEdit;\r\n    CTuidList?: typeof CTuidList;\r\n\r\n    CTuidSelect?: typeof CTuidSelect;\r\n    CTuidInfo?: typeof CTuidInfo;\r\n    content?: React.StatelessComponent<any>;\r\n    rowContent?: React.StatelessComponent<any>;\r\n    divs?: {\r\n        [div:string]: {\r\n            CTuidSelect?: typeof CTuidSelect;\r\n            content?: React.StatelessComponent<any>;\r\n            rowContent?: React.StatelessComponent<any>;\r\n        }\r\n    }\r\n}\r\n\r\nexport abstract class CTuid<T extends Tuid> extends CEntity<T, TuidUI> {\r\n    PageItems:PageItems<any>;\r\n\r\n    protected buildPageItems():PageItems<any> {\r\n        return new TuidPageItems(this.entity.owner || this.entity);\r\n    }\r\n\r\n    async searchMain(key:string) {\r\n        if (this.PageItems === undefined) {\r\n            this.PageItems = this.buildPageItems();\r\n        }\r\n        if (key !== undefined) await this.PageItems.first(key);\r\n    }\r\n\r\n    async getDivItems(ownerId:number):Promise<any[]> {\r\n        let ret = await this.entity.searchArr(ownerId, undefined, 0, 1000);\r\n        return ret;\r\n    }\r\n}\r\n\r\nexport abstract class CTuidBase extends CTuid<TuidMain> {\r\n    constructor(cUq: CUq, entity: TuidMain, ui: TuidUI, res:any) {\r\n        super(cUq, entity, ui, res);\r\n        //let tuid = this.entity;\r\n        //this.proxies = tuid.proxies;\r\n        if (this.proxies !== undefined) {\r\n            this.proxyLinks = [];\r\n            for (let i in this.proxies) {\r\n                let link = this.cUq.linkFromName('tuid', i);\r\n                this.proxyLinks.push(link);\r\n            }\r\n        }\r\n    }\r\n\r\n    from():CTuidBase {\r\n        let ret = this.entity.cFrom();\r\n        if (ret === undefined) return this;\r\n        return ret;\r\n    }\r\n\r\n    cUqFrom():CUq {\r\n        return this.entity.cUqFrom();\r\n    }\r\n    cEditFrom(): CTuidEdit {\r\n        let cUq = this.entity.cUqFrom();\r\n        return cUq.cTuidEditFromName(this.entity.name);\r\n    }\r\n    cInfoFrom(): CTuidInfo {\r\n        let cUq = this.entity.cUqFrom();\r\n        return cUq.cTuidInfoFromName(this.entity.name);\r\n    }\r\n    cSelectFrom(): CTuidSelect {\r\n        let cUq = this.entity.cUqFrom();\r\n        return cUq.cTuidSelectFromName(this.entity.name);\r\n    }\r\n\r\n    getLable(tuid:Tuid):string {\r\n        if (tuid === this.entity) return this.label;\r\n        let {name} = tuid;\r\n        let {arrs} = this.res;\r\n        if (arrs !== undefined) {\r\n            let arr = arrs[name];\r\n            if (arr !== undefined) {\r\n                let label = arr.label;\r\n                if (label !== undefined) return label;\r\n            }\r\n        }\r\n        return name;\r\n    }\r\n\r\n    proxies: {[name:string]: TuidMain};\r\n    proxyLinks: CLink[];\r\n    isFrom: boolean;\r\n\r\n    protected get VTuidMain():typeof VTuidMain {return VTuidMain}\r\n    protected get VTuidEdit():typeof VTuidEdit {return VTuidEdit}\r\n    protected get VTuidList():typeof VTuidMainList {return VTuidMainList}\r\n\r\n    protected async internalStart(param?:any):Promise<void> {\r\n        this.isFrom = this.entity.schemaFrom !== undefined;\r\n        await this.openVPage(this.VTuidMain);\r\n    }\r\n\r\n    protected async onEvent(type:string, value:any) {\r\n        //let v: TypeVPage<CTuidMain>;\r\n        switch (type) {\r\n            default: return;\r\n            case 'new': await this.onNew(); break;\r\n            case 'list': await this.onList(); break;\r\n            case 'edit': await this.onEdit(value); return;\r\n            case 'item-changed': this.itemChanged(value); return;\r\n            case 'info': \r\n                let cTuidInfo = new CTuidInfo(this.cUq, this.entity, this.ui, this.res);\r\n                await cTuidInfo.start(value);\r\n                return;\r\n        }\r\n        //await this.openVPage(v, value);\r\n    }\r\n\r\n    protected async edit(values:any) {\r\n        let cTuidEdit = this.ui && this.ui.CTuidEdit;\r\n        if (cTuidEdit === undefined) {\r\n            await this.openVPage(this.VTuidEdit, values);\r\n        }\r\n        else {\r\n            await (new cTuidEdit(this.cUq, this.entity, this.ui, this.res)).start(values);\r\n        }\r\n    }\r\n\r\n    private async onNew() {\r\n        await this.edit(undefined);\r\n    }\r\n\r\n    private async onList() {\r\n        let cTuidList = this.ui && this.ui.CTuidList;\r\n        if (cTuidList === undefined) {\r\n            await this.openVPage(this.VTuidList, undefined);\r\n        }\r\n        else {\r\n            await (new cTuidList(this.cUq, this.entity, this.ui, this.res)).start(undefined);\r\n        }\r\n    }\r\n\r\n    protected async onEdit(id:number) {\r\n        let values:any = undefined;\r\n        if (id !== undefined) {\r\n            values = await this.entity.load(id);\r\n        }\r\n        this.edit(values);\r\n        //await this.openVPage(this.VTuidEdit, values);\r\n    }\r\n\r\n    private itemChanged({id, values}:{id:number, values: any}) {\r\n        if (this.PageItems === undefined) return;\r\n        let items = this.PageItems.items;\r\n        let item = items.find(v => v.id === id);\r\n        if (item !== undefined) {\r\n            _.merge(item, values);\r\n        }\r\n    }\r\n}\r\n\r\nexport class CTuidMain extends CTuidBase {\r\n    protected async internalStart(param?:any):Promise<void> {\r\n        this.isFrom = this.entity.schemaFrom !== undefined;\r\n        await this.openVPage(this.VTuidMain);\r\n    }\r\n\r\n}\r\n\r\nexport class CTuidEdit extends CTuidBase {\r\n    protected async internalStart(id:number):Promise<void> {\r\n        this.isFrom = this.entity.schemaFrom !== undefined;\r\n        if (typeof(id) === 'number') {\r\n            await this.onEdit(id);\r\n        }\r\n        else {\r\n            await this.edit(id);\r\n        }\r\n    }\r\n\r\n    protected async edit(values:any) {\r\n        await this.openVPage(this.VTuidEdit, values);\r\n    }\r\n}\r\n\r\nexport class CTuidList extends CTuidBase {\r\n    protected async internalStart(id:number):Promise<void> {\r\n        this.isFrom = this.entity.schemaFrom !== undefined;\r\n        await this.openVPage(this.VTuidList);\r\n    }\r\n}\r\n\r\nexport class CTuidDiv extends CTuid<TuidDiv> {\r\n    protected async internalStart():Promise<void> {\r\n        alert('tuid div: ' + this.entity.name);\r\n    }\r\n}\r\n\r\nexport class CTuidSelect extends CTuid<Tuid> {\r\n    protected async internalStart(param?: any):Promise<void> {\r\n        await this.openVPage(this.VTuidSelect, param);\r\n    }\r\n    protected async beforeStart():Promise<boolean> {\r\n        //if (await super.beforeStart() === false) return false;\r\n        await this.entity.loadSchema();\r\n        if (this.PageItems !== undefined) this.PageItems.reset();\r\n        return true;\r\n    }\r\n    protected get VTuidSelect():typeof VTuidSelect {return VTuidSelect}\r\n    idFromItem(item:any) {\r\n        return item.id;\r\n    }\r\n}\r\n\r\nexport class CTuidInfo extends CTuid<Tuid> {\r\n    protected async internalStart(id: any):Promise<void> {\r\n        let data = await this.entity.load(id)\r\n        await this.openVPage(this.VTuidInfo, data);\r\n    }\r\n    protected get VTuidInfo():typeof VTuidInfo {return VTuidInfo}\r\n}\r\n","export * from './cTuid';\r\nexport * from './vTuidMain';\r\nexport * from './vTuidEdit';\r\nexport * from './vTuidInfo';\r\nexport * from './vTuidView';\r\nexport * from './vTuidSelect';\r\n","import * as React from 'react';\r\nimport { VField } from './vField';\r\nimport { VArr } from './vArr';\r\nimport { VSubmit } from './vSubmit';\r\nimport { uid } from 'tonva-react-form';\r\n\r\nexport abstract class VBand {\r\n    protected label: string;\r\n    protected view = () => <div />;\r\n\r\n    constructor(label:string) {\r\n        this.label = label;\r\n    }\r\n\r\n    render():JSX.Element {\r\n        //text-sm-right\r\n        return <div key={this.key} className=\"px-3\">\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-sm-2 col-form-label\">\r\n                    {this.label}\r\n                </label>\r\n                <div className=\"col-sm-10\">\r\n                    {this.renderContent()}\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    setAddRow(addRow:()=>Promise<void>) {}\r\n    get key() {return this.label}\r\n    public getVFields():VField[] {return;}\r\n    public getVArr():VArr {return;}\r\n    public getVSubmit():VSubmit {return;}\r\n\r\n    protected renderContent():JSX.Element {\r\n        return <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">content</div>;\r\n    }\r\n}\r\n\r\nexport interface FieldRes {\r\n    label: string;\r\n    placeHolder: string;\r\n    suffix: string;\r\n}\r\nexport class VFieldBand extends VBand {\r\n    protected vField:VField;\r\n    constructor(label:string, vField:VField) {\r\n        super(label);\r\n        this.vField = vField;\r\n    }\r\n\r\n    get key() {return this.vField.name}\r\n    public getVFields():VField[] {return [this.vField];}\r\n\r\n    protected renderContent():JSX.Element {\r\n        return this.vField.render();\r\n        /*\r\n        <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">\r\n            {this.vField.render()}\r\n        </div>;*/\r\n    }\r\n}\r\n\r\nexport class VArrBand extends VBand {\r\n    protected vArr:VArr;\r\n    constructor(label:string, vArr:VArr) {\r\n        super(label);\r\n        this.vArr = vArr;\r\n    }\r\n\r\n    setAddRow(addRow:()=>Promise<void>) {this.vArr.setAddRow(addRow)}\r\n    get key() {return this.vArr.name}\r\n    public getVArr():VArr {return this.vArr;}\r\n\r\n    render():JSX.Element {\r\n        return <React.Fragment key={this.key}>\r\n            {this.vArr && this.vArr.render()}\r\n        </React.Fragment>;\r\n    }\r\n}\r\n\r\nexport class VFieldsBand extends VBand {\r\n    protected vFields: VField[];\r\n    constructor(label:string, vFields:VField[]) {\r\n        super(label);\r\n        this.vFields = vFields;\r\n    }\r\n\r\n    get key() {return this.vFields[0].name}\r\n    public getVFields():VField[] {return this.vFields;}\r\n\r\n    protected renderContent():JSX.Element {\r\n        return <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">\r\n            fields\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class VSubmitBand extends VBand {\r\n    protected vSubmit: VSubmit;\r\n    constructor(vSubmit:VSubmit) {\r\n        super(undefined);\r\n        this.vSubmit = vSubmit;\r\n    }\r\n\r\n    get key() {return '$submit'}\r\n\r\n    public getVSubmit():VSubmit {return this.vSubmit;}\r\n\r\n    render():JSX.Element {\r\n        return <div key=\"$submit\" className=\"px-3\">\r\n            <div className=\"form-group row\">\r\n                <div className=\"offset-sm-2 col-sm-10\">\r\n                    {this.vSubmit.render()}\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames'\r\nimport { ViewModel } from \"./viewModel\";\r\nimport { VForm } from './vForm';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\n\r\nexport class VSubmit extends ViewModel {\r\n    private vForm: VForm;\r\n    constructor(vForm: VForm) {\r\n        super();\r\n        this.vForm = vForm;\r\n        this.caption = this.vForm.submitCaption;\r\n        this.className = 'btn btn-primary w-25';\r\n    }\r\n    @observable caption: string;\r\n    @observable className: string;\r\n\r\n    private onClickSubmit = async () => {\r\n        this.vForm.submit();\r\n    }\r\n\r\n    protected view = observer(() => {\r\n        let {isOk} = this.vForm;\r\n        return <button type=\"button\" \r\n            onClick={this.onClickSubmit}\r\n            className={this.className}\r\n            disabled={isOk === false}>\r\n            {this.caption}\r\n        </button>;\r\n    });\r\n}","\r\nexport abstract class Rule {\r\n    abstract check(defy:string[], value:any);\r\n}\r\n\r\nexport class RuleRequired extends Rule {\r\n    check(defy:string[], value:any) {\r\n        switch (typeof value) {\r\n            default:\r\n            case 'boolean': return;\r\n            case 'object':\r\n                if (value !== null) return;\r\n                break;\r\n            case 'string':\r\n                if ((value as string).trim().length > 0) return;\r\n                break;\r\n            case 'number':\r\n                if ((value as number) !== NaN) return;\r\n                break;\r\n            case 'undefined':\r\n                break;\r\n        }\r\n        defy.push('不能为空');\r\n    }\r\n}\r\n\r\nexport class RuleNum extends Rule {\r\n    check(defy:string[], value:any) {\r\n        if (value === undefined || value === null) return;\r\n        let n = Number(value);\r\n        if (n === NaN) defy.push('必须是数字');\r\n    }\r\n}\r\n\r\nexport class RuleInt extends Rule {\r\n    check(defy:string[], value:any) {\r\n        if (value === undefined || value === null) return;\r\n        let n = Number(value);\r\n        if (Number.isNaN(n) === true || Number.isInteger(n) === false) {\r\n            defy.push('必须是整数');\r\n        }\r\n    }\r\n}\r\n\r\nexport class RuleMin extends RuleNum {\r\n    constructor(min: number) {\r\n        super();\r\n        this.min = min;\r\n    }\r\n    min: number;\r\n    check(defy:string[], value:any) {\r\n        super.check(defy, value);\r\n        if (Number(value) < this.min) defy.push('不能小于' + this.min);\r\n    }\r\n}\r\n\r\nexport class RuleMax extends RuleNum {\r\n    constructor(max: number) {\r\n        super();\r\n        this.max = max;\r\n    }\r\n    max: number;\r\n    check(defy:string[], value:any) {\r\n        super.check(defy, value);\r\n        if (Number(value) > this.max) defy.push('不能小于' + this.max);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { computed, action } from 'mobx';\r\nimport classNames from 'classnames';\r\nimport { observer } from 'mobx-react';\r\nimport { FA } from 'tonva-react-form';\r\nimport { ViewModel } from \"../viewModel\";\r\nimport { VForm, FormMode } from '../vForm';\r\nimport { Rule, RuleRequired, RuleInt, RuleNum, RuleMin, RuleMax } from '../rule';\r\nimport { Field } from '../../../entities';\r\nimport { FieldRes } from '../vBand';\r\nimport { FieldUI, FieldInputUI, FieldStringUI, FieldNumberUI } from '../../formUI';\r\n\r\nexport abstract class VField extends ViewModel {\r\n    protected form: VForm;\r\n    protected fieldUI: FieldUI;\r\n    protected fieldRes:FieldRes;\r\n    protected field: Field;\r\n    protected rules: Rule[];\r\n    constructor(form:VForm, field:Field, fieldUI: FieldUI, fieldRes:FieldRes) {\r\n        super();\r\n        this.form = form;\r\n        this.field = field;\r\n        this.name = field.name;\r\n        this.fieldUI = fieldUI || {} as any;\r\n        this.fieldRes = fieldRes || {} as any;\r\n        this.init();\r\n    }\r\n\r\n    name: string;\r\n\r\n    protected init() {\r\n        this.buildRules();\r\n    }\r\n\r\n    protected buildRules() {\r\n        this.rules = [];\r\n        let {required} = this.fieldUI;\r\n        if (required === true || this.field !== undefined && this.field.null === false) {\r\n            this.rules.push(new RuleRequired);\r\n        }\r\n    }\r\n\r\n    @computed get checkRules(): string[] {\r\n        let defy = [];\r\n        for (let r of this.rules) r.check(defy, this.value);\r\n        return defy;\r\n    }\r\n\r\n    @computed get isOk() {\r\n        if (this.rules.length === 0) return true;\r\n        let defy = this.checkRules;\r\n        return defy.length === 0;\r\n    }\r\n\r\n    @computed get value() { return this.form.values[this.name]; }\r\n    setValue(v:any) {\r\n        this.form.values[this.name]=v; \r\n    }\r\n    get error() { return this.form.errors[this.name]; }\r\n    set error(err:any) { this.form.errors[this.name]=err; }\r\n    protected parse(str:string):any {return str;}\r\n    get readonly():boolean {\r\n        let {mode} = this.form;\r\n        return mode === FormMode.readonly || \r\n            mode === FormMode.edit && this.fieldUI.editable === false;\r\n    }\r\n}\r\n\r\nexport class VUnknownField extends VField {\r\n    protected view = () => {\r\n        //let {name, type} = this.fieldUI;\r\n        let type='', name = '';\r\n        return <input type=\"text\" className=\"form-control form-control-plaintext border border-info rounded bg-light\"\r\n            placeholder={'unkown control: ' + type + '-' + name} />;\r\n    }\r\n}\r\n\r\nexport abstract class VInputControl extends VField {\r\n    protected fieldUI: FieldInputUI;\r\n    protected input: HTMLInputElement;\r\n\r\n    protected inputType:string;\r\n    protected get maxLength():number {return}\r\n\r\n    protected renderError = (className:string) => {\r\n        let {errors} = this.form;\r\n        let error = errors[this.name];\r\n        if (error === undefined) return;\r\n        return <div className={className}><FA name=\"exclamation-circle\" /> {error}</div>\r\n    }\r\n\r\n    /*\r\n    get value() {\r\n        return super.value;\r\n    }*/\r\n    setValue(v:any) {\r\n        super.setValue(v); this.setInputValue(); \r\n    }\r\n\r\n    protected ref = (input:HTMLInputElement) => {\r\n        this.input = input;\r\n        this.setInputValue();\r\n    }\r\n\r\n    protected setInputValue() {\r\n        if (!this.input) return;\r\n        let v = this.value;\r\n        this.input.value = v === null || v === undefined? '' : v;\r\n    }\r\n\r\n    protected onFocus = () => {\r\n        this.error = undefined;\r\n    }\r\n\r\n    protected onBlur = () => {\r\n        let defy = this.checkRules;\r\n        if (defy.length > 0) {\r\n            this.error = defy[0];\r\n        }\r\n        this.form.computeFields();\r\n    }\r\n\r\n    protected onChange = (evt: React.ChangeEvent<any>) => {\r\n        let v = this.parse(evt.currentTarget.value);\r\n        if (v === null) {\r\n            return;\r\n        }\r\n        this.setValue(v);\r\n    }\r\n\r\n    protected onKeyPress: (event:React.KeyboardEvent<HTMLInputElement>) => void;\r\n    \r\n    protected view = observer(() => {\r\n        let {required} = this.fieldUI;\r\n        let {placeHolder, suffix} = this.fieldRes;\r\n        let ctrlCN = ['form-control', 'form-control-input'];\r\n        let errCN = 'text-danger small mt-1 mx-2';\r\n    \r\n        let redDot;\r\n        let input;\r\n        if (this.readonly === true) {\r\n            input = <input className={classNames(ctrlCN, 'bg-light')}\r\n                ref={this.ref}\r\n                type={this.inputType}\r\n                readOnly={true}\r\n            />;\r\n        }\r\n        else {\r\n            input = <input className={classNames(ctrlCN)}\r\n                ref={this.ref}\r\n                type={this.inputType}\r\n                onFocus={this.onFocus}\r\n                onBlur={this.onBlur}\r\n                onChange={this.onChange}\r\n                placeholder={placeHolder}\r\n                readOnly={false}\r\n                maxLength={this.maxLength}\r\n                onKeyPress={this.onKeyPress}\r\n            />;\r\n            if (required === true || this.field.null === false) {\r\n                redDot = <RedMark />;\r\n            }\r\n        }\r\n\r\n        let inputGroup;\r\n        if (suffix === undefined)\r\n            inputGroup = input;\r\n        else\r\n            inputGroup = <div className=\"input-group\">\r\n                {input}\r\n                <div className=\"input-group-append\">\r\n                    <span className=\"input-group-text\">{suffix}</span>\r\n                </div>\r\n            </div>;\r\n\r\n        return <>\r\n            {redDot}\r\n            {inputGroup}\r\n            {this.renderError(errCN)}\r\n        </>\r\n    });\r\n}\r\n\r\nexport const RedMark = () => <b style={{color:'red', position:'absolute', left:'0.1em', top:'0.5em'}}>*</b>;\r\n\r\nexport class VStringField extends VInputControl {\r\n    protected fieldUI: FieldStringUI;\r\n    protected inputType:string = 'text';\r\n    protected get maxLength():number {return this.field.size}\r\n}\r\n\r\nconst KeyCode_Neg = 45;\r\nconst KeyCode_Dot = 46;\r\n\r\nexport abstract class VNumberControl extends VInputControl {\r\n    protected fieldUI: FieldNumberUI;\r\n    protected extraChars: number[];\r\n\r\n    protected init() {\r\n        super.init();\r\n        this.extraChars = [];\r\n        if (this.fieldUI !== undefined) {\r\n            let {min, max} = this.fieldUI;\r\n            if (min !== undefined) {\r\n                //this.rules.push((v:number) => {if (v === undefined) return; if (v<min) return ErrMin + min; return true;});\r\n                if (min < 0) this.extraChars.push(KeyCode_Neg);\r\n            }\r\n            else {\r\n                this.extraChars.push(KeyCode_Neg);\r\n            }\r\n    \r\n            if (max !== undefined) {\r\n                //this.rules.push((v:number) => {if (v === undefined) return; if (v>max) return ErrMax + max; return true});\r\n            }\r\n        }\r\n        switch (this.field.type) {\r\n            case 'dec':\r\n            case 'bigint':\r\n            case 'int':\r\n            case 'smallint':\r\n            case 'tinyint':\r\n                this.extraChars.push(KeyCode_Dot); break;\r\n        }\r\n    }\r\n\r\n    protected buildRules() {\r\n        super.buildRules();\r\n        this.rules.push(new RuleNum);\r\n        let {min, max} = this.fieldUI;\r\n        if (min !== undefined) this.rules.push(new RuleMin(min));\r\n        if (max !== undefined) this.rules.push(new RuleMax(max));\r\n    }\r\n\r\n    inputType:string = 'number';\r\n\r\n    protected parse(text:string):any {\r\n        try {\r\n            if (text.trim().length === 0) return undefined;\r\n            let ret = Number(text);\r\n            return (ret === NaN)? null : ret;\r\n        }\r\n        catch {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    protected setInputValue() {\r\n        if (!this.input) return;\r\n        let v = this.value;\r\n        if (this.parse(this.input.value) == v) return;\r\n        this.input.value = v === null || v === undefined? '' : v;\r\n    }\r\n\r\n    protected onKeyPress = (event:React.KeyboardEvent<HTMLInputElement>) => {\r\n        let ch = event.charCode;\r\n        if (ch === 8 || ch === 0 || ch === 13 || ch >= 48 && ch <= 57) return;\r\n        if (this.extraChars !== undefined) {\r\n            if (this.extraChars.indexOf(ch) >= 0) {\r\n                switch (ch) {\r\n                    case KeyCode_Dot: this.onKeyDot(); break;\r\n                    case KeyCode_Neg: this.onKeyNeg(); event.preventDefault(); break;\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    private onKeyDot() {\r\n        let v = this.input.value;\r\n        let p = v.indexOf('.');\r\n        if (p >= 0) this.input.value = v.replace('.', '');\r\n    }\r\n    private onKeyNeg() {\r\n        let v = this.input.value;\r\n        let p = v.indexOf('-');\r\n        if (p >= 0) v = v.replace('-', '');\r\n        else v = '-'+v;\r\n        this.input.value = v;\r\n    }\r\n}\r\n\r\nexport class VIntField extends VNumberControl {\r\n    protected buildRules() {\r\n        super.buildRules();\r\n        this.rules.push(new RuleInt);\r\n    }\r\n}\r\n\r\nexport class VDecField extends VNumberControl {\r\n}\r\n\r\nexport class VTextField extends VStringField {\r\n\r\n}\r\n\r\nexport class VDateTimeField extends VStringField {\r\n\r\n}\r\n","import React from 'react';\r\nimport { VField } from './vField';\r\nimport { Field } from '../../../entities';\r\nimport { VForm } from '../vForm';\r\nimport { observer } from 'mobx-react';\r\nimport { FieldRes } from '../vBand';\r\n\r\nexport class VComputeField extends VField {\r\n    constructor(form:VForm, field: Field, fieldRes: FieldRes) {\r\n        super(form, field, undefined, fieldRes);\r\n    }\r\n    protected view = observer(() => {\r\n        let value = this.form.values[this.field.name];\r\n        let {placeHolder, suffix} = this.fieldRes;\r\n        let ctrlCN = 'form-control form-control-input bg-light';\r\n        if (value === null) value = '';\r\n        let input = <input className={ctrlCN}\r\n            type=\"text\"\r\n            placeholder={placeHolder}\r\n            readOnly={true}\r\n            value={value}/>\r\n        let inputGroup;\r\n        if (suffix === undefined)\r\n            inputGroup = input;\r\n        else\r\n            inputGroup = <div className=\"input-group\">\r\n                {input}\r\n                <div className=\"input-group-append\">\r\n                    <span className=\"input-group-text\">{suffix}</span>\r\n                </div>\r\n            </div>;\r\n        return inputGroup;\r\n        /*\r\n            return <div \r\n            className=\"form-control form-control-plaintext border border-info rounded bg-light cursor-pointer\">\r\n            {value} &nbsp;\r\n        </div>;\r\n        */\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { IObservableArray, observable } from 'mobx';\r\nimport _ from 'lodash';\r\nimport { List, FA, Muted } from 'tonva-react-form';\r\nimport { Page, nav } from 'tonva-tools';\r\nimport { ViewModel, RowContent, TypeContent, JSONContent } from './viewModel';\r\nimport { ArrFields, Field } from '../../entities';\r\nimport { VForm, FieldInputs, FormMode } from './vForm';\r\nimport { FormArr } from '../formUI';\r\n\r\nexport type ArrEditRow = (initValues:any, onRowChanged:(rowValues:any)=>void) => Promise<void>;\r\n\r\nexport class VArr extends ViewModel {\r\n    protected mode: FormMode;\r\n    protected label: any;\r\n    protected header: any;\r\n    protected footer: any;\r\n    protected rowValues: any;                 // 仅仅用来判断是不是新增，undefined则是新增\r\n    protected onEditRow: ArrEditRow;\r\n    protected ownerForm:VForm;\r\n    protected vForm:VForm;\r\n    protected rowContent:TypeContent;\r\n    protected none: string;\r\n    protected newSubmitCaption: string;\r\n    protected editSubmitCaption: string;\r\n    protected addRow: ()=>Promise<void>;\r\n\r\n    name:string;\r\n    list: IObservableArray<any>;\r\n\r\n    constructor(ownerForm:VForm, arr:ArrFields, onEditRow?:ArrEditRow) {\r\n        super();\r\n        this.ownerForm = ownerForm;\r\n        let {name, fields} = arr;\r\n        this.name = name;\r\n        let {ui, res, mode, inputs, values} = ownerForm;\r\n        let arrsRes = res.arrs;\r\n        let arrRes = arrsRes !== undefined? arrsRes[name] : {};\r\n        let {label, none, newSubmit, editSubmit} = arrRes;\r\n        this.none = none || ownerForm.none;\r\n        this.newSubmitCaption = newSubmit || ownerForm.arrNewCaption;\r\n        this.editSubmitCaption = editSubmit || ownerForm.arrEditCaption;\r\n        this.label = label || name;\r\n        let arrUI = ((ui && ui.items[name]) || {}) as FormArr;\r\n        this.rowContent = arrUI.rowContent;// || JSONContent;\r\n        this.mode = mode;\r\n        if (this.onEditRow === undefined) {\r\n            this.vForm = new VForm({\r\n                fields: fields,\r\n                arrs: undefined,\r\n                ui: arrUI,\r\n                res: arrRes,\r\n                inputs: inputs[name] as FieldInputs,\r\n                none: ownerForm.none,\r\n                submitCaption: 'submit',\r\n                arrNewCaption: undefined,\r\n                arrEditCaption: undefined,\r\n                arrTitleNewButton: undefined,\r\n                mode: mode,\r\n            }, \r\n            mode===FormMode.readonly? undefined: this.onSubmit);\r\n        }\r\n        else {\r\n            this.onEditRow = onEditRow;\r\n        }\r\n        this.list = values[name];\r\n    }\r\n\r\n    reset() {\r\n        this.vForm.reset();\r\n        this.list.clear();\r\n    }\r\n\r\n    setAddRow(addRow:()=>Promise<void>) {\r\n        this.addRow = addRow;\r\n    }\r\n\r\n    protected rowPage = () => {\r\n        return <Page header={this.label} back=\"close\">\r\n            {this.vForm.render('py-3')}\r\n        </Page>\r\n    }\r\n    private onSubmit = async () => {\r\n        let {valueBoxs} = this.vForm;\r\n        await this.onRowChanged(valueBoxs);\r\n    }\r\n\r\n    private onRowChanged = async (rowValues:any) => {\r\n        if (this.rowValues === undefined) {\r\n            rowValues.$owner = this.ownerForm.values;\r\n            this.list.push(rowValues);\r\n            if (this.onEditRow === undefined)\r\n                this.vForm.reset();\r\n            else\r\n                await this.onEditRow(undefined, this.onRowChanged);\r\n        }\r\n        else {\r\n            _.merge(this.rowValues, rowValues);\r\n            if (this.onEditRow === undefined) nav.pop();\r\n        }\r\n    }\r\n\r\n    private renderItem = (item:any, index:number) => {\r\n        if (this.rowContent === undefined)\r\n            return <div className=\"px-3 py-2\"><JSONContent {...item} /></div>\r\n        return <this.rowContent {...item} />;\r\n    }\r\n    private showRow = async (rowValues:any):Promise<any> => {\r\n        if (this.onEditRow !== undefined) {\r\n            await this.onEditRow(rowValues, this.onRowChanged);\r\n            return;\r\n        }\r\n        this.vForm.reset();\r\n        if (rowValues !== undefined) this.vForm.setValues(rowValues);\r\n        nav.push(<this.rowPage />);\r\n    }\r\n    private editRow = async (rowValues:any): Promise<void> => {\r\n        this.rowValues = rowValues;\r\n        let {vSubmit} = this.vForm;\r\n        if (vSubmit !== undefined) {\r\n            vSubmit.caption = this.editSubmitCaption;\r\n            vSubmit.className = 'btn btn-outline-success';\r\n        }\r\n        this.vForm.mode = this.ownerForm.mode;\r\n        await this.showRow(rowValues);\r\n    }\r\n    private internalAddRow = async () => {\r\n        this.rowValues = undefined;\r\n        let {vSubmit} = this.vForm;\r\n        vSubmit.caption = this.newSubmitCaption;\r\n        vSubmit.className = 'btn btn-outline-success';\r\n        this.vForm.reset();\r\n        this.vForm.mode = FormMode.new;\r\n        await this.showRow(undefined);\r\n    }\r\n\r\n    protected view = () => {\r\n        let button;\r\n        if (this.addRow !== undefined || this.mode !== FormMode.readonly) {\r\n            button = <button onClick={this.addRow || this.internalAddRow}\r\n                type=\"button\" \r\n                className=\"btn btn-link p-0\">\r\n                {this.ownerForm.arrTitleNewButton}\r\n            </button>;\r\n        }\r\n        let header = this.header || <div className=\"px-3 bg-light small\" style={{paddingTop:'1px', paddingBottom:'1px'}}>\r\n            <div className=\"flex-fill align-self-center\">{this.label}</div>\r\n            {button}\r\n        </div>;\r\n        return <List className=\"pb-3\"\r\n            header={header}\r\n            none={<Muted className=\"px-3 py-2\">{this.none}</Muted>}\r\n            items={this.list}\r\n            item={{render: this.renderItem, onClick: this.editRow}} />;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { tv } from '../../../tools';\r\nimport { Field, Tuid } from '../../../entities';\r\nimport { VField, RedMark } from \"./vField\";\r\nimport { FieldUI } from '../../formUI';\r\nimport { VForm, FieldInput, FormMode } from '../vForm';\r\nimport { FieldRes } from '../vBand';\r\n\r\nconst buttonStyle:React.CSSProperties = {\r\n    textAlign:'left', \r\n    paddingLeft:'0.75rem', \r\n    paddingRight:'0.75rem', \r\n    overflow: 'hidden'\r\n};\r\n\r\nexport class VTuidField extends VField {\r\n    protected vForm: VForm;\r\n    protected input: FieldInput;\r\n    protected tuid: Tuid;\r\n\r\n    constructor(vForm: VForm, field:Field, fieldUI: FieldUI, fieldRes:FieldRes) {\r\n        super(vForm, field, fieldUI, fieldRes);\r\n        this.tuid = field._tuid;\r\n        this.vForm = vForm;\r\n        this.input = vForm.inputs[field.name] as FieldInput;\r\n    }\r\n\r\n    onClick = async () => {\r\n        if (this.readonly === true) {\r\n            if (!this.value) return;\r\n            await this.tuid.showInfo(this.value.id);\r\n            return;\r\n        }\r\n        let id:number;\r\n        if (this.input !== undefined) {\r\n            id = await this.input.select(this.vForm, this.field, this.vForm.getValues());\r\n        }\r\n        else {\r\n            alert('call undefined');\r\n            id = 0;\r\n        }\r\n        this.setValue(this.tuid.boxId(id));\r\n    }\r\n    protected view = observer(() => {\r\n        let {placeHolder} = this.fieldRes;\r\n        let disabled:boolean = false;\r\n        let {_ownerField} = this.field;\r\n        if (_ownerField !== undefined) {\r\n            let {name, arr} = _ownerField;\r\n            disabled = this.vForm.getValue(name) === null;\r\n        }\r\n        let content;\r\n        if (this.value === null)\r\n            content = <>{placeHolder || this.input.placeHolder}</>;\r\n        else if (typeof this.value === 'object') {\r\n            content = tv(this.value);\r\n        }\r\n        else {\r\n            let idBox = this.tuid.boxId(this.value);\r\n            content = tv(idBox); // idBox.content();\r\n        }\r\n        if (this.readonly === true)\r\n        {\r\n            return <div \r\n                className=\"form-control form-control-plaintext border border-info rounded bg-light cursor-pointer\"\r\n                onClick={this.onClick}>\r\n                {content}\r\n            </div>;\r\n        }\r\n        let redDot;\r\n        let {required} = this.fieldUI;\r\n        if (required === true || this.field.null === false) {\r\n            redDot = <RedMark />;\r\n        }\r\n        return <>\r\n            {redDot}\r\n            <button className=\"form-control btn btn-outline-info\"\r\n                type=\"button\"\r\n                disabled={disabled}\r\n                style={buttonStyle}\r\n                onClick={this.onClick}>\r\n                {content}\r\n            </button>\r\n        </>;\r\n    })\r\n}\r\n","import { VBand, VFieldBand, VArrBand, VFieldsBand, VSubmitBand, FieldRes } from \"./vBand\";\r\nimport { Field, ArrFields } from \"../../entities\";\r\nimport { VForm, FormOptions } from \"./vForm\";\r\nimport { FormItems, FieldUI, FormItem } from \"../formUI\";\r\nimport { VSubmit } from \"./vSubmit\";\r\nimport { VField, buildVField, VComputeField } from \"./vField\";\r\nimport { VArr } from \"./vArr\";\r\nimport { VTuidField } from \"./vField/vTuidField\";\r\n\r\nexport class BandsBuilder {\r\n    private vForm: VForm;\r\n    private onSubmit: (values:any)=>Promise<void>;\r\n    private fields: Field[];\r\n    private arrs: ArrFields[];\r\n    private formItems: FormItems;\r\n    private layout: string[];\r\n    private res: any;\r\n    constructor(vForm:VForm, options: FormOptions, onSubmit: (values:any)=>Promise<void>) {\r\n        this.vForm = vForm;\r\n        this.onSubmit = onSubmit;\r\n        let {fields, arrs, ui, res} = options;\r\n        this.fields = fields;\r\n        this.arrs = arrs;\r\n        if (ui !== undefined) {\r\n            let {items, layout} = ui;\r\n            this.formItems = items;\r\n            this.layout = layout;\r\n        }\r\n        this.res = res;\r\n    }\r\n\r\n    build():VBand[] {\r\n        //return this.bandUIs === undefined? this.bandsOnFly() : this.bandsFromUI();\r\n        return this.layout === undefined? this.bandsOnFly() : this.bandsFromLayout();\r\n    }\r\n\r\n    private resFromName(name:string, res:any):string|FieldRes {\r\n        if (res === undefined) return;\r\n        let {fields} = res;\r\n        if (fields === undefined) return;\r\n        return fields[name] || name;\r\n    }\r\n\r\n    private bandsOnFly():VBand[] {\r\n        let bands:VBand[] = [];\r\n        this.bandsFromFields(bands, this.fields, this.res);\r\n        if (this.arrs !== undefined) {\r\n            for (let arr of this.arrs) bands.push(this.bandFromArr(arr));\r\n        }\r\n        if (this.onSubmit !== undefined) {\r\n            bands.push(new VSubmitBand(new VSubmit(this.vForm)));\r\n        }\r\n        return bands;\r\n    }\r\n\r\n    private bandsFromFields(bands:VBand[], fields:Field[], res:any) {\r\n        if (fields === undefined) return;\r\n        for (let field of fields) bands.push(this.bandFromField(field, res));\r\n    }\r\n\r\n    private bandsFromLayout():VBand[] {\r\n        let bands:VBand[] = [];\r\n        /*\r\n        for (let bandUI of this.bandUIs)  {\r\n            let band = this.bandFromUI(bandUI);\r\n            bands.push(band);\r\n        }\r\n        */\r\n        return bands;\r\n    }\r\n\r\n    /*\r\n    private bandFromUI(bandUI:BandUI):VBand {\r\n        let {band} = bandUI;\r\n        switch (band) {\r\n            default: return this.bandFromFieldUI(bandUI as FieldBandUI);\r\n            case 'arr': return this.bandFromArrUI(bandUI as ArrBandUI);\r\n            case 'fields': return this.bandFromFieldsUI(bandUI as FieldsBandUI);\r\n            case 'submit': return this.bandFromSubmitUI(bandUI as SubmitBandUI);\r\n        }\r\n    }\r\n    \r\n    private bandFromFieldUI(bandUI: FieldBandUI): VFieldBand {\r\n        let {label} = bandUI;\r\n        let vField = this.vFieldFromUI(bandUI);\r\n        return new VFieldBand(label, vField);\r\n    }\r\n    private bandFromArrUI(bandUI: ArrBandUI): VArrBand {\r\n        let {label, name} = bandUI;\r\n        let vArr = this.vArrFromUI(bandUI);\r\n        return new VArrBand(label, vArr);\r\n    }\r\n    private bandFromFieldsUI(bandUI: FieldsBandUI): VFieldsBand {\r\n        let {label, fieldUIs} = bandUI;\r\n        let vFields = fieldUIs.map(v => this.vFieldFromUI(v));\r\n        return new VFieldsBand(label, vFields);\r\n    }\r\n    private bandFromSubmitUI(bandUI: SubmitBandUI): VSubmitBand {\r\n        if (this.onSubmit === undefined) return;\r\n        let vSubmit = new VSubmit(this.vForm);\r\n        return new VSubmitBand(vSubmit);\r\n    }\r\n    */\r\n/*\r\n    private vFieldFromField(field:Field, fieldRes:FieldRes, formItem: FormItem): VField {\r\n        let fieldUI:FieldUI = undefined;\r\n        if (formItem !== undefined) {\r\n            if (typeof formItem === 'function') {\r\n                return new VComputeField(this.vForm, field, fieldRes);\r\n            }\r\n        }\r\n        let ret = buildVField(this.vForm, field, formItem, fieldRes);\r\n        if (ret !== undefined) return ret;\r\n        return new VTuidField(field, fieldUI, fieldRes, this.vForm);\r\n    }\r\n*/\r\n    private bandFromField(field:Field, res:any):VBand {\r\n        let {name} = field;\r\n        let fieldRes:FieldRes;\r\n        let rfn = this.resFromName(name, res);\r\n        let label:string;\r\n        if (typeof rfn === 'object') {\r\n            label = rfn.label;\r\n            fieldRes = rfn;\r\n        }\r\n        else {\r\n            label = rfn as string;\r\n            fieldRes = undefined;\r\n        }\r\n        let vField:VField;\r\n        let formItem:FormItem;\r\n        if (this.formItems !== undefined) formItem = this.formItems[name];\r\n        //let vField = this.vFieldFromField(field, fieldRes as FieldRes, formItem);\r\n        //let fieldUI:FieldUI = undefined;\r\n        if (typeof formItem === 'function') {\r\n            vField = new VComputeField(this.vForm, field, fieldRes);\r\n        }\r\n        else {\r\n            vField = buildVField(this.vForm, field, formItem as FieldUI, fieldRes);\r\n        }\r\n        if (vField === undefined) {\r\n            vField = new VTuidField(this.vForm, field, formItem as FieldUI, fieldRes);\r\n        }\r\n        return new VFieldBand(label || name, vField);\r\n    }\r\n\r\n    private bandFromArr(arr: ArrFields):VBand {\r\n        let {name, fields} = arr;\r\n        //let row = JSONContent;\r\n        //let bands:VBand[] = [];\r\n        //this.bandsFromFields(bands, fields, res);\r\n        let vArr = new VArr(this.vForm, arr); // name, res && res.label || name, row, bands);\r\n        return new VArrBand(name, vArr);\r\n    }\r\n\r\n    /*\r\n    private vFieldFromUI(fieldUI:FieldUI):VField {\r\n        return;\r\n    }\r\n\r\n    private vArrFromUI(arrBandUI:ArrBandUI):VArr {\r\n        return;\r\n    }\r\n    */\r\n}\r\n","import { VField, VIntField, VDecField, VStringField, VTextField, VDateTimeField } from './vField';\r\nimport { Field } from '../../../entities';\r\nimport { FieldRes } from '../vBand';\r\nimport { VForm } from '../vForm';\r\nimport { FieldUI } from '../../formUI';\r\n\r\nexport function buildVField(form:VForm, field: Field, fieldUI: FieldUI, fieldRes:FieldRes): VField {\r\n    let vField:new (form:VForm, field:Field, ui:FieldUI, fieldRes:FieldRes) => VField;\r\n    switch (field.type) {\r\n        default: return;\r\n        case 'tinyint':\r\n        case 'smallint':\r\n        case 'int':\r\n            vField = VIntField;\r\n            break;\r\n        case 'bigint':\r\n            let {_tuid} = field;\r\n            if (_tuid !== undefined) return;\r\n            vField = VIntField;\r\n            break;\r\n        case 'dec':\r\n            vField = VDecField;\r\n            break;\r\n        case 'char':\r\n            vField = VStringField;\r\n            break;\r\n        case 'text':\r\n            vField = VTextField;\r\n            break;\r\n        case 'datetime':\r\n            vField = VDateTimeField;\r\n            break;\r\n    }\r\n    return new vField(form, field, fieldUI, fieldRes);\r\n}\r\n\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport { observer } from \"mobx-react\";\r\nimport { VBand } from './vBand';\r\nimport { BandsBuilder } from './bandsBuilder';\r\nimport { Field, ArrFields } from '../../entities';\r\nimport { computed, observable, IObservableObject, IObservableValue } from 'mobx';\r\nimport { VArr } from './vArr';\r\nimport { FormUI, FormUIBase, FormItems } from '../formUI';\r\nimport { VField } from './vField';\r\nimport { VSubmit } from './vSubmit';\r\nimport { IObservableArray } from 'mobx';\r\nimport { FA } from 'tonva-react-form';\r\n\r\nexport type FieldCall = (form:VForm, field:Field, values:any) => Promise<any>;\r\nexport interface FieldInput {\r\n    select: FieldCall;\r\n    content: React.StatelessComponent<any>;\r\n    placeHolder: string;\r\n}\r\nexport interface FieldInputs {\r\n    [fieldOrArr:string]: FieldInput | {[field:string]: FieldInput};\r\n}\r\nexport enum FormMode {new, edit, readonly}\r\n\r\nexport interface FormOptions {\r\n    fields: Field[];\r\n    arrs?: ArrFields[];\r\n    ui: FormUIBase;\r\n    res: any;\r\n    inputs: FieldInputs;\r\n    submitCaption: string;\r\n    arrNewCaption: string;\r\n    arrEditCaption: string;\r\n    arrTitleNewButton: JSX.Element;\r\n    none: string;\r\n    mode: FormMode;\r\n}\r\n\r\nexport class VForm {\r\n    protected fields: Field[];\r\n    protected arrs: ArrFields[];\r\n    protected bands: VBand[];\r\n    protected bandColl: {[key:string]: VBand};\r\n    protected onSubmit: ()=>Promise<void>;\r\n\r\n    constructor(options: FormOptions, onSubmit: ()=>Promise<void>) {\r\n        let {fields, arrs, ui, res, inputs, none, submitCaption, arrNewCaption, arrEditCaption, arrTitleNewButton, mode} = options;\r\n        this.fields = fields;\r\n        this.arrs = arrs;\r\n        this.ui = ui;\r\n        if (this.ui !== undefined) this.formItems = this.ui.items; //.compute = this.ui.compute;\r\n        this.res = res;\r\n        this.inputs = inputs;\r\n        this.none = none;\r\n        this.submitCaption = submitCaption;\r\n        this.arrNewCaption = arrNewCaption;\r\n        this.arrEditCaption = arrEditCaption;\r\n        this.arrTitleNewButton = arrTitleNewButton || <small><FA name=\"plus\" /> 新增</small>;\r\n        if (onSubmit === undefined) this.mode = FormMode.readonly;\r\n        else this.mode = mode;\r\n        this.buildFormValues();\r\n        this.buildBands(options, onSubmit);\r\n        this.onSubmit = onSubmit;\r\n    }\r\n\r\n    ui: FormUI;\r\n    res: any;\r\n    values: any;\r\n    errors: any;\r\n    formItems: FormItems;\r\n    mode: FormMode;\r\n    vFields: {[name:string]:VField} = {};\r\n    vArrs: {[name:string]: VArr} = {};\r\n    vSubmit: VSubmit;\r\n    inputs: FieldInputs;\r\n    none: string;\r\n    submitCaption: string;\r\n    arrNewCaption: string;\r\n    arrEditCaption: string;\r\n    arrTitleNewButton: JSX.Element;\r\n\r\n    private buildBands(options: FormOptions, onSubmit: (values:any)=>Promise<void>) {\r\n        this.bandColl = {};\r\n        let bandsBuilder = new BandsBuilder(this, options, onSubmit);\r\n        this.bands = bandsBuilder.build();\r\n        for (let band of this.bands) {\r\n            this.bandColl[band.key] = band;\r\n            let vFields = band.getVFields();\r\n            if (vFields !== undefined) for (let f of vFields) this.vFields[f.name] = f;\r\n            let vArr = band.getVArr();\r\n            if (vArr !== undefined) this.vArrs[vArr.name] = vArr;\r\n            let vSubmit = band.getVSubmit();\r\n            if (vSubmit !== undefined) this.vSubmit = vSubmit;\r\n        }\r\n    }\r\n\r\n    private onFormSubmit = (event:React.FormEvent<any>) => {\r\n        event.preventDefault();\r\n        return false;\r\n    }\r\n\r\n    protected view = observer(({className}:{className:string}) => {\r\n        return <form className={className} onSubmit={this.onFormSubmit}>\r\n            {this.bands.map(v => v.render())}\r\n        </form>;\r\n    });\r\n\r\n    getBand(name:string) {\r\n        return this.bandColl[name];\r\n    }\r\n\r\n    computeFields() {\r\n        if (this.formItems === undefined) return;\r\n        let values = this.values;\r\n        for (let i in this.formItems) {\r\n            let item = this.formItems[i];\r\n            if (typeof item !== 'function') continue;\r\n            values[i] = item.call(this, values);\r\n        }\r\n    }\r\n\r\n    async submit() {\r\n        if (this.onSubmit === undefined) return;\r\n        await this.onSubmit();\r\n    }\r\n    \r\n    getValues() {\r\n        let ret:any = {};\r\n        let values = this.values;\r\n        for (let f of this.fields) {\r\n            let {name} = f;\r\n            let v = values[name]\r\n            ret[name] =  v !== null && typeof v === 'object' ? v.id : v;\r\n        }\r\n        if (this.arrs !== undefined) {\r\n            for (let arr of this.arrs) {\r\n                let {name, fields, id, order} = arr;\r\n                let list = ret[name] = [];\r\n                let rows = this.vArrs[name].list;\r\n                for (let row of rows) {\r\n                    let item = {} as any;\r\n                    if (id !== undefined) item[id] = row[id];\r\n                    if (order !== undefined) item[order] = row[order];\r\n                    for (let f of fields) {\r\n                        let {name:fn} = f;\r\n                        let v = row[fn]\r\n                        item[fn] =  v !== null && typeof v === 'object' ? v.id : v;\r\n                    }\r\n                    list.push(item);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    get valueBoxs() {\r\n        let ret:any = {};\r\n        let values = this.values;\r\n        for (let f of this.fields) {\r\n            let {name, _tuid} = f;\r\n            let v = values[name]\r\n            ret[name] =  _tuid === undefined || typeof v === 'object' ? v : _tuid.boxId(v);\r\n        }\r\n        if (this.arrs === undefined) return ret;\r\n        for (let arr of this.arrs) {\r\n            let {name, fields, id, order} = arr;\r\n            let list = ret[name] = this.vArrs[name].list.slice();\r\n            for (let row of list) {\r\n                for (let f of fields) {\r\n                    let {name:fn, _tuid} = f;\r\n                    let v = row[fn]\r\n                    row[fn] =  _tuid === undefined || typeof v === 'object' ? v : _tuid.boxId(v);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    setValues(initValues:any) {\r\n        if (initValues === undefined) {\r\n            this.reset();\r\n            return;\r\n        }\r\n        let values = this.values;\r\n        let errors = this.errors;\r\n        for (let f of this.fields) {\r\n            let fn = f.name;\r\n            errors[fn] = undefined;\r\n            let v =  initValues[fn];\r\n            values[fn] = v;\r\n        }\r\n        // 还要设置arrs的values\r\n        for (let i in this.vArrs) {\r\n            let list = initValues[i];\r\n            if (list === undefined) continue;\r\n            let arrList = values[i] as IObservableArray<any>;\r\n            arrList.clear();\r\n            arrList.push(...list);\r\n        }\r\n    }\r\n\r\n    @computed get isOk():boolean {\r\n        for (let i in this.vFields) {\r\n            if (this.vFields[i].isOk === false) return false;\r\n        }\r\n        return true;\r\n    }\r\n    reset() {\r\n        let values = this.values;\r\n        let errors = this.errors;\r\n        for (let f of this.fields) {\r\n            let fn = f.name;\r\n            //if (this.compute !== undefined && this.compute[fn] !== undefined) continue;\r\n            values[fn] = null;\r\n            errors[fn] = undefined;\r\n        }\r\n        for (let i in this.vFields) {\r\n            let ctrl = this.vFields[i];\r\n            let cn = ctrl.name;\r\n            if (cn === undefined) continue;\r\n            //if (this.compute !== undefined && this.compute[cn] !== undefined) continue;\r\n            ctrl.setValue(null);\r\n        }\r\n        for (let i in this.vArrs) {\r\n            let vArr = this.vArrs[i];\r\n            vArr.reset();\r\n        }\r\n    }\r\n\r\n    getValue(fieldName: string) {\r\n        return this.values[fieldName];\r\n    }\r\n    setValue(fieldName: string, value: any) { this.values[fieldName] = value }\r\n\r\n    setError(fieldName:string, error:string) {this.errors[fieldName] = error}\r\n\r\n    private buildFieldValues(fields: Field[]):any {\r\n        let v: {[p:string]: any} = {\r\n            valueFromFieldName: function(propName:string) {\r\n                return this[propName];\r\n            }\r\n        };\r\n        for (let f of fields) {\r\n            let fn = f.name;\r\n            v[fn] = null;\r\n        }\r\n        return v;\r\n    }\r\n    private buildObservableValues():IObservableObject {\r\n        let v: {[p:string]: any} = this.buildFieldValues(this.fields);\r\n        if (this.arrs !== undefined) {\r\n            for (let arr of this.arrs) {\r\n                v[arr.name] = observable.array([], {deep:true});\r\n            }\r\n        }\r\n        let ret = observable(v);\r\n        return ret;\r\n    }\r\n    private buildFormValues() {\r\n        this.values = this.buildObservableValues();\r\n        this.errors = observable(this.buildFieldValues(this.fields));\r\n    }\r\n\r\n    render(className:string = \"py-3\"):JSX.Element {\r\n        return <this.view className={className} />\r\n    }\r\n}\r\n","export * from './vForm';\r\n","import {bridgeCenterApi, isBridged} from './appBridge';\r\nimport {FetchError} from '../fetchError';\r\nimport {HttpChannelUI} from './httpChannelUI';\r\nimport {nav} from '../ui/nav';\r\nimport { isDevelopment } from './host';\r\n\r\nexport async function httpGet(url:string, params?:any):Promise<any> {\r\n    let channel = new HttpChannel(false, url, undefined, undefined);\r\n    let ret = await channel.get('', params);\r\n    return ret;\r\n}\r\n\r\nexport async function httpPost(url:string, params?:any):Promise<any> {\r\n    let channel = new HttpChannel(false, url, undefined, undefined);\r\n    let ret = await channel.post('', params);\r\n    return ret;\r\n}\r\n\r\nexport class HttpChannel {\r\n    private isCenter: boolean;\r\n    private hostUrl: string;\r\n    private apiToken: string;\r\n    private ui?: HttpChannelUI;\r\n    private timeout: number;\r\n\r\n    constructor(isCenter: boolean, hostUrl: string, apiToken:string, ui?: HttpChannelUI) {\r\n        this.isCenter = isCenter;\r\n        this.hostUrl = hostUrl;\r\n        this.apiToken = apiToken;\r\n        this.ui = ui;\r\n        this.timeout = isDevelopment === true? 500000:5000;\r\n    }\r\n\r\n    private startWait = () => {\r\n        if (this.ui !== undefined) this.ui.startWait();\r\n    }\r\n\r\n    private endWait = (url?:string, reject?:(reason?:any)=>void) => {\r\n        if (this.ui !== undefined) this.ui.endWait();\r\n        if (reject !== undefined) reject('访问webapi超时 ' + url);\r\n    }\r\n\r\n    private showError = async (error:FetchError) => {\r\n        if (this.ui !== undefined) await this.ui.showError(error);\r\n    }\r\n\r\n    used() {\r\n        this.post('', {});\r\n    }\r\n\r\n    async get(url: string, params: any = undefined): Promise<any> {\r\n        if (params) {\r\n            let keys = Object.keys(params);\r\n            if (keys.length > 0) {\r\n                let c = '?';\r\n                for (let k of keys) {\r\n                    let v = params[k];\r\n                    if (v === undefined) continue;\r\n                    url += c + k + '=' + params[k];\r\n                    c = '&';\r\n                }\r\n            }\r\n        }\r\n        let options = this.buildOptions();\r\n        options.method = 'GET';\r\n        return await this.innerFetch(url, options);\r\n    }\r\n\r\n    async post(url: string, params: any): Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = 'POST';\r\n        options.body = JSON.stringify(params);\r\n        return await this.innerFetch(url, options);\r\n    }\r\n\r\n    async put(url: string, params: any): Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = 'PUT';\r\n        options.body = JSON.stringify(params);\r\n        return await this.innerFetch(url, options);\r\n    }\r\n\r\n    async delete(url: string, params: any): Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = 'DELETE';\r\n        options.body = JSON.stringify(params);\r\n        return await this.innerFetch(url, options);\r\n    }\r\n    async fetch(url: string, options: any, resolve:(value?:any)=>any, reject:(reason?:any)=>void):Promise<void> {\r\n        let that = this;\r\n        this.startWait();\r\n        let path = url;\r\n        function buildError(err: string) {\r\n            return {\r\n                channel: that,\r\n                url: path,\r\n                options: options,\r\n                resolve: resolve,\r\n                reject: reject,\r\n                error: err,\r\n            }\r\n        }\r\n        try {\r\n            console.log('%s %s', options.method, path);\r\n            let timeOutHandler = setTimeout(() => that.endWait(url, reject), this.timeout);\r\n            let res = await fetch(encodeURI(path), options);\r\n            if (res.ok === false) {\r\n                clearTimeout(timeOutHandler);\r\n                that.endWait();\r\n                console.log('call error %s', res.statusText);\r\n                throw res.statusText;\r\n            }\r\n            let ct = res.headers.get('content-type');\r\n            if (ct && ct.indexOf('json')>=0) {\r\n                return res.json().then(async retJson => {\r\n                    clearTimeout(timeOutHandler);\r\n                    that.endWait();\r\n                    if (retJson.ok === true) {\r\n                        return resolve(retJson.res);\r\n                    }\r\n                    if (retJson.error === undefined) {\r\n                        await that.showError(buildError('not valid tonva json'));\r\n                    }\r\n                    else {\r\n                        await that.showError(buildError(retJson.error));\r\n                        reject(retJson.error);\r\n                    }\r\n                    //throw retJson.error;\r\n                }).catch(async error => {\r\n                    await that.showError(buildError(error.message));\r\n                });\r\n            }\r\n            else {\r\n                let text = await res.text();\r\n                clearTimeout(timeOutHandler);\r\n                that.endWait();\r\n                resolve(text);\r\n            }\r\n        }\r\n        catch(error) {\r\n            if (typeof error === 'string') {\r\n                if (error.toLowerCase().startsWith('unauthorized') === true) {\r\n                    nav.logout();\r\n                    return;\r\n                }\r\n            }\r\n            await this.showError(buildError(error.message));\r\n        };\r\n    }\r\n\r\n    private async innerFetch(url: string, options: any): Promise<any> {\r\n        let u = this.hostUrl + url;\r\n        if (this.isCenter === true && this.apiToken === undefined && isBridged())\r\n            return await bridgeCenterApi(u, options.method, options.body);\r\n        return await new Promise<any>(async (resolve, reject) => {\r\n            await this.fetch(u, options, resolve, reject);\r\n        });\r\n    }\r\n\r\n    async callFetch(url:string, method:string, body:any):Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = method;\r\n        options.body = body;\r\n        return await new Promise<any>(async (resolve, reject) => {\r\n            await this.fetch(url, options, resolve, reject);\r\n        });\r\n    }\r\n\r\n    private buildOptions(): any {\r\n        let {language, culture} = nav;\r\n        let headers = new Headers();\r\n        //headers.append('Access-Control-Allow-Origin', '*');\r\n        headers.append('Content-Type', 'application/json;charset=UTF-8');\r\n        let lang = language;\r\n        if (culture) lang += '-' + culture;\r\n        headers.append('Accept-Language', lang);\r\n        if (this.apiToken) { \r\n            headers.append('Authorization', this.apiToken); \r\n        }\r\n        let options = {\r\n            headers: headers,\r\n            // cache: 'no-cache',\r\n        };\r\n        return options;\r\n    }\r\n}\r\n","import _ from 'lodash';\r\n\r\nexport interface KeyValueRes {\r\n    [key:string]: any;\r\n}\r\n\r\nexport interface Res<T extends KeyValueRes> {\r\n    [lang:string]: T | {[district:string]: T};\r\n}\r\n\r\nexport const resOptions:{lang:string, district:string} = {\r\n    lang: undefined,\r\n    district: undefined,\r\n}\r\n\r\nexport function setResOptions(lang:string, district:string) {\r\n    resOptions.lang = lang;\r\n    resOptions.district = district;\r\n}\r\n\r\n(function() {\r\n    let lang: string, district: string;\r\n    let language = navigator.languages && navigator.languages[0] || // Chrome / Firefox\r\n        navigator.language; // ||   // All browsers\r\n    //navigator.userLanguage; // IE <= 10\r\n    if (!language) {\r\n        lang = 'zh';\r\n        district = 'CN';\r\n    }\r\n    else {\r\n        let parts = language.split('-');\r\n        lang = parts[0];\r\n        if (parts.length > 1) district = parts[1];\r\n    }\r\n    setResOptions(lang, district);\r\n}());\r\n\r\nexport function resLang<T extends KeyValueRes>(res:Res<T>):T {\r\n    let {lang, district} = resOptions;\r\n    let ret:T = {} as T;\r\n    if (res === undefined) return ret;\r\n    _.merge(ret, res._);\r\n    let l = res[lang];\r\n    if (l === undefined) return ret;\r\n    _.merge(ret, l._);\r\n    let d = l[district];\r\n    if (d === undefined) return ret;\r\n    _.merge(ret, d);\r\n    let {entity} = ret;\r\n    if (entity !== undefined) {\r\n        for (let i in entity) {\r\n            entity[i.toLowerCase()] = entity[i];\r\n        }\r\n    }\r\n    return ret;\r\n}\r\n","export * from './CApp';\r\nexport * from './startApp';\r\nexport * from './uq';\r\nexport * from './action';\r\nexport * from './tuid';\r\nexport * from './sheet';\r\nexport * from './query';\r\nexport * from './map';\r\nexport * from './history';\r\nexport * from './pending';\r\nexport * from './form/viewModel';\r\nexport * from './form';\r\nexport * from './formUI';\r\nexport * from './ControllerUq';\r\nexport * from './CVEntity';\r\nexport * from './link';\r\nexport * from './icons';\r\n","import * as React from 'react';\r\nimport {observable, computed} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face} from '../face';\r\nimport {Rule} from '../rule';\r\n\r\nexport abstract class ControlBase {\r\n    protected formView: FormView;\r\n    constructor(formView:FormView) {\r\n        this.formView = formView;\r\n    }\r\n    render():JSX.Element {\r\n        return <div className=\"col-sm-10\">\r\n            {this.renderControl()}\r\n        </div>;\r\n    }\r\n    protected abstract renderControl():JSX.Element;\r\n    @computed get hasError():boolean {return false;}\r\n    @computed get filled():boolean {return false;}\r\n    clear() {}\r\n    clearErrors() {}\r\n    readValues(values:any):any {}\r\n    setError(fieldName:string, error:string) {}\r\n    setInitValues(values: any) {}\r\n    isOk():boolean {this.validate(); return !this.hasError;}\r\n    protected validate() {}\r\n}\r\n\r\nexport abstract class Control extends ControlBase {\r\n    protected field: Field;\r\n    protected face: Face;\r\n    protected props: any;\r\n    protected rules: Rule[];\r\n\r\n    protected element: HTMLElement;\r\n    @observable protected isOK?: boolean;\r\n    @observable protected error: string;\r\n    @observable protected value: any;\r\n\r\n    constructor(formView:FormView, field:Field, face:Face) {\r\n        super(formView);\r\n        this.field = field;\r\n        this.face = face;\r\n        this.init();\r\n        this.setProps();\r\n    }\r\n    protected ref(element: HTMLElement) {\r\n        this.element = element;\r\n    }\r\n    protected init() {\r\n        this.rules = [];\r\n        let r = this.field.rules;\r\n        if (r !== undefined) {\r\n            if (Array.isArray(r) === true) this.rules.push(...(r as Rule[]));\r\n            else this.rules.push(r as Rule);\r\n        }\r\n    };\r\n    protected setProps():any {\r\n        return this.props = {\r\n            ref: this.ref.bind(this),\r\n            name: this.field.name,\r\n        }\r\n    };\r\n    @computed get hasError():boolean {return this.error !== undefined;}\r\n    @computed get filled():boolean {\r\n        let ret = this.value !== undefined && this.value !== this.field.defaultValue;\r\n        return ret;\r\n    }\r\n    clearValue() { this.value = undefined; }\r\n    clear() { this.clearErrors(); this.clearValue(); }\r\n    clearErrors() { this.isOK = undefined; this.error = undefined; }\r\n    readValues(values:any):any {\r\n        values[this.field.name] = this.value;\r\n    }\r\n    setError(fieldName:string, error:string) {}\r\n    setInitValues(values: any) {}\r\n    protected getValueFromElement():any {return this.value;}\r\n    protected validate() {\r\n        try {\r\n            let v = this.getValueFromElement();\r\n            if (this.rules.length > 0) {\r\n                let isOk:boolean;\r\n                for (let rule of this.rules) {\r\n                    console.log('validate: %s', v);\r\n                    let err = rule(v);\r\n                    console.log('validate: %s err: %s', v, err);\r\n                    if (err === true) {\r\n                        this.error = undefined;\r\n                        isOk = true;\r\n                    }\r\n                    else if (err !== undefined) {\r\n                        //console.log('field %s onBlur v=%s rule=%s err=%s', \r\n                        //    this.field.name, JSON.stringify(v), rule, err);\r\n                        this.error = err;\r\n                        this.isOK = false;\r\n                        return;\r\n                    }\r\n                }\r\n                this.isOK = isOk;\r\n            }\r\n            this.value = v;\r\n        }\r\n        catch (e) {\r\n            this.error = e.message;\r\n        }\r\n    }\r\n    render():JSX.Element {\r\n        let n;\r\n        if (this.face !== undefined) {\r\n            let {notes} = this.face;\r\n            if (notes !== undefined) n = <small className=\"text-muted\">{notes}</small>;\r\n        }\r\n        return <div className=\"col-sm-10\">\r\n            {this.renderControl()}\r\n            {n}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face} from '../face';\r\nimport {ControlBase} from './control';\r\n\r\nexport class ButtonsControl extends ControlBase {\r\n    constructor(props) {\r\n        super(props);\r\n        this.otherClick = this.otherClick.bind(this);\r\n    }\r\n    private otherClick() {\r\n        let onOther = this.formView.props.onOther;\r\n        if (onOther === undefined) return;\r\n        let values = this.formView.readValues();\r\n        onOther(values);\r\n    }\r\n    renderControl():JSX.Element {\r\n        console.log('buttons.renderControl');\r\n        let nothing = this.formView.nothing;\r\n        let hasError = this.formView.hasError;\r\n        let props = this.formView.props;\r\n        console.log('buttons.renderControl nothing:%s hasError:%s', nothing, hasError);\r\n        let {submitButton, otherButton, onOther} = props;\r\n        let btnOther;\r\n        if (otherButton !== undefined) {\r\n            btnOther = <button className=\"btn btn-outline-info ml-auto\" onClick={this.otherClick}>\r\n                {otherButton}\r\n            </button>\r\n        }\r\n        return <div className=\"d-flex justify-content-start\">\r\n            <button\r\n                className=\"btn btn-primary\"\r\n                type=\"submit\" \r\n                disabled={nothing || hasError}>\r\n                {submitButton || '提交'}\r\n            </button>\r\n            {btnOther}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable, computed} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, Placeholder} from '../face';\r\nimport {Control} from './control';\r\n\r\nconst TxtRequired = '必须填入要求内容';\r\n\r\nexport abstract class CharsControl extends Control {\r\n    protected init() {\r\n        super.init();\r\n        if (this.field.required === true) {\r\n            this.rules.push((v) => {\r\n                if (v===null || v===undefined || (v as string).trim().length === 0) return TxtRequired;\r\n                return true;\r\n            });\r\n        }\r\n    }\r\n\r\n    protected element: HTMLInputElement;\r\n    protected getValueFromElement():any {return this.parseValue(this.element.value)}\r\n\r\n    protected setProps() {\r\n        super.setProps();\r\n        _.assign(this.props, {\r\n            onBlur: this.onBlur.bind(this),\r\n            onFocus: this.onFocus.bind(this),\r\n            onChange: this.onChange.bind(this),\r\n        });\r\n        let face = this.face as Placeholder;\r\n        if (face !== undefined) {\r\n            _.assign(this.props, {\r\n                placeholder: face.placeholder,\r\n            });\r\n        }\r\n        return this.props;\r\n    };\r\n    protected parseValue(value?:string):any {return value;}\r\n    private onBlur() {\r\n        //console.log('field %s onBlure', this.field.name);\r\n        this.validate();\r\n    }\r\n    private onChange() {\r\n        console.log('onChange');\r\n        this.validate();\r\n    }\r\n    private onFocus() {\r\n        this.clearErrors();\r\n        //this.error = undefined;\r\n        //this.formView.clearErrors();\r\n    }\r\n    protected className() {\r\n        return classNames({\r\n            \"form-control\": true,\r\n            \"has-success\": this.isOK === true,\r\n            \"is-invalid\": this.error !== undefined,\r\n            \"is-valid\": this.error === undefined && this.isOK === true,\r\n        });\r\n    }\r\n    protected renderInput():JSX.Element {\r\n        return <input className={this.className()} {...this.props} />;\r\n    }\r\n    protected ref(element: HTMLInputElement) {\r\n        super.ref(element);\r\n        if (element) {\r\n            element.value = this.value === undefined? '':this.value;\r\n        }\r\n    }\r\n    protected renderError():JSX.Element {\r\n        //if (this.field.name === 'name') console.log('charsControl renderControl');\r\n        if (this.error === undefined) return null;\r\n        return <div className=\"invalid-feedback\">{this.error}</div>\r\n    }\r\n    clearValue() { super.clearValue(); this.element.value = ''; }\r\n    setError(fieldName:string, error:string) {\r\n        if (this.field.name === fieldName) this.error = error;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        if (v === undefined) return;\r\n        //this.element.value = v;\r\n        this.value = v;\r\n    }\r\n    renderControl():JSX.Element {\r\n        return <React.Fragment>\r\n            {this.renderInput()}\r\n            {this.renderError()}\r\n        </React.Fragment>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport {CharsControl} from './charsControl';\r\nimport {StringField} from '../field';\r\n\r\nexport class StringControl extends CharsControl {\r\n    protected field: StringField;\r\n    protected setProps() {\r\n        let p = super.setProps();\r\n        _.assign(p, {\r\n            type: 'text',\r\n            maxLength: this.field.maxLength,\r\n        });\r\n        return p;\r\n    };\r\n    protected parseValue(value?:string):any {\r\n        if (value === undefined) return undefined;\r\n        if (value.trim().length === 0) return undefined;\r\n        return value;\r\n    }\r\n}\r\n\r\nexport class PasswordControl extends StringControl {\r\n    protected setProps() {\r\n        let p = super.setProps();\r\n        _.assign(p, {\r\n            type: 'password',\r\n            maxLength: this.field.maxLength,\r\n        });\r\n        return p;\r\n    };\r\n}","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport {IntField, DecField, NumberField} from '../field';\r\nimport {CharsControl} from './charsControl';\r\n\r\nconst ErrInvalidNumber = '无效的数字';\r\nconst ErrMin = '最小值为';\r\nconst ErrMax = '最大值为';\r\n\r\nconst KeyCode_Neg = 45;\r\nconst KeyCode_Dot = 46;\r\n\r\nexport class NumberControl extends CharsControl {\r\n    protected field: IntField | DecField | NumberField;\r\n    protected value: number;\r\n    protected extraChars: number[];\r\n    \r\n    protected init() {\r\n        super.init();\r\n        this.extraChars = [];\r\n        let {min, max} = this.field;\r\n        if (min !== undefined) {\r\n            this.rules.push((v:number) => {if (v === undefined) return; if (v<min) return ErrMin + min; return true;});\r\n            if (min < 0) this.extraChars.push(KeyCode_Neg);\r\n        }\r\n        else {\r\n            this.extraChars.push(KeyCode_Neg);\r\n        }\r\n\r\n        if (max !== undefined) {\r\n            this.rules.push((v:number) => {if (v === undefined) return; if (v>max) return ErrMax + max; return true});\r\n        }\r\n        switch (this.field.type) {\r\n            case 'dec':\r\n            case 'number': this.extraChars.push(KeyCode_Dot); break;\r\n        }\r\n    }\r\n\r\n    protected parseValue(value?:string):any {\r\n        if (value === undefined) return undefined;\r\n        if (value.trim().length === 0) return undefined;\r\n        let n = Number.parseFloat(value);\r\n        if (isNaN(n)) throw new Error(ErrInvalidNumber);\r\n        return n;\r\n    }\r\n\r\n    protected setProps() {\r\n        super.setProps();\r\n        _.assign(this.props, {\r\n            type: 'number',\r\n            step: (this.field as DecField).step,\r\n            onKeyPress: this.onKeyPress.bind(this),\r\n        });\r\n    }\r\n\r\n    onKeyPress(event:KeyboardEvent) {\r\n        let ch = event.charCode;\r\n        if (ch === 8 || ch === 0 || ch === 13 || ch >= 48 && ch <= 57) return;\r\n        if (this.extraChars !== undefined) {\r\n            if (this.extraChars.indexOf(ch) >= 0) {\r\n                switch (ch) {\r\n                    case KeyCode_Dot: this.onKeyDot(); break;\r\n                    case KeyCode_Neg: this.onKeyNeg(); event.preventDefault(); break;\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    private onKeyDot() {\r\n        let v = this.element.value;\r\n        let p = v.indexOf('.');\r\n        if (p >= 0) this.element.value = v.replace('.', '');\r\n    }\r\n    private onKeyNeg() {\r\n        let v = this.element.value;\r\n        let p = v.indexOf('-');\r\n        if (p >= 0) v = v.replace('-', '');\r\n        else v = '-'+v;\r\n        this.element.value = v;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {Control, ControlBase} from './control';\r\nimport {FormView} from '../formView';\r\n\r\nexport class UnknownControl extends Control {\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-plaintext\">\r\n            <div className=\"alert alert-primary\" role=\"alert\">\r\n            don't know how to create control<br/>\r\n            field: {JSON.stringify(this.field)} must be object <br/>\r\n            face: {JSON.stringify(this.face)} must be object <br/>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class EmptyControl extends ControlBase {\r\n    private element:JSX.Element;\r\n    constructor(formView:FormView, element:JSX.Element) {\r\n        super(formView);\r\n        this.element = element;\r\n    }\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-plaintext\">\r\n            {this.element}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, IdPickFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class PickIdControl extends Control {\r\n    protected face: IdPickFace;\r\n    @observable private caption: string|JSX.Element;\r\n\r\n    private onClick = async () => {\r\n        let {pick, fromPicked} = this.face;\r\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\r\n        if (item === undefined) {\r\n            this.value = undefined;\r\n            return;\r\n        }\r\n        if (fromPicked === undefined) {\r\n            this.value = item.id;\r\n            return;\r\n        }\r\n        let {id, caption} = fromPicked(item);\r\n        this.value = id;\r\n        this.caption = caption;\r\n    }\r\n    onPicked = (value: any) => {\r\n        this.value = value.id;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        this.value = v;\r\n    }\r\n    private controlContent():string|JSX.Element {\r\n        let {itemFromId, fromPicked, initCaption} = this.face;\r\n        if (this.value === undefined) {\r\n            return initCaption || '请选择Id';\r\n        }\r\n        if (this.caption !== undefined) {\r\n            return this.caption;\r\n        }\r\n        if (itemFromId !== undefined) {\r\n            if (fromPicked !== undefined) {\r\n                let item = itemFromId(this.value);\r\n                if (item) {\r\n                    let ret = fromPicked(item);\r\n                    if (ret !== undefined) return ret.caption;\r\n                }\r\n            }\r\n        }\r\n        return String(this.value);\r\n    }\r\n    /*\r\n    private buildContent():string|JSX.Element {\r\n        let {tuid, input} = this.face;\r\n        if (input === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n            return <div onClick={this.onClick}>{this.controlContent()}</div>;\r\n        }\r\n        return <input.component id={this.value} \r\n            tuid={tuid}\r\n            input={input}\r\n            entitiesUI={this.formView.props.context} \r\n            params={this.formView.readValues()}\r\n            onPicked={this.onPicked} />;\r\n    }*/\r\n    renderControl():JSX.Element {\r\n        let {tuid, input} = this.face;\r\n        if (input === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n            return <div className=\"form-control-plaintext px-2 border text-primary rounded cursor-pointer\"\r\n                onClick={this.onClick}>\r\n                {this.controlContent()}\r\n            </div>;\r\n        }\r\n        return <div className=\"form-control-static \">\r\n            <input.component id={this.value} \r\n                ui={tuid}\r\n                //input={input}\r\n                //entitiesUI={this.formView.props.context} \r\n                //params={this.formView.readValues()}\r\n                //onPicked={this.onPicked}\r\n                />\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, TuidPickFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class PickTuidControl extends Control {\r\n    protected face: TuidPickFace;\r\n    // protected value: number;\r\n    @observable private caption: string|JSX.Element;\r\n    constructor(formView:FormView, field:Field, face:Face) {\r\n        super(formView, field, face);\r\n        this.onIdChanged = this.onIdChanged.bind(this);\r\n        //this.onClick = this.onClick.bind(this);\r\n    }\r\n    /*\r\n    private async onClick() {\r\n        let {pick, fromPicked} = this.face;\r\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\r\n        if (item === undefined) {\r\n            this.value = undefined;\r\n            return;\r\n        }\r\n        if (fromPicked === undefined) {\r\n            this.value = item.id;\r\n            return;\r\n        }\r\n        let {id, caption} = fromPicked(item);\r\n        this.value = id;\r\n        this.caption = caption;\r\n    }*/\r\n    onIdChanged(id: any) {\r\n        this.value = id.id;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        this.value = v;\r\n    }\r\n    private buildContent():JSX.Element {\r\n        //let {tuid, input} = this.face;\r\n        return <this.face.input.component \r\n            {...this.face}\r\n            id={this.value}\r\n            //ui={this.face.ui}\r\n            //input={input}\r\n            //entitiesUI={this.formView.props.context} \r\n            onFormValues={()=>this.formView.readValues()}\r\n            onIdChanged={this.onIdChanged} />;\r\n    }\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-static \">\r\n            {this.buildContent()}\r\n        </div>;\r\n    }\r\n}\r\n/*\r\n<button className=\"form-control btn btn-outline-info\"\r\ntype=\"button\"\r\nstyle={{textAlign:'left', paddingLeft:'0.75rem'}}\r\nonClick={this.onClick}>\r\n{this.buildContent()}\r\n</button>\r\n*/","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, PickFace} from '../face';\r\nimport {Control} from './control';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class PickControl extends Control {\r\n    protected face: PickFace;\r\n    @observable private caption: string|JSX.Element;\r\n\r\n    private onClick = async () => {\r\n        let {pick, fromPicked} = this.face;\r\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\r\n        if (item === undefined) {\r\n            this.value = undefined;\r\n            return;\r\n        }\r\n        let {id, caption} = fromPicked(item);\r\n        this.value = id;\r\n        this.caption = caption;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        this.value = v;\r\n    }\r\n    /*\r\n    private controlContent():string|JSX.Element {\r\n        let {content: Content} = this.face;\r\n        if (this.value === undefined) {\r\n            return '请选择';\r\n        }\r\n        \r\n        if (this.caption !== undefined) {\r\n            return this.caption;\r\n        }\r\n        return <Content id={this.value} />;\r\n    }*/\r\n    /*\r\n    private buildContent():string|JSX.Element {\r\n        let {tuid, input} = this.face;\r\n        if (input === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n            return <div onClick={this.onClick}>{this.controlContent()}</div>;\r\n        }\r\n        return <input.component id={this.value} \r\n            tuid={tuid}\r\n            input={input}\r\n            entitiesUI={this.formView.props.context} \r\n            params={this.formView.readValues()}\r\n            onPicked={this.onPicked} />;\r\n    }*/\r\n    renderControl():JSX.Element {\r\n        return <this.view />;\r\n        /*\r\n        let {content:Content} = this.face;\r\n        //if (this.value === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n        //}\r\n        //return <div className=\"form-control-static \">\r\n        //    <Content />\r\n        //</div>;\r\n        */\r\n    }\r\n\r\n    private view = observer(() => {\r\n        let content;\r\n        let {content: Content} = this.face;\r\n        if (this.value === undefined || this.value === null) {\r\n            content = '请选择';\r\n        }\r\n        /*\r\n        else if (this.caption !== undefined) {\r\n            content = this.caption;\r\n        }*/\r\n        else {\r\n            content = <Content id={this.value} />;\r\n        } \r\n        return <div\r\n            className=\"form-control-plaintext px-2 border text-primary rounded cursor-pointer bg-light\"\r\n            onClick={this.onClick}>\r\n            {content}\r\n        </div>\r\n    });\r\n}\r\n","export * from './control';\r\nexport * from './buttonsControl';\r\nexport * from './stringControl';\r\nexport * from './numberControl';\r\n\r\nimport {Field} from '../field';\r\nimport {Face} from '../face';\r\nimport {Control, ControlBase} from './control';\r\nimport {ButtonsControl} from './buttonsControl';\r\nimport {CheckControl} from './checkControl';\r\nimport {RadioControl} from './radioControl';\r\nimport {TextAreaControl} from './textAreaControl';\r\nimport {SelectControl} from './selectControl';\r\nimport {UnknownControl, EmptyControl} from './unknownControl';\r\nimport {StringControl, PasswordControl} from './stringControl';\r\nimport {NumberControl} from './numberControl';\r\n\r\nimport {FormView, FormRow, GroupRow, FieldRow, LabelFormRow} from '../formView';\r\nimport { PickIdControl } from './pickIdControl';\r\nimport { PickTuidControl } from './pickTuidControl';\r\nimport { PickControl } from './pickControl';\r\n\r\nexport type CreateControl = (form:FormView, row: FormRow) => ControlBase\r\n\r\nexport const createControl:CreateControl = (form:FormView, row: LabelFormRow):ControlBase => {\r\n    let label = row.label;\r\n    if ((<GroupRow>row).group !== undefined)\r\n        return createGroupControl(form, label, row as GroupRow);\r\n    if ((<FieldRow>row).field !== undefined)\r\n        return createFieldControl(form, label, row as FieldRow);\r\n    return new EmptyControl(form, row.help);\r\n}\r\n\r\nconst controls:{[type:string]: new (formView:FormView, field:Field, face:Face) => Control} = {\r\n    \"string\": StringControl,\r\n    \"password\": PasswordControl,\r\n    \"number\": NumberControl,\r\n    \"checkbox\": CheckControl,\r\n    \"radiobox\": RadioControl,\r\n    \"select\": SelectControl,\r\n    \"pick-id\": PickIdControl,\r\n    \"pick-tuid\": PickTuidControl,\r\n    \"textarea\": TextAreaControl,\r\n    \"pick\": PickControl,\r\n};\r\nconst defaultFaces:{[type:string]: Face} = {\r\n    \"string\": {type:'string'},\r\n    \"number\": {type:'number'},\r\n    \"int\": {type:'number'},\r\n    \"dec\": {type:'number'},\r\n    \"bool\": {type:'checkbox'},\r\n}\r\nfunction createFieldControl(form:FormView, label:string, fieldRow: FieldRow):Control {\r\n    let {field, face} = fieldRow;\r\n    switch (typeof field) {\r\n        case 'string':\r\n            field = {\r\n                name: (field as any) as string,\r\n                type: 'string',\r\n            }\r\n            break;\r\n        case 'object':\r\n            break;\r\n        default:\r\n            return new UnknownControl(form, field, face);\r\n    }\r\n    let fieldType = field.type || 'string';\r\n    if (face === undefined) {\r\n        face = defaultFaces[fieldType];\r\n        if (face === undefined) return new UnknownControl(form, field, face);\r\n    }\r\n    else if (face.type === undefined) {\r\n        let f = defaultFaces[fieldType];\r\n        face.type = f===undefined? 'string' : f.type;\r\n    }\r\n    let control = controls[face.type || fieldType] || UnknownControl;\r\n    return new control(form, field, face);\r\n}\r\n\r\nfunction createGroupControl(form:FormView, label:string, groupRow: GroupRow):Control {\r\n    return new UnknownControl(form, groupRow as any, undefined);\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field, BoolField} from '../field';\r\nimport {Face, CheckBoxFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class CheckControl extends Control {    \r\n    protected element: HTMLInputElement;\r\n    protected field: BoolField;\r\n    protected face: CheckBoxFace;\r\n    private trueValue: any;\r\n    private falseValue: any;\r\n\r\n    protected init() {\r\n        super.init();\r\n        let {trueValue, falseValue} = this.field;\r\n        if (trueValue === undefined) this.trueValue = 1;\r\n        if (falseValue === undefined) this.falseValue = 0;\r\n    }\r\n\r\n    setProps() {\r\n        super.setProps();\r\n        _.assign(this.props, {\r\n            onChange: this.onChange.bind(this),\r\n        });\r\n    }\r\n\r\n    clearValue() {\r\n        this.element.checked = this.field.defaultValue === this.trueValue;\r\n        this.value = this.getValueFromElement();\r\n    }\r\n\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        if (v === undefined) {\r\n            v = this.field.defaultValue;\r\n        }\r\n        if (v !== undefined) {\r\n            //this.element.checked = v === this.trueValue;\r\n            //this.value = this.getValueFromElement();\r\n        }\r\n    }\r\n\r\n    protected getValueFromElement():any { return this.element.checked? this.trueValue:this.falseValue; }\r\n\r\n    private onChange() {\r\n        this.value = this.getValueFromElement();\r\n    }\r\n\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-static\">\r\n            <label className=\"form-control\">\r\n                <label className=\"custom-control custom-checkbox mb-0\">\r\n                    <input type='checkbox'\r\n                        name={this.field.name}\r\n                        ref={this.props.ref}\r\n                        onChange={this.props.onChange}\r\n                        className=\"custom-control-input\" />\r\n                    <span className=\"custom-control-indicator\" />\r\n                    <span className=\"custom-control-description\">{this.face.label}</span>\r\n                </label>\r\n            </label>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, RadioFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class RadioControl extends Control {\r\n    protected face: RadioFace;\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-static\">\r\n            <div className=\"form-control\">\r\n            {\r\n                this.face.list.map((item, index) => {\r\n                    let t, v;\r\n                    if (typeof item !== 'object') t = v = item;\r\n                    else {\r\n                        t = item.text;\r\n                        v = item.value;\r\n                    }\r\n                    return <label key={index} className=\"custom-control custom-radio w-25\">\r\n                        <input type='radio'\r\n                            name={this.field.name} \r\n                            className=\"custom-control-input\" />\r\n                        <span className=\"custom-control-indicator\"></span>\r\n                        <span className=\"custom-control-description\">{t}</span>\r\n                    </label>;\r\n                })\r\n            }\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, SelectFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class SelectControl extends Control {\r\n    constructor (formView:FormView, field:Field, face:Face) {\r\n        super(formView, field, face);\r\n        this.ref = this.ref.bind(this);\r\n    }\r\n    protected face: SelectFace;\r\n    protected element: HTMLSelectElement;\r\n    protected getValueFromElement():any {\r\n        let {selectedIndex, selectedOptions} = this.element;\r\n        let v:any = selectedOptions[0].value;\r\n        switch (this.field.type) {\r\n            case 'number': v = Number(v); break;\r\n            case 'date': v = new Date(v); break;\r\n            case 'bool': \r\n                if (typeof v === 'string') {\r\n                    v = ((v as string).toLowerCase() === 'true');\r\n                }\r\n                break;\r\n        }\r\n        return v;\r\n    }\r\n    renderControl():JSX.Element {\r\n        let {list} = this.face;\r\n        let def = this.face.default;\r\n        let options: any[] = [];\r\n        if (def === undefined)\r\n            options.push(<option key={-1} value={undefined}>请选择</option>);\r\n        options.push(...list.map((item, index) => {\r\n            let t, v;\r\n            if (typeof item !== 'object') t = v = item;\r\n            else {\r\n                t = item.text;\r\n                v = item.value;\r\n            }\r\n            return <option key={index} value={v}>{t}</option>;\r\n        }));\r\n        return <div className=\"form-control-static\">\r\n            <select name={this.field.name} className=\"form-control\" ref={this.ref}>\r\n                {options}\r\n            </select>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport {CharsControl} from './charsControl';\r\nimport {StringField} from '../field';\r\nimport {TextAreaFace} from '../face';\r\n\r\nexport class TextAreaControl extends CharsControl {\r\n    protected field: StringField;\r\n    protected face: TextAreaFace;\r\n    private el: HTMLTextAreaElement;\r\n    protected setProps() {\r\n        let p = super.setProps();\r\n        let {maxLength} = this.field;\r\n        let {rows} = this.face;\r\n        _.assign(p, {\r\n            maxLength: maxLength,\r\n            rows: rows,\r\n        });\r\n        return p;\r\n    };\r\n    protected renderInput():JSX.Element {\r\n        return <textarea ref={t=>{this.el = t;if (t!==undefined) t.value=''}} className={this.className()} {...this.props} />;\r\n    }\r\n}\r\n","import { Entities, Field, ArrFields, FieldMap } from './entities';\r\nimport { TuidMain, Tuid } from './tuid';\r\n\r\nconst tab = '\\t';\r\nconst ln = '\\n';\r\n\r\nexport abstract class Entity {\r\n    protected entities: Entities;\r\n    protected schema: any;\r\n    private jName: string;\r\n    sys?: boolean;\r\n    readonly name: string;\r\n    readonly typeId: number;\r\n    abstract get typeName(): string;\r\n    get sName():string {return this.jName || this.name}\r\n    fields: Field[];\r\n    arrFields: ArrFields[];\r\n    returns: ArrFields[];\r\n\r\n    constructor(entities:Entities, name:string, typeId:number) {\r\n        this.entities = entities;\r\n        this.name = name;\r\n        this.typeId = typeId;\r\n        this.sys = this.name.indexOf('$') >= 0;\r\n    }\r\n\r\n    public face: any;           // 对应字段的label, placeHolder等等的中文，或者语言的翻译\r\n\r\n    protected get tvApi() {return this.entities.uqApi;}\r\n    getApiFrom() {return this.entities.uqApi;}\r\n\r\n    private fieldMaps: {[arr:string]: FieldMap} = {};\r\n    fieldMap(arr?:string): FieldMap {\r\n        if (arr === undefined) arr = '$';\r\n        let ret = this.fieldMaps[arr];\r\n        if (ret === undefined) {\r\n            let fields:Field[];\r\n            if (arr === '$') fields = this.fields;\r\n            else if (this.arrFields !== undefined) {\r\n                let arrFields = this.arrFields.find(v => v.name === arr);\r\n                if (arrFields !== undefined) fields = arrFields.fields;\r\n            }\r\n            else if (this.returns !== undefined) {\r\n                let arrFields = this.returns.find(v => v.name === arr);\r\n                if (arrFields !== undefined) fields = arrFields.fields;\r\n            }\r\n            if (fields === undefined) return {};\r\n            ret = {};\r\n            for (let f of fields) ret[f.name] = f;\r\n            this.fieldMaps[arr] = ret;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    public async loadSchema():Promise<void> {\r\n        if (this.schema !== undefined) return;\r\n        let schema = await this.entities.uqApi.schema(this.name);\r\n        this.setSchema(schema);\r\n        this.buildFieldsTuid();\r\n    }\r\n\r\n    public setSchema(schema:any) {\r\n        if (schema === undefined) return;\r\n        if (this.schema !== undefined) return;\r\n        this.schema = schema;\r\n        let {name} = schema;\r\n        if (name !== this.name) this.jName = name;\r\n        this.buildFieldsTuid();\r\n    }\r\n\r\n    public buildFieldsTuid() {\r\n        let {fields, arrs, returns} = this.schema;\r\n        this.entities.buildFieldTuid(this.fields = fields);\r\n        this.entities.buildArrFieldsTuid(this.arrFields = arrs, fields);\r\n        this.entities.buildArrFieldsTuid(this.returns = returns, fields);\r\n        //this.newMain = this.buildCreater(fields);\r\n        //this.newArr = this.buildArrCreater(arrs);\r\n        //this.newRet = this.buildArrCreater(returns);\r\n    }\r\n\r\n    schemaStringify():string {\r\n        return JSON.stringify(this.schema, (key:string, value:any) => {\r\n            if (key === '_tuid') return undefined;\r\n            return value;\r\n        }, 4);\r\n    }\r\n\r\n    tuidFromField(field:Field):Tuid {\r\n        let {_tuid, tuid} = field;\r\n        if (tuid === undefined) return;\r\n        if (_tuid !== undefined) return _tuid;\r\n        return field._tuid = this.entities.getTuid(tuid, undefined);\r\n    }\r\n\r\n    tuidFromName(fieldName:string, arrName?:string):Tuid {\r\n        if (this.schema === undefined) return;\r\n        let {fields, arrs} = this.schema;\r\n        let entities = this.entities;\r\n        function getTuid(fn:string, fieldArr:Field[]) {\r\n            if (fieldArr === undefined) return;\r\n            let f = fieldArr.find(v => v.name === fn);\r\n            if (f === undefined) return;\r\n            return entities.getTuid(f.tuid, undefined);\r\n        }\r\n        let fn = fieldName.toLowerCase();\r\n        if (arrName === undefined) return getTuid(fn, fields);\r\n        if (arrs === undefined) return;\r\n        let an = arrName.toLowerCase();\r\n        let arr = (arrs as ArrFields[]).find(v => v.name === an);\r\n        if (arr === undefined) return;\r\n        return getTuid(fn, arr.fields);\r\n    }\r\n\r\n    protected buildParams(params:any):any {\r\n        let result = {};\r\n        let fields = this.fields;\r\n        if (fields !== undefined) this.buildFieldsParams(result, fields, params);\r\n        let arrs = this.arrFields;\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                let {name, fields} = arr;\r\n                let paramsArr:any[] = params[name];\r\n                if (paramsArr === undefined) continue;\r\n                let arrResult = [];\r\n                result[name] = arrResult;\r\n                for (let pa of params) {\r\n                    let rowResult = {};\r\n                    this.buildFieldsParams(rowResult, fields, pa);\r\n                    arrResult.push(rowResult);\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private buildFieldsParams(result:any, fields:Field[], params:any) {\r\n        for (let field of fields) {\r\n            let {name} = field;\r\n            let d = params[name];\r\n            let val:any;\r\n            switch (typeof d) {\r\n                default: val = d; break;\r\n                case 'object':\r\n                    let tuid = field._tuid;\r\n                    if (tuid === undefined) val = d.id;\r\n                    else val = tuid.getIdFromObj(d);\r\n                    break;\r\n            }\r\n            result[name] = val;\r\n        }\r\n    }\r\n\r\n    pack(data:any):string {\r\n        let ret:string[] = [];\r\n        let fields = this.fields;\r\n        if (fields !== undefined) this.packRow(ret, fields, data);\r\n        let arrs = this.arrFields; //schema['arrs'];\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                this.packArr(ret, arr.fields, data[arr.name]);\r\n            }\r\n        }\r\n        return ret.join('');\r\n    }\r\n\r\n    private escape(row:any, field:Field):any {\r\n        let d = row[field.name];\r\n        switch (typeof d) {\r\n            default: return d;\r\n            case 'object':\r\n                let tuid = field._tuid;\r\n                if (tuid === undefined) return d.id;\r\n                return tuid.getIdFromObj(d);\r\n            case 'string':\r\n                let len = d.length;\r\n                let r = '', p = 0;\r\n                for (let i=0;i<len;i++) {\r\n                    let c = d.charCodeAt(i);\r\n                    switch(c) {\r\n                        case 9: r += d.substring(p, i) + '\\\\t'; p = i+1; break;\r\n                        case 10: r += d.substring(p, i) + '\\\\n'; p = i+1; break;\r\n                    }\r\n                }\r\n                return r + d.substring(p);\r\n            case 'undefined': return '';\r\n        }\r\n    }\r\n\r\n    private packRow(result:string[], fields:Field[], data:any) {\r\n        let len = fields.length;\r\n        if (len === 0) return;\r\n        let ret = '';\r\n        ret += this.escape(data, fields[0]);\r\n        for (let i=1;i<len;i++) {\r\n            let f = fields[i];\r\n            ret += tab + this.escape(data, f);\r\n        }\r\n        result.push(ret + ln);\r\n    }\r\n\r\n    private packArr(result:string[], fields:Field[], data:any[]) {\r\n        if (data !== undefined) {\r\n            for (let row of data) {\r\n                this.packRow(result, fields, row);\r\n            }\r\n        }\r\n        result.push(ln);\r\n    }\r\n\r\n    unpackSheet(data:string):any {\r\n        let ret = {} as any; //new this.newMain();\r\n        //if (schema === undefined || data === undefined) return;\r\n        let fields = this.fields;\r\n        let p = 0;\r\n        if (fields !== undefined) p = this.unpackRow(ret, fields, data, p);\r\n        let arrs = this.arrFields; //schema['arrs'];\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                p = this.unpackArr(ret, arr, data, p);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    unpackReturns(data:string):any {\r\n        let ret = {} as any;\r\n        //if (schema === undefined || data === undefined) return;\r\n        //let fields = schema.fields;\r\n        let p = 0;\r\n        //if (fields !== undefined) p = unpackRow(ret, schema.fields, data, p);\r\n        let arrs = this.returns; //schema['returns'];\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                //let creater = this.newRet[arr.name];\r\n                p = this.unpackArr(ret, arr, data, p);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    protected unpackRow(ret:any, fields:Field[], data:string, p:number):number {\r\n        let ch0 = 0, ch = 0, c = p, i = 0, len = data.length, fLen = fields.length;\r\n        for (;p<len;p++) {\r\n            ch0 = ch;\r\n            ch = data.charCodeAt(p);\r\n            if (ch === 9) {\r\n                let f = fields[i];\r\n                let {name} = f;\r\n                if (ch0 !== 8) {\r\n                    if (p>c) {\r\n                        let v = data.substring(c, p);\r\n                        ret[name] = this.to(ret, v, f);\r\n                    }\r\n                }\r\n                else {\r\n                    ret[name] = null;\r\n                }\r\n                c = p+1;\r\n                ++i;\r\n                if (i>=fLen) {\r\n                    p = data.indexOf('\\n', c);\r\n                    if (p >= 0) ++p;\r\n                    else p = len;\r\n                    break;\r\n                }\r\n            }\r\n            else if (ch === 10) {\r\n                let f = fields[i];\r\n                let {name} = f;\r\n                if (ch0 !== 8) {\r\n                    if (p>c) {\r\n                        let v = data.substring(c, p);\r\n                        ret[name] = this.to(ret, v, f);\r\n                    }\r\n                }\r\n                else {\r\n                    ret[name] = null;\r\n                }\r\n                ++p;\r\n                ++i;\r\n                break;\r\n            }\r\n        }\r\n        return p;\r\n    }\r\n\r\n    private to(ret:any, v:string, f:Field):any {\r\n        switch (f.type) {\r\n            default: return v;\r\n            case 'datetime':\r\n            case 'date':\r\n            case 'time':\r\n                let date = new Date(Number(v));\r\n                return date;\r\n            case 'id':\r\n            case 'tinyint':\r\n            case 'smallint':\r\n            case 'int':\r\n            case 'dec': return Number(v);\r\n            case 'bigint':\r\n                let id = Number(v);\r\n                let {_tuid} = f;\r\n                if (_tuid === undefined) return id;\r\n                _tuid.useId(id, true);\r\n                return _tuid.boxId(id);\r\n        }\r\n    }\r\n\r\n    private unpackArr(ret:any, arr:ArrFields, data:string, p:number):number {\r\n        let vals:any[] = [], len = data.length;\r\n        let {name, fields} = arr;\r\n        while (p<len) {\r\n            let ch = data.charCodeAt(p);\r\n            if (ch === 10) {\r\n                ++p;\r\n                break;\r\n            }\r\n            let val = {} as any; //new creater();\r\n            vals.push(val);\r\n            p = this.unpackRow(val, fields, data, p);\r\n        }\r\n        ret[name] = vals;\r\n        return p;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport _ from 'lodash';\r\nimport { Entity } from './entity';\r\nimport { Entities, Field, ArrFields } from './entities';\r\nimport { isNumber } from 'util';\r\nimport { CUq, CTuidMain, CTuidEdit, CTuidInfo, CTuidSelect } from '../controllers';\r\n\r\nexport class BoxId {\r\n    id: number;\r\n    obj?: any;\r\n    content: (templet?:(values?:any, x?:any)=>JSX.Element, x?:any)=>JSX.Element;\r\n    valueFromFieldName: (fieldName:string)=>BoxId|any;\r\n    _$com?: any;\r\n    _$tuid?: Tuid;\r\n    getObj: ()=>any;\r\n}\r\n\r\nconst maxCacheSize = 1000;\r\nexport abstract class Tuid extends Entity {\r\n    private BoxId: ()=>void;\r\n    get typeName(): string { return 'tuid';}\r\n    private queue: number[] = [];               // 每次使用，都排到队头\r\n    private waitingIds: number[] = [];          // 等待loading的\r\n    private cache = observable.map({}, {deep: false});    // 已经缓冲的\r\n    idName: string;\r\n    owner: TuidMain;                    // 用这个值来区分是不是TuidArr\r\n    unique: string[];\r\n    schemaFrom: {owner:string; uq:string};\r\n\r\n    constructor(entities:Entities, name:string, typeId:number) {\r\n        super(entities, name, typeId);\r\n        this.buildIdBoxer();\r\n    }\r\n\r\n    abstract get Main():Tuid;\r\n\r\n    private buildIdBoxer() {\r\n        this.BoxId = function():void {};\r\n        let prototype = this.BoxId.prototype;\r\n        Object.defineProperty(prototype, '_$tuid', {\r\n            value: this.from(),\r\n            writable: false,\r\n            enumerable: false,\r\n        });\r\n        Object.defineProperty(prototype, 'obj', {\r\n            enumerable: false,\r\n            get: function() {\r\n                if (this.id === undefined || this.id<=0) return undefined;\r\n                return this._$tuid.valueFromId(this.id);\r\n            }\r\n        });\r\n        prototype.valueFromFieldName = function(fieldName:string):BoxId|any {\r\n            let t:Tuid = this._$tuid;\r\n            return t.valueFromFieldName(fieldName, this.obj);\r\n        };\r\n        prototype.getObj = function():any {\r\n            if (this._$tuid !== undefined) {\r\n                return this._$tuid.getCacheValue(this.id);\r\n            }\r\n        };\r\n        prototype.toJSON = function() {return this.id};\r\n    }\r\n    boxId(id:number):BoxId {\r\n        if (typeof id === 'object') return id as any;\r\n        this.useId(id);\r\n        let ret:BoxId = new this.BoxId();\r\n        ret.id = id;\r\n        return ret;\r\n    }\r\n    getTuidContent() {\r\n        return this.entities.cUq.getTuidContent(this);\r\n    }\r\n    getIdFromObj(item:any):number {\r\n        return item[this.idName];\r\n    }\r\n\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        let {id, unique} = schema;\r\n        this.idName = id;\r\n        this.unique = unique;\r\n        this.schemaFrom = this.schema.from;\r\n    }\r\n    public buildFieldsTuid() {\r\n        super.buildFieldsTuid();\r\n        let {mainFields} = this.schema;\r\n        if (mainFields !== undefined) {\r\n            for (let mf of mainFields) {\r\n                let f = this.fields.find(v => v.name === mf.name);\r\n                if (f === undefined) continue;\r\n                mf._tuid = f._tuid;\r\n            }\r\n        }\r\n    }\r\n    private moveToHead(id:number) {\r\n        let index = this.queue.findIndex(v => v === id);\r\n        this.queue.splice(index, 1);\r\n        this.queue.push(id);\r\n    }\r\n\r\n    valueFromId(id:number|BoxId):any {\r\n        let _id:number;\r\n        let tId = typeof id;\r\n        switch (typeof id) {\r\n            case 'object': _id = (id as BoxId).id; break;\r\n            case 'number': _id = id as number; break;\r\n            default: return;\r\n        }\r\n        return this.getCacheValue(_id);\r\n    }\r\n    getCacheValue(id:number) {\r\n        let v = this.cache.get(id);\r\n        if (this.owner !== undefined && typeof v === 'object') {\r\n            v.$owner = this.owner.boxId(v.owner); // this.owner.valueFromId(v.owner);\r\n        }\r\n        return v;\r\n    }\r\n    valueFromFieldName(fieldName:string, obj:any):BoxId|any {\r\n        if (obj === undefined) return;\r\n        if (this.fields === undefined) return;\r\n        let f = this.fields.find(v => v.name === fieldName);\r\n        if (f === undefined) return;\r\n        let v = obj[fieldName];\r\n        let {_tuid} = f;\r\n        if (_tuid === undefined) return v;\r\n        return _tuid.valueFromId(v);\r\n    }\r\n    resetCache(id:number) {\r\n        this.cache.delete(id);\r\n        let index = this.queue.findIndex(v => v === id);\r\n        this.queue.splice(index, 1);\r\n        this.useId(id);\r\n    }\r\n    useId(id:number, defer?:boolean) {\r\n        if (id === undefined || id === 0) return;\r\n        if (isNumber(id) === false) return;        \r\n        if (this.cache.has(id) === true) {\r\n            this.moveToHead(id);\r\n            return;\r\n        }\r\n        this.entities.cacheTuids(defer===true?70:20);\r\n        //let idVal = this.createID(id);\r\n        this.cache.set(id, id);\r\n        if (this.waitingIds.findIndex(v => v === id) >= 0) {\r\n            this.moveToHead(id);\r\n            return;\r\n        }\r\n\r\n        if (this.queue.length >= maxCacheSize) {\r\n            // 缓冲已满，先去掉最不常用的\r\n            let r = this.queue.shift();\r\n            if (r === id) {\r\n                // 如果移除的，正好是现在用的，则插入\r\n                this.queue.push(r);\r\n                return;\r\n            }\r\n\r\n            //let rKey = String(r);\r\n            if (this.cache.has(r) === true) {\r\n                // 如果移除r已经缓存\r\n                this.cache.delete(r);\r\n            }\r\n            else {\r\n                // 如果移除r还没有缓存\r\n                let index = this.waitingIds.findIndex(v => v === r);\r\n                this.waitingIds.splice(index, 1);\r\n            }\r\n        }\r\n        this.waitingIds.push(id);\r\n        this.queue.push(id);\r\n        return;\r\n    }\r\n    async proxied(name:string, id:number):Promise<any> {\r\n        let proxyTuid = this.entities.getTuid(name, undefined);\r\n        proxyTuid.useId(id);\r\n        let proxied = await this.tvApi.proxied(this.name, name, id);\r\n        this.cacheValue(proxied);\r\n        return proxied;\r\n    }\r\n    cacheValue(val:any):boolean {\r\n        if (val === undefined) return false;\r\n        let id = this.getIdFromObj(val);\r\n        if (id === undefined) return false;\r\n        let index = this.waitingIds.findIndex(v => v === id);\r\n        if (index>=0) this.waitingIds.splice(index, 1);\r\n        //let cacheVal = this.createID(id, val);\r\n        this.cache.set(id, val);\r\n        // 下面的代码应该是cache proxy id, 需要的时候再写吧\r\n        /*\r\n        let {tuids, fields} = this.schema;\r\n        if (tuids !== undefined && fields !== undefined) {\r\n            for (let f of fields) {\r\n                let {name, tuid} = f;\r\n                if (tuid === undefined) continue;\r\n                let t = this.entities.tuid(tuid);\r\n                if (t === undefined) continue;\r\n                t.useId(val[name]);\r\n            }\r\n        }*/\r\n        return true;\r\n    }\r\n    protected afterCacheId(tuidValue:any) {\r\n        if (this.fields === undefined) return;\r\n        for (let f of this.fields) {\r\n            let {_tuid} = f;\r\n            if (_tuid === undefined) continue;\r\n            _tuid.useId(tuidValue[f.name]);\r\n        }\r\n    }\r\n    from(): TuidMain {return;}\r\n    private unpackTuidIds(values:any[]|string):any[] {\r\n        if (this.schemaFrom === undefined) {\r\n            let {mainFields} = this.schema;\r\n            if (mainFields === undefined) return values as any[];\r\n            let ret:any[] = []\r\n            let len = (values as string).length;\r\n            let p = 0;\r\n            while (p<len) {\r\n                let ch = (values as string).charCodeAt(p);\r\n                if (ch === 10) {\r\n                    ++p;\r\n                    break;\r\n                }\r\n                let row = {};\r\n                p = this.unpackRow(row, mainFields, values as string, p);\r\n                ret.push(row);\r\n            }\r\n            return ret;\r\n        }\r\n        else {\r\n            let tuidMain = this.from();\r\n            let ret = tuidMain.unpackTuidIds(values);\r\n            return ret;\r\n        }\r\n    }\r\n    async cacheIds():Promise<void> {\r\n        if (this.waitingIds.length === 0) return;\r\n        let name:string, arr:string;\r\n        if (this.owner === undefined) {\r\n            name = this.name;\r\n        }\r\n        else {\r\n            name = this.owner.name;\r\n            arr = this.name;\r\n        }\r\n        let api = this.getApiFrom();\r\n        let tuids = await api.tuidIds(name, arr, this.waitingIds);\r\n        tuids = this.unpackTuidIds(tuids);\r\n        for (let tuidValue of tuids) {\r\n            if (this.cacheValue(tuidValue) === false) continue;\r\n            this.cacheTuidFieldValues(tuidValue);\r\n            this.afterCacheId(tuidValue);\r\n        }\r\n        await this.cacheDivIds();\r\n    }\r\n    protected async cacheDivIds():Promise<void> {\r\n    }\r\n    async load(id:number):Promise<any> {\r\n        if (id === undefined || id === 0) return;\r\n        let api = this.getApiFrom();\r\n        let values = await api.tuidGet(this.name, id);\r\n        if (values === undefined) return;\r\n        values._$tuid = this;\r\n        this.cacheValue(values);\r\n        this.cacheTuidFieldValues(values);\r\n        return values;\r\n    }\r\n    protected getDiv(divName:string):TuidDiv {return;}\r\n    private cacheTuidFieldValues(values:any) {\r\n        let {fields, arrs} = this.schema;\r\n        this.cacheFieldsInValue(values, fields);\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs as ArrFields[]) {\r\n                let {name, fields} = arr;\r\n                let arrValues = values[name];\r\n                if (arrValues === undefined) continue;\r\n                let tuidDiv = this.getDiv(name);\r\n                for (let row of arrValues) {\r\n                    row._$tuid = tuidDiv;\r\n                    row.$owner = this.boxId(row.owner);\r\n                    tuidDiv.cacheValue(row);\r\n                    this.cacheFieldsInValue(row, fields);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    private cacheFieldsInValue(values:any, fields:Field[]) {\r\n        for (let f of fields as Field[]) {\r\n            let {name, _tuid} = f;\r\n            if (_tuid === undefined) continue;\r\n            let id = values[name];\r\n            //_tuid.useId(id);\r\n            values[name] = _tuid.boxId(id);\r\n        }\r\n    }\r\n    async save(id:number, props:any) {\r\n        let params = _.clone(props);\r\n        params[\"$id\"] = id;\r\n        let ret = await this.tvApi.tuidSave(this.name, params);\r\n        /*\r\n        let {id:retId, inId} = ret;\r\n        if (retId === undefined) {\r\n            params.id = id;\r\n            this.cacheValue(params);\r\n        }\r\n        else if (retId > 0) {\r\n            params.id = retId;\r\n            this.cacheValue(params);\r\n        }\r\n        */\r\n        return ret;\r\n    }\r\n    async search(key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        let ret:any[] = await this.searchArr(undefined, key, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    async searchArr(owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        let {fields} = this.schema;\r\n        let name:string, arr:string;\r\n        if (this.owner !== undefined) {\r\n            name = this.owner.name;\r\n            arr = this.name;\r\n        }\r\n        else {\r\n            name = this.name;\r\n            arr = undefined;\r\n        }\r\n        let api = this.getApiFrom();\r\n        let ret = await api.tuidSearch(name, arr, owner, key, pageStart, pageSize);\r\n        for (let row of ret) {\r\n            this.cacheFieldsInValue(row, fields);\r\n            if (this.owner !== undefined) row.$owner = this.owner.boxId(row.owner);\r\n        }\r\n        return ret;\r\n    }\r\n    async loadArr(arr:string, owner:number, id:number):Promise<any> {\r\n        if (id === undefined || id === 0) return;\r\n        let api = this.getApiFrom();\r\n        return await api.tuidArrGet(this.name, arr, owner, id);\r\n    }\r\n    /*\r\n    async loadArrAll(owner:number):Promise<any[]> {\r\n        return this.all = await this.tvApi.tuidGetAll(this.name);\r\n    }*/\r\n    async saveArr(arr:string, owner:number, id:number, props:any) {\r\n        let params = _.clone(props);\r\n        params[\"$id\"] = id;\r\n        return await this.tvApi.tuidArrSave(this.name, arr, owner, params);\r\n    }\r\n    async posArr(arr:string, owner:number, id:number, order:number) {\r\n        return await this.tvApi.tuidArrPos(this.name, arr, owner, id, order);\r\n    }\r\n\r\n    // cache放到Tuid里面之后，这个函数不再需要公开调用了\r\n    //private async ids(idArr:number[]) {\r\n    //    return await this.tvApi.tuidIds(this.name, idArr);\r\n    //}\r\n    async showInfo(id:number) {\r\n        await this.entities.cUq.showTuid(this, id);\r\n    }\r\n}\r\n\r\nexport class TuidMain extends Tuid {\r\n    get Main() {return this}\r\n    get uqApi() {return this.entities.uqApi};\r\n\r\n    divs: {[name:string]: TuidDiv};\r\n    //proxies: {[name:string]: TuidMain};\r\n\r\n    public setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        let {arrs} = schema;\r\n        if (arrs !== undefined) {\r\n            this.divs = {};\r\n            for (let arr of arrs) {\r\n                let {name} = arr;\r\n                let tuidDiv = new TuidDiv(this.entities, name, this.typeId);\r\n                tuidDiv.owner = this;\r\n                this.divs[name] = tuidDiv;\r\n                tuidDiv.setSchema(arr);\r\n            }\r\n        }\r\n    }\r\n    protected getDiv(divName:string):TuidDiv {return this.divs[divName];}\r\n    /* 努力回避async里面的super调用，edge不兼容\r\n    async cacheIds():Promise<void> {\r\n        await super.cacheIds();\r\n        if (this.divs === undefined) return;\r\n        for (let i in this.divs) {\r\n            await this.divs[i].cacheIds();\r\n        }\r\n    }\r\n    */\r\n    protected async cacheDivIds():Promise<void> {\r\n        if (this.divs === undefined) return;\r\n        for (let i in this.divs) {\r\n            await this.divs[i].cacheIds();\r\n        }\r\n    }\r\n\r\n    cUqFrom(): CUq {\r\n        if (this.schemaFrom === undefined) return this.entities.cUq;\r\n        let {owner, uq} = this.schemaFrom;\r\n        let cUq = this.entities.cUq;\r\n        let cApp = cUq.cApp;\r\n        if (cApp === undefined) return cUq;\r\n        let cUqFrm = cApp.getImportUq(owner, uq);\r\n        if (cUqFrm === undefined) {\r\n            console.error(`${owner}/${uq} 不存在`);\r\n            debugger;\r\n            return cUq;\r\n        }\r\n        /*\r\n        let retErrors = await cUqFrm.loadSchema();\r\n        if (retErrors !== undefined) {\r\n            console.error('cUq.loadSchema: ' + retErrors);\r\n            debugger;\r\n            return cUq;\r\n        }*/\r\n        return cUqFrm;\r\n    }\r\n\r\n    getApiFrom() {\r\n        let from = this.from();\r\n        if (from !== undefined) {\r\n            return from.entities.uqApi;\r\n        }\r\n        return this.entities.uqApi;\r\n    }\r\n\r\n    from(): TuidMain {\r\n        if (this.schemaFrom === undefined) return this;\r\n        let cUq = this.cUqFrom();\r\n        return cUq.tuid(this.name);\r\n    }\r\n\r\n    cFrom(): CTuidMain {\r\n        let cUq = this.cUqFrom();\r\n        return cUq.cTuidMainFromName(this.name);\r\n    }\r\n\r\n    cEditFrom(): CTuidEdit {\r\n        let cUq = this.cUqFrom();\r\n        return cUq.cTuidEditFromName(this.name);\r\n    }\r\n\r\n    cInfoFrom(): CTuidInfo {\r\n        let cUq = this.cUqFrom();\r\n        return cUq.cTuidInfoFromName(this.name);\r\n    }\r\n\r\n    cSelectFrom(): CTuidSelect {\r\n        let cUq = this.cUqFrom();\r\n        if (cUq === undefined) return;\r\n        return cUq.cTuidSelectFromName(this.name);\r\n    }\r\n    /*\r\n    protected afterCacheId(tuidValue:any) {\r\n        super.afterCacheId(tuidValue);\r\n        if (this.proxies === undefined) return;\r\n        let {type, $proxy} = tuidValue;\r\n        let pTuid = this.proxies[type];\r\n        pTuid.useId($proxy);\r\n    }*/\r\n}\r\n\r\nexport class TuidDiv extends Tuid {\r\n    get Main() {return this.owner}\r\n\r\n    getApiFrom() {\r\n        return this.owner.getApiFrom();\r\n    }\r\n}\r\n","import {Entity} from './entity';\r\n\r\nexport class Action extends Entity {\r\n    get typeName(): string { return 'action';}\r\n    async submit(data:object) {\r\n        await this.loadSchema();\r\n        let text = this.pack(data);\r\n        return await this.tvApi.action(this.name, {data:text});\r\n    }\r\n}\r\n\r\n","import {observable, IObservableArray} from 'mobx';\r\nimport {Entity} from './entity';\r\nimport { PageItems } from 'tonva-tools';\r\n\r\nexport interface SheetState {\r\n    name: string;\r\n    actions: SheetAction[];\r\n}\r\n\r\nexport interface SheetAction {\r\n    name: string;\r\n}\r\n\r\nexport interface StateCount {\r\n    state: string;\r\n    count: number;\r\n}\r\n\r\nexport class Sheet extends Entity {\r\n    get typeName(): string { return 'sheet';}\r\n    states: SheetState[];\r\n\r\n    /*\r\n    setStates(states: SheetState[]) {\r\n        for (let state of states) {\r\n            this.setStateAccess(this.states.find(s=>s.name==state.name), state);\r\n        }\r\n    }*/\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        this.states = schema.states;\r\n    }\r\n    build(obj:any) {\r\n        this.states = [];\r\n        for (let op of obj.ops) {\r\n            this.states.push({name: op, actions:undefined});\r\n        }\r\n        /*\r\n        for (let p in obj) {\r\n            switch(p) {\r\n                case '#':\r\n                case '$': continue;\r\n                default: this.states.push(this.createSheetState(p, obj[p])); break;\r\n            }\r\n        }*/\r\n    }\r\n    private createSheetState(name:string, obj:object):SheetState {\r\n        let ret:SheetState = {name:name, actions:[]};\r\n        let actions = ret.actions;\r\n        for (let p in obj) {\r\n            let action:SheetAction = {name: p};\r\n            actions.push(action);\r\n        }\r\n        return ret;\r\n    }\r\n    /*\r\n    private setStateAccess(s:SheetState, s1:SheetState) {\r\n        if (s === undefined) return;\r\n        for (let action of s1.actions) {\r\n            let acn = action.name;\r\n            let ac = s.actions.find(a=>a.name === acn);\r\n            if (ac === undefined) continue;\r\n            s.actions.push(action);\r\n        }\r\n    }*/\r\n    async save(discription:string, data:any):Promise<any> {\r\n        await this.loadSchema();\r\n        let {appId} = this.entities;\r\n        let text = this.pack(data);\r\n\r\n        let ret = await this.tvApi.sheetSave(this.name, {app: appId, discription: discription, data:text});\r\n        return ret;\r\n        /*\r\n        let {id, state} = ret;\r\n        if (id > 0) this.changeStateCount(state, 1);\r\n        return ret;\r\n        */\r\n    }\r\n    async action(id:number, flow:number, state:string, action:string) {\r\n        await this.loadSchema();\r\n        return await this.tvApi.sheetAction(this.name, {id:id, flow:flow, state:state, action:action});\r\n    }\r\n    private async unpack(data:any):Promise<any> {\r\n        //if (this.schema === undefined) await this.loadSchema();\r\n        let ret = data[0];\r\n        let brief = ret[0];\r\n        let sheetData = this.unpackSheet(brief.data);\r\n        let flows = data[1];\r\n        return {\r\n            brief: brief,\r\n            data: sheetData,\r\n            flows: flows,\r\n        }\r\n    }\r\n    async getSheet(id:number):Promise<any> {\r\n        await this.loadSchema();\r\n        let ret = await this.tvApi.getSheet(this.name, id);\r\n        if (ret[0].length === 0) return await this.getArchive(id);\r\n        return await this.unpack(ret);\r\n    }\r\n    async getArchive(id:number):Promise<any> {\r\n        await this.loadSchema();\r\n        let ret = await this.tvApi.sheetArchive(this.name, id)\r\n        return await this.unpack(ret);\r\n    }\r\n\r\n    async getArchives(pageStart:number, pageSize:number) {\r\n        await this.loadSchema();\r\n        let ret = await this.tvApi.sheetArchives(this.name, {pageStart:pageStart, pageSize:pageSize});\r\n        return ret;\r\n    }\r\n\r\n    async getStateSheets(state:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        await this.loadSchema();\r\n        let ret = await this.tvApi.stateSheets(this.name, {state:state, pageStart:pageStart, pageSize:pageSize});\r\n        return ret;\r\n    }\r\n    createPageStateItems<T>(): PageStateItems<T> {return new PageStateItems<T>(this);}\r\n\r\n    async stateSheetCount():Promise<StateCount[]> {\r\n        await this.loadSchema();\r\n        let ret:StateCount[] = await this.tvApi.stateSheetCount(this.name);\r\n        return this.states.map(s => {\r\n            let n = s.name, count = 0;\r\n            let r = ret.find(v => v.state === n);\r\n            if (r !== undefined) count = r.count;\r\n            return {state: n, count: count} \r\n        });\r\n    }\r\n\r\n    async mySheets(state:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        await this.loadSchema();\r\n        let ret = await this.tvApi.mySheets(this.name, {state:state, pageStart:pageStart, pageSize:pageSize});\r\n        return ret;\r\n    }\r\n}\r\n\r\nexport class PageStateItems<T> extends PageItems<T> {\r\n    private sheet: Sheet;\r\n    constructor(sheet: Sheet) {\r\n        super(true);\r\n        this.sheet = sheet;\r\n        this.pageSize = 10;\r\n    }\r\n    protected async load(param:any, pageStart:any, pageSize:number):Promise<any[]> {\r\n        let ret = await this.sheet.getStateSheets(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:any) {\r\n        this.pageStart = item === undefined? 0 : item.id;\r\n    }\r\n}\r\n","import {observable, IObservableArray} from 'mobx';\r\nimport {Field, ArrFields} from './entities';\r\nimport {Entity} from './entity';\r\n\r\nexport type QueryPageApi = (name:string, pageStart:any, pageSize:number, params:any) => Promise<string>;\r\nexport class Query extends Entity {\r\n    get typeName(): string { return 'query';}\r\n    private pageStart: any;\r\n    private pageSize:number;\r\n    private params:any;\r\n    private more: boolean;\r\n    private startField: Field;\r\n    @observable list:IObservableArray; // = observable.array([], {deep: false});\r\n    returns: ArrFields[];\r\n    isPaged: boolean;\r\n\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        let {returns} = schema;\r\n        this.returns = returns;\r\n        this.isPaged = (returns as any[]).find(v => v.name === '$page') !== undefined;\r\n    }\r\n\r\n    resetPage(size:number, params:any) {\r\n        this.pageStart = undefined;\r\n        this.pageSize = size;\r\n        this.params = params;\r\n        this.more = false;\r\n        this.list = undefined;\r\n    }\r\n    get hasMore() {return this.more;}\r\n    async loadPage():Promise<void> {\r\n        if (this.pageSize === undefined) {\r\n            throw 'call resetPage(size:number, params:any) first';\r\n        }\r\n        let pageStart:any;\r\n        if (this.pageStart !== undefined) {\r\n            switch (this.startField.type) {\r\n                default: pageStart = this.pageStart; break;\r\n                case 'date':\r\n                case 'time':\r\n                case 'datetime': pageStart = (this.pageStart as Date).getTime(); break;\r\n            }\r\n        }\r\n        let page = await this.page(this.params, pageStart, this.pageSize+1);\r\n        /*\r\n        await this.loadSchema();\r\n        let res = await this.tvApi.page(this.name, pageStart, this.pageSize+1, this.params);\r\n        let data = await this.unpackReturns(res);\r\n        let page = data['$page'] as any[];\r\n        */\r\n        this.list = observable.array([], {deep: false});\r\n        if (page !== undefined) {\r\n            if (page.length > this.pageSize) {\r\n                this.more = true;\r\n                page.pop();\r\n                let ret = this.returns.find(r => r.name === '$page');\r\n                this.startField = ret.fields[0];\r\n                this.pageStart = page[page.length-1][this.startField.name];\r\n            }\r\n            else {\r\n                this.more = false;\r\n            }\r\n            this.list.push(...page);\r\n        }\r\n        //this.loaded = true;\r\n    }\r\n\r\n    async page(params:any, pageStart:any, pageSize:number):Promise<any[]> {\r\n        await this.loadSchema();\r\n        let res = await this.tvApi.page(this.name, pageStart, pageSize+1, this.buildParams(params));\r\n        let data = await this.unpackReturns(res);\r\n        return data.$page;// as any[];\r\n    }\r\n    async query(params:any):Promise<any> {\r\n        await this.loadSchema();\r\n        let res = await this.tvApi.query(this.name, this.buildParams(params));\r\n        let data = await this.unpackReturns(res);\r\n        return data;\r\n    }\r\n    async table(params:any): Promise<any[]> {\r\n        let ret = await this.query(params);\r\n        for (let i in ret) {\r\n            return ret[i];\r\n        }\r\n    }\r\n    async obj(params:any):Promise<any> {\r\n        let ret = await this.table(params);\r\n        if (ret.length > 0) return ret[0];\r\n    }\r\n    async scalar(params:any):Promise<any> {\r\n        let ret = await this.obj(params);\r\n        for (let i in ret) return ret[i];\r\n    }\r\n}\r\n","import {Query} from './query';\r\n\r\nexport class Book extends Query {\r\n    get typeName(): string { return 'book';}\r\n    protected queryApiName = 'book';\r\n}\r\n","import {Query} from './query';\r\n\r\nexport class History extends Query {\r\n    get typeName(): string { return 'history';}\r\n    protected queryApiName = 'history';\r\n}\r\n","import { Entity } from './entity';\r\nimport { Action } from './action';\r\nimport { Query } from './query';\r\nimport { Field } from './entities';\r\n\r\ninterface MapActions {\r\n    add: Action;\r\n    del: Action;\r\n}\r\ninterface MapQueries {\r\n    all: Query;\r\n    page: Query;\r\n    query: Query;\r\n}\r\n\r\nexport class Map extends Entity {\r\n    get typeName(): string { return 'map';}\r\n    keys: Field[];\r\n    actions: MapActions = {} as any;\r\n    queries: MapQueries = {} as any;\r\n    schemaFrom: {owner:string; uq:string};\r\n\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        this.schemaFrom = this.schema.from;\r\n        let {actions, queries, keys} = schema;\r\n        this.entities.buildFieldTuid(this.keys = keys);\r\n        //let t = this.schemaStringify();\r\n        for (let i in actions) {\r\n            let schema = actions[i];\r\n            let {name} = schema;\r\n            let action = this.entities.newAction(name, undefined);\r\n            action.setSchema(schema);\r\n            this.actions[i] = action;\r\n        }\r\n        for (let i in queries) {\r\n            let schema = queries[i];\r\n            let {name} = schema;\r\n            let query = this.entities.newQuery(name, undefined);\r\n            query.setSchema(schema);\r\n            this.queries[i] = query;\r\n        }\r\n    }\r\n\r\n    async add(param:any) {\r\n        await this.loadSchema();\r\n        return await this.actions.add.submit(param);\r\n    }\r\n\r\n    async del(param:any) {\r\n        await this.loadSchema();\r\n        return await this.actions.del.submit(param);\r\n    }\r\n\r\n    async all() {\r\n        await this.loadSchema();\r\n        return await this.queries.all.query({});\r\n    }\r\n\r\n    async page(param:any, pageStart:any, pageSize: number) {\r\n        await this.loadSchema();\r\n        return await this.queries.page.page(param, pageStart, pageSize);\r\n    }\r\n\r\n    async query(param:any) {\r\n        await this.loadSchema();\r\n        return await this.queries.query.query(param);\r\n    }\r\n    async table(params:any): Promise<any[]> {\r\n        let ret = await this.query(params);\r\n        for (let i in ret) {\r\n            return ret[i];\r\n        }\r\n    }\r\n    async obj(params:any):Promise<any> {\r\n        let ret = await this.table(params);\r\n        if (ret.length > 0) return ret[0];\r\n    }\r\n    async scalar(params:any):Promise<any> {\r\n        let ret = await this.obj(params);\r\n        for (let i in ret) return ret[i];\r\n    }\r\n}\r\n","import {Query} from './query';\r\n\r\nexport class Pending extends Query {\r\n    get typeName(): string { return 'pending';}\r\n    protected queryApiName = 'pending';\r\n}\r\n","import {TuidMain, Tuid} from './tuid';\r\nimport {Action} from './action';\r\nimport {Sheet, SheetState, SheetAction} from './sheet';\r\nimport {Query} from './query';\r\nimport {Book} from './book';\r\nimport {History} from './history';\r\nimport { UqApi } from 'tonva-tools';\r\nimport { Map } from './map';\r\nimport { Pending } from './pending';\r\nimport { CUq } from '../controllers';\r\n\r\nexport type FieldType = 'id' | 'tinyint' | 'smallint' | 'int' | 'bigint' | 'dec' | 'char' | 'text'\r\n    | 'datetime' | 'date' | 'time';\r\n\r\nexport function fieldDefaultValue(type:FieldType) {\r\n    switch (type) {\r\n        case 'tinyint':\r\n        case 'smallint':\r\n        case 'int':\r\n        case 'bigint':\r\n        case 'dec':\r\n            return 0;\r\n        case 'char':\r\n        case 'text':\r\n            return '';\r\n        case 'datetime':\r\n        case 'date':\r\n            return '2000-1-1';\r\n        case 'time':\r\n            return '0:00';\r\n    }\r\n}\r\n\r\nexport interface Field {\r\n    name: string;\r\n    type: FieldType;\r\n    tuid?: string;\r\n    arr?: string;\r\n    url?: string;\r\n    null?: boolean;\r\n    size?: number;\r\n    owner?: string;\r\n    _ownerField: Field;\r\n    _tuid: Tuid;\r\n}\r\nexport interface ArrFields {\r\n    name: string;\r\n    fields: Field[];\r\n    id?: string;\r\n    order?: string;\r\n}\r\nexport interface FieldMap {\r\n    [name:string]: Field;\r\n}\r\n\r\nexport class Entities {\r\n    private tuids: {[name:string]: TuidMain} = {};\r\n    private actions: {[name:string]: Action} = {};\r\n    private sheets: {[name:string]: Sheet} = {};\r\n    private queries: {[name:string]: Query} = {};\r\n    private books: {[name:string]: Book} = {};\r\n    private maps: {[name:string]: Map} = {};\r\n    private histories: {[name:string]: History} = {};\r\n    private pendings: {[name:string]: Pending} = {};\r\n    private cacheTimer: any;\r\n    cUq: CUq;\r\n    uqApi: UqApi;\r\n    appId: number;\r\n    uqId: number;\r\n\r\n    constructor(cUq: CUq, uqApi:UqApi, appId: number) {\r\n        this.cUq = cUq;\r\n        this.uqApi = uqApi;\r\n        this.appId = appId;\r\n    }\r\n\r\n    tuid(name:string):TuidMain {return this.tuids[name.toLowerCase()]}\r\n    action(name:string):Action {return this.actions[name.toLowerCase()]}\r\n    sheet(name:string):Sheet {return this.sheets[name.toLowerCase()]}\r\n    query(name:string):Query {return this.queries[name.toLowerCase()]}\r\n    book(name:string):Book {return this.books[name.toLowerCase()]}\r\n    map(name:string):Map {return this.maps[name.toLowerCase()]}\r\n    history(name:string):History {return this.histories[name.toLowerCase()]}\r\n    pending(name:string):Pending {return this.pendings[name.toLowerCase()]}\r\n\r\n    sheetFromTypeId(typeId:number):Sheet {\r\n        for (let i in this.sheets) {\r\n            let sheet = this.sheets[i];\r\n            if (sheet.typeId === typeId) return sheet;\r\n        }\r\n    }\r\n\r\n    tuidArr: TuidMain[] = [];\r\n    actionArr: Action[] = [];\r\n    sheetArr: Sheet[] = [];\r\n    queryArr: Query[] = [];\r\n    bookArr: Book[] = [];\r\n    mapArr: Map[] = [];\r\n    historyArr: History[] = [];\r\n    pendingArr: Pending[] = [];\r\n\r\n    async loadAccess() {\r\n        let accesses = await this.uqApi.loadAccess();\r\n        if (accesses === undefined) return;\r\n        this.buildEntities(accesses);\r\n    }\r\n\r\n    async loadEntities() {\r\n        let accesses = await this.uqApi.loadEntities();\r\n        this.buildEntities(accesses);\r\n    }\r\n\r\n    private buildEntities(entities:any) {\r\n        if (entities === undefined) {\r\n            debugger;\r\n        }\r\n        let {access, tuids} = entities;\r\n        this.buildTuids(tuids);\r\n        this.buildAccess(access);\r\n    }\r\n\r\n    getTuid(name:string, div?:string, tuidUrl?:string): Tuid {\r\n        let tuid = this.tuids[name];\r\n        if (tuid === undefined) return;\r\n        if (div === undefined) return tuid;\r\n        return tuid.divs[div];\r\n    }\r\n\r\n    cacheTuids(defer:number) {\r\n        this.clearCacheTimer();\r\n        this.cacheTimer = setTimeout(this.loadIds, defer);\r\n    }\r\n    private clearCacheTimer() {\r\n        if (this.cacheTimer === undefined) return;\r\n        clearTimeout(this.cacheTimer);\r\n        this.cacheTimer = undefined;\r\n    }\r\n    private loadIds = () => {\r\n        this.clearCacheTimer();\r\n        for (let i in this.tuids) {\r\n            let tuid = this.tuids[i];\r\n            tuid.cacheIds();\r\n        }\r\n    }\r\n\r\n    private buildTuids(tuids:any) {\r\n        //let proxyColl = {} as any;\r\n        for (let i in tuids) {\r\n            let schema = tuids[i];\r\n            let {name, typeId/*, proxies*/} = schema;\r\n            let tuid = this.newTuid(i, typeId);\r\n            tuid.sys = true;\r\n            //tuid.setSchema(schema);\r\n            //if (proxies !== undefined) proxyColl[i] = proxies;\r\n        }\r\n        for (let i in tuids) {\r\n            let schema = tuids[i];\r\n            let {name} = schema;\r\n            let tuid = this.getTuid(i);\r\n            //tuid.sys = true;\r\n            tuid.setSchema(schema);\r\n        }\r\n        /*\r\n        for (let i in proxyColl) {\r\n            let proxies:string[] = proxyColl[i];\r\n            let tuid = this.tuids[i];\r\n            tuid.proxies = {};\r\n            for (let p of proxies) {\r\n                tuid.proxies[p] = this.tuids[p];\r\n            }\r\n        }*/\r\n        for (let i in this.tuids) {\r\n            let tuid = this.tuids[i];\r\n            tuid.buildFieldsTuid();\r\n        }\r\n    }\r\n\r\n    private buildAccess(access:any) {\r\n        for (let a in access) {\r\n            let v = access[a];\r\n            switch (typeof v) {\r\n                case 'string': this.fromType(a, v); break;\r\n                case 'object': this.fromObj(a, v); break;\r\n            }\r\n        }\r\n        /*\r\n        for (let tuid of this.tuidArr) {\r\n            tuid.setProxies(this);\r\n        }*/\r\n    }\r\n\r\n    newAction(name:string, id:number):Action {\r\n        let action = this.actions[name];\r\n        if (action !== undefined) return action;\r\n        action = this.actions[name] = new Action(this, name, id)\r\n        this.actionArr.push(action);\r\n        return action;\r\n    }\r\n    newTuid(name:string, id:number):TuidMain {\r\n        let tuid = this.tuids[name];\r\n        if (tuid !== undefined) return tuid;\r\n        tuid = this.tuids[name] = new TuidMain(this, name, id);\r\n        this.tuidArr.push(tuid);\r\n        return tuid;\r\n    }\r\n    newQuery(name:string, id:number):Query {\r\n        let query = this.queries[name];\r\n        if (query !== undefined) return query;\r\n        query = this.queries[name] = new Query(this, name, id)\r\n        this.queryArr.push(query);\r\n        return query;\r\n    }\r\n    newBook(name:string, id:number):Book {\r\n        let book = this.books[name];\r\n        if (book !== undefined) return book;\r\n        book = this.books[name] = new Book(this, name, id);\r\n        this.bookArr.push(book);\r\n        return book;\r\n    }\r\n    newMap(name:string, id:number):Map {\r\n        let map = this.maps[name];\r\n        if (map !== undefined) return map;\r\n        map = this.maps[name] = new Map(this, name, id)\r\n        this.mapArr.push(map);\r\n        return map;\r\n    }\r\n    newHistory(name:string, id:number):History {\r\n        let history = this.histories[name];\r\n        if (history !== undefined) return;\r\n        history = this.histories[name] = new History(this, name, id)\r\n        this.historyArr.push(history);\r\n        return history;\r\n    }\r\n    newPending(name:string, id:number):Pending {\r\n        let pending = this.pendings[name];\r\n        if (pending !== undefined) return;\r\n        pending = this.pendings[name] = new Pending(this, name, id)\r\n        this.pendingArr.push(pending);\r\n        return pending;\r\n    }\r\n    newSheet(name:string, id:number):Sheet {\r\n        let sheet = this.sheets[name];\r\n        if (sheet !== undefined) return sheet;\r\n        sheet = this.sheets[name] = new Sheet(this, name, id);\r\n        this.sheetArr.push(sheet);\r\n        return sheet;\r\n    }\r\n    private fromType(name:string, type:string) {\r\n        let parts = type.split('|');\r\n        type = parts[0];\r\n        let id = Number(parts[1]);\r\n        switch (type) {\r\n            case 'uq': this.uqId = id; break;\r\n            case 'tuid':\r\n                let tuid = this.newTuid(name, id);\r\n                tuid.sys = false;\r\n                break;\r\n            case 'action': this.newAction(name, id); break;\r\n            case 'query': this.newQuery(name, id); break;\r\n            case 'book': this.newBook(name, id); break;\r\n            case 'map': this.newMap(name, id); break;\r\n            case 'history': this.newHistory(name, id); break;\r\n            case 'sheet':this.newSheet(name, id); break;\r\n            case 'pending': this.newPending(name, id); break;\r\n        }\r\n    }\r\n    private fromObj(name:string, obj:any) {\r\n        switch (obj['$']) {\r\n            case 'sheet': this.buildSheet(name, obj); break;\r\n        }\r\n    }\r\n    private buildSheet(name:string, obj:any) {\r\n        let sheet = this.sheets[name];\r\n        if (sheet === undefined) sheet = this.newSheet(name, obj.id);\r\n        sheet.build(obj);\r\n        /*\r\n        let states = sheet.states;\r\n        for (let p in obj) {\r\n            switch(p) {\r\n                case '#':\r\n                case '$': continue;\r\n                default: states.push(this.createSheetState(p, obj[p])); break;\r\n            }\r\n        }*/\r\n    }\r\n    /*\r\n    private createSheetState(name:string, obj:object):SheetState {\r\n        let ret:SheetState = {name:name, actions:[]};\r\n        let actions = ret.actions;\r\n        for (let p in obj) {\r\n            let action:SheetAction = {name: p};\r\n            actions.push(action);\r\n        }\r\n        return ret;\r\n    }*/\r\n    buildFieldTuid(fields:Field[], mainFields?:Field[]) {\r\n        if (fields === undefined) return;\r\n        for (let f of fields) {\r\n            let {tuid, arr, url} = f;\r\n            if (tuid === undefined) continue;\r\n            f._tuid = this.getTuid(tuid, arr, url);\r\n        }\r\n        for (let f of fields) {\r\n            let {owner} = f;\r\n            if (owner === undefined) continue;\r\n            let ownerField = fields.find(v => v.name === owner);\r\n            if (ownerField === undefined) {\r\n                if (mainFields !== undefined) {\r\n                    ownerField = mainFields.find(v => v.name === owner);\r\n                }\r\n                if (ownerField === undefined) {\r\n                    throw `owner field ${owner} is undefined`;\r\n                }\r\n            }\r\n            f._ownerField = ownerField;\r\n            let {arr, url} = f;\r\n            f._tuid = this.getTuid(ownerField._tuid.name, arr, url);\r\n            if (f._tuid === undefined) throw 'owner field ${owner} is not tuid';\r\n        }\r\n    }\r\n    buildArrFieldsTuid(arrFields:ArrFields[], mainFields:Field[]) {\r\n        if (arrFields === undefined) return;\r\n        for (let af of arrFields) {\r\n            let {fields} = af;\r\n            if (fields === undefined) continue;\r\n            this.buildFieldTuid(fields, mainFields);\r\n        }\r\n    }\r\n}\r\n","export * from './entities';\r\nexport * from './entity';\r\nexport * from './action';\r\nexport * from './query';\r\nexport * from './sheet';\r\nexport * from './tuid';\r\nexport * from './book';\r\nexport * from './map';\r\nexport * from './history';\r\nexport * from './pending';\r\n","import * as React from 'react';\r\nimport {FormView, FormRow, FieldRow, GroupRow, LabelFormRow} from '../formView';\r\nimport {Control, ControlBase, createControl, CreateControl} from '../control';\r\n\r\nexport type CreateRow = (form:FormView, row: FormRow)=>RowContainer;\r\n\r\nexport abstract class RowContainer {\r\n    protected form:FormView;\r\n    protected row: FormRow;\r\n    protected control: ControlBase;\r\n    constructor(form:FormView, row: FormRow) {\r\n        this.form = form;\r\n        this.row = row;\r\n        if ((row as JSX.Element).type === undefined) {\r\n            let cc:CreateControl = (row as LabelFormRow).createControl;\r\n            if (cc === undefined) cc = form.createControl;\r\n            if (cc === undefined) cc = createControl;\r\n            this.control = cc(form, row);\r\n        }\r\n    }\r\n    abstract render(key:string):JSX.Element;\r\n    \r\n    isOk():boolean {\r\n        if (this.control === undefined) return true;\r\n        return this.control.isOk();\r\n    }\r\n\r\n    contains(fieldName:string):boolean {\r\n        let field = (this.row as FieldRow).field;\r\n        if (field !== undefined) return fieldName === field.name;\r\n        let group = (this.row as GroupRow).group;\r\n        if (group !== undefined) return group.find(g => g.field.name === fieldName)!==undefined;\r\n        return false;\r\n    }\r\n    get hasError():boolean {return this.control.hasError;}\r\n    get filled():boolean {return this.control.filled;}\r\n    clear() {\r\n        if (this.control !== undefined) this.control.clear();\r\n    }\r\n    clearErrors() {\r\n        if (this.control !== undefined) this.control.clearErrors();\r\n    }\r\n    readValues(values:any):any {\r\n        if (this.control !== undefined) this.control.readValues(values);\r\n    }\r\n    setError(fieldName:string, error:string) {\r\n        if (this.control !== undefined) this.control.setError(fieldName, error);\r\n    }\r\n    setInitValues(values:any) {\r\n        if (this.control !== undefined) this.control.setInitValues(values);\r\n    }\r\n}\r\n\r\nclass ElementRowContainer extends RowContainer {\r\n    render(key:string):JSX.Element {\r\n        return <div key={key} className=\"form-group\">{this.row as JSX.Element}</div>;\r\n    }\r\n    get hasError():boolean {return false;}\r\n    get filled():boolean {return false;}\r\n}\r\n\r\nclass BootStrapRowContainer extends RowContainer {\r\n    render(key:string):JSX.Element {\r\n        return <div key={key} className='form-group row'>\r\n            <label className='col-sm-2 col-form-label'>\r\n                {(this.row as LabelFormRow).label}\r\n            </label>\r\n            {this.control.render()}\r\n        </div>;\r\n\r\n        //has-success is-valid\r\n    }\r\n}\r\n\r\nexport function bootstrapCreateRow(form:FormView, row: FormRow):RowContainer {\r\n    return new BootStrapRowContainer(form, row);\r\n}\r\n\r\nexport function elementCreateRow(form:FormView, row: FormRow):RowContainer {\r\n    return new ElementRowContainer(form, row);\r\n}\r\n","//import {isDevelopment} from '../local';\r\nimport {HttpChannel} from './httpChannel';\r\n\r\nexport async function refetchApi(channel:HttpChannel, url, options, resolve, reject) {\r\n    await channel.fetch(url, options, resolve, reject);\r\n}\r\n\r\nexport abstract class ApiBase {\r\n    protected token: string;\r\n    protected path: string;\r\n    protected showWaiting: boolean;\r\n\r\n    constructor(path: string, showWaiting: boolean) {\r\n        this.path = path || '';\r\n        this.showWaiting = showWaiting;\r\n    }\r\n\r\n    protected abstract async getHttpChannel(): Promise<HttpChannel>;\r\n\r\n    public async call(url:string, method:string, body:any):Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.callFetch(url, method, body);\r\n    }\r\n\r\n    public async get(path:string, params:any=undefined): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.get(this.path + path, params);\r\n    }\r\n\r\n    public async post(path:string, params:any): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.post(this.path + path, params);\r\n    }\r\n\r\n    public async put(path:string, params:any): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.put(this.path + path, params);\r\n    }\r\n\r\n    public async delete(path:string, params:any): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.delete(this.path + path, params);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport {nav, mobileHeaderStyle} from './nav';\r\n\r\nexport interface TitleBarProps {\r\n    back?: 'back' | 'close' | 'none';\r\n    center: string | JSX.Element;\r\n    right?: JSX.Element;\r\n    logout?: boolean | (()=>Promise<void>);\r\n}\r\nexport interface TitleBarState {\r\n    hasBack: boolean;\r\n}\r\nexport class TitleBar extends React.Component<TitleBarProps, TitleBarState> {\r\n    constructor(props: TitleBarProps) {\r\n        super(props);\r\n        this.navChange = this.navChange.bind(this);\r\n        this.state = {\r\n            hasBack: false,\r\n        };\r\n    }\r\n    navChange() {\r\n        this.setState({\r\n            hasBack: nav.level > 1\r\n        })\r\n    }\r\n    componentWillMount() {\r\n        this.navChange();\r\n        //this.navChangeHandler = nav.events.add('change', this.navChange);\r\n    }\r\n    componentWillUnmount() {\r\n        //nav.events.remove('change', this.navChangeHandler);\r\n    }\r\n    async back() {\r\n        await nav.back(); // 这个才会显示confirm box，在dataForm里面，如果输入了数据的话\r\n    }\r\n    openWindow() {\r\n        window.open(document.location.href);\r\n    }\r\n    private logoutClick = () => {\r\n        nav.showLogout(this.logout);\r\n        /*\r\n        nav.push(<Page header=\"安全退出\" back=\"close\">\r\n            <div className=\"m-5 border border-info bg-white rounded p-3 text-center\">\r\n                <div>退出当前账号不会删除任何历史数据，下次登录依然可以使用本账号</div>\r\n                <div className=\"mt-3\">\r\n                    <button className=\"btn btn-danger\" onClick={()=>this.logout()}>退出</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n        */\r\n    }\r\n    private logout = async () => {\r\n        let {logout} = this.props;\r\n        if (typeof logout === 'function') {\r\n            await logout(); \r\n        }\r\n        await nav.logout(undefined);\r\n    }\r\n    render() {\r\n        let b = this.state.hasBack || self != top;\r\n        let {right, center, logout} = this.props;\r\n        let back, pop, debugLogout;\r\n        if (logout !== undefined && self === top) {\r\n            if (typeof logout === 'boolean' && logout === true\r\n                || typeof logout === 'function')\r\n            {\r\n                let {user} = nav;\r\n                if (user !== undefined) {\r\n                    let {nick, name} = user;\r\n                    debugLogout = <div className=\"d-flex align-items-center\">\r\n                        <small className=\"text-light\">{nick || name}</small>\r\n                        <a className=\"dropdown-toggle btn btn-secondary btn-sm ml-2\"\r\n                            role=\"button\"\r\n                            onClick={this.logoutClick}>\r\n                            <i className=\"fa fa-sign-out\" />\r\n                        </a>\r\n                    </div>;\r\n                }\r\n            }\r\n        }\r\n        if (b) {\r\n            switch (this.props.back) {\r\n                case 'none': back = undefined; break;\r\n                default:\r\n                case 'back': back = <nav onClick={this.back}><i className=\"fa fa-arrow-left\" /></nav>; break;\r\n                case 'close': back = <nav onClick={this.back}><i className=\"fa fa-close\" /></nav>; break;\r\n            }\r\n        }\r\n        if (self != top) {\r\n            console.log(document.location.href);\r\n            pop = <header onClick={this.openWindow} />;\r\n        }\r\n        let rightView;\r\n        if (right || debugLogout) rightView = <aside>{right} {debugLogout}</aside>;\r\n        return (\r\n        <header style={mobileHeaderStyle}>\r\n            {pop}\r\n            {back}\r\n            <div>{center}</div>\r\n            {rightView}\r\n        </header>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { jsonStringify } from '../../tools';\r\n\r\nexport const DefaultRow = (values) => <div className=\"px-3 py-2\">{jsonStringify(values)}</div>;\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { List, FA } from 'tonva-react-form';\r\nimport { Page, nav } from 'tonva-tools';\r\nimport { TuidMain, Query, Entity } from '../../entities';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { QueryUI, CQuery } from './cQuery';\r\nimport { DefaultRow } from './defaultRow';\r\n\r\nexport class VQueryMain extends VEntity<Query, QueryUI, CQuery> {\r\n    protected vForm: VForm;\r\n    private row: React.StatelessComponent;\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        let {row, queryRow} = this.ui;\r\n        this.row = queryRow || row || DefaultRow;\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSubmit = async () => {\r\n        let params = this.vForm.getValues();\r\n        if (this.entity.isPaged === true) {\r\n            await this.entity.resetPage(30, params);\r\n            await this.entity.loadPage();\r\n            this.replacePage(this.pageResult);\r\n        }\r\n        else {\r\n            let data = await this.entity.query(params);\r\n            this.replacePage(this.queryResult, data);\r\n        }\r\n    }\r\n\r\n    again = () => {\r\n        this.vForm.reset();\r\n        this.replacePage(this.view);\r\n    }\r\n\r\n    renderExtra() {\r\n        return;\r\n    }\r\n\r\n    renderRow = (item:any, index:number) => <this.row {...item} />;\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render('mx-3 my-2')}\r\n        {this.renderExtra()}\r\n    </Page>;\r\n\r\n    protected pageResult = () => {\r\n        let {name, list} = this.entity;\r\n        let rightClose = <button\r\n            className=\"btn btn-outline-success\"\r\n            onClick={this.again}>\r\n            <FA name=\"search\" /> 再查询\r\n        </button>;\r\n        return <Page header={this.label} right={rightClose}>\r\n            <List items={list} item={{render: this.renderRow}} />\r\n        </Page>;\r\n    }\r\n\r\n    protected queryResult = observer((result:any) => {\r\n        let rightClose = <button\r\n            className=\"btn btn-outline-success\"\r\n            onClick={this.again}>\r\n            <FA name=\"search\" /> 再查询\r\n        </button>;\r\n        return <Page header={this.label} right={rightClose}>\r\n            <pre>{JSON.stringify(result, undefined, '\\t')}</pre>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport { FA, SearchBox, List } from 'tonva-react-form';\r\nimport { Page, PageItems } from 'tonva-tools';\r\nimport { Query } from '../../entities';\r\nimport { VEntity } from '../CVEntity';\r\nimport { QueryUI, CQuerySelect } from './cQuery';\r\nimport { DefaultRow } from './defaultRow';\r\n\r\nexport class VQuerySelect extends VEntity<Query, QueryUI, CQuerySelect> {\r\n    private row: React.StatelessComponent;\r\n\r\n    PageItems:QueryPageItems;\r\n    ownerId: number;\r\n\r\n    async open(param?:any) {\r\n        let {row, selectRow} = this.ui;\r\n        this.row = selectRow || row || DefaultRow;\r\n        //this.entity = this.controller.entity;\r\n        this.PageItems = new QueryPageItems(this.entity);\r\n        await this.onSearch(param);\r\n        this.openPage(this.view);\r\n    }\r\n    onSearch = async (key:string) => {\r\n        await this.PageItems.first(key);\r\n    }\r\n\r\n    renderRow = (item:any, index:number) => <this.row {...item} />;\r\n\r\n    private callOnSelected(item:any) {\r\n       this.closePage();\r\n       this.returnCall(item);\r\n    }\r\n    clickRow = (item:any) => {\r\n        this.callOnSelected(item);\r\n    }\r\n\r\n    view = () => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\r\n        return <Page header={header}>\r\n            <List\r\n                items={this.PageItems.items}\r\n                item={{render: this.renderRow, onClick: this.clickRow}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    };\r\n}\r\n\r\nexport class QueryPageItems extends PageItems<any> {\r\n    private query: Query;\r\n    constructor(query: Query) {\r\n        super();\r\n        this.query = query;\r\n    }\r\n    protected async load():Promise<any[]> {\r\n        await  this.query.loadSchema();\r\n        let ret:any[];\r\n        if (this.query.isPaged === true)\r\n            ret = await this.query.page(this.param, this.pageStart, this.pageSize);\r\n        else {\r\n            let data = await this.query.query(this.param);\r\n            //let data = await this.query.unpackReturns(res);\r\n            ret = data[this.query.returns[0].name];\r\n        }\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:any) {\r\n        if (item === undefined) this.pageStart = 0;\r\n    }\r\n}\r\n","import { StatelessComponent } from \"react\";\r\nimport { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Query } from \"../../entities\";\r\nimport { VQueryMain } from \"./vQueryMain\";\r\nimport { VQuerySelect } from \"./vQuerySelect\";\r\n\r\nexport interface QueryUI extends EntityUI {\r\n    CQuery?: typeof CQuery;\r\n    CQuerySelect?: typeof CQuerySelect;\r\n    main?: typeof VQueryMain;\r\n    row?: StatelessComponent;\r\n    queryRow?: StatelessComponent;\r\n    selectRow?: StatelessComponent;\r\n}\r\n\r\nexport abstract class CQueryBase extends CEntity<Query, QueryUI> {\r\n}\r\n\r\nexport class CQuery extends CQueryBase {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VQueryMain);\r\n    }\r\n\r\n    protected get VQueryMain():typeof VQueryMain {return this.ui && this.ui.main || VQueryMain}\r\n}\r\n\r\nexport class CQuerySelect extends CQueryBase {\r\n    protected async internalStart(param?:any) {\r\n        await this.openVPage(this.VQuerySelect, param);\r\n    }\r\n\r\n    protected get VQuerySelect():typeof VQuerySelect {return VQuerySelect}\r\n}\r\n","export * from './cQuery';\r\nexport * from './vQueryMain';\r\nexport * from './vQuerySelect';","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\r\nimport { ResUploader } from '../resUploader';\r\nimport { Image } from '../image';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { ItemEdit } from './itemEdit';\r\n\r\nexport class ImageItemEdit extends ItemEdit {\r\n    protected uiItem: UiTextItem;\r\n    private resUploader: ResUploader;\r\n    @observable private resId: string;\r\n    @observable private overSize: boolean = false;\r\n\r\n    protected async internalStart():Promise<any> {\r\n        this.resId = this.value;        \r\n        return new Promise<any>((resolve, reject) => {\r\n            nav.push(React.createElement(this.page, {resolve:resolve, reject:reject}), ()=>reject());\r\n        });\r\n    }\r\n\r\n    private upload = async () => {\r\n        if (!this.resUploader) return;\r\n        let ret = await this.resUploader.upload();\r\n        if (ret === null) {\r\n            this.overSize = true;\r\n            setTimeout(() => this.overSize = false, 3000);\r\n            return;\r\n        }\r\n        this.resId = ret;\r\n        this.isChanged = (this.resId != this.value);\r\n    }\r\n\r\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\r\n        let {resolve} = props;\r\n        let right = <button\r\n            className=\"btn btn-sm btn-success\"\r\n            disabled={!this.isChanged}\r\n            onClick={()=>resolve(this.resId)}>保存</button>;\r\n        let overSize:any;\r\n        if (this.overSize === true) {\r\n            overSize = <div className=\"text-danger\">\r\n                <i className=\"fa fa-times-circle\" /> 图片文件大小超过2M，无法上传\r\n            </div>;\r\n        }\r\n        return <Page header={'更改' + this.label} right={right}>\r\n            <div className=\"my-3 px-3 py-3 bg-white\">\r\n                <div>\r\n                    <div>上传图片：</div>\r\n                    <div className=\"my-3\">\r\n                        <ResUploader ref={v=>this.resUploader=v} multiple={false} maxSize={2048} />\r\n                    </div>\r\n                    <div>\r\n                        <button className=\"btn btn-primary\" onClick={this.upload}>上传</button>\r\n                    </div>\r\n                </div>\r\n                {overSize}\r\n                <div className=\"small muted my-4\">支持JPG、GIF、PNG格式图片，不超过2M。</div>\r\n                <div className=\"d-flex\">\r\n                    <div className=\"w-12c h-12c mr-4\"\r\n                        style={{border: '1px dotted gray', padding: '8px'}}>\r\n                        <Image className=\"w-100 h-100\" src={this.resId} />\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"small\">图片预览</div>\r\n                        <Image className=\"w-4c h-4c mt-3\" src={this.resId} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\n\r\nexport function Loading() {\r\n    return <div className=\"d-flex h-100 align-items-center justify-content-center\">\r\n        <i className=\"fa fa-spinner fa-spin fa-2x fa-fw text-info\" />\r\n    </div>;\r\n}\r\n\r\n/*\r\nexport function Loading() {\r\n    return <div style={{height:'100%'}} className=\"d-flex flex-fill align-items-center justify-content-center\">\r\n    <div className=\"d-flex align-items-center justify-content-center slide text-info\" style={{width:'5em', height:'2em'}}>\r\n        加载中...\r\n    </div>\r\n    </div>\r\n}\r\n*/\r\n\r\n\r\n","import * as React from 'react';\r\nimport { nav } from './nav';\r\n\r\nexport interface ResUploaderProps {\r\n    className?: string;\r\n    multiple?: boolean;\r\n    maxSize?: number;\r\n    onFilesChange?: (evt: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nexport class ResUploader extends React.Component<ResUploaderProps> {\r\n    private fileInput: HTMLInputElement;\r\n\r\n    upload = async ():Promise<string> => {\r\n        let {maxSize} = this.props;\r\n        if (maxSize === undefined || maxSize <= 0) \r\n            maxSize = 100000000000;\r\n        else\r\n            maxSize = maxSize * 1024;\r\n        let resUrl = nav.resUrl + 'upload';\r\n        var files:FileList = this.fileInput.files;\r\n        var data = new FormData();\r\n        let len = files.length;\r\n        for (let i=0; i<len; i++) {\r\n            let file = files[i];\r\n            if (file.size > maxSize) return null;\r\n            data.append('files[]', file, file.name);\r\n        }\r\n  \r\n        try {\r\n            let abortController = new AbortController();\r\n            let res = await fetch(resUrl, {\r\n                method: \"POST\",\r\n                body: data,\r\n                signal: abortController.signal,\r\n            });\r\n            let json = await res.json();\r\n            return ':' + json.res.id;\r\n        }\r\n        catch (err) {\r\n            console.error('%s %s', resUrl, err);\r\n        }\r\n    }\r\n    render() {\r\n        let {className, multiple, onFilesChange} = this.props;\r\n        return <input \r\n            className={className}\r\n            ref={t=>this.fileInput=t} \r\n            onChange={onFilesChange}\r\n            type='file' name='file' multiple={multiple} />\r\n    }\r\n}\r\n","export * from './rule';\r\nexport * from './field';\r\nexport * from './face';\r\nexport * from './rowContainer';\r\nexport * from './formView';\r\nexport * from './TonvaForm';\r\nexport {ControlBase} from './control';\r\n","import * as React from 'react';\r\nimport {FormEvent} from 'react';\r\nimport {computed} from 'mobx';\r\nimport {uid} from '../uid';\r\nimport {Rule} from './rule';\r\nimport {Field} from './field';\r\nimport {Face} from './face';\r\nimport {CreateControl, ButtonsControl} from './control';\r\nimport {RowContainer, CreateRow, bootstrapCreateRow, elementCreateRow} from './rowContainer';\r\n\r\nexport interface FieldView {\r\n    field: Field;\r\n    face?: Face;\r\n}\r\n\r\nexport interface LabeledRow {\r\n    label?: string;\r\n    createRow?: CreateRow;\r\n    createControl?: CreateControl;\r\n    help?: JSX.Element;\r\n}\r\n\r\nexport interface FieldRow extends LabeledRow, FieldView {\r\n}\r\n\r\nexport interface GroupRow extends LabeledRow {\r\n    group: FieldView[];\r\n}\r\n\r\nexport type LabelFormRow = FieldRow|GroupRow|LabeledRow;\r\nexport type FormRow = LabelFormRow|JSX.Element;\r\n\r\nexport interface SubmitResult {\r\n    success: boolean;\r\n    message?: string\r\n    result?: any;\r\n}\r\n\r\nexport interface FormProps {\r\n    formRows: FormRow[];\r\n    //context?: any;              // form context，比如，可以是EntitiesUI\r\n    rules?: Rule | Rule[];\r\n    onSubmit: (values:any) => Promise<SubmitResult|undefined>;\r\n    submitButton?: string|JSX.Element;\r\n    otherButton?: string|JSX.Element;\r\n    onOther?: (values:any) => void;\r\n    createRow?: CreateRow;\r\n    createControl?: CreateControl;\r\n    readOnly?: boolean;\r\n}\r\n\r\nexport class FormView {\r\n    uid:string;\r\n    private rows: RowContainer[] = [];\r\n    private buttonsRow: RowContainer;\r\n    props: FormProps;\r\n    createControl?: CreateControl;\r\n    constructor(props:FormProps) {\r\n        this.uid = uid();\r\n        this.props = props;\r\n        this.buildRows(props);\r\n        this.createControl = props.createControl;\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    @computed get hasError():boolean {\r\n        let ret = this.rows.map((v, index) => index + ': ' + v.hasError + '\\n');\r\n        console.log(ret);\r\n        return this.rows.some(row => row.hasError);\r\n    }\r\n    @computed get nothing():boolean {\r\n        let ret = this.rows.every(row => !row.filled);\r\n        return ret;\r\n    }\r\n\r\n    readValues():any {\r\n        let values = {} as any;\r\n        for (let row of this.rows) {\r\n            row.readValues(values);\r\n        }\r\n        return values;\r\n    }\r\n\r\n    clear() {\r\n        for (let row of this.rows) {\r\n            row.clear();\r\n        }\r\n    }\r\n\r\n    clearErrors() {\r\n        for (let row of this.rows) {\r\n            row.clearErrors();\r\n        }\r\n    }\r\n\r\n    setError(fieldName:string, error:string) {\r\n        for (let row of this.rows) {\r\n            row.setError(fieldName, error);\r\n        }\r\n    }\r\n\r\n    setInitValues(initValues:any) {\r\n        if (initValues === undefined) return;\r\n        for (let row of this.rows) {\r\n            row.setInitValues(initValues);\r\n        }\r\n    }\r\n\r\n    private buildRows(props:FormProps) {\r\n        let {formRows, createRow} = props;\r\n        if (formRows !== undefined) {\r\n            for (let row of formRows) {\r\n                this.rows.push(this.buildRow(row, createRow));\r\n            }\r\n            if (this.props.readOnly !== true) {\r\n                this.buttonsRow = this.buildRow({createControl:this.createButtons.bind(this)}, undefined);\r\n            }\r\n        }\r\n        else {\r\n            this.rows.push(elementCreateRow(this, <div className=\"text-warning\">TonvaForm need formRows defined</div>));\r\n        }\r\n    }\r\n\r\n    private buildRow(formRow: FormRow, formRowCreator: CreateRow):RowContainer {\r\n        let createRow:CreateRow;\r\n        let type = (formRow as JSX.Element).type;\r\n        if (type !== undefined) {\r\n            createRow = elementCreateRow;\r\n        }\r\n        else {\r\n            createRow = (formRow as (FieldRow | GroupRow | LabeledRow)).createRow;\r\n            if (createRow === undefined) {\r\n                createRow = formRowCreator;\r\n                if (createRow === undefined) createRow = bootstrapCreateRow;\r\n            }\r\n        }\r\n        let row = createRow(this, formRow);\r\n        return row;\r\n    }\r\n\r\n    private createButtons(form:FormView, row: FormRow) {\r\n        return new ButtonsControl(form);\r\n    }\r\n\r\n    private isOk():boolean {\r\n        let isOk = true;\r\n        for (let row of this.rows) {\r\n            if (!row.isOk()) isOk = false;\r\n        }\r\n        return isOk;\r\n    }\r\n\r\n    render():JSX.Element {\r\n        return <form onSubmit={this.onSubmit}>\r\n            {this.rows.map((row,index) => row.render(this.uid + index))}\r\n            {this.buttons()}\r\n        </form>;\r\n    }\r\n\r\n    buttons():JSX.Element {\r\n        if (this.buttonsRow === undefined) return;\r\n        return this.buttonsRow.render(this.uid + this.rows.length);\r\n    }\r\n    \r\n    async onSubmit(event:FormEvent<HTMLFormElement>) {\r\n        event.preventDefault();\r\n        if (!this.isOk()) return;\r\n        let values = this.readValues();\r\n        await this.props.onSubmit(values);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { Page, loadAppUqs, nav, appInFrame, Controller, TypeVPage, VPage, resLang, getExHash, isDevelopment, NavSettings, App} from 'tonva-tools';\r\nimport { List, LMR, FA } from 'tonva-react-form';\r\nimport { CUq, UqUI } from './uq';\r\nimport { centerApi } from '../centerApi';\r\n\r\nexport interface RoleAppUI {\r\n    CApp?: typeof CApp;\r\n    CUq?: typeof CUq;\r\n    main?: TypeVPage<CApp>;\r\n    uqs: {[uq:string]: UqUI | (()=>Promise<UqUI>)};\r\n    res?: any;\r\n}\r\n\r\nexport interface AppUI extends RoleAppUI, NavSettings {\r\n    appName: string; // 格式: owner/appName\r\n    roles?: {[role:string]: RoleAppUI | (()=>Promise<RoleAppUI>)};\r\n}\r\n\r\nexport class CApp extends Controller {\r\n    private appOwner:string;\r\n    private appName:string;\r\n    private cImportUqs: {[uq:string]: CUq} = {};\r\n    protected ui:AppUI;\r\n    id: number;\r\n    appUnits:any[];\r\n\r\n    constructor(ui:AppUI) {\r\n        super(resLang(ui && ui.res));\r\n        nav.setSettings(ui);\r\n        let tonvaApp = ui.appName;\r\n        if (tonvaApp === undefined) {\r\n            throw 'appName like \"owner/app\" must be defined in UI';\r\n        }\r\n        let parts = tonvaApp.split('/');\r\n        if (parts.length !== 2) {\r\n            throw 'tonvaApp name must be / separated, owner/app';\r\n        }\r\n        this.appOwner = parts[0];\r\n        this.appName = parts[1];\r\n        if (ui.uqs === undefined) ui.uqs = {};\r\n        this.ui = ui;\r\n        this.caption = this.res.caption || 'Tonva';\r\n    }\r\n    \r\n    readonly caption: string; // = 'View Model 版的 Uq App';\r\n    cUqCollection: {[uq:string]: CUq} = {};\r\n\r\n    async startDebug() {\r\n        let appName = this.appOwner + '/' + this.appName;\r\n        let cApp = new CApp({appName: appName, uqs:{}} );\r\n        let keepNavBackButton = true;\r\n        await cApp.start(keepNavBackButton);    \r\n    }\r\n\r\n    protected async loadUqs(app:App): Promise<string[]> {\r\n        let retErrors:string[] = [];\r\n        let unit = appInFrame.unit;\r\n        //let app = await loadAppUqs(this.appOwner, this.appName);\r\n        let {id, uqs} = app;\r\n        this.id = id;\r\n\r\n        let promises: PromiseLike<string>[] = [];\r\n        let promiseChecks: PromiseLike<boolean>[] = [];\r\n        let roleAppUI = await this.buildRoleAppUI();\r\n        this.ui = roleAppUI;\r\n        for (let appUq of uqs) {\r\n            let {id:uqId, uqOwner, uqName, access} = appUq;\r\n            let uq = uqOwner + '/' + uqName;\r\n            let uqUI = roleAppUI && roleAppUI.uqs && roleAppUI.uqs[uq];\r\n            let cUq = this.newCUq(uq, uqId, access, uqUI || {});\r\n            this.cUqCollection[uq] = cUq;\r\n            promises.push(cUq.loadSchema());\r\n            promiseChecks.push(cUq.entities.uqApi.checkAccess());\r\n        }\r\n        let results = await Promise.all(promises);\r\n        Promise.all(promiseChecks).then((checks) => {\r\n            for (let c of checks) {\r\n                if (c === false) {\r\n                    //debugger;\r\n                    //nav.start();\r\n                    //return;\r\n                }\r\n            }\r\n        });\r\n        for (let result of results)\r\n        {\r\n            let retError = result; // await cUq.loadSchema();\r\n            if (retError !== undefined) {\r\n                retErrors.push(retError);\r\n                continue;\r\n            }\r\n        }\r\n        if (retErrors.length === 0) return;\r\n        return retErrors;\r\n    }\r\n\r\n    private async buildRoleAppUI():Promise<AppUI> {\r\n        if (!this.ui) return undefined;\r\n        let {hashParam} = nav;\r\n        if (!hashParam) return this.ui;\r\n        let {roles} = this.ui;\r\n        let roleAppUI = roles && roles[hashParam];\r\n        if (!roleAppUI) return this.ui;\r\n        let ret:AppUI = {} as any;\r\n        for (let i in this.ui) {\r\n            if (i === 'roles') continue;\r\n            ret[i] = this.ui[i];\r\n        }\r\n        if (typeof roleAppUI === 'function') roleAppUI = await roleAppUI();\r\n        _.merge(ret, roleAppUI);\r\n        return ret;\r\n    }\r\n\r\n    getImportUq(uqOwner:string, uqName:string):CUq {\r\n        let uq = uqOwner + '/' + uqName;\r\n        let cUq = this.cImportUqs[uq];\r\n        if (cUq !== undefined) return cUq;\r\n        let ui = this.ui && this.ui.uqs && this.ui.uqs[uq];\r\n        let uqId = -1; // unknown\r\n        this.cImportUqs[uq] = cUq = this.getCUq(uq);\r\n        //this.newCUq(uq, uqId, undefined, ui || {});\r\n        /*\r\n        let retError = await cUq.loadSchema();\r\n        if (retError !== undefined) {\r\n            console.error(retError);\r\n            debugger;\r\n            return;\r\n        }\r\n        */\r\n        return cUq;\r\n    }\r\n\r\n    protected newCUq(uq:string, uqId:number, access:string, ui:any) {\r\n        let cUq = new (this.ui.CUq || CUq)(this, uq, this.id, uqId, access, ui);        \r\n        Object.setPrototypeOf(cUq.x, this.x);\r\n        return cUq;\r\n    }\r\n\r\n    get cUqArr():CUq[] {\r\n        let ret:CUq[] = [];\r\n        for (let i in this.cUqCollection) {\r\n            ret.push(this.cUqCollection[i]);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    getCUq(uq:string):CUq {\r\n        return this.cUqCollection[uq];\r\n    }\r\n\r\n    protected get VAppMain():TypeVPage<CApp> {return (this.ui&&this.ui.main) || VAppMain}\r\n    protected async beforeStart():Promise<boolean> {\r\n        try {\r\n            let app = await loadAppUqs(this.appOwner, this.appName);\r\n            // if (isDevelopment === true) {\r\n            // 这段代码原本打算只是在程序员调试方式下使用，实际上，也可以开放给普通用户，production方式下\r\n                let {predefinedUnit} = appInFrame;\r\n                let {id} = app;\r\n                this.id = id;\r\n                let {user} = nav;\r\n                if (user !== undefined && user.id > 0) {\r\n                    this.appUnits = await centerApi.userAppUnits(this.id);\r\n                    switch (this.appUnits.length) {\r\n                        case 0:\r\n                            this.showUnsupport(predefinedUnit);\r\n                            return false;\r\n                        case 1:\r\n                            let appUnit = this.appUnits[0].id;\r\n                            if (appUnit === undefined || appUnit < 0 || \r\n                                predefinedUnit !== undefined && appUnit != predefinedUnit)\r\n                            {\r\n                                this.showUnsupport(predefinedUnit);\r\n                                return false;\r\n                            }\r\n                            appInFrame.unit = appUnit;\r\n                            break;\r\n                        default:\r\n                            if (predefinedUnit>0 && this.appUnits.find(v => v.id===predefinedUnit) !== undefined) {\r\n                                appInFrame.unit = predefinedUnit;\r\n                                break;\r\n                            }\r\n                            nav.push(<this.selectUnitPage />)\r\n                            return false;\r\n                    }\r\n                }\r\n            //}\r\n\r\n            let retErrors = await this.loadUqs(app);\r\n            if (retErrors !== undefined) {\r\n                this.openPage(<Page header=\"ERROR\">\r\n                    <div className=\"m-3\">\r\n                        <div>Load Uqs 发生错误：</div>\r\n                        {retErrors.map((r, i) => <div key={i}>{r}</div>)}\r\n                    </div>\r\n                </Page>);\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        catch (err) {\r\n            nav.push(<Page header=\"App start error!\">\r\n                <pre>\r\n                    {typeof err === 'string'? err : err.message}\r\n                </pre>\r\n            </Page>);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    protected async internalStart(param:any) {\r\n        if (param !== true) {\r\n            this.clearPrevPages();\r\n        }\r\n        await this.showMainPage();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        return this.renderView(this.VAppMain);\r\n    }\r\n\r\n    // 如果是独立app，删去显示app之前的页面。\r\n    // 如果非独立app，则不删\r\n    protected clearPrevPages() {\r\n        nav.clear();\r\n    }\r\n\r\n    private showUnsupport(predefinedUnit: number) {\r\n        this.clearPrevPages();\r\n        let {user} = nav;\r\n        let userName:string = user? user.name : '[未登录]';\r\n        this.openPage(<Page header=\"APP无法运行\" logout={true}>\r\n            <div className=\"m-3 text-danger container\">\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-2\">登录用户: </div>\r\n                    <div className=\"col\">{userName}</div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-2\">App:</div>\r\n                    <div className=\"col\">{`${this.appOwner}/${this.appName}`}</div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-2\">预设小号:</div>\r\n                    <div className=\"col\">{predefinedUnit || <small className=\"text-muted\">[无预设小号]</small>}</div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-2\">\r\n                        <FA name=\"exclamation-triangle\" />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <div className=\"text-muted\">无法运行可能原因：</div>\r\n                        <ul className=\"p-0\">\r\n                            <li>没有小号运行 {this.ui.appName}</li>\r\n                            <li>用户 <b>{userName}</b> 没有加入任何一个运行{this.ui.appName}的小号</li>\r\n                            {\r\n                                predefinedUnit && \r\n                                <li>预设小号 <b>{predefinedUnit}</b> 没有运行App {this.ui.appName}</li>\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    predefinedUnit || \r\n                    <div className=\"form-group row\">\r\n                    <div className=\"col-2\"></div>\r\n                    <div className=\"col\">\r\n                        预设小号定义在 public/unit.json 文件中。\r\n                        定义了这个文件的程序，只能由url直接启动。\r\n                        用户第一次访问app之后，会缓存在localStorage里。<br/>\r\n                        如果要删去缓存的预定义Unit，logout然后再login。\r\n                    </div>\r\n                </div>\r\n                }\r\n            </div>\r\n        </Page>)\r\n    }\r\n\r\n    private async showMainPage() {\r\n        // #tv-RwPBwMef-23-sheet-api-108\r\n        let exHash = getExHash();\r\n        if (exHash !== undefined) {\r\n            let parts = exHash.split('-');\r\n            if (parts.length > 3) {\r\n                let action = parts[3];\r\n                // sheet_debug 表示centerUrl是debug方式的\r\n                if (action === 'sheet' || action === 'sheet_debug') {\r\n                    let uqId = Number(parts[4]);\r\n                    let sheetTypeId = Number(parts[5]);\r\n                    let sheetId = Number(parts[6]);\r\n                    let cUq = this.getCUqFromId(uqId);\r\n                    if (cUq === undefined) {\r\n                        alert('unknown uqId: ' + uqId);\r\n                        return;\r\n                    }\r\n                    this.clearPrevPages();\r\n                    await cUq.navSheet(sheetTypeId, sheetId);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        this.openVPage(this.VAppMain);\r\n    }\r\n\r\n    private getCUqFromId(uqId:number): CUq {\r\n        for (let i in this.cUqCollection) {\r\n            let cUq = this.cUqCollection[i];\r\n            if (cUq.id === uqId) return cUq;\r\n        }\r\n        return;\r\n    }\r\n\r\n    renderRow = (item: any, index: number):JSX.Element => {\r\n        let {id, nick, name} = item;\r\n        return <LMR className=\"px-3 py-2\" right={'id: ' + id}>\r\n            <div>{nick || name}</div>\r\n        </LMR>;\r\n    }\r\n    onRowClick = async (item: any) => {\r\n        appInFrame.unit = item.id; // 25;\r\n        await this.start();\r\n    }\r\n\r\n    protected selectUnitPage = () => {\r\n        return <Page header=\"选择小号\" logout={true}>\r\n            <List items={this.appUnits} item={{render: this.renderRow, onClick: this.onRowClick}}/>\r\n        </Page>\r\n    }\r\n}\r\n\r\nclass VAppMain extends VPage<CApp> {\r\n    async open(param?:any) {\r\n        this.openPage(this.appPage);\r\n    }\r\n\r\n    render(param?:any) {\r\n        return this.appContent();\r\n    }\r\n\r\n    protected appPage() {\r\n        let {caption} = this.controller;\r\n        return <Page header={caption} logout={async()=>{appInFrame.unit = undefined}}>\r\n            {this.appContent()}\r\n        </Page>;\r\n    }\r\n\r\n    protected appContent = () => {\r\n        let {cUqArr} = this.controller;\r\n        let content:any;\r\n        if (cUqArr.length === 0) {\r\n            content = <div className=\"text-danger\">\r\n                <FA name=\"\" /> 此APP没有绑定任何的UQ\r\n            </div>;\r\n        }\r\n        else {\r\n            content = cUqArr.map((v,i) => <div key={i}>{v.render()}</div>);\r\n        }\r\n        return <>{content}</>;\r\n    };\r\n}\r\n","import React from 'react';\r\nimport { FA } from \"tonva-react-form\";\r\n\r\nfunction icon(className:string, name:string) {\r\n    return <FA className={className} name={name} fixWidth={true} />;\r\n}\r\n/*\r\nexport interface EntityRes {\r\n    caption: string;\r\n    icon: JSX.Element;\r\n}\r\n*/\r\n\r\nexport const entityIcons:{[type:string]:JSX.Element} = {\r\n    tuid: icon('text-info', 'list-alt'),\r\n    action: icon('text-info', 'hand-o-right'),\r\n    map: icon('text-muted', 'list-ul'),\r\n    book: icon('text-muted', 'book'),\r\n    query: icon('text-warning', 'search'),\r\n    history: icon('text-info', 'hand-o-right'),\r\n    pending: icon('text-info', 'forward'),\r\n    sheet: icon('text-primary', 'wpforms'),\r\n};\r\n","import { Controller } from \"tonva-tools\";\r\nimport { CUq } from \"./uq\";\r\n\r\nexport abstract class ControllerUq extends Controller {\r\n    constructor(cUq: CUq, res:any) {\r\n        super(res);\r\n        this.cUq = cUq;\r\n    }\r\n    cUq: CUq;\r\n}\r\n","import {CenterApi as CenterApiBase} from 'tonva-tools';\r\n\r\n//\r\n\r\nexport class CenterApi extends CenterApiBase {\r\n    async userAppUnits(app:number):Promise<any[]> {\r\n        return await this.get('tie/user-app-units', {app:app});\r\n    }\r\n}\r\n\r\nexport const centerApi = new CenterApi('tv/', undefined);\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Page } from 'tonva-tools';\r\nimport { List, Muted, LMR } from 'tonva-react-form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../entities';\r\nimport { CSheet, SheetUI } from './cSheet';\r\n\r\nexport class VSheetMain extends VEntity<Sheet, SheetUI, CSheet> {\r\n    async open() {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    newClick = () => this.event('new');\r\n    schemaClick = () => this.event('schema'); \r\n    archivesClick = () => this.event('archives');\r\n    sheetStateClick = (state) => this.event('state', state);\r\n\r\n    renderState = (item:any, index:number) => {\r\n        let {state, count} = item;\r\n        if (count === 0) return null;\r\n        let badge = <span className=\"badge badge-success ml-5 align-self-end\">{count}</span>;\r\n        return <LMR className=\"px-3 py-2\" left={this.controller.getStateLabel(state)} right={badge} />;\r\n    }\r\n\r\n    protected view = observer(() => {\r\n        let list = this.controller.statesCount.filter(row=>row.count);\r\n        let right = <button className=\"btn btn-outline-primary\" onClick={this.archivesClick}>已归档</button>;\r\n        let templet:any;\r\n        if (this.isDev === true) {\r\n            templet = <button className=\"btn btn-primary mr-2\" color=\"primary\" onClick={this.schemaClick}>模板</button>;\r\n        }\r\n        return <Page header={this.label}>\r\n            <LMR\r\n                className=\"mx-3 my-2\"\r\n                right={right}>\r\n                <button className=\"btn btn-primary mr-2\" color=\"primary\" onClick={this.newClick}>新建</button>\r\n                {templet}\r\n            </LMR>\r\n            <List className=\"my-2\"\r\n                header={<Muted className=\"mx-3 my-1\">待处理{this.label}</Muted>}\r\n                none=\"[ 无 ]\"\r\n                items={list}\r\n                item={{render:this.renderState, onClick:this.sheetStateClick}} />\r\n        </Page>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport { FA } from 'tonva-react-form';\r\nimport { Sheet } from '../../entities';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { SheetUI, CSheet } from './cSheet';\r\n\r\nexport class VSheetNew extends VEntity<Sheet, SheetUI, CSheet> {\r\n    vForm: VForm;\r\n\r\n    async open(param?:any) {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    private onSubmit = async ():Promise<void> => {\r\n        let values = this.vForm.getValues();\r\n        let valuesWithBox = this.vForm.values;\r\n        //let ret = \r\n        await this.controller.onSave(values, valuesWithBox);\r\n        /*\r\n        this.ceasePage();\r\n        //this.openPage(this.finishedPage);\r\n        await this.controller.showSaved(ret);\r\n        */\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render()}\r\n    </Page>;\r\n}\r\n","import * as React from 'react';\r\nimport {List, Muted, LMR, EasyDate, FA} from 'tonva-react-form';\r\nimport { Sheet } from '../../entities';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CSheet, SheetUI, SheetData } from './cSheet';\r\n\r\nconst leftFlowStyle = {width: '8rem'};\r\n\r\nexport abstract class VSheetView extends VEntity<Sheet, SheetUI, CSheet> {\r\n    protected vForm: VForm;\r\n    protected sheetData: SheetData;\r\n    //data: any;\r\n    //state: string;\r\n    //flows:any[];\r\n\r\n    flowRow = (item:any, index:number):JSX.Element => {\r\n        let {date, user, preState, state, action} = item;\r\n        if (action === undefined) action = <><FA className=\"text-primary\" name=\"pencil-square-o\" /> 制单</>;\r\n        let to;\r\n        switch (state) {\r\n            case '$': break;\r\n            case '#': to = <><FA className=\"text-success\" name=\"file-archive-o\" /></>; break;\r\n            default: to = <><FA className=\"text-muted\" name=\"arrow-right\" /> &nbsp; {state}</>; break;\r\n        }\r\n        /*\r\n        return <div className=\"row\">\r\n            <div className=\"col-sm\"></div>\r\n            <div className=\"col-sm\"><div className=\"p-2\">{to}</div></div>\r\n            <div className=\"col-sm text-right\"><div className=\"p-2\"><Muted><EasyDate date={date} /></Muted></div></div>\r\n        </div>;\r\n        */\r\n        return <LMR \r\n            left={<div className=\"pl-3 py-2\" style={leftFlowStyle}>{action}</div>}\r\n            right={<div className=\"p-2\"><Muted><EasyDate date={date} /></Muted></div>}>\r\n            <div className=\"p-2\">{to}</div>\r\n        </LMR>;\r\n    }\r\n\r\n    protected sheetView = () => {\r\n        let {brief, flows} = this.sheetData;\r\n        let removed;\r\n        if (brief.state === '-')\r\n            removed = <div className=\"mx-3 my-2\" style={{color:'red'}}>本单据作废</div>;\r\n        return <div>\r\n            {removed}\r\n            {this.vForm.render()}\r\n    \r\n            <List header={<Muted className=\"mx-3 my-1\">流程</Muted>}\r\n                items={flows}\r\n                item={{render:this.flowRow}}/>\r\n        </div>;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport { VForm, FormMode } from '../form';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\n\r\nexport class VSheetEdit extends VSheetView { //VEntity<Sheet, SheetUI, CSheet> {\r\n    protected sheetData: SheetData;\r\n    async open(param: SheetData) {\r\n        this.sheetData = param;\r\n        this.vForm = this.createForm(this.onSubmit, param.data, FormMode.edit);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSubmit = async ():Promise<void> => {\r\n        let values = this.vForm.getValues();\r\n        await this.controller.saveSheet(values, this.vForm.values);\r\n        this.closePage();\r\n        this.returnCall(this.vForm.values);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render()}\r\n    </Page>;\r\n}\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport { nav, Page } from 'tonva-tools';\r\nimport { FA } from 'tonva-react-form';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\n\r\nexport class VSheetAction extends VSheetView { \r\n    async open(sheetData:SheetData) {\r\n        this.sheetData = sheetData;\r\n        //let {brief, data, flows} = await this.controller.getSheetData(sheetId);\r\n        //this.brief = brief;\r\n        //this.flows = flows;\r\n        //this.data = data;\r\n        //this.state = this.brief.state;\r\n        this.vForm = this.createForm(undefined, sheetData.data);\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    actionClick = async (action:any) => {\r\n        let {id, flow, state} = this.sheetData.brief;\r\n        let res = await this.controller.action(id, flow, state, action.name);\r\n        this.ceasePage();\r\n        this.openPage(this.acted);\r\n        //alert(jsonStringify(res));\r\n        //await this.backPage();\r\n    }\r\n\r\n    deleteClick = async () => {\r\n        alert('单据作废：程序正在设计中');\r\n    }\r\n\r\n    editClick = async () => {\r\n        //alert('修改单据：程序正在设计中');\r\n        let values = await this.controller.editSheet(this.sheetData);\r\n        this.vForm.setValues(values);\r\n    }\r\n\r\n    protected page = () => {\r\n        let {brief} = this.sheetData;\r\n        let {state, no} = brief;\r\n        let stateLabel = this.controller.getStateLabel(state);\r\n        let {states} = this.entity;\r\n        let s = states.find(v => v.name === state);\r\n        let actionButtons, startButtons;\r\n        if (s === undefined) {\r\n            let text:string, cn:string;\r\n            switch (state) {\r\n                default:\r\n                    text = '不认识的单据状态\\'' + state + '\\'';\r\n                    cn = 'text-info';\r\n                    break;\r\n                case '-': \r\n                    text = '已作废';\r\n                    cn = 'text-danger';\r\n                    break;\r\n                case '#':\r\n                    text = '已归档';\r\n                    cn = 'text-success';\r\n                    break;\r\n            }\r\n            actionButtons = <div className={classNames(cn)}>[{text}]</div>;\r\n        }\r\n        else {\r\n            actionButtons = <div className=\"flex-grow-1\">{s.actions.map((v,index) => \r\n                <button\r\n                    key={index}\r\n                    className=\"btn btn-primary mr-2\"\r\n                    onClick={()=>this.actionClick(v)}\r\n                >\r\n                    {this.controller.getActionLabel(state, v.name)}\r\n                </button>)}\r\n            </div>;\r\n            if (state === '$') {\r\n                startButtons = <div>\r\n                    <button className=\"btn btn-outline-info ml-2\" onClick={this.editClick}>修改</button>\r\n                    <button className=\"btn btn-outline-danger ml-2\" onClick={this.deleteClick}>作废</button>\r\n                </div>\r\n            }\r\n        };\r\n        return <Page header={this.label + ':' + stateLabel + '-' + no}>\r\n            <div className=\"mb-2\">\r\n                <div className=\"d-flex px-3 py-2 border-bottom bg-light\">\r\n                    {actionButtons}\r\n                    {startButtons}\r\n                </div>\r\n                <this.sheetView />\r\n            </div>\r\n        </Page>;\r\n    }\r\n\r\n    private acted = () => {\r\n        let {discription} = this.sheetData.brief;\r\n        return <Page header=\"已处理\" back=\"close\">\r\n            <div className=\"p-3 d-flex flex-column align-items-center\">\r\n                <div className=\"p-3\">{discription}</div>\r\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已处理！</div>\r\n                <div className=\"p-3\">\r\n                    <button className=\"btn btn-outline-info\" onClick={()=>this.backPage()}>返回</button>\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../entities';\r\nimport { SheetUI, CSheet } from './cSheet';\r\n\r\nexport class VSheetSchema extends VEntity<Sheet, SheetUI, CSheet> {\r\n    async open(param?:any) {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label + \"模板\"}>\r\n        <pre className=\"mx-3 my-2\">{this.entity.schemaStringify()}</pre>\r\n    </Page>;\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport {List, LMR, FA, EasyDate, Muted} from 'tonva-react-form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../entities';\r\nimport { SheetUI, CSheet } from './cSheet';\r\n\r\nexport class VArchives extends VEntity<Sheet, SheetUI, CSheet> {\r\n    list: any[];\r\n\r\n    async open() {\r\n        this.list = await this.entity.getArchives(undefined, 10);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    archiveClick = async (brief:any) => {\r\n        if (brief.processing===1) return;\r\n        this.event('archived', brief);\r\n    }\r\n    archiveRow = (row:any, index:number) => {\r\n        let {id, no, discription, date} = row;\r\n        let left = <>\r\n            {row.processing===1? '... ' : ''}\r\n            {row.no} &nbsp; {row.discription}\r\n        </>;\r\n        let right = <Muted><EasyDate date={date} /></Muted>;\r\n        return <LMR className=\"px-3 py-2\" left={left} right={right} />\r\n    }\r\n\r\n    protected view = () => {\r\n        return <Page header={'已归档' + this.label}>\r\n            <List items={this.list} item={{render:this.archiveRow, onClick:this.archiveClick}} />\r\n        </Page>;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { Page, nav } from 'tonva-tools';\r\nimport { List, Muted, FA, LMR, EasyDate } from 'tonva-react-form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../entities';\r\nimport { CSheet, SheetUI } from './cSheet';\r\n\r\nexport class VSheetList extends VEntity<Sheet, SheetUI, CSheet> {\r\n    protected row: (values) => JSX.Element;\r\n    stateName: string;\r\n    stateLabel: string;\r\n\r\n    async open(item:any) {\r\n        this.row = this.ui.listRow || this.rowContent;\r\n        this.stateName = item.state;\r\n        this.stateLabel = this.controller.getStateLabel(this.stateName);\r\n        //await this.controller.getStateSheets(this.stateName, 0, 10);\r\n        await this.controller.pageStateItems.first(this.stateName);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    rowClick = async (brief:any) => {\r\n        if (brief.processing===1) {\r\n            this.event('processing', brief.id);\r\n            return;\r\n        }\r\n        this.event('action', brief.id);\r\n    }\r\n\r\n    private onScrollBottom = () => {\r\n        console.log('onScrollBottom');\r\n        this.controller.pageStateItems.more();\r\n    }\r\n\r\n    protected rowContent = (row:any):JSX.Element => {\r\n        let {id, no, discription, date, processing} = row;\r\n        let left = <>            \r\n            {no} &nbsp; <Muted>{discription}</Muted> {processing===1? '...' : ''}\r\n        </>;\r\n        let right = <Muted><EasyDate date={date} /></Muted>;\r\n        return <LMR className=\"px-3 py-2\" left={left} right={right} />;\r\n    }\r\n\r\n    private renderRow = (row:any, index:number) => <this.row {...row} />\r\n\r\n    protected view = () => {\r\n        //let sheets = this.controller.stateSheets;\r\n        let {pageStateItems} = this.controller;\r\n        return <Page header={this.label + ' - ' + this.stateLabel} onScrollBottom={this.onScrollBottom}>\r\n            <List items={pageStateItems} item={{render:this.renderRow, onClick:this.rowClick}} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {Page} from 'tonva-tools';\r\nimport { VSheetView } from './vSheetView';\r\nimport { CSheet, SheetUI, SheetData } from './cSheet';\r\n\r\nexport interface State {\r\n    flows: any;\r\n    data: any;\r\n}\r\nexport class VArchived extends VSheetView {\r\n    //protected controller: CSheet;\r\n    //brief: any;\r\n\r\n    async open(sheetData:SheetData) {\r\n        this.sheetData = sheetData;\r\n        /*\r\n        let {brief, data, flows} = await this.controller.getArchived(inBrief.id);\r\n        this.brief = brief;\r\n        this.data = data;\r\n        this.flows = flows;\r\n        */\r\n        this.vForm = this.createForm(undefined, this.sheetData.data);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => {\r\n        let {brief} = this.sheetData;\r\n        return <Page header={this.label + ':' + '-' + brief.no}>\r\n            <this.sheetView />\r\n        </Page>;\r\n    };\r\n}\r\n","import { Sheet } from \"../../entities\";\r\nimport { SheetUI, CSheet } from \"./cSheet\";\r\nimport { VEntity } from \"../CVEntity\";\r\n\r\nexport abstract class VSheet extends VEntity<Sheet, SheetUI, CSheet> {\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport { FA } from 'tonva-react-form';\r\nimport { VSheet } from \"./vSheet\";\r\n\r\nexport class VSheetSaved extends VSheet {\r\n    private brief: any;\r\n    async open(brief?:any) {\r\n        this.brief = brief;\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    private restart = async () => {\r\n        this.ceasePage();\r\n        await this.event('new');\r\n    }\r\n\r\n    actionClick = async (action:any) => {\r\n        this.ceasePage();\r\n        let {id, flow, state} = this.brief;\r\n        let res = await this.controller.action(id, flow, state, action.name);\r\n        this.openPage(this.acted);\r\n    }\r\n\r\n    private buttons = <>\r\n        <button className=\"btn btn-outline-primary mr-3\" onClick={this.restart}>继续开单</button>\r\n        <button className=\"btn btn-outline-info\" onClick={()=>this.backPage()}>返回</button>\r\n    </>;\r\n\r\n    private view = () => {\r\n        let {states} = this.entity;\r\n        const state = '$';\r\n        let s = states.find(v => v.name === state);\r\n        let actionButtons = <>{s.actions.map((v,index) => \r\n            <button\r\n                key={index}\r\n                className=\"btn btn-primary mr-3\"\r\n                onClick={()=>this.actionClick(v)}\r\n            >\r\n                {this.controller.getActionLabel(state, v.name)}\r\n            </button>)}\r\n        </>;\r\n        return <Page header=\"已保存\" back=\"close\">\r\n            <div className=\"p-3 d-flex flex-column align-items-center\">\r\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已保存！系统尚未处理</div>\r\n                <div className=\"p-3\">\r\n                    {actionButtons}\r\n                    {this.buttons}\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    }\r\n\r\n    private acted = () => {\r\n        return <Page>\r\n            <div className=\"p-3 d-flex flex-column align-items-center\">\r\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已处理！</div>\r\n                <div className=\"p-3\">\r\n                    {this.buttons}\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { nav, Page } from 'tonva-tools';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\n\r\nexport class VSheetProcessing extends VSheetView { \r\n    async open(sheetData:SheetData) {\r\n        this.sheetData = sheetData;\r\n        //let {brief, data, flows} = await this.controller.getSheetData(sheetId);\r\n        //this.brief = brief;\r\n        //this.flows = flows;\r\n        //this.data = data;\r\n        //this.state = this.brief.state;\r\n        this.vForm = this.createForm(undefined, sheetData.data);\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    protected page = () => {\r\n        let {brief} = this.sheetData;\r\n        let {state, no} = brief;\r\n        let stateLabel = this.controller.getStateLabel(state);\r\n        return <Page header={this.label + ':' + stateLabel + '-' + no}>\r\n            <div className=\"mb-2\">\r\n                <div className=\"d-flex px-3 py-2 border-bottom bg-light\">\r\n                    正在处理中...\r\n                </div>\r\n                <this.sheetView />\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n","import { IObservableArray, observable } from \"mobx\";\r\nimport { TypeVPage, VPage, PageItems, postWsToTop } from 'tonva-tools';\r\nimport { Sheet, StateCount } from \"../../entities\";\r\nimport { CEntity, EntityUI, VEntity } from \"../CVEntity\";\r\nimport { VSheetMain } from \"./vMain\";\r\nimport { VSheetNew } from \"./vNew\";\r\nimport { VSheetEdit } from \"./vEdit\";\r\nimport { VSheetAction } from \"./vSheetAction\";\r\nimport { VSheetSchema } from \"./vSchema\";\r\nimport { VArchives } from \"./vArchives\";\r\nimport { VSheetList } from \"./vList\";\r\nimport { VArchived } from \"./vArchived\";\r\nimport { VSheetSaved } from \"./vSaved\";\r\nimport { VSheetProcessing } from \"./vSheetProcessing\";\r\n\r\nexport interface SheetActionUI {\r\n    label: string;\r\n}\r\n\r\nexport interface StateUI {\r\n    label: string;\r\n    actions: {[name:string]: SheetActionUI}\r\n}\r\n\r\nexport interface SheetUI extends EntityUI {\r\n    CSheet?: typeof CSheet;\r\n    states?: {[name:string]: StateUI};\r\n    main?: TypeVPage<CSheet>;\r\n    sheetNew?: TypeVPage<CSheet>;\r\n    sheetSaved?: TypeVPage<CSheet>;\r\n    sheetEdit?: TypeVPage<CSheet>;\r\n    sheetAction?: TypeVPage<CSheet>;\r\n    listRow?: (row:any) => JSX.Element;\r\n    sheetTitle?: (sheetValues:any, x:any) => string;      // 返回单据的描述\r\n}\r\n\r\nexport interface SheetData {\r\n    brief: any;\r\n    data: any;\r\n    flows: any[];\r\n}\r\n\r\nexport class CSheet extends CEntity<Sheet, SheetUI> {\r\n    statesCount:IObservableArray<StateCount> = observable.array<StateCount>([], {deep:true});\r\n    curState:string;\r\n    pageStateItems: PageItems<any>;\r\n\r\n    protected async internalStart() {\r\n        await this.loadStateSheetCount();\r\n        this.pageStateItems = this.entity.createPageStateItems();\r\n        await this.openVPage(this.VSheetMain);\r\n    }\r\n\r\n    protected async onMessage(msg: any):Promise<void> {\r\n        let {type, body, from, to, push} = msg;\r\n        if (type === 'sheet') this.onSheet(from, to, body);\r\n    }\r\n    private onSheet(from:number, to:number[], sheetData:any) {\r\n        let me = this.user.id;\r\n        let {id, preState, state} = sheetData;\r\n        console.log({$:'onMessage sheet', from:from, to:to.join(','), id:id, preState:preState, state:state, me:me, sheetData:sheetData})\r\n        if (from === me) {\r\n            this.sheetActPreState(id, preState);\r\n        }\r\n        if (to.find(v=>v===me) !== undefined) {\r\n            this.sheetActState(id, state, sheetData);\r\n        }\r\n    }\r\n    private sheetActPreState(id:number, preState:string) {\r\n        this.changeStateCount(preState, -1);\r\n        if (this.curState === undefined || this.curState !== preState) return;\r\n        /*\r\n        let index = this.stateSheets.findIndex(v => v.id === id);\r\n        if (index>=0) {\r\n            this.stateSheets.splice(index, 1);\r\n        }*/\r\n        let index = this.pageStateItems.items.findIndex(v => v.id === id);\r\n        if (index>=0) {\r\n            this.pageStateItems.items.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    private sheetActState(id:number, state:string, msg:any) {\r\n        this.changeStateCount(state, 1);\r\n        if (this.curState === undefined || this.curState !== state) return;\r\n        /*\r\n        if (this.stateSheets.findIndex(v => v.id === id) < 0) {\r\n            this.stateSheets.push(msg);\r\n        }\r\n        */\r\n        if (this.pageStateItems.items.findIndex(v => v.id === id) < 0) {\r\n            this.pageStateItems.items.push(msg);\r\n        }\r\n    }\r\n\r\n    private changeStateCount(state:string, delta:number) {\r\n        if (state === undefined) return;\r\n        let index = this.statesCount.findIndex(v => v.state === state);\r\n        console.log({$:'changeState', state: state, delta: delta, index: index});\r\n        if (index < 0) return;\r\n        let stateCount = this.statesCount[index];\r\n        stateCount.count += delta;\r\n        if (stateCount.count < 0) stateCount.count = 0;\r\n    }\r\n\r\n    protected get VSheetMain():TypeVPage<CSheet> {return (this.ui&&this.ui.main) || VSheetMain}\r\n    protected get VSheetNew(): TypeVPage<CSheet> {return this.ui.sheetNew || VSheetNew}\r\n    protected get VSheetSaved(): TypeVPage<CSheet> {return this.ui.sheetSaved || VSheetSaved}\r\n    protected get VSheetEdit(): TypeVPage<CSheet> {return this.ui.sheetEdit || VSheetEdit}\r\n    protected get VSheetSchema(): TypeVPage<CSheet> {return VSheetSchema}\r\n    protected get VArchives(): TypeVPage<CSheet> {return VArchives}\r\n    protected get VArchived(): TypeVPage<CSheet> {return VArchived}\r\n    protected get VSheetList(): TypeVPage<CSheet> {return VSheetList}\r\n    protected get VSheetAction(): TypeVPage<CSheet> {return this.ui.sheetAction || VSheetAction}\r\n    protected get VSheetProcessing(): TypeVPage<CSheet> {return VSheetProcessing}\r\n    protected async onEvent(type:string, value:any) {\r\n        let c: TypeVPage<CSheet>;\r\n        switch (type) {\r\n            default: return;\r\n            case 'new': c = this.VSheetNew; break;\r\n            case 'schema': c = this.VSheetSchema; break;\r\n            case 'archives': c = this.VArchives; break;\r\n            case 'state':\r\n                this.curState = value.state;\r\n                c = this.VSheetList;\r\n                break;\r\n            case 'archived':\r\n                await this.showArchived(value); return;\r\n            case 'action':\r\n                await this.showAction(value); return;\r\n            case 'processing':\r\n                await this.showProcessing(value); return;\r\n        }\r\n        await this.openVPage(c, value);\r\n    }\r\n\r\n    async startSheet(sheetId:number) {\r\n        if (await this.beforeStart() === false) return;\r\n        await this.onEvent('action', sheetId);\r\n    }\r\n\r\n    async showAction(sheetId:number) {\r\n        let sheetData:SheetData = await this.getSheetData(sheetId);\r\n        postWsToTop({\r\n            body: {\r\n                $type: 'msg',\r\n                action: '$sheet',\r\n                msg: {\r\n                    id: sheetId,\r\n                    uq: this.cUq.id,\r\n                    state: sheetData.brief.state\r\n                }\r\n            }\r\n        });\r\n        await this.openVPage(this.VSheetAction, sheetData);\r\n    }\r\n\r\n    async showProcessing(sheetId:number) {\r\n        let sheetData:SheetData = await this.getSheetData(sheetId);\r\n        await this.openVPage(this.VSheetProcessing, sheetData);\r\n    }\r\n\r\n    async editSheet(sheetData:SheetData):Promise<any> {\r\n        //alert('修改单据：程序正在设计中');\r\n        let values = await this.vCall(this.VSheetEdit, sheetData);\r\n        return values;\r\n    }\r\n\r\n    async showArchived(inBrief:any) {\r\n        let sheetData = await this.getArchived(inBrief.id);\r\n        await this.openVPage(this.VArchived, sheetData);\r\n    }\r\n\r\n    onSave = async (values:any, valuesWithBox:any):Promise<void> => {\r\n        //let values = this.vForm.getValues();\r\n        //let ret = await this.controller.saveSheet(values, this.vForm.values);\r\n        let ret = await this.saveSheet(values, valuesWithBox);\r\n        this.ceasePage();\r\n        //this.openPage(this.finishedPage);\r\n        await this.showSaved(ret);\r\n    }\r\n\r\n    async showSaved(sheetData:any) {\r\n        await this.openVPage(this.VSheetSaved, sheetData);\r\n    }\r\n\r\n    private getStateUI(stateName:string) {\r\n        let {states} = this.res;\r\n        if (states === undefined) return;\r\n        return states[stateName];\r\n    }\r\n    getStateLabel(stateName:string) {\r\n        let state = this.getStateUI(stateName);\r\n        let ret = (state && state.label) || stateName;\r\n        switch (ret) {\r\n            default: return ret;\r\n            case '$': return '新单';\r\n        }\r\n    }\r\n    getActionLabel(stateName:string, actionName:string) {\r\n        let state = this.getStateUI(stateName);\r\n        if (state === undefined) return actionName;\r\n        let actions = state.actions;\r\n        if (actions === undefined) return actionName;\r\n        let action = actions[actionName];\r\n        return (action && action.label) || actionName;\r\n    }\r\n\r\n    private async loadStateSheetCount():Promise<void> {\r\n        this.statesCount.clear();\r\n        let statesCount = await this.entity.stateSheetCount();\r\n        this.statesCount.splice(0, 0, ...statesCount);\r\n    }\r\n\r\n    async getSheetData(sheetId:number):Promise<SheetData> {\r\n        return await this.entity.getSheet(sheetId);\r\n    }\r\n\r\n    async getArchived(sheetId:number):Promise<SheetData> {\r\n        return await this.entity.getArchive(sheetId);\r\n    }\r\n\r\n    async saveSheet(values:any, valuesWithBox:any):Promise<any> {\r\n        let {sheetTitle} = this.ui;\r\n        let disc = sheetTitle === undefined? this.label : sheetTitle(valuesWithBox, this.x);\r\n        let ret = await this.entity.save(disc, values);\r\n        //let {id, state} = ret;\r\n        //if (id > 0) this.changeStateCount(state, 1);\r\n        return ret;\r\n    }\r\n\r\n    async action(id:number, flow:number, state:string, actionName:string):Promise<any> {\r\n        return await this.entity.action(id, flow, state, actionName);\r\n    }\r\n}\r\n","export * from './cSheet';\r\nexport * from './vSheet';\r\nexport * from './vMain';\r\nexport * from './vNew';\r\nexport * from './vEdit';\r\nexport * from './vList';\r\nexport * from './vSheetAction';\r\nexport * from './vSchema';\r\nexport * from './vArchived';\r\nexport * from './vSheetView';\r\n","import * as React from 'react';\r\nimport { TuidMain, Book, Entity } from '../../entities';\r\nimport { Page } from 'tonva-tools';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CBook, BookUI } from './cBook';\r\n\r\nexport class VBookMain extends VEntity<Book, BookUI, CBook> {\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        Book\r\n    </Page>;\r\n}\r\n","import { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Book } from \"../../entities\";\r\nimport { VBookMain } from \"./vBookMain\";\r\n\r\nexport interface BookUI extends EntityUI {\r\n    CBook?: typeof CBook;\r\n    main: typeof VBookMain,\r\n}\r\n\r\nexport class CBook extends CEntity<Book, BookUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VBookMain);\r\n    }\r\n\r\n    protected get VBookMain():typeof VBookMain {return VBookMain}\r\n}\r\n","import React from \"react\";\r\nimport { View } from \"tonva-tools\";\r\nimport { List, Muted } from \"tonva-react-form\";\r\nimport { Entity } from \"../../entities\";\r\nimport { CLink } from \"../link\";\r\nimport { CUq } from \"./cUq\";\r\n\r\nexport class VUq extends View<CUq> {\r\n    protected isSysVisible = false;\r\n    protected tuidLinks: CLink[];\r\n    protected mapLinks: CLink[];\r\n    protected sheetLinks: CLink[];\r\n    protected actionLinks: CLink[];\r\n    protected queryLinks: CLink[];\r\n    protected bookLinks: CLink[];\r\n    protected historyLinks: CLink[];\r\n    protected pendingLinks: CLink[];\r\n\r\n    constructor(cUq: CUq) {\r\n        super(cUq);\r\n        let {tuidArr, mapArr, sheetArr, actionArr, queryArr, bookArr, historyArr, pendingArr} = cUq.entities;\r\n        this.tuidLinks = tuidArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cTuidMain(v)));\r\n        this.mapLinks = mapArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cMap(v)));\r\n        this.sheetLinks = sheetArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cSheet(v)));\r\n        this.actionLinks = actionArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cAction(v)));\r\n        this.queryLinks = queryArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cQuery(v)));\r\n        this.bookLinks = bookArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cBook(v)));\r\n        this.historyLinks = historyArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cHistory(v)));\r\n        this.pendingLinks = pendingArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cPending(v)));\r\n    }\r\n    protected isVisible(entity: Entity):boolean {\r\n        return entity.sys !== true || this.isSysVisible;\r\n    }\r\n    render(param?:any) {\r\n        if (this.view === undefined) return <div>??? viewModel 必须定义 view ???</div>\r\n        return React.createElement(this.view);\r\n    }\r\n\r\n    protected view = () => {\r\n        let {res, uq, error} = this.controller;\r\n        let linkItem = {\r\n            render: (cLink:CLink, index:number):JSX.Element => cLink.render(), \r\n            onClick: undefined, \r\n        };\r\n        let lists = [\r\n            {\r\n                header: res.tuid || 'TUID',\r\n                items: this.tuidLinks,\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.map || 'MAP',\r\n                items: this.mapLinks,\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.sheet || 'SHEET',\r\n                items: this.sheetLinks\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.action || 'ACTION',\r\n                items: this.actionLinks\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.query || 'QUERY',\r\n                items: this.queryLinks\r\n            },\r\n            {\r\n                cn: 'mt-2 mb-4',\r\n                header: res.book || 'BOOK',\r\n                items: this.bookLinks\r\n            },\r\n            {\r\n                cn: 'mt-2 mb-4',\r\n                header: res.history || 'HISTORY',\r\n                items: this.historyLinks\r\n            },\r\n            {\r\n                cn: 'mt-2 mb-4',\r\n                header: res.pending || 'PENDING',\r\n                items: this.pendingLinks\r\n            }\r\n        ];\r\n        let content;\r\n        if (error !== undefined) {\r\n            content = <div className=\"p-3 text-danger\">连接错误: {error}</div>;\r\n        }\r\n        else {\r\n            content = lists.map(({cn, header, items},index) => items.length > 0 && <List\r\n                key={index}\r\n                className={cn}\r\n                header={<div className=\"px-3 py-1 bg-light\"><Muted>{header}</Muted></div>}\r\n                items={items}\r\n                item={linkItem} />\r\n            );\r\n        }\r\n        return <>\r\n            <div className=\"px-3 py-1 small\">{res.uq || uq}</div>\r\n            {content}\r\n        </>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { UqApi, Controller, UnitxApi, appInFrame, resLang, nav } from 'tonva-tools';\r\nimport { Entities, TuidMain, Action, Sheet, Query, Book, Map, Entity, Tuid, History, Pending } from '../../entities';\r\nimport { CLink } from '../link';\r\nimport { CBook, BookUI } from '../book';\r\nimport { CSheet, SheetUI } from '../sheet';\r\nimport { ActionUI, CAction } from '../action';\r\nimport { QueryUI, CQuery, CQuerySelect } from '../query';\r\nimport { CTuidMain, TuidUI, CTuid, CTuidInfo, CTuidSelect, CTuidEdit, CTuidList } from '../tuid';\r\nimport { MapUI, CMap } from '../map';\r\nimport { CEntity, EntityUI } from '../CVEntity';\r\nimport { PureJSONContent } from '../form/viewModel';\r\nimport { VUq } from './vUq';\r\nimport { CHistory, HistoryUI } from '../history';\r\nimport { CPending, PendingUI } from '../pending';\r\nimport { CApp } from '../CApp';\r\n\r\nexport type EntityType = 'sheet' | 'action' | 'tuid' | 'query' | 'book' | 'map' | 'history' | 'pending';\r\n\r\nexport interface UqUI {\r\n    CTuidMain?: typeof CTuidMain;\r\n    CTuidEdit?: typeof CTuidEdit;\r\n    CTuidList?: typeof CTuidList;\r\n    CTuidSelect?: typeof CTuidSelect;\r\n    CTuidInfo?: typeof CTuidInfo;\r\n    CQuery?: typeof CQuery;\r\n    CQuerySelect?: typeof CQuerySelect;\r\n    CMap?: typeof CMap;\r\n    CAction?: typeof CAction;\r\n    CSheet?: typeof CSheet;\r\n    CBook?: typeof CBook;\r\n    CHistory?: typeof CHistory;\r\n    CPending?: typeof CPending;\r\n    tuid?: {[name:string]: TuidUI};\r\n    sheet?: {[name:string]: SheetUI};\r\n    action?: {[name:string]: ActionUI};\r\n    map?: {[name:string]: MapUI};\r\n    query?: {[name:string]: QueryUI};\r\n    book?: {[name:string]: BookUI};    \r\n    history?: {[name:string]: HistoryUI};\r\n    pending?: {[name:string]: PendingUI};\r\n    res?: any;\r\n}\r\n\r\nfunction lowerPropertyName(entities: {[name:string]: EntityUI}) {\r\n    if (entities === undefined) return;\r\n    for (let i in entities) entities[i.toLowerCase()] = entities[i];\r\n}\r\n\r\nexport class CUq extends Controller /* implements Uq*/ {\r\n    private ui:any;\r\n    private CTuidMain: typeof CTuidMain;\r\n    private CTuidEdit: typeof CTuidEdit;\r\n    private CTuidList: typeof CTuidList;\r\n    private CTuidSelect: typeof CTuidSelect;\r\n    private CTuidInfo: typeof CTuidInfo;\r\n    private CQuery: typeof CQuery;\r\n    private CQuerySelect: typeof CQuerySelect;\r\n    private CMap: typeof CMap;\r\n    private CAction: typeof CAction;\r\n    private CSheet: typeof CSheet;\r\n    private CBook: typeof CBook;\r\n    private CHistory: typeof CHistory;\r\n    private CPending: typeof CPending;\r\n\r\n    constructor(cApp:CApp, uq:string, appId:number, uqId:number, access:string, ui:UqUI) {\r\n        super(resLang(ui.res));\r\n        this.cApp = cApp;\r\n        this.uq = uq;\r\n        this.id = uqId;\r\n        // 每一个ui都转换成小写的key的版本\r\n        lowerPropertyName(ui.tuid);\r\n        lowerPropertyName(ui.sheet);\r\n        lowerPropertyName(ui.map);\r\n        lowerPropertyName(ui.query);\r\n        lowerPropertyName(ui.action);\r\n        lowerPropertyName(ui.book);\r\n        lowerPropertyName(ui.history);\r\n        lowerPropertyName(ui.pending);\r\n        this.ui = ui;\r\n        this.CTuidMain = ui.CTuidMain || CTuidMain;\r\n        this.CTuidEdit = ui.CTuidEdit || CTuidEdit;\r\n        this.CTuidList = ui.CTuidList || CTuidList;\r\n        this.CTuidSelect = ui.CTuidSelect || CTuidSelect;\r\n        this.CTuidInfo = ui.CTuidInfo || CTuidInfo;\r\n        this.CQuery = ui.CQuery || CQuery;\r\n        this.CQuerySelect = ui.CQuerySelect || CQuerySelect;\r\n        this.CMap = ui.CMap || CMap;\r\n        this.CAction = ui.CAction || CAction;\r\n        this.CSheet = ui.CSheet || CSheet;\r\n        this.CBook = ui.CBook || CBook;\r\n        this.CHistory = ui.CHistory || CHistory;\r\n        this.CPending = ui.CPending || CPending;\r\n\r\n        let token = undefined;\r\n        let uqOwner:string, uqName:string;\r\n        let p = uq.split('/');\r\n        switch (p.length) {\r\n            case 1:\r\n                uqOwner = '$$$';\r\n                uqName = p[0];\r\n                break;\r\n            case 2:\r\n                uqOwner = p[0];\r\n                uqName = p[1];\r\n                break;\r\n            default:\r\n                console.log('uq must be uqOwner/uqName format');\r\n                return;\r\n        }\r\n\r\n        let hash = document.location.hash;\r\n        let baseUrl = hash===undefined || hash===''? \r\n            'debug/':'tv/';\r\n\r\n        let acc: string[];\r\n        if (access === null || access === undefined || access === '*') {\r\n            acc = [];\r\n        }\r\n        else {\r\n            acc = access.split(';').map(v => v.trim()).filter(v => v.length > 0);\r\n        }\r\n        let uqApi:UqApi;\r\n        if (uq === '$$$/$unitx') {\r\n            // 这里假定，点击home link之后，已经设置unit了\r\n            // 调用 UnitxApi会自动搜索绑定 unitx service\r\n            uqApi = new UnitxApi(appInFrame.unit);\r\n        }\r\n        else {\r\n            uqApi = new UqApi(baseUrl, uqOwner, uqName, acc, true);\r\n        }\r\n        this.entities = new Entities(this, uqApi, appId);\r\n    }\r\n\r\n    protected async internalStart() {\r\n    }\r\n\r\n    cApp:CApp;\r\n    uq: string;\r\n    id: number;\r\n    res: any;\r\n    entities:Entities;\r\n    error: string;\r\n    private schemaLoaded:boolean = false;\r\n\r\n    protected async loadEntites() {\r\n        await this.entities.loadAccess();\r\n    }\r\n\r\n    async loadSchema():Promise<string> {\r\n        try {\r\n            if (this.schemaLoaded === true) return;\r\n            await this.loadEntites();\r\n            if (this.id === undefined) this.id = this.entities.uqId;\r\n            for (let i in this.ui) {\r\n                let g = this.ui[i];\r\n                if (g === undefined) continue;\r\n                let {caption, collection} = g;\r\n                if (collection === undefined) continue;\r\n                for (let j in collection) {\r\n                    if (this.entities[i](j) === undefined) {\r\n                        console.warn(i + ':' + '\\'' + j + '\\' is not uq entity');\r\n                    }\r\n                }\r\n            }\r\n            this.schemaLoaded = true;\r\n            return;\r\n        }\r\n        catch(err) {\r\n            console.error(err);\r\n            return this.error = err;\r\n        }\r\n    }\r\n\r\n    async getQuerySearch(name:string):Promise<Query> {\r\n        let query = this.entities.query(name);\r\n        if (query === undefined) \r\n            alert(`QUERY ${name} 没有定义!`);\r\n        else {\r\n            await query.loadSchema();\r\n            let {returns} = query;\r\n            if (returns.length > 1) {\r\n                alert(`QUERY ${name} 返回多张表, 无法做QuerySearch`);\r\n            }\r\n        }\r\n        return query;\r\n    }\r\n    getTuidPlaceHolder(tuid:Tuid) {\r\n        let {tuidPlaceHolder, entity} = this.res;\r\n        let {name} = tuid;\r\n        let type:string;\r\n        if (entity !== undefined) {\r\n            let en = entity[name];\r\n            if (en !== undefined) {\r\n                type = en.label;\r\n            }\r\n        }\r\n        return (tuidPlaceHolder || 'Select');\r\n    }\r\n    getNone() {\r\n        let {none} = this.res;\r\n        return none || 'none';\r\n    }\r\n    protected isSysVisible = false;\r\n    protected isVisible(entity: Entity):boolean {\r\n        return entity.sys !== true || this.isSysVisible;\r\n    }\r\n\r\n    async navSheet(sheetTypeId:number, sheetId:number) {\r\n        let sheet = this.entities.sheetFromTypeId(sheetTypeId);\r\n        if (sheet === undefined) {\r\n            alert('sheetTypeId ' + sheetTypeId + ' is not exists!');\r\n            return;\r\n        }\r\n        let cSheet = this.cSheet(sheet);\r\n        await cSheet.startSheet(sheetId);\r\n    }\r\n\r\n    sheet(entityName:string) {return this.entities.sheet(entityName);}\r\n    action(entityName:string) {return this.entities.action(entityName);}\r\n    query(entityName:string) {return this.entities.query(entityName);}\r\n    book(entityName:string) {return this.entities.book(entityName);}\r\n    map(entityName:string) {return this.entities.map(entityName);}\r\n    history(entityName:string) {return this.entities.history(entityName);}\r\n    pending(entityName:string) {return this.entities.pending(entityName);}\r\n    tuid(entityName:string) {return this.entities.tuid(entityName)}\r\n    tuidDiv(entityName:string, divName:string) {\r\n        let tuid = this.entities.tuid(entityName);\r\n        if (tuid === undefined) return;\r\n        let {divs} = tuid;\r\n        if (divs === undefined) return;\r\n        return divs[divName];\r\n    }\r\n\r\n    cSheetFromName(entityName:string):CSheet {\r\n        let entity = this.entities.sheet(entityName);\r\n        if (entity !== undefined) return this.cSheet(entity);\r\n    }\r\n    cActionFromName(entityName:string) {\r\n        let entity = this.entities.action(entityName);\r\n        if (entity !== undefined) return this.cAction(entity);\r\n    }\r\n    cQueryFromName(entityName:string) {\r\n        let entity = this.entities.query(entityName);\r\n        if (entity !== undefined) return this.cQuery(entity);\r\n    }\r\n    cBookFromName(entityName:string) {\r\n        let entity = this.entities.book(entityName);\r\n        if (entity !== undefined) return this.cBook(entity);\r\n    }\r\n    cMapFromName(entityName:string) {\r\n        let entity = this.entities.map(entityName);\r\n        if (entity !== undefined) return this.cMap(entity);\r\n    }\r\n    cHistoryFromName(entityName:string) {\r\n        let entity = this.entities.history(entityName);\r\n        if (entity !== undefined) return this.cHistory(entity);\r\n    }\r\n    cPendingFromName(entityName:string) {\r\n        let entity = this.entities.pending(entityName);\r\n        if (entity !== undefined) return this.cPending(entity);\r\n    }\r\n    cTuidMainFromName(entityName:string) {\r\n        let entity = this.entities.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidMain(entity);\r\n    }\r\n    cTuidEditFromName(entityName:string) {\r\n        let entity = this.entities.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidEdit(entity);\r\n    }\r\n    cTuidInfoFromName(entityName:string) {\r\n        let entity = this.entities.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidInfo(entity);\r\n    }\r\n\r\n    cTuidSelectFromName(entityName:string) {\r\n        let entity = this.entities.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidSelect(entity);\r\n    }\r\n\r\n    cFromName(entityType:EntityType, entityName:string): CEntity<Entity, EntityUI> {\r\n        switch (entityType) {\r\n            case 'sheet':\r\n                let sheet = this.entities.sheet(entityName);\r\n                if (sheet === undefined) return;\r\n                return this.cSheet(sheet);\r\n            case 'action':\r\n                let action = this.entities.action(entityName);\r\n                if (action === undefined) return;\r\n                return this.cAction(action);\r\n            case 'tuid':\r\n                let tuid = this.entities.tuid(entityName);\r\n                if (tuid === undefined) return;\r\n                return this.cTuidMain(tuid);\r\n            case 'query':\r\n                let query = this.entities.query(entityName);\r\n                if (query === undefined) return;\r\n                return this.cQuery(query);\r\n            case 'book':\r\n                let book = this.entities.book(entityName);\r\n                if (book === undefined) return;\r\n                return this.cBook(book);\r\n            case 'map':\r\n                let map = this.entities.map(entityName);\r\n                if (map === undefined) return;\r\n                return this.cMap(map);\r\n            case 'history':\r\n                let history = this.entities.history(entityName);\r\n                if (history === undefined) return;\r\n                return this.cHistory(history);\r\n            case 'pending':\r\n                let pending = this.entities.pending(entityName);\r\n                if (pending === undefined) return;\r\n                return this.cPending(pending);\r\n        }\r\n    }\r\n\r\n    linkFromName(entityType:EntityType, entityName:string) {\r\n        return this.link(this.cFromName(entityType, entityName));\r\n    }\r\n\r\n    private getUI<T extends Entity, UI extends EntityUI>(t:T):{ui:UI, res:any} {\r\n        let ui, res;\r\n        let {name, typeName} = t;\r\n        if (this.ui !== undefined) {\r\n            let tUI = this.ui[typeName];\r\n            if (tUI !== undefined) {\r\n                ui = tUI[name];\r\n            }\r\n        }\r\n        let {entity} = this.res;\r\n        if (entity !== undefined) {\r\n            res = entity[name];\r\n        }\r\n        return {ui: ui || {}, res: res || {} };\r\n    }\r\n\r\n    link(cEntity:CEntity<Entity, EntityUI>) {\r\n        return new CLink(cEntity);\r\n    }\r\n\r\n    get tuidLinks() {\r\n        return this.entities.tuidArr.filter(v => this.isVisible(v)).map(v => this.link(this.cTuidMain(v)));\r\n    }\r\n    cTuidMain(tuid:TuidMain):CTuidMain {\r\n        let {ui, res} = this.getUI<TuidMain, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidMain || this.CTuidMain)(this, tuid, ui, res);\r\n    }\r\n    cTuidEdit(tuid:TuidMain):CTuidEdit {\r\n        let {ui, res} = this.getUI<TuidMain, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidEdit || this.CTuidEdit)(this, tuid, ui, res);\r\n    }\r\n    cTuidList(tuid:TuidMain):CTuidList {\r\n        let {ui, res} = this.getUI<TuidMain, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidList || this.CTuidList)(this, tuid, ui, res);\r\n    }\r\n    cTuidSelect(tuid:Tuid):CTuidSelect {\r\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid.owner || tuid);\r\n        return new (ui && ui.CTuidSelect || this.CTuidSelect)(this, tuid, ui, res);\r\n    }\r\n    cTuidInfo(tuid:TuidMain):CTuidInfo {\r\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidInfo || this.CTuidInfo)(this, tuid, ui, res);\r\n    }\r\n\r\n    cSheet(sheet:Sheet/*, sheetUI?:SheetUI, sheetRes?:any*/):CSheet {\r\n        let {ui, res} = this.getUI<Sheet, SheetUI>(sheet);\r\n        //if (sheetUI !== undefined) ui = sheetUI;\r\n        //if (sheetRes !== undefined) res = sheetRes;\r\n        //return new (ui && ui.CSheet || this.CSheet)(this, sheet, sheetUI, sheetRes);\r\n        return new (ui && ui.CSheet || this.CSheet)(this, sheet, ui, res);\r\n    }\r\n    get sheetLinks() { \r\n        return this.entities.sheetArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cSheet(v))\r\n        });\r\n    }\r\n\r\n    cAction(action:Action):CAction {\r\n        let {ui, res} = this.getUI<Action, ActionUI>(action);\r\n        return new (ui && ui.CAction || this.CAction)(this, action, ui, res);\r\n    }\r\n    get actionLinks() { \r\n        return this.entities.actionArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cAction(v))\r\n        });\r\n    }\r\n\r\n    cQuery(query:Query):CQuery {\r\n        let {ui, res} = this.getUI<Query, QueryUI>(query);\r\n        return new (ui && ui.CQuery || this.CQuery)(this, query, ui, res);\r\n    }\r\n    cQuerySelect(queryName:string):CQuerySelect {\r\n        let query = this.entities.query(queryName);\r\n        if (query === undefined) return;\r\n        let {ui, res} = this.getUI<Query, QueryUI>(query);\r\n        return new (ui && ui.CQuerySelect || this.CQuerySelect)(this, query, ui, res);\r\n    }\r\n    get queryLinks() {\r\n        return this.entities.queryArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cQuery(v))\r\n        });\r\n    }\r\n    \r\n    cBook(book:Book):CBook {\r\n        let {ui, res} = this.getUI<Book, BookUI>(book);\r\n        return new (ui && ui.CBook || this.CBook)(this, book, ui, res);\r\n    }\r\n    get bookLinks() { \r\n        return this.entities.bookArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cBook(v))\r\n        });\r\n    }\r\n    \r\n    cHistory(history:History):CHistory {\r\n        let {ui, res} = this.getUI<History, HistoryUI>(history);\r\n        return new (ui && ui.CHistory || this.CHistory)(this, history, ui, res);\r\n    }\r\n    get historyLinks() { \r\n        return this.entities.historyArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cHistory(v))\r\n        });\r\n    }\r\n    \r\n    cPending(pending:Pending):CPending {\r\n        let {ui, res} = this.getUI<Pending, PendingUI>(pending);\r\n        return new (ui && ui.CPending || this.CPending)(this, pending, ui, res);\r\n    }\r\n    get pendingLinks() { \r\n        return this.entities.pendingArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cPending(v))\r\n        });\r\n    }\r\n    \r\n    cMap(map:Map):CMap {\r\n        let {ui, res} = this.getUI<Map, MapUI>(map);\r\n        return new (ui && ui.CMap || this.CMap)(this, map, ui, res);\r\n    }\r\n    get mapLinks() { \r\n        return this.entities.mapArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cMap(v));\r\n        });\r\n    }\r\n\r\n    getTuidContent(tuid:Tuid): React.StatelessComponent<any> {\r\n        let {owner} = tuid;\r\n        if (owner === undefined) {\r\n            let {ui} = this.getUI<Tuid, TuidUI>(tuid);\r\n            return (ui && ui.content) || PureJSONContent;\r\n        }\r\n        else {\r\n            let {ui} = this.getUI<Tuid, TuidUI>(owner);\r\n            return (ui && ui.divs && ui.divs[tuid.name].content) || PureJSONContent;\r\n        }\r\n    }\r\n\r\n    async showTuid(tuid:Tuid, id:number):Promise<void> {\r\n        let {owner} = tuid;\r\n        let c = this.cTuidInfo(owner || (tuid as TuidMain));\r\n        await c.start(id);\r\n    }\r\n\r\n    protected get VUq():typeof VUq {return VUq}\r\n\r\n    render() {\r\n        let v = new (this.VUq)(this);\r\n        return v.render();\r\n    }\r\n}\r\n\r\n","export * from './cUq';\r\nexport * from './vUq';","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport className from 'classnames';\r\nimport { List, LMR, FA } from 'tonva-react-form';\r\nimport { Page, nav } from 'tonva-tools';\r\nimport { tv } from '../../tools';\r\nimport { Map } from '../../entities';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CMap, MapItem, MapKey, MapUI } from './cMap';\r\nimport { PureJSONContent } from '../form/viewModel';\r\n\r\nexport class VMapMain extends VEntity<Map, MapUI, CMap> {\r\n    private isFrom: boolean;\r\n\r\n    async open(param?:any) {\r\n        this.isFrom = this.controller.isFrom;\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    itemRender = (item:MapItem, index:number) => {\r\n        return <this.ItemRow item={item} />;\r\n    }\r\n\r\n    private ItemRow = observer(({item}: {item:MapItem}) => {\r\n        let {tuid, box, children, isLeaf, keyIndex, values} = item;\r\n        let keyUI = this.controller.keyUIs[keyIndex];\r\n        let {content:keyContent, valuesContent, none:keyNone} = keyUI;\r\n        let add:any, remove:any;\r\n        if (this.isFrom === false) {\r\n            add = <button className=\"btn btn-link btn-sm\" onClick={()=>this.controller.addClick(item)}>\r\n                <FA name=\"plus\" />\r\n            </button>;\r\n            remove = <button className=\"btn btn-link btn-sm\" onClick={()=>this.controller.removeClick(item)}>\r\n                <FA className=\"text-info\" name=\"trash\" />\r\n            </button>;\r\n        }\r\n        let right:any;\r\n        if (isLeaf === false) {\r\n            if (keyIndex === 0)\r\n                right = add;\r\n            else\r\n                right = <>{remove} &nbsp; {add}</>;\r\n        }\r\n        else if (keyIndex > 0) {\r\n            right = remove;\r\n        }\r\n        let content:any, border:any, valuesView:any;\r\n        if (isLeaf === true) {\r\n            content = undefined; //<div className=\"ml-5\">leaf</div>;\r\n            if (values) {\r\n                //valuesView = null; // 现在不显示values content了\r\n                valuesView = (valuesContent || PureJSONContent)(values, this.x);\r\n            }\r\n        }\r\n        else {\r\n            border = \"border-bottom\";\r\n            let none = keyNone && keyNone(this.x);\r\n            content = <List \r\n                className=\"ml-4\" \r\n                items={children} \r\n                item={{onClick:undefined, render:this.itemRender}}\r\n                none={none} />\r\n        }\r\n        let left = <div className=\"py-1 pr-3\">{tv(box, keyContent, this.x)}</div>;\r\n        return <div className=\"d-flex flex-column\">\r\n            <LMR className={className('px-3', 'py-2', border)}\r\n                left={left}\r\n                right={right}\r\n            >\r\n                <div className=\"py-1\">{valuesView}</div>\r\n            </LMR>\r\n            {content}\r\n        </div>;\r\n    });\r\n\r\n    protected get view() { return () => <Page header={this.label}>\r\n            <List items={this.controller.items} item={{className:'my-2', onClick:undefined, render:this.itemRender}} />\r\n        </Page>\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { VEntity } from \"../CVEntity\";\r\nimport { MapUI, CMap } from \"./cMap\";\r\nimport { Map } from \"../../entities\";\r\nimport { Page } from \"tonva-tools\";\r\nimport { VForm } from '../form';\r\n\r\nexport class VInputValues extends VEntity<Map, MapUI, CMap> {\r\n    private vForm: VForm;\r\n\r\n    async open(param?:any) {\r\n        this.vForm = this.createForm(this.onValuesSubmit);\r\n        this.openPageElement(<this.view />);\r\n    }\r\n\r\n    private onValuesSubmit = async () => {\r\n        this.ceasePage();\r\n        let values = this.vForm.getValues();\r\n        this.returnCall(values);\r\n    }\r\n\r\n    private view = () => {\r\n        return <Page>\r\n            {this.vForm.render()}\r\n        </Page>\r\n    }\r\n}\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\nimport { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Map, Tuid, BoxId, Field, TuidMain, fieldDefaultValue } from \"../../entities\";\r\nimport { VMapMain } from \"./vMain\";\r\nimport { observable } from \"mobx\";\r\nimport { PureJSONContent } from '../form/viewModel';\r\nimport { VInputValues } from './inputValues';\r\n\r\nexport interface MapKey {\r\n    content: (values, x?:any) => JSX.Element;\r\n    valuesContent?: (values, x?:any) => JSX.Element;\r\n    none?: (x:any)=>string;\r\n}\r\n\r\nexport interface MapUI extends EntityUI {\r\n    CMap?: typeof CMap;\r\n    keys?: MapKey[],\r\n}\r\n\r\nexport class MapItem {\r\n    parent: MapItem;\r\n    tuid: Tuid;\r\n    box: BoxId;\r\n    isLeaf: boolean;\r\n    keyIndex:number;\r\n    children: MapItem[] = observable.array([], {deep: true});\r\n    values: any;\r\n    constructor(parent:MapItem, tuid:Tuid, box:BoxId, keyIndex:number) {\r\n        this.parent = parent;\r\n        this.tuid = tuid;\r\n        this.box = box;\r\n        this.keyIndex = keyIndex;\r\n        this.isLeaf = false;\r\n    }\r\n}\r\n\r\nexport class CMap extends CEntity<Map, MapUI> {\r\n    isFrom: boolean;\r\n    items:MapItem[];\r\n    keyFields: Field[];\r\n    keyUIs: MapKey[];\r\n\r\n    protected async internalStart() {\r\n        let {keys, schemaFrom} = this.entity;\r\n        this.isFrom = schemaFrom !== undefined;\r\n        let q = this.entity.queries.all;\r\n        let result = await q.query({});\r\n        //let data = await this.entity.unpackReturns(res);\r\n        let ret = result.ret;\r\n        let keysLen = keys.length;\r\n        this.keyUIs = _.clone(this.ui.keys || []);\r\n        this.keyFields = [];\r\n        let retFields = q.returns[0].fields;\r\n        for (let i=0; i<keysLen; i++) {\r\n            this.keyFields.push(retFields[i]);\r\n            if (i >= this.keyUIs.length) {\r\n                this.keyUIs.push({\r\n                    content: PureJSONContent,\r\n                });\r\n            }\r\n        }\r\n        this.items = observable([]);\r\n        let item:MapItem = undefined;\r\n        for (let r of ret) {\r\n            let newItem = this.addItem(item, r);\r\n            if (newItem !== undefined) {\r\n                this.items.push(newItem);\r\n                item = newItem;\r\n            }\r\n        }\r\n\r\n        await this.openVPage(this.VMapMain);\r\n    }\r\n\r\n    private createItem(parent:MapItem, tuid:Tuid, box:BoxId, keyIndex:number, values?:any) {\r\n        let item = new MapItem(parent, tuid, box, keyIndex);\r\n        if (keyIndex === this.keyFields.length - 1) {\r\n            item.isLeaf = true;\r\n            item.values = values;\r\n        }\r\n        return item;\r\n    }\r\n\r\n    addItem(item:MapItem, row:any):MapItem {\r\n        let ret:MapItem = undefined;\r\n        let keysLen = this.keyFields.length;\r\n        let p = item;\r\n        for (let i=0;i<keysLen;i++) {\r\n            let key = this.keyFields[i];\r\n            let {name} = key;\r\n            let tuid = key._tuid;\r\n            let val:BoxId = row[name];\r\n            if (val === undefined) break;\r\n            let {id} = val;\r\n            if (i === 0) {\r\n                if (id === 0) continue;\r\n                if (p === undefined || p.box.id !== id) {\r\n                    ret = p = this.createItem(undefined, tuid, val, i, row);\r\n                }\r\n                continue;\r\n            }\r\n            let {children, box} = p;\r\n            let len = children.length;\r\n            if (len > 0) {\r\n                let n = children[len-1];\r\n                if (n.box.id === id) {\r\n                    p = n;\r\n                    continue;\r\n                }\r\n            }\r\n            if (id > 0) {\r\n                children.push(p = this.createItem(p, tuid, val, i, row));\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    async searchOnKey(keyField:Field, param):Promise<number> {\r\n        let {_tuid, _ownerField} = keyField;\r\n        let cTuidSelect = this.cUq.cTuidSelect(_tuid);\r\n        let callParam = param;\r\n        if (_ownerField !== undefined) {\r\n            callParam = param[_ownerField.name];\r\n            if (typeof callParam === 'object') {\r\n                callParam = callParam.id;\r\n            }\r\n        }\r\n        let ret = await cTuidSelect.call(callParam);\r\n        return _tuid.getIdFromObj(ret);\r\n    }\r\n\r\n    addClick = async(item:MapItem) => {\r\n        let {keyIndex, children} = item;\r\n        let keysLen = this.keyFields.length;\r\n        let keysLast = keysLen-1;\r\n        let idx = keyIndex + 1;\r\n        if (idx >= keysLen) return;\r\n        let keyField = this.keyFields[idx];\r\n        let kn = keyField.name;\r\n        let tuid = keyField._tuid;\r\n        let searchParam = {} as any;\r\n        let data = {} as any;\r\n        for (let p=item;p!==undefined;p=p.parent) {\r\n            let {keyIndex:ki, box} = p;\r\n            let kn = this.keyFields[ki].name;\r\n            //searchParam[kn] = data['_' + kn] = box.id;\r\n            searchParam[kn] = data[kn] = box.id;\r\n        }\r\n\r\n        let id = await this.searchOnKey(keyField, searchParam);\r\n        if (id === undefined || id <= 0) return;\r\n        tuid.useId(id);\r\n        let idBox = tuid.boxId(id);\r\n        let arr1 = {} as any;\r\n        let values:any = {};\r\n        if (keyIndex+1===keysLast) {\r\n            tuid.useId(id);\r\n            //values[kn] = arr1['_' + kn] = idBox;\r\n            values[kn] = arr1[kn] = idBox;\r\n            if (this.entity.fields.length > 0) {\r\n                let ret = await this.vCall(VInputValues, data);\r\n                for (let i in ret) {\r\n                    //values[i] = arr1['_' + i] = ret[i];\r\n                    values[i] = arr1[i] = ret[i];\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            //values[kn] = data['_' + kn] = idBox;\r\n            values[kn] = data[kn] = idBox;\r\n            for (let i=idx+1;i<keysLast;i++) {\r\n                //data['_' + this.keyFields[i].name] = 0;\r\n                data[this.keyFields[i].name] = 0;\r\n            }\r\n            // 填map的key field 0 值\r\n            //arr1['_' + this.keyFields[keysLast].name] = 0;\r\n            arr1[this.keyFields[keysLast].name] = 0;\r\n            let {fields} = this.entity;\r\n            for (let f of fields) {\r\n                let {name, type, null:nullable} = f;\r\n                if (!(nullable === true)) {\r\n                    //arr1['_' + f.name] = fieldDefaultValue(type);\r\n                    arr1[f.name] = fieldDefaultValue(type);\r\n                }\r\n            }\r\n        }\r\n        data.arr1 = [arr1];\r\n        await this.entity.actions.add.submit(data);\r\n        let rowIndex = children.findIndex(v => v.box.id === id);\r\n        if (rowIndex < 0) {\r\n            children.push(this.createItem(item, tuid, idBox, idx, values));\r\n        }\r\n        else {\r\n            let {fields} = this.entity;\r\n            if (fields !== undefined && fields.length > 0) {\r\n                let row = children[rowIndex];\r\n                children.splice(rowIndex, 1);\r\n                row.values = values;\r\n                /*\r\n                for (let f of fields) {\r\n                    let {name:fn} = f;\r\n                    row.values[fn] = values[fn];\r\n                }*/\r\n                children.splice(rowIndex, 0, row);\r\n            }\r\n        }\r\n        this.removeCeased();\r\n    }\r\n\r\n    removeClick = async(item:MapItem) => {\r\n        let keyField = this.keyFields[item.keyIndex];\r\n        let tuid = keyField._tuid;\r\n        let cTuidMain = this.cUq.cTuidMain(tuid.Main as TuidMain);\r\n        let label = cTuidMain.getLable(tuid);\r\n        let confirmDelete:_.TemplateExecutor = \r\n            this.res.confirmDelete \r\n            || _.template('do you really want to remove ${label}?');\r\n        if (confirm(confirmDelete({label:label})) === false) return;\r\n        let map:Map = this.entity;\r\n        let data = {} as any;\r\n        let arr1 = data['arr1'] = [];\r\n        let v0 = {} as any;\r\n        arr1.push(v0);\r\n        for (let p=item; p!==undefined;p=p.parent) {\r\n            let ki=p.keyIndex;\r\n            //v0['_'+this.keyFields[ki].name] = p.box.id;\r\n            v0[this.keyFields[ki].name] = p.box.id;\r\n        }\r\n        let len = this.keyFields.length;\r\n        for (let i=item.keyIndex+1; i<len; i++) {\r\n            let k = this.keyFields[i];\r\n            //v0['_'+k.name] = -1;\r\n            v0[k.name] = -1;\r\n        }\r\n        await map.actions.del.submit(data);\r\n        let children = item.parent.children;\r\n        let index = children.findIndex(v => v === item);\r\n        if (index >= 0) children.splice(index, 1);\r\n    }\r\n\r\n    protected get VMapMain():typeof VMapMain {return VMapMain}\r\n}\r\n","export * from './cMap';\r\nexport * from './vMain';\r\n","import * as React from 'react';\r\nimport { TuidMain, History, Entity } from '../../entities';\r\nimport { Page } from 'tonva-tools';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CHistory, HistoryUI } from './cHistory';\r\n\r\nexport class VHistoryMain extends VEntity<History, HistoryUI, CHistory> {\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        History\r\n    </Page>;\r\n}\r\n","import { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { History } from \"../../entities\";\r\nimport { VHistoryMain } from \"./vHistoryMain\";\r\n\r\nexport interface HistoryUI extends EntityUI {\r\n    CHistory?: typeof CHistory;\r\n    main: typeof VHistoryMain,\r\n}\r\n\r\nexport class CHistory extends CEntity<History, HistoryUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VHistoryMain);\r\n    }\r\n\r\n    protected get VHistoryMain():typeof VHistoryMain {return VHistoryMain}\r\n}\r\n","export * from './cHistory';\r\nexport * from './vHistoryMain';\r\n","import * as React from 'react';\r\nimport { VPage, Page } from 'tonva-tools';\r\nimport { jsonStringify } from '../../tools';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CAction, ActionUI } from './cAction';\r\nimport { Action } from '../../entities';\r\n\r\nexport class VActionMain extends VEntity<Action, ActionUI, CAction> {\r\n    protected vForm: VForm;\r\n    protected returns: any;\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        this.openPage(this.mainPage);\r\n    }\r\n\r\n    private onSubmit = async () => {\r\n        let values = this.vForm.getValues();\r\n        this.returns = await this.controller.submit(values);\r\n        this.closePage();\r\n        this.openPage(this.resultPage);\r\n    }\r\n\r\n    protected mainPage = () => {\r\n        let {label} = this.controller;\r\n        return <Page header={label}>\r\n            {this.vForm.render('mx-3 my-2')}\r\n        </Page>;\r\n    }\r\n\r\n    protected resultPage = () => {\r\n        let {label} = this.controller;\r\n        return <Page header={label} back=\"close\">\r\n            完成！\r\n            <pre>\r\n                {jsonStringify(this.returns)}\r\n            </pre>\r\n        </Page>;\r\n    }\r\n}\r\n","import { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Action } from \"../../entities\";\r\nimport { VActionMain } from \"./vActionMain\";\r\n\r\nexport interface ActionUI extends EntityUI {\r\n    CAction?: typeof CAction;\r\n    //main: typeof VActionMain,\r\n}\r\n\r\nexport class CAction extends CEntity<Action, ActionUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VActionMain);\r\n    }\r\n\r\n    protected get VActionMain():typeof VActionMain {return VActionMain}\r\n\r\n    async submit(values:any) {\r\n        return this.entity.submit(values);\r\n    }\r\n}\r\n","export * from './cAction';\r\nexport * from './vActionMain';\r\n","import * as React from 'react';\r\nimport { TuidMain, Pending, Entity } from '../../entities';\r\nimport { Page } from 'tonva-tools';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CPending, PendingUI } from './cPending';\r\n\r\nexport class VPendingMain extends VEntity<Pending, PendingUI, CPending> {\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        pending\r\n    </Page>;\r\n}\r\n","import { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Pending } from \"../../entities\";\r\nimport { VPendingMain } from \"./vPendingMain\";\r\n\r\nexport interface PendingUI extends EntityUI {\r\n    CPending?: typeof CPending;\r\n    main: typeof VPendingMain,\r\n}\r\n\r\nexport class CPending extends CEntity<Pending, PendingUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VPendingMain);\r\n    }\r\n\r\n    protected get VPendingMain():typeof VPendingMain {return VPendingMain}\r\n}\r\n","export * from './cPending';\r\nexport * from './vPendingMain';\r\n","import * as React from 'react';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\n\r\nexport abstract class ItemEdit {\r\n    protected name: string;\r\n    protected itemSchema: ItemSchema;\r\n    protected uiItem:UiItem;\r\n    protected value: any;\r\n    protected label: string;\r\n\r\n    @observable protected isChanged: boolean = false;\r\n    protected newValue: any;\r\n\r\n    constructor(itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any) {\r\n        this.itemSchema = itemSchema;\r\n        this.uiItem = uiItem\r\n        this.value = value;\r\n        let {name} = itemSchema;\r\n        this.name = name;\r\n        this.label = label;\r\n    }\r\n    async start():Promise<any> {\r\n        return await this.internalStart();\r\n    }\r\n\r\n    protected abstract internalStart():Promise<any>;\r\n\r\n    async end():Promise<any> {\r\n        await this.internalEnd()\r\n    }\r\n\r\n    protected async internalEnd():Promise<void> {nav.pop()}\r\n}\r\n","\r\nimport {setCenterToken} from './uqApi';\r\nimport {WSChannel} from './wsChannel';\r\n\r\nexport const netToken = {\r\n    set(userId:number, token:string) {\r\n        setCenterToken(userId, token);\r\n        WSChannel.setCenterToken(token);\r\n    },\r\n    clear() {\r\n        setCenterToken(0, undefined);\r\n        WSChannel.setCenterToken(undefined);\r\n    }\r\n};\r\n","import {CenterApi} from '../net';\r\nimport {User, decodeUserToken} from '../user';\r\n//import { nav } from '../ui';\r\n\r\nexport class UserApi extends CenterApi {\r\n    async login(params: {user: string, pwd: string, guest: number}): Promise<any> {\r\n        //(params as any).device = nav.local.device.get();\r\n        let ret = await this.get('login', params);\r\n        switch (typeof ret) {\r\n            default: return;\r\n            case 'string': return decodeUserToken(ret);\r\n            case 'object':\r\n                let token = ret.token;\r\n                let user = decodeUserToken(token);\r\n                let {nick, icon} = ret;\r\n                if (nick) user.nick = nick;\r\n                if (icon) user.icon = icon;\r\n                return user;\r\n        }\r\n        // !== undefined) return decodeToken(token);\r\n    }\r\n    async register(params: {\r\n        nick:string, \r\n        user:string, \r\n        pwd:string,\r\n        country:number, \r\n        mobile:number, \r\n        email:string,\r\n        verify:string,\r\n    }): Promise<any>\r\n    {\r\n        return await this.post('register', params);\r\n    }\r\n\r\n    async setVerify(account:string, type:'mobile'|'email') {\r\n        return await this.post('set-verify', {account:account, type:type});\r\n    }\r\n\r\n    async checkVerify(account:string, verify:string) {\r\n        return await this.post('check-verify', {account:account, verify:verify});\r\n    }\r\n\r\n    async isExists(account:string) {\r\n        return await this.get('is-exists', {account:account});\r\n    }\r\n\r\n    async resetPassword(account:string, password:string, verify:string, type:'mobile'|'email') {\r\n        return await this.post('reset-password', {account:account, password, verify, type});\r\n    }\r\n    \r\n    async userSetProp(prop:string, value:any) {\r\n        await this.post('tie/user-set-prop', {prop:prop, value:value});\r\n    }\r\n}\r\n\r\nconst userApi = new UserApi('tv/user/', undefined);\r\n\r\nexport default userApi;\r\n","\r\nconst zero = '00000000000000';\r\nexport function left0(num:number, fix:number) {\r\n    if (num === undefined) return '';\r\n    let r = num.toString();\r\n    let len = fix - r.length;\r\n    if (len <= 0) return r;\r\n    return zero.substr(0, len) + r;\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport {User} from '../user';\r\nimport {nav} from './nav';\r\nimport {Page} from './page';\r\nimport { isDevelopment } from '../net';\r\n\r\nexport abstract class Controller {\r\n    readonly res: any;\r\n    readonly x: any;\r\n    icon: string|JSX.Element;\r\n    label:string;\r\n    readonly isDev:boolean = isDevelopment;\r\n    get user():User {return nav.user}\r\n    get isLogined():boolean {\r\n        let {user} = nav;\r\n        if (user === undefined) return false;\r\n        return user.id > 0;\r\n    }\r\n    constructor(res:any) {\r\n        this.res = res || {};\r\n        this.x = this.res.x || {};\r\n    }\r\n\r\n    private receiveHandlerId:number;\r\n    private disposer:()=>void;\r\n\r\n    private dispose() {\r\n        // message listener的清理\r\n        nav.unregisterReceiveHandler(this.receiveHandlerId);\r\n        this.onDispose();\r\n    }\r\n\r\n    protected onDispose() {\r\n    }\r\n\r\n    protected async openVPage<C extends Controller>(vp: new (controller: C)=>VPage<C>, param?:any):Promise<void> {\r\n        await (new vp((this as any) as C)).open(param);\r\n    }\r\n\r\n    protected renderView<C extends Controller>(view: new (controller: C)=>View<C>, param?:any) {\r\n        return (new view((this as any) as C)).render(param);\r\n    }\r\n\r\n    async event(type:string, value:any) {\r\n        await this.onEvent(type, value);\r\n    }\r\n\r\n    protected async onEvent(type:string, value:any) {\r\n    }\r\n\r\n    protected msg(text:string) {\r\n        alert(text);\r\n    }\r\n    protected errorPage(header:string, err:any) {\r\n        this.openPage(<Page header=\"App error!\">\r\n            <pre>\r\n                {typeof err === 'string'? err : err.message}\r\n            </pre>\r\n        </Page>);\r\n    }\r\n\r\n    protected onMessage(message:any):Promise<void> {\r\n        return;\r\n    }\r\n\r\n    private onMessageReceive = async (message:any):Promise<void> => {\r\n        await this.onMessage(message);\r\n    }\r\n\r\n    protected async beforeStart():Promise<boolean> {\r\n        /*\r\n        console.log('this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);');\r\n        this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);\r\n        console.log('return true');\r\n        */\r\n        return true;\r\n    }\r\n    protected registerReceiveHandler() {\r\n        this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);\r\n    }\r\n\r\n    protected abstract internalStart(param?:any):Promise<void>;\r\n    async start(param?:any):Promise<void> {\r\n        this.disposer = this.dispose.bind(this);\r\n        this.registerReceiveHandler();\r\n        let ret = await this.beforeStart();\r\n        if (ret === false) return;\r\n        await this.internalStart(param);\r\n    }\r\n\r\n    get isCalling():boolean {return this._resolve_$ !== undefined}\r\n\r\n    private _resolve_$:((value:any) => void)[];\r\n    async call<T>(param?:any):Promise<T> {\r\n        if (this._resolve_$ === undefined) this._resolve_$ = [];\r\n        return new Promise<T> (async (resolve, reject) => {\r\n            this._resolve_$.push(resolve);\r\n            await this.start(param);\r\n        });\r\n    }\r\n\r\n    async vCall<C extends Controller>(vp: new (controller: C)=>VPage<C>, param?:any):Promise<any> {\r\n        if (this._resolve_$ === undefined) this._resolve_$ = [];\r\n        return new Promise<any> (async (resolve, reject) => {\r\n            this._resolve_$.push(resolve);\r\n            await (new vp(this as any)).open(param);\r\n        });\r\n    }\r\n\r\n    returnCall(value:any) {\r\n        if (this._resolve_$ === undefined) return;\r\n        let resolve = this._resolve_$.pop();\r\n        if (resolve === undefined) {\r\n            alert('the Controller call already returned, or not called');\r\n            return;\r\n        }\r\n        resolve(value);\r\n    }\r\n\r\n    openPage(page:JSX.Element) {\r\n        nav.push(page, this.disposer);\r\n        this.disposer = undefined;\r\n    }\r\n\r\n    replacePage(page:JSX.Element) {\r\n        nav.replace(page, this.disposer);\r\n        this.disposer = undefined;\r\n    }\r\n\r\n    backPage() {\r\n        nav.back();\r\n    }\r\n\r\n    closePage(level?:number) {\r\n        nav.pop(level);\r\n    }\r\n\r\n    ceasePage(level?:number) {\r\n        nav.ceaseTop(level);\r\n    }\r\n\r\n    removeCeased() {\r\n        nav.removeCeased();\r\n    }\r\n\r\n    regConfirmClose(confirmClose: ()=>Promise<boolean>) {\r\n        nav.regConfirmClose(confirmClose);\r\n    }\r\n}\r\n\r\n\r\nexport abstract class View<C extends Controller> {\r\n    protected controller: C;\r\n    protected readonly res: any;\r\n    protected readonly x: any;\r\n\r\n    constructor(controller: C) {\r\n        this.controller = controller;\r\n        this.res = controller.res;\r\n        this.x = controller.x;\r\n    }\r\n\r\n    protected get isDev() {return isDevelopment}\r\n\r\n    abstract render(param?:any): JSX.Element;\r\n\r\n    protected renderVm(vm: new (controller: C)=>View<C>, param?:any) {\r\n        return (new vm(this.controller)).render(param);\r\n    }\r\n\r\n    protected async openVPage(vp: new (controller: C)=>VPage<C>, param?:any):Promise<void> {\r\n        await (new vp(this.controller)).open(param);\r\n    }\r\n\r\n    protected async event(type:string, value?:any) {\r\n        /*\r\n        if (this._resolve_$_ !== undefined) {\r\n            await this._resolve_$_({type:type, value:value});\r\n            return;\r\n        }*/\r\n        await this.controller.event(type, value);\r\n    }\r\n\r\n    async vCall<C extends Controller>(vp: new (controller: C)=>VPage<C>, param?:any):Promise<any> {\r\n        return await this.controller.vCall(vp, param);\r\n    }\r\n\r\n    protected returnCall(value:any) {\r\n        this.controller.returnCall(value);\r\n    }\r\n\r\n    protected openPage(view: React.StatelessComponent<any>, param?:any) {\r\n        this.controller.openPage(React.createElement(view, param));\r\n    }\r\n\r\n    protected replacePage(view: React.StatelessComponent<any>, param?:any) {\r\n        this.controller.replacePage(React.createElement(view, param));\r\n    }\r\n\r\n    protected openPageElement(page: JSX.Element) {\r\n        this.controller.openPage(page);\r\n    }\r\n\r\n    protected replacePageElement(page: JSX.Element) {\r\n        this.controller.replacePage(page);\r\n    }\r\n\r\n    protected backPage() {\r\n        this.controller.backPage();\r\n    }\r\n\r\n    protected closePage(level?:number) {\r\n        this.controller.closePage(level);\r\n    }\r\n\r\n    protected ceasePage(level?:number) {\r\n        this.controller.ceasePage(level);\r\n    }\r\n\r\n    protected removeCeased() {\r\n        this.controller.removeCeased();\r\n    }\r\n\r\n    protected regConfirmClose(confirmClose: ()=>Promise<boolean>) {\r\n        this.controller.regConfirmClose(confirmClose);\r\n    }\r\n}\r\n\r\nexport abstract class VPage<C extends Controller> extends View<C> {\r\n    abstract open(param?:any):Promise<void>;\r\n\r\n    render(param?:any):JSX.Element {return null;}\r\n}\r\n\r\nexport type TypeVPage<C extends Controller> = new (controller: C)=>VPage<C>;\r\n\r\n","export * from './schema';\r\nexport * from './uiSchema';\r\n","import {observable, IObservableArray, computed} from 'mobx';\r\nimport {uid} from './uid';\r\n\r\nexport abstract class PageItems<T> {\r\n    constructor(itemObservable:boolean = false) {\r\n        this._items = observable.array<T>([], {deep:itemObservable});\r\n    }\r\n    private isFirst: boolean = true;\r\n    @observable loading: boolean = false;\r\n    @observable private beforeLoad: boolean = true;\r\n    @observable protected loaded: boolean = false;\r\n    protected _items:IObservableArray<T>;\r\n    @observable allLoaded: boolean = false;\r\n    @computed get items():IObservableArray<T> {\r\n        if (this.beforeLoad === true) return null;\r\n        if (this.loaded === false) return undefined;\r\n        return this._items;\r\n    }\r\n\r\n    @observable topDiv:string;\r\n    @observable bottomDiv:string;\r\n    scrollToTop() {\r\n        this.topDiv = '$$'+uid();\r\n    }\r\n    scrollToBottom() {\r\n        this.bottomDiv = '$$'+uid();\r\n    }\r\n\r\n    protected param: any;\r\n    protected firstSize = 100;\r\n    protected pageStart = undefined;\r\n    protected pageSize = 30;\r\n    protected appendPosition:'head'|'tail' = 'tail';\r\n\r\n    protected abstract async load(param:any, pageStart:any, pageSize:number):Promise<T[]>;\r\n    protected abstract setPageStart(item:T);\r\n\r\n    reset() {\r\n        this.isFirst = true;\r\n        this.beforeLoad = true;\r\n        this.loaded = false;\r\n        this.param = undefined;\r\n        this.allLoaded = false;\r\n        this._items.clear();\r\n        this.setPageStart(undefined);\r\n    }\r\n\r\n    append(item:T) {\r\n        if (this.appendPosition === 'tail')\r\n            this._items.unshift(item);\r\n        else\r\n            this._items.push(item);\r\n    }\r\n\r\n    async first(param:any):Promise<void> {\r\n        this.reset();\r\n        this.beforeLoad = false;\r\n        this.param = param;\r\n        await this.more();        \r\n    }\r\n\r\n    async more():Promise<void> {\r\n        if (this.allLoaded === true) return;\r\n        if (this.loading === true) return;\r\n        this.loading = true;\r\n        let pageSize = this.pageSize + 1;\r\n        if (this.isFirst === true) {\r\n            if (this.firstSize > this.pageSize) pageSize = this.firstSize+1;\r\n        }\r\n        let ret = await this.load(\r\n                this.param, \r\n                this.pageStart,\r\n                pageSize);\r\n        this.loading = false;\r\n        this.loaded = true;\r\n        let len = ret.length;\r\n        if (this.isFirst===true && len>this.firstSize ||\r\n            this.isFirst===false && len>this.pageSize)\r\n        {\r\n            this.allLoaded = false;\r\n            --len;\r\n            ret.splice(len, 1);\r\n        }\r\n        else {\r\n            this.allLoaded = true;\r\n        }\r\n        if (len === 0) {\r\n            this._items.clear();\r\n            return;\r\n        }\r\n        this.setPageStart(ret[len-1]);\r\n        if (this.appendPosition === 'tail')\r\n            this._items.push(...ret);\r\n        else\r\n            this._items.unshift(...ret.reverse());\r\n        this.isFirst = false;\r\n    }\r\n}\r\n","import {observable, computed} from 'mobx';\r\n\r\nexport interface Id {\r\n    id: number;\r\n}\r\n\r\nexport abstract class CacheIds<T extends Id> {\r\n    constructor(maxCount:number = 100) {\r\n        this.maxCount = maxCount;\r\n    }\r\n    private maxCount:number;\r\n    private arr:T[] = [];\r\n    @observable dict = new Map<number, T>();\r\n\r\n    loadIds(ids:number[]) {\r\n        let arr:number[] = [];\r\n        for (let id of ids) {\r\n            if (id === null) continue;\r\n            let item = this.dict.get(id);\r\n            if (item === undefined) {\r\n                arr.push(id);\r\n                item = {id:id} as T;\r\n                this.dict.set(id, item);\r\n            }\r\n        }                \r\n        this.loadId(arr);\r\n    }\r\n\r\n    get(id:number):T {\r\n        if (id === undefined || id === null) return null;\r\n        let item = this.dict.get(id);\r\n        if (item === undefined) {\r\n            this.dict.set(id, {id:id} as T);\r\n            this.loadId([id]);\r\n            item = this.dict.get(id);\r\n        }\r\n        return item;\r\n    }\r\n    private setItem(id:number, item:T) {\r\n        if (item === undefined) {\r\n            this.dict.set(id, null);\r\n            this.arr.push({id: id} as T);\r\n        }\r\n        else {\r\n            this.dict.set(id, item);\r\n            this.arr.push(item);\r\n        }\r\n        if (this.arr.length > this.maxCount) {\r\n            item = this.arr.shift();\r\n            this.dict.delete(item.id);\r\n        }\r\n    }\r\n    private async loadId(ids:number[]) {\r\n        let items = await this._loadIds(ids);\r\n        if (items === undefined) {\r\n            for (let id of ids) {\r\n                if (id === null) continue;\r\n                let item = await this._loadId(id);\r\n                this.setItem(id, item);\r\n            }\r\n        }\r\n        else {\r\n            for (let id of ids) {\r\n                let item = items.find(v => v.id === id);\r\n                this.setItem(id, item);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected abstract async _loadIds(ids:number[]):Promise<T[]>;\r\n    protected abstract async _loadId(id:number):Promise<T>;\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {FormView, FormProps} from './formView';\r\n\r\nexport function tonvaDebug() {\r\n    let a = 0;\r\n}\r\n\r\nexport interface TonvaFormProps extends FormProps {\r\n    className?: string;\r\n    initValues?: any;\r\n}\r\n\r\n@observer \r\nexport class TonvaForm extends React.Component<TonvaFormProps, {}> {\r\n    formView: FormView;\r\n    constructor(props:TonvaFormProps) {\r\n        super(props);\r\n        this.formView = new FormView(this.props);\r\n    }\r\n    componentWillMount() {\r\n        this.formView.setInitValues(this.props.initValues);\r\n    }\r\n    debug() {\r\n        let s = null;\r\n    }\r\n    render() {\r\n        let {className, children, initValues} = this.props;\r\n        return <div className={className}>\r\n            {\r\n                children === undefined? \r\n                    this.formView.render() : \r\n                    <form onSubmit={this.formView.onSubmit}>{children}</form>\r\n            }\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nexport interface Action {\r\n    icon?: string;\r\n    caption?: string;\r\n    action?: () => void;\r\n}\r\n\r\nexport interface DropdownActionsProps {\r\n    icon?: string;\r\n    actions: Action[];\r\n    isRight?: boolean;\r\n}\r\n\r\nexport interface DropdownActionsState {\r\n    dropdownOpen: boolean;\r\n}\r\n\r\nexport class DropdownActions extends React.Component<DropdownActionsProps, DropdownActionsState> {\r\n    private menu: HTMLDivElement;\r\n    private button: HTMLElement;\r\n    constructor(props:DropdownActionsProps) {\r\n        super(props);\r\n        this.state = {\r\n            dropdownOpen: false\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        document.addEventListener('click', this.handleDocumentClick);\r\n        document.addEventListener('touchstart', this.handleDocumentClick);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('click', this.handleDocumentClick);\r\n        document.removeEventListener('touchstart', this.handleDocumentClick);\r\n    }\r\n\r\n    private handleDocumentClick = (evt:any) => {\r\n        if (this.state.dropdownOpen === false) return;\r\n        if (this.button && this.button.contains(evt.target)) return;\r\n        if (!this.menu) return;\r\n        //if (!this.menu.contains(evt.target)) \r\n        this.toggle();\r\n    }\r\n\r\n    private toggle = () => {\r\n        this.setState({\r\n            dropdownOpen: !this.state.dropdownOpen\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let {icon, actions, isRight} = this.props;\r\n        if (isRight === undefined) isRight = true;\r\n        let hasIcon = actions.some(v => v.icon!==undefined);\r\n        let {dropdownOpen} = this.state;\r\n        //isOpen={this.state.dropdownOpen} toggle={this.toggle}\r\n        return <div className=\"dropdown\">\r\n            <button ref={v=>this.button=v} className=\"cursor-pointer dropdown-toggle btn btn-sm\"\r\n                data-toggle=\"dropdown\"\r\n                aria-expanded={dropdownOpen}\r\n                onClick={this.toggle}>\r\n                <i className={classNames('fa', 'fa-'+(icon||'ellipsis-v'))} />\r\n            </button>\r\n            <div ref={v => this.menu=v} className={classNames({\"dropdown-menu\":true, \"dropdown-menu-right\":isRight, \"show\":dropdownOpen})}>\r\n                {\r\n                    actions.map((v,index) => {\r\n                        let {icon, caption, action} = v;\r\n                        if (icon === undefined && caption === undefined) \r\n                            return <div className=\"dropdown-divider\" />;\r\n                        let i:any;\r\n                        if (hasIcon === true) {\r\n                            if (icon !== undefined) icon = 'fa-' + icon;\r\n                            i = <><i className={classNames('fa', icon, 'fa-fw')} aria-hidden={true}></i>&nbsp; </>;\r\n                        }\r\n                        if (action === undefined) \r\n                            return <h6 className=\"dropdown-header\">{i} {caption}</h6>;\r\n                        return <a className=\"dropdown-item\" key={index} href=\"#\" onClick={(evt:React.MouseEvent<HTMLAnchorElement>)=>{ evt.preventDefault();action()}}>{i} {caption}</a>\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\n/*\r\nexport class DropdownActions extends React.Component<DropdownActionsProps, DropdownActionsState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dropdownOpen: false\r\n        };\r\n    }\r\n    private toggle = () => {\r\n        this.setState({\r\n            dropdownOpen: !this.state.dropdownOpen\r\n        });\r\n    }\r\n    render() {\r\n        let {icon, actions, isRight} = this.props;\r\n        if (isRight === undefined) isRight = true;\r\n        let hasIcon = actions.some(v => v.icon!==undefined);\r\n        return <UncontrolledButtonDropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\r\n            <DropdownToggle caret={true} size=\"sm\" className=\"cursor-pointer\">\r\n                <i className={classNames('fa', 'fa-'+(icon||'ellipsis-v'))} />\r\n            </DropdownToggle>\r\n            <DropdownMenu right={isRight}>\r\n                {actions.map((v,index) => {\r\n                    let {icon, caption, action} = v;\r\n                    if (icon === undefined && caption === undefined) \r\n                        return <div className=\"dropdown-divider\" />;\r\n                    let i;\r\n                    if (hasIcon === true) {\r\n                        if (icon !== undefined) icon = 'fa-' + icon;\r\n                        i = <><i className={classNames('fa', icon, 'fa-fw')} aria-hidden={true}></i>&nbsp; </>;\r\n                    }\r\n                    if (action === undefined) \r\n                        return <h6 className=\"dropdown-header\">{i} {caption}</h6>;\r\n                    return <DropdownItem key={index} onClick={action}>{i} {caption}</DropdownItem>\r\n                })}\r\n            </DropdownMenu>\r\n        </UncontrolledButtonDropdown>\r\n    }\r\n}\r\n*/","import * as React from 'react';\r\n\r\nexport interface EasyDateProps {\r\n    date: Date | string;\r\n}\r\n\r\nexport class EasyDate extends React.Component<EasyDateProps> {\r\n    render() {\r\n        let {date} = this.props;\r\n        if (!date) return null;\r\n        let d = (typeof date === 'string')? new Date(Date.parse(date)) : date;\r\n        let now = new Date();\r\n        let tick = now.getTime() - d.getTime();\r\n        let nDate=now.getDate();\r\n        let _date=d.getDate(), hour=d.getHours(), minute=d.getMinutes(), month=d.getMonth()+1;\r\n        let hm = hour + ((minute<10?':0':':') + minute);\r\n        if (tick < -24*3600*1000) return d.getFullYear()+'年'+month+'月'+_date+'日 ' + hm;\r\n        if (tick < 24*3600*1000) {\r\n            return _date!==nDate? \r\n                (tick < 0? '明天 ' : '昨天 ') + hm \r\n                : hm;\r\n        }\r\n        if (tick < 365*24*3600*1000) {\r\n            return month+'月'+_date+'日 ';\r\n        }\r\n        return d.getFullYear()+'年'+month+'月'+_date+'日';\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Image } from 'tonva-tools';\r\n\r\nexport interface MediaProps {\r\n    icon: string;\r\n    main: string|JSX.Element;\r\n    discription?: string | JSX.Element;\r\n    px?: number;\r\n    py?: number;\r\n}\r\n\r\nexport class Media extends React.Component<MediaProps> {\r\n    render() {\r\n        let {icon, main, discription, px, py} = this.props;\r\n        let disp:any;\r\n        if (typeof discription === 'string')\r\n            disp = <div>{discription}</div>;\r\n        else\r\n            disp = discription;\r\n        let cn = classNames(\r\n            'media', \r\n            px===undefined? 'px-0':'px-'+px, \r\n            py===undefined? 'py-2':'py-'+py);\r\n        return <div className={cn}>\r\n            <Image className=\"mr-3 w-4c h-4c\" src={icon} />\r\n            <div className=\"media-body\">\r\n                <h5 className=\"mt-0\">{main}</h5>\r\n                {disp}\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\n\r\nexport interface SearchBoxProps {\r\n    className?: string;\r\n    label?: string;\r\n    initKey?: string;\r\n    placeholder?: string;\r\n    buttonText?: string;\r\n    maxLength?: number;\r\n    size?: 'sm' | 'md' | 'lg';\r\n    inputClassName?: string;\r\n    onSearch: (key:string)=>Promise<void>;\r\n    onFocus?: ()=>void;\r\n    allowEmptySearch?: boolean;\r\n}\r\n\r\n/*\r\nexport interface SearchBoxState {\r\n    disabled: boolean;\r\n}*/\r\n\r\nexport class SearchBox extends React.Component<SearchBoxProps> { //}, SearchBoxState> {\r\n    private input: HTMLInputElement;\r\n    private key: string = null;\r\n    @observable private disabled: boolean;\r\n\r\n    private onChange = (evt: React.ChangeEvent<any>) => {\r\n        this.key = evt.target.value;\r\n        if (this.key !== undefined) {\r\n            this.key = this.key.trim();\r\n            if (this.key === '') this.key = undefined;\r\n        }\r\n        if (this.props.allowEmptySearch !== true) {\r\n            this.disabled = !this.key;\r\n        }\r\n    }\r\n    private onSubmit = async (evt: React.FormEvent<any>) => {\r\n        evt.preventDefault();\r\n        if (this.key === null) this.key = this.props.initKey || '';\r\n        if (this.props.allowEmptySearch !== true) {\r\n            if (!this.key) return;\r\n            if (this.input) this.input.disabled = true;\r\n        }\r\n        await this.props.onSearch(this.key);\r\n        if (this.input) this.input.disabled = false;\r\n    }\r\n    clear() {\r\n        if (this.input) this.input.value = '';\r\n    }\r\n    render() {\r\n        let {className, inputClassName, onFocus,\r\n            label, placeholder, buttonText, maxLength, size} = this.props;\r\n        let inputSize:string;\r\n        switch (size) {\r\n            default:\r\n            case 'sm': inputSize = 'input-group-sm'; break;\r\n            case 'md': inputSize = 'input-group-md'; break;\r\n            case 'lg': inputSize = 'input-group-lg'; break;\r\n        }\r\n        let lab:any;\r\n        if (label !== undefined) lab = <label className=\"input-group-addon\">{label}</label>;\r\n        return <form className={className} onSubmit={this.onSubmit} >\r\n            <div className={classNames(\"input-group\", inputSize)}>\r\n                {lab}\r\n                <input ref={v=>this.input=v} onChange={this.onChange}\r\n                    type=\"text\"\r\n                    name=\"key\"\r\n                    onFocus={onFocus}\r\n                    className={classNames('form-control', inputClassName || 'border-primary')}\r\n                    placeholder={placeholder}\r\n                    defaultValue={this.props.initKey}\r\n                    maxLength={maxLength} />\r\n                <div className=\"input-group-append\">\r\n                    <button className=\"btn btn-primary\"\r\n                        type=\"submit\"\r\n                        disabled={this.disabled}>\r\n                        <i className='fa fa-search' />\r\n                        <i className=\"fa\"/>\r\n                        {buttonText}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </form>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport className from 'classnames';\r\nimport {FormProps, FormRow, SubmitResult, FormView, TonvaForm} from '../form';\r\n\r\nexport interface Step {\r\n    formRows: FormRow[];\r\n    next: undefined | string | ((values:any) => string);    // 返回下一步的step名称或者直接就是名称\r\n    ex?: any;                                   // 每一步额外的参数\r\n}\r\n\r\nexport interface MultiStepProps {\r\n    className?: string;\r\n    header?: (step:Step, num:number) => JSX.Element; //name: step name, num: 第几步，1开始\r\n    footer?: (step:Step, num:number) => JSX.Element; //name: step name, num: 第几步，1开始\r\n    steps: {[name:string]: Step};\r\n    first: string;         // 第一步的名字\r\n    onSubmit: (values:any) => Promise<SubmitResult|undefined>;\r\n    submitButton?: string|JSX.Element;\r\n}\r\n\r\nexport interface StepView {\r\n    stepName: string;\r\n    step: Step;\r\n    props: FormProps;\r\n    //view: JSX.Element;\r\n}\r\nexport interface MultiStepState {\r\n    //num: number;\r\n    //step: Step;\r\n    //formView: FormView;\r\n    topView: StepView;\r\n    stepViews: StepView[];\r\n}\r\n\r\nexport class MultiStep extends React.Component<MultiStepProps, MultiStepState> {\r\n    private values: any = {};\r\n    private stepViews: StepView[] = [];\r\n    private topView: StepView;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            topView: undefined,\r\n            stepViews: [],\r\n        }\r\n        this.onPrev = this.onPrev.bind(this);\r\n        this.onNext = this.onNext.bind(this);\r\n    }\r\n    \r\n    private setStep(stepName: string) {\r\n        let step = this.props.steps[stepName];\r\n        if (step === undefined) return; //throw new Error('Unknown step name: ' + stepName);\r\n        if (this.topView !== undefined) this.stepViews.push(this.topView);\r\n        let otherButton, onOther;\r\n        if (this.stepViews.length > 0) {\r\n            otherButton = <ButtonConten prefix=\"undo\" text=\"上一步\" />;\r\n            onOther = this.onPrev;\r\n        }\r\n        let {header, footer} = this.props;\r\n        let btnContent = step.next === undefined?\r\n            {prefix: 'cloud-upload', text: this.props.submitButton || '提交'} :\r\n            {suffix: 'arrow-right', text: '下一步'}\r\n        let formProps = {\r\n            formRows: step.formRows,\r\n            submitButton: <ButtonConten {...btnContent} />,\r\n            onSubmit: this.onNext,\r\n            otherButton: otherButton,\r\n            onOther: onOther,\r\n        };\r\n        let num = this.stepViews.length + 1;\r\n        this.topView = {\r\n            stepName: stepName,\r\n            step: step,\r\n            props: formProps,\r\n        };\r\n        this.setState({\r\n            topView: this.topView,\r\n            stepViews: this.stepViews\r\n        });\r\n    }\r\n    componentWillMount() {\r\n        this.setStep(this.props.first);\r\n    }\r\n    private onPrev(values:any) {\r\n        _.assign(this.values, values);\r\n        this.topView = this.stepViews.pop();\r\n        this.setState({\r\n            topView: this.topView,\r\n            stepViews: this.stepViews\r\n        });\r\n    }\r\n    private onNext(values:any): Promise<SubmitResult|undefined> {\r\n        _.assign(this.values, values);\r\n        //let {num, step} = this.state;\r\n        let {next} = this.topView.step;\r\n        if (next === undefined) {\r\n            return this.props.onSubmit(this.values)\r\n        }\r\n        let nextStepName:string;\r\n        if (typeof next === 'string') {\r\n            nextStepName = next;\r\n        }\r\n        else {\r\n            nextStepName = next(this.values);\r\n        }\r\n        this.setStep(nextStepName);\r\n    }\r\n    render() {\r\n        let {className, header, footer} = this.props;\r\n        let {topView, stepViews} = this.state;\r\n        let {stepName, step} = topView;\r\n        let hidden = {visibility: 'hidden'};\r\n        let num = stepViews.length + 1;\r\n        return <div className={className}>\r\n            <div>\r\n                {header && header(step, num)}\r\n                <TonvaForm key={stepName} initValues={this.values} {...topView.props} />\r\n                {footer && footer(step, num)}\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst ButtonConten = (props:{prefix?:string, text?:string|JSX.Element, suffix?:string}) => {\r\n    let {prefix, text, suffix} = props;\r\n    let pIcon, sIcon;\r\n    if (prefix !== undefined) pIcon = <i className={className('fa', 'fa-' + prefix)} />;\r\n    if (suffix !== undefined) sIcon = <i className={className('fa', 'fa-' + suffix)} />;\r\n    return <React.Fragment>{pIcon} {props.text} {sIcon}</React.Fragment>;\r\n}\r\n    \r\n","import _ from 'lodash';\r\nimport { Context } from '../context';\r\nimport { FormRes } from '../formRes';\r\n\r\nexport abstract class Rule {\r\n    abstract check(defy:string[], value:any):void;\r\n}\r\n\r\nexport type ContextRule = (context:Context)=>{[target:string]:string[]|string} | string[] | string;\r\nexport type FieldRule = (value:any) => string[] | string;\r\n\r\nexport class RuleCustom extends Rule {\r\n    private func: FieldRule;\r\n    constructor(func: FieldRule) {\r\n        super();\r\n        this.func = func;\r\n    }\r\n    check(defy:string[], value:any) {\r\n        let ret = this.func(value);\r\n        if (ret === undefined) return;\r\n        switch (typeof ret) {\r\n            case 'undefined': return;\r\n            case 'string': defy.push(ret as string); return;\r\n            default: defy.push(...ret); return;\r\n        }        \r\n    }\r\n}\r\n\r\nexport abstract class RulePredefined extends Rule {\r\n    protected res: FormRes;\r\n    constructor(res: FormRes) {\r\n        super();\r\n        this.res = res;\r\n    }\r\n}\r\n\r\nexport class RuleRequired extends RulePredefined {\r\n    check(defy:string[], value:any) {\r\n        switch (typeof value) {\r\n            default:\r\n            case 'boolean': return;\r\n            case 'object':\r\n                if (value !== null) return;\r\n                break;\r\n            case 'string':\r\n                if ((value as string).trim().length > 0) return;\r\n                break;\r\n            case 'number':\r\n                if ((value as number) !== NaN) return;\r\n                break;\r\n            case 'undefined':\r\n                break;\r\n        }\r\n        defy.push(this.res.required);\r\n    }\r\n}\r\n\r\nexport class RuleNum extends RulePredefined {\r\n    private minMsg: _.TemplateExecutor;\r\n    private maxMsg: _.TemplateExecutor;\r\n    protected min: number;\r\n    protected max: number\r\n    constructor(res: FormRes, min?: number, max?: number) {\r\n        super(res);\r\n        this.minMsg = _.template(res.min);\r\n        this.maxMsg = _.template(res.max);\r\n        this.min = min;\r\n        this.max = max;\r\n    }\r\n    check(defy:string[], value:any) {\r\n        if (value === undefined || value === null) return;\r\n        let n = Number(value);\r\n        if (n === NaN) {\r\n            defy.push(this.res.number);\r\n        }\r\n        else {\r\n            this.checkMore(defy, n);\r\n        }\r\n    }\r\n\r\n    protected checkMore(defy:string[], value: number) {\r\n        if (this.min !== undefined && Number(value) < this.min) {\r\n            defy.push(this.minMsg({min:this.min}));\r\n        }\r\n        if (this.max !== undefined && Number(value) > this.max) {\r\n            defy.push(this.maxMsg({max:this.max}));\r\n        }\r\n    }\r\n}\r\n\r\nexport class RuleInt extends RuleNum {\r\n    protected checkMore(defy:string[], n: number) {\r\n        super.checkMore(defy, n);\r\n        if (Number.isInteger(n) === false) {\r\n            defy.push(this.res.integer);\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { UiItem, ChangingHandler, ChangedHandler } from '../../schema';\r\nimport { FieldProps } from '../field';\r\nimport { Context } from '../context';\r\nimport { ItemSchema } from '../../schema';\r\nimport { Rule, RuleRequired, RuleCustom, FieldRule } from '../rules';\r\nimport { computed, observable, reaction } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport abstract class Widget {\r\n    protected name: string;\r\n    protected context: Context;\r\n    protected fieldProps:FieldProps;\r\n    protected children: React.ReactNode;\r\n    protected itemSchema: ItemSchema;\r\n    protected ui: UiItem;\r\n    protected defaultValue: any;\r\n    protected value: any;\r\n    protected rules: Rule[];\r\n    @observable protected errors: string[] = [];\r\n    @observable protected contextErrors: string[] = [];\r\n    @computed protected get hasError():boolean {return (this.errors.length + this.contextErrors.length)>0}\r\n    protected readOnly:boolean;\r\n    protected disabled:boolean;\r\n    @observable visible:boolean;\r\n\r\n    constructor(context:Context, itemSchema:ItemSchema, fieldProps:FieldProps, children: React.ReactNode) {\r\n        this.context = context;\r\n        let {name} = itemSchema;\r\n        this.name = name;\r\n        this.itemSchema = itemSchema;\r\n        this.fieldProps = fieldProps;\r\n        this.children = children;\r\n        this.ui = context.getUiItem(name);\r\n        if (this.ui === undefined) {\r\n            this.readOnly = false;\r\n            this.disabled = false;\r\n            this.visible = true;\r\n        }\r\n        else {\r\n            let {readOnly, disabled, visible} = this.ui;\r\n            this.readOnly = (readOnly === true);\r\n            this.disabled = (disabled === true);\r\n            this.visible = !(visible === false);            \r\n        }\r\n        this.value = this.defaultValue =  context.getValue(name); //defaultValue;\r\n        this.init();\r\n    }\r\n\r\n    protected init() {\r\n        this.rules = [];\r\n        if (this.itemSchema.required === true) {\r\n            this.rules.push(new RuleRequired(this.context.form.res));\r\n        }\r\n        this.buildRules();\r\n        if (this.ui === undefined) return;\r\n        let {rules} = this.ui;\r\n        if (rules === undefined) return;\r\n        if (Array.isArray(rules) === false) {\r\n            this.rules.push(new RuleCustom(rules as FieldRule));\r\n            return;\r\n        }\r\n        for (let rule of rules as FieldRule[]) {\r\n            this.rules.push(new RuleCustom(rule));\r\n        }\r\n    }\r\n\r\n    protected buildRules() {\r\n    }\r\n\r\n    checkRules() {\r\n        let defy:string[] = [];\r\n        for (let r of this.rules) r.check(defy, this.value);\r\n        if (defy.length === 0) {\r\n            this.context.removeErrorWidget(this);\r\n        }\r\n        else {\r\n            this.context.addErrorWidget(this);\r\n            this.errors.push(...defy);\r\n        }\r\n    }\r\n\r\n    @computed get isOk() {\r\n        return this.errors.length ===0;\r\n    }\r\n\r\n    setError(err:string | string[]) {\r\n        if (err === undefined) return;\r\n        if (typeof err === 'string') this.errors.push(err);\r\n        else this.errors.push(...err);\r\n    }\r\n\r\n    setContextError(err:string | string[]) {\r\n        if (err === undefined) return;\r\n        if (typeof err === 'string') this.contextErrors.push(err);\r\n        else this.contextErrors.push(...err);\r\n    }\r\n\r\n    clearError() {\r\n        this.errors.splice(0);\r\n    }\r\n\r\n    clearContextError() {\r\n        this.contextErrors.splice(0);\r\n    }\r\n\r\n    protected parse(value:any):any {return value}\r\n\r\n    protected setElementValue(value:any) {}\r\n    protected setDataValue(value:any) {\r\n        if (this.isChanging === true) return;\r\n        this.context.initData[this.name] = this.value = this.parse(value);\r\n    }\r\n\r\n    setValue(value:any) {\r\n        if (this.isChanging === true) return;\r\n        //this.setDataValue(value);\r\n        //this.setElementValue(value);\r\n        this.changeValue(value, false);\r\n    }\r\n\r\n    getValue() {\r\n        return this.context.getValue(this.name);\r\n    }\r\n\r\n    getReadOnly():boolean {return this.readOnly}\r\n    getDisabled():boolean {return this.disabled}\r\n    getVisible():boolean {return this.visible}\r\n    setReadOnly(value:boolean) {this.readOnly = value}\r\n    setDisabled(value:boolean) {this.disabled = value}\r\n    setVisible(value:boolean) {this.visible = value}\r\n\r\n    private isChanging: boolean;\r\n    protected onInputChange = (evt: React.ChangeEvent<any>) => {\r\n        this.changeValue(evt.target.value, true);\r\n    }\r\n\r\n    protected changeValue(newValue: any, fromElement: boolean) {\r\n        let prev = this.value;\r\n        let onChanging: ChangingHandler;\r\n        let onChanged: ChangedHandler;\r\n        if (this.ui !== undefined) {\r\n            onChanging = this.ui.onChanging;\r\n            onChanged = this.ui.onChanged;\r\n        }\r\n        let allowChange = true;\r\n        if (onChanging !== undefined) {\r\n            this.isChanging = true;\r\n            allowChange = onChanging(this.context, this.value, prev);\r\n            this.isChanging = false;\r\n        }\r\n        if (allowChange === true) {\r\n            this.setDataValue(newValue);\r\n            if (fromElement !== true) this.setElementValue(newValue);\r\n            if (onChanged !== undefined) {\r\n                this.isChanging = true;\r\n                onChanged(this.context, this.value, prev);\r\n                this.isChanging = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    protected get className():string {\r\n        let fieldClass:string;\r\n        if (this.context.inNode === false) fieldClass = 'form-control';\r\n        return classNames(fieldClass, this.context.form.FieldClass, this.ui && this.ui.className);\r\n    }\r\n\r\n    protected abstract render():JSX.Element;\r\n\r\n    container = observer(():JSX.Element => {\r\n        if (this.visible === false) return null;\r\n        let {form, inNode} = this.context;\r\n        if (inNode === true) return this.render();\r\n        let label:any = this.label;\r\n        if (this.itemSchema.required === true && form.props.requiredFlag !== false) {\r\n            if (label !== null) label = <>{label}&nbsp;<span className=\"text-danger\">*</span></>;\r\n        }\r\n        return form.FieldContainer(label, this.render());\r\n    })\r\n\r\n    protected get label():string {\r\n        let label:any;\r\n        if (this.ui === undefined) {\r\n            label = this.name;\r\n        }\r\n        else {\r\n            let uiLabel = this.ui.label;\r\n            if (uiLabel === null) label = null;\r\n            else label = uiLabel || this.name;\r\n        }\r\n        return label;\r\n    }\r\n\r\n    protected renderTemplet():JSX.Element | undefined {\r\n        if (this.children !== undefined) {\r\n            return <>{this.children}</>;\r\n        }\r\n        if (this.ui === undefined) return undefined;\r\n        let {Templet} = this.ui;\r\n        if (typeof Templet === 'function') return Templet(this.value);\r\n        return Templet;\r\n    }\r\n\r\n    protected renderErrors() {\r\n        let errorList:string[] = [...this.errors, ...this.contextErrors];\r\n        if (errorList.length === 0) return null;\r\n        let {inNode} = this.context;\r\n        let tag = inNode === true? 'span' : 'div';\r\n        return errorList.map(err => React.createElement(tag, \r\n            {\r\n                key: err, \r\n                className: 'text-danger d-inline-block my-2 ml-3'\r\n            },\r\n            <><i className=\"fa fa-exclamation-circle\" /> &nbsp;{err}</>\r\n        ));\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiTextItem, StringSchema } from '../../schema';\r\n\r\nexport class TextWidget extends Widget {\r\n    protected inputType = 'text';\r\n    protected ui: UiTextItem;\r\n    protected input: HTMLInputElement;\r\n\r\n    protected setElementValue(value:any) {\r\n        if (this.input === null) return;\r\n        this.input.value = value;\r\n    }\r\n    protected get placeholder() {return (this.ui && this.ui.placeholder) || this.name}\r\n    protected onKeyDown = async (evt:React.KeyboardEvent<HTMLInputElement>) => {\r\n        this.internalOnKeyDown(evt);\r\n        if (evt.keyCode !== 13) return;\r\n        let {onEnter} = this.context.form.props;\r\n        if (onEnter === undefined) return;\r\n\r\n        this.changeValue(evt.currentTarget.value, true);\r\n        this.checkRules();\r\n        this.context.checkContextRules();\r\n\r\n        let ret = await onEnter(this.name, this.context);\r\n        if (ret !== undefined) {\r\n            this.context.setError(this.name, ret);\r\n        }\r\n    }\r\n\r\n    protected internalOnKeyDown(evt:React.KeyboardEvent<HTMLInputElement>) {\r\n    }\r\n\r\n    protected onBlur(evt: React.FocusEvent<any>) {\r\n        this.onInputChange(evt);\r\n        this.checkRules();\r\n        this.context.checkContextRules();\r\n    }\r\n    protected onFocus(evt: React.FocusEvent<any>) {\r\n        this.clearError();\r\n        this.context.removeErrorWidget(this);\r\n        this.context.removeErrors();\r\n    }\r\n    protected onChange(evt: React.ChangeEvent<any>) {\r\n    }\r\n\r\n    setReadOnly(value:boolean) {\r\n        if (this.input === null) return;\r\n        this.input.readOnly = this.readOnly = value;\r\n    }\r\n    setDisabled(value:boolean) {\r\n        if (this.input === null) return;\r\n        this.input.disabled = this.disabled = value;\r\n    }\r\n\r\n    render() {\r\n        let renderTemplet = this.renderTemplet();\r\n        if (renderTemplet !== undefined) return renderTemplet;\r\n        let cn = {\r\n            //'form-control': true,\r\n        };\r\n        if (this.hasError === true) {\r\n            cn['is-invalid'] = true;\r\n        }\r\n        else {\r\n            cn['required-item'] = this.itemSchema.required === true;\r\n        }\r\n        return <><input ref={input=>this.input = input}\r\n            className={classNames(this.className, cn)}\r\n            type={this.inputType}\r\n            defaultValue={this.value}\r\n            onChange={(evt: React.ChangeEvent<any>) => this.onChange(evt)}\r\n            placeholder={this.placeholder}\r\n            readOnly={this.readOnly}\r\n            disabled={this.disabled}\r\n            onKeyDown = {this.onKeyDown}\r\n            onFocus = {(evt: React.FocusEvent<any>) => this.onFocus(evt)}\r\n            onBlur={(evt: React.FocusEvent<any>) => this.onBlur(evt)}\r\n            maxLength={(this.itemSchema as StringSchema).maxLength} />\r\n            {this.renderErrors()}\r\n        </>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { TextWidget } from './textWidget';\r\nimport { RuleNum, RuleInt } from '../rules';\r\nimport { NumBaseSchema } from '../../schema';\r\n\r\nexport class NumberWidget extends TextWidget {\r\n    protected inputType = 'number';\r\n    protected itemSchema: NumBaseSchema;\r\n\r\n    protected buildRules() {\r\n        super.buildRules();\r\n        let res = this.context.form.res;\r\n        let {min, max} = this.itemSchema;\r\n        this.rules.push(\r\n            this.itemSchema.type === 'integer'?\r\n                new RuleNum(res, min, max) :\r\n                new RuleInt(res, min, max)\r\n        );\r\n        /*\r\n        if (this.itemSchema.type === 'integer') {\r\n            this.rules.push(new RuleInt);\r\n        }\r\n        let {min, max} = this.itemSchema;\r\n        if (min !== undefined) this.rules.push(new RuleMin(min));\r\n        if (max !== undefined) this.rules.push(new RuleMax(max));\r\n        */\r\n    }\r\n\r\n    protected parse(value:any):any {\r\n        if (value === undefined || value === null) return;\r\n        return Number(value);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { NumberWidget } from './numberWidget';\r\n\r\nexport class UpdownWidget extends NumberWidget {\r\n    protected inputType = 'number';\r\n\r\n    protected isValidKey(key:number):boolean {\r\n        return key===46 || key===8 || key===37 || key===39\r\n            || key>=48 && key<=57\r\n            || key>=96 && key<=105\r\n            || key===109 || key===189;\r\n    }\r\n    \r\n    protected internalOnKeyDown(evt:React.KeyboardEvent<HTMLInputElement>) {\r\n        let key = evt.keyCode;\r\n        event.returnValue = this.isValidKey(key);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { TextWidget } from './textWidget';\r\n\r\nexport class DateWidget extends TextWidget {\r\n    protected inputType = 'date';\r\n}\r\n\r\nexport class DateTimeWidget extends TextWidget {\r\n    protected inputType = 'datetime';\r\n}\r\n\r\nexport class TimeWidget extends TextWidget {\r\n    protected inputType = 'time';\r\n}\r\n\r\nexport class MonthWidget extends TextWidget {\r\n    protected inputType = 'month';\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiCheckItem } from '../../schema';\r\n\r\nexport class CheckBoxWidget extends Widget {\r\n    protected input: HTMLInputElement;\r\n    protected ui: UiCheckItem;\r\n    protected trueValue: any;\r\n    protected falseValue: any;\r\n\r\n    protected init() {\r\n        super.init();\r\n        if (this.ui !== undefined) {\r\n            let {trueValue, falseValue} = this.ui;\r\n            if (trueValue === undefined) this.trueValue = true;\r\n            else this.trueValue = trueValue;\r\n            if (falseValue === undefined) this.falseValue = false;\r\n            else this.falseValue = falseValue;\r\n        }\r\n        else {\r\n            this.trueValue = true;\r\n            this.falseValue = false;\r\n        }\r\n    }\r\n    protected setElementValue(value:any) {\r\n        this.input.checked = value === this.trueValue;\r\n    }\r\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\r\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\r\n\r\n    protected onInputChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setDataValue(evt.target.checked === true? this.trueValue : this.falseValue);\r\n    }\r\n\r\n    protected onClick = () => {\r\n        this.context.removeErrors();\r\n    }\r\n\r\n    render() {\r\n        let cn = classNames(this.className, 'form-check-inline p-0');\r\n        let input = <input\r\n            ref={(input)=>this.input = input}\r\n            className={'align-self-center'}\r\n            type=\"checkbox\"\r\n            defaultChecked={this.defaultValue} \r\n            onChange={this.onInputChange}\r\n            onClick={this.onClick} />;\r\n        if (this.context.inNode === true) {\r\n            return <label className={cn}>\r\n                {input} {(this.ui&&this.ui.label) || this.name}\r\n            </label>\r\n        }\r\n        else {\r\n            return <div className={cn}>\r\n                <label className=\"w-100 h-100 mb-0 d-flex justify-content-center\">{input}</label>\r\n            </div>;\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\nimport { Widget } from './widget';\r\nimport { UiSelect } from '../../schema';\r\n\r\nexport class SelectWidget extends Widget {\r\n    protected select: HTMLSelectElement;\r\n    protected ui: UiSelect;\r\n    @observable protected readOnly: boolean;\r\n\r\n    protected setElementValue(value:any) {this.select.value = value}\r\n    protected onInputChange = (evt:React.ChangeEvent<HTMLSelectElement>) => {\r\n        this.setDataValue(evt.target.value);\r\n    }\r\n\r\n    setReadOnly(value:boolean) {this.select.disabled = this.readOnly = !value}\r\n    setDisabled(value:boolean) {this.select.disabled = this.disabled = value}\r\n\r\n    render() {\r\n        if (this.readOnly === true) {\r\n            let option = this.ui.list.find(v => v.value === this.value);\r\n            let title = (option === undefined)? '(???)' : option.title;\r\n            return <span className=\"form-control w-min-6c\">{title}</span>;\r\n        }\r\n        return <select\r\n            ref={(select)=>this.select = select}\r\n            className={classNames(this.className, 'form-control')}\r\n            defaultValue={this.defaultValue} \r\n            onChange={this.onInputChange}>\r\n            {this.ui.list.map((v,index) => {\r\n                let {title, value} = v;\r\n                let cn:string;\r\n                //if (value === undefined || value === null) cn = 'text-light small';\r\n                //else cn = 'text-danger';\r\n                return <option className={cn} key={index} value={value}>{title || value}</option>\r\n            })}\r\n        </select>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiIdItem, TempletType } from '../../schema';\r\nimport { observable } from 'mobx';\r\n\r\nexport class IdWidget extends Widget {\r\n    protected ui: UiIdItem;\r\n    @observable protected value:number;\r\n    setReadOnly(value:boolean) {this.readOnly = value}\r\n    setDisabled(value:boolean) {this.disabled = value}    \r\n\r\n    protected onClick = async () => {\r\n        let pickId = this.ui && this.ui.pickId;\r\n        if (pickId === undefined) {\r\n            alert('no pickId defined!');\r\n            return;\r\n        }\r\n        let id = await pickId(this.context, this.name, this.value);        \r\n        this.setDataValue(id);\r\n        this.clearError();\r\n        this.clearContextError();\r\n        this.checkRules();\r\n    }\r\n\r\n    render() {\r\n        let placeholder:string|JSX.Element, Templet: TempletType;\r\n        if (this.ui !== undefined) {\r\n            placeholder = this.ui.placeholder;\r\n            Templet = this.ui.Templet;\r\n        }\r\n        let cn = {\r\n            'form-control': true,\r\n            'required-item': this.itemSchema.required === true,\r\n            'cursor-pointer': true,\r\n            'is-invalid': this.hasError,\r\n        };\r\n        let content;\r\n        if (this.value === undefined || this.value === null) {\r\n            content = placeholder || 'placeholder';\r\n            cn['text-muted'] = true;\r\n        }\r\n        else if (Templet === undefined) {\r\n            content = <>{this.value}</>;\r\n        }\r\n        else if (typeof Templet === 'function') {\r\n            content = Templet(this.value);\r\n        }\r\n        else {\r\n            content = Templet;\r\n        }\r\n        return <>\r\n            <div className={classNames(cn)} onClick={this.onClick}>{content}</div>\r\n            {this.renderErrors()}\r\n        </>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { DataType } from '../../schema';\r\nimport { UiType } from '../../schema';\r\n\r\nexport const Unknown = (dataType:DataType, uiType:UiType, dataTypes:DataType[]) => {\r\n    return <span className=\"text-danger\">!!data type {dataType} only support {(dataTypes || []).join(', ')}, can't use ui {uiType}!!</span>;\r\n};\r\n","import * as React from 'react';\r\nimport { UiButton, TempletType } from '../../schema';\r\nimport { Unknown } from './unknown';\r\nimport { Widget } from './widget';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class ButtonWidget extends Widget {\r\n    protected ui: UiButton;\r\n\r\n    protected onClick = async () => {\r\n        this.clearError();\r\n        this.clearContextError();\r\n        let {name, type} = this.itemSchema;\r\n        if (type === 'submit') {\r\n            this.context.checkRules()\r\n            if (this.context.hasError === true) {\r\n                return;\r\n            }\r\n        }\r\n        let {onButtonClick} = this.context.form.props;\r\n        if (onButtonClick === undefined) {\r\n            alert(`button ${name} clicked. you should define form onButtonClick`);\r\n            return;\r\n        }\r\n        let ret = await onButtonClick(name, this.context);\r\n        if (ret === undefined) return;\r\n        this.context.setError(name, ret);\r\n    }\r\n\r\n    private observerRender = observer(() => {\r\n        let {name, type} = this.itemSchema;\r\n        let Templet:TempletType, cn:string, caption:string;\r\n        if (this.ui !== undefined) {\r\n            let {widget:widgetType} = this.ui;\r\n            if (widgetType !== 'button') return Unknown(type, widgetType, ['button']);\r\n            Templet = this.ui.Templet;\r\n            cn = this.ui.className;\r\n            caption = this.ui.label;\r\n        }\r\n        let {form, hasError} = this.context;\r\n        let context = this.context;\r\n        let disabled = type==='submit' && hasError;\r\n        let content:any;\r\n        if (this.children !== undefined) content = this.children;\r\n        else if (typeof Templet === 'function') content = Templet();\r\n        else if (Templet !== undefined) content = Templet;\r\n        else content = caption; \r\n        let button = <button \r\n            className={cn} \r\n            type=\"button\"\r\n            disabled={disabled}\r\n            onClick={this.onClick}>\r\n            {content || name}\r\n        </button>;\r\n        if (context.inNode === true) return <>{button}{this.renderErrors()}</>;\r\n        return <div className={form.ButtonClass}>\r\n            <div>{this.renderErrors()}</div>\r\n            {button}\r\n        </div>;\r\n    });\r\n    \r\n    protected get label():string {return null}\r\n\r\n    render() {\r\n        return <this.observerRender />\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Form } from './form';\r\nimport { UiSchema, UiArr, UiItem } from '../schema';\r\nimport { ArrSchema, ItemSchema } from '../schema';\r\nimport { Widget as Widget } from './widgets/widget';\r\n//import { ArrRow } from './arrRow';\r\nimport { observable, computed } from 'mobx';\r\nimport { ContextRule } from './rules';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport abstract class Context {\r\n    private subContexts:{[name:string]:{[rowKey:string]:Context}};\r\n    readonly form: Form;\r\n    readonly uiSchema: UiSchema;\r\n    readonly initData: any;\r\n    readonly inNode: boolean;           // true: 在</> 流中定义Field\r\n    readonly widgets: {[name:string]: Widget} = {};\r\n    readonly rules: ContextRule[];\r\n    readonly isRow: boolean;\r\n    @observable errors: string[] = [];\r\n    @observable errorWidgets:Widget[] = [];\r\n\r\n    constructor(form: Form, uiSchema: UiSchema, data: any, inNode: boolean, isRow: boolean) {\r\n        this.form = form;\r\n        this.uiSchema = uiSchema;\r\n        this.initData = data;\r\n        this.inNode = inNode;\r\n        this.isRow = isRow;\r\n        if (uiSchema !== undefined) {\r\n            let {rules} = uiSchema;\r\n            if (rules !== undefined) {\r\n                this.rules = [];\r\n                if (Array.isArray(rules) === false)\r\n                    this.rules.push(rules as ContextRule);\r\n                else\r\n                    this.rules.push(...rules as ContextRule[]);\r\n            }\r\n        }\r\n    }\r\n\r\n    getArrRowContexts(arrName: string) {\r\n        if (this.subContexts === undefined) this.subContexts = {};\r\n        let arrRowContexts = this.subContexts[name];\r\n        if (arrRowContexts === undefined) this.subContexts[name] = arrRowContexts = {};\r\n        return arrRowContexts;\r\n    }\r\n\r\n    abstract get data():any;\r\n    abstract getItemSchema(itemName:string):ItemSchema;\r\n    abstract getUiItem(itemName:string):UiItem;\r\n    get arrName():string {return undefined}\r\n    getValue(itemName:string):any {return this.initData[itemName]}\r\n    setValue(itemName:string, value:any) {\r\n        this.initData[itemName] = value;\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setValue(value);\r\n    }\r\n    getDisabled(itemName:string):boolean {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) return widget.getDisabled();\r\n        return undefined;\r\n    }\r\n    setDisabled(itemName:string, value:boolean) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setDisabled(value);\r\n    }\r\n    getReadOnly(itemName:string):boolean {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.getReadOnly();\r\n        return undefined;\r\n    }\r\n    setReadOnly(itemName:string, value:boolean) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setReadOnly(value);\r\n    }\r\n    getVisible(itemName:string):boolean {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.getVisible();\r\n        return undefined;\r\n    }\r\n    setVisible(itemName:string, value:boolean) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setVisible(value);\r\n    }\r\n\r\n    checkFieldRules() {\r\n        for (let i in this.widgets) {\r\n            this.widgets[i].checkRules();\r\n        }\r\n        if (this.subContexts === undefined) return;\r\n        for (let i in this.subContexts) {\r\n            let arrRowContexts = this.subContexts[i];\r\n            for (let j in arrRowContexts) {\r\n                arrRowContexts[j].checkFieldRules();\r\n            }\r\n        }\r\n    }\r\n\r\n    checkContextRules() {\r\n        if (this.rules === undefined) return;\r\n        this.clearContextErrors();\r\n        for (let rule of this.rules) {\r\n            let ret = rule(this);\r\n            if (ret === undefined) continue;\r\n            if (Array.isArray(ret) === true) {\r\n                this.errors.push(...ret as string[]);\r\n            }\r\n            else if (typeof ret === 'string') {\r\n                this.errors.push(ret as string);\r\n            }\r\n            else {\r\n                for (let i in ret as object) this.setError(i, ret[i]);\r\n            }\r\n        }\r\n        if (this.subContexts === undefined) return;\r\n        for (let i in this.subContexts) {\r\n            let arrRowContexts = this.subContexts[i];\r\n            for (let j in arrRowContexts) {\r\n                let rowContext = arrRowContexts[j];\r\n                rowContext.removeErrors();\r\n                rowContext.checkContextRules();\r\n            }\r\n        }\r\n    }\r\n\r\n    setError(itemName:string, error:string) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget === undefined) return;\r\n        widget.setContextError(error);\r\n        this.addErrorWidget(widget);\r\n    }\r\n\r\n    clearContextErrors() {\r\n        for (let i in this.widgets) this.widgets[i].clearContextError();\r\n    }\r\n\r\n    checkRules() {\r\n        this.checkFieldRules();\r\n        this.checkContextRules();\r\n    }\r\n\r\n    addErrorWidget(widget:Widget) {\r\n        let pos = this.errorWidgets.findIndex(v => v === widget);\r\n        if (pos < 0) this.errorWidgets.push(widget);\r\n    }\r\n    removeErrorWidget(widget:Widget) {\r\n        let pos = this.errorWidgets.findIndex(v => v === widget);\r\n        if (pos >= 0) this.errorWidgets.splice(pos, 1);\r\n    }\r\n\r\n    protected checkHasError():boolean {\r\n        let ret = (this.errorWidgets.length + this.errors.length) > 0;\r\n        if (ret === true) return true;\r\n        if (this.subContexts === undefined) return false;\r\n        for (let i in this.subContexts) {\r\n            let arrRowContexts = this.subContexts[i];\r\n            for (let j in arrRowContexts) {\r\n                if (arrRowContexts[j].hasError === true) return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    @computed get hasError():boolean {\r\n        return this.checkHasError();\r\n    };\r\n\r\n    removeErrors() {\r\n        this.errors.splice(0);\r\n        this.errorWidgets.splice(0);\r\n        for (let i in this.widgets) {\r\n            let widget = this.widgets[i];\r\n            if (widget === undefined) continue;\r\n            widget.clearContextError();\r\n        }\r\n    }\r\n\r\n    renderErrors = observer((): JSX.Element => {\r\n        let {errors} = this;\r\n        if (errors.length === 0) return null;\r\n        return <>\r\n            {errors.map(err => <span key={err} className=\"text-danger inline-block my-1 ml-3\">\r\n                <i className=\"fa fa-exclamation-circle\" /> &nbsp;{err}\r\n            </span>)}\r\n        </>\r\n    });\r\n}\r\n\r\nlet rowKeySeed:number = 1;\r\nexport class RowContext extends Context {\r\n    readonly parentContext: Context;\r\n    readonly arrSchema: ArrSchema;\r\n    readonly uiSchema: UiArr;\r\n    //readonly row: ArrRow;\r\n    readonly rowKey: number;\r\n    readonly data: any;\r\n    constructor(parentContext:Context, arrSchema: ArrSchema, data: any, inNode: boolean) {\r\n        let uiArr:UiArr;\r\n        let {uiSchema} = parentContext;\r\n        if (uiSchema !== undefined) {\r\n            let {items} = uiSchema;\r\n            if (items !== undefined) uiArr = items[arrSchema.name] as UiArr;\r\n        }\r\n        super(parentContext.form, uiArr, data, inNode, true);\r\n        this.parentContext = parentContext;\r\n        this.arrSchema = arrSchema;\r\n        this.rowKey = rowKeySeed++;\r\n        this.data = data;\r\n    }\r\n    getItemSchema(itemName:string):ItemSchema {return this.arrSchema.itemSchemas[itemName]}\r\n    getUiItem(itemName:string):UiItem {\r\n        if (this.uiSchema === undefined) return undefined;\r\n        let {items} = this.uiSchema;\r\n        if (items === undefined) return undefined;\r\n        return items[itemName]\r\n    }\r\n    get arrName():string {return this.arrSchema.name}\r\n    //get data() {return this.row.data;}\r\n    removeErrors() {\r\n        super.removeErrors();\r\n        this.parentContext.removeErrors();\r\n    }\r\n\r\n    get parentData():any {return this.parentContext.data;}\r\n}\r\n\r\nexport class FormContext extends Context {\r\n    constructor(form:Form, inNode:boolean) {\r\n        super(form, form.uiSchema, form.data, inNode, false);\r\n    }\r\n    get data():any {return this.form.data}\r\n    getItemSchema(itemName:string):ItemSchema {return this.form.itemSchemas[itemName]}\r\n    getUiItem(itemName:string):UiItem {\r\n        let {uiSchema} = this.form;\r\n        if (uiSchema === undefined) return undefined;\r\n        let {items} = uiSchema;\r\n        if (items === undefined) return undefined;\r\n        return items[itemName]\r\n    }\r\n}\r\n\r\nexport const ContextContainer = React.createContext<Context>({} as any);\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\n//import { ArrRow } from '../arrRow';\r\nimport { Context, RowContext, ContextContainer } from '../context';\r\nimport { ArrSchema } from '../../schema';\r\nimport { UiArr, TempletType } from '../../schema';\r\nimport { Unknown } from './unknown';\r\nimport { factory } from './factory';\r\n\r\nexport const ArrComponent = observer((\r\n    {parentContext, arrSchema, children}:{parentContext: Context, arrSchema: ArrSchema, children: React.ReactNode}) => \r\n{\r\n    let {name, arr} = arrSchema;\r\n    let data = parentContext.initData[name] as any[];\r\n    let {form} = parentContext;\r\n    let arrRowContexts = parentContext.getArrRowContexts(name);\r\n    let ui = parentContext.getUiItem(name) as UiArr;\r\n    let arrLabel = name;\r\n    let Templet:TempletType;\r\n    let selectable:boolean, deletable:boolean, restorable:boolean;\r\n    let {ArrContainer, RowContainer, RowSeperator, uiSchema} = form;\r\n    if (uiSchema !== undefined) {\r\n        let {selectable:formSelectable, deletable:formDeletable, restorable:formRestorable} = uiSchema;\r\n        if (selectable !== true) selectable = formSelectable;\r\n        if (deletable !== true) deletable = formDeletable;\r\n        if (restorable !== true) restorable = formRestorable;\r\n    }\r\n    if (ui !== undefined) {\r\n        let {widget:widgetType, label, \r\n            selectable:arrSelectable, deletable:arrDeletable, restorable:arrRestorable,\r\n            ArrContainer:ac, RowContainer:rc, RowSeperator:rs\r\n        } = ui;\r\n        if (arrSelectable !== undefined) selectable = arrSelectable;\r\n        if (arrDeletable !== undefined) deletable = arrDeletable;\r\n        if (arrRestorable !== undefined) restorable = arrRestorable;\r\n        if (ac !== undefined) ArrContainer = ac;\r\n        if (rc !== undefined) RowContainer = rc;\r\n        if (rs !== undefined) RowSeperator = rs;\r\n        Templet = ui.Templet;\r\n        if (widgetType !== 'arr') return Unknown(arrSchema.type, widgetType, ['arr']);\r\n        arrLabel = label || arrLabel;\r\n    }\r\n    let first = true;\r\n    return ArrContainer(arrLabel, <>\r\n        {data.map((row:any, index) => {\r\n            let rowContext: RowContext;\r\n            let rowContent: JSX.Element;\r\n            let sep = undefined;\r\n            if (first === false) sep = RowSeperator;\r\n            else first = false;\r\n            if (children !== undefined) {\r\n                rowContext = new RowContext(parentContext, arrSchema, row, true);\r\n                rowContent = <>{children}</>;\r\n            }\r\n            else {\r\n                let typeofTemplet = typeof Templet;\r\n                if (typeofTemplet === 'function') {\r\n                    rowContext = new RowContext(parentContext, arrSchema, row, true);\r\n                    rowContent = React.createElement(observer(Templet as React.StatelessComponent), row);\r\n                }\r\n                else if (typeofTemplet === 'object') {\r\n                    rowContext = new RowContext(parentContext, arrSchema, row, true);\r\n                    rowContent = Templet as JSX.Element;\r\n                }\r\n                else {\r\n                    rowContext = new RowContext(parentContext, arrSchema, row, false);\r\n                    rowContent = <>{\r\n                        arr.map((v, index) => {\r\n                            return <React.Fragment key={v.name}>\r\n                                {factory(rowContext, v, undefined)}\r\n                            </React.Fragment>\r\n                        })}\r\n                    </>;\r\n                }\r\n            }\r\n            let {rowKey} = rowContext;\r\n            arrRowContexts[rowKey] = rowContext;\r\n\r\n            let selectCheck:JSX.Element, deleteIcon:JSX.Element;\r\n            if (selectable === true) {\r\n                let onClick = (evt: React.MouseEvent<HTMLInputElement>)=>{\r\n                    let {checked} = (evt.target as HTMLInputElement);\r\n                    row.$isSelected = checked;\r\n                    let {$source} = row;\r\n                    if ($source !== undefined) $source.$isSelected = checked;\r\n                    rowContext.removeErrors();\r\n                }\r\n                selectCheck = <div className=\"form-row-checkbox\">\r\n                    <input type=\"checkbox\" onClick={onClick} defaultChecked={row.$isSelected} />\r\n                </div>;\r\n            }\r\n            let isDeleted = !(row.$isDeleted===undefined || row.$isDeleted===false);\r\n            if (deletable === true) {\r\n                let icon = isDeleted? 'fa-undo' : 'fa-trash';\r\n                let onDelClick = () => {\r\n                    if (restorable === true) {\r\n                        row.$isDeleted = !isDeleted;\r\n                        let {$source} = row;\r\n                        if ($source !== undefined) $source.$isDeleted = !isDeleted;\r\n                    }\r\n                    else {\r\n                        let p = data.indexOf(row);\r\n                        if (p>=0) data.splice(p, 1);\r\n                    }\r\n                    rowContext.removeErrors();\r\n                }\r\n                deleteIcon = <div className=\"form-row-edit text-info\" onClick={onDelClick}>\r\n                    <i className={classNames('fa', icon, 'fa-fw')} />\r\n                </div>;\r\n            }\r\n            let editContainer = selectable===true || deletable===true?\r\n                (content:any) => <fieldset disabled={isDeleted}><div className={classNames('d-flex', {'deleted':isDeleted, 'row-selected':row.$isSelected})}>\r\n                    {selectCheck}\r\n                    <div className={selectable===true && deletable===true? \"form-row-content\":\"form-row-content-1\"}>{content}</div>\r\n                    {deleteIcon}\r\n                </div></fieldset>\r\n                :\r\n                (content:any) => content;\r\n\r\n            return <ContextContainer.Provider key={rowKey} value={rowContext}>\r\n                {sep}\r\n                {RowContainer(editContainer(<><rowContext.renderErrors />{rowContent}</>))}\r\n            </ContextContainer.Provider>;\r\n        })}\r\n    </>);\r\n});\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiImageItem } from '../../schema';\r\nimport { Image } from '../../image';\r\nimport { ImageItemEdit } from '../../edit/imageItemEdit';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\n\r\nexport class ImageWidget extends Widget {\r\n    protected input: HTMLInputElement;\r\n    protected ui: UiImageItem;\r\n    @observable private imageSrc: string;\r\n\r\n    protected init() {\r\n        super.init();\r\n        this.imageSrc = this.value;\r\n    }\r\n\r\n    protected onClick = async () => {\r\n        let edit = new ImageItemEdit(this.itemSchema, this.ui, this.ui.label, this.value);\r\n        let ret = await edit.start();\r\n        if (ret !== null) {\r\n            this.setValue(ret);\r\n            this.imageSrc = ret;\r\n        }\r\n        await edit.end();\r\n    }\r\n\r\n    render() {\r\n        return <this.observerRender />;\r\n    }\r\n\r\n    private observerRender = observer(() => {\r\n        let cn = [\r\n            'bg-white p-1 d-flex justify-content-center',\r\n        ];\r\n        let onClick: any;\r\n        if (!this.readOnly && !this.disabled) {\r\n            cn.push('cursor-pointer');\r\n            onClick = this.onClick;\r\n        }\r\n        return <div className={classNames(cn)} onClick={onClick}>\r\n            <Image src={this.imageSrc} className=\"w-4c h-4c\"/>\r\n        </div>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport { Schema, ArrSchema, DataType, ButtonSchema, ItemSchema } from '../../schema';\r\nimport { UiItem, UiArr, UiType, UiButton, TempletType, TypeWidget, UiCustom } from '../../schema';\r\nimport { TextWidget } from './textWidget';\r\nimport { TextAreaWidget } from './textareaWidget';\r\nimport { PasswordWidget, UrlWidget, EmailWidget } from './passwordWidget';\r\nimport { UpdownWidget } from './updownWidget';\r\nimport { NumberWidget } from './numberWidget';\r\nimport { DateWidget, DateTimeWidget, TimeWidget, MonthWidget } from './dateWidget';\r\nimport { CheckBoxWidget } from './checkBoxWidget';\r\nimport { FieldProps } from '../field';\r\nimport { Context, RowContext, FormContext, ContextContainer } from '../context';\r\nimport { SelectWidget } from './selectWidget';\r\nimport { RadioWidget } from './radioWidget';\r\nimport { RangeWidget } from './rangeWidget';\r\nimport { IdWidget } from './idWidget';\r\nimport { ButtonWidget } from './buttonWidget';\r\nimport { ArrComponent } from './arrComponent';\r\nimport { ImageWidget } from './imageWidget';\r\n\r\nconst widgetsFactory: {[type: string]: {widget?: TypeWidget, dataTypes?: DataType[]}} = {\r\n    id: {\r\n        dataTypes: ['id'],\r\n        widget: IdWidget,\r\n    },\r\n    text: {\r\n        dataTypes: ['integer', 'number', 'string'],\r\n        widget: TextWidget\r\n    },\r\n    textarea: {\r\n        dataTypes: ['string'],\r\n        widget: TextAreaWidget\r\n    },\r\n    password: {\r\n        dataTypes: ['string'],\r\n        widget: PasswordWidget\r\n    },\r\n    date: {\r\n        dataTypes: ['date'],\r\n        widget: DateWidget\r\n    },\r\n    datetime: {\r\n        dataTypes: ['date'],\r\n        widget: DateTimeWidget\r\n    },\r\n    time: {\r\n        dataTypes: ['date'],\r\n        widget: TimeWidget\r\n    },\r\n    month: {\r\n        dataTypes: ['date'],\r\n        widget: MonthWidget\r\n    },\r\n    select: {\r\n        dataTypes: ['integer', 'number', 'string', 'date', 'boolean'],\r\n        widget: SelectWidget\r\n    },\r\n    url: {\r\n        dataTypes: ['string'],\r\n        widget: UrlWidget\r\n    },\r\n    email: {\r\n        dataTypes: ['string'],\r\n        widget: EmailWidget\r\n    },\r\n    number: {\r\n        dataTypes: ['integer', 'number'],\r\n        widget: NumberWidget\r\n    },\r\n    updown: {\r\n        dataTypes: ['integer', 'number'],\r\n        widget: UpdownWidget\r\n    },\r\n    color: {\r\n\r\n    },\r\n    checkbox: {\r\n        dataTypes: ['boolean', 'integer', 'number'],\r\n        widget: CheckBoxWidget\r\n    },\r\n    image: {\r\n        dataTypes: ['string'],\r\n        widget: ImageWidget,\r\n    },\r\n    checkboxes: {\r\n\r\n    },\r\n    radio: {\r\n        dataTypes: ['integer', 'number', 'string', 'date', 'boolean'],\r\n        widget: RadioWidget\r\n    },\r\n    range: {\r\n        dataTypes: ['integer'],\r\n        widget: RangeWidget,\r\n    },\r\n    button: {\r\n        dataTypes: ['button', 'submit'],\r\n        widget: ButtonWidget,\r\n    }\r\n}\r\n\r\nexport function factory(context: Context, itemSchema: ItemSchema, children:React.ReactNode, fieldProps?: FieldProps):JSX.Element {\r\n    if (context === undefined) {\r\n        debugger;\r\n        return null;\r\n    }\r\n    if (itemSchema === undefined) return undefined;\r\n    let {name, type} = itemSchema;\r\n    switch (type) {\r\n    case 'arr':\r\n        let arrSchema = context.getItemSchema(name) as ArrSchema;\r\n        return <ArrComponent parentContext={context} arrSchema={arrSchema} children={children} />;\r\n    default:\r\n        break;\r\n    }\r\n\r\n    let typeWidget: TypeWidget;\r\n    let ui = context.getUiItem(name);\r\n    function getTypeWidget(t:DataType): TypeWidget {\r\n        switch(t) {\r\n        default: return TextWidget; \r\n        case 'id': return IdWidget;\r\n        case 'integer': return UpdownWidget;\r\n        case 'number': return NumberWidget; \r\n        case 'string': return TextWidget; \r\n        case 'date': return DateWidget; \r\n        case 'boolean': return CheckBoxWidget; \r\n        case 'button':\r\n        case 'submit': return ButtonWidget;\r\n        }\r\n    }\r\n    if (ui === undefined) { \r\n        typeWidget = getTypeWidget(type);\r\n    }\r\n    else {\r\n        let {widget:widgetType} = ui;\r\n        switch (widgetType) {\r\n        default:\r\n            if (widgetType !== undefined) {\r\n                let widgetFactory = widgetsFactory[widgetType];\r\n                typeWidget = widgetFactory.widget;\r\n            }\r\n            if (typeWidget === undefined) typeWidget = getTypeWidget(type);\r\n            break;\r\n        case 'custom':\r\n            typeWidget = (ui as UiCustom).WidgetClass;\r\n            break;\r\n        case 'group':\r\n            return <span>impletment group</span>;\r\n        }\r\n        //label = uiLabel || name;\r\n    }\r\n    \r\n    let {isRow, widgets} = context;\r\n    let widget = new typeWidget(context, itemSchema, fieldProps, children);\r\n    widgets[name] = widget;\r\n\r\n    return <widget.container />;\r\n    /*\r\n    if (isRow === false) {\r\n        let WidgetElement = observer(() => widget.container());\r\n        return <WidgetElement />;\r\n    }\r\n    else {\r\n        let widgetElement = widget.container();\r\n        return widgetElement;\r\n    }\r\n    */\r\n}\r\n\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiTextAreaItem } from '../../schema';\r\nimport { StringSchema } from '../../schema';\r\n\r\nexport class TextAreaWidget extends Widget {\r\n    protected itemSchema: StringSchema;\r\n    protected input: HTMLTextAreaElement;\r\n    protected ui: UiTextAreaItem;\r\n\r\n    protected setElementValue(value:any) {this.input.value = value}\r\n    protected onInputChange = (evt: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        this.setValue(evt.currentTarget.value);\r\n    }\r\n\r\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\r\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\r\n\r\n    render() {\r\n        let renderTemplet = this.renderTemplet();\r\n        if (renderTemplet !== undefined) return renderTemplet;\r\n        let cn = {};\r\n        if (this.hasError === true) {\r\n            cn['is-invalid'] = true;\r\n        }\r\n        else {\r\n            cn['required-item'] = this.itemSchema.required === true;\r\n        }\r\n        return <textarea ref={(input) => this.input=input} \r\n            className={classNames(this.className, cn)}\r\n            rows={this.ui && this.ui.rows}\r\n            maxLength={this.itemSchema.maxLength}\r\n            defaultValue={this.defaultValue} onChange={this.onInputChange} />\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { TextWidget } from './textWidget';\r\n\r\nexport class PasswordWidget extends TextWidget {\r\n    protected inputType = 'password';\r\n}\r\n\r\nexport class UrlWidget extends TextWidget {\r\n    protected inputType = 'url';\r\n}\r\n\r\nexport class EmailWidget extends TextWidget {\r\n    protected inputType = 'email';\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { TextWidget } from './textWidget';\r\nimport { Widget } from './widget';\r\nimport { UiRadio } from '../../schema';\r\nimport { RowContext } from '../context';\r\n\r\n\r\n//const radioStyle:React.CSSProperties = {width:'2em', height:'1.2em'};\r\nexport class RadioWidget extends Widget {\r\n    protected inputs: {[index:number]: HTMLInputElement} = {};\r\n    protected ui: UiRadio;\r\n\r\n    protected setElementValue(value:any) {\r\n        for (let i in this.inputs) {\r\n            let input = this.inputs[i];\r\n            input.checked = value === input.value;\r\n        }\r\n    }\r\n    setReadOnly(value:boolean) {\r\n        this.readOnly = value;\r\n        for (let i in this.inputs) this.inputs[i].readOnly = value;\r\n    }\r\n    setDisabled(value:boolean) {\r\n        this.disabled = value;\r\n        for (let i in this.inputs) this.inputs[i].disabled = value\r\n    }\r\n\r\n    render() {\r\n        let {defaultValue, list} = this.ui;\r\n        let {isRow, inNode} = this.context;\r\n        let rowKey:number;\r\n        if (isRow === true) {\r\n            rowKey = (this.context as RowContext).rowKey;\r\n        }\r\n        let cn = classNames(this.className, 'form-radio-inline');\r\n        return <span className={cn}>\r\n                {list.map((v,index) => {\r\n                    let {value, title} = v;\r\n                    let name = this.name;\r\n                    if (rowKey !== undefined) name += '-' + rowKey;\r\n                    return <label key={index} className=\"form-radio-inline\">\r\n                        <input ref={input=>this.inputs[index]=input} type=\"radio\" name={name}\r\n                            value={value} defaultChecked={(this.defaultValue || defaultValue)===value} />\r\n                        {title || value}\r\n                    </label>;\r\n                    //</span>\r\n                })}\r\n            </span>;\r\n    }\r\n}\r\n/*\r\n<div className=\"form-control d-flex border-0\"><input\r\nref={(input)=>this.input = input}\r\nclassName={classNames(this.className, 'align-self-center')}\r\ntype=\"checkbox\"\r\nstyle={{maxHeight:\"1.2em\"}}\r\ndefaultValue={this.defaultValue} \r\nonChange={this.onChange} />\r\n</div>\r\n*/","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { UiRange } from '../../schema';\r\nimport { Widget } from './widget';\r\n\r\nexport class RangeWidget extends Widget {\r\n    protected inputType = 'range';\r\n    protected input: HTMLInputElement;\r\n    protected ui: UiRange;\r\n\r\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\r\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\r\n\r\n    render() {\r\n        let {min, max, step} = this.ui;\r\n        return <><input ref={input=>this.input = input}\r\n            className={classNames(this.className, 'form-control', 'w-min-6c')}\r\n            type={this.inputType}\r\n            defaultValue={this.defaultValue} \r\n            onChange={this.onInputChange}\r\n            max={max}\r\n            min={min}\r\n            step={step}\r\n            />\r\n        </>;\r\n    }\r\n}\r\n","import _ from 'lodash';\r\nimport { KeyValueRes, Res } from '../res';\r\n\r\nexport interface FormRes extends KeyValueRes {\r\n    required: string;\r\n    number: string;\r\n    integer: string;\r\n    min: string;\r\n    max: string;\r\n}\r\n\r\nexport const formRes:Res<FormRes> = {\r\n    _: {\r\n        required: 'required',\r\n        number: 'not valid number',\r\n        integer: 'not valid integer',\r\n        min: 'min value is ${min}',\r\n        max: 'max value is ${max}',\r\n    },\r\n    zh: {\r\n        _: {\r\n            required: '必须填',\r\n            number: '需要数字',\r\n            integer: '需要整数',\r\n            min: '不能小于${min}',\r\n            max: '不能大于${max}',\r\n        }\r\n    },\r\n}\r\n","import * as React from 'react';\r\nimport {observable, IReactionDisposer, autorun, isObservable} from 'mobx';\r\nimport classNames from 'classnames';\r\nimport { Schema, ItemSchema, ArrSchema } from '../schema';\r\nimport { UiSchema, TempletType } from '../schema';\r\nimport { factory } from './widgets';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport { ContextContainer, FormContext, Context, RowContext } from './context';\r\nimport { FormRes, formRes } from './formRes';\r\nimport { resLang } from '../res';\r\n\r\nexport type FormButtonClick = (name:string, context: Context) => Promise<any>;\r\nexport type InputEnter = (name:string, context: Context) => Promise<any>;\r\n\r\nexport interface FormProps {\r\n    className?: string;\r\n    schema: Schema;\r\n    uiSchema?: UiSchema;\r\n    formData?: any;\r\n    onButtonClick?: FormButtonClick;\r\n    onEnter?: InputEnter;\r\n    fieldLabelSize?: number;            // col-sm-2 for label\r\n    requiredFlag?: boolean;             // default=true\r\n    beforeShow?: (formContext:FormContext) => void;\r\n    res?: FormRes;\r\n\r\n    Container?: (content:JSX.Element) => JSX.Element;\r\n    FieldContainer?: (label:string|JSX.Element, content:JSX.Element) => JSX.Element;\r\n    FieldClass?: string;\r\n    ButtonClass?: string;\r\n}\r\n\r\nexport class Form extends React.Component<FormProps> {\r\n    readonly schema: Schema;\r\n    readonly itemSchemas: {[name:string]: ItemSchema};\r\n    readonly uiSchema: UiSchema;\r\n    readonly res?: FormRes;\r\n    protected formContext: FormContext;\r\n    //private content: any;\r\n    //private formData: any;\r\n    private disposer: IReactionDisposer;\r\n    //@observable \r\n    readonly data:any;\r\n\r\n    readonly Container: (content:JSX.Element) => JSX.Element;\r\n    readonly FieldContainer: (label:any, content:JSX.Element) => JSX.Element;\r\n    readonly FieldClass: string;\r\n    readonly ButtonClass: string;\r\n    //readonly ArrContainer: (label:any, content:JSX.Element) => JSX.Element;\r\n    //readonly RowContainer: (content:JSX.Element) => JSX.Element;\r\n    //readonly RowSeperator: JSX.Element;\r\n\r\n    constructor(props:FormProps) {\r\n        super(props);\r\n        let {schema, uiSchema, formData, \r\n            Container, FieldContainer, FieldClass, \r\n            ButtonClass, res,\r\n        } = props;\r\n        this.Container = Container || this.DefaultContainer;\r\n        this.FieldContainer = FieldContainer || this.DefaultFieldContainer;\r\n        this.FieldClass = FieldClass!==undefined && FieldClass!==''&&FieldClass!==null? FieldClass : this.DefaultFieldClass;\r\n        this.res = res || this.DefaultRes;\r\n        this.ButtonClass = ButtonClass || this.DefaultButtonClass;\r\n\r\n        this.schema = schema;\r\n        this.itemSchemas = {};\r\n        for (let itemSchema of this.schema) {\r\n            this.itemSchemas[itemSchema.name] = itemSchema;\r\n        }\r\n        this.uiSchema = uiSchema;\r\n\r\n        //this.formData = formData;\r\n        this.disposer = autorun(this.watch);\r\n        this.data = {};\r\n        // this.initRender();\r\n    }\r\n\r\n    private renderContent():any {\r\n        this.initData(this.props.formData);\r\n        let {children} = this.props;\r\n        if (children !== undefined) {\r\n            this.formContext = new FormContext(this, true);\r\n            return <>{children}</>;\r\n        }\r\n\r\n        let Templet: TempletType;\r\n        if (this.uiSchema !== undefined) {\r\n            Templet = this.uiSchema.Templet;\r\n        }\r\n        if (Templet !== undefined) {\r\n            this.formContext = new FormContext(this, true);\r\n            return typeof(Templet) === 'function'? Templet(this.data) : Templet;\r\n        }\r\n\r\n        this.formContext = new FormContext(this, false);\r\n        return <>{this.schema.map((v, index) => {\r\n            return <React.Fragment key={index}>{factory(this.formContext, v, children)}</React.Fragment>\r\n        })}</>;\r\n    }\r\n\r\n    private initData(formData: any) {\r\n        if (formData === undefined) formData = {};\r\n        for (let itemSchema of this.schema) {\r\n            this.initDataItem(itemSchema, this.data, formData);\r\n        }\r\n    }\r\n\r\n    private initDataItem(itemSchema: ItemSchema, data:any, formData: any):any {\r\n        let {name, type} = itemSchema;\r\n        if (type === 'button') return;\r\n        if (type !== 'arr') {\r\n            data[name] = formData[name];\r\n            return;\r\n        }\r\n\r\n        let arrItem:ArrSchema = itemSchema as ArrSchema;\r\n        let {arr:arrItems} = arrItem;\r\n        if (arrItems === undefined) return;\r\n        let arrDict = arrItem.itemSchemas = {};\r\n        for (let item of arrItems) {\r\n            arrDict[item.name] = item;\r\n        }\r\n        let val:any[] = formData[name];\r\n        if (val === undefined) val = [];\r\n        else if (Array.isArray(val) === false) val = [val];\r\n        let arr:any[] = [];\r\n        for (let row of val) {\r\n            let {$isSelected, $isDeleted} = row;\r\n            let r = {\r\n                $source: row,\r\n                $isSelected: $isSelected,\r\n                $isDeleted: $isDeleted,\r\n            };\r\n            for (let item of arrItems) {\r\n                this.initDataItem(item, r, row);\r\n                /*\r\n                let {name:nm} = item;\r\n                let v = row[nm];\r\n                if (v === undefined) v = null;\r\n                r[nm] = v;\r\n                */\r\n            }\r\n            arr.push(r);\r\n        }\r\n        // 如果没有observable，行删除标志点击不管用\r\n        // 不知道这里为什么要去掉observable。有可能会有别的问题\r\n        data[name] = observable(arr);\r\n        //data[name] = arr;\r\n        return;\r\n    }\r\n\r\n    private watch = () => {\r\n        let {formData} = this.props;\r\n        if (formData === undefined) return;\r\n        //this.initData(formData);\r\n        this.calcSelectOrDelete();\r\n    }\r\n    private calcSelectOrDelete() {\r\n        for (let itemSchema of this.schema) {\r\n            this.arrItemOperated(itemSchema);\r\n        }\r\n    }\r\n\r\n    private arrItemOperated(itemSchema: ItemSchema) {\r\n        let {name, type} = itemSchema;\r\n        if (type !== 'arr') return;\r\n        if (this.data === undefined) return;\r\n        let formArrVal = this.data[name];\r\n        if (formArrVal === undefined) return;\r\n        let {arr: arrItems} = itemSchema as ArrSchema;\r\n        for (let row of formArrVal) {\r\n            let {$source} = row;\r\n            if ($source === undefined) continue;\r\n            let {$isSelected, $isDeleted} = $source;\r\n            row.$isSelected = $isSelected;\r\n            row.$isDeleted = $isDeleted;\r\n            //console.log($isSelected, $isDeleted);\r\n            for (let item of arrItems) {\r\n                this.arrItemOperated(item);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let {beforeShow} = this.props;\r\n        if (beforeShow !== undefined) beforeShow(this.formContext);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.disposer !== undefined) this.disposer();\r\n    }\r\n\r\n    render() {\r\n        let content = this.renderContent();\r\n        return <ContextContainer.Provider value={this.formContext}>\r\n            <this.formContext.renderErrors />\r\n            {this.Container(content)}\r\n        </ContextContainer.Provider>;\r\n    }\r\n\r\n    async buttonClick(buttonName:string) {\r\n        this.formContext.checkRules()\r\n        if (this.formContext.hasError === true) return;\r\n\r\n        let {onButtonClick} = this.formContext.form.props;\r\n        if (onButtonClick === undefined) {\r\n            alert(`you should define form onButtonClick`);\r\n            return;\r\n        }\r\n        let ret = await onButtonClick(buttonName, this.formContext);\r\n        if (ret === undefined) return;\r\n        this.formContext.setError(buttonName, ret);\r\n    }\r\n\r\n    protected DefaultContainer = (content:JSX.Element): JSX.Element => {\r\n        return <form className={classNames(this.props.className)}>\r\n            {content}\r\n        </form>;\r\n    }\r\n    protected DefaultFieldContainer = (label:string|JSX.Element, content:JSX.Element): JSX.Element => {\r\n        let {fieldLabelSize} = this.props;\r\n\r\n        if (fieldLabelSize > 0) {\r\n            let labelView:any;\r\n            if (label === null) {\r\n                fieldLabelSize = 0;\r\n            }\r\n            else {\r\n                labelView = <label className={classNames('col-sm-' + fieldLabelSize, 'col-form-label')}>{label}</label>\r\n            }\r\n            let fieldCol = 'col-sm-' + (12 - fieldLabelSize);\r\n            return <div className=\"form-group row\">\r\n                {labelView}\r\n                <div className={fieldCol}>{content}</div>\r\n            </div>;\r\n        }\r\n        return <div className=\"form-group\">\r\n            {label===null? null:<label className=\"col-form-label\">{label}</label>}\r\n            {content}\r\n        </div>;\r\n    }\r\n    protected DefaultFieldClass:string = undefined;\r\n    protected DefaultButtonClass = 'text-center py-2';\r\n    protected DefaultRes:FormRes = resLang<FormRes>(formRes);\r\n\r\n    ArrContainer = (label:any, content:JSX.Element): JSX.Element => {\r\n        return <div>\r\n            <div className={classNames('small text-muted text-center bg-light py-1 px-3 mt-4 mb-1')}>{label}</div>\r\n            {content}\r\n        </div>;\r\n    }\r\n    RowContainer = (content:JSX.Element): JSX.Element => {\r\n        //return <div className=\"row\">{content}</div>;\r\n        let cn = classNames({\r\n            'py-3': true\r\n        });\r\n        return <div className={cn}>{content}</div>\r\n    }\r\n    RowSeperator = <div className=\"border border-gray border-top\" />;\r\n}\r\n","import * as React from 'react';\r\nimport { factory } from './widgets';\r\nimport { ContextContainer, Context } from './context';\r\n\r\nexport interface FieldProps {\r\n    name: string;\r\n}\r\n\r\nexport class Field extends React.Component<FieldProps> {\r\n    static contextType = ContextContainer;\r\n    render() {\r\n        let {name, children } = this.props;\r\n        let context:Context = this.context;\r\n        if (context === undefined) return <span className=\"text-danger\">!only in Form!</span>;\r\n        let itemSchema = context.getItemSchema(name);\r\n        let content = factory(context, itemSchema, children, this.props);\r\n        if (content === undefined) {\r\n            return <span className=\"text-danger\">!!{name} is not defined!!</span>;\r\n        }\r\n        return content;\r\n    }\r\n}\r\n","export {Form} from './form';\r\nexport {Field} from './field';\r\nexport {Context, RowContext} from './context';\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport '../css/va-badge.css';\r\n\r\nexport interface BadgeProps {\r\n    className?: string;\r\n    badge?: string|number;\r\n    size?: 'xs' | 'sm' | 'lg';\r\n    color?: 'secondary'|'success'|'danger'|'primary'|'info'|'warning';\r\n    badgeAlign?: 'left'|'center'|'right';\r\n    badgeVertical?: 'top'|'middle'|'bottom';\r\n}\r\n\r\n@observer\r\nexport class Badge extends React.Component<BadgeProps> {\r\n    render() {\r\n        let {className, badge, size, color, badgeAlign, badgeVertical, children} = this.props;\r\n        let cn = classNames(\r\n            className,\r\n            'va-badge',\r\n            size && 'va-badge-'+size,\r\n            'va-badge-' + (color||'secondary'),\r\n            badgeAlign && 'va-badg-'+badgeAlign,\r\n            badgeVertical && 'va-badg-'+badgeVertical,\r\n        );\r\n        let b;\r\n        if (badge) b = <b>{badge}</b>;\r\n        return <div className={cn}>\r\n            {children}\r\n            {b}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport * as classNames from 'classnames';\r\nimport '../css/va-lmr.css';\r\n\r\nexport interface LMRProps {\r\n    className?: string | string[];\r\n    left?: string|JSX.Element;\r\n    right?: string|JSX.Element;\r\n    onClick?: ()=>void;\r\n}\r\n\r\n@observer\r\nexport class LMR extends React.Component<LMRProps> {\r\n    render() {\r\n        let {className, left, children, right, onClick} = this.props;\r\n        let l, r;\r\n        if (left !== undefined) l = <header>{left}</header>;\r\n        if (right !== undefined) r = <footer>{right}</footer>;\r\n        let cursor;\r\n        if (onClick !== undefined) cursor = 'cursor-pointer';\r\n        return <div className={classNames('va-lmr', className, cursor)} onClick={onClick}>\r\n            {l}\r\n            <div>{children}</div>\r\n            {r}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\n\r\nexport interface FAProps {\r\n    name: string;\r\n    className?: string;\r\n    size?: 'lg'|'2x'|'3x'|'4x'|'5x';\r\n    spin?: boolean;\r\n    fixWidth?: boolean;\r\n    border?: boolean;\r\n    pull?: 'left'|'right';\r\n    pulse?: boolean;\r\n    rotate?: 90|180|270;\r\n    flip?: 'horizontal'|'vertical';\r\n    inverse?: boolean;\r\n}\r\n\r\nexport class FA extends React.Component<FAProps> {\r\n    render() {\r\n        let {name, className, size, spin, fixWidth, border, pull, pulse, rotate, flip, inverse} = this.props;\r\n        let cn = classNames(className, 'fa',\r\n            name && ('fa-' + name),\r\n            size && 'fa-'+size,\r\n            fixWidth && 'fa-fw',\r\n            border && 'fa-border',\r\n            pull && 'fa-pull-' + pull,\r\n            spin && 'fa-spin',\r\n            pulse && 'fa-pulse',\r\n            rotate && 'fa-rotate-' + rotate,\r\n            flip && 'fa-flip-' + flip,\r\n            inverse && 'fa-inverse',\r\n        );\r\n        return <i className={cn} />\r\n    }\r\n}\r\n\r\nexport interface StackedFAProps {\r\n    className?: string;\r\n    size?: 'lg',\r\n}\r\nexport class StackedFA extends React.Component<StackedFAProps> {\r\n    render() {\r\n        let {className, size, children} = this.props;\r\n        let cn = classNames(\r\n            'fa-stack',\r\n            className,\r\n            size && 'fa-' + size);\r\n        return <span className={cn}>\r\n            {children}\r\n        </span>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\n\r\nexport const Muted = (props:any) => \r\n<small className={classNames('text-muted', props.className)} style={props.style}>\r\n    {props.children}\r\n</small>;\r\n","export * from './Badge';\r\nexport * from './LMR';\r\nexport * from './FA';\r\nexport * from './IconText';\r\nexport * from './Muted';\r\n","import * as React from 'react';\r\nimport { IObservableArray, computed } from 'mobx';\r\nimport { PageItems } from 'tonva-tools';\r\nimport {List} from './index';\r\n\r\nexport abstract class ListBase {\r\n    protected list: List;\r\n    constructor(list: List) {\r\n        this.list = list;\r\n    }\r\n    get isPaged():boolean {\r\n        let items = this.list.props.items;\r\n        return (items !== null && items !== undefined && Array.isArray(items) === false);\r\n    }\r\n    get items():any[]|IObservableArray<any> {\r\n        let items = this.list.props.items;\r\n        if (items === null) return null;\r\n        if (items === undefined) return undefined;\r\n        if (Array.isArray(items) === true)\r\n            return items as IObservableArray<any>;\r\n        else\r\n            return (items as PageItems<any>).items;\r\n    }\r\n    @computed get loading():boolean {\r\n        let items = this.list.props.items;\r\n        if (items === null) return false;\r\n        if (items === undefined) return true;\r\n        let pageItems = items as PageItems<any>;\r\n        if (pageItems.items === undefined) return false;\r\n        return pageItems.loading;\r\n    }\r\n    get selectedItems():any[] { return; }\r\n    updateProps(nextProps:any) {}\r\n    abstract render(item:any, index:number):JSX.Element;\r\n    protected renderContent(item:any, index:number) {\r\n        let {render} = this.list.props.item;\r\n        if (render === undefined) return <div className=\"px-3 py-2\">{JSON.stringify(item)}</div>;\r\n        return render(item, index);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {ListBase} from './base';\r\n\r\nexport class Clickable extends ListBase {\r\n    render(item:any, index:number):JSX.Element {\r\n        let {className, key, onClick} = this.list.props.item;\r\n        return <li key={key===undefined?index:key(item)} className={classNames('va-row-clickable', className)} onClick={()=>onClick(item)}>\r\n            {this.renderContent(item, index)}\r\n        </li>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {ListBase} from './base';\r\nimport { uid } from '../uid';\r\n\r\nexport class Static extends ListBase {\r\n    render(item:any, index:number):JSX.Element {\r\n        let {className, key, render} = this.list.props.item;\r\n        if (typeof item === 'string') {\r\n            let cn = classNames('va-list-gap', 'px-3', 'pt-1');\r\n            return <li key={uid()} className={cn}>{item}</li>;\r\n        }\r\n        return <li key={key===undefined?index:key(item)} className={classNames(className)}>\r\n            {this.renderContent(item, index)}\r\n        </li>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable, computed, IObservableArray} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport {ListBase} from './base';\r\nimport {uid} from '../uid';\r\nimport { PageItems } from 'tonva-tools';\r\n\r\nexport interface SelectableItem {\r\n    selected: boolean;\r\n    item: any;\r\n    labelId: string;\r\n}\r\n\r\nexport class Selectable extends ListBase {\r\n    private _items: SelectableItem[];\r\n    private _selectedItems: any[];\r\n    private input: HTMLInputElement;\r\n    private buildItems() {\r\n        console.log('buildItems in selectable.tsx');\r\n        let {items, selectedItems, compare} = this.list.props;\r\n        let itemsArray:any[] | IObservableArray<any>;\r\n        if (items === undefined) {\r\n            return this._items = undefined;\r\n        }\r\n        if (items === null) {\r\n            return this._items = null;\r\n        }\r\n        if (Array.isArray(items) === true) {\r\n            itemsArray = items as any;\r\n        }\r\n        else {\r\n            itemsArray = (items as PageItems<any>).items;\r\n        }\r\n        //let items = this.items;\r\n        this._selectedItems = selectedItems;\r\n        if (selectedItems === undefined) {\r\n            return this._items = itemsArray.map(v => {\r\n                return {\r\n                    selected:false, \r\n                    item:v, \r\n                    labelId:uid()\r\n                };\r\n            });\r\n        }\r\n        if (compare === undefined) {\r\n            return this._items = itemsArray.map(v => {\r\n                return {\r\n                    selected:selectedItems.find(si => si === v) !== undefined, \r\n                    item:v, \r\n                    labelId:uid()\r\n                };\r\n            });\r\n        }\r\n        return this._items = itemsArray.map(v => {\r\n            return {\r\n                selected:selectedItems.find(si => compare(v, si)) !== undefined, \r\n                item:v, \r\n                labelId:uid()\r\n            };\r\n        });\r\n    }\r\n    @computed get items() {\r\n        //if (this._items === undefined) \r\n        this.buildItems();\r\n        return this._items;\r\n    }\r\n    updateProps(nextProps:any) {\r\n        if (nextProps.selectedItems === this._selectedItems) return;\r\n        this.buildItems();\r\n    }\r\n    private onSelect(item:SelectableItem, selected:boolean) {\r\n        item.selected = selected;\r\n        let anySelected = this._items.some(v => v.selected);\r\n        this.list.props.item.onSelect(item.item, selected, anySelected);\r\n    }\r\n    \r\n    get selectedItems():any[] {\r\n        return this._items.filter(v => v.selected === true).map(v => v.item);\r\n    }\r\n    /*\r\n    set selectedItems(value: any[]) {\r\n        if (value === undefined) return;\r\n        if (this._items === undefined) return;\r\n        let sLen = this._items.length;\r\n        let list = value.slice();\r\n        for (let n=0; n<sLen; n++) {\r\n            let sItem = this._items[n];\r\n            let len = list.length;\r\n            if (len === 0) break;\r\n            let item = sItem.item;\r\n            for (let i=0; i<len; i++) {\r\n                let v = list[i];\r\n                if (item === v) {\r\n                    sItem.selected = true;\r\n                    value.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n        };\r\n    }\r\n    */\r\n    //w-100 mb-0 pl-3\r\n    //m-0 w-100\r\n    render(item:SelectableItem, index:number):JSX.Element {\r\n        let {className, key, render, onSelect} = this.list.props.item;\r\n        let {labelId, selected} = item;\r\n        return <li key={key===undefined?index:key(item)} className={classNames(className)}>\r\n            <div className=\"d-flex align-items-center px-3\">\r\n                <input ref={input=>{\r\n                        if (!input) return;\r\n                        this.input = input; input.checked = selected;\r\n                    }}\r\n                    className=\"\" type=\"checkbox\" value=\"\" id={labelId}\r\n                    defaultChecked={selected}\r\n                    onChange={(e)=>{\r\n                        this.onSelect(item, e.target.checked)} \r\n                    }/>\r\n                <label className=\"\" style={{flex:1, marginBottom:0}} htmlFor={labelId}>\r\n                    {this.renderContent(item.item, index)}\r\n                </label>\r\n            </div>\r\n        </li>\r\n    }\r\n}\r\n/*\r\n<label>\r\n<label className=\"custom-control custom-checkbox\">\r\n    <input type='checkbox' className=\"custom-control-input\"\r\n        //checked={selected}\r\n        onChange={(e)=>this.onSelect(item, e.target.checked)} />\r\n    <span className=\"custom-control-indicator\" />\r\n</label>\r\n{this.renderContent(item.item, index)}\r\n</label>\r\n*/\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {PageItems} from 'tonva-tools';\r\nimport {ListBase} from './base';\r\nimport {Clickable} from './clickable';\r\nimport {Static} from './static';\r\nimport {Selectable} from './selectable';\r\nimport \"../css/va-list.css\";\r\nimport { IObservableArray } from 'mobx';\r\n\r\ntype StaticRow = string|JSX.Element|(()=>string|JSX.Element);\r\n\r\nexport interface ListProps {\r\n    className?: string|string[];\r\n    items: any[] | IObservableArray<any> | PageItems<any>;\r\n    item: {\r\n        className?: string|string[];\r\n        render?: (item:any, index:number) => JSX.Element;\r\n        onSelect?: (item:any, isSelected:boolean, anySelected:boolean)=>void;\r\n        onClick?: (item:any)=>void;\r\n        key?: (item:any)=>string|number;\r\n    };\r\n    compare?:(item:any, selectItem)=>boolean;\r\n    selectedItems?:any[];\r\n    header?: StaticRow;\r\n    footer?: StaticRow;\r\n    before?: StaticRow;\r\n    loading?: StaticRow;\r\n    none?: StaticRow;\r\n}\r\n\r\n@observer\r\nexport class List extends React.Component<ListProps> {\r\n    private listBase: ListBase;\r\n    constructor(props:ListProps) {\r\n        super(props);\r\n        let {item} = this.props;\r\n        let {onClick, onSelect} = item;\r\n        if (onSelect !== undefined)\r\n            this.listBase = new Selectable(this);\r\n        else if (onClick !== undefined)\r\n            this.listBase = new Clickable(this);\r\n        else\r\n            this.listBase = new Static(this);\r\n    }\r\n    _$scroll = (direct: 'top'|'bottom') => {\r\n        console.log('############### items scroll to ' + direct);\r\n    }\r\n    componentWillUpdate(nextProps:ListProps, nextState, nextContext) {\r\n        this.listBase.updateProps(nextProps);\r\n    }\r\n    get selectedItems():any[] {\r\n        return this.listBase.selectedItems;\r\n    }\r\n    render() {\r\n        let {className, header, footer, before, loading, none, item, selectedItems} = this.props;\r\n        if (before === undefined) before = 'before';\r\n        if (loading === undefined) loading = 'loading';\r\n        if (none === undefined) none = 'none';        \r\n        //this.listBase.selectedItems = selectedItems;\r\n        let {isPaged, items, loading:isLoading} = this.listBase;\r\n        function staticRow(row:StaticRow, type:string) {\r\n            if (!row) return;\r\n            switch (typeof row) {\r\n                default:\r\n                case 'string': return <li className={\"va-list-\"+type}>{row}</li>;\r\n                case 'function': return <li className={\"va-list-\"+type}>{(row as ()=>string|JSX.Element)()}</li>;\r\n                case 'object': return <li>{row}</li>\r\n            } \r\n        }\r\n        let content:any;\r\n        if (items === null)\r\n            content = staticRow(before, 'before');\r\n        else if (items === undefined)\r\n            content = staticRow(loading, 'loading');\r\n        else if (items.length === 0)\r\n            content = staticRow(none, 'none');\r\n        else {\r\n            content = items.map((item, index) => {\r\n                return this.listBase.render(item, index);\r\n            });\r\n        }\r\n        return <ul className={classNames('va-list', className)}>\r\n            {staticRow(header, 'header')}\r\n            {content}\r\n            {staticRow(footer, 'footer')}\r\n        </ul>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport * as className from 'classnames';\r\nimport {ListView} from '../listView';\r\nimport {PropGridProps} from './PropGrid';\r\nimport {LabeledProp, StringProp, NumberProp, ListProp, ComponentProp} from './propView';\r\n\r\nexport abstract class PropRow {\r\n    setValues(values: any) {}\r\n    abstract render(key:string): any;\r\n}\r\n\r\nexport class PropBorder extends PropRow {\r\n    render(key:string): JSX.Element {\r\n        return <div key={'_b_' + key} className=\"\">\r\n            <div className=\"col-sm-12\">\r\n                <div style={{borderTop: '1px solid #f0f0f0'}} />\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class PropGap extends PropRow {\r\n    private param: string;\r\n    constructor(param?: string) {\r\n        super();\r\n        this.param = param;\r\n    }\r\n    render(key:string): JSX.Element {\r\n        let w: string;\r\n        switch (this.param) {\r\n            default: w = 'py-2'; break;\r\n            case '=': w = 'py-1'; break;\r\n            case '-': w = 'pb-1'; break;\r\n        }\r\n        let cn = className(w);\r\n        return <div key={'_g_' + key} className={cn} style={{backgroundColor: '#f0f0f0'}} />;\r\n    }\r\n}\r\n\r\nconst valueAlignStart = 'justify-content-start';\r\nconst valueAlignCenter = 'justify-content-center';\r\nconst valueAlignEnd = 'justify-content-end';\r\nexport abstract class LabeledPropRow extends PropRow {\r\n    protected gridProps: PropGridProps;\r\n    protected prop: LabeledProp;\r\n    protected content: any;\r\n    //protected values: any;\r\n    constructor(gridProps:PropGridProps, prop: LabeledProp) {\r\n        super();\r\n        this.gridProps = gridProps;\r\n        this.prop = prop;\r\n        //this.values = values;\r\n    }\r\n    render(key:string):any {\r\n        let {onClick, bk} = this.prop;\r\n        let cn = className({\r\n            \"cursor-pointer\": onClick !== undefined,\r\n            \"bg-white\": bk === undefined, \r\n            \"row\": true\r\n        });\r\n        return <div key={key} className={cn} onClick={onClick}>\r\n            {this.renderLabel()}\r\n            {this.renderProp()}\r\n        </div>;\r\n    }\r\n    protected renderLabel():any {\r\n        let {label} = this.prop;\r\n        if (label === undefined) return null;\r\n        return <label className=\"col-sm-2 col-form-label\">\r\n            {label}\r\n        </label>;\r\n    }\r\n    protected renderProp():any {\r\n        let {label, full} = this.prop as any;\r\n        let align, vAlign;\r\n        switch (this.gridProps.alignValue) {\r\n            case 'left': align = valueAlignStart; break;\r\n            case 'center': align = valueAlignCenter; break;\r\n            case 'right': align = valueAlignEnd; break;\r\n        }\r\n        switch (this.prop.vAlign) {\r\n            case 'top': vAlign = 'align-items-start'; break;\r\n            default:\r\n            case 'center': vAlign = 'align-items-center'; break;\r\n            case 'bottom': vAlign = 'align-items-end'; break;\r\n            case 'stretch': vAlign = 'align-items-stretch'; break;\r\n        }\r\n        let col:string;\r\n        if (full !== true)\r\n            col = label===undefined? 'col-sm-12':'col-sm-10';\r\n        else\r\n            col = 'w-100';\r\n        let cn = className(align, vAlign, col, 'd-flex');\r\n        return <div className={cn}>\r\n            {this.renderPropBody()}\r\n        </div>;\r\n    }\r\n    protected renderPropBody():any {\r\n        return <div className=\"form-control-plaintext\">\r\n            {this.renderPropContent()}\r\n        </div>;\r\n    }\r\n    protected renderPropContent():any {\r\n        return this.content;\r\n    }\r\n}\r\n\r\nexport class StringPropRow extends LabeledPropRow {\r\n    protected prop: StringProp;\r\n    setValues(values:any) {\r\n        if (values === undefined) this.content = undefined;\r\n        else this.content = values[this.prop.name];\r\n    }\r\n}\r\n\r\nexport class NumberPropRow extends LabeledPropRow {\r\n    protected prop: NumberProp;\r\n    setValues(values:any) {\r\n        if (values === undefined) this.content = undefined;\r\n        else this.content = values[this.prop.name];\r\n    }\r\n}\r\n\r\nexport class ListPropRow extends LabeledPropRow {\r\n    protected prop: ListProp;\r\n    setValues(values:any) {\r\n        if (values === undefined) this.content = undefined;\r\n        else {\r\n            let list = this.prop.list;\r\n            if (typeof list === 'string') this.content = values[list];\r\n            else this.content = undefined;\r\n        }\r\n    }\r\n    protected renderPropBody() {\r\n        let {list, row} = this.prop;\r\n        let items:any[] = typeof list === 'string'? this.content : list;\r\n        if (items === undefined) return <div/>;\r\n        // new row(item)\r\n        return <div className=\"w-100\">\r\n            {\r\n                items.map((item, index) => <React.Fragment key={index}>\r\n                    {index===0? null: <div style={{width:'100%', borderBottom:'1px solid #f0f0f0'}} />}\r\n                    {React.createElement(row, item)}\r\n                </React.Fragment>)\r\n            }\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class ComponentPropRow extends LabeledPropRow {\r\n    protected prop: ComponentProp;\r\n    protected renderPropBody() {\r\n        let {component} = this.prop;\r\n        return component;\r\n    }\r\n}\r\n\r\nexport class PropContainer extends PropRow {\r\n    render(key:string): JSX.Element {\r\n        return <div className=\"bg-white\">\r\n            <label className=\"col-sm-2 col-form-label\">\r\n                AAABBBCCC\r\n            </label>\r\n            <div className=\"col-sm-10\">\r\n                <div className=\"form-control-plaintext\">\r\n                    dsfasfa sdf asdf a\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n","import {ListViewProps} from '../listView';\r\nimport {PropGridProps} from './PropGrid';\r\nimport {PropRow, PropBorder, PropGap, PropContainer,\r\n    StringPropRow, NumberPropRow, ListPropRow, ComponentPropRow} from './row';\r\n\r\nexport interface Format {\r\n\r\n}\r\n\r\nexport interface PropBase {\r\n    onClick?: ()=>void;\r\n}\r\n\r\nexport interface LabeledProp extends PropBase {\r\n    label?: string;\r\n    bk?: string;\r\n    vAlign?: 'top'|'bottom'|'center'|'stretch';\r\n}\r\n\r\nexport interface StringProp extends LabeledProp {\r\n    type: 'string';\r\n    name: string;\r\n}\r\n\r\nexport interface NumberProp extends LabeledProp {\r\n    type: 'number';\r\n    name: string;\r\n}\r\n\r\nexport interface FormatProp extends LabeledProp {\r\n    type: 'format';\r\n    format: Format;\r\n}\r\n\r\nexport interface ListProp extends LabeledProp {\r\n    type: 'list';\r\n    list: string | any[];  // string 表示名字，否则就是值\r\n    row: new (props:any) => React.Component;\r\n}\r\n\r\nexport interface ComponentProp extends LabeledProp {\r\n    type: 'component';\r\n    full?: boolean;\r\n    component: any; //JSX.Element;\r\n}\r\n\r\nexport type Prop = StringProp | NumberProp | FormatProp | ListProp | ComponentProp | string;\r\n\r\nexport class PropView {\r\n    private gridProps:PropGridProps\r\n    private props: Prop[];\r\n    //private values:any;\r\n    private rows: PropRow[];\r\n\r\n    constructor(gridProps:PropGridProps, props:Prop[]) {\r\n        this.gridProps = gridProps;\r\n        this.props = props;\r\n        //this.values = values;\r\n        this.buildRows();\r\n    }\r\n\r\n    private buildRows() {\r\n        this.rows = [];\r\n        let isGap:boolean = true;\r\n        for (let prop of this.props) {\r\n            if (typeof prop === 'string') {\r\n                this.rows.push(new PropGap(prop));\r\n                isGap = true;\r\n            }\r\n            else {\r\n                if (!isGap) this.rows.push(new PropBorder());\r\n                let row;\r\n                switch (prop.type) {\r\n                    default: continue;\r\n                    case 'string': row = new StringPropRow(this.gridProps, prop); break;\r\n                    case 'number': row = new NumberPropRow(this.gridProps, prop); break;\r\n                    case 'list': row = new ListPropRow(this.gridProps, prop); break;\r\n                    case 'component': row = new ComponentPropRow(this.gridProps, prop); break;\r\n                }\r\n                this.rows.push(row);\r\n                isGap = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    setValues(values: any) {\r\n        for (let r of this.rows) r.setValues(values);\r\n    }\r\n\r\n    render() {\r\n        return this.rows.map((row, index) => row.render(String(index)));\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {Prop, PropView} from './propView';\r\nimport {PropContainer, PropBorder, PropGap} from './row';\r\n\r\nexport interface PropGridProps {\r\n    className?: string;\r\n    rows: Prop[];\r\n    values: any;\r\n    alignValue?: 'left'|'center'|'right';\r\n}\r\n\r\n@observer\r\nexport class PropGrid extends React.Component<PropGridProps> {\r\n/*\r\n    private propView: PropView;\r\n    constructor(props:PropGridProps) {\r\n        super(props);\r\n    }\r\n*/\r\n/*\r\n    componentWillMount() {\r\n        this.propView = new PropView(this.props.rows);\r\n        this.propView.setValues(this.props.values);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps: Readonly<PropGridProps>, nextContext: any) {\r\n        this.propView = new PropView(this.props.rows);\r\n        this.propView.setValues(nextProps.values);\r\n        this.forceUpdate();\r\n    }\r\n*/\r\n    render() {\r\n        let {className, rows, values} = this.props;\r\n        let propView = new PropView(this.props, rows);\r\n        propView.setValues(values);\r\n        let cn = classNames('container-fluid', className);\r\n        return <div className={cn}>\r\n            {propView.render()}\r\n        </div>;\r\n    }\r\n}\r\n","export * from './propView';\r\nexport * from './row';\r\nexport * from './PropGrid';\r\n","import * as React from 'react';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { ItemEdit } from './itemEdit';\r\n\r\nexport class StringItemEdit extends ItemEdit {\r\n    protected uiItem: UiTextItem;\r\n    protected async internalStart():Promise<any> {\r\n        return new Promise<any>((resolve, reject) => {\r\n            let element = React.createElement(this.page, {resolve:resolve, reject:reject});\r\n            nav.push(element,reject);\r\n        });\r\n    }\r\n\r\n    private onChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.newValue = evt.target.value;\r\n        let preValue = this.value;\r\n        this.isChanged = (this.newValue != preValue);\r\n    }\r\n\r\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\r\n        let {resolve, reject} = props;\r\n        let right = <button\r\n            className=\"btn btn-sm btn-success\"\r\n            disabled={!this.isChanged}\r\n            onClick={()=>resolve(this.newValue)}>保存</button>;\r\n        return <Page header={'更改' + this.label} right={right}>\r\n            <div className=\"m-3\">\r\n                <input type=\"text\" \r\n                    onChange={this.onChange}\r\n                    className=\"form-control\" \r\n                    defaultValue={this.value} />\r\n                {\r\n                    this.uiItem && <div className=\"small muted m-2\">{this.uiItem.placeholder}</div>\r\n                }\r\n            </div>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\r\nimport { observer } from 'mobx-react';\r\nimport { ItemEdit } from './itemEdit';\r\nimport { StringItemEdit } from './stringItemEdit';\r\nimport { ImageItemEdit } from './imageItemEdit';\r\nimport { Image } from '../image';\r\n\r\nexport interface EditProps {\r\n    className?: string;\r\n    schema: Schema;\r\n    data: any;\r\n    onItemClick?: (itemSchema: ItemSchema, uiItem: UiItem, value: any) => Promise<void>;\r\n    onItemChanged?: (itemSchema: ItemSchema, newValue:any, preValue:any) => Promise<void>;\r\n    uiSchema?: UiSchema;\r\n    sepClassName?: string;\r\n    topBorderClassName?: string;\r\n    bottomBorderClassName?: string;\r\n    rowContainerClassName?: string;\r\n}\r\n\r\n@observer\r\nexport class Edit extends React.Component<EditProps> {\r\n    private defaultSepClassName = \"border-top edit-sep-light-gray\";\r\n    private defaultRowContainerClassName = \"d-flex px-3 py-2 cursor-pointer bg-white align-items-center\";\r\n    private topBorder:JSX.Element;\r\n    private bottomBorder:JSX.Element;\r\n    private rowContainerClassName?: string;\r\n    private sep:JSX.Element;\r\n    private uiSchema: {[name:string]: UiItem};\r\n\r\n    constructor(props: EditProps) {\r\n        super(props);\r\n        let {topBorderClassName, bottomBorderClassName, sepClassName, rowContainerClassName, uiSchema} = props;\r\n        this.topBorder = <div className={topBorderClassName || this.defaultSepClassName} />;\r\n        this.bottomBorder = <div className={bottomBorderClassName || this.defaultSepClassName} />;\r\n        this.rowContainerClassName = rowContainerClassName || this.defaultRowContainerClassName;\r\n        this.sep = <div className={sepClassName || this.defaultSepClassName} />;\r\n        this.uiSchema = (uiSchema && uiSchema.items) || {};\r\n    }\r\n\r\n    render() {\r\n        let elItems:JSX.Element[] = [];\r\n        let {schema} = this.props;\r\n        let len = schema.length;\r\n\r\n        elItems.push(this.topBorder);\r\n        for (let i=0; i<len; i++) {\r\n            if (i>0) elItems.push(this.sep);\r\n            elItems.push(this.renderRow(schema[i]));\r\n        }\r\n        elItems.push(this.bottomBorder);\r\n\r\n        return <div>\r\n            {elItems.map((v, index) => <React.Fragment key={index}>{v}</React.Fragment>)}\r\n        </div>;\r\n    }\r\n\r\n    private renderRow(itemSchema: ItemSchema):JSX.Element {\r\n        let {name, type} = itemSchema;\r\n        let divValue:any;\r\n        let uiItem = this.uiSchema[name];\r\n        let label:string = (uiItem && uiItem.label) || name;\r\n        let value:any = this.props.data[name];\r\n        switch (type) {\r\n            default:\r\n                divValue = value? <b>{value}</b> : <small className=\"text-muted\">(无)</small>;\r\n                break;\r\n            case 'image':\r\n                divValue = <Image className=\"w-4c h-4c\" src={value} />;\r\n                break;\r\n        }\r\n        return <div className={this.rowContainerClassName} onClick={async ()=>await this.rowClick(itemSchema, uiItem, label, value)}>\r\n            <div className=\"w-6c\">{label}</div>\r\n            <div className=\"flex-fill d-flex justify-content-end\">{divValue}</div>\r\n            <div className=\"w-2c text-right\"><i className=\"fa fa-chevron-right\" /></div>\r\n        </div>;\r\n    }\r\n\r\n    private rowClick = async (itemSchema: ItemSchema, uiItem: UiItem, label:string, value: any) => {\r\n        let {onItemChanged, onItemClick} = this.props;\r\n        let changeValue:any;\r\n        if (onItemClick !== undefined) {\r\n            await onItemClick(itemSchema, uiItem, value);\r\n            return;\r\n        }\r\n        let itemEdit:ItemEdit = createItemEdit(itemSchema, uiItem, label, value);\r\n        try {\r\n            changeValue = await itemEdit.start();\r\n            if (changeValue != value) {\r\n                if (onItemChanged === undefined) {\r\n                    alert(`${itemSchema.name} value changed, new: ${changeValue}, pre: ${value}`);\r\n                }\r\n                else {\r\n                    await onItemChanged(itemSchema, changeValue, value);\r\n                }\r\n            }\r\n            await itemEdit.end();\r\n        }\r\n        catch (err) {\r\n            console.log('no value changed');\r\n        }\r\n    }\r\n}\r\n\r\nfunction createItemEdit(itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any):ItemEdit {\r\n    let itemEdit: new (itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any) => ItemEdit;\r\n    if (uiItem !== undefined) {\r\n        switch (uiItem.widget) {\r\n            case 'text': itemEdit = StringItemEdit; break;\r\n            case 'image': itemEdit = ImageItemEdit; break;\r\n        }\r\n    }\r\n    else {\r\n        switch (itemSchema.type) {\r\n            case 'string': itemEdit = StringItemEdit; break;\r\n            case 'image': itemEdit = ImageItemEdit; break;\r\n        }\r\n    }\r\n    if (itemEdit === undefined) return;\r\n    return new itemEdit(itemSchema, uiItem, label, value);\r\n}\r\n","export * from './edit';\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {IObservableValue, IComputedValue} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport '../css/va-row.css';\r\n\r\nexport interface ListItem {\r\n    key?: string|number;\r\n    date?: Date;\r\n    icon?: string | JSX.Element;\r\n    main?: string;\r\n    vice?: string;\r\n    middle?: string | JSX.Element;\r\n    midSize?: number;\r\n    right?: string | JSX.Element;\r\n    onClick?: () => void;\r\n    unread?: number|IComputedValue<number>;         // <0 表示red dot\r\n}\r\n\r\nexport interface ListRowProps extends ListItem {\r\n    //onClick: () => void;\r\n}\r\n\r\nexport interface ListRowState {\r\n    pressed: boolean;\r\n}\r\n\r\n@observer\r\nexport class ListRow extends React.Component<ListRowProps, ListRowState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pressed: false,\r\n        }\r\n    }\r\n    render() {\r\n        let {date, main, vice, middle, midSize, icon, unread, right, onClick} = this.props;\r\n        let header, isIcon:boolean, noteNum;\r\n        if (unread !== undefined) {\r\n            let uv:number;\r\n            if (typeof unread === 'number') uv = unread;\r\n            else uv = unread.get();\r\n                if (uv > 0)\r\n                noteNum = <b>{uv}</b>;\r\n            else if (uv < 0)\r\n                noteNum = <b className='dot' />;\r\n        }\r\n        switch (typeof icon) {\r\n            case 'object':\r\n                header = <header>{icon}{noteNum}</header>; \r\n                isIcon= false;\r\n                break;\r\n            case 'string': \r\n                header = <header className='icon'><img src={icon as string} />{noteNum}</header>;\r\n                isIcon= true; \r\n                break;\r\n        }\r\n        let mid;\r\n        if (middle !== undefined) {\r\n            switch (typeof middle) {\r\n                case 'string':\r\n                    mid = <div style={{flex:midSize}}>{middle}</div>;\r\n                    break;\r\n                default:\r\n                    mid = middle;\r\n                    break;\r\n            }\r\n        }\r\n        let footer;\r\n        if (right !== undefined) {\r\n            if (typeof right === 'string')\r\n                footer = <footer><small className=\"text-muted\">{right}</small></footer>;\r\n            else\r\n                footer = <footer>{right}</footer>;\r\n        }\r\n        let viceSpan;\r\n        if (vice !== undefined) viceSpan = <span>{vice}</span>;\r\n        let cn = classNames('va-row', {icon:isIcon, pressed: this.state.pressed}, {\"va-action\": onClick !== undefined});\r\n        return (\r\n        <li className={cn} onClick={onClick}>\r\n            {header}\r\n            <div>\r\n                <div>{main}</div>\r\n                {viceSpan}\r\n            </div>\r\n            {mid}\r\n            {footer}\r\n        </li>\r\n        );\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {ListItem, ListRow} from './listRow';\r\n\r\nexport interface ListViewProps {\r\n    className?: string;\r\n    items?: any[];\r\n    renderRow?: (item:any, index:number, ex?:any) => JSX.Element;\r\n    ex?: any;\r\n    header?: string|JSX.Element;\r\n    beforeLoad?: string|JSX.Element;\r\n    none?: string|JSX.Element;\r\n    footer?: string|JSX.Element;\r\n    itemClick?: (item:any)=>void;\r\n    converter?: (item:any)=>ListItem;\r\n}\r\n\r\n@observer\r\nexport class ListView extends React.Component<ListViewProps, null> {\r\n    render() {\r\n        let {header, items, beforeLoad, none, renderRow, className, footer, itemClick, converter} = this.props;\r\n        let cn = classNames(className, 'va-list');\r\n        let content, elHeader;\r\n        if (items === undefined)\r\n            content = beforeLoad === null? null : <li className='empty'>\r\n                {beforeLoad || '...'}\r\n            </li>;\r\n        else if (items.length === 0) {\r\n            content = (\r\n            <li className='empty'>\r\n                {\r\n                    none || '[none]'\r\n                }\r\n            </li>);\r\n        }\r\n        else if (renderRow !== undefined) {\r\n            content = items.map((item, index) => renderRow(item, index, this.props.ex));\r\n        }\r\n        else {\r\n            content = items.map((item, index) => {\r\n                let onClick = item.onClick;\r\n                if (onClick === undefined && itemClick !== undefined) \r\n                    onClick = ()=>itemClick(item);\r\n                let listItem:ListItem;\r\n                if (converter !== undefined) {\r\n                    listItem = converter(item);\r\n                    if (listItem === undefined) return null;\r\n                }\r\n                else {\r\n                    listItem = {\r\n                        ...item\r\n                    }\r\n                }\r\n                if (listItem.key === undefined) listItem.key = listItem.main;\r\n                return <ListRow onClick={onClick} {...listItem} />;\r\n            });\r\n        }\r\n        if (header !== undefined) {\r\n            if (typeof header === 'string') {\r\n                elHeader = <div className='va-list-header'>{header}</div>;\r\n            }\r\n            else {\r\n                elHeader = header;\r\n            }\r\n        }\r\n\r\n        return (\r\n        <div className={cn}>\r\n            {elHeader}\r\n            <ul>\r\n                {content}\r\n            </ul>\r\n            {footer}\r\n        </div>\r\n        )\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport { IObservableValue } from 'mobx/lib/internal';\r\n\r\nexport type TabCaption = (selected:boolean) => JSX.Element;\r\n\r\nexport interface TabProp {\r\n    name: string;\r\n    caption: TabCaption;\r\n    content: () => JSX.Element;\r\n    notify?: IObservableValue<number>;\r\n}\r\n\r\nexport interface TabsProps {\r\n    tabs: TabProp[];\r\n    size?: 'sm' | 'lg' | 'md';\r\n    tabBack?: string;\r\n    contentBack?: string;\r\n    sep?: string;\r\n    selected?: string;\r\n}\r\n\r\nclass Tab {\r\n    name: string;\r\n    @observable selected: boolean;\r\n    caption: TabCaption;\r\n    contentBuilder: ()=>JSX.Element;\r\n    notify: IObservableValue<number>;\r\n\r\n    private _content: JSX.Element;\r\n    get content(): JSX.Element {\r\n        if (this.selected !== true) return this._content;\r\n        if (this._content !== undefined) return this._content;\r\n        return this._content = this.contentBuilder();\r\n    }\r\n}\r\n\r\nexport const TabCaptionComponent = (label:string, icon:string, color:string) => <div \r\n    className={'d-flex justify-content-center align-items-center flex-column cursor-pointer ' + color}>\r\n    <div><i className={'fa fa-lg fa-' + icon} /></div>\r\n    <small>{label}</small>\r\n</div>;\r\n\r\n@observer export class Tabs extends React.Component<TabsProps> {\r\n    private size: string;\r\n    private tabBack: string;\r\n    private contentBack: string;\r\n    private sep: string;\r\n    @observable private selectedTab: Tab;\r\n    @observable private tabs: Tab[] = [];\r\n\r\n    constructor(props: TabsProps) {\r\n        super(props);\r\n        let {size, tabs, tabBack, contentBack, sep, selected} = this.props;\r\n        switch (size) {\r\n            default:\r\n            case 'md': this.size = '3.2rem'; break;\r\n            case 'sm': this.size = '4rem'; break;\r\n            case 'lg': this.size = '2.5rem'; break;\r\n        }\r\n        this.tabs.push(...tabs.map(v => {\r\n                let tab = new Tab();\r\n                tab.name = v.name;\r\n                tab.selected = false;\r\n                tab.caption = v.caption;\r\n                tab.contentBuilder = v.content;\r\n                tab.notify = v.notify;\r\n                return tab;\r\n            }\r\n        ));\r\n        this.tabBack = tabBack || 'bg-light';\r\n        this.contentBack = contentBack;\r\n        this.sep = sep || 'border-top border-gray';\r\n        if (selected !== undefined) {\r\n            this.selectedTab = this.tabs.find(v => v.name === selected);\r\n        }\r\n        if (this.selectedTab === undefined) this.selectedTab = this.tabs[0];\r\n        this.selectedTab.selected = true;\r\n    }\r\n\r\n    private tabClick = (tab:Tab) => {\r\n        this.selectedTab.selected = false;\r\n        tab.selected = true;\r\n        this.selectedTab = tab;\r\n    }\r\n\r\n    showTab(tabName: string) {\r\n        let tab = this.tabs.find(v => v.name === tabName);\r\n        if (tab === undefined) return;\r\n        if (this.selectedTab !== undefined) this.selectedTab.selected = false;\r\n        tab.selected = true;\r\n        this.selectedTab = tab;\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"tab\">\r\n            <div className={this.contentBack} style={{height: 'calc(100% - ' + this.size + ')'}}>\r\n                {this.tabs.map((v,index) => {\r\n                    let style:React.CSSProperties={\r\n                        display: v.selected===true? undefined : 'none'};\r\n                    return <div key={index} style={style}>{v.content}</div>;\r\n                })}\r\n            </div>\r\n            <div className={classNames(this.tabBack, this.sep)} style={{height: this.size}}>\r\n                {this.tabs.map((v,index) => {\r\n                    let {selected, caption, notify} = v;\r\n                    let notifyCircle:any;\r\n                    if (notify !== undefined) {\r\n                        let num = notify.get();\r\n                        if (num !== undefined) {\r\n                            if (num > 0) notifyCircle = <u>{num>99?'99+':num}</u>;\r\n                            else if (num < 0) notifyCircle = <u className=\"dot\" />;\r\n                        }\r\n                    }\r\n                    return <div key={index} className=\"\" onClick={()=>this.tabClick(v)}>\r\n                        <div className=\"align-self-center\">\r\n                            {notifyCircle}\r\n                            {caption(selected)}\r\n                        </div>\r\n                    </div>\r\n                })}\r\n            </div>\r\n        </div>\r\n    }\r\n};\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { VPage, Page, Form, ItemSchema, UiSchema, StringSchema, UiTextItem, UiPasswordItem, ButtonSchema, Edit, ImageSchema, nav, UiImageItem } from '../ui';\r\nimport userApi from './userApi';\r\n\r\nexport class EditMeInfo extends React.Component {\r\n    private schema:ItemSchema[] = [\r\n        {name:'nick', type:'string'} as StringSchema,\r\n        {name:'icon', type:'image'} as ImageSchema\r\n    ];\r\n    private uiSchema:UiSchema = {\r\n        items: {\r\n            nick: {widget:'text', label:'别名', placeholder:'好的别名更方便记忆'} as UiTextItem,\r\n            icon: {widget:'image', label:'头像'} as UiImageItem,\r\n        }\r\n    }\r\n    @observable private data:any;\r\n\r\n    constructor(props:any) {\r\n        super(props);\r\n        let {nick, icon} = nav.user;\r\n        this.data = {\r\n            nick: nick,\r\n            icon: icon,\r\n        }\r\n    }\r\n\r\n    private onItemChanged = async (itemSchema:ItemSchema, newValue:any, preValue:any) => {\r\n        let {name} = itemSchema;\r\n        await userApi.userSetProp(name, newValue);\r\n        this.data[name] = newValue;\r\n        nav.user[name] = newValue;\r\n        nav.saveLocalUser();\r\n    }\r\n\r\n    render() {\r\n        return <Page header=\"个人信息\">\r\n            <Edit schema={this.schema} uiSchema={this.uiSchema}\r\n                data={this.data}\r\n                onItemChanged={this.onItemChanged} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {FetchError} from '../fetchError';\r\nimport { refetchApi } from '../net';\r\n\r\nexport interface FetchErrorProps extends FetchError {\r\n    clearError: ()=>void\r\n}\r\n\r\nexport default class FetchErrorView extends React.Component<FetchErrorProps, null> {\r\n    private reApi = async () => {\r\n        this.props.clearError();\r\n        const {channel, url, options, resolve, reject} = this.props;\r\n        await refetchApi(channel, url, options, resolve, reject);\r\n    }\r\n    private close = async () => {\r\n        this.props.clearError();\r\n    }\r\n    render() {\r\n        let {error, url} = this.props;\r\n            //let errMsg = fetchError.errorMsg;\r\n        let errContent;\r\n        if (typeof error === 'object') {\r\n            let err = [];\r\n            for (let i in error) {\r\n                err.push(<li key={i}><label>{i}</label><div>{error[i]}</div></li>);\r\n            }\r\n            errContent = <ul>{err}</ul>;\r\n        }\r\n        else {\r\n            errContent = <div>{error}</div>;\r\n        }\r\n        return <li>\r\n            <article className=\"page-container\">\r\n                <section>\r\n                    <div  className=\"va-error\">\r\n                        <div>网络出现问题</div>\r\n                        <div>点击重新访问</div>\r\n                        <div>url: {url}</div>\r\n                        {errContent}\r\n                        <div className=\"p-3\">\r\n                            <button type='button' onClick={this.reApi}>重新API</button>\r\n                            <button type='button' onClick={this.close}>关闭</button>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </article>\r\n        </li>;\r\n    }\r\n}\r\n","import {User, Guest, Unit} from './user';\r\n\r\nexport interface ClearableData {\r\n    clear(): void;\r\n}\r\n\r\nexport class Data<T> implements ClearableData {\r\n    private name: string;\r\n    private value?: T;\r\n    constructor(name: string) {this.name = name; }\r\n    get(): T {\r\n        if (this.value !== undefined) return this.value;\r\n        let v = localStorage.getItem(this.name);\r\n        return this.value = v === null ? undefined : JSON.parse(v); \r\n    }\r\n    set(value: T) {\r\n        if (!value) { this.clear(); return; }\r\n        this.value = value;\r\n        localStorage.setItem(this.name, JSON.stringify(value));\r\n    }\r\n    clear() {\r\n        this.value = undefined;\r\n        localStorage.removeItem(this.name);\r\n    }\r\n}\r\n\r\nexport class LocalData {\r\n    user = new Data<User>('user');\r\n    guest = new Data<Guest>('guest');\r\n    unit = new Data<Unit>('unit');\r\n    homeTabCur = new Data<number>('homeTabCur');\r\n\r\n    logoutClear() {\r\n        [\r\n            this.user,\r\n            this.unit,\r\n            this.homeTabCur\r\n        ].map(d => d.clear());\r\n    }\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import {CenterApi, User, appInFrame} from 'tonva-tools';\r\nimport { string } from 'prop-types';\r\n\r\nclass MainApi extends CenterApi {\r\n    async stickies():Promise<any[]> {\r\n        return await this.get('sticky/list', {start:0, pageSize:30});\r\n    }\r\n\r\n    async ties():Promise<any[]> {\r\n        return await this.get('tie/list', {start:0, pageSize:30});\r\n    }\r\n\r\n    async apps(unit:number):Promise<any> {\r\n        return await this.get('tie/apps', {unit:unit});\r\n    }\r\n\r\n    async appApi(unit:number, app:number, apiName:string) {\r\n        return await this.get('tie/app-api', {unit:unit, app:app, apiName:apiName});\r\n    }\r\n\r\n    async userId(name:string):Promise<number> {\r\n        return await this.get('tie/user-id', {name:name});\r\n    }\r\n\r\n    async userAdminUnits():Promise<any[]> {\r\n        return await this.get('tie/user-admin-units', {});\r\n    }\r\n\r\n    async sendMessage(toUser:number, type:string, content:any) {\r\n        let {unit} = appInFrame;\r\n        let adminApp = 0;\r\n        return await this.post('tie/send-message', {\r\n            type: type, \r\n            fromUnit: unit, \r\n            fromApp: adminApp,\r\n            toUser: toUser, \r\n            content: content, \r\n        });\r\n    }\r\n\r\n    async unit(unit:number):Promise<any> {\r\n        return await this.get('unit/', {unit:unit});\r\n    }\r\n\r\n    async unitMemberCount(unit:number):Promise<number> {\r\n        return await this.get('unit/member-count', {unit:unit});\r\n    }\r\n\r\n    async unitAdmins(unit:number):Promise<any[]> {\r\n        return await this.get('unit/admins', {unit:unit});\r\n    }\r\n\r\n    async unitSetAdmin(fellow:number, unit:number, isOwner:number, isAdmin:number):Promise<any> {\r\n        return await this.post('unit/set-admin', {fellow:fellow, unit:unit, isOwner:isOwner, isAdmin:isAdmin});\r\n    }\r\n\r\n    async unitAddAdmin(user:string, unit:number, isOwner:number, isAdmin:number):Promise<any> {\r\n        return await this.post('unit/add-admin', {user:user, unit:unit, isOwner:isOwner, isAdmin:isAdmin});\r\n    }\r\n\r\n    async unitApps(unit:number):Promise<any[]> {\r\n        return await this.get('unit/apps', {unit:unit});\r\n    }\r\n\r\n    async unitAddApp(unit:number, app:number):Promise<number> {\r\n        let ret = await this.post('unit/add-app', {unit:unit, app:app});\r\n        return ret;\r\n    }\r\n\r\n    async unitDeleteApp(unit:number, app:number, deleted:number):Promise<void> {\r\n        await this.post('unit/delete-app', {unit:unit, app:app, deleted:deleted});\r\n    }\r\n\r\n    async unitChangeProp(unit:number, prop:string, value:any):Promise<void> {\r\n        await this.post('unit/change-prop', {unit:unit, prop:prop, value:value});\r\n    }\r\n\r\n    async searchApp(unit:number, key:string, pageStart:any, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/search-app', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n\r\n    async unitRoles(unit:number):Promise<any[]> {\r\n        return await this.get('unit/roles', {unit:unit});\r\n    }\r\n\r\n    async unitAddRole(unit:number, name:string, discription:string):Promise<number> {\r\n        return await this.post('unit/add-role', {unit:unit, name:name, discription:discription});\r\n    }\r\n\r\n    async unitRoleChangeProp(unit:number, role:number, prop:string, value:any):Promise<void> {\r\n        await this.post('unit/change-role-prop', {unit:unit, role:role, prop:prop, value:value});\r\n    }\r\n\r\n    async unitRoleApps(unit:number, role:number):Promise<any[]> {\r\n        return await this.get('unit/role-apps', {unit:unit, role:role});\r\n    }\r\n\r\n    async unitRoleSetApps(unit:number, role:number, apps:number[]):Promise<void> {\r\n        await this.post('unit/role-set-apps', {unit:unit, role:role, apps:apps});\r\n    }\r\n\r\n    async unitMembers(unit:number, role:number, key:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/members', {unit:unit, role:role, key, pageStart, pageSize});\r\n    }\r\n\r\n    async unitAssignMember(unit:number, member:number, assigned:string):Promise<void> {\r\n        await this.post('unit/assign-member', {unit:unit, member:member, assigned:assigned});\r\n    }\r\n\r\n    async unitMemberRoles(unit:number, member:number):Promise<any[]> {\r\n        return await this.get('unit/member-roles', {unit:unit, member:member});\r\n    }\r\n\r\n    async unitSetMemberRoles(unit:number, member:number, roles:number[]):Promise<void> {\r\n        await this.post('unit/member-set-roles', {unit:unit, member:member, roles:roles});\r\n    }\r\n\r\n    async unitUsers(unit:number, key:string, pageStart:number, pageSize:number):Promise<any> {\r\n        return await this.get('unit/users', {unit: unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitAppUsers(unit:number, key:string, pageStart:number, pageSize:number):Promise<any> {\r\n        return await this.get('unit/app-users', {unit: unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitOneAppUsers(unit:number, app:number, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/one-app-users', {unit: unit, app:app, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitOneUserApps(unit:number, user:number, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/one-user-apps', {unit: unit, user:user, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitAppEditUsers(unit:number, app:number, key:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/app-edit-users', {unit: unit, app:app, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitUserEditApps(unit:number, user:number, key:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/user-edit-apps', {unit: unit, user:user, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async bindAppUser(unit:number, app:number, user:number, bind:number):Promise<void> {\r\n        await this.post('unit/bind-app-user', {unit: unit, app:app, user:user, bind:bind});\r\n    }\r\n\r\n    async userFromKey(key:string):Promise<any> {\r\n        return await this.get('tie/user-from-key', {key:key});\r\n    }\r\n    async unitAddUser(unit:number, user:number) {\r\n        await this.post('unit/add-user', {unit:unit, user:user});\r\n    }\r\n}\r\n\r\nexport const mainApi = new MainApi('tv/', undefined);\r\n","import {CenterApi} from 'tonva-tools';\r\n\r\nclass DevApi extends CenterApi {\r\n    async uqBuilderUrl():Promise<any> {\r\n        let ret = await this.get('uq-builder-url', undefined);\r\n        return ret;\r\n    }    \r\n    async counts(unit:number):Promise<any> {\r\n        return await this.get('counts', {unit:unit});\r\n    }\r\n    async app(id:number):Promise<any> {\r\n        return await this.get('app', {id:id});\r\n    }\r\n    async uq(id:number):Promise<any> {\r\n        return await this.get('uq', {id:id});\r\n    }\r\n    async server(id:number):Promise<any> {\r\n        return await this.get('server', {id:id});\r\n    }\r\n    async uqdb(id:number):Promise<any> {\r\n        return await this.get('uqdb', {id:id});\r\n    }\r\n    async apps(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('apps', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async uqs(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('uqs', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async buses(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('buses', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async servers(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('servers', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async uqdbs(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('uqdbs', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async services(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('services', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async saveApp(values:any):Promise<number> {\r\n        return await this.post('app-save', values);\r\n    }\r\n    async saveUq(values:any):Promise<number> {\r\n        return await this.post('uq-save', values);\r\n    }\r\n    async saveBus(values:any):Promise<number> {\r\n        return await this.post('bus-save', values);\r\n    }\r\n    async saveServer(values:any):Promise<number> {\r\n        return await this.post('server-save', values);\r\n    }\r\n    async saveUqdb(values:any):Promise<number> {\r\n        return await this.post('uqdb-save', values);\r\n    }\r\n    async saveService(values:any):Promise<number> {\r\n        return await this.post('service-save', values);\r\n    }\r\n    async delApp(unit:number,id:number):Promise<void> {\r\n        return await this.post('app-del', {unit:unit, id:id});\r\n    }\r\n    async delUq(unit:number,id:number):Promise<void> {\r\n        return await this.post('uq-del', {unit:unit, id:id});\r\n    }\r\n    async delBus(unit:number,id:number):Promise<void> {\r\n        return await this.post('bus-del', {unit:unit, id:id});\r\n    }\r\n    async delServer(unit:number,id:number):Promise<void> {\r\n        return await this.post('server-del', {unit:unit, id:id});\r\n    }\r\n    async delUqdb(unit:number,id:number):Promise<void> {\r\n        return await this.post('uqdb-del', {unit:unit, id:id});\r\n    }\r\n    async delService(unit:number,id:number):Promise<void> {\r\n        return await this.post('service-del', {unit:unit, id:id});\r\n    }\r\n    async loadAppUqs(app:number):Promise<any[]> {\r\n        return await this.get('app-uqs', {app: app});\r\n    }\r\n    async appBindUq(unit:number,app:number,uqs:{id:number, access:string[]}[]):Promise<void> {\r\n        let uqsText:string;\r\n        if (uqs !== undefined) {\r\n            uqsText = uqs.map(v => String(v.id)+'|'+v.access.join(',')).join(';');\r\n        }\r\n        await this.post('app-bind-uq', {unit:unit, app:app, uqs:uqsText});\r\n    }\r\n    async searchUq(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('uq-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async getMyUqs(unit:number):Promise<any[]> {\r\n        return await this.get('my-uqs', {unit:unit});\r\n    }\r\n    async searchApp(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('app-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async searchServer(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('server-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async searchUqdb(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('uqdb-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    //async loadAppServices(unit:number, app:number):Promise<any[]> {\r\n    //    return await this.get('app-services', {unit:unit, app:app});\r\n    //}\r\n    async loadUqServices(unit:number, uq:number):Promise<any[]> {\r\n        return await this.get('uq-services', {unit:unit, uq:uq});\r\n    }\r\n    async changeServiceProp(unit:number, service:number, prop:string, value:any):Promise<number> {\r\n        return await this.post('service-change-prop', {unit:unit, service:service, prop:prop, value:value});\r\n    }\r\n    async uqGetEntities(unit:number, uq:number):Promise<any[][]> {\r\n        return await this.get('uq-get-entities', {unit:unit, uq:uq});\r\n    }\r\n}\r\n\r\nexport const devApi = new DevApi('tv/dev/', undefined);\r\n","import {observable} from 'mobx';\r\nimport {UnitAdmin} from '../model';\r\nimport {mainApi} from '../api';\r\nimport {Store} from './index';\r\n\r\nexport class Admins {\r\n    private store:Store;\r\n    constructor(store:Store) {\r\n        this.store = store;\r\n    }\r\n\r\n    @observable cur: UnitAdmin = undefined;\r\n    @observable owners: UnitAdmin[] = undefined;\r\n    @observable admins: UnitAdmin[] = undefined;\r\n    @observable fellows: UnitAdmin[] = undefined;\r\n    \r\n    async load(): Promise<void> {\r\n        let unit = this.store.unit;\r\n        if (unit === undefined) return;\r\n        if (unit.id === undefined) return;\r\n        if (this.admins !== undefined) return;\r\n        let all = await mainApi.unitAdmins(unit.id);\r\n        let owners:UnitAdmin[] = [];\r\n        let admins:UnitAdmin[] = [];\r\n        let fellows:UnitAdmin[] = [];\r\n        all.forEach(ua => {\r\n            let {isOwner, isAdmin} = ua;\r\n            if (isOwner === 0 && isAdmin === 0)\r\n                fellows.push(ua);\r\n            else {\r\n                if (isOwner === 1) owners.push(ua);\r\n                if (isAdmin === 1) admins.push(ua);\r\n            }\r\n        });\r\n        this.owners = owners;\r\n        this.admins = admins;\r\n        this.fellows = fellows;\r\n    }\r\n\r\n    private removeCur(arr: UnitAdmin[]) {\r\n        let index = arr.findIndex(v => v.id===this.cur.id);\r\n        if (index >=0) arr.splice(index, 1);\r\n    }\r\n\r\n    async unitSetAdmin(isOwner:number, isAdmin:number) {\r\n        let cur = this.cur;\r\n        cur.isOwner = isOwner;\r\n        cur.isAdmin = isAdmin;\r\n        let fellowId = cur.id, unitId = this.store.unit.id;\r\n        await mainApi.unitSetAdmin(fellowId, unitId, isOwner, isAdmin);\r\n        this.removeCur(this.owners);\r\n        this.removeCur(this.admins);\r\n        this.removeCur(this.fellows);\r\n        if (isOwner === 0 && isAdmin === 0)\r\n            this.fellows.unshift(cur);\r\n        else {\r\n            if (isOwner === 1) this.owners.unshift(cur);\r\n            if (isAdmin === 1) this.admins.unshift(cur);\r\n        }\r\n    }\r\n\r\n    async addNew(user:string, isOwner:number, isAdmin:number):Promise<UnitAdmin> {\r\n        let admin = await mainApi.unitAddAdmin(user, this.store.unit.id, isOwner, isAdmin);\r\n        if (admin !== undefined) {\r\n            let cur = this.cur = admin;\r\n            this.removeCur(this.owners);\r\n            this.removeCur(this.admins);\r\n            this.removeCur(this.fellows);\r\n            if (isOwner === 0 && isAdmin === 0)\r\n                this.fellows.unshift(cur);\r\n            else {\r\n                if (isOwner === 1) this.owners.unshift(cur);\r\n                if (isAdmin === 1) this.admins.unshift(cur);\r\n            }\r\n        }\r\n        return admin;\r\n    }\r\n}\r\n","import {observable, autorun} from 'mobx';\r\nimport _ from 'lodash';\r\nimport {devApi} from '../api';\r\nimport {DevModel, Unit} from '../model';\r\nimport {Store} from './index';\r\n\r\ninterface Counts {\r\n    uq: number;\r\n    app: number;\r\n    bus: number;\r\n    server: number;\r\n    service: number;\r\n    //uqdb: number;\r\n}\r\n\r\nexport abstract class ObjItems<T extends DevModel.ObjBase> {\r\n    protected store:Store;\r\n    protected dev:Dev;\r\n    constructor(store:Store, dev:Dev) {\r\n        this.store = store;\r\n        this.dev = dev;\r\n    }\r\n\r\n    @observable items: T[] = undefined;\r\n    @observable cur: T = undefined;\r\n\r\n    async load():Promise<void> {\r\n         let ret = await this._load();\r\n         this.items = ret;\r\n    }\r\n    protected abstract _load():Promise<T[]>;\r\n    async saveCur(item:T):Promise<boolean> {\r\n        let values:any = {};\r\n        if (this.cur !== undefined) {\r\n            _.assign(values, this.cur, item);\r\n        }\r\n        else {\r\n            _.assign(values, item);\r\n        }\r\n\r\n        values.unit = item.unit = this.store.unit.id;\r\n        let id = await this._save(values);\r\n        if (this.cur === undefined) {\r\n            if (id === 0) return false;\r\n            values.id = id;\r\n            if (this.items !== undefined) this.items.unshift(values);\r\n            this._inc();\r\n            this.cur = observable(values);\r\n        }\r\n        else {\r\n            _.assign(this.cur, values);\r\n        }\r\n        return true;\r\n    }\r\n    async save(item:T):Promise<T> {\r\n        let values:any = {};\r\n        _.assign(values, item);\r\n\r\n        values.unit = item.unit = this.store.unit.id;\r\n        let id = await this._save(values);\r\n        if (id === 0) return;\r\n        values.id = id;\r\n        return values;\r\n    }\r\n    protected abstract _save(item:T):Promise<number>;\r\n    async del():Promise<void> {\r\n        let c = this.cur;\r\n        if (c === undefined) return;\r\n        let id = c.id;\r\n        await this._del(c);\r\n        if (this.items === undefined) return;\r\n        let index = this.items.findIndex(v => v.id === id);\r\n        if (index>=0) {\r\n            this.items.splice(index, 1);\r\n            this._dec();\r\n        }\r\n    }\r\n    protected abstract _del(item:T):Promise<void>;\r\n    protected abstract _inc();\r\n    protected abstract _dec();\r\n}\r\n\r\nclass Apps extends ObjItems<DevModel.App> {\r\n    @observable uqs: DevModel.UQ[] = undefined;\r\n    @observable searchedUqs: DevModel.UQ[] = undefined;\r\n    //@observable service: DevModel.Service = null;\r\n    protected async _load() {\r\n        return await devApi.apps(this.store.unit.id);\r\n    }\r\n    protected async _save(item:DevModel.App):Promise<number> {\r\n        return await devApi.saveApp(item);\r\n    }\r\n    protected async _del(item:DevModel.App):Promise<void> {\r\n        await devApi.delApp(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.app++; }\r\n    protected _dec() { this.dev.counts.app--; }\r\n\r\n    public async loadCurUqs() {\r\n        let ret = await devApi.loadAppUqs(this.cur.id);\r\n        this.uqs = ret;\r\n    }\r\n    public async searchUq(key:string) {\r\n        this.searchedUqs = await devApi.searchUq(this.store.unit.id, key, 0, searchPageSize);\r\n    }\r\n    public async appBindUq(uqs:{id:number, access:string[]}[], bind:boolean) {\r\n        let allUqs:{id:number, access:string[]}[] = this.uqs.map(v => {\r\n            let {id, access} = v;\r\n            return {id: id, access: [access]};\r\n        });\r\n        for (let uq of uqs) {\r\n            let index = allUqs.findIndex(v => v.id === uq.id);\r\n            if (bind === true) {\r\n                if (index < 0) allUqs.unshift(uq);\r\n            }\r\n            else {\r\n                allUqs.splice(index, 1);\r\n            }\r\n        }\r\n        await devApi.appBindUq(this.store.unit.id, this.cur.id, allUqs);\r\n        for (let uq of uqs) {\r\n            let index = this.uqs.findIndex(a => a.id === uq.id);\r\n            if (index>=0) this.uqs.splice(index, 1);\r\n            if (bind === true) {\r\n                if (this.searchedUqs !== undefined) {\r\n                    let find = this.searchedUqs.find(a => a.id === uq.id);\r\n                    if (find !== undefined) this.uqs.unshift(find);\r\n                }\r\n            }\r\n            else {\r\n                // 已经删除，不需要处理\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass Uqs extends ObjItems<DevModel.UQ> {\r\n    protected async _load() {\r\n        let ret = await devApi.uqs(this.store.unit.id);\r\n        return ret;\r\n    }\r\n    protected async _save(item:DevModel.UQ):Promise<number> {\r\n        //let {access} = item;\r\n        //if (!access) access = \"*\";\r\n        //let parts = access.split(',').map(v => v.trim()).filter(v => v!=='');\r\n        //item.access = parts.join(',');\r\n        return await devApi.saveUq(item);\r\n    }\r\n    protected async _del(item:DevModel.UQ):Promise<void> {\r\n        await devApi.delUq(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.uq++; }\r\n    protected _dec() { this.dev.counts.uq--; }\r\n}\r\n\r\nclass Buses extends ObjItems<DevModel.Bus> {\r\n    protected async _load() {\r\n        let ret = await devApi.buses(this.store.unit.id);\r\n        return ret;\r\n    }\r\n    protected async _save(item:DevModel.Bus):Promise<number> {\r\n        return await devApi.saveBus(item);\r\n    }\r\n    protected async _del(item:DevModel.Bus):Promise<void> {\r\n        await devApi.delBus(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.bus++; }\r\n    protected _dec() { this.dev.counts.bus--; }\r\n}\r\n\r\nclass Servers extends ObjItems<DevModel.Server> {\r\n    protected async _load() {\r\n        return await devApi.servers(this.store.unit.id);\r\n    }\r\n    protected async _save(item:DevModel.Server):Promise<number> {\r\n        return await devApi.saveServer(item);\r\n    }\r\n    protected async _del(item:DevModel.Server):Promise<void> {\r\n        await devApi.delServer(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.server++; }\r\n    protected _dec() { this.dev.counts.server--; }\r\n}\r\n/*\r\nclass Uqdbs extends ObjItems<DevModel.Uqdb> {\r\n    protected async _load() {\r\n        return await devApi.uqdbs(this.store.unit.id);\r\n    }\r\n    protected async _save(item:DevModel.Uqdb):Promise<number> {\r\n        return await devApi.saveUqdb(item);\r\n    }\r\n    protected async _del(item:DevModel.Uqdb):Promise<void> {\r\n        await devApi.delUqdb(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.uqdb++; }\r\n    protected _dec() { this.dev.counts.uqdb--; }\r\n}\r\n*/\r\nclass Services extends ObjItems<DevModel.Service> {\r\n    protected async _load() {\r\n        return await devApi.services(this.store.unit.id);\r\n    }\r\n    protected async _save(item:DevModel.Service):Promise<number> {\r\n        return await devApi.saveService(item);\r\n    }\r\n    protected async _del(item:DevModel.Service):Promise<void> {\r\n        await devApi.delService(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.service++; }\r\n    protected _dec() { this.dev.counts.service--; }\r\n    async changeProp(prop:string, value:any):Promise<number> {\r\n        let ret = await devApi.changeServiceProp(this.store.unit.id, this.cur.id, prop, value);\r\n        switch (prop) {\r\n            case 'url': this.cur.url = value; break;\r\n            case 'server': this.cur.server = value; break;\r\n            case 'db': this.cur.db = value; break;\r\n            case 'db_type': this.cur.db_type = value; break;\r\n            case 'connection': this.cur.connection = value; break;\r\n        }\r\n        return ret;\r\n    }\r\n    async loadUqServices(uq:number):Promise<void> {\r\n        let ret = await devApi.loadUqServices(this.store.unit.id, uq);\r\n        this.items = ret[0];\r\n    }\r\n}\r\n\r\nconst searchPageSize = 50;\r\ntype Search = (unit:number,key:string,pageStart:number,pageSize:number)=>Promise<any[]>;\r\nclass SearchItems<T extends DevModel.ObjBase> {\r\n    private store:Store;\r\n    private dev:Dev;\r\n    private search:(unit:number,key:string,pageStart:number,pageSize:number)=>Promise<any[]>;\r\n\r\n    constructor(store:Store, dev:Dev, search:Search) {\r\n        this.store = store;\r\n        this.dev = dev;\r\n        this.search = search;\r\n    }\r\n\r\n    @observable items: T[] = undefined;\r\n    allLoaded: boolean = false;\r\n    private key: string;\r\n    private pageStart = 0;\r\n\r\n    async first(key:string) {\r\n        this.key = key;\r\n        this.items = undefined;\r\n        this.allLoaded = false;\r\n        this.pageStart = 0;\r\n        await this.more();\r\n    }\r\n\r\n    async more():Promise<void> {\r\n        if (this.allLoaded === true) return;\r\n        let ret = await this.search(this.store.unit.id, this.key, this.pageStart, searchPageSize);\r\n        let len = ret.length;\r\n        if (len > searchPageSize) {\r\n            this.allLoaded = false;\r\n            --len;\r\n            ret.splice(len, 1);\r\n        }\r\n        else {\r\n            this.allLoaded = true;\r\n        }\r\n        if (len > 0) {\r\n            this.pageStart = ret[len-1].id;\r\n            if (this.items === undefined)\r\n                this.items = ret;\r\n            else\r\n                this.items.push(...ret);\r\n        }\r\n        else {\r\n            this.items = [];\r\n        }\r\n    }\r\n}\r\n\r\nexport class Dev {\r\n    private store:Store;\r\n    constructor(store:Store) {\r\n        this.store = store;\r\n        this.apps = new Apps(store, this);\r\n        this.uqs = new Uqs(store, this);\r\n        this.buses = new Buses(store, this);\r\n        this.servers = new Servers(store, this);\r\n        //this.uqdbs = new Uqdbs(store, this);\r\n        this.services = new Services(store, this);\r\n        this.searchApp = new SearchItems<DevModel.App>(store, this, devApi.searchApp.bind(devApi));\r\n        this.searchUq = new SearchItems<DevModel.UQ>(store, this, devApi.searchUq.bind(devApi));\r\n        this.searchServer = new SearchItems<DevModel.Server>(store, this, devApi.searchServer.bind(devApi));\r\n    }\r\n\r\n    @observable counts:Counts = undefined;\r\n    apps:Apps = undefined;\r\n    uqs:Uqs = undefined;\r\n    buses:Buses = undefined;\r\n    servers:Servers = undefined;\r\n    //uqdbs:Uqdbs = undefined;\r\n    services:Services = undefined;\r\n\r\n    searchApp:SearchItems<DevModel.App> = undefined;\r\n    searchUq:SearchItems<DevModel.UQ> = undefined;\r\n    searchServer:SearchItems<DevModel.Server> = undefined;\r\n    searchUqdb:SearchItems<DevModel.Uqdb> = undefined;\r\n    \r\n    async loadCounts(): Promise<void> {\r\n        let {unit} = this.store;\r\n        this.counts = await devApi.counts(unit.id);\r\n    }\r\n}\r\n","import {CacheIds} from 'tonva-tools';\r\nimport {Id, Unit, DevModel} from '../model';\r\nimport {mainApi, devApi} from '../api';\r\n\r\nexport class CacheUnits extends CacheIds<Unit> {\r\n    protected async _loadIds(ids:number[]):Promise<Unit[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<Unit> {\r\n        return await mainApi.unit(id);\r\n    }\r\n}\r\n\r\nexport class CacheUqs extends CacheIds<DevModel.UQ> {\r\n    protected async _loadIds(ids:number[]):Promise<DevModel.UQ[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<DevModel.UQ> {\r\n        return await devApi.uq(id);\r\n    }\r\n}\r\n\r\nexport class CacheApps extends CacheIds<DevModel.App> {\r\n    protected async _loadIds(ids:number[]):Promise<DevModel.App[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<DevModel.App> {\r\n        return await devApi.app(id);\r\n    }\r\n}\r\n\r\nexport class CacheServers extends CacheIds<DevModel.Server> {\r\n    protected async _loadIds(ids:number[]):Promise<DevModel.Server[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<DevModel.Server> {\r\n        return await devApi.server(id);\r\n    }\r\n}\r\n","import {observable, autorun} from 'mobx';\r\nimport _ from 'lodash';\r\nimport {appInFrame, host} from 'tonva-tools';\r\nimport {mainApi, devApi} from '../api';\r\nimport {Unit, UnitApps, App, Api, UnitAdmin, UnitApp, Role, RoleMember} from '../model';\r\nimport {Admins} from './admins';\r\nimport {Dev} from './dev';\r\nimport {CacheUnits, CacheUqs, CacheApps, CacheServers} from './cacheIds';\r\n\r\nexport class Store {\r\n    private get unitId():number {return appInFrame.unit;};\r\n    admins:Admins;\r\n    dev:Dev;\r\n    cacheUnits: CacheUnits;\r\n    cacheUqs: CacheUqs;\r\n    cacheApps: CacheApps;\r\n    cacheServers: CacheServers;\r\n    uqServer: string;\r\n\r\n    @observable unit: Unit;\r\n    @observable memberCount: number;\r\n    @observable apps: UnitApp[];\r\n    @observable role:Role;\r\n    @observable roles: Role[];\r\n    @observable roleApps: UnitApp[];\r\n    @observable roleMember: RoleMember;\r\n    @observable roleMembers: RoleMember[];\r\n    @observable memberRoles: Role[];\r\n\r\n    init() {\r\n        this.unit = undefined;\r\n        this.admins = new Admins(this);\r\n        this.dev = new Dev(this);\r\n        this.cacheUnits = new CacheUnits();\r\n        this.cacheUqs = new CacheUqs();\r\n        this.cacheApps = new CacheApps();\r\n        this.cacheServers = new CacheServers();\r\n    }\r\n\r\n    logout() {\r\n        //meInFrame.app = undefined;\r\n        appInFrame.hash = undefined;\r\n        //let unitId = process.env.REACT_APP_DEBUG_UNITID;\r\n        //if (unitId !== undefined)\r\n        //    meInFrame.unit = Number(unitId);\r\n        appInFrame.unit = undefined;\r\n        this.init();\r\n        this.memberCount = undefined;\r\n        this.apps = undefined;\r\n        this.role = undefined;\r\n        this.roles = undefined;\r\n        this.roleApps = undefined;\r\n        this.roleMember = undefined;\r\n        this.roleMembers = undefined;\r\n        this.memberRoles = undefined;\r\n    }\r\n\r\n    setRole(role:Role) {\r\n        if (this.role === role) return;\r\n        this.role = role;\r\n        this.roleApps = undefined;\r\n        this.roleMember = undefined;\r\n        this.roleMembers = undefined;\r\n        this.memberRoles = undefined;\r\n    }\r\n\r\n    setRoleUser(user:RoleMember) {\r\n        if (this.roleMember === user) return;\r\n        this.roleMember = user;\r\n        this.memberRoles = undefined;\r\n    }\r\n\r\n    async unitChangeProp(prop:string, value:any):Promise<void> {\r\n        await mainApi.unitChangeProp(this.unit.id, prop, value);\r\n        this.unit[prop] = value;\r\n    }\r\n\r\n    async loadApps(): Promise<void> {\r\n        if (this.apps !== undefined) return;\r\n        this.apps = await mainApi.unitApps(this.unitId);\r\n    }\r\n\r\n    async loadUnit(): Promise<void> {\r\n        if (this.unitId === undefined) return;\r\n        let ret = await mainApi.unit(this.unitId);\r\n        this.unit = ret;\r\n        console.log(\"loadUnit unit=%s\", ret);\r\n        this.memberCount = await mainApi.unitMemberCount(this.unitId);\r\n        let uqServer = await devApi.uqBuilderUrl();\r\n        let {url, urlDebug} = uqServer;\r\n        this.uqServer = host.getUrlOrDebug(url, urlDebug);\r\n        console.log(\"uq-build: %s\", JSON.stringify(this.uqServer));\r\n    }\r\n\r\n    async stopUnitApp(appId:number): Promise<void> {\r\n        await mainApi.unitDeleteApp(this.unit.id, appId, 1);\r\n        let app = this.apps.find(v => v.id === appId);\r\n        app.inUnit = 0;\r\n    }\r\n\r\n    async restoreUnitApp(appId:number): Promise<number> {\r\n        let ret = await mainApi.unitAddApp(this.unit.id, appId);\r\n        if (ret <= 0) return ret;\r\n        let app = this.apps.find(v => v.id === appId);\r\n        app.inUnit = 1;\r\n        return 1;\r\n    }\r\n\r\n    async addUnitApp(app:UnitApp): Promise<number> {\r\n        let ret = await mainApi.unitAddApp(this.unit.id, app.id);\r\n        if (ret <= 0) return ret;\r\n        this.apps.push(app);\r\n        return 1;\r\n    }\r\n\r\n    async loadRoles(): Promise<void> {\r\n        if (this.roles !== undefined) return;\r\n        let ret = await mainApi.unitRoles(this.unit.id);\r\n        ret.forEach(v => {\r\n            switch (v.id) {\r\n                case 1: \r\n                    v.name= '访客';\r\n                    v.discription = '可以获取开放信息';\r\n                    break;\r\n                case 2: \r\n                    v.name= '普通';\r\n                    v.discription = '能访问最基本的功能';\r\n                    break;\r\n            }\r\n        });\r\n        this.roles = ret;\r\n    }\r\n\r\n    async unitAddRole(name:string, discription:string): Promise<number> {\r\n        let id = await mainApi.unitAddRole(this.unit.id, name, discription);\r\n        if (id > 0) {\r\n            this.roles.push({\r\n                id: id,\r\n                name: name,\r\n                discription: discription,\r\n                count: undefined,\r\n            });\r\n        }\r\n        return id;\r\n    }\r\n\r\n    async roleChangeProp(prop:string, value:any):Promise<void> {\r\n        await mainApi.unitRoleChangeProp(this.unit.id, this.role.id, prop, value);\r\n        this.role[prop] = value;\r\n    }\r\n\r\n    async loadRoleApps():Promise<void> {\r\n        let ret = await mainApi.unitRoleApps(this.unit.id, this.role.id);\r\n        this.roleApps = ret.map(v => {\r\n            return this.apps.find(app=>app.id === v.id);\r\n        });\r\n    }\r\n\r\n    async setRoleApps(apps:UnitApp[]) {\r\n        await mainApi.unitRoleSetApps(this.unit.id, this.role.id, apps.map(v=>v.id));\r\n        this.roleApps = apps;\r\n    }\r\n\r\n    async loadMembers():Promise<void> {\r\n        let ret = await mainApi.unitMembers(this.unit.id, this.role === undefined? 0:this.role.id, undefined, 0, 100);\r\n        this.roleMembers = ret;\r\n    }\r\n\r\n    async unitAssignMember(assigned:string):Promise<void> {\r\n        await mainApi.unitAssignMember(this.unit.id, this.roleMember.id, assigned);\r\n        this.roleMember.assigned = assigned;\r\n    }\r\n\r\n    async loadMemberRoles():Promise<void> {\r\n        let ret = await mainApi.unitMemberRoles(this.unit.id, this.roleMember.id);\r\n        let roles:Role[] = ret.map(v => {\r\n            let rId = v.id;\r\n            let role = this.roles.find(r => r.id === rId);\r\n            return _.clone(role);\r\n        });\r\n        this.memberRoles = roles;\r\n    }\r\n\r\n    async setMemberRoles(memberRoles:Role[]) {\r\n        await mainApi.unitSetMemberRoles(this.unit.id, this.roleMember.id, memberRoles.map(v=>v.id));\r\n        this.roles.forEach(role => {\r\n            let rId = role.id;\r\n            let org = this.memberRoles.find(v => v.id === rId);\r\n            let cur = memberRoles.find(v => v.id === rId);\r\n            if (org !== undefined) {\r\n                if (cur !== undefined) return;\r\n                role.count--;\r\n                return;\r\n            }\r\n            if (cur === undefined) return;\r\n            role.count++;\r\n        });\r\n        this.memberRoles = memberRoles;\r\n    }\r\n};\r\n\r\nexport const store = new Store();\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page, Context, Form, Schema, UiSchema, UiTextItem} from 'tonva-tools';\r\nimport {store} from '../store';\r\n\r\n@observer\r\nexport default class NewFellowPage extends React.Component<{isOwner:boolean, isAdmin:boolean}> {\r\n    //private form: TonvaForm;\r\n    private schema: Schema = [\r\n        {name:'user', type:'string', required:true},\r\n        {name:'submit', type:'submit'}\r\n    ]\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            user: {widget:'text', maxLength: 100, placeholder: '用户名', label: '邀请成员'} as UiTextItem,\r\n            submit: {widget:'button', label: '邀请'}\r\n        }\r\n    }\r\n    /*\r\n    private formRows:FormRow[] = [\r\n        {\r\n            label: '用户名',\r\n            field: {\r\n                type: 'string',\r\n                name: 'user',\r\n                required: true,\r\n                maxLength: 100,\r\n            },\r\n            face: {\r\n                type: 'string',\r\n                placeholder: '用户名',\r\n            }\r\n        },\r\n    ];\r\n    private schema:FormSchema = new FormSchema({\r\n        fields: [\r\n            {\r\n                type: 'string',\r\n                name: 'user',\r\n                placeholder: '用户名',\r\n                label: '邀请成员',\r\n                rules: ['required', 'maxlength:100']\r\n            },\r\n        ],\r\n        onSumit: this.onSendInvitation,\r\n        submitText: '邀请'\r\n    });\r\n    */\r\n    private onSendInvitation = async (name:string, context:Context): Promise<string> => {\r\n        let {isOwner, isAdmin} = this.props;\r\n        let user = context.form.data['user'];\r\n        let ret = await store.admins.addNew(user, isOwner?1:0, isAdmin?1:0);\r\n        if (ret !== undefined) {\r\n            nav.pop();\r\n            return;\r\n        }\r\n        return user + '没有关注小号';\r\n        /*\r\n        let msg = {a: 1, b: 'ddd'};\r\n        let toName = values['user'];\r\n        let userId = await mainApi.userId(toName);\r\n        if (userId === 0) {\r\n            this.form.formView.setError('user', '\\'' + toName +  '\\' 不存在');\r\n            return;\r\n        }\r\n        await mainApi.sendMessage(userId, 'unit-follow-invite', msg);\r\n        nav.replace(<Page header='完成' back=\"close\">\r\n            <Card>\r\n                <CardBody>\r\n                    <CardTitle>邀请成员</CardTitle>\r\n                    <CardText>已发送给{toName}，请等待确认。</CardText>\r\n                    <Button color='primary' onClick={()=>nav.back()}>完成</Button>\r\n                </CardBody>\r\n            </Card>\r\n        </Page>);\r\n        */\r\n    }\r\n    render() {\r\n        let {isOwner, isAdmin} = this.props;\r\n        let caption = isOwner? \"高管\" : \"管理员\";\r\n        return <Page header={'新增' + caption}>\r\n            <div className=\"container\">\r\n                <div className='my-4 text-info'>\r\n                    只有关注本小号的用户，才能成为{caption}\r\n                </div>\r\n                <Form schema={this.schema} uiSchema={this.uiSchema} onButtonClick={this.onSendInvitation}/>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n// <ValidForm formSchema={this.schema} />\r\n//<TonvaForm ref={f=>this.form=f} formRows={this.formRows} onSubmit={this.onSendInvitation} />\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page, Schema, UiSchema, ItemSchema, UiCheckItem, UiButton, ButtonSchema, Form, Context, Image} from 'tonva-tools';\r\nimport {store} from '../store';\r\nimport { UnitAdmin } from '../model/index';\r\n//import {mainApi} from '../api';\r\n//, ValidForm, FormSchema, FormFields, Field\r\n\r\n@observer\r\nexport default class EditAdmin extends React.Component {\r\n    private schema:Schema;\r\n    private uiSchema: UiSchema;\r\n\r\n    private async onSubmit(name:string, context:Context) {\r\n        let {isOwner, isAdmin} = context.form.data;\r\n        await store.admins.unitSetAdmin(isOwner, isAdmin);\r\n        nav.pop();\r\n    }\r\n    componentWillMount() {\r\n        let {unit} = store;\r\n        let {isRoot, isOwner, isAdmin} = unit;\r\n        let unitAdmin = store.admins.cur;\r\n        let owner:ItemSchema = {name: 'isOwner', type: 'boolean'};\r\n        let admin:ItemSchema = {name: 'isAdmin', type: 'boolean'};\r\n        let submit:ButtonSchema = {name: 'submit', type: 'submit'};\r\n        if (isRoot === 1) this.schema = [owner, admin, submit];\r\n        else if (isOwner === 1) this.schema = [admin, submit];\r\n\r\n        this.uiSchema = {\r\n            items: {\r\n                'isOwner': {widget: 'checkbox', label: '高管', trueValue:1, falseValue:0} as UiCheckItem,\r\n                'isAdmin': {widget: 'checkbox', label: '管理员', trueValue:1, falseValue:0} as UiCheckItem,\r\n                'submit': {widget: 'button', label: '提交'} as UiButton,\r\n            }\r\n        };\r\n        /*\r\n        let fields: Field[] = [];\r\n        let ownerField: Field = {\r\n            type: 'checkbox',\r\n            name: 'isOwner',\r\n            label: '高管',\r\n            defaultValue: unitAdmin.isOwner,\r\n        };\r\n        let adminField: Field = {\r\n            type: 'checkbox',\r\n            name: 'isAdmin',\r\n            label: '管理员',\r\n            defaultValue: unitAdmin.isAdmin,\r\n        };\r\n        if (isRoot === 1) {\r\n            fields.push(ownerField);\r\n            fields.push(adminField);\r\n        }\r\n        else if (isOwner === 1) {\r\n            fields.push(adminField);\r\n        }        \r\n        this.schema = new FormSchema({\r\n            fields: fields,\r\n            onSumit: this.onSubmit.bind(this),\r\n            submitText: '提交'\r\n        });\r\n        */\r\n    }\r\n    render() {\r\n        return <Page header='权限'>\r\n            <Fellow {...store.admins.cur} />\r\n            <Form schema={this.schema} uiSchema={this.uiSchema} onButtonClick={this.onSubmit} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nconst Fellow = (props:UnitAdmin) => {\r\n    let {name, nick, icon} = props;\r\n    //<img className='w-75' src={icon || process.env.REACT_APP_DEFAULT_ICON} />\r\n    return <div className=\"container\">\r\n        <div className='row my-4'>\r\n            <div className=\"col-xs-2 d-flex justify-content-end align-items-start\">\r\n                <Image className=\"w-75\" src={icon} />\r\n            </div>\r\n            <div className=\"col-xs-auto\">\r\n                <h4 className='text-dark'>{name}</h4>\r\n                <h6><small className='text-secondary'>{nick}</small></h6>\r\n                <div className='text-info'>设置成员权限</div>\r\n            </div>\r\n        </div>\r\n        <hr className='mb-4' />\r\n    </div>;\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page, Image} from 'tonva-tools';\r\nimport {UnitApps, UnitAdmin} from '../model';\r\nimport {store} from '../store';\r\nimport NewFellow from './NewFellow';\r\nimport EditAdmin from './EditAdmin';\r\nimport {LMR, Badge, List} from 'tonva-react-form';\r\n\r\n@observer\r\nexport default class AdministorsPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.admins.load();\r\n    }\r\n\r\n    onNewFellow() {\r\n        //nav.push(<NewFellow />);\r\n    }\r\n    onItemClick(ua:UnitAdmin) {\r\n        store.admins.cur = ua;\r\n        nav.push(<EditAdmin />);\r\n    }\r\n    private row = ({icon, name, nick}:UnitAdmin) => {\r\n        let content;\r\n        if (nick === undefined) {\r\n            content = <b>{name}</b>;\r\n        }\r\n        else {\r\n            content = <><b>{nick}</b> &nbsp; <small className=\"text-muted\">{name}</small></>;\r\n        }\r\n        return <LMR className=\"py-2 px-3 align-items-stretch\"\r\n            left={<Badge size=\"sm\"><Image className=\"w-3c h-3c\" src={icon} /></Badge>}>\r\n            <div className=\"px-3\">{content}</div>\r\n        </LMR>;\r\n    }\r\n\r\n    private onNewOwner = (evt: React.MouseEvent<HTMLAnchorElement>) => {\r\n        this.newAdmin(evt, true, false);\r\n    }\r\n\r\n    private onNewAdmin = (evt: React.MouseEvent<HTMLAnchorElement>) => {\r\n        this.newAdmin(evt, false, true);\r\n    }\r\n\r\n    private newAdmin(evt: React.MouseEvent<HTMLAnchorElement>, isOwner:boolean, isAdmin:boolean) {\r\n        evt.preventDefault();\r\n        nav.push(<NewFellow isOwner={isOwner} isAdmin={isAdmin} />);\r\n    } \r\n    render() {\r\n        //let n = nav;\r\n        //let me = n.local.user.get().id;\r\n        let {unit} = store;\r\n        if (unit === undefined) return;\r\n        let {owners, admins, fellows} = store.admins;\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.onNewFellow}>新增成员</button>;\r\n\r\n        let showOwners = false, showAdmins = false;\r\n        let ownersView, adminsView, fellowsView;\r\n        if (unit.isRoot === 1) {\r\n            showOwners = true;\r\n            showAdmins = true;\r\n        }\r\n        if (unit.isOwner === 1) showAdmins = true;\r\n        if (showOwners === true) {\r\n            let header = <LMR \r\n                className=\"px-3 small\"\r\n                left=\"高管\" \r\n                right={<a className=\"small\" href='#' onClick={this.onNewOwner}>新增</a>} />;\r\n            ownersView = <List \r\n                className=\"my-4\"\r\n                header={header} items={owners}\r\n                none=\"[无]\"\r\n                item={{onClick: this.onItemClick, render: this.row}}\r\n            />;\r\n        }\r\n        if (showAdmins === true) {\r\n            let header = <LMR \r\n                className=\"px-3 small\"\r\n                left=\"管理员\" \r\n                right={<a className=\"small\" href='#' onClick={this.onNewAdmin}>新增</a>} />;\r\n            adminsView = <List \r\n                className='my-4' \r\n                header={header} items={admins} \r\n                none='[无]'\r\n                item={{onClick: this.onItemClick, render: this.row}}\r\n            />;\r\n        }\r\n        return <Page header=\"管理员\" right={right}>\r\n            {ownersView}\r\n            {adminsView}\r\n            <div className=\"card mx-1 my-4\">\r\n                <div className=\"card-title\">说明</div>\r\n                <div className=\"card-body\">\r\n                    <ul style={{paddingLeft:'1em'}}>\r\n                        <li><div className=\"card-text\">管理组包括主人、高管、管理员</div></li>\r\n                        <li><div className=\"card-text\">小号主人可以增减高管</div></li>\r\n                        <li><div className=\"card-text\">高管可以增减管理员</div></li>\r\n                        <li><div className=\"card-text\">管理员可以管理小号，程序的开发，以及用户</div></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {EasyDate} from 'tonva-react-form';\r\n\r\nexport interface IdDatesProps {\r\n    date_init: Date;\r\n    date_update: Date;\r\n}\r\n\r\nexport class IdDates extends React.Component<IdDatesProps> {\r\n    render() {\r\n        let {date_init, date_update} = this.props;\r\n        return <small className=\"text-muted\">\r\n            上次修改: <EasyDate date={date_update}/>\r\n            <i className=\"fa fa-fw\" />\r\n            创建: <EasyDate date={date_init}/>\r\n        </small>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\n\r\nexport function span(\r\n    isLink:boolean,\r\n    className:string, \r\n    onClick:(evt:React.MouseEventHandler<HTMLElement>)=>void,\r\n    content:any): JSX.Element\r\n{\r\n    let tag:string;\r\n    let props:any;\r\n    if (isLink === true) {\r\n        tag = 'a';\r\n        props = {\r\n            className: classNames(className, 'cursor-pointer'),\r\n            onClick: onClick,\r\n            href: '#',\r\n        }\r\n    }\r\n    else {\r\n        tag = 'span';\r\n        props = {\r\n            className: className,\r\n        }\r\n    }\r\n    return React.createElement(tag, props, content);\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {Prop, ListProp, Media, PropGrid} from 'tonva-react-form';\r\nimport {nav, Page}  from 'tonva-tools';\r\nimport {store} from '../store';\r\nimport {span} from './span';\r\n\r\nexport interface UnitLinkProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class UnitSpan extends React.Component<UnitLinkProps> {\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<UnitInfo id={this.props.id} />);\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        if (id === undefined) return null;\r\n        let unit = store.cacheUnits.get(id);\r\n        let content;\r\n        let {name, nick, discription} = unit;\r\n        let disc = discription && '- ' + discription;\r\n        if (nick) {\r\n            content = <>{nick} &nbsp; <small className=\"text-muted\">{name} {disc}</small></>;\r\n        }\r\n        else if (name) {\r\n            content = <>{name} &nbsp; <small className=\"text-muted\">{disc}</small></>;\r\n        }\r\n        else {\r\n            content = id;\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\n@observer\r\nexport class UnitName extends React.Component<UnitLinkProps> {\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        if (id === undefined) return null;\r\n        let unit = store.cacheUnits.get(id);\r\n        let {name} = unit;\r\n        return <>{name}</>;\r\n    }\r\n}\r\n\r\nclass UnitInfo extends React.Component<UnitLinkProps> {\r\n    private rows:Prop[];\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        let unit = store.cacheUnits.get(this.props.id);\r\n        let {name, nick, icon, discription} = unit;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={icon} main={name} discription={discription} />},\r\n            '',\r\n        ];\r\n        return <Page header={'小号 - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n","export const appIcon = process.env.REACT_APP_ICON;\r\nexport const appItemIcon = process.env.REACT_APP_ITEM_ICON;\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport * as classNames from 'classnames';\r\nimport {Prop, Media, PropGrid} from 'tonva-react-form';\r\nimport {nav, Page}  from 'tonva-tools';\r\nimport {appIcon, appItemIcon} from 'consts';\r\nimport {store} from 'store';\r\nimport {IdDates} from './idDates';\r\nimport {span} from './span';\r\nimport {UnitSpan} from './unitSpan';\r\n\r\nexport interface UqLinkProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class UqSpan extends React.Component<UqLinkProps> {\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<UqInfo id={this.props.id} />);\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, className, isLink} = this.props;\r\n        let api = store.cacheUqs.get(id);\r\n        let content;\r\n        if (api === null) {\r\n            content = id;\r\n        }\r\n        else {\r\n            let {name, discription} = api;\r\n            let disc = discription && '- ' + discription;\r\n            if (name !== undefined) {\r\n                content = <React.Fragment>{name} &nbsp; <small className=\"text-muted\">{disc}</small></React.Fragment>;\r\n            }\r\n            else {\r\n                content = id;\r\n            }\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\n@observer\r\nclass UqInfo extends React.Component<UqLinkProps> {\r\n    private rows:Prop[];\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        let uq = store.cacheUqs.get(this.props.id);\r\n        let {name, discription, unit, date_init, date_update} = uq;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={name} discription={disp} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n        ];\r\n        return <Page header={'UQ - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport {Prop, ListProp, Media, PropGrid} from 'tonva-react-form';\r\nimport {nav, Page}  from 'tonva-tools';\r\nimport {store} from '../store';\r\nimport {devApi} from '../api';\r\nimport {span} from './span';\r\nimport {IdDates} from './idDates';\r\nimport {UnitSpan} from './unitSpan';\r\n\r\nexport interface AppSpanProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class AppSpan extends React.Component<AppSpanProps> {\r\n    /*\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.onClick = this.onClick.bind(this);\r\n    }\r\n    componentWillMount() {\r\n        let {id} = this.props;\r\n        store.cacheApps.get(id);\r\n    }\r\n    */\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<AppInfo id={this.props.id} />)\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        let app = store.cacheApps.get(id);\r\n        let content;\r\n        if (app === null) {\r\n            content = id;\r\n        }\r\n        else {\r\n            let {name, icon, discription} = app;\r\n            let isPublic = app.public;\r\n            let disc = discription && '- ' + discription;\r\n            if (name !== undefined) {\r\n                content = <React.Fragment>{name} &nbsp; <small className=\"text-muted\">{disc}</small></React.Fragment>;\r\n            }\r\n            else {\r\n                content = id;\r\n            }\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\n\r\n@observer\r\nclass AppInfo extends React.Component<AppSpanProps> {\r\n    private rows:Prop[];\r\n    @observable private apis:ListProp = {\r\n        label: '关联API', type: 'list', list: undefined, row: AppRow\r\n    };\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    async componentDidMount() {\r\n        this.apis.list = await devApi.loadAppUqs(this.props.id);\r\n    }\r\n    render() {\r\n        let app = store.cacheApps.get(this.props.id);\r\n        let {unit, name, discription, icon, date_init, date_update} = app;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={icon} main={name} discription={disp} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            this.apis,\r\n        ];\r\n        return <Page header={'APP - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass AppRow extends React.Component<any> {\r\n    render() {\r\n        let {name, discription} = this.props;\r\n        let disp;\r\n        if (discription) disp = <div className=\"small text-muted\">{discription}</div>;\r\n        return <div className='form-control-plaintext'>\r\n            <div>{name}</div>\r\n            {disp}\r\n        </div>\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport * as classNames from 'classnames';\r\nimport {Prop, ListProp, Media, PropGrid} from 'tonva-react-form';\r\nimport {nav, Page}  from 'tonva-tools';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {store} from '../store';\r\nimport {DevModel} from '../model';\r\nimport {devApi} from '../api';\r\nimport {span} from './span';\r\nimport {IdDates} from './idDates';\r\nimport {UnitSpan} from './unitSpan';\r\n\r\nexport interface ServerSpanProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class ServerSpan extends React.Component<ServerSpanProps> {\r\n    /*\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.onClick = this.onClick.bind(this);\r\n    }\r\n    componentWillMount() {\r\n        let {id} = this.props;\r\n        store.cacheServers.get(id);\r\n    }\r\n    */\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<ServerInfo id={this.props.id} />)\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        let server = store.cacheServers.get(id);\r\n        let content;\r\n        if (server === null) {\r\n            content = id;\r\n        }\r\n        else {\r\n            let {cloud, ip, discription} = server;\r\n            if (discription !== undefined) {\r\n                content = <React.Fragment>{discription} &nbsp; <small className=\"text-muted\">{ip}</small></React.Fragment>;\r\n            }\r\n            else {\r\n                content = id;\r\n            }\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\nclass ServerInfo extends React.Component<ServerSpanProps> {\r\n    private rows:Prop[];\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        let server = store.cacheServers.get(this.props.id);\r\n        let {discription, cloud, ip, unit, date_init, date_update} = server;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={discription} discription={ip} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            {type: 'string', label: '云服务', name: 'cloud'},\r\n        ];\r\n        return <Page header={'服务器 - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {nav, Page} from 'tonva-tools';\r\n\r\ninterface StringValueEditProps {\r\n    title: string;\r\n    onChanged:(value:any, orgValue:any)=>Promise<string|void>;\r\n    value?: any;\r\n    buttonText?: string;\r\n    info?: string;\r\n}\r\ninterface StringValueEditState {\r\n    disabled: boolean;\r\n    error?: string;\r\n}\r\n\r\nexport class StringValueEdit extends React.Component<StringValueEditProps, StringValueEditState> {\r\n    //private input:HTMLInputElement;\r\n    protected value: string;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            disabled: true,\r\n        };\r\n    }\r\n    /*\r\n    private ref = (input:HTMLInputElement) => {\r\n        if (!input) return;\r\n        input.value = this.props.value || '';\r\n        this.input = input;\r\n    }*/\r\n    private onChange = (evt:React.FormEvent<HTMLInputElement>) => {\r\n        let val = this.props.value;\r\n        let org = val && val.trim();\r\n        this.value = evt.currentTarget.value.trim();\r\n        this.setState({\r\n            disabled: org === this.value\r\n        });\r\n        \r\n    }\r\n    protected onSubmit = async () => {\r\n        let val = this.props.value;\r\n        let org = val && val.trim();\r\n        let v = this.value; // this.input.value.trim();\r\n        let onChanged = this.props.onChanged;\r\n        if (onChanged !== undefined) {\r\n            let ret = await onChanged(v, org);\r\n            if (typeof ret === 'string') {\r\n                this.setState({error: ret});\r\n                return;\r\n            }\r\n            nav.pop();\r\n        }\r\n    }\r\n    protected renderControl() {\r\n        return <input className=\"form-control w-100\" type=\"text\"\r\n            // ref={this.ref}\r\n            defaultValue={this.props.value}\r\n            onChange={this.onChange} />\r\n    }\r\n    render() {\r\n        let {title, onChanged, buttonText, info, value} = this.props;\r\n        let {disabled, error} = this.state;\r\n        let right = <button\r\n            className=\"btn btn-success btn-sm\"\r\n            disabled={disabled}\r\n            onClick={this.onSubmit}\r\n        >\r\n            {buttonText||'保存'}\r\n        </button>;\r\n        let errorDiv;\r\n        if (error !== undefined) errorDiv = <div className='text-danger'>{error}</div>;\r\n        return <Page header={title} right={right}>\r\n            <div className=\"my-4 mx-3\">\r\n                {this.renderControl()}\r\n                {errorDiv}\r\n                <small className=\"d-block mt-2 text-muted\">{info}</small>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n\r\nexport class TextValueEdit extends StringValueEdit {\r\n    /*\r\n    private textArea:HTMLTextAreaElement;\r\n    private refTextArea = (textArea:HTMLTextAreaElement) => {\r\n        if (!textArea) return;\r\n        textArea.value = this.props.value || '';\r\n        this.textArea = textArea;\r\n    }\r\n    */\r\n    private onTextAreaChange = (evt:React.FormEvent<HTMLTextAreaElement>) => {\r\n        let val = this.props.value;\r\n        let org = val && val.trim();\r\n        this.value = evt.currentTarget.value.trim();\r\n        this.setState({\r\n            disabled: org === this.value\r\n        })\r\n    }\r\n    protected renderControl() {\r\n        return <textarea className=\"form-control w-100\" rows={8}\r\n            // ref={this.refTextArea}\r\n            defaultValue={this.props.value}\r\n            onChange={this.onTextAreaChange} />\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { nav, Page } from 'tonva-tools';\r\nimport { SearchBox, List } from 'tonva-react-form';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport interface IdPickPageProps {\r\n    caption: string;\r\n    searchPlaceHolder?: string;\r\n    candidateItems: ((params:any, key:string) => Promise<any[]>) | any[];\r\n    moreCandidates: () => Promise<void>;\r\n    row: (item:any, index:number) => JSX.Element;\r\n    idFromItem: (item:any) => number;\r\n    resolve: (item?: any) => void;\r\n    params: any;\r\n}\r\n\r\n@observer\r\nexport class IdPickPage extends React.Component<IdPickPageProps> {\r\n    @observable private items:any[];\r\n\r\n    async componentDidMount() {\r\n        let {candidateItems, params} = this.props;\r\n        this.items = Array.isArray(candidateItems)? \r\n            candidateItems \r\n            : await candidateItems(params, '');\r\n    }\r\n    private itemClick = (item:any):Promise<void> => {\r\n        let {resolve, idFromItem} = this.props;\r\n        resolve(idFromItem(item));\r\n        nav.pop();\r\n        return;\r\n    }\r\n    private onSearch = async (key: string):Promise<void> => {\r\n        let {candidateItems, params} = this.props;\r\n        if (typeof candidateItems === 'function') {\r\n            let ret = await candidateItems(params, key);\r\n            this.items = ret;\r\n        }\r\n        return;\r\n    }\r\n    render() {\r\n        let {caption, row, searchPlaceHolder} = this.props;\r\n        return <Page header={caption} back=\"close\">\r\n            <div className=\"container\">\r\n                <SearchBox className=\"my-2\" \r\n                    onSearch={this.onSearch} \r\n                    placeholder={searchPlaceHolder}\r\n                    maxLength={100} />\r\n            </div>\r\n            <List items={this.items} item={{onClick:this.itemClick, render:row}} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport {SearchBox, Media, List, LMR, Badge, Prop, PropGrid, FA} from 'tonva-react-form';\r\nimport {nav, Page, PageItems} from 'tonva-tools';\r\nimport {IdDates, UnitSpan} from '../tools';\r\nimport {UnitApp, DevModel} from '../model';\r\nimport {store} from '../store';\r\nimport { devApi } from 'api';\r\n\r\n@observer\r\nexport class Info extends React.Component<{app:UnitApp, appActed?:(appId:number, inUnit:number)=>void}> {\r\n    @observable private uqAccesses: any[];\r\n    async componentWillMount() {\r\n        this.uqAccesses = await devApi.loadAppUqs(this.props.app.id);\r\n    }\r\n\r\n    private renderUqRow = (uqAccess:any, index:number):JSX.Element => {\r\n        let {name, owner, unit, discription} = uqAccess;\r\n        return <LMR className=\"py-2\" right={<small className=\"text-muted\">{discription}</small>}>\r\n            {owner} / {name}\r\n        </LMR>;\r\n    }\r\n\r\n    private act = async () => {\r\n        let {app, appActed} = this.props;\r\n        let {id, unit, inUnit} = app;\r\n        let newInUnit:number = 1;\r\n        if (inUnit === 0) {\r\n            let ret = await store.restoreUnitApp(id);\r\n            if (ret <= 0) alert('app 或者 uq 没有定义 service');\r\n        }\r\n        else if (inUnit === 1) {\r\n            await store.stopUnitApp(id);\r\n            newInUnit = 0;\r\n        }\r\n        else {\r\n            let newApp:UnitApp = _.clone(app);\r\n            newApp.id = id;\r\n            newApp.inUnit = 1;\r\n            let ret = await store.addUnitApp(newApp);\r\n            if (ret <= 0) alert('app 或者 uq 没有定义 service');\r\n        }\r\n        if (appActed !== undefined) {\r\n            appActed(id, newInUnit);\r\n        }\r\n        nav.pop();\r\n    }\r\n    render() {\r\n        let {unit, name, discription, icon, inUnit, date_init, date_update} = this.props.app;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let faName:string, text:string, color:string;\r\n        if (inUnit === 1) {\r\n            faName = 'ban';\r\n            text = '停用APP';\r\n            color = 'btn-danger';\r\n        }\r\n        else if (inUnit === 0) {\r\n            faName = 'refresh';\r\n            text = '恢复APP';\r\n            color = 'btn-success';\r\n        }\r\n        else {\r\n            faName = 'plus';\r\n            text = '启用APP';\r\n            color = 'btn-primary';\r\n        }\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <Media icon={icon} main={name} discription={disp} />\r\n            },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                label: '开发号', \r\n                component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div>\r\n            },\r\n            {\r\n                type: 'component', \r\n                label: '关联UQ', \r\n                component: <List className=\"w-100\" items={this.uqAccesses} item={{render: this.renderUqRow}} />\r\n            },\r\n            '',\r\n            '',\r\n            {\r\n                type: 'component', \r\n                bk: '', \r\n                component: <button className={classNames('btn', 'w-100', color)} onClick={this.act}>\r\n                    <FA name={faName} size=\"lg\" /> {text}\r\n                </button>\r\n            },\r\n        ];\r\n        return <div>\r\n            <PropGrid rows={rows} values={this.props} />\r\n        </div>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {IObservableArray} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport {SearchBox, Media, List, LMR, Badge, Prop, PropGrid} from 'tonva-react-form';\r\nimport {nav, Page, PageItems, Image} from 'tonva-tools';\r\nimport {mainApi} from '../api';\r\nimport {store} from '../store';\r\nimport {UnitApp} from '../model';\r\nimport {Info} from './info';\r\n\r\nclass PageApps extends PageItems<UnitApp> {\r\n    private unitId:number;\r\n    constructor(unitId:number) {\r\n        super();\r\n        this.unitId = unitId;\r\n    }\r\n    protected async load():Promise<UnitApp[]> {\r\n        return await mainApi.searchApp(this.unitId, this.param, this.pageStart, this.pageSize);\r\n    }\r\n    protected setPageStart(item:UnitApp) {\r\n        if (item === undefined)\r\n            this.pageStart = 0;\r\n        else\r\n            this.pageStart = item.id;\r\n    }\r\n}\r\n\r\n@observer\r\nexport class NewApp extends React.Component {\r\n    private apps: PageApps;\r\n    constructor(props) {\r\n        super(props);\r\n        this.apps = new PageApps(store.unit.id);\r\n    }\r\n    private onSearch = async (key:string) => {\r\n        await this.apps.first(key);\r\n    }\r\n    private appClick = (app:UnitApp) => {\r\n        nav.push(<Page header=\"App详细信息\">\r\n            <Info app={app} appActed={this.appActed}/>\r\n        </Page>);\r\n    }\r\n    private appActed = (appId:number, inUnit:number) => {\r\n        let apps = this.apps.items as IObservableArray<UnitApp>; //.replace .find(v => v.id === appId);\r\n        let app = apps.find(v => v.id === appId);\r\n        app.inUnit = inUnit;\r\n        apps.replace([app]);\r\n    }\r\n    private renderApp(app:UnitApp):JSX.Element {\r\n        let {name, discription, icon, inUnit} = app;\r\n        let right;\r\n        if (inUnit === 1)\r\n            right = <small>已启用</small>;\r\n        else if (inUnit === 0)\r\n            right = <small>已停用</small>;\r\n        return <LMR className=\"px-3 py-2\"\r\n            left={<Badge><Image src={icon} /></Badge>}\r\n            right={right}>\r\n            <div className=\"px-3\">\r\n                <div>{name}</div>\r\n                <small className=\"text-muted\">{discription}</small>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n    render() {\r\n        let items = this.apps.items;\r\n        let center = <SearchBox onSearch={this.onSearch} \r\n            className=\"w-100 mx-1\" \r\n            placeholder=\"搜索App\" \r\n            maxLength={100} />;\r\n        return <Page header={center}>\r\n            <List\r\n                items={items}\r\n                item={{onClick:this.appClick, render:this.renderApp}}\r\n                before=\"搜索App名字\" />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, FA, SubmitResult, LMR, Badge} from 'tonva-react-form';\r\nimport {nav, Page, Image} from 'tonva-tools';\r\nimport {store} from '../store';\r\nimport {NewApp} from './new';\r\nimport {UnitApp} from '../model';\r\nimport {Info} from './info';\r\n\r\n@observer\r\nexport default class AppsPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadApps();\r\n    }\r\n    private itemRender(app:UnitApp, index:number) {\r\n        let {name, discription, icon, inUnit} = app;\r\n        let ban;\r\n        if (inUnit === 0)\r\n            ban = <FA className=\"text-danger\" name='ban' />;\r\n        return <LMR className=\"px-3 py-1\"\r\n            left={<Badge><Image src={icon} /></Badge>}\r\n            right={ban}>\r\n            <div className=\"px-3\">\r\n                <div>{name}</div>\r\n                <small className=\"text-muted\">{discription}</small>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n    private appClick(app:UnitApp) {\r\n        nav.push(<Page header=\"App详细信息\">\r\n            <Info app={app} />\r\n        </Page>);\r\n    }\r\n    private newItem() {\r\n        nav.push(<NewApp {...this.props} />);\r\n    }\r\n    render() {\r\n        let right = <button \r\n            className='btn btn-secondary btn-sm' \r\n            onClick={()=>this.newItem()}><FA name=\"plus\" /></button>;\r\n        return <Page header=\"启停App\" right={right}>\r\n            <List items={store.apps} item={{render: this.itemRender, onClick: this.appClick}} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {TonvaForm, SubmitResult, FormRow} from 'tonva-react-form';\r\nimport {nav, Page, ItemSchema, StringSchema, UiSchema, Form, Context} from 'tonva-tools';\r\nimport {store} from '../store';\r\n\r\nexport class NewRole extends React.Component {\r\n    /*\r\n    private form:TonvaForm;\r\n    private formRows:FormRow[] = [\r\n        {\r\n            label: '名称', \r\n            field: {name: 'name', type: 'string', maxLength: 50, required: true},\r\n        },\r\n        {\r\n            label: '描述',\r\n            field: {name: 'discription', type: 'string', maxLength: 250},\r\n            face: {type: 'textarea'}\r\n        },\r\n    ];*/\r\n    private schema: ItemSchema[] = [\r\n        {name: 'name', type: 'string', maxLength: 5, required: true} as StringSchema,\r\n        {name: 'discription', type: 'string', maxLength: 250},\r\n        {name: 'submit', type: 'button'},\r\n    ];\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            name: {widget: 'text', label: '名称'},\r\n            discription: {widget: 'textarea', label: '描述'},\r\n            submit: {widget:'button', label: '提交'}\r\n        }\r\n    }\r\n    private onSubmit = async (buttonName:string, context: Context):Promise<SubmitResult> => {\r\n        //let {name, discription} = values;\r\n        let {name, discription} = this.context.formData;\r\n        let id = await store.unitAddRole(name, discription);\r\n        if (id <= 0) {\r\n            this.context.setError('name', '角色名 ' + name + ' 已经存在');\r\n            return;\r\n        }\r\n        nav.pop();\r\n        return;\r\n    }\r\n    render() {\r\n        return <Page header=\"新建角色\">\r\n            <Form className=\"m-3\" \r\n                schema={this.schema} uiSchema={this.uiSchema} \r\n                formData={{}}\r\n                onButtonClick={this.onSubmit} />\r\n        </Page>;\r\n    }\r\n    /*\r\n    <TonvaForm className=\"m-3\" ref={tf => this.form = tf} \r\n    formRows={this.formRows} \r\n    onSubmit={this.onSubmit} />\r\n    */\r\n}\r\n","import * as React from 'react';\r\nimport {List, LMR} from 'tonva-react-form';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {Role, UnitApp} from '../model';\r\nimport {store} from '../store';\r\nimport {mainApi} from '../api';\r\n\r\ninterface Props {\r\n    role: Role;\r\n}\r\ninterface State {\r\n    apps: UnitApp[]\r\n}\r\nexport class RoleApps extends React.Component<Props, State> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {apps:undefined};\r\n    }\r\n    async componentDidMount() {\r\n        let ret = await mainApi.unitRoleApps(store.unit.id, this.props.role.id);\r\n        this.setState({\r\n            apps: ret,\r\n        });\r\n    }\r\n    private renderRoleApp(app:UnitApp, index:number) {\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={app.name}\r\n                right={<small className=\"text-muted\">{app.discription}</small>} />\r\n    }\r\n    render() {\r\n        let {role} = this.props;\r\n        return <Page header={role.name + ' - 可用APP'}>\r\n            <List\r\n                items={this.state.apps}\r\n                item={{render: this.renderRoleApp}}\r\n                none=\"没有APP\" />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, LMR, FA, Media, Muted, PropGrid, Prop} from 'tonva-react-form';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {Role} from '../model';\r\nimport {store} from '../store';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {StringValueEdit} from '../tools';\r\nimport {RoleApps} from './roleApps';\r\n\r\n@observer\r\nexport class MemberPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadRoles();\r\n        await store.loadMemberRoles();\r\n    }\r\n    async onAssigned(value:any, orgValue:any):Promise<void> {\r\n        await store.unitAssignMember(value);\r\n    }\r\n    private renderMemberRole = (role:Role) => {\r\n        let {name, discription} = role;\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={name}\r\n                right={<Muted>{discription}</Muted>} />\r\n    }\r\n    private roleClick(role:Role) {\r\n        nav.push(<RoleApps role={role} />);\r\n    }\r\n    private setRole = () => {\r\n        nav.push(<SetRole />);\r\n    }\r\n    render() {\r\n        let roleUser = store.roleMember;\r\n        let {nick, name, assigned, icon} = roleUser;\r\n        let disp = <div>\r\n            <div><Muted>唯一名: </Muted> &nbsp; {name}</div>\r\n            <div><Muted>昵称: </Muted> &nbsp; {nick||<Muted>[无]</Muted>}</div>\r\n        </div>;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component',\r\n                component: <Media icon={icon||appIcon} main={roleUser.assigned||nick||name} discription={disp} />\r\n            },\r\n            '',\r\n            {\r\n                label: '备注名',\r\n                type: 'string',\r\n                name: 'assigned',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"修改备注名\"\r\n                    value={roleUser.assigned}\r\n                    onChanged={this.onAssigned} \r\n                    info=\"加一个备注，便于甄别用户\" />),\r\n            },\r\n            '',\r\n        ];\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.setRole}>修改角色</button>;\r\n        return <Page header=\"用户详情\" right={right}>\r\n            <PropGrid rows={rows} values={roleUser} />\r\n            <div className=\"px-3 py-1\"><small><FA name=\"angle-double-right\" /> 所属角色</small></div>\r\n            <List\r\n                items={store.memberRoles} \r\n                item={{render: this.renderMemberRole, onClick: this.roleClick}} />\r\n        </Page>\r\n    }\r\n}\r\n\r\n@observer\r\nclass SetRole extends React.Component {\r\n    private list:List;\r\n    constructor(props) {\r\n        super(props);\r\n        this.submit = this.submit.bind(this);\r\n    }\r\n    async componentDidMount() {\r\n        await store.loadRoles();\r\n        await store.loadMemberRoles();\r\n    }\r\n    private renderRole(role:Role, index:number) {\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={role.name}\r\n                right={<small className=\"text-muted\">{role.discription}</small>} />\r\n    }\r\n    private roleSelect(role:Role, isSelected: boolean, anySelected: boolean) {\r\n    }\r\n    private async submit() {\r\n        await store.setMemberRoles(this.list.selectedItems);\r\n        nav.pop();\r\n    }\r\n    render() {\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.submit}>保存</button>;\r\n        let roles = store.roles;\r\n        let memberRoles = store.memberRoles;\r\n        return <Page header=\"修改角色\" right={right}>\r\n            <List \r\n                ref={list=>this.list=list}\r\n                items={roles}\r\n                selectedItems={memberRoles}\r\n                compare={(role:Role, selectRole:Role)=>role.id === selectRole.id}\r\n                item={{render: this.renderRole, onSelect: this.roleSelect}} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, LMR, Badge, FA, Muted, SearchBox} from 'tonva-react-form';\r\nimport {nav, Page, Image} from 'tonva-tools';\r\nimport {Role, RoleMember} from '../model';\r\nimport {store} from '../store';\r\nimport {mainApi} from '../api';\r\nimport {MemberPage} from './memberPage';\r\n\r\n@observer\r\nexport class MembersPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadMembers();\r\n    }\r\n    private renderMember(member:RoleMember, index:number):JSX.Element {\r\n        return <MemberRow {...member} />;\r\n    }\r\n    private userClick(user:RoleMember) {\r\n        store.setRoleUser(user);\r\n        nav.push(<MemberPage />);\r\n    }\r\n    private onSearch() {\r\n        let role = store.role;\r\n        let roleId = role === undefined? 0:role.id;\r\n        nav.push(<MemberSearch roleId={roleId} />);\r\n    }\r\n    render() {\r\n        let right = <button className=\"btn btn-sm\" onClick={this.onSearch}><FA name=\"search\" /></button>;\r\n        return <Page header=\"用户\" right={right}>\r\n            <List items={store.roleMembers} item={{render: this.renderMember, onClick: this.userClick}} />\r\n        </Page>\r\n    }\r\n}\r\n\r\nconst MemberRow = (member:RoleMember) => {\r\n    let {nick, name, assigned, icon} = member;\r\n    let content;\r\n    if (assigned)\r\n        content = <><div><b>{assigned}</b> <Muted>{nick}</Muted></div><Muted>{name}</Muted></>;\r\n    else if (nick)\r\n        content = <><div><b>{nick}</b></div><Muted>{name}</Muted></>;\r\n    else\r\n        content = <div><b>{name}</b></div>;\r\n    return <LMR className=\"py-2 px-3 align-items-stretch\"\r\n        left={<Badge size=\"sm\"><Image src={icon} /></Badge>}>\r\n        <div className=\"px-3\">{content}</div>\r\n    </LMR>;\r\n};\r\n\r\ninterface SearchProps {\r\n    roleId: number;\r\n}\r\ninterface SearchState {\r\n    members: RoleMember[];\r\n}\r\nexport class MemberSearch extends React.Component<SearchProps, SearchState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.state = {\r\n            members: null,\r\n        }\r\n    }\r\n    private async onSearch(key:string) {\r\n        let ret = await mainApi.unitMembers(store.unit.id, this.props.roleId, key, 0, 100);\r\n        this.setState({members: ret});\r\n    }\r\n    private renderMember(member:RoleMember, index:number):JSX.Element {\r\n        return <MemberRow {...member} />;\r\n    }\r\n    private userClick(user:RoleMember) {\r\n        store.setRoleUser(user);\r\n        nav.push(<MemberPage />);\r\n    }\r\n    render() {\r\n        let header = <SearchBox className=\"w-100 mx-1\" \r\n            onSearch={this.onSearch} \r\n            maxLength={100}\r\n            placeholder=\"搜索用户\" />;\r\n        return <Page header={header}>\r\n            <List\r\n                items={this.state.members}\r\n                item={{render: this.renderMember, onClick: this.userClick}} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, Media, LMR, FA, PropGrid, Prop} from 'tonva-react-form';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {StringValueEdit} from '../tools';\r\nimport {Role, UnitApp} from '../model';\r\nimport {store} from '../store';\r\nimport {MembersPage} from './membersPage';\r\n\r\n@observer\r\nexport class RolePage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadApps();\r\n        await store.loadRoleApps();\r\n    }\r\n    private editRole() {\r\n        nav.push(<EditRole />);\r\n    }\r\n    private renderRoleApp = (app:UnitApp, index:number) => {\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={app.name}\r\n                right={<small className=\"text-muted\">{app.discription}</small>} />\r\n    }\r\n    private roleAppClick = (app:UnitApp) => {\r\n        nav.push(<RoleApps />);\r\n    }\r\n    private addRoleApp() {\r\n        nav.push(<RoleApps />);\r\n    }\r\n    private members() {\r\n        nav.push(<MembersPage />);\r\n    }\r\n    render() {\r\n        let {name, discription, count} = store.role;\r\n        let onMembersClick, membersLeft, membersRight;\r\n        if (count===undefined || count===null || count===0) {\r\n            membersLeft = <small className=\"text-muted\">无用户</small>;\r\n        }\r\n        else {\r\n            membersLeft = `共有 ${count} 用户`;\r\n            membersRight = <div><FA name=\"chevron-right\" /></div>;\r\n            onMembersClick = this.members;\r\n        }\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <Media icon={undefined} main={name} discription={discription} />,\r\n                onClick: this.editRole,\r\n            },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <LMR className=\"py-2\" left={membersLeft} right={membersRight} />,\r\n                onClick: onMembersClick,\r\n            },\r\n            '=',\r\n        ];\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={()=>this.addRoleApp()}><FA name=\"plus\" /> APP</button>;\r\n        return <Page header=\"角色\" right={right}>\r\n            <PropGrid rows={rows} values={{}} />\r\n            <div className=\"px-3 py-1\"><small><FA name=\"angle-double-right\" /> 可用APP列表</small></div>\r\n            <List\r\n                items={store.roleApps} \r\n                item={{render: this.renderRoleApp, onClick:this.roleAppClick}}\r\n                none={<small className=\"text-muted px-3 py-1\">没有APP, 点击右上角按钮选择APP</small>} />\r\n        </Page>\r\n    }\r\n}\r\n\r\n@observer\r\nclass EditRole extends React.Component {\r\n    async onNameChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.roleChangeProp('name', value);\r\n    }\r\n    async onDiscriptionChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.roleChangeProp('discription', value);\r\n    }\r\n    render() {\r\n        let role = store.role;\r\n        let {id} = role;\r\n        let isSysRole = id === 1 || id === 2;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                label: '名称', \r\n                type: 'string',\r\n                name: 'name', \r\n                onClick: isSysRole? undefined : ()=>nav.push(<StringValueEdit \r\n                    title=\"修改名称\"\r\n                    value={role.name}\r\n                    onChanged={this.onNameChanged} \r\n                    info=\"好的名字便于理解\" />)\r\n            },\r\n            {\r\n                label: '描述',\r\n                type: 'string',\r\n                name: 'discription',\r\n                onClick: isSysRole? undefined : ()=>nav.push(<StringValueEdit \r\n                    title=\"修改描述\"\r\n                    value={role.discription}\r\n                    onChanged={this.onDiscriptionChanged} \r\n                    info=\"对角色做一个说明\" />)\r\n            },\r\n        ];\r\n        return <Page header=\"修改角色信息\">\r\n            <PropGrid rows={rows} values={role} alignValue=\"right\" />\r\n        </Page>;\r\n    }\r\n}\r\n\r\n@observer\r\nclass RoleApps extends React.Component {\r\n    private list:List;\r\n    constructor(props) {\r\n        super(props);\r\n        this.submit = this.submit.bind(this);\r\n    }\r\n    async componentDidMount() {\r\n        await store.loadApps();\r\n        await store.loadRoleApps();\r\n    }\r\n    private renderApp(app:UnitApp, index:number) {\r\n        return <LMR className=\"py-1 px-2 align-items-center\"\r\n                left={app.name}\r\n                right={<small className=\"text-muted\">{app.discription}</small>} />\r\n    }\r\n    private appSelect(app:UnitApp, isSelected: boolean, anySelected: boolean) {\r\n\r\n    }\r\n    private async submit() {\r\n        await store.setRoleApps(this.list.selectedItems);\r\n        nav.pop();\r\n    }\r\n    render() {\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.submit}>保存</button>;\r\n        let apps = store.apps;\r\n        let roleApps = store.roleApps;\r\n        return <Page header=\"选择APP\" right={right}>\r\n            <List \r\n                ref={list=>this.list=list}\r\n                items={apps}\r\n                selectedItems={roleApps}\r\n                item={{render: this.renderApp, onSelect: this.appSelect}} />\r\n        </Page>;\r\n    }\r\n}","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {List, LMR, FA, Muted} from 'tonva-react-form';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {Role} from '../model';\r\nimport {store} from '../store';\r\nimport {NewRole} from './newRole';\r\nimport {RolePage} from './rolePage';\r\nimport {MembersPage} from './membersPage';\r\n\r\nconst midClassName = classNames('d-flex', 'h-100', 'align-items-center', 'px-5', 'small', 'text-muted');\r\n\r\n@observer\r\nexport class Members extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadRoles();\r\n    }\r\n    private renderRole = (role:Role, index:number) => {\r\n        let {name, discription, count} = role;\r\n        return <LMR\r\n            className=\"px-3 py-2\" \r\n            left={name}\r\n            right={String(count || '')}>\r\n            <div className={midClassName}>\r\n                {discription}\r\n            </div>\r\n        </LMR>;\r\n    }\r\n    private roleClick = (role:Role) => {\r\n        store.setRole(role);\r\n        nav.push(<RolePage />)\r\n    }\r\n    private newRole = (evt: React.MouseEvent<HTMLAnchorElement>) => {\r\n        evt.preventDefault();\r\n        nav.push(<NewRole />);\r\n    }\r\n    private allUsersClick = () => {\r\n        store.setRole(undefined);\r\n        nav.push(<MembersPage />);\r\n    }\r\n    render() {\r\n        let right = <a className=\"small\" href='#' onClick={this.newRole}>新增</a>;\r\n        let header = <LMR className=\"px-3 small bg-light\" left=\"角色\" right={right} />;\r\n        return <Page header=\"用户角色\">\r\n            <LMR\r\n                className=\"my-3 px-3 py-2 bg-white\" \r\n                left={'用户'}\r\n                right={String(store.memberCount)}\r\n                onClick={this.allUsersClick}>\r\n                <div className={midClassName}>\r\n                    设置用户角色\r\n                </div>\r\n            </LMR>\r\n            <List\r\n                header={header}\r\n                items={store.roles}\r\n                none=\"[无]\"\r\n                item={{render:this.renderRole, onClick:this.roleClick}} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Muted } from 'tonva-react-form';\r\nimport { left0 } from 'tonva-tools';\r\nimport { VMapMain, MapUI, Field, CMap }  from 'tonva-react-uq'; \r\n\r\nclass CMapTeamPerson extends CMap {\r\n    async searchOnKey(keyField:Field, param):Promise<number> {\r\n        switch (keyField.name) {\r\n            default: return await super.searchOnKey(keyField, param);\r\n            case 'post': return await this.searchOnPost(param);                \r\n        }\r\n    }\r\n\r\n    private async searchOnPost(param: any):Promise<number> {\r\n        let querySelect = this.cQuerySelect('teamPosts');\r\n        let val = await querySelect.call(param);\r\n        return val['post'].id;\r\n    }\r\n}\r\n\r\nclass VMapTeamPerson extends VMapMain {\r\n}\r\n\r\nconst ui:MapUI = {\r\n    CMap: CMapTeamPerson,\r\n    keys: [\r\n        {\r\n            content: ({name, id}:any, x:any) => <><Muted>{x.team} &nbsp; </Muted> {name}</>,\r\n            none: (x:any)=>x.noStaff,\r\n        },\r\n        {\r\n            content: ({name, id}:any, x:any) => <><Muted>{x.staff} &nbsp; </Muted> {name} &nbsp; <Muted>{x.no} {left0(id, 4)}</Muted></>,\r\n            none: (x:any)=>x.noPost,\r\n        },\r\n        {\r\n            content: ({title, id}:any, x:any) => <><Muted>{x.post} &nbsp; </Muted> {title}</>,\r\n            none: undefined,\r\n        },\r\n    ]\r\n}\r\n\r\nexport default ui;\r\n","import { UqUI } from 'tonva-react-uq';\r\nimport map from './map';\r\nimport tuid from './tuid';\r\nimport query from './query';\r\nimport res from './res';\r\n\r\nconst uqUI:UqUI = {\r\n    map: map,\r\n    tuid: tuid,\r\n    query: query,\r\n    res: res,\r\n}\r\n\r\nexport default uqUI;\r\n","import teamPerson from './teamPerson';\r\n\r\nexport default {\r\n    teamPerson: teamPerson,\r\n};\r\n","import user from './user';\r\nimport organization from './organization';\r\n\r\nexport default {\r\n    user: user,\r\n    organization: organization,\r\n};\r\n","import * as React from 'react';\r\nimport { TuidUI, CTuidSelect, CQuery, QueryPageItems } from \"tonva-react-uq\";\r\nimport { PageItems } from \"tonva-tools\";\r\n\r\nclass CUserSelect extends CTuidSelect {\r\n    protected buildPageItems():PageItems<any> {\r\n        let query:CQuery = this.cUq.cFromName('query', 'SearchUser') as CQuery;\r\n        return new QueryPageItems(query.entity);\r\n    }\r\n    idFromItem(item:any) {return item.id;}\r\n\r\n    async searchMain(key:string) {\r\n        if (this.PageItems === undefined) {\r\n            this.PageItems = this.buildPageItems();\r\n        }\r\n        if (key !== undefined) await this.PageItems.first({key: key});\r\n    }\r\n}\r\n\r\nconst ui:TuidUI = {\r\n    CTuidSelect: CUserSelect,\r\n    content: (item:any) => {return <>{item.name}</>},\r\n}\r\n\r\nexport default ui;\r\n","import * as React from 'react';\r\nimport { TuidUI } from \"tonva-react-uq\";\r\n\r\nconst ui:TuidUI = {\r\n    divs: {\r\n        post: {\r\n            content: (item:any) => {\r\n                let {title} = item;\r\n                return <>{title}</>;\r\n            },\r\n            rowContent: (item:any) => {\r\n                let {title} = item;\r\n                return <>{title}</>;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default ui;\r\n","import teamPosts from './teamPosts';\r\n\r\nexport default {\r\n    teamPosts: teamPosts,\r\n};\r\n","import * as React from 'react';\r\nimport { QueryUI } from \"tonva-react-uq\";\r\nimport { observer } from 'mobx-react';\r\n\r\nconst ui:QueryUI = {\r\n    row: observer((item:any) => {\r\n        let {post} = item;\r\n        return <div className=\"px-3 py-2\">{post.content()}</div>;\r\n    }),\r\n};\r\n\r\nexport default ui;\r\n","import CN from './zh/CN';\r\n\r\nconst res = {\r\n    zh: {\r\n        CN: CN\r\n    }\r\n};\r\n\r\nexport default res;\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\n\r\nexport default {\r\n    x: {\r\n        no: '编号',\r\n        team: '部门',\r\n        staff: '员工',\r\n        noStaff: '无员工',\r\n        post: '职位',\r\n        noPost: '无职位',\r\n        a: 'aaa',\r\n        b: {\r\n            s: 'sss',\r\n            d: ()=><span className=\"text-success\">ddd</span>,\r\n        },\r\n        c: ()=><span className=\"text-danger\">ccc</span>,\r\n    },\r\n    uq: '$UNITX',\r\n    tuid: '基础档案',\r\n    map: '对照表',\r\n    sheet: '单据',\r\n    pending: '待处理',\r\n    book: '帐',\r\n    action: '操作',\r\n    tuidNullCaption: '选择',\r\n    submit: '提交',\r\n    arrNew: '新增',\r\n    arrEdit: '保存',\r\n    entity: {\r\n        message: {\r\n            label: '消息-message',\r\n            arrNew: '新增消息',\r\n            arrEdit: '保存消息',\r\n            fields: {\r\n                fromUser: '发送人',\r\n                fromUnit: '发送部门',\r\n                type: '类型',\r\n                date: '日期',\r\n                subject: '主题',\r\n                discription: '描述',\r\n                content: '内容'\r\n            },\r\n        },\r\n        getMessage: {\r\n            label: '获取Message',\r\n            submit: '获取消息',\r\n            fields: {\r\n                msg: '消息'\r\n            }\r\n        },\r\n        newMessage: {\r\n            label: '新建消息',\r\n            fields: {\r\n                type: '类型',\r\n                subject: '主题',\r\n            },\r\n            arrs: {\r\n                to: {\r\n                    label: '发送',\r\n                    newSubmit: '新增to',\r\n                    editSumbit: '保存to',\r\n                },\r\n                cc: {\r\n                    label: '抄送',\r\n                    newSubmit: '新增cc',\r\n                    editSumbit: '保存cc',\r\n                }\r\n            }\r\n        },\r\n        sectionTeam: {\r\n            label: '大部-团队对照表',\r\n        },\r\n        teamPerson: {\r\n            label: '员工-岗位对照表',\r\n            fields: {\r\n            },\r\n            confirmDelete: _.template('真的要删除${label}吗'),\r\n        },\r\n        teamOrganization: {\r\n            label: '团队-机构对照表',\r\n        },\r\n        teamPosts: {\r\n            label: '团队-岗位对照表',\r\n        },\r\n        person: {\r\n            label: '员工',\r\n            fields: {\r\n                name: '姓名',\r\n                nick: '别名',\r\n                given: '名字',\r\n                sur: '姓',\r\n                gender: '性别',\r\n                user: '用户',\r\n            }\r\n        },\r\n        organization: {\r\n            label: '机构',\r\n            arrs: {\r\n                post: {\r\n                    label: '岗位',\r\n                }\r\n            }\r\n        },\r\n        user: {\r\n            label: '用户'\r\n        },\r\n        team: {\r\n            label: '团队',\r\n        },\r\n        section: {\r\n            label: '大部',\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { IObservableValue, observable } from 'mobx';\r\nimport { Page, VPage } from 'tonva-tools';\r\nimport { Muted, LMR, FA, List } from 'tonva-react-form';\r\nimport { COpBinding } from './cOpBinding';\r\nimport { StateTo, Sheet, Organization, Post, Team, Section, To, Entity } from './model';\r\n\r\ninterface SelectablePost {\r\n    post: Post;\r\n    selected: IObservableValue<boolean>;\r\n    teams?: SelectableTeam[];\r\n}\r\n\r\ninterface SelectableTeam {\r\n    team: Team;\r\n    selected: IObservableValue<boolean>;\r\n    sections?: SelectableSection[];\r\n}\r\n\r\ninterface SelectableSection {\r\n    section: Section;\r\n    selected: IObservableValue<boolean>;\r\n}\r\n\r\nexport class VOpBinding extends VPage<COpBinding> {\r\n    private sheet: Sheet;\r\n    private states: StateTo[];\r\n    private selectablePosts:SelectablePost[];\r\n    private sheetOpsChanged:boolean = false;\r\n\r\n    private stateClick(state:StateTo) {\r\n        let {organizations, teams, sections, posts} = this.controller;\r\n        let postTos:{[post:number]:To[]} = {};\r\n        let {tos} = state;\r\n        if (tos !== undefined) {\r\n            for (let to of tos) {\r\n                let {post} = to;\r\n                let pid = post.id;\r\n                let pto = postTos[pid];\r\n                if (pto === undefined) postTos[pid] = pto = [];\r\n                pto.push(to);\r\n            }\r\n        }\r\n        this.selectablePosts = posts.map(v => this.buildSelectablePost(v, postTos));\r\n        /*\r\n            return {\r\n                post: v,\r\n                selected: observable.box(false),\r\n                teams: [],\r\n            }\r\n        });*/\r\n        this.sheetOpsChanged = false;\r\n        this.openPage(this.stateView, state);\r\n        this.regConfirmClose(async ():Promise<boolean> => {\r\n            if (this.sheetOpsChanged === false) return true;\r\n            return confirm('未保存\\n真的不保存吗？');\r\n        });\r\n    }\r\n\r\n    private buildSelectablePost(post:Post, postTos:{[post:number]:To[]}):SelectablePost {\r\n        let pto = postTos[post.id];\r\n        let selected:boolean;\r\n        let teams:SelectableTeam[];\r\n        if (pto === undefined) {\r\n            selected = false;\r\n            teams = [];\r\n        }\r\n        else {\r\n            selected = true;\r\n            teams = this.buildSelectableTeams(post, pto);\r\n        }\r\n        let ret = {\r\n            post: post,\r\n            selected: observable.box(selected),\r\n            teams: teams,\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private buildSelectableTeams(post:Post, tos: To[]):SelectableTeam[] {\r\n        let teamTos:{[team:number]:To[]} = {};\r\n        let hasAllTeams = false;\r\n        for (let to of tos) {\r\n            let {team} = to;\r\n            let teamId;\r\n            if (team === undefined) {\r\n                teamId = 0;\r\n                hasAllTeams = true;\r\n            }\r\n            else {\r\n                teamId = team.id;\r\n            }\r\n            let tto = teamTos[teamId];\r\n            if (tto === undefined) teamTos[teamId] = tto = [];\r\n            tto.push(to);\r\n        }\r\n        let sections:Section[] = [];\r\n        let {organization} = post;\r\n        if (organization !== undefined && organization.teams !== undefined) {\r\n            for (let team of post.organization.teams) {\r\n                if (team.sections !== undefined) sections.push(...team.sections);\r\n            }\r\n        }\r\n        let teams:SelectableTeam[] = [];\r\n        let teamTo0 = teamTos[0];\r\n        let teamTo0Sections = this.buildSelectableSections(sections, teamTo0);\r\n        teams.push({\r\n            team: {\r\n                id: 0,\r\n                name: '* 所有部门',\r\n                no: undefined,\r\n                sections: sections,\r\n                organizations: undefined,\r\n            }, \r\n            selected: observable.box(teamTo0!==undefined), \r\n            sections: teamTo0Sections,\r\n        });\r\n        if (organization !== undefined && organization.teams !== undefined) {\r\n            post.organization.teams.forEach(v => {\r\n                let teamTo = teamTos[v.id];\r\n                teams.push({\r\n                    team: v,\r\n                    selected: observable.box(teamTo!==undefined),\r\n                    sections: this.buildSelectableSections(sections, teamTo),\r\n                });\r\n            });\r\n        }\r\n        if (hasAllTeams === true && tos.length === 1) {\r\n            let selectableTeam0 = teams[0];\r\n            let hasSection = false;\r\n            for (let selectableSection of selectableTeam0.sections) {\r\n                if (selectableSection.selected.get() === true) {\r\n                    hasSection = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (hasSection === false) {\r\n                selectableTeam0.selected.set(false);\r\n                selectableTeam0.sections = [];\r\n            }\r\n        }\r\n        return teams;\r\n    }\r\n\r\n    private buildSelectableSections(sections:Section[], tos: To[]):SelectableSection[] {\r\n        let selectableSections:SelectableSection[] = [];\r\n        for (let section of sections) {\r\n            selectableSections.push({\r\n                section: section,\r\n                selected: observable.box(tos && tos.find(v => v.section && section.id === v.section.id) !== undefined),\r\n            });\r\n        }\r\n        return selectableSections;\r\n    }\r\n\r\n    private renderState(stateTo:StateTo) {\r\n        let {name, caption, tos, tosText, configable} = stateTo;\r\n        let content;\r\n        if (configable === true) {\r\n            let right = <FA className=\"text-muted align-self-center\" name=\"chevron-right\" />;\r\n            let onClick = () => this.stateClick(stateTo);\r\n            let tosView = <this.stateTosView tosText={tosText} />;\r\n            content = <>\r\n                <LMR className=\"bg-white py-1 px-2 cursor-pointer\" right={right} onClick={onClick}>\r\n                    {caption}\r\n                </LMR>\r\n                {tosView}\r\n            </>\r\n        }\r\n        else {\r\n            content = <div className=\"bg-white py-1 px-2\">\r\n                {caption}\r\n            </div>;\r\n        }\r\n        return <div key={name} className=\"border border-light rounded mx-1 my-3\">\r\n            {content}\r\n        </div>\r\n    }\r\n\r\n    private stateTosView = observer(({tosText}:{tosText: IObservableValue<string[]>}) => {\r\n        let tos = tosText.get();\r\n        return <div className=\"bg-light py-1 px-2\">{\r\n            tos === undefined || tos.length === 0? <Muted>[无岗位]</Muted> :\r\n            tos.map((v,index) => {\r\n                return <span\r\n                    key={v}\r\n                    className=\"d-inline-block border bg-white rounded mr-2 my-1 py-1 px-2\">\r\n                    {v}\r\n                </span>\r\n            })\r\n        }\r\n        </div>\r\n    });\r\n\r\n    private tosTexts(tos: To[]):string[] {\r\n        return tos && tos.map((v,index) => {\r\n            let {post, team, section} = v;\r\n            let content:string = post.title;\r\n            if (team !== undefined && team.id > 0) content += ' @ ' + team.name;\r\n            if (section !== undefined) {\r\n                if (team === undefined || team.id === 0) content += ' @ * ';\r\n                content += ' / ' + section.name;\r\n            }\r\n            return content;\r\n        });\r\n    }\r\n\r\n    async open({entity, opTos}:{entity:Entity, opTos:{[op:string]:To[]}}) {\r\n        this.sheet = entity;\r\n        let {name, states} = entity;\r\n        if (states === undefined) {\r\n            let tos = opTos['$'];\r\n            this.states = [{\r\n                name: '$',\r\n                caption: '允许岗位',\r\n                configable: true,\r\n                tos: tos,\r\n                tosText: observable.box<string[]>(this.tosTexts(tos)),\r\n            }];\r\n            this.openPageElement(<Page header={name + ' - 岗位'}>\r\n                {this.states.map(v => this.renderState(v))}\r\n            </Page>);\r\n            return;\r\n        }\r\n\r\n        this.states = states.map(v => {\r\n            let prefix = v.substr(0, 1);\r\n            let caption: string | JSX.Element;\r\n            let configable: boolean;\r\n            let tos;\r\n            switch (prefix) {\r\n                case '<': caption = <>{v.substr(1)} &nbsp; <Muted>回复</Muted></>; configable = false; break;\r\n                case '#': caption = <>{v.substr(1)} &nbsp; <Muted>返初</Muted></>; configable = false; break;\r\n                case '$': \r\n                    caption = '[新开单]'; \r\n                    configable = true; \r\n                    tos = opTos[v];\r\n                    break;\r\n                default:\r\n                    caption = v;\r\n                    configable = true; \r\n                    tos = opTos[v];\r\n                    break;\r\n            }\r\n            return {\r\n                name: v,\r\n                caption: caption,\r\n                configable: configable,\r\n                tos: tos,\r\n                tosText: observable.box<string[]>(this.tosTexts(tos)),\r\n            };\r\n        });\r\n        this.openPageElement(<Page header={'单据状态对应岗位 - ' + name} >\r\n            {this.states.map(v => this.renderState(v))}\r\n        </Page>);\r\n    }\r\n\r\n    private async saveOps(stateTo: StateTo) {\r\n        let stateToName = stateTo.name;\r\n        let tos:To[] = [];\r\n        let toArr:{post:number, team:number, section:number}[] = [];\r\n        for (let sp of this.selectablePosts) {\r\n            if (sp.selected.get() === false) continue;\r\n            let postId = sp.post.id;\r\n            let teamCount = 0;\r\n            for (let st of sp.teams) {\r\n                if (st.selected.get() === false) continue;\r\n                let teamId = st.team.id;\r\n                ++teamCount;\r\n                let sectionCount = 0;\r\n                for (let ss of st.sections) {\r\n                    if (ss.selected.get() === false) continue;\r\n                    let sectionId = ss.section.id;\r\n                    ++sectionCount;\r\n                    toArr.push({\r\n                        post: postId,\r\n                        team: teamId,\r\n                        section: sectionId,\r\n                    });\r\n                    tos.push({\r\n                        post: sp.post,\r\n                        team: st.team,\r\n                        section: ss.section,\r\n                    });\r\n                }\r\n                if (sectionCount === 0) {\r\n                    toArr.push({\r\n                        post: postId,\r\n                        team: teamId,\r\n                        section: 0,\r\n                    });\r\n                    tos.push({\r\n                        post: sp.post,\r\n                        team: st.team,\r\n                        section: undefined,\r\n                    });\r\n                }\r\n            }\r\n            if (teamCount === 0) {\r\n                toArr.push({\r\n                    post: postId,\r\n                    team: 0,\r\n                    section: 0,\r\n                });\r\n                tos.push({\r\n                    post: sp.post,\r\n                    team: undefined,\r\n                    section: undefined,\r\n                });\r\n            }\r\n        }\r\n        await this.controller.saveSheetStatePosts(this.sheet, stateToName, toArr);\r\n        let state = this.states.find(v => v.name === stateToName);\r\n        state.tos = tos;\r\n        let tosTexts = this.tosTexts(tos);\r\n        state.tosText.set(tosTexts);\r\n        this.closePage();\r\n    }\r\n\r\n    private organizationRow = (item: Organization, index:number) => {\r\n        let {id, name} = item;\r\n        return <div>id:{id} name:{name}</div>;\r\n    }\r\n    private teamRow = (item: SelectableTeam, index:number) => {\r\n        return <this.observableTeamRow {...item} />;\r\n    }\r\n    private sectionRow = (item: SelectableSection, index:number) => {\r\n        return <this.observableSectionRow {...item} />;\r\n    }\r\n    private postRow = (item:SelectablePost, index:number) => {\r\n        return <this.observablePostRow {...item} />;\r\n    };\r\n    private stateView: React.SFC<StateTo> = (state:StateTo) => {\r\n        let {caption} = state;\r\n        /*\r\n        switch (state.name) {\r\n            case '-':  stateCaption = '允许岗位'; break;\r\n            case '$':  stateCaption = '[新开单]'; break;\r\n            default: stateCaption = state.name; break;\r\n        }\r\n        */\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={async ()=>await this.saveOps(state)}>保存</button>\r\n        return <Page header={`${this.sheet.name} - ${caption}`}\r\n            back=\"close\"\r\n            right={right}>\r\n            <div className=\"mx-3 my-2\">\r\n                <Muted>设置单据状态跟岗位的对应关系</Muted>\r\n            </div>\r\n            <List className=\"my-2\" \r\n                items={this.selectablePosts} \r\n                item={{render: this.postRow}} />\r\n        </Page>\r\n    }\r\n    /*\r\n    <List className=\"my-2\" header=\"Organization\" items={organizations} item={{render: this.organizationRow}} />\r\n    <List className=\"my-2\" header=\"Team\" items={teams} item={{render: this.teamRow}} />\r\n    <List className=\"my-2\" header=\"Section\" items={sections} item={{render: this.sectionRow}} />\r\n    */\r\n\r\n    private onPostSelectChanged(item:SelectablePost, checked:boolean) {\r\n        this.sheetOpsChanged = true;\r\n        let {post, selected} = item;\r\n        if (checked === true) {\r\n            let sections:Section[] = [];\r\n            let {organization} = post;\r\n            if (organization !== undefined && organization.teams !== undefined) {\r\n                for (let team of post.organization.teams) {\r\n                    if (team.sections !== undefined) sections.push(...team.sections);\r\n                }\r\n            }\r\n            item.teams.push({\r\n                team: {\r\n                    id: 0,\r\n                    name: '* 所有部门',\r\n                    no: undefined,\r\n                    sections: sections,\r\n                    organizations: undefined,\r\n                }, \r\n                selected: observable.box(false), \r\n                sections:[]\r\n            });\r\n            if (organization !== undefined && organization.teams !== undefined) {\r\n                post.organization.teams.forEach(v => {\r\n                    item.teams.push({\r\n                        team: v,\r\n                        selected: observable.box(false),\r\n                        sections: []\r\n                    });\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            item.teams.splice(0);\r\n        }\r\n        selected.set(checked);\r\n    }\r\n\r\n    private onTeamSelectChanged(item:SelectableTeam, checked:boolean) {\r\n        this.sheetOpsChanged = true;\r\n        let {team, selected} = item;\r\n        if (checked === true) {\r\n            //item.sections.push({section: undefined, selected: observable.box(false)});\r\n            team.sections.forEach(v => {\r\n                item.sections.push({\r\n                    section: v,\r\n                    selected: observable.box(false)\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            item.sections.splice(0);\r\n        }\r\n        selected.set(checked);\r\n    }\r\n\r\n    private onSectionSelectChanged(item:SelectableSection, checked:boolean) {\r\n        this.sheetOpsChanged = true;\r\n        let {section, selected} = item;\r\n        selected.set(checked);\r\n    }\r\n\r\n    private observablePostRow = observer((item:SelectablePost) => {\r\n        let {post, selected, teams} = item;\r\n        let {title} = post;\r\n        let teamsList;\r\n        let defaultSelected = selected.get();\r\n        if (defaultSelected === true) {\r\n            teamsList = <List className=\"ml-4 va-list-top-border\" items={teams} item={{render:this.teamRow}} />\r\n        }\r\n        return <div className=\"flex-column\">\r\n            <label className=\"px-3 py-2 w-100 mb-0\">\r\n                <input className=\"mr-3 align-middle\"\r\n                    type=\"checkbox\" \r\n                    defaultChecked={defaultSelected}\r\n                    onChange={(evt)=>this.onPostSelectChanged(item, evt.target.checked)} />\r\n                <Muted>岗位</Muted> &nbsp; {title}\r\n            </label>\r\n            {teamsList}\r\n        </div>;\r\n    });\r\n\r\n    private observableTeamRow = observer((item:SelectableTeam) => {\r\n        let {team, selected, sections} = item;\r\n        let {name} = team;\r\n        let teamsList;\r\n        let defaultSelected = selected.get();\r\n        if (defaultSelected === true && sections.length > 0) {\r\n            teamsList = <List className=\"ml-4 va-list-top-border\" items={sections} item={{render:this.sectionRow}} />\r\n        }\r\n        return <div className=\"flex-column\">\r\n            <label className=\"px-3 py-2 w-100 mb-0\">\r\n                <input className=\"mr-3 align-middle\"\r\n                    type=\"checkbox\" \r\n                    defaultChecked={defaultSelected}\r\n                    onChange={(evt)=>this.onTeamSelectChanged(item, evt.target.checked)} />\r\n                <Muted>部门</Muted> &nbsp; {name}\r\n            </label>\r\n            {teamsList}\r\n        </div>;\r\n    });\r\n\r\n    private observableSectionRow = observer((item:SelectableSection) => {\r\n        let {section, selected} = item;\r\n        let {name} = section;\r\n        let defaultSelected = selected.get();\r\n        return <div className=\"flex-column\">\r\n            <label className=\"px-3 py-2 w-100 mb-0\">\r\n                <input className=\"mr-3 align-middle\"\r\n                    type=\"checkbox\" \r\n                    defaultChecked={defaultSelected}\r\n                    onChange={(evt)=>this.onSectionSelectChanged(item, evt.target.checked)} />\r\n                <Muted>大部</Muted> &nbsp; {name}\r\n            </label>\r\n        </div>;\r\n    });\r\n}\r\n ","import * as React from 'react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { COpBinding } from \"./cOpBinding\";\r\nimport { Entity, EntityBlock, Uq } from './model';\r\nimport { entityIcons, CAction, CQuery } from 'tonva-react-uq';\r\nimport { List, Muted, LMR, FA } from 'tonva-react-form';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\n\r\ninterface Checked {\r\n    def: boolean;\r\n    checked: boolean;\r\n}\r\n\r\nexport class VAllPosts extends VPage<COpBinding> {\r\n    private uq: Uq;\r\n    private blocks:EntityBlock[];\r\n    private checked:{[entity:string]:Checked} = {};\r\n\r\n    @observable private isChanged:boolean = false;\r\n    async open(uq: Uq) {\r\n        this.uq = uq;\r\n        let {name, tuids, actions, maps, books, queries, histories, pendings, sheets} = this.uq;\r\n        this.blocks = [\r\n            {items: tuids, type: 'tuid'},\r\n            {items: sheets, type: 'sheet'},\r\n            {items: actions, type: 'action'},\r\n            {items: maps, type: 'map'},\r\n            {items: books, type: 'book'},\r\n            {items: queries, type: 'query'},\r\n            {items: histories, type: 'history'},\r\n            {items: pendings, type: 'pending'},\r\n        ];\r\n        let getEntityOpForAll = this.controller.cUq.cFromName('query', 'getEntityOpForAll') as CQuery;\r\n        let entityOpForAllResult = await getEntityOpForAll.entity.query({uq: this.uq.id});\r\n        let entityOpForAll:{[entity:string]:boolean} = {};\r\n        for (let eaa of entityOpForAllResult.ret) {\r\n            entityOpForAll[eaa.entity] = true;\r\n        }\r\n        for (let b of this.blocks) {\r\n            let {items} = b;\r\n            if (items === undefined) continue;\r\n            for (let item of items) {\r\n                let {name} = item;\r\n                let checked = (entityOpForAll[name] === true);\r\n                this.checked[name] = {\r\n                    def: checked,\r\n                    checked: checked,\r\n                };\r\n            }\r\n        }\r\n        this.openPage(this.pageRender);\r\n        this.regConfirmClose(async ():Promise<boolean> => {\r\n            if (this.isChanged === false) return true;\r\n            return confirm('未保存\\n真的不保存吗？');\r\n        });\r\n    }\r\n\r\n    private onCheckChanged = (entity:Entity, checked: boolean) => {\r\n        this.checked[entity.name].checked = checked;\r\n        let isChanged:boolean = false;\r\n        for (let i in this.checked) {\r\n            let {def, checked} = this.checked[i];\r\n            if (def !== checked) {\r\n                isChanged = true;\r\n                break;\r\n            }\r\n        }\r\n        this.isChanged = isChanged;\r\n    }\r\n\r\n    private saveChange = async () => {\r\n        let entities:{entity:string}[] = [];\r\n        for (let i in this.checked) {\r\n            if (this.checked[i].checked !== true) continue;\r\n            entities.push({entity: i});\r\n        }\r\n        let saveEntityOpForAll = this.controller.cUq.cFromName('action', 'saveEntityOpForAll') as CAction;\r\n        let ret = await saveEntityOpForAll.entity.submit({\r\n            uq: this.uq.id,\r\n            entities: entities,\r\n        });\r\n        this.ceasePage();\r\n        this.openPageElement(<Page header=\"所有岗位可操作\" back=\"close\">\r\n            <div className=\"p-3\">\r\n                <FA name=\"check-circle\" className=\"text-success\" /> &nbsp;\r\n                已保存\r\n            </div>\r\n        </Page>);\r\n    }\r\n\r\n    private entityRender(entity:Entity, icon:any) {\r\n        let {name} = entity;\r\n        let right = <input className=\"mr-3 align-middle\"\r\n            type=\"checkbox\" \r\n            defaultChecked={this.checked[name].def}\r\n            onChange={(evt)=>this.onCheckChanged(entity, evt.target.checked)}/>\r\n\r\n        return <LMR className=\"px-3 py-2 align-items-center\"\r\n            right={right}>\r\n            {icon} &nbsp; {name}\r\n        </LMR>;\r\n    }\r\n\r\n    private pageRender = observer(() => {\r\n        /*\r\n        let {name, tuids, actions, maps, books, queries, histories, pendings, sheets} = this.uq;\r\n        let blocks:EntityBlock[] = [\r\n            {items: tuids, type: 'tuid'},\r\n            {items: sheets, type: 'sheet'},\r\n            {items: actions, type: 'action'},\r\n            {items: maps, type: 'map'},\r\n            {items: books, type: 'book'},\r\n            {items: queries, type: 'query'},\r\n            {items: histories, type: 'history'},\r\n            {items: pendings, type: 'pending'},\r\n        ];*/\r\n        let buttonSave = this.isChanged===true? <button className=\"btn btn-sm btn-success\" onClick={this.saveChange}>保存</button> : null;\r\n        return <Page header={'所有岗位可操作'} right={buttonSave}>\r\n            <div className=\"text-muted p-3 small\">\r\n                <div style={{lineHeight:'1.8', fontWeight:'bold'}}>说明</div>\r\n                <ol className=\"pl-3\" style={{listStyleType: '1', lineHeight: '1.8'}}>\r\n                    <li >\r\n                        有些操作，默认允许所有用户可操作，可以在这里设置。\r\n                    </li>\r\n                    <li>\r\n                        比如，用户下订单。任何客户，登录进系统，都可以下单。\r\n                    </li>\r\n                    <li>\r\n                        如果每个用户都需要设置，用户会丢失，管理人员会繁琐。\r\n                    </li>\r\n                </ol>\r\n            </div>\r\n            {this.blocks.map(block => {\r\n                let {items, type} = block;\r\n                let icon = entityIcons[type];\r\n                return items && items.length>0 &&\r\n                    <List key={type}\r\n                        className=\"mt-3\"\r\n                        header={<Muted className=\"px-3 pt-1 bg-light w-100\">{this.res[type]||type}</Muted>} \r\n                        items={items} \r\n                        item={{\r\n                            render:(item:any, index:number)=>this.entityRender(item, icon), \r\n                            onClick: undefined\r\n                        }} />;\r\n            })}\r\n        </Page>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, nav } from \"tonva-tools\";\r\nimport { COpBinding } from \"./cOpBinding\";\r\nimport { Uq } from './model';\r\nimport { List, FA, SearchBox } from 'tonva-react-form';\r\nimport { observable } from 'mobx';\r\nimport { CMap, CQuery, QueryPageItems, Query, Tuid, CTuid } from 'tonva-react-uq';\r\n\r\nexport class PageUsers extends QueryPageItems {\r\n    protected setPageStart(item:any) {\r\n        this.pageStart = item === undefined? 0 : item.id;\r\n    }\r\n}\r\n\r\nexport class VFullFunction extends VPage<COpBinding> {\r\n    private uq: Uq;\r\n    @observable private users: any[] = [];\r\n    private entityOpUserFully:CMap;\r\n    private pageUsers: PageUsers;\r\n    private tuidUser: CTuid<Tuid>;\r\n    async open(uq: Uq) {\r\n        this.uq = uq;\r\n        this.entityOpUserFully = this.controller.cUq.cFromName('map', 'entityOpUserFully') as CMap;\r\n        this.tuidUser = this.controller.cUq.cFromName('tuid', 'user') as CTuid<Tuid>;\r\n        await this.entityOpUserFully.entity.loadSchema();\r\n        let all = await this.entityOpUserFully.entity.queries.all.query({_uq: this.uq.id});\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={this.addClick}><FA name=\"plus\" /></button>;\r\n        this.users.push(...all.ret);\r\n        this.openPageElement(<Page header={'全功能用户'} right={right}>\r\n            <List items={this.users} item={{render:this.renderUser, onClick: this.onStopFully}} />\r\n        </Page>);\r\n        return;\r\n    }\r\n\r\n    private onStopFully = async (item:any) => {\r\n        this.openPageElement(<Page header={'停止全功能'}>\r\n            <div className=\"p-3\">\r\n                <div><b className=\"text-danger h4\">{item.user.content()}</b> 停止全功能用户。<br/>请确认。</div>\r\n                <div className=\"p-3\">\r\n                    <button className=\"btn btn-success\" onClick={()=>this.onSumitStopFully(item)}>停止全功能</button>\r\n                    <button className=\"ml-3 btn btn-outline-danger\" onClick={this.onCancelStop}>不停</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n    }\r\n\r\n    private onSumitStopFully = async (item:any) => {\r\n        let data = {_uq: this.uq.id, arr1:[{_user: item.user.id}]};\r\n        await this.entityOpUserFully.entity.actions.del.submit(data);\r\n        let index = this.users.findIndex(v => v === item);\r\n        if (index >= 0) this.users.splice(index, 1);\r\n        this.closePage();\r\n    }\r\n\r\n    private onCancelStop = () => this.closePage();\r\n\r\n    private addClick = async () => {\r\n        let user = await this.controller.callSearchUser(this.uq);\r\n        this.onUserSelected(user);\r\n        /*\r\n        let searchUser = this.controller.cUq.cFromName('query', 'SearchUser') as CQuery;\r\n        this.pageUsers = new PageUsers(searchUser.entity);\r\n        this.openPage(this.usersView);\r\n        */\r\n    }\r\n\r\n    private renderUser = (item:any, index:number) => {\r\n        return <div className=\"px-3 py-2\">{item.user.content()}</div>;\r\n    }\r\n\r\n    private onSearch = async (key:string) => {\r\n        await this.pageUsers.first({key: key});\r\n    }\r\n    private onSetFully = async (item:any) => {\r\n        await this.entityOpUserFully.entity.actions.add.submit({_uq: this.uq.id, arr1:[{_user: item.id}]});\r\n        this.tuidUser.entity.useId(item.id);\r\n        let row = {\r\n            uq: this.uq.id,\r\n            user: this.tuidUser.entity.boxId(item.id),\r\n        }\r\n        this.users.push(row);\r\n        this.closePage(2);\r\n    }\r\n    private onCancelFully = () => {this.backPage()}\r\n    private onUserSelected = (item:any) => {\r\n        this.openPageElement(<Page header=\"确认\">\r\n            <div className=\"p-3\">\r\n                <div><b className=\"text-danger h4\">{item.name}</b> 将设置为全功能用户。只有系统管理员或者测试人员才需要全功能，可以操作所有数据。<br/>请确认。</div>\r\n                <div className=\"p-3\">\r\n                    <button className=\"btn btn-success\" onClick={()=>this.onSetFully(item)}>设置为全功能用户</button>\r\n                    <button className=\"ml-3 btn btn-outline-danger\" onClick={this.onCancelFully}>取消</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n    }\r\n    private renderSelectUser = (item:any, index:number) => {\r\n        return <div className=\"px-3 py-2\">{JSON.stringify(item)}</div>;\r\n    }\r\n    private usersView = () => {\r\n        let search = <SearchBox className=\"w-100\" onSearch={this.onSearch} placeholder=\"选择用户\" />;\r\n        return <Page header={search}>            \r\n            <List\r\n                before=\"搜索用户名\"\r\n                items={this.pageUsers} \r\n                item={{render: this.renderSelectUser, onClick:this.onUserSelected}} />\r\n        </Page>;\r\n    };\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { VPage, Page, PageItems } from \"tonva-tools\";\r\nimport { SearchBox, List } from 'tonva-react-form';\r\nimport { centerApi } from 'tonva-react-uq';\r\nimport { COpBinding } from \"./cOpBinding\";\r\n\r\nexport class VSearchUser extends VPage<COpBinding> {\r\n    private unit:number;\r\n    private pageUsers = new PageUsers();\r\n\r\n    private onUserClick = (item:any) => {\r\n        this.closePage();\r\n        this.returnCall(item);\r\n    }\r\n    private onSearch = async (key:string) => {\r\n        await this.pageUsers.first({key: key, unit:this.unit, role:undefined});\r\n    }\r\n    private renderSelectUser = (item:any, index:number) => {\r\n        return <div className=\"px-3 py-2\">{JSON.stringify(item)}</div>;\r\n    }\r\n    async open(unit: number) {\r\n        this.unit = unit;\r\n        let search = <SearchBox className=\"w-100\" onSearch={this.onSearch} placeholder=\"选择用户\" />;\r\n        this.openPageElement(<Page header={search}>\r\n            <List\r\n                before=\"搜索用户名\"\r\n                items={this.pageUsers}\r\n                item={{render: this.renderSelectUser, onClick:this.onUserClick}} />\r\n        </Page>);\r\n    }\r\n}\r\n\r\nclass PageUsers extends PageItems<any> {\r\n    protected async load(param:{key:string, unit:number, role:number}, pageStart: any, pageSize: number): Promise<any[]> {\r\n        let {unit, role, key} = param;\r\n        let ret = await centerApi.get('unit/members', {key: key, unit:unit, role:role, pageStart:pageStart, pageSize:pageSize});\r\n        return ret;\r\n    }\r\n    protected setPageStart(item: any): any {\r\n        if (item === undefined)\r\n            this.pageStart = 0;\r\n        else\r\n            this.pageStart = item.id;\r\n    }\r\n}","import React from \"react\";\r\nimport { Page, Controller, appInFrame, VPage } from \"tonva-tools\";\r\nimport { List, Muted, LMR, FA } from \"tonva-react-form\";\r\nimport { VOpBinding } from './vOpBinding';\r\nimport { CAction, CQuery, centerApi, entityIcons, ControllerUq } from \"tonva-react-uq\";\r\nimport { Organization, Team, Section, Post, Sheet, App, Uq, To, Entity, EntityBlock } from \"./model\";\r\nimport { VAllPosts } from \"./vAllPosts\";\r\nimport { VFullFunction } from \"./vFullFunction\";\r\nimport { VSearchUser } from \"./vSearchUser\";\r\n\r\n// 单据跟操作的绑定设置\r\nexport class COpBinding extends ControllerUq {\r\n    /*\r\n    constructor(unitxUq: CUq, res:any) {\r\n        super({});\r\n        this.unitxUq = unitxUq;\r\n    }*/\r\n\r\n    icon = <FA name=\"map-o\" className=\"text-success\" fixWidth={true} />;\r\n    label = '岗位权限 - UQ对象';\r\n\r\n    //private unitxUq: CUq;\r\n    private apps: App[];\r\n    organizations: Organization[];\r\n    teams: Team[];\r\n    sections: Section[];\r\n    posts: Post[];\r\n    postDict: {[id:number]:Post};\r\n    teamDict: {[id:number]:Team};\r\n    organizationDict: {[id:number]:Organization};\r\n    sectionDict: {[id:number]:Section};\r\n\r\n    protected async internalStart():Promise<void> {\r\n        await this.buildPosts();\r\n        await this.buildAppsUqs();\r\n        this.openPage(<this.appsView />);\r\n    }\r\n\r\n    private async buildAppsUqs() {\r\n        let unit = appInFrame.unit;\r\n        let ret:any[][] = await centerApi.get('/unit/apps-uqs', {unit: unit});\r\n        this.apps = ret[0];\r\n        let uqs: Uq[] = ret[1];\r\n\r\n        for (let app of this.apps) {\r\n            app.uqs = [];\r\n        }\r\n        for (let uq of uqs) {\r\n            let app = this.apps.find(v => v.id === uq.app);\r\n            if (app === undefined) continue;\r\n            app.uqs.push(uq);\r\n            this.setUqEntities(uq);\r\n        }\r\n    }\r\n\r\n    private async buildPosts() {\r\n        let queryAllTeams = this.cUq.cFromName('query', 'allteams') as CQuery;\r\n        let ret:any[][] = await queryAllTeams.entity.query(undefined);\r\n        this.teams = ret['teams'];\r\n        this.organizations = ret['organization'];\r\n        this.posts = ret['organizationpost'];\r\n        this.sections = ret['sections'];\r\n        this.postDict = {};\r\n        this.teamDict = {};\r\n        this.organizationDict = {};\r\n        this.sectionDict = {};\r\n        for (let organization of this.organizations) {\r\n            organization.posts = [];\r\n            organization.teams = [];\r\n            this.organizationDict[organization.id] = organization;\r\n        }\r\n        for (let team of this.teams) {\r\n            team.organizations = [];\r\n            team.sections = [];\r\n            this.teamDict[team.id] = team;\r\n        }\r\n        for (let section of this.sections) {\r\n            section.teams = [];\r\n            this.sectionDict[section.id] = section;\r\n        }\r\n        for (let post of this.posts) {\r\n            this.postDict[post.id] = post;\r\n            let organization = this.organizationDict[post.owner];\r\n            if (organization === undefined) {\r\n                continue;\r\n            }\r\n            post.organization = organization;\r\n            organization.posts.push(post);\r\n        }\r\n        // teamOrganization\r\n        for (let teamOrganization of ret['teamorganization']) {\r\n            let {team:tm, organization:og} = teamOrganization;\r\n            let team = this.teamDict[tm];\r\n            let organization = this.organizationDict[og];\r\n            team.organizations.push(organization);\r\n            organization.teams.push(team);\r\n        }\r\n        // sectionTeam\r\n        for (let sectionTeam of ret['sectionteam']) {\r\n            let {section:sec, team:tm} = sectionTeam;\r\n            let section = this.sectionDict[sec];\r\n            let team = this.teamDict[tm];\r\n            section.teams.push(team);\r\n            team.sections.push(section);\r\n        }\r\n    }\r\n\r\n    private setUqEntities(uq:Uq) {\r\n        let entities = uq.entities;\r\n        if (entities === null) return;\r\n        let lns = entities.split('\\n');\r\n        let len = lns.length;\r\n        let p:number;\r\n        for (let i=0; i<len;) {\r\n            switch (lns[i]) {\r\n                case 'tuid': p = this.setEntities(uq.tuids = [], lns, i, uq); break;\r\n                case 'map': p = this.setEntities(uq.maps = [], lns, i, uq); break;\r\n                case 'book': p = this.setEntities(uq.books = [], lns, i, uq); break;\r\n                case 'history': p = this.setEntities(uq.histories = [], lns, i, uq); break;\r\n                case 'pending': p = this.setEntities(uq.pendings = [], lns, i, uq); break;\r\n                case 'query': p = this.setEntities(uq.queries = [], lns, i, uq); break;\r\n                case 'action': p = this.setEntities(uq.actions = [], lns, i, uq); break;\r\n                case 'sheet': p = this.setSheets(uq.sheets = [], lns, i, uq); break;\r\n                default:\r\n                    alert('unknown entity type: ' + lns[i]);\r\n                    return;\r\n            }\r\n            i = p;\r\n        }\r\n    }\r\n\r\n    private setEntities(entities:Entity[], lines:string[], p:number, uq:Uq):number {\r\n        let len = lines.length;\r\n        let i = p+1;\r\n        for (; i<len; i++) {\r\n            let ln = lines[i];\r\n            if (ln.length > 0) {\r\n                let name = ln;\r\n                entities.push({\r\n                    uq: uq,\r\n                    name: name,\r\n                    states: undefined\r\n                });\r\n            }\r\n            else return i+1;\r\n        }\r\n        return i;\r\n    }\r\n\r\n    private setSheets(sheets:Sheet[], lines:string[], p:number, uq:Uq):number {\r\n        let len = lines.length;\r\n        let i = p+1;\r\n        for (; i<len; i++) {\r\n            let ln = lines[i];\r\n            if (ln.length > 0) {\r\n                let parts:string[] = ln.split('\\t');\r\n                let name = parts[0];\r\n                parts[0] = '$';\r\n                let sheet:Sheet = {\r\n                    uq: uq,\r\n                    name: name,\r\n                    states: parts,\r\n                }\r\n                sheets.push(sheet);\r\n            }\r\n            else return i+1;\r\n        }\r\n        return i;\r\n    }\r\n\r\n    async saveSheetStatePosts(sheet:Sheet, stateName:string, toArr:{post:number, team:number, section:number}[]) {\r\n        let actionSaveEntityOpPost = this.cUq.cFromName('action', 'saveentityoppost') as CAction;\r\n        let {uq, name} = sheet;\r\n        await actionSaveEntityOpPost.submit({\r\n            uq: uq.id,\r\n            entityName: name,\r\n            opName: stateName,\r\n            posts: toArr\r\n        });\r\n    }\r\n\r\n    private appRender = (app:App, index:number) => {\r\n        let {name, discription} = app;\r\n        return <LMR className=\"px-3 py-2\" right={discription && <Muted>{discription}</Muted>}>\r\n            {name}\r\n        </LMR>\r\n    }\r\n\r\n    private appClick = (app:App) => {\r\n        this.openPage(<this.appView {...app} />)\r\n    }\r\n\r\n    async callSearchUser(uq:Uq): Promise<any> {\r\n        let user = await this.vCall(VSearchUser, appInFrame.unit);\r\n        return user;\r\n    }\r\n\r\n    private appsView = () => <Page header={this.label}>\r\n        <div className=\"text-muted p-3 small\">\r\n            <div style={{lineHeight:'1.8', fontWeight:'bold'}}>说明</div>\r\n            <ol className=\"pl-3\" style={{listStyleType: '1', lineHeight: '1.8'}}>\r\n                <li >\r\n                    下面是全部启用的APP。请选择\r\n                </li>\r\n                <li>\r\n                    每个APP会使用一个以上的UQ。UQ里面定义了Tuid，Action，Map和Sheet等对象。\r\n                </li>\r\n                <li>\r\n                    设置对象跟岗位的关联\r\n                </li>\r\n            </ol>\r\n        </div>\r\n        <List items={this.apps} item={{render:this.appRender, onClick:this.appClick}} />\r\n    </Page>;\r\n\r\n    private entityRender(entity:Entity, icon:any) {\r\n        let {name} = entity;\r\n        return <div className=\"px-3 py-2 align-items-center\">{icon} &nbsp; {name}</div>\r\n    }\r\n    private sheetRender(sheet:Sheet, icon:any) {\r\n        let {name, states} = sheet;\r\n        return <div className=\"px-3 py-2 align-items-center\">\r\n            {icon} &nbsp; {name} <Muted> &nbsp; {sheet.states.join(', ')}</Muted>\r\n        </div>\r\n    }\r\n    private entityClick = async (block:EntityBlock, entity:Entity) => {\r\n        //alert('entity click');\r\n        let entityPosts = this.cUq.cFromName('query', 'getEntityPost') as CQuery;\r\n        let ret = await entityPosts.entity.query({uq: entity.uq.id, entityName: entity.name});\r\n        let opTos:{[op:string]:To[]} = {};\r\n        for (let row of ret.ret) {\r\n            let {op, post, team, section} = row;\r\n            let opTo = opTos[op];\r\n            if (opTo === undefined) opTos[op] = opTo = [];\r\n            opTo.push({\r\n                post: this.postDict[post],\r\n                team: this.teamDict[team],\r\n                section: this.sectionDict[section],\r\n            });\r\n        }\r\n        this.openVPage(VOpBinding, {entity:entity, opTos:opTos});\r\n    }\r\n    private sheetClick = async (block:EntityBlock, sheet:Sheet) => {\r\n        this.sheetClickOld(sheet);\r\n    }\r\n\r\n    private sheetClickOld = async (sheet:Sheet) => {\r\n        let entityPosts = this.cUq.cFromName('query', 'getEntityPost') as CQuery;\r\n        let ret = await entityPosts.entity.query({uq: sheet.uq.id, entityName: sheet.name});\r\n        let opTos:{[op:string]:To[]} = {};\r\n        for (let row of ret.ret) {\r\n            let {op, post, team, section} = row;\r\n            let opTo = opTos[op];\r\n            if (opTo === undefined) opTos[op] = opTo = [];\r\n            opTo.push({\r\n                post: this.postDict[post],\r\n                team: this.teamDict[team],\r\n                section: this.sectionDict[section],\r\n            });\r\n        }\r\n        this.openVPage(VOpBinding, {entity:sheet, opTos:opTos});\r\n    }\r\n\r\n    private renderSetting = (item:any, index:number) => {\r\n        let {icon, color, text} = item;\r\n        return <div className=\"px-3 py-2 align-items-center\">\r\n            {<FA name={icon} fixWidth={true} className={color} />} &nbsp; {text}\r\n        </div>\r\n    }\r\n\r\n    private settingClick = (item:any, uq:Uq) => {\r\n        let {name} = item;\r\n        let V: new (coordinator) => VPage<COpBinding>;\r\n        switch (name) {\r\n            default: return;\r\n            case 'entity-by-all-post': V = VAllPosts; break;\r\n            case 'user-all-entities': V = VFullFunction; break;\r\n        }\r\n        this.openVPage(V, uq);\r\n    }\r\n    \r\n    private uqRender = (uq:Uq, index:number) => {\r\n        let {name, tuids, actions, maps, books, queries, histories, pendings, sheets} = uq;\r\n        let nameRender = this.entityRender;\r\n        let blocks:EntityBlock[] = [\r\n            {items: tuids, type: 'tuid', itemClick: this.entityClick},\r\n            {items: sheets, type: 'sheet', itemClick: this.sheetClick, itemRender: this.sheetRender},\r\n            {items: actions, type: 'action', itemClick: this.entityClick},\r\n            {items: maps, type: 'map', itemClick: this.entityClick},\r\n            {items: books, type: 'book', itemClick: this.entityClick},\r\n            {items: queries, type: 'query', itemClick: this.entityClick},\r\n            {items: histories, type: 'history', itemClick: this.entityClick},\r\n            {items: pendings, type: 'pending', itemClick: this.entityClick},\r\n        ];\r\n\r\n        let settings:any[] = [\r\n            {name:'entity-by-all-post', icon: 'cog', color: 'text-success', text: '所有岗位可操作'},\r\n            {name: 'user-all-entities', icon: 'cog', color: 'text-success', text: '全功能用户'}\r\n        ];\r\n\r\n        // {icon} &nbsp; {name} <Muted> &nbsp; {sheet.states.join(', ')}</Muted>\r\n        return <div key={name} className=\"my-2\">\r\n            <div className=\"px-3 font-weight-bold\">{name}</div>\r\n            <List className=\"mt-3\"\r\n                items={settings}\r\n                item={{\r\n                    key: (item:any)=>item.name, \r\n                    render: this.renderSetting,\r\n                    onClick:(item:any)=>this.settingClick(item, uq) \r\n                }}\r\n             />\r\n            {blocks.map(block => {\r\n                let {items, type, itemClick, itemRender} = block;\r\n                let icon = entityIcons[type];\r\n                return items && items.length>0 &&\r\n                    <List key={type} className=\"mt-3\"\r\n                        header={<Muted className=\"px-3 pt-1 bg-light w-100\">{this.res[type]||type}</Muted>} \r\n                        items={items} \r\n                        item={{\r\n                            key: (item:any)=>item.name, \r\n                            render:(item:any, index:number)=>(itemRender || nameRender)(item, icon), \r\n                            onClick: (item:Entity)=>itemClick(block, item)\r\n                        }} />;\r\n            })}\r\n        </div>;\r\n        /*\r\n        function headerCaption(caption:string):JSX.Element {\r\n            return <Muted className=\"px-3 pt-1 bg-light w-100\">{caption}</Muted>\r\n        }\r\n        function itemList(items:any[], type:string, itemClick:(item:any)=>void, render:((item:any, icon:any)=>JSX.Element) = nameRender) {\r\n            //let res = entitiesRes;\r\n            //let {caption, icon} = res[type];\r\n            let icon = entityIcons[type];\r\n            return items && \r\n                <List className=\"mt-3\"\r\n                    header={headerCaption(type)} \r\n                    items={items} \r\n                    item={{render:(item:any, index:number)=>render(item, icon), onClick: itemClick}} />;\r\n        }\r\n            {itemList(tuids, 'tuid', this.tuidClick)}\r\n            {itemList(sheets, 'sheet', this.sheetClickOld, this.sheetRender)}\r\n            {itemList(actions, 'action', this.actionClick)}\r\n            {itemList(maps, 'map', this.mapClick)}\r\n            {itemList(books, 'book', this.bookClick)}\r\n            {itemList(queries, 'query', this.queryClick)}\r\n            {itemList(histories, 'history', this.historyClick)}\r\n            {itemList(pendings, 'pending', this.pendingClick)}\r\n        */\r\n    }\r\n\r\n    private appView = (app:App) => <Page header={app.name + '操作权限'}>\r\n        {\r\n            app.uqs.map((v, index) => this.uqRender(v, index))\r\n        }\r\n    </Page>;\r\n\r\n    /*\r\n    private tuidClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    private mapClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    private actionClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    private bookClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    private queryClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    private historyClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    private pendingClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    */\r\n}\r\n","import * as React from 'react';\r\nimport { Page, VPage } from 'tonva-tools';\r\nimport { List, FA } from 'tonva-react-form';\r\nimport { CUq, Link, CLink, CApp } from \"tonva-react-uq\";\r\nimport ui from './ui';\r\nimport { COpBinding } from './op';\r\n\r\nexport class COrganization extends CUq {\r\n    constructor() {\r\n        super(undefined, '$$$/$unitx', 0, 0, undefined, ui);\r\n    }\r\n\r\n    label = '岗位权限';\r\n    icon = 'sitemap';\r\n    links: (CLink|string)[];\r\n\r\n    protected clearPrevPages() {\r\n        // 保留回退按钮，所以，去掉下面这行\r\n        //nav.clear();\r\n    }\r\n\r\n    protected async loadEntites() {\r\n        // 只有赋Entity权限的地方，需要取全部的Entities，其它地方默认取user access，this.entities.loadAccess()\r\n        await this.entities.loadEntities();\r\n    }\r\n\r\n    protected async internalStart() {\r\n        await this.loadSchema();\r\n        this.links= [\r\n            '',\r\n            new CLink(new COpBinding(this, this.res)),\r\n            '',\r\n            this.linkFromName('map', 'teamPerson'),\r\n            this.linkFromName('map', 'sectionTeam'),\r\n            this.linkFromName('map', 'teamOrganization'),\r\n            '',\r\n            this.linkFromName('tuid', 'person'),\r\n            this.linkFromName('tuid', 'team'),\r\n            this.linkFromName('tuid', 'section'),\r\n            this.linkFromName('tuid', 'organization'),\r\n        ];\r\n        this.openVPage(VOrganization);\r\n    }\r\n    \r\n}\r\n\r\nclass VOrganization extends VPage<COrganization> {\r\n    async open() {\r\n        this.openPage(this.appPage);\r\n    }\r\n\r\n    private renderRow = (link: Link, index:number) => {\r\n        return link.render('bg-white');\r\n    }\r\n\r\n    protected appPage = () => {\r\n        let {links, label} = this.controller;\r\n        return <Page header={label} logout={async ()=>{}}>\r\n            <List items={links} item={{render: this.renderRow}} />\r\n        </Page>;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { AppController } from '.';\r\nimport { VPage, nav, Page, ItemSchema, UiSchema, StringSchema, BoolSchema, UiTextItem, UiTextAreaItem, UiCheckItem, Form, ButtonSchema, Context, ImageSchema, UiImageItem, IdSchema, UiIdItem } from 'tonva-tools';\r\nimport { SubmitResult, DropdownActions, TonvaForm, FormRow } from 'tonva-react-form';\r\nimport { createIdPick, IdPickProps } from 'createIdPick';\r\nimport { DevModel } from 'model';\r\nimport { store } from 'store';\r\nimport { IdPickPage, ServerSpan } from '../../tools';\r\nimport { observer } from 'mobx-react';\r\n\r\nconst ServerCaption = (item:DevModel.Server) => {\r\n    let {discription, cloud, ip} = item;\r\n    return <>{discription} {cloud} {ip}</>;\r\n}\r\nconst idPickServerProps: IdPickProps = {\r\n    caption: '选择服务器',\r\n    searchPlaceHolder: '搜索服务器',\r\n    candidateItems: async (params:any, key:string) => {\r\n        await store.dev.searchServer.first(key);\r\n        return store.dev.searchServer.items;\r\n    },\r\n    moreCandidates: async () => {\r\n        await store.dev.searchServer.more();\r\n    },\r\n    row: (item:DevModel.Server, index:number) => {\r\n        return <div className=\"px-3 py-2\"><ServerCaption {...item} /></div>;\r\n    },\r\n};\r\n/*\r\nconst formRows:FormRow[] = [\r\n    {\r\n        label: '名称', \r\n        field: {name: 'name', type: 'string', maxLength: 100, required: true},\r\n    },\r\n    {\r\n        label: '描述',\r\n        field: {name: 'discription', type: 'string', maxLength: 250},\r\n        face: {type: 'textarea'}\r\n    },\r\n    {\r\n        label: '图标',\r\n        field: {name: 'icon', type: 'string', maxLength: 250},\r\n    },\r\n    {\r\n        label: 'URL',\r\n        field: {name: 'url', type: 'string', maxLength: 200},\r\n    },\r\n    {\r\n        label: '服务器',\r\n        field: {name: 'server', type: 'id'},\r\n        face: {\r\n            type: 'pick-id', \r\n            initCaption: '请选择服务器', \r\n            pick: createIdPick(idPickServerProps),\r\n            fromPicked: (item:DevModel.Server)=>{\r\n                return {\r\n                    id: item.id, \r\n                    caption: <ServerCaption {...item} />,\r\n                };\r\n            },\r\n            itemFromId: (id:number)=>store.cacheServers.get(id),\r\n        },\r\n    },\r\n    {\r\n        label: '公开',\r\n        field: {name: 'public', type: 'bool', defaultValue: 1}\r\n    },\r\n];\r\n*/\r\nconst schema:ItemSchema[] = [\r\n    {name: 'name', type: 'string', maxLength: 100, required: true} as StringSchema,\r\n    {name: 'discription', type: 'string', maxLength: 250} as StringSchema,\r\n    {name: 'url', type: 'string', maxLength: 200} as StringSchema,\r\n    {name: 'public', type: 'boolean'} as BoolSchema,\r\n    {name: 'server', type: 'id'} as IdSchema,\r\n    {name: 'icon', type: 'image'} as ImageSchema,\r\n    {name: 'submit', type: 'submit'} as ButtonSchema,\r\n];\r\n\r\nexport abstract class EditBasePage extends VPage<AppController> {\r\n    private candidateItems = async (params:any, key:string):Promise<any[]> => {\r\n        await store.dev.searchServer.first(key);\r\n        return store.dev.searchServer.items;\r\n    }\r\n\r\n    private moreCandidates = async ():Promise<void> => {\r\n        await store.dev.searchServer.more();\r\n    }\r\n\r\n    private renderRow = (item:DevModel.Server, index:number): JSX.Element => {\r\n        return <div className=\"px-3 py-2\"><ServerCaption {...item} /></div>;\r\n    }\r\n\r\n    private pickServerId = (context:Context, name:string, value:number): Promise<number> => {\r\n        return new Promise<number>((resolve, reject) => {\r\n            nav.push(<IdPickPage \r\n                caption=\"选择服务器\" \r\n                searchPlaceHolder=\"搜索服务器\"\r\n                candidateItems={this.candidateItems}\r\n                moreCandidates={this.moreCandidates}\r\n                row={this.renderRow}\r\n                idFromItem={(item:DevModel.Server) => item.id}\r\n                resolve={resolve} params={undefined} />, \r\n                ()=> {\r\n                    reject();\r\n                });\r\n        });\r\n    }\r\n\r\n    private renderServerInput = (itemId:number): JSX.Element => {\r\n        return <ServerSpan id={itemId} />;\r\n    };\r\n\r\n    private uiSchema:UiSchema = {\r\n        items: {\r\n            name: {widget: 'text', label: '名称'} as UiTextItem,\r\n            discription: {widget: 'textarea', label: '描述', rows: 5} as UiTextAreaItem,\r\n            url: {widget: 'text', label: 'URL', placeholder: 'http(s)://APP地址'} as UiTextItem,\r\n            'public': {widget: 'checkbox', label: '公开', } as UiCheckItem,\r\n            server: {widget: 'id', label: '服务器', pickId: this.pickServerId, Templet: this.renderServerInput} as UiIdItem,\r\n            icon: {widget: 'image', label: '标志图'} as UiImageItem,\r\n            submit: {widget: 'button', label: '提交', className: 'btn btn-primary'}\r\n        }\r\n    }\r\n    \r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n    /*\r\n    protected onSubmit = async (values:any):Promise<SubmitResult> => {\r\n        await this.controller.saveApp(values);\r\n        nav.pop();\r\n        return;\r\n    }*/\r\n    private onButtonClick = async (name:string, context: Context) => {\r\n        let {data} = context;\r\n        let app:DevModel.App = _.clone(this.controller.app) || {} as any;\r\n        _.merge(app, data);\r\n        await this.controller.saveApp(app);\r\n        nav.pop();\r\n    }\r\n    protected page: ()=>JSX.Element;\r\n    protected form = observer(() => {\r\n        /*\r\n        return <TonvaForm\r\n            className=\"m-3\"\r\n            formRows={formRows} \r\n            onSubmit={this.onSubmit} initValues={initValues} />\r\n        */\r\n        return <Form fieldLabelSize={2}\r\n            className=\"m-3\" \r\n            schema={schema} \r\n            uiSchema={this.uiSchema}\r\n            formData={this.initValues}\r\n            onButtonClick={this.onButtonClick} />\r\n    });\r\n    abstract get initValues():any;\r\n}\r\n\r\nexport class EditPage extends EditBasePage {\r\n    get initValues():any {return this.controller.app}\r\n    protected page = () => {\r\n        let {app} = this.controller;\r\n        let {name} = app;\r\n        return <Page header={'修改APP - ' + name} back=\"close\">\r\n            <this.form />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nexport class NewPage extends EditBasePage {\r\n    get initValues():any {return {}}\r\n    protected page = () => {\r\n        return <Page header={'新建APP'} back=\"close\">\r\n            <this.form />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, Image } from \"tonva-tools\";\r\nimport { AppController } from '.';\r\nimport { List, LMR, Badge, Muted, FA } from 'tonva-react-form';\r\nimport { DevModel } from 'model';\r\nimport { NewPage } from './editPage';\r\n\r\nexport class AppsPage extends VPage<AppController> {\r\n    async open(param:any) {\r\n        this.openPage(this.page);\r\n    }\r\n    private newItem = () => {\r\n        this.openVPage(NewPage);\r\n    }\r\n    private page = ():JSX.Element => {\r\n        let {appList, listRowClick} = this.controller;\r\n        let right = <button className='btn btn-secondary btn-sm' onClick={()=>this.newItem()}><FA name=\"plus\" /></button>;\r\n        return <Page header=\"App\" right={right}>\r\n            <List items={appList} item={{render: this.appRow, onClick: listRowClick}} />\r\n        </Page>\r\n    }\r\n    private appRow = (item:DevModel.App):JSX.Element => {\r\n        let {name, discription, icon, url, urlDebug} = item;\r\n        let left = <Badge size=\"sm\"><Image src={icon} /></Badge>;\r\n        let right = <div className=\"text-muted small text-right\">\r\n            {url || '-'}<br/>\r\n            {urlDebug}\r\n        </div>;\r\n        return <LMR className=\"py-2 px-3 align-items-stretch\"\r\n            left={left} right={right}>\r\n            <div className=\"px-3\">\r\n                <div><b>{name}</b></div>\r\n                <div><Muted>{discription}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { List, LMR, SearchBox } from 'tonva-react-form';\r\nimport { DevModel } from 'model';\r\nimport { UnitSpan } from 'tools';\r\nimport { store } from 'store';\r\nimport { nav, Page, VPage } from 'tonva-tools';\r\nimport { AppController } from '.';\r\n\r\nexport class SearchUqPage extends VPage<AppController> {\r\n    @observable private uqs: DevModel.UQ[];\r\n\r\n    async open() {\r\n        this.uqs = await this.controller.getMyUqs();\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private onSearch = async (key:string) => {\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.uqs = await this.controller.searchUq(key, pageStart, pageSize);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let header = <SearchBox className=\"w-100 mx-1\" \r\n            onSearch={this.onSearch}\r\n            placeholder=\"搜索UQ名字\" \r\n            maxLength={100} />;\r\n        return <Page back=\"close\" header={header}>\r\n            <List items={this.uqs} item={{render: this.row, onClick: this.controller.onUq}} />\r\n        </Page>;\r\n    });\r\n\r\n    private row = (uq: DevModel.UQ) => {\r\n        let {owner, name, discription} = uq;\r\n        return <LMR className=\"py-2 px-3\" right={discription}>\r\n            <div>{owner} / {name}</div>\r\n        </LMR>;\r\n    };\r\n}\r\n\r\n@observer\r\nexport class AppUqs extends React.Component {\r\n    @observable anySelected: boolean = false;\r\n    private list:List;\r\n    private onSelect = (item: DevModel.UQ, isSelected:boolean, anySelected:boolean) => {\r\n        this.anySelected = anySelected;\r\n    }\r\n    private row = (item: DevModel.UQ) => {\r\n        let {name, unit, discription} = item;\r\n        return <LMR className=\"p-2\" right={<small className=\"text-muted\">{discription}</small>}>\r\n            <UnitSpan id={unit} />/{name}\r\n        </LMR>;\r\n    }\r\n    private removeBind = () => {\r\n        if (this.list === null) return;\r\n        let {selectedItems} = this.list;\r\n        if (selectedItems === undefined) return;\r\n        if (selectedItems.length === 0) return;\r\n        store.dev.apps.appBindUq(\r\n            selectedItems.map(v => {\r\n                return {id:v.id, access:['*']}\r\n            }), \r\n            false);\r\n    }\r\n    render() {\r\n        let btnProps = this.anySelected?\r\n            {color:'danger', onClick:this.removeBind, icon:'trash', text:'取消'}:\r\n            {color:'primary', onClick:()=>nav.push(<Uqs/>), icon:'plus', text:'新增'};\r\n        let btn = (p)=><button \r\n            className={classNames('btn', 'btn-outline-'+p.color, 'btn-sm')} \r\n            onClick={p.onClick}>\r\n            <i className={\"fa fa-\" + p.icon} /> {p.text}关联\r\n        </button>;\r\n        let listHeader = <div className=\"va-row py-1 justify-content-center\">{btn(btnProps)}</div>;\r\n        return <Page header=\"关联UQ\">\r\n            <List ref={list=>this.list=list} header={listHeader}\r\n                items={store.dev.apps.uqs}\r\n                item={{render: this.row, onSelect: this.onSelect}} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\n@observer\r\nclass Uqs extends React.Component {\r\n    onSearch = async (key:string) => {\r\n        await store.dev.apps.searchUq(key);\r\n    }\r\n    onBind(uq: DevModel.UQ, bind: boolean) {\r\n        store.dev.apps.appBindUq([{id:uq.id, access:['*']}], bind);\r\n    }\r\n    row = (uq: DevModel.UQ) => {\r\n        let isConnected = store.dev.apps.uqs.find(a => a.id === uq.id) !== undefined;\r\n        let cn = ['btn', 'btn-sm'];\r\n        let btnContent:any, onClick:any;\r\n        if (isConnected) {\r\n            cn.push('btn-success');\r\n            onClick = ()=>this.onBind(uq, false);\r\n            btnContent = \"已关联\";\r\n        }\r\n        else {\r\n            cn.push('btn-primary');\r\n            onClick = ()=>this.onBind(uq, true);\r\n            btnContent = <span><i className=\"fa fa-check\"/> 关联</span>;\r\n        }\r\n        return <div className=\"d-flex justify-content-start py-1 px-3\">\r\n            <div className=\"align-self-center\">{uq.name + ' - ' + uq.discription}</div>\r\n            <footer className=\"ml-auto\"><button className={classNames(cn)} onClick={onClick}>{btnContent}</button></footer>\r\n        </div>\r\n    }\r\n    render() {\r\n        let header = <SearchBox className=\"w-100 mx-1\" \r\n            onSearch={this.onSearch} \r\n            placeholder=\"搜索UQ名字\" \r\n            maxLength={100} />;\r\n        return <Page back=\"close\" header={header}>\r\n            <List items={store.dev.apps.searchedUqs} item={{render: this.row}} loading={null} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, nav } from 'tonva-tools';\r\nimport { AppController, UqAccess } from '.';\r\nimport { IdDates, UnitSpan, ServerSpan, UnitName } from 'tools';\r\nimport { Prop, Media, PropGrid, ListProp, DropdownActions, List, LMR } from 'tonva-react-form';\r\nimport { EditPage } from './editPage';\r\nimport { AppUqs, SearchUqPage } from './appUqs';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class AppPage extends VPage<AppController> {\r\n    async open() {\r\n        //this.uqs.list = this.controller.uqs;\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private editItem = async () => {\r\n        await this.openVPage(EditPage);\r\n        //nav.push(<EditAppPage {...this.props} />);\r\n    }\r\n\r\n    private deleteItem = async () => {\r\n        if (confirm('真的要删除吗？系统删除时并不会检查相关引用，请谨慎') === true) {\r\n            await this.controller.deleteApp();\r\n            nav.pop();\r\n        }\r\n    }\r\n\r\n    private page = observer(():JSX.Element => {\r\n        let {app} = this.controller;\r\n        let {unit, name, discription, icon, server, date_init, date_update} = app;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let menuItems = [\r\n            // {icon: 'cogs', caption:'设置关联UQ', action: ()=>nav.push(<AppUqs />)},\r\n            {caption:'修改App', action:this.editItem, icon:'edit' },\r\n            {caption:'删除', action:this.deleteItem, icon:'trash-o' }\r\n        ];\r\n\r\n        let right = <DropdownActions actions={menuItems} />;\r\n\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <Media icon={icon} main={name} discription={disp} />\r\n            },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                label: '开发号', \r\n                component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> \r\n            },\r\n            /*\r\n            {\r\n                type: 'component', \r\n                label: 'Service',\r\n                vAlign: 'stretch',\r\n                component: <ServiceRow />,\r\n            },*/\r\n            {\r\n                label: 'URL',\r\n                name: 'url',\r\n                type: 'string',                \r\n            },\r\n            {\r\n                type: 'component',\r\n                label: '服务器',\r\n                component: <ServerSpan id={server} />\r\n            },\r\n            '',\r\n            //this.uqs,\r\n        ];\r\n        let btnAddUq = <button className=\"btn btn-outline-primary btn-sm\" onClick={()=>this.openVPage(SearchUqPage)}>\r\n            增加关联\r\n        </button>;\r\n        return <Page header={'App - ' + name} right={right}>\r\n            <PropGrid rows={rows} values={app} />\r\n            <LMR className=\"mx-3 mt-3 mb-1\" right={btnAddUq}>\r\n                关联UQ\r\n            </LMR>\r\n            <List items={this.controller.uqAccesses} item={{render:this.renderUqRow, onClick:this.uqClick}} />\r\n        </Page>\r\n    })\r\n\r\n    private uqClick = (uqAccess:UqAccess) => {\r\n        this.controller.onUq(uqAccess.uq);\r\n    }\r\n\r\n    private renderUqRow = (uqAccess:UqAccess, index:number):JSX.Element => {\r\n        let {uq, bind_access: access} = uqAccess;\r\n        let {name, discription, unit} = uq;\r\n        let disp: any;\r\n        let elAccess: any;\r\n        if (access && access.length > 0) {\r\n            elAccess = <> + {access.join(', ')} </>;\r\n        }\r\n        if (discription) disp = <div className=\"small text-muted\"> &nbsp; {discription}</div>;\r\n        return <LMR className=\"px-3 py-2 align-items-center\" right={disp}>\r\n            <UnitName id={unit} /> / {name} {elAccess}\r\n        </LMR>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, nav } from \"tonva-tools\";\r\nimport { AppController, UqAccess } from \".\";\r\nimport { LMR } from 'tonva-react-form';\r\n\r\nexport class UqBindPage extends VPage<AppController> {\r\n    private uqAccess: UqAccess;\r\n    private accesses: string[];\r\n    private accessChecked:{[name:string]:boolean};\r\n    async open(uqAccess: UqAccess) {\r\n        this.uqAccess = uqAccess;\r\n        let {uq, bind_access} = this.uqAccess;\r\n        let {access} = uq;\r\n        if (access) {\r\n            this.accessChecked = {};\r\n            this.accesses = access.split(',');\r\n            for (let acc of this.accesses) {\r\n                this.accessChecked[acc] = (bind_access && bind_access.find(bc => bc === acc)) !== undefined;\r\n            }\r\n        }\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private onCheckChanged = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        let {target} = evt;\r\n        this.accessChecked[target.name] = target.checked;\r\n    }\r\n\r\n    private saveUqBind = async () => {\r\n        let acc:string[] = [];\r\n        if (this.accesses) {\r\n            for (let i in this.accessChecked) {\r\n                if (this.accessChecked[i] === true) acc.push(i);\r\n            }\r\n        }\r\n        await this.controller.saveUqBind(this.uqAccess.uq, acc);\r\n        nav.pop();\r\n    }\r\n\r\n    private removeUqBind = async () => {\r\n        await this.controller.removeUqBind(this.uqAccess.uq);\r\n        nav.pop();\r\n    }\r\n\r\n    private page = ():JSX.Element => {\r\n        let {uq, bind_access} = this.uqAccess;\r\n        let {owner, name, discription, access} = uq;\r\n        let btnDelete:any;\r\n        if (bind_access !== null && bind_access !== undefined) {\r\n            btnDelete = <button className=\"btn btn-outline-danger btn-sm\" onClick={this.removeUqBind}>取消关联</button>;\r\n        }\r\n        let checkAccessList:any;\r\n        if (this.accesses) {\r\n            checkAccessList = <div className=\"mt-3\">\r\n            {\r\n                this.accesses.map(v => {\r\n                    let checked = this.accessChecked[v];\r\n                    return <label key={v} className=\"d-inline-block mr-4\">\r\n                        <input onChange={this.onCheckChanged}\r\n                            style={{width:'1.1rem', height:'1.1rem'}} \r\n                            name={v} type=\"checkbox\" defaultChecked={checked} />&nbsp;{v}\r\n                    </label>;\r\n                })\r\n            }\r\n            </div>;\r\n        }\r\n        return <Page header=\"关联UQ\">\r\n            <div className=\"m-3 py-3 px-3 bg-white border\">\r\n                <div>{owner} / {name}</div>\r\n                <div className=\"text-muted\">{discription}</div>\r\n                {checkAccessList}\r\n                <LMR className=\"pt-3\" right={btnDelete}>\r\n                    <button className=\"btn btn-primary btn-sm\" onClick={this.saveUqBind}>保存关联</button>\r\n                </LMR>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { observable } from 'mobx';\r\nimport { Controller } from \"tonva-tools\";\r\nimport { DevModel } from 'model';\r\nimport { devApi } from 'api';\r\nimport { AppsPage } from './appsPage';\r\nimport { AppPage } from './appPage';\r\nimport { UqBindPage } from './uqBindPage';\r\n\r\nexport interface UqAccess {\r\n    uq: DevModel.UQ;\r\n    bind_access: string[];\r\n}\r\n\r\nexport class AppController extends Controller {\r\n    private unitId: number;\r\n    app: DevModel.App;\r\n    @observable appList: DevModel.App[];\r\n    @observable uqAccesses: UqAccess[];\r\n    protected async internalStart(unitId:any) {\r\n        this.unitId = unitId;\r\n        this.appList = await devApi.apps(this.unitId);\r\n        this.openVPage(AppsPage);\r\n    }\r\n\r\n    listRowClick = async (item:DevModel.App) => {\r\n        this.app = item;\r\n        let ret = await devApi.loadAppUqs(item.id);\r\n        this.uqAccesses = ret.map(v => {\r\n            let {owner, access, id, name, discription, unit, date_init, date_update, bind_access} = v;\r\n            return {\r\n                uq: {\r\n                    id: id,\r\n                    name: name,\r\n                    discription: discription,\r\n                    unit: unit,\r\n                    access: access,\r\n                    owner: owner,\r\n                    date_init: date_init,\r\n                    date_update: date_update, \r\n                    service_count: undefined,\r\n                },\r\n                uqOwner: owner,\r\n                bind_access: bind_access && bind_access.split(',')\r\n            }\r\n        });\r\n        this.openVPage(AppPage);\r\n    }\r\n\r\n    saveApp = async (values: DevModel.App) => {\r\n        let app: DevModel.App;\r\n        let now = new Date();\r\n        if (this.app === undefined) {\r\n            app = _.clone(values);\r\n            app.date_init = now;\r\n        }\r\n        else {\r\n            app = _.clone(this.app);\r\n            _.merge(app, values);\r\n        }\r\n        app.unit = this.unitId;\r\n        app.date_update = now;\r\n        let ret = await devApi.saveApp(app);\r\n        app.id = ret;\r\n        let org = this.appList.find(v => v.id === ret);\r\n        if (org !== undefined) {\r\n            _.merge(org, app);\r\n        }\r\n        else {\r\n            this.appList.push(app);\r\n        }\r\n    }\r\n\r\n    deleteApp = async () => {\r\n        await devApi.delApp(this.unitId, this.app.id);\r\n        let index = this.appList.findIndex(v => v.id === this.app.id);\r\n        if (index >= 0) this.appList.splice(index, 1);\r\n    }\r\n\r\n    searchUq = async (key:string, pageStart:number, pageSize:number) => {\r\n        return await devApi.searchUq(this.unitId, key, pageStart, pageSize);\r\n    }\r\n\r\n    getMyUqs = async () => {\r\n        return await devApi.getMyUqs(this.unitId);\r\n    }\r\n\r\n    onUq = (uq: DevModel.UQ) => {\r\n        let uqAccess:UqAccess = this.uqAccesses.find(v => v.uq.id === uq.id);\r\n        if (uqAccess === undefined) {\r\n            uqAccess = {\r\n                uq: uq,\r\n                bind_access: undefined,\r\n            }\r\n        }\r\n        else {\r\n            let access = uqAccess.bind_access;\r\n            if (access === null || access === undefined) uqAccess.bind_access = [];\r\n        }\r\n        this.openVPage(UqBindPage, uqAccess);\r\n    }\r\n\r\n    // accesses = undefined, 表示删除\r\n    private buildBindUqs(uq: DevModel.UQ, accesses?:string[]) {\r\n        let uqs:{id:number, access:string[]}[] = [];\r\n        let isNew = true;\r\n        for (let ua of this.uqAccesses) {\r\n            let {uq:uaUq, bind_access} = ua;\r\n            if (uaUq.id === uq.id) {\r\n                if (accesses === undefined) continue;\r\n                bind_access = accesses;\r\n                isNew = false;\r\n            }\r\n            uqs.push({\r\n                id: uaUq.id,\r\n                access: bind_access || [],\r\n            });\r\n        }\r\n        if (accesses !== undefined && isNew === true) {\r\n            uqs.push({id: uq.id, access: accesses});\r\n        }\r\n        return uqs;\r\n    }\r\n\r\n    saveUqBind = async (uq: DevModel.UQ, accesses:string[]) => {\r\n        let uqs:{id:number, access:string[]}[] = this.buildBindUqs(uq, accesses);\r\n        await devApi.appBindUq(this.unitId, this.app.id, uqs);\r\n        if (uqs.length > this.uqAccesses.length) {\r\n            this.uqAccesses.unshift({\r\n                uq: uq,\r\n                bind_access: accesses,\r\n            });\r\n        }\r\n        else {\r\n            let ua = this.uqAccesses.find(v => v.uq.id === uq.id);\r\n            ua.bind_access = accesses;\r\n        }\r\n    }\r\n\r\n    removeUqBind = async (uq: DevModel.UQ) => {\r\n        let uqs:{id:number, access:string[]}[] = this.buildBindUqs(uq);\r\n        await devApi.appBindUq(this.unitId, this.app.id, uqs);\r\n        let index = this.uqAccesses.findIndex(v => v.uq.id === uq.id);\r\n        if (index>=0) this.uqAccesses.splice(index, 1);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {List, EasyDate, LMR, Muted} from 'tonva-react-form';\r\nimport {DevModel} from '../../model';\r\nimport {store} from '../../store';\r\n\r\ninterface State {\r\n    files: any[];\r\n    compiled?: string;\r\n    text?: string;\r\n}\r\n\r\nexport interface UpUploadProps {\r\n    uq: DevModel.UQ;\r\n    services: DevModel.Service[];\r\n}\r\n\r\nexport class UqUpload extends React.Component<UpUploadProps, State> {\r\n    private fileInput: HTMLInputElement;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            files: undefined,\r\n        }\r\n    }\r\n    private onFilesChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        let upFiles:any[] = [];\r\n        let {files} = evt.target;\r\n        let len = files.length;\r\n        for (let i=0; i<len; i++) {\r\n            upFiles.push(files[i]);\r\n        }\r\n        this.setState({\r\n            files: upFiles,\r\n        });\r\n    }\r\n    fileRender(file, index):JSX.Element {\r\n        let {name, size, lastModifiedDate} = file;\r\n        function sz():string {\r\n            let n:number, u:string;\r\n            if (size < 1024) {\r\n                n = size; u = 'b';\r\n            }\r\n            else if (size < 1024*1024) {\r\n                n = Math.trunc((size / 1024) * 100)/100; u = 'k';\r\n            }\r\n            else {\r\n                n = Math.trunc((size / 1024 / 1024) * 100)/100; u = 'm';\r\n            }\r\n            return n + ' ' + u;\r\n        }\r\n        return <LMR className=\"px-2 py-1\" right={<Muted>{sz()}</Muted>}>\r\n            <div>{name}</div>\r\n            <div><Muted>修改日期: <EasyDate date={lastModifiedDate} /></Muted></div>\r\n        </LMR>;\r\n    }\r\n    private fileClick = (file:any) => {\r\n        let fr = new FileReader();\r\n        fr.onload = function(f) {\r\n            //alert(this.result);\r\n            nav.push(<UqPage name={file.name} content={this.result} />)\r\n        }\r\n        fr.readAsText(file, \"utf8\");\r\n    }\r\n    private onSubmit = (evt:React.FormEvent<any>) => {\r\n        evt.preventDefault();\r\n    }\r\n\r\n    private async update(thoroughly:boolean) {\r\n        var files:FileList = this.fileInput.files;\r\n        var data = new FormData();\r\n        let len = files.length;\r\n        for (let i=0; i<len; i++) {\r\n            let file = files[i];\r\n            data.append('files[]', file, file.name);\r\n        }\r\n  \r\n        let url = store.uqServer + 'uq-compile/' + this.props.uq.id + '/update';\r\n        if (thoroughly === true) url += '-thoroughly';\r\n        try {\r\n            let abortController = new AbortController();\r\n            let res = await fetch(url, {\r\n                method: \"POST\",\r\n                body: data,\r\n                signal: abortController.signal,\r\n            });\r\n            nav.push(<CompileResult {...this.props} res={res} abortController={abortController} />);\r\n        }\r\n        catch (e) {\r\n            console.error('%s %s', url, e);\r\n        }\r\n    }\r\n    private onUpdate = async () => {\r\n        let thoroughly = false;\r\n        await this.update(thoroughly);\r\n    }\r\n    private onUpdateThoroughly = async () => {\r\n        let thoroughly = true;\r\n        await this.update(thoroughly);\r\n    }\r\n    render() {\r\n        let {files} = this.state;\r\n        let fileList:any;\r\n        if (files !== undefined) {\r\n            fileList = <List \r\n                className=\"my-3\" \r\n                items={files} \r\n                item={{render: this.fileRender, onClick: this.fileClick}}/>;\r\n        }\r\n        let button:any;\r\n        if (files !== undefined && files.length > 0) {\r\n            button = <div className=\"my-2 d-flex\">\r\n                <button className=\"btn btn-success\" type=\"submit\" onClick={this.onUpdate}>优化编译</button>\r\n                <div className=\"py-2 flex-grow-1\" />\r\n                <button className=\"btn btn-outline-warning\"\r\n                    type=\"submit\" onClick={this.onUpdateThoroughly}>完全编译</button>\r\n            </div>;\r\n        }\r\n        return <Page header={\"编译 - \" + this.props.uq.name}>\r\n            <div className=\"py-2 px-3\">\r\n                <div>请选择UQ源代码文件</div>\r\n                <form className=\"my-1\" encType=\"multipart/form-data\" onSubmit={this.onSubmit}>\r\n                    <div className=\"my-1\">\r\n                        <input ref={(fileInput) => this.fileInput=fileInput}type=\"file\" id=\"photo\" \r\n                            className=\"w-100 form-control-file\" name=\"files\" multiple={true} \r\n                            onChange={this.onFilesChange} />\r\n                    </div>\r\n                    {fileList}\r\n                    {button}\r\n                </form>\r\n                <pre>{this.state.compiled}</pre>\r\n                <div>{this.state.text}</div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n\r\ninterface UqPgeProps {\r\n    name: string;\r\n    content: string|ArrayBuffer;\r\n}\r\nclass UqPage extends React.Component<UqPgeProps> {\r\n    render() {\r\n        return <Page header={this.props.name}>\r\n            <pre className=\"px-3 py-2\">{this.props.content}</pre>\r\n        </Page>;\r\n    }\r\n}\r\n\r\ninterface CompileResultProps {\r\n    res: Response;\r\n    abortController: AbortController;\r\n}\r\ninterface CompileResultState {\r\n    texts: string[];\r\n    seconds: number;\r\n}\r\nclass CompileResult extends React.Component<CompileResultProps, CompileResultState> {\r\n    private texts: string[];\r\n    private timeHandler:any;\r\n    constructor(props) {\r\n        super(props);\r\n        this.texts = [];\r\n        this.state = {\r\n            texts: this.texts,\r\n            seconds: -1,\r\n        }\r\n    }\r\n    componentWillMount() {\r\n        nav.regConfirmClose(async ():Promise<boolean>=>{\r\n            if (this.state.seconds>=0) return true;\r\n            return new Promise<boolean>((resolve, reject) => {\r\n                try {\r\n                    if (confirm('正在编译中，真的要中止吗？') === true) {\r\n                        try {\r\n                            this.props.abortController.abort();\r\n                        }\r\n                        catch (err) {\r\n                            console.error(err);\r\n                        }\r\n                        resolve(true);\r\n                    }\r\n                    else {\r\n                        resolve(false);\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    reject(err);\r\n                }\r\n            })\r\n        });\r\n    }\r\n    private clearTimeHandler() {\r\n        if (this.timeHandler !== undefined) {\r\n            clearTimeout(this.timeHandler);\r\n            this.timeHandler = undefined;\r\n        }\r\n    }\r\n    private getParent(el:HTMLElement):HTMLElement {\r\n        if (!el) return;\r\n        if (el.tagName === 'MAIN') return el;\r\n        return this.getParent(el.parentElement);\r\n    }\r\n    private scrollToBottom(defer:number = 100) {\r\n        this.clearTimeHandler();\r\n        let that = this;\r\n        this.timeHandler = setTimeout(() => {\r\n            var pane = document.getElementById('bottomDiv');\r\n            pane && pane.scrollIntoView();\r\n            /*\r\n            if (pane !== undefined) {\r\n                let childNodes = pane.childNodes;\r\n                let last = childNodes.item(childNodes.length-1);\r\n                (last as HTMLElement).scrollIntoView();\r\n            }\r\n            */\r\n            that.clearTimeHandler();\r\n        }, defer);\r\n    }\r\n    private topIntoView() {\r\n        var pane = document.getElementById('topDiv');\r\n        pane && pane.scrollIntoView();\r\n        /*\r\n        let childNodes = pane.childNodes;\r\n        let len = childNodes.length;\r\n        if (len === 0) return;\r\n        let first = childNodes.item(0);\r\n        (first as HTMLElement).scrollIntoView();\r\n        */\r\n    }\r\n    private bottomIntoView() {\r\n        var pane = document.getElementById('bottomDiv');\r\n        pane && pane.scrollIntoView();\r\n        /*\r\n        let childNodes = pane.childNodes;\r\n        let len = childNodes.length;\r\n        if (len === 0) return;\r\n        let last = childNodes.item(len-1);\r\n        (last as HTMLElement).scrollIntoView();\r\n        */\r\n    }\r\n    private doubleClick = () => {\r\n        var pane = document.getElementById('scrollDiv');\r\n        let main = this.getParent(pane);\r\n        if (!main) return;\r\n        if (main.scrollTop >= main.scrollHeight / 2) {\r\n            this.topIntoView();\r\n        }\r\n        else {\r\n            this.bottomIntoView();\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        let that = this;\r\n        let time = new Date();\r\n        function consume(reader: ReadableStreamReader) {\r\n            var total = 0\r\n            return new Promise((resolve, reject) => {\r\n                function uintToString(uintArray):string {\r\n                    var encodedString = String.fromCharCode.apply(null, uintArray),\r\n                        decodedString = decodeURIComponent(escape(encodedString));\r\n                    return decodedString;\r\n                }\r\n                function pump() {\r\n                    reader.read().then(({done, value}) => {\r\n                        if (done) {\r\n                            that.scrollToBottom();\r\n                            that.setState({\r\n                                seconds: (new Date().getTime() - time.getTime()),\r\n                            })\r\n                            resolve();\r\n                            return;\r\n                        }\r\n                        let text = uintToString(value);\r\n                        that.texts.push(text);\r\n                        that.setState({\r\n                            texts: that.texts,\r\n                        });\r\n                        total += value.byteLength;\r\n                        that.scrollToBottom();\r\n                        pump();\r\n                    }).catch(reject)\r\n                }\r\n                pump();\r\n            });\r\n        }\r\n        try {\r\n            await consume(this.props.res.body.getReader());\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n    render() {\r\n        let {seconds, texts} = this.state;\r\n        return <Page header={seconds>=0? \"编译完成\" : \"编译中...\"} back=\"close\">\r\n            <div id='topDiv' />\r\n            <div id='scrollDiv'\r\n                onDoubleClick={this.doubleClick} \r\n                className='py-2 px-3' \r\n                style={{wordWrap: 'break-word', whiteSpace: 'normal'}}>\r\n                {texts.map((v, i) => <pre style={{whiteSpace: 'pre-wrap'}} key={i}>{v}</pre>)}\r\n            </div>\r\n            {seconds>=0? <div className='px-3 pb-3' style={{color: 'red', fontWeight: 'bold'}}>\r\n                编译完成。共计用时{Math.floor(seconds/1000)}秒\r\n            </div> : undefined}\r\n            <div id='bottomDiv' />\r\n        </Page>;\r\n    }\r\n}","import * as React from 'react';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {IdPick, IdPickFace, List, SearchBox} from 'tonva-react-form';\r\nimport {DevModel} from './model';\r\n\r\nexport interface IdPickProps {\r\n    caption: string;\r\n    searchPlaceHolder?: string;\r\n    candidateItems: ((params:any, key:string) => Promise<any[]>) | any[];\r\n    moreCandidates: () => Promise<void>;\r\n    row: (item:any, index:number) => JSX.Element;\r\n}\r\n\r\nexport function createIdPick(props: IdPickProps):IdPick {\r\n    return function(face: IdPickFace, params: any):Promise<void> {\r\n        return new Promise<void>((resolve, reject) => {\r\n            nav.push(<IdPickPage resolve={resolve} face={face} params={params} {...props} />);\r\n        });\r\n    }\r\n}\r\n\r\ninterface IdPickPageProps extends IdPickProps {\r\n    face: IdPickFace;\r\n    resolve: (item?: any) => void;\r\n    params: any;\r\n}\r\ninterface IdPickPageState {\r\n    items?: any[];\r\n}\r\n\r\nclass IdPickPage extends React.Component<IdPickPageProps, IdPickPageState> {\r\n    private items:any[];\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: null,\r\n        }\r\n        this.itemClick = this.itemClick.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n    }\r\n    async componentDidMount() {\r\n        let {face, candidateItems, params} = this.props;\r\n        this.setState({\r\n            items: Array.isArray(candidateItems)? candidateItems : await candidateItems(params, ''),\r\n        });\r\n    }\r\n    itemClick(item:any) {\r\n        let {resolve} = this.props;\r\n        resolve(item);\r\n        nav.pop();\r\n    }\r\n    async onSearch(key: string) {\r\n        //alert('search ' + key);\r\n        //await store.dev.searchServer.first(key)\r\n        let {candidateItems, params} = this.props;\r\n        if (typeof candidateItems === 'function') {\r\n            let ret = await candidateItems(params, key);\r\n            this.setState({items: ret});\r\n        }\r\n    }\r\n    render() {\r\n        let {caption, row, searchPlaceHolder} = this.props;\r\n        return <Page header={caption} back=\"close\">\r\n            <div className=\"container\">\r\n                <SearchBox className=\"my-2\" \r\n                    onSearch={this.onSearch} \r\n                    placeholder={searchPlaceHolder}\r\n                    maxLength={100} />\r\n            </div>\r\n            <List items={this.state.items} item={{onClick:this.itemClick, render:row}} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { DevModel } from \"model\";\r\nimport { IdPickProps, createIdPick } from 'createIdPick';\r\nimport { store } from 'store';\r\nimport { Field, FormRow, StringFace, TextAreaFace, TonvaForm, SubmitResult } from 'tonva-react-form';\r\nimport { UQController } from '.';\r\nimport { VPage, nav, Page } from 'tonva-tools';\r\n\r\nconst ServerCaption = (item:DevModel.Server) => {\r\n    let {discription, cloud, ip} = item;\r\n    return <>{discription} {cloud} {ip}</>;\r\n}\r\n\r\nconst idPickServerProps: IdPickProps = {\r\n    caption: '选择服务器',\r\n    searchPlaceHolder: '搜索服务器',\r\n    candidateItems: async (params:any, key:string) => {\r\n        await store.dev.searchServer.first(key);\r\n        return store.dev.searchServer.items;\r\n    },\r\n    moreCandidates: async () => {\r\n        await store.dev.searchServer.more();\r\n    },\r\n    row: (item:DevModel.Server, index:number) => {\r\n        return <div className=\"px-3 py-2\"><ServerCaption {...item} /></div>;\r\n    },\r\n};\r\n\r\nconst urlField:Field = {name: 'url', type: 'string', required:true, maxLength:200};\r\nconst serverField:Field = {name: 'server', type: 'id'};\r\nconst dbTypeField:Field = {name: 'db_type', type: 'string', maxLength:20, defaultValue:'mysql'};\r\nconst dbField:Field = {name: 'db', type: 'string', maxLength:50, required: true};\r\nconst connectionField:Field = {name:'connection', type:'string', maxLength:250};\r\n\r\nconst urlRow = {\r\n    label: 'URL',\r\n    field: urlField,\r\n};\r\n\r\nconst serverRow = {\r\n    label: '服务器', \r\n    field: serverField,\r\n    face: {\r\n        type: 'pick-id', \r\n        initCaption: '请选择服务器', \r\n        pick: createIdPick(idPickServerProps), //this.idPick,\r\n        fromPicked: (item:DevModel.Server)=>{\r\n            return {\r\n                id: item.id, \r\n                caption: <ServerCaption {...item} />,\r\n            };\r\n        },\r\n        itemFromId: (id:number)=>store.cacheServers.get(id),\r\n    },\r\n};\r\n\r\nconst dbTypeRow:FormRow = {\r\n    label: '数据库类型',\r\n    field: dbTypeField,\r\n    face: {\r\n        type: 'string',\r\n        readonly: true,\r\n    } as StringFace\r\n};\r\n\r\nconst dbRow = {\r\n    label: '数据库名字',\r\n    field: dbField,\r\n};\r\n\r\nconst connectionRow = {\r\n    label: '连接字符串',\r\n    field: connectionField,\r\n    face: {\r\n        type: 'textarea',\r\n        maxLength: 250,\r\n        rows: 8,\r\n    } as TextAreaFace,\r\n};\r\n\r\nexport class NewServicePage extends VPage<UQController> {\r\n    private tonvaForm:TonvaForm;\r\n    private formRows:FormRow[] = [\r\n        urlRow,\r\n        serverRow,\r\n        dbTypeRow,\r\n        dbRow,\r\n        connectionRow\r\n    ];\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n    private onSubmit = async (values:any):Promise<SubmitResult | undefined> => {\r\n        values.type = 2; // uq type, to be removed\r\n        values.bindId = this.controller.uq.id;\r\n        let ret = await this.controller.saveService(values);\r\n        if (ret === 0) {\r\n            if (this.tonvaForm !== undefined) {\r\n                this.tonvaForm.formView.setError('url', '已经有Service使用这个url');\r\n            }\r\n            return;\r\n        }\r\n        nav.pop();\r\n        return;\r\n    }\r\n    private page = () => {\r\n        return <Page header=\"新建Service\">\r\n            <TonvaForm ref={t=>this.tonvaForm=t} className=\"m-3\" formRows={this.formRows} onSubmit={this.onSubmit} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { Page, VPage, nav } from \"tonva-tools\";\r\nimport { UQController } from '.';\r\nimport { DevModel } from 'model';\r\nimport { Prop, PropGrid } from 'tonva-react-form';\r\nimport { StringValueEdit, ServerSpan, TextValueEdit } from 'tools';\r\n\r\nexport class ServicePage extends VPage<UQController> {\r\n    @observable private service: DevModel.Service;\r\n    async open(service: DevModel.Service) {\r\n        this.service = service;\r\n        this.openPage(this.page);\r\n    }\r\n    private async changeProp(prop:string, value:any):Promise<any> {\r\n        return await this.controller.changeServiceProp(this.service, prop, value);\r\n    }\r\n    private onUrlChanged = async (value:any, orgValue:any):Promise<string|void> => {\r\n        let ret = await this.changeProp('url', value);\r\n        if (ret === 0) {\r\n            return 'URL已经被使用了';\r\n        }\r\n        this.service.url = value;\r\n    }\r\n    private onDbChanged = async (value:any, orgValue:any):Promise<string|void> => {\r\n        let ret = await this.changeProp('db', value);\r\n        if (ret === 0) {\r\n            return 'Db已经被使用了';\r\n        }\r\n        this.service.db = value;\r\n    }\r\n    private onDbTypeChanged = async (value:string, orgValue:any):Promise<string|void> => {\r\n        if (value === undefined || value === null) return;\r\n        if (value.toLowerCase().trim() !== 'mysql') return '目前只支持mysql';\r\n        let ret = await this.changeProp('db_type', value);\r\n        this.service.db_type = value;\r\n    }\r\n    private onConnectionChanged = async (value:string, orgValue:any):Promise<string|void> => {        \r\n        await this.changeProp('connection', value);\r\n        this.service.connection = value;\r\n    }\r\n    private onDeleteClick = async () => {\r\n        if (confirm(\"真的要删除Service吗？删除了不可恢复，需要重新录入。\")!==true) return;\r\n        await this.controller.delService(this.service);\r\n        nav.pop();\r\n    }\r\n    private page = () => {\r\n        let {uq} = this.controller;\r\n        let {type, name, discription, server, url, db, db_type, connection} = this.service;\r\n        let rows:Prop[] = [\r\n            '',\r\n            /*\r\n            {\r\n                type: 'component',\r\n                component: <div className=\"px-3 py-2\">\r\n                    <b>{name}</b><br/><Muted>{discription}</Muted>\r\n                </div>,\r\n            },\r\n            '',*/\r\n            {\r\n                type: 'string',\r\n                name: 'url',\r\n                label: 'URL',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"修改URL\"\r\n                    value={url}\r\n                    onChanged={this.onUrlChanged} />)\r\n            },\r\n            {\r\n                type: 'component',\r\n                label: '服务器',\r\n                component: <ServerSpan id={server} />\r\n            },\r\n            {\r\n                type: 'string',\r\n                name: 'db_type',\r\n                label: '数据库类型',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"数据库类型\"\r\n                    value={db_type}\r\n                    onChanged={this.onDbTypeChanged} />)\r\n            },\r\n            {\r\n                type: 'string',\r\n                name: 'db',\r\n                label: '数据库名',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"数据库名字\"\r\n                    value={db}\r\n                    onChanged={this.onDbChanged} />)\r\n            },\r\n            {\r\n                type: 'string',\r\n                name: 'connection',\r\n                label: '连接字符串',\r\n                onClick: ()=>nav.push(<TextValueEdit\r\n                    title=\"连接字符串\"\r\n                    value={connection}\r\n                    onChanged={this.onConnectionChanged} />)\r\n            },\r\n        ];\r\n        let right = <button onClick={this.onDeleteClick} className=\"btn btn-success\">删除</button>;\r\n        return <Page header={'UQ - ' + uq.name} right={right}>\r\n            <PropGrid rows={rows} values={this.service} />\r\n        </Page>\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { UQController } from \".\";\r\nimport { VPage, nav, Page } from \"tonva-tools\";\r\nimport { SubmitResult, TonvaForm } from \"tonva-react-form\";\r\n\r\nconst formRows = [\r\n    {\r\n        label: '名称', \r\n        field: {name: 'name', type: 'string', maxLength: 100, required: true},\r\n    },\r\n    {\r\n        label: '描述',\r\n        field: {name: 'discription', type: 'string', maxLength: 250},\r\n        face: {type: 'textarea'}\r\n    },\r\n    //{\r\n    //    label: '入口',\r\n    //    field: {name: 'access', type: 'string', maxLength: 250},\r\n    //    face: {type: 'textarea', placeholder: '逗号分隔的入口名'}\r\n    //},\r\n];\r\n\r\n\r\nexport abstract class EditBasePage extends VPage<UQController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n    protected onSubmit = async (values:any):Promise<SubmitResult> => {\r\n        await this.controller.saveUq(values);\r\n        nav.pop();\r\n        return;\r\n    }\r\n    protected page: ()=>JSX.Element;\r\n    protected form(initValues:any):JSX.Element {\r\n        return <TonvaForm\r\n            className=\"m-3\"\r\n            formRows={formRows} \r\n            onSubmit={this.onSubmit} initValues={initValues} />\r\n    }\r\n}\r\n\r\nexport class EditPage extends EditBasePage {\r\n    protected page = () => {\r\n        let {uq} = this.controller;\r\n        let {name} = uq;\r\n        return <Page header={'修改UQ - ' + name} back=\"close\">\r\n            {this.form(uq)}\r\n        </Page>;\r\n    }\r\n}\r\n\r\nexport class NewPage extends EditBasePage {\r\n    protected page = () => {\r\n        return <Page header={'新建UQ'} back=\"close\">\r\n            {this.form({})}\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, nav } from 'tonva-tools';\r\nimport { UQController } from '.';\r\nimport { IdDates, UnitSpan, ServerSpan } from 'tools';\r\nimport { Prop, Media, LMR, FA, PropGrid, Muted, List, EasyDate, DropdownActions } from 'tonva-react-form';\r\nimport { DevModel } from 'model';\r\nimport { EditPage } from './editPage';\r\n\r\nexport class UQPage extends VPage<UQController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private editItem = async () => {\r\n        await this.openVPage(EditPage);\r\n        //nav.push(<EditAppPage {...this.props} />);\r\n    }\r\n\r\n    private deleteItem = async () => {\r\n        if (confirm('真的要删除UQ吗？') === true) {\r\n            await this.controller.deleteUq();\r\n            nav.pop();\r\n        }\r\n    }\r\n\r\n    private page = ():JSX.Element => {\r\n        let {onUqUpload, serviceClick, uq, services} = this.controller;\r\n        let {id, name, discription, access, unit, date_init, date_update} = uq;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let menuItems = [\r\n            {caption:'修改UQ', action:this.editItem, icon:'edit' },\r\n            {caption:'删除', action:this.deleteItem, icon:'trash-o' }\r\n        ];\r\n        let right = <DropdownActions actions={menuItems} />;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <LMR className=\"py-2\"\r\n                    left={<FA name=\"database\" className=\"text-primary fa-2x mr-3\" />}>\r\n                    <div><b>{name}</b></div>\r\n                    {disp}\r\n                </LMR>\r\n            },\r\n            {\r\n                type: 'component', \r\n                label: '开发号', \r\n                component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> \r\n            },\r\n           '',\r\n           {\r\n                type: 'component', \r\n                label: '编译代码', \r\n                component: <LMR onClick={()=>onUqUpload()} className=\"w-100 py-2 cursor-pointer\" \r\n                    left=\"上传编译uq代码\" right={<FA className=\"align-self-center\" name=\"chevron-right\" />} />\r\n            },\r\n            /*\r\n            {type: 'component', label: 'ACCESS', component: <div className=\"py-2\">{\r\n                access? \r\n                    access.split(',').join(', ')\r\n                    : <Muted>(全)</Muted>\r\n            }</div> },\r\n            */\r\n        ];\r\n        return <Page header={'UQ - ' + name} right={right}>\r\n            <PropGrid rows={rows} values={uq} />\r\n            <div className=\"d-flex mx-3 mt-3 mb-1 align-items-end\">\r\n                <Muted style={{display:'block', flex:1}}>Service</Muted>\r\n                <button\r\n                    className=\"btn btn-outline-primary btn-sm\"\r\n                    onClick={()=>this.controller.showNewServicePage()}>\r\n                    增加\r\n                </button>\r\n            </div>\r\n            <List items={services} item={{render:this.renderService, onClick:serviceClick}} />\r\n        </Page>;\r\n    }\r\n    private renderService(service:DevModel.Service, index:number):JSX.Element {\r\n        let {url, server, db, db_type, compile_time} = service;\r\n        let compile = !compile_time?\r\n            <Muted>未编译</Muted> :\r\n            <><Muted>编译: </Muted><EasyDate date={compile_time}/></>;\r\n\r\n        return <LMR className=\"d-flex w-100 align-items-center cursor-pointer py-2 px-3\"\r\n            right={<small>{compile}</small>}\r\n            >\r\n            <div>\r\n                <div>{url}</div>\r\n                <div>{db_type} {db}</div>\r\n                <Muted><ServerSpan id={server} /></Muted>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { UQController } from '.';\r\nimport { List, LMR, Badge, Muted, FA } from 'tonva-react-form';\r\nimport { DevModel } from 'model';\r\nimport { NewPage } from './editPage';\r\n\r\nexport class ListPage extends VPage<UQController> {\r\n    async open(param:any) {\r\n        this.openPage(this.page);\r\n    }\r\n    private newItem = () => {\r\n        this.controller.uq = undefined;\r\n        this.openVPage(NewPage);\r\n    }\r\n    private page = ():JSX.Element => {\r\n        let {uqList: list, listRowClick} = this.controller;\r\n        let right = <button className='btn btn-secondary btn-sm' onClick={()=>this.newItem()}><FA name=\"plus\" /></button>;\r\n        return <Page header=\"UQ\" right={right}>\r\n            <List items={list} item={{render: this.listRow, onClick: listRowClick}} />\r\n        </Page>\r\n    }\r\n    private listRow = (item:DevModel.UQ):JSX.Element => {\r\n        let {name, discription, service_count} = item;\r\n        return <LMR className=\"py-1 px-3 align-items-center\"\r\n            left={<FA name=\"database\" className=\"text-primary fa-lg\" />}\r\n            right={<>{service_count}</>}>\r\n            <div className=\"py-2 px-3\">\r\n                <div><b>{name}</b></div>\r\n                <div><Muted>{discription}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { observable } from 'mobx';\r\nimport { nav, Controller } from 'tonva-tools';\r\nimport { DevModel } from '../../model';\r\nimport { UqUpload, UpUploadProps } from './uqUpload';\r\nimport { devApi } from 'api';\r\nimport { NewServicePage } from './newServicePage';\r\nimport { ServicePage } from './servicePage';\r\nimport { UQPage } from './uqPage';\r\nimport { ListPage } from './listPage';\r\n\r\nexport class UQController extends Controller {\r\n    private unitId: number;\r\n    uq: DevModel.UQ;\r\n    access: string;\r\n    entities: string;\r\n    @observable uqList: DevModel.UQ[];\r\n    @observable services: DevModel.Service[];\r\n    protected async internalStart(unitId:any) {\r\n        this.unitId = unitId;\r\n        this.uqList = await devApi.uqs(this.unitId);\r\n        this.openVPage(ListPage);\r\n    }\r\n\r\n    listRowClick = async (item:DevModel.UQ) => {\r\n        this.uq = item;\r\n        await this.loadUqEntities(item.id);\r\n        this.openVPage(UQPage);\r\n    }\r\n\r\n    private async loadUqEntities(uqId: number) {\r\n        let ret = await devApi.uqGetEntities(this.unitId, uqId);\r\n        let r0 = ret[0][0];\r\n        this.access = r0.access;\r\n        this.entities = r0.entities;\r\n        this.services = ret[1];\r\n    }\r\n\r\n    serviceClick = (service: DevModel.Service) => {\r\n        this.openVPage(ServicePage, service);\r\n    }\r\n\r\n    onUqUpload = async() => {\r\n        let onDispose = () => {\r\n        };\r\n        nav.push(<UqUpload uq={this.uq} services={this.services} />, onDispose);\r\n    }\r\n\r\n    saveUq = async (values: DevModel.UQ) => {\r\n        let uq: DevModel.UQ;\r\n        if (this.uq === undefined) {\r\n            uq = _.clone(values);\r\n        }\r\n        else {\r\n            uq = _.clone(this.uq);\r\n            _.merge(uq, values);\r\n        }\r\n        uq.unit = this.unitId;\r\n        let ret = await devApi.saveUq(uq);\r\n        uq.id = ret;\r\n        this.uqList.push(uq);\r\n    }\r\n\r\n    deleteUq = async () => {\r\n        await devApi.delUq(this.unitId, this.uq.id);\r\n        let index = this.uqList.findIndex(v => v.id === this.uq.id);\r\n        if (index >= 0) this.uqList.splice(index);\r\n    }\r\n\r\n    async changeServiceProp(service: DevModel.Service, prop:string, value:any):Promise<any> {\r\n        return await devApi.changeServiceProp(this.unitId, service.id, prop, value);\r\n    }\r\n\r\n    async saveService(service: DevModel.Service):Promise<number> {\r\n        let svc = _.clone(service);\r\n        svc.unit = this.unitId;\r\n        let ret = await devApi.saveService(svc);\r\n        svc.id = ret;\r\n        this.services.push(svc);\r\n        return ret;\r\n    }\r\n\r\n    async delService(service: DevModel.Service) {\r\n        await devApi.delService(this.unitId, service.id);\r\n        let index = this.services.findIndex(v => v.id == service.id);\r\n        if (index >= 0) this.services.splice(index);\r\n    }\r\n\r\n    showNewServicePage = async () => {\r\n        await this.openVPage(NewServicePage);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {LMR, Badge, Muted} from 'tonva-react-form';\r\n\r\nexport interface RowProps {\r\n    icon: string;\r\n    main: string|JSX.Element;\r\n    vice: string|JSX.Element;\r\n}\r\n\r\nexport class Row extends React.Component<RowProps> {\r\n    render() {\r\n        let {icon, main, vice} = this.props;\r\n        return <LMR className=\"py-1 px-3 align-items-stretch\"\r\n            left={<Badge size=\"sm\" className=\"pt-1\"><img src={icon} /></Badge>}>\r\n            <div className=\"px-3\">\r\n                <div><b>{main}</b></div>\r\n                <div><Muted>{vice}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport _ from 'lodash';\r\nimport {FormRow, EasyDate, Media, \r\n    Prop, ListProp, PropGrid, List, SearchBox, LMR, Badge, Muted} from 'tonva-react-form';\r\nimport {UnitSpan, IdDates, ServerSpan} from '../tools';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {DevModel} from '../model';\r\nimport {store} from '../store';\r\nimport {Row} from './row';\r\nimport {ObjViewProps} from './ObjViewProps';\r\n\r\n@observer\r\nclass Info extends React.Component<DevModel.Bus> {\r\n    /*\r\n    private rows: Prop[];\r\n    constructor(props:any) {\r\n        super(props);\r\n        let {unit, name, discription, schema, date_init, date_update} = this.props;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={name} discription={disp} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                label: 'Schema',\r\n                vAlign: 'stretch',\r\n                component: <SchemaView />,\r\n            },\r\n        ];\r\n    }*/\r\n    async componentDidMount() {\r\n        //await store.dev.buses.loadCurApis();\r\n    }\r\n    render() {\r\n        let {unit, name, discription, schema, date_init, date_update} = this.props;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={name} discription={disp} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                label: 'Schema',\r\n                vAlign: 'stretch',\r\n                component: <SchemaView />,\r\n            },\r\n        ];\r\n        return <div>\r\n            <PropGrid rows={rows} values={this.props} />\r\n        </div>\r\n    }\r\n}\r\n\r\n@observer\r\nexport class SchemaView extends React.Component {\r\n    render() {\r\n        let bus = store.dev.buses.cur;\r\n        if (bus === null) return '...';\r\n        let content = bus.schema;\r\n        return <div className=\"d-flex py-2 w-100 align-items-center\" style={{flex:1}}>\r\n            <pre>\r\n                {content}\r\n            </pre>\r\n        </div>;\r\n\r\n    }\r\n}\r\n\r\nconst busesProps:ObjViewProps<DevModel.Bus> = {\r\n    title: 'BUS',\r\n    formRows: [\r\n        {\r\n            label: '名称', \r\n            field: {name: 'name', type: 'string', maxLength: 100, required: true},\r\n        },\r\n        {\r\n            label: '描述',\r\n            field: {name: 'discription', type: 'string', maxLength: 250},\r\n            face: {type: 'textarea'}\r\n        },\r\n        {\r\n            label: 'Schema',\r\n            field: {name: 'schema', type: 'string', maxLength: 2500},\r\n            face: {type: 'textarea', rows: 8}\r\n        },\r\n    ],\r\n    row: (item:DevModel.Bus):JSX.Element => {\r\n        let {owner, name, discription} = item;\r\n        return <Row icon={appItemIcon} main={owner + ' / ' + name} vice={discription} />;\r\n    },\r\n    items: ()=>store.dev.buses,\r\n    repeated: {\r\n        name: 'name',\r\n        err: '跟已有的名称重复',\r\n    },\r\n    info: Info,\r\n};\r\n\r\nexport default busesProps;\r\n","import * as React from 'react';\r\nimport {Prop, PropGrid, LMR, Muted, FA} from 'tonva-react-form';\r\nimport {UnitSpan, IdDates} from '../tools';\r\nimport {DevModel} from '../model';\r\nimport {store} from '../store';\r\nimport {ObjViewProps} from './ObjViewProps';\r\n\r\nclass Info extends React.Component<DevModel.Server> {\r\n    render() {\r\n        let {discription, cloud, ip, unit, date_init, date_update} = this.props;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;        \r\n        //<Media icon={appIcon} main={discription} discription={ip} />},\r\n        let rows:Prop[] = [\r\n            '',\r\n            {type: 'component', component: <LMR className=\"py-2\"\r\n                left={<FA name=\"server\" className=\"text-primary fa-2x mr-3\" />}>\r\n                <div><b>{ip}</b></div>\r\n                {disp}\r\n            </LMR>},\r\n            '',\r\n            {type: 'component', label: '开发号', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            {type: 'string', label: '云服务', name: 'cloud'},\r\n        ];\r\n        return <div>\r\n            <PropGrid rows={rows} values={this.props} />\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst serversProps:ObjViewProps<DevModel.Server> = {\r\n    title: 'Server',\r\n    info: Info,\r\n    formRows: [\r\n        {\r\n            label: '描述', \r\n            field: {name: 'discription', type: 'string', maxLength: 50, required: true},\r\n        },\r\n        {\r\n            label: '云服务商', \r\n            field: {name: 'cloud', type: 'string', maxLength: 20, required: true},\r\n        },\r\n        {\r\n            label: 'IP地址', \r\n            field: {name: 'ip', type: 'string', maxLength: 20},\r\n        },\r\n    ],\r\n    row: (item: DevModel.Server):JSX.Element => {\r\n        let {discription, cloud} = item;\r\n        //return <Row main={item.discription} vice={<>{item.cloud}  {item.ip}</>} />;\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n            left={<FA name=\"server\" className=\"text-primary fa-lg\" />}>\r\n            <div className=\"px-3\">\r\n                <div><b>{discription}</b></div>\r\n                <div><Muted>{cloud}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    },\r\n    items: ()=>store.dev.servers,\r\n    repeated: {\r\n        name: 'discription',\r\n        err: '重复的描述',\r\n    }\r\n};\r\n\r\nexport default serversProps;\r\n","import * as React from 'react';\r\nimport {Step, Field, Prop, PropGrid, Media} from 'tonva-react-form';\r\nimport {UnitSpan, IdDates, ServerSpan, UqSpan, AppSpan} from '../tools';\r\nimport {Row} from './row';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {DevModel} from '../model';\r\nimport {store} from '../store';\r\nimport {ObjViewProps} from './ObjViewProps';\r\nimport {createIdPick, IdPickProps} from '../createIdPick';\r\n\r\nclass Info extends React.Component<DevModel.Service> {\r\n    render() {\r\n        let {url, type, discription, server, app, uq, unit, date_init, date_update} = this.props;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let obj:Prop;\r\n        if (app !== undefined)\r\n            obj = {type: 'component', label: 'APP', component: <div className=\"py-2\"><AppSpan id={app} isLink={true} /></div> };\r\n        else\r\n            obj = {type: 'component', label: 'UQ', component: <div className=\"py-2\"><UqSpan id={uq} isLink={true} /></div> };\r\n\r\n        let rows:Prop[] = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={discription} discription={url} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            {type: 'component', label: '服务器', component: <div className=\"py-2\"><ServerSpan id={server} isLink={true} /></div> },\r\n            obj,\r\n        ];\r\n        return <div>\r\n            <PropGrid rows={rows} values={this.props} />\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst idPickServerProps: IdPickProps = {\r\n    caption: '选择服务器',\r\n    searchPlaceHolder: '搜索服务器',\r\n    candidateItems: async (params:any, key:string) => {\r\n        await store.dev.searchServer.first(key);\r\n        return store.dev.searchServer.items;\r\n    },\r\n    moreCandidates: async () => {\r\n        await store.dev.searchServer.more();\r\n    },\r\n    row: (item:DevModel.Server, index:number) => {\r\n        return <div className=\"px-3 py-2\">{item.discription + ' ' + item.cloud + ' ' + item.ip}</div>;\r\n    },\r\n};\r\n\r\nconst idPickAppProps: IdPickProps = {\r\n    caption: '选择APP',\r\n    searchPlaceHolder: '搜索APP',\r\n    candidateItems: async (params:any, key:string) => {\r\n        await store.dev.searchApp.first(key);\r\n        return store.dev.searchApp.items;\r\n    },\r\n    moreCandidates: async () => {\r\n        await store.dev.searchApp.more();\r\n    },\r\n    row: (item:DevModel.App, index:number) => {\r\n        return <div>{item.name + ' ' + item.discription}</div>;\r\n    },\r\n};\r\n\r\nconst idPickUqProps: IdPickProps = {\r\n    caption: '选择UQ',\r\n    searchPlaceHolder: '搜索UQ',\r\n    candidateItems: async (params:any, key:string) => {\r\n        await store.dev.searchUq.first(key);\r\n        return store.dev.searchUq.items;\r\n    },\r\n    moreCandidates: async () => {\r\n        await store.dev.searchUq.more();\r\n    },\r\n    row: (item:DevModel.UQ, index:number) => {\r\n        return <div>{item.name + ' ' + item.discription}</div>;\r\n    },\r\n};\r\n\r\nconst serviceTypeNames = ['中心', '交换', 'APP', 'UQ'];\r\nconst urlField:Field = {name: 'url', type: 'string', required:true, maxLength:200};\r\nconst discriptionField:Field = {name: 'discription', type: 'string', maxLength:100};\r\nconst serverField:Field = {name: 'server', type: 'id'};\r\nconst bindTypeField:Field = {name: 'type', type: 'number'};\r\nconst bindIdField:Field = {name: 'bindId', type: 'number'};\r\nconst authField:Field = {name: 'auth', type: 'string', maxLength:200};\r\n\r\nconst urlRow = {\r\n    label: 'URL',\r\n    field: urlField,\r\n};\r\nconst discriptionRow = {\r\n    label: '描述',\r\n    field: discriptionField,\r\n};\r\n\r\nconst serverRow = {\r\n    label: '服务器', \r\n    field: serverField,\r\n    face: {\r\n        type: 'pick-id', \r\n        initCaption: '请选择服务器', \r\n        pick: createIdPick(idPickServerProps), //this.idPick,\r\n        fromPicked: (item:DevModel.Server)=>{\r\n            return {\r\n                id: item.id, \r\n                caption: item.discription + ' ' + item.ip,\r\n            };\r\n        },\r\n        itemFromId: (id:number)=>store.cacheServers.get(id),\r\n    },\r\n};\r\n\r\nconst servicesProps:ObjViewProps<DevModel.Service> = {\r\n    title: 'Service',\r\n    info: Info,\r\n    formRows: [\r\n        urlRow,\r\n        discriptionRow,\r\n        serverRow,\r\n    ],\r\n    steps: {\r\n        step1: {\r\n            formRows: [\r\n                {\r\n                    label: '服务类型', \r\n                    field: bindTypeField,\r\n                    face: {\r\n                        type: 'select', \r\n                        list: [\r\n                            {text:'APP', value:2}, \r\n                            {text:'UQ', value:3}\r\n                        ]\r\n                    }\r\n                },\r\n            ],\r\n            next: (values:any) => {\r\n                switch (values['type']) {\r\n                    case 2: return 'appStep';\r\n                    case 3: return 'uqStep';\r\n                }\r\n            },\r\n            ex: '服务类型',\r\n        },\r\n        appStep: {\r\n            formRows: [\r\n                urlRow,\r\n                discriptionRow,\r\n                serverRow,\r\n                {\r\n                    label: 'APP', \r\n                    field: bindIdField,\r\n                    face:{\r\n                        type: 'pick-id', \r\n                        initCaption: '请选择APP', \r\n                        pick: createIdPick(idPickAppProps), //this.idPick,\r\n                        fromPickedItem: (item:DevModel.App)=>{\r\n                            return {id: item.id, caption: item.name + ' ' + item.discription}\r\n                        },\r\n                    },\r\n                },\r\n            ],\r\n            next: undefined,\r\n            ex: '绑定APP'\r\n        },\r\n        uqStep: {\r\n            formRows: [\r\n                urlRow,\r\n                discriptionRow,\r\n                serverRow,\r\n                {\r\n                    label: 'UQ', \r\n                    field: bindIdField,\r\n                    face:{\r\n                        type: 'pick-id', \r\n                        initCaption: '请选择UQ', \r\n                        pick: createIdPick(idPickUqProps), //this.idPick,\r\n                        fromPickedItem: (item:DevModel.UQ)=>{\r\n                            return {id: item.id, caption: item.name + ' ' + item.discription}\r\n                        },\r\n                    },\r\n                },                \r\n                { label: 'Auth', field: authField },\r\n            ],\r\n            next: undefined,\r\n            ex: '绑定UQ',\r\n        },\r\n    },\r\n    stepHeader: (step:Step, num:number):JSX.Element => {\r\n        return <div className=\"d-flex justify-content-center align-items-center\">\r\n            <h4><small className=\"text-muted\">第{num}步</small> {step.ex}</h4>\r\n        </div>;\r\n    },\r\n    row: (item:DevModel.Service):JSX.Element => {\r\n        return <Row\r\n            icon={appItemIcon}\r\n            main={item.url}\r\n            vice={serviceTypeNames[item.type] + ': ' + item.discription} />;\r\n    },\r\n    items: ()=>store.dev.services,\r\n    repeated: {\r\n        name: 'url',\r\n        err: 'url重复',\r\n    }\r\n};\r\n\r\nexport default servicesProps;\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {FormRow, TonvaForm, Step, MultiStep, DropdownActions, Action, List, FA, SubmitResult} from 'tonva-react-form';\r\nimport {DevModel} from '../model';\r\nimport { ObjViewProps } from './ObjViewProps';\r\n\r\n@observer\r\nexport class ObjView<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    async componentDidMount() {\r\n        await this.props.items().load();\r\n    }\r\n    //converter(item:T):ListItem {\r\n    //    return this.props.converter(item);\r\n    //}\r\n    newItem() {\r\n        this.props.items().cur = undefined;\r\n        nav.push(<New {...this.props} />);\r\n    }\r\n    itemClick = (item:T) => {\r\n        this.props.items().cur = observable(item);\r\n        nav.push(<Info {...this.props} />);\r\n    }\r\n    render() {\r\n        let {title, items} = this.props;\r\n        let right = <button className='btn btn-secondary btn-sm' onClick={()=>this.newItem()}><FA name=\"plus\" /></button>;\r\n        return <Page header={title} right={right}>\r\n            <List items={items().items}\r\n                item={{render: this.props.row, onClick: this.itemClick}}\r\n                // converter={this.props.converter} \r\n                //itemClick={this.itemClick} \r\n                />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass New<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    async onSubmit(values:any):Promise<SubmitResult> {\r\n        let ret = await this.props.items().saveCur(values);\r\n        if (ret === true) {\r\n            nav.pop();\r\n        }\r\n        else {\r\n            let repeated = this.props.repeated;\r\n            //this.formView.setError(repeated.name, repeated.err);\r\n        }\r\n        return;\r\n    }\r\n    render() {\r\n        let content;\r\n        let {title, steps, stepHeader} = this.props;\r\n        let {formRows, items} = this.props;\r\n        if (steps !== undefined) {\r\n            content = <MultiStep className=\"mt-4\" header={stepHeader} steps={steps} first=\"step1\" onSubmit={this.onSubmit} />;\r\n        }\r\n        else if (formRows !== undefined) {\r\n            content = <TonvaForm \r\n                className=\"m-3\"\r\n                formRows={formRows} \r\n                onSubmit={this.onSubmit} initValues={items().cur} />;\r\n        }\r\n        else {\r\n            content = \"ObjViewProps: no steps and no formRows\";\r\n        }\r\n        return <Page header={'新增'+title}>\r\n            {content}\r\n        </Page>\r\n    }\r\n}\r\n\r\n@observer\r\nclass Info<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    private menuItems = [\r\n        {caption:'修改' + this.props.title, action:this.editItem.bind(this), icon:'edit' },\r\n        {caption:'删除', action:this.deleteItem.bind(this), icon:'trash-o' }\r\n    ];\r\n    async deleteItem() {\r\n        if (confirm('真的要删除吗？系统删除时并不会检查相关引用，请谨慎') === true) {\r\n            await this.props.items().del();\r\n            nav.pop();\r\n        }\r\n    }\r\n    editItem() {\r\n        nav.push(<Edit {...this.props} />);\r\n    }\r\n    render() {\r\n        let actions = [];\r\n        let ex = this.props.extraMenuActions;\r\n        if (ex !== undefined) actions.push(...ex);\r\n        actions.push(...this.menuItems);        \r\n        let right = <DropdownActions actions={actions} />\r\n        let item = this.props.items().cur;\r\n        return <Page header={this.props.title + ' - 详细资料'} right={right}>\r\n            <this.props.info {...item} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass Edit<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    private actions = [\r\n        {caption:'删除', action:this.deleteItem.bind(this), icon:'trash-o' }\r\n    ];\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    componentWillMount() {\r\n    }\r\n    async onSubmit(values:any):Promise<SubmitResult> {\r\n        await this.props.items().saveCur(values);\r\n        nav.pop();\r\n        return;\r\n    }\r\n    async deleteItem() {\r\n        if (confirm('真的要删除吗？系统删除时并不会检查相关引用，请谨慎') === true) {\r\n            await this.props.items().del();\r\n            nav.pop();\r\n        }\r\n    }\r\n    render() {\r\n        let right = <DropdownActions actions={this.actions} />\r\n        return <Page header={'修改 '+this.props.title} right={right} back=\"close\">\r\n            <TonvaForm \r\n                className=\"m-3\"\r\n                formRows={this.props.formRows} \r\n                onSubmit={this.onSubmit} initValues={this.props.items().cur} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { List, SearchBox, LMR, FA } from 'tonva-react-form';\r\nimport { UsersController, UserApps, AppUsers } from './cUsers';\r\n\r\nexport class VApps extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private renderRow = (appUsers: AppUsers, index:number):JSX.Element => {\r\n        let {app, users} = appUsers;\r\n        let {id, name, discription} = app;\r\n        let right = <small className=\"text-muted\">{discription}</small>;\r\n        return <div className=\"d-block px-3 py-2\">\r\n            <LMR className=\"mb-2\" right={right}>\r\n                <FA name=\"address-card-o\" className=\"text-primary mr-3\" />\r\n                <b>{name}</b>\r\n            </LMR>\r\n            <div>\r\n                <small className=\"text-muted\">用户: </small>\r\n                {users.length===0?'[无]':users.map(u => u.assigned || u.nick || u.name).join(', ')}\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {appUsersList, searchApp, onAppsClick} = this.controller;\r\n        let searchBox = <SearchBox className=\"w-100 pr-1\" \r\n            onSearch={searchApp} \r\n            placeholder=\"搜索App\" \r\n            allowEmptySearch={true} />;\r\n        return <Page header={searchBox}>\r\n            <List items={appUsersList} \r\n                item={{render: this.renderRow, onClick:onAppsClick,  key: (item=>item.app.id)}} />\r\n        </Page>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { List, SearchBox, LMR, FA } from 'tonva-react-form';\r\nimport { UsersController, UserApps } from './cUsers';\r\n\r\nexport class VUsers extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private renderRow = (userApps: UserApps, index:number):JSX.Element => {\r\n        let {user, apps} = userApps;\r\n        let {id, name, nick, icon, assigned} = user;\r\n        return <div className=\"d-block px-3 py-2\">\r\n            <div className=\"mb-2\">\r\n                <FA name=\"user-o\" className=\"text-primary mr-3\" />\r\n                <b>{assigned || nick || name}</b>\r\n            </div>\r\n            <div>\r\n                <small className=\"text-muted\">App: </small>\r\n                {apps.length===0?'[无]':apps.map(a => a.name).join(', ')}\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {userAppsList, searchUser, onUsersClick} = this.controller;\r\n        let searchBox = <SearchBox className=\"w-100 pr-1\" \r\n            onSearch={searchUser} \r\n            placeholder=\"搜索用户\" \r\n            allowEmptySearch={true} />;\r\n        return <Page header={searchBox}>\r\n            <List items={userAppsList} \r\n                item={{render: this.renderRow, onClick:onUsersClick, key: (item=>item.user.id)}} />\r\n        </Page>;\r\n    });\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { List, SearchBox, LMR, Muted } from 'tonva-react-form';\r\nimport { UsersController, UserApps, AppUsers, User } from './cUsers';\r\n\r\nexport class VApp extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curApp, curAppUsers, onAppEditUsers} = this.controller;\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={()=>onAppEditUsers()}>增减用户</button>;\r\n        return <Page header={'App - ' + (curApp.name)} right={right}>\r\n            <List items={curAppUsers} item={{render:this.renderApp}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderApp = (user: User, index:number):JSX.Element => {\r\n        let {name, nick, assigned} = user;\r\n        let content:any;\r\n        if (assigned)\r\n            content = <span>{assigned} &nbsp; <small className=\"text-muted\">{name}</small></span>;\r\n        else if (nick)\r\n            content = <span>{nick} &nbsp; <small className=\"text-muted\">{name}</small></span>;\r\n        else\r\n            content = <>{name}</>\r\n        return <div className=\"px-3 py-2\">{content}</div>\r\n    }\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { List, SearchBox, LMR } from 'tonva-react-form';\r\nimport { UsersController, UserApps, AppUsers, App } from './cUsers';\r\n\r\nexport class VUser extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curUser, curUserApps, onUserEditApps} = this.controller;\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={()=>onUserEditApps()}>增减App</button>;\r\n        return <Page header={'用户 - ' + (curUser.assigned || curUser.nick || curUser.name)}\r\n            right={right}>\r\n            <List items={curUserApps} item={{render:this.renderApp}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderApp = (app: App, index:number):JSX.Element => {\r\n        let {name, discription} = app;\r\n        return <div className=\"px-3 py-2\">{name} {discription}</div>\r\n    }\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { List, SearchBox, LMR, Muted, FA } from 'tonva-react-form';\r\nimport { UsersController, UserApps, AppUsers, User, EditUser } from './cUsers';\r\n\r\nexport class VAppEditUsers extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curApp, appEditUsers, onAppEditUsers} = this.controller;\r\n        return <Page header={curApp.name + ' - 增减用户'} >\r\n            <List items={appEditUsers} item={{render:this.renderUser}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderUser = (editUser: EditUser, index:number):JSX.Element => {\r\n        let {name, nick, assigned, bind} = editUser;\r\n        let content:any;\r\n        if (assigned)\r\n            content = <>{assigned} <Muted>{name}</Muted></>;\r\n        else if (nick)\r\n            content = <>{nick} <Muted>{name}</Muted></>;\r\n        else\r\n            content = <>{name}</>\r\n        let right = <input type=\"checkbox\" defaultChecked={bind===1} \r\n            onChange={(evt)=>this.onUserChanged(editUser, evt.target.checked)} />;\r\n        return <LMR className=\"px-3 py-2 align-items-center\" right={right}>\r\n            {content}\r\n        </LMR>\r\n    }\r\n\r\n    private onUserChanged = async (editUser: EditUser, checked:boolean) => {\r\n        await this.controller.bindAppUser(editUser, checked);\r\n        editUser.bind = checked===true? 1: 0;\r\n    }\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { List, SearchBox, LMR } from 'tonva-react-form';\r\nimport { UsersController, UserApps, AppUsers, App, EditApp } from './cUsers';\r\n\r\nexport class VUserEditApps extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curUser, userEditApps, onUserEditApps} = this.controller;\r\n        return <Page header={'增减App - ' + (curUser.assigned || curUser.nick || curUser.name)}>\r\n            <List items={userEditApps} item={{render:this.renderApp}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderApp = (editApp: EditApp, index:number):JSX.Element => {\r\n        let {name, discription, bind} = editApp;\r\n        let right = <input type=\"checkbox\" defaultChecked={bind===1} \r\n            onChange={(evt)=>this.onAppChanged(editApp, evt.target.checked)} />;\r\n        return <LMR className=\"px-3 py-2\" right={right}>\r\n            {name} {discription}\r\n        </LMR>\r\n    }\r\n\r\n    private onAppChanged = async (editApp: EditApp, checked:boolean) => {\r\n        await this.controller.bindUserApp(editApp, checked);\r\n        editApp.bind = checked===true? 1: 0;\r\n    }\r\n}","import * as React from 'react';\r\nimport { VPage, Page, Image, nav } from \"tonva-tools\";\r\nimport { UsersController, User } from \"./cUsers\";\r\nimport { SearchBox } from 'tonva-react-form';\r\nimport { mainApi } from 'api';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class VAddUser extends VPage<UsersController> {\r\n    @observable private user: User = null;\r\n    //@observable private addedUser: User;\r\n    private searchBox: SearchBox;\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(():JSX.Element => {\r\n        let searchBox = <SearchBox ref={v=>this.searchBox=v}\r\n            className=\"w-100\"\r\n            onSearch={this.onSearch}\r\n            onFocus={this.onSearchFocus}\r\n            placeholder=\"用户全名/手机号/邮箱\"\r\n             />;\r\n        let content:any;\r\n        if (this.user === null) {\r\n        }\r\n        else if (this.user === undefined) {\r\n            content = <div className=\"text-info p-3\">没有找到用户</div>;\r\n        }\r\n        else {\r\n            let {name, nick, icon} = this.user;\r\n            let divUser:any;\r\n            if (nick) {\r\n                divUser = <><div><b>{nick}</b></div><div>{name}</div></>;\r\n            }\r\n            else {\r\n                divUser = <div><b>{name}</b></div>;\r\n            }\r\n            content = <div>\r\n                <div className=\"m-3 p-3 d-flex bg-white\">\r\n                    <Image src={icon} />\r\n                    <div className=\"ml-3\">{divUser}</div>\r\n                </div>\r\n                <div className=\"d-flex justify-content-center\">\r\n                    <button className=\"btn btn-success text-center\" onClick={this.onAddUser}>增加用户</button>\r\n                </div>\r\n            </div>;\r\n        }\r\n        /*\r\n        let divUserAdded:any;\r\n        if (this.addedUser) {\r\n            divUserAdded = <div className=\"p-3\">\r\n                <div>\r\n                    新增用户: {this.addedUser.name} &nbsp; &nbsp; \r\n                    <button className=\"btn btn-success\" \r\n                        onClick={()=>this.controller.onUserEditApps()}>\r\n                        为用户添加App\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        }\r\n        */\r\n        return <Page header={searchBox}>\r\n            {content}\r\n        </Page>;\r\n    })\r\n    //{divUserAdded}\r\n\r\n    private onSearch = async (key:string) => {\r\n        this.user = await mainApi.userFromKey(key);\r\n    }\r\n\r\n    private onAddUser = async () => {\r\n        await this.controller.addUser(this.user.id);\r\n        this.controller.curUser = this.user;\r\n        this.user = null;\r\n        this.searchBox.clear();\r\n        this.replacePage(this.addedPage);\r\n    }\r\n\r\n    private onSearchFocus = () => {\r\n        this.user = null;\r\n        //this.addedUser = null;\r\n        if (this.searchBox) this.searchBox.clear();\r\n    }\r\n\r\n    private onAddApps = () => {\r\n        this.closePage();\r\n        this.controller.onUserEditApps();\r\n    }\r\n\r\n    private onContinueAddUser = () => {\r\n        this.closePage();\r\n        this.controller.onAddUser();\r\n    }\r\n\r\n    private addedPage = () => {\r\n        return <Page header=\"添加成功\">\r\n            <div className=\"p-3 text-center\">\r\n                <div>\r\n                    新增用户: {this.controller.curUser.name}\r\n                </div>\r\n                <div className=\"mt-3\">\r\n                    <button className=\"btn btn-success mr-3\" \r\n                        onClick={this.onAddApps}>\r\n                        为用户添加App\r\n                    </button>\r\n                    <button className=\"btn btn-outline-primary\"\r\n                        onClick={this.onContinueAddUser}>\r\n                        继续添加新用户\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { Controller, VPage, Page } from \"tonva-tools\";\r\nimport { mainApi } from 'api';\r\nimport { LMR, FA } from 'tonva-react-form';\r\nimport { VApps } from './vApps';\r\nimport { VUsers } from './vUsers';\r\nimport { VApp } from './vApp';\r\nimport { VUser } from './vUser';\r\nimport { VAppEditUsers } from './vAppEditUsers';\r\nimport { VUserEditApps } from './vUserEditApps';\r\nimport { VAddUser } from './VAddUser';\r\nimport { Unit } from 'model';\r\n\r\nexport interface User {\r\n    id: number;\r\n    name: string;\r\n    nick: string;\r\n    icon: string;\r\n    assigned: string;\r\n}\r\nexport interface App {\r\n    id: number;\r\n    name: string;\r\n    discription: string;\r\n}\r\nexport interface UserApps {\r\n    user: User;\r\n    apps: App[];\r\n}\r\nexport interface AppUsers {\r\n    app: App;\r\n    users: User[];\r\n}\r\nexport interface EditApp extends App {\r\n    bind: number;   // 0: not bind, 1: bind\r\n}\r\nexport interface EditUser extends User {\r\n    bind: number;  // 0: not bind, 1: bind\r\n}\r\n\r\nexport class UsersController extends Controller {\r\n    private unit: Unit;\r\n    @observable userAppsList: UserApps[];\r\n    @observable appUsersList: AppUsers[];\r\n    curUser: User;\r\n    @observable curUserApps: App[];\r\n    @observable userEditApps: EditApp[];\r\n    curApp: App;\r\n    @observable curAppUsers: User[];\r\n    @observable appEditUsers: EditUser[];\r\n\r\n    protected async internalStart(unit:Unit) {\r\n        this.unit = unit;\r\n        let cn = \"bg-white px-3 py-2 my-1\";\r\n        let appIcon = <FA name=\"columns\" className=\"text-primary mr-3\" />;\r\n        let userIcon = <FA name=\"user-plus\" className=\"text-primary mr-3\" />;\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={this.onAddUser}><FA name=\"plus\" /></button>;\r\n        this.openPage(<Page header={'用户管理 - ' +  this.unit.name} right={right}>\r\n            <LMR className={cn} onClick={this.onAppUsers} left={appIcon}>App</LMR>\r\n            <LMR className={cn} onClick={this.onUserApps} left={userIcon}>用户</LMR>\r\n        </Page>);\r\n    }\r\n\r\n    private onAppUsers = async () => {\r\n        await this.loadAppUsers(undefined);\r\n        this.openVPage(VApps);\r\n    }\r\n\r\n    private onUserApps = async () => {\r\n        await this.loadUserApps(undefined);\r\n        this.openVPage(VUsers);\r\n    }\r\n\r\n    private async loadAppUsers(key:string) {\r\n        let list:AppUsers[] = [];\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        let ret = await mainApi.unitAppUsers(this.unit.id, key, pageStart, pageSize);\r\n        let apps = ret[0];\r\n        let users = ret[1];\r\n        let coll: {[id:number]:AppUsers} = {}\r\n        for (let a of apps) {\r\n            let app:App = {\r\n                id: a.id,\r\n                name: a.name,\r\n                discription: a.discription,\r\n            };\r\n            list.push(coll[a.id] = {app:app, users:[]});\r\n        }\r\n        for (let u of users) {\r\n            let user:User = {\r\n                id: u.user,\r\n                name: u.name,\r\n                nick: u.nick,\r\n                icon: u.icon,\r\n                assigned: u.assigned\r\n            }\r\n            coll[u.app].users.push(user);\r\n        }\r\n        this.appUsersList = list;\r\n    }\r\n\r\n    private async loadUserApps(key:string) {\r\n        let list:UserApps[] = [];\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        let ret = await mainApi.unitUsers(this.unit.id, key, pageStart, pageSize);\r\n        let users = ret[0];\r\n        let apps = ret[1];\r\n        let coll: {[id:number]:UserApps} = {}\r\n        for (let u of users) {\r\n            let user:User = {\r\n                id: u.id,\r\n                name: u.name,\r\n                nick: u.nick,\r\n                icon: u.icon,\r\n                assigned: u.assigned\r\n            };\r\n            list.push(coll[u.id] = {user:user, apps:[]});\r\n        }\r\n        for (let a of apps) {\r\n            let app:App = {\r\n                id: a.app,\r\n                name: a.name,\r\n                discription: a.discription,\r\n            }\r\n            coll[a.user].apps.push(app);\r\n        }\r\n        this.userAppsList = list;\r\n    }\r\n\r\n    searchUser = async(key:string) => {\r\n        await this.loadUserApps(key);\r\n    }\r\n\r\n    searchApp = async(key:string) => {\r\n        await this.loadAppUsers(key);\r\n    }\r\n\r\n    onAppsClick = async (appUsers: AppUsers) => {\r\n        this.curApp = appUsers.app;\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.curAppUsers = await mainApi.unitOneAppUsers(this.unit.id, this.curApp.id, pageStart, pageSize);\r\n        this.openVPage(VApp);\r\n    }\r\n\r\n    onUsersClick = async (userApps: UserApps) => {\r\n        this.curUser = userApps.user;\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.curUserApps = await mainApi.unitOneUserApps(this.unit.id, this.curUser.id, pageStart, pageSize);\r\n        this.openVPage(VUser);\r\n    }\r\n\r\n    onAppEditUsers = async (key?:string) => {\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.appEditUsers = await mainApi.unitAppEditUsers(this.unit.id, this.curApp.id, key, pageStart, pageSize);\r\n        this.openVPage(VAppEditUsers);\r\n    }\r\n\r\n    onAddUser = () => {\r\n        this.openVPage(VAddUser);\r\n    }\r\n\r\n    onUserEditApps = async (key?:string) => {\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.userEditApps = await mainApi.unitUserEditApps(this.unit.id, this.curUser.id, key, pageStart, pageSize);\r\n        this.openVPage(VUserEditApps);\r\n    }\r\n\r\n    bindAppUser = async(user:User, checked:boolean) => {\r\n        await mainApi.bindAppUser(this.unit.id, this.curApp.id, user.id, checked===true? 1:0);\r\n        let appUsers = this.appUsersList.find(v => v.app.id === this.curApp.id);\r\n        if (checked === true) {\r\n            this.curAppUsers.push(user);\r\n            if (appUsers) appUsers.users.push(user);\r\n        }\r\n        else {\r\n            let index = this.curAppUsers.findIndex(v => v.id === user.id);\r\n            if (index>=0) this.curAppUsers.splice(index, 1);\r\n            if (appUsers) {\r\n                index = appUsers.users.findIndex(v => v.id === user.id);\r\n                if (index>=0) appUsers.users.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    bindUserApp = async(app:App, checked:boolean) => {\r\n        await mainApi.bindAppUser(this.unit.id, app.id, this.curUser.id, checked===true? 1:0);\r\n        if (this.userAppsList === undefined) return;\r\n        let userApps = this.userAppsList.find(v => v.user.id === this.curUser.id);\r\n        if (checked === true) {\r\n            this.curUserApps.push(app);\r\n            if (userApps) userApps.apps.push(app);\r\n        }\r\n        else {\r\n            let index = this.curUserApps.findIndex(v => v.id === app.id);\r\n            if (index>=0) this.curUserApps.splice(index, 1);\r\n            if (userApps) {\r\n                index = userApps.apps.findIndex(v => v.id === app.id);\r\n                if (index>=0) userApps.apps.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    addUser = async (userId: number) => {\r\n        await mainApi.unitAddUser(this.unit.id, userId);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page, appInFrame, Controller, VPage, Image, Edit, ItemSchema, UiSchema, StringSchema, ImageSchema, UiImageItem, UiTextItem} from  'tonva-tools'; \r\nimport {List, LMR, FA, StackedFA, PropGrid, Prop, Muted} from 'tonva-react-form';\r\nimport {StringValueEdit} from './tools';\r\nimport {Unit, UnitApps, UnitAdmin, DevModel} from './model';\r\nimport {store} from './store';\r\nimport Administors from './Administors';\r\nimport AppsPage from './Apps';\r\nimport {Members} from './Members';\r\nimport { mainApi } from 'api';\r\nimport { COrganization } from 'organization';\r\nimport {\r\n    ObjViewProps, ObjView,\r\n    //appsProps, \r\n    busesProps, \r\n    serversProps, /*uqdbsProps, */servicesProps, UQController} from './Dev';\r\nimport { AppController } from './Dev';\r\nimport { UsersController } from 'Users';\r\n\r\nexport class CAdmin extends Controller {\r\n    isProduction: boolean;\r\n    adminUnits: UnitAdmin[]; // 仅仅为Admins调试用。从登录用户获取units\r\n\r\n    private async loadAdminUnits(): Promise<void> {        \r\n        let ret = await mainApi.userAdminUnits();\r\n        let adminUnits = this.adminUnits = ret[0];\r\n        console.log('loadAdminUnits', adminUnits);\r\n        if (adminUnits.length === 1) {\r\n            appInFrame.unit = adminUnits[0].id;\r\n            await store.loadUnit();\r\n        }\r\n    }\r\n    protected async internalStart(param?:any):Promise<void> {\r\n        store.init();\r\n        \r\n        this.isProduction = document.location.hash.startsWith('#tv');\r\n        console.log('admins isProduction %s', this.isProduction);\r\n\r\n        if (this.isProduction === false) {\r\n            await this.loadAdminUnits();\r\n            this.openVPage(VAdmin);\r\n            return;\r\n        }\r\n        await store.loadUnit();\r\n        this.openVPage(VAdmin);\r\n    /*\r\n        let user = nav.user;\r\n        if (user === undefined) {\r\n            console.log('autorun: user has logged out');\r\n            return;\r\n        }\r\n    \r\n        console.log('autorun login');\r\n        */\r\n       /*\r\n        setTimeout(async () => {\r\n            // 等待 tonva-tools 里面的initSubWin的nav.user的赋值\r\n            // 这个地方实际上有问题的，不应该这么写。程序逻辑顺序逻辑错误。\r\n            // 2018-11-5: 临时凑合用延时的方式来解决。\r\n            await store.loadUnit();\r\n            this.showVPage(VAdmin);\r\n        }, 200);\r\n        */\r\n    }\r\n}\r\n\r\nexport class VAdmin extends VPage<CAdmin> {\r\n    async open() {\r\n        let {isProduction, adminUnits} = this.controller;\r\n        if (isProduction === false) {\r\n            switch (adminUnits.length) {\r\n                default: this.openPage(this.selectUnitPage); return;\r\n                case 0: this.openPage(this.noUnitPage); return;\r\n                case 1: this.openPageElement(<AdminPage />); return;\r\n            }\r\n        }\r\n\r\n        if (store.unit === undefined) {\r\n            this.openPage(this.noUnitPage);\r\n            return;\r\n        }\r\n        this.openPageElement(<AdminPage />);\r\n    }\r\n\r\n    private selectUnitPage = () => {\r\n        return <Page header=\"选择小号\" logout={logout}>\r\n            <List items={this.controller.adminUnits} item={{render: this.renderRow, onClick: this.onRowClick}}/>\r\n        </Page>;\r\n    }\r\n\r\n    private noUnitPage = () => {\r\n        let {nick, name} = nav.user;\r\n        return <Page header=\"没有小号\" logout={logout}>\r\n            <div className=\"p-3 small text-info\">\r\n                {nick || name}: 没有需要管理的小号\r\n            </div>\r\n        </Page>\r\n    }\r\n\r\n    protected get view() {return undefined}\r\n\r\n    renderRow = (item: UnitAdmin, index: number):JSX.Element => {\r\n        return <LMR className=\"p-2\" right={'id: ' + item.id}>\r\n            <div>{item.nick || item.name}</div>\r\n        </LMR>;\r\n    }\r\n    onRowClick = async (item: UnitAdmin) => {\r\n        appInFrame.unit = item.id; // 25;\r\n        await store.loadUnit();\r\n        this.closePage();\r\n        this.openPageElement(<AdminPage />);\r\n    }\r\n}\r\n\r\nconst logout = async () => {\r\n    store.logout();\r\n}\r\n\r\ninterface ActionItem {\r\n    main: string | JSX.Element;\r\n    right?: string | JSX.Element;\r\n    icon: string|JSX.Element;\r\n    page?: new (props:any) => React.Component;\r\n    //onClick: () => nav.push(<Administors />),\r\n    controller?: Controller;\r\n}\r\n\r\ninterface DevItem<T extends DevModel.ObjBase> {\r\n    title: string;\r\n    count: number;\r\n    icon: string;\r\n    objProps?: ObjViewProps<T>;\r\n    onClick?: ()=>void;\r\n}\r\n\r\ntype Item = ActionItem|DevItem<DevModel.ObjBase>|string;\r\n\r\nconst rArrow = <FA name=\"chevron-right\" />;\r\nconst typeCaptions = {\r\n    1: '开发号',\r\n    2: '小号',\r\n    3: '系统号'\r\n}\r\n@observer\r\ndefault class AdminPage extends React.Component {\r\n    private caption:string;\r\n\r\n    async componentWillMount() {\r\n        let {unit, dev} = store;\r\n        let {isAdmin, isOwner, type} = unit;\r\n        this.caption = typeCaptions[type];\r\n        /*\r\n        switch (type) {\r\n            case 1: this.caption = '开发号'; break;\r\n            case 2: this.caption = '小号'; break;\r\n            case 3: this.caption = '系统号'; break;\r\n        }*/\r\n        if ((type & 1) !== 0) {\r\n            await store.dev.loadCounts();\r\n        }\r\n    }\r\n\r\n    private appsAction:ActionItem = {\r\n        main: '启停App',\r\n        right: rArrow, //'增减',\r\n        icon: 'play-circle-o',\r\n        page: AppsPage,\r\n    };\r\n    private usersAction:ActionItem = {\r\n        main: '用户角色',\r\n        right: rArrow,\r\n        icon: 'users',\r\n        page: Members,\r\n    };\r\n    private newUsersAction:ActionItem = {\r\n        main: '用户管理',\r\n        right: rArrow,\r\n        icon: 'user-o',\r\n        controller: new UsersController(undefined),\r\n    };\r\n    /*\r\n    private devAction:Item = {\r\n        main: <DevActions />,\r\n        right: '程序开发相关管理',\r\n        icon: 'laptop',\r\n        //page: Dev,\r\n    };*/\r\n    private adminsAction:ActionItem = {\r\n        main: '管理员',\r\n        right: rArrow,\r\n        icon: 'universal-access',\r\n        page: Administors,\r\n    };\r\n\r\n    private cOrganization = new COrganization;\r\n    private organizeAction:ActionItem = {\r\n        main: this.cOrganization.label,\r\n        right: rArrow,\r\n        icon: this.cOrganization.icon,\r\n        controller: this.cOrganization\r\n    };\r\n\r\n    private noneAction:ActionItem = {\r\n        main: '请耐心等待分配任务',\r\n        icon: 'hourglass-start',\r\n    };\r\n\r\n    private buildItems():Item[] {\r\n        let {unit, dev} = store;\r\n        let {isAdmin, isOwner, type} = unit;\r\n        let items:Item[] = [];\r\n        if (isOwner === 1) {\r\n            items.push(this.adminsAction);\r\n        }\r\n        console.log('unit:', unit);\r\n        if (isAdmin === 1) {\r\n            if ((type & 2) !== 0) {\r\n                // unit\r\n                items.push(\r\n                    '小号管理',\r\n                    this.appsAction, \r\n                    //this.usersAction, \r\n                    this.newUsersAction, \r\n                    //this.organizeAction\r\n                );\r\n            }\r\n            if ((type & 1) !== 0) {\r\n                // dev unit\r\n                let {counts} = dev;\r\n                //if (counts !== undefined) {\r\n                let devItems:(DevItem<DevModel.ObjBase>|string)[] = [\r\n                    '开发号管理',\r\n                    {\r\n                        title: 'APP', \r\n                        count: counts && counts.app, \r\n                        icon: 'tablet', \r\n                        onClick: () => new AppController(undefined).start(unit.id),\r\n                    },\r\n                    {\r\n                        title: 'UQ', \r\n                        count: counts && counts.uq, \r\n                        icon: 'database', \r\n                        onClick: () => new UQController(undefined).start(unit.id),\r\n                    },\r\n                    {\r\n                        title: 'BUS', \r\n                        count: counts && counts.bus, \r\n                        icon: 'cogs', \r\n                        objProps: busesProps,\r\n                    },\r\n                    {\r\n                        title: 'Server', \r\n                        count: counts && counts.server, \r\n                        icon: 'server', \r\n                        objProps: serversProps,\r\n                    },\r\n                ];\r\n                items.push(...devItems);\r\n            //}\r\n            }\r\n        }\r\n        return items;\r\n    }\r\n    private row = (item:Item, index:number):JSX.Element => {\r\n        if (typeof item === 'string') {\r\n            return <div className=\"px-3 pt-3 pb-1 small text-muted\" style={{backgroundColor:'#f0f0f0'}}>{item}</div>;\r\n        }\r\n        let {title} = item as DevItem<DevModel.ObjBase>;\r\n        let left:any, mid:any, r:any;\r\n        if (title !== undefined) {\r\n            let {icon, count} = item as DevItem<DevModel.ObjBase>;\r\n            left = <FA className=\"text-primary\" name={icon} fixWidth={true} size=\"lg\" />;\r\n            mid = title;\r\n            r = count>0 && <span>{count}</span>;\r\n        }\r\n        else {\r\n            let {right, main, icon} = item as ActionItem;\r\n            left = typeof icon === 'string'? \r\n                <FA className=\"text-primary\" name={icon} fixWidth={true} size=\"lg\" /> :\r\n                item.icon;\r\n            mid = main;\r\n            r = <span>{right}</span>;\r\n        }\r\n        return <LMR className=\"px-3 py-2 align-items-center\" left={left} right={r}>\r\n            <div className=\"px-3\"><b>{mid}</b></div>\r\n        </LMR>;\r\n    }\r\n    private rowClick = async (item:Item) => {\r\n        let {title} = item as DevItem<DevModel.ObjBase>;\r\n        if (title !== undefined) {\r\n            let {objProps, onClick} = item as DevItem<DevModel.ObjBase>;\r\n            if (objProps !== undefined)\r\n                return nav.push(<ObjView {...objProps} />);\r\n            else {\r\n                onClick();\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            let {page:P, controller} = item as ActionItem;\r\n            if (P !== undefined)\r\n                nav.push(<P />);\r\n            else {\r\n                await controller.start(store.unit);\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        let unit:Unit = store.unit;\r\n        if (unit === undefined) {\r\n            console.log(\"admin render without unit\");\r\n            return null;\r\n        }\r\n        console.log(\"admin render with unit\");\r\n        let items = this.buildItems();\r\n        if (items === undefined) {\r\n            return <Page header=\"\" />;\r\n        }\r\n        let header:any, top:any;\r\n        if (unit !== undefined) {\r\n            let {name, nick, icon, discription} = unit;\r\n            header = nick || name;\r\n            if (this.caption !== undefined) header = this.caption + ' - ' + header;            \r\n            top = <LMR className='px-3 my-4 bg-white py-2 cursor-pointer' onClick={()=>nav.push(<UnitProps />)}\r\n                left={<div><Image className=\"w-3c h-3c\" src={icon} /></div>}>\r\n                <div className=\"px-3\">\r\n                    <h6 className='text-dark'>{name}</h6>\r\n                    <h6><small className='text-secondary'>{nick}</small></h6>\r\n                    <div className='small text-info'>{discription}</div>\r\n                </div>\r\n            </LMR>;\r\n        }\r\n        else {\r\n            header = '系统管理';\r\n        }\r\n        return <Page header={header} logout={logout}>\r\n            {top}\r\n            <List items={items} item={{render:this.row, onClick:this.rowClick}} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass UnitProps extends React.Component {\r\n    /*\r\n    private rows:Prop[] = [\r\n        '',\r\n        {label: '标志图', type: 'string', name: 'icon'},\r\n        '=',\r\n        {label: '唯一号', type: 'string', name: 'name'},\r\n        {\r\n            label: '名称', \r\n            type: 'string',\r\n            name: 'nick', \r\n            onClick:()=>nav.push(<StringValueEdit \r\n                title=\"修改名称\"\r\n                value={store.unit.nick}\r\n                onChanged={this.onNickChanged} \r\n                info=\"好的名字会提升接受度\" />)\r\n        },\r\n        {\r\n            label: '说明',\r\n            type: 'string',\r\n            name: 'discription',\r\n            onClick:()=>nav.push(<StringValueEdit \r\n                title=\"修改说明\"\r\n                value={store.unit.discription}\r\n                onChanged={this.onDiscriptionChanged} \r\n                info=\"对小号做一个说明\" />)\r\n        },\r\n    ];\r\n    */\r\n    private schema:ItemSchema[] =[\r\n        {name: 'icon', type: 'image'} as ImageSchema,\r\n        {name: 'nick', type: 'string'} as StringSchema,\r\n        {name: 'discription', type: 'string'} as StringSchema,\r\n    ];\r\n    private uiSchema:UiSchema = {\r\n        items: {\r\n            nick: {widget:'text', label:'别名', placeholder:'好的别名更方便记忆'} as UiTextItem,\r\n            icon: {widget:'image', label:'标志图'} as UiImageItem,\r\n            discription: {widget:'text', label:'描述', placeholder:'简短清晰的描述'} as UiTextItem,\r\n        }\r\n    }\r\n    /*\r\n    async onNickChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.unitChangeProp('nick', value);\r\n    }\r\n    async onDiscriptionChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.unitChangeProp('discription', value);\r\n    }\r\n    */\r\n    private onItemChanged = async (itemSchema:ItemSchema, newValue:any, preValue:any) => {\r\n        let {name} = itemSchema;\r\n        //await userApi.userSetProp(name, newValue);\r\n        await store.unitChangeProp(name, newValue);\r\n        //this.data[name] = newValue;\r\n        //nav.user[name] = newValue;\r\n        //nav.saveLocalUser();\r\n    }\r\n    //<PropGrid rows={this.rows} values={store.unit} alignValue=\"right\" />\r\n    render() {\r\n        return <Page header=\"小号信息\">\r\n            <Edit schema={this.schema} uiSchema={this.uiSchema}\r\n                data={store.unit}\r\n                onItemChanged={this.onItemChanged} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\nimport { nav, NavView } from 'tonva-tools';\nimport { CAdmin } from './Admin';\nimport './App.css';\n\nclass App extends React.Component {\n    async onLogined() {\n        let loc = document.location;\n        nav.clear();\n        //nav.push(<StartPage />);\n        let cAdmin = new CAdmin({});\n        await cAdmin.start();\n    }\n    render() {\n        return (\n            <NavView onLogined={this.onLogined} />\n        )\n    }\n}\n\nexport default App;\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n"],"sourceRoot":""}