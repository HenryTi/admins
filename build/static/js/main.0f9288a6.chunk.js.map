{"version":3,"sources":["tonva-tools/index.ts","tonva-react-form/index.ts","tonva-react-uq/controllers/CVEntity.tsx","tonva-tools/ui/nav.tsx","tonva-tools/ui/form/context.tsx","tonva-react-uq/controllers/form/viewModel.tsx","tonva-react-uq/tools/jsonStringify.ts","tonva-react-uq/tools/tv.tsx","tonva-react-uq/tools/index.ts","tonva-tools/net/guestApi.ts","tonva-tools/net/index.ts","tonva-tools/net/appBridge.ts","tonva-tools/net/httpChannelUI.ts","tonva-tools/net/uqApi.ts","tonva-react-uq/controllers/link/cLink.tsx","tonva-react-uq/controllers/link/index.ts","tonva-tools/net/wsChannel.ts","tonva-react-form/uid.ts","tonva-tools/ui/index.ts","tonva-tools/net/host.ts","tonva-tools/ui/page.tsx","tonva-tools/uid.ts","tonva-react-uq/controllers/tuid/vTuidMain.tsx","tonva-react-uq/controllers/tuid/vTuidEdit.tsx","tonva-react-uq/controllers/tuid/vTuidSelect.tsx","tonva-react-uq/controllers/tuid/vTuidView.tsx","tonva-react-uq/controllers/tuid/vTuidInfo.tsx","tonva-react-uq/controllers/tuid/pageItems.ts","tonva-react-uq/controllers/tuid/vTuidList.tsx","tonva-react-uq/controllers/tuid/cTuid.ts","tonva-react-uq/controllers/tuid/index.tsx","tonva-tools/user.ts","tonva-react-uq/controllers/form/vBand.tsx","tonva-react-uq/controllers/form/vSubmit.tsx","tonva-react-uq/controllers/form/rule.ts","tonva-react-uq/controllers/form/vField/vField.tsx","tonva-react-uq/controllers/form/vField/vComputeField.tsx","tonva-react-uq/controllers/form/vArr.tsx","tonva-react-uq/controllers/form/vField/vTuidField.tsx","tonva-react-uq/controllers/form/bandsBuilder.ts","tonva-react-uq/controllers/form/vField/buildVmField.ts","tonva-react-uq/controllers/form/vForm.tsx","tonva-react-uq/controllers/form/index.ts","tonva-tools/net/httpChannel.ts","tonva-tools/ui/res.ts","tonva-react-uq/controllers/index.ts","tonva-react-form/form/control/control.tsx","tonva-react-form/form/control/buttonsControl.tsx","tonva-react-form/form/control/charsControl.tsx","tonva-react-form/form/control/stringControl.tsx","tonva-react-form/form/control/numberControl.tsx","tonva-react-form/form/control/unknownControl.tsx","tonva-react-form/form/control/pickIdControl.tsx","tonva-react-form/form/control/pickTuidControl.tsx","tonva-react-form/form/control/pickControl.tsx","tonva-react-form/form/control/index.ts","tonva-react-form/form/control/checkControl.tsx","tonva-react-form/form/control/radioControl.tsx","tonva-react-form/form/control/selectControl.tsx","tonva-react-form/form/control/textAreaControl.tsx","tonva-react-uq/entities/entity.ts","tonva-react-uq/entities/tuid.ts","tonva-react-uq/entities/action.ts","tonva-react-uq/entities/sheet.ts","tonva-react-uq/entities/query.ts","tonva-react-uq/entities/book.ts","tonva-react-uq/entities/history.ts","tonva-react-uq/entities/map.ts","tonva-react-uq/entities/pending.ts","tonva-react-uq/entities/entities.ts","tonva-react-uq/entities/index.ts","tonva-react-form/form/rowContainer/index.tsx","tonva-tools/net/apiBase.ts","tonva-tools/ui/titleBar.tsx","tonva-react-uq/controllers/query/defaultRow.tsx","tonva-react-uq/controllers/query/vQueryMain.tsx","tonva-react-uq/controllers/query/vQuerySelect.tsx","tonva-react-uq/controllers/query/cQuery.ts","tonva-react-uq/controllers/query/index.ts","tonva-tools/ui/loading.tsx","tonva-react-form/form/index.ts","tonva-react-form/form/formView.tsx","tonva-react-uq/controllers/CApp.tsx","tonva-react-uq/controllers/icons.tsx","tonva-react-uq/controllers/ControllerUq.ts","tonva-react-uq/centerApi.ts","tonva-react-uq/controllers/sheet/vMain.tsx","tonva-react-uq/controllers/sheet/vNew.tsx","tonva-react-uq/controllers/sheet/vSheetView.tsx","tonva-react-uq/controllers/sheet/vEdit.tsx","tonva-react-uq/controllers/sheet/vSheetAction.tsx","tonva-react-uq/controllers/sheet/vSchema.tsx","tonva-react-uq/controllers/sheet/vArchives.tsx","tonva-react-uq/controllers/sheet/vList.tsx","tonva-react-uq/controllers/sheet/vArchived.tsx","tonva-react-uq/controllers/sheet/vSheet.tsx","tonva-react-uq/controllers/sheet/vSaved.tsx","tonva-react-uq/controllers/sheet/vSheetProcessing.tsx","tonva-react-uq/controllers/sheet/cSheet.ts","tonva-react-uq/controllers/sheet/index.ts","tonva-react-uq/controllers/book/vBookMain.tsx","tonva-react-uq/controllers/book/cBook.ts","tonva-react-uq/controllers/uq/vUq.tsx","tonva-react-uq/controllers/uq/cUq.tsx","tonva-react-uq/controllers/uq/index.ts","tonva-react-uq/controllers/map/vMain.tsx","tonva-react-uq/controllers/map/inputValues.tsx","tonva-react-uq/controllers/map/cMap.ts","tonva-react-uq/controllers/map/index.ts","tonva-react-uq/controllers/pending/vPendingMain.tsx","tonva-react-uq/controllers/pending/cPending.ts","tonva-react-uq/controllers/pending/index.ts","tonva-react-uq/controllers/action/vActionMain.tsx","tonva-react-uq/controllers/action/cAction.ts","tonva-react-uq/controllers/action/index.ts","tonva-react-uq/controllers/history/vHistoryMain.tsx","tonva-react-uq/controllers/history/cHistory.ts","tonva-react-uq/controllers/history/index.ts","tonva-tools/ui/form/rules/index.ts","tonva-tools/ui/form/widgets/widget.tsx","tonva-tools/ui/form/widgets/textWidget.tsx","tonva-tools/ui/form/widgets/numberWidget.tsx","tonva-tools/ui/form/widgets/updownWidget.tsx","tonva-tools/ui/form/widgets/dateWidget.tsx","tonva-tools/ui/form/widgets/checkBoxWidget.tsx","tonva-tools/ui/form/widgets/selectWidget.tsx","tonva-tools/ui/form/widgets/idWidget.tsx","tonva-tools/ui/form/widgets/unknown.tsx","tonva-tools/ui/form/widgets/buttonWidget.tsx","tonva-tools/ui/form/widgets/arrComponent.tsx","tonva-tools/ui/form/widgets/factory.tsx","tonva-tools/ui/form/widgets/textareaWidget.tsx","tonva-tools/ui/form/widgets/passwordWidget.tsx","tonva-tools/ui/form/widgets/radioWidget.tsx","tonva-tools/ui/form/widgets/rangeWidget.tsx","tonva-tools/ui/form/widgets/index.ts","tonva-tools/net/netToken.ts","tonva-tools/left0.ts","tonva-tools/ui/rowIcon.tsx","tonva-tools/ui/row.tsx","tonva-tools/ui/VM.tsx","tonva-tools/ui/form/index.ts","tonva-tools/ui/form/field.tsx","tonva-tools/pageItems.ts","tonva-tools/cacheIds.ts","tonva-react-form/form/TonvaForm.tsx","tonva-react-form/dropDownActions/index.tsx","tonva-react-form/easyDate/index.tsx","tonva-react-form/media.tsx","tonva-react-form/searchBox.tsx","tonva-react-form/multiStep/index.tsx","tonva-react-form/components/Badge.tsx","tonva-react-form/components/LMR.tsx","tonva-react-form/components/FA.tsx","tonva-react-form/components/Muted.tsx","tonva-react-form/components/index.ts","tonva-react-form/list/base.tsx","tonva-react-form/list/clickable.tsx","tonva-react-form/list/static.tsx","tonva-react-form/list/selectable.tsx","tonva-react-form/list/index.tsx","tonva-react-form/propGrid/row.tsx","tonva-react-form/propGrid/propView.tsx","tonva-react-form/propGrid/PropGrid.tsx","tonva-react-form/propGrid/index.tsx","tonva-react-form/listView/listRow.tsx","tonva-react-form/listView/listView.tsx","tonva-tools/ui/tabs/tabs.tsx","tonva-tools/ui/form/formRes.ts","tonva-tools/ui/form/form.tsx","tonva-tools/ui/fetchErrorView.tsx","tonva-tools/local.ts","tonva-tools/img/logo.svg","tools/idDates.tsx","consts.ts","api/mainApi.ts","api/devApi.ts","store/admins.ts","store/dev.ts","store/cacheIds.ts","store/index.ts","tools/span.tsx","tools/unitSpan.tsx","tools/uqSpan.tsx","tools/appSpan.tsx","tools/serverSpan.tsx","tools/stringValueEdit.tsx","Administors/NewFellow.tsx","Administors/EditAdmin.tsx","Administors/index.tsx","Apps/info.tsx","Apps/new.tsx","Apps/index.tsx","Members/newRole.tsx","Members/roleApps.tsx","Members/memberPage.tsx","Members/membersPage.tsx","Members/rolePage.tsx","Members/index.tsx","organization/ui/map/teamPerson/index.tsx","organization/ui/index.ts","organization/ui/map/index.ts","organization/ui/tuid/index.ts","organization/ui/tuid/user.tsx","organization/ui/tuid/organization.tsx","organization/ui/query/index.ts","organization/ui/query/teamPosts.tsx","organization/ui/res/index.ts","organization/ui/res/zh/CN.tsx","organization/op/vOpBinding.tsx","organization/op/vAllPosts.tsx","organization/op/vFullFunction.tsx","organization/op/vSearchUser.tsx","organization/op/cOpBinding.tsx","organization/organization.tsx","createIdPick.tsx","Dev/apps/editPage.tsx","Dev/apps/appsPage.tsx","Dev/apps/appUqs.tsx","Dev/apps/appPage.tsx","Dev/apps/uqBindPage.tsx","Dev/apps/index.tsx","Dev/uqs/uqUpload.tsx","Dev/uqs/newServicePage.tsx","Dev/uqs/servicePage.tsx","Dev/uqs/editPage.tsx","Dev/uqs/uqPage.tsx","Dev/uqs/listPage.tsx","Dev/uqs/index.tsx","Dev/row.tsx","Dev/buses.tsx","Dev/servers.tsx","Dev/services.tsx","Dev/ObjView.tsx","Users/vApps.tsx","Users/vUsers.tsx","Users/vApp.tsx","Users/vUser.tsx","Users/vAppEditUsers.tsx","Users/vUserEditApps.tsx","Users/cUsers.tsx","Admin.tsx","App.tsx","registerServiceWorker.ts","index.tsx"],"names":["_left0__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d","__webpack_exports__","_net__WEBPACK_IMPORTED_MODULE_2__","_ui__WEBPACK_IMPORTED_MODULE_3__","o","_pageItems__WEBPACK_IMPORTED_MODULE_5__","_cacheIds__WEBPACK_IMPORTED_MODULE_6__","_form__WEBPACK_IMPORTED_MODULE_0__","_list__WEBPACK_IMPORTED_MODULE_1__","_dropDownActions__WEBPACK_IMPORTED_MODULE_2__","_easyDate__WEBPACK_IMPORTED_MODULE_3__","_propGrid__WEBPACK_IMPORTED_MODULE_4__","_components__WEBPACK_IMPORTED_MODULE_5__","_media__WEBPACK_IMPORTED_MODULE_6__","_searchBox__WEBPACK_IMPORTED_MODULE_8__","_multiStep__WEBPACK_IMPORTED_MODULE_9__","CEntity","_ControllerUq__WEBPACK_IMPORTED_MODULE_3__","[object Object]","cUq","entity","ui","res","super","Object","setPrototypeOf","this","x","name","typeName","label","icon","_icons__WEBPACK_IMPORTED_MODULE_2__","loadSchema","onSubmit","values","mode","options","buildFormOptions","ret","_form__WEBPACK_IMPORTED_MODULE_1__","setValues","none","submitCaption","arrNewCaption","arrEditCaption","arrTitleNewButton","fields","arrFields","undefined","new","formUI","form","arrs","inputs","buildInputs","buildFieldsInputs","arr","items","arrFieldInputs","field","_tuid","fieldUI","select","buildSelect","content","buildContent","placeHolder","getTuidPlaceHolder","__awaiter","_ownerField","cTuidSelect","cSelectFrom","param","getValue","autoList","console","log","call","removeCeased","id","idFromItem","useId","queryName","cQuerySelect","VEntity","tonva_tools__WEBPACK_IMPORTED_MODULE_0__","controller","createForm","mobileHeaderStyle","RegExp","test","navigator","userAgent","minHeight","logMark","logs","stackKey","NavView","react__WEBPACK_IMPORTED_MODULE_0__","props","waitCount","isHistoryBack","clearError","setState","fetchError","back","bind","navBack","stack","state","wait","window","addEventListener","nav","set","start","level","length","waitTimeHandler","global","setTimeout","clearTimeout","err","error","unauthorized","showLogin","view","disposer","clear","push","history","pushState","key","ceased","refresh","item","pop","dispose","p","i","len","backLevel","popAndDispose","Error","find","v","confirmClose","confirm","self","top","postMessage","type","message","elWait","elError","className","_fetchErrorView__WEBPACK_IMPORTED_MODULE_5__","assign","map","index","style","visibility","Nav","local","_local__WEBPACK_IMPORTED_MODULE_7__","user","lang","district","_res__WEBPACK_IMPORTED_MODULE_14__","language","culture","guest","g","get","handler","ws","onWsReceiveAny","handlerId","endWsReceive","msg","receive","unitRes","fetch","json","unit","unitName","_net__WEBPACK_IMPORTED_MODULE_8__","getUnitName","unitId","unitFromName","_page__WEBPACK_IMPORTED_MODULE_3__","header","_loading__WEBPACK_IMPORTED_MODULE_15__","url","centerHost","wsHost","loadUnit","setGuest","hash","document","location","origin","isInFrame","startsWith","mif","_net_appBridge__WEBPACK_IMPORTED_MODULE_6__","_net_wsChannel__WEBPACK_IMPORTED_MODULE_13__","parent","logined","notLogined","onLogined","_net_netToken__WEBPACK_IMPORTED_MODULE_4__","token","connect","JSON","stringify","_user__WEBPACK_IMPORTED_MODULE_2__","showAppView","withBack","lv","e","then","loginView","default","notShowLogin","logoutClear","startWait","endWait","onError","show","replace","ceaseTop","regConfirmClose","confirmBox","apiId","sheetType","sheetId","Promise","resolve","reject","sheet","includes","uh","onClick","src","open","date","Date","getTime","toTimeString","step","__decorate","mobx__WEBPACK_IMPORTED_MODULE_1__","Context","uiSchema","data","inNode","isRow","widgets","errors","errorWidgets","renderErrors","mobx_react__WEBPACK_IMPORTED_MODULE_2__","initData","rules","Array","isArray","arrName","subContexts","arrRowContexts","itemName","value","widget","setValue","getDisabled","setDisabled","getReadOnly","setReadOnly","getVisible","setVisible","checkRules","j","checkFieldRules","clearContextErrors","rule","setError","rowContext","removeErrors","checkContextRules","setContextError","addErrorWidget","clearContextError","findIndex","pos","splice","hasError","checkHasError","rowKeySeed","RowContext","parentContext","arrSchema","uiArr","rowKey","itemSchemas","parentData","FormContext","ContextContainer","ViewModel","PureJSONContent","JSONContent","RowContent","mobx_react__WEBPACK_IMPORTED_MODULE_1__","_tools__WEBPACK_IMPORTED_MODULE_2__","vm","replacer","substr","jsonStringify","Tv","index_module","tuidValue","nullUI","ttv","react","bi","_$tuid","_$com","t","controllers","com","getTuidContent","val","valueFromId","boxIdContent","tv","guestApi","uqApi","wsChannel","apiBase","appBridge","host","uqTokens","logoutUqTokens","appsInFrame","meInFrame","_unit","isBridged","setMeInFrame","appHash","parts","split","Number","page","slice","appUrl","u","_uid__WEBPACK_IMPORTED_MODULE_2__","loadAppUqs","appOwner","appName","centerAppApi","_uqApi__WEBPACK_IMPORTED_MODULE_3__","uqs","checkUqs","_ui__WEBPACK_IMPORTED_MODULE_1__","appUq","uq","uqOwner","uqName","uqToken","urlDebug","realUrl","_host__WEBPACK_IMPORTED_MODULE_5__","getUrlOrDebug","at","a","opener","apiName","evt","subWin","source","_wsChannel__WEBPACK_IMPORTED_MODULE_4__","el","getElementById","hidden","hideFrameBack","lodash__WEBPACK_IMPORTED_MODULE_0___default","clone","subFrameStarted","onReceive","initSubWin","from","callId","method","body","result","directCall","callCenterApiFromMessage","bca","brideCenterApis","bridgeCenterApiReturn","appInFrame","onReceiveAppApiMessage","action","onAppApiReturn","bridgeCenterApi","httpChannelUI_HttpChannelNavUI","channelUIs","channelNoUIs","logoutApis","uqApi_channels","uqLocalEntities","localUqs","ls","localStorage","getItem","parse","loginedUserId","isNet","un","__loadAccess","saveLocal","lodash_default","cloneDeep","removeItem","accessValue","str","setItem","isMatch","uqApi_UqApi","basePath","access","showWaiting","channels","channelUI","channel","httpChannel","acc","join","loadAccess","checkAccess","names","post","params","owner","pageStart","pageSize","order","$order","ids","proxy","put","uqApi_UnitxApi","buildChannel","uqApi_CenterAppApi","unitxUq","setCenterUrl","centerToken","centerChannel","centerChannelUI","setCenterToken","userId","uqApi_CenterApi","path","uqTokenApi","unitParam","nowTick","tick","callCenterapi","rLs","rUnit","rAppOwner","rAppName","uqsPure","obj","cachedUqs","Link","cLink_CLink","classnames_default","subAppWindow","setSubAppWindow","win","postWsToTop","WsBase","handlerSeed","anyHandlers","msgHandlers","seed","$type","wsBaseSeed","wsBridge","wsBaseId","WSChannel","that","WebSocket","onopen","ev","onerror","onmessage","wsMessage","onclose","close","event","postWsToSubApp","netThis","send","uid","ALPHABET","ID_LENGTH","rtn","charAt","Math","floor","random","_nav__WEBPACK_IMPORTED_MODULE_0__","_page__WEBPACK_IMPORTED_MODULE_2__","_VM__WEBPACK_IMPORTED_MODULE_5__","_form__WEBPACK_IMPORTED_MODULE_6__","_res__WEBPACK_IMPORTED_MODULE_7__","isDevelopment","hosts","centerhost","NODE_ENV","PUBLIC_URL","REACT_APP_CENTER_HOST","REACT_APP_ICON","REACT_APP_ITEM_ICON","uqhost","unitxhost","uq-build","tryLocal","getCenterHost","centerUrlFromHost","centerWsFromHost","promises","hostValue","fetchUrl","debugHostUrl","fetchOptions","headers","Content-Type","localCheck","results","all","hostString","indexOf","timeout","text","catch","fetchLocalCheck","_a","scrollTimeGap","ScrollView","bottomTime","topTime","onScroll","onScrollTop","onScrollBottom","target","scrollTop","offsetHeight","scrollHeight","c","direct","children","forEach","child","_$scroll","toString","eachChild","Page","cur","tabs","tabStates","tab","lodash__WEBPACK_IMPORTED_MODULE_3___default","isSelected","isMounted","t0","onTabClick","load","footer","right","keepHeader","titleBar","title","redDot","img","redDotView","cn","classnames__WEBPACK_IMPORTED_MODULE_2___default","_titleBar__WEBPACK_IMPORTED_MODULE_4__","center","sideBar","invisible","logout","onTouchStart","elFooter","renderTabs","renderSingle","vTuidMain_VTuidMain","CVEntity","onNew","onList","onSearch","openPage","link","render","newButton","proxyLinks","isFrom","tonva_tools","tonva_react_form","placeholder","entityRender","entityClick","vTuidEdit_VTuidEdit","next","vTuidEdit_awaiter","vForm","reset","closePage","finish","getValues","save","unique","isCalling","returnCall","openPageElement","size","editView","vTuidSelect_VTuidSelect","mainView","react_default","createElement","initKey","onSearchMain","PageItems","renderMainRow","clickMainRow","before","vTuidSelect_awaiter","searchMain","mainRowContent","ceasePage","showDiv","getIdFromObj","divView","renderDivRow","clickDivRow","divRowContent","showMain","rowContent","viewModel","ownerValue","divs","divItems","getDivItems","vTuidView_VTuidView","vTuidView_awaiter","alert","tools","buildForm","vTuidInfo_VTuidInfo","pageItems_TuidPageItems","tuid","search","vTuidList_VTuidMainListBase","vTuidList_awaiter","renderRow","clickRow","callOnSelected","ownerTop","ownerObj","ownerId","onSelected","VTuidMainList","cTuid_CTuid","buildPageItems","first","searchArr","cTuid_CTuidMain","proxies","linkFromName","cFrom","cUqFrom","cTuidEditFromName","cTuidInfoFromName","cTuidSelectFromName","VTuidMain","VTuidEdit","VTuidList","schemaFrom","openVPage","edit","itemChanged","cTuidInfo","cTuid_CTuidInfo","merge","CTuidEdit","CTuidList","cTuid_CTuidSelect","VTuidSelect","VTuidInfo","UserInNav","decodeUserToken","decodeGuestToken","jwt_decode__WEBPACK_IMPORTED_MODULE_0__","jwt_decode__WEBPACK_IMPORTED_MODULE_0___default","n","nick","vBand_VBand","renderContent","addRow","VFieldBand","vField","vBand_VArrBand","vArr","setAddRow","vBand_VSubmitBand","vSubmit","vSubmit_VSubmit","onClickSubmit","submit","isOk","disabled","caption","mobx_module","Rule","RuleRequired","defy","trim","NaN","RuleNum","RuleInt","isNaN","isInteger","RuleMin","min","check","RuleMax","max","vField_VField","fieldRes","init","buildRules","required","null","r","readonly","FormMode","editable","vField_decorate","vField_VInputControl","renderError","ref","input","setInputValue","onFocus","onBlur","computeFields","onChange","currentTarget","inputGroup","suffix","ctrlCN","inputType","readOnly","maxLength","onKeyPress","RedMark","color","position","left","VStringField","KeyCode_Neg","KeyCode_Dot","vField_VNumberControl","ch","charCode","extraChars","onKeyDot","onKeyNeg","preventDefault","vField_VIntField","VDecField","VTextField","VDateTimeField","vComputeField_VComputeField","vArr_VArr","ownerForm","onEditRow","rowPage","vArr_awaiter","valueBoxs","onRowChanged","rowValues","$owner","list","renderItem","showRow","editRow","editSubmitCaption","internalAddRow","newSubmitCaption","button","paddingTop","paddingBottom","arrsRes","arrRes","newSubmit","editSubmit","arrUI","vForm_VForm","buttonStyle","textAlign","paddingLeft","paddingRight","overflow","vTuidField_VTuidField","vTuidField_awaiter","showInfo","boxId","idBox","bandsBuilder_BandsBuilder","layout","formItems","bandsOnFly","bandsFromLayout","bands","bandsFromFields","bandFromArr","bandFromField","formItem","rfn","resFromName","buildVField","vFields","vArrs","onFormSubmit","buildFormValues","buildBands","bandColl","bandsBuilder","build","band","getVFields","f","getVArr","getVSubmit","rows","row","fn","initValues","arrList","ctrl","fieldName","valueFromFieldName","propName","buildFieldValues","array","deep","buildObservableValues","vForm_decorate","HttpChannel","isCenter","hostUrl","apiToken","showError","_host__WEBPACK_IMPORTED_MODULE_2__","keys","k","buildOptions","innerFetch","buildError","timeOutHandler","encodeURI","ok","statusText","ct","retJson","toLowerCase","_ui_nav__WEBPACK_IMPORTED_MODULE_1__","_appBridge__WEBPACK_IMPORTED_MODULE_0__","Headers","append","resOptions","resLang","lodash__WEBPACK_IMPORTED_MODULE_0__","_","l","languages","setResOptions","_CApp__WEBPACK_IMPORTED_MODULE_0__","_uq__WEBPACK_IMPORTED_MODULE_2__","_tuid__WEBPACK_IMPORTED_MODULE_4__","_query__WEBPACK_IMPORTED_MODULE_6__","_map__WEBPACK_IMPORTED_MODULE_7__","_form_viewModel__WEBPACK_IMPORTED_MODULE_10__","_formUI__WEBPACK_IMPORTED_MODULE_12__","_ControllerUq__WEBPACK_IMPORTED_MODULE_13__","_link__WEBPACK_IMPORTED_MODULE_15__","_icons__WEBPACK_IMPORTED_MODULE_16__","control_ControlBase","formView","renderControl","filled","validate","control_Control","face","setProps","element","defaultValue","clearErrors","clearValue","isOK","getValueFromElement","notes","buttonsControl_ButtonsControl","otherClick","onOther","readValues","nothing","btnOther","submitButton","otherButton","TxtRequired","charsControl_CharsControl","parseValue","lodash","classnames","form-control","has-success","is-invalid","is-valid","renderInput","stringControl_StringControl","ErrInvalidNumber","ErrMin","ErrMax","unknownControl_UnknownControl","role","unknownControl_EmptyControl","pickIdControl_PickIdControl","pick","fromPicked","onPicked","itemFromId","initCaption","String","controlContent","component","pickIdControl_decorate","pickTuidControl_PickTuidControl","onIdChanged","onFormValues","pickTuidControl_decorate","pickControl_PickControl","pickControl_awaiter","Content","pickControl_decorate","createControl","group","groupRow","createGroupControl","fieldRow","fieldType","defaultFaces","controls","createFieldControl","help","string","password","number","parseFloat","checkbox","trueValue","falseValue","checked","radiobox","selectedIndex","selectedOptions","pick-id","pick-tuid","textarea","int","dec","bool","ln","Entity","entities","typeId","fieldMaps","sys","sName","jName","tvApi","returns","schema","setSchema","buildFieldTuid","buildArrFieldsTuid","getTuid","fieldArr","an","buildFieldsParams","arrResult","pa","rowResult","packRow","packArr","charCodeAt","substring","escape","unpackRow","unpackArr","ch0","fLen","to","vals","maxCacheSize","tuid_Tuid","queue","waitingIds","cache","buildIdBoxer","BoxId","prototype","defineProperty","writable","enumerable","toJSON","idName","_id","delete","defer","util","has","cacheTuids","moveToHead","shift","proxied","cacheValue","api","getApiFrom","tuids","tuidIds","cacheTuidFieldValues","afterCacheId","cacheDivIds","tuidGet","divName","cacheFieldsInValue","arrValues","tuidDiv","getDiv","tuidSave","retId","inId","tuidSearch","tuidArrGet","tuidArrSave","tuidArrPos","showTuid","TuidMain","Main","TuidDiv","cacheIds","cApp","cUqFrm","getImportUq","retErrors","cTuidMainFromName","$proxy","action_Action","pack","sheet_Sheet","states","op","ops","actions","discription","appId","sheetSave","app","flow","sheetAction","brief","unpackSheet","flows","getSheet","getArchive","unpack","sheetArchive","sheetArchives","stateSheets","sheet_PageStateItems","stateSheetCount","s","count","getStateSheets","query_Query","isPaged","more","hasMore","startField","buildParams","unpackReturns","$page","query","table","book_Book","queryApiName","history_History","map_Map","queries","newAction","newQuery","add","del","pending_Pending","fieldDefaultValue","entities_Entities","sheets","books","maps","histories","pendings","tuidArr","actionArr","sheetArr","queryArr","bookArr","mapArr","historyArr","pendingArr","loadIds","clearCacheTimer","accesses","buildEntities","loadEntities","buildTuids","buildAccess","div","tuidUrl","cacheTimer","proxyColl","newTuid","fromType","fromObj","book","pending","uqId","newBook","newMap","newHistory","newSheet","newPending","buildSheet","mainFields","ownerField","af","bootstrapCreateRow","elementCreateRow","_control__WEBPACK_IMPORTED_MODULE_1__","RowContainer","cc","control","setInitValues","ElementRowContainer","BootStrapRowContainer","refetchApi","ApiBase","getHttpChannel","callFetch","TitleBar","logoutClick","_nav__WEBPACK_IMPORTED_MODULE_1__","navChange","hasBack","href","debugLogout","rightView","b","openWindow","DefaultRow","vQueryMain_VQueryMain","resetPage","loadPage","replacePage","pageResult","queryResult","again","renderExtra","rightClose","queryRow","vQuerySelect_VQuerySelect","vQuerySelect_awaiter","selectRow","vQuerySelect_QueryPageItems","cQuery_CQueryBase","cQuery_CQuery","VQueryMain","main","cQuery_CQuerySelect","VQuerySelect","Loading","height","width","_rule__WEBPACK_IMPORTED_MODULE_0__","_field__WEBPACK_IMPORTED_MODULE_1__","_face__WEBPACK_IMPORTED_MODULE_2__","_TonvaForm__WEBPACK_IMPORTED_MODULE_5__","FormView","buildRows","some","every","formRows","createRow","buildRow","buttonsRow","createButtons","_rowContainer__WEBPACK_IMPORTED_MODULE_4__","formRow","formRowCreator","_control__WEBPACK_IMPORTED_MODULE_3__","buttons","CApp","tonva_tools__WEBPACK_IMPORTED_MODULE_1__","tonvaApp","cImportUqs","cUqCollection","tonva_react_form__WEBPACK_IMPORTED_MODULE_2__","onRowClick","selectUnitPage","appUnits","promiseChecks","newCUq","checks","retError","CUq","_uq__WEBPACK_IMPORTED_MODULE_3__","cUqArr","VAppMain","isProduction","loadAppUnits","showUnsupport","loadUqs","clearPrevPages","showMainPage","beforeStart","renderView","sheetTypeId","getCUqFromId","navSheet","_centerApi__WEBPACK_IMPORTED_MODULE_4__","userAppUnits","appContent","appPage","entityIcons","react__WEBPACK_IMPORTED_MODULE_0___default","tonva_react_form__WEBPACK_IMPORTED_MODULE_1__","fixWidth","ControllerUq","centerApi","vMain_VSheetMain","newClick","schemaClick","archivesClick","sheetStateClick","renderState","badge","getStateLabel","templet","statesCount","filter","isDev","vNew_VSheetNew","vNew_awaiter","valuesWithBox","onSave","leftFlowStyle","vSheetView_VSheetView","flowRow","preState","sheetView","removed","sheetData","vEdit_VSheetEdit","vEdit_awaiter","saveSheet","controllers_form","vSheetAction_VSheetAction","actionClick","vSheetAction_awaiter","acted","deleteClick","editClick","editSheet","actionButtons","startButtons","no","stateLabel","getActionLabel","backPage","vSchema_VSheetSchema","schemaStringify","vArchives_VArchives","archiveClick","vArchives_awaiter","processing","archiveRow","getArchives","vList_VSheetList","rowClick","vList_awaiter","pageStateItems","listRow","stateName","vArchived_VArchived","vSheet_VSheet","vSaved_VSheetSaved","restart","vSaved_awaiter","vSheetProcessing_VSheetProcessing","cSheet_CSheet","cSheet_awaiter","showSaved","loadStateSheetCount","createPageStateItems","VSheetMain","onSheet","me","$","sheetActPreState","sheetActState","changeStateCount","curState","delta","stateCount","VSheetNew","sheetNew","VSheetSaved","sheetSaved","VSheetEdit","sheetEdit","VSheetSchema","VArchives","VArchived","VSheetList","VSheetAction","VSheetProcessing","showArchived","showAction","showProcessing","onEvent","getSheetData","vCall","inBrief","getArchived","getStateUI","actionName","sheetTitle","disc","vBookMain_VBookMain","cBook_CBook","VBookMain","vUq_VUq","isSysVisible","linkItem","cLink","lists","tuidLinks","mapLinks","sheetLinks","actionLinks","queryLinks","bookLinks","historyLinks","pendingLinks","Fragment","isVisible","controllers_link","cTuidMain","cMap","cSheet","cAction","cQuery","cBook","cHistory","cPending","lowerPropertyName","cUq_CUq","schemaLoaded","CTuidMain","controllers_tuid","CTuidSelect","CTuidInfo","CQuery","CQuerySelect","CMap","CAction","CSheet","CBook","CHistory","controllers_history","CPending","baseUrl","loadEntites","collection","warn","tuidPlaceHolder","en","sheetFromTypeId","startSheet","entityName","cTuidEdit","entityType","cFromName","tUI","cEntity","getUI","VUq","vMain_VMapMain","itemRender","ItemRow","remove","border","valuesView","box","isLeaf","keyIndex","keyUI","keyUIs","keyContent","valuesContent","keyNone","addClick","removeClick","inputValues_VInputValues","onValuesSubmit","inputValues_awaiter","cMap_MapItem","cMap_CMap","cMap_awaiter","keysLen","keyFields","keysLast","idx","keyField","kn","searchParam","ki","searchOnKey","arr1","nullable","rowIndex","createItem","getLable","confirmDelete","template","v0","q","retFields","newItem","addItem","VMapMain","callParam","vPendingMain_VPendingMain","cPending_CPending","VPendingMain","vActionMain_VActionMain","resultPage","mainPage","cAction_CAction","VActionMain","vHistoryMain_VHistoryMain","cHistory_CHistory","VHistoryMain","RuleCustom","func","RulePredefined","rules_RuleNum","minMsg","maxMsg","checkMore","integer","widget_Widget","context","itemSchema","fieldProps","contextErrors","onInputChange","changeValue","getUiItem","visible","removeErrorWidget","isChanging","newValue","fromElement","onChanging","onChanged","prev","allowChange","setDataValue","setElementValue","fieldClass","FieldClass","uiLabel","requiredFlag","FieldContainer","Templet","errorList","tag","textWidget_TextWidget","renderTemplet","onKeyDown","numberWidget_NumberWidget","updownWidget_UpdownWidget","keyCode","returnValue","isValidKey","dateWidget_DateWidget","checkBoxWidget_CheckBoxWidget","defaultChecked","selectWidget_SelectWidget","option","selectWidget_decorate","idWidget_IdWidget","pickId","required-item","cursor-pointer","idWidget_decorate","Unknown","dataType","uiType","dataTypes","buttonWidget_ButtonWidget","buttonWidget_awaiter","onButtonClick","observerRender","widgetType","ButtonClass","ArrComponent","selectable","deletable","restorable","getArrRowContexts","arrLabel","ArrContainer","RowSeperator","formSelectable","formDeletable","formRestorable","arrSelectable","arrDeletable","arrRestorable","ac","rc","rs","sep","form_context","typeofTemplet","factory","selectCheck","deleteIcon","$isSelected","$source","isDeleted","$isDeleted","onDelClick","editContainer","deleted","row-selected","Provider","widgetsFactory","datetime","time","month","email","updown","checkboxes","radio","range","typeWidget","getItemSchema","getTypeWidget","WidgetClass","WidgetElement","renderContainer","netToken","_uqApi__WEBPACK_IMPORTED_MODULE_0__","_wsChannel__WEBPACK_IMPORTED_MODULE_1__","left0","zero","num","fix","Controller","_net__WEBPACK_IMPORTED_MODULE_3__","onMessageReceive","onMessage","isLogined","unregisterReceiveHandler","receiveHandlerId","onDispose","vp","registerReceiveHandler","internalStart","_resolve_$","View","VPage","coordinator","_schema__WEBPACK_IMPORTED_MODULE_2__","_uiSchema__WEBPACK_IMPORTED_MODULE_3__","_widgets__WEBPACK_IMPORTED_MODULE_1__","_context__WEBPACK_IMPORTED_MODULE_2__","contextType","itemObservable","isFirst","loading","beforeLoad","loaded","allLoaded","firstSize","appendPosition","_items","mobx__WEBPACK_IMPORTED_MODULE_0__","topDiv","_uid__WEBPACK_IMPORTED_MODULE_1__","bottomDiv","setPageStart","unshift","reverse","CacheIds","maxCount","dict","Map","loadId","_loadIds","_loadId","TonvaForm","_formView__WEBPACK_IMPORTED_MODULE_2__","DropdownActions","classnames__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_1___default","handleDocumentClick","dropdownOpen","contains","menu","toggle","removeEventListener","isRight","hasIcon","data-toggle","aria-expanded","dropdown-menu","dropdown-menu-right","aria-hidden","EasyDate","now","nDate","getDate","_date","hour","getHours","minute","getMinutes","getMonth","hm","getFullYear","Media","imgStyle","disp","px","py","alt","SearchBox","allowEmptySearch","inputSize","lab","inputClassName","buttonText","mobx__WEBPACK_IMPORTED_MODULE_2__","MultiStep","lodash__WEBPACK_IMPORTED_MODULE_1__","lodash__WEBPACK_IMPORTED_MODULE_1___default","classnames__WEBPACK_IMPORTED_MODULE_2__","_form__WEBPACK_IMPORTED_MODULE_3__","stepViews","topView","onPrev","onNext","stepName","steps","ButtonConten","prefix","btnContent","formProps","setStep","nextStepName","pIcon","sIcon","Badge_Badge","badgeAlign","badgeVertical","LMR_LMR","cursor","LMR_decorate","FA_FA","spin","pull","pulse","rotate","flip","inverse","Muted","base_ListBase","pageItems","selectedItems","nextProps","clickable_Clickable","static_Static","selectable_Selectable","itemsArray","compare","_selectedItems","selected","labelId","si","buildItems","anySelected","onSelect","flex","marginBottom","htmlFor","selectable_decorate","list_List","listBase","nextState","nextContext","updateProps","isLoading","staticRow","list_decorate","PropRow","row_PropBorder","borderTop","row_PropGap","w","backgroundColor","valueAlignStart","valueAlignCenter","valueAlignEnd","row_LabeledPropRow","gridProps","prop","bk","bg-white","renderLabel","renderProp","align","vAlign","col","full","alignValue","renderPropBody","renderPropContent","StringPropRow","NumberPropRow","row_ListPropRow","borderBottom","ComponentPropRow","propView_PropView","isGap","PropGrid_PropGrid","propView","listRow_ListRow","pressed","isIcon","noteNum","mid","viceSpan","vice","middle","midSize","unread","uv","va-action","listView_ListView","elHeader","itemClick","converter","ex","listItem","listView_decorate","Tab","_content","contentBuilder","tabs_Tabs","tabClick","selectedTab","tabBack","contentBack","notify","display","notifyCircle","formRes","zh","form_Form","calcSelectOrDelete","formData","arrItemOperated","DefaultContainer","DefaultFieldContainer","fieldLabelSize","labelView","fieldCol","DefaultFieldClass","DefaultButtonClass","DefaultRes","ui_res","py-3","Container","formContext","initDataItem","arrItem","arrItems","arrDict","formArrVal","beforeShow","FetchErrorView","reApi","_net__WEBPACK_IMPORTED_MODULE_1__","errContent","LocalData","Data","homeTabCur","module","exports","idDates_IdDates","date_init","date_update","consts_appIcon","appItemIcon","mainApi","toUser","fromUnit","fromApp","fellow","isOwner","isAdmin","apps","member","assigned","roles","devApi","uqsText","service","admins_Admins","store","owners","admins","fellows","unitAdmins","ua","fellowId","unitSetAdmin","removeCur","admin","unitAddAdmin","dev_ObjItems","dev","_load","_save","_inc","_del","_dec","dev_decorate","dev_Apps","searchedUqs","saveApp","delApp","counts","searchUq","searchPageSize","allUqs","appBindUq","dev_Uqs","saveUq","delUq","dev_Buses","buses","saveBus","delBus","bus","dev_Servers","servers","saveServer","delServer","server","dev_Services","services","saveService","delService","changeServiceProp","db","db_type","connection","loadUqServices","SearchItems","dev_Dev","searchApp","searchServer","searchUqdb","cacheIds_CacheUnits","cacheIds_CacheUqs","cacheIds_CacheApps","cacheIds_CacheServers","store_Store","cacheUnits","cacheUqs","cacheApps","cacheServers","memberCount","roleApps","roleMember","roleMembers","memberRoles","unitChangeProp","unitApps","unitMemberCount","uqServer","uqBuilderUrl","unitDeleteApp","inUnit","unitAddApp","unitRoles","unitAddRole","unitRoleChangeProp","unitRoleApps","unitRoleSetApps","unitMembers","unitAssignMember","unitMemberRoles","rId","unitSetMemberRoles","org","store_decorate","store_store","span","isLink","unitSpan_UnitSpan","unitSpan_UnitInfo","unitSpan_decorate","unitSpan_UnitName","uqSpan_UqSpan","uqSpan_UqInfo","uqSpan_decorate","appSpan_AppSpan","appSpan_AppInfo","public","appSpan_decorate","apis","appSpan_AppRow","serverSpan_ServerSpan","serverSpan_ServerInfo","cloud","ip","serverSpan_decorate","stringValueEdit_StringValueEdit","stringValueEdit_awaiter","errorDiv","info","stringValueEdit_TextValueEdit","onTextAreaChange","NewFellow_NewFellowPage","onSendInvitation","NewFellow_awaiter","addNew","NewFellow","NewFellow_decorate","EditAdmin_EditAdmin","isRoot","Fellow","Administors_EditAdmin","EditAdmin_decorate","REACT_APP_DEFAULT_ICON","Administors_AdministorsPage","onNewOwner","newAdmin","onNewAdmin","ownersView","adminsView","onNewFellow","showOwners","showAdmins","onItemClick","Administors","Administors_decorate","info_Info","renderUqRow","uqAccess","act","info_awaiter","appActed","newInUnit","restoreUnitApp","stopUnitApp","newApp","addUnitApp","uqAccesses","faName","info_decorate","new_PageApps","new_NewApp","new_awaiter","appClick","renderApp","new_decorate","Apps_AppsPage","loadApps","ban","src_Apps","Apps_decorate","newRole_NewRole","tf","roleApps_RoleApps","renderRoleApp","memberPage_MemberPage","renderMemberRole","setRole","memberPage_SetRole","loadRoles","loadMemberRoles","orgValue","roleUser","onAssigned","roleClick","memberPage_decorate","setMemberRoles","selectRole","renderRole","roleSelect","membersPage_MembersPage","loadMembers","MemberRow","setRoleUser","roleId","membersPage_MemberSearch","renderMember","userClick","membersPage_decorate","members","rolePage_RolePage","roleAppClick","rolePage_RoleApps","loadRoleApps","rolePage_EditRole","onMembersClick","membersLeft","membersRight","editRole","addRoleApp","rolePage_decorate","roleChangeProp","isSysRole","onNameChanged","onDiscriptionChanged","setRoleApps","appSelect","midClassName","Members_Members","newRole","allUsersClick","Members_decorate","src_organization_ui","teamPerson","tonva_react_uq","_super","searchOnPost","querySelect","team","noStaff","staff","noPost","organization","teamPosts","CN","tuidNullCaption","arrNew","arrEdit","fromUser","subject","getMessage","newMessage","editSumbit","sectionTeam","teamOrganization","person","given","sur","gender","section","vOpBinding_VOpBinding","sheetOpsChanged","stateTosView","tosText","tos","organizationRow","teamRow","observableTeamRow","sectionRow","observableSectionRow","postRow","observablePostRow","stateView","vOpBinding_awaiter","saveOps","selectablePosts","teamsList","teams","defaultSelected","onPostSelectChanged","sections","onTeamSelectChanged","onSectionSelectChanged","organizations","posts","postTos","pid","pto","buildSelectablePost","buildSelectableTeams","teamTos","hasAllTeams","teamId","tto","teamTo0","teamTo0Sections","buildSelectableSections","teamTo","selectableTeam0","hasSection","selectableSection","selectableSections","stateTo","configable","stateClick","tosView","opTos","tosTexts","stateToName","toArr","sp","postId","teamCount","st","sectionCount","ss","sectionId","saveSheetStatePosts","vAllPosts_VAllPosts","isChanged","onCheckChanged","def","saveChange","vAllPosts_awaiter","saveEntityOpForAll","pageRender","buttonSave","lineHeight","fontWeight","listStyleType","blocks","block","getEntityOpForAll","entityOpForAllResult","entityOpForAll","eaa","vAllPosts_decorate","vFullFunction_VFullFunction","users","onStopFully","vFullFunction_awaiter","onSumitStopFully","onCancelStop","_uq","_user","entityOpUserFully","callSearchUser","onUserSelected","renderUser","pageUsers","onSetFully","tuidUser","onCancelFully","renderSelectUser","usersView","vFullFunction_decorate","vSearchUser_VSearchUser","vSearchUser_PageUsers","onUserClick","vSearchUser_awaiter","cOpBinding_COpBinding","appRender","appView","appsView","cOpBinding_awaiter","entityPosts","opTo","postDict","teamDict","sectionDict","sheetClick","sheetClickOld","renderSetting","settingClick","V","uqRender","nameRender","sheetRender","buildPosts","buildAppsUqs","setUqEntities","queryAllTeams","organizationDict","tm","og","sec","lns","setEntities","setSheets","lines","actionSaveEntityOpPost","opName","organization_COrganization","links","organization_VOrganization","createIdPick","createIdPick_IdPickPage","candidateItems","searchPlaceHolder","ServerCaption","editPage_formRows","editPage_awaiter","moreCandidates","editPage_EditBasePage","editPage_EditPage","editPage_NewPage","appsPage_AppsPage","appList","listRowClick","appRow","appUqs_SearchUqPage","appUqs_awaiter","onUq","getMyUqs","appUqs_decorate","appUqs_AppUqs","removeBind","btnProps","appUqs_Uqs","listHeader","btn","onBind","appPage_AppPage","editItem","appPage_awaiter","deleteItem","deleteApp","menuItems","btnAddUq","uqClick","elAccess","bind_access","uqBindPage_UqBindPage","accessChecked","saveUqBind","uqBindPage_awaiter","removeUqBind","btnDelete","checkAccessList","bc","apps_AppController","apps_awaiter","service_count","buildBindUqs","isNew","uaUq","apps_decorate","uqUpload_UqUpload","onFilesChange","upFiles","files","fileClick","file","fr","FileReader","onload","uqUpload_UqPage","readAsText","onUpdate","uqUpload_awaiter","update","onUpdateThoroughly","lastModifiedDate","trunc","sz","thoroughly","fileInput","FormData","abortController","AbortController","signal","uqUpload_CompileResult","fileList","fileRender","encType","multiple","compiled","doubleClick","pane","getParent","topIntoView","bottomIntoView","texts","seconds","abort","timeHandler","tagName","parentElement","clearTimeHandler","scrollIntoView","reader","getReader","pump","read","done","scrollToBottom","uintArray","encodedString","fromCharCode","apply","decodeURIComponent","uintToString","byteLength","onDoubleClick","wordWrap","whiteSpace","newServicePage_ServerCaption","urlRow","serverRow","newServicePage_awaiter","dbTypeRow","dbRow","connectionRow","newServicePage_NewServicePage","bindId","tonvaForm","servicePage_ServicePage","onUrlChanged","servicePage_awaiter","changeProp","onDbChanged","onDbTypeChanged","onConnectionChanged","onDeleteClick","servicePage_decorate","uqs_editPage_formRows","uqs_editPage_EditBasePage","uqs_editPage_awaiter","uqs_editPage_EditPage","uqs_editPage_NewPage","uqPage_UQPage","uqPage_awaiter","deleteUq","onUqUpload","serviceClick","showNewServicePage","renderService","compile_time","compile","listPage_ListPage","uqList","uqs_UQController","uqs_awaiter","loadUqEntities","uqGetEntities","r0","svc","uqs_decorate","row_Row","buses_Info","buses_SchemaView","buses_decorate","repeated","idPickAppProps","services_awaiter","idPickUqProps","serviceTypeNames","bindIdField","services_urlRow","discriptionRow","services_serverRow","ObjView_ObjView","ObjView_Info","ObjView_New","ObjView_decorate","saveCur","stepHeader","ObjView_Edit","extraMenuActions","vApps_VApps","appUsers","appUsersList","onAppsClick","searchBox","vUsers_VUsers","userApps","userAppsList","searchUser","onUsersClick","vApp_VApp","curApp","curAppUsers","onAppEditUsers","vUser_VUser","curUser","curUserApps","onUserEditApps","vAppEditUsers_VAppEditUsers","appEditUsers","editUser","onUserChanged","vAppEditUsers_awaiter","bindAppUser","vUserEditApps_VUserEditApps","userEditApps","editApp","onAppChanged","vUserEditApps_awaiter","bindUserApp","cUsers_UsersController","onAppUsers","cUsers_awaiter","loadAppUsers","onUserApps","loadUserApps","unitOneAppUsers","unitOneUserApps","unitAppEditUsers","unitUserEditApps","appIcon","userIcon","unitAppUsers","coll","unitUsers","cUsers_decorate","Admin_CAdmin","userAdminUnits","adminUnits","loadAdminUnits","Admin_VAdmin","noUnitPage","Admin_awaiter","Admin_AdminPage","rArrow","typeCaptions","1","2","3","appsAction","usersAction","newUsersAction","adminsAction","cOrganization","organizeAction","noneAction","objProps","P","loadCounts","devItems","Admin_UnitProps","Admin_decorate","onNickChanged","src_App_0","cAdmin","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","react_dom","URL","response","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.0f9288a6.chunk.js","sourcesContent":["export {left0} from './left0';\r\nexport * from './user';\r\nexport * from './net';\r\nexport * from './ui';\r\nexport * from './uid';\r\nexport {PageItems} from './pageItems';\r\nexport {CacheIds} from './cacheIds';\r\n","export * from './form';\r\nexport * from './list';\r\nexport * from './dropDownActions';\r\nexport * from './easyDate';\r\nexport * from './propGrid';\r\nexport * from './components';\r\nexport * from './media';\r\nexport * from './listView';\r\nexport * from './searchBox';\r\nexport * from './multiStep';\r\nexport * from './uid';\r\n","import * as React from 'react';\r\nimport { Controller, VPage, View } from 'tonva-tools';\r\nimport { Entity, Field, TuidMain } from '../entities';\r\nimport { CUq } from './uq/cUq';\r\nimport { VForm, FieldInputs, FieldCall, FormOptions, FormMode } from './form';\r\nimport { CQuerySelect } from './query';\r\nimport { FormUI, FieldTuidUI } from './formUI';\r\nimport { entityIcons } from './icons';\r\nimport { ControllerUq } from './ControllerUq';\r\n\r\nexport interface EntityUI {\r\n    form?: FormUI;\r\n}\r\n\r\nexport abstract class CEntity<T extends Entity, UI extends EntityUI> extends ControllerUq {\r\n    constructor(cUq: CUq, entity: T, ui: UI, res: any) {\r\n        super(cUq, res);\r\n        Object.setPrototypeOf(this.x, cUq.x);\r\n        let {name, typeName} = entity;\r\n        this.entity = entity;\r\n        this.ui = ui; // || entityUI.ui;\r\n        this.label = this.res.label || name;\r\n        this.icon = entityIcons[typeName];\r\n    }\r\n    readonly entity: T;\r\n    readonly ui: UI;\r\n\r\n    protected async beforeStart():Promise<boolean> {\r\n        //if (await super.beforeStart() === false) return false;\r\n        await this.entity.loadSchema();\r\n        return true;\r\n    }\r\n\r\n    createForm(onSubmit:()=>Promise<void>, values?:any, mode?:FormMode) {\r\n        let options = this.buildFormOptions(mode);\r\n        let ret = new VForm(options, onSubmit);\r\n        ret.setValues(values);\r\n        return ret;\r\n    }\r\n\r\n    private buildFormOptions(mode?:FormMode):FormOptions {\r\n        let {fields, arrFields} = this.entity;\r\n        let none, submitCaption, arrNewCaption, arrEditCaption, arrTitleNewButton;\r\n        if (this.res !== undefined) {\r\n            none = this.res['none'];\r\n            submitCaption = this.res['submit'];\r\n            arrNewCaption = this.res['arrNew'];\r\n            arrEditCaption = this.res['arrEdit'];\r\n            arrTitleNewButton = this.res['arrTitleNewButton'];\r\n        }\r\n        if (none === undefined) {\r\n            none = this.cUq.res['none'] || 'none';\r\n        }\r\n        if (submitCaption === undefined)\r\n            submitCaption = this.cUq.res['submit'] || 'Submit';\r\n        if (arrNewCaption === undefined)\r\n            arrNewCaption = this.cUq.res['arrNew'] || 'New';\r\n        if (arrEditCaption === undefined)\r\n            arrEditCaption = this.cUq.res['arrEdit'] || 'Edit';\r\n        if (arrTitleNewButton === undefined)\r\n        arrTitleNewButton = this.cUq.res['arrTitleNewButton'];\r\n        if (mode === undefined) mode = FormMode.new;\r\n        let formUI = this.ui.form;\r\n        let ret:FormOptions = {\r\n            fields: fields,\r\n            arrs: arrFields,\r\n            ui: formUI,\r\n            res: this.res || {},\r\n            inputs: this.buildInputs(formUI),\r\n            none: none,\r\n            submitCaption: submitCaption,\r\n            arrNewCaption: arrNewCaption,\r\n            arrEditCaption: arrEditCaption,\r\n            arrTitleNewButton: arrTitleNewButton,\r\n            mode: mode,\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private buildInputs(formUI: FormUI):FieldInputs {\r\n        let {fields, arrFields} = this.entity;\r\n        let ret:FieldInputs = {};\r\n        this.buildFieldsInputs(ret, fields, undefined, formUI);\r\n        if (arrFields !== undefined) {\r\n            for (let arr of arrFields) {\r\n                let {name, fields} = arr;\r\n                let items = formUI && formUI.items;\r\n                this.buildFieldsInputs(ret, fields, name, items && items[name] as FormUI);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private buildFieldsInputs(ret:FieldInputs, fields:Field[], arr:string, formUI: FormUI) {\r\n        if (arr !== undefined) {\r\n            let arrFieldInputs = ret[arr];\r\n            if (arrFieldInputs === undefined) {\r\n                ret[arr] = arrFieldInputs = {};\r\n                ret = arrFieldInputs;\r\n            }\r\n        }\r\n        for (let field of fields) {\r\n            let {name, _tuid} = field;\r\n            if (_tuid === undefined) continue;\r\n            let fieldUI = formUI && formUI.items && formUI.items[name] as FieldTuidUI;\r\n            ret[name] = {\r\n                select: this.buildSelect(field, arr, fieldUI),\r\n                content: this.buildContent(field, arr),\r\n                placeHolder: this.cUq.getTuidPlaceHolder(_tuid),\r\n            };\r\n        }\r\n    }\r\n\r\n    protected buildSelect(field:Field, arr:string, fieldUI: FieldTuidUI):FieldCall {\r\n        return async (form:VForm, field:Field, values:any):Promise<any> => {\r\n            let {_tuid, _ownerField} = field;\r\n            let cTuidSelect = await (_tuid as TuidMain).cSelectFrom();\r\n            let param:any = undefined;\r\n            if (_ownerField !== undefined) param = form.getValue(_ownerField.name);\r\n            if (fieldUI && fieldUI.autoList === true) {\r\n                console.log('select search set param=empty string');\r\n                param = '';\r\n            }\r\n            let ret = await cTuidSelect.call(param);\r\n            cTuidSelect.removeCeased(); // 清除已经废弃的顶部页面\r\n            if (ret === undefined) return undefined;\r\n            let id = cTuidSelect.idFromItem(ret);\r\n            _tuid.useId(id);\r\n            return id;\r\n        };\r\n    }\r\n\r\n    protected buildContent(field:Field, arr:string): React.StatelessComponent<any> {\r\n        return;\r\n    }\r\n\r\n    cQuerySelect(queryName:string):CQuerySelect {\r\n        return this.cUq.cQuerySelect(queryName);\r\n    }\r\n}\r\n\r\nexport abstract class VEntity<T extends Entity, UI extends EntityUI, C extends CEntity<T, UI>> extends VPage<C> {\r\n    protected readonly entity: T;\r\n    protected readonly ui: UI;\r\n    constructor(controller: C) {\r\n        super(controller);\r\n        this.entity = controller.entity;\r\n        this.ui = controller.ui;\r\n    }\r\n\r\n    get label():string {return this.controller.label}\r\n\r\n    //private _form_$: VForm;\r\n    protected createForm(onSubmit:()=>Promise<void>, values?:any, mode?:FormMode): VForm {\r\n        //if (this._form_$ !== undefined) return this._form_$;\r\n        return this.controller.createForm(onSubmit, values, mode);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport {User, Guest, UserInNav} from '../user';\r\nimport {Page} from './page';\r\nimport {netToken} from '../net/netToken';\r\nimport FetchErrorView from './fetchErrorView';\r\nimport {FetchError} from '../fetchError';\r\nimport {appUrl, setMeInFrame, logoutUqTokens} from '../net/appBridge';\r\nimport {LocalData} from '../local';\r\nimport {guestApi, logoutApis, setCenterUrl, setCenterToken, WSChannel, meInFrame, isDevelopment, host} from '../net';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport '../css/va-form.css';\r\nimport '../css/va.css';\r\nimport '../css/animation.css';\r\nimport { WsBase, wsBridge } from '../net/wsChannel';\r\nimport { resOptions } from './res';\r\nimport { Loading } from './loading';\r\n\r\nconst regEx = new RegExp('Android|webOS|iPhone|iPad|' +\r\n    'BlackBerry|Windows Phone|'  +\r\n    'Opera Mini|IEMobile|Mobile' , \r\n    'i');\r\nconst isMobile = regEx.test(navigator.userAgent);\r\nexport const mobileHeaderStyle = isMobile? {\r\n    minHeight:  '3em'\r\n} : undefined;\r\n\r\nconst logo = require('../img/logo.svg');\r\nlet logMark: number;\r\nconst logs:string[] = [];\r\n\r\nexport interface Props //extends React.Props<Nav>\r\n{\r\n    //view: JSX.Element | (()=>JSX.Element);\r\n    //start?: ()=>Promise<void>;\r\n    onLogined: ()=>Promise<void>;\r\n    notLogined?: ()=>Promise<void>;\r\n};\r\nlet stackKey = 1;\r\nexport interface StackItem {\r\n    key: number;\r\n    view: JSX.Element;\r\n    ceased: boolean;\r\n    confirmClose?: ()=>Promise<boolean>;\r\n    disposer?: ()=>void;\r\n}\r\nexport interface State {\r\n    stack: StackItem[];\r\n    wait: 0|1|2;\r\n    fetchError: FetchError\r\n}\r\n\r\nexport class NavView extends React.Component<Props, State> {\r\n    private stack: StackItem[];\r\n    private htmlTitle: string;\r\n    private waitCount: number = 0;\r\n    private waitTimeHandler?: NodeJS.Timer;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.back = this.back.bind(this);\r\n        this.navBack = this.navBack.bind(this);\r\n        this.stack = [];\r\n        this.state = {\r\n            stack: this.stack,\r\n            wait: 0,\r\n            fetchError: undefined\r\n        };\r\n    }\r\n    async componentWillMount() {\r\n        window.addEventListener('popstate', this.navBack);\r\n    }\r\n\r\n    async componentDidMount()\r\n    {\r\n        nav.set(this);\r\n        /*\r\n        let start = this.props.start;\r\n        if (start !== undefined) {\r\n            await start();\r\n        }\r\n        else {\r\n        */\r\n            await nav.start();\r\n        //}\r\n    }\r\n\r\n    get level(): number {\r\n        return this.stack.length;\r\n    }\r\n\r\n    startWait() {\r\n        if (this.waitCount === 0) {\r\n            this.setState({wait: 1});\r\n            this.waitTimeHandler = global.setTimeout(\r\n                () => {\r\n                    this.waitTimeHandler = undefined;\r\n                    this.setState({wait: 2});\r\n                },\r\n                1000) as NodeJS.Timer;\r\n        }\r\n        ++this.waitCount;\r\n        this.setState({\r\n            fetchError: undefined,\r\n        });\r\n    }\r\n\r\n    endWait() {\r\n        setTimeout(() => {\r\n            /*\r\n            this.setState({\r\n                fetchError: undefined,\r\n            });*/\r\n            --this.waitCount;\r\n            if (this.waitCount === 0) {\r\n                if (this.waitTimeHandler !== undefined) {\r\n                    clearTimeout(this.waitTimeHandler);\r\n                    this.waitTimeHandler = undefined;\r\n                }\r\n                this.setState({wait: 0});\r\n            }\r\n        },100);\r\n    }\r\n\r\n    async onError(fetchError: FetchError)\r\n    {\r\n        let err = fetchError.error;\r\n        if (err !== undefined && err.unauthorized === true) {\r\n            await nav.showLogin();\r\n            return;\r\n        }\r\n        this.setState({\r\n            fetchError: fetchError,\r\n        });\r\n    }\r\n\r\n    show(view: JSX.Element, disposer?: ()=>void): number {\r\n        this.clear();\r\n        return this.push(view, disposer);\r\n    }\r\n\r\n    push(view: JSX.Element, disposer?: ()=>void): number {\r\n        this.removeCeased();\r\n        if (this.stack.length > 0) {\r\n            window.history.pushState('forward', null, null);\r\n        }\r\n        let key = stackKey++;\r\n        this.stack.push({\r\n            key: key,\r\n            view: view, \r\n            ceased: false,\r\n            disposer: disposer\r\n        });\r\n        this.refresh();\r\n        //console.log('push: %s pages', this.stack.length);\r\n        return key;\r\n    }\r\n\r\n    replace(view: JSX.Element, disposer?: ()=>void): number {\r\n        let item:StackItem = undefined;\r\n        let stack = this.stack;\r\n        if (stack.length > 0) {\r\n            item = stack.pop();\r\n            //this.popAndDispose();\r\n        }\r\n        let key = stackKey++;\r\n        this.stack.push({\r\n            key: key, \r\n            view: view, \r\n            ceased: false,\r\n            disposer: disposer\r\n        });\r\n        if (item !== undefined) this.dispose(item.disposer);\r\n        this.refresh();\r\n        //console.log('replace: %s pages', this.stack.length);\r\n        return key;\r\n    }\r\n\r\n    ceaseTop(level:number = 1) {\r\n        let p = this.stack.length - 1;\r\n        for (let i=0; i<level; i++, p--) {\r\n            if (p < 0) break;\r\n            let item = this.stack[p];\r\n            item.ceased = true;\r\n        }\r\n    }\r\n\r\n    pop(level:number = 1) {\r\n        let stack = this.stack;\r\n        let len = stack.length;\r\n        //console.log('pop start: %s pages level=%s', len, level);\r\n        if (level <= 0 || len <= 1) return;\r\n        if (len < level) level = len;\r\n        let backLevel = 0;\r\n        for (let i = 0; i < level; i++) {\r\n            if (stack.length === 0) break;\r\n            //stack.pop();\r\n            this.popAndDispose();\r\n            ++backLevel;\r\n        }\r\n        if (backLevel >= len) backLevel--;\r\n        this.refresh();\r\n        if (this.isHistoryBack !== true) {\r\n            //window.removeEventListener('popstate', this.navBack);\r\n            //window.history.back(backLevel);\r\n            //window.addEventListener('popstate', this.navBack);\r\n        }\r\n        //console.log('pop: %s pages', stack.length);\r\n    }\r\n\r\n    popTo(key: number) {\r\n        throw new Error('to be designed');\r\n    }\r\n\r\n    removeCeased() {\r\n        for (;;) {\r\n            let p=this.stack.length-1;\r\n            if (p < 0) break;\r\n            let top = this.stack[p];\r\n            if (top.ceased === false) break;\r\n            let item = this.stack.pop();\r\n            let {disposer} = item;\r\n            this.dispose(disposer);\r\n        }\r\n        this.refresh();\r\n    }\r\n\r\n    private popAndDispose() {\r\n        this.removeCeased();\r\n        let item = this.stack.pop();\r\n        if (item === undefined) return;\r\n        let {disposer} = item;\r\n        this.dispose(disposer);\r\n        this.removeCeased();\r\n        return item;\r\n    }\r\n\r\n    private dispose(disposer:()=>void) {\r\n        if (disposer === undefined) return;\r\n        let item = this.stack.find(v => v.disposer === disposer);\r\n        if (item === undefined) disposer();\r\n    }\r\n\r\n    clear() {\r\n        let len = this.stack.length;\r\n        while (this.stack.length > 0) this.popAndDispose();\r\n        this.refresh();\r\n        if (len > 1) {\r\n            //window.removeEventListener('popstate', this.navBack);\r\n            //window.history.back(len-1);\r\n            //window.addEventListener('popstate', this.navBack);\r\n        }\r\n    }\r\n\r\n    regConfirmClose(confirmClose:()=>Promise<boolean>) {\r\n        let stack = this.stack;\r\n        let len = stack.length;\r\n        if (len === 0) return;\r\n        let top = stack[len-1];\r\n        top.confirmClose = confirmClose;\r\n    }\r\n\r\n    private isHistoryBack:boolean = false;\r\n    navBack() {\r\n        nav.log('backbutton pressed - nav level: ' + this.stack.length);\r\n        this.isHistoryBack = true;\r\n        this.back(true);\r\n        this.isHistoryBack = false;\r\n    }\r\n\r\n    async back(confirm:boolean = true) {\r\n        let stack = this.stack;\r\n        let len = stack.length;\r\n        if (len === 0) return;\r\n        if (len === 1) {\r\n            if (self != window.top) {\r\n                window.top.postMessage({type:'pop-app'}, '*');\r\n            }\r\n            return;\r\n        }\r\n        let top = stack[len-1];\r\n        if (confirm===true && top.confirmClose) {\r\n            if (await top.confirmClose()===true) this.pop();\r\n        }\r\n        else {\r\n            this.pop();\r\n        }\r\n    }\r\n\r\n    confirmBox(message?:string): boolean {\r\n        return window.confirm(message);\r\n    }\r\n    clearError = () => {\r\n        this.setState({fetchError: undefined});\r\n    }\r\n    render() {\r\n        const {wait, fetchError} = this.state;\r\n        let stack = this.state.stack;\r\n        let top = stack.length - 1;\r\n        let elWait = null, elError = null;\r\n        switch (wait) {\r\n            case 1:\r\n                elWait = <li className=\"va-wait va-wait1\">\r\n                </li>;\r\n                break;\r\n            case 2:\r\n                elWait = <li className=\"va-wait va-wait2\">\r\n                    <i className=\"fa fa-spinner fa-spin fa-3x fa-fw\"></i>\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </li>;\r\n                break;\r\n        }\r\n        if (fetchError)\r\n            elError = <FetchErrorView clearError={this.clearError} {...fetchError} />\r\n        return (\r\n        <ul className='va'>\r\n            {\r\n                stack.map((item, index) => {\r\n                    let {key, view} = item;\r\n                    return <li key={key} style={index<top? {visibility: 'hidden'}:undefined}>\r\n                        {view}\r\n                    </li>\r\n                })\r\n            }\r\n            {elWait}\r\n            {elError}\r\n        </ul>\r\n        );\r\n    }\r\n\r\n    private refresh() {\r\n        // this.setState({flag: !this.state.flag});\r\n        this.setState({stack: this.stack });\r\n        // this.forceUpdate();\r\n    }\r\n}\r\n\r\nexport class Nav {\r\n    private nav:NavView;\r\n    private ws: WsBase;\r\n    private wsHost: string;\r\n    private local: LocalData = new LocalData();\r\n    @observable user: UserInNav = undefined;\r\n    language: string;\r\n    culture: string;\r\n\r\n    constructor() {\r\n        let {lang, district} = resOptions;\r\n        this.language = lang;\r\n        this.culture = district;\r\n    }\r\n\r\n    get guest(): number {\r\n        let guest = this.local.guest;\r\n        if (guest === undefined) return 0;\r\n        let g = guest.get();\r\n        if (g === undefined) return 0;\r\n        return g.guest;\r\n    }\r\n\r\n    set(nav:NavView) {\r\n        //this.logo = logo;\r\n        this.nav = nav;\r\n    }\r\n\r\n    registerReceiveHandler(handler: (message:any)=>Promise<void>):number {\r\n        if (this.ws === undefined) return;\r\n        return this.ws.onWsReceiveAny(handler);\r\n    }\r\n\r\n    unregisterReceiveHandler(handlerId:number) {\r\n        if (this.ws === undefined) return;\r\n        if (handlerId === undefined) return;\r\n        this.ws.endWsReceive(handlerId);\r\n    }\r\n\r\n    async onReceive(msg:any) {\r\n        if (this.ws === undefined) return;\r\n        await this.ws.receive(msg);\r\n    }\r\n\r\n    private async getUnitName() {\r\n        try {\r\n            let unitRes = await fetch('unit.json', {});\r\n            //if (unitRes)\r\n            let res = await unitRes.json();\r\n            return res.unit;\r\n        }\r\n        catch (err) {\r\n            this.local.unit.clear();\r\n            return;\r\n        }\r\n    }\r\n\r\n    private async loadUnit() {\r\n        let unitName:string;\r\n        let unit = this.local.unit.get();\r\n        if (unit !== undefined) {\r\n            if (isDevelopment !== true) return unit.id;\r\n            unitName = await this.getUnitName();\r\n            if (unitName === undefined) return;\r\n            if (unit.name === unitName) return unit.id;\r\n        }\r\n        else {\r\n            unitName = await this.getUnitName();\r\n            if (unitName === undefined) return;\r\n        }\r\n        let unitId = await guestApi.unitFromName(unitName);\r\n        if (unitId !== undefined) {\r\n            this.local.unit.set({id: unitId, name: unitName});\r\n        }\r\n        return unitId;\r\n    }\r\n\r\n    private isInFrame:boolean;\r\n    private centerHost: string;\r\n    async start() {\r\n        nav.clear();\r\n        nav.push(<Page header={false}><Loading /></Page>);\r\n        await host.start();\r\n        let {url, ws} = host;\r\n        this.centerHost = url;\r\n        this.wsHost = ws;\r\n        setCenterUrl(url);\r\n        \r\n        let unit = await this.loadUnit();\r\n        meInFrame.unit = unit;\r\n\r\n        let guest:Guest = this.local.guest.get();\r\n        if (guest === undefined) {\r\n            guest = await guestApi.guest();\r\n        }\r\n        nav.setGuest(guest);\r\n\r\n        let hash = document.location.hash;\r\n        // document.title = document.location.origin;\r\n        console.log(\"url=%s hash=%s\", document.location.origin, hash);\r\n        this.isInFrame = hash !== undefined && hash !== '' && hash.startsWith('#tv');\r\n        if (this.isInFrame === true) {\r\n            let mif = setMeInFrame(hash);\r\n            if (mif !== undefined) {\r\n                this.ws = wsBridge;\r\n                console.log('this.ws = wsBridge in sub frame');\r\n                //nav.user = {id:0} as User;\r\n                if (self !== window.parent) {\r\n                    window.parent.postMessage({type:'sub-frame-started', hash: mif.hash}, '*');\r\n                }\r\n                // 下面这一句，已经移到 appBridge.ts 里面的 initSubWin，也就是响应从main frame获得user之后开始。\r\n                //await this.showAppView();\r\n                return;\r\n            }\r\n        }\r\n\r\n        let user: User = this.local.user.get();\r\n        if (user === undefined) {\r\n            let {notLogined} = this.nav.props;\r\n            if (notLogined !== undefined) {\r\n                await notLogined();\r\n            }\r\n            else {\r\n                await nav.showLogin();\r\n            }\r\n            return;\r\n        }\r\n\r\n        await nav.logined(user);\r\n    }\r\n\r\n    async showAppView() {\r\n        let {onLogined} = this.nav.props;\r\n        if (onLogined === undefined) {\r\n            nav.push(<div>NavView has no prop onLogined</div>);\r\n            return;\r\n        }\r\n        nav.clear();\r\n        await onLogined();\r\n        console.log('logined: AppView shown');\r\n    }\r\n\r\n    setGuest(guest: Guest) {\r\n        this.local.guest.set(guest);\r\n        netToken.set(0, guest.token);\r\n    }\r\n\r\n    async logined(user: User) {\r\n        let ws:WSChannel = this.ws = new WSChannel(this.wsHost, user.token);\r\n        ws.connect();\r\n\r\n        console.log(\"logined: %s\", JSON.stringify(user));\r\n        this.local.user.set(user);\r\n        netToken.set(user.id, user.token);\r\n        this.user = new UserInNav(user);\r\n        await this.showAppView();\r\n    }\r\n\r\n    async showLogin(withBack?:boolean) {\r\n        //if (this.loginView === undefined) {\r\n        let lv = await import('../entry/login');\r\n        //this.loginView = <lv.default logo={logo} />;\r\n        let loginView = <lv.default withBack={withBack} />;\r\n        //}\r\n        if (withBack !== true) {\r\n            this.nav.clear();\r\n            this.pop();\r\n        }\r\n        //this.nav.show(loginView);\r\n        this.nav.push(loginView);\r\n    }\r\n\r\n    async logout(notShowLogin?:boolean) {\r\n        this.local.logoutClear();\r\n        this.user = undefined; //{} as User;\r\n        logoutApis();\r\n        logoutUqTokens();\r\n        let guest = this.local.guest.get();\r\n        setCenterToken(0, guest && guest.token);\r\n        this.ws = undefined;\r\n        if (notShowLogin === true) return;\r\n        //await this.showLogin();\r\n        await nav.start();\r\n    }\r\n\r\n    get level(): number {\r\n        return this.nav.level;\r\n    }\r\n    startWait() {\r\n        this.nav.startWait();\r\n    }\r\n    endWait() {\r\n        this.nav.endWait();\r\n    }\r\n    async onError(error: FetchError) {\r\n        await this.nav.onError(error);\r\n    }\r\n    show (view: JSX.Element, disposer?: ()=>void): void {\r\n        this.nav.show(view, disposer);\r\n    }\r\n    push(view: JSX.Element, disposer?: ()=>void): void {\r\n        this.nav.push(view, disposer);\r\n    }\r\n    replace(view: JSX.Element, disposer?: ()=>void): void {\r\n        this.nav.replace(view, disposer);\r\n    }\r\n    pop(level:number = 1) {\r\n        this.nav.pop(level);\r\n    }\r\n    clear() {\r\n        this.nav.clear();\r\n    }\r\n    navBack() {\r\n        this.nav.navBack();\r\n    }\r\n    ceaseTop(level?:number) {\r\n        this.nav.ceaseTop(level);\r\n    }\r\n    removeCeased() {\r\n        this.nav.removeCeased();\r\n    }\r\n    async back(confirm:boolean = true) {\r\n        await this.nav.back(confirm);\r\n    }\r\n    regConfirmClose(confirmClose: ()=>Promise<boolean>) {\r\n        this.nav.regConfirmClose(confirmClose);\r\n    }\r\n    confirmBox(message?:string): boolean {\r\n        return this.nav.confirmBox(message);\r\n    }\r\n    async navToApp(url: string, unitId: number, apiId?:number, sheetType?:number, sheetId?:number):Promise<void> {\r\n        return new Promise<void>((resolve, reject) => {\r\n            let sheet = this.centerHost.includes('http://localhost:') === true? 'sheet_debug':'sheet'\r\n            let uh = sheetId === undefined?\r\n                    appUrl(url, unitId) :\r\n                    appUrl(url, unitId, sheet, [apiId, sheetType, sheetId]);\r\n            console.log('navToApp: %s', JSON.stringify(uh));\r\n            nav.push(<article className='app-container'>\r\n                <span id={uh.hash} onClick={()=>this.back()} style={mobileHeaderStyle}>\r\n                    <i className=\"fa fa-arrow-left\" />\r\n                </span>\r\n                <iframe src={uh.url} />\r\n            </article>, \r\n            ()=> {\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n\r\n    navToSite(url: string) {\r\n        // show in new window\r\n        window.open(url);\r\n    }\r\n\r\n    get logs() {return logs};\r\n    log(msg:string) {\r\n        logs.push(msg);\r\n    }\r\n    logMark() {\r\n        let date = new Date();\r\n        logMark = date.getTime();\r\n        logs.push('log-mark: ' + date.toTimeString());\r\n    }\r\n    logStep(step:string) {\r\n        logs.push(step + ': ' + (new Date().getTime() - logMark));\r\n    }\r\n}\r\nexport const nav: Nav = new Nav();\r\n","import * as React from 'react';\r\nimport { Form } from './form';\r\nimport { UiSchema, UiArr, UiItem } from './uiSchema';\r\nimport { ArrSchema, ItemSchema } from './schema';\r\nimport { Widget as Widget } from './widgets/widget';\r\n//import { ArrRow } from './arrRow';\r\nimport { observable, computed } from 'mobx';\r\nimport { ContextRule } from './rules';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport abstract class Context {\r\n    private subContexts:{[name:string]:{[rowKey:string]:Context}};\r\n    readonly form: Form;\r\n    readonly uiSchema: UiSchema;\r\n    readonly initData: any;\r\n    readonly inNode: boolean;           // true: 在</> 流中定义Field\r\n    readonly widgets: {[name:string]: Widget} = {};\r\n    readonly rules: ContextRule[];\r\n    readonly isRow: boolean;\r\n    @observable errors: string[] = [];\r\n    @observable errorWidgets:Widget[] = [];\r\n\r\n    constructor(form: Form, uiSchema: UiSchema, data: any, inNode: boolean, isRow: boolean) {\r\n        this.form = form;\r\n        this.uiSchema = uiSchema;\r\n        this.initData = data;\r\n        this.inNode = inNode;\r\n        this.isRow = isRow;\r\n        if (uiSchema !== undefined) {\r\n            let {rules} = uiSchema;\r\n            if (rules !== undefined) {\r\n                this.rules = [];\r\n                if (Array.isArray(rules) === false)\r\n                    this.rules.push(rules as ContextRule);\r\n                else\r\n                    this.rules.push(...rules as ContextRule[]);\r\n            }\r\n        }\r\n    }\r\n\r\n    getArrRowContexts(arrName: string) {\r\n        if (this.subContexts === undefined) this.subContexts = {};\r\n        let arrRowContexts = this.subContexts[name];\r\n        if (arrRowContexts === undefined) this.subContexts[name] = arrRowContexts = {};\r\n        return arrRowContexts;\r\n    }\r\n\r\n    abstract get data():any;\r\n    abstract getItemSchema(itemName:string):ItemSchema;\r\n    abstract getUiItem(itemName:string):UiItem;\r\n    get arrName():string {return undefined}\r\n    getValue(itemName:string):any {return this.initData[itemName]}\r\n    setValue(itemName:string, value:any) {\r\n        this.initData[itemName] = value;\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setValue(value);\r\n    }\r\n    getDisabled(itemName:string):boolean {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) return widget.getDisabled();\r\n        return undefined;\r\n    }\r\n    setDisabled(itemName:string, value:boolean) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setDisabled(value);\r\n    }\r\n    getReadOnly(itemName:string):boolean {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.getReadOnly();\r\n        return undefined;\r\n    }\r\n    setReadOnly(itemName:string, value:boolean) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setReadOnly(value);\r\n    }\r\n    getVisible(itemName:string):boolean {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.getVisible();\r\n        return undefined;\r\n    }\r\n    setVisible(itemName:string, value:boolean) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setVisible(value);\r\n    }\r\n\r\n    checkFieldRules() {\r\n        for (let i in this.widgets) {\r\n            this.widgets[i].checkRules();\r\n        }\r\n        if (this.subContexts === undefined) return;\r\n        for (let i in this.subContexts) {\r\n            let arrRowContexts = this.subContexts[i];\r\n            for (let j in arrRowContexts) {\r\n                arrRowContexts[j].checkFieldRules();\r\n            }\r\n        }\r\n    }\r\n\r\n    checkContextRules() {\r\n        if (this.rules === undefined) return;\r\n        this.clearContextErrors();\r\n        for (let rule of this.rules) {\r\n            let ret = rule(this);\r\n            if (ret === undefined) continue;\r\n            if (Array.isArray(ret) === true) {\r\n                this.errors.push(...ret as string[]);\r\n            }\r\n            else if (typeof ret === 'string') {\r\n                this.errors.push(ret as string);\r\n            }\r\n            else {\r\n                for (let i in ret as object) this.setError(i, ret[i]);\r\n            }\r\n        }\r\n        if (this.subContexts === undefined) return;\r\n        for (let i in this.subContexts) {\r\n            let arrRowContexts = this.subContexts[i];\r\n            for (let j in arrRowContexts) {\r\n                let rowContext = arrRowContexts[j];\r\n                rowContext.removeErrors();\r\n                rowContext.checkContextRules();\r\n            }\r\n        }\r\n    }\r\n\r\n    setError(itemName:string, error:string) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget === undefined) return;\r\n        widget.setContextError(error);\r\n        this.addErrorWidget(widget);\r\n    }\r\n\r\n    clearContextErrors() {\r\n        for (let i in this.widgets) this.widgets[i].clearContextError();\r\n    }\r\n\r\n    checkRules() {\r\n        this.checkFieldRules();\r\n        this.checkContextRules();\r\n    }\r\n\r\n    addErrorWidget(widget:Widget) {\r\n        let pos = this.errorWidgets.findIndex(v => v === widget);\r\n        if (pos < 0) this.errorWidgets.push(widget);\r\n    }\r\n    removeErrorWidget(widget:Widget) {\r\n        let pos = this.errorWidgets.findIndex(v => v === widget);\r\n        if (pos >= 0) this.errorWidgets.splice(pos, 1);\r\n    }\r\n\r\n    protected checkHasError():boolean {\r\n        let ret = (this.errorWidgets.length + this.errors.length) > 0;\r\n        if (ret === true) return true;\r\n        if (this.subContexts === undefined) return false;\r\n        for (let i in this.subContexts) {\r\n            let arrRowContexts = this.subContexts[i];\r\n            for (let j in arrRowContexts) {\r\n                if (arrRowContexts[j].hasError === true) return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    @computed get hasError():boolean {\r\n        return this.checkHasError();\r\n    };\r\n\r\n    removeErrors() {\r\n        this.errors.splice(0);\r\n        this.errorWidgets.splice(0);\r\n        for (let i in this.widgets) {\r\n            let widget = this.widgets[i];\r\n            if (widget === undefined) continue;\r\n            widget.clearContextError();\r\n        }\r\n    }\r\n\r\n    renderErrors = observer((): JSX.Element => {\r\n        let {errors} = this;\r\n        if (errors.length === 0) return null;\r\n        return <>\r\n            {errors.map(err => <span key={err} className=\"text-danger inline-block my-1 ml-3\">\r\n                <i className=\"fa fa-exclamation-circle\" /> &nbsp;{err}\r\n            </span>)}\r\n        </>\r\n    });\r\n}\r\n\r\nlet rowKeySeed:number = 1;\r\nexport class RowContext extends Context {\r\n    readonly parentContext: Context;\r\n    readonly arrSchema: ArrSchema;\r\n    readonly uiSchema: UiArr;\r\n    //readonly row: ArrRow;\r\n    readonly rowKey: number;\r\n    readonly data: any;\r\n    constructor(parentContext:Context, arrSchema: ArrSchema, data: any, inNode: boolean) {\r\n        let uiArr:UiArr;\r\n        let {uiSchema} = parentContext;\r\n        if (uiSchema !== undefined) {\r\n            let {items} = uiSchema;\r\n            if (items !== undefined) uiArr = items[arrSchema.name] as UiArr;\r\n        }\r\n        super(parentContext.form, uiArr, data, inNode, true);\r\n        this.parentContext = parentContext;\r\n        this.arrSchema = arrSchema;\r\n        this.rowKey = rowKeySeed++;\r\n        this.data = data;\r\n    }\r\n    getItemSchema(itemName:string):ItemSchema {return this.arrSchema.itemSchemas[itemName]}\r\n    getUiItem(itemName:string):UiItem {\r\n        if (this.uiSchema === undefined) return undefined;\r\n        let {items} = this.uiSchema;\r\n        if (items === undefined) return undefined;\r\n        return items[itemName]\r\n    }\r\n    get arrName():string {return this.arrSchema.name}\r\n    //get data() {return this.row.data;}\r\n    removeErrors() {\r\n        super.removeErrors();\r\n        this.parentContext.removeErrors();\r\n    }\r\n\r\n    get parentData():any {return this.parentContext.data;}\r\n}\r\n\r\nexport class FormContext extends Context {\r\n    constructor(form:Form, inNode:boolean) {\r\n        super(form, form.uiSchema, form.data, inNode, false);\r\n    }\r\n    get data():any {return this.form.data}\r\n    getItemSchema(itemName:string):ItemSchema {return this.form.itemSchemas[itemName]}\r\n    getUiItem(itemName:string):UiItem {\r\n        let {uiSchema} = this.form;\r\n        if (uiSchema === undefined) return undefined;\r\n        let {items} = uiSchema;\r\n        if (items === undefined) return undefined;\r\n        return items[itemName]\r\n    }\r\n}\r\n\r\nexport const ContextContainer = React.createContext<Context>({} as any);\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { jsonStringify } from '../../tools';\r\n\r\nexport type TypeViewModel = typeof ViewModel;\r\nexport type TypeView = React.StatelessComponent<{vm: ViewModel, className?:string|string[]}>;\r\nexport type TypeContent = React.StatelessComponent<any>;\r\n\r\nexport abstract class ViewModel {\r\n    protected abstract get view(): TypeView;\r\n    render(className?:string|string[]):JSX.Element {\r\n        if (this.view === undefined) return <div>??? viewModel 必须定义 view ???</div>\r\n        return React.createElement(this.view, {vm: this, className:className});\r\n    }\r\n}\r\n\r\nexport const PureJSONContent = (values, x?:any) => <>content: {jsonStringify(values)}</>;\r\nexport const JSONContent = observer(PureJSONContent);\r\nexport const RowContent = \r\n    (values) => <div className=\"px-3 py-2\">{jsonStringify(values)}</div>\r\n;\r\n","function replacer(key:string, value:any) {\r\n    let first = key.substr(0, 1);\r\n    switch (first) {\r\n        default: return value;\r\n        case '$':\r\n        case '_': return;\r\n    }\r\n}\r\n\r\nexport function jsonStringify(value:any) {\r\n    return JSON.stringify(value, replacer, ' ');\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { BoxId, Tuid } from \"../entities\";\r\nimport { PureJSONContent } from '../controllers';\r\n\r\ntype TvTemplet = (values?:any, x?:any) => JSX.Element;\r\n\r\ninterface Props {\r\n    tuidValue: number|BoxId, \r\n    ui?: TvTemplet,\r\n    x?: any,\r\n    nullUI?: ()=>JSX.Element\r\n}\r\n\r\nfunction boxIdContent(bi: number|BoxId, ui:TvTemplet, x:any) {\r\n    if (typeof bi === 'number') return <>{bi}</>;\r\n    let {id, _$tuid, _$com} = bi as BoxId;\r\n    let t:Tuid = _$tuid;\r\n    if (t === undefined) {\r\n        if (ui !== undefined) return ui(bi, x);\r\n        return PureJSONContent(bi, x);\r\n    }\r\n    let com = ui || _$com;\r\n    if (com === undefined) {\r\n        com = bi._$com = t.getTuidContent();\r\n    }\r\n    let val = t.valueFromId(id);\r\n    if (typeof val === 'number') val = {id: val};\r\n    if (ui !== undefined) {\r\n        let ret = ui(val, x);\r\n        if (ret !== undefined) return ret;\r\n        return <>{id}</>;\r\n    }\r\n    return React.createElement(com, val);\r\n}\r\n\r\nconst Tv = observer(({tuidValue, ui, x, nullUI}:Props) => {\r\n    let ttv = typeof tuidValue;\r\n    switch (ttv) {\r\n        default:\r\n            if (ui === undefined)\r\n                return <>{ttv}-{tuidValue}</>;\r\n            else {\r\n                let ret = ui(tuidValue, x);\r\n                if (ret !== undefined) return ret;\r\n                return <>{tuidValue}</>;\r\n            }\r\n        case 'undefined':\r\n            break;\r\n        case 'object':\r\n            if (tuidValue !== null) return boxIdContent(tuidValue, ui, x);\r\n            break;\r\n        case 'number':\r\n            return <>id...{tuidValue}</>;\r\n    }       \r\n    if (nullUI === undefined) return <>null</>;\r\n    return nullUI();\r\n});\r\n\r\nexport const tv = (tuidValue:number|BoxId, ui?:TvTemplet, x?:any, nullUI?:()=>JSX.Element):JSX.Element => {\r\n    return <Tv tuidValue={tuidValue} ui={ui} x={x} nullUI={nullUI} />;\r\n};\r\n","export * from './jsonStringify';\r\nexport * from './tv';\r\n","import { decodeGuestToken } from '../user';\r\nimport { CenterApi } from './uqApi';\r\n\r\nexport class GuestApi extends CenterApi {\r\n    async guest(): Promise<any> {\r\n        //let guest = nav.local.guest.get();\r\n        let ret = await this.get('', {});\r\n        switch (typeof ret) {\r\n            default: return;\r\n            case 'string': return decodeGuestToken(ret);\r\n            case 'object':\r\n                let guest = decodeGuestToken(ret.token);\r\n                return guest;\r\n        }\r\n    }\r\n\r\n    async unitFromName(unitName:string): Promise<number> {\r\n        let ret = await this.get(unitName);\r\n        return ret && ret.unit;\r\n    }\r\n}\r\n\r\nexport const guestApi = new GuestApi('tv/guest/', undefined);\r\n","export {WSChannel, wsBridge, postWsToTop} from './wsChannel';\r\nexport * from './apiBase';\r\nexport * from './guestApi';\r\nexport * from './uqApi';\r\nexport {meInFrame, loadAppUqs, isBridged} from './appBridge';\r\nexport * from './host';\r\nexport {httpGet} from './httpChannel';\r\n","import _ from 'lodash';\r\nimport {nav} from '../ui';\r\nimport {uid} from '../uid';\r\nimport {uqTokenApi as uqTokenApi, callCenterapi, CenterAppApi, AppUq, centerToken, App} from './uqApi';\r\nimport {setSubAppWindow} from './wsChannel';\r\nimport { host } from './host';\r\n\r\nexport interface UqToken {\r\n    name: string;\r\n    url: string;\r\n    urlDebug: string;\r\n    token: string;\r\n}\r\ninterface UqTokenAction extends UqToken {\r\n    resolve: (value?: UqToken | PromiseLike<UqToken>) => void;\r\n    reject: (reason?: any) => void;\r\n}\r\nconst uqTokens:{[uqName:string]: UqTokenAction}  = {};\r\nexport function logoutUqTokens() {\r\n    for (let i in uqTokens) uqTokens[i] = undefined;\r\n}\r\n\r\nexport interface AppInFrame {\r\n    hash: string;\r\n    unit: number;       // unit id\r\n    page?: string;\r\n    param?: string[];\r\n}\r\nconst appsInFrame:{[key:string]:AppInFrame} = {};\r\n\r\nclass AppInFrameClass implements AppInFrame {\r\n    hash: string;\r\n    private _unit: number;\r\n    get unit(): number {return this._unit;}       // unit id\r\n    set unit(val:number) { this._unit=val;}\r\n    page?: string;\r\n    param?: string[];\r\n}\r\n\r\nexport let meInFrame:AppInFrame = new AppInFrameClass();\r\n/* {\r\n    hash: undefined,\r\n    get unit():number {return } undefined, //debugUnitId,\r\n    page: undefined;\r\n    param: undefined,\r\n}*/\r\n\r\nexport function isBridged():boolean {\r\n    return self !== window.parent;\r\n}\r\n\r\nwindow.addEventListener('message', async function(evt) {\r\n    var message = evt.data;\r\n    switch (message.type) {\r\n        case 'sub-frame-started':\r\n            subFrameStarted(evt);\r\n            break;\r\n        case 'ws':\r\n            //wsBridge.receive(message.msg);\r\n            await nav.onReceive(message.msg);\r\n            break;\r\n        case 'init-sub-win':\r\n            await initSubWin(message);\r\n            break;\r\n        case 'pop-app':\r\n            nav.navBack();\r\n            break;\r\n        case 'center-api':\r\n            await callCenterApiFromMessage(evt.source as Window, message);\r\n            break;\r\n        case 'center-api-return':\r\n            bridgeCenterApiReturn(message);\r\n            break;\r\n        case 'app-api':\r\n            console.log(\"receive PostMessage: %s\", JSON.stringify(message));\r\n            let ret = await onReceiveAppApiMessage(message.hash, message.apiName);\r\n            console.log(\"onReceiveAppApiMessage: %s\", JSON.stringify(ret));\r\n            (evt.source as Window).postMessage({\r\n                type: 'app-api-return', \r\n                apiName: message.apiName,\r\n                url: ret.url,\r\n                urlDebug: ret.urlDebug,\r\n                token: ret.token} as any, \"*\");\r\n            break;\r\n        case 'app-api-return':\r\n            console.log(\"app-api-return: %s\", JSON.stringify(message));\r\n            console.log('await onAppApiReturn(message);');\r\n            await onAppApiReturn(message);\r\n            break;\r\n        default:\r\n            this.console.log('message: %s', JSON.stringify(message));\r\n            break;\r\n    }\r\n});\r\n\r\nfunction subFrameStarted(evt:any) {\r\n    var message = evt.data;\r\n    let subWin = evt.source as Window;\r\n    setSubAppWindow(subWin);\r\n    hideFrameBack(message.hash);\r\n    let msg:any = _.clone(nav.user);\r\n    msg.type = 'init-sub-win';\r\n    subWin.postMessage(msg, '*');\r\n}\r\nfunction hideFrameBack(hash:string) {\r\n    let el = document.getElementById(hash);\r\n    if (el !== undefined) el.hidden = true;\r\n}\r\nasync function initSubWin(message:any) {\r\n    console.log('initSubWin: set nav.user', message);\r\n    nav.user = message; // message.user;\r\n    await nav.showAppView();\r\n}\r\nasync function onReceiveAppApiMessage(hash: string, apiName: string): Promise<UqToken> {\r\n    let appInFrame = appsInFrame[hash];\r\n    if (appInFrame === undefined) return {name:apiName, url:undefined, urlDebug:undefined, token:undefined};\r\n    let {unit} = appInFrame;\r\n    let parts = apiName.split('/');\r\n    let ret = await uqTokenApi.uq({unit: unit, uqOwner: parts[0], uqName: parts[1]});\r\n    if (ret === undefined) {\r\n        console.log('apiTokenApi.api return undefined. api=%s, unit=%s', apiName, unit);\r\n        throw 'api not found';\r\n    }\r\n    return {name: apiName, url: ret.url, urlDebug:ret.urlDebug, token: ret.token};\r\n}\r\n\r\nasync function onAppApiReturn(message:any) {\r\n    let {apiName, url, urlDebug, token} = message;\r\n    let action = uqTokens[apiName];\r\n    if (action === undefined) {\r\n        throw 'error app api return';\r\n        //return;\r\n    }\r\n    let realUrl = host.getUrlOrDebug(url, urlDebug);\r\n    console.log('onAppApiReturn(message:any): url=' + url + ', debug=' + urlDebug + ', real=' + realUrl);\r\n    action.url = realUrl;\r\n    action.token = token;\r\n    action.resolve(action);\r\n}\r\n\r\nexport function setMeInFrame(appHash: string):AppInFrame {\r\n    let parts = appHash.split('-');\r\n    let len = parts.length;\r\n    meInFrame.hash = parts[0].substr(3);\r\n    if (len>0) meInFrame.unit = Number(parts[1]);\r\n    if (len>1) meInFrame.page = parts[2];\r\n    if (len>2) meInFrame.param = parts.slice(3);\r\n    return meInFrame;\r\n}\r\n\r\nexport function appUrl(url: string, unitId: number, page?:string, param?:any[]):{url:string; hash:string} {\r\n    let u:string;\r\n    for (;;) {\r\n        u = uid();\r\n        let a = appsInFrame[u];\r\n        if (a === undefined) {\r\n            appsInFrame[u] = {hash:u, unit:unitId};\r\n            break;\r\n        }\r\n    }\r\n    url += '#tv' + u + '-' + unitId;\r\n    if (page !== undefined) {\r\n        url += '-' + page;\r\n        if (param !== undefined) {\r\n            for (let i=0; i<param.length; i++) {\r\n                url += '-' + param[i];\r\n            }\r\n        }\r\n    }\r\n    return {url: url, hash: u};\r\n}\r\n\r\nexport async function loadAppUqs(appOwner:string, appName): Promise<App> {\r\n    let centerAppApi = new CenterAppApi('tv/', undefined);\r\n    let unit = meInFrame.unit;\r\n    let ret = await centerAppApi.uqs(unit, appOwner, appName);\r\n    centerAppApi.checkUqs(unit, appOwner, appName).then(v => {\r\n        if (v === false) nav.start();\r\n    });\r\n    return ret;\r\n}\r\n\r\nexport async function appUq(uq:string, uqOwner:string, uqName:string): Promise<UqToken> {\r\n    let uqToken = uqTokens[uq];\r\n    if (uqToken !== undefined) return uqToken;\r\n    if (!isBridged()) {\r\n        uqToken = await uqTokenApi.uq({unit: meInFrame.unit, uqOwner:uqOwner, uqName:uqName});\r\n        if (uqToken === undefined) {\r\n            let err = 'unauthorized call: uqTokenApi center return undefined!';\r\n            throw err;\r\n        }\r\n        if (uqToken.token === undefined) uqToken.token = centerToken;\r\n        let {url, urlDebug} = uqToken;\r\n        let realUrl = host.getUrlOrDebug(url, urlDebug);\r\n        console.log('realUrl: %s', realUrl);\r\n        uqToken.url = realUrl;\r\n        uqTokens[uq] = uqToken;\r\n        return uqToken;\r\n    }\r\n    console.log(\"appApi parent send: %s\", meInFrame.hash);\r\n    uqToken = {\r\n        name: uq,\r\n        url: undefined,\r\n        urlDebug: undefined,\r\n        token: undefined,\r\n        resolve: undefined,\r\n        reject: undefined,\r\n    };\r\n    uqTokens[uq] = uqToken;\r\n    return new Promise<UqToken>((resolve, reject) => {\r\n        uqToken.resolve = async (at) => {\r\n            let a = await at;\r\n            console.log('return from parent window: %s', JSON.stringify(a));\r\n            uqToken.url = a.url;\r\n            uqToken.urlDebug = a.urlDebug;\r\n            uqToken.token = a.token;\r\n            resolve(uqToken);\r\n        }\r\n        uqToken.reject = reject;\r\n        (window.opener || window.parent).postMessage({\r\n            type: 'app-api',\r\n            apiName: uq,\r\n            hash: meInFrame.hash,\r\n        }, \"*\");\r\n    });\r\n}\r\n\r\ninterface BridgeCenterApi {\r\n    id: string;\r\n    resolve: (value?:any)=>any;\r\n    reject: (reason?:any)=>void;\r\n}\r\nconst brideCenterApis:{[id:string]: BridgeCenterApi} = {};\r\nexport async function bridgeCenterApi(url:string, method:string, body:any):Promise<any> {\r\n    console.log('bridgeCenterApi: url=%s, method=%s', url, method);\r\n    return await new Promise<any>(async (resolve, reject) => {\r\n        let callId:string;\r\n        for (;;) {\r\n            callId = uid();\r\n            let bca = brideCenterApis[callId];\r\n            if (bca === undefined) {\r\n                brideCenterApis[callId] = {\r\n                    id: callId,\r\n                    resolve: resolve,\r\n                    reject: reject,\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        (window.opener || window.parent).postMessage({\r\n            type: 'center-api',\r\n            callId: callId,\r\n            url: url,\r\n            method: method,\r\n            body: body\r\n        }, '*');\r\n    });\r\n}\r\n\r\nasync function callCenterApiFromMessage(from:Window, message):Promise<void> {\r\n    let {callId, url, method, body} = message;\r\n    let result = await callCenterapi.directCall(url, method, body);\r\n    from.postMessage({\r\n        type: 'center-api-return',\r\n        callId: callId,\r\n        result: result,\r\n    }, '*');\r\n}\r\n\r\nfunction bridgeCenterApiReturn(message:any) {\r\n    let {callId, result} = message;\r\n    let bca = brideCenterApis[callId];\r\n    if (bca === undefined) return;\r\n    brideCenterApis[callId] = undefined;\r\n    bca.resolve(result);\r\n}\r\n","import {nav} from '../ui/nav';\r\nimport {FetchError} from '../fetchError';\r\n\r\nexport interface HttpChannelUI {\r\n    startWait():void;\r\n    endWait():void;\r\n    showError(error:FetchError):Promise<void>;\r\n}\r\n\r\nexport class HttpChannelNavUI implements HttpChannelUI {\r\n    startWait() {\r\n        nav.startWait();\r\n    }\r\n    endWait() {\r\n        nav.endWait();\r\n    }\r\n    async showError(error:FetchError):Promise<void> {\r\n        nav.endWait();\r\n        /*\r\n        if (error.name === 'SyntaxError') {\r\n            error = {\r\n                name: error.name,\r\n                message: error.message,\r\n            }\r\n        }*/\r\n        await nav.onError(error);\r\n    }\r\n}\r\n\r\n","import _ from 'lodash';\r\nimport {HttpChannel} from './httpChannel';\r\nimport {HttpChannelUI, HttpChannelNavUI} from './httpChannelUI';\r\nimport {appUq} from './appBridge';\r\nimport {ApiBase} from './apiBase';\r\nimport { host } from './host';\r\n\r\nlet channelUIs:{[name:string]: HttpChannel} = {};\r\nlet channelNoUIs:{[name:string]: HttpChannel} = {};\r\n\r\nexport function logoutApis() {\r\n    channelUIs = {};\r\n    channelNoUIs = {};\r\n    logoutUnitxApis();\r\n}\r\n\r\ninterface UqLocal {\r\n    value: any;\r\n    tick?: number;\r\n    isNet?: boolean;\r\n}\r\ninterface UqLocals {\r\n    user: number;\r\n    unit: number;\r\n    uqs: {[uq:string]: UqLocal};\r\n}\r\n\r\nconst uqLocalEntities = 'uqLocalEntities';\r\nclass CacheUqLocals {\r\n    private local:UqLocals;\r\n\r\n    async loadAccess(uqApi: UqApi):Promise<any> {\r\n        try {\r\n            let {uqOwner, uqName} = uqApi;\r\n            if (this.local === undefined) {\r\n                let ls = localStorage.getItem(uqLocalEntities);\r\n                if (ls !== null) {\r\n                    this.local = JSON.parse(ls);\r\n                }\r\n            }\r\n            if (this.local !== undefined) {\r\n                let {user, uqs} = this.local;\r\n                if (user !== loginedUserId || uqs === undefined) {\r\n                    this.local = undefined;\r\n                }\r\n                else {\r\n                    for (let i in uqs) {\r\n                        let ul = uqs[i];\r\n                        ul.isNet = undefined;\r\n                    }\r\n                }\r\n            }\r\n            if (this.local === undefined) {\r\n                this.local = {\r\n                    user: loginedUserId,\r\n                    unit: undefined,\r\n                    uqs: {}\r\n                };\r\n            }\r\n\r\n            let ret: any;\r\n            let un = uqOwner+'/'+uqName;\r\n            let uq = this.local.uqs[un];\r\n            if (uq !== undefined) {\r\n                let {value} = uq;\r\n                ret = value;\r\n            }\r\n            if (ret === undefined) {\r\n                ret = await uqApi.__loadAccess();\r\n                this.saveLocal(un, ret);\r\n            }\r\n            return _.cloneDeep(ret);\r\n        }\r\n        catch (err) {\r\n            this.local = undefined;\r\n            localStorage.removeItem(uqLocalEntities);\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    private saveLocal(uqName:string, accessValue: any) {\r\n        this.local.uqs[uqName] = {\r\n            value: accessValue,\r\n            isNet: true,\r\n        }\r\n        let str = JSON.stringify(this.local);\r\n        localStorage.setItem(uqLocalEntities, str);\r\n    }\r\n\r\n    async checkAccess(uqApi: UqApi):Promise<boolean> {\r\n        let {uqOwner, uqName} = uqApi;\r\n        let un = uqOwner+'/'+uqName;\r\n        let uq = this.local.uqs[un];\r\n        if (uq === undefined) return false;\r\n        let {isNet, value} = uq;\r\n        if (isNet === true) return true;\r\n        let ret = await uqApi.__loadAccess();\r\n        let isMatch = _.isMatch(value, ret);\r\n        if (isMatch === false) {\r\n            this.saveLocal(un, ret);\r\n        }\r\n        return isMatch;\r\n\r\n    }\r\n}\r\n\r\nconst localUqs = new CacheUqLocals;\r\nexport class UqApi extends ApiBase {\r\n    private access:string[];\r\n    uqOwner: string;\r\n    uqName: string;\r\n    uq: string;\r\n\r\n    constructor(basePath: string, uqOwner: string, uqName: string, access:string[], showWaiting?: boolean) {\r\n        super(basePath, showWaiting);\r\n        if (uqName) {\r\n            this.uqOwner = uqOwner;\r\n            this.uqName = uqName;\r\n            this.uq = uqOwner + '/' + uqName;\r\n        }\r\n        this.access = access;\r\n        this.showWaiting = showWaiting;\r\n    }\r\n\r\n    protected async getHttpChannel(): Promise<HttpChannel> {\r\n        let channels: {[name:string]: HttpChannel};\r\n        let channelUI: HttpChannelNavUI;\r\n        if (this.showWaiting === true || this.showWaiting === undefined) {\r\n            channels = channelUIs;\r\n            channelUI = new HttpChannelNavUI();\r\n        }\r\n        else {\r\n            channels = channelNoUIs;\r\n        }\r\n        let channel = channels[this.uq];\r\n        if (channel !== undefined) return channel;\r\n        let uqToken = await appUq(this.uq, this.uqOwner, this.uqName);\r\n        this.token = uqToken.token;\r\n        channel = new HttpChannel(false, uqToken.url, uqToken.token, channelUI);\r\n        return channels[this.uq] = channel;\r\n    }\r\n\r\n\r\n    async update():Promise<string> {\r\n        return await this.get('update');\r\n    }\r\n\r\n    async __loadAccess():Promise<any> {\r\n        let acc = this.access === undefined?\r\n            '' :\r\n            this.access.join('|');\r\n        let ret = await this.get('access', {acc:acc});\r\n        return ret;\r\n    }\r\n\r\n    async loadAccess():Promise<any> {\r\n        return await localUqs.loadAccess(this);\r\n    }\r\n\r\n    async loadEntities():Promise<any> {\r\n        return await this.get('entities');\r\n    }\r\n\r\n    async checkAccess():Promise<boolean> {\r\n        return await localUqs.checkAccess(this);\r\n    }\r\n\r\n    async schema(name:string):Promise<any> {\r\n        return await this.get('schema/' + name);\r\n    }\r\n\r\n    async schemas(names:string[]):Promise<any[]> {\r\n        return await this.post('schema', names);\r\n    }\r\n\r\n    async tuidGet(name:string, id:number):Promise<any> {\r\n        return await this.get('tuid/' + name + '/' + id);\r\n    }\r\n\r\n    async tuidGetAll(name:string):Promise<any[]> {\r\n        return await this.get('tuid-all/' + name + '/');\r\n    }\r\n\r\n    async tuidSave(name:string, params):Promise<any> {\r\n        return await this.post('tuid/' + name, params);\r\n    }\r\n\r\n    async tuidSearch(name:string, arr:string, owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        let ret = await this.post('tuids/' + name, {\r\n            arr: arr,\r\n            owner: owner,\r\n            key: key,\r\n            pageStart: pageStart,\r\n            pageSize: pageSize\r\n        });\r\n        return ret;\r\n    }\r\n    async tuidArrGet(name:string, arr:string, owner:number, id:number):Promise<any> {\r\n        return await this.get('tuid-arr/' + name + '/' + owner + '/' + arr + '/' + id);\r\n    }\r\n    async tuidArrGetAll(name:string, arr:string, owner:number):Promise<any[]> {\r\n        return await this.get('tuid-arr-all/' + name + '/' + owner + '/' + arr + '/');\r\n    }\r\n    async tuidArrSave(name:string, arr:string, owner:number, params):Promise<any> {\r\n        return await this.post('tuid-arr/' + name + '/' + owner + '/' + arr + '/', params);\r\n    }\r\n    async tuidArrPos(name:string, arr:string, owner:number, id:number, order:number):Promise<any> {\r\n        return await this.post('tuid-arr-pos/' + name + '/' + owner + '/' + arr + '/', {\r\n            id: id,\r\n            $order: order\r\n        });\r\n    }\r\n\r\n    async tuidIds(name:string, arr:string, ids:number[]):Promise<any[]> {\r\n        try {\r\n            let url = 'tuidids/' + name + '/';\r\n            if (arr !== undefined) url += arr;\r\n            else url += '$';\r\n            let ret = await this.post(url, ids);\r\n            return ret;\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    async proxied(name:string, proxy:string, id:number):Promise<any> {\r\n        try {\r\n            let url = 'tuid-proxy/' + name + '/' + proxy + '/' + id;\r\n            let ret = await this.get(url);\r\n            return ret;\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    async sheetSave(name:string, data:object):Promise<any> {\r\n        return await this.post('sheet/' + name, data);\r\n    }\r\n\r\n    async sheetAction(name:string, data:object) {\r\n        return await this.put('sheet/' + name, data);\r\n    }\r\n\r\n    async stateSheets(name:string, data:object) {\r\n        return await this.post('sheet/' + name + '/states', data);\r\n    }\r\n\r\n    async stateSheetCount(name:string):Promise<any> {\r\n        return await this.get('sheet/' + name + '/statecount');\r\n    }\r\n\r\n    async getSheet(name:string, id:number):Promise<any> {\r\n        return await this.get('sheet/' + name + '/get/' + id);\r\n    }\r\n\r\n    async sheetArchives(name:string, data:object):Promise<any> {\r\n        return await this.post('sheet/' + name + '/archives', data);\r\n    }\r\n\r\n    async sheetArchive(name:string, id:number):Promise<any> {\r\n        return await this.get('sheet/' + name + '/archive/' + id);\r\n    }\r\n\r\n    async action(name:string, data:object):Promise<any> {\r\n        return await this.post('action/' + name, data);\r\n    }\r\n\r\n    async page(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\r\n        let p:any;\r\n        switch (typeof params) {\r\n            case 'undefined': p = {key: ''}; break;\r\n            default: p = _.clone(params); break;\r\n        }\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        return await this.post('query-page/' + name, p);\r\n    }\r\n\r\n    async query(name:string, params:any):Promise<any> {\r\n        let ret = await this.post('query/' + name, params);\r\n        return ret;\r\n    }\r\n/*\r\n    async history(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\r\n        let p = _.clone(params);\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        let ret = await this.post('history/' + name, p);\r\n        return ret;\r\n    }\r\n\r\n    async book(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\r\n        let p = _.clone(params);\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        let ret = await this.post('history/' + name, p);\r\n        return ret;\r\n    }\r\n*/\r\n    async user():Promise<any> {\r\n        return await this.get('user');\r\n    }\r\n}\r\n\r\nlet channels:{[unitId:number]: HttpChannel} = {};\r\n\r\nexport function logoutUnitxApis() {\r\n    channels = {};\r\n}\r\n\r\nexport class UnitxApi extends UqApi {\r\n    private unitId:number;\r\n    constructor(unitId:number) {\r\n        super('tv/', undefined, undefined, undefined, true);\r\n        this.unitId = unitId;\r\n    }\r\n\r\n    protected async getHttpChannel(): Promise<HttpChannel> {\r\n        let channel = channels[this.unitId];\r\n        if (channel !== undefined) return channel;\r\n        return channels[this.unitId] = await this.buildChannel();\r\n    }\r\n\r\n    private async buildChannel():Promise<HttpChannel> {\r\n        let channelUI = new HttpChannelNavUI();\r\n        let centerAppApi = new CenterAppApi('tv/', undefined);\r\n        let ret = await centerAppApi.unitxUq(this.unitId);\r\n        let {token, url, urlDebug} = ret;\r\n        let realUrl = host.getUrlOrDebug(url, urlDebug);\r\n        this.token = token;\r\n        return new HttpChannel(false, realUrl, token, channelUI);\r\n    }\r\n}\r\n\r\nlet centerHost:string;\r\n\r\nexport function setCenterUrl(url:string) {\r\n    console.log('setCenterUrl %s', url);\r\n    centerHost = url;\r\n    centerToken = undefined;\r\n    centerChannel = undefined;\r\n    centerChannelUI = undefined;\r\n}\r\n\r\nexport let centerToken:string|undefined = undefined;\r\n\r\nlet loginedUserId:number = 0;\r\nexport function setCenterToken(userId:number, t?:string) {\r\n    centerToken = t;\r\n    console.log('setCenterToken %s', t);\r\n    centerChannel = undefined;\r\n    centerChannelUI = undefined;\r\n}\r\n\r\nlet centerChannelUI:HttpChannel;\r\nlet centerChannel:HttpChannel;\r\nfunction getCenterChannelUI():HttpChannel {\r\n    if (centerChannelUI !== undefined) return centerChannelUI;\r\n    return centerChannelUI = new HttpChannel(true, centerHost, centerToken, new HttpChannelNavUI());\r\n}\r\nfunction getCenterChannel():HttpChannel {\r\n    if (centerChannel !== undefined) return centerChannel;\r\n    return centerChannel = new HttpChannel(true, centerHost, centerToken);\r\n}\r\n\r\nexport abstract class CenterApi extends ApiBase {\r\n    constructor(path: string, showWaiting?: boolean) {\r\n        super(path, showWaiting);\r\n    }\r\n\r\n    protected async getHttpChannel(): Promise<HttpChannel> {\r\n        return (this.showWaiting === true || this.showWaiting === undefined)?\r\n            getCenterChannelUI():\r\n            getCenterChannel();\r\n    }\r\n}\r\n\r\nconst uqTokens = 'uqTokens';\r\nexport class UqTokenApi extends CenterApi {\r\n    private local: UqLocals;\r\n    async uq(params: {unit:number, uqOwner:string, uqName:string}):Promise<any> {\r\n        try {\r\n            let {unit:unitParam, uqOwner, uqName} = params;\r\n            if (this.local === undefined) {\r\n                let ls = localStorage.getItem(uqTokens);\r\n                if (ls !== null) {\r\n                    this.local = JSON.parse(ls);\r\n                }\r\n            }\r\n            if (this.local !== undefined) {\r\n                let {unit, user} = this.local;\r\n                if (unit !== unitParam || user !== loginedUserId) this.local = undefined;\r\n            }\r\n            if (this.local === undefined) {\r\n                this.local = {\r\n                    user: loginedUserId,\r\n                    unit: params.unit,\r\n                    uqs: {}\r\n                };\r\n            }\r\n\r\n            let un = uqOwner+'/'+uqName;\r\n            let nowTick = new Date().getTime();\r\n            let uq = this.local.uqs[un];\r\n            if (uq !== undefined) {\r\n                let {tick, value} = uq;\r\n                if ((nowTick - tick) < 24*3600*1000) {\r\n                    return value;\r\n                }\r\n            }\r\n            let ret = await this.get('app-uq', params);\r\n            this.local.uqs[un] = {\r\n                tick: nowTick,\r\n                value: ret,\r\n            }\r\n            localStorage.setItem(uqTokens, JSON.stringify(this.local));\r\n            return ret;\r\n        }\r\n        catch (err) {\r\n            this.local = undefined;\r\n            localStorage.removeItem(uqTokens);\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport const uqTokenApi = new UqTokenApi('tv/tie/', undefined);\r\n\r\nexport class CallCenterApi extends CenterApi {\r\n    directCall(url:string, method:string, body:any):Promise<any> {\r\n        return this.call(url, method, body);\r\n    }\r\n}\r\nexport const callCenterapi = new CallCenterApi('', undefined);\r\n\r\nexport interface App {\r\n    id: number;\r\n    uqs: AppUq[];\r\n}\r\n\r\nexport interface AppUq {\r\n    id: number;\r\n    uqOwner: string;\r\n    uqName: string;\r\n    url: string;\r\n    urlDebug: string;\r\n    ws: string;\r\n    wsDebug: string;\r\n    access: string;\r\n    token: string;\r\n}\r\n\r\nexport class CenterAppApi extends CenterApi {\r\n    private cachedUqs: any;\r\n    async uqs(unit:number, appOwner:string, appName:string):Promise<App> {\r\n        let ret:any;\r\n        let ls = localStorage.getItem('appUqs');\r\n        if (ls !== null) {\r\n            let rLs = JSON.parse(ls);\r\n            let {unit:rUnit, appOwner:rAppOwner, appName:rAppName, value} = rLs;\r\n            if (unit === rUnit && appOwner === rAppOwner && appName === rAppName) ret = value;\r\n        }\r\n        if (ret === undefined) {\r\n            ret = await this.uqsPure(unit, appOwner, appName);\r\n            let obj = {\r\n                unit:unit, \r\n                appOwner:appOwner, \r\n                appName:appName, \r\n                value: ret,\r\n            }\r\n            localStorage.setItem('appUqs', JSON.stringify(obj));\r\n        }\r\n        return this.cachedUqs = _.cloneDeep(ret);\r\n    }\r\n    private async uqsPure(unit:number, appOwner:string, appName:string):Promise<App> {\r\n        return await this.get('tie/app-uqs', {unit:unit, appOwner:appOwner, appName:appName});\r\n    }\r\n    async checkUqs(unit:number, appOwner:string, appName:string):Promise<boolean> {\r\n        let ret = await this.uqsPure(unit, appOwner, appName);\r\n        return _.isMatch(this.cachedUqs, ret);\r\n    }\r\n    async unitxUq(unit:number):Promise<AppUq> {\r\n        return await this.get('tie/unitx-uq', {unit:unit});\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Controller } from 'tonva-tools';\r\n\r\nexport abstract class Link {\r\n    abstract onClick: () => void;\r\n    abstract render(className?:string):JSX.Element;\r\n}\r\n\r\nexport class CLink extends Link {\r\n    private controller: Controller;\r\n    protected icon:string|JSX.Element;\r\n    protected label:string|JSX.Element;\r\n\r\n    constructor(controller:Controller) {\r\n        super();\r\n        this.controller = controller;\r\n        this.icon = controller.icon;\r\n        this.label = controller.label;\r\n    }\r\n\r\n    onClick = async () => {\r\n        await this.controller.start();\r\n    }\r\n\r\n    render(className?:string) {\r\n        return <div\r\n            className={classNames('px-3', 'py-2', 'align-items-center', 'cursor-pointer', className)}\r\n            onClick={this.onClick}>\r\n            {this.icon} &nbsp; {this.label}\r\n        </div>;\r\n        //return React.createElement(this.view, className);\r\n    }\r\n}\r\n","export * from './cLink';\r\n","\r\nlet subAppWindow:Window;\r\nfunction postWsToSubApp(msg:any) {\r\n    if (subAppWindow === undefined) return;\r\n    subAppWindow.postMessage({\r\n        type: 'ws',\r\n        msg: msg\r\n    }, '*');\r\n}\r\n\r\nexport function setSubAppWindow(win:Window) {\r\n    subAppWindow = win;\r\n}\r\n\r\nexport function postWsToTop(msg:any) {\r\n    window.top.postMessage({\r\n        type: 'ws',\r\n        msg: msg\r\n    }, '*');\r\n}\r\n\r\nexport abstract class WsBase {\r\n    wsBaseId:string;\r\n    private handlerSeed = 1;\r\n    private anyHandlers:{[id:number]:(msg:any)=>Promise<void>} = {};\r\n    private msgHandlers:{[id:number]:{type:string, handler:(msg:any)=>Promise<void>}} = {};\r\n    onWsReceiveAny(handler:(msg:any)=>Promise<void>):number {\r\n        let seed = this.handlerSeed++;\r\n        this.anyHandlers[seed] = handler;\r\n        return seed;\r\n    }\r\n    onWsReceive(type:string, handler:(msg:any)=>Promise<void>):number {\r\n        let seed = this.handlerSeed++;\r\n        this.msgHandlers[seed] = {type:type, handler: handler};\r\n        return seed;\r\n    }\r\n    endWsReceive(handlerId:number) {\r\n        delete this.anyHandlers[handlerId];\r\n        delete this.msgHandlers[handlerId];\r\n    }\r\n    async receive(msg:any) {\r\n        let {$type} = msg;\r\n        for (let i in this.anyHandlers) {\r\n            await this.anyHandlers[i](msg);\r\n        }\r\n        for (let i in this.msgHandlers) {\r\n            let {type, handler} = this.msgHandlers[i];\r\n            if (type !== $type) continue;\r\n            await handler(msg);\r\n        }\r\n    }\r\n}\r\n\r\nlet wsBaseSeed = 1;\r\nexport class WsBridge extends WsBase {\r\n    wsBaseId:string = 'WsBridge seed ' + wsBaseSeed++;\r\n}\r\n\r\nexport const wsBridge = new WsBridge();\r\n\r\nexport class WSChannel extends WsBase {\r\n    wsBaseId:string = 'WSChannel seed ' + wsBaseSeed++;\r\n    static centerToken:string;\r\n    private wsHost: string;\r\n    private token: string;\r\n    private ws: WebSocket;\r\n\r\n    constructor(wsHost: string, token: string) {\r\n        super();\r\n        this.wsHost = wsHost;\r\n        this.token = token;\r\n    }\r\n\r\n    static setCenterToken(token?: string) {\r\n        WSChannel.centerToken = token;\r\n    }\r\n    \r\n    connect():Promise<void> {\r\n        //this.wsHost = wsHost;\r\n        //this.token = token || WSChannel.centerToken;\r\n        if (this.ws !== undefined) return;\r\n        let that = this;\r\n        return new Promise((resolve, reject) => {\r\n            let ws = new WebSocket(this.wsHost, this.token || WSChannel.centerToken);\r\n            console.log('connect webSocket %s', this.wsHost);\r\n            ws.onopen = (ev) => {\r\n                console.log('webSocket connected %s', this.wsHost);\r\n                that.ws = ws;\r\n                resolve();\r\n            };\r\n            ws.onerror = (ev) => {\r\n                reject('webSocket can\\'t open!');\r\n            };\r\n            ws.onmessage = async (msg) => await that.wsMessage(msg);\r\n            ws.onclose = (ev) => {\r\n                that.ws = undefined;\r\n                console.log('webSocket closed!');\r\n            }\r\n        });\r\n    }\r\n    close() {\r\n        if (this.ws !== undefined) {\r\n            this.ws.close();\r\n            this.ws = undefined;\r\n        }\r\n    }\r\n    private async wsMessage(event:any):Promise<void> {\r\n        try {\r\n            console.log('websocket message: %s', event.data);\r\n            let msg = JSON.parse(event.data);\r\n            postWsToSubApp(msg);\r\n            await this.receive(msg);\r\n        }\r\n        catch (err) {\r\n            console.log('ws msg error: ', err);\r\n        }\r\n    }\r\n    sendWs(msg:any) {\r\n        let netThis = this;\r\n        this.connect().then(() => {\r\n            netThis.ws.send(msg);\r\n        });\r\n    }\r\n}\r\n","const ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\nconst ID_LENGTH = 8;\r\n\r\nexport function uid():string {\r\n    let len = ALPHABET.length;\r\n    let rtn = '';\r\n    for (let i = 0; i < ID_LENGTH; i++) {\r\n        rtn += ALPHABET.charAt(Math.floor(Math.random() * len));\r\n    }\r\n    return rtn;\r\n}\r\n","export * from './nav';\r\nexport * from './titleBar';\r\nexport * from './page';\r\n//export * from './listView';\r\n//export * from './listRow';\r\nexport * from './rowIcon';\r\nexport * from './row';\r\n//export * from './dropdownActions';\r\n//export * from './validForm';\r\nexport * from './VM';\r\nexport * from './form';\r\nexport * from './res';\r\nexport * from './tabs';\r\nexport * from './loading';","export const isDevelopment = process.env.NODE_ENV === 'development';\r\n\r\nconst centerHost = process.env['REACT_APP_CENTER_HOST'];\r\nconst centerDebugHost = 'localhost:3000'; //'192.168.86.64';\r\nconst uqDebugHost = 'localhost:3015'; //'192.168.86.63';\r\nconst uqDebugBuilderHost = 'localhost:3009';\r\ninterface HostValue {\r\n    value: string;\r\n    local: boolean;\r\n}\r\nconst hosts:{[name:string]:HostValue} = {\r\n    centerhost: {\r\n        value: process.env['REACT_APP_CENTER_DEBUG_HOST'] || centerDebugHost, \r\n        local: false\r\n    },\r\n    uqhost: {\r\n        value: process.env['REACT_APP_UQ_DEBUG_HOST'] || uqDebugHost, \r\n        local: false\r\n    },\r\n    unitxhost: {\r\n        value: process.env['REACT_APP_UQ_DEBUG_HOST'] || uqDebugHost, \r\n        local: false\r\n    },\r\n    \"uq-build\": {\r\n        value: process.env['REACT_APP_UQ_DEBUG_BUILDER_HOST'] || uqDebugBuilderHost, \r\n        local: false\r\n    }\r\n}\r\n\r\nfunction centerUrlFromHost(host:string) {return `http://${host}/`}\r\nfunction centerWsFromHost(host:string) {return `ws://${host}/tv/`}\r\n    \r\nclass Host {\r\n    url: string;\r\n    ws: string;\r\n\r\n    async start() {\r\n        if (isDevelopment === true) {\r\n            await this.tryLocal();\r\n        }\r\n        let host = this.getCenterHost();\r\n        this.url = centerUrlFromHost(host);\r\n        this.ws = centerWsFromHost(host);\r\n    }\r\n\r\n    private debugHostUrl(host:string) {return `http://${host}/hello`}\r\n    private async tryLocal() {\r\n        let promises:PromiseLike<any>[] = [];\r\n        for (let i in hosts) {\r\n            let hostValue = hosts[i];\r\n            let {value} = hostValue;\r\n            //let host = process.env[env] || value;\r\n            let fetchUrl = this.debugHostUrl(value);\r\n            let fetchOptions = {\r\n                method: \"GET\",\r\n                mode: \"no-cors\", // no-cors, cors, *same-origin\r\n                headers: {\r\n                    \"Content-Type\": \"text/plain\"\r\n                },\r\n            };\r\n            promises.push(localCheck(fetchUrl, fetchOptions));\r\n        }\r\n        let results = await Promise.all(promises);\r\n        let p = 0;\r\n        for (let i in hosts) {\r\n            let hostValue = hosts[i];\r\n            hostValue.local = results[p];\r\n            ++p;\r\n        }\r\n    }\r\n\r\n    private getCenterHost():string {\r\n        //let host = process.env['REACT_APP_CENTER_HOST'];\r\n        let {value, local} = hosts.centerhost; // process.env.REACT_APP_CENTER_DEBUG_HOST || centerDebugHost;\r\n        let hash = document.location.hash;\r\n        if (hash.includes('sheet_debug') === true) {\r\n            return value;\r\n        }\r\n        //if (process.env.NODE_ENV==='development') {\r\n        if (isDevelopment === true) {\r\n            if (local === true) return value;\r\n            /*\r\n            if (debugHost !== undefined) {\r\n                try {\r\n                    console.log('try connect debug url');\r\n                    await fetchLocalCheck(centerUrlFromHost(debugHost));\r\n                    return debugHost;\r\n                }\r\n                catch (err) {\r\n                    //console.error(err);\r\n                }\r\n            }*/\r\n        }\r\n        return centerHost;\r\n    }\r\n\r\n    getUrlOrDebug(url:string, urlDebug:string):string {\r\n        if (isDevelopment !== true) return url;\r\n        if (!urlDebug) return url;\r\n        for (let i in hosts) {\r\n            let host = hosts[i];\r\n            let {value, local} = host;\r\n            let hostString = `://${i}/`;\r\n            let pos = urlDebug.indexOf(hostString);\r\n            if (pos > 0) {\r\n                if (local === false) return url;\r\n                urlDebug = urlDebug.replace(hostString, `://${value}/`);\r\n                return urlDebug;\r\n            }\r\n        }\r\n        return url;\r\n    }\r\n}\r\n\r\nexport const host:Host = new Host();\r\n\r\n// 因为测试的都是局域网服务器，甚至本机服务器，所以一秒足够了\r\n// 网上找了上面的fetch timeout代码。\r\n// 尽管timeout了，fetch仍然继续，没有cancel\r\n\r\n// 实际上，一秒钟不够。web服务器会自动停。重启的时候，可能会比较长时间。也许两秒甚至更多。\r\n//const timeout = 2000;\r\nconst timeout = 100;\r\n\r\nfunction fetchLocalCheck(url:string, options?:any):Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      fetch(url, options)\r\n      .then(v => {\r\n          v.text().then(resolve).catch(reject);\r\n      })\r\n      .catch(reject);\r\n      const e = new Error(\"Connection timed out\");\r\n      setTimeout(reject, timeout, e);\r\n    });\r\n}\r\n\r\nasync function localCheck(url:string, options?:any):Promise<boolean> {\r\n    try {\r\n        await fetchLocalCheck(url, options);\r\n        return true;\r\n    }\r\n    catch {\r\n        return false;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {IComputedValue} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash';\r\nimport {TitleBar} from './titleBar';\r\n\r\nexport interface ScrollProps {\r\n    onScroll?: (e:any) => void;\r\n    onScrollTop?: () => void;\r\n    onScrollBottom?: () => void;\r\n}\r\ninterface ScrollViewProps extends ScrollProps {\r\n    className?: string;\r\n}\r\nconst scrollTimeGap = 100;\r\nclass ScrollView extends React.Component<ScrollViewProps, null> {\r\n    private bottomTime:number = 0;\r\n    private topTime:number = 0;\r\n\r\n    private onScroll = async (e) => {\r\n        let {onScroll, onScrollTop, onScrollBottom} = this.props;\r\n        if (onScroll) this.props.onScroll(e);\r\n        let el = e.target as HTMLBaseElement;\r\n        if (el.scrollTop < 30) {\r\n            //this.eachChild(this, 'top');\r\n            if (onScrollTop !== undefined) {\r\n                let topTime = new Date().getTime();\r\n                if (topTime-this.topTime > scrollTimeGap) {\r\n                    this.topTime = topTime;\r\n                    onScrollTop();\r\n                }\r\n            }\r\n        }\r\n        if (el.scrollTop + el.offsetHeight > el.scrollHeight - 30) {\r\n            //this.eachChild(this, 'bottom');\r\n            if (onScrollBottom !== undefined) {\r\n                let bottomTime = new Date().getTime();\r\n                if (bottomTime - this.bottomTime > scrollTimeGap) {\r\n                    this.bottomTime = bottomTime;\r\n                    onScrollBottom();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    private eachChild(c:any, direct:'top'|'bottom') {\r\n        let { props } = c;\r\n        if (props === undefined)\r\n            return;\r\n        let { children } = props;\r\n        if (children === undefined)\r\n            return;\r\n        React.Children.forEach(children, (child, index) => {\r\n            let {_$scroll} = child as any;\r\n            if (_$scroll) _$scroll(direct);\r\n            console.log(child.toString());\r\n            this.eachChild(child, direct);\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <main className={this.props.className} onScroll={this.onScroll}>\r\n                {this.props.children}\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport interface Tab extends ScrollProps {\r\n    title: string;\r\n    icon?: string;\r\n    content?: JSX.Element | (()=>JSX.Element);\r\n    header?: string;\r\n    isSelected?: boolean;\r\n    redDot?: IComputedValue<number>;\r\n    load?: () => Promise<void>;\r\n}\r\nexport interface TabState extends Tab {\r\n    isMounted?: boolean;\r\n}\r\nexport interface PageProps extends ScrollProps {\r\n    back?: 'close' | 'back' | 'none';\r\n    header?: boolean | string | JSX.Element;\r\n    keepHeader?: boolean;\r\n    right?: JSX.Element;\r\n    sideBar?: JSX.Element;\r\n    footer?: JSX.Element;\r\n    tabs?: Tab[];\r\n    logout?: boolean | (()=>void);\r\n}\r\nexport interface PageState {\r\n    cur?: Tab;\r\n    tabs?: TabState[];\r\n}\r\n\r\n@observer\r\nexport class Page extends React.Component<PageProps, PageState> {\r\n    private tabs:TabState[];\r\n    constructor(props: PageProps) {\r\n        super(props);\r\n        let {tabs} = props;\r\n        if (tabs === undefined || tabs.length === 0) return;\r\n        this.tabs = tabs;\r\n        let cur:Tab;\r\n        let tabStates:Tab[] = [];\r\n        for (let tab of tabs) {\r\n            let t:TabState = _.clone(tab);\r\n            if (cur === undefined) {\r\n                if (t.isSelected === true)\r\n                    cur = t;\r\n                else\r\n                    t.isSelected = false;\r\n            }\r\n            else {\r\n                t.isSelected = false;\r\n            }\r\n            t.isMounted = false;\r\n            tabStates.push(t);\r\n        }\r\n        this.state = {\r\n            cur: cur,\r\n            tabs: tabStates,\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (this.tabs === undefined) return;\r\n        let t0 = this.state.tabs[0];\r\n        if (t0 === undefined) return;\r\n        await this.onTabClick(t0);\r\n    }\r\n\r\n    private async onTabClick(tab: TabState) {\r\n        if (tab.isSelected === true) return;\r\n        let cur:TabState;\r\n        let tabs = this.state.tabs;\r\n        for (let t of tabs) {\r\n            if (t === tab) {\r\n                t.isSelected = true;\r\n                cur = t;\r\n            }\r\n            else\r\n                t.isSelected = false;\r\n        }\r\n        if (cur.isMounted !== true) {\r\n            let {load} = cur;\r\n            if (load !== undefined) {\r\n                await load();\r\n            }\r\n        }\r\n        this.setState({\r\n            cur: cur,\r\n            tabs: tabs\r\n        });\r\n    }\r\n\r\n    private onTouchStart(evt: React.TouchEvent<HTMLElement>) {\r\n    }\r\n\r\n    private renderTabs(footer: JSX.Element) {\r\n        const {header, back, right, keepHeader} = this.props;\r\n        let cur = this.state.cur;\r\n        let tabs = <div>{\r\n                this.state.tabs.map((tab, index) => {\r\n                    const {icon, isSelected, title, redDot} = tab;\r\n                    let img:any, redDotView:any, cn:any;\r\n                    if (icon !== undefined) img = <img src={icon} />;\r\n                    if (redDot !== undefined) {\r\n                        let v = redDot.get();\r\n                        if (v < 0) {\r\n                            cn = classNames('red-dot');\r\n                            redDotView = <u />;\r\n                        }\r\n                        else if (v > 0) {\r\n                            cn = classNames('red-dot', 'num');\r\n                            redDotView = <u>{v}</u>;\r\n                        }\r\n                    }\r\n                    return <div key={index}\r\n                        className= {classNames('va-tab', {cur: isSelected})}\r\n                        onClick={() => this.onTabClick(tab)}>\r\n                        {img}<div className={cn}>{title}{redDotView}</div>\r\n                    </div>\r\n                })\r\n            }</div>;\r\n        let titleBar;\r\n        if (header !== false) {\r\n            titleBar = <TitleBar \r\n                back={back} \r\n                center={keepHeader===true? (header as string) : (cur && (cur.header || cur.title))}\r\n                right={right} \r\n            />;\r\n        }\r\n\r\n        return <article className='page-container'>\r\n            {titleBar}\r\n            <section className=\"position-relative\">\r\n            {this.props.sideBar}\r\n            {\r\n                this.state.tabs.map((tab, index) => {\r\n                    let {isSelected, isMounted, content} = tab;\r\n                    if (isSelected === true || isMounted === true) {\r\n                        tab.isMounted = true;\r\n                        return <ScrollView key={index}\r\n                            className={classNames({invisible: isSelected===false})}\r\n                            onScroll={tab.onScroll}\r\n                            onScrollTop={tab.onScrollTop}\r\n                            onScrollBottom={tab.onScrollBottom}\r\n                        >\r\n                            {(typeof content)==='function'? (content as ()=>JSX.Element)():content}\r\n                        </ScrollView>;\r\n                    }\r\n                })\r\n            }\r\n            </section>\r\n            {tabs}\r\n            {footer}\r\n        </article>;\r\n    }\r\n    private renderSingle(footer: JSX.Element) {\r\n        const {back, header, right, onScroll, onScrollTop, onScrollBottom, children} = this.props;\r\n        let titleBar;\r\n        if (header !== false)\r\n            titleBar = <TitleBar \r\n                back={back} \r\n                center={header as any}\r\n                right={right}\r\n                logout={this.props.logout}\r\n            />;\r\n        return (\r\n            <article className='page-container' onTouchStart={this.onTouchStart}>\r\n                {titleBar}\r\n                <section className=\"position-relative\">\r\n                    {this.props.sideBar}\r\n                    <ScrollView\r\n                        onScroll={onScroll}\r\n                        onScrollTop={onScrollTop}\r\n                        onScrollBottom={onScrollBottom}\r\n                    >\r\n                        {children}\r\n                    </ScrollView>\r\n                </section>\r\n                {footer}\r\n            </article>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const {footer} = this.props;\r\n        let elFooter;\r\n        if (footer !== undefined) elFooter = <footer>{footer}</footer>;\r\n        if (this.tabs !== undefined)\r\n            return this.renderTabs(elFooter);\r\n        else\r\n            return this.renderSingle(elFooter);\r\n    }\r\n}\r\n","const ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\nconst ID_LENGTH = 8;\r\n\r\nexport function uid():string {\r\n    let len = ALPHABET.length;\r\n    let rtn = '';\r\n    for (let i = 0; i < ID_LENGTH; i++) {\r\n        rtn += ALPHABET.charAt(Math.floor(Math.random() * len));\r\n    }\r\n    return rtn;\r\n}\r\n","import * as React from 'react';\r\nimport { SearchBox, List, Muted } from 'tonva-react-form';\r\nimport { TuidMain, Entity } from '../../entities';\r\nimport { Page } from 'tonva-tools';\r\nimport { CLink } from '../link';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CTuidMain, TuidUI } from './cTuid';\r\n\r\nexport class VTuidMain extends VEntity<TuidMain, TuidUI, CTuidMain> {\r\n    protected controller: CTuidMain;\r\n    onNew = () => this.event('new');\r\n    onList = () => this.event('list');\r\n    onSearch = async (key:string) => this.event('list', key);\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected entityRender(link: CLink, index: number): JSX.Element {\r\n        return link.render();\r\n    }\r\n\r\n    protected async entityClick(link: CLink) {\r\n        await link.onClick();\r\n    }\r\n\r\n    protected get view() {\r\n        let {label, proxyLinks, isFrom} = this.controller;\r\n        let newButton;\r\n        if (isFrom === false) newButton = <button className=\"btn btn-primary ml-3\" onClick={this.onNew}>新增</button>;\r\n        return () => <Page header={label}>\r\n            {proxyLinks === undefined ?\r\n            <>\r\n                <SearchBox className=\"w-100\" onSearch={this.onSearch} placeholder={'搜索'+label} />\r\n                <div className='my-3'>\r\n                    {newButton}\r\n                    <button className=\"btn btn-primary ml-3\" onClick={this.onList}>列表</button>\r\n                </div>\r\n            </> :\r\n            <List className=\"my-2\"\r\n                header={<Muted>{label} 代理下列Tuid</Muted>}\r\n                items={proxyLinks}\r\n                item={{render: this.entityRender, onClick:this.entityClick}} />\r\n            }\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { FA } from 'tonva-react-form';\r\nimport { Page } from 'tonva-tools';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CTuidMain, TuidUI } from './cTuid';\r\nimport { TuidMain, Tuid } from '../../entities';\r\n\r\nexport type TypeVTuidEdit = typeof VTuidEdit;\r\n\r\nexport class VTuidEdit extends VEntity<Tuid, TuidUI, CTuidMain> {\r\n    private vForm: VForm;\r\n    private id: number;\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        if (param !== undefined) {\r\n            this.id = param.id;\r\n        }\r\n        this.openPage(this.editView);\r\n    }\r\n\r\n    protected get editView() {\r\n        return () => <Page header={(this.id===undefined? '新增':'编辑') + ' - ' + this.label}>\r\n            {this.vForm.render('py-3')}\r\n        </Page>;\r\n    }\r\n\r\n    protected next = async () => {\r\n        this.vForm.reset();\r\n        this.closePage();\r\n    }\r\n\r\n    protected finish = () => {\r\n        this.closePage(2);\r\n        this.event('edit-end');\r\n    }\r\n\r\n    protected resetForm() {\r\n        this.vForm.reset();\r\n    }\r\n\r\n    protected onSubmit = async () => {\r\n        let values = this.vForm.getValues();\r\n        let ret = await this.controller.entity.save(this.id, values);\r\n        let {id} = ret;\r\n        if (id < 0) {\r\n            let {unique} = this.controller.entity;\r\n            if (unique !== undefined) {\r\n                for (let u of unique) {\r\n                    this.vForm.setError(u, '不能重复');\r\n                }\r\n            }\r\n            return;\r\n        }\r\n        if (this.controller.isCalling) {\r\n            this.returnCall(id);\r\n            this.closePage();\r\n            return;\r\n        }\r\n        this.openPageElement(<Page header={this.label + '提交成功'} back=\"none\">\r\n            <div className='m-3'>\r\n                <span className=\"text-success\">\r\n                    <FA name='check-circle' size='lg' /> 成功提交！\r\n                </span>\r\n                <div className='mt-5'>\r\n                    <button className=\"btn btn-primary mr-3\" onClick={this.next}>继续录入</button>\r\n                    <button className=\"btn btn-outline-primary\" onClick={this.finish}>不继续</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n\r\n        this.event('item-changed', {id: this.id, values: values});\r\n        return;\r\n    }\r\n\r\n    //protected view = TuidNewPage;\r\n}\r\n/*\r\nconst TuidNewPage = observer(({vm}:{vm:VmTuidEdit}) => {\r\n    let {label, id, vmForm} = vm;\r\n    return <Page header={(id===undefined? '新增':'编辑') + ' - ' + label}>\r\n        {vmForm.render('mx-3 my-2')}\r\n    </Page>;\r\n});\r\n*/","import { nav, Page } from 'tonva-tools';\r\nimport { VTuidMainListBase, VTuidDivListBase } from './vTuidList';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Tuid } from '../../entities';\r\nimport { CTuid, TuidUI } from './cTuid';\r\nimport { SearchBox, List } from 'tonva-react-form';\r\nimport React from 'react';\r\nimport { RowContent } from '../form/viewModel';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class VTuidSelect extends VEntity<Tuid, TuidUI, CTuid<Tuid>> {\r\n    protected mainRowContent: (row:any) => JSX.Element;\r\n    protected divRowContent: (row:any) => JSX.Element;\r\n\r\n    async open(param?:any): Promise<void> {\r\n        if (param === undefined)\r\n            await this.showMain(param);\r\n        else\r\n            await this.showDiv(param);\r\n    }\r\n\r\n    private async showMain(param) {\r\n        this.mainRowContent = this.ui.rowContent || RowContent;\r\n        await this.controller.searchMain(param);\r\n        this.openPage(this.mainView);\r\n    }\r\n\r\n    private async showDiv(ownerValue: any) {\r\n        let {divs} = this.ui;\r\n        if (divs !== undefined) {\r\n            this.divRowContent = divs[this.entity.name].rowContent;\r\n        }\r\n        if (this.divRowContent === undefined) {\r\n            this.divRowContent = RowContent;\r\n        }\r\n        let divItems = await this.controller.getDivItems(ownerValue);\r\n        this.openPage(this.divView, {items: divItems});\r\n    }\r\n\r\n    protected mainView = observer(() => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearchMain} placeholder={'搜索'+this.label} />;\r\n        return <Page header={header} back=\"close\">\r\n            <List\r\n                items={this.controller.PageItems.items}\r\n                item={{render: this.renderMainRow, onClick: this.clickMainRow}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    });\r\n\r\n    onSearchMain = async (key:string) => {\r\n        await this.controller.searchMain(key);\r\n        //await this.PageItems.first(key);\r\n    }\r\n    renderMainRow = (item:any, index:number):JSX.Element => <this.mainRowContent {...item} />;\r\n    clickMainRow = async (item:any) => {\r\n        this.ceasePage();\r\n        if (this.controller.entity.owner === undefined) {\r\n            this.returnCall(item);\r\n            return;\r\n        }\r\n        await this.showDiv(this.entity.getIdFromObj(item));\r\n    }\r\n\r\n    protected divView = (param:any) => {\r\n        return <Page header=\"选择Div\">\r\n            <List\r\n                items={param.items}\r\n                item={{render: this.renderDivRow, onClick: this.clickDivRow}} />\r\n        </Page>;\r\n    }\r\n    renderDivRow = (item:any, index:number):JSX.Element => <this.divRowContent {...item} />;\r\n    clickDivRow = (item:any) => {\r\n        this.ceasePage();\r\n        this.returnCall(item);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { FA } from 'tonva-react-form';\r\nimport { Page } from 'tonva-tools';\r\nimport { jsonStringify } from '../../tools';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { TuidMain } from '../../entities';\r\nimport { TuidUI, CTuidMain } from './cTuid';\r\n\r\nexport type TypeVTuidView = typeof VTuidView;\r\n\r\nexport class VTuidView extends VEntity<TuidMain, TuidUI, CTuidMain> {\r\n    vForm: VForm;\r\n    id: number;\r\n\r\n    protected buildForm(param:any) {\r\n        this.vForm = this.createForm(undefined, param);\r\n    }\r\n\r\n    async open(param:any) {\r\n        this.buildForm(param);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    render(param:any) {\r\n        this.buildForm(param);\r\n        return this.vForm.render();\r\n    }\r\n\r\n    async loadId(id: number) {\r\n        this.id = id;\r\n    }\r\n\r\n    protected next = async () => {\r\n        this.vForm.reset();\r\n        this.closePage();\r\n    }\r\n\r\n    protected finish = () => {\r\n        this.closePage(2);\r\n    }\r\n\r\n    protected resetForm() {\r\n        this.vForm.reset();\r\n    }\r\n\r\n    protected onSubmit = async () => {\r\n        let values = this.vForm.getValues();\r\n        let ret = await this.entity.save(this.id, values);\r\n        if (ret) {\r\n            alert('这里还要判断返回值，先不处理了 \\n' + jsonStringify(ret));\r\n        }\r\n        this.openPage(() => <Page header={this.label + '提交成功'} back=\"none\">\r\n            <div className='m-3'>\r\n                <span className=\"text-success\">\r\n                    <FA name='check-circle' size='lg' /> 成功提交！\r\n                </span>\r\n                <div className='mt-5'>\r\n                    <button className=\"btn btn-primary mr-3\" onClick={this.next}>继续录入</button>\r\n                    <button className=\"btn btn-outline-primary\" onClick={this.finish}>不继续</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n        return;\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n            {this.vForm.render('py-3')}\r\n    </Page>;\r\n}\r\n","import React from 'react';\r\nimport { VTuidView } from './vTuidView';\r\n\r\nexport class VTuidInfo  extends VTuidView {\r\n/*\r\n    async open(param?:any) {\r\n        this.open(this.view);\r\n    }\r\n*/\r\n/*\r\n    private view = () => {\r\n        return <Page>\r\n            TuidInfo\r\n        </Page>\r\n    }\r\n*/\r\n}\r\n","import { PageItems } from 'tonva-tools';\r\nimport { Tuid } from \"../../entities\";\r\n\r\nexport class TuidPageItems<T> extends PageItems<T> {\r\n    private tuid: Tuid;\r\n    constructor(tuid: Tuid) {\r\n        super(true);\r\n        this.tuid = tuid;\r\n    }\r\n    protected async load(param:any, pageStart:any, pageSize:number):Promise<any[]> {\r\n        let ret = await this.tuid.search(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:any) {\r\n        this.pageStart = item === undefined? 0 : item.id;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { FA, SearchBox, List } from 'tonva-react-form';\r\nimport { Page, PageItems } from 'tonva-tools';\r\nimport { jsonStringify } from '../../tools';\r\nimport { TuidMain, Entity, Tuid, TuidDiv } from '../../entities';\r\nimport { VEntity } from '../CVEntity';\r\nimport { TuidUI, CTuidMain, CTuidDiv } from './cTuid';\r\nimport { JSONContent, RowContent } from '../form/viewModel';\r\n\r\nexport abstract class VTuidMainListBase  extends VEntity<TuidMain, TuidUI, CTuidMain> {\r\n    protected rowContent: (row:any) => JSX.Element;\r\n    protected ownerId: number;\r\n\r\n    async open(param?:any) {\r\n        this.rowContent = this.ui.rowContent || RowContent;\r\n        if (this.entity.owner !== undefined) this.ownerId = Number(param);\r\n        // 初始查询, key是空的\r\n        //await this.onSearch('');\r\n        await this.controller.searchMain('');\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSearch = async (key:string) => {\r\n        await this.controller.searchMain(key);\r\n        //await this.PageItems.first(key);\r\n    }\r\n    renderRow = (item:any, index:number):JSX.Element => <this.rowContent {...item} />;\r\n\r\n    protected abstract onSelected(item:any): Promise<void>;\r\n    private callOnSelected(item:any) {\r\n        if (this.onSelected === undefined) {\r\n            alert('onSelect is undefined');\r\n            return;\r\n        }\r\n        this.onSelected(item);\r\n    }\r\n    clickRow = (item:any) => {\r\n        this.callOnSelected(item);\r\n    }\r\n    private rowKey = (item:any) => {\r\n        let {id} = item;\r\n        return id;\r\n    }\r\n    protected view = observer(() => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\r\n        let {owner} = this.entity;\r\n        let ownerTop;\r\n        if (owner !== undefined) {\r\n            let ownerObj = owner.valueFromId(this.ownerId);\r\n            ownerTop = <div>owner: {jsonStringify(ownerObj)}</div>;\r\n        }\r\n        return <Page header={header}>\r\n            {ownerTop}\r\n            <List\r\n                items={this.controller.PageItems.items}\r\n                item={{render: this.renderRow, onClick: this.clickRow, key:this.rowKey}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    });\r\n}\r\n\r\nexport class VTuidMainList extends VTuidMainListBase {\r\n    protected async onSelected(item:any) {\r\n        if (this.controller.isFrom === false)\r\n            this.event('edit', item.id);\r\n        else\r\n            this.event('info', item.id);\r\n    }\r\n}\r\n\r\nexport abstract class VTuidDivListBase  extends VEntity<TuidDiv, TuidUI, CTuidDiv> {\r\n    protected ownerId: number;\r\n\r\n    async open(param?:any) {\r\n        //this.PageItems = new TuidPageItems(this.entity);\r\n        if (this.entity.owner !== undefined) this.ownerId = Number(param);\r\n        // 初始查询, key是空的\r\n        //await this.onSearch('');\r\n        await this.controller.searchMain('');\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSearch = async (key:string) => {\r\n        await this.controller.searchMain(key);\r\n        //await this.PageItems.first(key);\r\n    }\r\n    renderRow = (item:any, index:number):JSX.Element => {\r\n        return <div className=\"px-3 py-2\">{jsonStringify(item)}</div>;\r\n    }\r\n\r\n    protected abstract onSelected(item:any): Promise<void>;\r\n    private callOnSelected(item:any) {\r\n        if (this.onSelected === undefined) {\r\n            alert('onSelect is undefined');\r\n            return;\r\n        }\r\n        this.onSelected(item);\r\n    }\r\n    clickRow = (item:any) => {\r\n        this.callOnSelected(item);\r\n    }\r\n\r\n    protected view = observer(() => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\r\n        let {owner} = this.entity;\r\n        let ownerTop;\r\n        if (owner !== undefined) {\r\n            let ownerObj = owner.valueFromId(this.ownerId);\r\n            ownerTop = <div>owner: {jsonStringify(ownerObj)}</div>;\r\n        }\r\n        return <Page header={header}>\r\n            {ownerTop}\r\n            <List\r\n                items={this.controller.PageItems.items}\r\n                item={{render: this.renderRow, onClick: this.clickRow}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    });\r\n}\r\n\r\nexport class VTuidDivList extends VTuidDivListBase {\r\n    protected async onSelected(item:any) {\r\n        this.event('edit', item.id);\r\n    }\r\n}\r\n","import _ from 'lodash';\r\nimport { TypeVPage, PageItems } from 'tonva-tools';\r\nimport { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { TuidMain, Tuid, TuidDiv } from \"../../entities\";\r\nimport { VTuidMain } from './vTuidMain';\r\nimport { VTuidEdit } from './vTuidEdit';\r\nimport { VTuidSelect } from './vTuidSelect';\r\nimport { CUq } from \"../uq/cUq\";\r\nimport { CLink } from \"../link\";\r\nimport { VTuidInfo } from \"./vTuidInfo\";\r\nimport { TuidPageItems } from \"./pageItems\";\r\nimport { VTuidMainList } from './vTuidList';\r\n\r\nexport interface TuidUI extends EntityUI {\r\n    CTuidMain?: typeof CTuidMain;\r\n    CTuidEdit?: typeof CTuidEdit;\r\n    CTuidList?: typeof CTuidList;\r\n\r\n    CTuidSelect?: typeof CTuidSelect;\r\n    CTuidInfo?: typeof CTuidInfo;\r\n    content?: React.StatelessComponent<any>;\r\n    rowContent?: React.StatelessComponent<any>;\r\n    divs?: {\r\n        [div:string]: {\r\n            CTuidSelect?: typeof CTuidSelect;\r\n            content?: React.StatelessComponent<any>;\r\n            rowContent?: React.StatelessComponent<any>;\r\n        }\r\n    }\r\n}\r\n\r\nexport abstract class CTuid<T extends Tuid> extends CEntity<T, TuidUI> {\r\n    PageItems:PageItems<any>;\r\n\r\n    protected buildPageItems():PageItems<any> {\r\n        return new TuidPageItems(this.entity.owner || this.entity);\r\n    }\r\n\r\n    async searchMain(key:string) {\r\n        if (this.PageItems === undefined) {\r\n            this.PageItems = this.buildPageItems();\r\n        }\r\n        if (key !== undefined) await this.PageItems.first(key);\r\n    }\r\n\r\n    async getDivItems(ownerId:number):Promise<any[]> {\r\n        let ret = await this.entity.searchArr(ownerId, undefined, 0, 1000);\r\n        return ret;\r\n    }\r\n}\r\n\r\nexport class CTuidMain extends CTuid<TuidMain> {\r\n    constructor(cUq: CUq, entity: TuidMain, ui: TuidUI, res:any) {\r\n        super(cUq, entity, ui, res);\r\n        let tuid = this.entity;\r\n        this.proxies = tuid.proxies;\r\n        if (this.proxies !== undefined) {\r\n            this.proxyLinks = [];\r\n            for (let i in this.proxies) {\r\n                let link = this.cUq.linkFromName('tuid', i);\r\n                this.proxyLinks.push(link);\r\n            }\r\n        }\r\n    }\r\n\r\n    async from():Promise<CTuidMain> {\r\n        let ret = await this.entity.cFrom();\r\n        if (ret === undefined) return this;\r\n        return ret;\r\n    }\r\n\r\n    async cUqFrom():Promise<CUq> {\r\n        return await this.entity.cUqFrom();\r\n    }\r\n    async cEditFrom(): Promise<CTuidEdit> {\r\n        let cUq = await this.entity.cUqFrom();\r\n        return await cUq.cTuidEditFromName(this.entity.name);\r\n    }\r\n    async cInfoFrom(): Promise<CTuidInfo> {\r\n        let cUq = await this.entity.cUqFrom();\r\n        return await cUq.cTuidInfoFromName(this.entity.name);\r\n    }\r\n    async cSelectFrom(): Promise<CTuidSelect> {\r\n        let cUq = await this.entity.cUqFrom();\r\n        return await cUq.cTuidSelectFromName(this.entity.name);\r\n    }\r\n\r\n    getLable(tuid:Tuid):string {\r\n        if (tuid === this.entity) return this.label;\r\n        let {name} = tuid;\r\n        let {arrs} = this.res;\r\n        if (arrs !== undefined) {\r\n            let arr = arrs[name];\r\n            if (arr !== undefined) {\r\n                let label = arr.label;\r\n                if (label !== undefined) return label;\r\n            }\r\n        }\r\n        return name;\r\n    }\r\n\r\n    proxies: {[name:string]: TuidMain};\r\n    proxyLinks: CLink[];\r\n    isFrom: boolean;\r\n\r\n    protected get VTuidMain():typeof VTuidMain {return VTuidMain}\r\n    protected get VTuidEdit():typeof VTuidEdit {return VTuidEdit}\r\n    protected get VTuidList():typeof VTuidMainList {return VTuidMainList}\r\n\r\n    protected async internalStart(param?:any):Promise<void> {\r\n        this.isFrom = this.entity.schemaFrom !== undefined;\r\n        await this.openVPage(this.VTuidMain);\r\n    }\r\n\r\n    protected async onEvent(type:string, value:any) {\r\n        let v: TypeVPage<CTuidMain>;\r\n        switch (type) {\r\n            default: return;\r\n            case 'new': v = this.VTuidEdit; break;\r\n            case 'list': v = this.VTuidList; break;\r\n            case 'edit': await this.edit(value); return;\r\n            case 'item-changed': this.itemChanged(value); return;\r\n            case 'info': \r\n                let cTuidInfo = new CTuidInfo(this.cUq, this.entity, this.ui, this.res);\r\n                await cTuidInfo.start(value);\r\n                return;\r\n        }\r\n        await this.openVPage(v, value);\r\n    }\r\n\r\n    protected async edit(id:number) {\r\n        let values:any = undefined;\r\n        if (id !== undefined) {\r\n            values = await this.entity.load(id);\r\n        }\r\n        let v = this.VTuidEdit;\r\n        await this.openVPage(v, values);\r\n    }\r\n\r\n    private itemChanged({id, values}:{id:number, values: any}) {\r\n        if (this.PageItems === undefined) return;\r\n        let items = this.PageItems.items;\r\n        let item = items.find(v => v.id === id);\r\n        if (item !== undefined) {\r\n            _.merge(item, values);\r\n        }\r\n    }\r\n}\r\n\r\nexport class CTuidEdit extends CTuidMain {\r\n    protected async internalStart(id:number):Promise<void> {\r\n        await this.edit(id);\r\n    }\r\n}\r\n\r\nexport class CTuidList extends CTuidMain {\r\n    protected async internalStart(id:number):Promise<void> {\r\n        await this.openVPage(this.VTuidList);\r\n    }\r\n}\r\n\r\nexport class CTuidDiv extends CTuid<TuidDiv> {\r\n    protected async internalStart():Promise<void> {\r\n        alert('tuid div: ' + this.entity.name);\r\n    }\r\n}\r\n\r\nexport class CTuidSelect extends CTuid<Tuid> {\r\n    protected async internalStart(param?: any):Promise<void> {\r\n        await this.openVPage(this.VTuidSelect, param);\r\n    }\r\n    protected async beforeStart():Promise<boolean> {\r\n        //if (await super.beforeStart() === false) return false;\r\n        await this.entity.loadSchema();\r\n        if (this.PageItems !== undefined) this.PageItems.reset();\r\n        return true;\r\n    }\r\n    protected get VTuidSelect():typeof VTuidSelect {return VTuidSelect}\r\n    idFromItem(item:any) {\r\n        return item.id;\r\n    }\r\n}\r\n\r\nexport class CTuidInfo extends CTuid<Tuid> {\r\n    protected async internalStart(id: any):Promise<void> {\r\n        let data = await this.entity.load(id)\r\n        await this.openVPage(this.VTuidInfo, data);\r\n    }\r\n    protected get VTuidInfo():typeof VTuidInfo {return VTuidInfo}\r\n}\r\n","export * from './cTuid';\r\nexport * from './vTuidMain';\r\nexport * from './vTuidEdit';\r\nexport * from './vTuidInfo';\r\nexport * from './vTuidView';\r\n","import jwtDecode from 'jwt-decode';\r\n\r\nexport interface Unit {\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\nexport interface Guest {\r\n    id: number;             // id = 0\r\n    guest: number;\r\n    token: string;\r\n}\r\n\r\nexport interface User extends Guest {\r\n    id: number;\r\n    name: string;\r\n    nick?: string;\r\n    icon?: string;\r\n}\r\n\r\nexport class UserInNav {\r\n    private user: User;\r\n    constructor(user: User) {\r\n        this.user = user;\r\n    }\r\n    get id():number {return this.user.id}\r\n    get name(): string {return this.user.name}\r\n    get nick(): string {return this.user.nick}\r\n    get icon(): string {return this.user.icon || ('http://' + process.env['REACT_APP_CENTER_HOST'] + '/imgs/Bear-icon.png');}\r\n    get guest(): number {return this.user.guest}\r\n    get token(): string {return this.user.token}\r\n}\r\n\r\nexport function decodeUserToken(token: string): User {\r\n    let ret:any = jwtDecode(token);\r\n    let user: User = {\r\n        id: ret.id,\r\n        name: ret.name,\r\n        guest: ret.guest,\r\n        token: token,\r\n    };\r\n    return user;\r\n}\r\n\r\nexport function decodeGuestToken(token: string): Guest {\r\n    let ret:any = jwtDecode(token);\r\n    let guest: Guest = {\r\n        id: 0,\r\n        guest: ret.guest,\r\n        token: token,\r\n    };\r\n    return guest;\r\n}\r\n","import * as React from 'react';\r\nimport { VField } from './vField';\r\nimport { VArr } from './vArr';\r\nimport { VSubmit } from './vSubmit';\r\nimport { uid } from 'tonva-react-form';\r\n\r\nexport abstract class VBand {\r\n    protected label: string;\r\n    protected view = () => <div />;\r\n\r\n    constructor(label:string) {\r\n        this.label = label;\r\n    }\r\n\r\n    render():JSX.Element {\r\n        //text-sm-right\r\n        return <div key={this.key} className=\"px-3\">\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-sm-2 col-form-label\">\r\n                    {this.label}\r\n                </label>\r\n                <div className=\"col-sm-10\">\r\n                    {this.renderContent()}\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    setAddRow(addRow:()=>Promise<void>) {}\r\n    get key() {return this.label}\r\n    public getVFields():VField[] {return;}\r\n    public getVArr():VArr {return;}\r\n    public getVSubmit():VSubmit {return;}\r\n\r\n    protected renderContent():JSX.Element {\r\n        return <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">content</div>;\r\n    }\r\n}\r\n\r\nexport interface FieldRes {\r\n    label: string;\r\n    placeHolder: string;\r\n    suffix: string;\r\n}\r\nexport class VFieldBand extends VBand {\r\n    protected vField:VField;\r\n    constructor(label:string, vField:VField) {\r\n        super(label);\r\n        this.vField = vField;\r\n    }\r\n\r\n    get key() {return this.vField.name}\r\n    public getVFields():VField[] {return [this.vField];}\r\n\r\n    protected renderContent():JSX.Element {\r\n        return this.vField.render();\r\n        /*\r\n        <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">\r\n            {this.vField.render()}\r\n        </div>;*/\r\n    }\r\n}\r\n\r\nexport class VArrBand extends VBand {\r\n    protected vArr:VArr;\r\n    constructor(label:string, vArr:VArr) {\r\n        super(label);\r\n        this.vArr = vArr;\r\n    }\r\n\r\n    setAddRow(addRow:()=>Promise<void>) {this.vArr.setAddRow(addRow)}\r\n    get key() {return this.vArr.name}\r\n    public getVArr():VArr {return this.vArr;}\r\n\r\n    render():JSX.Element {\r\n        return <React.Fragment key={this.key}>\r\n            {this.vArr && this.vArr.render()}\r\n        </React.Fragment>;\r\n    }\r\n}\r\n\r\nexport class VFieldsBand extends VBand {\r\n    protected vFields: VField[];\r\n    constructor(label:string, vFields:VField[]) {\r\n        super(label);\r\n        this.vFields = vFields;\r\n    }\r\n\r\n    get key() {return this.vFields[0].name}\r\n    public getVFields():VField[] {return this.vFields;}\r\n\r\n    protected renderContent():JSX.Element {\r\n        return <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">\r\n            fields\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class VSubmitBand extends VBand {\r\n    protected vSubmit: VSubmit;\r\n    constructor(vSubmit:VSubmit) {\r\n        super(undefined);\r\n        this.vSubmit = vSubmit;\r\n    }\r\n\r\n    get key() {return '$submit'}\r\n\r\n    public getVSubmit():VSubmit {return this.vSubmit;}\r\n\r\n    render():JSX.Element {\r\n        return <div key=\"$submit\" className=\"px-3\">\r\n            <div className=\"form-group row\">\r\n                <div className=\"offset-sm-2 col-sm-10\">\r\n                    {this.vSubmit.render()}\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames'\r\nimport { ViewModel } from \"./viewModel\";\r\nimport { VForm } from './vForm';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\n\r\nexport class VSubmit extends ViewModel {\r\n    private vForm: VForm;\r\n    constructor(vForm: VForm) {\r\n        super();\r\n        this.vForm = vForm;\r\n        this.caption = this.vForm.submitCaption;\r\n        this.className = 'btn btn-primary w-25';\r\n    }\r\n    @observable caption: string;\r\n    @observable className: string;\r\n\r\n    private onClickSubmit = async () => {\r\n        this.vForm.submit();\r\n    }\r\n\r\n    protected view = observer(() => {\r\n        let {isOk} = this.vForm;\r\n        return <button type=\"button\" \r\n            onClick={this.onClickSubmit}\r\n            className={this.className}\r\n            disabled={isOk === false}>\r\n            {this.caption}\r\n        </button>;\r\n    });\r\n}","\r\nexport abstract class Rule {\r\n    abstract check(defy:string[], value:any);\r\n}\r\n\r\nexport class RuleRequired extends Rule {\r\n    check(defy:string[], value:any) {\r\n        switch (typeof value) {\r\n            default:\r\n            case 'boolean': return;\r\n            case 'object':\r\n                if (value !== null) return;\r\n                break;\r\n            case 'string':\r\n                if ((value as string).trim().length > 0) return;\r\n                break;\r\n            case 'number':\r\n                if ((value as number) !== NaN) return;\r\n                break;\r\n            case 'undefined':\r\n                break;\r\n        }\r\n        defy.push('不能为空');\r\n    }\r\n}\r\n\r\nexport class RuleNum extends Rule {\r\n    check(defy:string[], value:any) {\r\n        if (value === undefined || value === null) return;\r\n        let n = Number(value);\r\n        if (n === NaN) defy.push('必须是数字');\r\n    }\r\n}\r\n\r\nexport class RuleInt extends Rule {\r\n    check(defy:string[], value:any) {\r\n        if (value === undefined || value === null) return;\r\n        let n = Number(value);\r\n        if (Number.isNaN(n) === true || Number.isInteger(n) === false) {\r\n            defy.push('必须是整数');\r\n        }\r\n    }\r\n}\r\n\r\nexport class RuleMin extends RuleNum {\r\n    constructor(min: number) {\r\n        super();\r\n        this.min = min;\r\n    }\r\n    min: number;\r\n    check(defy:string[], value:any) {\r\n        super.check(defy, value);\r\n        if (Number(value) < this.min) defy.push('不能小于' + this.min);\r\n    }\r\n}\r\n\r\nexport class RuleMax extends RuleNum {\r\n    constructor(max: number) {\r\n        super();\r\n        this.max = max;\r\n    }\r\n    max: number;\r\n    check(defy:string[], value:any) {\r\n        super.check(defy, value);\r\n        if (Number(value) > this.max) defy.push('不能小于' + this.max);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { computed, action } from 'mobx';\r\nimport classNames from 'classnames';\r\nimport { observer } from 'mobx-react';\r\nimport { FA } from 'tonva-react-form';\r\nimport { ViewModel } from \"../viewModel\";\r\nimport { VForm, FormMode } from '../vForm';\r\nimport { Rule, RuleRequired, RuleInt, RuleNum, RuleMin, RuleMax } from '../rule';\r\nimport { Field } from '../../../entities';\r\nimport { FieldRes } from '../vBand';\r\nimport { FieldUI, FieldInputUI, FieldStringUI, FieldNumberUI } from '../../formUI';\r\n\r\nexport abstract class VField extends ViewModel {\r\n    protected form: VForm;\r\n    protected fieldUI: FieldUI;\r\n    protected fieldRes:FieldRes;\r\n    protected field: Field;\r\n    protected rules: Rule[];\r\n    constructor(form:VForm, field:Field, fieldUI: FieldUI, fieldRes:FieldRes) {\r\n        super();\r\n        this.form = form;\r\n        this.field = field;\r\n        this.name = field.name;\r\n        this.fieldUI = fieldUI || {} as any;\r\n        this.fieldRes = fieldRes || {} as any;\r\n        this.init();\r\n    }\r\n\r\n    name: string;\r\n\r\n    protected init() {\r\n        this.buildRules();\r\n    }\r\n\r\n    protected buildRules() {\r\n        this.rules = [];\r\n        let {required} = this.fieldUI;\r\n        if (required === true || this.field !== undefined && this.field.null === false) {\r\n            this.rules.push(new RuleRequired);\r\n        }\r\n    }\r\n\r\n    @computed get checkRules(): string[] {\r\n        let defy = [];\r\n        for (let r of this.rules) r.check(defy, this.value);\r\n        return defy;\r\n    }\r\n\r\n    @computed get isOk() {\r\n        if (this.rules.length === 0) return true;\r\n        let defy = this.checkRules;\r\n        return defy.length === 0;\r\n    }\r\n\r\n    @computed get value() { return this.form.values[this.name]; }\r\n    setValue(v:any) {\r\n        this.form.values[this.name]=v; \r\n    }\r\n    get error() { return this.form.errors[this.name]; }\r\n    set error(err:any) { this.form.errors[this.name]=err; }\r\n    protected parse(str:string):any {return str;}\r\n    get readonly():boolean {\r\n        let {mode} = this.form;\r\n        return mode === FormMode.readonly || \r\n            mode === FormMode.edit && this.fieldUI.editable === false;\r\n    }\r\n}\r\n\r\nexport class VUnknownField extends VField {\r\n    protected view = () => {\r\n        //let {name, type} = this.fieldUI;\r\n        let type='', name = '';\r\n        return <input type=\"text\" className=\"form-control form-control-plaintext border border-info rounded bg-light\"\r\n            placeholder={'unkown control: ' + type + '-' + name} />;\r\n    }\r\n}\r\n\r\nexport abstract class VInputControl extends VField {\r\n    protected fieldUI: FieldInputUI;\r\n    protected input: HTMLInputElement;\r\n\r\n    protected inputType:string;\r\n    protected get maxLength():number {return}\r\n\r\n    protected renderError = (className:string) => {\r\n        let {errors} = this.form;\r\n        let error = errors[this.name];\r\n        if (error === undefined) return;\r\n        return <div className={className}><FA name=\"exclamation-circle\" /> {error}</div>\r\n    }\r\n\r\n    /*\r\n    get value() {\r\n        return super.value;\r\n    }*/\r\n    setValue(v:any) {\r\n        super.setValue(v); this.setInputValue(); \r\n    }\r\n\r\n    protected ref = (input:HTMLInputElement) => {\r\n        this.input = input;\r\n        this.setInputValue();\r\n    }\r\n\r\n    protected setInputValue() {\r\n        if (!this.input) return;\r\n        let v = this.value;\r\n        this.input.value = v === null || v === undefined? '' : v;\r\n    }\r\n\r\n    protected onFocus = () => {\r\n        this.error = undefined;\r\n    }\r\n\r\n    protected onBlur = () => {\r\n        let defy = this.checkRules;\r\n        if (defy.length > 0) {\r\n            this.error = defy[0];\r\n        }\r\n        this.form.computeFields();\r\n    }\r\n\r\n    protected onChange = (evt: React.ChangeEvent<any>) => {\r\n        let v = this.parse(evt.currentTarget.value);\r\n        if (v === null) {\r\n            return;\r\n        }\r\n        this.setValue(v);\r\n    }\r\n\r\n    protected onKeyPress: (event:React.KeyboardEvent<HTMLInputElement>) => void;\r\n    \r\n    protected view = observer(() => {\r\n        let {required} = this.fieldUI;\r\n        let {placeHolder, suffix} = this.fieldRes;\r\n        let ctrlCN = ['form-control', 'form-control-input'];\r\n        let errCN = 'text-danger small mt-1 mx-2';\r\n    \r\n        let redDot;\r\n        let input;\r\n        if (this.readonly === true) {\r\n            input = <input className={classNames(ctrlCN, 'bg-light')}\r\n                ref={this.ref}\r\n                type={this.inputType}\r\n                readOnly={true}\r\n            />;\r\n        }\r\n        else {\r\n            input = <input className={classNames(ctrlCN)}\r\n                ref={this.ref}\r\n                type={this.inputType}\r\n                onFocus={this.onFocus}\r\n                onBlur={this.onBlur}\r\n                onChange={this.onChange}\r\n                placeholder={placeHolder}\r\n                readOnly={false}\r\n                maxLength={this.maxLength}\r\n                onKeyPress={this.onKeyPress}\r\n            />;\r\n            if (required === true || this.field.null === false) {\r\n                redDot = <RedMark />;\r\n            }\r\n        }\r\n\r\n        let inputGroup;\r\n        if (suffix === undefined)\r\n            inputGroup = input;\r\n        else\r\n            inputGroup = <div className=\"input-group\">\r\n                {input}\r\n                <div className=\"input-group-append\">\r\n                    <span className=\"input-group-text\">{suffix}</span>\r\n                </div>\r\n            </div>;\r\n\r\n        return <>\r\n            {redDot}\r\n            {inputGroup}\r\n            {this.renderError(errCN)}\r\n        </>\r\n    });\r\n}\r\n\r\nexport const RedMark = () => <b style={{color:'red', position:'absolute', left:'0.1em', top:'0.5em'}}>*</b>;\r\n\r\nexport class VStringField extends VInputControl {\r\n    protected fieldUI: FieldStringUI;\r\n    protected inputType:string = 'text';\r\n    protected get maxLength():number {return this.field.size}\r\n}\r\n\r\nconst KeyCode_Neg = 45;\r\nconst KeyCode_Dot = 46;\r\n\r\nexport abstract class VNumberControl extends VInputControl {\r\n    protected fieldUI: FieldNumberUI;\r\n    protected extraChars: number[];\r\n\r\n    protected init() {\r\n        super.init();\r\n        this.extraChars = [];\r\n        if (this.fieldUI !== undefined) {\r\n            let {min, max} = this.fieldUI;\r\n            if (min !== undefined) {\r\n                //this.rules.push((v:number) => {if (v === undefined) return; if (v<min) return ErrMin + min; return true;});\r\n                if (min < 0) this.extraChars.push(KeyCode_Neg);\r\n            }\r\n            else {\r\n                this.extraChars.push(KeyCode_Neg);\r\n            }\r\n    \r\n            if (max !== undefined) {\r\n                //this.rules.push((v:number) => {if (v === undefined) return; if (v>max) return ErrMax + max; return true});\r\n            }\r\n        }\r\n        switch (this.field.type) {\r\n            case 'dec':\r\n            case 'bigint':\r\n            case 'int':\r\n            case 'smallint':\r\n            case 'tinyint':\r\n                this.extraChars.push(KeyCode_Dot); break;\r\n        }\r\n    }\r\n\r\n    protected buildRules() {\r\n        super.buildRules();\r\n        this.rules.push(new RuleNum);\r\n        let {min, max} = this.fieldUI;\r\n        if (min !== undefined) this.rules.push(new RuleMin(min));\r\n        if (max !== undefined) this.rules.push(new RuleMax(max));\r\n    }\r\n\r\n    inputType:string = 'number';\r\n\r\n    protected parse(text:string):any {\r\n        try {\r\n            if (text.trim().length === 0) return undefined;\r\n            let ret = Number(text);\r\n            return (ret === NaN)? null : ret;\r\n        }\r\n        catch {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    protected setInputValue() {\r\n        if (!this.input) return;\r\n        let v = this.value;\r\n        if (this.parse(this.input.value) == v) return;\r\n        this.input.value = v === null || v === undefined? '' : v;\r\n    }\r\n\r\n    protected onKeyPress = (event:React.KeyboardEvent<HTMLInputElement>) => {\r\n        let ch = event.charCode;\r\n        if (ch === 8 || ch === 0 || ch === 13 || ch >= 48 && ch <= 57) return;\r\n        if (this.extraChars !== undefined) {\r\n            if (this.extraChars.indexOf(ch) >= 0) {\r\n                switch (ch) {\r\n                    case KeyCode_Dot: this.onKeyDot(); break;\r\n                    case KeyCode_Neg: this.onKeyNeg(); event.preventDefault(); break;\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    private onKeyDot() {\r\n        let v = this.input.value;\r\n        let p = v.indexOf('.');\r\n        if (p >= 0) this.input.value = v.replace('.', '');\r\n    }\r\n    private onKeyNeg() {\r\n        let v = this.input.value;\r\n        let p = v.indexOf('-');\r\n        if (p >= 0) v = v.replace('-', '');\r\n        else v = '-'+v;\r\n        this.input.value = v;\r\n    }\r\n}\r\n\r\nexport class VIntField extends VNumberControl {\r\n    protected buildRules() {\r\n        super.buildRules();\r\n        this.rules.push(new RuleInt);\r\n    }\r\n}\r\n\r\nexport class VDecField extends VNumberControl {\r\n}\r\n\r\nexport class VTextField extends VStringField {\r\n\r\n}\r\n\r\nexport class VDateTimeField extends VStringField {\r\n\r\n}\r\n","import React from 'react';\r\nimport { VField } from './vField';\r\nimport { Field } from '../../../entities';\r\nimport { VForm } from '../vForm';\r\nimport { observer } from 'mobx-react';\r\nimport { FieldRes } from '../vBand';\r\n\r\nexport class VComputeField extends VField {\r\n    constructor(form:VForm, field: Field, fieldRes: FieldRes) {\r\n        super(form, field, undefined, fieldRes);\r\n    }\r\n    protected view = observer(() => {\r\n        let value = this.form.values[this.field.name];\r\n        let {placeHolder, suffix} = this.fieldRes;\r\n        let ctrlCN = 'form-control form-control-input bg-light';\r\n        if (value === null) value = '';\r\n        let input = <input className={ctrlCN}\r\n            type=\"text\"\r\n            placeholder={placeHolder}\r\n            readOnly={true}\r\n            value={value}/>\r\n        let inputGroup;\r\n        if (suffix === undefined)\r\n            inputGroup = input;\r\n        else\r\n            inputGroup = <div className=\"input-group\">\r\n                {input}\r\n                <div className=\"input-group-append\">\r\n                    <span className=\"input-group-text\">{suffix}</span>\r\n                </div>\r\n            </div>;\r\n        return inputGroup;\r\n        /*\r\n            return <div \r\n            className=\"form-control form-control-plaintext border border-info rounded bg-light cursor-pointer\">\r\n            {value} &nbsp;\r\n        </div>;\r\n        */\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { IObservableArray, observable } from 'mobx';\r\nimport _ from 'lodash';\r\nimport { List, FA, Muted } from 'tonva-react-form';\r\nimport { Page, nav } from 'tonva-tools';\r\nimport { ViewModel, RowContent, TypeContent, JSONContent } from './viewModel';\r\nimport { ArrFields, Field } from '../../entities';\r\nimport { VForm, FieldInputs, FormMode } from './vForm';\r\nimport { FormArr } from '../formUI';\r\n\r\nexport type ArrEditRow = (initValues:any, onRowChanged:(rowValues:any)=>void) => Promise<void>;\r\n\r\nexport class VArr extends ViewModel {\r\n    protected mode: FormMode;\r\n    protected label: any;\r\n    protected header: any;\r\n    protected footer: any;\r\n    protected rowValues: any;                 // 仅仅用来判断是不是新增，undefined则是新增\r\n    protected onEditRow: ArrEditRow;\r\n    protected ownerForm:VForm;\r\n    protected vForm:VForm;\r\n    protected rowContent:TypeContent;\r\n    protected none: string;\r\n    protected newSubmitCaption: string;\r\n    protected editSubmitCaption: string;\r\n    protected addRow: ()=>Promise<void>;\r\n\r\n    name:string;\r\n    list: IObservableArray<any>;\r\n\r\n    constructor(ownerForm:VForm, arr:ArrFields, onEditRow?:ArrEditRow) {\r\n        super();\r\n        this.ownerForm = ownerForm;\r\n        let {name, fields} = arr;\r\n        this.name = name;\r\n        let {ui, res, mode, inputs, values} = ownerForm;\r\n        let arrsRes = res.arrs;\r\n        let arrRes = arrsRes !== undefined? arrsRes[name] : {};\r\n        let {label, none, newSubmit, editSubmit} = arrRes;\r\n        this.none = none || ownerForm.none;\r\n        this.newSubmitCaption = newSubmit || ownerForm.arrNewCaption;\r\n        this.editSubmitCaption = editSubmit || ownerForm.arrEditCaption;\r\n        this.label = label || name;\r\n        let arrUI = ((ui && ui.items[name]) || {}) as FormArr;\r\n        this.rowContent = arrUI.rowContent;// || JSONContent;\r\n        this.mode = mode;\r\n        if (this.onEditRow === undefined) {\r\n            this.vForm = new VForm({\r\n                fields: fields,\r\n                arrs: undefined,\r\n                ui: arrUI,\r\n                res: arrRes,\r\n                inputs: inputs[name] as FieldInputs,\r\n                none: ownerForm.none,\r\n                submitCaption: 'submit',\r\n                arrNewCaption: undefined,\r\n                arrEditCaption: undefined,\r\n                arrTitleNewButton: undefined,\r\n                mode: mode,\r\n            }, \r\n            mode===FormMode.readonly? undefined: this.onSubmit);\r\n        }\r\n        else {\r\n            this.onEditRow = onEditRow;\r\n        }\r\n        this.list = values[name];\r\n    }\r\n\r\n    reset() {\r\n        this.vForm.reset();\r\n        this.list.clear();\r\n    }\r\n\r\n    setAddRow(addRow:()=>Promise<void>) {\r\n        this.addRow = addRow;\r\n    }\r\n\r\n    protected rowPage = () => {\r\n        return <Page header={this.label} back=\"close\">\r\n            {this.vForm.render('py-3')}\r\n        </Page>\r\n    }\r\n    private onSubmit = async () => {\r\n        let {valueBoxs} = this.vForm;\r\n        await this.onRowChanged(valueBoxs);\r\n    }\r\n\r\n    private onRowChanged = async (rowValues:any) => {\r\n        if (this.rowValues === undefined) {\r\n            rowValues.$owner = this.ownerForm.values;\r\n            this.list.push(rowValues);\r\n            if (this.onEditRow === undefined)\r\n                this.vForm.reset();\r\n            else\r\n                await this.onEditRow(undefined, this.onRowChanged);\r\n        }\r\n        else {\r\n            _.merge(this.rowValues, rowValues);\r\n            if (this.onEditRow === undefined) nav.pop();\r\n        }\r\n    }\r\n\r\n    private renderItem = (item:any, index:number) => {\r\n        if (this.rowContent === undefined)\r\n            return <div className=\"px-3 py-2\"><JSONContent {...item} /></div>\r\n        return <this.rowContent {...item} />;\r\n    }\r\n    private showRow = async (rowValues:any):Promise<any> => {\r\n        if (this.onEditRow !== undefined) {\r\n            await this.onEditRow(rowValues, this.onRowChanged);\r\n            return;\r\n        }\r\n        this.vForm.reset();\r\n        if (rowValues !== undefined) this.vForm.setValues(rowValues);\r\n        nav.push(<this.rowPage />);\r\n    }\r\n    private editRow = async (rowValues:any): Promise<void> => {\r\n        this.rowValues = rowValues;\r\n        let {vSubmit} = this.vForm;\r\n        if (vSubmit !== undefined) {\r\n            vSubmit.caption = this.editSubmitCaption;\r\n            vSubmit.className = 'btn btn-outline-success';\r\n        }\r\n        this.vForm.mode = this.ownerForm.mode;\r\n        await this.showRow(rowValues);\r\n    }\r\n    private internalAddRow = async () => {\r\n        this.rowValues = undefined;\r\n        let {vSubmit} = this.vForm;\r\n        vSubmit.caption = this.newSubmitCaption;\r\n        vSubmit.className = 'btn btn-outline-success';\r\n        this.vForm.reset();\r\n        this.vForm.mode = FormMode.new;\r\n        await this.showRow(undefined);\r\n    }\r\n\r\n    protected view = () => {\r\n        let button;\r\n        if (this.addRow !== undefined || this.mode !== FormMode.readonly) {\r\n            button = <button onClick={this.addRow || this.internalAddRow}\r\n                type=\"button\" \r\n                className=\"btn btn-link p-0\">\r\n                {this.ownerForm.arrTitleNewButton}\r\n            </button>;\r\n        }\r\n        let header = this.header || <div className=\"px-3 bg-light small\" style={{paddingTop:'1px', paddingBottom:'1px'}}>\r\n            <div className=\"flex-fill align-self-center\">{this.label}</div>\r\n            {button}\r\n        </div>;\r\n        return <List className=\"pb-3\"\r\n            header={header}\r\n            none={<Muted className=\"px-3 py-2\">{this.none}</Muted>}\r\n            items={this.list}\r\n            item={{render: this.renderItem, onClick: this.editRow}} />;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { tv } from '../../../tools';\r\nimport { Field, Tuid } from '../../../entities';\r\nimport { VField, RedMark } from \"./vField\";\r\nimport { FieldUI } from '../../formUI';\r\nimport { VForm, FieldInput, FormMode } from '../vForm';\r\nimport { FieldRes } from '../vBand';\r\n\r\nconst buttonStyle:React.CSSProperties = {\r\n    textAlign:'left', \r\n    paddingLeft:'0.75rem', \r\n    paddingRight:'0.75rem', \r\n    overflow: 'hidden'\r\n};\r\n\r\nexport class VTuidField extends VField {\r\n    protected vForm: VForm;\r\n    protected input: FieldInput;\r\n    protected tuid: Tuid;\r\n\r\n    constructor(vForm: VForm, field:Field, fieldUI: FieldUI, fieldRes:FieldRes) {\r\n        super(vForm, field, fieldUI, fieldRes);\r\n        this.tuid = field._tuid;\r\n        this.vForm = vForm;\r\n        this.input = vForm.inputs[field.name] as FieldInput;\r\n    }\r\n\r\n    onClick = async () => {\r\n        if (this.readonly === true) {\r\n            if (!this.value) return;\r\n            await this.tuid.showInfo(this.value.id);\r\n            return;\r\n        }\r\n        let id:number;\r\n        if (this.input !== undefined) {\r\n            id = await this.input.select(this.vForm, this.field, this.vForm.getValues());\r\n        }\r\n        else {\r\n            alert('call undefined');\r\n            id = 0;\r\n        }\r\n        this.setValue(this.tuid.boxId(id));\r\n    }\r\n    protected view = observer(() => {\r\n        let {placeHolder} = this.fieldRes;\r\n        let disabled:boolean = false;\r\n        let {_ownerField} = this.field;\r\n        if (_ownerField !== undefined) {\r\n            let {name, arr} = _ownerField;\r\n            disabled = this.vForm.getValue(name) === null;\r\n        }\r\n        let content;\r\n        if (this.value === null)\r\n            content = <>{placeHolder || this.input.placeHolder}</>;\r\n        else if (typeof this.value === 'object') {\r\n            content = tv(this.value);\r\n        }\r\n        else {\r\n            let idBox = this.tuid.boxId(this.value);\r\n            content = tv(idBox); // idBox.content();\r\n        }\r\n        if (this.readonly === true)\r\n        {\r\n            return <div \r\n                className=\"form-control form-control-plaintext border border-info rounded bg-light cursor-pointer\"\r\n                onClick={this.onClick}>\r\n                {content}\r\n            </div>;\r\n        }\r\n        let redDot;\r\n        let {required} = this.fieldUI;\r\n        if (required === true || this.field.null === false) {\r\n            redDot = <RedMark />;\r\n        }\r\n        return <>\r\n            {redDot}\r\n            <button className=\"form-control btn btn-outline-info\"\r\n                type=\"button\"\r\n                disabled={disabled}\r\n                style={buttonStyle}\r\n                onClick={this.onClick}>\r\n                {content}\r\n            </button>\r\n        </>;\r\n    })\r\n}\r\n","import { VBand, VFieldBand, VArrBand, VFieldsBand, VSubmitBand, FieldRes } from \"./vBand\";\r\nimport { Field, ArrFields } from \"../../entities\";\r\nimport { VForm, FormOptions } from \"./vForm\";\r\nimport { FormItems, FieldUI, FormItem } from \"../formUI\";\r\nimport { VSubmit } from \"./vSubmit\";\r\nimport { VField, buildVField, VComputeField } from \"./vField\";\r\nimport { VArr } from \"./vArr\";\r\nimport { VTuidField } from \"./vField/vTuidField\";\r\n\r\nexport class BandsBuilder {\r\n    private vForm: VForm;\r\n    private onSubmit: (values:any)=>Promise<void>;\r\n    private fields: Field[];\r\n    private arrs: ArrFields[];\r\n    private formItems: FormItems;\r\n    private layout: string[];\r\n    private res: any;\r\n    constructor(vForm:VForm, options: FormOptions, onSubmit: (values:any)=>Promise<void>) {\r\n        this.vForm = vForm;\r\n        this.onSubmit = onSubmit;\r\n        let {fields, arrs, ui, res} = options;\r\n        this.fields = fields;\r\n        this.arrs = arrs;\r\n        if (ui !== undefined) {\r\n            let {items, layout} = ui;\r\n            this.formItems = items;\r\n            this.layout = layout;\r\n        }\r\n        this.res = res;\r\n    }\r\n\r\n    build():VBand[] {\r\n        //return this.bandUIs === undefined? this.bandsOnFly() : this.bandsFromUI();\r\n        return this.layout === undefined? this.bandsOnFly() : this.bandsFromLayout();\r\n    }\r\n\r\n    private resFromName(name:string, res:any):string|FieldRes {\r\n        if (res === undefined) return;\r\n        let {fields} = res;\r\n        if (fields === undefined) return;\r\n        return fields[name] || name;\r\n    }\r\n\r\n    private bandsOnFly():VBand[] {\r\n        let bands:VBand[] = [];\r\n        this.bandsFromFields(bands, this.fields, this.res);\r\n        if (this.arrs !== undefined) {\r\n            for (let arr of this.arrs) bands.push(this.bandFromArr(arr));\r\n        }\r\n        if (this.onSubmit !== undefined) {\r\n            bands.push(new VSubmitBand(new VSubmit(this.vForm)));\r\n        }\r\n        return bands;\r\n    }\r\n\r\n    private bandsFromFields(bands:VBand[], fields:Field[], res:any) {\r\n        if (fields === undefined) return;\r\n        for (let field of fields) bands.push(this.bandFromField(field, res));\r\n    }\r\n\r\n    private bandsFromLayout():VBand[] {\r\n        let bands:VBand[] = [];\r\n        /*\r\n        for (let bandUI of this.bandUIs)  {\r\n            let band = this.bandFromUI(bandUI);\r\n            bands.push(band);\r\n        }\r\n        */\r\n        return bands;\r\n    }\r\n\r\n    /*\r\n    private bandFromUI(bandUI:BandUI):VBand {\r\n        let {band} = bandUI;\r\n        switch (band) {\r\n            default: return this.bandFromFieldUI(bandUI as FieldBandUI);\r\n            case 'arr': return this.bandFromArrUI(bandUI as ArrBandUI);\r\n            case 'fields': return this.bandFromFieldsUI(bandUI as FieldsBandUI);\r\n            case 'submit': return this.bandFromSubmitUI(bandUI as SubmitBandUI);\r\n        }\r\n    }\r\n    \r\n    private bandFromFieldUI(bandUI: FieldBandUI): VFieldBand {\r\n        let {label} = bandUI;\r\n        let vField = this.vFieldFromUI(bandUI);\r\n        return new VFieldBand(label, vField);\r\n    }\r\n    private bandFromArrUI(bandUI: ArrBandUI): VArrBand {\r\n        let {label, name} = bandUI;\r\n        let vArr = this.vArrFromUI(bandUI);\r\n        return new VArrBand(label, vArr);\r\n    }\r\n    private bandFromFieldsUI(bandUI: FieldsBandUI): VFieldsBand {\r\n        let {label, fieldUIs} = bandUI;\r\n        let vFields = fieldUIs.map(v => this.vFieldFromUI(v));\r\n        return new VFieldsBand(label, vFields);\r\n    }\r\n    private bandFromSubmitUI(bandUI: SubmitBandUI): VSubmitBand {\r\n        if (this.onSubmit === undefined) return;\r\n        let vSubmit = new VSubmit(this.vForm);\r\n        return new VSubmitBand(vSubmit);\r\n    }\r\n    */\r\n/*\r\n    private vFieldFromField(field:Field, fieldRes:FieldRes, formItem: FormItem): VField {\r\n        let fieldUI:FieldUI = undefined;\r\n        if (formItem !== undefined) {\r\n            if (typeof formItem === 'function') {\r\n                return new VComputeField(this.vForm, field, fieldRes);\r\n            }\r\n        }\r\n        let ret = buildVField(this.vForm, field, formItem, fieldRes);\r\n        if (ret !== undefined) return ret;\r\n        return new VTuidField(field, fieldUI, fieldRes, this.vForm);\r\n    }\r\n*/\r\n    private bandFromField(field:Field, res:any):VBand {\r\n        let {name} = field;\r\n        let fieldRes:FieldRes;\r\n        let rfn = this.resFromName(name, res);\r\n        let label:string;\r\n        if (typeof rfn === 'object') {\r\n            label = rfn.label;\r\n            fieldRes = rfn;\r\n        }\r\n        else {\r\n            label = rfn as string;\r\n            fieldRes = undefined;\r\n        }\r\n        let vField:VField;\r\n        let formItem:FormItem;\r\n        if (this.formItems !== undefined) formItem = this.formItems[name];\r\n        //let vField = this.vFieldFromField(field, fieldRes as FieldRes, formItem);\r\n        //let fieldUI:FieldUI = undefined;\r\n        if (typeof formItem === 'function') {\r\n            vField = new VComputeField(this.vForm, field, fieldRes);\r\n        }\r\n        else {\r\n            vField = buildVField(this.vForm, field, formItem as FieldUI, fieldRes);\r\n        }\r\n        if (vField === undefined) {\r\n            vField = new VTuidField(this.vForm, field, formItem as FieldUI, fieldRes);\r\n        }\r\n        return new VFieldBand(label || name, vField);\r\n    }\r\n\r\n    private bandFromArr(arr: ArrFields):VBand {\r\n        let {name, fields} = arr;\r\n        //let row = JSONContent;\r\n        //let bands:VBand[] = [];\r\n        //this.bandsFromFields(bands, fields, res);\r\n        let vArr = new VArr(this.vForm, arr); // name, res && res.label || name, row, bands);\r\n        return new VArrBand(name, vArr);\r\n    }\r\n\r\n    /*\r\n    private vFieldFromUI(fieldUI:FieldUI):VField {\r\n        return;\r\n    }\r\n\r\n    private vArrFromUI(arrBandUI:ArrBandUI):VArr {\r\n        return;\r\n    }\r\n    */\r\n}\r\n","import { VField, VIntField, VDecField, VStringField, VTextField, VDateTimeField } from './vField';\r\nimport { Field } from '../../../entities';\r\nimport { FieldRes } from '../vBand';\r\nimport { VForm } from '../vForm';\r\nimport { FieldUI } from '../../formUI';\r\n\r\nexport function buildVField(form:VForm, field: Field, fieldUI: FieldUI, fieldRes:FieldRes): VField {\r\n    let vField:new (form:VForm, field:Field, ui:FieldUI, fieldRes:FieldRes) => VField;\r\n    switch (field.type) {\r\n        default: return;\r\n        case 'tinyint':\r\n        case 'smallint':\r\n        case 'int':\r\n            vField = VIntField;\r\n            break;\r\n        case 'bigint':\r\n            let {_tuid} = field;\r\n            if (_tuid !== undefined) return;\r\n            vField = VIntField;\r\n            break;\r\n        case 'dec':\r\n            vField = VDecField;\r\n            break;\r\n        case 'char':\r\n            vField = VStringField;\r\n            break;\r\n        case 'text':\r\n            vField = VTextField;\r\n            break;\r\n        case 'datetime':\r\n            vField = VDateTimeField;\r\n            break;\r\n    }\r\n    return new vField(form, field, fieldUI, fieldRes);\r\n}\r\n\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport { observer } from \"mobx-react\";\r\nimport { VBand } from './vBand';\r\nimport { BandsBuilder } from './bandsBuilder';\r\nimport { Field, ArrFields } from '../../entities';\r\nimport { computed, observable, IObservableObject, IObservableValue } from 'mobx';\r\nimport { VArr } from './vArr';\r\nimport { FormUI, FormUIBase, FormItems } from '../formUI';\r\nimport { VField } from './vField';\r\nimport { VSubmit } from './vSubmit';\r\nimport { IObservableArray } from 'mobx';\r\nimport { FA } from 'tonva-react-form';\r\n\r\nexport type FieldCall = (form:VForm, field:Field, values:any) => Promise<any>;\r\nexport interface FieldInput {\r\n    select: FieldCall;\r\n    content: React.StatelessComponent<any>;\r\n    placeHolder: string;\r\n}\r\nexport interface FieldInputs {\r\n    [fieldOrArr:string]: FieldInput | {[field:string]: FieldInput};\r\n}\r\nexport enum FormMode {new, edit, readonly}\r\n\r\nexport interface FormOptions {\r\n    fields: Field[];\r\n    arrs?: ArrFields[];\r\n    ui: FormUIBase;\r\n    res: any;\r\n    inputs: FieldInputs;\r\n    submitCaption: string;\r\n    arrNewCaption: string;\r\n    arrEditCaption: string;\r\n    arrTitleNewButton: JSX.Element;\r\n    none: string;\r\n    mode: FormMode;\r\n}\r\n\r\nexport class VForm {\r\n    protected fields: Field[];\r\n    protected arrs: ArrFields[];\r\n    protected bands: VBand[];\r\n    protected bandColl: {[key:string]: VBand};\r\n    protected onSubmit: ()=>Promise<void>;\r\n\r\n    constructor(options: FormOptions, onSubmit: ()=>Promise<void>) {\r\n        let {fields, arrs, ui, res, inputs, none, submitCaption, arrNewCaption, arrEditCaption, arrTitleNewButton, mode} = options;\r\n        this.fields = fields;\r\n        this.arrs = arrs;\r\n        this.ui = ui;\r\n        if (this.ui !== undefined) this.formItems = this.ui.items; //.compute = this.ui.compute;\r\n        this.res = res;\r\n        this.inputs = inputs;\r\n        this.none = none;\r\n        this.submitCaption = submitCaption;\r\n        this.arrNewCaption = arrNewCaption;\r\n        this.arrEditCaption = arrEditCaption;\r\n        this.arrTitleNewButton = arrTitleNewButton || <small><FA name=\"plus\" /> 新增</small>;\r\n        if (onSubmit === undefined) this.mode = FormMode.readonly;\r\n        else this.mode = mode;\r\n        this.buildFormValues();\r\n        this.buildBands(options, onSubmit);\r\n        this.onSubmit = onSubmit;\r\n    }\r\n\r\n    ui: FormUI;\r\n    res: any;\r\n    values: any;\r\n    errors: any;\r\n    formItems: FormItems;\r\n    mode: FormMode;\r\n    vFields: {[name:string]:VField} = {};\r\n    vArrs: {[name:string]: VArr} = {};\r\n    vSubmit: VSubmit;\r\n    inputs: FieldInputs;\r\n    none: string;\r\n    submitCaption: string;\r\n    arrNewCaption: string;\r\n    arrEditCaption: string;\r\n    arrTitleNewButton: JSX.Element;\r\n\r\n    private buildBands(options: FormOptions, onSubmit: (values:any)=>Promise<void>) {\r\n        this.bandColl = {};\r\n        let bandsBuilder = new BandsBuilder(this, options, onSubmit);\r\n        this.bands = bandsBuilder.build();\r\n        for (let band of this.bands) {\r\n            this.bandColl[band.key] = band;\r\n            let vFields = band.getVFields();\r\n            if (vFields !== undefined) for (let f of vFields) this.vFields[f.name] = f;\r\n            let vArr = band.getVArr();\r\n            if (vArr !== undefined) this.vArrs[vArr.name] = vArr;\r\n            let vSubmit = band.getVSubmit();\r\n            if (vSubmit !== undefined) this.vSubmit = vSubmit;\r\n        }\r\n    }\r\n\r\n    private onFormSubmit = (event:React.FormEvent<any>) => {\r\n        event.preventDefault();\r\n        return false;\r\n    }\r\n\r\n    protected view = observer(({className}:{className:string}) => {\r\n        return <form className={className} onSubmit={this.onFormSubmit}>\r\n            {this.bands.map(v => v.render())}\r\n        </form>;\r\n    });\r\n\r\n    getBand(name:string) {\r\n        return this.bandColl[name];\r\n    }\r\n\r\n    computeFields() {\r\n        if (this.formItems === undefined) return;\r\n        let values = this.values;\r\n        for (let i in this.formItems) {\r\n            let item = this.formItems[i];\r\n            if (typeof item !== 'function') continue;\r\n            values[i] = item.call(values);\r\n        }\r\n    }\r\n\r\n    async submit() {\r\n        if (this.onSubmit === undefined) return;\r\n        await this.onSubmit();\r\n    }\r\n    \r\n    getValues() {\r\n        let ret:any = {};\r\n        let values = this.values;\r\n        for (let f of this.fields) {\r\n            let {name} = f;\r\n            let v = values[name]\r\n            ret[name] =  v !== null && typeof v === 'object' ? v.id : v;\r\n        }\r\n        if (this.arrs !== undefined) {\r\n            for (let arr of this.arrs) {\r\n                let {name, fields, id, order} = arr;\r\n                let list = ret[name] = [];\r\n                let rows = this.vArrs[name].list;\r\n                for (let row of rows) {\r\n                    let item = {} as any;\r\n                    if (id !== undefined) item[id] = row[id];\r\n                    if (order !== undefined) item[order] = row[order];\r\n                    for (let f of fields) {\r\n                        let {name:fn} = f;\r\n                        let v = row[fn]\r\n                        item[fn] =  v !== null && typeof v === 'object' ? v.id : v;\r\n                    }\r\n                    list.push(item);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    get valueBoxs() {\r\n        let ret:any = {};\r\n        let values = this.values;\r\n        for (let f of this.fields) {\r\n            let {name, _tuid} = f;\r\n            let v = values[name]\r\n            ret[name] =  _tuid === undefined || typeof v === 'object' ? v : _tuid.boxId(v);\r\n        }\r\n        if (this.arrs === undefined) return ret;\r\n        for (let arr of this.arrs) {\r\n            let {name, fields, id, order} = arr;\r\n            let list = ret[name] = this.vArrs[name].list.slice();\r\n            for (let row of list) {\r\n                for (let f of fields) {\r\n                    let {name:fn, _tuid} = f;\r\n                    let v = row[fn]\r\n                    row[fn] =  _tuid === undefined || typeof v === 'object' ? v : _tuid.boxId(v);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    setValues(initValues:any) {\r\n        if (initValues === undefined) {\r\n            this.reset();\r\n            return;\r\n        }\r\n        let values = this.values;\r\n        let errors = this.errors;\r\n        for (let f of this.fields) {\r\n            let fn = f.name;\r\n            errors[fn] = undefined;\r\n            let v =  initValues[fn];\r\n            values[fn] = v;\r\n        }\r\n        // 还要设置arrs的values\r\n        for (let i in this.vArrs) {\r\n            let list = initValues[i];\r\n            if (list === undefined) continue;\r\n            let arrList = values[i] as IObservableArray<any>;\r\n            arrList.clear();\r\n            arrList.push(...list);\r\n        }\r\n    }\r\n\r\n    @computed get isOk():boolean {\r\n        for (let i in this.vFields) {\r\n            if (this.vFields[i].isOk === false) return false;\r\n        }\r\n        return true;\r\n    }\r\n    reset() {\r\n        let values = this.values;\r\n        let errors = this.errors;\r\n        for (let f of this.fields) {\r\n            let fn = f.name;\r\n            //if (this.compute !== undefined && this.compute[fn] !== undefined) continue;\r\n            values[fn] = null;\r\n            errors[fn] = undefined;\r\n        }\r\n        for (let i in this.vFields) {\r\n            let ctrl = this.vFields[i];\r\n            let cn = ctrl.name;\r\n            if (cn === undefined) continue;\r\n            //if (this.compute !== undefined && this.compute[cn] !== undefined) continue;\r\n            ctrl.setValue(null);\r\n        }\r\n        for (let i in this.vArrs) {\r\n            let vArr = this.vArrs[i];\r\n            vArr.reset();\r\n        }\r\n    }\r\n\r\n    getValue(fieldName: string) {\r\n        return this.values[fieldName];\r\n    }\r\n    setValue(fieldName: string, value: any) { this.values[fieldName] = value }\r\n\r\n    setError(fieldName:string, error:string) {this.errors[fieldName] = error}\r\n\r\n    private buildFieldValues(fields: Field[]):any {\r\n        let v: {[p:string]: any} = {\r\n            valueFromFieldName: function(propName:string) {\r\n                return this[propName];\r\n            }\r\n        };\r\n        for (let f of fields) {\r\n            let fn = f.name;\r\n            v[fn] = null;\r\n        }\r\n        return v;\r\n    }\r\n    private buildObservableValues():IObservableObject {\r\n        let v: {[p:string]: any} = this.buildFieldValues(this.fields);\r\n        if (this.arrs !== undefined) {\r\n            for (let arr of this.arrs) {\r\n                v[arr.name] = observable.array([], {deep:true});\r\n            }\r\n        }\r\n        let ret = observable(v);\r\n        return ret;\r\n    }\r\n    private buildFormValues() {\r\n        this.values = this.buildObservableValues();\r\n        this.errors = observable(this.buildFieldValues(this.fields));\r\n    }\r\n\r\n    render(className:string = \"py-3\"):JSX.Element {\r\n        return <this.view className={className} />\r\n    }\r\n}\r\n","export * from './vForm';\r\n","import {bridgeCenterApi, isBridged} from './appBridge';\r\nimport {FetchError} from '../fetchError';\r\nimport {HttpChannelUI} from './httpChannelUI';\r\nimport {nav} from '../ui/nav';\r\nimport { isDevelopment } from './host';\r\n\r\nexport async function httpGet(url:string, params?:any):Promise<any> {\r\n    let channel = new HttpChannel(false, url, undefined, undefined);\r\n    let ret = await channel.get('', params);\r\n    return ret;\r\n}\r\n\r\nexport async function httpPost(url:string, params?:any):Promise<any> {\r\n    let channel = new HttpChannel(false, url, undefined, undefined);\r\n    let ret = await channel.post('', params);\r\n    return ret;\r\n}\r\n\r\nexport class HttpChannel {\r\n    private isCenter: boolean;\r\n    private hostUrl: string;\r\n    private apiToken: string;\r\n    private ui?: HttpChannelUI;\r\n    private timeout: number;\r\n\r\n    constructor(isCenter: boolean, hostUrl: string, apiToken:string, ui?: HttpChannelUI) {\r\n        this.isCenter = isCenter;\r\n        this.hostUrl = hostUrl;\r\n        this.apiToken = apiToken;\r\n        this.ui = ui;\r\n        this.timeout = isDevelopment === true? 500000:5000;\r\n    }\r\n\r\n    private startWait = () => {\r\n        if (this.ui !== undefined) this.ui.startWait();\r\n    }\r\n\r\n    private endWait = (url?:string, reject?:(reason?:any)=>void) => {\r\n        if (this.ui !== undefined) this.ui.endWait();\r\n        if (reject !== undefined) reject('访问webapi超时 ' + url);\r\n    }\r\n\r\n    private showError = async (error:FetchError) => {\r\n        if (this.ui !== undefined) await this.ui.showError(error);\r\n    }\r\n\r\n    used() {\r\n        this.post('', {});\r\n    }\r\n\r\n    async get(url: string, params: any = undefined): Promise<any> {\r\n        if (params) {\r\n            let keys = Object.keys(params);\r\n            if (keys.length > 0) {\r\n                let c = '?';\r\n                for (let k of keys) {\r\n                    let v = params[k];\r\n                    if (v === undefined) continue;\r\n                    url += c + k + '=' + params[k];\r\n                    c = '&';\r\n                }\r\n            }\r\n        }\r\n        let options = this.buildOptions();\r\n        options.method = 'GET';\r\n        return await this.innerFetch(url, options);\r\n    }\r\n\r\n    async post(url: string, params: any): Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = 'POST';\r\n        options.body = JSON.stringify(params);\r\n        return await this.innerFetch(url, options);\r\n    }\r\n\r\n    async put(url: string, params: any): Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = 'PUT';\r\n        options.body = JSON.stringify(params);\r\n        return await this.innerFetch(url, options);\r\n    }\r\n\r\n    async delete(url: string, params: any): Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = 'DELETE';\r\n        options.body = JSON.stringify(params);\r\n        return await this.innerFetch(url, options);\r\n    }\r\n    async fetch(url: string, options: any, resolve:(value?:any)=>any, reject:(reason?:any)=>void):Promise<void> {\r\n        let that = this;\r\n        this.startWait();\r\n        let path = url;\r\n        function buildError(err: string) {\r\n            return {\r\n                channel: that,\r\n                url: path,\r\n                options: options,\r\n                resolve: resolve,\r\n                reject: reject,\r\n                error: err,\r\n            }\r\n        }\r\n        try {\r\n            console.log('%s %s', options.method, path);\r\n            let timeOutHandler = setTimeout(() => that.endWait(url, reject), this.timeout);\r\n            let res = await fetch(encodeURI(path), options);\r\n            if (res.ok === false) {\r\n                clearTimeout(timeOutHandler);\r\n                that.endWait();\r\n                console.log('call error %s', res.statusText);\r\n                throw res.statusText;\r\n            }\r\n            let ct = res.headers.get('content-type');\r\n            if (ct && ct.indexOf('json')>=0) {\r\n                return res.json().then(async retJson => {\r\n                    clearTimeout(timeOutHandler);\r\n                    that.endWait();\r\n                    if (retJson.ok === true) {\r\n                        return resolve(retJson.res);\r\n                    }\r\n                    if (retJson.error === undefined) {\r\n                        await that.showError(buildError('not valid tonva json'));\r\n                    }\r\n                    else {\r\n                        await that.showError(buildError(retJson.error));\r\n                        reject(retJson.error);\r\n                    }\r\n                    //throw retJson.error;\r\n                }).catch(async error => {\r\n                    await that.showError(buildError(error.message));\r\n                });\r\n            }\r\n            else {\r\n                let text = await res.text();\r\n                clearTimeout(timeOutHandler);\r\n                that.endWait();\r\n                resolve(text);\r\n            }\r\n        }\r\n        catch(error) {\r\n            if (typeof error === 'string') {\r\n                if (error.toLowerCase().startsWith('unauthorized') === true) {\r\n                    nav.logout();\r\n                    return;\r\n                }\r\n            }\r\n            await this.showError(buildError(error.message));\r\n        };\r\n    }\r\n\r\n    private async innerFetch(url: string, options: any): Promise<any> {\r\n        let u = this.hostUrl + url;\r\n        if (this.isCenter === true && this.apiToken === undefined && isBridged())\r\n            return await bridgeCenterApi(u, options.method, options.body);\r\n        return await new Promise<any>(async (resolve, reject) => {\r\n            await this.fetch(u, options, resolve, reject);\r\n        });\r\n    }\r\n\r\n    async callFetch(url:string, method:string, body:any):Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = method;\r\n        options.body = body;\r\n        return await new Promise<any>(async (resolve, reject) => {\r\n            await this.fetch(url, options, resolve, reject);\r\n        });\r\n    }\r\n\r\n    private buildOptions(): any {\r\n        let {language, culture} = nav;\r\n        let headers = new Headers();\r\n        //headers.append('Access-Control-Allow-Origin', '*');\r\n        headers.append('Content-Type', 'application/json;charset=UTF-8');\r\n        let lang = language;\r\n        if (culture) lang += '-' + culture;\r\n        headers.append('Accept-Language', lang);\r\n        if (this.apiToken) { \r\n            headers.append('Authorization', this.apiToken); \r\n        }\r\n        let options = {\r\n            headers: headers,\r\n            // cache: 'no-cache',\r\n        };\r\n        return options;\r\n    }\r\n}\r\n","import _ from 'lodash';\r\n\r\nexport interface KeyValueRes {\r\n    [key:string]: any;\r\n}\r\n\r\nexport interface Res<T extends KeyValueRes> {\r\n    [lang:string]: T | {[district:string]: T};\r\n}\r\n\r\nexport const resOptions:{lang:string, district:string} = {\r\n    lang: undefined,\r\n    district: undefined,\r\n}\r\n\r\nexport function setResOptions(lang:string, district:string) {\r\n    resOptions.lang = lang;\r\n    resOptions.district = district;\r\n}\r\n\r\n(function() {\r\n    let lang: string, district: string;\r\n    let language = navigator.languages && navigator.languages[0] || // Chrome / Firefox\r\n        navigator.language; // ||   // All browsers\r\n    //navigator.userLanguage; // IE <= 10\r\n    if (!language) {\r\n        lang = 'zh';\r\n        district = 'CN';\r\n    }\r\n    else {\r\n        let parts = language.split('-');\r\n        lang = parts[0];\r\n        if (parts.length > 1) district = parts[1];\r\n    }\r\n    setResOptions(lang, district);\r\n}());\r\n\r\nexport function resLang<T extends KeyValueRes>(res:Res<T>):T {\r\n    let {lang, district} = resOptions;\r\n    let ret:T = {} as T;\r\n    if (res === undefined) return ret;\r\n    _.merge(ret, res._);\r\n    let l = res[lang];\r\n    if (l === undefined) return ret;\r\n    _.merge(ret, l._);\r\n    let d = l[district];\r\n    if (d === undefined) return ret;\r\n    _.merge(ret, d);\r\n    let {entity} = ret;\r\n    if (entity !== undefined) {\r\n        for (let i in entity) {\r\n            entity[i.toLowerCase()] = entity[i];\r\n        }\r\n    }\r\n    return ret;\r\n}\r\n","export * from './CApp';\r\nexport * from './startApp';\r\nexport * from './uq';\r\nexport * from './action';\r\nexport * from './tuid';\r\nexport * from './sheet';\r\nexport * from './query';\r\nexport * from './map';\r\nexport * from './history';\r\nexport * from './pending';\r\nexport * from './form/viewModel';\r\nexport * from './form';\r\nexport * from './formUI';\r\nexport * from './ControllerUq';\r\nexport * from './CVEntity';\r\nexport * from './link';\r\nexport * from './icons';\r\n","import * as React from 'react';\r\nimport {observable, computed} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face} from '../face';\r\nimport {Rule} from '../rule';\r\n\r\nexport abstract class ControlBase {\r\n    protected formView: FormView;\r\n    constructor(formView:FormView) {\r\n        this.formView = formView;\r\n    }\r\n    render():JSX.Element {\r\n        return <div className=\"col-sm-10\">\r\n            {this.renderControl()}\r\n        </div>;\r\n    }\r\n    protected abstract renderControl():JSX.Element;\r\n    @computed get hasError():boolean {return false;}\r\n    @computed get filled():boolean {return false;}\r\n    clear() {}\r\n    clearErrors() {}\r\n    readValues(values:any):any {}\r\n    setError(fieldName:string, error:string) {}\r\n    setInitValues(values: any) {}\r\n    isOk():boolean {this.validate(); return !this.hasError;}\r\n    protected validate() {}\r\n}\r\n\r\nexport abstract class Control extends ControlBase {\r\n    protected field: Field;\r\n    protected face: Face;\r\n    protected props: any;\r\n    protected rules: Rule[];\r\n\r\n    protected element: HTMLElement;\r\n    @observable protected isOK?: boolean;\r\n    @observable protected error: string;\r\n    @observable protected value: any;\r\n\r\n    constructor(formView:FormView, field:Field, face:Face) {\r\n        super(formView);\r\n        this.field = field;\r\n        this.face = face;\r\n        this.init();\r\n        this.setProps();\r\n    }\r\n    protected ref(element: HTMLElement) {\r\n        this.element = element;\r\n    }\r\n    protected init() {\r\n        this.rules = [];\r\n        let r = this.field.rules;\r\n        if (r !== undefined) {\r\n            if (Array.isArray(r) === true) this.rules.push(...(r as Rule[]));\r\n            else this.rules.push(r as Rule);\r\n        }\r\n    };\r\n    protected setProps():any {\r\n        return this.props = {\r\n            ref: this.ref.bind(this),\r\n            name: this.field.name,\r\n        }\r\n    };\r\n    @computed get hasError():boolean {return this.error !== undefined;}\r\n    @computed get filled():boolean {\r\n        let ret = this.value !== undefined && this.value !== this.field.defaultValue;\r\n        return ret;\r\n    }\r\n    clearValue() { this.value = undefined; }\r\n    clear() { this.clearErrors(); this.clearValue(); }\r\n    clearErrors() { this.isOK = undefined; this.error = undefined; }\r\n    readValues(values:any):any {\r\n        values[this.field.name] = this.value;\r\n    }\r\n    setError(fieldName:string, error:string) {}\r\n    setInitValues(values: any) {}\r\n    protected getValueFromElement():any {return this.value;}\r\n    protected validate() {\r\n        try {\r\n            let v = this.getValueFromElement();\r\n            if (this.rules.length > 0) {\r\n                let isOk:boolean;\r\n                for (let rule of this.rules) {\r\n                    console.log('validate: %s', v);\r\n                    let err = rule(v);\r\n                    console.log('validate: %s err: %s', v, err);\r\n                    if (err === true) {\r\n                        this.error = undefined;\r\n                        isOk = true;\r\n                    }\r\n                    else if (err !== undefined) {\r\n                        //console.log('field %s onBlur v=%s rule=%s err=%s', \r\n                        //    this.field.name, JSON.stringify(v), rule, err);\r\n                        this.error = err;\r\n                        this.isOK = false;\r\n                        return;\r\n                    }\r\n                }\r\n                this.isOK = isOk;\r\n            }\r\n            this.value = v;\r\n        }\r\n        catch (e) {\r\n            this.error = e.message;\r\n        }\r\n    }\r\n    render():JSX.Element {\r\n        let n;\r\n        if (this.face !== undefined) {\r\n            let {notes} = this.face;\r\n            if (notes !== undefined) n = <small className=\"text-muted\">{notes}</small>;\r\n        }\r\n        return <div className=\"col-sm-10\">\r\n            {this.renderControl()}\r\n            {n}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face} from '../face';\r\nimport {ControlBase} from './control';\r\n\r\nexport class ButtonsControl extends ControlBase {\r\n    constructor(props) {\r\n        super(props);\r\n        this.otherClick = this.otherClick.bind(this);\r\n    }\r\n    private otherClick() {\r\n        let onOther = this.formView.props.onOther;\r\n        if (onOther === undefined) return;\r\n        let values = this.formView.readValues();\r\n        onOther(values);\r\n    }\r\n    renderControl():JSX.Element {\r\n        console.log('buttons.renderControl');\r\n        let nothing = this.formView.nothing;\r\n        let hasError = this.formView.hasError;\r\n        let props = this.formView.props;\r\n        console.log('buttons.renderControl nothing:%s hasError:%s', nothing, hasError);\r\n        let {submitButton, otherButton, onOther} = props;\r\n        let btnOther;\r\n        if (otherButton !== undefined) {\r\n            btnOther = <button className=\"btn btn-outline-info ml-auto\" onClick={this.otherClick}>\r\n                {otherButton}\r\n            </button>\r\n        }\r\n        return <div className=\"d-flex justify-content-start\">\r\n            <button\r\n                className=\"btn btn-primary\"\r\n                type=\"submit\" \r\n                disabled={nothing || hasError}>\r\n                {submitButton || '提交'}\r\n            </button>\r\n            {btnOther}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable, computed} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, Placeholder} from '../face';\r\nimport {Control} from './control';\r\n\r\nconst TxtRequired = '必须填入要求内容';\r\n\r\nexport abstract class CharsControl extends Control {\r\n    protected init() {\r\n        super.init();\r\n        if (this.field.required === true) {\r\n            this.rules.push((v) => {\r\n                if (v===null || v===undefined || (v as string).trim().length === 0) return TxtRequired;\r\n                return true;\r\n            });\r\n        }\r\n    }\r\n\r\n    protected element: HTMLInputElement;\r\n    protected getValueFromElement():any {return this.parseValue(this.element.value)}\r\n\r\n    protected setProps() {\r\n        super.setProps();\r\n        _.assign(this.props, {\r\n            onBlur: this.onBlur.bind(this),\r\n            onFocus: this.onFocus.bind(this),\r\n            onChange: this.onChange.bind(this),\r\n        });\r\n        let face = this.face as Placeholder;\r\n        if (face !== undefined) {\r\n            _.assign(this.props, {\r\n                placeholder: face.placeholder,\r\n            });\r\n        }\r\n        return this.props;\r\n    };\r\n    protected parseValue(value?:string):any {return value;}\r\n    private onBlur() {\r\n        //console.log('field %s onBlure', this.field.name);\r\n        this.validate();\r\n    }\r\n    private onChange() {\r\n        console.log('onChange');\r\n        this.validate();\r\n    }\r\n    private onFocus() {\r\n        this.clearErrors();\r\n        //this.error = undefined;\r\n        //this.formView.clearErrors();\r\n    }\r\n    protected className() {\r\n        return classNames({\r\n            \"form-control\": true,\r\n            \"has-success\": this.isOK === true,\r\n            \"is-invalid\": this.error !== undefined,\r\n            \"is-valid\": this.error === undefined && this.isOK === true,\r\n        });\r\n    }\r\n    protected renderInput():JSX.Element {\r\n        return <input className={this.className()} {...this.props} />;\r\n    }\r\n    protected ref(element: HTMLInputElement) {\r\n        super.ref(element);\r\n        if (element) {\r\n            element.value = this.value === undefined? '':this.value;\r\n        }\r\n    }\r\n    protected renderError():JSX.Element {\r\n        //if (this.field.name === 'name') console.log('charsControl renderControl');\r\n        if (this.error === undefined) return null;\r\n        return <div className=\"invalid-feedback\">{this.error}</div>\r\n    }\r\n    clearValue() { super.clearValue(); this.element.value = ''; }\r\n    setError(fieldName:string, error:string) {\r\n        if (this.field.name === fieldName) this.error = error;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        if (v === undefined) return;\r\n        //this.element.value = v;\r\n        this.value = v;\r\n    }\r\n    renderControl():JSX.Element {\r\n        return <React.Fragment>\r\n            {this.renderInput()}\r\n            {this.renderError()}\r\n        </React.Fragment>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport {CharsControl} from './charsControl';\r\nimport {StringField} from '../field';\r\n\r\nexport class StringControl extends CharsControl {\r\n    protected field: StringField;\r\n    protected setProps() {\r\n        let p = super.setProps();\r\n        _.assign(p, {\r\n            type: 'text',\r\n            maxLength: this.field.maxLength,\r\n        });\r\n        return p;\r\n    };\r\n    protected parseValue(value?:string):any {\r\n        if (value === undefined) return undefined;\r\n        if (value.trim().length === 0) return undefined;\r\n        return value;\r\n    }\r\n}\r\n\r\nexport class PasswordControl extends StringControl {\r\n    protected setProps() {\r\n        let p = super.setProps();\r\n        _.assign(p, {\r\n            type: 'password',\r\n            maxLength: this.field.maxLength,\r\n        });\r\n        return p;\r\n    };\r\n}","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport {IntField, DecField, NumberField} from '../field';\r\nimport {CharsControl} from './charsControl';\r\n\r\nconst ErrInvalidNumber = '无效的数字';\r\nconst ErrMin = '最小值为';\r\nconst ErrMax = '最大值为';\r\n\r\nconst KeyCode_Neg = 45;\r\nconst KeyCode_Dot = 46;\r\n\r\nexport class NumberControl extends CharsControl {\r\n    protected field: IntField | DecField | NumberField;\r\n    protected value: number;\r\n    protected extraChars: number[];\r\n    \r\n    protected init() {\r\n        super.init();\r\n        this.extraChars = [];\r\n        let {min, max} = this.field;\r\n        if (min !== undefined) {\r\n            this.rules.push((v:number) => {if (v === undefined) return; if (v<min) return ErrMin + min; return true;});\r\n            if (min < 0) this.extraChars.push(KeyCode_Neg);\r\n        }\r\n        else {\r\n            this.extraChars.push(KeyCode_Neg);\r\n        }\r\n\r\n        if (max !== undefined) {\r\n            this.rules.push((v:number) => {if (v === undefined) return; if (v>max) return ErrMax + max; return true});\r\n        }\r\n        switch (this.field.type) {\r\n            case 'dec':\r\n            case 'number': this.extraChars.push(KeyCode_Dot); break;\r\n        }\r\n    }\r\n\r\n    protected parseValue(value?:string):any {\r\n        if (value === undefined) return undefined;\r\n        if (value.trim().length === 0) return undefined;\r\n        let n = Number.parseFloat(value);\r\n        if (isNaN(n)) throw new Error(ErrInvalidNumber);\r\n        return n;\r\n    }\r\n\r\n    protected setProps() {\r\n        super.setProps();\r\n        _.assign(this.props, {\r\n            type: 'number',\r\n            step: (this.field as DecField).step,\r\n            onKeyPress: this.onKeyPress.bind(this),\r\n        });\r\n    }\r\n\r\n    onKeyPress(event:KeyboardEvent) {\r\n        let ch = event.charCode;\r\n        if (ch === 8 || ch === 0 || ch === 13 || ch >= 48 && ch <= 57) return;\r\n        if (this.extraChars !== undefined) {\r\n            if (this.extraChars.indexOf(ch) >= 0) {\r\n                switch (ch) {\r\n                    case KeyCode_Dot: this.onKeyDot(); break;\r\n                    case KeyCode_Neg: this.onKeyNeg(); event.preventDefault(); break;\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    private onKeyDot() {\r\n        let v = this.element.value;\r\n        let p = v.indexOf('.');\r\n        if (p >= 0) this.element.value = v.replace('.', '');\r\n    }\r\n    private onKeyNeg() {\r\n        let v = this.element.value;\r\n        let p = v.indexOf('-');\r\n        if (p >= 0) v = v.replace('-', '');\r\n        else v = '-'+v;\r\n        this.element.value = v;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {Control, ControlBase} from './control';\r\nimport {FormView} from '../formView';\r\n\r\nexport class UnknownControl extends Control {\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-plaintext\">\r\n            <div className=\"alert alert-primary\" role=\"alert\">\r\n            don't know how to create control<br/>\r\n            field: {JSON.stringify(this.field)} must be object <br/>\r\n            face: {JSON.stringify(this.face)} must be object <br/>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class EmptyControl extends ControlBase {\r\n    private element:JSX.Element;\r\n    constructor(formView:FormView, element:JSX.Element) {\r\n        super(formView);\r\n        this.element = element;\r\n    }\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-plaintext\">\r\n            {this.element}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, IdPickFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class PickIdControl extends Control {\r\n    protected face: IdPickFace;\r\n    @observable private caption: string|JSX.Element;\r\n\r\n    private onClick = async () => {\r\n        let {pick, fromPicked} = this.face;\r\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\r\n        if (item === undefined) {\r\n            this.value = undefined;\r\n            return;\r\n        }\r\n        if (fromPicked === undefined) {\r\n            this.value = item.id;\r\n            return;\r\n        }\r\n        let {id, caption} = fromPicked(item);\r\n        this.value = id;\r\n        this.caption = caption;\r\n    }\r\n    onPicked = (value: any) => {\r\n        this.value = value.id;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        this.value = v;\r\n    }\r\n    private controlContent():string|JSX.Element {\r\n        let {itemFromId, fromPicked, initCaption} = this.face;\r\n        if (this.value === undefined) {\r\n            return initCaption || '请选择Id';\r\n        }\r\n        if (this.caption !== undefined) {\r\n            return this.caption;\r\n        }\r\n        if (itemFromId !== undefined) {\r\n            if (fromPicked !== undefined) {\r\n                let item = itemFromId(this.value);\r\n                if (item) {\r\n                    let ret = fromPicked(item);\r\n                    if (ret !== undefined) return ret.caption;\r\n                }\r\n            }\r\n        }\r\n        return String(this.value);\r\n    }\r\n    /*\r\n    private buildContent():string|JSX.Element {\r\n        let {tuid, input} = this.face;\r\n        if (input === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n            return <div onClick={this.onClick}>{this.controlContent()}</div>;\r\n        }\r\n        return <input.component id={this.value} \r\n            tuid={tuid}\r\n            input={input}\r\n            entitiesUI={this.formView.props.context} \r\n            params={this.formView.readValues()}\r\n            onPicked={this.onPicked} />;\r\n    }*/\r\n    renderControl():JSX.Element {\r\n        let {tuid, input} = this.face;\r\n        if (input === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n            return <div className=\"form-control-plaintext px-2 border text-primary rounded cursor-pointer\"\r\n                onClick={this.onClick}>\r\n                {this.controlContent()}\r\n            </div>;\r\n        }\r\n        return <div className=\"form-control-static \">\r\n            <input.component id={this.value} \r\n                ui={tuid}\r\n                //input={input}\r\n                //entitiesUI={this.formView.props.context} \r\n                //params={this.formView.readValues()}\r\n                //onPicked={this.onPicked}\r\n                />\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, TuidPickFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class PickTuidControl extends Control {\r\n    protected face: TuidPickFace;\r\n    // protected value: number;\r\n    @observable private caption: string|JSX.Element;\r\n    constructor(formView:FormView, field:Field, face:Face) {\r\n        super(formView, field, face);\r\n        this.onIdChanged = this.onIdChanged.bind(this);\r\n        //this.onClick = this.onClick.bind(this);\r\n    }\r\n    /*\r\n    private async onClick() {\r\n        let {pick, fromPicked} = this.face;\r\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\r\n        if (item === undefined) {\r\n            this.value = undefined;\r\n            return;\r\n        }\r\n        if (fromPicked === undefined) {\r\n            this.value = item.id;\r\n            return;\r\n        }\r\n        let {id, caption} = fromPicked(item);\r\n        this.value = id;\r\n        this.caption = caption;\r\n    }*/\r\n    onIdChanged(id: any) {\r\n        this.value = id.id;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        this.value = v;\r\n    }\r\n    private buildContent():JSX.Element {\r\n        //let {tuid, input} = this.face;\r\n        return <this.face.input.component \r\n            {...this.face}\r\n            id={this.value}\r\n            //ui={this.face.ui}\r\n            //input={input}\r\n            //entitiesUI={this.formView.props.context} \r\n            onFormValues={()=>this.formView.readValues()}\r\n            onIdChanged={this.onIdChanged} />;\r\n    }\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-static \">\r\n            {this.buildContent()}\r\n        </div>;\r\n    }\r\n}\r\n/*\r\n<button className=\"form-control btn btn-outline-info\"\r\ntype=\"button\"\r\nstyle={{textAlign:'left', paddingLeft:'0.75rem'}}\r\nonClick={this.onClick}>\r\n{this.buildContent()}\r\n</button>\r\n*/","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, PickFace} from '../face';\r\nimport {Control} from './control';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class PickControl extends Control {\r\n    protected face: PickFace;\r\n    @observable private caption: string|JSX.Element;\r\n\r\n    private onClick = async () => {\r\n        let {pick, fromPicked} = this.face;\r\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\r\n        if (item === undefined) {\r\n            this.value = undefined;\r\n            return;\r\n        }\r\n        let {id, caption} = fromPicked(item);\r\n        this.value = id;\r\n        this.caption = caption;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        this.value = v;\r\n    }\r\n    /*\r\n    private controlContent():string|JSX.Element {\r\n        let {content: Content} = this.face;\r\n        if (this.value === undefined) {\r\n            return '请选择';\r\n        }\r\n        \r\n        if (this.caption !== undefined) {\r\n            return this.caption;\r\n        }\r\n        return <Content id={this.value} />;\r\n    }*/\r\n    /*\r\n    private buildContent():string|JSX.Element {\r\n        let {tuid, input} = this.face;\r\n        if (input === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n            return <div onClick={this.onClick}>{this.controlContent()}</div>;\r\n        }\r\n        return <input.component id={this.value} \r\n            tuid={tuid}\r\n            input={input}\r\n            entitiesUI={this.formView.props.context} \r\n            params={this.formView.readValues()}\r\n            onPicked={this.onPicked} />;\r\n    }*/\r\n    renderControl():JSX.Element {\r\n        return <this.view />;\r\n        /*\r\n        let {content:Content} = this.face;\r\n        //if (this.value === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n        //}\r\n        //return <div className=\"form-control-static \">\r\n        //    <Content />\r\n        //</div>;\r\n        */\r\n    }\r\n\r\n    private view = observer(() => {\r\n        let content;\r\n        let {content: Content} = this.face;\r\n        if (this.value === undefined || this.value === null) {\r\n            content = '请选择';\r\n        }\r\n        /*\r\n        else if (this.caption !== undefined) {\r\n            content = this.caption;\r\n        }*/\r\n        else {\r\n            content = <Content id={this.value} />;\r\n        } \r\n        return <div\r\n            className=\"form-control-plaintext px-2 border text-primary rounded cursor-pointer bg-light\"\r\n            onClick={this.onClick}>\r\n            {content}\r\n        </div>\r\n    });\r\n}\r\n","export * from './control';\r\nexport * from './buttonsControl';\r\nexport * from './stringControl';\r\nexport * from './numberControl';\r\n\r\nimport {Field} from '../field';\r\nimport {Face} from '../face';\r\nimport {Control, ControlBase} from './control';\r\nimport {ButtonsControl} from './buttonsControl';\r\nimport {CheckControl} from './checkControl';\r\nimport {RadioControl} from './radioControl';\r\nimport {TextAreaControl} from './textAreaControl';\r\nimport {SelectControl} from './selectControl';\r\nimport {UnknownControl, EmptyControl} from './unknownControl';\r\nimport {StringControl, PasswordControl} from './stringControl';\r\nimport {NumberControl} from './numberControl';\r\n\r\nimport {FormView, FormRow, GroupRow, FieldRow, LabelFormRow} from '../formView';\r\nimport { PickIdControl } from './pickIdControl';\r\nimport { PickTuidControl } from './pickTuidControl';\r\nimport { PickControl } from './pickControl';\r\n\r\nexport type CreateControl = (form:FormView, row: FormRow) => ControlBase\r\n\r\nexport const createControl:CreateControl = (form:FormView, row: LabelFormRow):ControlBase => {\r\n    let label = row.label;\r\n    if ((<GroupRow>row).group !== undefined)\r\n        return createGroupControl(form, label, row as GroupRow);\r\n    if ((<FieldRow>row).field !== undefined)\r\n        return createFieldControl(form, label, row as FieldRow);\r\n    return new EmptyControl(form, row.help);\r\n}\r\n\r\nconst controls:{[type:string]: new (formView:FormView, field:Field, face:Face) => Control} = {\r\n    \"string\": StringControl,\r\n    \"password\": PasswordControl,\r\n    \"number\": NumberControl,\r\n    \"checkbox\": CheckControl,\r\n    \"radiobox\": RadioControl,\r\n    \"select\": SelectControl,\r\n    \"pick-id\": PickIdControl,\r\n    \"pick-tuid\": PickTuidControl,\r\n    \"textarea\": TextAreaControl,\r\n    \"pick\": PickControl,\r\n};\r\nconst defaultFaces:{[type:string]: Face} = {\r\n    \"string\": {type:'string'},\r\n    \"number\": {type:'number'},\r\n    \"int\": {type:'number'},\r\n    \"dec\": {type:'number'},\r\n    \"bool\": {type:'checkbox'},\r\n}\r\nfunction createFieldControl(form:FormView, label:string, fieldRow: FieldRow):Control {\r\n    let {field, face} = fieldRow;\r\n    switch (typeof field) {\r\n        case 'string':\r\n            field = {\r\n                name: (field as any) as string,\r\n                type: 'string',\r\n            }\r\n            break;\r\n        case 'object':\r\n            break;\r\n        default:\r\n            return new UnknownControl(form, field, face);\r\n    }\r\n    let fieldType = field.type || 'string';\r\n    if (face === undefined) {\r\n        face = defaultFaces[fieldType];\r\n        if (face === undefined) return new UnknownControl(form, field, face);\r\n    }\r\n    else if (face.type === undefined) {\r\n        let f = defaultFaces[fieldType];\r\n        face.type = f===undefined? 'string' : f.type;\r\n    }\r\n    let control = controls[face.type || fieldType] || UnknownControl;\r\n    return new control(form, field, face);\r\n}\r\n\r\nfunction createGroupControl(form:FormView, label:string, groupRow: GroupRow):Control {\r\n    return new UnknownControl(form, groupRow as any, undefined);\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field, BoolField} from '../field';\r\nimport {Face, CheckBoxFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class CheckControl extends Control {    \r\n    protected element: HTMLInputElement;\r\n    protected field: BoolField;\r\n    protected face: CheckBoxFace;\r\n    private trueValue: any;\r\n    private falseValue: any;\r\n\r\n    protected init() {\r\n        super.init();\r\n        let {trueValue, falseValue} = this.field;\r\n        if (trueValue === undefined) this.trueValue = 1;\r\n        if (falseValue === undefined) this.falseValue = 0;\r\n    }\r\n\r\n    setProps() {\r\n        super.setProps();\r\n        _.assign(this.props, {\r\n            onChange: this.onChange.bind(this),\r\n        });\r\n    }\r\n\r\n    clearValue() {\r\n        this.element.checked = this.field.defaultValue === this.trueValue;\r\n        this.value = this.getValueFromElement();\r\n    }\r\n\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        if (v === undefined) {\r\n            v = this.field.defaultValue;\r\n        }\r\n        if (v !== undefined) {\r\n            //this.element.checked = v === this.trueValue;\r\n            //this.value = this.getValueFromElement();\r\n        }\r\n    }\r\n\r\n    protected getValueFromElement():any { return this.element.checked? this.trueValue:this.falseValue; }\r\n\r\n    private onChange() {\r\n        this.value = this.getValueFromElement();\r\n    }\r\n\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-static\">\r\n            <label className=\"form-control\">\r\n                <label className=\"custom-control custom-checkbox mb-0\">\r\n                    <input type='checkbox'\r\n                        name={this.field.name}\r\n                        ref={this.props.ref}\r\n                        onChange={this.props.onChange}\r\n                        className=\"custom-control-input\" />\r\n                    <span className=\"custom-control-indicator\" />\r\n                    <span className=\"custom-control-description\">{this.face.label}</span>\r\n                </label>\r\n            </label>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, RadioFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class RadioControl extends Control {\r\n    protected face: RadioFace;\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-static\">\r\n            <div className=\"form-control\">\r\n            {\r\n                this.face.list.map((item, index) => {\r\n                    let t, v;\r\n                    if (typeof item !== 'object') t = v = item;\r\n                    else {\r\n                        t = item.text;\r\n                        v = item.value;\r\n                    }\r\n                    return <label key={index} className=\"custom-control custom-radio w-25\">\r\n                        <input type='radio'\r\n                            name={this.field.name} \r\n                            className=\"custom-control-input\" />\r\n                        <span className=\"custom-control-indicator\"></span>\r\n                        <span className=\"custom-control-description\">{t}</span>\r\n                    </label>;\r\n                })\r\n            }\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, SelectFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class SelectControl extends Control {\r\n    constructor (formView:FormView, field:Field, face:Face) {\r\n        super(formView, field, face);\r\n        this.ref = this.ref.bind(this);\r\n    }\r\n    protected face: SelectFace;\r\n    protected element: HTMLSelectElement;\r\n    protected getValueFromElement():any {\r\n        let {selectedIndex, selectedOptions} = this.element;\r\n        let v:any = selectedOptions[0].value;\r\n        switch (this.field.type) {\r\n            case 'number': v = Number(v); break;\r\n            case 'date': v = new Date(v); break;\r\n            case 'bool': \r\n                if (typeof v === 'string') {\r\n                    v = ((v as string).toLowerCase() === 'true');\r\n                }\r\n                break;\r\n        }\r\n        return v;\r\n    }\r\n    renderControl():JSX.Element {\r\n        let {list} = this.face;\r\n        let def = this.face.default;\r\n        let options: any[] = [];\r\n        if (def === undefined)\r\n            options.push(<option key={-1} value={undefined}>请选择</option>);\r\n        options.push(...list.map((item, index) => {\r\n            let t, v;\r\n            if (typeof item !== 'object') t = v = item;\r\n            else {\r\n                t = item.text;\r\n                v = item.value;\r\n            }\r\n            return <option key={index} value={v}>{t}</option>;\r\n        }));\r\n        return <div className=\"form-control-static\">\r\n            <select name={this.field.name} className=\"form-control\" ref={this.ref}>\r\n                {options}\r\n            </select>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport {CharsControl} from './charsControl';\r\nimport {StringField} from '../field';\r\nimport {TextAreaFace} from '../face';\r\n\r\nexport class TextAreaControl extends CharsControl {\r\n    protected field: StringField;\r\n    protected face: TextAreaFace;\r\n    private el: HTMLTextAreaElement;\r\n    protected setProps() {\r\n        let p = super.setProps();\r\n        let {maxLength} = this.field;\r\n        let {rows} = this.face;\r\n        _.assign(p, {\r\n            maxLength: maxLength,\r\n            rows: rows,\r\n        });\r\n        return p;\r\n    };\r\n    protected renderInput():JSX.Element {\r\n        return <textarea ref={t=>{this.el = t;if (t!==undefined) t.value=''}} className={this.className()} {...this.props} />;\r\n    }\r\n}\r\n","import { Entities, Field, ArrFields, FieldMap } from './entities';\r\nimport { TuidMain, Tuid } from './tuid';\r\n\r\nconst tab = '\\t';\r\nconst ln = '\\n';\r\n\r\nexport abstract class Entity {\r\n    protected entities: Entities;\r\n    protected schema: any;\r\n    private jName: string;\r\n    sys?: boolean;\r\n    readonly name: string;\r\n    readonly typeId: number;\r\n    abstract get typeName(): string;\r\n    get sName():string {return this.jName || this.name}\r\n    fields: Field[];\r\n    arrFields: ArrFields[];\r\n    returns: ArrFields[];\r\n\r\n    constructor(entities:Entities, name:string, typeId:number) {\r\n        this.entities = entities;\r\n        this.name = name;\r\n        this.typeId = typeId;\r\n        this.sys = this.name.indexOf('$') >= 0;\r\n    }\r\n\r\n    public face: any;           // 对应字段的label, placeHolder等等的中文，或者语言的翻译\r\n\r\n    protected get tvApi() {return this.entities.uqApi;}\r\n    async getApiFrom() {return this.entities.uqApi;}\r\n\r\n    private fieldMaps: {[arr:string]: FieldMap} = {};\r\n    fieldMap(arr?:string): FieldMap {\r\n        if (arr === undefined) arr = '$';\r\n        let ret = this.fieldMaps[arr];\r\n        if (ret === undefined) {\r\n            let fields:Field[];\r\n            if (arr === '$') fields = this.fields;\r\n            else if (this.arrFields !== undefined) {\r\n                let arrFields = this.arrFields.find(v => v.name === arr);\r\n                if (arrFields !== undefined) fields = arrFields.fields;\r\n            }\r\n            else if (this.returns !== undefined) {\r\n                let arrFields = this.returns.find(v => v.name === arr);\r\n                if (arrFields !== undefined) fields = arrFields.fields;\r\n            }\r\n            if (fields === undefined) return {};\r\n            ret = {};\r\n            for (let f of fields) ret[f.name] = f;\r\n            this.fieldMaps[arr] = ret;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    public async loadSchema():Promise<void> {\r\n        if (this.schema !== undefined) return;\r\n        let schema = await this.entities.uqApi.schema(this.name);\r\n        this.setSchema(schema);\r\n    }\r\n\r\n    public setSchema(schema:any) {\r\n        if (schema === undefined) return;\r\n        if (this.schema !== undefined) return;\r\n        this.schema = schema;\r\n        let {name, fields, arrs, returns} = schema;\r\n        if (name !== this.name) this.jName = name;\r\n        this.entities.buildFieldTuid(this.fields = fields);\r\n        this.entities.buildArrFieldsTuid(this.arrFields = arrs, fields);\r\n        this.entities.buildArrFieldsTuid(this.returns = returns, fields);\r\n        //this.newMain = this.buildCreater(fields);\r\n        //this.newArr = this.buildArrCreater(arrs);\r\n        //this.newRet = this.buildArrCreater(returns);\r\n    }\r\n\r\n    schemaStringify():string {\r\n        return JSON.stringify(this.schema, (key:string, value:any) => {\r\n            if (key === '_tuid') return undefined;\r\n            return value;\r\n        }, 4);\r\n    }\r\n\r\n    tuidFromField(field:Field):Tuid {\r\n        let {_tuid, tuid} = field;\r\n        if (tuid === undefined) return;\r\n        if (_tuid !== undefined) return _tuid;\r\n        return field._tuid = this.entities.getTuid(tuid, undefined);\r\n    }\r\n\r\n    tuidFromName(fieldName:string, arrName?:string):Tuid {\r\n        if (this.schema === undefined) return;\r\n        let {fields, arrs} = this.schema;\r\n        let entities = this.entities;\r\n        function getTuid(fn:string, fieldArr:Field[]) {\r\n            if (fieldArr === undefined) return;\r\n            let f = fieldArr.find(v => v.name === fn);\r\n            if (f === undefined) return;\r\n            return entities.getTuid(f.tuid, undefined);\r\n        }\r\n        let fn = fieldName.toLowerCase();\r\n        if (arrName === undefined) return getTuid(fn, fields);\r\n        if (arrs === undefined) return;\r\n        let an = arrName.toLowerCase();\r\n        let arr = (arrs as ArrFields[]).find(v => v.name === an);\r\n        if (arr === undefined) return;\r\n        return getTuid(fn, arr.fields);\r\n    }\r\n\r\n    protected buildParams(params:any):any {\r\n        let result = {};\r\n        let fields = this.fields;\r\n        if (fields !== undefined) this.buildFieldsParams(result, fields, params);\r\n        let arrs = this.arrFields; \r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                let {name, fields} = arr;\r\n                let paramsArr:any[] = params[name];\r\n                if (paramsArr === undefined) continue;\r\n                let arrResult = [];\r\n                result[name] = arrResult;\r\n                for (let pa of params) {\r\n                    let rowResult = {};\r\n                    this.buildFieldsParams(rowResult, fields, pa);\r\n                    arrResult.push(rowResult);\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private buildFieldsParams(result:any, fields:Field[], params:any) {\r\n        for (let field of fields) {\r\n            let {name} = field;\r\n            let d = params[name];\r\n            let val:any;\r\n            switch (typeof d) {\r\n                default: val = d; break;\r\n                case 'object':\r\n                    let tuid = field._tuid;\r\n                    if (tuid === undefined) val = d.id;\r\n                    else val = tuid.getIdFromObj(d);\r\n                    break;\r\n            }\r\n            result[name] = val;\r\n        }\r\n    }\r\n\r\n    pack(data:any):string {\r\n        let ret:string[] = [];\r\n        let fields = this.fields;\r\n        if (fields !== undefined) this.packRow(ret, fields, data);\r\n        let arrs = this.arrFields; //schema['arrs'];\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                this.packArr(ret, arr.fields, data[arr.name]);\r\n            }\r\n        }\r\n        return ret.join('');\r\n    }\r\n    \r\n    private escape(row:any, field:Field):any {\r\n        let d = row[field.name];\r\n        switch (typeof d) {\r\n            default: return d;\r\n            case 'object':\r\n                let tuid = field._tuid;\r\n                if (tuid === undefined) return d.id;\r\n                return tuid.getIdFromObj(d);\r\n            case 'string':\r\n                let len = d.length;\r\n                let r = '', p = 0;\r\n                for (let i=0;i<len;i++) {\r\n                    let c = d.charCodeAt(i);\r\n                    switch(c) {\r\n                        case 9: r += d.substring(p, i) + '\\\\t'; p = i+1; break;\r\n                        case 10: r += d.substring(p, i) + '\\\\n'; p = i+1; break;\r\n                    }\r\n                }\r\n                return r + d.substring(p);\r\n            case 'undefined': return '';\r\n        }\r\n    }\r\n    \r\n    private packRow(result:string[], fields:Field[], data:any) {\r\n        let len = fields.length;\r\n        if (len === 0) return;\r\n        let ret = '';\r\n        ret += this.escape(data, fields[0]);\r\n        for (let i=1;i<len;i++) {\r\n            let f = fields[i];\r\n            ret += tab + this.escape(data, f);\r\n        }\r\n        result.push(ret + ln);\r\n    }\r\n    \r\n    private packArr(result:string[], fields:Field[], data:any[]) {\r\n        if (data !== undefined) {\r\n            for (let row of data) {\r\n                this.packRow(result, fields, row);\r\n            }\r\n        }\r\n        result.push(ln);\r\n    }\r\n    \r\n    unpackSheet(data:string):any {\r\n        let ret = {} as any; //new this.newMain();\r\n        //if (schema === undefined || data === undefined) return;\r\n        let fields = this.fields;\r\n        let p = 0;\r\n        if (fields !== undefined) p = this.unpackRow(ret, fields, data, p);\r\n        let arrs = this.arrFields; //schema['arrs'];\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                p = this.unpackArr(ret, arr, data, p);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    \r\n    unpackReturns(data:string):any {\r\n        let ret = {} as any;\r\n        //if (schema === undefined || data === undefined) return;\r\n        //let fields = schema.fields;\r\n        let p = 0;\r\n        //if (fields !== undefined) p = unpackRow(ret, schema.fields, data, p);\r\n        let arrs = this.returns; //schema['returns'];\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                //let creater = this.newRet[arr.name];\r\n                p = this.unpackArr(ret, arr, data, p);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    \r\n    private unpackRow(ret:any, fields:Field[], data:string, p:number):number {\r\n        let ch0 = 0, ch = 0, c = p, i = 0, len = data.length, fLen = fields.length;\r\n        for (;p<len;p++) {\r\n            ch0 = ch;\r\n            ch = data.charCodeAt(p);\r\n            if (ch === 9) {\r\n                let f = fields[i];\r\n                if (ch0 !== 8) {\r\n                    if (p>c) {\r\n                        let v = data.substring(c, p);\r\n                        ret[f.name] = this.to(ret, v, f);\r\n                    }\r\n                }\r\n                else {\r\n                    ret[f.name] = null;\r\n                }\r\n                c = p+1;\r\n                ++i;\r\n                if (i>=fLen) break;\r\n            }\r\n            else if (ch === 10) {\r\n                let f = fields[i];\r\n                if (ch0 !== 8) {\r\n                    if (p>c) {\r\n                        let v = data.substring(c, p);\r\n                        ret[f.name] = this.to(ret, v, f);\r\n                    }\r\n                }\r\n                else {\r\n                    ret[f.name] = null;\r\n                }\r\n                ++p;\r\n                ++i;\r\n                break;\r\n            }\r\n        }\r\n        return p;\r\n    }\r\n\r\n    private to(ret:any, v:string, f:Field):any {\r\n        switch (f.type) {\r\n            default: return v;\r\n            case 'datetime':\r\n            case 'date':\r\n            case 'time':\r\n                let date = new Date(Number(v));\r\n                return date;\r\n            case 'tinyint':\r\n            case 'smallint':\r\n            case 'int':\r\n            case 'dec': return Number(v);\r\n            case 'bigint':\r\n                let id = Number(v);\r\n                let {_tuid} = f;\r\n                if (_tuid === undefined) return id;\r\n                _tuid.useId(id, true);\r\n                return _tuid.boxId(id);\r\n        }\r\n    }\r\n\r\n    private unpackArr(ret:any, arr:ArrFields, data:string, p:number):number {\r\n        let vals:any[] = [], len = data.length;\r\n        let {name, fields} = arr;\r\n        while (p<len) {\r\n            let ch = data.charCodeAt(p);\r\n            if (ch === 10) {\r\n                ++p;\r\n                break;\r\n            }\r\n            let val = {} as any; //new creater();\r\n            vals.push(val);\r\n            p = this.unpackRow(val, fields, data, p);\r\n        }\r\n        ret[name] = vals;\r\n        return p;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport _ from 'lodash';\r\nimport { Entity } from './entity';\r\nimport { Entities, Field, ArrFields } from './entities';\r\nimport { isNumber } from 'util';\r\nimport { CUq, CTuidMain, CTuidEdit, CTuidInfo, CTuidSelect } from '../controllers';\r\n\r\nexport class BoxId {\r\n    id: number;\r\n    obj?: any;\r\n    content: (templet?:(values?:any, x?:any)=>JSX.Element, x?:any)=>JSX.Element;\r\n    valueFromFieldName: (fieldName:string)=>BoxId|any;\r\n    _$com?: any;\r\n    _$tuid?: Tuid;\r\n}\r\n\r\nconst maxCacheSize = 1000;\r\nexport abstract class Tuid extends Entity {\r\n    private BoxId: ()=>void;\r\n    get typeName(): string { return 'tuid';}\r\n    private queue: number[] = [];               // 每次使用，都排到队头\r\n    private waitingIds: number[] = [];          // 等待loading的\r\n    private cache = observable.map({}, {deep: false});    // 已经缓冲的\r\n    idName: string;\r\n    owner: TuidMain;                    // 用这个值来区分是不是TuidArr\r\n    unique: string[];\r\n    schemaFrom: {owner:string; uq:string};\r\n\r\n    constructor(entities:Entities, name:string, typeId:number) {\r\n        super(entities, name, typeId);\r\n        this.buildIdBoxer();\r\n    }\r\n\r\n    abstract get Main();\r\n\r\n    private buildIdBoxer() {\r\n        this.BoxId = function():void {};\r\n        let prototype = this.BoxId.prototype;\r\n        Object.defineProperty(prototype, '_$tuid', {\r\n            value: this,\r\n            writable: false,\r\n            enumerable: false,\r\n        });\r\n        Object.defineProperty(prototype, 'obj', {\r\n            enumerable: false,\r\n            get: function() {\r\n                if (this.id === undefined || this.id<=0) return undefined;\r\n                return this._$tuid.valueFromId(this.id);\r\n            }\r\n        });\r\n        prototype.valueFromFieldName = function(fieldName:string):BoxId|any {\r\n            let t:Tuid = this._$tuid;\r\n            return t.valueFromFieldName(fieldName, this.obj);\r\n        };\r\n        prototype.toJSON = function() {return this.id}\r\n    }\r\n    boxId(id:number):BoxId {\r\n        this.useId(id);\r\n        let ret:BoxId = new this.BoxId();\r\n        ret.id = id;\r\n        return ret;\r\n    }\r\n    getTuidContent() {\r\n        return this.entities.cUq.getTuidContent(this);\r\n    }\r\n    getIdFromObj(item:any):number {\r\n        return item[this.idName];\r\n    }\r\n\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        let {id, unique} = schema;\r\n        this.idName = id;\r\n        this.unique = unique;\r\n        this.schemaFrom = this.schema.from;\r\n    }\r\n\r\n    private moveToHead(id:number) {\r\n        let index = this.queue.findIndex(v => v === id);\r\n        this.queue.splice(index, 1);\r\n        this.queue.push(id);\r\n    }\r\n\r\n    valueFromId(id:number|BoxId):any {\r\n        let _id:number;\r\n        let tId = typeof id;\r\n        switch (typeof id) {\r\n            case 'object': _id = (id as BoxId).id; break;\r\n            case 'number': _id = id as number; break;\r\n            default: return;\r\n        }\r\n        let v = this.cache.get(_id);\r\n        if (this.owner !== undefined && typeof v === 'object') {\r\n            v.$owner = this.owner.boxId(v.owner); // this.owner.valueFromId(v.owner);\r\n        }\r\n        return v;\r\n    }\r\n    valueFromFieldName(fieldName:string, obj:any):BoxId|any {\r\n        if (obj === undefined) return;\r\n        let f = this.fields.find(v => v.name === fieldName);\r\n        if (f === undefined) return;\r\n        let v = obj[fieldName];\r\n        let {_tuid} = f;\r\n        if (_tuid === undefined) return v;\r\n        return _tuid.valueFromId(v);\r\n    }\r\n    resetCache(id:number) {\r\n        this.cache.delete(id);\r\n        let index = this.queue.findIndex(v => v === id);\r\n        this.queue.splice(index, 1);\r\n        this.useId(id);\r\n    }\r\n    useId(id:number, defer?:boolean) {\r\n        if (id === undefined || id === 0) return;\r\n        if (isNumber(id) === false) return;\r\n        if (this.cache.has(id) === true) {\r\n            this.moveToHead(id);\r\n            return;\r\n        }\r\n        this.entities.cacheTuids(defer===true?70:20);\r\n        //let idVal = this.createID(id);\r\n        this.cache.set(id, id);\r\n        if (this.waitingIds.findIndex(v => v === id) >= 0) {\r\n            this.moveToHead(id);\r\n            return;\r\n        }\r\n\r\n        if (this.queue.length >= maxCacheSize) {\r\n            // 缓冲已满，先去掉最不常用的\r\n            let r = this.queue.shift();\r\n            if (r === id) {\r\n                // 如果移除的，正好是现在用的，则插入\r\n                this.queue.push(r);\r\n                return;\r\n            }\r\n\r\n            //let rKey = String(r);\r\n            if (this.cache.has(r) === true) {\r\n                // 如果移除r已经缓存\r\n                this.cache.delete(r);\r\n            }\r\n            else {\r\n                // 如果移除r还没有缓存\r\n                let index = this.waitingIds.findIndex(v => v === r);\r\n                this.waitingIds.splice(index, 1);\r\n            }\r\n        }\r\n        this.waitingIds.push(id);\r\n        this.queue.push(id);\r\n        return;\r\n    }\r\n    async proxied(name:string, id:number):Promise<any> {\r\n        let proxyTuid = this.entities.getTuid(name, undefined);\r\n        proxyTuid.useId(id);\r\n        let proxied = await this.tvApi.proxied(this.name, name, id);\r\n        this.cacheValue(proxied);\r\n        return proxied;\r\n    }\r\n    cacheValue(val:any):boolean {\r\n        if (val === undefined) return false;\r\n        let id = this.getIdFromObj(val);\r\n        if (id === undefined) return false;\r\n        let index = this.waitingIds.findIndex(v => v === id);\r\n        if (index>=0) this.waitingIds.splice(index, 1);\r\n        //let cacheVal = this.createID(id, val);\r\n        this.cache.set(id, val);\r\n        // 下面的代码应该是cache proxy id, 需要的时候再写吧\r\n        /*\r\n        let {tuids, fields} = this.schema;\r\n        if (tuids !== undefined && fields !== undefined) {\r\n            for (let f of fields) {\r\n                let {name, tuid} = f;\r\n                if (tuid === undefined) continue;\r\n                let t = this.entities.tuid(tuid);\r\n                if (t === undefined) continue;\r\n                t.useId(val[name]);\r\n            }\r\n        }*/\r\n        return true;\r\n    }\r\n    protected afterCacheId(tuidValue:any) {\r\n        for (let f of this.fields) {\r\n            let {_tuid} = f;\r\n            if (_tuid === undefined) continue;\r\n            _tuid.useId(tuidValue[f.name]);\r\n        }\r\n    }\r\n    async cacheIds():Promise<void> {\r\n        if (this.waitingIds.length === 0) return;\r\n        let name:string, arr:string;\r\n        if (this.owner === undefined) {\r\n            name = this.name;\r\n        }\r\n        else {\r\n            name = this.owner.name;\r\n            arr = this.name;\r\n        }\r\n        let api = await this.getApiFrom();\r\n        let tuids = await api.tuidIds(name, arr, this.waitingIds);\r\n        for (let tuidValue of tuids) {\r\n            if (this.cacheValue(tuidValue) === false) continue;\r\n            this.cacheTuidFieldValues(tuidValue);\r\n            this.afterCacheId(tuidValue);\r\n        }\r\n        await this.cacheDivIds();\r\n    }\r\n    protected async cacheDivIds():Promise<void> {\r\n    }\r\n    async load(id:number):Promise<any> {\r\n        if (id === undefined || id === 0) return;\r\n        let api = await this.getApiFrom();\r\n        let values = await api.tuidGet(this.name, id);\r\n        if (values === undefined) return;\r\n        values._$tuid = this;\r\n        this.cacheValue(values);\r\n        this.cacheTuidFieldValues(values);\r\n        return values;\r\n    }\r\n    protected getDiv(divName:string):TuidDiv {return;}\r\n    private cacheTuidFieldValues(values:any) {\r\n        let {fields, arrs} = this.schema;\r\n        this.cacheFieldsInValue(values, fields);\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs as ArrFields[]) {\r\n                let {name, fields} = arr;\r\n                let arrValues = values[name];\r\n                if (arrValues === undefined) continue;\r\n                let tuidDiv = this.getDiv(name);\r\n                for (let row of arrValues) {\r\n                    row._$tuid = tuidDiv;\r\n                    row.$owner = this.boxId(row.owner);\r\n                    tuidDiv.cacheValue(row);\r\n                    this.cacheFieldsInValue(row, fields);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    private cacheFieldsInValue(values:any, fields:Field[]) {\r\n        for (let f of fields as Field[]) {\r\n            let {name, _tuid} = f;\r\n            if (_tuid === undefined) continue;\r\n            let id = values[name];\r\n            //_tuid.useId(id);\r\n            values[name] = _tuid.boxId(id);\r\n        }\r\n    }\r\n    async save(id:number, props:any) {\r\n        let params = _.clone(props);\r\n        params[\"$id\"] = id;\r\n        let ret = await this.tvApi.tuidSave(this.name, params);\r\n        let {id:retId, inId} = ret;\r\n        if (retId === undefined) {\r\n            params.id = id;\r\n            this.cacheValue(params);\r\n        }\r\n        else if (retId > 0) {\r\n            params.id = retId;\r\n            this.cacheValue(params);\r\n        }\r\n        return ret;\r\n    }\r\n    async search(key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        let ret:any[] = await this.searchArr(undefined, key, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    async searchArr(owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        let {fields} = this.schema;\r\n        let name:string, arr:string;\r\n        if (this.owner !== undefined) {\r\n            name = this.owner.name;\r\n            arr = this.name;\r\n        }\r\n        else {\r\n            name = this.name;\r\n            arr = undefined;\r\n        }\r\n        let api = await this.getApiFrom();\r\n        let ret = await api.tuidSearch(name, arr, owner, key, pageStart, pageSize);\r\n        for (let row of ret) {\r\n            this.cacheFieldsInValue(row, fields);\r\n            if (this.owner !== undefined) row.$owner = this.owner.boxId(row.owner);\r\n        }\r\n        return ret;\r\n    }\r\n    async loadArr(arr:string, owner:number, id:number):Promise<any> {\r\n        if (id === undefined || id === 0) return;\r\n        let api = await this.getApiFrom();\r\n        return await api.tuidArrGet(this.name, arr, owner, id);\r\n    }\r\n    /*\r\n    async loadArrAll(owner:number):Promise<any[]> {\r\n        return this.all = await this.tvApi.tuidGetAll(this.name);\r\n    }*/\r\n    async saveArr(arr:string, owner:number, id:number, props:any) {\r\n        let params = _.clone(props);\r\n        params[\"$id\"] = id;\r\n        return await this.tvApi.tuidArrSave(this.name, arr, owner, params);\r\n    }\r\n    async posArr(arr:string, owner:number, id:number, order:number) {\r\n        return await this.tvApi.tuidArrPos(this.name, arr, owner, id, order);\r\n    }\r\n    \r\n    // cache放到Tuid里面之后，这个函数不再需要公开调用了\r\n    //private async ids(idArr:number[]) {\r\n    //    return await this.tvApi.tuidIds(this.name, idArr);\r\n    //}\r\n    async showInfo(id:number) {\r\n        await this.entities.cUq.showTuid(this, id);\r\n    }\r\n}\r\n\r\nexport class TuidMain extends Tuid {\r\n    get Main() {return this}\r\n    get uqApi() {return this.entities.uqApi};\r\n\r\n    divs: {[name:string]: TuidDiv};\r\n    proxies: {[name:string]: TuidMain};\r\n\r\n    public setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        let {arrs} = schema;\r\n        if (arrs !== undefined) {\r\n            this.divs = {};\r\n            for (let arr of arrs) {\r\n                let {name} = arr;\r\n                let tuidDiv = new TuidDiv(this.entities, name, this.typeId);\r\n                tuidDiv.owner = this;\r\n                this.divs[name] = tuidDiv;\r\n                tuidDiv.setSchema(arr);\r\n            }\r\n        }\r\n    }\r\n    protected getDiv(divName:string):TuidDiv {return this.divs[divName];}\r\n    /* 努力回避async里面的super调用，edge不兼容\r\n    async cacheIds():Promise<void> {\r\n        await super.cacheIds();\r\n        if (this.divs === undefined) return;\r\n        for (let i in this.divs) {\r\n            await this.divs[i].cacheIds();\r\n        }\r\n    }\r\n    */\r\n    protected async cacheDivIds():Promise<void> {\r\n        if (this.divs === undefined) return;\r\n        for (let i in this.divs) {\r\n            await this.divs[i].cacheIds();\r\n        }\r\n    }\r\n\r\n    async cUqFrom(): Promise<CUq> {\r\n        if (this.schemaFrom === undefined) return this.entities.cUq;\r\n        let {owner, uq: uq} = this.schemaFrom;\r\n        let cUq = await this.entities.cUq\r\n        let cApp = cUq.cApp;\r\n        if (cApp === undefined) return cUq;\r\n        let cUqFrm = await cApp.getImportUq(owner, uq);\r\n        if (cUqFrm === undefined) {\r\n            console.error(`${owner}/${uq} 不存在`);\r\n            debugger;\r\n            return cUq;\r\n        }\r\n        let retErrors = await cUqFrm.loadSchema();\r\n        if (retErrors !== undefined) {\r\n            console.error('cUq.loadSchema: ' + retErrors);\r\n            debugger;\r\n            return cUq;\r\n        }\r\n        return cUqFrm;\r\n    }\r\n\r\n    async getApiFrom() {\r\n        let from = await this.from();\r\n        if (from !== undefined) {\r\n            return from.entities.uqApi;\r\n        }\r\n        return this.entities.uqApi;\r\n    }\r\n\r\n    async from(): Promise<TuidMain> {\r\n        let cUq = await this.cUqFrom();\r\n        return cUq.tuid(this.name);\r\n    }\r\n\r\n    async cFrom(): Promise<CTuidMain> {\r\n        let cUq = await this.cUqFrom();\r\n        return cUq.cTuidMainFromName(this.name);\r\n    }\r\n\r\n    async cEditFrom(): Promise<CTuidEdit> {\r\n        let cUq = await this.cUqFrom();\r\n        return cUq.cTuidEditFromName(this.name);\r\n    }\r\n\r\n    async cInfoFrom(): Promise<CTuidInfo> {\r\n        let cUq = await this.cUqFrom();\r\n        return cUq.cTuidInfoFromName(this.name);\r\n    }\r\n\r\n    async cSelectFrom(): Promise<CTuidSelect> {\r\n        let cUq = await this.cUqFrom();\r\n        if (cUq === undefined) return;\r\n        return cUq.cTuidSelectFromName(this.name);\r\n    }\r\n\r\n    protected afterCacheId(tuidValue:any) {\r\n        super.afterCacheId(tuidValue);\r\n        if (this.proxies === undefined) return;\r\n        let {type, $proxy} = tuidValue;\r\n        let pTuid = this.proxies[type];\r\n        pTuid.useId($proxy);\r\n    }\r\n}\r\n\r\nexport class TuidDiv extends Tuid {\r\n    get Main() {return this.owner}\r\n\r\n    async getApiFrom() {\r\n        return await this.owner.getApiFrom();\r\n    }\r\n}\r\n","import {Entity} from './entity';\r\n\r\nexport class Action extends Entity {\r\n    get typeName(): string { return 'action';}\r\n    async submit(data:object) {\r\n        await this.loadSchema();\r\n        let text = this.pack(data);\r\n        return await this.tvApi.action(this.name, {data:text});\r\n    }\r\n}\r\n\r\n","import {observable, IObservableArray} from 'mobx';\r\nimport {Entity} from './entity';\r\nimport { PageItems } from 'tonva-tools';\r\n\r\nexport interface SheetState {\r\n    name: string;\r\n    actions: SheetAction[];\r\n}\r\n\r\nexport interface SheetAction {\r\n    name: string;\r\n}\r\n\r\nexport interface StateCount {\r\n    state: string;\r\n    count: number;\r\n}\r\n\r\nexport class Sheet extends Entity {\r\n    get typeName(): string { return 'sheet';}\r\n    states: SheetState[];\r\n\r\n    /*\r\n    setStates(states: SheetState[]) {\r\n        for (let state of states) {\r\n            this.setStateAccess(this.states.find(s=>s.name==state.name), state);\r\n        }\r\n    }*/\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        this.states = schema.states;\r\n    }\r\n    build(obj:any) {\r\n        this.states = [];\r\n        for (let op of obj.ops) {\r\n            this.states.push({name: op, actions:undefined});\r\n        }\r\n        /*\r\n        for (let p in obj) {\r\n            switch(p) {\r\n                case '#':\r\n                case '$': continue;\r\n                default: this.states.push(this.createSheetState(p, obj[p])); break;\r\n            }\r\n        }*/\r\n    }\r\n    private createSheetState(name:string, obj:object):SheetState {\r\n        let ret:SheetState = {name:name, actions:[]};\r\n        let actions = ret.actions;\r\n        for (let p in obj) {\r\n            let action:SheetAction = {name: p};\r\n            actions.push(action);\r\n        }\r\n        return ret;\r\n    }\r\n    /*\r\n    private setStateAccess(s:SheetState, s1:SheetState) {\r\n        if (s === undefined) return;\r\n        for (let action of s1.actions) {\r\n            let acn = action.name;\r\n            let ac = s.actions.find(a=>a.name === acn);\r\n            if (ac === undefined) continue;\r\n            s.actions.push(action);\r\n        }\r\n    }*/\r\n    async save(discription:string, data:any):Promise<any> {\r\n        await this.loadSchema();\r\n        let {appId} = this.entities;\r\n        let text = this.pack(data);\r\n\r\n        let ret = await this.tvApi.sheetSave(this.name, {app: appId, discription: discription, data:text});\r\n        return ret;\r\n        /*\r\n        let {id, state} = ret;\r\n        if (id > 0) this.changeStateCount(state, 1);\r\n        return ret;\r\n        */\r\n    }\r\n    async action(id:number, flow:number, state:string, action:string) {\r\n        await this.loadSchema();\r\n        return await this.tvApi.sheetAction(this.name, {id:id, flow:flow, state:state, action:action});\r\n    }\r\n    private async unpack(data:any):Promise<any> {\r\n        //if (this.schema === undefined) await this.loadSchema();\r\n        let ret = data[0];\r\n        let brief = ret[0];\r\n        let sheetData = this.unpackSheet(brief.data);\r\n        let flows = data[1];\r\n        return {\r\n            brief: brief,\r\n            data: sheetData,\r\n            flows: flows,\r\n        }\r\n    }\r\n    async getSheet(id:number):Promise<any> {\r\n        await this.loadSchema();\r\n        let ret = await this.tvApi.getSheet(this.name, id);\r\n        if (ret[0].length === 0) return await this.getArchive(id);\r\n        return await this.unpack(ret);\r\n    }\r\n    async getArchive(id:number):Promise<any> {\r\n        await this.loadSchema();\r\n        let ret = await this.tvApi.sheetArchive(this.name, id)\r\n        return await this.unpack(ret);\r\n    }\r\n\r\n    async getArchives(pageStart:number, pageSize:number) {\r\n        await this.loadSchema();\r\n        let ret = await this.tvApi.sheetArchives(this.name, {pageStart:pageStart, pageSize:pageSize});\r\n        return ret;\r\n    }\r\n\r\n    async getStateSheets(state:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        await this.loadSchema();\r\n        let ret = await this.tvApi.stateSheets(this.name, {state:state, pageStart:pageStart, pageSize:pageSize});\r\n        return ret;\r\n    }\r\n    createPageStateItems<T>(): PageStateItems<T> {return new PageStateItems<T>(this);}\r\n\r\n    async stateSheetCount():Promise<StateCount[]> {\r\n        await this.loadSchema();\r\n        let ret:StateCount[] = await this.tvApi.stateSheetCount(this.name);\r\n        return this.states.map(s => {\r\n            let n = s.name, count = 0;\r\n            let r = ret.find(v => v.state === n);\r\n            if (r !== undefined) count = r.count;\r\n            return {state: n, count: count} \r\n        });\r\n    }\r\n}\r\n\r\nexport class PageStateItems<T> extends PageItems<T> {\r\n    private sheet: Sheet;\r\n    constructor(sheet: Sheet) {\r\n        super(true);\r\n        this.sheet = sheet;\r\n        this.pageSize = 10;\r\n    }\r\n    protected async load(param:any, pageStart:any, pageSize:number):Promise<any[]> {\r\n        let ret = await this.sheet.getStateSheets(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:any) {\r\n        this.pageStart = item === undefined? 0 : item.id;\r\n    }\r\n}\r\n","import {observable, IObservableArray} from 'mobx';\r\nimport {Field, ArrFields} from './entities';\r\nimport {Entity} from './entity';\r\n\r\nexport type QueryPageApi = (name:string, pageStart:any, pageSize:number, params:any) => Promise<string>;\r\nexport class Query extends Entity {\r\n    get typeName(): string { return 'query';}\r\n    private pageStart: any;\r\n    private pageSize:number;\r\n    private params:any;\r\n    private more: boolean;\r\n    private startField: Field;\r\n    @observable list:IObservableArray; // = observable.array([], {deep: false});\r\n    returns: ArrFields[];\r\n    isPaged: boolean;\r\n\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        let {returns} = schema;\r\n        this.returns = returns;\r\n        this.isPaged = (returns as any[]).find(v => v.name === '$page') !== undefined;\r\n    }\r\n\r\n    resetPage(size:number, params:any) {\r\n        this.pageStart = undefined;\r\n        this.pageSize = size;\r\n        this.params = params;\r\n        this.more = false;\r\n        this.list = undefined;\r\n    }\r\n    get hasMore() {return this.more;}\r\n    async loadPage():Promise<void> {\r\n        if (this.pageSize === undefined) {\r\n            throw 'call resetPage(size:number, params:any) first';\r\n        }\r\n        let pageStart:any;\r\n        if (this.pageStart !== undefined) {\r\n            switch (this.startField.type) {\r\n                default: pageStart = this.pageStart; break;\r\n                case 'date':\r\n                case 'time':\r\n                case 'datetime': pageStart = (this.pageStart as Date).getTime(); break;\r\n            }\r\n        }\r\n        let page = await this.page(this.params, pageStart, this.pageSize+1);\r\n        /*\r\n        await this.loadSchema();\r\n        let res = await this.tvApi.page(this.name, pageStart, this.pageSize+1, this.params);\r\n        let data = await this.unpackReturns(res);\r\n        let page = data['$page'] as any[];\r\n        */\r\n        this.list = observable.array([], {deep: false});\r\n        if (page !== undefined) {\r\n            if (page.length > this.pageSize) {\r\n                this.more = true;\r\n                page.pop();\r\n                let ret = this.returns.find(r => r.name === '$page');\r\n                this.startField = ret.fields[0];\r\n                this.pageStart = page[page.length-1][this.startField.name];\r\n            }\r\n            else {\r\n                this.more = false;\r\n            }\r\n            this.list.push(...page);\r\n        }\r\n        //this.loaded = true;\r\n    }\r\n\r\n    async page(params:any, pageStart:any, pageSize:number):Promise<any[]> {\r\n        await this.loadSchema();\r\n        let res = await this.tvApi.page(this.name, pageStart, pageSize+1, this.buildParams(params));\r\n        let data = await this.unpackReturns(res);\r\n        return data.$page;// as any[];\r\n    }\r\n    async query(params:any):Promise<any> {\r\n        await this.loadSchema();\r\n        let res = await this.tvApi.query(this.name, this.buildParams(params));\r\n        let data = await this.unpackReturns(res);\r\n        return data;\r\n    }\r\n    async table(params:any): Promise<any[]> {\r\n        let ret = await this.query(params);\r\n        for (let i in ret) {\r\n            return ret[i];\r\n        }\r\n    }\r\n    async obj(params:any):Promise<any> {\r\n        let ret = await this.table(params);\r\n        if (ret.length > 0) return ret[0];\r\n    }\r\n    async scalar(params:any):Promise<any> {\r\n        let ret = await this.obj(params);\r\n        for (let i in ret) return ret[i];\r\n    }\r\n}\r\n","import {Query} from './query';\r\n\r\nexport class Book extends Query {\r\n    get typeName(): string { return 'book';}\r\n    protected queryApiName = 'book';\r\n}\r\n","import {Query} from './query';\r\n\r\nexport class History extends Query {\r\n    get typeName(): string { return 'history';}\r\n    protected queryApiName = 'history';\r\n}\r\n","import { Entity } from './entity';\r\nimport { Action } from './action';\r\nimport { Query } from './query';\r\nimport { Field } from './entities';\r\n\r\ninterface MapActions {\r\n    add: Action;\r\n    del: Action;\r\n}\r\ninterface MapQueries {\r\n    all: Query;\r\n    page: Query;\r\n    query: Query;\r\n}\r\n\r\nexport class Map extends Entity {\r\n    get typeName(): string { return 'map';}\r\n    keys: Field[];\r\n    actions: MapActions = {} as any;\r\n    queries: MapQueries = {} as any;\r\n    schemaFrom: {owner:string; uq:string};\r\n\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        this.schemaFrom = this.schema.from;\r\n        let {actions, queries, keys} = schema;\r\n        this.entities.buildFieldTuid(this.keys = keys);\r\n        //let t = this.schemaStringify();\r\n        for (let i in actions) {\r\n            let schema = actions[i];\r\n            let {name} = schema;\r\n            let action = this.entities.newAction(name, undefined);\r\n            action.setSchema(schema);\r\n            this.actions[i] = action;\r\n        }\r\n        for (let i in queries) {\r\n            let schema = queries[i];\r\n            let {name} = schema;\r\n            let query = this.entities.newQuery(name, undefined);\r\n            query.setSchema(schema);\r\n            this.queries[i] = query;\r\n        }\r\n    }\r\n\r\n    async add(param:any) {\r\n        await this.loadSchema();\r\n        return await this.actions.add.submit(param);\r\n    }\r\n\r\n    async del(param:any) {\r\n        await this.loadSchema();\r\n        return await this.actions.del.submit(param);\r\n    }\r\n\r\n    async all() {\r\n        await this.loadSchema();\r\n        return await this.queries.all.query({});\r\n    }\r\n\r\n    async page(param:any, pageStart:any, pageSize: number) {\r\n        await this.loadSchema();\r\n        return await this.queries.page.page(param, pageStart, pageSize);\r\n    }\r\n\r\n    async query(param:any) {\r\n        await this.loadSchema();\r\n        return await this.queries.query.query(param);\r\n    }\r\n    async table(params:any): Promise<any[]> {\r\n        let ret = await this.query(params);\r\n        for (let i in ret) {\r\n            return ret[i];\r\n        }\r\n    }\r\n    async obj(params:any):Promise<any> {\r\n        let ret = await this.table(params);\r\n        if (ret.length > 0) return ret[0];\r\n    }\r\n    async scalar(params:any):Promise<any> {\r\n        let ret = await this.obj(params);\r\n        for (let i in ret) return ret[i];\r\n    }\r\n}\r\n","import {Query} from './query';\r\n\r\nexport class Pending extends Query {\r\n    get typeName(): string { return 'pending';}\r\n    protected queryApiName = 'pending';\r\n}\r\n","import {TuidMain, Tuid} from './tuid';\r\nimport {Action} from './action';\r\nimport {Sheet, SheetState, SheetAction} from './sheet';\r\nimport {Query} from './query';\r\nimport {Book} from './book';\r\nimport {History} from './history';\r\nimport { UqApi } from 'tonva-tools';\r\nimport { Map } from './map';\r\nimport { Pending } from './pending';\r\nimport { CUq } from '../controllers';\r\n\r\nexport type FieldType = 'tinyint' | 'smallint' | 'int' | 'bigint' | 'dec' | 'char' | 'text' \r\n    | 'datetime' | 'date' | 'time';\r\n\r\nexport function fieldDefaultValue(type:FieldType) {\r\n    switch (type) {\r\n        case 'tinyint':\r\n        case 'smallint':\r\n        case 'int':\r\n        case 'bigint':\r\n        case 'dec':\r\n            return 0;\r\n        case 'char':\r\n        case 'text': \r\n            return '';\r\n        case 'datetime':\r\n        case 'date':\r\n            return '2000-1-1';\r\n        case 'time':\r\n            return '0:00';\r\n    }\r\n}\r\n\r\nexport interface Field {\r\n    name: string;\r\n    type: FieldType;\r\n    tuid?: string;\r\n    arr?: string;\r\n    url?: string;\r\n    null?: boolean;\r\n    size?: number;\r\n    owner?: string;\r\n    _ownerField: Field;\r\n    _tuid: Tuid;\r\n}\r\nexport interface ArrFields {\r\n    name: string;\r\n    fields: Field[];\r\n    id?: string;\r\n    order?: string;\r\n}\r\nexport interface FieldMap {\r\n    [name:string]: Field;\r\n}\r\n\r\nexport class Entities {\r\n    private tuids: {[name:string]: TuidMain} = {};\r\n    private actions: {[name:string]: Action} = {};\r\n    private sheets: {[name:string]: Sheet} = {};\r\n    private queries: {[name:string]: Query} = {};\r\n    private books: {[name:string]: Book} = {};\r\n    private maps: {[name:string]: Map} = {};\r\n    private histories: {[name:string]: History} = {};\r\n    private pendings: {[name:string]: Pending} = {};\r\n    private cacheTimer: any;\r\n    cUq: CUq;\r\n    uqApi: UqApi;\r\n    appId: number;\r\n    uqId: number;\r\n\r\n    constructor(cUq: CUq, uqApi:UqApi, appId: number) {\r\n        this.cUq = cUq;\r\n        this.uqApi = uqApi;\r\n        this.appId = appId;\r\n    }\r\n\r\n    tuid(name:string):TuidMain {return this.tuids[name.toLowerCase()]}\r\n    action(name:string):Action {return this.actions[name.toLowerCase()]}\r\n    sheet(name:string):Sheet {return this.sheets[name.toLowerCase()]}\r\n    query(name:string):Query {return this.queries[name.toLowerCase()]}\r\n    book(name:string):Book {return this.books[name.toLowerCase()]}\r\n    map(name:string):Map {return this.maps[name.toLowerCase()]}\r\n    history(name:string):History {return this.histories[name.toLowerCase()]}\r\n    pending(name:string):Pending {return this.pendings[name.toLowerCase()]}\r\n\r\n    sheetFromTypeId(typeId:number):Sheet {\r\n        for (let i in this.sheets) {\r\n            let sheet = this.sheets[i];\r\n            if (sheet.typeId === typeId) return sheet;\r\n        }\r\n    }\r\n\r\n    tuidArr: TuidMain[] = [];\r\n    actionArr: Action[] = [];\r\n    sheetArr: Sheet[] = [];\r\n    queryArr: Query[] = [];\r\n    bookArr: Book[] = [];\r\n    mapArr: Map[] = [];\r\n    historyArr: History[] = [];\r\n    pendingArr: Pending[] = [];\r\n\r\n    async loadAccess() {\r\n        let accesses = await this.uqApi.loadAccess();\r\n        if (accesses === undefined) return;\r\n        this.buildEntities(accesses);\r\n    }\r\n\r\n    async loadEntities() {\r\n        let accesses = await this.uqApi.loadEntities();\r\n        this.buildEntities(accesses);\r\n    }\r\n\r\n    private buildEntities(entities:any) {\r\n        if (entities === undefined) {\r\n            debugger;\r\n        }\r\n        let {access, tuids} = entities;\r\n        this.buildTuids(tuids);\r\n        this.buildAccess(access);\r\n    }\r\n\r\n    getTuid(name:string, div?:string, tuidUrl?:string): Tuid {\r\n        let tuid = this.tuids[name];\r\n        if (tuid === undefined) return;\r\n        if (div === undefined) return tuid;\r\n        return tuid.divs[div];\r\n    }\r\n\r\n    cacheTuids(defer:number) {\r\n        this.clearCacheTimer();\r\n        this.cacheTimer = setTimeout(this.loadIds, defer);\r\n    }\r\n    private clearCacheTimer() {\r\n        if (this.cacheTimer === undefined) return;\r\n        clearTimeout(this.cacheTimer);\r\n        this.cacheTimer = undefined;\r\n    }\r\n    private loadIds = () => {\r\n        this.clearCacheTimer();\r\n        for (let i in this.tuids) {\r\n            let tuid = this.tuids[i];\r\n            tuid.cacheIds();\r\n        }\r\n    }\r\n\r\n    private buildTuids(tuids:any) {\r\n        let proxyColl = {} as any;\r\n        for (let i in tuids) {\r\n            let schema = tuids[i];\r\n            let {name, typeId, proxies} = schema;\r\n            let tuid = this.newTuid(i, typeId);\r\n            tuid.sys = true;\r\n            //tuid.setSchema(schema);\r\n            if (proxies !== undefined) proxyColl[i] = proxies;\r\n        }\r\n        for (let i in tuids) {\r\n            let schema = tuids[i];\r\n            let {name} = schema;\r\n            let tuid = this.getTuid(i);\r\n            //tuid.sys = true;\r\n            tuid.setSchema(schema);\r\n        }\r\n        for (let i in proxyColl) {\r\n            let proxies:string[] = proxyColl[i];\r\n            let tuid = this.tuids[i];\r\n            tuid.proxies = {};\r\n            for (let p of proxies) {\r\n                tuid.proxies[p] = this.tuids[p];\r\n            }\r\n        }\r\n    }\r\n\r\n    private buildAccess(access:any) {\r\n        for (let a in access) {\r\n            let v = access[a];\r\n            switch (typeof v) {\r\n                case 'string': this.fromType(a, v); break;\r\n                case 'object': this.fromObj(a, v); break;\r\n            }\r\n        }\r\n        /*\r\n        for (let tuid of this.tuidArr) {\r\n            tuid.setProxies(this);\r\n        }*/\r\n    }\r\n\r\n    newAction(name:string, id:number):Action {\r\n        let action = this.actions[name];\r\n        if (action !== undefined) return action;\r\n        action = this.actions[name] = new Action(this, name, id)\r\n        this.actionArr.push(action);\r\n        return action;\r\n    }\r\n    newTuid(name:string, id:number):TuidMain {\r\n        let tuid = this.tuids[name];\r\n        if (tuid !== undefined) return tuid;\r\n        tuid = this.tuids[name] = new TuidMain(this, name, id);\r\n        this.tuidArr.push(tuid);\r\n        return tuid;\r\n    }\r\n    newQuery(name:string, id:number):Query {\r\n        let query = this.queries[name];\r\n        if (query !== undefined) return query;\r\n        query = this.queries[name] = new Query(this, name, id)\r\n        this.queryArr.push(query);\r\n        return query;\r\n    }\r\n    newBook(name:string, id:number):Book {\r\n        let book = this.books[name];\r\n        if (book !== undefined) return book;\r\n        book = this.books[name] = new Book(this, name, id);\r\n        this.bookArr.push(book);\r\n        return book;\r\n    }\r\n    newMap(name:string, id:number):Map {\r\n        let map = this.maps[name];\r\n        if (map !== undefined) return map;\r\n        map = this.maps[name] = new Map(this, name, id)\r\n        this.mapArr.push(map);\r\n        return map;\r\n    }\r\n    newHistory(name:string, id:number):History {\r\n        let history = this.histories[name];\r\n        if (history !== undefined) return;\r\n        history = this.histories[name] = new History(this, name, id)\r\n        this.historyArr.push(history);\r\n        return history;\r\n    }\r\n    newPending(name:string, id:number):Pending {\r\n        let pending = this.pendings[name];\r\n        if (pending !== undefined) return;\r\n        pending = this.pendings[name] = new Pending(this, name, id)\r\n        this.pendingArr.push(pending);\r\n        return pending;\r\n    }\r\n    newSheet(name:string, id:number):Sheet {\r\n        let sheet = this.sheets[name];\r\n        if (sheet !== undefined) return sheet;\r\n        sheet = this.sheets[name] = new Sheet(this, name, id);\r\n        this.sheetArr.push(sheet);\r\n        return sheet;\r\n    }\r\n    private fromType(name:string, type:string) {\r\n        let parts = type.split('|');\r\n        type = parts[0];\r\n        let id = Number(parts[1]);\r\n        switch (type) {\r\n            case 'uq': this.uqId = id; break;\r\n            case 'tuid': \r\n                let tuid = this.newTuid(name, id);\r\n                tuid.sys = false;\r\n                break;\r\n            case 'action': this.newAction(name, id); break;\r\n            case 'query': this.newQuery(name, id); break;\r\n            case 'book': this.newBook(name, id); break;\r\n            case 'map': this.newMap(name, id); break;\r\n            case 'history': this.newHistory(name, id); break;\r\n            case 'sheet':this.newSheet(name, id); break;\r\n            case 'pending': this.newPending(name, id); break;\r\n        }\r\n    }\r\n    private fromObj(name:string, obj:any) {\r\n        switch (obj['$']) {\r\n            case 'sheet': this.buildSheet(name, obj); break;\r\n        }\r\n    }\r\n    private buildSheet(name:string, obj:any) {\r\n        let sheet = this.sheets[name];\r\n        if (sheet === undefined) sheet = this.newSheet(name, obj.id);\r\n        sheet.build(obj);\r\n        /*\r\n        let states = sheet.states;\r\n        for (let p in obj) {\r\n            switch(p) {\r\n                case '#':\r\n                case '$': continue;\r\n                default: states.push(this.createSheetState(p, obj[p])); break;\r\n            }\r\n        }*/\r\n    }\r\n    /*\r\n    private createSheetState(name:string, obj:object):SheetState {\r\n        let ret:SheetState = {name:name, actions:[]};\r\n        let actions = ret.actions;\r\n        for (let p in obj) {\r\n            let action:SheetAction = {name: p};\r\n            actions.push(action);\r\n        }\r\n        return ret;\r\n    }*/\r\n    buildFieldTuid(fields:Field[], mainFields?:Field[]) {\r\n        if (fields === undefined) return;\r\n        for (let f of fields) {\r\n            let {tuid, arr, url} = f;\r\n            if (tuid === undefined) continue;\r\n            f._tuid = this.getTuid(tuid, arr, url);\r\n        }\r\n        for (let f of fields) {\r\n            let {owner} = f;\r\n            if (owner === undefined) continue;\r\n            let ownerField = fields.find(v => v.name === owner);\r\n            if (ownerField === undefined) {\r\n                if (mainFields !== undefined) {\r\n                    ownerField = mainFields.find(v => v.name === owner);\r\n                }\r\n                if (ownerField === undefined) {\r\n                    throw `owner field ${owner} is undefined`;\r\n                }\r\n            }\r\n            f._ownerField = ownerField;\r\n            let {arr, url} = f;\r\n            f._tuid = this.getTuid(ownerField._tuid.name, arr, url);\r\n            if (f._tuid === undefined) throw 'owner field ${owner} is not tuid';\r\n        }\r\n    }\r\n    buildArrFieldsTuid(arrFields:ArrFields[], mainFields:Field[]) {\r\n        if (arrFields === undefined) return;\r\n        for (let af of arrFields) {\r\n            let {fields} = af;\r\n            if (fields === undefined) continue;\r\n            this.buildFieldTuid(fields, mainFields);\r\n        }\r\n    }\r\n}\r\n","export * from './entities';\r\nexport * from './entity';\r\nexport * from './action';\r\nexport * from './query';\r\nexport * from './sheet';\r\nexport * from './tuid';\r\nexport * from './book';\r\nexport * from './map';\r\nexport * from './history';\r\nexport * from './pending';\r\n","import * as React from 'react';\r\nimport {FormView, FormRow, FieldRow, GroupRow, LabelFormRow} from '../formView';\r\nimport {Control, ControlBase, createControl, CreateControl} from '../control';\r\n\r\nexport type CreateRow = (form:FormView, row: FormRow)=>RowContainer;\r\n\r\nexport abstract class RowContainer {\r\n    protected form:FormView;\r\n    protected row: FormRow;\r\n    protected control: ControlBase;\r\n    constructor(form:FormView, row: FormRow) {\r\n        this.form = form;\r\n        this.row = row;\r\n        if ((row as JSX.Element).type === undefined) {\r\n            let cc:CreateControl = (row as LabelFormRow).createControl;\r\n            if (cc === undefined) cc = form.createControl;\r\n            if (cc === undefined) cc = createControl;\r\n            this.control = cc(form, row);\r\n        }\r\n    }\r\n    abstract render(key:string):JSX.Element;\r\n    \r\n    isOk():boolean {\r\n        if (this.control === undefined) return true;\r\n        return this.control.isOk();\r\n    }\r\n\r\n    contains(fieldName:string):boolean {\r\n        let field = (this.row as FieldRow).field;\r\n        if (field !== undefined) return fieldName === field.name;\r\n        let group = (this.row as GroupRow).group;\r\n        if (group !== undefined) return group.find(g => g.field.name === fieldName)!==undefined;\r\n        return false;\r\n    }\r\n    get hasError():boolean {return this.control.hasError;}\r\n    get filled():boolean {return this.control.filled;}\r\n    clear() {\r\n        if (this.control !== undefined) this.control.clear();\r\n    }\r\n    clearErrors() {\r\n        if (this.control !== undefined) this.control.clearErrors();\r\n    }\r\n    readValues(values:any):any {\r\n        if (this.control !== undefined) this.control.readValues(values);\r\n    }\r\n    setError(fieldName:string, error:string) {\r\n        if (this.control !== undefined) this.control.setError(fieldName, error);\r\n    }\r\n    setInitValues(values:any) {\r\n        if (this.control !== undefined) this.control.setInitValues(values);\r\n    }\r\n}\r\n\r\nclass ElementRowContainer extends RowContainer {\r\n    render(key:string):JSX.Element {\r\n        return <div key={key} className=\"form-group\">{this.row as JSX.Element}</div>;\r\n    }\r\n    get hasError():boolean {return false;}\r\n    get filled():boolean {return false;}\r\n}\r\n\r\nclass BootStrapRowContainer extends RowContainer {\r\n    render(key:string):JSX.Element {\r\n        return <div key={key} className='form-group row'>\r\n            <label className='col-sm-2 col-form-label'>\r\n                {(this.row as LabelFormRow).label}\r\n            </label>\r\n            {this.control.render()}\r\n        </div>;\r\n\r\n        //has-success is-valid\r\n    }\r\n}\r\n\r\nexport function bootstrapCreateRow(form:FormView, row: FormRow):RowContainer {\r\n    return new BootStrapRowContainer(form, row);\r\n}\r\n\r\nexport function elementCreateRow(form:FormView, row: FormRow):RowContainer {\r\n    return new ElementRowContainer(form, row);\r\n}\r\n","//import {isDevelopment} from '../local';\r\nimport {HttpChannel} from './httpChannel';\r\n\r\nexport async function refetchApi(channel:HttpChannel, url, options, resolve, reject) {\r\n    await channel.fetch(url, options, resolve, reject);\r\n}\r\n\r\nexport abstract class ApiBase {\r\n    protected token: string;\r\n    protected path: string;\r\n    protected showWaiting: boolean;\r\n\r\n    constructor(path: string, showWaiting: boolean) {\r\n        this.path = path || '';\r\n        this.showWaiting = showWaiting;\r\n    }\r\n\r\n    protected abstract async getHttpChannel(): Promise<HttpChannel>;\r\n\r\n    public async call(url:string, method:string, body:any):Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.callFetch(url, method, body);\r\n    }\r\n\r\n    public async get(path:string, params:any=undefined): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.get(this.path + path, params);\r\n    }\r\n\r\n    public async post(path:string, params:any): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.post(this.path + path, params);\r\n    }\r\n\r\n    public async put(path:string, params:any): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.put(this.path + path, params);\r\n    }\r\n\r\n    public async delete(path:string, params:any): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.delete(this.path + path, params);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport {nav, mobileHeaderStyle} from './nav';\r\nimport { Page } from './page';\r\n\r\nexport interface TitleBarProps {\r\n    back?: 'back' | 'close' | 'none';\r\n    center: string | JSX.Element;\r\n    right?: JSX.Element;\r\n    logout?: boolean | (()=>void);\r\n}\r\nexport interface TitleBarState {\r\n    hasBack: boolean;\r\n}\r\nexport class TitleBar extends React.Component<TitleBarProps, TitleBarState> {\r\n    private navChangeHandler: ()=>void;\r\n    constructor(props) {\r\n        super(props);\r\n        this.navChange = this.navChange.bind(this);\r\n        this.state = {\r\n            hasBack: false,\r\n        };\r\n    }\r\n    navChange() {\r\n        this.setState({\r\n            hasBack: nav.level > 1\r\n        })\r\n    }\r\n    componentWillMount() {\r\n        this.navChange();\r\n        //this.navChangeHandler = nav.events.add('change', this.navChange);\r\n    }\r\n    componentWillUnmount() {\r\n        //nav.events.remove('change', this.navChangeHandler);\r\n    }\r\n    async back() {\r\n        await nav.back(); // 这个才会显示confirm box，在dataForm里面，如果输入了数据的话\r\n    }\r\n    openWindow() {\r\n        window.open(document.location.href);\r\n    }\r\n    private logoutClick = () => {\r\n        nav.push(<Page header=\"安全退出\" back=\"close\">\r\n            <div className=\"m-5 border border-info bg-white rounded p-3 text-center\">\r\n                <div>退出当前账号不会删除任何历史数据，下次登录依然可以使用本账号</div>\r\n                <div className=\"mt-3\">\r\n                    <button className=\"btn btn-danger\" onClick={()=>this.logout()}>退出</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n    }\r\n    private logout() {\r\n        let {logout} = this.props;\r\n        if (typeof logout === 'function') {\r\n            logout(); \r\n        }\r\n        nav.logout();\r\n    }\r\n    render() {\r\n        let b = this.state.hasBack || self != top;\r\n        let {right, center, logout} = this.props;\r\n        let back, pop, debugLogout;\r\n        if (logout !== undefined && self === top) {\r\n            if (typeof logout === 'boolean' && logout === true\r\n                || typeof logout === 'function')\r\n            {\r\n                let {nick, name} = nav.user;\r\n                debugLogout = <div className=\"d-flex align-items-center\">\r\n                    <small className=\"text-light\">{nick || name}</small>\r\n                    <a className=\"dropdown-toggle btn btn-secondary btn-sm ml-2\"\r\n                        role=\"button\"\r\n                        onClick={this.logoutClick}>\r\n                        <i className=\"fa fa-sign-out\" />\r\n                    </a>\r\n                </div>;\r\n            }\r\n        }\r\n        if (b) {\r\n            switch (this.props.back) {\r\n                case 'none': back = undefined; break;\r\n                default:\r\n                case 'back': back = <nav onClick={this.back}><i className=\"fa fa-arrow-left\" /></nav>; break;\r\n                case 'close': back = <nav onClick={this.back}><i className=\"fa fa-close\" /></nav>; break;\r\n            }\r\n        }\r\n        if (self != top) {\r\n            console.log(document.location.href);\r\n            pop = <header onClick={this.openWindow} />;\r\n        }\r\n        let rightView;\r\n        if (right || debugLogout) rightView = <aside>{right} {debugLogout}</aside>;\r\n        return (\r\n        <header style={mobileHeaderStyle}>\r\n            {pop}\r\n            {back}\r\n            <div>{center}</div>\r\n            {rightView}\r\n        </header>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { jsonStringify } from '../../tools';\r\n\r\nexport const DefaultRow = (values) => <div className=\"px-3 py-2\">{jsonStringify(values)}</div>;\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { List, FA } from 'tonva-react-form';\r\nimport { Page, nav } from 'tonva-tools';\r\nimport { TuidMain, Query, Entity } from '../../entities';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { QueryUI, CQuery } from './cQuery';\r\nimport { DefaultRow } from './defaultRow';\r\n\r\nexport class VQueryMain extends VEntity<Query, QueryUI, CQuery> {\r\n    protected vForm: VForm;\r\n    private row: React.StatelessComponent;\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        let {row, queryRow} = this.ui;\r\n        this.row = queryRow || row || DefaultRow;\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSubmit = async () => {\r\n        let params = this.vForm.getValues();\r\n        if (this.entity.isPaged === true) {\r\n            await this.entity.resetPage(30, params);\r\n            await this.entity.loadPage();\r\n            this.replacePage(this.pageResult);\r\n        }\r\n        else {\r\n            let data = await this.entity.query(params);\r\n            this.replacePage(this.queryResult, data);\r\n        }\r\n    }\r\n\r\n    again = () => {\r\n        this.vForm.reset();\r\n        this.replacePage(this.view);\r\n    }\r\n\r\n    renderExtra() {\r\n        return;\r\n    }\r\n\r\n    renderRow = (item:any, index:number) => <this.row {...item} />;\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render('mx-3 my-2')}\r\n        {this.renderExtra()}\r\n    </Page>;\r\n\r\n    protected pageResult = () => {\r\n        let {name, list} = this.entity;\r\n        let rightClose = <button\r\n            className=\"btn btn-outline-success\"\r\n            onClick={this.again}>\r\n            <FA name=\"search\" /> 再查询\r\n        </button>;\r\n        return <Page header={this.label} right={rightClose}>\r\n            <List items={list} item={{render: this.renderRow}} />\r\n        </Page>;\r\n    }\r\n\r\n    protected queryResult = observer((result:any) => {\r\n        let rightClose = <button\r\n            className=\"btn btn-outline-success\"\r\n            onClick={this.again}>\r\n            <FA name=\"search\" /> 再查询\r\n        </button>;\r\n        return <Page header={this.label} right={rightClose}>\r\n            <pre>{JSON.stringify(result, undefined, '\\t')}</pre>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport { FA, SearchBox, List } from 'tonva-react-form';\r\nimport { Page, PageItems } from 'tonva-tools';\r\nimport { Query } from '../../entities';\r\nimport { VEntity } from '../CVEntity';\r\nimport { QueryUI, CQuerySelect } from './cQuery';\r\nimport { DefaultRow } from './defaultRow';\r\n\r\nexport class VQuerySelect extends VEntity<Query, QueryUI, CQuerySelect> {\r\n    private row: React.StatelessComponent;\r\n\r\n    PageItems:QueryPageItems;\r\n    ownerId: number;\r\n\r\n    async open(param?:any) {\r\n        let {row, selectRow} = this.ui;\r\n        this.row = selectRow || row || DefaultRow;\r\n        //this.entity = this.controller.entity;\r\n        this.PageItems = new QueryPageItems(this.entity);\r\n        await this.onSearch(param);\r\n        this.openPage(this.view);\r\n    }\r\n    onSearch = async (key:string) => {\r\n        await this.PageItems.first(key);\r\n    }\r\n\r\n    renderRow = (item:any, index:number) => <this.row {...item} />;\r\n\r\n    private callOnSelected(item:any) {\r\n       this.closePage();\r\n       this.returnCall(item);\r\n    }\r\n    clickRow = (item:any) => {\r\n        this.callOnSelected(item);\r\n    }\r\n\r\n    view = () => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\r\n        return <Page header={header}>\r\n            <List\r\n                items={this.PageItems.items}\r\n                item={{render: this.renderRow, onClick: this.clickRow}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    };\r\n}\r\n\r\nexport class QueryPageItems extends PageItems<any> {\r\n    private query: Query;\r\n    constructor(query: Query) {\r\n        super();\r\n        this.query = query;\r\n    }\r\n    protected async load():Promise<any[]> {\r\n        await  this.query.loadSchema();\r\n        let ret:any[];\r\n        if (this.query.isPaged === true)\r\n            ret = await this.query.page(this.param, this.pageStart, this.pageSize);\r\n        else {\r\n            let data = await this.query.query(this.param);\r\n            //let data = await this.query.unpackReturns(res);\r\n            ret = data[this.query.returns[0].name];\r\n        }\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:any) {\r\n        if (item === undefined) this.pageStart = 0;\r\n    }\r\n}\r\n","import { StatelessComponent } from \"react\";\r\nimport { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Query } from \"../../entities\";\r\nimport { VQueryMain } from \"./vQueryMain\";\r\nimport { VQuerySelect } from \"./vQuerySelect\";\r\n\r\nexport interface QueryUI extends EntityUI {\r\n    CQuery?: typeof CQuery;\r\n    CQuerySelect?: typeof CQuerySelect;\r\n    main?: typeof VQueryMain;\r\n    row?: StatelessComponent;\r\n    queryRow?: StatelessComponent;\r\n    selectRow?: StatelessComponent;\r\n}\r\n\r\nexport abstract class CQueryBase extends CEntity<Query, QueryUI> {\r\n}\r\n\r\nexport class CQuery extends CQueryBase {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VQueryMain);\r\n    }\r\n\r\n    protected get VQueryMain():typeof VQueryMain {return this.ui && this.ui.main || VQueryMain}\r\n}\r\n\r\nexport class CQuerySelect extends CQueryBase {\r\n    protected async internalStart(param?:any) {\r\n        await this.openVPage(this.VQuerySelect, param);\r\n    }\r\n\r\n    protected get VQuerySelect():typeof VQuerySelect {return VQuerySelect}\r\n}\r\n","export * from './cQuery';\r\nexport * from './vQueryMain';\r\nexport * from './vQuerySelect';","import * as React from 'react';\r\n\r\nexport function Loading() {\r\n    return <div style={{height:'100%'}} className=\"d-flex flex-fill align-items-center justify-content-center\">\r\n    <div className=\"d-flex align-items-center justify-content-center slide text-info\" style={{width:'5em', height:'2em'}}>\r\n        加载中...\r\n    </div>\r\n    </div>\r\n}\r\n","export * from './rule';\r\nexport * from './field';\r\nexport * from './face';\r\nexport * from './rowContainer';\r\nexport * from './formView';\r\nexport * from './TonvaForm';\r\nexport {ControlBase} from './control';\r\n","import * as React from 'react';\r\nimport {FormEvent} from 'react';\r\nimport {computed} from 'mobx';\r\nimport {uid} from '../uid';\r\nimport {Rule} from './rule';\r\nimport {Field} from './field';\r\nimport {Face} from './face';\r\nimport {CreateControl, ButtonsControl} from './control';\r\nimport {RowContainer, CreateRow, bootstrapCreateRow, elementCreateRow} from './rowContainer';\r\n\r\nexport interface FieldView {\r\n    field: Field;\r\n    face?: Face;\r\n}\r\n\r\nexport interface LabeledRow {\r\n    label?: string;\r\n    createRow?: CreateRow;\r\n    createControl?: CreateControl;\r\n    help?: JSX.Element;\r\n}\r\n\r\nexport interface FieldRow extends LabeledRow, FieldView {\r\n}\r\n\r\nexport interface GroupRow extends LabeledRow {\r\n    group: FieldView[];\r\n}\r\n\r\nexport type LabelFormRow = FieldRow|GroupRow|LabeledRow;\r\nexport type FormRow = LabelFormRow|JSX.Element;\r\n\r\nexport interface SubmitResult {\r\n    success: boolean;\r\n    message?: string\r\n    result?: any;\r\n}\r\n\r\nexport interface FormProps {\r\n    formRows: FormRow[];\r\n    //context?: any;              // form context，比如，可以是EntitiesUI\r\n    rules?: Rule | Rule[];\r\n    onSubmit: (values:any) => Promise<SubmitResult|undefined>;\r\n    submitButton?: string|JSX.Element;\r\n    otherButton?: string|JSX.Element;\r\n    onOther?: (values:any) => void;\r\n    createRow?: CreateRow;\r\n    createControl?: CreateControl;\r\n    readOnly?: boolean;\r\n}\r\n\r\nexport class FormView {\r\n    uid:string;\r\n    private rows: RowContainer[] = [];\r\n    private buttonsRow: RowContainer;\r\n    props: FormProps;\r\n    createControl?: CreateControl;\r\n    constructor(props:FormProps) {\r\n        this.uid = uid();\r\n        this.props = props;\r\n        this.buildRows(props);\r\n        this.createControl = props.createControl;\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    @computed get hasError():boolean {\r\n        let ret = this.rows.map((v, index) => index + ': ' + v.hasError + '\\n');\r\n        console.log(ret);\r\n        return this.rows.some(row => row.hasError);\r\n    }\r\n    @computed get nothing():boolean {\r\n        let ret = this.rows.every(row => !row.filled);\r\n        return ret;\r\n    }\r\n\r\n    readValues():any {\r\n        let values = {} as any;\r\n        for (let row of this.rows) {\r\n            row.readValues(values);\r\n        }\r\n        return values;\r\n    }\r\n\r\n    clear() {\r\n        for (let row of this.rows) {\r\n            row.clear();\r\n        }\r\n    }\r\n\r\n    clearErrors() {\r\n        for (let row of this.rows) {\r\n            row.clearErrors();\r\n        }\r\n    }\r\n\r\n    setError(fieldName:string, error:string) {\r\n        for (let row of this.rows) {\r\n            row.setError(fieldName, error);\r\n        }\r\n    }\r\n\r\n    setInitValues(initValues:any) {\r\n        if (initValues === undefined) return;\r\n        for (let row of this.rows) {\r\n            row.setInitValues(initValues);\r\n        }\r\n    }\r\n\r\n    private buildRows(props:FormProps) {\r\n        let {formRows, createRow} = props;\r\n        if (formRows !== undefined) {\r\n            for (let row of formRows) {\r\n                this.rows.push(this.buildRow(row, createRow));\r\n            }\r\n            if (this.props.readOnly !== true) {\r\n                this.buttonsRow = this.buildRow({createControl:this.createButtons.bind(this)}, undefined);\r\n            }\r\n        }\r\n        else {\r\n            this.rows.push(elementCreateRow(this, <div className=\"text-warning\">TonvaForm need formRows defined</div>));\r\n        }\r\n    }\r\n\r\n    private buildRow(formRow: FormRow, formRowCreator: CreateRow):RowContainer {\r\n        let createRow:CreateRow;\r\n        let type = (formRow as JSX.Element).type;\r\n        if (type !== undefined) {\r\n            createRow = elementCreateRow;\r\n        }\r\n        else {\r\n            createRow = (formRow as (FieldRow | GroupRow | LabeledRow)).createRow;\r\n            if (createRow === undefined) {\r\n                createRow = formRowCreator;\r\n                if (createRow === undefined) createRow = bootstrapCreateRow;\r\n            }\r\n        }\r\n        let row = createRow(this, formRow);\r\n        return row;\r\n    }\r\n\r\n    private createButtons(form:FormView, row: FormRow) {\r\n        return new ButtonsControl(form);\r\n    }\r\n\r\n    private isOk():boolean {\r\n        let isOk = true;\r\n        for (let row of this.rows) {\r\n            if (!row.isOk()) isOk = false;\r\n        }\r\n        return isOk;\r\n    }\r\n\r\n    render():JSX.Element {\r\n        return <form onSubmit={this.onSubmit}>\r\n            {this.rows.map((row,index) => row.render(this.uid + index))}\r\n            {this.buttons()}\r\n        </form>;\r\n    }\r\n\r\n    buttons():JSX.Element {\r\n        if (this.buttonsRow === undefined) return;\r\n        return this.buttonsRow.render(this.uid + this.rows.length);\r\n    }\r\n    \r\n    async onSubmit(event:FormEvent<HTMLFormElement>) {\r\n        event.preventDefault();\r\n        if (!this.isOk()) return;\r\n        let values = this.readValues();\r\n        await this.props.onSubmit(values);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { Page, loadAppUqs, nav, meInFrame, Controller, TypeVPage, VPage, resLang} from 'tonva-tools';\r\nimport { List, LMR, FA } from 'tonva-react-form';\r\nimport { CUq, EntityType, UqUI } from './uq';\r\nimport { centerApi } from '../centerApi';\r\n\r\nexport interface AppUI {\r\n    CApp?: typeof CApp;\r\n    CUq?: typeof CUq;\r\n    main?: TypeVPage<CApp>;\r\n    uqs: {[uq:string]: UqUI};\r\n    res?: any;\r\n}\r\n\r\nexport class CApp extends Controller {\r\n    private appOwner:string;\r\n    private appName:string;\r\n    private isProduction:boolean;\r\n    private cImportUqs: {[uq:string]: CUq} = {};\r\n    protected ui:AppUI;\r\n    id: number;\r\n    appUnits:any[];\r\n\r\n    constructor(tonvaApp:string, ui?:AppUI) {\r\n        super(resLang(ui && ui.res));\r\n        let parts = tonvaApp.split('/');\r\n        if (parts.length !== 2) {\r\n            throw 'tonvaApp name must be / separated, owner/app';\r\n        }\r\n        this.appOwner = parts[0];\r\n        this.appName = parts[1];\r\n        this.ui = ui || {uqs:{}};\r\n        this.caption = this.res.caption || 'Tonva';\r\n    }\r\n    \r\n    readonly caption: string; // = 'View Model 版的 Uq App';\r\n    cUqCollection: {[uq:string]: CUq} = {};\r\n\r\n    async startDebug() {\r\n        let appName = this.appOwner + '/' + this.appName;\r\n        let cApp = new CApp(appName, {uqs:{}} );\r\n        let keepNavBackButton = true;\r\n        await cApp.start(keepNavBackButton);    \r\n    }\r\n\r\n    protected async loadUqs(): Promise<string[]> {\r\n        let retErrors:string[] = [];\r\n        let unit = meInFrame.unit;\r\n        let app = await loadAppUqs(this.appOwner, this.appName);\r\n        let {id, uqs} = app;\r\n        this.id = id;\r\n\r\n        let promises: PromiseLike<string>[] = [];\r\n        let promiseChecks: PromiseLike<boolean>[] = [];\r\n        for (let appUq of uqs) {\r\n            let {id:uqId, uqOwner, uqName, url, urlDebug, ws, access, token} = appUq;\r\n            let uq = uqOwner + '/' + uqName;\r\n            let ui = this.ui && this.ui.uqs && this.ui.uqs[uq];\r\n            let cUq = this.newCUq(uq, uqId, access, ui || {});\r\n            this.cUqCollection[uq] = cUq;\r\n            promises.push(cUq.loadSchema());\r\n            promiseChecks.push(cUq.entities.uqApi.checkAccess());\r\n        }\r\n        let results = await Promise.all(promises);\r\n        Promise.all(promiseChecks).then((checks) => {\r\n            for (let c of checks) {\r\n                if (c === false) {\r\n                    nav.start();\r\n                    return;\r\n                }\r\n            }\r\n        });\r\n        for (let result of results)\r\n        {\r\n            let retError = result; // await cUq.loadSchema();\r\n            if (retError !== undefined) {\r\n                retErrors.push(retError);\r\n                continue;\r\n            }\r\n        }\r\n        if (retErrors.length === 0) return;\r\n        return retErrors;\r\n    }\r\n\r\n    async getImportUq(uqOwner:string, uqName:string):Promise<CUq> {\r\n        let uq = uqOwner + '/' + uqName;\r\n        let cUq = this.cImportUqs[uq];\r\n        if (cUq !== undefined) return cUq;\r\n        let ui = this.ui && this.ui.uqs && this.ui.uqs[uq];\r\n        let uqId = -1; // unknown\r\n        this.cImportUqs[uq] = cUq = this.newCUq(uq, uqId, undefined, ui || {});\r\n        let retError = await cUq.loadSchema();\r\n        if (retError !== undefined) {\r\n            console.error(retError);\r\n            debugger;\r\n            return;\r\n        }\r\n        return cUq;\r\n    }\r\n\r\n    protected newCUq(uq:string, uqId:number, access:string, ui:any) {\r\n        let cUq = new (this.ui.CUq || CUq)(this, uq, this.id, uqId, access, ui);        \r\n        Object.setPrototypeOf(cUq.x, this.x);\r\n        return cUq;\r\n    }\r\n\r\n    get cUqArr():CUq[] {\r\n        let ret:CUq[] = [];\r\n        for (let i in this.cUqCollection) {\r\n            ret.push(this.cUqCollection[i]);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    getCUq(apiName:string):CUq {\r\n        return this.cUqCollection[apiName];\r\n    }\r\n\r\n    protected get VAppMain():TypeVPage<CApp> {return (this.ui&&this.ui.main) || VAppMain}\r\n    protected async beforeStart():Promise<boolean> {\r\n        //if (await super.beforeStart() === false) return false;\r\n        try {\r\n            let hash = document.location.hash;\r\n            if (hash.startsWith('#tvdebug')) {\r\n                this.isProduction = false;\r\n                //await this.showMainPage();\r\n                //return;\r\n            }\r\n            else {\r\n                this.isProduction = hash.startsWith('#tv');\r\n            }\r\n            let {unit} = meInFrame;\r\n            if (this.isProduction === false && (unit===undefined || unit<=0)) {\r\n                let app = await loadAppUqs(this.appOwner, this.appName);\r\n                let {id} = app;\r\n                this.id = id;\r\n                await this.loadAppUnits();\r\n                switch (this.appUnits.length) {\r\n                    case 0:\r\n                        this.showUnsupport();\r\n                        return false;\r\n                    case 1:\r\n                        unit = this.appUnits[0].id;\r\n                        if (unit === undefined || unit < 0) {\r\n                            this.showUnsupport();\r\n                            return false;\r\n                        }\r\n                        meInFrame.unit = unit;\r\n                        break;\r\n                    default: \r\n                        //nav.clear();\r\n                        nav.push(<this.selectUnitPage />)\r\n                        return false;\r\n                }\r\n            }\r\n\r\n            let retErrors = await this.loadUqs();\r\n            if (retErrors !== undefined) {\r\n                this.openPage(<Page header=\"ERROR\">\r\n                    <div className=\"m-3\">\r\n                        <div>Load Uqs 发生错误：</div>\r\n                        {retErrors.map((r, i) => <div key={i}>{r}</div>)}\r\n                    </div>\r\n                </Page>);\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        catch (err) {\r\n            nav.push(<Page header=\"App start error!\">\r\n                <pre>\r\n                    {typeof err === 'string'? err : err.message}\r\n                </pre>\r\n            </Page>);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    protected async internalStart(param:any) {\r\n        if (param !== true) {\r\n            this.clearPrevPages();\r\n        }\r\n        await this.showMainPage();\r\n    }\r\n    async load() {\r\n        await this.beforeStart();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        return this.renderView(this.VAppMain);\r\n    }\r\n\r\n    // 如果是独立app，删去显示app之前的页面。\r\n    // 如果非独立app，则不删\r\n    protected clearPrevPages() {\r\n        nav.clear();\r\n    }\r\n\r\n    private showUnsupport() {\r\n        this.clearPrevPages();\r\n        this.openPage(<Page header=\"APP无法运行\" logout={true}>\r\n            <div className=\"m-3 text-danger container\">\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-2\">\r\n                        <FA name=\"exclamation-triangle\" />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        用户不支持APP\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-2\">用户: </div>\r\n                    <div className=\"col\">{`${nav.user.name}`}</div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-2\">App:</div>\r\n                    <div className=\"col\">{`${this.appOwner}/${this.appName}`}</div>\r\n                </div>\r\n            </div>\r\n        </Page>)\r\n    }\r\n\r\n    private async showMainPage() {\r\n        // #tvRwPBwMef-23-sheet-api-108\r\n        let parts = document.location.hash.split('-');\r\n        if (parts.length > 2) {\r\n            let action = parts[2];\r\n            // sheet_debug 表示centerUrl是debug方式的\r\n            if (action === 'sheet' || action === 'sheet_debug') {\r\n                let uqId = Number(parts[3]);\r\n                let sheetTypeId = Number(parts[4]);\r\n                let sheetId = Number(parts[5]);\r\n                let cUq = this.getCUqFromId(uqId);\r\n                if (cUq === undefined) {\r\n                    alert('unknown uqId: ' + uqId);\r\n                    return;\r\n                }\r\n                this.clearPrevPages();\r\n                await cUq.navSheet(sheetTypeId, sheetId);\r\n                return;\r\n            }\r\n        }\r\n        this.openVPage(this.VAppMain);\r\n    }\r\n\r\n    private getCUqFromId(uqId:number): CUq {\r\n        for (let i in this.cUqCollection) {\r\n            let cUq = this.cUqCollection[i];\r\n            if (cUq.id === uqId) return cUq;\r\n        }\r\n        return;\r\n    }\r\n\r\n    private async loadAppUnits() {\r\n        let ret = await centerApi.userAppUnits(this.id);\r\n        this.appUnits = ret;\r\n        if (ret.length === 1) {\r\n            meInFrame.unit = ret[0].id;\r\n        }\r\n    }\r\n\r\n    renderRow = (item: any, index: number):JSX.Element => {\r\n        let {id, nick, name} = item;\r\n        return <LMR className=\"px-3 py-2\" right={'id: ' + id}>\r\n            <div>{nick || name}</div>\r\n        </LMR>;\r\n    }\r\n    onRowClick = async (item: any) => {\r\n        meInFrame.unit = item.id; // 25;\r\n        await this.start();\r\n    }\r\n\r\n    protected selectUnitPage = () => {\r\n        return <Page header=\"选择小号\" logout={true}>\r\n            <List items={this.appUnits} item={{render: this.renderRow, onClick: this.onRowClick}}/>\r\n        </Page>\r\n    }\r\n}\r\n\r\nclass VAppMain extends VPage<CApp> {\r\n    async open(param?:any) {\r\n        this.openPage(this.appPage);\r\n    }\r\n\r\n    render(param?:any) {\r\n        return this.appContent();\r\n    }\r\n\r\n    protected appPage() {\r\n        let {caption} = this.controller;\r\n        return <Page header={caption} logout={()=>{meInFrame.unit = undefined}}>\r\n            {this.appContent()}\r\n        </Page>;\r\n    }\r\n\r\n    protected appContent = () => {\r\n        let {cUqArr} = this.controller;\r\n        let content:any;\r\n        if (cUqArr.length === 0) {\r\n            content = <div className=\"text-danger\">\r\n                <FA name=\"\" /> 此APP没有绑定任何的UQ\r\n            </div>;\r\n        }\r\n        else {\r\n            content = cUqArr.map((v,i) => <div key={i}>{v.render()}</div>);\r\n        }\r\n        return <>{content}</>;\r\n    };\r\n}\r\n","import React from 'react';\r\nimport { FA } from \"tonva-react-form\";\r\n\r\nfunction icon(className:string, name:string) {\r\n    return <FA className={className} name={name} fixWidth={true} />;\r\n}\r\n/*\r\nexport interface EntityRes {\r\n    caption: string;\r\n    icon: JSX.Element;\r\n}\r\n*/\r\n\r\nexport const entityIcons:{[type:string]:JSX.Element} = {\r\n    tuid: icon('text-info', 'list-alt'),\r\n    action: icon('text-info', 'hand-o-right'),\r\n    map: icon('text-muted', 'list-ul'),\r\n    book: icon('text-muted', 'book'),\r\n    query: icon('text-warning', 'search'),\r\n    history: icon('text-info', 'hand-o-right'),\r\n    pending: icon('text-info', 'forward'),\r\n    sheet: icon('text-primary', 'wpforms'),\r\n};\r\n","import { Controller } from \"tonva-tools\";\r\nimport { CUq } from \"./uq\";\r\n\r\nexport abstract class ControllerUq extends Controller {\r\n    constructor(cUq: CUq, res:any) {\r\n        super(res);\r\n        this.cUq = cUq;\r\n    }\r\n    cUq: CUq;\r\n}\r\n","import {CenterApi as CenterApiBase} from 'tonva-tools';\r\n\r\n//\r\n\r\nexport class CenterApi extends CenterApiBase {\r\n    async userAppUnits(app:number):Promise<any[]> {\r\n        return await this.get('tie/user-app-units', {app:app});\r\n    }\r\n}\r\n\r\nexport const centerApi = new CenterApi('tv/', undefined);\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Page } from 'tonva-tools';\r\nimport { List, Muted, LMR } from 'tonva-react-form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../entities';\r\nimport { CSheet, SheetUI } from './cSheet';\r\n\r\nexport class VSheetMain extends VEntity<Sheet, SheetUI, CSheet> {\r\n    async open() {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    newClick = () => this.event('new');\r\n    schemaClick = () => this.event('schema'); \r\n    archivesClick = () => this.event('archives');\r\n    sheetStateClick = (state) => this.event('state', state);\r\n\r\n    renderState = (item:any, index:number) => {\r\n        let {state, count} = item;\r\n        if (count === 0) return null;\r\n        let badge = <span className=\"badge badge-success ml-5 align-self-end\">{count}</span>;\r\n        return <LMR className=\"px-3 py-2\" left={this.controller.getStateLabel(state)} right={badge} />;\r\n    }\r\n\r\n    protected view = observer(() => {\r\n        let list = this.controller.statesCount.filter(row=>row.count);\r\n        let right = <button className=\"btn btn-outline-primary\" onClick={this.archivesClick}>已归档</button>;\r\n        let templet:any;\r\n        if (this.isDev === true) {\r\n            templet = <button className=\"btn btn-primary mr-2\" color=\"primary\" onClick={this.schemaClick}>模板</button>;\r\n        }\r\n        return <Page header={this.label}>\r\n            <LMR\r\n                className=\"mx-3 my-2\"\r\n                right={right}>\r\n                <button className=\"btn btn-primary mr-2\" color=\"primary\" onClick={this.newClick}>新建</button>\r\n                {templet}\r\n            </LMR>\r\n            <List className=\"my-2\"\r\n                header={<Muted className=\"mx-3 my-1\">待处理{this.label}</Muted>}\r\n                none=\"[ 无 ]\"\r\n                items={list}\r\n                item={{render:this.renderState, onClick:this.sheetStateClick}} />\r\n        </Page>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport { FA } from 'tonva-react-form';\r\nimport { Sheet } from '../../entities';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { SheetUI, CSheet } from './cSheet';\r\n\r\nexport class VSheetNew extends VEntity<Sheet, SheetUI, CSheet> {\r\n    vForm: VForm;\r\n\r\n    async open(param?:any) {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    private onSubmit = async ():Promise<void> => {\r\n        let values = this.vForm.getValues();\r\n        let valuesWithBox = this.vForm.values;\r\n        //let ret = \r\n        await this.controller.onSave(values, valuesWithBox);\r\n        /*\r\n        this.ceasePage();\r\n        //this.openPage(this.finishedPage);\r\n        await this.controller.showSaved(ret);\r\n        */\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render()}\r\n    </Page>;\r\n}\r\n","import * as React from 'react';\r\nimport {List, Muted, LMR, EasyDate, FA} from 'tonva-react-form';\r\nimport { Sheet } from '../../entities';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CSheet, SheetUI, SheetData } from './cSheet';\r\n\r\nconst leftFlowStyle = {width: '8rem'};\r\n\r\nexport abstract class VSheetView extends VEntity<Sheet, SheetUI, CSheet> {\r\n    protected vForm: VForm;\r\n    protected sheetData: SheetData;\r\n    //data: any;\r\n    //state: string;\r\n    //flows:any[];\r\n\r\n    flowRow = (item:any, index:number):JSX.Element => {\r\n        let {date, user, preState, state, action} = item;\r\n        if (action === undefined) action = <><FA className=\"text-primary\" name=\"pencil-square-o\" /> 制单</>;\r\n        let to;\r\n        switch (state) {\r\n            case '$': break;\r\n            case '#': to = <><FA className=\"text-success\" name=\"file-archive-o\" /></>; break;\r\n            default: to = <><FA className=\"text-muted\" name=\"arrow-right\" /> &nbsp; {state}</>; break;\r\n        }\r\n        /*\r\n        return <div className=\"row\">\r\n            <div className=\"col-sm\"></div>\r\n            <div className=\"col-sm\"><div className=\"p-2\">{to}</div></div>\r\n            <div className=\"col-sm text-right\"><div className=\"p-2\"><Muted><EasyDate date={date} /></Muted></div></div>\r\n        </div>;\r\n        */\r\n        return <LMR \r\n            left={<div className=\"pl-3 py-2\" style={leftFlowStyle}>{action}</div>}\r\n            right={<div className=\"p-2\"><Muted><EasyDate date={date} /></Muted></div>}>\r\n            <div className=\"p-2\">{to}</div>\r\n        </LMR>;\r\n    }\r\n\r\n    protected sheetView = () => {\r\n        let {brief, flows} = this.sheetData;\r\n        let removed;\r\n        if (brief.state === '-')\r\n            removed = <div className=\"mx-3 my-2\" style={{color:'red'}}>本单据作废</div>;\r\n        return <div>\r\n            {removed}\r\n            {this.vForm.render()}\r\n    \r\n            <List header={<Muted className=\"mx-3 my-1\">流程</Muted>}\r\n                items={flows}\r\n                item={{render:this.flowRow}}/>\r\n        </div>;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport { VForm, FormMode } from '../form';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\n\r\nexport class VSheetEdit extends VSheetView { //VEntity<Sheet, SheetUI, CSheet> {\r\n    protected sheetData: SheetData;\r\n    async open(param: SheetData) {\r\n        this.sheetData = param;\r\n        this.vForm = this.createForm(this.onSubmit, param.data, FormMode.edit);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSubmit = async ():Promise<void> => {\r\n        let values = this.vForm.getValues();\r\n        await this.controller.saveSheet(values, this.vForm.values);\r\n        this.closePage();\r\n        this.returnCall(this.vForm.values);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render()}\r\n    </Page>;\r\n}\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport { nav, Page } from 'tonva-tools';\r\nimport { FA } from 'tonva-react-form';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\n\r\nexport class VSheetAction extends VSheetView { \r\n    async open(sheetData:SheetData) {\r\n        this.sheetData = sheetData;\r\n        //let {brief, data, flows} = await this.controller.getSheetData(sheetId);\r\n        //this.brief = brief;\r\n        //this.flows = flows;\r\n        //this.data = data;\r\n        //this.state = this.brief.state;\r\n        this.vForm = this.createForm(undefined, sheetData.data);\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    actionClick = async (action:any) => {\r\n        let {id, flow, state} = this.sheetData.brief;\r\n        let res = await this.controller.action(id, flow, state, action.name);\r\n        this.ceasePage();\r\n        this.openPage(this.acted);\r\n        //alert(jsonStringify(res));\r\n        //await this.backPage();\r\n    }\r\n\r\n    deleteClick = async () => {\r\n        alert('单据作废：程序正在设计中');\r\n    }\r\n\r\n    editClick = async () => {\r\n        //alert('修改单据：程序正在设计中');\r\n        let values = await this.controller.editSheet(this.sheetData);\r\n        this.vForm.setValues(values);\r\n    }\r\n\r\n    protected page = () => {\r\n        let {brief} = this.sheetData;\r\n        let {state, no} = brief;\r\n        let stateLabel = this.controller.getStateLabel(state);\r\n        let {states} = this.entity;\r\n        let s = states.find(v => v.name === state);\r\n        let actionButtons, startButtons;\r\n        if (s === undefined) {\r\n            let text:string, cn:string;\r\n            switch (state) {\r\n                default:\r\n                    text = '不认识的单据状态\\'' + state + '\\'';\r\n                    cn = 'text-info';\r\n                    break;\r\n                case '-': \r\n                    text = '已作废';\r\n                    cn = 'text-danger';\r\n                    break;\r\n                case '#':\r\n                    text = '已归档';\r\n                    cn = 'text-success';\r\n                    break;\r\n            }\r\n            actionButtons = <div className={classNames(cn)}>[{text}]</div>;\r\n        }\r\n        else {\r\n            actionButtons = <div className=\"flex-grow-1\">{s.actions.map((v,index) => \r\n                <button\r\n                    key={index}\r\n                    className=\"btn btn-primary mr-2\"\r\n                    onClick={()=>this.actionClick(v)}\r\n                >\r\n                    {this.controller.getActionLabel(state, v.name)}\r\n                </button>)}\r\n            </div>;\r\n            if (state === '$') {\r\n                startButtons = <div>\r\n                    <button className=\"btn btn-outline-info ml-2\" onClick={this.editClick}>修改</button>\r\n                    <button className=\"btn btn-outline-danger ml-2\" onClick={this.deleteClick}>作废</button>\r\n                </div>\r\n            }\r\n        };\r\n        return <Page header={this.label + ':' + stateLabel + '-' + no}>\r\n            <div className=\"mb-2\">\r\n                <div className=\"d-flex px-3 py-2 border-bottom bg-light\">\r\n                    {actionButtons}\r\n                    {startButtons}\r\n                </div>\r\n                <this.sheetView />\r\n            </div>\r\n        </Page>;\r\n    }\r\n\r\n    private acted = () => {\r\n        let {discription} = this.sheetData.brief;\r\n        return <Page header=\"已处理\" back=\"close\">\r\n            <div className=\"p-3 d-flex flex-column align-items-center\">\r\n                <div className=\"p-3\">{discription}</div>\r\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已处理！</div>\r\n                <div className=\"p-3\">\r\n                    <button className=\"btn btn-outline-info\" onClick={()=>this.backPage()}>返回</button>\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../entities';\r\nimport { SheetUI, CSheet } from './cSheet';\r\n\r\nexport class VSheetSchema extends VEntity<Sheet, SheetUI, CSheet> {\r\n    async open(param?:any) {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label + \"模板\"}>\r\n        <pre className=\"mx-3 my-2\">{this.entity.schemaStringify()}</pre>\r\n    </Page>;\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport {List, LMR, FA, EasyDate, Muted} from 'tonva-react-form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../entities';\r\nimport { SheetUI, CSheet } from './cSheet';\r\n\r\nexport class VArchives extends VEntity<Sheet, SheetUI, CSheet> {\r\n    list: any[];\r\n\r\n    async open() {\r\n        this.list = await this.entity.getArchives(undefined, 10);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    archiveClick = async (brief:any) => {\r\n        if (brief.processing===1) return;\r\n        this.event('archived', brief);\r\n    }\r\n    archiveRow = (row:any, index:number) => {\r\n        let {id, no, discription, date} = row;\r\n        let left = <>\r\n            {row.processing===1? '... ' : ''}\r\n            {row.no} &nbsp; {row.discription}\r\n        </>;\r\n        let right = <Muted><EasyDate date={date} /></Muted>;\r\n        return <LMR className=\"px-3 py-2\" left={left} right={right} />\r\n    }\r\n\r\n    protected view = () => {\r\n        return <Page header={'已归档' + this.label}>\r\n            <List items={this.list} item={{render:this.archiveRow, onClick:this.archiveClick}} />\r\n        </Page>;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { Page, nav } from 'tonva-tools';\r\nimport { List, Muted, FA, LMR, EasyDate } from 'tonva-react-form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../entities';\r\nimport { CSheet, SheetUI } from './cSheet';\r\n\r\nexport class VSheetList extends VEntity<Sheet, SheetUI, CSheet> {\r\n    protected row: (values) => JSX.Element;\r\n    stateName: string;\r\n    stateLabel: string;\r\n\r\n    async open(item:any) {\r\n        this.row = this.ui.listRow || this.rowContent;\r\n        this.stateName = item.state;\r\n        this.stateLabel = this.controller.getStateLabel(this.stateName);\r\n        //await this.controller.getStateSheets(this.stateName, 0, 10);\r\n        await this.controller.pageStateItems.first(this.stateName);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    rowClick = async (brief:any) => {\r\n        if (brief.processing===1) {\r\n            this.event('processing', brief.id);\r\n            return;\r\n        }\r\n        this.event('action', brief.id);\r\n    }\r\n\r\n    private onScrollBottom = () => {\r\n        console.log('onScrollBottom');\r\n        this.controller.pageStateItems.more();\r\n    }\r\n\r\n    protected rowContent = (row:any):JSX.Element => {\r\n        let {id, no, discription, date, processing} = row;\r\n        let left = <>            \r\n            {no} &nbsp; <Muted>{discription}</Muted> {processing===1? '...' : ''}\r\n        </>;\r\n        let right = <Muted><EasyDate date={date} /></Muted>;\r\n        return <LMR className=\"px-3 py-2\" left={left} right={right} />;\r\n    }\r\n\r\n    private renderRow = (row:any, index:number) => <this.row {...row} />\r\n\r\n    protected view = () => {\r\n        //let sheets = this.controller.stateSheets;\r\n        let {pageStateItems} = this.controller;\r\n        return <Page header={this.label + ' - ' + this.stateLabel} onScrollBottom={this.onScrollBottom}>\r\n            <List items={pageStateItems} item={{render:this.renderRow, onClick:this.rowClick}} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {Page} from 'tonva-tools';\r\nimport { VSheetView } from './vSheetView';\r\nimport { CSheet, SheetUI, SheetData } from './cSheet';\r\n\r\nexport interface State {\r\n    flows: any;\r\n    data: any;\r\n}\r\nexport class VArchived extends VSheetView {\r\n    //protected controller: CSheet;\r\n    //brief: any;\r\n\r\n    async open(sheetData:SheetData) {\r\n        this.sheetData = sheetData;\r\n        /*\r\n        let {brief, data, flows} = await this.controller.getArchived(inBrief.id);\r\n        this.brief = brief;\r\n        this.data = data;\r\n        this.flows = flows;\r\n        */\r\n        this.vForm = this.createForm(undefined, this.sheetData.data);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => {\r\n        let {brief} = this.sheetData;\r\n        return <Page header={this.label + ':' + '-' + brief.no}>\r\n            <this.sheetView />\r\n        </Page>;\r\n    };\r\n}\r\n","import { Sheet } from \"../../entities\";\r\nimport { SheetUI, CSheet } from \"./cSheet\";\r\nimport { VEntity } from \"../CVEntity\";\r\n\r\nexport abstract class VSheet extends VEntity<Sheet, SheetUI, CSheet> {\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport { FA } from 'tonva-react-form';\r\nimport { VSheet } from \"./vSheet\";\r\n\r\nexport class VSheetSaved extends VSheet {\r\n    private brief: any;\r\n    async open(brief?:any) {\r\n        this.brief = brief;\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    private restart = async () => {\r\n        this.ceasePage();\r\n        await this.event('new');\r\n    }\r\n\r\n    actionClick = async (action:any) => {\r\n        this.ceasePage();\r\n        let {id, flow, state} = this.brief;\r\n        let res = await this.controller.action(id, flow, state, action.name);\r\n        this.openPage(this.acted);\r\n    }\r\n\r\n    private buttons = <>\r\n        <button className=\"btn btn-outline-primary mr-3\" onClick={this.restart}>继续开单</button>\r\n        <button className=\"btn btn-outline-info\" onClick={()=>this.backPage()}>返回</button>\r\n    </>;\r\n\r\n    private view = () => {\r\n        let {states} = this.entity;\r\n        const state = '$';\r\n        let s = states.find(v => v.name === state);\r\n        let actionButtons = <>{s.actions.map((v,index) => \r\n            <button\r\n                key={index}\r\n                className=\"btn btn-primary mr-3\"\r\n                onClick={()=>this.actionClick(v)}\r\n            >\r\n                {this.controller.getActionLabel(state, v.name)}\r\n            </button>)}\r\n        </>;\r\n        return <Page header=\"已保存\" back=\"close\">\r\n            <div className=\"p-3 d-flex flex-column align-items-center\">\r\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已保存！系统尚未处理</div>\r\n                <div className=\"p-3\">\r\n                    {actionButtons}\r\n                    {this.buttons}\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    }\r\n\r\n    private acted = () => {\r\n        return <Page>\r\n            <div className=\"p-3 d-flex flex-column align-items-center\">\r\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已处理！</div>\r\n                <div className=\"p-3\">\r\n                    {this.buttons}\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { nav, Page } from 'tonva-tools';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\n\r\nexport class VSheetProcessing extends VSheetView { \r\n    async open(sheetData:SheetData) {\r\n        this.sheetData = sheetData;\r\n        //let {brief, data, flows} = await this.controller.getSheetData(sheetId);\r\n        //this.brief = brief;\r\n        //this.flows = flows;\r\n        //this.data = data;\r\n        //this.state = this.brief.state;\r\n        this.vForm = this.createForm(undefined, sheetData.data);\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    protected page = () => {\r\n        let {brief} = this.sheetData;\r\n        let {state, no} = brief;\r\n        let stateLabel = this.controller.getStateLabel(state);\r\n        return <Page header={this.label + ':' + stateLabel + '-' + no}>\r\n            <div className=\"mb-2\">\r\n                <div className=\"d-flex px-3 py-2 border-bottom bg-light\">\r\n                    正在处理中...\r\n                </div>\r\n                <this.sheetView />\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n","import { IObservableArray, observable } from \"mobx\";\r\nimport { TypeVPage, VPage, PageItems, postWsToTop } from 'tonva-tools';\r\nimport { Sheet, StateCount } from \"../../entities\";\r\nimport { CEntity, EntityUI, VEntity } from \"../CVEntity\";\r\nimport { VSheetMain } from \"./vMain\";\r\nimport { VSheetNew } from \"./vNew\";\r\nimport { VSheetEdit } from \"./vEdit\";\r\nimport { VSheetAction } from \"./vSheetAction\";\r\nimport { VSheetSchema } from \"./vSchema\";\r\nimport { VArchives } from \"./vArchives\";\r\nimport { VSheetList } from \"./vList\";\r\nimport { VArchived } from \"./vArchived\";\r\nimport { VSheetSaved } from \"./vSaved\";\r\nimport { VSheetProcessing } from \"./vSheetProcessing\";\r\n\r\nexport interface SheetActionUI {\r\n    label: string;\r\n}\r\n\r\nexport interface StateUI {\r\n    label: string;\r\n    actions: {[name:string]: SheetActionUI}\r\n}\r\n\r\nexport interface SheetUI extends EntityUI {\r\n    CSheet?: typeof CSheet;\r\n    states?: {[name:string]: StateUI};\r\n    main?: TypeVPage<CSheet>;\r\n    sheetNew?: TypeVPage<CSheet>;\r\n    sheetSaved?: TypeVPage<CSheet>;\r\n    sheetEdit?: TypeVPage<CSheet>;\r\n    sheetAction?: TypeVPage<CSheet>;\r\n    listRow?: (row:any) => JSX.Element;\r\n    sheetTitle?: (sheetValues:any, x:any) => string;      // 返回单据的描述\r\n}\r\n\r\nexport interface SheetData {\r\n    brief: any;\r\n    data: any;\r\n    flows: any[];\r\n}\r\n\r\nexport class CSheet extends CEntity<Sheet, SheetUI> {\r\n    statesCount:IObservableArray<StateCount> = observable.array<StateCount>([], {deep:true});\r\n    curState:string;\r\n    pageStateItems: PageItems<any>;\r\n\r\n    protected async internalStart() {\r\n        await this.loadStateSheetCount();\r\n        this.pageStateItems = this.entity.createPageStateItems();\r\n        await this.openVPage(this.VSheetMain);\r\n    }\r\n\r\n    protected async onMessage(msg: any):Promise<void> {\r\n        let {type, body, from, to, push} = msg;\r\n        if (type === 'sheet') this.onSheet(from, to, body);\r\n    }\r\n    private onSheet(from:number, to:number[], sheetData:any) {\r\n        let me = this.user.id;\r\n        let {id, preState, state} = sheetData;\r\n        console.log({$:'onMessage sheet', from:from, to:to.join(','), id:id, preState:preState, state:state, me:me, sheetData:sheetData})\r\n        if (from === me) {\r\n            this.sheetActPreState(id, preState);\r\n        }\r\n        if (to.find(v=>v===me) !== undefined) {\r\n            this.sheetActState(id, state, sheetData);\r\n        }\r\n    }\r\n    private sheetActPreState(id:number, preState:string) {\r\n        this.changeStateCount(preState, -1);\r\n        if (this.curState === undefined || this.curState !== preState) return;\r\n        /*\r\n        let index = this.stateSheets.findIndex(v => v.id === id);\r\n        if (index>=0) {\r\n            this.stateSheets.splice(index, 1);\r\n        }*/\r\n        let index = this.pageStateItems.items.findIndex(v => v.id === id);\r\n        if (index>=0) {\r\n            this.pageStateItems.items.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    private sheetActState(id:number, state:string, msg:any) {\r\n        this.changeStateCount(state, 1);\r\n        if (this.curState === undefined || this.curState !== state) return;\r\n        /*\r\n        if (this.stateSheets.findIndex(v => v.id === id) < 0) {\r\n            this.stateSheets.push(msg);\r\n        }\r\n        */\r\n        if (this.pageStateItems.items.findIndex(v => v.id === id) < 0) {\r\n            this.pageStateItems.items.push(msg);\r\n        }\r\n    }\r\n\r\n    private changeStateCount(state:string, delta:number) {\r\n        if (state === undefined) return;\r\n        let index = this.statesCount.findIndex(v => v.state === state);\r\n        console.log({$:'changeState', state: state, delta: delta, index: index});\r\n        if (index < 0) return;\r\n        let stateCount = this.statesCount[index];\r\n        stateCount.count += delta;\r\n        if (stateCount.count < 0) stateCount.count = 0;\r\n    }\r\n\r\n    protected get VSheetMain():TypeVPage<CSheet> {return (this.ui&&this.ui.main) || VSheetMain}\r\n    protected get VSheetNew(): TypeVPage<CSheet> {return this.ui.sheetNew || VSheetNew}\r\n    protected get VSheetSaved(): TypeVPage<CSheet> {return this.ui.sheetSaved || VSheetSaved}\r\n    protected get VSheetEdit(): TypeVPage<CSheet> {return this.ui.sheetEdit || VSheetEdit}\r\n    protected get VSheetSchema(): TypeVPage<CSheet> {return VSheetSchema}\r\n    protected get VArchives(): TypeVPage<CSheet> {return VArchives}\r\n    protected get VArchived(): TypeVPage<CSheet> {return VArchived}\r\n    protected get VSheetList(): TypeVPage<CSheet> {return VSheetList}\r\n    protected get VSheetAction(): TypeVPage<CSheet> {return this.ui.sheetAction || VSheetAction}\r\n    protected get VSheetProcessing(): TypeVPage<CSheet> {return VSheetProcessing}\r\n    protected async onEvent(type:string, value:any) {\r\n        let c: TypeVPage<CSheet>;\r\n        switch (type) {\r\n            default: return;\r\n            case 'new': c = this.VSheetNew; break;\r\n            case 'schema': c = this.VSheetSchema; break;\r\n            case 'archives': c = this.VArchives; break;\r\n            case 'state':\r\n                this.curState = value.state;\r\n                c = this.VSheetList;\r\n                break;\r\n            case 'archived':\r\n                await this.showArchived(value); return;\r\n            case 'action':\r\n                await this.showAction(value); return;\r\n            case 'processing':\r\n                await this.showProcessing(value); return;\r\n        }\r\n        await this.openVPage(c, value);\r\n    }\r\n\r\n    async startSheet(sheetId:number) {\r\n        if (await this.beforeStart() === false) return;\r\n        await this.onEvent('action', sheetId);\r\n    }\r\n\r\n    async showAction(sheetId:number) {\r\n        let sheetData:SheetData = await this.getSheetData(sheetId);\r\n        postWsToTop({\r\n            body: {\r\n                $type: 'msg',\r\n                action: '$sheet',\r\n                msg: {\r\n                    id: sheetId,\r\n                    uq: this.cUq.id,\r\n                    state: sheetData.brief.state\r\n                }\r\n            }\r\n        });\r\n        await this.openVPage(this.VSheetAction, sheetData);\r\n    }\r\n\r\n    async showProcessing(sheetId:number) {\r\n        let sheetData:SheetData = await this.getSheetData(sheetId);\r\n        await this.openVPage(this.VSheetProcessing, sheetData);\r\n    }\r\n\r\n    async editSheet(sheetData:SheetData):Promise<any> {\r\n        //alert('修改单据：程序正在设计中');\r\n        let values = await this.vCall(this.VSheetEdit, sheetData);\r\n        return values;\r\n    }\r\n\r\n    async showArchived(inBrief:any) {\r\n        let sheetData = await this.getArchived(inBrief.id);\r\n        await this.openVPage(this.VArchived, sheetData);\r\n    }\r\n\r\n    onSave = async (values:any, valuesWithBox:any):Promise<void> => {\r\n        //let values = this.vForm.getValues();\r\n        //let ret = await this.controller.saveSheet(values, this.vForm.values);\r\n        let ret = await this.saveSheet(values, valuesWithBox);\r\n        this.ceasePage();\r\n        //this.openPage(this.finishedPage);\r\n        await this.showSaved(ret);\r\n    }\r\n\r\n    async showSaved(sheetData:any) {\r\n        await this.openVPage(this.VSheetSaved, sheetData);\r\n    }\r\n\r\n    private getStateUI(stateName:string) {\r\n        let {states} = this.res;\r\n        if (states === undefined) return;\r\n        return states[stateName];\r\n    }\r\n    getStateLabel(stateName:string) {\r\n        let state = this.getStateUI(stateName);\r\n        let ret = (state && state.label) || stateName;\r\n        switch (ret) {\r\n            default: return ret;\r\n            case '$': return '新单';\r\n        }\r\n    }\r\n    getActionLabel(stateName:string, actionName:string) {\r\n        let state = this.getStateUI(stateName);\r\n        if (state === undefined) return actionName;\r\n        let actions = state.actions;\r\n        if (actions === undefined) return actionName;\r\n        let action = actions[actionName];\r\n        return (action && action.label) || actionName;\r\n    }\r\n\r\n    private async loadStateSheetCount():Promise<void> {\r\n        this.statesCount.clear();\r\n        let statesCount = await this.entity.stateSheetCount();\r\n        this.statesCount.splice(0, 0, ...statesCount);\r\n    }\r\n\r\n    async getSheetData(sheetId:number):Promise<SheetData> {\r\n        return await this.entity.getSheet(sheetId);\r\n    }\r\n\r\n    async getArchived(sheetId:number):Promise<SheetData> {\r\n        return await this.entity.getArchive(sheetId);\r\n    }\r\n\r\n    async saveSheet(values:any, valuesWithBox:any):Promise<any> {\r\n        let {sheetTitle} = this.ui;\r\n        let disc = sheetTitle === undefined? this.label : sheetTitle(valuesWithBox, this.x);\r\n        let ret = await this.entity.save(disc, values);\r\n        //let {id, state} = ret;\r\n        //if (id > 0) this.changeStateCount(state, 1);\r\n        return ret;\r\n    }\r\n\r\n    async action(id:number, flow:number, state:string, actionName:string):Promise<any> {\r\n        return await this.entity.action(id, flow, state, actionName);\r\n    }\r\n}\r\n","export * from './cSheet';\r\nexport * from './vSheet';\r\nexport * from './vMain';\r\nexport * from './vNew';\r\nexport * from './vEdit';\r\nexport * from './vList';\r\nexport * from './vSheetAction';\r\nexport * from './vSchema';\r\nexport * from './vArchived';\r\nexport * from './vSheetView';\r\n","import * as React from 'react';\r\nimport { TuidMain, Book, Entity } from '../../entities';\r\nimport { Page } from 'tonva-tools';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CBook, BookUI } from './cBook';\r\n\r\nexport class VBookMain extends VEntity<Book, BookUI, CBook> {\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        Book\r\n    </Page>;\r\n}\r\n","import { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Book } from \"../../entities\";\r\nimport { VBookMain } from \"./vBookMain\";\r\n\r\nexport interface BookUI extends EntityUI {\r\n    CBook?: typeof CBook;\r\n    main: typeof VBookMain,\r\n}\r\n\r\nexport class CBook extends CEntity<Book, BookUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VBookMain);\r\n    }\r\n\r\n    protected get VBookMain():typeof VBookMain {return VBookMain}\r\n}\r\n","import React from \"react\";\r\nimport { View } from \"tonva-tools\";\r\nimport { List, Muted } from \"tonva-react-form\";\r\nimport { Entity } from \"../../entities\";\r\nimport { CLink } from \"../link\";\r\nimport { CUq } from \"./cUq\";\r\n\r\nexport class VUq extends View<CUq> {\r\n    protected isSysVisible = false;\r\n    protected tuidLinks: CLink[];\r\n    protected mapLinks: CLink[];\r\n    protected sheetLinks: CLink[];\r\n    protected actionLinks: CLink[];\r\n    protected queryLinks: CLink[];\r\n    protected bookLinks: CLink[];\r\n    protected historyLinks: CLink[];\r\n    protected pendingLinks: CLink[];\r\n\r\n    constructor(cUq: CUq) {\r\n        super(cUq);\r\n        let {tuidArr, mapArr, sheetArr, actionArr, queryArr, bookArr, historyArr, pendingArr} = cUq.entities;\r\n        this.tuidLinks = tuidArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cTuidMain(v)));\r\n        this.mapLinks = mapArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cMap(v)));\r\n        this.sheetLinks = sheetArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cSheet(v)));\r\n        this.actionLinks = actionArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cAction(v)));\r\n        this.queryLinks = queryArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cQuery(v)));\r\n        this.bookLinks = bookArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cBook(v)));\r\n        this.historyLinks = historyArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cHistory(v)));\r\n        this.pendingLinks = pendingArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cPending(v)));\r\n    }\r\n    protected isVisible(entity: Entity):boolean {\r\n        return entity.sys !== true || this.isSysVisible;\r\n    }\r\n    render(param?:any) {\r\n        if (this.view === undefined) return <div>??? viewModel 必须定义 view ???</div>\r\n        return React.createElement(this.view);\r\n    }\r\n\r\n    protected view = () => {\r\n        let {res, uq, error} = this.controller;\r\n        let linkItem = {\r\n            render: (cLink:CLink, index:number):JSX.Element => cLink.render(), \r\n            onClick: undefined, \r\n        };\r\n        let lists = [\r\n            {\r\n                header: res.tuid || 'TUID',\r\n                items: this.tuidLinks,\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.map || 'MAP',\r\n                items: this.mapLinks,\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.sheet || 'SHEET',\r\n                items: this.sheetLinks\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.action || 'ACTION',\r\n                items: this.actionLinks\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.query || 'QUERY',\r\n                items: this.queryLinks\r\n            },\r\n            {\r\n                cn: 'mt-2 mb-4',\r\n                header: res.book || 'BOOK',\r\n                items: this.bookLinks\r\n            },\r\n            {\r\n                cn: 'mt-2 mb-4',\r\n                header: res.history || 'HISTORY',\r\n                items: this.historyLinks\r\n            },\r\n            {\r\n                cn: 'mt-2 mb-4',\r\n                header: res.pending || 'PENDING',\r\n                items: this.pendingLinks\r\n            }\r\n        ];\r\n        let content;\r\n        if (error !== undefined) {\r\n            content = <div className=\"p-3 text-danger\">连接错误: {error}</div>;\r\n        }\r\n        else {\r\n            content = lists.map(({cn, header, items},index) => items.length > 0 && <List\r\n                key={index}\r\n                className={cn}\r\n                header={<div className=\"px-3 py-1 bg-light\"><Muted>{header}</Muted></div>}\r\n                items={items}\r\n                item={linkItem} />\r\n            );\r\n        }\r\n        return <>\r\n            <div className=\"px-3 py-1 small\">{res.uq || uq}</div>\r\n            {content}\r\n        </>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { UqApi, Controller, UnitxApi, meInFrame, resLang, nav } from 'tonva-tools';\r\nimport { Entities, TuidMain, Action, Sheet, Query, Book, Map, Entity, Tuid, History, Pending } from '../../entities';\r\nimport { CLink } from '../link';\r\nimport { CBook, BookUI } from '../book';\r\nimport { CSheet, SheetUI } from '../sheet';\r\nimport { ActionUI, CAction } from '../action';\r\nimport { QueryUI, CQuery, CQuerySelect } from '../query';\r\nimport { CTuidMain, TuidUI, CTuid, CTuidInfo, CTuidSelect, CTuidEdit, CTuidList } from '../tuid';\r\nimport { MapUI, CMap } from '../map';\r\nimport { CEntity, EntityUI } from '../CVEntity';\r\nimport { PureJSONContent } from '../form/viewModel';\r\nimport { VUq } from './vUq';\r\nimport { CHistory, HistoryUI } from '../history';\r\nimport { CPending, PendingUI } from '../pending';\r\nimport { CApp } from '../CApp';\r\n\r\nexport type EntityType = 'sheet' | 'action' | 'tuid' | 'query' | 'book' | 'map' | 'history' | 'pending';\r\n\r\nexport interface UqUI {\r\n    CTuidMain?: typeof CTuidMain;\r\n    CTuidEdit?: typeof CTuidEdit;\r\n    CTuidList?: typeof CTuidList;\r\n    CTuidSelect?: typeof CTuidSelect;\r\n    CTuidInfo?: typeof CTuidInfo;\r\n    CQuery?: typeof CQuery;\r\n    CQuerySelect?: typeof CQuerySelect;\r\n    CMap?: typeof CMap;\r\n    CAction?: typeof CAction;\r\n    CSheet?: typeof CSheet;\r\n    CBook?: typeof CBook;\r\n    CHistory?: typeof CHistory;\r\n    CPending?: typeof CPending;\r\n    tuid?: {[name:string]: TuidUI};\r\n    sheet?: {[name:string]: SheetUI};\r\n    action?: {[name:string]: ActionUI};\r\n    map?: {[name:string]: MapUI};\r\n    query?: {[name:string]: QueryUI};\r\n    book?: {[name:string]: BookUI};    \r\n    history?: {[name:string]: HistoryUI};\r\n    pending?: {[name:string]: PendingUI};\r\n    res?: any;\r\n}\r\n\r\nfunction lowerPropertyName(entities: {[name:string]: EntityUI}) {\r\n    if (entities === undefined) return;\r\n    for (let i in entities) entities[i.toLowerCase()] = entities[i];\r\n}\r\n\r\nexport class CUq extends Controller /* implements Uq*/ {\r\n    private ui:any;\r\n    private CTuidMain: typeof CTuidMain;\r\n    private CTuidEdit: typeof CTuidEdit;\r\n    private CTuidList: typeof CTuidList;\r\n    private CTuidSelect: typeof CTuidSelect;\r\n    private CTuidInfo: typeof CTuidInfo;\r\n    private CQuery: typeof CQuery;\r\n    private CQuerySelect: typeof CQuerySelect;\r\n    private CMap: typeof CMap;\r\n    private CAction: typeof CAction;\r\n    private CSheet: typeof CSheet;\r\n    private CBook: typeof CBook;\r\n    private CHistory: typeof CHistory;\r\n    private CPending: typeof CPending;\r\n\r\n    constructor(cApp:CApp, uq:string, appId:number, uqId:number, access:string, ui:UqUI) {\r\n        super(resLang(ui.res));\r\n        this.cApp = cApp;\r\n        this.uq = uq;\r\n        this.id = uqId;\r\n        // 每一个ui都转换成小写的key的版本\r\n        lowerPropertyName(ui.tuid);\r\n        lowerPropertyName(ui.sheet);\r\n        lowerPropertyName(ui.map);\r\n        lowerPropertyName(ui.query);\r\n        lowerPropertyName(ui.action);\r\n        lowerPropertyName(ui.book);\r\n        lowerPropertyName(ui.history);\r\n        lowerPropertyName(ui.pending);\r\n        this.ui = ui;\r\n        this.CTuidMain = ui.CTuidMain || CTuidMain;\r\n        this.CTuidEdit = ui.CTuidEdit || CTuidEdit;\r\n        this.CTuidList = ui.CTuidList || CTuidList;\r\n        this.CTuidSelect = ui.CTuidSelect || CTuidSelect;\r\n        this.CTuidInfo = ui.CTuidInfo || CTuidInfo;\r\n        this.CQuery = ui.CQuery || CQuery;\r\n        this.CQuerySelect = ui.CQuerySelect || CQuerySelect;\r\n        this.CMap = ui.CMap || CMap;\r\n        this.CAction = ui.CAction || CAction;\r\n        this.CSheet = ui.CSheet || CSheet;\r\n        this.CBook = ui.CBook || CBook;\r\n        this.CHistory = ui.CHistory || CHistory;\r\n        this.CPending = ui.CPending || CPending;\r\n\r\n        let token = undefined;\r\n        let uqOwner:string, uqName:string;\r\n        let p = uq.split('/');\r\n        switch (p.length) {\r\n            case 1:\r\n                uqOwner = '$$$';\r\n                uqName = p[0];\r\n                break;\r\n            case 2:\r\n                uqOwner = p[0];\r\n                uqName = p[1];\r\n                break;\r\n            default:\r\n                console.log('uq must be uqOwner/uqName format');\r\n                return;\r\n        }\r\n\r\n        let hash = document.location.hash;\r\n        let baseUrl = hash===undefined || hash===''? \r\n            'debug/':'tv/';\r\n\r\n        let acc: string[];\r\n        if (access === null || access === undefined || access === '*') {\r\n            acc = [];\r\n        }\r\n        else {\r\n            acc = access.split(';').map(v => v.trim()).filter(v => v.length > 0);\r\n        }\r\n        let uqApi:UqApi;\r\n        if (uq === '$$$/$unitx') {\r\n            // 这里假定，点击home link之后，已经设置unit了\r\n            // 调用 UnitxApi会自动搜索绑定 unitx service\r\n            uqApi = new UnitxApi(meInFrame.unit);\r\n        }\r\n        else {\r\n            uqApi = new UqApi(baseUrl, uqOwner, uqName, acc, true);\r\n        }\r\n        this.entities = new Entities(this, uqApi, appId);\r\n    }\r\n\r\n    protected async internalStart() {\r\n    }\r\n\r\n    cApp:CApp;\r\n    uq: string;\r\n    id: number;\r\n    res: any;\r\n    entities:Entities;\r\n    error: string;\r\n    private schemaLoaded:boolean = false;\r\n\r\n    protected async loadEntites() {\r\n        await this.entities.loadAccess();\r\n    }\r\n\r\n    async loadSchema():Promise<string> {\r\n        try {\r\n            if (this.schemaLoaded === true) return;\r\n            await this.loadEntites();\r\n            if (this.id === undefined) this.id = this.entities.uqId;\r\n\r\n            for (let i in this.ui) {\r\n                let g = this.ui[i];\r\n                if (g === undefined) continue;\r\n                let {caption, collection} = g;\r\n                if (collection === undefined) continue;\r\n                for (let j in collection) {\r\n                    if (this.entities[i](j) === undefined) {\r\n                        console.warn(i + ':' + '\\'' + j + '\\' is not uq entity');\r\n                    }\r\n                }\r\n            }\r\n            this.schemaLoaded = true;\r\n            return;\r\n        }\r\n        catch(err) {\r\n            console.error(err);\r\n            return this.error = err;\r\n            //debugger;\r\n            //return err.message;\r\n        }\r\n    }\r\n\r\n    async getQuerySearch(name:string):Promise<Query> {\r\n        let query = this.entities.query(name);\r\n        if (query === undefined) \r\n            alert(`QUERY ${name} 没有定义!`);\r\n        else {\r\n            await query.loadSchema();\r\n            let {returns} = query;\r\n            if (returns.length > 1) {\r\n                alert(`QUERY ${name} 返回多张表, 无法做QuerySearch`);\r\n            }\r\n        }\r\n        return query;\r\n    }\r\n    getTuidPlaceHolder(tuid:Tuid) {\r\n        let {tuidPlaceHolder, entity} = this.res;\r\n        let {name} = tuid;\r\n        let type:string;\r\n        if (entity !== undefined) {\r\n            let en = entity[name];\r\n            if (en !== undefined) {\r\n                type = en.label;\r\n            }\r\n        }\r\n        return (tuidPlaceHolder || 'Select');\r\n    }\r\n    getNone() {\r\n        let {none} = this.res;\r\n        return none || 'none';\r\n    }\r\n    protected isSysVisible = false;\r\n    protected isVisible(entity: Entity):boolean {\r\n        return entity.sys !== true || this.isSysVisible;\r\n    }\r\n\r\n    async navSheet(sheetTypeId:number, sheetId:number) {\r\n        let sheet = this.entities.sheetFromTypeId(sheetTypeId);\r\n        if (sheet === undefined) {\r\n            alert('sheetTypeId ' + sheetTypeId + ' is not exists!');\r\n            return;\r\n        }\r\n        let cSheet = this.cSheet(sheet);\r\n        await cSheet.startSheet(sheetId);\r\n    }\r\n\r\n    sheet(entityName:string) {return this.entities.sheet(entityName);}\r\n    action(entityName:string) {return this.entities.action(entityName);}\r\n    query(entityName:string) {return this.entities.query(entityName);}\r\n    book(entityName:string) {return this.entities.book(entityName);}\r\n    map(entityName:string) {return this.entities.map(entityName);}\r\n    history(entityName:string) {return this.entities.history(entityName);}\r\n    pending(entityName:string) {return this.entities.pending(entityName);}\r\n    tuid(entityName:string) {return this.entities.tuid(entityName)}\r\n    tuidDiv(entityName:string, divName:string) {\r\n        let tuid = this.entities.tuid(entityName);\r\n        if (tuid === undefined) return;\r\n        let {divs} = tuid;\r\n        if (divs === undefined) return;\r\n        return divs[divName];\r\n    }\r\n\r\n    cSheetFromName(entityName:string):CSheet {\r\n        let entity = this.entities.sheet(entityName);\r\n        if (entity !== undefined) return this.cSheet(entity);\r\n    }\r\n    cActionFromName(entityName:string) {\r\n        let entity = this.entities.action(entityName);\r\n        if (entity !== undefined) return this.cAction(entity);\r\n    }\r\n    cQueryFromName(entityName:string) {\r\n        let entity = this.entities.query(entityName);\r\n        if (entity !== undefined) return this.cQuery(entity);\r\n    }\r\n    cBookFromName(entityName:string) {\r\n        let entity = this.entities.book(entityName);\r\n        if (entity !== undefined) return this.cBook(entity);\r\n    }\r\n    cMapFromName(entityName:string) {\r\n        let entity = this.entities.map(entityName);\r\n        if (entity !== undefined) return this.cMap(entity);\r\n    }\r\n    cHistoryFromName(entityName:string) {\r\n        let entity = this.entities.history(entityName);\r\n        if (entity !== undefined) return this.cHistory(entity);\r\n    }\r\n    cPendingFromName(entityName:string) {\r\n        let entity = this.entities.pending(entityName);\r\n        if (entity !== undefined) return this.cPending(entity);\r\n    }\r\n    cTuidMainFromName(entityName:string) {\r\n        let entity = this.entities.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidMain(entity);\r\n    }\r\n    cTuidEditFromName(entityName:string) {\r\n        let entity = this.entities.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidEdit(entity);\r\n    }\r\n    cTuidInfoFromName(entityName:string) {\r\n        let entity = this.entities.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidInfo(entity);\r\n    }\r\n\r\n    cTuidSelectFromName(entityName:string) {\r\n        let entity = this.entities.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidSelect(entity);\r\n    }\r\n\r\n    cFromName(entityType:EntityType, entityName:string): CEntity<Entity, EntityUI> {\r\n        switch (entityType) {\r\n            case 'sheet':\r\n                let sheet = this.entities.sheet(entityName);\r\n                if (sheet === undefined) return;\r\n                return this.cSheet(sheet);\r\n            case 'action':\r\n                let action = this.entities.action(entityName);\r\n                if (action === undefined) return;\r\n                return this.cAction(action);\r\n            case 'tuid':\r\n                let tuid = this.entities.tuid(entityName);\r\n                if (tuid === undefined) return;\r\n                return this.cTuidMain(tuid);\r\n            case 'query':\r\n                let query = this.entities.query(entityName);\r\n                if (query === undefined) return;\r\n                return this.cQuery(query);\r\n            case 'book':\r\n                let book = this.entities.book(entityName);\r\n                if (book === undefined) return;\r\n                return this.cBook(book);\r\n            case 'map':\r\n                let map = this.entities.map(entityName);\r\n                if (map === undefined) return;\r\n                return this.cMap(map);\r\n            case 'history':\r\n                let history = this.entities.history(entityName);\r\n                if (history === undefined) return;\r\n                return this.cHistory(history);\r\n            case 'pending':\r\n                let pending = this.entities.pending(entityName);\r\n                if (pending === undefined) return;\r\n                return this.cPending(pending);\r\n        }\r\n    }\r\n\r\n    linkFromName(entityType:EntityType, entityName:string) {\r\n        return this.link(this.cFromName(entityType, entityName));\r\n    }\r\n\r\n    private getUI<T extends Entity, UI extends EntityUI>(t:T):{ui:UI, res:any} {\r\n        let ui, res;\r\n        let {name, typeName} = t;\r\n        if (this.ui !== undefined) {\r\n            let tUI = this.ui[typeName];\r\n            if (tUI !== undefined) {\r\n                ui = tUI[name];\r\n            }\r\n        }\r\n        let {entity} = this.res;\r\n        if (entity !== undefined) {\r\n            res = entity[name];\r\n        }\r\n        return {ui: ui || {}, res: res || {} };\r\n    }\r\n\r\n    link(cEntity:CEntity<Entity, EntityUI>) {\r\n        return new CLink(cEntity);\r\n    }\r\n\r\n    get tuidLinks() {\r\n        return this.entities.tuidArr.filter(v => this.isVisible(v)).map(v => this.link(this.cTuidMain(v)));\r\n    }\r\n    cTuidMain(tuid:TuidMain):CTuidMain {\r\n        let {ui, res} = this.getUI<TuidMain, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidMain || this.CTuidMain)(this, tuid, ui, res);\r\n    }\r\n    cTuidEdit(tuid:TuidMain):CTuidEdit {\r\n        let {ui, res} = this.getUI<TuidMain, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidEdit || this.CTuidEdit)(this, tuid, ui, res);\r\n    }\r\n    cTuidList(tuid:TuidMain):CTuidList {\r\n        let {ui, res} = this.getUI<TuidMain, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidList || this.CTuidList)(this, tuid, ui, res);\r\n    }\r\n    cTuidSelect(tuid:Tuid):CTuidSelect {\r\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid.owner || tuid);\r\n        return new (ui && ui.CTuidSelect || this.CTuidSelect)(this, tuid, ui, res);\r\n    }\r\n    cTuidInfo(tuid:TuidMain):CTuidInfo {\r\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidInfo || this.CTuidInfo)(this, tuid, ui, res);\r\n    }\r\n\r\n    cSheet(sheet:Sheet/*, sheetUI?:SheetUI, sheetRes?:any*/):CSheet {\r\n        let {ui, res} = this.getUI<Sheet, SheetUI>(sheet);\r\n        //if (sheetUI !== undefined) ui = sheetUI;\r\n        //if (sheetRes !== undefined) res = sheetRes;\r\n        //return new (ui && ui.CSheet || this.CSheet)(this, sheet, sheetUI, sheetRes);\r\n        return new (ui && ui.CSheet || this.CSheet)(this, sheet, ui, res);\r\n    }\r\n    get sheetLinks() { \r\n        return this.entities.sheetArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cSheet(v))\r\n        });\r\n    }\r\n\r\n    cAction(action:Action):CAction {\r\n        let {ui, res} = this.getUI<Action, ActionUI>(action);\r\n        return new (ui && ui.CAction || this.CAction)(this, action, ui, res);\r\n    }\r\n    get actionLinks() { \r\n        return this.entities.actionArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cAction(v))\r\n        });\r\n    }\r\n\r\n    cQuery(query:Query):CQuery {\r\n        let {ui, res} = this.getUI<Query, QueryUI>(query);\r\n        return new (ui && ui.CQuery || this.CQuery)(this, query, ui, res);\r\n    }\r\n    cQuerySelect(queryName:string):CQuerySelect {\r\n        let query = this.entities.query(queryName);\r\n        if (query === undefined) return;\r\n        let {ui, res} = this.getUI<Query, QueryUI>(query);\r\n        return new (ui && ui.CQuerySelect || this.CQuerySelect)(this, query, ui, res);\r\n    }\r\n    get queryLinks() {\r\n        return this.entities.queryArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cQuery(v))\r\n        });\r\n    }\r\n    \r\n    cBook(book:Book):CBook {\r\n        let {ui, res} = this.getUI<Book, BookUI>(book);\r\n        return new (ui && ui.CBook || this.CBook)(this, book, ui, res);\r\n    }\r\n    get bookLinks() { \r\n        return this.entities.bookArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cBook(v))\r\n        });\r\n    }\r\n    \r\n    cHistory(history:History):CHistory {\r\n        let {ui, res} = this.getUI<History, HistoryUI>(history);\r\n        return new (ui && ui.CHistory || this.CHistory)(this, history, ui, res);\r\n    }\r\n    get historyLinks() { \r\n        return this.entities.historyArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cHistory(v))\r\n        });\r\n    }\r\n    \r\n    cPending(pending:Pending):CPending {\r\n        let {ui, res} = this.getUI<Pending, PendingUI>(pending);\r\n        return new (ui && ui.CPending || this.CPending)(this, pending, ui, res);\r\n    }\r\n    get pendingLinks() { \r\n        return this.entities.pendingArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cPending(v))\r\n        });\r\n    }\r\n    \r\n    cMap(map:Map):CMap {\r\n        let {ui, res} = this.getUI<Map, MapUI>(map);\r\n        return new (ui && ui.CMap || this.CMap)(this, map, ui, res);\r\n    }\r\n    get mapLinks() { \r\n        return this.entities.mapArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cMap(v));\r\n        });\r\n    }\r\n\r\n    getTuidContent(tuid:Tuid): React.StatelessComponent<any> {\r\n        let {owner} = tuid;\r\n        if (owner === undefined) {\r\n            let {ui} = this.getUI<Tuid, TuidUI>(tuid);\r\n            return (ui && ui.content) || PureJSONContent;\r\n        }\r\n        else {\r\n            let {ui} = this.getUI<Tuid, TuidUI>(owner);\r\n            return (ui && ui.divs && ui.divs[tuid.name].content) || PureJSONContent;\r\n        }\r\n    }\r\n\r\n    async showTuid(tuid:Tuid, id:number):Promise<void> {\r\n        let {owner} = tuid;\r\n        let c = this.cTuidInfo(owner || (tuid as TuidMain));\r\n        await c.start(id);\r\n    }\r\n\r\n    protected get VUq():typeof VUq {return VUq}\r\n\r\n    render() {\r\n        let v = new (this.VUq)(this);\r\n        return v.render();\r\n    }\r\n}\r\n\r\n","export * from './cUq';\r\nexport * from './vUq';","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport className from 'classnames';\r\nimport { List, LMR, FA } from 'tonva-react-form';\r\nimport { Page, nav } from 'tonva-tools';\r\nimport { tv } from '../../tools';\r\nimport { Map } from '../../entities';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CMap, MapItem, MapKey, MapUI } from './cMap';\r\nimport { PureJSONContent } from '../form/viewModel';\r\n\r\nexport class VMapMain extends VEntity<Map, MapUI, CMap> {\r\n    private isFrom: boolean;\r\n\r\n    async open(param?:any) {\r\n        this.isFrom = this.controller.isFrom;\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    itemRender = (item:MapItem, index:number) => {\r\n        return <this.ItemRow item={item} />;\r\n    }\r\n\r\n    private ItemRow = observer(({item}: {item:MapItem}) => {\r\n        let {tuid, box, children, isLeaf, keyIndex, values} = item;\r\n        let keyUI = this.controller.keyUIs[keyIndex];\r\n        let {content:keyContent, valuesContent, none:keyNone} = keyUI;\r\n        let add, remove;\r\n        if (this.isFrom === false) {\r\n            add = <button className=\"btn btn-link btn-sm\" onClick={()=>this.controller.addClick(item)}>\r\n                <FA name=\"plus\" />\r\n            </button>;\r\n            remove = <button className=\"btn btn-link btn-sm\" onClick={()=>this.controller.removeClick(item)}>\r\n                <FA className=\"text-info\" name=\"trash\" />\r\n            </button>;\r\n        }\r\n        let right;\r\n        if (isLeaf === false) {\r\n            if (keyIndex === 0)\r\n                right = add;\r\n            else\r\n                right = <>{remove} &nbsp; {add}</>;\r\n        }\r\n        else if (keyIndex > 0) {\r\n            right = remove;\r\n        }\r\n        let content, border, valuesView;\r\n        if (isLeaf === true) {\r\n            content = undefined; //<div className=\"ml-5\">leaf</div>;\r\n            if (values) {\r\n                //valuesView = null; // 现在不显示values content了\r\n                valuesView = (valuesContent || PureJSONContent)(values, this.x);\r\n            }\r\n        }\r\n        else {\r\n            border = \"border-bottom\";\r\n            let none = keyNone && keyNone(this.x);\r\n            content = <List \r\n                className=\"ml-4\" \r\n                items={children} \r\n                item={{onClick:undefined, render:this.itemRender}}\r\n                none={none} />\r\n        }\r\n        return <div className=\"d-flex flex-column\">\r\n            <LMR className={className('px-3', 'py-2', border)} \r\n                right={right}\r\n            >\r\n                <div className=\"py-1\">{tv(box, keyContent, this.x)}</div>\r\n                <div className=\"py-1 font-weight-bold\">{valuesView}</div>\r\n            </LMR>\r\n            {content}\r\n        </div>;\r\n    });\r\n\r\n    protected get view() { return () => <Page header={this.label}>\r\n            <List items={this.controller.items} item={{className:'my-2', onClick:undefined, render:this.itemRender}} />\r\n        </Page>\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { VEntity } from \"../CVEntity\";\r\nimport { MapUI, CMap } from \"./cMap\";\r\nimport { Map } from \"../../entities\";\r\nimport { Page } from \"tonva-tools\";\r\nimport { VForm } from '../form';\r\n\r\nexport class VInputValues extends VEntity<Map, MapUI, CMap> {\r\n    private vForm: VForm;\r\n\r\n    async open(param?:any) {\r\n        this.vForm = this.createForm(this.onValuesSubmit);\r\n        this.openPageElement(<this.view />);\r\n    }\r\n\r\n    private onValuesSubmit = async () => {\r\n        this.ceasePage();\r\n        let values = this.vForm.getValues();\r\n        this.returnCall(values);\r\n    }\r\n\r\n    private view = () => {\r\n        return <Page>\r\n            {this.vForm.render()}\r\n        </Page>\r\n    }\r\n}\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\nimport { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Map, Tuid, BoxId, Field, TuidMain, fieldDefaultValue } from \"../../entities\";\r\nimport { VMapMain } from \"./vMain\";\r\nimport { observable } from \"mobx\";\r\nimport { PureJSONContent } from '../form/viewModel';\r\nimport { VInputValues } from './inputValues';\r\n\r\nexport interface MapKey {\r\n    content: (values, x?:any) => JSX.Element;\r\n    valuesContent?: (values, x?:any) => JSX.Element;\r\n    none?: (x:any)=>string;\r\n}\r\n\r\nexport interface MapUI extends EntityUI {\r\n    CMap?: typeof CMap;\r\n    keys?: MapKey[],\r\n}\r\n\r\nexport class MapItem {\r\n    parent: MapItem;\r\n    tuid: Tuid;\r\n    box: BoxId;\r\n    isLeaf: boolean;\r\n    keyIndex:number;\r\n    children: MapItem[] = observable.array([], {deep: true});\r\n    values: any;\r\n    constructor(parent:MapItem, tuid:Tuid, box:BoxId, keyIndex:number) {\r\n        this.parent = parent;\r\n        this.tuid = tuid;\r\n        this.box = box;\r\n        this.keyIndex = keyIndex;\r\n        this.isLeaf = false;\r\n    }\r\n}\r\n\r\nexport class CMap extends CEntity<Map, MapUI> {\r\n    isFrom: boolean;\r\n    items:MapItem[];\r\n    keyFields: Field[];\r\n    keyUIs: MapKey[];\r\n\r\n    protected async internalStart() {\r\n        let {keys, schemaFrom} = this.entity;\r\n        this.isFrom = schemaFrom !== undefined;\r\n        let q = this.entity.queries.all;\r\n        let result = await q.query({});\r\n        //let data = await this.entity.unpackReturns(res);\r\n        let ret = result.ret;\r\n        let keysLen = keys.length;\r\n        this.keyUIs = _.clone(this.ui.keys || []);\r\n        this.keyFields = [];\r\n        let retFields = q.returns[0].fields;\r\n        for (let i=0; i<keysLen; i++) {\r\n            this.keyFields.push(retFields[i]);\r\n            if (i >= this.keyUIs.length) {\r\n                this.keyUIs.push({\r\n                    content: PureJSONContent,\r\n                });\r\n            }\r\n        }\r\n        this.items = observable([]);\r\n        let item:MapItem = undefined;\r\n        for (let r of ret) {\r\n            let newItem = this.addItem(item, r);\r\n            if (newItem !== undefined) {\r\n                this.items.push(newItem);\r\n                item = newItem;\r\n            }\r\n        }\r\n\r\n        await this.openVPage(this.VMapMain);\r\n    }\r\n\r\n    private createItem(parent:MapItem, tuid:Tuid, box:BoxId, keyIndex:number, values?:any) {\r\n        let item = new MapItem(parent, tuid, box, keyIndex);\r\n        if (keyIndex === this.keyFields.length - 1) {\r\n            item.isLeaf = true;\r\n            item.values = values;\r\n        }\r\n        return item;\r\n    }\r\n\r\n    addItem(item:MapItem, row:any):MapItem {\r\n        let ret:MapItem = undefined;\r\n        let keysLen = this.keyFields.length;\r\n        let p = item;\r\n        for (let i=0;i<keysLen;i++) {\r\n            let key = this.keyFields[i];\r\n            let {name} = key;\r\n            let tuid = key._tuid;\r\n            let val:BoxId = row[name];\r\n            if (val === undefined) break;\r\n            let {id} = val;\r\n            if (i === 0) {\r\n                if (id === 0) continue;\r\n                if (p === undefined || p.box.id !== id) {\r\n                    ret = p = this.createItem(undefined, tuid, val, i, row);\r\n                }\r\n                continue;\r\n            }\r\n            let {children, box} = p;\r\n            let len = children.length;\r\n            if (len > 0) {\r\n                let n = children[len-1];\r\n                if (n.box.id === id) {\r\n                    p = n;\r\n                    continue;\r\n                }\r\n            }\r\n            if (id > 0) {\r\n                children.push(p = this.createItem(p, tuid, val, i, row));\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    async searchOnKey(keyField:Field, param):Promise<number> {\r\n        let {_tuid, _ownerField} = keyField;\r\n        let cTuidSelect = this.cUq.cTuidSelect(_tuid);\r\n        let callParam = param;\r\n        if (_ownerField !== undefined) {\r\n            callParam = param[_ownerField.name];\r\n            if (typeof callParam === 'object') {\r\n                callParam = callParam.id;\r\n            }\r\n        }\r\n        let ret = await cTuidSelect.call(callParam);\r\n        return _tuid.getIdFromObj(ret);\r\n    }\r\n\r\n    addClick = async(item:MapItem) => {\r\n        let {keyIndex, children} = item;\r\n        let keysLen = this.keyFields.length;\r\n        let keysLast = keysLen-1;\r\n        let idx = keyIndex + 1;\r\n        if (idx >= keysLen) return;\r\n        let keyField = this.keyFields[idx];\r\n        let kn = keyField.name;\r\n        let tuid = keyField._tuid;\r\n        let searchParam = {} as any;\r\n        let data = {} as any;\r\n        for (let p=item;p!==undefined;p=p.parent) {\r\n            let {keyIndex:ki, box} = p;\r\n            let kn = this.keyFields[ki].name;\r\n            //searchParam[kn] = data['_' + kn] = box.id;\r\n            searchParam[kn] = data[kn] = box.id;\r\n        }\r\n\r\n        let id = await this.searchOnKey(keyField, searchParam);\r\n        if (id === undefined || id <= 0) return;\r\n        tuid.useId(id);\r\n        let idBox = tuid.boxId(id);\r\n        let arr1 = {} as any;\r\n        let values:any = {};\r\n        if (keyIndex+1===keysLast) {\r\n            tuid.useId(id);\r\n            //values[kn] = arr1['_' + kn] = idBox;\r\n            values[kn] = arr1[kn] = idBox;\r\n            if (this.entity.fields.length > 0) {\r\n                let ret = await this.vCall(VInputValues, data);\r\n                for (let i in ret) {\r\n                    //values[i] = arr1['_' + i] = ret[i];\r\n                    values[i] = arr1[i] = ret[i];\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            //values[kn] = data['_' + kn] = idBox;\r\n            values[kn] = data[kn] = idBox;\r\n            for (let i=idx+1;i<keysLast;i++) {\r\n                //data['_' + this.keyFields[i].name] = 0;\r\n                data[this.keyFields[i].name] = 0;\r\n            }\r\n            // 填map的key field 0 值\r\n            //arr1['_' + this.keyFields[keysLast].name] = 0;\r\n            arr1[this.keyFields[keysLast].name] = 0;\r\n            let {fields} = this.entity;\r\n            for (let f of fields) {\r\n                let {name, type, null:nullable} = f;\r\n                if (!(nullable === true)) {\r\n                    //arr1['_' + f.name] = fieldDefaultValue(type);\r\n                    arr1[f.name] = fieldDefaultValue(type);\r\n                }\r\n            }\r\n        }\r\n        data.arr1 = [arr1];\r\n        await this.entity.actions.add.submit(data);\r\n        let rowIndex = children.findIndex(v => v.box.id === id);\r\n        if (rowIndex < 0) {\r\n            children.push(this.createItem(item, tuid, idBox, idx, values));\r\n        }\r\n        else {\r\n            let {fields} = this.entity;\r\n            if (fields !== undefined && fields.length > 0) {\r\n                let row = children[rowIndex];\r\n                children.splice(rowIndex, 1);\r\n                row.values = values;\r\n                /*\r\n                for (let f of fields) {\r\n                    let {name:fn} = f;\r\n                    row.values[fn] = values[fn];\r\n                }*/\r\n                children.splice(rowIndex, 0, row);\r\n            }\r\n        }\r\n        this.removeCeased();\r\n    }\r\n\r\n    removeClick = async(item:MapItem) => {\r\n        let keyField = this.keyFields[item.keyIndex];\r\n        let tuid = keyField._tuid;\r\n        let cTuidMain = this.cUq.cTuidMain(tuid.Main);\r\n        let label = cTuidMain.getLable(tuid);\r\n        let confirmDelete:_.TemplateExecutor = \r\n            this.res.confirmDelete \r\n            || _.template('do you really want to remove ${label}?');\r\n        if (confirm(confirmDelete({label:label})) === false) return;\r\n        let map:Map = this.entity;\r\n        let data = {} as any;\r\n        let arr1 = data['arr1'] = [];\r\n        let v0 = {} as any;\r\n        arr1.push(v0);\r\n        for (let p=item; p!==undefined;p=p.parent) {\r\n            let ki=p.keyIndex;\r\n            //v0['_'+this.keyFields[ki].name] = p.box.id;\r\n            v0[this.keyFields[ki].name] = p.box.id;\r\n        }\r\n        let len = this.keyFields.length;\r\n        for (let i=item.keyIndex+1; i<len; i++) {\r\n            let k = this.keyFields[i];\r\n            //v0['_'+k.name] = -1;\r\n            v0[k.name] = -1;\r\n        }\r\n        await map.actions.del.submit(data);\r\n        let children = item.parent.children;\r\n        let index = children.findIndex(v => v === item);\r\n        if (index >= 0) children.splice(index, 1);\r\n    }\r\n\r\n    protected get VMapMain():typeof VMapMain {return VMapMain}\r\n}\r\n","export * from './cMap';\r\nexport * from './vMain';\r\n","import * as React from 'react';\r\nimport { TuidMain, Pending, Entity } from '../../entities';\r\nimport { Page } from 'tonva-tools';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CPending, PendingUI } from './cPending';\r\n\r\nexport class VPendingMain extends VEntity<Pending, PendingUI, CPending> {\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        pending\r\n    </Page>;\r\n}\r\n","import { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Pending } from \"../../entities\";\r\nimport { VPendingMain } from \"./vPendingMain\";\r\n\r\nexport interface PendingUI extends EntityUI {\r\n    CPending?: typeof CPending;\r\n    main: typeof VPendingMain,\r\n}\r\n\r\nexport class CPending extends CEntity<Pending, PendingUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VPendingMain);\r\n    }\r\n\r\n    protected get VPendingMain():typeof VPendingMain {return VPendingMain}\r\n}\r\n","export * from './cPending';\r\nexport * from './vPendingMain';\r\n","import * as React from 'react';\r\nimport { VPage, Page } from 'tonva-tools';\r\nimport { jsonStringify } from '../../tools';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CAction, ActionUI } from './cAction';\r\nimport { Action } from '../../entities';\r\n\r\nexport class VActionMain extends VEntity<Action, ActionUI, CAction> {\r\n    protected vForm: VForm;\r\n    protected returns: any;\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        this.openPage(this.mainPage);\r\n    }\r\n\r\n    private onSubmit = async () => {\r\n        let values = this.vForm.getValues();\r\n        this.returns = await this.controller.submit(values);\r\n        this.closePage();\r\n        this.openPage(this.resultPage);\r\n    }\r\n\r\n    protected mainPage = () => {\r\n        let {label} = this.controller;\r\n        return <Page header={label}>\r\n            {this.vForm.render('mx-3 my-2')}\r\n        </Page>;\r\n    }\r\n\r\n    protected resultPage = () => {\r\n        let {label} = this.controller;\r\n        return <Page header={label} back=\"close\">\r\n            完成！\r\n            <pre>\r\n                {jsonStringify(this.returns)}\r\n            </pre>\r\n        </Page>;\r\n    }\r\n}\r\n","import { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Action } from \"../../entities\";\r\nimport { VActionMain } from \"./vActionMain\";\r\n\r\nexport interface ActionUI extends EntityUI {\r\n    CAction?: typeof CAction;\r\n    //main: typeof VActionMain,\r\n}\r\n\r\nexport class CAction extends CEntity<Action, ActionUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VActionMain);\r\n    }\r\n\r\n    protected get VActionMain():typeof VActionMain {return VActionMain}\r\n\r\n    async submit(values:any) {\r\n        return this.entity.submit(values);\r\n    }\r\n}\r\n","export * from './cAction';\r\nexport * from './vActionMain';\r\n","import * as React from 'react';\r\nimport { TuidMain, History, Entity } from '../../entities';\r\nimport { Page } from 'tonva-tools';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CHistory, HistoryUI } from './cHistory';\r\n\r\nexport class VHistoryMain extends VEntity<History, HistoryUI, CHistory> {\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        History\r\n    </Page>;\r\n}\r\n","import { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { History } from \"../../entities\";\r\nimport { VHistoryMain } from \"./vHistoryMain\";\r\n\r\nexport interface HistoryUI extends EntityUI {\r\n    CHistory?: typeof CHistory;\r\n    main: typeof VHistoryMain,\r\n}\r\n\r\nexport class CHistory extends CEntity<History, HistoryUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VHistoryMain);\r\n    }\r\n\r\n    protected get VHistoryMain():typeof VHistoryMain {return VHistoryMain}\r\n}\r\n","export * from './cHistory';\r\nexport * from './vHistoryMain';\r\n","import _ from 'lodash';\r\nimport { Context } from '../context';\r\nimport { FormRes } from '../formRes';\r\n\r\nexport abstract class Rule {\r\n    abstract check(defy:string[], value:any):void;\r\n}\r\n\r\nexport type ContextRule = (context:Context)=>{[target:string]:string[]|string} | string[] | string;\r\nexport type FieldRule = (value:any) => string[] | string;\r\n\r\nexport class RuleCustom extends Rule {\r\n    private func: FieldRule;\r\n    constructor(func: FieldRule) {\r\n        super();\r\n        this.func = func;\r\n    }\r\n    check(defy:string[], value:any) {\r\n        let ret = this.func(value);\r\n        if (ret === undefined) return;\r\n        switch (typeof ret) {\r\n            case 'undefined': return;\r\n            case 'string': defy.push(ret as string); return;\r\n            default: defy.push(...ret); return;\r\n        }        \r\n    }\r\n}\r\n\r\nexport abstract class RulePredefined extends Rule {\r\n    protected res: FormRes;\r\n    constructor(res: FormRes) {\r\n        super();\r\n        this.res = res;\r\n    }\r\n}\r\n\r\nexport class RuleRequired extends RulePredefined {\r\n    check(defy:string[], value:any) {\r\n        switch (typeof value) {\r\n            default:\r\n            case 'boolean': return;\r\n            case 'object':\r\n                if (value !== null) return;\r\n                break;\r\n            case 'string':\r\n                if ((value as string).trim().length > 0) return;\r\n                break;\r\n            case 'number':\r\n                if ((value as number) !== NaN) return;\r\n                break;\r\n            case 'undefined':\r\n                break;\r\n        }\r\n        defy.push(this.res.required);\r\n    }\r\n}\r\n\r\nexport class RuleNum extends RulePredefined {\r\n    private minMsg: _.TemplateExecutor;\r\n    private maxMsg: _.TemplateExecutor;\r\n    protected min: number;\r\n    protected max: number\r\n    constructor(res: FormRes, min?: number, max?: number) {\r\n        super(res);\r\n        this.minMsg = _.template(res.min);\r\n        this.maxMsg = _.template(res.max);\r\n        this.min = min;\r\n        this.max = max;\r\n    }\r\n    check(defy:string[], value:any) {\r\n        if (value === undefined || value === null) return;\r\n        let n = Number(value);\r\n        if (n === NaN) {\r\n            defy.push(this.res.number);\r\n        }\r\n        else {\r\n            this.checkMore(defy, n);\r\n        }\r\n    }\r\n\r\n    protected checkMore(defy:string[], value: number) {\r\n        if (this.min !== undefined && Number(value) < this.min) {\r\n            defy.push(this.minMsg({min:this.min}));\r\n        }\r\n        if (this.max !== undefined && Number(value) > this.max) {\r\n            defy.push(this.maxMsg({max:this.max}));\r\n        }\r\n    }\r\n}\r\n\r\nexport class RuleInt extends RuleNum {\r\n    protected checkMore(defy:string[], n: number) {\r\n        super.checkMore(defy, n);\r\n        if (Number.isInteger(n) === false) {\r\n            defy.push(this.res.integer);\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { UiItem, ChangingHandler, ChangedHandler } from '../uiSchema';\r\nimport { FieldProps } from '../field';\r\nimport { Context } from '../context';\r\nimport { ItemSchema } from '../schema';\r\nimport { Rule, RuleRequired, RuleCustom, FieldRule } from '../rules';\r\nimport { computed, observable, reaction } from 'mobx';\r\n\r\nexport abstract class Widget {\r\n    protected name: string;\r\n    protected context: Context;\r\n    protected fieldProps:FieldProps;\r\n    protected children: React.ReactNode;\r\n    protected itemSchema: ItemSchema;\r\n    protected ui: UiItem;\r\n    protected defaultValue: any;\r\n    protected value: any;\r\n    protected rules: Rule[];\r\n    @observable protected errors: string[] = [];\r\n    @observable protected contextErrors: string[] = [];\r\n    @computed protected get hasError():boolean {return (this.errors.length + this.contextErrors.length)>0}\r\n    protected readOnly:boolean;\r\n    protected disabled:boolean;\r\n    @observable visible:boolean;\r\n\r\n    constructor(context:Context, itemSchema:ItemSchema, fieldProps:FieldProps, children: React.ReactNode) {\r\n        this.context = context;\r\n        let {name} = itemSchema;\r\n        this.name = name;\r\n        this.itemSchema = itemSchema;\r\n        this.fieldProps = fieldProps;\r\n        this.children = children;\r\n        this.ui = context.getUiItem(name);\r\n        if (this.ui === undefined) {\r\n            this.readOnly = false;\r\n            this.disabled = false;\r\n            this.visible = true;\r\n        }\r\n        else {\r\n            let {readOnly, disabled, visible} = this.ui;\r\n            this.readOnly = (readOnly === true);\r\n            this.disabled = (disabled === true);\r\n            this.visible = !(visible === false);            \r\n        }\r\n        this.value = this.defaultValue =  context.getValue(name); //defaultValue;\r\n        this.init();\r\n    }\r\n\r\n    protected init() {\r\n        this.rules = [];\r\n        if (this.itemSchema.required === true) {\r\n            this.rules.push(new RuleRequired(this.context.form.res));\r\n        }\r\n        this.buildRules();\r\n        if (this.ui === undefined) return;\r\n        let {rules} = this.ui;\r\n        if (rules === undefined) return;\r\n        if (Array.isArray(rules) === false) {\r\n            this.rules.push(new RuleCustom(rules as FieldRule));\r\n            return;\r\n        }\r\n        for (let rule of rules as FieldRule[]) {\r\n            this.rules.push(new RuleCustom(rule));\r\n        }\r\n    }\r\n\r\n    protected buildRules() {\r\n    }\r\n\r\n    checkRules() {\r\n        let defy:string[] = [];\r\n        for (let r of this.rules) r.check(defy, this.value);\r\n        if (defy.length === 0) {\r\n            this.context.removeErrorWidget(this);\r\n        }\r\n        else {\r\n            this.context.addErrorWidget(this);\r\n            this.errors.push(...defy);\r\n        }\r\n    }\r\n\r\n    @computed get isOk() {\r\n        return this.errors.length ===0;\r\n    }\r\n\r\n    setError(err:string | string[]) {\r\n        if (err === undefined) return;\r\n        if (typeof err === 'string') this.errors.push(err);\r\n        else this.errors.push(...err);\r\n    }\r\n\r\n    setContextError(err:string | string[]) {\r\n        if (err === undefined) return;\r\n        if (typeof err === 'string') this.contextErrors.push(err);\r\n        else this.contextErrors.push(...err);\r\n    }\r\n\r\n    clearError() {\r\n        this.errors.splice(0);\r\n    }\r\n\r\n    clearContextError() {\r\n        this.contextErrors.splice(0);\r\n    }\r\n\r\n    protected parse(value:any):any {return value}\r\n\r\n    protected setElementValue(value:any) {}\r\n    protected setDataValue(value:any) {\r\n        if (this.isChanging === true) return;\r\n        this.context.initData[this.name] = this.value = this.parse(value);\r\n    }\r\n\r\n    setValue(value:any) {\r\n        if (this.isChanging === true) return;\r\n        //this.setDataValue(value);\r\n        //this.setElementValue(value);\r\n        this.changeValue(value, false);\r\n    }\r\n\r\n    getValue() {\r\n        return this.context.getValue(this.name);\r\n    }\r\n\r\n    getReadOnly():boolean {return this.readOnly}\r\n    getDisabled():boolean {return this.disabled}\r\n    getVisible():boolean {return this.visible}\r\n    setReadOnly(value:boolean) {this.readOnly = value}\r\n    setDisabled(value:boolean) {this.disabled = value}\r\n    setVisible(value:boolean) {this.visible = value}\r\n\r\n    private isChanging: boolean;\r\n    protected onInputChange = (evt: React.ChangeEvent<any>) => {\r\n        this.changeValue(evt.target.value, true);\r\n        /*\r\n        let prev = this.value;\r\n        let onChanging: ChangingHandler;\r\n        let onChanged: ChangedHandler;\r\n        if (this.ui !== undefined) {\r\n            onChanging = this.ui.onChanging;\r\n            onChanged = this.ui.onChanged;\r\n        }\r\n        let allowChange = true;\r\n        if (onChanging !== undefined) {\r\n            this.isChanging = true;\r\n            allowChange = onChanging(this.context, this.value, prev);\r\n            this.isChanging = false;\r\n        }\r\n        if (allowChange === true) {\r\n            this.setDataValue(evt.currentTarget.value);\r\n            if (onChanged !== undefined) {\r\n                this.isChanging = true;\r\n                onChanged(this.context, this.value, prev);\r\n                this.isChanging = false;\r\n            }\r\n        }\r\n        */\r\n    }\r\n\r\n    protected changeValue(newValue: any, fromElement: boolean) {\r\n        let prev = this.value;\r\n        let onChanging: ChangingHandler;\r\n        let onChanged: ChangedHandler;\r\n        if (this.ui !== undefined) {\r\n            onChanging = this.ui.onChanging;\r\n            onChanged = this.ui.onChanged;\r\n        }\r\n        let allowChange = true;\r\n        if (onChanging !== undefined) {\r\n            this.isChanging = true;\r\n            allowChange = onChanging(this.context, this.value, prev);\r\n            this.isChanging = false;\r\n        }\r\n        if (allowChange === true) {\r\n            this.setDataValue(newValue);\r\n            if (fromElement !== true) this.setElementValue(newValue);\r\n            if (onChanged !== undefined) {\r\n                this.isChanging = true;\r\n                onChanged(this.context, this.value, prev);\r\n                this.isChanging = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    protected get className():string {\r\n        let fieldClass:string;\r\n        if (this.context.inNode === false) fieldClass = 'form-control';\r\n        return classNames(fieldClass, this.context.form.FieldClass, this.ui && this.ui.className);\r\n    }\r\n\r\n    protected abstract render():JSX.Element;\r\n\r\n    renderContainer():JSX.Element {\r\n        if (this.visible === false) return null;\r\n        let {form, inNode} = this.context;\r\n        if (inNode === true) return this.render();\r\n        let label:any;\r\n        if (this.ui === undefined) {\r\n            label = this.name;\r\n        }\r\n        else {\r\n            let uiLabel = this.ui.label;\r\n            if (uiLabel === null) label = null;\r\n            label = uiLabel || this.name;\r\n        }\r\n        if (this.itemSchema.required === true && form.props.requiredFlag !== false) {\r\n            if (label !== null) label = <>{label}&nbsp;<span className=\"text-danger\">*</span></>;\r\n        }\r\n        return form.FieldContainer(label, this.render());\r\n    }\r\n\r\n    protected renderTemplet():JSX.Element | undefined {\r\n        if (this.children !== undefined) {\r\n            return <>{this.children}</>;\r\n        }\r\n        if (this.ui === undefined) return undefined;\r\n        let {Templet} = this.ui;\r\n        if (typeof Templet === 'function') return Templet(this.value);\r\n        return Templet;\r\n    }\r\n\r\n    protected renderErrors() {\r\n        let errorList:string[] = [...this.errors, ...this.contextErrors];\r\n        if (errorList.length === 0) return null;\r\n        let {inNode} = this.context;\r\n        let tag = inNode === true? 'span' : 'div';\r\n        return errorList.map(err => React.createElement(tag, \r\n            {\r\n                key: err, \r\n                className: 'text-danger d-inline-block my-2 ml-3'\r\n            },\r\n            <><i className=\"fa fa-exclamation-circle\" /> &nbsp;{err}</>\r\n        ));\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiTextItem } from '../uiSchema';\r\nimport { StringSchema } from '../schema';\r\n\r\nexport class TextWidget extends Widget {\r\n    protected inputType = 'text';\r\n    protected ui: UiTextItem;\r\n    protected input: HTMLInputElement;\r\n\r\n    protected setElementValue(value:any) {\r\n        if (this.input === null) return;\r\n        this.input.value = value;\r\n    }\r\n    protected get placeholder() {return (this.ui && this.ui.placeholder) || this.name}\r\n    protected onKeyDown: (evt:React.KeyboardEvent<HTMLInputElement>)=>void;\r\n\r\n    protected onBlur(evt: React.FocusEvent<any>) {\r\n        this.onInputChange(evt);\r\n        this.checkRules();\r\n        this.context.checkContextRules();\r\n    }\r\n    protected onFocus(evt: React.FocusEvent<any>) {\r\n        this.clearError();\r\n        this.context.removeErrorWidget(this);\r\n        this.context.removeErrors();\r\n    }\r\n    protected onChange(evt: React.ChangeEvent<any>) {\r\n    }\r\n\r\n    setReadOnly(value:boolean) {\r\n        if (this.input === null) return;\r\n        this.input.readOnly = this.readOnly = value;\r\n    }\r\n    setDisabled(value:boolean) {\r\n        if (this.input === null) return;\r\n        this.input.disabled = this.disabled = value;\r\n    }\r\n\r\n    render() {\r\n        let renderTemplet = this.renderTemplet();\r\n        if (renderTemplet !== undefined) return renderTemplet;\r\n        let cn = {\r\n            //'form-control': true,\r\n        };\r\n        if (this.hasError === true) {\r\n            cn['is-invalid'] = true;\r\n        }\r\n        else {\r\n            cn['required-item'] = this.itemSchema.required === true;\r\n        }\r\n        return <><input ref={input=>this.input = input}\r\n            className={classNames(this.className, cn)}\r\n            type={this.inputType}\r\n            defaultValue={this.value}\r\n            onChange={(evt: React.ChangeEvent<any>) => this.onChange(evt)}\r\n            placeholder={this.placeholder}\r\n            readOnly={this.readOnly}\r\n            disabled={this.disabled}\r\n            onKeyDown = {this.onKeyDown}\r\n            onFocus = {(evt: React.FocusEvent<any>) => this.onFocus(evt)}\r\n            onBlur={(evt: React.FocusEvent<any>) => this.onBlur(evt)}\r\n            maxLength={(this.itemSchema as StringSchema).maxLength} />\r\n            {this.renderErrors()}\r\n        </>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { TextWidget } from './textWidget';\r\nimport { RuleNum, RuleInt } from '../rules';\r\nimport { NumBaseSchema } from '../schema';\r\n\r\nexport class NumberWidget extends TextWidget {\r\n    protected inputType = 'number';\r\n    protected itemSchema: NumBaseSchema;\r\n\r\n    protected buildRules() {\r\n        super.buildRules();\r\n        let res = this.context.form.res;\r\n        let {min, max} = this.itemSchema;\r\n        this.rules.push(\r\n            this.itemSchema.type === 'integer'?\r\n                new RuleNum(res, min, max) :\r\n                new RuleInt(res, min, max)\r\n        );\r\n        /*\r\n        if (this.itemSchema.type === 'integer') {\r\n            this.rules.push(new RuleInt);\r\n        }\r\n        let {min, max} = this.itemSchema;\r\n        if (min !== undefined) this.rules.push(new RuleMin(min));\r\n        if (max !== undefined) this.rules.push(new RuleMax(max));\r\n        */\r\n    }\r\n\r\n    protected parse(value:any):any {\r\n        if (value === undefined || value === null) return;\r\n        return Number(value);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { NumberWidget } from './numberWidget';\r\n\r\nexport class UpdownWidget extends NumberWidget {\r\n    protected inputType = 'number';\r\n\r\n    protected isValidKey(key:number):boolean {\r\n        return key===46 || key===8 || key===37 || key===39\r\n            || key>=48 && key<=57\r\n            || key>=96 && key<=105\r\n            || key===109 || key===189;\r\n    }\r\n    \r\n    protected onKeyDown = (evt:React.KeyboardEvent<HTMLInputElement>) => {\r\n        let key = evt.keyCode;\r\n        event.returnValue = this.isValidKey(key);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { TextWidget } from './textWidget';\r\n\r\nexport class DateWidget extends TextWidget {\r\n    protected inputType = 'date';\r\n}\r\n\r\nexport class DateTimeWidget extends TextWidget {\r\n    protected inputType = 'datetime';\r\n}\r\n\r\nexport class TimeWidget extends TextWidget {\r\n    protected inputType = 'time';\r\n}\r\n\r\nexport class MonthWidget extends TextWidget {\r\n    protected inputType = 'month';\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiCheckItem } from '../uiSchema';\r\n\r\nexport class CheckBoxWidget extends Widget {\r\n    protected input: HTMLInputElement;\r\n    protected ui: UiCheckItem;\r\n    protected trueValue: any;\r\n    protected falseValue: any;\r\n\r\n    protected init() {\r\n        super.init();\r\n        if (this.ui !== undefined) {\r\n            let {trueValue, falseValue} = this.ui;\r\n            if (trueValue === undefined) this.trueValue = true;\r\n            else this.trueValue = trueValue;\r\n            if (falseValue === undefined) this.falseValue = false;\r\n            else this.falseValue = falseValue;\r\n        }\r\n        else {\r\n            this.trueValue = true;\r\n            this.falseValue = false;\r\n        }\r\n    }\r\n    protected setElementValue(value:any) {\r\n        this.input.checked = value === this.trueValue;\r\n    }\r\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\r\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\r\n\r\n    protected onInputChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setDataValue(evt.target.checked === true? this.trueValue : this.falseValue);\r\n    }\r\n\r\n    protected onClick = () => {\r\n        this.context.removeErrors();\r\n    }\r\n\r\n    render() {\r\n        let cn = classNames(this.className, 'form-check-inline');\r\n        let input = <input\r\n            ref={(input)=>this.input = input}\r\n            className={'align-self-center'}\r\n            type=\"checkbox\"\r\n            defaultChecked={this.defaultValue} \r\n            onChange={this.onInputChange}\r\n            onClick={this.onClick} />;\r\n        return this.context.inNode?\r\n            <label className={cn}>\r\n                {input} {(this.ui&&this.ui.label) || this.name}\r\n            </label>\r\n            :\r\n            <div className={cn}>{input}</div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\nimport { Widget } from './widget';\r\nimport { UiSelect } from '../uiSchema';\r\n\r\nexport class SelectWidget extends Widget {\r\n    protected select: HTMLSelectElement;\r\n    protected ui: UiSelect;\r\n    @observable protected readOnly: boolean;\r\n\r\n    protected setElementValue(value:any) {this.select.value = value}\r\n    protected onInputChange = (evt:React.ChangeEvent<HTMLSelectElement>) => {\r\n        this.setDataValue(evt.target.value);\r\n    }\r\n\r\n    setReadOnly(value:boolean) {this.select.disabled = this.readOnly = !value}\r\n    setDisabled(value:boolean) {this.select.disabled = this.disabled = value}\r\n\r\n    render() {\r\n        if (this.readOnly === true) {\r\n            let option = this.ui.list.find(v => v.value === this.value);\r\n            let title = (option === undefined)? '(???)' : option.title;\r\n            return <span className=\"form-control w-min-6c\">{title}</span>;\r\n        }\r\n        return <select\r\n            ref={(select)=>this.select = select}\r\n            className={classNames(this.className, 'form-control')}\r\n            defaultValue={this.defaultValue} \r\n            onChange={this.onInputChange}>\r\n            {this.ui.list.map((v,index) => {\r\n                let {title, value} = v;\r\n                let cn:string;\r\n                //if (value === undefined || value === null) cn = 'text-light small';\r\n                //else cn = 'text-danger';\r\n                return <option className={cn} key={index} value={value}>{title || value}</option>\r\n            })}\r\n        </select>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiIdItem, TempletType } from '../uiSchema';\r\nimport { observable } from 'mobx';\r\n\r\nexport class IdWidget extends Widget {\r\n    protected ui: UiIdItem;\r\n    @observable protected value:number;\r\n    setReadOnly(value:boolean) {this.readOnly = value}\r\n    setDisabled(value:boolean) {this.disabled = value}    \r\n\r\n    protected onClick = async () => {\r\n        let pickId = this.ui && this.ui.pickId;\r\n        if (pickId === undefined) {\r\n            alert('no pickId defined!');\r\n            return;\r\n        }\r\n        let id = await pickId(this.context, this.name, this.value);        \r\n        this.setDataValue(id);\r\n        this.clearError();\r\n        this.clearContextError();\r\n        this.checkRules();\r\n    }\r\n\r\n    render() {\r\n        let placeholder:string|JSX.Element, Templet: TempletType;\r\n        if (this.ui !== undefined) {\r\n            placeholder = this.ui.placeholder;\r\n            Templet = this.ui.Templet;\r\n        }\r\n        let cn = {\r\n            'form-control': true,\r\n            'required-item': this.itemSchema.required === true,\r\n            'cursor-pointer': true,\r\n            'is-invalid': this.hasError,\r\n        };\r\n        let content;\r\n        if (this.value === undefined || this.value === null) {\r\n            content = placeholder || 'placeholder';\r\n            cn['text-muted'] = true;\r\n        }\r\n        else if (Templet === undefined) {\r\n            content = <>{this.value}</>;\r\n        }\r\n        else if (typeof Templet === 'function') {\r\n            content = Templet(this.value);\r\n        }\r\n        else {\r\n            content = Templet;\r\n        }\r\n        return <>\r\n            <div className={classNames(cn)} onClick={this.onClick}>{content}</div>\r\n            {this.renderErrors()}\r\n        </>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { DataType } from '../schema';\r\nimport { UiType } from '../uiSchema';\r\n\r\nexport const Unknown = (dataType:DataType, uiType:UiType, dataTypes:DataType[]) => {\r\n    return <span className=\"text-danger\">!!data type {dataType} only support {(dataTypes || []).join(', ')}, can't use ui {uiType}!!</span>;\r\n};\r\n","import * as React from 'react';\r\nimport { UiButton, TempletType } from '../uiSchema';\r\nimport { Unknown } from './unknown';\r\nimport { Widget } from './widget';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class ButtonWidget extends Widget {\r\n    protected ui: UiButton;\r\n\r\n    protected onClick = async () => {\r\n        this.clearError();\r\n        this.clearContextError();\r\n        let {name, type} = this.itemSchema;\r\n        if (type === 'submit') {\r\n            this.context.checkRules()\r\n            if (this.context.hasError === true) {\r\n                return;\r\n            }\r\n        }\r\n        let {onButtonClick} = this.context.form.props;\r\n        if (onButtonClick === undefined) {\r\n            alert(`button ${name} clicked. you should define form onButtonClick`);\r\n            return;\r\n        }\r\n        let ret = await onButtonClick(name, this.context);\r\n        if (ret === undefined) return;\r\n        this.context.setError(name, ret);\r\n    }\r\n\r\n    private observerRender = observer(() => {\r\n        let {name, type} = this.itemSchema;\r\n        let Templet:TempletType, cn:string, label:string;\r\n        if (this.ui !== undefined) {\r\n            let {widget:widgetType} = this.ui;\r\n            if (widgetType !== 'button') return Unknown(type, widgetType, ['button']);\r\n            Templet = this.ui.Templet;\r\n            cn = this.ui.className;\r\n            label = this.ui.label;\r\n        }\r\n        let {form, hasError} = this.context;\r\n        let context = this.context;\r\n        let disabled = type==='submit' && hasError;\r\n        let content:any;\r\n        if (this.children !== undefined) content = this.children;\r\n        else if (typeof Templet === 'function') content = Templet();\r\n        else if (Templet !== undefined) content = Templet;\r\n        else content = label; \r\n        let button = <button \r\n            className={cn} \r\n            type=\"button\"\r\n            disabled={disabled}\r\n            onClick={this.onClick}>\r\n            {content || name}\r\n        </button>;\r\n        if (context.inNode === true) return <>{button}{this.renderErrors()}</>;\r\n        return <div className={form.ButtonClass}>\r\n            <div>{this.renderErrors()}</div>\r\n            {button}\r\n        </div>;\r\n    });\r\n    \r\n    render() {\r\n        return <this.observerRender />\r\n    }\r\n\r\n    renderContainer():JSX.Element {\r\n        if (this.visible === false) return null;        \r\n        let {form, inNode} = this.context;\r\n        if (inNode === true) return this.render();\r\n        return form.FieldContainer(null, this.render());\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\n//import { ArrRow } from '../arrRow';\r\nimport { Context, RowContext, ContextContainer } from '../context';\r\nimport { ArrSchema } from '../schema';\r\nimport { UiArr, TempletType } from '../uiSchema';\r\nimport { Unknown } from './unknown';\r\nimport { factory } from './factory';\r\n\r\nexport const ArrComponent = observer((\r\n    {parentContext, arrSchema, children}:{parentContext: Context, arrSchema: ArrSchema, children: React.ReactNode}) => \r\n{\r\n    let {name, arr} = arrSchema;\r\n    let data = parentContext.initData[name] as any[];\r\n    let {form} = parentContext;\r\n    let arrRowContexts = parentContext.getArrRowContexts(name);\r\n    let ui = parentContext.getUiItem(name) as UiArr;\r\n    let arrLabel = name;\r\n    let Templet:TempletType;\r\n    let selectable:boolean, deletable:boolean, restorable:boolean;\r\n    let {ArrContainer, RowContainer, RowSeperator, uiSchema} = form;\r\n    if (uiSchema !== undefined) {\r\n        let {selectable:formSelectable, deletable:formDeletable, restorable:formRestorable} = uiSchema;\r\n        if (selectable !== true) selectable = formSelectable;\r\n        if (deletable !== true) deletable = formDeletable;\r\n        if (restorable !== true) restorable = formRestorable;\r\n    }\r\n    if (ui !== undefined) {\r\n        let {widget:widgetType, label, \r\n            selectable:arrSelectable, deletable:arrDeletable, restorable:arrRestorable,\r\n            ArrContainer:ac, RowContainer:rc, RowSeperator:rs\r\n        } = ui;\r\n        if (arrSelectable !== undefined) selectable = arrSelectable;\r\n        if (arrDeletable !== undefined) deletable = arrDeletable;\r\n        if (arrRestorable !== undefined) restorable = arrRestorable;\r\n        if (ac !== undefined) ArrContainer = ac;\r\n        if (rc !== undefined) RowContainer = rc;\r\n        if (rs !== undefined) RowSeperator = rs;\r\n        Templet = ui.Templet;\r\n        if (widgetType !== 'arr') return Unknown(arrSchema.type, widgetType, ['arr']);\r\n        arrLabel = label || arrLabel;\r\n    }\r\n    let first = true;\r\n    return ArrContainer(arrLabel, <>\r\n        {data.map((row:any, index) => {\r\n            let rowContext: RowContext;\r\n            let rowContent: JSX.Element;\r\n            let sep = undefined;\r\n            if (first === false) sep = RowSeperator;\r\n            else first = false;\r\n            if (children !== undefined) {\r\n                rowContext = new RowContext(parentContext, arrSchema, row, true);\r\n                rowContent = <>{children}</>;\r\n            }\r\n            else {\r\n                let typeofTemplet = typeof Templet;\r\n                if (typeofTemplet === 'function') {\r\n                    rowContext = new RowContext(parentContext, arrSchema, row, true);\r\n                    rowContent = React.createElement(observer(Templet as React.StatelessComponent), row);\r\n                }\r\n                else if (typeofTemplet === 'object') {\r\n                    rowContext = new RowContext(parentContext, arrSchema, row, true);\r\n                    rowContent = Templet as JSX.Element;\r\n                }\r\n                else {\r\n                    rowContext = new RowContext(parentContext, arrSchema, row, false);\r\n                    rowContent = <>{\r\n                        arr.map((v, index) => {\r\n                            return <React.Fragment key={v.name}>\r\n                                {factory(rowContext, v, undefined)}\r\n                            </React.Fragment>\r\n                        })}\r\n                    </>;\r\n                }\r\n            }\r\n            let {rowKey} = rowContext;\r\n            arrRowContexts[rowKey] = rowContext;\r\n\r\n            let selectCheck:JSX.Element, deleteIcon:JSX.Element;\r\n            if (selectable === true) {\r\n                let onClick = (evt: React.MouseEvent<HTMLInputElement>)=>{\r\n                    let {checked} = (evt.target as HTMLInputElement);\r\n                    row.$isSelected = checked;\r\n                    let {$source} = row;\r\n                    if ($source !== undefined) $source.$isSelected = checked;\r\n                    rowContext.removeErrors();\r\n                }\r\n                selectCheck = <div className=\"form-row-checkbox\">\r\n                    <input type=\"checkbox\" onClick={onClick} defaultChecked={row.$isSelected} />\r\n                </div>;\r\n            }\r\n            let isDeleted = !(row.$isDeleted===undefined || row.$isDeleted===false);\r\n            if (deletable === true) {\r\n                let icon = isDeleted? 'fa-undo' : 'fa-trash';\r\n                let onDelClick = () => {\r\n                    if (restorable === true) {\r\n                        row.$isDeleted = !isDeleted;\r\n                        let {$source} = row;\r\n                        if ($source !== undefined) $source.$isDeleted = !isDeleted;\r\n                    }\r\n                    else {\r\n                        let p = data.indexOf(row);\r\n                        if (p>=0) data.splice(p, 1);\r\n                    }\r\n                    rowContext.removeErrors();\r\n                }\r\n                deleteIcon = <div className=\"form-row-edit text-info\" onClick={onDelClick}>\r\n                    <i className={classNames('fa', icon, 'fa-fw')} />\r\n                </div>;\r\n            }\r\n            let editContainer = selectable===true || deletable===true?\r\n                (content:any) => <fieldset disabled={isDeleted}><div className={classNames('d-flex', {'deleted':isDeleted, 'row-selected':row.$isSelected})}>\r\n                    {selectCheck}<div className=\"flex-grow-1\">{content}</div>{deleteIcon}\r\n                </div></fieldset>\r\n                :\r\n                (content:any) => content;\r\n\r\n            return <ContextContainer.Provider key={rowKey} value={rowContext}>\r\n                {sep}\r\n                {RowContainer(editContainer(<><rowContext.renderErrors />{rowContent}</>))}\r\n            </ContextContainer.Provider>;\r\n        })}\r\n    </>);\r\n});\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport { Schema, ArrSchema, DataType, ButtonSchema, ItemSchema } from '../schema';\r\nimport { UiItem, UiArr, UiType, UiButton, TempletType, TypeWidget, UiCustom } from '../uiSchema';\r\nimport { TextWidget } from './textWidget';\r\nimport { TextAreaWidget } from './textareaWidget';\r\nimport { PasswordWidget, UrlWidget, EmailWidget } from './passwordWidget';\r\nimport { UpdownWidget } from './updownWidget';\r\nimport { NumberWidget } from './numberWidget';\r\nimport { DateWidget, DateTimeWidget, TimeWidget, MonthWidget } from './dateWidget';\r\nimport { CheckBoxWidget } from './checkBoxWidget';\r\nimport { FieldProps } from '../field';\r\nimport { Context, RowContext, FormContext, ContextContainer } from '../context';\r\nimport { SelectWidget } from './selectWidget';\r\nimport { RadioWidget } from './radioWidget';\r\nimport { RangeWidget } from './rangeWidget';\r\nimport { IdWidget } from './idWidget';\r\nimport { ButtonWidget } from './buttonWidget';\r\nimport { ArrComponent } from './arrComponent';\r\n\r\nconst widgetsFactory: {[type: string]: {widget?: TypeWidget, dataTypes?: DataType[]}} = {\r\n    id: {\r\n        dataTypes: ['id'],\r\n        widget: IdWidget,\r\n    },\r\n    text: {\r\n        dataTypes: ['integer', 'number', 'string'],\r\n        widget: TextWidget\r\n    },\r\n    textarea: {\r\n        dataTypes: ['string'],\r\n        widget: TextAreaWidget\r\n    },\r\n    password: {\r\n        dataTypes: ['string'],\r\n        widget: PasswordWidget\r\n    },\r\n    date: {\r\n        dataTypes: ['date'],\r\n        widget: DateWidget\r\n    },\r\n    datetime: {\r\n        dataTypes: ['date'],\r\n        widget: DateTimeWidget\r\n    },\r\n    time: {\r\n        dataTypes: ['date'],\r\n        widget: TimeWidget\r\n    },\r\n    month: {\r\n        dataTypes: ['date'],\r\n        widget: MonthWidget\r\n    },\r\n    select: {\r\n        dataTypes: ['integer', 'number', 'string', 'date', 'boolean'],\r\n        widget: SelectWidget\r\n    },\r\n    url: {\r\n        dataTypes: ['string'],\r\n        widget: UrlWidget\r\n    },\r\n    email: {\r\n        dataTypes: ['string'],\r\n        widget: EmailWidget\r\n    },\r\n    number: {\r\n        dataTypes: ['integer', 'number'],\r\n        widget: NumberWidget\r\n    },\r\n    updown: {\r\n        dataTypes: ['integer', 'number'],\r\n        widget: UpdownWidget\r\n    },\r\n    color: {\r\n\r\n    },\r\n    checkbox: {\r\n        dataTypes: ['boolean', 'integer', 'number'],\r\n        widget: CheckBoxWidget\r\n    },\r\n    checkboxes: {\r\n\r\n    },\r\n    radio: {\r\n        dataTypes: ['integer', 'number', 'string', 'date', 'boolean'],\r\n        widget: RadioWidget\r\n    },\r\n    range: {\r\n        dataTypes: ['integer'],\r\n        widget: RangeWidget,\r\n    },\r\n    button: {\r\n        dataTypes: ['button', 'submit'],\r\n        widget: ButtonWidget,\r\n    }\r\n}\r\n\r\nexport function factory(context: Context, itemSchema: ItemSchema, children:React.ReactNode, fieldProps?: FieldProps):JSX.Element {\r\n    if (context === undefined) {\r\n        debugger;\r\n        return null;\r\n    }\r\n    if (itemSchema === undefined) return undefined;\r\n    let {name, type} = itemSchema;\r\n    switch (type) {\r\n    case 'arr':\r\n        let arrSchema = context.getItemSchema(name) as ArrSchema;\r\n        return <ArrComponent parentContext={context} arrSchema={arrSchema} children={children} />;\r\n    default:\r\n        break;\r\n    }\r\n\r\n    let typeWidget: TypeWidget;\r\n    let ui = context.getUiItem(name);\r\n    function getTypeWidget(t:DataType): TypeWidget {\r\n        switch(t) {\r\n        default: return TextWidget; \r\n        case 'id': return IdWidget;\r\n        case 'integer': return UpdownWidget;\r\n        case 'number': return NumberWidget; \r\n        case 'string': return TextWidget; \r\n        case 'date': return DateWidget; \r\n        case 'boolean': return CheckBoxWidget; \r\n        case 'button':\r\n        case 'submit': return ButtonWidget;\r\n        }\r\n    }\r\n    if (ui === undefined) { \r\n        typeWidget = getTypeWidget(type);\r\n    }\r\n    else {\r\n        let {widget:widgetType} = ui;\r\n        switch (widgetType) {\r\n        default:\r\n            if (widgetType !== undefined) {\r\n                let widgetFactory = widgetsFactory[widgetType];\r\n                typeWidget = widgetFactory.widget;\r\n            }\r\n            if (typeWidget === undefined) typeWidget = getTypeWidget(type);\r\n            break;\r\n        case 'custom':\r\n            typeWidget = (ui as UiCustom).WidgetClass;\r\n            break;\r\n        case 'group':\r\n            return <span>impletment group</span>;\r\n        }\r\n        //label = uiLabel || name;\r\n    }\r\n    \r\n    let {isRow, widgets} = context;\r\n    let widget = new typeWidget(context, itemSchema, fieldProps, children);\r\n    widgets[name] = widget;\r\n\r\n    if (isRow === false) {\r\n        let WidgetElement = observer(() => widget.renderContainer());\r\n        return <WidgetElement />;\r\n    }\r\n    else {\r\n        let widgetElement = widget.renderContainer();\r\n        return widgetElement;\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { Widget } from './widget';\r\nimport { UiTextAreaItem } from '../uiSchema';\r\nimport { StringSchema } from '../schema';\r\n\r\nexport class TextAreaWidget extends Widget {\r\n    protected itemSchema: StringSchema;\r\n    protected input: HTMLTextAreaElement;\r\n    protected ui: UiTextAreaItem;\r\n\r\n    protected setElementValue(value:any) {this.input.value = value}\r\n    protected onInputChange = (evt: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        this.setValue(evt.currentTarget.value);\r\n    }\r\n\r\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\r\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\r\n\r\n    render() {\r\n        return <textarea ref={(input) => this.input=input} \r\n            rows={this.ui && this.ui.rows}\r\n            maxLength={this.itemSchema.maxLength}\r\n            defaultValue={this.defaultValue} onChange={this.onInputChange} />\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { TextWidget } from './textWidget';\r\n\r\nexport class PasswordWidget extends TextWidget {\r\n    protected inputType = 'password';\r\n}\r\n\r\nexport class UrlWidget extends TextWidget {\r\n    protected inputType = 'url';\r\n}\r\n\r\nexport class EmailWidget extends TextWidget {\r\n    protected inputType = 'email';\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { TextWidget } from './textWidget';\r\nimport { Widget } from './widget';\r\nimport { UiRadio } from '../uiSchema';\r\nimport { RowContext } from '../context';\r\n\r\n\r\n//const radioStyle:React.CSSProperties = {width:'2em', height:'1.2em'};\r\nexport class RadioWidget extends Widget {\r\n    protected inputs: {[index:number]: HTMLInputElement} = {};\r\n    protected ui: UiRadio;\r\n\r\n    protected setElementValue(value:any) {\r\n        for (let i in this.inputs) {\r\n            let input = this.inputs[i];\r\n            input.checked = value === input.value;\r\n        }\r\n    }\r\n    setReadOnly(value:boolean) {\r\n        this.readOnly = value;\r\n        for (let i in this.inputs) this.inputs[i].readOnly = value;\r\n    }\r\n    setDisabled(value:boolean) {\r\n        this.disabled = value;\r\n        for (let i in this.inputs) this.inputs[i].disabled = value\r\n    }\r\n\r\n    render() {\r\n        let {defaultValue, list} = this.ui;\r\n        let {isRow, inNode} = this.context;\r\n        let rowKey:number;\r\n        if (isRow === true) {\r\n            rowKey = (this.context as RowContext).rowKey;\r\n        }\r\n        let cn = classNames(this.className, 'form-radio-inline');\r\n        return <span className={cn}>\r\n                {list.map((v,index) => {\r\n                    let {value, title} = v;\r\n                    let name = this.name;\r\n                    if (rowKey !== undefined) name += '-' + rowKey;\r\n                    return <label key={index} className=\"form-radio-inline\">\r\n                        <input ref={input=>this.inputs[index]=input} type=\"radio\" name={name}\r\n                            value={value} defaultChecked={(this.defaultValue || defaultValue)===value} />\r\n                        {title || value}\r\n                    </label>;\r\n                    //</span>\r\n                })}\r\n            </span>;\r\n    }\r\n}\r\n/*\r\n<div className=\"form-control d-flex border-0\"><input\r\nref={(input)=>this.input = input}\r\nclassName={classNames(this.className, 'align-self-center')}\r\ntype=\"checkbox\"\r\nstyle={{maxHeight:\"1.2em\"}}\r\ndefaultValue={this.defaultValue} \r\nonChange={this.onChange} />\r\n</div>\r\n*/","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { UiRange } from '../uiSchema';\r\nimport { Widget } from './widget';\r\n\r\nexport class RangeWidget extends Widget {\r\n    protected inputType = 'range';\r\n    protected input: HTMLInputElement;\r\n    protected ui: UiRange;\r\n\r\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\r\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\r\n\r\n    render() {\r\n        let {min, max, step} = this.ui;\r\n        return <><input ref={input=>this.input = input}\r\n            className={classNames(this.className, 'form-control', 'w-min-6c')}\r\n            type={this.inputType}\r\n            defaultValue={this.defaultValue} \r\n            onChange={this.onInputChange}\r\n            max={max}\r\n            min={min}\r\n            step={step}\r\n            />\r\n        </>;\r\n    }\r\n}\r\n","export { factory } from './factory';\r\nexport { Widget } from './widget';\r\nexport { TextWidget } from './textWidget';\r\nexport { TextAreaWidget } from './textareaWidget';\r\nexport { PasswordWidget, UrlWidget, EmailWidget } from './passwordWidget';\r\nexport { UpdownWidget } from './updownWidget';\r\nexport { NumberWidget } from './numberWidget';\r\nexport { DateWidget, DateTimeWidget, TimeWidget, MonthWidget } from './dateWidget';\r\nexport { CheckBoxWidget } from './checkBoxWidget';\r\nexport { Context, RowContext, FormContext, ContextContainer } from '../context';\r\nexport { SelectWidget } from './selectWidget';\r\nexport { RadioWidget } from './radioWidget';\r\nexport { RangeWidget } from './rangeWidget';\r\nexport { IdWidget } from './idWidget';\r\nexport { ButtonWidget } from './buttonWidget';\r\nexport { Unknown } from './unknown';\r\n","\r\nimport {setCenterToken} from './uqApi';\r\nimport {WSChannel} from './wsChannel';\r\n\r\nexport const netToken = {\r\n    set(userId:number, token:string) {\r\n        setCenterToken(userId, token);\r\n        WSChannel.setCenterToken(token);\r\n    },\r\n    clear() {\r\n        setCenterToken(0, undefined);\r\n        WSChannel.setCenterToken(undefined);\r\n    }\r\n};\r\n","\r\nconst zero = '00000000000000';\r\nexport function left0(num:number, fix:number) {\r\n    if (num === undefined) return '';\r\n    let r = num.toString();\r\n    let len = fix - r.length;\r\n    if (len <= 0) return r;\r\n    return zero.substr(0, len) + r;\r\n}\r\n","import * as React from 'react';\r\n\r\nconst iconStyle=(color?:string) => { \r\n    return {\r\n        color:color || '#7f7fff',\r\n        margin:'6px 0'\r\n    }\r\n};\r\nexport const rowIcon=(name:string, color?:string) => \r\n    <i style={iconStyle(color)} className={'fa fa-lg fa-' + name} />;\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\n\r\nexport interface LabelRowProps {\r\n    label: string;\r\n    className?: string;\r\n    action?: () => void;\r\n}\r\n\r\nexport interface LabelRowState {\r\n    isPressed: boolean;\r\n} \r\n\r\nexport class LabelRow extends React.Component<LabelRowProps, LabelRowState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isPressed: false\r\n        }\r\n    }\r\n    mouseDown() {\r\n        this.setState({isPressed: true});\r\n    }\r\n    mouseUp() {\r\n        this.setState({isPressed: false});\r\n        if (this.props.action) this.props.action();\r\n    }\r\n    render() {\r\n        let c = classNames('row', 'label-row', this.props.className, {\r\n            pressed: this.state.isPressed\r\n        });\r\n        return (\r\n        <div\r\n            className={c}\r\n            onMouseDown={()=>this.mouseDown()} \r\n            onMouseUp={()=>this.mouseUp()}>\r\n            <div className=\"col-xs-3\">{this.props.label}</div>\r\n            <div className=\"col-xs-9\">{this.props.children}</div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport interface ActionRowProps {\r\n    className?: string;\r\n    action?: () => void;\r\n}\r\n\r\nexport interface ActionRowState {\r\n    isPressed: boolean;\r\n} \r\n\r\nexport class ActionRow extends React.Component<ActionRowProps, ActionRowState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isPressed: false\r\n        }\r\n    }\r\n    mouseDown() {\r\n        this.setState({isPressed: true});\r\n    }\r\n    mouseUp() {\r\n        this.setState({isPressed: false});\r\n        if (this.props.action) this.props.action();\r\n    }\r\n    render() {\r\n        let c = classNames('action-row', this.props.className, {\r\n            pressed: this.state.isPressed\r\n        });\r\n        return (\r\n        <div\r\n            className={c}\r\n            onMouseDown={()=>this.mouseDown()} \r\n            onMouseUp={()=>this.mouseUp()}>\r\n            {this.props.children}\r\n        </div>\r\n        );\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport {User} from '../user';\r\nimport {nav} from './nav';\r\nimport {Page} from './page';\r\nimport { isDevelopment } from '../net';\r\n\r\nexport abstract class Controller {\r\n    readonly res: any;\r\n    readonly x: any;\r\n    icon: string|JSX.Element;\r\n    label:string;\r\n    readonly isDev:boolean = isDevelopment;\r\n    get user():User {return nav.user}\r\n    get isLogined():boolean {\r\n        let {user} = nav;\r\n        if (user === undefined) return false;\r\n        return user.id > 0;\r\n    }\r\n    constructor(res:any) {\r\n        this.res = res || {};\r\n        this.x = this.res.x || {};\r\n    }\r\n\r\n    private receiveHandlerId:number;\r\n    private disposer:()=>void;\r\n\r\n    private dispose() {\r\n        // message listener的清理\r\n        nav.unregisterReceiveHandler(this.receiveHandlerId);\r\n        this.onDispose();\r\n    }\r\n\r\n    protected onDispose() {\r\n    }\r\n\r\n    protected async openVPage(vp: new (coordinator: Controller)=>VPage<Controller>, param?:any):Promise<void> {\r\n        await (new vp(this)).open(param);\r\n    }\r\n\r\n    protected renderView(view: new (coordinator: Controller)=>View<Controller>, param?:any) {\r\n        return (new view(this)).render(param);\r\n    }\r\n\r\n    async event(type:string, value:any) {\r\n        await this.onEvent(type, value);\r\n    }\r\n\r\n    protected async onEvent(type:string, value:any) {\r\n    }\r\n\r\n    protected msg(text:string) {\r\n        alert(text);\r\n    }\r\n    protected errorPage(header:string, err:any) {\r\n        this.openPage(<Page header=\"App error!\">\r\n            <pre>\r\n                {typeof err === 'string'? err : err.message}\r\n            </pre>\r\n        </Page>);\r\n    }\r\n\r\n    protected onMessage(message:any):Promise<void> {\r\n        return;\r\n    }\r\n\r\n    private onMessageReceive = async (message:any):Promise<void> => {\r\n        await this.onMessage(message);\r\n    }\r\n\r\n    protected async beforeStart():Promise<boolean> {\r\n        /*\r\n        console.log('this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);');\r\n        this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);\r\n        console.log('return true');\r\n        */\r\n        return true;\r\n    }\r\n    protected registerReceiveHandler() {\r\n        this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);\r\n    }\r\n\r\n    protected abstract internalStart(param?:any):Promise<void>;\r\n    async start(param?:any):Promise<void> {\r\n        this.disposer = this.dispose.bind(this);\r\n        this.registerReceiveHandler();\r\n        let ret = await this.beforeStart();\r\n        if (ret === false) return;\r\n        await this.internalStart(param);\r\n    }\r\n\r\n    get isCalling():boolean {return this._resolve_$ !== undefined}\r\n\r\n    private _resolve_$:((value:any) => void)[];\r\n    async call(param?:any):Promise<any> {\r\n        if (this._resolve_$ === undefined) this._resolve_$ = [];\r\n        return new Promise<any> (async (resolve, reject) => {\r\n            this._resolve_$.push(resolve);\r\n            await this.start(param);\r\n        });\r\n    }\r\n\r\n    async vCall(vp: new (coordinator: Controller)=>VPage<Controller>, param?:any):Promise<any> {\r\n        if (this._resolve_$ === undefined) this._resolve_$ = [];\r\n        return new Promise<any> (async (resolve, reject) => {\r\n            this._resolve_$.push(resolve);\r\n            await (new vp(this)).open(param);\r\n        });\r\n    }\r\n\r\n    returnCall(value:any) {\r\n        if (this._resolve_$ === undefined) return;\r\n        let resolve = this._resolve_$.pop();\r\n        if (resolve === undefined) {\r\n            alert('the Coordinator call already returned, or not called');\r\n            return;\r\n        }\r\n        resolve(value);\r\n    }\r\n\r\n    openPage(page:JSX.Element) {\r\n        nav.push(page, this.disposer);\r\n        this.disposer = undefined;\r\n    }\r\n\r\n    replacePage(page:JSX.Element) {\r\n        nav.replace(page, this.disposer);\r\n        this.disposer = undefined;\r\n    }\r\n\r\n    backPage() {\r\n        nav.back();\r\n    }\r\n\r\n    closePage(level?:number) {\r\n        nav.pop(level);\r\n    }\r\n\r\n    ceasePage(level?:number) {\r\n        nav.ceaseTop(level);\r\n    }\r\n\r\n    removeCeased() {\r\n        nav.removeCeased();\r\n    }\r\n\r\n    regConfirmClose(confirmClose: ()=>Promise<boolean>) {\r\n        nav.regConfirmClose(confirmClose);\r\n    }\r\n}\r\n\r\n\r\nexport abstract class View<C extends Controller> {\r\n    protected controller: C;\r\n    protected readonly res: any;\r\n    protected readonly x: any;\r\n\r\n    constructor(controller: C) {\r\n        this.controller = controller;\r\n        this.res = controller.res;\r\n        this.x = controller.x;\r\n    }\r\n\r\n    protected get isDev() {return isDevelopment}\r\n\r\n    abstract render(param?:any): JSX.Element;\r\n\r\n    protected renderVm(vm: new (coordinator: Controller)=>View<C>, param?:any) {\r\n        return (new vm(this.controller)).render(param);\r\n    }\r\n\r\n    protected async openVPage(vp: new (coordinator: Controller)=>VPage<Controller>, param?:any):Promise<void> {\r\n        await (new vp(this.controller)).open(param);\r\n    }\r\n\r\n    protected async event(type:string, value?:any) {\r\n        /*\r\n        if (this._resolve_$_ !== undefined) {\r\n            await this._resolve_$_({type:type, value:value});\r\n            return;\r\n        }*/\r\n        await this.controller.event(type, value);\r\n    }\r\n\r\n    protected returnCall(value:any) {\r\n        this.controller.returnCall(value);\r\n    }\r\n\r\n    protected openPage(view: React.StatelessComponent<any>, param?:any) {\r\n        this.controller.openPage(React.createElement(view, param));\r\n    }\r\n\r\n    protected replacePage(view: React.StatelessComponent<any>, param?:any) {\r\n        this.controller.replacePage(React.createElement(view, param));\r\n    }\r\n\r\n    protected openPageElement(page: JSX.Element) {\r\n        this.controller.openPage(page);\r\n    }\r\n\r\n    protected replacePageElement(page: JSX.Element) {\r\n        this.controller.replacePage(page);\r\n    }\r\n\r\n    protected backPage() {\r\n        this.controller.backPage();\r\n    }\r\n\r\n    protected closePage(level?:number) {\r\n        this.controller.closePage(level);\r\n    }\r\n\r\n    protected ceasePage(level?:number) {\r\n        this.controller.ceasePage(level);\r\n    }\r\n\r\n    protected removeCeased() {\r\n        this.controller.removeCeased();\r\n    }\r\n\r\n    protected regConfirmClose(confirmClose: ()=>Promise<boolean>) {\r\n        this.controller.regConfirmClose(confirmClose);\r\n    }\r\n}\r\n\r\nexport abstract class VPage<C extends Controller> extends View<C> {\r\n    constructor(coordinator: C) {\r\n        super(coordinator);\r\n    }\r\n\r\n    abstract open(param?:any):Promise<void>;\r\n\r\n    render(param?:any):JSX.Element {return null;}\r\n}\r\n\r\nexport type TypeVPage<C extends Controller> = new (coordinator: C)=>VPage<C>;\r\n\r\n","export {Form} from './form';\r\nexport {Field} from './field';\r\nexport * from './schema';\r\nexport * from './uiSchema';\r\nexport {Context, RowContext} from './context';\r\n","import * as React from 'react';\r\nimport { factory } from './widgets';\r\nimport { ContextContainer, Context } from './context';\r\n\r\nexport interface FieldProps {\r\n    name: string;\r\n}\r\n\r\nexport class Field extends React.Component<FieldProps> {\r\n    static contextType = ContextContainer;\r\n    render() {\r\n        let {name, children } = this.props;\r\n        let context:Context = this.context;\r\n        if (context === undefined) return <span className=\"text-danger\">!only in Form!</span>;\r\n        let itemSchema = context.getItemSchema(name);\r\n        let content = factory(context, itemSchema, children, this.props);\r\n        if (content === undefined) {\r\n            return <span className=\"text-danger\">!!{name} is not defined!!</span>;\r\n        }\r\n        return content;\r\n    }\r\n}\r\n","import {observable, IObservableArray, computed} from 'mobx';\r\nimport {uid} from './uid';\r\n\r\nexport abstract class PageItems<T> {\r\n    constructor(itemObservable:boolean = false) {\r\n        this._items = observable.array<T>([], {deep:itemObservable});\r\n    }\r\n    private isFirst: boolean = true;\r\n    @observable loading: boolean = false;\r\n    @observable private beforeLoad: boolean = true;\r\n    @observable protected loaded: boolean = false;\r\n    protected _items:IObservableArray<T>;\r\n    @observable allLoaded: boolean = false;\r\n    @computed get items():IObservableArray<T> {\r\n        if (this.beforeLoad === true) return null;\r\n        if (this.loaded === false) return undefined;\r\n        return this._items;\r\n    }\r\n\r\n    @observable topDiv:string;\r\n    @observable bottomDiv:string;\r\n    scrollToTop() {\r\n        this.topDiv = '$$'+uid();\r\n    }\r\n    scrollToBottom() {\r\n        this.bottomDiv = '$$'+uid();\r\n    }\r\n\r\n    protected param: any;\r\n    protected firstSize = 100;\r\n    protected pageStart = undefined;\r\n    protected pageSize = 30;\r\n    protected appendPosition:'head'|'tail' = 'tail';\r\n\r\n    protected abstract async load(param:any, pageStart:any, pageSize:number):Promise<T[]>;\r\n    protected abstract setPageStart(item:T);\r\n\r\n    reset() {\r\n        this.isFirst = true;\r\n        this.beforeLoad = true;\r\n        this.loaded = false;\r\n        this.param = undefined;\r\n        this.allLoaded = false;\r\n        this._items.clear();\r\n        this.setPageStart(undefined);\r\n    }\r\n\r\n    append(item:T) {\r\n        if (this.appendPosition === 'tail')\r\n            this._items.unshift(item);\r\n        else\r\n            this._items.push(item);\r\n    }\r\n\r\n    async first(param:any):Promise<void> {\r\n        this.reset();\r\n        this.beforeLoad = false;\r\n        this.param = param;\r\n        await this.more();        \r\n    }\r\n\r\n    async more():Promise<void> {\r\n        if (this.allLoaded === true) return;\r\n        if (this.loading === true) return;\r\n        this.loading = true;\r\n        let pageSize = this.pageSize + 1;\r\n        if (this.isFirst === true) {\r\n            if (this.firstSize > this.pageSize) pageSize = this.firstSize+1;\r\n        }\r\n        let ret = await this.load(\r\n                this.param, \r\n                this.pageStart,\r\n                pageSize);\r\n        this.loading = false;\r\n        this.loaded = true;\r\n        let len = ret.length;\r\n        if (this.isFirst===true && len>this.firstSize ||\r\n            this.isFirst===false && len>this.pageSize)\r\n        {\r\n            this.allLoaded = false;\r\n            --len;\r\n            ret.splice(len, 1);\r\n        }\r\n        else {\r\n            this.allLoaded = true;\r\n        }\r\n        if (len === 0) {\r\n            this._items.clear();\r\n            return;\r\n        }\r\n        this.setPageStart(ret[len-1]);\r\n        if (this.appendPosition === 'tail')\r\n            this._items.push(...ret);\r\n        else\r\n            this._items.unshift(...ret.reverse());\r\n        this.isFirst = false;\r\n    }\r\n}\r\n","import {observable, computed} from 'mobx';\r\n\r\nexport interface Id {\r\n    id: number;\r\n}\r\n\r\nexport abstract class CacheIds<T extends Id> {\r\n    constructor(maxCount:number = 100) {\r\n        this.maxCount = maxCount;\r\n    }\r\n    private maxCount:number;\r\n    private arr:T[] = [];\r\n    @observable dict = new Map<number, T>();\r\n\r\n    loadIds(ids:number[]) {\r\n        let arr:number[] = [];\r\n        for (let id of ids) {\r\n            if (id === null) continue;\r\n            let item = this.dict.get(id);\r\n            if (item === undefined) {\r\n                arr.push(id);\r\n                item = {id:id} as T;\r\n                this.dict.set(id, item);\r\n            }\r\n        }                \r\n        this.loadId(arr);\r\n    }\r\n\r\n    get(id:number):T {\r\n        if (id === undefined || id === null) return null;\r\n        let item = this.dict.get(id);\r\n        if (item === undefined) {\r\n            this.dict.set(id, {id:id} as T);\r\n            this.loadId([id]);\r\n            item = this.dict.get(id);\r\n        }\r\n        return item;\r\n    }\r\n    private setItem(id:number, item:T) {\r\n        if (item === undefined) {\r\n            this.dict.set(id, null);\r\n            this.arr.push({id: id} as T);\r\n        }\r\n        else {\r\n            this.dict.set(id, item);\r\n            this.arr.push(item);\r\n        }\r\n        if (this.arr.length > this.maxCount) {\r\n            item = this.arr.shift();\r\n            this.dict.delete(item.id);\r\n        }\r\n    }\r\n    private async loadId(ids:number[]) {\r\n        let items = await this._loadIds(ids);\r\n        if (items === undefined) {\r\n            for (let id of ids) {\r\n                if (id === null) continue;\r\n                let item = await this._loadId(id);\r\n                this.setItem(id, item);\r\n            }\r\n        }\r\n        else {\r\n            for (let id of ids) {\r\n                let item = items.find(v => v.id === id);\r\n                this.setItem(id, item);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected abstract async _loadIds(ids:number[]):Promise<T[]>;\r\n    protected abstract async _loadId(id:number):Promise<T>;\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {FormView, FormProps} from './formView';\r\n\r\nexport function tonvaDebug() {\r\n    let a = 0;\r\n}\r\n\r\nexport interface TonvaFormProps extends FormProps {\r\n    className?: string;\r\n    initValues?: any;\r\n}\r\n\r\n@observer \r\nexport class TonvaForm extends React.Component<TonvaFormProps, {}> {\r\n    formView: FormView;\r\n    constructor(props:TonvaFormProps) {\r\n        super(props);\r\n        this.formView = new FormView(this.props);\r\n    }\r\n    componentWillMount() {\r\n        this.formView.setInitValues(this.props.initValues);\r\n    }\r\n    debug() {\r\n        let s = null;\r\n    }\r\n    render() {\r\n        let {className, children, initValues} = this.props;\r\n        return <div className={className}>\r\n            {\r\n                children === undefined? \r\n                    this.formView.render() : \r\n                    <form onSubmit={this.formView.onSubmit}>{children}</form>\r\n            }\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nexport interface Action {\r\n    icon?: string;\r\n    caption?: string;\r\n    action?: () => void;\r\n}\r\n\r\nexport interface DropdownActionsProps {\r\n    icon?: string;\r\n    actions: Action[];\r\n    isRight?: boolean;\r\n}\r\n\r\nexport interface DropdownActionsState {\r\n    dropdownOpen: boolean;\r\n}\r\n\r\nexport class DropdownActions extends React.Component<DropdownActionsProps, DropdownActionsState> {\r\n    private menu: HTMLDivElement;\r\n    private button: HTMLElement;\r\n    constructor(props:DropdownActionsProps) {\r\n        super(props);\r\n        this.state = {\r\n            dropdownOpen: false\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        document.addEventListener('click', this.handleDocumentClick);\r\n        document.addEventListener('touchstart', this.handleDocumentClick);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('click', this.handleDocumentClick);\r\n        document.removeEventListener('touchstart', this.handleDocumentClick);\r\n    }\r\n\r\n    private handleDocumentClick = (evt:any) => {\r\n        if (this.state.dropdownOpen === false) return;\r\n        if (this.button && this.button.contains(evt.target)) return;\r\n        if (!this.menu) return;\r\n        //if (!this.menu.contains(evt.target)) \r\n        this.toggle();\r\n    }\r\n\r\n    private toggle = () => {\r\n        this.setState({\r\n            dropdownOpen: !this.state.dropdownOpen\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let {icon, actions, isRight} = this.props;\r\n        if (isRight === undefined) isRight = true;\r\n        let hasIcon = actions.some(v => v.icon!==undefined);\r\n        let {dropdownOpen} = this.state;\r\n        //isOpen={this.state.dropdownOpen} toggle={this.toggle}\r\n        return <div className=\"dropdown\">\r\n            <button ref={v=>this.button=v} className=\"cursor-pointer dropdown-toggle btn btn-sm\"\r\n                data-toggle=\"dropdown\"\r\n                aria-expanded={dropdownOpen}\r\n                onClick={this.toggle}>\r\n                <i className={classNames('fa', 'fa-'+(icon||'ellipsis-v'))} />\r\n            </button>\r\n            <div ref={v => this.menu=v} className={classNames({\"dropdown-menu\":true, \"dropdown-menu-right\":isRight, \"show\":dropdownOpen})}>\r\n                {\r\n                    actions.map((v,index) => {\r\n                        let {icon, caption, action} = v;\r\n                        if (icon === undefined && caption === undefined) \r\n                            return <div className=\"dropdown-divider\" />;\r\n                        let i:any;\r\n                        if (hasIcon === true) {\r\n                            if (icon !== undefined) icon = 'fa-' + icon;\r\n                            i = <><i className={classNames('fa', icon, 'fa-fw')} aria-hidden={true}></i>&nbsp; </>;\r\n                        }\r\n                        if (action === undefined) \r\n                            return <h6 className=\"dropdown-header\">{i} {caption}</h6>;\r\n                        return <a className=\"dropdown-item\" key={index} href=\"#\" onClick={(evt:React.MouseEvent<HTMLAnchorElement>)=>{ evt.preventDefault();action()}}>{i} {caption}</a>\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\n/*\r\nexport class DropdownActions extends React.Component<DropdownActionsProps, DropdownActionsState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dropdownOpen: false\r\n        };\r\n    }\r\n    private toggle = () => {\r\n        this.setState({\r\n            dropdownOpen: !this.state.dropdownOpen\r\n        });\r\n    }\r\n    render() {\r\n        let {icon, actions, isRight} = this.props;\r\n        if (isRight === undefined) isRight = true;\r\n        let hasIcon = actions.some(v => v.icon!==undefined);\r\n        return <UncontrolledButtonDropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\r\n            <DropdownToggle caret={true} size=\"sm\" className=\"cursor-pointer\">\r\n                <i className={classNames('fa', 'fa-'+(icon||'ellipsis-v'))} />\r\n            </DropdownToggle>\r\n            <DropdownMenu right={isRight}>\r\n                {actions.map((v,index) => {\r\n                    let {icon, caption, action} = v;\r\n                    if (icon === undefined && caption === undefined) \r\n                        return <div className=\"dropdown-divider\" />;\r\n                    let i;\r\n                    if (hasIcon === true) {\r\n                        if (icon !== undefined) icon = 'fa-' + icon;\r\n                        i = <><i className={classNames('fa', icon, 'fa-fw')} aria-hidden={true}></i>&nbsp; </>;\r\n                    }\r\n                    if (action === undefined) \r\n                        return <h6 className=\"dropdown-header\">{i} {caption}</h6>;\r\n                    return <DropdownItem key={index} onClick={action}>{i} {caption}</DropdownItem>\r\n                })}\r\n            </DropdownMenu>\r\n        </UncontrolledButtonDropdown>\r\n    }\r\n}\r\n*/","import * as React from 'react';\r\n\r\nexport interface EasyDateProps {\r\n    date: Date | string;\r\n}\r\n\r\nexport class EasyDate extends React.Component<EasyDateProps> {\r\n    render() {\r\n        let {date} = this.props;\r\n        if (!date) return null;\r\n        let d = (typeof date === 'string')? new Date(Date.parse(date)) : date;\r\n        let now = new Date();\r\n        let tick = now.getTime() - d.getTime();\r\n        let nDate=now.getDate();\r\n        let _date=d.getDate(), hour=d.getHours(), minute=d.getMinutes(), month=d.getMonth()+1;\r\n        let hm = hour + ((minute<10?':0':':') + minute);\r\n        if (tick < -24*3600*1000) return d.getFullYear()+'年'+month+'月'+_date+'日 ' + hm;\r\n        if (tick < 24*3600*1000) {\r\n            return _date!==nDate? \r\n                (tick < 0? '明天 ' : '昨天 ') + hm \r\n                : hm;\r\n        }\r\n        if (tick < 365*24*3600*1000) {\r\n            return month+'月'+_date+'日 ';\r\n        }\r\n        return d.getFullYear()+'年'+month+'月'+_date+'日';\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as className from 'classnames';\r\nimport {observer} from 'mobx-react';\r\n\r\nexport interface MediaProps {\r\n    icon: string|JSX.Element;\r\n    main: string|JSX.Element;\r\n    discription?: string | JSX.Element;\r\n    px?: number;\r\n    py?: number;\r\n}\r\n\r\nconst imgStyle = {\r\n    width: '4rem', \r\n    height: '4rem',\r\n};\r\n\r\nexport class Media extends React.Component<MediaProps> {\r\n    render() {\r\n        let {icon, main, discription, px, py} = this.props;\r\n        let disp;\r\n        if (typeof discription === 'string')\r\n            disp = <div>{discription}</div>;\r\n        else\r\n            disp = discription;\r\n        let img = icon;\r\n        if (typeof icon === 'string')\r\n            img = <img className=\"d-flex mr-3\" src={icon} alt=\"img\" style={imgStyle} />;\r\n        let cn = className(\r\n            'media', \r\n            px===undefined? 'px-0':'px-'+px, \r\n            py===undefined? 'py-2':'py-'+py);\r\n        return <div className={cn}>\r\n            {img}\r\n            <div className=\"media-body\">\r\n                <h5 className=\"mt-0\">{main}</h5>\r\n                {disp}\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\n\r\nexport interface SearchBoxProps {\r\n    className?: string;\r\n    label?: string;\r\n    initKey?: string;\r\n    placeholder?: string;\r\n    buttonText?: string;\r\n    maxLength?: number;\r\n    size?: 'sm' | 'md' | 'lg';\r\n    inputClassName?: string;\r\n    onSearch: (key:string)=>Promise<void>;\r\n    allowEmptySearch?: boolean;\r\n}\r\n\r\n/*\r\nexport interface SearchBoxState {\r\n    disabled: boolean;\r\n}*/\r\n\r\nexport class SearchBox extends React.Component<SearchBoxProps> { //}, SearchBoxState> {\r\n    private input: HTMLInputElement;\r\n    private key: string = null;\r\n    @observable private disabled: boolean;\r\n\r\n    /*\r\n    constructor(props: SearchBoxProps) {\r\n        super(props);\r\n        this.state = {\r\n            disabled: false,\r\n        }\r\n    }*/\r\n\r\n    private onChange = (evt: React.ChangeEvent<any>) => {\r\n        this.key = evt.target.value;\r\n        if (this.key !== undefined) {\r\n            this.key = this.key.trim();\r\n            if (this.key === '') this.key = undefined;\r\n        }\r\n        if (this.props.allowEmptySearch !== true) {\r\n            this.disabled = !this.key;\r\n        }\r\n    }\r\n    /*\r\n    ref = (input: HTMLInputElement) => {\r\n        this.input = input;\r\n        this.key = this.props.initKey || '';\r\n        if (input === null) return;\r\n        input.value = this.key;\r\n    }*/\r\n    onSubmit = async (evt: React.FormEvent<any>) => {\r\n        evt.preventDefault();\r\n        if (this.key === null) this.key = this.props.initKey || '';\r\n        if (this.props.allowEmptySearch !== true) {\r\n            if (!this.key) return;\r\n            if (this.input) this.input.disabled = true;\r\n        }\r\n        await this.props.onSearch(this.key);\r\n        if (this.input) this.input.disabled = false;\r\n    }\r\n    render() {\r\n        let {className, inputClassName,\r\n            label, placeholder, buttonText, maxLength, size} = this.props;\r\n        let inputSize:string;\r\n        switch (size) {\r\n            default:\r\n            case 'sm': inputSize = 'input-group-sm'; break;\r\n            case 'md': inputSize = 'input-group-md'; break;\r\n            case 'lg': inputSize = 'input-group-lg'; break;\r\n        }\r\n        let lab:any;\r\n        if (label !== undefined) lab = <label className=\"input-group-addon\">{label}</label>;\r\n        return <form className={className} onSubmit={this.onSubmit} >\r\n            <div className={classNames(\"input-group\", inputSize)}>\r\n                {lab}\r\n                <input onChange={this.onChange}\r\n                    type=\"text\"\r\n                    name=\"key\"\r\n                    //ref={this.ref}\r\n                    className={classNames('form-control', inputClassName || 'border-primary')}\r\n                    placeholder={placeholder}\r\n                    defaultValue={this.props.initKey}\r\n                    maxLength={maxLength} />\r\n                <div className=\"input-group-append\">\r\n                    <button className=\"btn btn-primary\"\r\n                        type=\"submit\"\r\n                        disabled={this.disabled}>\r\n                        <i className='fa fa-search' />\r\n                        <i className=\"fa\"/>\r\n                        {buttonText}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </form>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport className from 'classnames';\r\nimport {FormProps, FormRow, SubmitResult, FormView, TonvaForm} from '../form';\r\n\r\nexport interface Step {\r\n    formRows: FormRow[];\r\n    next: undefined | string | ((values:any) => string);    // 返回下一步的step名称或者直接就是名称\r\n    ex?: any;                                   // 每一步额外的参数\r\n}\r\n\r\nexport interface MultiStepProps {\r\n    className?: string;\r\n    header?: (step:Step, num:number) => JSX.Element; //name: step name, num: 第几步，1开始\r\n    footer?: (step:Step, num:number) => JSX.Element; //name: step name, num: 第几步，1开始\r\n    steps: {[name:string]: Step};\r\n    first: string;         // 第一步的名字\r\n    onSubmit: (values:any) => Promise<SubmitResult|undefined>;\r\n    submitButton?: string|JSX.Element;\r\n}\r\n\r\nexport interface StepView {\r\n    stepName: string;\r\n    step: Step;\r\n    props: FormProps;\r\n    //view: JSX.Element;\r\n}\r\nexport interface MultiStepState {\r\n    //num: number;\r\n    //step: Step;\r\n    //formView: FormView;\r\n    topView: StepView;\r\n    stepViews: StepView[];\r\n}\r\n\r\nexport class MultiStep extends React.Component<MultiStepProps, MultiStepState> {\r\n    private values: any = {};\r\n    private stepViews: StepView[] = [];\r\n    private topView: StepView;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            topView: undefined,\r\n            stepViews: [],\r\n        }\r\n        this.onPrev = this.onPrev.bind(this);\r\n        this.onNext = this.onNext.bind(this);\r\n    }\r\n    \r\n    private setStep(stepName: string) {\r\n        let step = this.props.steps[stepName];\r\n        if (step === undefined) return; //throw new Error('Unknown step name: ' + stepName);\r\n        if (this.topView !== undefined) this.stepViews.push(this.topView);\r\n        let otherButton, onOther;\r\n        if (this.stepViews.length > 0) {\r\n            otherButton = <ButtonConten prefix=\"undo\" text=\"上一步\" />;\r\n            onOther = this.onPrev;\r\n        }\r\n        let {header, footer} = this.props;\r\n        let btnContent = step.next === undefined?\r\n            {prefix: 'cloud-upload', text: this.props.submitButton || '提交'} :\r\n            {suffix: 'arrow-right', text: '下一步'}\r\n        let formProps = {\r\n            formRows: step.formRows,\r\n            submitButton: <ButtonConten {...btnContent} />,\r\n            onSubmit: this.onNext,\r\n            otherButton: otherButton,\r\n            onOther: onOther,\r\n        };\r\n        let num = this.stepViews.length + 1;\r\n        this.topView = {\r\n            stepName: stepName,\r\n            step: step,\r\n            props: formProps,\r\n        };\r\n        this.setState({\r\n            topView: this.topView,\r\n            stepViews: this.stepViews\r\n        });\r\n    }\r\n    componentWillMount() {\r\n        this.setStep(this.props.first);\r\n    }\r\n    private onPrev(values:any) {\r\n        _.assign(this.values, values);\r\n        this.topView = this.stepViews.pop();\r\n        this.setState({\r\n            topView: this.topView,\r\n            stepViews: this.stepViews\r\n        });\r\n    }\r\n    private onNext(values:any): Promise<SubmitResult|undefined> {\r\n        _.assign(this.values, values);\r\n        //let {num, step} = this.state;\r\n        let {next} = this.topView.step;\r\n        if (next === undefined) {\r\n            return this.props.onSubmit(this.values)\r\n        }\r\n        let nextStepName:string;\r\n        if (typeof next === 'string') {\r\n            nextStepName = next;\r\n        }\r\n        else {\r\n            nextStepName = next(this.values);\r\n        }\r\n        this.setStep(nextStepName);\r\n    }\r\n    render() {\r\n        let {className, header, footer} = this.props;\r\n        let {topView, stepViews} = this.state;\r\n        let {stepName, step} = topView;\r\n        let hidden = {visibility: 'hidden'};\r\n        let num = stepViews.length + 1;\r\n        return <div className={className}>\r\n            <div>\r\n                {header && header(step, num)}\r\n                <TonvaForm key={stepName} initValues={this.values} {...topView.props} />\r\n                {footer && footer(step, num)}\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst ButtonConten = (props:{prefix?:string, text?:string|JSX.Element, suffix?:string}) => {\r\n    let {prefix, text, suffix} = props;\r\n    let pIcon, sIcon;\r\n    if (prefix !== undefined) pIcon = <i className={className('fa', 'fa-' + prefix)} />;\r\n    if (suffix !== undefined) sIcon = <i className={className('fa', 'fa-' + suffix)} />;\r\n    return <React.Fragment>{pIcon} {props.text} {sIcon}</React.Fragment>;\r\n}\r\n    \r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport '../css/va-badge.css';\r\n\r\nexport interface BadgeProps {\r\n    className?: string;\r\n    badge?: string|number;\r\n    size?: 'xs' | 'sm' | 'lg';\r\n    color?: 'secondary'|'success'|'danger'|'primary'|'info'|'warning';\r\n    badgeAlign?: 'left'|'center'|'right';\r\n    badgeVertical?: 'top'|'middle'|'bottom';\r\n}\r\n\r\n@observer\r\nexport class Badge extends React.Component<BadgeProps> {\r\n    render() {\r\n        let {className, badge, size, color, badgeAlign, badgeVertical, children} = this.props;\r\n        let cn = classNames(\r\n            className,\r\n            'va-badge',\r\n            size && 'va-badge-'+size,\r\n            'va-badge-' + (color||'secondary'),\r\n            badgeAlign && 'va-badg-'+badgeAlign,\r\n            badgeVertical && 'va-badg-'+badgeVertical,\r\n        );\r\n        let b;\r\n        if (badge) b = <b>{badge}</b>;\r\n        return <div className={cn}>\r\n            {children}\r\n            {b}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport * as classNames from 'classnames';\r\nimport '../css/va-lmr.css';\r\n\r\nexport interface LMRProps {\r\n    className?: string | string[];\r\n    left?: string|JSX.Element;\r\n    right?: string|JSX.Element;\r\n    onClick?: ()=>void;\r\n}\r\n\r\n@observer\r\nexport class LMR extends React.Component<LMRProps> {\r\n    render() {\r\n        let {className, left, children, right, onClick} = this.props;\r\n        let l, r;\r\n        if (left !== undefined) l = <header>{left}</header>;\r\n        if (right !== undefined) r = <footer>{right}</footer>;\r\n        let cursor;\r\n        if (onClick !== undefined) cursor = 'cursor-pointer';\r\n        return <div className={classNames('va-lmr', className, cursor)} onClick={onClick}>\r\n            {l}\r\n            <div>{children}</div>\r\n            {r}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\n\r\nexport interface FAProps {\r\n    name: string;\r\n    className?: string;\r\n    size?: 'lg'|'2x'|'3x'|'4x'|'5x';\r\n    spin?: boolean;\r\n    fixWidth?: boolean;\r\n    border?: boolean;\r\n    pull?: 'left'|'right';\r\n    pulse?: boolean;\r\n    rotate?: 90|180|270;\r\n    flip?: 'horizontal'|'vertical';\r\n    inverse?: boolean;\r\n}\r\n\r\nexport class FA extends React.Component<FAProps> {\r\n    render() {\r\n        let {name, className, size, spin, fixWidth, border, pull, pulse, rotate, flip, inverse} = this.props;\r\n        let cn = classNames(className, 'fa',\r\n            name && ('fa-' + name),\r\n            size && 'fa-'+size,\r\n            fixWidth && 'fa-fw',\r\n            border && 'fa-border',\r\n            pull && 'fa-pull-' + pull,\r\n            spin && 'fa-spin',\r\n            pulse && 'fa-pulse',\r\n            rotate && 'fa-rotate-' + rotate,\r\n            flip && 'fa-flip-' + flip,\r\n            inverse && 'fa-inverse',\r\n        );\r\n        return <i className={cn} />\r\n    }\r\n}\r\n\r\nexport interface StackedFAProps {\r\n    className?: string;\r\n    size?: 'lg',\r\n}\r\nexport class StackedFA extends React.Component<StackedFAProps> {\r\n    render() {\r\n        let {className, size, children} = this.props;\r\n        let cn = classNames(\r\n            'fa-stack',\r\n            className,\r\n            size && 'fa-' + size);\r\n        return <span className={cn}>\r\n            {children}\r\n        </span>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\n\r\nexport const Muted = (props:any) => \r\n<small className={classNames('text-muted', props.className)} style={props.style}>\r\n    {props.children}\r\n</small>;\r\n","export * from './Badge';\r\nexport * from './LMR';\r\nexport * from './FA';\r\nexport * from './IconText';\r\nexport * from './Muted';\r\nexport * from './image';\r\nexport * from './resUploader';","import * as React from 'react';\r\nimport { IObservableArray, computed } from 'mobx';\r\nimport { PageItems } from 'tonva-tools';\r\nimport {List} from './index';\r\n\r\nexport abstract class ListBase {\r\n    protected list: List;\r\n    constructor(list: List) {\r\n        this.list = list;\r\n    }\r\n    get isPaged():boolean {\r\n        let items = this.list.props.items;\r\n        return (items !== null && items !== undefined && Array.isArray(items) === false);\r\n    }\r\n    get items():any[]|IObservableArray<any> {\r\n        let items = this.list.props.items;\r\n        if (items === null) return null;\r\n        if (items === undefined) return undefined;\r\n        if (Array.isArray(items) === true)\r\n            return items as IObservableArray<any>;\r\n        else\r\n            return (items as PageItems<any>).items;\r\n    }\r\n    @computed get loading():boolean {\r\n        let items = this.list.props.items;\r\n        if (items === null) return false;\r\n        if (items === undefined) return true;\r\n        let pageItems = items as PageItems<any>;\r\n        if (pageItems.items === undefined) return false;\r\n        return pageItems.loading;\r\n    }\r\n    get selectedItems():any[] { return; }\r\n    updateProps(nextProps:any) {}\r\n    abstract render(item:any, index:number):JSX.Element;\r\n    protected renderContent(item:any, index:number) {\r\n        let {render} = this.list.props.item;\r\n        if (render === undefined) return <div className=\"px-3 py-2\">{JSON.stringify(item)}</div>;\r\n        return render(item, index);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {ListBase} from './base';\r\n\r\nexport class Clickable extends ListBase {\r\n    render(item:any, index:number):JSX.Element {\r\n        let {className, key, onClick} = this.list.props.item;\r\n        return <li key={key===undefined?index:key(item)} className={classNames('va-row-clickable', className)} onClick={()=>onClick(item)}>\r\n            {this.renderContent(item, index)}\r\n        </li>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {ListBase} from './base';\r\nimport { uid } from '../uid';\r\n\r\nexport class Static extends ListBase {\r\n    render(item:any, index:number):JSX.Element {\r\n        let {className, key, render} = this.list.props.item;\r\n        if (typeof item === 'string') {\r\n            let cn = classNames('va-list-gap', 'px-3', 'pt-1');\r\n            return <li key={uid()} className={cn}>{item}</li>;\r\n        }\r\n        return <li key={key===undefined?index:key(item)} className={classNames(className)}>\r\n            {this.renderContent(item, index)}\r\n        </li>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable, computed, IObservableArray} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport {ListBase} from './base';\r\nimport {uid} from '../uid';\r\nimport { PageItems } from 'tonva-tools';\r\n\r\nexport interface SelectableItem {\r\n    selected: boolean;\r\n    item: any;\r\n    labelId: string;\r\n}\r\n\r\nexport class Selectable extends ListBase {\r\n    private _items: SelectableItem[];\r\n    private _selectedItems: any[];\r\n    private input: HTMLInputElement;\r\n    private buildItems() {\r\n        console.log('buildItems in selectable.tsx');\r\n        let {items, selectedItems, compare} = this.list.props;\r\n        let itemsArray:any[] | IObservableArray<any>;\r\n        if (items === undefined) {\r\n            return this._items = undefined;\r\n        }\r\n        if (items === null) {\r\n            return this._items = null;\r\n        }\r\n        if (Array.isArray(items) === true) {\r\n            itemsArray = items as any;\r\n        }\r\n        else {\r\n            itemsArray = (items as PageItems<any>).items;\r\n        }\r\n        //let items = this.items;\r\n        this._selectedItems = selectedItems;\r\n        if (selectedItems === undefined) {\r\n            return this._items = itemsArray.map(v => {\r\n                return {\r\n                    selected:false, \r\n                    item:v, \r\n                    labelId:uid()\r\n                };\r\n            });\r\n        }\r\n        if (compare === undefined) {\r\n            return this._items = itemsArray.map(v => {\r\n                return {\r\n                    selected:selectedItems.find(si => si === v) !== undefined, \r\n                    item:v, \r\n                    labelId:uid()\r\n                };\r\n            });\r\n        }\r\n        return this._items = itemsArray.map(v => {\r\n            return {\r\n                selected:selectedItems.find(si => compare(v, si)) !== undefined, \r\n                item:v, \r\n                labelId:uid()\r\n            };\r\n        });\r\n    }\r\n    @computed get items() {\r\n        //if (this._items === undefined) \r\n        this.buildItems();\r\n        return this._items;\r\n    }\r\n    updateProps(nextProps:any) {\r\n        if (nextProps.selectedItems === this._selectedItems) return;\r\n        this.buildItems();\r\n    }\r\n    private onSelect(item:SelectableItem, selected:boolean) {\r\n        item.selected = selected;\r\n        let anySelected = this._items.some(v => v.selected);\r\n        this.list.props.item.onSelect(item.item, selected, anySelected);\r\n    }\r\n    \r\n    get selectedItems():any[] {\r\n        return this._items.filter(v => v.selected === true).map(v => v.item);\r\n    }\r\n    /*\r\n    set selectedItems(value: any[]) {\r\n        if (value === undefined) return;\r\n        if (this._items === undefined) return;\r\n        let sLen = this._items.length;\r\n        let list = value.slice();\r\n        for (let n=0; n<sLen; n++) {\r\n            let sItem = this._items[n];\r\n            let len = list.length;\r\n            if (len === 0) break;\r\n            let item = sItem.item;\r\n            for (let i=0; i<len; i++) {\r\n                let v = list[i];\r\n                if (item === v) {\r\n                    sItem.selected = true;\r\n                    value.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n        };\r\n    }\r\n    */\r\n    //w-100 mb-0 pl-3\r\n    //m-0 w-100\r\n    render(item:SelectableItem, index:number):JSX.Element {\r\n        let {className, key, render, onSelect} = this.list.props.item;\r\n        let {labelId, selected} = item;\r\n        return <li key={key===undefined?index:key(item)} className={classNames(className)}>\r\n            <div className=\"d-flex align-items-center px-3\">\r\n                <input ref={input=>{\r\n                        if (!input) return;\r\n                        this.input = input; input.checked = selected;\r\n                    }}\r\n                    className=\"\" type=\"checkbox\" value=\"\" id={labelId}\r\n                    defaultChecked={selected}\r\n                    onChange={(e)=>{\r\n                        this.onSelect(item, e.target.checked)} \r\n                    }/>\r\n                <label className=\"\" style={{flex:1, marginBottom:0}} htmlFor={labelId}>\r\n                    {this.renderContent(item.item, index)}\r\n                </label>\r\n            </div>\r\n        </li>\r\n    }\r\n}\r\n/*\r\n<label>\r\n<label className=\"custom-control custom-checkbox\">\r\n    <input type='checkbox' className=\"custom-control-input\"\r\n        //checked={selected}\r\n        onChange={(e)=>this.onSelect(item, e.target.checked)} />\r\n    <span className=\"custom-control-indicator\" />\r\n</label>\r\n{this.renderContent(item.item, index)}\r\n</label>\r\n*/\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {PageItems} from 'tonva-tools';\r\nimport {ListBase} from './base';\r\nimport {Clickable} from './clickable';\r\nimport {Static} from './static';\r\nimport {Selectable} from './selectable';\r\nimport \"../css/va-list.css\";\r\nimport { IObservableArray } from 'mobx';\r\n\r\ntype StaticRow = string|JSX.Element|(()=>string|JSX.Element);\r\n\r\nexport interface ListProps {\r\n    className?: string|string[];\r\n    items: any[] | IObservableArray<any> | PageItems<any>;\r\n    item: {\r\n        className?: string|string[];\r\n        render?: (item:any, index:number) => JSX.Element;\r\n        onSelect?: (item:any, isSelected:boolean, anySelected:boolean)=>void;\r\n        onClick?: (item:any)=>void;\r\n        key?: (item:any)=>string;\r\n    };\r\n    compare?:(item:any, selectItem)=>boolean;\r\n    selectedItems?:any[];\r\n    header?: StaticRow;\r\n    footer?: StaticRow;\r\n    before?: StaticRow;\r\n    loading?: StaticRow;\r\n    none?: StaticRow;\r\n}\r\n\r\n@observer\r\nexport class List extends React.Component<ListProps> {\r\n    private listBase: ListBase;\r\n    constructor(props:ListProps) {\r\n        super(props);\r\n        let {item} = this.props;\r\n        let {onClick, onSelect} = item;\r\n        if (onSelect !== undefined)\r\n            this.listBase = new Selectable(this);\r\n        else if (onClick !== undefined)\r\n            this.listBase = new Clickable(this);\r\n        else\r\n            this.listBase = new Static(this);\r\n    }\r\n    _$scroll = (direct: 'top'|'bottom') => {\r\n        console.log('############### items scroll to ' + direct);\r\n    }\r\n    componentWillUpdate(nextProps:ListProps, nextState, nextContext) {\r\n        this.listBase.updateProps(nextProps);\r\n    }\r\n    get selectedItems():any[] {\r\n        return this.listBase.selectedItems;\r\n    }\r\n    render() {\r\n        let {className, header, footer, before, loading, none, item, selectedItems} = this.props;\r\n        if (before === undefined) before = 'before';\r\n        if (loading === undefined) loading = 'loading';\r\n        if (none === undefined) none = 'none';        \r\n        //this.listBase.selectedItems = selectedItems;\r\n        let {isPaged, items, loading:isLoading} = this.listBase;\r\n        function staticRow(row:StaticRow, type:string) {\r\n            if (!row) return;\r\n            switch (typeof row) {\r\n                default:\r\n                case 'string': return <li className={\"va-list-\"+type}>{row}</li>;\r\n                case 'function': return <li className={\"va-list-\"+type}>{(row as ()=>string|JSX.Element)()}</li>;\r\n                case 'object': return <li>{row}</li>\r\n            } \r\n        }\r\n        let content:any;\r\n        if (items === null)\r\n            content = staticRow(before, 'before');\r\n        else if (items === undefined)\r\n            content = staticRow(loading, 'loading');\r\n        else if (items.length === 0)\r\n            content = staticRow(none, 'none');\r\n        else {\r\n            content = items.map((item, index) => {\r\n                return this.listBase.render(item, index);\r\n            });\r\n        }\r\n        return <ul className={classNames('va-list', className)}>\r\n            {staticRow(header, 'header')}\r\n            {content}\r\n            {staticRow(footer, 'footer')}\r\n        </ul>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport * as className from 'classnames';\r\nimport {ListView} from '../listView';\r\nimport {PropGridProps} from './PropGrid';\r\nimport {LabeledProp, StringProp, NumberProp, ListProp, ComponentProp} from './propView';\r\n\r\nexport abstract class PropRow {\r\n    setValues(values: any) {}\r\n    abstract render(key:string): any;\r\n}\r\n\r\nexport class PropBorder extends PropRow {\r\n    render(key:string): JSX.Element {\r\n        return <div key={'_b_' + key} className=\"\">\r\n            <div className=\"col-sm-12\">\r\n                <div style={{borderTop: '1px solid #f0f0f0'}} />\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class PropGap extends PropRow {\r\n    private param: string;\r\n    constructor(param?: string) {\r\n        super();\r\n        this.param = param;\r\n    }\r\n    render(key:string): JSX.Element {\r\n        let w: string;\r\n        switch (this.param) {\r\n            default: w = 'py-2'; break;\r\n            case '=': w = 'py-1'; break;\r\n            case '-': w = 'pb-1'; break;\r\n        }\r\n        let cn = className(w);\r\n        return <div key={'_g_' + key} className={cn} style={{backgroundColor: '#f0f0f0'}} />;\r\n    }\r\n}\r\n\r\nconst valueAlignStart = 'justify-content-start';\r\nconst valueAlignCenter = 'justify-content-center';\r\nconst valueAlignEnd = 'justify-content-end';\r\nexport abstract class LabeledPropRow extends PropRow {\r\n    protected gridProps: PropGridProps;\r\n    protected prop: LabeledProp;\r\n    protected content: any;\r\n    //protected values: any;\r\n    constructor(gridProps:PropGridProps, prop: LabeledProp) {\r\n        super();\r\n        this.gridProps = gridProps;\r\n        this.prop = prop;\r\n        //this.values = values;\r\n    }\r\n    render(key:string):any {\r\n        let {onClick, bk} = this.prop;\r\n        let cn = className({\r\n            \"cursor-pointer\": onClick !== undefined,\r\n            \"bg-white\": bk === undefined, \r\n            \"row\": true\r\n        });\r\n        return <div key={key} className={cn} onClick={onClick}>\r\n            {this.renderLabel()}\r\n            {this.renderProp()}\r\n        </div>;\r\n    }\r\n    protected renderLabel():any {\r\n        let {label} = this.prop;\r\n        if (label === undefined) return null;\r\n        return <label className=\"col-sm-2 col-form-label\">\r\n            {label}\r\n        </label>;\r\n    }\r\n    protected renderProp():any {\r\n        let {label, full} = this.prop as any;\r\n        let align, vAlign;\r\n        switch (this.gridProps.alignValue) {\r\n            case 'left': align = valueAlignStart; break;\r\n            case 'center': align = valueAlignCenter; break;\r\n            case 'right': align = valueAlignEnd; break;\r\n        }\r\n        switch (this.prop.vAlign) {\r\n            case 'top': vAlign = 'align-items-start'; break;\r\n            default:\r\n            case 'center': vAlign = 'align-items-center'; break;\r\n            case 'bottom': vAlign = 'align-items-end'; break;\r\n            case 'stretch': vAlign = 'align-items-stretch'; break;\r\n        }\r\n        let col:string;\r\n        if (full !== true)\r\n            col = label===undefined? 'col-sm-12':'col-sm-10';\r\n        else\r\n            col = 'w-100';\r\n        let cn = className(align, vAlign, col, 'd-flex');\r\n        return <div className={cn}>\r\n            {this.renderPropBody()}\r\n        </div>;\r\n    }\r\n    protected renderPropBody():any {\r\n        return <div className=\"form-control-plaintext\">\r\n            {this.renderPropContent()}\r\n        </div>;\r\n    }\r\n    protected renderPropContent():any {\r\n        return this.content;\r\n    }\r\n}\r\n\r\nexport class StringPropRow extends LabeledPropRow {\r\n    protected prop: StringProp;\r\n    setValues(values:any) {\r\n        if (values === undefined) this.content = undefined;\r\n        else this.content = values[this.prop.name];\r\n    }\r\n}\r\n\r\nexport class NumberPropRow extends LabeledPropRow {\r\n    protected prop: NumberProp;\r\n    setValues(values:any) {\r\n        if (values === undefined) this.content = undefined;\r\n        else this.content = values[this.prop.name];\r\n    }\r\n}\r\n\r\nexport class ListPropRow extends LabeledPropRow {\r\n    protected prop: ListProp;\r\n    setValues(values:any) {\r\n        if (values === undefined) this.content = undefined;\r\n        else {\r\n            let list = this.prop.list;\r\n            if (typeof list === 'string') this.content = values[list];\r\n            else this.content = undefined;\r\n        }\r\n    }\r\n    protected renderPropBody() {\r\n        let {list, row} = this.prop;\r\n        let items:any[] = typeof list === 'string'? this.content : list;\r\n        if (items === undefined) return <div/>;\r\n        // new row(item)\r\n        return <div className=\"w-100\">\r\n            {\r\n                items.map((item, index) => <React.Fragment key={index}>\r\n                    {index===0? null: <div style={{width:'100%', borderBottom:'1px solid #f0f0f0'}} />}\r\n                    {React.createElement(row, item)}\r\n                </React.Fragment>)\r\n            }\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class ComponentPropRow extends LabeledPropRow {\r\n    protected prop: ComponentProp;\r\n    protected renderPropBody() {\r\n        let {component} = this.prop;\r\n        return component;\r\n    }\r\n}\r\n\r\nexport class PropContainer extends PropRow {\r\n    render(key:string): JSX.Element {\r\n        return <div className=\"bg-white\">\r\n            <label className=\"col-sm-2 col-form-label\">\r\n                AAABBBCCC\r\n            </label>\r\n            <div className=\"col-sm-10\">\r\n                <div className=\"form-control-plaintext\">\r\n                    dsfasfa sdf asdf a\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n","import {ListViewProps} from '../listView';\r\nimport {PropGridProps} from './PropGrid';\r\nimport {PropRow, PropBorder, PropGap, PropContainer,\r\n    StringPropRow, NumberPropRow, ListPropRow, ComponentPropRow} from './row';\r\n\r\nexport interface Format {\r\n\r\n}\r\n\r\nexport interface PropBase {\r\n    onClick?: ()=>void;\r\n}\r\n\r\nexport interface LabeledProp extends PropBase {\r\n    label?: string;\r\n    bk?: string;\r\n    vAlign?: 'top'|'bottom'|'center'|'stretch';\r\n}\r\n\r\nexport interface StringProp extends LabeledProp {\r\n    type: 'string';\r\n    name: string;\r\n}\r\n\r\nexport interface NumberProp extends LabeledProp {\r\n    type: 'number';\r\n    name: string;\r\n}\r\n\r\nexport interface FormatProp extends LabeledProp {\r\n    type: 'format';\r\n    format: Format;\r\n}\r\n\r\nexport interface ListProp extends LabeledProp {\r\n    type: 'list';\r\n    list: string | any[];  // string 表示名字，否则就是值\r\n    row: new (props:any) => React.Component;\r\n}\r\n\r\nexport interface ComponentProp extends LabeledProp {\r\n    type: 'component';\r\n    full?: boolean;\r\n    component: any; //JSX.Element;\r\n}\r\n\r\nexport type Prop = StringProp | NumberProp | FormatProp | ListProp | ComponentProp | string;\r\n\r\nexport class PropView {\r\n    private gridProps:PropGridProps\r\n    private props: Prop[];\r\n    //private values:any;\r\n    private rows: PropRow[];\r\n\r\n    constructor(gridProps:PropGridProps, props:Prop[]) {\r\n        this.gridProps = gridProps;\r\n        this.props = props;\r\n        //this.values = values;\r\n        this.buildRows();\r\n    }\r\n\r\n    private buildRows() {\r\n        this.rows = [];\r\n        let isGap:boolean = true;\r\n        for (let prop of this.props) {\r\n            if (typeof prop === 'string') {\r\n                this.rows.push(new PropGap(prop));\r\n                isGap = true;\r\n            }\r\n            else {\r\n                if (!isGap) this.rows.push(new PropBorder());\r\n                let row;\r\n                switch (prop.type) {\r\n                    default: continue;\r\n                    case 'string': row = new StringPropRow(this.gridProps, prop); break;\r\n                    case 'number': row = new NumberPropRow(this.gridProps, prop); break;\r\n                    case 'list': row = new ListPropRow(this.gridProps, prop); break;\r\n                    case 'component': row = new ComponentPropRow(this.gridProps, prop); break;\r\n                }\r\n                this.rows.push(row);\r\n                isGap = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    setValues(values: any) {\r\n        for (let r of this.rows) r.setValues(values);\r\n    }\r\n\r\n    render() {\r\n        return this.rows.map((row, index) => row.render(String(index)));\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {Prop, PropView} from './propView';\r\nimport {PropContainer, PropBorder, PropGap} from './row';\r\n\r\nexport interface PropGridProps {\r\n    className?: string;\r\n    rows: Prop[];\r\n    values: any;\r\n    alignValue?: 'left'|'center'|'right';\r\n}\r\n\r\n@observer\r\nexport class PropGrid extends React.Component<PropGridProps> {\r\n/*\r\n    private propView: PropView;\r\n    constructor(props:PropGridProps) {\r\n        super(props);\r\n    }\r\n*/\r\n/*\r\n    componentWillMount() {\r\n        this.propView = new PropView(this.props.rows);\r\n        this.propView.setValues(this.props.values);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps: Readonly<PropGridProps>, nextContext: any) {\r\n        this.propView = new PropView(this.props.rows);\r\n        this.propView.setValues(nextProps.values);\r\n        this.forceUpdate();\r\n    }\r\n*/\r\n    render() {\r\n        let {className, rows, values} = this.props;\r\n        let propView = new PropView(this.props, rows);\r\n        propView.setValues(values);\r\n        let cn = classNames('container-fluid', className);\r\n        return <div className={cn}>\r\n            {propView.render()}\r\n        </div>;\r\n    }\r\n}\r\n","export * from './propView';\r\nexport * from './row';\r\nexport * from './PropGrid';\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {IObservableValue, IComputedValue} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport '../css/va-row.css';\r\n\r\nexport interface ListItem {\r\n    key?: string|number;\r\n    date?: Date;\r\n    icon?: string | JSX.Element;\r\n    main?: string;\r\n    vice?: string;\r\n    middle?: string | JSX.Element;\r\n    midSize?: number;\r\n    right?: string | JSX.Element;\r\n    onClick?: () => void;\r\n    unread?: number|IComputedValue<number>;         // <0 表示red dot\r\n}\r\n\r\nexport interface ListRowProps extends ListItem {\r\n    //onClick: () => void;\r\n}\r\n\r\nexport interface ListRowState {\r\n    pressed: boolean;\r\n}\r\n\r\n@observer\r\nexport class ListRow extends React.Component<ListRowProps, ListRowState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pressed: false,\r\n        }\r\n    }\r\n    render() {\r\n        let {date, main, vice, middle, midSize, icon, unread, right, onClick} = this.props;\r\n        let header, isIcon:boolean, noteNum;\r\n        if (unread !== undefined) {\r\n            let uv:number;\r\n            if (typeof unread === 'number') uv = unread;\r\n            else uv = unread.get();\r\n                if (uv > 0)\r\n                noteNum = <b>{uv}</b>;\r\n            else if (uv < 0)\r\n                noteNum = <b className='dot' />;\r\n        }\r\n        switch (typeof icon) {\r\n            case 'object':\r\n                header = <header>{icon}{noteNum}</header>; \r\n                isIcon= false;\r\n                break;\r\n            case 'string': \r\n                header = <header className='icon'><img src={icon as string} />{noteNum}</header>;\r\n                isIcon= true; \r\n                break;\r\n        }\r\n        let mid;\r\n        if (middle !== undefined) {\r\n            switch (typeof middle) {\r\n                case 'string':\r\n                    mid = <div style={{flex:midSize}}>{middle}</div>;\r\n                    break;\r\n                default:\r\n                    mid = middle;\r\n                    break;\r\n            }\r\n        }\r\n        let footer;\r\n        if (right !== undefined) {\r\n            if (typeof right === 'string')\r\n                footer = <footer><small className=\"text-muted\">{right}</small></footer>;\r\n            else\r\n                footer = <footer>{right}</footer>;\r\n        }\r\n        let viceSpan;\r\n        if (vice !== undefined) viceSpan = <span>{vice}</span>;\r\n        let cn = classNames('va-row', {icon:isIcon, pressed: this.state.pressed}, {\"va-action\": onClick !== undefined});\r\n        return (\r\n        <li className={cn} onClick={onClick}>\r\n            {header}\r\n            <div>\r\n                <div>{main}</div>\r\n                {viceSpan}\r\n            </div>\r\n            {mid}\r\n            {footer}\r\n        </li>\r\n        );\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {ListItem, ListRow} from './listRow';\r\n\r\nexport interface ListViewProps {\r\n    className?: string;\r\n    items?: any[];\r\n    renderRow?: (item:any, index:number, ex?:any) => JSX.Element;\r\n    ex?: any;\r\n    header?: string|JSX.Element;\r\n    beforeLoad?: string|JSX.Element;\r\n    none?: string|JSX.Element;\r\n    footer?: string|JSX.Element;\r\n    itemClick?: (item:any)=>void;\r\n    converter?: (item:any)=>ListItem;\r\n}\r\n\r\n@observer\r\nexport class ListView extends React.Component<ListViewProps, null> {\r\n    render() {\r\n        let {header, items, beforeLoad, none, renderRow, className, footer, itemClick, converter} = this.props;\r\n        let cn = classNames(className, 'va-list');\r\n        let content, elHeader;\r\n        if (items === undefined)\r\n            content = beforeLoad === null? null : <li className='empty'>\r\n                {beforeLoad || '...'}\r\n            </li>;\r\n        else if (items.length === 0) {\r\n            content = (\r\n            <li className='empty'>\r\n                {\r\n                    none || '[none]'\r\n                }\r\n            </li>);\r\n        }\r\n        else if (renderRow !== undefined) {\r\n            content = items.map((item, index) => renderRow(item, index, this.props.ex));\r\n        }\r\n        else {\r\n            content = items.map((item, index) => {\r\n                let onClick = item.onClick;\r\n                if (onClick === undefined && itemClick !== undefined) \r\n                    onClick = ()=>itemClick(item);\r\n                let listItem:ListItem;\r\n                if (converter !== undefined) {\r\n                    listItem = converter(item);\r\n                    if (listItem === undefined) return null;\r\n                }\r\n                else {\r\n                    listItem = {\r\n                        ...item\r\n                    }\r\n                }\r\n                if (listItem.key === undefined) listItem.key = listItem.main;\r\n                return <ListRow onClick={onClick} {...listItem} />;\r\n            });\r\n        }\r\n        if (header !== undefined) {\r\n            if (typeof header === 'string') {\r\n                elHeader = <div className='va-list-header'>{header}</div>;\r\n            }\r\n            else {\r\n                elHeader = header;\r\n            }\r\n        }\r\n\r\n        return (\r\n        <div className={cn}>\r\n            {elHeader}\r\n            <ul>\r\n                {content}\r\n            </ul>\r\n            {footer}\r\n        </div>\r\n        )\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport { IObservableValue } from 'mobx/lib/internal';\r\n\r\nexport type TabCaption = (selected:boolean) => JSX.Element;\r\n\r\nexport interface TabProp {\r\n    name: string;\r\n    caption: TabCaption;\r\n    content: () => JSX.Element;\r\n    notify?: IObservableValue<number>;\r\n}\r\n\r\nexport interface TabsProps {\r\n    tabs: TabProp[];\r\n    size?: 'sm' | 'lg' | 'md';\r\n    tabBack?: string;\r\n    contentBack?: string;\r\n    sep?: string;\r\n    selected?: string;\r\n}\r\n\r\nclass Tab {\r\n    name: string;\r\n    @observable selected: boolean;\r\n    caption: TabCaption;\r\n    contentBuilder: ()=>JSX.Element;\r\n    notify: IObservableValue<number>;\r\n\r\n    private _content: JSX.Element;\r\n    get content(): JSX.Element {\r\n        if (this.selected !== true) return this._content;\r\n        if (this._content !== undefined) return this._content;\r\n        return this._content = this.contentBuilder();\r\n    }\r\n}\r\n\r\nexport const TabCaptionComponent = (label:string, icon:string, color:string) => <div \r\n    className={'d-flex justify-content-center align-items-center flex-column cursor-pointer ' + color}>\r\n    <div><i className={'fa fa-lg fa-' + icon} /></div>\r\n    <small>{label}</small>\r\n</div>;\r\n\r\n@observer export class Tabs extends React.Component<TabsProps> {\r\n    private size: string;\r\n    private tabBack: string;\r\n    private contentBack: string;\r\n    private sep: string;\r\n    @observable private selectedTab: Tab;\r\n    @observable private tabs: Tab[] = [];\r\n\r\n    constructor(props: TabsProps) {\r\n        super(props);\r\n        let {size, tabs, tabBack, contentBack, sep, selected} = this.props;\r\n        switch (size) {\r\n            default:\r\n            case 'md': this.size = '3.2rem'; break;\r\n            case 'sm': this.size = '4rem'; break;\r\n            case 'lg': this.size = '2.5rem'; break;\r\n        }\r\n        this.tabs.push(...tabs.map(v => {\r\n                let tab = new Tab();\r\n                tab.name = v.name;\r\n                tab.selected = false;\r\n                tab.caption = v.caption;\r\n                tab.contentBuilder = v.content;\r\n                tab.notify = v.notify;\r\n                return tab;\r\n            }\r\n        ));\r\n        this.tabBack = tabBack || 'bg-light';\r\n        this.contentBack = contentBack;\r\n        this.sep = sep || 'border-top border-gray';\r\n        if (selected !== undefined) {\r\n            this.selectedTab = this.tabs.find(v => v.name === selected);\r\n        }\r\n        if (this.selectedTab === undefined) this.selectedTab = this.tabs[0];\r\n        this.selectedTab.selected = true;\r\n    }\r\n\r\n    private tabClick = (tab:Tab) => {\r\n        this.selectedTab.selected = false;\r\n        tab.selected = true;\r\n        this.selectedTab = tab;\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"tab\">\r\n            <div className={this.contentBack} style={{height: 'calc(100% - ' + this.size + ')'}}>\r\n                {this.tabs.map((v,index) => {\r\n                    let style:React.CSSProperties={\r\n                        display: v.selected===true? undefined : 'none'};\r\n                    return <div key={index} style={style}>{v.content}</div>;\r\n                })}\r\n            </div>\r\n            <div className={classNames(this.tabBack, this.sep)} style={{height: this.size}}>\r\n                {this.tabs.map((v,index) => {\r\n                    let {selected, caption, notify} = v;\r\n                    let notifyCircle:any;\r\n                    if (notify !== undefined) {\r\n                        let num = notify.get();\r\n                        if (num !== undefined) {\r\n                            if (num > 0) notifyCircle = <u>{num>99?'99+':num}</u>;\r\n                            else if (num < 0) notifyCircle = <u className=\"dot\" />;\r\n                        }\r\n                    }\r\n                    return <div key={index} className=\"\" onClick={()=>this.tabClick(v)}>\r\n                        <div className=\"align-self-center\">\r\n                            {notifyCircle}\r\n                            {caption(selected)}\r\n                        </div>\r\n                    </div>\r\n                })}\r\n            </div>\r\n        </div>\r\n    }\r\n};\r\n","import _ from 'lodash';\r\nimport { KeyValueRes, Res } from '../res';\r\n\r\nexport interface FormRes extends KeyValueRes {\r\n    required: string;\r\n    number: string;\r\n    integer: string;\r\n    min: string;\r\n    max: string;\r\n}\r\n\r\nexport const formRes:Res<FormRes> = {\r\n    _: {\r\n        required: 'required',\r\n        number: 'not valid number',\r\n        integer: 'not valid integer',\r\n        min: 'min value is ${min}',\r\n        max: 'max value is ${max}',\r\n    },\r\n    zh: {\r\n        _: {\r\n            required: '必须填',\r\n            number: '需要数字',\r\n            integer: '需要整数',\r\n            min: '不能小于${min}',\r\n            max: '不能大于${max}',\r\n        }\r\n    },\r\n}\r\n","import * as React from 'react';\r\nimport {observable, IReactionDisposer, autorun} from 'mobx';\r\nimport classNames from 'classnames';\r\nimport { Schema, ItemSchema, ArrSchema } from './schema';\r\nimport { UiSchema, TempletType } from './uiSchema';\r\nimport { factory } from './widgets';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport { ContextContainer, FormContext, Context, RowContext } from './context';\r\nimport { FormRes, formRes } from './formRes';\r\nimport { resLang } from '../res';\r\n\r\nexport type FormButtonClick = (name:string, context: Context) => Promise<any>;\r\n\r\nexport interface FormProps {\r\n    className?: string;\r\n    schema: Schema;\r\n    uiSchema?: UiSchema;\r\n    formData?: any;\r\n    onButtonClick?: FormButtonClick;\r\n    fieldLabelSize?: number;            // col-sm-2 for label\r\n    requiredFlag?: boolean;             // default=true\r\n    beforeShow?: (formContext:FormContext) => void;\r\n    res?: FormRes;\r\n\r\n    Container?: (content:JSX.Element) => JSX.Element;\r\n    FieldContainer?: (label:string|JSX.Element, content:JSX.Element) => JSX.Element;\r\n    FieldClass?: string;\r\n    ButtonClass?: string;\r\n/*    \r\n    ArrContainer?: (label:any, content:JSX.Element) => JSX.Element;\r\n    RowContainer?: (content:JSX.Element) => JSX.Element;\r\n    RowSeperator?: JSX.Element;\r\n*/\r\n}\r\n\r\nexport class Form extends React.Component<FormProps> {\r\n    readonly schema: Schema;\r\n    readonly itemSchemas: {[name:string]: ItemSchema};\r\n    readonly uiSchema: UiSchema;\r\n    readonly res?: FormRes;\r\n    protected formContext: FormContext;\r\n    private content: any;\r\n    private formData: any;\r\n    private disposer: IReactionDisposer;\r\n    @observable readonly data:any;\r\n\r\n    readonly Container: (content:JSX.Element) => JSX.Element;\r\n    readonly FieldContainer: (label:any, content:JSX.Element) => JSX.Element;\r\n    readonly FieldClass: string;\r\n    readonly ButtonClass: string;\r\n    //readonly ArrContainer: (label:any, content:JSX.Element) => JSX.Element;\r\n    //readonly RowContainer: (content:JSX.Element) => JSX.Element;\r\n    //readonly RowSeperator: JSX.Element;\r\n\r\n    constructor(props:FormProps) {\r\n        super(props);\r\n        let {schema, uiSchema, formData, \r\n            Container, FieldContainer, FieldClass, \r\n            ButtonClass, \r\n            res,\r\n            //ArrContainer, RowContainer, //ArrFieldContainer, \r\n            //RowSeperator,\r\n        } = props;\r\n        this.Container = Container || this.DefaultContainer;\r\n        this.FieldContainer = FieldContainer || this.DefaultFieldContainer;\r\n        this.FieldClass = FieldClass!==undefined && FieldClass!==''&&FieldClass!==null? FieldClass : this.DefaultFieldClass;\r\n        this.res = res || this.DefaultRes;\r\n        this.ButtonClass = ButtonClass || this.DefaultButtonClass;\r\n        //this.ArrContainer = ArrContainer || this.DefaultArrContainer;\r\n        //this.RowContainer = RowContainer || this.DefaultRowContainer;\r\n        //this.RowSeperator = RowSeperator || this.DefaultRowSeperator;\r\n\r\n        this.schema = schema;\r\n        this.itemSchemas = {};\r\n        for (let itemSchema of this.schema) {\r\n            this.itemSchemas[itemSchema.name] = itemSchema;\r\n        }\r\n        this.uiSchema = uiSchema;\r\n        this.formData = formData;\r\n        this.disposer = autorun(this.calcSelectOrDelete);\r\n        this.data = {};\r\n        this.initData(formData);\r\n        let inNode:boolean = this.props.children !== undefined || this.uiSchema && this.uiSchema.Templet !== undefined;\r\n        //this.formContext = new FormContext(this, inNode);\r\n        let {children} = this.props;\r\n        //let content:JSX.Element; //, inNode:boolean;\r\n        //let formContext: FormContext;\r\n        if (children !== undefined) {\r\n            //inNode = true;\r\n            this.content = <>{children}</>;\r\n            this.formContext = new FormContext(this, true);\r\n        }\r\n        else {\r\n            let Templet: TempletType;\r\n            if (this.uiSchema !== undefined) {\r\n                Templet = this.uiSchema.Templet;\r\n            }\r\n            if (Templet !== undefined) {\r\n                // inNode = true;\r\n                this.content = typeof(Templet) === 'function'? Templet(this.data) : Templet;\r\n                this.formContext = new FormContext(this, true);\r\n            }\r\n            else {\r\n                // inNode = false;\r\n                this.formContext = new FormContext(this, false);\r\n                this.content = <>{this.schema.map((v, index) => {\r\n                    return <React.Fragment key={index}>{factory(this.formContext, v, children)}</React.Fragment>\r\n                })}</>;\r\n            }\r\n        }\r\n    }\r\n\r\n    private initData(formData: any) {\r\n        if (formData === undefined) formData = {};\r\n        for (let itemSchema of this.schema) {\r\n            this.initDataItem(itemSchema, this.data, formData);\r\n        }\r\n    }\r\n\r\n    private initDataItem(itemSchema: ItemSchema, data:any, formData: any):any {\r\n        let {name, type} = itemSchema;\r\n        if (type === 'button') return;\r\n        if (type === 'arr') {\r\n            let arrItem:ArrSchema = itemSchema as ArrSchema;\r\n            let {arr:arrItems} = arrItem;\r\n            if (arrItems === undefined) return;\r\n            let arrDict = arrItem.itemSchemas = {};\r\n            for (let item of arrItems) {\r\n                arrDict[item.name] = item;\r\n            }\r\n            let val:any[] = formData[name];\r\n            if (val === undefined) val = [];\r\n            else if (Array.isArray(val) === false) val = [val];\r\n            let arr:any[] = [];\r\n            for (let row of val) {\r\n                let {$isSelected, $isDeleted} = row;\r\n                let r = {\r\n                    $source: row,\r\n                    $isSelected: $isSelected,\r\n                    $isDeleted: $isDeleted,\r\n                };\r\n                for (let item of arrItems) {\r\n                    this.initDataItem(item, r, row);\r\n                    /*\r\n                    let {name:nm} = item;\r\n                    let v = row[nm];\r\n                    if (v === undefined) v = null;\r\n                    r[nm] = v;\r\n                    */\r\n                }\r\n                arr.push(r);\r\n            }\r\n            data[name] = observable(arr);\r\n            return;\r\n        }\r\n        data[name] = formData[name];\r\n    }\r\n\r\n    private calcSelectOrDelete = () => {\r\n        if (this.formData === undefined) return;\r\n        for (let itemSchema of this.schema) {\r\n            this.arrItemOperated(itemSchema);\r\n        }\r\n    }\r\n\r\n    private arrItemOperated(itemSchema: ItemSchema) {\r\n        let {name, type} = itemSchema;\r\n        if (type !== 'arr') return;\r\n        //let arrVal = this.formData[name];\r\n        //if (arrVal === undefined) return;\r\n        let formArrVal = this.data[name];\r\n        let {arr: arrItems} = itemSchema as ArrSchema;\r\n        for (let row of formArrVal) {\r\n            let {$source} = row;\r\n            if ($source === undefined) continue;\r\n            let {$isSelected, $isDeleted} = $source;\r\n            row.$isSelected = $isSelected;\r\n            row.$isDeleted = $isDeleted;\r\n            //console.log($isSelected, $isDeleted);\r\n            for (let item of arrItems) {\r\n                this.arrItemOperated(item);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let {beforeShow} = this.props;\r\n        if (beforeShow !== undefined) beforeShow(this.formContext);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.disposer();\r\n    }\r\n\r\n    render() {\r\n        return <ContextContainer.Provider value={this.formContext}>\r\n            <this.formContext.renderErrors />\r\n            {this.Container(this.content)}\r\n        </ContextContainer.Provider>;\r\n    }\r\n\r\n    protected DefaultContainer = (content:JSX.Element): JSX.Element => {\r\n        return <form className={classNames(this.props.className)}>\r\n            {content}\r\n        </form>;\r\n    }\r\n    /*\r\n    protected DefaultArrFieldContainer = (itemName:string, content:JSX.Element, context:RowContext): JSX.Element => {\r\n        return this.InnerFieldContainer(itemName, content, context);\r\n    }*/\r\n    protected DefaultFieldContainer = (label:string|JSX.Element, content:JSX.Element): JSX.Element => {\r\n        //return this.InnerFieldContainer(itemName, content, context);\r\n        let {fieldLabelSize} = this.props;\r\n\r\n        if (fieldLabelSize > 0) {\r\n            let labelView:any;\r\n            if (label === null) {\r\n                fieldLabelSize = 0;\r\n            }\r\n            else {\r\n                labelView = <label className={classNames('col-sm-' + fieldLabelSize, 'col-form-label')}>{label}</label>\r\n            }\r\n            let fieldCol = 'col-sm-' + (12 - fieldLabelSize);\r\n            return <div className=\"form-group row\">\r\n                {labelView}\r\n                <div className={fieldCol}>{content}</div>\r\n            </div>;\r\n        }\r\n        return <div className=\"form-group\">\r\n            {label===null? null:<label className=\"col-form-label\">{label}</label>}\r\n            {content}\r\n        </div>;\r\n    }\r\n    protected DefaultFieldClass:string = undefined;\r\n    protected DefaultButtonClass = 'text-center py-2';\r\n    protected DefaultRes:FormRes = resLang<FormRes>(formRes);\r\n\r\n    ArrContainer = (label:any, content:JSX.Element): JSX.Element => {\r\n        return <div>\r\n            <div className={classNames('small text-muted text-center bg-light py-1 px-3 mt-4 mb-1')}>{label}</div>\r\n            {content}\r\n        </div>;\r\n    }\r\n    RowContainer = (content:JSX.Element): JSX.Element => {\r\n        //return <div className=\"row\">{content}</div>;\r\n        let cn = classNames({\r\n            'py-3': true\r\n        });\r\n        return <div className={cn}>{content}</div>\r\n    }\r\n    RowSeperator = <div className=\"border border-gray border-top\" />;\r\n}\r\n","import * as React from 'react';\r\nimport {FetchError} from '../fetchError';\r\nimport { refetchApi } from '../net';\r\n\r\nexport interface FetchErrorProps extends FetchError {\r\n    clearError: ()=>void\r\n}\r\n\r\nexport default class FetchErrorView extends React.Component<FetchErrorProps, null> {\r\n    private reApi = async () => {\r\n        this.props.clearError();\r\n        const {channel, url, options, resolve, reject} = this.props;\r\n        await refetchApi(channel, url, options, resolve, reject);\r\n    }\r\n    private close = async () => {\r\n        this.props.clearError();\r\n    }\r\n    render() {\r\n        let {error, url} = this.props;\r\n            //let errMsg = fetchError.errorMsg;\r\n        let errContent;\r\n        if (typeof error === 'object') {\r\n            let err = [];\r\n            for (let i in error) {\r\n                err.push(<li key={i}><label>{i}</label><div>{error[i]}</div></li>);\r\n            }\r\n            errContent = <ul>{err}</ul>;\r\n        }\r\n        else {\r\n            errContent = <div>{error}</div>;\r\n        }\r\n        return <li>\r\n            <article className=\"page-container\">\r\n                <section>\r\n                    <div  className=\"va-error\">\r\n                        <div>网络出现问题</div>\r\n                        <div>点击重新访问</div>\r\n                        <div>url: {url}</div>\r\n                        {errContent}\r\n                        <div className=\"p-3\">\r\n                            <button type='button' onClick={this.reApi}>重新API</button>\r\n                            <button type='button' onClick={this.close}>关闭</button>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </article>\r\n        </li>;\r\n    }\r\n}\r\n","import {User, Guest, Unit} from './user';\r\n\r\nexport interface ClearableData {\r\n    clear(): void;\r\n}\r\n\r\nexport class Data<T> implements ClearableData {\r\n    private name: string;\r\n    private value?: T;\r\n    constructor(name: string) {this.name = name; }\r\n    get(): T {\r\n        if (this.value !== undefined) return this.value;\r\n        let v = localStorage.getItem(this.name);\r\n        return this.value = v === null ? undefined : JSON.parse(v); \r\n    }\r\n    set(value: T) {\r\n        if (!value) { this.clear(); return; }\r\n        this.value = value;\r\n        localStorage.setItem(this.name, JSON.stringify(value));\r\n    }\r\n    clear() {\r\n        this.value = undefined;\r\n        localStorage.removeItem(this.name);\r\n    }\r\n}\r\n\r\nexport class LocalData {\r\n    user = new Data<User>('user');\r\n    guest = new Data<Guest>('guest');\r\n    unit = new Data<Unit>('unit');\r\n    homeTabCur = new Data<number>('homeTabCur');\r\n\r\n    logoutClear() {\r\n        [\r\n            this.user,\r\n            this.homeTabCur\r\n        ].map(d => d.clear());\r\n    }\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import * as React from 'react';\r\nimport {EasyDate} from 'tonva-react-form';\r\n\r\nexport interface IdDatesProps {\r\n    date_init: Date;\r\n    date_update: Date;\r\n}\r\n\r\nexport class IdDates extends React.Component<IdDatesProps> {\r\n    render() {\r\n        let {date_init, date_update} = this.props;\r\n        return <small className=\"text-muted\">\r\n            上次修改: <EasyDate date={date_update}/>\r\n            <i className=\"fa fa-fw\" />\r\n            创建: <EasyDate date={date_init}/>\r\n        </small>\r\n    }\r\n}\r\n","export const appIcon = process.env.REACT_APP_ICON;\r\nexport const appItemIcon = process.env.REACT_APP_ITEM_ICON;\r\n\r\n/*\r\nconst consts = {\r\n    form: {\r\n        label: {sm:3, md:2},\r\n        input: {sm: 9, md: 9},\r\n        submit: {\r\n            xs: undefined,\r\n            sm: {offset: 3, size: 3},\r\n            md: {offset: 2, size: 3},\r\n            lg: undefined,\r\n        }\r\n    },\r\n\r\n    appIcon: 'http://101.200.46.56/imgs/Bear-icon.png',\r\n    appItemIcon: 'http://101.200.46.56/imgs/Bear-icon.png',\r\n};\r\n\r\nexport default consts;\r\n*/","import {CenterApi, User, meInFrame} from 'tonva-tools';\r\nimport { string } from 'prop-types';\r\n\r\nclass MainApi extends CenterApi {\r\n    async stickies():Promise<any[]> {\r\n        return await this.get('sticky/list', {start:0, pageSize:30});\r\n    }\r\n\r\n    async ties():Promise<any[]> {\r\n        return await this.get('tie/list', {start:0, pageSize:30});\r\n    }\r\n\r\n    async apps(unit:number):Promise<any> {\r\n        return await this.get('tie/apps', {unit:unit});\r\n    }\r\n\r\n    async appApi(unit:number, app:number, apiName:string) {\r\n        return await this.get('tie/app-api', {unit:unit, app:app, apiName:apiName});\r\n    }\r\n\r\n    async userId(name:string):Promise<number> {\r\n        return await this.get('tie/user-id', {name:name});\r\n    }\r\n\r\n    async userAdminUnits():Promise<any[]> {\r\n        return await this.get('tie/user-admin-units', {});\r\n    }\r\n\r\n    async sendMessage(toUser:number, type:string, content:any) {\r\n        let {unit} = meInFrame;\r\n        let adminApp = 0;\r\n        return await this.post('tie/send-message', {\r\n            type: type, \r\n            fromUnit: unit, \r\n            fromApp: adminApp,\r\n            toUser: toUser, \r\n            content: content, \r\n        });\r\n    }\r\n\r\n    async unit(unit:number):Promise<any> {\r\n        return await this.get('unit/', {unit:unit});\r\n    }\r\n\r\n    async unitMemberCount(unit:number):Promise<number> {\r\n        return await this.get('unit/member-count', {unit:unit});\r\n    }\r\n\r\n    async unitAdmins(unit:number):Promise<any[]> {\r\n        return await this.get('unit/admins', {unit:unit});\r\n    }\r\n\r\n    async unitSetAdmin(fellow:number, unit:number, isOwner:number, isAdmin:number):Promise<any> {\r\n        return await this.post('unit/set-admin', {fellow:fellow, unit:unit, isOwner:isOwner, isAdmin:isAdmin});\r\n    }\r\n\r\n    async unitAddAdmin(user:string, unit:number, isOwner:number, isAdmin:number):Promise<any> {\r\n        return await this.post('unit/add-admin', {user:user, unit:unit, isOwner:isOwner, isAdmin:isAdmin});\r\n    }\r\n\r\n    async unitApps(unit:number):Promise<any[]> {\r\n        return await this.get('unit/apps', {unit:unit});\r\n    }\r\n\r\n    async unitAddApp(unit:number, app:number):Promise<number> {\r\n        let ret = await this.post('unit/add-app', {unit:unit, app:app});\r\n        return ret;\r\n    }\r\n\r\n    async unitDeleteApp(unit:number, app:number, deleted:number):Promise<void> {\r\n        await this.post('unit/delete-app', {unit:unit, app:app, deleted:deleted});\r\n    }\r\n\r\n    async unitChangeProp(unit:number, prop:string, value:any):Promise<void> {\r\n        await this.post('unit/change-prop', {unit:unit, prop:prop, value:value});\r\n    }\r\n\r\n    async searchApp(unit:number, key:string, pageStart:any, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/search-app', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n\r\n    async unitRoles(unit:number):Promise<any[]> {\r\n        return await this.get('unit/roles', {unit:unit});\r\n    }\r\n\r\n    async unitAddRole(unit:number, name:string, discription:string):Promise<number> {\r\n        return await this.post('unit/add-role', {unit:unit, name:name, discription:discription});\r\n    }\r\n\r\n    async unitRoleChangeProp(unit:number, role:number, prop:string, value:any):Promise<void> {\r\n        await this.post('unit/change-role-prop', {unit:unit, role:role, prop:prop, value:value});\r\n    }\r\n\r\n    async unitRoleApps(unit:number, role:number):Promise<any[]> {\r\n        return await this.get('unit/role-apps', {unit:unit, role:role});\r\n    }\r\n\r\n    async unitRoleSetApps(unit:number, role:number, apps:number[]):Promise<void> {\r\n        await this.post('unit/role-set-apps', {unit:unit, role:role, apps:apps});\r\n    }\r\n\r\n    async unitMembers(unit:number, role:number, key:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/members', {unit:unit, role:role, key, pageStart, pageSize});\r\n    }\r\n\r\n    async unitAssignMember(unit:number, member:number, assigned:string):Promise<void> {\r\n        await this.post('unit/assign-member', {unit:unit, member:member, assigned:assigned});\r\n    }\r\n\r\n    async unitMemberRoles(unit:number, member:number):Promise<any[]> {\r\n        return await this.get('unit/member-roles', {unit:unit, member:member});\r\n    }\r\n\r\n    async unitSetMemberRoles(unit:number, member:number, roles:number[]):Promise<void> {\r\n        await this.post('unit/member-set-roles', {unit:unit, member:member, roles:roles});\r\n    }\r\n\r\n    async unitUsers(unit:number, key:string, pageStart:number, pageSize:number):Promise<any> {\r\n        return await this.get('unit/users', {unit: unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitAppUsers(unit:number, key:string, pageStart:number, pageSize:number):Promise<any> {\r\n        return await this.get('unit/app-users', {unit: unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitOneAppUsers(unit:number, app:number, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/one-app-users', {unit: unit, app:app, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitOneUserApps(unit:number, user:number, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/one-user-apps', {unit: unit, user:user, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitAppEditUsers(unit:number, app:number, key:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/app-edit-users', {unit: unit, app:app, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitUserEditApps(unit:number, user:number, key:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/user-edit-apps', {unit: unit, user:user, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async bindAppUser(unit:number, app:number, user:number, bind:number):Promise<void> {\r\n        await this.post('unit/bind-app-user', {unit: unit, app:app, user:user, bind:bind});\r\n    }\r\n}\r\n\r\nexport const mainApi = new MainApi('tv/', undefined);\r\n","import {CenterApi} from 'tonva-tools';\r\n\r\nclass DevApi extends CenterApi {\r\n    async uqBuilderUrl():Promise<any> {\r\n        let ret = await this.get('uq-builder-url', undefined);\r\n        return ret;\r\n    }    \r\n    async counts(unit:number):Promise<any> {\r\n        return await this.get('counts', {unit:unit});\r\n    }\r\n    async app(id:number):Promise<any> {\r\n        return await this.get('app', {id:id});\r\n    }\r\n    async uq(id:number):Promise<any> {\r\n        return await this.get('uq', {id:id});\r\n    }\r\n    async server(id:number):Promise<any> {\r\n        return await this.get('server', {id:id});\r\n    }\r\n    async uqdb(id:number):Promise<any> {\r\n        return await this.get('uqdb', {id:id});\r\n    }\r\n    async apps(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('apps', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async uqs(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('uqs', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async buses(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('buses', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async servers(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('servers', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async uqdbs(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('uqdbs', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async services(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('services', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async saveApp(values:any):Promise<number> {\r\n        return await this.post('app-save', values);\r\n    }\r\n    async saveUq(values:any):Promise<number> {\r\n        return await this.post('uq-save', values);\r\n    }\r\n    async saveBus(values:any):Promise<number> {\r\n        return await this.post('bus-save', values);\r\n    }\r\n    async saveServer(values:any):Promise<number> {\r\n        return await this.post('server-save', values);\r\n    }\r\n    async saveUqdb(values:any):Promise<number> {\r\n        return await this.post('uqdb-save', values);\r\n    }\r\n    async saveService(values:any):Promise<number> {\r\n        return await this.post('service-save', values);\r\n    }\r\n    async delApp(unit:number,id:number):Promise<void> {\r\n        return await this.post('app-del', {unit:unit, id:id});\r\n    }\r\n    async delUq(unit:number,id:number):Promise<void> {\r\n        return await this.post('uq-del', {unit:unit, id:id});\r\n    }\r\n    async delBus(unit:number,id:number):Promise<void> {\r\n        return await this.post('bus-del', {unit:unit, id:id});\r\n    }\r\n    async delServer(unit:number,id:number):Promise<void> {\r\n        return await this.post('server-del', {unit:unit, id:id});\r\n    }\r\n    async delUqdb(unit:number,id:number):Promise<void> {\r\n        return await this.post('uqdb-del', {unit:unit, id:id});\r\n    }\r\n    async delService(unit:number,id:number):Promise<void> {\r\n        return await this.post('service-del', {unit:unit, id:id});\r\n    }\r\n    async loadAppUqs(app:number):Promise<any[]> {\r\n        return await this.get('app-uqs', {app: app});\r\n    }\r\n    async appBindUq(unit:number,app:number,uqs:{id:number, access:string[]}[]):Promise<void> {\r\n        let uqsText:string;\r\n        if (uqs !== undefined) {\r\n            uqsText = uqs.map(v => String(v.id)+'|'+v.access.join(',')).join(';');\r\n        }\r\n        await this.post('app-bind-uq', {unit:unit, app:app, uqs:uqsText});\r\n    }\r\n    async searchUq(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('uq-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async getMyUqs(unit:number):Promise<any[]> {\r\n        return await this.get('my-uqs', {unit:unit});\r\n    }\r\n    async searchApp(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('app-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async searchServer(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('server-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async searchUqdb(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('uqdb-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    //async loadAppServices(unit:number, app:number):Promise<any[]> {\r\n    //    return await this.get('app-services', {unit:unit, app:app});\r\n    //}\r\n    async loadUqServices(unit:number, uq:number):Promise<any[]> {\r\n        return await this.get('uq-services', {unit:unit, uq:uq});\r\n    }\r\n    async changeServiceProp(unit:number, service:number, prop:string, value:any):Promise<number> {\r\n        return await this.post('service-change-prop', {unit:unit, service:service, prop:prop, value:value});\r\n    }\r\n    async uqGetEntities(unit:number, uq:number):Promise<any[][]> {\r\n        return await this.get('uq-get-entities', {unit:unit, uq:uq});\r\n    }\r\n}\r\n\r\nexport const devApi = new DevApi('tv/dev/', undefined);\r\n","import {observable} from 'mobx';\r\nimport {UnitAdmin} from '../model';\r\nimport {mainApi} from '../api';\r\nimport {Store} from './index';\r\n\r\nexport class Admins {\r\n    private store:Store;\r\n    constructor(store:Store) {\r\n        this.store = store;\r\n    }\r\n\r\n    @observable cur: UnitAdmin = undefined;\r\n    @observable owners: UnitAdmin[] = undefined;\r\n    @observable admins: UnitAdmin[] = undefined;\r\n    @observable fellows: UnitAdmin[] = undefined;\r\n    \r\n    async load(): Promise<void> {\r\n        let unit = this.store.unit;\r\n        if (unit === undefined) return;\r\n        if (unit.id === undefined) return;\r\n        if (this.admins !== undefined) return;\r\n        let all = await mainApi.unitAdmins(unit.id);\r\n        let owners:UnitAdmin[] = [];\r\n        let admins:UnitAdmin[] = [];\r\n        let fellows:UnitAdmin[] = [];\r\n        all.forEach(ua => {\r\n            let {isOwner, isAdmin} = ua;\r\n            if (isOwner === 0 && isAdmin === 0)\r\n                fellows.push(ua);\r\n            else {\r\n                if (isOwner === 1) owners.push(ua);\r\n                if (isAdmin === 1) admins.push(ua);\r\n            }\r\n        });\r\n        this.owners = owners;\r\n        this.admins = admins;\r\n        this.fellows = fellows;\r\n    }\r\n\r\n    private removeCur(arr: UnitAdmin[]) {\r\n        let index = arr.findIndex(v => v.id===this.cur.id);\r\n        if (index >=0) arr.splice(index, 1);\r\n    }\r\n\r\n    async unitSetAdmin(isOwner:number, isAdmin:number) {\r\n        let cur = this.cur;\r\n        cur.isOwner = isOwner;\r\n        cur.isAdmin = isAdmin;\r\n        let fellowId = cur.id, unitId = this.store.unit.id;\r\n        await mainApi.unitSetAdmin(fellowId, unitId, isOwner, isAdmin);\r\n        this.removeCur(this.owners);\r\n        this.removeCur(this.admins);\r\n        this.removeCur(this.fellows);\r\n        if (isOwner === 0 && isAdmin === 0)\r\n            this.fellows.unshift(cur);\r\n        else {\r\n            if (isOwner === 1) this.owners.unshift(cur);\r\n            if (isAdmin === 1) this.admins.unshift(cur);\r\n        }\r\n    }\r\n\r\n    async addNew(user:string, isOwner:number, isAdmin:number):Promise<UnitAdmin> {\r\n        let admin = await mainApi.unitAddAdmin(user, this.store.unit.id, isOwner, isAdmin);\r\n        if (admin !== undefined) {\r\n            let cur = this.cur = admin;\r\n            this.removeCur(this.owners);\r\n            this.removeCur(this.admins);\r\n            this.removeCur(this.fellows);\r\n            if (isOwner === 0 && isAdmin === 0)\r\n                this.fellows.unshift(cur);\r\n            else {\r\n                if (isOwner === 1) this.owners.unshift(cur);\r\n                if (isAdmin === 1) this.admins.unshift(cur);\r\n            }\r\n        }\r\n        return admin;\r\n    }\r\n}\r\n","import {observable, autorun} from 'mobx';\r\nimport _ from 'lodash';\r\nimport {devApi} from '../api';\r\nimport {DevModel, Unit} from '../model';\r\nimport {Store} from './index';\r\n\r\ninterface Counts {\r\n    uq: number;\r\n    app: number;\r\n    bus: number;\r\n    server: number;\r\n    service: number;\r\n    //uqdb: number;\r\n}\r\n\r\nexport abstract class ObjItems<T extends DevModel.ObjBase> {\r\n    protected store:Store;\r\n    protected dev:Dev;\r\n    constructor(store:Store, dev:Dev) {\r\n        this.store = store;\r\n        this.dev = dev;\r\n    }\r\n\r\n    @observable items: T[] = undefined;\r\n    @observable cur: T = undefined;\r\n\r\n    async load():Promise<void> {\r\n         let ret = await this._load();\r\n         this.items = ret;\r\n    }\r\n    protected abstract _load():Promise<T[]>;\r\n    async saveCur(item:T):Promise<boolean> {\r\n        let values:any = {};\r\n        if (this.cur !== undefined) {\r\n            _.assign(values, this.cur, item);\r\n        }\r\n        else {\r\n            _.assign(values, item);\r\n        }\r\n\r\n        values.unit = item.unit = this.store.unit.id;\r\n        let id = await this._save(values);\r\n        if (this.cur === undefined) {\r\n            if (id === 0) return false;\r\n            values.id = id;\r\n            if (this.items !== undefined) this.items.unshift(values);\r\n            this._inc();\r\n            this.cur = observable(values);\r\n        }\r\n        else {\r\n            _.assign(this.cur, values);\r\n        }\r\n        return true;\r\n    }\r\n    async save(item:T):Promise<T> {\r\n        let values:any = {};\r\n        _.assign(values, item);\r\n\r\n        values.unit = item.unit = this.store.unit.id;\r\n        let id = await this._save(values);\r\n        if (id === 0) return;\r\n        values.id = id;\r\n        return values;\r\n    }\r\n    protected abstract _save(item:T):Promise<number>;\r\n    async del():Promise<void> {\r\n        let c = this.cur;\r\n        if (c === undefined) return;\r\n        let id = c.id;\r\n        await this._del(c);\r\n        if (this.items === undefined) return;\r\n        let index = this.items.findIndex(v => v.id === id);\r\n        if (index>=0) {\r\n            this.items.splice(index, 1);\r\n            this._dec();\r\n        }\r\n    }\r\n    protected abstract _del(item:T):Promise<void>;\r\n    protected abstract _inc();\r\n    protected abstract _dec();\r\n}\r\n\r\nclass Apps extends ObjItems<DevModel.App> {\r\n    @observable uqs: DevModel.UQ[] = undefined;\r\n    @observable searchedUqs: DevModel.UQ[] = undefined;\r\n    //@observable service: DevModel.Service = null;\r\n    protected async _load() {\r\n        return await devApi.apps(this.store.unit.id);\r\n    }\r\n    protected async _save(item:DevModel.App):Promise<number> {\r\n        return await devApi.saveApp(item);\r\n    }\r\n    protected async _del(item:DevModel.App):Promise<void> {\r\n        await devApi.delApp(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.app++; }\r\n    protected _dec() { this.dev.counts.app--; }\r\n\r\n    public async loadCurUqs() {\r\n        let ret = await devApi.loadAppUqs(this.cur.id);\r\n        this.uqs = ret;\r\n    }\r\n    public async searchUq(key:string) {\r\n        this.searchedUqs = await devApi.searchUq(this.store.unit.id, key, 0, searchPageSize);\r\n    }\r\n    public async appBindUq(uqs:{id:number, access:string[]}[], bind:boolean) {\r\n        let allUqs:{id:number, access:string[]}[] = this.uqs.map(v => {\r\n            let {id, access} = v;\r\n            return {id: id, access: [access]};\r\n        });\r\n        for (let uq of uqs) {\r\n            let index = allUqs.findIndex(v => v.id === uq.id);\r\n            if (bind === true) {\r\n                if (index < 0) allUqs.unshift(uq);\r\n            }\r\n            else {\r\n                allUqs.splice(index, 1);\r\n            }\r\n        }\r\n        await devApi.appBindUq(this.store.unit.id, this.cur.id, allUqs);\r\n        for (let uq of uqs) {\r\n            let index = this.uqs.findIndex(a => a.id === uq.id);\r\n            if (index>=0) this.uqs.splice(index, 1);\r\n            if (bind === true) {\r\n                if (this.searchedUqs !== undefined) {\r\n                    let find = this.searchedUqs.find(a => a.id === uq.id);\r\n                    if (find !== undefined) this.uqs.unshift(find);\r\n                }\r\n            }\r\n            else {\r\n                // 已经删除，不需要处理\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass Uqs extends ObjItems<DevModel.UQ> {\r\n    protected async _load() {\r\n        let ret = await devApi.uqs(this.store.unit.id);\r\n        return ret;\r\n    }\r\n    protected async _save(item:DevModel.UQ):Promise<number> {\r\n        //let {access} = item;\r\n        //if (!access) access = \"*\";\r\n        //let parts = access.split(',').map(v => v.trim()).filter(v => v!=='');\r\n        //item.access = parts.join(',');\r\n        return await devApi.saveUq(item);\r\n    }\r\n    protected async _del(item:DevModel.UQ):Promise<void> {\r\n        await devApi.delUq(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.uq++; }\r\n    protected _dec() { this.dev.counts.uq--; }\r\n}\r\n\r\nclass Buses extends ObjItems<DevModel.Bus> {\r\n    protected async _load() {\r\n        let ret = await devApi.buses(this.store.unit.id);\r\n        return ret;\r\n    }\r\n    protected async _save(item:DevModel.Bus):Promise<number> {\r\n        return await devApi.saveBus(item);\r\n    }\r\n    protected async _del(item:DevModel.Bus):Promise<void> {\r\n        await devApi.delBus(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.bus++; }\r\n    protected _dec() { this.dev.counts.bus--; }\r\n}\r\n\r\nclass Servers extends ObjItems<DevModel.Server> {\r\n    protected async _load() {\r\n        return await devApi.servers(this.store.unit.id);\r\n    }\r\n    protected async _save(item:DevModel.Server):Promise<number> {\r\n        return await devApi.saveServer(item);\r\n    }\r\n    protected async _del(item:DevModel.Server):Promise<void> {\r\n        await devApi.delServer(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.server++; }\r\n    protected _dec() { this.dev.counts.server--; }\r\n}\r\n/*\r\nclass Uqdbs extends ObjItems<DevModel.Uqdb> {\r\n    protected async _load() {\r\n        return await devApi.uqdbs(this.store.unit.id);\r\n    }\r\n    protected async _save(item:DevModel.Uqdb):Promise<number> {\r\n        return await devApi.saveUqdb(item);\r\n    }\r\n    protected async _del(item:DevModel.Uqdb):Promise<void> {\r\n        await devApi.delUqdb(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.uqdb++; }\r\n    protected _dec() { this.dev.counts.uqdb--; }\r\n}\r\n*/\r\nclass Services extends ObjItems<DevModel.Service> {\r\n    protected async _load() {\r\n        return await devApi.services(this.store.unit.id);\r\n    }\r\n    protected async _save(item:DevModel.Service):Promise<number> {\r\n        return await devApi.saveService(item);\r\n    }\r\n    protected async _del(item:DevModel.Service):Promise<void> {\r\n        await devApi.delService(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.service++; }\r\n    protected _dec() { this.dev.counts.service--; }\r\n    async changeProp(prop:string, value:any):Promise<number> {\r\n        let ret = await devApi.changeServiceProp(this.store.unit.id, this.cur.id, prop, value);\r\n        switch (prop) {\r\n            case 'url': this.cur.url = value; break;\r\n            case 'server': this.cur.server = value; break;\r\n            case 'db': this.cur.db = value; break;\r\n            case 'db_type': this.cur.db_type = value; break;\r\n            case 'connection': this.cur.connection = value; break;\r\n        }\r\n        return ret;\r\n    }\r\n    async loadUqServices(uq:number):Promise<void> {\r\n        let ret = await devApi.loadUqServices(this.store.unit.id, uq);\r\n        this.items = ret[0];\r\n    }\r\n}\r\n\r\nconst searchPageSize = 50;\r\ntype Search = (unit:number,key:string,pageStart:number,pageSize:number)=>Promise<any[]>;\r\nclass SearchItems<T extends DevModel.ObjBase> {\r\n    private store:Store;\r\n    private dev:Dev;\r\n    private search:(unit:number,key:string,pageStart:number,pageSize:number)=>Promise<any[]>;\r\n\r\n    constructor(store:Store, dev:Dev, search:Search) {\r\n        this.store = store;\r\n        this.dev = dev;\r\n        this.search = search;\r\n    }\r\n\r\n    @observable items: T[] = undefined;\r\n    allLoaded: boolean = false;\r\n    private key: string;\r\n    private pageStart = 0;\r\n\r\n    async first(key:string) {\r\n        this.key = key;\r\n        this.items = undefined;\r\n        this.allLoaded = false;\r\n        this.pageStart = 0;\r\n        await this.more();\r\n    }\r\n\r\n    async more():Promise<void> {\r\n        if (this.allLoaded === true) return;\r\n        let ret = await this.search(this.store.unit.id, this.key, this.pageStart, searchPageSize);\r\n        let len = ret.length;\r\n        if (len > searchPageSize) {\r\n            this.allLoaded = false;\r\n            --len;\r\n            ret.splice(len, 1);\r\n        }\r\n        else {\r\n            this.allLoaded = true;\r\n        }\r\n        if (len > 0) {\r\n            this.pageStart = ret[len-1].id;\r\n            if (this.items === undefined)\r\n                this.items = ret;\r\n            else\r\n                this.items.push(...ret);\r\n        }\r\n        else {\r\n            this.items = [];\r\n        }\r\n    }\r\n}\r\n\r\nexport class Dev {\r\n    private store:Store;\r\n    constructor(store:Store) {\r\n        this.store = store;\r\n        this.apps = new Apps(store, this);\r\n        this.uqs = new Uqs(store, this);\r\n        this.buses = new Buses(store, this);\r\n        this.servers = new Servers(store, this);\r\n        //this.uqdbs = new Uqdbs(store, this);\r\n        this.services = new Services(store, this);\r\n        this.searchApp = new SearchItems<DevModel.App>(store, this, devApi.searchApp.bind(devApi));\r\n        this.searchUq = new SearchItems<DevModel.UQ>(store, this, devApi.searchUq.bind(devApi));\r\n        this.searchServer = new SearchItems<DevModel.Server>(store, this, devApi.searchServer.bind(devApi));\r\n    }\r\n\r\n    @observable counts:Counts = undefined;\r\n    apps:Apps = undefined;\r\n    uqs:Uqs = undefined;\r\n    buses:Buses = undefined;\r\n    servers:Servers = undefined;\r\n    //uqdbs:Uqdbs = undefined;\r\n    services:Services = undefined;\r\n\r\n    searchApp:SearchItems<DevModel.App> = undefined;\r\n    searchUq:SearchItems<DevModel.UQ> = undefined;\r\n    searchServer:SearchItems<DevModel.Server> = undefined;\r\n    searchUqdb:SearchItems<DevModel.Uqdb> = undefined;\r\n    \r\n    async loadCounts(): Promise<void> {\r\n        let {unit} = this.store;\r\n        this.counts = await devApi.counts(unit.id);\r\n    }\r\n}\r\n","import {CacheIds} from 'tonva-tools';\r\nimport {Id, Unit, DevModel} from '../model';\r\nimport {mainApi, devApi} from '../api';\r\n\r\nexport class CacheUnits extends CacheIds<Unit> {\r\n    protected async _loadIds(ids:number[]):Promise<Unit[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<Unit> {\r\n        return await mainApi.unit(id);\r\n    }\r\n}\r\n\r\nexport class CacheUqs extends CacheIds<DevModel.UQ> {\r\n    protected async _loadIds(ids:number[]):Promise<DevModel.UQ[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<DevModel.UQ> {\r\n        return await devApi.uq(id);\r\n    }\r\n}\r\n\r\nexport class CacheApps extends CacheIds<DevModel.App> {\r\n    protected async _loadIds(ids:number[]):Promise<DevModel.App[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<DevModel.App> {\r\n        return await devApi.app(id);\r\n    }\r\n}\r\n\r\nexport class CacheServers extends CacheIds<DevModel.Server> {\r\n    protected async _loadIds(ids:number[]):Promise<DevModel.Server[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<DevModel.Server> {\r\n        return await devApi.server(id);\r\n    }\r\n}\r\n","import {observable, autorun} from 'mobx';\r\nimport _ from 'lodash';\r\n//import {appIcon, appItemIcon} from './consts';\r\nimport {meInFrame, host} from 'tonva-tools';\r\nimport {mainApi, devApi} from '../api';\r\nimport {Unit, UnitApps, App, Api, UnitAdmin, UnitApp, Role, RoleMember} from '../model';\r\nimport {Admins} from './admins';\r\nimport {Dev} from './dev';\r\nimport {CacheUnits, CacheUqs, CacheApps, CacheServers} from './cacheIds';\r\n\r\nexport class Store {\r\n    private get unitId():number {return meInFrame.unit;};\r\n    admins:Admins;\r\n    dev:Dev;\r\n    cacheUnits: CacheUnits;\r\n    cacheUqs: CacheUqs;\r\n    cacheApps: CacheApps;\r\n    cacheServers: CacheServers;\r\n    uqServer: string;\r\n\r\n    @observable unit: Unit;\r\n    @observable memberCount: number;\r\n    @observable apps: UnitApp[];\r\n    @observable role:Role;\r\n    @observable roles: Role[];\r\n    @observable roleApps: UnitApp[];\r\n    @observable roleMember: RoleMember;\r\n    @observable roleMembers: RoleMember[];\r\n    @observable memberRoles: Role[];\r\n\r\n    init() {\r\n        this.unit = undefined;\r\n        this.admins = new Admins(this);\r\n        this.dev = new Dev(this);\r\n        this.cacheUnits = new CacheUnits();\r\n        this.cacheUqs = new CacheUqs();\r\n        this.cacheApps = new CacheApps();\r\n        this.cacheServers = new CacheServers();\r\n    }\r\n\r\n    logout() {\r\n        //meInFrame.app = undefined;\r\n        meInFrame.hash = undefined;\r\n        //let unitId = process.env.REACT_APP_DEBUG_UNITID;\r\n        //if (unitId !== undefined)\r\n        //    meInFrame.unit = Number(unitId);\r\n        meInFrame.unit = undefined;\r\n        this.init();\r\n        this.memberCount = undefined;\r\n        this.apps = undefined;\r\n        this.role = undefined;\r\n        this.roles = undefined;\r\n        this.roleApps = undefined;\r\n        this.roleMember = undefined;\r\n        this.roleMembers = undefined;\r\n        this.memberRoles = undefined;\r\n    }\r\n\r\n    setRole(role:Role) {\r\n        if (this.role === role) return;\r\n        this.role = role;\r\n        this.roleApps = undefined;\r\n        this.roleMember = undefined;\r\n        this.roleMembers = undefined;\r\n        this.memberRoles = undefined;\r\n    }\r\n\r\n    setRoleUser(user:RoleMember) {\r\n        if (this.roleMember === user) return;\r\n        this.roleMember = user;\r\n        this.memberRoles = undefined;\r\n    }\r\n\r\n    async unitChangeProp(prop:string, value:any):Promise<void> {\r\n        await mainApi.unitChangeProp(this.unit.id, prop, value);\r\n        this.unit[prop] = value;\r\n    }\r\n\r\n    async loadApps(): Promise<void> {\r\n        if (this.apps !== undefined) return;\r\n        this.apps = await mainApi.unitApps(this.unitId);\r\n    }\r\n\r\n    async loadUnit(): Promise<void> {\r\n        if (this.unitId === undefined) return;\r\n        let ret = await mainApi.unit(this.unitId);\r\n        this.unit = ret;\r\n        console.log(\"loadUnit unit=%s\", ret);\r\n        this.memberCount = await mainApi.unitMemberCount(this.unitId);\r\n        let uqServer = await devApi.uqBuilderUrl();\r\n        let {url, urlDebug} = uqServer;\r\n        this.uqServer = host.getUrlOrDebug(url, urlDebug);\r\n        console.log(\"uq-build: %s\", JSON.stringify(this.uqServer));\r\n    }\r\n\r\n    async stopUnitApp(appId:number): Promise<void> {\r\n        await mainApi.unitDeleteApp(this.unit.id, appId, 1);\r\n        let app = this.apps.find(v => v.id === appId);\r\n        app.inUnit = 0;\r\n    }\r\n\r\n    async restoreUnitApp(appId:number): Promise<number> {\r\n        let ret = await mainApi.unitAddApp(this.unit.id, appId);\r\n        if (ret <= 0) return ret;\r\n        let app = this.apps.find(v => v.id === appId);\r\n        app.inUnit = 1;\r\n        return 1;\r\n    }\r\n\r\n    async addUnitApp(app:UnitApp): Promise<number> {\r\n        let ret = await mainApi.unitAddApp(this.unit.id, app.id);\r\n        if (ret <= 0) return ret;\r\n        this.apps.push(app);\r\n        return 1;\r\n    }\r\n\r\n    async loadRoles(): Promise<void> {\r\n        if (this.roles !== undefined) return;\r\n        let ret = await mainApi.unitRoles(this.unit.id);\r\n        ret.forEach(v => {\r\n            switch (v.id) {\r\n                case 1: \r\n                    v.name= '访客';\r\n                    v.discription = '可以获取开放信息';\r\n                    break;\r\n                case 2: \r\n                    v.name= '普通';\r\n                    v.discription = '能访问最基本的功能';\r\n                    break;\r\n            }\r\n        });\r\n        this.roles = ret;\r\n    }\r\n\r\n    async unitAddRole(name:string, discription:string): Promise<number> {\r\n        let id = await mainApi.unitAddRole(this.unit.id, name, discription);\r\n        if (id > 0) {\r\n            this.roles.push({\r\n                id: id,\r\n                name: name,\r\n                discription: discription,\r\n                count: undefined,\r\n            });\r\n        }\r\n        return id;\r\n    }\r\n\r\n    async roleChangeProp(prop:string, value:any):Promise<void> {\r\n        await mainApi.unitRoleChangeProp(this.unit.id, this.role.id, prop, value);\r\n        this.role[prop] = value;\r\n    }\r\n\r\n    async loadRoleApps():Promise<void> {\r\n        let ret = await mainApi.unitRoleApps(this.unit.id, this.role.id);\r\n        this.roleApps = ret.map(v => {\r\n            return this.apps.find(app=>app.id === v.id);\r\n        });\r\n    }\r\n\r\n    async setRoleApps(apps:UnitApp[]) {\r\n        await mainApi.unitRoleSetApps(this.unit.id, this.role.id, apps.map(v=>v.id));\r\n        this.roleApps = apps;\r\n    }\r\n\r\n    async loadMembers():Promise<void> {\r\n        let ret = await mainApi.unitMembers(this.unit.id, this.role === undefined? 0:this.role.id, undefined, 0, 100);\r\n        this.roleMembers = ret;\r\n    }\r\n\r\n    async unitAssignMember(assigned:string):Promise<void> {\r\n        await mainApi.unitAssignMember(this.unit.id, this.roleMember.id, assigned);\r\n        this.roleMember.assigned = assigned;\r\n    }\r\n\r\n    async loadMemberRoles():Promise<void> {\r\n        let ret = await mainApi.unitMemberRoles(this.unit.id, this.roleMember.id);\r\n        let roles:Role[] = ret.map(v => {\r\n            let rId = v.id;\r\n            let role = this.roles.find(r => r.id === rId);\r\n            return _.clone(role);\r\n        });\r\n        this.memberRoles = roles;\r\n    }\r\n\r\n    async setMemberRoles(memberRoles:Role[]) {\r\n        await mainApi.unitSetMemberRoles(this.unit.id, this.roleMember.id, memberRoles.map(v=>v.id));\r\n        this.roles.forEach(role => {\r\n            let rId = role.id;\r\n            let org = this.memberRoles.find(v => v.id === rId);\r\n            let cur = memberRoles.find(v => v.id === rId);\r\n            if (org !== undefined) {\r\n                if (cur !== undefined) return;\r\n                role.count--;\r\n                return;\r\n            }\r\n            if (cur === undefined) return;\r\n            role.count++;\r\n        });\r\n        this.memberRoles = memberRoles;\r\n    }\r\n};\r\n\r\nexport const store = new Store();\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\n\r\nexport function span(\r\n    isLink:boolean,\r\n    className:string, \r\n    onClick:(evt:React.MouseEventHandler<HTMLElement>)=>void,\r\n    content:any): JSX.Element\r\n{\r\n    let tag:string;\r\n    let props:any;\r\n    if (isLink === true) {\r\n        tag = 'a';\r\n        props = {\r\n            className: classNames(className, 'cursor-pointer'),\r\n            onClick: onClick,\r\n            href: '#',\r\n        }\r\n    }\r\n    else {\r\n        tag = 'span';\r\n        props = {\r\n            className: className,\r\n        }\r\n    }\r\n    return React.createElement(tag, props, content);\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport * as classNames from 'classnames';\r\nimport {Prop, ListProp, Media, PropGrid} from 'tonva-react-form';\r\nimport {nav, Page}  from 'tonva-tools';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {store} from '../store';\r\nimport {Unit, DevModel} from '../model';\r\nimport {devApi} from '../api';\r\nimport {span} from './span';\r\n\r\nexport interface UnitLinkProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class UnitSpan extends React.Component<UnitLinkProps> {\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<UnitInfo id={this.props.id} />);\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        if (id === undefined) return null;\r\n        let unit = store.cacheUnits.get(id);\r\n        let content;\r\n        let {name, nick, discription} = unit;\r\n        let disc = discription && '- ' + discription;\r\n        if (nick) {\r\n            content = <>{nick} &nbsp; <small className=\"text-muted\">{name} {disc}</small></>;\r\n        }\r\n        else if (name) {\r\n            content = <>{name} &nbsp; <small className=\"text-muted\">{disc}</small></>;\r\n        }\r\n        else {\r\n            content = id;\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\n@observer\r\nexport class UnitName extends React.Component<UnitLinkProps> {\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        if (id === undefined) return null;\r\n        let unit = store.cacheUnits.get(id);\r\n        let {name} = unit;\r\n        return <>{name}</>;\r\n    }\r\n}\r\n\r\nclass UnitInfo extends React.Component<UnitLinkProps> {\r\n    private rows:Prop[];\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        let unit = store.cacheUnits.get(this.props.id);\r\n        let {name, nick, icon, discription} = unit;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={icon || appIcon} main={name} discription={discription} />},\r\n            '',\r\n        ];\r\n        return <Page header={'小号 - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport * as classNames from 'classnames';\r\nimport {Prop, Media, PropGrid} from 'tonva-react-form';\r\nimport {nav, Page}  from 'tonva-tools';\r\nimport {appIcon, appItemIcon} from 'consts';\r\nimport {store} from 'store';\r\nimport {DevModel} from 'model';\r\nimport {IdDates} from './idDates';\r\nimport {span} from './span';\r\nimport {UnitSpan} from './unitSpan';\r\n\r\nexport interface UqLinkProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class UqSpan extends React.Component<UqLinkProps> {\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<UqInfo id={this.props.id} />);\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, className, isLink} = this.props;\r\n        let api = store.cacheUqs.get(id);\r\n        let content;\r\n        if (api === null) {\r\n            content = id;\r\n        }\r\n        else {\r\n            let {name, discription} = api;\r\n            let disc = discription && '- ' + discription;\r\n            if (name !== undefined) {\r\n                content = <React.Fragment>{name} &nbsp; <small className=\"text-muted\">{disc}</small></React.Fragment>;\r\n            }\r\n            else {\r\n                content = id;\r\n            }\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\n@observer\r\nclass UqInfo extends React.Component<UqLinkProps> {\r\n    private rows:Prop[];\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        let uq = store.cacheUqs.get(this.props.id);\r\n        let {name, discription, unit, date_init, date_update} = uq;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={name} discription={disp} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n        ];\r\n        return <Page header={'UQ - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport * as classNames from 'classnames';\r\nimport {Prop, ListProp, Media, PropGrid} from 'tonva-react-form';\r\nimport {nav, Page}  from 'tonva-tools';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {store} from '../store';\r\nimport {DevModel} from '../model';\r\nimport {devApi} from '../api';\r\nimport {span} from './span';\r\nimport {IdDates} from './idDates';\r\nimport {UnitSpan} from './unitSpan';\r\n\r\nexport interface AppSpanProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class AppSpan extends React.Component<AppSpanProps> {\r\n    /*\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.onClick = this.onClick.bind(this);\r\n    }\r\n    componentWillMount() {\r\n        let {id} = this.props;\r\n        store.cacheApps.get(id);\r\n    }\r\n    */\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<AppInfo id={this.props.id} />)\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        let app = store.cacheApps.get(id);\r\n        let content;\r\n        if (app === null) {\r\n            content = id;\r\n        }\r\n        else {\r\n            let {name, icon, discription} = app;\r\n            let isPublic = app.public;\r\n            let disc = discription && '- ' + discription;\r\n            if (name !== undefined) {\r\n                content = <React.Fragment>{name} &nbsp; <small className=\"text-muted\">{disc}</small></React.Fragment>;\r\n            }\r\n            else {\r\n                content = id;\r\n            }\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\n\r\n@observer\r\nclass AppInfo extends React.Component<AppSpanProps> {\r\n    private rows:Prop[];\r\n    @observable private apis:ListProp = {\r\n        label: '关联API', type: 'list', list: undefined, row: AppRow\r\n    };\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    async componentDidMount() {\r\n        this.apis.list = await devApi.loadAppUqs(this.props.id);\r\n    }\r\n    render() {\r\n        let app = store.cacheApps.get(this.props.id);\r\n        let {unit, name, discription, icon, date_init, date_update} = app;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={icon || appIcon} main={name} discription={disp} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            this.apis,\r\n        ];\r\n        return <Page header={'APP - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass AppRow extends React.Component<any> {\r\n    render() {\r\n        let {name, discription} = this.props;\r\n        let disp;\r\n        if (discription) disp = <div className=\"small text-muted\">{discription}</div>;\r\n        return <div className='form-control-plaintext'>\r\n            <div>{name}</div>\r\n            {disp}\r\n        </div>\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport * as classNames from 'classnames';\r\nimport {Prop, ListProp, Media, PropGrid} from 'tonva-react-form';\r\nimport {nav, Page}  from 'tonva-tools';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {store} from '../store';\r\nimport {DevModel} from '../model';\r\nimport {devApi} from '../api';\r\nimport {span} from './span';\r\nimport {IdDates} from './idDates';\r\nimport {UnitSpan} from './unitSpan';\r\n\r\nexport interface ServerSpanProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class ServerSpan extends React.Component<ServerSpanProps> {\r\n    /*\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.onClick = this.onClick.bind(this);\r\n    }\r\n    componentWillMount() {\r\n        let {id} = this.props;\r\n        store.cacheServers.get(id);\r\n    }\r\n    */\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<ServerInfo id={this.props.id} />)\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        let server = store.cacheServers.get(id);\r\n        let content;\r\n        if (server === null) {\r\n            content = id;\r\n        }\r\n        else {\r\n            let {cloud, ip, discription} = server;\r\n            if (discription !== undefined) {\r\n                content = <React.Fragment>{discription} &nbsp; <small className=\"text-muted\">{ip}</small></React.Fragment>;\r\n            }\r\n            else {\r\n                content = id;\r\n            }\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\nclass ServerInfo extends React.Component<ServerSpanProps> {\r\n    private rows:Prop[];\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        let server = store.cacheServers.get(this.props.id);\r\n        let {discription, cloud, ip, unit, date_init, date_update} = server;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={discription} discription={ip} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            {type: 'string', label: '云服务', name: 'cloud'},\r\n        ];\r\n        return <Page header={'服务器 - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {nav, Page} from 'tonva-tools';\r\n\r\ninterface StringValueEditProps {\r\n    title: string;\r\n    onChanged:(value:any, orgValue:any)=>Promise<string|void>;\r\n    value?: any;\r\n    buttonText?: string;\r\n    info?: string;\r\n}\r\ninterface StringValueEditState {\r\n    disabled: boolean;\r\n    error?: string;\r\n}\r\n\r\nexport class StringValueEdit extends React.Component<StringValueEditProps, StringValueEditState> {\r\n    //private input:HTMLInputElement;\r\n    protected value: string;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            disabled: true,\r\n        };\r\n    }\r\n    /*\r\n    private ref = (input:HTMLInputElement) => {\r\n        if (!input) return;\r\n        input.value = this.props.value || '';\r\n        this.input = input;\r\n    }*/\r\n    private onChange = (evt:React.FormEvent<HTMLInputElement>) => {\r\n        let val = this.props.value;\r\n        let org = val && val.trim();\r\n        this.value = evt.currentTarget.value.trim();\r\n        this.setState({\r\n            disabled: org === this.value\r\n        });\r\n        \r\n    }\r\n    protected onSubmit = async () => {\r\n        let val = this.props.value;\r\n        let org = val && val.trim();\r\n        let v = this.value; // this.input.value.trim();\r\n        let onChanged = this.props.onChanged;\r\n        if (onChanged !== undefined) {\r\n            let ret = await onChanged(v, org);\r\n            if (typeof ret === 'string') {\r\n                this.setState({error: ret});\r\n                return;\r\n            }\r\n            nav.pop();\r\n        }\r\n    }\r\n    protected renderControl() {\r\n        return <input className=\"form-control w-100\" type=\"text\"\r\n            // ref={this.ref}\r\n            defaultValue={this.props.value}\r\n            onChange={this.onChange} />\r\n    }\r\n    render() {\r\n        let {title, onChanged, buttonText, info, value} = this.props;\r\n        let {disabled, error} = this.state;\r\n        let right = <button\r\n            className=\"btn btn-success btn-sm\"\r\n            disabled={disabled}\r\n            onClick={this.onSubmit}\r\n        >\r\n            {buttonText||'保存'}\r\n        </button>;\r\n        let errorDiv;\r\n        if (error !== undefined) errorDiv = <div className='text-danger'>{error}</div>;\r\n        return <Page header={title} right={right}>\r\n            <div className=\"my-4 mx-3\">\r\n                {this.renderControl()}\r\n                {errorDiv}\r\n                <small className=\"d-block mt-2 text-muted\">{info}</small>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n\r\nexport class TextValueEdit extends StringValueEdit {\r\n    /*\r\n    private textArea:HTMLTextAreaElement;\r\n    private refTextArea = (textArea:HTMLTextAreaElement) => {\r\n        if (!textArea) return;\r\n        textArea.value = this.props.value || '';\r\n        this.textArea = textArea;\r\n    }\r\n    */\r\n    private onTextAreaChange = (evt:React.FormEvent<HTMLTextAreaElement>) => {\r\n        let val = this.props.value;\r\n        let org = val && val.trim();\r\n        this.value = evt.currentTarget.value.trim();\r\n        this.setState({\r\n            disabled: org === this.value\r\n        })\r\n    }\r\n    protected renderControl() {\r\n        return <textarea className=\"form-control w-100\" rows={8}\r\n            // ref={this.refTextArea}\r\n            defaultValue={this.props.value}\r\n            onChange={this.onTextAreaChange} />\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page, Context, Form, Schema, UiSchema, UiTextItem} from 'tonva-tools';\r\nimport {store} from '../store';\r\n\r\n@observer\r\nexport default class NewFellowPage extends React.Component<{isOwner:boolean, isAdmin:boolean}> {\r\n    //private form: TonvaForm;\r\n    private schema: Schema = [\r\n        {name:'user', type:'string', required:true},\r\n        {name:'submit', type:'submit'}\r\n    ]\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            user: {widget:'text', maxLength: 100, placeholder: '用户名', label: '邀请成员'} as UiTextItem,\r\n            submit: {widget:'button', label: '邀请'}\r\n        }\r\n    }\r\n    /*\r\n    private formRows:FormRow[] = [\r\n        {\r\n            label: '用户名',\r\n            field: {\r\n                type: 'string',\r\n                name: 'user',\r\n                required: true,\r\n                maxLength: 100,\r\n            },\r\n            face: {\r\n                type: 'string',\r\n                placeholder: '用户名',\r\n            }\r\n        },\r\n    ];\r\n    private schema:FormSchema = new FormSchema({\r\n        fields: [\r\n            {\r\n                type: 'string',\r\n                name: 'user',\r\n                placeholder: '用户名',\r\n                label: '邀请成员',\r\n                rules: ['required', 'maxlength:100']\r\n            },\r\n        ],\r\n        onSumit: this.onSendInvitation,\r\n        submitText: '邀请'\r\n    });\r\n    */\r\n    private onSendInvitation = async (name:string, context:Context): Promise<string> => {\r\n        let {isOwner, isAdmin} = this.props;\r\n        let user = context.form.data['user'];\r\n        let ret = await store.admins.addNew(user, isOwner?1:0, isAdmin?1:0);\r\n        if (ret !== undefined) {\r\n            nav.pop();\r\n            return;\r\n        }\r\n        return user + '没有关注小号';\r\n        /*\r\n        let msg = {a: 1, b: 'ddd'};\r\n        let toName = values['user'];\r\n        let userId = await mainApi.userId(toName);\r\n        if (userId === 0) {\r\n            this.form.formView.setError('user', '\\'' + toName +  '\\' 不存在');\r\n            return;\r\n        }\r\n        await mainApi.sendMessage(userId, 'unit-follow-invite', msg);\r\n        nav.replace(<Page header='完成' back=\"close\">\r\n            <Card>\r\n                <CardBody>\r\n                    <CardTitle>邀请成员</CardTitle>\r\n                    <CardText>已发送给{toName}，请等待确认。</CardText>\r\n                    <Button color='primary' onClick={()=>nav.back()}>完成</Button>\r\n                </CardBody>\r\n            </Card>\r\n        </Page>);\r\n        */\r\n    }\r\n    render() {\r\n        let {isOwner, isAdmin} = this.props;\r\n        let caption = isOwner? \"高管\" : \"管理员\";\r\n        return <Page header={'新增' + caption}>\r\n            <div className=\"container\">\r\n                <div className='my-4 text-info'>\r\n                    只有关注本小号的用户，才能成为{caption}\r\n                </div>\r\n                <Form schema={this.schema} uiSchema={this.uiSchema} onButtonClick={this.onSendInvitation}/>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n// <ValidForm formSchema={this.schema} />\r\n//<TonvaForm ref={f=>this.form=f} formRows={this.formRows} onSubmit={this.onSendInvitation} />\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page, Schema, UiSchema, ItemSchema, UiCheckItem, UiButton, ButtonSchema, Form, Context} from 'tonva-tools';\r\nimport {store} from '../store';\r\nimport { UnitAdmin } from '../model/index';\r\n//import {mainApi} from '../api';\r\n//, ValidForm, FormSchema, FormFields, Field\r\n\r\n@observer\r\nexport default class EditAdmin extends React.Component {\r\n    private schema:Schema;\r\n    private uiSchema: UiSchema;\r\n\r\n    private async onSubmit(name:string, context:Context) {\r\n        let {isOwner, isAdmin} = context.form.data;\r\n        await store.admins.unitSetAdmin(isOwner, isAdmin);\r\n        nav.pop();\r\n    }\r\n    componentWillMount() {\r\n        let {unit} = store;\r\n        let {isRoot, isOwner, isAdmin} = unit;\r\n        let unitAdmin = store.admins.cur;\r\n        let owner:ItemSchema = {name: 'isOwner', type: 'boolean'};\r\n        let admin:ItemSchema = {name: 'isAdmin', type: 'boolean'};\r\n        let submit:ButtonSchema = {name: 'submit', type: 'submit'};\r\n        if (isRoot === 1) this.schema = [owner, admin, submit];\r\n        else if (isOwner === 1) this.schema = [admin, submit];\r\n\r\n        this.uiSchema = {\r\n            items: {\r\n                'isOwner': {widget: 'checkbox', label: '高管', trueValue:1, falseValue:0} as UiCheckItem,\r\n                'isAdmin': {widget: 'checkbox', label: '管理员', trueValue:1, falseValue:0} as UiCheckItem,\r\n                'submit': {widget: 'button', label: '提交'} as UiButton,\r\n            }\r\n        };\r\n        /*\r\n        let fields: Field[] = [];\r\n        let ownerField: Field = {\r\n            type: 'checkbox',\r\n            name: 'isOwner',\r\n            label: '高管',\r\n            defaultValue: unitAdmin.isOwner,\r\n        };\r\n        let adminField: Field = {\r\n            type: 'checkbox',\r\n            name: 'isAdmin',\r\n            label: '管理员',\r\n            defaultValue: unitAdmin.isAdmin,\r\n        };\r\n        if (isRoot === 1) {\r\n            fields.push(ownerField);\r\n            fields.push(adminField);\r\n        }\r\n        else if (isOwner === 1) {\r\n            fields.push(adminField);\r\n        }        \r\n        this.schema = new FormSchema({\r\n            fields: fields,\r\n            onSumit: this.onSubmit.bind(this),\r\n            submitText: '提交'\r\n        });\r\n        */\r\n    }\r\n    render() {\r\n        return <Page header='权限'>\r\n            <Fellow {...store.admins.cur} />\r\n            <Form schema={this.schema} uiSchema={this.uiSchema} onButtonClick={this.onSubmit} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nconst Fellow = (props:UnitAdmin) => {\r\n    let {name, nick, icon} = props;\r\n    return <div className=\"container\">\r\n        <div className='row my-4'>\r\n            <div className=\"col-xs-2 d-flex justify-content-end align-items-start\">\r\n                <img className='w-75' src={icon || process.env.REACT_APP_DEFAULT_ICON} />\r\n            </div>\r\n            <div className=\"col-xs-auto\">\r\n                <h4 className='text-dark'>{name}</h4>\r\n                <h6><small className='text-secondary'>{nick}</small></h6>\r\n                <div className='text-info'>设置成员权限</div>\r\n            </div>\r\n        </div>\r\n        <hr className='mb-4' />\r\n    </div>;\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {UnitApps, UnitAdmin} from '../model';\r\nimport {store} from '../store';\r\nimport NewFellow from './NewFellow';\r\nimport EditAdmin from './EditAdmin';\r\nimport {LMR, Badge, List} from 'tonva-react-form';\r\n\r\n@observer\r\nexport default class AdministorsPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.admins.load();\r\n    }\r\n\r\n    onNewFellow() {\r\n        //nav.push(<NewFellow />);\r\n    }\r\n    onItemClick(ua:UnitAdmin) {\r\n        store.admins.cur = ua;\r\n        nav.push(<EditAdmin />);\r\n    }\r\n    private row = ({icon, name, nick}:UnitAdmin) => {\r\n        let content;\r\n        if (nick === undefined) {\r\n            content = <b>{name}</b>;\r\n        }\r\n        else {\r\n            content = <><b>{nick}</b> &nbsp; <small className=\"text-muted\">{name}</small></>;\r\n        }\r\n        return <LMR className=\"py-2 px-3 align-items-stretch\"\r\n            left={<Badge size=\"sm\"><img src={icon|| appItemIcon} /></Badge>}>\r\n            <div className=\"px-3\">{content}</div>\r\n        </LMR>;\r\n    }\r\n\r\n    private onNewOwner = (evt: React.MouseEvent<HTMLAnchorElement>) => {\r\n        this.newAdmin(evt, true, false);\r\n    }\r\n\r\n    private onNewAdmin = (evt: React.MouseEvent<HTMLAnchorElement>) => {\r\n        this.newAdmin(evt, false, true);\r\n    }\r\n\r\n    private newAdmin(evt: React.MouseEvent<HTMLAnchorElement>, isOwner:boolean, isAdmin:boolean) {\r\n        evt.preventDefault();\r\n        nav.push(<NewFellow isOwner={isOwner} isAdmin={isAdmin} />);\r\n    } \r\n    render() {\r\n        //let n = nav;\r\n        //let me = n.local.user.get().id;\r\n        let {unit} = store;\r\n        if (unit === undefined) return;\r\n        let {owners, admins, fellows} = store.admins;\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.onNewFellow}>新增成员</button>;\r\n\r\n        let showOwners = false, showAdmins = false;\r\n        let ownersView, adminsView, fellowsView;\r\n        if (unit.isRoot === 1) {\r\n            showOwners = true;\r\n            showAdmins = true;\r\n        }\r\n        if (unit.isOwner === 1) showAdmins = true;\r\n        if (showOwners === true) {\r\n            let header = <LMR \r\n                className=\"px-3 small\"\r\n                left=\"高管\" \r\n                right={<a className=\"small\" href='#' onClick={this.onNewOwner}>新增</a>} />;\r\n            ownersView = <List \r\n                className=\"my-4\"\r\n                header={header} items={owners}\r\n                none=\"[无]\"\r\n                item={{onClick: this.onItemClick, render: this.row}}\r\n            />;\r\n        }\r\n        if (showAdmins === true) {\r\n            let header = <LMR \r\n                className=\"px-3 small\"\r\n                left=\"管理员\" \r\n                right={<a className=\"small\" href='#' onClick={this.onNewAdmin}>新增</a>} />;\r\n            adminsView = <List \r\n                className='my-4' \r\n                header={header} items={admins} \r\n                none='[无]'\r\n                item={{onClick: this.onItemClick, render: this.row}}\r\n            />;\r\n        }\r\n        return <Page header=\"管理员\" right={right}>\r\n            {ownersView}\r\n            {adminsView}\r\n            <div className=\"card mx-1 my-4\">\r\n                <div className=\"card-title\">说明</div>\r\n                <div className=\"card-body\">\r\n                    <ul style={{paddingLeft:'1em'}}>\r\n                        <li><div className=\"card-text\">管理组包括主人、高管、管理员</div></li>\r\n                        <li><div className=\"card-text\">小号主人可以增减高管</div></li>\r\n                        <li><div className=\"card-text\">高管可以增减管理员</div></li>\r\n                        <li><div className=\"card-text\">管理员可以管理小号，程序的开发，以及用户</div></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport {SearchBox, Media, List, LMR, Badge, Prop, PropGrid, FA} from 'tonva-react-form';\r\nimport {nav, Page, PageItems} from 'tonva-tools';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {IdDates, UnitSpan} from '../tools';\r\nimport {UnitApp, DevModel} from '../model';\r\nimport {store} from '../store';\r\nimport { devApi } from 'api';\r\n\r\n@observer\r\nexport class Info extends React.Component<{app:UnitApp, appActed?:(appId:number, inUnit:number)=>void}> {\r\n    @observable private uqAccesses: any[];\r\n    async componentWillMount() {\r\n        this.uqAccesses = await devApi.loadAppUqs(this.props.app.id);\r\n    }\r\n\r\n    private renderUqRow = (uqAccess:any, index:number):JSX.Element => {\r\n        let {name, owner, unit, discription} = uqAccess;\r\n        return <LMR className=\"py-2\" right={<small className=\"text-muted\">{discription}</small>}>\r\n            {owner} / {name}\r\n        </LMR>;\r\n    }\r\n\r\n    private act = async () => {\r\n        let {app, appActed} = this.props;\r\n        let {id, unit, inUnit} = app;\r\n        let newInUnit:number = 1;\r\n        if (inUnit === 0) {\r\n            let ret = await store.restoreUnitApp(id);\r\n            if (ret <= 0) alert('app 或者 uq 没有定义 service');\r\n        }\r\n        else if (inUnit === 1) {\r\n            await store.stopUnitApp(id);\r\n            newInUnit = 0;\r\n        }\r\n        else {\r\n            let newApp:UnitApp = _.clone(app);\r\n            newApp.id = id;\r\n            newApp.inUnit = 1;\r\n            let ret = await store.addUnitApp(newApp);\r\n            if (ret <= 0) alert('app 或者 uq 没有定义 service');\r\n        }\r\n        if (appActed !== undefined) {\r\n            appActed(id, newInUnit);\r\n        }\r\n        nav.pop();\r\n    }\r\n    render() {\r\n        let {unit, name, discription, icon, inUnit, date_init, date_update} = this.props.app;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let faName:string, text:string, color:string;\r\n        if (inUnit === 1) {\r\n            faName = 'ban';\r\n            text = '停用APP';\r\n            color = 'btn-danger';\r\n        }\r\n        else if (inUnit === 0) {\r\n            faName = 'refresh';\r\n            text = '恢复APP';\r\n            color = 'btn-success';\r\n        }\r\n        else {\r\n            faName = 'plus';\r\n            text = '启用APP';\r\n            color = 'btn-primary';\r\n        }\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <Media icon={icon || appIcon} main={name} discription={disp} />\r\n            },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                label: '开发号', \r\n                component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div>\r\n            },\r\n            {\r\n                type: 'component', \r\n                label: '关联UQ', \r\n                component: <List className=\"w-100\" items={this.uqAccesses} item={{render: this.renderUqRow}} />\r\n            },\r\n            '',\r\n            '',\r\n            {\r\n                type: 'component', \r\n                bk: '', \r\n                component: <button className={classNames('btn', 'w-100', color)} onClick={this.act}>\r\n                    <FA name={faName} size=\"lg\" /> {text}\r\n                </button>\r\n            },\r\n        ];\r\n        return <div>\r\n            <PropGrid rows={rows} values={this.props} />\r\n        </div>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {IObservableArray} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport {SearchBox, Media, List, LMR, Badge, Prop, PropGrid} from 'tonva-react-form';\r\nimport {nav, Page, PageItems} from 'tonva-tools';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {IdDates, UnitSpan} from '../tools';\r\nimport {mainApi} from '../api';\r\nimport {store} from '../store';\r\nimport {UnitApp} from '../model';\r\nimport {Info} from './info';\r\n\r\nclass PageApps extends PageItems<UnitApp> {\r\n    private unitId:number;\r\n    constructor(unitId:number) {\r\n        super();\r\n        this.unitId = unitId;\r\n    }\r\n    protected async load():Promise<UnitApp[]> {\r\n        return await mainApi.searchApp(this.unitId, this.param, this.pageStart, this.pageSize);\r\n    }\r\n    protected setPageStart(item:UnitApp) {\r\n        if (item === undefined)\r\n            this.pageStart = 0;\r\n        else\r\n            this.pageStart = item.id;\r\n    }\r\n}\r\n\r\n@observer\r\nexport class NewApp extends React.Component {\r\n    private apps: PageApps;\r\n    constructor(props) {\r\n        super(props);\r\n        this.apps = new PageApps(store.unit.id);\r\n    }\r\n    private onSearch = async (key:string) => {\r\n        await this.apps.first(key);\r\n    }\r\n    private appClick = (app:UnitApp) => {\r\n        nav.push(<Page header=\"App详细信息\">\r\n            <Info app={app} appActed={this.appActed}/>\r\n        </Page>);\r\n    }\r\n    private appActed = (appId:number, inUnit:number) => {\r\n        let apps = this.apps.items as IObservableArray<UnitApp>; //.replace .find(v => v.id === appId);\r\n        let app = apps.find(v => v.id === appId);\r\n        app.inUnit = inUnit;\r\n        apps.replace([app]);\r\n    }\r\n    private renderApp(app:UnitApp):JSX.Element {\r\n        let {name, discription, icon, inUnit} = app;\r\n        let right;\r\n        if (inUnit === 1)\r\n            right = <small>已启用</small>;\r\n        else if (inUnit === 0)\r\n            right = <small>已停用</small>;\r\n        return <LMR className=\"px-3 py-2\"\r\n            left={<Badge><img src={icon || appIcon} /></Badge>}\r\n            right={right}>\r\n            <div className=\"px-3\">\r\n                <div>{name}</div>\r\n                <small className=\"text-muted\">{discription}</small>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n    render() {\r\n        let items = this.apps.items;\r\n        let center = <SearchBox onSearch={this.onSearch} \r\n            className=\"w-100 mx-1\" \r\n            placeholder=\"搜索App\" \r\n            maxLength={100} />;\r\n        return <Page header={center}>\r\n            <List\r\n                items={items}\r\n                item={{onClick:this.appClick, render:this.renderApp}}\r\n                before=\"搜索App名字\" />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, FA, SubmitResult, LMR, Badge} from 'tonva-react-form';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {store} from '../store';\r\nimport {NewApp} from './new';\r\nimport {UnitApp} from '../model';\r\nimport {Info} from './info';\r\n\r\n@observer\r\nexport default class AppsPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadApps();\r\n    }\r\n    private itemRender(app:UnitApp, index:number) {\r\n        let {name, discription, icon, inUnit} = app;\r\n        let ban;\r\n        if (inUnit === 0)\r\n            ban = <FA className=\"text-danger\" name='ban' />;\r\n        return <LMR className=\"px-3 py-1\"\r\n            left={<Badge><img src={icon || appIcon} /></Badge>}\r\n            right={ban}>\r\n            <div className=\"px-3\">\r\n                <div>{name}</div>\r\n                <small className=\"text-muted\">{discription}</small>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n    private appClick(app:UnitApp) {\r\n        nav.push(<Page header=\"App详细信息\">\r\n            <Info app={app} />\r\n        </Page>);\r\n    }\r\n    private newItem() {\r\n        nav.push(<NewApp {...this.props} />);\r\n    }\r\n    render() {\r\n        let right = <button \r\n            className='btn btn-secondary btn-sm' \r\n            onClick={()=>this.newItem()}><FA name=\"plus\" /></button>;\r\n        return <Page header=\"启停App\" right={right}>\r\n            <List items={store.apps} item={{render: this.itemRender, onClick: this.appClick}} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {List, LMR, FA, TonvaForm, SubmitResult, FormRow} from 'tonva-react-form';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {Role} from '../model';\r\nimport {store} from '../store';\r\n\r\nexport class NewRole extends React.Component {\r\n    private form:TonvaForm;\r\n    private formRows:FormRow[] = [\r\n        {\r\n            label: '名称', \r\n            field: {name: 'name', type: 'string', maxLength: 50, required: true},\r\n        },\r\n        {\r\n            label: '描述',\r\n            field: {name: 'discription', type: 'string', maxLength: 250},\r\n            face: {type: 'textarea'}\r\n        },\r\n    ];\r\n    private async onSubmit(values:any):Promise<SubmitResult> {\r\n        let {name, discription} = values;\r\n        let id = await store.unitAddRole(name, discription);\r\n        if (id <= 0) {\r\n            this.form.formView.setError('name', '角色名 ' + name + ' 已经存在');\r\n            return;\r\n        }\r\n        nav.pop();\r\n        return;\r\n    }\r\n    render() {\r\n        return <Page header=\"新建角色\">\r\n            <TonvaForm className=\"m-3\" ref={tf => this.form = tf} \r\n                formRows={this.formRows} \r\n                onSubmit={this.onSubmit} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, Media, LMR, FA, TonvaForm, SubmitResult, FormRow, \r\n    PropGrid, Prop, Badge, StackedFA} from 'tonva-react-form';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {StringValueEdit} from '../tools';\r\nimport {Role, UnitApp} from '../model';\r\nimport {store} from '../store';\r\nimport {mainApi} from '../api';\r\n\r\ninterface Props {\r\n    role: Role;\r\n}\r\ninterface State {\r\n    apps: UnitApp[]\r\n}\r\nexport class RoleApps extends React.Component<Props, State> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {apps:undefined};\r\n    }\r\n    async componentDidMount() {\r\n        let ret = await mainApi.unitRoleApps(store.unit.id, this.props.role.id);\r\n        this.setState({\r\n            apps: ret,\r\n        });\r\n    }\r\n    private renderRoleApp(app:UnitApp, index:number) {\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={app.name}\r\n                right={<small className=\"text-muted\">{app.discription}</small>} />\r\n    }\r\n    render() {\r\n        let {role} = this.props;\r\n        return <Page header={role.name + ' - 可用APP'}>\r\n            <List\r\n                items={this.state.apps}\r\n                item={{render: this.renderRoleApp}}\r\n                none=\"没有APP\" />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, LMR, FA, TonvaForm, SubmitResult, FormRow, Media, Muted, PropGrid, Prop} from 'tonva-react-form';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {Role} from '../model';\r\nimport {store} from '../store';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {StringValueEdit} from '../tools';\r\nimport {RoleApps} from './roleApps';\r\n\r\n@observer\r\nexport class MemberPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadRoles();\r\n        await store.loadMemberRoles();\r\n    }\r\n    async onAssigned(value:any, orgValue:any):Promise<void> {\r\n        await store.unitAssignMember(value);\r\n    }\r\n    private renderMemberRole = (role:Role) => {\r\n        let {name, discription} = role;\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={name}\r\n                right={<Muted>{discription}</Muted>} />\r\n    }\r\n    private roleClick(role:Role) {\r\n        nav.push(<RoleApps role={role} />);\r\n    }\r\n    private setRole = () => {\r\n        nav.push(<SetRole />);\r\n    }\r\n    render() {\r\n        let roleUser = store.roleMember;\r\n        let {nick, name, assigned, icon} = roleUser;\r\n        let disp = <div>\r\n            <div><Muted>唯一名: </Muted> &nbsp; {name}</div>\r\n            <div><Muted>昵称: </Muted> &nbsp; {nick||<Muted>[无]</Muted>}</div>\r\n        </div>;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component',\r\n                component: <Media icon={icon||appIcon} main={roleUser.assigned||nick||name} discription={disp} />\r\n            },\r\n            '',\r\n            {\r\n                label: '备注名',\r\n                type: 'string',\r\n                name: 'assigned',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"修改备注名\"\r\n                    value={roleUser.assigned}\r\n                    onChanged={this.onAssigned} \r\n                    info=\"加一个备注，便于甄别用户\" />),\r\n            },\r\n            '',\r\n        ];\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.setRole}>修改角色</button>;\r\n        return <Page header=\"用户详情\" right={right}>\r\n            <PropGrid rows={rows} values={roleUser} />\r\n            <div className=\"px-3 py-1\"><small><FA name=\"angle-double-right\" /> 所属角色</small></div>\r\n            <List\r\n                items={store.memberRoles} \r\n                item={{render: this.renderMemberRole, onClick: this.roleClick}} />\r\n        </Page>\r\n    }\r\n}\r\n\r\n@observer\r\nclass SetRole extends React.Component {\r\n    private list:List;\r\n    constructor(props) {\r\n        super(props);\r\n        this.submit = this.submit.bind(this);\r\n    }\r\n    async componentDidMount() {\r\n        await store.loadRoles();\r\n        await store.loadMemberRoles();\r\n    }\r\n    private renderRole(role:Role, index:number) {\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={role.name}\r\n                right={<small className=\"text-muted\">{role.discription}</small>} />\r\n    }\r\n    private roleSelect(role:Role, isSelected: boolean, anySelected: boolean) {\r\n    }\r\n    private async submit() {\r\n        await store.setMemberRoles(this.list.selectedItems);\r\n        nav.pop();\r\n    }\r\n    render() {\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.submit}>保存</button>;\r\n        let roles = store.roles;\r\n        let memberRoles = store.memberRoles;\r\n        return <Page header=\"修改角色\" right={right}>\r\n            <List \r\n                ref={list=>this.list=list}\r\n                items={roles}\r\n                selectedItems={memberRoles}\r\n                compare={(role:Role, selectRole:Role)=>role.id === selectRole.id}\r\n                item={{render: this.renderRole, onSelect: this.roleSelect}} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, LMR, Badge, FA, TonvaForm, SubmitResult, FormRow, Muted, SearchBox} from 'tonva-react-form';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {Role, RoleMember} from '../model';\r\nimport {store} from '../store';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {mainApi} from '../api';\r\nimport {MemberPage} from './memberPage';\r\n\r\n@observer\r\nexport class MembersPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadMembers();\r\n    }\r\n    private renderMember(member:RoleMember, index:number):JSX.Element {\r\n        return <MemberRow {...member} />;\r\n    }\r\n    private userClick(user:RoleMember) {\r\n        store.setRoleUser(user);\r\n        nav.push(<MemberPage />);\r\n    }\r\n    private onSearch() {\r\n        let role = store.role;\r\n        let roleId = role === undefined? 0:role.id;\r\n        nav.push(<MemberSearch roleId={roleId} />);\r\n    }\r\n    render() {\r\n        let right = <button className=\"btn btn-sm\" onClick={this.onSearch}><FA name=\"search\" /></button>;\r\n        return <Page header=\"用户\" right={right}>\r\n            <List items={store.roleMembers} item={{render: this.renderMember, onClick: this.userClick}} />\r\n        </Page>\r\n    }\r\n}\r\n\r\nconst MemberRow = (member:RoleMember) => {\r\n    let {nick, name, assigned, icon} = member;\r\n    let content;\r\n    if (assigned)\r\n        content = <><div><b>{assigned}</b> <Muted>{nick}</Muted></div><Muted>{name}</Muted></>;\r\n    else if (nick)\r\n        content = <><div><b>{nick}</b></div><Muted>{name}</Muted></>;\r\n    else\r\n        content = <div><b>{name}</b></div>;\r\n    return <LMR className=\"py-2 px-3 align-items-stretch\"\r\n        left={<Badge size=\"sm\"><img src={icon||appIcon} /></Badge>}>\r\n        <div className=\"px-3\">{content}</div>\r\n    </LMR>;\r\n};\r\n\r\ninterface SearchProps {\r\n    roleId: number;\r\n}\r\ninterface SearchState {\r\n    members: RoleMember[];\r\n}\r\nexport class MemberSearch extends React.Component<SearchProps, SearchState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.state = {\r\n            members: null,\r\n        }\r\n    }\r\n    private async onSearch(key:string) {\r\n        let ret = await mainApi.unitMembers(store.unit.id, this.props.roleId, key, 0, 100);\r\n        this.setState({members: ret});\r\n    }\r\n    private renderMember(member:RoleMember, index:number):JSX.Element {\r\n        return <MemberRow {...member} />;\r\n    }\r\n    private userClick(user:RoleMember) {\r\n        store.setRoleUser(user);\r\n        nav.push(<MemberPage />);\r\n    }\r\n    render() {\r\n        let header = <SearchBox className=\"w-100 mx-1\" \r\n            onSearch={this.onSearch} \r\n            maxLength={100}\r\n            placeholder=\"搜索用户\" />;\r\n        return <Page header={header}>\r\n            <List\r\n                items={this.state.members}\r\n                item={{render: this.renderMember, onClick: this.userClick}} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, Media, LMR, FA, PropGrid, Prop} from 'tonva-react-form';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {StringValueEdit} from '../tools';\r\nimport {Role, UnitApp} from '../model';\r\nimport {store} from '../store';\r\nimport {MembersPage} from './membersPage';\r\n\r\n@observer\r\nexport class RolePage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadApps();\r\n        await store.loadRoleApps();\r\n    }\r\n    private editRole() {\r\n        nav.push(<EditRole />);\r\n    }\r\n    private renderRoleApp = (app:UnitApp, index:number) => {\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={app.name}\r\n                right={<small className=\"text-muted\">{app.discription}</small>} />\r\n    }\r\n    private roleAppClick = (app:UnitApp) => {\r\n        nav.push(<RoleApps />);\r\n    }\r\n    private addRoleApp() {\r\n        nav.push(<RoleApps />);\r\n    }\r\n    private members() {\r\n        nav.push(<MembersPage />);\r\n    }\r\n    render() {\r\n        let {name, discription, count} = store.role;\r\n        let onMembersClick, membersLeft, membersRight;\r\n        if (count===undefined || count===null || count===0) {\r\n            membersLeft = <small className=\"text-muted\">无用户</small>;\r\n        }\r\n        else {\r\n            membersLeft = `共有 ${count} 用户`;\r\n            membersRight = <div><FA name=\"chevron-right\" /></div>;\r\n            onMembersClick = this.members;\r\n        }\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <Media icon={undefined} main={name} discription={discription} />,\r\n                onClick: this.editRole,\r\n            },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <LMR className=\"py-2\" left={membersLeft} right={membersRight} />,\r\n                onClick: onMembersClick,\r\n            },\r\n            '=',\r\n        ];\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={()=>this.addRoleApp()}><FA name=\"plus\" /> APP</button>;\r\n        return <Page header=\"角色\" right={right}>\r\n            <PropGrid rows={rows} values={{}} />\r\n            <div className=\"px-3 py-1\"><small><FA name=\"angle-double-right\" /> 可用APP列表</small></div>\r\n            <List\r\n                items={store.roleApps} \r\n                item={{render: this.renderRoleApp, onClick:this.roleAppClick}}\r\n                none={<small className=\"text-muted px-3 py-1\">没有APP, 点击右上角按钮选择APP</small>} />\r\n        </Page>\r\n    }\r\n}\r\n\r\n@observer\r\nclass EditRole extends React.Component {\r\n    async onNameChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.roleChangeProp('name', value);\r\n    }\r\n    async onDiscriptionChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.roleChangeProp('discription', value);\r\n    }\r\n    render() {\r\n        let role = store.role;\r\n        let {id} = role;\r\n        let isSysRole = id === 1 || id === 2;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                label: '名称', \r\n                type: 'string',\r\n                name: 'name', \r\n                onClick: isSysRole? undefined : ()=>nav.push(<StringValueEdit \r\n                    title=\"修改名称\"\r\n                    value={role.name}\r\n                    onChanged={this.onNameChanged} \r\n                    info=\"好的名字便于理解\" />)\r\n            },\r\n            {\r\n                label: '描述',\r\n                type: 'string',\r\n                name: 'discription',\r\n                onClick: isSysRole? undefined : ()=>nav.push(<StringValueEdit \r\n                    title=\"修改描述\"\r\n                    value={role.discription}\r\n                    onChanged={this.onDiscriptionChanged} \r\n                    info=\"对角色做一个说明\" />)\r\n            },\r\n        ];\r\n        return <Page header=\"修改角色信息\">\r\n            <PropGrid rows={rows} values={role} alignValue=\"right\" />\r\n        </Page>;\r\n    }\r\n}\r\n\r\n@observer\r\nclass RoleApps extends React.Component {\r\n    private list:List;\r\n    constructor(props) {\r\n        super(props);\r\n        this.submit = this.submit.bind(this);\r\n    }\r\n    async componentDidMount() {\r\n        await store.loadApps();\r\n        await store.loadRoleApps();\r\n    }\r\n    private renderApp(app:UnitApp, index:number) {\r\n        return <LMR className=\"py-1 px-2 align-items-center\"\r\n                left={app.name}\r\n                right={<small className=\"text-muted\">{app.discription}</small>} />\r\n    }\r\n    private appSelect(app:UnitApp, isSelected: boolean, anySelected: boolean) {\r\n\r\n    }\r\n    private async submit() {\r\n        await store.setRoleApps(this.list.selectedItems);\r\n        nav.pop();\r\n    }\r\n    render() {\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.submit}>保存</button>;\r\n        let apps = store.apps;\r\n        let roleApps = store.roleApps;\r\n        return <Page header=\"选择APP\" right={right}>\r\n            <List \r\n                ref={list=>this.list=list}\r\n                items={apps}\r\n                selectedItems={roleApps}\r\n                item={{render: this.renderApp, onSelect: this.appSelect}} />\r\n        </Page>;\r\n    }\r\n}","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {List, LMR, FA, Muted} from 'tonva-react-form';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {Role} from '../model';\r\nimport {store} from '../store';\r\nimport {NewRole} from './newRole';\r\nimport {RolePage} from './rolePage';\r\nimport {MembersPage} from './membersPage';\r\n\r\nconst midClassName = classNames('d-flex', 'h-100', 'align-items-center', 'px-5', 'small', 'text-muted');\r\n\r\n@observer\r\nexport class Members extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadRoles();\r\n    }\r\n    private renderRole = (role:Role, index:number) => {\r\n        let {name, discription, count} = role;\r\n        return <LMR\r\n            className=\"px-3 py-2\" \r\n            left={name}\r\n            right={String(count || '')}>\r\n            <div className={midClassName}>\r\n                {discription}\r\n            </div>\r\n        </LMR>;\r\n    }\r\n    private roleClick = (role:Role) => {\r\n        store.setRole(role);\r\n        nav.push(<RolePage />)\r\n    }\r\n    private newRole = (evt: React.MouseEvent<HTMLAnchorElement>) => {\r\n        evt.preventDefault();\r\n        nav.push(<NewRole />);\r\n    }\r\n    private allUsersClick = () => {\r\n        store.setRole(undefined);\r\n        nav.push(<MembersPage />);\r\n    }\r\n    render() {\r\n        let right = <a className=\"small\" href='#' onClick={this.newRole}>新增</a>;\r\n        let header = <LMR className=\"px-3 small bg-light\" left=\"角色\" right={right} />;\r\n        return <Page header=\"用户角色\">\r\n            <LMR\r\n                className=\"my-3 px-3 py-2 bg-white\" \r\n                left={'用户'}\r\n                right={String(store.memberCount)}\r\n                onClick={this.allUsersClick}>\r\n                <div className={midClassName}>\r\n                    设置用户角色\r\n                </div>\r\n            </LMR>\r\n            <List\r\n                header={header}\r\n                items={store.roles}\r\n                none=\"[无]\"\r\n                item={{render:this.renderRole, onClick:this.roleClick}} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Muted } from 'tonva-react-form';\r\nimport { left0 } from 'tonva-tools';\r\nimport { VMapMain, MapUI, Field, CMap }  from 'tonva-react-uq'; \r\n\r\nclass CMapTeamPerson extends CMap {\r\n    async searchOnKey(keyField:Field, param):Promise<number> {\r\n        switch (keyField.name) {\r\n            default: return await super.searchOnKey(keyField, param);\r\n            case 'post': return await this.searchOnPost(param);                \r\n        }\r\n    }\r\n\r\n    private async searchOnPost(param: any):Promise<number> {\r\n        let querySelect = this.cQuerySelect('teamPosts');\r\n        let val = await querySelect.call(param);\r\n        return val['post'].id;\r\n    }\r\n}\r\n\r\nclass VMapTeamPerson extends VMapMain {\r\n}\r\n\r\nconst ui:MapUI = {\r\n    CMap: CMapTeamPerson,\r\n    keys: [\r\n        {\r\n            content: ({name, id}:any, x:any) => <><Muted>{x.team} &nbsp; </Muted> {name}</>,\r\n            none: (x:any)=>x.noStaff,\r\n        },\r\n        {\r\n            content: ({name, id}:any, x:any) => <><Muted>{x.staff} &nbsp; </Muted> {name} &nbsp; <Muted>{x.no} {left0(id, 4)}</Muted></>,\r\n            none: (x:any)=>x.noPost,\r\n        },\r\n        {\r\n            content: ({title, id}:any, x:any) => <><Muted>{x.post} &nbsp; </Muted> {title}</>,\r\n            none: undefined,\r\n        },\r\n    ]\r\n}\r\n\r\nexport default ui;\r\n","import { UqUI } from 'tonva-react-uq';\r\nimport map from './map';\r\nimport tuid from './tuid';\r\nimport query from './query';\r\nimport res from './res';\r\n\r\nconst uqUI:UqUI = {\r\n    map: map,\r\n    tuid: tuid,\r\n    query: query,\r\n    res: res,\r\n}\r\n\r\nexport default uqUI;\r\n","import teamPerson from './teamPerson';\r\n\r\nexport default {\r\n    teamPerson: teamPerson,\r\n};\r\n","import user from './user';\r\nimport organization from './organization';\r\n\r\nexport default {\r\n    user: user,\r\n    organization: organization,\r\n};\r\n","import * as React from 'react';\r\nimport { TuidUI, CTuidSelect, CQuery, QueryPageItems } from \"tonva-react-uq\";\r\nimport { PageItems } from \"tonva-tools\";\r\n\r\nclass CUserSelect extends CTuidSelect {\r\n    protected buildPageItems():PageItems<any> {\r\n        let query:CQuery = this.cUq.cFromName('query', 'SearchUser') as CQuery;\r\n        return new QueryPageItems(query.entity);\r\n    }\r\n    idFromItem(item:any) {return item.id;}\r\n\r\n    async searchMain(key:string) {\r\n        if (this.PageItems === undefined) {\r\n            this.PageItems = this.buildPageItems();\r\n        }\r\n        if (key !== undefined) await this.PageItems.first({key: key});\r\n    }\r\n}\r\n\r\nconst ui:TuidUI = {\r\n    CTuidSelect: CUserSelect,\r\n    content: (item:any) => {return <>{item.name}</>},\r\n}\r\n\r\nexport default ui;\r\n","import * as React from 'react';\r\nimport { TuidUI } from \"tonva-react-uq\";\r\n\r\nconst ui:TuidUI = {\r\n    divs: {\r\n        post: {\r\n            content: (item:any) => {\r\n                let {title} = item;\r\n                return <>{title}</>;\r\n            },\r\n            rowContent: (item:any) => {\r\n                let {title} = item;\r\n                return <>{title}</>;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default ui;\r\n","import teamPosts from './teamPosts';\r\n\r\nexport default {\r\n    teamPosts: teamPosts,\r\n};\r\n","import * as React from 'react';\r\nimport { QueryUI } from \"tonva-react-uq\";\r\nimport { observer } from 'mobx-react';\r\n\r\nconst ui:QueryUI = {\r\n    row: observer((item:any) => {\r\n        let {post} = item;\r\n        return <div className=\"px-3 py-2\">{post.content()}</div>;\r\n    }),\r\n};\r\n\r\nexport default ui;\r\n","import CN from './zh/CN';\r\n\r\nconst res = {\r\n    zh: {\r\n        CN: CN\r\n    }\r\n};\r\n\r\nexport default res;\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\n\r\nexport default {\r\n    x: {\r\n        no: '编号',\r\n        team: '部门',\r\n        staff: '员工',\r\n        noStaff: '无员工',\r\n        post: '职位',\r\n        noPost: '无职位',\r\n        a: 'aaa',\r\n        b: {\r\n            s: 'sss',\r\n            d: ()=><span className=\"text-success\">ddd</span>,\r\n        },\r\n        c: ()=><span className=\"text-danger\">ccc</span>,\r\n    },\r\n    uq: '$UNITX',\r\n    tuid: '基础档案',\r\n    map: '对照表',\r\n    sheet: '单据',\r\n    pending: '待处理',\r\n    book: '帐',\r\n    action: '操作',\r\n    tuidNullCaption: '选择',\r\n    submit: '提交',\r\n    arrNew: '新增',\r\n    arrEdit: '保存',\r\n    entity: {\r\n        message: {\r\n            label: '消息-message',\r\n            arrNew: '新增消息',\r\n            arrEdit: '保存消息',\r\n            fields: {\r\n                fromUser: '发送人',\r\n                fromUnit: '发送部门',\r\n                type: '类型',\r\n                date: '日期',\r\n                subject: '主题',\r\n                discription: '描述',\r\n                content: '内容'\r\n            },\r\n        },\r\n        getMessage: {\r\n            label: '获取Message',\r\n            submit: '获取消息',\r\n            fields: {\r\n                msg: '消息'\r\n            }\r\n        },\r\n        newMessage: {\r\n            label: '新建消息',\r\n            fields: {\r\n                type: '类型',\r\n                subject: '主题',\r\n            },\r\n            arrs: {\r\n                to: {\r\n                    label: '发送',\r\n                    newSubmit: '新增to',\r\n                    editSumbit: '保存to',\r\n                },\r\n                cc: {\r\n                    label: '抄送',\r\n                    newSubmit: '新增cc',\r\n                    editSumbit: '保存cc',\r\n                }\r\n            }\r\n        },\r\n        sectionTeam: {\r\n            label: '大部-团队对照表',\r\n        },\r\n        teamPerson: {\r\n            label: '员工-岗位对照表',\r\n            fields: {\r\n            },\r\n            confirmDelete: _.template('真的要删除${label}吗'),\r\n        },\r\n        teamOrganization: {\r\n            label: '团队-机构对照表',\r\n        },\r\n        teamPosts: {\r\n            label: '团队-岗位对照表',\r\n        },\r\n        person: {\r\n            label: '员工',\r\n            fields: {\r\n                name: '姓名',\r\n                nick: '别名',\r\n                given: '名字',\r\n                sur: '姓',\r\n                gender: '性别',\r\n                user: '用户',\r\n            }\r\n        },\r\n        organization: {\r\n            label: '机构',\r\n            arrs: {\r\n                post: {\r\n                    label: '岗位',\r\n                }\r\n            }\r\n        },\r\n        user: {\r\n            label: '用户'\r\n        },\r\n        team: {\r\n            label: '团队',\r\n        },\r\n        section: {\r\n            label: '大部',\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { IObservableValue, observable } from 'mobx';\r\nimport { Page, VPage } from 'tonva-tools';\r\nimport { Muted, LMR, FA, List } from 'tonva-react-form';\r\nimport { COpBinding } from './cOpBinding';\r\nimport { StateTo, Sheet, Organization, Post, Team, Section, To, Entity } from './model';\r\n\r\ninterface SelectablePost {\r\n    post: Post;\r\n    selected: IObservableValue<boolean>;\r\n    teams?: SelectableTeam[];\r\n}\r\n\r\ninterface SelectableTeam {\r\n    team: Team;\r\n    selected: IObservableValue<boolean>;\r\n    sections?: SelectableSection[];\r\n}\r\n\r\ninterface SelectableSection {\r\n    section: Section;\r\n    selected: IObservableValue<boolean>;\r\n}\r\n\r\nexport class VOpBinding extends VPage<COpBinding> {\r\n    private sheet: Sheet;\r\n    private states: StateTo[];\r\n    private selectablePosts:SelectablePost[];\r\n    private sheetOpsChanged:boolean = false;\r\n\r\n    private stateClick(state:StateTo) {\r\n        let {organizations, teams, sections, posts} = this.controller;\r\n        let postTos:{[post:number]:To[]} = {};\r\n        let {tos} = state;\r\n        if (tos !== undefined) {\r\n            for (let to of tos) {\r\n                let {post} = to;\r\n                let pid = post.id;\r\n                let pto = postTos[pid];\r\n                if (pto === undefined) postTos[pid] = pto = [];\r\n                pto.push(to);\r\n            }\r\n        }\r\n        this.selectablePosts = posts.map(v => this.buildSelectablePost(v, postTos));\r\n        /*\r\n            return {\r\n                post: v,\r\n                selected: observable.box(false),\r\n                teams: [],\r\n            }\r\n        });*/\r\n        this.sheetOpsChanged = false;\r\n        this.openPage(this.stateView, state);\r\n        this.regConfirmClose(async ():Promise<boolean> => {\r\n            if (this.sheetOpsChanged === false) return true;\r\n            return confirm('未保存\\n真的不保存吗？');\r\n        });\r\n    }\r\n\r\n    private buildSelectablePost(post:Post, postTos:{[post:number]:To[]}):SelectablePost {\r\n        let pto = postTos[post.id];\r\n        let selected:boolean;\r\n        let teams:SelectableTeam[];\r\n        if (pto === undefined) {\r\n            selected = false;\r\n            teams = [];\r\n        }\r\n        else {\r\n            selected = true;\r\n            teams = this.buildSelectableTeams(post, pto);\r\n        }\r\n        let ret = {\r\n            post: post,\r\n            selected: observable.box(selected),\r\n            teams: teams,\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private buildSelectableTeams(post:Post, tos: To[]):SelectableTeam[] {\r\n        let teamTos:{[team:number]:To[]} = {};\r\n        let hasAllTeams = false;\r\n        for (let to of tos) {\r\n            let {team} = to;\r\n            let teamId;\r\n            if (team === undefined) {\r\n                teamId = 0;\r\n                hasAllTeams = true;\r\n            }\r\n            else {\r\n                teamId = team.id;\r\n            }\r\n            let tto = teamTos[teamId];\r\n            if (tto === undefined) teamTos[teamId] = tto = [];\r\n            tto.push(to);\r\n        }\r\n        let sections:Section[] = [];\r\n        let {organization} = post;\r\n        if (organization !== undefined && organization.teams !== undefined) {\r\n            for (let team of post.organization.teams) {\r\n                if (team.sections !== undefined) sections.push(...team.sections);\r\n            }\r\n        }\r\n        let teams:SelectableTeam[] = [];\r\n        let teamTo0 = teamTos[0];\r\n        let teamTo0Sections = this.buildSelectableSections(sections, teamTo0);\r\n        teams.push({\r\n            team: {\r\n                id: 0,\r\n                name: '* 所有部门',\r\n                no: undefined,\r\n                sections: sections,\r\n                organizations: undefined,\r\n            }, \r\n            selected: observable.box(teamTo0!==undefined), \r\n            sections: teamTo0Sections,\r\n        });\r\n        if (organization !== undefined && organization.teams !== undefined) {\r\n            post.organization.teams.forEach(v => {\r\n                let teamTo = teamTos[v.id];\r\n                teams.push({\r\n                    team: v,\r\n                    selected: observable.box(teamTo!==undefined),\r\n                    sections: this.buildSelectableSections(sections, teamTo),\r\n                });\r\n            });\r\n        }\r\n        if (hasAllTeams === true && tos.length === 1) {\r\n            let selectableTeam0 = teams[0];\r\n            let hasSection = false;\r\n            for (let selectableSection of selectableTeam0.sections) {\r\n                if (selectableSection.selected.get() === true) {\r\n                    hasSection = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (hasSection === false) {\r\n                selectableTeam0.selected.set(false);\r\n                selectableTeam0.sections = [];\r\n            }\r\n        }\r\n        return teams;\r\n    }\r\n\r\n    private buildSelectableSections(sections:Section[], tos: To[]):SelectableSection[] {\r\n        let selectableSections:SelectableSection[] = [];\r\n        for (let section of sections) {\r\n            selectableSections.push({\r\n                section: section,\r\n                selected: observable.box(tos && tos.find(v => v.section && section.id === v.section.id) !== undefined),\r\n            });\r\n        }\r\n        return selectableSections;\r\n    }\r\n\r\n    private renderState(stateTo:StateTo) {\r\n        let {name, caption, tos, tosText, configable} = stateTo;\r\n        let content;\r\n        if (configable === true) {\r\n            let right = <FA className=\"text-muted align-self-center\" name=\"chevron-right\" />;\r\n            let onClick = () => this.stateClick(stateTo);\r\n            let tosView = <this.stateTosView tosText={tosText} />;\r\n            content = <>\r\n                <LMR className=\"bg-white py-1 px-2 cursor-pointer\" right={right} onClick={onClick}>\r\n                    {caption}\r\n                </LMR>\r\n                {tosView}\r\n            </>\r\n        }\r\n        else {\r\n            content = <div className=\"bg-white py-1 px-2\">\r\n                {caption}\r\n            </div>;\r\n        }\r\n        return <div key={name} className=\"border border-light rounded mx-1 my-3\">\r\n            {content}\r\n        </div>\r\n    }\r\n\r\n    private stateTosView = observer(({tosText}:{tosText: IObservableValue<string[]>}) => {\r\n        let tos = tosText.get();\r\n        return <div className=\"bg-light py-1 px-2\">{\r\n            tos === undefined || tos.length === 0? <Muted>[无岗位]</Muted> :\r\n            tos.map((v,index) => {\r\n                return <span\r\n                    key={v}\r\n                    className=\"d-inline-block border bg-white rounded mr-2 my-1 py-1 px-2\">\r\n                    {v}\r\n                </span>\r\n            })\r\n        }\r\n        </div>\r\n    });\r\n\r\n    private tosTexts(tos: To[]):string[] {\r\n        return tos && tos.map((v,index) => {\r\n            let {post, team, section} = v;\r\n            let content:string = post.title;\r\n            if (team !== undefined && team.id > 0) content += ' @ ' + team.name;\r\n            if (section !== undefined) {\r\n                if (team === undefined || team.id === 0) content += ' @ * ';\r\n                content += ' / ' + section.name;\r\n            }\r\n            return content;\r\n        });\r\n    }\r\n\r\n    async open({entity, opTos}:{entity:Entity, opTos:{[op:string]:To[]}}) {\r\n        this.sheet = entity;\r\n        let {name, states} = entity;\r\n        if (states === undefined) {\r\n            let tos = opTos['$'];\r\n            this.states = [{\r\n                name: '$',\r\n                caption: '允许岗位',\r\n                configable: true,\r\n                tos: tos,\r\n                tosText: observable.box<string[]>(this.tosTexts(tos)),\r\n            }];\r\n            this.openPageElement(<Page header={name + ' - 岗位'}>\r\n                {this.states.map(v => this.renderState(v))}\r\n            </Page>);\r\n            return;\r\n        }\r\n\r\n        this.states = states.map(v => {\r\n            let prefix = v.substr(0, 1);\r\n            let caption: string | JSX.Element;\r\n            let configable: boolean;\r\n            let tos;\r\n            switch (prefix) {\r\n                case '<': caption = <>{v.substr(1)} &nbsp; <Muted>回复</Muted></>; configable = false; break;\r\n                case '#': caption = <>{v.substr(1)} &nbsp; <Muted>返初</Muted></>; configable = false; break;\r\n                case '$': \r\n                    caption = '[新开单]'; \r\n                    configable = true; \r\n                    tos = opTos[v];\r\n                    break;\r\n                default:\r\n                    caption = v;\r\n                    configable = true; \r\n                    tos = opTos[v];\r\n                    break;\r\n            }\r\n            return {\r\n                name: v,\r\n                caption: caption,\r\n                configable: configable,\r\n                tos: tos,\r\n                tosText: observable.box<string[]>(this.tosTexts(tos)),\r\n            };\r\n        });\r\n        this.openPageElement(<Page header={'单据状态对应岗位 - ' + name} >\r\n            {this.states.map(v => this.renderState(v))}\r\n        </Page>);\r\n    }\r\n\r\n    private async saveOps(stateTo: StateTo) {\r\n        let stateToName = stateTo.name;\r\n        let tos:To[] = [];\r\n        let toArr:{post:number, team:number, section:number}[] = [];\r\n        for (let sp of this.selectablePosts) {\r\n            if (sp.selected.get() === false) continue;\r\n            let postId = sp.post.id;\r\n            let teamCount = 0;\r\n            for (let st of sp.teams) {\r\n                if (st.selected.get() === false) continue;\r\n                let teamId = st.team.id;\r\n                ++teamCount;\r\n                let sectionCount = 0;\r\n                for (let ss of st.sections) {\r\n                    if (ss.selected.get() === false) continue;\r\n                    let sectionId = ss.section.id;\r\n                    ++sectionCount;\r\n                    toArr.push({\r\n                        post: postId,\r\n                        team: teamId,\r\n                        section: sectionId,\r\n                    });\r\n                    tos.push({\r\n                        post: sp.post,\r\n                        team: st.team,\r\n                        section: ss.section,\r\n                    });\r\n                }\r\n                if (sectionCount === 0) {\r\n                    toArr.push({\r\n                        post: postId,\r\n                        team: teamId,\r\n                        section: 0,\r\n                    });\r\n                    tos.push({\r\n                        post: sp.post,\r\n                        team: st.team,\r\n                        section: undefined,\r\n                    });\r\n                }\r\n            }\r\n            if (teamCount === 0) {\r\n                toArr.push({\r\n                    post: postId,\r\n                    team: 0,\r\n                    section: 0,\r\n                });\r\n                tos.push({\r\n                    post: sp.post,\r\n                    team: undefined,\r\n                    section: undefined,\r\n                });\r\n            }\r\n        }\r\n        await this.controller.saveSheetStatePosts(this.sheet, stateToName, toArr);\r\n        let state = this.states.find(v => v.name === stateToName);\r\n        state.tos = tos;\r\n        let tosTexts = this.tosTexts(tos);\r\n        state.tosText.set(tosTexts);\r\n        this.closePage();\r\n    }\r\n\r\n    private organizationRow = (item: Organization, index:number) => {\r\n        let {id, name} = item;\r\n        return <div>id:{id} name:{name}</div>;\r\n    }\r\n    private teamRow = (item: SelectableTeam, index:number) => {\r\n        return <this.observableTeamRow {...item} />;\r\n    }\r\n    private sectionRow = (item: SelectableSection, index:number) => {\r\n        return <this.observableSectionRow {...item} />;\r\n    }\r\n    private postRow = (item:SelectablePost, index:number) => {\r\n        return <this.observablePostRow {...item} />;\r\n    };\r\n    private stateView: React.SFC<StateTo> = (state:StateTo) => {\r\n        let {caption} = state;\r\n        /*\r\n        switch (state.name) {\r\n            case '-':  stateCaption = '允许岗位'; break;\r\n            case '$':  stateCaption = '[新开单]'; break;\r\n            default: stateCaption = state.name; break;\r\n        }\r\n        */\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={async ()=>await this.saveOps(state)}>保存</button>\r\n        return <Page header={`${this.sheet.name} - ${caption}`}\r\n            back=\"close\"\r\n            right={right}>\r\n            <div className=\"mx-3 my-2\">\r\n                <Muted>设置单据状态跟岗位的对应关系</Muted>\r\n            </div>\r\n            <List className=\"my-2\" \r\n                items={this.selectablePosts} \r\n                item={{render: this.postRow}} />\r\n        </Page>\r\n    }\r\n    /*\r\n    <List className=\"my-2\" header=\"Organization\" items={organizations} item={{render: this.organizationRow}} />\r\n    <List className=\"my-2\" header=\"Team\" items={teams} item={{render: this.teamRow}} />\r\n    <List className=\"my-2\" header=\"Section\" items={sections} item={{render: this.sectionRow}} />\r\n    */\r\n\r\n    private onPostSelectChanged(item:SelectablePost, checked:boolean) {\r\n        this.sheetOpsChanged = true;\r\n        let {post, selected} = item;\r\n        if (checked === true) {\r\n            let sections:Section[] = [];\r\n            let {organization} = post;\r\n            if (organization !== undefined && organization.teams !== undefined) {\r\n                for (let team of post.organization.teams) {\r\n                    if (team.sections !== undefined) sections.push(...team.sections);\r\n                }\r\n            }\r\n            item.teams.push({\r\n                team: {\r\n                    id: 0,\r\n                    name: '* 所有部门',\r\n                    no: undefined,\r\n                    sections: sections,\r\n                    organizations: undefined,\r\n                }, \r\n                selected: observable.box(false), \r\n                sections:[]\r\n            });\r\n            if (organization !== undefined && organization.teams !== undefined) {\r\n                post.organization.teams.forEach(v => {\r\n                    item.teams.push({\r\n                        team: v,\r\n                        selected: observable.box(false),\r\n                        sections: []\r\n                    });\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            item.teams.splice(0);\r\n        }\r\n        selected.set(checked);\r\n    }\r\n\r\n    private onTeamSelectChanged(item:SelectableTeam, checked:boolean) {\r\n        this.sheetOpsChanged = true;\r\n        let {team, selected} = item;\r\n        if (checked === true) {\r\n            //item.sections.push({section: undefined, selected: observable.box(false)});\r\n            team.sections.forEach(v => {\r\n                item.sections.push({\r\n                    section: v,\r\n                    selected: observable.box(false)\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            item.sections.splice(0);\r\n        }\r\n        selected.set(checked);\r\n    }\r\n\r\n    private onSectionSelectChanged(item:SelectableSection, checked:boolean) {\r\n        this.sheetOpsChanged = true;\r\n        let {section, selected} = item;\r\n        selected.set(checked);\r\n    }\r\n\r\n    private observablePostRow = observer((item:SelectablePost) => {\r\n        let {post, selected, teams} = item;\r\n        let {title} = post;\r\n        let teamsList;\r\n        let defaultSelected = selected.get();\r\n        if (defaultSelected === true) {\r\n            teamsList = <List className=\"ml-4 va-list-top-border\" items={teams} item={{render:this.teamRow}} />\r\n        }\r\n        return <div className=\"flex-column\">\r\n            <label className=\"px-3 py-2 w-100 mb-0\">\r\n                <input className=\"mr-3 align-middle\"\r\n                    type=\"checkbox\" \r\n                    defaultChecked={defaultSelected}\r\n                    onChange={(evt)=>this.onPostSelectChanged(item, evt.target.checked)} />\r\n                <Muted>岗位</Muted> &nbsp; {title}\r\n            </label>\r\n            {teamsList}\r\n        </div>;\r\n    });\r\n\r\n    private observableTeamRow = observer((item:SelectableTeam) => {\r\n        let {team, selected, sections} = item;\r\n        let {name} = team;\r\n        let teamsList;\r\n        let defaultSelected = selected.get();\r\n        if (defaultSelected === true && sections.length > 0) {\r\n            teamsList = <List className=\"ml-4 va-list-top-border\" items={sections} item={{render:this.sectionRow}} />\r\n        }\r\n        return <div className=\"flex-column\">\r\n            <label className=\"px-3 py-2 w-100 mb-0\">\r\n                <input className=\"mr-3 align-middle\"\r\n                    type=\"checkbox\" \r\n                    defaultChecked={defaultSelected}\r\n                    onChange={(evt)=>this.onTeamSelectChanged(item, evt.target.checked)} />\r\n                <Muted>部门</Muted> &nbsp; {name}\r\n            </label>\r\n            {teamsList}\r\n        </div>;\r\n    });\r\n\r\n    private observableSectionRow = observer((item:SelectableSection) => {\r\n        let {section, selected} = item;\r\n        let {name} = section;\r\n        let defaultSelected = selected.get();\r\n        return <div className=\"flex-column\">\r\n            <label className=\"px-3 py-2 w-100 mb-0\">\r\n                <input className=\"mr-3 align-middle\"\r\n                    type=\"checkbox\" \r\n                    defaultChecked={defaultSelected}\r\n                    onChange={(evt)=>this.onSectionSelectChanged(item, evt.target.checked)} />\r\n                <Muted>大部</Muted> &nbsp; {name}\r\n            </label>\r\n        </div>;\r\n    });\r\n}\r\n ","import * as React from 'react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { COpBinding } from \"./cOpBinding\";\r\nimport { Entity, EntityBlock, Uq } from './model';\r\nimport { entityIcons, CAction, CQuery } from 'tonva-react-uq';\r\nimport { List, Muted, LMR, FA } from 'tonva-react-form';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\n\r\ninterface Checked {\r\n    def: boolean;\r\n    checked: boolean;\r\n}\r\n\r\nexport class VAllPosts extends VPage<COpBinding> {\r\n    private uq: Uq;\r\n    private blocks:EntityBlock[];\r\n    private checked:{[entity:string]:Checked} = {};\r\n\r\n    @observable private isChanged:boolean = false;\r\n    async open(uq: Uq) {\r\n        this.uq = uq;\r\n        let {name, tuids, actions, maps, books, queries, histories, pendings, sheets} = this.uq;\r\n        this.blocks = [\r\n            {items: tuids, type: 'tuid'},\r\n            {items: sheets, type: 'sheet'},\r\n            {items: actions, type: 'action'},\r\n            {items: maps, type: 'map'},\r\n            {items: books, type: 'book'},\r\n            {items: queries, type: 'query'},\r\n            {items: histories, type: 'history'},\r\n            {items: pendings, type: 'pending'},\r\n        ];\r\n        let getEntityOpForAll = this.controller.cUq.cFromName('query', 'getEntityOpForAll') as CQuery;\r\n        let entityOpForAllResult = await getEntityOpForAll.entity.query({uq: this.uq.id});\r\n        let entityOpForAll:{[entity:string]:boolean} = {};\r\n        for (let eaa of entityOpForAllResult.ret) {\r\n            entityOpForAll[eaa.entity] = true;\r\n        }\r\n        for (let b of this.blocks) {\r\n            let {items} = b;\r\n            if (items === undefined) continue;\r\n            for (let item of items) {\r\n                let {name} = item;\r\n                let checked = (entityOpForAll[name] === true);\r\n                this.checked[name] = {\r\n                    def: checked,\r\n                    checked: checked,\r\n                };\r\n            }\r\n        }\r\n        this.openPage(this.pageRender);\r\n        this.regConfirmClose(async ():Promise<boolean> => {\r\n            if (this.isChanged === false) return true;\r\n            return confirm('未保存\\n真的不保存吗？');\r\n        });\r\n    }\r\n\r\n    private onCheckChanged = (entity:Entity, checked: boolean) => {\r\n        this.checked[entity.name].checked = checked;\r\n        let isChanged:boolean = false;\r\n        for (let i in this.checked) {\r\n            let {def, checked} = this.checked[i];\r\n            if (def !== checked) {\r\n                isChanged = true;\r\n                break;\r\n            }\r\n        }\r\n        this.isChanged = isChanged;\r\n    }\r\n\r\n    private saveChange = async () => {\r\n        let entities:{entity:string}[] = [];\r\n        for (let i in this.checked) {\r\n            if (this.checked[i].checked !== true) continue;\r\n            entities.push({entity: i});\r\n        }\r\n        let saveEntityOpForAll = this.controller.cUq.cFromName('action', 'saveEntityOpForAll') as CAction;\r\n        let ret = await saveEntityOpForAll.entity.submit({\r\n            uq: this.uq.id,\r\n            entities: entities,\r\n        });\r\n        this.ceasePage();\r\n        this.openPageElement(<Page header=\"所有岗位可操作\" back=\"close\">\r\n            <div className=\"p-3\">\r\n                <FA name=\"check-circle\" className=\"text-success\" /> &nbsp;\r\n                已保存\r\n            </div>\r\n        </Page>);\r\n    }\r\n\r\n    private entityRender(entity:Entity, icon:any) {\r\n        let {name} = entity;\r\n        let right = <input className=\"mr-3 align-middle\"\r\n            type=\"checkbox\" \r\n            defaultChecked={this.checked[name].def}\r\n            onChange={(evt)=>this.onCheckChanged(entity, evt.target.checked)}/>\r\n\r\n        return <LMR className=\"px-3 py-2 align-items-center\"\r\n            right={right}>\r\n            {icon} &nbsp; {name}\r\n        </LMR>;\r\n    }\r\n\r\n    private pageRender = observer(() => {\r\n        /*\r\n        let {name, tuids, actions, maps, books, queries, histories, pendings, sheets} = this.uq;\r\n        let blocks:EntityBlock[] = [\r\n            {items: tuids, type: 'tuid'},\r\n            {items: sheets, type: 'sheet'},\r\n            {items: actions, type: 'action'},\r\n            {items: maps, type: 'map'},\r\n            {items: books, type: 'book'},\r\n            {items: queries, type: 'query'},\r\n            {items: histories, type: 'history'},\r\n            {items: pendings, type: 'pending'},\r\n        ];*/\r\n        let buttonSave = this.isChanged===true? <button className=\"btn btn-sm btn-success\" onClick={this.saveChange}>保存</button> : null;\r\n        return <Page header={'所有岗位可操作'} right={buttonSave}>\r\n            <div className=\"text-muted p-3 small\">\r\n                <div style={{lineHeight:'1.8', fontWeight:'bold'}}>说明</div>\r\n                <ol className=\"pl-3\" style={{listStyleType: '1', lineHeight: '1.8'}}>\r\n                    <li >\r\n                        有些操作，默认允许所有用户可操作，可以在这里设置。\r\n                    </li>\r\n                    <li>\r\n                        比如，用户下订单。任何客户，登录进系统，都可以下单。\r\n                    </li>\r\n                    <li>\r\n                        如果每个用户都需要设置，用户会丢失，管理人员会繁琐。\r\n                    </li>\r\n                </ol>\r\n            </div>\r\n            {this.blocks.map(block => {\r\n                let {items, type} = block;\r\n                let icon = entityIcons[type];\r\n                return items && items.length>0 &&\r\n                    <List key={type}\r\n                        className=\"mt-3\"\r\n                        header={<Muted className=\"px-3 pt-1 bg-light w-100\">{this.res[type]||type}</Muted>} \r\n                        items={items} \r\n                        item={{\r\n                            render:(item:any, index:number)=>this.entityRender(item, icon), \r\n                            onClick: undefined\r\n                        }} />;\r\n            })}\r\n        </Page>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, nav } from \"tonva-tools\";\r\nimport { COpBinding } from \"./cOpBinding\";\r\nimport { Uq } from './model';\r\nimport { List, FA, SearchBox } from 'tonva-react-form';\r\nimport { observable } from 'mobx';\r\nimport { CMap, CQuery, QueryPageItems, Query, Tuid, CTuid } from 'tonva-react-uq';\r\n\r\nexport class PageUsers extends QueryPageItems {\r\n    protected setPageStart(item:any) {\r\n        this.pageStart = item === undefined? 0 : item.id;\r\n    }\r\n}\r\n\r\nexport class VFullFunction extends VPage<COpBinding> {\r\n    private uq: Uq;\r\n    @observable private users: any[] = [];\r\n    private entityOpUserFully:CMap;\r\n    private pageUsers: PageUsers;\r\n    private tuidUser: CTuid<Tuid>;\r\n    async open(uq: Uq) {\r\n        this.uq = uq;\r\n        this.entityOpUserFully = this.controller.cUq.cFromName('map', 'entityOpUserFully') as CMap;\r\n        this.tuidUser = this.controller.cUq.cFromName('tuid', 'user') as CTuid<Tuid>;\r\n        await this.entityOpUserFully.entity.loadSchema();\r\n        let all = await this.entityOpUserFully.entity.queries.all.query({_uq: this.uq.id});\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={this.addClick}><FA name=\"plus\" /></button>;\r\n        this.users.push(...all.ret);\r\n        this.openPageElement(<Page header={'全功能用户'} right={right}>\r\n            <List items={this.users} item={{render:this.renderUser, onClick: this.onStopFully}} />\r\n        </Page>);\r\n        return;\r\n    }\r\n\r\n    private onStopFully = async (item:any) => {\r\n        this.openPageElement(<Page header={'停止全功能'}>\r\n            <div className=\"p-3\">\r\n                <div><b className=\"text-danger h4\">{item.user.content()}</b> 停止全功能用户。<br/>请确认。</div>\r\n                <div className=\"p-3\">\r\n                    <button className=\"btn btn-success\" onClick={()=>this.onSumitStopFully(item)}>停止全功能</button>\r\n                    <button className=\"ml-3 btn btn-outline-danger\" onClick={this.onCancelStop}>不停</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n    }\r\n\r\n    private onSumitStopFully = async (item:any) => {\r\n        let data = {_uq: this.uq.id, arr1:[{_user: item.user.id}]};\r\n        await this.entityOpUserFully.entity.actions.del.submit(data);\r\n        let index = this.users.findIndex(v => v === item);\r\n        if (index >= 0) this.users.splice(index, 1);\r\n        this.closePage();\r\n    }\r\n\r\n    private onCancelStop = () => this.closePage();\r\n\r\n    private addClick = async () => {\r\n        let user = await this.controller.callSearchUser(this.uq);\r\n        this.onUserSelected(user);\r\n        /*\r\n        let searchUser = this.controller.cUq.cFromName('query', 'SearchUser') as CQuery;\r\n        this.pageUsers = new PageUsers(searchUser.entity);\r\n        this.openPage(this.usersView);\r\n        */\r\n    }\r\n\r\n    private renderUser = (item:any, index:number) => {\r\n        return <div className=\"px-3 py-2\">{item.user.content()}</div>;\r\n    }\r\n\r\n    private onSearch = async (key:string) => {\r\n        await this.pageUsers.first({key: key});\r\n    }\r\n    private onSetFully = async (item:any) => {\r\n        await this.entityOpUserFully.entity.actions.add.submit({_uq: this.uq.id, arr1:[{_user: item.id}]});\r\n        this.tuidUser.entity.useId(item.id);\r\n        let row = {\r\n            uq: this.uq.id,\r\n            user: this.tuidUser.entity.boxId(item.id),\r\n        }\r\n        this.users.push(row);\r\n        this.closePage(2);\r\n    }\r\n    private onCancelFully = () => {this.backPage()}\r\n    private onUserSelected = (item:any) => {\r\n        this.openPageElement(<Page header=\"确认\">\r\n            <div className=\"p-3\">\r\n                <div><b className=\"text-danger h4\">{item.name}</b> 将设置为全功能用户。只有系统管理员或者测试人员才需要全功能，可以操作所有数据。<br/>请确认。</div>\r\n                <div className=\"p-3\">\r\n                    <button className=\"btn btn-success\" onClick={()=>this.onSetFully(item)}>设置为全功能用户</button>\r\n                    <button className=\"ml-3 btn btn-outline-danger\" onClick={this.onCancelFully}>取消</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n    }\r\n    private renderSelectUser = (item:any, index:number) => {\r\n        return <div className=\"px-3 py-2\">{JSON.stringify(item)}</div>;\r\n    }\r\n    private usersView = () => {\r\n        let search = <SearchBox className=\"w-100\" onSearch={this.onSearch} placeholder=\"选择用户\" />;\r\n        return <Page header={search}>            \r\n            <List\r\n                before=\"搜索用户名\"\r\n                items={this.pageUsers} \r\n                item={{render: this.renderSelectUser, onClick:this.onUserSelected}} />\r\n        </Page>;\r\n    };\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { VPage, Page, PageItems } from \"tonva-tools\";\r\nimport { SearchBox, List } from 'tonva-react-form';\r\nimport { centerApi } from 'tonva-react-uq';\r\nimport { COpBinding } from \"./cOpBinding\";\r\n\r\nexport class VSearchUser extends VPage<COpBinding> {\r\n    private unit:number;\r\n    private pageUsers = new PageUsers();\r\n\r\n    private onUserClick = (item:any) => {\r\n        this.closePage();\r\n        this.returnCall(item);\r\n    }\r\n    private onSearch = async (key:string) => {\r\n        await this.pageUsers.first({key: key, unit:this.unit, role:undefined});\r\n    }\r\n    private renderSelectUser = (item:any, index:number) => {\r\n        return <div className=\"px-3 py-2\">{JSON.stringify(item)}</div>;\r\n    }\r\n    async open(unit: number) {\r\n        this.unit = unit;\r\n        let search = <SearchBox className=\"w-100\" onSearch={this.onSearch} placeholder=\"选择用户\" />;\r\n        this.openPageElement(<Page header={search}>\r\n            <List\r\n                before=\"搜索用户名\"\r\n                items={this.pageUsers}\r\n                item={{render: this.renderSelectUser, onClick:this.onUserClick}} />\r\n        </Page>);\r\n    }\r\n}\r\n\r\nclass PageUsers extends PageItems<any> {\r\n    protected async load(param:{key:string, unit:number, role:number}, pageStart: any, pageSize: number): Promise<any[]> {\r\n        let {unit, role, key} = param;\r\n        let ret = await centerApi.get('unit/members', {key: key, unit:unit, role:role, pageStart:pageStart, pageSize:pageSize});\r\n        return ret;\r\n    }\r\n    protected setPageStart(item: any): any {\r\n        if (item === undefined)\r\n            this.pageStart = 0;\r\n        else\r\n            this.pageStart = item.id;\r\n    }\r\n}","import React from \"react\";\r\nimport { Page, Controller, meInFrame, VPage } from \"tonva-tools\";\r\nimport { List, Muted, LMR, FA } from \"tonva-react-form\";\r\nimport { VOpBinding } from './vOpBinding';\r\nimport { CAction, CQuery, centerApi, entityIcons, ControllerUq } from \"tonva-react-uq\";\r\nimport { Organization, Team, Section, Post, Sheet, App, Uq, To, Entity, EntityBlock } from \"./model\";\r\nimport { VAllPosts } from \"./vAllPosts\";\r\nimport { VFullFunction } from \"./vFullFunction\";\r\nimport { VSearchUser } from \"./vSearchUser\";\r\n\r\n// 单据跟操作的绑定设置\r\nexport class COpBinding extends ControllerUq {\r\n    /*\r\n    constructor(unitxUq: CUq, res:any) {\r\n        super({});\r\n        this.unitxUq = unitxUq;\r\n    }*/\r\n\r\n    icon = <FA name=\"map-o\" className=\"text-success\" fixWidth={true} />;\r\n    label = '岗位权限 - UQ对象';\r\n\r\n    //private unitxUq: CUq;\r\n    private apps: App[];\r\n    organizations: Organization[];\r\n    teams: Team[];\r\n    sections: Section[];\r\n    posts: Post[];\r\n    postDict: {[id:number]:Post};\r\n    teamDict: {[id:number]:Team};\r\n    organizationDict: {[id:number]:Organization};\r\n    sectionDict: {[id:number]:Section};\r\n\r\n    protected async internalStart():Promise<void> {\r\n        await this.buildPosts();\r\n        await this.buildAppsUqs();\r\n        this.openPage(<this.appsView />);\r\n    }\r\n\r\n    private async buildAppsUqs() {\r\n        let unit = meInFrame.unit;\r\n        let ret:any[][] = await centerApi.get('/unit/apps-uqs', {unit: unit});\r\n        this.apps = ret[0];\r\n        let uqs: Uq[] = ret[1];\r\n\r\n        for (let app of this.apps) {\r\n            app.uqs = [];\r\n        }\r\n        for (let uq of uqs) {\r\n            let app = this.apps.find(v => v.id === uq.app);\r\n            if (app === undefined) continue;\r\n            app.uqs.push(uq);\r\n            this.setUqEntities(uq);\r\n        }\r\n    }\r\n\r\n    private async buildPosts() {\r\n        let queryAllTeams = this.cUq.cFromName('query', 'allteams') as CQuery;\r\n        let ret:any[][] = await queryAllTeams.entity.query(undefined);\r\n        this.teams = ret['teams'];\r\n        this.organizations = ret['organization'];\r\n        this.posts = ret['organizationpost'];\r\n        this.sections = ret['sections'];\r\n        this.postDict = {};\r\n        this.teamDict = {};\r\n        this.organizationDict = {};\r\n        this.sectionDict = {};\r\n        for (let organization of this.organizations) {\r\n            organization.posts = [];\r\n            organization.teams = [];\r\n            this.organizationDict[organization.id] = organization;\r\n        }\r\n        for (let team of this.teams) {\r\n            team.organizations = [];\r\n            team.sections = [];\r\n            this.teamDict[team.id] = team;\r\n        }\r\n        for (let section of this.sections) {\r\n            section.teams = [];\r\n            this.sectionDict[section.id] = section;\r\n        }\r\n        for (let post of this.posts) {\r\n            this.postDict[post.id] = post;\r\n            let organization = this.organizationDict[post.owner];\r\n            if (organization === undefined) {\r\n                continue;\r\n            }\r\n            post.organization = organization;\r\n            organization.posts.push(post);\r\n        }\r\n        // teamOrganization\r\n        for (let teamOrganization of ret['teamorganization']) {\r\n            let {team:tm, organization:og} = teamOrganization;\r\n            let team = this.teamDict[tm];\r\n            let organization = this.organizationDict[og];\r\n            team.organizations.push(organization);\r\n            organization.teams.push(team);\r\n        }\r\n        // sectionTeam\r\n        for (let sectionTeam of ret['sectionteam']) {\r\n            let {section:sec, team:tm} = sectionTeam;\r\n            let section = this.sectionDict[sec];\r\n            let team = this.teamDict[tm];\r\n            section.teams.push(team);\r\n            team.sections.push(section);\r\n        }\r\n    }\r\n\r\n    private setUqEntities(uq:Uq) {\r\n        let entities = uq.entities;\r\n        if (entities === null) return;\r\n        let lns = entities.split('\\n');\r\n        let len = lns.length;\r\n        let p:number;\r\n        for (let i=0; i<len;) {\r\n            switch (lns[i]) {\r\n                case 'tuid': p = this.setEntities(uq.tuids = [], lns, i, uq); break;\r\n                case 'map': p = this.setEntities(uq.maps = [], lns, i, uq); break;\r\n                case 'book': p = this.setEntities(uq.books = [], lns, i, uq); break;\r\n                case 'history': p = this.setEntities(uq.histories = [], lns, i, uq); break;\r\n                case 'pending': p = this.setEntities(uq.pendings = [], lns, i, uq); break;\r\n                case 'query': p = this.setEntities(uq.queries = [], lns, i, uq); break;\r\n                case 'action': p = this.setEntities(uq.actions = [], lns, i, uq); break;\r\n                case 'sheet': p = this.setSheets(uq.sheets = [], lns, i, uq); break;\r\n                default:\r\n                    alert('unknown entity type: ' + lns[i]);\r\n                    return;\r\n            }\r\n            i = p;\r\n        }\r\n    }\r\n\r\n    private setEntities(entities:Entity[], lines:string[], p:number, uq:Uq):number {\r\n        let len = lines.length;\r\n        let i = p+1;\r\n        for (; i<len; i++) {\r\n            let ln = lines[i];\r\n            if (ln.length > 0) {\r\n                let name = ln;\r\n                entities.push({\r\n                    uq: uq,\r\n                    name: name,\r\n                    states: undefined\r\n                });\r\n            }\r\n            else return i+1;\r\n        }\r\n        return i;\r\n    }\r\n\r\n    private setSheets(sheets:Sheet[], lines:string[], p:number, uq:Uq):number {\r\n        let len = lines.length;\r\n        let i = p+1;\r\n        for (; i<len; i++) {\r\n            let ln = lines[i];\r\n            if (ln.length > 0) {\r\n                let parts:string[] = ln.split('\\t');\r\n                let name = parts[0];\r\n                parts[0] = '$';\r\n                let sheet:Sheet = {\r\n                    uq: uq,\r\n                    name: name,\r\n                    states: parts,\r\n                }\r\n                sheets.push(sheet);\r\n            }\r\n            else return i+1;\r\n        }\r\n        return i;\r\n    }\r\n\r\n    async saveSheetStatePosts(sheet:Sheet, stateName:string, toArr:{post:number, team:number, section:number}[]) {\r\n        let actionSaveEntityOpPost = this.cUq.cFromName('action', 'saveentityoppost') as CAction;\r\n        let {uq, name} = sheet;\r\n        await actionSaveEntityOpPost.submit({\r\n            uq: uq.id,\r\n            entityName: name,\r\n            opName: stateName,\r\n            posts: toArr\r\n        });\r\n    }\r\n\r\n    private appRender = (app:App, index:number) => {\r\n        let {name, discription} = app;\r\n        return <LMR className=\"px-3 py-2\" right={discription && <Muted>{discription}</Muted>}>\r\n            {name}\r\n        </LMR>\r\n    }\r\n\r\n    private appClick = (app:App) => {\r\n        this.openPage(<this.appView {...app} />)\r\n    }\r\n\r\n    async callSearchUser(uq:Uq): Promise<any> {\r\n        let user = await this.vCall(VSearchUser, meInFrame.unit);\r\n        return user;\r\n    }\r\n\r\n    private appsView = () => <Page header={this.label}>\r\n        <div className=\"text-muted p-3 small\">\r\n            <div style={{lineHeight:'1.8', fontWeight:'bold'}}>说明</div>\r\n            <ol className=\"pl-3\" style={{listStyleType: '1', lineHeight: '1.8'}}>\r\n                <li >\r\n                    下面是全部启用的APP。请选择\r\n                </li>\r\n                <li>\r\n                    每个APP会使用一个以上的UQ。UQ里面定义了Tuid，Action，Map和Sheet等对象。\r\n                </li>\r\n                <li>\r\n                    设置对象跟岗位的关联\r\n                </li>\r\n            </ol>\r\n        </div>\r\n        <List items={this.apps} item={{render:this.appRender, onClick:this.appClick}} />\r\n    </Page>;\r\n\r\n    private entityRender(entity:Entity, icon:any) {\r\n        let {name} = entity;\r\n        return <div className=\"px-3 py-2 align-items-center\">{icon} &nbsp; {name}</div>\r\n    }\r\n    private sheetRender(sheet:Sheet, icon:any) {\r\n        let {name, states} = sheet;\r\n        return <div className=\"px-3 py-2 align-items-center\">\r\n            {icon} &nbsp; {name} <Muted> &nbsp; {sheet.states.join(', ')}</Muted>\r\n        </div>\r\n    }\r\n    private entityClick = async (block:EntityBlock, entity:Entity) => {\r\n        //alert('entity click');\r\n        let entityPosts = this.cUq.cFromName('query', 'getEntityPost') as CQuery;\r\n        let ret = await entityPosts.entity.query({uq: entity.uq.id, entityName: entity.name});\r\n        let opTos:{[op:string]:To[]} = {};\r\n        for (let row of ret.ret) {\r\n            let {op, post, team, section} = row;\r\n            let opTo = opTos[op];\r\n            if (opTo === undefined) opTos[op] = opTo = [];\r\n            opTo.push({\r\n                post: this.postDict[post],\r\n                team: this.teamDict[team],\r\n                section: this.sectionDict[section],\r\n            });\r\n        }\r\n        this.openVPage(VOpBinding, {entity:entity, opTos:opTos});\r\n    }\r\n    private sheetClick = async (block:EntityBlock, sheet:Sheet) => {\r\n        this.sheetClickOld(sheet);\r\n    }\r\n\r\n    private sheetClickOld = async (sheet:Sheet) => {\r\n        let entityPosts = this.cUq.cFromName('query', 'getEntityPost') as CQuery;\r\n        let ret = await entityPosts.entity.query({uq: sheet.uq.id, entityName: sheet.name});\r\n        let opTos:{[op:string]:To[]} = {};\r\n        for (let row of ret.ret) {\r\n            let {op, post, team, section} = row;\r\n            let opTo = opTos[op];\r\n            if (opTo === undefined) opTos[op] = opTo = [];\r\n            opTo.push({\r\n                post: this.postDict[post],\r\n                team: this.teamDict[team],\r\n                section: this.sectionDict[section],\r\n            });\r\n        }\r\n        this.openVPage(VOpBinding, {entity:sheet, opTos:opTos});\r\n    }\r\n\r\n    private renderSetting = (item:any, index:number) => {\r\n        let {icon, color, text} = item;\r\n        return <div className=\"px-3 py-2 align-items-center\">\r\n            {<FA name={icon} fixWidth={true} className={color} />} &nbsp; {text}\r\n        </div>\r\n    }\r\n\r\n    private settingClick = (item:any, uq:Uq) => {\r\n        let {name} = item;\r\n        let V: new (coordinator) => VPage<COpBinding>;\r\n        switch (name) {\r\n            default: return;\r\n            case 'entity-by-all-post': V = VAllPosts; break;\r\n            case 'user-all-entities': V = VFullFunction; break;\r\n        }\r\n        this.openVPage(V, uq);\r\n    }\r\n    \r\n    private uqRender = (uq:Uq, index:number) => {\r\n        let {name, tuids, actions, maps, books, queries, histories, pendings, sheets} = uq;\r\n        let nameRender = this.entityRender;\r\n        let blocks:EntityBlock[] = [\r\n            {items: tuids, type: 'tuid', itemClick: this.entityClick},\r\n            {items: sheets, type: 'sheet', itemClick: this.sheetClick, itemRender: this.sheetRender},\r\n            {items: actions, type: 'action', itemClick: this.entityClick},\r\n            {items: maps, type: 'map', itemClick: this.entityClick},\r\n            {items: books, type: 'book', itemClick: this.entityClick},\r\n            {items: queries, type: 'query', itemClick: this.entityClick},\r\n            {items: histories, type: 'history', itemClick: this.entityClick},\r\n            {items: pendings, type: 'pending', itemClick: this.entityClick},\r\n        ];\r\n\r\n        let settings:any[] = [\r\n            {name:'entity-by-all-post', icon: 'cog', color: 'text-success', text: '所有岗位可操作'},\r\n            {name: 'user-all-entities', icon: 'cog', color: 'text-success', text: '全功能用户'}\r\n        ];\r\n\r\n        // {icon} &nbsp; {name} <Muted> &nbsp; {sheet.states.join(', ')}</Muted>\r\n        return <div key={name} className=\"my-2\">\r\n            <div className=\"px-3 font-weight-bold\">{name}</div>\r\n            <List className=\"mt-3\"\r\n                items={settings}\r\n                item={{\r\n                    key: (item:any)=>item.name, \r\n                    render: this.renderSetting,\r\n                    onClick:(item:any)=>this.settingClick(item, uq) \r\n                }}\r\n             />\r\n            {blocks.map(block => {\r\n                let {items, type, itemClick, itemRender} = block;\r\n                let icon = entityIcons[type];\r\n                return items && items.length>0 &&\r\n                    <List key={type} className=\"mt-3\"\r\n                        header={<Muted className=\"px-3 pt-1 bg-light w-100\">{this.res[type]||type}</Muted>} \r\n                        items={items} \r\n                        item={{\r\n                            key: (item:any)=>item.name, \r\n                            render:(item:any, index:number)=>(itemRender || nameRender)(item, icon), \r\n                            onClick: (item:Entity)=>itemClick(block, item)\r\n                        }} />;\r\n            })}\r\n        </div>;\r\n        /*\r\n        function headerCaption(caption:string):JSX.Element {\r\n            return <Muted className=\"px-3 pt-1 bg-light w-100\">{caption}</Muted>\r\n        }\r\n        function itemList(items:any[], type:string, itemClick:(item:any)=>void, render:((item:any, icon:any)=>JSX.Element) = nameRender) {\r\n            //let res = entitiesRes;\r\n            //let {caption, icon} = res[type];\r\n            let icon = entityIcons[type];\r\n            return items && \r\n                <List className=\"mt-3\"\r\n                    header={headerCaption(type)} \r\n                    items={items} \r\n                    item={{render:(item:any, index:number)=>render(item, icon), onClick: itemClick}} />;\r\n        }\r\n            {itemList(tuids, 'tuid', this.tuidClick)}\r\n            {itemList(sheets, 'sheet', this.sheetClickOld, this.sheetRender)}\r\n            {itemList(actions, 'action', this.actionClick)}\r\n            {itemList(maps, 'map', this.mapClick)}\r\n            {itemList(books, 'book', this.bookClick)}\r\n            {itemList(queries, 'query', this.queryClick)}\r\n            {itemList(histories, 'history', this.historyClick)}\r\n            {itemList(pendings, 'pending', this.pendingClick)}\r\n        */\r\n    }\r\n\r\n    private appView = (app:App) => <Page header={app.name + '操作权限'}>\r\n        {\r\n            app.uqs.map((v, index) => this.uqRender(v, index))\r\n        }\r\n    </Page>;\r\n\r\n    /*\r\n    private tuidClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    private mapClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    private actionClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    private bookClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    private queryClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    private historyClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    private pendingClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    */\r\n}\r\n","import * as React from 'react';\r\nimport { Page, VPage } from 'tonva-tools';\r\nimport { List, FA } from 'tonva-react-form';\r\nimport { CUq, Link, CLink, CApp } from \"tonva-react-uq\";\r\nimport ui from './ui';\r\nimport { COpBinding } from './op';\r\n\r\nexport class COrganization extends CUq {\r\n    constructor() {\r\n        super(undefined, '$$$/$unitx', 0, 0, undefined, ui);\r\n    }\r\n\r\n    label = '岗位权限';\r\n    icon = 'sitemap';\r\n    links: (CLink|string)[];\r\n\r\n    protected clearPrevPages() {\r\n        // 保留回退按钮，所以，去掉下面这行\r\n        //nav.clear();\r\n    }\r\n\r\n    protected async loadEntites() {\r\n        // 只有赋Entity权限的地方，需要取全部的Entities，其它地方默认取user access，this.entities.loadAccess()\r\n        await this.entities.loadEntities();\r\n    }\r\n\r\n    protected async internalStart() {\r\n        await this.loadSchema();\r\n        this.links= [\r\n            '',\r\n            new CLink(new COpBinding(this, this.res)),\r\n            '',\r\n            this.linkFromName('map', 'teamPerson'),\r\n            this.linkFromName('map', 'sectionTeam'),\r\n            this.linkFromName('map', 'teamOrganization'),\r\n            '',\r\n            this.linkFromName('tuid', 'person'),\r\n            this.linkFromName('tuid', 'team'),\r\n            this.linkFromName('tuid', 'section'),\r\n            this.linkFromName('tuid', 'organization'),\r\n        ];\r\n        this.openVPage(VOrganization);\r\n    }\r\n    \r\n}\r\n\r\nclass VOrganization extends VPage<COrganization> {\r\n    async open() {\r\n        this.openPage(this.appPage);\r\n    }\r\n\r\n    private renderRow = (link: Link, index:number) => {\r\n        return link.render('bg-white');\r\n    }\r\n\r\n    protected appPage = () => {\r\n        let {links, label} = this.controller;\r\n        return <Page header={label} logout={()=>{}}>\r\n            <List items={links} item={{render: this.renderRow}} />\r\n        </Page>;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {IdPick, IdPickFace, List, SearchBox} from 'tonva-react-form';\r\nimport {DevModel} from './model';\r\n\r\nexport interface IdPickProps {\r\n    caption: string;\r\n    searchPlaceHolder?: string;\r\n    candidateItems: ((params:any, key:string) => Promise<any[]>) | any[];\r\n    moreCandidates: () => Promise<void>;\r\n    row: (item:any, index:number) => JSX.Element;\r\n}\r\n\r\nexport function createIdPick(props: IdPickProps):IdPick {\r\n    return function(face: IdPickFace, params: any):Promise<void> {\r\n        return new Promise<void>((resolve, reject) => {\r\n            nav.push(<IdPickPage resolve={resolve} face={face} params={params} {...props} />);\r\n        });\r\n    }\r\n}\r\n\r\ninterface IdPickPageProps extends IdPickProps {\r\n    face: IdPickFace;\r\n    resolve: (item?: any) => void;\r\n    params: any;\r\n}\r\ninterface IdPickPageState {\r\n    items?: any[];\r\n}\r\n\r\nclass IdPickPage extends React.Component<IdPickPageProps, IdPickPageState> {\r\n    private items:any[];\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: null,\r\n        }\r\n        this.itemClick = this.itemClick.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n    }\r\n    async componentDidMount() {\r\n        let {face, candidateItems, params} = this.props;\r\n        this.setState({\r\n            items: Array.isArray(candidateItems)? candidateItems : await candidateItems(params, ''),\r\n        });\r\n    }\r\n    itemClick(item:any) {\r\n        let {resolve} = this.props;\r\n        resolve(item);\r\n        nav.pop();\r\n    }\r\n    async onSearch(key: string) {\r\n        //alert('search ' + key);\r\n        //await store.dev.searchServer.first(key)\r\n        let {candidateItems, params} = this.props;\r\n        if (typeof candidateItems === 'function') {\r\n            let ret = await candidateItems(params, key);\r\n            this.setState({items: ret});\r\n        }\r\n    }\r\n    render() {\r\n        let {caption, row, searchPlaceHolder} = this.props;\r\n        return <Page header={caption} back=\"close\">\r\n            <div className=\"container\">\r\n                <SearchBox className=\"my-2\" \r\n                    onSearch={this.onSearch} \r\n                    placeholder={searchPlaceHolder}\r\n                    maxLength={100} />\r\n            </div>\r\n            <List items={this.state.items} item={{onClick:this.itemClick, render:row}} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { AppController } from '.';\r\nimport { VPage, nav, Page } from 'tonva-tools';\r\nimport { SubmitResult, DropdownActions, TonvaForm, FormRow } from 'tonva-react-form';\r\nimport { createIdPick, IdPickProps } from 'createIdPick';\r\nimport { DevModel } from 'model';\r\nimport { store } from 'store';\r\n\r\nconst ServerCaption = (item:DevModel.Server) => {\r\n    let {discription, cloud, ip} = item;\r\n    return <>{discription} {cloud} {ip}</>;\r\n}\r\nconst idPickServerProps: IdPickProps = {\r\n    caption: '选择服务器',\r\n    searchPlaceHolder: '搜索服务器',\r\n    candidateItems: async (params:any, key:string) => {\r\n        await store.dev.searchServer.first(key);\r\n        return store.dev.searchServer.items;\r\n    },\r\n    moreCandidates: async () => {\r\n        await store.dev.searchServer.more();\r\n    },\r\n    row: (item:DevModel.Server, index:number) => {\r\n        return <div className=\"px-3 py-2\"><ServerCaption {...item} /></div>;\r\n    },\r\n};\r\n\r\nconst formRows:FormRow[] = [\r\n    {\r\n        label: '名称', \r\n        field: {name: 'name', type: 'string', maxLength: 100, required: true},\r\n    },\r\n    {\r\n        label: '描述',\r\n        field: {name: 'discription', type: 'string', maxLength: 250},\r\n        face: {type: 'textarea'}\r\n    },\r\n    {\r\n        label: '图标',\r\n        field: {name: 'icon', type: 'string', maxLength: 250},\r\n    },\r\n    {\r\n        label: 'URL',\r\n        field: {name: 'url', type: 'string', maxLength: 200},\r\n    },\r\n    {\r\n        label: '服务器',\r\n        field: {name: 'server', type: 'id'},\r\n        face: {\r\n            type: 'pick-id', \r\n            initCaption: '请选择服务器', \r\n            pick: createIdPick(idPickServerProps),\r\n            fromPicked: (item:DevModel.Server)=>{\r\n                return {\r\n                    id: item.id, \r\n                    caption: <ServerCaption {...item} />,\r\n                };\r\n            },\r\n            itemFromId: (id:number)=>store.cacheServers.get(id),\r\n        },\r\n    },\r\n    {\r\n        label: '公开',\r\n        field: {name: 'public', type: 'bool', defaultValue: 1}\r\n    },\r\n];\r\n\r\nexport abstract class EditBasePage extends VPage<AppController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n    protected onSubmit = async (values:any):Promise<SubmitResult> => {\r\n        await this.controller.saveApp(values);\r\n        nav.pop();\r\n        return;\r\n    }\r\n    protected page: ()=>JSX.Element;\r\n    protected form(initValues:any) {\r\n        return <TonvaForm\r\n            className=\"m-3\"\r\n            formRows={formRows} \r\n            onSubmit={this.onSubmit} initValues={initValues} />\r\n    }\r\n}\r\n\r\nexport class EditPage extends EditBasePage {\r\n    protected page = () => {\r\n        let {app} = this.controller;\r\n        let {name} = app;\r\n        return <Page header={'修改APP - ' + name} back=\"close\">\r\n            {this.form(app)}\r\n        </Page>;\r\n    }\r\n}\r\n\r\nexport class NewPage extends EditBasePage {\r\n    protected page = () => {\r\n        return <Page header={'新建APP'} back=\"close\">\r\n            {this.form({})}\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { AppController } from '.';\r\nimport { List, LMR, Badge, Muted, FA } from 'tonva-react-form';\r\nimport { DevModel } from 'model';\r\nimport { appItemIcon } from 'consts';\r\nimport { NewPage } from './editPage';\r\n\r\nexport class AppsPage extends VPage<AppController> {\r\n    async open(param:any) {\r\n        this.openPage(this.page);\r\n    }\r\n    private newItem = () => {\r\n        this.openVPage(NewPage);\r\n    }\r\n    private page = ():JSX.Element => {\r\n        let {appList, listRowClick} = this.controller;\r\n        let right = <button className='btn btn-secondary btn-sm' onClick={()=>this.newItem()}><FA name=\"plus\" /></button>;\r\n        return <Page header=\"App\" right={right}>\r\n            <List items={appList} item={{render: this.appRow, onClick: listRowClick}} />\r\n        </Page>\r\n    }\r\n    private appRow = (item:DevModel.App):JSX.Element => {\r\n        let {name, discription, url, urlDebug} = item;\r\n        let icon = appItemIcon;\r\n        let left = <Badge size=\"sm\" className=\"pt-1\"><img src={icon} /></Badge>;\r\n        let right = <div className=\"text-muted small text-right\">\r\n            {url || '-'}<br/>\r\n            {urlDebug}\r\n        </div>;\r\n        return <LMR className=\"py-1 px-3 align-items-stretch\"\r\n            left={left} right={right}>\r\n            <div className=\"px-3\">\r\n                <div><b>{name}</b></div>\r\n                <div><Muted>{discription}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { List, LMR, SearchBox } from 'tonva-react-form';\r\nimport { DevModel } from 'model';\r\nimport { UnitSpan } from 'tools';\r\nimport { store } from 'store';\r\nimport { nav, Page, VPage } from 'tonva-tools';\r\nimport { AppController } from '.';\r\n\r\nexport class SearchUqPage extends VPage<AppController> {\r\n    @observable private uqs: DevModel.UQ[];\r\n\r\n    async open() {\r\n        this.uqs = await this.controller.getMyUqs();\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private onSearch = async (key:string) => {\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.uqs = await this.controller.searchUq(key, pageStart, pageSize);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let header = <SearchBox className=\"w-100 mx-1\" \r\n            onSearch={this.onSearch}\r\n            placeholder=\"搜索UQ名字\" \r\n            maxLength={100} />;\r\n        return <Page back=\"close\" header={header}>\r\n            <List items={this.uqs} item={{render: this.row, onClick: this.controller.onUq}} />\r\n        </Page>;\r\n    });\r\n\r\n    private row = (uq: DevModel.UQ) => {\r\n        let {owner, name, discription} = uq;\r\n        return <LMR className=\"py-2 px-3\" right={discription}>\r\n            <div>{owner} / {name}</div>\r\n        </LMR>;\r\n    };\r\n}\r\n\r\n@observer\r\nexport class AppUqs extends React.Component {\r\n    @observable anySelected: boolean = false;\r\n    private list:List;\r\n    private onSelect = (item: DevModel.UQ, isSelected:boolean, anySelected:boolean) => {\r\n        this.anySelected = anySelected;\r\n    }\r\n    private row = (item: DevModel.UQ) => {\r\n        let {name, unit, discription} = item;\r\n        return <LMR className=\"p-2\" right={<small className=\"text-muted\">{discription}</small>}>\r\n            <UnitSpan id={unit} />/{name}\r\n        </LMR>;\r\n    }\r\n    private removeBind = () => {\r\n        if (this.list === null) return;\r\n        let {selectedItems} = this.list;\r\n        if (selectedItems === undefined) return;\r\n        if (selectedItems.length === 0) return;\r\n        store.dev.apps.appBindUq(\r\n            selectedItems.map(v => {\r\n                return {id:v.id, access:['*']}\r\n            }), \r\n            false);\r\n    }\r\n    render() {\r\n        let btnProps = this.anySelected?\r\n            {color:'danger', onClick:this.removeBind, icon:'trash', text:'取消'}:\r\n            {color:'primary', onClick:()=>nav.push(<Uqs/>), icon:'plus', text:'新增'};\r\n        let btn = (p)=><button \r\n            className={classNames('btn', 'btn-outline-'+p.color, 'btn-sm')} \r\n            onClick={p.onClick}>\r\n            <i className={\"fa fa-\" + p.icon} /> {p.text}关联\r\n        </button>;\r\n        let listHeader = <div className=\"va-row py-1 justify-content-center\">{btn(btnProps)}</div>;\r\n        return <Page header=\"关联UQ\">\r\n            <List ref={list=>this.list=list} header={listHeader}\r\n                items={store.dev.apps.uqs}\r\n                item={{render: this.row, onSelect: this.onSelect}} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\n@observer\r\nclass Uqs extends React.Component {\r\n    onSearch = async (key:string) => {\r\n        await store.dev.apps.searchUq(key);\r\n    }\r\n    onBind(uq: DevModel.UQ, bind: boolean) {\r\n        store.dev.apps.appBindUq([{id:uq.id, access:['*']}], bind);\r\n    }\r\n    row = (uq: DevModel.UQ) => {\r\n        let isConnected = store.dev.apps.uqs.find(a => a.id === uq.id) !== undefined;\r\n        let cn = ['btn', 'btn-sm'];\r\n        let btnContent:any, onClick:any;\r\n        if (isConnected) {\r\n            cn.push('btn-success');\r\n            onClick = ()=>this.onBind(uq, false);\r\n            btnContent = \"已关联\";\r\n        }\r\n        else {\r\n            cn.push('btn-primary');\r\n            onClick = ()=>this.onBind(uq, true);\r\n            btnContent = <span><i className=\"fa fa-check\"/> 关联</span>;\r\n        }\r\n        return <div className=\"d-flex justify-content-start py-1 px-3\">\r\n            <div className=\"align-self-center\">{uq.name + ' - ' + uq.discription}</div>\r\n            <footer className=\"ml-auto\"><button className={classNames(cn)} onClick={onClick}>{btnContent}</button></footer>\r\n        </div>\r\n    }\r\n    render() {\r\n        let header = <SearchBox className=\"w-100 mx-1\" \r\n            onSearch={this.onSearch} \r\n            placeholder=\"搜索UQ名字\" \r\n            maxLength={100} />;\r\n        return <Page back=\"close\" header={header}>\r\n            <List items={store.dev.apps.searchedUqs} item={{render: this.row}} loading={null} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { VPage, Page, nav } from 'tonva-tools';\r\nimport { AppController, UqAccess } from '.';\r\nimport { IdDates, UnitSpan, ServerSpan, UnitName } from 'tools';\r\nimport { Prop, Media, PropGrid, ListProp, DropdownActions, List, LMR } from 'tonva-react-form';\r\nimport { appIcon } from 'consts';\r\nimport { DevModel } from 'model';\r\nimport { EditPage } from './editPage';\r\nimport { AppUqs, SearchUqPage } from './appUqs';\r\n\r\nexport class AppPage extends VPage<AppController> {\r\n    /*\r\n    @observable private uqs:ListProp = {\r\n        label: '关联UQ', \r\n        type: 'list', \r\n        list: undefined, \r\n        row: UqRow\r\n    };\r\n    */\r\n\r\n    async open() {\r\n        //this.uqs.list = this.controller.uqs;\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private editItem = async () => {\r\n        await this.openVPage(EditPage);\r\n        //nav.push(<EditAppPage {...this.props} />);\r\n    }\r\n\r\n    private deleteItem = async () => {\r\n        if (confirm('真的要删除吗？系统删除时并不会检查相关引用，请谨慎') === true) {\r\n            await this.controller.deleteApp();\r\n            nav.pop();\r\n        }\r\n    }\r\n\r\n    private page = ():JSX.Element => {\r\n        let {app} = this.controller;\r\n        let {unit, name, discription, icon, server, date_init, date_update} = app;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let menuItems = [\r\n            // {icon: 'cogs', caption:'设置关联UQ', action: ()=>nav.push(<AppUqs />)},\r\n            {caption:'修改App', action:this.editItem, icon:'edit' },\r\n            {caption:'删除', action:this.deleteItem, icon:'trash-o' }\r\n        ];\r\n\r\n        let right = <DropdownActions actions={menuItems} />;\r\n\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <Media icon={icon || appIcon} main={name} discription={disp} />\r\n            },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                label: '开发号', \r\n                component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> \r\n            },\r\n            /*\r\n            {\r\n                type: 'component', \r\n                label: 'Service',\r\n                vAlign: 'stretch',\r\n                component: <ServiceRow />,\r\n            },*/\r\n            {\r\n                label: 'URL',\r\n                name: 'url',\r\n                type: 'string',                \r\n            },\r\n            {\r\n                type: 'component',\r\n                label: '服务器',\r\n                component: <ServerSpan id={server} />\r\n            },\r\n            '',\r\n            //this.uqs,\r\n        ];\r\n        let btnAddUq = <button className=\"btn btn-outline-primary btn-sm\" onClick={()=>this.openVPage(SearchUqPage)}>\r\n            增加关联\r\n        </button>;\r\n        return <Page header={'App - ' + name} right={right}>\r\n            <PropGrid rows={rows} values={app} />\r\n            <LMR className=\"mx-3 mt-3 mb-1\" right={btnAddUq}>\r\n                关联UQ\r\n            </LMR>\r\n            <List items={this.controller.uqAccesses} item={{render:this.renderUqRow, onClick:this.uqClick}} />\r\n        </Page>\r\n    }\r\n\r\n    private uqClick = (uqAccess:UqAccess) => {\r\n        this.controller.onUq(uqAccess.uq);\r\n    }\r\n\r\n    private renderUqRow = (uqAccess:UqAccess, index:number):JSX.Element => {\r\n        let {uq, bind_access: access} = uqAccess;\r\n        let {name, discription, unit} = uq;\r\n        let disp: any;\r\n        let elAccess: any;\r\n        if (access && access.length > 0) {\r\n            elAccess = <> + {access.join(', ')} </>;\r\n        }\r\n        if (discription) disp = <div className=\"small text-muted\"> &nbsp; {discription}</div>;\r\n        return <LMR className=\"px-3 py-2 align-items-center\" right={disp}>\r\n            <UnitName id={unit} /> / {name} {elAccess}\r\n        </LMR>\r\n    }\r\n}\r\n/*\r\nclass UqRow extends React.Component<any> {\r\n    render() {\r\n        let {name, discription, unit} = this.props;\r\n        let disp: any;\r\n        if (discription) disp = <div className=\"small text-muted\">{discription}</div>;\r\n        return <div className='form-control-plaintext'>\r\n            <div><UnitName id={unit} /> / {name}</div>\r\n            {disp}\r\n        </div>\r\n    }\r\n}\r\n*/","import * as React from 'react';\r\nimport { VPage, Page, nav } from \"tonva-tools\";\r\nimport { AppController, UqAccess } from \".\";\r\nimport { LMR } from 'tonva-react-form';\r\n\r\nexport class UqBindPage extends VPage<AppController> {\r\n    private uqAccess: UqAccess;\r\n    private accesses: string[];\r\n    private accessChecked:{[name:string]:boolean};\r\n    async open(uqAccess: UqAccess) {\r\n        this.uqAccess = uqAccess;\r\n        let {uq, bind_access} = this.uqAccess;\r\n        let {access} = uq;\r\n        if (access) {\r\n            this.accessChecked = {};\r\n            this.accesses = access.split(',');\r\n            for (let acc of this.accesses) {\r\n                this.accessChecked[acc] = (bind_access && bind_access.find(bc => bc === acc)) !== undefined;\r\n            }\r\n        }\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private onCheckChanged = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        let {target} = evt;\r\n        this.accessChecked[target.name] = target.checked;\r\n    }\r\n\r\n    private saveUqBind = async () => {\r\n        let acc:string[] = [];\r\n        if (this.accesses) {\r\n            for (let i in this.accessChecked) {\r\n                if (this.accessChecked[i] === true) acc.push(i);\r\n            }\r\n        }\r\n        await this.controller.saveUqBind(this.uqAccess.uq, acc);\r\n        nav.pop();\r\n    }\r\n\r\n    private removeUqBind = async () => {\r\n        await this.controller.removeUqBind(this.uqAccess.uq);\r\n        nav.pop();\r\n    }\r\n\r\n    private page = ():JSX.Element => {\r\n        let {uq, bind_access} = this.uqAccess;\r\n        let {owner, name, discription, access} = uq;\r\n        let btnDelete:any;\r\n        if (bind_access !== null && bind_access !== undefined) {\r\n            btnDelete = <button className=\"btn btn-outline-danger btn-sm\" onClick={this.removeUqBind}>取消关联</button>;\r\n        }\r\n        let checkAccessList:any;\r\n        if (this.accesses) {\r\n            checkAccessList = <div className=\"mt-3\">\r\n            {\r\n                this.accesses.map(v => {\r\n                    let checked = this.accessChecked[v];\r\n                    return <label key={v} className=\"d-inline-block mr-4\">\r\n                        <input onChange={this.onCheckChanged}\r\n                            style={{width:'1.1rem', height:'1.1rem'}} \r\n                            name={v} type=\"checkbox\" defaultChecked={checked} />&nbsp;{v}\r\n                    </label>;\r\n                })\r\n            }\r\n            </div>;\r\n        }\r\n        return <Page header=\"关联UQ\">\r\n            <div className=\"m-3 py-3 px-3 bg-white border\">\r\n                <div>{owner} / {name}</div>\r\n                <div className=\"text-muted\">{discription}</div>\r\n                {checkAccessList}\r\n                <LMR className=\"pt-3\" right={btnDelete}>\r\n                    <button className=\"btn btn-primary btn-sm\" onClick={this.saveUqBind}>保存关联</button>\r\n                </LMR>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { observable } from 'mobx';\r\nimport { Controller } from \"tonva-tools\";\r\nimport { DevModel } from 'model';\r\nimport { devApi } from 'api';\r\nimport { AppsPage } from './appsPage';\r\nimport { AppPage } from './appPage';\r\nimport { UqBindPage } from './uqBindPage';\r\n\r\nexport interface UqAccess {\r\n    uq: DevModel.UQ;\r\n    bind_access: string[];\r\n}\r\n\r\nexport class AppController extends Controller {\r\n    private unitId: number;\r\n    app: DevModel.App;\r\n    @observable appList: DevModel.App[];\r\n    @observable uqAccesses: UqAccess[];\r\n    protected async internalStart(unitId:any) {\r\n        this.unitId = unitId;\r\n        this.appList = await devApi.apps(this.unitId);\r\n        this.openVPage(AppsPage);\r\n    }\r\n\r\n    listRowClick = async (item:DevModel.App) => {\r\n        this.app = item;\r\n        let ret = await devApi.loadAppUqs(item.id);\r\n        this.uqAccesses = ret.map(v => {\r\n            let {owner, access, id, name, discription, unit, date_init, date_update, bind_access} = v;\r\n            return {\r\n                uq: {\r\n                    id: id,\r\n                    name: name,\r\n                    discription: discription,\r\n                    unit: unit,\r\n                    access: access,\r\n                    owner: owner,\r\n                    date_init: date_init,\r\n                    date_update: date_update, \r\n                    service_count: undefined,\r\n                },\r\n                uqOwner: owner,\r\n                bind_access: bind_access && bind_access.split(',')\r\n            }\r\n        });\r\n        this.openVPage(AppPage);\r\n    }\r\n\r\n    saveApp = async (values: DevModel.App) => {\r\n        let app = _.clone(values);\r\n        app.unit = this.unitId;\r\n        let ret = await devApi.saveApp(app);\r\n        app.id = ret;\r\n        this.appList.push(app);\r\n    }\r\n\r\n    deleteApp = async () => {\r\n        await devApi.delApp(this.unitId, this.app.id);\r\n        let index = this.appList.findIndex(v => v.id === this.app.id);\r\n        if (index >= 0) this.appList.splice(index, 1);\r\n    }\r\n\r\n    searchUq = async (key:string, pageStart:number, pageSize:number) => {\r\n        return await devApi.searchUq(this.unitId, key, pageStart, pageSize);\r\n    }\r\n\r\n    getMyUqs = async () => {\r\n        return await devApi.getMyUqs(this.unitId);\r\n    }\r\n\r\n    onUq = (uq: DevModel.UQ) => {\r\n        let uqAccess:UqAccess = this.uqAccesses.find(v => v.uq.id === uq.id);\r\n        if (uqAccess === undefined) {\r\n            uqAccess = {\r\n                uq: uq,\r\n                bind_access: undefined,\r\n            }\r\n        }\r\n        else {\r\n            let access = uqAccess.bind_access;\r\n            if (access === null || access === undefined) uqAccess.bind_access = [];\r\n        }\r\n        this.openVPage(UqBindPage, uqAccess);\r\n    }\r\n\r\n    // accesses = undefined, 表示删除\r\n    private buildBindUqs(uq: DevModel.UQ, accesses?:string[]) {\r\n        let uqs:{id:number, access:string[]}[] = [];\r\n        let isNew = true;\r\n        for (let ua of this.uqAccesses) {\r\n            let {uq:uaUq, bind_access} = ua;\r\n            if (uaUq.id === uq.id) {\r\n                if (accesses === undefined) continue;\r\n                bind_access = accesses;\r\n                isNew = false;\r\n            }\r\n            uqs.push({\r\n                id: uaUq.id,\r\n                access: bind_access || [],\r\n            });\r\n        }\r\n        if (accesses !== undefined && isNew === true) {\r\n            uqs.push({id: uq.id, access: accesses});\r\n        }\r\n        return uqs;\r\n    }\r\n\r\n    saveUqBind = async (uq: DevModel.UQ, accesses:string[]) => {\r\n        let uqs:{id:number, access:string[]}[] = this.buildBindUqs(uq, accesses);\r\n        await devApi.appBindUq(this.unitId, this.app.id, uqs);\r\n        if (uqs.length > this.uqAccesses.length) {\r\n            this.uqAccesses.unshift({\r\n                uq: uq,\r\n                bind_access: accesses,\r\n            });\r\n        }\r\n        else {\r\n            let ua = this.uqAccesses.find(v => v.uq.id === uq.id);\r\n            ua.bind_access = accesses;\r\n        }\r\n    }\r\n\r\n    removeUqBind = async (uq: DevModel.UQ) => {\r\n        let uqs:{id:number, access:string[]}[] = this.buildBindUqs(uq);\r\n        await devApi.appBindUq(this.unitId, this.app.id, uqs);\r\n        let index = this.uqAccesses.findIndex(v => v.uq.id === uq.id);\r\n        if (index>=0) this.uqAccesses.splice(index, 1);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {List, EasyDate, LMR, Muted} from 'tonva-react-form';\r\nimport {DevModel} from '../../model';\r\nimport {store} from '../../store';\r\n\r\ninterface State {\r\n    files: any[];\r\n    compiled?: string;\r\n    text?: string;\r\n}\r\n\r\nexport interface UpUploadProps {\r\n    uq: DevModel.UQ;\r\n    services: DevModel.Service[];\r\n}\r\n\r\nexport class UqUpload extends React.Component<UpUploadProps, State> {\r\n    private fileInput: HTMLInputElement;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            files: undefined,\r\n        }\r\n    }\r\n    private onFilesChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        let upFiles:any[] = [];\r\n        let {files} = evt.target;\r\n        let len = files.length;\r\n        for (let i=0; i<len; i++) {\r\n            upFiles.push(files[i]);\r\n        }\r\n        this.setState({\r\n            files: upFiles,\r\n        });\r\n    }\r\n    fileRender(file, index):JSX.Element {\r\n        let {name, size, lastModifiedDate} = file;\r\n        function sz():string {\r\n            let n:number, u:string;\r\n            if (size < 1024) {\r\n                n = size; u = 'b';\r\n            }\r\n            else if (size < 1024*1024) {\r\n                n = Math.trunc((size / 1024) * 100)/100; u = 'k';\r\n            }\r\n            else {\r\n                n = Math.trunc((size / 1024 / 1024) * 100)/100; u = 'm';\r\n            }\r\n            return n + ' ' + u;\r\n        }\r\n        return <LMR className=\"px-2 py-1\" right={<Muted>{sz()}</Muted>}>\r\n            <div>{name}</div>\r\n            <div><Muted>修改日期: <EasyDate date={lastModifiedDate} /></Muted></div>\r\n        </LMR>;\r\n    }\r\n    private fileClick = (file:any) => {\r\n        let fr = new FileReader();\r\n        fr.onload = function(f) {\r\n            //alert(this.result);\r\n            nav.push(<UqPage name={file.name} content={this.result} />)\r\n        }\r\n        fr.readAsText(file, \"utf8\");\r\n    }\r\n    private onSubmit = (evt:React.FormEvent<any>) => {\r\n        evt.preventDefault();\r\n    }\r\n\r\n    private async update(thoroughly:boolean) {\r\n        var files:FileList = this.fileInput.files;\r\n        var data = new FormData();\r\n        let len = files.length;\r\n        for (let i=0; i<len; i++) {\r\n            let file = files[i];\r\n            data.append('files[]', file, file.name);\r\n        }\r\n  \r\n        let url = store.uqServer + 'uq-compile/' + this.props.uq.id + '/update';\r\n        if (thoroughly === true) url += '-thoroughly';\r\n        try {\r\n            let abortController = new AbortController();\r\n            let res = await fetch(url, {\r\n                method: \"POST\",\r\n                body: data,\r\n                signal: abortController.signal,\r\n            });\r\n            nav.push(<CompileResult {...this.props} res={res} abortController={abortController} />);\r\n        }\r\n        catch (e) {\r\n            console.error('%s %s', url, e);\r\n        }\r\n    }\r\n    private onUpdate = async () => {\r\n        let thoroughly = false;\r\n        await this.update(thoroughly);\r\n    }\r\n    private onUpdateThoroughly = async () => {\r\n        let thoroughly = true;\r\n        await this.update(thoroughly);\r\n    }\r\n    render() {\r\n        let {files} = this.state;\r\n        let fileList:any;\r\n        if (files !== undefined) {\r\n            fileList = <List \r\n                className=\"my-3\" \r\n                items={files} \r\n                item={{render: this.fileRender, onClick: this.fileClick}}/>;\r\n        }\r\n        let button:any;\r\n        if (files !== undefined && files.length > 0) {\r\n            button = <div className=\"my-2 d-flex\">\r\n                <button className=\"btn btn-success\" type=\"submit\" onClick={this.onUpdate}>优化编译</button>\r\n                <div className=\"py-2 flex-grow-1\" />\r\n                <button className=\"btn btn-outline-warning\"\r\n                    type=\"submit\" onClick={this.onUpdateThoroughly}>完全编译</button>\r\n            </div>;\r\n        }\r\n        return <Page header={\"编译 - \" + this.props.uq.name}>\r\n            <div className=\"py-2 px-3\">\r\n                <div>请选择UQ源代码文件</div>\r\n                <form className=\"my-1\" encType=\"multipart/form-data\" onSubmit={this.onSubmit}>\r\n                    <div className=\"my-1\">\r\n                        <input ref={(fileInput) => this.fileInput=fileInput}type=\"file\" id=\"photo\" \r\n                            className=\"w-100 form-control-file\" name=\"files\" multiple={true} \r\n                            onChange={this.onFilesChange} />\r\n                    </div>\r\n                    {fileList}\r\n                    {button}\r\n                </form>\r\n                <pre>{this.state.compiled}</pre>\r\n                <div>{this.state.text}</div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n\r\ninterface UqPgeProps {\r\n    name: string;\r\n    content: string|ArrayBuffer;\r\n}\r\nclass UqPage extends React.Component<UqPgeProps> {\r\n    render() {\r\n        return <Page header={this.props.name}>\r\n            <pre className=\"px-3 py-2\">{this.props.content}</pre>\r\n        </Page>;\r\n    }\r\n}\r\n\r\ninterface CompileResultProps {\r\n    res: Response;\r\n    abortController: AbortController;\r\n}\r\ninterface CompileResultState {\r\n    texts: string[];\r\n    seconds: number;\r\n}\r\nclass CompileResult extends React.Component<CompileResultProps, CompileResultState> {\r\n    private texts: string[];\r\n    private timeHandler:any;\r\n    constructor(props) {\r\n        super(props);\r\n        this.texts = [];\r\n        this.state = {\r\n            texts: this.texts,\r\n            seconds: -1,\r\n        }\r\n    }\r\n    componentWillMount() {\r\n        nav.regConfirmClose(async ():Promise<boolean>=>{\r\n            if (this.state.seconds>=0) return true;\r\n            return new Promise<boolean>((resolve, reject) => {\r\n                try {\r\n                    if (confirm('正在编译中，真的要中止吗？') === true) {\r\n                        try {\r\n                            this.props.abortController.abort();\r\n                        }\r\n                        catch (err) {\r\n                            console.error(err);\r\n                        }\r\n                        resolve(true);\r\n                    }\r\n                    else {\r\n                        resolve(false);\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    reject(err);\r\n                }\r\n            })\r\n        });\r\n    }\r\n    private clearTimeHandler() {\r\n        if (this.timeHandler !== undefined) {\r\n            clearTimeout(this.timeHandler);\r\n            this.timeHandler = undefined;\r\n        }\r\n    }\r\n    private getParent(el:HTMLElement):HTMLElement {\r\n        if (!el) return;\r\n        if (el.tagName === 'MAIN') return el;\r\n        return this.getParent(el.parentElement);\r\n    }\r\n    private scrollToBottom(defer:number = 100) {\r\n        this.clearTimeHandler();\r\n        let that = this;\r\n        this.timeHandler = setTimeout(() => {\r\n            var pane = document.getElementById('bottomDiv');\r\n            pane && pane.scrollIntoView();\r\n            /*\r\n            if (pane !== undefined) {\r\n                let childNodes = pane.childNodes;\r\n                let last = childNodes.item(childNodes.length-1);\r\n                (last as HTMLElement).scrollIntoView();\r\n            }\r\n            */\r\n            that.clearTimeHandler();\r\n        }, defer);\r\n    }\r\n    private topIntoView() {\r\n        var pane = document.getElementById('topDiv');\r\n        pane && pane.scrollIntoView();\r\n        /*\r\n        let childNodes = pane.childNodes;\r\n        let len = childNodes.length;\r\n        if (len === 0) return;\r\n        let first = childNodes.item(0);\r\n        (first as HTMLElement).scrollIntoView();\r\n        */\r\n    }\r\n    private bottomIntoView() {\r\n        var pane = document.getElementById('bottomDiv');\r\n        pane && pane.scrollIntoView();\r\n        /*\r\n        let childNodes = pane.childNodes;\r\n        let len = childNodes.length;\r\n        if (len === 0) return;\r\n        let last = childNodes.item(len-1);\r\n        (last as HTMLElement).scrollIntoView();\r\n        */\r\n    }\r\n    private doubleClick = () => {\r\n        var pane = document.getElementById('scrollDiv');\r\n        let main = this.getParent(pane);\r\n        if (!main) return;\r\n        if (main.scrollTop >= main.scrollHeight / 2) {\r\n            this.topIntoView();\r\n        }\r\n        else {\r\n            this.bottomIntoView();\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        let that = this;\r\n        let time = new Date();\r\n        function consume(reader: ReadableStreamReader) {\r\n            var total = 0\r\n            return new Promise((resolve, reject) => {\r\n                function uintToString(uintArray):string {\r\n                    var encodedString = String.fromCharCode.apply(null, uintArray),\r\n                        decodedString = decodeURIComponent(escape(encodedString));\r\n                    return decodedString;\r\n                }\r\n                function pump() {\r\n                    reader.read().then(({done, value}) => {\r\n                        if (done) {\r\n                            that.scrollToBottom();\r\n                            that.setState({\r\n                                seconds: (new Date().getTime() - time.getTime()),\r\n                            })\r\n                            resolve();\r\n                            return;\r\n                        }\r\n                        let text = uintToString(value);\r\n                        that.texts.push(text);\r\n                        that.setState({\r\n                            texts: that.texts,\r\n                        });\r\n                        total += value.byteLength;\r\n                        that.scrollToBottom();\r\n                        pump();\r\n                    }).catch(reject)\r\n                }\r\n                pump();\r\n            });\r\n        }\r\n        try {\r\n            await consume(this.props.res.body.getReader());\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n    render() {\r\n        let {seconds, texts} = this.state;\r\n        return <Page header={seconds>=0? \"编译完成\" : \"编译中...\"} back=\"close\">\r\n            <div id='topDiv' />\r\n            <div id='scrollDiv'\r\n                onDoubleClick={this.doubleClick} \r\n                className='py-2 px-3' \r\n                style={{wordWrap: 'break-word', whiteSpace: 'normal'}}>\r\n                {texts.map((v, i) => <pre style={{whiteSpace: 'pre-wrap'}} key={i}>{v}</pre>)}\r\n            </div>\r\n            {seconds>=0? <div className='px-3 pb-3' style={{color: 'red', fontWeight: 'bold'}}>\r\n                编译完成。共计用时{Math.floor(seconds/1000)}秒\r\n            </div> : undefined}\r\n            <div id='bottomDiv' />\r\n        </Page>;\r\n    }\r\n}","import * as React from 'react';\r\nimport { DevModel } from \"model\";\r\nimport { IdPickProps, createIdPick } from 'createIdPick';\r\nimport { store } from 'store';\r\nimport { Field, FormRow, StringFace, TextAreaFace, TonvaForm, SubmitResult } from 'tonva-react-form';\r\nimport { UQController } from '.';\r\nimport { VPage, nav, Page } from 'tonva-tools';\r\n\r\nconst ServerCaption = (item:DevModel.Server) => {\r\n    let {discription, cloud, ip} = item;\r\n    return <>{discription} {cloud} {ip}</>;\r\n}\r\n\r\nconst idPickServerProps: IdPickProps = {\r\n    caption: '选择服务器',\r\n    searchPlaceHolder: '搜索服务器',\r\n    candidateItems: async (params:any, key:string) => {\r\n        await store.dev.searchServer.first(key);\r\n        return store.dev.searchServer.items;\r\n    },\r\n    moreCandidates: async () => {\r\n        await store.dev.searchServer.more();\r\n    },\r\n    row: (item:DevModel.Server, index:number) => {\r\n        return <div className=\"px-3 py-2\"><ServerCaption {...item} /></div>;\r\n    },\r\n};\r\n\r\nconst urlField:Field = {name: 'url', type: 'string', required:true, maxLength:200};\r\nconst serverField:Field = {name: 'server', type: 'id'};\r\nconst dbTypeField:Field = {name: 'db_type', type: 'string', maxLength:20, defaultValue:'mysql'};\r\nconst dbField:Field = {name: 'db', type: 'string', maxLength:50, required: true};\r\nconst connectionField:Field = {name:'connection', type:'string', maxLength:250};\r\n\r\nconst urlRow = {\r\n    label: 'URL',\r\n    field: urlField,\r\n};\r\n\r\nconst serverRow = {\r\n    label: '服务器', \r\n    field: serverField,\r\n    face: {\r\n        type: 'pick-id', \r\n        initCaption: '请选择服务器', \r\n        pick: createIdPick(idPickServerProps), //this.idPick,\r\n        fromPicked: (item:DevModel.Server)=>{\r\n            return {\r\n                id: item.id, \r\n                caption: <ServerCaption {...item} />,\r\n            };\r\n        },\r\n        itemFromId: (id:number)=>store.cacheServers.get(id),\r\n    },\r\n};\r\n\r\nconst dbTypeRow:FormRow = {\r\n    label: '数据库类型',\r\n    field: dbTypeField,\r\n    face: {\r\n        type: 'string',\r\n        readonly: true,\r\n    } as StringFace\r\n};\r\n\r\nconst dbRow = {\r\n    label: '数据库名字',\r\n    field: dbField,\r\n};\r\n\r\nconst connectionRow = {\r\n    label: '连接字符串',\r\n    field: connectionField,\r\n    face: {\r\n        type: 'textarea',\r\n        maxLength: 250,\r\n        rows: 8,\r\n    } as TextAreaFace,\r\n};\r\n\r\nexport class NewServicePage extends VPage<UQController> {\r\n    private tonvaForm:TonvaForm;\r\n    private formRows:FormRow[] = [\r\n        urlRow,\r\n        serverRow,\r\n        dbTypeRow,\r\n        dbRow,\r\n        connectionRow\r\n    ];\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n    private onSubmit = async (values:any):Promise<SubmitResult | undefined> => {\r\n        values.type = 2; // uq type, to be removed\r\n        values.bindId = this.controller.uq.id;\r\n        let ret = await this.controller.saveService(values);\r\n        if (ret === 0) {\r\n            if (this.tonvaForm !== undefined) {\r\n                this.tonvaForm.formView.setError('url', '已经有Service使用这个url');\r\n            }\r\n            return;\r\n        }\r\n        nav.pop();\r\n        return;\r\n    }\r\n    private page = () => {\r\n        return <Page header=\"新建Service\">\r\n            <TonvaForm ref={t=>this.tonvaForm=t} className=\"m-3\" formRows={this.formRows} onSubmit={this.onSubmit} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { Page, VPage, nav } from \"tonva-tools\";\r\nimport { UQController } from '.';\r\nimport { DevModel } from 'model';\r\nimport { Prop, PropGrid } from 'tonva-react-form';\r\nimport { StringValueEdit, ServerSpan, TextValueEdit } from 'tools';\r\n\r\nexport class ServicePage extends VPage<UQController> {\r\n    @observable private service: DevModel.Service;\r\n    async open(service: DevModel.Service) {\r\n        this.service = service;\r\n        this.openPage(this.page);\r\n    }\r\n    private async changeProp(prop:string, value:any):Promise<any> {\r\n        return await this.controller.changeServiceProp(this.service, prop, value);\r\n    }\r\n    private onUrlChanged = async (value:any, orgValue:any):Promise<string|void> => {\r\n        let ret = await this.changeProp('url', value);\r\n        if (ret === 0) {\r\n            return 'URL已经被使用了';\r\n        }\r\n        this.service.url = value;\r\n    }\r\n    private onDbChanged = async (value:any, orgValue:any):Promise<string|void> => {\r\n        let ret = await this.changeProp('db', value);\r\n        if (ret === 0) {\r\n            return 'Db已经被使用了';\r\n        }\r\n        this.service.db = value;\r\n    }\r\n    private onDbTypeChanged = async (value:string, orgValue:any):Promise<string|void> => {\r\n        if (value === undefined || value === null) return;\r\n        if (value.toLowerCase().trim() !== 'mysql') return '目前只支持mysql';\r\n        let ret = await this.changeProp('db_type', value);\r\n        this.service.db_type = value;\r\n    }\r\n    private onConnectionChanged = async (value:string, orgValue:any):Promise<string|void> => {        \r\n        await this.changeProp('connection', value);\r\n        this.service.connection = value;\r\n    }\r\n    private onDeleteClick = async () => {\r\n        if (confirm(\"真的要删除Service吗？删除了不可恢复，需要重新录入。\")!==true) return;\r\n        await this.controller.delService(this.service);\r\n        nav.pop();\r\n    }\r\n    private page = () => {\r\n        let {uq} = this.controller;\r\n        let {type, name, discription, server, url, db, db_type, connection} = this.service;\r\n        let rows:Prop[] = [\r\n            '',\r\n            /*\r\n            {\r\n                type: 'component',\r\n                component: <div className=\"px-3 py-2\">\r\n                    <b>{name}</b><br/><Muted>{discription}</Muted>\r\n                </div>,\r\n            },\r\n            '',*/\r\n            {\r\n                type: 'string',\r\n                name: 'url',\r\n                label: 'URL',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"修改URL\"\r\n                    value={url}\r\n                    onChanged={this.onUrlChanged} />)\r\n            },\r\n            {\r\n                type: 'component',\r\n                label: '服务器',\r\n                component: <ServerSpan id={server} />\r\n            },\r\n            {\r\n                type: 'string',\r\n                name: 'db_type',\r\n                label: '数据库类型',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"数据库类型\"\r\n                    value={db_type}\r\n                    onChanged={this.onDbTypeChanged} />)\r\n            },\r\n            {\r\n                type: 'string',\r\n                name: 'db',\r\n                label: '数据库名',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"数据库名字\"\r\n                    value={db}\r\n                    onChanged={this.onDbChanged} />)\r\n            },\r\n            {\r\n                type: 'string',\r\n                name: 'connection',\r\n                label: '连接字符串',\r\n                onClick: ()=>nav.push(<TextValueEdit\r\n                    title=\"连接字符串\"\r\n                    value={connection}\r\n                    onChanged={this.onConnectionChanged} />)\r\n            },\r\n        ];\r\n        let right = <button onClick={this.onDeleteClick} className=\"btn btn-success\">删除</button>;\r\n        return <Page header={'UQ - ' + uq.name} right={right}>\r\n            <PropGrid rows={rows} values={this.service} />\r\n        </Page>\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { UQController } from \".\";\r\nimport { VPage, nav, Page } from \"tonva-tools\";\r\nimport { SubmitResult, TonvaForm } from \"tonva-react-form\";\r\n\r\nconst formRows = [\r\n    {\r\n        label: '名称', \r\n        field: {name: 'name', type: 'string', maxLength: 100, required: true},\r\n    },\r\n    {\r\n        label: '描述',\r\n        field: {name: 'discription', type: 'string', maxLength: 250},\r\n        face: {type: 'textarea'}\r\n    },\r\n    //{\r\n    //    label: '入口',\r\n    //    field: {name: 'access', type: 'string', maxLength: 250},\r\n    //    face: {type: 'textarea', placeholder: '逗号分隔的入口名'}\r\n    //},\r\n];\r\n\r\n\r\nexport abstract class EditBasePage extends VPage<UQController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n    protected onSubmit = async (values:any):Promise<SubmitResult> => {\r\n        await this.controller.saveUq(values);\r\n        nav.pop();\r\n        return;\r\n    }\r\n    protected page: ()=>JSX.Element;\r\n    protected form(initValues:any):JSX.Element {\r\n        return <TonvaForm\r\n            className=\"m-3\"\r\n            formRows={formRows} \r\n            onSubmit={this.onSubmit} initValues={initValues} />\r\n    }\r\n}\r\n\r\nexport class EditPage extends EditBasePage {\r\n    protected page = () => {\r\n        let {uq} = this.controller;\r\n        let {name} = uq;\r\n        return <Page header={'修改UQ - ' + name} back=\"close\">\r\n            {this.form(uq)}\r\n        </Page>;\r\n    }\r\n}\r\n\r\nexport class NewPage extends EditBasePage {\r\n    protected page = () => {\r\n        return <Page header={'新建UQ'} back=\"close\">\r\n            {this.form({})}\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, nav } from 'tonva-tools';\r\nimport { UQController } from '.';\r\nimport { IdDates, UnitSpan, ServerSpan } from 'tools';\r\nimport { Prop, Media, LMR, FA, PropGrid, Muted, List, EasyDate, DropdownActions } from 'tonva-react-form';\r\nimport { appIcon } from 'consts';\r\nimport { DevModel } from 'model';\r\nimport { EditPage } from './editPage';\r\n\r\nexport class UQPage extends VPage<UQController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private editItem = async () => {\r\n        await this.openVPage(EditPage);\r\n        //nav.push(<EditAppPage {...this.props} />);\r\n    }\r\n\r\n    private deleteItem = async () => {\r\n        if (confirm('真的要删除UQ吗？') === true) {\r\n            await this.controller.deleteUq();\r\n            nav.pop();\r\n        }\r\n    }\r\n\r\n    private page = ():JSX.Element => {\r\n        let {onUqUpload, serviceClick, uq, services} = this.controller;\r\n        let {id, name, discription, access, unit, date_init, date_update} = uq;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let menuItems = [\r\n            {caption:'修改UQ', action:this.editItem, icon:'edit' },\r\n            {caption:'删除', action:this.deleteItem, icon:'trash-o' }\r\n        ];\r\n        let right = <DropdownActions actions={menuItems} />;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <Media icon={appIcon} main={name} discription={disp} />\r\n            },\r\n            {\r\n                type: 'component', \r\n                label: '开发号', \r\n                component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> \r\n            },\r\n           '',\r\n           {\r\n                type: 'component', \r\n                label: '编译代码', \r\n                component: <LMR onClick={()=>onUqUpload()} className=\"w-100 py-2 cursor-pointer\" \r\n                    left=\"上传编译uq代码\" right={<FA className=\"align-self-center\" name=\"chevron-right\" />} />\r\n            },\r\n            /*\r\n            {type: 'component', label: 'ACCESS', component: <div className=\"py-2\">{\r\n                access? \r\n                    access.split(',').join(', ')\r\n                    : <Muted>(全)</Muted>\r\n            }</div> },\r\n            */\r\n        ];\r\n        return <Page header={'UQ - ' + name} right={right}>\r\n            <PropGrid rows={rows} values={uq} />\r\n            <div className=\"d-flex mx-3 mt-3 mb-1 align-items-end\">\r\n                <Muted style={{display:'block', flex:1}}>Service</Muted>\r\n                <button\r\n                    className=\"btn btn-outline-primary btn-sm\"\r\n                    onClick={()=>this.controller.showNewServicePage()}>\r\n                    增加\r\n                </button>\r\n            </div>\r\n            <List items={services} item={{render:this.renderService, onClick:serviceClick}} />\r\n        </Page>;\r\n    }\r\n    private renderService(service:DevModel.Service, index:number):JSX.Element {\r\n        let {url, server, db, db_type, compile_time} = service;\r\n        let compile = !compile_time?\r\n            <Muted>未编译</Muted> :\r\n            <><Muted>编译: </Muted><EasyDate date={compile_time}/></>;\r\n\r\n        return <LMR className=\"d-flex w-100 align-items-center cursor-pointer py-2 px-3\"\r\n            right={<small>{compile}</small>}\r\n            >\r\n            <div>\r\n                <div>{url}</div>\r\n                <div>{db_type} {db}</div>\r\n                <Muted><ServerSpan id={server} /></Muted>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { UQController } from '.';\r\nimport { List, LMR, Badge, Muted, FA } from 'tonva-react-form';\r\nimport { DevModel } from 'model';\r\nimport { appItemIcon } from 'consts';\r\nimport { NewPage } from './editPage';\r\n\r\nexport class ListPage extends VPage<UQController> {\r\n    async open(param:any) {\r\n        this.openPage(this.page);\r\n    }\r\n    private newItem = () => {\r\n        this.openVPage(NewPage);\r\n    }\r\n    private page = ():JSX.Element => {\r\n        let {uqList: list, listRowClick} = this.controller;\r\n        let right = <button className='btn btn-secondary btn-sm' onClick={()=>this.newItem()}><FA name=\"plus\" /></button>;\r\n        return <Page header=\"UQ\" right={right}>\r\n            <List items={list} item={{render: this.listRow, onClick: listRowClick}} />\r\n        </Page>\r\n    }\r\n    private listRow = (item:DevModel.UQ):JSX.Element => {\r\n        let {name, discription, service_count} = item;\r\n        let icon = appItemIcon;\r\n        return <LMR className=\"py-1 px-3 align-items-stretch\"\r\n            left={<Badge size=\"sm\" className=\"pt-1\"><img src={icon} /></Badge>}\r\n            right={<>{service_count}</>}>\r\n            <div className=\"px-3\">\r\n                <div><b>{name}</b></div>\r\n                <div><Muted>{discription}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { observable } from 'mobx';\r\nimport { nav, Page, Controller, meInFrame, VPage } from 'tonva-tools';\r\nimport { DevModel } from '../../model';\r\nimport { UqUpload, UpUploadProps } from './uqUpload';\r\nimport { devApi } from 'api';\r\nimport { NewServicePage } from './newServicePage';\r\nimport { ServicePage } from './servicePage';\r\nimport { UQPage } from './uqPage';\r\nimport { ListPage } from './listPage';\r\n\r\nexport class UQController extends Controller {\r\n    private unitId: number;\r\n    uq: DevModel.UQ;\r\n    access: string;\r\n    entities: string;\r\n    @observable uqList: DevModel.UQ[];\r\n    @observable services: DevModel.Service[];\r\n    protected async internalStart(unitId:any) {\r\n        this.unitId = unitId;\r\n        this.uqList = await devApi.uqs(this.unitId);\r\n        this.openVPage(ListPage);\r\n    }\r\n\r\n    listRowClick = async (item:DevModel.UQ) => {\r\n        this.uq = item;\r\n        await this.loadUqEntities(item.id);\r\n        this.openVPage(UQPage);\r\n    }\r\n\r\n    private async loadUqEntities(uqId: number) {\r\n        let ret = await devApi.uqGetEntities(this.unitId, uqId);\r\n        let r0 = ret[0][0];\r\n        this.access = r0.access;\r\n        this.entities = r0.entities;\r\n        this.services = ret[1];\r\n    }\r\n\r\n    serviceClick = (service: DevModel.Service) => {\r\n        this.openVPage(ServicePage, service);\r\n    }\r\n\r\n    onUqUpload = async() => {\r\n        let onDispose = () => {\r\n        };\r\n        nav.push(<UqUpload uq={this.uq} services={this.services} />, onDispose);\r\n    }\r\n\r\n    saveUq = async (values: DevModel.UQ) => {\r\n        let uq = _.clone(values);\r\n        uq.unit = this.unitId;\r\n        let ret = await devApi.saveUq(uq);\r\n        uq.id = ret;\r\n        this.uqList.push(uq);\r\n    }\r\n\r\n    deleteUq = async () => {\r\n        await devApi.delUq(this.unitId, this.uq.id);\r\n        let index = this.uqList.findIndex(v => v.id === this.uq.id);\r\n        if (index >= 0) this.uqList.splice(index);\r\n    }\r\n\r\n    async changeServiceProp(service: DevModel.Service, prop:string, value:any):Promise<any> {\r\n        return await devApi.changeServiceProp(this.unitId, service.id, prop, value);\r\n    }\r\n\r\n    async saveService(service: DevModel.Service):Promise<number> {\r\n        let svc = _.clone(service);\r\n        svc.unit = this.unitId;\r\n        let ret = await devApi.saveService(svc);\r\n        svc.id = ret;\r\n        this.services.push(svc);\r\n        return ret;\r\n    }\r\n\r\n    async delService(service: DevModel.Service) {\r\n        await devApi.delService(this.unitId, service.id);\r\n        let index = this.services.findIndex(v => v.id == service.id);\r\n        if (index >= 0) this.services.splice(index);\r\n    }\r\n\r\n    showNewServicePage = async () => {\r\n        await this.openVPage(NewServicePage);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {LMR, Badge, Muted} from 'tonva-react-form';\r\n\r\nexport interface RowProps {\r\n    icon: string;\r\n    main: string|JSX.Element;\r\n    vice: string|JSX.Element;\r\n}\r\n\r\nexport class Row extends React.Component<RowProps> {\r\n    render() {\r\n        let {icon, main, vice} = this.props;\r\n        return <LMR className=\"py-1 px-3 align-items-stretch\"\r\n            left={<Badge size=\"sm\" className=\"pt-1\"><img src={icon} /></Badge>}>\r\n            <div className=\"px-3\">\r\n                <div><b>{main}</b></div>\r\n                <div><Muted>{vice}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable, computed} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport _ from 'lodash';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {FormRow, EasyDate, Media, \r\n    Prop, ListProp, PropGrid, List, SearchBox, LMR, Badge, Muted} from 'tonva-react-form';\r\nimport {UnitSpan, IdDates, ServerSpan} from '../tools';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {DevModel} from '../model';\r\nimport {store} from '../store';\r\nimport {Row} from './row';\r\nimport {ObjViewProps} from './ObjViewProps';\r\n\r\n@observer\r\nclass Info extends React.Component<DevModel.Bus> {\r\n    /*\r\n    private rows: Prop[];\r\n    constructor(props:any) {\r\n        super(props);\r\n        let {unit, name, discription, schema, date_init, date_update} = this.props;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={name} discription={disp} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                label: 'Schema',\r\n                vAlign: 'stretch',\r\n                component: <SchemaView />,\r\n            },\r\n        ];\r\n    }*/\r\n    async componentDidMount() {\r\n        //await store.dev.buses.loadCurApis();\r\n    }\r\n    render() {\r\n        let {unit, name, discription, schema, date_init, date_update} = this.props;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={name} discription={disp} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                label: 'Schema',\r\n                vAlign: 'stretch',\r\n                component: <SchemaView />,\r\n            },\r\n        ];\r\n        return <div>\r\n            <PropGrid rows={rows} values={this.props} />\r\n        </div>\r\n    }\r\n}\r\n\r\n@observer\r\nexport class SchemaView extends React.Component {\r\n    render() {\r\n        let bus = store.dev.buses.cur;\r\n        if (bus === null) return '...';\r\n        let content = bus.schema;\r\n        return <div className=\"d-flex py-2 w-100 align-items-center\" style={{flex:1}}>\r\n            <pre>\r\n                {content}\r\n            </pre>\r\n        </div>;\r\n\r\n    }\r\n}\r\n\r\nconst busesProps:ObjViewProps<DevModel.Bus> = {\r\n    title: 'BUS',\r\n    formRows: [\r\n        {\r\n            label: '名称', \r\n            field: {name: 'name', type: 'string', maxLength: 100, required: true},\r\n        },\r\n        {\r\n            label: '描述',\r\n            field: {name: 'discription', type: 'string', maxLength: 250},\r\n            face: {type: 'textarea'}\r\n        },\r\n        {\r\n            label: 'Schema',\r\n            field: {name: 'schema', type: 'string', maxLength: 2500},\r\n            face: {type: 'textarea', rows: 8}\r\n        },\r\n    ],\r\n    row: (item:DevModel.Bus):JSX.Element => {\r\n        let {owner, name, discription} = item;\r\n        return <Row icon={appItemIcon} main={owner + ' / ' + name} vice={discription} />;\r\n    },\r\n    items: ()=>store.dev.buses,\r\n    repeated: {\r\n        name: 'name',\r\n        err: '跟已有的名称重复',\r\n    },\r\n    info: Info,\r\n};\r\n\r\nexport default busesProps;\r\n","import * as React from 'react';\r\nimport {EasyDate, Media, Prop, PropGrid} from 'tonva-react-form';\r\nimport {UnitSpan, IdDates} from '../tools';\r\nimport {Row} from './row';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {DevModel} from '../model';\r\nimport {store} from '../store';\r\nimport {ObjViewProps} from './ObjViewProps';\r\n\r\nclass Info extends React.Component<DevModel.Server> {\r\n    render() {\r\n        let {discription, cloud, ip, unit, date_init, date_update} = this.props;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={discription} discription={ip} />},\r\n            '',\r\n            {type: 'component', label: '开发号', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            {type: 'string', label: '云服务', name: 'cloud'},\r\n        ];\r\n        return <div>\r\n            <PropGrid rows={rows} values={this.props} />\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst serversProps:ObjViewProps<DevModel.Server> = {\r\n    title: 'Server',\r\n    info: Info,\r\n    formRows: [\r\n        {\r\n            label: '描述', \r\n            field: {name: 'discription', type: 'string', maxLength: 50, required: true},\r\n        },\r\n        {\r\n            label: '云服务商', \r\n            field: {name: 'cloud', type: 'string', maxLength: 20, required: true},\r\n        },\r\n        {\r\n            label: 'IP地址', \r\n            field: {name: 'ip', type: 'string', maxLength: 20},\r\n        },\r\n    ],\r\n    row: (item: DevModel.Server):JSX.Element => {\r\n        return <Row icon={appItemIcon} main={item.discription} vice={<>{item.cloud}  {item.ip}</>} />;\r\n    },\r\n    items: ()=>store.dev.servers,\r\n    repeated: {\r\n        name: 'discription',\r\n        err: '重复的描述',\r\n    }\r\n};\r\n\r\nexport default serversProps;\r\n","import * as React from 'react';\r\nimport {Step, Field, Prop, PropGrid, Media} from 'tonva-react-form';\r\nimport {UnitSpan, IdDates, ServerSpan, UqSpan, AppSpan} from '../tools';\r\nimport {Row} from './row';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {DevModel} from '../model';\r\nimport {store} from '../store';\r\nimport {ObjViewProps} from './ObjViewProps';\r\nimport {createIdPick, IdPickProps} from '../createIdPick';\r\n\r\nclass Info extends React.Component<DevModel.Service> {\r\n    render() {\r\n        let {url, type, discription, server, app, uq, unit, date_init, date_update} = this.props;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let obj:Prop;\r\n        if (app !== undefined)\r\n            obj = {type: 'component', label: 'APP', component: <div className=\"py-2\"><AppSpan id={app} isLink={true} /></div> };\r\n        else\r\n            obj = {type: 'component', label: 'UQ', component: <div className=\"py-2\"><UqSpan id={uq} isLink={true} /></div> };\r\n\r\n        let rows:Prop[] = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={discription} discription={url} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            {type: 'component', label: '服务器', component: <div className=\"py-2\"><ServerSpan id={server} isLink={true} /></div> },\r\n            obj,\r\n        ];\r\n        return <div>\r\n            <PropGrid rows={rows} values={this.props} />\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst idPickServerProps: IdPickProps = {\r\n    caption: '选择服务器',\r\n    searchPlaceHolder: '搜索服务器',\r\n    candidateItems: async (params:any, key:string) => {\r\n        await store.dev.searchServer.first(key);\r\n        return store.dev.searchServer.items;\r\n    },\r\n    moreCandidates: async () => {\r\n        await store.dev.searchServer.more();\r\n    },\r\n    row: (item:DevModel.Server, index:number) => {\r\n        return <div className=\"px-3 py-2\">{item.discription + ' ' + item.cloud + ' ' + item.ip}</div>;\r\n    },\r\n};\r\n\r\nconst idPickAppProps: IdPickProps = {\r\n    caption: '选择APP',\r\n    searchPlaceHolder: '搜索APP',\r\n    candidateItems: async (params:any, key:string) => {\r\n        await store.dev.searchApp.first(key);\r\n        return store.dev.searchApp.items;\r\n    },\r\n    moreCandidates: async () => {\r\n        await store.dev.searchApp.more();\r\n    },\r\n    row: (item:DevModel.App, index:number) => {\r\n        return <div>{item.name + ' ' + item.discription}</div>;\r\n    },\r\n};\r\n\r\nconst idPickUqProps: IdPickProps = {\r\n    caption: '选择UQ',\r\n    searchPlaceHolder: '搜索UQ',\r\n    candidateItems: async (params:any, key:string) => {\r\n        await store.dev.searchUq.first(key);\r\n        return store.dev.searchUq.items;\r\n    },\r\n    moreCandidates: async () => {\r\n        await store.dev.searchUq.more();\r\n    },\r\n    row: (item:DevModel.UQ, index:number) => {\r\n        return <div>{item.name + ' ' + item.discription}</div>;\r\n    },\r\n};\r\n\r\nconst serviceTypeNames = ['中心', '交换', 'APP', 'UQ'];\r\nconst urlField:Field = {name: 'url', type: 'string', required:true, maxLength:200};\r\nconst discriptionField:Field = {name: 'discription', type: 'string', maxLength:100};\r\nconst serverField:Field = {name: 'server', type: 'id'};\r\nconst bindTypeField:Field = {name: 'type', type: 'number'};\r\nconst bindIdField:Field = {name: 'bindId', type: 'number'};\r\nconst authField:Field = {name: 'auth', type: 'string', maxLength:200};\r\n\r\nconst urlRow = {\r\n    label: 'URL',\r\n    field: urlField,\r\n};\r\nconst discriptionRow = {\r\n    label: '描述',\r\n    field: discriptionField,\r\n};\r\n\r\nconst serverRow = {\r\n    label: '服务器', \r\n    field: serverField,\r\n    face: {\r\n        type: 'pick-id', \r\n        initCaption: '请选择服务器', \r\n        pick: createIdPick(idPickServerProps), //this.idPick,\r\n        fromPicked: (item:DevModel.Server)=>{\r\n            return {\r\n                id: item.id, \r\n                caption: item.discription + ' ' + item.ip,\r\n            };\r\n        },\r\n        itemFromId: (id:number)=>store.cacheServers.get(id),\r\n    },\r\n};\r\n\r\nconst servicesProps:ObjViewProps<DevModel.Service> = {\r\n    title: 'Service',\r\n    info: Info,\r\n    formRows: [\r\n        urlRow,\r\n        discriptionRow,\r\n        serverRow,\r\n    ],\r\n    steps: {\r\n        step1: {\r\n            formRows: [\r\n                {\r\n                    label: '服务类型', \r\n                    field: bindTypeField,\r\n                    face: {\r\n                        type: 'select', \r\n                        list: [\r\n                            {text:'APP', value:2}, \r\n                            {text:'UQ', value:3}\r\n                        ]\r\n                    }\r\n                },\r\n            ],\r\n            next: (values:any) => {\r\n                switch (values['type']) {\r\n                    case 2: return 'appStep';\r\n                    case 3: return 'uqStep';\r\n                }\r\n            },\r\n            ex: '服务类型',\r\n        },\r\n        appStep: {\r\n            formRows: [\r\n                urlRow,\r\n                discriptionRow,\r\n                serverRow,\r\n                {\r\n                    label: 'APP', \r\n                    field: bindIdField,\r\n                    face:{\r\n                        type: 'pick-id', \r\n                        initCaption: '请选择APP', \r\n                        pick: createIdPick(idPickAppProps), //this.idPick,\r\n                        fromPickedItem: (item:DevModel.App)=>{\r\n                            return {id: item.id, caption: item.name + ' ' + item.discription}\r\n                        },\r\n                    },\r\n                },\r\n            ],\r\n            next: undefined,\r\n            ex: '绑定APP'\r\n        },\r\n        uqStep: {\r\n            formRows: [\r\n                urlRow,\r\n                discriptionRow,\r\n                serverRow,\r\n                {\r\n                    label: 'UQ', \r\n                    field: bindIdField,\r\n                    face:{\r\n                        type: 'pick-id', \r\n                        initCaption: '请选择UQ', \r\n                        pick: createIdPick(idPickUqProps), //this.idPick,\r\n                        fromPickedItem: (item:DevModel.UQ)=>{\r\n                            return {id: item.id, caption: item.name + ' ' + item.discription}\r\n                        },\r\n                    },\r\n                },                \r\n                { label: 'Auth', field: authField },\r\n            ],\r\n            next: undefined,\r\n            ex: '绑定UQ',\r\n        },\r\n    },\r\n    stepHeader: (step:Step, num:number):JSX.Element => {\r\n        return <div className=\"d-flex justify-content-center align-items-center\">\r\n            <h4><small className=\"text-muted\">第{num}步</small> {step.ex}</h4>\r\n        </div>;\r\n    },\r\n    row: (item:DevModel.Service):JSX.Element => {\r\n        return <Row\r\n            icon={appItemIcon}\r\n            main={item.url}\r\n            vice={serviceTypeNames[item.type] + ': ' + item.discription} />;\r\n    },\r\n    items: ()=>store.dev.services,\r\n    repeated: {\r\n        name: 'url',\r\n        err: 'url重复',\r\n    }\r\n};\r\n\r\nexport default servicesProps;\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {FormRow, TonvaForm, Step, MultiStep, DropdownActions, Action, List, FA, SubmitResult} from 'tonva-react-form';\r\nimport {DevModel} from '../model';\r\nimport { ObjViewProps } from './ObjViewProps';\r\n\r\n@observer\r\nexport class ObjView<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    async componentDidMount() {\r\n        await this.props.items().load();\r\n    }\r\n    //converter(item:T):ListItem {\r\n    //    return this.props.converter(item);\r\n    //}\r\n    newItem() {\r\n        this.props.items().cur = undefined;\r\n        nav.push(<New {...this.props} />);\r\n    }\r\n    itemClick = (item:T) => {\r\n        this.props.items().cur = observable(item);\r\n        nav.push(<Info {...this.props} />);\r\n    }\r\n    render() {\r\n        let {title, items} = this.props;\r\n        let right = <button className='btn btn-secondary btn-sm' onClick={()=>this.newItem()}><FA name=\"plus\" /></button>;\r\n        return <Page header={title} right={right}>\r\n            <List items={items().items}\r\n                item={{render: this.props.row, onClick: this.itemClick}}\r\n                // converter={this.props.converter} \r\n                //itemClick={this.itemClick} \r\n                />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass New<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    async onSubmit(values:any):Promise<SubmitResult> {\r\n        let ret = await this.props.items().saveCur(values);\r\n        if (ret === true) {\r\n            nav.pop();\r\n        }\r\n        else {\r\n            let repeated = this.props.repeated;\r\n            //this.formView.setError(repeated.name, repeated.err);\r\n        }\r\n        return;\r\n    }\r\n    render() {\r\n        let content;\r\n        let {title, steps, stepHeader} = this.props;\r\n        let {formRows, items} = this.props;\r\n        if (steps !== undefined) {\r\n            content = <MultiStep className=\"mt-4\" header={stepHeader} steps={steps} first=\"step1\" onSubmit={this.onSubmit} />;\r\n        }\r\n        else if (formRows !== undefined) {\r\n            content = <TonvaForm \r\n                className=\"m-3\"\r\n                formRows={formRows} \r\n                onSubmit={this.onSubmit} initValues={items().cur} />;\r\n        }\r\n        else {\r\n            content = \"ObjViewProps: no steps and no formRows\";\r\n        }\r\n        return <Page header={'新增'+title}>\r\n            {content}\r\n        </Page>\r\n    }\r\n}\r\n\r\n@observer\r\nclass Info<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    private menuItems = [\r\n        {caption:'修改' + this.props.title, action:this.editItem.bind(this), icon:'edit' },\r\n        {caption:'删除', action:this.deleteItem.bind(this), icon:'trash-o' }\r\n    ];\r\n    async deleteItem() {\r\n        if (confirm('真的要删除吗？系统删除时并不会检查相关引用，请谨慎') === true) {\r\n            await this.props.items().del();\r\n            nav.pop();\r\n        }\r\n    }\r\n    editItem() {\r\n        nav.push(<Edit {...this.props} />);\r\n    }\r\n    render() {\r\n        let actions = [];\r\n        let ex = this.props.extraMenuActions;\r\n        if (ex !== undefined) actions.push(...ex);\r\n        actions.push(...this.menuItems);        \r\n        let right = <DropdownActions actions={actions} />\r\n        let item = this.props.items().cur;\r\n        return <Page header={this.props.title + ' - 详细资料'} right={right}>\r\n            <this.props.info {...item} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass Edit<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    private actions = [\r\n        {caption:'删除', action:this.deleteItem.bind(this), icon:'trash-o' }\r\n    ];\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    componentWillMount() {\r\n    }\r\n    async onSubmit(values:any):Promise<SubmitResult> {\r\n        await this.props.items().saveCur(values);\r\n        nav.pop();\r\n        return;\r\n    }\r\n    async deleteItem() {\r\n        if (confirm('真的要删除吗？系统删除时并不会检查相关引用，请谨慎') === true) {\r\n            await this.props.items().del();\r\n            nav.pop();\r\n        }\r\n    }\r\n    render() {\r\n        let right = <DropdownActions actions={this.actions} />\r\n        return <Page header={'修改 '+this.props.title} right={right} back=\"close\">\r\n            <TonvaForm \r\n                className=\"m-3\"\r\n                formRows={this.props.formRows} \r\n                onSubmit={this.onSubmit} initValues={this.props.items().cur} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { List, SearchBox, LMR, FA } from 'tonva-react-form';\r\nimport { UsersController, UserApps, AppUsers } from './cUsers';\r\n\r\nexport class VApps extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private renderRow = (appUsers: AppUsers, index:number):JSX.Element => {\r\n        let {app, users} = appUsers;\r\n        let {id, name, discription} = app;\r\n        let right = <small className=\"text-muted\">{discription}</small>;\r\n        return <div className=\"d-block px-3 py-2\">\r\n            <LMR className=\"mb-2\" right={right}>\r\n                <FA name=\"address-card-o\" className=\"text-primary mr-3\" />\r\n                <b>{name}</b>\r\n            </LMR>\r\n            <div>\r\n                <small className=\"text-muted\">用户: </small>\r\n                {users.length===0?'[无]':users.map(u => u.assigned || u.nick || u.name).join(', ')}\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {appUsersList, searchApp, onAppsClick} = this.controller;\r\n        let searchBox = <SearchBox className=\"w-100 pr-1\" \r\n            onSearch={searchApp} \r\n            placeholder=\"搜索App\" \r\n            allowEmptySearch={true} />;\r\n        return <Page header={searchBox}>\r\n            <List items={appUsersList} \r\n                item={{render: this.renderRow, onClick:onAppsClick,  key: (item=>item.app.id)}} />\r\n        </Page>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { List, SearchBox, LMR, FA } from 'tonva-react-form';\r\nimport { UsersController, UserApps } from './cUsers';\r\n\r\nexport class VUsers extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private renderRow = (userApps: UserApps, index:number):JSX.Element => {\r\n        let {user, apps} = userApps;\r\n        let {id, name, nick, icon, assigned} = user;\r\n        return <div className=\"d-block px-3 py-2\">\r\n            <div className=\"mb-2\">\r\n                <FA name=\"user-o\" className=\"text-primary mr-3\" />\r\n                <b>{assigned || nick || name}</b>\r\n            </div>\r\n            <div>\r\n                <small className=\"text-muted\">App: </small>\r\n                {apps.length===0?'[无]':apps.map(a => a.name).join(', ')}\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {userAppsList, searchUser, onUsersClick} = this.controller;\r\n        let searchBox = <SearchBox className=\"w-100 pr-1\" \r\n            onSearch={searchUser} \r\n            placeholder=\"搜索用户\" \r\n            allowEmptySearch={true} />;\r\n        return <Page header={searchBox}>\r\n            <List items={userAppsList} \r\n                item={{render: this.renderRow, onClick:onUsersClick, key: (item=>item.user.id)}} />\r\n        </Page>;\r\n    });\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { List, SearchBox, LMR, Muted } from 'tonva-react-form';\r\nimport { UsersController, UserApps, AppUsers, User } from './cUsers';\r\n\r\nexport class VApp extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curApp, curAppUsers, onAppEditUsers} = this.controller;\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={()=>onAppEditUsers()}>增减用户</button>;\r\n        return <Page header={'App - ' + (curApp.name)} right={right}>\r\n            <List items={curAppUsers} item={{render:this.renderApp}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderApp = (user: User, index:number):JSX.Element => {\r\n        let {name, nick, assigned} = user;\r\n        let content:any;\r\n        if (assigned)\r\n            content = <>{assigned} <Muted>{name}</Muted></>;\r\n        else if (nick)\r\n            content = <>{nick} <Muted>{name}</Muted></>;\r\n        else\r\n            content = <>{name}</>\r\n        return <div className=\"px-3 py-2\">{content}</div>\r\n    }\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { List, SearchBox, LMR } from 'tonva-react-form';\r\nimport { UsersController, UserApps, AppUsers, App } from './cUsers';\r\n\r\nexport class VUser extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curUser, curUserApps, onUserEditApps} = this.controller;\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={()=>onUserEditApps()}>增减App</button>;\r\n        return <Page header={'用户 - ' + (curUser.assigned || curUser.nick || curUser.name)}\r\n            right={right}>\r\n            <List items={curUserApps} item={{render:this.renderApp}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderApp = (app: App, index:number):JSX.Element => {\r\n        let {name, discription} = app;\r\n        return <div className=\"px-3 py-2\">{name} {discription}</div>\r\n    }\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { List, SearchBox, LMR, Muted } from 'tonva-react-form';\r\nimport { UsersController, UserApps, AppUsers, User, EditUser } from './cUsers';\r\n\r\nexport class VAppEditUsers extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curApp, appEditUsers, onAppEditUsers} = this.controller;\r\n        return <Page header={curApp.name + ' - 增减用户'}>\r\n            <List items={appEditUsers} item={{render:this.renderUser}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderUser = (editUser: EditUser, index:number):JSX.Element => {\r\n        let {name, nick, assigned, bind} = editUser;\r\n        let content:any;\r\n        if (assigned)\r\n            content = <>{assigned} <Muted>{name}</Muted></>;\r\n        else if (nick)\r\n            content = <>{nick} <Muted>{name}</Muted></>;\r\n        else\r\n            content = <>{name}</>\r\n        let right = <input type=\"checkbox\" defaultChecked={bind===1} \r\n            onChange={(evt)=>this.onUserChanged(editUser, evt.target.checked)} />;\r\n        return <LMR className=\"px-3 py-2\" right={right}>\r\n            {content}\r\n        </LMR>\r\n    }\r\n\r\n    private onUserChanged = async (editUser: EditUser, checked:boolean) => {\r\n        await this.controller.bindAppUser(editUser, checked);\r\n        editUser.bind = checked===true? 1: 0;\r\n    }\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { List, SearchBox, LMR } from 'tonva-react-form';\r\nimport { UsersController, UserApps, AppUsers, App, EditApp } from './cUsers';\r\n\r\nexport class VUserEditApps extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curUser, userEditApps, onUserEditApps} = this.controller;\r\n        return <Page header={(curUser.assigned || curUser.nick || curUser.name) + ' - 增减App'}>\r\n            <List items={userEditApps} item={{render:this.renderApp}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderApp = (editApp: EditApp, index:number):JSX.Element => {\r\n        let {name, discription, bind} = editApp;\r\n        let right = <input type=\"checkbox\" defaultChecked={bind===1} \r\n            onChange={(evt)=>this.onAppChanged(editApp, evt.target.checked)} />;\r\n        return <LMR className=\"px-3 py-2\" right={right}>\r\n            {name} {discription}\r\n        </LMR>\r\n    }\r\n\r\n    private onAppChanged = async (editApp: EditApp, checked:boolean) => {\r\n        await this.controller.bindUserApp(editApp, checked);\r\n        editApp.bind = checked===true? 1: 0;\r\n    }\r\n}","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { Controller, VPage, Page } from \"tonva-tools\";\r\nimport { mainApi } from 'api';\r\nimport { LMR, FA } from 'tonva-react-form';\r\nimport { VApps } from './vApps';\r\nimport { VUsers } from './vUsers';\r\nimport { VApp } from './vApp';\r\nimport { VUser } from './vUser';\r\nimport { VAppEditUsers } from './vAppEditUsers';\r\nimport { VUserEditApps } from './vUserEditApps';\r\n\r\nexport interface User {\r\n    id: number;\r\n    name: string;\r\n    nick: string;\r\n    icon: string;\r\n    assigned: string;\r\n}\r\nexport interface App {\r\n    id: number;\r\n    name: string;\r\n    discription: string;\r\n}\r\nexport interface UserApps {\r\n    user: User;\r\n    apps: App[];\r\n}\r\nexport interface AppUsers {\r\n    app: App;\r\n    users: User[];\r\n}\r\nexport interface EditApp extends App {\r\n    bind: number;   // 0: not bind, 1: bind\r\n}\r\nexport interface EditUser extends User {\r\n    bind: number;  // 0: not bind, 1: bind\r\n}\r\n\r\nexport class UsersController extends Controller {\r\n    private unitId: number;\r\n    @observable userAppsList: UserApps[];\r\n    @observable appUsersList: AppUsers[];\r\n    curUser: User;\r\n    @observable curUserApps: App[];\r\n    @observable userEditApps: EditApp[];\r\n    curApp: App;\r\n    @observable curAppUsers: User[];\r\n    @observable appEditUsers: EditUser[];\r\n\r\n    protected async internalStart(unitId:number) {\r\n        this.unitId = unitId;\r\n        let cn = \"bg-white px-3 py-2 my-1\";\r\n        let appIcon = <FA name=\"columns\" className=\"text-primary mr-3\" />;\r\n        let userIcon = <FA name=\"user-plus\" className=\"text-primary mr-3\" />;\r\n        this.openPage(<Page header=\"用户管理\">\r\n            <LMR className={cn} onClick={this.onAppUsers} left={appIcon}>App的用户</LMR>\r\n            <LMR className={cn} onClick={this.onUserApps} left={userIcon}>用户的App</LMR>\r\n        </Page>);\r\n    }\r\n\r\n    private onAppUsers = async () => {\r\n        await this.loadAppUsers(undefined);\r\n        this.openVPage(VApps);\r\n    }\r\n\r\n    private onUserApps = async () => {\r\n        await this.loadUserApps(undefined);\r\n        this.openVPage(VUsers);\r\n    }\r\n\r\n    private async loadAppUsers(key:string) {\r\n        let list:AppUsers[] = [];\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        let ret = await mainApi.unitAppUsers(this.unitId, key, pageStart, pageSize);\r\n        let apps = ret[0];\r\n        let users = ret[1];\r\n        let coll: {[id:number]:AppUsers} = {}\r\n        for (let a of apps) {\r\n            let app:App = {\r\n                id: a.id,\r\n                name: a.name,\r\n                discription: a.discription,\r\n            };\r\n            list.push(coll[a.id] = {app:app, users:[]});\r\n        }\r\n        for (let u of users) {\r\n            let user:User = {\r\n                id: u.user,\r\n                name: u.name,\r\n                nick: u.nick,\r\n                icon: u.icon,\r\n                assigned: u.assigned\r\n            }\r\n            coll[u.app].users.push(user);\r\n        }\r\n        this.appUsersList = list;\r\n    }\r\n\r\n    private async loadUserApps(key:string) {\r\n        let list:UserApps[] = [];\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        let ret = await mainApi.unitUsers(this.unitId, key, pageStart, pageSize);\r\n        let users = ret[0];\r\n        let apps = ret[1];\r\n        let coll: {[id:number]:UserApps} = {}\r\n        for (let u of users) {\r\n            let user:User = {\r\n                id: u.id,\r\n                name: u.name,\r\n                nick: u.nick,\r\n                icon: u.icon,\r\n                assigned: u.assigned\r\n            };\r\n            list.push(coll[u.id] = {user:user, apps:[]});\r\n        }\r\n        for (let a of apps) {\r\n            let app:App = {\r\n                id: a.app,\r\n                name: a.name,\r\n                discription: a.discription,\r\n            }\r\n            coll[a.user].apps.push(app);\r\n        }\r\n        this.userAppsList = list;\r\n    }\r\n\r\n    searchUser = async(key:string) => {\r\n        await this.loadUserApps(key);\r\n    }\r\n\r\n    searchApp = async(key:string) => {\r\n        await this.loadAppUsers(key);\r\n    }\r\n\r\n    onAppsClick = async (appUsers: AppUsers) => {\r\n        this.curApp = appUsers.app;\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.curAppUsers = await mainApi.unitOneAppUsers(this.unitId, this.curApp.id, pageStart, pageSize);\r\n        this.openVPage(VApp);\r\n    }\r\n\r\n    onUsersClick = async (userApps: UserApps) => {\r\n        this.curUser = userApps.user;\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.curUserApps = await mainApi.unitOneUserApps(this.unitId, this.curUser.id, pageStart, pageSize);\r\n        this.openVPage(VUser);\r\n    }\r\n\r\n    onAppEditUsers = async (key?:string) => {\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.appEditUsers = await mainApi.unitAppEditUsers(this.unitId, this.curApp.id, key, pageStart, pageSize);\r\n        this.openVPage(VAppEditUsers);\r\n    }\r\n\r\n    onUserEditApps = async (key?:string) => {\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.userEditApps = await mainApi.unitUserEditApps(this.unitId, this.curUser.id, key, pageStart, pageSize);\r\n        this.openVPage(VUserEditApps);\r\n    }\r\n\r\n    bindAppUser = async(user:User, checked:boolean) => {\r\n        await mainApi.bindAppUser(this.unitId, this.curApp.id, user.id, checked===true? 1:0);\r\n        let appUsers = this.appUsersList.find(v => v.app.id === this.curApp.id);\r\n        if (checked === true) {\r\n            this.curAppUsers.push(user);\r\n            if (appUsers) appUsers.users.push(user);\r\n        }\r\n        else {\r\n            let index = this.curAppUsers.findIndex(v => v.id === user.id);\r\n            if (index>=0) this.curAppUsers.splice(index, 1);\r\n            if (appUsers) {\r\n                index = appUsers.users.findIndex(v => v.id === user.id);\r\n                if (index>=0) appUsers.users.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    bindUserApp = async(app:App, checked:boolean) => {\r\n        await mainApi.bindAppUser(this.unitId, app.id, this.curUser.id, checked===true? 1:0);\r\n        let userApps = this.userAppsList.find(v => v.user.id === this.curUser.id);\r\n        if (checked === true) {\r\n            this.curUserApps.push(app);\r\n            if (userApps) userApps.apps.push(app);\r\n        }\r\n        else {\r\n            let index = this.curUserApps.findIndex(v => v.id === app.id);\r\n            if (index>=0) this.curUserApps.splice(index, 1);\r\n            if (userApps) {\r\n                index = userApps.apps.findIndex(v => v.id === app.id);\r\n                if (index>=0) userApps.apps.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page, meInFrame, Controller, VPage} from  'tonva-tools'; \r\nimport {List, LMR, FA, StackedFA, PropGrid, Prop, Muted} from 'tonva-react-form';\r\nimport {StringValueEdit} from './tools';\r\nimport {appIcon, appItemIcon} from './consts';\r\nimport {Unit, UnitApps, UnitAdmin, DevModel} from './model';\r\nimport {store} from './store';\r\nimport Administors from './Administors';\r\n//import DevActions from './Dev';\r\nimport AppsPage from './Apps';\r\nimport {Members} from './Members';\r\nimport { mainApi } from 'api';\r\nimport { COrganization } from 'organization';\r\nimport {\r\n    ObjViewProps, ObjView,\r\n    //appsProps, \r\n    busesProps, \r\n    serversProps, /*uqdbsProps, */servicesProps, UQController} from './Dev';\r\nimport { AppController } from './Dev';\r\nimport { UsersController } from 'Users';\r\n\r\nexport class CAdmin extends Controller {\r\n    isProduction: boolean;\r\n    adminUnits: UnitAdmin[]; // 仅仅为Admins调试用。从登录用户获取units\r\n\r\n    private async loadAdminUnits(): Promise<void> {\r\n        let ret = await mainApi.userAdminUnits();\r\n        this.adminUnits = ret[0];\r\n        if (ret.length === 1) {\r\n            meInFrame.unit = ret[0].id;\r\n            await store.loadUnit();\r\n        }\r\n    }\r\n    protected async internalStart(param?:any):Promise<void> {\r\n        store.init();\r\n        \r\n        this.isProduction = document.location.hash.startsWith('#tv');\r\n        console.log('admins isProduction %s', this.isProduction);\r\n\r\n        if (this.isProduction === false) {\r\n            await this.loadAdminUnits();\r\n            this.openVPage(VAdmin);\r\n            return;\r\n        }\r\n        await store.loadUnit();\r\n        this.openVPage(VAdmin);\r\n    /*\r\n        let user = nav.user;\r\n        if (user === undefined) {\r\n            console.log('autorun: user has logged out');\r\n            return;\r\n        }\r\n    \r\n        console.log('autorun login');\r\n        */\r\n       /*\r\n        setTimeout(async () => {\r\n            // 等待 tonva-tools 里面的initSubWin的nav.user的赋值\r\n            // 这个地方实际上有问题的，不应该这么写。程序逻辑顺序逻辑错误。\r\n            // 2018-11-5: 临时凑合用延时的方式来解决。\r\n            await store.loadUnit();\r\n            this.showVPage(VAdmin);\r\n        }, 200);\r\n        */\r\n    }\r\n}\r\n\r\nexport class VAdmin extends VPage<CAdmin> {\r\n    async open() {\r\n        let {isProduction, adminUnits} = this.controller;\r\n        if (isProduction === false) {\r\n            switch (adminUnits.length) {\r\n                default: this.openPage(this.selectUnitPage); return;\r\n                case 0: this.openPage(this.noUnitPage); return;\r\n                case 1: this.openPageElement(<AdminPage />); return;\r\n            }\r\n        }\r\n\r\n        if (store.unit === undefined) {\r\n            this.openPage(this.noUnitPage);\r\n            return;\r\n        }\r\n        this.openPageElement(<AdminPage />);\r\n    }\r\n\r\n    private selectUnitPage = () => {\r\n        return <Page header=\"选择小号\" logout={logout}>\r\n            <List items={this.controller.adminUnits} item={{render: this.renderRow, onClick: this.onRowClick}}/>\r\n        </Page>;\r\n    }\r\n\r\n    private noUnitPage = () => {\r\n        let {nick, name} = nav.user;\r\n        return <Page header=\"没有小号\" logout={logout}>\r\n            <div className=\"p-3 small text-info\">\r\n                {nick || name}: 没有需要管理的小号\r\n            </div>\r\n        </Page>\r\n    }\r\n\r\n    protected get view() {return undefined}\r\n\r\n    renderRow = (item: UnitAdmin, index: number):JSX.Element => {\r\n        return <LMR className=\"p-2\" right={'id: ' + item.id}>\r\n            <div>{item.nick || item.name}</div>\r\n        </LMR>;\r\n    }\r\n    onRowClick = async (item: UnitAdmin) => {\r\n        meInFrame.unit = item.id; // 25;\r\n        await store.loadUnit();\r\n        this.closePage();\r\n        this.openPageElement(<AdminPage />);\r\n    }\r\n}\r\n\r\nconst logout = () => {\r\n    store.logout();\r\n}\r\n\r\ninterface ActionItem {\r\n    main: string | JSX.Element;\r\n    right?: string | JSX.Element;\r\n    icon: string|JSX.Element;\r\n    page?: new (props:any) => React.Component;\r\n    //onClick: () => nav.push(<Administors />),\r\n    controller?: Controller;\r\n}\r\n\r\ninterface DevItem<T extends DevModel.ObjBase> {\r\n    title: string;\r\n    count: number;\r\n    icon: string;\r\n    objProps?: ObjViewProps<T>;\r\n    onClick?: ()=>void;\r\n}\r\n\r\ntype Item = ActionItem|DevItem<DevModel.ObjBase>|string;\r\n\r\nconst rArrow = <FA name=\"chevron-right\" />;\r\nconst typeCaptions = {\r\n    1: '开发号',\r\n    2: '小号',\r\n    3: '系统号'\r\n}\r\n@observer\r\ndefault class AdminPage extends React.Component {\r\n    private caption:string;\r\n\r\n    async componentWillMount() {\r\n        let {unit, dev} = store;\r\n        let {isAdmin, isOwner, type} = unit;\r\n        this.caption = typeCaptions[type];\r\n        /*\r\n        switch (type) {\r\n            case 1: this.caption = '开发号'; break;\r\n            case 2: this.caption = '小号'; break;\r\n            case 3: this.caption = '系统号'; break;\r\n        }*/\r\n        if ((type & 1) !== 0) {\r\n            await store.dev.loadCounts();\r\n        }\r\n    }\r\n\r\n    private appsAction:ActionItem = {\r\n        main: '启停App',\r\n        right: rArrow, //'增减',\r\n        icon: 'play-circle-o',\r\n        page: AppsPage,\r\n    };\r\n    private usersAction:ActionItem = {\r\n        main: '用户角色',\r\n        right: rArrow,\r\n        icon: 'users',\r\n        page: Members,\r\n    };\r\n    private newUsersAction:ActionItem = {\r\n        main: '用户管理',\r\n        right: rArrow,\r\n        icon: 'user-o',\r\n        controller: new UsersController(undefined),\r\n    };\r\n    /*\r\n    private devAction:Item = {\r\n        main: <DevActions />,\r\n        right: '程序开发相关管理',\r\n        icon: 'laptop',\r\n        //page: Dev,\r\n    };*/\r\n    private adminsAction:ActionItem = {\r\n        main: '管理员',\r\n        right: rArrow,\r\n        icon: 'universal-access',\r\n        page: Administors,\r\n    };\r\n\r\n    private cOrganization = new COrganization;\r\n    private organizeAction:ActionItem = {\r\n        main: this.cOrganization.label,\r\n        right: rArrow,\r\n        icon: this.cOrganization.icon,\r\n        controller: this.cOrganization\r\n    };\r\n\r\n    private noneAction:ActionItem = {\r\n        main: '请耐心等待分配任务',\r\n        icon: 'hourglass-start',\r\n    };\r\n\r\n    private buildItems():Item[] {\r\n        let {unit, dev} = store;\r\n        let {isAdmin, isOwner, type} = unit;\r\n        let items:Item[] = [];\r\n        if (isOwner === 1) {\r\n            items.push(this.adminsAction);\r\n        }\r\n        console.log('unit:', unit);\r\n        if (isAdmin === 1) {\r\n            if ((type & 2) !== 0) {\r\n                // unit\r\n                items.push(\r\n                    '小号管理',\r\n                    this.appsAction, \r\n                    //this.usersAction, \r\n                    this.newUsersAction, \r\n                    //this.organizeAction\r\n                );\r\n            }\r\n            if ((type & 1) !== 0) {\r\n                // dev unit\r\n                let {counts} = dev;\r\n                //if (counts !== undefined) {\r\n                let devItems:(DevItem<DevModel.ObjBase>|string)[] = [\r\n                    '开发号管理',\r\n                    {\r\n                        title: 'APP', \r\n                        count: counts && counts.app, \r\n                        icon: 'tablet', \r\n                        onClick: () => new AppController(undefined).start(unit.id),\r\n                    },\r\n                    {\r\n                        title: 'UQ', \r\n                        count: counts && counts.uq, \r\n                        icon: 'database', \r\n                        onClick: () => new UQController(undefined).start(unit.id),\r\n                    },\r\n                    {\r\n                        title: 'BUS', \r\n                        count: counts && counts.bus, \r\n                        icon: 'cogs', \r\n                        objProps: busesProps,\r\n                    },\r\n                    {\r\n                        title: 'Server', \r\n                        count: counts && counts.server, \r\n                        icon: 'server', \r\n                        objProps: serversProps,\r\n                    },\r\n                ];\r\n                items.push(...devItems);\r\n            //}\r\n            }\r\n        }\r\n        return items;\r\n    }\r\n    private row = (item:Item, index:number):JSX.Element => {\r\n        if (typeof item === 'string') {\r\n            return <div className=\"px-3 pt-3 pb-1 small text-muted\" style={{backgroundColor:'#f0f0f0'}}>{item}</div>;\r\n        }\r\n        let {title} = item as DevItem<DevModel.ObjBase>;\r\n        let left:any, mid:any, r:any;\r\n        if (title !== undefined) {\r\n            let {icon, count} = item as DevItem<DevModel.ObjBase>;\r\n            left = <FA className=\"text-primary\" name={icon} fixWidth={true} size=\"lg\" />;\r\n            mid = title;\r\n            r = count>0 && <span>{count}</span>;\r\n        }\r\n        else {\r\n            let {right, main, icon} = item as ActionItem;\r\n            left = typeof icon === 'string'? \r\n                <FA className=\"text-primary\" name={icon} fixWidth={true} size=\"lg\" /> :\r\n                item.icon;\r\n            mid = main;\r\n            r = <span>{right}</span>;\r\n        }\r\n        return <LMR className=\"px-3 py-2 align-items-center\" left={left} right={r}>\r\n            <div className=\"px-3\"><b>{mid}</b></div>\r\n        </LMR>;\r\n    }\r\n    private rowClick = async (item:Item) => {\r\n        let {title} = item as DevItem<DevModel.ObjBase>;\r\n        if (title !== undefined) {\r\n            let {objProps, onClick} = item as DevItem<DevModel.ObjBase>;\r\n            if (objProps !== undefined)\r\n                return nav.push(<ObjView {...objProps} />);\r\n            else {\r\n                onClick();\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            let {page:P, controller} = item as ActionItem;\r\n            if (P !== undefined)\r\n                nav.push(<P />);\r\n            else {\r\n                await controller.start(store.unit.id);\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        let unit:Unit = store.unit;\r\n        if (unit === undefined) {\r\n            console.log(\"admin render without unit\");\r\n            return null;\r\n        }\r\n        console.log(\"admin render with unit\");\r\n        let items = this.buildItems();\r\n        if (items === undefined) {\r\n            return <Page header=\"\" />;\r\n        }\r\n        let header:any, top:any;\r\n        if (unit !== undefined) {\r\n            let {name, nick, icon, discription} = unit;\r\n            header = nick || name;\r\n            if (this.caption !== undefined) header = this.caption + ' - ' + header;            \r\n            top = <LMR className='px-3 my-4 bg-white py-2 cursor-pointer' onClick={()=>nav.push(<UnitProps />)}\r\n                left={<div><img src={icon || appIcon} /></div>}>\r\n                <div className=\"px-3\">\r\n                    <h6 className='text-dark'>{name}</h6>\r\n                    <h6><small className='text-secondary'>{nick}</small></h6>\r\n                    <div className='small text-info'>{discription}</div>\r\n                </div>\r\n            </LMR>;\r\n        }\r\n        else {\r\n            header = '系统管理';\r\n        }\r\n        return <Page header={header} logout={logout}>\r\n            {top}\r\n            <List items={items} item={{render:this.row, onClick:this.rowClick}} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass UnitProps extends React.Component {\r\n    private rows:Prop[] = [\r\n        '',\r\n        {label: '标志图', type: 'string', name: 'icon'},\r\n        '=',\r\n        {label: '唯一号', type: 'string', name: 'name'},\r\n        {\r\n            label: '名称', \r\n            type: 'string',\r\n            name: 'nick', \r\n            onClick:()=>nav.push(<StringValueEdit \r\n                title=\"修改名称\"\r\n                value={store.unit.nick}\r\n                onChanged={this.onNickChanged} \r\n                info=\"好的名字会提升接受度\" />)\r\n        },\r\n        {\r\n            label: '说明',\r\n            type: 'string',\r\n            name: 'discription',\r\n            onClick:()=>nav.push(<StringValueEdit \r\n                title=\"修改说明\"\r\n                value={store.unit.discription}\r\n                onChanged={this.onDiscriptionChanged} \r\n                info=\"对小号做一个说明\" />)\r\n        },\r\n    ];\r\n    async onNickChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.unitChangeProp('nick', value);\r\n    }\r\n    async onDiscriptionChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.unitChangeProp('discription', value);\r\n    }\r\n    render() {\r\n        return <Page header=\"小号信息\">\r\n            <PropGrid rows={this.rows} values={store.unit} alignValue=\"right\" />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\nimport { nav, NavView } from 'tonva-tools';\nimport { CAdmin } from './Admin';\nimport './App.css';\n\nclass App extends React.Component {\n    async onLogined() {\n        let loc = document.location;\n        nav.clear();\n        //nav.push(<StartPage />);\n        let cAdmin = new CAdmin({});\n        await cAdmin.start();\n    }\n    render() {\n        return (\n            <NavView onLogined={this.onLogined} />\n        )\n    }\n}\n\nexport default App;\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n"],"sourceRoot":""}