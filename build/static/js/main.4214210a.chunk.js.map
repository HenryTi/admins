{"version":3,"sources":["tonva-tools/index.ts","tonva-react-form/index.ts","tonva-react-uq/controllers/CVEntity.tsx","tonva-tools/ui/nav.tsx","tonva-tools/ui/form/context.tsx","tonva-react-uq/controllers/form/viewModel.tsx","tonva-react-uq/tools/jsonStringify.ts","tonva-react-uq/tools/tv.tsx","tonva-react-uq/tools/index.ts","tonva-tools/net/guestApi.ts","tonva-tools/net/index.ts","tonva-tools/ui/index.ts","tonva-tools/net/appBridge.ts","tonva-tools/net/httpChannelUI.ts","tonva-tools/net/uqApi.ts","tonva-tools/ui/page.tsx","tonva-react-uq/controllers/link/cLink.tsx","tonva-react-uq/controllers/link/index.ts","tonva-tools/net/wsChannel.ts","tonva-react-form/uid.ts","tonva-tools/ui/image.tsx","tonva-tools/net/host.ts","tonva-tools/user.ts","tonva-tools/uid.ts","tonva-react-uq/controllers/tuid/vTuidMain.tsx","tonva-react-uq/controllers/tuid/vTuidEdit.tsx","tonva-react-uq/controllers/tuid/vTuidSelect.tsx","tonva-react-uq/controllers/tuid/vTuidView.tsx","tonva-react-uq/controllers/tuid/vTuidInfo.tsx","tonva-react-uq/controllers/tuid/pageItems.ts","tonva-react-uq/controllers/tuid/vTuidList.tsx","tonva-react-uq/controllers/tuid/cTuid.ts","tonva-react-uq/controllers/tuid/index.tsx","tonva-react-uq/controllers/form/vBand.tsx","tonva-react-uq/controllers/form/vSubmit.tsx","tonva-react-uq/controllers/form/rule.ts","tonva-react-uq/controllers/form/vField/vField.tsx","tonva-react-uq/controllers/form/vField/vComputeField.tsx","tonva-react-uq/controllers/form/vArr.tsx","tonva-react-uq/controllers/form/vField/vTuidField.tsx","tonva-react-uq/controllers/form/bandsBuilder.ts","tonva-react-uq/controllers/form/vField/buildVmField.ts","tonva-react-uq/controllers/form/vForm.tsx","tonva-react-uq/controllers/form/index.ts","tonva-tools/net/httpChannel.ts","tonva-tools/ui/res.ts","tonva-react-uq/controllers/index.ts","tonva-react-form/form/control/control.tsx","tonva-react-form/form/control/buttonsControl.tsx","tonva-react-form/form/control/charsControl.tsx","tonva-react-form/form/control/stringControl.tsx","tonva-react-form/form/control/numberControl.tsx","tonva-react-form/form/control/unknownControl.tsx","tonva-react-form/form/control/pickIdControl.tsx","tonva-react-form/form/control/pickTuidControl.tsx","tonva-react-form/form/control/pickControl.tsx","tonva-react-form/form/control/index.ts","tonva-react-form/form/control/checkControl.tsx","tonva-react-form/form/control/radioControl.tsx","tonva-react-form/form/control/selectControl.tsx","tonva-react-form/form/control/textAreaControl.tsx","tonva-react-uq/entities/entity.ts","tonva-react-uq/entities/tuid.ts","tonva-react-uq/entities/action.ts","tonva-react-uq/entities/sheet.ts","tonva-react-uq/entities/query.ts","tonva-react-uq/entities/book.ts","tonva-react-uq/entities/history.ts","tonva-react-uq/entities/map.ts","tonva-react-uq/entities/pending.ts","tonva-react-uq/entities/entities.ts","tonva-react-uq/entities/index.ts","tonva-react-form/form/rowContainer/index.tsx","tonva-tools/net/apiBase.ts","tonva-tools/ui/titleBar.tsx","tonva-react-uq/controllers/query/defaultRow.tsx","tonva-react-uq/controllers/query/vQueryMain.tsx","tonva-react-uq/controllers/query/vQuerySelect.tsx","tonva-react-uq/controllers/query/cQuery.ts","tonva-react-uq/controllers/query/index.ts","tonva-tools/ui/edit/imageItemEdit.tsx","tonva-tools/ui/loading.tsx","tonva-tools/ui/resUploader.tsx","tonva-react-form/form/index.ts","tonva-react-form/form/formView.tsx","tonva-react-uq/controllers/CApp.tsx","tonva-react-uq/controllers/icons.tsx","tonva-react-uq/controllers/ControllerUq.ts","tonva-react-uq/centerApi.ts","tonva-tools/ui/form/rules/index.ts","tonva-tools/ui/form/widgets/widget.tsx","tonva-tools/ui/form/widgets/textWidget.tsx","tonva-tools/ui/form/widgets/numberWidget.tsx","tonva-tools/ui/form/widgets/updownWidget.tsx","tonva-tools/ui/form/widgets/dateWidget.tsx","tonva-tools/ui/form/widgets/checkBoxWidget.tsx","tonva-tools/ui/form/widgets/selectWidget.tsx","tonva-tools/ui/form/widgets/idWidget.tsx","tonva-tools/ui/form/widgets/unknown.tsx","tonva-tools/ui/form/widgets/buttonWidget.tsx","tonva-tools/ui/form/widgets/arrComponent.tsx","tonva-tools/ui/form/widgets/imageWidget.tsx","tonva-tools/ui/form/widgets/factory.tsx","tonva-tools/ui/form/widgets/textareaWidget.tsx","tonva-tools/ui/form/widgets/passwordWidget.tsx","tonva-tools/ui/form/widgets/radioWidget.tsx","tonva-tools/ui/form/widgets/rangeWidget.tsx","tonva-tools/ui/form/widgets/index.ts","tonva-react-uq/controllers/sheet/vMain.tsx","tonva-react-uq/controllers/sheet/vNew.tsx","tonva-react-uq/controllers/sheet/vSheetView.tsx","tonva-react-uq/controllers/sheet/vEdit.tsx","tonva-react-uq/controllers/sheet/vSheetAction.tsx","tonva-react-uq/controllers/sheet/vSchema.tsx","tonva-react-uq/controllers/sheet/vArchives.tsx","tonva-react-uq/controllers/sheet/vList.tsx","tonva-react-uq/controllers/sheet/vArchived.tsx","tonva-react-uq/controllers/sheet/vSheet.tsx","tonva-react-uq/controllers/sheet/vSaved.tsx","tonva-react-uq/controllers/sheet/vSheetProcessing.tsx","tonva-react-uq/controllers/sheet/cSheet.ts","tonva-react-uq/controllers/sheet/index.ts","tonva-react-uq/controllers/book/vBookMain.tsx","tonva-react-uq/controllers/book/cBook.ts","tonva-react-uq/controllers/uq/vUq.tsx","tonva-react-uq/controllers/uq/cUq.tsx","tonva-react-uq/controllers/uq/index.ts","tonva-react-uq/controllers/map/vMain.tsx","tonva-react-uq/controllers/map/inputValues.tsx","tonva-react-uq/controllers/map/cMap.ts","tonva-react-uq/controllers/map/index.ts","tonva-react-uq/controllers/pending/vPendingMain.tsx","tonva-react-uq/controllers/pending/cPending.ts","tonva-react-uq/controllers/pending/index.ts","tonva-react-uq/controllers/history/vHistoryMain.tsx","tonva-react-uq/controllers/history/cHistory.ts","tonva-react-uq/controllers/history/index.ts","tonva-react-uq/controllers/action/vActionMain.tsx","tonva-react-uq/controllers/action/cAction.ts","tonva-react-uq/controllers/action/index.ts","tonva-tools/ui/edit/itemEdit.tsx","tonva-tools/net/netToken.ts","tonva-tools/entry/userApi.ts","tonva-tools/left0.ts","tonva-tools/ui/VM.tsx","tonva-tools/ui/schema/index.ts","tonva-react-form/form/TonvaForm.tsx","tonva-react-form/dropDownActions/index.tsx","tonva-react-form/easyDate/index.tsx","tonva-react-form/media.tsx","tonva-react-form/searchBox.tsx","tonva-react-form/multiStep/index.tsx","tonva-tools/pageItems.ts","tonva-tools/cacheIds.ts","tonva-react-form/components/Badge.tsx","tonva-react-form/components/LMR.tsx","tonva-react-form/components/FA.tsx","tonva-react-form/components/Muted.tsx","tonva-react-form/components/index.ts","tonva-react-form/list/base.tsx","tonva-react-form/list/clickable.tsx","tonva-react-form/list/static.tsx","tonva-react-form/list/selectable.tsx","tonva-react-form/list/index.tsx","tonva-tools/ui/form/formRes.ts","tonva-tools/ui/form/form.tsx","tonva-tools/ui/form/field.tsx","tonva-tools/ui/form/index.ts","tonva-react-form/propGrid/row.tsx","tonva-react-form/propGrid/propView.tsx","tonva-react-form/propGrid/PropGrid.tsx","tonva-react-form/propGrid/index.tsx","tonva-react-form/listView/listRow.tsx","tonva-react-form/listView/listView.tsx","tonva-tools/ui/edit/stringItemEdit.tsx","tonva-tools/ui/edit/edit.tsx","tonva-tools/ui/edit/index.tsx","tonva-tools/entry/meInfo.tsx","tonva-tools/ui/tabs/tabs.tsx","tonva-tools/ui/fetchErrorView.tsx","tonva-tools/local.ts","tonva-tools/img/logo.svg","api/mainApi.ts","api/devApi.ts","store/admins.ts","store/dev.ts","store/cacheIds.ts","store/index.ts","Administors/NewFellow.tsx","Administors/EditAdmin.tsx","Administors/index.tsx","tools/idDates.tsx","tools/span.tsx","tools/unitSpan.tsx","consts.ts","tools/uqSpan.tsx","tools/appSpan.tsx","tools/serverSpan.tsx","tools/stringValueEdit.tsx","tools/idPickPage.tsx","Apps/info.tsx","Apps/new.tsx","Apps/index.tsx","Members/newRole.tsx","Members/roleApps.tsx","Members/memberPage.tsx","Members/membersPage.tsx","Members/rolePage.tsx","Members/index.tsx","organization/ui/map/teamPerson/index.tsx","organization/ui/index.ts","organization/ui/map/index.ts","organization/ui/tuid/index.ts","organization/ui/tuid/user.tsx","organization/ui/tuid/organization.tsx","organization/ui/query/index.ts","organization/ui/query/teamPosts.tsx","organization/ui/res/index.ts","organization/ui/res/zh/CN.tsx","organization/op/vOpBinding.tsx","organization/op/vAllPosts.tsx","organization/op/vFullFunction.tsx","organization/op/vSearchUser.tsx","organization/op/cOpBinding.tsx","organization/organization.tsx","createIdPick.tsx","Dev/apps/editPage.tsx","Dev/apps/appsPage.tsx","Dev/apps/appUqs.tsx","Dev/apps/appPage.tsx","Dev/apps/uqBindPage.tsx","Dev/apps/index.tsx","Dev/uqs/uqUpload.tsx","Dev/uqs/newServicePage.tsx","Dev/uqs/servicePage.tsx","Dev/uqs/editPage.tsx","Dev/uqs/uqPage.tsx","Dev/uqs/listPage.tsx","Dev/uqs/index.tsx","Dev/row.tsx","Dev/buses.tsx","Dev/servers.tsx","Dev/services.tsx","Dev/ObjView.tsx","Users/vApps.tsx","Users/vUsers.tsx","Users/vApp.tsx","Users/vUser.tsx","Users/vAppEditUsers.tsx","Users/vUserEditApps.tsx","Users/VAddUser.tsx","Users/cUsers.tsx","Admin.tsx","App.tsx","registerServiceWorker.ts","index.tsx"],"names":["_left0__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d","__webpack_exports__","_net__WEBPACK_IMPORTED_MODULE_2__","_ui__WEBPACK_IMPORTED_MODULE_3__","o","_pageItems__WEBPACK_IMPORTED_MODULE_5__","_cacheIds__WEBPACK_IMPORTED_MODULE_6__","_form__WEBPACK_IMPORTED_MODULE_0__","_list__WEBPACK_IMPORTED_MODULE_1__","_dropDownActions__WEBPACK_IMPORTED_MODULE_2__","_easyDate__WEBPACK_IMPORTED_MODULE_3__","_propGrid__WEBPACK_IMPORTED_MODULE_4__","_components__WEBPACK_IMPORTED_MODULE_5__","_media__WEBPACK_IMPORTED_MODULE_6__","_searchBox__WEBPACK_IMPORTED_MODULE_8__","_multiStep__WEBPACK_IMPORTED_MODULE_9__","CEntity","_ControllerUq__WEBPACK_IMPORTED_MODULE_3__","[object Object]","cUq","entity","ui","res","super","Object","setPrototypeOf","this","x","name","typeName","label","icon","_icons__WEBPACK_IMPORTED_MODULE_2__","loadSchema","onSubmit","values","mode","options","buildFormOptions","ret","_form__WEBPACK_IMPORTED_MODULE_1__","setValues","none","submitCaption","arrNewCaption","arrEditCaption","arrTitleNewButton","fields","arrFields","undefined","new","formUI","form","arrs","inputs","buildInputs","buildFieldsInputs","arr","items","arrFieldInputs","field","_tuid","fieldUI","select","buildSelect","content","buildContent","placeHolder","getTuidPlaceHolder","__awaiter","_ownerField","cTuidSelect","cSelectFrom","param","getValue","autoList","console","log","call","removeCeased","id","idFromItem","useId","queryName","cQuerySelect","VEntity","tonva_tools__WEBPACK_IMPORTED_MODULE_0__","controller","createForm","mobileHeaderStyle","RegExp","test","navigator","userAgent","minHeight","logMark","logs","stackKey","NavView","react__WEBPACK_IMPORTED_MODULE_0__","props","waitCount","isHistoryBack","clearError","setState","fetchError","back","bind","navBack","stack","state","wait","window","addEventListener","nav","set","start","level","length","waitTimeHandler","global","setTimeout","clearTimeout","err","error","unauthorized","showLogin","view","disposer","clear","push","history","pushState","key","ceased","refresh","item","pop","dispose","p","i","len","backLevel","popAndDispose","find","v","confirmClose","confirm","self","top","postMessage","type","message","elWait","elError","className","_fetchErrorView__WEBPACK_IMPORTED_MODULE_4__","assign","map","index","style","visibility","Nav","local","_local__WEBPACK_IMPORTED_MODULE_6__","user","lang","district","_res__WEBPACK_IMPORTED_MODULE_9__","language","culture","guest","g","get","handler","ws","onWsReceiveAny","handlerId","endWsReceive","msg","receive","unitRes","fetch","json","unit","unitName","_net__WEBPACK_IMPORTED_MODULE_7__","getUnitName","unitId","unitFromName","_page__WEBPACK_IMPORTED_MODULE_2__","header","_loading__WEBPACK_IMPORTED_MODULE_10__","url","resHost","centerHost","resUrl","wsHost","loadUnit","setGuest","hash","document","location","origin","isInFrame","startsWith","mif","_net_appBridge__WEBPACK_IMPORTED_MODULE_5__","_net_wsChannel__WEBPACK_IMPORTED_MODULE_8__","parent","logined","notLogined","onLogined","_net_netToken__WEBPACK_IMPORTED_MODULE_3__","token","callback","connect","JSON","stringify","saveLocalUser","showAppView","withBack","lv","e","then","loginView","default","onClick","logout","logoutClear","cp","ChangePasswordPage","startWait","endWait","onError","show","replace","topKey","popTo","ceaseTop","regConfirmClose","confirmBox","apiId","sheetType","sheetId","Promise","resolve","reject","sheet","includes","uh","src","open","date","Date","getTime","toTimeString","step","__decorate","mobx__WEBPACK_IMPORTED_MODULE_1__","Context","uiSchema","data","inNode","isRow","widgets","errors","errorWidgets","renderErrors","mobx_react__WEBPACK_IMPORTED_MODULE_2__","initData","rules","Array","isArray","arrName","subContexts","arrRowContexts","itemName","value","widget","setValue","getDisabled","setDisabled","getReadOnly","setReadOnly","getVisible","setVisible","checkRules","j","checkFieldRules","clearContextErrors","rule","setError","rowContext","removeErrors","checkContextRules","setContextError","addErrorWidget","clearContextError","findIndex","pos","splice","hasError","checkHasError","rowKeySeed","RowContext","parentContext","arrSchema","uiArr","rowKey","itemSchemas","parentData","FormContext","ContextContainer","ViewModel","PureJSONContent","JSONContent","RowContent","mobx_react__WEBPACK_IMPORTED_MODULE_1__","_tools__WEBPACK_IMPORTED_MODULE_2__","vm","replacer","substr","jsonStringify","Tv","index_module","tuidValue","nullUI","ttv","react","bi","_$tuid","_$com","t","controllers","com","getTuidContent","val","valueFromId","boxIdContent","tv","guestApi","uqApi","wsChannel","apiBase","appBridge","host","_nav__WEBPACK_IMPORTED_MODULE_0__","_VM__WEBPACK_IMPORTED_MODULE_3__","_schema__WEBPACK_IMPORTED_MODULE_4__","_form__WEBPACK_IMPORTED_MODULE_5__","_edit__WEBPACK_IMPORTED_MODULE_6__","_res__WEBPACK_IMPORTED_MODULE_7__","_image__WEBPACK_IMPORTED_MODULE_10__","uqTokens","logoutUqTokens","appsInFrame","meInFrame","_unit","isBridged","setMeInFrame","appHash","parts","split","Number","page","slice","appUrl","u","_uid__WEBPACK_IMPORTED_MODULE_2__","loadAppUqs","appOwner","appName","centerAppApi","_uqApi__WEBPACK_IMPORTED_MODULE_3__","uqs","checkUqs","_ui__WEBPACK_IMPORTED_MODULE_1__","appUq","uq","uqOwner","uqName","uqToken","urlDebug","realUrl","_host__WEBPACK_IMPORTED_MODULE_5__","getUrlOrDebug","at","a","opener","apiName","evt","subWin","source","_wsChannel__WEBPACK_IMPORTED_MODULE_4__","el","getElementById","hidden","hideFrameBack","lodash__WEBPACK_IMPORTED_MODULE_0___default","clone","subFrameStarted","onReceive","initSubWin","from","callId","method","body","result","directCall","callCenterApiFromMessage","bca","brideCenterApis","bridgeCenterApiReturn","appInFrame","onReceiveAppApiMessage","action","onAppApiReturn","bridgeCenterApi","httpChannelUI_HttpChannelNavUI","channelUIs","channelNoUIs","logoutApis","uqApi_channels","uqLocalEntities","localUqs","ls","localStorage","getItem","parse","loginedUserId","isNet","un","__loadAccess","saveLocal","lodash_default","cloneDeep","removeItem","accessValue","str","setItem","isMatch","uqApi_UqApi","basePath","access","showWaiting","channels","channelUI","channel","httpChannel","acc","join","loadAccess","checkAccess","names","post","params","owner","pageStart","pageSize","order","$order","ids","proxy","put","uqApi_UnitxApi","buildChannel","uqApi_CenterAppApi","unitxUq","setCenterUrl","centerToken","centerChannel","centerChannelUI","setCenterToken","userId","uqApi_CenterApi","path","uqTokenApi","unitParam","nowTick","tick","callCenterapi","rLs","rUnit","rAppOwner","rAppName","uqsPure","obj","cachedUqs","scrollTimeGap","ScrollView","bottomTime","topTime","onScroll","onScrollTop","onScrollBottom","target","scrollTop","offsetHeight","scrollHeight","c","direct","children","forEach","child","_$scroll","toString","eachChild","Page","cur","tabs","tabStates","tab","lodash__WEBPACK_IMPORTED_MODULE_3___default","isSelected","isMounted","t0","onTabClick","load","footer","right","keepHeader","titleBar","title","redDot","img","redDotView","cn","classnames__WEBPACK_IMPORTED_MODULE_2___default","_titleBar__WEBPACK_IMPORTED_MODULE_4__","center","sideBar","invisible","onTouchStart","elFooter","renderTabs","renderSingle","Link","cLink_CLink","classnames_default","subAppWindow","setSubAppWindow","win","postWsToTop","WsBase","handlerSeed","anyHandlers","msgHandlers","seed","$type","wsBaseSeed","wsBridge","wsBaseId","WSChannel","that","WebSocket","onopen","ev","onerror","onmessage","wsMessage","onclose","close","event","postWsToSubApp","netThis","send","uid","ALPHABET","ID_LENGTH","rtn","charAt","Math","floor","random","Image","classnames__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_1___default","n","_nav__WEBPACK_IMPORTED_MODULE_2__","isDevelopment","NODE_ENV","PUBLIC_URL","REACT_APP_CENTER_HOST","REACT_APP_ICON","REACT_APP_ITEM_ICON","hosts","centerhost","reshost","uqhost","unitxhost","uq-build","fetchOptions","headers","Content-Type","tryLocal","getCenterHost","centerUrlFromHost","centerWsFromHost","getResHost","promises","hostArr","hostValue","fetchUrl","debugHostUrl","localCheck","results","all","hostString","indexOf","timeout","text","catch","Error","fetchLocalCheck","decodeUserToken","decodeGuestToken","jwt_decode__WEBPACK_IMPORTED_MODULE_0__","jwt_decode__WEBPACK_IMPORTED_MODULE_0___default","vTuidMain_VTuidMain","CVEntity","onNew","onList","onSearch","openPage","link","render","newButton","proxyLinks","isFrom","tonva_tools","tonva_react_form","placeholder","entityRender","entityClick","vTuidEdit_VTuidEdit","next","vTuidEdit_awaiter","vForm","reset","closePage","finish","getValues","save","unique","isCalling","returnCall","openPageElement","size","editView","vTuidSelect_VTuidSelect","mainView","react_default","createElement","initKey","onSearchMain","PageItems","renderMainRow","clickMainRow","before","vTuidSelect_awaiter","searchMain","mainRowContent","ceasePage","showDiv","getIdFromObj","divView","renderDivRow","clickDivRow","divRowContent","showMain","rowContent","viewModel","ownerValue","divs","divItems","getDivItems","vTuidView_VTuidView","vTuidView_awaiter","alert","tools","buildForm","vTuidInfo_VTuidInfo","pageItems_TuidPageItems","tuid","search","vTuidList_VTuidMainListBase","vTuidList_awaiter","renderRow","clickRow","callOnSelected","ownerTop","ownerObj","ownerId","onSelected","VTuidMainList","cTuid_CTuid","buildPageItems","first","searchArr","cTuid_CTuidMain","proxies","linkFromName","cFrom","cUqFrom","cTuidEditFromName","cTuidInfoFromName","cTuidSelectFromName","VTuidMain","VTuidEdit","VTuidList","schemaFrom","openVPage","edit","itemChanged","cTuidInfo","cTuid_CTuidInfo","merge","CTuidEdit","CTuidList","cTuid_CTuidSelect","VTuidSelect","VTuidInfo","vBand_VBand","renderContent","addRow","VFieldBand","vField","vBand_VArrBand","vArr","setAddRow","vBand_VSubmitBand","vSubmit","vSubmit_VSubmit","onClickSubmit","submit","isOk","disabled","caption","mobx_module","Rule","RuleRequired","defy","trim","NaN","RuleNum","RuleInt","isNaN","isInteger","RuleMin","min","check","RuleMax","max","vField_VField","fieldRes","init","buildRules","required","null","r","readonly","FormMode","editable","vField_decorate","vField_VInputControl","renderError","ref","input","setInputValue","onFocus","onBlur","computeFields","onChange","currentTarget","inputGroup","suffix","ctrlCN","inputType","readOnly","maxLength","onKeyPress","RedMark","color","position","left","VStringField","KeyCode_Neg","KeyCode_Dot","vField_VNumberControl","ch","charCode","extraChars","onKeyDot","onKeyNeg","preventDefault","_a","vField_VIntField","VDecField","VTextField","VDateTimeField","vComputeField_VComputeField","vArr_VArr","ownerForm","onEditRow","rowPage","vArr_awaiter","valueBoxs","onRowChanged","rowValues","$owner","list","renderItem","showRow","editRow","editSubmitCaption","internalAddRow","newSubmitCaption","button","paddingTop","paddingBottom","arrsRes","arrRes","newSubmit","editSubmit","arrUI","vForm_VForm","buttonStyle","textAlign","paddingLeft","paddingRight","overflow","vTuidField_VTuidField","vTuidField_awaiter","showInfo","boxId","idBox","bandsBuilder_BandsBuilder","layout","formItems","bandsOnFly","bandsFromLayout","bands","bandsFromFields","bandFromArr","bandFromField","formItem","rfn","resFromName","buildVField","vFields","vArrs","onFormSubmit","buildFormValues","buildBands","bandColl","bandsBuilder","build","band","getVFields","f","getVArr","getVSubmit","rows","row","fn","initValues","arrList","ctrl","fieldName","valueFromFieldName","propName","buildFieldValues","array","deep","buildObservableValues","vForm_decorate","HttpChannel","isCenter","hostUrl","apiToken","showError","_host__WEBPACK_IMPORTED_MODULE_2__","keys","k","buildOptions","innerFetch","buildError","timeOutHandler","encodeURI","ok","statusText","ct","retJson","toLowerCase","_ui_nav__WEBPACK_IMPORTED_MODULE_1__","_appBridge__WEBPACK_IMPORTED_MODULE_0__","Headers","append","resOptions","resLang","lodash__WEBPACK_IMPORTED_MODULE_0__","_","l","languages","setResOptions","_CApp__WEBPACK_IMPORTED_MODULE_0__","_uq__WEBPACK_IMPORTED_MODULE_2__","_tuid__WEBPACK_IMPORTED_MODULE_4__","_query__WEBPACK_IMPORTED_MODULE_6__","_map__WEBPACK_IMPORTED_MODULE_7__","_form_viewModel__WEBPACK_IMPORTED_MODULE_10__","_formUI__WEBPACK_IMPORTED_MODULE_12__","_ControllerUq__WEBPACK_IMPORTED_MODULE_13__","_link__WEBPACK_IMPORTED_MODULE_15__","_icons__WEBPACK_IMPORTED_MODULE_16__","control_ControlBase","formView","renderControl","filled","validate","control_Control","face","setProps","element","defaultValue","clearErrors","clearValue","isOK","getValueFromElement","notes","buttonsControl_ButtonsControl","otherClick","onOther","readValues","nothing","btnOther","submitButton","otherButton","TxtRequired","charsControl_CharsControl","parseValue","lodash","classnames","form-control","has-success","is-invalid","is-valid","renderInput","stringControl_StringControl","ErrInvalidNumber","ErrMin","ErrMax","unknownControl_UnknownControl","role","unknownControl_EmptyControl","pickIdControl_PickIdControl","pick","fromPicked","onPicked","itemFromId","initCaption","String","controlContent","component","pickIdControl_decorate","pickTuidControl_PickTuidControl","onIdChanged","onFormValues","pickTuidControl_decorate","pickControl_PickControl","pickControl_awaiter","Content","pickControl_decorate","createControl","group","groupRow","createGroupControl","fieldRow","fieldType","defaultFaces","controls","createFieldControl","help","string","password","number","parseFloat","checkbox","trueValue","falseValue","checked","radiobox","selectedIndex","selectedOptions","pick-id","pick-tuid","textarea","int","dec","bool","ln","Entity","entities","typeId","fieldMaps","sys","sName","jName","tvApi","returns","schema","setSchema","buildFieldTuid","buildArrFieldsTuid","getTuid","fieldArr","an","buildFieldsParams","arrResult","pa","rowResult","packRow","packArr","charCodeAt","substring","escape","unpackRow","unpackArr","ch0","fLen","to","vals","maxCacheSize","tuid_Tuid","queue","waitingIds","cache","buildIdBoxer","BoxId","prototype","defineProperty","writable","enumerable","getObj","getCacheValue","toJSON","idName","_id","delete","defer","util","has","cacheTuids","moveToHead","shift","proxied","cacheValue","api","getApiFrom","tuids","tuidIds","cacheTuidFieldValues","afterCacheId","cacheDivIds","tuidGet","divName","cacheFieldsInValue","arrValues","tuidDiv","getDiv","tuidSave","retId","inId","tuidSearch","tuidArrGet","tuidArrSave","tuidArrPos","showTuid","TuidMain","Main","TuidDiv","cacheIds","cApp","cUqFrm","getImportUq","retErrors","cTuidMainFromName","$proxy","action_Action","pack","sheet_Sheet","states","op","ops","actions","discription","appId","sheetSave","app","flow","sheetAction","brief","unpackSheet","flows","getSheet","getArchive","unpack","sheetArchive","sheetArchives","stateSheets","sheet_PageStateItems","stateSheetCount","s","count","getStateSheets","query_Query","isPaged","more","hasMore","startField","buildParams","unpackReturns","$page","query","table","book_Book","queryApiName","history_History","map_Map","queries","newAction","newQuery","add","del","pending_Pending","fieldDefaultValue","entities_Entities","sheets","books","maps","histories","pendings","tuidArr","actionArr","sheetArr","queryArr","bookArr","mapArr","historyArr","pendingArr","loadIds","clearCacheTimer","accesses","buildEntities","loadEntities","buildTuids","buildAccess","div","tuidUrl","cacheTimer","proxyColl","newTuid","fromType","fromObj","book","pending","uqId","newBook","newMap","newHistory","newSheet","newPending","buildSheet","mainFields","ownerField","af","bootstrapCreateRow","elementCreateRow","_control__WEBPACK_IMPORTED_MODULE_1__","RowContainer","cc","control","setInitValues","ElementRowContainer","BootStrapRowContainer","refetchApi","ApiBase","getHttpChannel","callFetch","TitleBar","logoutClick","_nav__WEBPACK_IMPORTED_MODULE_1__","navChange","hasBack","href","debugLogout","rightView","b","nick","openWindow","DefaultRow","vQueryMain_VQueryMain","resetPage","loadPage","replacePage","pageResult","queryResult","again","renderExtra","rightClose","queryRow","vQuerySelect_VQuerySelect","vQuerySelect_awaiter","selectRow","vQuerySelect_QueryPageItems","cQuery_CQueryBase","cQuery_CQuery","VQueryMain","main","cQuery_CQuerySelect","VQuerySelect","ImageItemEdit","_itemEdit__WEBPACK_IMPORTED_MODULE_7__","overSize","upload","resUploader","resId","isChanged","tonva_react_form__WEBPACK_IMPORTED_MODULE_8__","_page__WEBPACK_IMPORTED_MODULE_6__","_resUploader__WEBPACK_IMPORTED_MODULE_3__","multiple","maxSize","border","padding","_image__WEBPACK_IMPORTED_MODULE_4__","_nav__WEBPACK_IMPORTED_MODULE_5__","mobx__WEBPACK_IMPORTED_MODULE_2__","Loading","ResUploader","files","fileInput","FormData","file","abortController","AbortController","signal","onFilesChange","_rule__WEBPACK_IMPORTED_MODULE_0__","_field__WEBPACK_IMPORTED_MODULE_1__","_face__WEBPACK_IMPORTED_MODULE_2__","_TonvaForm__WEBPACK_IMPORTED_MODULE_5__","FormView","buildRows","some","every","formRows","createRow","buildRow","buttonsRow","createButtons","_rowContainer__WEBPACK_IMPORTED_MODULE_4__","formRow","formRowCreator","_control__WEBPACK_IMPORTED_MODULE_3__","buttons","CApp","tonva_tools__WEBPACK_IMPORTED_MODULE_1__","tonvaApp","cImportUqs","cUqCollection","tonva_react_form__WEBPACK_IMPORTED_MODULE_2__","onRowClick","selectUnitPage","appUnits","promiseChecks","newCUq","checks","retError","CUq","_uq__WEBPACK_IMPORTED_MODULE_3__","cUqArr","VAppMain","isProduction","loadAppUnits","showUnsupport","loadUqs","clearPrevPages","showMainPage","beforeStart","renderView","userName","sheetTypeId","getCUqFromId","navSheet","_centerApi__WEBPACK_IMPORTED_MODULE_4__","userAppUnits","appContent","appPage","entityIcons","react__WEBPACK_IMPORTED_MODULE_0___default","tonva_react_form__WEBPACK_IMPORTED_MODULE_1__","fixWidth","ControllerUq","centerApi","RuleCustom","func","RulePredefined","rules_RuleNum","minMsg","template","maxMsg","checkMore","integer","widget_Widget","context","itemSchema","fieldProps","contextErrors","onInputChange","changeValue","getUiItem","visible","removeErrorWidget","isChanging","newValue","fromElement","onChanging","onChanged","prev","allowChange","setDataValue","setElementValue","fieldClass","FieldClass","uiLabel","requiredFlag","FieldContainer","Templet","errorList","tag","textWidget_TextWidget","renderTemplet","onKeyDown","numberWidget_NumberWidget","updownWidget_UpdownWidget","keyCode","returnValue","isValidKey","dateWidget_DateWidget","checkBoxWidget_CheckBoxWidget","defaultChecked","selectWidget_SelectWidget","option","selectWidget_decorate","idWidget_IdWidget","pickId","required-item","cursor-pointer","idWidget_decorate","Unknown","dataType","uiType","dataTypes","buttonWidget_ButtonWidget","buttonWidget_awaiter","onButtonClick","observerRender","widgetType","ButtonClass","ArrComponent","selectable","deletable","restorable","getArrRowContexts","arrLabel","ArrContainer","RowSeperator","formSelectable","formDeletable","formRestorable","arrSelectable","arrDeletable","arrRestorable","ac","rc","rs","sep","form_context","typeofTemplet","factory","selectCheck","deleteIcon","$isSelected","$source","isDeleted","$isDeleted","onDelClick","editContainer","deleted","row-selected","Provider","imageWidget_ImageWidget","imageWidget_awaiter","imageItemEdit","imageSrc","end","ui_image","imageWidget_decorate","widgetsFactory","datetime","time","month","email","updown","image","checkboxes","radio","range","typeWidget","getItemSchema","getTypeWidget","WidgetClass","WidgetElement","renderContainer","vMain_VSheetMain","newClick","schemaClick","archivesClick","sheetStateClick","renderState","badge","getStateLabel","templet","statesCount","filter","isDev","vNew_VSheetNew","vNew_awaiter","valuesWithBox","onSave","leftFlowStyle","width","vSheetView_VSheetView","flowRow","preState","sheetView","removed","sheetData","vEdit_VSheetEdit","vEdit_awaiter","saveSheet","controllers_form","vSheetAction_VSheetAction","actionClick","vSheetAction_awaiter","acted","deleteClick","editClick","editSheet","actionButtons","startButtons","no","stateLabel","getActionLabel","backPage","vSchema_VSheetSchema","schemaStringify","vArchives_VArchives","archiveClick","vArchives_awaiter","processing","archiveRow","getArchives","vList_VSheetList","rowClick","vList_awaiter","pageStateItems","listRow","stateName","vArchived_VArchived","vSheet_VSheet","vSaved_VSheetSaved","restart","vSaved_awaiter","vSheetProcessing_VSheetProcessing","cSheet_CSheet","cSheet_awaiter","showSaved","loadStateSheetCount","createPageStateItems","VSheetMain","onSheet","me","$","sheetActPreState","sheetActState","changeStateCount","curState","delta","stateCount","VSheetNew","sheetNew","VSheetSaved","sheetSaved","VSheetEdit","sheetEdit","VSheetSchema","VArchives","VArchived","VSheetList","VSheetAction","VSheetProcessing","showArchived","showAction","showProcessing","onEvent","getSheetData","vCall","inBrief","getArchived","getStateUI","actionName","sheetTitle","disc","vBookMain_VBookMain","cBook_CBook","VBookMain","vUq_VUq","isSysVisible","linkItem","cLink","lists","tuidLinks","mapLinks","sheetLinks","actionLinks","queryLinks","bookLinks","historyLinks","pendingLinks","Fragment","isVisible","controllers_link","cTuidMain","cMap","cSheet","cAction","cQuery","cBook","cHistory","cPending","lowerPropertyName","cUq_CUq","schemaLoaded","CTuidMain","controllers_tuid","CTuidSelect","CTuidInfo","CQuery","CQuerySelect","CMap","CAction","CSheet","CBook","CHistory","controllers_history","CPending","baseUrl","loadEntites","collection","warn","tuidPlaceHolder","en","sheetFromTypeId","startSheet","entityName","cTuidEdit","entityType","cFromName","tUI","cEntity","getUI","VUq","vMain_VMapMain","itemRender","ItemRow","remove","valuesView","box","isLeaf","keyIndex","keyUI","keyUIs","keyContent","valuesContent","keyNone","addClick","removeClick","inputValues_VInputValues","onValuesSubmit","inputValues_awaiter","cMap_MapItem","cMap_CMap","cMap_awaiter","keysLen","keyFields","keysLast","idx","keyField","kn","searchParam","ki","searchOnKey","arr1","nullable","rowIndex","createItem","getLable","confirmDelete","v0","q","retFields","newItem","addItem","VMapMain","callParam","vPendingMain_VPendingMain","cPending_CPending","VPendingMain","vHistoryMain_VHistoryMain","cHistory_CHistory","VHistoryMain","vActionMain_VActionMain","resultPage","mainPage","cAction_CAction","VActionMain","ItemEdit","uiItem","internalStart","internalEnd","netToken","_uqApi__WEBPACK_IMPORTED_MODULE_0__","_wsChannel__WEBPACK_IMPORTED_MODULE_1__","userApi","_net__WEBPACK_IMPORTED_MODULE_0__","_user__WEBPACK_IMPORTED_MODULE_1__","account","verify","prop","left0","zero","num","fix","Controller","_net__WEBPACK_IMPORTED_MODULE_3__","onMessageReceive","onMessage","isLogined","unregisterReceiveHandler","receiveHandlerId","onDispose","vp","registerReceiveHandler","_resolve_$","View","VPage","coordinator","_schema__WEBPACK_IMPORTED_MODULE_0__","_uiSchema__WEBPACK_IMPORTED_MODULE_1__","TonvaForm","_formView__WEBPACK_IMPORTED_MODULE_2__","DropdownActions","handleDocumentClick","dropdownOpen","contains","menu","toggle","removeEventListener","isRight","hasIcon","data-toggle","aria-expanded","dropdown-menu","dropdown-menu-right","aria-hidden","EasyDate","now","nDate","getDate","_date","hour","getHours","minute","getMinutes","getMonth","hm","getFullYear","Media","tonva_tools__WEBPACK_IMPORTED_MODULE_2__","disp","px","py","SearchBox","allowEmptySearch","inputSize","lab","inputClassName","buttonText","MultiStep","lodash__WEBPACK_IMPORTED_MODULE_1__","lodash__WEBPACK_IMPORTED_MODULE_1___default","classnames__WEBPACK_IMPORTED_MODULE_2__","_form__WEBPACK_IMPORTED_MODULE_3__","stepViews","topView","onPrev","onNext","stepName","steps","ButtonConten","prefix","btnContent","formProps","setStep","nextStepName","pIcon","sIcon","itemObservable","isFirst","loading","beforeLoad","loaded","allLoaded","firstSize","appendPosition","_items","mobx__WEBPACK_IMPORTED_MODULE_0__","topDiv","_uid__WEBPACK_IMPORTED_MODULE_1__","bottomDiv","setPageStart","unshift","reverse","CacheIds","maxCount","dict","Map","loadId","_loadIds","_loadId","Badge_Badge","badgeAlign","badgeVertical","LMR_LMR","cursor","LMR_decorate","FA_FA","spin","pull","pulse","rotate","flip","inverse","Muted","base_ListBase","pageItems","selectedItems","nextProps","clickable_Clickable","static_Static","selectable_Selectable","itemsArray","compare","_selectedItems","selected","labelId","si","buildItems","anySelected","onSelect","flex","marginBottom","htmlFor","selectable_decorate","list_List","listBase","nextState","nextContext","updateProps","isLoading","staticRow","list_decorate","formRes","zh","form_Form","calcSelectOrDelete","formData","arrItemOperated","DefaultContainer","DefaultFieldContainer","fieldLabelSize","labelView","fieldCol","DefaultFieldClass","DefaultButtonClass","DefaultRes","ui_res","py-3","Container","formContext","initDataItem","arrItem","arrItems","arrDict","formArrVal","beforeShow","contextType","PropRow","row_PropBorder","borderTop","row_PropGap","w","backgroundColor","valueAlignStart","valueAlignCenter","valueAlignEnd","row_LabeledPropRow","gridProps","bk","bg-white","renderLabel","renderProp","align","vAlign","col","full","alignValue","renderPropBody","renderPropContent","StringPropRow","NumberPropRow","row_ListPropRow","borderBottom","ComponentPropRow","propView_PropView","isGap","PropGrid_PropGrid","propView","listRow_ListRow","pressed","isIcon","noteNum","mid","viceSpan","vice","middle","midSize","unread","uv","va-action","listView_ListView","elHeader","itemClick","converter","ex","listItem","listView_decorate","stringItemEdit_StringItemEdit","edit_itemEdit","preValue","edit_Edit","defaultSepClassName","defaultRowContainerClassName","edit_awaiter","onItemChanged","onItemClick","itemEdit","createItemEdit","topBorderClassName","bottomBorderClassName","sepClassName","rowContainerClassName","topBorder","bottomBorder","elItems","divValue","userSetProp","Tab","_content","contentBuilder","tabs_Tabs","tabClick","selectedTab","tabBack","contentBack","notify","height","display","notifyCircle","FetchErrorView","reApi","_net__WEBPACK_IMPORTED_MODULE_1__","errContent","LocalData","Data","homeTabCur","module","exports","mainApi","toUser","fromUnit","fromApp","fellow","isOwner","isAdmin","apps","member","assigned","roles","devApi","uqsText","service","admins_Admins","store","owners","admins","fellows","unitAdmins","ua","fellowId","unitSetAdmin","removeCur","admin","unitAddAdmin","dev_ObjItems","dev","_load","_save","_inc","_del","_dec","dev_decorate","dev_Apps","searchedUqs","saveApp","delApp","counts","searchUq","searchPageSize","allUqs","appBindUq","dev_Uqs","saveUq","delUq","dev_Buses","buses","saveBus","delBus","bus","dev_Servers","servers","saveServer","delServer","server","dev_Services","services","saveService","delService","changeServiceProp","db","db_type","connection","loadUqServices","SearchItems","dev_Dev","searchApp","searchServer","searchUqdb","cacheIds_CacheUnits","cacheIds_CacheUqs","cacheIds_CacheApps","cacheIds_CacheServers","store_Store","cacheUnits","cacheUqs","cacheApps","cacheServers","memberCount","roleApps","roleMember","roleMembers","memberRoles","unitChangeProp","unitApps","unitMemberCount","uqServer","uqBuilderUrl","unitDeleteApp","inUnit","unitAddApp","unitRoles","unitAddRole","unitRoleChangeProp","unitRoleApps","unitRoleSetApps","unitMembers","unitAssignMember","unitMemberRoles","rId","unitSetMemberRoles","org","store_decorate","store_store","NewFellow_NewFellowPage","onSendInvitation","NewFellow_awaiter","addNew","NewFellow","NewFellow_decorate","EditAdmin_EditAdmin","isRoot","Fellow","Administors_EditAdmin","EditAdmin_decorate","Administors_AdministorsPage","onNewOwner","newAdmin","onNewAdmin","ownersView","adminsView","onNewFellow","showOwners","showAdmins","Administors","Administors_decorate","idDates_IdDates","date_init","date_update","span","isLink","unitSpan_UnitSpan","unitSpan_UnitInfo","unitSpan_decorate","unitSpan_UnitName","consts_appIcon","appItemIcon","uqSpan_UqSpan","uqSpan_UqInfo","uqSpan_decorate","appSpan_AppSpan","appSpan_AppInfo","public","appSpan_decorate","apis","appSpan_AppRow","serverSpan_ServerSpan","serverSpan_ServerInfo","cloud","ip","serverSpan_decorate","stringValueEdit_StringValueEdit","stringValueEdit_awaiter","errorDiv","info","stringValueEdit_TextValueEdit","onTextAreaChange","idPickPage_IdPickPage","idPickPage_awaiter","candidateItems","searchPlaceHolder","idPickPage_decorate","info_Info","renderUqRow","uqAccess","act","info_awaiter","appActed","newInUnit","restoreUnitApp","stopUnitApp","newApp","addUnitApp","uqAccesses","faName","info_decorate","new_PageApps","new_NewApp","new_awaiter","appClick","renderApp","new_decorate","Apps_AppsPage","loadApps","ban","src_Apps","Apps_decorate","newRole_NewRole","tf","roleApps_RoleApps","renderRoleApp","memberPage_MemberPage","renderMemberRole","setRole","memberPage_SetRole","loadRoles","loadMemberRoles","orgValue","roleUser","onAssigned","roleClick","memberPage_decorate","setMemberRoles","selectRole","renderRole","roleSelect","membersPage_MembersPage","loadMembers","MemberRow","setRoleUser","roleId","membersPage_MemberSearch","renderMember","userClick","membersPage_decorate","members","rolePage_RolePage","roleAppClick","rolePage_RoleApps","loadRoleApps","rolePage_EditRole","onMembersClick","membersLeft","membersRight","editRole","addRoleApp","rolePage_decorate","roleChangeProp","isSysRole","onNameChanged","onDiscriptionChanged","setRoleApps","appSelect","midClassName","Members_Members","newRole","allUsersClick","Members_decorate","src_organization_ui","teamPerson","tonva_react_uq","_super","searchOnPost","querySelect","team","noStaff","staff","noPost","organization","teamPosts","CN","tuidNullCaption","arrNew","arrEdit","fromUser","subject","getMessage","newMessage","editSumbit","sectionTeam","teamOrganization","person","given","sur","gender","section","vOpBinding_VOpBinding","sheetOpsChanged","stateTosView","tosText","tos","organizationRow","teamRow","observableTeamRow","sectionRow","observableSectionRow","postRow","observablePostRow","stateView","vOpBinding_awaiter","saveOps","selectablePosts","teamsList","teams","defaultSelected","onPostSelectChanged","sections","onTeamSelectChanged","onSectionSelectChanged","organizations","posts","postTos","pid","pto","buildSelectablePost","buildSelectableTeams","teamTos","hasAllTeams","teamId","tto","teamTo0","teamTo0Sections","buildSelectableSections","teamTo","selectableTeam0","hasSection","selectableSection","selectableSections","stateTo","configable","stateClick","tosView","opTos","tosTexts","stateToName","toArr","sp","postId","teamCount","st","sectionCount","ss","sectionId","saveSheetStatePosts","vAllPosts_VAllPosts","onCheckChanged","def","saveChange","vAllPosts_awaiter","saveEntityOpForAll","pageRender","buttonSave","lineHeight","fontWeight","listStyleType","blocks","block","getEntityOpForAll","entityOpForAllResult","entityOpForAll","eaa","vAllPosts_decorate","vFullFunction_VFullFunction","users","onStopFully","vFullFunction_awaiter","onSumitStopFully","onCancelStop","_uq","_user","entityOpUserFully","callSearchUser","onUserSelected","renderUser","pageUsers","onSetFully","tuidUser","onCancelFully","renderSelectUser","usersView","vFullFunction_decorate","vSearchUser_VSearchUser","vSearchUser_PageUsers","onUserClick","vSearchUser_awaiter","cOpBinding_COpBinding","appRender","appView","appsView","cOpBinding_awaiter","entityPosts","opTo","postDict","teamDict","sectionDict","sheetClick","sheetClickOld","renderSetting","settingClick","V","uqRender","nameRender","sheetRender","buildPosts","buildAppsUqs","setUqEntities","queryAllTeams","organizationDict","tm","og","sec","lns","setEntities","setSheets","lines","actionSaveEntityOpPost","opName","organization_COrganization","links","organization_VOrganization","createIdPick","createIdPick_IdPickPage","ServerCaption","editPage_schema","editPage_awaiter","moreCandidates","editPage_EditBasePage","pickServerId","renderServerInput","itemId","editPage_EditPage","editPage_NewPage","appsPage_AppsPage","appList","listRowClick","appRow","appUqs_SearchUqPage","appUqs_awaiter","onUq","getMyUqs","appUqs_decorate","appUqs_AppUqs","removeBind","btnProps","appUqs_Uqs","listHeader","btn","onBind","appPage_AppPage","editItem","appPage_awaiter","deleteItem","deleteApp","menuItems","btnAddUq","uqClick","elAccess","bind_access","uqBindPage_UqBindPage","accessChecked","saveUqBind","uqBindPage_awaiter","removeUqBind","btnDelete","checkAccessList","bc","apps_AppController","apps_awaiter","service_count","buildBindUqs","isNew","uaUq","apps_decorate","uqUpload_UqUpload","upFiles","fileClick","fr","FileReader","onload","uqUpload_UqPage","readAsText","onUpdate","uqUpload_awaiter","update","onUpdateThoroughly","lastModifiedDate","trunc","sz","thoroughly","uqUpload_CompileResult","fileList","fileRender","encType","compiled","doubleClick","pane","getParent","topIntoView","bottomIntoView","texts","seconds","abort","timeHandler","tagName","parentElement","clearTimeHandler","scrollIntoView","reader","getReader","pump","read","done","scrollToBottom","uintArray","encodedString","fromCharCode","apply","decodeURIComponent","uintToString","byteLength","onDoubleClick","wordWrap","whiteSpace","newServicePage_ServerCaption","urlRow","serverRow","newServicePage_awaiter","dbTypeRow","dbRow","connectionRow","newServicePage_NewServicePage","bindId","tonvaForm","servicePage_ServicePage","onUrlChanged","servicePage_awaiter","changeProp","onDbChanged","onDbTypeChanged","onConnectionChanged","onDeleteClick","servicePage_decorate","uqs_editPage_formRows","uqs_editPage_EditBasePage","uqs_editPage_awaiter","uqs_editPage_EditPage","uqs_editPage_NewPage","uqPage_UQPage","uqPage_awaiter","deleteUq","onUqUpload","serviceClick","showNewServicePage","renderService","compile_time","compile","listPage_ListPage","uqList","uqs_UQController","uqs_awaiter","loadUqEntities","uqGetEntities","r0","svc","uqs_decorate","row_Row","buses_Info","buses_SchemaView","buses_decorate","repeated","idPickAppProps","services_awaiter","idPickUqProps","serviceTypeNames","bindIdField","services_urlRow","discriptionRow","services_serverRow","ObjView_ObjView","ObjView_Info","ObjView_New","ObjView_decorate","saveCur","stepHeader","ObjView_Edit","extraMenuActions","vApps_VApps","appUsers","appUsersList","onAppsClick","searchBox","vUsers_VUsers","userApps","userAppsList","searchUser","onUsersClick","vApp_VApp","curApp","curAppUsers","onAppEditUsers","vUser_VUser","curUser","curUserApps","onUserEditApps","vAppEditUsers_VAppEditUsers","appEditUsers","editUser","onUserChanged","vAppEditUsers_awaiter","bindAppUser","vUserEditApps_VUserEditApps","userEditApps","editApp","onAppChanged","vUserEditApps_awaiter","bindUserApp","VAddUser_VAddUser","onSearchFocus","divUser","onAddUser","VAddUser_awaiter","userFromKey","addUser","addedPage","onAddApps","onContinueAddUser","VAddUser_decorate","cUsers_UsersController","onAppUsers","cUsers_awaiter","loadAppUsers","onUserApps","loadUserApps","unitOneAppUsers","unitOneUserApps","unitAppEditUsers","unitUserEditApps","unitAddUser","appIcon","userIcon","unitAppUsers","coll","unitUsers","cUsers_decorate","Admin_CAdmin","userAdminUnits","adminUnits","loadAdminUnits","Admin_VAdmin","noUnitPage","Admin_awaiter","Admin_AdminPage","rArrow","typeCaptions","1","2","3","appsAction","usersAction","newUsersAction","adminsAction","cOrganization","organizeAction","noneAction","objProps","P","loadCounts","devItems","Admin_UnitProps","Admin_decorate","src_App_0","cAdmin","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","react_dom","URL","response","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4214210a.chunk.js","sourcesContent":["export {left0} from './left0';\r\nexport * from './user';\r\nexport * from './net';\r\nexport * from './ui';\r\nexport * from './uid';\r\nexport {PageItems} from './pageItems';\r\nexport {CacheIds} from './cacheIds';\r\nexport * from './entry';\r\n\r\n","export * from './form';\r\nexport * from './list';\r\nexport * from './dropDownActions';\r\nexport * from './easyDate';\r\nexport * from './propGrid';\r\nexport * from './components';\r\nexport * from './media';\r\nexport * from './listView';\r\nexport * from './searchBox';\r\nexport * from './multiStep';\r\nexport * from './uid';\r\n","import * as React from 'react';\r\nimport { Controller, VPage, View } from 'tonva-tools';\r\nimport { Entity, Field, TuidMain } from '../entities';\r\nimport { CUq } from './uq/cUq';\r\nimport { VForm, FieldInputs, FieldCall, FormOptions, FormMode } from './form';\r\nimport { CQuerySelect } from './query';\r\nimport { FormUI, FieldTuidUI } from './formUI';\r\nimport { entityIcons } from './icons';\r\nimport { ControllerUq } from './ControllerUq';\r\n\r\nexport interface EntityUI {\r\n    form?: FormUI;\r\n}\r\n\r\nexport abstract class CEntity<T extends Entity, UI extends EntityUI> extends ControllerUq {\r\n    constructor(cUq: CUq, entity: T, ui: UI, res: any) {\r\n        super(cUq, res);\r\n        Object.setPrototypeOf(this.x, cUq.x);\r\n        let {name, typeName} = entity;\r\n        this.entity = entity;\r\n        this.ui = ui; // || entityUI.ui;\r\n        this.label = this.res.label || name;\r\n        this.icon = entityIcons[typeName];\r\n    }\r\n    readonly entity: T;\r\n    readonly ui: UI;\r\n\r\n    protected async beforeStart():Promise<boolean> {\r\n        //if (await super.beforeStart() === false) return false;\r\n        await this.entity.loadSchema();\r\n        return true;\r\n    }\r\n\r\n    createForm(onSubmit:()=>Promise<void>, values?:any, mode?:FormMode) {\r\n        let options = this.buildFormOptions(mode);\r\n        let ret = new VForm(options, onSubmit);\r\n        ret.setValues(values);\r\n        return ret;\r\n    }\r\n\r\n    private buildFormOptions(mode?:FormMode):FormOptions {\r\n        let {fields, arrFields} = this.entity;\r\n        let none, submitCaption, arrNewCaption, arrEditCaption, arrTitleNewButton;\r\n        if (this.res !== undefined) {\r\n            none = this.res['none'];\r\n            submitCaption = this.res['submit'];\r\n            arrNewCaption = this.res['arrNew'];\r\n            arrEditCaption = this.res['arrEdit'];\r\n            arrTitleNewButton = this.res['arrTitleNewButton'];\r\n        }\r\n        if (none === undefined) {\r\n            none = this.cUq.res['none'] || 'none';\r\n        }\r\n        if (submitCaption === undefined)\r\n            submitCaption = this.cUq.res['submit'] || 'Submit';\r\n        if (arrNewCaption === undefined)\r\n            arrNewCaption = this.cUq.res['arrNew'] || 'New';\r\n        if (arrEditCaption === undefined)\r\n            arrEditCaption = this.cUq.res['arrEdit'] || 'Edit';\r\n        if (arrTitleNewButton === undefined)\r\n        arrTitleNewButton = this.cUq.res['arrTitleNewButton'];\r\n        if (mode === undefined) mode = FormMode.new;\r\n        let formUI = this.ui.form;\r\n        let ret:FormOptions = {\r\n            fields: fields,\r\n            arrs: arrFields,\r\n            ui: formUI,\r\n            res: this.res || {},\r\n            inputs: this.buildInputs(formUI),\r\n            none: none,\r\n            submitCaption: submitCaption,\r\n            arrNewCaption: arrNewCaption,\r\n            arrEditCaption: arrEditCaption,\r\n            arrTitleNewButton: arrTitleNewButton,\r\n            mode: mode,\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private buildInputs(formUI: FormUI):FieldInputs {\r\n        let {fields, arrFields} = this.entity;\r\n        let ret:FieldInputs = {};\r\n        this.buildFieldsInputs(ret, fields, undefined, formUI);\r\n        if (arrFields !== undefined) {\r\n            for (let arr of arrFields) {\r\n                let {name, fields} = arr;\r\n                let items = formUI && formUI.items;\r\n                this.buildFieldsInputs(ret, fields, name, items && items[name] as FormUI);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private buildFieldsInputs(ret:FieldInputs, fields:Field[], arr:string, formUI: FormUI) {\r\n        if (arr !== undefined) {\r\n            let arrFieldInputs = ret[arr];\r\n            if (arrFieldInputs === undefined) {\r\n                ret[arr] = arrFieldInputs = {};\r\n                ret = arrFieldInputs;\r\n            }\r\n        }\r\n        for (let field of fields) {\r\n            let {name, _tuid} = field;\r\n            if (_tuid === undefined) continue;\r\n            let fieldUI = formUI && formUI.items && formUI.items[name] as FieldTuidUI;\r\n            ret[name] = {\r\n                select: this.buildSelect(field, arr, fieldUI),\r\n                content: this.buildContent(field, arr),\r\n                placeHolder: this.cUq.getTuidPlaceHolder(_tuid),\r\n            };\r\n        }\r\n    }\r\n\r\n    protected buildSelect(field:Field, arr:string, fieldUI: FieldTuidUI):FieldCall {\r\n        return async (form:VForm, field:Field, values:any):Promise<any> => {\r\n            let {_tuid, _ownerField} = field;\r\n            let cTuidSelect = await (_tuid as TuidMain).cSelectFrom();\r\n            let param:any = undefined;\r\n            if (_ownerField !== undefined) param = form.getValue(_ownerField.name);\r\n            if (fieldUI && fieldUI.autoList === true) {\r\n                console.log('select search set param=empty string');\r\n                param = '';\r\n            }\r\n            let ret = await cTuidSelect.call(param);\r\n            cTuidSelect.removeCeased(); // 清除已经废弃的顶部页面\r\n            if (ret === undefined) return undefined;\r\n            let id = cTuidSelect.idFromItem(ret);\r\n            _tuid.useId(id);\r\n            return id;\r\n        };\r\n    }\r\n\r\n    protected buildContent(field:Field, arr:string): React.StatelessComponent<any> {\r\n        return;\r\n    }\r\n\r\n    cQuerySelect(queryName:string):CQuerySelect {\r\n        return this.cUq.cQuerySelect(queryName);\r\n    }\r\n}\r\n\r\nexport abstract class VEntity<T extends Entity, UI extends EntityUI, C extends CEntity<T, UI>> extends VPage<C> {\r\n    protected readonly entity: T;\r\n    protected readonly ui: UI;\r\n    constructor(controller: C) {\r\n        super(controller);\r\n        this.entity = controller.entity;\r\n        this.ui = controller.ui;\r\n    }\r\n\r\n    get label():string {return this.controller.label}\r\n\r\n    //private _form_$: VForm;\r\n    protected createForm(onSubmit:()=>Promise<void>, values?:any, mode?:FormMode): VForm {\r\n        //if (this._form_$ !== undefined) return this._form_$;\r\n        return this.controller.createForm(onSubmit, values, mode);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport {User, Guest/*, UserInNav*/} from '../user';\r\nimport {Page} from './page';\r\nimport {netToken} from '../net/netToken';\r\nimport FetchErrorView from './fetchErrorView';\r\nimport {FetchError} from '../fetchError';\r\nimport {appUrl, setMeInFrame, logoutUqTokens} from '../net/appBridge';\r\nimport {LocalData} from '../local';\r\nimport {guestApi, logoutApis, setCenterUrl, setCenterToken, WSChannel, meInFrame, isDevelopment, host} from '../net';\r\nimport { WsBase, wsBridge } from '../net/wsChannel';\r\nimport { resOptions } from './res';\r\nimport { Loading } from './loading';\r\n\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport '../css/va-form.css';\r\nimport '../css/va.css';\r\nimport '../css/animation.css';\r\n\r\nconst regEx = new RegExp('Android|webOS|iPhone|iPad|' +\r\n    'BlackBerry|Windows Phone|'  +\r\n    'Opera Mini|IEMobile|Mobile' , \r\n    'i');\r\nconst isMobile = regEx.test(navigator.userAgent);\r\nexport const mobileHeaderStyle = isMobile? {\r\n    minHeight:  '3em'\r\n} : undefined;\r\n\r\nconst logo = require('../img/logo.svg');\r\nlet logMark: number;\r\nconst logs:string[] = [];\r\n\r\nexport interface Props //extends React.Props<Nav>\r\n{\r\n    //view: JSX.Element | (()=>JSX.Element);\r\n    //start?: ()=>Promise<void>;\r\n    onLogined: ()=>Promise<void>;\r\n    notLogined?: ()=>Promise<void>;\r\n};\r\nlet stackKey = 1;\r\nexport interface StackItem {\r\n    key: number;\r\n    view: JSX.Element;\r\n    ceased: boolean;\r\n    confirmClose?: ()=>Promise<boolean>;\r\n    disposer?: ()=>void;\r\n}\r\nexport interface State {\r\n    stack: StackItem[];\r\n    wait: 0|1|2;\r\n    fetchError: FetchError\r\n}\r\n\r\nexport class NavView extends React.Component<Props, State> {\r\n    private stack: StackItem[];\r\n    private htmlTitle: string;\r\n    private waitCount: number = 0;\r\n    private waitTimeHandler?: NodeJS.Timer;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.back = this.back.bind(this);\r\n        this.navBack = this.navBack.bind(this);\r\n        this.stack = [];\r\n        this.state = {\r\n            stack: this.stack,\r\n            wait: 0,\r\n            fetchError: undefined\r\n        };\r\n    }\r\n    async componentWillMount() {\r\n        window.addEventListener('popstate', this.navBack);\r\n    }\r\n\r\n    async componentDidMount()\r\n    {\r\n        nav.set(this);\r\n        /*\r\n        let start = this.props.start;\r\n        if (start !== undefined) {\r\n            await start();\r\n        }\r\n        else {\r\n        */\r\n            await nav.start();\r\n        //}\r\n    }\r\n\r\n    get level(): number {\r\n        return this.stack.length;\r\n    }\r\n\r\n    startWait() {\r\n        if (this.waitCount === 0) {\r\n            this.setState({wait: 1});\r\n            this.waitTimeHandler = global.setTimeout(\r\n                () => {\r\n                    this.waitTimeHandler = undefined;\r\n                    this.setState({wait: 2});\r\n                },\r\n                1000) as NodeJS.Timer;\r\n        }\r\n        ++this.waitCount;\r\n        this.setState({\r\n            fetchError: undefined,\r\n        });\r\n    }\r\n\r\n    endWait() {\r\n        setTimeout(() => {\r\n            /*\r\n            this.setState({\r\n                fetchError: undefined,\r\n            });*/\r\n            --this.waitCount;\r\n            if (this.waitCount === 0) {\r\n                if (this.waitTimeHandler !== undefined) {\r\n                    clearTimeout(this.waitTimeHandler);\r\n                    this.waitTimeHandler = undefined;\r\n                }\r\n                this.setState({wait: 0});\r\n            }\r\n        },100);\r\n    }\r\n\r\n    async onError(fetchError: FetchError)\r\n    {\r\n        let err = fetchError.error;\r\n        if (err !== undefined && err.unauthorized === true) {\r\n            await nav.showLogin(undefined);\r\n            return;\r\n        }\r\n        this.setState({\r\n            fetchError: fetchError,\r\n        });\r\n    }\r\n\r\n    show(view: JSX.Element, disposer?: ()=>void): number {\r\n        this.clear();\r\n        return this.push(view, disposer);\r\n    }\r\n\r\n    push(view: JSX.Element, disposer?: ()=>void): number {\r\n        this.removeCeased();\r\n        if (this.stack.length > 0) {\r\n            window.history.pushState('forward', null, null);\r\n        }\r\n        let key = stackKey++;\r\n        this.stack.push({\r\n            key: key,\r\n            view: view, \r\n            ceased: false,\r\n            disposer: disposer\r\n        });\r\n        this.refresh();\r\n        //console.log('push: %s pages', this.stack.length);\r\n        return key;\r\n    }\r\n\r\n    replace(view: JSX.Element, disposer?: ()=>void): number {\r\n        let item:StackItem = undefined;\r\n        let stack = this.stack;\r\n        if (stack.length > 0) {\r\n            item = stack.pop();\r\n            //this.popAndDispose();\r\n        }\r\n        let key = stackKey++;\r\n        this.stack.push({\r\n            key: key, \r\n            view: view, \r\n            ceased: false,\r\n            disposer: disposer\r\n        });\r\n        if (item !== undefined) this.dispose(item.disposer);\r\n        this.refresh();\r\n        //console.log('replace: %s pages', this.stack.length);\r\n        return key;\r\n    }\r\n\r\n    ceaseTop(level:number = 1) {\r\n        let p = this.stack.length - 1;\r\n        for (let i=0; i<level; i++, p--) {\r\n            if (p < 0) break;\r\n            let item = this.stack[p];\r\n            item.ceased = true;\r\n        }\r\n    }\r\n\r\n    pop(level:number = 1) {\r\n        let stack = this.stack;\r\n        let len = stack.length;\r\n        //console.log('pop start: %s pages level=%s', len, level);\r\n        if (level <= 0 || len <= 1) return;\r\n        if (len < level) level = len;\r\n        let backLevel = 0;\r\n        for (let i = 0; i < level; i++) {\r\n            if (stack.length === 0) break;\r\n            //stack.pop();\r\n            this.popAndDispose();\r\n            ++backLevel;\r\n        }\r\n        if (backLevel >= len) backLevel--;\r\n        this.refresh();\r\n        if (this.isHistoryBack !== true) {\r\n            //window.removeEventListener('popstate', this.navBack);\r\n            //window.history.back(backLevel);\r\n            //window.addEventListener('popstate', this.navBack);\r\n        }\r\n        //console.log('pop: %s pages', stack.length);\r\n    }\r\n\r\n    popTo(key: number) {\r\n        if (key === undefined) return;\r\n        if (this.stack.find(v => v.key === key) === undefined) return;\r\n        while (this.stack.length >0) {\r\n            let len = this.stack.length;\r\n            let top = this.stack[len-1];\r\n            if (top.key === key) break;\r\n            this.pop();\r\n        }\r\n    }\r\n\r\n    topKey():number {\r\n        let len = this.stack.length;\r\n        if (len === 0) return undefined;\r\n        return this.stack[len-1].key;\r\n    }\r\n\r\n    removeCeased() {\r\n        for (;;) {\r\n            let p=this.stack.length-1;\r\n            if (p < 0) break;\r\n            let top = this.stack[p];\r\n            if (top.ceased === false) break;\r\n            let item = this.stack.pop();\r\n            let {disposer} = item;\r\n            this.dispose(disposer);\r\n        }\r\n        this.refresh();\r\n    }\r\n\r\n    private popAndDispose() {\r\n        this.removeCeased();\r\n        let item = this.stack.pop();\r\n        if (item === undefined) return;\r\n        let {disposer} = item;\r\n        this.dispose(disposer);\r\n        this.removeCeased();\r\n        return item;\r\n    }\r\n\r\n    private dispose(disposer:()=>void) {\r\n        if (disposer === undefined) return;\r\n        let item = this.stack.find(v => v.disposer === disposer);\r\n        if (item === undefined) disposer();\r\n    }\r\n\r\n    clear() {\r\n        let len = this.stack.length;\r\n        while (this.stack.length > 0) this.popAndDispose();\r\n        this.refresh();\r\n        if (len > 1) {\r\n            //window.removeEventListener('popstate', this.navBack);\r\n            //window.history.back(len-1);\r\n            //window.addEventListener('popstate', this.navBack);\r\n        }\r\n    }\r\n\r\n    regConfirmClose(confirmClose:()=>Promise<boolean>) {\r\n        let stack = this.stack;\r\n        let len = stack.length;\r\n        if (len === 0) return;\r\n        let top = stack[len-1];\r\n        top.confirmClose = confirmClose;\r\n    }\r\n\r\n    private isHistoryBack:boolean = false;\r\n    navBack() {\r\n        nav.log('backbutton pressed - nav level: ' + this.stack.length);\r\n        this.isHistoryBack = true;\r\n        this.back(true);\r\n        this.isHistoryBack = false;\r\n    }\r\n\r\n    async back(confirm:boolean = true) {\r\n        let stack = this.stack;\r\n        let len = stack.length;\r\n        if (len === 0) return;\r\n        if (len === 1) {\r\n            if (self != window.top) {\r\n                window.top.postMessage({type:'pop-app'}, '*');\r\n            }\r\n            return;\r\n        }\r\n        let top = stack[len-1];\r\n        if (confirm===true && top.confirmClose) {\r\n            if (await top.confirmClose()===true) this.pop();\r\n        }\r\n        else {\r\n            this.pop();\r\n        }\r\n    }\r\n\r\n    confirmBox(message?:string): boolean {\r\n        return window.confirm(message);\r\n    }\r\n    clearError = () => {\r\n        this.setState({fetchError: undefined});\r\n    }\r\n    render() {\r\n        const {wait, fetchError} = this.state;\r\n        let stack = this.state.stack;\r\n        let top = stack.length - 1;\r\n        let elWait = null, elError = null;\r\n        switch (wait) {\r\n            case 1:\r\n                elWait = <li className=\"va-wait va-wait1\">\r\n                </li>;\r\n                break;\r\n            case 2:\r\n                elWait = <li className=\"va-wait va-wait2\">\r\n                    <i className=\"fa fa-spinner fa-spin fa-3x fa-fw\"></i>\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </li>;\r\n                break;\r\n        }\r\n        if (fetchError)\r\n            elError = <FetchErrorView clearError={this.clearError} {...fetchError} />\r\n        return (\r\n        <ul className='va'>\r\n            {\r\n                stack.map((item, index) => {\r\n                    let {key, view} = item;\r\n                    return <li key={key} style={index<top? {visibility: 'hidden'}:undefined}>\r\n                        {view}\r\n                    </li>\r\n                })\r\n            }\r\n            {elWait}\r\n            {elError}\r\n        </ul>\r\n        );\r\n    }\r\n\r\n    private refresh() {\r\n        // this.setState({flag: !this.state.flag});\r\n        this.setState({stack: this.stack });\r\n        // this.forceUpdate();\r\n    }\r\n}\r\n\r\nexport class Nav {\r\n    private nav:NavView;\r\n    private ws: WsBase;\r\n    private wsHost: string;\r\n    private local: LocalData = new LocalData();\r\n    @observable user: User/*InNav*/ = undefined;\r\n    language: string;\r\n    culture: string;\r\n    resUrl: string;\r\n\r\n    constructor() {\r\n        let {lang, district} = resOptions;\r\n        this.language = lang;\r\n        this.culture = district;\r\n    }\r\n\r\n    get guest(): number {\r\n        let guest = this.local.guest;\r\n        if (guest === undefined) return 0;\r\n        let g = guest.get();\r\n        if (g === undefined) return 0;\r\n        return g.guest;\r\n    }\r\n\r\n    set(nav:NavView) {\r\n        //this.logo = logo;\r\n        this.nav = nav;\r\n    }\r\n\r\n    registerReceiveHandler(handler: (message:any)=>Promise<void>):number {\r\n        if (this.ws === undefined) return;\r\n        return this.ws.onWsReceiveAny(handler);\r\n    }\r\n\r\n    unregisterReceiveHandler(handlerId:number) {\r\n        if (this.ws === undefined) return;\r\n        if (handlerId === undefined) return;\r\n        this.ws.endWsReceive(handlerId);\r\n    }\r\n\r\n    async onReceive(msg:any) {\r\n        if (this.ws === undefined) return;\r\n        await this.ws.receive(msg);\r\n    }\r\n\r\n    private async getUnitName() {\r\n        try {\r\n            let unitRes = await fetch('unit.json', {});\r\n            //if (unitRes)\r\n            let res = await unitRes.json();\r\n            return res.unit;\r\n        }\r\n        catch (err) {\r\n            this.local.unit.clear();\r\n            return;\r\n        }\r\n    }\r\n\r\n    private async loadUnit() {\r\n        let unitName:string;\r\n        let unit = this.local.unit.get();\r\n        if (unit !== undefined) {\r\n            if (isDevelopment !== true) return unit.id;\r\n            unitName = await this.getUnitName();\r\n            if (unitName === undefined) return;\r\n            if (unit.name === unitName) return unit.id;\r\n        }\r\n        else {\r\n            unitName = await this.getUnitName();\r\n            if (unitName === undefined) return;\r\n        }\r\n        let unitId = await guestApi.unitFromName(unitName);\r\n        if (unitId !== undefined) {\r\n            this.local.unit.set({id: unitId, name: unitName});\r\n        }\r\n        return unitId;\r\n    }\r\n\r\n    private isInFrame:boolean;\r\n    private centerHost: string;\r\n    async start() {\r\n        nav.clear();\r\n        nav.push(<Page header={false}><Loading /></Page>);\r\n        await host.start();\r\n        let {url, ws, resHost} = host;\r\n        this.centerHost = url;\r\n        this.resUrl = 'http://' + resHost + '/res/';\r\n        this.wsHost = ws;\r\n        setCenterUrl(url);\r\n        \r\n        let unit = await this.loadUnit();\r\n        meInFrame.unit = unit;\r\n\r\n        let guest:Guest = this.local.guest.get();\r\n        if (guest === undefined) {\r\n            guest = await guestApi.guest();\r\n        }\r\n        nav.setGuest(guest);\r\n\r\n        let hash = document.location.hash;\r\n        // document.title = document.location.origin;\r\n        console.log(\"url=%s hash=%s\", document.location.origin, hash);\r\n        this.isInFrame = hash !== undefined && hash !== '' && hash.startsWith('#tv');\r\n        if (this.isInFrame === true) {\r\n            let mif = setMeInFrame(hash);\r\n            if (mif !== undefined) {\r\n                this.ws = wsBridge;\r\n                console.log('this.ws = wsBridge in sub frame');\r\n                //nav.user = {id:0} as User;\r\n                if (self !== window.parent) {\r\n                    window.parent.postMessage({type:'sub-frame-started', hash: mif.hash}, '*');\r\n                }\r\n                // 下面这一句，已经移到 appBridge.ts 里面的 initSubWin，也就是响应从main frame获得user之后开始。\r\n                //await this.showAppView();\r\n                return;\r\n            }\r\n        }\r\n\r\n        let user: User = this.local.user.get();\r\n        if (user === undefined) {\r\n            let {notLogined} = this.nav.props;\r\n            if (notLogined !== undefined) {\r\n                await notLogined();\r\n            }\r\n            else {\r\n                await nav.showLogin(undefined);\r\n            }\r\n            return;\r\n        }\r\n\r\n        await nav.logined(user);\r\n    }\r\n\r\n    async showAppView() {\r\n        let {onLogined} = this.nav.props;\r\n        if (onLogined === undefined) {\r\n            nav.push(<div>NavView has no prop onLogined</div>);\r\n            return;\r\n        }\r\n        nav.clear();\r\n        await onLogined();\r\n        console.log('logined: AppView shown');\r\n    }\r\n\r\n    setGuest(guest: Guest) {\r\n        this.local.guest.set(guest);\r\n        netToken.set(0, guest.token);\r\n    }\r\n\r\n    saveLocalUser() {\r\n        this.local.user.set(this.user);\r\n    }\r\n\r\n    async logined(user: User, callback?: (user:User)=>Promise<void>) {\r\n        let ws:WSChannel = this.ws = new WSChannel(this.wsHost, user.token);\r\n        ws.connect();\r\n\r\n        console.log(\"logined: %s\", JSON.stringify(user));\r\n        this.user = user;\r\n        this.saveLocalUser();\r\n        netToken.set(user.id, user.token);\r\n        if (callback !== undefined) //this.loginCallbacks.has)\r\n            callback(user);\r\n            //this.loginCallbacks.call(user);\r\n        else {\r\n            await this.showAppView();\r\n        }\r\n    }\r\n\r\n    async showLogin(callback?: (user:User)=>Promise<void>, withBack?:boolean) {\r\n        let lv = await import('../entry/login');\r\n        let loginView = <lv.default withBack={withBack} callback={callback} />;\r\n        if (withBack !== true) {\r\n            this.nav.clear();\r\n            this.pop();\r\n        }\r\n        this.nav.push(loginView);\r\n    }\r\n\r\n    async showLogout(callback?: ()=>Promise<void>) {\r\n        nav.push(<Page header=\"安全退出\" back=\"close\">\r\n            <div className=\"m-5 border border-info bg-white rounded p-3 text-center\">\r\n                <div>退出当前账号不会删除任何历史数据，下次登录依然可以使用本账号</div>\r\n                <div className=\"mt-3\">\r\n                    <button className=\"btn btn-danger\" onClick={()=>this.logout(callback)}>退出</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n    }\r\n\r\n    async logout(callback?:()=>Promise<void>) { //notShowLogin?:boolean) {\r\n        this.local.logoutClear();\r\n        this.user = undefined; //{} as User;\r\n        logoutApis();\r\n        logoutUqTokens();\r\n        let guest = this.local.guest.get();\r\n        setCenterToken(0, guest && guest.token);\r\n        this.ws = undefined;\r\n        /*\r\n        if (this.loginCallbacks.has)\r\n            this.logoutCallbacks.call();\r\n        else {\r\n            if (notShowLogin === true) return;\r\n        }\r\n        await nav.start();\r\n        */\r\n        if (callback === undefined)\r\n            await nav.start();\r\n        else\r\n            await callback();\r\n    }\r\n\r\n    async changePassword() {\r\n        let cp = await import('../entry/changePassword');\r\n        nav.push(<cp.ChangePasswordPage />);\r\n    }\r\n\r\n    get level(): number {\r\n        return this.nav.level;\r\n    }\r\n    startWait() {\r\n        this.nav.startWait();\r\n    }\r\n    endWait() {\r\n        this.nav.endWait();\r\n    }\r\n    async onError(error: FetchError) {\r\n        await this.nav.onError(error);\r\n    }\r\n    show (view: JSX.Element, disposer?: ()=>void): void {\r\n        this.nav.show(view, disposer);\r\n    }\r\n    push(view: JSX.Element, disposer?: ()=>void): void {\r\n        this.nav.push(view, disposer);\r\n    }\r\n    replace(view: JSX.Element, disposer?: ()=>void): void {\r\n        this.nav.replace(view, disposer);\r\n    }\r\n    pop(level:number = 1) {\r\n        this.nav.pop(level);\r\n    }\r\n    topKey():number {\r\n        return this.nav.topKey();\r\n    }\r\n    popTo(key:number) {\r\n        this.nav.popTo(key);\r\n    }\r\n    clear() {\r\n        this.nav.clear();\r\n    }\r\n    navBack() {\r\n        this.nav.navBack();\r\n    }\r\n    ceaseTop(level?:number) {\r\n        this.nav.ceaseTop(level);\r\n    }\r\n    removeCeased() {\r\n        this.nav.removeCeased();\r\n    }\r\n    async back(confirm:boolean = true) {\r\n        await this.nav.back(confirm);\r\n    }\r\n    regConfirmClose(confirmClose: ()=>Promise<boolean>) {\r\n        this.nav.regConfirmClose(confirmClose);\r\n    }\r\n    confirmBox(message?:string): boolean {\r\n        return this.nav.confirmBox(message);\r\n    }\r\n    async navToApp(url: string, unitId: number, apiId?:number, sheetType?:number, sheetId?:number):Promise<void> {\r\n        return new Promise<void>((resolve, reject) => {\r\n            let sheet = this.centerHost.includes('http://localhost:') === true? 'sheet_debug':'sheet'\r\n            let uh = sheetId === undefined?\r\n                    appUrl(url, unitId) :\r\n                    appUrl(url, unitId, sheet, [apiId, sheetType, sheetId]);\r\n            console.log('navToApp: %s', JSON.stringify(uh));\r\n            nav.push(<article className='app-container'>\r\n                <span id={uh.hash} onClick={()=>this.back()} style={mobileHeaderStyle}>\r\n                    <i className=\"fa fa-arrow-left\" />\r\n                </span>\r\n                <iframe src={uh.url} />\r\n            </article>, \r\n            ()=> {\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n\r\n    navToSite(url: string) {\r\n        // show in new window\r\n        window.open(url);\r\n    }\r\n\r\n    get logs() {return logs};\r\n    log(msg:string) {\r\n        logs.push(msg);\r\n    }\r\n    logMark() {\r\n        let date = new Date();\r\n        logMark = date.getTime();\r\n        logs.push('log-mark: ' + date.toTimeString());\r\n    }\r\n    logStep(step:string) {\r\n        logs.push(step + ': ' + (new Date().getTime() - logMark));\r\n    }\r\n}\r\nexport const nav: Nav = new Nav();\r\n","import * as React from 'react';\r\nimport { Form } from './form';\r\nimport { UiSchema, UiArr, UiItem } from '../schema';\r\nimport { ArrSchema, ItemSchema } from '../schema';\r\nimport { Widget as Widget } from './widgets/widget';\r\n//import { ArrRow } from './arrRow';\r\nimport { observable, computed } from 'mobx';\r\nimport { ContextRule } from './rules';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport abstract class Context {\r\n    private subContexts:{[name:string]:{[rowKey:string]:Context}};\r\n    readonly form: Form;\r\n    readonly uiSchema: UiSchema;\r\n    readonly initData: any;\r\n    readonly inNode: boolean;           // true: 在</> 流中定义Field\r\n    readonly widgets: {[name:string]: Widget} = {};\r\n    readonly rules: ContextRule[];\r\n    readonly isRow: boolean;\r\n    @observable errors: string[] = [];\r\n    @observable errorWidgets:Widget[] = [];\r\n\r\n    constructor(form: Form, uiSchema: UiSchema, data: any, inNode: boolean, isRow: boolean) {\r\n        this.form = form;\r\n        this.uiSchema = uiSchema;\r\n        this.initData = data;\r\n        this.inNode = inNode;\r\n        this.isRow = isRow;\r\n        if (uiSchema !== undefined) {\r\n            let {rules} = uiSchema;\r\n            if (rules !== undefined) {\r\n                this.rules = [];\r\n                if (Array.isArray(rules) === false)\r\n                    this.rules.push(rules as ContextRule);\r\n                else\r\n                    this.rules.push(...rules as ContextRule[]);\r\n            }\r\n        }\r\n    }\r\n\r\n    getArrRowContexts(arrName: string) {\r\n        if (this.subContexts === undefined) this.subContexts = {};\r\n        let arrRowContexts = this.subContexts[name];\r\n        if (arrRowContexts === undefined) this.subContexts[name] = arrRowContexts = {};\r\n        return arrRowContexts;\r\n    }\r\n\r\n    abstract get data():any;\r\n    abstract getItemSchema(itemName:string):ItemSchema;\r\n    abstract getUiItem(itemName:string):UiItem;\r\n    get arrName():string {return undefined}\r\n    getValue(itemName:string):any {return this.initData[itemName]}\r\n    setValue(itemName:string, value:any) {\r\n        this.initData[itemName] = value;\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setValue(value);\r\n    }\r\n    getDisabled(itemName:string):boolean {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) return widget.getDisabled();\r\n        return undefined;\r\n    }\r\n    setDisabled(itemName:string, value:boolean) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setDisabled(value);\r\n    }\r\n    getReadOnly(itemName:string):boolean {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.getReadOnly();\r\n        return undefined;\r\n    }\r\n    setReadOnly(itemName:string, value:boolean) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setReadOnly(value);\r\n    }\r\n    getVisible(itemName:string):boolean {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.getVisible();\r\n        return undefined;\r\n    }\r\n    setVisible(itemName:string, value:boolean) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setVisible(value);\r\n    }\r\n\r\n    checkFieldRules() {\r\n        for (let i in this.widgets) {\r\n            this.widgets[i].checkRules();\r\n        }\r\n        if (this.subContexts === undefined) return;\r\n        for (let i in this.subContexts) {\r\n            let arrRowContexts = this.subContexts[i];\r\n            for (let j in arrRowContexts) {\r\n                arrRowContexts[j].checkFieldRules();\r\n            }\r\n        }\r\n    }\r\n\r\n    checkContextRules() {\r\n        if (this.rules === undefined) return;\r\n        this.clearContextErrors();\r\n        for (let rule of this.rules) {\r\n            let ret = rule(this);\r\n            if (ret === undefined) continue;\r\n            if (Array.isArray(ret) === true) {\r\n                this.errors.push(...ret as string[]);\r\n            }\r\n            else if (typeof ret === 'string') {\r\n                this.errors.push(ret as string);\r\n            }\r\n            else {\r\n                for (let i in ret as object) this.setError(i, ret[i]);\r\n            }\r\n        }\r\n        if (this.subContexts === undefined) return;\r\n        for (let i in this.subContexts) {\r\n            let arrRowContexts = this.subContexts[i];\r\n            for (let j in arrRowContexts) {\r\n                let rowContext = arrRowContexts[j];\r\n                rowContext.removeErrors();\r\n                rowContext.checkContextRules();\r\n            }\r\n        }\r\n    }\r\n\r\n    setError(itemName:string, error:string) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget === undefined) return;\r\n        widget.setContextError(error);\r\n        this.addErrorWidget(widget);\r\n    }\r\n\r\n    clearContextErrors() {\r\n        for (let i in this.widgets) this.widgets[i].clearContextError();\r\n    }\r\n\r\n    checkRules() {\r\n        this.checkFieldRules();\r\n        this.checkContextRules();\r\n    }\r\n\r\n    addErrorWidget(widget:Widget) {\r\n        let pos = this.errorWidgets.findIndex(v => v === widget);\r\n        if (pos < 0) this.errorWidgets.push(widget);\r\n    }\r\n    removeErrorWidget(widget:Widget) {\r\n        let pos = this.errorWidgets.findIndex(v => v === widget);\r\n        if (pos >= 0) this.errorWidgets.splice(pos, 1);\r\n    }\r\n\r\n    protected checkHasError():boolean {\r\n        let ret = (this.errorWidgets.length + this.errors.length) > 0;\r\n        if (ret === true) return true;\r\n        if (this.subContexts === undefined) return false;\r\n        for (let i in this.subContexts) {\r\n            let arrRowContexts = this.subContexts[i];\r\n            for (let j in arrRowContexts) {\r\n                if (arrRowContexts[j].hasError === true) return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    @computed get hasError():boolean {\r\n        return this.checkHasError();\r\n    };\r\n\r\n    removeErrors() {\r\n        this.errors.splice(0);\r\n        this.errorWidgets.splice(0);\r\n        for (let i in this.widgets) {\r\n            let widget = this.widgets[i];\r\n            if (widget === undefined) continue;\r\n            widget.clearContextError();\r\n        }\r\n    }\r\n\r\n    renderErrors = observer((): JSX.Element => {\r\n        let {errors} = this;\r\n        if (errors.length === 0) return null;\r\n        return <>\r\n            {errors.map(err => <span key={err} className=\"text-danger inline-block my-1 ml-3\">\r\n                <i className=\"fa fa-exclamation-circle\" /> &nbsp;{err}\r\n            </span>)}\r\n        </>\r\n    });\r\n}\r\n\r\nlet rowKeySeed:number = 1;\r\nexport class RowContext extends Context {\r\n    readonly parentContext: Context;\r\n    readonly arrSchema: ArrSchema;\r\n    readonly uiSchema: UiArr;\r\n    //readonly row: ArrRow;\r\n    readonly rowKey: number;\r\n    readonly data: any;\r\n    constructor(parentContext:Context, arrSchema: ArrSchema, data: any, inNode: boolean) {\r\n        let uiArr:UiArr;\r\n        let {uiSchema} = parentContext;\r\n        if (uiSchema !== undefined) {\r\n            let {items} = uiSchema;\r\n            if (items !== undefined) uiArr = items[arrSchema.name] as UiArr;\r\n        }\r\n        super(parentContext.form, uiArr, data, inNode, true);\r\n        this.parentContext = parentContext;\r\n        this.arrSchema = arrSchema;\r\n        this.rowKey = rowKeySeed++;\r\n        this.data = data;\r\n    }\r\n    getItemSchema(itemName:string):ItemSchema {return this.arrSchema.itemSchemas[itemName]}\r\n    getUiItem(itemName:string):UiItem {\r\n        if (this.uiSchema === undefined) return undefined;\r\n        let {items} = this.uiSchema;\r\n        if (items === undefined) return undefined;\r\n        return items[itemName]\r\n    }\r\n    get arrName():string {return this.arrSchema.name}\r\n    //get data() {return this.row.data;}\r\n    removeErrors() {\r\n        super.removeErrors();\r\n        this.parentContext.removeErrors();\r\n    }\r\n\r\n    get parentData():any {return this.parentContext.data;}\r\n}\r\n\r\nexport class FormContext extends Context {\r\n    constructor(form:Form, inNode:boolean) {\r\n        super(form, form.uiSchema, form.data, inNode, false);\r\n    }\r\n    get data():any {return this.form.data}\r\n    getItemSchema(itemName:string):ItemSchema {return this.form.itemSchemas[itemName]}\r\n    getUiItem(itemName:string):UiItem {\r\n        let {uiSchema} = this.form;\r\n        if (uiSchema === undefined) return undefined;\r\n        let {items} = uiSchema;\r\n        if (items === undefined) return undefined;\r\n        return items[itemName]\r\n    }\r\n}\r\n\r\nexport const ContextContainer = React.createContext<Context>({} as any);\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { jsonStringify } from '../../tools';\r\n\r\nexport type TypeViewModel = typeof ViewModel;\r\nexport type TypeView = React.StatelessComponent<{vm: ViewModel, className?:string|string[]}>;\r\nexport type TypeContent = React.StatelessComponent<any>;\r\n\r\nexport abstract class ViewModel {\r\n    protected abstract get view(): TypeView;\r\n    render(className?:string|string[]):JSX.Element {\r\n        if (this.view === undefined) return <div>??? viewModel 必须定义 view ???</div>\r\n        return React.createElement(this.view, {vm: this, className:className});\r\n    }\r\n}\r\n\r\nexport const PureJSONContent = (values, x?:any) => <>content: {jsonStringify(values)}</>;\r\nexport const JSONContent = observer(PureJSONContent);\r\nexport const RowContent = \r\n    (values) => <div className=\"px-3 py-2\">{jsonStringify(values)}</div>\r\n;\r\n","function replacer(key:string, value:any) {\r\n    let first = key.substr(0, 1);\r\n    switch (first) {\r\n        default: return value;\r\n        case '$':\r\n        case '_': return;\r\n    }\r\n}\r\n\r\nexport function jsonStringify(value:any) {\r\n    return JSON.stringify(value, replacer, ' ');\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { BoxId, Tuid } from \"../entities\";\r\nimport { PureJSONContent } from '../controllers';\r\n\r\ntype TvTemplet = (values?:any, x?:any) => JSX.Element;\r\n\r\ninterface Props {\r\n    tuidValue: number|BoxId, \r\n    ui?: TvTemplet,\r\n    x?: any,\r\n    nullUI?: ()=>JSX.Element\r\n}\r\n\r\nfunction boxIdContent(bi: number|BoxId, ui:TvTemplet, x:any) {\r\n    if (typeof bi === 'number') return <>{bi}</>;\r\n    let {id, _$tuid, _$com} = bi as BoxId;\r\n    let t:Tuid = _$tuid;\r\n    if (t === undefined) {\r\n        if (ui !== undefined) return ui(bi, x);\r\n        return PureJSONContent(bi, x);\r\n    }\r\n    let com = ui || _$com;\r\n    if (com === undefined) {\r\n        com = bi._$com = t.getTuidContent();\r\n    }\r\n    let val = t.valueFromId(id);\r\n    if (typeof val === 'number') val = {id: val};\r\n    if (ui !== undefined) {\r\n        let ret = ui(val, x);\r\n        if (ret !== undefined) return ret;\r\n        return <>{id}</>;\r\n    }\r\n    return React.createElement(com, val);\r\n}\r\n\r\nconst Tv = observer(({tuidValue, ui, x, nullUI}:Props) => {\r\n    let ttv = typeof tuidValue;\r\n    switch (ttv) {\r\n        default:\r\n            if (ui === undefined)\r\n                return <>{ttv}-{tuidValue}</>;\r\n            else {\r\n                let ret = ui(tuidValue, x);\r\n                if (ret !== undefined) return ret;\r\n                return <>{tuidValue}</>;\r\n            }\r\n        case 'undefined':\r\n            break;\r\n        case 'object':\r\n            if (tuidValue !== null) return boxIdContent(tuidValue, ui, x);\r\n            break;\r\n        case 'number':\r\n            return <>id...{tuidValue}</>;\r\n    }       \r\n    if (nullUI === undefined) return <>null</>;\r\n    return nullUI();\r\n});\r\n\r\nexport const tv = (tuidValue:number|BoxId, ui?:TvTemplet, x?:any, nullUI?:()=>JSX.Element):JSX.Element => {\r\n    return <Tv tuidValue={tuidValue} ui={ui} x={x} nullUI={nullUI} />;\r\n};\r\n","export * from './jsonStringify';\r\nexport * from './tv';\r\n","import { decodeGuestToken } from '../user';\r\nimport { CenterApi } from './uqApi';\r\n\r\nexport class GuestApi extends CenterApi {\r\n    async guest(): Promise<any> {\r\n        //let guest = nav.local.guest.get();\r\n        let ret = await this.get('', {});\r\n        switch (typeof ret) {\r\n            default: return;\r\n            case 'string': return decodeGuestToken(ret);\r\n            case 'object':\r\n                let guest = decodeGuestToken(ret.token);\r\n                return guest;\r\n        }\r\n    }\r\n\r\n    async unitFromName(unitName:string): Promise<number> {\r\n        let ret = await this.get(unitName);\r\n        return ret && ret.unit;\r\n    }\r\n}\r\n\r\nexport const guestApi = new GuestApi('tv/guest/', undefined);\r\n","export {WSChannel, wsBridge, postWsToTop} from './wsChannel';\r\nexport * from './apiBase';\r\nexport * from './guestApi';\r\nexport * from './uqApi';\r\nexport {meInFrame, loadAppUqs, isBridged} from './appBridge';\r\nexport * from './host';\r\nexport {httpGet} from './httpChannel';\r\n","export * from './nav';\r\nexport * from './titleBar';\r\nexport * from './page';\r\nexport * from './VM';\r\nexport * from './schema';\r\nexport * from './form';\r\nexport * from './edit';\r\nexport * from './res';\r\nexport * from './tabs';\r\nexport * from './loading';\r\nexport * from './image';\r\nexport * from './resUploader';","import _ from 'lodash';\r\nimport {nav} from '../ui';\r\nimport {uid} from '../uid';\r\nimport {uqTokenApi as uqTokenApi, callCenterapi, CenterAppApi, AppUq, centerToken, App, setCenterToken} from './uqApi';\r\nimport {setSubAppWindow} from './wsChannel';\r\nimport { host } from './host';\r\n\r\nexport interface UqToken {\r\n    name: string;\r\n    url: string;\r\n    urlDebug: string;\r\n    token: string;\r\n}\r\ninterface UqTokenAction extends UqToken {\r\n    resolve: (value?: UqToken | PromiseLike<UqToken>) => void;\r\n    reject: (reason?: any) => void;\r\n}\r\nconst uqTokens:{[uqName:string]: UqTokenAction}  = {};\r\nexport function logoutUqTokens() {\r\n    for (let i in uqTokens) uqTokens[i] = undefined;\r\n}\r\n\r\nexport interface AppInFrame {\r\n    hash: string;\r\n    unit: number;       // unit id\r\n    page?: string;\r\n    param?: string[];\r\n}\r\nconst appsInFrame:{[key:string]:AppInFrame} = {};\r\n\r\nclass AppInFrameClass implements AppInFrame {\r\n    hash: string;\r\n    private _unit: number;\r\n    get unit(): number {return this._unit;}       // unit id\r\n    set unit(val:number) { this._unit=val;}\r\n    page?: string;\r\n    param?: string[];\r\n}\r\n\r\nexport let meInFrame:AppInFrame = new AppInFrameClass();\r\n/* {\r\n    hash: undefined,\r\n    get unit():number {return } undefined, //debugUnitId,\r\n    page: undefined;\r\n    param: undefined,\r\n}*/\r\n\r\nexport function isBridged():boolean {\r\n    return self !== window.parent;\r\n}\r\n\r\nwindow.addEventListener('message', async function(evt) {\r\n    var message = evt.data;\r\n    switch (message.type) {\r\n        case 'sub-frame-started':\r\n            subFrameStarted(evt);\r\n            break;\r\n        case 'ws':\r\n            //wsBridge.receive(message.msg);\r\n            await nav.onReceive(message.msg);\r\n            break;\r\n        case 'init-sub-win':\r\n            await initSubWin(message);\r\n            break;\r\n        case 'pop-app':\r\n            nav.navBack();\r\n            break;\r\n        case 'center-api':\r\n            await callCenterApiFromMessage(evt.source as Window, message);\r\n            break;\r\n        case 'center-api-return':\r\n            bridgeCenterApiReturn(message);\r\n            break;\r\n        case 'app-api':\r\n            console.log(\"receive PostMessage: %s\", JSON.stringify(message));\r\n            let ret = await onReceiveAppApiMessage(message.hash, message.apiName);\r\n            console.log(\"onReceiveAppApiMessage: %s\", JSON.stringify(ret));\r\n            (evt.source as Window).postMessage({\r\n                type: 'app-api-return', \r\n                apiName: message.apiName,\r\n                url: ret.url,\r\n                urlDebug: ret.urlDebug,\r\n                token: ret.token} as any, \"*\");\r\n            break;\r\n        case 'app-api-return':\r\n            console.log(\"app-api-return: %s\", JSON.stringify(message));\r\n            console.log('await onAppApiReturn(message);');\r\n            await onAppApiReturn(message);\r\n            break;\r\n        default:\r\n            this.console.log('message: %s', JSON.stringify(message));\r\n            break;\r\n    }\r\n});\r\n\r\nfunction subFrameStarted(evt:any) {\r\n    var message = evt.data;\r\n    let subWin = evt.source as Window;\r\n    setSubAppWindow(subWin);\r\n    hideFrameBack(message.hash);\r\n    let msg:any = _.clone(nav.user);\r\n    msg.type = 'init-sub-win';\r\n    subWin.postMessage(msg, '*');\r\n}\r\nfunction hideFrameBack(hash:string) {\r\n    let el = document.getElementById(hash);\r\n    if (el !== undefined) el.hidden = true;\r\n}\r\nasync function initSubWin(message:any) {\r\n    console.log('initSubWin: set nav.user', message);\r\n    let user = nav.user = message; // message.user;\r\n    setCenterToken(user.id, user.token);\r\n    await nav.showAppView();\r\n}\r\nasync function onReceiveAppApiMessage(hash: string, apiName: string): Promise<UqToken> {\r\n    let appInFrame = appsInFrame[hash];\r\n    if (appInFrame === undefined) return {name:apiName, url:undefined, urlDebug:undefined, token:undefined};\r\n    let {unit} = appInFrame;\r\n    let parts = apiName.split('/');\r\n    let ret = await uqTokenApi.uq({unit: unit, uqOwner: parts[0], uqName: parts[1]});\r\n    if (ret === undefined) {\r\n        console.log('apiTokenApi.api return undefined. api=%s, unit=%s', apiName, unit);\r\n        throw 'api not found';\r\n    }\r\n    return {name: apiName, url: ret.url, urlDebug:ret.urlDebug, token: ret.token};\r\n}\r\n\r\nasync function onAppApiReturn(message:any) {\r\n    let {apiName, url, urlDebug, token} = message;\r\n    let action = uqTokens[apiName];\r\n    if (action === undefined) {\r\n        throw 'error app api return';\r\n        //return;\r\n    }\r\n    let realUrl = host.getUrlOrDebug(url, urlDebug);\r\n    console.log('onAppApiReturn(message:any): url=' + url + ', debug=' + urlDebug + ', real=' + realUrl);\r\n    action.url = realUrl;\r\n    action.token = token;\r\n    action.resolve(action);\r\n}\r\n\r\nexport function setMeInFrame(appHash: string):AppInFrame {\r\n    let parts = appHash.split('-');\r\n    let len = parts.length;\r\n    meInFrame.hash = parts[0].substr(3);\r\n    if (len>0) meInFrame.unit = Number(parts[1]);\r\n    if (len>1) meInFrame.page = parts[2];\r\n    if (len>2) meInFrame.param = parts.slice(3);\r\n    return meInFrame;\r\n}\r\n\r\nexport function appUrl(url: string, unitId: number, page?:string, param?:any[]):{url:string; hash:string} {\r\n    let u:string;\r\n    for (;;) {\r\n        u = uid();\r\n        let a = appsInFrame[u];\r\n        if (a === undefined) {\r\n            appsInFrame[u] = {hash:u, unit:unitId};\r\n            break;\r\n        }\r\n    }\r\n    url += '#tv' + u + '-' + unitId;\r\n    if (page !== undefined) {\r\n        url += '-' + page;\r\n        if (param !== undefined) {\r\n            for (let i=0; i<param.length; i++) {\r\n                url += '-' + param[i];\r\n            }\r\n        }\r\n    }\r\n    return {url: url, hash: u};\r\n}\r\n\r\nexport async function loadAppUqs(appOwner:string, appName): Promise<App> {\r\n    let centerAppApi = new CenterAppApi('tv/', undefined);\r\n    let unit = meInFrame.unit;\r\n    let ret = await centerAppApi.uqs(unit, appOwner, appName);\r\n    centerAppApi.checkUqs(unit, appOwner, appName).then(v => {\r\n        if (v === false) nav.start();\r\n    });\r\n    return ret;\r\n}\r\n\r\nexport async function appUq(uq:string, uqOwner:string, uqName:string): Promise<UqToken> {\r\n    let uqToken = uqTokens[uq];\r\n    if (uqToken !== undefined) return uqToken;\r\n    if (!isBridged()) {\r\n        uqToken = await uqTokenApi.uq({unit: meInFrame.unit, uqOwner:uqOwner, uqName:uqName});\r\n        if (uqToken === undefined) {\r\n            let err = 'unauthorized call: uqTokenApi center return undefined!';\r\n            throw err;\r\n        }\r\n        if (uqToken.token === undefined) uqToken.token = centerToken;\r\n        let {url, urlDebug} = uqToken;\r\n        let realUrl = host.getUrlOrDebug(url, urlDebug);\r\n        console.log('realUrl: %s', realUrl);\r\n        uqToken.url = realUrl;\r\n        uqTokens[uq] = uqToken;\r\n        return uqToken;\r\n    }\r\n    console.log(\"appApi parent send: %s\", meInFrame.hash);\r\n    uqToken = {\r\n        name: uq,\r\n        url: undefined,\r\n        urlDebug: undefined,\r\n        token: undefined,\r\n        resolve: undefined,\r\n        reject: undefined,\r\n    };\r\n    uqTokens[uq] = uqToken;\r\n    return new Promise<UqToken>((resolve, reject) => {\r\n        uqToken.resolve = async (at) => {\r\n            let a = await at;\r\n            console.log('return from parent window: %s', JSON.stringify(a));\r\n            uqToken.url = a.url;\r\n            uqToken.urlDebug = a.urlDebug;\r\n            uqToken.token = a.token;\r\n            resolve(uqToken);\r\n        }\r\n        uqToken.reject = reject;\r\n        (window.opener || window.parent).postMessage({\r\n            type: 'app-api',\r\n            apiName: uq,\r\n            hash: meInFrame.hash,\r\n        }, \"*\");\r\n    });\r\n}\r\n\r\ninterface BridgeCenterApi {\r\n    id: string;\r\n    resolve: (value?:any)=>any;\r\n    reject: (reason?:any)=>void;\r\n}\r\nconst brideCenterApis:{[id:string]: BridgeCenterApi} = {};\r\nexport async function bridgeCenterApi(url:string, method:string, body:any):Promise<any> {\r\n    console.log('bridgeCenterApi: url=%s, method=%s', url, method);\r\n    return await new Promise<any>(async (resolve, reject) => {\r\n        let callId:string;\r\n        for (;;) {\r\n            callId = uid();\r\n            let bca = brideCenterApis[callId];\r\n            if (bca === undefined) {\r\n                brideCenterApis[callId] = {\r\n                    id: callId,\r\n                    resolve: resolve,\r\n                    reject: reject,\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        (window.opener || window.parent).postMessage({\r\n            type: 'center-api',\r\n            callId: callId,\r\n            url: url,\r\n            method: method,\r\n            body: body\r\n        }, '*');\r\n    });\r\n}\r\n\r\nasync function callCenterApiFromMessage(from:Window, message):Promise<void> {\r\n    let {callId, url, method, body} = message;\r\n    let result = await callCenterapi.directCall(url, method, body);\r\n    from.postMessage({\r\n        type: 'center-api-return',\r\n        callId: callId,\r\n        result: result,\r\n    }, '*');\r\n}\r\n\r\nfunction bridgeCenterApiReturn(message:any) {\r\n    let {callId, result} = message;\r\n    let bca = brideCenterApis[callId];\r\n    if (bca === undefined) return;\r\n    brideCenterApis[callId] = undefined;\r\n    bca.resolve(result);\r\n}\r\n","import {nav} from '../ui/nav';\r\nimport {FetchError} from '../fetchError';\r\n\r\nexport interface HttpChannelUI {\r\n    startWait():void;\r\n    endWait():void;\r\n    showError(error:FetchError):Promise<void>;\r\n}\r\n\r\nexport class HttpChannelNavUI implements HttpChannelUI {\r\n    startWait() {\r\n        nav.startWait();\r\n    }\r\n    endWait() {\r\n        nav.endWait();\r\n    }\r\n    async showError(error:FetchError):Promise<void> {\r\n        nav.endWait();\r\n        /*\r\n        if (error.name === 'SyntaxError') {\r\n            error = {\r\n                name: error.name,\r\n                message: error.message,\r\n            }\r\n        }*/\r\n        await nav.onError(error);\r\n    }\r\n}\r\n\r\n","import _ from 'lodash';\r\nimport {HttpChannel} from './httpChannel';\r\nimport {HttpChannelUI, HttpChannelNavUI} from './httpChannelUI';\r\nimport {appUq} from './appBridge';\r\nimport {ApiBase} from './apiBase';\r\nimport { host } from './host';\r\n\r\nlet channelUIs:{[name:string]: HttpChannel} = {};\r\nlet channelNoUIs:{[name:string]: HttpChannel} = {};\r\n\r\nexport function logoutApis() {\r\n    channelUIs = {};\r\n    channelNoUIs = {};\r\n    logoutUnitxApis();\r\n}\r\n\r\ninterface UqLocal {\r\n    value: any;\r\n    tick?: number;\r\n    isNet?: boolean;\r\n}\r\ninterface UqLocals {\r\n    user: number;\r\n    unit: number;\r\n    uqs: {[uq:string]: UqLocal};\r\n}\r\n\r\nconst uqLocalEntities = 'uqLocalEntities';\r\nclass CacheUqLocals {\r\n    private local:UqLocals;\r\n\r\n    async loadAccess(uqApi: UqApi):Promise<any> {\r\n        try {\r\n            let {uqOwner, uqName} = uqApi;\r\n            if (this.local === undefined) {\r\n                let ls = localStorage.getItem(uqLocalEntities);\r\n                if (ls !== null) {\r\n                    this.local = JSON.parse(ls);\r\n                }\r\n            }\r\n            if (this.local !== undefined) {\r\n                let {user, uqs} = this.local;\r\n                if (user !== loginedUserId || uqs === undefined) {\r\n                    this.local = undefined;\r\n                }\r\n                else {\r\n                    for (let i in uqs) {\r\n                        let ul = uqs[i];\r\n                        ul.isNet = undefined;\r\n                    }\r\n                }\r\n            }\r\n            if (this.local === undefined) {\r\n                this.local = {\r\n                    user: loginedUserId,\r\n                    unit: undefined,\r\n                    uqs: {}\r\n                };\r\n            }\r\n\r\n            let ret: any;\r\n            let un = uqOwner+'/'+uqName;\r\n            let uq = this.local.uqs[un];\r\n            if (uq !== undefined) {\r\n                let {value} = uq;\r\n                ret = value;\r\n            }\r\n            if (ret === undefined) {\r\n                ret = await uqApi.__loadAccess();\r\n                this.saveLocal(un, ret);\r\n            }\r\n            return _.cloneDeep(ret);\r\n        }\r\n        catch (err) {\r\n            this.local = undefined;\r\n            localStorage.removeItem(uqLocalEntities);\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    private saveLocal(uqName:string, accessValue: any) {\r\n        this.local.uqs[uqName] = {\r\n            value: accessValue,\r\n            isNet: true,\r\n        }\r\n        let str = JSON.stringify(this.local);\r\n        localStorage.setItem(uqLocalEntities, str);\r\n    }\r\n\r\n    async checkAccess(uqApi: UqApi):Promise<boolean> {\r\n        let {uqOwner, uqName} = uqApi;\r\n        let un = uqOwner+'/'+uqName;\r\n        let uq = this.local.uqs[un];\r\n        if (uq === undefined) return false;\r\n        let {isNet, value} = uq;\r\n        if (isNet === true) return true;\r\n        let ret = await uqApi.__loadAccess();\r\n        let isMatch = _.isMatch(value, ret);\r\n        if (isMatch === false) {\r\n            this.saveLocal(un, ret);\r\n        }\r\n        return isMatch;\r\n\r\n    }\r\n}\r\n\r\nconst localUqs = new CacheUqLocals;\r\nexport class UqApi extends ApiBase {\r\n    private access:string[];\r\n    uqOwner: string;\r\n    uqName: string;\r\n    uq: string;\r\n\r\n    constructor(basePath: string, uqOwner: string, uqName: string, access:string[], showWaiting?: boolean) {\r\n        super(basePath, showWaiting);\r\n        if (uqName) {\r\n            this.uqOwner = uqOwner;\r\n            this.uqName = uqName;\r\n            this.uq = uqOwner + '/' + uqName;\r\n        }\r\n        this.access = access;\r\n        this.showWaiting = showWaiting;\r\n    }\r\n\r\n    protected async getHttpChannel(): Promise<HttpChannel> {\r\n        let channels: {[name:string]: HttpChannel};\r\n        let channelUI: HttpChannelNavUI;\r\n        if (this.showWaiting === true || this.showWaiting === undefined) {\r\n            channels = channelUIs;\r\n            channelUI = new HttpChannelNavUI();\r\n        }\r\n        else {\r\n            channels = channelNoUIs;\r\n        }\r\n        let channel = channels[this.uq];\r\n        if (channel !== undefined) return channel;\r\n        let uqToken = await appUq(this.uq, this.uqOwner, this.uqName);\r\n        this.token = uqToken.token;\r\n        channel = new HttpChannel(false, uqToken.url, uqToken.token, channelUI);\r\n        return channels[this.uq] = channel;\r\n    }\r\n\r\n\r\n    async update():Promise<string> {\r\n        return await this.get('update');\r\n    }\r\n\r\n    async __loadAccess():Promise<any> {\r\n        let acc = this.access === undefined?\r\n            '' :\r\n            this.access.join('|');\r\n        let ret = await this.get('access', {acc:acc});\r\n        return ret;\r\n    }\r\n\r\n    async loadAccess():Promise<any> {\r\n        return await localUqs.loadAccess(this);\r\n    }\r\n\r\n    async loadEntities():Promise<any> {\r\n        return await this.get('entities');\r\n    }\r\n\r\n    async checkAccess():Promise<boolean> {\r\n        return await localUqs.checkAccess(this);\r\n    }\r\n\r\n    async schema(name:string):Promise<any> {\r\n        return await this.get('schema/' + name);\r\n    }\r\n\r\n    async schemas(names:string[]):Promise<any[]> {\r\n        return await this.post('schema', names);\r\n    }\r\n\r\n    async tuidGet(name:string, id:number):Promise<any> {\r\n        return await this.get('tuid/' + name + '/' + id);\r\n    }\r\n\r\n    async tuidGetAll(name:string):Promise<any[]> {\r\n        return await this.get('tuid-all/' + name + '/');\r\n    }\r\n\r\n    async tuidSave(name:string, params):Promise<any> {\r\n        return await this.post('tuid/' + name, params);\r\n    }\r\n\r\n    async tuidSearch(name:string, arr:string, owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        let ret = await this.post('tuids/' + name, {\r\n            arr: arr,\r\n            owner: owner,\r\n            key: key,\r\n            pageStart: pageStart,\r\n            pageSize: pageSize\r\n        });\r\n        return ret;\r\n    }\r\n    async tuidArrGet(name:string, arr:string, owner:number, id:number):Promise<any> {\r\n        return await this.get('tuid-arr/' + name + '/' + owner + '/' + arr + '/' + id);\r\n    }\r\n    async tuidArrGetAll(name:string, arr:string, owner:number):Promise<any[]> {\r\n        return await this.get('tuid-arr-all/' + name + '/' + owner + '/' + arr + '/');\r\n    }\r\n    async tuidArrSave(name:string, arr:string, owner:number, params):Promise<any> {\r\n        return await this.post('tuid-arr/' + name + '/' + owner + '/' + arr + '/', params);\r\n    }\r\n    async tuidArrPos(name:string, arr:string, owner:number, id:number, order:number):Promise<any> {\r\n        return await this.post('tuid-arr-pos/' + name + '/' + owner + '/' + arr + '/', {\r\n            id: id,\r\n            $order: order\r\n        });\r\n    }\r\n\r\n    async tuidIds(name:string, arr:string, ids:number[]):Promise<any[]> {\r\n        try {\r\n            let url = 'tuidids/' + name + '/';\r\n            if (arr !== undefined) url += arr;\r\n            else url += '$';\r\n            let ret = await this.post(url, ids);\r\n            return ret;\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    async proxied(name:string, proxy:string, id:number):Promise<any> {\r\n        try {\r\n            let url = 'tuid-proxy/' + name + '/' + proxy + '/' + id;\r\n            let ret = await this.get(url);\r\n            return ret;\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    async sheetSave(name:string, data:object):Promise<any> {\r\n        return await this.post('sheet/' + name, data);\r\n    }\r\n\r\n    async sheetAction(name:string, data:object) {\r\n        return await this.put('sheet/' + name, data);\r\n    }\r\n\r\n    async stateSheets(name:string, data:object) {\r\n        return await this.post('sheet/' + name + '/states', data);\r\n    }\r\n\r\n    async stateSheetCount(name:string):Promise<any> {\r\n        return await this.get('sheet/' + name + '/statecount');\r\n    }\r\n\r\n    async getSheet(name:string, id:number):Promise<any> {\r\n        return await this.get('sheet/' + name + '/get/' + id);\r\n    }\r\n\r\n    async sheetArchives(name:string, data:object):Promise<any> {\r\n        return await this.post('sheet/' + name + '/archives', data);\r\n    }\r\n\r\n    async sheetArchive(name:string, id:number):Promise<any> {\r\n        return await this.get('sheet/' + name + '/archive/' + id);\r\n    }\r\n\r\n    async action(name:string, data:object):Promise<any> {\r\n        return await this.post('action/' + name, data);\r\n    }\r\n\r\n    async page(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\r\n        let p:any;\r\n        switch (typeof params) {\r\n            case 'undefined': p = {key: ''}; break;\r\n            default: p = _.clone(params); break;\r\n        }\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        return await this.post('query-page/' + name, p);\r\n    }\r\n\r\n    async query(name:string, params:any):Promise<any> {\r\n        let ret = await this.post('query/' + name, params);\r\n        return ret;\r\n    }\r\n/*\r\n    async history(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\r\n        let p = _.clone(params);\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        let ret = await this.post('history/' + name, p);\r\n        return ret;\r\n    }\r\n\r\n    async book(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\r\n        let p = _.clone(params);\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        let ret = await this.post('history/' + name, p);\r\n        return ret;\r\n    }\r\n*/\r\n    async user():Promise<any> {\r\n        return await this.get('user');\r\n    }\r\n}\r\n\r\nlet channels:{[unitId:number]: HttpChannel} = {};\r\n\r\nexport function logoutUnitxApis() {\r\n    channels = {};\r\n}\r\n\r\nexport class UnitxApi extends UqApi {\r\n    private unitId:number;\r\n    constructor(unitId:number) {\r\n        super('tv/', undefined, undefined, undefined, true);\r\n        this.unitId = unitId;\r\n    }\r\n\r\n    protected async getHttpChannel(): Promise<HttpChannel> {\r\n        let channel = channels[this.unitId];\r\n        if (channel !== undefined) return channel;\r\n        return channels[this.unitId] = await this.buildChannel();\r\n    }\r\n\r\n    private async buildChannel():Promise<HttpChannel> {\r\n        let channelUI = new HttpChannelNavUI();\r\n        let centerAppApi = new CenterAppApi('tv/', undefined);\r\n        let ret = await centerAppApi.unitxUq(this.unitId);\r\n        let {token, url, urlDebug} = ret;\r\n        let realUrl = host.getUrlOrDebug(url, urlDebug);\r\n        this.token = token;\r\n        return new HttpChannel(false, realUrl, token, channelUI);\r\n    }\r\n}\r\n\r\nlet centerHost:string;\r\n\r\nexport function setCenterUrl(url:string) {\r\n    console.log('setCenterUrl %s', url);\r\n    centerHost = url;\r\n    centerToken = undefined;\r\n    centerChannel = undefined;\r\n    centerChannelUI = undefined;\r\n}\r\n\r\nexport let centerToken:string|undefined = undefined;\r\n\r\nlet loginedUserId:number = 0;\r\nexport function setCenterToken(userId:number, t?:string) {\r\n    centerToken = t;\r\n    console.log('setCenterToken %s', t);\r\n    centerChannel = undefined;\r\n    centerChannelUI = undefined;\r\n}\r\n\r\nlet centerChannelUI:HttpChannel;\r\nlet centerChannel:HttpChannel;\r\nfunction getCenterChannelUI():HttpChannel {\r\n    if (centerChannelUI !== undefined) return centerChannelUI;\r\n    return centerChannelUI = new HttpChannel(true, centerHost, centerToken, new HttpChannelNavUI());\r\n}\r\nfunction getCenterChannel():HttpChannel {\r\n    if (centerChannel !== undefined) return centerChannel;\r\n    return centerChannel = new HttpChannel(true, centerHost, centerToken);\r\n}\r\n\r\nexport abstract class CenterApi extends ApiBase {\r\n    constructor(path: string, showWaiting?: boolean) {\r\n        super(path, showWaiting);\r\n    }\r\n\r\n    protected async getHttpChannel(): Promise<HttpChannel> {\r\n        return (this.showWaiting === true || this.showWaiting === undefined)?\r\n            getCenterChannelUI():\r\n            getCenterChannel();\r\n    }\r\n}\r\n\r\nconst uqTokens = 'uqTokens';\r\nexport class UqTokenApi extends CenterApi {\r\n    private local: UqLocals;\r\n    async uq(params: {unit:number, uqOwner:string, uqName:string}):Promise<any> {\r\n        try {\r\n            let {unit:unitParam, uqOwner, uqName} = params;\r\n            if (this.local === undefined) {\r\n                let ls = localStorage.getItem(uqTokens);\r\n                if (ls !== null) {\r\n                    this.local = JSON.parse(ls);\r\n                }\r\n            }\r\n            if (this.local !== undefined) {\r\n                let {unit, user} = this.local;\r\n                if (unit !== unitParam || user !== loginedUserId) this.local = undefined;\r\n            }\r\n            if (this.local === undefined) {\r\n                this.local = {\r\n                    user: loginedUserId,\r\n                    unit: params.unit,\r\n                    uqs: {}\r\n                };\r\n            }\r\n\r\n            let un = uqOwner+'/'+uqName;\r\n            let nowTick = new Date().getTime();\r\n            let uq = this.local.uqs[un];\r\n            if (uq !== undefined) {\r\n                let {tick, value} = uq;\r\n                if ((nowTick - tick) < 24*3600*1000) {\r\n                    return _.clone(value);\r\n                }\r\n            }\r\n            let ret = await this.get('app-uq', params);\r\n            this.local.uqs[un] = {\r\n                tick: nowTick,\r\n                value: ret,\r\n            }\r\n            localStorage.setItem(uqTokens, JSON.stringify(this.local));\r\n            return _.clone(ret);\r\n        }\r\n        catch (err) {\r\n            this.local = undefined;\r\n            localStorage.removeItem(uqTokens);\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport const uqTokenApi = new UqTokenApi('tv/tie/', undefined);\r\n\r\nexport class CallCenterApi extends CenterApi {\r\n    directCall(url:string, method:string, body:any):Promise<any> {\r\n        return this.call(url, method, body);\r\n    }\r\n}\r\nexport const callCenterapi = new CallCenterApi('', undefined);\r\n\r\nexport interface App {\r\n    id: number;\r\n    uqs: AppUq[];\r\n}\r\n\r\nexport interface AppUq {\r\n    id: number;\r\n    uqOwner: string;\r\n    uqName: string;\r\n    url: string;\r\n    urlDebug: string;\r\n    ws: string;\r\n    wsDebug: string;\r\n    access: string;\r\n    token: string;\r\n}\r\n\r\nexport class CenterAppApi extends CenterApi {\r\n    private cachedUqs: any;\r\n    async uqs(unit:number, appOwner:string, appName:string):Promise<App> {\r\n        let ret:any;\r\n        let ls = localStorage.getItem('appUqs');\r\n        if (ls !== null) {\r\n            let rLs = JSON.parse(ls);\r\n            let {unit:rUnit, appOwner:rAppOwner, appName:rAppName, value} = rLs;\r\n            if (unit === rUnit && appOwner === rAppOwner && appName === rAppName) ret = value;\r\n        }\r\n        if (ret === undefined) {\r\n            ret = await this.uqsPure(unit, appOwner, appName);\r\n            let obj = {\r\n                unit:unit, \r\n                appOwner:appOwner, \r\n                appName:appName, \r\n                value: ret,\r\n            }\r\n            localStorage.setItem('appUqs', JSON.stringify(obj));\r\n        }\r\n        return this.cachedUqs = _.cloneDeep(ret);\r\n    }\r\n    private async uqsPure(unit:number, appOwner:string, appName:string):Promise<App> {\r\n        return await this.get('tie/app-uqs', {unit:unit, appOwner:appOwner, appName:appName});\r\n    }\r\n    async checkUqs(unit:number, appOwner:string, appName:string):Promise<boolean> {\r\n        let ret = await this.uqsPure(unit, appOwner, appName);\r\n        return _.isMatch(this.cachedUqs, ret);\r\n    }\r\n    async unitxUq(unit:number):Promise<AppUq> {\r\n        return await this.get('tie/unitx-uq', {unit:unit});\r\n    }\r\n    async changePassword(param: {orgPassword:string, newPassword:string}) {\r\n        return await this.post('tie/reset-password', param);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {IComputedValue} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash';\r\nimport {TitleBar} from './titleBar';\r\n\r\nexport interface ScrollProps {\r\n    onScroll?: (e:any) => void;\r\n    onScrollTop?: () => void;\r\n    onScrollBottom?: () => void;\r\n}\r\ninterface ScrollViewProps extends ScrollProps {\r\n    className?: string;\r\n}\r\nconst scrollTimeGap = 100;\r\nclass ScrollView extends React.Component<ScrollViewProps, null> {\r\n    private bottomTime:number = 0;\r\n    private topTime:number = 0;\r\n\r\n    private onScroll = async (e) => {\r\n        let {onScroll, onScrollTop, onScrollBottom} = this.props;\r\n        if (onScroll) this.props.onScroll(e);\r\n        let el = e.target as HTMLBaseElement;\r\n        if (el.scrollTop < 30) {\r\n            //this.eachChild(this, 'top');\r\n            if (onScrollTop !== undefined) {\r\n                let topTime = new Date().getTime();\r\n                if (topTime-this.topTime > scrollTimeGap) {\r\n                    this.topTime = topTime;\r\n                    onScrollTop();\r\n                }\r\n            }\r\n        }\r\n        if (el.scrollTop + el.offsetHeight > el.scrollHeight - 30) {\r\n            //this.eachChild(this, 'bottom');\r\n            if (onScrollBottom !== undefined) {\r\n                let bottomTime = new Date().getTime();\r\n                if (bottomTime - this.bottomTime > scrollTimeGap) {\r\n                    this.bottomTime = bottomTime;\r\n                    onScrollBottom();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    private eachChild(c:any, direct:'top'|'bottom') {\r\n        let { props } = c;\r\n        if (props === undefined)\r\n            return;\r\n        let { children } = props;\r\n        if (children === undefined)\r\n            return;\r\n        React.Children.forEach(children, (child, index) => {\r\n            let {_$scroll} = child as any;\r\n            if (_$scroll) _$scroll(direct);\r\n            console.log(child.toString());\r\n            this.eachChild(child, direct);\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <main className={this.props.className} onScroll={this.onScroll}>\r\n                {this.props.children}\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport interface Tab extends ScrollProps {\r\n    title: string;\r\n    icon?: string;\r\n    content?: JSX.Element | (()=>JSX.Element);\r\n    header?: string;\r\n    isSelected?: boolean;\r\n    redDot?: IComputedValue<number>;\r\n    load?: () => Promise<void>;\r\n}\r\nexport interface TabState extends Tab {\r\n    isMounted?: boolean;\r\n}\r\nexport interface PageProps extends ScrollProps {\r\n    back?: 'close' | 'back' | 'none';\r\n    header?: boolean | string | JSX.Element;\r\n    keepHeader?: boolean;\r\n    right?: JSX.Element;\r\n    sideBar?: JSX.Element;\r\n    footer?: JSX.Element;\r\n    tabs?: Tab[];\r\n    logout?: boolean | (()=>void);\r\n}\r\nexport interface PageState {\r\n    cur?: Tab;\r\n    tabs?: TabState[];\r\n}\r\n\r\n@observer\r\nexport class Page extends React.Component<PageProps, PageState> {\r\n    private tabs:TabState[];\r\n    constructor(props: PageProps) {\r\n        super(props);\r\n        let {tabs} = props;\r\n        if (tabs === undefined || tabs.length === 0) return;\r\n        this.tabs = tabs;\r\n        let cur:Tab;\r\n        let tabStates:Tab[] = [];\r\n        for (let tab of tabs) {\r\n            let t:TabState = _.clone(tab);\r\n            if (cur === undefined) {\r\n                if (t.isSelected === true)\r\n                    cur = t;\r\n                else\r\n                    t.isSelected = false;\r\n            }\r\n            else {\r\n                t.isSelected = false;\r\n            }\r\n            t.isMounted = false;\r\n            tabStates.push(t);\r\n        }\r\n        this.state = {\r\n            cur: cur,\r\n            tabs: tabStates,\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (this.tabs === undefined) return;\r\n        let t0 = this.state.tabs[0];\r\n        if (t0 === undefined) return;\r\n        await this.onTabClick(t0);\r\n    }\r\n\r\n    private async onTabClick(tab: TabState) {\r\n        if (tab.isSelected === true) return;\r\n        let cur:TabState;\r\n        let tabs = this.state.tabs;\r\n        for (let t of tabs) {\r\n            if (t === tab) {\r\n                t.isSelected = true;\r\n                cur = t;\r\n            }\r\n            else\r\n                t.isSelected = false;\r\n        }\r\n        if (cur.isMounted !== true) {\r\n            let {load} = cur;\r\n            if (load !== undefined) {\r\n                await load();\r\n            }\r\n        }\r\n        this.setState({\r\n            cur: cur,\r\n            tabs: tabs\r\n        });\r\n    }\r\n\r\n    private onTouchStart(evt: React.TouchEvent<HTMLElement>) {\r\n    }\r\n\r\n    private renderTabs(footer: JSX.Element) {\r\n        const {header, back, right, keepHeader} = this.props;\r\n        let cur = this.state.cur;\r\n        let tabs = <div>{\r\n                this.state.tabs.map((tab, index) => {\r\n                    const {icon, isSelected, title, redDot} = tab;\r\n                    let img:any, redDotView:any, cn:any;\r\n                    if (icon !== undefined) img = <img src={icon} />;\r\n                    if (redDot !== undefined) {\r\n                        let v = redDot.get();\r\n                        if (v < 0) {\r\n                            cn = classNames('red-dot');\r\n                            redDotView = <u />;\r\n                        }\r\n                        else if (v > 0) {\r\n                            cn = classNames('red-dot', 'num');\r\n                            redDotView = <u>{v}</u>;\r\n                        }\r\n                    }\r\n                    return <div key={index}\r\n                        className= {classNames('va-tab', {cur: isSelected})}\r\n                        onClick={() => this.onTabClick(tab)}>\r\n                        {img}<div className={cn}>{title}{redDotView}</div>\r\n                    </div>\r\n                })\r\n            }</div>;\r\n        let titleBar;\r\n        if (header !== false) {\r\n            titleBar = <TitleBar \r\n                back={back} \r\n                center={keepHeader===true? (header as string) : (cur && (cur.header || cur.title))}\r\n                right={right} \r\n            />;\r\n        }\r\n\r\n        return <article className='page-container'>\r\n            {titleBar}\r\n            <section className=\"position-relative\">\r\n            {this.props.sideBar}\r\n            {\r\n                this.state.tabs.map((tab, index) => {\r\n                    let {isSelected, isMounted, content} = tab;\r\n                    if (isSelected === true || isMounted === true) {\r\n                        tab.isMounted = true;\r\n                        return <ScrollView key={index}\r\n                            className={classNames({invisible: isSelected===false})}\r\n                            onScroll={tab.onScroll}\r\n                            onScrollTop={tab.onScrollTop}\r\n                            onScrollBottom={tab.onScrollBottom}\r\n                        >\r\n                            {(typeof content)==='function'? (content as ()=>JSX.Element)():content}\r\n                        </ScrollView>;\r\n                    }\r\n                })\r\n            }\r\n            </section>\r\n            {tabs}\r\n            {footer}\r\n        </article>;\r\n    }\r\n    private renderSingle(footer: JSX.Element) {\r\n        const {back, header, right, onScroll, onScrollTop, onScrollBottom, children} = this.props;\r\n        let titleBar;\r\n        if (header !== false)\r\n            titleBar = <TitleBar \r\n                back={back} \r\n                center={header as any}\r\n                right={right}\r\n                logout={this.props.logout}\r\n            />;\r\n        return (\r\n            <article className='page-container' onTouchStart={this.onTouchStart}>\r\n                {titleBar}\r\n                <section className=\"position-relative\">\r\n                    {this.props.sideBar}\r\n                    <ScrollView\r\n                        onScroll={onScroll}\r\n                        onScrollTop={onScrollTop}\r\n                        onScrollBottom={onScrollBottom}\r\n                    >\r\n                        {children}\r\n                    </ScrollView>\r\n                </section>\r\n                {footer}\r\n            </article>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const {footer} = this.props;\r\n        let elFooter;\r\n        if (footer !== undefined) elFooter = <footer>{footer}</footer>;\r\n        if (this.tabs !== undefined)\r\n            return this.renderTabs(elFooter);\r\n        else\r\n            return this.renderSingle(elFooter);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Controller } from 'tonva-tools';\r\n\r\nexport abstract class Link {\r\n    abstract onClick: () => void;\r\n    abstract render(className?:string):JSX.Element;\r\n}\r\n\r\nexport class CLink extends Link {\r\n    private controller: Controller;\r\n    protected icon:string|JSX.Element;\r\n    protected label:string|JSX.Element;\r\n\r\n    constructor(controller:Controller) {\r\n        super();\r\n        this.controller = controller;\r\n        this.icon = controller.icon;\r\n        this.label = controller.label;\r\n    }\r\n\r\n    onClick = async () => {\r\n        await this.controller.start();\r\n    }\r\n\r\n    render(className?:string) {\r\n        return <div\r\n            className={classNames('px-3', 'py-2', 'align-items-center', 'cursor-pointer', className)}\r\n            onClick={this.onClick}>\r\n            {this.icon} &nbsp; {this.label}\r\n        </div>;\r\n        //return React.createElement(this.view, className);\r\n    }\r\n}\r\n","export * from './cLink';\r\n","\r\nlet subAppWindow:Window;\r\nfunction postWsToSubApp(msg:any) {\r\n    if (subAppWindow === undefined) return;\r\n    subAppWindow.postMessage({\r\n        type: 'ws',\r\n        msg: msg\r\n    }, '*');\r\n}\r\n\r\nexport function setSubAppWindow(win:Window) {\r\n    subAppWindow = win;\r\n}\r\n\r\nexport function postWsToTop(msg:any) {\r\n    window.top.postMessage({\r\n        type: 'ws',\r\n        msg: msg\r\n    }, '*');\r\n}\r\n\r\nexport abstract class WsBase {\r\n    wsBaseId:string;\r\n    private handlerSeed = 1;\r\n    private anyHandlers:{[id:number]:(msg:any)=>Promise<void>} = {};\r\n    private msgHandlers:{[id:number]:{type:string, handler:(msg:any)=>Promise<void>}} = {};\r\n    onWsReceiveAny(handler:(msg:any)=>Promise<void>):number {\r\n        let seed = this.handlerSeed++;\r\n        this.anyHandlers[seed] = handler;\r\n        return seed;\r\n    }\r\n    onWsReceive(type:string, handler:(msg:any)=>Promise<void>):number {\r\n        let seed = this.handlerSeed++;\r\n        this.msgHandlers[seed] = {type:type, handler: handler};\r\n        return seed;\r\n    }\r\n    endWsReceive(handlerId:number) {\r\n        delete this.anyHandlers[handlerId];\r\n        delete this.msgHandlers[handlerId];\r\n    }\r\n    async receive(msg:any) {\r\n        let {$type} = msg;\r\n        for (let i in this.anyHandlers) {\r\n            await this.anyHandlers[i](msg);\r\n        }\r\n        for (let i in this.msgHandlers) {\r\n            let {type, handler} = this.msgHandlers[i];\r\n            if (type !== $type) continue;\r\n            await handler(msg);\r\n        }\r\n    }\r\n}\r\n\r\nlet wsBaseSeed = 1;\r\nexport class WsBridge extends WsBase {\r\n    wsBaseId:string = 'WsBridge seed ' + wsBaseSeed++;\r\n}\r\n\r\nexport const wsBridge = new WsBridge();\r\n\r\nexport class WSChannel extends WsBase {\r\n    wsBaseId:string = 'WSChannel seed ' + wsBaseSeed++;\r\n    static centerToken:string;\r\n    private wsHost: string;\r\n    private token: string;\r\n    private ws: WebSocket;\r\n\r\n    constructor(wsHost: string, token: string) {\r\n        super();\r\n        this.wsHost = wsHost;\r\n        this.token = token;\r\n    }\r\n\r\n    static setCenterToken(token?: string) {\r\n        WSChannel.centerToken = token;\r\n    }\r\n    \r\n    connect():Promise<void> {\r\n        //this.wsHost = wsHost;\r\n        //this.token = token || WSChannel.centerToken;\r\n        if (this.ws !== undefined) return;\r\n        let that = this;\r\n        return new Promise((resolve, reject) => {\r\n            let ws = new WebSocket(this.wsHost, this.token || WSChannel.centerToken);\r\n            console.log('connect webSocket %s', this.wsHost);\r\n            ws.onopen = (ev) => {\r\n                console.log('webSocket connected %s', this.wsHost);\r\n                that.ws = ws;\r\n                resolve();\r\n            };\r\n            ws.onerror = (ev) => {\r\n                reject('webSocket can\\'t open!');\r\n            };\r\n            ws.onmessage = async (msg) => await that.wsMessage(msg);\r\n            ws.onclose = (ev) => {\r\n                that.ws = undefined;\r\n                console.log('webSocket closed!');\r\n            }\r\n        });\r\n    }\r\n    close() {\r\n        if (this.ws !== undefined) {\r\n            this.ws.close();\r\n            this.ws = undefined;\r\n        }\r\n    }\r\n    private async wsMessage(event:any):Promise<void> {\r\n        try {\r\n            console.log('websocket message: %s', event.data);\r\n            let msg = JSON.parse(event.data);\r\n            postWsToSubApp(msg);\r\n            await this.receive(msg);\r\n        }\r\n        catch (err) {\r\n            console.log('ws msg error: ', err);\r\n        }\r\n    }\r\n    sendWs(msg:any) {\r\n        let netThis = this;\r\n        this.connect().then(() => {\r\n            netThis.ws.send(msg);\r\n        });\r\n    }\r\n}\r\n","const ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\nconst ID_LENGTH = 8;\r\n\r\nexport function uid():string {\r\n    let len = ALPHABET.length;\r\n    let rtn = '';\r\n    for (let i = 0; i < ID_LENGTH; i++) {\r\n        rtn += ALPHABET.charAt(Math.floor(Math.random() * len));\r\n    }\r\n    return rtn;\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { nav } from './nav';\r\n\r\nexport interface ImageProps {\r\n    src: string;\r\n    className?: string;\r\n    style?: React.CSSProperties;\r\n}\r\n\r\nexport function Image(props: ImageProps) {\r\n    let {className, style, src} = props;\r\n    if (!src) {\r\n        return <div className={classNames(className, 'image-none')} style={style}>\r\n            <i className=\"fa fa-camera\" />\r\n        </div>;\r\n    }\r\n    if (src.startsWith(':') === true) {\r\n        src = nav.resUrl + src.substr(1);\r\n    }\r\n    return <img src={src} className={className} style={style} />;\r\n}\r\n","export const isDevelopment = process.env.NODE_ENV === 'development';\r\n\r\nconst centerHost = process.env['REACT_APP_CENTER_HOST'];\r\nconst centerDebugHost = 'localhost:3000'; //'192.168.86.64';\r\nconst resHost = process.env['REACT_APP_RES_HOST'] || centerHost;\r\nconst resDebugHost = 'localhost:3015'; //'192.168.86.63';\r\nconst uqDebugHost = 'localhost:3015'; //'192.168.86.63';\r\nconst uqDebugBuilderHost = 'localhost:3009';\r\ninterface HostValue {\r\n    value: string;\r\n    local: boolean;\r\n}\r\nconst hosts:{[name:string]:HostValue} = {\r\n    centerhost: {\r\n        value: process.env['REACT_APP_CENTER_DEBUG_HOST'] || centerDebugHost, \r\n        local: false\r\n    },\r\n    reshost: {\r\n        value: process.env['REACT_APP_RES_DEBUG_HOST'] || resDebugHost,\r\n        local: false\r\n    },\r\n    uqhost: {\r\n        value: process.env['REACT_APP_UQ_DEBUG_HOST'] || uqDebugHost, \r\n        local: false\r\n    },\r\n    unitxhost: {\r\n        value: process.env['REACT_APP_UQ_DEBUG_HOST'] || uqDebugHost, \r\n        local: false\r\n    },\r\n    \"uq-build\": {\r\n        value: process.env['REACT_APP_UQ_DEBUG_BUILDER_HOST'] || uqDebugBuilderHost, \r\n        local: false\r\n    }\r\n}\r\n\r\nfunction centerUrlFromHost(host:string) {return `http://${host}/`}\r\nfunction centerWsFromHost(host:string) {return `ws://${host}/tv/`}\r\n\r\nconst fetchOptions = {\r\n    method: \"GET\",\r\n    mode: \"no-cors\", // no-cors, cors, *same-origin\r\n    headers: {\r\n        \"Content-Type\": \"text/plain\"\r\n    },\r\n};\r\n\r\nclass Host {\r\n    url: string;\r\n    ws: string;\r\n    resHost: string;\r\n\r\n    async start() {\r\n        if (isDevelopment === true) {\r\n            await this.tryLocal();\r\n        }\r\n        let host = this.getCenterHost();\r\n        this.url = centerUrlFromHost(host);\r\n        this.ws = centerWsFromHost(host);\r\n        this.resHost = this.getResHost();\r\n    }\r\n\r\n    private debugHostUrl(host:string) {return `http://${host}/hello`}\r\n    private async tryLocal() {\r\n        let promises:PromiseLike<any>[] = [];\r\n        let hostArr:string[] = [];\r\n        for (let i in hosts) {\r\n            let hostValue = hosts[i];\r\n            let {value} = hostValue;\r\n            if (hostArr.findIndex(v => v === value) < 0) hostArr.push(value);\r\n        }\r\n\r\n        for (let host of hostArr) {\r\n            let fetchUrl = this.debugHostUrl(host);\r\n            promises.push(localCheck(fetchUrl));\r\n        }\r\n        let results = await Promise.all(promises);\r\n        let len = hostArr.length;\r\n        for (let i=0; i<len; i++) {\r\n            let local = results[i];\r\n            let host = hostArr[i];\r\n            for (let j in hosts) {\r\n                let hostValue = hosts[j];\r\n                if (hostValue.value === host) {\r\n                    hostValue.local = local;\r\n                }\r\n            }\r\n        }\r\n        /*\r\n        let p = 0;\r\n        for (let i in hosts) {\r\n            let hostValue = hosts[i];\r\n            hostValue.local = results[p];\r\n            ++p;\r\n        }\r\n        */\r\n    }\r\n\r\n    private getCenterHost():string {\r\n        let {value, local} = hosts.centerhost;\r\n        let hash = document.location.hash;\r\n        if (hash.includes('sheet_debug') === true) {\r\n            return value;\r\n        }\r\n        if (isDevelopment === true) {\r\n            if (local === true) return value;\r\n        }\r\n        return centerHost;\r\n    }\r\n\r\n    private getResHost():string {\r\n        let {value, local} = hosts.reshost;\r\n        let hash = document.location.hash;\r\n        if (hash.includes('sheet_debug') === true) {\r\n            return value;\r\n        }\r\n        if (isDevelopment === true) {\r\n            if (local === true) return value;\r\n        }\r\n        return resHost;\r\n    }\r\n\r\n    getUrlOrDebug(url:string, urlDebug:string):string {\r\n        if (isDevelopment !== true) return url;\r\n        if (!urlDebug) return url;\r\n        for (let i in hosts) {\r\n            let host = hosts[i];\r\n            let {value, local} = host;\r\n            let hostString = `://${i}/`;\r\n            let pos = urlDebug.indexOf(hostString);\r\n            if (pos > 0) {\r\n                if (local === false) return url;\r\n                urlDebug = urlDebug.replace(hostString, `://${value}/`);\r\n                return urlDebug;\r\n            }\r\n        }\r\n        return url;\r\n    }\r\n\r\n    async localCheck(urlDebug: string):Promise<boolean> {\r\n        return await localCheck(urlDebug);\r\n    }\r\n}\r\n\r\nexport const host:Host = new Host();\r\n\r\n// 因为测试的都是局域网服务器，甚至本机服务器，所以一秒足够了\r\n// 网上找了上面的fetch timeout代码。\r\n// 尽管timeout了，fetch仍然继续，没有cancel\r\n\r\n// 实际上，一秒钟不够。web服务器会自动停。重启的时候，可能会比较长时间。也许两秒甚至更多。\r\n//const timeout = 2000;\r\nconst timeout = 200;\r\n\r\nfunction fetchLocalCheck(url:string):Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      fetch(url, fetchOptions as any)\r\n      .then(v => {\r\n          v.text().then(resolve).catch(reject);\r\n      })\r\n      .catch(reject);\r\n      const e = new Error(\"Connection timed out\");\r\n      setTimeout(reject, timeout, e);\r\n    });\r\n}\r\n\r\nasync function localCheck(url:string):Promise<boolean> {\r\n    try {\r\n        await fetchLocalCheck(url);\r\n        return true;\r\n    }\r\n    catch (err) {\r\n        return false;\r\n    }\r\n}\r\n","import jwtDecode from 'jwt-decode';\r\n\r\nexport interface Unit {\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\nexport interface Guest {\r\n    id: number;             // id = 0\r\n    guest: number;\r\n    token: string;\r\n}\r\n\r\nexport interface User extends Guest {\r\n    id: number;\r\n    name: string;\r\n    nick?: string;\r\n    icon?: string;\r\n}\r\n\r\n/*\r\nexport class UserInNav {\r\n    private user: User;\r\n    constructor(user: User) {\r\n        this.user = user;\r\n    }\r\n    get id():number {return this.user.id}\r\n    get name(): string {return this.user.name}\r\n    get nick(): string {return this.user.nick}\r\n    get icon(): string {return this.user.icon || ('http://' + process.env['REACT_APP_CENTER_HOST'] + '/imgs/Bear-icon.png');}\r\n    get guest(): number {return this.user.guest}\r\n    get token(): string {return this.user.token}\r\n}\r\n*/\r\nexport function decodeUserToken(token: string): User {\r\n    let ret:any = jwtDecode(token);\r\n    let user: User = {\r\n        id: ret.id,\r\n        name: ret.name,\r\n        guest: ret.guest,\r\n        token: token,\r\n    };\r\n    return user;\r\n}\r\n\r\nexport function decodeGuestToken(token: string): Guest {\r\n    let ret:any = jwtDecode(token);\r\n    let guest: Guest = {\r\n        id: 0,\r\n        guest: ret.guest,\r\n        token: token,\r\n    };\r\n    return guest;\r\n}\r\n","const ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\nconst ID_LENGTH = 8;\r\n\r\nexport function uid():string {\r\n    let len = ALPHABET.length;\r\n    let rtn = '';\r\n    for (let i = 0; i < ID_LENGTH; i++) {\r\n        rtn += ALPHABET.charAt(Math.floor(Math.random() * len));\r\n    }\r\n    return rtn;\r\n}\r\n","import * as React from 'react';\r\nimport { SearchBox, List, Muted } from 'tonva-react-form';\r\nimport { TuidMain, Entity } from '../../entities';\r\nimport { Page } from 'tonva-tools';\r\nimport { CLink } from '../link';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CTuidMain, TuidUI } from './cTuid';\r\n\r\nexport class VTuidMain extends VEntity<TuidMain, TuidUI, CTuidMain> {\r\n    protected controller: CTuidMain;\r\n    onNew = () => this.event('new');\r\n    onList = () => this.event('list');\r\n    onSearch = async (key:string) => this.event('list', key);\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected entityRender(link: CLink, index: number): JSX.Element {\r\n        return link.render();\r\n    }\r\n\r\n    protected async entityClick(link: CLink) {\r\n        await link.onClick();\r\n    }\r\n\r\n    protected get view() {\r\n        let {label, proxyLinks, isFrom} = this.controller;\r\n        let newButton;\r\n        if (isFrom === false) newButton = <button className=\"btn btn-primary ml-3\" onClick={this.onNew}>新增</button>;\r\n        return () => <Page header={label}>\r\n            {proxyLinks === undefined ?\r\n            <>\r\n                <SearchBox className=\"w-100\" onSearch={this.onSearch} placeholder={'搜索'+label} />\r\n                <div className='my-3'>\r\n                    {newButton}\r\n                    <button className=\"btn btn-primary ml-3\" onClick={this.onList}>列表</button>\r\n                </div>\r\n            </> :\r\n            <List className=\"my-2\"\r\n                header={<Muted>{label} 代理下列Tuid</Muted>}\r\n                items={proxyLinks}\r\n                item={{render: this.entityRender, onClick:this.entityClick}} />\r\n            }\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { FA } from 'tonva-react-form';\r\nimport { Page } from 'tonva-tools';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CTuidMain, TuidUI } from './cTuid';\r\nimport { TuidMain, Tuid } from '../../entities';\r\n\r\nexport type TypeVTuidEdit = typeof VTuidEdit;\r\n\r\nexport class VTuidEdit extends VEntity<Tuid, TuidUI, CTuidMain> {\r\n    private vForm: VForm;\r\n    private id: number;\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        if (param !== undefined) {\r\n            this.id = param.id;\r\n        }\r\n        this.openPage(this.editView);\r\n    }\r\n\r\n    protected get editView() {\r\n        return () => <Page header={(this.id===undefined? '新增':'编辑') + ' - ' + this.label}>\r\n            {this.vForm.render('py-3')}\r\n        </Page>;\r\n    }\r\n\r\n    protected next = async () => {\r\n        this.vForm.reset();\r\n        this.closePage();\r\n    }\r\n\r\n    protected finish = () => {\r\n        this.closePage(2);\r\n        this.event('edit-end');\r\n    }\r\n\r\n    protected resetForm() {\r\n        this.vForm.reset();\r\n    }\r\n\r\n    protected onSubmit = async () => {\r\n        let values = this.vForm.getValues();\r\n        let ret = await this.controller.entity.save(this.id, values);\r\n        let {id} = ret;\r\n        if (id < 0) {\r\n            let {unique} = this.controller.entity;\r\n            if (unique !== undefined) {\r\n                for (let u of unique) {\r\n                    this.vForm.setError(u, '不能重复');\r\n                }\r\n            }\r\n            return;\r\n        }\r\n        if (this.controller.isCalling) {\r\n            this.returnCall(id);\r\n            this.closePage();\r\n            return;\r\n        }\r\n        this.openPageElement(<Page header={this.label + '提交成功'} back=\"none\">\r\n            <div className='m-3'>\r\n                <span className=\"text-success\">\r\n                    <FA name='check-circle' size='lg' /> 成功提交！\r\n                </span>\r\n                <div className='mt-5'>\r\n                    <button className=\"btn btn-primary mr-3\" onClick={this.next}>继续录入</button>\r\n                    <button className=\"btn btn-outline-primary\" onClick={this.finish}>不继续</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n\r\n        this.event('item-changed', {id: this.id, values: values});\r\n        return;\r\n    }\r\n\r\n    //protected view = TuidNewPage;\r\n}\r\n/*\r\nconst TuidNewPage = observer(({vm}:{vm:VmTuidEdit}) => {\r\n    let {label, id, vmForm} = vm;\r\n    return <Page header={(id===undefined? '新增':'编辑') + ' - ' + label}>\r\n        {vmForm.render('mx-3 my-2')}\r\n    </Page>;\r\n});\r\n*/","import { nav, Page } from 'tonva-tools';\r\nimport { VTuidMainListBase, VTuidDivListBase } from './vTuidList';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Tuid } from '../../entities';\r\nimport { CTuid, TuidUI } from './cTuid';\r\nimport { SearchBox, List } from 'tonva-react-form';\r\nimport React from 'react';\r\nimport { RowContent } from '../form/viewModel';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class VTuidSelect extends VEntity<Tuid, TuidUI, CTuid<Tuid>> {\r\n    protected mainRowContent: (row:any) => JSX.Element;\r\n    protected divRowContent: (row:any) => JSX.Element;\r\n\r\n    async open(param?:any): Promise<void> {\r\n        if (param === undefined)\r\n            await this.showMain(param);\r\n        else\r\n            await this.showDiv(param);\r\n    }\r\n\r\n    private async showMain(param) {\r\n        this.mainRowContent = this.ui.rowContent || RowContent;\r\n        await this.controller.searchMain(param);\r\n        this.openPage(this.mainView);\r\n    }\r\n\r\n    private async showDiv(ownerValue: any) {\r\n        let {divs} = this.ui;\r\n        if (divs !== undefined) {\r\n            this.divRowContent = divs[this.entity.name].rowContent;\r\n        }\r\n        if (this.divRowContent === undefined) {\r\n            this.divRowContent = RowContent;\r\n        }\r\n        let divItems = await this.controller.getDivItems(ownerValue);\r\n        this.openPage(this.divView, {items: divItems});\r\n    }\r\n\r\n    protected mainView = observer(() => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearchMain} placeholder={'搜索'+this.label} />;\r\n        return <Page header={header} back=\"close\">\r\n            <List\r\n                items={this.controller.PageItems.items}\r\n                item={{render: this.renderMainRow, onClick: this.clickMainRow}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    });\r\n\r\n    onSearchMain = async (key:string) => {\r\n        await this.controller.searchMain(key);\r\n        //await this.PageItems.first(key);\r\n    }\r\n    renderMainRow = (item:any, index:number):JSX.Element => <this.mainRowContent {...item} />;\r\n    clickMainRow = async (item:any) => {\r\n        this.ceasePage();\r\n        if (this.controller.entity.owner === undefined) {\r\n            this.returnCall(item);\r\n            return;\r\n        }\r\n        await this.showDiv(this.entity.getIdFromObj(item));\r\n    }\r\n\r\n    protected divView = (param:any) => {\r\n        return <Page header=\"选择Div\">\r\n            <List\r\n                items={param.items}\r\n                item={{render: this.renderDivRow, onClick: this.clickDivRow}} />\r\n        </Page>;\r\n    }\r\n    renderDivRow = (item:any, index:number):JSX.Element => <this.divRowContent {...item} />;\r\n    clickDivRow = (item:any) => {\r\n        this.ceasePage();\r\n        this.returnCall(item);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { FA } from 'tonva-react-form';\r\nimport { Page } from 'tonva-tools';\r\nimport { jsonStringify } from '../../tools';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { TuidMain } from '../../entities';\r\nimport { TuidUI, CTuidMain } from './cTuid';\r\n\r\nexport type TypeVTuidView = typeof VTuidView;\r\n\r\nexport class VTuidView extends VEntity<TuidMain, TuidUI, CTuidMain> {\r\n    vForm: VForm;\r\n    id: number;\r\n\r\n    protected buildForm(param:any) {\r\n        this.vForm = this.createForm(undefined, param);\r\n    }\r\n\r\n    async open(param:any) {\r\n        this.buildForm(param);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    render(param:any) {\r\n        this.buildForm(param);\r\n        return this.vForm.render();\r\n    }\r\n\r\n    async loadId(id: number) {\r\n        this.id = id;\r\n    }\r\n\r\n    protected next = async () => {\r\n        this.vForm.reset();\r\n        this.closePage();\r\n    }\r\n\r\n    protected finish = () => {\r\n        this.closePage(2);\r\n    }\r\n\r\n    protected resetForm() {\r\n        this.vForm.reset();\r\n    }\r\n\r\n    protected onSubmit = async () => {\r\n        let values = this.vForm.getValues();\r\n        let ret = await this.entity.save(this.id, values);\r\n        if (ret) {\r\n            alert('这里还要判断返回值，先不处理了 \\n' + jsonStringify(ret));\r\n        }\r\n        this.openPage(() => <Page header={this.label + '提交成功'} back=\"none\">\r\n            <div className='m-3'>\r\n                <span className=\"text-success\">\r\n                    <FA name='check-circle' size='lg' /> 成功提交！\r\n                </span>\r\n                <div className='mt-5'>\r\n                    <button className=\"btn btn-primary mr-3\" onClick={this.next}>继续录入</button>\r\n                    <button className=\"btn btn-outline-primary\" onClick={this.finish}>不继续</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n        return;\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n            {this.vForm.render('py-3')}\r\n    </Page>;\r\n}\r\n","import React from 'react';\r\nimport { VTuidView } from './vTuidView';\r\n\r\nexport class VTuidInfo  extends VTuidView {\r\n/*\r\n    async open(param?:any) {\r\n        this.open(this.view);\r\n    }\r\n*/\r\n/*\r\n    private view = () => {\r\n        return <Page>\r\n            TuidInfo\r\n        </Page>\r\n    }\r\n*/\r\n}\r\n","import { PageItems } from 'tonva-tools';\r\nimport { Tuid } from \"../../entities\";\r\n\r\nexport class TuidPageItems<T> extends PageItems<T> {\r\n    private tuid: Tuid;\r\n    constructor(tuid: Tuid) {\r\n        super(true);\r\n        this.tuid = tuid;\r\n    }\r\n    protected async load(param:any, pageStart:any, pageSize:number):Promise<any[]> {\r\n        let ret = await this.tuid.search(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:any) {\r\n        this.pageStart = item === undefined? 0 : item.id;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { FA, SearchBox, List } from 'tonva-react-form';\r\nimport { Page, PageItems } from 'tonva-tools';\r\nimport { jsonStringify } from '../../tools';\r\nimport { TuidMain, Entity, Tuid, TuidDiv } from '../../entities';\r\nimport { VEntity } from '../CVEntity';\r\nimport { TuidUI, CTuidMain, CTuidDiv } from './cTuid';\r\nimport { JSONContent, RowContent } from '../form/viewModel';\r\n\r\nexport abstract class VTuidMainListBase  extends VEntity<TuidMain, TuidUI, CTuidMain> {\r\n    protected rowContent: (row:any) => JSX.Element;\r\n    protected ownerId: number;\r\n\r\n    async open(param?:any) {\r\n        this.rowContent = this.ui.rowContent || RowContent;\r\n        if (this.entity.owner !== undefined) this.ownerId = Number(param);\r\n        // 初始查询, key是空的\r\n        //await this.onSearch('');\r\n        await this.controller.searchMain('');\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSearch = async (key:string) => {\r\n        await this.controller.searchMain(key);\r\n        //await this.PageItems.first(key);\r\n    }\r\n    renderRow = (item:any, index:number):JSX.Element => <this.rowContent {...item} />;\r\n\r\n    protected abstract onSelected(item:any): Promise<void>;\r\n    private callOnSelected(item:any) {\r\n        if (this.onSelected === undefined) {\r\n            alert('onSelect is undefined');\r\n            return;\r\n        }\r\n        this.onSelected(item);\r\n    }\r\n    clickRow = (item:any) => {\r\n        this.callOnSelected(item);\r\n    }\r\n    private rowKey = (item:any) => {\r\n        let {id} = item;\r\n        return id;\r\n    }\r\n    protected view = observer(() => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\r\n        let {owner} = this.entity;\r\n        let ownerTop;\r\n        if (owner !== undefined) {\r\n            let ownerObj = owner.valueFromId(this.ownerId);\r\n            ownerTop = <div>owner: {jsonStringify(ownerObj)}</div>;\r\n        }\r\n        return <Page header={header}>\r\n            {ownerTop}\r\n            <List\r\n                items={this.controller.PageItems.items}\r\n                item={{render: this.renderRow, onClick: this.clickRow, key:this.rowKey}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    });\r\n}\r\n\r\nexport class VTuidMainList extends VTuidMainListBase {\r\n    protected async onSelected(item:any) {\r\n        if (this.controller.isFrom === false)\r\n            this.event('edit', item.id);\r\n        else\r\n            this.event('info', item.id);\r\n    }\r\n}\r\n\r\nexport abstract class VTuidDivListBase  extends VEntity<TuidDiv, TuidUI, CTuidDiv> {\r\n    protected ownerId: number;\r\n\r\n    async open(param?:any) {\r\n        //this.PageItems = new TuidPageItems(this.entity);\r\n        if (this.entity.owner !== undefined) this.ownerId = Number(param);\r\n        // 初始查询, key是空的\r\n        //await this.onSearch('');\r\n        await this.controller.searchMain('');\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSearch = async (key:string) => {\r\n        await this.controller.searchMain(key);\r\n        //await this.PageItems.first(key);\r\n    }\r\n    renderRow = (item:any, index:number):JSX.Element => {\r\n        return <div className=\"px-3 py-2\">{jsonStringify(item)}</div>;\r\n    }\r\n\r\n    protected abstract onSelected(item:any): Promise<void>;\r\n    private callOnSelected(item:any) {\r\n        if (this.onSelected === undefined) {\r\n            alert('onSelect is undefined');\r\n            return;\r\n        }\r\n        this.onSelected(item);\r\n    }\r\n    clickRow = (item:any) => {\r\n        this.callOnSelected(item);\r\n    }\r\n\r\n    protected view = observer(() => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\r\n        let {owner} = this.entity;\r\n        let ownerTop;\r\n        if (owner !== undefined) {\r\n            let ownerObj = owner.valueFromId(this.ownerId);\r\n            ownerTop = <div>owner: {jsonStringify(ownerObj)}</div>;\r\n        }\r\n        return <Page header={header}>\r\n            {ownerTop}\r\n            <List\r\n                items={this.controller.PageItems.items}\r\n                item={{render: this.renderRow, onClick: this.clickRow}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    });\r\n}\r\n\r\nexport class VTuidDivList extends VTuidDivListBase {\r\n    protected async onSelected(item:any) {\r\n        this.event('edit', item.id);\r\n    }\r\n}\r\n","import _ from 'lodash';\r\nimport { TypeVPage, PageItems } from 'tonva-tools';\r\nimport { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { TuidMain, Tuid, TuidDiv } from \"../../entities\";\r\nimport { VTuidMain } from './vTuidMain';\r\nimport { VTuidEdit } from './vTuidEdit';\r\nimport { VTuidSelect } from './vTuidSelect';\r\nimport { CUq } from \"../uq/cUq\";\r\nimport { CLink } from \"../link\";\r\nimport { VTuidInfo } from \"./vTuidInfo\";\r\nimport { TuidPageItems } from \"./pageItems\";\r\nimport { VTuidMainList } from './vTuidList';\r\n\r\nexport interface TuidUI extends EntityUI {\r\n    CTuidMain?: typeof CTuidMain;\r\n    CTuidEdit?: typeof CTuidEdit;\r\n    CTuidList?: typeof CTuidList;\r\n\r\n    CTuidSelect?: typeof CTuidSelect;\r\n    CTuidInfo?: typeof CTuidInfo;\r\n    content?: React.StatelessComponent<any>;\r\n    rowContent?: React.StatelessComponent<any>;\r\n    divs?: {\r\n        [div:string]: {\r\n            CTuidSelect?: typeof CTuidSelect;\r\n            content?: React.StatelessComponent<any>;\r\n            rowContent?: React.StatelessComponent<any>;\r\n        }\r\n    }\r\n}\r\n\r\nexport abstract class CTuid<T extends Tuid> extends CEntity<T, TuidUI> {\r\n    PageItems:PageItems<any>;\r\n\r\n    protected buildPageItems():PageItems<any> {\r\n        return new TuidPageItems(this.entity.owner || this.entity);\r\n    }\r\n\r\n    async searchMain(key:string) {\r\n        if (this.PageItems === undefined) {\r\n            this.PageItems = this.buildPageItems();\r\n        }\r\n        if (key !== undefined) await this.PageItems.first(key);\r\n    }\r\n\r\n    async getDivItems(ownerId:number):Promise<any[]> {\r\n        let ret = await this.entity.searchArr(ownerId, undefined, 0, 1000);\r\n        return ret;\r\n    }\r\n}\r\n\r\nexport class CTuidMain extends CTuid<TuidMain> {\r\n    constructor(cUq: CUq, entity: TuidMain, ui: TuidUI, res:any) {\r\n        super(cUq, entity, ui, res);\r\n        let tuid = this.entity;\r\n        this.proxies = tuid.proxies;\r\n        if (this.proxies !== undefined) {\r\n            this.proxyLinks = [];\r\n            for (let i in this.proxies) {\r\n                let link = this.cUq.linkFromName('tuid', i);\r\n                this.proxyLinks.push(link);\r\n            }\r\n        }\r\n    }\r\n\r\n    async from():Promise<CTuidMain> {\r\n        let ret = await this.entity.cFrom();\r\n        if (ret === undefined) return this;\r\n        return ret;\r\n    }\r\n\r\n    async cUqFrom():Promise<CUq> {\r\n        return await this.entity.cUqFrom();\r\n    }\r\n    async cEditFrom(): Promise<CTuidEdit> {\r\n        let cUq = await this.entity.cUqFrom();\r\n        return await cUq.cTuidEditFromName(this.entity.name);\r\n    }\r\n    async cInfoFrom(): Promise<CTuidInfo> {\r\n        let cUq = await this.entity.cUqFrom();\r\n        return await cUq.cTuidInfoFromName(this.entity.name);\r\n    }\r\n    async cSelectFrom(): Promise<CTuidSelect> {\r\n        let cUq = await this.entity.cUqFrom();\r\n        return await cUq.cTuidSelectFromName(this.entity.name);\r\n    }\r\n\r\n    getLable(tuid:Tuid):string {\r\n        if (tuid === this.entity) return this.label;\r\n        let {name} = tuid;\r\n        let {arrs} = this.res;\r\n        if (arrs !== undefined) {\r\n            let arr = arrs[name];\r\n            if (arr !== undefined) {\r\n                let label = arr.label;\r\n                if (label !== undefined) return label;\r\n            }\r\n        }\r\n        return name;\r\n    }\r\n\r\n    proxies: {[name:string]: TuidMain};\r\n    proxyLinks: CLink[];\r\n    isFrom: boolean;\r\n\r\n    protected get VTuidMain():typeof VTuidMain {return VTuidMain}\r\n    protected get VTuidEdit():typeof VTuidEdit {return VTuidEdit}\r\n    protected get VTuidList():typeof VTuidMainList {return VTuidMainList}\r\n\r\n    protected async internalStart(param?:any):Promise<void> {\r\n        this.isFrom = this.entity.schemaFrom !== undefined;\r\n        await this.openVPage(this.VTuidMain);\r\n    }\r\n\r\n    protected async onEvent(type:string, value:any) {\r\n        let v: TypeVPage<CTuidMain>;\r\n        switch (type) {\r\n            default: return;\r\n            case 'new': v = this.VTuidEdit; break;\r\n            case 'list': v = this.VTuidList; break;\r\n            case 'edit': await this.edit(value); return;\r\n            case 'item-changed': this.itemChanged(value); return;\r\n            case 'info': \r\n                let cTuidInfo = new CTuidInfo(this.cUq, this.entity, this.ui, this.res);\r\n                await cTuidInfo.start(value);\r\n                return;\r\n        }\r\n        await this.openVPage(v, value);\r\n    }\r\n\r\n    protected async edit(id:number) {\r\n        let values:any = undefined;\r\n        if (id !== undefined) {\r\n            values = await this.entity.load(id);\r\n        }\r\n        let v = this.VTuidEdit;\r\n        await this.openVPage(v, values);\r\n    }\r\n\r\n    private itemChanged({id, values}:{id:number, values: any}) {\r\n        if (this.PageItems === undefined) return;\r\n        let items = this.PageItems.items;\r\n        let item = items.find(v => v.id === id);\r\n        if (item !== undefined) {\r\n            _.merge(item, values);\r\n        }\r\n    }\r\n}\r\n\r\nexport class CTuidEdit extends CTuidMain {\r\n    protected async internalStart(id:number):Promise<void> {\r\n        await this.edit(id);\r\n    }\r\n}\r\n\r\nexport class CTuidList extends CTuidMain {\r\n    protected async internalStart(id:number):Promise<void> {\r\n        await this.openVPage(this.VTuidList);\r\n    }\r\n}\r\n\r\nexport class CTuidDiv extends CTuid<TuidDiv> {\r\n    protected async internalStart():Promise<void> {\r\n        alert('tuid div: ' + this.entity.name);\r\n    }\r\n}\r\n\r\nexport class CTuidSelect extends CTuid<Tuid> {\r\n    protected async internalStart(param?: any):Promise<void> {\r\n        await this.openVPage(this.VTuidSelect, param);\r\n    }\r\n    protected async beforeStart():Promise<boolean> {\r\n        //if (await super.beforeStart() === false) return false;\r\n        await this.entity.loadSchema();\r\n        if (this.PageItems !== undefined) this.PageItems.reset();\r\n        return true;\r\n    }\r\n    protected get VTuidSelect():typeof VTuidSelect {return VTuidSelect}\r\n    idFromItem(item:any) {\r\n        return item.id;\r\n    }\r\n}\r\n\r\nexport class CTuidInfo extends CTuid<Tuid> {\r\n    protected async internalStart(id: any):Promise<void> {\r\n        let data = await this.entity.load(id)\r\n        await this.openVPage(this.VTuidInfo, data);\r\n    }\r\n    protected get VTuidInfo():typeof VTuidInfo {return VTuidInfo}\r\n}\r\n","export * from './cTuid';\r\nexport * from './vTuidMain';\r\nexport * from './vTuidEdit';\r\nexport * from './vTuidInfo';\r\nexport * from './vTuidView';\r\n","import * as React from 'react';\r\nimport { VField } from './vField';\r\nimport { VArr } from './vArr';\r\nimport { VSubmit } from './vSubmit';\r\nimport { uid } from 'tonva-react-form';\r\n\r\nexport abstract class VBand {\r\n    protected label: string;\r\n    protected view = () => <div />;\r\n\r\n    constructor(label:string) {\r\n        this.label = label;\r\n    }\r\n\r\n    render():JSX.Element {\r\n        //text-sm-right\r\n        return <div key={this.key} className=\"px-3\">\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-sm-2 col-form-label\">\r\n                    {this.label}\r\n                </label>\r\n                <div className=\"col-sm-10\">\r\n                    {this.renderContent()}\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    setAddRow(addRow:()=>Promise<void>) {}\r\n    get key() {return this.label}\r\n    public getVFields():VField[] {return;}\r\n    public getVArr():VArr {return;}\r\n    public getVSubmit():VSubmit {return;}\r\n\r\n    protected renderContent():JSX.Element {\r\n        return <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">content</div>;\r\n    }\r\n}\r\n\r\nexport interface FieldRes {\r\n    label: string;\r\n    placeHolder: string;\r\n    suffix: string;\r\n}\r\nexport class VFieldBand extends VBand {\r\n    protected vField:VField;\r\n    constructor(label:string, vField:VField) {\r\n        super(label);\r\n        this.vField = vField;\r\n    }\r\n\r\n    get key() {return this.vField.name}\r\n    public getVFields():VField[] {return [this.vField];}\r\n\r\n    protected renderContent():JSX.Element {\r\n        return this.vField.render();\r\n        /*\r\n        <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">\r\n            {this.vField.render()}\r\n        </div>;*/\r\n    }\r\n}\r\n\r\nexport class VArrBand extends VBand {\r\n    protected vArr:VArr;\r\n    constructor(label:string, vArr:VArr) {\r\n        super(label);\r\n        this.vArr = vArr;\r\n    }\r\n\r\n    setAddRow(addRow:()=>Promise<void>) {this.vArr.setAddRow(addRow)}\r\n    get key() {return this.vArr.name}\r\n    public getVArr():VArr {return this.vArr;}\r\n\r\n    render():JSX.Element {\r\n        return <React.Fragment key={this.key}>\r\n            {this.vArr && this.vArr.render()}\r\n        </React.Fragment>;\r\n    }\r\n}\r\n\r\nexport class VFieldsBand extends VBand {\r\n    protected vFields: VField[];\r\n    constructor(label:string, vFields:VField[]) {\r\n        super(label);\r\n        this.vFields = vFields;\r\n    }\r\n\r\n    get key() {return this.vFields[0].name}\r\n    public getVFields():VField[] {return this.vFields;}\r\n\r\n    protected renderContent():JSX.Element {\r\n        return <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">\r\n            fields\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class VSubmitBand extends VBand {\r\n    protected vSubmit: VSubmit;\r\n    constructor(vSubmit:VSubmit) {\r\n        super(undefined);\r\n        this.vSubmit = vSubmit;\r\n    }\r\n\r\n    get key() {return '$submit'}\r\n\r\n    public getVSubmit():VSubmit {return this.vSubmit;}\r\n\r\n    render():JSX.Element {\r\n        return <div key=\"$submit\" className=\"px-3\">\r\n            <div className=\"form-group row\">\r\n                <div className=\"offset-sm-2 col-sm-10\">\r\n                    {this.vSubmit.render()}\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames'\r\nimport { ViewModel } from \"./viewModel\";\r\nimport { VForm } from './vForm';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\n\r\nexport class VSubmit extends ViewModel {\r\n    private vForm: VForm;\r\n    constructor(vForm: VForm) {\r\n        super();\r\n        this.vForm = vForm;\r\n        this.caption = this.vForm.submitCaption;\r\n        this.className = 'btn btn-primary w-25';\r\n    }\r\n    @observable caption: string;\r\n    @observable className: string;\r\n\r\n    private onClickSubmit = async () => {\r\n        this.vForm.submit();\r\n    }\r\n\r\n    protected view = observer(() => {\r\n        let {isOk} = this.vForm;\r\n        return <button type=\"button\" \r\n            onClick={this.onClickSubmit}\r\n            className={this.className}\r\n            disabled={isOk === false}>\r\n            {this.caption}\r\n        </button>;\r\n    });\r\n}","\r\nexport abstract class Rule {\r\n    abstract check(defy:string[], value:any);\r\n}\r\n\r\nexport class RuleRequired extends Rule {\r\n    check(defy:string[], value:any) {\r\n        switch (typeof value) {\r\n            default:\r\n            case 'boolean': return;\r\n            case 'object':\r\n                if (value !== null) return;\r\n                break;\r\n            case 'string':\r\n                if ((value as string).trim().length > 0) return;\r\n                break;\r\n            case 'number':\r\n                if ((value as number) !== NaN) return;\r\n                break;\r\n            case 'undefined':\r\n                break;\r\n        }\r\n        defy.push('不能为空');\r\n    }\r\n}\r\n\r\nexport class RuleNum extends Rule {\r\n    check(defy:string[], value:any) {\r\n        if (value === undefined || value === null) return;\r\n        let n = Number(value);\r\n        if (n === NaN) defy.push('必须是数字');\r\n    }\r\n}\r\n\r\nexport class RuleInt extends Rule {\r\n    check(defy:string[], value:any) {\r\n        if (value === undefined || value === null) return;\r\n        let n = Number(value);\r\n        if (Number.isNaN(n) === true || Number.isInteger(n) === false) {\r\n            defy.push('必须是整数');\r\n        }\r\n    }\r\n}\r\n\r\nexport class RuleMin extends RuleNum {\r\n    constructor(min: number) {\r\n        super();\r\n        this.min = min;\r\n    }\r\n    min: number;\r\n    check(defy:string[], value:any) {\r\n        super.check(defy, value);\r\n        if (Number(value) < this.min) defy.push('不能小于' + this.min);\r\n    }\r\n}\r\n\r\nexport class RuleMax extends RuleNum {\r\n    constructor(max: number) {\r\n        super();\r\n        this.max = max;\r\n    }\r\n    max: number;\r\n    check(defy:string[], value:any) {\r\n        super.check(defy, value);\r\n        if (Number(value) > this.max) defy.push('不能小于' + this.max);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { computed, action } from 'mobx';\r\nimport classNames from 'classnames';\r\nimport { observer } from 'mobx-react';\r\nimport { FA } from 'tonva-react-form';\r\nimport { ViewModel } from \"../viewModel\";\r\nimport { VForm, FormMode } from '../vForm';\r\nimport { Rule, RuleRequired, RuleInt, RuleNum, RuleMin, RuleMax } from '../rule';\r\nimport { Field } from '../../../entities';\r\nimport { FieldRes } from '../vBand';\r\nimport { FieldUI, FieldInputUI, FieldStringUI, FieldNumberUI } from '../../formUI';\r\n\r\nexport abstract class VField extends ViewModel {\r\n    protected form: VForm;\r\n    protected fieldUI: FieldUI;\r\n    protected fieldRes:FieldRes;\r\n    protected field: Field;\r\n    protected rules: Rule[];\r\n    constructor(form:VForm, field:Field, fieldUI: FieldUI, fieldRes:FieldRes) {\r\n        super();\r\n        this.form = form;\r\n        this.field = field;\r\n        this.name = field.name;\r\n        this.fieldUI = fieldUI || {} as any;\r\n        this.fieldRes = fieldRes || {} as any;\r\n        this.init();\r\n    }\r\n\r\n    name: string;\r\n\r\n    protected init() {\r\n        this.buildRules();\r\n    }\r\n\r\n    protected buildRules() {\r\n        this.rules = [];\r\n        let {required} = this.fieldUI;\r\n        if (required === true || this.field !== undefined && this.field.null === false) {\r\n            this.rules.push(new RuleRequired);\r\n        }\r\n    }\r\n\r\n    @computed get checkRules(): string[] {\r\n        let defy = [];\r\n        for (let r of this.rules) r.check(defy, this.value);\r\n        return defy;\r\n    }\r\n\r\n    @computed get isOk() {\r\n        if (this.rules.length === 0) return true;\r\n        let defy = this.checkRules;\r\n        return defy.length === 0;\r\n    }\r\n\r\n    @computed get value() { return this.form.values[this.name]; }\r\n    setValue(v:any) {\r\n        this.form.values[this.name]=v; \r\n    }\r\n    get error() { return this.form.errors[this.name]; }\r\n    set error(err:any) { this.form.errors[this.name]=err; }\r\n    protected parse(str:string):any {return str;}\r\n    get readonly():boolean {\r\n        let {mode} = this.form;\r\n        return mode === FormMode.readonly || \r\n            mode === FormMode.edit && this.fieldUI.editable === false;\r\n    }\r\n}\r\n\r\nexport class VUnknownField extends VField {\r\n    protected view = () => {\r\n        //let {name, type} = this.fieldUI;\r\n        let type='', name = '';\r\n        return <input type=\"text\" className=\"form-control form-control-plaintext border border-info rounded bg-light\"\r\n            placeholder={'unkown control: ' + type + '-' + name} />;\r\n    }\r\n}\r\n\r\nexport abstract class VInputControl extends VField {\r\n    protected fieldUI: FieldInputUI;\r\n    protected input: HTMLInputElement;\r\n\r\n    protected inputType:string;\r\n    protected get maxLength():number {return}\r\n\r\n    protected renderError = (className:string) => {\r\n        let {errors} = this.form;\r\n        let error = errors[this.name];\r\n        if (error === undefined) return;\r\n        return <div className={className}><FA name=\"exclamation-circle\" /> {error}</div>\r\n    }\r\n\r\n    /*\r\n    get value() {\r\n        return super.value;\r\n    }*/\r\n    setValue(v:any) {\r\n        super.setValue(v); this.setInputValue(); \r\n    }\r\n\r\n    protected ref = (input:HTMLInputElement) => {\r\n        this.input = input;\r\n        this.setInputValue();\r\n    }\r\n\r\n    protected setInputValue() {\r\n        if (!this.input) return;\r\n        let v = this.value;\r\n        this.input.value = v === null || v === undefined? '' : v;\r\n    }\r\n\r\n    protected onFocus = () => {\r\n        this.error = undefined;\r\n    }\r\n\r\n    protected onBlur = () => {\r\n        let defy = this.checkRules;\r\n        if (defy.length > 0) {\r\n            this.error = defy[0];\r\n        }\r\n        this.form.computeFields();\r\n    }\r\n\r\n    protected onChange = (evt: React.ChangeEvent<any>) => {\r\n        let v = this.parse(evt.currentTarget.value);\r\n        if (v === null) {\r\n            return;\r\n        }\r\n        this.setValue(v);\r\n    }\r\n\r\n    protected onKeyPress: (event:React.KeyboardEvent<HTMLInputElement>) => void;\r\n    \r\n    protected view = observer(() => {\r\n        let {required} = this.fieldUI;\r\n        let {placeHolder, suffix} = this.fieldRes;\r\n        let ctrlCN = ['form-control', 'form-control-input'];\r\n        let errCN = 'text-danger small mt-1 mx-2';\r\n    \r\n        let redDot;\r\n        let input;\r\n        if (this.readonly === true) {\r\n            input = <input className={classNames(ctrlCN, 'bg-light')}\r\n                ref={this.ref}\r\n                type={this.inputType}\r\n                readOnly={true}\r\n            />;\r\n        }\r\n        else {\r\n            input = <input className={classNames(ctrlCN)}\r\n                ref={this.ref}\r\n                type={this.inputType}\r\n                onFocus={this.onFocus}\r\n                onBlur={this.onBlur}\r\n                onChange={this.onChange}\r\n                placeholder={placeHolder}\r\n                readOnly={false}\r\n                maxLength={this.maxLength}\r\n                onKeyPress={this.onKeyPress}\r\n            />;\r\n            if (required === true || this.field.null === false) {\r\n                redDot = <RedMark />;\r\n            }\r\n        }\r\n\r\n        let inputGroup;\r\n        if (suffix === undefined)\r\n            inputGroup = input;\r\n        else\r\n            inputGroup = <div className=\"input-group\">\r\n                {input}\r\n                <div className=\"input-group-append\">\r\n                    <span className=\"input-group-text\">{suffix}</span>\r\n                </div>\r\n            </div>;\r\n\r\n        return <>\r\n            {redDot}\r\n            {inputGroup}\r\n            {this.renderError(errCN)}\r\n        </>\r\n    });\r\n}\r\n\r\nexport const RedMark = () => <b style={{color:'red', position:'absolute', left:'0.1em', top:'0.5em'}}>*</b>;\r\n\r\nexport class VStringField extends VInputControl {\r\n    protected fieldUI: FieldStringUI;\r\n    protected inputType:string = 'text';\r\n    protected get maxLength():number {return this.field.size}\r\n}\r\n\r\nconst KeyCode_Neg = 45;\r\nconst KeyCode_Dot = 46;\r\n\r\nexport abstract class VNumberControl extends VInputControl {\r\n    protected fieldUI: FieldNumberUI;\r\n    protected extraChars: number[];\r\n\r\n    protected init() {\r\n        super.init();\r\n        this.extraChars = [];\r\n        if (this.fieldUI !== undefined) {\r\n            let {min, max} = this.fieldUI;\r\n            if (min !== undefined) {\r\n                //this.rules.push((v:number) => {if (v === undefined) return; if (v<min) return ErrMin + min; return true;});\r\n                if (min < 0) this.extraChars.push(KeyCode_Neg);\r\n            }\r\n            else {\r\n                this.extraChars.push(KeyCode_Neg);\r\n            }\r\n    \r\n            if (max !== undefined) {\r\n                //this.rules.push((v:number) => {if (v === undefined) return; if (v>max) return ErrMax + max; return true});\r\n            }\r\n        }\r\n        switch (this.field.type) {\r\n            case 'dec':\r\n            case 'bigint':\r\n            case 'int':\r\n            case 'smallint':\r\n            case 'tinyint':\r\n                this.extraChars.push(KeyCode_Dot); break;\r\n        }\r\n    }\r\n\r\n    protected buildRules() {\r\n        super.buildRules();\r\n        this.rules.push(new RuleNum);\r\n        let {min, max} = this.fieldUI;\r\n        if (min !== undefined) this.rules.push(new RuleMin(min));\r\n        if (max !== undefined) this.rules.push(new RuleMax(max));\r\n    }\r\n\r\n    inputType:string = 'number';\r\n\r\n    protected parse(text:string):any {\r\n        try {\r\n            if (text.trim().length === 0) return undefined;\r\n            let ret = Number(text);\r\n            return (ret === NaN)? null : ret;\r\n        }\r\n        catch {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    protected setInputValue() {\r\n        if (!this.input) return;\r\n        let v = this.value;\r\n        if (this.parse(this.input.value) == v) return;\r\n        this.input.value = v === null || v === undefined? '' : v;\r\n    }\r\n\r\n    protected onKeyPress = (event:React.KeyboardEvent<HTMLInputElement>) => {\r\n        let ch = event.charCode;\r\n        if (ch === 8 || ch === 0 || ch === 13 || ch >= 48 && ch <= 57) return;\r\n        if (this.extraChars !== undefined) {\r\n            if (this.extraChars.indexOf(ch) >= 0) {\r\n                switch (ch) {\r\n                    case KeyCode_Dot: this.onKeyDot(); break;\r\n                    case KeyCode_Neg: this.onKeyNeg(); event.preventDefault(); break;\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    private onKeyDot() {\r\n        let v = this.input.value;\r\n        let p = v.indexOf('.');\r\n        if (p >= 0) this.input.value = v.replace('.', '');\r\n    }\r\n    private onKeyNeg() {\r\n        let v = this.input.value;\r\n        let p = v.indexOf('-');\r\n        if (p >= 0) v = v.replace('-', '');\r\n        else v = '-'+v;\r\n        this.input.value = v;\r\n    }\r\n}\r\n\r\nexport class VIntField extends VNumberControl {\r\n    protected buildRules() {\r\n        super.buildRules();\r\n        this.rules.push(new RuleInt);\r\n    }\r\n}\r\n\r\nexport class VDecField extends VNumberControl {\r\n}\r\n\r\nexport class VTextField extends VStringField {\r\n\r\n}\r\n\r\nexport class VDateTimeField extends VStringField {\r\n\r\n}\r\n","import React from 'react';\r\nimport { VField } from './vField';\r\nimport { Field } from '../../../entities';\r\nimport { VForm } from '../vForm';\r\nimport { observer } from 'mobx-react';\r\nimport { FieldRes } from '../vBand';\r\n\r\nexport class VComputeField extends VField {\r\n    constructor(form:VForm, field: Field, fieldRes: FieldRes) {\r\n        super(form, field, undefined, fieldRes);\r\n    }\r\n    protected view = observer(() => {\r\n        let value = this.form.values[this.field.name];\r\n        let {placeHolder, suffix} = this.fieldRes;\r\n        let ctrlCN = 'form-control form-control-input bg-light';\r\n        if (value === null) value = '';\r\n        let input = <input className={ctrlCN}\r\n            type=\"text\"\r\n            placeholder={placeHolder}\r\n            readOnly={true}\r\n            value={value}/>\r\n        let inputGroup;\r\n        if (suffix === undefined)\r\n            inputGroup = input;\r\n        else\r\n            inputGroup = <div className=\"input-group\">\r\n                {input}\r\n                <div className=\"input-group-append\">\r\n                    <span className=\"input-group-text\">{suffix}</span>\r\n                </div>\r\n            </div>;\r\n        return inputGroup;\r\n        /*\r\n            return <div \r\n            className=\"form-control form-control-plaintext border border-info rounded bg-light cursor-pointer\">\r\n            {value} &nbsp;\r\n        </div>;\r\n        */\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { IObservableArray, observable } from 'mobx';\r\nimport _ from 'lodash';\r\nimport { List, FA, Muted } from 'tonva-react-form';\r\nimport { Page, nav } from 'tonva-tools';\r\nimport { ViewModel, RowContent, TypeContent, JSONContent } from './viewModel';\r\nimport { ArrFields, Field } from '../../entities';\r\nimport { VForm, FieldInputs, FormMode } from './vForm';\r\nimport { FormArr } from '../formUI';\r\n\r\nexport type ArrEditRow = (initValues:any, onRowChanged:(rowValues:any)=>void) => Promise<void>;\r\n\r\nexport class VArr extends ViewModel {\r\n    protected mode: FormMode;\r\n    protected label: any;\r\n    protected header: any;\r\n    protected footer: any;\r\n    protected rowValues: any;                 // 仅仅用来判断是不是新增，undefined则是新增\r\n    protected onEditRow: ArrEditRow;\r\n    protected ownerForm:VForm;\r\n    protected vForm:VForm;\r\n    protected rowContent:TypeContent;\r\n    protected none: string;\r\n    protected newSubmitCaption: string;\r\n    protected editSubmitCaption: string;\r\n    protected addRow: ()=>Promise<void>;\r\n\r\n    name:string;\r\n    list: IObservableArray<any>;\r\n\r\n    constructor(ownerForm:VForm, arr:ArrFields, onEditRow?:ArrEditRow) {\r\n        super();\r\n        this.ownerForm = ownerForm;\r\n        let {name, fields} = arr;\r\n        this.name = name;\r\n        let {ui, res, mode, inputs, values} = ownerForm;\r\n        let arrsRes = res.arrs;\r\n        let arrRes = arrsRes !== undefined? arrsRes[name] : {};\r\n        let {label, none, newSubmit, editSubmit} = arrRes;\r\n        this.none = none || ownerForm.none;\r\n        this.newSubmitCaption = newSubmit || ownerForm.arrNewCaption;\r\n        this.editSubmitCaption = editSubmit || ownerForm.arrEditCaption;\r\n        this.label = label || name;\r\n        let arrUI = ((ui && ui.items[name]) || {}) as FormArr;\r\n        this.rowContent = arrUI.rowContent;// || JSONContent;\r\n        this.mode = mode;\r\n        if (this.onEditRow === undefined) {\r\n            this.vForm = new VForm({\r\n                fields: fields,\r\n                arrs: undefined,\r\n                ui: arrUI,\r\n                res: arrRes,\r\n                inputs: inputs[name] as FieldInputs,\r\n                none: ownerForm.none,\r\n                submitCaption: 'submit',\r\n                arrNewCaption: undefined,\r\n                arrEditCaption: undefined,\r\n                arrTitleNewButton: undefined,\r\n                mode: mode,\r\n            }, \r\n            mode===FormMode.readonly? undefined: this.onSubmit);\r\n        }\r\n        else {\r\n            this.onEditRow = onEditRow;\r\n        }\r\n        this.list = values[name];\r\n    }\r\n\r\n    reset() {\r\n        this.vForm.reset();\r\n        this.list.clear();\r\n    }\r\n\r\n    setAddRow(addRow:()=>Promise<void>) {\r\n        this.addRow = addRow;\r\n    }\r\n\r\n    protected rowPage = () => {\r\n        return <Page header={this.label} back=\"close\">\r\n            {this.vForm.render('py-3')}\r\n        </Page>\r\n    }\r\n    private onSubmit = async () => {\r\n        let {valueBoxs} = this.vForm;\r\n        await this.onRowChanged(valueBoxs);\r\n    }\r\n\r\n    private onRowChanged = async (rowValues:any) => {\r\n        if (this.rowValues === undefined) {\r\n            rowValues.$owner = this.ownerForm.values;\r\n            this.list.push(rowValues);\r\n            if (this.onEditRow === undefined)\r\n                this.vForm.reset();\r\n            else\r\n                await this.onEditRow(undefined, this.onRowChanged);\r\n        }\r\n        else {\r\n            _.merge(this.rowValues, rowValues);\r\n            if (this.onEditRow === undefined) nav.pop();\r\n        }\r\n    }\r\n\r\n    private renderItem = (item:any, index:number) => {\r\n        if (this.rowContent === undefined)\r\n            return <div className=\"px-3 py-2\"><JSONContent {...item} /></div>\r\n        return <this.rowContent {...item} />;\r\n    }\r\n    private showRow = async (rowValues:any):Promise<any> => {\r\n        if (this.onEditRow !== undefined) {\r\n            await this.onEditRow(rowValues, this.onRowChanged);\r\n            return;\r\n        }\r\n        this.vForm.reset();\r\n        if (rowValues !== undefined) this.vForm.setValues(rowValues);\r\n        nav.push(<this.rowPage />);\r\n    }\r\n    private editRow = async (rowValues:any): Promise<void> => {\r\n        this.rowValues = rowValues;\r\n        let {vSubmit} = this.vForm;\r\n        if (vSubmit !== undefined) {\r\n            vSubmit.caption = this.editSubmitCaption;\r\n            vSubmit.className = 'btn btn-outline-success';\r\n        }\r\n        this.vForm.mode = this.ownerForm.mode;\r\n        await this.showRow(rowValues);\r\n    }\r\n    private internalAddRow = async () => {\r\n        this.rowValues = undefined;\r\n        let {vSubmit} = this.vForm;\r\n        vSubmit.caption = this.newSubmitCaption;\r\n        vSubmit.className = 'btn btn-outline-success';\r\n        this.vForm.reset();\r\n        this.vForm.mode = FormMode.new;\r\n        await this.showRow(undefined);\r\n    }\r\n\r\n    protected view = () => {\r\n        let button;\r\n        if (this.addRow !== undefined || this.mode !== FormMode.readonly) {\r\n            button = <button onClick={this.addRow || this.internalAddRow}\r\n                type=\"button\" \r\n                className=\"btn btn-link p-0\">\r\n                {this.ownerForm.arrTitleNewButton}\r\n            </button>;\r\n        }\r\n        let header = this.header || <div className=\"px-3 bg-light small\" style={{paddingTop:'1px', paddingBottom:'1px'}}>\r\n            <div className=\"flex-fill align-self-center\">{this.label}</div>\r\n            {button}\r\n        </div>;\r\n        return <List className=\"pb-3\"\r\n            header={header}\r\n            none={<Muted className=\"px-3 py-2\">{this.none}</Muted>}\r\n            items={this.list}\r\n            item={{render: this.renderItem, onClick: this.editRow}} />;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { tv } from '../../../tools';\r\nimport { Field, Tuid } from '../../../entities';\r\nimport { VField, RedMark } from \"./vField\";\r\nimport { FieldUI } from '../../formUI';\r\nimport { VForm, FieldInput, FormMode } from '../vForm';\r\nimport { FieldRes } from '../vBand';\r\n\r\nconst buttonStyle:React.CSSProperties = {\r\n    textAlign:'left', \r\n    paddingLeft:'0.75rem', \r\n    paddingRight:'0.75rem', \r\n    overflow: 'hidden'\r\n};\r\n\r\nexport class VTuidField extends VField {\r\n    protected vForm: VForm;\r\n    protected input: FieldInput;\r\n    protected tuid: Tuid;\r\n\r\n    constructor(vForm: VForm, field:Field, fieldUI: FieldUI, fieldRes:FieldRes) {\r\n        super(vForm, field, fieldUI, fieldRes);\r\n        this.tuid = field._tuid;\r\n        this.vForm = vForm;\r\n        this.input = vForm.inputs[field.name] as FieldInput;\r\n    }\r\n\r\n    onClick = async () => {\r\n        if (this.readonly === true) {\r\n            if (!this.value) return;\r\n            await this.tuid.showInfo(this.value.id);\r\n            return;\r\n        }\r\n        let id:number;\r\n        if (this.input !== undefined) {\r\n            id = await this.input.select(this.vForm, this.field, this.vForm.getValues());\r\n        }\r\n        else {\r\n            alert('call undefined');\r\n            id = 0;\r\n        }\r\n        this.setValue(this.tuid.boxId(id));\r\n    }\r\n    protected view = observer(() => {\r\n        let {placeHolder} = this.fieldRes;\r\n        let disabled:boolean = false;\r\n        let {_ownerField} = this.field;\r\n        if (_ownerField !== undefined) {\r\n            let {name, arr} = _ownerField;\r\n            disabled = this.vForm.getValue(name) === null;\r\n        }\r\n        let content;\r\n        if (this.value === null)\r\n            content = <>{placeHolder || this.input.placeHolder}</>;\r\n        else if (typeof this.value === 'object') {\r\n            content = tv(this.value);\r\n        }\r\n        else {\r\n            let idBox = this.tuid.boxId(this.value);\r\n            content = tv(idBox); // idBox.content();\r\n        }\r\n        if (this.readonly === true)\r\n        {\r\n            return <div \r\n                className=\"form-control form-control-plaintext border border-info rounded bg-light cursor-pointer\"\r\n                onClick={this.onClick}>\r\n                {content}\r\n            </div>;\r\n        }\r\n        let redDot;\r\n        let {required} = this.fieldUI;\r\n        if (required === true || this.field.null === false) {\r\n            redDot = <RedMark />;\r\n        }\r\n        return <>\r\n            {redDot}\r\n            <button className=\"form-control btn btn-outline-info\"\r\n                type=\"button\"\r\n                disabled={disabled}\r\n                style={buttonStyle}\r\n                onClick={this.onClick}>\r\n                {content}\r\n            </button>\r\n        </>;\r\n    })\r\n}\r\n","import { VBand, VFieldBand, VArrBand, VFieldsBand, VSubmitBand, FieldRes } from \"./vBand\";\r\nimport { Field, ArrFields } from \"../../entities\";\r\nimport { VForm, FormOptions } from \"./vForm\";\r\nimport { FormItems, FieldUI, FormItem } from \"../formUI\";\r\nimport { VSubmit } from \"./vSubmit\";\r\nimport { VField, buildVField, VComputeField } from \"./vField\";\r\nimport { VArr } from \"./vArr\";\r\nimport { VTuidField } from \"./vField/vTuidField\";\r\n\r\nexport class BandsBuilder {\r\n    private vForm: VForm;\r\n    private onSubmit: (values:any)=>Promise<void>;\r\n    private fields: Field[];\r\n    private arrs: ArrFields[];\r\n    private formItems: FormItems;\r\n    private layout: string[];\r\n    private res: any;\r\n    constructor(vForm:VForm, options: FormOptions, onSubmit: (values:any)=>Promise<void>) {\r\n        this.vForm = vForm;\r\n        this.onSubmit = onSubmit;\r\n        let {fields, arrs, ui, res} = options;\r\n        this.fields = fields;\r\n        this.arrs = arrs;\r\n        if (ui !== undefined) {\r\n            let {items, layout} = ui;\r\n            this.formItems = items;\r\n            this.layout = layout;\r\n        }\r\n        this.res = res;\r\n    }\r\n\r\n    build():VBand[] {\r\n        //return this.bandUIs === undefined? this.bandsOnFly() : this.bandsFromUI();\r\n        return this.layout === undefined? this.bandsOnFly() : this.bandsFromLayout();\r\n    }\r\n\r\n    private resFromName(name:string, res:any):string|FieldRes {\r\n        if (res === undefined) return;\r\n        let {fields} = res;\r\n        if (fields === undefined) return;\r\n        return fields[name] || name;\r\n    }\r\n\r\n    private bandsOnFly():VBand[] {\r\n        let bands:VBand[] = [];\r\n        this.bandsFromFields(bands, this.fields, this.res);\r\n        if (this.arrs !== undefined) {\r\n            for (let arr of this.arrs) bands.push(this.bandFromArr(arr));\r\n        }\r\n        if (this.onSubmit !== undefined) {\r\n            bands.push(new VSubmitBand(new VSubmit(this.vForm)));\r\n        }\r\n        return bands;\r\n    }\r\n\r\n    private bandsFromFields(bands:VBand[], fields:Field[], res:any) {\r\n        if (fields === undefined) return;\r\n        for (let field of fields) bands.push(this.bandFromField(field, res));\r\n    }\r\n\r\n    private bandsFromLayout():VBand[] {\r\n        let bands:VBand[] = [];\r\n        /*\r\n        for (let bandUI of this.bandUIs)  {\r\n            let band = this.bandFromUI(bandUI);\r\n            bands.push(band);\r\n        }\r\n        */\r\n        return bands;\r\n    }\r\n\r\n    /*\r\n    private bandFromUI(bandUI:BandUI):VBand {\r\n        let {band} = bandUI;\r\n        switch (band) {\r\n            default: return this.bandFromFieldUI(bandUI as FieldBandUI);\r\n            case 'arr': return this.bandFromArrUI(bandUI as ArrBandUI);\r\n            case 'fields': return this.bandFromFieldsUI(bandUI as FieldsBandUI);\r\n            case 'submit': return this.bandFromSubmitUI(bandUI as SubmitBandUI);\r\n        }\r\n    }\r\n    \r\n    private bandFromFieldUI(bandUI: FieldBandUI): VFieldBand {\r\n        let {label} = bandUI;\r\n        let vField = this.vFieldFromUI(bandUI);\r\n        return new VFieldBand(label, vField);\r\n    }\r\n    private bandFromArrUI(bandUI: ArrBandUI): VArrBand {\r\n        let {label, name} = bandUI;\r\n        let vArr = this.vArrFromUI(bandUI);\r\n        return new VArrBand(label, vArr);\r\n    }\r\n    private bandFromFieldsUI(bandUI: FieldsBandUI): VFieldsBand {\r\n        let {label, fieldUIs} = bandUI;\r\n        let vFields = fieldUIs.map(v => this.vFieldFromUI(v));\r\n        return new VFieldsBand(label, vFields);\r\n    }\r\n    private bandFromSubmitUI(bandUI: SubmitBandUI): VSubmitBand {\r\n        if (this.onSubmit === undefined) return;\r\n        let vSubmit = new VSubmit(this.vForm);\r\n        return new VSubmitBand(vSubmit);\r\n    }\r\n    */\r\n/*\r\n    private vFieldFromField(field:Field, fieldRes:FieldRes, formItem: FormItem): VField {\r\n        let fieldUI:FieldUI = undefined;\r\n        if (formItem !== undefined) {\r\n            if (typeof formItem === 'function') {\r\n                return new VComputeField(this.vForm, field, fieldRes);\r\n            }\r\n        }\r\n        let ret = buildVField(this.vForm, field, formItem, fieldRes);\r\n        if (ret !== undefined) return ret;\r\n        return new VTuidField(field, fieldUI, fieldRes, this.vForm);\r\n    }\r\n*/\r\n    private bandFromField(field:Field, res:any):VBand {\r\n        let {name} = field;\r\n        let fieldRes:FieldRes;\r\n        let rfn = this.resFromName(name, res);\r\n        let label:string;\r\n        if (typeof rfn === 'object') {\r\n            label = rfn.label;\r\n            fieldRes = rfn;\r\n        }\r\n        else {\r\n            label = rfn as string;\r\n            fieldRes = undefined;\r\n        }\r\n        let vField:VField;\r\n        let formItem:FormItem;\r\n        if (this.formItems !== undefined) formItem = this.formItems[name];\r\n        //let vField = this.vFieldFromField(field, fieldRes as FieldRes, formItem);\r\n        //let fieldUI:FieldUI = undefined;\r\n        if (typeof formItem === 'function') {\r\n            vField = new VComputeField(this.vForm, field, fieldRes);\r\n        }\r\n        else {\r\n            vField = buildVField(this.vForm, field, formItem as FieldUI, fieldRes);\r\n        }\r\n        if (vField === undefined) {\r\n            vField = new VTuidField(this.vForm, field, formItem as FieldUI, fieldRes);\r\n        }\r\n        return new VFieldBand(label || name, vField);\r\n    }\r\n\r\n    private bandFromArr(arr: ArrFields):VBand {\r\n        let {name, fields} = arr;\r\n        //let row = JSONContent;\r\n        //let bands:VBand[] = [];\r\n        //this.bandsFromFields(bands, fields, res);\r\n        let vArr = new VArr(this.vForm, arr); // name, res && res.label || name, row, bands);\r\n        return new VArrBand(name, vArr);\r\n    }\r\n\r\n    /*\r\n    private vFieldFromUI(fieldUI:FieldUI):VField {\r\n        return;\r\n    }\r\n\r\n    private vArrFromUI(arrBandUI:ArrBandUI):VArr {\r\n        return;\r\n    }\r\n    */\r\n}\r\n","import { VField, VIntField, VDecField, VStringField, VTextField, VDateTimeField } from './vField';\r\nimport { Field } from '../../../entities';\r\nimport { FieldRes } from '../vBand';\r\nimport { VForm } from '../vForm';\r\nimport { FieldUI } from '../../formUI';\r\n\r\nexport function buildVField(form:VForm, field: Field, fieldUI: FieldUI, fieldRes:FieldRes): VField {\r\n    let vField:new (form:VForm, field:Field, ui:FieldUI, fieldRes:FieldRes) => VField;\r\n    switch (field.type) {\r\n        default: return;\r\n        case 'tinyint':\r\n        case 'smallint':\r\n        case 'int':\r\n            vField = VIntField;\r\n            break;\r\n        case 'bigint':\r\n            let {_tuid} = field;\r\n            if (_tuid !== undefined) return;\r\n            vField = VIntField;\r\n            break;\r\n        case 'dec':\r\n            vField = VDecField;\r\n            break;\r\n        case 'char':\r\n            vField = VStringField;\r\n            break;\r\n        case 'text':\r\n            vField = VTextField;\r\n            break;\r\n        case 'datetime':\r\n            vField = VDateTimeField;\r\n            break;\r\n    }\r\n    return new vField(form, field, fieldUI, fieldRes);\r\n}\r\n\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport { observer } from \"mobx-react\";\r\nimport { VBand } from './vBand';\r\nimport { BandsBuilder } from './bandsBuilder';\r\nimport { Field, ArrFields } from '../../entities';\r\nimport { computed, observable, IObservableObject, IObservableValue } from 'mobx';\r\nimport { VArr } from './vArr';\r\nimport { FormUI, FormUIBase, FormItems } from '../formUI';\r\nimport { VField } from './vField';\r\nimport { VSubmit } from './vSubmit';\r\nimport { IObservableArray } from 'mobx';\r\nimport { FA } from 'tonva-react-form';\r\n\r\nexport type FieldCall = (form:VForm, field:Field, values:any) => Promise<any>;\r\nexport interface FieldInput {\r\n    select: FieldCall;\r\n    content: React.StatelessComponent<any>;\r\n    placeHolder: string;\r\n}\r\nexport interface FieldInputs {\r\n    [fieldOrArr:string]: FieldInput | {[field:string]: FieldInput};\r\n}\r\nexport enum FormMode {new, edit, readonly}\r\n\r\nexport interface FormOptions {\r\n    fields: Field[];\r\n    arrs?: ArrFields[];\r\n    ui: FormUIBase;\r\n    res: any;\r\n    inputs: FieldInputs;\r\n    submitCaption: string;\r\n    arrNewCaption: string;\r\n    arrEditCaption: string;\r\n    arrTitleNewButton: JSX.Element;\r\n    none: string;\r\n    mode: FormMode;\r\n}\r\n\r\nexport class VForm {\r\n    protected fields: Field[];\r\n    protected arrs: ArrFields[];\r\n    protected bands: VBand[];\r\n    protected bandColl: {[key:string]: VBand};\r\n    protected onSubmit: ()=>Promise<void>;\r\n\r\n    constructor(options: FormOptions, onSubmit: ()=>Promise<void>) {\r\n        let {fields, arrs, ui, res, inputs, none, submitCaption, arrNewCaption, arrEditCaption, arrTitleNewButton, mode} = options;\r\n        this.fields = fields;\r\n        this.arrs = arrs;\r\n        this.ui = ui;\r\n        if (this.ui !== undefined) this.formItems = this.ui.items; //.compute = this.ui.compute;\r\n        this.res = res;\r\n        this.inputs = inputs;\r\n        this.none = none;\r\n        this.submitCaption = submitCaption;\r\n        this.arrNewCaption = arrNewCaption;\r\n        this.arrEditCaption = arrEditCaption;\r\n        this.arrTitleNewButton = arrTitleNewButton || <small><FA name=\"plus\" /> 新增</small>;\r\n        if (onSubmit === undefined) this.mode = FormMode.readonly;\r\n        else this.mode = mode;\r\n        this.buildFormValues();\r\n        this.buildBands(options, onSubmit);\r\n        this.onSubmit = onSubmit;\r\n    }\r\n\r\n    ui: FormUI;\r\n    res: any;\r\n    values: any;\r\n    errors: any;\r\n    formItems: FormItems;\r\n    mode: FormMode;\r\n    vFields: {[name:string]:VField} = {};\r\n    vArrs: {[name:string]: VArr} = {};\r\n    vSubmit: VSubmit;\r\n    inputs: FieldInputs;\r\n    none: string;\r\n    submitCaption: string;\r\n    arrNewCaption: string;\r\n    arrEditCaption: string;\r\n    arrTitleNewButton: JSX.Element;\r\n\r\n    private buildBands(options: FormOptions, onSubmit: (values:any)=>Promise<void>) {\r\n        this.bandColl = {};\r\n        let bandsBuilder = new BandsBuilder(this, options, onSubmit);\r\n        this.bands = bandsBuilder.build();\r\n        for (let band of this.bands) {\r\n            this.bandColl[band.key] = band;\r\n            let vFields = band.getVFields();\r\n            if (vFields !== undefined) for (let f of vFields) this.vFields[f.name] = f;\r\n            let vArr = band.getVArr();\r\n            if (vArr !== undefined) this.vArrs[vArr.name] = vArr;\r\n            let vSubmit = band.getVSubmit();\r\n            if (vSubmit !== undefined) this.vSubmit = vSubmit;\r\n        }\r\n    }\r\n\r\n    private onFormSubmit = (event:React.FormEvent<any>) => {\r\n        event.preventDefault();\r\n        return false;\r\n    }\r\n\r\n    protected view = observer(({className}:{className:string}) => {\r\n        return <form className={className} onSubmit={this.onFormSubmit}>\r\n            {this.bands.map(v => v.render())}\r\n        </form>;\r\n    });\r\n\r\n    getBand(name:string) {\r\n        return this.bandColl[name];\r\n    }\r\n\r\n    computeFields() {\r\n        if (this.formItems === undefined) return;\r\n        let values = this.values;\r\n        for (let i in this.formItems) {\r\n            let item = this.formItems[i];\r\n            if (typeof item !== 'function') continue;\r\n            values[i] = item.call(values);\r\n        }\r\n    }\r\n\r\n    async submit() {\r\n        if (this.onSubmit === undefined) return;\r\n        await this.onSubmit();\r\n    }\r\n    \r\n    getValues() {\r\n        let ret:any = {};\r\n        let values = this.values;\r\n        for (let f of this.fields) {\r\n            let {name} = f;\r\n            let v = values[name]\r\n            ret[name] =  v !== null && typeof v === 'object' ? v.id : v;\r\n        }\r\n        if (this.arrs !== undefined) {\r\n            for (let arr of this.arrs) {\r\n                let {name, fields, id, order} = arr;\r\n                let list = ret[name] = [];\r\n                let rows = this.vArrs[name].list;\r\n                for (let row of rows) {\r\n                    let item = {} as any;\r\n                    if (id !== undefined) item[id] = row[id];\r\n                    if (order !== undefined) item[order] = row[order];\r\n                    for (let f of fields) {\r\n                        let {name:fn} = f;\r\n                        let v = row[fn]\r\n                        item[fn] =  v !== null && typeof v === 'object' ? v.id : v;\r\n                    }\r\n                    list.push(item);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    get valueBoxs() {\r\n        let ret:any = {};\r\n        let values = this.values;\r\n        for (let f of this.fields) {\r\n            let {name, _tuid} = f;\r\n            let v = values[name]\r\n            ret[name] =  _tuid === undefined || typeof v === 'object' ? v : _tuid.boxId(v);\r\n        }\r\n        if (this.arrs === undefined) return ret;\r\n        for (let arr of this.arrs) {\r\n            let {name, fields, id, order} = arr;\r\n            let list = ret[name] = this.vArrs[name].list.slice();\r\n            for (let row of list) {\r\n                for (let f of fields) {\r\n                    let {name:fn, _tuid} = f;\r\n                    let v = row[fn]\r\n                    row[fn] =  _tuid === undefined || typeof v === 'object' ? v : _tuid.boxId(v);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    setValues(initValues:any) {\r\n        if (initValues === undefined) {\r\n            this.reset();\r\n            return;\r\n        }\r\n        let values = this.values;\r\n        let errors = this.errors;\r\n        for (let f of this.fields) {\r\n            let fn = f.name;\r\n            errors[fn] = undefined;\r\n            let v =  initValues[fn];\r\n            values[fn] = v;\r\n        }\r\n        // 还要设置arrs的values\r\n        for (let i in this.vArrs) {\r\n            let list = initValues[i];\r\n            if (list === undefined) continue;\r\n            let arrList = values[i] as IObservableArray<any>;\r\n            arrList.clear();\r\n            arrList.push(...list);\r\n        }\r\n    }\r\n\r\n    @computed get isOk():boolean {\r\n        for (let i in this.vFields) {\r\n            if (this.vFields[i].isOk === false) return false;\r\n        }\r\n        return true;\r\n    }\r\n    reset() {\r\n        let values = this.values;\r\n        let errors = this.errors;\r\n        for (let f of this.fields) {\r\n            let fn = f.name;\r\n            //if (this.compute !== undefined && this.compute[fn] !== undefined) continue;\r\n            values[fn] = null;\r\n            errors[fn] = undefined;\r\n        }\r\n        for (let i in this.vFields) {\r\n            let ctrl = this.vFields[i];\r\n            let cn = ctrl.name;\r\n            if (cn === undefined) continue;\r\n            //if (this.compute !== undefined && this.compute[cn] !== undefined) continue;\r\n            ctrl.setValue(null);\r\n        }\r\n        for (let i in this.vArrs) {\r\n            let vArr = this.vArrs[i];\r\n            vArr.reset();\r\n        }\r\n    }\r\n\r\n    getValue(fieldName: string) {\r\n        return this.values[fieldName];\r\n    }\r\n    setValue(fieldName: string, value: any) { this.values[fieldName] = value }\r\n\r\n    setError(fieldName:string, error:string) {this.errors[fieldName] = error}\r\n\r\n    private buildFieldValues(fields: Field[]):any {\r\n        let v: {[p:string]: any} = {\r\n            valueFromFieldName: function(propName:string) {\r\n                return this[propName];\r\n            }\r\n        };\r\n        for (let f of fields) {\r\n            let fn = f.name;\r\n            v[fn] = null;\r\n        }\r\n        return v;\r\n    }\r\n    private buildObservableValues():IObservableObject {\r\n        let v: {[p:string]: any} = this.buildFieldValues(this.fields);\r\n        if (this.arrs !== undefined) {\r\n            for (let arr of this.arrs) {\r\n                v[arr.name] = observable.array([], {deep:true});\r\n            }\r\n        }\r\n        let ret = observable(v);\r\n        return ret;\r\n    }\r\n    private buildFormValues() {\r\n        this.values = this.buildObservableValues();\r\n        this.errors = observable(this.buildFieldValues(this.fields));\r\n    }\r\n\r\n    render(className:string = \"py-3\"):JSX.Element {\r\n        return <this.view className={className} />\r\n    }\r\n}\r\n","export * from './vForm';\r\n","import {bridgeCenterApi, isBridged} from './appBridge';\r\nimport {FetchError} from '../fetchError';\r\nimport {HttpChannelUI} from './httpChannelUI';\r\nimport {nav} from '../ui/nav';\r\nimport { isDevelopment } from './host';\r\n\r\nexport async function httpGet(url:string, params?:any):Promise<any> {\r\n    let channel = new HttpChannel(false, url, undefined, undefined);\r\n    let ret = await channel.get('', params);\r\n    return ret;\r\n}\r\n\r\nexport async function httpPost(url:string, params?:any):Promise<any> {\r\n    let channel = new HttpChannel(false, url, undefined, undefined);\r\n    let ret = await channel.post('', params);\r\n    return ret;\r\n}\r\n\r\nexport class HttpChannel {\r\n    private isCenter: boolean;\r\n    private hostUrl: string;\r\n    private apiToken: string;\r\n    private ui?: HttpChannelUI;\r\n    private timeout: number;\r\n\r\n    constructor(isCenter: boolean, hostUrl: string, apiToken:string, ui?: HttpChannelUI) {\r\n        this.isCenter = isCenter;\r\n        this.hostUrl = hostUrl;\r\n        this.apiToken = apiToken;\r\n        this.ui = ui;\r\n        this.timeout = isDevelopment === true? 500000:5000;\r\n    }\r\n\r\n    private startWait = () => {\r\n        if (this.ui !== undefined) this.ui.startWait();\r\n    }\r\n\r\n    private endWait = (url?:string, reject?:(reason?:any)=>void) => {\r\n        if (this.ui !== undefined) this.ui.endWait();\r\n        if (reject !== undefined) reject('访问webapi超时 ' + url);\r\n    }\r\n\r\n    private showError = async (error:FetchError) => {\r\n        if (this.ui !== undefined) await this.ui.showError(error);\r\n    }\r\n\r\n    used() {\r\n        this.post('', {});\r\n    }\r\n\r\n    async get(url: string, params: any = undefined): Promise<any> {\r\n        if (params) {\r\n            let keys = Object.keys(params);\r\n            if (keys.length > 0) {\r\n                let c = '?';\r\n                for (let k of keys) {\r\n                    let v = params[k];\r\n                    if (v === undefined) continue;\r\n                    url += c + k + '=' + params[k];\r\n                    c = '&';\r\n                }\r\n            }\r\n        }\r\n        let options = this.buildOptions();\r\n        options.method = 'GET';\r\n        return await this.innerFetch(url, options);\r\n    }\r\n\r\n    async post(url: string, params: any): Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = 'POST';\r\n        options.body = JSON.stringify(params);\r\n        return await this.innerFetch(url, options);\r\n    }\r\n\r\n    async put(url: string, params: any): Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = 'PUT';\r\n        options.body = JSON.stringify(params);\r\n        return await this.innerFetch(url, options);\r\n    }\r\n\r\n    async delete(url: string, params: any): Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = 'DELETE';\r\n        options.body = JSON.stringify(params);\r\n        return await this.innerFetch(url, options);\r\n    }\r\n    async fetch(url: string, options: any, resolve:(value?:any)=>any, reject:(reason?:any)=>void):Promise<void> {\r\n        let that = this;\r\n        this.startWait();\r\n        let path = url;\r\n        function buildError(err: string) {\r\n            return {\r\n                channel: that,\r\n                url: path,\r\n                options: options,\r\n                resolve: resolve,\r\n                reject: reject,\r\n                error: err,\r\n            }\r\n        }\r\n        try {\r\n            console.log('%s %s', options.method, path);\r\n            let timeOutHandler = setTimeout(() => that.endWait(url, reject), this.timeout);\r\n            let res = await fetch(encodeURI(path), options);\r\n            if (res.ok === false) {\r\n                clearTimeout(timeOutHandler);\r\n                that.endWait();\r\n                console.log('call error %s', res.statusText);\r\n                throw res.statusText;\r\n            }\r\n            let ct = res.headers.get('content-type');\r\n            if (ct && ct.indexOf('json')>=0) {\r\n                return res.json().then(async retJson => {\r\n                    clearTimeout(timeOutHandler);\r\n                    that.endWait();\r\n                    if (retJson.ok === true) {\r\n                        return resolve(retJson.res);\r\n                    }\r\n                    if (retJson.error === undefined) {\r\n                        await that.showError(buildError('not valid tonva json'));\r\n                    }\r\n                    else {\r\n                        await that.showError(buildError(retJson.error));\r\n                        reject(retJson.error);\r\n                    }\r\n                    //throw retJson.error;\r\n                }).catch(async error => {\r\n                    await that.showError(buildError(error.message));\r\n                });\r\n            }\r\n            else {\r\n                let text = await res.text();\r\n                clearTimeout(timeOutHandler);\r\n                that.endWait();\r\n                resolve(text);\r\n            }\r\n        }\r\n        catch(error) {\r\n            if (typeof error === 'string') {\r\n                if (error.toLowerCase().startsWith('unauthorized') === true) {\r\n                    nav.logout();\r\n                    return;\r\n                }\r\n            }\r\n            await this.showError(buildError(error.message));\r\n        };\r\n    }\r\n\r\n    private async innerFetch(url: string, options: any): Promise<any> {\r\n        let u = this.hostUrl + url;\r\n        if (this.isCenter === true && this.apiToken === undefined && isBridged())\r\n            return await bridgeCenterApi(u, options.method, options.body);\r\n        return await new Promise<any>(async (resolve, reject) => {\r\n            await this.fetch(u, options, resolve, reject);\r\n        });\r\n    }\r\n\r\n    async callFetch(url:string, method:string, body:any):Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = method;\r\n        options.body = body;\r\n        return await new Promise<any>(async (resolve, reject) => {\r\n            await this.fetch(url, options, resolve, reject);\r\n        });\r\n    }\r\n\r\n    private buildOptions(): any {\r\n        let {language, culture} = nav;\r\n        let headers = new Headers();\r\n        //headers.append('Access-Control-Allow-Origin', '*');\r\n        headers.append('Content-Type', 'application/json;charset=UTF-8');\r\n        let lang = language;\r\n        if (culture) lang += '-' + culture;\r\n        headers.append('Accept-Language', lang);\r\n        if (this.apiToken) { \r\n            headers.append('Authorization', this.apiToken); \r\n        }\r\n        let options = {\r\n            headers: headers,\r\n            // cache: 'no-cache',\r\n        };\r\n        return options;\r\n    }\r\n}\r\n","import _ from 'lodash';\r\n\r\nexport interface KeyValueRes {\r\n    [key:string]: any;\r\n}\r\n\r\nexport interface Res<T extends KeyValueRes> {\r\n    [lang:string]: T | {[district:string]: T};\r\n}\r\n\r\nexport const resOptions:{lang:string, district:string} = {\r\n    lang: undefined,\r\n    district: undefined,\r\n}\r\n\r\nexport function setResOptions(lang:string, district:string) {\r\n    resOptions.lang = lang;\r\n    resOptions.district = district;\r\n}\r\n\r\n(function() {\r\n    let lang: string, district: string;\r\n    let language = navigator.languages && navigator.languages[0] || // Chrome / Firefox\r\n        navigator.language; // ||   // All browsers\r\n    //navigator.userLanguage; // IE <= 10\r\n    if (!language) {\r\n        lang = 'zh';\r\n        district = 'CN';\r\n    }\r\n    else {\r\n        let parts = language.split('-');\r\n        lang = parts[0];\r\n        if (parts.length > 1) district = parts[1];\r\n    }\r\n    setResOptions(lang, district);\r\n}());\r\n\r\nexport function resLang<T extends KeyValueRes>(res:Res<T>):T {\r\n    let {lang, district} = resOptions;\r\n    let ret:T = {} as T;\r\n    if (res === undefined) return ret;\r\n    _.merge(ret, res._);\r\n    let l = res[lang];\r\n    if (l === undefined) return ret;\r\n    _.merge(ret, l._);\r\n    let d = l[district];\r\n    if (d === undefined) return ret;\r\n    _.merge(ret, d);\r\n    let {entity} = ret;\r\n    if (entity !== undefined) {\r\n        for (let i in entity) {\r\n            entity[i.toLowerCase()] = entity[i];\r\n        }\r\n    }\r\n    return ret;\r\n}\r\n","export * from './CApp';\r\nexport * from './startApp';\r\nexport * from './uq';\r\nexport * from './action';\r\nexport * from './tuid';\r\nexport * from './sheet';\r\nexport * from './query';\r\nexport * from './map';\r\nexport * from './history';\r\nexport * from './pending';\r\nexport * from './form/viewModel';\r\nexport * from './form';\r\nexport * from './formUI';\r\nexport * from './ControllerUq';\r\nexport * from './CVEntity';\r\nexport * from './link';\r\nexport * from './icons';\r\n","import * as React from 'react';\r\nimport {observable, computed} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face} from '../face';\r\nimport {Rule} from '../rule';\r\n\r\nexport abstract class ControlBase {\r\n    protected formView: FormView;\r\n    constructor(formView:FormView) {\r\n        this.formView = formView;\r\n    }\r\n    render():JSX.Element {\r\n        return <div className=\"col-sm-10\">\r\n            {this.renderControl()}\r\n        </div>;\r\n    }\r\n    protected abstract renderControl():JSX.Element;\r\n    @computed get hasError():boolean {return false;}\r\n    @computed get filled():boolean {return false;}\r\n    clear() {}\r\n    clearErrors() {}\r\n    readValues(values:any):any {}\r\n    setError(fieldName:string, error:string) {}\r\n    setInitValues(values: any) {}\r\n    isOk():boolean {this.validate(); return !this.hasError;}\r\n    protected validate() {}\r\n}\r\n\r\nexport abstract class Control extends ControlBase {\r\n    protected field: Field;\r\n    protected face: Face;\r\n    protected props: any;\r\n    protected rules: Rule[];\r\n\r\n    protected element: HTMLElement;\r\n    @observable protected isOK?: boolean;\r\n    @observable protected error: string;\r\n    @observable protected value: any;\r\n\r\n    constructor(formView:FormView, field:Field, face:Face) {\r\n        super(formView);\r\n        this.field = field;\r\n        this.face = face;\r\n        this.init();\r\n        this.setProps();\r\n    }\r\n    protected ref(element: HTMLElement) {\r\n        this.element = element;\r\n    }\r\n    protected init() {\r\n        this.rules = [];\r\n        let r = this.field.rules;\r\n        if (r !== undefined) {\r\n            if (Array.isArray(r) === true) this.rules.push(...(r as Rule[]));\r\n            else this.rules.push(r as Rule);\r\n        }\r\n    };\r\n    protected setProps():any {\r\n        return this.props = {\r\n            ref: this.ref.bind(this),\r\n            name: this.field.name,\r\n        }\r\n    };\r\n    @computed get hasError():boolean {return this.error !== undefined;}\r\n    @computed get filled():boolean {\r\n        let ret = this.value !== undefined && this.value !== this.field.defaultValue;\r\n        return ret;\r\n    }\r\n    clearValue() { this.value = undefined; }\r\n    clear() { this.clearErrors(); this.clearValue(); }\r\n    clearErrors() { this.isOK = undefined; this.error = undefined; }\r\n    readValues(values:any):any {\r\n        values[this.field.name] = this.value;\r\n    }\r\n    setError(fieldName:string, error:string) {}\r\n    setInitValues(values: any) {}\r\n    protected getValueFromElement():any {return this.value;}\r\n    protected validate() {\r\n        try {\r\n            let v = this.getValueFromElement();\r\n            if (this.rules.length > 0) {\r\n                let isOk:boolean;\r\n                for (let rule of this.rules) {\r\n                    console.log('validate: %s', v);\r\n                    let err = rule(v);\r\n                    console.log('validate: %s err: %s', v, err);\r\n                    if (err === true) {\r\n                        this.error = undefined;\r\n                        isOk = true;\r\n                    }\r\n                    else if (err !== undefined) {\r\n                        //console.log('field %s onBlur v=%s rule=%s err=%s', \r\n                        //    this.field.name, JSON.stringify(v), rule, err);\r\n                        this.error = err;\r\n                        this.isOK = false;\r\n                        return;\r\n                    }\r\n                }\r\n                this.isOK = isOk;\r\n            }\r\n            this.value = v;\r\n        }\r\n        catch (e) {\r\n            this.error = e.message;\r\n        }\r\n    }\r\n    render():JSX.Element {\r\n        let n;\r\n        if (this.face !== undefined) {\r\n            let {notes} = this.face;\r\n            if (notes !== undefined) n = <small className=\"text-muted\">{notes}</small>;\r\n        }\r\n        return <div className=\"col-sm-10\">\r\n            {this.renderControl()}\r\n            {n}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face} from '../face';\r\nimport {ControlBase} from './control';\r\n\r\nexport class ButtonsControl extends ControlBase {\r\n    constructor(props) {\r\n        super(props);\r\n        this.otherClick = this.otherClick.bind(this);\r\n    }\r\n    private otherClick() {\r\n        let onOther = this.formView.props.onOther;\r\n        if (onOther === undefined) return;\r\n        let values = this.formView.readValues();\r\n        onOther(values);\r\n    }\r\n    renderControl():JSX.Element {\r\n        console.log('buttons.renderControl');\r\n        let nothing = this.formView.nothing;\r\n        let hasError = this.formView.hasError;\r\n        let props = this.formView.props;\r\n        console.log('buttons.renderControl nothing:%s hasError:%s', nothing, hasError);\r\n        let {submitButton, otherButton, onOther} = props;\r\n        let btnOther;\r\n        if (otherButton !== undefined) {\r\n            btnOther = <button className=\"btn btn-outline-info ml-auto\" onClick={this.otherClick}>\r\n                {otherButton}\r\n            </button>\r\n        }\r\n        return <div className=\"d-flex justify-content-start\">\r\n            <button\r\n                className=\"btn btn-primary\"\r\n                type=\"submit\" \r\n                disabled={nothing || hasError}>\r\n                {submitButton || '提交'}\r\n            </button>\r\n            {btnOther}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable, computed} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, Placeholder} from '../face';\r\nimport {Control} from './control';\r\n\r\nconst TxtRequired = '必须填入要求内容';\r\n\r\nexport abstract class CharsControl extends Control {\r\n    protected init() {\r\n        super.init();\r\n        if (this.field.required === true) {\r\n            this.rules.push((v) => {\r\n                if (v===null || v===undefined || (v as string).trim().length === 0) return TxtRequired;\r\n                return true;\r\n            });\r\n        }\r\n    }\r\n\r\n    protected element: HTMLInputElement;\r\n    protected getValueFromElement():any {return this.parseValue(this.element.value)}\r\n\r\n    protected setProps() {\r\n        super.setProps();\r\n        _.assign(this.props, {\r\n            onBlur: this.onBlur.bind(this),\r\n            onFocus: this.onFocus.bind(this),\r\n            onChange: this.onChange.bind(this),\r\n        });\r\n        let face = this.face as Placeholder;\r\n        if (face !== undefined) {\r\n            _.assign(this.props, {\r\n                placeholder: face.placeholder,\r\n            });\r\n        }\r\n        return this.props;\r\n    };\r\n    protected parseValue(value?:string):any {return value;}\r\n    private onBlur() {\r\n        //console.log('field %s onBlure', this.field.name);\r\n        this.validate();\r\n    }\r\n    private onChange() {\r\n        console.log('onChange');\r\n        this.validate();\r\n    }\r\n    private onFocus() {\r\n        this.clearErrors();\r\n        //this.error = undefined;\r\n        //this.formView.clearErrors();\r\n    }\r\n    protected className() {\r\n        return classNames({\r\n            \"form-control\": true,\r\n            \"has-success\": this.isOK === true,\r\n            \"is-invalid\": this.error !== undefined,\r\n            \"is-valid\": this.error === undefined && this.isOK === true,\r\n        });\r\n    }\r\n    protected renderInput():JSX.Element {\r\n        return <input className={this.className()} {...this.props} />;\r\n    }\r\n    protected ref(element: HTMLInputElement) {\r\n        super.ref(element);\r\n        if (element) {\r\n            element.value = this.value === undefined? '':this.value;\r\n        }\r\n    }\r\n    protected renderError():JSX.Element {\r\n        //if (this.field.name === 'name') console.log('charsControl renderControl');\r\n        if (this.error === undefined) return null;\r\n        return <div className=\"invalid-feedback\">{this.error}</div>\r\n    }\r\n    clearValue() { super.clearValue(); this.element.value = ''; }\r\n    setError(fieldName:string, error:string) {\r\n        if (this.field.name === fieldName) this.error = error;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        if (v === undefined) return;\r\n        //this.element.value = v;\r\n        this.value = v;\r\n    }\r\n    renderControl():JSX.Element {\r\n        return <React.Fragment>\r\n            {this.renderInput()}\r\n            {this.renderError()}\r\n        </React.Fragment>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport {CharsControl} from './charsControl';\r\nimport {StringField} from '../field';\r\n\r\nexport class StringControl extends CharsControl {\r\n    protected field: StringField;\r\n    protected setProps() {\r\n        let p = super.setProps();\r\n        _.assign(p, {\r\n            type: 'text',\r\n            maxLength: this.field.maxLength,\r\n        });\r\n        return p;\r\n    };\r\n    protected parseValue(value?:string):any {\r\n        if (value === undefined) return undefined;\r\n        if (value.trim().length === 0) return undefined;\r\n        return value;\r\n    }\r\n}\r\n\r\nexport class PasswordControl extends StringControl {\r\n    protected setProps() {\r\n        let p = super.setProps();\r\n        _.assign(p, {\r\n            type: 'password',\r\n            maxLength: this.field.maxLength,\r\n        });\r\n        return p;\r\n    };\r\n}","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport {IntField, DecField, NumberField} from '../field';\r\nimport {CharsControl} from './charsControl';\r\n\r\nconst ErrInvalidNumber = '无效的数字';\r\nconst ErrMin = '最小值为';\r\nconst ErrMax = '最大值为';\r\n\r\nconst KeyCode_Neg = 45;\r\nconst KeyCode_Dot = 46;\r\n\r\nexport class NumberControl extends CharsControl {\r\n    protected field: IntField | DecField | NumberField;\r\n    protected value: number;\r\n    protected extraChars: number[];\r\n    \r\n    protected init() {\r\n        super.init();\r\n        this.extraChars = [];\r\n        let {min, max} = this.field;\r\n        if (min !== undefined) {\r\n            this.rules.push((v:number) => {if (v === undefined) return; if (v<min) return ErrMin + min; return true;});\r\n            if (min < 0) this.extraChars.push(KeyCode_Neg);\r\n        }\r\n        else {\r\n            this.extraChars.push(KeyCode_Neg);\r\n        }\r\n\r\n        if (max !== undefined) {\r\n            this.rules.push((v:number) => {if (v === undefined) return; if (v>max) return ErrMax + max; return true});\r\n        }\r\n        switch (this.field.type) {\r\n            case 'dec':\r\n            case 'number': this.extraChars.push(KeyCode_Dot); break;\r\n        }\r\n    }\r\n\r\n    protected parseValue(value?:string):any {\r\n        if (value === undefined) return undefined;\r\n        if (value.trim().length === 0) return undefined;\r\n        let n = Number.parseFloat(value);\r\n        if (isNaN(n)) throw new Error(ErrInvalidNumber);\r\n        return n;\r\n    }\r\n\r\n    protected setProps() {\r\n        super.setProps();\r\n        _.assign(this.props, {\r\n            type: 'number',\r\n            step: (this.field as DecField).step,\r\n            onKeyPress: this.onKeyPress.bind(this),\r\n        });\r\n    }\r\n\r\n    onKeyPress(event:KeyboardEvent) {\r\n        let ch = event.charCode;\r\n        if (ch === 8 || ch === 0 || ch === 13 || ch >= 48 && ch <= 57) return;\r\n        if (this.extraChars !== undefined) {\r\n            if (this.extraChars.indexOf(ch) >= 0) {\r\n                switch (ch) {\r\n                    case KeyCode_Dot: this.onKeyDot(); break;\r\n                    case KeyCode_Neg: this.onKeyNeg(); event.preventDefault(); break;\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    private onKeyDot() {\r\n        let v = this.element.value;\r\n        let p = v.indexOf('.');\r\n        if (p >= 0) this.element.value = v.replace('.', '');\r\n    }\r\n    private onKeyNeg() {\r\n        let v = this.element.value;\r\n        let p = v.indexOf('-');\r\n        if (p >= 0) v = v.replace('-', '');\r\n        else v = '-'+v;\r\n        this.element.value = v;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {Control, ControlBase} from './control';\r\nimport {FormView} from '../formView';\r\n\r\nexport class UnknownControl extends Control {\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-plaintext\">\r\n            <div className=\"alert alert-primary\" role=\"alert\">\r\n            don't know how to create control<br/>\r\n            field: {JSON.stringify(this.field)} must be object <br/>\r\n            face: {JSON.stringify(this.face)} must be object <br/>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class EmptyControl extends ControlBase {\r\n    private element:JSX.Element;\r\n    constructor(formView:FormView, element:JSX.Element) {\r\n        super(formView);\r\n        this.element = element;\r\n    }\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-plaintext\">\r\n            {this.element}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, IdPickFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class PickIdControl extends Control {\r\n    protected face: IdPickFace;\r\n    @observable private caption: string|JSX.Element;\r\n\r\n    private onClick = async () => {\r\n        let {pick, fromPicked} = this.face;\r\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\r\n        if (item === undefined) {\r\n            this.value = undefined;\r\n            return;\r\n        }\r\n        if (fromPicked === undefined) {\r\n            this.value = item.id;\r\n            return;\r\n        }\r\n        let {id, caption} = fromPicked(item);\r\n        this.value = id;\r\n        this.caption = caption;\r\n    }\r\n    onPicked = (value: any) => {\r\n        this.value = value.id;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        this.value = v;\r\n    }\r\n    private controlContent():string|JSX.Element {\r\n        let {itemFromId, fromPicked, initCaption} = this.face;\r\n        if (this.value === undefined) {\r\n            return initCaption || '请选择Id';\r\n        }\r\n        if (this.caption !== undefined) {\r\n            return this.caption;\r\n        }\r\n        if (itemFromId !== undefined) {\r\n            if (fromPicked !== undefined) {\r\n                let item = itemFromId(this.value);\r\n                if (item) {\r\n                    let ret = fromPicked(item);\r\n                    if (ret !== undefined) return ret.caption;\r\n                }\r\n            }\r\n        }\r\n        return String(this.value);\r\n    }\r\n    /*\r\n    private buildContent():string|JSX.Element {\r\n        let {tuid, input} = this.face;\r\n        if (input === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n            return <div onClick={this.onClick}>{this.controlContent()}</div>;\r\n        }\r\n        return <input.component id={this.value} \r\n            tuid={tuid}\r\n            input={input}\r\n            entitiesUI={this.formView.props.context} \r\n            params={this.formView.readValues()}\r\n            onPicked={this.onPicked} />;\r\n    }*/\r\n    renderControl():JSX.Element {\r\n        let {tuid, input} = this.face;\r\n        if (input === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n            return <div className=\"form-control-plaintext px-2 border text-primary rounded cursor-pointer\"\r\n                onClick={this.onClick}>\r\n                {this.controlContent()}\r\n            </div>;\r\n        }\r\n        return <div className=\"form-control-static \">\r\n            <input.component id={this.value} \r\n                ui={tuid}\r\n                //input={input}\r\n                //entitiesUI={this.formView.props.context} \r\n                //params={this.formView.readValues()}\r\n                //onPicked={this.onPicked}\r\n                />\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, TuidPickFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class PickTuidControl extends Control {\r\n    protected face: TuidPickFace;\r\n    // protected value: number;\r\n    @observable private caption: string|JSX.Element;\r\n    constructor(formView:FormView, field:Field, face:Face) {\r\n        super(formView, field, face);\r\n        this.onIdChanged = this.onIdChanged.bind(this);\r\n        //this.onClick = this.onClick.bind(this);\r\n    }\r\n    /*\r\n    private async onClick() {\r\n        let {pick, fromPicked} = this.face;\r\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\r\n        if (item === undefined) {\r\n            this.value = undefined;\r\n            return;\r\n        }\r\n        if (fromPicked === undefined) {\r\n            this.value = item.id;\r\n            return;\r\n        }\r\n        let {id, caption} = fromPicked(item);\r\n        this.value = id;\r\n        this.caption = caption;\r\n    }*/\r\n    onIdChanged(id: any) {\r\n        this.value = id.id;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        this.value = v;\r\n    }\r\n    private buildContent():JSX.Element {\r\n        //let {tuid, input} = this.face;\r\n        return <this.face.input.component \r\n            {...this.face}\r\n            id={this.value}\r\n            //ui={this.face.ui}\r\n            //input={input}\r\n            //entitiesUI={this.formView.props.context} \r\n            onFormValues={()=>this.formView.readValues()}\r\n            onIdChanged={this.onIdChanged} />;\r\n    }\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-static \">\r\n            {this.buildContent()}\r\n        </div>;\r\n    }\r\n}\r\n/*\r\n<button className=\"form-control btn btn-outline-info\"\r\ntype=\"button\"\r\nstyle={{textAlign:'left', paddingLeft:'0.75rem'}}\r\nonClick={this.onClick}>\r\n{this.buildContent()}\r\n</button>\r\n*/","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, PickFace} from '../face';\r\nimport {Control} from './control';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class PickControl extends Control {\r\n    protected face: PickFace;\r\n    @observable private caption: string|JSX.Element;\r\n\r\n    private onClick = async () => {\r\n        let {pick, fromPicked} = this.face;\r\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\r\n        if (item === undefined) {\r\n            this.value = undefined;\r\n            return;\r\n        }\r\n        let {id, caption} = fromPicked(item);\r\n        this.value = id;\r\n        this.caption = caption;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        this.value = v;\r\n    }\r\n    /*\r\n    private controlContent():string|JSX.Element {\r\n        let {content: Content} = this.face;\r\n        if (this.value === undefined) {\r\n            return '请选择';\r\n        }\r\n        \r\n        if (this.caption !== undefined) {\r\n            return this.caption;\r\n        }\r\n        return <Content id={this.value} />;\r\n    }*/\r\n    /*\r\n    private buildContent():string|JSX.Element {\r\n        let {tuid, input} = this.face;\r\n        if (input === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n            return <div onClick={this.onClick}>{this.controlContent()}</div>;\r\n        }\r\n        return <input.component id={this.value} \r\n            tuid={tuid}\r\n            input={input}\r\n            entitiesUI={this.formView.props.context} \r\n            params={this.formView.readValues()}\r\n            onPicked={this.onPicked} />;\r\n    }*/\r\n    renderControl():JSX.Element {\r\n        return <this.view />;\r\n        /*\r\n        let {content:Content} = this.face;\r\n        //if (this.value === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n        //}\r\n        //return <div className=\"form-control-static \">\r\n        //    <Content />\r\n        //</div>;\r\n        */\r\n    }\r\n\r\n    private view = observer(() => {\r\n        let content;\r\n        let {content: Content} = this.face;\r\n        if (this.value === undefined || this.value === null) {\r\n            content = '请选择';\r\n        }\r\n        /*\r\n        else if (this.caption !== undefined) {\r\n            content = this.caption;\r\n        }*/\r\n        else {\r\n            content = <Content id={this.value} />;\r\n        } \r\n        return <div\r\n            className=\"form-control-plaintext px-2 border text-primary rounded cursor-pointer bg-light\"\r\n            onClick={this.onClick}>\r\n            {content}\r\n        </div>\r\n    });\r\n}\r\n","export * from './control';\r\nexport * from './buttonsControl';\r\nexport * from './stringControl';\r\nexport * from './numberControl';\r\n\r\nimport {Field} from '../field';\r\nimport {Face} from '../face';\r\nimport {Control, ControlBase} from './control';\r\nimport {ButtonsControl} from './buttonsControl';\r\nimport {CheckControl} from './checkControl';\r\nimport {RadioControl} from './radioControl';\r\nimport {TextAreaControl} from './textAreaControl';\r\nimport {SelectControl} from './selectControl';\r\nimport {UnknownControl, EmptyControl} from './unknownControl';\r\nimport {StringControl, PasswordControl} from './stringControl';\r\nimport {NumberControl} from './numberControl';\r\n\r\nimport {FormView, FormRow, GroupRow, FieldRow, LabelFormRow} from '../formView';\r\nimport { PickIdControl } from './pickIdControl';\r\nimport { PickTuidControl } from './pickTuidControl';\r\nimport { PickControl } from './pickControl';\r\n\r\nexport type CreateControl = (form:FormView, row: FormRow) => ControlBase\r\n\r\nexport const createControl:CreateControl = (form:FormView, row: LabelFormRow):ControlBase => {\r\n    let label = row.label;\r\n    if ((<GroupRow>row).group !== undefined)\r\n        return createGroupControl(form, label, row as GroupRow);\r\n    if ((<FieldRow>row).field !== undefined)\r\n        return createFieldControl(form, label, row as FieldRow);\r\n    return new EmptyControl(form, row.help);\r\n}\r\n\r\nconst controls:{[type:string]: new (formView:FormView, field:Field, face:Face) => Control} = {\r\n    \"string\": StringControl,\r\n    \"password\": PasswordControl,\r\n    \"number\": NumberControl,\r\n    \"checkbox\": CheckControl,\r\n    \"radiobox\": RadioControl,\r\n    \"select\": SelectControl,\r\n    \"pick-id\": PickIdControl,\r\n    \"pick-tuid\": PickTuidControl,\r\n    \"textarea\": TextAreaControl,\r\n    \"pick\": PickControl,\r\n};\r\nconst defaultFaces:{[type:string]: Face} = {\r\n    \"string\": {type:'string'},\r\n    \"number\": {type:'number'},\r\n    \"int\": {type:'number'},\r\n    \"dec\": {type:'number'},\r\n    \"bool\": {type:'checkbox'},\r\n}\r\nfunction createFieldControl(form:FormView, label:string, fieldRow: FieldRow):Control {\r\n    let {field, face} = fieldRow;\r\n    switch (typeof field) {\r\n        case 'string':\r\n            field = {\r\n                name: (field as any) as string,\r\n                type: 'string',\r\n            }\r\n            break;\r\n        case 'object':\r\n            break;\r\n        default:\r\n            return new UnknownControl(form, field, face);\r\n    }\r\n    let fieldType = field.type || 'string';\r\n    if (face === undefined) {\r\n        face = defaultFaces[fieldType];\r\n        if (face === undefined) return new UnknownControl(form, field, face);\r\n    }\r\n    else if (face.type === undefined) {\r\n        let f = defaultFaces[fieldType];\r\n        face.type = f===undefined? 'string' : f.type;\r\n    }\r\n    let control = controls[face.type || fieldType] || UnknownControl;\r\n    return new control(form, field, face);\r\n}\r\n\r\nfunction createGroupControl(form:FormView, label:string, groupRow: GroupRow):Control {\r\n    return new UnknownControl(form, groupRow as any, undefined);\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field, BoolField} from '../field';\r\nimport {Face, CheckBoxFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class CheckControl extends Control {    \r\n    protected element: HTMLInputElement;\r\n    protected field: BoolField;\r\n    protected face: CheckBoxFace;\r\n    private trueValue: any;\r\n    private falseValue: any;\r\n\r\n    protected init() {\r\n        super.init();\r\n        let {trueValue, falseValue} = this.field;\r\n        if (trueValue === undefined) this.trueValue = 1;\r\n        if (falseValue === undefined) this.falseValue = 0;\r\n    }\r\n\r\n    setProps() {\r\n        super.setProps();\r\n        _.assign(this.props, {\r\n            onChange: this.onChange.bind(this),\r\n        });\r\n    }\r\n\r\n    clearValue() {\r\n        this.element.checked = this.field.defaultValue === this.trueValue;\r\n        this.value = this.getValueFromElement();\r\n    }\r\n\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        if (v === undefined) {\r\n            v = this.field.defaultValue;\r\n        }\r\n        if (v !== undefined) {\r\n            //this.element.checked = v === this.trueValue;\r\n            //this.value = this.getValueFromElement();\r\n        }\r\n    }\r\n\r\n    protected getValueFromElement():any { return this.element.checked? this.trueValue:this.falseValue; }\r\n\r\n    private onChange() {\r\n        this.value = this.getValueFromElement();\r\n    }\r\n\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-static\">\r\n            <label className=\"form-control\">\r\n                <label className=\"custom-control custom-checkbox mb-0\">\r\n                    <input type='checkbox'\r\n                        name={this.field.name}\r\n                        ref={this.props.ref}\r\n                        onChange={this.props.onChange}\r\n                        className=\"custom-control-input\" />\r\n                    <span className=\"custom-control-indicator\" />\r\n                    <span className=\"custom-control-description\">{this.face.label}</span>\r\n                </label>\r\n            </label>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, RadioFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class RadioControl extends Control {\r\n    protected face: RadioFace;\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-static\">\r\n            <div className=\"form-control\">\r\n            {\r\n                this.face.list.map((item, index) => {\r\n                    let t, v;\r\n                    if (typeof item !== 'object') t = v = item;\r\n                    else {\r\n                        t = item.text;\r\n                        v = item.value;\r\n                    }\r\n                    return <label key={index} className=\"custom-control custom-radio w-25\">\r\n                        <input type='radio'\r\n                            name={this.field.name} \r\n                            className=\"custom-control-input\" />\r\n                        <span className=\"custom-control-indicator\"></span>\r\n                        <span className=\"custom-control-description\">{t}</span>\r\n                    </label>;\r\n                })\r\n            }\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, SelectFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class SelectControl extends Control {\r\n    constructor (formView:FormView, field:Field, face:Face) {\r\n        super(formView, field, face);\r\n        this.ref = this.ref.bind(this);\r\n    }\r\n    protected face: SelectFace;\r\n    protected element: HTMLSelectElement;\r\n    protected getValueFromElement():any {\r\n        let {selectedIndex, selectedOptions} = this.element;\r\n        let v:any = selectedOptions[0].value;\r\n        switch (this.field.type) {\r\n            case 'number': v = Number(v); break;\r\n            case 'date': v = new Date(v); break;\r\n            case 'bool': \r\n                if (typeof v === 'string') {\r\n                    v = ((v as string).toLowerCase() === 'true');\r\n                }\r\n                break;\r\n        }\r\n        return v;\r\n    }\r\n    renderControl():JSX.Element {\r\n        let {list} = this.face;\r\n        let def = this.face.default;\r\n        let options: any[] = [];\r\n        if (def === undefined)\r\n            options.push(<option key={-1} value={undefined}>请选择</option>);\r\n        options.push(...list.map((item, index) => {\r\n            let t, v;\r\n            if (typeof item !== 'object') t = v = item;\r\n            else {\r\n                t = item.text;\r\n                v = item.value;\r\n            }\r\n            return <option key={index} value={v}>{t}</option>;\r\n        }));\r\n        return <div className=\"form-control-static\">\r\n            <select name={this.field.name} className=\"form-control\" ref={this.ref}>\r\n                {options}\r\n            </select>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport {CharsControl} from './charsControl';\r\nimport {StringField} from '../field';\r\nimport {TextAreaFace} from '../face';\r\n\r\nexport class TextAreaControl extends CharsControl {\r\n    protected field: StringField;\r\n    protected face: TextAreaFace;\r\n    private el: HTMLTextAreaElement;\r\n    protected setProps() {\r\n        let p = super.setProps();\r\n        let {maxLength} = this.field;\r\n        let {rows} = this.face;\r\n        _.assign(p, {\r\n            maxLength: maxLength,\r\n            rows: rows,\r\n        });\r\n        return p;\r\n    };\r\n    protected renderInput():JSX.Element {\r\n        return <textarea ref={t=>{this.el = t;if (t!==undefined) t.value=''}} className={this.className()} {...this.props} />;\r\n    }\r\n}\r\n","import { Entities, Field, ArrFields, FieldMap } from './entities';\r\nimport { TuidMain, Tuid } from './tuid';\r\n\r\nconst tab = '\\t';\r\nconst ln = '\\n';\r\n\r\nexport abstract class Entity {\r\n    protected entities: Entities;\r\n    protected schema: any;\r\n    private jName: string;\r\n    sys?: boolean;\r\n    readonly name: string;\r\n    readonly typeId: number;\r\n    abstract get typeName(): string;\r\n    get sName():string {return this.jName || this.name}\r\n    fields: Field[];\r\n    arrFields: ArrFields[];\r\n    returns: ArrFields[];\r\n\r\n    constructor(entities:Entities, name:string, typeId:number) {\r\n        this.entities = entities;\r\n        this.name = name;\r\n        this.typeId = typeId;\r\n        this.sys = this.name.indexOf('$') >= 0;\r\n    }\r\n\r\n    public face: any;           // 对应字段的label, placeHolder等等的中文，或者语言的翻译\r\n\r\n    protected get tvApi() {return this.entities.uqApi;}\r\n    async getApiFrom() {return this.entities.uqApi;}\r\n\r\n    private fieldMaps: {[arr:string]: FieldMap} = {};\r\n    fieldMap(arr?:string): FieldMap {\r\n        if (arr === undefined) arr = '$';\r\n        let ret = this.fieldMaps[arr];\r\n        if (ret === undefined) {\r\n            let fields:Field[];\r\n            if (arr === '$') fields = this.fields;\r\n            else if (this.arrFields !== undefined) {\r\n                let arrFields = this.arrFields.find(v => v.name === arr);\r\n                if (arrFields !== undefined) fields = arrFields.fields;\r\n            }\r\n            else if (this.returns !== undefined) {\r\n                let arrFields = this.returns.find(v => v.name === arr);\r\n                if (arrFields !== undefined) fields = arrFields.fields;\r\n            }\r\n            if (fields === undefined) return {};\r\n            ret = {};\r\n            for (let f of fields) ret[f.name] = f;\r\n            this.fieldMaps[arr] = ret;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    public async loadSchema():Promise<void> {\r\n        if (this.schema !== undefined) return;\r\n        let schema = await this.entities.uqApi.schema(this.name);\r\n        this.setSchema(schema);\r\n    }\r\n\r\n    public setSchema(schema:any) {\r\n        if (schema === undefined) return;\r\n        if (this.schema !== undefined) return;\r\n        this.schema = schema;\r\n        let {name, fields, arrs, returns} = schema;\r\n        if (name !== this.name) this.jName = name;\r\n        this.entities.buildFieldTuid(this.fields = fields);\r\n        this.entities.buildArrFieldsTuid(this.arrFields = arrs, fields);\r\n        this.entities.buildArrFieldsTuid(this.returns = returns, fields);\r\n        //this.newMain = this.buildCreater(fields);\r\n        //this.newArr = this.buildArrCreater(arrs);\r\n        //this.newRet = this.buildArrCreater(returns);\r\n    }\r\n\r\n    schemaStringify():string {\r\n        return JSON.stringify(this.schema, (key:string, value:any) => {\r\n            if (key === '_tuid') return undefined;\r\n            return value;\r\n        }, 4);\r\n    }\r\n\r\n    tuidFromField(field:Field):Tuid {\r\n        let {_tuid, tuid} = field;\r\n        if (tuid === undefined) return;\r\n        if (_tuid !== undefined) return _tuid;\r\n        return field._tuid = this.entities.getTuid(tuid, undefined);\r\n    }\r\n\r\n    tuidFromName(fieldName:string, arrName?:string):Tuid {\r\n        if (this.schema === undefined) return;\r\n        let {fields, arrs} = this.schema;\r\n        let entities = this.entities;\r\n        function getTuid(fn:string, fieldArr:Field[]) {\r\n            if (fieldArr === undefined) return;\r\n            let f = fieldArr.find(v => v.name === fn);\r\n            if (f === undefined) return;\r\n            return entities.getTuid(f.tuid, undefined);\r\n        }\r\n        let fn = fieldName.toLowerCase();\r\n        if (arrName === undefined) return getTuid(fn, fields);\r\n        if (arrs === undefined) return;\r\n        let an = arrName.toLowerCase();\r\n        let arr = (arrs as ArrFields[]).find(v => v.name === an);\r\n        if (arr === undefined) return;\r\n        return getTuid(fn, arr.fields);\r\n    }\r\n\r\n    protected buildParams(params:any):any {\r\n        let result = {};\r\n        let fields = this.fields;\r\n        if (fields !== undefined) this.buildFieldsParams(result, fields, params);\r\n        let arrs = this.arrFields; \r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                let {name, fields} = arr;\r\n                let paramsArr:any[] = params[name];\r\n                if (paramsArr === undefined) continue;\r\n                let arrResult = [];\r\n                result[name] = arrResult;\r\n                for (let pa of params) {\r\n                    let rowResult = {};\r\n                    this.buildFieldsParams(rowResult, fields, pa);\r\n                    arrResult.push(rowResult);\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private buildFieldsParams(result:any, fields:Field[], params:any) {\r\n        for (let field of fields) {\r\n            let {name} = field;\r\n            let d = params[name];\r\n            let val:any;\r\n            switch (typeof d) {\r\n                default: val = d; break;\r\n                case 'object':\r\n                    let tuid = field._tuid;\r\n                    if (tuid === undefined) val = d.id;\r\n                    else val = tuid.getIdFromObj(d);\r\n                    break;\r\n            }\r\n            result[name] = val;\r\n        }\r\n    }\r\n\r\n    pack(data:any):string {\r\n        let ret:string[] = [];\r\n        let fields = this.fields;\r\n        if (fields !== undefined) this.packRow(ret, fields, data);\r\n        let arrs = this.arrFields; //schema['arrs'];\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                this.packArr(ret, arr.fields, data[arr.name]);\r\n            }\r\n        }\r\n        return ret.join('');\r\n    }\r\n    \r\n    private escape(row:any, field:Field):any {\r\n        let d = row[field.name];\r\n        switch (typeof d) {\r\n            default: return d;\r\n            case 'object':\r\n                let tuid = field._tuid;\r\n                if (tuid === undefined) return d.id;\r\n                return tuid.getIdFromObj(d);\r\n            case 'string':\r\n                let len = d.length;\r\n                let r = '', p = 0;\r\n                for (let i=0;i<len;i++) {\r\n                    let c = d.charCodeAt(i);\r\n                    switch(c) {\r\n                        case 9: r += d.substring(p, i) + '\\\\t'; p = i+1; break;\r\n                        case 10: r += d.substring(p, i) + '\\\\n'; p = i+1; break;\r\n                    }\r\n                }\r\n                return r + d.substring(p);\r\n            case 'undefined': return '';\r\n        }\r\n    }\r\n    \r\n    private packRow(result:string[], fields:Field[], data:any) {\r\n        let len = fields.length;\r\n        if (len === 0) return;\r\n        let ret = '';\r\n        ret += this.escape(data, fields[0]);\r\n        for (let i=1;i<len;i++) {\r\n            let f = fields[i];\r\n            ret += tab + this.escape(data, f);\r\n        }\r\n        result.push(ret + ln);\r\n    }\r\n    \r\n    private packArr(result:string[], fields:Field[], data:any[]) {\r\n        if (data !== undefined) {\r\n            for (let row of data) {\r\n                this.packRow(result, fields, row);\r\n            }\r\n        }\r\n        result.push(ln);\r\n    }\r\n    \r\n    unpackSheet(data:string):any {\r\n        let ret = {} as any; //new this.newMain();\r\n        //if (schema === undefined || data === undefined) return;\r\n        let fields = this.fields;\r\n        let p = 0;\r\n        if (fields !== undefined) p = this.unpackRow(ret, fields, data, p);\r\n        let arrs = this.arrFields; //schema['arrs'];\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                p = this.unpackArr(ret, arr, data, p);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    \r\n    unpackReturns(data:string):any {\r\n        let ret = {} as any;\r\n        //if (schema === undefined || data === undefined) return;\r\n        //let fields = schema.fields;\r\n        let p = 0;\r\n        //if (fields !== undefined) p = unpackRow(ret, schema.fields, data, p);\r\n        let arrs = this.returns; //schema['returns'];\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                //let creater = this.newRet[arr.name];\r\n                p = this.unpackArr(ret, arr, data, p);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    \r\n    private unpackRow(ret:any, fields:Field[], data:string, p:number):number {\r\n        let ch0 = 0, ch = 0, c = p, i = 0, len = data.length, fLen = fields.length;\r\n        for (;p<len;p++) {\r\n            ch0 = ch;\r\n            ch = data.charCodeAt(p);\r\n            if (ch === 9) {\r\n                let f = fields[i];\r\n                if (ch0 !== 8) {\r\n                    if (p>c) {\r\n                        let v = data.substring(c, p);\r\n                        ret[f.name] = this.to(ret, v, f);\r\n                    }\r\n                }\r\n                else {\r\n                    ret[f.name] = null;\r\n                }\r\n                c = p+1;\r\n                ++i;\r\n                if (i>=fLen) break;\r\n            }\r\n            else if (ch === 10) {\r\n                let f = fields[i];\r\n                if (ch0 !== 8) {\r\n                    if (p>c) {\r\n                        let v = data.substring(c, p);\r\n                        ret[f.name] = this.to(ret, v, f);\r\n                    }\r\n                }\r\n                else {\r\n                    ret[f.name] = null;\r\n                }\r\n                ++p;\r\n                ++i;\r\n                break;\r\n            }\r\n        }\r\n        return p;\r\n    }\r\n\r\n    private to(ret:any, v:string, f:Field):any {\r\n        switch (f.type) {\r\n            default: return v;\r\n            case 'datetime':\r\n            case 'date':\r\n            case 'time':\r\n                let date = new Date(Number(v));\r\n                return date;\r\n            case 'tinyint':\r\n            case 'smallint':\r\n            case 'int':\r\n            case 'dec': return Number(v);\r\n            case 'bigint':\r\n                let id = Number(v);\r\n                let {_tuid} = f;\r\n                if (_tuid === undefined) return id;\r\n                _tuid.useId(id, true);\r\n                return _tuid.boxId(id);\r\n        }\r\n    }\r\n\r\n    private unpackArr(ret:any, arr:ArrFields, data:string, p:number):number {\r\n        let vals:any[] = [], len = data.length;\r\n        let {name, fields} = arr;\r\n        while (p<len) {\r\n            let ch = data.charCodeAt(p);\r\n            if (ch === 10) {\r\n                ++p;\r\n                break;\r\n            }\r\n            let val = {} as any; //new creater();\r\n            vals.push(val);\r\n            p = this.unpackRow(val, fields, data, p);\r\n        }\r\n        ret[name] = vals;\r\n        return p;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport _ from 'lodash';\r\nimport { Entity } from './entity';\r\nimport { Entities, Field, ArrFields } from './entities';\r\nimport { isNumber } from 'util';\r\nimport { CUq, CTuidMain, CTuidEdit, CTuidInfo, CTuidSelect } from '../controllers';\r\n\r\nexport class BoxId {\r\n    id: number;\r\n    obj?: any;\r\n    content: (templet?:(values?:any, x?:any)=>JSX.Element, x?:any)=>JSX.Element;\r\n    valueFromFieldName: (fieldName:string)=>BoxId|any;\r\n    _$com?: any;\r\n    _$tuid?: Tuid;\r\n    getObj: ()=>any;\r\n}\r\n\r\nconst maxCacheSize = 1000;\r\nexport abstract class Tuid extends Entity {\r\n    private BoxId: ()=>void;\r\n    get typeName(): string { return 'tuid';}\r\n    private queue: number[] = [];               // 每次使用，都排到队头\r\n    private waitingIds: number[] = [];          // 等待loading的\r\n    private cache = observable.map({}, {deep: false});    // 已经缓冲的\r\n    idName: string;\r\n    owner: TuidMain;                    // 用这个值来区分是不是TuidArr\r\n    unique: string[];\r\n    schemaFrom: {owner:string; uq:string};\r\n\r\n    constructor(entities:Entities, name:string, typeId:number) {\r\n        super(entities, name, typeId);\r\n        this.buildIdBoxer();\r\n    }\r\n\r\n    abstract get Main();\r\n\r\n    private buildIdBoxer() {\r\n        this.BoxId = function():void {};\r\n        let prototype = this.BoxId.prototype;\r\n        Object.defineProperty(prototype, '_$tuid', {\r\n            value: this,\r\n            writable: false,\r\n            enumerable: false,\r\n        })\r\n        Object.defineProperty(prototype, 'obj', {\r\n            enumerable: false,\r\n            get: function() {\r\n                if (this.id === undefined || this.id<=0) return undefined;\r\n                return this._$tuid.valueFromId(this.id);\r\n            }\r\n        })\r\n        prototype.valueFromFieldName = function(fieldName:string):BoxId|any {\r\n            let t:Tuid = this._$tuid;\r\n            return t.valueFromFieldName(fieldName, this.obj);\r\n        }\r\n        prototype.getObj = function():any {\r\n            if (this._$tuid !== undefined) {\r\n                return this._$tuid.getCacheValue(this.id);\r\n            }\r\n        }\r\n        prototype.toJSON = function() {return this.id}\r\n    }\r\n    boxId(id:number):BoxId {\r\n        this.useId(id);\r\n        let ret:BoxId = new this.BoxId();\r\n        ret.id = id;\r\n        return ret;\r\n    }\r\n    getTuidContent() {\r\n        return this.entities.cUq.getTuidContent(this);\r\n    }\r\n    getIdFromObj(item:any):number {\r\n        return item[this.idName];\r\n    }\r\n\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        let {id, unique} = schema;\r\n        this.idName = id;\r\n        this.unique = unique;\r\n        this.schemaFrom = this.schema.from;\r\n    }\r\n\r\n    private moveToHead(id:number) {\r\n        let index = this.queue.findIndex(v => v === id);\r\n        this.queue.splice(index, 1);\r\n        this.queue.push(id);\r\n    }\r\n\r\n    valueFromId(id:number|BoxId):any {\r\n        let _id:number;\r\n        let tId = typeof id;\r\n        switch (typeof id) {\r\n            case 'object': _id = (id as BoxId).id; break;\r\n            case 'number': _id = id as number; break;\r\n            default: return;\r\n        }\r\n        return this.getCacheValue(_id);\r\n    }\r\n    getCacheValue(id:number) {\r\n        let v = this.cache.get(id);\r\n        if (this.owner !== undefined && typeof v === 'object') {\r\n            v.$owner = this.owner.boxId(v.owner); // this.owner.valueFromId(v.owner);\r\n        }\r\n        return v;\r\n    }\r\n    valueFromFieldName(fieldName:string, obj:any):BoxId|any {\r\n        if (obj === undefined) return;\r\n        let f = this.fields.find(v => v.name === fieldName);\r\n        if (f === undefined) return;\r\n        let v = obj[fieldName];\r\n        let {_tuid} = f;\r\n        if (_tuid === undefined) return v;\r\n        return _tuid.valueFromId(v);\r\n    }\r\n    resetCache(id:number) {\r\n        this.cache.delete(id);\r\n        let index = this.queue.findIndex(v => v === id);\r\n        this.queue.splice(index, 1);\r\n        this.useId(id);\r\n    }\r\n    useId(id:number, defer?:boolean) {\r\n        if (id === undefined || id === 0) return;\r\n        if (isNumber(id) === false) return;\r\n        if (this.cache.has(id) === true) {\r\n            this.moveToHead(id);\r\n            return;\r\n        }\r\n        this.entities.cacheTuids(defer===true?70:20);\r\n        //let idVal = this.createID(id);\r\n        this.cache.set(id, id);\r\n        if (this.waitingIds.findIndex(v => v === id) >= 0) {\r\n            this.moveToHead(id);\r\n            return;\r\n        }\r\n\r\n        if (this.queue.length >= maxCacheSize) {\r\n            // 缓冲已满，先去掉最不常用的\r\n            let r = this.queue.shift();\r\n            if (r === id) {\r\n                // 如果移除的，正好是现在用的，则插入\r\n                this.queue.push(r);\r\n                return;\r\n            }\r\n\r\n            //let rKey = String(r);\r\n            if (this.cache.has(r) === true) {\r\n                // 如果移除r已经缓存\r\n                this.cache.delete(r);\r\n            }\r\n            else {\r\n                // 如果移除r还没有缓存\r\n                let index = this.waitingIds.findIndex(v => v === r);\r\n                this.waitingIds.splice(index, 1);\r\n            }\r\n        }\r\n        this.waitingIds.push(id);\r\n        this.queue.push(id);\r\n        return;\r\n    }\r\n    async proxied(name:string, id:number):Promise<any> {\r\n        let proxyTuid = this.entities.getTuid(name, undefined);\r\n        proxyTuid.useId(id);\r\n        let proxied = await this.tvApi.proxied(this.name, name, id);\r\n        this.cacheValue(proxied);\r\n        return proxied;\r\n    }\r\n    cacheValue(val:any):boolean {\r\n        if (val === undefined) return false;\r\n        let id = this.getIdFromObj(val);\r\n        if (id === undefined) return false;\r\n        let index = this.waitingIds.findIndex(v => v === id);\r\n        if (index>=0) this.waitingIds.splice(index, 1);\r\n        //let cacheVal = this.createID(id, val);\r\n        this.cache.set(id, val);\r\n        // 下面的代码应该是cache proxy id, 需要的时候再写吧\r\n        /*\r\n        let {tuids, fields} = this.schema;\r\n        if (tuids !== undefined && fields !== undefined) {\r\n            for (let f of fields) {\r\n                let {name, tuid} = f;\r\n                if (tuid === undefined) continue;\r\n                let t = this.entities.tuid(tuid);\r\n                if (t === undefined) continue;\r\n                t.useId(val[name]);\r\n            }\r\n        }*/\r\n        return true;\r\n    }\r\n    protected afterCacheId(tuidValue:any) {\r\n        for (let f of this.fields) {\r\n            let {_tuid} = f;\r\n            if (_tuid === undefined) continue;\r\n            _tuid.useId(tuidValue[f.name]);\r\n        }\r\n    }\r\n    async cacheIds():Promise<void> {\r\n        if (this.waitingIds.length === 0) return;\r\n        let name:string, arr:string;\r\n        if (this.owner === undefined) {\r\n            name = this.name;\r\n        }\r\n        else {\r\n            name = this.owner.name;\r\n            arr = this.name;\r\n        }\r\n        let api = await this.getApiFrom();\r\n        let tuids = await api.tuidIds(name, arr, this.waitingIds);\r\n        for (let tuidValue of tuids) {\r\n            if (this.cacheValue(tuidValue) === false) continue;\r\n            this.cacheTuidFieldValues(tuidValue);\r\n            this.afterCacheId(tuidValue);\r\n        }\r\n        await this.cacheDivIds();\r\n    }\r\n    protected async cacheDivIds():Promise<void> {\r\n    }\r\n    async load(id:number):Promise<any> {\r\n        if (id === undefined || id === 0) return;\r\n        let api = await this.getApiFrom();\r\n        let values = await api.tuidGet(this.name, id);\r\n        if (values === undefined) return;\r\n        values._$tuid = this;\r\n        this.cacheValue(values);\r\n        this.cacheTuidFieldValues(values);\r\n        return values;\r\n    }\r\n    protected getDiv(divName:string):TuidDiv {return;}\r\n    private cacheTuidFieldValues(values:any) {\r\n        let {fields, arrs} = this.schema;\r\n        this.cacheFieldsInValue(values, fields);\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs as ArrFields[]) {\r\n                let {name, fields} = arr;\r\n                let arrValues = values[name];\r\n                if (arrValues === undefined) continue;\r\n                let tuidDiv = this.getDiv(name);\r\n                for (let row of arrValues) {\r\n                    row._$tuid = tuidDiv;\r\n                    row.$owner = this.boxId(row.owner);\r\n                    tuidDiv.cacheValue(row);\r\n                    this.cacheFieldsInValue(row, fields);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    private cacheFieldsInValue(values:any, fields:Field[]) {\r\n        for (let f of fields as Field[]) {\r\n            let {name, _tuid} = f;\r\n            if (_tuid === undefined) continue;\r\n            let id = values[name];\r\n            //_tuid.useId(id);\r\n            values[name] = _tuid.boxId(id);\r\n        }\r\n    }\r\n    async save(id:number, props:any) {\r\n        let params = _.clone(props);\r\n        params[\"$id\"] = id;\r\n        let ret = await this.tvApi.tuidSave(this.name, params);\r\n        let {id:retId, inId} = ret;\r\n        if (retId === undefined) {\r\n            params.id = id;\r\n            this.cacheValue(params);\r\n        }\r\n        else if (retId > 0) {\r\n            params.id = retId;\r\n            this.cacheValue(params);\r\n        }\r\n        return ret;\r\n    }\r\n    async search(key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        let ret:any[] = await this.searchArr(undefined, key, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    async searchArr(owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        let {fields} = this.schema;\r\n        let name:string, arr:string;\r\n        if (this.owner !== undefined) {\r\n            name = this.owner.name;\r\n            arr = this.name;\r\n        }\r\n        else {\r\n            name = this.name;\r\n            arr = undefined;\r\n        }\r\n        let api = await this.getApiFrom();\r\n        let ret = await api.tuidSearch(name, arr, owner, key, pageStart, pageSize);\r\n        for (let row of ret) {\r\n            this.cacheFieldsInValue(row, fields);\r\n            if (this.owner !== undefined) row.$owner = this.owner.boxId(row.owner);\r\n        }\r\n        return ret;\r\n    }\r\n    async loadArr(arr:string, owner:number, id:number):Promise<any> {\r\n        if (id === undefined || id === 0) return;\r\n        let api = await this.getApiFrom();\r\n        return await api.tuidArrGet(this.name, arr, owner, id);\r\n    }\r\n    /*\r\n    async loadArrAll(owner:number):Promise<any[]> {\r\n        return this.all = await this.tvApi.tuidGetAll(this.name);\r\n    }*/\r\n    async saveArr(arr:string, owner:number, id:number, props:any) {\r\n        let params = _.clone(props);\r\n        params[\"$id\"] = id;\r\n        return await this.tvApi.tuidArrSave(this.name, arr, owner, params);\r\n    }\r\n    async posArr(arr:string, owner:number, id:number, order:number) {\r\n        return await this.tvApi.tuidArrPos(this.name, arr, owner, id, order);\r\n    }\r\n    \r\n    // cache放到Tuid里面之后，这个函数不再需要公开调用了\r\n    //private async ids(idArr:number[]) {\r\n    //    return await this.tvApi.tuidIds(this.name, idArr);\r\n    //}\r\n    async showInfo(id:number) {\r\n        await this.entities.cUq.showTuid(this, id);\r\n    }\r\n}\r\n\r\nexport class TuidMain extends Tuid {\r\n    get Main() {return this}\r\n    get uqApi() {return this.entities.uqApi};\r\n\r\n    divs: {[name:string]: TuidDiv};\r\n    proxies: {[name:string]: TuidMain};\r\n\r\n    public setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        let {arrs} = schema;\r\n        if (arrs !== undefined) {\r\n            this.divs = {};\r\n            for (let arr of arrs) {\r\n                let {name} = arr;\r\n                let tuidDiv = new TuidDiv(this.entities, name, this.typeId);\r\n                tuidDiv.owner = this;\r\n                this.divs[name] = tuidDiv;\r\n                tuidDiv.setSchema(arr);\r\n            }\r\n        }\r\n    }\r\n    protected getDiv(divName:string):TuidDiv {return this.divs[divName];}\r\n    /* 努力回避async里面的super调用，edge不兼容\r\n    async cacheIds():Promise<void> {\r\n        await super.cacheIds();\r\n        if (this.divs === undefined) return;\r\n        for (let i in this.divs) {\r\n            await this.divs[i].cacheIds();\r\n        }\r\n    }\r\n    */\r\n    protected async cacheDivIds():Promise<void> {\r\n        if (this.divs === undefined) return;\r\n        for (let i in this.divs) {\r\n            await this.divs[i].cacheIds();\r\n        }\r\n    }\r\n\r\n    async cUqFrom(): Promise<CUq> {\r\n        if (this.schemaFrom === undefined) return this.entities.cUq;\r\n        let {owner, uq: uq} = this.schemaFrom;\r\n        let cUq = await this.entities.cUq\r\n        let cApp = cUq.cApp;\r\n        if (cApp === undefined) return cUq;\r\n        let cUqFrm = await cApp.getImportUq(owner, uq);\r\n        if (cUqFrm === undefined) {\r\n            console.error(`${owner}/${uq} 不存在`);\r\n            debugger;\r\n            return cUq;\r\n        }\r\n        let retErrors = await cUqFrm.loadSchema();\r\n        if (retErrors !== undefined) {\r\n            console.error('cUq.loadSchema: ' + retErrors);\r\n            debugger;\r\n            return cUq;\r\n        }\r\n        return cUqFrm;\r\n    }\r\n\r\n    async getApiFrom() {\r\n        let from = await this.from();\r\n        if (from !== undefined) {\r\n            return from.entities.uqApi;\r\n        }\r\n        return this.entities.uqApi;\r\n    }\r\n\r\n    async from(): Promise<TuidMain> {\r\n        let cUq = await this.cUqFrom();\r\n        return cUq.tuid(this.name);\r\n    }\r\n\r\n    async cFrom(): Promise<CTuidMain> {\r\n        let cUq = await this.cUqFrom();\r\n        return cUq.cTuidMainFromName(this.name);\r\n    }\r\n\r\n    async cEditFrom(): Promise<CTuidEdit> {\r\n        let cUq = await this.cUqFrom();\r\n        return cUq.cTuidEditFromName(this.name);\r\n    }\r\n\r\n    async cInfoFrom(): Promise<CTuidInfo> {\r\n        let cUq = await this.cUqFrom();\r\n        return cUq.cTuidInfoFromName(this.name);\r\n    }\r\n\r\n    async cSelectFrom(): Promise<CTuidSelect> {\r\n        let cUq = await this.cUqFrom();\r\n        if (cUq === undefined) return;\r\n        return cUq.cTuidSelectFromName(this.name);\r\n    }\r\n\r\n    protected afterCacheId(tuidValue:any) {\r\n        super.afterCacheId(tuidValue);\r\n        if (this.proxies === undefined) return;\r\n        let {type, $proxy} = tuidValue;\r\n        let pTuid = this.proxies[type];\r\n        pTuid.useId($proxy);\r\n    }\r\n}\r\n\r\nexport class TuidDiv extends Tuid {\r\n    get Main() {return this.owner}\r\n\r\n    async getApiFrom() {\r\n        return await this.owner.getApiFrom();\r\n    }\r\n}\r\n","import {Entity} from './entity';\r\n\r\nexport class Action extends Entity {\r\n    get typeName(): string { return 'action';}\r\n    async submit(data:object) {\r\n        await this.loadSchema();\r\n        let text = this.pack(data);\r\n        return await this.tvApi.action(this.name, {data:text});\r\n    }\r\n}\r\n\r\n","import {observable, IObservableArray} from 'mobx';\r\nimport {Entity} from './entity';\r\nimport { PageItems } from 'tonva-tools';\r\n\r\nexport interface SheetState {\r\n    name: string;\r\n    actions: SheetAction[];\r\n}\r\n\r\nexport interface SheetAction {\r\n    name: string;\r\n}\r\n\r\nexport interface StateCount {\r\n    state: string;\r\n    count: number;\r\n}\r\n\r\nexport class Sheet extends Entity {\r\n    get typeName(): string { return 'sheet';}\r\n    states: SheetState[];\r\n\r\n    /*\r\n    setStates(states: SheetState[]) {\r\n        for (let state of states) {\r\n            this.setStateAccess(this.states.find(s=>s.name==state.name), state);\r\n        }\r\n    }*/\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        this.states = schema.states;\r\n    }\r\n    build(obj:any) {\r\n        this.states = [];\r\n        for (let op of obj.ops) {\r\n            this.states.push({name: op, actions:undefined});\r\n        }\r\n        /*\r\n        for (let p in obj) {\r\n            switch(p) {\r\n                case '#':\r\n                case '$': continue;\r\n                default: this.states.push(this.createSheetState(p, obj[p])); break;\r\n            }\r\n        }*/\r\n    }\r\n    private createSheetState(name:string, obj:object):SheetState {\r\n        let ret:SheetState = {name:name, actions:[]};\r\n        let actions = ret.actions;\r\n        for (let p in obj) {\r\n            let action:SheetAction = {name: p};\r\n            actions.push(action);\r\n        }\r\n        return ret;\r\n    }\r\n    /*\r\n    private setStateAccess(s:SheetState, s1:SheetState) {\r\n        if (s === undefined) return;\r\n        for (let action of s1.actions) {\r\n            let acn = action.name;\r\n            let ac = s.actions.find(a=>a.name === acn);\r\n            if (ac === undefined) continue;\r\n            s.actions.push(action);\r\n        }\r\n    }*/\r\n    async save(discription:string, data:any):Promise<any> {\r\n        await this.loadSchema();\r\n        let {appId} = this.entities;\r\n        let text = this.pack(data);\r\n\r\n        let ret = await this.tvApi.sheetSave(this.name, {app: appId, discription: discription, data:text});\r\n        return ret;\r\n        /*\r\n        let {id, state} = ret;\r\n        if (id > 0) this.changeStateCount(state, 1);\r\n        return ret;\r\n        */\r\n    }\r\n    async action(id:number, flow:number, state:string, action:string) {\r\n        await this.loadSchema();\r\n        return await this.tvApi.sheetAction(this.name, {id:id, flow:flow, state:state, action:action});\r\n    }\r\n    private async unpack(data:any):Promise<any> {\r\n        //if (this.schema === undefined) await this.loadSchema();\r\n        let ret = data[0];\r\n        let brief = ret[0];\r\n        let sheetData = this.unpackSheet(brief.data);\r\n        let flows = data[1];\r\n        return {\r\n            brief: brief,\r\n            data: sheetData,\r\n            flows: flows,\r\n        }\r\n    }\r\n    async getSheet(id:number):Promise<any> {\r\n        await this.loadSchema();\r\n        let ret = await this.tvApi.getSheet(this.name, id);\r\n        if (ret[0].length === 0) return await this.getArchive(id);\r\n        return await this.unpack(ret);\r\n    }\r\n    async getArchive(id:number):Promise<any> {\r\n        await this.loadSchema();\r\n        let ret = await this.tvApi.sheetArchive(this.name, id)\r\n        return await this.unpack(ret);\r\n    }\r\n\r\n    async getArchives(pageStart:number, pageSize:number) {\r\n        await this.loadSchema();\r\n        let ret = await this.tvApi.sheetArchives(this.name, {pageStart:pageStart, pageSize:pageSize});\r\n        return ret;\r\n    }\r\n\r\n    async getStateSheets(state:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        await this.loadSchema();\r\n        let ret = await this.tvApi.stateSheets(this.name, {state:state, pageStart:pageStart, pageSize:pageSize});\r\n        return ret;\r\n    }\r\n    createPageStateItems<T>(): PageStateItems<T> {return new PageStateItems<T>(this);}\r\n\r\n    async stateSheetCount():Promise<StateCount[]> {\r\n        await this.loadSchema();\r\n        let ret:StateCount[] = await this.tvApi.stateSheetCount(this.name);\r\n        return this.states.map(s => {\r\n            let n = s.name, count = 0;\r\n            let r = ret.find(v => v.state === n);\r\n            if (r !== undefined) count = r.count;\r\n            return {state: n, count: count} \r\n        });\r\n    }\r\n}\r\n\r\nexport class PageStateItems<T> extends PageItems<T> {\r\n    private sheet: Sheet;\r\n    constructor(sheet: Sheet) {\r\n        super(true);\r\n        this.sheet = sheet;\r\n        this.pageSize = 10;\r\n    }\r\n    protected async load(param:any, pageStart:any, pageSize:number):Promise<any[]> {\r\n        let ret = await this.sheet.getStateSheets(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:any) {\r\n        this.pageStart = item === undefined? 0 : item.id;\r\n    }\r\n}\r\n","import {observable, IObservableArray} from 'mobx';\r\nimport {Field, ArrFields} from './entities';\r\nimport {Entity} from './entity';\r\n\r\nexport type QueryPageApi = (name:string, pageStart:any, pageSize:number, params:any) => Promise<string>;\r\nexport class Query extends Entity {\r\n    get typeName(): string { return 'query';}\r\n    private pageStart: any;\r\n    private pageSize:number;\r\n    private params:any;\r\n    private more: boolean;\r\n    private startField: Field;\r\n    @observable list:IObservableArray; // = observable.array([], {deep: false});\r\n    returns: ArrFields[];\r\n    isPaged: boolean;\r\n\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        let {returns} = schema;\r\n        this.returns = returns;\r\n        this.isPaged = (returns as any[]).find(v => v.name === '$page') !== undefined;\r\n    }\r\n\r\n    resetPage(size:number, params:any) {\r\n        this.pageStart = undefined;\r\n        this.pageSize = size;\r\n        this.params = params;\r\n        this.more = false;\r\n        this.list = undefined;\r\n    }\r\n    get hasMore() {return this.more;}\r\n    async loadPage():Promise<void> {\r\n        if (this.pageSize === undefined) {\r\n            throw 'call resetPage(size:number, params:any) first';\r\n        }\r\n        let pageStart:any;\r\n        if (this.pageStart !== undefined) {\r\n            switch (this.startField.type) {\r\n                default: pageStart = this.pageStart; break;\r\n                case 'date':\r\n                case 'time':\r\n                case 'datetime': pageStart = (this.pageStart as Date).getTime(); break;\r\n            }\r\n        }\r\n        let page = await this.page(this.params, pageStart, this.pageSize+1);\r\n        /*\r\n        await this.loadSchema();\r\n        let res = await this.tvApi.page(this.name, pageStart, this.pageSize+1, this.params);\r\n        let data = await this.unpackReturns(res);\r\n        let page = data['$page'] as any[];\r\n        */\r\n        this.list = observable.array([], {deep: false});\r\n        if (page !== undefined) {\r\n            if (page.length > this.pageSize) {\r\n                this.more = true;\r\n                page.pop();\r\n                let ret = this.returns.find(r => r.name === '$page');\r\n                this.startField = ret.fields[0];\r\n                this.pageStart = page[page.length-1][this.startField.name];\r\n            }\r\n            else {\r\n                this.more = false;\r\n            }\r\n            this.list.push(...page);\r\n        }\r\n        //this.loaded = true;\r\n    }\r\n\r\n    async page(params:any, pageStart:any, pageSize:number):Promise<any[]> {\r\n        await this.loadSchema();\r\n        let res = await this.tvApi.page(this.name, pageStart, pageSize+1, this.buildParams(params));\r\n        let data = await this.unpackReturns(res);\r\n        return data.$page;// as any[];\r\n    }\r\n    async query(params:any):Promise<any> {\r\n        await this.loadSchema();\r\n        let res = await this.tvApi.query(this.name, this.buildParams(params));\r\n        let data = await this.unpackReturns(res);\r\n        return data;\r\n    }\r\n    async table(params:any): Promise<any[]> {\r\n        let ret = await this.query(params);\r\n        for (let i in ret) {\r\n            return ret[i];\r\n        }\r\n    }\r\n    async obj(params:any):Promise<any> {\r\n        let ret = await this.table(params);\r\n        if (ret.length > 0) return ret[0];\r\n    }\r\n    async scalar(params:any):Promise<any> {\r\n        let ret = await this.obj(params);\r\n        for (let i in ret) return ret[i];\r\n    }\r\n}\r\n","import {Query} from './query';\r\n\r\nexport class Book extends Query {\r\n    get typeName(): string { return 'book';}\r\n    protected queryApiName = 'book';\r\n}\r\n","import {Query} from './query';\r\n\r\nexport class History extends Query {\r\n    get typeName(): string { return 'history';}\r\n    protected queryApiName = 'history';\r\n}\r\n","import { Entity } from './entity';\r\nimport { Action } from './action';\r\nimport { Query } from './query';\r\nimport { Field } from './entities';\r\n\r\ninterface MapActions {\r\n    add: Action;\r\n    del: Action;\r\n}\r\ninterface MapQueries {\r\n    all: Query;\r\n    page: Query;\r\n    query: Query;\r\n}\r\n\r\nexport class Map extends Entity {\r\n    get typeName(): string { return 'map';}\r\n    keys: Field[];\r\n    actions: MapActions = {} as any;\r\n    queries: MapQueries = {} as any;\r\n    schemaFrom: {owner:string; uq:string};\r\n\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        this.schemaFrom = this.schema.from;\r\n        let {actions, queries, keys} = schema;\r\n        this.entities.buildFieldTuid(this.keys = keys);\r\n        //let t = this.schemaStringify();\r\n        for (let i in actions) {\r\n            let schema = actions[i];\r\n            let {name} = schema;\r\n            let action = this.entities.newAction(name, undefined);\r\n            action.setSchema(schema);\r\n            this.actions[i] = action;\r\n        }\r\n        for (let i in queries) {\r\n            let schema = queries[i];\r\n            let {name} = schema;\r\n            let query = this.entities.newQuery(name, undefined);\r\n            query.setSchema(schema);\r\n            this.queries[i] = query;\r\n        }\r\n    }\r\n\r\n    async add(param:any) {\r\n        await this.loadSchema();\r\n        return await this.actions.add.submit(param);\r\n    }\r\n\r\n    async del(param:any) {\r\n        await this.loadSchema();\r\n        return await this.actions.del.submit(param);\r\n    }\r\n\r\n    async all() {\r\n        await this.loadSchema();\r\n        return await this.queries.all.query({});\r\n    }\r\n\r\n    async page(param:any, pageStart:any, pageSize: number) {\r\n        await this.loadSchema();\r\n        return await this.queries.page.page(param, pageStart, pageSize);\r\n    }\r\n\r\n    async query(param:any) {\r\n        await this.loadSchema();\r\n        return await this.queries.query.query(param);\r\n    }\r\n    async table(params:any): Promise<any[]> {\r\n        let ret = await this.query(params);\r\n        for (let i in ret) {\r\n            return ret[i];\r\n        }\r\n    }\r\n    async obj(params:any):Promise<any> {\r\n        let ret = await this.table(params);\r\n        if (ret.length > 0) return ret[0];\r\n    }\r\n    async scalar(params:any):Promise<any> {\r\n        let ret = await this.obj(params);\r\n        for (let i in ret) return ret[i];\r\n    }\r\n}\r\n","import {Query} from './query';\r\n\r\nexport class Pending extends Query {\r\n    get typeName(): string { return 'pending';}\r\n    protected queryApiName = 'pending';\r\n}\r\n","import {TuidMain, Tuid} from './tuid';\r\nimport {Action} from './action';\r\nimport {Sheet, SheetState, SheetAction} from './sheet';\r\nimport {Query} from './query';\r\nimport {Book} from './book';\r\nimport {History} from './history';\r\nimport { UqApi } from 'tonva-tools';\r\nimport { Map } from './map';\r\nimport { Pending } from './pending';\r\nimport { CUq } from '../controllers';\r\n\r\nexport type FieldType = 'tinyint' | 'smallint' | 'int' | 'bigint' | 'dec' | 'char' | 'text' \r\n    | 'datetime' | 'date' | 'time';\r\n\r\nexport function fieldDefaultValue(type:FieldType) {\r\n    switch (type) {\r\n        case 'tinyint':\r\n        case 'smallint':\r\n        case 'int':\r\n        case 'bigint':\r\n        case 'dec':\r\n            return 0;\r\n        case 'char':\r\n        case 'text': \r\n            return '';\r\n        case 'datetime':\r\n        case 'date':\r\n            return '2000-1-1';\r\n        case 'time':\r\n            return '0:00';\r\n    }\r\n}\r\n\r\nexport interface Field {\r\n    name: string;\r\n    type: FieldType;\r\n    tuid?: string;\r\n    arr?: string;\r\n    url?: string;\r\n    null?: boolean;\r\n    size?: number;\r\n    owner?: string;\r\n    _ownerField: Field;\r\n    _tuid: Tuid;\r\n}\r\nexport interface ArrFields {\r\n    name: string;\r\n    fields: Field[];\r\n    id?: string;\r\n    order?: string;\r\n}\r\nexport interface FieldMap {\r\n    [name:string]: Field;\r\n}\r\n\r\nexport class Entities {\r\n    private tuids: {[name:string]: TuidMain} = {};\r\n    private actions: {[name:string]: Action} = {};\r\n    private sheets: {[name:string]: Sheet} = {};\r\n    private queries: {[name:string]: Query} = {};\r\n    private books: {[name:string]: Book} = {};\r\n    private maps: {[name:string]: Map} = {};\r\n    private histories: {[name:string]: History} = {};\r\n    private pendings: {[name:string]: Pending} = {};\r\n    private cacheTimer: any;\r\n    cUq: CUq;\r\n    uqApi: UqApi;\r\n    appId: number;\r\n    uqId: number;\r\n\r\n    constructor(cUq: CUq, uqApi:UqApi, appId: number) {\r\n        this.cUq = cUq;\r\n        this.uqApi = uqApi;\r\n        this.appId = appId;\r\n    }\r\n\r\n    tuid(name:string):TuidMain {return this.tuids[name.toLowerCase()]}\r\n    action(name:string):Action {return this.actions[name.toLowerCase()]}\r\n    sheet(name:string):Sheet {return this.sheets[name.toLowerCase()]}\r\n    query(name:string):Query {return this.queries[name.toLowerCase()]}\r\n    book(name:string):Book {return this.books[name.toLowerCase()]}\r\n    map(name:string):Map {return this.maps[name.toLowerCase()]}\r\n    history(name:string):History {return this.histories[name.toLowerCase()]}\r\n    pending(name:string):Pending {return this.pendings[name.toLowerCase()]}\r\n\r\n    sheetFromTypeId(typeId:number):Sheet {\r\n        for (let i in this.sheets) {\r\n            let sheet = this.sheets[i];\r\n            if (sheet.typeId === typeId) return sheet;\r\n        }\r\n    }\r\n\r\n    tuidArr: TuidMain[] = [];\r\n    actionArr: Action[] = [];\r\n    sheetArr: Sheet[] = [];\r\n    queryArr: Query[] = [];\r\n    bookArr: Book[] = [];\r\n    mapArr: Map[] = [];\r\n    historyArr: History[] = [];\r\n    pendingArr: Pending[] = [];\r\n\r\n    async loadAccess() {\r\n        let accesses = await this.uqApi.loadAccess();\r\n        if (accesses === undefined) return;\r\n        this.buildEntities(accesses);\r\n    }\r\n\r\n    async loadEntities() {\r\n        let accesses = await this.uqApi.loadEntities();\r\n        this.buildEntities(accesses);\r\n    }\r\n\r\n    private buildEntities(entities:any) {\r\n        if (entities === undefined) {\r\n            debugger;\r\n        }\r\n        let {access, tuids} = entities;\r\n        this.buildTuids(tuids);\r\n        this.buildAccess(access);\r\n    }\r\n\r\n    getTuid(name:string, div?:string, tuidUrl?:string): Tuid {\r\n        let tuid = this.tuids[name];\r\n        if (tuid === undefined) return;\r\n        if (div === undefined) return tuid;\r\n        return tuid.divs[div];\r\n    }\r\n\r\n    cacheTuids(defer:number) {\r\n        this.clearCacheTimer();\r\n        this.cacheTimer = setTimeout(this.loadIds, defer);\r\n    }\r\n    private clearCacheTimer() {\r\n        if (this.cacheTimer === undefined) return;\r\n        clearTimeout(this.cacheTimer);\r\n        this.cacheTimer = undefined;\r\n    }\r\n    private loadIds = () => {\r\n        this.clearCacheTimer();\r\n        for (let i in this.tuids) {\r\n            let tuid = this.tuids[i];\r\n            tuid.cacheIds();\r\n        }\r\n    }\r\n\r\n    private buildTuids(tuids:any) {\r\n        let proxyColl = {} as any;\r\n        for (let i in tuids) {\r\n            let schema = tuids[i];\r\n            let {name, typeId, proxies} = schema;\r\n            let tuid = this.newTuid(i, typeId);\r\n            tuid.sys = true;\r\n            //tuid.setSchema(schema);\r\n            if (proxies !== undefined) proxyColl[i] = proxies;\r\n        }\r\n        for (let i in tuids) {\r\n            let schema = tuids[i];\r\n            let {name} = schema;\r\n            let tuid = this.getTuid(i);\r\n            //tuid.sys = true;\r\n            tuid.setSchema(schema);\r\n        }\r\n        for (let i in proxyColl) {\r\n            let proxies:string[] = proxyColl[i];\r\n            let tuid = this.tuids[i];\r\n            tuid.proxies = {};\r\n            for (let p of proxies) {\r\n                tuid.proxies[p] = this.tuids[p];\r\n            }\r\n        }\r\n    }\r\n\r\n    private buildAccess(access:any) {\r\n        for (let a in access) {\r\n            let v = access[a];\r\n            switch (typeof v) {\r\n                case 'string': this.fromType(a, v); break;\r\n                case 'object': this.fromObj(a, v); break;\r\n            }\r\n        }\r\n        /*\r\n        for (let tuid of this.tuidArr) {\r\n            tuid.setProxies(this);\r\n        }*/\r\n    }\r\n\r\n    newAction(name:string, id:number):Action {\r\n        let action = this.actions[name];\r\n        if (action !== undefined) return action;\r\n        action = this.actions[name] = new Action(this, name, id)\r\n        this.actionArr.push(action);\r\n        return action;\r\n    }\r\n    newTuid(name:string, id:number):TuidMain {\r\n        let tuid = this.tuids[name];\r\n        if (tuid !== undefined) return tuid;\r\n        tuid = this.tuids[name] = new TuidMain(this, name, id);\r\n        this.tuidArr.push(tuid);\r\n        return tuid;\r\n    }\r\n    newQuery(name:string, id:number):Query {\r\n        let query = this.queries[name];\r\n        if (query !== undefined) return query;\r\n        query = this.queries[name] = new Query(this, name, id)\r\n        this.queryArr.push(query);\r\n        return query;\r\n    }\r\n    newBook(name:string, id:number):Book {\r\n        let book = this.books[name];\r\n        if (book !== undefined) return book;\r\n        book = this.books[name] = new Book(this, name, id);\r\n        this.bookArr.push(book);\r\n        return book;\r\n    }\r\n    newMap(name:string, id:number):Map {\r\n        let map = this.maps[name];\r\n        if (map !== undefined) return map;\r\n        map = this.maps[name] = new Map(this, name, id)\r\n        this.mapArr.push(map);\r\n        return map;\r\n    }\r\n    newHistory(name:string, id:number):History {\r\n        let history = this.histories[name];\r\n        if (history !== undefined) return;\r\n        history = this.histories[name] = new History(this, name, id)\r\n        this.historyArr.push(history);\r\n        return history;\r\n    }\r\n    newPending(name:string, id:number):Pending {\r\n        let pending = this.pendings[name];\r\n        if (pending !== undefined) return;\r\n        pending = this.pendings[name] = new Pending(this, name, id)\r\n        this.pendingArr.push(pending);\r\n        return pending;\r\n    }\r\n    newSheet(name:string, id:number):Sheet {\r\n        let sheet = this.sheets[name];\r\n        if (sheet !== undefined) return sheet;\r\n        sheet = this.sheets[name] = new Sheet(this, name, id);\r\n        this.sheetArr.push(sheet);\r\n        return sheet;\r\n    }\r\n    private fromType(name:string, type:string) {\r\n        let parts = type.split('|');\r\n        type = parts[0];\r\n        let id = Number(parts[1]);\r\n        switch (type) {\r\n            case 'uq': this.uqId = id; break;\r\n            case 'tuid': \r\n                let tuid = this.newTuid(name, id);\r\n                tuid.sys = false;\r\n                break;\r\n            case 'action': this.newAction(name, id); break;\r\n            case 'query': this.newQuery(name, id); break;\r\n            case 'book': this.newBook(name, id); break;\r\n            case 'map': this.newMap(name, id); break;\r\n            case 'history': this.newHistory(name, id); break;\r\n            case 'sheet':this.newSheet(name, id); break;\r\n            case 'pending': this.newPending(name, id); break;\r\n        }\r\n    }\r\n    private fromObj(name:string, obj:any) {\r\n        switch (obj['$']) {\r\n            case 'sheet': this.buildSheet(name, obj); break;\r\n        }\r\n    }\r\n    private buildSheet(name:string, obj:any) {\r\n        let sheet = this.sheets[name];\r\n        if (sheet === undefined) sheet = this.newSheet(name, obj.id);\r\n        sheet.build(obj);\r\n        /*\r\n        let states = sheet.states;\r\n        for (let p in obj) {\r\n            switch(p) {\r\n                case '#':\r\n                case '$': continue;\r\n                default: states.push(this.createSheetState(p, obj[p])); break;\r\n            }\r\n        }*/\r\n    }\r\n    /*\r\n    private createSheetState(name:string, obj:object):SheetState {\r\n        let ret:SheetState = {name:name, actions:[]};\r\n        let actions = ret.actions;\r\n        for (let p in obj) {\r\n            let action:SheetAction = {name: p};\r\n            actions.push(action);\r\n        }\r\n        return ret;\r\n    }*/\r\n    buildFieldTuid(fields:Field[], mainFields?:Field[]) {\r\n        if (fields === undefined) return;\r\n        for (let f of fields) {\r\n            let {tuid, arr, url} = f;\r\n            if (tuid === undefined) continue;\r\n            f._tuid = this.getTuid(tuid, arr, url);\r\n        }\r\n        for (let f of fields) {\r\n            let {owner} = f;\r\n            if (owner === undefined) continue;\r\n            let ownerField = fields.find(v => v.name === owner);\r\n            if (ownerField === undefined) {\r\n                if (mainFields !== undefined) {\r\n                    ownerField = mainFields.find(v => v.name === owner);\r\n                }\r\n                if (ownerField === undefined) {\r\n                    throw `owner field ${owner} is undefined`;\r\n                }\r\n            }\r\n            f._ownerField = ownerField;\r\n            let {arr, url} = f;\r\n            f._tuid = this.getTuid(ownerField._tuid.name, arr, url);\r\n            if (f._tuid === undefined) throw 'owner field ${owner} is not tuid';\r\n        }\r\n    }\r\n    buildArrFieldsTuid(arrFields:ArrFields[], mainFields:Field[]) {\r\n        if (arrFields === undefined) return;\r\n        for (let af of arrFields) {\r\n            let {fields} = af;\r\n            if (fields === undefined) continue;\r\n            this.buildFieldTuid(fields, mainFields);\r\n        }\r\n    }\r\n}\r\n","export * from './entities';\r\nexport * from './entity';\r\nexport * from './action';\r\nexport * from './query';\r\nexport * from './sheet';\r\nexport * from './tuid';\r\nexport * from './book';\r\nexport * from './map';\r\nexport * from './history';\r\nexport * from './pending';\r\n","import * as React from 'react';\r\nimport {FormView, FormRow, FieldRow, GroupRow, LabelFormRow} from '../formView';\r\nimport {Control, ControlBase, createControl, CreateControl} from '../control';\r\n\r\nexport type CreateRow = (form:FormView, row: FormRow)=>RowContainer;\r\n\r\nexport abstract class RowContainer {\r\n    protected form:FormView;\r\n    protected row: FormRow;\r\n    protected control: ControlBase;\r\n    constructor(form:FormView, row: FormRow) {\r\n        this.form = form;\r\n        this.row = row;\r\n        if ((row as JSX.Element).type === undefined) {\r\n            let cc:CreateControl = (row as LabelFormRow).createControl;\r\n            if (cc === undefined) cc = form.createControl;\r\n            if (cc === undefined) cc = createControl;\r\n            this.control = cc(form, row);\r\n        }\r\n    }\r\n    abstract render(key:string):JSX.Element;\r\n    \r\n    isOk():boolean {\r\n        if (this.control === undefined) return true;\r\n        return this.control.isOk();\r\n    }\r\n\r\n    contains(fieldName:string):boolean {\r\n        let field = (this.row as FieldRow).field;\r\n        if (field !== undefined) return fieldName === field.name;\r\n        let group = (this.row as GroupRow).group;\r\n        if (group !== undefined) return group.find(g => g.field.name === fieldName)!==undefined;\r\n        return false;\r\n    }\r\n    get hasError():boolean {return this.control.hasError;}\r\n    get filled():boolean {return this.control.filled;}\r\n    clear() {\r\n        if (this.control !== undefined) this.control.clear();\r\n    }\r\n    clearErrors() {\r\n        if (this.control !== undefined) this.control.clearErrors();\r\n    }\r\n    readValues(values:any):any {\r\n        if (this.control !== undefined) this.control.readValues(values);\r\n    }\r\n    setError(fieldName:string, error:string) {\r\n        if (this.control !== undefined) this.control.setError(fieldName, error);\r\n    }\r\n    setInitValues(values:any) {\r\n        if (this.control !== undefined) this.control.setInitValues(values);\r\n    }\r\n}\r\n\r\nclass ElementRowContainer extends RowContainer {\r\n    render(key:string):JSX.Element {\r\n        return <div key={key} className=\"form-group\">{this.row as JSX.Element}</div>;\r\n    }\r\n    get hasError():boolean {return false;}\r\n    get filled():boolean {return false;}\r\n}\r\n\r\nclass BootStrapRowContainer extends RowContainer {\r\n    render(key:string):JSX.Element {\r\n        return <div key={key} className='form-group row'>\r\n            <label className='col-sm-2 col-form-label'>\r\n                {(this.row as LabelFormRow).label}\r\n            </label>\r\n            {this.control.render()}\r\n        </div>;\r\n\r\n        //has-success is-valid\r\n    }\r\n}\r\n\r\nexport function bootstrapCreateRow(form:FormView, row: FormRow):RowContainer {\r\n    return new BootStrapRowContainer(form, row);\r\n}\r\n\r\nexport function elementCreateRow(form:FormView, row: FormRow):RowContainer {\r\n    return new ElementRowContainer(form, row);\r\n}\r\n","//import {isDevelopment} from '../local';\r\nimport {HttpChannel} from './httpChannel';\r\n\r\nexport async function refetchApi(channel:HttpChannel, url, options, resolve, reject) {\r\n    await channel.fetch(url, options, resolve, reject);\r\n}\r\n\r\nexport abstract class ApiBase {\r\n    protected token: string;\r\n    protected path: string;\r\n    protected showWaiting: boolean;\r\n\r\n    constructor(path: string, showWaiting: boolean) {\r\n        this.path = path || '';\r\n        this.showWaiting = showWaiting;\r\n    }\r\n\r\n    protected abstract async getHttpChannel(): Promise<HttpChannel>;\r\n\r\n    public async call(url:string, method:string, body:any):Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.callFetch(url, method, body);\r\n    }\r\n\r\n    public async get(path:string, params:any=undefined): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.get(this.path + path, params);\r\n    }\r\n\r\n    public async post(path:string, params:any): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.post(this.path + path, params);\r\n    }\r\n\r\n    public async put(path:string, params:any): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.put(this.path + path, params);\r\n    }\r\n\r\n    public async delete(path:string, params:any): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.delete(this.path + path, params);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport {nav, mobileHeaderStyle} from './nav';\r\nimport { Page } from './page';\r\n\r\nexport interface TitleBarProps {\r\n    back?: 'back' | 'close' | 'none';\r\n    center: string | JSX.Element;\r\n    right?: JSX.Element;\r\n    logout?: boolean | (()=>void);\r\n}\r\nexport interface TitleBarState {\r\n    hasBack: boolean;\r\n}\r\nexport class TitleBar extends React.Component<TitleBarProps, TitleBarState> {\r\n    private navChangeHandler: ()=>void;\r\n    constructor(props) {\r\n        super(props);\r\n        this.navChange = this.navChange.bind(this);\r\n        this.state = {\r\n            hasBack: false,\r\n        };\r\n    }\r\n    navChange() {\r\n        this.setState({\r\n            hasBack: nav.level > 1\r\n        })\r\n    }\r\n    componentWillMount() {\r\n        this.navChange();\r\n        //this.navChangeHandler = nav.events.add('change', this.navChange);\r\n    }\r\n    componentWillUnmount() {\r\n        //nav.events.remove('change', this.navChangeHandler);\r\n    }\r\n    async back() {\r\n        await nav.back(); // 这个才会显示confirm box，在dataForm里面，如果输入了数据的话\r\n    }\r\n    openWindow() {\r\n        window.open(document.location.href);\r\n    }\r\n    private logoutClick = () => {\r\n        nav.push(<Page header=\"安全退出\" back=\"close\">\r\n            <div className=\"m-5 border border-info bg-white rounded p-3 text-center\">\r\n                <div>退出当前账号不会删除任何历史数据，下次登录依然可以使用本账号</div>\r\n                <div className=\"mt-3\">\r\n                    <button className=\"btn btn-danger\" onClick={()=>this.logout()}>退出</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n    }\r\n    private logout() {\r\n        let {logout} = this.props;\r\n        if (typeof logout === 'function') {\r\n            logout(); \r\n        }\r\n        nav.logout(undefined);\r\n    }\r\n    render() {\r\n        let b = this.state.hasBack || self != top;\r\n        let {right, center, logout} = this.props;\r\n        let back, pop, debugLogout;\r\n        if (logout !== undefined && self === top) {\r\n            if (typeof logout === 'boolean' && logout === true\r\n                || typeof logout === 'function')\r\n            {\r\n                let {nick, name} = nav.user;\r\n                debugLogout = <div className=\"d-flex align-items-center\">\r\n                    <small className=\"text-light\">{nick || name}</small>\r\n                    <a className=\"dropdown-toggle btn btn-secondary btn-sm ml-2\"\r\n                        role=\"button\"\r\n                        onClick={this.logoutClick}>\r\n                        <i className=\"fa fa-sign-out\" />\r\n                    </a>\r\n                </div>;\r\n            }\r\n        }\r\n        if (b) {\r\n            switch (this.props.back) {\r\n                case 'none': back = undefined; break;\r\n                default:\r\n                case 'back': back = <nav onClick={this.back}><i className=\"fa fa-arrow-left\" /></nav>; break;\r\n                case 'close': back = <nav onClick={this.back}><i className=\"fa fa-close\" /></nav>; break;\r\n            }\r\n        }\r\n        if (self != top) {\r\n            console.log(document.location.href);\r\n            pop = <header onClick={this.openWindow} />;\r\n        }\r\n        let rightView;\r\n        if (right || debugLogout) rightView = <aside>{right} {debugLogout}</aside>;\r\n        return (\r\n        <header style={mobileHeaderStyle}>\r\n            {pop}\r\n            {back}\r\n            <div>{center}</div>\r\n            {rightView}\r\n        </header>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { jsonStringify } from '../../tools';\r\n\r\nexport const DefaultRow = (values) => <div className=\"px-3 py-2\">{jsonStringify(values)}</div>;\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { List, FA } from 'tonva-react-form';\r\nimport { Page, nav } from 'tonva-tools';\r\nimport { TuidMain, Query, Entity } from '../../entities';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { QueryUI, CQuery } from './cQuery';\r\nimport { DefaultRow } from './defaultRow';\r\n\r\nexport class VQueryMain extends VEntity<Query, QueryUI, CQuery> {\r\n    protected vForm: VForm;\r\n    private row: React.StatelessComponent;\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        let {row, queryRow} = this.ui;\r\n        this.row = queryRow || row || DefaultRow;\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSubmit = async () => {\r\n        let params = this.vForm.getValues();\r\n        if (this.entity.isPaged === true) {\r\n            await this.entity.resetPage(30, params);\r\n            await this.entity.loadPage();\r\n            this.replacePage(this.pageResult);\r\n        }\r\n        else {\r\n            let data = await this.entity.query(params);\r\n            this.replacePage(this.queryResult, data);\r\n        }\r\n    }\r\n\r\n    again = () => {\r\n        this.vForm.reset();\r\n        this.replacePage(this.view);\r\n    }\r\n\r\n    renderExtra() {\r\n        return;\r\n    }\r\n\r\n    renderRow = (item:any, index:number) => <this.row {...item} />;\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render('mx-3 my-2')}\r\n        {this.renderExtra()}\r\n    </Page>;\r\n\r\n    protected pageResult = () => {\r\n        let {name, list} = this.entity;\r\n        let rightClose = <button\r\n            className=\"btn btn-outline-success\"\r\n            onClick={this.again}>\r\n            <FA name=\"search\" /> 再查询\r\n        </button>;\r\n        return <Page header={this.label} right={rightClose}>\r\n            <List items={list} item={{render: this.renderRow}} />\r\n        </Page>;\r\n    }\r\n\r\n    protected queryResult = observer((result:any) => {\r\n        let rightClose = <button\r\n            className=\"btn btn-outline-success\"\r\n            onClick={this.again}>\r\n            <FA name=\"search\" /> 再查询\r\n        </button>;\r\n        return <Page header={this.label} right={rightClose}>\r\n            <pre>{JSON.stringify(result, undefined, '\\t')}</pre>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport { FA, SearchBox, List } from 'tonva-react-form';\r\nimport { Page, PageItems } from 'tonva-tools';\r\nimport { Query } from '../../entities';\r\nimport { VEntity } from '../CVEntity';\r\nimport { QueryUI, CQuerySelect } from './cQuery';\r\nimport { DefaultRow } from './defaultRow';\r\n\r\nexport class VQuerySelect extends VEntity<Query, QueryUI, CQuerySelect> {\r\n    private row: React.StatelessComponent;\r\n\r\n    PageItems:QueryPageItems;\r\n    ownerId: number;\r\n\r\n    async open(param?:any) {\r\n        let {row, selectRow} = this.ui;\r\n        this.row = selectRow || row || DefaultRow;\r\n        //this.entity = this.controller.entity;\r\n        this.PageItems = new QueryPageItems(this.entity);\r\n        await this.onSearch(param);\r\n        this.openPage(this.view);\r\n    }\r\n    onSearch = async (key:string) => {\r\n        await this.PageItems.first(key);\r\n    }\r\n\r\n    renderRow = (item:any, index:number) => <this.row {...item} />;\r\n\r\n    private callOnSelected(item:any) {\r\n       this.closePage();\r\n       this.returnCall(item);\r\n    }\r\n    clickRow = (item:any) => {\r\n        this.callOnSelected(item);\r\n    }\r\n\r\n    view = () => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\r\n        return <Page header={header}>\r\n            <List\r\n                items={this.PageItems.items}\r\n                item={{render: this.renderRow, onClick: this.clickRow}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    };\r\n}\r\n\r\nexport class QueryPageItems extends PageItems<any> {\r\n    private query: Query;\r\n    constructor(query: Query) {\r\n        super();\r\n        this.query = query;\r\n    }\r\n    protected async load():Promise<any[]> {\r\n        await  this.query.loadSchema();\r\n        let ret:any[];\r\n        if (this.query.isPaged === true)\r\n            ret = await this.query.page(this.param, this.pageStart, this.pageSize);\r\n        else {\r\n            let data = await this.query.query(this.param);\r\n            //let data = await this.query.unpackReturns(res);\r\n            ret = data[this.query.returns[0].name];\r\n        }\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:any) {\r\n        if (item === undefined) this.pageStart = 0;\r\n    }\r\n}\r\n","import { StatelessComponent } from \"react\";\r\nimport { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Query } from \"../../entities\";\r\nimport { VQueryMain } from \"./vQueryMain\";\r\nimport { VQuerySelect } from \"./vQuerySelect\";\r\n\r\nexport interface QueryUI extends EntityUI {\r\n    CQuery?: typeof CQuery;\r\n    CQuerySelect?: typeof CQuerySelect;\r\n    main?: typeof VQueryMain;\r\n    row?: StatelessComponent;\r\n    queryRow?: StatelessComponent;\r\n    selectRow?: StatelessComponent;\r\n}\r\n\r\nexport abstract class CQueryBase extends CEntity<Query, QueryUI> {\r\n}\r\n\r\nexport class CQuery extends CQueryBase {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VQueryMain);\r\n    }\r\n\r\n    protected get VQueryMain():typeof VQueryMain {return this.ui && this.ui.main || VQueryMain}\r\n}\r\n\r\nexport class CQuerySelect extends CQueryBase {\r\n    protected async internalStart(param?:any) {\r\n        await this.openVPage(this.VQuerySelect, param);\r\n    }\r\n\r\n    protected get VQuerySelect():typeof VQuerySelect {return VQuerySelect}\r\n}\r\n","export * from './cQuery';\r\nexport * from './vQueryMain';\r\nexport * from './vQuerySelect';","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\r\nimport { ResUploader } from '../resUploader';\r\nimport { Image } from '../image';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { ItemEdit } from './itemEdit';\r\nimport { FA } from 'tonva-react-form';\r\n\r\nexport class ImageItemEdit extends ItemEdit {\r\n    protected uiItem: UiTextItem;\r\n    private resUploader: ResUploader;\r\n    @observable private resId: string;\r\n    @observable private overSize: boolean = false;\r\n\r\n    protected async internalStart():Promise<any> {\r\n        this.resId = this.value;        \r\n        return new Promise<any>((resolve, reject) => {\r\n            nav.push(React.createElement(this.page, {resolve:resolve, reject:reject}), ()=>reject());\r\n        });\r\n    }\r\n\r\n    /*\r\n    private onChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.newValue = evt.target.value;\r\n        let preValue = this.value;\r\n        this.isChanged = (this.newValue != preValue);\r\n    }\r\n    */\r\n\r\n    private upload = async () => {\r\n        if (!this.resUploader) return;\r\n        let ret = await this.resUploader.upload();\r\n        if (ret === null) {\r\n            this.overSize = true;\r\n            setTimeout(() => this.overSize = false, 3000);\r\n            return;\r\n        }\r\n        this.resId = ret;\r\n        this.isChanged = (this.resId != this.value);\r\n    }\r\n\r\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\r\n        let {resolve} = props;\r\n        let right = <button\r\n            className=\"btn btn-sm btn-success\"\r\n            disabled={!this.isChanged}\r\n            onClick={()=>resolve(this.resId)}>保存</button>;\r\n        let overSize:any;\r\n        if (this.overSize === true) {\r\n            overSize = <div className=\"text-danger\">\r\n                <FA name=\"times-circle\" /> 图片文件大小超过2M，无法上传\r\n            </div>;\r\n        }\r\n        return <Page header={'更改' + this.label} right={right}>\r\n            <div className=\"my-3 px-3 py-3 bg-white\">\r\n                <div>上传图片：\r\n                    <ResUploader ref={v=>this.resUploader=v} multiple={false} maxSize={2048} />\r\n                    <button className=\"btn btn-primary ml-5\" onClick={this.upload}>上传</button>\r\n                </div>\r\n                {overSize}\r\n                <div className=\"small muted my-4\">支持JPG、GIF、PNG格式图片，不超过2M。</div>\r\n                <div className=\"d-flex\">\r\n                    <div className=\"mr-5\" style={{border: '1px dotted gray', padding: '8px'}}>\r\n                        <Image className=\"w-12c h-12c\" src={this.resId} />\r\n                    </div>\r\n                    <div className=\"ml-5\">\r\n                        <div className=\"small\">图片预览</div>\r\n                        <Image className=\"w-4c h-4c mt-3\" src={this.resId} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\n\r\nexport function Loading() {\r\n    return <div className=\"d-flex h-100 align-items-center justify-content-center\">\r\n        <i className=\"fa fa-spinner fa-spin fa-2x fa-fw text-info\" />\r\n    </div>;\r\n}\r\n\r\n/*\r\nexport function Loading() {\r\n    return <div style={{height:'100%'}} className=\"d-flex flex-fill align-items-center justify-content-center\">\r\n    <div className=\"d-flex align-items-center justify-content-center slide text-info\" style={{width:'5em', height:'2em'}}>\r\n        加载中...\r\n    </div>\r\n    </div>\r\n}\r\n*/\r\n\r\n\r\n","import * as React from 'react';\r\nimport { nav } from './nav';\r\n\r\nexport interface ResUploaderProps {\r\n    className?: string;\r\n    multiple?: boolean;\r\n    maxSize?: number;\r\n    onFilesChange?: (evt: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nexport class ResUploader extends React.Component<ResUploaderProps> {\r\n    private fileInput: HTMLInputElement;\r\n\r\n    upload = async ():Promise<string> => {\r\n        let {maxSize} = this.props;\r\n        if (maxSize === undefined || maxSize <= 0) \r\n            maxSize = 100000000000;\r\n        else\r\n            maxSize = maxSize * 1024;\r\n        let resUrl = nav.resUrl + 'upload';\r\n        var files:FileList = this.fileInput.files;\r\n        var data = new FormData();\r\n        let len = files.length;\r\n        for (let i=0; i<len; i++) {\r\n            let file = files[i];\r\n            if (file.size > maxSize) return null;\r\n            data.append('files[]', file, file.name);\r\n        }\r\n  \r\n        try {\r\n            let abortController = new AbortController();\r\n            let res = await fetch(resUrl, {\r\n                method: \"POST\",\r\n                body: data,\r\n                signal: abortController.signal,\r\n            });\r\n            let json = await res.json();\r\n            return ':' + json.res.id;\r\n        }\r\n        catch (err) {\r\n            console.error('%s %s', resUrl, err);\r\n        }\r\n    }\r\n    render() {\r\n        let {className, multiple, onFilesChange} = this.props;\r\n        return <input \r\n            className={className}\r\n            ref={t=>this.fileInput=t} \r\n            onChange={onFilesChange}\r\n            type='file' name='file' multiple={multiple} />\r\n    }\r\n}\r\n","export * from './rule';\r\nexport * from './field';\r\nexport * from './face';\r\nexport * from './rowContainer';\r\nexport * from './formView';\r\nexport * from './TonvaForm';\r\nexport {ControlBase} from './control';\r\n","import * as React from 'react';\r\nimport {FormEvent} from 'react';\r\nimport {computed} from 'mobx';\r\nimport {uid} from '../uid';\r\nimport {Rule} from './rule';\r\nimport {Field} from './field';\r\nimport {Face} from './face';\r\nimport {CreateControl, ButtonsControl} from './control';\r\nimport {RowContainer, CreateRow, bootstrapCreateRow, elementCreateRow} from './rowContainer';\r\n\r\nexport interface FieldView {\r\n    field: Field;\r\n    face?: Face;\r\n}\r\n\r\nexport interface LabeledRow {\r\n    label?: string;\r\n    createRow?: CreateRow;\r\n    createControl?: CreateControl;\r\n    help?: JSX.Element;\r\n}\r\n\r\nexport interface FieldRow extends LabeledRow, FieldView {\r\n}\r\n\r\nexport interface GroupRow extends LabeledRow {\r\n    group: FieldView[];\r\n}\r\n\r\nexport type LabelFormRow = FieldRow|GroupRow|LabeledRow;\r\nexport type FormRow = LabelFormRow|JSX.Element;\r\n\r\nexport interface SubmitResult {\r\n    success: boolean;\r\n    message?: string\r\n    result?: any;\r\n}\r\n\r\nexport interface FormProps {\r\n    formRows: FormRow[];\r\n    //context?: any;              // form context，比如，可以是EntitiesUI\r\n    rules?: Rule | Rule[];\r\n    onSubmit: (values:any) => Promise<SubmitResult|undefined>;\r\n    submitButton?: string|JSX.Element;\r\n    otherButton?: string|JSX.Element;\r\n    onOther?: (values:any) => void;\r\n    createRow?: CreateRow;\r\n    createControl?: CreateControl;\r\n    readOnly?: boolean;\r\n}\r\n\r\nexport class FormView {\r\n    uid:string;\r\n    private rows: RowContainer[] = [];\r\n    private buttonsRow: RowContainer;\r\n    props: FormProps;\r\n    createControl?: CreateControl;\r\n    constructor(props:FormProps) {\r\n        this.uid = uid();\r\n        this.props = props;\r\n        this.buildRows(props);\r\n        this.createControl = props.createControl;\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    @computed get hasError():boolean {\r\n        let ret = this.rows.map((v, index) => index + ': ' + v.hasError + '\\n');\r\n        console.log(ret);\r\n        return this.rows.some(row => row.hasError);\r\n    }\r\n    @computed get nothing():boolean {\r\n        let ret = this.rows.every(row => !row.filled);\r\n        return ret;\r\n    }\r\n\r\n    readValues():any {\r\n        let values = {} as any;\r\n        for (let row of this.rows) {\r\n            row.readValues(values);\r\n        }\r\n        return values;\r\n    }\r\n\r\n    clear() {\r\n        for (let row of this.rows) {\r\n            row.clear();\r\n        }\r\n    }\r\n\r\n    clearErrors() {\r\n        for (let row of this.rows) {\r\n            row.clearErrors();\r\n        }\r\n    }\r\n\r\n    setError(fieldName:string, error:string) {\r\n        for (let row of this.rows) {\r\n            row.setError(fieldName, error);\r\n        }\r\n    }\r\n\r\n    setInitValues(initValues:any) {\r\n        if (initValues === undefined) return;\r\n        for (let row of this.rows) {\r\n            row.setInitValues(initValues);\r\n        }\r\n    }\r\n\r\n    private buildRows(props:FormProps) {\r\n        let {formRows, createRow} = props;\r\n        if (formRows !== undefined) {\r\n            for (let row of formRows) {\r\n                this.rows.push(this.buildRow(row, createRow));\r\n            }\r\n            if (this.props.readOnly !== true) {\r\n                this.buttonsRow = this.buildRow({createControl:this.createButtons.bind(this)}, undefined);\r\n            }\r\n        }\r\n        else {\r\n            this.rows.push(elementCreateRow(this, <div className=\"text-warning\">TonvaForm need formRows defined</div>));\r\n        }\r\n    }\r\n\r\n    private buildRow(formRow: FormRow, formRowCreator: CreateRow):RowContainer {\r\n        let createRow:CreateRow;\r\n        let type = (formRow as JSX.Element).type;\r\n        if (type !== undefined) {\r\n            createRow = elementCreateRow;\r\n        }\r\n        else {\r\n            createRow = (formRow as (FieldRow | GroupRow | LabeledRow)).createRow;\r\n            if (createRow === undefined) {\r\n                createRow = formRowCreator;\r\n                if (createRow === undefined) createRow = bootstrapCreateRow;\r\n            }\r\n        }\r\n        let row = createRow(this, formRow);\r\n        return row;\r\n    }\r\n\r\n    private createButtons(form:FormView, row: FormRow) {\r\n        return new ButtonsControl(form);\r\n    }\r\n\r\n    private isOk():boolean {\r\n        let isOk = true;\r\n        for (let row of this.rows) {\r\n            if (!row.isOk()) isOk = false;\r\n        }\r\n        return isOk;\r\n    }\r\n\r\n    render():JSX.Element {\r\n        return <form onSubmit={this.onSubmit}>\r\n            {this.rows.map((row,index) => row.render(this.uid + index))}\r\n            {this.buttons()}\r\n        </form>;\r\n    }\r\n\r\n    buttons():JSX.Element {\r\n        if (this.buttonsRow === undefined) return;\r\n        return this.buttonsRow.render(this.uid + this.rows.length);\r\n    }\r\n    \r\n    async onSubmit(event:FormEvent<HTMLFormElement>) {\r\n        event.preventDefault();\r\n        if (!this.isOk()) return;\r\n        let values = this.readValues();\r\n        await this.props.onSubmit(values);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { Page, loadAppUqs, nav, meInFrame, Controller, TypeVPage, VPage, resLang} from 'tonva-tools';\r\nimport { List, LMR, FA } from 'tonva-react-form';\r\nimport { CUq, EntityType, UqUI } from './uq';\r\nimport { centerApi } from '../centerApi';\r\n\r\nexport interface AppUI {\r\n    CApp?: typeof CApp;\r\n    CUq?: typeof CUq;\r\n    main?: TypeVPage<CApp>;\r\n    uqs: {[uq:string]: UqUI};\r\n    res?: any;\r\n}\r\n\r\nexport class CApp extends Controller {\r\n    private appOwner:string;\r\n    private appName:string;\r\n    private isProduction:boolean;\r\n    private cImportUqs: {[uq:string]: CUq} = {};\r\n    protected ui:AppUI;\r\n    id: number;\r\n    appUnits:any[];\r\n\r\n    constructor(tonvaApp:string, ui?:AppUI) {\r\n        super(resLang(ui && ui.res));\r\n        let parts = tonvaApp.split('/');\r\n        if (parts.length !== 2) {\r\n            throw 'tonvaApp name must be / separated, owner/app';\r\n        }\r\n        this.appOwner = parts[0];\r\n        this.appName = parts[1];\r\n        this.ui = ui || {uqs:{}};\r\n        this.caption = this.res.caption || 'Tonva';\r\n    }\r\n    \r\n    readonly caption: string; // = 'View Model 版的 Uq App';\r\n    cUqCollection: {[uq:string]: CUq} = {};\r\n\r\n    async startDebug() {\r\n        let appName = this.appOwner + '/' + this.appName;\r\n        let cApp = new CApp(appName, {uqs:{}} );\r\n        let keepNavBackButton = true;\r\n        await cApp.start(keepNavBackButton);    \r\n    }\r\n\r\n    protected async loadUqs(): Promise<string[]> {\r\n        let retErrors:string[] = [];\r\n        let unit = meInFrame.unit;\r\n        let app = await loadAppUqs(this.appOwner, this.appName);\r\n        let {id, uqs} = app;\r\n        this.id = id;\r\n\r\n        let promises: PromiseLike<string>[] = [];\r\n        let promiseChecks: PromiseLike<boolean>[] = [];\r\n        for (let appUq of uqs) {\r\n            let {id:uqId, uqOwner, uqName, url, urlDebug, ws, access, token} = appUq;\r\n            let uq = uqOwner + '/' + uqName;\r\n            let ui = this.ui && this.ui.uqs && this.ui.uqs[uq];\r\n            let cUq = this.newCUq(uq, uqId, access, ui || {});\r\n            this.cUqCollection[uq] = cUq;\r\n            promises.push(cUq.loadSchema());\r\n            promiseChecks.push(cUq.entities.uqApi.checkAccess());\r\n        }\r\n        let results = await Promise.all(promises);\r\n        Promise.all(promiseChecks).then((checks) => {\r\n            for (let c of checks) {\r\n                if (c === false) {\r\n                    nav.start();\r\n                    return;\r\n                }\r\n            }\r\n        });\r\n        for (let result of results)\r\n        {\r\n            let retError = result; // await cUq.loadSchema();\r\n            if (retError !== undefined) {\r\n                retErrors.push(retError);\r\n                continue;\r\n            }\r\n        }\r\n        if (retErrors.length === 0) return;\r\n        return retErrors;\r\n    }\r\n\r\n    async getImportUq(uqOwner:string, uqName:string):Promise<CUq> {\r\n        let uq = uqOwner + '/' + uqName;\r\n        let cUq = this.cImportUqs[uq];\r\n        if (cUq !== undefined) return cUq;\r\n        let ui = this.ui && this.ui.uqs && this.ui.uqs[uq];\r\n        let uqId = -1; // unknown\r\n        this.cImportUqs[uq] = cUq = this.newCUq(uq, uqId, undefined, ui || {});\r\n        let retError = await cUq.loadSchema();\r\n        if (retError !== undefined) {\r\n            console.error(retError);\r\n            debugger;\r\n            return;\r\n        }\r\n        return cUq;\r\n    }\r\n\r\n    protected newCUq(uq:string, uqId:number, access:string, ui:any) {\r\n        let cUq = new (this.ui.CUq || CUq)(this, uq, this.id, uqId, access, ui);        \r\n        Object.setPrototypeOf(cUq.x, this.x);\r\n        return cUq;\r\n    }\r\n\r\n    get cUqArr():CUq[] {\r\n        let ret:CUq[] = [];\r\n        for (let i in this.cUqCollection) {\r\n            ret.push(this.cUqCollection[i]);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    getCUq(apiName:string):CUq {\r\n        return this.cUqCollection[apiName];\r\n    }\r\n\r\n    protected get VAppMain():TypeVPage<CApp> {return (this.ui&&this.ui.main) || VAppMain}\r\n    protected async beforeStart():Promise<boolean> {\r\n        //if (await super.beforeStart() === false) return false;\r\n        try {\r\n            let hash = document.location.hash;\r\n            if (hash.startsWith('#tvdebug')) {\r\n                this.isProduction = false;\r\n                //await this.showMainPage();\r\n                //return;\r\n            }\r\n            else {\r\n                this.isProduction = hash.startsWith('#tv');\r\n            }\r\n            let {unit} = meInFrame;\r\n            if (this.isProduction === false && (unit===undefined || unit<=0)) {\r\n                let app = await loadAppUqs(this.appOwner, this.appName);\r\n                let {id} = app;\r\n                this.id = id;\r\n                await this.loadAppUnits();\r\n                switch (this.appUnits.length) {\r\n                    case 0:\r\n                        this.showUnsupport();\r\n                        return false;\r\n                    case 1:\r\n                        unit = this.appUnits[0].id;\r\n                        if (unit === undefined || unit < 0) {\r\n                            this.showUnsupport();\r\n                            return false;\r\n                        }\r\n                        meInFrame.unit = unit;\r\n                        break;\r\n                    default: \r\n                        //nav.clear();\r\n                        nav.push(<this.selectUnitPage />)\r\n                        return false;\r\n                }\r\n            }\r\n\r\n            let retErrors = await this.loadUqs();\r\n            if (retErrors !== undefined) {\r\n                this.openPage(<Page header=\"ERROR\">\r\n                    <div className=\"m-3\">\r\n                        <div>Load Uqs 发生错误：</div>\r\n                        {retErrors.map((r, i) => <div key={i}>{r}</div>)}\r\n                    </div>\r\n                </Page>);\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        catch (err) {\r\n            nav.push(<Page header=\"App start error!\">\r\n                <pre>\r\n                    {typeof err === 'string'? err : err.message}\r\n                </pre>\r\n            </Page>);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    protected async internalStart(param:any) {\r\n        if (param !== true) {\r\n            this.clearPrevPages();\r\n        }\r\n        await this.showMainPage();\r\n    }\r\n    async load() {\r\n        await this.beforeStart();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        return this.renderView(this.VAppMain);\r\n    }\r\n\r\n    // 如果是独立app，删去显示app之前的页面。\r\n    // 如果非独立app，则不删\r\n    protected clearPrevPages() {\r\n        nav.clear();\r\n    }\r\n\r\n    private showUnsupport() {\r\n        this.clearPrevPages();\r\n        let {user} = nav;\r\n        let userName:string = user? user.name : '[未登录]';\r\n        this.openPage(<Page header=\"APP无法运行\" logout={true}>\r\n            <div className=\"m-3 text-danger container\">\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-2\">\r\n                        <FA name=\"exclamation-triangle\" />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        用户不支持APP\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-2\">用户: </div>\r\n                    <div className=\"col\">{userName}</div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-2\">App:</div>\r\n                    <div className=\"col\">{`${this.appOwner}/${this.appName}`}</div>\r\n                </div>\r\n            </div>\r\n        </Page>)\r\n    }\r\n\r\n    private async showMainPage() {\r\n        // #tvRwPBwMef-23-sheet-api-108\r\n        let parts = document.location.hash.split('-');\r\n        if (parts.length > 2) {\r\n            let action = parts[2];\r\n            // sheet_debug 表示centerUrl是debug方式的\r\n            if (action === 'sheet' || action === 'sheet_debug') {\r\n                let uqId = Number(parts[3]);\r\n                let sheetTypeId = Number(parts[4]);\r\n                let sheetId = Number(parts[5]);\r\n                let cUq = this.getCUqFromId(uqId);\r\n                if (cUq === undefined) {\r\n                    alert('unknown uqId: ' + uqId);\r\n                    return;\r\n                }\r\n                this.clearPrevPages();\r\n                await cUq.navSheet(sheetTypeId, sheetId);\r\n                return;\r\n            }\r\n        }\r\n        this.openVPage(this.VAppMain);\r\n    }\r\n\r\n    private getCUqFromId(uqId:number): CUq {\r\n        for (let i in this.cUqCollection) {\r\n            let cUq = this.cUqCollection[i];\r\n            if (cUq.id === uqId) return cUq;\r\n        }\r\n        return;\r\n    }\r\n\r\n    private async loadAppUnits() {\r\n        let ret = await centerApi.userAppUnits(this.id);\r\n        this.appUnits = ret;\r\n        if (ret.length === 1) {\r\n            meInFrame.unit = ret[0].id;\r\n        }\r\n    }\r\n\r\n    renderRow = (item: any, index: number):JSX.Element => {\r\n        let {id, nick, name} = item;\r\n        return <LMR className=\"px-3 py-2\" right={'id: ' + id}>\r\n            <div>{nick || name}</div>\r\n        </LMR>;\r\n    }\r\n    onRowClick = async (item: any) => {\r\n        meInFrame.unit = item.id; // 25;\r\n        await this.start();\r\n    }\r\n\r\n    protected selectUnitPage = () => {\r\n        return <Page header=\"选择小号\" logout={true}>\r\n            <List items={this.appUnits} item={{render: this.renderRow, onClick: this.onRowClick}}/>\r\n        </Page>\r\n    }\r\n}\r\n\r\nclass VAppMain extends VPage<CApp> {\r\n    async open(param?:any) {\r\n        this.openPage(this.appPage);\r\n    }\r\n\r\n    render(param?:any) {\r\n        return this.appContent();\r\n    }\r\n\r\n    protected appPage() {\r\n        let {caption} = this.controller;\r\n        return <Page header={caption} logout={()=>{meInFrame.unit = undefined}}>\r\n            {this.appContent()}\r\n        </Page>;\r\n    }\r\n\r\n    protected appContent = () => {\r\n        let {cUqArr} = this.controller;\r\n        let content:any;\r\n        if (cUqArr.length === 0) {\r\n            content = <div className=\"text-danger\">\r\n                <FA name=\"\" /> 此APP没有绑定任何的UQ\r\n            </div>;\r\n        }\r\n        else {\r\n            content = cUqArr.map((v,i) => <div key={i}>{v.render()}</div>);\r\n        }\r\n        return <>{content}</>;\r\n    };\r\n}\r\n","import React from 'react';\r\nimport { FA } from \"tonva-react-form\";\r\n\r\nfunction icon(className:string, name:string) {\r\n    return <FA className={className} name={name} fixWidth={true} />;\r\n}\r\n/*\r\nexport interface EntityRes {\r\n    caption: string;\r\n    icon: JSX.Element;\r\n}\r\n*/\r\n\r\nexport const entityIcons:{[type:string]:JSX.Element} = {\r\n    tuid: icon('text-info', 'list-alt'),\r\n    action: icon('text-info', 'hand-o-right'),\r\n    map: icon('text-muted', 'list-ul'),\r\n    book: icon('text-muted', 'book'),\r\n    query: icon('text-warning', 'search'),\r\n    history: icon('text-info', 'hand-o-right'),\r\n    pending: icon('text-info', 'forward'),\r\n    sheet: icon('text-primary', 'wpforms'),\r\n};\r\n","import { Controller } from \"tonva-tools\";\r\nimport { CUq } from \"./uq\";\r\n\r\nexport abstract class ControllerUq extends Controller {\r\n    constructor(cUq: CUq, res:any) {\r\n        super(res);\r\n        this.cUq = cUq;\r\n    }\r\n    cUq: CUq;\r\n}\r\n","import {CenterApi as CenterApiBase} from 'tonva-tools';\r\n\r\n//\r\n\r\nexport class CenterApi extends CenterApiBase {\r\n    async userAppUnits(app:number):Promise<any[]> {\r\n        return await this.get('tie/user-app-units', {app:app});\r\n    }\r\n}\r\n\r\nexport const centerApi = new CenterApi('tv/', undefined);\r\n","import _ from 'lodash';\r\nimport { Context } from '../context';\r\nimport { FormRes } from '../formRes';\r\n\r\nexport abstract class Rule {\r\n    abstract check(defy:string[], value:any):void;\r\n}\r\n\r\nexport type ContextRule = (context:Context)=>{[target:string]:string[]|string} | string[] | string;\r\nexport type FieldRule = (value:any) => string[] | string;\r\n\r\nexport class RuleCustom extends Rule {\r\n    private func: FieldRule;\r\n    constructor(func: FieldRule) {\r\n        super();\r\n        this.func = func;\r\n    }\r\n    check(defy:string[], value:any) {\r\n        let ret = this.func(value);\r\n        if (ret === undefined) return;\r\n        switch (typeof ret) {\r\n            case 'undefined': return;\r\n            case 'string': defy.push(ret as string); return;\r\n            default: defy.push(...ret); return;\r\n        }        \r\n    }\r\n}\r\n\r\nexport abstract class RulePredefined extends Rule {\r\n    protected res: FormRes;\r\n    constructor(res: FormRes) {\r\n        super();\r\n        this.res = res;\r\n    }\r\n}\r\n\r\nexport class RuleRequired extends RulePredefined {\r\n    check(defy:string[], value:any) {\r\n        switch (typeof value) {\r\n            default:\r\n            case 'boolean': return;\r\n            case 'object':\r\n                if (value !== null) return;\r\n                break;\r\n            case 'string':\r\n                if ((value as string).trim().length > 0) return;\r\n                break;\r\n            case 'number':\r\n                if ((value as number) !== NaN) return;\r\n                break;\r\n            case 'undefined':\r\n                break;\r\n        }\r\n        defy.push(this.res.required);\r\n    }\r\n}\r\n\r\nexport class RuleNum extends RulePredefined {\r\n    private minMsg: _.TemplateExecutor;\r\n    private maxMsg: _.TemplateExecutor;\r\n    protected min: number;\r\n    protected max: number\r\n    constructor(res: FormRes, min?: number, max?: number) {\r\n        super(res);\r\n        this.minMsg = _.template(res.min);\r\n        this.maxMsg = _.template(res.max);\r\n        this.min = min;\r\n        this.max = max;\r\n    }\r\n    check(defy:string[], value:any) {\r\n        if (value === undefined || value === null) return;\r\n        let n = Number(value);\r\n        if (n === NaN) {\r\n            defy.push(this.res.number);\r\n        }\r\n        else {\r\n            this.checkMore(defy, n);\r\n        }\r\n    }\r\n\r\n    protected checkMore(defy:string[], value: number) {\r\n        if (this.min !== undefined && Number(value) < this.min) {\r\n            defy.push(this.minMsg({min:this.min}));\r\n        }\r\n        if (this.max !== undefined && Number(value) > this.max) {\r\n            defy.push(this.maxMsg({max:this.max}));\r\n        }\r\n    }\r\n}\r\n\r\nexport class RuleInt extends RuleNum {\r\n    protected checkMore(defy:string[], n: number) {\r\n        super.checkMore(defy, n);\r\n        if (Number.isInteger(n) === false) {\r\n            defy.push(this.res.integer);\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { UiItem, ChangingHandler, ChangedHandler } from '../../schema';\r\nimport { FieldProps } from '../field';\r\nimport { Context } from '../context';\r\nimport { ItemSchema } from '../../schema';\r\nimport { Rule, RuleRequired, RuleCustom, FieldRule } from '../rules';\r\nimport { computed, observable, reaction } from 'mobx';\r\n\r\nexport abstract class Widget {\r\n    protected name: string;\r\n    protected context: Context;\r\n    protected fieldProps:FieldProps;\r\n    protected children: React.ReactNode;\r\n    protected itemSchema: ItemSchema;\r\n    protected ui: UiItem;\r\n    protected defaultValue: any;\r\n    protected value: any;\r\n    protected rules: Rule[];\r\n    @observable protected errors: string[] = [];\r\n    @observable protected contextErrors: string[] = [];\r\n    @computed protected get hasError():boolean {return (this.errors.length + this.contextErrors.length)>0}\r\n    protected readOnly:boolean;\r\n    protected disabled:boolean;\r\n    @observable visible:boolean;\r\n\r\n    constructor(context:Context, itemSchema:ItemSchema, fieldProps:FieldProps, children: React.ReactNode) {\r\n        this.context = context;\r\n        let {name} = itemSchema;\r\n        this.name = name;\r\n        this.itemSchema = itemSchema;\r\n        this.fieldProps = fieldProps;\r\n        this.children = children;\r\n        this.ui = context.getUiItem(name);\r\n        if (this.ui === undefined) {\r\n            this.readOnly = false;\r\n            this.disabled = false;\r\n            this.visible = true;\r\n        }\r\n        else {\r\n            let {readOnly, disabled, visible} = this.ui;\r\n            this.readOnly = (readOnly === true);\r\n            this.disabled = (disabled === true);\r\n            this.visible = !(visible === false);            \r\n        }\r\n        this.value = this.defaultValue =  context.getValue(name); //defaultValue;\r\n        this.init();\r\n    }\r\n\r\n    protected init() {\r\n        this.rules = [];\r\n        if (this.itemSchema.required === true) {\r\n            this.rules.push(new RuleRequired(this.context.form.res));\r\n        }\r\n        this.buildRules();\r\n        if (this.ui === undefined) return;\r\n        let {rules} = this.ui;\r\n        if (rules === undefined) return;\r\n        if (Array.isArray(rules) === false) {\r\n            this.rules.push(new RuleCustom(rules as FieldRule));\r\n            return;\r\n        }\r\n        for (let rule of rules as FieldRule[]) {\r\n            this.rules.push(new RuleCustom(rule));\r\n        }\r\n    }\r\n\r\n    protected buildRules() {\r\n    }\r\n\r\n    checkRules() {\r\n        let defy:string[] = [];\r\n        for (let r of this.rules) r.check(defy, this.value);\r\n        if (defy.length === 0) {\r\n            this.context.removeErrorWidget(this);\r\n        }\r\n        else {\r\n            this.context.addErrorWidget(this);\r\n            this.errors.push(...defy);\r\n        }\r\n    }\r\n\r\n    @computed get isOk() {\r\n        return this.errors.length ===0;\r\n    }\r\n\r\n    setError(err:string | string[]) {\r\n        if (err === undefined) return;\r\n        if (typeof err === 'string') this.errors.push(err);\r\n        else this.errors.push(...err);\r\n    }\r\n\r\n    setContextError(err:string | string[]) {\r\n        if (err === undefined) return;\r\n        if (typeof err === 'string') this.contextErrors.push(err);\r\n        else this.contextErrors.push(...err);\r\n    }\r\n\r\n    clearError() {\r\n        this.errors.splice(0);\r\n    }\r\n\r\n    clearContextError() {\r\n        this.contextErrors.splice(0);\r\n    }\r\n\r\n    protected parse(value:any):any {return value}\r\n\r\n    protected setElementValue(value:any) {}\r\n    protected setDataValue(value:any) {\r\n        if (this.isChanging === true) return;\r\n        this.context.initData[this.name] = this.value = this.parse(value);\r\n    }\r\n\r\n    setValue(value:any) {\r\n        if (this.isChanging === true) return;\r\n        //this.setDataValue(value);\r\n        //this.setElementValue(value);\r\n        this.changeValue(value, false);\r\n    }\r\n\r\n    getValue() {\r\n        return this.context.getValue(this.name);\r\n    }\r\n\r\n    getReadOnly():boolean {return this.readOnly}\r\n    getDisabled():boolean {return this.disabled}\r\n    getVisible():boolean {return this.visible}\r\n    setReadOnly(value:boolean) {this.readOnly = value}\r\n    setDisabled(value:boolean) {this.disabled = value}\r\n    setVisible(value:boolean) {this.visible = value}\r\n\r\n    private isChanging: boolean;\r\n    protected onInputChange = (evt: React.ChangeEvent<any>) => {\r\n        this.changeValue(evt.target.value, true);\r\n    }\r\n\r\n    protected changeValue(newValue: any, fromElement: boolean) {\r\n        let prev = this.value;\r\n        let onChanging: ChangingHandler;\r\n        let onChanged: ChangedHandler;\r\n        if (this.ui !== undefined) {\r\n            onChanging = this.ui.onChanging;\r\n            onChanged = this.ui.onChanged;\r\n        }\r\n        let allowChange = true;\r\n        if (onChanging !== undefined) {\r\n            this.isChanging = true;\r\n            allowChange = onChanging(this.context, this.value, prev);\r\n            this.isChanging = false;\r\n        }\r\n        if (allowChange === true) {\r\n            this.setDataValue(newValue);\r\n            if (fromElement !== true) this.setElementValue(newValue);\r\n            if (onChanged !== undefined) {\r\n                this.isChanging = true;\r\n                onChanged(this.context, this.value, prev);\r\n                this.isChanging = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    protected get className():string {\r\n        let fieldClass:string;\r\n        if (this.context.inNode === false) fieldClass = 'form-control';\r\n        return classNames(fieldClass, this.context.form.FieldClass, this.ui && this.ui.className);\r\n    }\r\n\r\n    protected abstract render():JSX.Element;\r\n\r\n    renderContainer():JSX.Element {\r\n        if (this.visible === false) return null;\r\n        let {form, inNode} = this.context;\r\n        if (inNode === true) return this.render();\r\n        let label:any;\r\n        if (this.ui === undefined) {\r\n            label = this.name;\r\n        }\r\n        else {\r\n            let uiLabel = this.ui.label;\r\n            if (uiLabel === null) label = null;\r\n            label = uiLabel || this.name;\r\n        }\r\n        if (this.itemSchema.required === true && form.props.requiredFlag !== false) {\r\n            if (label !== null) label = <>{label}&nbsp;<span className=\"text-danger\">*</span></>;\r\n        }\r\n        return form.FieldContainer(label, this.render());\r\n    }\r\n\r\n    protected renderTemplet():JSX.Element | undefined {\r\n        if (this.children !== undefined) {\r\n            return <>{this.children}</>;\r\n        }\r\n        if (this.ui === undefined) return undefined;\r\n        let {Templet} = this.ui;\r\n        if (typeof Templet === 'function') return Templet(this.value);\r\n        return Templet;\r\n    }\r\n\r\n    protected renderErrors() {\r\n        let errorList:string[] = [...this.errors, ...this.contextErrors];\r\n        if (errorList.length === 0) return null;\r\n        let {inNode} = this.context;\r\n        let tag = inNode === true? 'span' : 'div';\r\n        return errorList.map(err => React.createElement(tag, \r\n            {\r\n                key: err, \r\n                className: 'text-danger d-inline-block my-2 ml-3'\r\n            },\r\n            <><i className=\"fa fa-exclamation-circle\" /> &nbsp;{err}</>\r\n        ));\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiTextItem } from '../../schema';\r\nimport { StringSchema } from '../../schema';\r\n\r\nexport class TextWidget extends Widget {\r\n    protected inputType = 'text';\r\n    protected ui: UiTextItem;\r\n    protected input: HTMLInputElement;\r\n\r\n    protected setElementValue(value:any) {\r\n        if (this.input === null) return;\r\n        this.input.value = value;\r\n    }\r\n    protected get placeholder() {return (this.ui && this.ui.placeholder) || this.name}\r\n    protected onKeyDown: (evt:React.KeyboardEvent<HTMLInputElement>)=>void;\r\n\r\n    protected onBlur(evt: React.FocusEvent<any>) {\r\n        this.onInputChange(evt);\r\n        this.checkRules();\r\n        this.context.checkContextRules();\r\n    }\r\n    protected onFocus(evt: React.FocusEvent<any>) {\r\n        this.clearError();\r\n        this.context.removeErrorWidget(this);\r\n        this.context.removeErrors();\r\n    }\r\n    protected onChange(evt: React.ChangeEvent<any>) {\r\n    }\r\n\r\n    setReadOnly(value:boolean) {\r\n        if (this.input === null) return;\r\n        this.input.readOnly = this.readOnly = value;\r\n    }\r\n    setDisabled(value:boolean) {\r\n        if (this.input === null) return;\r\n        this.input.disabled = this.disabled = value;\r\n    }\r\n\r\n    render() {\r\n        let renderTemplet = this.renderTemplet();\r\n        if (renderTemplet !== undefined) return renderTemplet;\r\n        let cn = {\r\n            //'form-control': true,\r\n        };\r\n        if (this.hasError === true) {\r\n            cn['is-invalid'] = true;\r\n        }\r\n        else {\r\n            cn['required-item'] = this.itemSchema.required === true;\r\n        }\r\n        return <><input ref={input=>this.input = input}\r\n            className={classNames(this.className, cn)}\r\n            type={this.inputType}\r\n            defaultValue={this.value}\r\n            onChange={(evt: React.ChangeEvent<any>) => this.onChange(evt)}\r\n            placeholder={this.placeholder}\r\n            readOnly={this.readOnly}\r\n            disabled={this.disabled}\r\n            onKeyDown = {this.onKeyDown}\r\n            onFocus = {(evt: React.FocusEvent<any>) => this.onFocus(evt)}\r\n            onBlur={(evt: React.FocusEvent<any>) => this.onBlur(evt)}\r\n            maxLength={(this.itemSchema as StringSchema).maxLength} />\r\n            {this.renderErrors()}\r\n        </>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { TextWidget } from './textWidget';\r\nimport { RuleNum, RuleInt } from '../rules';\r\nimport { NumBaseSchema } from '../../schema';\r\n\r\nexport class NumberWidget extends TextWidget {\r\n    protected inputType = 'number';\r\n    protected itemSchema: NumBaseSchema;\r\n\r\n    protected buildRules() {\r\n        super.buildRules();\r\n        let res = this.context.form.res;\r\n        let {min, max} = this.itemSchema;\r\n        this.rules.push(\r\n            this.itemSchema.type === 'integer'?\r\n                new RuleNum(res, min, max) :\r\n                new RuleInt(res, min, max)\r\n        );\r\n        /*\r\n        if (this.itemSchema.type === 'integer') {\r\n            this.rules.push(new RuleInt);\r\n        }\r\n        let {min, max} = this.itemSchema;\r\n        if (min !== undefined) this.rules.push(new RuleMin(min));\r\n        if (max !== undefined) this.rules.push(new RuleMax(max));\r\n        */\r\n    }\r\n\r\n    protected parse(value:any):any {\r\n        if (value === undefined || value === null) return;\r\n        return Number(value);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { NumberWidget } from './numberWidget';\r\n\r\nexport class UpdownWidget extends NumberWidget {\r\n    protected inputType = 'number';\r\n\r\n    protected isValidKey(key:number):boolean {\r\n        return key===46 || key===8 || key===37 || key===39\r\n            || key>=48 && key<=57\r\n            || key>=96 && key<=105\r\n            || key===109 || key===189;\r\n    }\r\n    \r\n    protected onKeyDown = (evt:React.KeyboardEvent<HTMLInputElement>) => {\r\n        let key = evt.keyCode;\r\n        event.returnValue = this.isValidKey(key);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { TextWidget } from './textWidget';\r\n\r\nexport class DateWidget extends TextWidget {\r\n    protected inputType = 'date';\r\n}\r\n\r\nexport class DateTimeWidget extends TextWidget {\r\n    protected inputType = 'datetime';\r\n}\r\n\r\nexport class TimeWidget extends TextWidget {\r\n    protected inputType = 'time';\r\n}\r\n\r\nexport class MonthWidget extends TextWidget {\r\n    protected inputType = 'month';\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiCheckItem } from '../../schema';\r\n\r\nexport class CheckBoxWidget extends Widget {\r\n    protected input: HTMLInputElement;\r\n    protected ui: UiCheckItem;\r\n    protected trueValue: any;\r\n    protected falseValue: any;\r\n\r\n    protected init() {\r\n        super.init();\r\n        if (this.ui !== undefined) {\r\n            let {trueValue, falseValue} = this.ui;\r\n            if (trueValue === undefined) this.trueValue = true;\r\n            else this.trueValue = trueValue;\r\n            if (falseValue === undefined) this.falseValue = false;\r\n            else this.falseValue = falseValue;\r\n        }\r\n        else {\r\n            this.trueValue = true;\r\n            this.falseValue = false;\r\n        }\r\n    }\r\n    protected setElementValue(value:any) {\r\n        this.input.checked = value === this.trueValue;\r\n    }\r\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\r\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\r\n\r\n    protected onInputChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setDataValue(evt.target.checked === true? this.trueValue : this.falseValue);\r\n    }\r\n\r\n    protected onClick = () => {\r\n        this.context.removeErrors();\r\n    }\r\n\r\n    render() {\r\n        let cn = classNames(this.className, 'form-check-inline p-0');\r\n        let input = <input\r\n            ref={(input)=>this.input = input}\r\n            className={'align-self-center'}\r\n            type=\"checkbox\"\r\n            defaultChecked={this.defaultValue} \r\n            onChange={this.onInputChange}\r\n            onClick={this.onClick} />;\r\n        if (this.context.inNode === true) {\r\n            return <label className={cn}>\r\n                {input} {(this.ui&&this.ui.label) || this.name}\r\n            </label>\r\n        }\r\n        else {\r\n            return <div className={cn}>\r\n                <label className=\"w-100 h-100 mb-0 d-flex justify-content-center\">{input}</label>\r\n            </div>;\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\nimport { Widget } from './widget';\r\nimport { UiSelect } from '../../schema';\r\n\r\nexport class SelectWidget extends Widget {\r\n    protected select: HTMLSelectElement;\r\n    protected ui: UiSelect;\r\n    @observable protected readOnly: boolean;\r\n\r\n    protected setElementValue(value:any) {this.select.value = value}\r\n    protected onInputChange = (evt:React.ChangeEvent<HTMLSelectElement>) => {\r\n        this.setDataValue(evt.target.value);\r\n    }\r\n\r\n    setReadOnly(value:boolean) {this.select.disabled = this.readOnly = !value}\r\n    setDisabled(value:boolean) {this.select.disabled = this.disabled = value}\r\n\r\n    render() {\r\n        if (this.readOnly === true) {\r\n            let option = this.ui.list.find(v => v.value === this.value);\r\n            let title = (option === undefined)? '(???)' : option.title;\r\n            return <span className=\"form-control w-min-6c\">{title}</span>;\r\n        }\r\n        return <select\r\n            ref={(select)=>this.select = select}\r\n            className={classNames(this.className, 'form-control')}\r\n            defaultValue={this.defaultValue} \r\n            onChange={this.onInputChange}>\r\n            {this.ui.list.map((v,index) => {\r\n                let {title, value} = v;\r\n                let cn:string;\r\n                //if (value === undefined || value === null) cn = 'text-light small';\r\n                //else cn = 'text-danger';\r\n                return <option className={cn} key={index} value={value}>{title || value}</option>\r\n            })}\r\n        </select>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiIdItem, TempletType } from '../../schema';\r\nimport { observable } from 'mobx';\r\n\r\nexport class IdWidget extends Widget {\r\n    protected ui: UiIdItem;\r\n    @observable protected value:number;\r\n    setReadOnly(value:boolean) {this.readOnly = value}\r\n    setDisabled(value:boolean) {this.disabled = value}    \r\n\r\n    protected onClick = async () => {\r\n        let pickId = this.ui && this.ui.pickId;\r\n        if (pickId === undefined) {\r\n            alert('no pickId defined!');\r\n            return;\r\n        }\r\n        let id = await pickId(this.context, this.name, this.value);        \r\n        this.setDataValue(id);\r\n        this.clearError();\r\n        this.clearContextError();\r\n        this.checkRules();\r\n    }\r\n\r\n    render() {\r\n        let placeholder:string|JSX.Element, Templet: TempletType;\r\n        if (this.ui !== undefined) {\r\n            placeholder = this.ui.placeholder;\r\n            Templet = this.ui.Templet;\r\n        }\r\n        let cn = {\r\n            'form-control': true,\r\n            'required-item': this.itemSchema.required === true,\r\n            'cursor-pointer': true,\r\n            'is-invalid': this.hasError,\r\n        };\r\n        let content;\r\n        if (this.value === undefined || this.value === null) {\r\n            content = placeholder || 'placeholder';\r\n            cn['text-muted'] = true;\r\n        }\r\n        else if (Templet === undefined) {\r\n            content = <>{this.value}</>;\r\n        }\r\n        else if (typeof Templet === 'function') {\r\n            content = Templet(this.value);\r\n        }\r\n        else {\r\n            content = Templet;\r\n        }\r\n        return <>\r\n            <div className={classNames(cn)} onClick={this.onClick}>{content}</div>\r\n            {this.renderErrors()}\r\n        </>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { DataType } from '../../schema';\r\nimport { UiType } from '../../schema';\r\n\r\nexport const Unknown = (dataType:DataType, uiType:UiType, dataTypes:DataType[]) => {\r\n    return <span className=\"text-danger\">!!data type {dataType} only support {(dataTypes || []).join(', ')}, can't use ui {uiType}!!</span>;\r\n};\r\n","import * as React from 'react';\r\nimport { UiButton, TempletType } from '../../schema';\r\nimport { Unknown } from './unknown';\r\nimport { Widget } from './widget';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class ButtonWidget extends Widget {\r\n    protected ui: UiButton;\r\n\r\n    protected onClick = async () => {\r\n        this.clearError();\r\n        this.clearContextError();\r\n        let {name, type} = this.itemSchema;\r\n        if (type === 'submit') {\r\n            this.context.checkRules()\r\n            if (this.context.hasError === true) {\r\n                return;\r\n            }\r\n        }\r\n        let {onButtonClick} = this.context.form.props;\r\n        if (onButtonClick === undefined) {\r\n            alert(`button ${name} clicked. you should define form onButtonClick`);\r\n            return;\r\n        }\r\n        let ret = await onButtonClick(name, this.context);\r\n        if (ret === undefined) return;\r\n        this.context.setError(name, ret);\r\n    }\r\n\r\n    private observerRender = observer(() => {\r\n        let {name, type} = this.itemSchema;\r\n        let Templet:TempletType, cn:string, label:string;\r\n        if (this.ui !== undefined) {\r\n            let {widget:widgetType} = this.ui;\r\n            if (widgetType !== 'button') return Unknown(type, widgetType, ['button']);\r\n            Templet = this.ui.Templet;\r\n            cn = this.ui.className;\r\n            label = this.ui.label;\r\n        }\r\n        let {form, hasError} = this.context;\r\n        let context = this.context;\r\n        let disabled = type==='submit' && hasError;\r\n        let content:any;\r\n        if (this.children !== undefined) content = this.children;\r\n        else if (typeof Templet === 'function') content = Templet();\r\n        else if (Templet !== undefined) content = Templet;\r\n        else content = label; \r\n        let button = <button \r\n            className={cn} \r\n            type=\"button\"\r\n            disabled={disabled}\r\n            onClick={this.onClick}>\r\n            {content || name}\r\n        </button>;\r\n        if (context.inNode === true) return <>{button}{this.renderErrors()}</>;\r\n        return <div className={form.ButtonClass}>\r\n            <div>{this.renderErrors()}</div>\r\n            {button}\r\n        </div>;\r\n    });\r\n    \r\n    render() {\r\n        return <this.observerRender />\r\n    }\r\n\r\n    renderContainer():JSX.Element {\r\n        if (this.visible === false) return null;        \r\n        let {form, inNode} = this.context;\r\n        if (inNode === true) return this.render();\r\n        return form.FieldContainer(null, this.render());\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\n//import { ArrRow } from '../arrRow';\r\nimport { Context, RowContext, ContextContainer } from '../context';\r\nimport { ArrSchema } from '../../schema';\r\nimport { UiArr, TempletType } from '../../schema';\r\nimport { Unknown } from './unknown';\r\nimport { factory } from './factory';\r\n\r\nexport const ArrComponent = observer((\r\n    {parentContext, arrSchema, children}:{parentContext: Context, arrSchema: ArrSchema, children: React.ReactNode}) => \r\n{\r\n    let {name, arr} = arrSchema;\r\n    let data = parentContext.initData[name] as any[];\r\n    let {form} = parentContext;\r\n    let arrRowContexts = parentContext.getArrRowContexts(name);\r\n    let ui = parentContext.getUiItem(name) as UiArr;\r\n    let arrLabel = name;\r\n    let Templet:TempletType;\r\n    let selectable:boolean, deletable:boolean, restorable:boolean;\r\n    let {ArrContainer, RowContainer, RowSeperator, uiSchema} = form;\r\n    if (uiSchema !== undefined) {\r\n        let {selectable:formSelectable, deletable:formDeletable, restorable:formRestorable} = uiSchema;\r\n        if (selectable !== true) selectable = formSelectable;\r\n        if (deletable !== true) deletable = formDeletable;\r\n        if (restorable !== true) restorable = formRestorable;\r\n    }\r\n    if (ui !== undefined) {\r\n        let {widget:widgetType, label, \r\n            selectable:arrSelectable, deletable:arrDeletable, restorable:arrRestorable,\r\n            ArrContainer:ac, RowContainer:rc, RowSeperator:rs\r\n        } = ui;\r\n        if (arrSelectable !== undefined) selectable = arrSelectable;\r\n        if (arrDeletable !== undefined) deletable = arrDeletable;\r\n        if (arrRestorable !== undefined) restorable = arrRestorable;\r\n        if (ac !== undefined) ArrContainer = ac;\r\n        if (rc !== undefined) RowContainer = rc;\r\n        if (rs !== undefined) RowSeperator = rs;\r\n        Templet = ui.Templet;\r\n        if (widgetType !== 'arr') return Unknown(arrSchema.type, widgetType, ['arr']);\r\n        arrLabel = label || arrLabel;\r\n    }\r\n    let first = true;\r\n    return ArrContainer(arrLabel, <>\r\n        {data.map((row:any, index) => {\r\n            let rowContext: RowContext;\r\n            let rowContent: JSX.Element;\r\n            let sep = undefined;\r\n            if (first === false) sep = RowSeperator;\r\n            else first = false;\r\n            if (children !== undefined) {\r\n                rowContext = new RowContext(parentContext, arrSchema, row, true);\r\n                rowContent = <>{children}</>;\r\n            }\r\n            else {\r\n                let typeofTemplet = typeof Templet;\r\n                if (typeofTemplet === 'function') {\r\n                    rowContext = new RowContext(parentContext, arrSchema, row, true);\r\n                    rowContent = React.createElement(observer(Templet as React.StatelessComponent), row);\r\n                }\r\n                else if (typeofTemplet === 'object') {\r\n                    rowContext = new RowContext(parentContext, arrSchema, row, true);\r\n                    rowContent = Templet as JSX.Element;\r\n                }\r\n                else {\r\n                    rowContext = new RowContext(parentContext, arrSchema, row, false);\r\n                    rowContent = <>{\r\n                        arr.map((v, index) => {\r\n                            return <React.Fragment key={v.name}>\r\n                                {factory(rowContext, v, undefined)}\r\n                            </React.Fragment>\r\n                        })}\r\n                    </>;\r\n                }\r\n            }\r\n            let {rowKey} = rowContext;\r\n            arrRowContexts[rowKey] = rowContext;\r\n\r\n            let selectCheck:JSX.Element, deleteIcon:JSX.Element;\r\n            if (selectable === true) {\r\n                let onClick = (evt: React.MouseEvent<HTMLInputElement>)=>{\r\n                    let {checked} = (evt.target as HTMLInputElement);\r\n                    row.$isSelected = checked;\r\n                    let {$source} = row;\r\n                    if ($source !== undefined) $source.$isSelected = checked;\r\n                    rowContext.removeErrors();\r\n                }\r\n                selectCheck = <div className=\"form-row-checkbox\">\r\n                    <input type=\"checkbox\" onClick={onClick} defaultChecked={row.$isSelected} />\r\n                </div>;\r\n            }\r\n            let isDeleted = !(row.$isDeleted===undefined || row.$isDeleted===false);\r\n            if (deletable === true) {\r\n                let icon = isDeleted? 'fa-undo' : 'fa-trash';\r\n                let onDelClick = () => {\r\n                    if (restorable === true) {\r\n                        row.$isDeleted = !isDeleted;\r\n                        let {$source} = row;\r\n                        if ($source !== undefined) $source.$isDeleted = !isDeleted;\r\n                    }\r\n                    else {\r\n                        let p = data.indexOf(row);\r\n                        if (p>=0) data.splice(p, 1);\r\n                    }\r\n                    rowContext.removeErrors();\r\n                }\r\n                deleteIcon = <div className=\"form-row-edit text-info\" onClick={onDelClick}>\r\n                    <i className={classNames('fa', icon, 'fa-fw')} />\r\n                </div>;\r\n            }\r\n            let editContainer = selectable===true || deletable===true?\r\n                (content:any) => <fieldset disabled={isDeleted}><div className={classNames('d-flex', {'deleted':isDeleted, 'row-selected':row.$isSelected})}>\r\n                    {selectCheck}<div className=\"flex-grow-1\">{content}</div>{deleteIcon}\r\n                </div></fieldset>\r\n                :\r\n                (content:any) => content;\r\n\r\n            return <ContextContainer.Provider key={rowKey} value={rowContext}>\r\n                {sep}\r\n                {RowContainer(editContainer(<><rowContext.renderErrors />{rowContent}</>))}\r\n            </ContextContainer.Provider>;\r\n        })}\r\n    </>);\r\n});\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiImageItem } from '../../schema';\r\nimport { Image } from '../../image';\r\nimport { ImageItemEdit } from '../../edit/imageItemEdit';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\n\r\nexport class ImageWidget extends Widget {\r\n    protected input: HTMLInputElement;\r\n    protected ui: UiImageItem;\r\n    @observable private imageSrc: string;\r\n\r\n    protected init() {\r\n        super.init();\r\n        this.imageSrc = this.value;\r\n    }\r\n\r\n    protected onClick = async () => {\r\n        let edit = new ImageItemEdit(this.itemSchema, this.ui, this.ui.label, this.value);\r\n        let ret = await edit.start();\r\n        if (ret !== null) {\r\n            this.setValue(ret);\r\n            this.imageSrc = ret;\r\n        }\r\n        await edit.end();\r\n    }\r\n\r\n    render() {\r\n        return <this.observerRender />;\r\n    }\r\n\r\n    private observerRender = observer(() => {\r\n        let cn = [\r\n            'bg-white p-1 d-flex justify-content-center',\r\n        ];\r\n        let onClick: any;\r\n        if (!this.readOnly && !this.disabled) {\r\n            cn.push('cursor-pointer');\r\n            onClick = this.onClick;\r\n        }\r\n        return <div className={classNames(cn)} onClick={onClick}>\r\n            <Image src={this.imageSrc} className=\"w-4c h-4c\"/>\r\n        </div>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport { Schema, ArrSchema, DataType, ButtonSchema, ItemSchema } from '../../schema';\r\nimport { UiItem, UiArr, UiType, UiButton, TempletType, TypeWidget, UiCustom } from '../../schema';\r\nimport { TextWidget } from './textWidget';\r\nimport { TextAreaWidget } from './textareaWidget';\r\nimport { PasswordWidget, UrlWidget, EmailWidget } from './passwordWidget';\r\nimport { UpdownWidget } from './updownWidget';\r\nimport { NumberWidget } from './numberWidget';\r\nimport { DateWidget, DateTimeWidget, TimeWidget, MonthWidget } from './dateWidget';\r\nimport { CheckBoxWidget } from './checkBoxWidget';\r\nimport { FieldProps } from '../field';\r\nimport { Context, RowContext, FormContext, ContextContainer } from '../context';\r\nimport { SelectWidget } from './selectWidget';\r\nimport { RadioWidget } from './radioWidget';\r\nimport { RangeWidget } from './rangeWidget';\r\nimport { IdWidget } from './idWidget';\r\nimport { ButtonWidget } from './buttonWidget';\r\nimport { ArrComponent } from './arrComponent';\r\nimport { ImageWidget } from './imageWidget';\r\n\r\nconst widgetsFactory: {[type: string]: {widget?: TypeWidget, dataTypes?: DataType[]}} = {\r\n    id: {\r\n        dataTypes: ['id'],\r\n        widget: IdWidget,\r\n    },\r\n    text: {\r\n        dataTypes: ['integer', 'number', 'string'],\r\n        widget: TextWidget\r\n    },\r\n    textarea: {\r\n        dataTypes: ['string'],\r\n        widget: TextAreaWidget\r\n    },\r\n    password: {\r\n        dataTypes: ['string'],\r\n        widget: PasswordWidget\r\n    },\r\n    date: {\r\n        dataTypes: ['date'],\r\n        widget: DateWidget\r\n    },\r\n    datetime: {\r\n        dataTypes: ['date'],\r\n        widget: DateTimeWidget\r\n    },\r\n    time: {\r\n        dataTypes: ['date'],\r\n        widget: TimeWidget\r\n    },\r\n    month: {\r\n        dataTypes: ['date'],\r\n        widget: MonthWidget\r\n    },\r\n    select: {\r\n        dataTypes: ['integer', 'number', 'string', 'date', 'boolean'],\r\n        widget: SelectWidget\r\n    },\r\n    url: {\r\n        dataTypes: ['string'],\r\n        widget: UrlWidget\r\n    },\r\n    email: {\r\n        dataTypes: ['string'],\r\n        widget: EmailWidget\r\n    },\r\n    number: {\r\n        dataTypes: ['integer', 'number'],\r\n        widget: NumberWidget\r\n    },\r\n    updown: {\r\n        dataTypes: ['integer', 'number'],\r\n        widget: UpdownWidget\r\n    },\r\n    color: {\r\n\r\n    },\r\n    checkbox: {\r\n        dataTypes: ['boolean', 'integer', 'number'],\r\n        widget: CheckBoxWidget\r\n    },\r\n    image: {\r\n        dataTypes: ['string'],\r\n        widget: ImageWidget,\r\n    },\r\n    checkboxes: {\r\n\r\n    },\r\n    radio: {\r\n        dataTypes: ['integer', 'number', 'string', 'date', 'boolean'],\r\n        widget: RadioWidget\r\n    },\r\n    range: {\r\n        dataTypes: ['integer'],\r\n        widget: RangeWidget,\r\n    },\r\n    button: {\r\n        dataTypes: ['button', 'submit'],\r\n        widget: ButtonWidget,\r\n    }\r\n}\r\n\r\nexport function factory(context: Context, itemSchema: ItemSchema, children:React.ReactNode, fieldProps?: FieldProps):JSX.Element {\r\n    if (context === undefined) {\r\n        debugger;\r\n        return null;\r\n    }\r\n    if (itemSchema === undefined) return undefined;\r\n    let {name, type} = itemSchema;\r\n    switch (type) {\r\n    case 'arr':\r\n        let arrSchema = context.getItemSchema(name) as ArrSchema;\r\n        return <ArrComponent parentContext={context} arrSchema={arrSchema} children={children} />;\r\n    default:\r\n        break;\r\n    }\r\n\r\n    let typeWidget: TypeWidget;\r\n    let ui = context.getUiItem(name);\r\n    function getTypeWidget(t:DataType): TypeWidget {\r\n        switch(t) {\r\n        default: return TextWidget; \r\n        case 'id': return IdWidget;\r\n        case 'integer': return UpdownWidget;\r\n        case 'number': return NumberWidget; \r\n        case 'string': return TextWidget; \r\n        case 'date': return DateWidget; \r\n        case 'boolean': return CheckBoxWidget; \r\n        case 'button':\r\n        case 'submit': return ButtonWidget;\r\n        }\r\n    }\r\n    if (ui === undefined) { \r\n        typeWidget = getTypeWidget(type);\r\n    }\r\n    else {\r\n        let {widget:widgetType} = ui;\r\n        switch (widgetType) {\r\n        default:\r\n            if (widgetType !== undefined) {\r\n                let widgetFactory = widgetsFactory[widgetType];\r\n                typeWidget = widgetFactory.widget;\r\n            }\r\n            if (typeWidget === undefined) typeWidget = getTypeWidget(type);\r\n            break;\r\n        case 'custom':\r\n            typeWidget = (ui as UiCustom).WidgetClass;\r\n            break;\r\n        case 'group':\r\n            return <span>impletment group</span>;\r\n        }\r\n        //label = uiLabel || name;\r\n    }\r\n    \r\n    let {isRow, widgets} = context;\r\n    let widget = new typeWidget(context, itemSchema, fieldProps, children);\r\n    widgets[name] = widget;\r\n\r\n    if (isRow === false) {\r\n        let WidgetElement = observer(() => widget.renderContainer());\r\n        return <WidgetElement />;\r\n    }\r\n    else {\r\n        let widgetElement = widget.renderContainer();\r\n        return widgetElement;\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiTextAreaItem } from '../../schema';\r\nimport { StringSchema } from '../../schema';\r\n\r\nexport class TextAreaWidget extends Widget {\r\n    protected itemSchema: StringSchema;\r\n    protected input: HTMLTextAreaElement;\r\n    protected ui: UiTextAreaItem;\r\n\r\n    protected setElementValue(value:any) {this.input.value = value}\r\n    protected onInputChange = (evt: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        this.setValue(evt.currentTarget.value);\r\n    }\r\n\r\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\r\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\r\n\r\n    render() {\r\n        let renderTemplet = this.renderTemplet();\r\n        if (renderTemplet !== undefined) return renderTemplet;\r\n        let cn = {};\r\n        if (this.hasError === true) {\r\n            cn['is-invalid'] = true;\r\n        }\r\n        else {\r\n            cn['required-item'] = this.itemSchema.required === true;\r\n        }\r\n        return <textarea ref={(input) => this.input=input} \r\n            className={classNames(this.className, cn)}\r\n            rows={this.ui && this.ui.rows}\r\n            maxLength={this.itemSchema.maxLength}\r\n            defaultValue={this.defaultValue} onChange={this.onInputChange} />\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { TextWidget } from './textWidget';\r\n\r\nexport class PasswordWidget extends TextWidget {\r\n    protected inputType = 'password';\r\n}\r\n\r\nexport class UrlWidget extends TextWidget {\r\n    protected inputType = 'url';\r\n}\r\n\r\nexport class EmailWidget extends TextWidget {\r\n    protected inputType = 'email';\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { TextWidget } from './textWidget';\r\nimport { Widget } from './widget';\r\nimport { UiRadio } from '../../schema';\r\nimport { RowContext } from '../context';\r\n\r\n\r\n//const radioStyle:React.CSSProperties = {width:'2em', height:'1.2em'};\r\nexport class RadioWidget extends Widget {\r\n    protected inputs: {[index:number]: HTMLInputElement} = {};\r\n    protected ui: UiRadio;\r\n\r\n    protected setElementValue(value:any) {\r\n        for (let i in this.inputs) {\r\n            let input = this.inputs[i];\r\n            input.checked = value === input.value;\r\n        }\r\n    }\r\n    setReadOnly(value:boolean) {\r\n        this.readOnly = value;\r\n        for (let i in this.inputs) this.inputs[i].readOnly = value;\r\n    }\r\n    setDisabled(value:boolean) {\r\n        this.disabled = value;\r\n        for (let i in this.inputs) this.inputs[i].disabled = value\r\n    }\r\n\r\n    render() {\r\n        let {defaultValue, list} = this.ui;\r\n        let {isRow, inNode} = this.context;\r\n        let rowKey:number;\r\n        if (isRow === true) {\r\n            rowKey = (this.context as RowContext).rowKey;\r\n        }\r\n        let cn = classNames(this.className, 'form-radio-inline');\r\n        return <span className={cn}>\r\n                {list.map((v,index) => {\r\n                    let {value, title} = v;\r\n                    let name = this.name;\r\n                    if (rowKey !== undefined) name += '-' + rowKey;\r\n                    return <label key={index} className=\"form-radio-inline\">\r\n                        <input ref={input=>this.inputs[index]=input} type=\"radio\" name={name}\r\n                            value={value} defaultChecked={(this.defaultValue || defaultValue)===value} />\r\n                        {title || value}\r\n                    </label>;\r\n                    //</span>\r\n                })}\r\n            </span>;\r\n    }\r\n}\r\n/*\r\n<div className=\"form-control d-flex border-0\"><input\r\nref={(input)=>this.input = input}\r\nclassName={classNames(this.className, 'align-self-center')}\r\ntype=\"checkbox\"\r\nstyle={{maxHeight:\"1.2em\"}}\r\ndefaultValue={this.defaultValue} \r\nonChange={this.onChange} />\r\n</div>\r\n*/","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { UiRange } from '../../schema';\r\nimport { Widget } from './widget';\r\n\r\nexport class RangeWidget extends Widget {\r\n    protected inputType = 'range';\r\n    protected input: HTMLInputElement;\r\n    protected ui: UiRange;\r\n\r\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\r\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\r\n\r\n    render() {\r\n        let {min, max, step} = this.ui;\r\n        return <><input ref={input=>this.input = input}\r\n            className={classNames(this.className, 'form-control', 'w-min-6c')}\r\n            type={this.inputType}\r\n            defaultValue={this.defaultValue} \r\n            onChange={this.onInputChange}\r\n            max={max}\r\n            min={min}\r\n            step={step}\r\n            />\r\n        </>;\r\n    }\r\n}\r\n","export { factory } from './factory';\r\nexport { Widget } from './widget';\r\nexport { TextWidget } from './textWidget';\r\nexport { TextAreaWidget } from './textareaWidget';\r\nexport { PasswordWidget, UrlWidget, EmailWidget } from './passwordWidget';\r\nexport { UpdownWidget } from './updownWidget';\r\nexport { NumberWidget } from './numberWidget';\r\nexport { DateWidget, DateTimeWidget, TimeWidget, MonthWidget } from './dateWidget';\r\nexport { CheckBoxWidget } from './checkBoxWidget';\r\nexport { ImageWidget } from './imageWidget';\r\nexport { Context, RowContext, FormContext, ContextContainer } from '../context';\r\nexport { SelectWidget } from './selectWidget';\r\nexport { RadioWidget } from './radioWidget';\r\nexport { RangeWidget } from './rangeWidget';\r\nexport { IdWidget } from './idWidget';\r\nexport { ButtonWidget } from './buttonWidget';\r\nexport { Unknown } from './unknown';\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Page } from 'tonva-tools';\r\nimport { List, Muted, LMR } from 'tonva-react-form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../entities';\r\nimport { CSheet, SheetUI } from './cSheet';\r\n\r\nexport class VSheetMain extends VEntity<Sheet, SheetUI, CSheet> {\r\n    async open() {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    newClick = () => this.event('new');\r\n    schemaClick = () => this.event('schema'); \r\n    archivesClick = () => this.event('archives');\r\n    sheetStateClick = (state) => this.event('state', state);\r\n\r\n    renderState = (item:any, index:number) => {\r\n        let {state, count} = item;\r\n        if (count === 0) return null;\r\n        let badge = <span className=\"badge badge-success ml-5 align-self-end\">{count}</span>;\r\n        return <LMR className=\"px-3 py-2\" left={this.controller.getStateLabel(state)} right={badge} />;\r\n    }\r\n\r\n    protected view = observer(() => {\r\n        let list = this.controller.statesCount.filter(row=>row.count);\r\n        let right = <button className=\"btn btn-outline-primary\" onClick={this.archivesClick}>已归档</button>;\r\n        let templet:any;\r\n        if (this.isDev === true) {\r\n            templet = <button className=\"btn btn-primary mr-2\" color=\"primary\" onClick={this.schemaClick}>模板</button>;\r\n        }\r\n        return <Page header={this.label}>\r\n            <LMR\r\n                className=\"mx-3 my-2\"\r\n                right={right}>\r\n                <button className=\"btn btn-primary mr-2\" color=\"primary\" onClick={this.newClick}>新建</button>\r\n                {templet}\r\n            </LMR>\r\n            <List className=\"my-2\"\r\n                header={<Muted className=\"mx-3 my-1\">待处理{this.label}</Muted>}\r\n                none=\"[ 无 ]\"\r\n                items={list}\r\n                item={{render:this.renderState, onClick:this.sheetStateClick}} />\r\n        </Page>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport { FA } from 'tonva-react-form';\r\nimport { Sheet } from '../../entities';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { SheetUI, CSheet } from './cSheet';\r\n\r\nexport class VSheetNew extends VEntity<Sheet, SheetUI, CSheet> {\r\n    vForm: VForm;\r\n\r\n    async open(param?:any) {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    private onSubmit = async ():Promise<void> => {\r\n        let values = this.vForm.getValues();\r\n        let valuesWithBox = this.vForm.values;\r\n        //let ret = \r\n        await this.controller.onSave(values, valuesWithBox);\r\n        /*\r\n        this.ceasePage();\r\n        //this.openPage(this.finishedPage);\r\n        await this.controller.showSaved(ret);\r\n        */\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render()}\r\n    </Page>;\r\n}\r\n","import * as React from 'react';\r\nimport {List, Muted, LMR, EasyDate, FA} from 'tonva-react-form';\r\nimport { Sheet } from '../../entities';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CSheet, SheetUI, SheetData } from './cSheet';\r\n\r\nconst leftFlowStyle = {width: '8rem'};\r\n\r\nexport abstract class VSheetView extends VEntity<Sheet, SheetUI, CSheet> {\r\n    protected vForm: VForm;\r\n    protected sheetData: SheetData;\r\n    //data: any;\r\n    //state: string;\r\n    //flows:any[];\r\n\r\n    flowRow = (item:any, index:number):JSX.Element => {\r\n        let {date, user, preState, state, action} = item;\r\n        if (action === undefined) action = <><FA className=\"text-primary\" name=\"pencil-square-o\" /> 制单</>;\r\n        let to;\r\n        switch (state) {\r\n            case '$': break;\r\n            case '#': to = <><FA className=\"text-success\" name=\"file-archive-o\" /></>; break;\r\n            default: to = <><FA className=\"text-muted\" name=\"arrow-right\" /> &nbsp; {state}</>; break;\r\n        }\r\n        /*\r\n        return <div className=\"row\">\r\n            <div className=\"col-sm\"></div>\r\n            <div className=\"col-sm\"><div className=\"p-2\">{to}</div></div>\r\n            <div className=\"col-sm text-right\"><div className=\"p-2\"><Muted><EasyDate date={date} /></Muted></div></div>\r\n        </div>;\r\n        */\r\n        return <LMR \r\n            left={<div className=\"pl-3 py-2\" style={leftFlowStyle}>{action}</div>}\r\n            right={<div className=\"p-2\"><Muted><EasyDate date={date} /></Muted></div>}>\r\n            <div className=\"p-2\">{to}</div>\r\n        </LMR>;\r\n    }\r\n\r\n    protected sheetView = () => {\r\n        let {brief, flows} = this.sheetData;\r\n        let removed;\r\n        if (brief.state === '-')\r\n            removed = <div className=\"mx-3 my-2\" style={{color:'red'}}>本单据作废</div>;\r\n        return <div>\r\n            {removed}\r\n            {this.vForm.render()}\r\n    \r\n            <List header={<Muted className=\"mx-3 my-1\">流程</Muted>}\r\n                items={flows}\r\n                item={{render:this.flowRow}}/>\r\n        </div>;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport { VForm, FormMode } from '../form';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\n\r\nexport class VSheetEdit extends VSheetView { //VEntity<Sheet, SheetUI, CSheet> {\r\n    protected sheetData: SheetData;\r\n    async open(param: SheetData) {\r\n        this.sheetData = param;\r\n        this.vForm = this.createForm(this.onSubmit, param.data, FormMode.edit);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSubmit = async ():Promise<void> => {\r\n        let values = this.vForm.getValues();\r\n        await this.controller.saveSheet(values, this.vForm.values);\r\n        this.closePage();\r\n        this.returnCall(this.vForm.values);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render()}\r\n    </Page>;\r\n}\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport { nav, Page } from 'tonva-tools';\r\nimport { FA } from 'tonva-react-form';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\n\r\nexport class VSheetAction extends VSheetView { \r\n    async open(sheetData:SheetData) {\r\n        this.sheetData = sheetData;\r\n        //let {brief, data, flows} = await this.controller.getSheetData(sheetId);\r\n        //this.brief = brief;\r\n        //this.flows = flows;\r\n        //this.data = data;\r\n        //this.state = this.brief.state;\r\n        this.vForm = this.createForm(undefined, sheetData.data);\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    actionClick = async (action:any) => {\r\n        let {id, flow, state} = this.sheetData.brief;\r\n        let res = await this.controller.action(id, flow, state, action.name);\r\n        this.ceasePage();\r\n        this.openPage(this.acted);\r\n        //alert(jsonStringify(res));\r\n        //await this.backPage();\r\n    }\r\n\r\n    deleteClick = async () => {\r\n        alert('单据作废：程序正在设计中');\r\n    }\r\n\r\n    editClick = async () => {\r\n        //alert('修改单据：程序正在设计中');\r\n        let values = await this.controller.editSheet(this.sheetData);\r\n        this.vForm.setValues(values);\r\n    }\r\n\r\n    protected page = () => {\r\n        let {brief} = this.sheetData;\r\n        let {state, no} = brief;\r\n        let stateLabel = this.controller.getStateLabel(state);\r\n        let {states} = this.entity;\r\n        let s = states.find(v => v.name === state);\r\n        let actionButtons, startButtons;\r\n        if (s === undefined) {\r\n            let text:string, cn:string;\r\n            switch (state) {\r\n                default:\r\n                    text = '不认识的单据状态\\'' + state + '\\'';\r\n                    cn = 'text-info';\r\n                    break;\r\n                case '-': \r\n                    text = '已作废';\r\n                    cn = 'text-danger';\r\n                    break;\r\n                case '#':\r\n                    text = '已归档';\r\n                    cn = 'text-success';\r\n                    break;\r\n            }\r\n            actionButtons = <div className={classNames(cn)}>[{text}]</div>;\r\n        }\r\n        else {\r\n            actionButtons = <div className=\"flex-grow-1\">{s.actions.map((v,index) => \r\n                <button\r\n                    key={index}\r\n                    className=\"btn btn-primary mr-2\"\r\n                    onClick={()=>this.actionClick(v)}\r\n                >\r\n                    {this.controller.getActionLabel(state, v.name)}\r\n                </button>)}\r\n            </div>;\r\n            if (state === '$') {\r\n                startButtons = <div>\r\n                    <button className=\"btn btn-outline-info ml-2\" onClick={this.editClick}>修改</button>\r\n                    <button className=\"btn btn-outline-danger ml-2\" onClick={this.deleteClick}>作废</button>\r\n                </div>\r\n            }\r\n        };\r\n        return <Page header={this.label + ':' + stateLabel + '-' + no}>\r\n            <div className=\"mb-2\">\r\n                <div className=\"d-flex px-3 py-2 border-bottom bg-light\">\r\n                    {actionButtons}\r\n                    {startButtons}\r\n                </div>\r\n                <this.sheetView />\r\n            </div>\r\n        </Page>;\r\n    }\r\n\r\n    private acted = () => {\r\n        let {discription} = this.sheetData.brief;\r\n        return <Page header=\"已处理\" back=\"close\">\r\n            <div className=\"p-3 d-flex flex-column align-items-center\">\r\n                <div className=\"p-3\">{discription}</div>\r\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已处理！</div>\r\n                <div className=\"p-3\">\r\n                    <button className=\"btn btn-outline-info\" onClick={()=>this.backPage()}>返回</button>\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../entities';\r\nimport { SheetUI, CSheet } from './cSheet';\r\n\r\nexport class VSheetSchema extends VEntity<Sheet, SheetUI, CSheet> {\r\n    async open(param?:any) {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label + \"模板\"}>\r\n        <pre className=\"mx-3 my-2\">{this.entity.schemaStringify()}</pre>\r\n    </Page>;\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport {List, LMR, FA, EasyDate, Muted} from 'tonva-react-form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../entities';\r\nimport { SheetUI, CSheet } from './cSheet';\r\n\r\nexport class VArchives extends VEntity<Sheet, SheetUI, CSheet> {\r\n    list: any[];\r\n\r\n    async open() {\r\n        this.list = await this.entity.getArchives(undefined, 10);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    archiveClick = async (brief:any) => {\r\n        if (brief.processing===1) return;\r\n        this.event('archived', brief);\r\n    }\r\n    archiveRow = (row:any, index:number) => {\r\n        let {id, no, discription, date} = row;\r\n        let left = <>\r\n            {row.processing===1? '... ' : ''}\r\n            {row.no} &nbsp; {row.discription}\r\n        </>;\r\n        let right = <Muted><EasyDate date={date} /></Muted>;\r\n        return <LMR className=\"px-3 py-2\" left={left} right={right} />\r\n    }\r\n\r\n    protected view = () => {\r\n        return <Page header={'已归档' + this.label}>\r\n            <List items={this.list} item={{render:this.archiveRow, onClick:this.archiveClick}} />\r\n        </Page>;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { Page, nav } from 'tonva-tools';\r\nimport { List, Muted, FA, LMR, EasyDate } from 'tonva-react-form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../entities';\r\nimport { CSheet, SheetUI } from './cSheet';\r\n\r\nexport class VSheetList extends VEntity<Sheet, SheetUI, CSheet> {\r\n    protected row: (values) => JSX.Element;\r\n    stateName: string;\r\n    stateLabel: string;\r\n\r\n    async open(item:any) {\r\n        this.row = this.ui.listRow || this.rowContent;\r\n        this.stateName = item.state;\r\n        this.stateLabel = this.controller.getStateLabel(this.stateName);\r\n        //await this.controller.getStateSheets(this.stateName, 0, 10);\r\n        await this.controller.pageStateItems.first(this.stateName);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    rowClick = async (brief:any) => {\r\n        if (brief.processing===1) {\r\n            this.event('processing', brief.id);\r\n            return;\r\n        }\r\n        this.event('action', brief.id);\r\n    }\r\n\r\n    private onScrollBottom = () => {\r\n        console.log('onScrollBottom');\r\n        this.controller.pageStateItems.more();\r\n    }\r\n\r\n    protected rowContent = (row:any):JSX.Element => {\r\n        let {id, no, discription, date, processing} = row;\r\n        let left = <>            \r\n            {no} &nbsp; <Muted>{discription}</Muted> {processing===1? '...' : ''}\r\n        </>;\r\n        let right = <Muted><EasyDate date={date} /></Muted>;\r\n        return <LMR className=\"px-3 py-2\" left={left} right={right} />;\r\n    }\r\n\r\n    private renderRow = (row:any, index:number) => <this.row {...row} />\r\n\r\n    protected view = () => {\r\n        //let sheets = this.controller.stateSheets;\r\n        let {pageStateItems} = this.controller;\r\n        return <Page header={this.label + ' - ' + this.stateLabel} onScrollBottom={this.onScrollBottom}>\r\n            <List items={pageStateItems} item={{render:this.renderRow, onClick:this.rowClick}} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {Page} from 'tonva-tools';\r\nimport { VSheetView } from './vSheetView';\r\nimport { CSheet, SheetUI, SheetData } from './cSheet';\r\n\r\nexport interface State {\r\n    flows: any;\r\n    data: any;\r\n}\r\nexport class VArchived extends VSheetView {\r\n    //protected controller: CSheet;\r\n    //brief: any;\r\n\r\n    async open(sheetData:SheetData) {\r\n        this.sheetData = sheetData;\r\n        /*\r\n        let {brief, data, flows} = await this.controller.getArchived(inBrief.id);\r\n        this.brief = brief;\r\n        this.data = data;\r\n        this.flows = flows;\r\n        */\r\n        this.vForm = this.createForm(undefined, this.sheetData.data);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => {\r\n        let {brief} = this.sheetData;\r\n        return <Page header={this.label + ':' + '-' + brief.no}>\r\n            <this.sheetView />\r\n        </Page>;\r\n    };\r\n}\r\n","import { Sheet } from \"../../entities\";\r\nimport { SheetUI, CSheet } from \"./cSheet\";\r\nimport { VEntity } from \"../CVEntity\";\r\n\r\nexport abstract class VSheet extends VEntity<Sheet, SheetUI, CSheet> {\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport { FA } from 'tonva-react-form';\r\nimport { VSheet } from \"./vSheet\";\r\n\r\nexport class VSheetSaved extends VSheet {\r\n    private brief: any;\r\n    async open(brief?:any) {\r\n        this.brief = brief;\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    private restart = async () => {\r\n        this.ceasePage();\r\n        await this.event('new');\r\n    }\r\n\r\n    actionClick = async (action:any) => {\r\n        this.ceasePage();\r\n        let {id, flow, state} = this.brief;\r\n        let res = await this.controller.action(id, flow, state, action.name);\r\n        this.openPage(this.acted);\r\n    }\r\n\r\n    private buttons = <>\r\n        <button className=\"btn btn-outline-primary mr-3\" onClick={this.restart}>继续开单</button>\r\n        <button className=\"btn btn-outline-info\" onClick={()=>this.backPage()}>返回</button>\r\n    </>;\r\n\r\n    private view = () => {\r\n        let {states} = this.entity;\r\n        const state = '$';\r\n        let s = states.find(v => v.name === state);\r\n        let actionButtons = <>{s.actions.map((v,index) => \r\n            <button\r\n                key={index}\r\n                className=\"btn btn-primary mr-3\"\r\n                onClick={()=>this.actionClick(v)}\r\n            >\r\n                {this.controller.getActionLabel(state, v.name)}\r\n            </button>)}\r\n        </>;\r\n        return <Page header=\"已保存\" back=\"close\">\r\n            <div className=\"p-3 d-flex flex-column align-items-center\">\r\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已保存！系统尚未处理</div>\r\n                <div className=\"p-3\">\r\n                    {actionButtons}\r\n                    {this.buttons}\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    }\r\n\r\n    private acted = () => {\r\n        return <Page>\r\n            <div className=\"p-3 d-flex flex-column align-items-center\">\r\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已处理！</div>\r\n                <div className=\"p-3\">\r\n                    {this.buttons}\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { nav, Page } from 'tonva-tools';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\n\r\nexport class VSheetProcessing extends VSheetView { \r\n    async open(sheetData:SheetData) {\r\n        this.sheetData = sheetData;\r\n        //let {brief, data, flows} = await this.controller.getSheetData(sheetId);\r\n        //this.brief = brief;\r\n        //this.flows = flows;\r\n        //this.data = data;\r\n        //this.state = this.brief.state;\r\n        this.vForm = this.createForm(undefined, sheetData.data);\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    protected page = () => {\r\n        let {brief} = this.sheetData;\r\n        let {state, no} = brief;\r\n        let stateLabel = this.controller.getStateLabel(state);\r\n        return <Page header={this.label + ':' + stateLabel + '-' + no}>\r\n            <div className=\"mb-2\">\r\n                <div className=\"d-flex px-3 py-2 border-bottom bg-light\">\r\n                    正在处理中...\r\n                </div>\r\n                <this.sheetView />\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n","import { IObservableArray, observable } from \"mobx\";\r\nimport { TypeVPage, VPage, PageItems, postWsToTop } from 'tonva-tools';\r\nimport { Sheet, StateCount } from \"../../entities\";\r\nimport { CEntity, EntityUI, VEntity } from \"../CVEntity\";\r\nimport { VSheetMain } from \"./vMain\";\r\nimport { VSheetNew } from \"./vNew\";\r\nimport { VSheetEdit } from \"./vEdit\";\r\nimport { VSheetAction } from \"./vSheetAction\";\r\nimport { VSheetSchema } from \"./vSchema\";\r\nimport { VArchives } from \"./vArchives\";\r\nimport { VSheetList } from \"./vList\";\r\nimport { VArchived } from \"./vArchived\";\r\nimport { VSheetSaved } from \"./vSaved\";\r\nimport { VSheetProcessing } from \"./vSheetProcessing\";\r\n\r\nexport interface SheetActionUI {\r\n    label: string;\r\n}\r\n\r\nexport interface StateUI {\r\n    label: string;\r\n    actions: {[name:string]: SheetActionUI}\r\n}\r\n\r\nexport interface SheetUI extends EntityUI {\r\n    CSheet?: typeof CSheet;\r\n    states?: {[name:string]: StateUI};\r\n    main?: TypeVPage<CSheet>;\r\n    sheetNew?: TypeVPage<CSheet>;\r\n    sheetSaved?: TypeVPage<CSheet>;\r\n    sheetEdit?: TypeVPage<CSheet>;\r\n    sheetAction?: TypeVPage<CSheet>;\r\n    listRow?: (row:any) => JSX.Element;\r\n    sheetTitle?: (sheetValues:any, x:any) => string;      // 返回单据的描述\r\n}\r\n\r\nexport interface SheetData {\r\n    brief: any;\r\n    data: any;\r\n    flows: any[];\r\n}\r\n\r\nexport class CSheet extends CEntity<Sheet, SheetUI> {\r\n    statesCount:IObservableArray<StateCount> = observable.array<StateCount>([], {deep:true});\r\n    curState:string;\r\n    pageStateItems: PageItems<any>;\r\n\r\n    protected async internalStart() {\r\n        await this.loadStateSheetCount();\r\n        this.pageStateItems = this.entity.createPageStateItems();\r\n        await this.openVPage(this.VSheetMain);\r\n    }\r\n\r\n    protected async onMessage(msg: any):Promise<void> {\r\n        let {type, body, from, to, push} = msg;\r\n        if (type === 'sheet') this.onSheet(from, to, body);\r\n    }\r\n    private onSheet(from:number, to:number[], sheetData:any) {\r\n        let me = this.user.id;\r\n        let {id, preState, state} = sheetData;\r\n        console.log({$:'onMessage sheet', from:from, to:to.join(','), id:id, preState:preState, state:state, me:me, sheetData:sheetData})\r\n        if (from === me) {\r\n            this.sheetActPreState(id, preState);\r\n        }\r\n        if (to.find(v=>v===me) !== undefined) {\r\n            this.sheetActState(id, state, sheetData);\r\n        }\r\n    }\r\n    private sheetActPreState(id:number, preState:string) {\r\n        this.changeStateCount(preState, -1);\r\n        if (this.curState === undefined || this.curState !== preState) return;\r\n        /*\r\n        let index = this.stateSheets.findIndex(v => v.id === id);\r\n        if (index>=0) {\r\n            this.stateSheets.splice(index, 1);\r\n        }*/\r\n        let index = this.pageStateItems.items.findIndex(v => v.id === id);\r\n        if (index>=0) {\r\n            this.pageStateItems.items.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    private sheetActState(id:number, state:string, msg:any) {\r\n        this.changeStateCount(state, 1);\r\n        if (this.curState === undefined || this.curState !== state) return;\r\n        /*\r\n        if (this.stateSheets.findIndex(v => v.id === id) < 0) {\r\n            this.stateSheets.push(msg);\r\n        }\r\n        */\r\n        if (this.pageStateItems.items.findIndex(v => v.id === id) < 0) {\r\n            this.pageStateItems.items.push(msg);\r\n        }\r\n    }\r\n\r\n    private changeStateCount(state:string, delta:number) {\r\n        if (state === undefined) return;\r\n        let index = this.statesCount.findIndex(v => v.state === state);\r\n        console.log({$:'changeState', state: state, delta: delta, index: index});\r\n        if (index < 0) return;\r\n        let stateCount = this.statesCount[index];\r\n        stateCount.count += delta;\r\n        if (stateCount.count < 0) stateCount.count = 0;\r\n    }\r\n\r\n    protected get VSheetMain():TypeVPage<CSheet> {return (this.ui&&this.ui.main) || VSheetMain}\r\n    protected get VSheetNew(): TypeVPage<CSheet> {return this.ui.sheetNew || VSheetNew}\r\n    protected get VSheetSaved(): TypeVPage<CSheet> {return this.ui.sheetSaved || VSheetSaved}\r\n    protected get VSheetEdit(): TypeVPage<CSheet> {return this.ui.sheetEdit || VSheetEdit}\r\n    protected get VSheetSchema(): TypeVPage<CSheet> {return VSheetSchema}\r\n    protected get VArchives(): TypeVPage<CSheet> {return VArchives}\r\n    protected get VArchived(): TypeVPage<CSheet> {return VArchived}\r\n    protected get VSheetList(): TypeVPage<CSheet> {return VSheetList}\r\n    protected get VSheetAction(): TypeVPage<CSheet> {return this.ui.sheetAction || VSheetAction}\r\n    protected get VSheetProcessing(): TypeVPage<CSheet> {return VSheetProcessing}\r\n    protected async onEvent(type:string, value:any) {\r\n        let c: TypeVPage<CSheet>;\r\n        switch (type) {\r\n            default: return;\r\n            case 'new': c = this.VSheetNew; break;\r\n            case 'schema': c = this.VSheetSchema; break;\r\n            case 'archives': c = this.VArchives; break;\r\n            case 'state':\r\n                this.curState = value.state;\r\n                c = this.VSheetList;\r\n                break;\r\n            case 'archived':\r\n                await this.showArchived(value); return;\r\n            case 'action':\r\n                await this.showAction(value); return;\r\n            case 'processing':\r\n                await this.showProcessing(value); return;\r\n        }\r\n        await this.openVPage(c, value);\r\n    }\r\n\r\n    async startSheet(sheetId:number) {\r\n        if (await this.beforeStart() === false) return;\r\n        await this.onEvent('action', sheetId);\r\n    }\r\n\r\n    async showAction(sheetId:number) {\r\n        let sheetData:SheetData = await this.getSheetData(sheetId);\r\n        postWsToTop({\r\n            body: {\r\n                $type: 'msg',\r\n                action: '$sheet',\r\n                msg: {\r\n                    id: sheetId,\r\n                    uq: this.cUq.id,\r\n                    state: sheetData.brief.state\r\n                }\r\n            }\r\n        });\r\n        await this.openVPage(this.VSheetAction, sheetData);\r\n    }\r\n\r\n    async showProcessing(sheetId:number) {\r\n        let sheetData:SheetData = await this.getSheetData(sheetId);\r\n        await this.openVPage(this.VSheetProcessing, sheetData);\r\n    }\r\n\r\n    async editSheet(sheetData:SheetData):Promise<any> {\r\n        //alert('修改单据：程序正在设计中');\r\n        let values = await this.vCall(this.VSheetEdit, sheetData);\r\n        return values;\r\n    }\r\n\r\n    async showArchived(inBrief:any) {\r\n        let sheetData = await this.getArchived(inBrief.id);\r\n        await this.openVPage(this.VArchived, sheetData);\r\n    }\r\n\r\n    onSave = async (values:any, valuesWithBox:any):Promise<void> => {\r\n        //let values = this.vForm.getValues();\r\n        //let ret = await this.controller.saveSheet(values, this.vForm.values);\r\n        let ret = await this.saveSheet(values, valuesWithBox);\r\n        this.ceasePage();\r\n        //this.openPage(this.finishedPage);\r\n        await this.showSaved(ret);\r\n    }\r\n\r\n    async showSaved(sheetData:any) {\r\n        await this.openVPage(this.VSheetSaved, sheetData);\r\n    }\r\n\r\n    private getStateUI(stateName:string) {\r\n        let {states} = this.res;\r\n        if (states === undefined) return;\r\n        return states[stateName];\r\n    }\r\n    getStateLabel(stateName:string) {\r\n        let state = this.getStateUI(stateName);\r\n        let ret = (state && state.label) || stateName;\r\n        switch (ret) {\r\n            default: return ret;\r\n            case '$': return '新单';\r\n        }\r\n    }\r\n    getActionLabel(stateName:string, actionName:string) {\r\n        let state = this.getStateUI(stateName);\r\n        if (state === undefined) return actionName;\r\n        let actions = state.actions;\r\n        if (actions === undefined) return actionName;\r\n        let action = actions[actionName];\r\n        return (action && action.label) || actionName;\r\n    }\r\n\r\n    private async loadStateSheetCount():Promise<void> {\r\n        this.statesCount.clear();\r\n        let statesCount = await this.entity.stateSheetCount();\r\n        this.statesCount.splice(0, 0, ...statesCount);\r\n    }\r\n\r\n    async getSheetData(sheetId:number):Promise<SheetData> {\r\n        return await this.entity.getSheet(sheetId);\r\n    }\r\n\r\n    async getArchived(sheetId:number):Promise<SheetData> {\r\n        return await this.entity.getArchive(sheetId);\r\n    }\r\n\r\n    async saveSheet(values:any, valuesWithBox:any):Promise<any> {\r\n        let {sheetTitle} = this.ui;\r\n        let disc = sheetTitle === undefined? this.label : sheetTitle(valuesWithBox, this.x);\r\n        let ret = await this.entity.save(disc, values);\r\n        //let {id, state} = ret;\r\n        //if (id > 0) this.changeStateCount(state, 1);\r\n        return ret;\r\n    }\r\n\r\n    async action(id:number, flow:number, state:string, actionName:string):Promise<any> {\r\n        return await this.entity.action(id, flow, state, actionName);\r\n    }\r\n}\r\n","export * from './cSheet';\r\nexport * from './vSheet';\r\nexport * from './vMain';\r\nexport * from './vNew';\r\nexport * from './vEdit';\r\nexport * from './vList';\r\nexport * from './vSheetAction';\r\nexport * from './vSchema';\r\nexport * from './vArchived';\r\nexport * from './vSheetView';\r\n","import * as React from 'react';\r\nimport { TuidMain, Book, Entity } from '../../entities';\r\nimport { Page } from 'tonva-tools';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CBook, BookUI } from './cBook';\r\n\r\nexport class VBookMain extends VEntity<Book, BookUI, CBook> {\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        Book\r\n    </Page>;\r\n}\r\n","import { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Book } from \"../../entities\";\r\nimport { VBookMain } from \"./vBookMain\";\r\n\r\nexport interface BookUI extends EntityUI {\r\n    CBook?: typeof CBook;\r\n    main: typeof VBookMain,\r\n}\r\n\r\nexport class CBook extends CEntity<Book, BookUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VBookMain);\r\n    }\r\n\r\n    protected get VBookMain():typeof VBookMain {return VBookMain}\r\n}\r\n","import React from \"react\";\r\nimport { View } from \"tonva-tools\";\r\nimport { List, Muted } from \"tonva-react-form\";\r\nimport { Entity } from \"../../entities\";\r\nimport { CLink } from \"../link\";\r\nimport { CUq } from \"./cUq\";\r\n\r\nexport class VUq extends View<CUq> {\r\n    protected isSysVisible = false;\r\n    protected tuidLinks: CLink[];\r\n    protected mapLinks: CLink[];\r\n    protected sheetLinks: CLink[];\r\n    protected actionLinks: CLink[];\r\n    protected queryLinks: CLink[];\r\n    protected bookLinks: CLink[];\r\n    protected historyLinks: CLink[];\r\n    protected pendingLinks: CLink[];\r\n\r\n    constructor(cUq: CUq) {\r\n        super(cUq);\r\n        let {tuidArr, mapArr, sheetArr, actionArr, queryArr, bookArr, historyArr, pendingArr} = cUq.entities;\r\n        this.tuidLinks = tuidArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cTuidMain(v)));\r\n        this.mapLinks = mapArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cMap(v)));\r\n        this.sheetLinks = sheetArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cSheet(v)));\r\n        this.actionLinks = actionArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cAction(v)));\r\n        this.queryLinks = queryArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cQuery(v)));\r\n        this.bookLinks = bookArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cBook(v)));\r\n        this.historyLinks = historyArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cHistory(v)));\r\n        this.pendingLinks = pendingArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cPending(v)));\r\n    }\r\n    protected isVisible(entity: Entity):boolean {\r\n        return entity.sys !== true || this.isSysVisible;\r\n    }\r\n    render(param?:any) {\r\n        if (this.view === undefined) return <div>??? viewModel 必须定义 view ???</div>\r\n        return React.createElement(this.view);\r\n    }\r\n\r\n    protected view = () => {\r\n        let {res, uq, error} = this.controller;\r\n        let linkItem = {\r\n            render: (cLink:CLink, index:number):JSX.Element => cLink.render(), \r\n            onClick: undefined, \r\n        };\r\n        let lists = [\r\n            {\r\n                header: res.tuid || 'TUID',\r\n                items: this.tuidLinks,\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.map || 'MAP',\r\n                items: this.mapLinks,\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.sheet || 'SHEET',\r\n                items: this.sheetLinks\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.action || 'ACTION',\r\n                items: this.actionLinks\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.query || 'QUERY',\r\n                items: this.queryLinks\r\n            },\r\n            {\r\n                cn: 'mt-2 mb-4',\r\n                header: res.book || 'BOOK',\r\n                items: this.bookLinks\r\n            },\r\n            {\r\n                cn: 'mt-2 mb-4',\r\n                header: res.history || 'HISTORY',\r\n                items: this.historyLinks\r\n            },\r\n            {\r\n                cn: 'mt-2 mb-4',\r\n                header: res.pending || 'PENDING',\r\n                items: this.pendingLinks\r\n            }\r\n        ];\r\n        let content;\r\n        if (error !== undefined) {\r\n            content = <div className=\"p-3 text-danger\">连接错误: {error}</div>;\r\n        }\r\n        else {\r\n            content = lists.map(({cn, header, items},index) => items.length > 0 && <List\r\n                key={index}\r\n                className={cn}\r\n                header={<div className=\"px-3 py-1 bg-light\"><Muted>{header}</Muted></div>}\r\n                items={items}\r\n                item={linkItem} />\r\n            );\r\n        }\r\n        return <>\r\n            <div className=\"px-3 py-1 small\">{res.uq || uq}</div>\r\n            {content}\r\n        </>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { UqApi, Controller, UnitxApi, meInFrame, resLang, nav } from 'tonva-tools';\r\nimport { Entities, TuidMain, Action, Sheet, Query, Book, Map, Entity, Tuid, History, Pending } from '../../entities';\r\nimport { CLink } from '../link';\r\nimport { CBook, BookUI } from '../book';\r\nimport { CSheet, SheetUI } from '../sheet';\r\nimport { ActionUI, CAction } from '../action';\r\nimport { QueryUI, CQuery, CQuerySelect } from '../query';\r\nimport { CTuidMain, TuidUI, CTuid, CTuidInfo, CTuidSelect, CTuidEdit, CTuidList } from '../tuid';\r\nimport { MapUI, CMap } from '../map';\r\nimport { CEntity, EntityUI } from '../CVEntity';\r\nimport { PureJSONContent } from '../form/viewModel';\r\nimport { VUq } from './vUq';\r\nimport { CHistory, HistoryUI } from '../history';\r\nimport { CPending, PendingUI } from '../pending';\r\nimport { CApp } from '../CApp';\r\n\r\nexport type EntityType = 'sheet' | 'action' | 'tuid' | 'query' | 'book' | 'map' | 'history' | 'pending';\r\n\r\nexport interface UqUI {\r\n    CTuidMain?: typeof CTuidMain;\r\n    CTuidEdit?: typeof CTuidEdit;\r\n    CTuidList?: typeof CTuidList;\r\n    CTuidSelect?: typeof CTuidSelect;\r\n    CTuidInfo?: typeof CTuidInfo;\r\n    CQuery?: typeof CQuery;\r\n    CQuerySelect?: typeof CQuerySelect;\r\n    CMap?: typeof CMap;\r\n    CAction?: typeof CAction;\r\n    CSheet?: typeof CSheet;\r\n    CBook?: typeof CBook;\r\n    CHistory?: typeof CHistory;\r\n    CPending?: typeof CPending;\r\n    tuid?: {[name:string]: TuidUI};\r\n    sheet?: {[name:string]: SheetUI};\r\n    action?: {[name:string]: ActionUI};\r\n    map?: {[name:string]: MapUI};\r\n    query?: {[name:string]: QueryUI};\r\n    book?: {[name:string]: BookUI};    \r\n    history?: {[name:string]: HistoryUI};\r\n    pending?: {[name:string]: PendingUI};\r\n    res?: any;\r\n}\r\n\r\nfunction lowerPropertyName(entities: {[name:string]: EntityUI}) {\r\n    if (entities === undefined) return;\r\n    for (let i in entities) entities[i.toLowerCase()] = entities[i];\r\n}\r\n\r\nexport class CUq extends Controller /* implements Uq*/ {\r\n    private ui:any;\r\n    private CTuidMain: typeof CTuidMain;\r\n    private CTuidEdit: typeof CTuidEdit;\r\n    private CTuidList: typeof CTuidList;\r\n    private CTuidSelect: typeof CTuidSelect;\r\n    private CTuidInfo: typeof CTuidInfo;\r\n    private CQuery: typeof CQuery;\r\n    private CQuerySelect: typeof CQuerySelect;\r\n    private CMap: typeof CMap;\r\n    private CAction: typeof CAction;\r\n    private CSheet: typeof CSheet;\r\n    private CBook: typeof CBook;\r\n    private CHistory: typeof CHistory;\r\n    private CPending: typeof CPending;\r\n\r\n    constructor(cApp:CApp, uq:string, appId:number, uqId:number, access:string, ui:UqUI) {\r\n        super(resLang(ui.res));\r\n        this.cApp = cApp;\r\n        this.uq = uq;\r\n        this.id = uqId;\r\n        // 每一个ui都转换成小写的key的版本\r\n        lowerPropertyName(ui.tuid);\r\n        lowerPropertyName(ui.sheet);\r\n        lowerPropertyName(ui.map);\r\n        lowerPropertyName(ui.query);\r\n        lowerPropertyName(ui.action);\r\n        lowerPropertyName(ui.book);\r\n        lowerPropertyName(ui.history);\r\n        lowerPropertyName(ui.pending);\r\n        this.ui = ui;\r\n        this.CTuidMain = ui.CTuidMain || CTuidMain;\r\n        this.CTuidEdit = ui.CTuidEdit || CTuidEdit;\r\n        this.CTuidList = ui.CTuidList || CTuidList;\r\n        this.CTuidSelect = ui.CTuidSelect || CTuidSelect;\r\n        this.CTuidInfo = ui.CTuidInfo || CTuidInfo;\r\n        this.CQuery = ui.CQuery || CQuery;\r\n        this.CQuerySelect = ui.CQuerySelect || CQuerySelect;\r\n        this.CMap = ui.CMap || CMap;\r\n        this.CAction = ui.CAction || CAction;\r\n        this.CSheet = ui.CSheet || CSheet;\r\n        this.CBook = ui.CBook || CBook;\r\n        this.CHistory = ui.CHistory || CHistory;\r\n        this.CPending = ui.CPending || CPending;\r\n\r\n        let token = undefined;\r\n        let uqOwner:string, uqName:string;\r\n        let p = uq.split('/');\r\n        switch (p.length) {\r\n            case 1:\r\n                uqOwner = '$$$';\r\n                uqName = p[0];\r\n                break;\r\n            case 2:\r\n                uqOwner = p[0];\r\n                uqName = p[1];\r\n                break;\r\n            default:\r\n                console.log('uq must be uqOwner/uqName format');\r\n                return;\r\n        }\r\n\r\n        let hash = document.location.hash;\r\n        let baseUrl = hash===undefined || hash===''? \r\n            'debug/':'tv/';\r\n\r\n        let acc: string[];\r\n        if (access === null || access === undefined || access === '*') {\r\n            acc = [];\r\n        }\r\n        else {\r\n            acc = access.split(';').map(v => v.trim()).filter(v => v.length > 0);\r\n        }\r\n        let uqApi:UqApi;\r\n        if (uq === '$$$/$unitx') {\r\n            // 这里假定，点击home link之后，已经设置unit了\r\n            // 调用 UnitxApi会自动搜索绑定 unitx service\r\n            uqApi = new UnitxApi(meInFrame.unit);\r\n        }\r\n        else {\r\n            uqApi = new UqApi(baseUrl, uqOwner, uqName, acc, true);\r\n        }\r\n        this.entities = new Entities(this, uqApi, appId);\r\n    }\r\n\r\n    protected async internalStart() {\r\n    }\r\n\r\n    cApp:CApp;\r\n    uq: string;\r\n    id: number;\r\n    res: any;\r\n    entities:Entities;\r\n    error: string;\r\n    private schemaLoaded:boolean = false;\r\n\r\n    protected async loadEntites() {\r\n        await this.entities.loadAccess();\r\n    }\r\n\r\n    async loadSchema():Promise<string> {\r\n        try {\r\n            if (this.schemaLoaded === true) return;\r\n            await this.loadEntites();\r\n            if (this.id === undefined) this.id = this.entities.uqId;\r\n\r\n            for (let i in this.ui) {\r\n                let g = this.ui[i];\r\n                if (g === undefined) continue;\r\n                let {caption, collection} = g;\r\n                if (collection === undefined) continue;\r\n                for (let j in collection) {\r\n                    if (this.entities[i](j) === undefined) {\r\n                        console.warn(i + ':' + '\\'' + j + '\\' is not uq entity');\r\n                    }\r\n                }\r\n            }\r\n            this.schemaLoaded = true;\r\n            return;\r\n        }\r\n        catch(err) {\r\n            console.error(err);\r\n            return this.error = err;\r\n            //debugger;\r\n            //return err.message;\r\n        }\r\n    }\r\n\r\n    async getQuerySearch(name:string):Promise<Query> {\r\n        let query = this.entities.query(name);\r\n        if (query === undefined) \r\n            alert(`QUERY ${name} 没有定义!`);\r\n        else {\r\n            await query.loadSchema();\r\n            let {returns} = query;\r\n            if (returns.length > 1) {\r\n                alert(`QUERY ${name} 返回多张表, 无法做QuerySearch`);\r\n            }\r\n        }\r\n        return query;\r\n    }\r\n    getTuidPlaceHolder(tuid:Tuid) {\r\n        let {tuidPlaceHolder, entity} = this.res;\r\n        let {name} = tuid;\r\n        let type:string;\r\n        if (entity !== undefined) {\r\n            let en = entity[name];\r\n            if (en !== undefined) {\r\n                type = en.label;\r\n            }\r\n        }\r\n        return (tuidPlaceHolder || 'Select');\r\n    }\r\n    getNone() {\r\n        let {none} = this.res;\r\n        return none || 'none';\r\n    }\r\n    protected isSysVisible = false;\r\n    protected isVisible(entity: Entity):boolean {\r\n        return entity.sys !== true || this.isSysVisible;\r\n    }\r\n\r\n    async navSheet(sheetTypeId:number, sheetId:number) {\r\n        let sheet = this.entities.sheetFromTypeId(sheetTypeId);\r\n        if (sheet === undefined) {\r\n            alert('sheetTypeId ' + sheetTypeId + ' is not exists!');\r\n            return;\r\n        }\r\n        let cSheet = this.cSheet(sheet);\r\n        await cSheet.startSheet(sheetId);\r\n    }\r\n\r\n    sheet(entityName:string) {return this.entities.sheet(entityName);}\r\n    action(entityName:string) {return this.entities.action(entityName);}\r\n    query(entityName:string) {return this.entities.query(entityName);}\r\n    book(entityName:string) {return this.entities.book(entityName);}\r\n    map(entityName:string) {return this.entities.map(entityName);}\r\n    history(entityName:string) {return this.entities.history(entityName);}\r\n    pending(entityName:string) {return this.entities.pending(entityName);}\r\n    tuid(entityName:string) {return this.entities.tuid(entityName)}\r\n    tuidDiv(entityName:string, divName:string) {\r\n        let tuid = this.entities.tuid(entityName);\r\n        if (tuid === undefined) return;\r\n        let {divs} = tuid;\r\n        if (divs === undefined) return;\r\n        return divs[divName];\r\n    }\r\n\r\n    cSheetFromName(entityName:string):CSheet {\r\n        let entity = this.entities.sheet(entityName);\r\n        if (entity !== undefined) return this.cSheet(entity);\r\n    }\r\n    cActionFromName(entityName:string) {\r\n        let entity = this.entities.action(entityName);\r\n        if (entity !== undefined) return this.cAction(entity);\r\n    }\r\n    cQueryFromName(entityName:string) {\r\n        let entity = this.entities.query(entityName);\r\n        if (entity !== undefined) return this.cQuery(entity);\r\n    }\r\n    cBookFromName(entityName:string) {\r\n        let entity = this.entities.book(entityName);\r\n        if (entity !== undefined) return this.cBook(entity);\r\n    }\r\n    cMapFromName(entityName:string) {\r\n        let entity = this.entities.map(entityName);\r\n        if (entity !== undefined) return this.cMap(entity);\r\n    }\r\n    cHistoryFromName(entityName:string) {\r\n        let entity = this.entities.history(entityName);\r\n        if (entity !== undefined) return this.cHistory(entity);\r\n    }\r\n    cPendingFromName(entityName:string) {\r\n        let entity = this.entities.pending(entityName);\r\n        if (entity !== undefined) return this.cPending(entity);\r\n    }\r\n    cTuidMainFromName(entityName:string) {\r\n        let entity = this.entities.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidMain(entity);\r\n    }\r\n    cTuidEditFromName(entityName:string) {\r\n        let entity = this.entities.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidEdit(entity);\r\n    }\r\n    cTuidInfoFromName(entityName:string) {\r\n        let entity = this.entities.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidInfo(entity);\r\n    }\r\n\r\n    cTuidSelectFromName(entityName:string) {\r\n        let entity = this.entities.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidSelect(entity);\r\n    }\r\n\r\n    cFromName(entityType:EntityType, entityName:string): CEntity<Entity, EntityUI> {\r\n        switch (entityType) {\r\n            case 'sheet':\r\n                let sheet = this.entities.sheet(entityName);\r\n                if (sheet === undefined) return;\r\n                return this.cSheet(sheet);\r\n            case 'action':\r\n                let action = this.entities.action(entityName);\r\n                if (action === undefined) return;\r\n                return this.cAction(action);\r\n            case 'tuid':\r\n                let tuid = this.entities.tuid(entityName);\r\n                if (tuid === undefined) return;\r\n                return this.cTuidMain(tuid);\r\n            case 'query':\r\n                let query = this.entities.query(entityName);\r\n                if (query === undefined) return;\r\n                return this.cQuery(query);\r\n            case 'book':\r\n                let book = this.entities.book(entityName);\r\n                if (book === undefined) return;\r\n                return this.cBook(book);\r\n            case 'map':\r\n                let map = this.entities.map(entityName);\r\n                if (map === undefined) return;\r\n                return this.cMap(map);\r\n            case 'history':\r\n                let history = this.entities.history(entityName);\r\n                if (history === undefined) return;\r\n                return this.cHistory(history);\r\n            case 'pending':\r\n                let pending = this.entities.pending(entityName);\r\n                if (pending === undefined) return;\r\n                return this.cPending(pending);\r\n        }\r\n    }\r\n\r\n    linkFromName(entityType:EntityType, entityName:string) {\r\n        return this.link(this.cFromName(entityType, entityName));\r\n    }\r\n\r\n    private getUI<T extends Entity, UI extends EntityUI>(t:T):{ui:UI, res:any} {\r\n        let ui, res;\r\n        let {name, typeName} = t;\r\n        if (this.ui !== undefined) {\r\n            let tUI = this.ui[typeName];\r\n            if (tUI !== undefined) {\r\n                ui = tUI[name];\r\n            }\r\n        }\r\n        let {entity} = this.res;\r\n        if (entity !== undefined) {\r\n            res = entity[name];\r\n        }\r\n        return {ui: ui || {}, res: res || {} };\r\n    }\r\n\r\n    link(cEntity:CEntity<Entity, EntityUI>) {\r\n        return new CLink(cEntity);\r\n    }\r\n\r\n    get tuidLinks() {\r\n        return this.entities.tuidArr.filter(v => this.isVisible(v)).map(v => this.link(this.cTuidMain(v)));\r\n    }\r\n    cTuidMain(tuid:TuidMain):CTuidMain {\r\n        let {ui, res} = this.getUI<TuidMain, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidMain || this.CTuidMain)(this, tuid, ui, res);\r\n    }\r\n    cTuidEdit(tuid:TuidMain):CTuidEdit {\r\n        let {ui, res} = this.getUI<TuidMain, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidEdit || this.CTuidEdit)(this, tuid, ui, res);\r\n    }\r\n    cTuidList(tuid:TuidMain):CTuidList {\r\n        let {ui, res} = this.getUI<TuidMain, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidList || this.CTuidList)(this, tuid, ui, res);\r\n    }\r\n    cTuidSelect(tuid:Tuid):CTuidSelect {\r\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid.owner || tuid);\r\n        return new (ui && ui.CTuidSelect || this.CTuidSelect)(this, tuid, ui, res);\r\n    }\r\n    cTuidInfo(tuid:TuidMain):CTuidInfo {\r\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidInfo || this.CTuidInfo)(this, tuid, ui, res);\r\n    }\r\n\r\n    cSheet(sheet:Sheet/*, sheetUI?:SheetUI, sheetRes?:any*/):CSheet {\r\n        let {ui, res} = this.getUI<Sheet, SheetUI>(sheet);\r\n        //if (sheetUI !== undefined) ui = sheetUI;\r\n        //if (sheetRes !== undefined) res = sheetRes;\r\n        //return new (ui && ui.CSheet || this.CSheet)(this, sheet, sheetUI, sheetRes);\r\n        return new (ui && ui.CSheet || this.CSheet)(this, sheet, ui, res);\r\n    }\r\n    get sheetLinks() { \r\n        return this.entities.sheetArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cSheet(v))\r\n        });\r\n    }\r\n\r\n    cAction(action:Action):CAction {\r\n        let {ui, res} = this.getUI<Action, ActionUI>(action);\r\n        return new (ui && ui.CAction || this.CAction)(this, action, ui, res);\r\n    }\r\n    get actionLinks() { \r\n        return this.entities.actionArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cAction(v))\r\n        });\r\n    }\r\n\r\n    cQuery(query:Query):CQuery {\r\n        let {ui, res} = this.getUI<Query, QueryUI>(query);\r\n        return new (ui && ui.CQuery || this.CQuery)(this, query, ui, res);\r\n    }\r\n    cQuerySelect(queryName:string):CQuerySelect {\r\n        let query = this.entities.query(queryName);\r\n        if (query === undefined) return;\r\n        let {ui, res} = this.getUI<Query, QueryUI>(query);\r\n        return new (ui && ui.CQuerySelect || this.CQuerySelect)(this, query, ui, res);\r\n    }\r\n    get queryLinks() {\r\n        return this.entities.queryArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cQuery(v))\r\n        });\r\n    }\r\n    \r\n    cBook(book:Book):CBook {\r\n        let {ui, res} = this.getUI<Book, BookUI>(book);\r\n        return new (ui && ui.CBook || this.CBook)(this, book, ui, res);\r\n    }\r\n    get bookLinks() { \r\n        return this.entities.bookArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cBook(v))\r\n        });\r\n    }\r\n    \r\n    cHistory(history:History):CHistory {\r\n        let {ui, res} = this.getUI<History, HistoryUI>(history);\r\n        return new (ui && ui.CHistory || this.CHistory)(this, history, ui, res);\r\n    }\r\n    get historyLinks() { \r\n        return this.entities.historyArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cHistory(v))\r\n        });\r\n    }\r\n    \r\n    cPending(pending:Pending):CPending {\r\n        let {ui, res} = this.getUI<Pending, PendingUI>(pending);\r\n        return new (ui && ui.CPending || this.CPending)(this, pending, ui, res);\r\n    }\r\n    get pendingLinks() { \r\n        return this.entities.pendingArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cPending(v))\r\n        });\r\n    }\r\n    \r\n    cMap(map:Map):CMap {\r\n        let {ui, res} = this.getUI<Map, MapUI>(map);\r\n        return new (ui && ui.CMap || this.CMap)(this, map, ui, res);\r\n    }\r\n    get mapLinks() { \r\n        return this.entities.mapArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cMap(v));\r\n        });\r\n    }\r\n\r\n    getTuidContent(tuid:Tuid): React.StatelessComponent<any> {\r\n        let {owner} = tuid;\r\n        if (owner === undefined) {\r\n            let {ui} = this.getUI<Tuid, TuidUI>(tuid);\r\n            return (ui && ui.content) || PureJSONContent;\r\n        }\r\n        else {\r\n            let {ui} = this.getUI<Tuid, TuidUI>(owner);\r\n            return (ui && ui.divs && ui.divs[tuid.name].content) || PureJSONContent;\r\n        }\r\n    }\r\n\r\n    async showTuid(tuid:Tuid, id:number):Promise<void> {\r\n        let {owner} = tuid;\r\n        let c = this.cTuidInfo(owner || (tuid as TuidMain));\r\n        await c.start(id);\r\n    }\r\n\r\n    protected get VUq():typeof VUq {return VUq}\r\n\r\n    render() {\r\n        let v = new (this.VUq)(this);\r\n        return v.render();\r\n    }\r\n}\r\n\r\n","export * from './cUq';\r\nexport * from './vUq';","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport className from 'classnames';\r\nimport { List, LMR, FA } from 'tonva-react-form';\r\nimport { Page, nav } from 'tonva-tools';\r\nimport { tv } from '../../tools';\r\nimport { Map } from '../../entities';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CMap, MapItem, MapKey, MapUI } from './cMap';\r\nimport { PureJSONContent } from '../form/viewModel';\r\n\r\nexport class VMapMain extends VEntity<Map, MapUI, CMap> {\r\n    private isFrom: boolean;\r\n\r\n    async open(param?:any) {\r\n        this.isFrom = this.controller.isFrom;\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    itemRender = (item:MapItem, index:number) => {\r\n        return <this.ItemRow item={item} />;\r\n    }\r\n\r\n    private ItemRow = observer(({item}: {item:MapItem}) => {\r\n        let {tuid, box, children, isLeaf, keyIndex, values} = item;\r\n        let keyUI = this.controller.keyUIs[keyIndex];\r\n        let {content:keyContent, valuesContent, none:keyNone} = keyUI;\r\n        let add, remove;\r\n        if (this.isFrom === false) {\r\n            add = <button className=\"btn btn-link btn-sm\" onClick={()=>this.controller.addClick(item)}>\r\n                <FA name=\"plus\" />\r\n            </button>;\r\n            remove = <button className=\"btn btn-link btn-sm\" onClick={()=>this.controller.removeClick(item)}>\r\n                <FA className=\"text-info\" name=\"trash\" />\r\n            </button>;\r\n        }\r\n        let right;\r\n        if (isLeaf === false) {\r\n            if (keyIndex === 0)\r\n                right = add;\r\n            else\r\n                right = <>{remove} &nbsp; {add}</>;\r\n        }\r\n        else if (keyIndex > 0) {\r\n            right = remove;\r\n        }\r\n        let content, border, valuesView;\r\n        if (isLeaf === true) {\r\n            content = undefined; //<div className=\"ml-5\">leaf</div>;\r\n            if (values) {\r\n                //valuesView = null; // 现在不显示values content了\r\n                valuesView = (valuesContent || PureJSONContent)(values, this.x);\r\n            }\r\n        }\r\n        else {\r\n            border = \"border-bottom\";\r\n            let none = keyNone && keyNone(this.x);\r\n            content = <List \r\n                className=\"ml-4\" \r\n                items={children} \r\n                item={{onClick:undefined, render:this.itemRender}}\r\n                none={none} />\r\n        }\r\n        return <div className=\"d-flex flex-column\">\r\n            <LMR className={className('px-3', 'py-2', border)} \r\n                right={right}\r\n            >\r\n                <div className=\"py-1\">{tv(box, keyContent, this.x)}</div>\r\n                <div className=\"py-1 font-weight-bold\">{valuesView}</div>\r\n            </LMR>\r\n            {content}\r\n        </div>;\r\n    });\r\n\r\n    protected get view() { return () => <Page header={this.label}>\r\n            <List items={this.controller.items} item={{className:'my-2', onClick:undefined, render:this.itemRender}} />\r\n        </Page>\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { VEntity } from \"../CVEntity\";\r\nimport { MapUI, CMap } from \"./cMap\";\r\nimport { Map } from \"../../entities\";\r\nimport { Page } from \"tonva-tools\";\r\nimport { VForm } from '../form';\r\n\r\nexport class VInputValues extends VEntity<Map, MapUI, CMap> {\r\n    private vForm: VForm;\r\n\r\n    async open(param?:any) {\r\n        this.vForm = this.createForm(this.onValuesSubmit);\r\n        this.openPageElement(<this.view />);\r\n    }\r\n\r\n    private onValuesSubmit = async () => {\r\n        this.ceasePage();\r\n        let values = this.vForm.getValues();\r\n        this.returnCall(values);\r\n    }\r\n\r\n    private view = () => {\r\n        return <Page>\r\n            {this.vForm.render()}\r\n        </Page>\r\n    }\r\n}\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\nimport { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Map, Tuid, BoxId, Field, TuidMain, fieldDefaultValue } from \"../../entities\";\r\nimport { VMapMain } from \"./vMain\";\r\nimport { observable } from \"mobx\";\r\nimport { PureJSONContent } from '../form/viewModel';\r\nimport { VInputValues } from './inputValues';\r\n\r\nexport interface MapKey {\r\n    content: (values, x?:any) => JSX.Element;\r\n    valuesContent?: (values, x?:any) => JSX.Element;\r\n    none?: (x:any)=>string;\r\n}\r\n\r\nexport interface MapUI extends EntityUI {\r\n    CMap?: typeof CMap;\r\n    keys?: MapKey[],\r\n}\r\n\r\nexport class MapItem {\r\n    parent: MapItem;\r\n    tuid: Tuid;\r\n    box: BoxId;\r\n    isLeaf: boolean;\r\n    keyIndex:number;\r\n    children: MapItem[] = observable.array([], {deep: true});\r\n    values: any;\r\n    constructor(parent:MapItem, tuid:Tuid, box:BoxId, keyIndex:number) {\r\n        this.parent = parent;\r\n        this.tuid = tuid;\r\n        this.box = box;\r\n        this.keyIndex = keyIndex;\r\n        this.isLeaf = false;\r\n    }\r\n}\r\n\r\nexport class CMap extends CEntity<Map, MapUI> {\r\n    isFrom: boolean;\r\n    items:MapItem[];\r\n    keyFields: Field[];\r\n    keyUIs: MapKey[];\r\n\r\n    protected async internalStart() {\r\n        let {keys, schemaFrom} = this.entity;\r\n        this.isFrom = schemaFrom !== undefined;\r\n        let q = this.entity.queries.all;\r\n        let result = await q.query({});\r\n        //let data = await this.entity.unpackReturns(res);\r\n        let ret = result.ret;\r\n        let keysLen = keys.length;\r\n        this.keyUIs = _.clone(this.ui.keys || []);\r\n        this.keyFields = [];\r\n        let retFields = q.returns[0].fields;\r\n        for (let i=0; i<keysLen; i++) {\r\n            this.keyFields.push(retFields[i]);\r\n            if (i >= this.keyUIs.length) {\r\n                this.keyUIs.push({\r\n                    content: PureJSONContent,\r\n                });\r\n            }\r\n        }\r\n        this.items = observable([]);\r\n        let item:MapItem = undefined;\r\n        for (let r of ret) {\r\n            let newItem = this.addItem(item, r);\r\n            if (newItem !== undefined) {\r\n                this.items.push(newItem);\r\n                item = newItem;\r\n            }\r\n        }\r\n\r\n        await this.openVPage(this.VMapMain);\r\n    }\r\n\r\n    private createItem(parent:MapItem, tuid:Tuid, box:BoxId, keyIndex:number, values?:any) {\r\n        let item = new MapItem(parent, tuid, box, keyIndex);\r\n        if (keyIndex === this.keyFields.length - 1) {\r\n            item.isLeaf = true;\r\n            item.values = values;\r\n        }\r\n        return item;\r\n    }\r\n\r\n    addItem(item:MapItem, row:any):MapItem {\r\n        let ret:MapItem = undefined;\r\n        let keysLen = this.keyFields.length;\r\n        let p = item;\r\n        for (let i=0;i<keysLen;i++) {\r\n            let key = this.keyFields[i];\r\n            let {name} = key;\r\n            let tuid = key._tuid;\r\n            let val:BoxId = row[name];\r\n            if (val === undefined) break;\r\n            let {id} = val;\r\n            if (i === 0) {\r\n                if (id === 0) continue;\r\n                if (p === undefined || p.box.id !== id) {\r\n                    ret = p = this.createItem(undefined, tuid, val, i, row);\r\n                }\r\n                continue;\r\n            }\r\n            let {children, box} = p;\r\n            let len = children.length;\r\n            if (len > 0) {\r\n                let n = children[len-1];\r\n                if (n.box.id === id) {\r\n                    p = n;\r\n                    continue;\r\n                }\r\n            }\r\n            if (id > 0) {\r\n                children.push(p = this.createItem(p, tuid, val, i, row));\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    async searchOnKey(keyField:Field, param):Promise<number> {\r\n        let {_tuid, _ownerField} = keyField;\r\n        let cTuidSelect = this.cUq.cTuidSelect(_tuid);\r\n        let callParam = param;\r\n        if (_ownerField !== undefined) {\r\n            callParam = param[_ownerField.name];\r\n            if (typeof callParam === 'object') {\r\n                callParam = callParam.id;\r\n            }\r\n        }\r\n        let ret = await cTuidSelect.call(callParam);\r\n        return _tuid.getIdFromObj(ret);\r\n    }\r\n\r\n    addClick = async(item:MapItem) => {\r\n        let {keyIndex, children} = item;\r\n        let keysLen = this.keyFields.length;\r\n        let keysLast = keysLen-1;\r\n        let idx = keyIndex + 1;\r\n        if (idx >= keysLen) return;\r\n        let keyField = this.keyFields[idx];\r\n        let kn = keyField.name;\r\n        let tuid = keyField._tuid;\r\n        let searchParam = {} as any;\r\n        let data = {} as any;\r\n        for (let p=item;p!==undefined;p=p.parent) {\r\n            let {keyIndex:ki, box} = p;\r\n            let kn = this.keyFields[ki].name;\r\n            //searchParam[kn] = data['_' + kn] = box.id;\r\n            searchParam[kn] = data[kn] = box.id;\r\n        }\r\n\r\n        let id = await this.searchOnKey(keyField, searchParam);\r\n        if (id === undefined || id <= 0) return;\r\n        tuid.useId(id);\r\n        let idBox = tuid.boxId(id);\r\n        let arr1 = {} as any;\r\n        let values:any = {};\r\n        if (keyIndex+1===keysLast) {\r\n            tuid.useId(id);\r\n            //values[kn] = arr1['_' + kn] = idBox;\r\n            values[kn] = arr1[kn] = idBox;\r\n            if (this.entity.fields.length > 0) {\r\n                let ret = await this.vCall(VInputValues, data);\r\n                for (let i in ret) {\r\n                    //values[i] = arr1['_' + i] = ret[i];\r\n                    values[i] = arr1[i] = ret[i];\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            //values[kn] = data['_' + kn] = idBox;\r\n            values[kn] = data[kn] = idBox;\r\n            for (let i=idx+1;i<keysLast;i++) {\r\n                //data['_' + this.keyFields[i].name] = 0;\r\n                data[this.keyFields[i].name] = 0;\r\n            }\r\n            // 填map的key field 0 值\r\n            //arr1['_' + this.keyFields[keysLast].name] = 0;\r\n            arr1[this.keyFields[keysLast].name] = 0;\r\n            let {fields} = this.entity;\r\n            for (let f of fields) {\r\n                let {name, type, null:nullable} = f;\r\n                if (!(nullable === true)) {\r\n                    //arr1['_' + f.name] = fieldDefaultValue(type);\r\n                    arr1[f.name] = fieldDefaultValue(type);\r\n                }\r\n            }\r\n        }\r\n        data.arr1 = [arr1];\r\n        await this.entity.actions.add.submit(data);\r\n        let rowIndex = children.findIndex(v => v.box.id === id);\r\n        if (rowIndex < 0) {\r\n            children.push(this.createItem(item, tuid, idBox, idx, values));\r\n        }\r\n        else {\r\n            let {fields} = this.entity;\r\n            if (fields !== undefined && fields.length > 0) {\r\n                let row = children[rowIndex];\r\n                children.splice(rowIndex, 1);\r\n                row.values = values;\r\n                /*\r\n                for (let f of fields) {\r\n                    let {name:fn} = f;\r\n                    row.values[fn] = values[fn];\r\n                }*/\r\n                children.splice(rowIndex, 0, row);\r\n            }\r\n        }\r\n        this.removeCeased();\r\n    }\r\n\r\n    removeClick = async(item:MapItem) => {\r\n        let keyField = this.keyFields[item.keyIndex];\r\n        let tuid = keyField._tuid;\r\n        let cTuidMain = this.cUq.cTuidMain(tuid.Main);\r\n        let label = cTuidMain.getLable(tuid);\r\n        let confirmDelete:_.TemplateExecutor = \r\n            this.res.confirmDelete \r\n            || _.template('do you really want to remove ${label}?');\r\n        if (confirm(confirmDelete({label:label})) === false) return;\r\n        let map:Map = this.entity;\r\n        let data = {} as any;\r\n        let arr1 = data['arr1'] = [];\r\n        let v0 = {} as any;\r\n        arr1.push(v0);\r\n        for (let p=item; p!==undefined;p=p.parent) {\r\n            let ki=p.keyIndex;\r\n            //v0['_'+this.keyFields[ki].name] = p.box.id;\r\n            v0[this.keyFields[ki].name] = p.box.id;\r\n        }\r\n        let len = this.keyFields.length;\r\n        for (let i=item.keyIndex+1; i<len; i++) {\r\n            let k = this.keyFields[i];\r\n            //v0['_'+k.name] = -1;\r\n            v0[k.name] = -1;\r\n        }\r\n        await map.actions.del.submit(data);\r\n        let children = item.parent.children;\r\n        let index = children.findIndex(v => v === item);\r\n        if (index >= 0) children.splice(index, 1);\r\n    }\r\n\r\n    protected get VMapMain():typeof VMapMain {return VMapMain}\r\n}\r\n","export * from './cMap';\r\nexport * from './vMain';\r\n","import * as React from 'react';\r\nimport { TuidMain, Pending, Entity } from '../../entities';\r\nimport { Page } from 'tonva-tools';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CPending, PendingUI } from './cPending';\r\n\r\nexport class VPendingMain extends VEntity<Pending, PendingUI, CPending> {\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        pending\r\n    </Page>;\r\n}\r\n","import { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Pending } from \"../../entities\";\r\nimport { VPendingMain } from \"./vPendingMain\";\r\n\r\nexport interface PendingUI extends EntityUI {\r\n    CPending?: typeof CPending;\r\n    main: typeof VPendingMain,\r\n}\r\n\r\nexport class CPending extends CEntity<Pending, PendingUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VPendingMain);\r\n    }\r\n\r\n    protected get VPendingMain():typeof VPendingMain {return VPendingMain}\r\n}\r\n","export * from './cPending';\r\nexport * from './vPendingMain';\r\n","import * as React from 'react';\r\nimport { TuidMain, History, Entity } from '../../entities';\r\nimport { Page } from 'tonva-tools';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CHistory, HistoryUI } from './cHistory';\r\n\r\nexport class VHistoryMain extends VEntity<History, HistoryUI, CHistory> {\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        History\r\n    </Page>;\r\n}\r\n","import { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { History } from \"../../entities\";\r\nimport { VHistoryMain } from \"./vHistoryMain\";\r\n\r\nexport interface HistoryUI extends EntityUI {\r\n    CHistory?: typeof CHistory;\r\n    main: typeof VHistoryMain,\r\n}\r\n\r\nexport class CHistory extends CEntity<History, HistoryUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VHistoryMain);\r\n    }\r\n\r\n    protected get VHistoryMain():typeof VHistoryMain {return VHistoryMain}\r\n}\r\n","export * from './cHistory';\r\nexport * from './vHistoryMain';\r\n","import * as React from 'react';\r\nimport { VPage, Page } from 'tonva-tools';\r\nimport { jsonStringify } from '../../tools';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CAction, ActionUI } from './cAction';\r\nimport { Action } from '../../entities';\r\n\r\nexport class VActionMain extends VEntity<Action, ActionUI, CAction> {\r\n    protected vForm: VForm;\r\n    protected returns: any;\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        this.openPage(this.mainPage);\r\n    }\r\n\r\n    private onSubmit = async () => {\r\n        let values = this.vForm.getValues();\r\n        this.returns = await this.controller.submit(values);\r\n        this.closePage();\r\n        this.openPage(this.resultPage);\r\n    }\r\n\r\n    protected mainPage = () => {\r\n        let {label} = this.controller;\r\n        return <Page header={label}>\r\n            {this.vForm.render('mx-3 my-2')}\r\n        </Page>;\r\n    }\r\n\r\n    protected resultPage = () => {\r\n        let {label} = this.controller;\r\n        return <Page header={label} back=\"close\">\r\n            完成！\r\n            <pre>\r\n                {jsonStringify(this.returns)}\r\n            </pre>\r\n        </Page>;\r\n    }\r\n}\r\n","import { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Action } from \"../../entities\";\r\nimport { VActionMain } from \"./vActionMain\";\r\n\r\nexport interface ActionUI extends EntityUI {\r\n    CAction?: typeof CAction;\r\n    //main: typeof VActionMain,\r\n}\r\n\r\nexport class CAction extends CEntity<Action, ActionUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VActionMain);\r\n    }\r\n\r\n    protected get VActionMain():typeof VActionMain {return VActionMain}\r\n\r\n    async submit(values:any) {\r\n        return this.entity.submit(values);\r\n    }\r\n}\r\n","export * from './cAction';\r\nexport * from './vActionMain';\r\n","import * as React from 'react';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\n\r\nexport abstract class ItemEdit {\r\n    protected name: string;\r\n    protected itemSchema: ItemSchema;\r\n    protected uiItem:UiItem;\r\n    protected value: any;\r\n    protected label: string;\r\n\r\n    @observable protected isChanged: boolean = false;\r\n    protected newValue: any;\r\n\r\n    constructor(itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any) {\r\n        this.itemSchema = itemSchema;\r\n        this.uiItem = uiItem\r\n        this.value = value;\r\n        let {name} = itemSchema;\r\n        this.name = name;\r\n        this.label = label;\r\n    }\r\n    async start():Promise<any> {\r\n        return await this.internalStart();\r\n    }\r\n\r\n    protected abstract internalStart():Promise<any>;\r\n\r\n    async end():Promise<any> {\r\n        await this.internalEnd()\r\n    }\r\n\r\n    protected async internalEnd():Promise<void> {nav.pop()}\r\n}\r\n","\r\nimport {setCenterToken} from './uqApi';\r\nimport {WSChannel} from './wsChannel';\r\n\r\nexport const netToken = {\r\n    set(userId:number, token:string) {\r\n        setCenterToken(userId, token);\r\n        WSChannel.setCenterToken(token);\r\n    },\r\n    clear() {\r\n        setCenterToken(0, undefined);\r\n        WSChannel.setCenterToken(undefined);\r\n    }\r\n};\r\n","import {CenterApi} from '../net';\r\nimport {User, decodeUserToken} from '../user';\r\n//import { nav } from '../ui';\r\n\r\nexport class UserApi extends CenterApi {\r\n    async login(params: {user: string, pwd: string, guest: number}): Promise<any> {\r\n        //(params as any).device = nav.local.device.get();\r\n        let ret = await this.get('login', params);\r\n        switch (typeof ret) {\r\n            default: return;\r\n            case 'string': return decodeUserToken(ret);\r\n            case 'object':\r\n                let token = ret.token;\r\n                let user = decodeUserToken(token);\r\n                let {nick, icon} = ret;\r\n                if (nick) user.nick = nick;\r\n                if (icon) user.icon = icon;\r\n                return user;\r\n        }\r\n        // !== undefined) return decodeToken(token);\r\n    }\r\n    async register(params: {\r\n        nick:string, \r\n        user:string, \r\n        pwd:string,\r\n        country:number, \r\n        mobile:number, \r\n        email:string,\r\n        verify:string,\r\n    }): Promise<any>\r\n    {\r\n        return await this.post('register', params);\r\n    }\r\n\r\n    async setVerify(account:string, type:'mobile'|'email') {\r\n        return await this.post('set-verify', {account:account, type:type});\r\n    }\r\n\r\n    async checkVerify(account:string, verify:string) {\r\n        return await this.post('check-verify', {account:account, verify:verify});\r\n    }\r\n\r\n    async isExists(account:string) {\r\n        return await this.get('is-exists', {account:account});\r\n    }\r\n\r\n    async resetPassword(account:string, password:string, verify:string, type:'mobile'|'email') {\r\n        return await this.post('reset-password', {account:account, password, verify, type});\r\n    }\r\n    \r\n    async userSetProp(prop:string, value:any) {\r\n        await this.post('tie/user-set-prop', {prop:prop, value:value});\r\n    }\r\n}\r\n\r\nconst userApi = new UserApi('tv/user/', undefined);\r\n\r\nexport default userApi;\r\n","\r\nconst zero = '00000000000000';\r\nexport function left0(num:number, fix:number) {\r\n    if (num === undefined) return '';\r\n    let r = num.toString();\r\n    let len = fix - r.length;\r\n    if (len <= 0) return r;\r\n    return zero.substr(0, len) + r;\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport {User} from '../user';\r\nimport {nav} from './nav';\r\nimport {Page} from './page';\r\nimport { isDevelopment } from '../net';\r\n\r\nexport abstract class Controller {\r\n    readonly res: any;\r\n    readonly x: any;\r\n    icon: string|JSX.Element;\r\n    label:string;\r\n    readonly isDev:boolean = isDevelopment;\r\n    get user():User {return nav.user}\r\n    get isLogined():boolean {\r\n        let {user} = nav;\r\n        if (user === undefined) return false;\r\n        return user.id > 0;\r\n    }\r\n    constructor(res:any) {\r\n        this.res = res || {};\r\n        this.x = this.res.x || {};\r\n    }\r\n\r\n    private receiveHandlerId:number;\r\n    private disposer:()=>void;\r\n\r\n    private dispose() {\r\n        // message listener的清理\r\n        nav.unregisterReceiveHandler(this.receiveHandlerId);\r\n        this.onDispose();\r\n    }\r\n\r\n    protected onDispose() {\r\n    }\r\n\r\n    protected async openVPage(vp: new (coordinator: Controller)=>VPage<Controller>, param?:any):Promise<void> {\r\n        await (new vp(this)).open(param);\r\n    }\r\n\r\n    protected renderView(view: new (coordinator: Controller)=>View<Controller>, param?:any) {\r\n        return (new view(this)).render(param);\r\n    }\r\n\r\n    async event(type:string, value:any) {\r\n        await this.onEvent(type, value);\r\n    }\r\n\r\n    protected async onEvent(type:string, value:any) {\r\n    }\r\n\r\n    protected msg(text:string) {\r\n        alert(text);\r\n    }\r\n    protected errorPage(header:string, err:any) {\r\n        this.openPage(<Page header=\"App error!\">\r\n            <pre>\r\n                {typeof err === 'string'? err : err.message}\r\n            </pre>\r\n        </Page>);\r\n    }\r\n\r\n    protected onMessage(message:any):Promise<void> {\r\n        return;\r\n    }\r\n\r\n    private onMessageReceive = async (message:any):Promise<void> => {\r\n        await this.onMessage(message);\r\n    }\r\n\r\n    protected async beforeStart():Promise<boolean> {\r\n        /*\r\n        console.log('this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);');\r\n        this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);\r\n        console.log('return true');\r\n        */\r\n        return true;\r\n    }\r\n    protected registerReceiveHandler() {\r\n        this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);\r\n    }\r\n\r\n    protected abstract internalStart(param?:any):Promise<void>;\r\n    async start(param?:any):Promise<void> {\r\n        this.disposer = this.dispose.bind(this);\r\n        this.registerReceiveHandler();\r\n        let ret = await this.beforeStart();\r\n        if (ret === false) return;\r\n        await this.internalStart(param);\r\n    }\r\n\r\n    get isCalling():boolean {return this._resolve_$ !== undefined}\r\n\r\n    private _resolve_$:((value:any) => void)[];\r\n    async call(param?:any):Promise<any> {\r\n        if (this._resolve_$ === undefined) this._resolve_$ = [];\r\n        return new Promise<any> (async (resolve, reject) => {\r\n            this._resolve_$.push(resolve);\r\n            await this.start(param);\r\n        });\r\n    }\r\n\r\n    async vCall(vp: new (coordinator: Controller)=>VPage<Controller>, param?:any):Promise<any> {\r\n        if (this._resolve_$ === undefined) this._resolve_$ = [];\r\n        return new Promise<any> (async (resolve, reject) => {\r\n            this._resolve_$.push(resolve);\r\n            await (new vp(this)).open(param);\r\n        });\r\n    }\r\n\r\n    returnCall(value:any) {\r\n        if (this._resolve_$ === undefined) return;\r\n        let resolve = this._resolve_$.pop();\r\n        if (resolve === undefined) {\r\n            alert('the Coordinator call already returned, or not called');\r\n            return;\r\n        }\r\n        resolve(value);\r\n    }\r\n\r\n    openPage(page:JSX.Element) {\r\n        nav.push(page, this.disposer);\r\n        this.disposer = undefined;\r\n    }\r\n\r\n    replacePage(page:JSX.Element) {\r\n        nav.replace(page, this.disposer);\r\n        this.disposer = undefined;\r\n    }\r\n\r\n    backPage() {\r\n        nav.back();\r\n    }\r\n\r\n    closePage(level?:number) {\r\n        nav.pop(level);\r\n    }\r\n\r\n    ceasePage(level?:number) {\r\n        nav.ceaseTop(level);\r\n    }\r\n\r\n    removeCeased() {\r\n        nav.removeCeased();\r\n    }\r\n\r\n    regConfirmClose(confirmClose: ()=>Promise<boolean>) {\r\n        nav.regConfirmClose(confirmClose);\r\n    }\r\n}\r\n\r\n\r\nexport abstract class View<C extends Controller> {\r\n    protected controller: C;\r\n    protected readonly res: any;\r\n    protected readonly x: any;\r\n\r\n    constructor(controller: C) {\r\n        this.controller = controller;\r\n        this.res = controller.res;\r\n        this.x = controller.x;\r\n    }\r\n\r\n    protected get isDev() {return isDevelopment}\r\n\r\n    abstract render(param?:any): JSX.Element;\r\n\r\n    protected renderVm(vm: new (coordinator: Controller)=>View<C>, param?:any) {\r\n        return (new vm(this.controller)).render(param);\r\n    }\r\n\r\n    protected async openVPage(vp: new (coordinator: Controller)=>VPage<Controller>, param?:any):Promise<void> {\r\n        await (new vp(this.controller)).open(param);\r\n    }\r\n\r\n    protected async event(type:string, value?:any) {\r\n        /*\r\n        if (this._resolve_$_ !== undefined) {\r\n            await this._resolve_$_({type:type, value:value});\r\n            return;\r\n        }*/\r\n        await this.controller.event(type, value);\r\n    }\r\n\r\n    protected returnCall(value:any) {\r\n        this.controller.returnCall(value);\r\n    }\r\n\r\n    protected openPage(view: React.StatelessComponent<any>, param?:any) {\r\n        this.controller.openPage(React.createElement(view, param));\r\n    }\r\n\r\n    protected replacePage(view: React.StatelessComponent<any>, param?:any) {\r\n        this.controller.replacePage(React.createElement(view, param));\r\n    }\r\n\r\n    protected openPageElement(page: JSX.Element) {\r\n        this.controller.openPage(page);\r\n    }\r\n\r\n    protected replacePageElement(page: JSX.Element) {\r\n        this.controller.replacePage(page);\r\n    }\r\n\r\n    protected backPage() {\r\n        this.controller.backPage();\r\n    }\r\n\r\n    protected closePage(level?:number) {\r\n        this.controller.closePage(level);\r\n    }\r\n\r\n    protected ceasePage(level?:number) {\r\n        this.controller.ceasePage(level);\r\n    }\r\n\r\n    protected removeCeased() {\r\n        this.controller.removeCeased();\r\n    }\r\n\r\n    protected regConfirmClose(confirmClose: ()=>Promise<boolean>) {\r\n        this.controller.regConfirmClose(confirmClose);\r\n    }\r\n}\r\n\r\nexport abstract class VPage<C extends Controller> extends View<C> {\r\n    constructor(coordinator: C) {\r\n        super(coordinator);\r\n    }\r\n\r\n    abstract open(param?:any):Promise<void>;\r\n\r\n    render(param?:any):JSX.Element {return null;}\r\n}\r\n\r\nexport type TypeVPage<C extends Controller> = new (coordinator: C)=>VPage<C>;\r\n\r\n","export * from './schema';\r\nexport * from './uiSchema';\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {FormView, FormProps} from './formView';\r\n\r\nexport function tonvaDebug() {\r\n    let a = 0;\r\n}\r\n\r\nexport interface TonvaFormProps extends FormProps {\r\n    className?: string;\r\n    initValues?: any;\r\n}\r\n\r\n@observer \r\nexport class TonvaForm extends React.Component<TonvaFormProps, {}> {\r\n    formView: FormView;\r\n    constructor(props:TonvaFormProps) {\r\n        super(props);\r\n        this.formView = new FormView(this.props);\r\n    }\r\n    componentWillMount() {\r\n        this.formView.setInitValues(this.props.initValues);\r\n    }\r\n    debug() {\r\n        let s = null;\r\n    }\r\n    render() {\r\n        let {className, children, initValues} = this.props;\r\n        return <div className={className}>\r\n            {\r\n                children === undefined? \r\n                    this.formView.render() : \r\n                    <form onSubmit={this.formView.onSubmit}>{children}</form>\r\n            }\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nexport interface Action {\r\n    icon?: string;\r\n    caption?: string;\r\n    action?: () => void;\r\n}\r\n\r\nexport interface DropdownActionsProps {\r\n    icon?: string;\r\n    actions: Action[];\r\n    isRight?: boolean;\r\n}\r\n\r\nexport interface DropdownActionsState {\r\n    dropdownOpen: boolean;\r\n}\r\n\r\nexport class DropdownActions extends React.Component<DropdownActionsProps, DropdownActionsState> {\r\n    private menu: HTMLDivElement;\r\n    private button: HTMLElement;\r\n    constructor(props:DropdownActionsProps) {\r\n        super(props);\r\n        this.state = {\r\n            dropdownOpen: false\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        document.addEventListener('click', this.handleDocumentClick);\r\n        document.addEventListener('touchstart', this.handleDocumentClick);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('click', this.handleDocumentClick);\r\n        document.removeEventListener('touchstart', this.handleDocumentClick);\r\n    }\r\n\r\n    private handleDocumentClick = (evt:any) => {\r\n        if (this.state.dropdownOpen === false) return;\r\n        if (this.button && this.button.contains(evt.target)) return;\r\n        if (!this.menu) return;\r\n        //if (!this.menu.contains(evt.target)) \r\n        this.toggle();\r\n    }\r\n\r\n    private toggle = () => {\r\n        this.setState({\r\n            dropdownOpen: !this.state.dropdownOpen\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let {icon, actions, isRight} = this.props;\r\n        if (isRight === undefined) isRight = true;\r\n        let hasIcon = actions.some(v => v.icon!==undefined);\r\n        let {dropdownOpen} = this.state;\r\n        //isOpen={this.state.dropdownOpen} toggle={this.toggle}\r\n        return <div className=\"dropdown\">\r\n            <button ref={v=>this.button=v} className=\"cursor-pointer dropdown-toggle btn btn-sm\"\r\n                data-toggle=\"dropdown\"\r\n                aria-expanded={dropdownOpen}\r\n                onClick={this.toggle}>\r\n                <i className={classNames('fa', 'fa-'+(icon||'ellipsis-v'))} />\r\n            </button>\r\n            <div ref={v => this.menu=v} className={classNames({\"dropdown-menu\":true, \"dropdown-menu-right\":isRight, \"show\":dropdownOpen})}>\r\n                {\r\n                    actions.map((v,index) => {\r\n                        let {icon, caption, action} = v;\r\n                        if (icon === undefined && caption === undefined) \r\n                            return <div className=\"dropdown-divider\" />;\r\n                        let i:any;\r\n                        if (hasIcon === true) {\r\n                            if (icon !== undefined) icon = 'fa-' + icon;\r\n                            i = <><i className={classNames('fa', icon, 'fa-fw')} aria-hidden={true}></i>&nbsp; </>;\r\n                        }\r\n                        if (action === undefined) \r\n                            return <h6 className=\"dropdown-header\">{i} {caption}</h6>;\r\n                        return <a className=\"dropdown-item\" key={index} href=\"#\" onClick={(evt:React.MouseEvent<HTMLAnchorElement>)=>{ evt.preventDefault();action()}}>{i} {caption}</a>\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\n/*\r\nexport class DropdownActions extends React.Component<DropdownActionsProps, DropdownActionsState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dropdownOpen: false\r\n        };\r\n    }\r\n    private toggle = () => {\r\n        this.setState({\r\n            dropdownOpen: !this.state.dropdownOpen\r\n        });\r\n    }\r\n    render() {\r\n        let {icon, actions, isRight} = this.props;\r\n        if (isRight === undefined) isRight = true;\r\n        let hasIcon = actions.some(v => v.icon!==undefined);\r\n        return <UncontrolledButtonDropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\r\n            <DropdownToggle caret={true} size=\"sm\" className=\"cursor-pointer\">\r\n                <i className={classNames('fa', 'fa-'+(icon||'ellipsis-v'))} />\r\n            </DropdownToggle>\r\n            <DropdownMenu right={isRight}>\r\n                {actions.map((v,index) => {\r\n                    let {icon, caption, action} = v;\r\n                    if (icon === undefined && caption === undefined) \r\n                        return <div className=\"dropdown-divider\" />;\r\n                    let i;\r\n                    if (hasIcon === true) {\r\n                        if (icon !== undefined) icon = 'fa-' + icon;\r\n                        i = <><i className={classNames('fa', icon, 'fa-fw')} aria-hidden={true}></i>&nbsp; </>;\r\n                    }\r\n                    if (action === undefined) \r\n                        return <h6 className=\"dropdown-header\">{i} {caption}</h6>;\r\n                    return <DropdownItem key={index} onClick={action}>{i} {caption}</DropdownItem>\r\n                })}\r\n            </DropdownMenu>\r\n        </UncontrolledButtonDropdown>\r\n    }\r\n}\r\n*/","import * as React from 'react';\r\n\r\nexport interface EasyDateProps {\r\n    date: Date | string;\r\n}\r\n\r\nexport class EasyDate extends React.Component<EasyDateProps> {\r\n    render() {\r\n        let {date} = this.props;\r\n        if (!date) return null;\r\n        let d = (typeof date === 'string')? new Date(Date.parse(date)) : date;\r\n        let now = new Date();\r\n        let tick = now.getTime() - d.getTime();\r\n        let nDate=now.getDate();\r\n        let _date=d.getDate(), hour=d.getHours(), minute=d.getMinutes(), month=d.getMonth()+1;\r\n        let hm = hour + ((minute<10?':0':':') + minute);\r\n        if (tick < -24*3600*1000) return d.getFullYear()+'年'+month+'月'+_date+'日 ' + hm;\r\n        if (tick < 24*3600*1000) {\r\n            return _date!==nDate? \r\n                (tick < 0? '明天 ' : '昨天 ') + hm \r\n                : hm;\r\n        }\r\n        if (tick < 365*24*3600*1000) {\r\n            return month+'月'+_date+'日 ';\r\n        }\r\n        return d.getFullYear()+'年'+month+'月'+_date+'日';\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Image } from 'tonva-tools';\r\n\r\nexport interface MediaProps {\r\n    icon: string;\r\n    main: string|JSX.Element;\r\n    discription?: string | JSX.Element;\r\n    px?: number;\r\n    py?: number;\r\n}\r\n\r\nexport class Media extends React.Component<MediaProps> {\r\n    render() {\r\n        let {icon, main, discription, px, py} = this.props;\r\n        let disp:any;\r\n        if (typeof discription === 'string')\r\n            disp = <div>{discription}</div>;\r\n        else\r\n            disp = discription;\r\n        let cn = classNames(\r\n            'media', \r\n            px===undefined? 'px-0':'px-'+px, \r\n            py===undefined? 'py-2':'py-'+py);\r\n        return <div className={cn}>\r\n            <Image className=\"mr-3 w-4c h-4c\" src={icon} />\r\n            <div className=\"media-body\">\r\n                <h5 className=\"mt-0\">{main}</h5>\r\n                {disp}\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\n\r\nexport interface SearchBoxProps {\r\n    className?: string;\r\n    label?: string;\r\n    initKey?: string;\r\n    placeholder?: string;\r\n    buttonText?: string;\r\n    maxLength?: number;\r\n    size?: 'sm' | 'md' | 'lg';\r\n    inputClassName?: string;\r\n    onSearch: (key:string)=>Promise<void>;\r\n    onFocus?: ()=>void;\r\n    allowEmptySearch?: boolean;\r\n}\r\n\r\n/*\r\nexport interface SearchBoxState {\r\n    disabled: boolean;\r\n}*/\r\n\r\nexport class SearchBox extends React.Component<SearchBoxProps> { //}, SearchBoxState> {\r\n    private input: HTMLInputElement;\r\n    private key: string = null;\r\n    @observable private disabled: boolean;\r\n\r\n    private onChange = (evt: React.ChangeEvent<any>) => {\r\n        this.key = evt.target.value;\r\n        if (this.key !== undefined) {\r\n            this.key = this.key.trim();\r\n            if (this.key === '') this.key = undefined;\r\n        }\r\n        if (this.props.allowEmptySearch !== true) {\r\n            this.disabled = !this.key;\r\n        }\r\n    }\r\n    private onSubmit = async (evt: React.FormEvent<any>) => {\r\n        evt.preventDefault();\r\n        if (this.key === null) this.key = this.props.initKey || '';\r\n        if (this.props.allowEmptySearch !== true) {\r\n            if (!this.key) return;\r\n            if (this.input) this.input.disabled = true;\r\n        }\r\n        await this.props.onSearch(this.key);\r\n        if (this.input) this.input.disabled = false;\r\n    }\r\n    clear() {\r\n        if (this.input) this.input.value = '';\r\n    }\r\n    render() {\r\n        let {className, inputClassName, onFocus,\r\n            label, placeholder, buttonText, maxLength, size} = this.props;\r\n        let inputSize:string;\r\n        switch (size) {\r\n            default:\r\n            case 'sm': inputSize = 'input-group-sm'; break;\r\n            case 'md': inputSize = 'input-group-md'; break;\r\n            case 'lg': inputSize = 'input-group-lg'; break;\r\n        }\r\n        let lab:any;\r\n        if (label !== undefined) lab = <label className=\"input-group-addon\">{label}</label>;\r\n        return <form className={className} onSubmit={this.onSubmit} >\r\n            <div className={classNames(\"input-group\", inputSize)}>\r\n                {lab}\r\n                <input ref={v=>this.input=v} onChange={this.onChange}\r\n                    type=\"text\"\r\n                    name=\"key\"\r\n                    onFocus={onFocus}\r\n                    className={classNames('form-control', inputClassName || 'border-primary')}\r\n                    placeholder={placeholder}\r\n                    defaultValue={this.props.initKey}\r\n                    maxLength={maxLength} />\r\n                <div className=\"input-group-append\">\r\n                    <button className=\"btn btn-primary\"\r\n                        type=\"submit\"\r\n                        disabled={this.disabled}>\r\n                        <i className='fa fa-search' />\r\n                        <i className=\"fa\"/>\r\n                        {buttonText}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </form>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport className from 'classnames';\r\nimport {FormProps, FormRow, SubmitResult, FormView, TonvaForm} from '../form';\r\n\r\nexport interface Step {\r\n    formRows: FormRow[];\r\n    next: undefined | string | ((values:any) => string);    // 返回下一步的step名称或者直接就是名称\r\n    ex?: any;                                   // 每一步额外的参数\r\n}\r\n\r\nexport interface MultiStepProps {\r\n    className?: string;\r\n    header?: (step:Step, num:number) => JSX.Element; //name: step name, num: 第几步，1开始\r\n    footer?: (step:Step, num:number) => JSX.Element; //name: step name, num: 第几步，1开始\r\n    steps: {[name:string]: Step};\r\n    first: string;         // 第一步的名字\r\n    onSubmit: (values:any) => Promise<SubmitResult|undefined>;\r\n    submitButton?: string|JSX.Element;\r\n}\r\n\r\nexport interface StepView {\r\n    stepName: string;\r\n    step: Step;\r\n    props: FormProps;\r\n    //view: JSX.Element;\r\n}\r\nexport interface MultiStepState {\r\n    //num: number;\r\n    //step: Step;\r\n    //formView: FormView;\r\n    topView: StepView;\r\n    stepViews: StepView[];\r\n}\r\n\r\nexport class MultiStep extends React.Component<MultiStepProps, MultiStepState> {\r\n    private values: any = {};\r\n    private stepViews: StepView[] = [];\r\n    private topView: StepView;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            topView: undefined,\r\n            stepViews: [],\r\n        }\r\n        this.onPrev = this.onPrev.bind(this);\r\n        this.onNext = this.onNext.bind(this);\r\n    }\r\n    \r\n    private setStep(stepName: string) {\r\n        let step = this.props.steps[stepName];\r\n        if (step === undefined) return; //throw new Error('Unknown step name: ' + stepName);\r\n        if (this.topView !== undefined) this.stepViews.push(this.topView);\r\n        let otherButton, onOther;\r\n        if (this.stepViews.length > 0) {\r\n            otherButton = <ButtonConten prefix=\"undo\" text=\"上一步\" />;\r\n            onOther = this.onPrev;\r\n        }\r\n        let {header, footer} = this.props;\r\n        let btnContent = step.next === undefined?\r\n            {prefix: 'cloud-upload', text: this.props.submitButton || '提交'} :\r\n            {suffix: 'arrow-right', text: '下一步'}\r\n        let formProps = {\r\n            formRows: step.formRows,\r\n            submitButton: <ButtonConten {...btnContent} />,\r\n            onSubmit: this.onNext,\r\n            otherButton: otherButton,\r\n            onOther: onOther,\r\n        };\r\n        let num = this.stepViews.length + 1;\r\n        this.topView = {\r\n            stepName: stepName,\r\n            step: step,\r\n            props: formProps,\r\n        };\r\n        this.setState({\r\n            topView: this.topView,\r\n            stepViews: this.stepViews\r\n        });\r\n    }\r\n    componentWillMount() {\r\n        this.setStep(this.props.first);\r\n    }\r\n    private onPrev(values:any) {\r\n        _.assign(this.values, values);\r\n        this.topView = this.stepViews.pop();\r\n        this.setState({\r\n            topView: this.topView,\r\n            stepViews: this.stepViews\r\n        });\r\n    }\r\n    private onNext(values:any): Promise<SubmitResult|undefined> {\r\n        _.assign(this.values, values);\r\n        //let {num, step} = this.state;\r\n        let {next} = this.topView.step;\r\n        if (next === undefined) {\r\n            return this.props.onSubmit(this.values)\r\n        }\r\n        let nextStepName:string;\r\n        if (typeof next === 'string') {\r\n            nextStepName = next;\r\n        }\r\n        else {\r\n            nextStepName = next(this.values);\r\n        }\r\n        this.setStep(nextStepName);\r\n    }\r\n    render() {\r\n        let {className, header, footer} = this.props;\r\n        let {topView, stepViews} = this.state;\r\n        let {stepName, step} = topView;\r\n        let hidden = {visibility: 'hidden'};\r\n        let num = stepViews.length + 1;\r\n        return <div className={className}>\r\n            <div>\r\n                {header && header(step, num)}\r\n                <TonvaForm key={stepName} initValues={this.values} {...topView.props} />\r\n                {footer && footer(step, num)}\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst ButtonConten = (props:{prefix?:string, text?:string|JSX.Element, suffix?:string}) => {\r\n    let {prefix, text, suffix} = props;\r\n    let pIcon, sIcon;\r\n    if (prefix !== undefined) pIcon = <i className={className('fa', 'fa-' + prefix)} />;\r\n    if (suffix !== undefined) sIcon = <i className={className('fa', 'fa-' + suffix)} />;\r\n    return <React.Fragment>{pIcon} {props.text} {sIcon}</React.Fragment>;\r\n}\r\n    \r\n","import {observable, IObservableArray, computed} from 'mobx';\r\nimport {uid} from './uid';\r\n\r\nexport abstract class PageItems<T> {\r\n    constructor(itemObservable:boolean = false) {\r\n        this._items = observable.array<T>([], {deep:itemObservable});\r\n    }\r\n    private isFirst: boolean = true;\r\n    @observable loading: boolean = false;\r\n    @observable private beforeLoad: boolean = true;\r\n    @observable protected loaded: boolean = false;\r\n    protected _items:IObservableArray<T>;\r\n    @observable allLoaded: boolean = false;\r\n    @computed get items():IObservableArray<T> {\r\n        if (this.beforeLoad === true) return null;\r\n        if (this.loaded === false) return undefined;\r\n        return this._items;\r\n    }\r\n\r\n    @observable topDiv:string;\r\n    @observable bottomDiv:string;\r\n    scrollToTop() {\r\n        this.topDiv = '$$'+uid();\r\n    }\r\n    scrollToBottom() {\r\n        this.bottomDiv = '$$'+uid();\r\n    }\r\n\r\n    protected param: any;\r\n    protected firstSize = 100;\r\n    protected pageStart = undefined;\r\n    protected pageSize = 30;\r\n    protected appendPosition:'head'|'tail' = 'tail';\r\n\r\n    protected abstract async load(param:any, pageStart:any, pageSize:number):Promise<T[]>;\r\n    protected abstract setPageStart(item:T);\r\n\r\n    reset() {\r\n        this.isFirst = true;\r\n        this.beforeLoad = true;\r\n        this.loaded = false;\r\n        this.param = undefined;\r\n        this.allLoaded = false;\r\n        this._items.clear();\r\n        this.setPageStart(undefined);\r\n    }\r\n\r\n    append(item:T) {\r\n        if (this.appendPosition === 'tail')\r\n            this._items.unshift(item);\r\n        else\r\n            this._items.push(item);\r\n    }\r\n\r\n    async first(param:any):Promise<void> {\r\n        this.reset();\r\n        this.beforeLoad = false;\r\n        this.param = param;\r\n        await this.more();        \r\n    }\r\n\r\n    async more():Promise<void> {\r\n        if (this.allLoaded === true) return;\r\n        if (this.loading === true) return;\r\n        this.loading = true;\r\n        let pageSize = this.pageSize + 1;\r\n        if (this.isFirst === true) {\r\n            if (this.firstSize > this.pageSize) pageSize = this.firstSize+1;\r\n        }\r\n        let ret = await this.load(\r\n                this.param, \r\n                this.pageStart,\r\n                pageSize);\r\n        this.loading = false;\r\n        this.loaded = true;\r\n        let len = ret.length;\r\n        if (this.isFirst===true && len>this.firstSize ||\r\n            this.isFirst===false && len>this.pageSize)\r\n        {\r\n            this.allLoaded = false;\r\n            --len;\r\n            ret.splice(len, 1);\r\n        }\r\n        else {\r\n            this.allLoaded = true;\r\n        }\r\n        if (len === 0) {\r\n            this._items.clear();\r\n            return;\r\n        }\r\n        this.setPageStart(ret[len-1]);\r\n        if (this.appendPosition === 'tail')\r\n            this._items.push(...ret);\r\n        else\r\n            this._items.unshift(...ret.reverse());\r\n        this.isFirst = false;\r\n    }\r\n}\r\n","import {observable, computed} from 'mobx';\r\n\r\nexport interface Id {\r\n    id: number;\r\n}\r\n\r\nexport abstract class CacheIds<T extends Id> {\r\n    constructor(maxCount:number = 100) {\r\n        this.maxCount = maxCount;\r\n    }\r\n    private maxCount:number;\r\n    private arr:T[] = [];\r\n    @observable dict = new Map<number, T>();\r\n\r\n    loadIds(ids:number[]) {\r\n        let arr:number[] = [];\r\n        for (let id of ids) {\r\n            if (id === null) continue;\r\n            let item = this.dict.get(id);\r\n            if (item === undefined) {\r\n                arr.push(id);\r\n                item = {id:id} as T;\r\n                this.dict.set(id, item);\r\n            }\r\n        }                \r\n        this.loadId(arr);\r\n    }\r\n\r\n    get(id:number):T {\r\n        if (id === undefined || id === null) return null;\r\n        let item = this.dict.get(id);\r\n        if (item === undefined) {\r\n            this.dict.set(id, {id:id} as T);\r\n            this.loadId([id]);\r\n            item = this.dict.get(id);\r\n        }\r\n        return item;\r\n    }\r\n    private setItem(id:number, item:T) {\r\n        if (item === undefined) {\r\n            this.dict.set(id, null);\r\n            this.arr.push({id: id} as T);\r\n        }\r\n        else {\r\n            this.dict.set(id, item);\r\n            this.arr.push(item);\r\n        }\r\n        if (this.arr.length > this.maxCount) {\r\n            item = this.arr.shift();\r\n            this.dict.delete(item.id);\r\n        }\r\n    }\r\n    private async loadId(ids:number[]) {\r\n        let items = await this._loadIds(ids);\r\n        if (items === undefined) {\r\n            for (let id of ids) {\r\n                if (id === null) continue;\r\n                let item = await this._loadId(id);\r\n                this.setItem(id, item);\r\n            }\r\n        }\r\n        else {\r\n            for (let id of ids) {\r\n                let item = items.find(v => v.id === id);\r\n                this.setItem(id, item);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected abstract async _loadIds(ids:number[]):Promise<T[]>;\r\n    protected abstract async _loadId(id:number):Promise<T>;\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport '../css/va-badge.css';\r\n\r\nexport interface BadgeProps {\r\n    className?: string;\r\n    badge?: string|number;\r\n    size?: 'xs' | 'sm' | 'lg';\r\n    color?: 'secondary'|'success'|'danger'|'primary'|'info'|'warning';\r\n    badgeAlign?: 'left'|'center'|'right';\r\n    badgeVertical?: 'top'|'middle'|'bottom';\r\n}\r\n\r\n@observer\r\nexport class Badge extends React.Component<BadgeProps> {\r\n    render() {\r\n        let {className, badge, size, color, badgeAlign, badgeVertical, children} = this.props;\r\n        let cn = classNames(\r\n            className,\r\n            'va-badge',\r\n            size && 'va-badge-'+size,\r\n            'va-badge-' + (color||'secondary'),\r\n            badgeAlign && 'va-badg-'+badgeAlign,\r\n            badgeVertical && 'va-badg-'+badgeVertical,\r\n        );\r\n        let b;\r\n        if (badge) b = <b>{badge}</b>;\r\n        return <div className={cn}>\r\n            {children}\r\n            {b}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport * as classNames from 'classnames';\r\nimport '../css/va-lmr.css';\r\n\r\nexport interface LMRProps {\r\n    className?: string | string[];\r\n    left?: string|JSX.Element;\r\n    right?: string|JSX.Element;\r\n    onClick?: ()=>void;\r\n}\r\n\r\n@observer\r\nexport class LMR extends React.Component<LMRProps> {\r\n    render() {\r\n        let {className, left, children, right, onClick} = this.props;\r\n        let l, r;\r\n        if (left !== undefined) l = <header>{left}</header>;\r\n        if (right !== undefined) r = <footer>{right}</footer>;\r\n        let cursor;\r\n        if (onClick !== undefined) cursor = 'cursor-pointer';\r\n        return <div className={classNames('va-lmr', className, cursor)} onClick={onClick}>\r\n            {l}\r\n            <div>{children}</div>\r\n            {r}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\n\r\nexport interface FAProps {\r\n    name: string;\r\n    className?: string;\r\n    size?: 'lg'|'2x'|'3x'|'4x'|'5x';\r\n    spin?: boolean;\r\n    fixWidth?: boolean;\r\n    border?: boolean;\r\n    pull?: 'left'|'right';\r\n    pulse?: boolean;\r\n    rotate?: 90|180|270;\r\n    flip?: 'horizontal'|'vertical';\r\n    inverse?: boolean;\r\n}\r\n\r\nexport class FA extends React.Component<FAProps> {\r\n    render() {\r\n        let {name, className, size, spin, fixWidth, border, pull, pulse, rotate, flip, inverse} = this.props;\r\n        let cn = classNames(className, 'fa',\r\n            name && ('fa-' + name),\r\n            size && 'fa-'+size,\r\n            fixWidth && 'fa-fw',\r\n            border && 'fa-border',\r\n            pull && 'fa-pull-' + pull,\r\n            spin && 'fa-spin',\r\n            pulse && 'fa-pulse',\r\n            rotate && 'fa-rotate-' + rotate,\r\n            flip && 'fa-flip-' + flip,\r\n            inverse && 'fa-inverse',\r\n        );\r\n        return <i className={cn} />\r\n    }\r\n}\r\n\r\nexport interface StackedFAProps {\r\n    className?: string;\r\n    size?: 'lg',\r\n}\r\nexport class StackedFA extends React.Component<StackedFAProps> {\r\n    render() {\r\n        let {className, size, children} = this.props;\r\n        let cn = classNames(\r\n            'fa-stack',\r\n            className,\r\n            size && 'fa-' + size);\r\n        return <span className={cn}>\r\n            {children}\r\n        </span>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\n\r\nexport const Muted = (props:any) => \r\n<small className={classNames('text-muted', props.className)} style={props.style}>\r\n    {props.children}\r\n</small>;\r\n","export * from './Badge';\r\nexport * from './LMR';\r\nexport * from './FA';\r\nexport * from './IconText';\r\nexport * from './Muted';\r\n","import * as React from 'react';\r\nimport { IObservableArray, computed } from 'mobx';\r\nimport { PageItems } from 'tonva-tools';\r\nimport {List} from './index';\r\n\r\nexport abstract class ListBase {\r\n    protected list: List;\r\n    constructor(list: List) {\r\n        this.list = list;\r\n    }\r\n    get isPaged():boolean {\r\n        let items = this.list.props.items;\r\n        return (items !== null && items !== undefined && Array.isArray(items) === false);\r\n    }\r\n    get items():any[]|IObservableArray<any> {\r\n        let items = this.list.props.items;\r\n        if (items === null) return null;\r\n        if (items === undefined) return undefined;\r\n        if (Array.isArray(items) === true)\r\n            return items as IObservableArray<any>;\r\n        else\r\n            return (items as PageItems<any>).items;\r\n    }\r\n    @computed get loading():boolean {\r\n        let items = this.list.props.items;\r\n        if (items === null) return false;\r\n        if (items === undefined) return true;\r\n        let pageItems = items as PageItems<any>;\r\n        if (pageItems.items === undefined) return false;\r\n        return pageItems.loading;\r\n    }\r\n    get selectedItems():any[] { return; }\r\n    updateProps(nextProps:any) {}\r\n    abstract render(item:any, index:number):JSX.Element;\r\n    protected renderContent(item:any, index:number) {\r\n        let {render} = this.list.props.item;\r\n        if (render === undefined) return <div className=\"px-3 py-2\">{JSON.stringify(item)}</div>;\r\n        return render(item, index);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {ListBase} from './base';\r\n\r\nexport class Clickable extends ListBase {\r\n    render(item:any, index:number):JSX.Element {\r\n        let {className, key, onClick} = this.list.props.item;\r\n        return <li key={key===undefined?index:key(item)} className={classNames('va-row-clickable', className)} onClick={()=>onClick(item)}>\r\n            {this.renderContent(item, index)}\r\n        </li>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {ListBase} from './base';\r\nimport { uid } from '../uid';\r\n\r\nexport class Static extends ListBase {\r\n    render(item:any, index:number):JSX.Element {\r\n        let {className, key, render} = this.list.props.item;\r\n        if (typeof item === 'string') {\r\n            let cn = classNames('va-list-gap', 'px-3', 'pt-1');\r\n            return <li key={uid()} className={cn}>{item}</li>;\r\n        }\r\n        return <li key={key===undefined?index:key(item)} className={classNames(className)}>\r\n            {this.renderContent(item, index)}\r\n        </li>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable, computed, IObservableArray} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport {ListBase} from './base';\r\nimport {uid} from '../uid';\r\nimport { PageItems } from 'tonva-tools';\r\n\r\nexport interface SelectableItem {\r\n    selected: boolean;\r\n    item: any;\r\n    labelId: string;\r\n}\r\n\r\nexport class Selectable extends ListBase {\r\n    private _items: SelectableItem[];\r\n    private _selectedItems: any[];\r\n    private input: HTMLInputElement;\r\n    private buildItems() {\r\n        console.log('buildItems in selectable.tsx');\r\n        let {items, selectedItems, compare} = this.list.props;\r\n        let itemsArray:any[] | IObservableArray<any>;\r\n        if (items === undefined) {\r\n            return this._items = undefined;\r\n        }\r\n        if (items === null) {\r\n            return this._items = null;\r\n        }\r\n        if (Array.isArray(items) === true) {\r\n            itemsArray = items as any;\r\n        }\r\n        else {\r\n            itemsArray = (items as PageItems<any>).items;\r\n        }\r\n        //let items = this.items;\r\n        this._selectedItems = selectedItems;\r\n        if (selectedItems === undefined) {\r\n            return this._items = itemsArray.map(v => {\r\n                return {\r\n                    selected:false, \r\n                    item:v, \r\n                    labelId:uid()\r\n                };\r\n            });\r\n        }\r\n        if (compare === undefined) {\r\n            return this._items = itemsArray.map(v => {\r\n                return {\r\n                    selected:selectedItems.find(si => si === v) !== undefined, \r\n                    item:v, \r\n                    labelId:uid()\r\n                };\r\n            });\r\n        }\r\n        return this._items = itemsArray.map(v => {\r\n            return {\r\n                selected:selectedItems.find(si => compare(v, si)) !== undefined, \r\n                item:v, \r\n                labelId:uid()\r\n            };\r\n        });\r\n    }\r\n    @computed get items() {\r\n        //if (this._items === undefined) \r\n        this.buildItems();\r\n        return this._items;\r\n    }\r\n    updateProps(nextProps:any) {\r\n        if (nextProps.selectedItems === this._selectedItems) return;\r\n        this.buildItems();\r\n    }\r\n    private onSelect(item:SelectableItem, selected:boolean) {\r\n        item.selected = selected;\r\n        let anySelected = this._items.some(v => v.selected);\r\n        this.list.props.item.onSelect(item.item, selected, anySelected);\r\n    }\r\n    \r\n    get selectedItems():any[] {\r\n        return this._items.filter(v => v.selected === true).map(v => v.item);\r\n    }\r\n    /*\r\n    set selectedItems(value: any[]) {\r\n        if (value === undefined) return;\r\n        if (this._items === undefined) return;\r\n        let sLen = this._items.length;\r\n        let list = value.slice();\r\n        for (let n=0; n<sLen; n++) {\r\n            let sItem = this._items[n];\r\n            let len = list.length;\r\n            if (len === 0) break;\r\n            let item = sItem.item;\r\n            for (let i=0; i<len; i++) {\r\n                let v = list[i];\r\n                if (item === v) {\r\n                    sItem.selected = true;\r\n                    value.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n        };\r\n    }\r\n    */\r\n    //w-100 mb-0 pl-3\r\n    //m-0 w-100\r\n    render(item:SelectableItem, index:number):JSX.Element {\r\n        let {className, key, render, onSelect} = this.list.props.item;\r\n        let {labelId, selected} = item;\r\n        return <li key={key===undefined?index:key(item)} className={classNames(className)}>\r\n            <div className=\"d-flex align-items-center px-3\">\r\n                <input ref={input=>{\r\n                        if (!input) return;\r\n                        this.input = input; input.checked = selected;\r\n                    }}\r\n                    className=\"\" type=\"checkbox\" value=\"\" id={labelId}\r\n                    defaultChecked={selected}\r\n                    onChange={(e)=>{\r\n                        this.onSelect(item, e.target.checked)} \r\n                    }/>\r\n                <label className=\"\" style={{flex:1, marginBottom:0}} htmlFor={labelId}>\r\n                    {this.renderContent(item.item, index)}\r\n                </label>\r\n            </div>\r\n        </li>\r\n    }\r\n}\r\n/*\r\n<label>\r\n<label className=\"custom-control custom-checkbox\">\r\n    <input type='checkbox' className=\"custom-control-input\"\r\n        //checked={selected}\r\n        onChange={(e)=>this.onSelect(item, e.target.checked)} />\r\n    <span className=\"custom-control-indicator\" />\r\n</label>\r\n{this.renderContent(item.item, index)}\r\n</label>\r\n*/\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {PageItems} from 'tonva-tools';\r\nimport {ListBase} from './base';\r\nimport {Clickable} from './clickable';\r\nimport {Static} from './static';\r\nimport {Selectable} from './selectable';\r\nimport \"../css/va-list.css\";\r\nimport { IObservableArray } from 'mobx';\r\n\r\ntype StaticRow = string|JSX.Element|(()=>string|JSX.Element);\r\n\r\nexport interface ListProps {\r\n    className?: string|string[];\r\n    items: any[] | IObservableArray<any> | PageItems<any>;\r\n    item: {\r\n        className?: string|string[];\r\n        render?: (item:any, index:number) => JSX.Element;\r\n        onSelect?: (item:any, isSelected:boolean, anySelected:boolean)=>void;\r\n        onClick?: (item:any)=>void;\r\n        key?: (item:any)=>string;\r\n    };\r\n    compare?:(item:any, selectItem)=>boolean;\r\n    selectedItems?:any[];\r\n    header?: StaticRow;\r\n    footer?: StaticRow;\r\n    before?: StaticRow;\r\n    loading?: StaticRow;\r\n    none?: StaticRow;\r\n}\r\n\r\n@observer\r\nexport class List extends React.Component<ListProps> {\r\n    private listBase: ListBase;\r\n    constructor(props:ListProps) {\r\n        super(props);\r\n        let {item} = this.props;\r\n        let {onClick, onSelect} = item;\r\n        if (onSelect !== undefined)\r\n            this.listBase = new Selectable(this);\r\n        else if (onClick !== undefined)\r\n            this.listBase = new Clickable(this);\r\n        else\r\n            this.listBase = new Static(this);\r\n    }\r\n    _$scroll = (direct: 'top'|'bottom') => {\r\n        console.log('############### items scroll to ' + direct);\r\n    }\r\n    componentWillUpdate(nextProps:ListProps, nextState, nextContext) {\r\n        this.listBase.updateProps(nextProps);\r\n    }\r\n    get selectedItems():any[] {\r\n        return this.listBase.selectedItems;\r\n    }\r\n    render() {\r\n        let {className, header, footer, before, loading, none, item, selectedItems} = this.props;\r\n        if (before === undefined) before = 'before';\r\n        if (loading === undefined) loading = 'loading';\r\n        if (none === undefined) none = 'none';        \r\n        //this.listBase.selectedItems = selectedItems;\r\n        let {isPaged, items, loading:isLoading} = this.listBase;\r\n        function staticRow(row:StaticRow, type:string) {\r\n            if (!row) return;\r\n            switch (typeof row) {\r\n                default:\r\n                case 'string': return <li className={\"va-list-\"+type}>{row}</li>;\r\n                case 'function': return <li className={\"va-list-\"+type}>{(row as ()=>string|JSX.Element)()}</li>;\r\n                case 'object': return <li>{row}</li>\r\n            } \r\n        }\r\n        let content:any;\r\n        if (items === null)\r\n            content = staticRow(before, 'before');\r\n        else if (items === undefined)\r\n            content = staticRow(loading, 'loading');\r\n        else if (items.length === 0)\r\n            content = staticRow(none, 'none');\r\n        else {\r\n            content = items.map((item, index) => {\r\n                return this.listBase.render(item, index);\r\n            });\r\n        }\r\n        return <ul className={classNames('va-list', className)}>\r\n            {staticRow(header, 'header')}\r\n            {content}\r\n            {staticRow(footer, 'footer')}\r\n        </ul>;\r\n    }\r\n}\r\n","import _ from 'lodash';\r\nimport { KeyValueRes, Res } from '../res';\r\n\r\nexport interface FormRes extends KeyValueRes {\r\n    required: string;\r\n    number: string;\r\n    integer: string;\r\n    min: string;\r\n    max: string;\r\n}\r\n\r\nexport const formRes:Res<FormRes> = {\r\n    _: {\r\n        required: 'required',\r\n        number: 'not valid number',\r\n        integer: 'not valid integer',\r\n        min: 'min value is ${min}',\r\n        max: 'max value is ${max}',\r\n    },\r\n    zh: {\r\n        _: {\r\n            required: '必须填',\r\n            number: '需要数字',\r\n            integer: '需要整数',\r\n            min: '不能小于${min}',\r\n            max: '不能大于${max}',\r\n        }\r\n    },\r\n}\r\n","import * as React from 'react';\r\nimport {observable, IReactionDisposer, autorun} from 'mobx';\r\nimport classNames from 'classnames';\r\nimport { Schema, ItemSchema, ArrSchema } from '../schema';\r\nimport { UiSchema, TempletType } from '../schema';\r\nimport { factory } from './widgets';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport { ContextContainer, FormContext, Context, RowContext } from './context';\r\nimport { FormRes, formRes } from './formRes';\r\nimport { resLang } from '../res';\r\n\r\nexport type FormButtonClick = (name:string, context: Context) => Promise<any>;\r\n\r\nexport interface FormProps {\r\n    className?: string;\r\n    schema: Schema;\r\n    uiSchema?: UiSchema;\r\n    formData?: any;\r\n    onButtonClick?: FormButtonClick;\r\n    fieldLabelSize?: number;            // col-sm-2 for label\r\n    requiredFlag?: boolean;             // default=true\r\n    beforeShow?: (formContext:FormContext) => void;\r\n    res?: FormRes;\r\n\r\n    Container?: (content:JSX.Element) => JSX.Element;\r\n    FieldContainer?: (label:string|JSX.Element, content:JSX.Element) => JSX.Element;\r\n    FieldClass?: string;\r\n    ButtonClass?: string;\r\n/*    \r\n    ArrContainer?: (label:any, content:JSX.Element) => JSX.Element;\r\n    RowContainer?: (content:JSX.Element) => JSX.Element;\r\n    RowSeperator?: JSX.Element;\r\n*/\r\n}\r\n\r\nexport class Form extends React.Component<FormProps> {\r\n    readonly schema: Schema;\r\n    readonly itemSchemas: {[name:string]: ItemSchema};\r\n    readonly uiSchema: UiSchema;\r\n    readonly res?: FormRes;\r\n    protected formContext: FormContext;\r\n    private content: any;\r\n    private formData: any;\r\n    private disposer: IReactionDisposer;\r\n    @observable readonly data:any;\r\n\r\n    readonly Container: (content:JSX.Element) => JSX.Element;\r\n    readonly FieldContainer: (label:any, content:JSX.Element) => JSX.Element;\r\n    readonly FieldClass: string;\r\n    readonly ButtonClass: string;\r\n    //readonly ArrContainer: (label:any, content:JSX.Element) => JSX.Element;\r\n    //readonly RowContainer: (content:JSX.Element) => JSX.Element;\r\n    //readonly RowSeperator: JSX.Element;\r\n\r\n    constructor(props:FormProps) {\r\n        super(props);\r\n        let {schema, uiSchema, formData, \r\n            Container, FieldContainer, FieldClass, \r\n            ButtonClass, \r\n            res,\r\n            //ArrContainer, RowContainer, //ArrFieldContainer, \r\n            //RowSeperator,\r\n        } = props;\r\n        this.Container = Container || this.DefaultContainer;\r\n        this.FieldContainer = FieldContainer || this.DefaultFieldContainer;\r\n        this.FieldClass = FieldClass!==undefined && FieldClass!==''&&FieldClass!==null? FieldClass : this.DefaultFieldClass;\r\n        this.res = res || this.DefaultRes;\r\n        this.ButtonClass = ButtonClass || this.DefaultButtonClass;\r\n        //this.ArrContainer = ArrContainer || this.DefaultArrContainer;\r\n        //this.RowContainer = RowContainer || this.DefaultRowContainer;\r\n        //this.RowSeperator = RowSeperator || this.DefaultRowSeperator;\r\n\r\n        this.schema = schema;\r\n        this.itemSchemas = {};\r\n        for (let itemSchema of this.schema) {\r\n            this.itemSchemas[itemSchema.name] = itemSchema;\r\n        }\r\n        this.uiSchema = uiSchema;\r\n        this.formData = formData;\r\n        this.disposer = autorun(this.calcSelectOrDelete);\r\n        this.data = {};\r\n        this.initData(formData);\r\n        let inNode:boolean = this.props.children !== undefined || this.uiSchema && this.uiSchema.Templet !== undefined;\r\n        //this.formContext = new FormContext(this, inNode);\r\n        let {children} = this.props;\r\n        //let content:JSX.Element; //, inNode:boolean;\r\n        //let formContext: FormContext;\r\n        if (children !== undefined) {\r\n            //inNode = true;\r\n            this.content = <>{children}</>;\r\n            this.formContext = new FormContext(this, true);\r\n        }\r\n        else {\r\n            let Templet: TempletType;\r\n            if (this.uiSchema !== undefined) {\r\n                Templet = this.uiSchema.Templet;\r\n            }\r\n            if (Templet !== undefined) {\r\n                // inNode = true;\r\n                this.content = typeof(Templet) === 'function'? Templet(this.data) : Templet;\r\n                this.formContext = new FormContext(this, true);\r\n            }\r\n            else {\r\n                // inNode = false;\r\n                this.formContext = new FormContext(this, false);\r\n                this.content = <>{this.schema.map((v, index) => {\r\n                    return <React.Fragment key={index}>{factory(this.formContext, v, children)}</React.Fragment>\r\n                })}</>;\r\n            }\r\n        }\r\n    }\r\n\r\n    private initData(formData: any) {\r\n        if (formData === undefined) formData = {};\r\n        for (let itemSchema of this.schema) {\r\n            this.initDataItem(itemSchema, this.data, formData);\r\n        }\r\n    }\r\n\r\n    private initDataItem(itemSchema: ItemSchema, data:any, formData: any):any {\r\n        let {name, type} = itemSchema;\r\n        if (type === 'button') return;\r\n        if (type === 'arr') {\r\n            let arrItem:ArrSchema = itemSchema as ArrSchema;\r\n            let {arr:arrItems} = arrItem;\r\n            if (arrItems === undefined) return;\r\n            let arrDict = arrItem.itemSchemas = {};\r\n            for (let item of arrItems) {\r\n                arrDict[item.name] = item;\r\n            }\r\n            let val:any[] = formData[name];\r\n            if (val === undefined) val = [];\r\n            else if (Array.isArray(val) === false) val = [val];\r\n            let arr:any[] = [];\r\n            for (let row of val) {\r\n                let {$isSelected, $isDeleted} = row;\r\n                let r = {\r\n                    $source: row,\r\n                    $isSelected: $isSelected,\r\n                    $isDeleted: $isDeleted,\r\n                };\r\n                for (let item of arrItems) {\r\n                    this.initDataItem(item, r, row);\r\n                    /*\r\n                    let {name:nm} = item;\r\n                    let v = row[nm];\r\n                    if (v === undefined) v = null;\r\n                    r[nm] = v;\r\n                    */\r\n                }\r\n                arr.push(r);\r\n            }\r\n            data[name] = observable(arr);\r\n            return;\r\n        }\r\n        data[name] = formData[name];\r\n    }\r\n\r\n    private calcSelectOrDelete = () => {\r\n        if (this.formData === undefined) return;\r\n        for (let itemSchema of this.schema) {\r\n            this.arrItemOperated(itemSchema);\r\n        }\r\n    }\r\n\r\n    private arrItemOperated(itemSchema: ItemSchema) {\r\n        let {name, type} = itemSchema;\r\n        if (type !== 'arr') return;\r\n        if (this.data === undefined) return;\r\n        let formArrVal = this.data[name];\r\n        if (formArrVal === undefined) return;\r\n        let {arr: arrItems} = itemSchema as ArrSchema;\r\n        for (let row of formArrVal) {\r\n            let {$source} = row;\r\n            if ($source === undefined) continue;\r\n            let {$isSelected, $isDeleted} = $source;\r\n            row.$isSelected = $isSelected;\r\n            row.$isDeleted = $isDeleted;\r\n            //console.log($isSelected, $isDeleted);\r\n            for (let item of arrItems) {\r\n                this.arrItemOperated(item);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let {beforeShow} = this.props;\r\n        if (beforeShow !== undefined) beforeShow(this.formContext);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.disposer();\r\n    }\r\n\r\n    render() {\r\n        return <ContextContainer.Provider value={this.formContext}>\r\n            <this.formContext.renderErrors />\r\n            {this.Container(this.content)}\r\n        </ContextContainer.Provider>;\r\n    }\r\n\r\n    protected DefaultContainer = (content:JSX.Element): JSX.Element => {\r\n        return <form className={classNames(this.props.className)}>\r\n            {content}\r\n        </form>;\r\n    }\r\n    /*\r\n    protected DefaultArrFieldContainer = (itemName:string, content:JSX.Element, context:RowContext): JSX.Element => {\r\n        return this.InnerFieldContainer(itemName, content, context);\r\n    }*/\r\n    protected DefaultFieldContainer = (label:string|JSX.Element, content:JSX.Element): JSX.Element => {\r\n        //return this.InnerFieldContainer(itemName, content, context);\r\n        let {fieldLabelSize} = this.props;\r\n\r\n        if (fieldLabelSize > 0) {\r\n            let labelView:any;\r\n            if (label === null) {\r\n                fieldLabelSize = 0;\r\n            }\r\n            else {\r\n                labelView = <label className={classNames('col-sm-' + fieldLabelSize, 'col-form-label')}>{label}</label>\r\n            }\r\n            let fieldCol = 'col-sm-' + (12 - fieldLabelSize);\r\n            return <div className=\"form-group row\">\r\n                {labelView}\r\n                <div className={fieldCol}>{content}</div>\r\n            </div>;\r\n        }\r\n        return <div className=\"form-group\">\r\n            {label===null? null:<label className=\"col-form-label\">{label}</label>}\r\n            {content}\r\n        </div>;\r\n    }\r\n    protected DefaultFieldClass:string = undefined;\r\n    protected DefaultButtonClass = 'text-center py-2';\r\n    protected DefaultRes:FormRes = resLang<FormRes>(formRes);\r\n\r\n    ArrContainer = (label:any, content:JSX.Element): JSX.Element => {\r\n        return <div>\r\n            <div className={classNames('small text-muted text-center bg-light py-1 px-3 mt-4 mb-1')}>{label}</div>\r\n            {content}\r\n        </div>;\r\n    }\r\n    RowContainer = (content:JSX.Element): JSX.Element => {\r\n        //return <div className=\"row\">{content}</div>;\r\n        let cn = classNames({\r\n            'py-3': true\r\n        });\r\n        return <div className={cn}>{content}</div>\r\n    }\r\n    RowSeperator = <div className=\"border border-gray border-top\" />;\r\n}\r\n","import * as React from 'react';\r\nimport { factory } from './widgets';\r\nimport { ContextContainer, Context } from './context';\r\n\r\nexport interface FieldProps {\r\n    name: string;\r\n}\r\n\r\nexport class Field extends React.Component<FieldProps> {\r\n    static contextType = ContextContainer;\r\n    render() {\r\n        let {name, children } = this.props;\r\n        let context:Context = this.context;\r\n        if (context === undefined) return <span className=\"text-danger\">!only in Form!</span>;\r\n        let itemSchema = context.getItemSchema(name);\r\n        let content = factory(context, itemSchema, children, this.props);\r\n        if (content === undefined) {\r\n            return <span className=\"text-danger\">!!{name} is not defined!!</span>;\r\n        }\r\n        return content;\r\n    }\r\n}\r\n","export {Form} from './form';\r\nexport {Field} from './field';\r\nexport {Context, RowContext} from './context';\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport * as className from 'classnames';\r\nimport {ListView} from '../listView';\r\nimport {PropGridProps} from './PropGrid';\r\nimport {LabeledProp, StringProp, NumberProp, ListProp, ComponentProp} from './propView';\r\n\r\nexport abstract class PropRow {\r\n    setValues(values: any) {}\r\n    abstract render(key:string): any;\r\n}\r\n\r\nexport class PropBorder extends PropRow {\r\n    render(key:string): JSX.Element {\r\n        return <div key={'_b_' + key} className=\"\">\r\n            <div className=\"col-sm-12\">\r\n                <div style={{borderTop: '1px solid #f0f0f0'}} />\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class PropGap extends PropRow {\r\n    private param: string;\r\n    constructor(param?: string) {\r\n        super();\r\n        this.param = param;\r\n    }\r\n    render(key:string): JSX.Element {\r\n        let w: string;\r\n        switch (this.param) {\r\n            default: w = 'py-2'; break;\r\n            case '=': w = 'py-1'; break;\r\n            case '-': w = 'pb-1'; break;\r\n        }\r\n        let cn = className(w);\r\n        return <div key={'_g_' + key} className={cn} style={{backgroundColor: '#f0f0f0'}} />;\r\n    }\r\n}\r\n\r\nconst valueAlignStart = 'justify-content-start';\r\nconst valueAlignCenter = 'justify-content-center';\r\nconst valueAlignEnd = 'justify-content-end';\r\nexport abstract class LabeledPropRow extends PropRow {\r\n    protected gridProps: PropGridProps;\r\n    protected prop: LabeledProp;\r\n    protected content: any;\r\n    //protected values: any;\r\n    constructor(gridProps:PropGridProps, prop: LabeledProp) {\r\n        super();\r\n        this.gridProps = gridProps;\r\n        this.prop = prop;\r\n        //this.values = values;\r\n    }\r\n    render(key:string):any {\r\n        let {onClick, bk} = this.prop;\r\n        let cn = className({\r\n            \"cursor-pointer\": onClick !== undefined,\r\n            \"bg-white\": bk === undefined, \r\n            \"row\": true\r\n        });\r\n        return <div key={key} className={cn} onClick={onClick}>\r\n            {this.renderLabel()}\r\n            {this.renderProp()}\r\n        </div>;\r\n    }\r\n    protected renderLabel():any {\r\n        let {label} = this.prop;\r\n        if (label === undefined) return null;\r\n        return <label className=\"col-sm-2 col-form-label\">\r\n            {label}\r\n        </label>;\r\n    }\r\n    protected renderProp():any {\r\n        let {label, full} = this.prop as any;\r\n        let align, vAlign;\r\n        switch (this.gridProps.alignValue) {\r\n            case 'left': align = valueAlignStart; break;\r\n            case 'center': align = valueAlignCenter; break;\r\n            case 'right': align = valueAlignEnd; break;\r\n        }\r\n        switch (this.prop.vAlign) {\r\n            case 'top': vAlign = 'align-items-start'; break;\r\n            default:\r\n            case 'center': vAlign = 'align-items-center'; break;\r\n            case 'bottom': vAlign = 'align-items-end'; break;\r\n            case 'stretch': vAlign = 'align-items-stretch'; break;\r\n        }\r\n        let col:string;\r\n        if (full !== true)\r\n            col = label===undefined? 'col-sm-12':'col-sm-10';\r\n        else\r\n            col = 'w-100';\r\n        let cn = className(align, vAlign, col, 'd-flex');\r\n        return <div className={cn}>\r\n            {this.renderPropBody()}\r\n        </div>;\r\n    }\r\n    protected renderPropBody():any {\r\n        return <div className=\"form-control-plaintext\">\r\n            {this.renderPropContent()}\r\n        </div>;\r\n    }\r\n    protected renderPropContent():any {\r\n        return this.content;\r\n    }\r\n}\r\n\r\nexport class StringPropRow extends LabeledPropRow {\r\n    protected prop: StringProp;\r\n    setValues(values:any) {\r\n        if (values === undefined) this.content = undefined;\r\n        else this.content = values[this.prop.name];\r\n    }\r\n}\r\n\r\nexport class NumberPropRow extends LabeledPropRow {\r\n    protected prop: NumberProp;\r\n    setValues(values:any) {\r\n        if (values === undefined) this.content = undefined;\r\n        else this.content = values[this.prop.name];\r\n    }\r\n}\r\n\r\nexport class ListPropRow extends LabeledPropRow {\r\n    protected prop: ListProp;\r\n    setValues(values:any) {\r\n        if (values === undefined) this.content = undefined;\r\n        else {\r\n            let list = this.prop.list;\r\n            if (typeof list === 'string') this.content = values[list];\r\n            else this.content = undefined;\r\n        }\r\n    }\r\n    protected renderPropBody() {\r\n        let {list, row} = this.prop;\r\n        let items:any[] = typeof list === 'string'? this.content : list;\r\n        if (items === undefined) return <div/>;\r\n        // new row(item)\r\n        return <div className=\"w-100\">\r\n            {\r\n                items.map((item, index) => <React.Fragment key={index}>\r\n                    {index===0? null: <div style={{width:'100%', borderBottom:'1px solid #f0f0f0'}} />}\r\n                    {React.createElement(row, item)}\r\n                </React.Fragment>)\r\n            }\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class ComponentPropRow extends LabeledPropRow {\r\n    protected prop: ComponentProp;\r\n    protected renderPropBody() {\r\n        let {component} = this.prop;\r\n        return component;\r\n    }\r\n}\r\n\r\nexport class PropContainer extends PropRow {\r\n    render(key:string): JSX.Element {\r\n        return <div className=\"bg-white\">\r\n            <label className=\"col-sm-2 col-form-label\">\r\n                AAABBBCCC\r\n            </label>\r\n            <div className=\"col-sm-10\">\r\n                <div className=\"form-control-plaintext\">\r\n                    dsfasfa sdf asdf a\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n","import {ListViewProps} from '../listView';\r\nimport {PropGridProps} from './PropGrid';\r\nimport {PropRow, PropBorder, PropGap, PropContainer,\r\n    StringPropRow, NumberPropRow, ListPropRow, ComponentPropRow} from './row';\r\n\r\nexport interface Format {\r\n\r\n}\r\n\r\nexport interface PropBase {\r\n    onClick?: ()=>void;\r\n}\r\n\r\nexport interface LabeledProp extends PropBase {\r\n    label?: string;\r\n    bk?: string;\r\n    vAlign?: 'top'|'bottom'|'center'|'stretch';\r\n}\r\n\r\nexport interface StringProp extends LabeledProp {\r\n    type: 'string';\r\n    name: string;\r\n}\r\n\r\nexport interface NumberProp extends LabeledProp {\r\n    type: 'number';\r\n    name: string;\r\n}\r\n\r\nexport interface FormatProp extends LabeledProp {\r\n    type: 'format';\r\n    format: Format;\r\n}\r\n\r\nexport interface ListProp extends LabeledProp {\r\n    type: 'list';\r\n    list: string | any[];  // string 表示名字，否则就是值\r\n    row: new (props:any) => React.Component;\r\n}\r\n\r\nexport interface ComponentProp extends LabeledProp {\r\n    type: 'component';\r\n    full?: boolean;\r\n    component: any; //JSX.Element;\r\n}\r\n\r\nexport type Prop = StringProp | NumberProp | FormatProp | ListProp | ComponentProp | string;\r\n\r\nexport class PropView {\r\n    private gridProps:PropGridProps\r\n    private props: Prop[];\r\n    //private values:any;\r\n    private rows: PropRow[];\r\n\r\n    constructor(gridProps:PropGridProps, props:Prop[]) {\r\n        this.gridProps = gridProps;\r\n        this.props = props;\r\n        //this.values = values;\r\n        this.buildRows();\r\n    }\r\n\r\n    private buildRows() {\r\n        this.rows = [];\r\n        let isGap:boolean = true;\r\n        for (let prop of this.props) {\r\n            if (typeof prop === 'string') {\r\n                this.rows.push(new PropGap(prop));\r\n                isGap = true;\r\n            }\r\n            else {\r\n                if (!isGap) this.rows.push(new PropBorder());\r\n                let row;\r\n                switch (prop.type) {\r\n                    default: continue;\r\n                    case 'string': row = new StringPropRow(this.gridProps, prop); break;\r\n                    case 'number': row = new NumberPropRow(this.gridProps, prop); break;\r\n                    case 'list': row = new ListPropRow(this.gridProps, prop); break;\r\n                    case 'component': row = new ComponentPropRow(this.gridProps, prop); break;\r\n                }\r\n                this.rows.push(row);\r\n                isGap = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    setValues(values: any) {\r\n        for (let r of this.rows) r.setValues(values);\r\n    }\r\n\r\n    render() {\r\n        return this.rows.map((row, index) => row.render(String(index)));\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {Prop, PropView} from './propView';\r\nimport {PropContainer, PropBorder, PropGap} from './row';\r\n\r\nexport interface PropGridProps {\r\n    className?: string;\r\n    rows: Prop[];\r\n    values: any;\r\n    alignValue?: 'left'|'center'|'right';\r\n}\r\n\r\n@observer\r\nexport class PropGrid extends React.Component<PropGridProps> {\r\n/*\r\n    private propView: PropView;\r\n    constructor(props:PropGridProps) {\r\n        super(props);\r\n    }\r\n*/\r\n/*\r\n    componentWillMount() {\r\n        this.propView = new PropView(this.props.rows);\r\n        this.propView.setValues(this.props.values);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps: Readonly<PropGridProps>, nextContext: any) {\r\n        this.propView = new PropView(this.props.rows);\r\n        this.propView.setValues(nextProps.values);\r\n        this.forceUpdate();\r\n    }\r\n*/\r\n    render() {\r\n        let {className, rows, values} = this.props;\r\n        let propView = new PropView(this.props, rows);\r\n        propView.setValues(values);\r\n        let cn = classNames('container-fluid', className);\r\n        return <div className={cn}>\r\n            {propView.render()}\r\n        </div>;\r\n    }\r\n}\r\n","export * from './propView';\r\nexport * from './row';\r\nexport * from './PropGrid';\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {IObservableValue, IComputedValue} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport '../css/va-row.css';\r\n\r\nexport interface ListItem {\r\n    key?: string|number;\r\n    date?: Date;\r\n    icon?: string | JSX.Element;\r\n    main?: string;\r\n    vice?: string;\r\n    middle?: string | JSX.Element;\r\n    midSize?: number;\r\n    right?: string | JSX.Element;\r\n    onClick?: () => void;\r\n    unread?: number|IComputedValue<number>;         // <0 表示red dot\r\n}\r\n\r\nexport interface ListRowProps extends ListItem {\r\n    //onClick: () => void;\r\n}\r\n\r\nexport interface ListRowState {\r\n    pressed: boolean;\r\n}\r\n\r\n@observer\r\nexport class ListRow extends React.Component<ListRowProps, ListRowState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pressed: false,\r\n        }\r\n    }\r\n    render() {\r\n        let {date, main, vice, middle, midSize, icon, unread, right, onClick} = this.props;\r\n        let header, isIcon:boolean, noteNum;\r\n        if (unread !== undefined) {\r\n            let uv:number;\r\n            if (typeof unread === 'number') uv = unread;\r\n            else uv = unread.get();\r\n                if (uv > 0)\r\n                noteNum = <b>{uv}</b>;\r\n            else if (uv < 0)\r\n                noteNum = <b className='dot' />;\r\n        }\r\n        switch (typeof icon) {\r\n            case 'object':\r\n                header = <header>{icon}{noteNum}</header>; \r\n                isIcon= false;\r\n                break;\r\n            case 'string': \r\n                header = <header className='icon'><img src={icon as string} />{noteNum}</header>;\r\n                isIcon= true; \r\n                break;\r\n        }\r\n        let mid;\r\n        if (middle !== undefined) {\r\n            switch (typeof middle) {\r\n                case 'string':\r\n                    mid = <div style={{flex:midSize}}>{middle}</div>;\r\n                    break;\r\n                default:\r\n                    mid = middle;\r\n                    break;\r\n            }\r\n        }\r\n        let footer;\r\n        if (right !== undefined) {\r\n            if (typeof right === 'string')\r\n                footer = <footer><small className=\"text-muted\">{right}</small></footer>;\r\n            else\r\n                footer = <footer>{right}</footer>;\r\n        }\r\n        let viceSpan;\r\n        if (vice !== undefined) viceSpan = <span>{vice}</span>;\r\n        let cn = classNames('va-row', {icon:isIcon, pressed: this.state.pressed}, {\"va-action\": onClick !== undefined});\r\n        return (\r\n        <li className={cn} onClick={onClick}>\r\n            {header}\r\n            <div>\r\n                <div>{main}</div>\r\n                {viceSpan}\r\n            </div>\r\n            {mid}\r\n            {footer}\r\n        </li>\r\n        );\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {ListItem, ListRow} from './listRow';\r\n\r\nexport interface ListViewProps {\r\n    className?: string;\r\n    items?: any[];\r\n    renderRow?: (item:any, index:number, ex?:any) => JSX.Element;\r\n    ex?: any;\r\n    header?: string|JSX.Element;\r\n    beforeLoad?: string|JSX.Element;\r\n    none?: string|JSX.Element;\r\n    footer?: string|JSX.Element;\r\n    itemClick?: (item:any)=>void;\r\n    converter?: (item:any)=>ListItem;\r\n}\r\n\r\n@observer\r\nexport class ListView extends React.Component<ListViewProps, null> {\r\n    render() {\r\n        let {header, items, beforeLoad, none, renderRow, className, footer, itemClick, converter} = this.props;\r\n        let cn = classNames(className, 'va-list');\r\n        let content, elHeader;\r\n        if (items === undefined)\r\n            content = beforeLoad === null? null : <li className='empty'>\r\n                {beforeLoad || '...'}\r\n            </li>;\r\n        else if (items.length === 0) {\r\n            content = (\r\n            <li className='empty'>\r\n                {\r\n                    none || '[none]'\r\n                }\r\n            </li>);\r\n        }\r\n        else if (renderRow !== undefined) {\r\n            content = items.map((item, index) => renderRow(item, index, this.props.ex));\r\n        }\r\n        else {\r\n            content = items.map((item, index) => {\r\n                let onClick = item.onClick;\r\n                if (onClick === undefined && itemClick !== undefined) \r\n                    onClick = ()=>itemClick(item);\r\n                let listItem:ListItem;\r\n                if (converter !== undefined) {\r\n                    listItem = converter(item);\r\n                    if (listItem === undefined) return null;\r\n                }\r\n                else {\r\n                    listItem = {\r\n                        ...item\r\n                    }\r\n                }\r\n                if (listItem.key === undefined) listItem.key = listItem.main;\r\n                return <ListRow onClick={onClick} {...listItem} />;\r\n            });\r\n        }\r\n        if (header !== undefined) {\r\n            if (typeof header === 'string') {\r\n                elHeader = <div className='va-list-header'>{header}</div>;\r\n            }\r\n            else {\r\n                elHeader = header;\r\n            }\r\n        }\r\n\r\n        return (\r\n        <div className={cn}>\r\n            {elHeader}\r\n            <ul>\r\n                {content}\r\n            </ul>\r\n            {footer}\r\n        </div>\r\n        )\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { ItemEdit } from './itemEdit';\r\n\r\nexport class StringItemEdit extends ItemEdit {\r\n    protected uiItem: UiTextItem;\r\n    protected async internalStart():Promise<any> {\r\n        return new Promise<any>((resolve, reject) => {\r\n            let element = React.createElement(this.page, {resolve:resolve, reject:reject});\r\n            nav.push(element,reject);\r\n        });\r\n    }\r\n\r\n    private onChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.newValue = evt.target.value;\r\n        let preValue = this.value;\r\n        this.isChanged = (this.newValue != preValue);\r\n    }\r\n\r\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\r\n        let {resolve, reject} = props;\r\n        let right = <button\r\n            className=\"btn btn-sm btn-success\"\r\n            disabled={!this.isChanged}\r\n            onClick={()=>resolve(this.newValue)}>保存</button>;\r\n        return <Page header={'更改' + this.label} right={right}>\r\n            <div className=\"m-3\">\r\n                <input type=\"text\" \r\n                    onChange={this.onChange}\r\n                    className=\"form-control\" \r\n                    defaultValue={this.value} />\r\n                {\r\n                    this.uiItem && <div className=\"small muted m-2\">{this.uiItem.placeholder}</div>\r\n                }\r\n            </div>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\r\nimport { observer } from 'mobx-react';\r\nimport { ItemEdit } from './itemEdit';\r\nimport { StringItemEdit } from './stringItemEdit';\r\nimport { ImageItemEdit } from './imageItemEdit';\r\nimport { Image } from '../image';\r\n\r\nexport interface EditProps {\r\n    className?: string;\r\n    schema: Schema;\r\n    data: any;\r\n    onItemClick?: (itemSchema: ItemSchema, uiItem: UiItem, value: any) => Promise<void>;\r\n    onItemChanged?: (itemSchema: ItemSchema, newValue:any, preValue:any) => Promise<void>;\r\n    uiSchema?: UiSchema;\r\n    sepClassName?: string;\r\n    topBorderClassName?: string;\r\n    bottomBorderClassName?: string;\r\n    rowContainerClassName?: string;\r\n}\r\n\r\n@observer\r\nexport class Edit extends React.Component<EditProps> {\r\n    private defaultSepClassName = \"border-top edit-sep-light-gray\";\r\n    private defaultRowContainerClassName = \"d-flex px-3 py-2 cursor-pointer bg-white align-items-center\";\r\n    private topBorder:JSX.Element;\r\n    private bottomBorder:JSX.Element;\r\n    private rowContainerClassName?: string;\r\n    private sep:JSX.Element;\r\n    private uiSchema: {[name:string]: UiItem};\r\n\r\n    constructor(props: EditProps) {\r\n        super(props);\r\n        let {topBorderClassName, bottomBorderClassName, sepClassName, rowContainerClassName, uiSchema} = props;\r\n        this.topBorder = <div className={topBorderClassName || this.defaultSepClassName} />;\r\n        this.bottomBorder = <div className={bottomBorderClassName || this.defaultSepClassName} />;\r\n        this.rowContainerClassName = rowContainerClassName || this.defaultRowContainerClassName;\r\n        this.sep = <div className={sepClassName || this.defaultSepClassName} />;\r\n        this.uiSchema = (uiSchema && uiSchema.items) || {};\r\n    }\r\n\r\n    render() {\r\n        let elItems:JSX.Element[] = [];\r\n        let {schema} = this.props;\r\n        let len = schema.length;\r\n\r\n        elItems.push(this.topBorder);\r\n        for (let i=0; i<len; i++) {\r\n            if (i>0) elItems.push(this.sep);\r\n            elItems.push(this.renderRow(schema[i]));\r\n        }\r\n        elItems.push(this.bottomBorder);\r\n\r\n        return <div>\r\n            {elItems.map((v, index) => <React.Fragment key={index}>{v}</React.Fragment>)}\r\n        </div>;\r\n    }\r\n\r\n    private renderRow(itemSchema: ItemSchema):JSX.Element {\r\n        let {name, type} = itemSchema;\r\n        let divValue:any;\r\n        let uiItem = this.uiSchema[name];\r\n        let label:string = (uiItem && uiItem.label) || name;\r\n        let value:any = this.props.data[name];\r\n        switch (type) {\r\n            default:\r\n                divValue = value? <b>{value}</b> : <small className=\"text-muted\">(无)</small>;\r\n                break;\r\n            case 'image':\r\n                divValue = <Image className=\"w-4c h-4c\" src={value} />;\r\n                break;\r\n        }\r\n        return <div className={this.rowContainerClassName} onClick={async ()=>await this.rowClick(itemSchema, uiItem, label, value)}>\r\n            <div className=\"w-6c\">{label}</div>\r\n            <div className=\"flex-fill d-flex justify-content-end\">{divValue}</div>\r\n            <div className=\"w-2c text-right\"><i className=\"fa fa-chevron-right\" /></div>\r\n        </div>;\r\n    }\r\n\r\n    private rowClick = async (itemSchema: ItemSchema, uiItem: UiItem, label:string, value: any) => {\r\n        let {onItemChanged, onItemClick} = this.props;\r\n        let changeValue:any;\r\n        if (onItemClick !== undefined) {\r\n            await onItemClick(itemSchema, uiItem, value);\r\n            return;\r\n        }\r\n        let itemEdit:ItemEdit = createItemEdit(itemSchema, uiItem, label, value);\r\n        try {\r\n            changeValue = await itemEdit.start();\r\n            if (changeValue != value) {\r\n                if (onItemChanged === undefined) {\r\n                    alert(`${itemSchema.name} value changed, new: ${changeValue}, pre: ${value}`);\r\n                }\r\n                else {\r\n                    await onItemChanged(itemSchema, changeValue, value);\r\n                }\r\n            }\r\n            await itemEdit.end();\r\n        }\r\n        catch (err) {\r\n            console.log('no value changed');\r\n        }\r\n    }\r\n}\r\n\r\nfunction createItemEdit(itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any):ItemEdit {\r\n    let itemEdit: new (itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any) => ItemEdit;\r\n    if (uiItem !== undefined) {\r\n        switch (uiItem.widget) {\r\n            case 'text': itemEdit = StringItemEdit; break;\r\n            case 'image': itemEdit = ImageItemEdit; break;\r\n        }\r\n    }\r\n    else {\r\n        switch (itemSchema.type) {\r\n            case 'string': itemEdit = StringItemEdit; break;\r\n            case 'image': itemEdit = ImageItemEdit; break;\r\n        }\r\n    }\r\n    if (itemEdit === undefined) return;\r\n    return new itemEdit(itemSchema, uiItem, label, value);\r\n}\r\n","export * from './edit';\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { VPage, Page, Form, ItemSchema, UiSchema, StringSchema, UiTextItem, UiPasswordItem, ButtonSchema, Edit, ImageSchema, nav, UiImageItem } from '../ui';\r\nimport userApi from './userApi';\r\n\r\nexport class EditMeInfo extends React.Component {\r\n    private schema:ItemSchema[] = [\r\n        {name:'nick', type:'string'} as StringSchema,\r\n        {name:'icon', type:'image'} as ImageSchema\r\n    ];\r\n    private uiSchema:UiSchema = {\r\n        items: {\r\n            nick: {widget:'text', label:'别名', placeholder:'好的别名更方便记忆'} as UiTextItem,\r\n            icon: {widget:'image', label:'头像'} as UiImageItem,\r\n        }\r\n    }\r\n    @observable private data:any;\r\n\r\n    constructor(props:any) {\r\n        super(props);\r\n        let {nick, icon} = nav.user;\r\n        this.data = {\r\n            nick: nick,\r\n            icon: icon,\r\n        }\r\n    }\r\n\r\n    private onItemChanged = async (itemSchema:ItemSchema, newValue:any, preValue:any) => {\r\n        let {name} = itemSchema;\r\n        await userApi.userSetProp(name, newValue);\r\n        this.data[name] = newValue;\r\n        nav.user[name] = newValue;\r\n        nav.saveLocalUser();\r\n    }\r\n\r\n    render() {\r\n        return <Page header=\"个人信息\">\r\n            <Edit schema={this.schema} uiSchema={this.uiSchema}\r\n                data={this.data}\r\n                onItemChanged={this.onItemChanged} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport { IObservableValue } from 'mobx/lib/internal';\r\n\r\nexport type TabCaption = (selected:boolean) => JSX.Element;\r\n\r\nexport interface TabProp {\r\n    name: string;\r\n    caption: TabCaption;\r\n    content: () => JSX.Element;\r\n    notify?: IObservableValue<number>;\r\n}\r\n\r\nexport interface TabsProps {\r\n    tabs: TabProp[];\r\n    size?: 'sm' | 'lg' | 'md';\r\n    tabBack?: string;\r\n    contentBack?: string;\r\n    sep?: string;\r\n    selected?: string;\r\n}\r\n\r\nclass Tab {\r\n    name: string;\r\n    @observable selected: boolean;\r\n    caption: TabCaption;\r\n    contentBuilder: ()=>JSX.Element;\r\n    notify: IObservableValue<number>;\r\n\r\n    private _content: JSX.Element;\r\n    get content(): JSX.Element {\r\n        if (this.selected !== true) return this._content;\r\n        if (this._content !== undefined) return this._content;\r\n        return this._content = this.contentBuilder();\r\n    }\r\n}\r\n\r\nexport const TabCaptionComponent = (label:string, icon:string, color:string) => <div \r\n    className={'d-flex justify-content-center align-items-center flex-column cursor-pointer ' + color}>\r\n    <div><i className={'fa fa-lg fa-' + icon} /></div>\r\n    <small>{label}</small>\r\n</div>;\r\n\r\n@observer export class Tabs extends React.Component<TabsProps> {\r\n    private size: string;\r\n    private tabBack: string;\r\n    private contentBack: string;\r\n    private sep: string;\r\n    @observable private selectedTab: Tab;\r\n    @observable private tabs: Tab[] = [];\r\n\r\n    constructor(props: TabsProps) {\r\n        super(props);\r\n        let {size, tabs, tabBack, contentBack, sep, selected} = this.props;\r\n        switch (size) {\r\n            default:\r\n            case 'md': this.size = '3.2rem'; break;\r\n            case 'sm': this.size = '4rem'; break;\r\n            case 'lg': this.size = '2.5rem'; break;\r\n        }\r\n        this.tabs.push(...tabs.map(v => {\r\n                let tab = new Tab();\r\n                tab.name = v.name;\r\n                tab.selected = false;\r\n                tab.caption = v.caption;\r\n                tab.contentBuilder = v.content;\r\n                tab.notify = v.notify;\r\n                return tab;\r\n            }\r\n        ));\r\n        this.tabBack = tabBack || 'bg-light';\r\n        this.contentBack = contentBack;\r\n        this.sep = sep || 'border-top border-gray';\r\n        if (selected !== undefined) {\r\n            this.selectedTab = this.tabs.find(v => v.name === selected);\r\n        }\r\n        if (this.selectedTab === undefined) this.selectedTab = this.tabs[0];\r\n        this.selectedTab.selected = true;\r\n    }\r\n\r\n    private tabClick = (tab:Tab) => {\r\n        this.selectedTab.selected = false;\r\n        tab.selected = true;\r\n        this.selectedTab = tab;\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"tab\">\r\n            <div className={this.contentBack} style={{height: 'calc(100% - ' + this.size + ')'}}>\r\n                {this.tabs.map((v,index) => {\r\n                    let style:React.CSSProperties={\r\n                        display: v.selected===true? undefined : 'none'};\r\n                    return <div key={index} style={style}>{v.content}</div>;\r\n                })}\r\n            </div>\r\n            <div className={classNames(this.tabBack, this.sep)} style={{height: this.size}}>\r\n                {this.tabs.map((v,index) => {\r\n                    let {selected, caption, notify} = v;\r\n                    let notifyCircle:any;\r\n                    if (notify !== undefined) {\r\n                        let num = notify.get();\r\n                        if (num !== undefined) {\r\n                            if (num > 0) notifyCircle = <u>{num>99?'99+':num}</u>;\r\n                            else if (num < 0) notifyCircle = <u className=\"dot\" />;\r\n                        }\r\n                    }\r\n                    return <div key={index} className=\"\" onClick={()=>this.tabClick(v)}>\r\n                        <div className=\"align-self-center\">\r\n                            {notifyCircle}\r\n                            {caption(selected)}\r\n                        </div>\r\n                    </div>\r\n                })}\r\n            </div>\r\n        </div>\r\n    }\r\n};\r\n","import * as React from 'react';\r\nimport {FetchError} from '../fetchError';\r\nimport { refetchApi } from '../net';\r\n\r\nexport interface FetchErrorProps extends FetchError {\r\n    clearError: ()=>void\r\n}\r\n\r\nexport default class FetchErrorView extends React.Component<FetchErrorProps, null> {\r\n    private reApi = async () => {\r\n        this.props.clearError();\r\n        const {channel, url, options, resolve, reject} = this.props;\r\n        await refetchApi(channel, url, options, resolve, reject);\r\n    }\r\n    private close = async () => {\r\n        this.props.clearError();\r\n    }\r\n    render() {\r\n        let {error, url} = this.props;\r\n            //let errMsg = fetchError.errorMsg;\r\n        let errContent;\r\n        if (typeof error === 'object') {\r\n            let err = [];\r\n            for (let i in error) {\r\n                err.push(<li key={i}><label>{i}</label><div>{error[i]}</div></li>);\r\n            }\r\n            errContent = <ul>{err}</ul>;\r\n        }\r\n        else {\r\n            errContent = <div>{error}</div>;\r\n        }\r\n        return <li>\r\n            <article className=\"page-container\">\r\n                <section>\r\n                    <div  className=\"va-error\">\r\n                        <div>网络出现问题</div>\r\n                        <div>点击重新访问</div>\r\n                        <div>url: {url}</div>\r\n                        {errContent}\r\n                        <div className=\"p-3\">\r\n                            <button type='button' onClick={this.reApi}>重新API</button>\r\n                            <button type='button' onClick={this.close}>关闭</button>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </article>\r\n        </li>;\r\n    }\r\n}\r\n","import {User, Guest, Unit} from './user';\r\n\r\nexport interface ClearableData {\r\n    clear(): void;\r\n}\r\n\r\nexport class Data<T> implements ClearableData {\r\n    private name: string;\r\n    private value?: T;\r\n    constructor(name: string) {this.name = name; }\r\n    get(): T {\r\n        if (this.value !== undefined) return this.value;\r\n        let v = localStorage.getItem(this.name);\r\n        return this.value = v === null ? undefined : JSON.parse(v); \r\n    }\r\n    set(value: T) {\r\n        if (!value) { this.clear(); return; }\r\n        this.value = value;\r\n        localStorage.setItem(this.name, JSON.stringify(value));\r\n    }\r\n    clear() {\r\n        this.value = undefined;\r\n        localStorage.removeItem(this.name);\r\n    }\r\n}\r\n\r\nexport class LocalData {\r\n    user = new Data<User>('user');\r\n    guest = new Data<Guest>('guest');\r\n    unit = new Data<Unit>('unit');\r\n    homeTabCur = new Data<number>('homeTabCur');\r\n\r\n    logoutClear() {\r\n        [\r\n            this.user,\r\n            this.homeTabCur\r\n        ].map(d => d.clear());\r\n    }\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import {CenterApi, User, meInFrame} from 'tonva-tools';\r\nimport { string } from 'prop-types';\r\n\r\nclass MainApi extends CenterApi {\r\n    async stickies():Promise<any[]> {\r\n        return await this.get('sticky/list', {start:0, pageSize:30});\r\n    }\r\n\r\n    async ties():Promise<any[]> {\r\n        return await this.get('tie/list', {start:0, pageSize:30});\r\n    }\r\n\r\n    async apps(unit:number):Promise<any> {\r\n        return await this.get('tie/apps', {unit:unit});\r\n    }\r\n\r\n    async appApi(unit:number, app:number, apiName:string) {\r\n        return await this.get('tie/app-api', {unit:unit, app:app, apiName:apiName});\r\n    }\r\n\r\n    async userId(name:string):Promise<number> {\r\n        return await this.get('tie/user-id', {name:name});\r\n    }\r\n\r\n    async userAdminUnits():Promise<any[]> {\r\n        return await this.get('tie/user-admin-units', {});\r\n    }\r\n\r\n    async sendMessage(toUser:number, type:string, content:any) {\r\n        let {unit} = meInFrame;\r\n        let adminApp = 0;\r\n        return await this.post('tie/send-message', {\r\n            type: type, \r\n            fromUnit: unit, \r\n            fromApp: adminApp,\r\n            toUser: toUser, \r\n            content: content, \r\n        });\r\n    }\r\n\r\n    async unit(unit:number):Promise<any> {\r\n        return await this.get('unit/', {unit:unit});\r\n    }\r\n\r\n    async unitMemberCount(unit:number):Promise<number> {\r\n        return await this.get('unit/member-count', {unit:unit});\r\n    }\r\n\r\n    async unitAdmins(unit:number):Promise<any[]> {\r\n        return await this.get('unit/admins', {unit:unit});\r\n    }\r\n\r\n    async unitSetAdmin(fellow:number, unit:number, isOwner:number, isAdmin:number):Promise<any> {\r\n        return await this.post('unit/set-admin', {fellow:fellow, unit:unit, isOwner:isOwner, isAdmin:isAdmin});\r\n    }\r\n\r\n    async unitAddAdmin(user:string, unit:number, isOwner:number, isAdmin:number):Promise<any> {\r\n        return await this.post('unit/add-admin', {user:user, unit:unit, isOwner:isOwner, isAdmin:isAdmin});\r\n    }\r\n\r\n    async unitApps(unit:number):Promise<any[]> {\r\n        return await this.get('unit/apps', {unit:unit});\r\n    }\r\n\r\n    async unitAddApp(unit:number, app:number):Promise<number> {\r\n        let ret = await this.post('unit/add-app', {unit:unit, app:app});\r\n        return ret;\r\n    }\r\n\r\n    async unitDeleteApp(unit:number, app:number, deleted:number):Promise<void> {\r\n        await this.post('unit/delete-app', {unit:unit, app:app, deleted:deleted});\r\n    }\r\n\r\n    async unitChangeProp(unit:number, prop:string, value:any):Promise<void> {\r\n        await this.post('unit/change-prop', {unit:unit, prop:prop, value:value});\r\n    }\r\n\r\n    async searchApp(unit:number, key:string, pageStart:any, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/search-app', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n\r\n    async unitRoles(unit:number):Promise<any[]> {\r\n        return await this.get('unit/roles', {unit:unit});\r\n    }\r\n\r\n    async unitAddRole(unit:number, name:string, discription:string):Promise<number> {\r\n        return await this.post('unit/add-role', {unit:unit, name:name, discription:discription});\r\n    }\r\n\r\n    async unitRoleChangeProp(unit:number, role:number, prop:string, value:any):Promise<void> {\r\n        await this.post('unit/change-role-prop', {unit:unit, role:role, prop:prop, value:value});\r\n    }\r\n\r\n    async unitRoleApps(unit:number, role:number):Promise<any[]> {\r\n        return await this.get('unit/role-apps', {unit:unit, role:role});\r\n    }\r\n\r\n    async unitRoleSetApps(unit:number, role:number, apps:number[]):Promise<void> {\r\n        await this.post('unit/role-set-apps', {unit:unit, role:role, apps:apps});\r\n    }\r\n\r\n    async unitMembers(unit:number, role:number, key:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/members', {unit:unit, role:role, key, pageStart, pageSize});\r\n    }\r\n\r\n    async unitAssignMember(unit:number, member:number, assigned:string):Promise<void> {\r\n        await this.post('unit/assign-member', {unit:unit, member:member, assigned:assigned});\r\n    }\r\n\r\n    async unitMemberRoles(unit:number, member:number):Promise<any[]> {\r\n        return await this.get('unit/member-roles', {unit:unit, member:member});\r\n    }\r\n\r\n    async unitSetMemberRoles(unit:number, member:number, roles:number[]):Promise<void> {\r\n        await this.post('unit/member-set-roles', {unit:unit, member:member, roles:roles});\r\n    }\r\n\r\n    async unitUsers(unit:number, key:string, pageStart:number, pageSize:number):Promise<any> {\r\n        return await this.get('unit/users', {unit: unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitAppUsers(unit:number, key:string, pageStart:number, pageSize:number):Promise<any> {\r\n        return await this.get('unit/app-users', {unit: unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitOneAppUsers(unit:number, app:number, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/one-app-users', {unit: unit, app:app, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitOneUserApps(unit:number, user:number, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/one-user-apps', {unit: unit, user:user, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitAppEditUsers(unit:number, app:number, key:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/app-edit-users', {unit: unit, app:app, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitUserEditApps(unit:number, user:number, key:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/user-edit-apps', {unit: unit, user:user, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async bindAppUser(unit:number, app:number, user:number, bind:number):Promise<void> {\r\n        await this.post('unit/bind-app-user', {unit: unit, app:app, user:user, bind:bind});\r\n    }\r\n\r\n    async userFromKey(key:string):Promise<any> {\r\n        return await this.get('tie/user-from-key', {key:key});\r\n    }\r\n    async unitAddUser(unit:number, user:number) {\r\n        await this.post('unit/add-user', {unit:unit, user:user});\r\n    }\r\n}\r\n\r\nexport const mainApi = new MainApi('tv/', undefined);\r\n","import {CenterApi} from 'tonva-tools';\r\n\r\nclass DevApi extends CenterApi {\r\n    async uqBuilderUrl():Promise<any> {\r\n        let ret = await this.get('uq-builder-url', undefined);\r\n        return ret;\r\n    }    \r\n    async counts(unit:number):Promise<any> {\r\n        return await this.get('counts', {unit:unit});\r\n    }\r\n    async app(id:number):Promise<any> {\r\n        return await this.get('app', {id:id});\r\n    }\r\n    async uq(id:number):Promise<any> {\r\n        return await this.get('uq', {id:id});\r\n    }\r\n    async server(id:number):Promise<any> {\r\n        return await this.get('server', {id:id});\r\n    }\r\n    async uqdb(id:number):Promise<any> {\r\n        return await this.get('uqdb', {id:id});\r\n    }\r\n    async apps(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('apps', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async uqs(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('uqs', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async buses(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('buses', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async servers(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('servers', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async uqdbs(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('uqdbs', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async services(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('services', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async saveApp(values:any):Promise<number> {\r\n        return await this.post('app-save', values);\r\n    }\r\n    async saveUq(values:any):Promise<number> {\r\n        return await this.post('uq-save', values);\r\n    }\r\n    async saveBus(values:any):Promise<number> {\r\n        return await this.post('bus-save', values);\r\n    }\r\n    async saveServer(values:any):Promise<number> {\r\n        return await this.post('server-save', values);\r\n    }\r\n    async saveUqdb(values:any):Promise<number> {\r\n        return await this.post('uqdb-save', values);\r\n    }\r\n    async saveService(values:any):Promise<number> {\r\n        return await this.post('service-save', values);\r\n    }\r\n    async delApp(unit:number,id:number):Promise<void> {\r\n        return await this.post('app-del', {unit:unit, id:id});\r\n    }\r\n    async delUq(unit:number,id:number):Promise<void> {\r\n        return await this.post('uq-del', {unit:unit, id:id});\r\n    }\r\n    async delBus(unit:number,id:number):Promise<void> {\r\n        return await this.post('bus-del', {unit:unit, id:id});\r\n    }\r\n    async delServer(unit:number,id:number):Promise<void> {\r\n        return await this.post('server-del', {unit:unit, id:id});\r\n    }\r\n    async delUqdb(unit:number,id:number):Promise<void> {\r\n        return await this.post('uqdb-del', {unit:unit, id:id});\r\n    }\r\n    async delService(unit:number,id:number):Promise<void> {\r\n        return await this.post('service-del', {unit:unit, id:id});\r\n    }\r\n    async loadAppUqs(app:number):Promise<any[]> {\r\n        return await this.get('app-uqs', {app: app});\r\n    }\r\n    async appBindUq(unit:number,app:number,uqs:{id:number, access:string[]}[]):Promise<void> {\r\n        let uqsText:string;\r\n        if (uqs !== undefined) {\r\n            uqsText = uqs.map(v => String(v.id)+'|'+v.access.join(',')).join(';');\r\n        }\r\n        await this.post('app-bind-uq', {unit:unit, app:app, uqs:uqsText});\r\n    }\r\n    async searchUq(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('uq-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async getMyUqs(unit:number):Promise<any[]> {\r\n        return await this.get('my-uqs', {unit:unit});\r\n    }\r\n    async searchApp(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('app-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async searchServer(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('server-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async searchUqdb(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('uqdb-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    //async loadAppServices(unit:number, app:number):Promise<any[]> {\r\n    //    return await this.get('app-services', {unit:unit, app:app});\r\n    //}\r\n    async loadUqServices(unit:number, uq:number):Promise<any[]> {\r\n        return await this.get('uq-services', {unit:unit, uq:uq});\r\n    }\r\n    async changeServiceProp(unit:number, service:number, prop:string, value:any):Promise<number> {\r\n        return await this.post('service-change-prop', {unit:unit, service:service, prop:prop, value:value});\r\n    }\r\n    async uqGetEntities(unit:number, uq:number):Promise<any[][]> {\r\n        return await this.get('uq-get-entities', {unit:unit, uq:uq});\r\n    }\r\n}\r\n\r\nexport const devApi = new DevApi('tv/dev/', undefined);\r\n","import {observable} from 'mobx';\r\nimport {UnitAdmin} from '../model';\r\nimport {mainApi} from '../api';\r\nimport {Store} from './index';\r\n\r\nexport class Admins {\r\n    private store:Store;\r\n    constructor(store:Store) {\r\n        this.store = store;\r\n    }\r\n\r\n    @observable cur: UnitAdmin = undefined;\r\n    @observable owners: UnitAdmin[] = undefined;\r\n    @observable admins: UnitAdmin[] = undefined;\r\n    @observable fellows: UnitAdmin[] = undefined;\r\n    \r\n    async load(): Promise<void> {\r\n        let unit = this.store.unit;\r\n        if (unit === undefined) return;\r\n        if (unit.id === undefined) return;\r\n        if (this.admins !== undefined) return;\r\n        let all = await mainApi.unitAdmins(unit.id);\r\n        let owners:UnitAdmin[] = [];\r\n        let admins:UnitAdmin[] = [];\r\n        let fellows:UnitAdmin[] = [];\r\n        all.forEach(ua => {\r\n            let {isOwner, isAdmin} = ua;\r\n            if (isOwner === 0 && isAdmin === 0)\r\n                fellows.push(ua);\r\n            else {\r\n                if (isOwner === 1) owners.push(ua);\r\n                if (isAdmin === 1) admins.push(ua);\r\n            }\r\n        });\r\n        this.owners = owners;\r\n        this.admins = admins;\r\n        this.fellows = fellows;\r\n    }\r\n\r\n    private removeCur(arr: UnitAdmin[]) {\r\n        let index = arr.findIndex(v => v.id===this.cur.id);\r\n        if (index >=0) arr.splice(index, 1);\r\n    }\r\n\r\n    async unitSetAdmin(isOwner:number, isAdmin:number) {\r\n        let cur = this.cur;\r\n        cur.isOwner = isOwner;\r\n        cur.isAdmin = isAdmin;\r\n        let fellowId = cur.id, unitId = this.store.unit.id;\r\n        await mainApi.unitSetAdmin(fellowId, unitId, isOwner, isAdmin);\r\n        this.removeCur(this.owners);\r\n        this.removeCur(this.admins);\r\n        this.removeCur(this.fellows);\r\n        if (isOwner === 0 && isAdmin === 0)\r\n            this.fellows.unshift(cur);\r\n        else {\r\n            if (isOwner === 1) this.owners.unshift(cur);\r\n            if (isAdmin === 1) this.admins.unshift(cur);\r\n        }\r\n    }\r\n\r\n    async addNew(user:string, isOwner:number, isAdmin:number):Promise<UnitAdmin> {\r\n        let admin = await mainApi.unitAddAdmin(user, this.store.unit.id, isOwner, isAdmin);\r\n        if (admin !== undefined) {\r\n            let cur = this.cur = admin;\r\n            this.removeCur(this.owners);\r\n            this.removeCur(this.admins);\r\n            this.removeCur(this.fellows);\r\n            if (isOwner === 0 && isAdmin === 0)\r\n                this.fellows.unshift(cur);\r\n            else {\r\n                if (isOwner === 1) this.owners.unshift(cur);\r\n                if (isAdmin === 1) this.admins.unshift(cur);\r\n            }\r\n        }\r\n        return admin;\r\n    }\r\n}\r\n","import {observable, autorun} from 'mobx';\r\nimport _ from 'lodash';\r\nimport {devApi} from '../api';\r\nimport {DevModel, Unit} from '../model';\r\nimport {Store} from './index';\r\n\r\ninterface Counts {\r\n    uq: number;\r\n    app: number;\r\n    bus: number;\r\n    server: number;\r\n    service: number;\r\n    //uqdb: number;\r\n}\r\n\r\nexport abstract class ObjItems<T extends DevModel.ObjBase> {\r\n    protected store:Store;\r\n    protected dev:Dev;\r\n    constructor(store:Store, dev:Dev) {\r\n        this.store = store;\r\n        this.dev = dev;\r\n    }\r\n\r\n    @observable items: T[] = undefined;\r\n    @observable cur: T = undefined;\r\n\r\n    async load():Promise<void> {\r\n         let ret = await this._load();\r\n         this.items = ret;\r\n    }\r\n    protected abstract _load():Promise<T[]>;\r\n    async saveCur(item:T):Promise<boolean> {\r\n        let values:any = {};\r\n        if (this.cur !== undefined) {\r\n            _.assign(values, this.cur, item);\r\n        }\r\n        else {\r\n            _.assign(values, item);\r\n        }\r\n\r\n        values.unit = item.unit = this.store.unit.id;\r\n        let id = await this._save(values);\r\n        if (this.cur === undefined) {\r\n            if (id === 0) return false;\r\n            values.id = id;\r\n            if (this.items !== undefined) this.items.unshift(values);\r\n            this._inc();\r\n            this.cur = observable(values);\r\n        }\r\n        else {\r\n            _.assign(this.cur, values);\r\n        }\r\n        return true;\r\n    }\r\n    async save(item:T):Promise<T> {\r\n        let values:any = {};\r\n        _.assign(values, item);\r\n\r\n        values.unit = item.unit = this.store.unit.id;\r\n        let id = await this._save(values);\r\n        if (id === 0) return;\r\n        values.id = id;\r\n        return values;\r\n    }\r\n    protected abstract _save(item:T):Promise<number>;\r\n    async del():Promise<void> {\r\n        let c = this.cur;\r\n        if (c === undefined) return;\r\n        let id = c.id;\r\n        await this._del(c);\r\n        if (this.items === undefined) return;\r\n        let index = this.items.findIndex(v => v.id === id);\r\n        if (index>=0) {\r\n            this.items.splice(index, 1);\r\n            this._dec();\r\n        }\r\n    }\r\n    protected abstract _del(item:T):Promise<void>;\r\n    protected abstract _inc();\r\n    protected abstract _dec();\r\n}\r\n\r\nclass Apps extends ObjItems<DevModel.App> {\r\n    @observable uqs: DevModel.UQ[] = undefined;\r\n    @observable searchedUqs: DevModel.UQ[] = undefined;\r\n    //@observable service: DevModel.Service = null;\r\n    protected async _load() {\r\n        return await devApi.apps(this.store.unit.id);\r\n    }\r\n    protected async _save(item:DevModel.App):Promise<number> {\r\n        return await devApi.saveApp(item);\r\n    }\r\n    protected async _del(item:DevModel.App):Promise<void> {\r\n        await devApi.delApp(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.app++; }\r\n    protected _dec() { this.dev.counts.app--; }\r\n\r\n    public async loadCurUqs() {\r\n        let ret = await devApi.loadAppUqs(this.cur.id);\r\n        this.uqs = ret;\r\n    }\r\n    public async searchUq(key:string) {\r\n        this.searchedUqs = await devApi.searchUq(this.store.unit.id, key, 0, searchPageSize);\r\n    }\r\n    public async appBindUq(uqs:{id:number, access:string[]}[], bind:boolean) {\r\n        let allUqs:{id:number, access:string[]}[] = this.uqs.map(v => {\r\n            let {id, access} = v;\r\n            return {id: id, access: [access]};\r\n        });\r\n        for (let uq of uqs) {\r\n            let index = allUqs.findIndex(v => v.id === uq.id);\r\n            if (bind === true) {\r\n                if (index < 0) allUqs.unshift(uq);\r\n            }\r\n            else {\r\n                allUqs.splice(index, 1);\r\n            }\r\n        }\r\n        await devApi.appBindUq(this.store.unit.id, this.cur.id, allUqs);\r\n        for (let uq of uqs) {\r\n            let index = this.uqs.findIndex(a => a.id === uq.id);\r\n            if (index>=0) this.uqs.splice(index, 1);\r\n            if (bind === true) {\r\n                if (this.searchedUqs !== undefined) {\r\n                    let find = this.searchedUqs.find(a => a.id === uq.id);\r\n                    if (find !== undefined) this.uqs.unshift(find);\r\n                }\r\n            }\r\n            else {\r\n                // 已经删除，不需要处理\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass Uqs extends ObjItems<DevModel.UQ> {\r\n    protected async _load() {\r\n        let ret = await devApi.uqs(this.store.unit.id);\r\n        return ret;\r\n    }\r\n    protected async _save(item:DevModel.UQ):Promise<number> {\r\n        //let {access} = item;\r\n        //if (!access) access = \"*\";\r\n        //let parts = access.split(',').map(v => v.trim()).filter(v => v!=='');\r\n        //item.access = parts.join(',');\r\n        return await devApi.saveUq(item);\r\n    }\r\n    protected async _del(item:DevModel.UQ):Promise<void> {\r\n        await devApi.delUq(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.uq++; }\r\n    protected _dec() { this.dev.counts.uq--; }\r\n}\r\n\r\nclass Buses extends ObjItems<DevModel.Bus> {\r\n    protected async _load() {\r\n        let ret = await devApi.buses(this.store.unit.id);\r\n        return ret;\r\n    }\r\n    protected async _save(item:DevModel.Bus):Promise<number> {\r\n        return await devApi.saveBus(item);\r\n    }\r\n    protected async _del(item:DevModel.Bus):Promise<void> {\r\n        await devApi.delBus(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.bus++; }\r\n    protected _dec() { this.dev.counts.bus--; }\r\n}\r\n\r\nclass Servers extends ObjItems<DevModel.Server> {\r\n    protected async _load() {\r\n        return await devApi.servers(this.store.unit.id);\r\n    }\r\n    protected async _save(item:DevModel.Server):Promise<number> {\r\n        return await devApi.saveServer(item);\r\n    }\r\n    protected async _del(item:DevModel.Server):Promise<void> {\r\n        await devApi.delServer(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.server++; }\r\n    protected _dec() { this.dev.counts.server--; }\r\n}\r\n/*\r\nclass Uqdbs extends ObjItems<DevModel.Uqdb> {\r\n    protected async _load() {\r\n        return await devApi.uqdbs(this.store.unit.id);\r\n    }\r\n    protected async _save(item:DevModel.Uqdb):Promise<number> {\r\n        return await devApi.saveUqdb(item);\r\n    }\r\n    protected async _del(item:DevModel.Uqdb):Promise<void> {\r\n        await devApi.delUqdb(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.uqdb++; }\r\n    protected _dec() { this.dev.counts.uqdb--; }\r\n}\r\n*/\r\nclass Services extends ObjItems<DevModel.Service> {\r\n    protected async _load() {\r\n        return await devApi.services(this.store.unit.id);\r\n    }\r\n    protected async _save(item:DevModel.Service):Promise<number> {\r\n        return await devApi.saveService(item);\r\n    }\r\n    protected async _del(item:DevModel.Service):Promise<void> {\r\n        await devApi.delService(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.service++; }\r\n    protected _dec() { this.dev.counts.service--; }\r\n    async changeProp(prop:string, value:any):Promise<number> {\r\n        let ret = await devApi.changeServiceProp(this.store.unit.id, this.cur.id, prop, value);\r\n        switch (prop) {\r\n            case 'url': this.cur.url = value; break;\r\n            case 'server': this.cur.server = value; break;\r\n            case 'db': this.cur.db = value; break;\r\n            case 'db_type': this.cur.db_type = value; break;\r\n            case 'connection': this.cur.connection = value; break;\r\n        }\r\n        return ret;\r\n    }\r\n    async loadUqServices(uq:number):Promise<void> {\r\n        let ret = await devApi.loadUqServices(this.store.unit.id, uq);\r\n        this.items = ret[0];\r\n    }\r\n}\r\n\r\nconst searchPageSize = 50;\r\ntype Search = (unit:number,key:string,pageStart:number,pageSize:number)=>Promise<any[]>;\r\nclass SearchItems<T extends DevModel.ObjBase> {\r\n    private store:Store;\r\n    private dev:Dev;\r\n    private search:(unit:number,key:string,pageStart:number,pageSize:number)=>Promise<any[]>;\r\n\r\n    constructor(store:Store, dev:Dev, search:Search) {\r\n        this.store = store;\r\n        this.dev = dev;\r\n        this.search = search;\r\n    }\r\n\r\n    @observable items: T[] = undefined;\r\n    allLoaded: boolean = false;\r\n    private key: string;\r\n    private pageStart = 0;\r\n\r\n    async first(key:string) {\r\n        this.key = key;\r\n        this.items = undefined;\r\n        this.allLoaded = false;\r\n        this.pageStart = 0;\r\n        await this.more();\r\n    }\r\n\r\n    async more():Promise<void> {\r\n        if (this.allLoaded === true) return;\r\n        let ret = await this.search(this.store.unit.id, this.key, this.pageStart, searchPageSize);\r\n        let len = ret.length;\r\n        if (len > searchPageSize) {\r\n            this.allLoaded = false;\r\n            --len;\r\n            ret.splice(len, 1);\r\n        }\r\n        else {\r\n            this.allLoaded = true;\r\n        }\r\n        if (len > 0) {\r\n            this.pageStart = ret[len-1].id;\r\n            if (this.items === undefined)\r\n                this.items = ret;\r\n            else\r\n                this.items.push(...ret);\r\n        }\r\n        else {\r\n            this.items = [];\r\n        }\r\n    }\r\n}\r\n\r\nexport class Dev {\r\n    private store:Store;\r\n    constructor(store:Store) {\r\n        this.store = store;\r\n        this.apps = new Apps(store, this);\r\n        this.uqs = new Uqs(store, this);\r\n        this.buses = new Buses(store, this);\r\n        this.servers = new Servers(store, this);\r\n        //this.uqdbs = new Uqdbs(store, this);\r\n        this.services = new Services(store, this);\r\n        this.searchApp = new SearchItems<DevModel.App>(store, this, devApi.searchApp.bind(devApi));\r\n        this.searchUq = new SearchItems<DevModel.UQ>(store, this, devApi.searchUq.bind(devApi));\r\n        this.searchServer = new SearchItems<DevModel.Server>(store, this, devApi.searchServer.bind(devApi));\r\n    }\r\n\r\n    @observable counts:Counts = undefined;\r\n    apps:Apps = undefined;\r\n    uqs:Uqs = undefined;\r\n    buses:Buses = undefined;\r\n    servers:Servers = undefined;\r\n    //uqdbs:Uqdbs = undefined;\r\n    services:Services = undefined;\r\n\r\n    searchApp:SearchItems<DevModel.App> = undefined;\r\n    searchUq:SearchItems<DevModel.UQ> = undefined;\r\n    searchServer:SearchItems<DevModel.Server> = undefined;\r\n    searchUqdb:SearchItems<DevModel.Uqdb> = undefined;\r\n    \r\n    async loadCounts(): Promise<void> {\r\n        let {unit} = this.store;\r\n        this.counts = await devApi.counts(unit.id);\r\n    }\r\n}\r\n","import {CacheIds} from 'tonva-tools';\r\nimport {Id, Unit, DevModel} from '../model';\r\nimport {mainApi, devApi} from '../api';\r\n\r\nexport class CacheUnits extends CacheIds<Unit> {\r\n    protected async _loadIds(ids:number[]):Promise<Unit[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<Unit> {\r\n        return await mainApi.unit(id);\r\n    }\r\n}\r\n\r\nexport class CacheUqs extends CacheIds<DevModel.UQ> {\r\n    protected async _loadIds(ids:number[]):Promise<DevModel.UQ[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<DevModel.UQ> {\r\n        return await devApi.uq(id);\r\n    }\r\n}\r\n\r\nexport class CacheApps extends CacheIds<DevModel.App> {\r\n    protected async _loadIds(ids:number[]):Promise<DevModel.App[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<DevModel.App> {\r\n        return await devApi.app(id);\r\n    }\r\n}\r\n\r\nexport class CacheServers extends CacheIds<DevModel.Server> {\r\n    protected async _loadIds(ids:number[]):Promise<DevModel.Server[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<DevModel.Server> {\r\n        return await devApi.server(id);\r\n    }\r\n}\r\n","import {observable, autorun} from 'mobx';\r\nimport _ from 'lodash';\r\nimport {meInFrame, host} from 'tonva-tools';\r\nimport {mainApi, devApi} from '../api';\r\nimport {Unit, UnitApps, App, Api, UnitAdmin, UnitApp, Role, RoleMember} from '../model';\r\nimport {Admins} from './admins';\r\nimport {Dev} from './dev';\r\nimport {CacheUnits, CacheUqs, CacheApps, CacheServers} from './cacheIds';\r\n\r\nexport class Store {\r\n    private get unitId():number {return meInFrame.unit;};\r\n    admins:Admins;\r\n    dev:Dev;\r\n    cacheUnits: CacheUnits;\r\n    cacheUqs: CacheUqs;\r\n    cacheApps: CacheApps;\r\n    cacheServers: CacheServers;\r\n    uqServer: string;\r\n\r\n    @observable unit: Unit;\r\n    @observable memberCount: number;\r\n    @observable apps: UnitApp[];\r\n    @observable role:Role;\r\n    @observable roles: Role[];\r\n    @observable roleApps: UnitApp[];\r\n    @observable roleMember: RoleMember;\r\n    @observable roleMembers: RoleMember[];\r\n    @observable memberRoles: Role[];\r\n\r\n    init() {\r\n        this.unit = undefined;\r\n        this.admins = new Admins(this);\r\n        this.dev = new Dev(this);\r\n        this.cacheUnits = new CacheUnits();\r\n        this.cacheUqs = new CacheUqs();\r\n        this.cacheApps = new CacheApps();\r\n        this.cacheServers = new CacheServers();\r\n    }\r\n\r\n    logout() {\r\n        //meInFrame.app = undefined;\r\n        meInFrame.hash = undefined;\r\n        //let unitId = process.env.REACT_APP_DEBUG_UNITID;\r\n        //if (unitId !== undefined)\r\n        //    meInFrame.unit = Number(unitId);\r\n        meInFrame.unit = undefined;\r\n        this.init();\r\n        this.memberCount = undefined;\r\n        this.apps = undefined;\r\n        this.role = undefined;\r\n        this.roles = undefined;\r\n        this.roleApps = undefined;\r\n        this.roleMember = undefined;\r\n        this.roleMembers = undefined;\r\n        this.memberRoles = undefined;\r\n    }\r\n\r\n    setRole(role:Role) {\r\n        if (this.role === role) return;\r\n        this.role = role;\r\n        this.roleApps = undefined;\r\n        this.roleMember = undefined;\r\n        this.roleMembers = undefined;\r\n        this.memberRoles = undefined;\r\n    }\r\n\r\n    setRoleUser(user:RoleMember) {\r\n        if (this.roleMember === user) return;\r\n        this.roleMember = user;\r\n        this.memberRoles = undefined;\r\n    }\r\n\r\n    async unitChangeProp(prop:string, value:any):Promise<void> {\r\n        await mainApi.unitChangeProp(this.unit.id, prop, value);\r\n        this.unit[prop] = value;\r\n    }\r\n\r\n    async loadApps(): Promise<void> {\r\n        if (this.apps !== undefined) return;\r\n        this.apps = await mainApi.unitApps(this.unitId);\r\n    }\r\n\r\n    async loadUnit(): Promise<void> {\r\n        if (this.unitId === undefined) return;\r\n        let ret = await mainApi.unit(this.unitId);\r\n        this.unit = ret;\r\n        console.log(\"loadUnit unit=%s\", ret);\r\n        this.memberCount = await mainApi.unitMemberCount(this.unitId);\r\n        let uqServer = await devApi.uqBuilderUrl();\r\n        let {url, urlDebug} = uqServer;\r\n        this.uqServer = host.getUrlOrDebug(url, urlDebug);\r\n        console.log(\"uq-build: %s\", JSON.stringify(this.uqServer));\r\n    }\r\n\r\n    async stopUnitApp(appId:number): Promise<void> {\r\n        await mainApi.unitDeleteApp(this.unit.id, appId, 1);\r\n        let app = this.apps.find(v => v.id === appId);\r\n        app.inUnit = 0;\r\n    }\r\n\r\n    async restoreUnitApp(appId:number): Promise<number> {\r\n        let ret = await mainApi.unitAddApp(this.unit.id, appId);\r\n        if (ret <= 0) return ret;\r\n        let app = this.apps.find(v => v.id === appId);\r\n        app.inUnit = 1;\r\n        return 1;\r\n    }\r\n\r\n    async addUnitApp(app:UnitApp): Promise<number> {\r\n        let ret = await mainApi.unitAddApp(this.unit.id, app.id);\r\n        if (ret <= 0) return ret;\r\n        this.apps.push(app);\r\n        return 1;\r\n    }\r\n\r\n    async loadRoles(): Promise<void> {\r\n        if (this.roles !== undefined) return;\r\n        let ret = await mainApi.unitRoles(this.unit.id);\r\n        ret.forEach(v => {\r\n            switch (v.id) {\r\n                case 1: \r\n                    v.name= '访客';\r\n                    v.discription = '可以获取开放信息';\r\n                    break;\r\n                case 2: \r\n                    v.name= '普通';\r\n                    v.discription = '能访问最基本的功能';\r\n                    break;\r\n            }\r\n        });\r\n        this.roles = ret;\r\n    }\r\n\r\n    async unitAddRole(name:string, discription:string): Promise<number> {\r\n        let id = await mainApi.unitAddRole(this.unit.id, name, discription);\r\n        if (id > 0) {\r\n            this.roles.push({\r\n                id: id,\r\n                name: name,\r\n                discription: discription,\r\n                count: undefined,\r\n            });\r\n        }\r\n        return id;\r\n    }\r\n\r\n    async roleChangeProp(prop:string, value:any):Promise<void> {\r\n        await mainApi.unitRoleChangeProp(this.unit.id, this.role.id, prop, value);\r\n        this.role[prop] = value;\r\n    }\r\n\r\n    async loadRoleApps():Promise<void> {\r\n        let ret = await mainApi.unitRoleApps(this.unit.id, this.role.id);\r\n        this.roleApps = ret.map(v => {\r\n            return this.apps.find(app=>app.id === v.id);\r\n        });\r\n    }\r\n\r\n    async setRoleApps(apps:UnitApp[]) {\r\n        await mainApi.unitRoleSetApps(this.unit.id, this.role.id, apps.map(v=>v.id));\r\n        this.roleApps = apps;\r\n    }\r\n\r\n    async loadMembers():Promise<void> {\r\n        let ret = await mainApi.unitMembers(this.unit.id, this.role === undefined? 0:this.role.id, undefined, 0, 100);\r\n        this.roleMembers = ret;\r\n    }\r\n\r\n    async unitAssignMember(assigned:string):Promise<void> {\r\n        await mainApi.unitAssignMember(this.unit.id, this.roleMember.id, assigned);\r\n        this.roleMember.assigned = assigned;\r\n    }\r\n\r\n    async loadMemberRoles():Promise<void> {\r\n        let ret = await mainApi.unitMemberRoles(this.unit.id, this.roleMember.id);\r\n        let roles:Role[] = ret.map(v => {\r\n            let rId = v.id;\r\n            let role = this.roles.find(r => r.id === rId);\r\n            return _.clone(role);\r\n        });\r\n        this.memberRoles = roles;\r\n    }\r\n\r\n    async setMemberRoles(memberRoles:Role[]) {\r\n        await mainApi.unitSetMemberRoles(this.unit.id, this.roleMember.id, memberRoles.map(v=>v.id));\r\n        this.roles.forEach(role => {\r\n            let rId = role.id;\r\n            let org = this.memberRoles.find(v => v.id === rId);\r\n            let cur = memberRoles.find(v => v.id === rId);\r\n            if (org !== undefined) {\r\n                if (cur !== undefined) return;\r\n                role.count--;\r\n                return;\r\n            }\r\n            if (cur === undefined) return;\r\n            role.count++;\r\n        });\r\n        this.memberRoles = memberRoles;\r\n    }\r\n};\r\n\r\nexport const store = new Store();\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page, Context, Form, Schema, UiSchema, UiTextItem} from 'tonva-tools';\r\nimport {store} from '../store';\r\n\r\n@observer\r\nexport default class NewFellowPage extends React.Component<{isOwner:boolean, isAdmin:boolean}> {\r\n    //private form: TonvaForm;\r\n    private schema: Schema = [\r\n        {name:'user', type:'string', required:true},\r\n        {name:'submit', type:'submit'}\r\n    ]\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            user: {widget:'text', maxLength: 100, placeholder: '用户名', label: '邀请成员'} as UiTextItem,\r\n            submit: {widget:'button', label: '邀请'}\r\n        }\r\n    }\r\n    /*\r\n    private formRows:FormRow[] = [\r\n        {\r\n            label: '用户名',\r\n            field: {\r\n                type: 'string',\r\n                name: 'user',\r\n                required: true,\r\n                maxLength: 100,\r\n            },\r\n            face: {\r\n                type: 'string',\r\n                placeholder: '用户名',\r\n            }\r\n        },\r\n    ];\r\n    private schema:FormSchema = new FormSchema({\r\n        fields: [\r\n            {\r\n                type: 'string',\r\n                name: 'user',\r\n                placeholder: '用户名',\r\n                label: '邀请成员',\r\n                rules: ['required', 'maxlength:100']\r\n            },\r\n        ],\r\n        onSumit: this.onSendInvitation,\r\n        submitText: '邀请'\r\n    });\r\n    */\r\n    private onSendInvitation = async (name:string, context:Context): Promise<string> => {\r\n        let {isOwner, isAdmin} = this.props;\r\n        let user = context.form.data['user'];\r\n        let ret = await store.admins.addNew(user, isOwner?1:0, isAdmin?1:0);\r\n        if (ret !== undefined) {\r\n            nav.pop();\r\n            return;\r\n        }\r\n        return user + '没有关注小号';\r\n        /*\r\n        let msg = {a: 1, b: 'ddd'};\r\n        let toName = values['user'];\r\n        let userId = await mainApi.userId(toName);\r\n        if (userId === 0) {\r\n            this.form.formView.setError('user', '\\'' + toName +  '\\' 不存在');\r\n            return;\r\n        }\r\n        await mainApi.sendMessage(userId, 'unit-follow-invite', msg);\r\n        nav.replace(<Page header='完成' back=\"close\">\r\n            <Card>\r\n                <CardBody>\r\n                    <CardTitle>邀请成员</CardTitle>\r\n                    <CardText>已发送给{toName}，请等待确认。</CardText>\r\n                    <Button color='primary' onClick={()=>nav.back()}>完成</Button>\r\n                </CardBody>\r\n            </Card>\r\n        </Page>);\r\n        */\r\n    }\r\n    render() {\r\n        let {isOwner, isAdmin} = this.props;\r\n        let caption = isOwner? \"高管\" : \"管理员\";\r\n        return <Page header={'新增' + caption}>\r\n            <div className=\"container\">\r\n                <div className='my-4 text-info'>\r\n                    只有关注本小号的用户，才能成为{caption}\r\n                </div>\r\n                <Form schema={this.schema} uiSchema={this.uiSchema} onButtonClick={this.onSendInvitation}/>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n// <ValidForm formSchema={this.schema} />\r\n//<TonvaForm ref={f=>this.form=f} formRows={this.formRows} onSubmit={this.onSendInvitation} />\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page, Schema, UiSchema, ItemSchema, UiCheckItem, UiButton, ButtonSchema, Form, Context, Image} from 'tonva-tools';\r\nimport {store} from '../store';\r\nimport { UnitAdmin } from '../model/index';\r\n//import {mainApi} from '../api';\r\n//, ValidForm, FormSchema, FormFields, Field\r\n\r\n@observer\r\nexport default class EditAdmin extends React.Component {\r\n    private schema:Schema;\r\n    private uiSchema: UiSchema;\r\n\r\n    private async onSubmit(name:string, context:Context) {\r\n        let {isOwner, isAdmin} = context.form.data;\r\n        await store.admins.unitSetAdmin(isOwner, isAdmin);\r\n        nav.pop();\r\n    }\r\n    componentWillMount() {\r\n        let {unit} = store;\r\n        let {isRoot, isOwner, isAdmin} = unit;\r\n        let unitAdmin = store.admins.cur;\r\n        let owner:ItemSchema = {name: 'isOwner', type: 'boolean'};\r\n        let admin:ItemSchema = {name: 'isAdmin', type: 'boolean'};\r\n        let submit:ButtonSchema = {name: 'submit', type: 'submit'};\r\n        if (isRoot === 1) this.schema = [owner, admin, submit];\r\n        else if (isOwner === 1) this.schema = [admin, submit];\r\n\r\n        this.uiSchema = {\r\n            items: {\r\n                'isOwner': {widget: 'checkbox', label: '高管', trueValue:1, falseValue:0} as UiCheckItem,\r\n                'isAdmin': {widget: 'checkbox', label: '管理员', trueValue:1, falseValue:0} as UiCheckItem,\r\n                'submit': {widget: 'button', label: '提交'} as UiButton,\r\n            }\r\n        };\r\n        /*\r\n        let fields: Field[] = [];\r\n        let ownerField: Field = {\r\n            type: 'checkbox',\r\n            name: 'isOwner',\r\n            label: '高管',\r\n            defaultValue: unitAdmin.isOwner,\r\n        };\r\n        let adminField: Field = {\r\n            type: 'checkbox',\r\n            name: 'isAdmin',\r\n            label: '管理员',\r\n            defaultValue: unitAdmin.isAdmin,\r\n        };\r\n        if (isRoot === 1) {\r\n            fields.push(ownerField);\r\n            fields.push(adminField);\r\n        }\r\n        else if (isOwner === 1) {\r\n            fields.push(adminField);\r\n        }        \r\n        this.schema = new FormSchema({\r\n            fields: fields,\r\n            onSumit: this.onSubmit.bind(this),\r\n            submitText: '提交'\r\n        });\r\n        */\r\n    }\r\n    render() {\r\n        return <Page header='权限'>\r\n            <Fellow {...store.admins.cur} />\r\n            <Form schema={this.schema} uiSchema={this.uiSchema} onButtonClick={this.onSubmit} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nconst Fellow = (props:UnitAdmin) => {\r\n    let {name, nick, icon} = props;\r\n    //<img className='w-75' src={icon || process.env.REACT_APP_DEFAULT_ICON} />\r\n    return <div className=\"container\">\r\n        <div className='row my-4'>\r\n            <div className=\"col-xs-2 d-flex justify-content-end align-items-start\">\r\n                <Image className=\"w-75\" src={icon} />\r\n            </div>\r\n            <div className=\"col-xs-auto\">\r\n                <h4 className='text-dark'>{name}</h4>\r\n                <h6><small className='text-secondary'>{nick}</small></h6>\r\n                <div className='text-info'>设置成员权限</div>\r\n            </div>\r\n        </div>\r\n        <hr className='mb-4' />\r\n    </div>;\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page, Image} from 'tonva-tools';\r\nimport {UnitApps, UnitAdmin} from '../model';\r\nimport {store} from '../store';\r\nimport NewFellow from './NewFellow';\r\nimport EditAdmin from './EditAdmin';\r\nimport {LMR, Badge, List} from 'tonva-react-form';\r\n\r\n@observer\r\nexport default class AdministorsPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.admins.load();\r\n    }\r\n\r\n    onNewFellow() {\r\n        //nav.push(<NewFellow />);\r\n    }\r\n    onItemClick(ua:UnitAdmin) {\r\n        store.admins.cur = ua;\r\n        nav.push(<EditAdmin />);\r\n    }\r\n    private row = ({icon, name, nick}:UnitAdmin) => {\r\n        let content;\r\n        if (nick === undefined) {\r\n            content = <b>{name}</b>;\r\n        }\r\n        else {\r\n            content = <><b>{nick}</b> &nbsp; <small className=\"text-muted\">{name}</small></>;\r\n        }\r\n        return <LMR className=\"py-2 px-3 align-items-stretch\"\r\n            left={<Badge size=\"sm\"><Image className=\"w-3c h-3c\" src={icon} /></Badge>}>\r\n            <div className=\"px-3\">{content}</div>\r\n        </LMR>;\r\n    }\r\n\r\n    private onNewOwner = (evt: React.MouseEvent<HTMLAnchorElement>) => {\r\n        this.newAdmin(evt, true, false);\r\n    }\r\n\r\n    private onNewAdmin = (evt: React.MouseEvent<HTMLAnchorElement>) => {\r\n        this.newAdmin(evt, false, true);\r\n    }\r\n\r\n    private newAdmin(evt: React.MouseEvent<HTMLAnchorElement>, isOwner:boolean, isAdmin:boolean) {\r\n        evt.preventDefault();\r\n        nav.push(<NewFellow isOwner={isOwner} isAdmin={isAdmin} />);\r\n    } \r\n    render() {\r\n        //let n = nav;\r\n        //let me = n.local.user.get().id;\r\n        let {unit} = store;\r\n        if (unit === undefined) return;\r\n        let {owners, admins, fellows} = store.admins;\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.onNewFellow}>新增成员</button>;\r\n\r\n        let showOwners = false, showAdmins = false;\r\n        let ownersView, adminsView, fellowsView;\r\n        if (unit.isRoot === 1) {\r\n            showOwners = true;\r\n            showAdmins = true;\r\n        }\r\n        if (unit.isOwner === 1) showAdmins = true;\r\n        if (showOwners === true) {\r\n            let header = <LMR \r\n                className=\"px-3 small\"\r\n                left=\"高管\" \r\n                right={<a className=\"small\" href='#' onClick={this.onNewOwner}>新增</a>} />;\r\n            ownersView = <List \r\n                className=\"my-4\"\r\n                header={header} items={owners}\r\n                none=\"[无]\"\r\n                item={{onClick: this.onItemClick, render: this.row}}\r\n            />;\r\n        }\r\n        if (showAdmins === true) {\r\n            let header = <LMR \r\n                className=\"px-3 small\"\r\n                left=\"管理员\" \r\n                right={<a className=\"small\" href='#' onClick={this.onNewAdmin}>新增</a>} />;\r\n            adminsView = <List \r\n                className='my-4' \r\n                header={header} items={admins} \r\n                none='[无]'\r\n                item={{onClick: this.onItemClick, render: this.row}}\r\n            />;\r\n        }\r\n        return <Page header=\"管理员\" right={right}>\r\n            {ownersView}\r\n            {adminsView}\r\n            <div className=\"card mx-1 my-4\">\r\n                <div className=\"card-title\">说明</div>\r\n                <div className=\"card-body\">\r\n                    <ul style={{paddingLeft:'1em'}}>\r\n                        <li><div className=\"card-text\">管理组包括主人、高管、管理员</div></li>\r\n                        <li><div className=\"card-text\">小号主人可以增减高管</div></li>\r\n                        <li><div className=\"card-text\">高管可以增减管理员</div></li>\r\n                        <li><div className=\"card-text\">管理员可以管理小号，程序的开发，以及用户</div></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {EasyDate} from 'tonva-react-form';\r\n\r\nexport interface IdDatesProps {\r\n    date_init: Date;\r\n    date_update: Date;\r\n}\r\n\r\nexport class IdDates extends React.Component<IdDatesProps> {\r\n    render() {\r\n        let {date_init, date_update} = this.props;\r\n        return <small className=\"text-muted\">\r\n            上次修改: <EasyDate date={date_update}/>\r\n            <i className=\"fa fa-fw\" />\r\n            创建: <EasyDate date={date_init}/>\r\n        </small>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\n\r\nexport function span(\r\n    isLink:boolean,\r\n    className:string, \r\n    onClick:(evt:React.MouseEventHandler<HTMLElement>)=>void,\r\n    content:any): JSX.Element\r\n{\r\n    let tag:string;\r\n    let props:any;\r\n    if (isLink === true) {\r\n        tag = 'a';\r\n        props = {\r\n            className: classNames(className, 'cursor-pointer'),\r\n            onClick: onClick,\r\n            href: '#',\r\n        }\r\n    }\r\n    else {\r\n        tag = 'span';\r\n        props = {\r\n            className: className,\r\n        }\r\n    }\r\n    return React.createElement(tag, props, content);\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {Prop, ListProp, Media, PropGrid} from 'tonva-react-form';\r\nimport {nav, Page}  from 'tonva-tools';\r\nimport {store} from '../store';\r\nimport {span} from './span';\r\n\r\nexport interface UnitLinkProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class UnitSpan extends React.Component<UnitLinkProps> {\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<UnitInfo id={this.props.id} />);\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        if (id === undefined) return null;\r\n        let unit = store.cacheUnits.get(id);\r\n        let content;\r\n        let {name, nick, discription} = unit;\r\n        let disc = discription && '- ' + discription;\r\n        if (nick) {\r\n            content = <>{nick} &nbsp; <small className=\"text-muted\">{name} {disc}</small></>;\r\n        }\r\n        else if (name) {\r\n            content = <>{name} &nbsp; <small className=\"text-muted\">{disc}</small></>;\r\n        }\r\n        else {\r\n            content = id;\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\n@observer\r\nexport class UnitName extends React.Component<UnitLinkProps> {\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        if (id === undefined) return null;\r\n        let unit = store.cacheUnits.get(id);\r\n        let {name} = unit;\r\n        return <>{name}</>;\r\n    }\r\n}\r\n\r\nclass UnitInfo extends React.Component<UnitLinkProps> {\r\n    private rows:Prop[];\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        let unit = store.cacheUnits.get(this.props.id);\r\n        let {name, nick, icon, discription} = unit;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={icon} main={name} discription={discription} />},\r\n            '',\r\n        ];\r\n        return <Page header={'小号 - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n","export const appIcon = process.env.REACT_APP_ICON;\r\nexport const appItemIcon = process.env.REACT_APP_ITEM_ICON;\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport * as classNames from 'classnames';\r\nimport {Prop, Media, PropGrid} from 'tonva-react-form';\r\nimport {nav, Page}  from 'tonva-tools';\r\nimport {appIcon, appItemIcon} from 'consts';\r\nimport {store} from 'store';\r\nimport {IdDates} from './idDates';\r\nimport {span} from './span';\r\nimport {UnitSpan} from './unitSpan';\r\n\r\nexport interface UqLinkProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class UqSpan extends React.Component<UqLinkProps> {\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<UqInfo id={this.props.id} />);\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, className, isLink} = this.props;\r\n        let api = store.cacheUqs.get(id);\r\n        let content;\r\n        if (api === null) {\r\n            content = id;\r\n        }\r\n        else {\r\n            let {name, discription} = api;\r\n            let disc = discription && '- ' + discription;\r\n            if (name !== undefined) {\r\n                content = <React.Fragment>{name} &nbsp; <small className=\"text-muted\">{disc}</small></React.Fragment>;\r\n            }\r\n            else {\r\n                content = id;\r\n            }\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\n@observer\r\nclass UqInfo extends React.Component<UqLinkProps> {\r\n    private rows:Prop[];\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        let uq = store.cacheUqs.get(this.props.id);\r\n        let {name, discription, unit, date_init, date_update} = uq;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={name} discription={disp} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n        ];\r\n        return <Page header={'UQ - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport {Prop, ListProp, Media, PropGrid} from 'tonva-react-form';\r\nimport {nav, Page}  from 'tonva-tools';\r\nimport {store} from '../store';\r\nimport {devApi} from '../api';\r\nimport {span} from './span';\r\nimport {IdDates} from './idDates';\r\nimport {UnitSpan} from './unitSpan';\r\n\r\nexport interface AppSpanProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class AppSpan extends React.Component<AppSpanProps> {\r\n    /*\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.onClick = this.onClick.bind(this);\r\n    }\r\n    componentWillMount() {\r\n        let {id} = this.props;\r\n        store.cacheApps.get(id);\r\n    }\r\n    */\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<AppInfo id={this.props.id} />)\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        let app = store.cacheApps.get(id);\r\n        let content;\r\n        if (app === null) {\r\n            content = id;\r\n        }\r\n        else {\r\n            let {name, icon, discription} = app;\r\n            let isPublic = app.public;\r\n            let disc = discription && '- ' + discription;\r\n            if (name !== undefined) {\r\n                content = <React.Fragment>{name} &nbsp; <small className=\"text-muted\">{disc}</small></React.Fragment>;\r\n            }\r\n            else {\r\n                content = id;\r\n            }\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\n\r\n@observer\r\nclass AppInfo extends React.Component<AppSpanProps> {\r\n    private rows:Prop[];\r\n    @observable private apis:ListProp = {\r\n        label: '关联API', type: 'list', list: undefined, row: AppRow\r\n    };\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    async componentDidMount() {\r\n        this.apis.list = await devApi.loadAppUqs(this.props.id);\r\n    }\r\n    render() {\r\n        let app = store.cacheApps.get(this.props.id);\r\n        let {unit, name, discription, icon, date_init, date_update} = app;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={icon} main={name} discription={disp} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            this.apis,\r\n        ];\r\n        return <Page header={'APP - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass AppRow extends React.Component<any> {\r\n    render() {\r\n        let {name, discription} = this.props;\r\n        let disp;\r\n        if (discription) disp = <div className=\"small text-muted\">{discription}</div>;\r\n        return <div className='form-control-plaintext'>\r\n            <div>{name}</div>\r\n            {disp}\r\n        </div>\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport * as classNames from 'classnames';\r\nimport {Prop, ListProp, Media, PropGrid} from 'tonva-react-form';\r\nimport {nav, Page}  from 'tonva-tools';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {store} from '../store';\r\nimport {DevModel} from '../model';\r\nimport {devApi} from '../api';\r\nimport {span} from './span';\r\nimport {IdDates} from './idDates';\r\nimport {UnitSpan} from './unitSpan';\r\n\r\nexport interface ServerSpanProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class ServerSpan extends React.Component<ServerSpanProps> {\r\n    /*\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.onClick = this.onClick.bind(this);\r\n    }\r\n    componentWillMount() {\r\n        let {id} = this.props;\r\n        store.cacheServers.get(id);\r\n    }\r\n    */\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<ServerInfo id={this.props.id} />)\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        let server = store.cacheServers.get(id);\r\n        let content;\r\n        if (server === null) {\r\n            content = id;\r\n        }\r\n        else {\r\n            let {cloud, ip, discription} = server;\r\n            if (discription !== undefined) {\r\n                content = <React.Fragment>{discription} &nbsp; <small className=\"text-muted\">{ip}</small></React.Fragment>;\r\n            }\r\n            else {\r\n                content = id;\r\n            }\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\nclass ServerInfo extends React.Component<ServerSpanProps> {\r\n    private rows:Prop[];\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        let server = store.cacheServers.get(this.props.id);\r\n        let {discription, cloud, ip, unit, date_init, date_update} = server;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={discription} discription={ip} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            {type: 'string', label: '云服务', name: 'cloud'},\r\n        ];\r\n        return <Page header={'服务器 - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {nav, Page} from 'tonva-tools';\r\n\r\ninterface StringValueEditProps {\r\n    title: string;\r\n    onChanged:(value:any, orgValue:any)=>Promise<string|void>;\r\n    value?: any;\r\n    buttonText?: string;\r\n    info?: string;\r\n}\r\ninterface StringValueEditState {\r\n    disabled: boolean;\r\n    error?: string;\r\n}\r\n\r\nexport class StringValueEdit extends React.Component<StringValueEditProps, StringValueEditState> {\r\n    //private input:HTMLInputElement;\r\n    protected value: string;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            disabled: true,\r\n        };\r\n    }\r\n    /*\r\n    private ref = (input:HTMLInputElement) => {\r\n        if (!input) return;\r\n        input.value = this.props.value || '';\r\n        this.input = input;\r\n    }*/\r\n    private onChange = (evt:React.FormEvent<HTMLInputElement>) => {\r\n        let val = this.props.value;\r\n        let org = val && val.trim();\r\n        this.value = evt.currentTarget.value.trim();\r\n        this.setState({\r\n            disabled: org === this.value\r\n        });\r\n        \r\n    }\r\n    protected onSubmit = async () => {\r\n        let val = this.props.value;\r\n        let org = val && val.trim();\r\n        let v = this.value; // this.input.value.trim();\r\n        let onChanged = this.props.onChanged;\r\n        if (onChanged !== undefined) {\r\n            let ret = await onChanged(v, org);\r\n            if (typeof ret === 'string') {\r\n                this.setState({error: ret});\r\n                return;\r\n            }\r\n            nav.pop();\r\n        }\r\n    }\r\n    protected renderControl() {\r\n        return <input className=\"form-control w-100\" type=\"text\"\r\n            // ref={this.ref}\r\n            defaultValue={this.props.value}\r\n            onChange={this.onChange} />\r\n    }\r\n    render() {\r\n        let {title, onChanged, buttonText, info, value} = this.props;\r\n        let {disabled, error} = this.state;\r\n        let right = <button\r\n            className=\"btn btn-success btn-sm\"\r\n            disabled={disabled}\r\n            onClick={this.onSubmit}\r\n        >\r\n            {buttonText||'保存'}\r\n        </button>;\r\n        let errorDiv;\r\n        if (error !== undefined) errorDiv = <div className='text-danger'>{error}</div>;\r\n        return <Page header={title} right={right}>\r\n            <div className=\"my-4 mx-3\">\r\n                {this.renderControl()}\r\n                {errorDiv}\r\n                <small className=\"d-block mt-2 text-muted\">{info}</small>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n\r\nexport class TextValueEdit extends StringValueEdit {\r\n    /*\r\n    private textArea:HTMLTextAreaElement;\r\n    private refTextArea = (textArea:HTMLTextAreaElement) => {\r\n        if (!textArea) return;\r\n        textArea.value = this.props.value || '';\r\n        this.textArea = textArea;\r\n    }\r\n    */\r\n    private onTextAreaChange = (evt:React.FormEvent<HTMLTextAreaElement>) => {\r\n        let val = this.props.value;\r\n        let org = val && val.trim();\r\n        this.value = evt.currentTarget.value.trim();\r\n        this.setState({\r\n            disabled: org === this.value\r\n        })\r\n    }\r\n    protected renderControl() {\r\n        return <textarea className=\"form-control w-100\" rows={8}\r\n            // ref={this.refTextArea}\r\n            defaultValue={this.props.value}\r\n            onChange={this.onTextAreaChange} />\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { nav, Page } from 'tonva-tools';\r\nimport { SearchBox, List } from 'tonva-react-form';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport interface IdPickPageProps {\r\n    caption: string;\r\n    searchPlaceHolder?: string;\r\n    candidateItems: ((params:any, key:string) => Promise<any[]>) | any[];\r\n    moreCandidates: () => Promise<void>;\r\n    row: (item:any, index:number) => JSX.Element;\r\n    idFromItem: (item:any) => number;\r\n    resolve: (item?: any) => void;\r\n    params: any;\r\n}\r\n\r\n@observer\r\nexport class IdPickPage extends React.Component<IdPickPageProps> {\r\n    @observable private items:any[];\r\n\r\n    async componentDidMount() {\r\n        let {candidateItems, params} = this.props;\r\n        this.items = Array.isArray(candidateItems)? \r\n            candidateItems \r\n            : await candidateItems(params, '');\r\n    }\r\n    private itemClick = (item:any):Promise<void> => {\r\n        let {resolve, idFromItem} = this.props;\r\n        resolve(idFromItem(item));\r\n        nav.pop();\r\n        return;\r\n    }\r\n    private onSearch = async (key: string):Promise<void> => {\r\n        let {candidateItems, params} = this.props;\r\n        if (typeof candidateItems === 'function') {\r\n            let ret = await candidateItems(params, key);\r\n            this.items = ret;\r\n        }\r\n        return;\r\n    }\r\n    render() {\r\n        let {caption, row, searchPlaceHolder} = this.props;\r\n        return <Page header={caption} back=\"close\">\r\n            <div className=\"container\">\r\n                <SearchBox className=\"my-2\" \r\n                    onSearch={this.onSearch} \r\n                    placeholder={searchPlaceHolder}\r\n                    maxLength={100} />\r\n            </div>\r\n            <List items={this.items} item={{onClick:this.itemClick, render:row}} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport {SearchBox, Media, List, LMR, Badge, Prop, PropGrid, FA} from 'tonva-react-form';\r\nimport {nav, Page, PageItems} from 'tonva-tools';\r\nimport {IdDates, UnitSpan} from '../tools';\r\nimport {UnitApp, DevModel} from '../model';\r\nimport {store} from '../store';\r\nimport { devApi } from 'api';\r\n\r\n@observer\r\nexport class Info extends React.Component<{app:UnitApp, appActed?:(appId:number, inUnit:number)=>void}> {\r\n    @observable private uqAccesses: any[];\r\n    async componentWillMount() {\r\n        this.uqAccesses = await devApi.loadAppUqs(this.props.app.id);\r\n    }\r\n\r\n    private renderUqRow = (uqAccess:any, index:number):JSX.Element => {\r\n        let {name, owner, unit, discription} = uqAccess;\r\n        return <LMR className=\"py-2\" right={<small className=\"text-muted\">{discription}</small>}>\r\n            {owner} / {name}\r\n        </LMR>;\r\n    }\r\n\r\n    private act = async () => {\r\n        let {app, appActed} = this.props;\r\n        let {id, unit, inUnit} = app;\r\n        let newInUnit:number = 1;\r\n        if (inUnit === 0) {\r\n            let ret = await store.restoreUnitApp(id);\r\n            if (ret <= 0) alert('app 或者 uq 没有定义 service');\r\n        }\r\n        else if (inUnit === 1) {\r\n            await store.stopUnitApp(id);\r\n            newInUnit = 0;\r\n        }\r\n        else {\r\n            let newApp:UnitApp = _.clone(app);\r\n            newApp.id = id;\r\n            newApp.inUnit = 1;\r\n            let ret = await store.addUnitApp(newApp);\r\n            if (ret <= 0) alert('app 或者 uq 没有定义 service');\r\n        }\r\n        if (appActed !== undefined) {\r\n            appActed(id, newInUnit);\r\n        }\r\n        nav.pop();\r\n    }\r\n    render() {\r\n        let {unit, name, discription, icon, inUnit, date_init, date_update} = this.props.app;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let faName:string, text:string, color:string;\r\n        if (inUnit === 1) {\r\n            faName = 'ban';\r\n            text = '停用APP';\r\n            color = 'btn-danger';\r\n        }\r\n        else if (inUnit === 0) {\r\n            faName = 'refresh';\r\n            text = '恢复APP';\r\n            color = 'btn-success';\r\n        }\r\n        else {\r\n            faName = 'plus';\r\n            text = '启用APP';\r\n            color = 'btn-primary';\r\n        }\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <Media icon={icon} main={name} discription={disp} />\r\n            },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                label: '开发号', \r\n                component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div>\r\n            },\r\n            {\r\n                type: 'component', \r\n                label: '关联UQ', \r\n                component: <List className=\"w-100\" items={this.uqAccesses} item={{render: this.renderUqRow}} />\r\n            },\r\n            '',\r\n            '',\r\n            {\r\n                type: 'component', \r\n                bk: '', \r\n                component: <button className={classNames('btn', 'w-100', color)} onClick={this.act}>\r\n                    <FA name={faName} size=\"lg\" /> {text}\r\n                </button>\r\n            },\r\n        ];\r\n        return <div>\r\n            <PropGrid rows={rows} values={this.props} />\r\n        </div>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {IObservableArray} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport {SearchBox, Media, List, LMR, Badge, Prop, PropGrid} from 'tonva-react-form';\r\nimport {nav, Page, PageItems, Image} from 'tonva-tools';\r\nimport {mainApi} from '../api';\r\nimport {store} from '../store';\r\nimport {UnitApp} from '../model';\r\nimport {Info} from './info';\r\n\r\nclass PageApps extends PageItems<UnitApp> {\r\n    private unitId:number;\r\n    constructor(unitId:number) {\r\n        super();\r\n        this.unitId = unitId;\r\n    }\r\n    protected async load():Promise<UnitApp[]> {\r\n        return await mainApi.searchApp(this.unitId, this.param, this.pageStart, this.pageSize);\r\n    }\r\n    protected setPageStart(item:UnitApp) {\r\n        if (item === undefined)\r\n            this.pageStart = 0;\r\n        else\r\n            this.pageStart = item.id;\r\n    }\r\n}\r\n\r\n@observer\r\nexport class NewApp extends React.Component {\r\n    private apps: PageApps;\r\n    constructor(props) {\r\n        super(props);\r\n        this.apps = new PageApps(store.unit.id);\r\n    }\r\n    private onSearch = async (key:string) => {\r\n        await this.apps.first(key);\r\n    }\r\n    private appClick = (app:UnitApp) => {\r\n        nav.push(<Page header=\"App详细信息\">\r\n            <Info app={app} appActed={this.appActed}/>\r\n        </Page>);\r\n    }\r\n    private appActed = (appId:number, inUnit:number) => {\r\n        let apps = this.apps.items as IObservableArray<UnitApp>; //.replace .find(v => v.id === appId);\r\n        let app = apps.find(v => v.id === appId);\r\n        app.inUnit = inUnit;\r\n        apps.replace([app]);\r\n    }\r\n    private renderApp(app:UnitApp):JSX.Element {\r\n        let {name, discription, icon, inUnit} = app;\r\n        let right;\r\n        if (inUnit === 1)\r\n            right = <small>已启用</small>;\r\n        else if (inUnit === 0)\r\n            right = <small>已停用</small>;\r\n        return <LMR className=\"px-3 py-2\"\r\n            left={<Badge><Image src={icon} /></Badge>}\r\n            right={right}>\r\n            <div className=\"px-3\">\r\n                <div>{name}</div>\r\n                <small className=\"text-muted\">{discription}</small>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n    render() {\r\n        let items = this.apps.items;\r\n        let center = <SearchBox onSearch={this.onSearch} \r\n            className=\"w-100 mx-1\" \r\n            placeholder=\"搜索App\" \r\n            maxLength={100} />;\r\n        return <Page header={center}>\r\n            <List\r\n                items={items}\r\n                item={{onClick:this.appClick, render:this.renderApp}}\r\n                before=\"搜索App名字\" />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, FA, SubmitResult, LMR, Badge} from 'tonva-react-form';\r\nimport {nav, Page, Image} from 'tonva-tools';\r\nimport {store} from '../store';\r\nimport {NewApp} from './new';\r\nimport {UnitApp} from '../model';\r\nimport {Info} from './info';\r\n\r\n@observer\r\nexport default class AppsPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadApps();\r\n    }\r\n    private itemRender(app:UnitApp, index:number) {\r\n        let {name, discription, icon, inUnit} = app;\r\n        let ban;\r\n        if (inUnit === 0)\r\n            ban = <FA className=\"text-danger\" name='ban' />;\r\n        return <LMR className=\"px-3 py-1\"\r\n            left={<Badge><Image src={icon} /></Badge>}\r\n            right={ban}>\r\n            <div className=\"px-3\">\r\n                <div>{name}</div>\r\n                <small className=\"text-muted\">{discription}</small>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n    private appClick(app:UnitApp) {\r\n        nav.push(<Page header=\"App详细信息\">\r\n            <Info app={app} />\r\n        </Page>);\r\n    }\r\n    private newItem() {\r\n        nav.push(<NewApp {...this.props} />);\r\n    }\r\n    render() {\r\n        let right = <button \r\n            className='btn btn-secondary btn-sm' \r\n            onClick={()=>this.newItem()}><FA name=\"plus\" /></button>;\r\n        return <Page header=\"启停App\" right={right}>\r\n            <List items={store.apps} item={{render: this.itemRender, onClick: this.appClick}} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {List, LMR, FA, TonvaForm, SubmitResult, FormRow} from 'tonva-react-form';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {Role} from '../model';\r\nimport {store} from '../store';\r\n\r\nexport class NewRole extends React.Component {\r\n    private form:TonvaForm;\r\n    private formRows:FormRow[] = [\r\n        {\r\n            label: '名称', \r\n            field: {name: 'name', type: 'string', maxLength: 50, required: true},\r\n        },\r\n        {\r\n            label: '描述',\r\n            field: {name: 'discription', type: 'string', maxLength: 250},\r\n            face: {type: 'textarea'}\r\n        },\r\n    ];\r\n    private async onSubmit(values:any):Promise<SubmitResult> {\r\n        let {name, discription} = values;\r\n        let id = await store.unitAddRole(name, discription);\r\n        if (id <= 0) {\r\n            this.form.formView.setError('name', '角色名 ' + name + ' 已经存在');\r\n            return;\r\n        }\r\n        nav.pop();\r\n        return;\r\n    }\r\n    render() {\r\n        return <Page header=\"新建角色\">\r\n            <TonvaForm className=\"m-3\" ref={tf => this.form = tf} \r\n                formRows={this.formRows} \r\n                onSubmit={this.onSubmit} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, Media, LMR, FA, TonvaForm, SubmitResult, FormRow, \r\n    PropGrid, Prop, Badge, StackedFA} from 'tonva-react-form';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {StringValueEdit} from '../tools';\r\nimport {Role, UnitApp} from '../model';\r\nimport {store} from '../store';\r\nimport {mainApi} from '../api';\r\n\r\ninterface Props {\r\n    role: Role;\r\n}\r\ninterface State {\r\n    apps: UnitApp[]\r\n}\r\nexport class RoleApps extends React.Component<Props, State> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {apps:undefined};\r\n    }\r\n    async componentDidMount() {\r\n        let ret = await mainApi.unitRoleApps(store.unit.id, this.props.role.id);\r\n        this.setState({\r\n            apps: ret,\r\n        });\r\n    }\r\n    private renderRoleApp(app:UnitApp, index:number) {\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={app.name}\r\n                right={<small className=\"text-muted\">{app.discription}</small>} />\r\n    }\r\n    render() {\r\n        let {role} = this.props;\r\n        return <Page header={role.name + ' - 可用APP'}>\r\n            <List\r\n                items={this.state.apps}\r\n                item={{render: this.renderRoleApp}}\r\n                none=\"没有APP\" />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, LMR, FA, TonvaForm, SubmitResult, FormRow, Media, Muted, PropGrid, Prop} from 'tonva-react-form';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {Role} from '../model';\r\nimport {store} from '../store';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {StringValueEdit} from '../tools';\r\nimport {RoleApps} from './roleApps';\r\n\r\n@observer\r\nexport class MemberPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadRoles();\r\n        await store.loadMemberRoles();\r\n    }\r\n    async onAssigned(value:any, orgValue:any):Promise<void> {\r\n        await store.unitAssignMember(value);\r\n    }\r\n    private renderMemberRole = (role:Role) => {\r\n        let {name, discription} = role;\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={name}\r\n                right={<Muted>{discription}</Muted>} />\r\n    }\r\n    private roleClick(role:Role) {\r\n        nav.push(<RoleApps role={role} />);\r\n    }\r\n    private setRole = () => {\r\n        nav.push(<SetRole />);\r\n    }\r\n    render() {\r\n        let roleUser = store.roleMember;\r\n        let {nick, name, assigned, icon} = roleUser;\r\n        let disp = <div>\r\n            <div><Muted>唯一名: </Muted> &nbsp; {name}</div>\r\n            <div><Muted>昵称: </Muted> &nbsp; {nick||<Muted>[无]</Muted>}</div>\r\n        </div>;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component',\r\n                component: <Media icon={icon||appIcon} main={roleUser.assigned||nick||name} discription={disp} />\r\n            },\r\n            '',\r\n            {\r\n                label: '备注名',\r\n                type: 'string',\r\n                name: 'assigned',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"修改备注名\"\r\n                    value={roleUser.assigned}\r\n                    onChanged={this.onAssigned} \r\n                    info=\"加一个备注，便于甄别用户\" />),\r\n            },\r\n            '',\r\n        ];\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.setRole}>修改角色</button>;\r\n        return <Page header=\"用户详情\" right={right}>\r\n            <PropGrid rows={rows} values={roleUser} />\r\n            <div className=\"px-3 py-1\"><small><FA name=\"angle-double-right\" /> 所属角色</small></div>\r\n            <List\r\n                items={store.memberRoles} \r\n                item={{render: this.renderMemberRole, onClick: this.roleClick}} />\r\n        </Page>\r\n    }\r\n}\r\n\r\n@observer\r\nclass SetRole extends React.Component {\r\n    private list:List;\r\n    constructor(props) {\r\n        super(props);\r\n        this.submit = this.submit.bind(this);\r\n    }\r\n    async componentDidMount() {\r\n        await store.loadRoles();\r\n        await store.loadMemberRoles();\r\n    }\r\n    private renderRole(role:Role, index:number) {\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={role.name}\r\n                right={<small className=\"text-muted\">{role.discription}</small>} />\r\n    }\r\n    private roleSelect(role:Role, isSelected: boolean, anySelected: boolean) {\r\n    }\r\n    private async submit() {\r\n        await store.setMemberRoles(this.list.selectedItems);\r\n        nav.pop();\r\n    }\r\n    render() {\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.submit}>保存</button>;\r\n        let roles = store.roles;\r\n        let memberRoles = store.memberRoles;\r\n        return <Page header=\"修改角色\" right={right}>\r\n            <List \r\n                ref={list=>this.list=list}\r\n                items={roles}\r\n                selectedItems={memberRoles}\r\n                compare={(role:Role, selectRole:Role)=>role.id === selectRole.id}\r\n                item={{render: this.renderRole, onSelect: this.roleSelect}} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, LMR, Badge, FA, TonvaForm, SubmitResult, FormRow, Muted, SearchBox} from 'tonva-react-form';\r\nimport {nav, Page, Image} from 'tonva-tools';\r\nimport {Role, RoleMember} from '../model';\r\nimport {store} from '../store';\r\nimport {mainApi} from '../api';\r\nimport {MemberPage} from './memberPage';\r\n\r\n@observer\r\nexport class MembersPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadMembers();\r\n    }\r\n    private renderMember(member:RoleMember, index:number):JSX.Element {\r\n        return <MemberRow {...member} />;\r\n    }\r\n    private userClick(user:RoleMember) {\r\n        store.setRoleUser(user);\r\n        nav.push(<MemberPage />);\r\n    }\r\n    private onSearch() {\r\n        let role = store.role;\r\n        let roleId = role === undefined? 0:role.id;\r\n        nav.push(<MemberSearch roleId={roleId} />);\r\n    }\r\n    render() {\r\n        let right = <button className=\"btn btn-sm\" onClick={this.onSearch}><FA name=\"search\" /></button>;\r\n        return <Page header=\"用户\" right={right}>\r\n            <List items={store.roleMembers} item={{render: this.renderMember, onClick: this.userClick}} />\r\n        </Page>\r\n    }\r\n}\r\n\r\nconst MemberRow = (member:RoleMember) => {\r\n    let {nick, name, assigned, icon} = member;\r\n    let content;\r\n    if (assigned)\r\n        content = <><div><b>{assigned}</b> <Muted>{nick}</Muted></div><Muted>{name}</Muted></>;\r\n    else if (nick)\r\n        content = <><div><b>{nick}</b></div><Muted>{name}</Muted></>;\r\n    else\r\n        content = <div><b>{name}</b></div>;\r\n    return <LMR className=\"py-2 px-3 align-items-stretch\"\r\n        left={<Badge size=\"sm\"><Image src={icon} /></Badge>}>\r\n        <div className=\"px-3\">{content}</div>\r\n    </LMR>;\r\n};\r\n\r\ninterface SearchProps {\r\n    roleId: number;\r\n}\r\ninterface SearchState {\r\n    members: RoleMember[];\r\n}\r\nexport class MemberSearch extends React.Component<SearchProps, SearchState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.state = {\r\n            members: null,\r\n        }\r\n    }\r\n    private async onSearch(key:string) {\r\n        let ret = await mainApi.unitMembers(store.unit.id, this.props.roleId, key, 0, 100);\r\n        this.setState({members: ret});\r\n    }\r\n    private renderMember(member:RoleMember, index:number):JSX.Element {\r\n        return <MemberRow {...member} />;\r\n    }\r\n    private userClick(user:RoleMember) {\r\n        store.setRoleUser(user);\r\n        nav.push(<MemberPage />);\r\n    }\r\n    render() {\r\n        let header = <SearchBox className=\"w-100 mx-1\" \r\n            onSearch={this.onSearch} \r\n            maxLength={100}\r\n            placeholder=\"搜索用户\" />;\r\n        return <Page header={header}>\r\n            <List\r\n                items={this.state.members}\r\n                item={{render: this.renderMember, onClick: this.userClick}} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, Media, LMR, FA, PropGrid, Prop} from 'tonva-react-form';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {StringValueEdit} from '../tools';\r\nimport {Role, UnitApp} from '../model';\r\nimport {store} from '../store';\r\nimport {MembersPage} from './membersPage';\r\n\r\n@observer\r\nexport class RolePage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadApps();\r\n        await store.loadRoleApps();\r\n    }\r\n    private editRole() {\r\n        nav.push(<EditRole />);\r\n    }\r\n    private renderRoleApp = (app:UnitApp, index:number) => {\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={app.name}\r\n                right={<small className=\"text-muted\">{app.discription}</small>} />\r\n    }\r\n    private roleAppClick = (app:UnitApp) => {\r\n        nav.push(<RoleApps />);\r\n    }\r\n    private addRoleApp() {\r\n        nav.push(<RoleApps />);\r\n    }\r\n    private members() {\r\n        nav.push(<MembersPage />);\r\n    }\r\n    render() {\r\n        let {name, discription, count} = store.role;\r\n        let onMembersClick, membersLeft, membersRight;\r\n        if (count===undefined || count===null || count===0) {\r\n            membersLeft = <small className=\"text-muted\">无用户</small>;\r\n        }\r\n        else {\r\n            membersLeft = `共有 ${count} 用户`;\r\n            membersRight = <div><FA name=\"chevron-right\" /></div>;\r\n            onMembersClick = this.members;\r\n        }\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <Media icon={undefined} main={name} discription={discription} />,\r\n                onClick: this.editRole,\r\n            },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <LMR className=\"py-2\" left={membersLeft} right={membersRight} />,\r\n                onClick: onMembersClick,\r\n            },\r\n            '=',\r\n        ];\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={()=>this.addRoleApp()}><FA name=\"plus\" /> APP</button>;\r\n        return <Page header=\"角色\" right={right}>\r\n            <PropGrid rows={rows} values={{}} />\r\n            <div className=\"px-3 py-1\"><small><FA name=\"angle-double-right\" /> 可用APP列表</small></div>\r\n            <List\r\n                items={store.roleApps} \r\n                item={{render: this.renderRoleApp, onClick:this.roleAppClick}}\r\n                none={<small className=\"text-muted px-3 py-1\">没有APP, 点击右上角按钮选择APP</small>} />\r\n        </Page>\r\n    }\r\n}\r\n\r\n@observer\r\nclass EditRole extends React.Component {\r\n    async onNameChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.roleChangeProp('name', value);\r\n    }\r\n    async onDiscriptionChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.roleChangeProp('discription', value);\r\n    }\r\n    render() {\r\n        let role = store.role;\r\n        let {id} = role;\r\n        let isSysRole = id === 1 || id === 2;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                label: '名称', \r\n                type: 'string',\r\n                name: 'name', \r\n                onClick: isSysRole? undefined : ()=>nav.push(<StringValueEdit \r\n                    title=\"修改名称\"\r\n                    value={role.name}\r\n                    onChanged={this.onNameChanged} \r\n                    info=\"好的名字便于理解\" />)\r\n            },\r\n            {\r\n                label: '描述',\r\n                type: 'string',\r\n                name: 'discription',\r\n                onClick: isSysRole? undefined : ()=>nav.push(<StringValueEdit \r\n                    title=\"修改描述\"\r\n                    value={role.discription}\r\n                    onChanged={this.onDiscriptionChanged} \r\n                    info=\"对角色做一个说明\" />)\r\n            },\r\n        ];\r\n        return <Page header=\"修改角色信息\">\r\n            <PropGrid rows={rows} values={role} alignValue=\"right\" />\r\n        </Page>;\r\n    }\r\n}\r\n\r\n@observer\r\nclass RoleApps extends React.Component {\r\n    private list:List;\r\n    constructor(props) {\r\n        super(props);\r\n        this.submit = this.submit.bind(this);\r\n    }\r\n    async componentDidMount() {\r\n        await store.loadApps();\r\n        await store.loadRoleApps();\r\n    }\r\n    private renderApp(app:UnitApp, index:number) {\r\n        return <LMR className=\"py-1 px-2 align-items-center\"\r\n                left={app.name}\r\n                right={<small className=\"text-muted\">{app.discription}</small>} />\r\n    }\r\n    private appSelect(app:UnitApp, isSelected: boolean, anySelected: boolean) {\r\n\r\n    }\r\n    private async submit() {\r\n        await store.setRoleApps(this.list.selectedItems);\r\n        nav.pop();\r\n    }\r\n    render() {\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.submit}>保存</button>;\r\n        let apps = store.apps;\r\n        let roleApps = store.roleApps;\r\n        return <Page header=\"选择APP\" right={right}>\r\n            <List \r\n                ref={list=>this.list=list}\r\n                items={apps}\r\n                selectedItems={roleApps}\r\n                item={{render: this.renderApp, onSelect: this.appSelect}} />\r\n        </Page>;\r\n    }\r\n}","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {List, LMR, FA, Muted} from 'tonva-react-form';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {Role} from '../model';\r\nimport {store} from '../store';\r\nimport {NewRole} from './newRole';\r\nimport {RolePage} from './rolePage';\r\nimport {MembersPage} from './membersPage';\r\n\r\nconst midClassName = classNames('d-flex', 'h-100', 'align-items-center', 'px-5', 'small', 'text-muted');\r\n\r\n@observer\r\nexport class Members extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadRoles();\r\n    }\r\n    private renderRole = (role:Role, index:number) => {\r\n        let {name, discription, count} = role;\r\n        return <LMR\r\n            className=\"px-3 py-2\" \r\n            left={name}\r\n            right={String(count || '')}>\r\n            <div className={midClassName}>\r\n                {discription}\r\n            </div>\r\n        </LMR>;\r\n    }\r\n    private roleClick = (role:Role) => {\r\n        store.setRole(role);\r\n        nav.push(<RolePage />)\r\n    }\r\n    private newRole = (evt: React.MouseEvent<HTMLAnchorElement>) => {\r\n        evt.preventDefault();\r\n        nav.push(<NewRole />);\r\n    }\r\n    private allUsersClick = () => {\r\n        store.setRole(undefined);\r\n        nav.push(<MembersPage />);\r\n    }\r\n    render() {\r\n        let right = <a className=\"small\" href='#' onClick={this.newRole}>新增</a>;\r\n        let header = <LMR className=\"px-3 small bg-light\" left=\"角色\" right={right} />;\r\n        return <Page header=\"用户角色\">\r\n            <LMR\r\n                className=\"my-3 px-3 py-2 bg-white\" \r\n                left={'用户'}\r\n                right={String(store.memberCount)}\r\n                onClick={this.allUsersClick}>\r\n                <div className={midClassName}>\r\n                    设置用户角色\r\n                </div>\r\n            </LMR>\r\n            <List\r\n                header={header}\r\n                items={store.roles}\r\n                none=\"[无]\"\r\n                item={{render:this.renderRole, onClick:this.roleClick}} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Muted } from 'tonva-react-form';\r\nimport { left0 } from 'tonva-tools';\r\nimport { VMapMain, MapUI, Field, CMap }  from 'tonva-react-uq'; \r\n\r\nclass CMapTeamPerson extends CMap {\r\n    async searchOnKey(keyField:Field, param):Promise<number> {\r\n        switch (keyField.name) {\r\n            default: return await super.searchOnKey(keyField, param);\r\n            case 'post': return await this.searchOnPost(param);                \r\n        }\r\n    }\r\n\r\n    private async searchOnPost(param: any):Promise<number> {\r\n        let querySelect = this.cQuerySelect('teamPosts');\r\n        let val = await querySelect.call(param);\r\n        return val['post'].id;\r\n    }\r\n}\r\n\r\nclass VMapTeamPerson extends VMapMain {\r\n}\r\n\r\nconst ui:MapUI = {\r\n    CMap: CMapTeamPerson,\r\n    keys: [\r\n        {\r\n            content: ({name, id}:any, x:any) => <><Muted>{x.team} &nbsp; </Muted> {name}</>,\r\n            none: (x:any)=>x.noStaff,\r\n        },\r\n        {\r\n            content: ({name, id}:any, x:any) => <><Muted>{x.staff} &nbsp; </Muted> {name} &nbsp; <Muted>{x.no} {left0(id, 4)}</Muted></>,\r\n            none: (x:any)=>x.noPost,\r\n        },\r\n        {\r\n            content: ({title, id}:any, x:any) => <><Muted>{x.post} &nbsp; </Muted> {title}</>,\r\n            none: undefined,\r\n        },\r\n    ]\r\n}\r\n\r\nexport default ui;\r\n","import { UqUI } from 'tonva-react-uq';\r\nimport map from './map';\r\nimport tuid from './tuid';\r\nimport query from './query';\r\nimport res from './res';\r\n\r\nconst uqUI:UqUI = {\r\n    map: map,\r\n    tuid: tuid,\r\n    query: query,\r\n    res: res,\r\n}\r\n\r\nexport default uqUI;\r\n","import teamPerson from './teamPerson';\r\n\r\nexport default {\r\n    teamPerson: teamPerson,\r\n};\r\n","import user from './user';\r\nimport organization from './organization';\r\n\r\nexport default {\r\n    user: user,\r\n    organization: organization,\r\n};\r\n","import * as React from 'react';\r\nimport { TuidUI, CTuidSelect, CQuery, QueryPageItems } from \"tonva-react-uq\";\r\nimport { PageItems } from \"tonva-tools\";\r\n\r\nclass CUserSelect extends CTuidSelect {\r\n    protected buildPageItems():PageItems<any> {\r\n        let query:CQuery = this.cUq.cFromName('query', 'SearchUser') as CQuery;\r\n        return new QueryPageItems(query.entity);\r\n    }\r\n    idFromItem(item:any) {return item.id;}\r\n\r\n    async searchMain(key:string) {\r\n        if (this.PageItems === undefined) {\r\n            this.PageItems = this.buildPageItems();\r\n        }\r\n        if (key !== undefined) await this.PageItems.first({key: key});\r\n    }\r\n}\r\n\r\nconst ui:TuidUI = {\r\n    CTuidSelect: CUserSelect,\r\n    content: (item:any) => {return <>{item.name}</>},\r\n}\r\n\r\nexport default ui;\r\n","import * as React from 'react';\r\nimport { TuidUI } from \"tonva-react-uq\";\r\n\r\nconst ui:TuidUI = {\r\n    divs: {\r\n        post: {\r\n            content: (item:any) => {\r\n                let {title} = item;\r\n                return <>{title}</>;\r\n            },\r\n            rowContent: (item:any) => {\r\n                let {title} = item;\r\n                return <>{title}</>;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default ui;\r\n","import teamPosts from './teamPosts';\r\n\r\nexport default {\r\n    teamPosts: teamPosts,\r\n};\r\n","import * as React from 'react';\r\nimport { QueryUI } from \"tonva-react-uq\";\r\nimport { observer } from 'mobx-react';\r\n\r\nconst ui:QueryUI = {\r\n    row: observer((item:any) => {\r\n        let {post} = item;\r\n        return <div className=\"px-3 py-2\">{post.content()}</div>;\r\n    }),\r\n};\r\n\r\nexport default ui;\r\n","import CN from './zh/CN';\r\n\r\nconst res = {\r\n    zh: {\r\n        CN: CN\r\n    }\r\n};\r\n\r\nexport default res;\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\n\r\nexport default {\r\n    x: {\r\n        no: '编号',\r\n        team: '部门',\r\n        staff: '员工',\r\n        noStaff: '无员工',\r\n        post: '职位',\r\n        noPost: '无职位',\r\n        a: 'aaa',\r\n        b: {\r\n            s: 'sss',\r\n            d: ()=><span className=\"text-success\">ddd</span>,\r\n        },\r\n        c: ()=><span className=\"text-danger\">ccc</span>,\r\n    },\r\n    uq: '$UNITX',\r\n    tuid: '基础档案',\r\n    map: '对照表',\r\n    sheet: '单据',\r\n    pending: '待处理',\r\n    book: '帐',\r\n    action: '操作',\r\n    tuidNullCaption: '选择',\r\n    submit: '提交',\r\n    arrNew: '新增',\r\n    arrEdit: '保存',\r\n    entity: {\r\n        message: {\r\n            label: '消息-message',\r\n            arrNew: '新增消息',\r\n            arrEdit: '保存消息',\r\n            fields: {\r\n                fromUser: '发送人',\r\n                fromUnit: '发送部门',\r\n                type: '类型',\r\n                date: '日期',\r\n                subject: '主题',\r\n                discription: '描述',\r\n                content: '内容'\r\n            },\r\n        },\r\n        getMessage: {\r\n            label: '获取Message',\r\n            submit: '获取消息',\r\n            fields: {\r\n                msg: '消息'\r\n            }\r\n        },\r\n        newMessage: {\r\n            label: '新建消息',\r\n            fields: {\r\n                type: '类型',\r\n                subject: '主题',\r\n            },\r\n            arrs: {\r\n                to: {\r\n                    label: '发送',\r\n                    newSubmit: '新增to',\r\n                    editSumbit: '保存to',\r\n                },\r\n                cc: {\r\n                    label: '抄送',\r\n                    newSubmit: '新增cc',\r\n                    editSumbit: '保存cc',\r\n                }\r\n            }\r\n        },\r\n        sectionTeam: {\r\n            label: '大部-团队对照表',\r\n        },\r\n        teamPerson: {\r\n            label: '员工-岗位对照表',\r\n            fields: {\r\n            },\r\n            confirmDelete: _.template('真的要删除${label}吗'),\r\n        },\r\n        teamOrganization: {\r\n            label: '团队-机构对照表',\r\n        },\r\n        teamPosts: {\r\n            label: '团队-岗位对照表',\r\n        },\r\n        person: {\r\n            label: '员工',\r\n            fields: {\r\n                name: '姓名',\r\n                nick: '别名',\r\n                given: '名字',\r\n                sur: '姓',\r\n                gender: '性别',\r\n                user: '用户',\r\n            }\r\n        },\r\n        organization: {\r\n            label: '机构',\r\n            arrs: {\r\n                post: {\r\n                    label: '岗位',\r\n                }\r\n            }\r\n        },\r\n        user: {\r\n            label: '用户'\r\n        },\r\n        team: {\r\n            label: '团队',\r\n        },\r\n        section: {\r\n            label: '大部',\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { IObservableValue, observable } from 'mobx';\r\nimport { Page, VPage } from 'tonva-tools';\r\nimport { Muted, LMR, FA, List } from 'tonva-react-form';\r\nimport { COpBinding } from './cOpBinding';\r\nimport { StateTo, Sheet, Organization, Post, Team, Section, To, Entity } from './model';\r\n\r\ninterface SelectablePost {\r\n    post: Post;\r\n    selected: IObservableValue<boolean>;\r\n    teams?: SelectableTeam[];\r\n}\r\n\r\ninterface SelectableTeam {\r\n    team: Team;\r\n    selected: IObservableValue<boolean>;\r\n    sections?: SelectableSection[];\r\n}\r\n\r\ninterface SelectableSection {\r\n    section: Section;\r\n    selected: IObservableValue<boolean>;\r\n}\r\n\r\nexport class VOpBinding extends VPage<COpBinding> {\r\n    private sheet: Sheet;\r\n    private states: StateTo[];\r\n    private selectablePosts:SelectablePost[];\r\n    private sheetOpsChanged:boolean = false;\r\n\r\n    private stateClick(state:StateTo) {\r\n        let {organizations, teams, sections, posts} = this.controller;\r\n        let postTos:{[post:number]:To[]} = {};\r\n        let {tos} = state;\r\n        if (tos !== undefined) {\r\n            for (let to of tos) {\r\n                let {post} = to;\r\n                let pid = post.id;\r\n                let pto = postTos[pid];\r\n                if (pto === undefined) postTos[pid] = pto = [];\r\n                pto.push(to);\r\n            }\r\n        }\r\n        this.selectablePosts = posts.map(v => this.buildSelectablePost(v, postTos));\r\n        /*\r\n            return {\r\n                post: v,\r\n                selected: observable.box(false),\r\n                teams: [],\r\n            }\r\n        });*/\r\n        this.sheetOpsChanged = false;\r\n        this.openPage(this.stateView, state);\r\n        this.regConfirmClose(async ():Promise<boolean> => {\r\n            if (this.sheetOpsChanged === false) return true;\r\n            return confirm('未保存\\n真的不保存吗？');\r\n        });\r\n    }\r\n\r\n    private buildSelectablePost(post:Post, postTos:{[post:number]:To[]}):SelectablePost {\r\n        let pto = postTos[post.id];\r\n        let selected:boolean;\r\n        let teams:SelectableTeam[];\r\n        if (pto === undefined) {\r\n            selected = false;\r\n            teams = [];\r\n        }\r\n        else {\r\n            selected = true;\r\n            teams = this.buildSelectableTeams(post, pto);\r\n        }\r\n        let ret = {\r\n            post: post,\r\n            selected: observable.box(selected),\r\n            teams: teams,\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private buildSelectableTeams(post:Post, tos: To[]):SelectableTeam[] {\r\n        let teamTos:{[team:number]:To[]} = {};\r\n        let hasAllTeams = false;\r\n        for (let to of tos) {\r\n            let {team} = to;\r\n            let teamId;\r\n            if (team === undefined) {\r\n                teamId = 0;\r\n                hasAllTeams = true;\r\n            }\r\n            else {\r\n                teamId = team.id;\r\n            }\r\n            let tto = teamTos[teamId];\r\n            if (tto === undefined) teamTos[teamId] = tto = [];\r\n            tto.push(to);\r\n        }\r\n        let sections:Section[] = [];\r\n        let {organization} = post;\r\n        if (organization !== undefined && organization.teams !== undefined) {\r\n            for (let team of post.organization.teams) {\r\n                if (team.sections !== undefined) sections.push(...team.sections);\r\n            }\r\n        }\r\n        let teams:SelectableTeam[] = [];\r\n        let teamTo0 = teamTos[0];\r\n        let teamTo0Sections = this.buildSelectableSections(sections, teamTo0);\r\n        teams.push({\r\n            team: {\r\n                id: 0,\r\n                name: '* 所有部门',\r\n                no: undefined,\r\n                sections: sections,\r\n                organizations: undefined,\r\n            }, \r\n            selected: observable.box(teamTo0!==undefined), \r\n            sections: teamTo0Sections,\r\n        });\r\n        if (organization !== undefined && organization.teams !== undefined) {\r\n            post.organization.teams.forEach(v => {\r\n                let teamTo = teamTos[v.id];\r\n                teams.push({\r\n                    team: v,\r\n                    selected: observable.box(teamTo!==undefined),\r\n                    sections: this.buildSelectableSections(sections, teamTo),\r\n                });\r\n            });\r\n        }\r\n        if (hasAllTeams === true && tos.length === 1) {\r\n            let selectableTeam0 = teams[0];\r\n            let hasSection = false;\r\n            for (let selectableSection of selectableTeam0.sections) {\r\n                if (selectableSection.selected.get() === true) {\r\n                    hasSection = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (hasSection === false) {\r\n                selectableTeam0.selected.set(false);\r\n                selectableTeam0.sections = [];\r\n            }\r\n        }\r\n        return teams;\r\n    }\r\n\r\n    private buildSelectableSections(sections:Section[], tos: To[]):SelectableSection[] {\r\n        let selectableSections:SelectableSection[] = [];\r\n        for (let section of sections) {\r\n            selectableSections.push({\r\n                section: section,\r\n                selected: observable.box(tos && tos.find(v => v.section && section.id === v.section.id) !== undefined),\r\n            });\r\n        }\r\n        return selectableSections;\r\n    }\r\n\r\n    private renderState(stateTo:StateTo) {\r\n        let {name, caption, tos, tosText, configable} = stateTo;\r\n        let content;\r\n        if (configable === true) {\r\n            let right = <FA className=\"text-muted align-self-center\" name=\"chevron-right\" />;\r\n            let onClick = () => this.stateClick(stateTo);\r\n            let tosView = <this.stateTosView tosText={tosText} />;\r\n            content = <>\r\n                <LMR className=\"bg-white py-1 px-2 cursor-pointer\" right={right} onClick={onClick}>\r\n                    {caption}\r\n                </LMR>\r\n                {tosView}\r\n            </>\r\n        }\r\n        else {\r\n            content = <div className=\"bg-white py-1 px-2\">\r\n                {caption}\r\n            </div>;\r\n        }\r\n        return <div key={name} className=\"border border-light rounded mx-1 my-3\">\r\n            {content}\r\n        </div>\r\n    }\r\n\r\n    private stateTosView = observer(({tosText}:{tosText: IObservableValue<string[]>}) => {\r\n        let tos = tosText.get();\r\n        return <div className=\"bg-light py-1 px-2\">{\r\n            tos === undefined || tos.length === 0? <Muted>[无岗位]</Muted> :\r\n            tos.map((v,index) => {\r\n                return <span\r\n                    key={v}\r\n                    className=\"d-inline-block border bg-white rounded mr-2 my-1 py-1 px-2\">\r\n                    {v}\r\n                </span>\r\n            })\r\n        }\r\n        </div>\r\n    });\r\n\r\n    private tosTexts(tos: To[]):string[] {\r\n        return tos && tos.map((v,index) => {\r\n            let {post, team, section} = v;\r\n            let content:string = post.title;\r\n            if (team !== undefined && team.id > 0) content += ' @ ' + team.name;\r\n            if (section !== undefined) {\r\n                if (team === undefined || team.id === 0) content += ' @ * ';\r\n                content += ' / ' + section.name;\r\n            }\r\n            return content;\r\n        });\r\n    }\r\n\r\n    async open({entity, opTos}:{entity:Entity, opTos:{[op:string]:To[]}}) {\r\n        this.sheet = entity;\r\n        let {name, states} = entity;\r\n        if (states === undefined) {\r\n            let tos = opTos['$'];\r\n            this.states = [{\r\n                name: '$',\r\n                caption: '允许岗位',\r\n                configable: true,\r\n                tos: tos,\r\n                tosText: observable.box<string[]>(this.tosTexts(tos)),\r\n            }];\r\n            this.openPageElement(<Page header={name + ' - 岗位'}>\r\n                {this.states.map(v => this.renderState(v))}\r\n            </Page>);\r\n            return;\r\n        }\r\n\r\n        this.states = states.map(v => {\r\n            let prefix = v.substr(0, 1);\r\n            let caption: string | JSX.Element;\r\n            let configable: boolean;\r\n            let tos;\r\n            switch (prefix) {\r\n                case '<': caption = <>{v.substr(1)} &nbsp; <Muted>回复</Muted></>; configable = false; break;\r\n                case '#': caption = <>{v.substr(1)} &nbsp; <Muted>返初</Muted></>; configable = false; break;\r\n                case '$': \r\n                    caption = '[新开单]'; \r\n                    configable = true; \r\n                    tos = opTos[v];\r\n                    break;\r\n                default:\r\n                    caption = v;\r\n                    configable = true; \r\n                    tos = opTos[v];\r\n                    break;\r\n            }\r\n            return {\r\n                name: v,\r\n                caption: caption,\r\n                configable: configable,\r\n                tos: tos,\r\n                tosText: observable.box<string[]>(this.tosTexts(tos)),\r\n            };\r\n        });\r\n        this.openPageElement(<Page header={'单据状态对应岗位 - ' + name} >\r\n            {this.states.map(v => this.renderState(v))}\r\n        </Page>);\r\n    }\r\n\r\n    private async saveOps(stateTo: StateTo) {\r\n        let stateToName = stateTo.name;\r\n        let tos:To[] = [];\r\n        let toArr:{post:number, team:number, section:number}[] = [];\r\n        for (let sp of this.selectablePosts) {\r\n            if (sp.selected.get() === false) continue;\r\n            let postId = sp.post.id;\r\n            let teamCount = 0;\r\n            for (let st of sp.teams) {\r\n                if (st.selected.get() === false) continue;\r\n                let teamId = st.team.id;\r\n                ++teamCount;\r\n                let sectionCount = 0;\r\n                for (let ss of st.sections) {\r\n                    if (ss.selected.get() === false) continue;\r\n                    let sectionId = ss.section.id;\r\n                    ++sectionCount;\r\n                    toArr.push({\r\n                        post: postId,\r\n                        team: teamId,\r\n                        section: sectionId,\r\n                    });\r\n                    tos.push({\r\n                        post: sp.post,\r\n                        team: st.team,\r\n                        section: ss.section,\r\n                    });\r\n                }\r\n                if (sectionCount === 0) {\r\n                    toArr.push({\r\n                        post: postId,\r\n                        team: teamId,\r\n                        section: 0,\r\n                    });\r\n                    tos.push({\r\n                        post: sp.post,\r\n                        team: st.team,\r\n                        section: undefined,\r\n                    });\r\n                }\r\n            }\r\n            if (teamCount === 0) {\r\n                toArr.push({\r\n                    post: postId,\r\n                    team: 0,\r\n                    section: 0,\r\n                });\r\n                tos.push({\r\n                    post: sp.post,\r\n                    team: undefined,\r\n                    section: undefined,\r\n                });\r\n            }\r\n        }\r\n        await this.controller.saveSheetStatePosts(this.sheet, stateToName, toArr);\r\n        let state = this.states.find(v => v.name === stateToName);\r\n        state.tos = tos;\r\n        let tosTexts = this.tosTexts(tos);\r\n        state.tosText.set(tosTexts);\r\n        this.closePage();\r\n    }\r\n\r\n    private organizationRow = (item: Organization, index:number) => {\r\n        let {id, name} = item;\r\n        return <div>id:{id} name:{name}</div>;\r\n    }\r\n    private teamRow = (item: SelectableTeam, index:number) => {\r\n        return <this.observableTeamRow {...item} />;\r\n    }\r\n    private sectionRow = (item: SelectableSection, index:number) => {\r\n        return <this.observableSectionRow {...item} />;\r\n    }\r\n    private postRow = (item:SelectablePost, index:number) => {\r\n        return <this.observablePostRow {...item} />;\r\n    };\r\n    private stateView: React.SFC<StateTo> = (state:StateTo) => {\r\n        let {caption} = state;\r\n        /*\r\n        switch (state.name) {\r\n            case '-':  stateCaption = '允许岗位'; break;\r\n            case '$':  stateCaption = '[新开单]'; break;\r\n            default: stateCaption = state.name; break;\r\n        }\r\n        */\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={async ()=>await this.saveOps(state)}>保存</button>\r\n        return <Page header={`${this.sheet.name} - ${caption}`}\r\n            back=\"close\"\r\n            right={right}>\r\n            <div className=\"mx-3 my-2\">\r\n                <Muted>设置单据状态跟岗位的对应关系</Muted>\r\n            </div>\r\n            <List className=\"my-2\" \r\n                items={this.selectablePosts} \r\n                item={{render: this.postRow}} />\r\n        </Page>\r\n    }\r\n    /*\r\n    <List className=\"my-2\" header=\"Organization\" items={organizations} item={{render: this.organizationRow}} />\r\n    <List className=\"my-2\" header=\"Team\" items={teams} item={{render: this.teamRow}} />\r\n    <List className=\"my-2\" header=\"Section\" items={sections} item={{render: this.sectionRow}} />\r\n    */\r\n\r\n    private onPostSelectChanged(item:SelectablePost, checked:boolean) {\r\n        this.sheetOpsChanged = true;\r\n        let {post, selected} = item;\r\n        if (checked === true) {\r\n            let sections:Section[] = [];\r\n            let {organization} = post;\r\n            if (organization !== undefined && organization.teams !== undefined) {\r\n                for (let team of post.organization.teams) {\r\n                    if (team.sections !== undefined) sections.push(...team.sections);\r\n                }\r\n            }\r\n            item.teams.push({\r\n                team: {\r\n                    id: 0,\r\n                    name: '* 所有部门',\r\n                    no: undefined,\r\n                    sections: sections,\r\n                    organizations: undefined,\r\n                }, \r\n                selected: observable.box(false), \r\n                sections:[]\r\n            });\r\n            if (organization !== undefined && organization.teams !== undefined) {\r\n                post.organization.teams.forEach(v => {\r\n                    item.teams.push({\r\n                        team: v,\r\n                        selected: observable.box(false),\r\n                        sections: []\r\n                    });\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            item.teams.splice(0);\r\n        }\r\n        selected.set(checked);\r\n    }\r\n\r\n    private onTeamSelectChanged(item:SelectableTeam, checked:boolean) {\r\n        this.sheetOpsChanged = true;\r\n        let {team, selected} = item;\r\n        if (checked === true) {\r\n            //item.sections.push({section: undefined, selected: observable.box(false)});\r\n            team.sections.forEach(v => {\r\n                item.sections.push({\r\n                    section: v,\r\n                    selected: observable.box(false)\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            item.sections.splice(0);\r\n        }\r\n        selected.set(checked);\r\n    }\r\n\r\n    private onSectionSelectChanged(item:SelectableSection, checked:boolean) {\r\n        this.sheetOpsChanged = true;\r\n        let {section, selected} = item;\r\n        selected.set(checked);\r\n    }\r\n\r\n    private observablePostRow = observer((item:SelectablePost) => {\r\n        let {post, selected, teams} = item;\r\n        let {title} = post;\r\n        let teamsList;\r\n        let defaultSelected = selected.get();\r\n        if (defaultSelected === true) {\r\n            teamsList = <List className=\"ml-4 va-list-top-border\" items={teams} item={{render:this.teamRow}} />\r\n        }\r\n        return <div className=\"flex-column\">\r\n            <label className=\"px-3 py-2 w-100 mb-0\">\r\n                <input className=\"mr-3 align-middle\"\r\n                    type=\"checkbox\" \r\n                    defaultChecked={defaultSelected}\r\n                    onChange={(evt)=>this.onPostSelectChanged(item, evt.target.checked)} />\r\n                <Muted>岗位</Muted> &nbsp; {title}\r\n            </label>\r\n            {teamsList}\r\n        </div>;\r\n    });\r\n\r\n    private observableTeamRow = observer((item:SelectableTeam) => {\r\n        let {team, selected, sections} = item;\r\n        let {name} = team;\r\n        let teamsList;\r\n        let defaultSelected = selected.get();\r\n        if (defaultSelected === true && sections.length > 0) {\r\n            teamsList = <List className=\"ml-4 va-list-top-border\" items={sections} item={{render:this.sectionRow}} />\r\n        }\r\n        return <div className=\"flex-column\">\r\n            <label className=\"px-3 py-2 w-100 mb-0\">\r\n                <input className=\"mr-3 align-middle\"\r\n                    type=\"checkbox\" \r\n                    defaultChecked={defaultSelected}\r\n                    onChange={(evt)=>this.onTeamSelectChanged(item, evt.target.checked)} />\r\n                <Muted>部门</Muted> &nbsp; {name}\r\n            </label>\r\n            {teamsList}\r\n        </div>;\r\n    });\r\n\r\n    private observableSectionRow = observer((item:SelectableSection) => {\r\n        let {section, selected} = item;\r\n        let {name} = section;\r\n        let defaultSelected = selected.get();\r\n        return <div className=\"flex-column\">\r\n            <label className=\"px-3 py-2 w-100 mb-0\">\r\n                <input className=\"mr-3 align-middle\"\r\n                    type=\"checkbox\" \r\n                    defaultChecked={defaultSelected}\r\n                    onChange={(evt)=>this.onSectionSelectChanged(item, evt.target.checked)} />\r\n                <Muted>大部</Muted> &nbsp; {name}\r\n            </label>\r\n        </div>;\r\n    });\r\n}\r\n ","import * as React from 'react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { COpBinding } from \"./cOpBinding\";\r\nimport { Entity, EntityBlock, Uq } from './model';\r\nimport { entityIcons, CAction, CQuery } from 'tonva-react-uq';\r\nimport { List, Muted, LMR, FA } from 'tonva-react-form';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\n\r\ninterface Checked {\r\n    def: boolean;\r\n    checked: boolean;\r\n}\r\n\r\nexport class VAllPosts extends VPage<COpBinding> {\r\n    private uq: Uq;\r\n    private blocks:EntityBlock[];\r\n    private checked:{[entity:string]:Checked} = {};\r\n\r\n    @observable private isChanged:boolean = false;\r\n    async open(uq: Uq) {\r\n        this.uq = uq;\r\n        let {name, tuids, actions, maps, books, queries, histories, pendings, sheets} = this.uq;\r\n        this.blocks = [\r\n            {items: tuids, type: 'tuid'},\r\n            {items: sheets, type: 'sheet'},\r\n            {items: actions, type: 'action'},\r\n            {items: maps, type: 'map'},\r\n            {items: books, type: 'book'},\r\n            {items: queries, type: 'query'},\r\n            {items: histories, type: 'history'},\r\n            {items: pendings, type: 'pending'},\r\n        ];\r\n        let getEntityOpForAll = this.controller.cUq.cFromName('query', 'getEntityOpForAll') as CQuery;\r\n        let entityOpForAllResult = await getEntityOpForAll.entity.query({uq: this.uq.id});\r\n        let entityOpForAll:{[entity:string]:boolean} = {};\r\n        for (let eaa of entityOpForAllResult.ret) {\r\n            entityOpForAll[eaa.entity] = true;\r\n        }\r\n        for (let b of this.blocks) {\r\n            let {items} = b;\r\n            if (items === undefined) continue;\r\n            for (let item of items) {\r\n                let {name} = item;\r\n                let checked = (entityOpForAll[name] === true);\r\n                this.checked[name] = {\r\n                    def: checked,\r\n                    checked: checked,\r\n                };\r\n            }\r\n        }\r\n        this.openPage(this.pageRender);\r\n        this.regConfirmClose(async ():Promise<boolean> => {\r\n            if (this.isChanged === false) return true;\r\n            return confirm('未保存\\n真的不保存吗？');\r\n        });\r\n    }\r\n\r\n    private onCheckChanged = (entity:Entity, checked: boolean) => {\r\n        this.checked[entity.name].checked = checked;\r\n        let isChanged:boolean = false;\r\n        for (let i in this.checked) {\r\n            let {def, checked} = this.checked[i];\r\n            if (def !== checked) {\r\n                isChanged = true;\r\n                break;\r\n            }\r\n        }\r\n        this.isChanged = isChanged;\r\n    }\r\n\r\n    private saveChange = async () => {\r\n        let entities:{entity:string}[] = [];\r\n        for (let i in this.checked) {\r\n            if (this.checked[i].checked !== true) continue;\r\n            entities.push({entity: i});\r\n        }\r\n        let saveEntityOpForAll = this.controller.cUq.cFromName('action', 'saveEntityOpForAll') as CAction;\r\n        let ret = await saveEntityOpForAll.entity.submit({\r\n            uq: this.uq.id,\r\n            entities: entities,\r\n        });\r\n        this.ceasePage();\r\n        this.openPageElement(<Page header=\"所有岗位可操作\" back=\"close\">\r\n            <div className=\"p-3\">\r\n                <FA name=\"check-circle\" className=\"text-success\" /> &nbsp;\r\n                已保存\r\n            </div>\r\n        </Page>);\r\n    }\r\n\r\n    private entityRender(entity:Entity, icon:any) {\r\n        let {name} = entity;\r\n        let right = <input className=\"mr-3 align-middle\"\r\n            type=\"checkbox\" \r\n            defaultChecked={this.checked[name].def}\r\n            onChange={(evt)=>this.onCheckChanged(entity, evt.target.checked)}/>\r\n\r\n        return <LMR className=\"px-3 py-2 align-items-center\"\r\n            right={right}>\r\n            {icon} &nbsp; {name}\r\n        </LMR>;\r\n    }\r\n\r\n    private pageRender = observer(() => {\r\n        /*\r\n        let {name, tuids, actions, maps, books, queries, histories, pendings, sheets} = this.uq;\r\n        let blocks:EntityBlock[] = [\r\n            {items: tuids, type: 'tuid'},\r\n            {items: sheets, type: 'sheet'},\r\n            {items: actions, type: 'action'},\r\n            {items: maps, type: 'map'},\r\n            {items: books, type: 'book'},\r\n            {items: queries, type: 'query'},\r\n            {items: histories, type: 'history'},\r\n            {items: pendings, type: 'pending'},\r\n        ];*/\r\n        let buttonSave = this.isChanged===true? <button className=\"btn btn-sm btn-success\" onClick={this.saveChange}>保存</button> : null;\r\n        return <Page header={'所有岗位可操作'} right={buttonSave}>\r\n            <div className=\"text-muted p-3 small\">\r\n                <div style={{lineHeight:'1.8', fontWeight:'bold'}}>说明</div>\r\n                <ol className=\"pl-3\" style={{listStyleType: '1', lineHeight: '1.8'}}>\r\n                    <li >\r\n                        有些操作，默认允许所有用户可操作，可以在这里设置。\r\n                    </li>\r\n                    <li>\r\n                        比如，用户下订单。任何客户，登录进系统，都可以下单。\r\n                    </li>\r\n                    <li>\r\n                        如果每个用户都需要设置，用户会丢失，管理人员会繁琐。\r\n                    </li>\r\n                </ol>\r\n            </div>\r\n            {this.blocks.map(block => {\r\n                let {items, type} = block;\r\n                let icon = entityIcons[type];\r\n                return items && items.length>0 &&\r\n                    <List key={type}\r\n                        className=\"mt-3\"\r\n                        header={<Muted className=\"px-3 pt-1 bg-light w-100\">{this.res[type]||type}</Muted>} \r\n                        items={items} \r\n                        item={{\r\n                            render:(item:any, index:number)=>this.entityRender(item, icon), \r\n                            onClick: undefined\r\n                        }} />;\r\n            })}\r\n        </Page>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, nav } from \"tonva-tools\";\r\nimport { COpBinding } from \"./cOpBinding\";\r\nimport { Uq } from './model';\r\nimport { List, FA, SearchBox } from 'tonva-react-form';\r\nimport { observable } from 'mobx';\r\nimport { CMap, CQuery, QueryPageItems, Query, Tuid, CTuid } from 'tonva-react-uq';\r\n\r\nexport class PageUsers extends QueryPageItems {\r\n    protected setPageStart(item:any) {\r\n        this.pageStart = item === undefined? 0 : item.id;\r\n    }\r\n}\r\n\r\nexport class VFullFunction extends VPage<COpBinding> {\r\n    private uq: Uq;\r\n    @observable private users: any[] = [];\r\n    private entityOpUserFully:CMap;\r\n    private pageUsers: PageUsers;\r\n    private tuidUser: CTuid<Tuid>;\r\n    async open(uq: Uq) {\r\n        this.uq = uq;\r\n        this.entityOpUserFully = this.controller.cUq.cFromName('map', 'entityOpUserFully') as CMap;\r\n        this.tuidUser = this.controller.cUq.cFromName('tuid', 'user') as CTuid<Tuid>;\r\n        await this.entityOpUserFully.entity.loadSchema();\r\n        let all = await this.entityOpUserFully.entity.queries.all.query({_uq: this.uq.id});\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={this.addClick}><FA name=\"plus\" /></button>;\r\n        this.users.push(...all.ret);\r\n        this.openPageElement(<Page header={'全功能用户'} right={right}>\r\n            <List items={this.users} item={{render:this.renderUser, onClick: this.onStopFully}} />\r\n        </Page>);\r\n        return;\r\n    }\r\n\r\n    private onStopFully = async (item:any) => {\r\n        this.openPageElement(<Page header={'停止全功能'}>\r\n            <div className=\"p-3\">\r\n                <div><b className=\"text-danger h4\">{item.user.content()}</b> 停止全功能用户。<br/>请确认。</div>\r\n                <div className=\"p-3\">\r\n                    <button className=\"btn btn-success\" onClick={()=>this.onSumitStopFully(item)}>停止全功能</button>\r\n                    <button className=\"ml-3 btn btn-outline-danger\" onClick={this.onCancelStop}>不停</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n    }\r\n\r\n    private onSumitStopFully = async (item:any) => {\r\n        let data = {_uq: this.uq.id, arr1:[{_user: item.user.id}]};\r\n        await this.entityOpUserFully.entity.actions.del.submit(data);\r\n        let index = this.users.findIndex(v => v === item);\r\n        if (index >= 0) this.users.splice(index, 1);\r\n        this.closePage();\r\n    }\r\n\r\n    private onCancelStop = () => this.closePage();\r\n\r\n    private addClick = async () => {\r\n        let user = await this.controller.callSearchUser(this.uq);\r\n        this.onUserSelected(user);\r\n        /*\r\n        let searchUser = this.controller.cUq.cFromName('query', 'SearchUser') as CQuery;\r\n        this.pageUsers = new PageUsers(searchUser.entity);\r\n        this.openPage(this.usersView);\r\n        */\r\n    }\r\n\r\n    private renderUser = (item:any, index:number) => {\r\n        return <div className=\"px-3 py-2\">{item.user.content()}</div>;\r\n    }\r\n\r\n    private onSearch = async (key:string) => {\r\n        await this.pageUsers.first({key: key});\r\n    }\r\n    private onSetFully = async (item:any) => {\r\n        await this.entityOpUserFully.entity.actions.add.submit({_uq: this.uq.id, arr1:[{_user: item.id}]});\r\n        this.tuidUser.entity.useId(item.id);\r\n        let row = {\r\n            uq: this.uq.id,\r\n            user: this.tuidUser.entity.boxId(item.id),\r\n        }\r\n        this.users.push(row);\r\n        this.closePage(2);\r\n    }\r\n    private onCancelFully = () => {this.backPage()}\r\n    private onUserSelected = (item:any) => {\r\n        this.openPageElement(<Page header=\"确认\">\r\n            <div className=\"p-3\">\r\n                <div><b className=\"text-danger h4\">{item.name}</b> 将设置为全功能用户。只有系统管理员或者测试人员才需要全功能，可以操作所有数据。<br/>请确认。</div>\r\n                <div className=\"p-3\">\r\n                    <button className=\"btn btn-success\" onClick={()=>this.onSetFully(item)}>设置为全功能用户</button>\r\n                    <button className=\"ml-3 btn btn-outline-danger\" onClick={this.onCancelFully}>取消</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n    }\r\n    private renderSelectUser = (item:any, index:number) => {\r\n        return <div className=\"px-3 py-2\">{JSON.stringify(item)}</div>;\r\n    }\r\n    private usersView = () => {\r\n        let search = <SearchBox className=\"w-100\" onSearch={this.onSearch} placeholder=\"选择用户\" />;\r\n        return <Page header={search}>            \r\n            <List\r\n                before=\"搜索用户名\"\r\n                items={this.pageUsers} \r\n                item={{render: this.renderSelectUser, onClick:this.onUserSelected}} />\r\n        </Page>;\r\n    };\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { VPage, Page, PageItems } from \"tonva-tools\";\r\nimport { SearchBox, List } from 'tonva-react-form';\r\nimport { centerApi } from 'tonva-react-uq';\r\nimport { COpBinding } from \"./cOpBinding\";\r\n\r\nexport class VSearchUser extends VPage<COpBinding> {\r\n    private unit:number;\r\n    private pageUsers = new PageUsers();\r\n\r\n    private onUserClick = (item:any) => {\r\n        this.closePage();\r\n        this.returnCall(item);\r\n    }\r\n    private onSearch = async (key:string) => {\r\n        await this.pageUsers.first({key: key, unit:this.unit, role:undefined});\r\n    }\r\n    private renderSelectUser = (item:any, index:number) => {\r\n        return <div className=\"px-3 py-2\">{JSON.stringify(item)}</div>;\r\n    }\r\n    async open(unit: number) {\r\n        this.unit = unit;\r\n        let search = <SearchBox className=\"w-100\" onSearch={this.onSearch} placeholder=\"选择用户\" />;\r\n        this.openPageElement(<Page header={search}>\r\n            <List\r\n                before=\"搜索用户名\"\r\n                items={this.pageUsers}\r\n                item={{render: this.renderSelectUser, onClick:this.onUserClick}} />\r\n        </Page>);\r\n    }\r\n}\r\n\r\nclass PageUsers extends PageItems<any> {\r\n    protected async load(param:{key:string, unit:number, role:number}, pageStart: any, pageSize: number): Promise<any[]> {\r\n        let {unit, role, key} = param;\r\n        let ret = await centerApi.get('unit/members', {key: key, unit:unit, role:role, pageStart:pageStart, pageSize:pageSize});\r\n        return ret;\r\n    }\r\n    protected setPageStart(item: any): any {\r\n        if (item === undefined)\r\n            this.pageStart = 0;\r\n        else\r\n            this.pageStart = item.id;\r\n    }\r\n}","import React from \"react\";\r\nimport { Page, Controller, meInFrame, VPage } from \"tonva-tools\";\r\nimport { List, Muted, LMR, FA } from \"tonva-react-form\";\r\nimport { VOpBinding } from './vOpBinding';\r\nimport { CAction, CQuery, centerApi, entityIcons, ControllerUq } from \"tonva-react-uq\";\r\nimport { Organization, Team, Section, Post, Sheet, App, Uq, To, Entity, EntityBlock } from \"./model\";\r\nimport { VAllPosts } from \"./vAllPosts\";\r\nimport { VFullFunction } from \"./vFullFunction\";\r\nimport { VSearchUser } from \"./vSearchUser\";\r\n\r\n// 单据跟操作的绑定设置\r\nexport class COpBinding extends ControllerUq {\r\n    /*\r\n    constructor(unitxUq: CUq, res:any) {\r\n        super({});\r\n        this.unitxUq = unitxUq;\r\n    }*/\r\n\r\n    icon = <FA name=\"map-o\" className=\"text-success\" fixWidth={true} />;\r\n    label = '岗位权限 - UQ对象';\r\n\r\n    //private unitxUq: CUq;\r\n    private apps: App[];\r\n    organizations: Organization[];\r\n    teams: Team[];\r\n    sections: Section[];\r\n    posts: Post[];\r\n    postDict: {[id:number]:Post};\r\n    teamDict: {[id:number]:Team};\r\n    organizationDict: {[id:number]:Organization};\r\n    sectionDict: {[id:number]:Section};\r\n\r\n    protected async internalStart():Promise<void> {\r\n        await this.buildPosts();\r\n        await this.buildAppsUqs();\r\n        this.openPage(<this.appsView />);\r\n    }\r\n\r\n    private async buildAppsUqs() {\r\n        let unit = meInFrame.unit;\r\n        let ret:any[][] = await centerApi.get('/unit/apps-uqs', {unit: unit});\r\n        this.apps = ret[0];\r\n        let uqs: Uq[] = ret[1];\r\n\r\n        for (let app of this.apps) {\r\n            app.uqs = [];\r\n        }\r\n        for (let uq of uqs) {\r\n            let app = this.apps.find(v => v.id === uq.app);\r\n            if (app === undefined) continue;\r\n            app.uqs.push(uq);\r\n            this.setUqEntities(uq);\r\n        }\r\n    }\r\n\r\n    private async buildPosts() {\r\n        let queryAllTeams = this.cUq.cFromName('query', 'allteams') as CQuery;\r\n        let ret:any[][] = await queryAllTeams.entity.query(undefined);\r\n        this.teams = ret['teams'];\r\n        this.organizations = ret['organization'];\r\n        this.posts = ret['organizationpost'];\r\n        this.sections = ret['sections'];\r\n        this.postDict = {};\r\n        this.teamDict = {};\r\n        this.organizationDict = {};\r\n        this.sectionDict = {};\r\n        for (let organization of this.organizations) {\r\n            organization.posts = [];\r\n            organization.teams = [];\r\n            this.organizationDict[organization.id] = organization;\r\n        }\r\n        for (let team of this.teams) {\r\n            team.organizations = [];\r\n            team.sections = [];\r\n            this.teamDict[team.id] = team;\r\n        }\r\n        for (let section of this.sections) {\r\n            section.teams = [];\r\n            this.sectionDict[section.id] = section;\r\n        }\r\n        for (let post of this.posts) {\r\n            this.postDict[post.id] = post;\r\n            let organization = this.organizationDict[post.owner];\r\n            if (organization === undefined) {\r\n                continue;\r\n            }\r\n            post.organization = organization;\r\n            organization.posts.push(post);\r\n        }\r\n        // teamOrganization\r\n        for (let teamOrganization of ret['teamorganization']) {\r\n            let {team:tm, organization:og} = teamOrganization;\r\n            let team = this.teamDict[tm];\r\n            let organization = this.organizationDict[og];\r\n            team.organizations.push(organization);\r\n            organization.teams.push(team);\r\n        }\r\n        // sectionTeam\r\n        for (let sectionTeam of ret['sectionteam']) {\r\n            let {section:sec, team:tm} = sectionTeam;\r\n            let section = this.sectionDict[sec];\r\n            let team = this.teamDict[tm];\r\n            section.teams.push(team);\r\n            team.sections.push(section);\r\n        }\r\n    }\r\n\r\n    private setUqEntities(uq:Uq) {\r\n        let entities = uq.entities;\r\n        if (entities === null) return;\r\n        let lns = entities.split('\\n');\r\n        let len = lns.length;\r\n        let p:number;\r\n        for (let i=0; i<len;) {\r\n            switch (lns[i]) {\r\n                case 'tuid': p = this.setEntities(uq.tuids = [], lns, i, uq); break;\r\n                case 'map': p = this.setEntities(uq.maps = [], lns, i, uq); break;\r\n                case 'book': p = this.setEntities(uq.books = [], lns, i, uq); break;\r\n                case 'history': p = this.setEntities(uq.histories = [], lns, i, uq); break;\r\n                case 'pending': p = this.setEntities(uq.pendings = [], lns, i, uq); break;\r\n                case 'query': p = this.setEntities(uq.queries = [], lns, i, uq); break;\r\n                case 'action': p = this.setEntities(uq.actions = [], lns, i, uq); break;\r\n                case 'sheet': p = this.setSheets(uq.sheets = [], lns, i, uq); break;\r\n                default:\r\n                    alert('unknown entity type: ' + lns[i]);\r\n                    return;\r\n            }\r\n            i = p;\r\n        }\r\n    }\r\n\r\n    private setEntities(entities:Entity[], lines:string[], p:number, uq:Uq):number {\r\n        let len = lines.length;\r\n        let i = p+1;\r\n        for (; i<len; i++) {\r\n            let ln = lines[i];\r\n            if (ln.length > 0) {\r\n                let name = ln;\r\n                entities.push({\r\n                    uq: uq,\r\n                    name: name,\r\n                    states: undefined\r\n                });\r\n            }\r\n            else return i+1;\r\n        }\r\n        return i;\r\n    }\r\n\r\n    private setSheets(sheets:Sheet[], lines:string[], p:number, uq:Uq):number {\r\n        let len = lines.length;\r\n        let i = p+1;\r\n        for (; i<len; i++) {\r\n            let ln = lines[i];\r\n            if (ln.length > 0) {\r\n                let parts:string[] = ln.split('\\t');\r\n                let name = parts[0];\r\n                parts[0] = '$';\r\n                let sheet:Sheet = {\r\n                    uq: uq,\r\n                    name: name,\r\n                    states: parts,\r\n                }\r\n                sheets.push(sheet);\r\n            }\r\n            else return i+1;\r\n        }\r\n        return i;\r\n    }\r\n\r\n    async saveSheetStatePosts(sheet:Sheet, stateName:string, toArr:{post:number, team:number, section:number}[]) {\r\n        let actionSaveEntityOpPost = this.cUq.cFromName('action', 'saveentityoppost') as CAction;\r\n        let {uq, name} = sheet;\r\n        await actionSaveEntityOpPost.submit({\r\n            uq: uq.id,\r\n            entityName: name,\r\n            opName: stateName,\r\n            posts: toArr\r\n        });\r\n    }\r\n\r\n    private appRender = (app:App, index:number) => {\r\n        let {name, discription} = app;\r\n        return <LMR className=\"px-3 py-2\" right={discription && <Muted>{discription}</Muted>}>\r\n            {name}\r\n        </LMR>\r\n    }\r\n\r\n    private appClick = (app:App) => {\r\n        this.openPage(<this.appView {...app} />)\r\n    }\r\n\r\n    async callSearchUser(uq:Uq): Promise<any> {\r\n        let user = await this.vCall(VSearchUser, meInFrame.unit);\r\n        return user;\r\n    }\r\n\r\n    private appsView = () => <Page header={this.label}>\r\n        <div className=\"text-muted p-3 small\">\r\n            <div style={{lineHeight:'1.8', fontWeight:'bold'}}>说明</div>\r\n            <ol className=\"pl-3\" style={{listStyleType: '1', lineHeight: '1.8'}}>\r\n                <li >\r\n                    下面是全部启用的APP。请选择\r\n                </li>\r\n                <li>\r\n                    每个APP会使用一个以上的UQ。UQ里面定义了Tuid，Action，Map和Sheet等对象。\r\n                </li>\r\n                <li>\r\n                    设置对象跟岗位的关联\r\n                </li>\r\n            </ol>\r\n        </div>\r\n        <List items={this.apps} item={{render:this.appRender, onClick:this.appClick}} />\r\n    </Page>;\r\n\r\n    private entityRender(entity:Entity, icon:any) {\r\n        let {name} = entity;\r\n        return <div className=\"px-3 py-2 align-items-center\">{icon} &nbsp; {name}</div>\r\n    }\r\n    private sheetRender(sheet:Sheet, icon:any) {\r\n        let {name, states} = sheet;\r\n        return <div className=\"px-3 py-2 align-items-center\">\r\n            {icon} &nbsp; {name} <Muted> &nbsp; {sheet.states.join(', ')}</Muted>\r\n        </div>\r\n    }\r\n    private entityClick = async (block:EntityBlock, entity:Entity) => {\r\n        //alert('entity click');\r\n        let entityPosts = this.cUq.cFromName('query', 'getEntityPost') as CQuery;\r\n        let ret = await entityPosts.entity.query({uq: entity.uq.id, entityName: entity.name});\r\n        let opTos:{[op:string]:To[]} = {};\r\n        for (let row of ret.ret) {\r\n            let {op, post, team, section} = row;\r\n            let opTo = opTos[op];\r\n            if (opTo === undefined) opTos[op] = opTo = [];\r\n            opTo.push({\r\n                post: this.postDict[post],\r\n                team: this.teamDict[team],\r\n                section: this.sectionDict[section],\r\n            });\r\n        }\r\n        this.openVPage(VOpBinding, {entity:entity, opTos:opTos});\r\n    }\r\n    private sheetClick = async (block:EntityBlock, sheet:Sheet) => {\r\n        this.sheetClickOld(sheet);\r\n    }\r\n\r\n    private sheetClickOld = async (sheet:Sheet) => {\r\n        let entityPosts = this.cUq.cFromName('query', 'getEntityPost') as CQuery;\r\n        let ret = await entityPosts.entity.query({uq: sheet.uq.id, entityName: sheet.name});\r\n        let opTos:{[op:string]:To[]} = {};\r\n        for (let row of ret.ret) {\r\n            let {op, post, team, section} = row;\r\n            let opTo = opTos[op];\r\n            if (opTo === undefined) opTos[op] = opTo = [];\r\n            opTo.push({\r\n                post: this.postDict[post],\r\n                team: this.teamDict[team],\r\n                section: this.sectionDict[section],\r\n            });\r\n        }\r\n        this.openVPage(VOpBinding, {entity:sheet, opTos:opTos});\r\n    }\r\n\r\n    private renderSetting = (item:any, index:number) => {\r\n        let {icon, color, text} = item;\r\n        return <div className=\"px-3 py-2 align-items-center\">\r\n            {<FA name={icon} fixWidth={true} className={color} />} &nbsp; {text}\r\n        </div>\r\n    }\r\n\r\n    private settingClick = (item:any, uq:Uq) => {\r\n        let {name} = item;\r\n        let V: new (coordinator) => VPage<COpBinding>;\r\n        switch (name) {\r\n            default: return;\r\n            case 'entity-by-all-post': V = VAllPosts; break;\r\n            case 'user-all-entities': V = VFullFunction; break;\r\n        }\r\n        this.openVPage(V, uq);\r\n    }\r\n    \r\n    private uqRender = (uq:Uq, index:number) => {\r\n        let {name, tuids, actions, maps, books, queries, histories, pendings, sheets} = uq;\r\n        let nameRender = this.entityRender;\r\n        let blocks:EntityBlock[] = [\r\n            {items: tuids, type: 'tuid', itemClick: this.entityClick},\r\n            {items: sheets, type: 'sheet', itemClick: this.sheetClick, itemRender: this.sheetRender},\r\n            {items: actions, type: 'action', itemClick: this.entityClick},\r\n            {items: maps, type: 'map', itemClick: this.entityClick},\r\n            {items: books, type: 'book', itemClick: this.entityClick},\r\n            {items: queries, type: 'query', itemClick: this.entityClick},\r\n            {items: histories, type: 'history', itemClick: this.entityClick},\r\n            {items: pendings, type: 'pending', itemClick: this.entityClick},\r\n        ];\r\n\r\n        let settings:any[] = [\r\n            {name:'entity-by-all-post', icon: 'cog', color: 'text-success', text: '所有岗位可操作'},\r\n            {name: 'user-all-entities', icon: 'cog', color: 'text-success', text: '全功能用户'}\r\n        ];\r\n\r\n        // {icon} &nbsp; {name} <Muted> &nbsp; {sheet.states.join(', ')}</Muted>\r\n        return <div key={name} className=\"my-2\">\r\n            <div className=\"px-3 font-weight-bold\">{name}</div>\r\n            <List className=\"mt-3\"\r\n                items={settings}\r\n                item={{\r\n                    key: (item:any)=>item.name, \r\n                    render: this.renderSetting,\r\n                    onClick:(item:any)=>this.settingClick(item, uq) \r\n                }}\r\n             />\r\n            {blocks.map(block => {\r\n                let {items, type, itemClick, itemRender} = block;\r\n                let icon = entityIcons[type];\r\n                return items && items.length>0 &&\r\n                    <List key={type} className=\"mt-3\"\r\n                        header={<Muted className=\"px-3 pt-1 bg-light w-100\">{this.res[type]||type}</Muted>} \r\n                        items={items} \r\n                        item={{\r\n                            key: (item:any)=>item.name, \r\n                            render:(item:any, index:number)=>(itemRender || nameRender)(item, icon), \r\n                            onClick: (item:Entity)=>itemClick(block, item)\r\n                        }} />;\r\n            })}\r\n        </div>;\r\n        /*\r\n        function headerCaption(caption:string):JSX.Element {\r\n            return <Muted className=\"px-3 pt-1 bg-light w-100\">{caption}</Muted>\r\n        }\r\n        function itemList(items:any[], type:string, itemClick:(item:any)=>void, render:((item:any, icon:any)=>JSX.Element) = nameRender) {\r\n            //let res = entitiesRes;\r\n            //let {caption, icon} = res[type];\r\n            let icon = entityIcons[type];\r\n            return items && \r\n                <List className=\"mt-3\"\r\n                    header={headerCaption(type)} \r\n                    items={items} \r\n                    item={{render:(item:any, index:number)=>render(item, icon), onClick: itemClick}} />;\r\n        }\r\n            {itemList(tuids, 'tuid', this.tuidClick)}\r\n            {itemList(sheets, 'sheet', this.sheetClickOld, this.sheetRender)}\r\n            {itemList(actions, 'action', this.actionClick)}\r\n            {itemList(maps, 'map', this.mapClick)}\r\n            {itemList(books, 'book', this.bookClick)}\r\n            {itemList(queries, 'query', this.queryClick)}\r\n            {itemList(histories, 'history', this.historyClick)}\r\n            {itemList(pendings, 'pending', this.pendingClick)}\r\n        */\r\n    }\r\n\r\n    private appView = (app:App) => <Page header={app.name + '操作权限'}>\r\n        {\r\n            app.uqs.map((v, index) => this.uqRender(v, index))\r\n        }\r\n    </Page>;\r\n\r\n    /*\r\n    private tuidClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    private mapClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    private actionClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    private bookClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    private queryClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    private historyClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    private pendingClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    */\r\n}\r\n","import * as React from 'react';\r\nimport { Page, VPage } from 'tonva-tools';\r\nimport { List, FA } from 'tonva-react-form';\r\nimport { CUq, Link, CLink, CApp } from \"tonva-react-uq\";\r\nimport ui from './ui';\r\nimport { COpBinding } from './op';\r\n\r\nexport class COrganization extends CUq {\r\n    constructor() {\r\n        super(undefined, '$$$/$unitx', 0, 0, undefined, ui);\r\n    }\r\n\r\n    label = '岗位权限';\r\n    icon = 'sitemap';\r\n    links: (CLink|string)[];\r\n\r\n    protected clearPrevPages() {\r\n        // 保留回退按钮，所以，去掉下面这行\r\n        //nav.clear();\r\n    }\r\n\r\n    protected async loadEntites() {\r\n        // 只有赋Entity权限的地方，需要取全部的Entities，其它地方默认取user access，this.entities.loadAccess()\r\n        await this.entities.loadEntities();\r\n    }\r\n\r\n    protected async internalStart() {\r\n        await this.loadSchema();\r\n        this.links= [\r\n            '',\r\n            new CLink(new COpBinding(this, this.res)),\r\n            '',\r\n            this.linkFromName('map', 'teamPerson'),\r\n            this.linkFromName('map', 'sectionTeam'),\r\n            this.linkFromName('map', 'teamOrganization'),\r\n            '',\r\n            this.linkFromName('tuid', 'person'),\r\n            this.linkFromName('tuid', 'team'),\r\n            this.linkFromName('tuid', 'section'),\r\n            this.linkFromName('tuid', 'organization'),\r\n        ];\r\n        this.openVPage(VOrganization);\r\n    }\r\n    \r\n}\r\n\r\nclass VOrganization extends VPage<COrganization> {\r\n    async open() {\r\n        this.openPage(this.appPage);\r\n    }\r\n\r\n    private renderRow = (link: Link, index:number) => {\r\n        return link.render('bg-white');\r\n    }\r\n\r\n    protected appPage = () => {\r\n        let {links, label} = this.controller;\r\n        return <Page header={label} logout={()=>{}}>\r\n            <List items={links} item={{render: this.renderRow}} />\r\n        </Page>;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {IdPick, IdPickFace, List, SearchBox} from 'tonva-react-form';\r\nimport {DevModel} from './model';\r\n\r\nexport interface IdPickProps {\r\n    caption: string;\r\n    searchPlaceHolder?: string;\r\n    candidateItems: ((params:any, key:string) => Promise<any[]>) | any[];\r\n    moreCandidates: () => Promise<void>;\r\n    row: (item:any, index:number) => JSX.Element;\r\n}\r\n\r\nexport function createIdPick(props: IdPickProps):IdPick {\r\n    return function(face: IdPickFace, params: any):Promise<void> {\r\n        return new Promise<void>((resolve, reject) => {\r\n            nav.push(<IdPickPage resolve={resolve} face={face} params={params} {...props} />);\r\n        });\r\n    }\r\n}\r\n\r\ninterface IdPickPageProps extends IdPickProps {\r\n    face: IdPickFace;\r\n    resolve: (item?: any) => void;\r\n    params: any;\r\n}\r\ninterface IdPickPageState {\r\n    items?: any[];\r\n}\r\n\r\nclass IdPickPage extends React.Component<IdPickPageProps, IdPickPageState> {\r\n    private items:any[];\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: null,\r\n        }\r\n        this.itemClick = this.itemClick.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n    }\r\n    async componentDidMount() {\r\n        let {face, candidateItems, params} = this.props;\r\n        this.setState({\r\n            items: Array.isArray(candidateItems)? candidateItems : await candidateItems(params, ''),\r\n        });\r\n    }\r\n    itemClick(item:any) {\r\n        let {resolve} = this.props;\r\n        resolve(item);\r\n        nav.pop();\r\n    }\r\n    async onSearch(key: string) {\r\n        //alert('search ' + key);\r\n        //await store.dev.searchServer.first(key)\r\n        let {candidateItems, params} = this.props;\r\n        if (typeof candidateItems === 'function') {\r\n            let ret = await candidateItems(params, key);\r\n            this.setState({items: ret});\r\n        }\r\n    }\r\n    render() {\r\n        let {caption, row, searchPlaceHolder} = this.props;\r\n        return <Page header={caption} back=\"close\">\r\n            <div className=\"container\">\r\n                <SearchBox className=\"my-2\" \r\n                    onSearch={this.onSearch} \r\n                    placeholder={searchPlaceHolder}\r\n                    maxLength={100} />\r\n            </div>\r\n            <List items={this.state.items} item={{onClick:this.itemClick, render:row}} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { AppController } from '.';\r\nimport { VPage, nav, Page, ItemSchema, UiSchema, StringSchema, BoolSchema, UiTextItem, UiTextAreaItem, UiCheckItem, Form, ButtonSchema, Context, ImageSchema, UiImageItem, IdSchema, UiIdItem } from 'tonva-tools';\r\nimport { SubmitResult, DropdownActions, TonvaForm, FormRow } from 'tonva-react-form';\r\nimport { createIdPick, IdPickProps } from 'createIdPick';\r\nimport { DevModel } from 'model';\r\nimport { store } from 'store';\r\nimport { IdPickPage, ServerSpan } from '../../tools';\r\nimport { observer } from 'mobx-react';\r\n\r\nconst ServerCaption = (item:DevModel.Server) => {\r\n    let {discription, cloud, ip} = item;\r\n    return <>{discription} {cloud} {ip}</>;\r\n}\r\nconst idPickServerProps: IdPickProps = {\r\n    caption: '选择服务器',\r\n    searchPlaceHolder: '搜索服务器',\r\n    candidateItems: async (params:any, key:string) => {\r\n        await store.dev.searchServer.first(key);\r\n        return store.dev.searchServer.items;\r\n    },\r\n    moreCandidates: async () => {\r\n        await store.dev.searchServer.more();\r\n    },\r\n    row: (item:DevModel.Server, index:number) => {\r\n        return <div className=\"px-3 py-2\"><ServerCaption {...item} /></div>;\r\n    },\r\n};\r\n\r\nconst formRows:FormRow[] = [\r\n    {\r\n        label: '名称', \r\n        field: {name: 'name', type: 'string', maxLength: 100, required: true},\r\n    },\r\n    {\r\n        label: '描述',\r\n        field: {name: 'discription', type: 'string', maxLength: 250},\r\n        face: {type: 'textarea'}\r\n    },\r\n    {\r\n        label: '图标',\r\n        field: {name: 'icon', type: 'string', maxLength: 250},\r\n    },\r\n    {\r\n        label: 'URL',\r\n        field: {name: 'url', type: 'string', maxLength: 200},\r\n    },\r\n    {\r\n        label: '服务器',\r\n        field: {name: 'server', type: 'id'},\r\n        face: {\r\n            type: 'pick-id', \r\n            initCaption: '请选择服务器', \r\n            pick: createIdPick(idPickServerProps),\r\n            fromPicked: (item:DevModel.Server)=>{\r\n                return {\r\n                    id: item.id, \r\n                    caption: <ServerCaption {...item} />,\r\n                };\r\n            },\r\n            itemFromId: (id:number)=>store.cacheServers.get(id),\r\n        },\r\n    },\r\n    {\r\n        label: '公开',\r\n        field: {name: 'public', type: 'bool', defaultValue: 1}\r\n    },\r\n];\r\n\r\nconst schema:ItemSchema[] = [\r\n    {name: 'name', type: 'string', maxLength: 100, required: true} as StringSchema,\r\n    {name: 'discription', type: 'string', maxLength: 250} as StringSchema,\r\n    {name: 'url', type: 'string', maxLength: 200} as StringSchema,\r\n    {name: 'public', type: 'boolean'} as BoolSchema,\r\n    {name: 'server', type: 'id'} as IdSchema,\r\n    {name: 'icon', type: 'image'} as ImageSchema,\r\n    {name: 'submit', type: 'submit'} as ButtonSchema,\r\n];\r\n\r\nexport abstract class EditBasePage extends VPage<AppController> {\r\n    private candidateItems = async (params:any, key:string):Promise<any[]> => {\r\n        await store.dev.searchServer.first(key);\r\n        return store.dev.searchServer.items;\r\n    }\r\n\r\n    private moreCandidates = async ():Promise<void> => {\r\n        await store.dev.searchServer.more();\r\n    }\r\n\r\n    private renderRow = (item:DevModel.Server, index:number): JSX.Element => {\r\n        return <div className=\"px-3 py-2\"><ServerCaption {...item} /></div>;\r\n    }\r\n\r\n    private pickServerId = (context:Context, name:string, value:number): Promise<number> => {\r\n        return new Promise<number>((resolve, reject) => {\r\n            nav.push(<IdPickPage \r\n                caption=\"选择服务器\" \r\n                searchPlaceHolder=\"搜索服务器\"\r\n                candidateItems={this.candidateItems}\r\n                moreCandidates={this.moreCandidates}\r\n                row={this.renderRow}\r\n                idFromItem={(item:DevModel.Server) => item.id}\r\n                resolve={resolve} params={undefined} />, \r\n                ()=> {\r\n                    reject();\r\n                });\r\n        });\r\n    }\r\n\r\n    private renderServerInput = (itemId:number): JSX.Element => {\r\n        return <ServerSpan id={itemId} />;\r\n    };\r\n\r\n    private uiSchema:UiSchema = {\r\n        items: {\r\n            name: {widget: 'text', label: '名称'} as UiTextItem,\r\n            discription: {widget: 'textarea', label: '描述', rows: 5} as UiTextAreaItem,\r\n            url: {widget: 'text', label: 'URL', placeholder: 'http(s)://APP地址'} as UiTextItem,\r\n            'public': {widget: 'checkbox', label: '公开', } as UiCheckItem,\r\n            server: {widget: 'id', label: '服务器', pickId: this.pickServerId, Templet: this.renderServerInput} as UiIdItem,\r\n            icon: {widget: 'image', label: '标志图'} as UiImageItem,\r\n            submit: {widget: 'button', label: '提交', className: 'btn btn-primary'}\r\n        }\r\n    }\r\n    \r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n    protected onSubmit = async (values:any):Promise<SubmitResult> => {\r\n        await this.controller.saveApp(values);\r\n        nav.pop();\r\n        return;\r\n    }\r\n    private onButtonClick = async (name:string, context: Context) => {\r\n        let {data} = context;\r\n        let app = _.clone(this.controller.app);\r\n        _.merge(app, data);\r\n        await this.controller.saveApp(app);\r\n        nav.pop();\r\n    }\r\n    protected page: ()=>JSX.Element;\r\n    protected form = observer(() => {\r\n        /*\r\n        return <TonvaForm\r\n            className=\"m-3\"\r\n            formRows={formRows} \r\n            onSubmit={this.onSubmit} initValues={initValues} />\r\n        */\r\n        return <Form fieldLabelSize={2}\r\n            className=\"m-3\" \r\n            schema={schema} \r\n            uiSchema={this.uiSchema}\r\n            formData={this.initValues}\r\n            onButtonClick={this.onButtonClick} />\r\n    });\r\n    abstract get initValues():any;\r\n}\r\n\r\nexport class EditPage extends EditBasePage {\r\n    get initValues():any {return this.controller.app}\r\n    protected page = () => {\r\n        let {app} = this.controller;\r\n        let {name} = app;\r\n        return <Page header={'修改APP - ' + name} back=\"close\">\r\n            <this.form />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nexport class NewPage extends EditBasePage {\r\n    get initValues():any {return {}}\r\n    protected page = () => {\r\n        return <Page header={'新建APP'} back=\"close\">\r\n            <this.form />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, Image } from \"tonva-tools\";\r\nimport { AppController } from '.';\r\nimport { List, LMR, Badge, Muted, FA } from 'tonva-react-form';\r\nimport { DevModel } from 'model';\r\nimport { NewPage } from './editPage';\r\n\r\nexport class AppsPage extends VPage<AppController> {\r\n    async open(param:any) {\r\n        this.openPage(this.page);\r\n    }\r\n    private newItem = () => {\r\n        this.openVPage(NewPage);\r\n    }\r\n    private page = ():JSX.Element => {\r\n        let {appList, listRowClick} = this.controller;\r\n        let right = <button className='btn btn-secondary btn-sm' onClick={()=>this.newItem()}><FA name=\"plus\" /></button>;\r\n        return <Page header=\"App\" right={right}>\r\n            <List items={appList} item={{render: this.appRow, onClick: listRowClick}} />\r\n        </Page>\r\n    }\r\n    private appRow = (item:DevModel.App):JSX.Element => {\r\n        let {name, discription, icon, url, urlDebug} = item;\r\n        let left = <Badge size=\"sm\"><Image src={icon} /></Badge>;\r\n        let right = <div className=\"text-muted small text-right\">\r\n            {url || '-'}<br/>\r\n            {urlDebug}\r\n        </div>;\r\n        return <LMR className=\"py-2 px-3 align-items-stretch\"\r\n            left={left} right={right}>\r\n            <div className=\"px-3\">\r\n                <div><b>{name}</b></div>\r\n                <div><Muted>{discription}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { List, LMR, SearchBox } from 'tonva-react-form';\r\nimport { DevModel } from 'model';\r\nimport { UnitSpan } from 'tools';\r\nimport { store } from 'store';\r\nimport { nav, Page, VPage } from 'tonva-tools';\r\nimport { AppController } from '.';\r\n\r\nexport class SearchUqPage extends VPage<AppController> {\r\n    @observable private uqs: DevModel.UQ[];\r\n\r\n    async open() {\r\n        this.uqs = await this.controller.getMyUqs();\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private onSearch = async (key:string) => {\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.uqs = await this.controller.searchUq(key, pageStart, pageSize);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let header = <SearchBox className=\"w-100 mx-1\" \r\n            onSearch={this.onSearch}\r\n            placeholder=\"搜索UQ名字\" \r\n            maxLength={100} />;\r\n        return <Page back=\"close\" header={header}>\r\n            <List items={this.uqs} item={{render: this.row, onClick: this.controller.onUq}} />\r\n        </Page>;\r\n    });\r\n\r\n    private row = (uq: DevModel.UQ) => {\r\n        let {owner, name, discription} = uq;\r\n        return <LMR className=\"py-2 px-3\" right={discription}>\r\n            <div>{owner} / {name}</div>\r\n        </LMR>;\r\n    };\r\n}\r\n\r\n@observer\r\nexport class AppUqs extends React.Component {\r\n    @observable anySelected: boolean = false;\r\n    private list:List;\r\n    private onSelect = (item: DevModel.UQ, isSelected:boolean, anySelected:boolean) => {\r\n        this.anySelected = anySelected;\r\n    }\r\n    private row = (item: DevModel.UQ) => {\r\n        let {name, unit, discription} = item;\r\n        return <LMR className=\"p-2\" right={<small className=\"text-muted\">{discription}</small>}>\r\n            <UnitSpan id={unit} />/{name}\r\n        </LMR>;\r\n    }\r\n    private removeBind = () => {\r\n        if (this.list === null) return;\r\n        let {selectedItems} = this.list;\r\n        if (selectedItems === undefined) return;\r\n        if (selectedItems.length === 0) return;\r\n        store.dev.apps.appBindUq(\r\n            selectedItems.map(v => {\r\n                return {id:v.id, access:['*']}\r\n            }), \r\n            false);\r\n    }\r\n    render() {\r\n        let btnProps = this.anySelected?\r\n            {color:'danger', onClick:this.removeBind, icon:'trash', text:'取消'}:\r\n            {color:'primary', onClick:()=>nav.push(<Uqs/>), icon:'plus', text:'新增'};\r\n        let btn = (p)=><button \r\n            className={classNames('btn', 'btn-outline-'+p.color, 'btn-sm')} \r\n            onClick={p.onClick}>\r\n            <i className={\"fa fa-\" + p.icon} /> {p.text}关联\r\n        </button>;\r\n        let listHeader = <div className=\"va-row py-1 justify-content-center\">{btn(btnProps)}</div>;\r\n        return <Page header=\"关联UQ\">\r\n            <List ref={list=>this.list=list} header={listHeader}\r\n                items={store.dev.apps.uqs}\r\n                item={{render: this.row, onSelect: this.onSelect}} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\n@observer\r\nclass Uqs extends React.Component {\r\n    onSearch = async (key:string) => {\r\n        await store.dev.apps.searchUq(key);\r\n    }\r\n    onBind(uq: DevModel.UQ, bind: boolean) {\r\n        store.dev.apps.appBindUq([{id:uq.id, access:['*']}], bind);\r\n    }\r\n    row = (uq: DevModel.UQ) => {\r\n        let isConnected = store.dev.apps.uqs.find(a => a.id === uq.id) !== undefined;\r\n        let cn = ['btn', 'btn-sm'];\r\n        let btnContent:any, onClick:any;\r\n        if (isConnected) {\r\n            cn.push('btn-success');\r\n            onClick = ()=>this.onBind(uq, false);\r\n            btnContent = \"已关联\";\r\n        }\r\n        else {\r\n            cn.push('btn-primary');\r\n            onClick = ()=>this.onBind(uq, true);\r\n            btnContent = <span><i className=\"fa fa-check\"/> 关联</span>;\r\n        }\r\n        return <div className=\"d-flex justify-content-start py-1 px-3\">\r\n            <div className=\"align-self-center\">{uq.name + ' - ' + uq.discription}</div>\r\n            <footer className=\"ml-auto\"><button className={classNames(cn)} onClick={onClick}>{btnContent}</button></footer>\r\n        </div>\r\n    }\r\n    render() {\r\n        let header = <SearchBox className=\"w-100 mx-1\" \r\n            onSearch={this.onSearch} \r\n            placeholder=\"搜索UQ名字\" \r\n            maxLength={100} />;\r\n        return <Page back=\"close\" header={header}>\r\n            <List items={store.dev.apps.searchedUqs} item={{render: this.row}} loading={null} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, nav } from 'tonva-tools';\r\nimport { AppController, UqAccess } from '.';\r\nimport { IdDates, UnitSpan, ServerSpan, UnitName } from 'tools';\r\nimport { Prop, Media, PropGrid, ListProp, DropdownActions, List, LMR } from 'tonva-react-form';\r\nimport { EditPage } from './editPage';\r\nimport { AppUqs, SearchUqPage } from './appUqs';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class AppPage extends VPage<AppController> {\r\n    async open() {\r\n        //this.uqs.list = this.controller.uqs;\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private editItem = async () => {\r\n        await this.openVPage(EditPage);\r\n        //nav.push(<EditAppPage {...this.props} />);\r\n    }\r\n\r\n    private deleteItem = async () => {\r\n        if (confirm('真的要删除吗？系统删除时并不会检查相关引用，请谨慎') === true) {\r\n            await this.controller.deleteApp();\r\n            nav.pop();\r\n        }\r\n    }\r\n\r\n    private page = observer(():JSX.Element => {\r\n        let {app} = this.controller;\r\n        let {unit, name, discription, icon, server, date_init, date_update} = app;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let menuItems = [\r\n            // {icon: 'cogs', caption:'设置关联UQ', action: ()=>nav.push(<AppUqs />)},\r\n            {caption:'修改App', action:this.editItem, icon:'edit' },\r\n            {caption:'删除', action:this.deleteItem, icon:'trash-o' }\r\n        ];\r\n\r\n        let right = <DropdownActions actions={menuItems} />;\r\n\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <Media icon={icon} main={name} discription={disp} />\r\n            },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                label: '开发号', \r\n                component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> \r\n            },\r\n            /*\r\n            {\r\n                type: 'component', \r\n                label: 'Service',\r\n                vAlign: 'stretch',\r\n                component: <ServiceRow />,\r\n            },*/\r\n            {\r\n                label: 'URL',\r\n                name: 'url',\r\n                type: 'string',                \r\n            },\r\n            {\r\n                type: 'component',\r\n                label: '服务器',\r\n                component: <ServerSpan id={server} />\r\n            },\r\n            '',\r\n            //this.uqs,\r\n        ];\r\n        let btnAddUq = <button className=\"btn btn-outline-primary btn-sm\" onClick={()=>this.openVPage(SearchUqPage)}>\r\n            增加关联\r\n        </button>;\r\n        return <Page header={'App - ' + name} right={right}>\r\n            <PropGrid rows={rows} values={app} />\r\n            <LMR className=\"mx-3 mt-3 mb-1\" right={btnAddUq}>\r\n                关联UQ\r\n            </LMR>\r\n            <List items={this.controller.uqAccesses} item={{render:this.renderUqRow, onClick:this.uqClick}} />\r\n        </Page>\r\n    })\r\n\r\n    private uqClick = (uqAccess:UqAccess) => {\r\n        this.controller.onUq(uqAccess.uq);\r\n    }\r\n\r\n    private renderUqRow = (uqAccess:UqAccess, index:number):JSX.Element => {\r\n        let {uq, bind_access: access} = uqAccess;\r\n        let {name, discription, unit} = uq;\r\n        let disp: any;\r\n        let elAccess: any;\r\n        if (access && access.length > 0) {\r\n            elAccess = <> + {access.join(', ')} </>;\r\n        }\r\n        if (discription) disp = <div className=\"small text-muted\"> &nbsp; {discription}</div>;\r\n        return <LMR className=\"px-3 py-2 align-items-center\" right={disp}>\r\n            <UnitName id={unit} /> / {name} {elAccess}\r\n        </LMR>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, nav } from \"tonva-tools\";\r\nimport { AppController, UqAccess } from \".\";\r\nimport { LMR } from 'tonva-react-form';\r\n\r\nexport class UqBindPage extends VPage<AppController> {\r\n    private uqAccess: UqAccess;\r\n    private accesses: string[];\r\n    private accessChecked:{[name:string]:boolean};\r\n    async open(uqAccess: UqAccess) {\r\n        this.uqAccess = uqAccess;\r\n        let {uq, bind_access} = this.uqAccess;\r\n        let {access} = uq;\r\n        if (access) {\r\n            this.accessChecked = {};\r\n            this.accesses = access.split(',');\r\n            for (let acc of this.accesses) {\r\n                this.accessChecked[acc] = (bind_access && bind_access.find(bc => bc === acc)) !== undefined;\r\n            }\r\n        }\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private onCheckChanged = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        let {target} = evt;\r\n        this.accessChecked[target.name] = target.checked;\r\n    }\r\n\r\n    private saveUqBind = async () => {\r\n        let acc:string[] = [];\r\n        if (this.accesses) {\r\n            for (let i in this.accessChecked) {\r\n                if (this.accessChecked[i] === true) acc.push(i);\r\n            }\r\n        }\r\n        await this.controller.saveUqBind(this.uqAccess.uq, acc);\r\n        nav.pop();\r\n    }\r\n\r\n    private removeUqBind = async () => {\r\n        await this.controller.removeUqBind(this.uqAccess.uq);\r\n        nav.pop();\r\n    }\r\n\r\n    private page = ():JSX.Element => {\r\n        let {uq, bind_access} = this.uqAccess;\r\n        let {owner, name, discription, access} = uq;\r\n        let btnDelete:any;\r\n        if (bind_access !== null && bind_access !== undefined) {\r\n            btnDelete = <button className=\"btn btn-outline-danger btn-sm\" onClick={this.removeUqBind}>取消关联</button>;\r\n        }\r\n        let checkAccessList:any;\r\n        if (this.accesses) {\r\n            checkAccessList = <div className=\"mt-3\">\r\n            {\r\n                this.accesses.map(v => {\r\n                    let checked = this.accessChecked[v];\r\n                    return <label key={v} className=\"d-inline-block mr-4\">\r\n                        <input onChange={this.onCheckChanged}\r\n                            style={{width:'1.1rem', height:'1.1rem'}} \r\n                            name={v} type=\"checkbox\" defaultChecked={checked} />&nbsp;{v}\r\n                    </label>;\r\n                })\r\n            }\r\n            </div>;\r\n        }\r\n        return <Page header=\"关联UQ\">\r\n            <div className=\"m-3 py-3 px-3 bg-white border\">\r\n                <div>{owner} / {name}</div>\r\n                <div className=\"text-muted\">{discription}</div>\r\n                {checkAccessList}\r\n                <LMR className=\"pt-3\" right={btnDelete}>\r\n                    <button className=\"btn btn-primary btn-sm\" onClick={this.saveUqBind}>保存关联</button>\r\n                </LMR>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { observable } from 'mobx';\r\nimport { Controller } from \"tonva-tools\";\r\nimport { DevModel } from 'model';\r\nimport { devApi } from 'api';\r\nimport { AppsPage } from './appsPage';\r\nimport { AppPage } from './appPage';\r\nimport { UqBindPage } from './uqBindPage';\r\n\r\nexport interface UqAccess {\r\n    uq: DevModel.UQ;\r\n    bind_access: string[];\r\n}\r\n\r\nexport class AppController extends Controller {\r\n    private unitId: number;\r\n    app: DevModel.App;\r\n    @observable appList: DevModel.App[];\r\n    @observable uqAccesses: UqAccess[];\r\n    protected async internalStart(unitId:any) {\r\n        this.unitId = unitId;\r\n        this.appList = await devApi.apps(this.unitId);\r\n        this.openVPage(AppsPage);\r\n    }\r\n\r\n    listRowClick = async (item:DevModel.App) => {\r\n        this.app = item;\r\n        let ret = await devApi.loadAppUqs(item.id);\r\n        this.uqAccesses = ret.map(v => {\r\n            let {owner, access, id, name, discription, unit, date_init, date_update, bind_access} = v;\r\n            return {\r\n                uq: {\r\n                    id: id,\r\n                    name: name,\r\n                    discription: discription,\r\n                    unit: unit,\r\n                    access: access,\r\n                    owner: owner,\r\n                    date_init: date_init,\r\n                    date_update: date_update, \r\n                    service_count: undefined,\r\n                },\r\n                uqOwner: owner,\r\n                bind_access: bind_access && bind_access.split(',')\r\n            }\r\n        });\r\n        this.openVPage(AppPage);\r\n    }\r\n\r\n    saveApp = async (values: DevModel.App) => {\r\n        let app = _.clone(this.app);\r\n        _.merge(app, values);\r\n        app.unit = this.unitId;\r\n        let ret = await devApi.saveApp(app);\r\n        app.id = ret;\r\n        let org = this.appList.find(v => v.id === ret);\r\n        if (org !== undefined) {\r\n            _.merge(org, app);\r\n        }\r\n        else {\r\n            this.appList.push(app);\r\n        }\r\n    }\r\n\r\n    deleteApp = async () => {\r\n        await devApi.delApp(this.unitId, this.app.id);\r\n        let index = this.appList.findIndex(v => v.id === this.app.id);\r\n        if (index >= 0) this.appList.splice(index, 1);\r\n    }\r\n\r\n    searchUq = async (key:string, pageStart:number, pageSize:number) => {\r\n        return await devApi.searchUq(this.unitId, key, pageStart, pageSize);\r\n    }\r\n\r\n    getMyUqs = async () => {\r\n        return await devApi.getMyUqs(this.unitId);\r\n    }\r\n\r\n    onUq = (uq: DevModel.UQ) => {\r\n        let uqAccess:UqAccess = this.uqAccesses.find(v => v.uq.id === uq.id);\r\n        if (uqAccess === undefined) {\r\n            uqAccess = {\r\n                uq: uq,\r\n                bind_access: undefined,\r\n            }\r\n        }\r\n        else {\r\n            let access = uqAccess.bind_access;\r\n            if (access === null || access === undefined) uqAccess.bind_access = [];\r\n        }\r\n        this.openVPage(UqBindPage, uqAccess);\r\n    }\r\n\r\n    // accesses = undefined, 表示删除\r\n    private buildBindUqs(uq: DevModel.UQ, accesses?:string[]) {\r\n        let uqs:{id:number, access:string[]}[] = [];\r\n        let isNew = true;\r\n        for (let ua of this.uqAccesses) {\r\n            let {uq:uaUq, bind_access} = ua;\r\n            if (uaUq.id === uq.id) {\r\n                if (accesses === undefined) continue;\r\n                bind_access = accesses;\r\n                isNew = false;\r\n            }\r\n            uqs.push({\r\n                id: uaUq.id,\r\n                access: bind_access || [],\r\n            });\r\n        }\r\n        if (accesses !== undefined && isNew === true) {\r\n            uqs.push({id: uq.id, access: accesses});\r\n        }\r\n        return uqs;\r\n    }\r\n\r\n    saveUqBind = async (uq: DevModel.UQ, accesses:string[]) => {\r\n        let uqs:{id:number, access:string[]}[] = this.buildBindUqs(uq, accesses);\r\n        await devApi.appBindUq(this.unitId, this.app.id, uqs);\r\n        if (uqs.length > this.uqAccesses.length) {\r\n            this.uqAccesses.unshift({\r\n                uq: uq,\r\n                bind_access: accesses,\r\n            });\r\n        }\r\n        else {\r\n            let ua = this.uqAccesses.find(v => v.uq.id === uq.id);\r\n            ua.bind_access = accesses;\r\n        }\r\n    }\r\n\r\n    removeUqBind = async (uq: DevModel.UQ) => {\r\n        let uqs:{id:number, access:string[]}[] = this.buildBindUqs(uq);\r\n        await devApi.appBindUq(this.unitId, this.app.id, uqs);\r\n        let index = this.uqAccesses.findIndex(v => v.uq.id === uq.id);\r\n        if (index>=0) this.uqAccesses.splice(index, 1);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {List, EasyDate, LMR, Muted} from 'tonva-react-form';\r\nimport {DevModel} from '../../model';\r\nimport {store} from '../../store';\r\n\r\ninterface State {\r\n    files: any[];\r\n    compiled?: string;\r\n    text?: string;\r\n}\r\n\r\nexport interface UpUploadProps {\r\n    uq: DevModel.UQ;\r\n    services: DevModel.Service[];\r\n}\r\n\r\nexport class UqUpload extends React.Component<UpUploadProps, State> {\r\n    private fileInput: HTMLInputElement;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            files: undefined,\r\n        }\r\n    }\r\n    private onFilesChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        let upFiles:any[] = [];\r\n        let {files} = evt.target;\r\n        let len = files.length;\r\n        for (let i=0; i<len; i++) {\r\n            upFiles.push(files[i]);\r\n        }\r\n        this.setState({\r\n            files: upFiles,\r\n        });\r\n    }\r\n    fileRender(file, index):JSX.Element {\r\n        let {name, size, lastModifiedDate} = file;\r\n        function sz():string {\r\n            let n:number, u:string;\r\n            if (size < 1024) {\r\n                n = size; u = 'b';\r\n            }\r\n            else if (size < 1024*1024) {\r\n                n = Math.trunc((size / 1024) * 100)/100; u = 'k';\r\n            }\r\n            else {\r\n                n = Math.trunc((size / 1024 / 1024) * 100)/100; u = 'm';\r\n            }\r\n            return n + ' ' + u;\r\n        }\r\n        return <LMR className=\"px-2 py-1\" right={<Muted>{sz()}</Muted>}>\r\n            <div>{name}</div>\r\n            <div><Muted>修改日期: <EasyDate date={lastModifiedDate} /></Muted></div>\r\n        </LMR>;\r\n    }\r\n    private fileClick = (file:any) => {\r\n        let fr = new FileReader();\r\n        fr.onload = function(f) {\r\n            //alert(this.result);\r\n            nav.push(<UqPage name={file.name} content={this.result} />)\r\n        }\r\n        fr.readAsText(file, \"utf8\");\r\n    }\r\n    private onSubmit = (evt:React.FormEvent<any>) => {\r\n        evt.preventDefault();\r\n    }\r\n\r\n    private async update(thoroughly:boolean) {\r\n        var files:FileList = this.fileInput.files;\r\n        var data = new FormData();\r\n        let len = files.length;\r\n        for (let i=0; i<len; i++) {\r\n            let file = files[i];\r\n            data.append('files[]', file, file.name);\r\n        }\r\n  \r\n        let url = store.uqServer + 'uq-compile/' + this.props.uq.id + '/update';\r\n        if (thoroughly === true) url += '-thoroughly';\r\n        try {\r\n            let abortController = new AbortController();\r\n            let res = await fetch(url, {\r\n                method: \"POST\",\r\n                body: data,\r\n                signal: abortController.signal,\r\n            });\r\n            nav.push(<CompileResult {...this.props} res={res} abortController={abortController} />);\r\n        }\r\n        catch (e) {\r\n            console.error('%s %s', url, e);\r\n        }\r\n    }\r\n    private onUpdate = async () => {\r\n        let thoroughly = false;\r\n        await this.update(thoroughly);\r\n    }\r\n    private onUpdateThoroughly = async () => {\r\n        let thoroughly = true;\r\n        await this.update(thoroughly);\r\n    }\r\n    render() {\r\n        let {files} = this.state;\r\n        let fileList:any;\r\n        if (files !== undefined) {\r\n            fileList = <List \r\n                className=\"my-3\" \r\n                items={files} \r\n                item={{render: this.fileRender, onClick: this.fileClick}}/>;\r\n        }\r\n        let button:any;\r\n        if (files !== undefined && files.length > 0) {\r\n            button = <div className=\"my-2 d-flex\">\r\n                <button className=\"btn btn-success\" type=\"submit\" onClick={this.onUpdate}>优化编译</button>\r\n                <div className=\"py-2 flex-grow-1\" />\r\n                <button className=\"btn btn-outline-warning\"\r\n                    type=\"submit\" onClick={this.onUpdateThoroughly}>完全编译</button>\r\n            </div>;\r\n        }\r\n        return <Page header={\"编译 - \" + this.props.uq.name}>\r\n            <div className=\"py-2 px-3\">\r\n                <div>请选择UQ源代码文件</div>\r\n                <form className=\"my-1\" encType=\"multipart/form-data\" onSubmit={this.onSubmit}>\r\n                    <div className=\"my-1\">\r\n                        <input ref={(fileInput) => this.fileInput=fileInput}type=\"file\" id=\"photo\" \r\n                            className=\"w-100 form-control-file\" name=\"files\" multiple={true} \r\n                            onChange={this.onFilesChange} />\r\n                    </div>\r\n                    {fileList}\r\n                    {button}\r\n                </form>\r\n                <pre>{this.state.compiled}</pre>\r\n                <div>{this.state.text}</div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n\r\ninterface UqPgeProps {\r\n    name: string;\r\n    content: string|ArrayBuffer;\r\n}\r\nclass UqPage extends React.Component<UqPgeProps> {\r\n    render() {\r\n        return <Page header={this.props.name}>\r\n            <pre className=\"px-3 py-2\">{this.props.content}</pre>\r\n        </Page>;\r\n    }\r\n}\r\n\r\ninterface CompileResultProps {\r\n    res: Response;\r\n    abortController: AbortController;\r\n}\r\ninterface CompileResultState {\r\n    texts: string[];\r\n    seconds: number;\r\n}\r\nclass CompileResult extends React.Component<CompileResultProps, CompileResultState> {\r\n    private texts: string[];\r\n    private timeHandler:any;\r\n    constructor(props) {\r\n        super(props);\r\n        this.texts = [];\r\n        this.state = {\r\n            texts: this.texts,\r\n            seconds: -1,\r\n        }\r\n    }\r\n    componentWillMount() {\r\n        nav.regConfirmClose(async ():Promise<boolean>=>{\r\n            if (this.state.seconds>=0) return true;\r\n            return new Promise<boolean>((resolve, reject) => {\r\n                try {\r\n                    if (confirm('正在编译中，真的要中止吗？') === true) {\r\n                        try {\r\n                            this.props.abortController.abort();\r\n                        }\r\n                        catch (err) {\r\n                            console.error(err);\r\n                        }\r\n                        resolve(true);\r\n                    }\r\n                    else {\r\n                        resolve(false);\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    reject(err);\r\n                }\r\n            })\r\n        });\r\n    }\r\n    private clearTimeHandler() {\r\n        if (this.timeHandler !== undefined) {\r\n            clearTimeout(this.timeHandler);\r\n            this.timeHandler = undefined;\r\n        }\r\n    }\r\n    private getParent(el:HTMLElement):HTMLElement {\r\n        if (!el) return;\r\n        if (el.tagName === 'MAIN') return el;\r\n        return this.getParent(el.parentElement);\r\n    }\r\n    private scrollToBottom(defer:number = 100) {\r\n        this.clearTimeHandler();\r\n        let that = this;\r\n        this.timeHandler = setTimeout(() => {\r\n            var pane = document.getElementById('bottomDiv');\r\n            pane && pane.scrollIntoView();\r\n            /*\r\n            if (pane !== undefined) {\r\n                let childNodes = pane.childNodes;\r\n                let last = childNodes.item(childNodes.length-1);\r\n                (last as HTMLElement).scrollIntoView();\r\n            }\r\n            */\r\n            that.clearTimeHandler();\r\n        }, defer);\r\n    }\r\n    private topIntoView() {\r\n        var pane = document.getElementById('topDiv');\r\n        pane && pane.scrollIntoView();\r\n        /*\r\n        let childNodes = pane.childNodes;\r\n        let len = childNodes.length;\r\n        if (len === 0) return;\r\n        let first = childNodes.item(0);\r\n        (first as HTMLElement).scrollIntoView();\r\n        */\r\n    }\r\n    private bottomIntoView() {\r\n        var pane = document.getElementById('bottomDiv');\r\n        pane && pane.scrollIntoView();\r\n        /*\r\n        let childNodes = pane.childNodes;\r\n        let len = childNodes.length;\r\n        if (len === 0) return;\r\n        let last = childNodes.item(len-1);\r\n        (last as HTMLElement).scrollIntoView();\r\n        */\r\n    }\r\n    private doubleClick = () => {\r\n        var pane = document.getElementById('scrollDiv');\r\n        let main = this.getParent(pane);\r\n        if (!main) return;\r\n        if (main.scrollTop >= main.scrollHeight / 2) {\r\n            this.topIntoView();\r\n        }\r\n        else {\r\n            this.bottomIntoView();\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        let that = this;\r\n        let time = new Date();\r\n        function consume(reader: ReadableStreamReader) {\r\n            var total = 0\r\n            return new Promise((resolve, reject) => {\r\n                function uintToString(uintArray):string {\r\n                    var encodedString = String.fromCharCode.apply(null, uintArray),\r\n                        decodedString = decodeURIComponent(escape(encodedString));\r\n                    return decodedString;\r\n                }\r\n                function pump() {\r\n                    reader.read().then(({done, value}) => {\r\n                        if (done) {\r\n                            that.scrollToBottom();\r\n                            that.setState({\r\n                                seconds: (new Date().getTime() - time.getTime()),\r\n                            })\r\n                            resolve();\r\n                            return;\r\n                        }\r\n                        let text = uintToString(value);\r\n                        that.texts.push(text);\r\n                        that.setState({\r\n                            texts: that.texts,\r\n                        });\r\n                        total += value.byteLength;\r\n                        that.scrollToBottom();\r\n                        pump();\r\n                    }).catch(reject)\r\n                }\r\n                pump();\r\n            });\r\n        }\r\n        try {\r\n            await consume(this.props.res.body.getReader());\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n    render() {\r\n        let {seconds, texts} = this.state;\r\n        return <Page header={seconds>=0? \"编译完成\" : \"编译中...\"} back=\"close\">\r\n            <div id='topDiv' />\r\n            <div id='scrollDiv'\r\n                onDoubleClick={this.doubleClick} \r\n                className='py-2 px-3' \r\n                style={{wordWrap: 'break-word', whiteSpace: 'normal'}}>\r\n                {texts.map((v, i) => <pre style={{whiteSpace: 'pre-wrap'}} key={i}>{v}</pre>)}\r\n            </div>\r\n            {seconds>=0? <div className='px-3 pb-3' style={{color: 'red', fontWeight: 'bold'}}>\r\n                编译完成。共计用时{Math.floor(seconds/1000)}秒\r\n            </div> : undefined}\r\n            <div id='bottomDiv' />\r\n        </Page>;\r\n    }\r\n}","import * as React from 'react';\r\nimport { DevModel } from \"model\";\r\nimport { IdPickProps, createIdPick } from 'createIdPick';\r\nimport { store } from 'store';\r\nimport { Field, FormRow, StringFace, TextAreaFace, TonvaForm, SubmitResult } from 'tonva-react-form';\r\nimport { UQController } from '.';\r\nimport { VPage, nav, Page } from 'tonva-tools';\r\n\r\nconst ServerCaption = (item:DevModel.Server) => {\r\n    let {discription, cloud, ip} = item;\r\n    return <>{discription} {cloud} {ip}</>;\r\n}\r\n\r\nconst idPickServerProps: IdPickProps = {\r\n    caption: '选择服务器',\r\n    searchPlaceHolder: '搜索服务器',\r\n    candidateItems: async (params:any, key:string) => {\r\n        await store.dev.searchServer.first(key);\r\n        return store.dev.searchServer.items;\r\n    },\r\n    moreCandidates: async () => {\r\n        await store.dev.searchServer.more();\r\n    },\r\n    row: (item:DevModel.Server, index:number) => {\r\n        return <div className=\"px-3 py-2\"><ServerCaption {...item} /></div>;\r\n    },\r\n};\r\n\r\nconst urlField:Field = {name: 'url', type: 'string', required:true, maxLength:200};\r\nconst serverField:Field = {name: 'server', type: 'id'};\r\nconst dbTypeField:Field = {name: 'db_type', type: 'string', maxLength:20, defaultValue:'mysql'};\r\nconst dbField:Field = {name: 'db', type: 'string', maxLength:50, required: true};\r\nconst connectionField:Field = {name:'connection', type:'string', maxLength:250};\r\n\r\nconst urlRow = {\r\n    label: 'URL',\r\n    field: urlField,\r\n};\r\n\r\nconst serverRow = {\r\n    label: '服务器', \r\n    field: serverField,\r\n    face: {\r\n        type: 'pick-id', \r\n        initCaption: '请选择服务器', \r\n        pick: createIdPick(idPickServerProps), //this.idPick,\r\n        fromPicked: (item:DevModel.Server)=>{\r\n            return {\r\n                id: item.id, \r\n                caption: <ServerCaption {...item} />,\r\n            };\r\n        },\r\n        itemFromId: (id:number)=>store.cacheServers.get(id),\r\n    },\r\n};\r\n\r\nconst dbTypeRow:FormRow = {\r\n    label: '数据库类型',\r\n    field: dbTypeField,\r\n    face: {\r\n        type: 'string',\r\n        readonly: true,\r\n    } as StringFace\r\n};\r\n\r\nconst dbRow = {\r\n    label: '数据库名字',\r\n    field: dbField,\r\n};\r\n\r\nconst connectionRow = {\r\n    label: '连接字符串',\r\n    field: connectionField,\r\n    face: {\r\n        type: 'textarea',\r\n        maxLength: 250,\r\n        rows: 8,\r\n    } as TextAreaFace,\r\n};\r\n\r\nexport class NewServicePage extends VPage<UQController> {\r\n    private tonvaForm:TonvaForm;\r\n    private formRows:FormRow[] = [\r\n        urlRow,\r\n        serverRow,\r\n        dbTypeRow,\r\n        dbRow,\r\n        connectionRow\r\n    ];\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n    private onSubmit = async (values:any):Promise<SubmitResult | undefined> => {\r\n        values.type = 2; // uq type, to be removed\r\n        values.bindId = this.controller.uq.id;\r\n        let ret = await this.controller.saveService(values);\r\n        if (ret === 0) {\r\n            if (this.tonvaForm !== undefined) {\r\n                this.tonvaForm.formView.setError('url', '已经有Service使用这个url');\r\n            }\r\n            return;\r\n        }\r\n        nav.pop();\r\n        return;\r\n    }\r\n    private page = () => {\r\n        return <Page header=\"新建Service\">\r\n            <TonvaForm ref={t=>this.tonvaForm=t} className=\"m-3\" formRows={this.formRows} onSubmit={this.onSubmit} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { Page, VPage, nav } from \"tonva-tools\";\r\nimport { UQController } from '.';\r\nimport { DevModel } from 'model';\r\nimport { Prop, PropGrid } from 'tonva-react-form';\r\nimport { StringValueEdit, ServerSpan, TextValueEdit } from 'tools';\r\n\r\nexport class ServicePage extends VPage<UQController> {\r\n    @observable private service: DevModel.Service;\r\n    async open(service: DevModel.Service) {\r\n        this.service = service;\r\n        this.openPage(this.page);\r\n    }\r\n    private async changeProp(prop:string, value:any):Promise<any> {\r\n        return await this.controller.changeServiceProp(this.service, prop, value);\r\n    }\r\n    private onUrlChanged = async (value:any, orgValue:any):Promise<string|void> => {\r\n        let ret = await this.changeProp('url', value);\r\n        if (ret === 0) {\r\n            return 'URL已经被使用了';\r\n        }\r\n        this.service.url = value;\r\n    }\r\n    private onDbChanged = async (value:any, orgValue:any):Promise<string|void> => {\r\n        let ret = await this.changeProp('db', value);\r\n        if (ret === 0) {\r\n            return 'Db已经被使用了';\r\n        }\r\n        this.service.db = value;\r\n    }\r\n    private onDbTypeChanged = async (value:string, orgValue:any):Promise<string|void> => {\r\n        if (value === undefined || value === null) return;\r\n        if (value.toLowerCase().trim() !== 'mysql') return '目前只支持mysql';\r\n        let ret = await this.changeProp('db_type', value);\r\n        this.service.db_type = value;\r\n    }\r\n    private onConnectionChanged = async (value:string, orgValue:any):Promise<string|void> => {        \r\n        await this.changeProp('connection', value);\r\n        this.service.connection = value;\r\n    }\r\n    private onDeleteClick = async () => {\r\n        if (confirm(\"真的要删除Service吗？删除了不可恢复，需要重新录入。\")!==true) return;\r\n        await this.controller.delService(this.service);\r\n        nav.pop();\r\n    }\r\n    private page = () => {\r\n        let {uq} = this.controller;\r\n        let {type, name, discription, server, url, db, db_type, connection} = this.service;\r\n        let rows:Prop[] = [\r\n            '',\r\n            /*\r\n            {\r\n                type: 'component',\r\n                component: <div className=\"px-3 py-2\">\r\n                    <b>{name}</b><br/><Muted>{discription}</Muted>\r\n                </div>,\r\n            },\r\n            '',*/\r\n            {\r\n                type: 'string',\r\n                name: 'url',\r\n                label: 'URL',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"修改URL\"\r\n                    value={url}\r\n                    onChanged={this.onUrlChanged} />)\r\n            },\r\n            {\r\n                type: 'component',\r\n                label: '服务器',\r\n                component: <ServerSpan id={server} />\r\n            },\r\n            {\r\n                type: 'string',\r\n                name: 'db_type',\r\n                label: '数据库类型',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"数据库类型\"\r\n                    value={db_type}\r\n                    onChanged={this.onDbTypeChanged} />)\r\n            },\r\n            {\r\n                type: 'string',\r\n                name: 'db',\r\n                label: '数据库名',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"数据库名字\"\r\n                    value={db}\r\n                    onChanged={this.onDbChanged} />)\r\n            },\r\n            {\r\n                type: 'string',\r\n                name: 'connection',\r\n                label: '连接字符串',\r\n                onClick: ()=>nav.push(<TextValueEdit\r\n                    title=\"连接字符串\"\r\n                    value={connection}\r\n                    onChanged={this.onConnectionChanged} />)\r\n            },\r\n        ];\r\n        let right = <button onClick={this.onDeleteClick} className=\"btn btn-success\">删除</button>;\r\n        return <Page header={'UQ - ' + uq.name} right={right}>\r\n            <PropGrid rows={rows} values={this.service} />\r\n        </Page>\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { UQController } from \".\";\r\nimport { VPage, nav, Page } from \"tonva-tools\";\r\nimport { SubmitResult, TonvaForm } from \"tonva-react-form\";\r\n\r\nconst formRows = [\r\n    {\r\n        label: '名称', \r\n        field: {name: 'name', type: 'string', maxLength: 100, required: true},\r\n    },\r\n    {\r\n        label: '描述',\r\n        field: {name: 'discription', type: 'string', maxLength: 250},\r\n        face: {type: 'textarea'}\r\n    },\r\n    //{\r\n    //    label: '入口',\r\n    //    field: {name: 'access', type: 'string', maxLength: 250},\r\n    //    face: {type: 'textarea', placeholder: '逗号分隔的入口名'}\r\n    //},\r\n];\r\n\r\n\r\nexport abstract class EditBasePage extends VPage<UQController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n    protected onSubmit = async (values:any):Promise<SubmitResult> => {\r\n        await this.controller.saveUq(values);\r\n        nav.pop();\r\n        return;\r\n    }\r\n    protected page: ()=>JSX.Element;\r\n    protected form(initValues:any):JSX.Element {\r\n        return <TonvaForm\r\n            className=\"m-3\"\r\n            formRows={formRows} \r\n            onSubmit={this.onSubmit} initValues={initValues} />\r\n    }\r\n}\r\n\r\nexport class EditPage extends EditBasePage {\r\n    protected page = () => {\r\n        let {uq} = this.controller;\r\n        let {name} = uq;\r\n        return <Page header={'修改UQ - ' + name} back=\"close\">\r\n            {this.form(uq)}\r\n        </Page>;\r\n    }\r\n}\r\n\r\nexport class NewPage extends EditBasePage {\r\n    protected page = () => {\r\n        return <Page header={'新建UQ'} back=\"close\">\r\n            {this.form({})}\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, nav } from 'tonva-tools';\r\nimport { UQController } from '.';\r\nimport { IdDates, UnitSpan, ServerSpan } from 'tools';\r\nimport { Prop, Media, LMR, FA, PropGrid, Muted, List, EasyDate, DropdownActions } from 'tonva-react-form';\r\nimport { DevModel } from 'model';\r\nimport { EditPage } from './editPage';\r\n\r\nexport class UQPage extends VPage<UQController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private editItem = async () => {\r\n        await this.openVPage(EditPage);\r\n        //nav.push(<EditAppPage {...this.props} />);\r\n    }\r\n\r\n    private deleteItem = async () => {\r\n        if (confirm('真的要删除UQ吗？') === true) {\r\n            await this.controller.deleteUq();\r\n            nav.pop();\r\n        }\r\n    }\r\n\r\n    private page = ():JSX.Element => {\r\n        let {onUqUpload, serviceClick, uq, services} = this.controller;\r\n        let {id, name, discription, access, unit, date_init, date_update} = uq;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let menuItems = [\r\n            {caption:'修改UQ', action:this.editItem, icon:'edit' },\r\n            {caption:'删除', action:this.deleteItem, icon:'trash-o' }\r\n        ];\r\n        let right = <DropdownActions actions={menuItems} />;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <LMR className=\"py-2\"\r\n                    left={<FA name=\"database\" className=\"text-primary fa-2x mr-3\" />}>\r\n                    <div><b>{name}</b></div>\r\n                    {disp}\r\n                </LMR>\r\n            },\r\n            {\r\n                type: 'component', \r\n                label: '开发号', \r\n                component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> \r\n            },\r\n           '',\r\n           {\r\n                type: 'component', \r\n                label: '编译代码', \r\n                component: <LMR onClick={()=>onUqUpload()} className=\"w-100 py-2 cursor-pointer\" \r\n                    left=\"上传编译uq代码\" right={<FA className=\"align-self-center\" name=\"chevron-right\" />} />\r\n            },\r\n            /*\r\n            {type: 'component', label: 'ACCESS', component: <div className=\"py-2\">{\r\n                access? \r\n                    access.split(',').join(', ')\r\n                    : <Muted>(全)</Muted>\r\n            }</div> },\r\n            */\r\n        ];\r\n        return <Page header={'UQ - ' + name} right={right}>\r\n            <PropGrid rows={rows} values={uq} />\r\n            <div className=\"d-flex mx-3 mt-3 mb-1 align-items-end\">\r\n                <Muted style={{display:'block', flex:1}}>Service</Muted>\r\n                <button\r\n                    className=\"btn btn-outline-primary btn-sm\"\r\n                    onClick={()=>this.controller.showNewServicePage()}>\r\n                    增加\r\n                </button>\r\n            </div>\r\n            <List items={services} item={{render:this.renderService, onClick:serviceClick}} />\r\n        </Page>;\r\n    }\r\n    private renderService(service:DevModel.Service, index:number):JSX.Element {\r\n        let {url, server, db, db_type, compile_time} = service;\r\n        let compile = !compile_time?\r\n            <Muted>未编译</Muted> :\r\n            <><Muted>编译: </Muted><EasyDate date={compile_time}/></>;\r\n\r\n        return <LMR className=\"d-flex w-100 align-items-center cursor-pointer py-2 px-3\"\r\n            right={<small>{compile}</small>}\r\n            >\r\n            <div>\r\n                <div>{url}</div>\r\n                <div>{db_type} {db}</div>\r\n                <Muted><ServerSpan id={server} /></Muted>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { UQController } from '.';\r\nimport { List, LMR, Badge, Muted, FA } from 'tonva-react-form';\r\nimport { DevModel } from 'model';\r\nimport { NewPage } from './editPage';\r\n\r\nexport class ListPage extends VPage<UQController> {\r\n    async open(param:any) {\r\n        this.openPage(this.page);\r\n    }\r\n    private newItem = () => {\r\n        this.openVPage(NewPage);\r\n    }\r\n    private page = ():JSX.Element => {\r\n        let {uqList: list, listRowClick} = this.controller;\r\n        let right = <button className='btn btn-secondary btn-sm' onClick={()=>this.newItem()}><FA name=\"plus\" /></button>;\r\n        return <Page header=\"UQ\" right={right}>\r\n            <List items={list} item={{render: this.listRow, onClick: listRowClick}} />\r\n        </Page>\r\n    }\r\n    private listRow = (item:DevModel.UQ):JSX.Element => {\r\n        let {name, discription, service_count} = item;\r\n        return <LMR className=\"py-1 px-3 align-items-center\"\r\n            left={<FA name=\"database\" className=\"text-primary fa-lg\" />}\r\n            right={<>{service_count}</>}>\r\n            <div className=\"py-2 px-3\">\r\n                <div><b>{name}</b></div>\r\n                <div><Muted>{discription}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { observable } from 'mobx';\r\nimport { nav, Page, Controller, meInFrame, VPage } from 'tonva-tools';\r\nimport { DevModel } from '../../model';\r\nimport { UqUpload, UpUploadProps } from './uqUpload';\r\nimport { devApi } from 'api';\r\nimport { NewServicePage } from './newServicePage';\r\nimport { ServicePage } from './servicePage';\r\nimport { UQPage } from './uqPage';\r\nimport { ListPage } from './listPage';\r\n\r\nexport class UQController extends Controller {\r\n    private unitId: number;\r\n    uq: DevModel.UQ;\r\n    access: string;\r\n    entities: string;\r\n    @observable uqList: DevModel.UQ[];\r\n    @observable services: DevModel.Service[];\r\n    protected async internalStart(unitId:any) {\r\n        this.unitId = unitId;\r\n        this.uqList = await devApi.uqs(this.unitId);\r\n        this.openVPage(ListPage);\r\n    }\r\n\r\n    listRowClick = async (item:DevModel.UQ) => {\r\n        this.uq = item;\r\n        await this.loadUqEntities(item.id);\r\n        this.openVPage(UQPage);\r\n    }\r\n\r\n    private async loadUqEntities(uqId: number) {\r\n        let ret = await devApi.uqGetEntities(this.unitId, uqId);\r\n        let r0 = ret[0][0];\r\n        this.access = r0.access;\r\n        this.entities = r0.entities;\r\n        this.services = ret[1];\r\n    }\r\n\r\n    serviceClick = (service: DevModel.Service) => {\r\n        this.openVPage(ServicePage, service);\r\n    }\r\n\r\n    onUqUpload = async() => {\r\n        let onDispose = () => {\r\n        };\r\n        nav.push(<UqUpload uq={this.uq} services={this.services} />, onDispose);\r\n    }\r\n\r\n    saveUq = async (values: DevModel.UQ) => {\r\n        let uq = _.clone(this.uq);\r\n        _.merge(uq, values);\r\n        uq.unit = this.unitId;\r\n        let ret = await devApi.saveUq(uq);\r\n        uq.id = ret;\r\n        this.uqList.push(uq);\r\n    }\r\n\r\n    deleteUq = async () => {\r\n        await devApi.delUq(this.unitId, this.uq.id);\r\n        let index = this.uqList.findIndex(v => v.id === this.uq.id);\r\n        if (index >= 0) this.uqList.splice(index);\r\n    }\r\n\r\n    async changeServiceProp(service: DevModel.Service, prop:string, value:any):Promise<any> {\r\n        return await devApi.changeServiceProp(this.unitId, service.id, prop, value);\r\n    }\r\n\r\n    async saveService(service: DevModel.Service):Promise<number> {\r\n        let svc = _.clone(service);\r\n        svc.unit = this.unitId;\r\n        let ret = await devApi.saveService(svc);\r\n        svc.id = ret;\r\n        this.services.push(svc);\r\n        return ret;\r\n    }\r\n\r\n    async delService(service: DevModel.Service) {\r\n        await devApi.delService(this.unitId, service.id);\r\n        let index = this.services.findIndex(v => v.id == service.id);\r\n        if (index >= 0) this.services.splice(index);\r\n    }\r\n\r\n    showNewServicePage = async () => {\r\n        await this.openVPage(NewServicePage);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {LMR, Badge, Muted} from 'tonva-react-form';\r\n\r\nexport interface RowProps {\r\n    icon: string;\r\n    main: string|JSX.Element;\r\n    vice: string|JSX.Element;\r\n}\r\n\r\nexport class Row extends React.Component<RowProps> {\r\n    render() {\r\n        let {icon, main, vice} = this.props;\r\n        return <LMR className=\"py-1 px-3 align-items-stretch\"\r\n            left={<Badge size=\"sm\" className=\"pt-1\"><img src={icon} /></Badge>}>\r\n            <div className=\"px-3\">\r\n                <div><b>{main}</b></div>\r\n                <div><Muted>{vice}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport _ from 'lodash';\r\nimport {FormRow, EasyDate, Media, \r\n    Prop, ListProp, PropGrid, List, SearchBox, LMR, Badge, Muted} from 'tonva-react-form';\r\nimport {UnitSpan, IdDates, ServerSpan} from '../tools';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {DevModel} from '../model';\r\nimport {store} from '../store';\r\nimport {Row} from './row';\r\nimport {ObjViewProps} from './ObjViewProps';\r\n\r\n@observer\r\nclass Info extends React.Component<DevModel.Bus> {\r\n    /*\r\n    private rows: Prop[];\r\n    constructor(props:any) {\r\n        super(props);\r\n        let {unit, name, discription, schema, date_init, date_update} = this.props;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={name} discription={disp} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                label: 'Schema',\r\n                vAlign: 'stretch',\r\n                component: <SchemaView />,\r\n            },\r\n        ];\r\n    }*/\r\n    async componentDidMount() {\r\n        //await store.dev.buses.loadCurApis();\r\n    }\r\n    render() {\r\n        let {unit, name, discription, schema, date_init, date_update} = this.props;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={name} discription={disp} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                label: 'Schema',\r\n                vAlign: 'stretch',\r\n                component: <SchemaView />,\r\n            },\r\n        ];\r\n        return <div>\r\n            <PropGrid rows={rows} values={this.props} />\r\n        </div>\r\n    }\r\n}\r\n\r\n@observer\r\nexport class SchemaView extends React.Component {\r\n    render() {\r\n        let bus = store.dev.buses.cur;\r\n        if (bus === null) return '...';\r\n        let content = bus.schema;\r\n        return <div className=\"d-flex py-2 w-100 align-items-center\" style={{flex:1}}>\r\n            <pre>\r\n                {content}\r\n            </pre>\r\n        </div>;\r\n\r\n    }\r\n}\r\n\r\nconst busesProps:ObjViewProps<DevModel.Bus> = {\r\n    title: 'BUS',\r\n    formRows: [\r\n        {\r\n            label: '名称', \r\n            field: {name: 'name', type: 'string', maxLength: 100, required: true},\r\n        },\r\n        {\r\n            label: '描述',\r\n            field: {name: 'discription', type: 'string', maxLength: 250},\r\n            face: {type: 'textarea'}\r\n        },\r\n        {\r\n            label: 'Schema',\r\n            field: {name: 'schema', type: 'string', maxLength: 2500},\r\n            face: {type: 'textarea', rows: 8}\r\n        },\r\n    ],\r\n    row: (item:DevModel.Bus):JSX.Element => {\r\n        let {owner, name, discription} = item;\r\n        return <Row icon={appItemIcon} main={owner + ' / ' + name} vice={discription} />;\r\n    },\r\n    items: ()=>store.dev.buses,\r\n    repeated: {\r\n        name: 'name',\r\n        err: '跟已有的名称重复',\r\n    },\r\n    info: Info,\r\n};\r\n\r\nexport default busesProps;\r\n","import * as React from 'react';\r\nimport {Prop, PropGrid, LMR, Muted, FA} from 'tonva-react-form';\r\nimport {UnitSpan, IdDates} from '../tools';\r\nimport {DevModel} from '../model';\r\nimport {store} from '../store';\r\nimport {ObjViewProps} from './ObjViewProps';\r\n\r\nclass Info extends React.Component<DevModel.Server> {\r\n    render() {\r\n        let {discription, cloud, ip, unit, date_init, date_update} = this.props;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;        \r\n        //<Media icon={appIcon} main={discription} discription={ip} />},\r\n        let rows:Prop[] = [\r\n            '',\r\n            {type: 'component', component: <LMR className=\"py-2\"\r\n                left={<FA name=\"server\" className=\"text-primary fa-2x mr-3\" />}>\r\n                <div><b>{ip}</b></div>\r\n                {disp}\r\n            </LMR>},\r\n            '',\r\n            {type: 'component', label: '开发号', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            {type: 'string', label: '云服务', name: 'cloud'},\r\n        ];\r\n        return <div>\r\n            <PropGrid rows={rows} values={this.props} />\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst serversProps:ObjViewProps<DevModel.Server> = {\r\n    title: 'Server',\r\n    info: Info,\r\n    formRows: [\r\n        {\r\n            label: '描述', \r\n            field: {name: 'discription', type: 'string', maxLength: 50, required: true},\r\n        },\r\n        {\r\n            label: '云服务商', \r\n            field: {name: 'cloud', type: 'string', maxLength: 20, required: true},\r\n        },\r\n        {\r\n            label: 'IP地址', \r\n            field: {name: 'ip', type: 'string', maxLength: 20},\r\n        },\r\n    ],\r\n    row: (item: DevModel.Server):JSX.Element => {\r\n        let {discription, cloud} = item;\r\n        //return <Row main={item.discription} vice={<>{item.cloud}  {item.ip}</>} />;\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n            left={<FA name=\"server\" className=\"text-primary fa-lg\" />}>\r\n            <div className=\"px-3\">\r\n                <div><b>{discription}</b></div>\r\n                <div><Muted>{cloud}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    },\r\n    items: ()=>store.dev.servers,\r\n    repeated: {\r\n        name: 'discription',\r\n        err: '重复的描述',\r\n    }\r\n};\r\n\r\nexport default serversProps;\r\n","import * as React from 'react';\r\nimport {Step, Field, Prop, PropGrid, Media} from 'tonva-react-form';\r\nimport {UnitSpan, IdDates, ServerSpan, UqSpan, AppSpan} from '../tools';\r\nimport {Row} from './row';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {DevModel} from '../model';\r\nimport {store} from '../store';\r\nimport {ObjViewProps} from './ObjViewProps';\r\nimport {createIdPick, IdPickProps} from '../createIdPick';\r\n\r\nclass Info extends React.Component<DevModel.Service> {\r\n    render() {\r\n        let {url, type, discription, server, app, uq, unit, date_init, date_update} = this.props;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let obj:Prop;\r\n        if (app !== undefined)\r\n            obj = {type: 'component', label: 'APP', component: <div className=\"py-2\"><AppSpan id={app} isLink={true} /></div> };\r\n        else\r\n            obj = {type: 'component', label: 'UQ', component: <div className=\"py-2\"><UqSpan id={uq} isLink={true} /></div> };\r\n\r\n        let rows:Prop[] = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={discription} discription={url} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            {type: 'component', label: '服务器', component: <div className=\"py-2\"><ServerSpan id={server} isLink={true} /></div> },\r\n            obj,\r\n        ];\r\n        return <div>\r\n            <PropGrid rows={rows} values={this.props} />\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst idPickServerProps: IdPickProps = {\r\n    caption: '选择服务器',\r\n    searchPlaceHolder: '搜索服务器',\r\n    candidateItems: async (params:any, key:string) => {\r\n        await store.dev.searchServer.first(key);\r\n        return store.dev.searchServer.items;\r\n    },\r\n    moreCandidates: async () => {\r\n        await store.dev.searchServer.more();\r\n    },\r\n    row: (item:DevModel.Server, index:number) => {\r\n        return <div className=\"px-3 py-2\">{item.discription + ' ' + item.cloud + ' ' + item.ip}</div>;\r\n    },\r\n};\r\n\r\nconst idPickAppProps: IdPickProps = {\r\n    caption: '选择APP',\r\n    searchPlaceHolder: '搜索APP',\r\n    candidateItems: async (params:any, key:string) => {\r\n        await store.dev.searchApp.first(key);\r\n        return store.dev.searchApp.items;\r\n    },\r\n    moreCandidates: async () => {\r\n        await store.dev.searchApp.more();\r\n    },\r\n    row: (item:DevModel.App, index:number) => {\r\n        return <div>{item.name + ' ' + item.discription}</div>;\r\n    },\r\n};\r\n\r\nconst idPickUqProps: IdPickProps = {\r\n    caption: '选择UQ',\r\n    searchPlaceHolder: '搜索UQ',\r\n    candidateItems: async (params:any, key:string) => {\r\n        await store.dev.searchUq.first(key);\r\n        return store.dev.searchUq.items;\r\n    },\r\n    moreCandidates: async () => {\r\n        await store.dev.searchUq.more();\r\n    },\r\n    row: (item:DevModel.UQ, index:number) => {\r\n        return <div>{item.name + ' ' + item.discription}</div>;\r\n    },\r\n};\r\n\r\nconst serviceTypeNames = ['中心', '交换', 'APP', 'UQ'];\r\nconst urlField:Field = {name: 'url', type: 'string', required:true, maxLength:200};\r\nconst discriptionField:Field = {name: 'discription', type: 'string', maxLength:100};\r\nconst serverField:Field = {name: 'server', type: 'id'};\r\nconst bindTypeField:Field = {name: 'type', type: 'number'};\r\nconst bindIdField:Field = {name: 'bindId', type: 'number'};\r\nconst authField:Field = {name: 'auth', type: 'string', maxLength:200};\r\n\r\nconst urlRow = {\r\n    label: 'URL',\r\n    field: urlField,\r\n};\r\nconst discriptionRow = {\r\n    label: '描述',\r\n    field: discriptionField,\r\n};\r\n\r\nconst serverRow = {\r\n    label: '服务器', \r\n    field: serverField,\r\n    face: {\r\n        type: 'pick-id', \r\n        initCaption: '请选择服务器', \r\n        pick: createIdPick(idPickServerProps), //this.idPick,\r\n        fromPicked: (item:DevModel.Server)=>{\r\n            return {\r\n                id: item.id, \r\n                caption: item.discription + ' ' + item.ip,\r\n            };\r\n        },\r\n        itemFromId: (id:number)=>store.cacheServers.get(id),\r\n    },\r\n};\r\n\r\nconst servicesProps:ObjViewProps<DevModel.Service> = {\r\n    title: 'Service',\r\n    info: Info,\r\n    formRows: [\r\n        urlRow,\r\n        discriptionRow,\r\n        serverRow,\r\n    ],\r\n    steps: {\r\n        step1: {\r\n            formRows: [\r\n                {\r\n                    label: '服务类型', \r\n                    field: bindTypeField,\r\n                    face: {\r\n                        type: 'select', \r\n                        list: [\r\n                            {text:'APP', value:2}, \r\n                            {text:'UQ', value:3}\r\n                        ]\r\n                    }\r\n                },\r\n            ],\r\n            next: (values:any) => {\r\n                switch (values['type']) {\r\n                    case 2: return 'appStep';\r\n                    case 3: return 'uqStep';\r\n                }\r\n            },\r\n            ex: '服务类型',\r\n        },\r\n        appStep: {\r\n            formRows: [\r\n                urlRow,\r\n                discriptionRow,\r\n                serverRow,\r\n                {\r\n                    label: 'APP', \r\n                    field: bindIdField,\r\n                    face:{\r\n                        type: 'pick-id', \r\n                        initCaption: '请选择APP', \r\n                        pick: createIdPick(idPickAppProps), //this.idPick,\r\n                        fromPickedItem: (item:DevModel.App)=>{\r\n                            return {id: item.id, caption: item.name + ' ' + item.discription}\r\n                        },\r\n                    },\r\n                },\r\n            ],\r\n            next: undefined,\r\n            ex: '绑定APP'\r\n        },\r\n        uqStep: {\r\n            formRows: [\r\n                urlRow,\r\n                discriptionRow,\r\n                serverRow,\r\n                {\r\n                    label: 'UQ', \r\n                    field: bindIdField,\r\n                    face:{\r\n                        type: 'pick-id', \r\n                        initCaption: '请选择UQ', \r\n                        pick: createIdPick(idPickUqProps), //this.idPick,\r\n                        fromPickedItem: (item:DevModel.UQ)=>{\r\n                            return {id: item.id, caption: item.name + ' ' + item.discription}\r\n                        },\r\n                    },\r\n                },                \r\n                { label: 'Auth', field: authField },\r\n            ],\r\n            next: undefined,\r\n            ex: '绑定UQ',\r\n        },\r\n    },\r\n    stepHeader: (step:Step, num:number):JSX.Element => {\r\n        return <div className=\"d-flex justify-content-center align-items-center\">\r\n            <h4><small className=\"text-muted\">第{num}步</small> {step.ex}</h4>\r\n        </div>;\r\n    },\r\n    row: (item:DevModel.Service):JSX.Element => {\r\n        return <Row\r\n            icon={appItemIcon}\r\n            main={item.url}\r\n            vice={serviceTypeNames[item.type] + ': ' + item.discription} />;\r\n    },\r\n    items: ()=>store.dev.services,\r\n    repeated: {\r\n        name: 'url',\r\n        err: 'url重复',\r\n    }\r\n};\r\n\r\nexport default servicesProps;\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {FormRow, TonvaForm, Step, MultiStep, DropdownActions, Action, List, FA, SubmitResult} from 'tonva-react-form';\r\nimport {DevModel} from '../model';\r\nimport { ObjViewProps } from './ObjViewProps';\r\n\r\n@observer\r\nexport class ObjView<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    async componentDidMount() {\r\n        await this.props.items().load();\r\n    }\r\n    //converter(item:T):ListItem {\r\n    //    return this.props.converter(item);\r\n    //}\r\n    newItem() {\r\n        this.props.items().cur = undefined;\r\n        nav.push(<New {...this.props} />);\r\n    }\r\n    itemClick = (item:T) => {\r\n        this.props.items().cur = observable(item);\r\n        nav.push(<Info {...this.props} />);\r\n    }\r\n    render() {\r\n        let {title, items} = this.props;\r\n        let right = <button className='btn btn-secondary btn-sm' onClick={()=>this.newItem()}><FA name=\"plus\" /></button>;\r\n        return <Page header={title} right={right}>\r\n            <List items={items().items}\r\n                item={{render: this.props.row, onClick: this.itemClick}}\r\n                // converter={this.props.converter} \r\n                //itemClick={this.itemClick} \r\n                />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass New<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    async onSubmit(values:any):Promise<SubmitResult> {\r\n        let ret = await this.props.items().saveCur(values);\r\n        if (ret === true) {\r\n            nav.pop();\r\n        }\r\n        else {\r\n            let repeated = this.props.repeated;\r\n            //this.formView.setError(repeated.name, repeated.err);\r\n        }\r\n        return;\r\n    }\r\n    render() {\r\n        let content;\r\n        let {title, steps, stepHeader} = this.props;\r\n        let {formRows, items} = this.props;\r\n        if (steps !== undefined) {\r\n            content = <MultiStep className=\"mt-4\" header={stepHeader} steps={steps} first=\"step1\" onSubmit={this.onSubmit} />;\r\n        }\r\n        else if (formRows !== undefined) {\r\n            content = <TonvaForm \r\n                className=\"m-3\"\r\n                formRows={formRows} \r\n                onSubmit={this.onSubmit} initValues={items().cur} />;\r\n        }\r\n        else {\r\n            content = \"ObjViewProps: no steps and no formRows\";\r\n        }\r\n        return <Page header={'新增'+title}>\r\n            {content}\r\n        </Page>\r\n    }\r\n}\r\n\r\n@observer\r\nclass Info<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    private menuItems = [\r\n        {caption:'修改' + this.props.title, action:this.editItem.bind(this), icon:'edit' },\r\n        {caption:'删除', action:this.deleteItem.bind(this), icon:'trash-o' }\r\n    ];\r\n    async deleteItem() {\r\n        if (confirm('真的要删除吗？系统删除时并不会检查相关引用，请谨慎') === true) {\r\n            await this.props.items().del();\r\n            nav.pop();\r\n        }\r\n    }\r\n    editItem() {\r\n        nav.push(<Edit {...this.props} />);\r\n    }\r\n    render() {\r\n        let actions = [];\r\n        let ex = this.props.extraMenuActions;\r\n        if (ex !== undefined) actions.push(...ex);\r\n        actions.push(...this.menuItems);        \r\n        let right = <DropdownActions actions={actions} />\r\n        let item = this.props.items().cur;\r\n        return <Page header={this.props.title + ' - 详细资料'} right={right}>\r\n            <this.props.info {...item} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass Edit<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    private actions = [\r\n        {caption:'删除', action:this.deleteItem.bind(this), icon:'trash-o' }\r\n    ];\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    componentWillMount() {\r\n    }\r\n    async onSubmit(values:any):Promise<SubmitResult> {\r\n        await this.props.items().saveCur(values);\r\n        nav.pop();\r\n        return;\r\n    }\r\n    async deleteItem() {\r\n        if (confirm('真的要删除吗？系统删除时并不会检查相关引用，请谨慎') === true) {\r\n            await this.props.items().del();\r\n            nav.pop();\r\n        }\r\n    }\r\n    render() {\r\n        let right = <DropdownActions actions={this.actions} />\r\n        return <Page header={'修改 '+this.props.title} right={right} back=\"close\">\r\n            <TonvaForm \r\n                className=\"m-3\"\r\n                formRows={this.props.formRows} \r\n                onSubmit={this.onSubmit} initValues={this.props.items().cur} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { List, SearchBox, LMR, FA } from 'tonva-react-form';\r\nimport { UsersController, UserApps, AppUsers } from './cUsers';\r\n\r\nexport class VApps extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private renderRow = (appUsers: AppUsers, index:number):JSX.Element => {\r\n        let {app, users} = appUsers;\r\n        let {id, name, discription} = app;\r\n        let right = <small className=\"text-muted\">{discription}</small>;\r\n        return <div className=\"d-block px-3 py-2\">\r\n            <LMR className=\"mb-2\" right={right}>\r\n                <FA name=\"address-card-o\" className=\"text-primary mr-3\" />\r\n                <b>{name}</b>\r\n            </LMR>\r\n            <div>\r\n                <small className=\"text-muted\">用户: </small>\r\n                {users.length===0?'[无]':users.map(u => u.assigned || u.nick || u.name).join(', ')}\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {appUsersList, searchApp, onAppsClick} = this.controller;\r\n        let searchBox = <SearchBox className=\"w-100 pr-1\" \r\n            onSearch={searchApp} \r\n            placeholder=\"搜索App\" \r\n            allowEmptySearch={true} />;\r\n        return <Page header={searchBox}>\r\n            <List items={appUsersList} \r\n                item={{render: this.renderRow, onClick:onAppsClick,  key: (item=>item.app.id)}} />\r\n        </Page>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { List, SearchBox, LMR, FA } from 'tonva-react-form';\r\nimport { UsersController, UserApps } from './cUsers';\r\n\r\nexport class VUsers extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private renderRow = (userApps: UserApps, index:number):JSX.Element => {\r\n        let {user, apps} = userApps;\r\n        let {id, name, nick, icon, assigned} = user;\r\n        return <div className=\"d-block px-3 py-2\">\r\n            <div className=\"mb-2\">\r\n                <FA name=\"user-o\" className=\"text-primary mr-3\" />\r\n                <b>{assigned || nick || name}</b>\r\n            </div>\r\n            <div>\r\n                <small className=\"text-muted\">App: </small>\r\n                {apps.length===0?'[无]':apps.map(a => a.name).join(', ')}\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {userAppsList, searchUser, onUsersClick} = this.controller;\r\n        let searchBox = <SearchBox className=\"w-100 pr-1\" \r\n            onSearch={searchUser} \r\n            placeholder=\"搜索用户\" \r\n            allowEmptySearch={true} />;\r\n        return <Page header={searchBox}>\r\n            <List items={userAppsList} \r\n                item={{render: this.renderRow, onClick:onUsersClick, key: (item=>item.user.id)}} />\r\n        </Page>;\r\n    });\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { List, SearchBox, LMR, Muted } from 'tonva-react-form';\r\nimport { UsersController, UserApps, AppUsers, User } from './cUsers';\r\n\r\nexport class VApp extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curApp, curAppUsers, onAppEditUsers} = this.controller;\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={()=>onAppEditUsers()}>增减用户</button>;\r\n        return <Page header={'App - ' + (curApp.name)} right={right}>\r\n            <List items={curAppUsers} item={{render:this.renderApp}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderApp = (user: User, index:number):JSX.Element => {\r\n        let {name, nick, assigned} = user;\r\n        let content:any;\r\n        if (assigned)\r\n            content = <span>{assigned} &nbsp; <small className=\"text-muted\">{name}</small></span>;\r\n        else if (nick)\r\n            content = <span>{nick} &nbsp; <small className=\"text-muted\">{name}</small></span>;\r\n        else\r\n            content = <>{name}</>\r\n        return <div className=\"px-3 py-2\">{content}</div>\r\n    }\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { List, SearchBox, LMR } from 'tonva-react-form';\r\nimport { UsersController, UserApps, AppUsers, App } from './cUsers';\r\n\r\nexport class VUser extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curUser, curUserApps, onUserEditApps} = this.controller;\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={()=>onUserEditApps()}>增减App</button>;\r\n        return <Page header={'用户 - ' + (curUser.assigned || curUser.nick || curUser.name)}\r\n            right={right}>\r\n            <List items={curUserApps} item={{render:this.renderApp}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderApp = (app: App, index:number):JSX.Element => {\r\n        let {name, discription} = app;\r\n        return <div className=\"px-3 py-2\">{name} {discription}</div>\r\n    }\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { List, SearchBox, LMR, Muted, FA } from 'tonva-react-form';\r\nimport { UsersController, UserApps, AppUsers, User, EditUser } from './cUsers';\r\n\r\nexport class VAppEditUsers extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curApp, appEditUsers, onAppEditUsers} = this.controller;\r\n        return <Page header={curApp.name + ' - 增减用户'} >\r\n            <List items={appEditUsers} item={{render:this.renderUser}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderUser = (editUser: EditUser, index:number):JSX.Element => {\r\n        let {name, nick, assigned, bind} = editUser;\r\n        let content:any;\r\n        if (assigned)\r\n            content = <>{assigned} <Muted>{name}</Muted></>;\r\n        else if (nick)\r\n            content = <>{nick} <Muted>{name}</Muted></>;\r\n        else\r\n            content = <>{name}</>\r\n        let right = <input type=\"checkbox\" defaultChecked={bind===1} \r\n            onChange={(evt)=>this.onUserChanged(editUser, evt.target.checked)} />;\r\n        return <LMR className=\"px-3 py-2 align-items-center\" right={right}>\r\n            {content}\r\n        </LMR>\r\n    }\r\n\r\n    private onUserChanged = async (editUser: EditUser, checked:boolean) => {\r\n        await this.controller.bindAppUser(editUser, checked);\r\n        editUser.bind = checked===true? 1: 0;\r\n    }\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { List, SearchBox, LMR } from 'tonva-react-form';\r\nimport { UsersController, UserApps, AppUsers, App, EditApp } from './cUsers';\r\n\r\nexport class VUserEditApps extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curUser, userEditApps, onUserEditApps} = this.controller;\r\n        return <Page header={'增减App - ' + (curUser.assigned || curUser.nick || curUser.name)}>\r\n            <List items={userEditApps} item={{render:this.renderApp}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderApp = (editApp: EditApp, index:number):JSX.Element => {\r\n        let {name, discription, bind} = editApp;\r\n        let right = <input type=\"checkbox\" defaultChecked={bind===1} \r\n            onChange={(evt)=>this.onAppChanged(editApp, evt.target.checked)} />;\r\n        return <LMR className=\"px-3 py-2\" right={right}>\r\n            {name} {discription}\r\n        </LMR>\r\n    }\r\n\r\n    private onAppChanged = async (editApp: EditApp, checked:boolean) => {\r\n        await this.controller.bindUserApp(editApp, checked);\r\n        editApp.bind = checked===true? 1: 0;\r\n    }\r\n}","import * as React from 'react';\r\nimport { VPage, Page, Image, nav } from \"tonva-tools\";\r\nimport { UsersController, User } from \"./cUsers\";\r\nimport { SearchBox } from 'tonva-react-form';\r\nimport { mainApi } from 'api';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class VAddUser extends VPage<UsersController> {\r\n    @observable private user: User = null;\r\n    //@observable private addedUser: User;\r\n    private searchBox: SearchBox;\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(():JSX.Element => {\r\n        let searchBox = <SearchBox ref={v=>this.searchBox=v}\r\n            className=\"w-100\"\r\n            onSearch={this.onSearch}\r\n            onFocus={this.onSearchFocus}\r\n            placeholder=\"用户全名/手机号/邮箱\"\r\n             />;\r\n        let content:any;\r\n        if (this.user === null) {\r\n        }\r\n        else if (this.user === undefined) {\r\n            content = <div className=\"text-info p-3\">没有找到用户</div>;\r\n        }\r\n        else {\r\n            let {name, nick, icon} = this.user;\r\n            let divUser:any;\r\n            if (nick) {\r\n                divUser = <><div><b>{nick}</b></div><div>{name}</div></>;\r\n            }\r\n            else {\r\n                divUser = <div><b>{name}</b></div>;\r\n            }\r\n            content = <div>\r\n                <div className=\"m-3 p-3 d-flex bg-white\">\r\n                    <Image src={icon} />\r\n                    <div className=\"ml-3\">{divUser}</div>\r\n                </div>\r\n                <div className=\"d-flex justify-content-center\">\r\n                    <button className=\"btn btn-success text-center\" onClick={this.onAddUser}>增加用户</button>\r\n                </div>\r\n            </div>;\r\n        }\r\n        /*\r\n        let divUserAdded:any;\r\n        if (this.addedUser) {\r\n            divUserAdded = <div className=\"p-3\">\r\n                <div>\r\n                    新增用户: {this.addedUser.name} &nbsp; &nbsp; \r\n                    <button className=\"btn btn-success\" \r\n                        onClick={()=>this.controller.onUserEditApps()}>\r\n                        为用户添加App\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        }\r\n        */\r\n        return <Page header={searchBox}>\r\n            {content}\r\n        </Page>;\r\n    })\r\n    //{divUserAdded}\r\n\r\n    private onSearch = async (key:string) => {\r\n        this.user = await mainApi.userFromKey(key);\r\n    }\r\n\r\n    private onAddUser = async () => {\r\n        await this.controller.addUser(this.user.id);\r\n        this.controller.curUser = this.user;\r\n        this.user = null;\r\n        this.searchBox.clear();\r\n        this.replacePage(this.addedPage);\r\n    }\r\n\r\n    private onSearchFocus = () => {\r\n        this.user = null;\r\n        //this.addedUser = null;\r\n        if (this.searchBox) this.searchBox.clear();\r\n    }\r\n\r\n    private onAddApps = () => {\r\n        this.closePage();\r\n        this.controller.onUserEditApps();\r\n    }\r\n\r\n    private onContinueAddUser = () => {\r\n        this.closePage();\r\n        this.controller.onAddUser();\r\n    }\r\n\r\n    private addedPage = () => {\r\n        return <Page header=\"添加成功\">\r\n            <div className=\"p-3 text-center\">\r\n                <div>\r\n                    新增用户: {this.controller.curUser.name}\r\n                </div>\r\n                <div className=\"mt-3\">\r\n                    <button className=\"btn btn-success mr-3\" \r\n                        onClick={this.onAddApps}>\r\n                        为用户添加App\r\n                    </button>\r\n                    <button className=\"btn btn-outline-primary\"\r\n                        onClick={this.onContinueAddUser}>\r\n                        继续添加新用户\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { Controller, VPage, Page } from \"tonva-tools\";\r\nimport { mainApi } from 'api';\r\nimport { LMR, FA } from 'tonva-react-form';\r\nimport { VApps } from './vApps';\r\nimport { VUsers } from './vUsers';\r\nimport { VApp } from './vApp';\r\nimport { VUser } from './vUser';\r\nimport { VAppEditUsers } from './vAppEditUsers';\r\nimport { VUserEditApps } from './vUserEditApps';\r\nimport { VAddUser } from './VAddUser';\r\nimport { Unit } from 'model';\r\n\r\nexport interface User {\r\n    id: number;\r\n    name: string;\r\n    nick: string;\r\n    icon: string;\r\n    assigned: string;\r\n}\r\nexport interface App {\r\n    id: number;\r\n    name: string;\r\n    discription: string;\r\n}\r\nexport interface UserApps {\r\n    user: User;\r\n    apps: App[];\r\n}\r\nexport interface AppUsers {\r\n    app: App;\r\n    users: User[];\r\n}\r\nexport interface EditApp extends App {\r\n    bind: number;   // 0: not bind, 1: bind\r\n}\r\nexport interface EditUser extends User {\r\n    bind: number;  // 0: not bind, 1: bind\r\n}\r\n\r\nexport class UsersController extends Controller {\r\n    private unit: Unit;\r\n    @observable userAppsList: UserApps[];\r\n    @observable appUsersList: AppUsers[];\r\n    curUser: User;\r\n    @observable curUserApps: App[];\r\n    @observable userEditApps: EditApp[];\r\n    curApp: App;\r\n    @observable curAppUsers: User[];\r\n    @observable appEditUsers: EditUser[];\r\n\r\n    protected async internalStart(unit:Unit) {\r\n        this.unit = unit;\r\n        let cn = \"bg-white px-3 py-2 my-1\";\r\n        let appIcon = <FA name=\"columns\" className=\"text-primary mr-3\" />;\r\n        let userIcon = <FA name=\"user-plus\" className=\"text-primary mr-3\" />;\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={this.onAddUser}><FA name=\"plus\" /></button>;\r\n        this.openPage(<Page header={'用户管理 - ' +  this.unit.name} right={right}>\r\n            <LMR className={cn} onClick={this.onAppUsers} left={appIcon}>App</LMR>\r\n            <LMR className={cn} onClick={this.onUserApps} left={userIcon}>用户</LMR>\r\n        </Page>);\r\n    }\r\n\r\n    private onAppUsers = async () => {\r\n        await this.loadAppUsers(undefined);\r\n        this.openVPage(VApps);\r\n    }\r\n\r\n    private onUserApps = async () => {\r\n        await this.loadUserApps(undefined);\r\n        this.openVPage(VUsers);\r\n    }\r\n\r\n    private async loadAppUsers(key:string) {\r\n        let list:AppUsers[] = [];\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        let ret = await mainApi.unitAppUsers(this.unit.id, key, pageStart, pageSize);\r\n        let apps = ret[0];\r\n        let users = ret[1];\r\n        let coll: {[id:number]:AppUsers} = {}\r\n        for (let a of apps) {\r\n            let app:App = {\r\n                id: a.id,\r\n                name: a.name,\r\n                discription: a.discription,\r\n            };\r\n            list.push(coll[a.id] = {app:app, users:[]});\r\n        }\r\n        for (let u of users) {\r\n            let user:User = {\r\n                id: u.user,\r\n                name: u.name,\r\n                nick: u.nick,\r\n                icon: u.icon,\r\n                assigned: u.assigned\r\n            }\r\n            coll[u.app].users.push(user);\r\n        }\r\n        this.appUsersList = list;\r\n    }\r\n\r\n    private async loadUserApps(key:string) {\r\n        let list:UserApps[] = [];\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        let ret = await mainApi.unitUsers(this.unit.id, key, pageStart, pageSize);\r\n        let users = ret[0];\r\n        let apps = ret[1];\r\n        let coll: {[id:number]:UserApps} = {}\r\n        for (let u of users) {\r\n            let user:User = {\r\n                id: u.id,\r\n                name: u.name,\r\n                nick: u.nick,\r\n                icon: u.icon,\r\n                assigned: u.assigned\r\n            };\r\n            list.push(coll[u.id] = {user:user, apps:[]});\r\n        }\r\n        for (let a of apps) {\r\n            let app:App = {\r\n                id: a.app,\r\n                name: a.name,\r\n                discription: a.discription,\r\n            }\r\n            coll[a.user].apps.push(app);\r\n        }\r\n        this.userAppsList = list;\r\n    }\r\n\r\n    searchUser = async(key:string) => {\r\n        await this.loadUserApps(key);\r\n    }\r\n\r\n    searchApp = async(key:string) => {\r\n        await this.loadAppUsers(key);\r\n    }\r\n\r\n    onAppsClick = async (appUsers: AppUsers) => {\r\n        this.curApp = appUsers.app;\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.curAppUsers = await mainApi.unitOneAppUsers(this.unit.id, this.curApp.id, pageStart, pageSize);\r\n        this.openVPage(VApp);\r\n    }\r\n\r\n    onUsersClick = async (userApps: UserApps) => {\r\n        this.curUser = userApps.user;\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.curUserApps = await mainApi.unitOneUserApps(this.unit.id, this.curUser.id, pageStart, pageSize);\r\n        this.openVPage(VUser);\r\n    }\r\n\r\n    onAppEditUsers = async (key?:string) => {\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.appEditUsers = await mainApi.unitAppEditUsers(this.unit.id, this.curApp.id, key, pageStart, pageSize);\r\n        this.openVPage(VAppEditUsers);\r\n    }\r\n\r\n    onAddUser = () => {\r\n        this.openVPage(VAddUser);\r\n    }\r\n\r\n    onUserEditApps = async (key?:string) => {\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.userEditApps = await mainApi.unitUserEditApps(this.unit.id, this.curUser.id, key, pageStart, pageSize);\r\n        this.openVPage(VUserEditApps);\r\n    }\r\n\r\n    bindAppUser = async(user:User, checked:boolean) => {\r\n        await mainApi.bindAppUser(this.unit.id, this.curApp.id, user.id, checked===true? 1:0);\r\n        let appUsers = this.appUsersList.find(v => v.app.id === this.curApp.id);\r\n        if (checked === true) {\r\n            this.curAppUsers.push(user);\r\n            if (appUsers) appUsers.users.push(user);\r\n        }\r\n        else {\r\n            let index = this.curAppUsers.findIndex(v => v.id === user.id);\r\n            if (index>=0) this.curAppUsers.splice(index, 1);\r\n            if (appUsers) {\r\n                index = appUsers.users.findIndex(v => v.id === user.id);\r\n                if (index>=0) appUsers.users.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    bindUserApp = async(app:App, checked:boolean) => {\r\n        await mainApi.bindAppUser(this.unit.id, app.id, this.curUser.id, checked===true? 1:0);\r\n        if (this.userAppsList === undefined) return;\r\n        let userApps = this.userAppsList.find(v => v.user.id === this.curUser.id);\r\n        if (checked === true) {\r\n            this.curUserApps.push(app);\r\n            if (userApps) userApps.apps.push(app);\r\n        }\r\n        else {\r\n            let index = this.curUserApps.findIndex(v => v.id === app.id);\r\n            if (index>=0) this.curUserApps.splice(index, 1);\r\n            if (userApps) {\r\n                index = userApps.apps.findIndex(v => v.id === app.id);\r\n                if (index>=0) userApps.apps.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    addUser = async (userId: number) => {\r\n        await mainApi.unitAddUser(this.unit.id, userId);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page, meInFrame, Controller, VPage, Image, Edit, ItemSchema, UiSchema, StringSchema, ImageSchema, UiImageItem, UiTextItem} from  'tonva-tools'; \r\nimport {List, LMR, FA, StackedFA, PropGrid, Prop, Muted} from 'tonva-react-form';\r\nimport {StringValueEdit} from './tools';\r\nimport {Unit, UnitApps, UnitAdmin, DevModel} from './model';\r\nimport {store} from './store';\r\nimport Administors from './Administors';\r\nimport AppsPage from './Apps';\r\nimport {Members} from './Members';\r\nimport { mainApi } from 'api';\r\nimport { COrganization } from 'organization';\r\nimport {\r\n    ObjViewProps, ObjView,\r\n    //appsProps, \r\n    busesProps, \r\n    serversProps, /*uqdbsProps, */servicesProps, UQController} from './Dev';\r\nimport { AppController } from './Dev';\r\nimport { UsersController } from 'Users';\r\n\r\nexport class CAdmin extends Controller {\r\n    isProduction: boolean;\r\n    adminUnits: UnitAdmin[]; // 仅仅为Admins调试用。从登录用户获取units\r\n\r\n    private async loadAdminUnits(): Promise<void> {        \r\n        let ret = await mainApi.userAdminUnits();\r\n        let adminUnits = this.adminUnits = ret[0];\r\n        console.log('loadAdminUnits', adminUnits);\r\n        if (adminUnits.length === 1) {\r\n            meInFrame.unit = adminUnits[0].id;\r\n            await store.loadUnit();\r\n        }\r\n    }\r\n    protected async internalStart(param?:any):Promise<void> {\r\n        store.init();\r\n        \r\n        this.isProduction = document.location.hash.startsWith('#tv');\r\n        console.log('admins isProduction %s', this.isProduction);\r\n\r\n        if (this.isProduction === false) {\r\n            await this.loadAdminUnits();\r\n            this.openVPage(VAdmin);\r\n            return;\r\n        }\r\n        await store.loadUnit();\r\n        this.openVPage(VAdmin);\r\n    /*\r\n        let user = nav.user;\r\n        if (user === undefined) {\r\n            console.log('autorun: user has logged out');\r\n            return;\r\n        }\r\n    \r\n        console.log('autorun login');\r\n        */\r\n       /*\r\n        setTimeout(async () => {\r\n            // 等待 tonva-tools 里面的initSubWin的nav.user的赋值\r\n            // 这个地方实际上有问题的，不应该这么写。程序逻辑顺序逻辑错误。\r\n            // 2018-11-5: 临时凑合用延时的方式来解决。\r\n            await store.loadUnit();\r\n            this.showVPage(VAdmin);\r\n        }, 200);\r\n        */\r\n    }\r\n}\r\n\r\nexport class VAdmin extends VPage<CAdmin> {\r\n    async open() {\r\n        let {isProduction, adminUnits} = this.controller;\r\n        if (isProduction === false) {\r\n            switch (adminUnits.length) {\r\n                default: this.openPage(this.selectUnitPage); return;\r\n                case 0: this.openPage(this.noUnitPage); return;\r\n                case 1: this.openPageElement(<AdminPage />); return;\r\n            }\r\n        }\r\n\r\n        if (store.unit === undefined) {\r\n            this.openPage(this.noUnitPage);\r\n            return;\r\n        }\r\n        this.openPageElement(<AdminPage />);\r\n    }\r\n\r\n    private selectUnitPage = () => {\r\n        return <Page header=\"选择小号\" logout={logout}>\r\n            <List items={this.controller.adminUnits} item={{render: this.renderRow, onClick: this.onRowClick}}/>\r\n        </Page>;\r\n    }\r\n\r\n    private noUnitPage = () => {\r\n        let {nick, name} = nav.user;\r\n        return <Page header=\"没有小号\" logout={logout}>\r\n            <div className=\"p-3 small text-info\">\r\n                {nick || name}: 没有需要管理的小号\r\n            </div>\r\n        </Page>\r\n    }\r\n\r\n    protected get view() {return undefined}\r\n\r\n    renderRow = (item: UnitAdmin, index: number):JSX.Element => {\r\n        return <LMR className=\"p-2\" right={'id: ' + item.id}>\r\n            <div>{item.nick || item.name}</div>\r\n        </LMR>;\r\n    }\r\n    onRowClick = async (item: UnitAdmin) => {\r\n        meInFrame.unit = item.id; // 25;\r\n        await store.loadUnit();\r\n        this.closePage();\r\n        this.openPageElement(<AdminPage />);\r\n    }\r\n}\r\n\r\nconst logout = () => {\r\n    store.logout();\r\n}\r\n\r\ninterface ActionItem {\r\n    main: string | JSX.Element;\r\n    right?: string | JSX.Element;\r\n    icon: string|JSX.Element;\r\n    page?: new (props:any) => React.Component;\r\n    //onClick: () => nav.push(<Administors />),\r\n    controller?: Controller;\r\n}\r\n\r\ninterface DevItem<T extends DevModel.ObjBase> {\r\n    title: string;\r\n    count: number;\r\n    icon: string;\r\n    objProps?: ObjViewProps<T>;\r\n    onClick?: ()=>void;\r\n}\r\n\r\ntype Item = ActionItem|DevItem<DevModel.ObjBase>|string;\r\n\r\nconst rArrow = <FA name=\"chevron-right\" />;\r\nconst typeCaptions = {\r\n    1: '开发号',\r\n    2: '小号',\r\n    3: '系统号'\r\n}\r\n@observer\r\ndefault class AdminPage extends React.Component {\r\n    private caption:string;\r\n\r\n    async componentWillMount() {\r\n        let {unit, dev} = store;\r\n        let {isAdmin, isOwner, type} = unit;\r\n        this.caption = typeCaptions[type];\r\n        /*\r\n        switch (type) {\r\n            case 1: this.caption = '开发号'; break;\r\n            case 2: this.caption = '小号'; break;\r\n            case 3: this.caption = '系统号'; break;\r\n        }*/\r\n        if ((type & 1) !== 0) {\r\n            await store.dev.loadCounts();\r\n        }\r\n    }\r\n\r\n    private appsAction:ActionItem = {\r\n        main: '启停App',\r\n        right: rArrow, //'增减',\r\n        icon: 'play-circle-o',\r\n        page: AppsPage,\r\n    };\r\n    private usersAction:ActionItem = {\r\n        main: '用户角色',\r\n        right: rArrow,\r\n        icon: 'users',\r\n        page: Members,\r\n    };\r\n    private newUsersAction:ActionItem = {\r\n        main: '用户管理',\r\n        right: rArrow,\r\n        icon: 'user-o',\r\n        controller: new UsersController(undefined),\r\n    };\r\n    /*\r\n    private devAction:Item = {\r\n        main: <DevActions />,\r\n        right: '程序开发相关管理',\r\n        icon: 'laptop',\r\n        //page: Dev,\r\n    };*/\r\n    private adminsAction:ActionItem = {\r\n        main: '管理员',\r\n        right: rArrow,\r\n        icon: 'universal-access',\r\n        page: Administors,\r\n    };\r\n\r\n    private cOrganization = new COrganization;\r\n    private organizeAction:ActionItem = {\r\n        main: this.cOrganization.label,\r\n        right: rArrow,\r\n        icon: this.cOrganization.icon,\r\n        controller: this.cOrganization\r\n    };\r\n\r\n    private noneAction:ActionItem = {\r\n        main: '请耐心等待分配任务',\r\n        icon: 'hourglass-start',\r\n    };\r\n\r\n    private buildItems():Item[] {\r\n        let {unit, dev} = store;\r\n        let {isAdmin, isOwner, type} = unit;\r\n        let items:Item[] = [];\r\n        if (isOwner === 1) {\r\n            items.push(this.adminsAction);\r\n        }\r\n        console.log('unit:', unit);\r\n        if (isAdmin === 1) {\r\n            if ((type & 2) !== 0) {\r\n                // unit\r\n                items.push(\r\n                    '小号管理',\r\n                    this.appsAction, \r\n                    //this.usersAction, \r\n                    this.newUsersAction, \r\n                    //this.organizeAction\r\n                );\r\n            }\r\n            if ((type & 1) !== 0) {\r\n                // dev unit\r\n                let {counts} = dev;\r\n                //if (counts !== undefined) {\r\n                let devItems:(DevItem<DevModel.ObjBase>|string)[] = [\r\n                    '开发号管理',\r\n                    {\r\n                        title: 'APP', \r\n                        count: counts && counts.app, \r\n                        icon: 'tablet', \r\n                        onClick: () => new AppController(undefined).start(unit.id),\r\n                    },\r\n                    {\r\n                        title: 'UQ', \r\n                        count: counts && counts.uq, \r\n                        icon: 'database', \r\n                        onClick: () => new UQController(undefined).start(unit.id),\r\n                    },\r\n                    {\r\n                        title: 'BUS', \r\n                        count: counts && counts.bus, \r\n                        icon: 'cogs', \r\n                        objProps: busesProps,\r\n                    },\r\n                    {\r\n                        title: 'Server', \r\n                        count: counts && counts.server, \r\n                        icon: 'server', \r\n                        objProps: serversProps,\r\n                    },\r\n                ];\r\n                items.push(...devItems);\r\n            //}\r\n            }\r\n        }\r\n        return items;\r\n    }\r\n    private row = (item:Item, index:number):JSX.Element => {\r\n        if (typeof item === 'string') {\r\n            return <div className=\"px-3 pt-3 pb-1 small text-muted\" style={{backgroundColor:'#f0f0f0'}}>{item}</div>;\r\n        }\r\n        let {title} = item as DevItem<DevModel.ObjBase>;\r\n        let left:any, mid:any, r:any;\r\n        if (title !== undefined) {\r\n            let {icon, count} = item as DevItem<DevModel.ObjBase>;\r\n            left = <FA className=\"text-primary\" name={icon} fixWidth={true} size=\"lg\" />;\r\n            mid = title;\r\n            r = count>0 && <span>{count}</span>;\r\n        }\r\n        else {\r\n            let {right, main, icon} = item as ActionItem;\r\n            left = typeof icon === 'string'? \r\n                <FA className=\"text-primary\" name={icon} fixWidth={true} size=\"lg\" /> :\r\n                item.icon;\r\n            mid = main;\r\n            r = <span>{right}</span>;\r\n        }\r\n        return <LMR className=\"px-3 py-2 align-items-center\" left={left} right={r}>\r\n            <div className=\"px-3\"><b>{mid}</b></div>\r\n        </LMR>;\r\n    }\r\n    private rowClick = async (item:Item) => {\r\n        let {title} = item as DevItem<DevModel.ObjBase>;\r\n        if (title !== undefined) {\r\n            let {objProps, onClick} = item as DevItem<DevModel.ObjBase>;\r\n            if (objProps !== undefined)\r\n                return nav.push(<ObjView {...objProps} />);\r\n            else {\r\n                onClick();\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            let {page:P, controller} = item as ActionItem;\r\n            if (P !== undefined)\r\n                nav.push(<P />);\r\n            else {\r\n                await controller.start(store.unit);\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        let unit:Unit = store.unit;\r\n        if (unit === undefined) {\r\n            console.log(\"admin render without unit\");\r\n            return null;\r\n        }\r\n        console.log(\"admin render with unit\");\r\n        let items = this.buildItems();\r\n        if (items === undefined) {\r\n            return <Page header=\"\" />;\r\n        }\r\n        let header:any, top:any;\r\n        if (unit !== undefined) {\r\n            let {name, nick, icon, discription} = unit;\r\n            header = nick || name;\r\n            if (this.caption !== undefined) header = this.caption + ' - ' + header;            \r\n            top = <LMR className='px-3 my-4 bg-white py-2 cursor-pointer' onClick={()=>nav.push(<UnitProps />)}\r\n                left={<div><Image className=\"w-3c h-3c\" src={icon} /></div>}>\r\n                <div className=\"px-3\">\r\n                    <h6 className='text-dark'>{name}</h6>\r\n                    <h6><small className='text-secondary'>{nick}</small></h6>\r\n                    <div className='small text-info'>{discription}</div>\r\n                </div>\r\n            </LMR>;\r\n        }\r\n        else {\r\n            header = '系统管理';\r\n        }\r\n        return <Page header={header} logout={logout}>\r\n            {top}\r\n            <List items={items} item={{render:this.row, onClick:this.rowClick}} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass UnitProps extends React.Component {\r\n    /*\r\n    private rows:Prop[] = [\r\n        '',\r\n        {label: '标志图', type: 'string', name: 'icon'},\r\n        '=',\r\n        {label: '唯一号', type: 'string', name: 'name'},\r\n        {\r\n            label: '名称', \r\n            type: 'string',\r\n            name: 'nick', \r\n            onClick:()=>nav.push(<StringValueEdit \r\n                title=\"修改名称\"\r\n                value={store.unit.nick}\r\n                onChanged={this.onNickChanged} \r\n                info=\"好的名字会提升接受度\" />)\r\n        },\r\n        {\r\n            label: '说明',\r\n            type: 'string',\r\n            name: 'discription',\r\n            onClick:()=>nav.push(<StringValueEdit \r\n                title=\"修改说明\"\r\n                value={store.unit.discription}\r\n                onChanged={this.onDiscriptionChanged} \r\n                info=\"对小号做一个说明\" />)\r\n        },\r\n    ];\r\n    */\r\n    private schema:ItemSchema[] =[\r\n        {name: 'icon', type: 'image'} as ImageSchema,\r\n        {name: 'nick', type: 'string'} as StringSchema,\r\n        {name: 'discription', type: 'string'} as StringSchema,\r\n    ];\r\n    private uiSchema:UiSchema = {\r\n        items: {\r\n            nick: {widget:'text', label:'别名', placeholder:'好的别名更方便记忆'} as UiTextItem,\r\n            icon: {widget:'image', label:'标志图'} as UiImageItem,\r\n            discription: {widget:'text', label:'描述', placeholder:'简短清晰的描述'} as UiTextItem,\r\n        }\r\n    }\r\n    /*\r\n    async onNickChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.unitChangeProp('nick', value);\r\n    }\r\n    async onDiscriptionChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.unitChangeProp('discription', value);\r\n    }\r\n    */\r\n    private onItemChanged = async (itemSchema:ItemSchema, newValue:any, preValue:any) => {\r\n        let {name} = itemSchema;\r\n        //await userApi.userSetProp(name, newValue);\r\n        await store.unitChangeProp(name, newValue);\r\n        //this.data[name] = newValue;\r\n        //nav.user[name] = newValue;\r\n        //nav.saveLocalUser();\r\n    }\r\n    //<PropGrid rows={this.rows} values={store.unit} alignValue=\"right\" />\r\n    render() {\r\n        return <Page header=\"小号信息\">\r\n            <Edit schema={this.schema} uiSchema={this.uiSchema}\r\n                data={store.unit}\r\n                onItemChanged={this.onItemChanged} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\nimport { nav, NavView } from 'tonva-tools';\nimport { CAdmin } from './Admin';\nimport './App.css';\n\nclass App extends React.Component {\n    async onLogined() {\n        let loc = document.location;\n        nav.clear();\n        //nav.push(<StartPage />);\n        let cAdmin = new CAdmin({});\n        await cAdmin.start();\n    }\n    render() {\n        return (\n            <NavView onLogined={this.onLogined} />\n        )\n    }\n}\n\nexport default App;\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n"],"sourceRoot":""}