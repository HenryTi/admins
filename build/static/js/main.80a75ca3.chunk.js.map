{"version":3,"sources":["tonva-tools/index.ts","tonva-react-form/index.ts","tonva-react-uq/controllers/CVEntity.tsx","tonva-tools/ui/nav.tsx","tonva-react-uq/controllers/form/viewModel.tsx","tonva-tools/net/guestApi.ts","tonva-tools/net/index.ts","tonva-react-uq/tools/jsonStringify.ts","tonva-react-uq/tools/tv.tsx","tonva-react-uq/tools/index.ts","tonva-tools/ui/index.ts","tonva-tools/net/appBridge.ts","tonva-tools/net/httpChannelUI.ts","tonva-tools/net/uqApi.ts","tonva-react-uq/controllers/link/cLink.tsx","tonva-react-uq/controllers/link/index.ts","tonva-tools/net/wsChannel.ts","tonva-tools/ui/page.tsx","tonva-react-form/uid.ts","tonva-tools/ui/image.tsx","tonva-tools/net/host.ts","tonva-tools/user.ts","tonva-tools/uid.ts","tonva-react-uq/controllers/tuid/vTuidMain.tsx","tonva-react-uq/controllers/tuid/vTuidEdit.tsx","tonva-react-uq/controllers/tuid/vTuidSelect.tsx","tonva-react-uq/controllers/tuid/vTuidView.tsx","tonva-react-uq/controllers/tuid/vTuidInfo.tsx","tonva-react-uq/controllers/tuid/pageItems.ts","tonva-react-uq/controllers/tuid/vTuidList.tsx","tonva-react-uq/controllers/tuid/cTuid.ts","tonva-react-uq/controllers/tuid/index.tsx","tonva-react-uq/controllers/form/vBand.tsx","tonva-react-uq/controllers/form/vSubmit.tsx","tonva-react-uq/controllers/form/rule.ts","tonva-react-uq/controllers/form/vField/vField.tsx","tonva-react-uq/controllers/form/vField/vComputeField.tsx","tonva-react-uq/controllers/form/vArr.tsx","tonva-react-uq/controllers/form/vField/vTuidField.tsx","tonva-react-uq/controllers/form/bandsBuilder.ts","tonva-react-uq/controllers/form/vField/buildVmField.ts","tonva-react-uq/controllers/form/vForm.tsx","tonva-react-uq/controllers/form/index.ts","tonva-tools/net/httpChannel.ts","tonva-tools/ui/res.ts","tonva-react-uq/controllers/index.ts","tonva-react-form/form/control/control.tsx","tonva-react-form/form/control/buttonsControl.tsx","tonva-react-form/form/control/charsControl.tsx","tonva-react-form/form/control/stringControl.tsx","tonva-react-form/form/control/numberControl.tsx","tonva-react-form/form/control/unknownControl.tsx","tonva-react-form/form/control/pickIdControl.tsx","tonva-react-form/form/control/pickTuidControl.tsx","tonva-react-form/form/control/pickControl.tsx","tonva-react-form/form/control/index.ts","tonva-react-form/form/control/checkControl.tsx","tonva-react-form/form/control/radioControl.tsx","tonva-react-form/form/control/selectControl.tsx","tonva-react-form/form/control/textAreaControl.tsx","tonva-react-uq/entities/entity.ts","tonva-react-uq/entities/tuid.ts","tonva-react-uq/entities/action.ts","tonva-react-uq/entities/sheet.ts","tonva-react-uq/entities/query.ts","tonva-react-uq/entities/book.ts","tonva-react-uq/entities/history.ts","tonva-react-uq/entities/map.ts","tonva-react-uq/entities/pending.ts","tonva-react-uq/entities/entities.ts","tonva-react-uq/entities/index.ts","tonva-react-form/form/rowContainer/index.tsx","tonva-tools/net/apiBase.ts","tonva-tools/ui/titleBar.tsx","tonva-react-uq/controllers/query/defaultRow.tsx","tonva-react-uq/controllers/query/vQueryMain.tsx","tonva-react-uq/controllers/query/vQuerySelect.tsx","tonva-react-uq/controllers/query/cQuery.ts","tonva-react-uq/controllers/query/index.ts","tonva-tools/ui/edit/imageItemEdit.tsx","tonva-tools/ui/loading.tsx","tonva-tools/ui/resUploader.tsx","tonva-react-form/form/index.ts","tonva-react-form/form/formView.tsx","tonva-react-uq/controllers/CApp.tsx","tonva-react-uq/controllers/icons.tsx","tonva-react-uq/controllers/ControllerUq.ts","tonva-react-uq/centerApi.ts","tonva-react-uq/controllers/sheet/vMain.tsx","tonva-react-uq/controllers/sheet/vNew.tsx","tonva-react-uq/controllers/sheet/vSheetView.tsx","tonva-react-uq/controllers/sheet/vEdit.tsx","tonva-react-uq/controllers/sheet/vSheetAction.tsx","tonva-react-uq/controllers/sheet/vSchema.tsx","tonva-react-uq/controllers/sheet/vArchives.tsx","tonva-react-uq/controllers/sheet/vList.tsx","tonva-react-uq/controllers/sheet/vArchived.tsx","tonva-react-uq/controllers/sheet/vSheet.tsx","tonva-react-uq/controllers/sheet/vSaved.tsx","tonva-react-uq/controllers/sheet/vSheetProcessing.tsx","tonva-react-uq/controllers/sheet/cSheet.ts","tonva-react-uq/controllers/sheet/index.ts","tonva-react-uq/controllers/book/vBookMain.tsx","tonva-react-uq/controllers/book/cBook.ts","tonva-react-uq/controllers/uq/vUq.tsx","tonva-react-uq/controllers/uq/cUq.tsx","tonva-react-uq/controllers/uq/index.ts","tonva-react-uq/controllers/map/vMain.tsx","tonva-react-uq/controllers/map/inputValues.tsx","tonva-react-uq/controllers/map/cMap.ts","tonva-react-uq/controllers/map/index.ts","tonva-react-uq/controllers/history/vHistoryMain.tsx","tonva-react-uq/controllers/history/cHistory.ts","tonva-react-uq/controllers/history/index.ts","tonva-react-uq/controllers/action/vActionMain.tsx","tonva-react-uq/controllers/action/cAction.ts","tonva-react-uq/controllers/action/index.ts","tonva-react-uq/controllers/pending/vPendingMain.tsx","tonva-react-uq/controllers/pending/cPending.ts","tonva-react-uq/controllers/pending/index.ts","tonva-tools/ui/edit/itemEdit.tsx","tonva-tools/net/netToken.ts","tonva-tools/entry/userApi.ts","tonva-tools/left0.ts","tonva-tools/ui/VM.tsx","tonva-tools/ui/schema/index.ts","tonva-tools/pageItems.ts","tonva-tools/cacheIds.ts","tonva-react-form/form/TonvaForm.tsx","tonva-react-form/dropDownActions/index.tsx","tonva-react-form/easyDate/index.tsx","tonva-react-form/media.tsx","tonva-react-form/searchBox.tsx","tonva-react-form/multiStep/index.tsx","tonva-tools/ui/form/rules/index.ts","tonva-tools/ui/form/widgets/widget.tsx","tonva-tools/ui/form/widgets/textWidget.tsx","tonva-tools/ui/form/widgets/numberWidget.tsx","tonva-tools/ui/form/widgets/updownWidget.tsx","tonva-tools/ui/form/widgets/dateWidget.tsx","tonva-tools/ui/form/widgets/checkBoxWidget.tsx","tonva-tools/ui/form/widgets/selectWidget.tsx","tonva-tools/ui/form/widgets/idWidget.tsx","tonva-tools/ui/form/widgets/unknown.tsx","tonva-tools/ui/form/widgets/buttonWidget.tsx","tonva-tools/ui/form/context.tsx","tonva-tools/ui/form/widgets/arrComponent.tsx","tonva-tools/ui/form/widgets/imageWidget.tsx","tonva-tools/ui/form/widgets/factory.tsx","tonva-tools/ui/form/widgets/textareaWidget.tsx","tonva-tools/ui/form/widgets/passwordWidget.tsx","tonva-tools/ui/form/widgets/radioWidget.tsx","tonva-tools/ui/form/widgets/rangeWidget.tsx","tonva-tools/ui/form/formRes.ts","tonva-tools/ui/form/form.tsx","tonva-tools/ui/form/field.tsx","tonva-tools/ui/form/index.ts","tonva-react-form/components/Badge.tsx","tonva-react-form/components/LMR.tsx","tonva-react-form/components/FA.tsx","tonva-react-form/components/Muted.tsx","tonva-react-form/components/index.ts","tonva-react-form/list/base.tsx","tonva-react-form/list/clickable.tsx","tonva-react-form/list/static.tsx","tonva-react-form/list/selectable.tsx","tonva-react-form/list/index.tsx","tonva-react-form/propGrid/row.tsx","tonva-react-form/propGrid/propView.tsx","tonva-react-form/propGrid/PropGrid.tsx","tonva-react-form/propGrid/index.tsx","tonva-tools/ui/edit/stringItemEdit.tsx","tonva-tools/ui/edit/edit.tsx","tonva-tools/ui/edit/index.tsx","tonva-react-form/listView/listRow.tsx","tonva-react-form/listView/listView.tsx","tonva-tools/ui/tabs/tabs.tsx","tonva-tools/entry/meInfo.tsx","tonva-tools/ui/fetchErrorView.tsx","tonva-tools/local.ts","tonva-tools/img/logo.svg","api/mainApi.ts","api/devApi.ts","store/admins.ts","store/dev.ts","store/cacheIds.ts","store/index.ts","Administors/NewFellow.tsx","Administors/EditAdmin.tsx","Administors/index.tsx","tools/idDates.tsx","tools/span.tsx","tools/unitSpan.tsx","consts.ts","tools/uqSpan.tsx","tools/appSpan.tsx","tools/serverSpan.tsx","tools/stringValueEdit.tsx","tools/idPickPage.tsx","Apps/info.tsx","Apps/new.tsx","Apps/index.tsx","Members/newRole.tsx","Members/roleApps.tsx","Members/memberPage.tsx","Members/membersPage.tsx","Members/rolePage.tsx","Members/index.tsx","organization/ui/map/teamPerson/index.tsx","organization/ui/index.ts","organization/ui/map/index.ts","organization/ui/tuid/index.ts","organization/ui/tuid/user.tsx","organization/ui/tuid/organization.tsx","organization/ui/query/index.ts","organization/ui/query/teamPosts.tsx","organization/ui/res/index.ts","organization/ui/res/zh/CN.tsx","organization/op/vOpBinding.tsx","organization/op/vAllPosts.tsx","organization/op/vFullFunction.tsx","organization/op/vSearchUser.tsx","organization/op/cOpBinding.tsx","organization/organization.tsx","Dev/apps/editPage.tsx","Dev/apps/appsPage.tsx","Dev/apps/appUqs.tsx","Dev/apps/appPage.tsx","Dev/apps/uqBindPage.tsx","Dev/apps/index.tsx","Dev/uqs/uqUpload.tsx","createIdPick.tsx","Dev/uqs/newServicePage.tsx","Dev/uqs/servicePage.tsx","Dev/uqs/editPage.tsx","Dev/uqs/uqPage.tsx","Dev/uqs/listPage.tsx","Dev/uqs/index.tsx","Dev/row.tsx","Dev/buses.tsx","Dev/servers.tsx","Dev/services.tsx","Dev/ObjView.tsx","Users/vApps.tsx","Users/vUsers.tsx","Users/vApp.tsx","Users/vUser.tsx","Users/vAppEditUsers.tsx","Users/vUserEditApps.tsx","Users/VAddUser.tsx","Users/cUsers.tsx","Admin.tsx","App.tsx","registerServiceWorker.ts","index.tsx"],"names":["_left0__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d","__webpack_exports__","_net__WEBPACK_IMPORTED_MODULE_2__","_ui__WEBPACK_IMPORTED_MODULE_3__","o","_pageItems__WEBPACK_IMPORTED_MODULE_5__","_cacheIds__WEBPACK_IMPORTED_MODULE_6__","_form__WEBPACK_IMPORTED_MODULE_0__","_list__WEBPACK_IMPORTED_MODULE_1__","_dropDownActions__WEBPACK_IMPORTED_MODULE_2__","_easyDate__WEBPACK_IMPORTED_MODULE_3__","_propGrid__WEBPACK_IMPORTED_MODULE_4__","_components__WEBPACK_IMPORTED_MODULE_5__","_media__WEBPACK_IMPORTED_MODULE_6__","_searchBox__WEBPACK_IMPORTED_MODULE_8__","_multiStep__WEBPACK_IMPORTED_MODULE_9__","CEntity","_ControllerUq__WEBPACK_IMPORTED_MODULE_3__","[object Object]","cUq","entity","ui","res","super","Object","setPrototypeOf","this","x","name","typeName","label","icon","_icons__WEBPACK_IMPORTED_MODULE_2__","loadSchema","onSubmit","values","mode","options","buildFormOptions","ret","_form__WEBPACK_IMPORTED_MODULE_1__","setValues","none","submitCaption","arrNewCaption","arrEditCaption","arrTitleNewButton","fields","arrFields","undefined","new","formUI","form","arrs","inputs","buildInputs","buildFieldsInputs","arr","items","arrFieldInputs","field","_tuid","fieldUI","select","buildSelect","content","buildContent","placeHolder","getTuidPlaceHolder","__awaiter","_ownerField","cTuidSelect","cSelectFrom","param","getValue","autoList","console","log","call","removeCeased","id","idFromItem","useId","queryName","cQuerySelect","VEntity","tonva_tools__WEBPACK_IMPORTED_MODULE_0__","controller","createForm","mobileHeaderStyle","RegExp","test","navigator","userAgent","minHeight","logMark","logs","stackKey","NavView","react__WEBPACK_IMPORTED_MODULE_0__","props","waitCount","isHistoryBack","clearError","setState","fetchError","back","bind","navBack","stack","state","wait","window","addEventListener","nav","set","start","level","length","waitTimeHandler","global","setTimeout","clearTimeout","err","error","unauthorized","showLogin","view","disposer","clear","push","history","pushState","key","ceased","refresh","item","pop","dispose","p","i","len","backLevel","popAndDispose","find","v","confirmClose","confirm","self","top","postMessage","type","message","elWait","elError","className","_loading__WEBPACK_IMPORTED_MODULE_10__","_fetchErrorView__WEBPACK_IMPORTED_MODULE_4__","assign","map","index","style","visibility","Nav","local","_local__WEBPACK_IMPORTED_MODULE_6__","user","lang","district","_res__WEBPACK_IMPORTED_MODULE_9__","language","culture","guest","g","get","handler","ws","onWsReceiveAny","handlerId","endWsReceive","msg","receive","unitRes","fetch","json","unit","unitName","_net__WEBPACK_IMPORTED_MODULE_7__","getPredefinedUnitName","unitId","unitFromName","settings","navSettings","hash","document","location","pos","_net_appBridge__WEBPACK_IMPORTED_MODULE_5__","hashParam","substring","startWait","url","resHost","centerHost","resUrl","wsHost","setGuest","exHash","appInFrame","parent","_net_wsChannel__WEBPACK_IMPORTED_MODULE_8__","predefinedUnit","loadPredefinedUnit","notLogined","logined","endWait","onLogined","_net_netToken__WEBPACK_IMPORTED_MODULE_3__","token","callback","connect","JSON","stringify","saveLocalUser","showAppView","defaultTop","loginTop","withBack","lv","e","then","loginView","default","_page__WEBPACK_IMPORTED_MODULE_2__","header","onClick","logout","logoutClear","cp","ChangePasswordPage","onError","show","replace","topKey","popTo","ceaseTop","regConfirmClose","confirmBox","apiId","sheetType","sheetId","Promise","resolve","reject","sheet","includes","uh","src","open","date","Date","getTime","toTimeString","step","__decorate","mobx__WEBPACK_IMPORTED_MODULE_1__","ViewModel","PureJSONContent","JSONContent","RowContent","mobx_react__WEBPACK_IMPORTED_MODULE_1__","_tools__WEBPACK_IMPORTED_MODULE_2__","vm","guestApi","uqApi","wsChannel","apiBase","appBridge","host","replacer","value","substr","jsonStringify","Tv","index_module","tuidValue","nullUI","ttv","react","bi","_$tuid","_$com","t","controllers","com","getTuidContent","val","valueFromId","boxIdContent","tv","_nav__WEBPACK_IMPORTED_MODULE_0__","_VM__WEBPACK_IMPORTED_MODULE_3__","_schema__WEBPACK_IMPORTED_MODULE_4__","_form__WEBPACK_IMPORTED_MODULE_5__","_edit__WEBPACK_IMPORTED_MODULE_6__","_res__WEBPACK_IMPORTED_MODULE_7__","_image__WEBPACK_IMPORTED_MODULE_10__","uqTokens","logoutUqTokens","appsInFrame","_unit","isBridged","setAppInFrame","appHash","parts","split","Number","page","slice","getExHashPos","lastIndexOf","getExHash","appUrl","u","_uid__WEBPACK_IMPORTED_MODULE_2__","getUnit","realUnit","appUq","uq","uqOwner","uqName","uqToken","_uqApi__WEBPACK_IMPORTED_MODULE_3__","urlDebug","realUrl","_host__WEBPACK_IMPORTED_MODULE_5__","getUrlOrDebug","at","a","opener","apiName","evt","data","subWin","source","_wsChannel__WEBPACK_IMPORTED_MODULE_4__","el","getElementById","hidden","hideFrameBack","lodash__WEBPACK_IMPORTED_MODULE_0___default","clone","_ui__WEBPACK_IMPORTED_MODULE_1__","subFrameStarted","onReceive","initSubWin","from","callId","method","body","result","directCall","callCenterApiFromMessage","bca","brideCenterApis","bridgeCenterApiReturn","onReceiveAppApiMessage","action","onAppApiReturn","bridgeCenterApi","httpChannelUI_HttpChannelNavUI","channelUIs","channelNoUIs","logoutApis","uqApi_channels","uqLocalEntities","localUqs","ls","localStorage","getItem","parse","uqs","loginedUserId","isNet","un","__loadAccess","saveLocal","lodash_default","cloneDeep","removeItem","accessValue","str","setItem","isMatch","uqApi_UqApi","basePath","access","showWaiting","channels","channelUI","channel","httpChannel","acc","join","loadAccess","checkAccess","names","post","params","owner","pageStart","pageSize","order","$order","ids","proxy","put","uqApi_UnitxApi","buildChannel","centerAppApi","uqApi_CenterAppApi","unitxUq","setCenterUrl","centerToken","centerChannel","centerChannelUI","setCenterToken","userId","uqApi_CenterApi","path","uqTokenApi","unitParam","nowTick","tick","callCenterapi","appUqs","appOwner","appName","rLs","rAppOwner","rAppName","uqsPure","obj","cachedUqs","cachedId","retId","retUqs","loadAppUqs","checkUqs","Link","cLink_CLink","classnames_default","subAppWindow","setSubAppWindow","win","postWsToTop","WsBase","handlerSeed","anyHandlers","msgHandlers","seed","$type","wsBaseSeed","wsBridge","wsBaseId","WSChannel","that","WebSocket","onopen","ev","onerror","onmessage","wsMessage","onclose","close","event","postWsToSubApp","netThis","send","scrollTimeGap","ScrollView","bottomTime","topTime","onScroll","onScrollTop","onScrollBottom","target","scrollTop","offsetHeight","scrollHeight","c","direct","children","forEach","child","_$scroll","toString","eachChild","Page","cur","tabs","tabStates","tab","lodash__WEBPACK_IMPORTED_MODULE_3___default","isSelected","isMounted","t0","onTabClick","load","footer","right","keepHeader","titleBar","title","redDot","img","redDotView","cn","classnames__WEBPACK_IMPORTED_MODULE_2___default","_titleBar__WEBPACK_IMPORTED_MODULE_4__","center","sideBar","invisible","onTouchStart","elFooter","renderTabs","renderSingle","uid","ALPHABET","ID_LENGTH","rtn","charAt","Math","floor","random","Image","classnames__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_1___default","n","_nav__WEBPACK_IMPORTED_MODULE_2__","startsWith","isDevelopment","NODE_ENV","PUBLIC_URL","REACT_APP_CENTER_HOST","REACT_APP_ICON","REACT_APP_ITEM_ICON","hosts","centerhost","reshost","uqhost","unitxhost","uq-build","fetchOptions","headers","Content-Type","tryLocal","getCenterHost","centerUrlFromHost","centerWsFromHost","getResHost","promises","hostArr","hostValue","findIndex","fetchUrl","debugHostUrl","localCheck","results","all","j","hostString","indexOf","timeout","text","catch","Error","fetchLocalCheck","decodeUserToken","decodeGuestToken","jwt_decode__WEBPACK_IMPORTED_MODULE_0__","jwt_decode__WEBPACK_IMPORTED_MODULE_0___default","vTuidMain_VTuidMain","CVEntity","onNew","onList","onSearch","openPage","link","render","newButton","proxyLinks","isFrom","tonva_react_form","size","placeholder","entityRender","entityClick","tonva_tools","vTuidEdit_VTuidEdit","next","vTuidEdit_awaiter","vForm","reset","closePage","finish","getValues","save","unique","setError","isCalling","returnCall","openPageElement","editView","vTuidSelect_VTuidSelect","mainView","react_default","createElement","initKey","onSearchMain","PageItems","renderMainRow","clickMainRow","before","vTuidSelect_awaiter","searchMain","mainRowContent","ceasePage","showDiv","getIdFromObj","divView","renderDivRow","clickDivRow","divRowContent","showMain","rowContent","viewModel","ownerValue","divs","divItems","getDivItems","vTuidView_VTuidView","vTuidView_awaiter","alert","tools","buildForm","vTuidInfo_VTuidInfo","pageItems_TuidPageItems","tuid","search","vTuidList_VTuidMainListBase","vTuidList_awaiter","renderRow","clickRow","callOnSelected","rowKey","ownerTop","ownerObj","ownerId","onSelected","VTuidMainList","cTuid_CTuid","buildPageItems","first","searchArr","cTuid_CTuidBase","proxies","linkFromName","cFrom","cUqFrom","cTuidEditFromName","cTuidInfoFromName","cTuidSelectFromName","VTuidMain","VTuidEdit","VTuidList","schemaFrom","openVPage","onEdit","itemChanged","cTuidInfo","cTuid_CTuidInfo","cTuidEdit","CTuidEdit","edit","cTuidList","CTuidList","merge","CTuidMain","cTuid_CTuidSelect","VTuidSelect","VTuidInfo","vBand_VBand","renderContent","addRow","VFieldBand","vField","vBand_VArrBand","vArr","setAddRow","vBand_VSubmitBand","vSubmit","vSubmit_VSubmit","onClickSubmit","submit","isOk","disabled","caption","mobx_module","Rule","RuleRequired","defy","trim","NaN","RuleNum","RuleInt","isNaN","isInteger","RuleMin","min","check","RuleMax","max","vField_VField","fieldRes","init","buildRules","rules","required","null","checkRules","r","errors","readonly","FormMode","editable","vField_decorate","vField_VInputControl","renderError","ref","input","setInputValue","onFocus","onBlur","computeFields","onChange","currentTarget","setValue","inputGroup","suffix","ctrlCN","inputType","readOnly","maxLength","onKeyPress","RedMark","color","position","left","VStringField","KeyCode_Neg","KeyCode_Dot","vField_VNumberControl","ch","charCode","extraChars","onKeyDot","onKeyNeg","preventDefault","_a","vField_VIntField","VDecField","VTextField","VDateTimeField","vComputeField_VComputeField","vArr_VArr","ownerForm","onEditRow","rowPage","vArr_awaiter","valueBoxs","onRowChanged","rowValues","$owner","list","renderItem","showRow","editRow","editSubmitCaption","internalAddRow","newSubmitCaption","button","paddingTop","paddingBottom","arrsRes","arrRes","newSubmit","editSubmit","arrUI","vForm_VForm","buttonStyle","textAlign","paddingLeft","paddingRight","overflow","vTuidField_VTuidField","vTuidField_awaiter","showInfo","boxId","idBox","bandsBuilder_BandsBuilder","layout","formItems","bandsOnFly","bandsFromLayout","bands","bandsFromFields","bandFromArr","bandFromField","formItem","rfn","resFromName","buildVField","vFields","vArrs","onFormSubmit","buildFormValues","buildBands","bandColl","bandsBuilder","build","band","getVFields","f","getVArr","getVSubmit","rows","row","fn","initValues","arrList","ctrl","fieldName","valueFromFieldName","propName","buildFieldValues","array","deep","buildObservableValues","vForm_decorate","HttpChannel","isCenter","hostUrl","apiToken","showError","_host__WEBPACK_IMPORTED_MODULE_2__","keys","k","buildOptions","innerFetch","buildError","timeOutHandler","encodeURI","ok","statusText","ct","retJson","toLowerCase","_ui_nav__WEBPACK_IMPORTED_MODULE_1__","_appBridge__WEBPACK_IMPORTED_MODULE_0__","Headers","append","resOptions","resLang","lodash__WEBPACK_IMPORTED_MODULE_0__","_","l","languages","setResOptions","_CApp__WEBPACK_IMPORTED_MODULE_0__","_uq__WEBPACK_IMPORTED_MODULE_2__","_tuid__WEBPACK_IMPORTED_MODULE_4__","_query__WEBPACK_IMPORTED_MODULE_6__","_map__WEBPACK_IMPORTED_MODULE_7__","_form_viewModel__WEBPACK_IMPORTED_MODULE_10__","_formUI__WEBPACK_IMPORTED_MODULE_12__","_ControllerUq__WEBPACK_IMPORTED_MODULE_13__","_link__WEBPACK_IMPORTED_MODULE_15__","_icons__WEBPACK_IMPORTED_MODULE_16__","control_ControlBase","formView","renderControl","hasError","filled","validate","control_Control","face","setProps","element","Array","isArray","defaultValue","clearErrors","clearValue","isOK","getValueFromElement","rule","notes","buttonsControl_ButtonsControl","otherClick","onOther","readValues","nothing","btnOther","submitButton","otherButton","TxtRequired","charsControl_CharsControl","parseValue","lodash","classnames","form-control","has-success","is-invalid","is-valid","renderInput","stringControl_StringControl","ErrInvalidNumber","ErrMin","ErrMax","unknownControl_UnknownControl","role","unknownControl_EmptyControl","pickIdControl_PickIdControl","pick","fromPicked","onPicked","itemFromId","initCaption","String","controlContent","component","pickIdControl_decorate","pickTuidControl_PickTuidControl","onIdChanged","onFormValues","pickTuidControl_decorate","pickControl_PickControl","pickControl_awaiter","Content","pickControl_decorate","createControl","group","groupRow","createGroupControl","fieldRow","fieldType","defaultFaces","controls","createFieldControl","help","string","password","number","parseFloat","checkbox","trueValue","falseValue","checked","radiobox","selectedIndex","selectedOptions","pick-id","pick-tuid","textarea","int","dec","bool","ln","Entity","entities","typeId","fieldMaps","sys","sName","jName","tvApi","returns","schema","setSchema","buildFieldsTuid","buildFieldTuid","buildArrFieldsTuid","getTuid","arrName","fieldArr","an","buildFieldsParams","arrResult","pa","rowResult","packRow","packArr","charCodeAt","escape","unpackRow","unpackArr","ch0","fLen","to","vals","maxCacheSize","tuid_Tuid","queue","waitingIds","cache","buildIdBoxer","BoxId","prototype","defineProperty","writable","enumerable","getObj","getCacheValue","toJSON","idName","mainFields","mf","splice","_id","delete","defer","util","has","cacheTuids","moveToHead","shift","proxied","cacheValue","unpackTuidIds","api","getApiFrom","tuids","tuidIds","cacheTuidFieldValues","afterCacheId","cacheDivIds","tuidGet","divName","cacheFieldsInValue","arrValues","tuidDiv","getDiv","tuidSave","tuidSearch","tuidArrGet","tuidArrSave","tuidArrPos","showTuid","TuidMain","Main","TuidDiv","cacheIds","cApp","cUqFrm","getImportUq","cTuidMainFromName","action_Action","pack","sheet_Sheet","states","op","ops","actions","discription","appId","sheetSave","app","flow","sheetAction","brief","unpackSheet","flows","getSheet","getArchive","unpack","sheetArchive","sheetArchives","stateSheets","sheet_PageStateItems","stateSheetCount","s","count","mySheets","getStateSheets","query_Query","isPaged","more","hasMore","startField","buildParams","unpackReturns","$page","query","table","book_Book","queryApiName","history_History","map_Map","queries","newAction","newQuery","add","del","pending_Pending","fieldDefaultValue","entities_Entities","sheets","books","maps","histories","pendings","tuidArr","actionArr","sheetArr","queryArr","bookArr","mapArr","historyArr","pendingArr","loadIds","clearCacheTimer","accesses","buildEntities","loadEntities","buildTuids","buildAccess","div","tuidUrl","cacheTimer","newTuid","fromType","fromObj","book","pending","uqId","newBook","newMap","newHistory","newSheet","newPending","buildSheet","ownerField","af","bootstrapCreateRow","elementCreateRow","_control__WEBPACK_IMPORTED_MODULE_1__","RowContainer","cc","control","setInitValues","ElementRowContainer","BootStrapRowContainer","refetchApi","ApiBase","getHttpChannel","callFetch","TitleBar","logoutClick","_nav__WEBPACK_IMPORTED_MODULE_1__","showLogout","navChange","hasBack","href","debugLogout","rightView","b","nick","openWindow","DefaultRow","vQueryMain_VQueryMain","resetPage","loadPage","replacePage","pageResult","queryResult","again","renderExtra","rightClose","queryRow","vQuerySelect_VQuerySelect","vQuerySelect_awaiter","selectRow","vQuerySelect_QueryPageItems","cQuery_CQueryBase","cQuery_CQuery","VQueryMain","main","cQuery_CQuerySelect","VQuerySelect","ImageItemEdit","_itemEdit__WEBPACK_IMPORTED_MODULE_7__","overSize","upload","resUploader","resId","isChanged","_page__WEBPACK_IMPORTED_MODULE_6__","_resUploader__WEBPACK_IMPORTED_MODULE_3__","multiple","maxSize","border","padding","_image__WEBPACK_IMPORTED_MODULE_4__","_nav__WEBPACK_IMPORTED_MODULE_5__","mobx__WEBPACK_IMPORTED_MODULE_2__","Loading","ResUploader","files","fileInput","FormData","file","abortController","AbortController","signal","onFilesChange","_rule__WEBPACK_IMPORTED_MODULE_0__","_field__WEBPACK_IMPORTED_MODULE_1__","_face__WEBPACK_IMPORTED_MODULE_2__","_TonvaForm__WEBPACK_IMPORTED_MODULE_5__","FormView","buildRows","some","every","formRows","createRow","buildRow","buttonsRow","createButtons","_rowContainer__WEBPACK_IMPORTED_MODULE_4__","formRow","formRowCreator","_control__WEBPACK_IMPORTED_MODULE_3__","buttons","CApp","tonva_tools__WEBPACK_IMPORTED_MODULE_2__","cImportUqs","cUqCollection","tonva_react_form__WEBPACK_IMPORTED_MODULE_3__","onRowClick","selectUnitPage","appUnits","setSettings","tonvaApp","retErrors","promiseChecks","roleAppUI","buildRoleAppUI","uqUI","newCUq","checks","retError","roles","lodash__WEBPACK_IMPORTED_MODULE_1___default","getCUq","CUq","_uq__WEBPACK_IMPORTED_MODULE_4__","cUqArr","VAppMain","_centerApi__WEBPACK_IMPORTED_MODULE_5__","userAppUnits","showUnsupport","appUnit","loadUqs","clearPrevPages","showMainPage","renderView","userName","sheetTypeId","getCUqFromId","navSheet","appContent","appPage","entityIcons","react__WEBPACK_IMPORTED_MODULE_0___default","tonva_react_form__WEBPACK_IMPORTED_MODULE_1__","fixWidth","ControllerUq","centerApi","vMain_VSheetMain","newClick","schemaClick","archivesClick","sheetStateClick","renderState","badge","getStateLabel","templet","statesCount","filter","isDev","vNew_VSheetNew","vNew_awaiter","valuesWithBox","onSave","leftFlowStyle","width","vSheetView_VSheetView","flowRow","preState","sheetView","removed","sheetData","vEdit_VSheetEdit","vEdit_awaiter","saveSheet","controllers_form","vSheetAction_VSheetAction","actionClick","vSheetAction_awaiter","acted","deleteClick","editClick","editSheet","actionButtons","startButtons","no","stateLabel","getActionLabel","backPage","vSchema_VSheetSchema","schemaStringify","vArchives_VArchives","archiveClick","vArchives_awaiter","processing","archiveRow","getArchives","vList_VSheetList","rowClick","vList_awaiter","pageStateItems","listRow","stateName","vArchived_VArchived","vSheet_VSheet","vSaved_VSheetSaved","restart","vSaved_awaiter","vSheetProcessing_VSheetProcessing","cSheet_CSheet","cSheet_awaiter","showSaved","loadStateSheetCount","createPageStateItems","VSheetMain","onSheet","me","$","sheetActPreState","sheetActState","changeStateCount","curState","delta","stateCount","VSheetNew","sheetNew","VSheetSaved","sheetSaved","VSheetEdit","sheetEdit","VSheetSchema","VArchives","VArchived","VSheetList","VSheetAction","VSheetProcessing","showArchived","showAction","showProcessing","beforeStart","onEvent","getSheetData","vCall","inBrief","getArchived","getStateUI","actionName","sheetTitle","disc","vBookMain_VBookMain","cBook_CBook","VBookMain","vUq_VUq","isSysVisible","linkItem","cLink","lists","tuidLinks","mapLinks","sheetLinks","actionLinks","queryLinks","bookLinks","historyLinks","pendingLinks","Fragment","isVisible","controllers_link","cTuidMain","cMap","cSheet","cAction","cQuery","cBook","cHistory","cPending","lowerPropertyName","cUq_CUq","schemaLoaded","controllers_tuid","CTuidSelect","CTuidInfo","CQuery","CQuerySelect","CMap","CAction","CSheet","CBook","CHistory","controllers_history","CPending","baseUrl","loadEntites","collection","warn","tuidPlaceHolder","en","sheetFromTypeId","startSheet","entityName","entityType","cFromName","tUI","cEntity","getUI","VUq","vMain_VMapMain","itemRender","ItemRow","remove","valuesView","box","isLeaf","keyIndex","keyUI","keyUIs","keyContent","valuesContent","keyNone","addClick","removeClick","inputValues_VInputValues","onValuesSubmit","inputValues_awaiter","cMap_MapItem","cMap_CMap","cMap_awaiter","keysLen","keyFields","keysLast","idx","keyField","kn","searchParam","ki","searchOnKey","arr1","nullable","rowIndex","createItem","getLable","confirmDelete","template","v0","q","retFields","newItem","addItem","VMapMain","callParam","vHistoryMain_VHistoryMain","cHistory_CHistory","VHistoryMain","vActionMain_VActionMain","resultPage","mainPage","cAction_CAction","VActionMain","vPendingMain_VPendingMain","cPending_CPending","VPendingMain","ItemEdit","itemSchema","uiItem","internalStart","internalEnd","netToken","_uqApi__WEBPACK_IMPORTED_MODULE_0__","_wsChannel__WEBPACK_IMPORTED_MODULE_1__","userApi","_net__WEBPACK_IMPORTED_MODULE_0__","_user__WEBPACK_IMPORTED_MODULE_1__","account","verify","prop","left0","zero","num","fix","Controller","_net__WEBPACK_IMPORTED_MODULE_3__","onMessageReceive","onMessage","isLogined","unregisterReceiveHandler","receiveHandlerId","onDispose","vp","registerReceiveHandler","_resolve_$","View","VPage","_schema__WEBPACK_IMPORTED_MODULE_0__","_uiSchema__WEBPACK_IMPORTED_MODULE_1__","itemObservable","isFirst","loading","beforeLoad","loaded","allLoaded","firstSize","appendPosition","_items","mobx__WEBPACK_IMPORTED_MODULE_0__","topDiv","_uid__WEBPACK_IMPORTED_MODULE_1__","bottomDiv","setPageStart","unshift","reverse","CacheIds","maxCount","dict","Map","loadId","_loadIds","_loadId","TonvaForm","_formView__WEBPACK_IMPORTED_MODULE_2__","DropdownActions","handleDocumentClick","dropdownOpen","contains","menu","toggle","removeEventListener","isRight","hasIcon","data-toggle","aria-expanded","dropdown-menu","dropdown-menu-right","aria-hidden","EasyDate","now","nDate","getDate","_date","hour","getHours","minute","getMinutes","month","getMonth","hm","getFullYear","Media","disp","px","py","SearchBox","allowEmptySearch","inputSize","lab","inputClassName","buttonText","MultiStep","lodash__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_2__","_form__WEBPACK_IMPORTED_MODULE_3__","stepViews","topView","onPrev","onNext","stepName","steps","ButtonConten","prefix","btnContent","formProps","setStep","nextStepName","pIcon","sIcon","RuleCustom","func","RulePredefined","rules_RuleNum","minMsg","maxMsg","checkMore","integer","widget_Widget","context","fieldProps","contextErrors","onInputChange","changeValue","container","visible","inNode","requiredFlag","FieldContainer","getUiItem","removeErrorWidget","addErrorWidget","isChanging","initData","newValue","fromElement","onChanging","onChanged","prev","allowChange","setDataValue","setElementValue","fieldClass","FieldClass","uiLabel","Templet","errorList","tag","textWidget_TextWidget","onKeyDown","internalOnKeyDown","keyCode","onEnter","checkContextRules","removeErrors","renderTemplet","renderErrors","numberWidget_NumberWidget","updownWidget_UpdownWidget","returnValue","isValidKey","dateWidget_DateWidget","checkBoxWidget_CheckBoxWidget","defaultChecked","selectWidget_SelectWidget","option","selectWidget_decorate","idWidget_IdWidget","idWidget_awaiter","pickId","clearContextError","required-item","cursor-pointer","idWidget_decorate","Unknown","dataType","uiType","dataTypes","buttonWidget_ButtonWidget","buttonWidget_awaiter","onButtonClick","observerRender","widget","widgetType","ButtonClass","context_Context","uiSchema","isRow","widgets","errorWidgets","subContexts","arrRowContexts","itemName","getDisabled","setDisabled","getReadOnly","setReadOnly","getVisible","setVisible","checkFieldRules","clearContextErrors","rowContext","setContextError","checkHasError","context_decorate","rowKeySeed","RowContext","parentContext","arrSchema","uiArr","itemSchemas","parentData","FormContext","ContextContainer","ArrComponent","selectable","deletable","restorable","getArrRowContexts","arrLabel","ArrContainer","RowSeperator","formSelectable","formDeletable","formRestorable","arrSelectable","arrDeletable","arrRestorable","ac","rc","rs","sep","typeofTemplet","factory","selectCheck","deleteIcon","$isSelected","$source","isDeleted","$isDeleted","onDelClick","editContainer","deleted","row-selected","Provider","imageWidget_ImageWidget","imageWidget_awaiter","imageItemEdit","imageSrc","end","ui_image","imageWidget_decorate","widgetsFactory","datetime","time","email","updown","image","checkboxes","radio","range","typeWidget","getItemSchema","getTypeWidget","WidgetClass","formRes","zh","form_Form","watch","formData","calcSelectOrDelete","DefaultContainer","DefaultFieldContainer","fieldLabelSize","labelView","fieldCol","DefaultFieldClass","DefaultButtonClass","DefaultRes","ui_res","py-3","Container","formContext","initDataItem","arrItem","arrItems","arrDict","arrItemOperated","formArrVal","beforeShow","buttonName","contextType","Badge_Badge","badgeAlign","badgeVertical","LMR_LMR","cursor","LMR_decorate","FA_FA","spin","pull","pulse","rotate","flip","inverse","Muted","base_ListBase","pageItems","selectedItems","nextProps","clickable_Clickable","static_Static","selectable_Selectable","itemsArray","compare","_selectedItems","selected","labelId","si","buildItems","anySelected","onSelect","flex","marginBottom","htmlFor","selectable_decorate","list_List","listBase","nextState","nextContext","updateProps","isLoading","staticRow","list_decorate","PropRow","row_PropBorder","borderTop","row_PropGap","w","backgroundColor","valueAlignStart","valueAlignCenter","valueAlignEnd","row_LabeledPropRow","gridProps","bk","bg-white","renderLabel","renderProp","align","vAlign","col","full","alignValue","renderPropBody","renderPropContent","StringPropRow","NumberPropRow","row_ListPropRow","borderBottom","ComponentPropRow","propView_PropView","isGap","PropGrid_PropGrid","propView","stringItemEdit_StringItemEdit","edit_itemEdit","preValue","edit_Edit","defaultSepClassName","defaultRowContainerClassName","edit_awaiter","onItemChanged","onItemClick","itemEdit","createItemEdit","topBorderClassName","bottomBorderClassName","sepClassName","rowContainerClassName","topBorder","bottomBorder","elItems","divValue","listRow_ListRow","pressed","isIcon","noteNum","mid","viceSpan","vice","middle","midSize","unread","uv","va-action","listView_ListView","elHeader","itemClick","converter","ex","listItem","listView_decorate","Tab","_content","contentBuilder","tabs_Tabs","tabClick","selectedTab","tabBack","contentBack","notify","tabName","height","display","notifyCircle","userSetProp","FetchErrorView","reApi","_net__WEBPACK_IMPORTED_MODULE_1__","errContent","LocalData","Data","homeTabCur","module","exports","mainApi","toUser","fromUnit","fromApp","fellow","isOwner","isAdmin","apps","member","assigned","devApi","uqsText","service","admins_Admins","store","owners","admins","fellows","unitAdmins","ua","fellowId","unitSetAdmin","removeCur","admin","unitAddAdmin","dev_ObjItems","dev","_load","_save","_inc","_del","_dec","dev_decorate","dev_Apps","searchedUqs","saveApp","delApp","counts","searchUq","searchPageSize","allUqs","appBindUq","dev_Uqs","saveUq","delUq","dev_Buses","buses","saveBus","delBus","bus","dev_Servers","servers","saveServer","delServer","server","dev_Services","services","saveService","delService","changeServiceProp","db","db_type","connection","loadUqServices","SearchItems","dev_Dev","searchApp","searchServer","searchUqdb","cacheIds_CacheUnits","cacheIds_CacheUqs","cacheIds_CacheApps","cacheIds_CacheServers","store_Store","cacheUnits","cacheUqs","cacheApps","cacheServers","memberCount","roleApps","roleMember","roleMembers","memberRoles","unitChangeProp","unitApps","unitMemberCount","uqServer","uqBuilderUrl","unitDeleteApp","inUnit","unitAddApp","unitRoles","unitAddRole","unitRoleChangeProp","unitRoleApps","unitRoleSetApps","unitMembers","unitAssignMember","unitMemberRoles","rId","unitSetMemberRoles","org","store_decorate","store_store","NewFellow_NewFellowPage","onSendInvitation","NewFellow_awaiter","addNew","NewFellow","NewFellow_decorate","EditAdmin_EditAdmin","isRoot","Fellow","Administors_EditAdmin","EditAdmin_decorate","Administors_AdministorsPage","onNewOwner","newAdmin","onNewAdmin","ownersView","adminsView","onNewFellow","showOwners","showAdmins","Administors","Administors_decorate","idDates_IdDates","date_init","date_update","span","isLink","unitSpan_UnitSpan","unitSpan_UnitInfo","unitSpan_decorate","unitSpan_UnitName","consts_appIcon","appItemIcon","uqSpan_UqSpan","uqSpan_UqInfo","uqSpan_decorate","appSpan_AppSpan","appSpan_AppInfo","public","appSpan_decorate","apis","appSpan_AppRow","serverSpan_ServerSpan","serverSpan_ServerInfo","cloud","ip","serverSpan_decorate","stringValueEdit_StringValueEdit","stringValueEdit_awaiter","errorDiv","info","stringValueEdit_TextValueEdit","onTextAreaChange","idPickPage_IdPickPage","idPickPage_awaiter","candidateItems","searchPlaceHolder","idPickPage_decorate","info_Info","renderUqRow","uqAccess","act","info_awaiter","appActed","newInUnit","restoreUnitApp","stopUnitApp","newApp","addUnitApp","uqAccesses","faName","info_decorate","new_PageApps","new_NewApp","new_awaiter","appClick","renderApp","new_decorate","Apps_AppsPage","loadApps","ban","src_Apps","Apps_decorate","newRole_NewRole","newRole_awaiter","roleApps_RoleApps","renderRoleApp","memberPage_MemberPage","renderMemberRole","setRole","memberPage_SetRole","loadRoles","loadMemberRoles","orgValue","roleUser","onAssigned","roleClick","memberPage_decorate","setMemberRoles","selectRole","renderRole","roleSelect","membersPage_MembersPage","loadMembers","MemberRow","setRoleUser","roleId","membersPage_MemberSearch","renderMember","userClick","membersPage_decorate","members","rolePage_RolePage","roleAppClick","rolePage_RoleApps","loadRoleApps","rolePage_EditRole","onMembersClick","membersLeft","membersRight","editRole","addRoleApp","rolePage_decorate","roleChangeProp","isSysRole","onNameChanged","onDiscriptionChanged","setRoleApps","appSelect","midClassName","Members_Members","newRole","allUsersClick","Members_decorate","src_organization_ui","teamPerson","tonva_react_uq","_super","searchOnPost","querySelect","team","noStaff","staff","noPost","organization","teamPosts","CN","tuidNullCaption","arrNew","arrEdit","fromUser","subject","getMessage","newMessage","editSumbit","sectionTeam","teamOrganization","person","given","sur","gender","section","vOpBinding_VOpBinding","sheetOpsChanged","stateTosView","tosText","tos","organizationRow","teamRow","observableTeamRow","sectionRow","observableSectionRow","postRow","observablePostRow","stateView","vOpBinding_awaiter","saveOps","selectablePosts","teamsList","teams","defaultSelected","onPostSelectChanged","sections","onTeamSelectChanged","onSectionSelectChanged","organizations","posts","postTos","pid","pto","buildSelectablePost","buildSelectableTeams","teamTos","hasAllTeams","teamId","tto","teamTo0","teamTo0Sections","buildSelectableSections","teamTo","selectableTeam0","hasSection","selectableSection","selectableSections","stateTo","configable","stateClick","tosView","opTos","tosTexts","stateToName","toArr","sp","postId","teamCount","st","sectionCount","ss","sectionId","saveSheetStatePosts","vAllPosts_VAllPosts","onCheckChanged","def","saveChange","vAllPosts_awaiter","saveEntityOpForAll","pageRender","buttonSave","lineHeight","fontWeight","listStyleType","blocks","block","getEntityOpForAll","entityOpForAllResult","entityOpForAll","eaa","vAllPosts_decorate","vFullFunction_VFullFunction","users","onStopFully","vFullFunction_awaiter","onSumitStopFully","onCancelStop","_uq","_user","entityOpUserFully","callSearchUser","onUserSelected","renderUser","pageUsers","onSetFully","tuidUser","onCancelFully","renderSelectUser","usersView","vFullFunction_decorate","vSearchUser_VSearchUser","vSearchUser_PageUsers","onUserClick","vSearchUser_awaiter","cOpBinding_COpBinding","appRender","appView","appsView","cOpBinding_awaiter","entityPosts","opTo","postDict","teamDict","sectionDict","sheetClick","sheetClickOld","renderSetting","settingClick","V","uqRender","nameRender","sheetRender","buildPosts","buildAppsUqs","setUqEntities","queryAllTeams","organizationDict","tm","og","sec","lns","setEntities","setSheets","lines","actionSaveEntityOpPost","opName","organization_COrganization","links","organization_VOrganization","organization_awaiter","ServerCaption","editPage_schema","editPage_EditBasePage","editPage_awaiter","moreCandidates","pickServerId","renderServerInput","itemId","editPage_EditPage","editPage_NewPage","appsPage_AppsPage","appList","listRowClick","appRow","appUqs_SearchUqPage","appUqs_awaiter","onUq","getMyUqs","appUqs_decorate","appUqs_AppUqs","removeBind","btnProps","appUqs_Uqs","listHeader","btn","onBind","appPage_AppPage","editItem","appPage_awaiter","deleteItem","deleteApp","menuItems","btnAddUq","uqClick","elAccess","bind_access","uqBindPage_UqBindPage","accessChecked","saveUqBind","uqBindPage_awaiter","removeUqBind","btnDelete","checkAccessList","bc","apps_AppController","apps_awaiter","service_count","buildBindUqs","isNew","uaUq","apps_decorate","uqUpload_UqUpload","upFiles","fileClick","fr","FileReader","onload","uqUpload_UqPage","readAsText","onUpdate","uqUpload_awaiter","update","onUpdateThoroughly","lastModifiedDate","trunc","sz","thoroughly","uqUpload_CompileResult","fileList","fileRender","encType","compiled","doubleClick","pane","getParent","topIntoView","bottomIntoView","texts","seconds","abort","timeHandler","tagName","parentElement","clearTimeHandler","scrollIntoView","reader","getReader","pump","read","done","scrollToBottom","uintArray","encodedString","fromCharCode","apply","decodeURIComponent","uintToString","byteLength","onDoubleClick","wordWrap","whiteSpace","createIdPick","createIdPick_IdPickPage","newServicePage_ServerCaption","urlRow","serverRow","newServicePage_awaiter","dbTypeRow","dbRow","connectionRow","newServicePage_NewServicePage","tonvaForm","bindId","servicePage_ServicePage","onUrlChanged","servicePage_awaiter","changeProp","onDbChanged","onDbTypeChanged","onConnectionChanged","onDeleteClick","servicePage_decorate","editPage_formRows","uqs_editPage_EditBasePage","uqs_editPage_awaiter","uqs_editPage_EditPage","uqs_editPage_NewPage","uqPage_UQPage","uqPage_awaiter","deleteUq","onUqUpload","serviceClick","showNewServicePage","renderService","compile_time","compile","listPage_ListPage","uqList","uqs_UQController","uqs_awaiter","loadUqEntities","uqGetEntities","r0","svc","uqs_decorate","row_Row","buses_Info","buses_SchemaView","buses_decorate","repeated","idPickAppProps","services_awaiter","idPickUqProps","serviceTypeNames","bindIdField","services_urlRow","discriptionRow","services_serverRow","ObjView_ObjView","ObjView_Info","ObjView_New","ObjView_decorate","saveCur","stepHeader","ObjView_Edit","extraMenuActions","vApps_VApps","appUsers","appUsersList","onAppsClick","searchBox","vUsers_VUsers","userApps","userAppsList","searchUser","onUsersClick","vApp_VApp","curApp","curAppUsers","onAppEditUsers","vUser_VUser","curUser","curUserApps","onUserEditApps","vAppEditUsers_VAppEditUsers","appEditUsers","editUser","onUserChanged","vAppEditUsers_awaiter","bindAppUser","vUserEditApps_VUserEditApps","userEditApps","editApp","onAppChanged","vUserEditApps_awaiter","bindUserApp","VAddUser_VAddUser","onSearchFocus","divUser","onAddUser","VAddUser_awaiter","userFromKey","addUser","addedPage","onAddApps","onContinueAddUser","VAddUser_decorate","cUsers_UsersController","onAppUsers","cUsers_awaiter","loadAppUsers","onUserApps","loadUserApps","unitOneAppUsers","unitOneUserApps","unitAppEditUsers","unitUserEditApps","unitAddUser","appIcon","userIcon","unitAppUsers","coll","unitUsers","cUsers_decorate","Admin_CAdmin","userAdminUnits","adminUnits","loadUnit","isProduction","loadAdminUnits","Admin_VAdmin","noUnitPage","Admin_awaiter","Admin_AdminPage","rArrow","typeCaptions","1","2","3","appsAction","usersAction","newUsersAction","adminsAction","cOrganization","organizeAction","noneAction","objProps","P","loadCounts","devItems","Admin_UnitProps","Admin_decorate","src_App_0","cAdmin","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","react_dom","URL","origin","response","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.80a75ca3.chunk.js","sourcesContent":["export {left0} from './left0';\r\nexport * from './user';\r\nexport * from './net';\r\nexport * from './ui';\r\nexport * from './uid';\r\nexport {PageItems} from './pageItems';\r\nexport {CacheIds} from './cacheIds';\r\nexport * from './entry';\r\n\r\n","export * from './form';\r\nexport * from './list';\r\nexport * from './dropDownActions';\r\nexport * from './easyDate';\r\nexport * from './propGrid';\r\nexport * from './components';\r\nexport * from './media';\r\nexport * from './listView';\r\nexport * from './searchBox';\r\nexport * from './multiStep';\r\nexport * from './uid';\r\n","import * as React from 'react';\r\nimport { Controller, VPage, View } from 'tonva-tools';\r\nimport { Entity, Field, TuidMain } from '../entities';\r\nimport { CUq } from './uq/cUq';\r\nimport { VForm, FieldInputs, FieldCall, FormOptions, FormMode } from './form';\r\nimport { CQuerySelect } from './query';\r\nimport { FormUI, FieldTuidUI } from './formUI';\r\nimport { entityIcons } from './icons';\r\nimport { ControllerUq } from './ControllerUq';\r\n\r\nexport interface EntityUI {\r\n    form?: FormUI;\r\n}\r\n\r\nexport abstract class CEntity<T extends Entity, UI extends EntityUI> extends ControllerUq {\r\n    constructor(cUq: CUq, entity: T, ui: UI, res: any) {\r\n        super(cUq, res);\r\n        Object.setPrototypeOf(this.x, cUq.x);\r\n        let {name, typeName} = entity;\r\n        this.entity = entity;\r\n        this.ui = ui; // || entityUI.ui;\r\n        this.label = this.res.label || name;\r\n        this.icon = entityIcons[typeName];\r\n    }\r\n    readonly entity: T;\r\n    readonly ui: UI;\r\n\r\n    protected async beforeStart():Promise<boolean> {\r\n        //if (await super.beforeStart() === false) return false;\r\n        await this.entity.loadSchema();\r\n        return true;\r\n    }\r\n\r\n    createForm(onSubmit:()=>Promise<void>, values?:any, mode?:FormMode) {\r\n        let options = this.buildFormOptions(mode);\r\n        let ret = new VForm(options, onSubmit);\r\n        ret.setValues(values);\r\n        return ret;\r\n    }\r\n\r\n    private buildFormOptions(mode?:FormMode):FormOptions {\r\n        let {fields, arrFields} = this.entity;\r\n        let none, submitCaption, arrNewCaption, arrEditCaption, arrTitleNewButton;\r\n        if (this.res !== undefined) {\r\n            none = this.res['none'];\r\n            submitCaption = this.res['submit'];\r\n            arrNewCaption = this.res['arrNew'];\r\n            arrEditCaption = this.res['arrEdit'];\r\n            arrTitleNewButton = this.res['arrTitleNewButton'];\r\n        }\r\n        if (none === undefined) {\r\n            none = this.cUq.res['none'] || 'none';\r\n        }\r\n        if (submitCaption === undefined)\r\n            submitCaption = this.cUq.res['submit'] || 'Submit';\r\n        if (arrNewCaption === undefined)\r\n            arrNewCaption = this.cUq.res['arrNew'] || 'New';\r\n        if (arrEditCaption === undefined)\r\n            arrEditCaption = this.cUq.res['arrEdit'] || 'Edit';\r\n        if (arrTitleNewButton === undefined)\r\n        arrTitleNewButton = this.cUq.res['arrTitleNewButton'];\r\n        if (mode === undefined) mode = FormMode.new;\r\n        let formUI = this.ui.form;\r\n        let ret:FormOptions = {\r\n            fields: fields,\r\n            arrs: arrFields,\r\n            ui: formUI,\r\n            res: this.res || {},\r\n            inputs: this.buildInputs(formUI),\r\n            none: none,\r\n            submitCaption: submitCaption,\r\n            arrNewCaption: arrNewCaption,\r\n            arrEditCaption: arrEditCaption,\r\n            arrTitleNewButton: arrTitleNewButton,\r\n            mode: mode,\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private buildInputs(formUI: FormUI):FieldInputs {\r\n        let {fields, arrFields} = this.entity;\r\n        let ret:FieldInputs = {};\r\n        this.buildFieldsInputs(ret, fields, undefined, formUI);\r\n        if (arrFields !== undefined) {\r\n            for (let arr of arrFields) {\r\n                let {name, fields} = arr;\r\n                let items = formUI && formUI.items;\r\n                this.buildFieldsInputs(ret, fields, name, items && items[name] as FormUI);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private buildFieldsInputs(ret:FieldInputs, fields:Field[], arr:string, formUI: FormUI) {\r\n        if (arr !== undefined) {\r\n            let arrFieldInputs = ret[arr];\r\n            if (arrFieldInputs === undefined) {\r\n                ret[arr] = arrFieldInputs = {};\r\n                ret = arrFieldInputs;\r\n            }\r\n        }\r\n        for (let field of fields) {\r\n            let {name, _tuid} = field;\r\n            if (_tuid === undefined) continue;\r\n            let fieldUI = formUI && formUI.items && formUI.items[name] as FieldTuidUI;\r\n            ret[name] = {\r\n                select: this.buildSelect(field, arr, fieldUI),\r\n                content: this.buildContent(field, arr),\r\n                placeHolder: this.cUq.getTuidPlaceHolder(_tuid),\r\n            };\r\n        }\r\n    }\r\n\r\n    protected buildSelect(field:Field, arr:string, fieldUI: FieldTuidUI):FieldCall {\r\n        return async (form:VForm, field:Field, values:any):Promise<any> => {\r\n            let {_tuid, _ownerField} = field;\r\n            let cTuidSelect = await (_tuid as TuidMain).cSelectFrom();\r\n            let param:any = undefined;\r\n            if (_ownerField !== undefined) param = form.getValue(_ownerField.name);\r\n            if (fieldUI && fieldUI.autoList === true) {\r\n                console.log('select search set param=empty string');\r\n                param = '';\r\n            }\r\n            let ret = await cTuidSelect.call(param);\r\n            cTuidSelect.removeCeased(); // 清除已经废弃的顶部页面\r\n            if (ret === undefined) return undefined;\r\n            let id = cTuidSelect.idFromItem(ret);\r\n            _tuid.useId(id);\r\n            return id;\r\n        };\r\n    }\r\n\r\n    protected buildContent(field:Field, arr:string): React.StatelessComponent<any> {\r\n        return;\r\n    }\r\n\r\n    cQuerySelect(queryName:string):CQuerySelect {\r\n        return this.cUq.cQuerySelect(queryName);\r\n    }\r\n}\r\n\r\nexport abstract class VEntity<T extends Entity, UI extends EntityUI, C extends CEntity<T, UI>> extends VPage<C> {\r\n    protected readonly entity: T;\r\n    protected readonly ui: UI;\r\n    constructor(controller: C) {\r\n        super(controller);\r\n        this.entity = controller.entity;\r\n        this.ui = controller.ui;\r\n    }\r\n\r\n    get label():string {return this.controller.label}\r\n\r\n    //private _form_$: VForm;\r\n    protected createForm(onSubmit:()=>Promise<void>, values?:any, mode?:FormMode): VForm {\r\n        //if (this._form_$ !== undefined) return this._form_$;\r\n        return this.controller.createForm(onSubmit, values, mode);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable, has} from 'mobx';\r\nimport {User, Guest/*, UserInNav*/} from '../user';\r\nimport {Page} from './page';\r\nimport {netToken} from '../net/netToken';\r\nimport FetchErrorView from './fetchErrorView';\r\nimport {FetchError} from '../fetchError';\r\nimport {appUrl, setAppInFrame, logoutUqTokens, getExHash, getExHashPos} from '../net/appBridge';\r\nimport {LocalData} from '../local';\r\nimport {guestApi, logoutApis, setCenterUrl, setCenterToken, WSChannel, appInFrame, isDevelopment, host} from '../net';\r\nimport { WsBase, wsBridge } from '../net/wsChannel';\r\nimport { resOptions } from './res';\r\nimport { Loading } from './loading';\r\n\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport '../css/va-form.css';\r\nimport '../css/va.css';\r\nimport '../css/animation.css';\r\n\r\nconst regEx = new RegExp('Android|webOS|iPhone|iPad|' +\r\n    'BlackBerry|Windows Phone|'  +\r\n    'Opera Mini|IEMobile|Mobile' , \r\n    'i');\r\nconst isMobile = regEx.test(navigator.userAgent);\r\nexport const mobileHeaderStyle = isMobile? {\r\n    minHeight:  '3em'\r\n} : undefined;\r\n\r\nconst logo = require('../img/logo.svg');\r\nlet logMark: number;\r\nconst logs:string[] = [];\r\n\r\nexport interface Props //extends React.Props<Nav>\r\n{\r\n    //view: JSX.Element | (()=>JSX.Element);\r\n    //start?: ()=>Promise<void>;\r\n    onLogined: ()=>Promise<void>;\r\n    notLogined?: ()=>Promise<void>;\r\n};\r\nlet stackKey = 1;\r\nexport interface StackItem {\r\n    key: number;\r\n    view: JSX.Element;\r\n    ceased: boolean;\r\n    confirmClose?: ()=>Promise<boolean>;\r\n    disposer?: ()=>void;\r\n}\r\nexport interface State {\r\n    stack: StackItem[];\r\n    wait: 0|1|2;\r\n    fetchError: FetchError\r\n}\r\n\r\nexport class NavView extends React.Component<Props, State> {\r\n    private stack: StackItem[];\r\n    private htmlTitle: string;\r\n    private waitCount: number = 0;\r\n    private waitTimeHandler?: NodeJS.Timer;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.back = this.back.bind(this);\r\n        this.navBack = this.navBack.bind(this);\r\n        this.stack = [];\r\n        this.state = {\r\n            stack: this.stack,\r\n            wait: 0,\r\n            fetchError: undefined\r\n        };\r\n    }\r\n    async componentWillMount() {\r\n        window.addEventListener('popstate', this.navBack);\r\n    }\r\n\r\n    async componentDidMount()\r\n    {\r\n        nav.set(this);\r\n        /*\r\n        let start = this.props.start;\r\n        if (start !== undefined) {\r\n            await start();\r\n        }\r\n        else {\r\n        */\r\n            await nav.start();\r\n        //}\r\n    }\r\n\r\n    get level(): number {\r\n        return this.stack.length;\r\n    }\r\n\r\n    startWait() {\r\n        if (this.waitCount === 0) {\r\n            this.setState({wait: 1});\r\n            this.waitTimeHandler = global.setTimeout(\r\n                () => {\r\n                    this.waitTimeHandler = undefined;\r\n                    this.setState({wait: 2});\r\n                },\r\n                1000) as NodeJS.Timer;\r\n        }\r\n        ++this.waitCount;\r\n        this.setState({\r\n            fetchError: undefined,\r\n        });\r\n    }\r\n\r\n    endWait() {\r\n        setTimeout(() => {\r\n            /*\r\n            this.setState({\r\n                fetchError: undefined,\r\n            });*/\r\n            --this.waitCount;\r\n            if (this.waitCount === 0) {\r\n                if (this.waitTimeHandler !== undefined) {\r\n                    clearTimeout(this.waitTimeHandler);\r\n                    this.waitTimeHandler = undefined;\r\n                }\r\n                this.setState({wait: 0});\r\n            }\r\n        },100);\r\n    }\r\n\r\n    async onError(fetchError: FetchError)\r\n    {\r\n        let err = fetchError.error;\r\n        if (err !== undefined && err.unauthorized === true) {\r\n            await nav.showLogin(undefined);\r\n            return;\r\n        }\r\n        this.setState({\r\n            fetchError: fetchError,\r\n        });\r\n    }\r\n\r\n    show(view: JSX.Element, disposer?: ()=>void): number {\r\n        this.clear();\r\n        return this.push(view, disposer);\r\n    }\r\n\r\n    push(view: JSX.Element, disposer?: ()=>void): number {\r\n        this.removeCeased();\r\n        if (this.stack.length > 0) {\r\n            window.history.pushState('forward', null, null);\r\n        }\r\n        let key = stackKey++;\r\n        this.stack.push({\r\n            key: key,\r\n            view: view, \r\n            ceased: false,\r\n            disposer: disposer\r\n        });\r\n        this.refresh();\r\n        //console.log('push: %s pages', this.stack.length);\r\n        return key;\r\n    }\r\n\r\n    replace(view: JSX.Element, disposer?: ()=>void): number {\r\n        let item:StackItem = undefined;\r\n        let stack = this.stack;\r\n        if (stack.length > 0) {\r\n            item = stack.pop();\r\n            //this.popAndDispose();\r\n        }\r\n        let key = stackKey++;\r\n        this.stack.push({\r\n            key: key, \r\n            view: view, \r\n            ceased: false,\r\n            disposer: disposer\r\n        });\r\n        if (item !== undefined) this.dispose(item.disposer);\r\n        this.refresh();\r\n        //console.log('replace: %s pages', this.stack.length);\r\n        return key;\r\n    }\r\n\r\n    ceaseTop(level:number = 1) {\r\n        let p = this.stack.length - 1;\r\n        for (let i=0; i<level; i++, p--) {\r\n            if (p < 0) break;\r\n            let item = this.stack[p];\r\n            item.ceased = true;\r\n        }\r\n    }\r\n\r\n    pop(level:number = 1) {\r\n        let stack = this.stack;\r\n        let len = stack.length;\r\n        //console.log('pop start: %s pages level=%s', len, level);\r\n        if (level <= 0 || len <= 1) return;\r\n        if (len < level) level = len;\r\n        let backLevel = 0;\r\n        for (let i = 0; i < level; i++) {\r\n            if (stack.length === 0) break;\r\n            //stack.pop();\r\n            this.popAndDispose();\r\n            ++backLevel;\r\n        }\r\n        if (backLevel >= len) backLevel--;\r\n        this.refresh();\r\n        if (this.isHistoryBack !== true) {\r\n            //window.removeEventListener('popstate', this.navBack);\r\n            //window.history.back(backLevel);\r\n            //window.addEventListener('popstate', this.navBack);\r\n        }\r\n        //console.log('pop: %s pages', stack.length);\r\n    }\r\n\r\n    popTo(key: number) {\r\n        if (key === undefined) return;\r\n        if (this.stack.find(v => v.key === key) === undefined) return;\r\n        while (this.stack.length >0) {\r\n            let len = this.stack.length;\r\n            let top = this.stack[len-1];\r\n            if (top.key === key) break;\r\n            this.pop();\r\n        }\r\n    }\r\n\r\n    topKey():number {\r\n        let len = this.stack.length;\r\n        if (len === 0) return undefined;\r\n        return this.stack[len-1].key;\r\n    }\r\n\r\n    removeCeased() {\r\n        for (;;) {\r\n            let p=this.stack.length-1;\r\n            if (p < 0) break;\r\n            let top = this.stack[p];\r\n            if (top.ceased === false) break;\r\n            let item = this.stack.pop();\r\n            let {disposer} = item;\r\n            this.dispose(disposer);\r\n        }\r\n        this.refresh();\r\n    }\r\n\r\n    private popAndDispose() {\r\n        this.removeCeased();\r\n        let item = this.stack.pop();\r\n        if (item === undefined) return;\r\n        let {disposer} = item;\r\n        this.dispose(disposer);\r\n        this.removeCeased();\r\n        return item;\r\n    }\r\n\r\n    private dispose(disposer:()=>void) {\r\n        if (disposer === undefined) return;\r\n        let item = this.stack.find(v => v.disposer === disposer);\r\n        if (item === undefined) disposer();\r\n    }\r\n\r\n    clear() {\r\n        let len = this.stack.length;\r\n        while (this.stack.length > 0) this.popAndDispose();\r\n        //this.refresh();\r\n        if (len > 1) {\r\n            //window.removeEventListener('popstate', this.navBack);\r\n            //window.history.back(len-1);\r\n            //window.addEventListener('popstate', this.navBack);\r\n        }\r\n    }\r\n\r\n    regConfirmClose(confirmClose:()=>Promise<boolean>) {\r\n        let stack = this.stack;\r\n        let len = stack.length;\r\n        if (len === 0) return;\r\n        let top = stack[len-1];\r\n        top.confirmClose = confirmClose;\r\n    }\r\n\r\n    private isHistoryBack:boolean = false;\r\n    navBack() {\r\n        nav.log('backbutton pressed - nav level: ' + this.stack.length);\r\n        this.isHistoryBack = true;\r\n        this.back(true);\r\n        this.isHistoryBack = false;\r\n    }\r\n\r\n    async back(confirm:boolean = true) {\r\n        let stack = this.stack;\r\n        let len = stack.length;\r\n        if (len === 0) return;\r\n        if (len === 1) {\r\n            if (self != window.top) {\r\n                window.top.postMessage({type:'pop-app'}, '*');\r\n            }\r\n            return;\r\n        }\r\n        let top = stack[len-1];\r\n        if (confirm===true && top.confirmClose) {\r\n            if (await top.confirmClose()===true) this.pop();\r\n        }\r\n        else {\r\n            this.pop();\r\n        }\r\n    }\r\n\r\n    confirmBox(message?:string): boolean {\r\n        return window.confirm(message);\r\n    }\r\n    clearError = () => {\r\n        this.setState({fetchError: undefined});\r\n    }\r\n    render() {\r\n        const {wait, fetchError} = this.state;\r\n        let stack = this.state.stack;\r\n        let top = stack.length - 1;\r\n        let elWait = null, elError = null;\r\n        switch (wait) {\r\n            case 1:\r\n                elWait = <li className=\"va-wait va-wait1\">\r\n                </li>;\r\n                break;\r\n            case 2:\r\n                elWait = <li className=\"va-wait va-wait2\">\r\n                    <Loading />\r\n                </li>;\r\n                break;\r\n                //<i className=\"fa fa-spinner fa-spin fa-3x fa-fw\"></i>\r\n                //<span className=\"sr-only\">Loading...</span>\r\n        }\r\n        if (fetchError)\r\n            elError = <FetchErrorView clearError={this.clearError} {...fetchError} />\r\n        return (\r\n        <ul className='va'>\r\n            {\r\n                stack.map((item, index) => {\r\n                    let {key, view} = item;\r\n                    return <li key={key} style={index<top? {visibility: 'hidden'}:undefined}>\r\n                        {view}\r\n                    </li>\r\n                })\r\n            }\r\n            {elWait}\r\n            {elError}\r\n        </ul>\r\n        );\r\n    }\r\n\r\n    private refresh() {\r\n        // this.setState({flag: !this.state.flag});\r\n        this.setState({stack: this.stack });\r\n        // this.forceUpdate();\r\n    }\r\n}\r\n\r\nexport interface NavSettings {\r\n    loginTop?: JSX.Element;\r\n}\r\n\r\nexport class Nav {\r\n    private nav:NavView;\r\n    private ws: WsBase;\r\n    private wsHost: string;\r\n    private local: LocalData = new LocalData();\r\n    private navSettings: NavSettings;\r\n    @observable user: User/*InNav*/ = undefined;\r\n    language: string;\r\n    culture: string;\r\n    resUrl: string;\r\n\r\n    constructor() {\r\n        let {lang, district} = resOptions;\r\n        this.language = lang;\r\n        this.culture = district;\r\n    }\r\n\r\n    get guest(): number {\r\n        let guest = this.local.guest;\r\n        if (guest === undefined) return 0;\r\n        let g = guest.get();\r\n        if (g === undefined) return 0;\r\n        return g.guest;\r\n    }\r\n\r\n    set(nav:NavView) {\r\n        //this.logo = logo;\r\n        this.nav = nav;\r\n    }\r\n\r\n    registerReceiveHandler(handler: (message:any)=>Promise<void>):number {\r\n        if (this.ws === undefined) return;\r\n        return this.ws.onWsReceiveAny(handler);\r\n    }\r\n\r\n    unregisterReceiveHandler(handlerId:number) {\r\n        if (this.ws === undefined) return;\r\n        if (handlerId === undefined) return;\r\n        this.ws.endWsReceive(handlerId);\r\n    }\r\n\r\n    async onReceive(msg:any) {\r\n        if (this.ws === undefined) return;\r\n        await this.ws.receive(msg);\r\n    }\r\n\r\n    private async getPredefinedUnitName() {\r\n        try {\r\n            let unitRes = await fetch('unit.json', {});\r\n            //if (unitRes)\r\n            let res = await unitRes.json();\r\n            return res.unit;\r\n        }\r\n        catch (err) {\r\n            this.local.unit.clear();\r\n            return;\r\n        }\r\n    }\r\n\r\n    private async loadPredefinedUnit() {\r\n        let unitName:string;\r\n        let unit = this.local.unit.get();\r\n        if (unit !== undefined) {\r\n            if (isDevelopment !== true) return unit.id;\r\n            unitName = await this.getPredefinedUnitName();\r\n            if (unitName === undefined) return;\r\n            if (unit.name === unitName) return unit.id;\r\n        }\r\n        else {\r\n            unitName = await this.getPredefinedUnitName();\r\n            if (unitName === undefined) return;\r\n        }\r\n        let unitId = await guestApi.unitFromName(unitName);\r\n        if (unitId !== undefined) {\r\n            this.local.unit.set({id: unitId, name: unitName});\r\n        }\r\n        return unitId;\r\n    }\r\n\r\n    setSettings(settings?: NavSettings) {\r\n        this.navSettings = settings;\r\n    }\r\n\r\n    hashParam: string;\r\n    private centerHost: string;\r\n    async start() {\r\n        try {\r\n            let hash = document.location.hash;\r\n            if (hash !== undefined && hash.length > 0) {\r\n                let pos = getExHashPos();\r\n                if (pos < 0) pos = undefined;\r\n                this.hashParam = hash.substring(1, pos);\r\n            }\r\n            nav.clear();\r\n            this.startWait();\r\n            await host.start();\r\n            let {url, ws, resHost} = host;\r\n            this.centerHost = url;\r\n            this.resUrl = 'http://' + resHost + '/res/';\r\n            this.wsHost = ws;\r\n            setCenterUrl(url);\r\n            \r\n            let guest:Guest = this.local.guest.get();\r\n            if (guest === undefined) {\r\n                guest = await guestApi.guest();\r\n            }\r\n            nav.setGuest(guest);\r\n\r\n            let exHash = getExHash();\r\n            let appInFrame = setAppInFrame(exHash);\r\n            if (exHash !== undefined && window !== window.parent) {\r\n                // is in frame\r\n                if (appInFrame !== undefined) {\r\n                    this.ws = wsBridge;\r\n                    console.log('this.ws = wsBridge in sub frame');\r\n                    //nav.user = {id:0} as User;\r\n                    if (self !== window.parent) {\r\n                        window.parent.postMessage({type:'sub-frame-started', hash: appInFrame.hash}, '*');\r\n                    }\r\n                    // 下面这一句，已经移到 appBridge.ts 里面的 initSubWin，也就是响应从main frame获得user之后开始。\r\n                    //await this.showAppView();\r\n                    return;\r\n                }\r\n            }\r\n\r\n            let predefinedUnit = await this.loadPredefinedUnit();\r\n            appInFrame.predefinedUnit = predefinedUnit;\r\n\r\n            let user: User = this.local.user.get();\r\n            if (user === undefined) {\r\n                let {notLogined} = this.nav.props;\r\n                if (notLogined !== undefined) {\r\n                    await notLogined();\r\n                }\r\n                else {\r\n                    await nav.showLogin(undefined);\r\n                }\r\n                return;\r\n            }\r\n\r\n            await nav.logined(user);\r\n        }\r\n        catch (err) {\r\n        }\r\n        finally {\r\n            this.endWait();\r\n        }\r\n    }\r\n\r\n    async showAppView() {\r\n        let {onLogined} = this.nav.props;\r\n        if (onLogined === undefined) {\r\n            nav.push(<div>NavView has no prop onLogined</div>);\r\n            return;\r\n        }\r\n        nav.clear();\r\n        await onLogined();\r\n        console.log('logined: AppView shown');\r\n    }\r\n\r\n    setGuest(guest: Guest) {\r\n        this.local.guest.set(guest);\r\n        netToken.set(0, guest.token);\r\n    }\r\n\r\n    saveLocalUser() {\r\n        this.local.user.set(this.user);\r\n    }\r\n\r\n    async logined(user: User, callback?: (user:User)=>Promise<void>) {\r\n        logoutApis();\r\n        let ws:WSChannel = this.ws = new WSChannel(this.wsHost, user.token);\r\n        ws.connect();\r\n\r\n        console.log(\"logined: %s\", JSON.stringify(user));\r\n        this.user = user;\r\n        this.saveLocalUser();\r\n        netToken.set(user.id, user.token);\r\n        if (callback !== undefined) //this.loginCallbacks.has)\r\n            callback(user);\r\n            //this.loginCallbacks.call(user);\r\n        else {\r\n            await this.showAppView();\r\n        }\r\n    }\r\n\r\n    loginTop(defaultTop:JSX.Element) {\r\n        return (this.navSettings && this.navSettings.loginTop) || defaultTop;\r\n    }\r\n\r\n    async showLogin(callback?: (user:User)=>Promise<void>, withBack?:boolean) {\r\n        let lv = await import('../entry/login');\r\n        let loginView = <lv.default \r\n            withBack={withBack} \r\n            callback={callback} />;\r\n        if (withBack !== true) {\r\n            this.nav.clear();\r\n            this.pop();\r\n        }\r\n        this.nav.push(loginView);\r\n    }\r\n\r\n    async showLogout(callback?: ()=>Promise<void>) {\r\n        nav.push(<Page header=\"安全退出\" back=\"close\">\r\n            <div className=\"m-5 border border-info bg-white rounded p-3 text-center\">\r\n                <div>退出当前账号不会删除任何历史数据，下次登录依然可以使用本账号</div>\r\n                <div className=\"mt-3\">\r\n                    <button className=\"btn btn-danger\" onClick={()=>this.logout(callback)}>退出</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n    }\r\n\r\n    async logout(callback?:()=>Promise<void>) { //notShowLogin?:boolean) {\r\n        appInFrame.unit = undefined;\r\n        this.local.logoutClear();\r\n        this.user = undefined; //{} as User;\r\n        logoutApis();\r\n        let guest = this.local.guest.get();\r\n        setCenterToken(0, guest && guest.token);\r\n        this.ws = undefined;\r\n        /*\r\n        if (this.loginCallbacks.has)\r\n            this.logoutCallbacks.call();\r\n        else {\r\n            if (notShowLogin === true) return;\r\n        }\r\n        await nav.start();\r\n        */\r\n        if (callback === undefined)\r\n            await nav.start();\r\n        else\r\n            await callback();\r\n    }\r\n\r\n    async changePassword() {\r\n        let cp = await import('../entry/changePassword');\r\n        nav.push(<cp.ChangePasswordPage />);\r\n    }\r\n\r\n    get level(): number {\r\n        return this.nav.level;\r\n    }\r\n    startWait() {\r\n        this.nav.startWait();\r\n    }\r\n    endWait() {\r\n        this.nav.endWait();\r\n    }\r\n    async onError(error: FetchError) {\r\n        await this.nav.onError(error);\r\n    }\r\n    show (view: JSX.Element, disposer?: ()=>void): void {\r\n        this.nav.show(view, disposer);\r\n    }\r\n    push(view: JSX.Element, disposer?: ()=>void): void {\r\n        this.nav.push(view, disposer);\r\n    }\r\n    replace(view: JSX.Element, disposer?: ()=>void): void {\r\n        this.nav.replace(view, disposer);\r\n    }\r\n    pop(level:number = 1) {\r\n        this.nav.pop(level);\r\n    }\r\n    topKey():number {\r\n        return this.nav.topKey();\r\n    }\r\n    popTo(key:number) {\r\n        this.nav.popTo(key);\r\n    }\r\n    clear() {\r\n        this.nav.clear();\r\n    }\r\n    navBack() {\r\n        this.nav.navBack();\r\n    }\r\n    ceaseTop(level?:number) {\r\n        this.nav.ceaseTop(level);\r\n    }\r\n    removeCeased() {\r\n        this.nav.removeCeased();\r\n    }\r\n    async back(confirm:boolean = true) {\r\n        await this.nav.back(confirm);\r\n    }\r\n    regConfirmClose(confirmClose: ()=>Promise<boolean>) {\r\n        this.nav.regConfirmClose(confirmClose);\r\n    }\r\n    confirmBox(message?:string): boolean {\r\n        return this.nav.confirmBox(message);\r\n    }\r\n    async navToApp(url: string, unitId: number, apiId?:number, sheetType?:number, sheetId?:number):Promise<void> {\r\n        return new Promise<void>((resolve, reject) => {\r\n            let sheet = this.centerHost.includes('http://localhost:') === true? 'sheet_debug':'sheet'\r\n            let uh = sheetId === undefined?\r\n                    appUrl(url, unitId) :\r\n                    appUrl(url, unitId, sheet, [apiId, sheetType, sheetId]);\r\n            console.log('navToApp: %s', JSON.stringify(uh));\r\n            nav.push(<article className='app-container'>\r\n                <span id={uh.hash} onClick={()=>this.back()} style={mobileHeaderStyle}>\r\n                    <i className=\"fa fa-arrow-left\" />\r\n                </span>\r\n                <iframe src={uh.url} />\r\n            </article>, \r\n            ()=> {\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n\r\n    navToSite(url: string) {\r\n        // show in new window\r\n        window.open(url);\r\n    }\r\n\r\n    get logs() {return logs};\r\n    log(msg:string) {\r\n        logs.push(msg);\r\n    }\r\n    logMark() {\r\n        let date = new Date();\r\n        logMark = date.getTime();\r\n        logs.push('log-mark: ' + date.toTimeString());\r\n    }\r\n    logStep(step:string) {\r\n        logs.push(step + ': ' + (new Date().getTime() - logMark));\r\n    }\r\n}\r\nexport const nav: Nav = new Nav();\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { jsonStringify } from '../../tools';\r\n\r\nexport type TypeViewModel = typeof ViewModel;\r\nexport type TypeView = React.StatelessComponent<{vm: ViewModel, className?:string|string[]}>;\r\nexport type TypeContent = React.StatelessComponent<any>;\r\n\r\nexport abstract class ViewModel {\r\n    protected abstract get view(): TypeView;\r\n    render(className?:string|string[]):JSX.Element {\r\n        if (this.view === undefined) return <div>??? viewModel 必须定义 view ???</div>\r\n        return React.createElement(this.view, {vm: this, className:className});\r\n    }\r\n}\r\n\r\nexport const PureJSONContent = (values, x?:any) => <>content: {jsonStringify(values)}</>;\r\nexport const JSONContent = observer(PureJSONContent);\r\nexport const RowContent = \r\n    (values) => <div className=\"px-3 py-2\">{jsonStringify(values)}</div>\r\n;\r\n","import { decodeGuestToken } from '../user';\r\nimport { CenterApi } from './uqApi';\r\n\r\nexport class GuestApi extends CenterApi {\r\n    async guest(): Promise<any> {\r\n        //let guest = nav.local.guest.get();\r\n        let ret = await this.get('', {});\r\n        switch (typeof ret) {\r\n            default: return;\r\n            case 'string': return decodeGuestToken(ret);\r\n            case 'object':\r\n                let guest = decodeGuestToken(ret.token);\r\n                return guest;\r\n        }\r\n    }\r\n\r\n    async unitFromName(unitName:string): Promise<number> {\r\n        let ret = await this.get(unitName);\r\n        return ret && ret.unit;\r\n    }\r\n}\r\n\r\nexport const guestApi = new GuestApi('tv/guest/', undefined);\r\n","export {WSChannel, wsBridge, postWsToTop} from './wsChannel';\r\nexport * from './apiBase';\r\nexport * from './guestApi';\r\nexport * from './uqApi';\r\nexport {appInFrame, isBridged, getExHash} from './appBridge';\r\nexport * from './host';\r\nexport {httpGet} from './httpChannel';\r\n","function replacer(key:string, value:any) {\r\n    let first = key.substr(0, 1);\r\n    switch (first) {\r\n        default: return value;\r\n        case '$':\r\n        case '_': return;\r\n    }\r\n}\r\n\r\nexport function jsonStringify(value:any) {\r\n    return JSON.stringify(value, replacer, ' ');\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { BoxId, Tuid } from \"../entities\";\r\nimport { PureJSONContent } from '../controllers';\r\n\r\ntype TvTemplet = (values?:any, x?:any) => JSX.Element;\r\n\r\ninterface Props {\r\n    tuidValue: number|BoxId, \r\n    ui?: TvTemplet,\r\n    x?: any,\r\n    nullUI?: ()=>JSX.Element\r\n}\r\n\r\nfunction boxIdContent(bi: number|BoxId, ui:TvTemplet, x:any) {\r\n    if (typeof bi === 'number') return <>{bi}</>;\r\n    let {id, _$tuid, _$com} = bi as BoxId;\r\n    let t:Tuid = _$tuid;\r\n    if (t === undefined) {\r\n        if (ui !== undefined) return ui(bi, x);\r\n        return PureJSONContent(bi, x);\r\n    }\r\n    let com = ui || _$com;\r\n    if (com === undefined) {\r\n        com = bi._$com = t.getTuidContent();\r\n    }\r\n    let val = t.valueFromId(id);\r\n    if (typeof val === 'number') val = {id: val};\r\n    if (ui !== undefined) {\r\n        let ret = ui(val, x);\r\n        if (ret !== undefined) return ret;\r\n        return <>{id}</>;\r\n    }\r\n    return React.createElement(com, val);\r\n}\r\n\r\nconst Tv = observer(({tuidValue, ui, x, nullUI}:Props) => {\r\n    let ttv = typeof tuidValue;\r\n    switch (ttv) {\r\n        default:\r\n            if (ui === undefined)\r\n                return <>{ttv}-{tuidValue}</>;\r\n            else {\r\n                let ret = ui(tuidValue, x);\r\n                if (ret !== undefined) return ret;\r\n                return <>{tuidValue}</>;\r\n            }\r\n        case 'undefined':\r\n            break;\r\n        case 'object':\r\n            if (tuidValue !== null) return boxIdContent(tuidValue, ui, x);\r\n            break;\r\n        case 'number':\r\n            return <>id...{tuidValue}</>;\r\n    }       \r\n    if (nullUI === undefined) return <>.</>;\r\n    return nullUI();\r\n});\r\n\r\nexport const tv = (tuidValue:number|BoxId, ui?:TvTemplet, x?:any, nullUI?:()=>JSX.Element):JSX.Element => {\r\n    return <Tv tuidValue={tuidValue} ui={ui} x={x} nullUI={nullUI} />;\r\n};\r\n","export * from './jsonStringify';\r\nexport * from './tv';\r\n","export * from './nav';\r\nexport * from './titleBar';\r\nexport * from './page';\r\nexport * from './VM';\r\nexport * from './schema';\r\nexport * from './form';\r\nexport * from './edit';\r\nexport * from './res';\r\nexport * from './tabs';\r\nexport * from './loading';\r\nexport * from './image';\r\nexport * from './resUploader';","import _ from 'lodash';\r\nimport {nav} from '../ui';\r\nimport {uid} from '../uid';\r\nimport {uqTokenApi as uqTokenApi, callCenterapi, CenterAppApi, AppUq, centerToken, App, setCenterToken} from './uqApi';\r\nimport {setSubAppWindow} from './wsChannel';\r\nimport { host } from './host';\r\n\r\nexport interface UqToken {\r\n    name: string;\r\n    url: string;\r\n    urlDebug: string;\r\n    token: string;\r\n}\r\ninterface UqTokenAction extends UqToken {\r\n    resolve: (value?: UqToken | PromiseLike<UqToken>) => void;\r\n    reject: (reason?: any) => void;\r\n}\r\nconst uqTokens:{[uqName:string]: UqTokenAction}  = {};\r\nexport function logoutUqTokens() {\r\n    for (let i in uqTokens) uqTokens[i] = undefined;\r\n}\r\n\r\nexport interface AppInFrame {\r\n    hash: string;\r\n    unit: number;       // unit id\r\n    page?: string;\r\n    param?: string[];\r\n    predefinedUnit?: number;  // 比如像Cart这样的应用，直接让用户访问的，就需要在unit.json里面定义unitName\r\n}\r\nconst appsInFrame:{[key:string]:AppInFrame} = {};\r\n\r\nclass AppInFrameClass implements AppInFrame {\r\n    hash: string;\r\n    private _unit: number;\r\n    get unit(): number {return this._unit;}       // unit id\r\n    set unit(val:number) { this._unit=val;}\r\n    page?: string;\r\n    param?: string[];\r\n}\r\n\r\nexport let appInFrame:AppInFrame = new AppInFrameClass();\r\n/* {\r\n    hash: undefined,\r\n    get unit():number {return } undefined, //debugUnitId,\r\n    page: undefined;\r\n    param: undefined,\r\n}*/\r\n\r\nexport function isBridged():boolean {\r\n    return self !== window.parent;\r\n}\r\n\r\nwindow.addEventListener('message', async function(evt) {\r\n    var message = evt.data;\r\n    switch (message.type) {\r\n        case 'sub-frame-started':\r\n            subFrameStarted(evt);\r\n            break;\r\n        case 'ws':\r\n            //wsBridge.receive(message.msg);\r\n            await nav.onReceive(message.msg);\r\n            break;\r\n        case 'init-sub-win':\r\n            await initSubWin(message);\r\n            break;\r\n        case 'pop-app':\r\n            nav.navBack();\r\n            break;\r\n        case 'center-api':\r\n            await callCenterApiFromMessage(evt.source as Window, message);\r\n            break;\r\n        case 'center-api-return':\r\n            bridgeCenterApiReturn(message);\r\n            break;\r\n        case 'app-api':\r\n            console.log(\"receive PostMessage: %s\", JSON.stringify(message));\r\n            let ret = await onReceiveAppApiMessage(message.hash, message.apiName);\r\n            console.log(\"onReceiveAppApiMessage: %s\", JSON.stringify(ret));\r\n            (evt.source as Window).postMessage({\r\n                type: 'app-api-return', \r\n                apiName: message.apiName,\r\n                url: ret.url,\r\n                urlDebug: ret.urlDebug,\r\n                token: ret.token} as any, \"*\");\r\n            break;\r\n        case 'app-api-return':\r\n            console.log(\"app-api-return: %s\", JSON.stringify(message));\r\n            console.log('await onAppApiReturn(message);');\r\n            await onAppApiReturn(message);\r\n            break;\r\n        default:\r\n            this.console.log('message: %s', JSON.stringify(message));\r\n            break;\r\n    }\r\n});\r\n\r\nfunction subFrameStarted(evt:any) {\r\n    var message = evt.data;\r\n    let subWin = evt.source as Window;\r\n    setSubAppWindow(subWin);\r\n    hideFrameBack(message.hash);\r\n    let msg:any = _.clone(nav.user);\r\n    msg.type = 'init-sub-win';\r\n    subWin.postMessage(msg, '*');\r\n}\r\nfunction hideFrameBack(hash:string) {\r\n    let el = document.getElementById(hash);\r\n    if (el !== undefined) el.hidden = true;\r\n}\r\nasync function initSubWin(message:any) {\r\n    console.log('initSubWin: set nav.user', message);\r\n    let user = nav.user = message; // message.user;\r\n    setCenterToken(user.id, user.token);\r\n    await nav.showAppView();\r\n}\r\nasync function onReceiveAppApiMessage(hash: string, apiName: string): Promise<UqToken> {\r\n    let appInFrame = appsInFrame[hash];\r\n    if (appInFrame === undefined) return {name:apiName, url:undefined, urlDebug:undefined, token:undefined};\r\n    let unit = getUnit();\r\n    let parts = apiName.split('/');\r\n    let ret = await uqTokenApi.uq({unit: unit, uqOwner: parts[0], uqName: parts[1]});\r\n    if (ret === undefined) {\r\n        console.log('apiTokenApi.api return undefined. api=%s, unit=%s', apiName, unit);\r\n        throw 'api not found';\r\n    }\r\n    return {name: apiName, url: ret.url, urlDebug:ret.urlDebug, token: ret.token};\r\n}\r\n\r\nasync function onAppApiReturn(message:any) {\r\n    let {apiName, url, urlDebug, token} = message;\r\n    let action = uqTokens[apiName];\r\n    if (action === undefined) {\r\n        throw 'error app api return';\r\n        //return;\r\n    }\r\n    let realUrl = host.getUrlOrDebug(url, urlDebug);\r\n    console.log('onAppApiReturn(message:any): url=' + url + ', debug=' + urlDebug + ', real=' + realUrl);\r\n    action.url = realUrl;\r\n    action.token = token;\r\n    action.resolve(action);\r\n}\r\n\r\nexport function setAppInFrame(appHash: string):AppInFrame {\r\n    if (appHash) {\r\n        let parts = appHash.split('-');\r\n        let len = parts.length;\r\n        if (len > 0) {\r\n            let p = 1;\r\n            appInFrame.hash = parts[p++];\r\n            if (len>0) appInFrame.unit = Number(parts[p++]);\r\n            if (len>1) appInFrame.page = parts[p++];\r\n            if (len>2) appInFrame.param = parts.slice(p++);\r\n        }\r\n    }\r\n    return appInFrame;\r\n}\r\n\r\nexport function getExHashPos():number {\r\n    let hash = document.location.hash;\r\n    if (hash !== undefined && hash.length > 0) {\r\n        let pos = hash.lastIndexOf('#tv-');\r\n        if (pos < 0) pos = hash.lastIndexOf('#tvdebug-');\r\n        return pos;\r\n    }\r\n    return -1;\r\n}\r\n\r\nexport function getExHash():string {\r\n    let pos = getExHashPos();\r\n    if (pos < 0) return undefined;\r\n    return document.location.hash.substring(pos);\r\n}\r\n\r\nexport function appUrl(url: string, unitId: number, page?:string, param?:any[]):{url:string; hash:string} {\r\n    let u:string;\r\n    for (;;) {\r\n        u = uid();\r\n        let a = appsInFrame[u];\r\n        if (a === undefined) {\r\n            appsInFrame[u] = {hash:u, unit:unitId};\r\n            break;\r\n        }\r\n    }\r\n    url += '#tv-' + u + '-' + unitId;\r\n    if (page !== undefined) {\r\n        url += '-' + page;\r\n        if (param !== undefined) {\r\n            for (let i=0; i<param.length; i++) {\r\n                url += '-' + param[i];\r\n            }\r\n        }\r\n    }\r\n    return {url: url, hash: u};\r\n}\r\n\r\nfunction getUnit():number {\r\n    let {unit, predefinedUnit} = appInFrame;\r\n    let realUnit = unit || predefinedUnit;\r\n    if (realUnit === undefined) {\r\n        throw 'no unit defined in unit.json or not logined in';\r\n    }\r\n    return realUnit;\r\n}\r\n\r\nexport async function appUq(uq:string, uqOwner:string, uqName:string): Promise<UqToken> {\r\n    let uqToken = uqTokens[uq];\r\n    if (uqToken !== undefined) return uqToken;\r\n    if (!isBridged()) {\r\n        let unit = getUnit();\r\n        uqToken = await uqTokenApi.uq({unit:unit, uqOwner:uqOwner, uqName:uqName});\r\n        if (uqToken === undefined) {\r\n            let err = `appUq(unit=${unit}, '${uqOwner}/${uqName}') - unauthorized call: uqTokenApi center return undefined!`;\r\n            throw err;\r\n        }\r\n        if (uqToken.token === undefined) uqToken.token = centerToken;\r\n        let {url, urlDebug} = uqToken;\r\n        let realUrl = host.getUrlOrDebug(url, urlDebug);\r\n        console.log('realUrl: %s', realUrl);\r\n        uqToken.url = realUrl;\r\n        uqTokens[uq] = uqToken;\r\n        return uqToken;\r\n    }\r\n    console.log(\"appApi parent send: %s\", appInFrame.hash);\r\n    uqToken = {\r\n        name: uq,\r\n        url: undefined,\r\n        urlDebug: undefined,\r\n        token: undefined,\r\n        resolve: undefined,\r\n        reject: undefined,\r\n    };\r\n    uqTokens[uq] = uqToken;\r\n    return new Promise<UqToken>((resolve, reject) => {\r\n        uqToken.resolve = async (at) => {\r\n            let a = await at;\r\n            console.log('return from parent window: %s', JSON.stringify(a));\r\n            uqToken.url = a.url;\r\n            uqToken.urlDebug = a.urlDebug;\r\n            uqToken.token = a.token;\r\n            resolve(uqToken);\r\n        }\r\n        uqToken.reject = reject;\r\n        (window.opener || window.parent).postMessage({\r\n            type: 'app-api',\r\n            apiName: uq,\r\n            hash: appInFrame.hash,\r\n        }, \"*\");\r\n    });\r\n}\r\n\r\ninterface BridgeCenterApi {\r\n    id: string;\r\n    resolve: (value?:any)=>any;\r\n    reject: (reason?:any)=>void;\r\n}\r\nconst brideCenterApis:{[id:string]: BridgeCenterApi} = {};\r\nexport async function bridgeCenterApi(url:string, method:string, body:any):Promise<any> {\r\n    console.log('bridgeCenterApi: url=%s, method=%s', url, method);\r\n    return await new Promise<any>(async (resolve, reject) => {\r\n        let callId:string;\r\n        for (;;) {\r\n            callId = uid();\r\n            let bca = brideCenterApis[callId];\r\n            if (bca === undefined) {\r\n                brideCenterApis[callId] = {\r\n                    id: callId,\r\n                    resolve: resolve,\r\n                    reject: reject,\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        (window.opener || window.parent).postMessage({\r\n            type: 'center-api',\r\n            callId: callId,\r\n            url: url,\r\n            method: method,\r\n            body: body\r\n        }, '*');\r\n    });\r\n}\r\n\r\nasync function callCenterApiFromMessage(from:Window, message):Promise<void> {\r\n    let {callId, url, method, body} = message;\r\n    let result = await callCenterapi.directCall(url, method, body);\r\n    from.postMessage({\r\n        type: 'center-api-return',\r\n        callId: callId,\r\n        result: result,\r\n    }, '*');\r\n}\r\n\r\nfunction bridgeCenterApiReturn(message:any) {\r\n    let {callId, result} = message;\r\n    let bca = brideCenterApis[callId];\r\n    if (bca === undefined) return;\r\n    brideCenterApis[callId] = undefined;\r\n    bca.resolve(result);\r\n}\r\n","import {nav} from '../ui/nav';\r\nimport {FetchError} from '../fetchError';\r\n\r\nexport interface HttpChannelUI {\r\n    startWait():void;\r\n    endWait():void;\r\n    showError(error:FetchError):Promise<void>;\r\n}\r\n\r\nexport class HttpChannelNavUI implements HttpChannelUI {\r\n    startWait() {\r\n        nav.startWait();\r\n    }\r\n    endWait() {\r\n        nav.endWait();\r\n    }\r\n    async showError(error:FetchError):Promise<void> {\r\n        nav.endWait();\r\n        /*\r\n        if (error.name === 'SyntaxError') {\r\n            error = {\r\n                name: error.name,\r\n                message: error.message,\r\n            }\r\n        }*/\r\n        await nav.onError(error);\r\n    }\r\n}\r\n\r\n","import _ from 'lodash';\r\nimport {HttpChannel} from './httpChannel';\r\nimport {HttpChannelUI, HttpChannelNavUI} from './httpChannelUI';\r\nimport {appUq, appInFrame, logoutUqTokens} from './appBridge';\r\nimport {ApiBase} from './apiBase';\r\nimport { host } from './host';\r\nimport { nav } from '../ui';\r\n\r\nlet channelUIs:{[name:string]: HttpChannel} = {};\r\nlet channelNoUIs:{[name:string]: HttpChannel} = {};\r\n\r\nexport function logoutApis() {\r\n    channelUIs = {};\r\n    channelNoUIs = {};\r\n    logoutUnitxApis();\r\n    logoutUqTokens();\r\n}\r\n\r\ninterface UqLocal {\r\n    value: any;\r\n    tick?: number;\r\n    isNet?: boolean;\r\n}\r\ninterface UqLocals {\r\n    user: number;\r\n    unit: number;\r\n    uqs: {[uq:string]: UqLocal};\r\n}\r\n\r\nconst uqLocalEntities = 'uqLocalEntities';\r\nclass CacheUqLocals {\r\n    private local:UqLocals;\r\n\r\n    async loadAccess(uqApi: UqApi):Promise<any> {\r\n        try {\r\n            let {uqOwner, uqName} = uqApi;\r\n            if (this.local === undefined) {\r\n                let ls = localStorage.getItem(uqLocalEntities);\r\n                if (ls !== null) {\r\n                    this.local = JSON.parse(ls);\r\n                }\r\n            }\r\n            if (this.local !== undefined) {\r\n                let {user, uqs} = this.local;\r\n                if (user !== loginedUserId || uqs === undefined) {\r\n                    this.local = undefined;\r\n                }\r\n                else {\r\n                    for (let i in uqs) {\r\n                        let ul = uqs[i];\r\n                        ul.isNet = undefined;\r\n                    }\r\n                }\r\n            }\r\n            if (this.local === undefined) {\r\n                this.local = {\r\n                    user: loginedUserId,\r\n                    unit: undefined,\r\n                    uqs: {}\r\n                };\r\n            }\r\n\r\n            let ret: any;\r\n            let un = uqOwner+'/'+uqName;\r\n            let uq = this.local.uqs[un];\r\n            if (uq !== undefined) {\r\n                let {value} = uq;\r\n                ret = value;\r\n            }\r\n            if (ret === undefined) {\r\n                ret = await uqApi.__loadAccess();\r\n                this.saveLocal(un, ret);\r\n            }\r\n            return _.cloneDeep(ret);\r\n        }\r\n        catch (err) {\r\n            this.local = undefined;\r\n            localStorage.removeItem(uqLocalEntities);\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    private saveLocal(uqName:string, accessValue: any) {\r\n        this.local.uqs[uqName] = {\r\n            value: accessValue,\r\n            isNet: true,\r\n        }\r\n        let str = JSON.stringify(this.local);\r\n        localStorage.setItem(uqLocalEntities, str);\r\n    }\r\n\r\n    async checkAccess(uqApi: UqApi):Promise<boolean> {\r\n        let {uqOwner, uqName} = uqApi;\r\n        let un = uqOwner+'/'+uqName;\r\n        let uq = this.local.uqs[un];\r\n        if (uq === undefined) return false;\r\n        let {isNet, value} = uq;\r\n        if (isNet === true) return true;\r\n        let ret = await uqApi.__loadAccess();\r\n        let isMatch = _.isMatch(value, ret);\r\n        if (isMatch === false) {\r\n            this.saveLocal(un, ret);\r\n            return false;\r\n        }\r\n        uq.isNet = true;\r\n        return true;\r\n    }\r\n}\r\n\r\nconst localUqs = new CacheUqLocals;\r\nexport class UqApi extends ApiBase {\r\n    private access:string[];\r\n    uqOwner: string;\r\n    uqName: string;\r\n    uq: string;\r\n\r\n    constructor(basePath: string, uqOwner: string, uqName: string, access:string[], showWaiting?: boolean) {\r\n        super(basePath, showWaiting);\r\n        if (uqName) {\r\n            this.uqOwner = uqOwner;\r\n            this.uqName = uqName;\r\n            this.uq = uqOwner + '/' + uqName;\r\n        }\r\n        this.access = access;\r\n        this.showWaiting = showWaiting;\r\n    }\r\n\r\n    protected async getHttpChannel(): Promise<HttpChannel> {\r\n        let channels: {[name:string]: HttpChannel};\r\n        let channelUI: HttpChannelNavUI;\r\n        if (this.showWaiting === true || this.showWaiting === undefined) {\r\n            channels = channelUIs;\r\n            channelUI = new HttpChannelNavUI();\r\n        }\r\n        else {\r\n            channels = channelNoUIs;\r\n        }\r\n        let channel = channels[this.uq];\r\n        if (channel !== undefined) return channel;\r\n        let uqToken = await appUq(this.uq, this.uqOwner, this.uqName);\r\n        this.token = uqToken.token;\r\n        channel = new HttpChannel(false, uqToken.url, uqToken.token, channelUI);\r\n        return channels[this.uq] = channel;\r\n    }\r\n\r\n\r\n    async update():Promise<string> {\r\n        return await this.get('update');\r\n    }\r\n\r\n    async __loadAccess():Promise<any> {\r\n        let acc = this.access === undefined?\r\n            '' :\r\n            this.access.join('|');\r\n        let ret = await this.get('access', {acc:acc});\r\n        return ret;\r\n    }\r\n\r\n    async loadAccess():Promise<any> {\r\n        return await localUqs.loadAccess(this);\r\n    }\r\n\r\n    async loadEntities():Promise<any> {\r\n        return await this.get('entities');\r\n    }\r\n\r\n    async checkAccess():Promise<boolean> {\r\n        return await localUqs.checkAccess(this);\r\n    }\r\n\r\n    async schema(name:string):Promise<any> {\r\n        return await this.get('schema/' + name);\r\n    }\r\n\r\n    async schemas(names:string[]):Promise<any[]> {\r\n        return await this.post('schema', names);\r\n    }\r\n\r\n    async tuidGet(name:string, id:number):Promise<any> {\r\n        return await this.get('tuid/' + name + '/' + id);\r\n    }\r\n\r\n    async tuidGetAll(name:string):Promise<any[]> {\r\n        return await this.get('tuid-all/' + name + '/');\r\n    }\r\n\r\n    async tuidSave(name:string, params):Promise<any> {\r\n        return await this.post('tuid/' + name, params);\r\n    }\r\n\r\n    async tuidSearch(name:string, arr:string, owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        let ret = await this.post('tuids/' + name, {\r\n            arr: arr,\r\n            owner: owner,\r\n            key: key,\r\n            pageStart: pageStart,\r\n            pageSize: pageSize\r\n        });\r\n        return ret;\r\n    }\r\n    async tuidArrGet(name:string, arr:string, owner:number, id:number):Promise<any> {\r\n        return await this.get('tuid-arr/' + name + '/' + owner + '/' + arr + '/' + id);\r\n    }\r\n    async tuidArrGetAll(name:string, arr:string, owner:number):Promise<any[]> {\r\n        return await this.get('tuid-arr-all/' + name + '/' + owner + '/' + arr + '/');\r\n    }\r\n    async tuidArrSave(name:string, arr:string, owner:number, params):Promise<any> {\r\n        return await this.post('tuid-arr/' + name + '/' + owner + '/' + arr + '/', params);\r\n    }\r\n    async tuidArrPos(name:string, arr:string, owner:number, id:number, order:number):Promise<any> {\r\n        return await this.post('tuid-arr-pos/' + name + '/' + owner + '/' + arr + '/', {\r\n            id: id,\r\n            $order: order\r\n        });\r\n    }\r\n\r\n    async tuidIds(name:string, arr:string, ids:number[]):Promise<any[]> {\r\n        try {\r\n            let url = 'tuidids/' + name + '/';\r\n            if (arr !== undefined) url += arr;\r\n            else url += '$';\r\n            let ret = await this.post(url, ids);\r\n            return ret;\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    async proxied(name:string, proxy:string, id:number):Promise<any> {\r\n        try {\r\n            let url = 'tuid-proxy/' + name + '/' + proxy + '/' + id;\r\n            let ret = await this.get(url);\r\n            return ret;\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    async sheetSave(name:string, data:object):Promise<any> {\r\n        return await this.post('sheet/' + name, data);\r\n    }\r\n\r\n    async sheetAction(name:string, data:object) {\r\n        return await this.put('sheet/' + name, data);\r\n    }\r\n\r\n    async stateSheets(name:string, data:object) {\r\n        return await this.post('sheet/' + name + '/states', data);\r\n    }\r\n\r\n    async stateSheetCount(name:string):Promise<any> {\r\n        return await this.get('sheet/' + name + '/statecount');\r\n    }\r\n\r\n    async mySheets(name:string, data:object) {\r\n        return await this.post('sheet/' + name + '/my-sheets', data);\r\n    }\r\n\r\n    async getSheet(name:string, id:number):Promise<any> {\r\n        return await this.get('sheet/' + name + '/get/' + id);\r\n    }\r\n\r\n    async sheetArchives(name:string, data:object):Promise<any> {\r\n        return await this.post('sheet/' + name + '/archives', data);\r\n    }\r\n\r\n    async sheetArchive(name:string, id:number):Promise<any> {\r\n        return await this.get('sheet/' + name + '/archive/' + id);\r\n    }\r\n\r\n    async action(name:string, data:object):Promise<any> {\r\n        return await this.post('action/' + name, data);\r\n    }\r\n\r\n    async page(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\r\n        let p:any;\r\n        switch (typeof params) {\r\n            case 'undefined': p = {key: ''}; break;\r\n            default: p = _.clone(params); break;\r\n        }\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        return await this.post('query-page/' + name, p);\r\n    }\r\n\r\n    async query(name:string, params:any):Promise<any> {\r\n        let ret = await this.post('query/' + name, params);\r\n        return ret;\r\n    }\r\n/*\r\n    async history(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\r\n        let p = _.clone(params);\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        let ret = await this.post('history/' + name, p);\r\n        return ret;\r\n    }\r\n\r\n    async book(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\r\n        let p = _.clone(params);\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        let ret = await this.post('history/' + name, p);\r\n        return ret;\r\n    }\r\n*/\r\n    async user():Promise<any> {\r\n        return await this.get('user');\r\n    }\r\n}\r\n\r\nlet channels:{[unitId:number]: HttpChannel} = {};\r\n\r\nexport function logoutUnitxApis() {\r\n    channels = {};\r\n}\r\n\r\nexport class UnitxApi extends UqApi {\r\n    private unitId:number;\r\n    constructor(unitId:number) {\r\n        super('tv/', undefined, undefined, undefined, true);\r\n        this.unitId = unitId;\r\n    }\r\n\r\n    protected async getHttpChannel(): Promise<HttpChannel> {\r\n        let channel = channels[this.unitId];\r\n        if (channel !== undefined) return channel;\r\n        return channels[this.unitId] = await this.buildChannel();\r\n    }\r\n\r\n    private async buildChannel():Promise<HttpChannel> {\r\n        let channelUI = new HttpChannelNavUI();\r\n        let centerAppApi = new CenterAppApi('tv/', undefined);\r\n        let ret = await centerAppApi.unitxUq(this.unitId);\r\n        let {token, url, urlDebug} = ret;\r\n        let realUrl = host.getUrlOrDebug(url, urlDebug);\r\n        this.token = token;\r\n        return new HttpChannel(false, realUrl, token, channelUI);\r\n    }\r\n}\r\n\r\nlet centerHost:string;\r\n\r\nexport function setCenterUrl(url:string) {\r\n    console.log('setCenterUrl %s', url);\r\n    centerHost = url;\r\n    centerToken = undefined;\r\n    centerChannel = undefined;\r\n    centerChannelUI = undefined;\r\n}\r\n\r\nexport let centerToken:string|undefined = undefined;\r\n\r\nlet loginedUserId:number = 0;\r\nexport function setCenterToken(userId:number, t?:string) {\r\n    loginedUserId = userId;\r\n    centerToken = t;\r\n    console.log('setCenterToken %s', t);\r\n    centerChannel = undefined;\r\n    centerChannelUI = undefined;\r\n}\r\n\r\nlet centerChannelUI:HttpChannel;\r\nlet centerChannel:HttpChannel;\r\nfunction getCenterChannelUI():HttpChannel {\r\n    if (centerChannelUI !== undefined) return centerChannelUI;\r\n    return centerChannelUI = new HttpChannel(true, centerHost, centerToken, new HttpChannelNavUI());\r\n}\r\nfunction getCenterChannel():HttpChannel {\r\n    if (centerChannel !== undefined) return centerChannel;\r\n    return centerChannel = new HttpChannel(true, centerHost, centerToken);\r\n}\r\n\r\nexport abstract class CenterApi extends ApiBase {\r\n    constructor(path: string, showWaiting?: boolean) {\r\n        super(path, showWaiting);\r\n    }\r\n\r\n    protected async getHttpChannel(): Promise<HttpChannel> {\r\n        return (this.showWaiting === true || this.showWaiting === undefined)?\r\n            getCenterChannelUI():\r\n            getCenterChannel();\r\n    }\r\n}\r\n\r\nconst uqTokens = 'uqTokens';\r\nexport class UqTokenApi extends CenterApi {\r\n    private local: UqLocals;\r\n    async uq(params: {unit:number, uqOwner:string, uqName:string}):Promise<any> {\r\n        try {\r\n            let {unit:unitParam, uqOwner, uqName} = params;\r\n            if (this.local === undefined) {\r\n                let ls = localStorage.getItem(uqTokens);\r\n                if (ls !== null) {\r\n                    this.local = JSON.parse(ls);\r\n                }\r\n            }\r\n            if (this.local !== undefined) {\r\n                let {unit, user} = this.local;\r\n                if (unit !== unitParam || user !== loginedUserId) this.local = undefined;\r\n            }\r\n            if (this.local === undefined) {\r\n                this.local = {\r\n                    user: loginedUserId,\r\n                    unit: params.unit,\r\n                    uqs: {}\r\n                };\r\n            }\r\n\r\n            let un = uqOwner+'/'+uqName;\r\n            let nowTick = new Date().getTime();\r\n            let uq = this.local.uqs[un];\r\n            if (uq !== undefined) {\r\n                let {tick, value} = uq;\r\n                if (value !== undefined && (nowTick - tick) < 24*3600*1000) {\r\n                    return _.clone(value);\r\n                }\r\n            }\r\n            let ret = await this.get('app-uq', params);\r\n            this.local.uqs[un] = {\r\n                tick: nowTick,\r\n                value: ret,\r\n            }\r\n            localStorage.setItem(uqTokens, JSON.stringify(this.local));\r\n            return _.clone(ret);\r\n        }\r\n        catch (err) {\r\n            this.local = undefined;\r\n            localStorage.removeItem(uqTokens);\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport const uqTokenApi = new UqTokenApi('tv/tie/', undefined);\r\n\r\nexport class CallCenterApi extends CenterApi {\r\n    directCall(url:string, method:string, body:any):Promise<any> {\r\n        return this.call(url, method, body);\r\n    }\r\n}\r\nexport const callCenterapi = new CallCenterApi('', undefined);\r\n\r\nexport interface App {\r\n    id: number;\r\n    uqs: AppUq[];\r\n}\r\n\r\nexport interface AppUq {\r\n    id: number;\r\n    uqOwner: string;\r\n    uqName: string;\r\n    access: string;\r\n}\r\n\r\nexport interface UqService {\r\n    id: number;\r\n    url: string;\r\n    urlDebug: string;\r\n    token: string;\r\n}\r\n\r\nconst appUqs = 'appUqs';\r\n\r\nexport class CenterAppApi extends CenterApi {\r\n    private cachedUqs: App;\r\n    async uqs(appOwner:string, appName:string):Promise<App> {\r\n        let ret:any;\r\n        let ls = localStorage.getItem(appUqs);\r\n        if (ls !== null) {\r\n            let rLs = JSON.parse(ls);\r\n            let {appOwner:rAppOwner, appName:rAppName, value} = rLs;\r\n            if (appOwner === rAppOwner && appName === rAppName) ret = value;\r\n        }\r\n        if (ret === undefined) {\r\n            ret = await this.uqsPure(appOwner, appName);\r\n            let obj = {\r\n                appOwner:appOwner, \r\n                appName:appName, \r\n                value: ret,\r\n            }\r\n            localStorage.setItem(appUqs, JSON.stringify(obj));\r\n        }\r\n        return this.cachedUqs = _.cloneDeep(ret);\r\n    }\r\n    private async uqsPure(appOwner:string, appName:string):Promise<App> {\r\n        return await this.get('tie/app-uqs', {appOwner:appOwner, appName:appName});\r\n    }\r\n    async checkUqs(appOwner:string, appName:string):Promise<boolean> {\r\n        let ret = await this.uqsPure(appOwner, appName);\r\n        let {id:cachedId, uqs:cachedUqs} = this.cachedUqs;\r\n        let {id:retId, uqs:retUqs} = ret;\r\n        if (cachedId !== retId) return false;\r\n        if (cachedUqs.length !== retUqs.length) return false;\r\n        let len = cachedUqs.length;\r\n        for (let i=0; i<len; i++) {\r\n            if (_.isMatch(cachedUqs[i], retUqs[i]) === false) return false;\r\n        }\r\n        return true;\r\n    }\r\n    async unitxUq(unit:number):Promise<UqService> {\r\n        return await this.get('tie/unitx-uq', {unit:unit});\r\n    }\r\n    async changePassword(param: {orgPassword:string, newPassword:string}) {\r\n        return await this.post('tie/reset-password', param);\r\n    }\r\n}\r\n\r\nexport async function loadAppUqs(appOwner:string, appName:string): Promise<App> {\r\n    let centerAppApi = new CenterAppApi('tv/', undefined);\r\n    //let unit = meInFrame.unit;\r\n    let ret = await centerAppApi.uqs(appOwner, appName);\r\n    centerAppApi.checkUqs(appOwner, appName).then(v => {\r\n        if (v === false) {\r\n            localStorage.removeItem(appUqs);\r\n            nav.start();\r\n        }\r\n    });\r\n    return ret;\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Controller } from 'tonva-tools';\r\n\r\nexport abstract class Link {\r\n    abstract onClick: () => void;\r\n    abstract render(className?:string):JSX.Element;\r\n}\r\n\r\nexport class CLink extends Link {\r\n    private controller: Controller;\r\n    protected icon:string|JSX.Element;\r\n    protected label:string|JSX.Element;\r\n\r\n    constructor(controller:Controller) {\r\n        super();\r\n        this.controller = controller;\r\n        this.icon = controller.icon;\r\n        this.label = controller.label;\r\n    }\r\n\r\n    onClick = async () => {\r\n        await this.controller.start();\r\n    }\r\n\r\n    render(className?:string) {\r\n        return <div\r\n            className={classNames('px-3', 'py-2', 'align-items-center', 'cursor-pointer', className)}\r\n            onClick={this.onClick}>\r\n            {this.icon} &nbsp; {this.label}\r\n        </div>;\r\n        //return React.createElement(this.view, className);\r\n    }\r\n}\r\n","export * from './cLink';\r\n","\r\nlet subAppWindow:Window;\r\nfunction postWsToSubApp(msg:any) {\r\n    if (subAppWindow === undefined) return;\r\n    subAppWindow.postMessage({\r\n        type: 'ws',\r\n        msg: msg\r\n    }, '*');\r\n}\r\n\r\nexport function setSubAppWindow(win:Window) {\r\n    subAppWindow = win;\r\n}\r\n\r\nexport function postWsToTop(msg:any) {\r\n    window.top.postMessage({\r\n        type: 'ws',\r\n        msg: msg\r\n    }, '*');\r\n}\r\n\r\nexport abstract class WsBase {\r\n    wsBaseId:string;\r\n    private handlerSeed = 1;\r\n    private anyHandlers:{[id:number]:(msg:any)=>Promise<void>} = {};\r\n    private msgHandlers:{[id:number]:{type:string, handler:(msg:any)=>Promise<void>}} = {};\r\n    onWsReceiveAny(handler:(msg:any)=>Promise<void>):number {\r\n        let seed = this.handlerSeed++;\r\n        this.anyHandlers[seed] = handler;\r\n        return seed;\r\n    }\r\n    onWsReceive(type:string, handler:(msg:any)=>Promise<void>):number {\r\n        let seed = this.handlerSeed++;\r\n        this.msgHandlers[seed] = {type:type, handler: handler};\r\n        return seed;\r\n    }\r\n    endWsReceive(handlerId:number) {\r\n        delete this.anyHandlers[handlerId];\r\n        delete this.msgHandlers[handlerId];\r\n    }\r\n    async receive(msg:any) {\r\n        let {$type} = msg;\r\n        for (let i in this.anyHandlers) {\r\n            await this.anyHandlers[i](msg);\r\n        }\r\n        for (let i in this.msgHandlers) {\r\n            let {type, handler} = this.msgHandlers[i];\r\n            if (type !== $type) continue;\r\n            await handler(msg);\r\n        }\r\n    }\r\n}\r\n\r\nlet wsBaseSeed = 1;\r\nexport class WsBridge extends WsBase {\r\n    wsBaseId:string = 'WsBridge seed ' + wsBaseSeed++;\r\n}\r\n\r\nexport const wsBridge = new WsBridge();\r\n\r\nexport class WSChannel extends WsBase {\r\n    wsBaseId:string = 'WSChannel seed ' + wsBaseSeed++;\r\n    static centerToken:string;\r\n    private wsHost: string;\r\n    private token: string;\r\n    private ws: WebSocket;\r\n\r\n    constructor(wsHost: string, token: string) {\r\n        super();\r\n        this.wsHost = wsHost;\r\n        this.token = token;\r\n    }\r\n\r\n    static setCenterToken(token?: string) {\r\n        WSChannel.centerToken = token;\r\n    }\r\n    \r\n    connect():Promise<void> {\r\n        //this.wsHost = wsHost;\r\n        //this.token = token || WSChannel.centerToken;\r\n        if (this.ws !== undefined) return;\r\n        let that = this;\r\n        return new Promise((resolve, reject) => {\r\n            let ws = new WebSocket(this.wsHost, this.token || WSChannel.centerToken);\r\n            console.log('connect webSocket %s', this.wsHost);\r\n            ws.onopen = (ev) => {\r\n                console.log('webSocket connected %s', this.wsHost);\r\n                that.ws = ws;\r\n                resolve();\r\n            };\r\n            ws.onerror = (ev) => {\r\n                reject('webSocket can\\'t open!');\r\n            };\r\n            ws.onmessage = async (msg) => await that.wsMessage(msg);\r\n            ws.onclose = (ev) => {\r\n                that.ws = undefined;\r\n                console.log('webSocket closed!');\r\n            }\r\n        });\r\n    }\r\n    close() {\r\n        if (this.ws !== undefined) {\r\n            this.ws.close();\r\n            this.ws = undefined;\r\n        }\r\n    }\r\n    private async wsMessage(event:any):Promise<void> {\r\n        try {\r\n            console.log('websocket message: %s', event.data);\r\n            let msg = JSON.parse(event.data);\r\n            postWsToSubApp(msg);\r\n            await this.receive(msg);\r\n        }\r\n        catch (err) {\r\n            console.log('ws msg error: ', err);\r\n        }\r\n    }\r\n    sendWs(msg:any) {\r\n        let netThis = this;\r\n        this.connect().then(() => {\r\n            netThis.ws.send(msg);\r\n        });\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {IComputedValue} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash';\r\nimport {TitleBar} from './titleBar';\r\n\r\nexport interface ScrollProps {\r\n    onScroll?: (e:any) => void;\r\n    onScrollTop?: () => void;\r\n    onScrollBottom?: () => void;\r\n}\r\ninterface ScrollViewProps extends ScrollProps {\r\n    className?: string;\r\n}\r\nconst scrollTimeGap = 100;\r\nclass ScrollView extends React.Component<ScrollViewProps, null> {\r\n    private bottomTime:number = 0;\r\n    private topTime:number = 0;\r\n\r\n    private onScroll = async (e) => {\r\n        let {onScroll, onScrollTop, onScrollBottom} = this.props;\r\n        if (onScroll) this.props.onScroll(e);\r\n        let el = e.target as HTMLBaseElement;\r\n        if (el.scrollTop < 30) {\r\n            //this.eachChild(this, 'top');\r\n            if (onScrollTop !== undefined) {\r\n                let topTime = new Date().getTime();\r\n                if (topTime-this.topTime > scrollTimeGap) {\r\n                    this.topTime = topTime;\r\n                    onScrollTop();\r\n                }\r\n            }\r\n        }\r\n        if (el.scrollTop + el.offsetHeight > el.scrollHeight - 30) {\r\n            //this.eachChild(this, 'bottom');\r\n            if (onScrollBottom !== undefined) {\r\n                let bottomTime = new Date().getTime();\r\n                if (bottomTime - this.bottomTime > scrollTimeGap) {\r\n                    this.bottomTime = bottomTime;\r\n                    onScrollBottom();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    private eachChild(c:any, direct:'top'|'bottom') {\r\n        let { props } = c;\r\n        if (props === undefined)\r\n            return;\r\n        let { children } = props;\r\n        if (children === undefined)\r\n            return;\r\n        React.Children.forEach(children, (child, index) => {\r\n            let {_$scroll} = child as any;\r\n            if (_$scroll) _$scroll(direct);\r\n            console.log(child.toString());\r\n            this.eachChild(child, direct);\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <main className={this.props.className} onScroll={this.onScroll}>\r\n                {this.props.children}\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport interface Tab extends ScrollProps {\r\n    title: string;\r\n    icon?: string;\r\n    content?: JSX.Element | (()=>JSX.Element);\r\n    header?: string;\r\n    isSelected?: boolean;\r\n    redDot?: IComputedValue<number>;\r\n    load?: () => Promise<void>;\r\n}\r\nexport interface TabState extends Tab {\r\n    isMounted?: boolean;\r\n}\r\nexport interface PageProps extends ScrollProps {\r\n    back?: 'close' | 'back' | 'none';\r\n    header?: boolean | string | JSX.Element;\r\n    keepHeader?: boolean;\r\n    right?: JSX.Element;\r\n    sideBar?: JSX.Element;\r\n    footer?: JSX.Element;\r\n    tabs?: Tab[];\r\n    logout?: boolean | (()=>Promise<void>);\r\n}\r\nexport interface PageState {\r\n    cur?: Tab;\r\n    tabs?: TabState[];\r\n}\r\n\r\n@observer\r\nexport class Page extends React.Component<PageProps, PageState> {\r\n    private tabs:TabState[];\r\n    constructor(props: PageProps) {\r\n        super(props);\r\n        let {tabs} = props;\r\n        if (tabs === undefined || tabs.length === 0) return;\r\n        this.tabs = tabs;\r\n        let cur:Tab;\r\n        let tabStates:Tab[] = [];\r\n        for (let tab of tabs) {\r\n            let t:TabState = _.clone(tab);\r\n            if (cur === undefined) {\r\n                if (t.isSelected === true)\r\n                    cur = t;\r\n                else\r\n                    t.isSelected = false;\r\n            }\r\n            else {\r\n                t.isSelected = false;\r\n            }\r\n            t.isMounted = false;\r\n            tabStates.push(t);\r\n        }\r\n        this.state = {\r\n            cur: cur,\r\n            tabs: tabStates,\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (this.tabs === undefined) return;\r\n        let t0 = this.state.tabs[0];\r\n        if (t0 === undefined) return;\r\n        await this.onTabClick(t0);\r\n    }\r\n\r\n    private async onTabClick(tab: TabState) {\r\n        if (tab.isSelected === true) return;\r\n        let cur:TabState;\r\n        let tabs = this.state.tabs;\r\n        for (let t of tabs) {\r\n            if (t === tab) {\r\n                t.isSelected = true;\r\n                cur = t;\r\n            }\r\n            else\r\n                t.isSelected = false;\r\n        }\r\n        if (cur.isMounted !== true) {\r\n            let {load} = cur;\r\n            if (load !== undefined) {\r\n                await load();\r\n            }\r\n        }\r\n        this.setState({\r\n            cur: cur,\r\n            tabs: tabs\r\n        });\r\n    }\r\n\r\n    private onTouchStart(evt: React.TouchEvent<HTMLElement>) {\r\n    }\r\n\r\n    private renderTabs(footer: JSX.Element) {\r\n        const {header, back, right, keepHeader} = this.props;\r\n        let cur = this.state.cur;\r\n        let tabs = <div>{\r\n                this.state.tabs.map((tab, index) => {\r\n                    const {icon, isSelected, title, redDot} = tab;\r\n                    let img:any, redDotView:any, cn:any;\r\n                    if (icon !== undefined) img = <img src={icon} />;\r\n                    if (redDot !== undefined) {\r\n                        let v = redDot.get();\r\n                        if (v < 0) {\r\n                            cn = classNames('red-dot');\r\n                            redDotView = <u />;\r\n                        }\r\n                        else if (v > 0) {\r\n                            cn = classNames('red-dot', 'num');\r\n                            redDotView = <u>{v}</u>;\r\n                        }\r\n                    }\r\n                    return <div key={index}\r\n                        className= {classNames('va-tab', {cur: isSelected})}\r\n                        onClick={() => this.onTabClick(tab)}>\r\n                        {img}<div className={cn}>{title}{redDotView}</div>\r\n                    </div>\r\n                })\r\n            }</div>;\r\n        let titleBar;\r\n        if (header !== false) {\r\n            titleBar = <TitleBar \r\n                back={back} \r\n                center={keepHeader===true? (header as string) : (cur && (cur.header || cur.title))}\r\n                right={right} \r\n            />;\r\n        }\r\n\r\n        return <article className='page-container'>\r\n            {titleBar}\r\n            <section className=\"position-relative\">\r\n            {this.props.sideBar}\r\n            {\r\n                this.state.tabs.map((tab, index) => {\r\n                    let {isSelected, isMounted, content} = tab;\r\n                    if (isSelected === true || isMounted === true) {\r\n                        tab.isMounted = true;\r\n                        return <ScrollView key={index}\r\n                            className={classNames({invisible: isSelected===false})}\r\n                            onScroll={tab.onScroll}\r\n                            onScrollTop={tab.onScrollTop}\r\n                            onScrollBottom={tab.onScrollBottom}\r\n                        >\r\n                            {(typeof content)==='function'? (content as ()=>JSX.Element)():content}\r\n                        </ScrollView>;\r\n                    }\r\n                })\r\n            }\r\n            </section>\r\n            {tabs}\r\n            {footer}\r\n        </article>;\r\n    }\r\n    private renderSingle(footer: JSX.Element) {\r\n        const {back, header, right, onScroll, onScrollTop, onScrollBottom, children} = this.props;\r\n        let titleBar;\r\n        if (header !== false)\r\n            titleBar = <TitleBar \r\n                back={back} \r\n                center={header as any}\r\n                right={right}\r\n                logout={this.props.logout}\r\n            />;\r\n        return (\r\n            <article className='page-container' onTouchStart={this.onTouchStart}>\r\n                {titleBar}\r\n                <section className=\"position-relative\">\r\n                    {this.props.sideBar}\r\n                    <ScrollView\r\n                        onScroll={onScroll}\r\n                        onScrollTop={onScrollTop}\r\n                        onScrollBottom={onScrollBottom}\r\n                    >\r\n                        {children}\r\n                    </ScrollView>\r\n                </section>\r\n                {footer}\r\n            </article>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const {footer} = this.props;\r\n        let elFooter;\r\n        if (footer !== undefined) elFooter = <footer>{footer}</footer>;\r\n        if (this.tabs !== undefined)\r\n            return this.renderTabs(elFooter);\r\n        else\r\n            return this.renderSingle(elFooter);\r\n    }\r\n}\r\n","const ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\nconst ID_LENGTH = 8;\r\n\r\nexport function uid():string {\r\n    let len = ALPHABET.length;\r\n    let rtn = '';\r\n    for (let i = 0; i < ID_LENGTH; i++) {\r\n        rtn += ALPHABET.charAt(Math.floor(Math.random() * len));\r\n    }\r\n    return rtn;\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { nav } from './nav';\r\n\r\nexport interface ImageProps {\r\n    src: string;\r\n    className?: string;\r\n    style?: React.CSSProperties;\r\n}\r\n\r\nexport function Image(props: ImageProps) {\r\n    let {className, style, src} = props;\r\n    if (!src) {\r\n        return <div className={classNames(className, 'image-none')} style={style}>\r\n            <i className=\"fa fa-file-o\" />\r\n        </div>;\r\n    }\r\n    if (src.startsWith(':') === true) {\r\n        src = nav.resUrl + src.substr(1);\r\n    }\r\n    return <img src={src} className={className} style={style} />;\r\n}\r\n","export const isDevelopment = process.env.NODE_ENV === 'development';\r\n\r\nconst centerHost = process.env['REACT_APP_CENTER_HOST'];\r\nconst centerDebugHost = 'localhost:3000'; //'192.168.86.64';\r\nconst resHost = process.env['REACT_APP_RES_HOST'] || centerHost;\r\nconst resDebugHost = 'localhost:3015'; //'192.168.86.63';\r\nconst uqDebugHost = 'localhost:3015'; //'192.168.86.63';\r\nconst uqDebugBuilderHost = 'localhost:3009';\r\ninterface HostValue {\r\n    value: string;\r\n    local: boolean;\r\n}\r\nconst hosts:{[name:string]:HostValue} = {\r\n    centerhost: {\r\n        value: process.env['REACT_APP_CENTER_DEBUG_HOST'] || centerDebugHost, \r\n        local: false\r\n    },\r\n    reshost: {\r\n        value: process.env['REACT_APP_RES_DEBUG_HOST'] || resDebugHost,\r\n        local: false\r\n    },\r\n    uqhost: {\r\n        value: process.env['REACT_APP_UQ_DEBUG_HOST'] || uqDebugHost, \r\n        local: false\r\n    },\r\n    unitxhost: {\r\n        value: process.env['REACT_APP_UQ_DEBUG_HOST'] || uqDebugHost, \r\n        local: false\r\n    },\r\n    \"uq-build\": {\r\n        value: process.env['REACT_APP_UQ_DEBUG_BUILDER_HOST'] || uqDebugBuilderHost, \r\n        local: false\r\n    }\r\n}\r\n\r\nfunction centerUrlFromHost(host:string) {return `http://${host}/`}\r\nfunction centerWsFromHost(host:string) {return `ws://${host}/tv/`}\r\n\r\nconst fetchOptions = {\r\n    method: \"GET\",\r\n    mode: \"no-cors\", // no-cors, cors, *same-origin\r\n    headers: {\r\n        \"Content-Type\": \"text/plain\"\r\n    },\r\n};\r\n\r\nclass Host {\r\n    url: string;\r\n    ws: string;\r\n    resHost: string;\r\n\r\n    async start() {\r\n        if (isDevelopment === true) {\r\n            await this.tryLocal();\r\n        }\r\n        let host = this.getCenterHost();\r\n        this.url = centerUrlFromHost(host);\r\n        this.ws = centerWsFromHost(host);\r\n        this.resHost = this.getResHost();\r\n    }\r\n\r\n    private debugHostUrl(host:string) {return `http://${host}/hello`}\r\n    private async tryLocal() {\r\n        let promises:PromiseLike<any>[] = [];\r\n        let hostArr:string[] = [];\r\n        for (let i in hosts) {\r\n            let hostValue = hosts[i];\r\n            let {value} = hostValue;\r\n            if (hostArr.findIndex(v => v === value) < 0) hostArr.push(value);\r\n        }\r\n\r\n        for (let host of hostArr) {\r\n            let fetchUrl = this.debugHostUrl(host);\r\n            promises.push(localCheck(fetchUrl));\r\n        }\r\n        let results = await Promise.all(promises);\r\n        let len = hostArr.length;\r\n        for (let i=0; i<len; i++) {\r\n            let local = results[i];\r\n            let host = hostArr[i];\r\n            for (let j in hosts) {\r\n                let hostValue = hosts[j];\r\n                if (hostValue.value === host) {\r\n                    hostValue.local = local;\r\n                }\r\n            }\r\n        }\r\n        /*\r\n        let p = 0;\r\n        for (let i in hosts) {\r\n            let hostValue = hosts[i];\r\n            hostValue.local = results[p];\r\n            ++p;\r\n        }\r\n        */\r\n    }\r\n\r\n    private getCenterHost():string {\r\n        let {value, local} = hosts.centerhost;\r\n        let hash = document.location.hash;\r\n        if (hash.includes('sheet_debug') === true) {\r\n            return value;\r\n        }\r\n        if (isDevelopment === true) {\r\n            if (local === true) return value;\r\n        }\r\n        return centerHost;\r\n    }\r\n\r\n    private getResHost():string {\r\n        let {value, local} = hosts.reshost;\r\n        let hash = document.location.hash;\r\n        if (hash.includes('sheet_debug') === true) {\r\n            return value;\r\n        }\r\n        if (isDevelopment === true) {\r\n            if (local === true) return value;\r\n        }\r\n        return resHost;\r\n    }\r\n\r\n    getUrlOrDebug(url:string, urlDebug:string):string {\r\n        if (isDevelopment !== true) return url;\r\n        if (!urlDebug) return url;\r\n        for (let i in hosts) {\r\n            let host = hosts[i];\r\n            let {value, local} = host;\r\n            let hostString = `://${i}/`;\r\n            let pos = urlDebug.indexOf(hostString);\r\n            if (pos > 0) {\r\n                if (local === false) return url;\r\n                urlDebug = urlDebug.replace(hostString, `://${value}/`);\r\n                return urlDebug;\r\n            }\r\n        }\r\n        return url;\r\n    }\r\n\r\n    async localCheck(urlDebug: string):Promise<boolean> {\r\n        return await localCheck(urlDebug);\r\n    }\r\n}\r\n\r\nexport const host:Host = new Host();\r\n\r\n// 因为测试的都是局域网服务器，甚至本机服务器，所以一秒足够了\r\n// 网上找了上面的fetch timeout代码。\r\n// 尽管timeout了，fetch仍然继续，没有cancel\r\n\r\n// 实际上，一秒钟不够。web服务器会自动停。重启的时候，可能会比较长时间。也许两秒甚至更多。\r\n//const timeout = 2000;\r\nconst timeout = 200;\r\n\r\nfunction fetchLocalCheck(url:string):Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      fetch(url, fetchOptions as any)\r\n      .then(v => {\r\n          v.text().then(resolve).catch(reject);\r\n      })\r\n      .catch(reject);\r\n      const e = new Error(\"Connection timed out\");\r\n      setTimeout(reject, timeout, e);\r\n    });\r\n}\r\n\r\nasync function localCheck(url:string):Promise<boolean> {\r\n    try {\r\n        await fetchLocalCheck(url);\r\n        return true;\r\n    }\r\n    catch (err) {\r\n        return false;\r\n    }\r\n}\r\n","import jwtDecode from 'jwt-decode';\r\n\r\nexport interface Unit {\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\nexport interface Guest {\r\n    id: number;             // id = 0\r\n    guest: number;\r\n    token: string;\r\n}\r\n\r\nexport interface User extends Guest {\r\n    id: number;\r\n    name: string;\r\n    nick?: string;\r\n    icon?: string;\r\n}\r\n\r\n/*\r\nexport class UserInNav {\r\n    private user: User;\r\n    constructor(user: User) {\r\n        this.user = user;\r\n    }\r\n    get id():number {return this.user.id}\r\n    get name(): string {return this.user.name}\r\n    get nick(): string {return this.user.nick}\r\n    get icon(): string {return this.user.icon || ('http://' + process.env['REACT_APP_CENTER_HOST'] + '/imgs/Bear-icon.png');}\r\n    get guest(): number {return this.user.guest}\r\n    get token(): string {return this.user.token}\r\n}\r\n*/\r\nexport function decodeUserToken(token: string): User {\r\n    let ret:any = jwtDecode(token);\r\n    let user: User = {\r\n        id: ret.id,\r\n        name: ret.name,\r\n        guest: ret.guest,\r\n        token: token,\r\n    };\r\n    return user;\r\n}\r\n\r\nexport function decodeGuestToken(token: string): Guest {\r\n    let ret:any = jwtDecode(token);\r\n    let guest: Guest = {\r\n        id: 0,\r\n        guest: ret.guest,\r\n        token: token,\r\n    };\r\n    return guest;\r\n}\r\n","const ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\nconst ID_LENGTH = 8;\r\n\r\nexport function uid():string {\r\n    let len = ALPHABET.length;\r\n    let rtn = '';\r\n    for (let i = 0; i < ID_LENGTH; i++) {\r\n        rtn += ALPHABET.charAt(Math.floor(Math.random() * len));\r\n    }\r\n    return rtn;\r\n}\r\n","import * as React from 'react';\r\nimport { SearchBox, List, Muted, LMR } from 'tonva-react-form';\r\nimport { TuidMain, Entity } from '../../entities';\r\nimport { Page } from 'tonva-tools';\r\nimport { CLink } from '../link';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CTuidMain, TuidUI } from './cTuid';\r\n\r\nexport class VTuidMain extends VEntity<TuidMain, TuidUI, CTuidMain> {\r\n    protected controller: CTuidMain;\r\n    onNew = () => this.event('new');\r\n    onList = () => this.event('list');\r\n    onSearch = async (key:string) => this.event('list', key);\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected entityRender(link: CLink, index: number): JSX.Element {\r\n        return link.render();\r\n    }\r\n\r\n    protected async entityClick(link: CLink) {\r\n        await link.onClick();\r\n    }\r\n\r\n    protected get view() {\r\n        let {label, proxyLinks, isFrom} = this.controller;\r\n        let newButton:any;\r\n        if (isFrom === false) newButton = <button className=\"btn btn-outline-success ml-2\" onClick={this.onNew}>新增</button>;\r\n        let content:any;\r\n        if (proxyLinks === undefined) {\r\n            let right = <>\r\n                {newButton}\r\n                <button className=\"btn btn-outline-info ml-2\" onClick={this.onList}>全部</button>\r\n            </>;\r\n            content = <LMR className='m-3' right={right}>\r\n                <SearchBox className=\"w-100\" size=\"md\"\r\n                    onSearch={this.onSearch} \r\n                    placeholder={'搜索'+label} />\r\n            </LMR>;\r\n        }\r\n        else {\r\n            content = <List className=\"my-2\"\r\n                header={<Muted>{label} 代理下列Tuid</Muted>}\r\n                items={proxyLinks}\r\n                item={{render: this.entityRender, onClick:this.entityClick}} />\r\n        }\r\n        return () => <Page header={label}>\r\n            {content}\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { FA } from 'tonva-react-form';\r\nimport { Page } from 'tonva-tools';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CTuidMain, TuidUI } from './cTuid';\r\nimport { TuidMain, Tuid } from '../../entities';\r\n\r\nexport type TypeVTuidEdit = typeof VTuidEdit;\r\n\r\nexport class VTuidEdit extends VEntity<Tuid, TuidUI, CTuidMain> {\r\n    private vForm: VForm;\r\n    private id: number;\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        if (param !== undefined) {\r\n            this.id = param.id;\r\n        }\r\n        this.openPage(this.editView);\r\n    }\r\n\r\n    protected get editView() {\r\n        return () => <Page header={(this.id===undefined? '新增':'编辑') + ' - ' + this.label}>\r\n            {this.vForm.render('py-3')}\r\n        </Page>;\r\n    }\r\n\r\n    protected next = async () => {\r\n        this.vForm.reset();\r\n        this.closePage();\r\n    }\r\n\r\n    protected finish = () => {\r\n        this.closePage(2);\r\n        this.event('edit-end');\r\n    }\r\n\r\n    protected resetForm() {\r\n        this.vForm.reset();\r\n    }\r\n\r\n    protected onSubmit = async () => {\r\n        let values = this.vForm.getValues();\r\n        let ret = await this.controller.entity.save(this.id, values);\r\n        let {id} = ret;\r\n        if (id < 0) {\r\n            let {unique} = this.controller.entity;\r\n            if (unique !== undefined) {\r\n                for (let u of unique) {\r\n                    this.vForm.setError(u, '不能重复');\r\n                }\r\n            }\r\n            return;\r\n        }\r\n        if (this.controller.isCalling) {\r\n            this.returnCall(id);\r\n            this.closePage();\r\n            return;\r\n        }\r\n        this.openPageElement(<Page header={this.label + '提交成功'} back=\"none\">\r\n            <div className='m-3'>\r\n                <span className=\"text-success\">\r\n                    <FA name='check-circle' size='lg' /> 成功提交！\r\n                </span>\r\n                <div className='mt-5'>\r\n                    <button className=\"btn btn-primary mr-3\" onClick={this.next}>继续录入</button>\r\n                    <button className=\"btn btn-outline-primary\" onClick={this.finish}>不继续</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n\r\n        this.event('item-changed', {id: this.id, values: values});\r\n        return;\r\n    }\r\n\r\n    //protected view = TuidNewPage;\r\n}\r\n/*\r\nconst TuidNewPage = observer(({vm}:{vm:VmTuidEdit}) => {\r\n    let {label, id, vmForm} = vm;\r\n    return <Page header={(id===undefined? '新增':'编辑') + ' - ' + label}>\r\n        {vmForm.render('mx-3 my-2')}\r\n    </Page>;\r\n});\r\n*/","import { nav, Page } from 'tonva-tools';\r\nimport { VTuidMainListBase, VTuidDivListBase } from './vTuidList';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Tuid } from '../../entities';\r\nimport { CTuid, TuidUI } from './cTuid';\r\nimport { SearchBox, List } from 'tonva-react-form';\r\nimport React from 'react';\r\nimport { RowContent } from '../form/viewModel';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class VTuidSelect extends VEntity<Tuid, TuidUI, CTuid<Tuid>> {\r\n    protected mainRowContent: (row:any) => JSX.Element;\r\n    protected divRowContent: (row:any) => JSX.Element;\r\n\r\n    async open(param?:any): Promise<void> {\r\n        if (param === undefined)\r\n            await this.showMain(param);\r\n        else\r\n            await this.showDiv(param);\r\n    }\r\n\r\n    private async showMain(param) {\r\n        this.mainRowContent = this.ui.rowContent || RowContent;\r\n        await this.controller.searchMain(param);\r\n        this.openPage(this.mainView);\r\n    }\r\n\r\n    private async showDiv(ownerValue: any) {\r\n        let {divs} = this.ui;\r\n        if (divs !== undefined) {\r\n            this.divRowContent = divs[this.entity.name].rowContent;\r\n        }\r\n        if (this.divRowContent === undefined) {\r\n            this.divRowContent = RowContent;\r\n        }\r\n        let divItems = await this.controller.getDivItems(ownerValue);\r\n        this.openPage(this.divView, {items: divItems});\r\n    }\r\n\r\n    protected mainView = observer(() => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearchMain} placeholder={'搜索'+this.label} />;\r\n        return <Page header={header} back=\"close\">\r\n            <List\r\n                items={this.controller.PageItems.items}\r\n                item={{render: this.renderMainRow, onClick: this.clickMainRow}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    });\r\n\r\n    onSearchMain = async (key:string) => {\r\n        await this.controller.searchMain(key);\r\n        //await this.PageItems.first(key);\r\n    }\r\n    renderMainRow = (item:any, index:number):JSX.Element => <this.mainRowContent {...item} />;\r\n    clickMainRow = async (item:any) => {\r\n        this.ceasePage();\r\n        if (this.controller.entity.owner === undefined) {\r\n            this.returnCall(item);\r\n            return;\r\n        }\r\n        await this.showDiv(this.entity.getIdFromObj(item));\r\n    }\r\n\r\n    protected divView = (param:any) => {\r\n        return <Page header=\"选择Div\">\r\n            <List\r\n                items={param.items}\r\n                item={{render: this.renderDivRow, onClick: this.clickDivRow}} />\r\n        </Page>;\r\n    }\r\n    renderDivRow = (item:any, index:number):JSX.Element => <this.divRowContent {...item} />;\r\n    clickDivRow = (item:any) => {\r\n        this.ceasePage();\r\n        this.returnCall(item);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { FA } from 'tonva-react-form';\r\nimport { Page } from 'tonva-tools';\r\nimport { jsonStringify } from '../../tools';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { TuidMain } from '../../entities';\r\nimport { TuidUI, CTuidMain } from './cTuid';\r\n\r\nexport type TypeVTuidView = typeof VTuidView;\r\n\r\nexport class VTuidView extends VEntity<TuidMain, TuidUI, CTuidMain> {\r\n    vForm: VForm;\r\n    id: number;\r\n\r\n    protected buildForm(param:any) {\r\n        this.vForm = this.createForm(undefined, param);\r\n    }\r\n\r\n    async open(param:any) {\r\n        this.buildForm(param);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    render(param:any) {\r\n        this.buildForm(param);\r\n        return this.vForm.render();\r\n    }\r\n\r\n    async loadId(id: number) {\r\n        this.id = id;\r\n    }\r\n\r\n    protected next = async () => {\r\n        this.vForm.reset();\r\n        this.closePage();\r\n    }\r\n\r\n    protected finish = () => {\r\n        this.closePage(2);\r\n    }\r\n\r\n    protected resetForm() {\r\n        this.vForm.reset();\r\n    }\r\n\r\n    protected onSubmit = async () => {\r\n        let values = this.vForm.getValues();\r\n        let ret = await this.entity.save(this.id, values);\r\n        if (ret) {\r\n            alert('这里还要判断返回值，先不处理了 \\n' + jsonStringify(ret));\r\n        }\r\n        this.openPage(() => <Page header={this.label + '提交成功'} back=\"none\">\r\n            <div className='m-3'>\r\n                <span className=\"text-success\">\r\n                    <FA name='check-circle' size='lg' /> 成功提交！\r\n                </span>\r\n                <div className='mt-5'>\r\n                    <button className=\"btn btn-primary mr-3\" onClick={this.next}>继续录入</button>\r\n                    <button className=\"btn btn-outline-primary\" onClick={this.finish}>不继续</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n        return;\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n            {this.vForm.render('py-3')}\r\n    </Page>;\r\n}\r\n","import React from 'react';\r\nimport { VTuidView } from './vTuidView';\r\n\r\nexport class VTuidInfo  extends VTuidView {\r\n/*\r\n    async open(param?:any) {\r\n        this.open(this.view);\r\n    }\r\n*/\r\n/*\r\n    private view = () => {\r\n        return <Page>\r\n            TuidInfo\r\n        </Page>\r\n    }\r\n*/\r\n}\r\n","import { PageItems } from 'tonva-tools';\r\nimport { Tuid } from \"../../entities\";\r\n\r\nexport class TuidPageItems<T> extends PageItems<T> {\r\n    private tuid: Tuid;\r\n    constructor(tuid: Tuid) {\r\n        super(true);\r\n        this.tuid = tuid;\r\n    }\r\n    protected async load(param:any, pageStart:any, pageSize:number):Promise<any[]> {\r\n        let ret = await this.tuid.search(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:any) {\r\n        this.pageStart = item === undefined? 0 : item.id;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { FA, SearchBox, List } from 'tonva-react-form';\r\nimport { Page, PageItems } from 'tonva-tools';\r\nimport { jsonStringify } from '../../tools';\r\nimport { TuidMain, Entity, Tuid, TuidDiv } from '../../entities';\r\nimport { VEntity } from '../CVEntity';\r\nimport { TuidUI, CTuidMain, CTuidDiv } from './cTuid';\r\nimport { JSONContent, RowContent } from '../form/viewModel';\r\n\r\nexport abstract class VTuidMainListBase  extends VEntity<TuidMain, TuidUI, CTuidMain> {\r\n    protected rowContent: (row:any) => JSX.Element;\r\n    protected ownerId: number;\r\n\r\n    async open(param?:any) {\r\n        this.rowContent = this.ui.rowContent || RowContent;\r\n        if (this.entity.owner !== undefined) this.ownerId = Number(param);\r\n        // 初始查询, key是空的\r\n        //await this.onSearch('');\r\n        await this.controller.searchMain('');\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSearch = async (key:string) => {\r\n        await this.controller.searchMain(key);\r\n        //await this.PageItems.first(key);\r\n    }\r\n    renderRow = (item:any, index:number):JSX.Element => <this.rowContent {...item} />;\r\n\r\n    protected abstract onSelected(item:any): Promise<void>;\r\n    private callOnSelected(item:any) {\r\n        if (this.onSelected === undefined) {\r\n            alert('onSelect is undefined');\r\n            return;\r\n        }\r\n        this.onSelected(item);\r\n    }\r\n    clickRow = (item:any) => {\r\n        this.callOnSelected(item);\r\n    }\r\n    private rowKey = (item:any) => {\r\n        let {id} = item;\r\n        return id;\r\n    }\r\n    protected view = observer(() => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\r\n        let {owner} = this.entity;\r\n        let ownerTop;\r\n        if (owner !== undefined) {\r\n            let ownerObj = owner.valueFromId(this.ownerId);\r\n            ownerTop = <div>owner: {jsonStringify(ownerObj)}</div>;\r\n        }\r\n        return <Page header={header}>\r\n            {ownerTop}\r\n            <List\r\n                items={this.controller.PageItems.items}\r\n                item={{render: this.renderRow, onClick: this.clickRow, key:this.rowKey}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    });\r\n}\r\n\r\nexport class VTuidMainList extends VTuidMainListBase {\r\n    protected async onSelected(item:any) {\r\n        if (this.controller.isFrom === false)\r\n            this.event('edit', item.id);\r\n        else\r\n            this.event('info', item.id);\r\n    }\r\n}\r\n\r\nexport abstract class VTuidDivListBase  extends VEntity<TuidDiv, TuidUI, CTuidDiv> {\r\n    protected ownerId: number;\r\n\r\n    async open(param?:any) {\r\n        //this.PageItems = new TuidPageItems(this.entity);\r\n        if (this.entity.owner !== undefined) this.ownerId = Number(param);\r\n        // 初始查询, key是空的\r\n        //await this.onSearch('');\r\n        await this.controller.searchMain('');\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSearch = async (key:string) => {\r\n        await this.controller.searchMain(key);\r\n        //await this.PageItems.first(key);\r\n    }\r\n    renderRow = (item:any, index:number):JSX.Element => {\r\n        return <div className=\"px-3 py-2\">{jsonStringify(item)}</div>;\r\n    }\r\n\r\n    protected abstract onSelected(item:any): Promise<void>;\r\n    private callOnSelected(item:any) {\r\n        if (this.onSelected === undefined) {\r\n            alert('onSelect is undefined');\r\n            return;\r\n        }\r\n        this.onSelected(item);\r\n    }\r\n    clickRow = (item:any) => {\r\n        this.callOnSelected(item);\r\n    }\r\n\r\n    protected view = observer(() => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\r\n        let {owner} = this.entity;\r\n        let ownerTop;\r\n        if (owner !== undefined) {\r\n            let ownerObj = owner.valueFromId(this.ownerId);\r\n            ownerTop = <div>owner: {jsonStringify(ownerObj)}</div>;\r\n        }\r\n        return <Page header={header}>\r\n            {ownerTop}\r\n            <List\r\n                items={this.controller.PageItems.items}\r\n                item={{render: this.renderRow, onClick: this.clickRow}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    });\r\n}\r\n\r\nexport class VTuidDivList extends VTuidDivListBase {\r\n    protected async onSelected(item:any) {\r\n        this.event('edit', item.id);\r\n    }\r\n}\r\n","import _ from 'lodash';\r\nimport { TypeVPage, PageItems } from 'tonva-tools';\r\nimport { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { TuidMain, Tuid, TuidDiv } from \"../../entities\";\r\nimport { VTuidMain } from './vTuidMain';\r\nimport { VTuidEdit } from './vTuidEdit';\r\nimport { VTuidSelect } from './vTuidSelect';\r\nimport { CUq } from \"../uq/cUq\";\r\nimport { CLink } from \"../link\";\r\nimport { VTuidInfo } from \"./vTuidInfo\";\r\nimport { TuidPageItems } from \"./pageItems\";\r\nimport { VTuidMainList } from './vTuidList';\r\n\r\nexport interface TuidUI extends EntityUI {\r\n    CTuidMain?: typeof CTuidMain;\r\n    CTuidEdit?: typeof CTuidEdit;\r\n    CTuidList?: typeof CTuidList;\r\n\r\n    CTuidSelect?: typeof CTuidSelect;\r\n    CTuidInfo?: typeof CTuidInfo;\r\n    content?: React.StatelessComponent<any>;\r\n    rowContent?: React.StatelessComponent<any>;\r\n    divs?: {\r\n        [div:string]: {\r\n            CTuidSelect?: typeof CTuidSelect;\r\n            content?: React.StatelessComponent<any>;\r\n            rowContent?: React.StatelessComponent<any>;\r\n        }\r\n    }\r\n}\r\n\r\nexport abstract class CTuid<T extends Tuid> extends CEntity<T, TuidUI> {\r\n    PageItems:PageItems<any>;\r\n\r\n    protected buildPageItems():PageItems<any> {\r\n        return new TuidPageItems(this.entity.owner || this.entity);\r\n    }\r\n\r\n    async searchMain(key:string) {\r\n        if (this.PageItems === undefined) {\r\n            this.PageItems = this.buildPageItems();\r\n        }\r\n        if (key !== undefined) await this.PageItems.first(key);\r\n    }\r\n\r\n    async getDivItems(ownerId:number):Promise<any[]> {\r\n        let ret = await this.entity.searchArr(ownerId, undefined, 0, 1000);\r\n        return ret;\r\n    }\r\n}\r\n\r\nexport abstract class CTuidBase extends CTuid<TuidMain> {\r\n    constructor(cUq: CUq, entity: TuidMain, ui: TuidUI, res:any) {\r\n        super(cUq, entity, ui, res);\r\n        //let tuid = this.entity;\r\n        //this.proxies = tuid.proxies;\r\n        if (this.proxies !== undefined) {\r\n            this.proxyLinks = [];\r\n            for (let i in this.proxies) {\r\n                let link = this.cUq.linkFromName('tuid', i);\r\n                this.proxyLinks.push(link);\r\n            }\r\n        }\r\n    }\r\n\r\n    from():CTuidBase {\r\n        let ret = this.entity.cFrom();\r\n        if (ret === undefined) return this;\r\n        return ret;\r\n    }\r\n\r\n    cUqFrom():CUq {\r\n        return this.entity.cUqFrom();\r\n    }\r\n    cEditFrom(): CTuidEdit {\r\n        let cUq = this.entity.cUqFrom();\r\n        return cUq.cTuidEditFromName(this.entity.name);\r\n    }\r\n    cInfoFrom(): CTuidInfo {\r\n        let cUq = this.entity.cUqFrom();\r\n        return cUq.cTuidInfoFromName(this.entity.name);\r\n    }\r\n    cSelectFrom(): CTuidSelect {\r\n        let cUq = this.entity.cUqFrom();\r\n        return cUq.cTuidSelectFromName(this.entity.name);\r\n    }\r\n\r\n    getLable(tuid:Tuid):string {\r\n        if (tuid === this.entity) return this.label;\r\n        let {name} = tuid;\r\n        let {arrs} = this.res;\r\n        if (arrs !== undefined) {\r\n            let arr = arrs[name];\r\n            if (arr !== undefined) {\r\n                let label = arr.label;\r\n                if (label !== undefined) return label;\r\n            }\r\n        }\r\n        return name;\r\n    }\r\n\r\n    proxies: {[name:string]: TuidMain};\r\n    proxyLinks: CLink[];\r\n    isFrom: boolean;\r\n\r\n    protected get VTuidMain():typeof VTuidMain {return VTuidMain}\r\n    protected get VTuidEdit():typeof VTuidEdit {return VTuidEdit}\r\n    protected get VTuidList():typeof VTuidMainList {return VTuidMainList}\r\n\r\n    protected async internalStart(param?:any):Promise<void> {\r\n        this.isFrom = this.entity.schemaFrom !== undefined;\r\n        await this.openVPage(this.VTuidMain);\r\n    }\r\n\r\n    protected async onEvent(type:string, value:any) {\r\n        //let v: TypeVPage<CTuidMain>;\r\n        switch (type) {\r\n            default: return;\r\n            case 'new': await this.onNew(); break;\r\n            case 'list': await this.onList(); break;\r\n            case 'edit': await this.onEdit(value); return;\r\n            case 'item-changed': this.itemChanged(value); return;\r\n            case 'info': \r\n                let cTuidInfo = new CTuidInfo(this.cUq, this.entity, this.ui, this.res);\r\n                await cTuidInfo.start(value);\r\n                return;\r\n        }\r\n        //await this.openVPage(v, value);\r\n    }\r\n\r\n    protected async edit(values:any) {\r\n        let cTuidEdit = this.ui && this.ui.CTuidEdit;\r\n        if (cTuidEdit === undefined) {\r\n            await this.openVPage(this.VTuidEdit, values);\r\n        }\r\n        else {\r\n            await (new cTuidEdit(this.cUq, this.entity, this.ui, this.res)).start(values);\r\n        }\r\n    }\r\n\r\n    private async onNew() {\r\n        await this.edit(undefined);\r\n    }\r\n\r\n    private async onList() {\r\n        let cTuidList = this.ui && this.ui.CTuidList;\r\n        if (cTuidList === undefined) {\r\n            await this.openVPage(this.VTuidList, undefined);\r\n        }\r\n        else {\r\n            await (new cTuidList(this.cUq, this.entity, this.ui, this.res)).start(undefined);\r\n        }\r\n    }\r\n\r\n    protected async onEdit(id:number) {\r\n        let values:any = undefined;\r\n        if (id !== undefined) {\r\n            values = await this.entity.load(id);\r\n        }\r\n        this.edit(values);\r\n        //await this.openVPage(this.VTuidEdit, values);\r\n    }\r\n\r\n    private itemChanged({id, values}:{id:number, values: any}) {\r\n        if (this.PageItems === undefined) return;\r\n        let items = this.PageItems.items;\r\n        let item = items.find(v => v.id === id);\r\n        if (item !== undefined) {\r\n            _.merge(item, values);\r\n        }\r\n    }\r\n}\r\n\r\nexport class CTuidMain extends CTuidBase {\r\n    protected async internalStart(param?:any):Promise<void> {\r\n        this.isFrom = this.entity.schemaFrom !== undefined;\r\n        await this.openVPage(this.VTuidMain);\r\n    }\r\n\r\n}\r\n\r\nexport class CTuidEdit extends CTuidBase {\r\n    protected async internalStart(id:number):Promise<void> {\r\n        this.isFrom = this.entity.schemaFrom !== undefined;\r\n        if (typeof(id) === 'number') {\r\n            await this.onEdit(id);\r\n        }\r\n        else {\r\n            await this.edit(id);\r\n        }\r\n    }\r\n\r\n    protected async edit(values:any) {\r\n        await this.openVPage(this.VTuidEdit, values);\r\n    }\r\n}\r\n\r\nexport class CTuidList extends CTuidBase {\r\n    protected async internalStart(id:number):Promise<void> {\r\n        this.isFrom = this.entity.schemaFrom !== undefined;\r\n        await this.openVPage(this.VTuidList);\r\n    }\r\n}\r\n\r\nexport class CTuidDiv extends CTuid<TuidDiv> {\r\n    protected async internalStart():Promise<void> {\r\n        alert('tuid div: ' + this.entity.name);\r\n    }\r\n}\r\n\r\nexport class CTuidSelect extends CTuid<Tuid> {\r\n    protected async internalStart(param?: any):Promise<void> {\r\n        await this.openVPage(this.VTuidSelect, param);\r\n    }\r\n    protected async beforeStart():Promise<boolean> {\r\n        //if (await super.beforeStart() === false) return false;\r\n        await this.entity.loadSchema();\r\n        if (this.PageItems !== undefined) this.PageItems.reset();\r\n        return true;\r\n    }\r\n    protected get VTuidSelect():typeof VTuidSelect {return VTuidSelect}\r\n    idFromItem(item:any) {\r\n        return item.id;\r\n    }\r\n}\r\n\r\nexport class CTuidInfo extends CTuid<Tuid> {\r\n    protected async internalStart(id: any):Promise<void> {\r\n        let data = await this.entity.load(id)\r\n        await this.openVPage(this.VTuidInfo, data);\r\n    }\r\n    protected get VTuidInfo():typeof VTuidInfo {return VTuidInfo}\r\n}\r\n","export * from './cTuid';\r\nexport * from './vTuidMain';\r\nexport * from './vTuidEdit';\r\nexport * from './vTuidInfo';\r\nexport * from './vTuidView';\r\nexport * from './vTuidSelect';\r\n","import * as React from 'react';\r\nimport { VField } from './vField';\r\nimport { VArr } from './vArr';\r\nimport { VSubmit } from './vSubmit';\r\nimport { uid } from 'tonva-react-form';\r\n\r\nexport abstract class VBand {\r\n    protected label: string;\r\n    protected view = () => <div />;\r\n\r\n    constructor(label:string) {\r\n        this.label = label;\r\n    }\r\n\r\n    render():JSX.Element {\r\n        //text-sm-right\r\n        return <div key={this.key} className=\"px-3\">\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-sm-2 col-form-label\">\r\n                    {this.label}\r\n                </label>\r\n                <div className=\"col-sm-10\">\r\n                    {this.renderContent()}\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    setAddRow(addRow:()=>Promise<void>) {}\r\n    get key() {return this.label}\r\n    public getVFields():VField[] {return;}\r\n    public getVArr():VArr {return;}\r\n    public getVSubmit():VSubmit {return;}\r\n\r\n    protected renderContent():JSX.Element {\r\n        return <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">content</div>;\r\n    }\r\n}\r\n\r\nexport interface FieldRes {\r\n    label: string;\r\n    placeHolder: string;\r\n    suffix: string;\r\n}\r\nexport class VFieldBand extends VBand {\r\n    protected vField:VField;\r\n    constructor(label:string, vField:VField) {\r\n        super(label);\r\n        this.vField = vField;\r\n    }\r\n\r\n    get key() {return this.vField.name}\r\n    public getVFields():VField[] {return [this.vField];}\r\n\r\n    protected renderContent():JSX.Element {\r\n        return this.vField.render();\r\n        /*\r\n        <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">\r\n            {this.vField.render()}\r\n        </div>;*/\r\n    }\r\n}\r\n\r\nexport class VArrBand extends VBand {\r\n    protected vArr:VArr;\r\n    constructor(label:string, vArr:VArr) {\r\n        super(label);\r\n        this.vArr = vArr;\r\n    }\r\n\r\n    setAddRow(addRow:()=>Promise<void>) {this.vArr.setAddRow(addRow)}\r\n    get key() {return this.vArr.name}\r\n    public getVArr():VArr {return this.vArr;}\r\n\r\n    render():JSX.Element {\r\n        return <React.Fragment key={this.key}>\r\n            {this.vArr && this.vArr.render()}\r\n        </React.Fragment>;\r\n    }\r\n}\r\n\r\nexport class VFieldsBand extends VBand {\r\n    protected vFields: VField[];\r\n    constructor(label:string, vFields:VField[]) {\r\n        super(label);\r\n        this.vFields = vFields;\r\n    }\r\n\r\n    get key() {return this.vFields[0].name}\r\n    public getVFields():VField[] {return this.vFields;}\r\n\r\n    protected renderContent():JSX.Element {\r\n        return <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">\r\n            fields\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class VSubmitBand extends VBand {\r\n    protected vSubmit: VSubmit;\r\n    constructor(vSubmit:VSubmit) {\r\n        super(undefined);\r\n        this.vSubmit = vSubmit;\r\n    }\r\n\r\n    get key() {return '$submit'}\r\n\r\n    public getVSubmit():VSubmit {return this.vSubmit;}\r\n\r\n    render():JSX.Element {\r\n        return <div key=\"$submit\" className=\"px-3\">\r\n            <div className=\"form-group row\">\r\n                <div className=\"offset-sm-2 col-sm-10\">\r\n                    {this.vSubmit.render()}\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames'\r\nimport { ViewModel } from \"./viewModel\";\r\nimport { VForm } from './vForm';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\n\r\nexport class VSubmit extends ViewModel {\r\n    private vForm: VForm;\r\n    constructor(vForm: VForm) {\r\n        super();\r\n        this.vForm = vForm;\r\n        this.caption = this.vForm.submitCaption;\r\n        this.className = 'btn btn-primary w-25';\r\n    }\r\n    @observable caption: string;\r\n    @observable className: string;\r\n\r\n    private onClickSubmit = async () => {\r\n        this.vForm.submit();\r\n    }\r\n\r\n    protected view = observer(() => {\r\n        let {isOk} = this.vForm;\r\n        return <button type=\"button\" \r\n            onClick={this.onClickSubmit}\r\n            className={this.className}\r\n            disabled={isOk === false}>\r\n            {this.caption}\r\n        </button>;\r\n    });\r\n}","\r\nexport abstract class Rule {\r\n    abstract check(defy:string[], value:any);\r\n}\r\n\r\nexport class RuleRequired extends Rule {\r\n    check(defy:string[], value:any) {\r\n        switch (typeof value) {\r\n            default:\r\n            case 'boolean': return;\r\n            case 'object':\r\n                if (value !== null) return;\r\n                break;\r\n            case 'string':\r\n                if ((value as string).trim().length > 0) return;\r\n                break;\r\n            case 'number':\r\n                if ((value as number) !== NaN) return;\r\n                break;\r\n            case 'undefined':\r\n                break;\r\n        }\r\n        defy.push('不能为空');\r\n    }\r\n}\r\n\r\nexport class RuleNum extends Rule {\r\n    check(defy:string[], value:any) {\r\n        if (value === undefined || value === null) return;\r\n        let n = Number(value);\r\n        if (n === NaN) defy.push('必须是数字');\r\n    }\r\n}\r\n\r\nexport class RuleInt extends Rule {\r\n    check(defy:string[], value:any) {\r\n        if (value === undefined || value === null) return;\r\n        let n = Number(value);\r\n        if (Number.isNaN(n) === true || Number.isInteger(n) === false) {\r\n            defy.push('必须是整数');\r\n        }\r\n    }\r\n}\r\n\r\nexport class RuleMin extends RuleNum {\r\n    constructor(min: number) {\r\n        super();\r\n        this.min = min;\r\n    }\r\n    min: number;\r\n    check(defy:string[], value:any) {\r\n        super.check(defy, value);\r\n        if (Number(value) < this.min) defy.push('不能小于' + this.min);\r\n    }\r\n}\r\n\r\nexport class RuleMax extends RuleNum {\r\n    constructor(max: number) {\r\n        super();\r\n        this.max = max;\r\n    }\r\n    max: number;\r\n    check(defy:string[], value:any) {\r\n        super.check(defy, value);\r\n        if (Number(value) > this.max) defy.push('不能小于' + this.max);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { computed, action } from 'mobx';\r\nimport classNames from 'classnames';\r\nimport { observer } from 'mobx-react';\r\nimport { FA } from 'tonva-react-form';\r\nimport { ViewModel } from \"../viewModel\";\r\nimport { VForm, FormMode } from '../vForm';\r\nimport { Rule, RuleRequired, RuleInt, RuleNum, RuleMin, RuleMax } from '../rule';\r\nimport { Field } from '../../../entities';\r\nimport { FieldRes } from '../vBand';\r\nimport { FieldUI, FieldInputUI, FieldStringUI, FieldNumberUI } from '../../formUI';\r\n\r\nexport abstract class VField extends ViewModel {\r\n    protected form: VForm;\r\n    protected fieldUI: FieldUI;\r\n    protected fieldRes:FieldRes;\r\n    protected field: Field;\r\n    protected rules: Rule[];\r\n    constructor(form:VForm, field:Field, fieldUI: FieldUI, fieldRes:FieldRes) {\r\n        super();\r\n        this.form = form;\r\n        this.field = field;\r\n        this.name = field.name;\r\n        this.fieldUI = fieldUI || {} as any;\r\n        this.fieldRes = fieldRes || {} as any;\r\n        this.init();\r\n    }\r\n\r\n    name: string;\r\n\r\n    protected init() {\r\n        this.buildRules();\r\n    }\r\n\r\n    protected buildRules() {\r\n        this.rules = [];\r\n        let {required} = this.fieldUI;\r\n        if (required === true || this.field !== undefined && this.field.null === false) {\r\n            this.rules.push(new RuleRequired);\r\n        }\r\n    }\r\n\r\n    @computed get checkRules(): string[] {\r\n        let defy = [];\r\n        for (let r of this.rules) r.check(defy, this.value);\r\n        return defy;\r\n    }\r\n\r\n    @computed get isOk() {\r\n        if (this.rules.length === 0) return true;\r\n        let defy = this.checkRules;\r\n        return defy.length === 0;\r\n    }\r\n\r\n    @computed get value() { return this.form.values[this.name]; }\r\n    setValue(v:any) {\r\n        this.form.values[this.name]=v; \r\n    }\r\n    get error() { return this.form.errors[this.name]; }\r\n    set error(err:any) { this.form.errors[this.name]=err; }\r\n    protected parse(str:string):any {return str;}\r\n    get readonly():boolean {\r\n        let {mode} = this.form;\r\n        return mode === FormMode.readonly || \r\n            mode === FormMode.edit && this.fieldUI.editable === false;\r\n    }\r\n}\r\n\r\nexport class VUnknownField extends VField {\r\n    protected view = () => {\r\n        //let {name, type} = this.fieldUI;\r\n        let type='', name = '';\r\n        return <input type=\"text\" className=\"form-control form-control-plaintext border border-info rounded bg-light\"\r\n            placeholder={'unkown control: ' + type + '-' + name} />;\r\n    }\r\n}\r\n\r\nexport abstract class VInputControl extends VField {\r\n    protected fieldUI: FieldInputUI;\r\n    protected input: HTMLInputElement;\r\n\r\n    protected inputType:string;\r\n    protected get maxLength():number {return}\r\n\r\n    protected renderError = (className:string) => {\r\n        let {errors} = this.form;\r\n        let error = errors[this.name];\r\n        if (error === undefined) return;\r\n        return <div className={className}><FA name=\"exclamation-circle\" /> {error}</div>\r\n    }\r\n\r\n    /*\r\n    get value() {\r\n        return super.value;\r\n    }*/\r\n    setValue(v:any) {\r\n        super.setValue(v); this.setInputValue(); \r\n    }\r\n\r\n    protected ref = (input:HTMLInputElement) => {\r\n        this.input = input;\r\n        this.setInputValue();\r\n    }\r\n\r\n    protected setInputValue() {\r\n        if (!this.input) return;\r\n        let v = this.value;\r\n        this.input.value = v === null || v === undefined? '' : v;\r\n    }\r\n\r\n    protected onFocus = () => {\r\n        this.error = undefined;\r\n    }\r\n\r\n    protected onBlur = () => {\r\n        let defy = this.checkRules;\r\n        if (defy.length > 0) {\r\n            this.error = defy[0];\r\n        }\r\n        this.form.computeFields();\r\n    }\r\n\r\n    protected onChange = (evt: React.ChangeEvent<any>) => {\r\n        let v = this.parse(evt.currentTarget.value);\r\n        if (v === null) {\r\n            return;\r\n        }\r\n        this.setValue(v);\r\n    }\r\n\r\n    protected onKeyPress: (event:React.KeyboardEvent<HTMLInputElement>) => void;\r\n    \r\n    protected view = observer(() => {\r\n        let {required} = this.fieldUI;\r\n        let {placeHolder, suffix} = this.fieldRes;\r\n        let ctrlCN = ['form-control', 'form-control-input'];\r\n        let errCN = 'text-danger small mt-1 mx-2';\r\n    \r\n        let redDot;\r\n        let input;\r\n        if (this.readonly === true) {\r\n            input = <input className={classNames(ctrlCN, 'bg-light')}\r\n                ref={this.ref}\r\n                type={this.inputType}\r\n                readOnly={true}\r\n            />;\r\n        }\r\n        else {\r\n            input = <input className={classNames(ctrlCN)}\r\n                ref={this.ref}\r\n                type={this.inputType}\r\n                onFocus={this.onFocus}\r\n                onBlur={this.onBlur}\r\n                onChange={this.onChange}\r\n                placeholder={placeHolder}\r\n                readOnly={false}\r\n                maxLength={this.maxLength}\r\n                onKeyPress={this.onKeyPress}\r\n            />;\r\n            if (required === true || this.field.null === false) {\r\n                redDot = <RedMark />;\r\n            }\r\n        }\r\n\r\n        let inputGroup;\r\n        if (suffix === undefined)\r\n            inputGroup = input;\r\n        else\r\n            inputGroup = <div className=\"input-group\">\r\n                {input}\r\n                <div className=\"input-group-append\">\r\n                    <span className=\"input-group-text\">{suffix}</span>\r\n                </div>\r\n            </div>;\r\n\r\n        return <>\r\n            {redDot}\r\n            {inputGroup}\r\n            {this.renderError(errCN)}\r\n        </>\r\n    });\r\n}\r\n\r\nexport const RedMark = () => <b style={{color:'red', position:'absolute', left:'0.1em', top:'0.5em'}}>*</b>;\r\n\r\nexport class VStringField extends VInputControl {\r\n    protected fieldUI: FieldStringUI;\r\n    protected inputType:string = 'text';\r\n    protected get maxLength():number {return this.field.size}\r\n}\r\n\r\nconst KeyCode_Neg = 45;\r\nconst KeyCode_Dot = 46;\r\n\r\nexport abstract class VNumberControl extends VInputControl {\r\n    protected fieldUI: FieldNumberUI;\r\n    protected extraChars: number[];\r\n\r\n    protected init() {\r\n        super.init();\r\n        this.extraChars = [];\r\n        if (this.fieldUI !== undefined) {\r\n            let {min, max} = this.fieldUI;\r\n            if (min !== undefined) {\r\n                //this.rules.push((v:number) => {if (v === undefined) return; if (v<min) return ErrMin + min; return true;});\r\n                if (min < 0) this.extraChars.push(KeyCode_Neg);\r\n            }\r\n            else {\r\n                this.extraChars.push(KeyCode_Neg);\r\n            }\r\n    \r\n            if (max !== undefined) {\r\n                //this.rules.push((v:number) => {if (v === undefined) return; if (v>max) return ErrMax + max; return true});\r\n            }\r\n        }\r\n        switch (this.field.type) {\r\n            case 'dec':\r\n            case 'bigint':\r\n            case 'int':\r\n            case 'smallint':\r\n            case 'tinyint':\r\n                this.extraChars.push(KeyCode_Dot); break;\r\n        }\r\n    }\r\n\r\n    protected buildRules() {\r\n        super.buildRules();\r\n        this.rules.push(new RuleNum);\r\n        let {min, max} = this.fieldUI;\r\n        if (min !== undefined) this.rules.push(new RuleMin(min));\r\n        if (max !== undefined) this.rules.push(new RuleMax(max));\r\n    }\r\n\r\n    inputType:string = 'number';\r\n\r\n    protected parse(text:string):any {\r\n        try {\r\n            if (text.trim().length === 0) return undefined;\r\n            let ret = Number(text);\r\n            return (ret === NaN)? null : ret;\r\n        }\r\n        catch {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    protected setInputValue() {\r\n        if (!this.input) return;\r\n        let v = this.value;\r\n        if (this.parse(this.input.value) == v) return;\r\n        this.input.value = v === null || v === undefined? '' : v;\r\n    }\r\n\r\n    protected onKeyPress = (event:React.KeyboardEvent<HTMLInputElement>) => {\r\n        let ch = event.charCode;\r\n        if (ch === 8 || ch === 0 || ch === 13 || ch >= 48 && ch <= 57) return;\r\n        if (this.extraChars !== undefined) {\r\n            if (this.extraChars.indexOf(ch) >= 0) {\r\n                switch (ch) {\r\n                    case KeyCode_Dot: this.onKeyDot(); break;\r\n                    case KeyCode_Neg: this.onKeyNeg(); event.preventDefault(); break;\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    private onKeyDot() {\r\n        let v = this.input.value;\r\n        let p = v.indexOf('.');\r\n        if (p >= 0) this.input.value = v.replace('.', '');\r\n    }\r\n    private onKeyNeg() {\r\n        let v = this.input.value;\r\n        let p = v.indexOf('-');\r\n        if (p >= 0) v = v.replace('-', '');\r\n        else v = '-'+v;\r\n        this.input.value = v;\r\n    }\r\n}\r\n\r\nexport class VIntField extends VNumberControl {\r\n    protected buildRules() {\r\n        super.buildRules();\r\n        this.rules.push(new RuleInt);\r\n    }\r\n}\r\n\r\nexport class VDecField extends VNumberControl {\r\n}\r\n\r\nexport class VTextField extends VStringField {\r\n\r\n}\r\n\r\nexport class VDateTimeField extends VStringField {\r\n\r\n}\r\n","import React from 'react';\r\nimport { VField } from './vField';\r\nimport { Field } from '../../../entities';\r\nimport { VForm } from '../vForm';\r\nimport { observer } from 'mobx-react';\r\nimport { FieldRes } from '../vBand';\r\n\r\nexport class VComputeField extends VField {\r\n    constructor(form:VForm, field: Field, fieldRes: FieldRes) {\r\n        super(form, field, undefined, fieldRes);\r\n    }\r\n    protected view = observer(() => {\r\n        let value = this.form.values[this.field.name];\r\n        let {placeHolder, suffix} = this.fieldRes;\r\n        let ctrlCN = 'form-control form-control-input bg-light';\r\n        if (value === null) value = '';\r\n        let input = <input className={ctrlCN}\r\n            type=\"text\"\r\n            placeholder={placeHolder}\r\n            readOnly={true}\r\n            value={value}/>\r\n        let inputGroup;\r\n        if (suffix === undefined)\r\n            inputGroup = input;\r\n        else\r\n            inputGroup = <div className=\"input-group\">\r\n                {input}\r\n                <div className=\"input-group-append\">\r\n                    <span className=\"input-group-text\">{suffix}</span>\r\n                </div>\r\n            </div>;\r\n        return inputGroup;\r\n        /*\r\n            return <div \r\n            className=\"form-control form-control-plaintext border border-info rounded bg-light cursor-pointer\">\r\n            {value} &nbsp;\r\n        </div>;\r\n        */\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { IObservableArray, observable } from 'mobx';\r\nimport _ from 'lodash';\r\nimport { List, FA, Muted } from 'tonva-react-form';\r\nimport { Page, nav } from 'tonva-tools';\r\nimport { ViewModel, RowContent, TypeContent, JSONContent } from './viewModel';\r\nimport { ArrFields, Field } from '../../entities';\r\nimport { VForm, FieldInputs, FormMode } from './vForm';\r\nimport { FormArr } from '../formUI';\r\n\r\nexport type ArrEditRow = (initValues:any, onRowChanged:(rowValues:any)=>void) => Promise<void>;\r\n\r\nexport class VArr extends ViewModel {\r\n    protected mode: FormMode;\r\n    protected label: any;\r\n    protected header: any;\r\n    protected footer: any;\r\n    protected rowValues: any;                 // 仅仅用来判断是不是新增，undefined则是新增\r\n    protected onEditRow: ArrEditRow;\r\n    protected ownerForm:VForm;\r\n    protected vForm:VForm;\r\n    protected rowContent:TypeContent;\r\n    protected none: string;\r\n    protected newSubmitCaption: string;\r\n    protected editSubmitCaption: string;\r\n    protected addRow: ()=>Promise<void>;\r\n\r\n    name:string;\r\n    list: IObservableArray<any>;\r\n\r\n    constructor(ownerForm:VForm, arr:ArrFields, onEditRow?:ArrEditRow) {\r\n        super();\r\n        this.ownerForm = ownerForm;\r\n        let {name, fields} = arr;\r\n        this.name = name;\r\n        let {ui, res, mode, inputs, values} = ownerForm;\r\n        let arrsRes = res.arrs;\r\n        let arrRes = arrsRes !== undefined? arrsRes[name] : {};\r\n        let {label, none, newSubmit, editSubmit} = arrRes;\r\n        this.none = none || ownerForm.none;\r\n        this.newSubmitCaption = newSubmit || ownerForm.arrNewCaption;\r\n        this.editSubmitCaption = editSubmit || ownerForm.arrEditCaption;\r\n        this.label = label || name;\r\n        let arrUI = ((ui && ui.items[name]) || {}) as FormArr;\r\n        this.rowContent = arrUI.rowContent;// || JSONContent;\r\n        this.mode = mode;\r\n        if (this.onEditRow === undefined) {\r\n            this.vForm = new VForm({\r\n                fields: fields,\r\n                arrs: undefined,\r\n                ui: arrUI,\r\n                res: arrRes,\r\n                inputs: inputs[name] as FieldInputs,\r\n                none: ownerForm.none,\r\n                submitCaption: 'submit',\r\n                arrNewCaption: undefined,\r\n                arrEditCaption: undefined,\r\n                arrTitleNewButton: undefined,\r\n                mode: mode,\r\n            }, \r\n            mode===FormMode.readonly? undefined: this.onSubmit);\r\n        }\r\n        else {\r\n            this.onEditRow = onEditRow;\r\n        }\r\n        this.list = values[name];\r\n    }\r\n\r\n    reset() {\r\n        this.vForm.reset();\r\n        this.list.clear();\r\n    }\r\n\r\n    setAddRow(addRow:()=>Promise<void>) {\r\n        this.addRow = addRow;\r\n    }\r\n\r\n    protected rowPage = () => {\r\n        return <Page header={this.label} back=\"close\">\r\n            {this.vForm.render('py-3')}\r\n        </Page>\r\n    }\r\n    private onSubmit = async () => {\r\n        let {valueBoxs} = this.vForm;\r\n        await this.onRowChanged(valueBoxs);\r\n    }\r\n\r\n    private onRowChanged = async (rowValues:any) => {\r\n        if (this.rowValues === undefined) {\r\n            rowValues.$owner = this.ownerForm.values;\r\n            this.list.push(rowValues);\r\n            if (this.onEditRow === undefined)\r\n                this.vForm.reset();\r\n            else\r\n                await this.onEditRow(undefined, this.onRowChanged);\r\n        }\r\n        else {\r\n            _.merge(this.rowValues, rowValues);\r\n            if (this.onEditRow === undefined) nav.pop();\r\n        }\r\n    }\r\n\r\n    private renderItem = (item:any, index:number) => {\r\n        if (this.rowContent === undefined)\r\n            return <div className=\"px-3 py-2\"><JSONContent {...item} /></div>\r\n        return <this.rowContent {...item} />;\r\n    }\r\n    private showRow = async (rowValues:any):Promise<any> => {\r\n        if (this.onEditRow !== undefined) {\r\n            await this.onEditRow(rowValues, this.onRowChanged);\r\n            return;\r\n        }\r\n        this.vForm.reset();\r\n        if (rowValues !== undefined) this.vForm.setValues(rowValues);\r\n        nav.push(<this.rowPage />);\r\n    }\r\n    private editRow = async (rowValues:any): Promise<void> => {\r\n        this.rowValues = rowValues;\r\n        let {vSubmit} = this.vForm;\r\n        if (vSubmit !== undefined) {\r\n            vSubmit.caption = this.editSubmitCaption;\r\n            vSubmit.className = 'btn btn-outline-success';\r\n        }\r\n        this.vForm.mode = this.ownerForm.mode;\r\n        await this.showRow(rowValues);\r\n    }\r\n    private internalAddRow = async () => {\r\n        this.rowValues = undefined;\r\n        let {vSubmit} = this.vForm;\r\n        vSubmit.caption = this.newSubmitCaption;\r\n        vSubmit.className = 'btn btn-outline-success';\r\n        this.vForm.reset();\r\n        this.vForm.mode = FormMode.new;\r\n        await this.showRow(undefined);\r\n    }\r\n\r\n    protected view = () => {\r\n        let button;\r\n        if (this.addRow !== undefined || this.mode !== FormMode.readonly) {\r\n            button = <button onClick={this.addRow || this.internalAddRow}\r\n                type=\"button\" \r\n                className=\"btn btn-link p-0\">\r\n                {this.ownerForm.arrTitleNewButton}\r\n            </button>;\r\n        }\r\n        let header = this.header || <div className=\"px-3 bg-light small\" style={{paddingTop:'1px', paddingBottom:'1px'}}>\r\n            <div className=\"flex-fill align-self-center\">{this.label}</div>\r\n            {button}\r\n        </div>;\r\n        return <List className=\"pb-3\"\r\n            header={header}\r\n            none={<Muted className=\"px-3 py-2\">{this.none}</Muted>}\r\n            items={this.list}\r\n            item={{render: this.renderItem, onClick: this.editRow}} />;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { tv } from '../../../tools';\r\nimport { Field, Tuid } from '../../../entities';\r\nimport { VField, RedMark } from \"./vField\";\r\nimport { FieldUI } from '../../formUI';\r\nimport { VForm, FieldInput, FormMode } from '../vForm';\r\nimport { FieldRes } from '../vBand';\r\n\r\nconst buttonStyle:React.CSSProperties = {\r\n    textAlign:'left', \r\n    paddingLeft:'0.75rem', \r\n    paddingRight:'0.75rem', \r\n    overflow: 'hidden'\r\n};\r\n\r\nexport class VTuidField extends VField {\r\n    protected vForm: VForm;\r\n    protected input: FieldInput;\r\n    protected tuid: Tuid;\r\n\r\n    constructor(vForm: VForm, field:Field, fieldUI: FieldUI, fieldRes:FieldRes) {\r\n        super(vForm, field, fieldUI, fieldRes);\r\n        this.tuid = field._tuid;\r\n        this.vForm = vForm;\r\n        this.input = vForm.inputs[field.name] as FieldInput;\r\n    }\r\n\r\n    onClick = async () => {\r\n        if (this.readonly === true) {\r\n            if (!this.value) return;\r\n            await this.tuid.showInfo(this.value.id);\r\n            return;\r\n        }\r\n        let id:number;\r\n        if (this.input !== undefined) {\r\n            id = await this.input.select(this.vForm, this.field, this.vForm.getValues());\r\n        }\r\n        else {\r\n            alert('call undefined');\r\n            id = 0;\r\n        }\r\n        this.setValue(this.tuid.boxId(id));\r\n    }\r\n    protected view = observer(() => {\r\n        let {placeHolder} = this.fieldRes;\r\n        let disabled:boolean = false;\r\n        let {_ownerField} = this.field;\r\n        if (_ownerField !== undefined) {\r\n            let {name, arr} = _ownerField;\r\n            disabled = this.vForm.getValue(name) === null;\r\n        }\r\n        let content;\r\n        if (this.value === null)\r\n            content = <>{placeHolder || this.input.placeHolder}</>;\r\n        else if (typeof this.value === 'object') {\r\n            content = tv(this.value);\r\n        }\r\n        else {\r\n            let idBox = this.tuid.boxId(this.value);\r\n            content = tv(idBox); // idBox.content();\r\n        }\r\n        if (this.readonly === true)\r\n        {\r\n            return <div \r\n                className=\"form-control form-control-plaintext border border-info rounded bg-light cursor-pointer\"\r\n                onClick={this.onClick}>\r\n                {content}\r\n            </div>;\r\n        }\r\n        let redDot;\r\n        let {required} = this.fieldUI;\r\n        if (required === true || this.field.null === false) {\r\n            redDot = <RedMark />;\r\n        }\r\n        return <>\r\n            {redDot}\r\n            <button className=\"form-control btn btn-outline-info\"\r\n                type=\"button\"\r\n                disabled={disabled}\r\n                style={buttonStyle}\r\n                onClick={this.onClick}>\r\n                {content}\r\n            </button>\r\n        </>;\r\n    })\r\n}\r\n","import { VBand, VFieldBand, VArrBand, VFieldsBand, VSubmitBand, FieldRes } from \"./vBand\";\r\nimport { Field, ArrFields } from \"../../entities\";\r\nimport { VForm, FormOptions } from \"./vForm\";\r\nimport { FormItems, FieldUI, FormItem } from \"../formUI\";\r\nimport { VSubmit } from \"./vSubmit\";\r\nimport { VField, buildVField, VComputeField } from \"./vField\";\r\nimport { VArr } from \"./vArr\";\r\nimport { VTuidField } from \"./vField/vTuidField\";\r\n\r\nexport class BandsBuilder {\r\n    private vForm: VForm;\r\n    private onSubmit: (values:any)=>Promise<void>;\r\n    private fields: Field[];\r\n    private arrs: ArrFields[];\r\n    private formItems: FormItems;\r\n    private layout: string[];\r\n    private res: any;\r\n    constructor(vForm:VForm, options: FormOptions, onSubmit: (values:any)=>Promise<void>) {\r\n        this.vForm = vForm;\r\n        this.onSubmit = onSubmit;\r\n        let {fields, arrs, ui, res} = options;\r\n        this.fields = fields;\r\n        this.arrs = arrs;\r\n        if (ui !== undefined) {\r\n            let {items, layout} = ui;\r\n            this.formItems = items;\r\n            this.layout = layout;\r\n        }\r\n        this.res = res;\r\n    }\r\n\r\n    build():VBand[] {\r\n        //return this.bandUIs === undefined? this.bandsOnFly() : this.bandsFromUI();\r\n        return this.layout === undefined? this.bandsOnFly() : this.bandsFromLayout();\r\n    }\r\n\r\n    private resFromName(name:string, res:any):string|FieldRes {\r\n        if (res === undefined) return;\r\n        let {fields} = res;\r\n        if (fields === undefined) return;\r\n        return fields[name] || name;\r\n    }\r\n\r\n    private bandsOnFly():VBand[] {\r\n        let bands:VBand[] = [];\r\n        this.bandsFromFields(bands, this.fields, this.res);\r\n        if (this.arrs !== undefined) {\r\n            for (let arr of this.arrs) bands.push(this.bandFromArr(arr));\r\n        }\r\n        if (this.onSubmit !== undefined) {\r\n            bands.push(new VSubmitBand(new VSubmit(this.vForm)));\r\n        }\r\n        return bands;\r\n    }\r\n\r\n    private bandsFromFields(bands:VBand[], fields:Field[], res:any) {\r\n        if (fields === undefined) return;\r\n        for (let field of fields) bands.push(this.bandFromField(field, res));\r\n    }\r\n\r\n    private bandsFromLayout():VBand[] {\r\n        let bands:VBand[] = [];\r\n        /*\r\n        for (let bandUI of this.bandUIs)  {\r\n            let band = this.bandFromUI(bandUI);\r\n            bands.push(band);\r\n        }\r\n        */\r\n        return bands;\r\n    }\r\n\r\n    /*\r\n    private bandFromUI(bandUI:BandUI):VBand {\r\n        let {band} = bandUI;\r\n        switch (band) {\r\n            default: return this.bandFromFieldUI(bandUI as FieldBandUI);\r\n            case 'arr': return this.bandFromArrUI(bandUI as ArrBandUI);\r\n            case 'fields': return this.bandFromFieldsUI(bandUI as FieldsBandUI);\r\n            case 'submit': return this.bandFromSubmitUI(bandUI as SubmitBandUI);\r\n        }\r\n    }\r\n    \r\n    private bandFromFieldUI(bandUI: FieldBandUI): VFieldBand {\r\n        let {label} = bandUI;\r\n        let vField = this.vFieldFromUI(bandUI);\r\n        return new VFieldBand(label, vField);\r\n    }\r\n    private bandFromArrUI(bandUI: ArrBandUI): VArrBand {\r\n        let {label, name} = bandUI;\r\n        let vArr = this.vArrFromUI(bandUI);\r\n        return new VArrBand(label, vArr);\r\n    }\r\n    private bandFromFieldsUI(bandUI: FieldsBandUI): VFieldsBand {\r\n        let {label, fieldUIs} = bandUI;\r\n        let vFields = fieldUIs.map(v => this.vFieldFromUI(v));\r\n        return new VFieldsBand(label, vFields);\r\n    }\r\n    private bandFromSubmitUI(bandUI: SubmitBandUI): VSubmitBand {\r\n        if (this.onSubmit === undefined) return;\r\n        let vSubmit = new VSubmit(this.vForm);\r\n        return new VSubmitBand(vSubmit);\r\n    }\r\n    */\r\n/*\r\n    private vFieldFromField(field:Field, fieldRes:FieldRes, formItem: FormItem): VField {\r\n        let fieldUI:FieldUI = undefined;\r\n        if (formItem !== undefined) {\r\n            if (typeof formItem === 'function') {\r\n                return new VComputeField(this.vForm, field, fieldRes);\r\n            }\r\n        }\r\n        let ret = buildVField(this.vForm, field, formItem, fieldRes);\r\n        if (ret !== undefined) return ret;\r\n        return new VTuidField(field, fieldUI, fieldRes, this.vForm);\r\n    }\r\n*/\r\n    private bandFromField(field:Field, res:any):VBand {\r\n        let {name} = field;\r\n        let fieldRes:FieldRes;\r\n        let rfn = this.resFromName(name, res);\r\n        let label:string;\r\n        if (typeof rfn === 'object') {\r\n            label = rfn.label;\r\n            fieldRes = rfn;\r\n        }\r\n        else {\r\n            label = rfn as string;\r\n            fieldRes = undefined;\r\n        }\r\n        let vField:VField;\r\n        let formItem:FormItem;\r\n        if (this.formItems !== undefined) formItem = this.formItems[name];\r\n        //let vField = this.vFieldFromField(field, fieldRes as FieldRes, formItem);\r\n        //let fieldUI:FieldUI = undefined;\r\n        if (typeof formItem === 'function') {\r\n            vField = new VComputeField(this.vForm, field, fieldRes);\r\n        }\r\n        else {\r\n            vField = buildVField(this.vForm, field, formItem as FieldUI, fieldRes);\r\n        }\r\n        if (vField === undefined) {\r\n            vField = new VTuidField(this.vForm, field, formItem as FieldUI, fieldRes);\r\n        }\r\n        return new VFieldBand(label || name, vField);\r\n    }\r\n\r\n    private bandFromArr(arr: ArrFields):VBand {\r\n        let {name, fields} = arr;\r\n        //let row = JSONContent;\r\n        //let bands:VBand[] = [];\r\n        //this.bandsFromFields(bands, fields, res);\r\n        let vArr = new VArr(this.vForm, arr); // name, res && res.label || name, row, bands);\r\n        return new VArrBand(name, vArr);\r\n    }\r\n\r\n    /*\r\n    private vFieldFromUI(fieldUI:FieldUI):VField {\r\n        return;\r\n    }\r\n\r\n    private vArrFromUI(arrBandUI:ArrBandUI):VArr {\r\n        return;\r\n    }\r\n    */\r\n}\r\n","import { VField, VIntField, VDecField, VStringField, VTextField, VDateTimeField } from './vField';\r\nimport { Field } from '../../../entities';\r\nimport { FieldRes } from '../vBand';\r\nimport { VForm } from '../vForm';\r\nimport { FieldUI } from '../../formUI';\r\n\r\nexport function buildVField(form:VForm, field: Field, fieldUI: FieldUI, fieldRes:FieldRes): VField {\r\n    let vField:new (form:VForm, field:Field, ui:FieldUI, fieldRes:FieldRes) => VField;\r\n    switch (field.type) {\r\n        default: return;\r\n        case 'tinyint':\r\n        case 'smallint':\r\n        case 'int':\r\n            vField = VIntField;\r\n            break;\r\n        case 'bigint':\r\n            let {_tuid} = field;\r\n            if (_tuid !== undefined) return;\r\n            vField = VIntField;\r\n            break;\r\n        case 'dec':\r\n            vField = VDecField;\r\n            break;\r\n        case 'char':\r\n            vField = VStringField;\r\n            break;\r\n        case 'text':\r\n            vField = VTextField;\r\n            break;\r\n        case 'datetime':\r\n            vField = VDateTimeField;\r\n            break;\r\n    }\r\n    return new vField(form, field, fieldUI, fieldRes);\r\n}\r\n\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport { observer } from \"mobx-react\";\r\nimport { VBand } from './vBand';\r\nimport { BandsBuilder } from './bandsBuilder';\r\nimport { Field, ArrFields } from '../../entities';\r\nimport { computed, observable, IObservableObject, IObservableValue } from 'mobx';\r\nimport { VArr } from './vArr';\r\nimport { FormUI, FormUIBase, FormItems } from '../formUI';\r\nimport { VField } from './vField';\r\nimport { VSubmit } from './vSubmit';\r\nimport { IObservableArray } from 'mobx';\r\nimport { FA } from 'tonva-react-form';\r\n\r\nexport type FieldCall = (form:VForm, field:Field, values:any) => Promise<any>;\r\nexport interface FieldInput {\r\n    select: FieldCall;\r\n    content: React.StatelessComponent<any>;\r\n    placeHolder: string;\r\n}\r\nexport interface FieldInputs {\r\n    [fieldOrArr:string]: FieldInput | {[field:string]: FieldInput};\r\n}\r\nexport enum FormMode {new, edit, readonly}\r\n\r\nexport interface FormOptions {\r\n    fields: Field[];\r\n    arrs?: ArrFields[];\r\n    ui: FormUIBase;\r\n    res: any;\r\n    inputs: FieldInputs;\r\n    submitCaption: string;\r\n    arrNewCaption: string;\r\n    arrEditCaption: string;\r\n    arrTitleNewButton: JSX.Element;\r\n    none: string;\r\n    mode: FormMode;\r\n}\r\n\r\nexport class VForm {\r\n    protected fields: Field[];\r\n    protected arrs: ArrFields[];\r\n    protected bands: VBand[];\r\n    protected bandColl: {[key:string]: VBand};\r\n    protected onSubmit: ()=>Promise<void>;\r\n\r\n    constructor(options: FormOptions, onSubmit: ()=>Promise<void>) {\r\n        let {fields, arrs, ui, res, inputs, none, submitCaption, arrNewCaption, arrEditCaption, arrTitleNewButton, mode} = options;\r\n        this.fields = fields;\r\n        this.arrs = arrs;\r\n        this.ui = ui;\r\n        if (this.ui !== undefined) this.formItems = this.ui.items; //.compute = this.ui.compute;\r\n        this.res = res;\r\n        this.inputs = inputs;\r\n        this.none = none;\r\n        this.submitCaption = submitCaption;\r\n        this.arrNewCaption = arrNewCaption;\r\n        this.arrEditCaption = arrEditCaption;\r\n        this.arrTitleNewButton = arrTitleNewButton || <small><FA name=\"plus\" /> 新增</small>;\r\n        if (onSubmit === undefined) this.mode = FormMode.readonly;\r\n        else this.mode = mode;\r\n        this.buildFormValues();\r\n        this.buildBands(options, onSubmit);\r\n        this.onSubmit = onSubmit;\r\n    }\r\n\r\n    ui: FormUI;\r\n    res: any;\r\n    values: any;\r\n    errors: any;\r\n    formItems: FormItems;\r\n    mode: FormMode;\r\n    vFields: {[name:string]:VField} = {};\r\n    vArrs: {[name:string]: VArr} = {};\r\n    vSubmit: VSubmit;\r\n    inputs: FieldInputs;\r\n    none: string;\r\n    submitCaption: string;\r\n    arrNewCaption: string;\r\n    arrEditCaption: string;\r\n    arrTitleNewButton: JSX.Element;\r\n\r\n    private buildBands(options: FormOptions, onSubmit: (values:any)=>Promise<void>) {\r\n        this.bandColl = {};\r\n        let bandsBuilder = new BandsBuilder(this, options, onSubmit);\r\n        this.bands = bandsBuilder.build();\r\n        for (let band of this.bands) {\r\n            this.bandColl[band.key] = band;\r\n            let vFields = band.getVFields();\r\n            if (vFields !== undefined) for (let f of vFields) this.vFields[f.name] = f;\r\n            let vArr = band.getVArr();\r\n            if (vArr !== undefined) this.vArrs[vArr.name] = vArr;\r\n            let vSubmit = band.getVSubmit();\r\n            if (vSubmit !== undefined) this.vSubmit = vSubmit;\r\n        }\r\n    }\r\n\r\n    private onFormSubmit = (event:React.FormEvent<any>) => {\r\n        event.preventDefault();\r\n        return false;\r\n    }\r\n\r\n    protected view = observer(({className}:{className:string}) => {\r\n        return <form className={className} onSubmit={this.onFormSubmit}>\r\n            {this.bands.map(v => v.render())}\r\n        </form>;\r\n    });\r\n\r\n    getBand(name:string) {\r\n        return this.bandColl[name];\r\n    }\r\n\r\n    computeFields() {\r\n        if (this.formItems === undefined) return;\r\n        let values = this.values;\r\n        for (let i in this.formItems) {\r\n            let item = this.formItems[i];\r\n            if (typeof item !== 'function') continue;\r\n            values[i] = item.call(this, values);\r\n        }\r\n    }\r\n\r\n    async submit() {\r\n        if (this.onSubmit === undefined) return;\r\n        await this.onSubmit();\r\n    }\r\n    \r\n    getValues() {\r\n        let ret:any = {};\r\n        let values = this.values;\r\n        for (let f of this.fields) {\r\n            let {name} = f;\r\n            let v = values[name]\r\n            ret[name] =  v !== null && typeof v === 'object' ? v.id : v;\r\n        }\r\n        if (this.arrs !== undefined) {\r\n            for (let arr of this.arrs) {\r\n                let {name, fields, id, order} = arr;\r\n                let list = ret[name] = [];\r\n                let rows = this.vArrs[name].list;\r\n                for (let row of rows) {\r\n                    let item = {} as any;\r\n                    if (id !== undefined) item[id] = row[id];\r\n                    if (order !== undefined) item[order] = row[order];\r\n                    for (let f of fields) {\r\n                        let {name:fn} = f;\r\n                        let v = row[fn]\r\n                        item[fn] =  v !== null && typeof v === 'object' ? v.id : v;\r\n                    }\r\n                    list.push(item);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    get valueBoxs() {\r\n        let ret:any = {};\r\n        let values = this.values;\r\n        for (let f of this.fields) {\r\n            let {name, _tuid} = f;\r\n            let v = values[name]\r\n            ret[name] =  _tuid === undefined || typeof v === 'object' ? v : _tuid.boxId(v);\r\n        }\r\n        if (this.arrs === undefined) return ret;\r\n        for (let arr of this.arrs) {\r\n            let {name, fields, id, order} = arr;\r\n            let list = ret[name] = this.vArrs[name].list.slice();\r\n            for (let row of list) {\r\n                for (let f of fields) {\r\n                    let {name:fn, _tuid} = f;\r\n                    let v = row[fn]\r\n                    row[fn] =  _tuid === undefined || typeof v === 'object' ? v : _tuid.boxId(v);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    setValues(initValues:any) {\r\n        if (initValues === undefined) {\r\n            this.reset();\r\n            return;\r\n        }\r\n        let values = this.values;\r\n        let errors = this.errors;\r\n        for (let f of this.fields) {\r\n            let fn = f.name;\r\n            errors[fn] = undefined;\r\n            let v =  initValues[fn];\r\n            values[fn] = v;\r\n        }\r\n        // 还要设置arrs的values\r\n        for (let i in this.vArrs) {\r\n            let list = initValues[i];\r\n            if (list === undefined) continue;\r\n            let arrList = values[i] as IObservableArray<any>;\r\n            arrList.clear();\r\n            arrList.push(...list);\r\n        }\r\n    }\r\n\r\n    @computed get isOk():boolean {\r\n        for (let i in this.vFields) {\r\n            if (this.vFields[i].isOk === false) return false;\r\n        }\r\n        return true;\r\n    }\r\n    reset() {\r\n        let values = this.values;\r\n        let errors = this.errors;\r\n        for (let f of this.fields) {\r\n            let fn = f.name;\r\n            //if (this.compute !== undefined && this.compute[fn] !== undefined) continue;\r\n            values[fn] = null;\r\n            errors[fn] = undefined;\r\n        }\r\n        for (let i in this.vFields) {\r\n            let ctrl = this.vFields[i];\r\n            let cn = ctrl.name;\r\n            if (cn === undefined) continue;\r\n            //if (this.compute !== undefined && this.compute[cn] !== undefined) continue;\r\n            ctrl.setValue(null);\r\n        }\r\n        for (let i in this.vArrs) {\r\n            let vArr = this.vArrs[i];\r\n            vArr.reset();\r\n        }\r\n    }\r\n\r\n    getValue(fieldName: string) {\r\n        return this.values[fieldName];\r\n    }\r\n    setValue(fieldName: string, value: any) { this.values[fieldName] = value }\r\n\r\n    setError(fieldName:string, error:string) {this.errors[fieldName] = error}\r\n\r\n    private buildFieldValues(fields: Field[]):any {\r\n        let v: {[p:string]: any} = {\r\n            valueFromFieldName: function(propName:string) {\r\n                return this[propName];\r\n            }\r\n        };\r\n        for (let f of fields) {\r\n            let fn = f.name;\r\n            v[fn] = null;\r\n        }\r\n        return v;\r\n    }\r\n    private buildObservableValues():IObservableObject {\r\n        let v: {[p:string]: any} = this.buildFieldValues(this.fields);\r\n        if (this.arrs !== undefined) {\r\n            for (let arr of this.arrs) {\r\n                v[arr.name] = observable.array([], {deep:true});\r\n            }\r\n        }\r\n        let ret = observable(v);\r\n        return ret;\r\n    }\r\n    private buildFormValues() {\r\n        this.values = this.buildObservableValues();\r\n        this.errors = observable(this.buildFieldValues(this.fields));\r\n    }\r\n\r\n    render(className:string = \"py-3\"):JSX.Element {\r\n        return <this.view className={className} />\r\n    }\r\n}\r\n","export * from './vForm';\r\n","import {bridgeCenterApi, isBridged} from './appBridge';\r\nimport {FetchError} from '../fetchError';\r\nimport {HttpChannelUI} from './httpChannelUI';\r\nimport {nav} from '../ui/nav';\r\nimport { isDevelopment } from './host';\r\n\r\nexport async function httpGet(url:string, params?:any):Promise<any> {\r\n    let channel = new HttpChannel(false, url, undefined, undefined);\r\n    let ret = await channel.get('', params);\r\n    return ret;\r\n}\r\n\r\nexport async function httpPost(url:string, params?:any):Promise<any> {\r\n    let channel = new HttpChannel(false, url, undefined, undefined);\r\n    let ret = await channel.post('', params);\r\n    return ret;\r\n}\r\n\r\nexport class HttpChannel {\r\n    private isCenter: boolean;\r\n    private hostUrl: string;\r\n    private apiToken: string;\r\n    private ui?: HttpChannelUI;\r\n    private timeout: number;\r\n\r\n    constructor(isCenter: boolean, hostUrl: string, apiToken:string, ui?: HttpChannelUI) {\r\n        this.isCenter = isCenter;\r\n        this.hostUrl = hostUrl;\r\n        this.apiToken = apiToken;\r\n        this.ui = ui;\r\n        this.timeout = isDevelopment === true? 500000:5000;\r\n    }\r\n\r\n    private startWait = () => {\r\n        if (this.ui !== undefined) this.ui.startWait();\r\n    }\r\n\r\n    private endWait = (url?:string, reject?:(reason?:any)=>void) => {\r\n        if (this.ui !== undefined) this.ui.endWait();\r\n        if (reject !== undefined) reject('访问webapi超时 ' + url);\r\n    }\r\n\r\n    private showError = async (error:FetchError) => {\r\n        if (this.ui !== undefined) await this.ui.showError(error);\r\n    }\r\n\r\n    used() {\r\n        this.post('', {});\r\n    }\r\n\r\n    async get(url: string, params: any = undefined): Promise<any> {\r\n        if (params) {\r\n            let keys = Object.keys(params);\r\n            if (keys.length > 0) {\r\n                let c = '?';\r\n                for (let k of keys) {\r\n                    let v = params[k];\r\n                    if (v === undefined) continue;\r\n                    url += c + k + '=' + params[k];\r\n                    c = '&';\r\n                }\r\n            }\r\n        }\r\n        let options = this.buildOptions();\r\n        options.method = 'GET';\r\n        return await this.innerFetch(url, options);\r\n    }\r\n\r\n    async post(url: string, params: any): Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = 'POST';\r\n        options.body = JSON.stringify(params);\r\n        return await this.innerFetch(url, options);\r\n    }\r\n\r\n    async put(url: string, params: any): Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = 'PUT';\r\n        options.body = JSON.stringify(params);\r\n        return await this.innerFetch(url, options);\r\n    }\r\n\r\n    async delete(url: string, params: any): Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = 'DELETE';\r\n        options.body = JSON.stringify(params);\r\n        return await this.innerFetch(url, options);\r\n    }\r\n    async fetch(url: string, options: any, resolve:(value?:any)=>any, reject:(reason?:any)=>void):Promise<void> {\r\n        let that = this;\r\n        this.startWait();\r\n        let path = url;\r\n        function buildError(err: string) {\r\n            return {\r\n                channel: that,\r\n                url: path,\r\n                options: options,\r\n                resolve: resolve,\r\n                reject: reject,\r\n                error: err,\r\n            }\r\n        }\r\n        try {\r\n            console.log('%s %s', options.method, path);\r\n            let timeOutHandler = setTimeout(() => that.endWait(url, reject), this.timeout);\r\n            let res = await fetch(encodeURI(path), options);\r\n            if (res.ok === false) {\r\n                clearTimeout(timeOutHandler);\r\n                that.endWait();\r\n                console.log('call error %s', res.statusText);\r\n                throw res.statusText;\r\n            }\r\n            let ct = res.headers.get('content-type');\r\n            if (ct && ct.indexOf('json')>=0) {\r\n                return res.json().then(async retJson => {\r\n                    clearTimeout(timeOutHandler);\r\n                    that.endWait();\r\n                    if (retJson.ok === true) {\r\n                        return resolve(retJson.res);\r\n                    }\r\n                    if (retJson.error === undefined) {\r\n                        await that.showError(buildError('not valid tonva json'));\r\n                    }\r\n                    else {\r\n                        await that.showError(buildError(retJson.error));\r\n                        reject(retJson.error);\r\n                    }\r\n                    //throw retJson.error;\r\n                }).catch(async error => {\r\n                    await that.showError(buildError(error.message));\r\n                });\r\n            }\r\n            else {\r\n                let text = await res.text();\r\n                clearTimeout(timeOutHandler);\r\n                that.endWait();\r\n                resolve(text);\r\n            }\r\n        }\r\n        catch(error) {\r\n            if (typeof error === 'string') {\r\n                if (error.toLowerCase().startsWith('unauthorized') === true) {\r\n                    nav.logout();\r\n                    return;\r\n                }\r\n            }\r\n            await this.showError(buildError(error.message));\r\n        };\r\n    }\r\n\r\n    private async innerFetch(url: string, options: any): Promise<any> {\r\n        let u = this.hostUrl + url;\r\n        if (this.isCenter === true && this.apiToken === undefined && isBridged())\r\n            return await bridgeCenterApi(u, options.method, options.body);\r\n        return await new Promise<any>(async (resolve, reject) => {\r\n            await this.fetch(u, options, resolve, reject);\r\n        });\r\n    }\r\n\r\n    async callFetch(url:string, method:string, body:any):Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = method;\r\n        options.body = body;\r\n        return await new Promise<any>(async (resolve, reject) => {\r\n            await this.fetch(url, options, resolve, reject);\r\n        });\r\n    }\r\n\r\n    private buildOptions(): any {\r\n        let {language, culture} = nav;\r\n        let headers = new Headers();\r\n        //headers.append('Access-Control-Allow-Origin', '*');\r\n        headers.append('Content-Type', 'application/json;charset=UTF-8');\r\n        let lang = language;\r\n        if (culture) lang += '-' + culture;\r\n        headers.append('Accept-Language', lang);\r\n        if (this.apiToken) { \r\n            headers.append('Authorization', this.apiToken); \r\n        }\r\n        let options = {\r\n            headers: headers,\r\n            // cache: 'no-cache',\r\n        };\r\n        return options;\r\n    }\r\n}\r\n","import _ from 'lodash';\r\n\r\nexport interface KeyValueRes {\r\n    [key:string]: any;\r\n}\r\n\r\nexport interface Res<T extends KeyValueRes> {\r\n    [lang:string]: T | {[district:string]: T};\r\n}\r\n\r\nexport const resOptions:{lang:string, district:string} = {\r\n    lang: undefined,\r\n    district: undefined,\r\n}\r\n\r\nexport function setResOptions(lang:string, district:string) {\r\n    resOptions.lang = lang;\r\n    resOptions.district = district;\r\n}\r\n\r\n(function() {\r\n    let lang: string, district: string;\r\n    let language = navigator.languages && navigator.languages[0] || // Chrome / Firefox\r\n        navigator.language; // ||   // All browsers\r\n    //navigator.userLanguage; // IE <= 10\r\n    if (!language) {\r\n        lang = 'zh';\r\n        district = 'CN';\r\n    }\r\n    else {\r\n        let parts = language.split('-');\r\n        lang = parts[0];\r\n        if (parts.length > 1) district = parts[1];\r\n    }\r\n    setResOptions(lang, district);\r\n}());\r\n\r\nexport function resLang<T extends KeyValueRes>(res:Res<T>):T {\r\n    let {lang, district} = resOptions;\r\n    let ret:T = {} as T;\r\n    if (res === undefined) return ret;\r\n    _.merge(ret, res._);\r\n    let l = res[lang];\r\n    if (l === undefined) return ret;\r\n    _.merge(ret, l._);\r\n    let d = l[district];\r\n    if (d === undefined) return ret;\r\n    _.merge(ret, d);\r\n    let {entity} = ret;\r\n    if (entity !== undefined) {\r\n        for (let i in entity) {\r\n            entity[i.toLowerCase()] = entity[i];\r\n        }\r\n    }\r\n    return ret;\r\n}\r\n","export * from './CApp';\r\nexport * from './startApp';\r\nexport * from './uq';\r\nexport * from './action';\r\nexport * from './tuid';\r\nexport * from './sheet';\r\nexport * from './query';\r\nexport * from './map';\r\nexport * from './history';\r\nexport * from './pending';\r\nexport * from './form/viewModel';\r\nexport * from './form';\r\nexport * from './formUI';\r\nexport * from './ControllerUq';\r\nexport * from './CVEntity';\r\nexport * from './link';\r\nexport * from './icons';\r\n","import * as React from 'react';\r\nimport {observable, computed} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face} from '../face';\r\nimport {Rule} from '../rule';\r\n\r\nexport abstract class ControlBase {\r\n    protected formView: FormView;\r\n    constructor(formView:FormView) {\r\n        this.formView = formView;\r\n    }\r\n    render():JSX.Element {\r\n        return <div className=\"col-sm-10\">\r\n            {this.renderControl()}\r\n        </div>;\r\n    }\r\n    protected abstract renderControl():JSX.Element;\r\n    @computed get hasError():boolean {return false;}\r\n    @computed get filled():boolean {return false;}\r\n    clear() {}\r\n    clearErrors() {}\r\n    readValues(values:any):any {}\r\n    setError(fieldName:string, error:string) {}\r\n    setInitValues(values: any) {}\r\n    isOk():boolean {this.validate(); return !this.hasError;}\r\n    protected validate() {}\r\n}\r\n\r\nexport abstract class Control extends ControlBase {\r\n    protected field: Field;\r\n    protected face: Face;\r\n    protected props: any;\r\n    protected rules: Rule[];\r\n\r\n    protected element: HTMLElement;\r\n    @observable protected isOK?: boolean;\r\n    @observable protected error: string;\r\n    @observable protected value: any;\r\n\r\n    constructor(formView:FormView, field:Field, face:Face) {\r\n        super(formView);\r\n        this.field = field;\r\n        this.face = face;\r\n        this.init();\r\n        this.setProps();\r\n    }\r\n    protected ref(element: HTMLElement) {\r\n        this.element = element;\r\n    }\r\n    protected init() {\r\n        this.rules = [];\r\n        let r = this.field.rules;\r\n        if (r !== undefined) {\r\n            if (Array.isArray(r) === true) this.rules.push(...(r as Rule[]));\r\n            else this.rules.push(r as Rule);\r\n        }\r\n    };\r\n    protected setProps():any {\r\n        return this.props = {\r\n            ref: this.ref.bind(this),\r\n            name: this.field.name,\r\n        }\r\n    };\r\n    @computed get hasError():boolean {return this.error !== undefined;}\r\n    @computed get filled():boolean {\r\n        let ret = this.value !== undefined && this.value !== this.field.defaultValue;\r\n        return ret;\r\n    }\r\n    clearValue() { this.value = undefined; }\r\n    clear() { this.clearErrors(); this.clearValue(); }\r\n    clearErrors() { this.isOK = undefined; this.error = undefined; }\r\n    readValues(values:any):any {\r\n        values[this.field.name] = this.value;\r\n    }\r\n    setError(fieldName:string, error:string) {}\r\n    setInitValues(values: any) {}\r\n    protected getValueFromElement():any {return this.value;}\r\n    protected validate() {\r\n        try {\r\n            let v = this.getValueFromElement();\r\n            if (this.rules.length > 0) {\r\n                let isOk:boolean;\r\n                for (let rule of this.rules) {\r\n                    console.log('validate: %s', v);\r\n                    let err = rule(v);\r\n                    console.log('validate: %s err: %s', v, err);\r\n                    if (err === true) {\r\n                        this.error = undefined;\r\n                        isOk = true;\r\n                    }\r\n                    else if (err !== undefined) {\r\n                        //console.log('field %s onBlur v=%s rule=%s err=%s', \r\n                        //    this.field.name, JSON.stringify(v), rule, err);\r\n                        this.error = err;\r\n                        this.isOK = false;\r\n                        return;\r\n                    }\r\n                }\r\n                this.isOK = isOk;\r\n            }\r\n            this.value = v;\r\n        }\r\n        catch (e) {\r\n            this.error = e.message;\r\n        }\r\n    }\r\n    render():JSX.Element {\r\n        let n;\r\n        if (this.face !== undefined) {\r\n            let {notes} = this.face;\r\n            if (notes !== undefined) n = <small className=\"text-muted\">{notes}</small>;\r\n        }\r\n        return <div className=\"col-sm-10\">\r\n            {this.renderControl()}\r\n            {n}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face} from '../face';\r\nimport {ControlBase} from './control';\r\n\r\nexport class ButtonsControl extends ControlBase {\r\n    constructor(props) {\r\n        super(props);\r\n        this.otherClick = this.otherClick.bind(this);\r\n    }\r\n    private otherClick() {\r\n        let onOther = this.formView.props.onOther;\r\n        if (onOther === undefined) return;\r\n        let values = this.formView.readValues();\r\n        onOther(values);\r\n    }\r\n    renderControl():JSX.Element {\r\n        console.log('buttons.renderControl');\r\n        let nothing = this.formView.nothing;\r\n        let hasError = this.formView.hasError;\r\n        let props = this.formView.props;\r\n        console.log('buttons.renderControl nothing:%s hasError:%s', nothing, hasError);\r\n        let {submitButton, otherButton, onOther} = props;\r\n        let btnOther;\r\n        if (otherButton !== undefined) {\r\n            btnOther = <button className=\"btn btn-outline-info ml-auto\" onClick={this.otherClick}>\r\n                {otherButton}\r\n            </button>\r\n        }\r\n        return <div className=\"d-flex justify-content-start\">\r\n            <button\r\n                className=\"btn btn-primary\"\r\n                type=\"submit\" \r\n                disabled={nothing || hasError}>\r\n                {submitButton || '提交'}\r\n            </button>\r\n            {btnOther}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable, computed} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, Placeholder} from '../face';\r\nimport {Control} from './control';\r\n\r\nconst TxtRequired = '必须填入要求内容';\r\n\r\nexport abstract class CharsControl extends Control {\r\n    protected init() {\r\n        super.init();\r\n        if (this.field.required === true) {\r\n            this.rules.push((v) => {\r\n                if (v===null || v===undefined || (v as string).trim().length === 0) return TxtRequired;\r\n                return true;\r\n            });\r\n        }\r\n    }\r\n\r\n    protected element: HTMLInputElement;\r\n    protected getValueFromElement():any {return this.parseValue(this.element.value)}\r\n\r\n    protected setProps() {\r\n        super.setProps();\r\n        _.assign(this.props, {\r\n            onBlur: this.onBlur.bind(this),\r\n            onFocus: this.onFocus.bind(this),\r\n            onChange: this.onChange.bind(this),\r\n        });\r\n        let face = this.face as Placeholder;\r\n        if (face !== undefined) {\r\n            _.assign(this.props, {\r\n                placeholder: face.placeholder,\r\n            });\r\n        }\r\n        return this.props;\r\n    };\r\n    protected parseValue(value?:string):any {return value;}\r\n    private onBlur() {\r\n        //console.log('field %s onBlure', this.field.name);\r\n        this.validate();\r\n    }\r\n    private onChange() {\r\n        console.log('onChange');\r\n        this.validate();\r\n    }\r\n    private onFocus() {\r\n        this.clearErrors();\r\n        //this.error = undefined;\r\n        //this.formView.clearErrors();\r\n    }\r\n    protected className() {\r\n        return classNames({\r\n            \"form-control\": true,\r\n            \"has-success\": this.isOK === true,\r\n            \"is-invalid\": this.error !== undefined,\r\n            \"is-valid\": this.error === undefined && this.isOK === true,\r\n        });\r\n    }\r\n    protected renderInput():JSX.Element {\r\n        return <input className={this.className()} {...this.props} />;\r\n    }\r\n    protected ref(element: HTMLInputElement) {\r\n        super.ref(element);\r\n        if (element) {\r\n            element.value = this.value === undefined? '':this.value;\r\n        }\r\n    }\r\n    protected renderError():JSX.Element {\r\n        //if (this.field.name === 'name') console.log('charsControl renderControl');\r\n        if (this.error === undefined) return null;\r\n        return <div className=\"invalid-feedback\">{this.error}</div>\r\n    }\r\n    clearValue() { super.clearValue(); this.element.value = ''; }\r\n    setError(fieldName:string, error:string) {\r\n        if (this.field.name === fieldName) this.error = error;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        if (v === undefined) return;\r\n        //this.element.value = v;\r\n        this.value = v;\r\n    }\r\n    renderControl():JSX.Element {\r\n        return <React.Fragment>\r\n            {this.renderInput()}\r\n            {this.renderError()}\r\n        </React.Fragment>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport {CharsControl} from './charsControl';\r\nimport {StringField} from '../field';\r\n\r\nexport class StringControl extends CharsControl {\r\n    protected field: StringField;\r\n    protected setProps() {\r\n        let p = super.setProps();\r\n        _.assign(p, {\r\n            type: 'text',\r\n            maxLength: this.field.maxLength,\r\n        });\r\n        return p;\r\n    };\r\n    protected parseValue(value?:string):any {\r\n        if (value === undefined) return undefined;\r\n        if (value.trim().length === 0) return undefined;\r\n        return value;\r\n    }\r\n}\r\n\r\nexport class PasswordControl extends StringControl {\r\n    protected setProps() {\r\n        let p = super.setProps();\r\n        _.assign(p, {\r\n            type: 'password',\r\n            maxLength: this.field.maxLength,\r\n        });\r\n        return p;\r\n    };\r\n}","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport {IntField, DecField, NumberField} from '../field';\r\nimport {CharsControl} from './charsControl';\r\n\r\nconst ErrInvalidNumber = '无效的数字';\r\nconst ErrMin = '最小值为';\r\nconst ErrMax = '最大值为';\r\n\r\nconst KeyCode_Neg = 45;\r\nconst KeyCode_Dot = 46;\r\n\r\nexport class NumberControl extends CharsControl {\r\n    protected field: IntField | DecField | NumberField;\r\n    protected value: number;\r\n    protected extraChars: number[];\r\n    \r\n    protected init() {\r\n        super.init();\r\n        this.extraChars = [];\r\n        let {min, max} = this.field;\r\n        if (min !== undefined) {\r\n            this.rules.push((v:number) => {if (v === undefined) return; if (v<min) return ErrMin + min; return true;});\r\n            if (min < 0) this.extraChars.push(KeyCode_Neg);\r\n        }\r\n        else {\r\n            this.extraChars.push(KeyCode_Neg);\r\n        }\r\n\r\n        if (max !== undefined) {\r\n            this.rules.push((v:number) => {if (v === undefined) return; if (v>max) return ErrMax + max; return true});\r\n        }\r\n        switch (this.field.type) {\r\n            case 'dec':\r\n            case 'number': this.extraChars.push(KeyCode_Dot); break;\r\n        }\r\n    }\r\n\r\n    protected parseValue(value?:string):any {\r\n        if (value === undefined) return undefined;\r\n        if (value.trim().length === 0) return undefined;\r\n        let n = Number.parseFloat(value);\r\n        if (isNaN(n)) throw new Error(ErrInvalidNumber);\r\n        return n;\r\n    }\r\n\r\n    protected setProps() {\r\n        super.setProps();\r\n        _.assign(this.props, {\r\n            type: 'number',\r\n            step: (this.field as DecField).step,\r\n            onKeyPress: this.onKeyPress.bind(this),\r\n        });\r\n    }\r\n\r\n    onKeyPress(event:KeyboardEvent) {\r\n        let ch = event.charCode;\r\n        if (ch === 8 || ch === 0 || ch === 13 || ch >= 48 && ch <= 57) return;\r\n        if (this.extraChars !== undefined) {\r\n            if (this.extraChars.indexOf(ch) >= 0) {\r\n                switch (ch) {\r\n                    case KeyCode_Dot: this.onKeyDot(); break;\r\n                    case KeyCode_Neg: this.onKeyNeg(); event.preventDefault(); break;\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    private onKeyDot() {\r\n        let v = this.element.value;\r\n        let p = v.indexOf('.');\r\n        if (p >= 0) this.element.value = v.replace('.', '');\r\n    }\r\n    private onKeyNeg() {\r\n        let v = this.element.value;\r\n        let p = v.indexOf('-');\r\n        if (p >= 0) v = v.replace('-', '');\r\n        else v = '-'+v;\r\n        this.element.value = v;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {Control, ControlBase} from './control';\r\nimport {FormView} from '../formView';\r\n\r\nexport class UnknownControl extends Control {\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-plaintext\">\r\n            <div className=\"alert alert-primary\" role=\"alert\">\r\n            don't know how to create control<br/>\r\n            field: {JSON.stringify(this.field)} must be object <br/>\r\n            face: {JSON.stringify(this.face)} must be object <br/>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class EmptyControl extends ControlBase {\r\n    private element:JSX.Element;\r\n    constructor(formView:FormView, element:JSX.Element) {\r\n        super(formView);\r\n        this.element = element;\r\n    }\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-plaintext\">\r\n            {this.element}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, IdPickFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class PickIdControl extends Control {\r\n    protected face: IdPickFace;\r\n    @observable private caption: string|JSX.Element;\r\n\r\n    private onClick = async () => {\r\n        let {pick, fromPicked} = this.face;\r\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\r\n        if (item === undefined) {\r\n            this.value = undefined;\r\n            return;\r\n        }\r\n        if (fromPicked === undefined) {\r\n            this.value = item.id;\r\n            return;\r\n        }\r\n        let {id, caption} = fromPicked(item);\r\n        this.value = id;\r\n        this.caption = caption;\r\n    }\r\n    onPicked = (value: any) => {\r\n        this.value = value.id;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        this.value = v;\r\n    }\r\n    private controlContent():string|JSX.Element {\r\n        let {itemFromId, fromPicked, initCaption} = this.face;\r\n        if (this.value === undefined) {\r\n            return initCaption || '请选择Id';\r\n        }\r\n        if (this.caption !== undefined) {\r\n            return this.caption;\r\n        }\r\n        if (itemFromId !== undefined) {\r\n            if (fromPicked !== undefined) {\r\n                let item = itemFromId(this.value);\r\n                if (item) {\r\n                    let ret = fromPicked(item);\r\n                    if (ret !== undefined) return ret.caption;\r\n                }\r\n            }\r\n        }\r\n        return String(this.value);\r\n    }\r\n    /*\r\n    private buildContent():string|JSX.Element {\r\n        let {tuid, input} = this.face;\r\n        if (input === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n            return <div onClick={this.onClick}>{this.controlContent()}</div>;\r\n        }\r\n        return <input.component id={this.value} \r\n            tuid={tuid}\r\n            input={input}\r\n            entitiesUI={this.formView.props.context} \r\n            params={this.formView.readValues()}\r\n            onPicked={this.onPicked} />;\r\n    }*/\r\n    renderControl():JSX.Element {\r\n        let {tuid, input} = this.face;\r\n        if (input === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n            return <div className=\"form-control-plaintext px-2 border text-primary rounded cursor-pointer\"\r\n                onClick={this.onClick}>\r\n                {this.controlContent()}\r\n            </div>;\r\n        }\r\n        return <div className=\"form-control-static \">\r\n            <input.component id={this.value} \r\n                ui={tuid}\r\n                //input={input}\r\n                //entitiesUI={this.formView.props.context} \r\n                //params={this.formView.readValues()}\r\n                //onPicked={this.onPicked}\r\n                />\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, TuidPickFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class PickTuidControl extends Control {\r\n    protected face: TuidPickFace;\r\n    // protected value: number;\r\n    @observable private caption: string|JSX.Element;\r\n    constructor(formView:FormView, field:Field, face:Face) {\r\n        super(formView, field, face);\r\n        this.onIdChanged = this.onIdChanged.bind(this);\r\n        //this.onClick = this.onClick.bind(this);\r\n    }\r\n    /*\r\n    private async onClick() {\r\n        let {pick, fromPicked} = this.face;\r\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\r\n        if (item === undefined) {\r\n            this.value = undefined;\r\n            return;\r\n        }\r\n        if (fromPicked === undefined) {\r\n            this.value = item.id;\r\n            return;\r\n        }\r\n        let {id, caption} = fromPicked(item);\r\n        this.value = id;\r\n        this.caption = caption;\r\n    }*/\r\n    onIdChanged(id: any) {\r\n        this.value = id.id;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        this.value = v;\r\n    }\r\n    private buildContent():JSX.Element {\r\n        //let {tuid, input} = this.face;\r\n        return <this.face.input.component \r\n            {...this.face}\r\n            id={this.value}\r\n            //ui={this.face.ui}\r\n            //input={input}\r\n            //entitiesUI={this.formView.props.context} \r\n            onFormValues={()=>this.formView.readValues()}\r\n            onIdChanged={this.onIdChanged} />;\r\n    }\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-static \">\r\n            {this.buildContent()}\r\n        </div>;\r\n    }\r\n}\r\n/*\r\n<button className=\"form-control btn btn-outline-info\"\r\ntype=\"button\"\r\nstyle={{textAlign:'left', paddingLeft:'0.75rem'}}\r\nonClick={this.onClick}>\r\n{this.buildContent()}\r\n</button>\r\n*/","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, PickFace} from '../face';\r\nimport {Control} from './control';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class PickControl extends Control {\r\n    protected face: PickFace;\r\n    @observable private caption: string|JSX.Element;\r\n\r\n    private onClick = async () => {\r\n        let {pick, fromPicked} = this.face;\r\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\r\n        if (item === undefined) {\r\n            this.value = undefined;\r\n            return;\r\n        }\r\n        let {id, caption} = fromPicked(item);\r\n        this.value = id;\r\n        this.caption = caption;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        this.value = v;\r\n    }\r\n    /*\r\n    private controlContent():string|JSX.Element {\r\n        let {content: Content} = this.face;\r\n        if (this.value === undefined) {\r\n            return '请选择';\r\n        }\r\n        \r\n        if (this.caption !== undefined) {\r\n            return this.caption;\r\n        }\r\n        return <Content id={this.value} />;\r\n    }*/\r\n    /*\r\n    private buildContent():string|JSX.Element {\r\n        let {tuid, input} = this.face;\r\n        if (input === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n            return <div onClick={this.onClick}>{this.controlContent()}</div>;\r\n        }\r\n        return <input.component id={this.value} \r\n            tuid={tuid}\r\n            input={input}\r\n            entitiesUI={this.formView.props.context} \r\n            params={this.formView.readValues()}\r\n            onPicked={this.onPicked} />;\r\n    }*/\r\n    renderControl():JSX.Element {\r\n        return <this.view />;\r\n        /*\r\n        let {content:Content} = this.face;\r\n        //if (this.value === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n        //}\r\n        //return <div className=\"form-control-static \">\r\n        //    <Content />\r\n        //</div>;\r\n        */\r\n    }\r\n\r\n    private view = observer(() => {\r\n        let content;\r\n        let {content: Content} = this.face;\r\n        if (this.value === undefined || this.value === null) {\r\n            content = '请选择';\r\n        }\r\n        /*\r\n        else if (this.caption !== undefined) {\r\n            content = this.caption;\r\n        }*/\r\n        else {\r\n            content = <Content id={this.value} />;\r\n        } \r\n        return <div\r\n            className=\"form-control-plaintext px-2 border text-primary rounded cursor-pointer bg-light\"\r\n            onClick={this.onClick}>\r\n            {content}\r\n        </div>\r\n    });\r\n}\r\n","export * from './control';\r\nexport * from './buttonsControl';\r\nexport * from './stringControl';\r\nexport * from './numberControl';\r\n\r\nimport {Field} from '../field';\r\nimport {Face} from '../face';\r\nimport {Control, ControlBase} from './control';\r\nimport {ButtonsControl} from './buttonsControl';\r\nimport {CheckControl} from './checkControl';\r\nimport {RadioControl} from './radioControl';\r\nimport {TextAreaControl} from './textAreaControl';\r\nimport {SelectControl} from './selectControl';\r\nimport {UnknownControl, EmptyControl} from './unknownControl';\r\nimport {StringControl, PasswordControl} from './stringControl';\r\nimport {NumberControl} from './numberControl';\r\n\r\nimport {FormView, FormRow, GroupRow, FieldRow, LabelFormRow} from '../formView';\r\nimport { PickIdControl } from './pickIdControl';\r\nimport { PickTuidControl } from './pickTuidControl';\r\nimport { PickControl } from './pickControl';\r\n\r\nexport type CreateControl = (form:FormView, row: FormRow) => ControlBase\r\n\r\nexport const createControl:CreateControl = (form:FormView, row: LabelFormRow):ControlBase => {\r\n    let label = row.label;\r\n    if ((<GroupRow>row).group !== undefined)\r\n        return createGroupControl(form, label, row as GroupRow);\r\n    if ((<FieldRow>row).field !== undefined)\r\n        return createFieldControl(form, label, row as FieldRow);\r\n    return new EmptyControl(form, row.help);\r\n}\r\n\r\nconst controls:{[type:string]: new (formView:FormView, field:Field, face:Face) => Control} = {\r\n    \"string\": StringControl,\r\n    \"password\": PasswordControl,\r\n    \"number\": NumberControl,\r\n    \"checkbox\": CheckControl,\r\n    \"radiobox\": RadioControl,\r\n    \"select\": SelectControl,\r\n    \"pick-id\": PickIdControl,\r\n    \"pick-tuid\": PickTuidControl,\r\n    \"textarea\": TextAreaControl,\r\n    \"pick\": PickControl,\r\n};\r\nconst defaultFaces:{[type:string]: Face} = {\r\n    \"string\": {type:'string'},\r\n    \"number\": {type:'number'},\r\n    \"int\": {type:'number'},\r\n    \"dec\": {type:'number'},\r\n    \"bool\": {type:'checkbox'},\r\n}\r\nfunction createFieldControl(form:FormView, label:string, fieldRow: FieldRow):Control {\r\n    let {field, face} = fieldRow;\r\n    switch (typeof field) {\r\n        case 'string':\r\n            field = {\r\n                name: (field as any) as string,\r\n                type: 'string',\r\n            }\r\n            break;\r\n        case 'object':\r\n            break;\r\n        default:\r\n            return new UnknownControl(form, field, face);\r\n    }\r\n    let fieldType = field.type || 'string';\r\n    if (face === undefined) {\r\n        face = defaultFaces[fieldType];\r\n        if (face === undefined) return new UnknownControl(form, field, face);\r\n    }\r\n    else if (face.type === undefined) {\r\n        let f = defaultFaces[fieldType];\r\n        face.type = f===undefined? 'string' : f.type;\r\n    }\r\n    let control = controls[face.type || fieldType] || UnknownControl;\r\n    return new control(form, field, face);\r\n}\r\n\r\nfunction createGroupControl(form:FormView, label:string, groupRow: GroupRow):Control {\r\n    return new UnknownControl(form, groupRow as any, undefined);\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field, BoolField} from '../field';\r\nimport {Face, CheckBoxFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class CheckControl extends Control {    \r\n    protected element: HTMLInputElement;\r\n    protected field: BoolField;\r\n    protected face: CheckBoxFace;\r\n    private trueValue: any;\r\n    private falseValue: any;\r\n\r\n    protected init() {\r\n        super.init();\r\n        let {trueValue, falseValue} = this.field;\r\n        if (trueValue === undefined) this.trueValue = 1;\r\n        if (falseValue === undefined) this.falseValue = 0;\r\n    }\r\n\r\n    setProps() {\r\n        super.setProps();\r\n        _.assign(this.props, {\r\n            onChange: this.onChange.bind(this),\r\n        });\r\n    }\r\n\r\n    clearValue() {\r\n        this.element.checked = this.field.defaultValue === this.trueValue;\r\n        this.value = this.getValueFromElement();\r\n    }\r\n\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        if (v === undefined) {\r\n            v = this.field.defaultValue;\r\n        }\r\n        if (v !== undefined) {\r\n            //this.element.checked = v === this.trueValue;\r\n            //this.value = this.getValueFromElement();\r\n        }\r\n    }\r\n\r\n    protected getValueFromElement():any { return this.element.checked? this.trueValue:this.falseValue; }\r\n\r\n    private onChange() {\r\n        this.value = this.getValueFromElement();\r\n    }\r\n\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-static\">\r\n            <label className=\"form-control\">\r\n                <label className=\"custom-control custom-checkbox mb-0\">\r\n                    <input type='checkbox'\r\n                        name={this.field.name}\r\n                        ref={this.props.ref}\r\n                        onChange={this.props.onChange}\r\n                        className=\"custom-control-input\" />\r\n                    <span className=\"custom-control-indicator\" />\r\n                    <span className=\"custom-control-description\">{this.face.label}</span>\r\n                </label>\r\n            </label>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, RadioFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class RadioControl extends Control {\r\n    protected face: RadioFace;\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-static\">\r\n            <div className=\"form-control\">\r\n            {\r\n                this.face.list.map((item, index) => {\r\n                    let t, v;\r\n                    if (typeof item !== 'object') t = v = item;\r\n                    else {\r\n                        t = item.text;\r\n                        v = item.value;\r\n                    }\r\n                    return <label key={index} className=\"custom-control custom-radio w-25\">\r\n                        <input type='radio'\r\n                            name={this.field.name} \r\n                            className=\"custom-control-input\" />\r\n                        <span className=\"custom-control-indicator\"></span>\r\n                        <span className=\"custom-control-description\">{t}</span>\r\n                    </label>;\r\n                })\r\n            }\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, SelectFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class SelectControl extends Control {\r\n    constructor (formView:FormView, field:Field, face:Face) {\r\n        super(formView, field, face);\r\n        this.ref = this.ref.bind(this);\r\n    }\r\n    protected face: SelectFace;\r\n    protected element: HTMLSelectElement;\r\n    protected getValueFromElement():any {\r\n        let {selectedIndex, selectedOptions} = this.element;\r\n        let v:any = selectedOptions[0].value;\r\n        switch (this.field.type) {\r\n            case 'number': v = Number(v); break;\r\n            case 'date': v = new Date(v); break;\r\n            case 'bool': \r\n                if (typeof v === 'string') {\r\n                    v = ((v as string).toLowerCase() === 'true');\r\n                }\r\n                break;\r\n        }\r\n        return v;\r\n    }\r\n    renderControl():JSX.Element {\r\n        let {list} = this.face;\r\n        let def = this.face.default;\r\n        let options: any[] = [];\r\n        if (def === undefined)\r\n            options.push(<option key={-1} value={undefined}>请选择</option>);\r\n        options.push(...list.map((item, index) => {\r\n            let t, v;\r\n            if (typeof item !== 'object') t = v = item;\r\n            else {\r\n                t = item.text;\r\n                v = item.value;\r\n            }\r\n            return <option key={index} value={v}>{t}</option>;\r\n        }));\r\n        return <div className=\"form-control-static\">\r\n            <select name={this.field.name} className=\"form-control\" ref={this.ref}>\r\n                {options}\r\n            </select>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport {CharsControl} from './charsControl';\r\nimport {StringField} from '../field';\r\nimport {TextAreaFace} from '../face';\r\n\r\nexport class TextAreaControl extends CharsControl {\r\n    protected field: StringField;\r\n    protected face: TextAreaFace;\r\n    private el: HTMLTextAreaElement;\r\n    protected setProps() {\r\n        let p = super.setProps();\r\n        let {maxLength} = this.field;\r\n        let {rows} = this.face;\r\n        _.assign(p, {\r\n            maxLength: maxLength,\r\n            rows: rows,\r\n        });\r\n        return p;\r\n    };\r\n    protected renderInput():JSX.Element {\r\n        return <textarea ref={t=>{this.el = t;if (t!==undefined) t.value=''}} className={this.className()} {...this.props} />;\r\n    }\r\n}\r\n","import { Entities, Field, ArrFields, FieldMap } from './entities';\r\nimport { TuidMain, Tuid } from './tuid';\r\n\r\nconst tab = '\\t';\r\nconst ln = '\\n';\r\n\r\nexport abstract class Entity {\r\n    protected entities: Entities;\r\n    protected schema: any;\r\n    private jName: string;\r\n    sys?: boolean;\r\n    readonly name: string;\r\n    readonly typeId: number;\r\n    abstract get typeName(): string;\r\n    get sName():string {return this.jName || this.name}\r\n    fields: Field[];\r\n    arrFields: ArrFields[];\r\n    returns: ArrFields[];\r\n\r\n    constructor(entities:Entities, name:string, typeId:number) {\r\n        this.entities = entities;\r\n        this.name = name;\r\n        this.typeId = typeId;\r\n        this.sys = this.name.indexOf('$') >= 0;\r\n    }\r\n\r\n    public face: any;           // 对应字段的label, placeHolder等等的中文，或者语言的翻译\r\n\r\n    protected get tvApi() {return this.entities.uqApi;}\r\n    getApiFrom() {return this.entities.uqApi;}\r\n\r\n    private fieldMaps: {[arr:string]: FieldMap} = {};\r\n    fieldMap(arr?:string): FieldMap {\r\n        if (arr === undefined) arr = '$';\r\n        let ret = this.fieldMaps[arr];\r\n        if (ret === undefined) {\r\n            let fields:Field[];\r\n            if (arr === '$') fields = this.fields;\r\n            else if (this.arrFields !== undefined) {\r\n                let arrFields = this.arrFields.find(v => v.name === arr);\r\n                if (arrFields !== undefined) fields = arrFields.fields;\r\n            }\r\n            else if (this.returns !== undefined) {\r\n                let arrFields = this.returns.find(v => v.name === arr);\r\n                if (arrFields !== undefined) fields = arrFields.fields;\r\n            }\r\n            if (fields === undefined) return {};\r\n            ret = {};\r\n            for (let f of fields) ret[f.name] = f;\r\n            this.fieldMaps[arr] = ret;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    public async loadSchema():Promise<void> {\r\n        if (this.schema !== undefined) return;\r\n        let schema = await this.entities.uqApi.schema(this.name);\r\n        this.setSchema(schema);\r\n        this.buildFieldsTuid();\r\n    }\r\n\r\n    public setSchema(schema:any) {\r\n        if (schema === undefined) return;\r\n        if (this.schema !== undefined) return;\r\n        this.schema = schema;\r\n        let {name} = schema;\r\n        if (name !== this.name) this.jName = name;\r\n        this.buildFieldsTuid();\r\n    }\r\n\r\n    public buildFieldsTuid() {\r\n        let {fields, arrs, returns} = this.schema;\r\n        this.entities.buildFieldTuid(this.fields = fields);\r\n        this.entities.buildArrFieldsTuid(this.arrFields = arrs, fields);\r\n        this.entities.buildArrFieldsTuid(this.returns = returns, fields);\r\n        //this.newMain = this.buildCreater(fields);\r\n        //this.newArr = this.buildArrCreater(arrs);\r\n        //this.newRet = this.buildArrCreater(returns);\r\n    }\r\n\r\n    schemaStringify():string {\r\n        return JSON.stringify(this.schema, (key:string, value:any) => {\r\n            if (key === '_tuid') return undefined;\r\n            return value;\r\n        }, 4);\r\n    }\r\n\r\n    tuidFromField(field:Field):Tuid {\r\n        let {_tuid, tuid} = field;\r\n        if (tuid === undefined) return;\r\n        if (_tuid !== undefined) return _tuid;\r\n        return field._tuid = this.entities.getTuid(tuid, undefined);\r\n    }\r\n\r\n    tuidFromName(fieldName:string, arrName?:string):Tuid {\r\n        if (this.schema === undefined) return;\r\n        let {fields, arrs} = this.schema;\r\n        let entities = this.entities;\r\n        function getTuid(fn:string, fieldArr:Field[]) {\r\n            if (fieldArr === undefined) return;\r\n            let f = fieldArr.find(v => v.name === fn);\r\n            if (f === undefined) return;\r\n            return entities.getTuid(f.tuid, undefined);\r\n        }\r\n        let fn = fieldName.toLowerCase();\r\n        if (arrName === undefined) return getTuid(fn, fields);\r\n        if (arrs === undefined) return;\r\n        let an = arrName.toLowerCase();\r\n        let arr = (arrs as ArrFields[]).find(v => v.name === an);\r\n        if (arr === undefined) return;\r\n        return getTuid(fn, arr.fields);\r\n    }\r\n\r\n    protected buildParams(params:any):any {\r\n        let result = {};\r\n        let fields = this.fields;\r\n        if (fields !== undefined) this.buildFieldsParams(result, fields, params);\r\n        let arrs = this.arrFields;\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                let {name, fields} = arr;\r\n                let paramsArr:any[] = params[name];\r\n                if (paramsArr === undefined) continue;\r\n                let arrResult = [];\r\n                result[name] = arrResult;\r\n                for (let pa of params) {\r\n                    let rowResult = {};\r\n                    this.buildFieldsParams(rowResult, fields, pa);\r\n                    arrResult.push(rowResult);\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private buildFieldsParams(result:any, fields:Field[], params:any) {\r\n        for (let field of fields) {\r\n            let {name} = field;\r\n            let d = params[name];\r\n            let val:any;\r\n            switch (typeof d) {\r\n                default: val = d; break;\r\n                case 'object':\r\n                    let tuid = field._tuid;\r\n                    if (tuid === undefined) val = d.id;\r\n                    else val = tuid.getIdFromObj(d);\r\n                    break;\r\n            }\r\n            result[name] = val;\r\n        }\r\n    }\r\n\r\n    pack(data:any):string {\r\n        let ret:string[] = [];\r\n        let fields = this.fields;\r\n        if (fields !== undefined) this.packRow(ret, fields, data);\r\n        let arrs = this.arrFields; //schema['arrs'];\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                this.packArr(ret, arr.fields, data[arr.name]);\r\n            }\r\n        }\r\n        return ret.join('');\r\n    }\r\n\r\n    private escape(row:any, field:Field):any {\r\n        let d = row[field.name];\r\n        switch (typeof d) {\r\n            default: return d;\r\n            case 'object':\r\n                let tuid = field._tuid;\r\n                if (tuid === undefined) return d.id;\r\n                return tuid.getIdFromObj(d);\r\n            case 'string':\r\n                let len = d.length;\r\n                let r = '', p = 0;\r\n                for (let i=0;i<len;i++) {\r\n                    let c = d.charCodeAt(i);\r\n                    switch(c) {\r\n                        case 9: r += d.substring(p, i) + '\\\\t'; p = i+1; break;\r\n                        case 10: r += d.substring(p, i) + '\\\\n'; p = i+1; break;\r\n                    }\r\n                }\r\n                return r + d.substring(p);\r\n            case 'undefined': return '';\r\n        }\r\n    }\r\n\r\n    private packRow(result:string[], fields:Field[], data:any) {\r\n        let len = fields.length;\r\n        if (len === 0) return;\r\n        let ret = '';\r\n        ret += this.escape(data, fields[0]);\r\n        for (let i=1;i<len;i++) {\r\n            let f = fields[i];\r\n            ret += tab + this.escape(data, f);\r\n        }\r\n        result.push(ret + ln);\r\n    }\r\n\r\n    private packArr(result:string[], fields:Field[], data:any[]) {\r\n        if (data !== undefined) {\r\n            for (let row of data) {\r\n                this.packRow(result, fields, row);\r\n            }\r\n        }\r\n        result.push(ln);\r\n    }\r\n\r\n    unpackSheet(data:string):any {\r\n        let ret = {} as any; //new this.newMain();\r\n        //if (schema === undefined || data === undefined) return;\r\n        let fields = this.fields;\r\n        let p = 0;\r\n        if (fields !== undefined) p = this.unpackRow(ret, fields, data, p);\r\n        let arrs = this.arrFields; //schema['arrs'];\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                p = this.unpackArr(ret, arr, data, p);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    unpackReturns(data:string):any {\r\n        let ret = {} as any;\r\n        //if (schema === undefined || data === undefined) return;\r\n        //let fields = schema.fields;\r\n        let p = 0;\r\n        //if (fields !== undefined) p = unpackRow(ret, schema.fields, data, p);\r\n        let arrs = this.returns; //schema['returns'];\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                //let creater = this.newRet[arr.name];\r\n                p = this.unpackArr(ret, arr, data, p);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    protected unpackRow(ret:any, fields:Field[], data:string, p:number):number {\r\n        let ch0 = 0, ch = 0, c = p, i = 0, len = data.length, fLen = fields.length;\r\n        for (;p<len;p++) {\r\n            ch0 = ch;\r\n            ch = data.charCodeAt(p);\r\n            if (ch === 9) {\r\n                let f = fields[i];\r\n                let {name} = f;\r\n                if (ch0 !== 8) {\r\n                    if (p>c) {\r\n                        let v = data.substring(c, p);\r\n                        ret[name] = this.to(ret, v, f);\r\n                    }\r\n                }\r\n                else {\r\n                    ret[name] = null;\r\n                }\r\n                c = p+1;\r\n                ++i;\r\n                if (i>=fLen) {\r\n                    p = data.indexOf('\\n', c);\r\n                    if (p >= 0) ++p;\r\n                    else p = len;\r\n                    break;\r\n                }\r\n            }\r\n            else if (ch === 10) {\r\n                let f = fields[i];\r\n                let {name} = f;\r\n                if (ch0 !== 8) {\r\n                    if (p>c) {\r\n                        let v = data.substring(c, p);\r\n                        ret[name] = this.to(ret, v, f);\r\n                    }\r\n                }\r\n                else {\r\n                    ret[name] = null;\r\n                }\r\n                ++p;\r\n                ++i;\r\n                break;\r\n            }\r\n        }\r\n        return p;\r\n    }\r\n\r\n    private to(ret:any, v:string, f:Field):any {\r\n        switch (f.type) {\r\n            default: return v;\r\n            case 'datetime':\r\n            case 'date':\r\n            case 'time':\r\n                let date = new Date(Number(v));\r\n                return date;\r\n            case 'id':\r\n            case 'tinyint':\r\n            case 'smallint':\r\n            case 'int':\r\n            case 'dec': return Number(v);\r\n            case 'bigint':\r\n                let id = Number(v);\r\n                let {_tuid} = f;\r\n                if (_tuid === undefined) return id;\r\n                _tuid.useId(id, true);\r\n                return _tuid.boxId(id);\r\n        }\r\n    }\r\n\r\n    private unpackArr(ret:any, arr:ArrFields, data:string, p:number):number {\r\n        let vals:any[] = [], len = data.length;\r\n        let {name, fields} = arr;\r\n        while (p<len) {\r\n            let ch = data.charCodeAt(p);\r\n            if (ch === 10) {\r\n                ++p;\r\n                break;\r\n            }\r\n            let val = {} as any; //new creater();\r\n            vals.push(val);\r\n            p = this.unpackRow(val, fields, data, p);\r\n        }\r\n        ret[name] = vals;\r\n        return p;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport _ from 'lodash';\r\nimport { Entity } from './entity';\r\nimport { Entities, Field, ArrFields } from './entities';\r\nimport { isNumber } from 'util';\r\nimport { CUq, CTuidMain, CTuidEdit, CTuidInfo, CTuidSelect } from '../controllers';\r\n\r\nexport class BoxId {\r\n    id: number;\r\n    obj?: any;\r\n    content: (templet?:(values?:any, x?:any)=>JSX.Element, x?:any)=>JSX.Element;\r\n    valueFromFieldName: (fieldName:string)=>BoxId|any;\r\n    _$com?: any;\r\n    _$tuid?: Tuid;\r\n    getObj: ()=>any;\r\n}\r\n\r\nconst maxCacheSize = 1000;\r\nexport abstract class Tuid extends Entity {\r\n    private BoxId: ()=>void;\r\n    get typeName(): string { return 'tuid';}\r\n    private queue: number[] = [];               // 每次使用，都排到队头\r\n    private waitingIds: number[] = [];          // 等待loading的\r\n    private cache = observable.map({}, {deep: false});    // 已经缓冲的\r\n    idName: string;\r\n    owner: TuidMain;                    // 用这个值来区分是不是TuidArr\r\n    unique: string[];\r\n    schemaFrom: {owner:string; uq:string};\r\n\r\n    constructor(entities:Entities, name:string, typeId:number) {\r\n        super(entities, name, typeId);\r\n        this.buildIdBoxer();\r\n    }\r\n\r\n    abstract get Main():Tuid;\r\n\r\n    private buildIdBoxer() {\r\n        this.BoxId = function():void {};\r\n        let prototype = this.BoxId.prototype;\r\n        Object.defineProperty(prototype, '_$tuid', {\r\n            value: this.from(),\r\n            writable: false,\r\n            enumerable: false,\r\n        });\r\n        Object.defineProperty(prototype, 'obj', {\r\n            enumerable: false,\r\n            get: function() {\r\n                if (this.id === undefined || this.id<=0) return undefined;\r\n                return this._$tuid.valueFromId(this.id);\r\n            }\r\n        });\r\n        prototype.valueFromFieldName = function(fieldName:string):BoxId|any {\r\n            let t:Tuid = this._$tuid;\r\n            return t.valueFromFieldName(fieldName, this.obj);\r\n        };\r\n        prototype.getObj = function():any {\r\n            if (this._$tuid !== undefined) {\r\n                return this._$tuid.getCacheValue(this.id);\r\n            }\r\n        };\r\n        prototype.toJSON = function() {return this.id};\r\n    }\r\n    boxId(id:number):BoxId {\r\n        if (typeof id === 'object') return id as any;\r\n        this.useId(id);\r\n        let ret:BoxId = new this.BoxId();\r\n        ret.id = id;\r\n        return ret;\r\n    }\r\n    getTuidContent() {\r\n        return this.entities.cUq.getTuidContent(this);\r\n    }\r\n    getIdFromObj(item:any):number {\r\n        return item[this.idName];\r\n    }\r\n\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        let {id, unique} = schema;\r\n        this.idName = id;\r\n        this.unique = unique;\r\n        this.schemaFrom = this.schema.from;\r\n    }\r\n    public buildFieldsTuid() {\r\n        super.buildFieldsTuid();\r\n        let {mainFields} = this.schema;\r\n        if (mainFields !== undefined) {\r\n            for (let mf of mainFields) {\r\n                let f = this.fields.find(v => v.name === mf.name);\r\n                if (f === undefined) continue;\r\n                mf._tuid = f._tuid;\r\n            }\r\n        }\r\n    }\r\n    private moveToHead(id:number) {\r\n        let index = this.queue.findIndex(v => v === id);\r\n        this.queue.splice(index, 1);\r\n        this.queue.push(id);\r\n    }\r\n\r\n    valueFromId(id:number|BoxId):any {\r\n        let _id:number;\r\n        let tId = typeof id;\r\n        switch (typeof id) {\r\n            case 'object': _id = (id as BoxId).id; break;\r\n            case 'number': _id = id as number; break;\r\n            default: return;\r\n        }\r\n        return this.getCacheValue(_id);\r\n    }\r\n    getCacheValue(id:number) {\r\n        let v = this.cache.get(id);\r\n        if (this.owner !== undefined && typeof v === 'object') {\r\n            v.$owner = this.owner.boxId(v.owner); // this.owner.valueFromId(v.owner);\r\n        }\r\n        return v;\r\n    }\r\n    valueFromFieldName(fieldName:string, obj:any):BoxId|any {\r\n        if (obj === undefined) return;\r\n        if (this.fields === undefined) return;\r\n        let f = this.fields.find(v => v.name === fieldName);\r\n        if (f === undefined) return;\r\n        let v = obj[fieldName];\r\n        let {_tuid} = f;\r\n        if (_tuid === undefined) return v;\r\n        return _tuid.valueFromId(v);\r\n    }\r\n    resetCache(id:number) {\r\n        this.cache.delete(id);\r\n        let index = this.queue.findIndex(v => v === id);\r\n        this.queue.splice(index, 1);\r\n        this.useId(id);\r\n    }\r\n    useId(id:number, defer?:boolean) {\r\n        if (id === undefined || id === 0) return;\r\n        if (isNumber(id) === false) return;        \r\n        if (this.cache.has(id) === true) {\r\n            this.moveToHead(id);\r\n            return;\r\n        }\r\n        this.entities.cacheTuids(defer===true?70:20);\r\n        //let idVal = this.createID(id);\r\n        this.cache.set(id, id);\r\n        if (this.waitingIds.findIndex(v => v === id) >= 0) {\r\n            this.moveToHead(id);\r\n            return;\r\n        }\r\n\r\n        if (this.queue.length >= maxCacheSize) {\r\n            // 缓冲已满，先去掉最不常用的\r\n            let r = this.queue.shift();\r\n            if (r === id) {\r\n                // 如果移除的，正好是现在用的，则插入\r\n                this.queue.push(r);\r\n                return;\r\n            }\r\n\r\n            //let rKey = String(r);\r\n            if (this.cache.has(r) === true) {\r\n                // 如果移除r已经缓存\r\n                this.cache.delete(r);\r\n            }\r\n            else {\r\n                // 如果移除r还没有缓存\r\n                let index = this.waitingIds.findIndex(v => v === r);\r\n                this.waitingIds.splice(index, 1);\r\n            }\r\n        }\r\n        this.waitingIds.push(id);\r\n        this.queue.push(id);\r\n        return;\r\n    }\r\n    async proxied(name:string, id:number):Promise<any> {\r\n        let proxyTuid = this.entities.getTuid(name, undefined);\r\n        proxyTuid.useId(id);\r\n        let proxied = await this.tvApi.proxied(this.name, name, id);\r\n        this.cacheValue(proxied);\r\n        return proxied;\r\n    }\r\n    cacheValue(val:any):boolean {\r\n        if (val === undefined) return false;\r\n        let id = this.getIdFromObj(val);\r\n        if (id === undefined) return false;\r\n        let index = this.waitingIds.findIndex(v => v === id);\r\n        if (index>=0) this.waitingIds.splice(index, 1);\r\n        //let cacheVal = this.createID(id, val);\r\n        this.cache.set(id, val);\r\n        // 下面的代码应该是cache proxy id, 需要的时候再写吧\r\n        /*\r\n        let {tuids, fields} = this.schema;\r\n        if (tuids !== undefined && fields !== undefined) {\r\n            for (let f of fields) {\r\n                let {name, tuid} = f;\r\n                if (tuid === undefined) continue;\r\n                let t = this.entities.tuid(tuid);\r\n                if (t === undefined) continue;\r\n                t.useId(val[name]);\r\n            }\r\n        }*/\r\n        return true;\r\n    }\r\n    protected afterCacheId(tuidValue:any) {\r\n        if (this.fields === undefined) return;\r\n        for (let f of this.fields) {\r\n            let {_tuid} = f;\r\n            if (_tuid === undefined) continue;\r\n            _tuid.useId(tuidValue[f.name]);\r\n        }\r\n    }\r\n    from(): TuidMain {return;}\r\n    private unpackTuidIds(values:any[]|string):any[] {\r\n        if (this.schemaFrom === undefined) {\r\n            let {mainFields} = this.schema;\r\n            if (mainFields === undefined) return values as any[];\r\n            let ret:any[] = []\r\n            let len = (values as string).length;\r\n            let p = 0;\r\n            while (p<len) {\r\n                let ch = (values as string).charCodeAt(p);\r\n                if (ch === 10) {\r\n                    ++p;\r\n                    break;\r\n                }\r\n                let row = {};\r\n                p = this.unpackRow(row, mainFields, values as string, p);\r\n                ret.push(row);\r\n            }\r\n            return ret;\r\n        }\r\n        else {\r\n            let tuidMain = this.from();\r\n            let ret = tuidMain.unpackTuidIds(values);\r\n            return ret;\r\n        }\r\n    }\r\n    async cacheIds():Promise<void> {\r\n        if (this.waitingIds.length === 0) return;\r\n        let name:string, arr:string;\r\n        if (this.owner === undefined) {\r\n            name = this.name;\r\n        }\r\n        else {\r\n            name = this.owner.name;\r\n            arr = this.name;\r\n        }\r\n        let api = this.getApiFrom();\r\n        let tuids = await api.tuidIds(name, arr, this.waitingIds);\r\n        tuids = this.unpackTuidIds(tuids);\r\n        for (let tuidValue of tuids) {\r\n            if (this.cacheValue(tuidValue) === false) continue;\r\n            this.cacheTuidFieldValues(tuidValue);\r\n            this.afterCacheId(tuidValue);\r\n        }\r\n        await this.cacheDivIds();\r\n    }\r\n    protected async cacheDivIds():Promise<void> {\r\n    }\r\n    async load(id:number):Promise<any> {\r\n        if (id === undefined || id === 0) return;\r\n        let api = this.getApiFrom();\r\n        let values = await api.tuidGet(this.name, id);\r\n        if (values === undefined) return;\r\n        values._$tuid = this;\r\n        this.cacheValue(values);\r\n        this.cacheTuidFieldValues(values);\r\n        return values;\r\n    }\r\n    protected getDiv(divName:string):TuidDiv {return;}\r\n    private cacheTuidFieldValues(values:any) {\r\n        let {fields, arrs} = this.schema;\r\n        this.cacheFieldsInValue(values, fields);\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs as ArrFields[]) {\r\n                let {name, fields} = arr;\r\n                let arrValues = values[name];\r\n                if (arrValues === undefined) continue;\r\n                let tuidDiv = this.getDiv(name);\r\n                for (let row of arrValues) {\r\n                    row._$tuid = tuidDiv;\r\n                    row.$owner = this.boxId(row.owner);\r\n                    tuidDiv.cacheValue(row);\r\n                    this.cacheFieldsInValue(row, fields);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    private cacheFieldsInValue(values:any, fields:Field[]) {\r\n        for (let f of fields as Field[]) {\r\n            let {name, _tuid} = f;\r\n            if (_tuid === undefined) continue;\r\n            let id = values[name];\r\n            //_tuid.useId(id);\r\n            values[name] = _tuid.boxId(id);\r\n        }\r\n    }\r\n    async save(id:number, props:any) {\r\n        let params = _.clone(props);\r\n        params[\"$id\"] = id;\r\n        let ret = await this.tvApi.tuidSave(this.name, params);\r\n        /*\r\n        let {id:retId, inId} = ret;\r\n        if (retId === undefined) {\r\n            params.id = id;\r\n            this.cacheValue(params);\r\n        }\r\n        else if (retId > 0) {\r\n            params.id = retId;\r\n            this.cacheValue(params);\r\n        }\r\n        */\r\n        return ret;\r\n    }\r\n    async search(key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        let ret:any[] = await this.searchArr(undefined, key, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    async searchArr(owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        let {fields} = this.schema;\r\n        let name:string, arr:string;\r\n        if (this.owner !== undefined) {\r\n            name = this.owner.name;\r\n            arr = this.name;\r\n        }\r\n        else {\r\n            name = this.name;\r\n            arr = undefined;\r\n        }\r\n        let api = this.getApiFrom();\r\n        let ret = await api.tuidSearch(name, arr, owner, key, pageStart, pageSize);\r\n        for (let row of ret) {\r\n            this.cacheFieldsInValue(row, fields);\r\n            if (this.owner !== undefined) row.$owner = this.owner.boxId(row.owner);\r\n        }\r\n        return ret;\r\n    }\r\n    async loadArr(arr:string, owner:number, id:number):Promise<any> {\r\n        if (id === undefined || id === 0) return;\r\n        let api = this.getApiFrom();\r\n        return await api.tuidArrGet(this.name, arr, owner, id);\r\n    }\r\n    /*\r\n    async loadArrAll(owner:number):Promise<any[]> {\r\n        return this.all = await this.tvApi.tuidGetAll(this.name);\r\n    }*/\r\n    async saveArr(arr:string, owner:number, id:number, props:any) {\r\n        let params = _.clone(props);\r\n        params[\"$id\"] = id;\r\n        return await this.tvApi.tuidArrSave(this.name, arr, owner, params);\r\n    }\r\n    async posArr(arr:string, owner:number, id:number, order:number) {\r\n        return await this.tvApi.tuidArrPos(this.name, arr, owner, id, order);\r\n    }\r\n\r\n    // cache放到Tuid里面之后，这个函数不再需要公开调用了\r\n    //private async ids(idArr:number[]) {\r\n    //    return await this.tvApi.tuidIds(this.name, idArr);\r\n    //}\r\n    async showInfo(id:number) {\r\n        await this.entities.cUq.showTuid(this, id);\r\n    }\r\n}\r\n\r\nexport class TuidMain extends Tuid {\r\n    get Main() {return this}\r\n    get uqApi() {return this.entities.uqApi};\r\n\r\n    divs: {[name:string]: TuidDiv};\r\n    //proxies: {[name:string]: TuidMain};\r\n\r\n    public setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        let {arrs} = schema;\r\n        if (arrs !== undefined) {\r\n            this.divs = {};\r\n            for (let arr of arrs) {\r\n                let {name} = arr;\r\n                let tuidDiv = new TuidDiv(this.entities, name, this.typeId);\r\n                tuidDiv.owner = this;\r\n                this.divs[name] = tuidDiv;\r\n                tuidDiv.setSchema(arr);\r\n            }\r\n        }\r\n    }\r\n    protected getDiv(divName:string):TuidDiv {return this.divs[divName];}\r\n    /* 努力回避async里面的super调用，edge不兼容\r\n    async cacheIds():Promise<void> {\r\n        await super.cacheIds();\r\n        if (this.divs === undefined) return;\r\n        for (let i in this.divs) {\r\n            await this.divs[i].cacheIds();\r\n        }\r\n    }\r\n    */\r\n    protected async cacheDivIds():Promise<void> {\r\n        if (this.divs === undefined) return;\r\n        for (let i in this.divs) {\r\n            await this.divs[i].cacheIds();\r\n        }\r\n    }\r\n\r\n    cUqFrom(): CUq {\r\n        if (this.schemaFrom === undefined) return this.entities.cUq;\r\n        let {owner, uq} = this.schemaFrom;\r\n        let cUq = this.entities.cUq;\r\n        let cApp = cUq.cApp;\r\n        if (cApp === undefined) return cUq;\r\n        let cUqFrm = cApp.getImportUq(owner, uq);\r\n        if (cUqFrm === undefined) {\r\n            console.error(`${owner}/${uq} 不存在`);\r\n            debugger;\r\n            return cUq;\r\n        }\r\n        /*\r\n        let retErrors = await cUqFrm.loadSchema();\r\n        if (retErrors !== undefined) {\r\n            console.error('cUq.loadSchema: ' + retErrors);\r\n            debugger;\r\n            return cUq;\r\n        }*/\r\n        return cUqFrm;\r\n    }\r\n\r\n    getApiFrom() {\r\n        let from = this.from();\r\n        if (from !== undefined) {\r\n            return from.entities.uqApi;\r\n        }\r\n        return this.entities.uqApi;\r\n    }\r\n\r\n    from(): TuidMain {\r\n        if (this.schemaFrom === undefined) return this;\r\n        let cUq = this.cUqFrom();\r\n        return cUq.tuid(this.name);\r\n    }\r\n\r\n    cFrom(): CTuidMain {\r\n        let cUq = this.cUqFrom();\r\n        return cUq.cTuidMainFromName(this.name);\r\n    }\r\n\r\n    cEditFrom(): CTuidEdit {\r\n        let cUq = this.cUqFrom();\r\n        return cUq.cTuidEditFromName(this.name);\r\n    }\r\n\r\n    cInfoFrom(): CTuidInfo {\r\n        let cUq = this.cUqFrom();\r\n        return cUq.cTuidInfoFromName(this.name);\r\n    }\r\n\r\n    cSelectFrom(): CTuidSelect {\r\n        let cUq = this.cUqFrom();\r\n        if (cUq === undefined) return;\r\n        return cUq.cTuidSelectFromName(this.name);\r\n    }\r\n    /*\r\n    protected afterCacheId(tuidValue:any) {\r\n        super.afterCacheId(tuidValue);\r\n        if (this.proxies === undefined) return;\r\n        let {type, $proxy} = tuidValue;\r\n        let pTuid = this.proxies[type];\r\n        pTuid.useId($proxy);\r\n    }*/\r\n}\r\n\r\nexport class TuidDiv extends Tuid {\r\n    get Main() {return this.owner}\r\n\r\n    getApiFrom() {\r\n        return this.owner.getApiFrom();\r\n    }\r\n}\r\n","import {Entity} from './entity';\r\n\r\nexport class Action extends Entity {\r\n    get typeName(): string { return 'action';}\r\n    async submit(data:object) {\r\n        await this.loadSchema();\r\n        let text = this.pack(data);\r\n        return await this.tvApi.action(this.name, {data:text});\r\n    }\r\n}\r\n\r\n","import {observable, IObservableArray} from 'mobx';\r\nimport {Entity} from './entity';\r\nimport { PageItems } from 'tonva-tools';\r\n\r\nexport interface SheetState {\r\n    name: string;\r\n    actions: SheetAction[];\r\n}\r\n\r\nexport interface SheetAction {\r\n    name: string;\r\n}\r\n\r\nexport interface StateCount {\r\n    state: string;\r\n    count: number;\r\n}\r\n\r\nexport class Sheet extends Entity {\r\n    get typeName(): string { return 'sheet';}\r\n    states: SheetState[];\r\n\r\n    /*\r\n    setStates(states: SheetState[]) {\r\n        for (let state of states) {\r\n            this.setStateAccess(this.states.find(s=>s.name==state.name), state);\r\n        }\r\n    }*/\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        this.states = schema.states;\r\n    }\r\n    build(obj:any) {\r\n        this.states = [];\r\n        for (let op of obj.ops) {\r\n            this.states.push({name: op, actions:undefined});\r\n        }\r\n        /*\r\n        for (let p in obj) {\r\n            switch(p) {\r\n                case '#':\r\n                case '$': continue;\r\n                default: this.states.push(this.createSheetState(p, obj[p])); break;\r\n            }\r\n        }*/\r\n    }\r\n    private createSheetState(name:string, obj:object):SheetState {\r\n        let ret:SheetState = {name:name, actions:[]};\r\n        let actions = ret.actions;\r\n        for (let p in obj) {\r\n            let action:SheetAction = {name: p};\r\n            actions.push(action);\r\n        }\r\n        return ret;\r\n    }\r\n    /*\r\n    private setStateAccess(s:SheetState, s1:SheetState) {\r\n        if (s === undefined) return;\r\n        for (let action of s1.actions) {\r\n            let acn = action.name;\r\n            let ac = s.actions.find(a=>a.name === acn);\r\n            if (ac === undefined) continue;\r\n            s.actions.push(action);\r\n        }\r\n    }*/\r\n    async save(discription:string, data:any):Promise<any> {\r\n        await this.loadSchema();\r\n        let {appId} = this.entities;\r\n        let text = this.pack(data);\r\n\r\n        let ret = await this.tvApi.sheetSave(this.name, {app: appId, discription: discription, data:text});\r\n        return ret;\r\n        /*\r\n        let {id, state} = ret;\r\n        if (id > 0) this.changeStateCount(state, 1);\r\n        return ret;\r\n        */\r\n    }\r\n    async action(id:number, flow:number, state:string, action:string) {\r\n        await this.loadSchema();\r\n        return await this.tvApi.sheetAction(this.name, {id:id, flow:flow, state:state, action:action});\r\n    }\r\n    private async unpack(data:any):Promise<any> {\r\n        //if (this.schema === undefined) await this.loadSchema();\r\n        let ret = data[0];\r\n        let brief = ret[0];\r\n        let sheetData = this.unpackSheet(brief.data);\r\n        let flows = data[1];\r\n        return {\r\n            brief: brief,\r\n            data: sheetData,\r\n            flows: flows,\r\n        }\r\n    }\r\n    async getSheet(id:number):Promise<any> {\r\n        await this.loadSchema();\r\n        let ret = await this.tvApi.getSheet(this.name, id);\r\n        if (ret[0].length === 0) return await this.getArchive(id);\r\n        return await this.unpack(ret);\r\n    }\r\n    async getArchive(id:number):Promise<any> {\r\n        await this.loadSchema();\r\n        let ret = await this.tvApi.sheetArchive(this.name, id)\r\n        return await this.unpack(ret);\r\n    }\r\n\r\n    async getArchives(pageStart:number, pageSize:number) {\r\n        await this.loadSchema();\r\n        let ret = await this.tvApi.sheetArchives(this.name, {pageStart:pageStart, pageSize:pageSize});\r\n        return ret;\r\n    }\r\n\r\n    async getStateSheets(state:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        await this.loadSchema();\r\n        let ret = await this.tvApi.stateSheets(this.name, {state:state, pageStart:pageStart, pageSize:pageSize});\r\n        return ret;\r\n    }\r\n    createPageStateItems<T>(): PageStateItems<T> {return new PageStateItems<T>(this);}\r\n\r\n    async stateSheetCount():Promise<StateCount[]> {\r\n        await this.loadSchema();\r\n        let ret:StateCount[] = await this.tvApi.stateSheetCount(this.name);\r\n        return this.states.map(s => {\r\n            let n = s.name, count = 0;\r\n            let r = ret.find(v => v.state === n);\r\n            if (r !== undefined) count = r.count;\r\n            return {state: n, count: count} \r\n        });\r\n    }\r\n\r\n    async mySheets(state:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        await this.loadSchema();\r\n        let ret = await this.tvApi.mySheets(this.name, {state:state, pageStart:pageStart, pageSize:pageSize});\r\n        return ret;\r\n    }\r\n}\r\n\r\nexport class PageStateItems<T> extends PageItems<T> {\r\n    private sheet: Sheet;\r\n    constructor(sheet: Sheet) {\r\n        super(true);\r\n        this.sheet = sheet;\r\n        this.pageSize = 10;\r\n    }\r\n    protected async load(param:any, pageStart:any, pageSize:number):Promise<any[]> {\r\n        let ret = await this.sheet.getStateSheets(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:any) {\r\n        this.pageStart = item === undefined? 0 : item.id;\r\n    }\r\n}\r\n","import {observable, IObservableArray} from 'mobx';\r\nimport {Field, ArrFields} from './entities';\r\nimport {Entity} from './entity';\r\n\r\nexport type QueryPageApi = (name:string, pageStart:any, pageSize:number, params:any) => Promise<string>;\r\nexport class Query extends Entity {\r\n    get typeName(): string { return 'query';}\r\n    private pageStart: any;\r\n    private pageSize:number;\r\n    private params:any;\r\n    private more: boolean;\r\n    private startField: Field;\r\n    @observable list:IObservableArray; // = observable.array([], {deep: false});\r\n    returns: ArrFields[];\r\n    isPaged: boolean;\r\n\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        let {returns} = schema;\r\n        this.returns = returns;\r\n        this.isPaged = (returns as any[]).find(v => v.name === '$page') !== undefined;\r\n    }\r\n\r\n    resetPage(size:number, params:any) {\r\n        this.pageStart = undefined;\r\n        this.pageSize = size;\r\n        this.params = params;\r\n        this.more = false;\r\n        this.list = undefined;\r\n    }\r\n    get hasMore() {return this.more;}\r\n    async loadPage():Promise<void> {\r\n        if (this.pageSize === undefined) {\r\n            throw 'call resetPage(size:number, params:any) first';\r\n        }\r\n        let pageStart:any;\r\n        if (this.pageStart !== undefined) {\r\n            switch (this.startField.type) {\r\n                default: pageStart = this.pageStart; break;\r\n                case 'date':\r\n                case 'time':\r\n                case 'datetime': pageStart = (this.pageStart as Date).getTime(); break;\r\n            }\r\n        }\r\n        let page = await this.page(this.params, pageStart, this.pageSize+1);\r\n        /*\r\n        await this.loadSchema();\r\n        let res = await this.tvApi.page(this.name, pageStart, this.pageSize+1, this.params);\r\n        let data = await this.unpackReturns(res);\r\n        let page = data['$page'] as any[];\r\n        */\r\n        this.list = observable.array([], {deep: false});\r\n        if (page !== undefined) {\r\n            if (page.length > this.pageSize) {\r\n                this.more = true;\r\n                page.pop();\r\n                let ret = this.returns.find(r => r.name === '$page');\r\n                this.startField = ret.fields[0];\r\n                this.pageStart = page[page.length-1][this.startField.name];\r\n            }\r\n            else {\r\n                this.more = false;\r\n            }\r\n            this.list.push(...page);\r\n        }\r\n        //this.loaded = true;\r\n    }\r\n\r\n    async page(params:any, pageStart:any, pageSize:number):Promise<any[]> {\r\n        await this.loadSchema();\r\n        let res = await this.tvApi.page(this.name, pageStart, pageSize+1, this.buildParams(params));\r\n        let data = await this.unpackReturns(res);\r\n        return data.$page;// as any[];\r\n    }\r\n    async query(params:any):Promise<any> {\r\n        await this.loadSchema();\r\n        let res = await this.tvApi.query(this.name, this.buildParams(params));\r\n        let data = await this.unpackReturns(res);\r\n        return data;\r\n    }\r\n    async table(params:any): Promise<any[]> {\r\n        let ret = await this.query(params);\r\n        for (let i in ret) {\r\n            return ret[i];\r\n        }\r\n    }\r\n    async obj(params:any):Promise<any> {\r\n        let ret = await this.table(params);\r\n        if (ret.length > 0) return ret[0];\r\n    }\r\n    async scalar(params:any):Promise<any> {\r\n        let ret = await this.obj(params);\r\n        for (let i in ret) return ret[i];\r\n    }\r\n}\r\n","import {Query} from './query';\r\n\r\nexport class Book extends Query {\r\n    get typeName(): string { return 'book';}\r\n    protected queryApiName = 'book';\r\n}\r\n","import {Query} from './query';\r\n\r\nexport class History extends Query {\r\n    get typeName(): string { return 'history';}\r\n    protected queryApiName = 'history';\r\n}\r\n","import { Entity } from './entity';\r\nimport { Action } from './action';\r\nimport { Query } from './query';\r\nimport { Field } from './entities';\r\n\r\ninterface MapActions {\r\n    add: Action;\r\n    del: Action;\r\n}\r\ninterface MapQueries {\r\n    all: Query;\r\n    page: Query;\r\n    query: Query;\r\n}\r\n\r\nexport class Map extends Entity {\r\n    get typeName(): string { return 'map';}\r\n    keys: Field[];\r\n    actions: MapActions = {} as any;\r\n    queries: MapQueries = {} as any;\r\n    schemaFrom: {owner:string; uq:string};\r\n\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        this.schemaFrom = this.schema.from;\r\n        let {actions, queries, keys} = schema;\r\n        this.entities.buildFieldTuid(this.keys = keys);\r\n        //let t = this.schemaStringify();\r\n        for (let i in actions) {\r\n            let schema = actions[i];\r\n            let {name} = schema;\r\n            let action = this.entities.newAction(name, undefined);\r\n            action.setSchema(schema);\r\n            this.actions[i] = action;\r\n        }\r\n        for (let i in queries) {\r\n            let schema = queries[i];\r\n            let {name} = schema;\r\n            let query = this.entities.newQuery(name, undefined);\r\n            query.setSchema(schema);\r\n            this.queries[i] = query;\r\n        }\r\n    }\r\n\r\n    async add(param:any) {\r\n        await this.loadSchema();\r\n        return await this.actions.add.submit(param);\r\n    }\r\n\r\n    async del(param:any) {\r\n        await this.loadSchema();\r\n        return await this.actions.del.submit(param);\r\n    }\r\n\r\n    async all() {\r\n        await this.loadSchema();\r\n        return await this.queries.all.query({});\r\n    }\r\n\r\n    async page(param:any, pageStart:any, pageSize: number) {\r\n        await this.loadSchema();\r\n        return await this.queries.page.page(param, pageStart, pageSize);\r\n    }\r\n\r\n    async query(param:any) {\r\n        await this.loadSchema();\r\n        return await this.queries.query.query(param);\r\n    }\r\n    async table(params:any): Promise<any[]> {\r\n        let ret = await this.query(params);\r\n        for (let i in ret) {\r\n            return ret[i];\r\n        }\r\n    }\r\n    async obj(params:any):Promise<any> {\r\n        let ret = await this.table(params);\r\n        if (ret.length > 0) return ret[0];\r\n    }\r\n    async scalar(params:any):Promise<any> {\r\n        let ret = await this.obj(params);\r\n        for (let i in ret) return ret[i];\r\n    }\r\n}\r\n","import {Query} from './query';\r\n\r\nexport class Pending extends Query {\r\n    get typeName(): string { return 'pending';}\r\n    protected queryApiName = 'pending';\r\n}\r\n","import {TuidMain, Tuid} from './tuid';\r\nimport {Action} from './action';\r\nimport {Sheet, SheetState, SheetAction} from './sheet';\r\nimport {Query} from './query';\r\nimport {Book} from './book';\r\nimport {History} from './history';\r\nimport { UqApi } from 'tonva-tools';\r\nimport { Map } from './map';\r\nimport { Pending } from './pending';\r\nimport { CUq } from '../controllers';\r\n\r\nexport type FieldType = 'id' | 'tinyint' | 'smallint' | 'int' | 'bigint' | 'dec' | 'char' | 'text'\r\n    | 'datetime' | 'date' | 'time';\r\n\r\nexport function fieldDefaultValue(type:FieldType) {\r\n    switch (type) {\r\n        case 'tinyint':\r\n        case 'smallint':\r\n        case 'int':\r\n        case 'bigint':\r\n        case 'dec':\r\n            return 0;\r\n        case 'char':\r\n        case 'text':\r\n            return '';\r\n        case 'datetime':\r\n        case 'date':\r\n            return '2000-1-1';\r\n        case 'time':\r\n            return '0:00';\r\n    }\r\n}\r\n\r\nexport interface Field {\r\n    name: string;\r\n    type: FieldType;\r\n    tuid?: string;\r\n    arr?: string;\r\n    url?: string;\r\n    null?: boolean;\r\n    size?: number;\r\n    owner?: string;\r\n    _ownerField: Field;\r\n    _tuid: Tuid;\r\n}\r\nexport interface ArrFields {\r\n    name: string;\r\n    fields: Field[];\r\n    id?: string;\r\n    order?: string;\r\n}\r\nexport interface FieldMap {\r\n    [name:string]: Field;\r\n}\r\n\r\nexport class Entities {\r\n    private tuids: {[name:string]: TuidMain} = {};\r\n    private actions: {[name:string]: Action} = {};\r\n    private sheets: {[name:string]: Sheet} = {};\r\n    private queries: {[name:string]: Query} = {};\r\n    private books: {[name:string]: Book} = {};\r\n    private maps: {[name:string]: Map} = {};\r\n    private histories: {[name:string]: History} = {};\r\n    private pendings: {[name:string]: Pending} = {};\r\n    private cacheTimer: any;\r\n    cUq: CUq;\r\n    uqApi: UqApi;\r\n    appId: number;\r\n    uqId: number;\r\n\r\n    constructor(cUq: CUq, uqApi:UqApi, appId: number) {\r\n        this.cUq = cUq;\r\n        this.uqApi = uqApi;\r\n        this.appId = appId;\r\n    }\r\n\r\n    tuid(name:string):TuidMain {return this.tuids[name.toLowerCase()]}\r\n    action(name:string):Action {return this.actions[name.toLowerCase()]}\r\n    sheet(name:string):Sheet {return this.sheets[name.toLowerCase()]}\r\n    query(name:string):Query {return this.queries[name.toLowerCase()]}\r\n    book(name:string):Book {return this.books[name.toLowerCase()]}\r\n    map(name:string):Map {return this.maps[name.toLowerCase()]}\r\n    history(name:string):History {return this.histories[name.toLowerCase()]}\r\n    pending(name:string):Pending {return this.pendings[name.toLowerCase()]}\r\n\r\n    sheetFromTypeId(typeId:number):Sheet {\r\n        for (let i in this.sheets) {\r\n            let sheet = this.sheets[i];\r\n            if (sheet.typeId === typeId) return sheet;\r\n        }\r\n    }\r\n\r\n    tuidArr: TuidMain[] = [];\r\n    actionArr: Action[] = [];\r\n    sheetArr: Sheet[] = [];\r\n    queryArr: Query[] = [];\r\n    bookArr: Book[] = [];\r\n    mapArr: Map[] = [];\r\n    historyArr: History[] = [];\r\n    pendingArr: Pending[] = [];\r\n\r\n    async loadAccess() {\r\n        let accesses = await this.uqApi.loadAccess();\r\n        if (accesses === undefined) return;\r\n        this.buildEntities(accesses);\r\n    }\r\n\r\n    async loadEntities() {\r\n        let accesses = await this.uqApi.loadEntities();\r\n        this.buildEntities(accesses);\r\n    }\r\n\r\n    private buildEntities(entities:any) {\r\n        if (entities === undefined) {\r\n            debugger;\r\n        }\r\n        let {access, tuids} = entities;\r\n        this.buildTuids(tuids);\r\n        this.buildAccess(access);\r\n    }\r\n\r\n    getTuid(name:string, div?:string, tuidUrl?:string): Tuid {\r\n        let tuid = this.tuids[name];\r\n        if (tuid === undefined) return;\r\n        if (div === undefined) return tuid;\r\n        return tuid.divs[div];\r\n    }\r\n\r\n    cacheTuids(defer:number) {\r\n        this.clearCacheTimer();\r\n        this.cacheTimer = setTimeout(this.loadIds, defer);\r\n    }\r\n    private clearCacheTimer() {\r\n        if (this.cacheTimer === undefined) return;\r\n        clearTimeout(this.cacheTimer);\r\n        this.cacheTimer = undefined;\r\n    }\r\n    private loadIds = () => {\r\n        this.clearCacheTimer();\r\n        for (let i in this.tuids) {\r\n            let tuid = this.tuids[i];\r\n            tuid.cacheIds();\r\n        }\r\n    }\r\n\r\n    private buildTuids(tuids:any) {\r\n        //let proxyColl = {} as any;\r\n        for (let i in tuids) {\r\n            let schema = tuids[i];\r\n            let {name, typeId/*, proxies*/} = schema;\r\n            let tuid = this.newTuid(i, typeId);\r\n            tuid.sys = true;\r\n            //tuid.setSchema(schema);\r\n            //if (proxies !== undefined) proxyColl[i] = proxies;\r\n        }\r\n        for (let i in tuids) {\r\n            let schema = tuids[i];\r\n            let {name} = schema;\r\n            let tuid = this.getTuid(i);\r\n            //tuid.sys = true;\r\n            tuid.setSchema(schema);\r\n        }\r\n        /*\r\n        for (let i in proxyColl) {\r\n            let proxies:string[] = proxyColl[i];\r\n            let tuid = this.tuids[i];\r\n            tuid.proxies = {};\r\n            for (let p of proxies) {\r\n                tuid.proxies[p] = this.tuids[p];\r\n            }\r\n        }*/\r\n        for (let i in this.tuids) {\r\n            let tuid = this.tuids[i];\r\n            tuid.buildFieldsTuid();\r\n        }\r\n    }\r\n\r\n    private buildAccess(access:any) {\r\n        for (let a in access) {\r\n            let v = access[a];\r\n            switch (typeof v) {\r\n                case 'string': this.fromType(a, v); break;\r\n                case 'object': this.fromObj(a, v); break;\r\n            }\r\n        }\r\n        /*\r\n        for (let tuid of this.tuidArr) {\r\n            tuid.setProxies(this);\r\n        }*/\r\n    }\r\n\r\n    newAction(name:string, id:number):Action {\r\n        let action = this.actions[name];\r\n        if (action !== undefined) return action;\r\n        action = this.actions[name] = new Action(this, name, id)\r\n        this.actionArr.push(action);\r\n        return action;\r\n    }\r\n    newTuid(name:string, id:number):TuidMain {\r\n        let tuid = this.tuids[name];\r\n        if (tuid !== undefined) return tuid;\r\n        tuid = this.tuids[name] = new TuidMain(this, name, id);\r\n        this.tuidArr.push(tuid);\r\n        return tuid;\r\n    }\r\n    newQuery(name:string, id:number):Query {\r\n        let query = this.queries[name];\r\n        if (query !== undefined) return query;\r\n        query = this.queries[name] = new Query(this, name, id)\r\n        this.queryArr.push(query);\r\n        return query;\r\n    }\r\n    newBook(name:string, id:number):Book {\r\n        let book = this.books[name];\r\n        if (book !== undefined) return book;\r\n        book = this.books[name] = new Book(this, name, id);\r\n        this.bookArr.push(book);\r\n        return book;\r\n    }\r\n    newMap(name:string, id:number):Map {\r\n        let map = this.maps[name];\r\n        if (map !== undefined) return map;\r\n        map = this.maps[name] = new Map(this, name, id)\r\n        this.mapArr.push(map);\r\n        return map;\r\n    }\r\n    newHistory(name:string, id:number):History {\r\n        let history = this.histories[name];\r\n        if (history !== undefined) return;\r\n        history = this.histories[name] = new History(this, name, id)\r\n        this.historyArr.push(history);\r\n        return history;\r\n    }\r\n    newPending(name:string, id:number):Pending {\r\n        let pending = this.pendings[name];\r\n        if (pending !== undefined) return;\r\n        pending = this.pendings[name] = new Pending(this, name, id)\r\n        this.pendingArr.push(pending);\r\n        return pending;\r\n    }\r\n    newSheet(name:string, id:number):Sheet {\r\n        let sheet = this.sheets[name];\r\n        if (sheet !== undefined) return sheet;\r\n        sheet = this.sheets[name] = new Sheet(this, name, id);\r\n        this.sheetArr.push(sheet);\r\n        return sheet;\r\n    }\r\n    private fromType(name:string, type:string) {\r\n        let parts = type.split('|');\r\n        type = parts[0];\r\n        let id = Number(parts[1]);\r\n        switch (type) {\r\n            case 'uq': this.uqId = id; break;\r\n            case 'tuid':\r\n                let tuid = this.newTuid(name, id);\r\n                tuid.sys = false;\r\n                break;\r\n            case 'action': this.newAction(name, id); break;\r\n            case 'query': this.newQuery(name, id); break;\r\n            case 'book': this.newBook(name, id); break;\r\n            case 'map': this.newMap(name, id); break;\r\n            case 'history': this.newHistory(name, id); break;\r\n            case 'sheet':this.newSheet(name, id); break;\r\n            case 'pending': this.newPending(name, id); break;\r\n        }\r\n    }\r\n    private fromObj(name:string, obj:any) {\r\n        switch (obj['$']) {\r\n            case 'sheet': this.buildSheet(name, obj); break;\r\n        }\r\n    }\r\n    private buildSheet(name:string, obj:any) {\r\n        let sheet = this.sheets[name];\r\n        if (sheet === undefined) sheet = this.newSheet(name, obj.id);\r\n        sheet.build(obj);\r\n        /*\r\n        let states = sheet.states;\r\n        for (let p in obj) {\r\n            switch(p) {\r\n                case '#':\r\n                case '$': continue;\r\n                default: states.push(this.createSheetState(p, obj[p])); break;\r\n            }\r\n        }*/\r\n    }\r\n    /*\r\n    private createSheetState(name:string, obj:object):SheetState {\r\n        let ret:SheetState = {name:name, actions:[]};\r\n        let actions = ret.actions;\r\n        for (let p in obj) {\r\n            let action:SheetAction = {name: p};\r\n            actions.push(action);\r\n        }\r\n        return ret;\r\n    }*/\r\n    buildFieldTuid(fields:Field[], mainFields?:Field[]) {\r\n        if (fields === undefined) return;\r\n        for (let f of fields) {\r\n            let {tuid, arr, url} = f;\r\n            if (tuid === undefined) continue;\r\n            f._tuid = this.getTuid(tuid, arr, url);\r\n        }\r\n        for (let f of fields) {\r\n            let {owner} = f;\r\n            if (owner === undefined) continue;\r\n            let ownerField = fields.find(v => v.name === owner);\r\n            if (ownerField === undefined) {\r\n                if (mainFields !== undefined) {\r\n                    ownerField = mainFields.find(v => v.name === owner);\r\n                }\r\n                if (ownerField === undefined) {\r\n                    throw `owner field ${owner} is undefined`;\r\n                }\r\n            }\r\n            f._ownerField = ownerField;\r\n            let {arr, url} = f;\r\n            f._tuid = this.getTuid(ownerField._tuid.name, arr, url);\r\n            if (f._tuid === undefined) throw 'owner field ${owner} is not tuid';\r\n        }\r\n    }\r\n    buildArrFieldsTuid(arrFields:ArrFields[], mainFields:Field[]) {\r\n        if (arrFields === undefined) return;\r\n        for (let af of arrFields) {\r\n            let {fields} = af;\r\n            if (fields === undefined) continue;\r\n            this.buildFieldTuid(fields, mainFields);\r\n        }\r\n    }\r\n}\r\n","export * from './entities';\r\nexport * from './entity';\r\nexport * from './action';\r\nexport * from './query';\r\nexport * from './sheet';\r\nexport * from './tuid';\r\nexport * from './book';\r\nexport * from './map';\r\nexport * from './history';\r\nexport * from './pending';\r\n","import * as React from 'react';\r\nimport {FormView, FormRow, FieldRow, GroupRow, LabelFormRow} from '../formView';\r\nimport {Control, ControlBase, createControl, CreateControl} from '../control';\r\n\r\nexport type CreateRow = (form:FormView, row: FormRow)=>RowContainer;\r\n\r\nexport abstract class RowContainer {\r\n    protected form:FormView;\r\n    protected row: FormRow;\r\n    protected control: ControlBase;\r\n    constructor(form:FormView, row: FormRow) {\r\n        this.form = form;\r\n        this.row = row;\r\n        if ((row as JSX.Element).type === undefined) {\r\n            let cc:CreateControl = (row as LabelFormRow).createControl;\r\n            if (cc === undefined) cc = form.createControl;\r\n            if (cc === undefined) cc = createControl;\r\n            this.control = cc(form, row);\r\n        }\r\n    }\r\n    abstract render(key:string):JSX.Element;\r\n    \r\n    isOk():boolean {\r\n        if (this.control === undefined) return true;\r\n        return this.control.isOk();\r\n    }\r\n\r\n    contains(fieldName:string):boolean {\r\n        let field = (this.row as FieldRow).field;\r\n        if (field !== undefined) return fieldName === field.name;\r\n        let group = (this.row as GroupRow).group;\r\n        if (group !== undefined) return group.find(g => g.field.name === fieldName)!==undefined;\r\n        return false;\r\n    }\r\n    get hasError():boolean {return this.control.hasError;}\r\n    get filled():boolean {return this.control.filled;}\r\n    clear() {\r\n        if (this.control !== undefined) this.control.clear();\r\n    }\r\n    clearErrors() {\r\n        if (this.control !== undefined) this.control.clearErrors();\r\n    }\r\n    readValues(values:any):any {\r\n        if (this.control !== undefined) this.control.readValues(values);\r\n    }\r\n    setError(fieldName:string, error:string) {\r\n        if (this.control !== undefined) this.control.setError(fieldName, error);\r\n    }\r\n    setInitValues(values:any) {\r\n        if (this.control !== undefined) this.control.setInitValues(values);\r\n    }\r\n}\r\n\r\nclass ElementRowContainer extends RowContainer {\r\n    render(key:string):JSX.Element {\r\n        return <div key={key} className=\"form-group\">{this.row as JSX.Element}</div>;\r\n    }\r\n    get hasError():boolean {return false;}\r\n    get filled():boolean {return false;}\r\n}\r\n\r\nclass BootStrapRowContainer extends RowContainer {\r\n    render(key:string):JSX.Element {\r\n        return <div key={key} className='form-group row'>\r\n            <label className='col-sm-2 col-form-label'>\r\n                {(this.row as LabelFormRow).label}\r\n            </label>\r\n            {this.control.render()}\r\n        </div>;\r\n\r\n        //has-success is-valid\r\n    }\r\n}\r\n\r\nexport function bootstrapCreateRow(form:FormView, row: FormRow):RowContainer {\r\n    return new BootStrapRowContainer(form, row);\r\n}\r\n\r\nexport function elementCreateRow(form:FormView, row: FormRow):RowContainer {\r\n    return new ElementRowContainer(form, row);\r\n}\r\n","//import {isDevelopment} from '../local';\r\nimport {HttpChannel} from './httpChannel';\r\n\r\nexport async function refetchApi(channel:HttpChannel, url, options, resolve, reject) {\r\n    await channel.fetch(url, options, resolve, reject);\r\n}\r\n\r\nexport abstract class ApiBase {\r\n    protected token: string;\r\n    protected path: string;\r\n    protected showWaiting: boolean;\r\n\r\n    constructor(path: string, showWaiting: boolean) {\r\n        this.path = path || '';\r\n        this.showWaiting = showWaiting;\r\n    }\r\n\r\n    protected abstract async getHttpChannel(): Promise<HttpChannel>;\r\n\r\n    public async call(url:string, method:string, body:any):Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.callFetch(url, method, body);\r\n    }\r\n\r\n    public async get(path:string, params:any=undefined): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.get(this.path + path, params);\r\n    }\r\n\r\n    public async post(path:string, params:any): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.post(this.path + path, params);\r\n    }\r\n\r\n    public async put(path:string, params:any): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.put(this.path + path, params);\r\n    }\r\n\r\n    public async delete(path:string, params:any): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.delete(this.path + path, params);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport {nav, mobileHeaderStyle} from './nav';\r\n\r\nexport interface TitleBarProps {\r\n    back?: 'back' | 'close' | 'none';\r\n    center: string | JSX.Element;\r\n    right?: JSX.Element;\r\n    logout?: boolean | (()=>Promise<void>);\r\n}\r\nexport interface TitleBarState {\r\n    hasBack: boolean;\r\n}\r\nexport class TitleBar extends React.Component<TitleBarProps, TitleBarState> {\r\n    constructor(props: TitleBarProps) {\r\n        super(props);\r\n        this.navChange = this.navChange.bind(this);\r\n        this.state = {\r\n            hasBack: false,\r\n        };\r\n    }\r\n    navChange() {\r\n        this.setState({\r\n            hasBack: nav.level > 1\r\n        })\r\n    }\r\n    componentWillMount() {\r\n        this.navChange();\r\n        //this.navChangeHandler = nav.events.add('change', this.navChange);\r\n    }\r\n    componentWillUnmount() {\r\n        //nav.events.remove('change', this.navChangeHandler);\r\n    }\r\n    async back() {\r\n        await nav.back(); // 这个才会显示confirm box，在dataForm里面，如果输入了数据的话\r\n    }\r\n    openWindow() {\r\n        window.open(document.location.href);\r\n    }\r\n    private logoutClick = () => {\r\n        nav.showLogout(this.logout);\r\n        /*\r\n        nav.push(<Page header=\"安全退出\" back=\"close\">\r\n            <div className=\"m-5 border border-info bg-white rounded p-3 text-center\">\r\n                <div>退出当前账号不会删除任何历史数据，下次登录依然可以使用本账号</div>\r\n                <div className=\"mt-3\">\r\n                    <button className=\"btn btn-danger\" onClick={()=>this.logout()}>退出</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n        */\r\n    }\r\n    private logout = async () => {\r\n        let {logout} = this.props;\r\n        if (typeof logout === 'function') {\r\n            await logout(); \r\n        }\r\n        await nav.logout(undefined);\r\n    }\r\n    render() {\r\n        let b = this.state.hasBack || self != top;\r\n        let {right, center, logout} = this.props;\r\n        let back, pop, debugLogout;\r\n        if (logout !== undefined && self === top) {\r\n            if (typeof logout === 'boolean' && logout === true\r\n                || typeof logout === 'function')\r\n            {\r\n                let {user} = nav;\r\n                if (user !== undefined) {\r\n                    let {nick, name} = user;\r\n                    debugLogout = <div className=\"d-flex align-items-center\">\r\n                        <small className=\"text-light\">{nick || name}</small>\r\n                        <a className=\"dropdown-toggle btn btn-secondary btn-sm ml-2\"\r\n                            role=\"button\"\r\n                            onClick={this.logoutClick}>\r\n                            <i className=\"fa fa-sign-out\" />\r\n                        </a>\r\n                    </div>;\r\n                }\r\n            }\r\n        }\r\n        if (b) {\r\n            switch (this.props.back) {\r\n                case 'none': back = undefined; break;\r\n                default:\r\n                case 'back': back = <nav onClick={this.back}><i className=\"fa fa-arrow-left\" /></nav>; break;\r\n                case 'close': back = <nav onClick={this.back}><i className=\"fa fa-close\" /></nav>; break;\r\n            }\r\n        }\r\n        if (self != top) {\r\n            console.log(document.location.href);\r\n            pop = <header onClick={this.openWindow} />;\r\n        }\r\n        let rightView;\r\n        if (right || debugLogout) rightView = <aside>{right} {debugLogout}</aside>;\r\n        return (\r\n        <header style={mobileHeaderStyle}>\r\n            {pop}\r\n            {back}\r\n            <div>{center}</div>\r\n            {rightView}\r\n        </header>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { jsonStringify } from '../../tools';\r\n\r\nexport const DefaultRow = (values) => <div className=\"px-3 py-2\">{jsonStringify(values)}</div>;\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { List, FA } from 'tonva-react-form';\r\nimport { Page, nav } from 'tonva-tools';\r\nimport { TuidMain, Query, Entity } from '../../entities';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { QueryUI, CQuery } from './cQuery';\r\nimport { DefaultRow } from './defaultRow';\r\n\r\nexport class VQueryMain extends VEntity<Query, QueryUI, CQuery> {\r\n    protected vForm: VForm;\r\n    private row: React.StatelessComponent;\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        let {row, queryRow} = this.ui;\r\n        this.row = queryRow || row || DefaultRow;\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSubmit = async () => {\r\n        let params = this.vForm.getValues();\r\n        if (this.entity.isPaged === true) {\r\n            await this.entity.resetPage(30, params);\r\n            await this.entity.loadPage();\r\n            this.replacePage(this.pageResult);\r\n        }\r\n        else {\r\n            let data = await this.entity.query(params);\r\n            this.replacePage(this.queryResult, data);\r\n        }\r\n    }\r\n\r\n    again = () => {\r\n        this.vForm.reset();\r\n        this.replacePage(this.view);\r\n    }\r\n\r\n    renderExtra() {\r\n        return;\r\n    }\r\n\r\n    renderRow = (item:any, index:number) => <this.row {...item} />;\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render('mx-3 my-2')}\r\n        {this.renderExtra()}\r\n    </Page>;\r\n\r\n    protected pageResult = () => {\r\n        let {name, list} = this.entity;\r\n        let rightClose = <button\r\n            className=\"btn btn-outline-success\"\r\n            onClick={this.again}>\r\n            <FA name=\"search\" /> 再查询\r\n        </button>;\r\n        return <Page header={this.label} right={rightClose}>\r\n            <List items={list} item={{render: this.renderRow}} />\r\n        </Page>;\r\n    }\r\n\r\n    protected queryResult = observer((result:any) => {\r\n        let rightClose = <button\r\n            className=\"btn btn-outline-success\"\r\n            onClick={this.again}>\r\n            <FA name=\"search\" /> 再查询\r\n        </button>;\r\n        return <Page header={this.label} right={rightClose}>\r\n            <pre>{JSON.stringify(result, undefined, '\\t')}</pre>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport { FA, SearchBox, List } from 'tonva-react-form';\r\nimport { Page, PageItems } from 'tonva-tools';\r\nimport { Query } from '../../entities';\r\nimport { VEntity } from '../CVEntity';\r\nimport { QueryUI, CQuerySelect } from './cQuery';\r\nimport { DefaultRow } from './defaultRow';\r\n\r\nexport class VQuerySelect extends VEntity<Query, QueryUI, CQuerySelect> {\r\n    private row: React.StatelessComponent;\r\n\r\n    PageItems:QueryPageItems;\r\n    ownerId: number;\r\n\r\n    async open(param?:any) {\r\n        let {row, selectRow} = this.ui;\r\n        this.row = selectRow || row || DefaultRow;\r\n        //this.entity = this.controller.entity;\r\n        this.PageItems = new QueryPageItems(this.entity);\r\n        await this.onSearch(param);\r\n        this.openPage(this.view);\r\n    }\r\n    onSearch = async (key:string) => {\r\n        await this.PageItems.first(key);\r\n    }\r\n\r\n    renderRow = (item:any, index:number) => <this.row {...item} />;\r\n\r\n    private callOnSelected(item:any) {\r\n       this.closePage();\r\n       this.returnCall(item);\r\n    }\r\n    clickRow = (item:any) => {\r\n        this.callOnSelected(item);\r\n    }\r\n\r\n    view = () => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\r\n        return <Page header={header}>\r\n            <List\r\n                items={this.PageItems.items}\r\n                item={{render: this.renderRow, onClick: this.clickRow}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    };\r\n}\r\n\r\nexport class QueryPageItems extends PageItems<any> {\r\n    private query: Query;\r\n    constructor(query: Query) {\r\n        super();\r\n        this.query = query;\r\n    }\r\n    protected async load():Promise<any[]> {\r\n        await  this.query.loadSchema();\r\n        let ret:any[];\r\n        if (this.query.isPaged === true)\r\n            ret = await this.query.page(this.param, this.pageStart, this.pageSize);\r\n        else {\r\n            let data = await this.query.query(this.param);\r\n            //let data = await this.query.unpackReturns(res);\r\n            ret = data[this.query.returns[0].name];\r\n        }\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:any) {\r\n        if (item === undefined) this.pageStart = 0;\r\n    }\r\n}\r\n","import { StatelessComponent } from \"react\";\r\nimport { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Query } from \"../../entities\";\r\nimport { VQueryMain } from \"./vQueryMain\";\r\nimport { VQuerySelect } from \"./vQuerySelect\";\r\n\r\nexport interface QueryUI extends EntityUI {\r\n    CQuery?: typeof CQuery;\r\n    CQuerySelect?: typeof CQuerySelect;\r\n    main?: typeof VQueryMain;\r\n    row?: StatelessComponent;\r\n    queryRow?: StatelessComponent;\r\n    selectRow?: StatelessComponent;\r\n}\r\n\r\nexport abstract class CQueryBase extends CEntity<Query, QueryUI> {\r\n}\r\n\r\nexport class CQuery extends CQueryBase {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VQueryMain);\r\n    }\r\n\r\n    protected get VQueryMain():typeof VQueryMain {return this.ui && this.ui.main || VQueryMain}\r\n}\r\n\r\nexport class CQuerySelect extends CQueryBase {\r\n    protected async internalStart(param?:any) {\r\n        await this.openVPage(this.VQuerySelect, param);\r\n    }\r\n\r\n    protected get VQuerySelect():typeof VQuerySelect {return VQuerySelect}\r\n}\r\n","export * from './cQuery';\r\nexport * from './vQueryMain';\r\nexport * from './vQuerySelect';","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\r\nimport { ResUploader } from '../resUploader';\r\nimport { Image } from '../image';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { ItemEdit } from './itemEdit';\r\n\r\nexport class ImageItemEdit extends ItemEdit {\r\n    protected uiItem: UiTextItem;\r\n    private resUploader: ResUploader;\r\n    @observable private resId: string;\r\n    @observable private overSize: boolean = false;\r\n\r\n    protected async internalStart():Promise<any> {\r\n        this.resId = this.value;        \r\n        return new Promise<any>((resolve, reject) => {\r\n            nav.push(React.createElement(this.page, {resolve:resolve, reject:reject}), ()=>reject());\r\n        });\r\n    }\r\n\r\n    private upload = async () => {\r\n        if (!this.resUploader) return;\r\n        let ret = await this.resUploader.upload();\r\n        if (ret === null) {\r\n            this.overSize = true;\r\n            setTimeout(() => this.overSize = false, 3000);\r\n            return;\r\n        }\r\n        this.resId = ret;\r\n        this.isChanged = (this.resId != this.value);\r\n    }\r\n\r\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\r\n        let {resolve} = props;\r\n        let right = <button\r\n            className=\"btn btn-sm btn-success\"\r\n            disabled={!this.isChanged}\r\n            onClick={()=>resolve(this.resId)}>保存</button>;\r\n        let overSize:any;\r\n        if (this.overSize === true) {\r\n            overSize = <div className=\"text-danger\">\r\n                <i className=\"fa fa-times-circle\" /> 图片文件大小超过2M，无法上传\r\n            </div>;\r\n        }\r\n        return <Page header={'更改' + this.label} right={right}>\r\n            <div className=\"my-3 px-3 py-3 bg-white\">\r\n                <div>\r\n                    <div>上传图片：</div>\r\n                    <div className=\"my-3\">\r\n                        <ResUploader ref={v=>this.resUploader=v} multiple={false} maxSize={2048} />\r\n                    </div>\r\n                    <div>\r\n                        <button className=\"btn btn-primary\" onClick={this.upload}>上传</button>\r\n                    </div>\r\n                </div>\r\n                {overSize}\r\n                <div className=\"small muted my-4\">支持JPG、GIF、PNG格式图片，不超过2M。</div>\r\n                <div className=\"d-flex\">\r\n                    <div className=\"w-12c h-12c mr-4\"\r\n                        style={{border: '1px dotted gray', padding: '8px'}}>\r\n                        <Image className=\"w-100 h-100\" src={this.resId} />\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"small\">图片预览</div>\r\n                        <Image className=\"w-4c h-4c mt-3\" src={this.resId} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\n\r\nexport function Loading() {\r\n    return <div className=\"d-flex h-100 align-items-center justify-content-center\">\r\n        <i className=\"fa fa-spinner fa-spin fa-2x fa-fw text-info\" />\r\n    </div>;\r\n}\r\n\r\n/*\r\nexport function Loading() {\r\n    return <div style={{height:'100%'}} className=\"d-flex flex-fill align-items-center justify-content-center\">\r\n    <div className=\"d-flex align-items-center justify-content-center slide text-info\" style={{width:'5em', height:'2em'}}>\r\n        加载中...\r\n    </div>\r\n    </div>\r\n}\r\n*/\r\n\r\n\r\n","import * as React from 'react';\r\nimport { nav } from './nav';\r\n\r\nexport interface ResUploaderProps {\r\n    className?: string;\r\n    multiple?: boolean;\r\n    maxSize?: number;\r\n    onFilesChange?: (evt: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nexport class ResUploader extends React.Component<ResUploaderProps> {\r\n    private fileInput: HTMLInputElement;\r\n\r\n    upload = async ():Promise<string> => {\r\n        let {maxSize} = this.props;\r\n        if (maxSize === undefined || maxSize <= 0) \r\n            maxSize = 100000000000;\r\n        else\r\n            maxSize = maxSize * 1024;\r\n        let resUrl = nav.resUrl + 'upload';\r\n        var files:FileList = this.fileInput.files;\r\n        var data = new FormData();\r\n        let len = files.length;\r\n        for (let i=0; i<len; i++) {\r\n            let file = files[i];\r\n            if (file.size > maxSize) return null;\r\n            data.append('files[]', file, file.name);\r\n        }\r\n  \r\n        try {\r\n            let abortController = new AbortController();\r\n            let res = await fetch(resUrl, {\r\n                method: \"POST\",\r\n                body: data,\r\n                signal: abortController.signal,\r\n            });\r\n            let json = await res.json();\r\n            return ':' + json.res.id;\r\n        }\r\n        catch (err) {\r\n            console.error('%s %s', resUrl, err);\r\n        }\r\n    }\r\n    render() {\r\n        let {className, multiple, onFilesChange} = this.props;\r\n        return <input \r\n            className={className}\r\n            ref={t=>this.fileInput=t} \r\n            onChange={onFilesChange}\r\n            type='file' name='file' multiple={multiple} />\r\n    }\r\n}\r\n","export * from './rule';\r\nexport * from './field';\r\nexport * from './face';\r\nexport * from './rowContainer';\r\nexport * from './formView';\r\nexport * from './TonvaForm';\r\nexport {ControlBase} from './control';\r\n","import * as React from 'react';\r\nimport {FormEvent} from 'react';\r\nimport {computed} from 'mobx';\r\nimport {uid} from '../uid';\r\nimport {Rule} from './rule';\r\nimport {Field} from './field';\r\nimport {Face} from './face';\r\nimport {CreateControl, ButtonsControl} from './control';\r\nimport {RowContainer, CreateRow, bootstrapCreateRow, elementCreateRow} from './rowContainer';\r\n\r\nexport interface FieldView {\r\n    field: Field;\r\n    face?: Face;\r\n}\r\n\r\nexport interface LabeledRow {\r\n    label?: string;\r\n    createRow?: CreateRow;\r\n    createControl?: CreateControl;\r\n    help?: JSX.Element;\r\n}\r\n\r\nexport interface FieldRow extends LabeledRow, FieldView {\r\n}\r\n\r\nexport interface GroupRow extends LabeledRow {\r\n    group: FieldView[];\r\n}\r\n\r\nexport type LabelFormRow = FieldRow|GroupRow|LabeledRow;\r\nexport type FormRow = LabelFormRow|JSX.Element;\r\n\r\nexport interface SubmitResult {\r\n    success: boolean;\r\n    message?: string\r\n    result?: any;\r\n}\r\n\r\nexport interface FormProps {\r\n    formRows: FormRow[];\r\n    //context?: any;              // form context，比如，可以是EntitiesUI\r\n    rules?: Rule | Rule[];\r\n    onSubmit: (values:any) => Promise<SubmitResult|undefined>;\r\n    submitButton?: string|JSX.Element;\r\n    otherButton?: string|JSX.Element;\r\n    onOther?: (values:any) => void;\r\n    createRow?: CreateRow;\r\n    createControl?: CreateControl;\r\n    readOnly?: boolean;\r\n}\r\n\r\nexport class FormView {\r\n    uid:string;\r\n    private rows: RowContainer[] = [];\r\n    private buttonsRow: RowContainer;\r\n    props: FormProps;\r\n    createControl?: CreateControl;\r\n    constructor(props:FormProps) {\r\n        this.uid = uid();\r\n        this.props = props;\r\n        this.buildRows(props);\r\n        this.createControl = props.createControl;\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    @computed get hasError():boolean {\r\n        let ret = this.rows.map((v, index) => index + ': ' + v.hasError + '\\n');\r\n        console.log(ret);\r\n        return this.rows.some(row => row.hasError);\r\n    }\r\n    @computed get nothing():boolean {\r\n        let ret = this.rows.every(row => !row.filled);\r\n        return ret;\r\n    }\r\n\r\n    readValues():any {\r\n        let values = {} as any;\r\n        for (let row of this.rows) {\r\n            row.readValues(values);\r\n        }\r\n        return values;\r\n    }\r\n\r\n    clear() {\r\n        for (let row of this.rows) {\r\n            row.clear();\r\n        }\r\n    }\r\n\r\n    clearErrors() {\r\n        for (let row of this.rows) {\r\n            row.clearErrors();\r\n        }\r\n    }\r\n\r\n    setError(fieldName:string, error:string) {\r\n        for (let row of this.rows) {\r\n            row.setError(fieldName, error);\r\n        }\r\n    }\r\n\r\n    setInitValues(initValues:any) {\r\n        if (initValues === undefined) return;\r\n        for (let row of this.rows) {\r\n            row.setInitValues(initValues);\r\n        }\r\n    }\r\n\r\n    private buildRows(props:FormProps) {\r\n        let {formRows, createRow} = props;\r\n        if (formRows !== undefined) {\r\n            for (let row of formRows) {\r\n                this.rows.push(this.buildRow(row, createRow));\r\n            }\r\n            if (this.props.readOnly !== true) {\r\n                this.buttonsRow = this.buildRow({createControl:this.createButtons.bind(this)}, undefined);\r\n            }\r\n        }\r\n        else {\r\n            this.rows.push(elementCreateRow(this, <div className=\"text-warning\">TonvaForm need formRows defined</div>));\r\n        }\r\n    }\r\n\r\n    private buildRow(formRow: FormRow, formRowCreator: CreateRow):RowContainer {\r\n        let createRow:CreateRow;\r\n        let type = (formRow as JSX.Element).type;\r\n        if (type !== undefined) {\r\n            createRow = elementCreateRow;\r\n        }\r\n        else {\r\n            createRow = (formRow as (FieldRow | GroupRow | LabeledRow)).createRow;\r\n            if (createRow === undefined) {\r\n                createRow = formRowCreator;\r\n                if (createRow === undefined) createRow = bootstrapCreateRow;\r\n            }\r\n        }\r\n        let row = createRow(this, formRow);\r\n        return row;\r\n    }\r\n\r\n    private createButtons(form:FormView, row: FormRow) {\r\n        return new ButtonsControl(form);\r\n    }\r\n\r\n    private isOk():boolean {\r\n        let isOk = true;\r\n        for (let row of this.rows) {\r\n            if (!row.isOk()) isOk = false;\r\n        }\r\n        return isOk;\r\n    }\r\n\r\n    render():JSX.Element {\r\n        return <form onSubmit={this.onSubmit}>\r\n            {this.rows.map((row,index) => row.render(this.uid + index))}\r\n            {this.buttons()}\r\n        </form>;\r\n    }\r\n\r\n    buttons():JSX.Element {\r\n        if (this.buttonsRow === undefined) return;\r\n        return this.buttonsRow.render(this.uid + this.rows.length);\r\n    }\r\n    \r\n    async onSubmit(event:FormEvent<HTMLFormElement>) {\r\n        event.preventDefault();\r\n        if (!this.isOk()) return;\r\n        let values = this.readValues();\r\n        await this.props.onSubmit(values);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { Page, loadAppUqs, nav, appInFrame, Controller, TypeVPage, VPage, resLang, getExHash, isDevelopment, NavSettings, App} from 'tonva-tools';\r\nimport { List, LMR, FA } from 'tonva-react-form';\r\nimport { CUq, UqUI } from './uq';\r\nimport { centerApi } from '../centerApi';\r\n\r\nexport interface RoleAppUI {\r\n    CApp?: typeof CApp;\r\n    CUq?: typeof CUq;\r\n    main?: TypeVPage<CApp>;\r\n    uqs: {[uq:string]: UqUI | (()=>Promise<UqUI>)};\r\n    res?: any;\r\n}\r\n\r\nexport interface AppUI extends RoleAppUI, NavSettings {\r\n    appName: string; // 格式: owner/appName\r\n    roles?: {[role:string]: RoleAppUI | (()=>Promise<RoleAppUI>)};\r\n}\r\n\r\nexport class CApp extends Controller {\r\n    private appOwner:string;\r\n    private appName:string;\r\n    private cImportUqs: {[uq:string]: CUq} = {};\r\n    protected ui:AppUI;\r\n    id: number;\r\n    appUnits:any[];\r\n\r\n    constructor(ui:AppUI) {\r\n        super(resLang(ui && ui.res));\r\n        nav.setSettings(ui);\r\n        let tonvaApp = ui.appName;\r\n        if (tonvaApp === undefined) {\r\n            throw 'appName like \"owner/app\" must be defined in UI';\r\n        }\r\n        let parts = tonvaApp.split('/');\r\n        if (parts.length !== 2) {\r\n            throw 'tonvaApp name must be / separated, owner/app';\r\n        }\r\n        this.appOwner = parts[0];\r\n        this.appName = parts[1];\r\n        if (ui.uqs === undefined) ui.uqs = {};\r\n        this.ui = ui;\r\n        this.caption = this.res.caption || 'Tonva';\r\n    }\r\n    \r\n    readonly caption: string; // = 'View Model 版的 Uq App';\r\n    cUqCollection: {[uq:string]: CUq} = {};\r\n\r\n    async startDebug() {\r\n        let appName = this.appOwner + '/' + this.appName;\r\n        let cApp = new CApp({appName: appName, uqs:{}} );\r\n        let keepNavBackButton = true;\r\n        await cApp.start(keepNavBackButton);    \r\n    }\r\n\r\n    protected async loadUqs(app:App): Promise<string[]> {\r\n        let retErrors:string[] = [];\r\n        let unit = appInFrame.unit;\r\n        //let app = await loadAppUqs(this.appOwner, this.appName);\r\n        let {id, uqs} = app;\r\n        this.id = id;\r\n\r\n        let promises: PromiseLike<string>[] = [];\r\n        let promiseChecks: PromiseLike<boolean>[] = [];\r\n        let roleAppUI = await this.buildRoleAppUI();\r\n        this.ui = roleAppUI;\r\n        for (let appUq of uqs) {\r\n            let {id:uqId, uqOwner, uqName, access} = appUq;\r\n            let uq = uqOwner + '/' + uqName;\r\n            let uqUI = roleAppUI && roleAppUI.uqs && roleAppUI.uqs[uq];\r\n            let cUq = this.newCUq(uq, uqId, access, uqUI || {});\r\n            this.cUqCollection[uq] = cUq;\r\n            promises.push(cUq.loadSchema());\r\n            promiseChecks.push(cUq.entities.uqApi.checkAccess());\r\n        }\r\n        let results = await Promise.all(promises);\r\n        Promise.all(promiseChecks).then((checks) => {\r\n            for (let c of checks) {\r\n                if (c === false) {\r\n                    //debugger;\r\n                    //nav.start();\r\n                    //return;\r\n                }\r\n            }\r\n        });\r\n        for (let result of results)\r\n        {\r\n            let retError = result; // await cUq.loadSchema();\r\n            if (retError !== undefined) {\r\n                retErrors.push(retError);\r\n                continue;\r\n            }\r\n        }\r\n        if (retErrors.length === 0) return;\r\n        return retErrors;\r\n    }\r\n\r\n    private async buildRoleAppUI():Promise<AppUI> {\r\n        if (!this.ui) return undefined;\r\n        let {hashParam} = nav;\r\n        if (!hashParam) return this.ui;\r\n        let {roles} = this.ui;\r\n        let roleAppUI = roles && roles[hashParam];\r\n        if (!roleAppUI) return this.ui;\r\n        let ret:AppUI = {} as any;\r\n        for (let i in this.ui) {\r\n            if (i === 'roles') continue;\r\n            ret[i] = this.ui[i];\r\n        }\r\n        if (typeof roleAppUI === 'function') roleAppUI = await roleAppUI();\r\n        _.merge(ret, roleAppUI);\r\n        return ret;\r\n    }\r\n\r\n    getImportUq(uqOwner:string, uqName:string):CUq {\r\n        let uq = uqOwner + '/' + uqName;\r\n        let cUq = this.cImportUqs[uq];\r\n        if (cUq !== undefined) return cUq;\r\n        let ui = this.ui && this.ui.uqs && this.ui.uqs[uq];\r\n        let uqId = -1; // unknown\r\n        this.cImportUqs[uq] = cUq = this.getCUq(uq);\r\n        //this.newCUq(uq, uqId, undefined, ui || {});\r\n        /*\r\n        let retError = await cUq.loadSchema();\r\n        if (retError !== undefined) {\r\n            console.error(retError);\r\n            debugger;\r\n            return;\r\n        }\r\n        */\r\n        return cUq;\r\n    }\r\n\r\n    protected newCUq(uq:string, uqId:number, access:string, ui:any) {\r\n        let cUq = new (this.ui.CUq || CUq)(this, uq, this.id, uqId, access, ui);        \r\n        Object.setPrototypeOf(cUq.x, this.x);\r\n        return cUq;\r\n    }\r\n\r\n    get cUqArr():CUq[] {\r\n        let ret:CUq[] = [];\r\n        for (let i in this.cUqCollection) {\r\n            ret.push(this.cUqCollection[i]);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    getCUq(uq:string):CUq {\r\n        return this.cUqCollection[uq];\r\n    }\r\n\r\n    protected get VAppMain():TypeVPage<CApp> {return (this.ui&&this.ui.main) || VAppMain}\r\n    protected async beforeStart():Promise<boolean> {\r\n        try {\r\n            let app = await loadAppUqs(this.appOwner, this.appName);\r\n            // if (isDevelopment === true) {\r\n            // 这段代码原本打算只是在程序员调试方式下使用，实际上，也可以开放给普通用户，production方式下\r\n                let {predefinedUnit} = appInFrame;\r\n                let {id} = app;\r\n                this.id = id;\r\n                let {user} = nav;\r\n                if (user !== undefined && user.id > 0) {\r\n                    this.appUnits = await centerApi.userAppUnits(this.id);\r\n                    switch (this.appUnits.length) {\r\n                        case 0:\r\n                            this.showUnsupport(predefinedUnit);\r\n                            return false;\r\n                        case 1:\r\n                            let appUnit = this.appUnits[0].id;\r\n                            if (appUnit === undefined || appUnit < 0 || \r\n                                predefinedUnit !== undefined && appUnit != predefinedUnit)\r\n                            {\r\n                                this.showUnsupport(predefinedUnit);\r\n                                return false;\r\n                            }\r\n                            appInFrame.unit = appUnit;\r\n                            break;\r\n                        default:\r\n                            if (predefinedUnit>0 && this.appUnits.find(v => v.id===predefinedUnit) !== undefined) {\r\n                                appInFrame.unit = predefinedUnit;\r\n                                break;\r\n                            }\r\n                            nav.push(<this.selectUnitPage />)\r\n                            return false;\r\n                    }\r\n                }\r\n            //}\r\n\r\n            let retErrors = await this.loadUqs(app);\r\n            if (retErrors !== undefined) {\r\n                this.openPage(<Page header=\"ERROR\">\r\n                    <div className=\"m-3\">\r\n                        <div>Load Uqs 发生错误：</div>\r\n                        {retErrors.map((r, i) => <div key={i}>{r}</div>)}\r\n                    </div>\r\n                </Page>);\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        catch (err) {\r\n            nav.push(<Page header=\"App start error!\">\r\n                <pre>\r\n                    {typeof err === 'string'? err : err.message}\r\n                </pre>\r\n            </Page>);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    protected async internalStart(param:any) {\r\n        if (param !== true) {\r\n            this.clearPrevPages();\r\n        }\r\n        await this.showMainPage();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        return this.renderView(this.VAppMain);\r\n    }\r\n\r\n    // 如果是独立app，删去显示app之前的页面。\r\n    // 如果非独立app，则不删\r\n    protected clearPrevPages() {\r\n        nav.clear();\r\n    }\r\n\r\n    private showUnsupport(predefinedUnit: number) {\r\n        this.clearPrevPages();\r\n        let {user} = nav;\r\n        let userName:string = user? user.name : '[未登录]';\r\n        this.openPage(<Page header=\"APP无法运行\" logout={true}>\r\n            <div className=\"m-3 text-danger container\">\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-2\">登录用户: </div>\r\n                    <div className=\"col\">{userName}</div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-2\">App:</div>\r\n                    <div className=\"col\">{`${this.appOwner}/${this.appName}`}</div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-2\">预设小号:</div>\r\n                    <div className=\"col\">{predefinedUnit || <small className=\"text-muted\">[无预设小号]</small>}</div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-2\">\r\n                        <FA name=\"exclamation-triangle\" />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <div className=\"text-muted\">无法运行可能原因：</div>\r\n                        <ul className=\"p-0\">\r\n                            <li>没有小号运行 {this.ui.appName}</li>\r\n                            <li>用户 <b>{userName}</b> 没有加入任何一个运行{this.ui.appName}的小号</li>\r\n                            {\r\n                                predefinedUnit && \r\n                                <li>预设小号 <b>{predefinedUnit}</b> 没有运行App {this.ui.appName}</li>\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    predefinedUnit || \r\n                    <div className=\"form-group row\">\r\n                    <div className=\"col-2\"></div>\r\n                    <div className=\"col\">\r\n                        预设小号定义在 public/unit.json 文件中。\r\n                        定义了这个文件的程序，只能由url直接启动。\r\n                        用户第一次访问app之后，会缓存在localStorage里。<br/>\r\n                        如果要删去缓存的预定义Unit，logout然后再login。\r\n                    </div>\r\n                </div>\r\n                }\r\n            </div>\r\n        </Page>)\r\n    }\r\n\r\n    private async showMainPage() {\r\n        // #tv-RwPBwMef-23-sheet-api-108\r\n        let exHash = getExHash();\r\n        if (exHash !== undefined) {\r\n            let parts = exHash.split('-');\r\n            if (parts.length > 3) {\r\n                let action = parts[3];\r\n                // sheet_debug 表示centerUrl是debug方式的\r\n                if (action === 'sheet' || action === 'sheet_debug') {\r\n                    let uqId = Number(parts[4]);\r\n                    let sheetTypeId = Number(parts[5]);\r\n                    let sheetId = Number(parts[6]);\r\n                    let cUq = this.getCUqFromId(uqId);\r\n                    if (cUq === undefined) {\r\n                        alert('unknown uqId: ' + uqId);\r\n                        return;\r\n                    }\r\n                    this.clearPrevPages();\r\n                    await cUq.navSheet(sheetTypeId, sheetId);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        this.openVPage(this.VAppMain);\r\n    }\r\n\r\n    private getCUqFromId(uqId:number): CUq {\r\n        for (let i in this.cUqCollection) {\r\n            let cUq = this.cUqCollection[i];\r\n            if (cUq.id === uqId) return cUq;\r\n        }\r\n        return;\r\n    }\r\n\r\n    renderRow = (item: any, index: number):JSX.Element => {\r\n        let {id, nick, name} = item;\r\n        return <LMR className=\"px-3 py-2\" right={'id: ' + id}>\r\n            <div>{nick || name}</div>\r\n        </LMR>;\r\n    }\r\n    onRowClick = async (item: any) => {\r\n        appInFrame.unit = item.id; // 25;\r\n        await this.start();\r\n    }\r\n\r\n    protected selectUnitPage = () => {\r\n        return <Page header=\"选择小号\" logout={true}>\r\n            <List items={this.appUnits} item={{render: this.renderRow, onClick: this.onRowClick}}/>\r\n        </Page>\r\n    }\r\n}\r\n\r\nclass VAppMain extends VPage<CApp> {\r\n    async open(param?:any) {\r\n        this.openPage(this.appPage);\r\n    }\r\n\r\n    render(param?:any) {\r\n        return this.appContent();\r\n    }\r\n\r\n    protected appPage() {\r\n        let {caption} = this.controller;\r\n        return <Page header={caption} logout={async()=>{appInFrame.unit = undefined}}>\r\n            {this.appContent()}\r\n        </Page>;\r\n    }\r\n\r\n    protected appContent = () => {\r\n        let {cUqArr} = this.controller;\r\n        let content:any;\r\n        if (cUqArr.length === 0) {\r\n            content = <div className=\"text-danger\">\r\n                <FA name=\"\" /> 此APP没有绑定任何的UQ\r\n            </div>;\r\n        }\r\n        else {\r\n            content = cUqArr.map((v,i) => <div key={i}>{v.render()}</div>);\r\n        }\r\n        return <>{content}</>;\r\n    };\r\n}\r\n","import React from 'react';\r\nimport { FA } from \"tonva-react-form\";\r\n\r\nfunction icon(className:string, name:string) {\r\n    return <FA className={className} name={name} fixWidth={true} />;\r\n}\r\n/*\r\nexport interface EntityRes {\r\n    caption: string;\r\n    icon: JSX.Element;\r\n}\r\n*/\r\n\r\nexport const entityIcons:{[type:string]:JSX.Element} = {\r\n    tuid: icon('text-info', 'list-alt'),\r\n    action: icon('text-info', 'hand-o-right'),\r\n    map: icon('text-muted', 'list-ul'),\r\n    book: icon('text-muted', 'book'),\r\n    query: icon('text-warning', 'search'),\r\n    history: icon('text-info', 'hand-o-right'),\r\n    pending: icon('text-info', 'forward'),\r\n    sheet: icon('text-primary', 'wpforms'),\r\n};\r\n","import { Controller } from \"tonva-tools\";\r\nimport { CUq } from \"./uq\";\r\n\r\nexport abstract class ControllerUq extends Controller {\r\n    constructor(cUq: CUq, res:any) {\r\n        super(res);\r\n        this.cUq = cUq;\r\n    }\r\n    cUq: CUq;\r\n}\r\n","import {CenterApi as CenterApiBase} from 'tonva-tools';\r\n\r\n//\r\n\r\nexport class CenterApi extends CenterApiBase {\r\n    async userAppUnits(app:number):Promise<any[]> {\r\n        return await this.get('tie/user-app-units', {app:app});\r\n    }\r\n}\r\n\r\nexport const centerApi = new CenterApi('tv/', undefined);\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Page } from 'tonva-tools';\r\nimport { List, Muted, LMR } from 'tonva-react-form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../entities';\r\nimport { CSheet, SheetUI } from './cSheet';\r\n\r\nexport class VSheetMain extends VEntity<Sheet, SheetUI, CSheet> {\r\n    async open() {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    newClick = () => this.event('new');\r\n    schemaClick = () => this.event('schema'); \r\n    archivesClick = () => this.event('archives');\r\n    sheetStateClick = (state) => this.event('state', state);\r\n\r\n    renderState = (item:any, index:number) => {\r\n        let {state, count} = item;\r\n        if (count === 0) return null;\r\n        let badge = <span className=\"badge badge-success ml-5 align-self-end\">{count}</span>;\r\n        return <LMR className=\"px-3 py-2\" left={this.controller.getStateLabel(state)} right={badge} />;\r\n    }\r\n\r\n    protected view = observer(() => {\r\n        let list = this.controller.statesCount.filter(row=>row.count);\r\n        let right = <button className=\"btn btn-outline-primary\" onClick={this.archivesClick}>已归档</button>;\r\n        let templet:any;\r\n        if (this.isDev === true) {\r\n            templet = <button className=\"btn btn-primary mr-2\" color=\"primary\" onClick={this.schemaClick}>模板</button>;\r\n        }\r\n        return <Page header={this.label}>\r\n            <LMR\r\n                className=\"mx-3 my-2\"\r\n                right={right}>\r\n                <button className=\"btn btn-primary mr-2\" color=\"primary\" onClick={this.newClick}>新建</button>\r\n                {templet}\r\n            </LMR>\r\n            <List className=\"my-2\"\r\n                header={<Muted className=\"mx-3 my-1\">待处理{this.label}</Muted>}\r\n                none=\"[ 无 ]\"\r\n                items={list}\r\n                item={{render:this.renderState, onClick:this.sheetStateClick}} />\r\n        </Page>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport { FA } from 'tonva-react-form';\r\nimport { Sheet } from '../../entities';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { SheetUI, CSheet } from './cSheet';\r\n\r\nexport class VSheetNew extends VEntity<Sheet, SheetUI, CSheet> {\r\n    vForm: VForm;\r\n\r\n    async open(param?:any) {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    private onSubmit = async ():Promise<void> => {\r\n        let values = this.vForm.getValues();\r\n        let valuesWithBox = this.vForm.values;\r\n        //let ret = \r\n        await this.controller.onSave(values, valuesWithBox);\r\n        /*\r\n        this.ceasePage();\r\n        //this.openPage(this.finishedPage);\r\n        await this.controller.showSaved(ret);\r\n        */\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render()}\r\n    </Page>;\r\n}\r\n","import * as React from 'react';\r\nimport {List, Muted, LMR, EasyDate, FA} from 'tonva-react-form';\r\nimport { Sheet } from '../../entities';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CSheet, SheetUI, SheetData } from './cSheet';\r\n\r\nconst leftFlowStyle = {width: '8rem'};\r\n\r\nexport abstract class VSheetView extends VEntity<Sheet, SheetUI, CSheet> {\r\n    protected vForm: VForm;\r\n    protected sheetData: SheetData;\r\n    //data: any;\r\n    //state: string;\r\n    //flows:any[];\r\n\r\n    flowRow = (item:any, index:number):JSX.Element => {\r\n        let {date, user, preState, state, action} = item;\r\n        if (action === undefined) action = <><FA className=\"text-primary\" name=\"pencil-square-o\" /> 制单</>;\r\n        let to;\r\n        switch (state) {\r\n            case '$': break;\r\n            case '#': to = <><FA className=\"text-success\" name=\"file-archive-o\" /></>; break;\r\n            default: to = <><FA className=\"text-muted\" name=\"arrow-right\" /> &nbsp; {state}</>; break;\r\n        }\r\n        /*\r\n        return <div className=\"row\">\r\n            <div className=\"col-sm\"></div>\r\n            <div className=\"col-sm\"><div className=\"p-2\">{to}</div></div>\r\n            <div className=\"col-sm text-right\"><div className=\"p-2\"><Muted><EasyDate date={date} /></Muted></div></div>\r\n        </div>;\r\n        */\r\n        return <LMR \r\n            left={<div className=\"pl-3 py-2\" style={leftFlowStyle}>{action}</div>}\r\n            right={<div className=\"p-2\"><Muted><EasyDate date={date} /></Muted></div>}>\r\n            <div className=\"p-2\">{to}</div>\r\n        </LMR>;\r\n    }\r\n\r\n    protected sheetView = () => {\r\n        let {brief, flows} = this.sheetData;\r\n        let removed;\r\n        if (brief.state === '-')\r\n            removed = <div className=\"mx-3 my-2\" style={{color:'red'}}>本单据作废</div>;\r\n        return <div>\r\n            {removed}\r\n            {this.vForm.render()}\r\n    \r\n            <List header={<Muted className=\"mx-3 my-1\">流程</Muted>}\r\n                items={flows}\r\n                item={{render:this.flowRow}}/>\r\n        </div>;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport { VForm, FormMode } from '../form';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\n\r\nexport class VSheetEdit extends VSheetView { //VEntity<Sheet, SheetUI, CSheet> {\r\n    protected sheetData: SheetData;\r\n    async open(param: SheetData) {\r\n        this.sheetData = param;\r\n        this.vForm = this.createForm(this.onSubmit, param.data, FormMode.edit);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSubmit = async ():Promise<void> => {\r\n        let values = this.vForm.getValues();\r\n        await this.controller.saveSheet(values, this.vForm.values);\r\n        this.closePage();\r\n        this.returnCall(this.vForm.values);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render()}\r\n    </Page>;\r\n}\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport { nav, Page } from 'tonva-tools';\r\nimport { FA } from 'tonva-react-form';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\n\r\nexport class VSheetAction extends VSheetView { \r\n    async open(sheetData:SheetData) {\r\n        this.sheetData = sheetData;\r\n        //let {brief, data, flows} = await this.controller.getSheetData(sheetId);\r\n        //this.brief = brief;\r\n        //this.flows = flows;\r\n        //this.data = data;\r\n        //this.state = this.brief.state;\r\n        this.vForm = this.createForm(undefined, sheetData.data);\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    actionClick = async (action:any) => {\r\n        let {id, flow, state} = this.sheetData.brief;\r\n        let res = await this.controller.action(id, flow, state, action.name);\r\n        this.ceasePage();\r\n        this.openPage(this.acted);\r\n        //alert(jsonStringify(res));\r\n        //await this.backPage();\r\n    }\r\n\r\n    deleteClick = async () => {\r\n        alert('单据作废：程序正在设计中');\r\n    }\r\n\r\n    editClick = async () => {\r\n        //alert('修改单据：程序正在设计中');\r\n        let values = await this.controller.editSheet(this.sheetData);\r\n        this.vForm.setValues(values);\r\n    }\r\n\r\n    protected page = () => {\r\n        let {brief} = this.sheetData;\r\n        let {state, no} = brief;\r\n        let stateLabel = this.controller.getStateLabel(state);\r\n        let {states} = this.entity;\r\n        let s = states.find(v => v.name === state);\r\n        let actionButtons, startButtons;\r\n        if (s === undefined) {\r\n            let text:string, cn:string;\r\n            switch (state) {\r\n                default:\r\n                    text = '不认识的单据状态\\'' + state + '\\'';\r\n                    cn = 'text-info';\r\n                    break;\r\n                case '-': \r\n                    text = '已作废';\r\n                    cn = 'text-danger';\r\n                    break;\r\n                case '#':\r\n                    text = '已归档';\r\n                    cn = 'text-success';\r\n                    break;\r\n            }\r\n            actionButtons = <div className={classNames(cn)}>[{text}]</div>;\r\n        }\r\n        else {\r\n            actionButtons = <div className=\"flex-grow-1\">{s.actions.map((v,index) => \r\n                <button\r\n                    key={index}\r\n                    className=\"btn btn-primary mr-2\"\r\n                    onClick={()=>this.actionClick(v)}\r\n                >\r\n                    {this.controller.getActionLabel(state, v.name)}\r\n                </button>)}\r\n            </div>;\r\n            if (state === '$') {\r\n                startButtons = <div>\r\n                    <button className=\"btn btn-outline-info ml-2\" onClick={this.editClick}>修改</button>\r\n                    <button className=\"btn btn-outline-danger ml-2\" onClick={this.deleteClick}>作废</button>\r\n                </div>\r\n            }\r\n        };\r\n        return <Page header={this.label + ':' + stateLabel + '-' + no}>\r\n            <div className=\"mb-2\">\r\n                <div className=\"d-flex px-3 py-2 border-bottom bg-light\">\r\n                    {actionButtons}\r\n                    {startButtons}\r\n                </div>\r\n                <this.sheetView />\r\n            </div>\r\n        </Page>;\r\n    }\r\n\r\n    private acted = () => {\r\n        let {discription} = this.sheetData.brief;\r\n        return <Page header=\"已处理\" back=\"close\">\r\n            <div className=\"p-3 d-flex flex-column align-items-center\">\r\n                <div className=\"p-3\">{discription}</div>\r\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已处理！</div>\r\n                <div className=\"p-3\">\r\n                    <button className=\"btn btn-outline-info\" onClick={()=>this.backPage()}>返回</button>\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../entities';\r\nimport { SheetUI, CSheet } from './cSheet';\r\n\r\nexport class VSheetSchema extends VEntity<Sheet, SheetUI, CSheet> {\r\n    async open(param?:any) {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label + \"模板\"}>\r\n        <pre className=\"mx-3 my-2\">{this.entity.schemaStringify()}</pre>\r\n    </Page>;\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport {List, LMR, FA, EasyDate, Muted} from 'tonva-react-form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../entities';\r\nimport { SheetUI, CSheet } from './cSheet';\r\n\r\nexport class VArchives extends VEntity<Sheet, SheetUI, CSheet> {\r\n    list: any[];\r\n\r\n    async open() {\r\n        this.list = await this.entity.getArchives(undefined, 10);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    archiveClick = async (brief:any) => {\r\n        if (brief.processing===1) return;\r\n        this.event('archived', brief);\r\n    }\r\n    archiveRow = (row:any, index:number) => {\r\n        let {id, no, discription, date} = row;\r\n        let left = <>\r\n            {row.processing===1? '... ' : ''}\r\n            {row.no} &nbsp; {row.discription}\r\n        </>;\r\n        let right = <Muted><EasyDate date={date} /></Muted>;\r\n        return <LMR className=\"px-3 py-2\" left={left} right={right} />\r\n    }\r\n\r\n    protected view = () => {\r\n        return <Page header={'已归档' + this.label}>\r\n            <List items={this.list} item={{render:this.archiveRow, onClick:this.archiveClick}} />\r\n        </Page>;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { Page, nav } from 'tonva-tools';\r\nimport { List, Muted, FA, LMR, EasyDate } from 'tonva-react-form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../entities';\r\nimport { CSheet, SheetUI } from './cSheet';\r\n\r\nexport class VSheetList extends VEntity<Sheet, SheetUI, CSheet> {\r\n    protected row: (values) => JSX.Element;\r\n    stateName: string;\r\n    stateLabel: string;\r\n\r\n    async open(item:any) {\r\n        this.row = this.ui.listRow || this.rowContent;\r\n        this.stateName = item.state;\r\n        this.stateLabel = this.controller.getStateLabel(this.stateName);\r\n        //await this.controller.getStateSheets(this.stateName, 0, 10);\r\n        await this.controller.pageStateItems.first(this.stateName);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    rowClick = async (brief:any) => {\r\n        if (brief.processing===1) {\r\n            this.event('processing', brief.id);\r\n            return;\r\n        }\r\n        this.event('action', brief.id);\r\n    }\r\n\r\n    private onScrollBottom = () => {\r\n        console.log('onScrollBottom');\r\n        this.controller.pageStateItems.more();\r\n    }\r\n\r\n    protected rowContent = (row:any):JSX.Element => {\r\n        let {id, no, discription, date, processing} = row;\r\n        let left = <>            \r\n            {no} &nbsp; <Muted>{discription}</Muted> {processing===1? '...' : ''}\r\n        </>;\r\n        let right = <Muted><EasyDate date={date} /></Muted>;\r\n        return <LMR className=\"px-3 py-2\" left={left} right={right} />;\r\n    }\r\n\r\n    private renderRow = (row:any, index:number) => <this.row {...row} />\r\n\r\n    protected view = () => {\r\n        //let sheets = this.controller.stateSheets;\r\n        let {pageStateItems} = this.controller;\r\n        return <Page header={this.label + ' - ' + this.stateLabel} onScrollBottom={this.onScrollBottom}>\r\n            <List items={pageStateItems} item={{render:this.renderRow, onClick:this.rowClick}} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {Page} from 'tonva-tools';\r\nimport { VSheetView } from './vSheetView';\r\nimport { CSheet, SheetUI, SheetData } from './cSheet';\r\n\r\nexport interface State {\r\n    flows: any;\r\n    data: any;\r\n}\r\nexport class VArchived extends VSheetView {\r\n    //protected controller: CSheet;\r\n    //brief: any;\r\n\r\n    async open(sheetData:SheetData) {\r\n        this.sheetData = sheetData;\r\n        /*\r\n        let {brief, data, flows} = await this.controller.getArchived(inBrief.id);\r\n        this.brief = brief;\r\n        this.data = data;\r\n        this.flows = flows;\r\n        */\r\n        this.vForm = this.createForm(undefined, this.sheetData.data);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => {\r\n        let {brief} = this.sheetData;\r\n        return <Page header={this.label + ':' + '-' + brief.no}>\r\n            <this.sheetView />\r\n        </Page>;\r\n    };\r\n}\r\n","import { Sheet } from \"../../entities\";\r\nimport { SheetUI, CSheet } from \"./cSheet\";\r\nimport { VEntity } from \"../CVEntity\";\r\n\r\nexport abstract class VSheet extends VEntity<Sheet, SheetUI, CSheet> {\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport { FA } from 'tonva-react-form';\r\nimport { VSheet } from \"./vSheet\";\r\n\r\nexport class VSheetSaved extends VSheet {\r\n    private brief: any;\r\n    async open(brief?:any) {\r\n        this.brief = brief;\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    private restart = async () => {\r\n        this.ceasePage();\r\n        await this.event('new');\r\n    }\r\n\r\n    actionClick = async (action:any) => {\r\n        this.ceasePage();\r\n        let {id, flow, state} = this.brief;\r\n        let res = await this.controller.action(id, flow, state, action.name);\r\n        this.openPage(this.acted);\r\n    }\r\n\r\n    private buttons = <>\r\n        <button className=\"btn btn-outline-primary mr-3\" onClick={this.restart}>继续开单</button>\r\n        <button className=\"btn btn-outline-info\" onClick={()=>this.backPage()}>返回</button>\r\n    </>;\r\n\r\n    private view = () => {\r\n        let {states} = this.entity;\r\n        const state = '$';\r\n        let s = states.find(v => v.name === state);\r\n        let actionButtons = <>{s.actions.map((v,index) => \r\n            <button\r\n                key={index}\r\n                className=\"btn btn-primary mr-3\"\r\n                onClick={()=>this.actionClick(v)}\r\n            >\r\n                {this.controller.getActionLabel(state, v.name)}\r\n            </button>)}\r\n        </>;\r\n        return <Page header=\"已保存\" back=\"close\">\r\n            <div className=\"p-3 d-flex flex-column align-items-center\">\r\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已保存！系统尚未处理</div>\r\n                <div className=\"p-3\">\r\n                    {actionButtons}\r\n                    {this.buttons}\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    }\r\n\r\n    private acted = () => {\r\n        return <Page>\r\n            <div className=\"p-3 d-flex flex-column align-items-center\">\r\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已处理！</div>\r\n                <div className=\"p-3\">\r\n                    {this.buttons}\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { nav, Page } from 'tonva-tools';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\n\r\nexport class VSheetProcessing extends VSheetView { \r\n    async open(sheetData:SheetData) {\r\n        this.sheetData = sheetData;\r\n        //let {brief, data, flows} = await this.controller.getSheetData(sheetId);\r\n        //this.brief = brief;\r\n        //this.flows = flows;\r\n        //this.data = data;\r\n        //this.state = this.brief.state;\r\n        this.vForm = this.createForm(undefined, sheetData.data);\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    protected page = () => {\r\n        let {brief} = this.sheetData;\r\n        let {state, no} = brief;\r\n        let stateLabel = this.controller.getStateLabel(state);\r\n        return <Page header={this.label + ':' + stateLabel + '-' + no}>\r\n            <div className=\"mb-2\">\r\n                <div className=\"d-flex px-3 py-2 border-bottom bg-light\">\r\n                    正在处理中...\r\n                </div>\r\n                <this.sheetView />\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n","import { IObservableArray, observable } from \"mobx\";\r\nimport { TypeVPage, VPage, PageItems, postWsToTop } from 'tonva-tools';\r\nimport { Sheet, StateCount } from \"../../entities\";\r\nimport { CEntity, EntityUI, VEntity } from \"../CVEntity\";\r\nimport { VSheetMain } from \"./vMain\";\r\nimport { VSheetNew } from \"./vNew\";\r\nimport { VSheetEdit } from \"./vEdit\";\r\nimport { VSheetAction } from \"./vSheetAction\";\r\nimport { VSheetSchema } from \"./vSchema\";\r\nimport { VArchives } from \"./vArchives\";\r\nimport { VSheetList } from \"./vList\";\r\nimport { VArchived } from \"./vArchived\";\r\nimport { VSheetSaved } from \"./vSaved\";\r\nimport { VSheetProcessing } from \"./vSheetProcessing\";\r\n\r\nexport interface SheetActionUI {\r\n    label: string;\r\n}\r\n\r\nexport interface StateUI {\r\n    label: string;\r\n    actions: {[name:string]: SheetActionUI}\r\n}\r\n\r\nexport interface SheetUI extends EntityUI {\r\n    CSheet?: typeof CSheet;\r\n    states?: {[name:string]: StateUI};\r\n    main?: TypeVPage<CSheet>;\r\n    sheetNew?: TypeVPage<CSheet>;\r\n    sheetSaved?: TypeVPage<CSheet>;\r\n    sheetEdit?: TypeVPage<CSheet>;\r\n    sheetAction?: TypeVPage<CSheet>;\r\n    listRow?: (row:any) => JSX.Element;\r\n    sheetTitle?: (sheetValues:any, x:any) => string;      // 返回单据的描述\r\n}\r\n\r\nexport interface SheetData {\r\n    brief: any;\r\n    data: any;\r\n    flows: any[];\r\n}\r\n\r\nexport class CSheet extends CEntity<Sheet, SheetUI> {\r\n    statesCount:IObservableArray<StateCount> = observable.array<StateCount>([], {deep:true});\r\n    curState:string;\r\n    pageStateItems: PageItems<any>;\r\n\r\n    protected async internalStart() {\r\n        await this.loadStateSheetCount();\r\n        this.pageStateItems = this.entity.createPageStateItems();\r\n        await this.openVPage(this.VSheetMain);\r\n    }\r\n\r\n    protected async onMessage(msg: any):Promise<void> {\r\n        let {type, body, from, to, push} = msg;\r\n        if (type === 'sheet') this.onSheet(from, to, body);\r\n    }\r\n    private onSheet(from:number, to:number[], sheetData:any) {\r\n        let me = this.user.id;\r\n        let {id, preState, state} = sheetData;\r\n        console.log({$:'onMessage sheet', from:from, to:to.join(','), id:id, preState:preState, state:state, me:me, sheetData:sheetData})\r\n        if (from === me) {\r\n            this.sheetActPreState(id, preState);\r\n        }\r\n        if (to.find(v=>v===me) !== undefined) {\r\n            this.sheetActState(id, state, sheetData);\r\n        }\r\n    }\r\n    private sheetActPreState(id:number, preState:string) {\r\n        this.changeStateCount(preState, -1);\r\n        if (this.curState === undefined || this.curState !== preState) return;\r\n        /*\r\n        let index = this.stateSheets.findIndex(v => v.id === id);\r\n        if (index>=0) {\r\n            this.stateSheets.splice(index, 1);\r\n        }*/\r\n        let index = this.pageStateItems.items.findIndex(v => v.id === id);\r\n        if (index>=0) {\r\n            this.pageStateItems.items.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    private sheetActState(id:number, state:string, msg:any) {\r\n        this.changeStateCount(state, 1);\r\n        if (this.curState === undefined || this.curState !== state) return;\r\n        /*\r\n        if (this.stateSheets.findIndex(v => v.id === id) < 0) {\r\n            this.stateSheets.push(msg);\r\n        }\r\n        */\r\n        if (this.pageStateItems.items.findIndex(v => v.id === id) < 0) {\r\n            this.pageStateItems.items.push(msg);\r\n        }\r\n    }\r\n\r\n    private changeStateCount(state:string, delta:number) {\r\n        if (state === undefined) return;\r\n        let index = this.statesCount.findIndex(v => v.state === state);\r\n        console.log({$:'changeState', state: state, delta: delta, index: index});\r\n        if (index < 0) return;\r\n        let stateCount = this.statesCount[index];\r\n        stateCount.count += delta;\r\n        if (stateCount.count < 0) stateCount.count = 0;\r\n    }\r\n\r\n    protected get VSheetMain():TypeVPage<CSheet> {return (this.ui&&this.ui.main) || VSheetMain}\r\n    protected get VSheetNew(): TypeVPage<CSheet> {return this.ui.sheetNew || VSheetNew}\r\n    protected get VSheetSaved(): TypeVPage<CSheet> {return this.ui.sheetSaved || VSheetSaved}\r\n    protected get VSheetEdit(): TypeVPage<CSheet> {return this.ui.sheetEdit || VSheetEdit}\r\n    protected get VSheetSchema(): TypeVPage<CSheet> {return VSheetSchema}\r\n    protected get VArchives(): TypeVPage<CSheet> {return VArchives}\r\n    protected get VArchived(): TypeVPage<CSheet> {return VArchived}\r\n    protected get VSheetList(): TypeVPage<CSheet> {return VSheetList}\r\n    protected get VSheetAction(): TypeVPage<CSheet> {return this.ui.sheetAction || VSheetAction}\r\n    protected get VSheetProcessing(): TypeVPage<CSheet> {return VSheetProcessing}\r\n    protected async onEvent(type:string, value:any) {\r\n        let c: TypeVPage<CSheet>;\r\n        switch (type) {\r\n            default: return;\r\n            case 'new': c = this.VSheetNew; break;\r\n            case 'schema': c = this.VSheetSchema; break;\r\n            case 'archives': c = this.VArchives; break;\r\n            case 'state':\r\n                this.curState = value.state;\r\n                c = this.VSheetList;\r\n                break;\r\n            case 'archived':\r\n                await this.showArchived(value); return;\r\n            case 'action':\r\n                await this.showAction(value); return;\r\n            case 'processing':\r\n                await this.showProcessing(value); return;\r\n        }\r\n        await this.openVPage(c, value);\r\n    }\r\n\r\n    async startSheet(sheetId:number) {\r\n        if (await this.beforeStart() === false) return;\r\n        await this.onEvent('action', sheetId);\r\n    }\r\n\r\n    async showAction(sheetId:number) {\r\n        let sheetData:SheetData = await this.getSheetData(sheetId);\r\n        postWsToTop({\r\n            body: {\r\n                $type: 'msg',\r\n                action: '$sheet',\r\n                msg: {\r\n                    id: sheetId,\r\n                    uq: this.cUq.id,\r\n                    state: sheetData.brief.state\r\n                }\r\n            }\r\n        });\r\n        await this.openVPage(this.VSheetAction, sheetData);\r\n    }\r\n\r\n    async showProcessing(sheetId:number) {\r\n        let sheetData:SheetData = await this.getSheetData(sheetId);\r\n        await this.openVPage(this.VSheetProcessing, sheetData);\r\n    }\r\n\r\n    async editSheet(sheetData:SheetData):Promise<any> {\r\n        //alert('修改单据：程序正在设计中');\r\n        let values = await this.vCall(this.VSheetEdit, sheetData);\r\n        return values;\r\n    }\r\n\r\n    async showArchived(inBrief:any) {\r\n        let sheetData = await this.getArchived(inBrief.id);\r\n        await this.openVPage(this.VArchived, sheetData);\r\n    }\r\n\r\n    onSave = async (values:any, valuesWithBox:any):Promise<void> => {\r\n        //let values = this.vForm.getValues();\r\n        //let ret = await this.controller.saveSheet(values, this.vForm.values);\r\n        let ret = await this.saveSheet(values, valuesWithBox);\r\n        this.ceasePage();\r\n        //this.openPage(this.finishedPage);\r\n        await this.showSaved(ret);\r\n    }\r\n\r\n    async showSaved(sheetData:any) {\r\n        await this.openVPage(this.VSheetSaved, sheetData);\r\n    }\r\n\r\n    private getStateUI(stateName:string) {\r\n        let {states} = this.res;\r\n        if (states === undefined) return;\r\n        return states[stateName];\r\n    }\r\n    getStateLabel(stateName:string) {\r\n        let state = this.getStateUI(stateName);\r\n        let ret = (state && state.label) || stateName;\r\n        switch (ret) {\r\n            default: return ret;\r\n            case '$': return '新单';\r\n        }\r\n    }\r\n    getActionLabel(stateName:string, actionName:string) {\r\n        let state = this.getStateUI(stateName);\r\n        if (state === undefined) return actionName;\r\n        let actions = state.actions;\r\n        if (actions === undefined) return actionName;\r\n        let action = actions[actionName];\r\n        return (action && action.label) || actionName;\r\n    }\r\n\r\n    private async loadStateSheetCount():Promise<void> {\r\n        this.statesCount.clear();\r\n        let statesCount = await this.entity.stateSheetCount();\r\n        this.statesCount.splice(0, 0, ...statesCount);\r\n    }\r\n\r\n    async getSheetData(sheetId:number):Promise<SheetData> {\r\n        return await this.entity.getSheet(sheetId);\r\n    }\r\n\r\n    async getArchived(sheetId:number):Promise<SheetData> {\r\n        return await this.entity.getArchive(sheetId);\r\n    }\r\n\r\n    async saveSheet(values:any, valuesWithBox:any):Promise<any> {\r\n        let {sheetTitle} = this.ui;\r\n        let disc = sheetTitle === undefined? this.label : sheetTitle(valuesWithBox, this.x);\r\n        let ret = await this.entity.save(disc, values);\r\n        //let {id, state} = ret;\r\n        //if (id > 0) this.changeStateCount(state, 1);\r\n        return ret;\r\n    }\r\n\r\n    async action(id:number, flow:number, state:string, actionName:string):Promise<any> {\r\n        return await this.entity.action(id, flow, state, actionName);\r\n    }\r\n}\r\n","export * from './cSheet';\r\nexport * from './vSheet';\r\nexport * from './vMain';\r\nexport * from './vNew';\r\nexport * from './vEdit';\r\nexport * from './vList';\r\nexport * from './vSheetAction';\r\nexport * from './vSchema';\r\nexport * from './vArchived';\r\nexport * from './vSheetView';\r\n","import * as React from 'react';\r\nimport { TuidMain, Book, Entity } from '../../entities';\r\nimport { Page } from 'tonva-tools';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CBook, BookUI } from './cBook';\r\n\r\nexport class VBookMain extends VEntity<Book, BookUI, CBook> {\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        Book\r\n    </Page>;\r\n}\r\n","import { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Book } from \"../../entities\";\r\nimport { VBookMain } from \"./vBookMain\";\r\n\r\nexport interface BookUI extends EntityUI {\r\n    CBook?: typeof CBook;\r\n    main: typeof VBookMain,\r\n}\r\n\r\nexport class CBook extends CEntity<Book, BookUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VBookMain);\r\n    }\r\n\r\n    protected get VBookMain():typeof VBookMain {return VBookMain}\r\n}\r\n","import React from \"react\";\r\nimport { View } from \"tonva-tools\";\r\nimport { List, Muted } from \"tonva-react-form\";\r\nimport { Entity } from \"../../entities\";\r\nimport { CLink } from \"../link\";\r\nimport { CUq } from \"./cUq\";\r\n\r\nexport class VUq extends View<CUq> {\r\n    protected isSysVisible = false;\r\n    protected tuidLinks: CLink[];\r\n    protected mapLinks: CLink[];\r\n    protected sheetLinks: CLink[];\r\n    protected actionLinks: CLink[];\r\n    protected queryLinks: CLink[];\r\n    protected bookLinks: CLink[];\r\n    protected historyLinks: CLink[];\r\n    protected pendingLinks: CLink[];\r\n\r\n    constructor(cUq: CUq) {\r\n        super(cUq);\r\n        let {tuidArr, mapArr, sheetArr, actionArr, queryArr, bookArr, historyArr, pendingArr} = cUq.entities;\r\n        this.tuidLinks = tuidArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cTuidMain(v)));\r\n        this.mapLinks = mapArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cMap(v)));\r\n        this.sheetLinks = sheetArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cSheet(v)));\r\n        this.actionLinks = actionArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cAction(v)));\r\n        this.queryLinks = queryArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cQuery(v)));\r\n        this.bookLinks = bookArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cBook(v)));\r\n        this.historyLinks = historyArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cHistory(v)));\r\n        this.pendingLinks = pendingArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cPending(v)));\r\n    }\r\n    protected isVisible(entity: Entity):boolean {\r\n        return entity.sys !== true || this.isSysVisible;\r\n    }\r\n    render(param?:any) {\r\n        if (this.view === undefined) return <div>??? viewModel 必须定义 view ???</div>\r\n        return React.createElement(this.view);\r\n    }\r\n\r\n    protected view = () => {\r\n        let {res, uq, error} = this.controller;\r\n        let linkItem = {\r\n            render: (cLink:CLink, index:number):JSX.Element => cLink.render(), \r\n            onClick: undefined, \r\n        };\r\n        let lists = [\r\n            {\r\n                header: res.tuid || 'TUID',\r\n                items: this.tuidLinks,\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.map || 'MAP',\r\n                items: this.mapLinks,\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.sheet || 'SHEET',\r\n                items: this.sheetLinks\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.action || 'ACTION',\r\n                items: this.actionLinks\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.query || 'QUERY',\r\n                items: this.queryLinks\r\n            },\r\n            {\r\n                cn: 'mt-2 mb-4',\r\n                header: res.book || 'BOOK',\r\n                items: this.bookLinks\r\n            },\r\n            {\r\n                cn: 'mt-2 mb-4',\r\n                header: res.history || 'HISTORY',\r\n                items: this.historyLinks\r\n            },\r\n            {\r\n                cn: 'mt-2 mb-4',\r\n                header: res.pending || 'PENDING',\r\n                items: this.pendingLinks\r\n            }\r\n        ];\r\n        let content;\r\n        if (error !== undefined) {\r\n            content = <div className=\"p-3 text-danger\">连接错误: {error}</div>;\r\n        }\r\n        else {\r\n            content = lists.map(({cn, header, items},index) => items.length > 0 && <List\r\n                key={index}\r\n                className={cn}\r\n                header={<div className=\"px-3 py-1 bg-light\"><Muted>{header}</Muted></div>}\r\n                items={items}\r\n                item={linkItem} />\r\n            );\r\n        }\r\n        return <>\r\n            <div className=\"px-3 py-1 small\">{res.uq || uq}</div>\r\n            {content}\r\n        </>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { UqApi, Controller, UnitxApi, appInFrame, resLang, nav } from 'tonva-tools';\r\nimport { Entities, TuidMain, Action, Sheet, Query, Book, Map, Entity, Tuid, History, Pending } from '../../entities';\r\nimport { CLink } from '../link';\r\nimport { CBook, BookUI } from '../book';\r\nimport { CSheet, SheetUI } from '../sheet';\r\nimport { ActionUI, CAction } from '../action';\r\nimport { QueryUI, CQuery, CQuerySelect } from '../query';\r\nimport { CTuidMain, TuidUI, CTuid, CTuidInfo, CTuidSelect, CTuidEdit, CTuidList } from '../tuid';\r\nimport { MapUI, CMap } from '../map';\r\nimport { CEntity, EntityUI } from '../CVEntity';\r\nimport { PureJSONContent } from '../form/viewModel';\r\nimport { VUq } from './vUq';\r\nimport { CHistory, HistoryUI } from '../history';\r\nimport { CPending, PendingUI } from '../pending';\r\nimport { CApp } from '../CApp';\r\n\r\nexport type EntityType = 'sheet' | 'action' | 'tuid' | 'query' | 'book' | 'map' | 'history' | 'pending';\r\n\r\nexport interface UqUI {\r\n    CTuidMain?: typeof CTuidMain;\r\n    CTuidEdit?: typeof CTuidEdit;\r\n    CTuidList?: typeof CTuidList;\r\n    CTuidSelect?: typeof CTuidSelect;\r\n    CTuidInfo?: typeof CTuidInfo;\r\n    CQuery?: typeof CQuery;\r\n    CQuerySelect?: typeof CQuerySelect;\r\n    CMap?: typeof CMap;\r\n    CAction?: typeof CAction;\r\n    CSheet?: typeof CSheet;\r\n    CBook?: typeof CBook;\r\n    CHistory?: typeof CHistory;\r\n    CPending?: typeof CPending;\r\n    tuid?: {[name:string]: TuidUI};\r\n    sheet?: {[name:string]: SheetUI};\r\n    action?: {[name:string]: ActionUI};\r\n    map?: {[name:string]: MapUI};\r\n    query?: {[name:string]: QueryUI};\r\n    book?: {[name:string]: BookUI};    \r\n    history?: {[name:string]: HistoryUI};\r\n    pending?: {[name:string]: PendingUI};\r\n    res?: any;\r\n}\r\n\r\nfunction lowerPropertyName(entities: {[name:string]: EntityUI}) {\r\n    if (entities === undefined) return;\r\n    for (let i in entities) entities[i.toLowerCase()] = entities[i];\r\n}\r\n\r\nexport class CUq extends Controller /* implements Uq*/ {\r\n    private ui:any;\r\n    private CTuidMain: typeof CTuidMain;\r\n    private CTuidEdit: typeof CTuidEdit;\r\n    private CTuidList: typeof CTuidList;\r\n    private CTuidSelect: typeof CTuidSelect;\r\n    private CTuidInfo: typeof CTuidInfo;\r\n    private CQuery: typeof CQuery;\r\n    private CQuerySelect: typeof CQuerySelect;\r\n    private CMap: typeof CMap;\r\n    private CAction: typeof CAction;\r\n    private CSheet: typeof CSheet;\r\n    private CBook: typeof CBook;\r\n    private CHistory: typeof CHistory;\r\n    private CPending: typeof CPending;\r\n\r\n    constructor(cApp:CApp, uq:string, appId:number, uqId:number, access:string, ui:UqUI) {\r\n        super(resLang(ui.res));\r\n        this.cApp = cApp;\r\n        this.uq = uq;\r\n        this.id = uqId;\r\n        // 每一个ui都转换成小写的key的版本\r\n        lowerPropertyName(ui.tuid);\r\n        lowerPropertyName(ui.sheet);\r\n        lowerPropertyName(ui.map);\r\n        lowerPropertyName(ui.query);\r\n        lowerPropertyName(ui.action);\r\n        lowerPropertyName(ui.book);\r\n        lowerPropertyName(ui.history);\r\n        lowerPropertyName(ui.pending);\r\n        this.ui = ui;\r\n        this.CTuidMain = ui.CTuidMain || CTuidMain;\r\n        this.CTuidEdit = ui.CTuidEdit || CTuidEdit;\r\n        this.CTuidList = ui.CTuidList || CTuidList;\r\n        this.CTuidSelect = ui.CTuidSelect || CTuidSelect;\r\n        this.CTuidInfo = ui.CTuidInfo || CTuidInfo;\r\n        this.CQuery = ui.CQuery || CQuery;\r\n        this.CQuerySelect = ui.CQuerySelect || CQuerySelect;\r\n        this.CMap = ui.CMap || CMap;\r\n        this.CAction = ui.CAction || CAction;\r\n        this.CSheet = ui.CSheet || CSheet;\r\n        this.CBook = ui.CBook || CBook;\r\n        this.CHistory = ui.CHistory || CHistory;\r\n        this.CPending = ui.CPending || CPending;\r\n\r\n        let token = undefined;\r\n        let uqOwner:string, uqName:string;\r\n        let p = uq.split('/');\r\n        switch (p.length) {\r\n            case 1:\r\n                uqOwner = '$$$';\r\n                uqName = p[0];\r\n                break;\r\n            case 2:\r\n                uqOwner = p[0];\r\n                uqName = p[1];\r\n                break;\r\n            default:\r\n                console.log('uq must be uqOwner/uqName format');\r\n                return;\r\n        }\r\n\r\n        let hash = document.location.hash;\r\n        let baseUrl = hash===undefined || hash===''? \r\n            'debug/':'tv/';\r\n\r\n        let acc: string[];\r\n        if (access === null || access === undefined || access === '*') {\r\n            acc = [];\r\n        }\r\n        else {\r\n            acc = access.split(';').map(v => v.trim()).filter(v => v.length > 0);\r\n        }\r\n        let uqApi:UqApi;\r\n        if (uq === '$$$/$unitx') {\r\n            // 这里假定，点击home link之后，已经设置unit了\r\n            // 调用 UnitxApi会自动搜索绑定 unitx service\r\n            uqApi = new UnitxApi(appInFrame.unit);\r\n        }\r\n        else {\r\n            uqApi = new UqApi(baseUrl, uqOwner, uqName, acc, true);\r\n        }\r\n        this.entities = new Entities(this, uqApi, appId);\r\n    }\r\n\r\n    protected async internalStart() {\r\n    }\r\n\r\n    cApp:CApp;\r\n    uq: string;\r\n    id: number;\r\n    res: any;\r\n    entities:Entities;\r\n    error: string;\r\n    private schemaLoaded:boolean = false;\r\n\r\n    protected async loadEntites() {\r\n        await this.entities.loadAccess();\r\n    }\r\n\r\n    async loadSchema():Promise<string> {\r\n        try {\r\n            if (this.schemaLoaded === true) return;\r\n            await this.loadEntites();\r\n            if (this.id === undefined) this.id = this.entities.uqId;\r\n            for (let i in this.ui) {\r\n                let g = this.ui[i];\r\n                if (g === undefined) continue;\r\n                let {caption, collection} = g;\r\n                if (collection === undefined) continue;\r\n                for (let j in collection) {\r\n                    if (this.entities[i](j) === undefined) {\r\n                        console.warn(i + ':' + '\\'' + j + '\\' is not uq entity');\r\n                    }\r\n                }\r\n            }\r\n            this.schemaLoaded = true;\r\n            return;\r\n        }\r\n        catch(err) {\r\n            console.error(err);\r\n            return this.error = err;\r\n        }\r\n    }\r\n\r\n    async getQuerySearch(name:string):Promise<Query> {\r\n        let query = this.entities.query(name);\r\n        if (query === undefined) \r\n            alert(`QUERY ${name} 没有定义!`);\r\n        else {\r\n            await query.loadSchema();\r\n            let {returns} = query;\r\n            if (returns.length > 1) {\r\n                alert(`QUERY ${name} 返回多张表, 无法做QuerySearch`);\r\n            }\r\n        }\r\n        return query;\r\n    }\r\n    getTuidPlaceHolder(tuid:Tuid) {\r\n        let {tuidPlaceHolder, entity} = this.res;\r\n        let {name} = tuid;\r\n        let type:string;\r\n        if (entity !== undefined) {\r\n            let en = entity[name];\r\n            if (en !== undefined) {\r\n                type = en.label;\r\n            }\r\n        }\r\n        return (tuidPlaceHolder || 'Select');\r\n    }\r\n    getNone() {\r\n        let {none} = this.res;\r\n        return none || 'none';\r\n    }\r\n    protected isSysVisible = false;\r\n    protected isVisible(entity: Entity):boolean {\r\n        return entity.sys !== true || this.isSysVisible;\r\n    }\r\n\r\n    async navSheet(sheetTypeId:number, sheetId:number) {\r\n        let sheet = this.entities.sheetFromTypeId(sheetTypeId);\r\n        if (sheet === undefined) {\r\n            alert('sheetTypeId ' + sheetTypeId + ' is not exists!');\r\n            return;\r\n        }\r\n        let cSheet = this.cSheet(sheet);\r\n        await cSheet.startSheet(sheetId);\r\n    }\r\n\r\n    sheet(entityName:string) {return this.entities.sheet(entityName);}\r\n    action(entityName:string) {return this.entities.action(entityName);}\r\n    query(entityName:string) {return this.entities.query(entityName);}\r\n    book(entityName:string) {return this.entities.book(entityName);}\r\n    map(entityName:string) {return this.entities.map(entityName);}\r\n    history(entityName:string) {return this.entities.history(entityName);}\r\n    pending(entityName:string) {return this.entities.pending(entityName);}\r\n    tuid(entityName:string) {return this.entities.tuid(entityName)}\r\n    tuidDiv(entityName:string, divName:string) {\r\n        let tuid = this.entities.tuid(entityName);\r\n        if (tuid === undefined) return;\r\n        let {divs} = tuid;\r\n        if (divs === undefined) return;\r\n        return divs[divName];\r\n    }\r\n\r\n    cSheetFromName(entityName:string):CSheet {\r\n        let entity = this.entities.sheet(entityName);\r\n        if (entity !== undefined) return this.cSheet(entity);\r\n    }\r\n    cActionFromName(entityName:string) {\r\n        let entity = this.entities.action(entityName);\r\n        if (entity !== undefined) return this.cAction(entity);\r\n    }\r\n    cQueryFromName(entityName:string) {\r\n        let entity = this.entities.query(entityName);\r\n        if (entity !== undefined) return this.cQuery(entity);\r\n    }\r\n    cBookFromName(entityName:string) {\r\n        let entity = this.entities.book(entityName);\r\n        if (entity !== undefined) return this.cBook(entity);\r\n    }\r\n    cMapFromName(entityName:string) {\r\n        let entity = this.entities.map(entityName);\r\n        if (entity !== undefined) return this.cMap(entity);\r\n    }\r\n    cHistoryFromName(entityName:string) {\r\n        let entity = this.entities.history(entityName);\r\n        if (entity !== undefined) return this.cHistory(entity);\r\n    }\r\n    cPendingFromName(entityName:string) {\r\n        let entity = this.entities.pending(entityName);\r\n        if (entity !== undefined) return this.cPending(entity);\r\n    }\r\n    cTuidMainFromName(entityName:string) {\r\n        let entity = this.entities.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidMain(entity);\r\n    }\r\n    cTuidEditFromName(entityName:string) {\r\n        let entity = this.entities.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidEdit(entity);\r\n    }\r\n    cTuidInfoFromName(entityName:string) {\r\n        let entity = this.entities.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidInfo(entity);\r\n    }\r\n\r\n    cTuidSelectFromName(entityName:string) {\r\n        let entity = this.entities.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidSelect(entity);\r\n    }\r\n\r\n    cFromName(entityType:EntityType, entityName:string): CEntity<Entity, EntityUI> {\r\n        switch (entityType) {\r\n            case 'sheet':\r\n                let sheet = this.entities.sheet(entityName);\r\n                if (sheet === undefined) return;\r\n                return this.cSheet(sheet);\r\n            case 'action':\r\n                let action = this.entities.action(entityName);\r\n                if (action === undefined) return;\r\n                return this.cAction(action);\r\n            case 'tuid':\r\n                let tuid = this.entities.tuid(entityName);\r\n                if (tuid === undefined) return;\r\n                return this.cTuidMain(tuid);\r\n            case 'query':\r\n                let query = this.entities.query(entityName);\r\n                if (query === undefined) return;\r\n                return this.cQuery(query);\r\n            case 'book':\r\n                let book = this.entities.book(entityName);\r\n                if (book === undefined) return;\r\n                return this.cBook(book);\r\n            case 'map':\r\n                let map = this.entities.map(entityName);\r\n                if (map === undefined) return;\r\n                return this.cMap(map);\r\n            case 'history':\r\n                let history = this.entities.history(entityName);\r\n                if (history === undefined) return;\r\n                return this.cHistory(history);\r\n            case 'pending':\r\n                let pending = this.entities.pending(entityName);\r\n                if (pending === undefined) return;\r\n                return this.cPending(pending);\r\n        }\r\n    }\r\n\r\n    linkFromName(entityType:EntityType, entityName:string) {\r\n        return this.link(this.cFromName(entityType, entityName));\r\n    }\r\n\r\n    private getUI<T extends Entity, UI extends EntityUI>(t:T):{ui:UI, res:any} {\r\n        let ui, res;\r\n        let {name, typeName} = t;\r\n        if (this.ui !== undefined) {\r\n            let tUI = this.ui[typeName];\r\n            if (tUI !== undefined) {\r\n                ui = tUI[name];\r\n            }\r\n        }\r\n        let {entity} = this.res;\r\n        if (entity !== undefined) {\r\n            res = entity[name];\r\n        }\r\n        return {ui: ui || {}, res: res || {} };\r\n    }\r\n\r\n    link(cEntity:CEntity<Entity, EntityUI>) {\r\n        return new CLink(cEntity);\r\n    }\r\n\r\n    get tuidLinks() {\r\n        return this.entities.tuidArr.filter(v => this.isVisible(v)).map(v => this.link(this.cTuidMain(v)));\r\n    }\r\n    cTuidMain(tuid:TuidMain):CTuidMain {\r\n        let {ui, res} = this.getUI<TuidMain, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidMain || this.CTuidMain)(this, tuid, ui, res);\r\n    }\r\n    cTuidEdit(tuid:TuidMain):CTuidEdit {\r\n        let {ui, res} = this.getUI<TuidMain, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidEdit || this.CTuidEdit)(this, tuid, ui, res);\r\n    }\r\n    cTuidList(tuid:TuidMain):CTuidList {\r\n        let {ui, res} = this.getUI<TuidMain, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidList || this.CTuidList)(this, tuid, ui, res);\r\n    }\r\n    cTuidSelect(tuid:Tuid):CTuidSelect {\r\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid.owner || tuid);\r\n        return new (ui && ui.CTuidSelect || this.CTuidSelect)(this, tuid, ui, res);\r\n    }\r\n    cTuidInfo(tuid:TuidMain):CTuidInfo {\r\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidInfo || this.CTuidInfo)(this, tuid, ui, res);\r\n    }\r\n\r\n    cSheet(sheet:Sheet/*, sheetUI?:SheetUI, sheetRes?:any*/):CSheet {\r\n        let {ui, res} = this.getUI<Sheet, SheetUI>(sheet);\r\n        //if (sheetUI !== undefined) ui = sheetUI;\r\n        //if (sheetRes !== undefined) res = sheetRes;\r\n        //return new (ui && ui.CSheet || this.CSheet)(this, sheet, sheetUI, sheetRes);\r\n        return new (ui && ui.CSheet || this.CSheet)(this, sheet, ui, res);\r\n    }\r\n    get sheetLinks() { \r\n        return this.entities.sheetArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cSheet(v))\r\n        });\r\n    }\r\n\r\n    cAction(action:Action):CAction {\r\n        let {ui, res} = this.getUI<Action, ActionUI>(action);\r\n        return new (ui && ui.CAction || this.CAction)(this, action, ui, res);\r\n    }\r\n    get actionLinks() { \r\n        return this.entities.actionArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cAction(v))\r\n        });\r\n    }\r\n\r\n    cQuery(query:Query):CQuery {\r\n        let {ui, res} = this.getUI<Query, QueryUI>(query);\r\n        return new (ui && ui.CQuery || this.CQuery)(this, query, ui, res);\r\n    }\r\n    cQuerySelect(queryName:string):CQuerySelect {\r\n        let query = this.entities.query(queryName);\r\n        if (query === undefined) return;\r\n        let {ui, res} = this.getUI<Query, QueryUI>(query);\r\n        return new (ui && ui.CQuerySelect || this.CQuerySelect)(this, query, ui, res);\r\n    }\r\n    get queryLinks() {\r\n        return this.entities.queryArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cQuery(v))\r\n        });\r\n    }\r\n    \r\n    cBook(book:Book):CBook {\r\n        let {ui, res} = this.getUI<Book, BookUI>(book);\r\n        return new (ui && ui.CBook || this.CBook)(this, book, ui, res);\r\n    }\r\n    get bookLinks() { \r\n        return this.entities.bookArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cBook(v))\r\n        });\r\n    }\r\n    \r\n    cHistory(history:History):CHistory {\r\n        let {ui, res} = this.getUI<History, HistoryUI>(history);\r\n        return new (ui && ui.CHistory || this.CHistory)(this, history, ui, res);\r\n    }\r\n    get historyLinks() { \r\n        return this.entities.historyArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cHistory(v))\r\n        });\r\n    }\r\n    \r\n    cPending(pending:Pending):CPending {\r\n        let {ui, res} = this.getUI<Pending, PendingUI>(pending);\r\n        return new (ui && ui.CPending || this.CPending)(this, pending, ui, res);\r\n    }\r\n    get pendingLinks() { \r\n        return this.entities.pendingArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cPending(v))\r\n        });\r\n    }\r\n    \r\n    cMap(map:Map):CMap {\r\n        let {ui, res} = this.getUI<Map, MapUI>(map);\r\n        return new (ui && ui.CMap || this.CMap)(this, map, ui, res);\r\n    }\r\n    get mapLinks() { \r\n        return this.entities.mapArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cMap(v));\r\n        });\r\n    }\r\n\r\n    getTuidContent(tuid:Tuid): React.StatelessComponent<any> {\r\n        let {owner} = tuid;\r\n        if (owner === undefined) {\r\n            let {ui} = this.getUI<Tuid, TuidUI>(tuid);\r\n            return (ui && ui.content) || PureJSONContent;\r\n        }\r\n        else {\r\n            let {ui} = this.getUI<Tuid, TuidUI>(owner);\r\n            return (ui && ui.divs && ui.divs[tuid.name].content) || PureJSONContent;\r\n        }\r\n    }\r\n\r\n    async showTuid(tuid:Tuid, id:number):Promise<void> {\r\n        let {owner} = tuid;\r\n        let c = this.cTuidInfo(owner || (tuid as TuidMain));\r\n        await c.start(id);\r\n    }\r\n\r\n    protected get VUq():typeof VUq {return VUq}\r\n\r\n    render() {\r\n        let v = new (this.VUq)(this);\r\n        return v.render();\r\n    }\r\n}\r\n\r\n","export * from './cUq';\r\nexport * from './vUq';","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport className from 'classnames';\r\nimport { List, LMR, FA } from 'tonva-react-form';\r\nimport { Page, nav } from 'tonva-tools';\r\nimport { tv } from '../../tools';\r\nimport { Map } from '../../entities';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CMap, MapItem, MapKey, MapUI } from './cMap';\r\nimport { PureJSONContent } from '../form/viewModel';\r\n\r\nexport class VMapMain extends VEntity<Map, MapUI, CMap> {\r\n    private isFrom: boolean;\r\n\r\n    async open(param?:any) {\r\n        this.isFrom = this.controller.isFrom;\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    itemRender = (item:MapItem, index:number) => {\r\n        return <this.ItemRow item={item} />;\r\n    }\r\n\r\n    private ItemRow = observer(({item}: {item:MapItem}) => {\r\n        let {tuid, box, children, isLeaf, keyIndex, values} = item;\r\n        let keyUI = this.controller.keyUIs[keyIndex];\r\n        let {content:keyContent, valuesContent, none:keyNone} = keyUI;\r\n        let add:any, remove:any;\r\n        if (this.isFrom === false) {\r\n            add = <button className=\"btn btn-link btn-sm\" onClick={()=>this.controller.addClick(item)}>\r\n                <FA name=\"plus\" />\r\n            </button>;\r\n            remove = <button className=\"btn btn-link btn-sm\" onClick={()=>this.controller.removeClick(item)}>\r\n                <FA className=\"text-info\" name=\"trash\" />\r\n            </button>;\r\n        }\r\n        let right:any;\r\n        if (isLeaf === false) {\r\n            if (keyIndex === 0)\r\n                right = add;\r\n            else\r\n                right = <>{remove} &nbsp; {add}</>;\r\n        }\r\n        else if (keyIndex > 0) {\r\n            right = remove;\r\n        }\r\n        let content:any, border:any, valuesView:any;\r\n        if (isLeaf === true) {\r\n            content = undefined; //<div className=\"ml-5\">leaf</div>;\r\n            if (values) {\r\n                //valuesView = null; // 现在不显示values content了\r\n                valuesView = (valuesContent || PureJSONContent)(values, this.x);\r\n            }\r\n        }\r\n        else {\r\n            border = \"border-bottom\";\r\n            let none = keyNone && keyNone(this.x);\r\n            content = <List \r\n                className=\"ml-4\" \r\n                items={children} \r\n                item={{onClick:undefined, render:this.itemRender}}\r\n                none={none} />\r\n        }\r\n        let left = <div className=\"py-1 pr-3\">{tv(box, keyContent, this.x)}</div>;\r\n        return <div className=\"d-flex flex-column\">\r\n            <LMR className={className('px-3', 'py-2', border)}\r\n                left={left}\r\n                right={right}\r\n            >\r\n                <div className=\"py-1\">{valuesView}</div>\r\n            </LMR>\r\n            {content}\r\n        </div>;\r\n    });\r\n\r\n    protected get view() { return () => <Page header={this.label}>\r\n            <List items={this.controller.items} item={{className:'my-2', onClick:undefined, render:this.itemRender}} />\r\n        </Page>\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { VEntity } from \"../CVEntity\";\r\nimport { MapUI, CMap } from \"./cMap\";\r\nimport { Map } from \"../../entities\";\r\nimport { Page } from \"tonva-tools\";\r\nimport { VForm } from '../form';\r\n\r\nexport class VInputValues extends VEntity<Map, MapUI, CMap> {\r\n    private vForm: VForm;\r\n\r\n    async open(param?:any) {\r\n        this.vForm = this.createForm(this.onValuesSubmit);\r\n        this.openPageElement(<this.view />);\r\n    }\r\n\r\n    private onValuesSubmit = async () => {\r\n        this.ceasePage();\r\n        let values = this.vForm.getValues();\r\n        this.returnCall(values);\r\n    }\r\n\r\n    private view = () => {\r\n        return <Page>\r\n            {this.vForm.render()}\r\n        </Page>\r\n    }\r\n}\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\nimport { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Map, Tuid, BoxId, Field, TuidMain, fieldDefaultValue } from \"../../entities\";\r\nimport { VMapMain } from \"./vMain\";\r\nimport { observable } from \"mobx\";\r\nimport { PureJSONContent } from '../form/viewModel';\r\nimport { VInputValues } from './inputValues';\r\n\r\nexport interface MapKey {\r\n    content: (values, x?:any) => JSX.Element;\r\n    valuesContent?: (values, x?:any) => JSX.Element;\r\n    none?: (x:any)=>string;\r\n}\r\n\r\nexport interface MapUI extends EntityUI {\r\n    CMap?: typeof CMap;\r\n    keys?: MapKey[],\r\n}\r\n\r\nexport class MapItem {\r\n    parent: MapItem;\r\n    tuid: Tuid;\r\n    box: BoxId;\r\n    isLeaf: boolean;\r\n    keyIndex:number;\r\n    children: MapItem[] = observable.array([], {deep: true});\r\n    values: any;\r\n    constructor(parent:MapItem, tuid:Tuid, box:BoxId, keyIndex:number) {\r\n        this.parent = parent;\r\n        this.tuid = tuid;\r\n        this.box = box;\r\n        this.keyIndex = keyIndex;\r\n        this.isLeaf = false;\r\n    }\r\n}\r\n\r\nexport class CMap extends CEntity<Map, MapUI> {\r\n    isFrom: boolean;\r\n    items:MapItem[];\r\n    keyFields: Field[];\r\n    keyUIs: MapKey[];\r\n\r\n    protected async internalStart() {\r\n        let {keys, schemaFrom} = this.entity;\r\n        this.isFrom = schemaFrom !== undefined;\r\n        let q = this.entity.queries.all;\r\n        let result = await q.query({});\r\n        //let data = await this.entity.unpackReturns(res);\r\n        let ret = result.ret;\r\n        let keysLen = keys.length;\r\n        this.keyUIs = _.clone(this.ui.keys || []);\r\n        this.keyFields = [];\r\n        let retFields = q.returns[0].fields;\r\n        for (let i=0; i<keysLen; i++) {\r\n            this.keyFields.push(retFields[i]);\r\n            if (i >= this.keyUIs.length) {\r\n                this.keyUIs.push({\r\n                    content: PureJSONContent,\r\n                });\r\n            }\r\n        }\r\n        this.items = observable([]);\r\n        let item:MapItem = undefined;\r\n        for (let r of ret) {\r\n            let newItem = this.addItem(item, r);\r\n            if (newItem !== undefined) {\r\n                this.items.push(newItem);\r\n                item = newItem;\r\n            }\r\n        }\r\n\r\n        await this.openVPage(this.VMapMain);\r\n    }\r\n\r\n    private createItem(parent:MapItem, tuid:Tuid, box:BoxId, keyIndex:number, values?:any) {\r\n        let item = new MapItem(parent, tuid, box, keyIndex);\r\n        if (keyIndex === this.keyFields.length - 1) {\r\n            item.isLeaf = true;\r\n            item.values = values;\r\n        }\r\n        return item;\r\n    }\r\n\r\n    addItem(item:MapItem, row:any):MapItem {\r\n        let ret:MapItem = undefined;\r\n        let keysLen = this.keyFields.length;\r\n        let p = item;\r\n        for (let i=0;i<keysLen;i++) {\r\n            let key = this.keyFields[i];\r\n            let {name} = key;\r\n            let tuid = key._tuid;\r\n            let val:BoxId = row[name];\r\n            if (val === undefined) break;\r\n            let {id} = val;\r\n            if (i === 0) {\r\n                if (id === 0) continue;\r\n                if (p === undefined || p.box.id !== id) {\r\n                    ret = p = this.createItem(undefined, tuid, val, i, row);\r\n                }\r\n                continue;\r\n            }\r\n            let {children, box} = p;\r\n            let len = children.length;\r\n            if (len > 0) {\r\n                let n = children[len-1];\r\n                if (n.box.id === id) {\r\n                    p = n;\r\n                    continue;\r\n                }\r\n            }\r\n            if (id > 0) {\r\n                children.push(p = this.createItem(p, tuid, val, i, row));\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    async searchOnKey(keyField:Field, param):Promise<number> {\r\n        let {_tuid, _ownerField} = keyField;\r\n        let cTuidSelect = this.cUq.cTuidSelect(_tuid);\r\n        let callParam = param;\r\n        if (_ownerField !== undefined) {\r\n            callParam = param[_ownerField.name];\r\n            if (typeof callParam === 'object') {\r\n                callParam = callParam.id;\r\n            }\r\n        }\r\n        let ret = await cTuidSelect.call(callParam);\r\n        return _tuid.getIdFromObj(ret);\r\n    }\r\n\r\n    addClick = async(item:MapItem) => {\r\n        let {keyIndex, children} = item;\r\n        let keysLen = this.keyFields.length;\r\n        let keysLast = keysLen-1;\r\n        let idx = keyIndex + 1;\r\n        if (idx >= keysLen) return;\r\n        let keyField = this.keyFields[idx];\r\n        let kn = keyField.name;\r\n        let tuid = keyField._tuid;\r\n        let searchParam = {} as any;\r\n        let data = {} as any;\r\n        for (let p=item;p!==undefined;p=p.parent) {\r\n            let {keyIndex:ki, box} = p;\r\n            let kn = this.keyFields[ki].name;\r\n            //searchParam[kn] = data['_' + kn] = box.id;\r\n            searchParam[kn] = data[kn] = box.id;\r\n        }\r\n\r\n        let id = await this.searchOnKey(keyField, searchParam);\r\n        if (id === undefined || id <= 0) return;\r\n        tuid.useId(id);\r\n        let idBox = tuid.boxId(id);\r\n        let arr1 = {} as any;\r\n        let values:any = {};\r\n        if (keyIndex+1===keysLast) {\r\n            tuid.useId(id);\r\n            //values[kn] = arr1['_' + kn] = idBox;\r\n            values[kn] = arr1[kn] = idBox;\r\n            if (this.entity.fields.length > 0) {\r\n                let ret = await this.vCall(VInputValues, data);\r\n                for (let i in ret) {\r\n                    //values[i] = arr1['_' + i] = ret[i];\r\n                    values[i] = arr1[i] = ret[i];\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            //values[kn] = data['_' + kn] = idBox;\r\n            values[kn] = data[kn] = idBox;\r\n            for (let i=idx+1;i<keysLast;i++) {\r\n                //data['_' + this.keyFields[i].name] = 0;\r\n                data[this.keyFields[i].name] = 0;\r\n            }\r\n            // 填map的key field 0 值\r\n            //arr1['_' + this.keyFields[keysLast].name] = 0;\r\n            arr1[this.keyFields[keysLast].name] = 0;\r\n            let {fields} = this.entity;\r\n            for (let f of fields) {\r\n                let {name, type, null:nullable} = f;\r\n                if (!(nullable === true)) {\r\n                    //arr1['_' + f.name] = fieldDefaultValue(type);\r\n                    arr1[f.name] = fieldDefaultValue(type);\r\n                }\r\n            }\r\n        }\r\n        data.arr1 = [arr1];\r\n        await this.entity.actions.add.submit(data);\r\n        let rowIndex = children.findIndex(v => v.box.id === id);\r\n        if (rowIndex < 0) {\r\n            children.push(this.createItem(item, tuid, idBox, idx, values));\r\n        }\r\n        else {\r\n            let {fields} = this.entity;\r\n            if (fields !== undefined && fields.length > 0) {\r\n                let row = children[rowIndex];\r\n                children.splice(rowIndex, 1);\r\n                row.values = values;\r\n                /*\r\n                for (let f of fields) {\r\n                    let {name:fn} = f;\r\n                    row.values[fn] = values[fn];\r\n                }*/\r\n                children.splice(rowIndex, 0, row);\r\n            }\r\n        }\r\n        this.removeCeased();\r\n    }\r\n\r\n    removeClick = async(item:MapItem) => {\r\n        let keyField = this.keyFields[item.keyIndex];\r\n        let tuid = keyField._tuid;\r\n        let cTuidMain = this.cUq.cTuidMain(tuid.Main as TuidMain);\r\n        let label = cTuidMain.getLable(tuid);\r\n        let confirmDelete:_.TemplateExecutor = \r\n            this.res.confirmDelete \r\n            || _.template('do you really want to remove ${label}?');\r\n        if (confirm(confirmDelete({label:label})) === false) return;\r\n        let map:Map = this.entity;\r\n        let data = {} as any;\r\n        let arr1 = data['arr1'] = [];\r\n        let v0 = {} as any;\r\n        arr1.push(v0);\r\n        for (let p=item; p!==undefined;p=p.parent) {\r\n            let ki=p.keyIndex;\r\n            //v0['_'+this.keyFields[ki].name] = p.box.id;\r\n            v0[this.keyFields[ki].name] = p.box.id;\r\n        }\r\n        let len = this.keyFields.length;\r\n        for (let i=item.keyIndex+1; i<len; i++) {\r\n            let k = this.keyFields[i];\r\n            //v0['_'+k.name] = -1;\r\n            v0[k.name] = -1;\r\n        }\r\n        await map.actions.del.submit(data);\r\n        let children = item.parent.children;\r\n        let index = children.findIndex(v => v === item);\r\n        if (index >= 0) children.splice(index, 1);\r\n    }\r\n\r\n    protected get VMapMain():typeof VMapMain {return VMapMain}\r\n}\r\n","export * from './cMap';\r\nexport * from './vMain';\r\n","import * as React from 'react';\r\nimport { TuidMain, History, Entity } from '../../entities';\r\nimport { Page } from 'tonva-tools';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CHistory, HistoryUI } from './cHistory';\r\n\r\nexport class VHistoryMain extends VEntity<History, HistoryUI, CHistory> {\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        History\r\n    </Page>;\r\n}\r\n","import { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { History } from \"../../entities\";\r\nimport { VHistoryMain } from \"./vHistoryMain\";\r\n\r\nexport interface HistoryUI extends EntityUI {\r\n    CHistory?: typeof CHistory;\r\n    main: typeof VHistoryMain,\r\n}\r\n\r\nexport class CHistory extends CEntity<History, HistoryUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VHistoryMain);\r\n    }\r\n\r\n    protected get VHistoryMain():typeof VHistoryMain {return VHistoryMain}\r\n}\r\n","export * from './cHistory';\r\nexport * from './vHistoryMain';\r\n","import * as React from 'react';\r\nimport { VPage, Page } from 'tonva-tools';\r\nimport { jsonStringify } from '../../tools';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CAction, ActionUI } from './cAction';\r\nimport { Action } from '../../entities';\r\n\r\nexport class VActionMain extends VEntity<Action, ActionUI, CAction> {\r\n    protected vForm: VForm;\r\n    protected returns: any;\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        this.openPage(this.mainPage);\r\n    }\r\n\r\n    private onSubmit = async () => {\r\n        let values = this.vForm.getValues();\r\n        this.returns = await this.controller.submit(values);\r\n        this.closePage();\r\n        this.openPage(this.resultPage);\r\n    }\r\n\r\n    protected mainPage = () => {\r\n        let {label} = this.controller;\r\n        return <Page header={label}>\r\n            {this.vForm.render('mx-3 my-2')}\r\n        </Page>;\r\n    }\r\n\r\n    protected resultPage = () => {\r\n        let {label} = this.controller;\r\n        return <Page header={label} back=\"close\">\r\n            完成！\r\n            <pre>\r\n                {jsonStringify(this.returns)}\r\n            </pre>\r\n        </Page>;\r\n    }\r\n}\r\n","import { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Action } from \"../../entities\";\r\nimport { VActionMain } from \"./vActionMain\";\r\n\r\nexport interface ActionUI extends EntityUI {\r\n    CAction?: typeof CAction;\r\n    //main: typeof VActionMain,\r\n}\r\n\r\nexport class CAction extends CEntity<Action, ActionUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VActionMain);\r\n    }\r\n\r\n    protected get VActionMain():typeof VActionMain {return VActionMain}\r\n\r\n    async submit(values:any) {\r\n        return this.entity.submit(values);\r\n    }\r\n}\r\n","export * from './cAction';\r\nexport * from './vActionMain';\r\n","import * as React from 'react';\r\nimport { TuidMain, Pending, Entity } from '../../entities';\r\nimport { Page } from 'tonva-tools';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CPending, PendingUI } from './cPending';\r\n\r\nexport class VPendingMain extends VEntity<Pending, PendingUI, CPending> {\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        pending\r\n    </Page>;\r\n}\r\n","import { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Pending } from \"../../entities\";\r\nimport { VPendingMain } from \"./vPendingMain\";\r\n\r\nexport interface PendingUI extends EntityUI {\r\n    CPending?: typeof CPending;\r\n    main: typeof VPendingMain,\r\n}\r\n\r\nexport class CPending extends CEntity<Pending, PendingUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VPendingMain);\r\n    }\r\n\r\n    protected get VPendingMain():typeof VPendingMain {return VPendingMain}\r\n}\r\n","export * from './cPending';\r\nexport * from './vPendingMain';\r\n","import * as React from 'react';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\n\r\nexport abstract class ItemEdit {\r\n    protected name: string;\r\n    protected itemSchema: ItemSchema;\r\n    protected uiItem:UiItem;\r\n    protected value: any;\r\n    protected label: string;\r\n\r\n    @observable protected isChanged: boolean = false;\r\n    protected newValue: any;\r\n\r\n    constructor(itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any) {\r\n        this.itemSchema = itemSchema;\r\n        this.uiItem = uiItem\r\n        this.value = value;\r\n        let {name} = itemSchema;\r\n        this.name = name;\r\n        this.label = label;\r\n    }\r\n    async start():Promise<any> {\r\n        return await this.internalStart();\r\n    }\r\n\r\n    protected abstract internalStart():Promise<any>;\r\n\r\n    async end():Promise<any> {\r\n        await this.internalEnd()\r\n    }\r\n\r\n    protected async internalEnd():Promise<void> {nav.pop()}\r\n}\r\n","\r\nimport {setCenterToken} from './uqApi';\r\nimport {WSChannel} from './wsChannel';\r\n\r\nexport const netToken = {\r\n    set(userId:number, token:string) {\r\n        setCenterToken(userId, token);\r\n        WSChannel.setCenterToken(token);\r\n    },\r\n    clear() {\r\n        setCenterToken(0, undefined);\r\n        WSChannel.setCenterToken(undefined);\r\n    }\r\n};\r\n","import {CenterApi} from '../net';\r\nimport {User, decodeUserToken} from '../user';\r\n//import { nav } from '../ui';\r\n\r\nexport class UserApi extends CenterApi {\r\n    async login(params: {user: string, pwd: string, guest: number}): Promise<any> {\r\n        //(params as any).device = nav.local.device.get();\r\n        let ret = await this.get('login', params);\r\n        switch (typeof ret) {\r\n            default: return;\r\n            case 'string': return decodeUserToken(ret);\r\n            case 'object':\r\n                let token = ret.token;\r\n                let user = decodeUserToken(token);\r\n                let {nick, icon} = ret;\r\n                if (nick) user.nick = nick;\r\n                if (icon) user.icon = icon;\r\n                return user;\r\n        }\r\n        // !== undefined) return decodeToken(token);\r\n    }\r\n    async register(params: {\r\n        nick:string, \r\n        user:string, \r\n        pwd:string,\r\n        country:number, \r\n        mobile:number, \r\n        email:string,\r\n        verify:string,\r\n    }): Promise<any>\r\n    {\r\n        return await this.post('register', params);\r\n    }\r\n\r\n    async setVerify(account:string, type:'mobile'|'email') {\r\n        return await this.post('set-verify', {account:account, type:type});\r\n    }\r\n\r\n    async checkVerify(account:string, verify:string) {\r\n        return await this.post('check-verify', {account:account, verify:verify});\r\n    }\r\n\r\n    async isExists(account:string) {\r\n        return await this.get('is-exists', {account:account});\r\n    }\r\n\r\n    async resetPassword(account:string, password:string, verify:string, type:'mobile'|'email') {\r\n        return await this.post('reset-password', {account:account, password, verify, type});\r\n    }\r\n    \r\n    async userSetProp(prop:string, value:any) {\r\n        await this.post('tie/user-set-prop', {prop:prop, value:value});\r\n    }\r\n}\r\n\r\nconst userApi = new UserApi('tv/user/', undefined);\r\n\r\nexport default userApi;\r\n","\r\nconst zero = '00000000000000';\r\nexport function left0(num:number, fix:number) {\r\n    if (num === undefined) return '';\r\n    let r = num.toString();\r\n    let len = fix - r.length;\r\n    if (len <= 0) return r;\r\n    return zero.substr(0, len) + r;\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport {User} from '../user';\r\nimport {nav} from './nav';\r\nimport {Page} from './page';\r\nimport { isDevelopment } from '../net';\r\n\r\nexport abstract class Controller {\r\n    readonly res: any;\r\n    readonly x: any;\r\n    icon: string|JSX.Element;\r\n    label:string;\r\n    readonly isDev:boolean = isDevelopment;\r\n    get user():User {return nav.user}\r\n    get isLogined():boolean {\r\n        let {user} = nav;\r\n        if (user === undefined) return false;\r\n        return user.id > 0;\r\n    }\r\n    constructor(res:any) {\r\n        this.res = res || {};\r\n        this.x = this.res.x || {};\r\n    }\r\n\r\n    private receiveHandlerId:number;\r\n    private disposer:()=>void;\r\n\r\n    private dispose() {\r\n        // message listener的清理\r\n        nav.unregisterReceiveHandler(this.receiveHandlerId);\r\n        this.onDispose();\r\n    }\r\n\r\n    protected onDispose() {\r\n    }\r\n\r\n    protected async openVPage<C extends Controller>(vp: new (controller: C)=>VPage<C>, param?:any):Promise<void> {\r\n        await (new vp((this as any) as C)).open(param);\r\n    }\r\n\r\n    protected renderView<C extends Controller>(view: new (controller: C)=>View<C>, param?:any) {\r\n        return (new view((this as any) as C)).render(param);\r\n    }\r\n\r\n    async event(type:string, value:any) {\r\n        await this.onEvent(type, value);\r\n    }\r\n\r\n    protected async onEvent(type:string, value:any) {\r\n    }\r\n\r\n    protected msg(text:string) {\r\n        alert(text);\r\n    }\r\n    protected errorPage(header:string, err:any) {\r\n        this.openPage(<Page header=\"App error!\">\r\n            <pre>\r\n                {typeof err === 'string'? err : err.message}\r\n            </pre>\r\n        </Page>);\r\n    }\r\n\r\n    protected onMessage(message:any):Promise<void> {\r\n        return;\r\n    }\r\n\r\n    private onMessageReceive = async (message:any):Promise<void> => {\r\n        await this.onMessage(message);\r\n    }\r\n\r\n    protected async beforeStart():Promise<boolean> {\r\n        /*\r\n        console.log('this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);');\r\n        this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);\r\n        console.log('return true');\r\n        */\r\n        return true;\r\n    }\r\n    protected registerReceiveHandler() {\r\n        this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);\r\n    }\r\n\r\n    protected abstract internalStart(param?:any):Promise<void>;\r\n    async start(param?:any):Promise<void> {\r\n        this.disposer = this.dispose.bind(this);\r\n        this.registerReceiveHandler();\r\n        let ret = await this.beforeStart();\r\n        if (ret === false) return;\r\n        await this.internalStart(param);\r\n    }\r\n\r\n    get isCalling():boolean {return this._resolve_$ !== undefined}\r\n\r\n    private _resolve_$:((value:any) => void)[];\r\n    async call<T>(param?:any):Promise<T> {\r\n        if (this._resolve_$ === undefined) this._resolve_$ = [];\r\n        return new Promise<T> (async (resolve, reject) => {\r\n            this._resolve_$.push(resolve);\r\n            await this.start(param);\r\n        });\r\n    }\r\n\r\n    async vCall<C extends Controller>(vp: new (controller: C)=>VPage<C>, param?:any):Promise<any> {\r\n        if (this._resolve_$ === undefined) this._resolve_$ = [];\r\n        return new Promise<any> (async (resolve, reject) => {\r\n            this._resolve_$.push(resolve);\r\n            await (new vp(this as any)).open(param);\r\n        });\r\n    }\r\n\r\n    returnCall(value:any) {\r\n        if (this._resolve_$ === undefined) return;\r\n        let resolve = this._resolve_$.pop();\r\n        if (resolve === undefined) {\r\n            alert('the Controller call already returned, or not called');\r\n            return;\r\n        }\r\n        resolve(value);\r\n    }\r\n\r\n    openPage(page:JSX.Element) {\r\n        nav.push(page, this.disposer);\r\n        this.disposer = undefined;\r\n    }\r\n\r\n    replacePage(page:JSX.Element) {\r\n        nav.replace(page, this.disposer);\r\n        this.disposer = undefined;\r\n    }\r\n\r\n    backPage() {\r\n        nav.back();\r\n    }\r\n\r\n    closePage(level?:number) {\r\n        nav.pop(level);\r\n    }\r\n\r\n    ceasePage(level?:number) {\r\n        nav.ceaseTop(level);\r\n    }\r\n\r\n    removeCeased() {\r\n        nav.removeCeased();\r\n    }\r\n\r\n    regConfirmClose(confirmClose: ()=>Promise<boolean>) {\r\n        nav.regConfirmClose(confirmClose);\r\n    }\r\n}\r\n\r\n\r\nexport abstract class View<C extends Controller> {\r\n    protected controller: C;\r\n    protected readonly res: any;\r\n    protected readonly x: any;\r\n\r\n    constructor(controller: C) {\r\n        this.controller = controller;\r\n        this.res = controller.res;\r\n        this.x = controller.x;\r\n    }\r\n\r\n    protected get isDev() {return isDevelopment}\r\n\r\n    abstract render(param?:any): JSX.Element;\r\n\r\n    protected renderVm(vm: new (controller: C)=>View<C>, param?:any) {\r\n        return (new vm(this.controller)).render(param);\r\n    }\r\n\r\n    protected async openVPage(vp: new (controller: C)=>VPage<C>, param?:any):Promise<void> {\r\n        await (new vp(this.controller)).open(param);\r\n    }\r\n\r\n    protected async event(type:string, value?:any) {\r\n        /*\r\n        if (this._resolve_$_ !== undefined) {\r\n            await this._resolve_$_({type:type, value:value});\r\n            return;\r\n        }*/\r\n        await this.controller.event(type, value);\r\n    }\r\n\r\n    async vCall<C extends Controller>(vp: new (controller: C)=>VPage<C>, param?:any):Promise<any> {\r\n        return await this.controller.vCall(vp, param);\r\n    }\r\n\r\n    protected returnCall(value:any) {\r\n        this.controller.returnCall(value);\r\n    }\r\n\r\n    protected openPage(view: React.StatelessComponent<any>, param?:any) {\r\n        this.controller.openPage(React.createElement(view, param));\r\n    }\r\n\r\n    protected replacePage(view: React.StatelessComponent<any>, param?:any) {\r\n        this.controller.replacePage(React.createElement(view, param));\r\n    }\r\n\r\n    protected openPageElement(page: JSX.Element) {\r\n        this.controller.openPage(page);\r\n    }\r\n\r\n    protected replacePageElement(page: JSX.Element) {\r\n        this.controller.replacePage(page);\r\n    }\r\n\r\n    protected backPage() {\r\n        this.controller.backPage();\r\n    }\r\n\r\n    protected closePage(level?:number) {\r\n        this.controller.closePage(level);\r\n    }\r\n\r\n    protected ceasePage(level?:number) {\r\n        this.controller.ceasePage(level);\r\n    }\r\n\r\n    protected removeCeased() {\r\n        this.controller.removeCeased();\r\n    }\r\n\r\n    protected regConfirmClose(confirmClose: ()=>Promise<boolean>) {\r\n        this.controller.regConfirmClose(confirmClose);\r\n    }\r\n}\r\n\r\nexport abstract class VPage<C extends Controller> extends View<C> {\r\n    abstract open(param?:any):Promise<void>;\r\n\r\n    render(param?:any):JSX.Element {return null;}\r\n}\r\n\r\nexport type TypeVPage<C extends Controller> = new (controller: C)=>VPage<C>;\r\n\r\n","export * from './schema';\r\nexport * from './uiSchema';\r\n","import {observable, IObservableArray, computed} from 'mobx';\r\nimport {uid} from './uid';\r\n\r\nexport abstract class PageItems<T> {\r\n    constructor(itemObservable:boolean = false) {\r\n        this._items = observable.array<T>([], {deep:itemObservable});\r\n    }\r\n    private isFirst: boolean = true;\r\n    @observable loading: boolean = false;\r\n    @observable private beforeLoad: boolean = true;\r\n    @observable protected loaded: boolean = false;\r\n    protected _items:IObservableArray<T>;\r\n    @observable allLoaded: boolean = false;\r\n    @computed get items():IObservableArray<T> {\r\n        if (this.beforeLoad === true) return null;\r\n        if (this.loaded === false) return undefined;\r\n        return this._items;\r\n    }\r\n\r\n    @observable topDiv:string;\r\n    @observable bottomDiv:string;\r\n    scrollToTop() {\r\n        this.topDiv = '$$'+uid();\r\n    }\r\n    scrollToBottom() {\r\n        this.bottomDiv = '$$'+uid();\r\n    }\r\n\r\n    protected param: any;\r\n    protected firstSize = 100;\r\n    protected pageStart = undefined;\r\n    protected pageSize = 30;\r\n    protected appendPosition:'head'|'tail' = 'tail';\r\n\r\n    protected abstract async load(param:any, pageStart:any, pageSize:number):Promise<T[]>;\r\n    protected abstract setPageStart(item:T);\r\n\r\n    reset() {\r\n        this.isFirst = true;\r\n        this.beforeLoad = true;\r\n        this.loaded = false;\r\n        this.param = undefined;\r\n        this.allLoaded = false;\r\n        this._items.clear();\r\n        this.setPageStart(undefined);\r\n    }\r\n\r\n    append(item:T) {\r\n        if (this.appendPosition === 'tail')\r\n            this._items.unshift(item);\r\n        else\r\n            this._items.push(item);\r\n    }\r\n\r\n    async first(param:any):Promise<void> {\r\n        this.reset();\r\n        this.beforeLoad = false;\r\n        this.param = param;\r\n        await this.more();        \r\n    }\r\n\r\n    async more():Promise<void> {\r\n        if (this.allLoaded === true) return;\r\n        if (this.loading === true) return;\r\n        this.loading = true;\r\n        let pageSize = this.pageSize + 1;\r\n        if (this.isFirst === true) {\r\n            if (this.firstSize > this.pageSize) pageSize = this.firstSize+1;\r\n        }\r\n        let ret = await this.load(\r\n                this.param, \r\n                this.pageStart,\r\n                pageSize);\r\n        this.loading = false;\r\n        this.loaded = true;\r\n        let len = ret.length;\r\n        if (this.isFirst===true && len>this.firstSize ||\r\n            this.isFirst===false && len>this.pageSize)\r\n        {\r\n            this.allLoaded = false;\r\n            --len;\r\n            ret.splice(len, 1);\r\n        }\r\n        else {\r\n            this.allLoaded = true;\r\n        }\r\n        if (len === 0) {\r\n            this._items.clear();\r\n            return;\r\n        }\r\n        this.setPageStart(ret[len-1]);\r\n        if (this.appendPosition === 'tail')\r\n            this._items.push(...ret);\r\n        else\r\n            this._items.unshift(...ret.reverse());\r\n        this.isFirst = false;\r\n    }\r\n}\r\n","import {observable, computed} from 'mobx';\r\n\r\nexport interface Id {\r\n    id: number;\r\n}\r\n\r\nexport abstract class CacheIds<T extends Id> {\r\n    constructor(maxCount:number = 100) {\r\n        this.maxCount = maxCount;\r\n    }\r\n    private maxCount:number;\r\n    private arr:T[] = [];\r\n    @observable dict = new Map<number, T>();\r\n\r\n    loadIds(ids:number[]) {\r\n        let arr:number[] = [];\r\n        for (let id of ids) {\r\n            if (id === null) continue;\r\n            let item = this.dict.get(id);\r\n            if (item === undefined) {\r\n                arr.push(id);\r\n                item = {id:id} as T;\r\n                this.dict.set(id, item);\r\n            }\r\n        }                \r\n        this.loadId(arr);\r\n    }\r\n\r\n    get(id:number):T {\r\n        if (id === undefined || id === null) return null;\r\n        let item = this.dict.get(id);\r\n        if (item === undefined) {\r\n            this.dict.set(id, {id:id} as T);\r\n            this.loadId([id]);\r\n            item = this.dict.get(id);\r\n        }\r\n        return item;\r\n    }\r\n    private setItem(id:number, item:T) {\r\n        if (item === undefined) {\r\n            this.dict.set(id, null);\r\n            this.arr.push({id: id} as T);\r\n        }\r\n        else {\r\n            this.dict.set(id, item);\r\n            this.arr.push(item);\r\n        }\r\n        if (this.arr.length > this.maxCount) {\r\n            item = this.arr.shift();\r\n            this.dict.delete(item.id);\r\n        }\r\n    }\r\n    private async loadId(ids:number[]) {\r\n        let items = await this._loadIds(ids);\r\n        if (items === undefined) {\r\n            for (let id of ids) {\r\n                if (id === null) continue;\r\n                let item = await this._loadId(id);\r\n                this.setItem(id, item);\r\n            }\r\n        }\r\n        else {\r\n            for (let id of ids) {\r\n                let item = items.find(v => v.id === id);\r\n                this.setItem(id, item);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected abstract async _loadIds(ids:number[]):Promise<T[]>;\r\n    protected abstract async _loadId(id:number):Promise<T>;\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {FormView, FormProps} from './formView';\r\n\r\nexport function tonvaDebug() {\r\n    let a = 0;\r\n}\r\n\r\nexport interface TonvaFormProps extends FormProps {\r\n    className?: string;\r\n    initValues?: any;\r\n}\r\n\r\n@observer \r\nexport class TonvaForm extends React.Component<TonvaFormProps, {}> {\r\n    formView: FormView;\r\n    constructor(props:TonvaFormProps) {\r\n        super(props);\r\n        this.formView = new FormView(this.props);\r\n    }\r\n    componentWillMount() {\r\n        this.formView.setInitValues(this.props.initValues);\r\n    }\r\n    debug() {\r\n        let s = null;\r\n    }\r\n    render() {\r\n        let {className, children, initValues} = this.props;\r\n        return <div className={className}>\r\n            {\r\n                children === undefined? \r\n                    this.formView.render() : \r\n                    <form onSubmit={this.formView.onSubmit}>{children}</form>\r\n            }\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nexport interface Action {\r\n    icon?: string;\r\n    caption?: string;\r\n    action?: () => void;\r\n}\r\n\r\nexport interface DropdownActionsProps {\r\n    icon?: string;\r\n    actions: Action[];\r\n    isRight?: boolean;\r\n}\r\n\r\nexport interface DropdownActionsState {\r\n    dropdownOpen: boolean;\r\n}\r\n\r\nexport class DropdownActions extends React.Component<DropdownActionsProps, DropdownActionsState> {\r\n    private menu: HTMLDivElement;\r\n    private button: HTMLElement;\r\n    constructor(props:DropdownActionsProps) {\r\n        super(props);\r\n        this.state = {\r\n            dropdownOpen: false\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        document.addEventListener('click', this.handleDocumentClick);\r\n        document.addEventListener('touchstart', this.handleDocumentClick);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('click', this.handleDocumentClick);\r\n        document.removeEventListener('touchstart', this.handleDocumentClick);\r\n    }\r\n\r\n    private handleDocumentClick = (evt:any) => {\r\n        if (this.state.dropdownOpen === false) return;\r\n        if (this.button && this.button.contains(evt.target)) return;\r\n        if (!this.menu) return;\r\n        //if (!this.menu.contains(evt.target)) \r\n        this.toggle();\r\n    }\r\n\r\n    private toggle = () => {\r\n        this.setState({\r\n            dropdownOpen: !this.state.dropdownOpen\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let {icon, actions, isRight} = this.props;\r\n        if (isRight === undefined) isRight = true;\r\n        let hasIcon = actions.some(v => v.icon!==undefined);\r\n        let {dropdownOpen} = this.state;\r\n        //isOpen={this.state.dropdownOpen} toggle={this.toggle}\r\n        return <div className=\"dropdown\">\r\n            <button ref={v=>this.button=v} className=\"cursor-pointer dropdown-toggle btn btn-sm\"\r\n                data-toggle=\"dropdown\"\r\n                aria-expanded={dropdownOpen}\r\n                onClick={this.toggle}>\r\n                <i className={classNames('fa', 'fa-'+(icon||'ellipsis-v'))} />\r\n            </button>\r\n            <div ref={v => this.menu=v} className={classNames({\"dropdown-menu\":true, \"dropdown-menu-right\":isRight, \"show\":dropdownOpen})}>\r\n                {\r\n                    actions.map((v,index) => {\r\n                        let {icon, caption, action} = v;\r\n                        if (icon === undefined && caption === undefined) \r\n                            return <div className=\"dropdown-divider\" />;\r\n                        let i:any;\r\n                        if (hasIcon === true) {\r\n                            if (icon !== undefined) icon = 'fa-' + icon;\r\n                            i = <><i className={classNames('fa', icon, 'fa-fw')} aria-hidden={true}></i>&nbsp; </>;\r\n                        }\r\n                        if (action === undefined) \r\n                            return <h6 className=\"dropdown-header\">{i} {caption}</h6>;\r\n                        return <a className=\"dropdown-item\" key={index} href=\"#\" onClick={(evt:React.MouseEvent<HTMLAnchorElement>)=>{ evt.preventDefault();action()}}>{i} {caption}</a>\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\n/*\r\nexport class DropdownActions extends React.Component<DropdownActionsProps, DropdownActionsState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dropdownOpen: false\r\n        };\r\n    }\r\n    private toggle = () => {\r\n        this.setState({\r\n            dropdownOpen: !this.state.dropdownOpen\r\n        });\r\n    }\r\n    render() {\r\n        let {icon, actions, isRight} = this.props;\r\n        if (isRight === undefined) isRight = true;\r\n        let hasIcon = actions.some(v => v.icon!==undefined);\r\n        return <UncontrolledButtonDropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\r\n            <DropdownToggle caret={true} size=\"sm\" className=\"cursor-pointer\">\r\n                <i className={classNames('fa', 'fa-'+(icon||'ellipsis-v'))} />\r\n            </DropdownToggle>\r\n            <DropdownMenu right={isRight}>\r\n                {actions.map((v,index) => {\r\n                    let {icon, caption, action} = v;\r\n                    if (icon === undefined && caption === undefined) \r\n                        return <div className=\"dropdown-divider\" />;\r\n                    let i;\r\n                    if (hasIcon === true) {\r\n                        if (icon !== undefined) icon = 'fa-' + icon;\r\n                        i = <><i className={classNames('fa', icon, 'fa-fw')} aria-hidden={true}></i>&nbsp; </>;\r\n                    }\r\n                    if (action === undefined) \r\n                        return <h6 className=\"dropdown-header\">{i} {caption}</h6>;\r\n                    return <DropdownItem key={index} onClick={action}>{i} {caption}</DropdownItem>\r\n                })}\r\n            </DropdownMenu>\r\n        </UncontrolledButtonDropdown>\r\n    }\r\n}\r\n*/","import * as React from 'react';\r\n\r\nexport interface EasyDateProps {\r\n    date: Date | string;\r\n}\r\n\r\nexport class EasyDate extends React.Component<EasyDateProps> {\r\n    render() {\r\n        let {date} = this.props;\r\n        if (!date) return null;\r\n        let d = (typeof date === 'string')? new Date(Date.parse(date)) : date;\r\n        let now = new Date();\r\n        let tick = now.getTime() - d.getTime();\r\n        let nDate=now.getDate();\r\n        let _date=d.getDate(), hour=d.getHours(), minute=d.getMinutes(), month=d.getMonth()+1;\r\n        let hm = hour + ((minute<10?':0':':') + minute);\r\n        if (tick < -24*3600*1000) return d.getFullYear()+'年'+month+'月'+_date+'日 ' + hm;\r\n        if (tick < 24*3600*1000) {\r\n            return _date!==nDate? \r\n                (tick < 0? '明天 ' : '昨天 ') + hm \r\n                : hm;\r\n        }\r\n        if (tick < 365*24*3600*1000) {\r\n            return month+'月'+_date+'日 ';\r\n        }\r\n        return d.getFullYear()+'年'+month+'月'+_date+'日';\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Image } from 'tonva-tools';\r\n\r\nexport interface MediaProps {\r\n    icon: string;\r\n    main: string|JSX.Element;\r\n    discription?: string | JSX.Element;\r\n    px?: number;\r\n    py?: number;\r\n}\r\n\r\nexport class Media extends React.Component<MediaProps> {\r\n    render() {\r\n        let {icon, main, discription, px, py} = this.props;\r\n        let disp:any;\r\n        if (typeof discription === 'string')\r\n            disp = <div>{discription}</div>;\r\n        else\r\n            disp = discription;\r\n        let cn = classNames(\r\n            'media', \r\n            px===undefined? 'px-0':'px-'+px, \r\n            py===undefined? 'py-2':'py-'+py);\r\n        return <div className={cn}>\r\n            <Image className=\"mr-3 w-4c h-4c\" src={icon} />\r\n            <div className=\"media-body\">\r\n                <h5 className=\"mt-0\">{main}</h5>\r\n                {disp}\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\n\r\nexport interface SearchBoxProps {\r\n    className?: string;\r\n    label?: string;\r\n    initKey?: string;\r\n    placeholder?: string;\r\n    buttonText?: string;\r\n    maxLength?: number;\r\n    size?: 'sm' | 'md' | 'lg';\r\n    inputClassName?: string;\r\n    onSearch: (key:string)=>Promise<void>;\r\n    onFocus?: ()=>void;\r\n    allowEmptySearch?: boolean;\r\n}\r\n\r\n/*\r\nexport interface SearchBoxState {\r\n    disabled: boolean;\r\n}*/\r\n\r\nexport class SearchBox extends React.Component<SearchBoxProps> { //}, SearchBoxState> {\r\n    private input: HTMLInputElement;\r\n    private key: string = null;\r\n    @observable private disabled: boolean;\r\n\r\n    private onChange = (evt: React.ChangeEvent<any>) => {\r\n        this.key = evt.target.value;\r\n        if (this.key !== undefined) {\r\n            this.key = this.key.trim();\r\n            if (this.key === '') this.key = undefined;\r\n        }\r\n        if (this.props.allowEmptySearch !== true) {\r\n            this.disabled = !this.key;\r\n        }\r\n    }\r\n    private onSubmit = async (evt: React.FormEvent<any>) => {\r\n        evt.preventDefault();\r\n        if (this.key === null) this.key = this.props.initKey || '';\r\n        if (this.props.allowEmptySearch !== true) {\r\n            if (!this.key) return;\r\n            if (this.input) this.input.disabled = true;\r\n        }\r\n        await this.props.onSearch(this.key);\r\n        if (this.input) this.input.disabled = false;\r\n    }\r\n    clear() {\r\n        if (this.input) this.input.value = '';\r\n    }\r\n    render() {\r\n        let {className, inputClassName, onFocus,\r\n            label, placeholder, buttonText, maxLength, size} = this.props;\r\n        let inputSize:string;\r\n        switch (size) {\r\n            default:\r\n            case 'sm': inputSize = 'input-group-sm'; break;\r\n            case 'md': inputSize = 'input-group-md'; break;\r\n            case 'lg': inputSize = 'input-group-lg'; break;\r\n        }\r\n        let lab:any;\r\n        if (label !== undefined) lab = <label className=\"input-group-addon\">{label}</label>;\r\n        return <form className={className} onSubmit={this.onSubmit} >\r\n            <div className={classNames(\"input-group\", inputSize)}>\r\n                {lab}\r\n                <input ref={v=>this.input=v} onChange={this.onChange}\r\n                    type=\"text\"\r\n                    name=\"key\"\r\n                    onFocus={onFocus}\r\n                    className={classNames('form-control', inputClassName || 'border-primary')}\r\n                    placeholder={placeholder}\r\n                    defaultValue={this.props.initKey}\r\n                    maxLength={maxLength} />\r\n                <div className=\"input-group-append\">\r\n                    <button className=\"btn btn-primary\"\r\n                        type=\"submit\"\r\n                        disabled={this.disabled}>\r\n                        <i className='fa fa-search' />\r\n                        <i className=\"fa\"/>\r\n                        {buttonText}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </form>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport className from 'classnames';\r\nimport {FormProps, FormRow, SubmitResult, FormView, TonvaForm} from '../form';\r\n\r\nexport interface Step {\r\n    formRows: FormRow[];\r\n    next: undefined | string | ((values:any) => string);    // 返回下一步的step名称或者直接就是名称\r\n    ex?: any;                                   // 每一步额外的参数\r\n}\r\n\r\nexport interface MultiStepProps {\r\n    className?: string;\r\n    header?: (step:Step, num:number) => JSX.Element; //name: step name, num: 第几步，1开始\r\n    footer?: (step:Step, num:number) => JSX.Element; //name: step name, num: 第几步，1开始\r\n    steps: {[name:string]: Step};\r\n    first: string;         // 第一步的名字\r\n    onSubmit: (values:any) => Promise<SubmitResult|undefined>;\r\n    submitButton?: string|JSX.Element;\r\n}\r\n\r\nexport interface StepView {\r\n    stepName: string;\r\n    step: Step;\r\n    props: FormProps;\r\n    //view: JSX.Element;\r\n}\r\nexport interface MultiStepState {\r\n    //num: number;\r\n    //step: Step;\r\n    //formView: FormView;\r\n    topView: StepView;\r\n    stepViews: StepView[];\r\n}\r\n\r\nexport class MultiStep extends React.Component<MultiStepProps, MultiStepState> {\r\n    private values: any = {};\r\n    private stepViews: StepView[] = [];\r\n    private topView: StepView;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            topView: undefined,\r\n            stepViews: [],\r\n        }\r\n        this.onPrev = this.onPrev.bind(this);\r\n        this.onNext = this.onNext.bind(this);\r\n    }\r\n    \r\n    private setStep(stepName: string) {\r\n        let step = this.props.steps[stepName];\r\n        if (step === undefined) return; //throw new Error('Unknown step name: ' + stepName);\r\n        if (this.topView !== undefined) this.stepViews.push(this.topView);\r\n        let otherButton, onOther;\r\n        if (this.stepViews.length > 0) {\r\n            otherButton = <ButtonConten prefix=\"undo\" text=\"上一步\" />;\r\n            onOther = this.onPrev;\r\n        }\r\n        let {header, footer} = this.props;\r\n        let btnContent = step.next === undefined?\r\n            {prefix: 'cloud-upload', text: this.props.submitButton || '提交'} :\r\n            {suffix: 'arrow-right', text: '下一步'}\r\n        let formProps = {\r\n            formRows: step.formRows,\r\n            submitButton: <ButtonConten {...btnContent} />,\r\n            onSubmit: this.onNext,\r\n            otherButton: otherButton,\r\n            onOther: onOther,\r\n        };\r\n        let num = this.stepViews.length + 1;\r\n        this.topView = {\r\n            stepName: stepName,\r\n            step: step,\r\n            props: formProps,\r\n        };\r\n        this.setState({\r\n            topView: this.topView,\r\n            stepViews: this.stepViews\r\n        });\r\n    }\r\n    componentWillMount() {\r\n        this.setStep(this.props.first);\r\n    }\r\n    private onPrev(values:any) {\r\n        _.assign(this.values, values);\r\n        this.topView = this.stepViews.pop();\r\n        this.setState({\r\n            topView: this.topView,\r\n            stepViews: this.stepViews\r\n        });\r\n    }\r\n    private onNext(values:any): Promise<SubmitResult|undefined> {\r\n        _.assign(this.values, values);\r\n        //let {num, step} = this.state;\r\n        let {next} = this.topView.step;\r\n        if (next === undefined) {\r\n            return this.props.onSubmit(this.values)\r\n        }\r\n        let nextStepName:string;\r\n        if (typeof next === 'string') {\r\n            nextStepName = next;\r\n        }\r\n        else {\r\n            nextStepName = next(this.values);\r\n        }\r\n        this.setStep(nextStepName);\r\n    }\r\n    render() {\r\n        let {className, header, footer} = this.props;\r\n        let {topView, stepViews} = this.state;\r\n        let {stepName, step} = topView;\r\n        let hidden = {visibility: 'hidden'};\r\n        let num = stepViews.length + 1;\r\n        return <div className={className}>\r\n            <div>\r\n                {header && header(step, num)}\r\n                <TonvaForm key={stepName} initValues={this.values} {...topView.props} />\r\n                {footer && footer(step, num)}\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst ButtonConten = (props:{prefix?:string, text?:string|JSX.Element, suffix?:string}) => {\r\n    let {prefix, text, suffix} = props;\r\n    let pIcon, sIcon;\r\n    if (prefix !== undefined) pIcon = <i className={className('fa', 'fa-' + prefix)} />;\r\n    if (suffix !== undefined) sIcon = <i className={className('fa', 'fa-' + suffix)} />;\r\n    return <React.Fragment>{pIcon} {props.text} {sIcon}</React.Fragment>;\r\n}\r\n    \r\n","import _ from 'lodash';\r\nimport { Context } from '../context';\r\nimport { FormRes } from '../formRes';\r\n\r\nexport abstract class Rule {\r\n    abstract check(defy:string[], value:any):void;\r\n}\r\n\r\nexport type ContextRule = (context:Context)=>{[target:string]:string[]|string} | string[] | string;\r\nexport type FieldRule = (value:any) => string[] | string;\r\n\r\nexport class RuleCustom extends Rule {\r\n    private func: FieldRule;\r\n    constructor(func: FieldRule) {\r\n        super();\r\n        this.func = func;\r\n    }\r\n    check(defy:string[], value:any) {\r\n        let ret = this.func(value);\r\n        if (ret === undefined) return;\r\n        switch (typeof ret) {\r\n            case 'undefined': return;\r\n            case 'string': defy.push(ret as string); return;\r\n            default: defy.push(...ret); return;\r\n        }        \r\n    }\r\n}\r\n\r\nexport abstract class RulePredefined extends Rule {\r\n    protected res: FormRes;\r\n    constructor(res: FormRes) {\r\n        super();\r\n        this.res = res;\r\n    }\r\n}\r\n\r\nexport class RuleRequired extends RulePredefined {\r\n    check(defy:string[], value:any) {\r\n        switch (typeof value) {\r\n            default:\r\n            case 'boolean': return;\r\n            case 'object':\r\n                if (value !== null) return;\r\n                break;\r\n            case 'string':\r\n                if ((value as string).trim().length > 0) return;\r\n                break;\r\n            case 'number':\r\n                if ((value as number) !== NaN) return;\r\n                break;\r\n            case 'undefined':\r\n                break;\r\n        }\r\n        defy.push(this.res.required);\r\n    }\r\n}\r\n\r\nexport class RuleNum extends RulePredefined {\r\n    private minMsg: _.TemplateExecutor;\r\n    private maxMsg: _.TemplateExecutor;\r\n    protected min: number;\r\n    protected max: number\r\n    constructor(res: FormRes, min?: number, max?: number) {\r\n        super(res);\r\n        this.minMsg = _.template(res.min);\r\n        this.maxMsg = _.template(res.max);\r\n        this.min = min;\r\n        this.max = max;\r\n    }\r\n    check(defy:string[], value:any) {\r\n        if (value === undefined || value === null) return;\r\n        let n = Number(value);\r\n        if (n === NaN) {\r\n            defy.push(this.res.number);\r\n        }\r\n        else {\r\n            this.checkMore(defy, n);\r\n        }\r\n    }\r\n\r\n    protected checkMore(defy:string[], value: number) {\r\n        if (this.min !== undefined && Number(value) < this.min) {\r\n            defy.push(this.minMsg({min:this.min}));\r\n        }\r\n        if (this.max !== undefined && Number(value) > this.max) {\r\n            defy.push(this.maxMsg({max:this.max}));\r\n        }\r\n    }\r\n}\r\n\r\nexport class RuleInt extends RuleNum {\r\n    protected checkMore(defy:string[], n: number) {\r\n        super.checkMore(defy, n);\r\n        if (Number.isInteger(n) === false) {\r\n            defy.push(this.res.integer);\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { UiItem, ChangingHandler, ChangedHandler } from '../../schema';\r\nimport { FieldProps } from '../field';\r\nimport { Context } from '../context';\r\nimport { ItemSchema } from '../../schema';\r\nimport { Rule, RuleRequired, RuleCustom, FieldRule } from '../rules';\r\nimport { computed, observable, reaction } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport abstract class Widget {\r\n    protected name: string;\r\n    protected context: Context;\r\n    protected fieldProps:FieldProps;\r\n    protected children: React.ReactNode;\r\n    protected itemSchema: ItemSchema;\r\n    protected ui: UiItem;\r\n    protected defaultValue: any;\r\n    protected value: any;\r\n    protected rules: Rule[];\r\n    @observable protected errors: string[] = [];\r\n    @observable protected contextErrors: string[] = [];\r\n    @computed protected get hasError():boolean {return (this.errors.length + this.contextErrors.length)>0}\r\n    protected readOnly:boolean;\r\n    protected disabled:boolean;\r\n    @observable visible:boolean;\r\n\r\n    constructor(context:Context, itemSchema:ItemSchema, fieldProps:FieldProps, children: React.ReactNode) {\r\n        this.context = context;\r\n        let {name} = itemSchema;\r\n        this.name = name;\r\n        this.itemSchema = itemSchema;\r\n        this.fieldProps = fieldProps;\r\n        this.children = children;\r\n        this.ui = context.getUiItem(name);\r\n        if (this.ui === undefined) {\r\n            this.readOnly = false;\r\n            this.disabled = false;\r\n            this.visible = true;\r\n        }\r\n        else {\r\n            let {readOnly, disabled, visible} = this.ui;\r\n            this.readOnly = (readOnly === true);\r\n            this.disabled = (disabled === true);\r\n            this.visible = !(visible === false);            \r\n        }\r\n        this.value = this.defaultValue =  context.getValue(name); //defaultValue;\r\n        this.init();\r\n    }\r\n\r\n    protected init() {\r\n        this.rules = [];\r\n        if (this.itemSchema.required === true) {\r\n            this.rules.push(new RuleRequired(this.context.form.res));\r\n        }\r\n        this.buildRules();\r\n        if (this.ui === undefined) return;\r\n        let {rules} = this.ui;\r\n        if (rules === undefined) return;\r\n        if (Array.isArray(rules) === false) {\r\n            this.rules.push(new RuleCustom(rules as FieldRule));\r\n            return;\r\n        }\r\n        for (let rule of rules as FieldRule[]) {\r\n            this.rules.push(new RuleCustom(rule));\r\n        }\r\n    }\r\n\r\n    protected buildRules() {\r\n    }\r\n\r\n    checkRules() {\r\n        let defy:string[] = [];\r\n        for (let r of this.rules) r.check(defy, this.value);\r\n        if (defy.length === 0) {\r\n            this.context.removeErrorWidget(this);\r\n        }\r\n        else {\r\n            this.context.addErrorWidget(this);\r\n            this.errors.push(...defy);\r\n        }\r\n    }\r\n\r\n    @computed get isOk() {\r\n        return this.errors.length ===0;\r\n    }\r\n\r\n    setError(err:string | string[]) {\r\n        if (err === undefined) return;\r\n        if (typeof err === 'string') this.errors.push(err);\r\n        else this.errors.push(...err);\r\n    }\r\n\r\n    setContextError(err:string | string[]) {\r\n        if (err === undefined) return;\r\n        if (typeof err === 'string') this.contextErrors.push(err);\r\n        else this.contextErrors.push(...err);\r\n    }\r\n\r\n    clearError() {\r\n        this.errors.splice(0);\r\n    }\r\n\r\n    clearContextError() {\r\n        this.contextErrors.splice(0);\r\n    }\r\n\r\n    protected parse(value:any):any {return value}\r\n\r\n    protected setElementValue(value:any) {}\r\n    protected setDataValue(value:any) {\r\n        if (this.isChanging === true) return;\r\n        this.context.initData[this.name] = this.value = this.parse(value);\r\n    }\r\n\r\n    setValue(value:any) {\r\n        if (this.isChanging === true) return;\r\n        //this.setDataValue(value);\r\n        //this.setElementValue(value);\r\n        this.changeValue(value, false);\r\n    }\r\n\r\n    getValue() {\r\n        return this.context.getValue(this.name);\r\n    }\r\n\r\n    getReadOnly():boolean {return this.readOnly}\r\n    getDisabled():boolean {return this.disabled}\r\n    getVisible():boolean {return this.visible}\r\n    setReadOnly(value:boolean) {this.readOnly = value}\r\n    setDisabled(value:boolean) {this.disabled = value}\r\n    setVisible(value:boolean) {this.visible = value}\r\n\r\n    private isChanging: boolean;\r\n    protected onInputChange = (evt: React.ChangeEvent<any>) => {\r\n        this.changeValue(evt.target.value, true);\r\n    }\r\n\r\n    protected changeValue(newValue: any, fromElement: boolean) {\r\n        let prev = this.value;\r\n        let onChanging: ChangingHandler;\r\n        let onChanged: ChangedHandler;\r\n        if (this.ui !== undefined) {\r\n            onChanging = this.ui.onChanging;\r\n            onChanged = this.ui.onChanged;\r\n        }\r\n        let allowChange = true;\r\n        if (onChanging !== undefined) {\r\n            this.isChanging = true;\r\n            allowChange = onChanging(this.context, this.value, prev);\r\n            this.isChanging = false;\r\n        }\r\n        if (allowChange === true) {\r\n            this.setDataValue(newValue);\r\n            if (fromElement !== true) this.setElementValue(newValue);\r\n            if (onChanged !== undefined) {\r\n                this.isChanging = true;\r\n                onChanged(this.context, this.value, prev);\r\n                this.isChanging = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    protected get className():string {\r\n        let fieldClass:string;\r\n        if (this.context.inNode === false) fieldClass = 'form-control';\r\n        return classNames(fieldClass, this.context.form.FieldClass, this.ui && this.ui.className);\r\n    }\r\n\r\n    protected abstract render():JSX.Element;\r\n\r\n    container = observer(():JSX.Element => {\r\n        if (this.visible === false) return null;\r\n        let {form, inNode} = this.context;\r\n        if (inNode === true) return this.render();\r\n        let label:any = this.label;\r\n        if (this.itemSchema.required === true && form.props.requiredFlag !== false) {\r\n            if (label !== null) label = <>{label}&nbsp;<span className=\"text-danger\">*</span></>;\r\n        }\r\n        return form.FieldContainer(label, this.render());\r\n    })\r\n\r\n    protected get label():string {\r\n        let label:any;\r\n        if (this.ui === undefined) {\r\n            label = this.name;\r\n        }\r\n        else {\r\n            let uiLabel = this.ui.label;\r\n            if (uiLabel === null) label = null;\r\n            else label = uiLabel || this.name;\r\n        }\r\n        return label;\r\n    }\r\n\r\n    protected renderTemplet():JSX.Element | undefined {\r\n        if (this.children !== undefined) {\r\n            return <>{this.children}</>;\r\n        }\r\n        if (this.ui === undefined) return undefined;\r\n        let {Templet} = this.ui;\r\n        if (typeof Templet === 'function') return Templet(this.value);\r\n        return Templet;\r\n    }\r\n\r\n    protected renderErrors() {\r\n        let errorList:string[] = [...this.errors, ...this.contextErrors];\r\n        if (errorList.length === 0) return null;\r\n        let {inNode} = this.context;\r\n        let tag = inNode === true? 'span' : 'div';\r\n        return errorList.map(err => React.createElement(tag, \r\n            {\r\n                key: err, \r\n                className: 'text-danger d-inline-block my-2 ml-3'\r\n            },\r\n            <><i className=\"fa fa-exclamation-circle\" /> &nbsp;{err}</>\r\n        ));\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiTextItem, StringSchema } from '../../schema';\r\n\r\nexport class TextWidget extends Widget {\r\n    protected inputType = 'text';\r\n    protected ui: UiTextItem;\r\n    protected input: HTMLInputElement;\r\n\r\n    protected setElementValue(value:any) {\r\n        if (this.input === null) return;\r\n        this.input.value = value;\r\n    }\r\n    protected get placeholder() {return (this.ui && this.ui.placeholder) || this.name}\r\n    protected onKeyDown = async (evt:React.KeyboardEvent<HTMLInputElement>) => {\r\n        this.internalOnKeyDown(evt);\r\n        if (evt.keyCode !== 13) return;\r\n        let {onEnter} = this.context.form.props;\r\n        if (onEnter === undefined) return;\r\n\r\n        this.changeValue(evt.currentTarget.value, true);\r\n        this.checkRules();\r\n        this.context.checkContextRules();\r\n\r\n        let ret = await onEnter(this.name, this.context);\r\n        if (ret !== undefined) {\r\n            this.context.setError(this.name, ret);\r\n        }\r\n    }\r\n\r\n    protected internalOnKeyDown(evt:React.KeyboardEvent<HTMLInputElement>) {\r\n    }\r\n\r\n    protected onBlur(evt: React.FocusEvent<any>) {\r\n        this.onInputChange(evt);\r\n        this.checkRules();\r\n        this.context.checkContextRules();\r\n    }\r\n    protected onFocus(evt: React.FocusEvent<any>) {\r\n        this.clearError();\r\n        this.context.removeErrorWidget(this);\r\n        this.context.removeErrors();\r\n    }\r\n    protected onChange(evt: React.ChangeEvent<any>) {\r\n    }\r\n\r\n    setReadOnly(value:boolean) {\r\n        if (this.input === null) return;\r\n        this.input.readOnly = this.readOnly = value;\r\n    }\r\n    setDisabled(value:boolean) {\r\n        if (this.input === null) return;\r\n        this.input.disabled = this.disabled = value;\r\n    }\r\n\r\n    render() {\r\n        let renderTemplet = this.renderTemplet();\r\n        if (renderTemplet !== undefined) return renderTemplet;\r\n        let cn = {\r\n            //'form-control': true,\r\n        };\r\n        if (this.hasError === true) {\r\n            cn['is-invalid'] = true;\r\n        }\r\n        else {\r\n            cn['required-item'] = this.itemSchema.required === true;\r\n        }\r\n        return <><input ref={input=>this.input = input}\r\n            className={classNames(this.className, cn)}\r\n            type={this.inputType}\r\n            defaultValue={this.value}\r\n            onChange={(evt: React.ChangeEvent<any>) => this.onChange(evt)}\r\n            placeholder={this.placeholder}\r\n            readOnly={this.readOnly}\r\n            disabled={this.disabled}\r\n            onKeyDown = {this.onKeyDown}\r\n            onFocus = {(evt: React.FocusEvent<any>) => this.onFocus(evt)}\r\n            onBlur={(evt: React.FocusEvent<any>) => this.onBlur(evt)}\r\n            maxLength={(this.itemSchema as StringSchema).maxLength} />\r\n            {this.renderErrors()}\r\n        </>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { TextWidget } from './textWidget';\r\nimport { RuleNum, RuleInt } from '../rules';\r\nimport { NumBaseSchema } from '../../schema';\r\n\r\nexport class NumberWidget extends TextWidget {\r\n    protected inputType = 'number';\r\n    protected itemSchema: NumBaseSchema;\r\n\r\n    protected buildRules() {\r\n        super.buildRules();\r\n        let res = this.context.form.res;\r\n        let {min, max} = this.itemSchema;\r\n        this.rules.push(\r\n            this.itemSchema.type === 'integer'?\r\n                new RuleNum(res, min, max) :\r\n                new RuleInt(res, min, max)\r\n        );\r\n        /*\r\n        if (this.itemSchema.type === 'integer') {\r\n            this.rules.push(new RuleInt);\r\n        }\r\n        let {min, max} = this.itemSchema;\r\n        if (min !== undefined) this.rules.push(new RuleMin(min));\r\n        if (max !== undefined) this.rules.push(new RuleMax(max));\r\n        */\r\n    }\r\n\r\n    protected parse(value:any):any {\r\n        if (value === undefined || value === null) return;\r\n        return Number(value);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { NumberWidget } from './numberWidget';\r\n\r\nexport class UpdownWidget extends NumberWidget {\r\n    protected inputType = 'number';\r\n\r\n    protected isValidKey(key:number):boolean {\r\n        return key===46 || key===8 || key===37 || key===39\r\n            || key>=48 && key<=57\r\n            || key>=96 && key<=105\r\n            || key===109 || key===189;\r\n    }\r\n    \r\n    protected internalOnKeyDown(evt:React.KeyboardEvent<HTMLInputElement>) {\r\n        let key = evt.keyCode;\r\n        event.returnValue = this.isValidKey(key);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { TextWidget } from './textWidget';\r\n\r\nexport class DateWidget extends TextWidget {\r\n    protected inputType = 'date';\r\n}\r\n\r\nexport class DateTimeWidget extends TextWidget {\r\n    protected inputType = 'datetime';\r\n}\r\n\r\nexport class TimeWidget extends TextWidget {\r\n    protected inputType = 'time';\r\n}\r\n\r\nexport class MonthWidget extends TextWidget {\r\n    protected inputType = 'month';\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiCheckItem } from '../../schema';\r\n\r\nexport class CheckBoxWidget extends Widget {\r\n    protected input: HTMLInputElement;\r\n    protected ui: UiCheckItem;\r\n    protected trueValue: any;\r\n    protected falseValue: any;\r\n\r\n    protected init() {\r\n        super.init();\r\n        if (this.ui !== undefined) {\r\n            let {trueValue, falseValue} = this.ui;\r\n            if (trueValue === undefined) this.trueValue = true;\r\n            else this.trueValue = trueValue;\r\n            if (falseValue === undefined) this.falseValue = false;\r\n            else this.falseValue = falseValue;\r\n        }\r\n        else {\r\n            this.trueValue = true;\r\n            this.falseValue = false;\r\n        }\r\n    }\r\n    protected setElementValue(value:any) {\r\n        this.input.checked = value === this.trueValue;\r\n    }\r\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\r\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\r\n\r\n    protected onInputChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setDataValue(evt.target.checked === true? this.trueValue : this.falseValue);\r\n    }\r\n\r\n    protected onClick = () => {\r\n        this.context.removeErrors();\r\n    }\r\n\r\n    render() {\r\n        let cn = classNames(this.className, 'form-check-inline p-0');\r\n        let input = <input\r\n            ref={(input)=>this.input = input}\r\n            className={'align-self-center'}\r\n            type=\"checkbox\"\r\n            defaultChecked={this.defaultValue} \r\n            onChange={this.onInputChange}\r\n            onClick={this.onClick} />;\r\n        if (this.context.inNode === true) {\r\n            return <label className={cn}>\r\n                {input} {(this.ui&&this.ui.label) || this.name}\r\n            </label>\r\n        }\r\n        else {\r\n            return <div className={cn}>\r\n                <label className=\"w-100 h-100 mb-0 d-flex justify-content-center\">{input}</label>\r\n            </div>;\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\nimport { Widget } from './widget';\r\nimport { UiSelect } from '../../schema';\r\n\r\nexport class SelectWidget extends Widget {\r\n    protected select: HTMLSelectElement;\r\n    protected ui: UiSelect;\r\n    @observable protected readOnly: boolean;\r\n\r\n    protected setElementValue(value:any) {this.select.value = value}\r\n    protected onInputChange = (evt:React.ChangeEvent<HTMLSelectElement>) => {\r\n        this.setDataValue(evt.target.value);\r\n    }\r\n\r\n    setReadOnly(value:boolean) {this.select.disabled = this.readOnly = !value}\r\n    setDisabled(value:boolean) {this.select.disabled = this.disabled = value}\r\n\r\n    render() {\r\n        if (this.readOnly === true) {\r\n            let option = this.ui.list.find(v => v.value === this.value);\r\n            let title = (option === undefined)? '(???)' : option.title;\r\n            return <span className=\"form-control w-min-6c\">{title}</span>;\r\n        }\r\n        return <select\r\n            ref={(select)=>this.select = select}\r\n            className={classNames(this.className, 'form-control')}\r\n            defaultValue={this.defaultValue} \r\n            onChange={this.onInputChange}>\r\n            {this.ui.list.map((v,index) => {\r\n                let {title, value} = v;\r\n                let cn:string;\r\n                //if (value === undefined || value === null) cn = 'text-light small';\r\n                //else cn = 'text-danger';\r\n                return <option className={cn} key={index} value={value}>{title || value}</option>\r\n            })}\r\n        </select>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiIdItem, TempletType } from '../../schema';\r\nimport { observable } from 'mobx';\r\n\r\nexport class IdWidget extends Widget {\r\n    protected ui: UiIdItem;\r\n    @observable protected value:number;\r\n    setReadOnly(value:boolean) {this.readOnly = value}\r\n    setDisabled(value:boolean) {this.disabled = value}    \r\n\r\n    protected onClick = async () => {\r\n        let pickId = this.ui && this.ui.pickId;\r\n        if (pickId === undefined) {\r\n            alert('no pickId defined!');\r\n            return;\r\n        }\r\n        let id = await pickId(this.context, this.name, this.value);        \r\n        this.setDataValue(id);\r\n        this.clearError();\r\n        this.clearContextError();\r\n        this.checkRules();\r\n    }\r\n\r\n    render() {\r\n        let placeholder:string|JSX.Element, Templet: TempletType;\r\n        if (this.ui !== undefined) {\r\n            placeholder = this.ui.placeholder;\r\n            Templet = this.ui.Templet;\r\n        }\r\n        let cn = {\r\n            'form-control': true,\r\n            'required-item': this.itemSchema.required === true,\r\n            'cursor-pointer': true,\r\n            'is-invalid': this.hasError,\r\n        };\r\n        let content;\r\n        if (this.value === undefined || this.value === null) {\r\n            content = placeholder || 'placeholder';\r\n            cn['text-muted'] = true;\r\n        }\r\n        else if (Templet === undefined) {\r\n            content = <>{this.value}</>;\r\n        }\r\n        else if (typeof Templet === 'function') {\r\n            content = Templet(this.value);\r\n        }\r\n        else {\r\n            content = Templet;\r\n        }\r\n        return <>\r\n            <div className={classNames(cn)} onClick={this.onClick}>{content}</div>\r\n            {this.renderErrors()}\r\n        </>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { DataType } from '../../schema';\r\nimport { UiType } from '../../schema';\r\n\r\nexport const Unknown = (dataType:DataType, uiType:UiType, dataTypes:DataType[]) => {\r\n    return <span className=\"text-danger\">!!data type {dataType} only support {(dataTypes || []).join(', ')}, can't use ui {uiType}!!</span>;\r\n};\r\n","import * as React from 'react';\r\nimport { UiButton, TempletType } from '../../schema';\r\nimport { Unknown } from './unknown';\r\nimport { Widget } from './widget';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class ButtonWidget extends Widget {\r\n    protected ui: UiButton;\r\n\r\n    protected onClick = async () => {\r\n        this.clearError();\r\n        this.clearContextError();\r\n        let {name, type} = this.itemSchema;\r\n        if (type === 'submit') {\r\n            this.context.checkRules()\r\n            if (this.context.hasError === true) {\r\n                return;\r\n            }\r\n        }\r\n        let {onButtonClick} = this.context.form.props;\r\n        if (onButtonClick === undefined) {\r\n            alert(`button ${name} clicked. you should define form onButtonClick`);\r\n            return;\r\n        }\r\n        let ret = await onButtonClick(name, this.context);\r\n        if (ret === undefined) return;\r\n        this.context.setError(name, ret);\r\n    }\r\n\r\n    private observerRender = observer(() => {\r\n        let {name, type} = this.itemSchema;\r\n        let Templet:TempletType, cn:string, caption:string;\r\n        if (this.ui !== undefined) {\r\n            let {widget:widgetType} = this.ui;\r\n            if (widgetType !== 'button') return Unknown(type, widgetType, ['button']);\r\n            Templet = this.ui.Templet;\r\n            cn = this.ui.className;\r\n            caption = this.ui.label;\r\n        }\r\n        let {form, hasError} = this.context;\r\n        let context = this.context;\r\n        let disabled = type==='submit' && hasError;\r\n        let content:any;\r\n        if (this.children !== undefined) content = this.children;\r\n        else if (typeof Templet === 'function') content = Templet();\r\n        else if (Templet !== undefined) content = Templet;\r\n        else content = caption; \r\n        let button = <button \r\n            className={cn} \r\n            type=\"button\"\r\n            disabled={disabled}\r\n            onClick={this.onClick}>\r\n            {content || name}\r\n        </button>;\r\n        if (context.inNode === true) return <>{button}{this.renderErrors()}</>;\r\n        return <div className={form.ButtonClass}>\r\n            <div>{this.renderErrors()}</div>\r\n            {button}\r\n        </div>;\r\n    });\r\n    \r\n    protected get label():string {return null}\r\n\r\n    render() {\r\n        return <this.observerRender />\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Form } from './form';\r\nimport { UiSchema, UiArr, UiItem } from '../schema';\r\nimport { ArrSchema, ItemSchema } from '../schema';\r\nimport { Widget as Widget } from './widgets/widget';\r\n//import { ArrRow } from './arrRow';\r\nimport { observable, computed } from 'mobx';\r\nimport { ContextRule } from './rules';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport abstract class Context {\r\n    private subContexts:{[name:string]:{[rowKey:string]:Context}};\r\n    readonly form: Form;\r\n    readonly uiSchema: UiSchema;\r\n    readonly initData: any;\r\n    readonly inNode: boolean;           // true: 在</> 流中定义Field\r\n    readonly widgets: {[name:string]: Widget} = {};\r\n    readonly rules: ContextRule[];\r\n    readonly isRow: boolean;\r\n    @observable errors: string[] = [];\r\n    @observable errorWidgets:Widget[] = [];\r\n\r\n    constructor(form: Form, uiSchema: UiSchema, data: any, inNode: boolean, isRow: boolean) {\r\n        this.form = form;\r\n        this.uiSchema = uiSchema;\r\n        this.initData = data;\r\n        this.inNode = inNode;\r\n        this.isRow = isRow;\r\n        if (uiSchema !== undefined) {\r\n            let {rules} = uiSchema;\r\n            if (rules !== undefined) {\r\n                this.rules = [];\r\n                if (Array.isArray(rules) === false)\r\n                    this.rules.push(rules as ContextRule);\r\n                else\r\n                    this.rules.push(...rules as ContextRule[]);\r\n            }\r\n        }\r\n    }\r\n\r\n    getArrRowContexts(arrName: string) {\r\n        if (this.subContexts === undefined) this.subContexts = {};\r\n        let arrRowContexts = this.subContexts[name];\r\n        if (arrRowContexts === undefined) this.subContexts[name] = arrRowContexts = {};\r\n        return arrRowContexts;\r\n    }\r\n\r\n    abstract get data():any;\r\n    abstract getItemSchema(itemName:string):ItemSchema;\r\n    abstract getUiItem(itemName:string):UiItem;\r\n    get arrName():string {return undefined}\r\n    getValue(itemName:string):any {return this.initData[itemName]}\r\n    setValue(itemName:string, value:any) {\r\n        this.initData[itemName] = value;\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setValue(value);\r\n    }\r\n    getDisabled(itemName:string):boolean {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) return widget.getDisabled();\r\n        return undefined;\r\n    }\r\n    setDisabled(itemName:string, value:boolean) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setDisabled(value);\r\n    }\r\n    getReadOnly(itemName:string):boolean {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.getReadOnly();\r\n        return undefined;\r\n    }\r\n    setReadOnly(itemName:string, value:boolean) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setReadOnly(value);\r\n    }\r\n    getVisible(itemName:string):boolean {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.getVisible();\r\n        return undefined;\r\n    }\r\n    setVisible(itemName:string, value:boolean) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setVisible(value);\r\n    }\r\n\r\n    checkFieldRules() {\r\n        for (let i in this.widgets) {\r\n            this.widgets[i].checkRules();\r\n        }\r\n        if (this.subContexts === undefined) return;\r\n        for (let i in this.subContexts) {\r\n            let arrRowContexts = this.subContexts[i];\r\n            for (let j in arrRowContexts) {\r\n                arrRowContexts[j].checkFieldRules();\r\n            }\r\n        }\r\n    }\r\n\r\n    checkContextRules() {\r\n        if (this.rules === undefined) return;\r\n        this.clearContextErrors();\r\n        for (let rule of this.rules) {\r\n            let ret = rule(this);\r\n            if (ret === undefined) continue;\r\n            if (Array.isArray(ret) === true) {\r\n                this.errors.push(...ret as string[]);\r\n            }\r\n            else if (typeof ret === 'string') {\r\n                this.errors.push(ret as string);\r\n            }\r\n            else {\r\n                for (let i in ret as object) this.setError(i, ret[i]);\r\n            }\r\n        }\r\n        if (this.subContexts === undefined) return;\r\n        for (let i in this.subContexts) {\r\n            let arrRowContexts = this.subContexts[i];\r\n            for (let j in arrRowContexts) {\r\n                let rowContext = arrRowContexts[j];\r\n                rowContext.removeErrors();\r\n                rowContext.checkContextRules();\r\n            }\r\n        }\r\n    }\r\n\r\n    setError(itemName:string, error:string) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget === undefined) return;\r\n        widget.setContextError(error);\r\n        this.addErrorWidget(widget);\r\n    }\r\n\r\n    clearContextErrors() {\r\n        for (let i in this.widgets) this.widgets[i].clearContextError();\r\n    }\r\n\r\n    checkRules() {\r\n        this.checkFieldRules();\r\n        this.checkContextRules();\r\n    }\r\n\r\n    addErrorWidget(widget:Widget) {\r\n        let pos = this.errorWidgets.findIndex(v => v === widget);\r\n        if (pos < 0) this.errorWidgets.push(widget);\r\n    }\r\n    removeErrorWidget(widget:Widget) {\r\n        let pos = this.errorWidgets.findIndex(v => v === widget);\r\n        if (pos >= 0) this.errorWidgets.splice(pos, 1);\r\n    }\r\n\r\n    protected checkHasError():boolean {\r\n        let ret = (this.errorWidgets.length + this.errors.length) > 0;\r\n        if (ret === true) return true;\r\n        if (this.subContexts === undefined) return false;\r\n        for (let i in this.subContexts) {\r\n            let arrRowContexts = this.subContexts[i];\r\n            for (let j in arrRowContexts) {\r\n                if (arrRowContexts[j].hasError === true) return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    @computed get hasError():boolean {\r\n        return this.checkHasError();\r\n    };\r\n\r\n    removeErrors() {\r\n        this.errors.splice(0);\r\n        this.errorWidgets.splice(0);\r\n        for (let i in this.widgets) {\r\n            let widget = this.widgets[i];\r\n            if (widget === undefined) continue;\r\n            widget.clearContextError();\r\n        }\r\n    }\r\n\r\n    renderErrors = observer((): JSX.Element => {\r\n        let {errors} = this;\r\n        if (errors.length === 0) return null;\r\n        return <>\r\n            {errors.map(err => <span key={err} className=\"text-danger inline-block my-1 ml-3\">\r\n                <i className=\"fa fa-exclamation-circle\" /> &nbsp;{err}\r\n            </span>)}\r\n        </>\r\n    });\r\n}\r\n\r\nlet rowKeySeed:number = 1;\r\nexport class RowContext extends Context {\r\n    readonly parentContext: Context;\r\n    readonly arrSchema: ArrSchema;\r\n    readonly uiSchema: UiArr;\r\n    //readonly row: ArrRow;\r\n    readonly rowKey: number;\r\n    readonly data: any;\r\n    constructor(parentContext:Context, arrSchema: ArrSchema, data: any, inNode: boolean) {\r\n        let uiArr:UiArr;\r\n        let {uiSchema} = parentContext;\r\n        if (uiSchema !== undefined) {\r\n            let {items} = uiSchema;\r\n            if (items !== undefined) uiArr = items[arrSchema.name] as UiArr;\r\n        }\r\n        super(parentContext.form, uiArr, data, inNode, true);\r\n        this.parentContext = parentContext;\r\n        this.arrSchema = arrSchema;\r\n        this.rowKey = rowKeySeed++;\r\n        this.data = data;\r\n    }\r\n    getItemSchema(itemName:string):ItemSchema {return this.arrSchema.itemSchemas[itemName]}\r\n    getUiItem(itemName:string):UiItem {\r\n        if (this.uiSchema === undefined) return undefined;\r\n        let {items} = this.uiSchema;\r\n        if (items === undefined) return undefined;\r\n        return items[itemName]\r\n    }\r\n    get arrName():string {return this.arrSchema.name}\r\n    //get data() {return this.row.data;}\r\n    removeErrors() {\r\n        super.removeErrors();\r\n        this.parentContext.removeErrors();\r\n    }\r\n\r\n    get parentData():any {return this.parentContext.data;}\r\n}\r\n\r\nexport class FormContext extends Context {\r\n    constructor(form:Form, inNode:boolean) {\r\n        super(form, form.uiSchema, form.data, inNode, false);\r\n    }\r\n    get data():any {return this.form.data}\r\n    getItemSchema(itemName:string):ItemSchema {return this.form.itemSchemas[itemName]}\r\n    getUiItem(itemName:string):UiItem {\r\n        let {uiSchema} = this.form;\r\n        if (uiSchema === undefined) return undefined;\r\n        let {items} = uiSchema;\r\n        if (items === undefined) return undefined;\r\n        return items[itemName]\r\n    }\r\n}\r\n\r\nexport const ContextContainer = React.createContext<Context>({} as any);\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\n//import { ArrRow } from '../arrRow';\r\nimport { Context, RowContext, ContextContainer } from '../context';\r\nimport { ArrSchema } from '../../schema';\r\nimport { UiArr, TempletType } from '../../schema';\r\nimport { Unknown } from './unknown';\r\nimport { factory } from './factory';\r\n\r\nexport const ArrComponent = observer((\r\n    {parentContext, arrSchema, children}:{parentContext: Context, arrSchema: ArrSchema, children: React.ReactNode}) => \r\n{\r\n    let {name, arr} = arrSchema;\r\n    let data = parentContext.initData[name] as any[];\r\n    let {form} = parentContext;\r\n    let arrRowContexts = parentContext.getArrRowContexts(name);\r\n    let ui = parentContext.getUiItem(name) as UiArr;\r\n    let arrLabel = name;\r\n    let Templet:TempletType;\r\n    let selectable:boolean, deletable:boolean, restorable:boolean;\r\n    let {ArrContainer, RowContainer, RowSeperator, uiSchema} = form;\r\n    if (uiSchema !== undefined) {\r\n        let {selectable:formSelectable, deletable:formDeletable, restorable:formRestorable} = uiSchema;\r\n        if (selectable !== true) selectable = formSelectable;\r\n        if (deletable !== true) deletable = formDeletable;\r\n        if (restorable !== true) restorable = formRestorable;\r\n    }\r\n    if (ui !== undefined) {\r\n        let {widget:widgetType, label, \r\n            selectable:arrSelectable, deletable:arrDeletable, restorable:arrRestorable,\r\n            ArrContainer:ac, RowContainer:rc, RowSeperator:rs\r\n        } = ui;\r\n        if (arrSelectable !== undefined) selectable = arrSelectable;\r\n        if (arrDeletable !== undefined) deletable = arrDeletable;\r\n        if (arrRestorable !== undefined) restorable = arrRestorable;\r\n        if (ac !== undefined) ArrContainer = ac;\r\n        if (rc !== undefined) RowContainer = rc;\r\n        if (rs !== undefined) RowSeperator = rs;\r\n        Templet = ui.Templet;\r\n        if (widgetType !== 'arr') return Unknown(arrSchema.type, widgetType, ['arr']);\r\n        arrLabel = label || arrLabel;\r\n    }\r\n    let first = true;\r\n    return ArrContainer(arrLabel, <>\r\n        {data.map((row:any, index) => {\r\n            let rowContext: RowContext;\r\n            let rowContent: JSX.Element;\r\n            let sep = undefined;\r\n            if (first === false) sep = RowSeperator;\r\n            else first = false;\r\n            if (children !== undefined) {\r\n                rowContext = new RowContext(parentContext, arrSchema, row, true);\r\n                rowContent = <>{children}</>;\r\n            }\r\n            else {\r\n                let typeofTemplet = typeof Templet;\r\n                if (typeofTemplet === 'function') {\r\n                    rowContext = new RowContext(parentContext, arrSchema, row, true);\r\n                    rowContent = React.createElement(observer(Templet as React.StatelessComponent), row);\r\n                }\r\n                else if (typeofTemplet === 'object') {\r\n                    rowContext = new RowContext(parentContext, arrSchema, row, true);\r\n                    rowContent = Templet as JSX.Element;\r\n                }\r\n                else {\r\n                    rowContext = new RowContext(parentContext, arrSchema, row, false);\r\n                    rowContent = <>{\r\n                        arr.map((v, index) => {\r\n                            return <React.Fragment key={v.name}>\r\n                                {factory(rowContext, v, undefined)}\r\n                            </React.Fragment>\r\n                        })}\r\n                    </>;\r\n                }\r\n            }\r\n            let {rowKey} = rowContext;\r\n            arrRowContexts[rowKey] = rowContext;\r\n\r\n            let selectCheck:JSX.Element, deleteIcon:JSX.Element;\r\n            if (selectable === true) {\r\n                let onClick = (evt: React.MouseEvent<HTMLInputElement>)=>{\r\n                    let {checked} = (evt.target as HTMLInputElement);\r\n                    row.$isSelected = checked;\r\n                    let {$source} = row;\r\n                    if ($source !== undefined) $source.$isSelected = checked;\r\n                    rowContext.removeErrors();\r\n                }\r\n                selectCheck = <div className=\"form-row-checkbox\">\r\n                    <input type=\"checkbox\" onClick={onClick} defaultChecked={row.$isSelected} />\r\n                </div>;\r\n            }\r\n            let isDeleted = !(row.$isDeleted===undefined || row.$isDeleted===false);\r\n            if (deletable === true) {\r\n                let icon = isDeleted? 'fa-undo' : 'fa-trash';\r\n                let onDelClick = () => {\r\n                    if (restorable === true) {\r\n                        row.$isDeleted = !isDeleted;\r\n                        let {$source} = row;\r\n                        if ($source !== undefined) $source.$isDeleted = !isDeleted;\r\n                    }\r\n                    else {\r\n                        let p = data.indexOf(row);\r\n                        if (p>=0) data.splice(p, 1);\r\n                    }\r\n                    rowContext.removeErrors();\r\n                }\r\n                deleteIcon = <div className=\"form-row-edit text-info\" onClick={onDelClick}>\r\n                    <i className={classNames('fa', icon, 'fa-fw')} />\r\n                </div>;\r\n            }\r\n            let editContainer = selectable===true || deletable===true?\r\n                (content:any) => <fieldset disabled={isDeleted}><div className={classNames('d-flex', {'deleted':isDeleted, 'row-selected':row.$isSelected})}>\r\n                    {selectCheck}\r\n                    <div className={selectable===true && deletable===true? \"form-row-content\":\"form-row-content-1\"}>{content}</div>\r\n                    {deleteIcon}\r\n                </div></fieldset>\r\n                :\r\n                (content:any) => content;\r\n\r\n            return <ContextContainer.Provider key={rowKey} value={rowContext}>\r\n                {sep}\r\n                {RowContainer(editContainer(<><rowContext.renderErrors />{rowContent}</>))}\r\n            </ContextContainer.Provider>;\r\n        })}\r\n    </>);\r\n});\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiImageItem } from '../../schema';\r\nimport { Image } from '../../image';\r\nimport { ImageItemEdit } from '../../edit/imageItemEdit';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\n\r\nexport class ImageWidget extends Widget {\r\n    protected input: HTMLInputElement;\r\n    protected ui: UiImageItem;\r\n    @observable private imageSrc: string;\r\n\r\n    protected init() {\r\n        super.init();\r\n        this.imageSrc = this.value;\r\n    }\r\n\r\n    protected onClick = async () => {\r\n        let edit = new ImageItemEdit(this.itemSchema, this.ui, this.ui.label, this.value);\r\n        let ret = await edit.start();\r\n        if (ret !== null) {\r\n            this.setValue(ret);\r\n            this.imageSrc = ret;\r\n        }\r\n        await edit.end();\r\n    }\r\n\r\n    render() {\r\n        return <this.observerRender />;\r\n    }\r\n\r\n    private observerRender = observer(() => {\r\n        let cn = [\r\n            'bg-white p-1 d-flex justify-content-center',\r\n        ];\r\n        let onClick: any;\r\n        if (!this.readOnly && !this.disabled) {\r\n            cn.push('cursor-pointer');\r\n            onClick = this.onClick;\r\n        }\r\n        return <div className={classNames(cn)} onClick={onClick}>\r\n            <Image src={this.imageSrc} className=\"w-4c h-4c\"/>\r\n        </div>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport { Schema, ArrSchema, DataType, ButtonSchema, ItemSchema } from '../../schema';\r\nimport { UiItem, UiArr, UiType, UiButton, TempletType, TypeWidget, UiCustom } from '../../schema';\r\nimport { TextWidget } from './textWidget';\r\nimport { TextAreaWidget } from './textareaWidget';\r\nimport { PasswordWidget, UrlWidget, EmailWidget } from './passwordWidget';\r\nimport { UpdownWidget } from './updownWidget';\r\nimport { NumberWidget } from './numberWidget';\r\nimport { DateWidget, DateTimeWidget, TimeWidget, MonthWidget } from './dateWidget';\r\nimport { CheckBoxWidget } from './checkBoxWidget';\r\nimport { FieldProps } from '../field';\r\nimport { Context, RowContext, FormContext, ContextContainer } from '../context';\r\nimport { SelectWidget } from './selectWidget';\r\nimport { RadioWidget } from './radioWidget';\r\nimport { RangeWidget } from './rangeWidget';\r\nimport { IdWidget } from './idWidget';\r\nimport { ButtonWidget } from './buttonWidget';\r\nimport { ArrComponent } from './arrComponent';\r\nimport { ImageWidget } from './imageWidget';\r\n\r\nconst widgetsFactory: {[type: string]: {widget?: TypeWidget, dataTypes?: DataType[]}} = {\r\n    id: {\r\n        dataTypes: ['id'],\r\n        widget: IdWidget,\r\n    },\r\n    text: {\r\n        dataTypes: ['integer', 'number', 'string'],\r\n        widget: TextWidget\r\n    },\r\n    textarea: {\r\n        dataTypes: ['string'],\r\n        widget: TextAreaWidget\r\n    },\r\n    password: {\r\n        dataTypes: ['string'],\r\n        widget: PasswordWidget\r\n    },\r\n    date: {\r\n        dataTypes: ['date'],\r\n        widget: DateWidget\r\n    },\r\n    datetime: {\r\n        dataTypes: ['date'],\r\n        widget: DateTimeWidget\r\n    },\r\n    time: {\r\n        dataTypes: ['date'],\r\n        widget: TimeWidget\r\n    },\r\n    month: {\r\n        dataTypes: ['date'],\r\n        widget: MonthWidget\r\n    },\r\n    select: {\r\n        dataTypes: ['integer', 'number', 'string', 'date', 'boolean'],\r\n        widget: SelectWidget\r\n    },\r\n    url: {\r\n        dataTypes: ['string'],\r\n        widget: UrlWidget\r\n    },\r\n    email: {\r\n        dataTypes: ['string'],\r\n        widget: EmailWidget\r\n    },\r\n    number: {\r\n        dataTypes: ['integer', 'number'],\r\n        widget: NumberWidget\r\n    },\r\n    updown: {\r\n        dataTypes: ['integer', 'number'],\r\n        widget: UpdownWidget\r\n    },\r\n    color: {\r\n\r\n    },\r\n    checkbox: {\r\n        dataTypes: ['boolean', 'integer', 'number'],\r\n        widget: CheckBoxWidget\r\n    },\r\n    image: {\r\n        dataTypes: ['string'],\r\n        widget: ImageWidget,\r\n    },\r\n    checkboxes: {\r\n\r\n    },\r\n    radio: {\r\n        dataTypes: ['integer', 'number', 'string', 'date', 'boolean'],\r\n        widget: RadioWidget\r\n    },\r\n    range: {\r\n        dataTypes: ['integer'],\r\n        widget: RangeWidget,\r\n    },\r\n    button: {\r\n        dataTypes: ['button', 'submit'],\r\n        widget: ButtonWidget,\r\n    }\r\n}\r\n\r\nexport function factory(context: Context, itemSchema: ItemSchema, children:React.ReactNode, fieldProps?: FieldProps):JSX.Element {\r\n    if (context === undefined) {\r\n        debugger;\r\n        return null;\r\n    }\r\n    if (itemSchema === undefined) return undefined;\r\n    let {name, type} = itemSchema;\r\n    switch (type) {\r\n    case 'arr':\r\n        let arrSchema = context.getItemSchema(name) as ArrSchema;\r\n        return <ArrComponent parentContext={context} arrSchema={arrSchema} children={children} />;\r\n    default:\r\n        break;\r\n    }\r\n\r\n    let typeWidget: TypeWidget;\r\n    let ui = context.getUiItem(name);\r\n    function getTypeWidget(t:DataType): TypeWidget {\r\n        switch(t) {\r\n        default: return TextWidget; \r\n        case 'id': return IdWidget;\r\n        case 'integer': return UpdownWidget;\r\n        case 'number': return NumberWidget; \r\n        case 'string': return TextWidget; \r\n        case 'date': return DateWidget; \r\n        case 'boolean': return CheckBoxWidget; \r\n        case 'button':\r\n        case 'submit': return ButtonWidget;\r\n        }\r\n    }\r\n    if (ui === undefined) { \r\n        typeWidget = getTypeWidget(type);\r\n    }\r\n    else {\r\n        let {widget:widgetType} = ui;\r\n        switch (widgetType) {\r\n        default:\r\n            if (widgetType !== undefined) {\r\n                let widgetFactory = widgetsFactory[widgetType];\r\n                typeWidget = widgetFactory.widget;\r\n            }\r\n            if (typeWidget === undefined) typeWidget = getTypeWidget(type);\r\n            break;\r\n        case 'custom':\r\n            typeWidget = (ui as UiCustom).WidgetClass;\r\n            break;\r\n        case 'group':\r\n            return <span>impletment group</span>;\r\n        }\r\n        //label = uiLabel || name;\r\n    }\r\n    \r\n    let {isRow, widgets} = context;\r\n    let widget = new typeWidget(context, itemSchema, fieldProps, children);\r\n    widgets[name] = widget;\r\n\r\n    return <widget.container />;\r\n    /*\r\n    if (isRow === false) {\r\n        let WidgetElement = observer(() => widget.container());\r\n        return <WidgetElement />;\r\n    }\r\n    else {\r\n        let widgetElement = widget.container();\r\n        return widgetElement;\r\n    }\r\n    */\r\n}\r\n\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiTextAreaItem } from '../../schema';\r\nimport { StringSchema } from '../../schema';\r\n\r\nexport class TextAreaWidget extends Widget {\r\n    protected itemSchema: StringSchema;\r\n    protected input: HTMLTextAreaElement;\r\n    protected ui: UiTextAreaItem;\r\n\r\n    protected setElementValue(value:any) {this.input.value = value}\r\n    protected onInputChange = (evt: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        this.setValue(evt.currentTarget.value);\r\n    }\r\n\r\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\r\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\r\n\r\n    render() {\r\n        let renderTemplet = this.renderTemplet();\r\n        if (renderTemplet !== undefined) return renderTemplet;\r\n        let cn = {};\r\n        if (this.hasError === true) {\r\n            cn['is-invalid'] = true;\r\n        }\r\n        else {\r\n            cn['required-item'] = this.itemSchema.required === true;\r\n        }\r\n        return <textarea ref={(input) => this.input=input} \r\n            className={classNames(this.className, cn)}\r\n            rows={this.ui && this.ui.rows}\r\n            maxLength={this.itemSchema.maxLength}\r\n            defaultValue={this.defaultValue} onChange={this.onInputChange} />\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { TextWidget } from './textWidget';\r\n\r\nexport class PasswordWidget extends TextWidget {\r\n    protected inputType = 'password';\r\n}\r\n\r\nexport class UrlWidget extends TextWidget {\r\n    protected inputType = 'url';\r\n}\r\n\r\nexport class EmailWidget extends TextWidget {\r\n    protected inputType = 'email';\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { TextWidget } from './textWidget';\r\nimport { Widget } from './widget';\r\nimport { UiRadio } from '../../schema';\r\nimport { RowContext } from '../context';\r\n\r\n\r\n//const radioStyle:React.CSSProperties = {width:'2em', height:'1.2em'};\r\nexport class RadioWidget extends Widget {\r\n    protected inputs: {[index:number]: HTMLInputElement} = {};\r\n    protected ui: UiRadio;\r\n\r\n    protected setElementValue(value:any) {\r\n        for (let i in this.inputs) {\r\n            let input = this.inputs[i];\r\n            input.checked = value === input.value;\r\n        }\r\n    }\r\n    setReadOnly(value:boolean) {\r\n        this.readOnly = value;\r\n        for (let i in this.inputs) this.inputs[i].readOnly = value;\r\n    }\r\n    setDisabled(value:boolean) {\r\n        this.disabled = value;\r\n        for (let i in this.inputs) this.inputs[i].disabled = value\r\n    }\r\n\r\n    render() {\r\n        let {defaultValue, list} = this.ui;\r\n        let {isRow, inNode} = this.context;\r\n        let rowKey:number;\r\n        if (isRow === true) {\r\n            rowKey = (this.context as RowContext).rowKey;\r\n        }\r\n        let cn = classNames(this.className, 'form-radio-inline');\r\n        return <span className={cn}>\r\n                {list.map((v,index) => {\r\n                    let {value, title} = v;\r\n                    let name = this.name;\r\n                    if (rowKey !== undefined) name += '-' + rowKey;\r\n                    return <label key={index} className=\"form-radio-inline\">\r\n                        <input ref={input=>this.inputs[index]=input} type=\"radio\" name={name}\r\n                            value={value} defaultChecked={(this.defaultValue || defaultValue)===value} />\r\n                        {title || value}\r\n                    </label>;\r\n                    //</span>\r\n                })}\r\n            </span>;\r\n    }\r\n}\r\n/*\r\n<div className=\"form-control d-flex border-0\"><input\r\nref={(input)=>this.input = input}\r\nclassName={classNames(this.className, 'align-self-center')}\r\ntype=\"checkbox\"\r\nstyle={{maxHeight:\"1.2em\"}}\r\ndefaultValue={this.defaultValue} \r\nonChange={this.onChange} />\r\n</div>\r\n*/","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { UiRange } from '../../schema';\r\nimport { Widget } from './widget';\r\n\r\nexport class RangeWidget extends Widget {\r\n    protected inputType = 'range';\r\n    protected input: HTMLInputElement;\r\n    protected ui: UiRange;\r\n\r\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\r\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\r\n\r\n    render() {\r\n        let {min, max, step} = this.ui;\r\n        return <><input ref={input=>this.input = input}\r\n            className={classNames(this.className, 'form-control', 'w-min-6c')}\r\n            type={this.inputType}\r\n            defaultValue={this.defaultValue} \r\n            onChange={this.onInputChange}\r\n            max={max}\r\n            min={min}\r\n            step={step}\r\n            />\r\n        </>;\r\n    }\r\n}\r\n","import _ from 'lodash';\r\nimport { KeyValueRes, Res } from '../res';\r\n\r\nexport interface FormRes extends KeyValueRes {\r\n    required: string;\r\n    number: string;\r\n    integer: string;\r\n    min: string;\r\n    max: string;\r\n}\r\n\r\nexport const formRes:Res<FormRes> = {\r\n    _: {\r\n        required: 'required',\r\n        number: 'not valid number',\r\n        integer: 'not valid integer',\r\n        min: 'min value is ${min}',\r\n        max: 'max value is ${max}',\r\n    },\r\n    zh: {\r\n        _: {\r\n            required: '必须填',\r\n            number: '需要数字',\r\n            integer: '需要整数',\r\n            min: '不能小于${min}',\r\n            max: '不能大于${max}',\r\n        }\r\n    },\r\n}\r\n","import * as React from 'react';\r\nimport {observable, IReactionDisposer, autorun, isObservable} from 'mobx';\r\nimport classNames from 'classnames';\r\nimport { Schema, ItemSchema, ArrSchema } from '../schema';\r\nimport { UiSchema, TempletType } from '../schema';\r\nimport { factory } from './widgets';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport { ContextContainer, FormContext, Context, RowContext } from './context';\r\nimport { FormRes, formRes } from './formRes';\r\nimport { resLang } from '../res';\r\n\r\nexport type FormButtonClick = (name:string, context: Context) => Promise<any>;\r\nexport type InputEnter = (name:string, context: Context) => Promise<any>;\r\n\r\nexport interface FormProps {\r\n    className?: string;\r\n    schema: Schema;\r\n    uiSchema?: UiSchema;\r\n    formData?: any;\r\n    onButtonClick?: FormButtonClick;\r\n    onEnter?: InputEnter;\r\n    fieldLabelSize?: number;            // col-sm-2 for label\r\n    requiredFlag?: boolean;             // default=true\r\n    beforeShow?: (formContext:FormContext) => void;\r\n    res?: FormRes;\r\n\r\n    Container?: (content:JSX.Element) => JSX.Element;\r\n    FieldContainer?: (label:string|JSX.Element, content:JSX.Element) => JSX.Element;\r\n    FieldClass?: string;\r\n    ButtonClass?: string;\r\n}\r\n\r\nexport class Form extends React.Component<FormProps> {\r\n    readonly schema: Schema;\r\n    readonly itemSchemas: {[name:string]: ItemSchema};\r\n    readonly uiSchema: UiSchema;\r\n    readonly res?: FormRes;\r\n    protected formContext: FormContext;\r\n    //private content: any;\r\n    //private formData: any;\r\n    private disposer: IReactionDisposer;\r\n    //@observable \r\n    readonly data:any;\r\n\r\n    readonly Container: (content:JSX.Element) => JSX.Element;\r\n    readonly FieldContainer: (label:any, content:JSX.Element) => JSX.Element;\r\n    readonly FieldClass: string;\r\n    readonly ButtonClass: string;\r\n    //readonly ArrContainer: (label:any, content:JSX.Element) => JSX.Element;\r\n    //readonly RowContainer: (content:JSX.Element) => JSX.Element;\r\n    //readonly RowSeperator: JSX.Element;\r\n\r\n    constructor(props:FormProps) {\r\n        super(props);\r\n        let {schema, uiSchema, formData, \r\n            Container, FieldContainer, FieldClass, \r\n            ButtonClass, res,\r\n        } = props;\r\n        this.Container = Container || this.DefaultContainer;\r\n        this.FieldContainer = FieldContainer || this.DefaultFieldContainer;\r\n        this.FieldClass = FieldClass!==undefined && FieldClass!==''&&FieldClass!==null? FieldClass : this.DefaultFieldClass;\r\n        this.res = res || this.DefaultRes;\r\n        this.ButtonClass = ButtonClass || this.DefaultButtonClass;\r\n\r\n        this.schema = schema;\r\n        this.itemSchemas = {};\r\n        for (let itemSchema of this.schema) {\r\n            this.itemSchemas[itemSchema.name] = itemSchema;\r\n        }\r\n        this.uiSchema = uiSchema;\r\n\r\n        //this.formData = formData;\r\n        this.disposer = autorun(this.watch);\r\n        this.data = {};\r\n        // this.initRender();\r\n    }\r\n\r\n    private renderContent():any {\r\n        this.initData(this.props.formData);\r\n        let {children} = this.props;\r\n        if (children !== undefined) {\r\n            this.formContext = new FormContext(this, true);\r\n            return <>{children}</>;\r\n        }\r\n\r\n        let Templet: TempletType;\r\n        if (this.uiSchema !== undefined) {\r\n            Templet = this.uiSchema.Templet;\r\n        }\r\n        if (Templet !== undefined) {\r\n            this.formContext = new FormContext(this, true);\r\n            return typeof(Templet) === 'function'? Templet(this.data) : Templet;\r\n        }\r\n\r\n        this.formContext = new FormContext(this, false);\r\n        return <>{this.schema.map((v, index) => {\r\n            return <React.Fragment key={index}>{factory(this.formContext, v, children)}</React.Fragment>\r\n        })}</>;\r\n    }\r\n\r\n    private initData(formData: any) {\r\n        if (formData === undefined) formData = {};\r\n        for (let itemSchema of this.schema) {\r\n            this.initDataItem(itemSchema, this.data, formData);\r\n        }\r\n    }\r\n\r\n    private initDataItem(itemSchema: ItemSchema, data:any, formData: any):any {\r\n        let {name, type} = itemSchema;\r\n        if (type === 'button') return;\r\n        if (type !== 'arr') {\r\n            data[name] = formData[name];\r\n            return;\r\n        }\r\n\r\n        let arrItem:ArrSchema = itemSchema as ArrSchema;\r\n        let {arr:arrItems} = arrItem;\r\n        if (arrItems === undefined) return;\r\n        let arrDict = arrItem.itemSchemas = {};\r\n        for (let item of arrItems) {\r\n            arrDict[item.name] = item;\r\n        }\r\n        let val:any[] = formData[name];\r\n        if (val === undefined) val = [];\r\n        else if (Array.isArray(val) === false) val = [val];\r\n        let arr:any[] = [];\r\n        for (let row of val) {\r\n            let {$isSelected, $isDeleted} = row;\r\n            let r = {\r\n                $source: row,\r\n                $isSelected: $isSelected,\r\n                $isDeleted: $isDeleted,\r\n            };\r\n            for (let item of arrItems) {\r\n                this.initDataItem(item, r, row);\r\n                /*\r\n                let {name:nm} = item;\r\n                let v = row[nm];\r\n                if (v === undefined) v = null;\r\n                r[nm] = v;\r\n                */\r\n            }\r\n            arr.push(r);\r\n        }\r\n        // 如果没有observable，行删除标志点击不管用\r\n        // 不知道这里为什么要去掉observable。有可能会有别的问题\r\n        data[name] = observable(arr);\r\n        //data[name] = arr;\r\n        return;\r\n    }\r\n\r\n    private watch = () => {\r\n        let {formData} = this.props;\r\n        if (formData === undefined) return;\r\n        //this.initData(formData);\r\n        this.calcSelectOrDelete();\r\n    }\r\n    private calcSelectOrDelete() {\r\n        for (let itemSchema of this.schema) {\r\n            this.arrItemOperated(itemSchema);\r\n        }\r\n    }\r\n\r\n    private arrItemOperated(itemSchema: ItemSchema) {\r\n        let {name, type} = itemSchema;\r\n        if (type !== 'arr') return;\r\n        if (this.data === undefined) return;\r\n        let formArrVal = this.data[name];\r\n        if (formArrVal === undefined) return;\r\n        let {arr: arrItems} = itemSchema as ArrSchema;\r\n        for (let row of formArrVal) {\r\n            let {$source} = row;\r\n            if ($source === undefined) continue;\r\n            let {$isSelected, $isDeleted} = $source;\r\n            row.$isSelected = $isSelected;\r\n            row.$isDeleted = $isDeleted;\r\n            //console.log($isSelected, $isDeleted);\r\n            for (let item of arrItems) {\r\n                this.arrItemOperated(item);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let {beforeShow} = this.props;\r\n        if (beforeShow !== undefined) beforeShow(this.formContext);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.disposer !== undefined) this.disposer();\r\n    }\r\n\r\n    render() {\r\n        let content = this.renderContent();\r\n        return <ContextContainer.Provider value={this.formContext}>\r\n            <this.formContext.renderErrors />\r\n            {this.Container(content)}\r\n        </ContextContainer.Provider>;\r\n    }\r\n\r\n    async buttonClick(buttonName:string) {\r\n        this.formContext.checkRules()\r\n        if (this.formContext.hasError === true) return;\r\n\r\n        let {onButtonClick} = this.formContext.form.props;\r\n        if (onButtonClick === undefined) {\r\n            alert(`you should define form onButtonClick`);\r\n            return;\r\n        }\r\n        let ret = await onButtonClick(buttonName, this.formContext);\r\n        if (ret === undefined) return;\r\n        this.formContext.setError(buttonName, ret);\r\n    }\r\n\r\n    protected DefaultContainer = (content:JSX.Element): JSX.Element => {\r\n        return <form className={classNames(this.props.className)}>\r\n            {content}\r\n        </form>;\r\n    }\r\n    protected DefaultFieldContainer = (label:string|JSX.Element, content:JSX.Element): JSX.Element => {\r\n        let {fieldLabelSize} = this.props;\r\n\r\n        if (fieldLabelSize > 0) {\r\n            let labelView:any;\r\n            if (label === null) {\r\n                fieldLabelSize = 0;\r\n            }\r\n            else {\r\n                labelView = <label className={classNames('col-sm-' + fieldLabelSize, 'col-form-label')}>{label}</label>\r\n            }\r\n            let fieldCol = 'col-sm-' + (12 - fieldLabelSize);\r\n            return <div className=\"form-group row\">\r\n                {labelView}\r\n                <div className={fieldCol}>{content}</div>\r\n            </div>;\r\n        }\r\n        return <div className=\"form-group\">\r\n            {label===null? null:<label className=\"col-form-label\">{label}</label>}\r\n            {content}\r\n        </div>;\r\n    }\r\n    protected DefaultFieldClass:string = undefined;\r\n    protected DefaultButtonClass = 'text-center py-2';\r\n    protected DefaultRes:FormRes = resLang<FormRes>(formRes);\r\n\r\n    ArrContainer = (label:any, content:JSX.Element): JSX.Element => {\r\n        return <div>\r\n            <div className={classNames('small text-muted text-center bg-light py-1 px-3 mt-4 mb-1')}>{label}</div>\r\n            {content}\r\n        </div>;\r\n    }\r\n    RowContainer = (content:JSX.Element): JSX.Element => {\r\n        //return <div className=\"row\">{content}</div>;\r\n        let cn = classNames({\r\n            'py-3': true\r\n        });\r\n        return <div className={cn}>{content}</div>\r\n    }\r\n    RowSeperator = <div className=\"border border-gray border-top\" />;\r\n}\r\n","import * as React from 'react';\r\nimport { factory } from './widgets';\r\nimport { ContextContainer, Context } from './context';\r\n\r\nexport interface FieldProps {\r\n    name: string;\r\n}\r\n\r\nexport class Field extends React.Component<FieldProps> {\r\n    static contextType = ContextContainer;\r\n    render() {\r\n        let {name, children } = this.props;\r\n        let context:Context = this.context;\r\n        if (context === undefined) return <span className=\"text-danger\">!only in Form!</span>;\r\n        let itemSchema = context.getItemSchema(name);\r\n        let content = factory(context, itemSchema, children, this.props);\r\n        if (content === undefined) {\r\n            return <span className=\"text-danger\">!!{name} is not defined!!</span>;\r\n        }\r\n        return content;\r\n    }\r\n}\r\n","export {Form} from './form';\r\nexport {Field} from './field';\r\nexport {Context, RowContext} from './context';\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport '../css/va-badge.css';\r\n\r\nexport interface BadgeProps {\r\n    className?: string;\r\n    badge?: string|number;\r\n    size?: 'xs' | 'sm' | 'lg';\r\n    color?: 'secondary'|'success'|'danger'|'primary'|'info'|'warning';\r\n    badgeAlign?: 'left'|'center'|'right';\r\n    badgeVertical?: 'top'|'middle'|'bottom';\r\n}\r\n\r\n@observer\r\nexport class Badge extends React.Component<BadgeProps> {\r\n    render() {\r\n        let {className, badge, size, color, badgeAlign, badgeVertical, children} = this.props;\r\n        let cn = classNames(\r\n            className,\r\n            'va-badge',\r\n            size && 'va-badge-'+size,\r\n            'va-badge-' + (color||'secondary'),\r\n            badgeAlign && 'va-badg-'+badgeAlign,\r\n            badgeVertical && 'va-badg-'+badgeVertical,\r\n        );\r\n        let b;\r\n        if (badge) b = <b>{badge}</b>;\r\n        return <div className={cn}>\r\n            {children}\r\n            {b}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport * as classNames from 'classnames';\r\nimport '../css/va-lmr.css';\r\n\r\nexport interface LMRProps {\r\n    className?: string | string[];\r\n    left?: string|JSX.Element;\r\n    right?: string|JSX.Element;\r\n    onClick?: ()=>void;\r\n}\r\n\r\n@observer\r\nexport class LMR extends React.Component<LMRProps> {\r\n    render() {\r\n        let {className, left, children, right, onClick} = this.props;\r\n        let l, r;\r\n        if (left !== undefined) l = <header>{left}</header>;\r\n        if (right !== undefined) r = <footer>{right}</footer>;\r\n        let cursor;\r\n        if (onClick !== undefined) cursor = 'cursor-pointer';\r\n        return <div className={classNames('va-lmr', className, cursor)} onClick={onClick}>\r\n            {l}\r\n            <div>{children}</div>\r\n            {r}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\n\r\nexport interface FAProps {\r\n    name: string;\r\n    className?: string;\r\n    size?: 'lg'|'2x'|'3x'|'4x'|'5x';\r\n    spin?: boolean;\r\n    fixWidth?: boolean;\r\n    border?: boolean;\r\n    pull?: 'left'|'right';\r\n    pulse?: boolean;\r\n    rotate?: 90|180|270;\r\n    flip?: 'horizontal'|'vertical';\r\n    inverse?: boolean;\r\n}\r\n\r\nexport class FA extends React.Component<FAProps> {\r\n    render() {\r\n        let {name, className, size, spin, fixWidth, border, pull, pulse, rotate, flip, inverse} = this.props;\r\n        let cn = classNames(className, 'fa',\r\n            name && ('fa-' + name),\r\n            size && 'fa-'+size,\r\n            fixWidth && 'fa-fw',\r\n            border && 'fa-border',\r\n            pull && 'fa-pull-' + pull,\r\n            spin && 'fa-spin',\r\n            pulse && 'fa-pulse',\r\n            rotate && 'fa-rotate-' + rotate,\r\n            flip && 'fa-flip-' + flip,\r\n            inverse && 'fa-inverse',\r\n        );\r\n        return <i className={cn} />\r\n    }\r\n}\r\n\r\nexport interface StackedFAProps {\r\n    className?: string;\r\n    size?: 'lg',\r\n}\r\nexport class StackedFA extends React.Component<StackedFAProps> {\r\n    render() {\r\n        let {className, size, children} = this.props;\r\n        let cn = classNames(\r\n            'fa-stack',\r\n            className,\r\n            size && 'fa-' + size);\r\n        return <span className={cn}>\r\n            {children}\r\n        </span>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\n\r\nexport const Muted = (props:any) => \r\n<small className={classNames('text-muted', props.className)} style={props.style}>\r\n    {props.children}\r\n</small>;\r\n","export * from './Badge';\r\nexport * from './LMR';\r\nexport * from './FA';\r\nexport * from './IconText';\r\nexport * from './Muted';\r\n","import * as React from 'react';\r\nimport { IObservableArray, computed } from 'mobx';\r\nimport { PageItems } from 'tonva-tools';\r\nimport {List} from './index';\r\n\r\nexport abstract class ListBase {\r\n    protected list: List;\r\n    constructor(list: List) {\r\n        this.list = list;\r\n    }\r\n    get isPaged():boolean {\r\n        let items = this.list.props.items;\r\n        return (items !== null && items !== undefined && Array.isArray(items) === false);\r\n    }\r\n    get items():any[]|IObservableArray<any> {\r\n        let items = this.list.props.items;\r\n        if (items === null) return null;\r\n        if (items === undefined) return undefined;\r\n        if (Array.isArray(items) === true)\r\n            return items as IObservableArray<any>;\r\n        else\r\n            return (items as PageItems<any>).items;\r\n    }\r\n    @computed get loading():boolean {\r\n        let items = this.list.props.items;\r\n        if (items === null) return false;\r\n        if (items === undefined) return true;\r\n        let pageItems = items as PageItems<any>;\r\n        if (pageItems.items === undefined) return false;\r\n        return pageItems.loading;\r\n    }\r\n    get selectedItems():any[] { return; }\r\n    updateProps(nextProps:any) {}\r\n    abstract render(item:any, index:number):JSX.Element;\r\n    protected renderContent(item:any, index:number) {\r\n        let {render} = this.list.props.item;\r\n        if (render === undefined) return <div className=\"px-3 py-2\">{JSON.stringify(item)}</div>;\r\n        return render(item, index);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {ListBase} from './base';\r\n\r\nexport class Clickable extends ListBase {\r\n    render(item:any, index:number):JSX.Element {\r\n        let {className, key, onClick} = this.list.props.item;\r\n        return <li key={key===undefined?index:key(item)} className={classNames('va-row-clickable', className)} onClick={()=>onClick(item)}>\r\n            {this.renderContent(item, index)}\r\n        </li>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {ListBase} from './base';\r\nimport { uid } from '../uid';\r\n\r\nexport class Static extends ListBase {\r\n    render(item:any, index:number):JSX.Element {\r\n        let {className, key, render} = this.list.props.item;\r\n        if (typeof item === 'string') {\r\n            let cn = classNames('va-list-gap', 'px-3', 'pt-1');\r\n            return <li key={uid()} className={cn}>{item}</li>;\r\n        }\r\n        return <li key={key===undefined?index:key(item)} className={classNames(className)}>\r\n            {this.renderContent(item, index)}\r\n        </li>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable, computed, IObservableArray} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport {ListBase} from './base';\r\nimport {uid} from '../uid';\r\nimport { PageItems } from 'tonva-tools';\r\n\r\nexport interface SelectableItem {\r\n    selected: boolean;\r\n    item: any;\r\n    labelId: string;\r\n}\r\n\r\nexport class Selectable extends ListBase {\r\n    private _items: SelectableItem[];\r\n    private _selectedItems: any[];\r\n    private input: HTMLInputElement;\r\n    private buildItems() {\r\n        console.log('buildItems in selectable.tsx');\r\n        let {items, selectedItems, compare} = this.list.props;\r\n        let itemsArray:any[] | IObservableArray<any>;\r\n        if (items === undefined) {\r\n            return this._items = undefined;\r\n        }\r\n        if (items === null) {\r\n            return this._items = null;\r\n        }\r\n        if (Array.isArray(items) === true) {\r\n            itemsArray = items as any;\r\n        }\r\n        else {\r\n            itemsArray = (items as PageItems<any>).items;\r\n        }\r\n        //let items = this.items;\r\n        this._selectedItems = selectedItems;\r\n        if (selectedItems === undefined) {\r\n            return this._items = itemsArray.map(v => {\r\n                return {\r\n                    selected:false, \r\n                    item:v, \r\n                    labelId:uid()\r\n                };\r\n            });\r\n        }\r\n        if (compare === undefined) {\r\n            return this._items = itemsArray.map(v => {\r\n                return {\r\n                    selected:selectedItems.find(si => si === v) !== undefined, \r\n                    item:v, \r\n                    labelId:uid()\r\n                };\r\n            });\r\n        }\r\n        return this._items = itemsArray.map(v => {\r\n            return {\r\n                selected:selectedItems.find(si => compare(v, si)) !== undefined, \r\n                item:v, \r\n                labelId:uid()\r\n            };\r\n        });\r\n    }\r\n    @computed get items() {\r\n        //if (this._items === undefined) \r\n        this.buildItems();\r\n        return this._items;\r\n    }\r\n    updateProps(nextProps:any) {\r\n        if (nextProps.selectedItems === this._selectedItems) return;\r\n        this.buildItems();\r\n    }\r\n    private onSelect(item:SelectableItem, selected:boolean) {\r\n        item.selected = selected;\r\n        let anySelected = this._items.some(v => v.selected);\r\n        this.list.props.item.onSelect(item.item, selected, anySelected);\r\n    }\r\n    \r\n    get selectedItems():any[] {\r\n        return this._items.filter(v => v.selected === true).map(v => v.item);\r\n    }\r\n    /*\r\n    set selectedItems(value: any[]) {\r\n        if (value === undefined) return;\r\n        if (this._items === undefined) return;\r\n        let sLen = this._items.length;\r\n        let list = value.slice();\r\n        for (let n=0; n<sLen; n++) {\r\n            let sItem = this._items[n];\r\n            let len = list.length;\r\n            if (len === 0) break;\r\n            let item = sItem.item;\r\n            for (let i=0; i<len; i++) {\r\n                let v = list[i];\r\n                if (item === v) {\r\n                    sItem.selected = true;\r\n                    value.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n        };\r\n    }\r\n    */\r\n    //w-100 mb-0 pl-3\r\n    //m-0 w-100\r\n    render(item:SelectableItem, index:number):JSX.Element {\r\n        let {className, key, render, onSelect} = this.list.props.item;\r\n        let {labelId, selected} = item;\r\n        return <li key={key===undefined?index:key(item)} className={classNames(className)}>\r\n            <div className=\"d-flex align-items-center px-3\">\r\n                <input ref={input=>{\r\n                        if (!input) return;\r\n                        this.input = input; input.checked = selected;\r\n                    }}\r\n                    className=\"\" type=\"checkbox\" value=\"\" id={labelId}\r\n                    defaultChecked={selected}\r\n                    onChange={(e)=>{\r\n                        this.onSelect(item, e.target.checked)} \r\n                    }/>\r\n                <label className=\"\" style={{flex:1, marginBottom:0}} htmlFor={labelId}>\r\n                    {this.renderContent(item.item, index)}\r\n                </label>\r\n            </div>\r\n        </li>\r\n    }\r\n}\r\n/*\r\n<label>\r\n<label className=\"custom-control custom-checkbox\">\r\n    <input type='checkbox' className=\"custom-control-input\"\r\n        //checked={selected}\r\n        onChange={(e)=>this.onSelect(item, e.target.checked)} />\r\n    <span className=\"custom-control-indicator\" />\r\n</label>\r\n{this.renderContent(item.item, index)}\r\n</label>\r\n*/\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {PageItems} from 'tonva-tools';\r\nimport {ListBase} from './base';\r\nimport {Clickable} from './clickable';\r\nimport {Static} from './static';\r\nimport {Selectable} from './selectable';\r\nimport \"../css/va-list.css\";\r\nimport { IObservableArray } from 'mobx';\r\n\r\ntype StaticRow = string|JSX.Element|(()=>string|JSX.Element);\r\n\r\nexport interface ListProps {\r\n    className?: string|string[];\r\n    items: any[] | IObservableArray<any> | PageItems<any>;\r\n    item: {\r\n        className?: string|string[];\r\n        render?: (item:any, index:number) => JSX.Element;\r\n        onSelect?: (item:any, isSelected:boolean, anySelected:boolean)=>void;\r\n        onClick?: (item:any)=>void;\r\n        key?: (item:any)=>string|number;\r\n    };\r\n    compare?:(item:any, selectItem)=>boolean;\r\n    selectedItems?:any[];\r\n    header?: StaticRow;\r\n    footer?: StaticRow;\r\n    before?: StaticRow;\r\n    loading?: StaticRow;\r\n    none?: StaticRow;\r\n}\r\n\r\n@observer\r\nexport class List extends React.Component<ListProps> {\r\n    private listBase: ListBase;\r\n    constructor(props:ListProps) {\r\n        super(props);\r\n        let {item} = this.props;\r\n        let {onClick, onSelect} = item;\r\n        if (onSelect !== undefined)\r\n            this.listBase = new Selectable(this);\r\n        else if (onClick !== undefined)\r\n            this.listBase = new Clickable(this);\r\n        else\r\n            this.listBase = new Static(this);\r\n    }\r\n    _$scroll = (direct: 'top'|'bottom') => {\r\n        console.log('############### items scroll to ' + direct);\r\n    }\r\n    componentWillUpdate(nextProps:ListProps, nextState, nextContext) {\r\n        this.listBase.updateProps(nextProps);\r\n    }\r\n    get selectedItems():any[] {\r\n        return this.listBase.selectedItems;\r\n    }\r\n    render() {\r\n        let {className, header, footer, before, loading, none, item, selectedItems} = this.props;\r\n        if (before === undefined) before = 'before';\r\n        if (loading === undefined) loading = 'loading';\r\n        if (none === undefined) none = 'none';        \r\n        //this.listBase.selectedItems = selectedItems;\r\n        let {isPaged, items, loading:isLoading} = this.listBase;\r\n        function staticRow(row:StaticRow, type:string) {\r\n            if (!row) return;\r\n            switch (typeof row) {\r\n                default:\r\n                case 'string': return <li className={\"va-list-\"+type}>{row}</li>;\r\n                case 'function': return <li className={\"va-list-\"+type}>{(row as ()=>string|JSX.Element)()}</li>;\r\n                case 'object': return <li>{row}</li>\r\n            } \r\n        }\r\n        let content:any;\r\n        if (items === null)\r\n            content = staticRow(before, 'before');\r\n        else if (items === undefined)\r\n            content = staticRow(loading, 'loading');\r\n        else if (items.length === 0)\r\n            content = staticRow(none, 'none');\r\n        else {\r\n            content = items.map((item, index) => {\r\n                return this.listBase.render(item, index);\r\n            });\r\n        }\r\n        return <ul className={classNames('va-list', className)}>\r\n            {staticRow(header, 'header')}\r\n            {content}\r\n            {staticRow(footer, 'footer')}\r\n        </ul>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport * as className from 'classnames';\r\nimport {ListView} from '../listView';\r\nimport {PropGridProps} from './PropGrid';\r\nimport {LabeledProp, StringProp, NumberProp, ListProp, ComponentProp} from './propView';\r\n\r\nexport abstract class PropRow {\r\n    setValues(values: any) {}\r\n    abstract render(key:string): any;\r\n}\r\n\r\nexport class PropBorder extends PropRow {\r\n    render(key:string): JSX.Element {\r\n        return <div key={'_b_' + key} className=\"\">\r\n            <div className=\"col-sm-12\">\r\n                <div style={{borderTop: '1px solid #f0f0f0'}} />\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class PropGap extends PropRow {\r\n    private param: string;\r\n    constructor(param?: string) {\r\n        super();\r\n        this.param = param;\r\n    }\r\n    render(key:string): JSX.Element {\r\n        let w: string;\r\n        switch (this.param) {\r\n            default: w = 'py-2'; break;\r\n            case '=': w = 'py-1'; break;\r\n            case '-': w = 'pb-1'; break;\r\n        }\r\n        let cn = className(w);\r\n        return <div key={'_g_' + key} className={cn} style={{backgroundColor: '#f0f0f0'}} />;\r\n    }\r\n}\r\n\r\nconst valueAlignStart = 'justify-content-start';\r\nconst valueAlignCenter = 'justify-content-center';\r\nconst valueAlignEnd = 'justify-content-end';\r\nexport abstract class LabeledPropRow extends PropRow {\r\n    protected gridProps: PropGridProps;\r\n    protected prop: LabeledProp;\r\n    protected content: any;\r\n    //protected values: any;\r\n    constructor(gridProps:PropGridProps, prop: LabeledProp) {\r\n        super();\r\n        this.gridProps = gridProps;\r\n        this.prop = prop;\r\n        //this.values = values;\r\n    }\r\n    render(key:string):any {\r\n        let {onClick, bk} = this.prop;\r\n        let cn = className({\r\n            \"cursor-pointer\": onClick !== undefined,\r\n            \"bg-white\": bk === undefined, \r\n            \"row\": true\r\n        });\r\n        return <div key={key} className={cn} onClick={onClick}>\r\n            {this.renderLabel()}\r\n            {this.renderProp()}\r\n        </div>;\r\n    }\r\n    protected renderLabel():any {\r\n        let {label} = this.prop;\r\n        if (label === undefined) return null;\r\n        return <label className=\"col-sm-2 col-form-label\">\r\n            {label}\r\n        </label>;\r\n    }\r\n    protected renderProp():any {\r\n        let {label, full} = this.prop as any;\r\n        let align, vAlign;\r\n        switch (this.gridProps.alignValue) {\r\n            case 'left': align = valueAlignStart; break;\r\n            case 'center': align = valueAlignCenter; break;\r\n            case 'right': align = valueAlignEnd; break;\r\n        }\r\n        switch (this.prop.vAlign) {\r\n            case 'top': vAlign = 'align-items-start'; break;\r\n            default:\r\n            case 'center': vAlign = 'align-items-center'; break;\r\n            case 'bottom': vAlign = 'align-items-end'; break;\r\n            case 'stretch': vAlign = 'align-items-stretch'; break;\r\n        }\r\n        let col:string;\r\n        if (full !== true)\r\n            col = label===undefined? 'col-sm-12':'col-sm-10';\r\n        else\r\n            col = 'w-100';\r\n        let cn = className(align, vAlign, col, 'd-flex');\r\n        return <div className={cn}>\r\n            {this.renderPropBody()}\r\n        </div>;\r\n    }\r\n    protected renderPropBody():any {\r\n        return <div className=\"form-control-plaintext\">\r\n            {this.renderPropContent()}\r\n        </div>;\r\n    }\r\n    protected renderPropContent():any {\r\n        return this.content;\r\n    }\r\n}\r\n\r\nexport class StringPropRow extends LabeledPropRow {\r\n    protected prop: StringProp;\r\n    setValues(values:any) {\r\n        if (values === undefined) this.content = undefined;\r\n        else this.content = values[this.prop.name];\r\n    }\r\n}\r\n\r\nexport class NumberPropRow extends LabeledPropRow {\r\n    protected prop: NumberProp;\r\n    setValues(values:any) {\r\n        if (values === undefined) this.content = undefined;\r\n        else this.content = values[this.prop.name];\r\n    }\r\n}\r\n\r\nexport class ListPropRow extends LabeledPropRow {\r\n    protected prop: ListProp;\r\n    setValues(values:any) {\r\n        if (values === undefined) this.content = undefined;\r\n        else {\r\n            let list = this.prop.list;\r\n            if (typeof list === 'string') this.content = values[list];\r\n            else this.content = undefined;\r\n        }\r\n    }\r\n    protected renderPropBody() {\r\n        let {list, row} = this.prop;\r\n        let items:any[] = typeof list === 'string'? this.content : list;\r\n        if (items === undefined) return <div/>;\r\n        // new row(item)\r\n        return <div className=\"w-100\">\r\n            {\r\n                items.map((item, index) => <React.Fragment key={index}>\r\n                    {index===0? null: <div style={{width:'100%', borderBottom:'1px solid #f0f0f0'}} />}\r\n                    {React.createElement(row, item)}\r\n                </React.Fragment>)\r\n            }\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class ComponentPropRow extends LabeledPropRow {\r\n    protected prop: ComponentProp;\r\n    protected renderPropBody() {\r\n        let {component} = this.prop;\r\n        return component;\r\n    }\r\n}\r\n\r\nexport class PropContainer extends PropRow {\r\n    render(key:string): JSX.Element {\r\n        return <div className=\"bg-white\">\r\n            <label className=\"col-sm-2 col-form-label\">\r\n                AAABBBCCC\r\n            </label>\r\n            <div className=\"col-sm-10\">\r\n                <div className=\"form-control-plaintext\">\r\n                    dsfasfa sdf asdf a\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n","import {ListViewProps} from '../listView';\r\nimport {PropGridProps} from './PropGrid';\r\nimport {PropRow, PropBorder, PropGap, PropContainer,\r\n    StringPropRow, NumberPropRow, ListPropRow, ComponentPropRow} from './row';\r\n\r\nexport interface Format {\r\n\r\n}\r\n\r\nexport interface PropBase {\r\n    onClick?: ()=>void;\r\n}\r\n\r\nexport interface LabeledProp extends PropBase {\r\n    label?: string;\r\n    bk?: string;\r\n    vAlign?: 'top'|'bottom'|'center'|'stretch';\r\n}\r\n\r\nexport interface StringProp extends LabeledProp {\r\n    type: 'string';\r\n    name: string;\r\n}\r\n\r\nexport interface NumberProp extends LabeledProp {\r\n    type: 'number';\r\n    name: string;\r\n}\r\n\r\nexport interface FormatProp extends LabeledProp {\r\n    type: 'format';\r\n    format: Format;\r\n}\r\n\r\nexport interface ListProp extends LabeledProp {\r\n    type: 'list';\r\n    list: string | any[];  // string 表示名字，否则就是值\r\n    row: new (props:any) => React.Component;\r\n}\r\n\r\nexport interface ComponentProp extends LabeledProp {\r\n    type: 'component';\r\n    full?: boolean;\r\n    component: any; //JSX.Element;\r\n}\r\n\r\nexport type Prop = StringProp | NumberProp | FormatProp | ListProp | ComponentProp | string;\r\n\r\nexport class PropView {\r\n    private gridProps:PropGridProps\r\n    private props: Prop[];\r\n    //private values:any;\r\n    private rows: PropRow[];\r\n\r\n    constructor(gridProps:PropGridProps, props:Prop[]) {\r\n        this.gridProps = gridProps;\r\n        this.props = props;\r\n        //this.values = values;\r\n        this.buildRows();\r\n    }\r\n\r\n    private buildRows() {\r\n        this.rows = [];\r\n        let isGap:boolean = true;\r\n        for (let prop of this.props) {\r\n            if (typeof prop === 'string') {\r\n                this.rows.push(new PropGap(prop));\r\n                isGap = true;\r\n            }\r\n            else {\r\n                if (!isGap) this.rows.push(new PropBorder());\r\n                let row;\r\n                switch (prop.type) {\r\n                    default: continue;\r\n                    case 'string': row = new StringPropRow(this.gridProps, prop); break;\r\n                    case 'number': row = new NumberPropRow(this.gridProps, prop); break;\r\n                    case 'list': row = new ListPropRow(this.gridProps, prop); break;\r\n                    case 'component': row = new ComponentPropRow(this.gridProps, prop); break;\r\n                }\r\n                this.rows.push(row);\r\n                isGap = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    setValues(values: any) {\r\n        for (let r of this.rows) r.setValues(values);\r\n    }\r\n\r\n    render() {\r\n        return this.rows.map((row, index) => row.render(String(index)));\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {Prop, PropView} from './propView';\r\nimport {PropContainer, PropBorder, PropGap} from './row';\r\n\r\nexport interface PropGridProps {\r\n    className?: string;\r\n    rows: Prop[];\r\n    values: any;\r\n    alignValue?: 'left'|'center'|'right';\r\n}\r\n\r\n@observer\r\nexport class PropGrid extends React.Component<PropGridProps> {\r\n/*\r\n    private propView: PropView;\r\n    constructor(props:PropGridProps) {\r\n        super(props);\r\n    }\r\n*/\r\n/*\r\n    componentWillMount() {\r\n        this.propView = new PropView(this.props.rows);\r\n        this.propView.setValues(this.props.values);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps: Readonly<PropGridProps>, nextContext: any) {\r\n        this.propView = new PropView(this.props.rows);\r\n        this.propView.setValues(nextProps.values);\r\n        this.forceUpdate();\r\n    }\r\n*/\r\n    render() {\r\n        let {className, rows, values} = this.props;\r\n        let propView = new PropView(this.props, rows);\r\n        propView.setValues(values);\r\n        let cn = classNames('container-fluid', className);\r\n        return <div className={cn}>\r\n            {propView.render()}\r\n        </div>;\r\n    }\r\n}\r\n","export * from './propView';\r\nexport * from './row';\r\nexport * from './PropGrid';\r\n","import * as React from 'react';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { ItemEdit } from './itemEdit';\r\n\r\nexport class StringItemEdit extends ItemEdit {\r\n    protected uiItem: UiTextItem;\r\n    protected async internalStart():Promise<any> {\r\n        return new Promise<any>((resolve, reject) => {\r\n            let element = React.createElement(this.page, {resolve:resolve, reject:reject});\r\n            nav.push(element,reject);\r\n        });\r\n    }\r\n\r\n    private onChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.newValue = evt.target.value;\r\n        let preValue = this.value;\r\n        this.isChanged = (this.newValue != preValue);\r\n    }\r\n\r\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\r\n        let {resolve, reject} = props;\r\n        let right = <button\r\n            className=\"btn btn-sm btn-success\"\r\n            disabled={!this.isChanged}\r\n            onClick={()=>resolve(this.newValue)}>保存</button>;\r\n        return <Page header={'更改' + this.label} right={right}>\r\n            <div className=\"m-3\">\r\n                <input type=\"text\" \r\n                    onChange={this.onChange}\r\n                    className=\"form-control\" \r\n                    defaultValue={this.value} />\r\n                {\r\n                    this.uiItem && <div className=\"small muted m-2\">{this.uiItem.placeholder}</div>\r\n                }\r\n            </div>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\r\nimport { observer } from 'mobx-react';\r\nimport { ItemEdit } from './itemEdit';\r\nimport { StringItemEdit } from './stringItemEdit';\r\nimport { ImageItemEdit } from './imageItemEdit';\r\nimport { Image } from '../image';\r\n\r\nexport interface EditProps {\r\n    className?: string;\r\n    schema: Schema;\r\n    data: any;\r\n    onItemClick?: (itemSchema: ItemSchema, uiItem: UiItem, value: any) => Promise<void>;\r\n    onItemChanged?: (itemSchema: ItemSchema, newValue:any, preValue:any) => Promise<void>;\r\n    uiSchema?: UiSchema;\r\n    sepClassName?: string;\r\n    topBorderClassName?: string;\r\n    bottomBorderClassName?: string;\r\n    rowContainerClassName?: string;\r\n}\r\n\r\n@observer\r\nexport class Edit extends React.Component<EditProps> {\r\n    private defaultSepClassName = \"border-top edit-sep-light-gray\";\r\n    private defaultRowContainerClassName = \"d-flex px-3 py-2 cursor-pointer bg-white align-items-center\";\r\n    private topBorder:JSX.Element;\r\n    private bottomBorder:JSX.Element;\r\n    private rowContainerClassName?: string;\r\n    private sep:JSX.Element;\r\n    private uiSchema: {[name:string]: UiItem};\r\n\r\n    constructor(props: EditProps) {\r\n        super(props);\r\n        let {topBorderClassName, bottomBorderClassName, sepClassName, rowContainerClassName, uiSchema} = props;\r\n        this.topBorder = <div className={topBorderClassName || this.defaultSepClassName} />;\r\n        this.bottomBorder = <div className={bottomBorderClassName || this.defaultSepClassName} />;\r\n        this.rowContainerClassName = rowContainerClassName || this.defaultRowContainerClassName;\r\n        this.sep = <div className={sepClassName || this.defaultSepClassName} />;\r\n        this.uiSchema = (uiSchema && uiSchema.items) || {};\r\n    }\r\n\r\n    render() {\r\n        let elItems:JSX.Element[] = [];\r\n        let {schema} = this.props;\r\n        let len = schema.length;\r\n\r\n        elItems.push(this.topBorder);\r\n        for (let i=0; i<len; i++) {\r\n            if (i>0) elItems.push(this.sep);\r\n            elItems.push(this.renderRow(schema[i]));\r\n        }\r\n        elItems.push(this.bottomBorder);\r\n\r\n        return <div>\r\n            {elItems.map((v, index) => <React.Fragment key={index}>{v}</React.Fragment>)}\r\n        </div>;\r\n    }\r\n\r\n    private renderRow(itemSchema: ItemSchema):JSX.Element {\r\n        let {name, type} = itemSchema;\r\n        let divValue:any;\r\n        let uiItem = this.uiSchema[name];\r\n        let label:string = (uiItem && uiItem.label) || name;\r\n        let value:any = this.props.data[name];\r\n        switch (type) {\r\n            default:\r\n                divValue = value? <b>{value}</b> : <small className=\"text-muted\">(无)</small>;\r\n                break;\r\n            case 'image':\r\n                divValue = <Image className=\"w-4c h-4c\" src={value} />;\r\n                break;\r\n        }\r\n        return <div className={this.rowContainerClassName} onClick={async ()=>await this.rowClick(itemSchema, uiItem, label, value)}>\r\n            <div className=\"w-6c\">{label}</div>\r\n            <div className=\"flex-fill d-flex justify-content-end\">{divValue}</div>\r\n            <div className=\"w-2c text-right\"><i className=\"fa fa-chevron-right\" /></div>\r\n        </div>;\r\n    }\r\n\r\n    private rowClick = async (itemSchema: ItemSchema, uiItem: UiItem, label:string, value: any) => {\r\n        let {onItemChanged, onItemClick} = this.props;\r\n        let changeValue:any;\r\n        if (onItemClick !== undefined) {\r\n            await onItemClick(itemSchema, uiItem, value);\r\n            return;\r\n        }\r\n        let itemEdit:ItemEdit = createItemEdit(itemSchema, uiItem, label, value);\r\n        try {\r\n            changeValue = await itemEdit.start();\r\n            if (changeValue != value) {\r\n                if (onItemChanged === undefined) {\r\n                    alert(`${itemSchema.name} value changed, new: ${changeValue}, pre: ${value}`);\r\n                }\r\n                else {\r\n                    await onItemChanged(itemSchema, changeValue, value);\r\n                }\r\n            }\r\n            await itemEdit.end();\r\n        }\r\n        catch (err) {\r\n            console.log('no value changed');\r\n        }\r\n    }\r\n}\r\n\r\nfunction createItemEdit(itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any):ItemEdit {\r\n    let itemEdit: new (itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any) => ItemEdit;\r\n    if (uiItem !== undefined) {\r\n        switch (uiItem.widget) {\r\n            case 'text': itemEdit = StringItemEdit; break;\r\n            case 'image': itemEdit = ImageItemEdit; break;\r\n        }\r\n    }\r\n    else {\r\n        switch (itemSchema.type) {\r\n            case 'string': itemEdit = StringItemEdit; break;\r\n            case 'image': itemEdit = ImageItemEdit; break;\r\n        }\r\n    }\r\n    if (itemEdit === undefined) return;\r\n    return new itemEdit(itemSchema, uiItem, label, value);\r\n}\r\n","export * from './edit';\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {IObservableValue, IComputedValue} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport '../css/va-row.css';\r\n\r\nexport interface ListItem {\r\n    key?: string|number;\r\n    date?: Date;\r\n    icon?: string | JSX.Element;\r\n    main?: string;\r\n    vice?: string;\r\n    middle?: string | JSX.Element;\r\n    midSize?: number;\r\n    right?: string | JSX.Element;\r\n    onClick?: () => void;\r\n    unread?: number|IComputedValue<number>;         // <0 表示red dot\r\n}\r\n\r\nexport interface ListRowProps extends ListItem {\r\n    //onClick: () => void;\r\n}\r\n\r\nexport interface ListRowState {\r\n    pressed: boolean;\r\n}\r\n\r\n@observer\r\nexport class ListRow extends React.Component<ListRowProps, ListRowState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pressed: false,\r\n        }\r\n    }\r\n    render() {\r\n        let {date, main, vice, middle, midSize, icon, unread, right, onClick} = this.props;\r\n        let header, isIcon:boolean, noteNum;\r\n        if (unread !== undefined) {\r\n            let uv:number;\r\n            if (typeof unread === 'number') uv = unread;\r\n            else uv = unread.get();\r\n                if (uv > 0)\r\n                noteNum = <b>{uv}</b>;\r\n            else if (uv < 0)\r\n                noteNum = <b className='dot' />;\r\n        }\r\n        switch (typeof icon) {\r\n            case 'object':\r\n                header = <header>{icon}{noteNum}</header>; \r\n                isIcon= false;\r\n                break;\r\n            case 'string': \r\n                header = <header className='icon'><img src={icon as string} />{noteNum}</header>;\r\n                isIcon= true; \r\n                break;\r\n        }\r\n        let mid;\r\n        if (middle !== undefined) {\r\n            switch (typeof middle) {\r\n                case 'string':\r\n                    mid = <div style={{flex:midSize}}>{middle}</div>;\r\n                    break;\r\n                default:\r\n                    mid = middle;\r\n                    break;\r\n            }\r\n        }\r\n        let footer;\r\n        if (right !== undefined) {\r\n            if (typeof right === 'string')\r\n                footer = <footer><small className=\"text-muted\">{right}</small></footer>;\r\n            else\r\n                footer = <footer>{right}</footer>;\r\n        }\r\n        let viceSpan;\r\n        if (vice !== undefined) viceSpan = <span>{vice}</span>;\r\n        let cn = classNames('va-row', {icon:isIcon, pressed: this.state.pressed}, {\"va-action\": onClick !== undefined});\r\n        return (\r\n        <li className={cn} onClick={onClick}>\r\n            {header}\r\n            <div>\r\n                <div>{main}</div>\r\n                {viceSpan}\r\n            </div>\r\n            {mid}\r\n            {footer}\r\n        </li>\r\n        );\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {ListItem, ListRow} from './listRow';\r\n\r\nexport interface ListViewProps {\r\n    className?: string;\r\n    items?: any[];\r\n    renderRow?: (item:any, index:number, ex?:any) => JSX.Element;\r\n    ex?: any;\r\n    header?: string|JSX.Element;\r\n    beforeLoad?: string|JSX.Element;\r\n    none?: string|JSX.Element;\r\n    footer?: string|JSX.Element;\r\n    itemClick?: (item:any)=>void;\r\n    converter?: (item:any)=>ListItem;\r\n}\r\n\r\n@observer\r\nexport class ListView extends React.Component<ListViewProps, null> {\r\n    render() {\r\n        let {header, items, beforeLoad, none, renderRow, className, footer, itemClick, converter} = this.props;\r\n        let cn = classNames(className, 'va-list');\r\n        let content, elHeader;\r\n        if (items === undefined)\r\n            content = beforeLoad === null? null : <li className='empty'>\r\n                {beforeLoad || '...'}\r\n            </li>;\r\n        else if (items.length === 0) {\r\n            content = (\r\n            <li className='empty'>\r\n                {\r\n                    none || '[none]'\r\n                }\r\n            </li>);\r\n        }\r\n        else if (renderRow !== undefined) {\r\n            content = items.map((item, index) => renderRow(item, index, this.props.ex));\r\n        }\r\n        else {\r\n            content = items.map((item, index) => {\r\n                let onClick = item.onClick;\r\n                if (onClick === undefined && itemClick !== undefined) \r\n                    onClick = ()=>itemClick(item);\r\n                let listItem:ListItem;\r\n                if (converter !== undefined) {\r\n                    listItem = converter(item);\r\n                    if (listItem === undefined) return null;\r\n                }\r\n                else {\r\n                    listItem = {\r\n                        ...item\r\n                    }\r\n                }\r\n                if (listItem.key === undefined) listItem.key = listItem.main;\r\n                return <ListRow onClick={onClick} {...listItem} />;\r\n            });\r\n        }\r\n        if (header !== undefined) {\r\n            if (typeof header === 'string') {\r\n                elHeader = <div className='va-list-header'>{header}</div>;\r\n            }\r\n            else {\r\n                elHeader = header;\r\n            }\r\n        }\r\n\r\n        return (\r\n        <div className={cn}>\r\n            {elHeader}\r\n            <ul>\r\n                {content}\r\n            </ul>\r\n            {footer}\r\n        </div>\r\n        )\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport { IObservableValue } from 'mobx/lib/internal';\r\n\r\nexport type TabCaption = (selected:boolean) => JSX.Element;\r\n\r\nexport interface TabProp {\r\n    name: string;\r\n    caption: TabCaption;\r\n    content: () => JSX.Element;\r\n    notify?: IObservableValue<number>;\r\n}\r\n\r\nexport interface TabsProps {\r\n    tabs: TabProp[];\r\n    size?: 'sm' | 'lg' | 'md';\r\n    tabBack?: string;\r\n    contentBack?: string;\r\n    sep?: string;\r\n    selected?: string;\r\n}\r\n\r\nclass Tab {\r\n    name: string;\r\n    @observable selected: boolean;\r\n    caption: TabCaption;\r\n    contentBuilder: ()=>JSX.Element;\r\n    notify: IObservableValue<number>;\r\n\r\n    private _content: JSX.Element;\r\n    get content(): JSX.Element {\r\n        if (this.selected !== true) return this._content;\r\n        if (this._content !== undefined) return this._content;\r\n        return this._content = this.contentBuilder();\r\n    }\r\n}\r\n\r\nexport const TabCaptionComponent = (label:string, icon:string, color:string) => <div \r\n    className={'d-flex justify-content-center align-items-center flex-column cursor-pointer ' + color}>\r\n    <div><i className={'fa fa-lg fa-' + icon} /></div>\r\n    <small>{label}</small>\r\n</div>;\r\n\r\n@observer export class Tabs extends React.Component<TabsProps> {\r\n    private size: string;\r\n    private tabBack: string;\r\n    private contentBack: string;\r\n    private sep: string;\r\n    @observable private selectedTab: Tab;\r\n    @observable private tabs: Tab[] = [];\r\n\r\n    constructor(props: TabsProps) {\r\n        super(props);\r\n        let {size, tabs, tabBack, contentBack, sep, selected} = this.props;\r\n        switch (size) {\r\n            default:\r\n            case 'md': this.size = '3.2rem'; break;\r\n            case 'sm': this.size = '4rem'; break;\r\n            case 'lg': this.size = '2.5rem'; break;\r\n        }\r\n        this.tabs.push(...tabs.map(v => {\r\n                let tab = new Tab();\r\n                tab.name = v.name;\r\n                tab.selected = false;\r\n                tab.caption = v.caption;\r\n                tab.contentBuilder = v.content;\r\n                tab.notify = v.notify;\r\n                return tab;\r\n            }\r\n        ));\r\n        this.tabBack = tabBack || 'bg-light';\r\n        this.contentBack = contentBack;\r\n        this.sep = sep || 'border-top border-gray';\r\n        if (selected !== undefined) {\r\n            this.selectedTab = this.tabs.find(v => v.name === selected);\r\n        }\r\n        if (this.selectedTab === undefined) this.selectedTab = this.tabs[0];\r\n        this.selectedTab.selected = true;\r\n    }\r\n\r\n    private tabClick = (tab:Tab) => {\r\n        this.selectedTab.selected = false;\r\n        tab.selected = true;\r\n        this.selectedTab = tab;\r\n    }\r\n\r\n    showTab(tabName: string) {\r\n        let tab = this.tabs.find(v => v.name === tabName);\r\n        if (tab === undefined) return;\r\n        if (this.selectedTab !== undefined) this.selectedTab.selected = false;\r\n        tab.selected = true;\r\n        this.selectedTab = tab;\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"tab\">\r\n            <div className={this.contentBack} style={{height: 'calc(100% - ' + this.size + ')'}}>\r\n                {this.tabs.map((v,index) => {\r\n                    let style:React.CSSProperties={\r\n                        display: v.selected===true? undefined : 'none'};\r\n                    return <div key={index} style={style}>{v.content}</div>;\r\n                })}\r\n            </div>\r\n            <div className={classNames(this.tabBack, this.sep)} style={{height: this.size}}>\r\n                {this.tabs.map((v,index) => {\r\n                    let {selected, caption, notify} = v;\r\n                    let notifyCircle:any;\r\n                    if (notify !== undefined) {\r\n                        let num = notify.get();\r\n                        if (num !== undefined) {\r\n                            if (num > 0) notifyCircle = <u>{num>99?'99+':num}</u>;\r\n                            else if (num < 0) notifyCircle = <u className=\"dot\" />;\r\n                        }\r\n                    }\r\n                    return <div key={index} className=\"\" onClick={()=>this.tabClick(v)}>\r\n                        <div className=\"align-self-center\">\r\n                            {notifyCircle}\r\n                            {caption(selected)}\r\n                        </div>\r\n                    </div>\r\n                })}\r\n            </div>\r\n        </div>\r\n    }\r\n};\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { VPage, Page, Form, ItemSchema, UiSchema, StringSchema, UiTextItem, UiPasswordItem, ButtonSchema, Edit, ImageSchema, nav, UiImageItem } from '../ui';\r\nimport userApi from './userApi';\r\n\r\nexport class EditMeInfo extends React.Component {\r\n    private schema:ItemSchema[] = [\r\n        {name:'nick', type:'string'} as StringSchema,\r\n        {name:'icon', type:'image'} as ImageSchema\r\n    ];\r\n    private uiSchema:UiSchema = {\r\n        items: {\r\n            nick: {widget:'text', label:'别名', placeholder:'好的别名更方便记忆'} as UiTextItem,\r\n            icon: {widget:'image', label:'头像'} as UiImageItem,\r\n        }\r\n    }\r\n    @observable private data:any;\r\n\r\n    constructor(props:any) {\r\n        super(props);\r\n        let {nick, icon} = nav.user;\r\n        this.data = {\r\n            nick: nick,\r\n            icon: icon,\r\n        }\r\n    }\r\n\r\n    private onItemChanged = async (itemSchema:ItemSchema, newValue:any, preValue:any) => {\r\n        let {name} = itemSchema;\r\n        await userApi.userSetProp(name, newValue);\r\n        this.data[name] = newValue;\r\n        nav.user[name] = newValue;\r\n        nav.saveLocalUser();\r\n    }\r\n\r\n    render() {\r\n        return <Page header=\"个人信息\">\r\n            <Edit schema={this.schema} uiSchema={this.uiSchema}\r\n                data={this.data}\r\n                onItemChanged={this.onItemChanged} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {FetchError} from '../fetchError';\r\nimport { refetchApi } from '../net';\r\n\r\nexport interface FetchErrorProps extends FetchError {\r\n    clearError: ()=>void\r\n}\r\n\r\nexport default class FetchErrorView extends React.Component<FetchErrorProps, null> {\r\n    private reApi = async () => {\r\n        this.props.clearError();\r\n        const {channel, url, options, resolve, reject} = this.props;\r\n        await refetchApi(channel, url, options, resolve, reject);\r\n    }\r\n    private close = async () => {\r\n        this.props.clearError();\r\n    }\r\n    render() {\r\n        let {error, url} = this.props;\r\n            //let errMsg = fetchError.errorMsg;\r\n        let errContent;\r\n        if (typeof error === 'object') {\r\n            let err = [];\r\n            for (let i in error) {\r\n                err.push(<li key={i}><label>{i}</label><div>{error[i]}</div></li>);\r\n            }\r\n            errContent = <ul>{err}</ul>;\r\n        }\r\n        else {\r\n            errContent = <div>{error}</div>;\r\n        }\r\n        return <li>\r\n            <article className=\"page-container\">\r\n                <section>\r\n                    <div  className=\"va-error\">\r\n                        <div>网络出现问题</div>\r\n                        <div>点击重新访问</div>\r\n                        <div>url: {url}</div>\r\n                        {errContent}\r\n                        <div className=\"p-3\">\r\n                            <button type='button' onClick={this.reApi}>重新API</button>\r\n                            <button type='button' onClick={this.close}>关闭</button>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </article>\r\n        </li>;\r\n    }\r\n}\r\n","import {User, Guest, Unit} from './user';\r\n\r\nexport interface ClearableData {\r\n    clear(): void;\r\n}\r\n\r\nexport class Data<T> implements ClearableData {\r\n    private name: string;\r\n    private value?: T;\r\n    constructor(name: string) {this.name = name; }\r\n    get(): T {\r\n        if (this.value !== undefined) return this.value;\r\n        let v = localStorage.getItem(this.name);\r\n        return this.value = v === null ? undefined : JSON.parse(v); \r\n    }\r\n    set(value: T) {\r\n        if (!value) { this.clear(); return; }\r\n        this.value = value;\r\n        localStorage.setItem(this.name, JSON.stringify(value));\r\n    }\r\n    clear() {\r\n        this.value = undefined;\r\n        localStorage.removeItem(this.name);\r\n    }\r\n}\r\n\r\nexport class LocalData {\r\n    user = new Data<User>('user');\r\n    guest = new Data<Guest>('guest');\r\n    unit = new Data<Unit>('unit');\r\n    homeTabCur = new Data<number>('homeTabCur');\r\n\r\n    logoutClear() {\r\n        [\r\n            this.user,\r\n            this.unit,\r\n            this.homeTabCur\r\n        ].map(d => d.clear());\r\n    }\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import {CenterApi, User, appInFrame} from 'tonva-tools';\r\nimport { string } from 'prop-types';\r\n\r\nclass MainApi extends CenterApi {\r\n    async stickies():Promise<any[]> {\r\n        return await this.get('sticky/list', {start:0, pageSize:30});\r\n    }\r\n\r\n    async ties():Promise<any[]> {\r\n        return await this.get('tie/list', {start:0, pageSize:30});\r\n    }\r\n\r\n    async apps(unit:number):Promise<any> {\r\n        return await this.get('tie/apps', {unit:unit});\r\n    }\r\n\r\n    async appApi(unit:number, app:number, apiName:string) {\r\n        return await this.get('tie/app-api', {unit:unit, app:app, apiName:apiName});\r\n    }\r\n\r\n    async userId(name:string):Promise<number> {\r\n        return await this.get('tie/user-id', {name:name});\r\n    }\r\n\r\n    async userAdminUnits():Promise<any[]> {\r\n        return await this.get('tie/user-admin-units', {});\r\n    }\r\n\r\n    async sendMessage(toUser:number, type:string, content:any) {\r\n        let {unit} = appInFrame;\r\n        let adminApp = 0;\r\n        return await this.post('tie/send-message', {\r\n            type: type, \r\n            fromUnit: unit, \r\n            fromApp: adminApp,\r\n            toUser: toUser, \r\n            content: content, \r\n        });\r\n    }\r\n\r\n    async unit(unit:number):Promise<any> {\r\n        return await this.get('unit/', {unit:unit});\r\n    }\r\n\r\n    async unitMemberCount(unit:number):Promise<number> {\r\n        return await this.get('unit/member-count', {unit:unit});\r\n    }\r\n\r\n    async unitAdmins(unit:number):Promise<any[]> {\r\n        return await this.get('unit/admins', {unit:unit});\r\n    }\r\n\r\n    async unitSetAdmin(fellow:number, unit:number, isOwner:number, isAdmin:number):Promise<any> {\r\n        return await this.post('unit/set-admin', {fellow:fellow, unit:unit, isOwner:isOwner, isAdmin:isAdmin});\r\n    }\r\n\r\n    async unitAddAdmin(user:string, unit:number, isOwner:number, isAdmin:number):Promise<any> {\r\n        return await this.post('unit/add-admin', {user:user, unit:unit, isOwner:isOwner, isAdmin:isAdmin});\r\n    }\r\n\r\n    async unitApps(unit:number):Promise<any[]> {\r\n        return await this.get('unit/apps', {unit:unit});\r\n    }\r\n\r\n    async unitAddApp(unit:number, app:number):Promise<number> {\r\n        let ret = await this.post('unit/add-app', {unit:unit, app:app});\r\n        return ret;\r\n    }\r\n\r\n    async unitDeleteApp(unit:number, app:number, deleted:number):Promise<void> {\r\n        await this.post('unit/delete-app', {unit:unit, app:app, deleted:deleted});\r\n    }\r\n\r\n    async unitChangeProp(unit:number, prop:string, value:any):Promise<void> {\r\n        await this.post('unit/change-prop', {unit:unit, prop:prop, value:value});\r\n    }\r\n\r\n    async searchApp(unit:number, key:string, pageStart:any, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/search-app', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n\r\n    async unitRoles(unit:number):Promise<any[]> {\r\n        return await this.get('unit/roles', {unit:unit});\r\n    }\r\n\r\n    async unitAddRole(unit:number, name:string, discription:string):Promise<number> {\r\n        return await this.post('unit/add-role', {unit:unit, name:name, discription:discription});\r\n    }\r\n\r\n    async unitRoleChangeProp(unit:number, role:number, prop:string, value:any):Promise<void> {\r\n        await this.post('unit/change-role-prop', {unit:unit, role:role, prop:prop, value:value});\r\n    }\r\n\r\n    async unitRoleApps(unit:number, role:number):Promise<any[]> {\r\n        return await this.get('unit/role-apps', {unit:unit, role:role});\r\n    }\r\n\r\n    async unitRoleSetApps(unit:number, role:number, apps:number[]):Promise<void> {\r\n        await this.post('unit/role-set-apps', {unit:unit, role:role, apps:apps});\r\n    }\r\n\r\n    async unitMembers(unit:number, role:number, key:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/members', {unit:unit, role:role, key, pageStart, pageSize});\r\n    }\r\n\r\n    async unitAssignMember(unit:number, member:number, assigned:string):Promise<void> {\r\n        await this.post('unit/assign-member', {unit:unit, member:member, assigned:assigned});\r\n    }\r\n\r\n    async unitMemberRoles(unit:number, member:number):Promise<any[]> {\r\n        return await this.get('unit/member-roles', {unit:unit, member:member});\r\n    }\r\n\r\n    async unitSetMemberRoles(unit:number, member:number, roles:number[]):Promise<void> {\r\n        await this.post('unit/member-set-roles', {unit:unit, member:member, roles:roles});\r\n    }\r\n\r\n    async unitUsers(unit:number, key:string, pageStart:number, pageSize:number):Promise<any> {\r\n        return await this.get('unit/users', {unit: unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitAppUsers(unit:number, key:string, pageStart:number, pageSize:number):Promise<any> {\r\n        return await this.get('unit/app-users', {unit: unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitOneAppUsers(unit:number, app:number, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/one-app-users', {unit: unit, app:app, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitOneUserApps(unit:number, user:number, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/one-user-apps', {unit: unit, user:user, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitAppEditUsers(unit:number, app:number, key:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/app-edit-users', {unit: unit, app:app, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitUserEditApps(unit:number, user:number, key:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/user-edit-apps', {unit: unit, user:user, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async bindAppUser(unit:number, app:number, user:number, bind:number):Promise<void> {\r\n        await this.post('unit/bind-app-user', {unit: unit, app:app, user:user, bind:bind});\r\n    }\r\n\r\n    async userFromKey(key:string):Promise<any> {\r\n        return await this.get('tie/user-from-key', {key:key});\r\n    }\r\n    async unitAddUser(unit:number, user:number) {\r\n        await this.post('unit/add-user', {unit:unit, user:user});\r\n    }\r\n}\r\n\r\nexport const mainApi = new MainApi('tv/', undefined);\r\n","import {CenterApi} from 'tonva-tools';\r\n\r\nclass DevApi extends CenterApi {\r\n    async uqBuilderUrl():Promise<any> {\r\n        let ret = await this.get('uq-builder-url', undefined);\r\n        return ret;\r\n    }    \r\n    async counts(unit:number):Promise<any> {\r\n        return await this.get('counts', {unit:unit});\r\n    }\r\n    async app(id:number):Promise<any> {\r\n        return await this.get('app', {id:id});\r\n    }\r\n    async uq(id:number):Promise<any> {\r\n        return await this.get('uq', {id:id});\r\n    }\r\n    async server(id:number):Promise<any> {\r\n        return await this.get('server', {id:id});\r\n    }\r\n    async uqdb(id:number):Promise<any> {\r\n        return await this.get('uqdb', {id:id});\r\n    }\r\n    async apps(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('apps', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async uqs(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('uqs', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async buses(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('buses', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async servers(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('servers', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async uqdbs(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('uqdbs', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async services(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('services', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async saveApp(values:any):Promise<number> {\r\n        return await this.post('app-save', values);\r\n    }\r\n    async saveUq(values:any):Promise<number> {\r\n        return await this.post('uq-save', values);\r\n    }\r\n    async saveBus(values:any):Promise<number> {\r\n        return await this.post('bus-save', values);\r\n    }\r\n    async saveServer(values:any):Promise<number> {\r\n        return await this.post('server-save', values);\r\n    }\r\n    async saveUqdb(values:any):Promise<number> {\r\n        return await this.post('uqdb-save', values);\r\n    }\r\n    async saveService(values:any):Promise<number> {\r\n        return await this.post('service-save', values);\r\n    }\r\n    async delApp(unit:number,id:number):Promise<void> {\r\n        return await this.post('app-del', {unit:unit, id:id});\r\n    }\r\n    async delUq(unit:number,id:number):Promise<void> {\r\n        return await this.post('uq-del', {unit:unit, id:id});\r\n    }\r\n    async delBus(unit:number,id:number):Promise<void> {\r\n        return await this.post('bus-del', {unit:unit, id:id});\r\n    }\r\n    async delServer(unit:number,id:number):Promise<void> {\r\n        return await this.post('server-del', {unit:unit, id:id});\r\n    }\r\n    async delUqdb(unit:number,id:number):Promise<void> {\r\n        return await this.post('uqdb-del', {unit:unit, id:id});\r\n    }\r\n    async delService(unit:number,id:number):Promise<void> {\r\n        return await this.post('service-del', {unit:unit, id:id});\r\n    }\r\n    async loadAppUqs(app:number):Promise<any[]> {\r\n        return await this.get('app-uqs', {app: app});\r\n    }\r\n    async appBindUq(unit:number,app:number,uqs:{id:number, access:string[]}[]):Promise<void> {\r\n        let uqsText:string;\r\n        if (uqs !== undefined) {\r\n            uqsText = uqs.map(v => String(v.id)+'|'+v.access.join(',')).join(';');\r\n        }\r\n        await this.post('app-bind-uq', {unit:unit, app:app, uqs:uqsText});\r\n    }\r\n    async searchUq(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('uq-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async getMyUqs(unit:number):Promise<any[]> {\r\n        return await this.get('my-uqs', {unit:unit});\r\n    }\r\n    async searchApp(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('app-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async searchServer(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('server-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async searchUqdb(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('uqdb-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    //async loadAppServices(unit:number, app:number):Promise<any[]> {\r\n    //    return await this.get('app-services', {unit:unit, app:app});\r\n    //}\r\n    async loadUqServices(unit:number, uq:number):Promise<any[]> {\r\n        return await this.get('uq-services', {unit:unit, uq:uq});\r\n    }\r\n    async changeServiceProp(unit:number, service:number, prop:string, value:any):Promise<number> {\r\n        return await this.post('service-change-prop', {unit:unit, service:service, prop:prop, value:value});\r\n    }\r\n    async uqGetEntities(unit:number, uq:number):Promise<any[][]> {\r\n        return await this.get('uq-get-entities', {unit:unit, uq:uq});\r\n    }\r\n}\r\n\r\nexport const devApi = new DevApi('tv/dev/', undefined);\r\n","import {observable} from 'mobx';\r\nimport {UnitAdmin} from '../model';\r\nimport {mainApi} from '../api';\r\nimport {Store} from './index';\r\n\r\nexport class Admins {\r\n    private store:Store;\r\n    constructor(store:Store) {\r\n        this.store = store;\r\n    }\r\n\r\n    @observable cur: UnitAdmin = undefined;\r\n    @observable owners: UnitAdmin[] = undefined;\r\n    @observable admins: UnitAdmin[] = undefined;\r\n    @observable fellows: UnitAdmin[] = undefined;\r\n    \r\n    async load(): Promise<void> {\r\n        let unit = this.store.unit;\r\n        if (unit === undefined) return;\r\n        if (unit.id === undefined) return;\r\n        if (this.admins !== undefined) return;\r\n        let all = await mainApi.unitAdmins(unit.id);\r\n        let owners:UnitAdmin[] = [];\r\n        let admins:UnitAdmin[] = [];\r\n        let fellows:UnitAdmin[] = [];\r\n        all.forEach(ua => {\r\n            let {isOwner, isAdmin} = ua;\r\n            if (isOwner === 0 && isAdmin === 0)\r\n                fellows.push(ua);\r\n            else {\r\n                if (isOwner === 1) owners.push(ua);\r\n                if (isAdmin === 1) admins.push(ua);\r\n            }\r\n        });\r\n        this.owners = owners;\r\n        this.admins = admins;\r\n        this.fellows = fellows;\r\n    }\r\n\r\n    private removeCur(arr: UnitAdmin[]) {\r\n        let index = arr.findIndex(v => v.id===this.cur.id);\r\n        if (index >=0) arr.splice(index, 1);\r\n    }\r\n\r\n    async unitSetAdmin(isOwner:number, isAdmin:number) {\r\n        let cur = this.cur;\r\n        cur.isOwner = isOwner;\r\n        cur.isAdmin = isAdmin;\r\n        let fellowId = cur.id, unitId = this.store.unit.id;\r\n        await mainApi.unitSetAdmin(fellowId, unitId, isOwner, isAdmin);\r\n        this.removeCur(this.owners);\r\n        this.removeCur(this.admins);\r\n        this.removeCur(this.fellows);\r\n        if (isOwner === 0 && isAdmin === 0)\r\n            this.fellows.unshift(cur);\r\n        else {\r\n            if (isOwner === 1) this.owners.unshift(cur);\r\n            if (isAdmin === 1) this.admins.unshift(cur);\r\n        }\r\n    }\r\n\r\n    async addNew(user:string, isOwner:number, isAdmin:number):Promise<UnitAdmin> {\r\n        let admin = await mainApi.unitAddAdmin(user, this.store.unit.id, isOwner, isAdmin);\r\n        if (admin !== undefined) {\r\n            let cur = this.cur = admin;\r\n            this.removeCur(this.owners);\r\n            this.removeCur(this.admins);\r\n            this.removeCur(this.fellows);\r\n            if (isOwner === 0 && isAdmin === 0)\r\n                this.fellows.unshift(cur);\r\n            else {\r\n                if (isOwner === 1) this.owners.unshift(cur);\r\n                if (isAdmin === 1) this.admins.unshift(cur);\r\n            }\r\n        }\r\n        return admin;\r\n    }\r\n}\r\n","import {observable, autorun} from 'mobx';\r\nimport _ from 'lodash';\r\nimport {devApi} from '../api';\r\nimport {DevModel, Unit} from '../model';\r\nimport {Store} from './index';\r\n\r\ninterface Counts {\r\n    uq: number;\r\n    app: number;\r\n    bus: number;\r\n    server: number;\r\n    service: number;\r\n    //uqdb: number;\r\n}\r\n\r\nexport abstract class ObjItems<T extends DevModel.ObjBase> {\r\n    protected store:Store;\r\n    protected dev:Dev;\r\n    constructor(store:Store, dev:Dev) {\r\n        this.store = store;\r\n        this.dev = dev;\r\n    }\r\n\r\n    @observable items: T[] = undefined;\r\n    @observable cur: T = undefined;\r\n\r\n    async load():Promise<void> {\r\n         let ret = await this._load();\r\n         this.items = ret;\r\n    }\r\n    protected abstract _load():Promise<T[]>;\r\n    async saveCur(item:T):Promise<boolean> {\r\n        let values:any = {};\r\n        if (this.cur !== undefined) {\r\n            _.assign(values, this.cur, item);\r\n        }\r\n        else {\r\n            _.assign(values, item);\r\n        }\r\n\r\n        values.unit = item.unit = this.store.unit.id;\r\n        let id = await this._save(values);\r\n        if (this.cur === undefined) {\r\n            if (id === 0) return false;\r\n            values.id = id;\r\n            if (this.items !== undefined) this.items.unshift(values);\r\n            this._inc();\r\n            this.cur = observable(values);\r\n        }\r\n        else {\r\n            _.assign(this.cur, values);\r\n        }\r\n        return true;\r\n    }\r\n    async save(item:T):Promise<T> {\r\n        let values:any = {};\r\n        _.assign(values, item);\r\n\r\n        values.unit = item.unit = this.store.unit.id;\r\n        let id = await this._save(values);\r\n        if (id === 0) return;\r\n        values.id = id;\r\n        return values;\r\n    }\r\n    protected abstract _save(item:T):Promise<number>;\r\n    async del():Promise<void> {\r\n        let c = this.cur;\r\n        if (c === undefined) return;\r\n        let id = c.id;\r\n        await this._del(c);\r\n        if (this.items === undefined) return;\r\n        let index = this.items.findIndex(v => v.id === id);\r\n        if (index>=0) {\r\n            this.items.splice(index, 1);\r\n            this._dec();\r\n        }\r\n    }\r\n    protected abstract _del(item:T):Promise<void>;\r\n    protected abstract _inc();\r\n    protected abstract _dec();\r\n}\r\n\r\nclass Apps extends ObjItems<DevModel.App> {\r\n    @observable uqs: DevModel.UQ[] = undefined;\r\n    @observable searchedUqs: DevModel.UQ[] = undefined;\r\n    //@observable service: DevModel.Service = null;\r\n    protected async _load() {\r\n        return await devApi.apps(this.store.unit.id);\r\n    }\r\n    protected async _save(item:DevModel.App):Promise<number> {\r\n        return await devApi.saveApp(item);\r\n    }\r\n    protected async _del(item:DevModel.App):Promise<void> {\r\n        await devApi.delApp(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.app++; }\r\n    protected _dec() { this.dev.counts.app--; }\r\n\r\n    public async loadCurUqs() {\r\n        let ret = await devApi.loadAppUqs(this.cur.id);\r\n        this.uqs = ret;\r\n    }\r\n    public async searchUq(key:string) {\r\n        this.searchedUqs = await devApi.searchUq(this.store.unit.id, key, 0, searchPageSize);\r\n    }\r\n    public async appBindUq(uqs:{id:number, access:string[]}[], bind:boolean) {\r\n        let allUqs:{id:number, access:string[]}[] = this.uqs.map(v => {\r\n            let {id, access} = v;\r\n            return {id: id, access: [access]};\r\n        });\r\n        for (let uq of uqs) {\r\n            let index = allUqs.findIndex(v => v.id === uq.id);\r\n            if (bind === true) {\r\n                if (index < 0) allUqs.unshift(uq);\r\n            }\r\n            else {\r\n                allUqs.splice(index, 1);\r\n            }\r\n        }\r\n        await devApi.appBindUq(this.store.unit.id, this.cur.id, allUqs);\r\n        for (let uq of uqs) {\r\n            let index = this.uqs.findIndex(a => a.id === uq.id);\r\n            if (index>=0) this.uqs.splice(index, 1);\r\n            if (bind === true) {\r\n                if (this.searchedUqs !== undefined) {\r\n                    let find = this.searchedUqs.find(a => a.id === uq.id);\r\n                    if (find !== undefined) this.uqs.unshift(find);\r\n                }\r\n            }\r\n            else {\r\n                // 已经删除，不需要处理\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass Uqs extends ObjItems<DevModel.UQ> {\r\n    protected async _load() {\r\n        let ret = await devApi.uqs(this.store.unit.id);\r\n        return ret;\r\n    }\r\n    protected async _save(item:DevModel.UQ):Promise<number> {\r\n        //let {access} = item;\r\n        //if (!access) access = \"*\";\r\n        //let parts = access.split(',').map(v => v.trim()).filter(v => v!=='');\r\n        //item.access = parts.join(',');\r\n        return await devApi.saveUq(item);\r\n    }\r\n    protected async _del(item:DevModel.UQ):Promise<void> {\r\n        await devApi.delUq(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.uq++; }\r\n    protected _dec() { this.dev.counts.uq--; }\r\n}\r\n\r\nclass Buses extends ObjItems<DevModel.Bus> {\r\n    protected async _load() {\r\n        let ret = await devApi.buses(this.store.unit.id);\r\n        return ret;\r\n    }\r\n    protected async _save(item:DevModel.Bus):Promise<number> {\r\n        return await devApi.saveBus(item);\r\n    }\r\n    protected async _del(item:DevModel.Bus):Promise<void> {\r\n        await devApi.delBus(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.bus++; }\r\n    protected _dec() { this.dev.counts.bus--; }\r\n}\r\n\r\nclass Servers extends ObjItems<DevModel.Server> {\r\n    protected async _load() {\r\n        return await devApi.servers(this.store.unit.id);\r\n    }\r\n    protected async _save(item:DevModel.Server):Promise<number> {\r\n        return await devApi.saveServer(item);\r\n    }\r\n    protected async _del(item:DevModel.Server):Promise<void> {\r\n        await devApi.delServer(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.server++; }\r\n    protected _dec() { this.dev.counts.server--; }\r\n}\r\n/*\r\nclass Uqdbs extends ObjItems<DevModel.Uqdb> {\r\n    protected async _load() {\r\n        return await devApi.uqdbs(this.store.unit.id);\r\n    }\r\n    protected async _save(item:DevModel.Uqdb):Promise<number> {\r\n        return await devApi.saveUqdb(item);\r\n    }\r\n    protected async _del(item:DevModel.Uqdb):Promise<void> {\r\n        await devApi.delUqdb(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.uqdb++; }\r\n    protected _dec() { this.dev.counts.uqdb--; }\r\n}\r\n*/\r\nclass Services extends ObjItems<DevModel.Service> {\r\n    protected async _load() {\r\n        return await devApi.services(this.store.unit.id);\r\n    }\r\n    protected async _save(item:DevModel.Service):Promise<number> {\r\n        return await devApi.saveService(item);\r\n    }\r\n    protected async _del(item:DevModel.Service):Promise<void> {\r\n        await devApi.delService(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.service++; }\r\n    protected _dec() { this.dev.counts.service--; }\r\n    async changeProp(prop:string, value:any):Promise<number> {\r\n        let ret = await devApi.changeServiceProp(this.store.unit.id, this.cur.id, prop, value);\r\n        switch (prop) {\r\n            case 'url': this.cur.url = value; break;\r\n            case 'server': this.cur.server = value; break;\r\n            case 'db': this.cur.db = value; break;\r\n            case 'db_type': this.cur.db_type = value; break;\r\n            case 'connection': this.cur.connection = value; break;\r\n        }\r\n        return ret;\r\n    }\r\n    async loadUqServices(uq:number):Promise<void> {\r\n        let ret = await devApi.loadUqServices(this.store.unit.id, uq);\r\n        this.items = ret[0];\r\n    }\r\n}\r\n\r\nconst searchPageSize = 50;\r\ntype Search = (unit:number,key:string,pageStart:number,pageSize:number)=>Promise<any[]>;\r\nclass SearchItems<T extends DevModel.ObjBase> {\r\n    private store:Store;\r\n    private dev:Dev;\r\n    private search:(unit:number,key:string,pageStart:number,pageSize:number)=>Promise<any[]>;\r\n\r\n    constructor(store:Store, dev:Dev, search:Search) {\r\n        this.store = store;\r\n        this.dev = dev;\r\n        this.search = search;\r\n    }\r\n\r\n    @observable items: T[] = undefined;\r\n    allLoaded: boolean = false;\r\n    private key: string;\r\n    private pageStart = 0;\r\n\r\n    async first(key:string) {\r\n        this.key = key;\r\n        this.items = undefined;\r\n        this.allLoaded = false;\r\n        this.pageStart = 0;\r\n        await this.more();\r\n    }\r\n\r\n    async more():Promise<void> {\r\n        if (this.allLoaded === true) return;\r\n        let ret = await this.search(this.store.unit.id, this.key, this.pageStart, searchPageSize);\r\n        let len = ret.length;\r\n        if (len > searchPageSize) {\r\n            this.allLoaded = false;\r\n            --len;\r\n            ret.splice(len, 1);\r\n        }\r\n        else {\r\n            this.allLoaded = true;\r\n        }\r\n        if (len > 0) {\r\n            this.pageStart = ret[len-1].id;\r\n            if (this.items === undefined)\r\n                this.items = ret;\r\n            else\r\n                this.items.push(...ret);\r\n        }\r\n        else {\r\n            this.items = [];\r\n        }\r\n    }\r\n}\r\n\r\nexport class Dev {\r\n    private store:Store;\r\n    constructor(store:Store) {\r\n        this.store = store;\r\n        this.apps = new Apps(store, this);\r\n        this.uqs = new Uqs(store, this);\r\n        this.buses = new Buses(store, this);\r\n        this.servers = new Servers(store, this);\r\n        //this.uqdbs = new Uqdbs(store, this);\r\n        this.services = new Services(store, this);\r\n        this.searchApp = new SearchItems<DevModel.App>(store, this, devApi.searchApp.bind(devApi));\r\n        this.searchUq = new SearchItems<DevModel.UQ>(store, this, devApi.searchUq.bind(devApi));\r\n        this.searchServer = new SearchItems<DevModel.Server>(store, this, devApi.searchServer.bind(devApi));\r\n    }\r\n\r\n    @observable counts:Counts = undefined;\r\n    apps:Apps = undefined;\r\n    uqs:Uqs = undefined;\r\n    buses:Buses = undefined;\r\n    servers:Servers = undefined;\r\n    //uqdbs:Uqdbs = undefined;\r\n    services:Services = undefined;\r\n\r\n    searchApp:SearchItems<DevModel.App> = undefined;\r\n    searchUq:SearchItems<DevModel.UQ> = undefined;\r\n    searchServer:SearchItems<DevModel.Server> = undefined;\r\n    searchUqdb:SearchItems<DevModel.Uqdb> = undefined;\r\n    \r\n    async loadCounts(): Promise<void> {\r\n        let {unit} = this.store;\r\n        this.counts = await devApi.counts(unit.id);\r\n    }\r\n}\r\n","import {CacheIds} from 'tonva-tools';\r\nimport {Id, Unit, DevModel} from '../model';\r\nimport {mainApi, devApi} from '../api';\r\n\r\nexport class CacheUnits extends CacheIds<Unit> {\r\n    protected async _loadIds(ids:number[]):Promise<Unit[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<Unit> {\r\n        return await mainApi.unit(id);\r\n    }\r\n}\r\n\r\nexport class CacheUqs extends CacheIds<DevModel.UQ> {\r\n    protected async _loadIds(ids:number[]):Promise<DevModel.UQ[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<DevModel.UQ> {\r\n        return await devApi.uq(id);\r\n    }\r\n}\r\n\r\nexport class CacheApps extends CacheIds<DevModel.App> {\r\n    protected async _loadIds(ids:number[]):Promise<DevModel.App[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<DevModel.App> {\r\n        return await devApi.app(id);\r\n    }\r\n}\r\n\r\nexport class CacheServers extends CacheIds<DevModel.Server> {\r\n    protected async _loadIds(ids:number[]):Promise<DevModel.Server[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<DevModel.Server> {\r\n        return await devApi.server(id);\r\n    }\r\n}\r\n","import {observable, autorun} from 'mobx';\r\nimport _ from 'lodash';\r\nimport {appInFrame, host} from 'tonva-tools';\r\nimport {mainApi, devApi} from '../api';\r\nimport {Unit, UnitApps, App, Api, UnitAdmin, UnitApp, Role, RoleMember} from '../model';\r\nimport {Admins} from './admins';\r\nimport {Dev} from './dev';\r\nimport {CacheUnits, CacheUqs, CacheApps, CacheServers} from './cacheIds';\r\n\r\nexport class Store {\r\n    private get unitId():number {return appInFrame.unit;};\r\n    admins:Admins;\r\n    dev:Dev;\r\n    cacheUnits: CacheUnits;\r\n    cacheUqs: CacheUqs;\r\n    cacheApps: CacheApps;\r\n    cacheServers: CacheServers;\r\n    uqServer: string;\r\n\r\n    @observable unit: Unit;\r\n    @observable memberCount: number;\r\n    @observable apps: UnitApp[];\r\n    @observable role:Role;\r\n    @observable roles: Role[];\r\n    @observable roleApps: UnitApp[];\r\n    @observable roleMember: RoleMember;\r\n    @observable roleMembers: RoleMember[];\r\n    @observable memberRoles: Role[];\r\n\r\n    init() {\r\n        this.unit = undefined;\r\n        this.admins = new Admins(this);\r\n        this.dev = new Dev(this);\r\n        this.cacheUnits = new CacheUnits();\r\n        this.cacheUqs = new CacheUqs();\r\n        this.cacheApps = new CacheApps();\r\n        this.cacheServers = new CacheServers();\r\n    }\r\n\r\n    logout() {\r\n        //meInFrame.app = undefined;\r\n        appInFrame.hash = undefined;\r\n        //let unitId = process.env.REACT_APP_DEBUG_UNITID;\r\n        //if (unitId !== undefined)\r\n        //    meInFrame.unit = Number(unitId);\r\n        appInFrame.unit = undefined;\r\n        this.init();\r\n        this.memberCount = undefined;\r\n        this.apps = undefined;\r\n        this.role = undefined;\r\n        this.roles = undefined;\r\n        this.roleApps = undefined;\r\n        this.roleMember = undefined;\r\n        this.roleMembers = undefined;\r\n        this.memberRoles = undefined;\r\n    }\r\n\r\n    setRole(role:Role) {\r\n        if (this.role === role) return;\r\n        this.role = role;\r\n        this.roleApps = undefined;\r\n        this.roleMember = undefined;\r\n        this.roleMembers = undefined;\r\n        this.memberRoles = undefined;\r\n    }\r\n\r\n    setRoleUser(user:RoleMember) {\r\n        if (this.roleMember === user) return;\r\n        this.roleMember = user;\r\n        this.memberRoles = undefined;\r\n    }\r\n\r\n    async unitChangeProp(prop:string, value:any):Promise<void> {\r\n        await mainApi.unitChangeProp(this.unit.id, prop, value);\r\n        this.unit[prop] = value;\r\n    }\r\n\r\n    async loadApps(): Promise<void> {\r\n        if (this.apps !== undefined) return;\r\n        this.apps = await mainApi.unitApps(this.unitId);\r\n    }\r\n\r\n    async loadUnit(): Promise<void> {\r\n        if (this.unitId === undefined) return;\r\n        let ret = await mainApi.unit(this.unitId);\r\n        this.unit = ret;\r\n        console.log(\"loadUnit unit=%s\", ret);\r\n        this.memberCount = await mainApi.unitMemberCount(this.unitId);\r\n        let uqServer = await devApi.uqBuilderUrl();\r\n        let {url, urlDebug} = uqServer;\r\n        this.uqServer = host.getUrlOrDebug(url, urlDebug);\r\n        console.log(\"uq-build: %s\", JSON.stringify(this.uqServer));\r\n    }\r\n\r\n    async stopUnitApp(appId:number): Promise<void> {\r\n        await mainApi.unitDeleteApp(this.unit.id, appId, 1);\r\n        let app = this.apps.find(v => v.id === appId);\r\n        app.inUnit = 0;\r\n    }\r\n\r\n    async restoreUnitApp(appId:number): Promise<number> {\r\n        let ret = await mainApi.unitAddApp(this.unit.id, appId);\r\n        if (ret <= 0) return ret;\r\n        let app = this.apps.find(v => v.id === appId);\r\n        app.inUnit = 1;\r\n        return 1;\r\n    }\r\n\r\n    async addUnitApp(app:UnitApp): Promise<number> {\r\n        let ret = await mainApi.unitAddApp(this.unit.id, app.id);\r\n        if (ret <= 0) return ret;\r\n        this.apps.push(app);\r\n        return 1;\r\n    }\r\n\r\n    async loadRoles(): Promise<void> {\r\n        if (this.roles !== undefined) return;\r\n        let ret = await mainApi.unitRoles(this.unit.id);\r\n        ret.forEach(v => {\r\n            switch (v.id) {\r\n                case 1: \r\n                    v.name= '访客';\r\n                    v.discription = '可以获取开放信息';\r\n                    break;\r\n                case 2: \r\n                    v.name= '普通';\r\n                    v.discription = '能访问最基本的功能';\r\n                    break;\r\n            }\r\n        });\r\n        this.roles = ret;\r\n    }\r\n\r\n    async unitAddRole(name:string, discription:string): Promise<number> {\r\n        let id = await mainApi.unitAddRole(this.unit.id, name, discription);\r\n        if (id > 0) {\r\n            this.roles.push({\r\n                id: id,\r\n                name: name,\r\n                discription: discription,\r\n                count: undefined,\r\n            });\r\n        }\r\n        return id;\r\n    }\r\n\r\n    async roleChangeProp(prop:string, value:any):Promise<void> {\r\n        await mainApi.unitRoleChangeProp(this.unit.id, this.role.id, prop, value);\r\n        this.role[prop] = value;\r\n    }\r\n\r\n    async loadRoleApps():Promise<void> {\r\n        let ret = await mainApi.unitRoleApps(this.unit.id, this.role.id);\r\n        this.roleApps = ret.map(v => {\r\n            return this.apps.find(app=>app.id === v.id);\r\n        });\r\n    }\r\n\r\n    async setRoleApps(apps:UnitApp[]) {\r\n        await mainApi.unitRoleSetApps(this.unit.id, this.role.id, apps.map(v=>v.id));\r\n        this.roleApps = apps;\r\n    }\r\n\r\n    async loadMembers():Promise<void> {\r\n        let ret = await mainApi.unitMembers(this.unit.id, this.role === undefined? 0:this.role.id, undefined, 0, 100);\r\n        this.roleMembers = ret;\r\n    }\r\n\r\n    async unitAssignMember(assigned:string):Promise<void> {\r\n        await mainApi.unitAssignMember(this.unit.id, this.roleMember.id, assigned);\r\n        this.roleMember.assigned = assigned;\r\n    }\r\n\r\n    async loadMemberRoles():Promise<void> {\r\n        let ret = await mainApi.unitMemberRoles(this.unit.id, this.roleMember.id);\r\n        let roles:Role[] = ret.map(v => {\r\n            let rId = v.id;\r\n            let role = this.roles.find(r => r.id === rId);\r\n            return _.clone(role);\r\n        });\r\n        this.memberRoles = roles;\r\n    }\r\n\r\n    async setMemberRoles(memberRoles:Role[]) {\r\n        await mainApi.unitSetMemberRoles(this.unit.id, this.roleMember.id, memberRoles.map(v=>v.id));\r\n        this.roles.forEach(role => {\r\n            let rId = role.id;\r\n            let org = this.memberRoles.find(v => v.id === rId);\r\n            let cur = memberRoles.find(v => v.id === rId);\r\n            if (org !== undefined) {\r\n                if (cur !== undefined) return;\r\n                role.count--;\r\n                return;\r\n            }\r\n            if (cur === undefined) return;\r\n            role.count++;\r\n        });\r\n        this.memberRoles = memberRoles;\r\n    }\r\n};\r\n\r\nexport const store = new Store();\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page, Context, Form, Schema, UiSchema, UiTextItem} from 'tonva-tools';\r\nimport {store} from '../store';\r\n\r\n@observer\r\nexport default class NewFellowPage extends React.Component<{isOwner:boolean, isAdmin:boolean}> {\r\n    //private form: TonvaForm;\r\n    private schema: Schema = [\r\n        {name:'user', type:'string', required:true},\r\n        {name:'submit', type:'submit'}\r\n    ]\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            user: {widget:'text', maxLength: 100, placeholder: '用户名', label: '邀请成员'} as UiTextItem,\r\n            submit: {widget:'button', label: '邀请'}\r\n        }\r\n    }\r\n    /*\r\n    private formRows:FormRow[] = [\r\n        {\r\n            label: '用户名',\r\n            field: {\r\n                type: 'string',\r\n                name: 'user',\r\n                required: true,\r\n                maxLength: 100,\r\n            },\r\n            face: {\r\n                type: 'string',\r\n                placeholder: '用户名',\r\n            }\r\n        },\r\n    ];\r\n    private schema:FormSchema = new FormSchema({\r\n        fields: [\r\n            {\r\n                type: 'string',\r\n                name: 'user',\r\n                placeholder: '用户名',\r\n                label: '邀请成员',\r\n                rules: ['required', 'maxlength:100']\r\n            },\r\n        ],\r\n        onSumit: this.onSendInvitation,\r\n        submitText: '邀请'\r\n    });\r\n    */\r\n    private onSendInvitation = async (name:string, context:Context): Promise<string> => {\r\n        let {isOwner, isAdmin} = this.props;\r\n        let user = context.form.data['user'];\r\n        let ret = await store.admins.addNew(user, isOwner?1:0, isAdmin?1:0);\r\n        if (ret !== undefined) {\r\n            nav.pop();\r\n            return;\r\n        }\r\n        return user + '没有关注小号';\r\n        /*\r\n        let msg = {a: 1, b: 'ddd'};\r\n        let toName = values['user'];\r\n        let userId = await mainApi.userId(toName);\r\n        if (userId === 0) {\r\n            this.form.formView.setError('user', '\\'' + toName +  '\\' 不存在');\r\n            return;\r\n        }\r\n        await mainApi.sendMessage(userId, 'unit-follow-invite', msg);\r\n        nav.replace(<Page header='完成' back=\"close\">\r\n            <Card>\r\n                <CardBody>\r\n                    <CardTitle>邀请成员</CardTitle>\r\n                    <CardText>已发送给{toName}，请等待确认。</CardText>\r\n                    <Button color='primary' onClick={()=>nav.back()}>完成</Button>\r\n                </CardBody>\r\n            </Card>\r\n        </Page>);\r\n        */\r\n    }\r\n    render() {\r\n        let {isOwner, isAdmin} = this.props;\r\n        let caption = isOwner? \"高管\" : \"管理员\";\r\n        return <Page header={'新增' + caption}>\r\n            <div className=\"container\">\r\n                <div className='my-4 text-info'>\r\n                    只有关注本小号的用户，才能成为{caption}\r\n                </div>\r\n                <Form schema={this.schema} uiSchema={this.uiSchema} onButtonClick={this.onSendInvitation}/>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n// <ValidForm formSchema={this.schema} />\r\n//<TonvaForm ref={f=>this.form=f} formRows={this.formRows} onSubmit={this.onSendInvitation} />\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page, Schema, UiSchema, ItemSchema, UiCheckItem, UiButton, ButtonSchema, Form, Context, Image} from 'tonva-tools';\r\nimport {store} from '../store';\r\nimport { UnitAdmin } from '../model/index';\r\n//import {mainApi} from '../api';\r\n//, ValidForm, FormSchema, FormFields, Field\r\n\r\n@observer\r\nexport default class EditAdmin extends React.Component {\r\n    private schema:Schema;\r\n    private uiSchema: UiSchema;\r\n\r\n    private async onSubmit(name:string, context:Context) {\r\n        let {isOwner, isAdmin} = context.form.data;\r\n        await store.admins.unitSetAdmin(isOwner, isAdmin);\r\n        nav.pop();\r\n    }\r\n    componentWillMount() {\r\n        let {unit} = store;\r\n        let {isRoot, isOwner, isAdmin} = unit;\r\n        let unitAdmin = store.admins.cur;\r\n        let owner:ItemSchema = {name: 'isOwner', type: 'boolean'};\r\n        let admin:ItemSchema = {name: 'isAdmin', type: 'boolean'};\r\n        let submit:ButtonSchema = {name: 'submit', type: 'submit'};\r\n        if (isRoot === 1) this.schema = [owner, admin, submit];\r\n        else if (isOwner === 1) this.schema = [admin, submit];\r\n\r\n        this.uiSchema = {\r\n            items: {\r\n                'isOwner': {widget: 'checkbox', label: '高管', trueValue:1, falseValue:0} as UiCheckItem,\r\n                'isAdmin': {widget: 'checkbox', label: '管理员', trueValue:1, falseValue:0} as UiCheckItem,\r\n                'submit': {widget: 'button', label: '提交'} as UiButton,\r\n            }\r\n        };\r\n        /*\r\n        let fields: Field[] = [];\r\n        let ownerField: Field = {\r\n            type: 'checkbox',\r\n            name: 'isOwner',\r\n            label: '高管',\r\n            defaultValue: unitAdmin.isOwner,\r\n        };\r\n        let adminField: Field = {\r\n            type: 'checkbox',\r\n            name: 'isAdmin',\r\n            label: '管理员',\r\n            defaultValue: unitAdmin.isAdmin,\r\n        };\r\n        if (isRoot === 1) {\r\n            fields.push(ownerField);\r\n            fields.push(adminField);\r\n        }\r\n        else if (isOwner === 1) {\r\n            fields.push(adminField);\r\n        }        \r\n        this.schema = new FormSchema({\r\n            fields: fields,\r\n            onSumit: this.onSubmit.bind(this),\r\n            submitText: '提交'\r\n        });\r\n        */\r\n    }\r\n    render() {\r\n        return <Page header='权限'>\r\n            <Fellow {...store.admins.cur} />\r\n            <Form schema={this.schema} uiSchema={this.uiSchema} onButtonClick={this.onSubmit} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nconst Fellow = (props:UnitAdmin) => {\r\n    let {name, nick, icon} = props;\r\n    //<img className='w-75' src={icon || process.env.REACT_APP_DEFAULT_ICON} />\r\n    return <div className=\"container\">\r\n        <div className='row my-4'>\r\n            <div className=\"col-xs-2 d-flex justify-content-end align-items-start\">\r\n                <Image className=\"w-75\" src={icon} />\r\n            </div>\r\n            <div className=\"col-xs-auto\">\r\n                <h4 className='text-dark'>{name}</h4>\r\n                <h6><small className='text-secondary'>{nick}</small></h6>\r\n                <div className='text-info'>设置成员权限</div>\r\n            </div>\r\n        </div>\r\n        <hr className='mb-4' />\r\n    </div>;\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page, Image} from 'tonva-tools';\r\nimport {UnitApps, UnitAdmin} from '../model';\r\nimport {store} from '../store';\r\nimport NewFellow from './NewFellow';\r\nimport EditAdmin from './EditAdmin';\r\nimport {LMR, Badge, List} from 'tonva-react-form';\r\n\r\n@observer\r\nexport default class AdministorsPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.admins.load();\r\n    }\r\n\r\n    onNewFellow() {\r\n        //nav.push(<NewFellow />);\r\n    }\r\n    onItemClick(ua:UnitAdmin) {\r\n        store.admins.cur = ua;\r\n        nav.push(<EditAdmin />);\r\n    }\r\n    private row = ({icon, name, nick}:UnitAdmin) => {\r\n        let content;\r\n        if (nick === undefined) {\r\n            content = <b>{name}</b>;\r\n        }\r\n        else {\r\n            content = <><b>{nick}</b> &nbsp; <small className=\"text-muted\">{name}</small></>;\r\n        }\r\n        return <LMR className=\"py-2 px-3 align-items-stretch\"\r\n            left={<Badge size=\"sm\"><Image className=\"w-3c h-3c\" src={icon} /></Badge>}>\r\n            <div className=\"px-3\">{content}</div>\r\n        </LMR>;\r\n    }\r\n\r\n    private onNewOwner = (evt: React.MouseEvent<HTMLAnchorElement>) => {\r\n        this.newAdmin(evt, true, false);\r\n    }\r\n\r\n    private onNewAdmin = (evt: React.MouseEvent<HTMLAnchorElement>) => {\r\n        this.newAdmin(evt, false, true);\r\n    }\r\n\r\n    private newAdmin(evt: React.MouseEvent<HTMLAnchorElement>, isOwner:boolean, isAdmin:boolean) {\r\n        evt.preventDefault();\r\n        nav.push(<NewFellow isOwner={isOwner} isAdmin={isAdmin} />);\r\n    } \r\n    render() {\r\n        //let n = nav;\r\n        //let me = n.local.user.get().id;\r\n        let {unit} = store;\r\n        if (unit === undefined) return;\r\n        let {owners, admins, fellows} = store.admins;\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.onNewFellow}>新增成员</button>;\r\n\r\n        let showOwners = false, showAdmins = false;\r\n        let ownersView, adminsView, fellowsView;\r\n        if (unit.isRoot === 1) {\r\n            showOwners = true;\r\n            showAdmins = true;\r\n        }\r\n        if (unit.isOwner === 1) showAdmins = true;\r\n        if (showOwners === true) {\r\n            let header = <LMR \r\n                className=\"px-3 small\"\r\n                left=\"高管\" \r\n                right={<a className=\"small\" href='#' onClick={this.onNewOwner}>新增</a>} />;\r\n            ownersView = <List \r\n                className=\"my-4\"\r\n                header={header} items={owners}\r\n                none=\"[无]\"\r\n                item={{onClick: this.onItemClick, render: this.row}}\r\n            />;\r\n        }\r\n        if (showAdmins === true) {\r\n            let header = <LMR \r\n                className=\"px-3 small\"\r\n                left=\"管理员\" \r\n                right={<a className=\"small\" href='#' onClick={this.onNewAdmin}>新增</a>} />;\r\n            adminsView = <List \r\n                className='my-4' \r\n                header={header} items={admins} \r\n                none='[无]'\r\n                item={{onClick: this.onItemClick, render: this.row}}\r\n            />;\r\n        }\r\n        return <Page header=\"管理员\" right={right}>\r\n            {ownersView}\r\n            {adminsView}\r\n            <div className=\"card mx-1 my-4\">\r\n                <div className=\"card-title\">说明</div>\r\n                <div className=\"card-body\">\r\n                    <ul style={{paddingLeft:'1em'}}>\r\n                        <li><div className=\"card-text\">管理组包括主人、高管、管理员</div></li>\r\n                        <li><div className=\"card-text\">小号主人可以增减高管</div></li>\r\n                        <li><div className=\"card-text\">高管可以增减管理员</div></li>\r\n                        <li><div className=\"card-text\">管理员可以管理小号，程序的开发，以及用户</div></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {EasyDate} from 'tonva-react-form';\r\n\r\nexport interface IdDatesProps {\r\n    date_init: Date;\r\n    date_update: Date;\r\n}\r\n\r\nexport class IdDates extends React.Component<IdDatesProps> {\r\n    render() {\r\n        let {date_init, date_update} = this.props;\r\n        return <small className=\"text-muted\">\r\n            上次修改: <EasyDate date={date_update}/>\r\n            <i className=\"fa fa-fw\" />\r\n            创建: <EasyDate date={date_init}/>\r\n        </small>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\n\r\nexport function span(\r\n    isLink:boolean,\r\n    className:string, \r\n    onClick:(evt:React.MouseEventHandler<HTMLElement>)=>void,\r\n    content:any): JSX.Element\r\n{\r\n    let tag:string;\r\n    let props:any;\r\n    if (isLink === true) {\r\n        tag = 'a';\r\n        props = {\r\n            className: classNames(className, 'cursor-pointer'),\r\n            onClick: onClick,\r\n            href: '#',\r\n        }\r\n    }\r\n    else {\r\n        tag = 'span';\r\n        props = {\r\n            className: className,\r\n        }\r\n    }\r\n    return React.createElement(tag, props, content);\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {Prop, ListProp, Media, PropGrid} from 'tonva-react-form';\r\nimport {nav, Page}  from 'tonva-tools';\r\nimport {store} from '../store';\r\nimport {span} from './span';\r\n\r\nexport interface UnitLinkProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class UnitSpan extends React.Component<UnitLinkProps> {\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<UnitInfo id={this.props.id} />);\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        if (id === undefined) return null;\r\n        let unit = store.cacheUnits.get(id);\r\n        let content;\r\n        let {name, nick, discription} = unit;\r\n        let disc = discription && '- ' + discription;\r\n        if (nick) {\r\n            content = <>{nick} &nbsp; <small className=\"text-muted\">{name} {disc}</small></>;\r\n        }\r\n        else if (name) {\r\n            content = <>{name} &nbsp; <small className=\"text-muted\">{disc}</small></>;\r\n        }\r\n        else {\r\n            content = id;\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\n@observer\r\nexport class UnitName extends React.Component<UnitLinkProps> {\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        if (id === undefined) return null;\r\n        let unit = store.cacheUnits.get(id);\r\n        let {name} = unit;\r\n        return <>{name}</>;\r\n    }\r\n}\r\n\r\nclass UnitInfo extends React.Component<UnitLinkProps> {\r\n    private rows:Prop[];\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        let unit = store.cacheUnits.get(this.props.id);\r\n        let {name, nick, icon, discription} = unit;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={icon} main={name} discription={discription} />},\r\n            '',\r\n        ];\r\n        return <Page header={'小号 - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n","export const appIcon = process.env.REACT_APP_ICON;\r\nexport const appItemIcon = process.env.REACT_APP_ITEM_ICON;\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport * as classNames from 'classnames';\r\nimport {Prop, Media, PropGrid} from 'tonva-react-form';\r\nimport {nav, Page}  from 'tonva-tools';\r\nimport {appIcon, appItemIcon} from 'consts';\r\nimport {store} from 'store';\r\nimport {IdDates} from './idDates';\r\nimport {span} from './span';\r\nimport {UnitSpan} from './unitSpan';\r\n\r\nexport interface UqLinkProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class UqSpan extends React.Component<UqLinkProps> {\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<UqInfo id={this.props.id} />);\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, className, isLink} = this.props;\r\n        let api = store.cacheUqs.get(id);\r\n        let content;\r\n        if (api === null) {\r\n            content = id;\r\n        }\r\n        else {\r\n            let {name, discription} = api;\r\n            let disc = discription && '- ' + discription;\r\n            if (name !== undefined) {\r\n                content = <React.Fragment>{name} &nbsp; <small className=\"text-muted\">{disc}</small></React.Fragment>;\r\n            }\r\n            else {\r\n                content = id;\r\n            }\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\n@observer\r\nclass UqInfo extends React.Component<UqLinkProps> {\r\n    private rows:Prop[];\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        let uq = store.cacheUqs.get(this.props.id);\r\n        let {name, discription, unit, date_init, date_update} = uq;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={name} discription={disp} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n        ];\r\n        return <Page header={'UQ - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport {Prop, ListProp, Media, PropGrid} from 'tonva-react-form';\r\nimport {nav, Page}  from 'tonva-tools';\r\nimport {store} from '../store';\r\nimport {devApi} from '../api';\r\nimport {span} from './span';\r\nimport {IdDates} from './idDates';\r\nimport {UnitSpan} from './unitSpan';\r\n\r\nexport interface AppSpanProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class AppSpan extends React.Component<AppSpanProps> {\r\n    /*\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.onClick = this.onClick.bind(this);\r\n    }\r\n    componentWillMount() {\r\n        let {id} = this.props;\r\n        store.cacheApps.get(id);\r\n    }\r\n    */\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<AppInfo id={this.props.id} />)\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        let app = store.cacheApps.get(id);\r\n        let content;\r\n        if (app === null) {\r\n            content = id;\r\n        }\r\n        else {\r\n            let {name, icon, discription} = app;\r\n            let isPublic = app.public;\r\n            let disc = discription && '- ' + discription;\r\n            if (name !== undefined) {\r\n                content = <React.Fragment>{name} &nbsp; <small className=\"text-muted\">{disc}</small></React.Fragment>;\r\n            }\r\n            else {\r\n                content = id;\r\n            }\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\n\r\n@observer\r\nclass AppInfo extends React.Component<AppSpanProps> {\r\n    private rows:Prop[];\r\n    @observable private apis:ListProp = {\r\n        label: '关联API', type: 'list', list: undefined, row: AppRow\r\n    };\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    async componentDidMount() {\r\n        this.apis.list = await devApi.loadAppUqs(this.props.id);\r\n    }\r\n    render() {\r\n        let app = store.cacheApps.get(this.props.id);\r\n        let {unit, name, discription, icon, date_init, date_update} = app;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={icon} main={name} discription={disp} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            this.apis,\r\n        ];\r\n        return <Page header={'APP - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass AppRow extends React.Component<any> {\r\n    render() {\r\n        let {name, discription} = this.props;\r\n        let disp;\r\n        if (discription) disp = <div className=\"small text-muted\">{discription}</div>;\r\n        return <div className='form-control-plaintext'>\r\n            <div>{name}</div>\r\n            {disp}\r\n        </div>\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport * as classNames from 'classnames';\r\nimport {Prop, ListProp, Media, PropGrid} from 'tonva-react-form';\r\nimport {nav, Page}  from 'tonva-tools';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {store} from '../store';\r\nimport {DevModel} from '../model';\r\nimport {devApi} from '../api';\r\nimport {span} from './span';\r\nimport {IdDates} from './idDates';\r\nimport {UnitSpan} from './unitSpan';\r\n\r\nexport interface ServerSpanProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class ServerSpan extends React.Component<ServerSpanProps> {\r\n    /*\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.onClick = this.onClick.bind(this);\r\n    }\r\n    componentWillMount() {\r\n        let {id} = this.props;\r\n        store.cacheServers.get(id);\r\n    }\r\n    */\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<ServerInfo id={this.props.id} />)\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        let server = store.cacheServers.get(id);\r\n        let content;\r\n        if (server === null) {\r\n            content = id;\r\n        }\r\n        else {\r\n            let {cloud, ip, discription} = server;\r\n            if (discription !== undefined) {\r\n                content = <React.Fragment>{discription} &nbsp; <small className=\"text-muted\">{ip}</small></React.Fragment>;\r\n            }\r\n            else {\r\n                content = id;\r\n            }\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\nclass ServerInfo extends React.Component<ServerSpanProps> {\r\n    private rows:Prop[];\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        let server = store.cacheServers.get(this.props.id);\r\n        let {discription, cloud, ip, unit, date_init, date_update} = server;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={discription} discription={ip} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            {type: 'string', label: '云服务', name: 'cloud'},\r\n        ];\r\n        return <Page header={'服务器 - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {nav, Page} from 'tonva-tools';\r\n\r\ninterface StringValueEditProps {\r\n    title: string;\r\n    onChanged:(value:any, orgValue:any)=>Promise<string|void>;\r\n    value?: any;\r\n    buttonText?: string;\r\n    info?: string;\r\n}\r\ninterface StringValueEditState {\r\n    disabled: boolean;\r\n    error?: string;\r\n}\r\n\r\nexport class StringValueEdit extends React.Component<StringValueEditProps, StringValueEditState> {\r\n    //private input:HTMLInputElement;\r\n    protected value: string;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            disabled: true,\r\n        };\r\n    }\r\n    /*\r\n    private ref = (input:HTMLInputElement) => {\r\n        if (!input) return;\r\n        input.value = this.props.value || '';\r\n        this.input = input;\r\n    }*/\r\n    private onChange = (evt:React.FormEvent<HTMLInputElement>) => {\r\n        let val = this.props.value;\r\n        let org = val && val.trim();\r\n        this.value = evt.currentTarget.value.trim();\r\n        this.setState({\r\n            disabled: org === this.value\r\n        });\r\n        \r\n    }\r\n    protected onSubmit = async () => {\r\n        let val = this.props.value;\r\n        let org = val && val.trim();\r\n        let v = this.value; // this.input.value.trim();\r\n        let onChanged = this.props.onChanged;\r\n        if (onChanged !== undefined) {\r\n            let ret = await onChanged(v, org);\r\n            if (typeof ret === 'string') {\r\n                this.setState({error: ret});\r\n                return;\r\n            }\r\n            nav.pop();\r\n        }\r\n    }\r\n    protected renderControl() {\r\n        return <input className=\"form-control w-100\" type=\"text\"\r\n            // ref={this.ref}\r\n            defaultValue={this.props.value}\r\n            onChange={this.onChange} />\r\n    }\r\n    render() {\r\n        let {title, onChanged, buttonText, info, value} = this.props;\r\n        let {disabled, error} = this.state;\r\n        let right = <button\r\n            className=\"btn btn-success btn-sm\"\r\n            disabled={disabled}\r\n            onClick={this.onSubmit}\r\n        >\r\n            {buttonText||'保存'}\r\n        </button>;\r\n        let errorDiv;\r\n        if (error !== undefined) errorDiv = <div className='text-danger'>{error}</div>;\r\n        return <Page header={title} right={right}>\r\n            <div className=\"my-4 mx-3\">\r\n                {this.renderControl()}\r\n                {errorDiv}\r\n                <small className=\"d-block mt-2 text-muted\">{info}</small>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n\r\nexport class TextValueEdit extends StringValueEdit {\r\n    /*\r\n    private textArea:HTMLTextAreaElement;\r\n    private refTextArea = (textArea:HTMLTextAreaElement) => {\r\n        if (!textArea) return;\r\n        textArea.value = this.props.value || '';\r\n        this.textArea = textArea;\r\n    }\r\n    */\r\n    private onTextAreaChange = (evt:React.FormEvent<HTMLTextAreaElement>) => {\r\n        let val = this.props.value;\r\n        let org = val && val.trim();\r\n        this.value = evt.currentTarget.value.trim();\r\n        this.setState({\r\n            disabled: org === this.value\r\n        })\r\n    }\r\n    protected renderControl() {\r\n        return <textarea className=\"form-control w-100\" rows={8}\r\n            // ref={this.refTextArea}\r\n            defaultValue={this.props.value}\r\n            onChange={this.onTextAreaChange} />\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { nav, Page } from 'tonva-tools';\r\nimport { SearchBox, List } from 'tonva-react-form';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport interface IdPickPageProps {\r\n    caption: string;\r\n    searchPlaceHolder?: string;\r\n    candidateItems: ((params:any, key:string) => Promise<any[]>) | any[];\r\n    moreCandidates: () => Promise<void>;\r\n    row: (item:any, index:number) => JSX.Element;\r\n    idFromItem: (item:any) => number;\r\n    resolve: (item?: any) => void;\r\n    params: any;\r\n}\r\n\r\n@observer\r\nexport class IdPickPage extends React.Component<IdPickPageProps> {\r\n    @observable private items:any[];\r\n\r\n    async componentDidMount() {\r\n        let {candidateItems, params} = this.props;\r\n        this.items = Array.isArray(candidateItems)? \r\n            candidateItems \r\n            : await candidateItems(params, '');\r\n    }\r\n    private itemClick = (item:any):Promise<void> => {\r\n        let {resolve, idFromItem} = this.props;\r\n        resolve(idFromItem(item));\r\n        nav.pop();\r\n        return;\r\n    }\r\n    private onSearch = async (key: string):Promise<void> => {\r\n        let {candidateItems, params} = this.props;\r\n        if (typeof candidateItems === 'function') {\r\n            let ret = await candidateItems(params, key);\r\n            this.items = ret;\r\n        }\r\n        return;\r\n    }\r\n    render() {\r\n        let {caption, row, searchPlaceHolder} = this.props;\r\n        return <Page header={caption} back=\"close\">\r\n            <div className=\"container\">\r\n                <SearchBox className=\"my-2\" \r\n                    onSearch={this.onSearch} \r\n                    placeholder={searchPlaceHolder}\r\n                    maxLength={100} />\r\n            </div>\r\n            <List items={this.items} item={{onClick:this.itemClick, render:row}} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport {SearchBox, Media, List, LMR, Badge, Prop, PropGrid, FA} from 'tonva-react-form';\r\nimport {nav, Page, PageItems} from 'tonva-tools';\r\nimport {IdDates, UnitSpan} from '../tools';\r\nimport {UnitApp, DevModel} from '../model';\r\nimport {store} from '../store';\r\nimport { devApi } from 'api';\r\n\r\n@observer\r\nexport class Info extends React.Component<{app:UnitApp, appActed?:(appId:number, inUnit:number)=>void}> {\r\n    @observable private uqAccesses: any[];\r\n    async componentWillMount() {\r\n        this.uqAccesses = await devApi.loadAppUqs(this.props.app.id);\r\n    }\r\n\r\n    private renderUqRow = (uqAccess:any, index:number):JSX.Element => {\r\n        let {name, owner, unit, discription} = uqAccess;\r\n        return <LMR className=\"py-2\" right={<small className=\"text-muted\">{discription}</small>}>\r\n            {owner} / {name}\r\n        </LMR>;\r\n    }\r\n\r\n    private act = async () => {\r\n        let {app, appActed} = this.props;\r\n        let {id, unit, inUnit} = app;\r\n        let newInUnit:number = 1;\r\n        if (inUnit === 0) {\r\n            let ret = await store.restoreUnitApp(id);\r\n            if (ret <= 0) alert('app 或者 uq 没有定义 service');\r\n        }\r\n        else if (inUnit === 1) {\r\n            await store.stopUnitApp(id);\r\n            newInUnit = 0;\r\n        }\r\n        else {\r\n            let newApp:UnitApp = _.clone(app);\r\n            newApp.id = id;\r\n            newApp.inUnit = 1;\r\n            let ret = await store.addUnitApp(newApp);\r\n            if (ret <= 0) alert('app 或者 uq 没有定义 service');\r\n        }\r\n        if (appActed !== undefined) {\r\n            appActed(id, newInUnit);\r\n        }\r\n        nav.pop();\r\n    }\r\n    render() {\r\n        let {unit, name, discription, icon, inUnit, date_init, date_update} = this.props.app;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let faName:string, text:string, color:string;\r\n        if (inUnit === 1) {\r\n            faName = 'ban';\r\n            text = '停用APP';\r\n            color = 'btn-danger';\r\n        }\r\n        else if (inUnit === 0) {\r\n            faName = 'refresh';\r\n            text = '恢复APP';\r\n            color = 'btn-success';\r\n        }\r\n        else {\r\n            faName = 'plus';\r\n            text = '启用APP';\r\n            color = 'btn-primary';\r\n        }\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <Media icon={icon} main={name} discription={disp} />\r\n            },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                label: '开发号', \r\n                component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div>\r\n            },\r\n            {\r\n                type: 'component', \r\n                label: '关联UQ', \r\n                component: <List className=\"w-100\" items={this.uqAccesses} item={{render: this.renderUqRow}} />\r\n            },\r\n            '',\r\n            '',\r\n            {\r\n                type: 'component', \r\n                bk: '', \r\n                component: <button className={classNames('btn', 'w-100', color)} onClick={this.act}>\r\n                    <FA name={faName} size=\"lg\" /> {text}\r\n                </button>\r\n            },\r\n        ];\r\n        return <div>\r\n            <PropGrid rows={rows} values={this.props} />\r\n        </div>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {IObservableArray} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport {SearchBox, Media, List, LMR, Badge, Prop, PropGrid} from 'tonva-react-form';\r\nimport {nav, Page, PageItems, Image} from 'tonva-tools';\r\nimport {mainApi} from '../api';\r\nimport {store} from '../store';\r\nimport {UnitApp} from '../model';\r\nimport {Info} from './info';\r\n\r\nclass PageApps extends PageItems<UnitApp> {\r\n    private unitId:number;\r\n    constructor(unitId:number) {\r\n        super();\r\n        this.unitId = unitId;\r\n    }\r\n    protected async load():Promise<UnitApp[]> {\r\n        return await mainApi.searchApp(this.unitId, this.param, this.pageStart, this.pageSize);\r\n    }\r\n    protected setPageStart(item:UnitApp) {\r\n        if (item === undefined)\r\n            this.pageStart = 0;\r\n        else\r\n            this.pageStart = item.id;\r\n    }\r\n}\r\n\r\n@observer\r\nexport class NewApp extends React.Component {\r\n    private apps: PageApps;\r\n    constructor(props) {\r\n        super(props);\r\n        this.apps = new PageApps(store.unit.id);\r\n    }\r\n    private onSearch = async (key:string) => {\r\n        await this.apps.first(key);\r\n    }\r\n    private appClick = (app:UnitApp) => {\r\n        nav.push(<Page header=\"App详细信息\">\r\n            <Info app={app} appActed={this.appActed}/>\r\n        </Page>);\r\n    }\r\n    private appActed = (appId:number, inUnit:number) => {\r\n        let apps = this.apps.items as IObservableArray<UnitApp>; //.replace .find(v => v.id === appId);\r\n        let app = apps.find(v => v.id === appId);\r\n        app.inUnit = inUnit;\r\n        apps.replace([app]);\r\n    }\r\n    private renderApp(app:UnitApp):JSX.Element {\r\n        let {name, discription, icon, inUnit} = app;\r\n        let right;\r\n        if (inUnit === 1)\r\n            right = <small>已启用</small>;\r\n        else if (inUnit === 0)\r\n            right = <small>已停用</small>;\r\n        return <LMR className=\"px-3 py-2\"\r\n            left={<Badge><Image src={icon} /></Badge>}\r\n            right={right}>\r\n            <div className=\"px-3\">\r\n                <div>{name}</div>\r\n                <small className=\"text-muted\">{discription}</small>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n    render() {\r\n        let items = this.apps.items;\r\n        let center = <SearchBox onSearch={this.onSearch} \r\n            className=\"w-100 mx-1\" \r\n            placeholder=\"搜索App\" \r\n            maxLength={100} />;\r\n        return <Page header={center}>\r\n            <List\r\n                items={items}\r\n                item={{onClick:this.appClick, render:this.renderApp}}\r\n                before=\"搜索App名字\" />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, FA, SubmitResult, LMR, Badge} from 'tonva-react-form';\r\nimport {nav, Page, Image} from 'tonva-tools';\r\nimport {store} from '../store';\r\nimport {NewApp} from './new';\r\nimport {UnitApp} from '../model';\r\nimport {Info} from './info';\r\n\r\n@observer\r\nexport default class AppsPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadApps();\r\n    }\r\n    private itemRender(app:UnitApp, index:number) {\r\n        let {name, discription, icon, inUnit} = app;\r\n        let ban;\r\n        if (inUnit === 0)\r\n            ban = <FA className=\"text-danger\" name='ban' />;\r\n        return <LMR className=\"px-3 py-1\"\r\n            left={<Badge><Image src={icon} /></Badge>}\r\n            right={ban}>\r\n            <div className=\"px-3\">\r\n                <div>{name}</div>\r\n                <small className=\"text-muted\">{discription}</small>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n    private appClick(app:UnitApp) {\r\n        nav.push(<Page header=\"App详细信息\">\r\n            <Info app={app} />\r\n        </Page>);\r\n    }\r\n    private newItem() {\r\n        nav.push(<NewApp {...this.props} />);\r\n    }\r\n    render() {\r\n        let right = <button \r\n            className='btn btn-secondary btn-sm' \r\n            onClick={()=>this.newItem()}><FA name=\"plus\" /></button>;\r\n        return <Page header=\"启停App\" right={right}>\r\n            <List items={store.apps} item={{render: this.itemRender, onClick: this.appClick}} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {TonvaForm, SubmitResult, FormRow} from 'tonva-react-form';\r\nimport {nav, Page, ItemSchema, StringSchema, UiSchema, Form, Context} from 'tonva-tools';\r\nimport {store} from '../store';\r\n\r\nexport class NewRole extends React.Component {\r\n    /*\r\n    private form:TonvaForm;\r\n    private formRows:FormRow[] = [\r\n        {\r\n            label: '名称', \r\n            field: {name: 'name', type: 'string', maxLength: 50, required: true},\r\n        },\r\n        {\r\n            label: '描述',\r\n            field: {name: 'discription', type: 'string', maxLength: 250},\r\n            face: {type: 'textarea'}\r\n        },\r\n    ];*/\r\n    private schema: ItemSchema[] = [\r\n        {name: 'name', type: 'string', maxLength: 5, required: true} as StringSchema,\r\n        {name: 'discription', type: 'string', maxLength: 250},\r\n        {name: 'submit', type: 'button'},\r\n    ];\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            name: {widget: 'text', label: '名称'},\r\n            discription: {widget: 'textarea', label: '描述'},\r\n            submit: {widget:'button', label: '提交'}\r\n        }\r\n    }\r\n    private onSubmit = async (buttonName:string, context: Context):Promise<SubmitResult> => {\r\n        //let {name, discription} = values;\r\n        let {name, discription} = this.context.formData;\r\n        let id = await store.unitAddRole(name, discription);\r\n        if (id <= 0) {\r\n            this.context.setError('name', '角色名 ' + name + ' 已经存在');\r\n            return;\r\n        }\r\n        nav.pop();\r\n        return;\r\n    }\r\n    render() {\r\n        return <Page header=\"新建角色\">\r\n            <Form className=\"m-3\" \r\n                schema={this.schema} uiSchema={this.uiSchema} \r\n                formData={{}}\r\n                onButtonClick={this.onSubmit} />\r\n        </Page>;\r\n    }\r\n    /*\r\n    <TonvaForm className=\"m-3\" ref={tf => this.form = tf} \r\n    formRows={this.formRows} \r\n    onSubmit={this.onSubmit} />\r\n    */\r\n}\r\n","import * as React from 'react';\r\nimport {List, LMR} from 'tonva-react-form';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {Role, UnitApp} from '../model';\r\nimport {store} from '../store';\r\nimport {mainApi} from '../api';\r\n\r\ninterface Props {\r\n    role: Role;\r\n}\r\ninterface State {\r\n    apps: UnitApp[]\r\n}\r\nexport class RoleApps extends React.Component<Props, State> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {apps:undefined};\r\n    }\r\n    async componentDidMount() {\r\n        let ret = await mainApi.unitRoleApps(store.unit.id, this.props.role.id);\r\n        this.setState({\r\n            apps: ret,\r\n        });\r\n    }\r\n    private renderRoleApp(app:UnitApp, index:number) {\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={app.name}\r\n                right={<small className=\"text-muted\">{app.discription}</small>} />\r\n    }\r\n    render() {\r\n        let {role} = this.props;\r\n        return <Page header={role.name + ' - 可用APP'}>\r\n            <List\r\n                items={this.state.apps}\r\n                item={{render: this.renderRoleApp}}\r\n                none=\"没有APP\" />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, LMR, FA, Media, Muted, PropGrid, Prop} from 'tonva-react-form';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {Role} from '../model';\r\nimport {store} from '../store';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {StringValueEdit} from '../tools';\r\nimport {RoleApps} from './roleApps';\r\n\r\n@observer\r\nexport class MemberPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadRoles();\r\n        await store.loadMemberRoles();\r\n    }\r\n    async onAssigned(value:any, orgValue:any):Promise<void> {\r\n        await store.unitAssignMember(value);\r\n    }\r\n    private renderMemberRole = (role:Role) => {\r\n        let {name, discription} = role;\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={name}\r\n                right={<Muted>{discription}</Muted>} />\r\n    }\r\n    private roleClick(role:Role) {\r\n        nav.push(<RoleApps role={role} />);\r\n    }\r\n    private setRole = () => {\r\n        nav.push(<SetRole />);\r\n    }\r\n    render() {\r\n        let roleUser = store.roleMember;\r\n        let {nick, name, assigned, icon} = roleUser;\r\n        let disp = <div>\r\n            <div><Muted>唯一名: </Muted> &nbsp; {name}</div>\r\n            <div><Muted>昵称: </Muted> &nbsp; {nick||<Muted>[无]</Muted>}</div>\r\n        </div>;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component',\r\n                component: <Media icon={icon||appIcon} main={roleUser.assigned||nick||name} discription={disp} />\r\n            },\r\n            '',\r\n            {\r\n                label: '备注名',\r\n                type: 'string',\r\n                name: 'assigned',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"修改备注名\"\r\n                    value={roleUser.assigned}\r\n                    onChanged={this.onAssigned} \r\n                    info=\"加一个备注，便于甄别用户\" />),\r\n            },\r\n            '',\r\n        ];\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.setRole}>修改角色</button>;\r\n        return <Page header=\"用户详情\" right={right}>\r\n            <PropGrid rows={rows} values={roleUser} />\r\n            <div className=\"px-3 py-1\"><small><FA name=\"angle-double-right\" /> 所属角色</small></div>\r\n            <List\r\n                items={store.memberRoles} \r\n                item={{render: this.renderMemberRole, onClick: this.roleClick}} />\r\n        </Page>\r\n    }\r\n}\r\n\r\n@observer\r\nclass SetRole extends React.Component {\r\n    private list:List;\r\n    constructor(props) {\r\n        super(props);\r\n        this.submit = this.submit.bind(this);\r\n    }\r\n    async componentDidMount() {\r\n        await store.loadRoles();\r\n        await store.loadMemberRoles();\r\n    }\r\n    private renderRole(role:Role, index:number) {\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={role.name}\r\n                right={<small className=\"text-muted\">{role.discription}</small>} />\r\n    }\r\n    private roleSelect(role:Role, isSelected: boolean, anySelected: boolean) {\r\n    }\r\n    private async submit() {\r\n        await store.setMemberRoles(this.list.selectedItems);\r\n        nav.pop();\r\n    }\r\n    render() {\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.submit}>保存</button>;\r\n        let roles = store.roles;\r\n        let memberRoles = store.memberRoles;\r\n        return <Page header=\"修改角色\" right={right}>\r\n            <List \r\n                ref={list=>this.list=list}\r\n                items={roles}\r\n                selectedItems={memberRoles}\r\n                compare={(role:Role, selectRole:Role)=>role.id === selectRole.id}\r\n                item={{render: this.renderRole, onSelect: this.roleSelect}} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, LMR, Badge, FA, Muted, SearchBox} from 'tonva-react-form';\r\nimport {nav, Page, Image} from 'tonva-tools';\r\nimport {Role, RoleMember} from '../model';\r\nimport {store} from '../store';\r\nimport {mainApi} from '../api';\r\nimport {MemberPage} from './memberPage';\r\n\r\n@observer\r\nexport class MembersPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadMembers();\r\n    }\r\n    private renderMember(member:RoleMember, index:number):JSX.Element {\r\n        return <MemberRow {...member} />;\r\n    }\r\n    private userClick(user:RoleMember) {\r\n        store.setRoleUser(user);\r\n        nav.push(<MemberPage />);\r\n    }\r\n    private onSearch() {\r\n        let role = store.role;\r\n        let roleId = role === undefined? 0:role.id;\r\n        nav.push(<MemberSearch roleId={roleId} />);\r\n    }\r\n    render() {\r\n        let right = <button className=\"btn btn-sm\" onClick={this.onSearch}><FA name=\"search\" /></button>;\r\n        return <Page header=\"用户\" right={right}>\r\n            <List items={store.roleMembers} item={{render: this.renderMember, onClick: this.userClick}} />\r\n        </Page>\r\n    }\r\n}\r\n\r\nconst MemberRow = (member:RoleMember) => {\r\n    let {nick, name, assigned, icon} = member;\r\n    let content;\r\n    if (assigned)\r\n        content = <><div><b>{assigned}</b> <Muted>{nick}</Muted></div><Muted>{name}</Muted></>;\r\n    else if (nick)\r\n        content = <><div><b>{nick}</b></div><Muted>{name}</Muted></>;\r\n    else\r\n        content = <div><b>{name}</b></div>;\r\n    return <LMR className=\"py-2 px-3 align-items-stretch\"\r\n        left={<Badge size=\"sm\"><Image src={icon} /></Badge>}>\r\n        <div className=\"px-3\">{content}</div>\r\n    </LMR>;\r\n};\r\n\r\ninterface SearchProps {\r\n    roleId: number;\r\n}\r\ninterface SearchState {\r\n    members: RoleMember[];\r\n}\r\nexport class MemberSearch extends React.Component<SearchProps, SearchState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.state = {\r\n            members: null,\r\n        }\r\n    }\r\n    private async onSearch(key:string) {\r\n        let ret = await mainApi.unitMembers(store.unit.id, this.props.roleId, key, 0, 100);\r\n        this.setState({members: ret});\r\n    }\r\n    private renderMember(member:RoleMember, index:number):JSX.Element {\r\n        return <MemberRow {...member} />;\r\n    }\r\n    private userClick(user:RoleMember) {\r\n        store.setRoleUser(user);\r\n        nav.push(<MemberPage />);\r\n    }\r\n    render() {\r\n        let header = <SearchBox className=\"w-100 mx-1\" \r\n            onSearch={this.onSearch} \r\n            maxLength={100}\r\n            placeholder=\"搜索用户\" />;\r\n        return <Page header={header}>\r\n            <List\r\n                items={this.state.members}\r\n                item={{render: this.renderMember, onClick: this.userClick}} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, Media, LMR, FA, PropGrid, Prop} from 'tonva-react-form';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {StringValueEdit} from '../tools';\r\nimport {Role, UnitApp} from '../model';\r\nimport {store} from '../store';\r\nimport {MembersPage} from './membersPage';\r\n\r\n@observer\r\nexport class RolePage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadApps();\r\n        await store.loadRoleApps();\r\n    }\r\n    private editRole() {\r\n        nav.push(<EditRole />);\r\n    }\r\n    private renderRoleApp = (app:UnitApp, index:number) => {\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={app.name}\r\n                right={<small className=\"text-muted\">{app.discription}</small>} />\r\n    }\r\n    private roleAppClick = (app:UnitApp) => {\r\n        nav.push(<RoleApps />);\r\n    }\r\n    private addRoleApp() {\r\n        nav.push(<RoleApps />);\r\n    }\r\n    private members() {\r\n        nav.push(<MembersPage />);\r\n    }\r\n    render() {\r\n        let {name, discription, count} = store.role;\r\n        let onMembersClick, membersLeft, membersRight;\r\n        if (count===undefined || count===null || count===0) {\r\n            membersLeft = <small className=\"text-muted\">无用户</small>;\r\n        }\r\n        else {\r\n            membersLeft = `共有 ${count} 用户`;\r\n            membersRight = <div><FA name=\"chevron-right\" /></div>;\r\n            onMembersClick = this.members;\r\n        }\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <Media icon={undefined} main={name} discription={discription} />,\r\n                onClick: this.editRole,\r\n            },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <LMR className=\"py-2\" left={membersLeft} right={membersRight} />,\r\n                onClick: onMembersClick,\r\n            },\r\n            '=',\r\n        ];\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={()=>this.addRoleApp()}><FA name=\"plus\" /> APP</button>;\r\n        return <Page header=\"角色\" right={right}>\r\n            <PropGrid rows={rows} values={{}} />\r\n            <div className=\"px-3 py-1\"><small><FA name=\"angle-double-right\" /> 可用APP列表</small></div>\r\n            <List\r\n                items={store.roleApps} \r\n                item={{render: this.renderRoleApp, onClick:this.roleAppClick}}\r\n                none={<small className=\"text-muted px-3 py-1\">没有APP, 点击右上角按钮选择APP</small>} />\r\n        </Page>\r\n    }\r\n}\r\n\r\n@observer\r\nclass EditRole extends React.Component {\r\n    async onNameChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.roleChangeProp('name', value);\r\n    }\r\n    async onDiscriptionChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.roleChangeProp('discription', value);\r\n    }\r\n    render() {\r\n        let role = store.role;\r\n        let {id} = role;\r\n        let isSysRole = id === 1 || id === 2;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                label: '名称', \r\n                type: 'string',\r\n                name: 'name', \r\n                onClick: isSysRole? undefined : ()=>nav.push(<StringValueEdit \r\n                    title=\"修改名称\"\r\n                    value={role.name}\r\n                    onChanged={this.onNameChanged} \r\n                    info=\"好的名字便于理解\" />)\r\n            },\r\n            {\r\n                label: '描述',\r\n                type: 'string',\r\n                name: 'discription',\r\n                onClick: isSysRole? undefined : ()=>nav.push(<StringValueEdit \r\n                    title=\"修改描述\"\r\n                    value={role.discription}\r\n                    onChanged={this.onDiscriptionChanged} \r\n                    info=\"对角色做一个说明\" />)\r\n            },\r\n        ];\r\n        return <Page header=\"修改角色信息\">\r\n            <PropGrid rows={rows} values={role} alignValue=\"right\" />\r\n        </Page>;\r\n    }\r\n}\r\n\r\n@observer\r\nclass RoleApps extends React.Component {\r\n    private list:List;\r\n    constructor(props) {\r\n        super(props);\r\n        this.submit = this.submit.bind(this);\r\n    }\r\n    async componentDidMount() {\r\n        await store.loadApps();\r\n        await store.loadRoleApps();\r\n    }\r\n    private renderApp(app:UnitApp, index:number) {\r\n        return <LMR className=\"py-1 px-2 align-items-center\"\r\n                left={app.name}\r\n                right={<small className=\"text-muted\">{app.discription}</small>} />\r\n    }\r\n    private appSelect(app:UnitApp, isSelected: boolean, anySelected: boolean) {\r\n\r\n    }\r\n    private async submit() {\r\n        await store.setRoleApps(this.list.selectedItems);\r\n        nav.pop();\r\n    }\r\n    render() {\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.submit}>保存</button>;\r\n        let apps = store.apps;\r\n        let roleApps = store.roleApps;\r\n        return <Page header=\"选择APP\" right={right}>\r\n            <List \r\n                ref={list=>this.list=list}\r\n                items={apps}\r\n                selectedItems={roleApps}\r\n                item={{render: this.renderApp, onSelect: this.appSelect}} />\r\n        </Page>;\r\n    }\r\n}","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {List, LMR, FA, Muted} from 'tonva-react-form';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {Role} from '../model';\r\nimport {store} from '../store';\r\nimport {NewRole} from './newRole';\r\nimport {RolePage} from './rolePage';\r\nimport {MembersPage} from './membersPage';\r\n\r\nconst midClassName = classNames('d-flex', 'h-100', 'align-items-center', 'px-5', 'small', 'text-muted');\r\n\r\n@observer\r\nexport class Members extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadRoles();\r\n    }\r\n    private renderRole = (role:Role, index:number) => {\r\n        let {name, discription, count} = role;\r\n        return <LMR\r\n            className=\"px-3 py-2\" \r\n            left={name}\r\n            right={String(count || '')}>\r\n            <div className={midClassName}>\r\n                {discription}\r\n            </div>\r\n        </LMR>;\r\n    }\r\n    private roleClick = (role:Role) => {\r\n        store.setRole(role);\r\n        nav.push(<RolePage />)\r\n    }\r\n    private newRole = (evt: React.MouseEvent<HTMLAnchorElement>) => {\r\n        evt.preventDefault();\r\n        nav.push(<NewRole />);\r\n    }\r\n    private allUsersClick = () => {\r\n        store.setRole(undefined);\r\n        nav.push(<MembersPage />);\r\n    }\r\n    render() {\r\n        let right = <a className=\"small\" href='#' onClick={this.newRole}>新增</a>;\r\n        let header = <LMR className=\"px-3 small bg-light\" left=\"角色\" right={right} />;\r\n        return <Page header=\"用户角色\">\r\n            <LMR\r\n                className=\"my-3 px-3 py-2 bg-white\" \r\n                left={'用户'}\r\n                right={String(store.memberCount)}\r\n                onClick={this.allUsersClick}>\r\n                <div className={midClassName}>\r\n                    设置用户角色\r\n                </div>\r\n            </LMR>\r\n            <List\r\n                header={header}\r\n                items={store.roles}\r\n                none=\"[无]\"\r\n                item={{render:this.renderRole, onClick:this.roleClick}} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Muted } from 'tonva-react-form';\r\nimport { left0 } from 'tonva-tools';\r\nimport { VMapMain, MapUI, Field, CMap }  from 'tonva-react-uq'; \r\n\r\nclass CMapTeamPerson extends CMap {\r\n    async searchOnKey(keyField:Field, param):Promise<number> {\r\n        switch (keyField.name) {\r\n            default: return await super.searchOnKey(keyField, param);\r\n            case 'post': return await this.searchOnPost(param);                \r\n        }\r\n    }\r\n\r\n    private async searchOnPost(param: any):Promise<number> {\r\n        let querySelect = this.cQuerySelect('teamPosts');\r\n        let val = await querySelect.call(param);\r\n        return val['post'].id;\r\n    }\r\n}\r\n\r\nclass VMapTeamPerson extends VMapMain {\r\n}\r\n\r\nconst ui:MapUI = {\r\n    CMap: CMapTeamPerson,\r\n    keys: [\r\n        {\r\n            content: ({name, id}:any, x:any) => <><Muted>{x.team} &nbsp; </Muted> {name}</>,\r\n            none: (x:any)=>x.noStaff,\r\n        },\r\n        {\r\n            content: ({name, id}:any, x:any) => <><Muted>{x.staff} &nbsp; </Muted> {name} &nbsp; <Muted>{x.no} {left0(id, 4)}</Muted></>,\r\n            none: (x:any)=>x.noPost,\r\n        },\r\n        {\r\n            content: ({title, id}:any, x:any) => <><Muted>{x.post} &nbsp; </Muted> {title}</>,\r\n            none: undefined,\r\n        },\r\n    ]\r\n}\r\n\r\nexport default ui;\r\n","import { UqUI } from 'tonva-react-uq';\r\nimport map from './map';\r\nimport tuid from './tuid';\r\nimport query from './query';\r\nimport res from './res';\r\n\r\nconst uqUI:UqUI = {\r\n    map: map,\r\n    tuid: tuid,\r\n    query: query,\r\n    res: res,\r\n}\r\n\r\nexport default uqUI;\r\n","import teamPerson from './teamPerson';\r\n\r\nexport default {\r\n    teamPerson: teamPerson,\r\n};\r\n","import user from './user';\r\nimport organization from './organization';\r\n\r\nexport default {\r\n    user: user,\r\n    organization: organization,\r\n};\r\n","import * as React from 'react';\r\nimport { TuidUI, CTuidSelect, CQuery, QueryPageItems } from \"tonva-react-uq\";\r\nimport { PageItems } from \"tonva-tools\";\r\n\r\nclass CUserSelect extends CTuidSelect {\r\n    protected buildPageItems():PageItems<any> {\r\n        let query:CQuery = this.cUq.cFromName('query', 'SearchUser') as CQuery;\r\n        return new QueryPageItems(query.entity);\r\n    }\r\n    idFromItem(item:any) {return item.id;}\r\n\r\n    async searchMain(key:string) {\r\n        if (this.PageItems === undefined) {\r\n            this.PageItems = this.buildPageItems();\r\n        }\r\n        if (key !== undefined) await this.PageItems.first({key: key});\r\n    }\r\n}\r\n\r\nconst ui:TuidUI = {\r\n    CTuidSelect: CUserSelect,\r\n    content: (item:any) => {return <>{item.name}</>},\r\n}\r\n\r\nexport default ui;\r\n","import * as React from 'react';\r\nimport { TuidUI } from \"tonva-react-uq\";\r\n\r\nconst ui:TuidUI = {\r\n    divs: {\r\n        post: {\r\n            content: (item:any) => {\r\n                let {title} = item;\r\n                return <>{title}</>;\r\n            },\r\n            rowContent: (item:any) => {\r\n                let {title} = item;\r\n                return <>{title}</>;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default ui;\r\n","import teamPosts from './teamPosts';\r\n\r\nexport default {\r\n    teamPosts: teamPosts,\r\n};\r\n","import * as React from 'react';\r\nimport { QueryUI } from \"tonva-react-uq\";\r\nimport { observer } from 'mobx-react';\r\n\r\nconst ui:QueryUI = {\r\n    row: observer((item:any) => {\r\n        let {post} = item;\r\n        return <div className=\"px-3 py-2\">{post.content()}</div>;\r\n    }),\r\n};\r\n\r\nexport default ui;\r\n","import CN from './zh/CN';\r\n\r\nconst res = {\r\n    zh: {\r\n        CN: CN\r\n    }\r\n};\r\n\r\nexport default res;\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\n\r\nexport default {\r\n    x: {\r\n        no: '编号',\r\n        team: '部门',\r\n        staff: '员工',\r\n        noStaff: '无员工',\r\n        post: '职位',\r\n        noPost: '无职位',\r\n        a: 'aaa',\r\n        b: {\r\n            s: 'sss',\r\n            d: ()=><span className=\"text-success\">ddd</span>,\r\n        },\r\n        c: ()=><span className=\"text-danger\">ccc</span>,\r\n    },\r\n    uq: '$UNITX',\r\n    tuid: '基础档案',\r\n    map: '对照表',\r\n    sheet: '单据',\r\n    pending: '待处理',\r\n    book: '帐',\r\n    action: '操作',\r\n    tuidNullCaption: '选择',\r\n    submit: '提交',\r\n    arrNew: '新增',\r\n    arrEdit: '保存',\r\n    entity: {\r\n        message: {\r\n            label: '消息-message',\r\n            arrNew: '新增消息',\r\n            arrEdit: '保存消息',\r\n            fields: {\r\n                fromUser: '发送人',\r\n                fromUnit: '发送部门',\r\n                type: '类型',\r\n                date: '日期',\r\n                subject: '主题',\r\n                discription: '描述',\r\n                content: '内容'\r\n            },\r\n        },\r\n        getMessage: {\r\n            label: '获取Message',\r\n            submit: '获取消息',\r\n            fields: {\r\n                msg: '消息'\r\n            }\r\n        },\r\n        newMessage: {\r\n            label: '新建消息',\r\n            fields: {\r\n                type: '类型',\r\n                subject: '主题',\r\n            },\r\n            arrs: {\r\n                to: {\r\n                    label: '发送',\r\n                    newSubmit: '新增to',\r\n                    editSumbit: '保存to',\r\n                },\r\n                cc: {\r\n                    label: '抄送',\r\n                    newSubmit: '新增cc',\r\n                    editSumbit: '保存cc',\r\n                }\r\n            }\r\n        },\r\n        sectionTeam: {\r\n            label: '大部-团队对照表',\r\n        },\r\n        teamPerson: {\r\n            label: '员工-岗位对照表',\r\n            fields: {\r\n            },\r\n            confirmDelete: _.template('真的要删除${label}吗'),\r\n        },\r\n        teamOrganization: {\r\n            label: '团队-机构对照表',\r\n        },\r\n        teamPosts: {\r\n            label: '团队-岗位对照表',\r\n        },\r\n        person: {\r\n            label: '员工',\r\n            fields: {\r\n                name: '姓名',\r\n                nick: '别名',\r\n                given: '名字',\r\n                sur: '姓',\r\n                gender: '性别',\r\n                user: '用户',\r\n            }\r\n        },\r\n        organization: {\r\n            label: '机构',\r\n            arrs: {\r\n                post: {\r\n                    label: '岗位',\r\n                }\r\n            }\r\n        },\r\n        user: {\r\n            label: '用户'\r\n        },\r\n        team: {\r\n            label: '团队',\r\n        },\r\n        section: {\r\n            label: '大部',\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { IObservableValue, observable } from 'mobx';\r\nimport { Page, VPage } from 'tonva-tools';\r\nimport { Muted, LMR, FA, List } from 'tonva-react-form';\r\nimport { COpBinding } from './cOpBinding';\r\nimport { StateTo, Sheet, Organization, Post, Team, Section, To, Entity } from './model';\r\n\r\ninterface SelectablePost {\r\n    post: Post;\r\n    selected: IObservableValue<boolean>;\r\n    teams?: SelectableTeam[];\r\n}\r\n\r\ninterface SelectableTeam {\r\n    team: Team;\r\n    selected: IObservableValue<boolean>;\r\n    sections?: SelectableSection[];\r\n}\r\n\r\ninterface SelectableSection {\r\n    section: Section;\r\n    selected: IObservableValue<boolean>;\r\n}\r\n\r\nexport class VOpBinding extends VPage<COpBinding> {\r\n    private sheet: Sheet;\r\n    private states: StateTo[];\r\n    private selectablePosts:SelectablePost[];\r\n    private sheetOpsChanged:boolean = false;\r\n\r\n    private stateClick(state:StateTo) {\r\n        let {organizations, teams, sections, posts} = this.controller;\r\n        let postTos:{[post:number]:To[]} = {};\r\n        let {tos} = state;\r\n        if (tos !== undefined) {\r\n            for (let to of tos) {\r\n                let {post} = to;\r\n                let pid = post.id;\r\n                let pto = postTos[pid];\r\n                if (pto === undefined) postTos[pid] = pto = [];\r\n                pto.push(to);\r\n            }\r\n        }\r\n        this.selectablePosts = posts.map(v => this.buildSelectablePost(v, postTos));\r\n        /*\r\n            return {\r\n                post: v,\r\n                selected: observable.box(false),\r\n                teams: [],\r\n            }\r\n        });*/\r\n        this.sheetOpsChanged = false;\r\n        this.openPage(this.stateView, state);\r\n        this.regConfirmClose(async ():Promise<boolean> => {\r\n            if (this.sheetOpsChanged === false) return true;\r\n            return confirm('未保存\\n真的不保存吗？');\r\n        });\r\n    }\r\n\r\n    private buildSelectablePost(post:Post, postTos:{[post:number]:To[]}):SelectablePost {\r\n        let pto = postTos[post.id];\r\n        let selected:boolean;\r\n        let teams:SelectableTeam[];\r\n        if (pto === undefined) {\r\n            selected = false;\r\n            teams = [];\r\n        }\r\n        else {\r\n            selected = true;\r\n            teams = this.buildSelectableTeams(post, pto);\r\n        }\r\n        let ret = {\r\n            post: post,\r\n            selected: observable.box(selected),\r\n            teams: teams,\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private buildSelectableTeams(post:Post, tos: To[]):SelectableTeam[] {\r\n        let teamTos:{[team:number]:To[]} = {};\r\n        let hasAllTeams = false;\r\n        for (let to of tos) {\r\n            let {team} = to;\r\n            let teamId;\r\n            if (team === undefined) {\r\n                teamId = 0;\r\n                hasAllTeams = true;\r\n            }\r\n            else {\r\n                teamId = team.id;\r\n            }\r\n            let tto = teamTos[teamId];\r\n            if (tto === undefined) teamTos[teamId] = tto = [];\r\n            tto.push(to);\r\n        }\r\n        let sections:Section[] = [];\r\n        let {organization} = post;\r\n        if (organization !== undefined && organization.teams !== undefined) {\r\n            for (let team of post.organization.teams) {\r\n                if (team.sections !== undefined) sections.push(...team.sections);\r\n            }\r\n        }\r\n        let teams:SelectableTeam[] = [];\r\n        let teamTo0 = teamTos[0];\r\n        let teamTo0Sections = this.buildSelectableSections(sections, teamTo0);\r\n        teams.push({\r\n            team: {\r\n                id: 0,\r\n                name: '* 所有部门',\r\n                no: undefined,\r\n                sections: sections,\r\n                organizations: undefined,\r\n            }, \r\n            selected: observable.box(teamTo0!==undefined), \r\n            sections: teamTo0Sections,\r\n        });\r\n        if (organization !== undefined && organization.teams !== undefined) {\r\n            post.organization.teams.forEach(v => {\r\n                let teamTo = teamTos[v.id];\r\n                teams.push({\r\n                    team: v,\r\n                    selected: observable.box(teamTo!==undefined),\r\n                    sections: this.buildSelectableSections(sections, teamTo),\r\n                });\r\n            });\r\n        }\r\n        if (hasAllTeams === true && tos.length === 1) {\r\n            let selectableTeam0 = teams[0];\r\n            let hasSection = false;\r\n            for (let selectableSection of selectableTeam0.sections) {\r\n                if (selectableSection.selected.get() === true) {\r\n                    hasSection = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (hasSection === false) {\r\n                selectableTeam0.selected.set(false);\r\n                selectableTeam0.sections = [];\r\n            }\r\n        }\r\n        return teams;\r\n    }\r\n\r\n    private buildSelectableSections(sections:Section[], tos: To[]):SelectableSection[] {\r\n        let selectableSections:SelectableSection[] = [];\r\n        for (let section of sections) {\r\n            selectableSections.push({\r\n                section: section,\r\n                selected: observable.box(tos && tos.find(v => v.section && section.id === v.section.id) !== undefined),\r\n            });\r\n        }\r\n        return selectableSections;\r\n    }\r\n\r\n    private renderState(stateTo:StateTo) {\r\n        let {name, caption, tos, tosText, configable} = stateTo;\r\n        let content;\r\n        if (configable === true) {\r\n            let right = <FA className=\"text-muted align-self-center\" name=\"chevron-right\" />;\r\n            let onClick = () => this.stateClick(stateTo);\r\n            let tosView = <this.stateTosView tosText={tosText} />;\r\n            content = <>\r\n                <LMR className=\"bg-white py-1 px-2 cursor-pointer\" right={right} onClick={onClick}>\r\n                    {caption}\r\n                </LMR>\r\n                {tosView}\r\n            </>\r\n        }\r\n        else {\r\n            content = <div className=\"bg-white py-1 px-2\">\r\n                {caption}\r\n            </div>;\r\n        }\r\n        return <div key={name} className=\"border border-light rounded mx-1 my-3\">\r\n            {content}\r\n        </div>\r\n    }\r\n\r\n    private stateTosView = observer(({tosText}:{tosText: IObservableValue<string[]>}) => {\r\n        let tos = tosText.get();\r\n        return <div className=\"bg-light py-1 px-2\">{\r\n            tos === undefined || tos.length === 0? <Muted>[无岗位]</Muted> :\r\n            tos.map((v,index) => {\r\n                return <span\r\n                    key={v}\r\n                    className=\"d-inline-block border bg-white rounded mr-2 my-1 py-1 px-2\">\r\n                    {v}\r\n                </span>\r\n            })\r\n        }\r\n        </div>\r\n    });\r\n\r\n    private tosTexts(tos: To[]):string[] {\r\n        return tos && tos.map((v,index) => {\r\n            let {post, team, section} = v;\r\n            let content:string = post.title;\r\n            if (team !== undefined && team.id > 0) content += ' @ ' + team.name;\r\n            if (section !== undefined) {\r\n                if (team === undefined || team.id === 0) content += ' @ * ';\r\n                content += ' / ' + section.name;\r\n            }\r\n            return content;\r\n        });\r\n    }\r\n\r\n    async open({entity, opTos}:{entity:Entity, opTos:{[op:string]:To[]}}) {\r\n        this.sheet = entity;\r\n        let {name, states} = entity;\r\n        if (states === undefined) {\r\n            let tos = opTos['$'];\r\n            this.states = [{\r\n                name: '$',\r\n                caption: '允许岗位',\r\n                configable: true,\r\n                tos: tos,\r\n                tosText: observable.box<string[]>(this.tosTexts(tos)),\r\n            }];\r\n            this.openPageElement(<Page header={name + ' - 岗位'}>\r\n                {this.states.map(v => this.renderState(v))}\r\n            </Page>);\r\n            return;\r\n        }\r\n\r\n        this.states = states.map(v => {\r\n            let prefix = v.substr(0, 1);\r\n            let caption: string | JSX.Element;\r\n            let configable: boolean;\r\n            let tos;\r\n            switch (prefix) {\r\n                case '<': caption = <>{v.substr(1)} &nbsp; <Muted>回复</Muted></>; configable = false; break;\r\n                case '#': caption = <>{v.substr(1)} &nbsp; <Muted>返初</Muted></>; configable = false; break;\r\n                case '$': \r\n                    caption = '[新开单]'; \r\n                    configable = true; \r\n                    tos = opTos[v];\r\n                    break;\r\n                default:\r\n                    caption = v;\r\n                    configable = true; \r\n                    tos = opTos[v];\r\n                    break;\r\n            }\r\n            return {\r\n                name: v,\r\n                caption: caption,\r\n                configable: configable,\r\n                tos: tos,\r\n                tosText: observable.box<string[]>(this.tosTexts(tos)),\r\n            };\r\n        });\r\n        this.openPageElement(<Page header={'单据状态对应岗位 - ' + name} >\r\n            {this.states.map(v => this.renderState(v))}\r\n        </Page>);\r\n    }\r\n\r\n    private async saveOps(stateTo: StateTo) {\r\n        let stateToName = stateTo.name;\r\n        let tos:To[] = [];\r\n        let toArr:{post:number, team:number, section:number}[] = [];\r\n        for (let sp of this.selectablePosts) {\r\n            if (sp.selected.get() === false) continue;\r\n            let postId = sp.post.id;\r\n            let teamCount = 0;\r\n            for (let st of sp.teams) {\r\n                if (st.selected.get() === false) continue;\r\n                let teamId = st.team.id;\r\n                ++teamCount;\r\n                let sectionCount = 0;\r\n                for (let ss of st.sections) {\r\n                    if (ss.selected.get() === false) continue;\r\n                    let sectionId = ss.section.id;\r\n                    ++sectionCount;\r\n                    toArr.push({\r\n                        post: postId,\r\n                        team: teamId,\r\n                        section: sectionId,\r\n                    });\r\n                    tos.push({\r\n                        post: sp.post,\r\n                        team: st.team,\r\n                        section: ss.section,\r\n                    });\r\n                }\r\n                if (sectionCount === 0) {\r\n                    toArr.push({\r\n                        post: postId,\r\n                        team: teamId,\r\n                        section: 0,\r\n                    });\r\n                    tos.push({\r\n                        post: sp.post,\r\n                        team: st.team,\r\n                        section: undefined,\r\n                    });\r\n                }\r\n            }\r\n            if (teamCount === 0) {\r\n                toArr.push({\r\n                    post: postId,\r\n                    team: 0,\r\n                    section: 0,\r\n                });\r\n                tos.push({\r\n                    post: sp.post,\r\n                    team: undefined,\r\n                    section: undefined,\r\n                });\r\n            }\r\n        }\r\n        await this.controller.saveSheetStatePosts(this.sheet, stateToName, toArr);\r\n        let state = this.states.find(v => v.name === stateToName);\r\n        state.tos = tos;\r\n        let tosTexts = this.tosTexts(tos);\r\n        state.tosText.set(tosTexts);\r\n        this.closePage();\r\n    }\r\n\r\n    private organizationRow = (item: Organization, index:number) => {\r\n        let {id, name} = item;\r\n        return <div>id:{id} name:{name}</div>;\r\n    }\r\n    private teamRow = (item: SelectableTeam, index:number) => {\r\n        return <this.observableTeamRow {...item} />;\r\n    }\r\n    private sectionRow = (item: SelectableSection, index:number) => {\r\n        return <this.observableSectionRow {...item} />;\r\n    }\r\n    private postRow = (item:SelectablePost, index:number) => {\r\n        return <this.observablePostRow {...item} />;\r\n    };\r\n    private stateView: React.SFC<StateTo> = (state:StateTo) => {\r\n        let {caption} = state;\r\n        /*\r\n        switch (state.name) {\r\n            case '-':  stateCaption = '允许岗位'; break;\r\n            case '$':  stateCaption = '[新开单]'; break;\r\n            default: stateCaption = state.name; break;\r\n        }\r\n        */\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={async ()=>await this.saveOps(state)}>保存</button>\r\n        return <Page header={`${this.sheet.name} - ${caption}`}\r\n            back=\"close\"\r\n            right={right}>\r\n            <div className=\"mx-3 my-2\">\r\n                <Muted>设置单据状态跟岗位的对应关系</Muted>\r\n            </div>\r\n            <List className=\"my-2\" \r\n                items={this.selectablePosts} \r\n                item={{render: this.postRow}} />\r\n        </Page>\r\n    }\r\n    /*\r\n    <List className=\"my-2\" header=\"Organization\" items={organizations} item={{render: this.organizationRow}} />\r\n    <List className=\"my-2\" header=\"Team\" items={teams} item={{render: this.teamRow}} />\r\n    <List className=\"my-2\" header=\"Section\" items={sections} item={{render: this.sectionRow}} />\r\n    */\r\n\r\n    private onPostSelectChanged(item:SelectablePost, checked:boolean) {\r\n        this.sheetOpsChanged = true;\r\n        let {post, selected} = item;\r\n        if (checked === true) {\r\n            let sections:Section[] = [];\r\n            let {organization} = post;\r\n            if (organization !== undefined && organization.teams !== undefined) {\r\n                for (let team of post.organization.teams) {\r\n                    if (team.sections !== undefined) sections.push(...team.sections);\r\n                }\r\n            }\r\n            item.teams.push({\r\n                team: {\r\n                    id: 0,\r\n                    name: '* 所有部门',\r\n                    no: undefined,\r\n                    sections: sections,\r\n                    organizations: undefined,\r\n                }, \r\n                selected: observable.box(false), \r\n                sections:[]\r\n            });\r\n            if (organization !== undefined && organization.teams !== undefined) {\r\n                post.organization.teams.forEach(v => {\r\n                    item.teams.push({\r\n                        team: v,\r\n                        selected: observable.box(false),\r\n                        sections: []\r\n                    });\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            item.teams.splice(0);\r\n        }\r\n        selected.set(checked);\r\n    }\r\n\r\n    private onTeamSelectChanged(item:SelectableTeam, checked:boolean) {\r\n        this.sheetOpsChanged = true;\r\n        let {team, selected} = item;\r\n        if (checked === true) {\r\n            //item.sections.push({section: undefined, selected: observable.box(false)});\r\n            team.sections.forEach(v => {\r\n                item.sections.push({\r\n                    section: v,\r\n                    selected: observable.box(false)\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            item.sections.splice(0);\r\n        }\r\n        selected.set(checked);\r\n    }\r\n\r\n    private onSectionSelectChanged(item:SelectableSection, checked:boolean) {\r\n        this.sheetOpsChanged = true;\r\n        let {section, selected} = item;\r\n        selected.set(checked);\r\n    }\r\n\r\n    private observablePostRow = observer((item:SelectablePost) => {\r\n        let {post, selected, teams} = item;\r\n        let {title} = post;\r\n        let teamsList;\r\n        let defaultSelected = selected.get();\r\n        if (defaultSelected === true) {\r\n            teamsList = <List className=\"ml-4 va-list-top-border\" items={teams} item={{render:this.teamRow}} />\r\n        }\r\n        return <div className=\"flex-column\">\r\n            <label className=\"px-3 py-2 w-100 mb-0\">\r\n                <input className=\"mr-3 align-middle\"\r\n                    type=\"checkbox\" \r\n                    defaultChecked={defaultSelected}\r\n                    onChange={(evt)=>this.onPostSelectChanged(item, evt.target.checked)} />\r\n                <Muted>岗位</Muted> &nbsp; {title}\r\n            </label>\r\n            {teamsList}\r\n        </div>;\r\n    });\r\n\r\n    private observableTeamRow = observer((item:SelectableTeam) => {\r\n        let {team, selected, sections} = item;\r\n        let {name} = team;\r\n        let teamsList;\r\n        let defaultSelected = selected.get();\r\n        if (defaultSelected === true && sections.length > 0) {\r\n            teamsList = <List className=\"ml-4 va-list-top-border\" items={sections} item={{render:this.sectionRow}} />\r\n        }\r\n        return <div className=\"flex-column\">\r\n            <label className=\"px-3 py-2 w-100 mb-0\">\r\n                <input className=\"mr-3 align-middle\"\r\n                    type=\"checkbox\" \r\n                    defaultChecked={defaultSelected}\r\n                    onChange={(evt)=>this.onTeamSelectChanged(item, evt.target.checked)} />\r\n                <Muted>部门</Muted> &nbsp; {name}\r\n            </label>\r\n            {teamsList}\r\n        </div>;\r\n    });\r\n\r\n    private observableSectionRow = observer((item:SelectableSection) => {\r\n        let {section, selected} = item;\r\n        let {name} = section;\r\n        let defaultSelected = selected.get();\r\n        return <div className=\"flex-column\">\r\n            <label className=\"px-3 py-2 w-100 mb-0\">\r\n                <input className=\"mr-3 align-middle\"\r\n                    type=\"checkbox\" \r\n                    defaultChecked={defaultSelected}\r\n                    onChange={(evt)=>this.onSectionSelectChanged(item, evt.target.checked)} />\r\n                <Muted>大部</Muted> &nbsp; {name}\r\n            </label>\r\n        </div>;\r\n    });\r\n}\r\n ","import * as React from 'react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { COpBinding } from \"./cOpBinding\";\r\nimport { Entity, EntityBlock, Uq } from './model';\r\nimport { entityIcons, CAction, CQuery } from 'tonva-react-uq';\r\nimport { List, Muted, LMR, FA } from 'tonva-react-form';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\n\r\ninterface Checked {\r\n    def: boolean;\r\n    checked: boolean;\r\n}\r\n\r\nexport class VAllPosts extends VPage<COpBinding> {\r\n    private uq: Uq;\r\n    private blocks:EntityBlock[];\r\n    private checked:{[entity:string]:Checked} = {};\r\n\r\n    @observable private isChanged:boolean = false;\r\n    async open(uq: Uq) {\r\n        this.uq = uq;\r\n        let {name, tuids, actions, maps, books, queries, histories, pendings, sheets} = this.uq;\r\n        this.blocks = [\r\n            {items: tuids, type: 'tuid'},\r\n            {items: sheets, type: 'sheet'},\r\n            {items: actions, type: 'action'},\r\n            {items: maps, type: 'map'},\r\n            {items: books, type: 'book'},\r\n            {items: queries, type: 'query'},\r\n            {items: histories, type: 'history'},\r\n            {items: pendings, type: 'pending'},\r\n        ];\r\n        let getEntityOpForAll = this.controller.cUq.cFromName('query', 'getEntityOpForAll') as CQuery;\r\n        let entityOpForAllResult = await getEntityOpForAll.entity.query({uq: this.uq.id});\r\n        let entityOpForAll:{[entity:string]:boolean} = {};\r\n        for (let eaa of entityOpForAllResult.ret) {\r\n            entityOpForAll[eaa.entity] = true;\r\n        }\r\n        for (let b of this.blocks) {\r\n            let {items} = b;\r\n            if (items === undefined) continue;\r\n            for (let item of items) {\r\n                let {name} = item;\r\n                let checked = (entityOpForAll[name] === true);\r\n                this.checked[name] = {\r\n                    def: checked,\r\n                    checked: checked,\r\n                };\r\n            }\r\n        }\r\n        this.openPage(this.pageRender);\r\n        this.regConfirmClose(async ():Promise<boolean> => {\r\n            if (this.isChanged === false) return true;\r\n            return confirm('未保存\\n真的不保存吗？');\r\n        });\r\n    }\r\n\r\n    private onCheckChanged = (entity:Entity, checked: boolean) => {\r\n        this.checked[entity.name].checked = checked;\r\n        let isChanged:boolean = false;\r\n        for (let i in this.checked) {\r\n            let {def, checked} = this.checked[i];\r\n            if (def !== checked) {\r\n                isChanged = true;\r\n                break;\r\n            }\r\n        }\r\n        this.isChanged = isChanged;\r\n    }\r\n\r\n    private saveChange = async () => {\r\n        let entities:{entity:string}[] = [];\r\n        for (let i in this.checked) {\r\n            if (this.checked[i].checked !== true) continue;\r\n            entities.push({entity: i});\r\n        }\r\n        let saveEntityOpForAll = this.controller.cUq.cFromName('action', 'saveEntityOpForAll') as CAction;\r\n        let ret = await saveEntityOpForAll.entity.submit({\r\n            uq: this.uq.id,\r\n            entities: entities,\r\n        });\r\n        this.ceasePage();\r\n        this.openPageElement(<Page header=\"所有岗位可操作\" back=\"close\">\r\n            <div className=\"p-3\">\r\n                <FA name=\"check-circle\" className=\"text-success\" /> &nbsp;\r\n                已保存\r\n            </div>\r\n        </Page>);\r\n    }\r\n\r\n    private entityRender(entity:Entity, icon:any) {\r\n        let {name} = entity;\r\n        let right = <input className=\"mr-3 align-middle\"\r\n            type=\"checkbox\" \r\n            defaultChecked={this.checked[name].def}\r\n            onChange={(evt)=>this.onCheckChanged(entity, evt.target.checked)}/>\r\n\r\n        return <LMR className=\"px-3 py-2 align-items-center\"\r\n            right={right}>\r\n            {icon} &nbsp; {name}\r\n        </LMR>;\r\n    }\r\n\r\n    private pageRender = observer(() => {\r\n        /*\r\n        let {name, tuids, actions, maps, books, queries, histories, pendings, sheets} = this.uq;\r\n        let blocks:EntityBlock[] = [\r\n            {items: tuids, type: 'tuid'},\r\n            {items: sheets, type: 'sheet'},\r\n            {items: actions, type: 'action'},\r\n            {items: maps, type: 'map'},\r\n            {items: books, type: 'book'},\r\n            {items: queries, type: 'query'},\r\n            {items: histories, type: 'history'},\r\n            {items: pendings, type: 'pending'},\r\n        ];*/\r\n        let buttonSave = this.isChanged===true? <button className=\"btn btn-sm btn-success\" onClick={this.saveChange}>保存</button> : null;\r\n        return <Page header={'所有岗位可操作'} right={buttonSave}>\r\n            <div className=\"text-muted p-3 small\">\r\n                <div style={{lineHeight:'1.8', fontWeight:'bold'}}>说明</div>\r\n                <ol className=\"pl-3\" style={{listStyleType: '1', lineHeight: '1.8'}}>\r\n                    <li >\r\n                        有些操作，默认允许所有用户可操作，可以在这里设置。\r\n                    </li>\r\n                    <li>\r\n                        比如，用户下订单。任何客户，登录进系统，都可以下单。\r\n                    </li>\r\n                    <li>\r\n                        如果每个用户都需要设置，用户会丢失，管理人员会繁琐。\r\n                    </li>\r\n                </ol>\r\n            </div>\r\n            {this.blocks.map(block => {\r\n                let {items, type} = block;\r\n                let icon = entityIcons[type];\r\n                return items && items.length>0 &&\r\n                    <List key={type}\r\n                        className=\"mt-3\"\r\n                        header={<Muted className=\"px-3 pt-1 bg-light w-100\">{this.res[type]||type}</Muted>} \r\n                        items={items} \r\n                        item={{\r\n                            render:(item:any, index:number)=>this.entityRender(item, icon), \r\n                            onClick: undefined\r\n                        }} />;\r\n            })}\r\n        </Page>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, nav } from \"tonva-tools\";\r\nimport { COpBinding } from \"./cOpBinding\";\r\nimport { Uq } from './model';\r\nimport { List, FA, SearchBox } from 'tonva-react-form';\r\nimport { observable } from 'mobx';\r\nimport { CMap, CQuery, QueryPageItems, Query, Tuid, CTuid } from 'tonva-react-uq';\r\n\r\nexport class PageUsers extends QueryPageItems {\r\n    protected setPageStart(item:any) {\r\n        this.pageStart = item === undefined? 0 : item.id;\r\n    }\r\n}\r\n\r\nexport class VFullFunction extends VPage<COpBinding> {\r\n    private uq: Uq;\r\n    @observable private users: any[] = [];\r\n    private entityOpUserFully:CMap;\r\n    private pageUsers: PageUsers;\r\n    private tuidUser: CTuid<Tuid>;\r\n    async open(uq: Uq) {\r\n        this.uq = uq;\r\n        this.entityOpUserFully = this.controller.cUq.cFromName('map', 'entityOpUserFully') as CMap;\r\n        this.tuidUser = this.controller.cUq.cFromName('tuid', 'user') as CTuid<Tuid>;\r\n        await this.entityOpUserFully.entity.loadSchema();\r\n        let all = await this.entityOpUserFully.entity.queries.all.query({_uq: this.uq.id});\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={this.addClick}><FA name=\"plus\" /></button>;\r\n        this.users.push(...all.ret);\r\n        this.openPageElement(<Page header={'全功能用户'} right={right}>\r\n            <List items={this.users} item={{render:this.renderUser, onClick: this.onStopFully}} />\r\n        </Page>);\r\n        return;\r\n    }\r\n\r\n    private onStopFully = async (item:any) => {\r\n        this.openPageElement(<Page header={'停止全功能'}>\r\n            <div className=\"p-3\">\r\n                <div><b className=\"text-danger h4\">{item.user.content()}</b> 停止全功能用户。<br/>请确认。</div>\r\n                <div className=\"p-3\">\r\n                    <button className=\"btn btn-success\" onClick={()=>this.onSumitStopFully(item)}>停止全功能</button>\r\n                    <button className=\"ml-3 btn btn-outline-danger\" onClick={this.onCancelStop}>不停</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n    }\r\n\r\n    private onSumitStopFully = async (item:any) => {\r\n        let data = {_uq: this.uq.id, arr1:[{_user: item.user.id}]};\r\n        await this.entityOpUserFully.entity.actions.del.submit(data);\r\n        let index = this.users.findIndex(v => v === item);\r\n        if (index >= 0) this.users.splice(index, 1);\r\n        this.closePage();\r\n    }\r\n\r\n    private onCancelStop = () => this.closePage();\r\n\r\n    private addClick = async () => {\r\n        let user = await this.controller.callSearchUser(this.uq);\r\n        this.onUserSelected(user);\r\n        /*\r\n        let searchUser = this.controller.cUq.cFromName('query', 'SearchUser') as CQuery;\r\n        this.pageUsers = new PageUsers(searchUser.entity);\r\n        this.openPage(this.usersView);\r\n        */\r\n    }\r\n\r\n    private renderUser = (item:any, index:number) => {\r\n        return <div className=\"px-3 py-2\">{item.user.content()}</div>;\r\n    }\r\n\r\n    private onSearch = async (key:string) => {\r\n        await this.pageUsers.first({key: key});\r\n    }\r\n    private onSetFully = async (item:any) => {\r\n        await this.entityOpUserFully.entity.actions.add.submit({_uq: this.uq.id, arr1:[{_user: item.id}]});\r\n        this.tuidUser.entity.useId(item.id);\r\n        let row = {\r\n            uq: this.uq.id,\r\n            user: this.tuidUser.entity.boxId(item.id),\r\n        }\r\n        this.users.push(row);\r\n        this.closePage(2);\r\n    }\r\n    private onCancelFully = () => {this.backPage()}\r\n    private onUserSelected = (item:any) => {\r\n        this.openPageElement(<Page header=\"确认\">\r\n            <div className=\"p-3\">\r\n                <div><b className=\"text-danger h4\">{item.name}</b> 将设置为全功能用户。只有系统管理员或者测试人员才需要全功能，可以操作所有数据。<br/>请确认。</div>\r\n                <div className=\"p-3\">\r\n                    <button className=\"btn btn-success\" onClick={()=>this.onSetFully(item)}>设置为全功能用户</button>\r\n                    <button className=\"ml-3 btn btn-outline-danger\" onClick={this.onCancelFully}>取消</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n    }\r\n    private renderSelectUser = (item:any, index:number) => {\r\n        return <div className=\"px-3 py-2\">{JSON.stringify(item)}</div>;\r\n    }\r\n    private usersView = () => {\r\n        let search = <SearchBox className=\"w-100\" onSearch={this.onSearch} placeholder=\"选择用户\" />;\r\n        return <Page header={search}>            \r\n            <List\r\n                before=\"搜索用户名\"\r\n                items={this.pageUsers} \r\n                item={{render: this.renderSelectUser, onClick:this.onUserSelected}} />\r\n        </Page>;\r\n    };\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { VPage, Page, PageItems } from \"tonva-tools\";\r\nimport { SearchBox, List } from 'tonva-react-form';\r\nimport { centerApi } from 'tonva-react-uq';\r\nimport { COpBinding } from \"./cOpBinding\";\r\n\r\nexport class VSearchUser extends VPage<COpBinding> {\r\n    private unit:number;\r\n    private pageUsers = new PageUsers();\r\n\r\n    private onUserClick = (item:any) => {\r\n        this.closePage();\r\n        this.returnCall(item);\r\n    }\r\n    private onSearch = async (key:string) => {\r\n        await this.pageUsers.first({key: key, unit:this.unit, role:undefined});\r\n    }\r\n    private renderSelectUser = (item:any, index:number) => {\r\n        return <div className=\"px-3 py-2\">{JSON.stringify(item)}</div>;\r\n    }\r\n    async open(unit: number) {\r\n        this.unit = unit;\r\n        let search = <SearchBox className=\"w-100\" onSearch={this.onSearch} placeholder=\"选择用户\" />;\r\n        this.openPageElement(<Page header={search}>\r\n            <List\r\n                before=\"搜索用户名\"\r\n                items={this.pageUsers}\r\n                item={{render: this.renderSelectUser, onClick:this.onUserClick}} />\r\n        </Page>);\r\n    }\r\n}\r\n\r\nclass PageUsers extends PageItems<any> {\r\n    protected async load(param:{key:string, unit:number, role:number}, pageStart: any, pageSize: number): Promise<any[]> {\r\n        let {unit, role, key} = param;\r\n        let ret = await centerApi.get('unit/members', {key: key, unit:unit, role:role, pageStart:pageStart, pageSize:pageSize});\r\n        return ret;\r\n    }\r\n    protected setPageStart(item: any): any {\r\n        if (item === undefined)\r\n            this.pageStart = 0;\r\n        else\r\n            this.pageStart = item.id;\r\n    }\r\n}","import React from \"react\";\r\nimport { Page, Controller, appInFrame, VPage } from \"tonva-tools\";\r\nimport { List, Muted, LMR, FA } from \"tonva-react-form\";\r\nimport { VOpBinding } from './vOpBinding';\r\nimport { CAction, CQuery, centerApi, entityIcons, ControllerUq } from \"tonva-react-uq\";\r\nimport { Organization, Team, Section, Post, Sheet, App, Uq, To, Entity, EntityBlock } from \"./model\";\r\nimport { VAllPosts } from \"./vAllPosts\";\r\nimport { VFullFunction } from \"./vFullFunction\";\r\nimport { VSearchUser } from \"./vSearchUser\";\r\n\r\n// 单据跟操作的绑定设置\r\nexport class COpBinding extends ControllerUq {\r\n    /*\r\n    constructor(unitxUq: CUq, res:any) {\r\n        super({});\r\n        this.unitxUq = unitxUq;\r\n    }*/\r\n\r\n    icon = <FA name=\"map-o\" className=\"text-success\" fixWidth={true} />;\r\n    label = '岗位权限 - UQ对象';\r\n\r\n    //private unitxUq: CUq;\r\n    private apps: App[];\r\n    organizations: Organization[];\r\n    teams: Team[];\r\n    sections: Section[];\r\n    posts: Post[];\r\n    postDict: {[id:number]:Post};\r\n    teamDict: {[id:number]:Team};\r\n    organizationDict: {[id:number]:Organization};\r\n    sectionDict: {[id:number]:Section};\r\n\r\n    protected async internalStart():Promise<void> {\r\n        await this.buildPosts();\r\n        await this.buildAppsUqs();\r\n        this.openPage(<this.appsView />);\r\n    }\r\n\r\n    private async buildAppsUqs() {\r\n        let unit = appInFrame.unit;\r\n        let ret:any[][] = await centerApi.get('/unit/apps-uqs', {unit: unit});\r\n        this.apps = ret[0];\r\n        let uqs: Uq[] = ret[1];\r\n\r\n        for (let app of this.apps) {\r\n            app.uqs = [];\r\n        }\r\n        for (let uq of uqs) {\r\n            let app = this.apps.find(v => v.id === uq.app);\r\n            if (app === undefined) continue;\r\n            app.uqs.push(uq);\r\n            this.setUqEntities(uq);\r\n        }\r\n    }\r\n\r\n    private async buildPosts() {\r\n        let queryAllTeams = this.cUq.cFromName('query', 'allteams') as CQuery;\r\n        let ret:any[][] = await queryAllTeams.entity.query(undefined);\r\n        this.teams = ret['teams'];\r\n        this.organizations = ret['organization'];\r\n        this.posts = ret['organizationpost'];\r\n        this.sections = ret['sections'];\r\n        this.postDict = {};\r\n        this.teamDict = {};\r\n        this.organizationDict = {};\r\n        this.sectionDict = {};\r\n        for (let organization of this.organizations) {\r\n            organization.posts = [];\r\n            organization.teams = [];\r\n            this.organizationDict[organization.id] = organization;\r\n        }\r\n        for (let team of this.teams) {\r\n            team.organizations = [];\r\n            team.sections = [];\r\n            this.teamDict[team.id] = team;\r\n        }\r\n        for (let section of this.sections) {\r\n            section.teams = [];\r\n            this.sectionDict[section.id] = section;\r\n        }\r\n        for (let post of this.posts) {\r\n            this.postDict[post.id] = post;\r\n            let organization = this.organizationDict[post.owner];\r\n            if (organization === undefined) {\r\n                continue;\r\n            }\r\n            post.organization = organization;\r\n            organization.posts.push(post);\r\n        }\r\n        // teamOrganization\r\n        for (let teamOrganization of ret['teamorganization']) {\r\n            let {team:tm, organization:og} = teamOrganization;\r\n            let team = this.teamDict[tm];\r\n            let organization = this.organizationDict[og];\r\n            team.organizations.push(organization);\r\n            organization.teams.push(team);\r\n        }\r\n        // sectionTeam\r\n        for (let sectionTeam of ret['sectionteam']) {\r\n            let {section:sec, team:tm} = sectionTeam;\r\n            let section = this.sectionDict[sec];\r\n            let team = this.teamDict[tm];\r\n            section.teams.push(team);\r\n            team.sections.push(section);\r\n        }\r\n    }\r\n\r\n    private setUqEntities(uq:Uq) {\r\n        let entities = uq.entities;\r\n        if (entities === null) return;\r\n        let lns = entities.split('\\n');\r\n        let len = lns.length;\r\n        let p:number;\r\n        for (let i=0; i<len;) {\r\n            switch (lns[i]) {\r\n                case 'tuid': p = this.setEntities(uq.tuids = [], lns, i, uq); break;\r\n                case 'map': p = this.setEntities(uq.maps = [], lns, i, uq); break;\r\n                case 'book': p = this.setEntities(uq.books = [], lns, i, uq); break;\r\n                case 'history': p = this.setEntities(uq.histories = [], lns, i, uq); break;\r\n                case 'pending': p = this.setEntities(uq.pendings = [], lns, i, uq); break;\r\n                case 'query': p = this.setEntities(uq.queries = [], lns, i, uq); break;\r\n                case 'action': p = this.setEntities(uq.actions = [], lns, i, uq); break;\r\n                case 'sheet': p = this.setSheets(uq.sheets = [], lns, i, uq); break;\r\n                default:\r\n                    alert('unknown entity type: ' + lns[i]);\r\n                    return;\r\n            }\r\n            i = p;\r\n        }\r\n    }\r\n\r\n    private setEntities(entities:Entity[], lines:string[], p:number, uq:Uq):number {\r\n        let len = lines.length;\r\n        let i = p+1;\r\n        for (; i<len; i++) {\r\n            let ln = lines[i];\r\n            if (ln.length > 0) {\r\n                let name = ln;\r\n                entities.push({\r\n                    uq: uq,\r\n                    name: name,\r\n                    states: undefined\r\n                });\r\n            }\r\n            else return i+1;\r\n        }\r\n        return i;\r\n    }\r\n\r\n    private setSheets(sheets:Sheet[], lines:string[], p:number, uq:Uq):number {\r\n        let len = lines.length;\r\n        let i = p+1;\r\n        for (; i<len; i++) {\r\n            let ln = lines[i];\r\n            if (ln.length > 0) {\r\n                let parts:string[] = ln.split('\\t');\r\n                let name = parts[0];\r\n                parts[0] = '$';\r\n                let sheet:Sheet = {\r\n                    uq: uq,\r\n                    name: name,\r\n                    states: parts,\r\n                }\r\n                sheets.push(sheet);\r\n            }\r\n            else return i+1;\r\n        }\r\n        return i;\r\n    }\r\n\r\n    async saveSheetStatePosts(sheet:Sheet, stateName:string, toArr:{post:number, team:number, section:number}[]) {\r\n        let actionSaveEntityOpPost = this.cUq.cFromName('action', 'saveentityoppost') as CAction;\r\n        let {uq, name} = sheet;\r\n        await actionSaveEntityOpPost.submit({\r\n            uq: uq.id,\r\n            entityName: name,\r\n            opName: stateName,\r\n            posts: toArr\r\n        });\r\n    }\r\n\r\n    private appRender = (app:App, index:number) => {\r\n        let {name, discription} = app;\r\n        return <LMR className=\"px-3 py-2\" right={discription && <Muted>{discription}</Muted>}>\r\n            {name}\r\n        </LMR>\r\n    }\r\n\r\n    private appClick = (app:App) => {\r\n        this.openPage(<this.appView {...app} />)\r\n    }\r\n\r\n    async callSearchUser(uq:Uq): Promise<any> {\r\n        let user = await this.vCall(VSearchUser, appInFrame.unit);\r\n        return user;\r\n    }\r\n\r\n    private appsView = () => <Page header={this.label}>\r\n        <div className=\"text-muted p-3 small\">\r\n            <div style={{lineHeight:'1.8', fontWeight:'bold'}}>说明</div>\r\n            <ol className=\"pl-3\" style={{listStyleType: '1', lineHeight: '1.8'}}>\r\n                <li >\r\n                    下面是全部启用的APP。请选择\r\n                </li>\r\n                <li>\r\n                    每个APP会使用一个以上的UQ。UQ里面定义了Tuid，Action，Map和Sheet等对象。\r\n                </li>\r\n                <li>\r\n                    设置对象跟岗位的关联\r\n                </li>\r\n            </ol>\r\n        </div>\r\n        <List items={this.apps} item={{render:this.appRender, onClick:this.appClick}} />\r\n    </Page>;\r\n\r\n    private entityRender(entity:Entity, icon:any) {\r\n        let {name} = entity;\r\n        return <div className=\"px-3 py-2 align-items-center\">{icon} &nbsp; {name}</div>\r\n    }\r\n    private sheetRender(sheet:Sheet, icon:any) {\r\n        let {name, states} = sheet;\r\n        return <div className=\"px-3 py-2 align-items-center\">\r\n            {icon} &nbsp; {name} <Muted> &nbsp; {sheet.states.join(', ')}</Muted>\r\n        </div>\r\n    }\r\n    private entityClick = async (block:EntityBlock, entity:Entity) => {\r\n        //alert('entity click');\r\n        let entityPosts = this.cUq.cFromName('query', 'getEntityPost') as CQuery;\r\n        let ret = await entityPosts.entity.query({uq: entity.uq.id, entityName: entity.name});\r\n        let opTos:{[op:string]:To[]} = {};\r\n        for (let row of ret.ret) {\r\n            let {op, post, team, section} = row;\r\n            let opTo = opTos[op];\r\n            if (opTo === undefined) opTos[op] = opTo = [];\r\n            opTo.push({\r\n                post: this.postDict[post],\r\n                team: this.teamDict[team],\r\n                section: this.sectionDict[section],\r\n            });\r\n        }\r\n        this.openVPage(VOpBinding, {entity:entity, opTos:opTos});\r\n    }\r\n    private sheetClick = async (block:EntityBlock, sheet:Sheet) => {\r\n        this.sheetClickOld(sheet);\r\n    }\r\n\r\n    private sheetClickOld = async (sheet:Sheet) => {\r\n        let entityPosts = this.cUq.cFromName('query', 'getEntityPost') as CQuery;\r\n        let ret = await entityPosts.entity.query({uq: sheet.uq.id, entityName: sheet.name});\r\n        let opTos:{[op:string]:To[]} = {};\r\n        for (let row of ret.ret) {\r\n            let {op, post, team, section} = row;\r\n            let opTo = opTos[op];\r\n            if (opTo === undefined) opTos[op] = opTo = [];\r\n            opTo.push({\r\n                post: this.postDict[post],\r\n                team: this.teamDict[team],\r\n                section: this.sectionDict[section],\r\n            });\r\n        }\r\n        this.openVPage(VOpBinding, {entity:sheet, opTos:opTos});\r\n    }\r\n\r\n    private renderSetting = (item:any, index:number) => {\r\n        let {icon, color, text} = item;\r\n        return <div className=\"px-3 py-2 align-items-center\">\r\n            {<FA name={icon} fixWidth={true} className={color} />} &nbsp; {text}\r\n        </div>\r\n    }\r\n\r\n    private settingClick = (item:any, uq:Uq) => {\r\n        let {name} = item;\r\n        let V: new (coordinator) => VPage<COpBinding>;\r\n        switch (name) {\r\n            default: return;\r\n            case 'entity-by-all-post': V = VAllPosts; break;\r\n            case 'user-all-entities': V = VFullFunction; break;\r\n        }\r\n        this.openVPage(V, uq);\r\n    }\r\n    \r\n    private uqRender = (uq:Uq, index:number) => {\r\n        let {name, tuids, actions, maps, books, queries, histories, pendings, sheets} = uq;\r\n        let nameRender = this.entityRender;\r\n        let blocks:EntityBlock[] = [\r\n            {items: tuids, type: 'tuid', itemClick: this.entityClick},\r\n            {items: sheets, type: 'sheet', itemClick: this.sheetClick, itemRender: this.sheetRender},\r\n            {items: actions, type: 'action', itemClick: this.entityClick},\r\n            {items: maps, type: 'map', itemClick: this.entityClick},\r\n            {items: books, type: 'book', itemClick: this.entityClick},\r\n            {items: queries, type: 'query', itemClick: this.entityClick},\r\n            {items: histories, type: 'history', itemClick: this.entityClick},\r\n            {items: pendings, type: 'pending', itemClick: this.entityClick},\r\n        ];\r\n\r\n        let settings:any[] = [\r\n            {name:'entity-by-all-post', icon: 'cog', color: 'text-success', text: '所有岗位可操作'},\r\n            {name: 'user-all-entities', icon: 'cog', color: 'text-success', text: '全功能用户'}\r\n        ];\r\n\r\n        // {icon} &nbsp; {name} <Muted> &nbsp; {sheet.states.join(', ')}</Muted>\r\n        return <div key={name} className=\"my-2\">\r\n            <div className=\"px-3 font-weight-bold\">{name}</div>\r\n            <List className=\"mt-3\"\r\n                items={settings}\r\n                item={{\r\n                    key: (item:any)=>item.name, \r\n                    render: this.renderSetting,\r\n                    onClick:(item:any)=>this.settingClick(item, uq) \r\n                }}\r\n             />\r\n            {blocks.map(block => {\r\n                let {items, type, itemClick, itemRender} = block;\r\n                let icon = entityIcons[type];\r\n                return items && items.length>0 &&\r\n                    <List key={type} className=\"mt-3\"\r\n                        header={<Muted className=\"px-3 pt-1 bg-light w-100\">{this.res[type]||type}</Muted>} \r\n                        items={items} \r\n                        item={{\r\n                            key: (item:any)=>item.name, \r\n                            render:(item:any, index:number)=>(itemRender || nameRender)(item, icon), \r\n                            onClick: (item:Entity)=>itemClick(block, item)\r\n                        }} />;\r\n            })}\r\n        </div>;\r\n        /*\r\n        function headerCaption(caption:string):JSX.Element {\r\n            return <Muted className=\"px-3 pt-1 bg-light w-100\">{caption}</Muted>\r\n        }\r\n        function itemList(items:any[], type:string, itemClick:(item:any)=>void, render:((item:any, icon:any)=>JSX.Element) = nameRender) {\r\n            //let res = entitiesRes;\r\n            //let {caption, icon} = res[type];\r\n            let icon = entityIcons[type];\r\n            return items && \r\n                <List className=\"mt-3\"\r\n                    header={headerCaption(type)} \r\n                    items={items} \r\n                    item={{render:(item:any, index:number)=>render(item, icon), onClick: itemClick}} />;\r\n        }\r\n            {itemList(tuids, 'tuid', this.tuidClick)}\r\n            {itemList(sheets, 'sheet', this.sheetClickOld, this.sheetRender)}\r\n            {itemList(actions, 'action', this.actionClick)}\r\n            {itemList(maps, 'map', this.mapClick)}\r\n            {itemList(books, 'book', this.bookClick)}\r\n            {itemList(queries, 'query', this.queryClick)}\r\n            {itemList(histories, 'history', this.historyClick)}\r\n            {itemList(pendings, 'pending', this.pendingClick)}\r\n        */\r\n    }\r\n\r\n    private appView = (app:App) => <Page header={app.name + '操作权限'}>\r\n        {\r\n            app.uqs.map((v, index) => this.uqRender(v, index))\r\n        }\r\n    </Page>;\r\n\r\n    /*\r\n    private tuidClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    private mapClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    private actionClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    private bookClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    private queryClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    private historyClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    private pendingClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    */\r\n}\r\n","import * as React from 'react';\r\nimport { Page, VPage } from 'tonva-tools';\r\nimport { List, FA } from 'tonva-react-form';\r\nimport { CUq, Link, CLink, CApp } from \"tonva-react-uq\";\r\nimport ui from './ui';\r\nimport { COpBinding } from './op';\r\n\r\nexport class COrganization extends CUq {\r\n    constructor() {\r\n        super(undefined, '$$$/$unitx', 0, 0, undefined, ui);\r\n    }\r\n\r\n    label = '岗位权限';\r\n    icon = 'sitemap';\r\n    links: (CLink|string)[];\r\n\r\n    protected clearPrevPages() {\r\n        // 保留回退按钮，所以，去掉下面这行\r\n        //nav.clear();\r\n    }\r\n\r\n    protected async loadEntites() {\r\n        // 只有赋Entity权限的地方，需要取全部的Entities，其它地方默认取user access，this.entities.loadAccess()\r\n        await this.entities.loadEntities();\r\n    }\r\n\r\n    protected async internalStart() {\r\n        await this.loadSchema();\r\n        this.links= [\r\n            '',\r\n            new CLink(new COpBinding(this, this.res)),\r\n            '',\r\n            this.linkFromName('map', 'teamPerson'),\r\n            this.linkFromName('map', 'sectionTeam'),\r\n            this.linkFromName('map', 'teamOrganization'),\r\n            '',\r\n            this.linkFromName('tuid', 'person'),\r\n            this.linkFromName('tuid', 'team'),\r\n            this.linkFromName('tuid', 'section'),\r\n            this.linkFromName('tuid', 'organization'),\r\n        ];\r\n        this.openVPage(VOrganization);\r\n    }\r\n    \r\n}\r\n\r\nclass VOrganization extends VPage<COrganization> {\r\n    async open() {\r\n        this.openPage(this.appPage);\r\n    }\r\n\r\n    private renderRow = (link: Link, index:number) => {\r\n        return link.render('bg-white');\r\n    }\r\n\r\n    protected appPage = () => {\r\n        let {links, label} = this.controller;\r\n        return <Page header={label} logout={async ()=>{}}>\r\n            <List items={links} item={{render: this.renderRow}} />\r\n        </Page>;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { AppController } from '.';\r\nimport { VPage, nav, Page, ItemSchema, UiSchema, StringSchema, BoolSchema, UiTextItem, UiTextAreaItem, UiCheckItem, Form, ButtonSchema, Context, ImageSchema, UiImageItem, IdSchema, UiIdItem } from 'tonva-tools';\r\nimport { SubmitResult, DropdownActions, TonvaForm, FormRow } from 'tonva-react-form';\r\nimport { createIdPick, IdPickProps } from 'createIdPick';\r\nimport { DevModel } from 'model';\r\nimport { store } from 'store';\r\nimport { IdPickPage, ServerSpan } from '../../tools';\r\nimport { observer } from 'mobx-react';\r\n\r\nconst ServerCaption = (item:DevModel.Server) => {\r\n    let {discription, cloud, ip} = item;\r\n    return <>{discription} {cloud} {ip}</>;\r\n}\r\nconst idPickServerProps: IdPickProps = {\r\n    caption: '选择服务器',\r\n    searchPlaceHolder: '搜索服务器',\r\n    candidateItems: async (params:any, key:string) => {\r\n        await store.dev.searchServer.first(key);\r\n        return store.dev.searchServer.items;\r\n    },\r\n    moreCandidates: async () => {\r\n        await store.dev.searchServer.more();\r\n    },\r\n    row: (item:DevModel.Server, index:number) => {\r\n        return <div className=\"px-3 py-2\"><ServerCaption {...item} /></div>;\r\n    },\r\n};\r\n/*\r\nconst formRows:FormRow[] = [\r\n    {\r\n        label: '名称', \r\n        field: {name: 'name', type: 'string', maxLength: 100, required: true},\r\n    },\r\n    {\r\n        label: '描述',\r\n        field: {name: 'discription', type: 'string', maxLength: 250},\r\n        face: {type: 'textarea'}\r\n    },\r\n    {\r\n        label: '图标',\r\n        field: {name: 'icon', type: 'string', maxLength: 250},\r\n    },\r\n    {\r\n        label: 'URL',\r\n        field: {name: 'url', type: 'string', maxLength: 200},\r\n    },\r\n    {\r\n        label: '服务器',\r\n        field: {name: 'server', type: 'id'},\r\n        face: {\r\n            type: 'pick-id', \r\n            initCaption: '请选择服务器', \r\n            pick: createIdPick(idPickServerProps),\r\n            fromPicked: (item:DevModel.Server)=>{\r\n                return {\r\n                    id: item.id, \r\n                    caption: <ServerCaption {...item} />,\r\n                };\r\n            },\r\n            itemFromId: (id:number)=>store.cacheServers.get(id),\r\n        },\r\n    },\r\n    {\r\n        label: '公开',\r\n        field: {name: 'public', type: 'bool', defaultValue: 1}\r\n    },\r\n];\r\n*/\r\nconst schema:ItemSchema[] = [\r\n    {name: 'name', type: 'string', maxLength: 100, required: true} as StringSchema,\r\n    {name: 'discription', type: 'string', maxLength: 250} as StringSchema,\r\n    {name: 'url', type: 'string', maxLength: 200} as StringSchema,\r\n    {name: 'public', type: 'boolean'} as BoolSchema,\r\n    {name: 'server', type: 'id'} as IdSchema,\r\n    {name: 'icon', type: 'image'} as ImageSchema,\r\n    {name: 'submit', type: 'submit'} as ButtonSchema,\r\n];\r\n\r\nexport abstract class EditBasePage extends VPage<AppController> {\r\n    private candidateItems = async (params:any, key:string):Promise<any[]> => {\r\n        await store.dev.searchServer.first(key);\r\n        return store.dev.searchServer.items;\r\n    }\r\n\r\n    private moreCandidates = async ():Promise<void> => {\r\n        await store.dev.searchServer.more();\r\n    }\r\n\r\n    private renderRow = (item:DevModel.Server, index:number): JSX.Element => {\r\n        return <div className=\"px-3 py-2\"><ServerCaption {...item} /></div>;\r\n    }\r\n\r\n    private pickServerId = (context:Context, name:string, value:number): Promise<number> => {\r\n        return new Promise<number>((resolve, reject) => {\r\n            nav.push(<IdPickPage \r\n                caption=\"选择服务器\" \r\n                searchPlaceHolder=\"搜索服务器\"\r\n                candidateItems={this.candidateItems}\r\n                moreCandidates={this.moreCandidates}\r\n                row={this.renderRow}\r\n                idFromItem={(item:DevModel.Server) => item.id}\r\n                resolve={resolve} params={undefined} />, \r\n                ()=> {\r\n                    reject();\r\n                });\r\n        });\r\n    }\r\n\r\n    private renderServerInput = (itemId:number): JSX.Element => {\r\n        return <ServerSpan id={itemId} />;\r\n    };\r\n\r\n    private uiSchema:UiSchema = {\r\n        items: {\r\n            name: {widget: 'text', label: '名称'} as UiTextItem,\r\n            discription: {widget: 'textarea', label: '描述', rows: 5} as UiTextAreaItem,\r\n            url: {widget: 'text', label: 'URL', placeholder: 'http(s)://APP地址'} as UiTextItem,\r\n            'public': {widget: 'checkbox', label: '公开', } as UiCheckItem,\r\n            server: {widget: 'id', label: '服务器', pickId: this.pickServerId, Templet: this.renderServerInput} as UiIdItem,\r\n            icon: {widget: 'image', label: '标志图'} as UiImageItem,\r\n            submit: {widget: 'button', label: '提交', className: 'btn btn-primary'}\r\n        }\r\n    }\r\n    \r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n    /*\r\n    protected onSubmit = async (values:any):Promise<SubmitResult> => {\r\n        await this.controller.saveApp(values);\r\n        nav.pop();\r\n        return;\r\n    }*/\r\n    private onButtonClick = async (name:string, context: Context) => {\r\n        let {data} = context;\r\n        let app:DevModel.App = _.clone(this.controller.app) || {} as any;\r\n        _.merge(app, data);\r\n        await this.controller.saveApp(app);\r\n        nav.pop();\r\n    }\r\n    protected page: ()=>JSX.Element;\r\n    protected form = observer(() => {\r\n        /*\r\n        return <TonvaForm\r\n            className=\"m-3\"\r\n            formRows={formRows} \r\n            onSubmit={this.onSubmit} initValues={initValues} />\r\n        */\r\n        return <Form fieldLabelSize={2}\r\n            className=\"m-3\" \r\n            schema={schema} \r\n            uiSchema={this.uiSchema}\r\n            formData={this.initValues}\r\n            onButtonClick={this.onButtonClick} />\r\n    });\r\n    abstract get initValues():any;\r\n}\r\n\r\nexport class EditPage extends EditBasePage {\r\n    get initValues():any {return this.controller.app}\r\n    protected page = () => {\r\n        let {app} = this.controller;\r\n        let {name} = app;\r\n        return <Page header={'修改APP - ' + name} back=\"close\">\r\n            <this.form />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nexport class NewPage extends EditBasePage {\r\n    get initValues():any {return {}}\r\n    protected page = () => {\r\n        return <Page header={'新建APP'} back=\"close\">\r\n            <this.form />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, Image } from \"tonva-tools\";\r\nimport { AppController } from '.';\r\nimport { List, LMR, Badge, Muted, FA } from 'tonva-react-form';\r\nimport { DevModel } from 'model';\r\nimport { NewPage } from './editPage';\r\n\r\nexport class AppsPage extends VPage<AppController> {\r\n    async open(param:any) {\r\n        this.openPage(this.page);\r\n    }\r\n    private newItem = () => {\r\n        this.openVPage(NewPage);\r\n    }\r\n    private page = ():JSX.Element => {\r\n        let {appList, listRowClick} = this.controller;\r\n        let right = <button className='btn btn-secondary btn-sm' onClick={()=>this.newItem()}><FA name=\"plus\" /></button>;\r\n        return <Page header=\"App\" right={right}>\r\n            <List items={appList} item={{render: this.appRow, onClick: listRowClick}} />\r\n        </Page>\r\n    }\r\n    private appRow = (item:DevModel.App):JSX.Element => {\r\n        let {name, discription, icon, url, urlDebug} = item;\r\n        let left = <Badge size=\"sm\"><Image src={icon} /></Badge>;\r\n        let right = <div className=\"text-muted small text-right\">\r\n            {url || '-'}<br/>\r\n            {urlDebug}\r\n        </div>;\r\n        return <LMR className=\"py-2 px-3 align-items-stretch\"\r\n            left={left} right={right}>\r\n            <div className=\"px-3\">\r\n                <div><b>{name}</b></div>\r\n                <div><Muted>{discription}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { List, LMR, SearchBox } from 'tonva-react-form';\r\nimport { DevModel } from 'model';\r\nimport { UnitSpan } from 'tools';\r\nimport { store } from 'store';\r\nimport { nav, Page, VPage } from 'tonva-tools';\r\nimport { AppController } from '.';\r\n\r\nexport class SearchUqPage extends VPage<AppController> {\r\n    @observable private uqs: DevModel.UQ[];\r\n\r\n    async open() {\r\n        this.uqs = await this.controller.getMyUqs();\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private onSearch = async (key:string) => {\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.uqs = await this.controller.searchUq(key, pageStart, pageSize);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let header = <SearchBox className=\"w-100 mx-1\" \r\n            onSearch={this.onSearch}\r\n            placeholder=\"搜索UQ名字\" \r\n            maxLength={100} />;\r\n        return <Page back=\"close\" header={header}>\r\n            <List items={this.uqs} item={{render: this.row, onClick: this.controller.onUq}} />\r\n        </Page>;\r\n    });\r\n\r\n    private row = (uq: DevModel.UQ) => {\r\n        let {owner, name, discription} = uq;\r\n        return <LMR className=\"py-2 px-3\" right={discription}>\r\n            <div>{owner} / {name}</div>\r\n        </LMR>;\r\n    };\r\n}\r\n\r\n@observer\r\nexport class AppUqs extends React.Component {\r\n    @observable anySelected: boolean = false;\r\n    private list:List;\r\n    private onSelect = (item: DevModel.UQ, isSelected:boolean, anySelected:boolean) => {\r\n        this.anySelected = anySelected;\r\n    }\r\n    private row = (item: DevModel.UQ) => {\r\n        let {name, unit, discription} = item;\r\n        return <LMR className=\"p-2\" right={<small className=\"text-muted\">{discription}</small>}>\r\n            <UnitSpan id={unit} />/{name}\r\n        </LMR>;\r\n    }\r\n    private removeBind = () => {\r\n        if (this.list === null) return;\r\n        let {selectedItems} = this.list;\r\n        if (selectedItems === undefined) return;\r\n        if (selectedItems.length === 0) return;\r\n        store.dev.apps.appBindUq(\r\n            selectedItems.map(v => {\r\n                return {id:v.id, access:['*']}\r\n            }), \r\n            false);\r\n    }\r\n    render() {\r\n        let btnProps = this.anySelected?\r\n            {color:'danger', onClick:this.removeBind, icon:'trash', text:'取消'}:\r\n            {color:'primary', onClick:()=>nav.push(<Uqs/>), icon:'plus', text:'新增'};\r\n        let btn = (p)=><button \r\n            className={classNames('btn', 'btn-outline-'+p.color, 'btn-sm')} \r\n            onClick={p.onClick}>\r\n            <i className={\"fa fa-\" + p.icon} /> {p.text}关联\r\n        </button>;\r\n        let listHeader = <div className=\"va-row py-1 justify-content-center\">{btn(btnProps)}</div>;\r\n        return <Page header=\"关联UQ\">\r\n            <List ref={list=>this.list=list} header={listHeader}\r\n                items={store.dev.apps.uqs}\r\n                item={{render: this.row, onSelect: this.onSelect}} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\n@observer\r\nclass Uqs extends React.Component {\r\n    onSearch = async (key:string) => {\r\n        await store.dev.apps.searchUq(key);\r\n    }\r\n    onBind(uq: DevModel.UQ, bind: boolean) {\r\n        store.dev.apps.appBindUq([{id:uq.id, access:['*']}], bind);\r\n    }\r\n    row = (uq: DevModel.UQ) => {\r\n        let isConnected = store.dev.apps.uqs.find(a => a.id === uq.id) !== undefined;\r\n        let cn = ['btn', 'btn-sm'];\r\n        let btnContent:any, onClick:any;\r\n        if (isConnected) {\r\n            cn.push('btn-success');\r\n            onClick = ()=>this.onBind(uq, false);\r\n            btnContent = \"已关联\";\r\n        }\r\n        else {\r\n            cn.push('btn-primary');\r\n            onClick = ()=>this.onBind(uq, true);\r\n            btnContent = <span><i className=\"fa fa-check\"/> 关联</span>;\r\n        }\r\n        return <div className=\"d-flex justify-content-start py-1 px-3\">\r\n            <div className=\"align-self-center\">{uq.name + ' - ' + uq.discription}</div>\r\n            <footer className=\"ml-auto\"><button className={classNames(cn)} onClick={onClick}>{btnContent}</button></footer>\r\n        </div>\r\n    }\r\n    render() {\r\n        let header = <SearchBox className=\"w-100 mx-1\" \r\n            onSearch={this.onSearch} \r\n            placeholder=\"搜索UQ名字\" \r\n            maxLength={100} />;\r\n        return <Page back=\"close\" header={header}>\r\n            <List items={store.dev.apps.searchedUqs} item={{render: this.row}} loading={null} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, nav } from 'tonva-tools';\r\nimport { AppController, UqAccess } from '.';\r\nimport { IdDates, UnitSpan, ServerSpan, UnitName } from 'tools';\r\nimport { Prop, Media, PropGrid, ListProp, DropdownActions, List, LMR } from 'tonva-react-form';\r\nimport { EditPage } from './editPage';\r\nimport { AppUqs, SearchUqPage } from './appUqs';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class AppPage extends VPage<AppController> {\r\n    async open() {\r\n        //this.uqs.list = this.controller.uqs;\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private editItem = async () => {\r\n        await this.openVPage(EditPage);\r\n        //nav.push(<EditAppPage {...this.props} />);\r\n    }\r\n\r\n    private deleteItem = async () => {\r\n        if (confirm('真的要删除吗？系统删除时并不会检查相关引用，请谨慎') === true) {\r\n            await this.controller.deleteApp();\r\n            nav.pop();\r\n        }\r\n    }\r\n\r\n    private page = observer(():JSX.Element => {\r\n        let {app} = this.controller;\r\n        let {unit, name, discription, icon, server, date_init, date_update} = app;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let menuItems = [\r\n            // {icon: 'cogs', caption:'设置关联UQ', action: ()=>nav.push(<AppUqs />)},\r\n            {caption:'修改App', action:this.editItem, icon:'edit' },\r\n            {caption:'删除', action:this.deleteItem, icon:'trash-o' }\r\n        ];\r\n\r\n        let right = <DropdownActions actions={menuItems} />;\r\n\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <Media icon={icon} main={name} discription={disp} />\r\n            },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                label: '开发号', \r\n                component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> \r\n            },\r\n            /*\r\n            {\r\n                type: 'component', \r\n                label: 'Service',\r\n                vAlign: 'stretch',\r\n                component: <ServiceRow />,\r\n            },*/\r\n            {\r\n                label: 'URL',\r\n                name: 'url',\r\n                type: 'string',                \r\n            },\r\n            {\r\n                type: 'component',\r\n                label: '服务器',\r\n                component: <ServerSpan id={server} />\r\n            },\r\n            '',\r\n            //this.uqs,\r\n        ];\r\n        let btnAddUq = <button className=\"btn btn-outline-primary btn-sm\" onClick={()=>this.openVPage(SearchUqPage)}>\r\n            增加关联\r\n        </button>;\r\n        return <Page header={'App - ' + name} right={right}>\r\n            <PropGrid rows={rows} values={app} />\r\n            <LMR className=\"mx-3 mt-3 mb-1\" right={btnAddUq}>\r\n                关联UQ\r\n            </LMR>\r\n            <List items={this.controller.uqAccesses} item={{render:this.renderUqRow, onClick:this.uqClick}} />\r\n        </Page>\r\n    })\r\n\r\n    private uqClick = (uqAccess:UqAccess) => {\r\n        this.controller.onUq(uqAccess.uq);\r\n    }\r\n\r\n    private renderUqRow = (uqAccess:UqAccess, index:number):JSX.Element => {\r\n        let {uq, bind_access: access} = uqAccess;\r\n        let {name, discription, unit} = uq;\r\n        let disp: any;\r\n        let elAccess: any;\r\n        if (access && access.length > 0) {\r\n            elAccess = <> + {access.join(', ')} </>;\r\n        }\r\n        if (discription) disp = <div className=\"small text-muted\"> &nbsp; {discription}</div>;\r\n        return <LMR className=\"px-3 py-2 align-items-center\" right={disp}>\r\n            <UnitName id={unit} /> / {name} {elAccess}\r\n        </LMR>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, nav } from \"tonva-tools\";\r\nimport { AppController, UqAccess } from \".\";\r\nimport { LMR } from 'tonva-react-form';\r\n\r\nexport class UqBindPage extends VPage<AppController> {\r\n    private uqAccess: UqAccess;\r\n    private accesses: string[];\r\n    private accessChecked:{[name:string]:boolean};\r\n    async open(uqAccess: UqAccess) {\r\n        this.uqAccess = uqAccess;\r\n        let {uq, bind_access} = this.uqAccess;\r\n        let {access} = uq;\r\n        if (access) {\r\n            this.accessChecked = {};\r\n            this.accesses = access.split(',');\r\n            for (let acc of this.accesses) {\r\n                this.accessChecked[acc] = (bind_access && bind_access.find(bc => bc === acc)) !== undefined;\r\n            }\r\n        }\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private onCheckChanged = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        let {target} = evt;\r\n        this.accessChecked[target.name] = target.checked;\r\n    }\r\n\r\n    private saveUqBind = async () => {\r\n        let acc:string[] = [];\r\n        if (this.accesses) {\r\n            for (let i in this.accessChecked) {\r\n                if (this.accessChecked[i] === true) acc.push(i);\r\n            }\r\n        }\r\n        await this.controller.saveUqBind(this.uqAccess.uq, acc);\r\n        nav.pop();\r\n    }\r\n\r\n    private removeUqBind = async () => {\r\n        await this.controller.removeUqBind(this.uqAccess.uq);\r\n        nav.pop();\r\n    }\r\n\r\n    private page = ():JSX.Element => {\r\n        let {uq, bind_access} = this.uqAccess;\r\n        let {owner, name, discription, access} = uq;\r\n        let btnDelete:any;\r\n        if (bind_access !== null && bind_access !== undefined) {\r\n            btnDelete = <button className=\"btn btn-outline-danger btn-sm\" onClick={this.removeUqBind}>取消关联</button>;\r\n        }\r\n        let checkAccessList:any;\r\n        if (this.accesses) {\r\n            checkAccessList = <div className=\"mt-3\">\r\n            {\r\n                this.accesses.map(v => {\r\n                    let checked = this.accessChecked[v];\r\n                    return <label key={v} className=\"d-inline-block mr-4\">\r\n                        <input onChange={this.onCheckChanged}\r\n                            style={{width:'1.1rem', height:'1.1rem'}} \r\n                            name={v} type=\"checkbox\" defaultChecked={checked} />&nbsp;{v}\r\n                    </label>;\r\n                })\r\n            }\r\n            </div>;\r\n        }\r\n        return <Page header=\"关联UQ\">\r\n            <div className=\"m-3 py-3 px-3 bg-white border\">\r\n                <div>{owner} / {name}</div>\r\n                <div className=\"text-muted\">{discription}</div>\r\n                {checkAccessList}\r\n                <LMR className=\"pt-3\" right={btnDelete}>\r\n                    <button className=\"btn btn-primary btn-sm\" onClick={this.saveUqBind}>保存关联</button>\r\n                </LMR>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { observable } from 'mobx';\r\nimport { Controller } from \"tonva-tools\";\r\nimport { DevModel } from 'model';\r\nimport { devApi } from 'api';\r\nimport { AppsPage } from './appsPage';\r\nimport { AppPage } from './appPage';\r\nimport { UqBindPage } from './uqBindPage';\r\n\r\nexport interface UqAccess {\r\n    uq: DevModel.UQ;\r\n    bind_access: string[];\r\n}\r\n\r\nexport class AppController extends Controller {\r\n    private unitId: number;\r\n    app: DevModel.App;\r\n    @observable appList: DevModel.App[];\r\n    @observable uqAccesses: UqAccess[];\r\n    protected async internalStart(unitId:any) {\r\n        this.unitId = unitId;\r\n        this.appList = await devApi.apps(this.unitId);\r\n        this.openVPage(AppsPage);\r\n    }\r\n\r\n    listRowClick = async (item:DevModel.App) => {\r\n        this.app = item;\r\n        let ret = await devApi.loadAppUqs(item.id);\r\n        this.uqAccesses = ret.map(v => {\r\n            let {owner, access, id, name, discription, unit, date_init, date_update, bind_access} = v;\r\n            return {\r\n                uq: {\r\n                    id: id,\r\n                    name: name,\r\n                    discription: discription,\r\n                    unit: unit,\r\n                    access: access,\r\n                    owner: owner,\r\n                    date_init: date_init,\r\n                    date_update: date_update, \r\n                    service_count: undefined,\r\n                },\r\n                uqOwner: owner,\r\n                bind_access: bind_access && bind_access.split(',')\r\n            }\r\n        });\r\n        this.openVPage(AppPage);\r\n    }\r\n\r\n    saveApp = async (values: DevModel.App) => {\r\n        let app: DevModel.App;\r\n        let now = new Date();\r\n        if (this.app === undefined) {\r\n            app = _.clone(values);\r\n            app.date_init = now;\r\n        }\r\n        else {\r\n            app = _.clone(this.app);\r\n            _.merge(app, values);\r\n        }\r\n        app.unit = this.unitId;\r\n        app.date_update = now;\r\n        let ret = await devApi.saveApp(app);\r\n        app.id = ret;\r\n        let org = this.appList.find(v => v.id === ret);\r\n        if (org !== undefined) {\r\n            _.merge(org, app);\r\n        }\r\n        else {\r\n            this.appList.push(app);\r\n        }\r\n    }\r\n\r\n    deleteApp = async () => {\r\n        await devApi.delApp(this.unitId, this.app.id);\r\n        let index = this.appList.findIndex(v => v.id === this.app.id);\r\n        if (index >= 0) this.appList.splice(index, 1);\r\n    }\r\n\r\n    searchUq = async (key:string, pageStart:number, pageSize:number) => {\r\n        return await devApi.searchUq(this.unitId, key, pageStart, pageSize);\r\n    }\r\n\r\n    getMyUqs = async () => {\r\n        return await devApi.getMyUqs(this.unitId);\r\n    }\r\n\r\n    onUq = (uq: DevModel.UQ) => {\r\n        let uqAccess:UqAccess = this.uqAccesses.find(v => v.uq.id === uq.id);\r\n        if (uqAccess === undefined) {\r\n            uqAccess = {\r\n                uq: uq,\r\n                bind_access: undefined,\r\n            }\r\n        }\r\n        else {\r\n            let access = uqAccess.bind_access;\r\n            if (access === null || access === undefined) uqAccess.bind_access = [];\r\n        }\r\n        this.openVPage(UqBindPage, uqAccess);\r\n    }\r\n\r\n    // accesses = undefined, 表示删除\r\n    private buildBindUqs(uq: DevModel.UQ, accesses?:string[]) {\r\n        let uqs:{id:number, access:string[]}[] = [];\r\n        let isNew = true;\r\n        for (let ua of this.uqAccesses) {\r\n            let {uq:uaUq, bind_access} = ua;\r\n            if (uaUq.id === uq.id) {\r\n                if (accesses === undefined) continue;\r\n                bind_access = accesses;\r\n                isNew = false;\r\n            }\r\n            uqs.push({\r\n                id: uaUq.id,\r\n                access: bind_access || [],\r\n            });\r\n        }\r\n        if (accesses !== undefined && isNew === true) {\r\n            uqs.push({id: uq.id, access: accesses});\r\n        }\r\n        return uqs;\r\n    }\r\n\r\n    saveUqBind = async (uq: DevModel.UQ, accesses:string[]) => {\r\n        let uqs:{id:number, access:string[]}[] = this.buildBindUqs(uq, accesses);\r\n        await devApi.appBindUq(this.unitId, this.app.id, uqs);\r\n        if (uqs.length > this.uqAccesses.length) {\r\n            this.uqAccesses.unshift({\r\n                uq: uq,\r\n                bind_access: accesses,\r\n            });\r\n        }\r\n        else {\r\n            let ua = this.uqAccesses.find(v => v.uq.id === uq.id);\r\n            ua.bind_access = accesses;\r\n        }\r\n    }\r\n\r\n    removeUqBind = async (uq: DevModel.UQ) => {\r\n        let uqs:{id:number, access:string[]}[] = this.buildBindUqs(uq);\r\n        await devApi.appBindUq(this.unitId, this.app.id, uqs);\r\n        let index = this.uqAccesses.findIndex(v => v.uq.id === uq.id);\r\n        if (index>=0) this.uqAccesses.splice(index, 1);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {List, EasyDate, LMR, Muted} from 'tonva-react-form';\r\nimport {DevModel} from '../../model';\r\nimport {store} from '../../store';\r\n\r\ninterface State {\r\n    files: any[];\r\n    compiled?: string;\r\n    text?: string;\r\n}\r\n\r\nexport interface UpUploadProps {\r\n    uq: DevModel.UQ;\r\n    services: DevModel.Service[];\r\n}\r\n\r\nexport class UqUpload extends React.Component<UpUploadProps, State> {\r\n    private fileInput: HTMLInputElement;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            files: undefined,\r\n        }\r\n    }\r\n    private onFilesChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        let upFiles:any[] = [];\r\n        let {files} = evt.target;\r\n        let len = files.length;\r\n        for (let i=0; i<len; i++) {\r\n            upFiles.push(files[i]);\r\n        }\r\n        this.setState({\r\n            files: upFiles,\r\n        });\r\n    }\r\n    fileRender(file, index):JSX.Element {\r\n        let {name, size, lastModifiedDate} = file;\r\n        function sz():string {\r\n            let n:number, u:string;\r\n            if (size < 1024) {\r\n                n = size; u = 'b';\r\n            }\r\n            else if (size < 1024*1024) {\r\n                n = Math.trunc((size / 1024) * 100)/100; u = 'k';\r\n            }\r\n            else {\r\n                n = Math.trunc((size / 1024 / 1024) * 100)/100; u = 'm';\r\n            }\r\n            return n + ' ' + u;\r\n        }\r\n        return <LMR className=\"px-2 py-1\" right={<Muted>{sz()}</Muted>}>\r\n            <div>{name}</div>\r\n            <div><Muted>修改日期: <EasyDate date={lastModifiedDate} /></Muted></div>\r\n        </LMR>;\r\n    }\r\n    private fileClick = (file:any) => {\r\n        let fr = new FileReader();\r\n        fr.onload = function(f) {\r\n            //alert(this.result);\r\n            nav.push(<UqPage name={file.name} content={this.result} />)\r\n        }\r\n        fr.readAsText(file, \"utf8\");\r\n    }\r\n    private onSubmit = (evt:React.FormEvent<any>) => {\r\n        evt.preventDefault();\r\n    }\r\n\r\n    private async update(thoroughly:boolean) {\r\n        var files:FileList = this.fileInput.files;\r\n        var data = new FormData();\r\n        let len = files.length;\r\n        for (let i=0; i<len; i++) {\r\n            let file = files[i];\r\n            data.append('files[]', file, file.name);\r\n        }\r\n  \r\n        let url = store.uqServer + 'uq-compile/' + this.props.uq.id + '/update';\r\n        if (thoroughly === true) url += '-thoroughly';\r\n        try {\r\n            let abortController = new AbortController();\r\n            let res = await fetch(url, {\r\n                method: \"POST\",\r\n                body: data,\r\n                signal: abortController.signal,\r\n            });\r\n            nav.push(<CompileResult {...this.props} res={res} abortController={abortController} />);\r\n        }\r\n        catch (e) {\r\n            console.error('%s %s', url, e);\r\n        }\r\n    }\r\n    private onUpdate = async () => {\r\n        let thoroughly = false;\r\n        await this.update(thoroughly);\r\n    }\r\n    private onUpdateThoroughly = async () => {\r\n        let thoroughly = true;\r\n        await this.update(thoroughly);\r\n    }\r\n    render() {\r\n        let {files} = this.state;\r\n        let fileList:any;\r\n        if (files !== undefined) {\r\n            fileList = <List \r\n                className=\"my-3\" \r\n                items={files} \r\n                item={{render: this.fileRender, onClick: this.fileClick}}/>;\r\n        }\r\n        let button:any;\r\n        if (files !== undefined && files.length > 0) {\r\n            button = <div className=\"my-2 d-flex\">\r\n                <button className=\"btn btn-success\" type=\"submit\" onClick={this.onUpdate}>优化编译</button>\r\n                <div className=\"py-2 flex-grow-1\" />\r\n                <button className=\"btn btn-outline-warning\"\r\n                    type=\"submit\" onClick={this.onUpdateThoroughly}>完全编译</button>\r\n            </div>;\r\n        }\r\n        return <Page header={\"编译 - \" + this.props.uq.name}>\r\n            <div className=\"py-2 px-3\">\r\n                <div>请选择UQ源代码文件</div>\r\n                <form className=\"my-1\" encType=\"multipart/form-data\" onSubmit={this.onSubmit}>\r\n                    <div className=\"my-1\">\r\n                        <input ref={(fileInput) => this.fileInput=fileInput}type=\"file\" id=\"photo\" \r\n                            className=\"w-100 form-control-file\" name=\"files\" multiple={true} \r\n                            onChange={this.onFilesChange} />\r\n                    </div>\r\n                    {fileList}\r\n                    {button}\r\n                </form>\r\n                <pre>{this.state.compiled}</pre>\r\n                <div>{this.state.text}</div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n\r\ninterface UqPgeProps {\r\n    name: string;\r\n    content: string|ArrayBuffer;\r\n}\r\nclass UqPage extends React.Component<UqPgeProps> {\r\n    render() {\r\n        return <Page header={this.props.name}>\r\n            <pre className=\"px-3 py-2\">{this.props.content}</pre>\r\n        </Page>;\r\n    }\r\n}\r\n\r\ninterface CompileResultProps {\r\n    res: Response;\r\n    abortController: AbortController;\r\n}\r\ninterface CompileResultState {\r\n    texts: string[];\r\n    seconds: number;\r\n}\r\nclass CompileResult extends React.Component<CompileResultProps, CompileResultState> {\r\n    private texts: string[];\r\n    private timeHandler:any;\r\n    constructor(props) {\r\n        super(props);\r\n        this.texts = [];\r\n        this.state = {\r\n            texts: this.texts,\r\n            seconds: -1,\r\n        }\r\n    }\r\n    componentWillMount() {\r\n        nav.regConfirmClose(async ():Promise<boolean>=>{\r\n            if (this.state.seconds>=0) return true;\r\n            return new Promise<boolean>((resolve, reject) => {\r\n                try {\r\n                    if (confirm('正在编译中，真的要中止吗？') === true) {\r\n                        try {\r\n                            this.props.abortController.abort();\r\n                        }\r\n                        catch (err) {\r\n                            console.error(err);\r\n                        }\r\n                        resolve(true);\r\n                    }\r\n                    else {\r\n                        resolve(false);\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    reject(err);\r\n                }\r\n            })\r\n        });\r\n    }\r\n    private clearTimeHandler() {\r\n        if (this.timeHandler !== undefined) {\r\n            clearTimeout(this.timeHandler);\r\n            this.timeHandler = undefined;\r\n        }\r\n    }\r\n    private getParent(el:HTMLElement):HTMLElement {\r\n        if (!el) return;\r\n        if (el.tagName === 'MAIN') return el;\r\n        return this.getParent(el.parentElement);\r\n    }\r\n    private scrollToBottom(defer:number = 100) {\r\n        this.clearTimeHandler();\r\n        let that = this;\r\n        this.timeHandler = setTimeout(() => {\r\n            var pane = document.getElementById('bottomDiv');\r\n            pane && pane.scrollIntoView();\r\n            /*\r\n            if (pane !== undefined) {\r\n                let childNodes = pane.childNodes;\r\n                let last = childNodes.item(childNodes.length-1);\r\n                (last as HTMLElement).scrollIntoView();\r\n            }\r\n            */\r\n            that.clearTimeHandler();\r\n        }, defer);\r\n    }\r\n    private topIntoView() {\r\n        var pane = document.getElementById('topDiv');\r\n        pane && pane.scrollIntoView();\r\n        /*\r\n        let childNodes = pane.childNodes;\r\n        let len = childNodes.length;\r\n        if (len === 0) return;\r\n        let first = childNodes.item(0);\r\n        (first as HTMLElement).scrollIntoView();\r\n        */\r\n    }\r\n    private bottomIntoView() {\r\n        var pane = document.getElementById('bottomDiv');\r\n        pane && pane.scrollIntoView();\r\n        /*\r\n        let childNodes = pane.childNodes;\r\n        let len = childNodes.length;\r\n        if (len === 0) return;\r\n        let last = childNodes.item(len-1);\r\n        (last as HTMLElement).scrollIntoView();\r\n        */\r\n    }\r\n    private doubleClick = () => {\r\n        var pane = document.getElementById('scrollDiv');\r\n        let main = this.getParent(pane);\r\n        if (!main) return;\r\n        if (main.scrollTop >= main.scrollHeight / 2) {\r\n            this.topIntoView();\r\n        }\r\n        else {\r\n            this.bottomIntoView();\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        let that = this;\r\n        let time = new Date();\r\n        function consume(reader: ReadableStreamReader) {\r\n            var total = 0\r\n            return new Promise((resolve, reject) => {\r\n                function uintToString(uintArray):string {\r\n                    var encodedString = String.fromCharCode.apply(null, uintArray),\r\n                        decodedString = decodeURIComponent(escape(encodedString));\r\n                    return decodedString;\r\n                }\r\n                function pump() {\r\n                    reader.read().then(({done, value}) => {\r\n                        if (done) {\r\n                            that.scrollToBottom();\r\n                            that.setState({\r\n                                seconds: (new Date().getTime() - time.getTime()),\r\n                            })\r\n                            resolve();\r\n                            return;\r\n                        }\r\n                        let text = uintToString(value);\r\n                        that.texts.push(text);\r\n                        that.setState({\r\n                            texts: that.texts,\r\n                        });\r\n                        total += value.byteLength;\r\n                        that.scrollToBottom();\r\n                        pump();\r\n                    }).catch(reject)\r\n                }\r\n                pump();\r\n            });\r\n        }\r\n        try {\r\n            await consume(this.props.res.body.getReader());\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n    render() {\r\n        let {seconds, texts} = this.state;\r\n        return <Page header={seconds>=0? \"编译完成\" : \"编译中...\"} back=\"close\">\r\n            <div id='topDiv' />\r\n            <div id='scrollDiv'\r\n                onDoubleClick={this.doubleClick} \r\n                className='py-2 px-3' \r\n                style={{wordWrap: 'break-word', whiteSpace: 'normal'}}>\r\n                {texts.map((v, i) => <pre style={{whiteSpace: 'pre-wrap'}} key={i}>{v}</pre>)}\r\n            </div>\r\n            {seconds>=0? <div className='px-3 pb-3' style={{color: 'red', fontWeight: 'bold'}}>\r\n                编译完成。共计用时{Math.floor(seconds/1000)}秒\r\n            </div> : undefined}\r\n            <div id='bottomDiv' />\r\n        </Page>;\r\n    }\r\n}","import * as React from 'react';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {IdPick, IdPickFace, List, SearchBox} from 'tonva-react-form';\r\nimport {DevModel} from './model';\r\n\r\nexport interface IdPickProps {\r\n    caption: string;\r\n    searchPlaceHolder?: string;\r\n    candidateItems: ((params:any, key:string) => Promise<any[]>) | any[];\r\n    moreCandidates: () => Promise<void>;\r\n    row: (item:any, index:number) => JSX.Element;\r\n}\r\n\r\nexport function createIdPick(props: IdPickProps):IdPick {\r\n    return function(face: IdPickFace, params: any):Promise<void> {\r\n        return new Promise<void>((resolve, reject) => {\r\n            nav.push(<IdPickPage resolve={resolve} face={face} params={params} {...props} />);\r\n        });\r\n    }\r\n}\r\n\r\ninterface IdPickPageProps extends IdPickProps {\r\n    face: IdPickFace;\r\n    resolve: (item?: any) => void;\r\n    params: any;\r\n}\r\ninterface IdPickPageState {\r\n    items?: any[];\r\n}\r\n\r\nclass IdPickPage extends React.Component<IdPickPageProps, IdPickPageState> {\r\n    private items:any[];\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: null,\r\n        }\r\n        this.itemClick = this.itemClick.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n    }\r\n    async componentDidMount() {\r\n        let {face, candidateItems, params} = this.props;\r\n        this.setState({\r\n            items: Array.isArray(candidateItems)? candidateItems : await candidateItems(params, ''),\r\n        });\r\n    }\r\n    itemClick(item:any) {\r\n        let {resolve} = this.props;\r\n        resolve(item);\r\n        nav.pop();\r\n    }\r\n    async onSearch(key: string) {\r\n        //alert('search ' + key);\r\n        //await store.dev.searchServer.first(key)\r\n        let {candidateItems, params} = this.props;\r\n        if (typeof candidateItems === 'function') {\r\n            let ret = await candidateItems(params, key);\r\n            this.setState({items: ret});\r\n        }\r\n    }\r\n    render() {\r\n        let {caption, row, searchPlaceHolder} = this.props;\r\n        return <Page header={caption} back=\"close\">\r\n            <div className=\"container\">\r\n                <SearchBox className=\"my-2\" \r\n                    onSearch={this.onSearch} \r\n                    placeholder={searchPlaceHolder}\r\n                    maxLength={100} />\r\n            </div>\r\n            <List items={this.state.items} item={{onClick:this.itemClick, render:row}} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { DevModel } from \"model\";\r\nimport { IdPickProps, createIdPick } from 'createIdPick';\r\nimport { store } from 'store';\r\nimport { Field, FormRow, StringFace, TextAreaFace, TonvaForm, SubmitResult } from 'tonva-react-form';\r\nimport { UQController } from '.';\r\nimport { VPage, nav, Page } from 'tonva-tools';\r\n\r\nconst ServerCaption = (item:DevModel.Server) => {\r\n    let {discription, cloud, ip} = item;\r\n    return <>{discription} {cloud} {ip}</>;\r\n}\r\n\r\nconst idPickServerProps: IdPickProps = {\r\n    caption: '选择服务器',\r\n    searchPlaceHolder: '搜索服务器',\r\n    candidateItems: async (params:any, key:string) => {\r\n        await store.dev.searchServer.first(key);\r\n        return store.dev.searchServer.items;\r\n    },\r\n    moreCandidates: async () => {\r\n        await store.dev.searchServer.more();\r\n    },\r\n    row: (item:DevModel.Server, index:number) => {\r\n        return <div className=\"px-3 py-2\"><ServerCaption {...item} /></div>;\r\n    },\r\n};\r\n\r\nconst urlField:Field = {name: 'url', type: 'string', required:true, maxLength:200};\r\nconst serverField:Field = {name: 'server', type: 'id'};\r\nconst dbTypeField:Field = {name: 'db_type', type: 'string', maxLength:20, defaultValue:'mysql'};\r\nconst dbField:Field = {name: 'db', type: 'string', maxLength:50, required: true};\r\nconst connectionField:Field = {name:'connection', type:'string', maxLength:250};\r\n\r\nconst urlRow = {\r\n    label: 'URL',\r\n    field: urlField,\r\n};\r\n\r\nconst serverRow = {\r\n    label: '服务器', \r\n    field: serverField,\r\n    face: {\r\n        type: 'pick-id', \r\n        initCaption: '请选择服务器', \r\n        pick: createIdPick(idPickServerProps), //this.idPick,\r\n        fromPicked: (item:DevModel.Server)=>{\r\n            return {\r\n                id: item.id, \r\n                caption: <ServerCaption {...item} />,\r\n            };\r\n        },\r\n        itemFromId: (id:number)=>store.cacheServers.get(id),\r\n    },\r\n};\r\n\r\nconst dbTypeRow:FormRow = {\r\n    label: '数据库类型',\r\n    field: dbTypeField,\r\n    face: {\r\n        type: 'string',\r\n        readonly: true,\r\n    } as StringFace\r\n};\r\n\r\nconst dbRow = {\r\n    label: '数据库名字',\r\n    field: dbField,\r\n};\r\n\r\nconst connectionRow = {\r\n    label: '连接字符串',\r\n    field: connectionField,\r\n    face: {\r\n        type: 'textarea',\r\n        maxLength: 250,\r\n        rows: 8,\r\n    } as TextAreaFace,\r\n};\r\n\r\nexport class NewServicePage extends VPage<UQController> {\r\n    private tonvaForm:TonvaForm;\r\n    private formRows:FormRow[] = [\r\n        urlRow,\r\n        serverRow,\r\n        dbTypeRow,\r\n        dbRow,\r\n        connectionRow\r\n    ];\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n    private onSubmit = async (values:any):Promise<SubmitResult | undefined> => {\r\n        if (values.url.indexOf('/uq/')<0) {\r\n            this.tonvaForm.formView.setError('url', 'service url 必须包含/uq/');\r\n            return;\r\n        }\r\n\r\n        values.type = 2; // uq type, to be removed\r\n        values.bindId = this.controller.uq.id;\r\n        let ret = await this.controller.saveService(values);\r\n        if (ret === 0) {\r\n            if (this.tonvaForm !== undefined) {\r\n                this.tonvaForm.formView.setError('url', '已经有Service使用这个url');\r\n            }\r\n            return;\r\n        }\r\n        nav.pop();\r\n        return;\r\n    }\r\n    private page = () => {\r\n        return <Page header=\"新建Service\">\r\n            <TonvaForm ref={t=>this.tonvaForm=t} className=\"m-3\" formRows={this.formRows} onSubmit={this.onSubmit} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { Page, VPage, nav } from \"tonva-tools\";\r\nimport { UQController } from '.';\r\nimport { DevModel } from 'model';\r\nimport { Prop, PropGrid } from 'tonva-react-form';\r\nimport { StringValueEdit, ServerSpan, TextValueEdit } from 'tools';\r\n\r\nexport class ServicePage extends VPage<UQController> {\r\n    @observable private service: DevModel.Service;\r\n    async open(service: DevModel.Service) {\r\n        this.service = service;\r\n        this.openPage(this.page);\r\n    }\r\n    private async changeProp(prop:string, value:any):Promise<any> {\r\n        return await this.controller.changeServiceProp(this.service, prop, value);\r\n    }\r\n    private onUrlChanged = async (value:any, orgValue:any):Promise<string|void> => {\r\n        if ((value as string).indexOf('/uq/')<0) {\r\n            return 'URL必须包含/uq/';\r\n        }\r\n        let ret = await this.changeProp('url', value);\r\n        if (ret === 0) {\r\n            return 'URL已经被使用了';\r\n        }\r\n        this.service.url = value;\r\n    }\r\n    private onDbChanged = async (value:any, orgValue:any):Promise<string|void> => {\r\n        let ret = await this.changeProp('db', value);\r\n        if (ret === 0) {\r\n            return 'Db已经被使用了';\r\n        }\r\n        this.service.db = value;\r\n    }\r\n    private onDbTypeChanged = async (value:string, orgValue:any):Promise<string|void> => {\r\n        if (value === undefined || value === null) return;\r\n        if (value.toLowerCase().trim() !== 'mysql') return '目前只支持mysql';\r\n        let ret = await this.changeProp('db_type', value);\r\n        this.service.db_type = value;\r\n    }\r\n    private onConnectionChanged = async (value:string, orgValue:any):Promise<string|void> => {        \r\n        await this.changeProp('connection', value);\r\n        this.service.connection = value;\r\n    }\r\n    private onDeleteClick = async () => {\r\n        if (confirm(\"真的要删除Service吗？删除了不可恢复，需要重新录入。\")!==true) return;\r\n        await this.controller.delService(this.service);\r\n        nav.pop();\r\n    }\r\n    private page = () => {\r\n        let {uq} = this.controller;\r\n        let {type, name, discription, server, url, db, db_type, connection} = this.service;\r\n        let rows:Prop[] = [\r\n            '',\r\n            /*\r\n            {\r\n                type: 'component',\r\n                component: <div className=\"px-3 py-2\">\r\n                    <b>{name}</b><br/><Muted>{discription}</Muted>\r\n                </div>,\r\n            },\r\n            '',*/\r\n            {\r\n                type: 'string',\r\n                name: 'url',\r\n                label: 'URL',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"修改URL\"\r\n                    value={url}\r\n                    onChanged={this.onUrlChanged} />)\r\n            },\r\n            {\r\n                type: 'component',\r\n                label: '服务器',\r\n                component: <ServerSpan id={server} />\r\n            },\r\n            {\r\n                type: 'string',\r\n                name: 'db_type',\r\n                label: '数据库类型',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"数据库类型\"\r\n                    value={db_type}\r\n                    onChanged={this.onDbTypeChanged} />)\r\n            },\r\n            {\r\n                type: 'string',\r\n                name: 'db',\r\n                label: '数据库名',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"数据库名字\"\r\n                    value={db}\r\n                    onChanged={this.onDbChanged} />)\r\n            },\r\n            {\r\n                type: 'string',\r\n                name: 'connection',\r\n                label: '连接字符串',\r\n                onClick: ()=>nav.push(<TextValueEdit\r\n                    title=\"连接字符串\"\r\n                    value={connection}\r\n                    onChanged={this.onConnectionChanged} />)\r\n            },\r\n        ];\r\n        let right = <button onClick={this.onDeleteClick} className=\"btn btn-success\">删除</button>;\r\n        return <Page header={'UQ - ' + uq.name} right={right}>\r\n            <PropGrid rows={rows} values={this.service} />\r\n        </Page>\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { UQController } from \".\";\r\nimport { VPage, nav, Page } from \"tonva-tools\";\r\nimport { SubmitResult, TonvaForm } from \"tonva-react-form\";\r\n\r\nconst formRows = [\r\n    {\r\n        label: '名称', \r\n        field: {name: 'name', type: 'string', maxLength: 100, required: true},\r\n    },\r\n    {\r\n        label: '描述',\r\n        field: {name: 'discription', type: 'string', maxLength: 250},\r\n        face: {type: 'textarea'}\r\n    },\r\n    //{\r\n    //    label: '入口',\r\n    //    field: {name: 'access', type: 'string', maxLength: 250},\r\n    //    face: {type: 'textarea', placeholder: '逗号分隔的入口名'}\r\n    //},\r\n];\r\n\r\n\r\nexport abstract class EditBasePage extends VPage<UQController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n    protected onSubmit = async (values:any):Promise<SubmitResult> => {\r\n        await this.controller.saveUq(values);\r\n        nav.pop();\r\n        return;\r\n    }\r\n    protected page: ()=>JSX.Element;\r\n    protected form(initValues:any):JSX.Element {\r\n        return <TonvaForm\r\n            className=\"m-3\"\r\n            formRows={formRows} \r\n            onSubmit={this.onSubmit} initValues={initValues} />\r\n    }\r\n}\r\n\r\nexport class EditPage extends EditBasePage {\r\n    protected page = () => {\r\n        let {uq} = this.controller;\r\n        let {name} = uq;\r\n        return <Page header={'修改UQ - ' + name} back=\"close\">\r\n            {this.form(uq)}\r\n        </Page>;\r\n    }\r\n}\r\n\r\nexport class NewPage extends EditBasePage {\r\n    protected page = () => {\r\n        return <Page header={'新建UQ'} back=\"close\">\r\n            {this.form({})}\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, nav } from 'tonva-tools';\r\nimport { UQController } from '.';\r\nimport { IdDates, UnitSpan, ServerSpan } from 'tools';\r\nimport { Prop, Media, LMR, FA, PropGrid, Muted, List, EasyDate, DropdownActions } from 'tonva-react-form';\r\nimport { DevModel } from 'model';\r\nimport { EditPage } from './editPage';\r\n\r\nexport class UQPage extends VPage<UQController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private editItem = async () => {\r\n        await this.openVPage(EditPage);\r\n        //nav.push(<EditAppPage {...this.props} />);\r\n    }\r\n\r\n    private deleteItem = async () => {\r\n        if (confirm('真的要删除UQ吗？') === true) {\r\n            await this.controller.deleteUq();\r\n            nav.pop();\r\n        }\r\n    }\r\n\r\n    private page = ():JSX.Element => {\r\n        let {onUqUpload, serviceClick, uq, services} = this.controller;\r\n        let {id, name, discription, access, unit, date_init, date_update} = uq;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let menuItems = [\r\n            {caption:'修改UQ', action:this.editItem, icon:'edit' },\r\n            {caption:'删除', action:this.deleteItem, icon:'trash-o' }\r\n        ];\r\n        let right = <DropdownActions actions={menuItems} />;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <LMR className=\"py-2\"\r\n                    left={<FA name=\"database\" className=\"text-primary fa-2x mr-3\" />}>\r\n                    <div><b>{name}</b></div>\r\n                    {disp}\r\n                </LMR>\r\n            },\r\n            {\r\n                type: 'component', \r\n                label: '开发号', \r\n                component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> \r\n            },\r\n           '',\r\n           {\r\n                type: 'component', \r\n                label: '编译代码', \r\n                component: <LMR onClick={()=>onUqUpload()} className=\"w-100 py-2 cursor-pointer\" \r\n                    left=\"上传编译uq代码\" right={<FA className=\"align-self-center\" name=\"chevron-right\" />} />\r\n            },\r\n            /*\r\n            {type: 'component', label: 'ACCESS', component: <div className=\"py-2\">{\r\n                access? \r\n                    access.split(',').join(', ')\r\n                    : <Muted>(全)</Muted>\r\n            }</div> },\r\n            */\r\n        ];\r\n        return <Page header={'UQ - ' + name} right={right}>\r\n            <PropGrid rows={rows} values={uq} />\r\n            <div className=\"d-flex mx-3 mt-3 mb-1 align-items-end\">\r\n                <Muted style={{display:'block', flex:1}}>Service</Muted>\r\n                <button\r\n                    className=\"btn btn-outline-primary btn-sm\"\r\n                    onClick={()=>this.controller.showNewServicePage()}>\r\n                    增加\r\n                </button>\r\n            </div>\r\n            <List items={services} item={{render:this.renderService, onClick:serviceClick}} />\r\n        </Page>;\r\n    }\r\n    private renderService(service:DevModel.Service, index:number):JSX.Element {\r\n        let {url, server, db, db_type, compile_time} = service;\r\n        let compile = !compile_time?\r\n            <Muted>未编译</Muted> :\r\n            <><Muted>编译: </Muted><EasyDate date={compile_time}/></>;\r\n\r\n        return <LMR className=\"d-flex w-100 align-items-center cursor-pointer py-2 px-3\"\r\n            right={<small>{compile}</small>}\r\n            >\r\n            <div>\r\n                <div>{url}</div>\r\n                <div>{db_type} {db}</div>\r\n                <Muted><ServerSpan id={server} /></Muted>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { UQController } from '.';\r\nimport { List, LMR, Badge, Muted, FA } from 'tonva-react-form';\r\nimport { DevModel } from 'model';\r\nimport { NewPage } from './editPage';\r\n\r\nexport class ListPage extends VPage<UQController> {\r\n    async open(param:any) {\r\n        this.openPage(this.page);\r\n    }\r\n    private newItem = () => {\r\n        this.controller.uq = undefined;\r\n        this.openVPage(NewPage);\r\n    }\r\n    private page = ():JSX.Element => {\r\n        let {uqList: list, listRowClick} = this.controller;\r\n        let right = <button className='btn btn-secondary btn-sm' onClick={()=>this.newItem()}><FA name=\"plus\" /></button>;\r\n        return <Page header=\"UQ\" right={right}>\r\n            <List items={list} item={{render: this.listRow, onClick: listRowClick}} />\r\n        </Page>\r\n    }\r\n    private listRow = (item:DevModel.UQ):JSX.Element => {\r\n        let {name, discription, service_count} = item;\r\n        return <LMR className=\"py-1 px-3 align-items-center\"\r\n            left={<FA name=\"database\" className=\"text-primary fa-lg\" />}\r\n            right={<>{service_count}</>}>\r\n            <div className=\"py-2 px-3\">\r\n                <div><b>{name}</b></div>\r\n                <div><Muted>{discription}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { observable } from 'mobx';\r\nimport { nav, Controller } from 'tonva-tools';\r\nimport { DevModel } from '../../model';\r\nimport { UqUpload, UpUploadProps } from './uqUpload';\r\nimport { devApi } from 'api';\r\nimport { NewServicePage } from './newServicePage';\r\nimport { ServicePage } from './servicePage';\r\nimport { UQPage } from './uqPage';\r\nimport { ListPage } from './listPage';\r\n\r\nexport class UQController extends Controller {\r\n    private unitId: number;\r\n    uq: DevModel.UQ;\r\n    access: string;\r\n    entities: string;\r\n    @observable uqList: DevModel.UQ[];\r\n    @observable services: DevModel.Service[];\r\n    protected async internalStart(unitId:any) {\r\n        this.unitId = unitId;\r\n        this.uqList = await devApi.uqs(this.unitId);\r\n        this.openVPage(ListPage);\r\n    }\r\n\r\n    listRowClick = async (item:DevModel.UQ) => {\r\n        this.uq = item;\r\n        await this.loadUqEntities(item.id);\r\n        this.openVPage(UQPage);\r\n    }\r\n\r\n    private async loadUqEntities(uqId: number) {\r\n        let ret = await devApi.uqGetEntities(this.unitId, uqId);\r\n        let r0 = ret[0][0];\r\n        this.access = r0.access;\r\n        this.entities = r0.entities;\r\n        this.services = ret[1];\r\n    }\r\n\r\n    serviceClick = (service: DevModel.Service) => {\r\n        this.openVPage(ServicePage, service);\r\n    }\r\n\r\n    onUqUpload = async() => {\r\n        let onDispose = () => {\r\n        };\r\n        nav.push(<UqUpload uq={this.uq} services={this.services} />, onDispose);\r\n    }\r\n\r\n    saveUq = async (values: DevModel.UQ) => {\r\n        let uq: DevModel.UQ;\r\n        if (this.uq === undefined) {\r\n            uq = _.clone(values);\r\n        }\r\n        else {\r\n            uq = _.clone(this.uq);\r\n            _.merge(uq, values);\r\n        }\r\n        uq.unit = this.unitId;\r\n        let ret = await devApi.saveUq(uq);\r\n        uq.id = ret;\r\n        this.uqList.push(uq);\r\n    }\r\n\r\n    deleteUq = async () => {\r\n        await devApi.delUq(this.unitId, this.uq.id);\r\n        let index = this.uqList.findIndex(v => v.id === this.uq.id);\r\n        if (index >= 0) this.uqList.splice(index);\r\n    }\r\n\r\n    async changeServiceProp(service: DevModel.Service, prop:string, value:any):Promise<any> {\r\n        return await devApi.changeServiceProp(this.unitId, service.id, prop, value);\r\n    }\r\n\r\n    async saveService(service: DevModel.Service):Promise<number> {\r\n        let svc = _.clone(service);\r\n        svc.unit = this.unitId;\r\n        let ret = await devApi.saveService(svc);\r\n        svc.id = ret;\r\n        this.services.push(svc);\r\n        return ret;\r\n    }\r\n\r\n    async delService(service: DevModel.Service) {\r\n        await devApi.delService(this.unitId, service.id);\r\n        let index = this.services.findIndex(v => v.id == service.id);\r\n        if (index >= 0) this.services.splice(index);\r\n    }\r\n\r\n    showNewServicePage = async () => {\r\n        await this.openVPage(NewServicePage);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {LMR, Badge, Muted} from 'tonva-react-form';\r\n\r\nexport interface RowProps {\r\n    icon: string;\r\n    main: string|JSX.Element;\r\n    vice: string|JSX.Element;\r\n}\r\n\r\nexport class Row extends React.Component<RowProps> {\r\n    render() {\r\n        let {icon, main, vice} = this.props;\r\n        return <LMR className=\"py-1 px-3 align-items-stretch\"\r\n            left={<Badge size=\"sm\" className=\"pt-1\"><img src={icon} /></Badge>}>\r\n            <div className=\"px-3\">\r\n                <div><b>{main}</b></div>\r\n                <div><Muted>{vice}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport _ from 'lodash';\r\nimport {FormRow, EasyDate, Media, \r\n    Prop, ListProp, PropGrid, List, SearchBox, LMR, Badge, Muted} from 'tonva-react-form';\r\nimport {UnitSpan, IdDates, ServerSpan} from '../tools';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {DevModel} from '../model';\r\nimport {store} from '../store';\r\nimport {Row} from './row';\r\nimport {ObjViewProps} from './ObjViewProps';\r\n\r\n@observer\r\nclass Info extends React.Component<DevModel.Bus> {\r\n    /*\r\n    private rows: Prop[];\r\n    constructor(props:any) {\r\n        super(props);\r\n        let {unit, name, discription, schema, date_init, date_update} = this.props;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={name} discription={disp} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                label: 'Schema',\r\n                vAlign: 'stretch',\r\n                component: <SchemaView />,\r\n            },\r\n        ];\r\n    }*/\r\n    async componentDidMount() {\r\n        //await store.dev.buses.loadCurApis();\r\n    }\r\n    render() {\r\n        let {unit, name, discription, schema, date_init, date_update} = this.props;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={name} discription={disp} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                label: 'Schema',\r\n                vAlign: 'stretch',\r\n                component: <SchemaView />,\r\n            },\r\n        ];\r\n        return <div>\r\n            <PropGrid rows={rows} values={this.props} />\r\n        </div>\r\n    }\r\n}\r\n\r\n@observer\r\nexport class SchemaView extends React.Component {\r\n    render() {\r\n        let bus = store.dev.buses.cur;\r\n        if (bus === null) return '...';\r\n        let content = bus.schema;\r\n        return <div className=\"d-flex py-2 w-100 align-items-center\" style={{flex:1}}>\r\n            <pre>\r\n                {content}\r\n            </pre>\r\n        </div>;\r\n\r\n    }\r\n}\r\n\r\nconst busesProps:ObjViewProps<DevModel.Bus> = {\r\n    title: 'BUS',\r\n    formRows: [\r\n        {\r\n            label: '名称', \r\n            field: {name: 'name', type: 'string', maxLength: 100, required: true},\r\n        },\r\n        {\r\n            label: '描述',\r\n            field: {name: 'discription', type: 'string', maxLength: 250},\r\n            face: {type: 'textarea'}\r\n        },\r\n        {\r\n            label: 'Schema',\r\n            field: {name: 'schema', type: 'string', maxLength: 2500},\r\n            face: {type: 'textarea', rows: 8}\r\n        },\r\n    ],\r\n    row: (item:DevModel.Bus):JSX.Element => {\r\n        let {owner, name, discription} = item;\r\n        return <Row icon={appItemIcon} main={owner + ' / ' + name} vice={discription} />;\r\n    },\r\n    items: ()=>store.dev.buses,\r\n    repeated: {\r\n        name: 'name',\r\n        err: '跟已有的名称重复',\r\n    },\r\n    info: Info,\r\n};\r\n\r\nexport default busesProps;\r\n","import * as React from 'react';\r\nimport {Prop, PropGrid, LMR, Muted, FA} from 'tonva-react-form';\r\nimport {UnitSpan, IdDates} from '../tools';\r\nimport {DevModel} from '../model';\r\nimport {store} from '../store';\r\nimport {ObjViewProps} from './ObjViewProps';\r\n\r\nclass Info extends React.Component<DevModel.Server> {\r\n    render() {\r\n        let {discription, cloud, ip, unit, date_init, date_update} = this.props;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;        \r\n        //<Media icon={appIcon} main={discription} discription={ip} />},\r\n        let rows:Prop[] = [\r\n            '',\r\n            {type: 'component', component: <LMR className=\"py-2\"\r\n                left={<FA name=\"server\" className=\"text-primary fa-2x mr-3\" />}>\r\n                <div><b>{ip}</b></div>\r\n                {disp}\r\n            </LMR>},\r\n            '',\r\n            {type: 'component', label: '开发号', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            {type: 'string', label: '云服务', name: 'cloud'},\r\n        ];\r\n        return <div>\r\n            <PropGrid rows={rows} values={this.props} />\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst serversProps:ObjViewProps<DevModel.Server> = {\r\n    title: 'Server',\r\n    info: Info,\r\n    formRows: [\r\n        {\r\n            label: '描述', \r\n            field: {name: 'discription', type: 'string', maxLength: 50, required: true},\r\n        },\r\n        {\r\n            label: '云服务商', \r\n            field: {name: 'cloud', type: 'string', maxLength: 20, required: true},\r\n        },\r\n        {\r\n            label: 'IP地址', \r\n            field: {name: 'ip', type: 'string', maxLength: 20},\r\n        },\r\n    ],\r\n    row: (item: DevModel.Server):JSX.Element => {\r\n        let {discription, cloud} = item;\r\n        //return <Row main={item.discription} vice={<>{item.cloud}  {item.ip}</>} />;\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n            left={<FA name=\"server\" className=\"text-primary fa-lg\" />}>\r\n            <div className=\"px-3\">\r\n                <div><b>{discription}</b></div>\r\n                <div><Muted>{cloud}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    },\r\n    items: ()=>store.dev.servers,\r\n    repeated: {\r\n        name: 'discription',\r\n        err: '重复的描述',\r\n    }\r\n};\r\n\r\nexport default serversProps;\r\n","import * as React from 'react';\r\nimport {Step, Field, Prop, PropGrid, Media} from 'tonva-react-form';\r\nimport {UnitSpan, IdDates, ServerSpan, UqSpan, AppSpan} from '../tools';\r\nimport {Row} from './row';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {DevModel} from '../model';\r\nimport {store} from '../store';\r\nimport {ObjViewProps} from './ObjViewProps';\r\nimport {createIdPick, IdPickProps} from '../createIdPick';\r\n\r\nclass Info extends React.Component<DevModel.Service> {\r\n    render() {\r\n        let {url, type, discription, server, app, uq, unit, date_init, date_update} = this.props;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let obj:Prop;\r\n        if (app !== undefined)\r\n            obj = {type: 'component', label: 'APP', component: <div className=\"py-2\"><AppSpan id={app} isLink={true} /></div> };\r\n        else\r\n            obj = {type: 'component', label: 'UQ', component: <div className=\"py-2\"><UqSpan id={uq} isLink={true} /></div> };\r\n\r\n        let rows:Prop[] = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={discription} discription={url} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            {type: 'component', label: '服务器', component: <div className=\"py-2\"><ServerSpan id={server} isLink={true} /></div> },\r\n            obj,\r\n        ];\r\n        return <div>\r\n            <PropGrid rows={rows} values={this.props} />\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst idPickServerProps: IdPickProps = {\r\n    caption: '选择服务器',\r\n    searchPlaceHolder: '搜索服务器',\r\n    candidateItems: async (params:any, key:string) => {\r\n        await store.dev.searchServer.first(key);\r\n        return store.dev.searchServer.items;\r\n    },\r\n    moreCandidates: async () => {\r\n        await store.dev.searchServer.more();\r\n    },\r\n    row: (item:DevModel.Server, index:number) => {\r\n        return <div className=\"px-3 py-2\">{item.discription + ' ' + item.cloud + ' ' + item.ip}</div>;\r\n    },\r\n};\r\n\r\nconst idPickAppProps: IdPickProps = {\r\n    caption: '选择APP',\r\n    searchPlaceHolder: '搜索APP',\r\n    candidateItems: async (params:any, key:string) => {\r\n        await store.dev.searchApp.first(key);\r\n        return store.dev.searchApp.items;\r\n    },\r\n    moreCandidates: async () => {\r\n        await store.dev.searchApp.more();\r\n    },\r\n    row: (item:DevModel.App, index:number) => {\r\n        return <div>{item.name + ' ' + item.discription}</div>;\r\n    },\r\n};\r\n\r\nconst idPickUqProps: IdPickProps = {\r\n    caption: '选择UQ',\r\n    searchPlaceHolder: '搜索UQ',\r\n    candidateItems: async (params:any, key:string) => {\r\n        await store.dev.searchUq.first(key);\r\n        return store.dev.searchUq.items;\r\n    },\r\n    moreCandidates: async () => {\r\n        await store.dev.searchUq.more();\r\n    },\r\n    row: (item:DevModel.UQ, index:number) => {\r\n        return <div>{item.name + ' ' + item.discription}</div>;\r\n    },\r\n};\r\n\r\nconst serviceTypeNames = ['中心', '交换', 'APP', 'UQ'];\r\nconst urlField:Field = {name: 'url', type: 'string', required:true, maxLength:200};\r\nconst discriptionField:Field = {name: 'discription', type: 'string', maxLength:100};\r\nconst serverField:Field = {name: 'server', type: 'id'};\r\nconst bindTypeField:Field = {name: 'type', type: 'number'};\r\nconst bindIdField:Field = {name: 'bindId', type: 'number'};\r\nconst authField:Field = {name: 'auth', type: 'string', maxLength:200};\r\n\r\nconst urlRow = {\r\n    label: 'URL',\r\n    field: urlField,\r\n};\r\nconst discriptionRow = {\r\n    label: '描述',\r\n    field: discriptionField,\r\n};\r\n\r\nconst serverRow = {\r\n    label: '服务器', \r\n    field: serverField,\r\n    face: {\r\n        type: 'pick-id', \r\n        initCaption: '请选择服务器', \r\n        pick: createIdPick(idPickServerProps), //this.idPick,\r\n        fromPicked: (item:DevModel.Server)=>{\r\n            return {\r\n                id: item.id, \r\n                caption: item.discription + ' ' + item.ip,\r\n            };\r\n        },\r\n        itemFromId: (id:number)=>store.cacheServers.get(id),\r\n    },\r\n};\r\n\r\nconst servicesProps:ObjViewProps<DevModel.Service> = {\r\n    title: 'Service',\r\n    info: Info,\r\n    formRows: [\r\n        urlRow,\r\n        discriptionRow,\r\n        serverRow,\r\n    ],\r\n    steps: {\r\n        step1: {\r\n            formRows: [\r\n                {\r\n                    label: '服务类型', \r\n                    field: bindTypeField,\r\n                    face: {\r\n                        type: 'select', \r\n                        list: [\r\n                            {text:'APP', value:2}, \r\n                            {text:'UQ', value:3}\r\n                        ]\r\n                    }\r\n                },\r\n            ],\r\n            next: (values:any) => {\r\n                switch (values['type']) {\r\n                    case 2: return 'appStep';\r\n                    case 3: return 'uqStep';\r\n                }\r\n            },\r\n            ex: '服务类型',\r\n        },\r\n        appStep: {\r\n            formRows: [\r\n                urlRow,\r\n                discriptionRow,\r\n                serverRow,\r\n                {\r\n                    label: 'APP', \r\n                    field: bindIdField,\r\n                    face:{\r\n                        type: 'pick-id', \r\n                        initCaption: '请选择APP', \r\n                        pick: createIdPick(idPickAppProps), //this.idPick,\r\n                        fromPickedItem: (item:DevModel.App)=>{\r\n                            return {id: item.id, caption: item.name + ' ' + item.discription}\r\n                        },\r\n                    },\r\n                },\r\n            ],\r\n            next: undefined,\r\n            ex: '绑定APP'\r\n        },\r\n        uqStep: {\r\n            formRows: [\r\n                urlRow,\r\n                discriptionRow,\r\n                serverRow,\r\n                {\r\n                    label: 'UQ', \r\n                    field: bindIdField,\r\n                    face:{\r\n                        type: 'pick-id', \r\n                        initCaption: '请选择UQ', \r\n                        pick: createIdPick(idPickUqProps), //this.idPick,\r\n                        fromPickedItem: (item:DevModel.UQ)=>{\r\n                            return {id: item.id, caption: item.name + ' ' + item.discription}\r\n                        },\r\n                    },\r\n                },                \r\n                { label: 'Auth', field: authField },\r\n            ],\r\n            next: undefined,\r\n            ex: '绑定UQ',\r\n        },\r\n    },\r\n    stepHeader: (step:Step, num:number):JSX.Element => {\r\n        return <div className=\"d-flex justify-content-center align-items-center\">\r\n            <h4><small className=\"text-muted\">第{num}步</small> {step.ex}</h4>\r\n        </div>;\r\n    },\r\n    row: (item:DevModel.Service):JSX.Element => {\r\n        return <Row\r\n            icon={appItemIcon}\r\n            main={item.url}\r\n            vice={serviceTypeNames[item.type] + ': ' + item.discription} />;\r\n    },\r\n    items: ()=>store.dev.services,\r\n    repeated: {\r\n        name: 'url',\r\n        err: 'url重复',\r\n    }\r\n};\r\n\r\nexport default servicesProps;\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {FormRow, TonvaForm, Step, MultiStep, DropdownActions, Action, List, FA, SubmitResult} from 'tonva-react-form';\r\nimport {DevModel} from '../model';\r\nimport { ObjViewProps } from './ObjViewProps';\r\n\r\n@observer\r\nexport class ObjView<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    async componentDidMount() {\r\n        await this.props.items().load();\r\n    }\r\n    //converter(item:T):ListItem {\r\n    //    return this.props.converter(item);\r\n    //}\r\n    newItem() {\r\n        this.props.items().cur = undefined;\r\n        nav.push(<New {...this.props} />);\r\n    }\r\n    itemClick = (item:T) => {\r\n        this.props.items().cur = observable(item);\r\n        nav.push(<Info {...this.props} />);\r\n    }\r\n    render() {\r\n        let {title, items} = this.props;\r\n        let right = <button className='btn btn-secondary btn-sm' onClick={()=>this.newItem()}><FA name=\"plus\" /></button>;\r\n        return <Page header={title} right={right}>\r\n            <List items={items().items}\r\n                item={{render: this.props.row, onClick: this.itemClick}}\r\n                // converter={this.props.converter} \r\n                //itemClick={this.itemClick} \r\n                />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass New<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    async onSubmit(values:any):Promise<SubmitResult> {\r\n        let ret = await this.props.items().saveCur(values);\r\n        if (ret === true) {\r\n            nav.pop();\r\n        }\r\n        else {\r\n            let repeated = this.props.repeated;\r\n            //this.formView.setError(repeated.name, repeated.err);\r\n        }\r\n        return;\r\n    }\r\n    render() {\r\n        let content;\r\n        let {title, steps, stepHeader} = this.props;\r\n        let {formRows, items} = this.props;\r\n        if (steps !== undefined) {\r\n            content = <MultiStep className=\"mt-4\" header={stepHeader} steps={steps} first=\"step1\" onSubmit={this.onSubmit} />;\r\n        }\r\n        else if (formRows !== undefined) {\r\n            content = <TonvaForm \r\n                className=\"m-3\"\r\n                formRows={formRows} \r\n                onSubmit={this.onSubmit} initValues={items().cur} />;\r\n        }\r\n        else {\r\n            content = \"ObjViewProps: no steps and no formRows\";\r\n        }\r\n        return <Page header={'新增'+title}>\r\n            {content}\r\n        </Page>\r\n    }\r\n}\r\n\r\n@observer\r\nclass Info<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    private menuItems = [\r\n        {caption:'修改' + this.props.title, action:this.editItem.bind(this), icon:'edit' },\r\n        {caption:'删除', action:this.deleteItem.bind(this), icon:'trash-o' }\r\n    ];\r\n    async deleteItem() {\r\n        if (confirm('真的要删除吗？系统删除时并不会检查相关引用，请谨慎') === true) {\r\n            await this.props.items().del();\r\n            nav.pop();\r\n        }\r\n    }\r\n    editItem() {\r\n        nav.push(<Edit {...this.props} />);\r\n    }\r\n    render() {\r\n        let actions = [];\r\n        let ex = this.props.extraMenuActions;\r\n        if (ex !== undefined) actions.push(...ex);\r\n        actions.push(...this.menuItems);        \r\n        let right = <DropdownActions actions={actions} />\r\n        let item = this.props.items().cur;\r\n        return <Page header={this.props.title + ' - 详细资料'} right={right}>\r\n            <this.props.info {...item} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass Edit<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    private actions = [\r\n        {caption:'删除', action:this.deleteItem.bind(this), icon:'trash-o' }\r\n    ];\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    componentWillMount() {\r\n    }\r\n    async onSubmit(values:any):Promise<SubmitResult> {\r\n        await this.props.items().saveCur(values);\r\n        nav.pop();\r\n        return;\r\n    }\r\n    async deleteItem() {\r\n        if (confirm('真的要删除吗？系统删除时并不会检查相关引用，请谨慎') === true) {\r\n            await this.props.items().del();\r\n            nav.pop();\r\n        }\r\n    }\r\n    render() {\r\n        let right = <DropdownActions actions={this.actions} />\r\n        return <Page header={'修改 '+this.props.title} right={right} back=\"close\">\r\n            <TonvaForm \r\n                className=\"m-3\"\r\n                formRows={this.props.formRows} \r\n                onSubmit={this.onSubmit} initValues={this.props.items().cur} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { List, SearchBox, LMR, FA } from 'tonva-react-form';\r\nimport { UsersController, UserApps, AppUsers } from './cUsers';\r\n\r\nexport class VApps extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private renderRow = (appUsers: AppUsers, index:number):JSX.Element => {\r\n        let {app, users} = appUsers;\r\n        let {id, name, discription} = app;\r\n        let right = <small className=\"text-muted\">{discription}</small>;\r\n        return <div className=\"d-block px-3 py-2\">\r\n            <LMR className=\"mb-2\" right={right}>\r\n                <FA name=\"address-card-o\" className=\"text-primary mr-3\" />\r\n                <b>{name}</b>\r\n            </LMR>\r\n            <div>\r\n                <small className=\"text-muted\">用户: </small>\r\n                {users.length===0?'[无]':users.map(u => u.assigned || u.nick || u.name).join(', ')}\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {appUsersList, searchApp, onAppsClick} = this.controller;\r\n        let searchBox = <SearchBox className=\"w-100 pr-1\" \r\n            onSearch={searchApp} \r\n            placeholder=\"搜索App\" \r\n            allowEmptySearch={true} />;\r\n        return <Page header={searchBox}>\r\n            <List items={appUsersList} \r\n                item={{render: this.renderRow, onClick:onAppsClick,  key: (item=>item.app.id)}} />\r\n        </Page>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { List, SearchBox, LMR, FA } from 'tonva-react-form';\r\nimport { UsersController, UserApps } from './cUsers';\r\n\r\nexport class VUsers extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private renderRow = (userApps: UserApps, index:number):JSX.Element => {\r\n        let {user, apps} = userApps;\r\n        let {id, name, nick, icon, assigned} = user;\r\n        return <div className=\"d-block px-3 py-2\">\r\n            <div className=\"mb-2\">\r\n                <FA name=\"user-o\" className=\"text-primary mr-3\" />\r\n                <b>{assigned || nick || name}</b>\r\n            </div>\r\n            <div>\r\n                <small className=\"text-muted\">App: </small>\r\n                {apps.length===0?'[无]':apps.map(a => a.name).join(', ')}\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {userAppsList, searchUser, onUsersClick} = this.controller;\r\n        let searchBox = <SearchBox className=\"w-100 pr-1\" \r\n            onSearch={searchUser} \r\n            placeholder=\"搜索用户\" \r\n            allowEmptySearch={true} />;\r\n        return <Page header={searchBox}>\r\n            <List items={userAppsList} \r\n                item={{render: this.renderRow, onClick:onUsersClick, key: (item=>item.user.id)}} />\r\n        </Page>;\r\n    });\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { List, SearchBox, LMR, Muted } from 'tonva-react-form';\r\nimport { UsersController, UserApps, AppUsers, User } from './cUsers';\r\n\r\nexport class VApp extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curApp, curAppUsers, onAppEditUsers} = this.controller;\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={()=>onAppEditUsers()}>增减用户</button>;\r\n        return <Page header={'App - ' + (curApp.name)} right={right}>\r\n            <List items={curAppUsers} item={{render:this.renderApp}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderApp = (user: User, index:number):JSX.Element => {\r\n        let {name, nick, assigned} = user;\r\n        let content:any;\r\n        if (assigned)\r\n            content = <span>{assigned} &nbsp; <small className=\"text-muted\">{name}</small></span>;\r\n        else if (nick)\r\n            content = <span>{nick} &nbsp; <small className=\"text-muted\">{name}</small></span>;\r\n        else\r\n            content = <>{name}</>\r\n        return <div className=\"px-3 py-2\">{content}</div>\r\n    }\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { List, SearchBox, LMR } from 'tonva-react-form';\r\nimport { UsersController, UserApps, AppUsers, App } from './cUsers';\r\n\r\nexport class VUser extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curUser, curUserApps, onUserEditApps} = this.controller;\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={()=>onUserEditApps()}>增减App</button>;\r\n        return <Page header={'用户 - ' + (curUser.assigned || curUser.nick || curUser.name)}\r\n            right={right}>\r\n            <List items={curUserApps} item={{render:this.renderApp}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderApp = (app: App, index:number):JSX.Element => {\r\n        let {name, discription} = app;\r\n        return <div className=\"px-3 py-2\">{name} {discription}</div>\r\n    }\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { List, SearchBox, LMR, Muted, FA } from 'tonva-react-form';\r\nimport { UsersController, UserApps, AppUsers, User, EditUser } from './cUsers';\r\n\r\nexport class VAppEditUsers extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curApp, appEditUsers, onAppEditUsers} = this.controller;\r\n        return <Page header={curApp.name + ' - 增减用户'} >\r\n            <List items={appEditUsers} item={{render:this.renderUser}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderUser = (editUser: EditUser, index:number):JSX.Element => {\r\n        let {name, nick, assigned, bind} = editUser;\r\n        let content:any;\r\n        if (assigned)\r\n            content = <>{assigned} <Muted>{name}</Muted></>;\r\n        else if (nick)\r\n            content = <>{nick} <Muted>{name}</Muted></>;\r\n        else\r\n            content = <>{name}</>\r\n        let right = <input type=\"checkbox\" defaultChecked={bind===1} \r\n            onChange={(evt)=>this.onUserChanged(editUser, evt.target.checked)} />;\r\n        return <LMR className=\"px-3 py-2 align-items-center\" right={right}>\r\n            {content}\r\n        </LMR>\r\n    }\r\n\r\n    private onUserChanged = async (editUser: EditUser, checked:boolean) => {\r\n        await this.controller.bindAppUser(editUser, checked);\r\n        editUser.bind = checked===true? 1: 0;\r\n    }\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { List, SearchBox, LMR } from 'tonva-react-form';\r\nimport { UsersController, UserApps, AppUsers, App, EditApp } from './cUsers';\r\n\r\nexport class VUserEditApps extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curUser, userEditApps, onUserEditApps} = this.controller;\r\n        return <Page header={'增减App - ' + (curUser.assigned || curUser.nick || curUser.name)}>\r\n            <List items={userEditApps} item={{render:this.renderApp}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderApp = (editApp: EditApp, index:number):JSX.Element => {\r\n        let {name, discription, bind} = editApp;\r\n        let right = <input type=\"checkbox\" defaultChecked={bind===1} \r\n            onChange={(evt)=>this.onAppChanged(editApp, evt.target.checked)} />;\r\n        return <LMR className=\"px-3 py-2\" right={right}>\r\n            {name} {discription}\r\n        </LMR>\r\n    }\r\n\r\n    private onAppChanged = async (editApp: EditApp, checked:boolean) => {\r\n        await this.controller.bindUserApp(editApp, checked);\r\n        editApp.bind = checked===true? 1: 0;\r\n    }\r\n}","import * as React from 'react';\r\nimport { VPage, Page, Image, nav } from \"tonva-tools\";\r\nimport { UsersController, User } from \"./cUsers\";\r\nimport { SearchBox } from 'tonva-react-form';\r\nimport { mainApi } from 'api';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class VAddUser extends VPage<UsersController> {\r\n    @observable private user: User = null;\r\n    //@observable private addedUser: User;\r\n    private searchBox: SearchBox;\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(():JSX.Element => {\r\n        let searchBox = <SearchBox ref={v=>this.searchBox=v}\r\n            className=\"w-100\"\r\n            onSearch={this.onSearch}\r\n            onFocus={this.onSearchFocus}\r\n            placeholder=\"用户全名/手机号/邮箱\"\r\n             />;\r\n        let content:any;\r\n        if (this.user === null) {\r\n        }\r\n        else if (this.user === undefined) {\r\n            content = <div className=\"text-info p-3\">没有找到用户</div>;\r\n        }\r\n        else {\r\n            let {name, nick, icon} = this.user;\r\n            let divUser:any;\r\n            if (nick) {\r\n                divUser = <><div><b>{nick}</b></div><div>{name}</div></>;\r\n            }\r\n            else {\r\n                divUser = <div><b>{name}</b></div>;\r\n            }\r\n            content = <div>\r\n                <div className=\"m-3 p-3 d-flex bg-white\">\r\n                    <Image src={icon} />\r\n                    <div className=\"ml-3\">{divUser}</div>\r\n                </div>\r\n                <div className=\"d-flex justify-content-center\">\r\n                    <button className=\"btn btn-success text-center\" onClick={this.onAddUser}>增加用户</button>\r\n                </div>\r\n            </div>;\r\n        }\r\n        /*\r\n        let divUserAdded:any;\r\n        if (this.addedUser) {\r\n            divUserAdded = <div className=\"p-3\">\r\n                <div>\r\n                    新增用户: {this.addedUser.name} &nbsp; &nbsp; \r\n                    <button className=\"btn btn-success\" \r\n                        onClick={()=>this.controller.onUserEditApps()}>\r\n                        为用户添加App\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        }\r\n        */\r\n        return <Page header={searchBox}>\r\n            {content}\r\n        </Page>;\r\n    })\r\n    //{divUserAdded}\r\n\r\n    private onSearch = async (key:string) => {\r\n        this.user = await mainApi.userFromKey(key);\r\n    }\r\n\r\n    private onAddUser = async () => {\r\n        await this.controller.addUser(this.user.id);\r\n        this.controller.curUser = this.user;\r\n        this.user = null;\r\n        this.searchBox.clear();\r\n        this.replacePage(this.addedPage);\r\n    }\r\n\r\n    private onSearchFocus = () => {\r\n        this.user = null;\r\n        //this.addedUser = null;\r\n        if (this.searchBox) this.searchBox.clear();\r\n    }\r\n\r\n    private onAddApps = () => {\r\n        this.closePage();\r\n        this.controller.onUserEditApps();\r\n    }\r\n\r\n    private onContinueAddUser = () => {\r\n        this.closePage();\r\n        this.controller.onAddUser();\r\n    }\r\n\r\n    private addedPage = () => {\r\n        return <Page header=\"添加成功\">\r\n            <div className=\"p-3 text-center\">\r\n                <div>\r\n                    新增用户: {this.controller.curUser.name}\r\n                </div>\r\n                <div className=\"mt-3\">\r\n                    <button className=\"btn btn-success mr-3\" \r\n                        onClick={this.onAddApps}>\r\n                        为用户添加App\r\n                    </button>\r\n                    <button className=\"btn btn-outline-primary\"\r\n                        onClick={this.onContinueAddUser}>\r\n                        继续添加新用户\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { Controller, VPage, Page } from \"tonva-tools\";\r\nimport { mainApi } from 'api';\r\nimport { LMR, FA } from 'tonva-react-form';\r\nimport { VApps } from './vApps';\r\nimport { VUsers } from './vUsers';\r\nimport { VApp } from './vApp';\r\nimport { VUser } from './vUser';\r\nimport { VAppEditUsers } from './vAppEditUsers';\r\nimport { VUserEditApps } from './vUserEditApps';\r\nimport { VAddUser } from './VAddUser';\r\nimport { Unit } from 'model';\r\n\r\nexport interface User {\r\n    id: number;\r\n    name: string;\r\n    nick: string;\r\n    icon: string;\r\n    assigned: string;\r\n}\r\nexport interface App {\r\n    id: number;\r\n    name: string;\r\n    discription: string;\r\n}\r\nexport interface UserApps {\r\n    user: User;\r\n    apps: App[];\r\n}\r\nexport interface AppUsers {\r\n    app: App;\r\n    users: User[];\r\n}\r\nexport interface EditApp extends App {\r\n    bind: number;   // 0: not bind, 1: bind\r\n}\r\nexport interface EditUser extends User {\r\n    bind: number;  // 0: not bind, 1: bind\r\n}\r\n\r\nexport class UsersController extends Controller {\r\n    private unit: Unit;\r\n    @observable userAppsList: UserApps[];\r\n    @observable appUsersList: AppUsers[];\r\n    curUser: User;\r\n    @observable curUserApps: App[];\r\n    @observable userEditApps: EditApp[];\r\n    curApp: App;\r\n    @observable curAppUsers: User[];\r\n    @observable appEditUsers: EditUser[];\r\n\r\n    protected async internalStart(unit:Unit) {\r\n        this.unit = unit;\r\n        let cn = \"bg-white px-3 py-2 my-1\";\r\n        let appIcon = <FA name=\"columns\" className=\"text-primary mr-3\" />;\r\n        let userIcon = <FA name=\"user-plus\" className=\"text-primary mr-3\" />;\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={this.onAddUser}><FA name=\"plus\" /></button>;\r\n        this.openPage(<Page header={'用户管理 - ' +  this.unit.name} right={right}>\r\n            <LMR className={cn} onClick={this.onAppUsers} left={appIcon}>App</LMR>\r\n            <LMR className={cn} onClick={this.onUserApps} left={userIcon}>用户</LMR>\r\n        </Page>);\r\n    }\r\n\r\n    private onAppUsers = async () => {\r\n        await this.loadAppUsers(undefined);\r\n        this.openVPage(VApps);\r\n    }\r\n\r\n    private onUserApps = async () => {\r\n        await this.loadUserApps(undefined);\r\n        this.openVPage(VUsers);\r\n    }\r\n\r\n    private async loadAppUsers(key:string) {\r\n        let list:AppUsers[] = [];\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        let ret = await mainApi.unitAppUsers(this.unit.id, key, pageStart, pageSize);\r\n        let apps = ret[0];\r\n        let users = ret[1];\r\n        let coll: {[id:number]:AppUsers} = {}\r\n        for (let a of apps) {\r\n            let app:App = {\r\n                id: a.id,\r\n                name: a.name,\r\n                discription: a.discription,\r\n            };\r\n            list.push(coll[a.id] = {app:app, users:[]});\r\n        }\r\n        for (let u of users) {\r\n            let user:User = {\r\n                id: u.user,\r\n                name: u.name,\r\n                nick: u.nick,\r\n                icon: u.icon,\r\n                assigned: u.assigned\r\n            }\r\n            coll[u.app].users.push(user);\r\n        }\r\n        this.appUsersList = list;\r\n    }\r\n\r\n    private async loadUserApps(key:string) {\r\n        let list:UserApps[] = [];\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        let ret = await mainApi.unitUsers(this.unit.id, key, pageStart, pageSize);\r\n        let users = ret[0];\r\n        let apps = ret[1];\r\n        let coll: {[id:number]:UserApps} = {}\r\n        for (let u of users) {\r\n            let user:User = {\r\n                id: u.id,\r\n                name: u.name,\r\n                nick: u.nick,\r\n                icon: u.icon,\r\n                assigned: u.assigned\r\n            };\r\n            list.push(coll[u.id] = {user:user, apps:[]});\r\n        }\r\n        for (let a of apps) {\r\n            let app:App = {\r\n                id: a.app,\r\n                name: a.name,\r\n                discription: a.discription,\r\n            }\r\n            coll[a.user].apps.push(app);\r\n        }\r\n        this.userAppsList = list;\r\n    }\r\n\r\n    searchUser = async(key:string) => {\r\n        await this.loadUserApps(key);\r\n    }\r\n\r\n    searchApp = async(key:string) => {\r\n        await this.loadAppUsers(key);\r\n    }\r\n\r\n    onAppsClick = async (appUsers: AppUsers) => {\r\n        this.curApp = appUsers.app;\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.curAppUsers = await mainApi.unitOneAppUsers(this.unit.id, this.curApp.id, pageStart, pageSize);\r\n        this.openVPage(VApp);\r\n    }\r\n\r\n    onUsersClick = async (userApps: UserApps) => {\r\n        this.curUser = userApps.user;\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.curUserApps = await mainApi.unitOneUserApps(this.unit.id, this.curUser.id, pageStart, pageSize);\r\n        this.openVPage(VUser);\r\n    }\r\n\r\n    onAppEditUsers = async (key?:string) => {\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.appEditUsers = await mainApi.unitAppEditUsers(this.unit.id, this.curApp.id, key, pageStart, pageSize);\r\n        this.openVPage(VAppEditUsers);\r\n    }\r\n\r\n    onAddUser = () => {\r\n        this.openVPage(VAddUser);\r\n    }\r\n\r\n    onUserEditApps = async (key?:string) => {\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.userEditApps = await mainApi.unitUserEditApps(this.unit.id, this.curUser.id, key, pageStart, pageSize);\r\n        this.openVPage(VUserEditApps);\r\n    }\r\n\r\n    bindAppUser = async(user:User, checked:boolean) => {\r\n        await mainApi.bindAppUser(this.unit.id, this.curApp.id, user.id, checked===true? 1:0);\r\n        let appUsers = this.appUsersList.find(v => v.app.id === this.curApp.id);\r\n        if (checked === true) {\r\n            this.curAppUsers.push(user);\r\n            if (appUsers) appUsers.users.push(user);\r\n        }\r\n        else {\r\n            let index = this.curAppUsers.findIndex(v => v.id === user.id);\r\n            if (index>=0) this.curAppUsers.splice(index, 1);\r\n            if (appUsers) {\r\n                index = appUsers.users.findIndex(v => v.id === user.id);\r\n                if (index>=0) appUsers.users.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    bindUserApp = async(app:App, checked:boolean) => {\r\n        await mainApi.bindAppUser(this.unit.id, app.id, this.curUser.id, checked===true? 1:0);\r\n        if (this.userAppsList === undefined) return;\r\n        let userApps = this.userAppsList.find(v => v.user.id === this.curUser.id);\r\n        if (checked === true) {\r\n            this.curUserApps.push(app);\r\n            if (userApps) userApps.apps.push(app);\r\n        }\r\n        else {\r\n            let index = this.curUserApps.findIndex(v => v.id === app.id);\r\n            if (index>=0) this.curUserApps.splice(index, 1);\r\n            if (userApps) {\r\n                index = userApps.apps.findIndex(v => v.id === app.id);\r\n                if (index>=0) userApps.apps.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    addUser = async (userId: number) => {\r\n        await mainApi.unitAddUser(this.unit.id, userId);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page, appInFrame, Controller, VPage, Image, Edit, ItemSchema, UiSchema, StringSchema, ImageSchema, UiImageItem, UiTextItem} from  'tonva-tools'; \r\nimport {List, LMR, FA, StackedFA, PropGrid, Prop, Muted} from 'tonva-react-form';\r\nimport {StringValueEdit} from './tools';\r\nimport {Unit, UnitApps, UnitAdmin, DevModel} from './model';\r\nimport {store} from './store';\r\nimport Administors from './Administors';\r\nimport AppsPage from './Apps';\r\nimport {Members} from './Members';\r\nimport { mainApi } from 'api';\r\nimport { COrganization } from 'organization';\r\nimport {\r\n    ObjViewProps, ObjView,\r\n    //appsProps, \r\n    busesProps, \r\n    serversProps, /*uqdbsProps, */servicesProps, UQController} from './Dev';\r\nimport { AppController } from './Dev';\r\nimport { UsersController } from 'Users';\r\n\r\nexport class CAdmin extends Controller {\r\n    isProduction: boolean;\r\n    adminUnits: UnitAdmin[]; // 仅仅为Admins调试用。从登录用户获取units\r\n\r\n    private async loadAdminUnits(): Promise<void> {        \r\n        let ret = await mainApi.userAdminUnits();\r\n        let adminUnits = this.adminUnits = ret[0];\r\n        console.log('loadAdminUnits', adminUnits);\r\n        if (adminUnits.length === 1) {\r\n            appInFrame.unit = adminUnits[0].id;\r\n            await store.loadUnit();\r\n        }\r\n    }\r\n    protected async internalStart(param?:any):Promise<void> {\r\n        store.init();\r\n        \r\n        this.isProduction = document.location.hash.startsWith('#tv');\r\n        console.log('admins isProduction %s', this.isProduction);\r\n\r\n        if (this.isProduction === false) {\r\n            await this.loadAdminUnits();\r\n            this.openVPage(VAdmin);\r\n            return;\r\n        }\r\n        await store.loadUnit();\r\n        this.openVPage(VAdmin);\r\n    /*\r\n        let user = nav.user;\r\n        if (user === undefined) {\r\n            console.log('autorun: user has logged out');\r\n            return;\r\n        }\r\n    \r\n        console.log('autorun login');\r\n        */\r\n       /*\r\n        setTimeout(async () => {\r\n            // 等待 tonva-tools 里面的initSubWin的nav.user的赋值\r\n            // 这个地方实际上有问题的，不应该这么写。程序逻辑顺序逻辑错误。\r\n            // 2018-11-5: 临时凑合用延时的方式来解决。\r\n            await store.loadUnit();\r\n            this.showVPage(VAdmin);\r\n        }, 200);\r\n        */\r\n    }\r\n}\r\n\r\nexport class VAdmin extends VPage<CAdmin> {\r\n    async open() {\r\n        let {isProduction, adminUnits} = this.controller;\r\n        if (isProduction === false) {\r\n            switch (adminUnits.length) {\r\n                default: this.openPage(this.selectUnitPage); return;\r\n                case 0: this.openPage(this.noUnitPage); return;\r\n                case 1: this.openPageElement(<AdminPage />); return;\r\n            }\r\n        }\r\n\r\n        if (store.unit === undefined) {\r\n            this.openPage(this.noUnitPage);\r\n            return;\r\n        }\r\n        this.openPageElement(<AdminPage />);\r\n    }\r\n\r\n    private selectUnitPage = () => {\r\n        return <Page header=\"选择小号\" logout={logout}>\r\n            <List items={this.controller.adminUnits} item={{render: this.renderRow, onClick: this.onRowClick}}/>\r\n        </Page>;\r\n    }\r\n\r\n    private noUnitPage = () => {\r\n        let {nick, name} = nav.user;\r\n        return <Page header=\"没有小号\" logout={logout}>\r\n            <div className=\"p-3 small text-info\">\r\n                {nick || name}: 没有需要管理的小号\r\n            </div>\r\n        </Page>\r\n    }\r\n\r\n    protected get view() {return undefined}\r\n\r\n    renderRow = (item: UnitAdmin, index: number):JSX.Element => {\r\n        return <LMR className=\"p-2\" right={'id: ' + item.id}>\r\n            <div>{item.nick || item.name}</div>\r\n        </LMR>;\r\n    }\r\n    onRowClick = async (item: UnitAdmin) => {\r\n        appInFrame.unit = item.id; // 25;\r\n        await store.loadUnit();\r\n        this.closePage();\r\n        this.openPageElement(<AdminPage />);\r\n    }\r\n}\r\n\r\nconst logout = async () => {\r\n    store.logout();\r\n}\r\n\r\ninterface ActionItem {\r\n    main: string | JSX.Element;\r\n    right?: string | JSX.Element;\r\n    icon: string|JSX.Element;\r\n    page?: new (props:any) => React.Component;\r\n    //onClick: () => nav.push(<Administors />),\r\n    controller?: Controller;\r\n}\r\n\r\ninterface DevItem<T extends DevModel.ObjBase> {\r\n    title: string;\r\n    count: number;\r\n    icon: string;\r\n    objProps?: ObjViewProps<T>;\r\n    onClick?: ()=>void;\r\n}\r\n\r\ntype Item = ActionItem|DevItem<DevModel.ObjBase>|string;\r\n\r\nconst rArrow = <FA name=\"chevron-right\" />;\r\nconst typeCaptions = {\r\n    1: '开发号',\r\n    2: '小号',\r\n    3: '系统号'\r\n}\r\n@observer\r\ndefault class AdminPage extends React.Component {\r\n    private caption:string;\r\n\r\n    async componentWillMount() {\r\n        let {unit, dev} = store;\r\n        let {isAdmin, isOwner, type} = unit;\r\n        this.caption = typeCaptions[type];\r\n        /*\r\n        switch (type) {\r\n            case 1: this.caption = '开发号'; break;\r\n            case 2: this.caption = '小号'; break;\r\n            case 3: this.caption = '系统号'; break;\r\n        }*/\r\n        if ((type & 1) !== 0) {\r\n            await store.dev.loadCounts();\r\n        }\r\n    }\r\n\r\n    private appsAction:ActionItem = {\r\n        main: '启停App',\r\n        right: rArrow, //'增减',\r\n        icon: 'play-circle-o',\r\n        page: AppsPage,\r\n    };\r\n    private usersAction:ActionItem = {\r\n        main: '用户角色',\r\n        right: rArrow,\r\n        icon: 'users',\r\n        page: Members,\r\n    };\r\n    private newUsersAction:ActionItem = {\r\n        main: '用户管理',\r\n        right: rArrow,\r\n        icon: 'user-o',\r\n        controller: new UsersController(undefined),\r\n    };\r\n    /*\r\n    private devAction:Item = {\r\n        main: <DevActions />,\r\n        right: '程序开发相关管理',\r\n        icon: 'laptop',\r\n        //page: Dev,\r\n    };*/\r\n    private adminsAction:ActionItem = {\r\n        main: '管理员',\r\n        right: rArrow,\r\n        icon: 'universal-access',\r\n        page: Administors,\r\n    };\r\n\r\n    private cOrganization = new COrganization;\r\n    private organizeAction:ActionItem = {\r\n        main: this.cOrganization.label,\r\n        right: rArrow,\r\n        icon: this.cOrganization.icon,\r\n        controller: this.cOrganization\r\n    };\r\n\r\n    private noneAction:ActionItem = {\r\n        main: '请耐心等待分配任务',\r\n        icon: 'hourglass-start',\r\n    };\r\n\r\n    private buildItems():Item[] {\r\n        let {unit, dev} = store;\r\n        let {isAdmin, isOwner, type} = unit;\r\n        let items:Item[] = [];\r\n        if (isOwner === 1) {\r\n            items.push(this.adminsAction);\r\n        }\r\n        console.log('unit:', unit);\r\n        if (isAdmin === 1) {\r\n            if ((type & 2) !== 0) {\r\n                // unit\r\n                items.push(\r\n                    '小号管理',\r\n                    this.appsAction, \r\n                    //this.usersAction, \r\n                    this.newUsersAction, \r\n                    //this.organizeAction\r\n                );\r\n            }\r\n            if ((type & 1) !== 0) {\r\n                // dev unit\r\n                let {counts} = dev;\r\n                //if (counts !== undefined) {\r\n                let devItems:(DevItem<DevModel.ObjBase>|string)[] = [\r\n                    '开发号管理',\r\n                    {\r\n                        title: 'APP', \r\n                        count: counts && counts.app, \r\n                        icon: 'tablet', \r\n                        onClick: () => new AppController(undefined).start(unit.id),\r\n                    },\r\n                    {\r\n                        title: 'UQ', \r\n                        count: counts && counts.uq, \r\n                        icon: 'database', \r\n                        onClick: () => new UQController(undefined).start(unit.id),\r\n                    },\r\n                    {\r\n                        title: 'BUS', \r\n                        count: counts && counts.bus, \r\n                        icon: 'cogs', \r\n                        objProps: busesProps,\r\n                    },\r\n                    {\r\n                        title: 'Server', \r\n                        count: counts && counts.server, \r\n                        icon: 'server', \r\n                        objProps: serversProps,\r\n                    },\r\n                ];\r\n                items.push(...devItems);\r\n            //}\r\n            }\r\n        }\r\n        return items;\r\n    }\r\n    private row = (item:Item, index:number):JSX.Element => {\r\n        if (typeof item === 'string') {\r\n            return <div className=\"px-3 pt-3 pb-1 small text-muted\" style={{backgroundColor:'#f0f0f0'}}>{item}</div>;\r\n        }\r\n        let {title} = item as DevItem<DevModel.ObjBase>;\r\n        let left:any, mid:any, r:any;\r\n        if (title !== undefined) {\r\n            let {icon, count} = item as DevItem<DevModel.ObjBase>;\r\n            left = <FA className=\"text-primary\" name={icon} fixWidth={true} size=\"lg\" />;\r\n            mid = title;\r\n            r = count>0 && <span>{count}</span>;\r\n        }\r\n        else {\r\n            let {right, main, icon} = item as ActionItem;\r\n            left = typeof icon === 'string'? \r\n                <FA className=\"text-primary\" name={icon} fixWidth={true} size=\"lg\" /> :\r\n                item.icon;\r\n            mid = main;\r\n            r = <span>{right}</span>;\r\n        }\r\n        return <LMR className=\"px-3 py-2 align-items-center\" left={left} right={r}>\r\n            <div className=\"px-3\"><b>{mid}</b></div>\r\n        </LMR>;\r\n    }\r\n    private rowClick = async (item:Item) => {\r\n        let {title} = item as DevItem<DevModel.ObjBase>;\r\n        if (title !== undefined) {\r\n            let {objProps, onClick} = item as DevItem<DevModel.ObjBase>;\r\n            if (objProps !== undefined)\r\n                return nav.push(<ObjView {...objProps} />);\r\n            else {\r\n                onClick();\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            let {page:P, controller} = item as ActionItem;\r\n            if (P !== undefined)\r\n                nav.push(<P />);\r\n            else {\r\n                await controller.start(store.unit);\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        let unit:Unit = store.unit;\r\n        if (unit === undefined) {\r\n            console.log(\"admin render without unit\");\r\n            return null;\r\n        }\r\n        console.log(\"admin render with unit\");\r\n        let items = this.buildItems();\r\n        if (items === undefined) {\r\n            return <Page header=\"\" />;\r\n        }\r\n        let header:any, top:any;\r\n        if (unit !== undefined) {\r\n            let {name, nick, icon, discription} = unit;\r\n            header = nick || name;\r\n            if (this.caption !== undefined) header = this.caption + ' - ' + header;            \r\n            top = <LMR className='px-3 my-4 bg-white py-2 cursor-pointer' onClick={()=>nav.push(<UnitProps />)}\r\n                left={<div><Image className=\"w-3c h-3c\" src={icon} /></div>}>\r\n                <div className=\"px-3\">\r\n                    <h6 className='text-dark'>{name}</h6>\r\n                    <h6><small className='text-secondary'>{nick}</small></h6>\r\n                    <div className='small text-info'>{discription}</div>\r\n                </div>\r\n            </LMR>;\r\n        }\r\n        else {\r\n            header = '系统管理';\r\n        }\r\n        return <Page header={header} logout={logout}>\r\n            {top}\r\n            <List items={items} item={{render:this.row, onClick:this.rowClick}} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass UnitProps extends React.Component {\r\n    /*\r\n    private rows:Prop[] = [\r\n        '',\r\n        {label: '标志图', type: 'string', name: 'icon'},\r\n        '=',\r\n        {label: '唯一号', type: 'string', name: 'name'},\r\n        {\r\n            label: '名称', \r\n            type: 'string',\r\n            name: 'nick', \r\n            onClick:()=>nav.push(<StringValueEdit \r\n                title=\"修改名称\"\r\n                value={store.unit.nick}\r\n                onChanged={this.onNickChanged} \r\n                info=\"好的名字会提升接受度\" />)\r\n        },\r\n        {\r\n            label: '说明',\r\n            type: 'string',\r\n            name: 'discription',\r\n            onClick:()=>nav.push(<StringValueEdit \r\n                title=\"修改说明\"\r\n                value={store.unit.discription}\r\n                onChanged={this.onDiscriptionChanged} \r\n                info=\"对小号做一个说明\" />)\r\n        },\r\n    ];\r\n    */\r\n    private schema:ItemSchema[] =[\r\n        {name: 'icon', type: 'image'} as ImageSchema,\r\n        {name: 'nick', type: 'string'} as StringSchema,\r\n        {name: 'discription', type: 'string'} as StringSchema,\r\n    ];\r\n    private uiSchema:UiSchema = {\r\n        items: {\r\n            nick: {widget:'text', label:'别名', placeholder:'好的别名更方便记忆'} as UiTextItem,\r\n            icon: {widget:'image', label:'标志图'} as UiImageItem,\r\n            discription: {widget:'text', label:'描述', placeholder:'简短清晰的描述'} as UiTextItem,\r\n        }\r\n    }\r\n    /*\r\n    async onNickChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.unitChangeProp('nick', value);\r\n    }\r\n    async onDiscriptionChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.unitChangeProp('discription', value);\r\n    }\r\n    */\r\n    private onItemChanged = async (itemSchema:ItemSchema, newValue:any, preValue:any) => {\r\n        let {name} = itemSchema;\r\n        //await userApi.userSetProp(name, newValue);\r\n        await store.unitChangeProp(name, newValue);\r\n        //this.data[name] = newValue;\r\n        //nav.user[name] = newValue;\r\n        //nav.saveLocalUser();\r\n    }\r\n    //<PropGrid rows={this.rows} values={store.unit} alignValue=\"right\" />\r\n    render() {\r\n        return <Page header=\"小号信息\">\r\n            <Edit schema={this.schema} uiSchema={this.uiSchema}\r\n                data={store.unit}\r\n                onItemChanged={this.onItemChanged} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\nimport { nav, NavView } from 'tonva-tools';\nimport { CAdmin } from './Admin';\nimport './App.css';\n\nclass App extends React.Component {\n    async onLogined() {\n        let loc = document.location;\n        nav.clear();\n        //nav.push(<StartPage />);\n        let cAdmin = new CAdmin({});\n        await cAdmin.start();\n    }\n    render() {\n        return (\n            <NavView onLogined={this.onLogined} />\n        )\n    }\n}\n\nexport default App;\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n"],"sourceRoot":""}