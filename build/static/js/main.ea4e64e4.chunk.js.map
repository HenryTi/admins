{"version":3,"sources":["tonva/index.ts","tonva/ui/index.ts","tonva/uq/controllers/CVEntity.tsx","tonva/ui/nav.tsx","tonva/net/guestApi.ts","tonva/net/index.ts","tonva/uq/controllers/form/viewModel.tsx","tonva/net/appBridge.ts","tonva/ui/page.tsx","tonva/uq/tools/jsonStringify.ts","tonva/uq/tools/tv.tsx","tonva/uq/tools/index.ts","tonva/uid.ts","tonva/net/httpChannelUI.ts","tonva/net/uqApi.ts","tonva/uq/controllers/link/cLink.tsx","tonva/uq/controllers/link/index.ts","tonva/net/wsChannel.ts","tonva/net/host.ts","tonva/ui/image.tsx","tonva/uq/controllers/index.ts","tonva/pageItems.ts","tonva/uq/uqs/entity.ts","tonva/uq/uqs/tuid/idCache.ts","tonva/uq/uqs/tuid/tuidBox.ts","tonva/uq/uqs/tuid/boxId.tsx","tonva/uq/uqs/tuid/tuidDiv.ts","tonva/uq/uqs/tuid/tuid.ts","tonva/uq/uqs/action.ts","tonva/uq/uqs/sheet.ts","tonva/uq/uqs/query.ts","tonva/uq/uqs/book.ts","tonva/uq/uqs/history.ts","tonva/uq/uqs/map.ts","tonva/uq/uqs/pending.ts","tonva/uq/uqs/uq.ts","tonva/uq/uqs/uqApp.ts","tonva/uq/uqs/index.ts","tonva/user.ts","tonva/ui/edit/itemEdit.tsx","tonva-form/index.ts","tonva/uq/controllers/tuid/vTuidMain.tsx","tonva/uq/controllers/tuid/vTuidEdit.tsx","tonva/uq/controllers/tuid/vTuidSelect.tsx","tonva/uq/controllers/tuid/vTuidView.tsx","tonva/uq/controllers/tuid/vTuidInfo.tsx","tonva/uq/controllers/tuid/pageItems.ts","tonva/uq/controllers/tuid/vTuidList.tsx","tonva/uq/controllers/tuid/cTuid.ts","tonva/uq/controllers/tuid/index.tsx","tonva/uq/controllers/form/vBand.tsx","tonva/uq/controllers/form/vSubmit.tsx","tonva/uq/controllers/form/rule.ts","tonva/uq/controllers/form/vField/vField.tsx","tonva/uq/controllers/form/vField/vComputeField.tsx","tonva/uq/controllers/form/vArr.tsx","tonva/uq/controllers/form/vField/vTuidField.tsx","tonva/uq/controllers/form/bandsBuilder.ts","tonva/uq/controllers/form/vField/buildVmField.ts","tonva/uq/controllers/form/vForm.tsx","tonva/uq/controllers/form/index.ts","tonva/net/httpChannel.ts","tonva/ui/res.ts","tonva-form/form/control/control.tsx","tonva-form/form/control/buttonsControl.tsx","tonva-form/form/control/charsControl.tsx","tonva-form/form/control/stringControl.tsx","tonva-form/form/control/numberControl.tsx","tonva-form/form/control/unknownControl.tsx","tonva-form/form/control/pickIdControl.tsx","tonva-form/form/control/pickTuidControl.tsx","tonva-form/form/control/pickControl.tsx","tonva-form/form/control/index.ts","tonva-form/form/control/checkControl.tsx","tonva-form/form/control/radioControl.tsx","tonva-form/form/control/selectControl.tsx","tonva-form/form/control/textAreaControl.tsx","tonva-form/form/rowContainer/index.tsx","tonva/net/apiBase.ts","tonva/ui/pageHeader.tsx","tonva/ui/components/Badge.tsx","tonva/ui/components/LMR.tsx","tonva/ui/components/FA.tsx","tonva/ui/components/Muted.tsx","tonva/ui/components/index.ts","tonva/uq/controllers/query/defaultRow.tsx","tonva/uq/controllers/query/vQueryMain.tsx","tonva/uq/controllers/query/vQuerySelect.tsx","tonva/uq/controllers/query/cQuery.ts","tonva/uq/controllers/query/index.ts","tonva/ui/edit/imageItemEdit.tsx","tonva/entry/userApi.ts","tonva/ui/loading.tsx","tonva/ui/resUploader.tsx","tonva/uq/controllers/CApp.tsx","tonva/uq/controllers/icons.tsx","tonva/uq/controllers/ControllerUq.ts","tonva/uq/centerApi.ts","tonva-form/form/index.ts","tonva-form/form/formView.tsx","tonva/uq/controllers/sheet/vMain.tsx","tonva/uq/controllers/sheet/vNew.tsx","tonva/uq/controllers/sheet/vSheetView.tsx","tonva/uq/controllers/sheet/vEdit.tsx","tonva/uq/controllers/sheet/vSheetAction.tsx","tonva/uq/controllers/sheet/vSchema.tsx","tonva/uq/controllers/sheet/vArchives.tsx","tonva/uq/controllers/sheet/vList.tsx","tonva/uq/controllers/sheet/vArchived.tsx","tonva/uq/controllers/sheet/vSheet.tsx","tonva/uq/controllers/sheet/vSaved.tsx","tonva/uq/controllers/sheet/vSheetProcessing.tsx","tonva/uq/controllers/sheet/cSheet.ts","tonva/uq/controllers/sheet/index.ts","tonva/uq/controllers/book/vBookMain.tsx","tonva/uq/controllers/book/cBook.ts","tonva/uq/controllers/cUq/vUq.tsx","tonva/uq/controllers/cUq/cUq.tsx","tonva/uq/controllers/cUq/index.ts","tonva/uq/controllers/map/vMain.tsx","tonva/uq/controllers/map/inputValues.tsx","tonva/uq/controllers/map/cMap.ts","tonva/uq/controllers/map/index.ts","tonva/uq/controllers/pending/vPendingMain.tsx","tonva/uq/controllers/pending/cPending.ts","tonva/uq/controllers/pending/index.ts","tonva/uq/controllers/action/vActionMain.tsx","tonva/uq/controllers/action/cAction.ts","tonva/uq/controllers/action/index.ts","tonva/uq/controllers/history/vHistoryMain.tsx","tonva/uq/controllers/history/cHistory.ts","tonva/uq/controllers/history/index.ts","tonva/net/netToken.ts","tonva/ui/VM.tsx","tonva/ui/schema/index.ts","tonva/ui/rules/index.ts","tonva/ui/dropDownActions/index.tsx","tonva/ui/easyDate/index.tsx","tonva/ui/media.tsx","tonva/ui/searchBox.tsx","tonva/cacheIds.ts","tonva-form/form/TonvaForm.tsx","tonva-form/multiStep/index.tsx","tonva/ui/form/rules/index.ts","tonva/ui/form/widgets/widget.tsx","tonva/ui/form/widgets/textWidget.tsx","tonva/ui/form/widgets/numberWidget.tsx","tonva/ui/form/widgets/updownWidget.tsx","tonva/ui/form/widgets/dateWidget.tsx","tonva/ui/form/widgets/checkBoxWidget.tsx","tonva/ui/form/widgets/selectWidget.tsx","tonva/ui/form/widgets/radioWidget.tsx","tonva/ui/form/widgets/idWidget.tsx","tonva/ui/form/widgets/unknown.tsx","tonva/ui/form/widgets/buttonWidget.tsx","tonva/ui/form/context.tsx","tonva/ui/form/widgets/arrComponent.tsx","tonva/ui/form/widgets/imageWidget.tsx","tonva/ui/form/widgets/factory.tsx","tonva/ui/form/widgets/textareaWidget.tsx","tonva/ui/form/widgets/passwordWidget.tsx","tonva/ui/form/widgets/rangeWidget.tsx","tonva/ui/form/formRes.ts","tonva/ui/form/form.tsx","tonva/ui/form/field.tsx","tonva/ui/form/index.ts","tonva/ui/list/base.tsx","tonva/ui/list/clickable.tsx","tonva/ui/list/static.tsx","tonva/ui/list/selectable.tsx","tonva/ui/list/index.tsx","tonva/ui/edit/stringItemEdit.tsx","tonva/ui/edit/radioItemEdit.tsx","tonva/ui/edit/selectItemEdit.tsx","tonva/ui/edit/edit.tsx","tonva/ui/edit/index.tsx","tonva/ui/propGrid/row.tsx","tonva/ui/propGrid/propView.tsx","tonva/ui/propGrid/PropGrid.tsx","tonva/ui/propGrid/index.tsx","tonva/ui/tabs/tabs.tsx","tonva/entry/meInfo.tsx","tonva/ui/fetchErrorView.tsx","tonva/local.ts","tonva/img/logo.svg","api/mainApi.ts","api/devApi.ts","store/admins.ts","store/dev.ts","store/cacheIds.ts","store/index.ts","Administors/NewFellow.tsx","Administors/EditAdmin.tsx","Administors/index.tsx","tools/idDates.tsx","tools/span.tsx","tools/unitSpan.tsx","consts.ts","tools/uqSpan.tsx","tools/appSpan.tsx","tools/serverSpan.tsx","tools/stringValueEdit.tsx","tools/idPickPage.tsx","Apps/info.tsx","Apps/new.tsx","Apps/index.tsx","Members/newRole.tsx","Members/roleApps.tsx","Members/memberPage.tsx","Members/membersPage.tsx","Members/rolePage.tsx","Members/index.tsx","Dev/apps/editPage.tsx","Dev/apps/appsPage.tsx","Dev/apps/appUqs.tsx","Dev/apps/appPage.tsx","Dev/apps/uqBindPage.tsx","Dev/apps/index.tsx","Dev/uqs/textSections.ts","Dev/uqs/uqUpload.tsx","createIdPick.tsx","Dev/uqs/newServicePage.tsx","Dev/uqs/servicePage.tsx","Dev/uqs/editPage.tsx","Dev/uqs/uqPage.tsx","Dev/uqs/listPage.tsx","Dev/uqs/uqController.tsx","Dev/row.tsx","Dev/buses.tsx","Dev/servers.tsx","Dev/ObjView.tsx","Users/vApps.tsx","Users/vUsers.tsx","Users/vApp.tsx","Users/vUser.tsx","Users/vAppEditUsers.tsx","Users/vUserEditApps.tsx","Users/VAddUser.tsx","Users/cUsers.tsx","Admin.tsx","App.tsx","registerServiceWorker.ts","index.tsx"],"names":["__webpack_require__","_net__WEBPACK_IMPORTED_MODULE_2__","d","__webpack_exports__","_ui__WEBPACK_IMPORTED_MODULE_3__","o","_uid__WEBPACK_IMPORTED_MODULE_4__","_pageItems__WEBPACK_IMPORTED_MODULE_5__","_cacheIds__WEBPACK_IMPORTED_MODULE_6__","_uq__WEBPACK_IMPORTED_MODULE_8__","_nav__WEBPACK_IMPORTED_MODULE_0__","_page__WEBPACK_IMPORTED_MODULE_2__","_VM__WEBPACK_IMPORTED_MODULE_3__","_schema__WEBPACK_IMPORTED_MODULE_4__","_form__WEBPACK_IMPORTED_MODULE_5__","_edit__WEBPACK_IMPORTED_MODULE_6__","_res__WEBPACK_IMPORTED_MODULE_7__","_image__WEBPACK_IMPORTED_MODULE_10__","_rules__WEBPACK_IMPORTED_MODULE_12__","_list__WEBPACK_IMPORTED_MODULE_13__","_dropDownActions__WEBPACK_IMPORTED_MODULE_14__","_easyDate__WEBPACK_IMPORTED_MODULE_15__","_propGrid__WEBPACK_IMPORTED_MODULE_16__","_components__WEBPACK_IMPORTED_MODULE_17__","_media__WEBPACK_IMPORTED_MODULE_18__","_searchBox__WEBPACK_IMPORTED_MODULE_19__","CEntity","_ControllerUq__WEBPACK_IMPORTED_MODULE_3__","[object Object]","cUq","entity","ui","res","super","Object","setPrototypeOf","this","x","name","typeName","label","icon","_icons__WEBPACK_IMPORTED_MODULE_2__","loadSchema","onSubmit","values","mode","options","buildFormOptions","ret","_form__WEBPACK_IMPORTED_MODULE_1__","setValues","none","submitCaption","arrNewCaption","arrEditCaption","arrTitleNewButton","fields","arrFields","undefined","new","formUI","form","arrs","inputs","buildInputs","buildFieldsInputs","arr","items","arrFieldInputs","field","_tuid","tuid","fieldUI","select","buildSelect","content","buildContent","placeHolder","getTuidPlaceHolder","__awaiter","ownerField","cTuidSelect","param","getValue","autoList","console","log","call","removeCeased","id","idFromItem","useId","queryName","cQuerySelect","VEntity","_ui__WEBPACK_IMPORTED_MODULE_0__","controller","createForm","RegExp","test","navigator","userAgent","logMark","logs","stackKey","NavView","react__WEBPACK_IMPORTED_MODULE_0__","props","waitCount","isHistoryBack","clearError","setState","fetchError","clickCount","onClick","Date","now","firstClick","getTime","nav","reverseTest","onTestClick","testing","push","header","className","toNormal","pop","back","bind","navBack","stack","state","wait","window","addEventListener","set","start","level","length","waitTimeHandler","global","setTimeout","clearTimeout","err","error","unauthorized","showLogin","view","disposer","clear","history","pushState","key","ceased","refresh","item","dispose","p","i","len","backLevel","popAndDispose","find","v","confirmClose","confirm","self","top","postMessage","type","message","elWait","elError","_loading__WEBPACK_IMPORTED_MODULE_10__","_fetchErrorView__WEBPACK_IMPORTED_MODULE_4__","assign","style","lineHeight","_components__WEBPACK_IMPORTED_MODULE_15__","map","index","visibility","Nav","local","_local__WEBPACK_IMPORTED_MODULE_6__","user","resetTest","setTesting","lang","district","_res__WEBPACK_IMPORTED_MODULE_9__","language","culture","guest","g","get","handler","ws","onWsReceiveAny","handlerId","endWsReceive","m1","m2","testMode","normalMode","msg","receive","unitRes","fetch","json","unit","unitName","envUnit","NODE_ENV","PUBLIC_URL","REACT_APP_CENTER_HOST","REACT_APP_UNIT","Number","_net__WEBPACK_IMPORTED_MODULE_7__","getPredefinedUnitName","unitId","unitFromName","settings","navSettings","hash","document","location","pos","_net_appBridge__WEBPACK_IMPORTED_MODULE_5__","hashParam","substring","startWait","url","resHost","centerHost","resUrl","wsHost","setGuest","exHash","appInFrame","parent","_net_wsChannel__WEBPACK_IMPORTED_MODULE_8__","predefinedUnit","loadPredefinedUnit","notLogined","logined","endWait","onLogined","_net_netToken__WEBPACK_IMPORTED_MODULE_3__","token","callback","connect","JSON","stringify","saveLocalUser","showAppView","defaultTop","loginTop","withBack","lv","e","then","loginView","default","logout","logoutClear","cp","ChangePasswordPage","onError","show","replace","topKey","popTo","ceaseTop","regConfirmClose","confirmBox","apiId","sheetType","sheetId","Promise","resolve","reject","sheet","includes","uh","src","open","date","toTimeString","step","__decorate","mobx__WEBPACK_IMPORTED_MODULE_1__","guestApi","uqApi","wsChannel","apiBase","appBridge","host","ViewModel","PureJSONContent","JSONContent","RowContent","mobx_react__WEBPACK_IMPORTED_MODULE_1__","_tools__WEBPACK_IMPORTED_MODULE_2__","vm","uqTokens","logoutUqTokens","appsInFrame","_unit","val","isBridged","setAppInFrame","appHash","parts","split","page","slice","getExHashPos","lastIndexOf","getExHash","appUrl","u","_uid__WEBPACK_IMPORTED_MODULE_2__","evt","data","subWin","source","_wsChannel__WEBPACK_IMPORTED_MODULE_4__","el","getElementById","hidden","hideFrameBack","lodash__WEBPACK_IMPORTED_MODULE_0___default","a","clone","_ui__WEBPACK_IMPORTED_MODULE_1__","subFrameStarted","onReceive","_uqApi__WEBPACK_IMPORTED_MODULE_3__","initSubWin","from","callId","method","body","result","directCall","callCenterApiFromMessage","bca","brideCenterApis","bridgeCenterApiReturn","apiName","db","uqOwner","uqName","uq","onReceiveAppApiMessage","action","uqTokenActions","realUrl","_host__WEBPACK_IMPORTED_MODULE_5__","getUrlOrDebugOrTest","onAppApiReturn","buildAppUq","realUnit","getUnit","uqToken","at","opener","appUq","bridgeCenterApi","scrollTimeGap","ScrollView","bottomTime","topTime","onScroll","onScrollTop","onScrollBottom","target","scrollTop","offsetHeight","scrollHeight","c","direct","children","forEach","child","_$scroll","toString","eachChild","Page","cur","tabs","tabStates","tab","t","lodash__WEBPACK_IMPORTED_MODULE_3___default","isSelected","isMounted","t0","load","footer","right","keepHeader","headerClassName","tabPosition","title","redDot","img","redDotView","cn","classnames__WEBPACK_IMPORTED_MODULE_2___default","onTabClick","pageHeader","_pageHeader__WEBPACK_IMPORTED_MODULE_4__","center","sideBar","invisible","onTouchStart","elFooter","renderTabs","renderSingle","replacer","value","substr","jsonStringify","Tv","index_module","tuidValue","nullUI","react","ttv","divObj","bi","logContent","render","controllers","boxIdContent","tv","uid","ALPHABET","ID_LENGTH","rtn","charAt","Math","floor","random","httpChannelUI_HttpChannelNavUI","channelUIs","channelNoUIs","logoutApis","uqApi_channels","uqLocalEntities","localUqs","ls","localStorage","getItem","parse","uqs","loginedUserId","isNet","un","__loadAccess","saveLocal","lodash_default","cloneDeep","removeItem","accessValue","str","setItem","isMatch","uqApi_UqApi","basePath","access","showWaiting","channels","channelUI","channel","httpChannel","acc","join","loadAccess","checkAccess","names","post","params","owner","pageStart","pageSize","order","$order","ids","put","uqApi_UnitxApi","buildChannel","centerAppApi","uqApi_CenterAppApi","unitxUq","setCenterUrl","centerToken","centerChannel","centerChannelUI","setCenterToken","userId","uqApi_CenterApiBase","path","uqTokenApi","unitParam","nowTick","tick","appUqParams","callCenterapi","appUqs","appOwner","appName","rLs","rAppOwner","rAppName","uqsPure","obj","cachedUqs","cachedId","retId","retUqs","loadAppUqs","checkUqs","Link","cLink_CLink","classnames_default","subAppWindow","setSubAppWindow","win","postWsToTop","WsBase","handlerSeed","anyHandlers","msgHandlers","seed","$type","wsBaseSeed","wsBridge","wsBaseId","WSChannel","that","WebSocket","onopen","ev","onerror","onmessage","wsMessage","onclose","close","event","postWsToSubApp","netThis","send","isDevelopment","hosts","centerhost","reshost","uqhost","unitxhost","uq-build","fetchOptions","headers","Content-Type","tryLocal","getCenterHost","startsWith","endsWith","centerUrlFromHost","centerWsFromHost","getResHost","promises","hostArr","hostValue","findIndex","fetchUrl","debugHostUrl","localCheck","results","all","j","debugHost","getUrlOrDebug","urlDebug","timeout","text","catch","Error","fetchLocalCheck","Image","classnames__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_1___default","n","_nav__WEBPACK_IMPORTED_MODULE_2__","altImage","currentTarget","_CApp__WEBPACK_IMPORTED_MODULE_0__","_form_viewModel__WEBPACK_IMPORTED_MODULE_10__","_formUI__WEBPACK_IMPORTED_MODULE_12__","PageItems","itemObservable","isFirst","loading","beforeLoad","loaded","allLoaded","firstSize","appendPosition","_items","mobx__WEBPACK_IMPORTED_MODULE_0__","array","deep","topDiv","_uid__WEBPACK_IMPORTED_MODULE_1__","bottomDiv","setPageStart","unshift","reset","more","splice","reverse","ln","Entity","typeId","fieldMaps","sys","indexOf","sName","jName","returns","f","schema","loadEntitySchema","setSchema","buildFieldsTuid","buildFieldTuid","buildArrFieldsTuid","fieldName","arrName","entities","getTuid","fn","fieldArr","toLowerCase","an","buildFieldsParams","arrResult","pa","rowResult","getIdFromObj","packRow","packArr","row","r","charCodeAt","escape","boxId","unpackRow","unpackArr","ch0","ch","fLen","to","vals","maxCacheSize","idCache_IdCache","tuidLocal","queue","cache","mobx_module","waitingIds","divName","defer","util","has","cacheTuids","moveToHead","shift","delete","_id","tuidValues","loadIds","cacheIdValues","tuids","unpackTuidIds","cacheValue","cacheTuidFieldValues","loadTuidIds","IdDivCache","div","TuidBox","alert","TuidBoxDiv","boxId_BoxId","valueFromId","boxName","isUndefined","assureBox","BoxDivId","tuidDiv_TuidDiv","idName","idCache","mainFields","cacheFields","assureObj","cacheIds","cacheFieldsInValue","unpackTuidIdsOfFields","tuid_Tuid","isImport","tuid_TuidLocal","divs","tuidDiv","setUIRes","uiDivs","hasDiv","tuidIds","tuidGet","arrValues","$id","toISOString","tuidSave","searchArr","api","tuidSearch","tuidArrGet","tuidArrSave","tuidArrPos","TuidImport","save","search","loadArr","saveArr","posArr","action_Action","pack","sheet_Sheet","states","op","ops","actions","discription","sheetSave","app","flow","sheetAction","brief","unpackSheet","flows","getSheet","getArchive","unpack","sheetArchive","sheetArchives","stateSheets","sheet_PageStateItems","stateSheetCount","s","count","mySheets","pageItems","getStateSheets","query_Query","isPaged","size","list","hasMore","startField","buildParams","unpackReturns","$page","query","table","book_Book","queryApiName","history_History","map_Map","queries","schemaFrom","keys","actionSchema","newAction","querySchema","newQuery","add","submit","del","pending_Pending","fieldDefaultValue","TuidsCache","clearCacheTimer","cacheTimer","uq_Uq","uqApp","uqData","sheets","books","maps","histories","pendings","tuidArr","actionArr","sheetArr","queryArr","bookArr","mapArr","historyArr","pendingArr","tuidsCache","baseUrl","trim","filter","net","init","accesses","buildEntities","loadEntities","buildTuids","buildAccess","entityName","newTuid","fromType","fromObj","book","pending","newBook","newMap","newHistory","newSheet","newPending","buildSheet","build","buildTuidBox","af","UqApp","tonvaAppName","collection","setLocal","tuidImport","setFrom","decodeUserToken","decodeGuestToken","jwt_decode__WEBPACK_IMPORTED_MODULE_0__","jwt_decode__WEBPACK_IMPORTED_MODULE_0___default","ItemEdit","itemSchema","uiItem","isChanged","internalStart","internalEnd","rules","nv","newValue","verifyRule","rule","Array","isArray","_form__WEBPACK_IMPORTED_MODULE_0__","_multiStep__WEBPACK_IMPORTED_MODULE_1__","vTuidMain_VTuidMain","CVEntity","onNew","onList","onSearch","openPage","link","newButton","placeholder","vTuidEdit_VTuidEdit","next","vTuidEdit_awaiter","vForm","closePage","finish","getValues","unique","setError","isCalling","returnCall","openPageElement","editView","vTuidSelect_VTuidSelect","mainView","react_default","createElement","initKey","onSearchMain","renderMainRow","clickMainRow","before","vTuidSelect_awaiter","searchMain","mainRowContent","ceasePage","showDiv","divView","renderDivRow","clickDivRow","divRowContent","showMain","rowContent","viewModel","ownerValue","divItems","getDivItems","vTuidView_VTuidView","vTuidView_awaiter","tools","buildForm","vTuidInfo_VTuidInfo","pageItems_TuidPageItems","vTuidList_VTuidListBase","vTuidList_awaiter","renderRow","clickRow","callOnSelected","rowKey","ownerId","onSelected","VTuidList","cTuid_CTuid","buildPageItems","first","cTuid_CTuidBase","cTuidEditFromName","cTuidInfoFromName","cTuidSelectFromName","VTuidMain","VTuidEdit","openVPage","onEdit","itemChanged","cTuidInfo","cTuid_CTuidInfo","cTuidEdit","CTuidEdit","edit","cTuidList","CTuidList","merge","CTuidMain","cTuid_CTuidSelect","VTuidSelect","VTuidInfo","vBand_VBand","renderContent","addRow","VFieldBand","vField","vBand_VArrBand","vArr","setAddRow","vBand_VSubmitBand","vSubmit","vSubmit_VSubmit","onClickSubmit","isOk","disabled","caption","Rule","RuleRequired","defy","NaN","RuleNum","RuleInt","isNaN","isInteger","RuleMin","min","check","RuleMax","max","vField_VField","fieldRes","buildRules","required","null","checkRules","errors","readonly","FormMode","editable","vField_decorate","vField_VInputControl","renderError","tonva_ui","ref","input","setInputValue","onFocus","onBlur","computeFields","onChange","setValue","inputGroup","suffix","ctrlCN","inputType","readOnly","maxLength","onKeyPress","RedMark","color","position","left","VStringField","KeyCode_Neg","KeyCode_Dot","vField_VNumberControl","charCode","extraChars","onKeyDot","onKeyNeg","preventDefault","_a","vField_VIntField","VDecField","VTextField","VDateTimeField","VDateField","vComputeField_VComputeField","vArr_VArr","ownerForm","onEditRow","rowPage","vArr_awaiter","valueBoxs","onRowChanged","rowValues","$owner","renderItem","showRow","editRow","editSubmitCaption","internalAddRow","newSubmitCaption","button","paddingTop","paddingBottom","arrsRes","arrRes","newSubmit","editSubmit","arrUI","vForm_VForm","buttonStyle","textAlign","paddingLeft","paddingRight","overflow","vTuidField_VTuidField","vTuidField_awaiter","showInfo","idBox","bandsBuilder_BandsBuilder","layout","formItems","bandsOnFly","bandsFromLayout","bands","bandsFromFields","bandFromArr","bandFromField","formItem","rfn","resFromName","buildVField","vFields","vArrs","onFormSubmit","buildFormValues","buildBands","bandColl","bandsBuilder","band","getVFields","getVArr","getVSubmit","rows","initValues","arrList","ctrl","valueFromFieldName","propName","buildFieldValues","buildObservableValues","vForm_decorate","HttpChannel","isCenter","hostUrl","apiToken","showError","_host__WEBPACK_IMPORTED_MODULE_2__","k","buildOptions","innerFetch","buildError","timeOutHandler","encodeURI","ok","statusText","ct","retJson","_ui_nav__WEBPACK_IMPORTED_MODULE_1__","_appBridge__WEBPACK_IMPORTED_MODULE_0__","Headers","append","resOptions","resLang","lodash__WEBPACK_IMPORTED_MODULE_0__","_","l","languages","setResOptions","control_ControlBase","formView","renderControl","hasError","filled","validate","control_Control","face","setProps","element","defaultValue","clearErrors","clearValue","isOK","getValueFromElement","notes","buttonsControl_ButtonsControl","otherClick","onOther","readValues","nothing","btnOther","submitButton","otherButton","TxtRequired","charsControl_CharsControl","parseValue","lodash","classnames","form-control","has-success","is-invalid","is-valid","renderInput","stringControl_StringControl","ErrInvalidNumber","ErrMin","ErrMax","unknownControl_UnknownControl","role","unknownControl_EmptyControl","pickIdControl_PickIdControl","pick","fromPicked","onPicked","itemFromId","initCaption","String","controlContent","component","pickIdControl_decorate","pickTuidControl_PickTuidControl","onIdChanged","onFormValues","pickTuidControl_decorate","pickControl_PickControl","pickControl_awaiter","Content","pickControl_decorate","createControl","group","groupRow","createGroupControl","fieldRow","fieldType","defaultFaces","controls","createFieldControl","help","string","password","number","parseFloat","checkbox","trueValue","falseValue","checked","radiobox","selectedIndex","selectedOptions","pick-id","pick-tuid","textarea","int","dec","bool","bootstrapCreateRow","elementCreateRow","_control__WEBPACK_IMPORTED_MODULE_1__","RowContainer","cc","control","setInitValues","ElementRowContainer","BootStrapRowContainer","refetchApi","ApiBase","getHttpChannel","callFetch","PageHeader","logoutClick","_nav__WEBPACK_IMPORTED_MODULE_1__","showLogout","navChange","hasBack","href","debugLogout","b","nick","openWindow","rightView","Badge_Badge","badge","badgeAlign","badgeVertical","LMR_LMR","cursor","LMR_decorate","FA_FA","spin","fixWidth","border","pull","pulse","rotate","flip","inverse","Muted","DefaultRow","vQueryMain_VQueryMain","resetPage","loadPage","replacePage","pageResult","queryResult","again","renderExtra","rightClose","queryRow","vQuerySelect_VQuerySelect","vQuerySelect_awaiter","selectRow","vQuerySelect_QueryPageItems","cQuery_CQueryBase","cQuery_CQuery","VQueryMain","main","cQuery_CQuerySelect","VQuerySelect","ImageItemEdit","_itemEdit__WEBPACK_IMPORTED_MODULE_7__","overSize","upload","resUploader","resId","_page__WEBPACK_IMPORTED_MODULE_6__","_resUploader__WEBPACK_IMPORTED_MODULE_3__","multiple","maxSize","padding","_image__WEBPACK_IMPORTED_MODULE_4__","_nav__WEBPACK_IMPORTED_MODULE_5__","mobx__WEBPACK_IMPORTED_MODULE_2__","userApi","_net__WEBPACK_IMPORTED_MODULE_0__","_user__WEBPACK_IMPORTED_MODULE_1__","account","verify","prop","Loading","ResUploader","files","fileInput","FormData","file","abortController","AbortController","signal","onFilesChange","CApp","cImportUqs","cUqCollection","onRowClick","selectUnitPage","appUnits","setSettings","getCUq","uqUI","CUq","_cUq__WEBPACK_IMPORTED_MODULE_3__","cUqArr","VAppMain","retErrors","_centerApi__WEBPACK_IMPORTED_MODULE_4__","userAppUnits","showUnsupport","appUnit","_uqs__WEBPACK_IMPORTED_MODULE_5__","uqAppData","promiseInits","promiseChecks","uqFullName","newCUq","addUq","checkEntities","checks","retError","setTuidImportsLocal","clearPrevPages","showMainPage","renderView","userName","uqId","sheetTypeId","getCUqFromId","navSheet","appPage","appContent","entityIcons","react__WEBPACK_IMPORTED_MODULE_0___default","ControllerUq","CenterApi","centerApi","_rule__WEBPACK_IMPORTED_MODULE_0__","_field__WEBPACK_IMPORTED_MODULE_1__","_face__WEBPACK_IMPORTED_MODULE_2__","_TonvaForm__WEBPACK_IMPORTED_MODULE_5__","FormView","tonva__WEBPACK_IMPORTED_MODULE_2__","buildRows","some","every","formRows","createRow","buildRow","buttonsRow","createButtons","_rowContainer__WEBPACK_IMPORTED_MODULE_4__","formRow","formRowCreator","_control__WEBPACK_IMPORTED_MODULE_3__","buttons","vMain_VSheetMain","newClick","schemaClick","archivesClick","sheetStateClick","renderState","getStateLabel","templet","statesCount","isDev","vNew_VSheetNew","vNew_awaiter","valuesWithBox","onSave","leftFlowStyle","width","vSheetView_VSheetView","flowRow","preState","sheetView","removed","sheetData","vEdit_VSheetEdit","vEdit_awaiter","saveSheet","controllers_form","vSheetAction_VSheetAction","actionClick","vSheetAction_awaiter","acted","deleteClick","editClick","editSheet","actionButtons","startButtons","no","stateLabel","getActionLabel","backPage","vSchema_VSheetSchema","schemaStringify","vArchives_VArchives","archiveClick","vArchives_awaiter","processing","archiveRow","getArchives","vList_VSheetList","rowClick","vList_awaiter","pageStateItems","listRow","stateName","vArchived_VArchived","vSheet_VSheet","vSaved_VSheetSaved","restart","vSaved_awaiter","vSheetProcessing_VSheetProcessing","cSheet_CSheet","cSheet_awaiter","showSaved","loadStateSheetCount","createPageStateItems","VSheetMain","onSheet","me","$","sheetActPreState","sheetActState","changeStateCount","curState","delta","stateCount","VSheetNew","sheetNew","VSheetSaved","sheetSaved","VSheetEdit","sheetEdit","VSheetSchema","VArchives","VArchived","VSheetList","VSheetAction","VSheetProcessing","showArchived","showAction","showProcessing","beforeStart","onEvent","getSheetData","vCall","inBrief","getArchived","getStateUI","actionName","sheetTitle","disc","vBookMain_VBookMain","cBook_CBook","VBookMain","vUq_VUq","isSysVisible","linkItem","cLink","lists","tuidLinks","mapLinks","sheetLinks","actionLinks","queryLinks","bookLinks","historyLinks","pendingLinks","Fragment","isVisible","controllers_link","cTuidMain","cMap","cSheet","cAction","cQuery","cBook","cHistory","cPending","lowerPropertyName","cUq_CUq","cApp","controllers_tuid","CTuidSelect","CTuidInfo","CQuery","CQuerySelect","CMap","CAction","CSheet","CBook","CHistory","controllers_history","CPending","getUI","tuidPlaceHolder","en","sheetFromTypeId","startSheet","entityType","cFromName","tUI","cEntity","VUq","vMain_VMapMain","itemRender","ItemRow","remove","valuesView","box","isLeaf","keyIndex","keyUI","keyUIs","keyContent","valuesContent","keyNone","isFrom","addClick","removeClick","inputValues_VInputValues","onValuesSubmit","inputValues_awaiter","cMap_MapItem","cMap_CMap","cMap_awaiter","keysLen","keyFields","keysLast","idx","keyField","kn","searchParam","ki","searchOnKey","arr1","nullable","rowIndex","createItem","getLable","confirmDelete","template","v0","q","retFields","newItem","addItem","VMapMain","tuidBox","callParam","vPendingMain_VPendingMain","cPending_CPending","VPendingMain","vActionMain_VActionMain","resultPage","mainPage","cAction_CAction","VActionMain","vHistoryMain_VHistoryMain","cHistory_CHistory","VHistoryMain","netToken","_uqApi__WEBPACK_IMPORTED_MODULE_0__","_wsChannel__WEBPACK_IMPORTED_MODULE_1__","Controller","_net__WEBPACK_IMPORTED_MODULE_3__","onMessageReceive","onMessage","isLogined","unregisterReceiveHandler","receiveHandlerId","onDispose","vp","registerReceiveHandler","_resolve_$","View","VPage","_schema__WEBPACK_IMPORTED_MODULE_0__","_uiSchema__WEBPACK_IMPORTED_MODULE_1__","mobileRegex","emailRegex","DropdownActions","handleDocumentClick","dropdownOpen","contains","menu","toggle","removeEventListener","isRight","hasIcon","data-toggle","aria-expanded","dropdown-menu","dropdown-menu-right","aria-hidden","EasyDate","renderDate","withTime","nDate","_date","month","year","hm","nowYear","hour","getHours","minute","getMinutes","getDate","getMonth","getFullYear","Media","_ui__WEBPACK_IMPORTED_MODULE_2__","disp","px","py","SearchBox","allowEmptySearch","inputSize","lab","inputClassName","buttonText","CacheIds","maxCount","dict","Map","loadId","_loadIds","_loadId","TonvaForm","_formView__WEBPACK_IMPORTED_MODULE_2__","MultiStep","lodash__WEBPACK_IMPORTED_MODULE_1__","lodash__WEBPACK_IMPORTED_MODULE_1___default","classnames__WEBPACK_IMPORTED_MODULE_2__","_form__WEBPACK_IMPORTED_MODULE_3__","stepViews","topView","onPrev","onNext","stepName","steps","ButtonConten","prefix","btnContent","formProps","setStep","nextStepName","num","pIcon","sIcon","RuleCustom","func","RulePredefined","rules_RuleNum","minMsg","maxMsg","checkMore","integer","widget_Widget","context","fieldProps","contextErrors","onInputChange","changeValue","container","visible","inNode","requiredFlag","FieldContainer","getUiItem","removeErrorWidget","addErrorWidget","isChanging","initData","fromElement","onChanging","onChanged","prev","allowChange","setDataValue","setElementValue","fieldClass","FieldClass","uiLabel","Templet","errorList","tag","textWidget_TextWidget","onKeyDown","internalOnKeyDown","keyCode","onEnter","blur","checkContextRules","renderTemplet","renderErrors","numberWidget_NumberWidget","updownWidget_UpdownWidget","returnValue","isValidKey","dateWidget_DateWidget","checkBoxWidget_CheckBoxWidget","defaultChecked","selectWidget_SelectWidget","option","selectWidget_decorate","radioStyle","height","idWidget_IdWidget","idWidget_awaiter","pickId","clearContextError","required-item","cursor-pointer","idWidget_decorate","Unknown","dataType","uiType","dataTypes","buttonWidget_ButtonWidget","buttonWidget_awaiter","observerRender","widget","widgetType","ButtonClass","context_Context","uiSchema","isRow","widgets","errorWidgets","subContexts","arrRowContexts","itemName","getDisabled","setDisabled","getReadOnly","setReadOnly","getVisible","setVisible","buttonName","onButtonClick","checkFieldRules","rowContext","setContextError","clearWidgetsErrors","checkHasError","clearContextErrors","context_decorate","rowKeySeed","RowContext","parentContext","arrSchema","uiArr","itemSchemas","parentData","FormContext","ContextContainer","ArrComponent","selectable","deletable","restorable","getArrRowContexts","arrLabel","ArrContainer","RowSeperator","formSelectable","formDeletable","formRestorable","arrSelectable","arrDeletable","arrRestorable","ac","rc","rs","sep","typeofTemplet","factory","selectCheck","deleteIcon","$isSelected","$source","isDeleted","$isDeleted","onDelClick","editContainer","deleted","row-selected","Provider","imageWidget_ImageWidget","imageWidget_awaiter","imageItemEdit","imageSrc","end","ui_image","imageWidget_decorate","widgetsFactory","datetime","time","email","updown","image","checkboxes","radio","range","typeWidget","getItemSchema","getTypeWidget","WidgetClass","formRes","zh","form_Form","watch","formData","calcSelectOrDelete","DefaultContainer","DefaultFieldContainer","fieldLabelSize","labelView","fieldCol","DefaultFieldClass","DefaultButtonClass","DefaultRes","ui_res","py-3","Container","formContext","initDataItem","arrItem","arrItems","arrDict","arrItemOperated","formArrVal","beforeShow","contextType","base_ListBase","selectedItems","nextProps","clickable_Clickable","static_Static","selectable_Selectable","itemsArray","compare","_selectedItems","selected","labelId","si","buildItems","anySelected","onSelect","flex","marginBottom","htmlFor","selectable_decorate","list_List","listBase","nextState","nextContext","updateProps","isLoading","staticRow","list_decorate","stringItemEdit_StringItemEdit","edit_itemEdit","preValue","verifyValue","radioItemEdit_RadioItemEdit","selectItemEdit_SelectItemEdit","edit_Edit","defaultSepClassName","defaultRowContainerClassName","divValue","requireFlag","rowContainerClassName","edit_awaiter","stopEdit","onItemChanged","onItemClick","itemEdit","createItemEdit","topBorderClassName","bottomBorderClassName","sepClassName","topBorder","bottomBorder","elItems","PropRow","row_PropBorder","borderTop","row_PropGap","w","backgroundColor","valueAlignStart","valueAlignCenter","valueAlignEnd","row_LabeledPropRow","gridProps","col","labelFixLeft","bk","bg-white","renderLabel","renderProp","align","vAlign","alignValue","renderPropBody","renderPropContent","StringPropRow","NumberPropRow","row_ListPropRow","borderBottom","row_ComponentPropRow","full","propView_PropView","isGap","PropGrid_PropGrid","propView","Tab","_content","contentBuilder","tabs_Tabs","tabClick","selectedTab","tabBack","contentBack","notify","tabName","display","notifyCircle","userSetProp","FetchErrorView","reApi","_net__WEBPACK_IMPORTED_MODULE_1__","errContent","LocalData","Data","module","exports","mainApi","tonva","toUser","fromUnit","fromApp","fellow","isOwner","isAdmin","apps","member","assigned","roles","devApi","uqsText","service","admins_Admins","store","owners","admins","fellows","unitAdmins","ua","fellowId","unitSetAdmin","removeCur","admin","unitAddAdmin","dev_ObjItems","dev","_load","_save","_inc","_del","_dec","dev_decorate","dev_Apps","searchedUqs","saveApp","delApp","counts","searchUq","searchPageSize","allUqs","appBindUq","dev_Uqs","saveUq","delUq","dev_Buses","buses","saveBus","delBus","bus","dev_Servers","servers","saveServer","delServer","server","dev_Services","services","saveService","delService","changeServiceProp","db_type","connection","loadUqServices","SearchItems","dev_Dev","searchApp","searchServer","searchUqdb","cacheIds_CacheUnits","cacheIds_CacheUqs","cacheIds_CacheApps","cacheIds_CacheServers","store_Store","cacheUnits","cacheUqs","cacheApps","cacheServers","memberCount","roleApps","roleMember","roleMembers","memberRoles","unitChangeProp","unitApps","unitMemberCount","uqServer","uqBuilderUrl","appId","unitDeleteApp","inUnit","unitAddApp","unitRoles","unitAddRole","unitRoleChangeProp","unitRoleApps","unitRoleSetApps","unitMembers","unitAssignMember","unitMemberRoles","rId","unitSetMemberRoles","org","store_decorate","store_store","NewFellow_NewFellowPage","onSendInvitation","NewFellow_awaiter","addNew","NewFellow","NewFellow_decorate","EditAdmin_EditAdmin","EditAdmin_awaiter","isRoot","unitAdmin","Fellow","Administors_EditAdmin","EditAdmin_decorate","Administors_AdministorsPage","onNewOwner","newAdmin","onNewAdmin","ownersView","adminsView","onNewFellow","showOwners","showAdmins","Administors","Administors_decorate","idDates_IdDates","date_init","date_update","span","isLink","unitSpan_UnitSpan","unitSpan_UnitInfo","unitSpan_decorate","unitSpan_UnitName","consts_appIcon","REACT_APP_ICON","appItemIcon","REACT_APP_ITEM_ICON","uqSpan_UqSpan","uqSpan_UqInfo","uqSpan_decorate","appSpan_AppSpan","appSpan_AppInfo","public","appSpan_decorate","apis","appSpan_AppRow","serverSpan_ServerSpan","serverSpan_ServerInfo","cloud","ip","serverSpan_decorate","stringValueEdit_StringValueEdit","stringValueEdit_awaiter","errorDiv","info","stringValueEdit_TextValueEdit","onTextAreaChange","idPickPage_IdPickPage","itemClick","idPickPage_awaiter","candidateItems","searchPlaceHolder","idPickPage_decorate","info_Info","renderUqRow","uqAccess","act","info_awaiter","appActed","newInUnit","restoreUnitApp","stopUnitApp","newApp","addUnitApp","uqAccesses","faName","info_decorate","new_PageApps","new_NewApp","new_awaiter","appClick","renderApp","new_decorate","Apps_AppsPage","loadApps","ban","src_Apps","Apps_decorate","newRole_NewRole","newRole_awaiter","roleApps_RoleApps","renderRoleApp","memberPage_MemberPage","renderMemberRole","setRole","memberPage_SetRole","loadRoles","loadMemberRoles","orgValue","roleUser","onAssigned","roleClick","memberPage_decorate","setMemberRoles","selectRole","renderRole","roleSelect","membersPage_MembersPage","loadMembers","MemberRow","setRoleUser","roleId","membersPage_MemberSearch","renderMember","userClick","membersPage_decorate","members","rolePage_RolePage","roleAppClick","rolePage_RoleApps","loadRoleApps","rolePage_EditRole","onMembersClick","membersLeft","membersRight","editRole","addRoleApp","rolePage_decorate","roleChangeProp","isSysRole","onNameChanged","onDiscriptionChanged","setRoleApps","appSelect","midClassName","Members_Members","newRole","allUsersClick","Members_decorate","ServerCaption","editPage_schema","editPage_EditBasePage","editPage_awaiter","moreCandidates","pickServerId","renderServerInput","itemId","editPage_EditPage","editPage_NewPage","appsPage_AppsPage","appList","listRowClick","appRow","spanCaption","appUqs_SearchUqPage","appUqs_awaiter","onUq","getMyUqs","appUqs_decorate","appUqs_AppUqs","removeBind","btnProps","appUqs_Uqs","listHeader","btn","onBind","appPage_AppPage","editItem","appPage_awaiter","deleteItem","deleteApp","menuItems","btnAddUq","uqClick","elAccess","bind_access","uqBindPage_UqBindPage","onCheckChanged","accessChecked","saveUqBind","uqBindPage_awaiter","removeUqBind","btnDelete","checkAccessList","bc","apps_AppController","apps_awaiter","service_count","buildBindUqs","isNew","uaUq","apps_decorate","groupStart","groupEnd","TextSections","sections","stop","addToGroup","addText","mayStart","uqUpload_UqUpload","upFiles","fileClick","fr","FileReader","onload","uqUpload_UqPage","readAsText","onUpdate","uqUpload_awaiter","update","onUpdateThoroughly","lastModifiedDate","trunc","sz","thoroughly","uqUpload_CompileResult","fileList","fileRender","encType","compiled","uqUpload_UqDeploy","onDeploy","onDeployThoroughly","doubleClick","pane","getParent","topIntoView","bottomIntoView","renderText","line","p0","titleIcon","collaps","prevState","whiteSpace","textSections","texts","seconds","abort","timeHandler","tagName","parentElement","clearTimeHandler","scrollIntoView","reader","total","pump","read","done","scrollToBottom","uintArray","encodedString","fromCharCode","apply","decodeURIComponent","uintToString","byteLength","consume","getReader","onDoubleClick","wordWrap","fontWeight","createIdPick_IdPickPage","newServicePage_ServerCaption","urlRow","serverRow","newServicePage_awaiter","dbTypeRow","dbRow","connectionRow","newServicePage_NewServicePage","tonvaForm","bindId","tonva_form","servicePage_ServicePage","onUrlChanged","servicePage_awaiter","changeProp","onDbChanged","onDbTypeChanged","onConnectionChanged","onDeleteClick","servicePage_decorate","editPage_formRows","uqs_editPage_EditBasePage","uqs_editPage_awaiter","uqs_editPage_EditPage","uqs_editPage_NewPage","uqPage_UQPage","uqPage_awaiter","deleteUq","onServiceClick","onUqUpload","onUqDeploy","serviceClick","btnAddService","showNewServicePage","renderService","compile_time","compile","listPage_ListPage","uqList","uqController_UQController","uqController_awaiter","loadUqEntities","uqGetEntities","r0","svc","uqController_decorate","row_Row","vice","buses_Info","buses_SchemaView","buses_decorate","repeated","ObjView_ObjView","ObjView_Info","ObjView_New","ObjView_decorate","saveCur","stepHeader","ObjView_Edit","ex","extraMenuActions","vApps_VApps","appUsers","users","appUsersList","onAppsClick","searchBox","vUsers_VUsers","userApps","userAppsList","searchUser","onUsersClick","vApp_VApp","curApp","curAppUsers","onAppEditUsers","vUser_VUser","curUser","curUserApps","onUserEditApps","vAppEditUsers_VAppEditUsers","appEditUsers","renderUser","editUser","onUserChanged","vAppEditUsers_awaiter","bindAppUser","vUserEditApps_VUserEditApps","userEditApps","editApp","onAppChanged","vUserEditApps_awaiter","bindUserApp","VAddUser_VAddUser","onSearchFocus","divUser","onAddUser","VAddUser_awaiter","userFromKey","addUser","addedPage","onAddApps","onContinueAddUser","VAddUser_decorate","cUsers_UsersController","onAppUsers","cUsers_awaiter","loadAppUsers","onUserApps","loadUserApps","unitOneAppUsers","unitOneUserApps","unitAppEditUsers","unitUserEditApps","unitAddUser","appIcon","userIcon","unitAppUsers","coll","unitUsers","cUsers_decorate","Admin_CAdmin","userAdminUnits","adminUnits","loadUnit","isProduction","loadAdminUnits","Admin_VAdmin","noUnitPage","Admin_awaiter","Admin_AdminPage","rArrow","typeCaptions","1","2","3","appsAction","usersAction","newUsersAction","adminsAction","noneAction","mid","objProps","P","loadCounts","appAction","uqAction","busAction","serverAction","Admin_UnitProps","Admin_decorate","src_App_0","cAdmin","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","react_dom","URL","origin","response","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ea4e64e4.chunk.js","sourcesContent":["export {left0} from './left0';\r\nexport * from './user';\r\nexport * from './net';\r\nexport * from './ui';\r\nexport * from './uid';\r\nexport {PageItems} from './pageItems';\r\nexport {CacheIds} from './cacheIds';\r\nexport * from './entry';\r\nexport * from './uq';\r\n","export * from './nav';\r\nexport * from './pageHeader';\r\nexport * from './page';\r\nexport * from './VM';\r\nexport * from './schema';\r\nexport * from './form';\r\nexport * from './edit';\r\nexport * from './res';\r\nexport * from './tabs';\r\nexport * from './loading';\r\nexport * from './image';\r\nexport * from './resUploader';\r\nexport * from './rules';\r\nexport * from './list';\r\nexport * from './dropDownActions';\r\nexport * from './easyDate';\r\nexport * from './propGrid';\r\nexport * from './components';\r\nexport * from './media';\r\nexport * from './searchBox';\r\n","import * as React from 'react';\r\nimport { Controller, VPage, View } from '../../ui';\r\nimport { Entity, Field } from '../uqs';\r\nimport { CUq } from './cUq/cUq';\r\nimport { VForm, FieldInputs, FieldCall, FormOptions, FormMode } from './form';\r\nimport { CQuerySelect } from './query';\r\nimport { FormUI, FieldTuidUI } from './formUI';\r\nimport { entityIcons } from './icons';\r\nimport { ControllerUq } from './ControllerUq';\r\n\r\nexport interface EntityUI {\r\n    form?: FormUI;\r\n}\r\n\r\nexport abstract class CEntity<T extends Entity, UI extends EntityUI> extends ControllerUq {\r\n    constructor(cUq: CUq, entity: T, ui: UI, res: any) {\r\n        super(cUq, res);\r\n        Object.setPrototypeOf(this.x, cUq.x);\r\n        let {name, typeName} = entity;\r\n        this.entity = entity;\r\n        this.ui = ui; // || entityUI.ui;\r\n        this.label = this.res.label || name;\r\n        this.icon = entityIcons[typeName];\r\n    }\r\n    readonly entity: T;\r\n    readonly ui: UI;\r\n\r\n    protected async beforeStart():Promise<boolean> {\r\n        //if (await super.beforeStart() === false) return false;\r\n        await this.entity.loadSchema();\r\n        return true;\r\n    }\r\n\r\n    createForm(onSubmit:()=>Promise<void>, values?:any, mode?:FormMode) {\r\n        let options = this.buildFormOptions(mode);\r\n        let ret = new VForm(options, onSubmit);\r\n        ret.setValues(values);\r\n        return ret;\r\n    }\r\n\r\n    private buildFormOptions(mode?:FormMode):FormOptions {\r\n        let {fields, arrFields} = this.entity;\r\n        let none, submitCaption, arrNewCaption, arrEditCaption, arrTitleNewButton;\r\n        if (this.res !== undefined) {\r\n            none = this.res['none'];\r\n            submitCaption = this.res['submit'];\r\n            arrNewCaption = this.res['arrNew'];\r\n            arrEditCaption = this.res['arrEdit'];\r\n            arrTitleNewButton = this.res['arrTitleNewButton'];\r\n        }\r\n        if (none === undefined) {\r\n            none = this.cUq.res['none'] || 'none';\r\n        }\r\n        if (submitCaption === undefined)\r\n            submitCaption = this.cUq.res['submit'] || 'Submit';\r\n        if (arrNewCaption === undefined)\r\n            arrNewCaption = this.cUq.res['arrNew'] || 'New';\r\n        if (arrEditCaption === undefined)\r\n            arrEditCaption = this.cUq.res['arrEdit'] || 'Edit';\r\n        if (arrTitleNewButton === undefined)\r\n        arrTitleNewButton = this.cUq.res['arrTitleNewButton'];\r\n        if (mode === undefined) mode = FormMode.new;\r\n        let formUI = this.ui.form;\r\n        let ret:FormOptions = {\r\n            fields: fields,\r\n            arrs: arrFields,\r\n            ui: formUI,\r\n            res: this.res || {},\r\n            inputs: this.buildInputs(formUI),\r\n            none: none,\r\n            submitCaption: submitCaption,\r\n            arrNewCaption: arrNewCaption,\r\n            arrEditCaption: arrEditCaption,\r\n            arrTitleNewButton: arrTitleNewButton,\r\n            mode: mode,\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private buildInputs(formUI: FormUI):FieldInputs {\r\n        let {fields, arrFields} = this.entity;\r\n        let ret:FieldInputs = {};\r\n        this.buildFieldsInputs(ret, fields, undefined, formUI);\r\n        if (arrFields !== undefined) {\r\n            for (let arr of arrFields) {\r\n                let {name, fields} = arr;\r\n                let items = formUI && formUI.items;\r\n                this.buildFieldsInputs(ret, fields, name, items && items[name] as FormUI);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private buildFieldsInputs(ret:FieldInputs, fields:Field[], arr:string, formUI: FormUI) {\r\n        if (arr !== undefined) {\r\n            let arrFieldInputs = ret[arr];\r\n            if (arrFieldInputs === undefined) {\r\n                ret[arr] = arrFieldInputs = {};\r\n                ret = arrFieldInputs;\r\n            }\r\n        }\r\n        for (let field of fields) {\r\n            let {name, _tuid} = field;\r\n            if (_tuid === undefined) continue;\r\n            let {tuid} = _tuid;\r\n            let fieldUI = formUI && formUI.items && formUI.items[name] as FieldTuidUI;\r\n            ret[name] = {\r\n                select: this.buildSelect(field, arr, fieldUI),\r\n                content: this.buildContent(field, arr),\r\n                placeHolder: this.cUq.getTuidPlaceHolder(tuid),\r\n            };\r\n        }\r\n    }\r\n\r\n    protected buildSelect(field:Field, arr:string, fieldUI: FieldTuidUI):FieldCall {\r\n        return async (form:VForm, field:Field, values:any):Promise<any> => {\r\n            let {_tuid } = field;\r\n            let {tuid, ownerField} = _tuid;\r\n            let cTuidSelect = undefined; // await tuid.cSelectFrom();\r\n            let param:any = undefined;\r\n            if (ownerField !== undefined) param = form.getValue(ownerField.name);\r\n            if (fieldUI && fieldUI.autoList === true) {\r\n                console.log('select search set param=empty string');\r\n                param = '';\r\n            }\r\n            let ret = await cTuidSelect.call(param);\r\n            cTuidSelect.removeCeased(); // 清除已经废弃的顶部页面\r\n            if (ret === undefined) return undefined;\r\n            let id = cTuidSelect.idFromItem(ret);\r\n            _tuid.useId(id);\r\n            return id;\r\n        };\r\n    }\r\n\r\n    protected buildContent(field:Field, arr:string): React.StatelessComponent<any> {\r\n        return;\r\n    }\r\n\r\n    cQuerySelect(queryName:string):CQuerySelect {\r\n        return this.cUq.cQuerySelect(queryName);\r\n    }\r\n}\r\n\r\nexport abstract class VEntity<T extends Entity, UI extends EntityUI, C extends CEntity<T, UI>> extends VPage<C> {\r\n    protected readonly entity: T;\r\n    protected readonly ui: UI;\r\n    constructor(controller: C) {\r\n        super(controller);\r\n        this.entity = controller.entity;\r\n        this.ui = controller.ui;\r\n    }\r\n\r\n    get label():string {return this.controller.label}\r\n\r\n    //private _form_$: VForm;\r\n    protected createForm(onSubmit:()=>Promise<void>, values?:any, mode?:FormMode): VForm {\r\n        //if (this._form_$ !== undefined) return this._form_$;\r\n        return this.controller.createForm(onSubmit, values, mode);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable, has} from 'mobx';\r\nimport {User, Guest/*, UserInNav*/} from '../user';\r\nimport {Page} from './page';\r\nimport {netToken} from '../net/netToken';\r\nimport FetchErrorView from './fetchErrorView';\r\nimport {FetchError} from '../fetchError';\r\nimport {appUrl, setAppInFrame, getExHash, getExHashPos} from '../net/appBridge';\r\nimport {LocalData} from '../local';\r\nimport {guestApi, logoutApis, setCenterUrl, setCenterToken, WSChannel, appInFrame, isDevelopment, host} from '../net';\r\nimport { WsBase, wsBridge } from '../net/wsChannel';\r\nimport { resOptions } from './res';\r\nimport { Loading } from './loading';\r\n\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport '../css/va-form.css';\r\nimport '../css/va.css';\r\nimport '../css/animation.css';\r\nimport { FA } from './components';\r\n\r\nconst regEx = new RegExp('Android|webOS|iPhone|iPad|' +\r\n    'BlackBerry|Windows Phone|'  +\r\n    'Opera Mini|IEMobile|Mobile' , \r\n    'i');\r\nconst isMobile = regEx.test(navigator.userAgent);\r\n/*\r\nexport const mobileHeaderStyle = isMobile? {\r\n    minHeight:  '3em'\r\n} : undefined;\r\n*/\r\nconst logo = require('../img/logo.svg');\r\nlet logMark: number;\r\nconst logs:string[] = [];\r\n\r\nexport interface Props //extends React.Props<Nav>\r\n{\r\n    //view: JSX.Element | (()=>JSX.Element);\r\n    //start?: ()=>Promise<void>;\r\n    onLogined: ()=>Promise<void>;\r\n    notLogined?: ()=>Promise<void>;\r\n};\r\nlet stackKey = 1;\r\nexport interface StackItem {\r\n    key: number;\r\n    view: JSX.Element;\r\n    ceased: boolean;\r\n    confirmClose?: ()=>Promise<boolean>;\r\n    disposer?: ()=>void;\r\n}\r\nexport interface NavViewState {\r\n    stack: StackItem[];\r\n    wait: 0|1|2;\r\n    fetchError: FetchError\r\n}\r\n\r\nexport class NavView extends React.Component<Props, NavViewState> {\r\n    private stack: StackItem[];\r\n    private htmlTitle: string;\r\n    private waitCount: number = 0;\r\n    private waitTimeHandler?: NodeJS.Timer;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.back = this.back.bind(this);\r\n        this.navBack = this.navBack.bind(this);\r\n        this.stack = [];\r\n        this.state = {\r\n            stack: this.stack,\r\n            wait: 0,\r\n            fetchError: undefined\r\n        };\r\n    }\r\n    async componentWillMount() {\r\n        window.addEventListener('popstate', this.navBack);\r\n    }\r\n\r\n    async componentDidMount()\r\n    {\r\n        nav.set(this);\r\n        /*\r\n        let start = this.props.start;\r\n        if (start !== undefined) {\r\n            await start();\r\n        }\r\n        else {\r\n        */\r\n            await nav.start();\r\n        //}\r\n    }\r\n\r\n    get level(): number {\r\n        return this.stack.length;\r\n    }\r\n\r\n    startWait() {\r\n        if (this.waitCount === 0) {\r\n            this.setState({wait: 1});\r\n            this.waitTimeHandler = global.setTimeout(\r\n                () => {\r\n                    this.waitTimeHandler = undefined;\r\n                    this.setState({wait: 2});\r\n                },\r\n                1000) as NodeJS.Timer;\r\n        }\r\n        ++this.waitCount;\r\n        this.setState({\r\n            fetchError: undefined,\r\n        });\r\n    }\r\n\r\n    endWait() {\r\n        setTimeout(() => {\r\n            /*\r\n            this.setState({\r\n                fetchError: undefined,\r\n            });*/\r\n            --this.waitCount;\r\n            if (this.waitCount === 0) {\r\n                if (this.waitTimeHandler !== undefined) {\r\n                    clearTimeout(this.waitTimeHandler);\r\n                    this.waitTimeHandler = undefined;\r\n                }\r\n                this.setState({wait: 0});\r\n            }\r\n        },100);\r\n    }\r\n\r\n    async onError(fetchError: FetchError)\r\n    {\r\n        let err = fetchError.error;\r\n        if (err !== undefined && err.unauthorized === true) {\r\n            await nav.showLogin(undefined);\r\n            return;\r\n        }\r\n        this.setState({\r\n            fetchError: fetchError,\r\n        });\r\n    }\r\n\r\n    show(view: JSX.Element, disposer?: ()=>void): number {\r\n        this.clear();\r\n        return this.push(view, disposer);\r\n    }\r\n\r\n    push(view: JSX.Element, disposer?: ()=>void): number {\r\n        this.removeCeased();\r\n        if (this.stack.length > 0) {\r\n            window.history.pushState('forward', null, null);\r\n        }\r\n        let key = stackKey++;\r\n        this.stack.push({\r\n            key: key,\r\n            view: view, \r\n            ceased: false,\r\n            disposer: disposer\r\n        });\r\n        this.refresh();\r\n        //console.log('push: %s pages', this.stack.length);\r\n        return key;\r\n    }\r\n\r\n    replace(view: JSX.Element, disposer?: ()=>void): number {\r\n        let item:StackItem = undefined;\r\n        let stack = this.stack;\r\n        if (stack.length > 0) {\r\n            item = stack.pop();\r\n            //this.popAndDispose();\r\n        }\r\n        let key = stackKey++;\r\n        this.stack.push({\r\n            key: key, \r\n            view: view, \r\n            ceased: false,\r\n            disposer: disposer\r\n        });\r\n        if (item !== undefined) this.dispose(item.disposer);\r\n        this.refresh();\r\n        //console.log('replace: %s pages', this.stack.length);\r\n        return key;\r\n    }\r\n\r\n    ceaseTop(level:number = 1) {\r\n        let p = this.stack.length - 1;\r\n        for (let i=0; i<level; i++, p--) {\r\n            if (p < 0) break;\r\n            let item = this.stack[p];\r\n            item.ceased = true;\r\n        }\r\n    }\r\n\r\n    pop(level:number = 1) {\r\n        let stack = this.stack;\r\n        let len = stack.length;\r\n        //console.log('pop start: %s pages level=%s', len, level);\r\n        if (level <= 0 || len <= 1) return;\r\n        if (len < level) level = len;\r\n        let backLevel = 0;\r\n        for (let i = 0; i < level; i++) {\r\n            if (stack.length === 0) break;\r\n            //stack.pop();\r\n            this.popAndDispose();\r\n            ++backLevel;\r\n        }\r\n        if (backLevel >= len) backLevel--;\r\n        this.refresh();\r\n        if (this.isHistoryBack !== true) {\r\n            //window.removeEventListener('popstate', this.navBack);\r\n            //window.history.back(backLevel);\r\n            //window.addEventListener('popstate', this.navBack);\r\n        }\r\n        //console.log('pop: %s pages', stack.length);\r\n    }\r\n\r\n    popTo(key: number) {\r\n        if (key === undefined) return;\r\n        if (this.stack.find(v => v.key === key) === undefined) return;\r\n        while (this.stack.length >0) {\r\n            let len = this.stack.length;\r\n            let top = this.stack[len-1];\r\n            if (top.key === key) break;\r\n            this.pop();\r\n        }\r\n    }\r\n\r\n    topKey():number {\r\n        let len = this.stack.length;\r\n        if (len === 0) return undefined;\r\n        return this.stack[len-1].key;\r\n    }\r\n\r\n    removeCeased() {\r\n        for (;;) {\r\n            let p=this.stack.length-1;\r\n            if (p < 0) break;\r\n            let top = this.stack[p];\r\n            if (top.ceased === false) break;\r\n            let item = this.stack.pop();\r\n            let {disposer} = item;\r\n            this.dispose(disposer);\r\n        }\r\n        this.refresh();\r\n    }\r\n\r\n    private popAndDispose() {\r\n        this.removeCeased();\r\n        let item = this.stack.pop();\r\n        if (item === undefined) return;\r\n        let {disposer} = item;\r\n        this.dispose(disposer);\r\n        this.removeCeased();\r\n        return item;\r\n    }\r\n\r\n    private dispose(disposer:()=>void) {\r\n        if (disposer === undefined) return;\r\n        let item = this.stack.find(v => v.disposer === disposer);\r\n        if (item === undefined) disposer();\r\n    }\r\n\r\n    clear() {\r\n        let len = this.stack.length;\r\n        while (this.stack.length > 0) this.popAndDispose();\r\n        //this.refresh();\r\n        if (len > 1) {\r\n            //window.removeEventListener('popstate', this.navBack);\r\n            //window.history.back(len-1);\r\n            //window.addEventListener('popstate', this.navBack);\r\n        }\r\n    }\r\n\r\n    regConfirmClose(confirmClose:()=>Promise<boolean>) {\r\n        let stack = this.stack;\r\n        let len = stack.length;\r\n        if (len === 0) return;\r\n        let top = stack[len-1];\r\n        top.confirmClose = confirmClose;\r\n    }\r\n\r\n    private isHistoryBack:boolean = false;\r\n    navBack() {\r\n        nav.log('backbutton pressed - nav level: ' + this.stack.length);\r\n        this.isHistoryBack = true;\r\n        this.back(true);\r\n        this.isHistoryBack = false;\r\n    }\r\n\r\n    async back(confirm:boolean = true) {\r\n        let stack = this.stack;\r\n        let len = stack.length;\r\n        if (len === 0) return;\r\n        if (len === 1) {\r\n            if (self != window.top) {\r\n                window.top.postMessage({type:'pop-app'}, '*');\r\n            }\r\n            return;\r\n        }\r\n        let top = stack[len-1];\r\n        if (confirm===true && top.confirmClose) {\r\n            if (await top.confirmClose()===true) this.pop();\r\n        }\r\n        else {\r\n            this.pop();\r\n        }\r\n    }\r\n\r\n    confirmBox(message?:string): boolean {\r\n        return window.confirm(message);\r\n    }\r\n    clearError = () => {\r\n        this.setState({fetchError: undefined});\r\n    }\r\n    private clickCount = 0;\r\n    private firstClick: Date;\r\n    private onClick = () => {\r\n        if (this.clickCount >= 5) {\r\n            if (Date.now() - this.firstClick.getTime() < 5000) {\r\n                nav.reverseTest();\r\n            }\r\n            this.clickCount = 0;\r\n            return;\r\n        }\r\n        if (this.clickCount === 0) {\r\n            this.firstClick = new Date();\r\n        }\r\n        else if (Date.now() - this.firstClick.getTime() >= 5000) {\r\n            this.clickCount = 0;\r\n            this.firstClick = new Date();\r\n        }\r\n        ++this.clickCount;\r\n    }\r\n    private onTestClick = () => {\r\n        nav.testing = false;\r\n        nav.push(<Page header={false}>\r\n            <div className=\"m-5 border border-info bg-white rounded p-4 text-center\">\r\n                <div>当前运行在测试模式</div>\r\n                <div className=\"mt-4\">\r\n                    <button className=\"btn btn-danger\" onClick={nav.toNormal}>正常模式</button>\r\n                    <button className=\"btn btn-outline-info ml-3\" onClick={()=>{nav.testing=true;this.pop()}}>测试模式</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n    }\r\n    render() {\r\n        const {wait, fetchError} = this.state;\r\n        let stack = this.state.stack;\r\n        let top = stack.length - 1;\r\n        let elWait = null, elError = null;\r\n        switch (wait) {\r\n            case 1:\r\n                elWait = <li className=\"va-wait va-wait1\">\r\n                </li>;\r\n                break;\r\n            case 2:\r\n                elWait = <li className=\"va-wait va-wait2\">\r\n                    <Loading />\r\n                </li>;\r\n                break;\r\n                //<i className=\"fa fa-spinner fa-spin fa-3x fa-fw\"></i>\r\n                //<span className=\"sr-only\">Loading...</span>\r\n        }\r\n        if (fetchError)\r\n            elError = <FetchErrorView clearError={this.clearError} {...fetchError} />\r\n        let test = nav.testing===true && \r\n            <span className=\"cursor-pointer position-absolute\" style={{lineHeight:0}}\r\n                onClick={this.onTestClick}>\r\n                <FA className=\"text-warning\" name=\"info-circle\" />\r\n            </span>;\r\n        return (\r\n        <ul className=\"va\" onClick={this.onClick}>\r\n            {\r\n                stack.map((item, index) => {\r\n                    let {key, view} = item;\r\n                    return <li key={key} style={index<top? {visibility: 'hidden'}:undefined}>\r\n                        {view}\r\n                    </li>\r\n                })\r\n            }\r\n            {elWait}\r\n            {elError}\r\n            {test}\r\n        </ul>\r\n        );\r\n    }\r\n\r\n    private refresh() {\r\n        // this.setState({flag: !this.state.flag});\r\n        this.setState({stack: this.stack });\r\n        // this.forceUpdate();\r\n    }\r\n}\r\n\r\nexport interface NavSettings {\r\n    loginTop?: JSX.Element;\r\n}\r\n\r\nexport class Nav {\r\n    private nav:NavView;\r\n    private ws: WsBase;\r\n    private wsHost: string;\r\n    private local: LocalData = new LocalData();\r\n    private navSettings: NavSettings;\r\n    @observable user: User/*InNav*/ = undefined;\r\n    @observable testing: boolean;\r\n    language: string;\r\n    culture: string;\r\n    resUrl: string;\r\n\r\n    constructor() {\r\n        let {lang, district} = resOptions;\r\n        this.language = lang;\r\n        this.culture = district;\r\n        this.testing = false;\r\n    }\r\n\r\n    get guest(): number {\r\n        let guest = this.local.guest;\r\n        if (guest === undefined) return 0;\r\n        let g = guest.get();\r\n        if (g === undefined) return 0;\r\n        return g.guest;\r\n    }\r\n\r\n    set(nav:NavView) {\r\n        //this.logo = logo;\r\n        this.nav = nav;\r\n    }\r\n\r\n    registerReceiveHandler(handler: (message:any)=>Promise<void>):number {\r\n        if (this.ws === undefined) return;\r\n        return this.ws.onWsReceiveAny(handler);\r\n    }\r\n\r\n    unregisterReceiveHandler(handlerId:number) {\r\n        if (this.ws === undefined) return;\r\n        if (handlerId === undefined) return;\r\n        this.ws.endWsReceive(handlerId);\r\n    }\r\n\r\n    private static testMode = '测试';\r\n    private static normalMode = '正常';\r\n    private setTesting(testing:boolean) {\r\n        this.testing = testing;\r\n        this.local.testing.set(testing);\r\n    };\r\n    private resetTest = () => {\r\n        this.setTesting(!this.testing);\r\n        //this.pop();\r\n        this.start();\r\n    }\r\n    toNormal = () => {\r\n        this.setTesting(false);\r\n        this.start();\r\n    }\r\n    reverseTest() {\r\n        let m1:string, m2:string;\r\n        if (this.testing === true) {\r\n            m1 = Nav.testMode;\r\n            m2 = Nav.normalMode;\r\n        }\r\n        else {\r\n            m1 = Nav.normalMode;\r\n            m2 = Nav.testMode;\r\n        }\r\n\r\n        this.push(<Page back=\"close\" header={false}>\r\n            <div className=\"m-5 border border-info bg-white rounded p-4 text-center\">\r\n                <div>\r\n                    <p>从{m1}模式切换到{m2}模式吗?</p>\r\n                    <p className=\"small text-muted\">测试模式下，页面左上角会有一个 <FA className=\"text-warning\" name=\"info-circle\" /></p>\r\n                </div>\r\n                <div className=\"mt-4\">\r\n                    <button className=\"btn btn-danger\" onClick={this.resetTest}>切换</button>\r\n                    <button className=\"btn btn-outline-info ml-3\" onClick={()=>this.pop()}>取消</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n    }\r\n\r\n    async onReceive(msg:any) {\r\n        if (this.ws === undefined) return;\r\n        await this.ws.receive(msg);\r\n    }\r\n\r\n    private async getPredefinedUnitName() {\r\n        try {\r\n            let unitRes = await fetch('unit.json', {});\r\n            //if (unitRes)\r\n            let res = await unitRes.json();\r\n            return res.unit;\r\n        }\r\n        catch (err) {\r\n            this.local.unit.clear();\r\n            return;\r\n        }\r\n    }\r\n\r\n    private async loadPredefinedUnit() {\r\n        let envUnit = process.env.REACT_APP_UNIT;\r\n        if (envUnit !== undefined) {\r\n            return Number(envUnit);\r\n        }\r\n        let unitName:string;\r\n        let unit = this.local.unit.get();\r\n        if (unit !== undefined) {\r\n            if (isDevelopment !== true) return unit.id;\r\n            unitName = await this.getPredefinedUnitName();\r\n            if (unitName === undefined) return;\r\n            if (unit.name === unitName) return unit.id;\r\n        }\r\n        else {\r\n            unitName = await this.getPredefinedUnitName();\r\n            if (unitName === undefined) return;\r\n        }\r\n        let unitId = await guestApi.unitFromName(unitName);\r\n        if (unitId !== undefined) {\r\n            this.local.unit.set({id: unitId, name: unitName});\r\n        }\r\n        return unitId;\r\n    }\r\n\r\n    setSettings(settings?: NavSettings) {\r\n        this.navSettings = settings;\r\n    }\r\n\r\n    hashParam: string;\r\n    private centerHost: string;\r\n    async start() {\r\n        try {\r\n            this.testing = this.local.testing.get();\r\n            await host.start(this.testing);\r\n            let hash = document.location.hash;\r\n            if (hash !== undefined && hash.length > 0) {\r\n                let pos = getExHashPos();\r\n                if (pos < 0) pos = undefined;\r\n                this.hashParam = hash.substring(1, pos);\r\n            }\r\n            nav.clear();\r\n            this.startWait();\r\n            let {url, ws, resHost} = host;\r\n            this.centerHost = url;\r\n            this.resUrl = 'http://' + resHost + '/res/';\r\n            this.wsHost = ws;\r\n            setCenterUrl(url);\r\n            \r\n            let guest:Guest = this.local.guest.get();\r\n            if (guest === undefined) {\r\n                guest = await guestApi.guest();\r\n            }\r\n            nav.setGuest(guest);\r\n\r\n            let exHash = getExHash();\r\n            let appInFrame = setAppInFrame(exHash);\r\n            if (exHash !== undefined && window !== window.parent) {\r\n                // is in frame\r\n                if (appInFrame !== undefined) {\r\n                    this.ws = wsBridge;\r\n                    console.log('this.ws = wsBridge in sub frame');\r\n                    //nav.user = {id:0} as User;\r\n                    if (self !== window.parent) {\r\n                        window.parent.postMessage({type:'sub-frame-started', hash: appInFrame.hash}, '*');\r\n                    }\r\n                    // 下面这一句，已经移到 appBridge.ts 里面的 initSubWin，也就是响应从main frame获得user之后开始。\r\n                    //await this.showAppView();\r\n                    return;\r\n                }\r\n            }\r\n\r\n            let predefinedUnit = await this.loadPredefinedUnit();\r\n            appInFrame.predefinedUnit = predefinedUnit;\r\n\r\n            let user: User = this.local.user.get();\r\n            if (user === undefined) {\r\n                let {notLogined} = this.nav.props;\r\n                if (notLogined !== undefined) {\r\n                    await notLogined();\r\n                }\r\n                else {\r\n                    await nav.showLogin(undefined);\r\n                }\r\n                return;\r\n            }\r\n\r\n            await nav.logined(user);\r\n        }\r\n        catch (err) {\r\n        }\r\n        finally {\r\n            this.endWait();\r\n        }\r\n    }\r\n\r\n    async showAppView() {\r\n        let {onLogined} = this.nav.props;\r\n        if (onLogined === undefined) {\r\n            nav.push(<div>NavView has no prop onLogined</div>);\r\n            return;\r\n        }\r\n        nav.clear();\r\n        await onLogined();\r\n        console.log('logined: AppView shown');\r\n    }\r\n\r\n    setGuest(guest: Guest) {\r\n        this.local.guest.set(guest);\r\n        netToken.set(0, guest.token);\r\n    }\r\n\r\n    saveLocalUser() {\r\n        this.local.user.set(this.user);\r\n    }\r\n\r\n    async logined(user: User, callback?: (user:User)=>Promise<void>) {\r\n        logoutApis();\r\n        let ws:WSChannel = this.ws = new WSChannel(this.wsHost, user.token);\r\n        ws.connect();\r\n\r\n        console.log(\"logined: %s\", JSON.stringify(user));\r\n        this.user = user;\r\n        this.saveLocalUser();\r\n        netToken.set(user.id, user.token);\r\n        if (callback !== undefined) //this.loginCallbacks.has)\r\n            callback(user);\r\n            //this.loginCallbacks.call(user);\r\n        else {\r\n            await this.showAppView();\r\n        }\r\n    }\r\n\r\n    loginTop(defaultTop:JSX.Element) {\r\n        return (this.navSettings && this.navSettings.loginTop) || defaultTop;\r\n    }\r\n\r\n    async showLogin(callback?: (user:User)=>Promise<void>, withBack?:boolean) {\r\n        let lv = await import('../entry/login');\r\n        let loginView = <lv.default \r\n            withBack={withBack} \r\n            callback={callback} />;\r\n        if (withBack !== true) {\r\n            this.nav.clear();\r\n            this.pop();\r\n        }\r\n        this.nav.push(loginView);\r\n    }\r\n\r\n    async showLogout(callback?: ()=>Promise<void>) {\r\n        nav.push(<Page header=\"安全退出\" back=\"close\">\r\n            <div className=\"m-5 border border-info bg-white rounded p-3 text-center\">\r\n                <div>退出当前账号不会删除任何历史数据，下次登录依然可以使用本账号</div>\r\n                <div className=\"mt-3\">\r\n                    <button className=\"btn btn-danger\" onClick={()=>this.logout(callback)}>退出</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n    }\r\n\r\n    async logout(callback?:()=>Promise<void>) { //notShowLogin?:boolean) {\r\n        appInFrame.unit = undefined;\r\n        this.local.logoutClear();\r\n        this.user = undefined; //{} as User;\r\n        logoutApis();\r\n        let guest = this.local.guest.get();\r\n        setCenterToken(0, guest && guest.token);\r\n        this.ws = undefined;\r\n        /*\r\n        if (this.loginCallbacks.has)\r\n            this.logoutCallbacks.call();\r\n        else {\r\n            if (notShowLogin === true) return;\r\n        }\r\n        await nav.start();\r\n        */\r\n        if (callback === undefined)\r\n            await nav.start();\r\n        else\r\n            await callback();\r\n    }\r\n\r\n    async changePassword() {\r\n        let cp = await import('../entry/changePassword');\r\n        nav.push(<cp.ChangePasswordPage />);\r\n    }\r\n\r\n    get level(): number {\r\n        return this.nav.level;\r\n    }\r\n    startWait() {\r\n        this.nav.startWait();\r\n    }\r\n    endWait() {\r\n        this.nav.endWait();\r\n    }\r\n    async onError(error: FetchError) {\r\n        await this.nav.onError(error);\r\n    }\r\n    show (view: JSX.Element, disposer?: ()=>void): void {\r\n        this.nav.show(view, disposer);\r\n    }\r\n    push(view: JSX.Element, disposer?: ()=>void): void {\r\n        this.nav.push(view, disposer);\r\n    }\r\n    replace(view: JSX.Element, disposer?: ()=>void): void {\r\n        this.nav.replace(view, disposer);\r\n    }\r\n    pop(level:number = 1) {\r\n        this.nav.pop(level);\r\n    }\r\n    topKey():number {\r\n        return this.nav.topKey();\r\n    }\r\n    popTo(key:number) {\r\n        this.nav.popTo(key);\r\n    }\r\n    clear() {\r\n        this.nav.clear();\r\n    }\r\n    navBack() {\r\n        this.nav.navBack();\r\n    }\r\n    ceaseTop(level?:number) {\r\n        this.nav.ceaseTop(level);\r\n    }\r\n    removeCeased() {\r\n        this.nav.removeCeased();\r\n    }\r\n    async back(confirm:boolean = true) {\r\n        await this.nav.back(confirm);\r\n    }\r\n    regConfirmClose(confirmClose: ()=>Promise<boolean>) {\r\n        this.nav.regConfirmClose(confirmClose);\r\n    }\r\n    confirmBox(message?:string): boolean {\r\n        return this.nav.confirmBox(message);\r\n    }\r\n    async navToApp(url: string, unitId: number, apiId?:number, sheetType?:number, sheetId?:number):Promise<void> {\r\n        return new Promise<void>((resolve, reject) => {\r\n            let sheet = this.centerHost.includes('http://localhost:') === true? 'sheet_debug':'sheet'\r\n            let uh = sheetId === undefined?\r\n                    appUrl(url, unitId) :\r\n                    appUrl(url, unitId, sheet, [apiId, sheetType, sheetId]);\r\n            console.log('navToApp: %s', JSON.stringify(uh));\r\n            nav.push(<article className='app-container'>\r\n                <span id={uh.hash} onClick={()=>this.back()} /*style={mobileHeaderStyle}*/>\r\n                    <i className=\"fa fa-arrow-left\" />\r\n                </span>\r\n                <iframe src={uh.url} />\r\n            </article>, \r\n            ()=> {\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n\r\n    navToSite(url: string) {\r\n        // show in new window\r\n        window.open(url);\r\n    }\r\n\r\n    get logs() {return logs};\r\n    log(msg:string) {\r\n        logs.push(msg);\r\n    }\r\n    logMark() {\r\n        let date = new Date();\r\n        logMark = date.getTime();\r\n        logs.push('log-mark: ' + date.toTimeString());\r\n    }\r\n    logStep(step:string) {\r\n        logs.push(step + ': ' + (new Date().getTime() - logMark));\r\n    }\r\n}\r\nexport const nav: Nav = new Nav();\r\n","import { decodeGuestToken } from '../user';\r\nimport { CenterApiBase } from './uqApi';\r\n\r\nexport class GuestApi extends CenterApiBase {\r\n    async guest(): Promise<any> {\r\n        //let guest = nav.local.guest.get();\r\n        let ret = await this.get('', {});\r\n        switch (typeof ret) {\r\n            default: return;\r\n            case 'string': return decodeGuestToken(ret);\r\n            case 'object':\r\n                let guest = decodeGuestToken(ret.token);\r\n                return guest;\r\n        }\r\n    }\r\n\r\n    async unitFromName(unitName:string): Promise<number> {\r\n        let ret = await this.get(unitName);\r\n        return ret && ret.unit;\r\n    }\r\n}\r\n\r\nexport const guestApi = new GuestApi('tv/guest/', undefined);\r\n","export {WSChannel, wsBridge, postWsToTop} from './wsChannel';\r\nexport * from './apiBase';\r\nexport * from './guestApi';\r\nexport * from './uqApi';\r\nexport {appInFrame, isBridged, getExHash} from './appBridge';\r\nexport * from './host';\r\nexport {httpGet} from './httpChannel';\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { jsonStringify } from '../../tools';\r\n\r\nexport type TypeViewModel = typeof ViewModel;\r\nexport type TypeView = React.StatelessComponent<{vm: ViewModel, className?:string|string[]}>;\r\nexport type TypeContent = React.StatelessComponent<any>;\r\n\r\nexport abstract class ViewModel {\r\n    protected abstract get view(): TypeView;\r\n    render(className?:string|string[]):JSX.Element {\r\n        if (this.view === undefined) return <div>??? viewModel 必须定义 view ???</div>\r\n        return React.createElement(this.view, {vm: this, className:className});\r\n    }\r\n}\r\n\r\nexport const PureJSONContent = (values:any, x?:any) => {\r\n    return <>content: {jsonStringify(values)}</>;\r\n}\r\nexport const JSONContent = observer(PureJSONContent);\r\nexport const RowContent = \r\n    (values:any) => <div className=\"px-3 py-2\">{jsonStringify(values)}</div>\r\n;\r\n","import _ from 'lodash';\r\nimport {nav} from '../ui';\r\nimport {uid} from '../uid';\r\nimport {uqTokenApi as uqTokenApi, callCenterapi, CenterAppApi, UqData, centerToken, UqAppData, setCenterToken} from './uqApi';\r\nimport {setSubAppWindow} from './wsChannel';\r\nimport { host } from './host';\r\n\r\nexport interface UqToken {\r\n    name: string;\r\n    db: string;\r\n    url: string;\r\n    token: string;\r\n}\r\nconst uqTokens:{[uqName:string]: UqToken}  = {};\r\nexport function logoutUqTokens() {\r\n    for (let i in uqTokens) uqTokens[i] = undefined;\r\n}\r\n\r\nexport interface AppInFrame {\r\n    hash: string;\r\n    unit: number;       // unit id\r\n    page?: string;\r\n    param?: string[];\r\n    predefinedUnit?: number;  // 比如像Cart这样的应用，直接让用户访问的，就需要在unit.json里面定义unitName\r\n}\r\nconst appsInFrame:{[key:string]:AppInFrame} = {};\r\n\r\nclass AppInFrameClass implements AppInFrame {\r\n    hash: string;\r\n    private _unit: number;\r\n    get unit(): number {return this._unit;}       // unit id\r\n    set unit(val:number) { this._unit=val;}\r\n    page?: string;\r\n    param?: string[];\r\n}\r\n\r\nexport let appInFrame:AppInFrame = new AppInFrameClass();\r\n/* {\r\n    hash: undefined,\r\n    get unit():number {return } undefined, //debugUnitId,\r\n    page: undefined;\r\n    param: undefined,\r\n}*/\r\n\r\nexport function isBridged():boolean {\r\n    return self !== window.parent;\r\n}\r\n\r\nwindow.addEventListener('message', async function(evt) {\r\n    var message = evt.data;\r\n    switch (message.type) {\r\n        case 'sub-frame-started':\r\n            subFrameStarted(evt);\r\n            break;\r\n        case 'ws':\r\n            //wsBridge.receive(message.msg);\r\n            await nav.onReceive(message.msg);\r\n            break;\r\n        case 'init-sub-win':\r\n            await initSubWin(message);\r\n            break;\r\n        case 'pop-app':\r\n            nav.navBack();\r\n            break;\r\n        case 'center-api':\r\n            await callCenterApiFromMessage(evt.source as Window, message);\r\n            break;\r\n        case 'center-api-return':\r\n            bridgeCenterApiReturn(message);\r\n            break;\r\n        case 'app-api':\r\n            let ret = await onReceiveAppApiMessage(message.hash, message.apiName);\r\n            (evt.source as Window).postMessage({\r\n                type: 'app-api-return', \r\n                apiName: message.apiName,\r\n                db: ret.db,\r\n                url: ret.url,\r\n                token: ret.token} as any, \"*\");\r\n            break;\r\n        case 'app-api-return':\r\n            console.log(\"app-api-return: %s\", JSON.stringify(message));\r\n            console.log('await onAppApiReturn(message);');\r\n            await onAppApiReturn(message);\r\n            break;\r\n        default:\r\n            this.console.log('message: %s', JSON.stringify(message));\r\n            break;\r\n    }\r\n});\r\n\r\nfunction subFrameStarted(evt:any) {\r\n    var message = evt.data;\r\n    let subWin = evt.source as Window;\r\n    setSubAppWindow(subWin);\r\n    hideFrameBack(message.hash);\r\n    let msg:any = _.clone(nav.user);\r\n    msg.type = 'init-sub-win';\r\n    subWin.postMessage(msg, '*');\r\n}\r\nfunction hideFrameBack(hash:string) {\r\n    let el = document.getElementById(hash);\r\n    if (el !== undefined) el.hidden = true;\r\n}\r\nasync function initSubWin(message:any) {\r\n    console.log('initSubWin: set nav.user', message);\r\n    let user = nav.user = message; // message.user;\r\n    setCenterToken(user.id, user.token);\r\n    await nav.showAppView();\r\n}\r\nasync function onReceiveAppApiMessage(hash: string, apiName: string): Promise<UqToken> {\r\n    let appInFrame = appsInFrame[hash];\r\n    if (appInFrame === undefined) return {name:apiName, db:undefined, url:undefined, token:undefined};\r\n    //let unit = getUnit();\r\n    let {unit, predefinedUnit} = appInFrame;\r\n    unit = unit || predefinedUnit;\r\n    if (!unit) {\r\n        console.error('no unit defined in unit.json or not logined in', unit);\r\n    }\r\n    let parts = apiName.split('/');\r\n    let param = {unit: unit, uqOwner: parts[0], uqName: parts[1]};\r\n    console.log('uqTokenApi.uq onReceiveAppApiMessage', param);\r\n    let ret = await uqTokenApi.uq(param);\r\n    let {db, url, token} = ret;\r\n    return {name: apiName, db:db, url: url, token: token};\r\n}\r\n\r\nasync function onAppApiReturn(message:any) {\r\n    let {apiName, db, url, token} = message;\r\n    let action = uqTokenActions[apiName];\r\n    if (action === undefined) {\r\n        throw 'error app api return';\r\n        //return;\r\n    }\r\n    let realUrl = host.getUrlOrDebugOrTest(db, url);\r\n    console.log('onAppApiReturn(message:any): url=' + url + ', real=' + realUrl);\r\n    //action.url = realUrl;\r\n    //action.token = token;\r\n    action.resolve({\r\n        name: apiName,\r\n        db: db,\r\n        url: realUrl,\r\n        token: token,\r\n    } as UqToken);\r\n}\r\n\r\nexport function setAppInFrame(appHash: string):AppInFrame {\r\n    if (appHash) {\r\n        let parts = appHash.split('-');\r\n        let len = parts.length;\r\n        if (len > 0) {\r\n            let p = 1;\r\n            appInFrame.hash = parts[p++];\r\n            if (len>0) appInFrame.unit = Number(parts[p++]);\r\n            if (len>1) appInFrame.page = parts[p++];\r\n            if (len>2) appInFrame.param = parts.slice(p++);\r\n        }\r\n    }\r\n    return appInFrame;\r\n}\r\n\r\nexport function getExHashPos():number {\r\n    let hash = document.location.hash;\r\n    if (hash !== undefined && hash.length > 0) {\r\n        let pos = hash.lastIndexOf('#tv-');\r\n        if (pos < 0) pos = hash.lastIndexOf('#tvdebug-');\r\n        return pos;\r\n    }\r\n    return -1;\r\n}\r\n\r\nexport function getExHash():string {\r\n    let pos = getExHashPos();\r\n    if (pos < 0) return undefined;\r\n    return document.location.hash.substring(pos);\r\n}\r\n\r\nexport function appUrl(url: string, unitId: number, page?:string, param?:any[]):{url:string; hash:string} {\r\n    let u:string;\r\n    for (;;) {\r\n        u = uid();\r\n        let a = appsInFrame[u];\r\n        if (a === undefined) {\r\n            appsInFrame[u] = {hash:u, unit:unitId};\r\n            break;\r\n        }\r\n    }\r\n    url += '#tv-' + u + '-' + unitId;\r\n    if (page !== undefined) {\r\n        url += '-' + page;\r\n        if (param !== undefined) {\r\n            for (let i=0; i<param.length; i++) {\r\n                url += '-' + param[i];\r\n            }\r\n        }\r\n    }\r\n    return {url: url, hash: u};\r\n}\r\n\r\nfunction getUnit():number {\r\n    let {unit, predefinedUnit} = appInFrame;\r\n    let realUnit = unit || predefinedUnit;\r\n    if (realUnit === undefined) {\r\n        throw 'no unit defined in unit.json or not logined in';\r\n    }\r\n    return realUnit;\r\n}\r\n\r\ninterface UqTokenAction {\r\n    resolve: (value?: UqToken | PromiseLike<UqToken>) => void;\r\n    reject: (reason?: any) => void;\r\n}\r\nconst uqTokenActions:{[uq:string]: UqTokenAction} = {};\r\nexport async function buildAppUq(uq:string, uqOwner:string, uqName:string):Promise<void> {\r\n    if (!isBridged()) {\r\n        let unit = getUnit();\r\n        let uqToken = await uqTokenApi.uq({unit:unit, uqOwner:uqOwner, uqName:uqName});\r\n        if (uqToken.token === undefined) uqToken.token = centerToken;\r\n        let {db, url} = uqToken;\r\n        let realUrl = host.getUrlOrDebugOrTest(db, url);\r\n        console.log('realUrl: %s', realUrl);\r\n        uqToken.url = realUrl;\r\n        uqTokens[uq] = uqToken;\r\n        return uqToken;\r\n    }\r\n    console.log(\"**** before buildAppUq ****\", appInFrame);\r\n    let bp = uqTokenActions[uq];\r\n    if (bp !== undefined) return;\r\n    return new Promise<void>((resolve, reject) => {\r\n        uqTokenActions[uq] = {\r\n            resolve: async (at:any) => {\r\n                let {db, url, token} = await at;\r\n                uqTokens[uq] = {\r\n                    name: uq,\r\n                    db: db,\r\n                    url: url,\r\n                    token: token,\r\n                };\r\n                uqTokenActions[uq] = undefined;\r\n                console.log(\"**** after buildAppUq ****\", appInFrame);\r\n                resolve();\r\n            },\r\n            reject: reject,\r\n        };\r\n        (window.opener || window.parent).postMessage({\r\n            type: 'app-api',\r\n            apiName: uq,\r\n            hash: appInFrame.hash,\r\n        }, \"*\");\r\n    });\r\n}\r\n\r\nexport function appUq(uq:string):UqToken {\r\n    let uts = uqTokens;\r\n    return uts[uq];\r\n}\r\n/*\r\nexport async function appUq(uq:string, uqOwner:string, uqName:string): Promise<UqToken> {\r\n    let uqToken = uqTokens[uq];\r\n    if (uqToken !== undefined) return uqToken;\r\n    if (!isBridged()) {\r\n        let unit = getUnit();\r\n        uqToken = await uqTokenApi.uq({unit:unit, uqOwner:uqOwner, uqName:uqName});\r\n        if (uqToken.token === undefined) uqToken.token = centerToken;\r\n        let {url, urlDebug} = uqToken;\r\n        let realUrl = host.getUrlOrDebug(url, urlDebug);\r\n        console.log('realUrl: %s', realUrl);\r\n        uqToken.url = realUrl;\r\n        uqTokens[uq] = uqToken;\r\n        return uqToken;\r\n    }\r\n    console.log(\"appApi parent send: %s\", appInFrame.hash);\r\n    uqToken = {\r\n        name: uq,\r\n        url: undefined,\r\n        urlDebug: undefined,\r\n        token: undefined,\r\n        resolve: undefined,\r\n        reject: undefined,\r\n    };\r\n    uqTokens[uq] = uqToken;\r\n    return new Promise<UqToken>((resolve, reject) => {\r\n        uqToken.resolve = async (at) => {\r\n            let a = await at;\r\n            console.log('return from parent window: %s', JSON.stringify(a));\r\n            uqToken.url = a.url;\r\n            uqToken.urlDebug = a.urlDebug;\r\n            uqToken.token = a.token;\r\n            resolve(uqToken);\r\n        }\r\n        uqToken.reject = reject;\r\n        (window.opener || window.parent).postMessage({\r\n            type: 'app-api',\r\n            apiName: uq,\r\n            hash: appInFrame.hash,\r\n        }, \"*\");\r\n    });\r\n}\r\n*/\r\ninterface BridgeCenterApi {\r\n    id: string;\r\n    resolve: (value?:any)=>any;\r\n    reject: (reason?:any)=>void;\r\n}\r\nconst brideCenterApis:{[id:string]: BridgeCenterApi} = {};\r\nexport async function bridgeCenterApi(url:string, method:string, body:any):Promise<any> {\r\n    console.log('bridgeCenterApi: url=%s, method=%s', url, method);\r\n    return await new Promise<any>(async (resolve, reject) => {\r\n        let callId:string;\r\n        for (;;) {\r\n            callId = uid();\r\n            let bca = brideCenterApis[callId];\r\n            if (bca === undefined) {\r\n                brideCenterApis[callId] = {\r\n                    id: callId,\r\n                    resolve: resolve,\r\n                    reject: reject,\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        (window.opener || window.parent).postMessage({\r\n            type: 'center-api',\r\n            callId: callId,\r\n            url: url,\r\n            method: method,\r\n            body: body\r\n        }, '*');\r\n    });\r\n}\r\n\r\nasync function callCenterApiFromMessage(from:Window, message):Promise<void> {\r\n    let {callId, url, method, body} = message;\r\n    let result = await callCenterapi.directCall(url, method, body);\r\n    from.postMessage({\r\n        type: 'center-api-return',\r\n        callId: callId,\r\n        result: result,\r\n    }, '*');\r\n}\r\n\r\nfunction bridgeCenterApiReturn(message:any) {\r\n    let {callId, result} = message;\r\n    let bca = brideCenterApis[callId];\r\n    if (bca === undefined) return;\r\n    brideCenterApis[callId] = undefined;\r\n    bca.resolve(result);\r\n}\r\n","import * as React from 'react';\r\nimport {IComputedValue} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash';\r\nimport {PageHeader} from './pageHeader';\r\n\r\nexport interface ScrollProps {\r\n    onScroll?: (e:any) => void;\r\n    onScrollTop?: () => void;\r\n    onScrollBottom?: () => void;\r\n}\r\ninterface ScrollViewProps extends ScrollProps {\r\n    className?: string;\r\n}\r\nconst scrollTimeGap = 100;\r\nclass ScrollView extends React.Component<ScrollViewProps, null> {\r\n    private bottomTime:number = 0;\r\n    private topTime:number = 0;\r\n\r\n    private onScroll = async (e) => {\r\n        let {onScroll, onScrollTop, onScrollBottom} = this.props;\r\n        if (onScroll) this.props.onScroll(e);\r\n        let el = e.target as HTMLBaseElement;\r\n        if (el.scrollTop < 30) {\r\n            //this.eachChild(this, 'top');\r\n            if (onScrollTop !== undefined) {\r\n                let topTime = new Date().getTime();\r\n                if (topTime-this.topTime > scrollTimeGap) {\r\n                    this.topTime = topTime;\r\n                    onScrollTop();\r\n                }\r\n            }\r\n        }\r\n        if (el.scrollTop + el.offsetHeight > el.scrollHeight - 30) {\r\n            //this.eachChild(this, 'bottom');\r\n            if (onScrollBottom !== undefined) {\r\n                let bottomTime = new Date().getTime();\r\n                if (bottomTime - this.bottomTime > scrollTimeGap) {\r\n                    this.bottomTime = bottomTime;\r\n                    onScrollBottom();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    private eachChild(c:any, direct:'top'|'bottom') {\r\n        let { props } = c;\r\n        if (props === undefined)\r\n            return;\r\n        let { children } = props;\r\n        if (children === undefined)\r\n            return;\r\n        React.Children.forEach(children, (child, index) => {\r\n            let {_$scroll} = child as any;\r\n            if (_$scroll) _$scroll(direct);\r\n            console.log(child.toString());\r\n            this.eachChild(child, direct);\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <main className={this.props.className} onScroll={this.onScroll}>\r\n                {this.props.children}\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport interface Tab extends ScrollProps {\r\n    title: string;\r\n    icon?: string;\r\n    content?: JSX.Element | (()=>JSX.Element);\r\n    header?: string;\r\n    isSelected?: boolean;\r\n    redDot?: IComputedValue<number>;\r\n    load?: () => Promise<void>;\r\n}\r\nexport interface TabState extends Tab {\r\n    isMounted?: boolean;\r\n}\r\nexport interface PageProps extends ScrollProps {\r\n    back?: 'close' | 'back' | 'none';\r\n    header?: boolean | string | JSX.Element;\r\n    keepHeader?: boolean;\r\n    right?: JSX.Element;\r\n    sideBar?: JSX.Element;\r\n    footer?: JSX.Element;\r\n    tabs?: Tab[];\r\n    tabPosition?: 'top' | 'bottom';\r\n    logout?: boolean | (()=>Promise<void>);\r\n    headerClassName?: string;\r\n}\r\nexport interface PageState {\r\n    cur?: Tab;\r\n    tabs?: TabState[];\r\n}\r\n\r\n@observer\r\nexport class Page extends React.Component<PageProps, PageState> {\r\n    private tabs:TabState[];\r\n    constructor(props: PageProps) {\r\n        super(props);\r\n        let {tabs} = props;\r\n        if (tabs === undefined || tabs.length === 0) return;\r\n        this.tabs = tabs;\r\n        let cur:Tab;\r\n        let tabStates:Tab[] = [];\r\n        for (let tab of tabs) {\r\n            let t:TabState = _.clone(tab);\r\n            if (cur === undefined) {\r\n                if (t.isSelected === true)\r\n                    cur = t;\r\n                else\r\n                    t.isSelected = false;\r\n            }\r\n            else {\r\n                t.isSelected = false;\r\n            }\r\n            t.isMounted = false;\r\n            tabStates.push(t);\r\n        }\r\n        this.state = {\r\n            cur: cur,\r\n            tabs: tabStates,\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (this.tabs === undefined) return;\r\n        let t0 = this.state.tabs.find(v => v.isSelected === true);\r\n        if (t0 === undefined) {\r\n            t0 = this.state.tabs[0];\r\n            if (t0 === undefined) return;\r\n        }\r\n        await t0.load && await t0.load();\r\n        //await this.onTabClick(t0);\r\n    }\r\n\r\n    private async onTabClick(tab: TabState) {\r\n        if (tab.isSelected === true) return;\r\n        let cur:TabState;\r\n        let tabs = this.state.tabs;\r\n        for (let t of tabs) {\r\n            if (t === tab) {\r\n                t.isSelected = true;\r\n                cur = t;\r\n            }\r\n            else\r\n                t.isSelected = false;\r\n        }\r\n        if (cur.isMounted !== true) {\r\n            let {load} = cur;\r\n            if (load !== undefined) {\r\n                await load();\r\n            }\r\n        }\r\n        this.setState({\r\n            cur: cur,\r\n            tabs: tabs\r\n        });\r\n    }\r\n\r\n    private onTouchStart(evt: React.TouchEvent<HTMLElement>) {\r\n    }\r\n\r\n    private renderTabs(footer: JSX.Element) {\r\n        const {header, back, right, keepHeader, headerClassName, tabPosition} = this.props;\r\n        let cur = this.state.cur;\r\n        let tabs = <div>{\r\n                this.state.tabs.map((tab, index) => {\r\n                    const {icon, isSelected, title, redDot} = tab;\r\n                    let img:any, redDotView:any, cn:any;\r\n                    if (icon !== undefined) img = <img src={icon} />;\r\n                    if (redDot !== undefined) {\r\n                        let v = redDot.get();\r\n                        if (v < 0) {\r\n                            cn = classNames('red-dot');\r\n                            redDotView = <u />;\r\n                        }\r\n                        else if (v > 0) {\r\n                            cn = classNames('red-dot', 'num');\r\n                            redDotView = <u>{v}</u>;\r\n                        }\r\n                    }\r\n                    return <div key={index}\r\n                        className= {classNames('va-tab', {cur: isSelected})}\r\n                        onClick={() => this.onTabClick(tab)}>\r\n                        {img}<div className={cn}>{title}{redDotView}</div>\r\n                    </div>\r\n                })\r\n            }</div>;\r\n        let pageHeader = header !== false &&\r\n            <PageHeader \r\n                back={back} \r\n                center={keepHeader===true? (header as string) : (cur && (cur.header || cur.title))}\r\n                right={right}\r\n                className={headerClassName}\r\n            />;\r\n\r\n        return <article className='page-container'>\r\n            {pageHeader}\r\n            {tabPosition==='top' && tabs}\r\n            <section className=\"position-relative\">\r\n            {this.props.sideBar}\r\n            {\r\n                this.state.tabs.map((tab, index) => {\r\n                    let {isSelected, isMounted, content} = tab;\r\n                    if (isSelected === true || isMounted === true) {\r\n                        tab.isMounted = true;\r\n                        return <ScrollView key={index}\r\n                            className={classNames({invisible: isSelected===false})}\r\n                            onScroll={tab.onScroll}\r\n                            onScrollTop={tab.onScrollTop}\r\n                            onScrollBottom={tab.onScrollBottom}\r\n                        >\r\n                            {(typeof content)==='function'? (content as ()=>JSX.Element)():content}\r\n                        </ScrollView>;\r\n                    }\r\n                })\r\n            }\r\n            </section>\r\n            {tabPosition!=='top' && tabs}\r\n            {footer}\r\n        </article>;\r\n    }\r\n    private renderSingle(footer: JSX.Element) {\r\n        const {back, header, right, onScroll, onScrollTop, onScrollBottom, children, headerClassName} = this.props;\r\n        let pageHeader = header !== false && <PageHeader \r\n            back={back} \r\n            center={header as any}\r\n            right={right}\r\n            logout={this.props.logout}\r\n            className={headerClassName}\r\n        />;\r\n        return (\r\n            <article className='page-container' onTouchStart={this.onTouchStart}>\r\n                {pageHeader}\r\n                <section className=\"position-relative\">\r\n                    {this.props.sideBar}\r\n                    <ScrollView\r\n                        onScroll={onScroll}\r\n                        onScrollTop={onScrollTop}\r\n                        onScrollBottom={onScrollBottom}\r\n                    >\r\n                        {children}\r\n                    </ScrollView>\r\n                </section>\r\n                {footer}\r\n            </article>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const {footer} = this.props;\r\n        let elFooter = footer !== undefined && <footer>{footer}</footer>;\r\n        if (this.tabs !== undefined)\r\n            return this.renderTabs(elFooter);\r\n        else\r\n            return this.renderSingle(elFooter);\r\n    }\r\n}\r\n","function replacer(key:string, value:any) {\r\n    let first = key.substr(0, 1);\r\n    switch (first) {\r\n        default: return value;\r\n        case '$':\r\n        case '_': return;\r\n    }\r\n}\r\n\r\nexport function jsonStringify(value:any) {\r\n    return JSON.stringify(value, replacer, ' ');\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { BoxId, Tuid } from '../uqs';\r\nimport { PureJSONContent } from '../controllers';\r\n\r\nexport type TvTemplet = (values?:any, x?:any) => JSX.Element;\r\n\r\ninterface Props {\r\n    tuidValue: number|BoxId, \r\n    ui?: TvTemplet,\r\n    x?: any,\r\n    nullUI?: ()=>JSX.Element\r\n}\r\n\r\nfunction boxIdContent(bi: number|BoxId, ui:TvTemplet, x:any) {\r\n    let logContent:any;\r\n    switch(typeof bi) {\r\n        case 'undefined': logContent = <>boxId undefined</>; break;\r\n        case 'number': logContent = <>id:{bi}</>; break;\r\n    }\r\n    if (typeof (bi as any).render !== 'function') {\r\n        if (ui === undefined) {\r\n            logContent = PureJSONContent(bi, x);\r\n        }\r\n        else {\r\n            return ui(bi, x);\r\n        }\r\n    }\r\n    if (logContent !== undefined) {\r\n        return <del className=\"text-danger\">{logContent}</del>;\r\n    }\r\n    return (bi as any).render(ui, x);\r\n    /*\r\n    let {id, _$tuid, _$com} = bi;\r\n    if (id === undefined || id === null) return;\r\n    let t:TuidBase = _$tuid;\r\n    if (t === undefined) {\r\n        if (ui !== undefined) return ui(bi, x);\r\n        return PureJSONContent(bi, x);\r\n    }\r\n    let com = ui || _$com;\r\n    if (com === undefined) {\r\n        com = bi._$com = t.getTuidContent();\r\n    }\r\n    let val = t.valueFromId(id);\r\n    if (val === undefined) {\r\n        return <>[<FA className=\"text-danger\" name=\"bug\" /> no {t.name} on id={id}]</>;\r\n    }\r\n    switch (typeof val) {\r\n        case 'number': val = {id: val}; break;\r\n    }\r\n    if (ui !== undefined) {\r\n        let ret = ui(val, x);\r\n        if (ret !== undefined) return ret;\r\n        return <>{id}</>;\r\n    }\r\n    return React.createElement(com, val);\r\n    */\r\n}\r\n\r\nconst Tv = observer(({tuidValue, ui, x, nullUI}:Props) => {\r\n    if (tuidValue === undefined) {\r\n        if (nullUI === undefined) return <>[undefined]</>;\r\n        return nullUI();\r\n    }\r\n    if (tuidValue === null) {\r\n        if (nullUI === undefined) return <>[null]</>;\r\n        return nullUI();\r\n    }\r\n    let ttv = typeof tuidValue;\r\n    switch (ttv) {\r\n        default:\r\n            if (ui === undefined)\r\n                return <>{ttv}-{tuidValue}</>;\r\n            else {\r\n                let ret = ui(tuidValue, x);\r\n                if (ret !== undefined) return ret;\r\n                return <>{tuidValue}</>;\r\n            }\r\n        case 'object':\r\n            let divObj = boxIdContent(tuidValue, ui, x);\r\n            if (divObj !== undefined) return divObj;\r\n            return nullUI === undefined? <>id null</>: nullUI();\r\n        case 'number':\r\n            return <>id...{tuidValue}</>;\r\n    }\r\n});\r\n\r\nexport const tv = (tuidValue:number|BoxId, ui?:TvTemplet, x?:any, nullUI?:()=>JSX.Element):JSX.Element => {\r\n    return <Tv tuidValue={tuidValue} ui={ui} x={x} nullUI={nullUI} />;\r\n};\r\n","export * from './jsonStringify';\r\nexport * from './tv';\r\n","const ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\nconst ID_LENGTH = 8;\r\n\r\nexport function uid():string {\r\n    let len = ALPHABET.length;\r\n    let rtn = '';\r\n    for (let i = 0; i < ID_LENGTH; i++) {\r\n        rtn += ALPHABET.charAt(Math.floor(Math.random() * len));\r\n    }\r\n    return rtn;\r\n}\r\n","import {nav} from '../ui/nav';\r\nimport {FetchError} from '../fetchError';\r\n\r\nexport interface HttpChannelUI {\r\n    startWait():void;\r\n    endWait():void;\r\n    showError(error:FetchError):Promise<void>;\r\n}\r\n\r\nexport class HttpChannelNavUI implements HttpChannelUI {\r\n    startWait() {\r\n        nav.startWait();\r\n    }\r\n    endWait() {\r\n        nav.endWait();\r\n    }\r\n    async showError(error:FetchError):Promise<void> {\r\n        nav.endWait();\r\n        /*\r\n        if (error.name === 'SyntaxError') {\r\n            error = {\r\n                name: error.name,\r\n                message: error.message,\r\n            }\r\n        }*/\r\n        await nav.onError(error);\r\n    }\r\n}\r\n\r\n","import _ from 'lodash';\r\nimport {HttpChannel} from './httpChannel';\r\nimport {HttpChannelNavUI} from './httpChannelUI';\r\nimport {appUq, logoutUqTokens, buildAppUq} from './appBridge';\r\nimport {ApiBase} from './apiBase';\r\nimport { host } from './host';\r\nimport { nav } from '../ui';\r\n\r\nlet channelUIs:{[name:string]: HttpChannel} = {};\r\nlet channelNoUIs:{[name:string]: HttpChannel} = {};\r\n\r\nexport function logoutApis() {\r\n    channelUIs = {};\r\n    channelNoUIs = {};\r\n    logoutUnitxApis();\r\n    logoutUqTokens();\r\n}\r\n\r\ninterface UqLocal {\r\n    value: any;\r\n    tick?: number;\r\n    isNet?: boolean;\r\n}\r\ninterface UqLocals {\r\n    user: number;\r\n    unit: number;\r\n    uqs: {[uq:string]: UqLocal};\r\n}\r\n\r\nconst uqLocalEntities = 'uqLocalEntities';\r\nclass CacheUqLocals {\r\n    private local:UqLocals;\r\n\r\n    async loadAccess(uqApi: UqApi):Promise<any> {\r\n        try {\r\n            let {uqOwner, uqName} = uqApi;\r\n            if (this.local === undefined) {\r\n                let ls = localStorage.getItem(uqLocalEntities);\r\n                if (ls !== null) {\r\n                    this.local = JSON.parse(ls);\r\n                }\r\n            }\r\n            if (this.local !== undefined) {\r\n                let {user, uqs} = this.local;\r\n                if (user !== loginedUserId || uqs === undefined) {\r\n                    this.local = undefined;\r\n                }\r\n                else {\r\n                    for (let i in uqs) {\r\n                        let ul = uqs[i];\r\n                        ul.isNet = undefined;\r\n                    }\r\n                }\r\n            }\r\n            if (this.local === undefined) {\r\n                this.local = {\r\n                    user: loginedUserId,\r\n                    unit: undefined,\r\n                    uqs: {}\r\n                };\r\n            }\r\n\r\n            let ret: any;\r\n            let un = uqOwner+'/'+uqName;\r\n            let uq = this.local.uqs[un];\r\n            if (uq !== undefined) {\r\n                let {value} = uq;\r\n                ret = value;\r\n            }\r\n            if (ret === undefined) {\r\n                ret = await uqApi.__loadAccess();\r\n                this.saveLocal(un, ret);\r\n            }\r\n            return _.cloneDeep(ret);\r\n        }\r\n        catch (err) {\r\n            this.local = undefined;\r\n            localStorage.removeItem(uqLocalEntities);\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    private saveLocal(uqName:string, accessValue: any) {\r\n        this.local.uqs[uqName] = {\r\n            value: accessValue,\r\n            isNet: true,\r\n        }\r\n        let str = JSON.stringify(this.local);\r\n        localStorage.setItem(uqLocalEntities, str);\r\n    }\r\n\r\n    async checkAccess(uqApi: UqApi):Promise<boolean> {\r\n        if (this.local === undefined) return false;\r\n        let {uqOwner, uqName} = uqApi;\r\n        let un = uqOwner+'/'+uqName;\r\n        let uq = this.local.uqs[un];\r\n        if (uq === undefined) return false;\r\n        let {isNet, value} = uq;\r\n        if (isNet === true) return true;\r\n        let ret = await uqApi.__loadAccess();\r\n        let isMatch = _.isMatch(value, ret);\r\n        if (isMatch === false) {\r\n            this.saveLocal(un, ret);\r\n            return false;\r\n        }\r\n        uq.isNet = true;\r\n        return true;\r\n    }\r\n}\r\n\r\nconst localUqs = new CacheUqLocals;\r\nexport class UqApi extends ApiBase {\r\n    private access:string[];\r\n    uqOwner: string;\r\n    uqName: string;\r\n    uq: string;\r\n\r\n    constructor(basePath: string, uqOwner: string, uqName: string, access:string[], showWaiting?: boolean) {\r\n        super(basePath, showWaiting);\r\n        if (uqName) {\r\n            this.uqOwner = uqOwner;\r\n            this.uqName = uqName;\r\n            this.uq = uqOwner + '/' + uqName;\r\n        }\r\n        this.access = access;\r\n        this.showWaiting = showWaiting;\r\n    }\r\n\r\n    async init() {\r\n        await buildAppUq(this.uq, this.uqOwner, this.uqName);\r\n    }\r\n\r\n    protected async getHttpChannel(): Promise<HttpChannel> {\r\n        let channels: {[name:string]: HttpChannel};\r\n        let channelUI: HttpChannelNavUI;\r\n        if (this.showWaiting === true || this.showWaiting === undefined) {\r\n            channels = channelUIs;\r\n            channelUI = new HttpChannelNavUI();\r\n        }\r\n        else {\r\n            channels = channelNoUIs;\r\n        }\r\n        let channel = channels[this.uq];\r\n        if (channel !== undefined) return channel;\r\n        let uqToken = appUq(this.uq); //, this.uqOwner, this.uqName);\r\n        if (!uqToken) debugger;\r\n        let {url, token} = uqToken;\r\n        this.token = token;\r\n        channel = new HttpChannel(false, url, token, channelUI);\r\n        return channels[this.uq] = channel;\r\n    }\r\n\r\n    async update():Promise<string> {\r\n        return await this.get('update');\r\n    }\r\n\r\n    async __loadAccess():Promise<any> {\r\n        let acc = this.access === undefined?\r\n            '' :\r\n            this.access.join('|');\r\n        let ret = await this.get('access', {acc:acc});\r\n        return ret;\r\n    }\r\n\r\n    async loadAccess():Promise<any> {\r\n        return await localUqs.loadAccess(this);\r\n    }\r\n\r\n    async loadEntities():Promise<any> {\r\n        return await this.get('entities');\r\n    }\r\n\r\n    async checkAccess():Promise<boolean> {\r\n        return await localUqs.checkAccess(this);\r\n    }\r\n\r\n    async schema(name:string):Promise<any> {\r\n        return await this.get('schema/' + name);\r\n    }\r\n\r\n    async schemas(names:string[]):Promise<any[]> {\r\n        return await this.post('schema', names);\r\n    }\r\n\r\n    async tuidGet(name:string, id:number):Promise<any> {\r\n        return await this.get('tuid/' + name + '/' + id);\r\n    }\r\n\r\n    async tuidGetAll(name:string):Promise<any[]> {\r\n        return await this.get('tuid-all/' + name + '/');\r\n    }\r\n\r\n    async tuidSave(name:string, params):Promise<any> {\r\n        return await this.post('tuid/' + name, params);\r\n    }\r\n\r\n    async tuidSearch(name:string, arr:string, owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        let ret = await this.post('tuids/' + name, {\r\n            arr: arr,\r\n            owner: owner,\r\n            key: key,\r\n            pageStart: pageStart,\r\n            pageSize: pageSize\r\n        });\r\n        return ret;\r\n    }\r\n    async tuidArrGet(name:string, arr:string, owner:number, id:number):Promise<any> {\r\n        return await this.get('tuid-arr/' + name + '/' + owner + '/' + arr + '/' + id);\r\n    }\r\n    async tuidArrGetAll(name:string, arr:string, owner:number):Promise<any[]> {\r\n        return await this.get('tuid-arr-all/' + name + '/' + owner + '/' + arr + '/');\r\n    }\r\n    async tuidArrSave(name:string, arr:string, owner:number, params):Promise<any> {\r\n        return await this.post('tuid-arr/' + name + '/' + owner + '/' + arr + '/', params);\r\n    }\r\n    async tuidArrPos(name:string, arr:string, owner:number, id:number, order:number):Promise<any> {\r\n        return await this.post('tuid-arr-pos/' + name + '/' + owner + '/' + arr + '/', {\r\n            id: id,\r\n            $order: order\r\n        });\r\n    }\r\n\r\n    async tuidIds(name:string, arr:string, ids:number[]):Promise<any[]> {\r\n        try {\r\n            let url = 'tuidids/' + name + '/';\r\n            if (arr !== undefined) url += arr;\r\n            else url += '$';\r\n            let ret = await this.post(url, ids);\r\n            return ret;\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    async sheetSave(name:string, data:object):Promise<any> {\r\n        return await this.post('sheet/' + name, data);\r\n    }\r\n\r\n    async sheetAction(name:string, data:object) {\r\n        return await this.put('sheet/' + name, data);\r\n    }\r\n\r\n    async stateSheets(name:string, data:object) {\r\n        return await this.post('sheet/' + name + '/states', data);\r\n    }\r\n\r\n    async stateSheetCount(name:string):Promise<any> {\r\n        return await this.get('sheet/' + name + '/statecount');\r\n    }\r\n\r\n    async mySheets(name:string, data:object) {\r\n        return await this.post('sheet/' + name + '/my-sheets', data);\r\n    }\r\n\r\n    async getSheet(name:string, id:number):Promise<any> {\r\n        return await this.get('sheet/' + name + '/get/' + id);\r\n    }\r\n\r\n    async sheetArchives(name:string, data:object):Promise<any> {\r\n        return await this.post('sheet/' + name + '/archives', data);\r\n    }\r\n\r\n    async sheetArchive(name:string, id:number):Promise<any> {\r\n        return await this.get('sheet/' + name + '/archive/' + id);\r\n    }\r\n\r\n    async action(name:string, data:object):Promise<any> {\r\n        return await this.post('action/' + name, data);\r\n    }\r\n\r\n    async page(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\r\n        let p:any;\r\n        switch (typeof params) {\r\n            case 'undefined': p = {key: ''}; break;\r\n            default: p = _.clone(params); break;\r\n        }\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        return await this.post('query-page/' + name, p);\r\n    }\r\n\r\n    async query(name:string, params:any):Promise<any> {\r\n        let ret = await this.post('query/' + name, params);\r\n        return ret;\r\n    }\r\n/*\r\n    async history(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\r\n        let p = _.clone(params);\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        let ret = await this.post('history/' + name, p);\r\n        return ret;\r\n    }\r\n\r\n    async book(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\r\n        let p = _.clone(params);\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        let ret = await this.post('history/' + name, p);\r\n        return ret;\r\n    }\r\n*/\r\n    async user():Promise<any> {\r\n        return await this.get('user');\r\n    }\r\n}\r\n\r\nlet channels:{[unitId:number]: HttpChannel} = {};\r\n\r\nexport function logoutUnitxApis() {\r\n    channels = {};\r\n}\r\n\r\nexport class UnitxApi extends UqApi {\r\n    private unitId:number;\r\n    constructor(unitId:number) {\r\n        super('tv/', undefined, undefined, undefined, true);\r\n        this.unitId = unitId;\r\n    }\r\n\r\n    protected async getHttpChannel(): Promise<HttpChannel> {\r\n        let channel = channels[this.unitId];\r\n        if (channel !== undefined) return channel;\r\n        return channels[this.unitId] = await this.buildChannel();\r\n    }\r\n\r\n    private async buildChannel():Promise<HttpChannel> {\r\n        let channelUI = new HttpChannelNavUI();\r\n        let centerAppApi = new CenterAppApi('tv/', undefined);\r\n        let ret = await centerAppApi.unitxUq(this.unitId);\r\n        let {token, db, url} = ret;\r\n        let realUrl = host.getUrlOrDebugOrTest(db, url);\r\n        this.token = token;\r\n        return new HttpChannel(false, realUrl, token, channelUI);\r\n    }\r\n}\r\n\r\nlet centerHost:string;\r\n\r\nexport function setCenterUrl(url:string) {\r\n    console.log('setCenterUrl %s', url);\r\n    centerHost = url;\r\n    centerToken = undefined;\r\n    centerChannel = undefined;\r\n    centerChannelUI = undefined;\r\n}\r\n\r\nexport let centerToken:string|undefined = undefined;\r\n\r\nlet loginedUserId:number = 0;\r\nexport function setCenterToken(userId:number, t?:string) {\r\n    loginedUserId = userId;\r\n    centerToken = t;\r\n    console.log('setCenterToken %s', t);\r\n    centerChannel = undefined;\r\n    centerChannelUI = undefined;\r\n}\r\n\r\nlet centerChannelUI:HttpChannel;\r\nlet centerChannel:HttpChannel;\r\nfunction getCenterChannelUI():HttpChannel {\r\n    if (centerChannelUI !== undefined) return centerChannelUI;\r\n    return centerChannelUI = new HttpChannel(true, centerHost, centerToken, new HttpChannelNavUI());\r\n}\r\nfunction getCenterChannel():HttpChannel {\r\n    if (centerChannel !== undefined) return centerChannel;\r\n    return centerChannel = new HttpChannel(true, centerHost, centerToken);\r\n}\r\n\r\nexport abstract class CenterApiBase extends ApiBase {\r\n    constructor(path: string, showWaiting?: boolean) {\r\n        super(path, showWaiting);\r\n    }\r\n\r\n    protected async getHttpChannel(): Promise<HttpChannel> {\r\n        return (this.showWaiting === true || this.showWaiting === undefined)?\r\n            getCenterChannelUI():\r\n            getCenterChannel();\r\n    }\r\n}\r\n\r\nconst uqTokens = 'uqTokens';\r\nexport class UqTokenApi extends CenterApiBase {\r\n    private local: UqLocals;\r\n    async uq(params: {unit:number, uqOwner:string, uqName:string}):Promise<any> {\r\n        try {\r\n            let {unit:unitParam, uqOwner, uqName} = params;\r\n            if (this.local === undefined) {\r\n                let ls = localStorage.getItem(uqTokens);\r\n                if (ls !== null) {\r\n                    this.local = JSON.parse(ls);\r\n                }\r\n            }\r\n            if (this.local !== undefined) {\r\n                let {unit, user} = this.local;\r\n                if (unit !== unitParam || user !== loginedUserId) this.local = undefined;\r\n            }\r\n            if (this.local === undefined) {\r\n                this.local = {\r\n                    user: loginedUserId,\r\n                    unit: params.unit,\r\n                    uqs: {}\r\n                };\r\n            }\r\n\r\n            let un = uqOwner+'/'+uqName;\r\n            let nowTick = new Date().getTime();\r\n            let uq = this.local.uqs[un];\r\n            if (uq !== undefined) {\r\n                let {tick, value} = uq;\r\n                if (value !== undefined && (nowTick - tick) < 24*3600*1000) {\r\n                    return _.clone(value);\r\n                }\r\n            }\r\n            let appUqParams:any = _.clone(params);\r\n            appUqParams.testing = host.testing;\r\n            let ret = await this.get('app-uq', appUqParams);\r\n            if (ret === undefined) {\r\n                let {unit, uqOwner, uqName} = params;\r\n                let err = `center get app-uq(unit=${unit}, '${uqOwner}/${uqName}') - not exists or no unit-service`;\r\n                throw err;\r\n            }\r\n\r\n            this.local.uqs[un] = {\r\n                tick: nowTick,\r\n                value: ret,\r\n            }\r\n            localStorage.setItem(uqTokens, JSON.stringify(this.local));\r\n            return _.clone(ret);\r\n        }\r\n        catch (err) {\r\n            this.local = undefined;\r\n            localStorage.removeItem(uqTokens);\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport const uqTokenApi = new UqTokenApi('tv/tie/', undefined);\r\n\r\nexport class CallCenterApi extends CenterApiBase {\r\n    directCall(url:string, method:string, body:any):Promise<any> {\r\n        return this.call(url, method, body);\r\n    }\r\n}\r\nexport const callCenterapi = new CallCenterApi('', undefined);\r\n\r\nexport interface UqAppData {\r\n    id: number;\r\n    uqs: UqData[];\r\n}\r\n\r\nexport interface UqData {\r\n    id: number;\r\n    uqOwner: string;\r\n    uqName: string;\r\n    access: string;\r\n}\r\n\r\nexport interface UqServiceData {\r\n    id: number;\r\n    db: string;\r\n    url: string;\r\n    token: string;\r\n}\r\n\r\nconst appUqs = 'appUqs';\r\n\r\nexport class CenterAppApi extends CenterApiBase {\r\n    private cachedUqs: UqAppData;\r\n    async uqs(appOwner:string, appName:string):Promise<UqAppData> {\r\n        let ret:any;\r\n        let ls = localStorage.getItem(appUqs);\r\n        if (ls !== null) {\r\n            let rLs = JSON.parse(ls);\r\n            let {appOwner:rAppOwner, appName:rAppName, value} = rLs;\r\n            if (appOwner === rAppOwner && appName === rAppName) ret = value;\r\n        }\r\n        if (ret === undefined) {\r\n            ret = await this.uqsPure(appOwner, appName);\r\n            let obj = {\r\n                appOwner:appOwner, \r\n                appName:appName, \r\n                value: ret,\r\n            }\r\n            localStorage.setItem(appUqs, JSON.stringify(obj));\r\n        }\r\n        return this.cachedUqs = _.cloneDeep(ret);\r\n    }\r\n    private async uqsPure(appOwner:string, appName:string):Promise<UqAppData> {\r\n        return await this.get('tie/app-uqs', {appOwner:appOwner, appName:appName});\r\n    }\r\n    async checkUqs(appOwner:string, appName:string):Promise<boolean> {\r\n        let ret = await this.uqsPure(appOwner, appName);\r\n        let {id:cachedId, uqs:cachedUqs} = this.cachedUqs;\r\n        let {id:retId, uqs:retUqs} = ret;\r\n        if (cachedId !== retId) return false;\r\n        if (cachedUqs.length !== retUqs.length) return false;\r\n        let len = cachedUqs.length;\r\n        for (let i=0; i<len; i++) {\r\n            if (_.isMatch(cachedUqs[i], retUqs[i]) === false) return false;\r\n        }\r\n        return true;\r\n    }\r\n    async unitxUq(unit:number):Promise<UqServiceData> {\r\n        return await this.get('tie/unitx-uq', {unit:unit});\r\n    }\r\n    async changePassword(param: {orgPassword:string, newPassword:string}) {\r\n        return await this.post('tie/reset-password', param);\r\n    }\r\n}\r\n\r\nexport async function loadAppUqs(appOwner:string, appName:string): Promise<UqAppData> {\r\n    let centerAppApi = new CenterAppApi('tv/', undefined);\r\n    //let unit = meInFrame.unit;\r\n    let ret = await centerAppApi.uqs(appOwner, appName);\r\n    centerAppApi.checkUqs(appOwner, appName).then(v => {\r\n        if (v === false) {\r\n            localStorage.removeItem(appUqs);\r\n            nav.start();\r\n        }\r\n    });\r\n    return ret;\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Controller } from '../../../ui';\r\n\r\nexport abstract class Link {\r\n    abstract onClick: () => void;\r\n    abstract render(className?:string):JSX.Element;\r\n}\r\n\r\nexport class CLink extends Link {\r\n    private controller: Controller;\r\n    protected icon:string|JSX.Element;\r\n    protected label:string|JSX.Element;\r\n\r\n    constructor(controller:Controller) {\r\n        super();\r\n        this.controller = controller;\r\n        this.icon = controller.icon;\r\n        this.label = controller.label;\r\n    }\r\n\r\n    onClick = async () => {\r\n        await this.controller.start();\r\n    }\r\n\r\n    render(className?:string) {\r\n        return <div\r\n            className={classNames('px-3', 'py-2', 'align-items-center', 'cursor-pointer', className)}\r\n            onClick={this.onClick}>\r\n            {this.icon} &nbsp; {this.label}\r\n        </div>;\r\n        //return React.createElement(this.view, className);\r\n    }\r\n}\r\n","export * from './cLink';\r\n","\r\nlet subAppWindow:Window;\r\nfunction postWsToSubApp(msg:any) {\r\n    if (subAppWindow === undefined) return;\r\n    subAppWindow.postMessage({\r\n        type: 'ws',\r\n        msg: msg\r\n    }, '*');\r\n}\r\n\r\nexport function setSubAppWindow(win:Window) {\r\n    subAppWindow = win;\r\n}\r\n\r\nexport function postWsToTop(msg:any) {\r\n    window.top.postMessage({\r\n        type: 'ws',\r\n        msg: msg\r\n    }, '*');\r\n}\r\n\r\nexport abstract class WsBase {\r\n    wsBaseId:string;\r\n    private handlerSeed = 1;\r\n    private anyHandlers:{[id:number]:(msg:any)=>Promise<void>} = {};\r\n    private msgHandlers:{[id:number]:{type:string, handler:(msg:any)=>Promise<void>}} = {};\r\n    onWsReceiveAny(handler:(msg:any)=>Promise<void>):number {\r\n        let seed = this.handlerSeed++;\r\n        this.anyHandlers[seed] = handler;\r\n        return seed;\r\n    }\r\n    onWsReceive(type:string, handler:(msg:any)=>Promise<void>):number {\r\n        let seed = this.handlerSeed++;\r\n        this.msgHandlers[seed] = {type:type, handler: handler};\r\n        return seed;\r\n    }\r\n    endWsReceive(handlerId:number) {\r\n        delete this.anyHandlers[handlerId];\r\n        delete this.msgHandlers[handlerId];\r\n    }\r\n    async receive(msg:any) {\r\n        let {$type} = msg;\r\n        for (let i in this.anyHandlers) {\r\n            await this.anyHandlers[i](msg);\r\n        }\r\n        for (let i in this.msgHandlers) {\r\n            let {type, handler} = this.msgHandlers[i];\r\n            if (type !== $type) continue;\r\n            await handler(msg);\r\n        }\r\n    }\r\n}\r\n\r\nlet wsBaseSeed = 1;\r\nexport class WsBridge extends WsBase {\r\n    wsBaseId:string = 'WsBridge seed ' + wsBaseSeed++;\r\n}\r\n\r\nexport const wsBridge = new WsBridge();\r\n\r\nexport class WSChannel extends WsBase {\r\n    wsBaseId:string = 'WSChannel seed ' + wsBaseSeed++;\r\n    static centerToken:string;\r\n    private wsHost: string;\r\n    private token: string;\r\n    private ws: WebSocket;\r\n\r\n    constructor(wsHost: string, token: string) {\r\n        super();\r\n        this.wsHost = wsHost;\r\n        this.token = token;\r\n    }\r\n\r\n    static setCenterToken(token?: string) {\r\n        WSChannel.centerToken = token;\r\n    }\r\n    \r\n    connect():Promise<void> {\r\n        //this.wsHost = wsHost;\r\n        //this.token = token || WSChannel.centerToken;\r\n        if (this.ws !== undefined) return;\r\n        let that = this;\r\n        return new Promise((resolve, reject) => {\r\n            let ws = new WebSocket(this.wsHost, this.token || WSChannel.centerToken);\r\n            console.log('connect webSocket %s', this.wsHost);\r\n            ws.onopen = (ev) => {\r\n                console.log('webSocket connected %s', this.wsHost);\r\n                that.ws = ws;\r\n                resolve();\r\n            };\r\n            ws.onerror = (ev) => {\r\n                reject('webSocket can\\'t open!');\r\n            };\r\n            ws.onmessage = async (msg) => await that.wsMessage(msg);\r\n            ws.onclose = (ev) => {\r\n                that.ws = undefined;\r\n                console.log('webSocket closed!');\r\n            }\r\n        });\r\n    }\r\n    close() {\r\n        if (this.ws !== undefined) {\r\n            this.ws.close();\r\n            this.ws = undefined;\r\n        }\r\n    }\r\n    private async wsMessage(event:any):Promise<void> {\r\n        try {\r\n            console.log('websocket message: %s', event.data);\r\n            let msg = JSON.parse(event.data);\r\n            postWsToSubApp(msg);\r\n            await this.receive(msg);\r\n        }\r\n        catch (err) {\r\n            console.log('ws msg error: ', err);\r\n        }\r\n    }\r\n    sendWs(msg:any) {\r\n        let netThis = this;\r\n        this.connect().then(() => {\r\n            netThis.ws.send(msg);\r\n        });\r\n    }\r\n}\r\n","export const isDevelopment = process.env.NODE_ENV === 'development';\r\n\r\nconst centerHost = process.env['REACT_APP_CENTER_HOST'];\r\nconst centerDebugHost = 'localhost:3000'; //'192.168.86.64';\r\nconst resHost = process.env['REACT_APP_RES_HOST'] || centerHost;\r\nconst resDebugHost = 'localhost:3015'; //'192.168.86.63';\r\nconst uqDebugHost = 'localhost:3015'; //'192.168.86.63';\r\nconst uqDebugBuilderHost = 'localhost:3009';\r\ninterface HostValue {\r\n    value: string;\r\n    local: boolean;\r\n}\r\nconst hosts:{[name:string]:HostValue} = {\r\n    centerhost: {\r\n        value: process.env['REACT_APP_CENTER_DEBUG_HOST'] || centerDebugHost, \r\n        local: false\r\n    },\r\n    reshost: {\r\n        value: process.env['REACT_APP_RES_DEBUG_HOST'] || resDebugHost,\r\n        local: false\r\n    },\r\n    uqhost: {\r\n        value: process.env['REACT_APP_UQ_DEBUG_HOST'] || uqDebugHost, \r\n        local: false\r\n    },\r\n    unitxhost: {\r\n        value: process.env['REACT_APP_UQ_DEBUG_HOST'] || uqDebugHost, \r\n        local: false\r\n    },\r\n    \"uq-build\": {\r\n        value: process.env['REACT_APP_UQ_DEBUG_BUILDER_HOST'] || uqDebugBuilderHost, \r\n        local: false\r\n    }\r\n}\r\n\r\nfunction centerUrlFromHost(host:string) {\r\n    if (host.startsWith('https://') === true) {\r\n        if (host.endsWith('/')) return host;\r\n        return host + '/';\r\n    }\r\n    return `http://${host}/`;\r\n}\r\nfunction centerWsFromHost(host:string) {\r\n    let https = 'https://';\r\n    if (host.startsWith(https) === true) {\r\n        host = host.substr(https.length);\r\n        if (host.endsWith('/') === true) host = host.substr(0, host.length-1);\r\n        return 'wss://' + host + '/tv/';\r\n    }\r\n    return `ws://${host}/tv/`\r\n}\r\n\r\nconst fetchOptions = {\r\n    method: \"GET\",\r\n    mode: \"no-cors\", // no-cors, cors, *same-origin\r\n    headers: {\r\n        \"Content-Type\": \"text/plain\"\r\n    },\r\n};\r\n\r\nclass Host {\r\n    testing: boolean;\r\n    url: string;\r\n    ws: string;\r\n    resHost: string;\r\n\r\n    async start(testing:boolean) {\r\n        this.testing = testing;\r\n        if (isDevelopment === true) {\r\n            await this.tryLocal();\r\n        }\r\n        let host = this.getCenterHost();\r\n        this.url = centerUrlFromHost(host);\r\n        this.ws = centerWsFromHost(host);\r\n        this.resHost = this.getResHost();\r\n    }\r\n\r\n    private debugHostUrl(host:string) {return `http://${host}/hello`}\r\n    private async tryLocal() {\r\n        let promises:PromiseLike<any>[] = [];\r\n        let hostArr:string[] = [];\r\n        for (let i in hosts) {\r\n            let hostValue = hosts[i];\r\n            let {value} = hostValue;\r\n            if (hostArr.findIndex(v => v === value) < 0) hostArr.push(value);\r\n        }\r\n\r\n        for (let host of hostArr) {\r\n            let fetchUrl = this.debugHostUrl(host);\r\n            promises.push(localCheck(fetchUrl));\r\n        }\r\n        let results = await Promise.all(promises);\r\n        let len = hostArr.length;\r\n        for (let i=0; i<len; i++) {\r\n            let local = results[i];\r\n            let host = hostArr[i];\r\n            for (let j in hosts) {\r\n                let hostValue = hosts[j];\r\n                if (hostValue.value === host) {\r\n                    hostValue.local = local;\r\n                }\r\n            }\r\n        }\r\n        /*\r\n        let p = 0;\r\n        for (let i in hosts) {\r\n            let hostValue = hosts[i];\r\n            hostValue.local = results[p];\r\n            ++p;\r\n        }\r\n        */\r\n    }\r\n\r\n    private getCenterHost():string {\r\n        let {value, local} = hosts.centerhost;\r\n        let hash = document.location.hash;\r\n        if (hash.includes('sheet_debug') === true) {\r\n            return value;\r\n        }\r\n        if (isDevelopment === true) {\r\n            if (local === true) return value;\r\n        }\r\n        return centerHost;\r\n    }\r\n\r\n    private getResHost():string {\r\n        let {value, local} = hosts.reshost;\r\n        let hash = document.location.hash;\r\n        if (hash.includes('sheet_debug') === true) {\r\n            return value;\r\n        }\r\n        if (isDevelopment === true) {\r\n            if (local === true) return value;\r\n        }\r\n        return resHost;\r\n    }\r\n\r\n    getUrlOrDebug(url:string, debugHost:string = 'uqhost'):string {\r\n        if (isDevelopment === false) return url;\r\n        let host = hosts[debugHost];\r\n        if (host === undefined) return url;\r\n        let {value, local} = host;\r\n        if (local === false) return url;\r\n        return `http://${value}/`;\r\n    }\r\n    getUrlOrDebugOrTest(db:string, url:string):string {\r\n        url = this.getUrlOrDebug(url);\r\n        return url + 'uq/' + (this.testing===true?'test':'prod') + '/' + db + '/';\r\n    }\r\n\r\n    async localCheck(urlDebug: string):Promise<boolean> {\r\n        return await localCheck(urlDebug);\r\n    }\r\n}\r\n\r\nexport const host:Host = new Host();\r\n\r\n// 因为测试的都是局域网服务器，甚至本机服务器，所以一秒足够了\r\n// 网上找了上面的fetch timeout代码。\r\n// 尽管timeout了，fetch仍然继续，没有cancel\r\n\r\n// 实际上，一秒钟不够。web服务器会自动停。重启的时候，可能会比较长时间。也许两秒甚至更多。\r\n//const timeout = 2000;\r\nconst timeout = 200;\r\n\r\nfunction fetchLocalCheck(url:string):Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      fetch(url, fetchOptions as any)\r\n      .then(v => {\r\n          v.text().then(resolve).catch(reject);\r\n      })\r\n      .catch(reject);\r\n      const e = new Error(\"Connection timed out\");\r\n      setTimeout(reject, timeout, e);\r\n    });\r\n}\r\n\r\nasync function localCheck(url:string):Promise<boolean> {\r\n    try {\r\n        await fetchLocalCheck(url);\r\n        return true;\r\n    }\r\n    catch (err) {\r\n        return false;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { nav } from './nav';\r\n\r\nexport interface ImageProps {\r\n    src: string;\r\n    className?: string;\r\n    style?: React.CSSProperties;\r\n    altImage?: string;\r\n}\r\n\r\nexport function Image(props: ImageProps) {\r\n    let {className, style, src, altImage} = props;\r\n    if (!src) {\r\n        return <div className={classNames(className, 'image-none')} style={style}>\r\n            <i className=\"fa fa-file-o\" />\r\n        </div>;\r\n    }\r\n    if (src.startsWith(':') === true) {\r\n        src = nav.resUrl + src.substr(1);\r\n    }\r\n    return <img src={src} className={className} \r\n        style={style}\r\n        onError={evt=>evt.currentTarget.src=altImage} />;\r\n}\r\n","export * from './CApp';\r\nexport * from './startApp';\r\nexport * from './cUq';\r\nexport * from './action';\r\nexport * from './tuid';\r\nexport * from './sheet';\r\nexport * from './query';\r\nexport * from './map';\r\nexport * from './history';\r\nexport * from './pending';\r\nexport * from './form/viewModel';\r\nexport * from './form';\r\nexport * from './formUI';\r\nexport * from './ControllerUq';\r\nexport * from './CVEntity';\r\nexport * from './link';\r\nexport * from './icons';\r\n","import {observable, IObservableArray, computed} from 'mobx';\r\nimport {uid} from './uid';\r\n\r\nexport abstract class PageItems<T> {\r\n    constructor(itemObservable:boolean = false) {\r\n        this._items = observable.array<T>([], {deep:itemObservable});\r\n    }\r\n    private isFirst: boolean = true;\r\n    @observable loading: boolean = false;\r\n    @observable private beforeLoad: boolean = true;\r\n    @observable protected loaded: boolean = false;\r\n    protected _items:IObservableArray<T>;\r\n    @observable allLoaded: boolean = false;\r\n    @computed get items():IObservableArray<T> {\r\n        if (this.beforeLoad === true) return null;\r\n        if (this.loaded === false) return undefined;\r\n        return this._items;\r\n    }\r\n\r\n    @observable topDiv:string;\r\n    @observable bottomDiv:string;\r\n    scrollToTop() {\r\n        this.topDiv = '$$'+uid();\r\n    }\r\n    scrollToBottom() {\r\n        this.bottomDiv = '$$'+uid();\r\n    }\r\n\r\n    protected param: any;\r\n    protected firstSize = 100;\r\n    protected pageStart = undefined;\r\n    protected pageSize = 30;\r\n    protected appendPosition:'head'|'tail' = 'tail';\r\n\r\n    protected abstract async load(param:any, pageStart:any, pageSize:number):Promise<T[]>;\r\n    protected abstract setPageStart(item:T);\r\n\r\n    reset() {\r\n        this.isFirst = true;\r\n        this.beforeLoad = true;\r\n        this.loaded = false;\r\n        this.param = undefined;\r\n        this.allLoaded = false;\r\n        this._items.clear();\r\n        this.setPageStart(undefined);\r\n    }\r\n\r\n    append(item:T) {\r\n        if (this.appendPosition === 'tail')\r\n            this._items.unshift(item);\r\n        else\r\n            this._items.push(item);\r\n    }\r\n\r\n    async first(param:any):Promise<void> {\r\n        this.reset();\r\n        this.beforeLoad = false;\r\n        this.param = param;\r\n        await this.more();        \r\n    }\r\n\r\n    async more():Promise<void> {\r\n        if (this.allLoaded === true) return;\r\n        if (this.loading === true) return;\r\n        this.loading = true;\r\n        let pageSize = this.pageSize + 1;\r\n        if (this.isFirst === true) {\r\n            if (this.firstSize > this.pageSize) pageSize = this.firstSize+1;\r\n        }\r\n        let ret = await this.load(\r\n                this.param, \r\n                this.pageStart,\r\n                pageSize);\r\n        this.loading = false;\r\n        this.loaded = true;\r\n        let len = ret.length;\r\n        if (this.isFirst===true && len>this.firstSize ||\r\n            this.isFirst===false && len>this.pageSize)\r\n        {\r\n            this.allLoaded = false;\r\n            --len;\r\n            ret.splice(len, 1);\r\n        }\r\n        else {\r\n            this.allLoaded = true;\r\n        }\r\n        if (len === 0) {\r\n            this._items.clear();\r\n            return;\r\n        }\r\n        this.setPageStart(ret[len-1]);\r\n        if (this.appendPosition === 'tail')\r\n            this._items.push(...ret);\r\n        else\r\n            this._items.unshift(...ret.reverse());\r\n        this.isFirst = false;\r\n    }\r\n}\r\n","import { Uq, Field, ArrFields, FieldMap } from './uq';\r\nimport { Tuid } from './tuid';\r\nimport { UqApi } from '../../net';\r\n\r\nconst tab = '\\t';\r\nconst ln = '\\n';\r\n\r\nexport abstract class Entity {\r\n    protected uq: Uq;\r\n    protected schema: any;\r\n    private jName: string;\r\n    sys?: boolean;\r\n    readonly name: string;\r\n    readonly typeId: number;\r\n    protected uqApi: UqApi;\r\n    abstract get typeName(): string;\r\n    get sName():string {return this.jName || this.name}\r\n    fields: Field[];\r\n    arrFields: ArrFields[];\r\n    returns: ArrFields[];\r\n\r\n    constructor(uq:Uq, name:string, typeId:number) {\r\n        this.uq = uq;\r\n        this.name = name;\r\n        this.typeId = typeId;\r\n        this.sys = this.name.indexOf('$') >= 0;\r\n        this.uqApi = this.uq.uqApi;\r\n    }\r\n\r\n    public face: any;           // 对应字段的label, placeHolder等等的中文，或者语言的翻译\r\n\r\n    //getApiFrom() {return this.entities.uqApi;}\r\n\r\n    private fieldMaps: {[arr:string]: FieldMap} = {};\r\n    fieldMap(arr?:string): FieldMap {\r\n        if (arr === undefined) arr = '$';\r\n        let ret = this.fieldMaps[arr];\r\n        if (ret === undefined) {\r\n            let fields:Field[];\r\n            if (arr === '$') fields = this.fields;\r\n            else if (this.arrFields !== undefined) {\r\n                let arrFields = this.arrFields.find(v => v.name === arr);\r\n                if (arrFields !== undefined) fields = arrFields.fields;\r\n            }\r\n            else if (this.returns !== undefined) {\r\n                let arrFields = this.returns.find(v => v.name === arr);\r\n                if (arrFields !== undefined) fields = arrFields.fields;\r\n            }\r\n            if (fields === undefined) return {};\r\n            ret = {};\r\n            for (let f of fields) ret[f.name] = f;\r\n            this.fieldMaps[arr] = ret;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    public async loadSchema():Promise<void> {\r\n        if (this.schema !== undefined) return;\r\n        let schema = await this.uq.loadEntitySchema(this.name);\r\n        this.setSchema(schema);\r\n        this.buildFieldsTuid();\r\n    }\r\n\r\n    public setSchema(schema:any) {\r\n        if (schema === undefined) return;\r\n        if (this.schema !== undefined) return;\r\n        this.schema = schema;\r\n        let {name} = schema;\r\n        if (name !== this.name) this.jName = name;\r\n        //this.buildFieldsTuid();\r\n    }\r\n\r\n    public buildFieldsTuid() {\r\n        let {fields, arrs, returns} = this.schema;\r\n        this.uq.buildFieldTuid(this.fields = fields);\r\n        this.uq.buildArrFieldsTuid(this.arrFields = arrs, fields);\r\n        this.uq.buildArrFieldsTuid(this.returns = returns, fields);\r\n    }\r\n\r\n    schemaStringify():string {\r\n        return JSON.stringify(this.schema, (key:string, value:any) => {\r\n            if (key === '_tuid') return undefined;\r\n            return value;\r\n        }, 4);\r\n    }\r\n\r\n    tuidFromName(fieldName:string, arrName?:string):Tuid {\r\n        if (this.schema === undefined) return;\r\n        let {fields, arrs} = this.schema;\r\n        let entities = this.uq;\r\n        function getTuid(fn:string, fieldArr:Field[]) {\r\n            if (fieldArr === undefined) return;\r\n            let f = fieldArr.find(v => v.name === fn);\r\n            if (f === undefined) return;\r\n            return entities.getTuid(f.tuid);\r\n        }\r\n        let fn = fieldName.toLowerCase();\r\n        if (arrName === undefined) return getTuid(fn, fields);\r\n        if (arrs === undefined) return;\r\n        let an = arrName.toLowerCase();\r\n        let arr = (arrs as ArrFields[]).find(v => v.name === an);\r\n        if (arr === undefined) return;\r\n        return getTuid(fn, arr.fields);\r\n    }\r\n\r\n    protected buildParams(params:any):any {\r\n        let result = {};\r\n        let fields = this.fields;\r\n        if (fields !== undefined) this.buildFieldsParams(result, fields, params);\r\n        let arrs = this.arrFields;\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                let {name, fields} = arr;\r\n                let paramsArr:any[] = params[name];\r\n                if (paramsArr === undefined) continue;\r\n                let arrResult = [];\r\n                result[name] = arrResult;\r\n                for (let pa of params) {\r\n                    let rowResult = {};\r\n                    this.buildFieldsParams(rowResult, fields, pa);\r\n                    arrResult.push(rowResult);\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private buildFieldsParams(result:any, fields:Field[], params:any) {\r\n        for (let field of fields) {\r\n            let {name} = field;\r\n            let d = params[name];\r\n            let val:any;\r\n            switch (typeof d) {\r\n                default: val = d; break;\r\n                case 'object':\r\n                    let tuid = field._tuid;\r\n                    if (tuid === undefined) val = d.id;\r\n                    else val = tuid.getIdFromObj(d);\r\n                    break;\r\n            }\r\n            result[name] = val;\r\n        }\r\n    }\r\n\r\n    pack(data:any):string {\r\n        let ret:string[] = [];\r\n        let fields = this.fields;\r\n        if (fields !== undefined) this.packRow(ret, fields, data);\r\n        let arrs = this.arrFields; //schema['arrs'];\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                this.packArr(ret, arr.fields, data[arr.name]);\r\n            }\r\n        }\r\n        return ret.join('');\r\n    }\r\n\r\n    private escape(row:any, field:Field):any {\r\n        let d = row[field.name];\r\n        switch (typeof d) {\r\n            default: return d;\r\n            case 'object':\r\n                let tuid = field._tuid;\r\n                if (tuid === undefined) return d.id;\r\n                return tuid.getIdFromObj(d);\r\n            case 'string':\r\n                let len = d.length;\r\n                let r = '', p = 0;\r\n                for (let i=0;i<len;i++) {\r\n                    let c = d.charCodeAt(i);\r\n                    switch(c) {\r\n                        case 9: r += d.substring(p, i) + '\\\\t'; p = i+1; break;\r\n                        case 10: r += d.substring(p, i) + '\\\\n'; p = i+1; break;\r\n                    }\r\n                }\r\n                return r + d.substring(p);\r\n            case 'undefined': return '';\r\n        }\r\n    }\r\n\r\n    private packRow(result:string[], fields:Field[], data:any) {\r\n        let len = fields.length;\r\n        if (len === 0) return;\r\n        let ret = '';\r\n        ret += this.escape(data, fields[0]);\r\n        for (let i=1;i<len;i++) {\r\n            let f = fields[i];\r\n            ret += tab + this.escape(data, f);\r\n        }\r\n        result.push(ret + ln);\r\n    }\r\n\r\n    private packArr(result:string[], fields:Field[], data:any[]) {\r\n        if (data !== undefined) {\r\n            for (let row of data) {\r\n                this.packRow(result, fields, row);\r\n            }\r\n        }\r\n        result.push(ln);\r\n    }\r\n    protected cacheFieldsInValue(values:any, fields:Field[]) {\r\n        for (let f of fields as Field[]) {\r\n            let {name, _tuid} = f;\r\n            if (_tuid === undefined) continue;\r\n            let id = values[name];\r\n            //_tuid.useId(id);\r\n            values[name] = _tuid.boxId(id);\r\n        }\r\n    }\r\n\r\n    protected unpackTuidIdsOfFields(values:any[]|string, fields: Field[]):any[] {\r\n        if (fields === undefined) return values as any[];\r\n        //if (this.fields === undefined) return values as any[];\r\n        let ret:any[] = []\r\n        let len = (values as string).length;\r\n        let p = 0;\r\n        while (p<len) {\r\n            let ch = (values as string).charCodeAt(p);\r\n            if (ch === 10) {\r\n                ++p;\r\n                break;\r\n            }\r\n            let row = {};\r\n            p = this.unpackRow(row, fields, values as string, p);\r\n            ret.push(row);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    unpackSheet(data:string):any {\r\n        let ret = {} as any; //new this.newMain();\r\n        //if (schema === undefined || data === undefined) return;\r\n        let fields = this.fields;\r\n        let p = 0;\r\n        if (fields !== undefined) p = this.unpackRow(ret, fields, data, p);\r\n        let arrs = this.arrFields; //schema['arrs'];\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                p = this.unpackArr(ret, arr, data, p);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    unpackReturns(data:string):any {\r\n        let ret = {} as any;\r\n        //if (schema === undefined || data === undefined) return;\r\n        //let fields = schema.fields;\r\n        let p = 0;\r\n        //if (fields !== undefined) p = unpackRow(ret, schema.fields, data, p);\r\n        let arrs = this.returns; //schema['returns'];\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                //let creater = this.newRet[arr.name];\r\n                p = this.unpackArr(ret, arr, data, p);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    protected unpackRow(ret:any, fields:Field[], data:string, p:number):number {\r\n        let ch0 = 0, ch = 0, c = p, i = 0, len = data.length, fLen = fields.length;\r\n        for (;p<len;p++) {\r\n            ch0 = ch;\r\n            ch = data.charCodeAt(p);\r\n            if (ch === 9) {\r\n                let f = fields[i];\r\n                let {name} = f;\r\n                if (ch0 !== 8) {\r\n                    if (p>c) {\r\n                        let v = data.substring(c, p);\r\n                        ret[name] = this.to(ret, v, f);\r\n                    }\r\n                }\r\n                else {\r\n                    ret[name] = null;\r\n                }\r\n                c = p+1;\r\n                ++i;\r\n                if (i>=fLen) {\r\n                    p = data.indexOf('\\n', c);\r\n                    if (p >= 0) ++p;\r\n                    else p = len;\r\n                    break;\r\n                }\r\n            }\r\n            else if (ch === 10) {\r\n                let f = fields[i];\r\n                let {name} = f;\r\n                if (ch0 !== 8) {\r\n                    if (p>c) {\r\n                        let v = data.substring(c, p);\r\n                        ret[name] = this.to(ret, v, f);\r\n                    }\r\n                }\r\n                else {\r\n                    ret[name] = null;\r\n                }\r\n                ++p;\r\n                ++i;\r\n                break;\r\n            }\r\n        }\r\n        return p;\r\n    }\r\n\r\n    private to(ret:any, v:string, f:Field):any {\r\n        switch (f.type) {\r\n            default: return v;\r\n            case 'datetime':\r\n            case 'time':\r\n                let date = new Date(Number(v));\r\n                return date;\r\n            case 'date':\r\n                let parts = v.split('-');\r\n                return new Date(Number(parts[0]), Number(parts[1])-1, Number(parts[2]));\r\n            case 'tinyint':\r\n            case 'smallint':\r\n            case 'int':\r\n            case 'bigint':\r\n            case 'dec':\r\n                return Number(v);\r\n            case 'id':\r\n                let id = Number(v);\r\n                let {_tuid} = f;\r\n                if (_tuid === undefined) return id;\r\n                return _tuid.boxId(id);\r\n        }\r\n    }\r\n\r\n    private unpackArr(ret:any, arr:ArrFields, data:string, p:number):number {\r\n        let vals:any[] = [], len = data.length;\r\n        let {name, fields} = arr;\r\n        while (p<len) {\r\n            let ch = data.charCodeAt(p);\r\n            if (ch === 10) {\r\n                ++p;\r\n                break;\r\n            }\r\n            let val = {} as any; //new creater();\r\n            vals.push(val);\r\n            p = this.unpackRow(val, fields, data, p);\r\n        }\r\n        ret[name] = vals;\r\n        return p;\r\n    }\r\n}\r\n","import { observable } from 'mobx';\r\nimport { isNumber } from 'util';\r\nimport { BoxId } from './boxId';\r\nimport { TuidLocal } from './tuid';\r\nimport { TuidDiv } from './tuidDiv'\r\n\r\nconst maxCacheSize = 1000;\r\n\r\nexport class IdCache {\r\n    private queue: number[] = [];               // 每次使用，都排到队头\r\n    private cache = observable.map({}, {deep: false});    // 已经缓冲的\r\n\r\n    protected waitingIds: number[] = [];          // 等待loading的\r\n    protected tuidLocal: TuidLocal;\r\n\r\n    constructor(tuidLocal: TuidLocal) {\r\n        this.tuidLocal = tuidLocal;\r\n    }\r\n\r\n    useId(id:number, defer?:boolean) {\r\n        if (id === undefined || id === 0) return;\r\n        if (isNumber(id) === false) return;\r\n        if (this.cache.has(id) === true) {\r\n            this.moveToHead(id);\r\n            return;\r\n        }\r\n        this.tuidLocal.cacheTuids(defer===true?70:20);\r\n        //let idVal = this.createID(id);\r\n        this.cache.set(id, id);\r\n        if (this.waitingIds.findIndex(v => v === id) >= 0) {\r\n            this.moveToHead(id);\r\n            return;\r\n        }\r\n\r\n        if (this.queue.length >= maxCacheSize) {\r\n            // 缓冲已满，先去掉最不常用的\r\n            let r = this.queue.shift();\r\n            if (r === id) {\r\n                // 如果移除的，正好是现在用的，则插入\r\n                this.queue.push(r);\r\n                return;\r\n            }\r\n\r\n            //let rKey = String(r);\r\n            if (this.cache.has(r) === true) {\r\n                // 如果移除r已经缓存\r\n                this.cache.delete(r);\r\n            }\r\n            else {\r\n                // 如果移除r还没有缓存\r\n                let index = this.waitingIds.findIndex(v => v === r);\r\n                this.waitingIds.splice(index, 1);\r\n            }\r\n        }\r\n        this.waitingIds.push(id);\r\n        this.queue.push(id);\r\n        return;\r\n    }\r\n\r\n    private moveToHead(id:number) {\r\n        let index = this.queue.findIndex(v => v === id);\r\n        this.queue.splice(index, 1);\r\n        this.queue.push(id);\r\n    }\r\n\r\n    getValue(id:number) {\r\n        return this.cache.get(id);\r\n    }\r\n\r\n    valueFromId(id:number|BoxId):any {\r\n        let _id:number;\r\n        switch (typeof id) {\r\n            case 'object': _id = (id as BoxId).id; break;\r\n            case 'number': _id = id as number; break;\r\n            default: return;\r\n        }\r\n        return this.getValue(_id);\r\n    }\r\n\r\n    resetCache(id:number) {\r\n        this.cache.delete(id);\r\n        let index = this.queue.findIndex(v => v === id);\r\n        this.queue.splice(index, 1);\r\n        this.useId(id);\r\n    }\r\n\r\n    cacheValue(val:any):boolean {\r\n        if (val === undefined) return false;\r\n        let id = this.getIdFromObj(val);\r\n        if (id === undefined) return false;\r\n        let index = this.waitingIds.findIndex(v => v === id);\r\n        if (index>=0) this.waitingIds.splice(index, 1);\r\n        //let cacheVal = this.createID(id, val);\r\n        this.cache.set(id, val);\r\n        return true;\r\n    }\r\n    protected getIdFromObj(val:any) {return this.tuidLocal.getIdFromObj(val)}\r\n    /*\r\n    protected afterCacheValue(tuidValue:any) {\r\n        let {fields} = this.tuidLocal;\r\n        if (fields === undefined) return;\r\n        for (let f of fields) {\r\n            let {_tuid} = f;\r\n            if (_tuid === undefined) continue;\r\n            _tuid.useId(tuidValue[f.name]);\r\n        }\r\n    }\r\n    */\r\n    async cacheIds():Promise<void> {\r\n        if (this.waitingIds.length === 0) return;\r\n        let tuidValues = await this.loadIds();\r\n        await this.cacheIdValues(tuidValues);\r\n    }\r\n\r\n    private async cacheIdValues(tuidValues: any[]) {\r\n        if (tuidValues === undefined) return;\r\n        let tuids = this.unpackTuidIds(tuidValues);\r\n        for (let tuidValue of tuids) {\r\n            if (this.cacheValue(tuidValue) === false) continue;\r\n            this.cacheTuidFieldValues(tuidValue);\r\n            //this.afterCacheValue(tuidValue);\r\n        }\r\n    }\r\n    protected divName:string = undefined;\r\n    protected async loadIds(): Promise<any[]> {\r\n        let ret = await this.tuidLocal.loadTuidIds(this.divName, this.waitingIds);\r\n        return ret;\r\n    }\r\n    protected unpackTuidIds(values:any[]|string):any[] {\r\n        return this.tuidLocal.unpackTuidIds(values);\r\n    }\r\n    protected cacheTuidFieldValues(tuidValue: any) {\r\n        this.tuidLocal.cacheTuidFieldValues(tuidValue);\r\n    }\r\n\r\n    async assureObj(id:number):Promise<void> {\r\n        let val = this.cache.get(id);\r\n        switch (typeof val) {\r\n            case 'object': return;\r\n            case 'number': this.cache.set(id, id); break;\r\n        }\r\n        let ret = await this.tuidLocal.loadTuidIds(this.divName, [id]);\r\n        await this.cacheIdValues(ret);\r\n    }\r\n}\r\n\r\nexport class IdDivCache extends IdCache {\r\n    private div: TuidDiv;\r\n    protected divName:string;\r\n\r\n    constructor(tuidLocal:TuidLocal, div: TuidDiv) {\r\n        super(tuidLocal);\r\n        this.div = div;\r\n        this.divName = div.name;\r\n    }\r\n    protected getIdFromObj(val:any) {return this.div.getIdFromObj(val)}\r\n    protected unpackTuidIds(values:any[]|string):any[] {\r\n        return this.div.unpackTuidIds(values);\r\n    }\r\n    protected cacheTuidFieldValues(tuidValue: any) {\r\n        this.div.cacheTuidFieldValues(tuidValue);\r\n    }\r\n    /*\r\n    async cacheIds():Promise<void> {\r\n        if (this.waitingIds.length === 0) return;\r\n        let tuidValues = await this.loadIds();\r\n        if (tuidValues !== undefined) {\r\n            let tuids = this.tuidLocal.unpackTuidIds(tuidValues);\r\n            for (let tuidValue of tuids) {\r\n                if (this.cacheValue(tuidValue) === false) continue;\r\n                this.tuidLocal.cacheTuidFieldValues(tuidValue);\r\n                this.afterCacheValue(tuidValue);\r\n            }\r\n        }\r\n    }\r\n    */\r\n}\r\n","import { BoxId, BoxDivId } from './boxId';\r\nimport { Tuid } from './tuid';\r\nimport { TuidDiv } from './tuidDiv';\r\nimport { Field } from '../uq';\r\n\r\n// field._tuid 用这个接口\r\n// Tuid, TuidDiv 实现这个接口\r\nexport class TuidBox {\r\n    tuid: Tuid;\r\n    ownerField:Field = undefined;\r\n    constructor(tuid: Tuid) {\r\n        this.tuid = tuid;\r\n    }\r\n\r\n    boxId(id:number):BoxId {\r\n        return this.tuid.boxId(id);\r\n    }\r\n    getIdFromObj(obj:any):number {\r\n        return this.tuid.getIdFromObj(obj);\r\n    }\r\n    useId(id:number):void {\r\n        return this.tuid.useId(id);\r\n    }\r\n    async showInfo() {\r\n        alert('showInfo not implemented');\r\n    }\r\n}\r\n\r\nexport class TuidBoxDiv extends TuidBox {\r\n    ownerField: Field;\r\n    private div: TuidDiv;\r\n    constructor(tuid: Tuid, div: TuidDiv, ownerField: Field) {\r\n        super(tuid);\r\n        this.div = div;\r\n        this.ownerField = ownerField;\r\n    }\r\n\r\n    boxId(id:number):BoxId {\r\n        return this.div.boxId(id);\r\n    }\r\n    getIdFromObj(obj:any):number {\r\n        return this.div.getIdFromObj(obj);\r\n    }\r\n    useId(id:number):void {\r\n        return this.div.useId(id);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Tuid, TuidLocal } from './tuid';\r\nimport { TuidDiv } from './tuidDiv';\r\nimport { TvTemplet } from '../../tools';\r\nimport { PureJSONContent } from '../../controllers';\r\n\r\nexport class BoxId {\r\n    readonly id: number;\r\n    //obj?: any;\r\n    //content: (templet?:(values?:any, x?:any)=>JSX.Element, x?:any)=>JSX.Element;\r\n    //valueFromFieldName: (fieldName:string)=>BoxId|any;\r\n    //_$com?: any;\r\n    //_$tuid?: TuidBase;\r\n    //getObj: ()=>any;\r\n    protected tuid: Tuid;\r\n    get obj():any {\r\n        return this.tuid.valueFromId(this.id);\r\n    }\r\n\r\n    constructor(tuid: Tuid, id: number) {\r\n        this.tuid = tuid;\r\n        this.id = id;\r\n    }\r\n\r\n    render(ui:TvTemplet, x:any):JSX.Element {\r\n        if (this.id === undefined || this.id === null) return;\r\n        let boxName = this.boxName(); // this.tuid.name;\r\n        let val = this.obj; // this.tuid.valueFromId(this.id);\r\n        if (this.isUndefined() === true) {\r\n            if (ui !== undefined) return ui(val, x);\r\n            return PureJSONContent(val, x);\r\n        }\r\n        switch (typeof val) {\r\n            case 'undefined':\r\n                return <del className=\"text-black-50\">{boxName} undefined</del>;\r\n            case 'number':\r\n                return <del className=\"text-black-50\">{boxName} {this.id}</del>;\r\n        }\r\n        if (ui === undefined) {\r\n            ui = this.ui();\r\n        }\r\n        if (ui !== undefined) {\r\n            let ret = ui(val, this.res());\r\n            if (ret !== undefined) return ret;\r\n            return <del className=\"text-danger\">{boxName} {this.id}</del>;\r\n        }\r\n\r\n        return PureJSONContent(val);\r\n    }\r\n\r\n    boxName():string {return this.tuid.name}\r\n    //valueFromId(): any {return this.tuid.valueFromId(this.id)}\r\n    isUndefined(): boolean {return this.tuid === undefined}\r\n    ui(): TvTemplet {return this.tuid.ui}\r\n    res(): any {return this.tuid.res}\r\n\r\n    async assure(): Promise<void> {\r\n        await this.tuid.assureBox(this.id);\r\n    }\r\n}\r\n\r\nexport class BoxDivId extends BoxId {\r\n    private div: TuidDiv;\r\n    constructor(tuid: Tuid, div: TuidDiv, id: number) {\r\n        super(tuid, id);\r\n        this.div = div;\r\n    }\r\n    get obj():any {\r\n        return this.div.valueFromId(this.id);\r\n    }\r\n    boxName():string {return this.div.name}\r\n    //valueFromId(): any {return this.div.valueFromId(this.id)}\r\n    isUndefined(): boolean {return this.div === undefined}\r\n    ui(): TvTemplet {return this.div.ui}\r\n    res(): any {return this.div.res}\r\n\r\n    async assure(): Promise<void> {\r\n        await this.div.assureBox(this.id);\r\n    }\r\n\r\n/*\r\n    render(ui:TvTemplet, x:any):JSX.Element {\r\n        if (this.id === undefined || this.id === null) return;\r\n        //let {name} = this.tuid;\r\n        let boxName = this.div.name;\r\n        let val = this.div.valueFromId(this.id);\r\n        if (this.div === undefined) {\r\n            if (ui !== undefined) return ui(val, x);\r\n            return PureJSONContent(val, x);\r\n        }\r\n        switch (typeof val) {\r\n            case 'undefined':\r\n                return <del className=\"text-black-50\">{boxName} undefined</del>;\r\n            case 'number':\r\n                return <del className=\"text-black-50\">{boxName} {this.id}</del>;\r\n        }\r\n        if (ui === undefined) {\r\n            ui = this.div.ui;\r\n        }\r\n        if (ui !== undefined) {\r\n            return PureJSONContent(val);\r\n        }\r\n\r\n        let ret = ui(val, this.div.res);\r\n        if (ret !== undefined) return ret;\r\n        return <del className=\"text-danger\">{boxName} {this.id}</del>;\r\n    }\r\n*/\r\n}\r\n","import { Tuid, TuidLocal } from './tuid';\r\nimport { IdCache, IdDivCache } from './idCache';\r\nimport { TuidBox, TuidBoxDiv } from './tuidBox';\r\nimport { BoxId, BoxDivId } from './boxId';\r\nimport { Field, Uq } from '../uq';\r\nimport { Entity } from '../entity';\r\n\r\nexport class TuidDiv extends Entity {\r\n    readonly typeName = 'div';\r\n    private cacheFields: Field[];\r\n    protected tuid: TuidLocal;\r\n    protected idName: string;\r\n    protected idCache: IdDivCache;;\r\n\r\n    ui: React.StatelessComponent<any>;\r\n    res: any;\r\n\r\n    constructor(uq: Uq, tuid: TuidLocal, name: string) {\r\n        super(uq, name, 0);\r\n        this.tuid = tuid;\r\n        this.idName = 'id';\r\n        this.idCache = new IdDivCache(tuid, this);\r\n    }\r\n\r\n    get owner() {return this.tuid}\r\n\r\n    /*\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        this.buildFieldsTuid();\r\n    }*/\r\n\r\n    setUIRes(ui:any, res:any) {\r\n        this.ui = ui && ui.content;\r\n        this.res = res;\r\n    }\r\n\r\n    buildFieldsTuid() {\r\n        super.buildFieldsTuid();\r\n        let {mainFields} = this.schema;\r\n        if (mainFields === undefined) debugger;\r\n        this.uq.buildFieldTuid(this.cacheFields = mainFields);\r\n    }\r\n\r\n    buildTuidBox(ownerField: Field): TuidBox {\r\n        return new TuidBoxDiv(this.tuid, this, ownerField);\r\n    }\r\n\r\n    getIdFromObj(obj:any):number {return obj[this.idName]}\r\n    cacheValue(value:any):void {\r\n        this.idCache.cacheValue(value);\r\n    }\r\n\r\n    useId(id:number, defer?:boolean):void {\r\n        this.idCache.useId(id, defer);\r\n    }\r\n\r\n    boxId(id:number):BoxId {\r\n        if (typeof id === 'object') return id;\r\n        this.useId(id);\r\n        return new BoxDivId(this.tuid, this, id);\r\n    }\r\n\r\n    valueFromId(id:number):any {\r\n        return this.idCache.getValue(id)\r\n    }\r\n\r\n    async assureBox(id:number):Promise<void> {\r\n        await this.idCache.assureObj(id);\r\n    }\r\n\r\n    async cacheIds() {\r\n        await this.idCache.cacheIds();\r\n    }\r\n\r\n    cacheTuidFieldValues(values:any) {\r\n        let fields = this.schema.fields;\r\n        this.cacheFieldsInValue(values, fields);\r\n    }\r\n\r\n    unpackTuidIds(values:any[]|string):any[] {\r\n        return this.unpackTuidIdsOfFields(values, this.cacheFields);\r\n    }\r\n}\r\n","import _ from 'lodash';\r\nimport { Entity } from '../entity';\r\nimport { IdCache } from './idCache';\r\nimport { TuidDiv } from './tuidDiv';\r\nimport { Uq, ArrFields, Field, SchemaFrom } from '../uq';\r\nimport { TuidBox } from './tuidBox';\r\nimport { BoxId } from './boxId';\r\n\r\nexport interface TuidSaveResult {\r\n    id: number;\r\n    inId: number;\r\n}\r\n\r\nexport abstract class Tuid extends Entity {\r\n    readonly typeName = 'tuid';\r\n    private idName: string;\r\n    unique: string[];\r\n    ui: React.StatelessComponent<any>;\r\n    res: any;\r\n\r\n    constructor(uq:Uq, name:string, typeId:number) {\r\n        super(uq, name, typeId)\r\n    }\r\n\r\n    public setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        let {id} = schema;\r\n        this.idName = id;\r\n    }\r\n\r\n    buildTuidBox(): TuidBox {\r\n        return new TuidBox(this);\r\n    }\r\n    \r\n    setUIRes(ui:any, res:any) {\r\n        //this.ui = (ui as TuidUI).content;\r\n        this.ui = ui.content;\r\n        this.res = res;\r\n    }\r\n\r\n    getIdFromObj(obj:any):number {return obj[this.idName]}\r\n    abstract useId(id:number):void;\r\n    abstract boxId(id:number):BoxId;\r\n    abstract valueFromId(id:number):any;\r\n    abstract async assureBox(id:number):Promise<void>;\r\n    cacheIds() {}\r\n    isImport = false;\r\n    abstract get hasDiv():boolean;// {return this.divs!==undefined}\r\n    abstract div(name:string):TuidDiv;\r\n    abstract async load(id:number|BoxId):Promise<any>;\r\n    abstract async save(id:number, props:any):Promise<TuidSaveResult>;\r\n    abstract async search(key:string, pageStart:string|number, pageSize:number):Promise<any>;\r\n    abstract async searchArr(owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any>;\r\n    abstract async loadArr(arr:string, owner:number, id:number):Promise<any>;\r\n    abstract async saveArr(arr:string, owner:number, id:number, props:any):Promise<void>;\r\n    abstract async posArr(arr:string, owner:number, id:number, order:number):Promise<void>;\r\n}\r\n\r\nexport class TuidLocal extends Tuid {\r\n    private idCache: IdCache = new IdCache(this);\r\n    private cacheFields: Field[];\r\n    private divs: {[div:string]: TuidDiv};\r\n\r\n    public setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        let {arrs} = schema;\r\n        if (arrs !== undefined) {\r\n            this.divs = {};\r\n            for (let arr of arrs) {\r\n                let {name} = arr;\r\n                let tuidDiv = new TuidDiv(this.uq, this, name);\r\n                this.divs[name] = tuidDiv;\r\n                tuidDiv.setSchema(arr);\r\n                tuidDiv.buildFieldsTuid();\r\n            }\r\n        }\r\n    }\r\n    \r\n    setUIRes(ui:any, res:any) {\r\n        super.setUIRes(ui, res);\r\n        if (this.divs === undefined) return;\r\n        //let uiDivs = (ui as TuidUI).divs;\r\n        let uiDivs = ui.divs;\r\n        if (uiDivs === undefined) return;\r\n        for (let i in this.divs) {\r\n            this.divs[i].setUIRes(uiDivs[i], res);\r\n        }\r\n    }\r\n\r\n    useId(id:number, defer?:boolean) {\r\n        this.idCache.useId(id, defer);\r\n    }\r\n    boxId(id:number):BoxId {\r\n        if (typeof id === 'object') return id;\r\n        this.useId(id);\r\n        return new BoxId(this, id);\r\n    }\r\n    valueFromId(id:number) {return this.idCache.getValue(id)}\r\n    async assureBox(id:number):Promise<void> {\r\n        await this.idCache.assureObj(id);\r\n    }\r\n\r\n    cacheIds() {\r\n        this.idCache.cacheIds();\r\n        if (this.divs === undefined) return;\r\n        for (let i in this.divs) this.divs[i].cacheIds();\r\n    }\r\n    cacheTuids(defer:number) {this.uq.cacheTuids(defer)}\r\n    get hasDiv():boolean {return this.divs!==undefined}\r\n    div(name:string):TuidDiv {\r\n        return this.divs && this.divs[name];\r\n    }\r\n    async loadTuidIds(divName:string, ids:number[]):Promise<any[]> {\r\n        return await this.uqApi.tuidIds(this.name, divName, ids);\r\n    }\r\n    async load(id:number|BoxId):Promise<any> {\r\n        if (id === undefined || id === 0) return;\r\n        if (typeof id === 'object') id = id.id;\r\n        let values = await this.uqApi.tuidGet(this.name, id);\r\n        if (values === undefined) return;\r\n        for (let f of this.schema.fields) {\r\n            let {tuid} = f;\r\n            if (tuid === undefined) continue;\r\n            let t = this.uq.getTuid(tuid);\r\n            if (t === undefined) continue;\r\n            let n = f.name;\r\n            values[n] = t.boxId(values[n]);\r\n        }\r\n        //values._$tuid = this;\r\n        this.idCache.cacheValue(values);\r\n        this.cacheTuidFieldValues(values);\r\n        return values;\r\n    }\r\n\r\n    cacheTuidFieldValues(values:any) {\r\n        let {fields, arrs} = this.schema;\r\n        this.cacheFieldsInValue(values, fields);\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs as ArrFields[]) {\r\n                let {name, fields} = arr;\r\n                let arrValues = values[name];\r\n                if (arrValues === undefined) continue;\r\n                let tuidDiv = this.div(name);\r\n                for (let row of arrValues) {\r\n                    //row._$tuid = tuidDiv;\r\n                    //row.$owner = this.boxId(row.owner);\r\n                    tuidDiv.cacheValue(row);\r\n                    this.cacheFieldsInValue(row, fields);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public buildFieldsTuid() {\r\n        super.buildFieldsTuid();\r\n        let {mainFields} = this.schema;\r\n        if (mainFields === undefined) debugger;\r\n        this.uq.buildFieldTuid(this.cacheFields = mainFields || this.fields);\r\n    }\r\n\r\n    unpackTuidIds(values:any[]|string):any[] {\r\n        return this.unpackTuidIdsOfFields(values, this.cacheFields);\r\n    }\r\n\r\n    async save(id:number, props:any):Promise<TuidSaveResult> {\r\n        let {fields} = this.schema;\r\n        let params:any = {$id: id};\r\n        for (let field of fields as Field[]) {\r\n            let {name, tuid, type} = field;\r\n            let val = props[name];\r\n            if (tuid !== undefined) {\r\n                if (typeof val === 'object') {\r\n                    if (val !== null) val = val.id;\r\n                }\r\n            }\r\n            else {\r\n                switch (type) {\r\n                    case 'date':\r\n                    case 'datetime':\r\n                        val = new Date(val).toISOString();\r\n                        val = (val as string).replace('T', ' ');\r\n                        val = (val as string).replace('Z', '');\r\n                        break;\r\n                }\r\n            }\r\n            params[name] = val;\r\n        }\r\n        let ret = await this.uqApi.tuidSave(this.name, params);\r\n        return ret;\r\n    }\r\n    async search(key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        let ret:any[] = await this.searchArr(undefined, key, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    async searchArr(owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        let {fields} = this.schema;\r\n        let api = this.uqApi;\r\n        let ret = await api.tuidSearch(this.name, undefined, owner, key, pageStart, pageSize);\r\n        for (let row of ret) {\r\n            this.cacheFieldsInValue(row, fields);\r\n        }\r\n        return ret;\r\n    }\r\n    async loadArr(arr:string, owner:number, id:number):Promise<any> {\r\n        if (id === undefined || id === 0) return;\r\n        let api = this.uqApi;\r\n        return await api.tuidArrGet(this.name, arr, owner, id);\r\n    }\r\n    async saveArr(arr:string, owner:number, id:number, props:any) {\r\n        let params = _.clone(props);\r\n        params[\"$id\"] = id;\r\n        return await this.uqApi.tuidArrSave(this.name, arr, owner, params);\r\n    }\r\n\r\n    async posArr(arr:string, owner:number, id:number, order:number) {\r\n        return await this.uqApi.tuidArrPos(this.name, arr, owner, id, order);\r\n    }\r\n}\r\n\r\nexport class TuidImport extends Tuid {\r\n    private tuidLocal: TuidLocal;\r\n\r\n    constructor(uq:Uq, name:string, typeId:number, from: SchemaFrom) {\r\n        super(uq, name, typeId);\r\n        this.from = from;\r\n    }\r\n\r\n    setFrom(tuidLocal: TuidLocal) {this.tuidLocal = tuidLocal}\r\n    \r\n    readonly from: SchemaFrom;\r\n    isImport = true;\r\n\r\n    useId(id:number) {this.tuidLocal.useId(id);}\r\n    boxId(id:number):BoxId {return this.tuidLocal.boxId(id);}\r\n    valueFromId(id:number) {return this.tuidLocal.valueFromId(id)}\r\n    async assureBox(id:number):Promise<void> {\r\n        await this.tuidLocal.assureBox(id);\r\n    }\r\n    get hasDiv():boolean {return this.tuidLocal.hasDiv}\r\n    div(name:string):TuidDiv {return this.tuidLocal.div(name)}\r\n    async load(id:number|BoxId):Promise<any> {\r\n        return await this.tuidLocal.load(id);\r\n    }\r\n    async save(id:number, props:any):Promise<TuidSaveResult> {\r\n        return await this.tuidLocal.save(id, props);\r\n    }\r\n    async search(key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        return await this.tuidLocal.search(key, pageStart, pageSize);\r\n    }\r\n    async searchArr(owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        return await this.tuidLocal.searchArr(owner, key, pageStart, pageSize);\r\n    }\r\n    async loadArr(arr:string, owner:number, id:number):Promise<any> {\r\n        return await this.tuidLocal.loadArr(arr, owner, id);\r\n    }\r\n    async saveArr(arr:string, owner:number, id:number, props:any):Promise<void> {\r\n        await this.tuidLocal.saveArr(arr, owner, id, props);\r\n    }\r\n    async posArr(arr:string, owner:number, id:number, order:number):Promise<void> {\r\n        await this.tuidLocal.posArr(arr, owner, id, order);\r\n    }\r\n}\r\n","import {Entity} from './entity';\r\n\r\nexport class Action extends Entity {\r\n    get typeName(): string { return 'action';}\r\n    async submit(data:object) {\r\n        await this.loadSchema();\r\n        let text = this.pack(data);\r\n        return await this.uqApi.action(this.name, {data:text});\r\n    }\r\n}\r\n\r\n","import { Entity } from './entity';\r\nimport { PageItems } from '../../pageItems';\r\n\r\nexport interface SheetState {\r\n    name: string;\r\n    actions: SheetAction[];\r\n}\r\n\r\nexport interface SheetAction {\r\n    name: string;\r\n}\r\n\r\nexport interface StateCount {\r\n    state: string;\r\n    count: number;\r\n}\r\n\r\nexport class Sheet extends Entity {\r\n    get typeName(): string { return 'sheet';}\r\n    states: SheetState[];\r\n\r\n    /*\r\n    setStates(states: SheetState[]) {\r\n        for (let state of states) {\r\n            this.setStateAccess(this.states.find(s=>s.name==state.name), state);\r\n        }\r\n    }*/\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        this.states = schema.states;\r\n    }\r\n    build(obj:any) {\r\n        this.states = [];\r\n        for (let op of obj.ops) {\r\n            this.states.push({name: op, actions:undefined});\r\n        }\r\n        /*\r\n        for (let p in obj) {\r\n            switch(p) {\r\n                case '#':\r\n                case '$': continue;\r\n                default: this.states.push(this.createSheetState(p, obj[p])); break;\r\n            }\r\n        }*/\r\n    }\r\n    private createSheetState(name:string, obj:object):SheetState {\r\n        let ret:SheetState = {name:name, actions:[]};\r\n        let actions = ret.actions;\r\n        for (let p in obj) {\r\n            let action:SheetAction = {name: p};\r\n            actions.push(action);\r\n        }\r\n        return ret;\r\n    }\r\n    /*\r\n    private setStateAccess(s:SheetState, s1:SheetState) {\r\n        if (s === undefined) return;\r\n        for (let action of s1.actions) {\r\n            let acn = action.name;\r\n            let ac = s.actions.find(a=>a.name === acn);\r\n            if (ac === undefined) continue;\r\n            s.actions.push(action);\r\n        }\r\n    }*/\r\n    async save(discription:string, data:any):Promise<any> {\r\n        await this.loadSchema();\r\n        let {id} = this.uq;\r\n        let text = this.pack(data);\r\n\r\n        let ret = await this.uqApi.sheetSave(this.name, {app: id, discription: discription, data:text});\r\n        return ret;\r\n        /*\r\n        let {id, state} = ret;\r\n        if (id > 0) this.changeStateCount(state, 1);\r\n        return ret;\r\n        */\r\n    }\r\n    async action(id:number, flow:number, state:string, action:string) {\r\n        await this.loadSchema();\r\n        return await this.uqApi.sheetAction(this.name, {id:id, flow:flow, state:state, action:action});\r\n    }\r\n    private unpack(data:any):any {\r\n        //if (this.schema === undefined) await this.loadSchema();\r\n        let ret = data[0];\r\n        let brief = ret[0];\r\n        let sheetData = this.unpackSheet(brief.data);\r\n        let flows = data[1];\r\n        return {\r\n            brief: brief,\r\n            data: sheetData,\r\n            flows: flows,\r\n        }\r\n    }\r\n    async getSheet(id:number):Promise<any> {\r\n        await this.loadSchema();\r\n        let ret = await this.uqApi.getSheet(this.name, id);\r\n        if (ret[0].length === 0) return await this.getArchive(id);\r\n        return this.unpack(ret);\r\n    }\r\n    async getArchive(id:number):Promise<any> {\r\n        await this.loadSchema();\r\n        let ret = await this.uqApi.sheetArchive(this.name, id)\r\n        return this.unpack(ret);\r\n    }\r\n\r\n    async getArchives(pageStart:number, pageSize:number) {\r\n        await this.loadSchema();\r\n        let ret = await this.uqApi.sheetArchives(this.name, {pageStart:pageStart, pageSize:pageSize});\r\n        return ret;\r\n    }\r\n\r\n    async getStateSheets(state:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        await this.loadSchema();\r\n        let ret = await this.uqApi.stateSheets(this.name, {state:state, pageStart:pageStart, pageSize:pageSize});\r\n        return ret;\r\n    }\r\n    createPageStateItems<T>(): PageStateItems<T> {return new PageStateItems<T>(this);}\r\n\r\n    async stateSheetCount():Promise<StateCount[]> {\r\n        await this.loadSchema();\r\n        let ret:StateCount[] = await this.uqApi.stateSheetCount(this.name);\r\n        return this.states.map(s => {\r\n            let n = s.name, count = 0;\r\n            let r = ret.find(v => v.state === n);\r\n            if (r !== undefined) count = r.count;\r\n            return {state: n, count: count} \r\n        });\r\n    }\r\n\r\n    async mySheets(state:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        await this.loadSchema();\r\n        let ret = await this.uqApi.mySheets(this.name, {state:state, pageStart:pageStart, pageSize:pageSize});\r\n        return ret;\r\n    }\r\n}\r\n\r\nexport class PageStateItems<T> extends PageItems<T> {\r\n    private sheet: Sheet;\r\n    constructor(sheet: Sheet) {\r\n        super(true);\r\n        this.sheet = sheet;\r\n        this.pageSize = 10;\r\n    }\r\n    protected async load(param:any, pageStart:any, pageSize:number):Promise<any[]> {\r\n        let ret = await this.sheet.getStateSheets(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:any) {\r\n        this.pageStart = item === undefined? 0 : item.id;\r\n    }\r\n}\r\n","import {observable, IObservableArray} from 'mobx';\r\nimport {Field, ArrFields} from './uq';\r\nimport {Entity} from './entity';\r\n\r\nexport type QueryPageApi = (name:string, pageStart:any, pageSize:number, params:any) => Promise<string>;\r\nexport class Query extends Entity {\r\n    get typeName(): string { return 'query';}\r\n    private pageStart: any;\r\n    private pageSize:number;\r\n    private params:any;\r\n    private more: boolean;\r\n    private startField: Field;\r\n    @observable list:IObservableArray; // = observable.array([], {deep: false});\r\n    returns: ArrFields[];\r\n    isPaged: boolean;\r\n\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        let {returns} = schema;\r\n        //this.returns = returns;\r\n        this.isPaged = returns && (returns as any[]).find(v => v.name === '$page') !== undefined;\r\n    }\r\n\r\n    resetPage(size:number, params:any) {\r\n        this.pageStart = undefined;\r\n        this.pageSize = size;\r\n        this.params = params;\r\n        this.more = false;\r\n        this.list = undefined;\r\n    }\r\n    get hasMore() {return this.more;}\r\n    async loadPage():Promise<void> {\r\n        if (this.pageSize === undefined) {\r\n            throw 'call resetPage(size:number, params:any) first';\r\n        }\r\n        let pageStart:any;\r\n        if (this.pageStart !== undefined) {\r\n            switch (this.startField.type) {\r\n                default: pageStart = this.pageStart; break;\r\n                case 'date':\r\n                case 'time':\r\n                case 'datetime': pageStart = (this.pageStart as Date).getTime(); break;\r\n            }\r\n        }\r\n        let page = await this.page(this.params, pageStart, this.pageSize+1);\r\n        /*\r\n        await this.loadSchema();\r\n        let res = await this.tvApi.page(this.name, pageStart, this.pageSize+1, this.params);\r\n        let data = await this.unpackReturns(res);\r\n        let page = data['$page'] as any[];\r\n        */\r\n        this.list = observable.array([], {deep: false});\r\n        if (page !== undefined) {\r\n            if (page.length > this.pageSize) {\r\n                this.more = true;\r\n                page.pop();\r\n                let ret = this.returns.find(r => r.name === '$page');\r\n                this.startField = ret.fields[0];\r\n                this.pageStart = page[page.length-1][this.startField.name];\r\n            }\r\n            else {\r\n                this.more = false;\r\n            }\r\n            this.list.push(...page);\r\n        }\r\n        //this.loaded = true;\r\n    }\r\n\r\n    async page(params:any, pageStart:any, pageSize:number):Promise<any[]> {\r\n        await this.loadSchema();\r\n        let res = await this.uqApi.page(this.name, pageStart, pageSize+1, this.buildParams(params));\r\n        let data = this.unpackReturns(res);\r\n        return data.$page;// as any[];\r\n    }\r\n    async query(params:any):Promise<any> {\r\n        await this.loadSchema();\r\n        let res = await this.uqApi.query(this.name, this.buildParams(params));\r\n        let data = this.unpackReturns(res);\r\n        return data;\r\n    }\r\n    async table(params:any): Promise<any[]> {\r\n        let ret = await this.query(params);\r\n        for (let i in ret) {\r\n            return ret[i];\r\n        }\r\n    }\r\n    async obj(params:any):Promise<any> {\r\n        let ret = await this.table(params);\r\n        if (ret.length > 0) return ret[0];\r\n    }\r\n    async scalar(params:any):Promise<any> {\r\n        let ret = await this.obj(params);\r\n        for (let i in ret) return ret[i];\r\n    }\r\n}\r\n","import {Query} from './query';\r\n\r\nexport class Book extends Query {\r\n    get typeName(): string { return 'book';}\r\n    protected queryApiName = 'book';\r\n}\r\n","import {Query} from './query';\r\n\r\nexport class History extends Query {\r\n    get typeName(): string { return 'history';}\r\n    protected queryApiName = 'history';\r\n}\r\n","import { Entity } from './entity';\r\nimport { Action } from './action';\r\nimport { Query } from './query';\r\nimport { Field } from './uq';\r\n\r\ninterface MapActions {\r\n    add: Action;\r\n    del: Action;\r\n}\r\ninterface MapQueries {\r\n    all: Query;\r\n    page: Query;\r\n    query: Query;\r\n}\r\n\r\nexport class Map extends Entity {\r\n    get typeName(): string { return 'map';}\r\n    keys: Field[];\r\n    actions: MapActions = {} as any;\r\n    queries: MapQueries = {} as any;\r\n    schemaFrom: {owner:string; uq:string};\r\n\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        this.schemaFrom = this.schema.from;\r\n        let {actions, queries, keys} = schema;\r\n        this.uq.buildFieldTuid(this.keys = keys);\r\n        //let t = this.schemaStringify();\r\n        for (let i in actions) {\r\n            let actionSchema = actions[i];\r\n            let {name} = actionSchema;\r\n            let action = this.uq.newAction(name, undefined);\r\n            action.setSchema(actionSchema);\r\n            action.buildFieldsTuid();\r\n            this.actions[i] = action;\r\n        }\r\n        for (let i in queries) {\r\n            let querySchema = queries[i];\r\n            let {name} = querySchema;\r\n            let query = this.uq.newQuery(name, undefined);\r\n            query.setSchema(querySchema);\r\n            query.buildFieldsTuid();\r\n            this.queries[i] = query;\r\n        }\r\n    }\r\n\r\n    async add(param:any) {\r\n        await this.loadSchema();\r\n        return await this.actions.add.submit(param);\r\n    }\r\n\r\n    async del(param:any) {\r\n        await this.loadSchema();\r\n        return await this.actions.del.submit(param);\r\n    }\r\n\r\n    async all() {\r\n        await this.loadSchema();\r\n        return await this.queries.all.query({});\r\n    }\r\n\r\n    async page(param:any, pageStart:any, pageSize: number) {\r\n        await this.loadSchema();\r\n        return await this.queries.page.page(param, pageStart, pageSize);\r\n    }\r\n\r\n    async query(param:any) {\r\n        await this.loadSchema();\r\n        return await this.queries.query.query(param);\r\n    }\r\n    async table(params:any): Promise<any[]> {\r\n        let ret = await this.query(params);\r\n        for (let i in ret) {\r\n            return ret[i];\r\n        }\r\n    }\r\n    async obj(params:any):Promise<any> {\r\n        let ret = await this.table(params);\r\n        if (ret.length > 0) return ret[0];\r\n    }\r\n    async scalar(params:any):Promise<any> {\r\n        let ret = await this.obj(params);\r\n        for (let i in ret) return ret[i];\r\n    }\r\n}\r\n","import {Query} from './query';\r\n\r\nexport class Pending extends Query {\r\n    get typeName(): string { return 'pending';}\r\n    protected queryApiName = 'pending';\r\n}\r\n","import {Tuid, TuidDiv, TuidImport, TuidLocal, TuidBox} from './tuid';\r\nimport {Action} from './action';\r\nimport {Sheet} from './sheet';\r\nimport {Query} from './query';\r\nimport {Book} from './book';\r\nimport {History} from './history';\r\nimport { UqApi, UqData, UnitxApi, appInFrame } from '../../net';\r\nimport { Map } from './map';\r\nimport { Pending } from './pending';\r\nimport { UqApp } from './uqApp';\r\n\r\nexport type FieldType = 'id' | 'tinyint' | 'smallint' | 'int' | 'bigint' | 'dec' | 'char' | 'text'\r\n    | 'datetime' | 'date' | 'time';\r\n\r\nexport function fieldDefaultValue(type:FieldType) {\r\n    switch (type) {\r\n        case 'tinyint':\r\n        case 'smallint':\r\n        case 'int':\r\n        case 'bigint':\r\n        case 'dec':\r\n            return 0;\r\n        case 'char':\r\n        case 'text':\r\n            return '';\r\n        case 'datetime':\r\n        case 'date':\r\n            return '2000-1-1';\r\n        case 'time':\r\n            return '0:00';\r\n    }\r\n}\r\n\r\nexport interface Field {\r\n    name: string;\r\n    type: FieldType;\r\n    tuid?: string;\r\n    arr?: string;\r\n    null?: boolean;\r\n    size?: number;\r\n    owner?: string;\r\n    _tuid: TuidBox;\r\n    /*\r\n    _ownerField: Field;\r\n    _tuid: Tuid;\r\n    _div: TuidDiv;\r\n    */\r\n}\r\nexport interface ArrFields {\r\n    name: string;\r\n    fields: Field[];\r\n    id?: string;\r\n    order?: string;\r\n}\r\nexport interface FieldMap {\r\n    [name:string]: Field;\r\n}\r\nexport interface SchemaFrom {\r\n    owner:string;\r\n    uq:string;\r\n}\r\n\r\nclass TuidsCache {\r\n    private cacheTimer: any;\r\n    private tuids: {[name:string]: Tuid};\r\n    constructor(tuids: {[name:string]: Tuid}) {\r\n        this.tuids = tuids;\r\n    }\r\n\r\n    cacheTuids(defer:number) {\r\n        this.clearCacheTimer();\r\n        this.cacheTimer = setTimeout(this.loadIds, defer);\r\n    }\r\n    private clearCacheTimer() {\r\n        if (this.cacheTimer === undefined) return;\r\n        clearTimeout(this.cacheTimer);\r\n        this.cacheTimer = undefined;\r\n    }\r\n    private loadIds = () => {\r\n        this.clearCacheTimer();\r\n        for (let i in this.tuids) {\r\n            let tuid = this.tuids[i];\r\n            tuid.cacheIds();\r\n        }\r\n    }\r\n}\r\n\r\nexport class Uq {\r\n    private tuids: {[name:string]: Tuid} = {};\r\n    private actions: {[name:string]: Action} = {};\r\n    private sheets: {[name:string]: Sheet} = {};\r\n    private queries: {[name:string]: Query} = {};\r\n    private books: {[name:string]: Book} = {};\r\n    private maps: {[name:string]: Map} = {};\r\n    private histories: {[name:string]: History} = {};\r\n    private pendings: {[name:string]: Pending} = {};\r\n    private tuidsCache: TuidsCache;\r\n    private uqApp: UqApp;\r\n\r\n    name: string;\r\n    uqApi: UqApi;\r\n    id: number;\r\n\r\n    constructor(uqApp: UqApp, uqData: UqData) {\r\n        this.uqApp = uqApp;\r\n        this.tuidsCache = new TuidsCache(this.tuids);\r\n        let {id, uqOwner, uqName, access} = uqData;\r\n        this.id = id;\r\n        this.name = uqOwner + '/' + uqName;\r\n        let hash = document.location.hash;\r\n        let baseUrl = hash===undefined || hash===''? \r\n            'debug/':'tv/';\r\n\r\n        let acc: string[];\r\n        if (access === null || access === undefined || access === '*') {\r\n            acc = [];\r\n        }\r\n        else {\r\n            acc = access.split(';').map(v => v.trim()).filter(v => v.length > 0);\r\n        }\r\n        if (this.name === '$$$/$unitx') {\r\n            // 这里假定，点击home link之后，已经设置unit了\r\n            // 调用 UnitxApi会自动搜索绑定 unitx service\r\n            this.uqApi = new UnitxApi(appInFrame.unit);\r\n        }\r\n        else {\r\n            this.uqApi = new UqApi(baseUrl, uqOwner, uqName, acc, true);\r\n        }\r\n        //this.entities = new Uq(this, uqApi, appId);\r\n    }\r\n\r\n    tuid(name:string):Tuid {return this.tuids[name.toLowerCase()]}\r\n    tuidDiv(name:string, div:string):TuidDiv {\r\n        let tuid = this.tuids[name.toLowerCase()]\r\n        return tuid && tuid.div(div.toLowerCase());\r\n    }\r\n    action(name:string):Action {return this.actions[name.toLowerCase()]}\r\n    sheet(name:string):Sheet {return this.sheets[name.toLowerCase()]}\r\n    query(name:string):Query {return this.queries[name.toLowerCase()]}\r\n    book(name:string):Book {return this.books[name.toLowerCase()]}\r\n    map(name:string):Map {return this.maps[name.toLowerCase()]}\r\n    history(name:string):History {return this.histories[name.toLowerCase()]}\r\n    pending(name:string):Pending {return this.pendings[name.toLowerCase()]}\r\n\r\n    sheetFromTypeId(typeId:number):Sheet {\r\n        for (let i in this.sheets) {\r\n            let sheet = this.sheets[i];\r\n            if (sheet.typeId === typeId) return sheet;\r\n        }\r\n    }\r\n\r\n    tuidArr: Tuid[] = [];\r\n    actionArr: Action[] = [];\r\n    sheetArr: Sheet[] = [];\r\n    queryArr: Query[] = [];\r\n    bookArr: Book[] = [];\r\n    mapArr: Map[] = [];\r\n    historyArr: History[] = [];\r\n    pendingArr: Pending[] = [];\r\n\r\n    /*\r\n    private schemaLoaded:boolean = false;\r\n    async loadSchema(): Promise<string> {\r\n        try {\r\n            if (this.schemaLoaded === true) return;\r\n            await this.init();\r\n            await this.loadAccess();\r\n            this.schemaLoaded = true;\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n            return err;\r\n        }\r\n    }*/\r\n\r\n    async init() {\r\n        await this.uqApi.init();\r\n    }\r\n\r\n    async loadAccess() {\r\n        let accesses = await this.uqApi.loadAccess();\r\n        if (accesses === undefined) return;\r\n        this.buildEntities(accesses);\r\n    }\r\n\r\n    async loadEntities() {\r\n        let accesses = await this.uqApi.loadEntities();\r\n        this.buildEntities(accesses);\r\n    }\r\n\r\n    private buildEntities(entities:any) {\r\n        if (entities === undefined) {\r\n            debugger;\r\n        }\r\n        let {access, tuids} = entities;\r\n        this.buildTuids(tuids);\r\n        this.buildAccess(access);\r\n    }\r\n\r\n    async checkAccess() {\r\n        return await this.uqApi.checkAccess();\r\n    }\r\n\r\n    async loadEntitySchema(entityName: string): Promise<any> {\r\n        return await this.uqApi.schema(entityName);\r\n    }\r\n\r\n    getTuid(name:string): Tuid {\r\n        return this.tuids[name];\r\n    }\r\n\r\n    private buildTuids(tuids:any) {\r\n        for (let i in tuids) {\r\n            let schema = tuids[i];\r\n            let {name, typeId, from} = schema;\r\n            let tuid = this.newTuid(i, typeId, from);\r\n            tuid.sys = true;\r\n        }\r\n        for (let i in tuids) {\r\n            let schema = tuids[i];\r\n            let tuid = this.getTuid(i);\r\n            tuid.setSchema(schema);\r\n        }\r\n        for (let i in this.tuids) {\r\n            let tuid = this.tuids[i];\r\n            tuid.buildFieldsTuid();\r\n        }\r\n    }\r\n\r\n    private buildAccess(access:any) {\r\n        for (let a in access) {\r\n            let v = access[a];\r\n            switch (typeof v) {\r\n                case 'string': this.fromType(a, v); break;\r\n                case 'object': this.fromObj(a, v); break;\r\n            }\r\n        }\r\n        /*\r\n        for (let tuid of this.tuidArr) {\r\n            tuid.setProxies(this);\r\n        }*/\r\n    }\r\n\r\n    cacheTuids(defer:number) {\r\n        this.tuidsCache.cacheTuids(defer);\r\n    }\r\n\r\n    newAction(name:string, id:number):Action {\r\n        let action = this.actions[name];\r\n        if (action !== undefined) return action;\r\n        action = this.actions[name] = new Action(this, name, id)\r\n        this.actionArr.push(action);\r\n        return action;\r\n    }\r\n    private newTuid(name:string, id:number, from:SchemaFrom):Tuid {\r\n        let tuid = this.tuids[name];\r\n        if (tuid !== undefined) return tuid;\r\n        if (from !== undefined)\r\n            tuid = new TuidImport(this, name, id, from);\r\n        else\r\n            tuid = new TuidLocal(this, name, id);\r\n        this.tuids[name] = tuid;\r\n        this.tuidArr.push(tuid);\r\n        return tuid;\r\n    }\r\n    newQuery(name:string, id:number):Query {\r\n        let query = this.queries[name];\r\n        if (query !== undefined) return query;\r\n        query = this.queries[name] = new Query(this, name, id)\r\n        this.queryArr.push(query);\r\n        return query;\r\n    }\r\n    private newBook(name:string, id:number):Book {\r\n        let book = this.books[name];\r\n        if (book !== undefined) return book;\r\n        book = this.books[name] = new Book(this, name, id);\r\n        this.bookArr.push(book);\r\n        return book;\r\n    }\r\n    private newMap(name:string, id:number):Map {\r\n        let map = this.maps[name];\r\n        if (map !== undefined) return map;\r\n        map = this.maps[name] = new Map(this, name, id)\r\n        this.mapArr.push(map);\r\n        return map;\r\n    }\r\n    private newHistory(name:string, id:number):History {\r\n        let history = this.histories[name];\r\n        if (history !== undefined) return;\r\n        history = this.histories[name] = new History(this, name, id)\r\n        this.historyArr.push(history);\r\n        return history;\r\n    }\r\n    private newPending(name:string, id:number):Pending {\r\n        let pending = this.pendings[name];\r\n        if (pending !== undefined) return;\r\n        pending = this.pendings[name] = new Pending(this, name, id)\r\n        this.pendingArr.push(pending);\r\n        return pending;\r\n    }\r\n    newSheet(name:string, id:number):Sheet {\r\n        let sheet = this.sheets[name];\r\n        if (sheet !== undefined) return sheet;\r\n        sheet = this.sheets[name] = new Sheet(this, name, id);\r\n        this.sheetArr.push(sheet);\r\n        return sheet;\r\n    }\r\n    private fromType(name:string, type:string) {\r\n        let parts = type.split('|');\r\n        type = parts[0];\r\n        let id = Number(parts[1]);\r\n        switch (type) {\r\n            //case 'uq': this.id = id; break;\r\n            case 'tuid':\r\n                // Tuid should not be created here!;\r\n                //let tuid = this.newTuid(name, id);\r\n                //tuid.sys = false;\r\n                break;\r\n            case 'action': this.newAction(name, id); break;\r\n            case 'query': this.newQuery(name, id); break;\r\n            case 'book': this.newBook(name, id); break;\r\n            case 'map': this.newMap(name, id); break;\r\n            case 'history': this.newHistory(name, id); break;\r\n            case 'sheet':this.newSheet(name, id); break;\r\n            case 'pending': this.newPending(name, id); break;\r\n        }\r\n    }\r\n    private fromObj(name:string, obj:any) {\r\n        switch (obj['$']) {\r\n            case 'sheet': this.buildSheet(name, obj); break;\r\n        }\r\n    }\r\n    private buildSheet(name:string, obj:any) {\r\n        let sheet = this.sheets[name];\r\n        if (sheet === undefined) sheet = this.newSheet(name, obj.id);\r\n        sheet.build(obj);\r\n        /*\r\n        let states = sheet.states;\r\n        for (let p in obj) {\r\n            switch(p) {\r\n                case '#':\r\n                case '$': continue;\r\n                default: states.push(this.createSheetState(p, obj[p])); break;\r\n            }\r\n        }*/\r\n    }\r\n    /*\r\n    private createSheetState(name:string, obj:object):SheetState {\r\n        let ret:SheetState = {name:name, actions:[]};\r\n        let actions = ret.actions;\r\n        for (let p in obj) {\r\n            let action:SheetAction = {name: p};\r\n            actions.push(action);\r\n        }\r\n        return ret;\r\n    }*/\r\n    buildFieldTuid(fields:Field[], mainFields?:Field[]) {\r\n        if (fields === undefined) return;\r\n        for (let f of fields) {\r\n            let {tuid} = f;\r\n            if (tuid === undefined) continue;\r\n            let t = this.getTuid(tuid);\r\n            if (t === undefined) continue;\r\n            f._tuid = t.buildTuidBox();\r\n        }\r\n        for (let f of fields) {\r\n            let {owner} = f;\r\n            if (owner === undefined) continue;\r\n            let ownerField = fields.find(v => v.name === owner);\r\n            if (ownerField === undefined) {\r\n                if (mainFields !== undefined) {\r\n                    ownerField = mainFields.find(v => v.name === owner);\r\n                }\r\n                if (ownerField === undefined) {\r\n                    debugger;\r\n                    throw `owner field ${owner} is undefined`;\r\n                }\r\n            }\r\n            //f._ownerField = ownerField;\r\n            //let {arr} = f;\r\n            let {arr, tuid} = f;\r\n            let t = this.getTuid(ownerField._tuid.tuid.name);\r\n            if (t === undefined) continue;\r\n            let div = t.div(arr || tuid);\r\n            f._tuid = div && div.buildTuidBox(ownerField);\r\n            if (f._tuid === undefined) {\r\n                debugger;\r\n                throw 'owner field ${owner} is not tuid';\r\n            }\r\n        }\r\n    }\r\n    buildArrFieldsTuid(arrFields:ArrFields[], mainFields:Field[]) {\r\n        if (arrFields === undefined) return;\r\n        for (let af of arrFields) {\r\n            let {fields} = af;\r\n            if (fields === undefined) continue;\r\n            this.buildFieldTuid(fields, mainFields);\r\n        }\r\n    }\r\n}\r\n","import { Uq } from './uq';\r\nimport { TuidImport, TuidLocal } from './tuid';\r\n//import { loadAppUqs } from '../../net';\r\n\r\nexport class UqApp {\r\n    name: string;\r\n    id: number;\r\n    appOwner: string;\r\n    appName: string;\r\n    private collection: {[uqName: string]: Uq} = {};\r\n\r\n    constructor(tonvaAppName:string) {\r\n        this.name = name;\r\n        let parts = tonvaAppName.split('/');\r\n        if (parts.length !== 2) {\r\n            throw 'tonvaApp name must be / separated, owner/app';\r\n        }\r\n        this.appOwner = parts[0];\r\n        this.appName = parts[1];\r\n    }\r\n\r\n    addUq(uq: Uq) {\r\n        this.collection[uq.name] = uq;\r\n    }\r\n\r\n    setTuidImportsLocal() {\r\n        for (let i in this.collection) {\r\n            let uq = this.collection[i];\r\n            for (let tuid of uq.tuidArr) {\r\n                if (tuid.isImport === true) {\r\n                    this.setLocal(tuid as TuidImport);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private setLocal(tuidImport: TuidImport) {\r\n        let {from} = tuidImport;\r\n        let uq = this.collection[from.owner + '/' + from.uq];\r\n        if (uq === undefined) {\r\n            //debugger;\r\n            return;\r\n        }\r\n        let tuid = uq.tuid(tuidImport.name);\r\n        if (tuid === undefined) {\r\n            //debugger;\r\n            return;\r\n        }\r\n        if (tuid.isImport === true) {\r\n            //debugger;\r\n            return;\r\n        }\r\n        tuidImport.setFrom(tuid as TuidLocal);\r\n    }\r\n\r\n    /*\r\n    async load(): Promise<string[]> {\r\n        let uqAppData = await loadAppUqs(this.appOwner, this.appName);\r\n        let {id, uqs} = uqAppData;\r\n        this.id = id;\r\n\r\n        let retErrors:string[] = [];\r\n\r\n        let promises: PromiseLike<string>[] = [];\r\n        let promiseChecks: PromiseLike<boolean>[] = [];\r\n        for (let uqData of uqs) {\r\n            //let {id:uqId, uqOwner, uqName, access} = uqData;\r\n            //let uqn = uqOwner + '/' + uqName;\r\n            let uq = new Uq(this, uqData);\r\n            this.collection[uq.name] = uq;\r\n            promises.push(uq.loadSchema());\r\n            promiseChecks.push(uq.checkAccess());\r\n        }\r\n        let results = await Promise.all(promises);\r\n        Promise.all(promiseChecks).then((checks) => {\r\n            for (let c of checks) {\r\n                if (c === false) {\r\n                    //debugger;\r\n                    //nav.start();\r\n                    //return;\r\n                }\r\n            }\r\n        });\r\n        for (let result of results)\r\n        {\r\n            let retError = result; // await cUq.loadSchema();\r\n            if (retError !== undefined) {\r\n                retErrors.push(retError);\r\n                continue;\r\n            }\r\n        }\r\n        if (retErrors.length === 0) return;\r\n        return retErrors;\r\n    }\r\n    */\r\n}\r\n","export * from './uq';\r\nexport * from './entity';\r\nexport * from './action';\r\nexport * from './query';\r\nexport * from './sheet';\r\nexport * from './tuid';\r\nexport * from './book';\r\nexport * from './map';\r\nexport * from './history';\r\nexport * from './pending';\r\nexport * from './uqApp';","import jwtDecode from 'jwt-decode';\r\n\r\nexport interface Unit {\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\nexport interface Guest {\r\n    id: number;             // id = 0\r\n    guest: number;\r\n    token: string;\r\n}\r\n\r\nexport interface User extends Guest {\r\n    id: number;\r\n    name: string;\r\n    nick?: string;\r\n    icon?: string;\r\n}\r\n\r\n/*\r\nexport class UserInNav {\r\n    private user: User;\r\n    constructor(user: User) {\r\n        this.user = user;\r\n    }\r\n    get id():number {return this.user.id}\r\n    get name(): string {return this.user.name}\r\n    get nick(): string {return this.user.nick}\r\n    get icon(): string {return this.user.icon || ('http://' + process.env['REACT_APP_CENTER_HOST'] + '/imgs/Bear-icon.png');}\r\n    get guest(): number {return this.user.guest}\r\n    get token(): string {return this.user.token}\r\n}\r\n*/\r\nexport function decodeUserToken(token: string): User {\r\n    let ret:any = jwtDecode(token);\r\n    let user: User = {\r\n        id: ret.id,\r\n        name: ret.name,\r\n        guest: ret.guest,\r\n        token: token,\r\n    };\r\n    return user;\r\n}\r\n\r\nexport function decodeGuestToken(token: string): Guest {\r\n    let ret:any = jwtDecode(token);\r\n    let guest: Guest = {\r\n        id: 0,\r\n        guest: ret.guest,\r\n        token: token,\r\n    };\r\n    return guest;\r\n}\r\n","import * as React from 'react';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { Rule, FieldRule } from '../form/rules';\r\n\r\nexport abstract class ItemEdit {\r\n    protected name: string;\r\n    protected itemSchema: ItemSchema;\r\n    protected uiItem:UiItem;\r\n    protected value: any;\r\n    protected label: string;\r\n\r\n    @observable protected error: string;\r\n    @observable protected isChanged: boolean = false;\r\n    protected newValue: any;\r\n\r\n    constructor(itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any) {\r\n        this.itemSchema = itemSchema;\r\n        this.uiItem = uiItem\r\n        this.value = value;\r\n        let {name} = itemSchema;\r\n        this.name = name;\r\n        this.label = label;\r\n    }\r\n    async start():Promise<any> {\r\n        return await this.internalStart();\r\n    }\r\n\r\n    protected abstract internalStart():Promise<any>;\r\n\r\n    async end():Promise<any> {\r\n        await this.internalEnd()\r\n    }\r\n\r\n    protected async internalEnd():Promise<void> {nav.pop()}\r\n\r\n    protected verifyValue() {\r\n        if (this.uiItem === undefined) return;\r\n        let {rules} = this.uiItem;\r\n        if (rules === undefined) return;\r\n        let nv = this.newValue;\r\n        function verifyRule(rule:FieldRule, value: any):string {\r\n            let error = rule(nv);\r\n            if (error !== undefined) {\r\n                if (typeof error !== 'object')\r\n                    return error;\r\n                else\r\n                    return JSON.stringify(error);\r\n            }\r\n        }\r\n        if (Array.isArray(rules)) {\r\n            for (let rule of rules) {\r\n                let error = verifyRule(rule as FieldRule, nv);\r\n                if (error !== undefined) {\r\n                    this.error = error;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.error = verifyRule(rules as FieldRule, nv);\r\n        }\r\n    }\r\n}\r\n","export * from './form';\r\nexport * from './multiStep';","import * as React from 'react';\r\nimport { Page, SearchBox, List, Muted, LMR } from '../../../ui';\r\nimport { Tuid, Entity } from '../../uqs';\r\nimport { CLink } from '../link';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CTuidMain, TuidUI } from './cTuid';\r\n\r\nexport class VTuidMain extends VEntity<Tuid, TuidUI, CTuidMain> {\r\n    protected controller: CTuidMain;\r\n    onNew = () => this.event('new');\r\n    onList = () => this.event('list');\r\n    onSearch = async (key:string) => this.event('list', key);\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected entityRender(link: CLink, index: number): JSX.Element {\r\n        return link.render();\r\n    }\r\n\r\n    protected async entityClick(link: CLink) {\r\n        await link.onClick();\r\n    }\r\n\r\n    protected get view() {\r\n        let {label, isImport} = this.controller;\r\n        let newButton:any;\r\n        if (isImport === false) newButton = <button className=\"btn btn-outline-success ml-2\" onClick={this.onNew}>新增</button>;\r\n        let right = <>\r\n            {newButton}\r\n            <button className=\"btn btn-outline-info ml-2\" onClick={this.onList}>全部</button>\r\n        </>;\r\n        let content = <LMR className='m-3' right={right}>\r\n            <SearchBox className=\"w-100\" size=\"md\"\r\n                onSearch={this.onSearch} \r\n                placeholder={'搜索'+label} />\r\n        </LMR>;\r\n        return () => <Page header={label}>\r\n            {content}\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Page, FA } from '../../../ui';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CTuidMain, TuidUI } from './cTuid';\r\nimport { Tuid } from '../../uqs';\r\n\r\nexport type TypeVTuidEdit = typeof VTuidEdit;\r\n\r\nexport class VTuidEdit extends VEntity<Tuid, TuidUI, CTuidMain> {\r\n    private vForm: VForm;\r\n    private id: number;\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        if (param !== undefined) {\r\n            this.id = param.id;\r\n        }\r\n        this.openPage(this.editView);\r\n    }\r\n\r\n    protected get editView() {\r\n        return () => <Page header={(this.id===undefined? '新增':'编辑') + ' - ' + this.label}>\r\n            {this.vForm.render('py-3')}\r\n        </Page>;\r\n    }\r\n\r\n    protected next = async () => {\r\n        this.vForm.reset();\r\n        this.closePage();\r\n    }\r\n\r\n    protected finish = () => {\r\n        this.closePage(2);\r\n        this.event('edit-end');\r\n    }\r\n\r\n    protected resetForm() {\r\n        this.vForm.reset();\r\n    }\r\n\r\n    protected onSubmit = async () => {\r\n        let values = this.vForm.getValues();\r\n        let ret = await this.controller.entity.save(this.id, values);\r\n        let {id} = ret;\r\n        if (id < 0) {\r\n            let {unique} = this.controller.entity;\r\n            if (unique !== undefined) {\r\n                for (let u of unique) {\r\n                    this.vForm.setError(u, '不能重复');\r\n                }\r\n            }\r\n            return;\r\n        }\r\n        if (this.controller.isCalling) {\r\n            this.returnCall(id);\r\n            this.closePage();\r\n            return;\r\n        }\r\n        this.openPageElement(<Page header={this.label + '提交成功'} back=\"none\">\r\n            <div className='m-3'>\r\n                <span className=\"text-success\">\r\n                    <FA name='check-circle' size='lg' /> 成功提交！\r\n                </span>\r\n                <div className='mt-5'>\r\n                    <button className=\"btn btn-primary mr-3\" onClick={this.next}>继续录入</button>\r\n                    <button className=\"btn btn-outline-primary\" onClick={this.finish}>不继续</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n\r\n        this.event('item-changed', {id: this.id, values: values});\r\n        return;\r\n    }\r\n\r\n    //protected view = TuidNewPage;\r\n}\r\n/*\r\nconst TuidNewPage = observer(({vm}:{vm:VmTuidEdit}) => {\r\n    let {label, id, vmForm} = vm;\r\n    return <Page header={(id===undefined? '新增':'编辑') + ' - ' + label}>\r\n        {vmForm.render('mx-3 my-2')}\r\n    </Page>;\r\n});\r\n*/","import { nav, Page, SearchBox, List } from '../../../ui';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Tuid } from '../../uqs';\r\nimport { CTuid, TuidUI } from './cTuid';\r\nimport React from 'react';\r\nimport { RowContent } from '../form/viewModel';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class VTuidSelect extends VEntity<Tuid, TuidUI, CTuid<Tuid>> {\r\n    protected mainRowContent: (row:any) => JSX.Element;\r\n    protected divRowContent: (row:any) => JSX.Element;\r\n\r\n    async open(param?:any): Promise<void> {\r\n        if (param === undefined)\r\n            await this.showMain(param);\r\n        else\r\n            await this.showDiv(param);\r\n    }\r\n\r\n    private async showMain(param) {\r\n        this.mainRowContent = this.ui.rowContent || RowContent;\r\n        await this.controller.searchMain(param);\r\n        this.openPage(this.mainView);\r\n    }\r\n\r\n    private async showDiv(ownerValue: any) {\r\n        let {divs} = this.ui;\r\n        if (divs !== undefined) {\r\n            this.divRowContent = divs[this.entity.name].rowContent;\r\n        }\r\n        if (this.divRowContent === undefined) {\r\n            this.divRowContent = RowContent;\r\n        }\r\n        let divItems = await this.controller.getDivItems(ownerValue);\r\n        this.openPage(this.divView, {items: divItems});\r\n    }\r\n\r\n    protected mainView = observer(() => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearchMain} placeholder={'搜索'+this.label} />;\r\n        return <Page header={header} back=\"close\">\r\n            <List\r\n                items={this.controller.PageItems.items}\r\n                item={{render: this.renderMainRow, onClick: this.clickMainRow}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    });\r\n\r\n    onSearchMain = async (key:string) => {\r\n        await this.controller.searchMain(key);\r\n        //await this.PageItems.first(key);\r\n    }\r\n    renderMainRow = (item:any, index:number):JSX.Element => <this.mainRowContent {...item} />;\r\n    clickMainRow = async (item:any) => {\r\n        this.ceasePage();\r\n        if (this.controller.entity.hasDiv === undefined) {\r\n            this.returnCall(item);\r\n            return;\r\n        }\r\n        await this.showDiv(this.entity.getIdFromObj(item));\r\n    }\r\n\r\n    protected divView = (param:any) => {\r\n        return <Page header=\"选择Div\">\r\n            <List\r\n                items={param.items}\r\n                item={{render: this.renderDivRow, onClick: this.clickDivRow}} />\r\n        </Page>;\r\n    }\r\n    renderDivRow = (item:any, index:number):JSX.Element => <this.divRowContent {...item} />;\r\n    clickDivRow = (item:any) => {\r\n        this.ceasePage();\r\n        this.returnCall(item);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { FA, Page } from '../../../ui';\r\nimport { jsonStringify } from '../../tools';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Tuid } from '../../uqs';\r\nimport { TuidUI, CTuidMain } from './cTuid';\r\n\r\nexport type TypeVTuidView = typeof VTuidView;\r\n\r\nexport class VTuidView extends VEntity<Tuid, TuidUI, CTuidMain> {\r\n    vForm: VForm;\r\n    id: number;\r\n\r\n    protected buildForm(param:any) {\r\n        this.vForm = this.createForm(undefined, param);\r\n    }\r\n\r\n    async open(param:any) {\r\n        this.buildForm(param);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    render(param:any) {\r\n        this.buildForm(param);\r\n        return this.vForm.render();\r\n    }\r\n\r\n    async loadId(id: number) {\r\n        this.id = id;\r\n    }\r\n\r\n    protected next = async () => {\r\n        this.vForm.reset();\r\n        this.closePage();\r\n    }\r\n\r\n    protected finish = () => {\r\n        this.closePage(2);\r\n    }\r\n\r\n    protected resetForm() {\r\n        this.vForm.reset();\r\n    }\r\n\r\n    protected onSubmit = async () => {\r\n        let values = this.vForm.getValues();\r\n        let ret = await this.entity.save(this.id, values);\r\n        if (ret) {\r\n            alert('这里还要判断返回值，先不处理了 \\n' + jsonStringify(ret));\r\n        }\r\n        this.openPage(() => <Page header={this.label + '提交成功'} back=\"none\">\r\n            <div className='m-3'>\r\n                <span className=\"text-success\">\r\n                    <FA name='check-circle' size='lg' /> 成功提交！\r\n                </span>\r\n                <div className='mt-5'>\r\n                    <button className=\"btn btn-primary mr-3\" onClick={this.next}>继续录入</button>\r\n                    <button className=\"btn btn-outline-primary\" onClick={this.finish}>不继续</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n        return;\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n            {this.vForm.render('py-3')}\r\n    </Page>;\r\n}\r\n","import React from 'react';\r\nimport { VTuidView } from './vTuidView';\r\n\r\nexport class VTuidInfo  extends VTuidView {\r\n/*\r\n    async open(param?:any) {\r\n        this.open(this.view);\r\n    }\r\n*/\r\n/*\r\n    private view = () => {\r\n        return <Page>\r\n            TuidInfo\r\n        </Page>\r\n    }\r\n*/\r\n}\r\n","import { PageItems } from '../../../pageItems';\r\nimport { Tuid } from '../../uqs';\r\n\r\nexport class TuidPageItems<T> extends PageItems<T> {\r\n    private tuid: Tuid;\r\n    constructor(tuid: Tuid) {\r\n        super(true);\r\n        this.tuid = tuid;\r\n    }\r\n    protected async load(param:any, pageStart:any, pageSize:number):Promise<any[]> {\r\n        let ret = await this.tuid.search(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:any) {\r\n        this.pageStart = item === undefined? 0 : item.id;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { FA, SearchBox, List, Page, VPage } from '../../../ui';\r\nimport { jsonStringify } from '../../tools';\r\nimport { Tuid, TuidDiv } from '../../uqs';\r\nimport { VEntity } from '../CVEntity';\r\nimport { TuidUI, CTuidMain, CTuidDiv } from './cTuid';\r\nimport { JSONContent, RowContent } from '../form/viewModel';\r\n\r\nexport abstract class VTuidListBase  extends VEntity<Tuid, TuidUI, CTuidMain> {\r\n    protected rowContent: (row:any) => JSX.Element;\r\n    protected ownerId: number;\r\n\r\n    async open(param?:any) {\r\n        this.rowContent = this.ui.rowContent || RowContent;\r\n        //if (this.entity.owner !== undefined) \r\n        this.ownerId = Number(param);\r\n        // 初始查询, key是空的\r\n        //await this.onSearch('');\r\n        await this.controller.searchMain('');\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSearch = async (key:string) => {\r\n        await this.controller.searchMain(key);\r\n        //await this.PageItems.first(key);\r\n    }\r\n    renderRow = (item:any, index:number):JSX.Element => <this.rowContent {...item} />;\r\n\r\n    protected abstract onSelected(item:any): Promise<void>;\r\n    private callOnSelected(item:any) {\r\n        if (this.onSelected === undefined) {\r\n            alert('onSelect is undefined');\r\n            return;\r\n        }\r\n        this.onSelected(item);\r\n    }\r\n    clickRow = (item:any) => {\r\n        this.callOnSelected(item);\r\n    }\r\n    private rowKey = (item:any) => {\r\n        let {id} = item;\r\n        return id;\r\n    }\r\n    protected view = observer(() => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\r\n        /*\r\n        let {owner} = this.entity;\r\n        let ownerTop;\r\n        if (owner !== undefined) {\r\n            let ownerObj = owner.valueFromId(this.ownerId);\r\n            ownerTop = <div>owner: {jsonStringify(ownerObj)}</div>;\r\n        }\r\n        */\r\n        return <Page header={header}>\r\n            {/*ownerTop*/}\r\n            <List\r\n                items={this.controller.PageItems.items}\r\n                item={{render: this.renderRow, onClick: this.clickRow, key:this.rowKey}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    });\r\n}\r\n\r\nexport class VTuidList extends VTuidListBase {\r\n    protected async onSelected(item:any) {\r\n        if (this.controller.isImport === false)\r\n            this.event('edit', item.id);\r\n        else\r\n            this.event('info', item.id);\r\n    }\r\n}\r\n/*\r\nexport abstract class VTuidDivListBase  extends VPage<CTuidDiv> {\r\n    protected ownerId: number;\r\n\r\n    async open(param?:any) {\r\n        //this.PageItems = new TuidPageItems(this.entity);\r\n        if (this.entity.owner !== undefined) this.ownerId = Number(param);\r\n        // 初始查询, key是空的\r\n        //await this.onSearch('');\r\n        await this.controller.searchMain('');\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSearch = async (key:string) => {\r\n        await this.controller.searchMain(key);\r\n        //await this.PageItems.first(key);\r\n    }\r\n    renderRow = (item:any, index:number):JSX.Element => {\r\n        return <div className=\"px-3 py-2\">{jsonStringify(item)}</div>;\r\n    }\r\n\r\n    protected abstract onSelected(item:any): Promise<void>;\r\n    private callOnSelected(item:any) {\r\n        if (this.onSelected === undefined) {\r\n            alert('onSelect is undefined');\r\n            return;\r\n        }\r\n        this.onSelected(item);\r\n    }\r\n    clickRow = (item:any) => {\r\n        this.callOnSelected(item);\r\n    }\r\n\r\n    protected view = observer(() => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\r\n        let {owner} = this.entity;\r\n        let ownerTop;\r\n        if (owner !== undefined) {\r\n            let ownerObj = owner.valueFromId(this.ownerId);\r\n            ownerTop = <div>owner: {jsonStringify(ownerObj)}</div>;\r\n        }\r\n        return <Page header={header}>\r\n            {ownerTop}\r\n            <List\r\n                items={this.controller.PageItems.items}\r\n                item={{render: this.renderRow, onClick: this.clickRow}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    });\r\n}\r\n\r\nexport class VTuidDivList extends VTuidDivListBase {\r\n    protected async onSelected(item:any) {\r\n        this.event('edit', item.id);\r\n    }\r\n}\r\n*/","import _ from 'lodash';\r\nimport { CEntity, EntityUI } from '../CVEntity';\r\nimport { Tuid, TuidDiv } from '../../uqs';\r\nimport { VTuidMain } from './vTuidMain';\r\nimport { VTuidEdit } from './vTuidEdit';\r\nimport { VTuidSelect } from './vTuidSelect';\r\nimport { CUq } from '../cUq/cUq';\r\n//import { CLink } from '../link';\r\nimport { VTuidInfo } from './vTuidInfo';\r\nimport { TuidPageItems } from './pageItems';\r\nimport { VTuidList } from './vTuidList';\r\nimport { PageItems } from '../../../pageItems';\r\n//import { Controller } from 'ui';\r\n\r\nexport interface TuidUI extends EntityUI {\r\n    CTuidMain?: typeof CTuidMain;\r\n    CTuidEdit?: typeof CTuidEdit;\r\n    CTuidList?: typeof CTuidList;\r\n\r\n    CTuidSelect?: typeof CTuidSelect;\r\n    CTuidInfo?: typeof CTuidInfo;\r\n    content?: React.StatelessComponent<any>;\r\n    rowContent?: React.StatelessComponent<any>;\r\n    divs?: {\r\n        [div:string]: {\r\n            CTuidSelect?: typeof CTuidSelect;\r\n            content?: React.StatelessComponent<any>;\r\n            rowContent?: React.StatelessComponent<any>;\r\n        }\r\n    }\r\n}\r\n\r\nexport abstract class CTuid<T extends Tuid> extends CEntity<T, TuidUI> {\r\n    PageItems:PageItems<any>;\r\n\r\n    protected buildPageItems():PageItems<any> {\r\n        return new TuidPageItems(this.entity);\r\n    }\r\n\r\n    async searchMain(key:string) {\r\n        if (this.PageItems === undefined) {\r\n            this.PageItems = this.buildPageItems();\r\n        }\r\n        if (key !== undefined) await this.PageItems.first(key);\r\n    }\r\n\r\n    async getDivItems(ownerId:number):Promise<any[]> {\r\n        let ret = await this.entity.searchArr(ownerId, undefined, 0, 1000);\r\n        return ret;\r\n    }\r\n}\r\n\r\nexport abstract class CTuidBase extends CTuid<Tuid> {\r\n    constructor(cUq: CUq, entity:Tuid, ui: TuidUI, res:any) {\r\n        super(cUq, entity, ui, res);\r\n    }\r\n    \r\n    from():CTuidBase {\r\n        let ret = this; // this.entity.cFrom();\r\n        if (ret === undefined) return this;\r\n        return ret;\r\n    }\r\n\r\n    cUqFrom():CUq {\r\n        return this.cUq; // this.entity.cUqFrom();\r\n    }\r\n    cEditFrom(): CTuidEdit {\r\n        let cUq = this.cUq; // this.entity.cUqFrom();\r\n        return cUq.cTuidEditFromName(this.entity.name);\r\n    }\r\n    cInfoFrom(): CTuidInfo {\r\n        let cUq = this.cUq; // this.entity.cUqFrom();\r\n        return cUq.cTuidInfoFromName(this.entity.name);\r\n    }\r\n    cSelectFrom(): CTuidSelect {\r\n        let cUq = this.cUq;// this.entity.cUqFrom();\r\n        return cUq.cTuidSelectFromName(this.entity.name);\r\n    }\r\n\r\n    getLable(tuid:Tuid):string {\r\n        if (tuid === this.entity) return this.label;\r\n        let {name} = tuid;\r\n        let {arrs} = this.res;\r\n        if (arrs !== undefined) {\r\n            let arr = arrs[name];\r\n            if (arr !== undefined) {\r\n                let label = arr.label;\r\n                if (label !== undefined) return label;\r\n            }\r\n        }\r\n        return name;\r\n    }\r\n\r\n    isImport: boolean;\r\n\r\n    protected get VTuidMain():typeof VTuidMain {return VTuidMain}\r\n    protected get VTuidEdit():typeof VTuidEdit {return VTuidEdit}\r\n    protected get VTuidList():typeof VTuidList {return VTuidList}\r\n\r\n    protected async internalStart(param?:any):Promise<void> {\r\n        this.isImport = this.entity.isImport;\r\n        await this.openVPage(this.VTuidMain);\r\n    }\r\n\r\n    protected async onEvent(type:string, value:any) {\r\n        //let v: TypeVPage<CTuidMain>;\r\n        switch (type) {\r\n            default: return;\r\n            case 'new': await this.onNew(); break;\r\n            case 'list': await this.onList(); break;\r\n            case 'edit': await this.onEdit(value); return;\r\n            case 'item-changed': this.itemChanged(value); return;\r\n            case 'info': \r\n                let cTuidInfo = new CTuidInfo(this.cUq, this.entity, this.ui, this.res);\r\n                await cTuidInfo.start(value);\r\n                return;\r\n        }\r\n        //await this.openVPage(v, value);\r\n    }\r\n\r\n    protected async edit(values:any) {\r\n        let cTuidEdit = this.ui && this.ui.CTuidEdit;\r\n        if (cTuidEdit === undefined) {\r\n            await this.openVPage(this.VTuidEdit, values);\r\n        }\r\n        else {\r\n            await (new cTuidEdit(this.cUq, this.entity, this.ui, this.res)).start(values);\r\n        }\r\n    }\r\n\r\n    private async onNew() {\r\n        await this.edit(undefined);\r\n    }\r\n\r\n    private async onList() {\r\n        let cTuidList = this.ui && this.ui.CTuidList;\r\n        if (cTuidList === undefined) {\r\n            await this.openVPage(this.VTuidList, undefined);\r\n        }\r\n        else {\r\n            await (new cTuidList(this.cUq, this.entity, this.ui, this.res)).start(undefined);\r\n        }\r\n    }\r\n\r\n    protected async onEdit(id:number) {\r\n        let values:any = undefined;\r\n        if (id !== undefined) {\r\n            values = await this.entity.load(id);\r\n        }\r\n        this.edit(values);\r\n        //await this.openVPage(this.VTuidEdit, values);\r\n    }\r\n\r\n    private itemChanged({id, values}:{id:number, values: any}) {\r\n        if (this.PageItems === undefined) return;\r\n        let items = this.PageItems.items;\r\n        let item = items.find(v => v.id === id);\r\n        if (item !== undefined) {\r\n            _.merge(item, values);\r\n        }\r\n    }\r\n}\r\n\r\nexport class CTuidMain extends CTuidBase {\r\n    protected async internalStart(param?:any):Promise<void> {\r\n        this.isImport = this.entity.isImport;\r\n        await this.openVPage(this.VTuidMain);\r\n    }\r\n\r\n}\r\n\r\nexport class CTuidEdit extends CTuidBase {\r\n    protected async internalStart(id:number):Promise<void> {\r\n        this.isImport = this.entity.isImport;\r\n        if (typeof(id) === 'number') {\r\n            await this.onEdit(id);\r\n        }\r\n        else {\r\n            await this.edit(id);\r\n        }\r\n    }\r\n\r\n    protected async edit(values:any) {\r\n        await this.openVPage(this.VTuidEdit, values);\r\n    }\r\n}\r\n\r\nexport class CTuidList extends CTuidBase {\r\n    protected async internalStart(id:number):Promise<void> {\r\n        this.isImport = this.entity.isImport;\r\n        await this.openVPage(this.VTuidList);\r\n    }\r\n}\r\n\r\nexport class CTuidDiv extends CTuid<Tuid> {\r\n    protected async internalStart():Promise<void> {\r\n        alert('tuid div: ' + '??');\r\n    }\r\n}\r\n\r\nexport class CTuidSelect extends CTuid<Tuid> {\r\n    protected async internalStart(param?: any):Promise<void> {\r\n        await this.openVPage(this.VTuidSelect, param);\r\n    }\r\n    protected async beforeStart():Promise<boolean> {\r\n        //if (await super.beforeStart() === false) return false;\r\n        await this.entity.loadSchema();\r\n        if (this.PageItems !== undefined) this.PageItems.reset();\r\n        return true;\r\n    }\r\n    protected get VTuidSelect():typeof VTuidSelect {return VTuidSelect}\r\n    idFromItem(item:any) {\r\n        return item.id;\r\n    }\r\n}\r\n\r\nexport class CTuidInfo extends CTuid<Tuid> {\r\n    protected async internalStart(id: any):Promise<void> {\r\n        let data = await this.entity.load(id)\r\n        await this.openVPage(this.VTuidInfo, data);\r\n    }\r\n    protected get VTuidInfo():typeof VTuidInfo {return VTuidInfo}\r\n}\r\n","export * from './cTuid';\r\nexport * from './vTuidMain';\r\nexport * from './vTuidEdit';\r\nexport * from './vTuidInfo';\r\nexport * from './vTuidView';\r\nexport * from './vTuidSelect';\r\n","import * as React from 'react';\r\nimport { VField } from './vField';\r\nimport { VArr } from './vArr';\r\nimport { VSubmit } from './vSubmit';\r\n\r\nexport abstract class VBand {\r\n    protected label: string;\r\n    protected view = () => <div />;\r\n\r\n    constructor(label:string) {\r\n        this.label = label;\r\n    }\r\n\r\n    render():JSX.Element {\r\n        //text-sm-right\r\n        return <div key={this.key} className=\"px-3\">\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-sm-2 col-form-label\">\r\n                    {this.label}\r\n                </label>\r\n                <div className=\"col-sm-10\">\r\n                    {this.renderContent()}\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    setAddRow(addRow:()=>Promise<void>) {}\r\n    get key() {return this.label}\r\n    public getVFields():VField[] {return;}\r\n    public getVArr():VArr {return;}\r\n    public getVSubmit():VSubmit {return;}\r\n\r\n    protected renderContent():JSX.Element {\r\n        return <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">content</div>;\r\n    }\r\n}\r\n\r\nexport interface FieldRes {\r\n    label: string;\r\n    placeHolder: string;\r\n    suffix: string;\r\n}\r\nexport class VFieldBand extends VBand {\r\n    protected vField:VField;\r\n    constructor(label:string, vField:VField) {\r\n        super(label);\r\n        this.vField = vField;\r\n    }\r\n\r\n    get key() {return this.vField.name}\r\n    public getVFields():VField[] {return [this.vField];}\r\n\r\n    protected renderContent():JSX.Element {\r\n        return this.vField.render();\r\n        /*\r\n        <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">\r\n            {this.vField.render()}\r\n        </div>;*/\r\n    }\r\n}\r\n\r\nexport class VArrBand extends VBand {\r\n    protected vArr:VArr;\r\n    constructor(label:string, vArr:VArr) {\r\n        super(label);\r\n        this.vArr = vArr;\r\n    }\r\n\r\n    setAddRow(addRow:()=>Promise<void>) {this.vArr.setAddRow(addRow)}\r\n    get key() {return this.vArr.name}\r\n    public getVArr():VArr {return this.vArr;}\r\n\r\n    render():JSX.Element {\r\n        return <React.Fragment key={this.key}>\r\n            {this.vArr && this.vArr.render()}\r\n        </React.Fragment>;\r\n    }\r\n}\r\n\r\nexport class VFieldsBand extends VBand {\r\n    protected vFields: VField[];\r\n    constructor(label:string, vFields:VField[]) {\r\n        super(label);\r\n        this.vFields = vFields;\r\n    }\r\n\r\n    get key() {return this.vFields[0].name}\r\n    public getVFields():VField[] {return this.vFields;}\r\n\r\n    protected renderContent():JSX.Element {\r\n        return <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">\r\n            fields\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class VSubmitBand extends VBand {\r\n    protected vSubmit: VSubmit;\r\n    constructor(vSubmit:VSubmit) {\r\n        super(undefined);\r\n        this.vSubmit = vSubmit;\r\n    }\r\n\r\n    get key() {return '$submit'}\r\n\r\n    public getVSubmit():VSubmit {return this.vSubmit;}\r\n\r\n    render():JSX.Element {\r\n        return <div key=\"$submit\" className=\"px-3\">\r\n            <div className=\"form-group row\">\r\n                <div className=\"offset-sm-2 col-sm-10\">\r\n                    {this.vSubmit.render()}\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames'\r\nimport { ViewModel } from './viewModel';\r\nimport { VForm } from './vForm';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\n\r\nexport class VSubmit extends ViewModel {\r\n    private vForm: VForm;\r\n    constructor(vForm: VForm) {\r\n        super();\r\n        this.vForm = vForm;\r\n        this.caption = this.vForm.submitCaption;\r\n        this.className = 'btn btn-primary w-25';\r\n    }\r\n    @observable caption: string;\r\n    @observable className: string;\r\n\r\n    private onClickSubmit = async () => {\r\n        this.vForm.submit();\r\n    }\r\n\r\n    protected view = observer(() => {\r\n        let {isOk} = this.vForm;\r\n        return <button type=\"button\" \r\n            onClick={this.onClickSubmit}\r\n            className={this.className}\r\n            disabled={isOk === false}>\r\n            {this.caption}\r\n        </button>;\r\n    });\r\n}","\r\nexport abstract class Rule {\r\n    abstract check(defy:string[], value:any);\r\n}\r\n\r\nexport class RuleRequired extends Rule {\r\n    check(defy:string[], value:any) {\r\n        switch (typeof value) {\r\n            default:\r\n            case 'boolean': return;\r\n            case 'object':\r\n                if (value !== null) return;\r\n                break;\r\n            case 'string':\r\n                if ((value as string).trim().length > 0) return;\r\n                break;\r\n            case 'number':\r\n                if ((value as number) !== NaN) return;\r\n                break;\r\n            case 'undefined':\r\n                break;\r\n        }\r\n        defy.push('不能为空');\r\n    }\r\n}\r\n\r\nexport class RuleNum extends Rule {\r\n    check(defy:string[], value:any) {\r\n        if (value === undefined || value === null) return;\r\n        let n = Number(value);\r\n        if (n === NaN) defy.push('必须是数字');\r\n    }\r\n}\r\n\r\nexport class RuleInt extends Rule {\r\n    check(defy:string[], value:any) {\r\n        if (value === undefined || value === null) return;\r\n        let n = Number(value);\r\n        if (Number.isNaN(n) === true || Number.isInteger(n) === false) {\r\n            defy.push('必须是整数');\r\n        }\r\n    }\r\n}\r\n\r\nexport class RuleMin extends RuleNum {\r\n    constructor(min: number) {\r\n        super();\r\n        this.min = min;\r\n    }\r\n    min: number;\r\n    check(defy:string[], value:any) {\r\n        super.check(defy, value);\r\n        if (Number(value) < this.min) defy.push('不能小于' + this.min);\r\n    }\r\n}\r\n\r\nexport class RuleMax extends RuleNum {\r\n    constructor(max: number) {\r\n        super();\r\n        this.max = max;\r\n    }\r\n    max: number;\r\n    check(defy:string[], value:any) {\r\n        super.check(defy, value);\r\n        if (Number(value) > this.max) defy.push('不能小于' + this.max);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { computed, action } from 'mobx';\r\nimport classNames from 'classnames';\r\nimport { observer } from 'mobx-react';\r\nimport { FA } from '../../../../ui';\r\nimport { ViewModel } from '../viewModel';\r\nimport { VForm, FormMode } from '../vForm';\r\nimport { Rule, RuleRequired, RuleInt, RuleNum, RuleMin, RuleMax } from '../rule';\r\nimport { Field } from '../../../uqs';\r\nimport { FieldRes } from '../vBand';\r\nimport { FieldUI, FieldInputUI, FieldStringUI, FieldNumberUI } from '../../formUI';\r\n\r\nexport abstract class VField extends ViewModel {\r\n    protected form: VForm;\r\n    protected fieldUI: FieldUI;\r\n    protected fieldRes:FieldRes;\r\n    protected field: Field;\r\n    protected rules: Rule[];\r\n    constructor(form:VForm, field:Field, fieldUI: FieldUI, fieldRes:FieldRes) {\r\n        super();\r\n        this.form = form;\r\n        this.field = field;\r\n        this.name = field.name;\r\n        this.fieldUI = fieldUI || {} as any;\r\n        this.fieldRes = fieldRes || {} as any;\r\n        this.init();\r\n    }\r\n\r\n    name: string;\r\n\r\n    protected init() {\r\n        this.buildRules();\r\n    }\r\n\r\n    protected buildRules() {\r\n        this.rules = [];\r\n        let {required} = this.fieldUI;\r\n        if (required === true || this.field !== undefined && this.field.null === false) {\r\n            this.rules.push(new RuleRequired);\r\n        }\r\n    }\r\n\r\n    @computed get checkRules(): string[] {\r\n        let defy = [];\r\n        for (let r of this.rules) r.check(defy, this.value);\r\n        return defy;\r\n    }\r\n\r\n    @computed get isOk() {\r\n        if (this.rules.length === 0) return true;\r\n        let defy = this.checkRules;\r\n        return defy.length === 0;\r\n    }\r\n\r\n    @computed get value() { return this.form.values[this.name]; }\r\n    setValue(v:any) {\r\n        this.form.values[this.name]=v; \r\n    }\r\n    get error() { return this.form.errors[this.name]; }\r\n    set error(err:any) { this.form.errors[this.name]=err; }\r\n    protected parse(str:string):any {return str;}\r\n    get readonly():boolean {\r\n        let {mode} = this.form;\r\n        return mode === FormMode.readonly || \r\n            mode === FormMode.edit && this.fieldUI.editable === false;\r\n    }\r\n}\r\n\r\nexport class VUnknownField extends VField {\r\n    protected view = () => {\r\n        //let {name, type} = this.fieldUI;\r\n        let type='', name = '';\r\n        return <input type=\"text\" className=\"form-control form-control-plaintext border border-info rounded bg-light\"\r\n            placeholder={'unkown control: ' + type + '-' + name} />;\r\n    }\r\n}\r\n\r\nexport abstract class VInputControl extends VField {\r\n    protected fieldUI: FieldInputUI;\r\n    protected input: HTMLInputElement;\r\n\r\n    protected inputType:string;\r\n    protected get maxLength():number {return}\r\n\r\n    protected renderError = (className:string) => {\r\n        let {errors} = this.form;\r\n        let error = errors[this.name];\r\n        if (error === undefined) return;\r\n        return <div className={className}><FA name=\"exclamation-circle\" /> {error}</div>\r\n    }\r\n\r\n    /*\r\n    get value() {\r\n        return super.value;\r\n    }*/\r\n    setValue(v:any) {\r\n        super.setValue(v); this.setInputValue(); \r\n    }\r\n\r\n    protected ref = (input:HTMLInputElement) => {\r\n        this.input = input;\r\n        this.setInputValue();\r\n    }\r\n\r\n    protected setInputValue() {\r\n        if (!this.input) return;\r\n        let v = this.value;\r\n        this.input.value = v === null || v === undefined? '' : v;\r\n    }\r\n\r\n    protected onFocus = () => {\r\n        this.error = undefined;\r\n    }\r\n\r\n    protected onBlur = () => {\r\n        let defy = this.checkRules;\r\n        if (defy.length > 0) {\r\n            this.error = defy[0];\r\n        }\r\n        this.form.computeFields();\r\n    }\r\n\r\n    protected onChange = (evt: React.ChangeEvent<any>) => {\r\n        let v = this.parse(evt.currentTarget.value);\r\n        if (v === null) {\r\n            return;\r\n        }\r\n        this.setValue(v);\r\n    }\r\n\r\n    protected onKeyPress: (event:React.KeyboardEvent<HTMLInputElement>) => void;\r\n    \r\n    protected view = observer(() => {\r\n        let {required} = this.fieldUI;\r\n        let {placeHolder, suffix} = this.fieldRes;\r\n        let ctrlCN = ['form-control', 'form-control-input'];\r\n        let errCN = 'text-danger small mt-1 mx-2';\r\n    \r\n        let redDot;\r\n        let input;\r\n        if (this.readonly === true) {\r\n            input = <input className={classNames(ctrlCN, 'bg-light')}\r\n                ref={this.ref}\r\n                type={this.inputType}\r\n                readOnly={true}\r\n            />;\r\n        }\r\n        else {\r\n            input = <input className={classNames(ctrlCN)}\r\n                ref={this.ref}\r\n                type={this.inputType}\r\n                onFocus={this.onFocus}\r\n                onBlur={this.onBlur}\r\n                onChange={this.onChange}\r\n                placeholder={placeHolder}\r\n                readOnly={false}\r\n                maxLength={this.maxLength}\r\n                onKeyPress={this.onKeyPress}\r\n            />;\r\n            if (required === true || this.field.null === false) {\r\n                redDot = <RedMark />;\r\n            }\r\n        }\r\n\r\n        let inputGroup;\r\n        if (suffix === undefined)\r\n            inputGroup = input;\r\n        else\r\n            inputGroup = <div className=\"input-group\">\r\n                {input}\r\n                <div className=\"input-group-append\">\r\n                    <span className=\"input-group-text\">{suffix}</span>\r\n                </div>\r\n            </div>;\r\n\r\n        return <>\r\n            {redDot}\r\n            {inputGroup}\r\n            {this.renderError(errCN)}\r\n        </>\r\n    });\r\n}\r\n\r\nexport const RedMark = () => <b style={{color:'red', position:'absolute', left:'0.1em', top:'0.5em'}}>*</b>;\r\n\r\nexport class VStringField extends VInputControl {\r\n    protected fieldUI: FieldStringUI;\r\n    protected inputType:string = 'text';\r\n    protected get maxLength():number {return this.field.size}\r\n}\r\n\r\nconst KeyCode_Neg = 45;\r\nconst KeyCode_Dot = 46;\r\n\r\nexport abstract class VNumberControl extends VInputControl {\r\n    protected fieldUI: FieldNumberUI;\r\n    protected extraChars: number[];\r\n\r\n    protected init() {\r\n        super.init();\r\n        this.extraChars = [];\r\n        if (this.fieldUI !== undefined) {\r\n            let {min, max} = this.fieldUI;\r\n            if (min !== undefined) {\r\n                //this.rules.push((v:number) => {if (v === undefined) return; if (v<min) return ErrMin + min; return true;});\r\n                if (min < 0) this.extraChars.push(KeyCode_Neg);\r\n            }\r\n            else {\r\n                this.extraChars.push(KeyCode_Neg);\r\n            }\r\n    \r\n            if (max !== undefined) {\r\n                //this.rules.push((v:number) => {if (v === undefined) return; if (v>max) return ErrMax + max; return true});\r\n            }\r\n        }\r\n        switch (this.field.type) {\r\n            case 'dec':\r\n            case 'bigint':\r\n            case 'int':\r\n            case 'smallint':\r\n            case 'tinyint':\r\n                this.extraChars.push(KeyCode_Dot); break;\r\n        }\r\n    }\r\n\r\n    protected buildRules() {\r\n        super.buildRules();\r\n        this.rules.push(new RuleNum);\r\n        let {min, max} = this.fieldUI;\r\n        if (min !== undefined) this.rules.push(new RuleMin(min));\r\n        if (max !== undefined) this.rules.push(new RuleMax(max));\r\n    }\r\n\r\n    inputType:string = 'number';\r\n\r\n    protected parse(text:string):any {\r\n        try {\r\n            if (text.trim().length === 0) return undefined;\r\n            let ret = Number(text);\r\n            return (ret === NaN)? null : ret;\r\n        }\r\n        catch {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    protected setInputValue() {\r\n        if (!this.input) return;\r\n        let v = this.value;\r\n        if (this.parse(this.input.value) == v) return;\r\n        this.input.value = v === null || v === undefined? '' : v;\r\n    }\r\n\r\n    protected onKeyPress = (event:React.KeyboardEvent<HTMLInputElement>) => {\r\n        let ch = event.charCode;\r\n        if (ch === 8 || ch === 0 || ch === 13 || ch >= 48 && ch <= 57) return;\r\n        if (this.extraChars !== undefined) {\r\n            if (this.extraChars.indexOf(ch) >= 0) {\r\n                switch (ch) {\r\n                    case KeyCode_Dot: this.onKeyDot(); break;\r\n                    case KeyCode_Neg: this.onKeyNeg(); event.preventDefault(); break;\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    private onKeyDot() {\r\n        let v = this.input.value;\r\n        let p = v.indexOf('.');\r\n        if (p >= 0) this.input.value = v.replace('.', '');\r\n    }\r\n    private onKeyNeg() {\r\n        let v = this.input.value;\r\n        let p = v.indexOf('-');\r\n        if (p >= 0) v = v.replace('-', '');\r\n        else v = '-'+v;\r\n        this.input.value = v;\r\n    }\r\n}\r\n\r\nexport class VIntField extends VNumberControl {\r\n    protected buildRules() {\r\n        super.buildRules();\r\n        this.rules.push(new RuleInt);\r\n    }\r\n}\r\n\r\nexport class VDecField extends VNumberControl {\r\n}\r\n\r\nexport class VTextField extends VStringField {\r\n\r\n}\r\n\r\nexport class VDateTimeField extends VStringField {\r\n\r\n}\r\n\r\nexport class VDateField extends VStringField {\r\n\r\n}\r\n","import React from 'react';\r\nimport { VField } from './vField';\r\nimport { Field } from '../../../uqs';\r\nimport { VForm } from '../vForm';\r\nimport { observer } from 'mobx-react';\r\nimport { FieldRes } from '../vBand';\r\n\r\nexport class VComputeField extends VField {\r\n    constructor(form:VForm, field: Field, fieldRes: FieldRes) {\r\n        super(form, field, undefined, fieldRes);\r\n    }\r\n    protected view = observer(() => {\r\n        let value = this.form.values[this.field.name];\r\n        let {placeHolder, suffix} = this.fieldRes;\r\n        let ctrlCN = 'form-control form-control-input bg-light';\r\n        if (value === null) value = '';\r\n        let input = <input className={ctrlCN}\r\n            type=\"text\"\r\n            placeholder={placeHolder}\r\n            readOnly={true}\r\n            value={value}/>\r\n        let inputGroup;\r\n        if (suffix === undefined)\r\n            inputGroup = input;\r\n        else\r\n            inputGroup = <div className=\"input-group\">\r\n                {input}\r\n                <div className=\"input-group-append\">\r\n                    <span className=\"input-group-text\">{suffix}</span>\r\n                </div>\r\n            </div>;\r\n        return inputGroup;\r\n        /*\r\n            return <div \r\n            className=\"form-control form-control-plaintext border border-info rounded bg-light cursor-pointer\">\r\n            {value} &nbsp;\r\n        </div>;\r\n        */\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { IObservableArray, observable } from 'mobx';\r\nimport _ from 'lodash';\r\nimport { Page, nav, List, FA, Muted } from '../../../ui';\r\nimport { ViewModel, RowContent, TypeContent, JSONContent } from './viewModel';\r\nimport { ArrFields, Field } from '../../uqs';\r\nimport { VForm, FieldInputs, FormMode } from './vForm';\r\nimport { FormArr } from '../formUI';\r\n\r\nexport type ArrEditRow = (initValues:any, onRowChanged:(rowValues:any)=>void) => Promise<void>;\r\n\r\nexport class VArr extends ViewModel {\r\n    protected mode: FormMode;\r\n    protected label: any;\r\n    protected header: any;\r\n    protected footer: any;\r\n    protected rowValues: any;                 // 仅仅用来判断是不是新增，undefined则是新增\r\n    protected onEditRow: ArrEditRow;\r\n    protected ownerForm:VForm;\r\n    protected vForm:VForm;\r\n    protected rowContent:TypeContent;\r\n    protected none: string;\r\n    protected newSubmitCaption: string;\r\n    protected editSubmitCaption: string;\r\n    protected addRow: ()=>Promise<void>;\r\n\r\n    name:string;\r\n    list: IObservableArray<any>;\r\n\r\n    constructor(ownerForm:VForm, arr:ArrFields, onEditRow?:ArrEditRow) {\r\n        super();\r\n        this.ownerForm = ownerForm;\r\n        let {name, fields} = arr;\r\n        this.name = name;\r\n        let {ui, res, mode, inputs, values} = ownerForm;\r\n        let arrsRes = res.arrs;\r\n        let arrRes = arrsRes !== undefined? arrsRes[name] : {};\r\n        let {label, none, newSubmit, editSubmit} = arrRes;\r\n        this.none = none || ownerForm.none;\r\n        this.newSubmitCaption = newSubmit || ownerForm.arrNewCaption;\r\n        this.editSubmitCaption = editSubmit || ownerForm.arrEditCaption;\r\n        this.label = label || name;\r\n        let arrUI = ((ui && ui.items[name]) || {}) as FormArr;\r\n        this.rowContent = arrUI.rowContent;// || JSONContent;\r\n        this.mode = mode;\r\n        if (this.onEditRow === undefined) {\r\n            this.vForm = new VForm({\r\n                fields: fields,\r\n                arrs: undefined,\r\n                ui: arrUI,\r\n                res: arrRes,\r\n                inputs: inputs[name] as FieldInputs,\r\n                none: ownerForm.none,\r\n                submitCaption: 'submit',\r\n                arrNewCaption: undefined,\r\n                arrEditCaption: undefined,\r\n                arrTitleNewButton: undefined,\r\n                mode: mode,\r\n            }, \r\n            mode===FormMode.readonly? undefined: this.onSubmit);\r\n        }\r\n        else {\r\n            this.onEditRow = onEditRow;\r\n        }\r\n        this.list = values[name];\r\n    }\r\n\r\n    reset() {\r\n        this.vForm.reset();\r\n        this.list.clear();\r\n    }\r\n\r\n    setAddRow(addRow:()=>Promise<void>) {\r\n        this.addRow = addRow;\r\n    }\r\n\r\n    protected rowPage = () => {\r\n        return <Page header={this.label} back=\"close\">\r\n            {this.vForm.render('py-3')}\r\n        </Page>\r\n    }\r\n    private onSubmit = async () => {\r\n        let {valueBoxs} = this.vForm;\r\n        await this.onRowChanged(valueBoxs);\r\n    }\r\n\r\n    private onRowChanged = async (rowValues:any) => {\r\n        if (this.rowValues === undefined) {\r\n            rowValues.$owner = this.ownerForm.values;\r\n            this.list.push(rowValues);\r\n            if (this.onEditRow === undefined)\r\n                this.vForm.reset();\r\n            else\r\n                await this.onEditRow(undefined, this.onRowChanged);\r\n        }\r\n        else {\r\n            _.merge(this.rowValues, rowValues);\r\n            if (this.onEditRow === undefined) nav.pop();\r\n        }\r\n    }\r\n\r\n    private renderItem = (item:any, index:number) => {\r\n        if (this.rowContent === undefined)\r\n            return <div className=\"px-3 py-2\"><JSONContent {...item} /></div>\r\n        return <this.rowContent {...item} />;\r\n    }\r\n    private showRow = async (rowValues:any):Promise<any> => {\r\n        if (this.onEditRow !== undefined) {\r\n            await this.onEditRow(rowValues, this.onRowChanged);\r\n            return;\r\n        }\r\n        this.vForm.reset();\r\n        if (rowValues !== undefined) this.vForm.setValues(rowValues);\r\n        nav.push(<this.rowPage />);\r\n    }\r\n    private editRow = async (rowValues:any): Promise<void> => {\r\n        this.rowValues = rowValues;\r\n        let {vSubmit} = this.vForm;\r\n        if (vSubmit !== undefined) {\r\n            vSubmit.caption = this.editSubmitCaption;\r\n            vSubmit.className = 'btn btn-outline-success';\r\n        }\r\n        this.vForm.mode = this.ownerForm.mode;\r\n        await this.showRow(rowValues);\r\n    }\r\n    private internalAddRow = async () => {\r\n        this.rowValues = undefined;\r\n        let {vSubmit} = this.vForm;\r\n        vSubmit.caption = this.newSubmitCaption;\r\n        vSubmit.className = 'btn btn-outline-success';\r\n        this.vForm.reset();\r\n        this.vForm.mode = FormMode.new;\r\n        await this.showRow(undefined);\r\n    }\r\n\r\n    protected view = () => {\r\n        let button;\r\n        if (this.addRow !== undefined || this.mode !== FormMode.readonly) {\r\n            button = <button onClick={this.addRow || this.internalAddRow}\r\n                type=\"button\" \r\n                className=\"btn btn-link p-0\">\r\n                {this.ownerForm.arrTitleNewButton}\r\n            </button>;\r\n        }\r\n        let header = this.header || <div className=\"px-3 bg-light small\" style={{paddingTop:'1px', paddingBottom:'1px'}}>\r\n            <div className=\"flex-fill align-self-center\">{this.label}</div>\r\n            {button}\r\n        </div>;\r\n        return <List className=\"pb-3\"\r\n            header={header}\r\n            none={<Muted className=\"px-3 py-2\">{this.none}</Muted>}\r\n            items={this.list}\r\n            item={{render: this.renderItem, onClick: this.editRow}} />;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { tv } from '../../../tools';\r\nimport { Field, Tuid, TuidBox } from '../../../uqs';\r\nimport { VField, RedMark } from './vField';\r\nimport { FieldUI } from '../../formUI';\r\nimport { VForm, FieldInput, FormMode } from '../vForm';\r\nimport { FieldRes } from '../vBand';\r\n\r\nconst buttonStyle:React.CSSProperties = {\r\n    textAlign:'left', \r\n    paddingLeft:'0.75rem', \r\n    paddingRight:'0.75rem', \r\n    overflow: 'hidden'\r\n};\r\n\r\nexport class VTuidField extends VField {\r\n    protected vForm: VForm;\r\n    protected input: FieldInput;\r\n    protected tuid: TuidBox;\r\n\r\n    constructor(vForm: VForm, field:Field, fieldUI: FieldUI, fieldRes:FieldRes) {\r\n        super(vForm, field, fieldUI, fieldRes);\r\n        this.tuid = field._tuid;\r\n        this.vForm = vForm;\r\n        this.input = vForm.inputs[field.name] as FieldInput;\r\n    }\r\n\r\n    onClick = async () => {\r\n        if (this.readonly === true) {\r\n            if (!this.value) return;\r\n            await this.tuid.showInfo(); //this.value.id);\r\n            return;\r\n        }\r\n        let id:number;\r\n        if (this.input !== undefined) {\r\n            id = await this.input.select(this.vForm, this.field, this.vForm.getValues());\r\n        }\r\n        else {\r\n            alert('call undefined');\r\n            id = 0;\r\n        }\r\n        this.setValue(this.tuid.boxId(id));\r\n    }\r\n    protected view = observer(() => {\r\n        let {placeHolder} = this.fieldRes;\r\n        let disabled:boolean = false;\r\n        //let {_ownerField} = this.field;\r\n        let {_tuid} = this.field;\r\n        let {ownerField} = _tuid;\r\n        if (ownerField !== undefined) {\r\n            let {name, arr} = ownerField;\r\n            disabled = this.vForm.getValue(name) === null;\r\n        }\r\n        let content;\r\n        if (this.value === null)\r\n            content = <>{placeHolder || this.input.placeHolder}</>;\r\n        else if (typeof this.value === 'object') {\r\n            content = tv(this.value);\r\n        }\r\n        else {\r\n            let idBox = this.tuid.boxId(this.value);\r\n            content = tv(idBox); // idBox.content();\r\n        }\r\n        if (this.readonly === true)\r\n        {\r\n            return <div \r\n                className=\"form-control form-control-plaintext border border-info rounded bg-light cursor-pointer\"\r\n                onClick={this.onClick}>\r\n                {content}\r\n            </div>;\r\n        }\r\n        let {required} = this.fieldUI;\r\n        let redDot = (required === true || this.field.null === false) && <RedMark />;\r\n        return <>\r\n            {redDot}\r\n            <button className=\"form-control btn btn-outline-info\"\r\n                type=\"button\"\r\n                disabled={disabled}\r\n                style={buttonStyle}\r\n                onClick={this.onClick}>\r\n                {content}\r\n            </button>\r\n        </>;\r\n    })\r\n}\r\n","import { VBand, VFieldBand, VArrBand, VFieldsBand, VSubmitBand, FieldRes } from './vBand';\r\nimport { Field, ArrFields } from '../../uqs';\r\nimport { VForm, FormOptions } from './vForm';\r\nimport { FormItems, FieldUI, FormItem } from '../formUI';\r\nimport { VSubmit } from './vSubmit';\r\nimport { VField, buildVField, VComputeField } from './vField';\r\nimport { VArr } from './vArr';\r\nimport { VTuidField } from './vField/vTuidField';\r\n\r\nexport class BandsBuilder {\r\n    private vForm: VForm;\r\n    private onSubmit: (values:any)=>Promise<void>;\r\n    private fields: Field[];\r\n    private arrs: ArrFields[];\r\n    private formItems: FormItems;\r\n    private layout: string[];\r\n    private res: any;\r\n    constructor(vForm:VForm, options: FormOptions, onSubmit: (values:any)=>Promise<void>) {\r\n        this.vForm = vForm;\r\n        this.onSubmit = onSubmit;\r\n        let {fields, arrs, ui, res} = options;\r\n        this.fields = fields;\r\n        this.arrs = arrs;\r\n        if (ui !== undefined) {\r\n            let {items, layout} = ui;\r\n            this.formItems = items;\r\n            this.layout = layout;\r\n        }\r\n        this.res = res;\r\n    }\r\n\r\n    build():VBand[] {\r\n        //return this.bandUIs === undefined? this.bandsOnFly() : this.bandsFromUI();\r\n        return this.layout === undefined? this.bandsOnFly() : this.bandsFromLayout();\r\n    }\r\n\r\n    private resFromName(name:string, res:any):string|FieldRes {\r\n        if (res === undefined) return;\r\n        let {fields} = res;\r\n        if (fields === undefined) return;\r\n        return fields[name] || name;\r\n    }\r\n\r\n    private bandsOnFly():VBand[] {\r\n        let bands:VBand[] = [];\r\n        this.bandsFromFields(bands, this.fields, this.res);\r\n        if (this.arrs !== undefined) {\r\n            for (let arr of this.arrs) bands.push(this.bandFromArr(arr));\r\n        }\r\n        if (this.onSubmit !== undefined) {\r\n            bands.push(new VSubmitBand(new VSubmit(this.vForm)));\r\n        }\r\n        return bands;\r\n    }\r\n\r\n    private bandsFromFields(bands:VBand[], fields:Field[], res:any) {\r\n        if (fields === undefined) return;\r\n        for (let field of fields) bands.push(this.bandFromField(field, res));\r\n    }\r\n\r\n    private bandsFromLayout():VBand[] {\r\n        let bands:VBand[] = [];\r\n        /*\r\n        for (let bandUI of this.bandUIs)  {\r\n            let band = this.bandFromUI(bandUI);\r\n            bands.push(band);\r\n        }\r\n        */\r\n        return bands;\r\n    }\r\n\r\n    /*\r\n    private bandFromUI(bandUI:BandUI):VBand {\r\n        let {band} = bandUI;\r\n        switch (band) {\r\n            default: return this.bandFromFieldUI(bandUI as FieldBandUI);\r\n            case 'arr': return this.bandFromArrUI(bandUI as ArrBandUI);\r\n            case 'fields': return this.bandFromFieldsUI(bandUI as FieldsBandUI);\r\n            case 'submit': return this.bandFromSubmitUI(bandUI as SubmitBandUI);\r\n        }\r\n    }\r\n    \r\n    private bandFromFieldUI(bandUI: FieldBandUI): VFieldBand {\r\n        let {label} = bandUI;\r\n        let vField = this.vFieldFromUI(bandUI);\r\n        return new VFieldBand(label, vField);\r\n    }\r\n    private bandFromArrUI(bandUI: ArrBandUI): VArrBand {\r\n        let {label, name} = bandUI;\r\n        let vArr = this.vArrFromUI(bandUI);\r\n        return new VArrBand(label, vArr);\r\n    }\r\n    private bandFromFieldsUI(bandUI: FieldsBandUI): VFieldsBand {\r\n        let {label, fieldUIs} = bandUI;\r\n        let vFields = fieldUIs.map(v => this.vFieldFromUI(v));\r\n        return new VFieldsBand(label, vFields);\r\n    }\r\n    private bandFromSubmitUI(bandUI: SubmitBandUI): VSubmitBand {\r\n        if (this.onSubmit === undefined) return;\r\n        let vSubmit = new VSubmit(this.vForm);\r\n        return new VSubmitBand(vSubmit);\r\n    }\r\n    */\r\n/*\r\n    private vFieldFromField(field:Field, fieldRes:FieldRes, formItem: FormItem): VField {\r\n        let fieldUI:FieldUI = undefined;\r\n        if (formItem !== undefined) {\r\n            if (typeof formItem === 'function') {\r\n                return new VComputeField(this.vForm, field, fieldRes);\r\n            }\r\n        }\r\n        let ret = buildVField(this.vForm, field, formItem, fieldRes);\r\n        if (ret !== undefined) return ret;\r\n        return new VTuidField(field, fieldUI, fieldRes, this.vForm);\r\n    }\r\n*/\r\n    private bandFromField(field:Field, res:any):VBand {\r\n        let {name} = field;\r\n        let fieldRes:FieldRes;\r\n        let rfn = this.resFromName(name, res);\r\n        let label:string;\r\n        if (typeof rfn === 'object') {\r\n            label = rfn.label;\r\n            fieldRes = rfn;\r\n        }\r\n        else {\r\n            label = rfn as string;\r\n            fieldRes = undefined;\r\n        }\r\n        let vField:VField;\r\n        let formItem:FormItem;\r\n        if (this.formItems !== undefined) formItem = this.formItems[name];\r\n        //let vField = this.vFieldFromField(field, fieldRes as FieldRes, formItem);\r\n        //let fieldUI:FieldUI = undefined;\r\n        if (typeof formItem === 'function') {\r\n            vField = new VComputeField(this.vForm, field, fieldRes);\r\n        }\r\n        else {\r\n            vField = buildVField(this.vForm, field, formItem as FieldUI, fieldRes);\r\n        }\r\n        if (vField === undefined) {\r\n            vField = new VTuidField(this.vForm, field, formItem as FieldUI, fieldRes);\r\n        }\r\n        return new VFieldBand(label || name, vField);\r\n    }\r\n\r\n    private bandFromArr(arr: ArrFields):VBand {\r\n        let {name, fields} = arr;\r\n        //let row = JSONContent;\r\n        //let bands:VBand[] = [];\r\n        //this.bandsFromFields(bands, fields, res);\r\n        let vArr = new VArr(this.vForm, arr); // name, res && res.label || name, row, bands);\r\n        return new VArrBand(name, vArr);\r\n    }\r\n\r\n    /*\r\n    private vFieldFromUI(fieldUI:FieldUI):VField {\r\n        return;\r\n    }\r\n\r\n    private vArrFromUI(arrBandUI:ArrBandUI):VArr {\r\n        return;\r\n    }\r\n    */\r\n}\r\n","import { VField, VIntField, VDecField, VStringField, VTextField, VDateTimeField, VDateField } from './vField';\r\nimport { Field } from '../../../uqs';\r\nimport { FieldRes } from '../vBand';\r\nimport { VForm } from '../vForm';\r\nimport { FieldUI } from '../../formUI';\r\n\r\nexport function buildVField(form:VForm, field: Field, fieldUI: FieldUI, fieldRes:FieldRes): VField {\r\n    let vField:new (form:VForm, field:Field, ui:FieldUI, fieldRes:FieldRes) => VField;\r\n    switch (field.type) {\r\n        default: return;\r\n        case 'tinyint':\r\n        case 'smallint':\r\n        case 'int':\r\n        case 'bigint':\r\n            vField = VIntField;\r\n            break;\r\n        case 'id':\r\n            let {_tuid} = field;\r\n            if (_tuid !== undefined) return;\r\n            vField = VIntField;\r\n            break;\r\n        case 'dec':\r\n            vField = VDecField;\r\n            break;\r\n        case 'char':\r\n            vField = VStringField;\r\n            break;\r\n        case 'text':\r\n            vField = VTextField;\r\n            break;\r\n        case 'datetime':\r\n            vField = VDateTimeField;\r\n            break;\r\n        case 'date':\r\n            vField = VDateField;\r\n            break;\r\n    }\r\n    return new vField(form, field, fieldUI, fieldRes);\r\n}\r\n\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport { observer } from 'mobx-react';\r\nimport { VBand } from './vBand';\r\nimport { BandsBuilder } from './bandsBuilder';\r\nimport { Field, ArrFields } from '../../uqs';\r\nimport { computed, observable, IObservableObject, IObservableValue } from 'mobx';\r\nimport { VArr } from './vArr';\r\nimport { FormUI, FormUIBase, FormItems } from '../formUI';\r\nimport { VField } from './vField';\r\nimport { VSubmit } from './vSubmit';\r\nimport { IObservableArray } from 'mobx';\r\nimport { FA } from '../../../ui';\r\n\r\nexport type FieldCall = (form:VForm, field:Field, values:any) => Promise<any>;\r\nexport interface FieldInput {\r\n    select: FieldCall;\r\n    content: React.StatelessComponent<any>;\r\n    placeHolder: string;\r\n}\r\nexport interface FieldInputs {\r\n    [fieldOrArr:string]: FieldInput | {[field:string]: FieldInput};\r\n}\r\nexport enum FormMode {new, edit, readonly}\r\n\r\nexport interface FormOptions {\r\n    fields: Field[];\r\n    arrs?: ArrFields[];\r\n    ui: FormUIBase;\r\n    res: any;\r\n    inputs: FieldInputs;\r\n    submitCaption: string;\r\n    arrNewCaption: string;\r\n    arrEditCaption: string;\r\n    arrTitleNewButton: JSX.Element;\r\n    none: string;\r\n    mode: FormMode;\r\n}\r\n\r\nexport class VForm {\r\n    protected fields: Field[];\r\n    protected arrs: ArrFields[];\r\n    protected bands: VBand[];\r\n    protected bandColl: {[key:string]: VBand};\r\n    protected onSubmit: ()=>Promise<void>;\r\n\r\n    constructor(options: FormOptions, onSubmit: ()=>Promise<void>) {\r\n        let {fields, arrs, ui, res, inputs, none, submitCaption, arrNewCaption, arrEditCaption, arrTitleNewButton, mode} = options;\r\n        this.fields = fields;\r\n        this.arrs = arrs;\r\n        this.ui = ui;\r\n        if (this.ui !== undefined) this.formItems = this.ui.items; //.compute = this.ui.compute;\r\n        this.res = res;\r\n        this.inputs = inputs;\r\n        this.none = none;\r\n        this.submitCaption = submitCaption;\r\n        this.arrNewCaption = arrNewCaption;\r\n        this.arrEditCaption = arrEditCaption;\r\n        this.arrTitleNewButton = arrTitleNewButton || <small><FA name=\"plus\" /> 新增</small>;\r\n        if (onSubmit === undefined) this.mode = FormMode.readonly;\r\n        else this.mode = mode;\r\n        this.buildFormValues();\r\n        this.buildBands(options, onSubmit);\r\n        this.onSubmit = onSubmit;\r\n    }\r\n\r\n    ui: FormUI;\r\n    res: any;\r\n    values: any;\r\n    errors: any;\r\n    formItems: FormItems;\r\n    mode: FormMode;\r\n    vFields: {[name:string]:VField} = {};\r\n    vArrs: {[name:string]: VArr} = {};\r\n    vSubmit: VSubmit;\r\n    inputs: FieldInputs;\r\n    none: string;\r\n    submitCaption: string;\r\n    arrNewCaption: string;\r\n    arrEditCaption: string;\r\n    arrTitleNewButton: JSX.Element;\r\n\r\n    private buildBands(options: FormOptions, onSubmit: (values:any)=>Promise<void>) {\r\n        this.bandColl = {};\r\n        let bandsBuilder = new BandsBuilder(this, options, onSubmit);\r\n        this.bands = bandsBuilder.build();\r\n        for (let band of this.bands) {\r\n            this.bandColl[band.key] = band;\r\n            let vFields = band.getVFields();\r\n            if (vFields !== undefined) for (let f of vFields) this.vFields[f.name] = f;\r\n            let vArr = band.getVArr();\r\n            if (vArr !== undefined) this.vArrs[vArr.name] = vArr;\r\n            let vSubmit = band.getVSubmit();\r\n            if (vSubmit !== undefined) this.vSubmit = vSubmit;\r\n        }\r\n    }\r\n\r\n    private onFormSubmit = (event:React.FormEvent<any>) => {\r\n        event.preventDefault();\r\n        return false;\r\n    }\r\n\r\n    protected view = observer(({className}:{className:string}) => {\r\n        return <form className={className} onSubmit={this.onFormSubmit}>\r\n            {this.bands.map(v => v.render())}\r\n        </form>;\r\n    });\r\n\r\n    getBand(name:string) {\r\n        return this.bandColl[name];\r\n    }\r\n\r\n    computeFields() {\r\n        if (this.formItems === undefined) return;\r\n        let values = this.values;\r\n        for (let i in this.formItems) {\r\n            let item = this.formItems[i];\r\n            if (typeof item !== 'function') continue;\r\n            values[i] = item.call(this, values);\r\n        }\r\n    }\r\n\r\n    async submit() {\r\n        if (this.onSubmit === undefined) return;\r\n        await this.onSubmit();\r\n    }\r\n    \r\n    getValues() {\r\n        let ret:any = {};\r\n        let values = this.values;\r\n        for (let f of this.fields) {\r\n            let {name} = f;\r\n            let v = values[name]\r\n            ret[name] =  v !== null && typeof v === 'object' ? v.id : v;\r\n        }\r\n        if (this.arrs !== undefined) {\r\n            for (let arr of this.arrs) {\r\n                let {name, fields, id, order} = arr;\r\n                let list = ret[name] = [];\r\n                let rows = this.vArrs[name].list;\r\n                for (let row of rows) {\r\n                    let item = {} as any;\r\n                    if (id !== undefined) item[id] = row[id];\r\n                    if (order !== undefined) item[order] = row[order];\r\n                    for (let f of fields) {\r\n                        let {name:fn} = f;\r\n                        let v = row[fn]\r\n                        item[fn] =  v !== null && typeof v === 'object' ? v.id : v;\r\n                    }\r\n                    list.push(item);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    get valueBoxs() {\r\n        let ret:any = {};\r\n        let values = this.values;\r\n        for (let f of this.fields) {\r\n            let {name, _tuid} = f;\r\n            let v = values[name]\r\n            ret[name] =  _tuid === undefined || typeof v === 'object' ? v : _tuid.boxId(v);\r\n        }\r\n        if (this.arrs === undefined) return ret;\r\n        for (let arr of this.arrs) {\r\n            let {name, fields, id, order} = arr;\r\n            let list = ret[name] = this.vArrs[name].list.slice();\r\n            for (let row of list) {\r\n                for (let f of fields) {\r\n                    let {name:fn, _tuid} = f;\r\n                    let v = row[fn]\r\n                    row[fn] =  _tuid === undefined || typeof v === 'object' ? v : _tuid.boxId(v);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    setValues(initValues:any) {\r\n        if (initValues === undefined) {\r\n            this.reset();\r\n            return;\r\n        }\r\n        let values = this.values;\r\n        let errors = this.errors;\r\n        for (let f of this.fields) {\r\n            let fn = f.name;\r\n            errors[fn] = undefined;\r\n            let v =  initValues[fn];\r\n            values[fn] = v;\r\n        }\r\n        // 还要设置arrs的values\r\n        for (let i in this.vArrs) {\r\n            let list = initValues[i];\r\n            if (list === undefined) continue;\r\n            let arrList = values[i] as IObservableArray<any>;\r\n            arrList.clear();\r\n            arrList.push(...list);\r\n        }\r\n    }\r\n\r\n    @computed get isOk():boolean {\r\n        for (let i in this.vFields) {\r\n            if (this.vFields[i].isOk === false) return false;\r\n        }\r\n        return true;\r\n    }\r\n    reset() {\r\n        let values = this.values;\r\n        let errors = this.errors;\r\n        for (let f of this.fields) {\r\n            let fn = f.name;\r\n            //if (this.compute !== undefined && this.compute[fn] !== undefined) continue;\r\n            values[fn] = null;\r\n            errors[fn] = undefined;\r\n        }\r\n        for (let i in this.vFields) {\r\n            let ctrl = this.vFields[i];\r\n            let cn = ctrl.name;\r\n            if (cn === undefined) continue;\r\n            //if (this.compute !== undefined && this.compute[cn] !== undefined) continue;\r\n            ctrl.setValue(null);\r\n        }\r\n        for (let i in this.vArrs) {\r\n            let vArr = this.vArrs[i];\r\n            vArr.reset();\r\n        }\r\n    }\r\n\r\n    getValue(fieldName: string) {\r\n        return this.values[fieldName];\r\n    }\r\n    setValue(fieldName: string, value: any) { this.values[fieldName] = value }\r\n\r\n    setError(fieldName:string, error:string) {this.errors[fieldName] = error}\r\n\r\n    private buildFieldValues(fields: Field[]):any {\r\n        let v: {[p:string]: any} = {\r\n            valueFromFieldName: function(propName:string) {\r\n                return this[propName];\r\n            }\r\n        };\r\n        for (let f of fields) {\r\n            let fn = f.name;\r\n            v[fn] = null;\r\n        }\r\n        return v;\r\n    }\r\n    private buildObservableValues():IObservableObject {\r\n        let v: {[p:string]: any} = this.buildFieldValues(this.fields);\r\n        if (this.arrs !== undefined) {\r\n            for (let arr of this.arrs) {\r\n                v[arr.name] = observable.array([], {deep:true});\r\n            }\r\n        }\r\n        let ret = observable(v);\r\n        return ret;\r\n    }\r\n    private buildFormValues() {\r\n        this.values = this.buildObservableValues();\r\n        this.errors = observable(this.buildFieldValues(this.fields));\r\n    }\r\n\r\n    render(className:string = \"py-3\"):JSX.Element {\r\n        return <this.view className={className} />\r\n    }\r\n}\r\n","export * from './vForm';\r\n","import {bridgeCenterApi, isBridged} from './appBridge';\r\nimport {FetchError} from '../fetchError';\r\nimport {HttpChannelUI} from './httpChannelUI';\r\nimport {nav} from '../ui/nav';\r\nimport { isDevelopment } from './host';\r\n\r\nexport async function httpGet(url:string, params?:any):Promise<any> {\r\n    let channel = new HttpChannel(false, url, undefined, undefined);\r\n    let ret = await channel.get('', params);\r\n    return ret;\r\n}\r\n\r\nexport async function httpPost(url:string, params?:any):Promise<any> {\r\n    let channel = new HttpChannel(false, url, undefined, undefined);\r\n    let ret = await channel.post('', params);\r\n    return ret;\r\n}\r\n\r\nexport class HttpChannel {\r\n    private isCenter: boolean;\r\n    private hostUrl: string;\r\n    private apiToken: string;\r\n    private ui?: HttpChannelUI;\r\n    private timeout: number;\r\n\r\n    constructor(isCenter: boolean, hostUrl: string, apiToken:string, ui?: HttpChannelUI) {\r\n        this.isCenter = isCenter;\r\n        this.hostUrl = hostUrl;\r\n        this.apiToken = apiToken;\r\n        this.ui = ui;\r\n        this.timeout = isDevelopment === true? 500000:5000;\r\n    }\r\n\r\n    private startWait = () => {\r\n        if (this.ui !== undefined) this.ui.startWait();\r\n    }\r\n\r\n    private endWait = (url?:string, reject?:(reason?:any)=>void) => {\r\n        if (this.ui !== undefined) this.ui.endWait();\r\n        if (reject !== undefined) reject('访问webapi超时 ' + url);\r\n    }\r\n\r\n    private showError = async (error:FetchError) => {\r\n        if (this.ui !== undefined) await this.ui.showError(error);\r\n    }\r\n\r\n    used() {\r\n        this.post('', {});\r\n    }\r\n\r\n    async get(url: string, params: any = undefined): Promise<any> {\r\n        if (params) {\r\n            let keys = Object.keys(params);\r\n            if (keys.length > 0) {\r\n                let c = '?';\r\n                for (let k of keys) {\r\n                    let v = params[k];\r\n                    if (v === undefined) continue;\r\n                    url += c + k + '=' + params[k];\r\n                    c = '&';\r\n                }\r\n            }\r\n        }\r\n        let options = this.buildOptions();\r\n        options.method = 'GET';\r\n        return await this.innerFetch(url, options);\r\n    }\r\n\r\n    async post(url: string, params: any): Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = 'POST';\r\n        options.body = JSON.stringify(params);\r\n        return await this.innerFetch(url, options);\r\n    }\r\n\r\n    async put(url: string, params: any): Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = 'PUT';\r\n        options.body = JSON.stringify(params);\r\n        return await this.innerFetch(url, options);\r\n    }\r\n\r\n    async delete(url: string, params: any): Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = 'DELETE';\r\n        options.body = JSON.stringify(params);\r\n        return await this.innerFetch(url, options);\r\n    }\r\n    async fetch(url: string, options: any, resolve:(value?:any)=>any, reject:(reason?:any)=>void):Promise<void> {\r\n        let that = this;\r\n        this.startWait();\r\n        let path = url;\r\n        function buildError(err: string) {\r\n            return {\r\n                channel: that,\r\n                url: path,\r\n                options: options,\r\n                resolve: resolve,\r\n                reject: reject,\r\n                error: err,\r\n            }\r\n        }\r\n        try {\r\n            console.log('%s %s', options.method, path);\r\n            let timeOutHandler = setTimeout(() => that.endWait(url, reject), this.timeout);\r\n            let res = await fetch(encodeURI(path), options);\r\n            if (res.ok === false) {\r\n                clearTimeout(timeOutHandler);\r\n                that.endWait();\r\n                console.log('call error %s', res.statusText);\r\n                throw res.statusText;\r\n            }\r\n            let ct = res.headers.get('content-type');\r\n            if (ct && ct.indexOf('json')>=0) {\r\n                return res.json().then(async retJson => {\r\n                    clearTimeout(timeOutHandler);\r\n                    that.endWait();\r\n                    if (retJson.ok === true) {\r\n                        return resolve(retJson.res);\r\n                    }\r\n                    if (retJson.error === undefined) {\r\n                        await that.showError(buildError('not valid tonva json'));\r\n                    }\r\n                    else {\r\n                        await that.showError(buildError(retJson.error));\r\n                        reject(retJson.error);\r\n                    }\r\n                    //throw retJson.error;\r\n                }).catch(async error => {\r\n                    await that.showError(buildError(error.message));\r\n                });\r\n            }\r\n            else {\r\n                let text = await res.text();\r\n                clearTimeout(timeOutHandler);\r\n                that.endWait();\r\n                resolve(text);\r\n            }\r\n        }\r\n        catch(error) {\r\n            if (typeof error === 'string') {\r\n                if (error.toLowerCase().startsWith('unauthorized') === true) {\r\n                    nav.logout();\r\n                    return;\r\n                }\r\n            }\r\n            await this.showError(buildError(error.message));\r\n        };\r\n    }\r\n\r\n    private async innerFetch(url: string, options: any): Promise<any> {\r\n        let u = this.hostUrl + url;\r\n        if (this.isCenter === true && this.apiToken === undefined && isBridged())\r\n            return await bridgeCenterApi(u, options.method, options.body);\r\n        return await new Promise<any>(async (resolve, reject) => {\r\n            await this.fetch(u, options, resolve, reject);\r\n        });\r\n    }\r\n\r\n    async callFetch(url:string, method:string, body:any):Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = method;\r\n        options.body = body;\r\n        return await new Promise<any>(async (resolve, reject) => {\r\n            await this.fetch(url, options, resolve, reject);\r\n        });\r\n    }\r\n\r\n    private buildOptions(): any {\r\n        let {language, culture} = nav;\r\n        let headers = new Headers();\r\n        //headers.append('Access-Control-Allow-Origin', '*');\r\n        headers.append('Content-Type', 'application/json;charset=UTF-8');\r\n        let lang = language;\r\n        if (culture) lang += '-' + culture;\r\n        headers.append('Accept-Language', lang);\r\n        if (this.apiToken) { \r\n            headers.append('Authorization', this.apiToken); \r\n        }\r\n        let options = {\r\n            headers: headers,\r\n            // cache: 'no-cache',\r\n        };\r\n        return options;\r\n    }\r\n}\r\n","import _ from 'lodash';\r\n\r\nexport interface KeyValueRes {\r\n    [key:string]: any;\r\n}\r\n\r\nexport interface Res<T extends KeyValueRes> {\r\n    [lang:string]: T | {[district:string]: T};\r\n}\r\n\r\nexport const resOptions:{lang:string, district:string} = {\r\n    lang: undefined,\r\n    district: undefined,\r\n}\r\n\r\nexport function setResOptions(lang:string, district:string) {\r\n    resOptions.lang = lang;\r\n    resOptions.district = district;\r\n}\r\n\r\n(function() {\r\n    let lang: string, district: string;\r\n    let language = navigator.languages && navigator.languages[0] || // Chrome / Firefox\r\n        navigator.language; // ||   // All browsers\r\n    //navigator.userLanguage; // IE <= 10\r\n    if (!language) {\r\n        lang = 'zh';\r\n        district = 'CN';\r\n    }\r\n    else {\r\n        let parts = language.split('-');\r\n        lang = parts[0];\r\n        if (parts.length > 1) district = parts[1];\r\n    }\r\n    setResOptions(lang, district);\r\n}());\r\n\r\nexport function resLang<T extends KeyValueRes>(res:Res<T>):T {\r\n    let {lang, district} = resOptions;\r\n    let ret:T = {} as T;\r\n    if (res === undefined) return ret;\r\n    _.merge(ret, res._);\r\n    let l = res[lang];\r\n    if (l === undefined) return ret;\r\n    _.merge(ret, l._);\r\n    let d = l[district];\r\n    if (d === undefined) return ret;\r\n    _.merge(ret, d);\r\n    let {entity} = ret;\r\n    if (entity !== undefined) {\r\n        for (let i in entity) {\r\n            entity[i.toLowerCase()] = entity[i];\r\n        }\r\n    }\r\n    return ret;\r\n}\r\n","import * as React from 'react';\r\nimport {observable, computed} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face} from '../face';\r\nimport {Rule} from '../rule';\r\n\r\nexport abstract class ControlBase {\r\n    protected formView: FormView;\r\n    constructor(formView:FormView) {\r\n        this.formView = formView;\r\n    }\r\n    render():JSX.Element {\r\n        return <div className=\"col-sm-10\">\r\n            {this.renderControl()}\r\n        </div>;\r\n    }\r\n    protected abstract renderControl():JSX.Element;\r\n    @computed get hasError():boolean {return false;}\r\n    @computed get filled():boolean {return false;}\r\n    clear() {}\r\n    clearErrors() {}\r\n    readValues(values:any):any {}\r\n    setError(fieldName:string, error:string) {}\r\n    setInitValues(values: any) {}\r\n    isOk():boolean {this.validate(); return !this.hasError;}\r\n    protected validate() {}\r\n}\r\n\r\nexport abstract class Control extends ControlBase {\r\n    protected field: Field;\r\n    protected face: Face;\r\n    protected props: any;\r\n    protected rules: Rule[];\r\n\r\n    protected element: HTMLElement;\r\n    @observable protected isOK?: boolean;\r\n    @observable protected error: string;\r\n    @observable protected value: any;\r\n\r\n    constructor(formView:FormView, field:Field, face:Face) {\r\n        super(formView);\r\n        this.field = field;\r\n        this.face = face;\r\n        this.init();\r\n        this.setProps();\r\n    }\r\n    protected ref(element: HTMLElement) {\r\n        this.element = element;\r\n    }\r\n    protected init() {\r\n        this.rules = [];\r\n        let r = this.field.rules;\r\n        if (r !== undefined) {\r\n            if (Array.isArray(r) === true) this.rules.push(...(r as Rule[]));\r\n            else this.rules.push(r as Rule);\r\n        }\r\n    };\r\n    protected setProps():any {\r\n        return this.props = {\r\n            ref: this.ref.bind(this),\r\n            name: this.field.name,\r\n        }\r\n    };\r\n    @computed get hasError():boolean {return this.error !== undefined;}\r\n    @computed get filled():boolean {\r\n        let ret = this.value !== undefined && this.value !== this.field.defaultValue;\r\n        return ret;\r\n    }\r\n    clearValue() { this.value = undefined; }\r\n    clear() { this.clearErrors(); this.clearValue(); }\r\n    clearErrors() { this.isOK = undefined; this.error = undefined; }\r\n    readValues(values:any):any {\r\n        values[this.field.name] = this.value;\r\n    }\r\n    setError(fieldName:string, error:string) {}\r\n    setInitValues(values: any) {}\r\n    protected getValueFromElement():any {return this.value;}\r\n    protected validate() {\r\n        try {\r\n            let v = this.getValueFromElement();\r\n            if (this.rules.length > 0) {\r\n                let isOk:boolean;\r\n                for (let rule of this.rules) {\r\n                    console.log('validate: %s', v);\r\n                    let err = rule(v);\r\n                    console.log('validate: %s err: %s', v, err);\r\n                    if (err === true) {\r\n                        this.error = undefined;\r\n                        isOk = true;\r\n                    }\r\n                    else if (err !== undefined) {\r\n                        //console.log('field %s onBlur v=%s rule=%s err=%s', \r\n                        //    this.field.name, JSON.stringify(v), rule, err);\r\n                        this.error = err;\r\n                        this.isOK = false;\r\n                        return;\r\n                    }\r\n                }\r\n                this.isOK = isOk;\r\n            }\r\n            this.value = v;\r\n        }\r\n        catch (e) {\r\n            this.error = e.message;\r\n        }\r\n    }\r\n    render():JSX.Element {\r\n        let n;\r\n        if (this.face !== undefined) {\r\n            let {notes} = this.face;\r\n            if (notes !== undefined) n = <small className=\"text-muted\">{notes}</small>;\r\n        }\r\n        return <div className=\"col-sm-10\">\r\n            {this.renderControl()}\r\n            {n}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face} from '../face';\r\nimport {ControlBase} from './control';\r\n\r\nexport class ButtonsControl extends ControlBase {\r\n    constructor(props) {\r\n        super(props);\r\n        this.otherClick = this.otherClick.bind(this);\r\n    }\r\n    private otherClick() {\r\n        let onOther = this.formView.props.onOther;\r\n        if (onOther === undefined) return;\r\n        let values = this.formView.readValues();\r\n        onOther(values);\r\n    }\r\n    renderControl():JSX.Element {\r\n        console.log('buttons.renderControl');\r\n        let nothing = this.formView.nothing;\r\n        let hasError = this.formView.hasError;\r\n        let props = this.formView.props;\r\n        console.log('buttons.renderControl nothing:%s hasError:%s', nothing, hasError);\r\n        let {submitButton, otherButton, onOther} = props;\r\n        let btnOther;\r\n        if (otherButton !== undefined) {\r\n            btnOther = <button className=\"btn btn-outline-info ml-auto\" onClick={this.otherClick}>\r\n                {otherButton}\r\n            </button>\r\n        }\r\n        return <div className=\"d-flex justify-content-start\">\r\n            <button\r\n                className=\"btn btn-primary\"\r\n                type=\"submit\" \r\n                disabled={nothing || hasError}>\r\n                {submitButton || '提交'}\r\n            </button>\r\n            {btnOther}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable, computed} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, Placeholder} from '../face';\r\nimport {Control} from './control';\r\n\r\nconst TxtRequired = '必须填入要求内容';\r\n\r\nexport abstract class CharsControl extends Control {\r\n    protected init() {\r\n        super.init();\r\n        if (this.field.required === true) {\r\n            this.rules.push((v) => {\r\n                if (v===null || v===undefined || (v as string).trim().length === 0) return TxtRequired;\r\n                return true;\r\n            });\r\n        }\r\n    }\r\n\r\n    protected element: HTMLInputElement;\r\n    protected getValueFromElement():any {return this.parseValue(this.element.value)}\r\n\r\n    protected setProps() {\r\n        super.setProps();\r\n        _.assign(this.props, {\r\n            onBlur: this.onBlur.bind(this),\r\n            onFocus: this.onFocus.bind(this),\r\n            onChange: this.onChange.bind(this),\r\n        });\r\n        let face = this.face as Placeholder;\r\n        if (face !== undefined) {\r\n            _.assign(this.props, {\r\n                placeholder: face.placeholder,\r\n            });\r\n        }\r\n        return this.props;\r\n    };\r\n    protected parseValue(value?:string):any {return value;}\r\n    private onBlur() {\r\n        //console.log('field %s onBlure', this.field.name);\r\n        this.validate();\r\n    }\r\n    private onChange() {\r\n        console.log('onChange');\r\n        this.validate();\r\n    }\r\n    private onFocus() {\r\n        this.clearErrors();\r\n        //this.error = undefined;\r\n        //this.formView.clearErrors();\r\n    }\r\n    protected className() {\r\n        return classNames({\r\n            \"form-control\": true,\r\n            \"has-success\": this.isOK === true,\r\n            \"is-invalid\": this.error !== undefined,\r\n            \"is-valid\": this.error === undefined && this.isOK === true,\r\n        });\r\n    }\r\n    protected renderInput():JSX.Element {\r\n        return <input className={this.className()} {...this.props} />;\r\n    }\r\n    protected ref(element: HTMLInputElement) {\r\n        super.ref(element);\r\n        if (element) {\r\n            element.value = this.value === undefined? '':this.value;\r\n        }\r\n    }\r\n    protected renderError():JSX.Element {\r\n        //if (this.field.name === 'name') console.log('charsControl renderControl');\r\n        if (this.error === undefined) return null;\r\n        return <div className=\"invalid-feedback\">{this.error}</div>\r\n    }\r\n    clearValue() { super.clearValue(); this.element.value = ''; }\r\n    setError(fieldName:string, error:string) {\r\n        if (this.field.name === fieldName) this.error = error;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        if (v === undefined) return;\r\n        //this.element.value = v;\r\n        this.value = v;\r\n    }\r\n    renderControl():JSX.Element {\r\n        return <React.Fragment>\r\n            {this.renderInput()}\r\n            {this.renderError()}\r\n        </React.Fragment>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport {CharsControl} from './charsControl';\r\nimport {StringField} from '../field';\r\n\r\nexport class StringControl extends CharsControl {\r\n    protected field: StringField;\r\n    protected setProps() {\r\n        let p = super.setProps();\r\n        _.assign(p, {\r\n            type: 'text',\r\n            maxLength: this.field.maxLength,\r\n        });\r\n        return p;\r\n    };\r\n    protected parseValue(value?:string):any {\r\n        if (value === undefined) return undefined;\r\n        if (value.trim().length === 0) return undefined;\r\n        return value;\r\n    }\r\n}\r\n\r\nexport class PasswordControl extends StringControl {\r\n    protected setProps() {\r\n        let p = super.setProps();\r\n        _.assign(p, {\r\n            type: 'password',\r\n            maxLength: this.field.maxLength,\r\n        });\r\n        return p;\r\n    };\r\n}","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport {IntField, DecField, NumberField} from '../field';\r\nimport {CharsControl} from './charsControl';\r\n\r\nconst ErrInvalidNumber = '无效的数字';\r\nconst ErrMin = '最小值为';\r\nconst ErrMax = '最大值为';\r\n\r\nconst KeyCode_Neg = 45;\r\nconst KeyCode_Dot = 46;\r\n\r\nexport class NumberControl extends CharsControl {\r\n    protected field: IntField | DecField | NumberField;\r\n    protected value: number;\r\n    protected extraChars: number[];\r\n    \r\n    protected init() {\r\n        super.init();\r\n        this.extraChars = [];\r\n        let {min, max} = this.field;\r\n        if (min !== undefined) {\r\n            this.rules.push((v:number) => {if (v === undefined) return; if (v<min) return ErrMin + min; return true;});\r\n            if (min < 0) this.extraChars.push(KeyCode_Neg);\r\n        }\r\n        else {\r\n            this.extraChars.push(KeyCode_Neg);\r\n        }\r\n\r\n        if (max !== undefined) {\r\n            this.rules.push((v:number) => {if (v === undefined) return; if (v>max) return ErrMax + max; return true});\r\n        }\r\n        switch (this.field.type) {\r\n            case 'dec':\r\n            case 'number': this.extraChars.push(KeyCode_Dot); break;\r\n        }\r\n    }\r\n\r\n    protected parseValue(value?:string):any {\r\n        if (value === undefined) return undefined;\r\n        if (value.trim().length === 0) return undefined;\r\n        let n = Number.parseFloat(value);\r\n        if (isNaN(n)) throw new Error(ErrInvalidNumber);\r\n        return n;\r\n    }\r\n\r\n    protected setProps() {\r\n        super.setProps();\r\n        _.assign(this.props, {\r\n            type: 'number',\r\n            step: (this.field as DecField).step,\r\n            onKeyPress: this.onKeyPress.bind(this),\r\n        });\r\n    }\r\n\r\n    onKeyPress(event:KeyboardEvent) {\r\n        let ch = event.charCode;\r\n        if (ch === 8 || ch === 0 || ch === 13 || ch >= 48 && ch <= 57) return;\r\n        if (this.extraChars !== undefined) {\r\n            if (this.extraChars.indexOf(ch) >= 0) {\r\n                switch (ch) {\r\n                    case KeyCode_Dot: this.onKeyDot(); break;\r\n                    case KeyCode_Neg: this.onKeyNeg(); event.preventDefault(); break;\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    private onKeyDot() {\r\n        let v = this.element.value;\r\n        let p = v.indexOf('.');\r\n        if (p >= 0) this.element.value = v.replace('.', '');\r\n    }\r\n    private onKeyNeg() {\r\n        let v = this.element.value;\r\n        let p = v.indexOf('-');\r\n        if (p >= 0) v = v.replace('-', '');\r\n        else v = '-'+v;\r\n        this.element.value = v;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {Control, ControlBase} from './control';\r\nimport {FormView} from '../formView';\r\n\r\nexport class UnknownControl extends Control {\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-plaintext\">\r\n            <div className=\"alert alert-primary\" role=\"alert\">\r\n            don't know how to create control<br/>\r\n            field: {JSON.stringify(this.field)} must be object <br/>\r\n            face: {JSON.stringify(this.face)} must be object <br/>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class EmptyControl extends ControlBase {\r\n    private element:JSX.Element;\r\n    constructor(formView:FormView, element:JSX.Element) {\r\n        super(formView);\r\n        this.element = element;\r\n    }\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-plaintext\">\r\n            {this.element}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, IdPickFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class PickIdControl extends Control {\r\n    protected face: IdPickFace;\r\n    @observable private caption: string|JSX.Element;\r\n\r\n    private onClick = async () => {\r\n        let {pick, fromPicked} = this.face;\r\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\r\n        if (item === undefined) {\r\n            this.value = undefined;\r\n            return;\r\n        }\r\n        if (fromPicked === undefined) {\r\n            this.value = item.id;\r\n            return;\r\n        }\r\n        let {id, caption} = fromPicked(item);\r\n        this.value = id;\r\n        this.caption = caption;\r\n    }\r\n    onPicked = (value: any) => {\r\n        this.value = value.id;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        this.value = v;\r\n    }\r\n    private controlContent():string|JSX.Element {\r\n        let {itemFromId, fromPicked, initCaption} = this.face;\r\n        if (this.value === undefined) {\r\n            return initCaption || '请选择Id';\r\n        }\r\n        if (this.caption !== undefined) {\r\n            return this.caption;\r\n        }\r\n        if (itemFromId !== undefined) {\r\n            if (fromPicked !== undefined) {\r\n                let item = itemFromId(this.value);\r\n                if (item) {\r\n                    let ret = fromPicked(item);\r\n                    if (ret !== undefined) return ret.caption;\r\n                }\r\n            }\r\n        }\r\n        return String(this.value);\r\n    }\r\n    /*\r\n    private buildContent():string|JSX.Element {\r\n        let {tuid, input} = this.face;\r\n        if (input === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n            return <div onClick={this.onClick}>{this.controlContent()}</div>;\r\n        }\r\n        return <input.component id={this.value} \r\n            tuid={tuid}\r\n            input={input}\r\n            entitiesUI={this.formView.props.context} \r\n            params={this.formView.readValues()}\r\n            onPicked={this.onPicked} />;\r\n    }*/\r\n    renderControl():JSX.Element {\r\n        let {tuid, input} = this.face;\r\n        if (input === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n            return <div className=\"form-control-plaintext px-2 border text-primary rounded cursor-pointer\"\r\n                onClick={this.onClick}>\r\n                {this.controlContent()}\r\n            </div>;\r\n        }\r\n        return <div className=\"form-control-static \">\r\n            <input.component id={this.value} \r\n                ui={tuid}\r\n                //input={input}\r\n                //entitiesUI={this.formView.props.context} \r\n                //params={this.formView.readValues()}\r\n                //onPicked={this.onPicked}\r\n                />\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, TuidPickFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class PickTuidControl extends Control {\r\n    protected face: TuidPickFace;\r\n    // protected value: number;\r\n    @observable private caption: string|JSX.Element;\r\n    constructor(formView:FormView, field:Field, face:Face) {\r\n        super(formView, field, face);\r\n        this.onIdChanged = this.onIdChanged.bind(this);\r\n        //this.onClick = this.onClick.bind(this);\r\n    }\r\n    /*\r\n    private async onClick() {\r\n        let {pick, fromPicked} = this.face;\r\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\r\n        if (item === undefined) {\r\n            this.value = undefined;\r\n            return;\r\n        }\r\n        if (fromPicked === undefined) {\r\n            this.value = item.id;\r\n            return;\r\n        }\r\n        let {id, caption} = fromPicked(item);\r\n        this.value = id;\r\n        this.caption = caption;\r\n    }*/\r\n    onIdChanged(id: any) {\r\n        this.value = id.id;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        this.value = v;\r\n    }\r\n    private buildContent():JSX.Element {\r\n        //let {tuid, input} = this.face;\r\n        return <this.face.input.component \r\n            {...this.face}\r\n            id={this.value}\r\n            //ui={this.face.ui}\r\n            //input={input}\r\n            //entitiesUI={this.formView.props.context} \r\n            onFormValues={()=>this.formView.readValues()}\r\n            onIdChanged={this.onIdChanged} />;\r\n    }\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-static \">\r\n            {this.buildContent()}\r\n        </div>;\r\n    }\r\n}\r\n/*\r\n<button className=\"form-control btn btn-outline-info\"\r\ntype=\"button\"\r\nstyle={{textAlign:'left', paddingLeft:'0.75rem'}}\r\nonClick={this.onClick}>\r\n{this.buildContent()}\r\n</button>\r\n*/","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, PickFace} from '../face';\r\nimport {Control} from './control';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class PickControl extends Control {\r\n    protected face: PickFace;\r\n    @observable private caption: string|JSX.Element;\r\n\r\n    private onClick = async () => {\r\n        let {pick, fromPicked} = this.face;\r\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\r\n        if (item === undefined) {\r\n            this.value = undefined;\r\n            return;\r\n        }\r\n        let {id, caption} = fromPicked(item);\r\n        this.value = id;\r\n        this.caption = caption;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        this.value = v;\r\n    }\r\n    /*\r\n    private controlContent():string|JSX.Element {\r\n        let {content: Content} = this.face;\r\n        if (this.value === undefined) {\r\n            return '请选择';\r\n        }\r\n        \r\n        if (this.caption !== undefined) {\r\n            return this.caption;\r\n        }\r\n        return <Content id={this.value} />;\r\n    }*/\r\n    /*\r\n    private buildContent():string|JSX.Element {\r\n        let {tuid, input} = this.face;\r\n        if (input === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n            return <div onClick={this.onClick}>{this.controlContent()}</div>;\r\n        }\r\n        return <input.component id={this.value} \r\n            tuid={tuid}\r\n            input={input}\r\n            entitiesUI={this.formView.props.context} \r\n            params={this.formView.readValues()}\r\n            onPicked={this.onPicked} />;\r\n    }*/\r\n    renderControl():JSX.Element {\r\n        return <this.view />;\r\n        /*\r\n        let {content:Content} = this.face;\r\n        //if (this.value === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n        //}\r\n        //return <div className=\"form-control-static \">\r\n        //    <Content />\r\n        //</div>;\r\n        */\r\n    }\r\n\r\n    private view = observer(() => {\r\n        let content;\r\n        let {content: Content} = this.face;\r\n        if (this.value === undefined || this.value === null) {\r\n            content = '请选择';\r\n        }\r\n        /*\r\n        else if (this.caption !== undefined) {\r\n            content = this.caption;\r\n        }*/\r\n        else {\r\n            content = <Content id={this.value} />;\r\n        } \r\n        return <div\r\n            className=\"form-control-plaintext px-2 border text-primary rounded cursor-pointer bg-light\"\r\n            onClick={this.onClick}>\r\n            {content}\r\n        </div>\r\n    });\r\n}\r\n","export * from './control';\r\nexport * from './buttonsControl';\r\nexport * from './stringControl';\r\nexport * from './numberControl';\r\n\r\nimport {Field} from '../field';\r\nimport {Face} from '../face';\r\nimport {Control, ControlBase} from './control';\r\nimport {ButtonsControl} from './buttonsControl';\r\nimport {CheckControl} from './checkControl';\r\nimport {RadioControl} from './radioControl';\r\nimport {TextAreaControl} from './textAreaControl';\r\nimport {SelectControl} from './selectControl';\r\nimport {UnknownControl, EmptyControl} from './unknownControl';\r\nimport {StringControl, PasswordControl} from './stringControl';\r\nimport {NumberControl} from './numberControl';\r\n\r\nimport {FormView, FormRow, GroupRow, FieldRow, LabelFormRow} from '../formView';\r\nimport { PickIdControl } from './pickIdControl';\r\nimport { PickTuidControl } from './pickTuidControl';\r\nimport { PickControl } from './pickControl';\r\n\r\nexport type CreateControl = (form:FormView, row: FormRow) => ControlBase\r\n\r\nexport const createControl:CreateControl = (form:FormView, row: LabelFormRow):ControlBase => {\r\n    let label = row.label;\r\n    if ((<GroupRow>row).group !== undefined)\r\n        return createGroupControl(form, label, row as GroupRow);\r\n    if ((<FieldRow>row).field !== undefined)\r\n        return createFieldControl(form, label, row as FieldRow);\r\n    return new EmptyControl(form, row.help);\r\n}\r\n\r\nconst controls:{[type:string]: new (formView:FormView, field:Field, face:Face) => Control} = {\r\n    \"string\": StringControl,\r\n    \"password\": PasswordControl,\r\n    \"number\": NumberControl,\r\n    \"checkbox\": CheckControl,\r\n    \"radiobox\": RadioControl,\r\n    \"select\": SelectControl,\r\n    \"pick-id\": PickIdControl,\r\n    \"pick-tuid\": PickTuidControl,\r\n    \"textarea\": TextAreaControl,\r\n    \"pick\": PickControl,\r\n};\r\nconst defaultFaces:{[type:string]: Face} = {\r\n    \"string\": {type:'string'},\r\n    \"number\": {type:'number'},\r\n    \"int\": {type:'number'},\r\n    \"dec\": {type:'number'},\r\n    \"bool\": {type:'checkbox'},\r\n}\r\nfunction createFieldControl(form:FormView, label:string, fieldRow: FieldRow):Control {\r\n    let {field, face} = fieldRow;\r\n    switch (typeof field) {\r\n        case 'string':\r\n            field = {\r\n                name: (field as any) as string,\r\n                type: 'string',\r\n            }\r\n            break;\r\n        case 'object':\r\n            break;\r\n        default:\r\n            return new UnknownControl(form, field, face);\r\n    }\r\n    let fieldType = field.type || 'string';\r\n    if (face === undefined) {\r\n        face = defaultFaces[fieldType];\r\n        if (face === undefined) return new UnknownControl(form, field, face);\r\n    }\r\n    else if (face.type === undefined) {\r\n        let f = defaultFaces[fieldType];\r\n        face.type = f===undefined? 'string' : f.type;\r\n    }\r\n    let control = controls[face.type || fieldType] || UnknownControl;\r\n    return new control(form, field, face);\r\n}\r\n\r\nfunction createGroupControl(form:FormView, label:string, groupRow: GroupRow):Control {\r\n    return new UnknownControl(form, groupRow as any, undefined);\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field, BoolField} from '../field';\r\nimport {Face, CheckBoxFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class CheckControl extends Control {    \r\n    protected element: HTMLInputElement;\r\n    protected field: BoolField;\r\n    protected face: CheckBoxFace;\r\n    private trueValue: any;\r\n    private falseValue: any;\r\n\r\n    protected init() {\r\n        super.init();\r\n        let {trueValue, falseValue} = this.field;\r\n        if (trueValue === undefined) this.trueValue = 1;\r\n        if (falseValue === undefined) this.falseValue = 0;\r\n    }\r\n\r\n    setProps() {\r\n        super.setProps();\r\n        _.assign(this.props, {\r\n            onChange: this.onChange.bind(this),\r\n        });\r\n    }\r\n\r\n    clearValue() {\r\n        this.element.checked = this.field.defaultValue === this.trueValue;\r\n        this.value = this.getValueFromElement();\r\n    }\r\n\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        if (v === undefined) {\r\n            v = this.field.defaultValue;\r\n        }\r\n        if (v !== undefined) {\r\n            //this.element.checked = v === this.trueValue;\r\n            //this.value = this.getValueFromElement();\r\n        }\r\n    }\r\n\r\n    protected getValueFromElement():any { return this.element.checked? this.trueValue:this.falseValue; }\r\n\r\n    private onChange() {\r\n        this.value = this.getValueFromElement();\r\n    }\r\n\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-static\">\r\n            <label className=\"form-control\">\r\n                <label className=\"custom-control custom-checkbox mb-0\">\r\n                    <input type='checkbox'\r\n                        name={this.field.name}\r\n                        ref={this.props.ref}\r\n                        onChange={this.props.onChange}\r\n                        className=\"custom-control-input\" />\r\n                    <span className=\"custom-control-indicator\" />\r\n                    <span className=\"custom-control-description\">{this.face.label}</span>\r\n                </label>\r\n            </label>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, RadioFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class RadioControl extends Control {\r\n    protected face: RadioFace;\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-static\">\r\n            <div className=\"form-control\">\r\n            {\r\n                this.face.list.map((item, index) => {\r\n                    let t, v;\r\n                    if (typeof item !== 'object') t = v = item;\r\n                    else {\r\n                        t = item.text;\r\n                        v = item.value;\r\n                    }\r\n                    return <label key={index} className=\"custom-control custom-radio w-25\">\r\n                        <input type='radio'\r\n                            name={this.field.name} \r\n                            className=\"custom-control-input\" />\r\n                        <span className=\"custom-control-indicator\"></span>\r\n                        <span className=\"custom-control-description\">{t}</span>\r\n                    </label>;\r\n                })\r\n            }\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, SelectFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class SelectControl extends Control {\r\n    constructor (formView:FormView, field:Field, face:Face) {\r\n        super(formView, field, face);\r\n        this.ref = this.ref.bind(this);\r\n    }\r\n    protected face: SelectFace;\r\n    protected element: HTMLSelectElement;\r\n    protected getValueFromElement():any {\r\n        let {selectedIndex, selectedOptions} = this.element;\r\n        let v:any = selectedOptions[0].value;\r\n        switch (this.field.type) {\r\n            case 'number': v = Number(v); break;\r\n            case 'date': v = new Date(v); break;\r\n            case 'bool': \r\n                if (typeof v === 'string') {\r\n                    v = ((v as string).toLowerCase() === 'true');\r\n                }\r\n                break;\r\n        }\r\n        return v;\r\n    }\r\n    renderControl():JSX.Element {\r\n        let {list} = this.face;\r\n        let def = this.face.default;\r\n        let options: any[] = [];\r\n        if (def === undefined)\r\n            options.push(<option key={-1} value={undefined}>请选择</option>);\r\n        options.push(...list.map((item, index) => {\r\n            let t, v;\r\n            if (typeof item !== 'object') t = v = item;\r\n            else {\r\n                t = item.text;\r\n                v = item.value;\r\n            }\r\n            return <option key={index} value={v}>{t}</option>;\r\n        }));\r\n        return <div className=\"form-control-static\">\r\n            <select name={this.field.name} className=\"form-control\" ref={this.ref}>\r\n                {options}\r\n            </select>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport {CharsControl} from './charsControl';\r\nimport {StringField} from '../field';\r\nimport {TextAreaFace} from '../face';\r\n\r\nexport class TextAreaControl extends CharsControl {\r\n    protected field: StringField;\r\n    protected face: TextAreaFace;\r\n    private el: HTMLTextAreaElement;\r\n    protected setProps() {\r\n        let p = super.setProps();\r\n        let {maxLength} = this.field;\r\n        let {rows} = this.face;\r\n        _.assign(p, {\r\n            maxLength: maxLength,\r\n            rows: rows,\r\n        });\r\n        return p;\r\n    };\r\n    protected renderInput():JSX.Element {\r\n        return <textarea ref={t=>{this.el = t;if (t!==undefined) t.value=''}} className={this.className()} {...this.props} />;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {FormView, FormRow, FieldRow, GroupRow, LabelFormRow} from '../formView';\r\nimport {Control, ControlBase, createControl, CreateControl} from '../control';\r\n\r\nexport type CreateRow = (form:FormView, row: FormRow)=>RowContainer;\r\n\r\nexport abstract class RowContainer {\r\n    protected form:FormView;\r\n    protected row: FormRow;\r\n    protected control: ControlBase;\r\n    constructor(form:FormView, row: FormRow) {\r\n        this.form = form;\r\n        this.row = row;\r\n        if ((row as JSX.Element).type === undefined) {\r\n            let cc:CreateControl = (row as LabelFormRow).createControl;\r\n            if (cc === undefined) cc = form.createControl;\r\n            if (cc === undefined) cc = createControl;\r\n            this.control = cc(form, row);\r\n        }\r\n    }\r\n    abstract render(key:string):JSX.Element;\r\n    \r\n    isOk():boolean {\r\n        if (this.control === undefined) return true;\r\n        return this.control.isOk();\r\n    }\r\n\r\n    contains(fieldName:string):boolean {\r\n        let field = (this.row as FieldRow).field;\r\n        if (field !== undefined) return fieldName === field.name;\r\n        let group = (this.row as GroupRow).group;\r\n        if (group !== undefined) return group.find(g => g.field.name === fieldName)!==undefined;\r\n        return false;\r\n    }\r\n    get hasError():boolean {return this.control.hasError;}\r\n    get filled():boolean {return this.control.filled;}\r\n    clear() {\r\n        if (this.control !== undefined) this.control.clear();\r\n    }\r\n    clearErrors() {\r\n        if (this.control !== undefined) this.control.clearErrors();\r\n    }\r\n    readValues(values:any):any {\r\n        if (this.control !== undefined) this.control.readValues(values);\r\n    }\r\n    setError(fieldName:string, error:string) {\r\n        if (this.control !== undefined) this.control.setError(fieldName, error);\r\n    }\r\n    setInitValues(values:any) {\r\n        if (this.control !== undefined) this.control.setInitValues(values);\r\n    }\r\n}\r\n\r\nclass ElementRowContainer extends RowContainer {\r\n    render(key:string):JSX.Element {\r\n        return <div key={key} className=\"form-group\">{this.row as JSX.Element}</div>;\r\n    }\r\n    get hasError():boolean {return false;}\r\n    get filled():boolean {return false;}\r\n}\r\n\r\nclass BootStrapRowContainer extends RowContainer {\r\n    render(key:string):JSX.Element {\r\n        return <div key={key} className='form-group row'>\r\n            <label className='col-sm-2 col-form-label'>\r\n                {(this.row as LabelFormRow).label}\r\n            </label>\r\n            {this.control.render()}\r\n        </div>;\r\n\r\n        //has-success is-valid\r\n    }\r\n}\r\n\r\nexport function bootstrapCreateRow(form:FormView, row: FormRow):RowContainer {\r\n    return new BootStrapRowContainer(form, row);\r\n}\r\n\r\nexport function elementCreateRow(form:FormView, row: FormRow):RowContainer {\r\n    return new ElementRowContainer(form, row);\r\n}\r\n","//import {isDevelopment} from '../local';\r\nimport {HttpChannel} from './httpChannel';\r\n\r\nexport async function refetchApi(channel:HttpChannel, url, options, resolve, reject) {\r\n    await channel.fetch(url, options, resolve, reject);\r\n}\r\n\r\nexport abstract class ApiBase {\r\n    protected token: string;\r\n    protected path: string;\r\n    protected showWaiting: boolean;\r\n\r\n    constructor(path: string, showWaiting: boolean) {\r\n        this.path = path || '';\r\n        this.showWaiting = showWaiting;\r\n    }\r\n\r\n    protected abstract async getHttpChannel(): Promise<HttpChannel>;\r\n\r\n    public async call(url:string, method:string, body:any):Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.callFetch(url, method, body);\r\n    }\r\n\r\n    public async get(path:string, params:any=undefined): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.get(this.path + path, params);\r\n    }\r\n\r\n    public async post(path:string, params:any): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.post(this.path + path, params);\r\n    }\r\n\r\n    public async put(path:string, params:any): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.put(this.path + path, params);\r\n    }\r\n\r\n    public async delete(path:string, params:any): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.delete(this.path + path, params);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport {nav} from './nav';\r\n\r\nexport interface PageHeaderProps {\r\n    back?: 'back' | 'close' | 'none';\r\n    center: string | JSX.Element;\r\n    right?: JSX.Element;\r\n    logout?: boolean | (()=>Promise<void>);\r\n    className?: string;\r\n}\r\nexport interface PageHeaderState {\r\n    hasBack: boolean;\r\n}\r\n\r\nexport class PageHeader extends React.Component<PageHeaderProps, PageHeaderState> {\r\n    constructor(props: PageHeaderProps) {\r\n        super(props);\r\n        this.navChange = this.navChange.bind(this);\r\n        this.state = {\r\n            hasBack: false,\r\n        };\r\n    }\r\n    navChange() {\r\n        this.setState({\r\n            hasBack: nav.level > 1\r\n        })\r\n    }\r\n    componentWillMount() {\r\n        this.navChange();\r\n        //this.navChangeHandler = nav.events.add('change', this.navChange);\r\n    }\r\n    componentWillUnmount() {\r\n        //nav.events.remove('change', this.navChangeHandler);\r\n    }\r\n    async back() {\r\n        await nav.back(); // 这个才会显示confirm box，在dataForm里面，如果输入了数据的话\r\n    }\r\n    openWindow() {\r\n        window.open(document.location.href);\r\n    }\r\n    private logoutClick = () => {\r\n        nav.showLogout(this.logout);\r\n    }\r\n    private logout = async () => {\r\n        let {logout} = this.props;\r\n        if (typeof logout === 'function') {\r\n            await logout(); \r\n        }\r\n        await nav.logout(undefined);\r\n    }\r\n    render() {\r\n        let b = this.state.hasBack || self != top;\r\n        let {right, center, logout, className} = this.props;\r\n        let back:any, pop:any, debugLogout:any;\r\n        if (logout !== undefined && self === top) {\r\n            if (typeof logout === 'boolean' && logout === true\r\n                || typeof logout === 'function')\r\n            {\r\n                let {user} = nav;\r\n                if (user !== undefined) {\r\n                    let {nick, name} = user;\r\n                    debugLogout = <div className=\"d-flex align-items-center\">\r\n                        <small className=\"text-light\">{nick || name}</small>\r\n                        <a className=\"dropdown-toggle btn btn-secondary btn-sm ml-2\"\r\n                            role=\"button\"\r\n                            onClick={this.logoutClick}>\r\n                            <i className=\"fa fa-sign-out\" />\r\n                        </a>\r\n                    </div>;\r\n                }\r\n            }\r\n        }\r\n        if (b) {\r\n            switch (this.props.back) {\r\n                case 'none': back = undefined; break;\r\n                default:\r\n                case 'back': back = <nav onClick={this.back}><i className=\"fa fa-arrow-left\" /></nav>; break;\r\n                case 'close': back = <nav onClick={this.back}><i className=\"fa fa-close\" /></nav>; break;\r\n            }\r\n        }\r\n        if (self != top) {\r\n            console.log(document.location.href);\r\n            pop = <header onClick={this.openWindow} />;\r\n        }\r\n        let rightView = (right || debugLogout) && <aside>{right} {debugLogout}</aside>;\r\n        return <header className={className}>\r\n            {pop}\r\n            {back}\r\n            <div>{center}</div>\r\n            {rightView}\r\n        </header>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport '../../css/va-badge.css';\r\n\r\nexport interface BadgeProps {\r\n    className?: string;\r\n    badge?: string|number;\r\n    size?: 'xs' | 'sm' | 'lg';\r\n    color?: 'secondary'|'success'|'danger'|'primary'|'info'|'warning';\r\n    badgeAlign?: 'left'|'center'|'right';\r\n    badgeVertical?: 'top'|'middle'|'bottom';\r\n}\r\n\r\n@observer\r\nexport class Badge extends React.Component<BadgeProps> {\r\n    render() {\r\n        let {className, badge, size, color, badgeAlign, badgeVertical, children} = this.props;\r\n        let cn = classNames(\r\n            className,\r\n            'va-badge',\r\n            size && 'va-badge-'+size,\r\n            'va-badge-' + (color||'secondary'),\r\n            badgeAlign && 'va-badg-'+badgeAlign,\r\n            badgeVertical && 'va-badg-'+badgeVertical,\r\n        );\r\n        let b;\r\n        if (badge) b = <b>{badge}</b>;\r\n        return <div className={cn}>\r\n            {children}\r\n            {b}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport '../../css/va-lmr.css';\r\n\r\nexport interface LMRProps {\r\n    className?: string | string[];\r\n    left?: string|JSX.Element;\r\n    right?: string|JSX.Element;\r\n    onClick?: ()=>void;\r\n}\r\n\r\n@observer\r\nexport class LMR extends React.Component<LMRProps> {\r\n    render() {\r\n        let {className, left, children, right, onClick} = this.props;\r\n        let l, r;\r\n        if (left !== undefined) l = <header>{left}</header>;\r\n        if (right !== undefined) r = <footer>{right}</footer>;\r\n        let cursor;\r\n        if (onClick !== undefined) cursor = 'cursor-pointer';\r\n        return <div className={classNames('va-lmr', className, cursor)} onClick={onClick}>\r\n            {l}\r\n            <div>{children}</div>\r\n            {r}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\n\r\nexport interface FAProps {\r\n    name: string;\r\n    className?: string;\r\n    size?: 'lg'|'2x'|'3x'|'4x'|'5x';\r\n    spin?: boolean;\r\n    fixWidth?: boolean;\r\n    border?: boolean;\r\n    pull?: 'left'|'right';\r\n    pulse?: boolean;\r\n    rotate?: 90|180|270;\r\n    flip?: 'horizontal'|'vertical';\r\n    inverse?: boolean;\r\n}\r\n\r\nexport class FA extends React.Component<FAProps> {\r\n    render() {\r\n        let {name, className, size, spin, fixWidth, border, pull, pulse, rotate, flip, inverse} = this.props;\r\n        let cn = classNames(className, 'fa',\r\n            name && ('fa-' + name),\r\n            size && 'fa-'+size,\r\n            fixWidth && 'fa-fw',\r\n            border && 'fa-border',\r\n            pull && 'fa-pull-' + pull,\r\n            spin && 'fa-spin',\r\n            pulse && 'fa-pulse',\r\n            rotate && 'fa-rotate-' + rotate,\r\n            flip && 'fa-flip-' + flip,\r\n            inverse && 'fa-inverse',\r\n        );\r\n        return <i className={cn} />\r\n    }\r\n}\r\n\r\nexport interface StackedFAProps {\r\n    className?: string;\r\n    size?: 'lg',\r\n}\r\nexport class StackedFA extends React.Component<StackedFAProps> {\r\n    render() {\r\n        let {className, size, children} = this.props;\r\n        let cn = classNames(\r\n            'fa-stack',\r\n            className,\r\n            size && 'fa-' + size);\r\n        return <span className={cn}>\r\n            {children}\r\n        </span>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\n\r\nexport const Muted = (props:any) => \r\n<small className={classNames('text-muted', props.className)} style={props.style}>\r\n    {props.children}\r\n</small>;\r\n","export * from './Badge';\r\nexport * from './LMR';\r\nexport * from './FA';\r\nexport * from './IconText';\r\nexport * from './Muted';\r\n","import React from 'react';\r\nimport { jsonStringify } from '../../tools';\r\n\r\nexport const DefaultRow = (values) => <div className=\"px-3 py-2\">{jsonStringify(values)}</div>;\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Page, List, FA } from '../../../ui';\r\nimport { Query } from '../../uqs';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { QueryUI, CQuery } from './cQuery';\r\nimport { DefaultRow } from './defaultRow';\r\n\r\nexport class VQueryMain extends VEntity<Query, QueryUI, CQuery> {\r\n    protected vForm: VForm;\r\n    private row: React.StatelessComponent;\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        let {row, queryRow} = this.ui;\r\n        this.row = queryRow || row || DefaultRow;\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSubmit = async () => {\r\n        let params = this.vForm.getValues();\r\n        if (this.entity.isPaged === true) {\r\n            await this.entity.resetPage(30, params);\r\n            await this.entity.loadPage();\r\n            this.replacePage(this.pageResult);\r\n        }\r\n        else {\r\n            let data = await this.entity.query(params);\r\n            this.replacePage(this.queryResult, data);\r\n        }\r\n    }\r\n\r\n    again = () => {\r\n        this.vForm.reset();\r\n        this.replacePage(this.view);\r\n    }\r\n\r\n    renderExtra() {\r\n        return;\r\n    }\r\n\r\n    renderRow = (item:any, index:number) => <this.row {...item} />;\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render('mx-3 my-2')}\r\n        {this.renderExtra()}\r\n    </Page>;\r\n\r\n    protected pageResult = () => {\r\n        let {name, list} = this.entity;\r\n        let rightClose = <button\r\n            className=\"btn btn-outline-success\"\r\n            onClick={this.again}>\r\n            <FA name=\"search\" /> 再查询\r\n        </button>;\r\n        return <Page header={this.label} right={rightClose}>\r\n            <List items={list} item={{render: this.renderRow}} />\r\n        </Page>;\r\n    }\r\n\r\n    protected queryResult = observer((result:any) => {\r\n        let rightClose = <button\r\n            className=\"btn btn-outline-success\"\r\n            onClick={this.again}>\r\n            <FA name=\"search\" /> 再查询\r\n        </button>;\r\n        return <Page header={this.label} right={rightClose}>\r\n            <pre>{JSON.stringify(result, undefined, '\\t')}</pre>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport { Page, FA, SearchBox, List } from '../../../ui';\r\nimport { PageItems } from '../../../pageItems';\r\nimport { Query } from '../../uqs';\r\nimport { VEntity } from '../CVEntity';\r\nimport { QueryUI, CQuerySelect } from './cQuery';\r\nimport { DefaultRow } from './defaultRow';\r\n\r\nexport class VQuerySelect extends VEntity<Query, QueryUI, CQuerySelect> {\r\n    private row: React.StatelessComponent;\r\n\r\n    PageItems:QueryPageItems;\r\n    ownerId: number;\r\n\r\n    async open(param?:any) {\r\n        let {row, selectRow} = this.ui;\r\n        this.row = selectRow || row || DefaultRow;\r\n        //this.entity = this.controller.entity;\r\n        this.PageItems = new QueryPageItems(this.entity);\r\n        await this.onSearch(param);\r\n        this.openPage(this.view);\r\n    }\r\n    onSearch = async (key:string) => {\r\n        await this.PageItems.first(key);\r\n    }\r\n\r\n    renderRow = (item:any, index:number) => <this.row {...item} />;\r\n\r\n    private callOnSelected(item:any) {\r\n       this.closePage();\r\n       this.returnCall(item);\r\n    }\r\n    clickRow = (item:any) => {\r\n        this.callOnSelected(item);\r\n    }\r\n\r\n    view = () => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\r\n        return <Page header={header}>\r\n            <List\r\n                items={this.PageItems.items}\r\n                item={{render: this.renderRow, onClick: this.clickRow}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    };\r\n}\r\n\r\nexport class QueryPageItems extends PageItems<any> {\r\n    private query: Query;\r\n    constructor(query: Query) {\r\n        super();\r\n        this.query = query;\r\n    }\r\n    protected async load():Promise<any[]> {\r\n        await  this.query.loadSchema();\r\n        let ret:any[];\r\n        if (this.query.isPaged === true)\r\n            ret = await this.query.page(this.param, this.pageStart, this.pageSize);\r\n        else {\r\n            let data = await this.query.query(this.param);\r\n            //let data = await this.query.unpackReturns(res);\r\n            ret = data[this.query.returns[0].name];\r\n        }\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:any) {\r\n        if (item === undefined) this.pageStart = 0;\r\n    }\r\n}\r\n","import { StatelessComponent } from 'react';\r\nimport { CEntity, EntityUI } from '../CVEntity';\r\nimport { Query } from '../../uqs';\r\nimport { VQueryMain } from './vQueryMain';\r\nimport { VQuerySelect } from './vQuerySelect';\r\n\r\nexport interface QueryUI extends EntityUI {\r\n    CQuery?: typeof CQuery;\r\n    CQuerySelect?: typeof CQuerySelect;\r\n    main?: typeof VQueryMain;\r\n    row?: StatelessComponent;\r\n    queryRow?: StatelessComponent;\r\n    selectRow?: StatelessComponent;\r\n}\r\n\r\nexport abstract class CQueryBase extends CEntity<Query, QueryUI> {\r\n}\r\n\r\nexport class CQuery extends CQueryBase {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VQueryMain);\r\n    }\r\n\r\n    protected get VQueryMain():typeof VQueryMain {return this.ui && this.ui.main || VQueryMain}\r\n}\r\n\r\nexport class CQuerySelect extends CQueryBase {\r\n    protected async internalStart(param?:any) {\r\n        await this.openVPage(this.VQuerySelect, param);\r\n    }\r\n\r\n    protected get VQuerySelect():typeof VQuerySelect {return VQuerySelect}\r\n}\r\n","export * from './cQuery';\r\nexport * from './vQueryMain';\r\nexport * from './vQuerySelect';","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\r\nimport { ResUploader } from '../resUploader';\r\nimport { Image } from '../image';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { ItemEdit } from './itemEdit';\r\n\r\nexport class ImageItemEdit extends ItemEdit {\r\n    protected uiItem: UiTextItem;\r\n    private resUploader: ResUploader;\r\n    @observable private resId: string;\r\n    @observable private overSize: boolean = false;\r\n\r\n    protected async internalStart():Promise<any> {\r\n        this.resId = this.value;        \r\n        return new Promise<any>((resolve, reject) => {\r\n            nav.push(React.createElement(this.page, {resolve:resolve, reject:reject}), ()=>reject());\r\n        });\r\n    }\r\n\r\n    private upload = async () => {\r\n        if (!this.resUploader) return;\r\n        let ret = await this.resUploader.upload();\r\n        if (ret === null) {\r\n            this.overSize = true;\r\n            setTimeout(() => this.overSize = false, 3000);\r\n            return;\r\n        }\r\n        this.resId = ret;\r\n        this.isChanged = (this.resId != this.value);\r\n    }\r\n\r\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\r\n        let {resolve} = props;\r\n        let right = <button\r\n            className=\"btn btn-sm btn-success\"\r\n            disabled={!this.isChanged}\r\n            onClick={()=>resolve(this.resId)}>保存</button>;\r\n        let overSize:any;\r\n        if (this.overSize === true) {\r\n            overSize = <div className=\"text-danger\">\r\n                <i className=\"fa fa-times-circle\" /> 图片文件大小超过2M，无法上传\r\n            </div>;\r\n        }\r\n        return <Page header={'更改' + this.label} right={right}>\r\n            <div className=\"my-3 px-3 py-3 bg-white\">\r\n                <div>\r\n                    <div>上传图片：</div>\r\n                    <div className=\"my-3\">\r\n                        <ResUploader ref={v=>this.resUploader=v} multiple={false} maxSize={2048} />\r\n                    </div>\r\n                    <div>\r\n                        <button className=\"btn btn-primary\" onClick={this.upload}>上传</button>\r\n                    </div>\r\n                </div>\r\n                {overSize}\r\n                <div className=\"small muted my-4\">支持JPG、GIF、PNG格式图片，不超过2M。</div>\r\n                <div className=\"d-flex\">\r\n                    <div className=\"w-12c h-12c mr-4\"\r\n                        style={{border: '1px dotted gray', padding: '8px'}}>\r\n                        <Image className=\"w-100 h-100\" src={this.resId} />\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"small\">图片预览</div>\r\n                        <Image className=\"w-4c h-4c mt-3\" src={this.resId} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    })\r\n}\r\n","import {CenterApiBase} from '../net';\r\nimport {User, decodeUserToken} from '../user';\r\n//import { nav } from '../ui';\r\n\r\nexport interface RegisterParameter {\r\n    nick:string, \r\n    user:string, \r\n    pwd:string,\r\n    country:number, \r\n    mobile:number, \r\n    mobileCountry:number,\r\n    email:string,\r\n    verify:string,\r\n};\r\n\r\nexport class UserApi extends CenterApiBase {\r\n    async login(params: {user: string, pwd: string, guest: number}): Promise<any> {\r\n        //(params as any).device = nav.local.device.get();\r\n        let ret = await this.get('login', params);\r\n        switch (typeof ret) {\r\n            default: return;\r\n            case 'string': return decodeUserToken(ret);\r\n            case 'object':\r\n                let token = ret.token;\r\n                let user = decodeUserToken(token);\r\n                let {nick, icon} = ret;\r\n                if (nick) user.nick = nick;\r\n                if (icon) user.icon = icon;\r\n                return user;\r\n        }\r\n        // !== undefined) return decodeToken(token);\r\n    }\r\n    async register(params: RegisterParameter): Promise<any>\r\n    {\r\n        return await this.post('register', params);\r\n    }\r\n\r\n    async setVerify(account:string, type:'mobile'|'email') {\r\n        return await this.post('set-verify', {account:account, type:type});\r\n    }\r\n\r\n    async checkVerify(account:string, verify:string) {\r\n        return await this.post('check-verify', {account:account, verify:verify});\r\n    }\r\n\r\n    async isExists(account:string) {\r\n        return await this.get('is-exists', {account:account});\r\n    }\r\n\r\n    async resetPassword(account:string, password:string, verify:string, type:'mobile'|'email') {\r\n        return await this.post('reset-password', {account:account, password, verify, type});\r\n    }\r\n    \r\n    async userSetProp(prop:string, value:any) {\r\n        await this.post('tie/user-set-prop', {prop:prop, value:value});\r\n    }\r\n}\r\n\r\nexport const userApi = new UserApi('tv/user/', undefined);\r\n","import * as React from 'react';\r\n\r\nexport function Loading() {\r\n    return <div className=\"d-flex h-100 align-items-center justify-content-center\">\r\n        <i className=\"fa fa-spinner fa-spin fa-2x fa-fw text-info\" />\r\n    </div>;\r\n}\r\n\r\n/*\r\nexport function Loading() {\r\n    return <div style={{height:'100%'}} className=\"d-flex flex-fill align-items-center justify-content-center\">\r\n    <div className=\"d-flex align-items-center justify-content-center slide text-info\" style={{width:'5em', height:'2em'}}>\r\n        加载中...\r\n    </div>\r\n    </div>\r\n}\r\n*/\r\n\r\n\r\n","import * as React from 'react';\r\nimport { nav } from './nav';\r\n\r\nexport interface ResUploaderProps {\r\n    className?: string;\r\n    multiple?: boolean;\r\n    maxSize?: number;\r\n    onFilesChange?: (evt: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nexport class ResUploader extends React.Component<ResUploaderProps> {\r\n    private fileInput: HTMLInputElement;\r\n\r\n    upload = async ():Promise<string> => {\r\n        let {maxSize} = this.props;\r\n        if (maxSize === undefined || maxSize <= 0) \r\n            maxSize = 100000000000;\r\n        else\r\n            maxSize = maxSize * 1024;\r\n        let resUrl = nav.resUrl + 'upload';\r\n        var files:FileList = this.fileInput.files;\r\n        var data = new FormData();\r\n        let len = files.length;\r\n        for (let i=0; i<len; i++) {\r\n            let file = files[i];\r\n            if (file.size > maxSize) return null;\r\n            data.append('files[]', file, file.name);\r\n        }\r\n  \r\n        try {\r\n            let abortController = new AbortController();\r\n            let res = await fetch(resUrl, {\r\n                method: \"POST\",\r\n                body: data,\r\n                signal: abortController.signal,\r\n            });\r\n            let json = await res.json();\r\n            return ':' + json.res.id;\r\n        }\r\n        catch (err) {\r\n            console.error('%s %s', resUrl, err);\r\n        }\r\n    }\r\n    render() {\r\n        let {className, multiple, onFilesChange} = this.props;\r\n        return <input \r\n            className={className}\r\n            ref={t=>this.fileInput=t} \r\n            onChange={onFilesChange}\r\n            type='file' name='file' multiple={multiple} />\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { List, LMR, FA, Page, nav, Controller, TypeVPage, VPage, resLang, NavSettings} from '../../ui';\r\nimport { loadAppUqs, appInFrame, getExHash, isDevelopment, UqAppData, UqData} from '../../net';\r\nimport { CUq, UqUI } from './cUq';\r\nimport { centerApi } from '../centerApi';\r\nimport { UqApp } from '../uqs';\r\n\r\nexport interface RoleAppUI {\r\n    CApp?: typeof CApp;\r\n    CUq?: typeof CUq;\r\n    main?: TypeVPage<CApp>;\r\n    uqs: {[uq:string]: UqUI | (()=>Promise<UqUI>)};\r\n    res?: any;\r\n}\r\n\r\nexport interface AppUI extends RoleAppUI, NavSettings {\r\n    appName: string; // 格式: owner/appName\r\n    roles?: {[role:string]: RoleAppUI | (()=>Promise<RoleAppUI>)};\r\n}\r\n\r\nexport class CApp extends Controller {\r\n    //private appOwner:string;\r\n    //private appName:string;\r\n    name: string;\r\n    uqApp: UqApp;\r\n    private cImportUqs: {[uq:string]: CUq} = {};\r\n    protected ui:AppUI;\r\n    appUnits:any[];\r\n\r\n    constructor(ui:AppUI) {\r\n        super(resLang(ui && ui.res));\r\n        nav.setSettings(ui);\r\n        this.name = ui.appName;\r\n        if (this.name === undefined) {\r\n            throw 'appName like \"owner/app\" must be defined in UI';\r\n        }\r\n        if (ui.uqs === undefined) ui.uqs = {};\r\n        this.ui = ui;\r\n        this.caption = this.res.caption || 'Tonva';\r\n    }\r\n    \r\n    readonly caption: string; // = 'View Model 版的 Uq App';\r\n    cUqCollection: {[uq:string]: CUq} = {};\r\n\r\n    /*\r\n    async startDebug() {\r\n        let appName = this.appOwner + '/' + this.appName;\r\n        let cApp = new CApp({appName: appName, uqs:{}} );\r\n        let keepNavBackButton = true;\r\n        await cApp.start(keepNavBackButton);    \r\n    }\r\n    */\r\n\r\n    /*\r\n    protected async loadUqs(uqAppData:UqAppData): Promise<string[]> {\r\n        let retErrors:string[] = [];\r\n        let unit = appInFrame.unit;\r\n        //let app = await loadAppUqs(this.appOwner, this.appName);\r\n        let {id, uqs} = uqAppData;\r\n        this.id = id;\r\n\r\n        let promises: PromiseLike<string>[] = [];\r\n        let promiseChecks: PromiseLike<boolean>[] = [];\r\n        let roleAppUI = await this.buildRoleAppUI();\r\n        this.ui = roleAppUI;\r\n        for (let appUq of uqs) {\r\n            let {id:uqId, uqOwner, uqName, access} = appUq;\r\n            let uq = uqOwner + '/' + uqName;\r\n            let uqUI = roleAppUI && roleAppUI.uqs && roleAppUI.uqs[uq];\r\n            let cUq = this.newCUq(uq, uqId, access, uqUI || {});\r\n            this.cUqCollection[uq] = cUq;\r\n            promises.push(cUq.loadSchema());\r\n            promiseChecks.push(cUq.uq.uqApi.checkAccess());\r\n        }\r\n        let results = await Promise.all(promises);\r\n        Promise.all(promiseChecks).then((checks) => {\r\n            for (let c of checks) {\r\n                if (c === false) {\r\n                    //debugger;\r\n                    //nav.start();\r\n                    //return;\r\n                }\r\n            }\r\n        });\r\n        for (let result of results)\r\n        {\r\n            let retError = result; // await cUq.loadSchema();\r\n            if (retError !== undefined) {\r\n                retErrors.push(retError);\r\n                continue;\r\n            }\r\n        }\r\n        if (retErrors.length === 0) return;\r\n        return retErrors;\r\n    }\r\n    */\r\n    /*\r\n    private async buildRoleAppUI():Promise<AppUI> {\r\n        if (!this.ui) return undefined;\r\n        let {hashParam} = nav;\r\n        if (!hashParam) return this.ui;\r\n        let {roles} = this.ui;\r\n        let roleAppUI = roles && roles[hashParam];\r\n        if (!roleAppUI) return this.ui;\r\n        let ret:AppUI = {} as any;\r\n        for (let i in this.ui) {\r\n            if (i === 'roles') continue;\r\n            ret[i] = this.ui[i];\r\n        }\r\n        if (typeof roleAppUI === 'function') roleAppUI = await roleAppUI();\r\n        _.merge(ret, roleAppUI);\r\n        return ret;\r\n    }\r\n    */\r\n\r\n    getImportUq(uqOwner:string, uqName:string):CUq {\r\n        let uq = uqOwner + '/' + uqName;\r\n        let cUq = this.cImportUqs[uq];\r\n        if (cUq !== undefined) return cUq;\r\n        let ui = this.ui && this.ui.uqs && this.ui.uqs[uq];\r\n        let uqId = -1; // unknown\r\n        this.cImportUqs[uq] = cUq = this.getCUq(uq);\r\n        //this.newCUq(uq, uqId, undefined, ui || {});\r\n        /*\r\n        let retError = await cUq.loadSchema();\r\n        if (retError !== undefined) {\r\n            console.error(retError);\r\n            debugger;\r\n            return;\r\n        }\r\n        */\r\n        return cUq;\r\n    }\r\n\r\n    protected newCUq(uqData: UqData, uqUI: UqUI) {\r\n        let cUq = new (this.ui.CUq || CUq)(this, uqData, uqUI);\r\n        Object.setPrototypeOf(cUq.x, this.x);\r\n        return cUq;\r\n    }\r\n\r\n    get cUqArr():CUq[] {\r\n        let ret:CUq[] = [];\r\n        for (let i in this.cUqCollection) {\r\n            ret.push(this.cUqCollection[i]);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    getCUq(uq:string):CUq {\r\n        return this.cUqCollection[uq];\r\n    }\r\n\r\n    protected get VAppMain():TypeVPage<CApp> {return (this.ui&&this.ui.main) || VAppMain}\r\n    protected async beforeStart():Promise<boolean> {\r\n        try {\r\n            let retErrors = await this.load();\r\n            //let app = await loadAppUqs(this.appOwner, this.appName);\r\n            // if (isDevelopment === true) {\r\n            // 这段代码原本打算只是在程序员调试方式下使用，实际上，也可以开放给普通用户，production方式下\r\n            let {predefinedUnit} = appInFrame;\r\n            //let {id} = app;\r\n            //this.id = id;\r\n            let {user} = nav;\r\n            if (user !== undefined && user.id > 0) {\r\n                this.appUnits = await centerApi.userAppUnits(this.uqApp.id);\r\n                switch (this.appUnits.length) {\r\n                    case 0:\r\n                        this.showUnsupport(predefinedUnit);\r\n                        return false;\r\n                    case 1:\r\n                        let appUnit = this.appUnits[0].id;\r\n                        if (appUnit === undefined || appUnit < 0 || \r\n                            predefinedUnit !== undefined && appUnit != predefinedUnit)\r\n                        {\r\n                            this.showUnsupport(predefinedUnit);\r\n                            return false;\r\n                        }\r\n                        appInFrame.unit = appUnit;\r\n                        break;\r\n                    default:\r\n                        if (predefinedUnit>0 && this.appUnits.find(v => v.id===predefinedUnit) !== undefined) {\r\n                            appInFrame.unit = predefinedUnit;\r\n                            break;\r\n                        }\r\n                        nav.push(<this.selectUnitPage />)\r\n                        return false;\r\n                }\r\n            }\r\n            //}\r\n\r\n            //let retErrors = await this.loadUqs(app);\r\n            if (retErrors !== undefined) {\r\n                this.openPage(<Page header=\"ERROR\">\r\n                    <div className=\"m-3\">\r\n                        <div>Load Uqs 发生错误：</div>\r\n                        {retErrors.map((r, i) => <div key={i}>{r}</div>)}\r\n                    </div>\r\n                </Page>);\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        catch (err) {\r\n            nav.push(<Page header=\"App start error!\">\r\n                <pre>\r\n                    {typeof err === 'string'? err : err.message}\r\n                </pre>\r\n            </Page>);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    private async load(): Promise<string[]> {\r\n        this.uqApp = new UqApp(this.name);\r\n        let {appOwner, appName} = this.uqApp;\r\n        let uqAppData = await loadAppUqs(appOwner, appName);\r\n        let {id, uqs} = uqAppData;\r\n        this.uqApp.id = id;\r\n\r\n        let retErrors:string[] = [];\r\n\r\n        let promiseInits: PromiseLike<void>[] = [];\r\n        let promises: PromiseLike<string>[] = [];\r\n        let promiseChecks: PromiseLike<boolean>[] = [];\r\n        for (let uqData of uqs) {\r\n            let {id, uqOwner, uqName, access} = uqData;\r\n            let uqFullName = uqOwner + '/' + uqName;\r\n            let uqUI = this.ui.uqs[uqFullName] as UqUI || {};\r\n            let cUq = this.newCUq(uqData, uqUI);\r\n            this.cUqCollection[uqFullName] = cUq;\r\n            this.uqApp.addUq(cUq.uq);\r\n            promiseInits.push(cUq.init());\r\n        }\r\n        await Promise.all(promiseInits);\r\n\r\n        for (let i in this.cUqCollection) {\r\n            let cUq = this.cUqCollection[i];\r\n            promises.push(cUq.loadEntities());\r\n            promiseChecks.push(cUq.checkEntities());\r\n        }\r\n        let results = await Promise.all(promises);\r\n        Promise.all(promiseChecks).then((checks) => {\r\n            for (let c of checks) {\r\n                if (c === false) {\r\n                    //debugger;\r\n                    //nav.start();\r\n                    //return;\r\n                }\r\n            }\r\n        });\r\n        for (let result of results)\r\n        {\r\n            let retError = result; // await cUq.loadSchema();\r\n            if (retError !== undefined) {\r\n                retErrors.push(retError);\r\n                continue;\r\n            }\r\n        }\r\n        if (retErrors.length === 0) {\r\n            this.uqApp.setTuidImportsLocal();\r\n            return;\r\n        }\r\n        return retErrors;\r\n    }\r\n\r\n    protected async internalStart(param:any) {\r\n        if (param !== true) {\r\n            this.clearPrevPages();\r\n        }\r\n        await this.showMainPage();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        return this.renderView(this.VAppMain);\r\n    }\r\n\r\n    // 如果是独立app，删去显示app之前的页面。\r\n    // 如果非独立app，则不删\r\n    protected clearPrevPages() {\r\n        nav.clear();\r\n    }\r\n\r\n    private showUnsupport(predefinedUnit: number) {\r\n        this.clearPrevPages();\r\n        let {user} = nav;\r\n        let userName:string = user? user.name : '[未登录]';\r\n        let {appOwner, appName} = this.uqApp;\r\n        this.openPage(<Page header=\"APP无法运行\" logout={true}>\r\n            <div className=\"m-3 text-danger container\">\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-sm-3 font-weight-bold\">登录用户</div>\r\n                    <div className=\"col-sm text-body\">{userName}</div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-sm-3 font-weight-bold\">App</div>\r\n                    <div className=\"col-sm text-body\">{`${appOwner}/${appName}`}</div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-sm-3 font-weight-bold\">预设小号</div>\r\n                    <div className=\"col-sm text-body\">{predefinedUnit || <small className=\"\">[无预设小号]</small>}</div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-sm-3 font-weight-bold\">\r\n                        可能原因<FA name=\"exclamation-triangle\" />\r\n                    </div>\r\n                    <div className=\"col-sm text-body\">\r\n                        <ul className=\"p-0\">\r\n                            <li>没有小号运行 {this.ui.appName}</li>\r\n                            <li>用户 <b>{userName}</b> 没有加入任何一个运行{this.ui.appName}的小号</li>\r\n                            {\r\n                                predefinedUnit && \r\n                                <li>预设小号 <b>{predefinedUnit}</b> 没有运行App {this.ui.appName}</li>\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-sm-3 font-weight-bold\">小号{predefinedUnit}</div>\r\n                    <div className=\"col-sm text-body\">\r\n                        预设小号定义在 public/unit.json 文件中。\r\n                        定义了这个文件的程序，只能由url直接启动。\r\n                        用户第一次访问app之后，会缓存在localStorage里。<br/>\r\n                        如果要删去缓存的预定义Unit，logout然后再login。\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Page>)\r\n    }\r\n\r\n    private async showMainPage() {\r\n        // #tv-RwPBwMef-23-sheet-api-108\r\n        let exHash = getExHash();\r\n        if (exHash !== undefined) {\r\n            let parts = exHash.split('-');\r\n            if (parts.length > 3) {\r\n                let action = parts[3];\r\n                // sheet_debug 表示centerUrl是debug方式的\r\n                if (action === 'sheet' || action === 'sheet_debug') {\r\n                    let uqId = Number(parts[4]);\r\n                    let sheetTypeId = Number(parts[5]);\r\n                    let sheetId = Number(parts[6]);\r\n                    let cUq = this.getCUqFromId(uqId);\r\n                    if (cUq === undefined) {\r\n                        alert('unknown uqId: ' + uqId);\r\n                        return;\r\n                    }\r\n                    this.clearPrevPages();\r\n                    await cUq.navSheet(sheetTypeId, sheetId);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        this.openVPage(this.VAppMain);\r\n    }\r\n\r\n    private getCUqFromId(uqId:number): CUq {\r\n        for (let i in this.cUqCollection) {\r\n            let cUq = this.cUqCollection[i];\r\n            if (cUq.uq.id === uqId) return cUq;\r\n        }\r\n        return;\r\n    }\r\n\r\n    renderRow = (item: any, index: number):JSX.Element => {\r\n        let {id, nick, name} = item;\r\n        return <LMR className=\"px-3 py-2\" right={'id: ' + id}>\r\n            <div>{nick || name}</div>\r\n        </LMR>;\r\n    }\r\n    onRowClick = async (item: any) => {\r\n        appInFrame.unit = item.id; // 25;\r\n        await this.start();\r\n    }\r\n\r\n    protected selectUnitPage = () => {\r\n        return <Page header=\"选择小号\" logout={true}>\r\n            <List items={this.appUnits} item={{render: this.renderRow, onClick: this.onRowClick}}/>\r\n        </Page>\r\n    }\r\n}\r\n\r\nclass VAppMain extends VPage<CApp> {\r\n    async open(param?:any) {\r\n        this.openPage(this.appPage);\r\n    }\r\n\r\n    render(param?:any) {\r\n        return this.appContent();\r\n    }\r\n\r\n    protected appPage = () => {\r\n        let {caption} = this.controller;\r\n        return <Page header={caption} logout={async()=>{appInFrame.unit = undefined}}>\r\n            {this.appContent()}\r\n        </Page>;\r\n    }\r\n\r\n    protected appContent = () => {\r\n        let {cUqArr} = this.controller;\r\n        let content:any;\r\n        if (cUqArr.length === 0) {\r\n            content = <div className=\"text-danger\">\r\n                <FA name=\"\" /> 此APP没有绑定任何的UQ\r\n            </div>;\r\n        }\r\n        else {\r\n            content = cUqArr.map((v,i) => <div key={i}>{v.render()}</div>);\r\n        }\r\n        return <>{content}</>;\r\n    };\r\n}\r\n","import React from 'react';\r\nimport { FA } from '../../ui';\r\n\r\nfunction icon(className:string, name:string) {\r\n    return <FA className={className} name={name} fixWidth={true} />;\r\n}\r\n\r\nexport const entityIcons:{[type:string]:JSX.Element} = {\r\n    tuid: icon('text-info', 'list-alt'),\r\n    action: icon('text-info', 'hand-o-right'),\r\n    map: icon('text-muted', 'list-ul'),\r\n    book: icon('text-muted', 'book'),\r\n    query: icon('text-warning', 'search'),\r\n    history: icon('text-info', 'hand-o-right'),\r\n    pending: icon('text-info', 'forward'),\r\n    sheet: icon('text-primary', 'wpforms'),\r\n};\r\n","import { Controller } from '../../ui';\r\nimport { CUq } from './cUq';\r\n\r\nexport abstract class ControllerUq extends Controller {\r\n    constructor(cUq: CUq, res:any) {\r\n        super(res);\r\n        this.cUq = cUq;\r\n    }\r\n    cUq: CUq;\r\n}\r\n","import {CenterApiBase} from '../net';\r\n\r\n//\r\n\r\nexport class CenterApi extends CenterApiBase {\r\n    async userAppUnits(app:number):Promise<any[]> {\r\n        return await this.get('tie/user-app-units', {app:app});\r\n    }\r\n}\r\n\r\nexport const centerApi = new CenterApi('tv/', undefined);\r\n","export * from './rule';\r\nexport * from './field';\r\nexport * from './face';\r\nexport * from './rowContainer';\r\nexport * from './formView';\r\nexport * from './TonvaForm';\r\nexport {ControlBase} from './control';\r\n","import * as React from 'react';\r\nimport {FormEvent} from 'react';\r\nimport {computed} from 'mobx';\r\nimport {uid} from 'tonva';\r\nimport {Rule} from './rule';\r\nimport {Field} from './field';\r\nimport {Face} from './face';\r\nimport {CreateControl, ButtonsControl} from './control';\r\nimport {RowContainer, CreateRow, bootstrapCreateRow, elementCreateRow} from './rowContainer';\r\n\r\nexport interface FieldView {\r\n    field: Field;\r\n    face?: Face;\r\n}\r\n\r\nexport interface LabeledRow {\r\n    label?: string;\r\n    createRow?: CreateRow;\r\n    createControl?: CreateControl;\r\n    help?: JSX.Element;\r\n}\r\n\r\nexport interface FieldRow extends LabeledRow, FieldView {\r\n}\r\n\r\nexport interface GroupRow extends LabeledRow {\r\n    group: FieldView[];\r\n}\r\n\r\nexport type LabelFormRow = FieldRow|GroupRow|LabeledRow;\r\nexport type FormRow = LabelFormRow|JSX.Element;\r\n\r\nexport interface SubmitResult {\r\n    success: boolean;\r\n    message?: string\r\n    result?: any;\r\n}\r\n\r\nexport interface FormProps {\r\n    formRows: FormRow[];\r\n    //context?: any;              // form context，比如，可以是EntitiesUI\r\n    rules?: Rule | Rule[];\r\n    onSubmit: (values:any) => Promise<SubmitResult|undefined>;\r\n    submitButton?: string|JSX.Element;\r\n    otherButton?: string|JSX.Element;\r\n    onOther?: (values:any) => void;\r\n    createRow?: CreateRow;\r\n    createControl?: CreateControl;\r\n    readOnly?: boolean;\r\n}\r\n\r\nexport class FormView {\r\n    uid:string;\r\n    private rows: RowContainer[] = [];\r\n    private buttonsRow: RowContainer;\r\n    props: FormProps;\r\n    createControl?: CreateControl;\r\n    constructor(props:FormProps) {\r\n        this.uid = uid();\r\n        this.props = props;\r\n        this.buildRows(props);\r\n        this.createControl = props.createControl;\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    @computed get hasError():boolean {\r\n        let ret = this.rows.map((v, index) => index + ': ' + v.hasError + '\\n');\r\n        console.log(ret);\r\n        return this.rows.some(row => row.hasError);\r\n    }\r\n    @computed get nothing():boolean {\r\n        let ret = this.rows.every(row => !row.filled);\r\n        return ret;\r\n    }\r\n\r\n    readValues():any {\r\n        let values = {} as any;\r\n        for (let row of this.rows) {\r\n            row.readValues(values);\r\n        }\r\n        return values;\r\n    }\r\n\r\n    clear() {\r\n        for (let row of this.rows) {\r\n            row.clear();\r\n        }\r\n    }\r\n\r\n    clearErrors() {\r\n        for (let row of this.rows) {\r\n            row.clearErrors();\r\n        }\r\n    }\r\n\r\n    setError(fieldName:string, error:string) {\r\n        for (let row of this.rows) {\r\n            row.setError(fieldName, error);\r\n        }\r\n    }\r\n\r\n    setInitValues(initValues:any) {\r\n        if (initValues === undefined) return;\r\n        for (let row of this.rows) {\r\n            row.setInitValues(initValues);\r\n        }\r\n    }\r\n\r\n    private buildRows(props:FormProps) {\r\n        let {formRows, createRow} = props;\r\n        if (formRows !== undefined) {\r\n            for (let row of formRows) {\r\n                this.rows.push(this.buildRow(row, createRow));\r\n            }\r\n            if (this.props.readOnly !== true) {\r\n                this.buttonsRow = this.buildRow({createControl:this.createButtons.bind(this)}, undefined);\r\n            }\r\n        }\r\n        else {\r\n            this.rows.push(elementCreateRow(this, <div className=\"text-warning\">TonvaForm need formRows defined</div>));\r\n        }\r\n    }\r\n\r\n    private buildRow(formRow: FormRow, formRowCreator: CreateRow):RowContainer {\r\n        let createRow:CreateRow;\r\n        let type = (formRow as JSX.Element).type;\r\n        if (type !== undefined) {\r\n            createRow = elementCreateRow;\r\n        }\r\n        else {\r\n            createRow = (formRow as (FieldRow | GroupRow | LabeledRow)).createRow;\r\n            if (createRow === undefined) {\r\n                createRow = formRowCreator;\r\n                if (createRow === undefined) createRow = bootstrapCreateRow;\r\n            }\r\n        }\r\n        let row = createRow(this, formRow);\r\n        return row;\r\n    }\r\n\r\n    private createButtons(form:FormView, row: FormRow) {\r\n        return new ButtonsControl(form);\r\n    }\r\n\r\n    private isOk():boolean {\r\n        let isOk = true;\r\n        for (let row of this.rows) {\r\n            if (!row.isOk()) isOk = false;\r\n        }\r\n        return isOk;\r\n    }\r\n\r\n    render():JSX.Element {\r\n        return <form onSubmit={this.onSubmit}>\r\n            {this.rows.map((row,index) => row.render(this.uid + index))}\r\n            {this.buttons()}\r\n        </form>;\r\n    }\r\n\r\n    buttons():JSX.Element {\r\n        if (this.buttonsRow === undefined) return;\r\n        return this.buttonsRow.render(this.uid + this.rows.length);\r\n    }\r\n    \r\n    async onSubmit(event:FormEvent<HTMLFormElement>) {\r\n        event.preventDefault();\r\n        if (!this.isOk()) return;\r\n        let values = this.readValues();\r\n        await this.props.onSubmit(values);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Page, List, Muted, LMR } from '../../../ui';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../uqs';\r\nimport { CSheet, SheetUI } from './cSheet';\r\n\r\nexport class VSheetMain extends VEntity<Sheet, SheetUI, CSheet> {\r\n    async open() {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    newClick = () => this.event('new');\r\n    schemaClick = () => this.event('schema'); \r\n    archivesClick = () => this.event('archives');\r\n    sheetStateClick = (state) => this.event('state', state);\r\n\r\n    renderState = (item:any, index:number) => {\r\n        let {state, count} = item;\r\n        if (count === 0) return null;\r\n        let badge = <span className=\"badge badge-success ml-5 align-self-end\">{count}</span>;\r\n        return <LMR className=\"px-3 py-2\" left={this.controller.getStateLabel(state)} right={badge} />;\r\n    }\r\n\r\n    protected view = observer(() => {\r\n        let list = this.controller.statesCount.filter(row=>row.count);\r\n        let right = <button className=\"btn btn-outline-primary\" onClick={this.archivesClick}>已归档</button>;\r\n        let templet:any;\r\n        if (this.isDev === true) {\r\n            templet = <button className=\"btn btn-primary mr-2\" color=\"primary\" onClick={this.schemaClick}>模板</button>;\r\n        }\r\n        return <Page header={this.label}>\r\n            <LMR\r\n                className=\"mx-3 my-2\"\r\n                right={right}>\r\n                <button className=\"btn btn-primary mr-2\" color=\"primary\" onClick={this.newClick}>新建</button>\r\n                {templet}\r\n            </LMR>\r\n            <List className=\"my-2\"\r\n                header={<Muted className=\"mx-3 my-1\">待处理{this.label}</Muted>}\r\n                none=\"[ 无 ]\"\r\n                items={list}\r\n                item={{render:this.renderState, onClick:this.sheetStateClick}} />\r\n        </Page>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from '../../../ui';\r\nimport { Sheet } from '../../uqs';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { SheetUI, CSheet } from './cSheet';\r\n\r\nexport class VSheetNew extends VEntity<Sheet, SheetUI, CSheet> {\r\n    vForm: VForm;\r\n\r\n    async open(param?:any) {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    private onSubmit = async ():Promise<void> => {\r\n        let values = this.vForm.getValues();\r\n        let valuesWithBox = this.vForm.values;\r\n        //let ret = \r\n        await this.controller.onSave(values, valuesWithBox);\r\n        /*\r\n        this.ceasePage();\r\n        //this.openPage(this.finishedPage);\r\n        await this.controller.showSaved(ret);\r\n        */\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render()}\r\n    </Page>;\r\n}\r\n","import * as React from 'react';\r\nimport {List, Muted, LMR, EasyDate, FA} from '../../../ui';\r\nimport { Sheet } from '../../uqs';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CSheet, SheetUI, SheetData } from './cSheet';\r\n\r\nconst leftFlowStyle = {width: '8rem'};\r\n\r\nexport abstract class VSheetView extends VEntity<Sheet, SheetUI, CSheet> {\r\n    protected vForm: VForm;\r\n    protected sheetData: SheetData;\r\n    //data: any;\r\n    //state: string;\r\n    //flows:any[];\r\n\r\n    flowRow = (item:any, index:number):JSX.Element => {\r\n        let {date, user, preState, state, action} = item;\r\n        if (action === undefined) action = <><FA className=\"text-primary\" name=\"pencil-square-o\" /> 制单</>;\r\n        let to;\r\n        switch (state) {\r\n            case '$': break;\r\n            case '#': to = <><FA className=\"text-success\" name=\"file-archive-o\" /></>; break;\r\n            default: to = <><FA className=\"text-muted\" name=\"arrow-right\" /> &nbsp; {state}</>; break;\r\n        }\r\n        /*\r\n        return <div className=\"row\">\r\n            <div className=\"col-sm\"></div>\r\n            <div className=\"col-sm\"><div className=\"p-2\">{to}</div></div>\r\n            <div className=\"col-sm text-right\"><div className=\"p-2\"><Muted><EasyDate date={date} /></Muted></div></div>\r\n        </div>;\r\n        */\r\n        return <LMR \r\n            left={<div className=\"pl-3 py-2\" style={leftFlowStyle}>{action}</div>}\r\n            right={<div className=\"p-2\"><Muted><EasyDate date={date} /></Muted></div>}>\r\n            <div className=\"p-2\">{to}</div>\r\n        </LMR>;\r\n    }\r\n\r\n    protected sheetView = () => {\r\n        let {brief, flows} = this.sheetData;\r\n        let removed;\r\n        if (brief.state === '-')\r\n            removed = <div className=\"mx-3 my-2\" style={{color:'red'}}>本单据作废</div>;\r\n        return <div>\r\n            {removed}\r\n            {this.vForm.render()}\r\n    \r\n            <List header={<Muted className=\"mx-3 my-1\">流程</Muted>}\r\n                items={flows}\r\n                item={{render:this.flowRow}}/>\r\n        </div>;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from '../../../ui';\r\nimport { VForm, FormMode } from '../form';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\n\r\nexport class VSheetEdit extends VSheetView { //VEntity<Sheet, SheetUI, CSheet> {\r\n    protected sheetData: SheetData;\r\n    async open(param: SheetData) {\r\n        this.sheetData = param;\r\n        this.vForm = this.createForm(this.onSubmit, param.data, FormMode.edit);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSubmit = async ():Promise<void> => {\r\n        let values = this.vForm.getValues();\r\n        await this.controller.saveSheet(values, this.vForm.values);\r\n        this.closePage();\r\n        this.returnCall(this.vForm.values);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render()}\r\n    </Page>;\r\n}\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport { FA, Page } from '../../../ui';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\n\r\nexport class VSheetAction extends VSheetView { \r\n    async open(sheetData:SheetData) {\r\n        this.sheetData = sheetData;\r\n        //let {brief, data, flows} = await this.controller.getSheetData(sheetId);\r\n        //this.brief = brief;\r\n        //this.flows = flows;\r\n        //this.data = data;\r\n        //this.state = this.brief.state;\r\n        this.vForm = this.createForm(undefined, sheetData.data);\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    actionClick = async (action:any) => {\r\n        let {id, flow, state} = this.sheetData.brief;\r\n        let res = await this.controller.action(id, flow, state, action.name);\r\n        this.ceasePage();\r\n        this.openPage(this.acted);\r\n        //alert(jsonStringify(res));\r\n        //await this.backPage();\r\n    }\r\n\r\n    deleteClick = async () => {\r\n        alert('单据作废：程序正在设计中');\r\n    }\r\n\r\n    editClick = async () => {\r\n        //alert('修改单据：程序正在设计中');\r\n        let values = await this.controller.editSheet(this.sheetData);\r\n        this.vForm.setValues(values);\r\n    }\r\n\r\n    protected page = () => {\r\n        let {brief} = this.sheetData;\r\n        let {state, no} = brief;\r\n        let stateLabel = this.controller.getStateLabel(state);\r\n        let {states} = this.entity;\r\n        let s = states.find(v => v.name === state);\r\n        let actionButtons, startButtons;\r\n        if (s === undefined) {\r\n            let text:string, cn:string;\r\n            switch (state) {\r\n                default:\r\n                    text = '不认识的单据状态\\'' + state + '\\'';\r\n                    cn = 'text-info';\r\n                    break;\r\n                case '-': \r\n                    text = '已作废';\r\n                    cn = 'text-danger';\r\n                    break;\r\n                case '#':\r\n                    text = '已归档';\r\n                    cn = 'text-success';\r\n                    break;\r\n            }\r\n            actionButtons = <div className={classNames(cn)}>[{text}]</div>;\r\n        }\r\n        else {\r\n            actionButtons = <div className=\"flex-grow-1\">{s.actions.map((v,index) => \r\n                <button\r\n                    key={index}\r\n                    className=\"btn btn-primary mr-2\"\r\n                    onClick={()=>this.actionClick(v)}\r\n                >\r\n                    {this.controller.getActionLabel(state, v.name)}\r\n                </button>)}\r\n            </div>;\r\n            if (state === '$') {\r\n                startButtons = <div>\r\n                    <button className=\"btn btn-outline-info ml-2\" onClick={this.editClick}>修改</button>\r\n                    <button className=\"btn btn-outline-danger ml-2\" onClick={this.deleteClick}>作废</button>\r\n                </div>\r\n            }\r\n        };\r\n        return <Page header={this.label + ':' + stateLabel + '-' + no}>\r\n            <div className=\"mb-2\">\r\n                <div className=\"d-flex px-3 py-2 border-bottom bg-light\">\r\n                    {actionButtons}\r\n                    {startButtons}\r\n                </div>\r\n                <this.sheetView />\r\n            </div>\r\n        </Page>;\r\n    }\r\n\r\n    private acted = () => {\r\n        let {discription} = this.sheetData.brief;\r\n        return <Page header=\"已处理\" back=\"close\">\r\n            <div className=\"p-3 d-flex flex-column align-items-center\">\r\n                <div className=\"p-3\">{discription}</div>\r\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已处理！</div>\r\n                <div className=\"p-3\">\r\n                    <button className=\"btn btn-outline-info\" onClick={()=>this.backPage()}>返回</button>\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from '../../../ui';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../uqs';\r\nimport { SheetUI, CSheet } from './cSheet';\r\n\r\nexport class VSheetSchema extends VEntity<Sheet, SheetUI, CSheet> {\r\n    async open(param?:any) {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label + \"模板\"}>\r\n        <pre className=\"mx-3 my-2\">{this.entity.schemaStringify()}</pre>\r\n    </Page>;\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { Page, List, LMR, FA, EasyDate, Muted } from '../../../ui';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../uqs';\r\nimport { SheetUI, CSheet } from './cSheet';\r\n\r\nexport class VArchives extends VEntity<Sheet, SheetUI, CSheet> {\r\n    list: any[];\r\n\r\n    async open() {\r\n        this.list = await this.entity.getArchives(undefined, 10);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    archiveClick = async (brief:any) => {\r\n        if (brief.processing===1) return;\r\n        this.event('archived', brief);\r\n    }\r\n    archiveRow = (row:any, index:number) => {\r\n        let {id, no, discription, date} = row;\r\n        let left = <>\r\n            {row.processing===1? '... ' : ''}\r\n            {row.no} &nbsp; {row.discription}\r\n        </>;\r\n        let right = <Muted><EasyDate date={date} /></Muted>;\r\n        return <LMR className=\"px-3 py-2\" left={left} right={right} />\r\n    }\r\n\r\n    protected view = () => {\r\n        return <Page header={'已归档' + this.label}>\r\n            <List items={this.list} item={{render:this.archiveRow, onClick:this.archiveClick}} />\r\n        </Page>;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { Page, nav, List, Muted, FA, LMR, EasyDate } from '../../../ui';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../uqs';\r\nimport { CSheet, SheetUI } from './cSheet';\r\n\r\nexport class VSheetList extends VEntity<Sheet, SheetUI, CSheet> {\r\n    protected row: (values) => JSX.Element;\r\n    stateName: string;\r\n    stateLabel: string;\r\n\r\n    async open(item:any) {\r\n        this.row = this.ui.listRow || this.rowContent;\r\n        this.stateName = item.state;\r\n        this.stateLabel = this.controller.getStateLabel(this.stateName);\r\n        //await this.controller.getStateSheets(this.stateName, 0, 10);\r\n        await this.controller.pageStateItems.first(this.stateName);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    rowClick = async (brief:any) => {\r\n        if (brief.processing===1) {\r\n            this.event('processing', brief.id);\r\n            return;\r\n        }\r\n        this.event('action', brief.id);\r\n    }\r\n\r\n    private onScrollBottom = () => {\r\n        console.log('onScrollBottom');\r\n        this.controller.pageStateItems.more();\r\n    }\r\n\r\n    protected rowContent = (row:any):JSX.Element => {\r\n        let {id, no, discription, date, processing} = row;\r\n        let left = <>            \r\n            {no} &nbsp; <Muted>{discription}</Muted> {processing===1? '...' : ''}\r\n        </>;\r\n        let right = <Muted><EasyDate date={date} /></Muted>;\r\n        return <LMR className=\"px-3 py-2\" left={left} right={right} />;\r\n    }\r\n\r\n    private renderRow = (row:any, index:number) => <this.row {...row} />\r\n\r\n    protected view = () => {\r\n        //let sheets = this.controller.stateSheets;\r\n        let {pageStateItems} = this.controller;\r\n        return <Page header={this.label + ' - ' + this.stateLabel} onScrollBottom={this.onScrollBottom}>\r\n            <List items={pageStateItems} item={{render:this.renderRow, onClick:this.rowClick}} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from '../../../ui';\r\nimport { VSheetView } from './vSheetView';\r\nimport { CSheet, SheetUI, SheetData } from './cSheet';\r\n\r\nexport interface SheetStateFlows {\r\n    flows: any;\r\n    data: any;\r\n}\r\nexport class VArchived extends VSheetView {\r\n    //protected controller: CSheet;\r\n    //brief: any;\r\n\r\n    async open(sheetData:SheetData) {\r\n        this.sheetData = sheetData;\r\n        /*\r\n        let {brief, data, flows} = await this.controller.getArchived(inBrief.id);\r\n        this.brief = brief;\r\n        this.data = data;\r\n        this.flows = flows;\r\n        */\r\n        this.vForm = this.createForm(undefined, this.sheetData.data);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => {\r\n        let {brief} = this.sheetData;\r\n        return <Page header={this.label + ':' + '-' + brief.no}>\r\n            <this.sheetView />\r\n        </Page>;\r\n    };\r\n}\r\n","import { Sheet } from '../../uqs';\r\nimport { SheetUI, CSheet } from './cSheet';\r\nimport { VEntity } from '../CVEntity';\r\n\r\nexport abstract class VSheet extends VEntity<Sheet, SheetUI, CSheet> {\r\n}\r\n","import * as React from 'react';\r\nimport { Page, FA } from '../../../ui';\r\nimport { VSheet } from './vSheet';\r\n\r\nexport class VSheetSaved extends VSheet {\r\n    private brief: any;\r\n    async open(brief?:any) {\r\n        this.brief = brief;\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    private restart = async () => {\r\n        this.ceasePage();\r\n        await this.event('new');\r\n    }\r\n\r\n    actionClick = async (action:any) => {\r\n        this.ceasePage();\r\n        let {id, flow, state} = this.brief;\r\n        let res = await this.controller.action(id, flow, state, action.name);\r\n        this.openPage(this.acted);\r\n    }\r\n\r\n    private buttons = <>\r\n        <button className=\"btn btn-outline-primary mr-3\" onClick={this.restart}>继续开单</button>\r\n        <button className=\"btn btn-outline-info\" onClick={()=>this.backPage()}>返回</button>\r\n    </>;\r\n\r\n    private view = () => {\r\n        let {states} = this.entity;\r\n        const state = '$';\r\n        let s = states.find(v => v.name === state);\r\n        let actionButtons = <>{s.actions.map((v,index) => \r\n            <button\r\n                key={index}\r\n                className=\"btn btn-primary mr-3\"\r\n                onClick={()=>this.actionClick(v)}\r\n            >\r\n                {this.controller.getActionLabel(state, v.name)}\r\n            </button>)}\r\n        </>;\r\n        return <Page header=\"已保存\" back=\"close\">\r\n            <div className=\"p-3 d-flex flex-column align-items-center\">\r\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已保存！系统尚未处理</div>\r\n                <div className=\"p-3\">\r\n                    {actionButtons}\r\n                    {this.buttons}\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    }\r\n\r\n    private acted = () => {\r\n        return <Page>\r\n            <div className=\"p-3 d-flex flex-column align-items-center\">\r\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已处理！</div>\r\n                <div className=\"p-3\">\r\n                    {this.buttons}\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { nav, Page } from '../../../ui';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\n\r\nexport class VSheetProcessing extends VSheetView { \r\n    async open(sheetData:SheetData) {\r\n        this.sheetData = sheetData;\r\n        //let {brief, data, flows} = await this.controller.getSheetData(sheetId);\r\n        //this.brief = brief;\r\n        //this.flows = flows;\r\n        //this.data = data;\r\n        //this.state = this.brief.state;\r\n        this.vForm = this.createForm(undefined, sheetData.data);\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    protected page = () => {\r\n        let {brief} = this.sheetData;\r\n        let {state, no} = brief;\r\n        let stateLabel = this.controller.getStateLabel(state);\r\n        return <Page header={this.label + ':' + stateLabel + '-' + no}>\r\n            <div className=\"mb-2\">\r\n                <div className=\"d-flex px-3 py-2 border-bottom bg-light\">\r\n                    正在处理中...\r\n                </div>\r\n                <this.sheetView />\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n","import { IObservableArray, observable } from 'mobx';\r\nimport { postWsToTop } from '../../../net';\r\nimport { TypeVPage, VPage } from '../../../ui';\r\nimport { PageItems } from '../../../pageItems'\r\nimport { Sheet, StateCount } from '../../uqs';\r\nimport { CEntity, EntityUI, VEntity } from '../CVEntity';\r\nimport { VSheetMain } from './vMain';\r\nimport { VSheetNew } from './vNew';\r\nimport { VSheetEdit } from './vEdit';\r\nimport { VSheetAction } from './vSheetAction';\r\nimport { VSheetSchema } from './vSchema';\r\nimport { VArchives } from './vArchives';\r\nimport { VSheetList } from './vList';\r\nimport { VArchived } from './vArchived';\r\nimport { VSheetSaved } from './vSaved';\r\nimport { VSheetProcessing } from './vSheetProcessing';\r\n\r\nexport interface SheetActionUI {\r\n    label: string;\r\n}\r\n\r\nexport interface StateUI {\r\n    label: string;\r\n    actions: {[name:string]: SheetActionUI}\r\n}\r\n\r\nexport interface SheetUI extends EntityUI {\r\n    CSheet?: typeof CSheet;\r\n    states?: {[name:string]: StateUI};\r\n    main?: TypeVPage<CSheet>;\r\n    sheetNew?: TypeVPage<CSheet>;\r\n    sheetSaved?: TypeVPage<CSheet>;\r\n    sheetEdit?: TypeVPage<CSheet>;\r\n    sheetAction?: TypeVPage<CSheet>;\r\n    listRow?: (row:any) => JSX.Element;\r\n    sheetTitle?: (sheetValues:any, x:any) => string;      // 返回单据的描述\r\n}\r\n\r\nexport interface SheetData {\r\n    brief: any;\r\n    data: any;\r\n    flows: any[];\r\n}\r\n\r\nexport class CSheet extends CEntity<Sheet, SheetUI> {\r\n    statesCount:IObservableArray<StateCount> = observable.array<StateCount>([], {deep:true});\r\n    curState:string;\r\n    pageStateItems: PageItems<any>;\r\n\r\n    protected async internalStart() {\r\n        await this.loadStateSheetCount();\r\n        this.pageStateItems = this.entity.createPageStateItems();\r\n        await this.openVPage(this.VSheetMain);\r\n    }\r\n\r\n    protected async onMessage(msg: any):Promise<void> {\r\n        let {type, body, from, to, push} = msg;\r\n        if (type === 'sheet') this.onSheet(from, to, body);\r\n    }\r\n    private onSheet(from:number, to:number[], sheetData:any) {\r\n        let me = this.user.id;\r\n        let {id, preState, state} = sheetData;\r\n        console.log({$:'onMessage sheet', from:from, to:to.join(','), id:id, preState:preState, state:state, me:me, sheetData:sheetData})\r\n        if (from === me) {\r\n            this.sheetActPreState(id, preState);\r\n        }\r\n        if (to.find(v=>v===me) !== undefined) {\r\n            this.sheetActState(id, state, sheetData);\r\n        }\r\n    }\r\n    private sheetActPreState(id:number, preState:string) {\r\n        this.changeStateCount(preState, -1);\r\n        if (this.curState === undefined || this.curState !== preState) return;\r\n        /*\r\n        let index = this.stateSheets.findIndex(v => v.id === id);\r\n        if (index>=0) {\r\n            this.stateSheets.splice(index, 1);\r\n        }*/\r\n        let index = this.pageStateItems.items.findIndex(v => v.id === id);\r\n        if (index>=0) {\r\n            this.pageStateItems.items.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    private sheetActState(id:number, state:string, msg:any) {\r\n        this.changeStateCount(state, 1);\r\n        if (this.curState === undefined || this.curState !== state) return;\r\n        /*\r\n        if (this.stateSheets.findIndex(v => v.id === id) < 0) {\r\n            this.stateSheets.push(msg);\r\n        }\r\n        */\r\n        if (this.pageStateItems.items.findIndex(v => v.id === id) < 0) {\r\n            this.pageStateItems.items.push(msg);\r\n        }\r\n    }\r\n\r\n    private changeStateCount(state:string, delta:number) {\r\n        if (state === undefined) return;\r\n        let index = this.statesCount.findIndex(v => v.state === state);\r\n        console.log({$:'changeState', state: state, delta: delta, index: index});\r\n        if (index < 0) return;\r\n        let stateCount = this.statesCount[index];\r\n        stateCount.count += delta;\r\n        if (stateCount.count < 0) stateCount.count = 0;\r\n    }\r\n\r\n    protected get VSheetMain():TypeVPage<CSheet> {return (this.ui&&this.ui.main) || VSheetMain}\r\n    protected get VSheetNew(): TypeVPage<CSheet> {return this.ui.sheetNew || VSheetNew}\r\n    protected get VSheetSaved(): TypeVPage<CSheet> {return this.ui.sheetSaved || VSheetSaved}\r\n    protected get VSheetEdit(): TypeVPage<CSheet> {return this.ui.sheetEdit || VSheetEdit}\r\n    protected get VSheetSchema(): TypeVPage<CSheet> {return VSheetSchema}\r\n    protected get VArchives(): TypeVPage<CSheet> {return VArchives}\r\n    protected get VArchived(): TypeVPage<CSheet> {return VArchived}\r\n    protected get VSheetList(): TypeVPage<CSheet> {return VSheetList}\r\n    protected get VSheetAction(): TypeVPage<CSheet> {return this.ui.sheetAction || VSheetAction}\r\n    protected get VSheetProcessing(): TypeVPage<CSheet> {return VSheetProcessing}\r\n    protected async onEvent(type:string, value:any) {\r\n        let c: TypeVPage<CSheet>;\r\n        switch (type) {\r\n            default: return;\r\n            case 'new': c = this.VSheetNew; break;\r\n            case 'schema': c = this.VSheetSchema; break;\r\n            case 'archives': c = this.VArchives; break;\r\n            case 'state':\r\n                this.curState = value.state;\r\n                c = this.VSheetList;\r\n                break;\r\n            case 'archived':\r\n                await this.showArchived(value); return;\r\n            case 'action':\r\n                await this.showAction(value); return;\r\n            case 'processing':\r\n                await this.showProcessing(value); return;\r\n        }\r\n        await this.openVPage(c, value);\r\n    }\r\n\r\n    async startSheet(sheetId:number) {\r\n        if (await this.beforeStart() === false) return;\r\n        await this.onEvent('action', sheetId);\r\n    }\r\n\r\n    async showAction(sheetId:number) {\r\n        let sheetData:SheetData = await this.getSheetData(sheetId);\r\n        postWsToTop({\r\n            body: {\r\n                $type: 'msg',\r\n                action: '$sheet',\r\n                msg: {\r\n                    id: sheetId,\r\n                    uq: this.cUq.uq.id,\r\n                    state: sheetData.brief.state\r\n                }\r\n            }\r\n        });\r\n        await this.openVPage(this.VSheetAction, sheetData);\r\n    }\r\n\r\n    async showProcessing(sheetId:number) {\r\n        let sheetData:SheetData = await this.getSheetData(sheetId);\r\n        await this.openVPage(this.VSheetProcessing, sheetData);\r\n    }\r\n\r\n    async editSheet(sheetData:SheetData):Promise<any> {\r\n        //alert('修改单据：程序正在设计中');\r\n        let values = await this.vCall(this.VSheetEdit, sheetData);\r\n        return values;\r\n    }\r\n\r\n    async showArchived(inBrief:any) {\r\n        let sheetData = await this.getArchived(inBrief.id);\r\n        await this.openVPage(this.VArchived, sheetData);\r\n    }\r\n\r\n    onSave = async (values:any, valuesWithBox:any):Promise<void> => {\r\n        //let values = this.vForm.getValues();\r\n        //let ret = await this.controller.saveSheet(values, this.vForm.values);\r\n        let ret = await this.saveSheet(values, valuesWithBox);\r\n        this.ceasePage();\r\n        //this.openPage(this.finishedPage);\r\n        await this.showSaved(ret);\r\n    }\r\n\r\n    async showSaved(sheetData:any) {\r\n        await this.openVPage(this.VSheetSaved, sheetData);\r\n    }\r\n\r\n    private getStateUI(stateName:string) {\r\n        let {states} = this.res;\r\n        if (states === undefined) return;\r\n        return states[stateName];\r\n    }\r\n    getStateLabel(stateName:string) {\r\n        let state = this.getStateUI(stateName);\r\n        let ret = (state && state.label) || stateName;\r\n        switch (ret) {\r\n            default: return ret;\r\n            case '$': return '新单';\r\n        }\r\n    }\r\n    getActionLabel(stateName:string, actionName:string) {\r\n        let state = this.getStateUI(stateName);\r\n        if (state === undefined) return actionName;\r\n        let actions = state.actions;\r\n        if (actions === undefined) return actionName;\r\n        let action = actions[actionName];\r\n        return (action && action.label) || actionName;\r\n    }\r\n\r\n    private async loadStateSheetCount():Promise<void> {\r\n        this.statesCount.clear();\r\n        let statesCount = await this.entity.stateSheetCount();\r\n        this.statesCount.splice(0, 0, ...statesCount);\r\n    }\r\n\r\n    async getSheetData(sheetId:number):Promise<SheetData> {\r\n        return await this.entity.getSheet(sheetId);\r\n    }\r\n\r\n    async getArchived(sheetId:number):Promise<SheetData> {\r\n        return await this.entity.getArchive(sheetId);\r\n    }\r\n\r\n    async saveSheet(values:any, valuesWithBox:any):Promise<any> {\r\n        let {sheetTitle} = this.ui;\r\n        let disc = sheetTitle === undefined? this.label : sheetTitle(valuesWithBox, this.x);\r\n        let ret = await this.entity.save(disc, values);\r\n        //let {id, state} = ret;\r\n        //if (id > 0) this.changeStateCount(state, 1);\r\n        return ret;\r\n    }\r\n\r\n    async action(id:number, flow:number, state:string, actionName:string):Promise<any> {\r\n        return await this.entity.action(id, flow, state, actionName);\r\n    }\r\n}\r\n","export * from './cSheet';\r\nexport * from './vSheet';\r\nexport * from './vMain';\r\nexport * from './vNew';\r\nexport * from './vEdit';\r\nexport * from './vList';\r\nexport * from './vSheetAction';\r\nexport * from './vSchema';\r\nexport * from './vArchived';\r\nexport * from './vSheetView';\r\n","import * as React from 'react';\r\nimport { Book } from '../../uqs';\r\nimport { Page } from '../../../ui';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CBook, BookUI } from './cBook';\r\n\r\nexport class VBookMain extends VEntity<Book, BookUI, CBook> {\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        Book\r\n    </Page>;\r\n}\r\n","import { CEntity, EntityUI } from '../CVEntity';\r\nimport { Book } from '../../uqs';\r\nimport { VBookMain } from './vBookMain';\r\n\r\nexport interface BookUI extends EntityUI {\r\n    CBook?: typeof CBook;\r\n    main: typeof VBookMain,\r\n}\r\n\r\nexport class CBook extends CEntity<Book, BookUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VBookMain);\r\n    }\r\n\r\n    protected get VBookMain():typeof VBookMain {return VBookMain}\r\n}\r\n","import React from 'react';\r\nimport { View, List, Muted } from '../../../ui';\r\nimport { Entity } from '../../uqs';\r\nimport { CLink } from '../link';\r\nimport { CUq } from './cUq';\r\n\r\nexport class VUq extends View<CUq> {\r\n    protected isSysVisible = false;\r\n    protected tuidLinks: CLink[];\r\n    protected mapLinks: CLink[];\r\n    protected sheetLinks: CLink[];\r\n    protected actionLinks: CLink[];\r\n    protected queryLinks: CLink[];\r\n    protected bookLinks: CLink[];\r\n    protected historyLinks: CLink[];\r\n    protected pendingLinks: CLink[];\r\n\r\n    constructor(cUq: CUq) {\r\n        super(cUq);\r\n        let {tuidArr, mapArr, sheetArr, actionArr, queryArr, bookArr, historyArr, pendingArr} = cUq.uq;\r\n        this.tuidLinks = tuidArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cTuidMain(v)));\r\n        this.mapLinks = mapArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cMap(v)));\r\n        this.sheetLinks = sheetArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cSheet(v)));\r\n        this.actionLinks = actionArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cAction(v)));\r\n        this.queryLinks = queryArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cQuery(v)));\r\n        this.bookLinks = bookArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cBook(v)));\r\n        this.historyLinks = historyArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cHistory(v)));\r\n        this.pendingLinks = pendingArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cPending(v)));\r\n    }\r\n    protected isVisible(entity: Entity):boolean {\r\n        return entity.sys !== true || this.isSysVisible;\r\n    }\r\n    render(param?:any) {\r\n        if (this.view === undefined) return <div>??? viewModel 必须定义 view ???</div>\r\n        return React.createElement(this.view);\r\n    }\r\n\r\n    protected view = () => {\r\n        let {res, uq, error} = this.controller;\r\n        let linkItem = {\r\n            render: (cLink:CLink, index:number):JSX.Element => cLink.render(), \r\n            onClick: undefined, \r\n        };\r\n        let lists = [\r\n            {\r\n                header: res.tuid || 'TUID',\r\n                items: this.tuidLinks,\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.map || 'MAP',\r\n                items: this.mapLinks,\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.sheet || 'SHEET',\r\n                items: this.sheetLinks\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.action || 'ACTION',\r\n                items: this.actionLinks\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.query || 'QUERY',\r\n                items: this.queryLinks\r\n            },\r\n            {\r\n                cn: 'mt-2 mb-4',\r\n                header: res.book || 'BOOK',\r\n                items: this.bookLinks\r\n            },\r\n            {\r\n                cn: 'mt-2 mb-4',\r\n                header: res.history || 'HISTORY',\r\n                items: this.historyLinks\r\n            },\r\n            {\r\n                cn: 'mt-2 mb-4',\r\n                header: res.pending || 'PENDING',\r\n                items: this.pendingLinks\r\n            }\r\n        ];\r\n        let content;\r\n        if (error !== undefined) {\r\n            content = <div className=\"p-3 text-danger\">连接错误: {error}</div>;\r\n        }\r\n        else {\r\n            content = lists.map(({cn, header, items},index) => items.length > 0 && <List\r\n                key={index}\r\n                className={cn}\r\n                header={<div className=\"px-3 py-1 bg-light\"><Muted>{header}</Muted></div>}\r\n                items={items}\r\n                item={linkItem} />\r\n            );\r\n        }\r\n        return <>\r\n            <div className=\"px-3 py-1 small\">{res.uq || uq}</div>\r\n            {content}\r\n        </>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { Controller, resLang, nav } from '../../../ui';\r\nimport { UqApi, UnitxApi, appInFrame, UqData } from '../../../net';\r\nimport { Uq, Action, Sheet, Query, Book, Map, Entity, Tuid, History, Pending, TuidDiv } from '../../uqs';\r\nimport { CLink } from '../link';\r\nimport { CBook, BookUI } from '../book';\r\nimport { CSheet, SheetUI } from '../sheet';\r\nimport { ActionUI, CAction } from '../action';\r\nimport { QueryUI, CQuery, CQuerySelect } from '../query';\r\nimport { CTuidMain, TuidUI, CTuid, CTuidInfo, CTuidSelect, CTuidEdit, CTuidList } from '../tuid';\r\nimport { MapUI, CMap } from '../map';\r\nimport { CEntity, EntityUI } from '../CVEntity';\r\nimport { PureJSONContent } from '../form/viewModel';\r\nimport { VUq } from './vUq';\r\nimport { CHistory, HistoryUI } from '../history';\r\nimport { CPending, PendingUI } from '../pending';\r\nimport { CApp } from '../CApp';\r\n\r\nexport type EntityType = 'sheet' | 'action' | 'tuid' | 'query' | 'book' | 'map' | 'history' | 'pending';\r\n\r\nexport interface UqUI {\r\n    CTuidMain?: typeof CTuidMain;\r\n    CTuidEdit?: typeof CTuidEdit;\r\n    CTuidList?: typeof CTuidList;\r\n    CTuidSelect?: typeof CTuidSelect;\r\n    CTuidInfo?: typeof CTuidInfo;\r\n    CQuery?: typeof CQuery;\r\n    CQuerySelect?: typeof CQuerySelect;\r\n    CMap?: typeof CMap;\r\n    CAction?: typeof CAction;\r\n    CSheet?: typeof CSheet;\r\n    CBook?: typeof CBook;\r\n    CHistory?: typeof CHistory;\r\n    CPending?: typeof CPending;\r\n    tuid?: {[name:string]: TuidUI};\r\n    sheet?: {[name:string]: SheetUI};\r\n    action?: {[name:string]: ActionUI};\r\n    map?: {[name:string]: MapUI};\r\n    query?: {[name:string]: QueryUI};\r\n    book?: {[name:string]: BookUI};    \r\n    history?: {[name:string]: HistoryUI};\r\n    pending?: {[name:string]: PendingUI};\r\n    res?: any;\r\n}\r\n\r\nfunction lowerPropertyName(entities: {[name:string]: EntityUI}) {\r\n    if (entities === undefined) return;\r\n    for (let i in entities) entities[i.toLowerCase()] = entities[i];\r\n}\r\n\r\nexport class CUq extends Controller /* implements Uq*/ {\r\n    private ui:any;\r\n    private CTuidMain: typeof CTuidMain;\r\n    private CTuidEdit: typeof CTuidEdit;\r\n    private CTuidList: typeof CTuidList;\r\n    private CTuidSelect: typeof CTuidSelect;\r\n    private CTuidInfo: typeof CTuidInfo;\r\n    private CQuery: typeof CQuery;\r\n    private CQuerySelect: typeof CQuerySelect;\r\n    private CMap: typeof CMap;\r\n    private CAction: typeof CAction;\r\n    private CSheet: typeof CSheet;\r\n    private CBook: typeof CBook;\r\n    private CHistory: typeof CHistory;\r\n    private CPending: typeof CPending;\r\n\r\n    //constructor(cApp:CApp, uq:string, appId:number, uqId:number, access:string, ui:UqUI) {\r\n    constructor(cApp:CApp, uqData:UqData, ui:UqUI) {\r\n        super(resLang(ui.res));\r\n        this.cApp = cApp;\r\n        //this.id = uqId;\r\n        // 每一个ui都转换成小写的key的版本\r\n        lowerPropertyName(ui.tuid);\r\n        lowerPropertyName(ui.sheet);\r\n        lowerPropertyName(ui.map);\r\n        lowerPropertyName(ui.query);\r\n        lowerPropertyName(ui.action);\r\n        lowerPropertyName(ui.book);\r\n        lowerPropertyName(ui.history);\r\n        lowerPropertyName(ui.pending);\r\n        this.ui = ui;\r\n        this.CTuidMain = ui.CTuidMain || CTuidMain;\r\n        this.CTuidEdit = ui.CTuidEdit || CTuidEdit;\r\n        this.CTuidList = ui.CTuidList || CTuidList;\r\n        this.CTuidSelect = ui.CTuidSelect || CTuidSelect;\r\n        this.CTuidInfo = ui.CTuidInfo || CTuidInfo;\r\n        this.CQuery = ui.CQuery || CQuery;\r\n        this.CQuerySelect = ui.CQuerySelect || CQuerySelect;\r\n        this.CMap = ui.CMap || CMap;\r\n        this.CAction = ui.CAction || CAction;\r\n        this.CSheet = ui.CSheet || CSheet;\r\n        this.CBook = ui.CBook || CBook;\r\n        this.CHistory = ui.CHistory || CHistory;\r\n        this.CPending = ui.CPending || CPending;\r\n\r\n        this.uq = new Uq(this.cApp.uqApp, uqData);\r\n        /*\r\n        let token = undefined;\r\n        let uqOwner:string, uqName:string;\r\n        let p = uq.split('/');\r\n        switch (p.length) {\r\n            case 1:\r\n                uqOwner = '$$$';\r\n                uqName = p[0];\r\n                break;\r\n            case 2:\r\n                uqOwner = p[0];\r\n                uqName = p[1];\r\n                break;\r\n            default:\r\n                console.log('uq must be uqOwner/uqName format');\r\n                return;\r\n        }\r\n\r\n        let hash = document.location.hash;\r\n        let baseUrl = hash===undefined || hash===''? \r\n            'debug/':'tv/';\r\n\r\n        let acc: string[];\r\n        if (access === null || access === undefined || access === '*') {\r\n            acc = [];\r\n        }\r\n        else {\r\n            acc = access.split(';').map(v => v.trim()).filter(v => v.length > 0);\r\n        }\r\n        let uqApi:UqApi;\r\n        if (uq === '$$$/$unitx') {\r\n            // 这里假定，点击home link之后，已经设置unit了\r\n            // 调用 UnitxApi会自动搜索绑定 unitx service\r\n            uqApi = new UnitxApi(appInFrame.unit);\r\n        }\r\n        else {\r\n            uqApi = new UqApi(baseUrl, uqOwner, uqName, acc, true);\r\n        }\r\n        this.entities = new Uq(this, uqApi, appId);\r\n        */\r\n    }\r\n\r\n    protected async internalStart() {\r\n    }\r\n\r\n    cApp:CApp;\r\n    //uq: string;\r\n    //id: number;\r\n    res: any;\r\n    uq: Uq;\r\n    error: string;\r\n    //private schemaLoaded:boolean = false;\r\n    \r\n    async init():Promise<void> {\r\n        return await this.uq.init();\r\n    }\r\n\r\n    async loadEntities():Promise<string> {\r\n        try {\r\n            await this.uq.loadAccess();\r\n            for (let tuid of this.uq.tuidArr) {\r\n                let {ui, res} = this.getUI(tuid);\r\n                tuid.setUIRes(ui, res);\r\n            }\r\n        }\r\n        catch (err) {\r\n            return err;\r\n        }\r\n    }\r\n\r\n    async checkEntities(): Promise<boolean> {\r\n        return await this.uq.checkAccess();\r\n    }\r\n\r\n    /*\r\n    private setTuidUI(tuid: Tuid) {\r\n        let {ui, res} = this.getUI(tuid);\r\n        tuid.ui = (ui as TuidUI).content;\r\n        tuid.res = res;\r\n    }\r\n    */\r\n\r\n    /*\r\n    async loadSchema():Promise<string> {\r\n        try {\r\n            if (this.schemaLoaded === true) return;\r\n            await this.loadEntites();\r\n            if (this.id === undefined) this.id = this.uq.uqId;\r\n            for (let i in this.ui) {\r\n                let g = this.ui[i];\r\n                if (g === undefined) continue;\r\n                let {caption, collection} = g;\r\n                if (collection === undefined) continue;\r\n                for (let j in collection) {\r\n                    if (this.uq[i](j) === undefined) {\r\n                        console.warn(i + ':' + '\\'' + j + '\\' is not uq entity');\r\n                    }\r\n                }\r\n            }\r\n            this.schemaLoaded = true;\r\n            return;\r\n        }\r\n        catch(err) {\r\n            console.error(err);\r\n            return this.error = err;\r\n        }\r\n    }\r\n    */\r\n\r\n    async getQuerySearch(name:string):Promise<Query> {\r\n        let query = this.uq.query(name);\r\n        if (query === undefined) \r\n            alert(`QUERY ${name} 没有定义!`);\r\n        else {\r\n            await query.loadSchema();\r\n            let {returns} = query;\r\n            if (returns.length > 1) {\r\n                alert(`QUERY ${name} 返回多张表, 无法做QuerySearch`);\r\n            }\r\n        }\r\n        return query;\r\n    }\r\n    getTuidPlaceHolder(tuid:Tuid) {\r\n        let {tuidPlaceHolder, entity} = this.res;\r\n        let {name} = tuid;\r\n        let type:string;\r\n        if (entity !== undefined) {\r\n            let en = entity[name];\r\n            if (en !== undefined) {\r\n                type = en.label;\r\n            }\r\n        }\r\n        return (tuidPlaceHolder || 'Select');\r\n    }\r\n    getNone() {\r\n        let {none} = this.res;\r\n        return none || 'none';\r\n    }\r\n    protected isSysVisible = false;\r\n    protected isVisible(entity: Entity):boolean {\r\n        return entity.sys !== true || this.isSysVisible;\r\n    }\r\n\r\n    async navSheet(sheetTypeId:number, sheetId:number) {\r\n        let sheet = this.uq.sheetFromTypeId(sheetTypeId);\r\n        if (sheet === undefined) {\r\n            alert('sheetTypeId ' + sheetTypeId + ' is not exists!');\r\n            return;\r\n        }\r\n        let cSheet = this.cSheet(sheet);\r\n        await cSheet.startSheet(sheetId);\r\n    }\r\n\r\n    sheet(entityName:string) {return this.uq.sheet(entityName);}\r\n    action(entityName:string) {return this.uq.action(entityName);}\r\n    query(entityName:string) {return this.uq.query(entityName);}\r\n    book(entityName:string) {return this.uq.book(entityName);}\r\n    map(entityName:string) {return this.uq.map(entityName);}\r\n    history(entityName:string) {return this.uq.history(entityName);}\r\n    pending(entityName:string) {return this.uq.pending(entityName);}\r\n    tuid(entityName:string) {return this.uq.tuid(entityName)}\r\n    tuidDiv(entityName:string, divName:string) {\r\n        return this.uq.tuidDiv(entityName, divName);\r\n    }\r\n\r\n    cSheetFromName(entityName:string):CSheet {\r\n        let entity = this.uq.sheet(entityName);\r\n        if (entity !== undefined) return this.cSheet(entity);\r\n    }\r\n    cActionFromName(entityName:string) {\r\n        let entity = this.uq.action(entityName);\r\n        if (entity !== undefined) return this.cAction(entity);\r\n    }\r\n    cQueryFromName(entityName:string) {\r\n        let entity = this.uq.query(entityName);\r\n        if (entity !== undefined) return this.cQuery(entity);\r\n    }\r\n    cBookFromName(entityName:string) {\r\n        let entity = this.uq.book(entityName);\r\n        if (entity !== undefined) return this.cBook(entity);\r\n    }\r\n    cMapFromName(entityName:string) {\r\n        let entity = this.uq.map(entityName);\r\n        if (entity !== undefined) return this.cMap(entity);\r\n    }\r\n    cHistoryFromName(entityName:string) {\r\n        let entity = this.uq.history(entityName);\r\n        if (entity !== undefined) return this.cHistory(entity);\r\n    }\r\n    cPendingFromName(entityName:string) {\r\n        let entity = this.uq.pending(entityName);\r\n        if (entity !== undefined) return this.cPending(entity);\r\n    }\r\n    cTuidMainFromName(entityName:string) {\r\n        let entity = this.uq.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidMain(entity);\r\n    }\r\n    cTuidEditFromName(entityName:string) {\r\n        let entity = this.uq.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidEdit(entity);\r\n    }\r\n    cTuidInfoFromName(entityName:string) {\r\n        let entity = this.uq.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidInfo(entity);\r\n    }\r\n\r\n    cTuidSelectFromName(entityName:string) {\r\n        let entity = this.uq.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidSelect(entity);\r\n    }\r\n\r\n    cFromName(entityType:EntityType, entityName:string): CEntity<Entity, EntityUI> {\r\n        switch (entityType) {\r\n            case 'sheet':\r\n                let sheet = this.uq.sheet(entityName);\r\n                if (sheet === undefined) return;\r\n                return this.cSheet(sheet);\r\n            case 'action':\r\n                let action = this.uq.action(entityName);\r\n                if (action === undefined) return;\r\n                return this.cAction(action);\r\n            case 'tuid':\r\n                let tuid = this.uq.tuid(entityName);\r\n                if (tuid === undefined) return;\r\n                return this.cTuidMain(tuid);\r\n            case 'query':\r\n                let query = this.uq.query(entityName);\r\n                if (query === undefined) return;\r\n                return this.cQuery(query);\r\n            case 'book':\r\n                let book = this.uq.book(entityName);\r\n                if (book === undefined) return;\r\n                return this.cBook(book);\r\n            case 'map':\r\n                let map = this.uq.map(entityName);\r\n                if (map === undefined) return;\r\n                return this.cMap(map);\r\n            case 'history':\r\n                let history = this.uq.history(entityName);\r\n                if (history === undefined) return;\r\n                return this.cHistory(history);\r\n            case 'pending':\r\n                let pending = this.uq.pending(entityName);\r\n                if (pending === undefined) return;\r\n                return this.cPending(pending);\r\n        }\r\n    }\r\n\r\n    linkFromName(entityType:EntityType, entityName:string) {\r\n        return this.link(this.cFromName(entityType, entityName));\r\n    }\r\n\r\n    private getUI<T extends Entity, UI extends EntityUI>(t:T):{ui:UI, res:any} {\r\n        let ui, res;\r\n        let {name, typeName} = t;\r\n        if (this.ui !== undefined) {\r\n            let tUI = this.ui[typeName];\r\n            if (tUI !== undefined) {\r\n                ui = tUI[name];\r\n            }\r\n        }\r\n        let {entity} = this.res;\r\n        if (entity !== undefined) {\r\n            res = entity[name];\r\n        }\r\n        return {ui: ui || {}, res: res || {} };\r\n    }\r\n\r\n    link(cEntity:CEntity<Entity, EntityUI>) {\r\n        return new CLink(cEntity);\r\n    }\r\n\r\n    get tuidLinks() {\r\n        return this.uq.tuidArr.filter(v => this.isVisible(v)).map(v => this.link(this.cTuidMain(v)));\r\n    }\r\n    cTuidMain(tuid:Tuid):CTuidMain {\r\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidMain || this.CTuidMain)(this, tuid, ui, res);\r\n    }\r\n    cTuidEdit(tuid:Tuid):CTuidEdit {\r\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidEdit || this.CTuidEdit)(this, tuid, ui, res);\r\n    }\r\n    cTuidList(tuid:Tuid):CTuidList {\r\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidList || this.CTuidList)(this, tuid, ui, res);\r\n    }\r\n    cTuidSelect(tuid:Tuid):CTuidSelect {\r\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidSelect || this.CTuidSelect)(this, tuid, ui, res);\r\n    }\r\n    cTuidInfo(tuid:Tuid):CTuidInfo {\r\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidInfo || this.CTuidInfo)(this, tuid, ui, res);\r\n    }\r\n\r\n    cSheet(sheet:Sheet/*, sheetUI?:SheetUI, sheetRes?:any*/):CSheet {\r\n        let {ui, res} = this.getUI<Sheet, SheetUI>(sheet);\r\n        //if (sheetUI !== undefined) ui = sheetUI;\r\n        //if (sheetRes !== undefined) res = sheetRes;\r\n        //return new (ui && ui.CSheet || this.CSheet)(this, sheet, sheetUI, sheetRes);\r\n        return new (ui && ui.CSheet || this.CSheet)(this, sheet, ui, res);\r\n    }\r\n    get sheetLinks() { \r\n        return this.uq.sheetArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cSheet(v))\r\n        });\r\n    }\r\n\r\n    cAction(action:Action):CAction {\r\n        let {ui, res} = this.getUI<Action, ActionUI>(action);\r\n        return new (ui && ui.CAction || this.CAction)(this, action, ui, res);\r\n    }\r\n    get actionLinks() { \r\n        return this.uq.actionArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cAction(v))\r\n        });\r\n    }\r\n\r\n    cQuery(query:Query):CQuery {\r\n        let {ui, res} = this.getUI<Query, QueryUI>(query);\r\n        return new (ui && ui.CQuery || this.CQuery)(this, query, ui, res);\r\n    }\r\n    cQuerySelect(queryName:string):CQuerySelect {\r\n        let query = this.uq.query(queryName);\r\n        if (query === undefined) return;\r\n        let {ui, res} = this.getUI<Query, QueryUI>(query);\r\n        return new (ui && ui.CQuerySelect || this.CQuerySelect)(this, query, ui, res);\r\n    }\r\n    get queryLinks() {\r\n        return this.uq.queryArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cQuery(v))\r\n        });\r\n    }\r\n    \r\n    cBook(book:Book):CBook {\r\n        let {ui, res} = this.getUI<Book, BookUI>(book);\r\n        return new (ui && ui.CBook || this.CBook)(this, book, ui, res);\r\n    }\r\n    get bookLinks() { \r\n        return this.uq.bookArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cBook(v))\r\n        });\r\n    }\r\n    \r\n    cHistory(history:History):CHistory {\r\n        let {ui, res} = this.getUI<History, HistoryUI>(history);\r\n        return new (ui && ui.CHistory || this.CHistory)(this, history, ui, res);\r\n    }\r\n    get historyLinks() { \r\n        return this.uq.historyArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cHistory(v))\r\n        });\r\n    }\r\n    \r\n    cPending(pending:Pending):CPending {\r\n        let {ui, res} = this.getUI<Pending, PendingUI>(pending);\r\n        return new (ui && ui.CPending || this.CPending)(this, pending, ui, res);\r\n    }\r\n    get pendingLinks() { \r\n        return this.uq.pendingArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cPending(v))\r\n        });\r\n    }\r\n    \r\n    cMap(map:Map):CMap {\r\n        let {ui, res} = this.getUI<Map, MapUI>(map);\r\n        return new (ui && ui.CMap || this.CMap)(this, map, ui, res);\r\n    }\r\n    get mapLinks() { \r\n        return this.uq.mapArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cMap(v));\r\n        });\r\n    }\r\n\r\n    getTuidContent(tuid:Tuid): React.StatelessComponent<any> {\r\n        let {ui} = this.getUI<Tuid, TuidUI>(tuid);\r\n        return (ui && ui.content) || PureJSONContent;\r\n    }\r\n\r\n    getTuidDivContent(tuidDiv:TuidDiv): React.StatelessComponent<any> {\r\n        let {owner} = tuidDiv;\r\n        let {ui} = this.getUI<Tuid, TuidUI>(owner);\r\n        return (ui && ui.divs && ui.divs[tuidDiv.name].content) || PureJSONContent;\r\n    }\r\n\r\n    async showTuid(tuid:Tuid, id:number):Promise<void> {\r\n        let c = this.cTuidInfo(tuid);\r\n        await c.start(id);\r\n    }\r\n\r\n    async showTuidDiv(tuid:TuidDiv, id:number):Promise<void> {\r\n        let {owner} = tuid;\r\n        let c = this.cTuidInfo(owner);\r\n        await c.start(id);\r\n    }\r\n\r\n    protected get VUq():typeof VUq {return VUq}\r\n\r\n    render() {\r\n        let v = new (this.VUq)(this);\r\n        return v.render();\r\n    }\r\n}\r\n\r\n","export * from './cUq';\r\nexport * from './vUq';","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport className from 'classnames';\r\nimport { Page, List, LMR, FA } from '../../../ui';\r\nimport { tv } from '../../tools';\r\nimport { Map } from '../../uqs';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CMap, MapItem, MapKey, MapUI } from './cMap';\r\nimport { PureJSONContent } from '../form/viewModel';\r\n\r\nexport class VMapMain extends VEntity<Map, MapUI, CMap> {\r\n    private isFrom: boolean;\r\n\r\n    async open(param?:any) {\r\n        this.isFrom = this.controller.isFrom;\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    itemRender = (item:MapItem, index:number) => {\r\n        return <this.ItemRow item={item} />;\r\n    }\r\n\r\n    private ItemRow = observer(({item}: {item:MapItem}) => {\r\n        let {tuid, box, children, isLeaf, keyIndex, values} = item;\r\n        let keyUI = this.controller.keyUIs[keyIndex];\r\n        let {content:keyContent, valuesContent, none:keyNone} = keyUI;\r\n        let add:any, remove:any;\r\n        if (this.isFrom === false) {\r\n            add = <button className=\"btn btn-link btn-sm\" onClick={()=>this.controller.addClick(item)}>\r\n                <FA name=\"plus\" />\r\n            </button>;\r\n            remove = <button className=\"btn btn-link btn-sm\" onClick={()=>this.controller.removeClick(item)}>\r\n                <FA className=\"text-info\" name=\"trash\" />\r\n            </button>;\r\n        }\r\n        let right:any;\r\n        if (isLeaf === false) {\r\n            if (keyIndex === 0)\r\n                right = add;\r\n            else\r\n                right = <>{remove} &nbsp; {add}</>;\r\n        }\r\n        else if (keyIndex > 0) {\r\n            right = remove;\r\n        }\r\n        let content:any, border:any, valuesView:any;\r\n        if (isLeaf === true) {\r\n            content = undefined; //<div className=\"ml-5\">leaf</div>;\r\n            if (values) {\r\n                //valuesView = null; // 现在不显示values content了\r\n                valuesView = (valuesContent || PureJSONContent)(values, this.x);\r\n            }\r\n        }\r\n        else {\r\n            border = 'border-bottom';\r\n            let none = keyNone && keyNone(this.x);\r\n            content = <List \r\n                className=\"ml-4\" \r\n                items={children} \r\n                item={{onClick:undefined, render:this.itemRender}}\r\n                none={none} />\r\n        }\r\n        let left = <div className=\"py-1 pr-3\">{tv(box, keyContent, this.x)}</div>;\r\n        return <div className=\"d-flex flex-column\">\r\n            <LMR className={className('px-3', 'py-2', border)}\r\n                left={left}\r\n                right={right}\r\n            >\r\n                <div className=\"py-1\">{valuesView}</div>\r\n            </LMR>\r\n            {content}\r\n        </div>;\r\n    });\r\n\r\n    protected get view() { return () => <Page header={this.label}>\r\n            <List items={this.controller.items} item={{className:'my-2', onClick:undefined, render:this.itemRender}} />\r\n        </Page>\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { VEntity } from '../CVEntity';\r\nimport { MapUI, CMap } from './cMap';\r\nimport { Map } from '../../uqs';\r\nimport { Page } from '../../../ui';\r\nimport { VForm } from '../form';\r\n\r\nexport class VInputValues extends VEntity<Map, MapUI, CMap> {\r\n    private vForm: VForm;\r\n\r\n    async open(param?:any) {\r\n        this.vForm = this.createForm(this.onValuesSubmit);\r\n        this.openPageElement(<this.view />);\r\n    }\r\n\r\n    private onValuesSubmit = async () => {\r\n        this.ceasePage();\r\n        let values = this.vForm.getValues();\r\n        this.returnCall(values);\r\n    }\r\n\r\n    private view = () => {\r\n        return <Page>\r\n            {this.vForm.render()}\r\n        </Page>\r\n    }\r\n}\r\n","import _ from 'lodash';\r\nimport { CEntity, EntityUI } from '../CVEntity';\r\nimport { Map, Tuid, BoxId, Field, fieldDefaultValue } from '../../uqs';\r\nimport { VMapMain } from './vMain';\r\nimport { observable } from 'mobx';\r\nimport { PureJSONContent } from '../form/viewModel';\r\nimport { VInputValues } from './inputValues';\r\n\r\nexport interface MapKey {\r\n    content: (values, x?:any) => JSX.Element;\r\n    valuesContent?: (values, x?:any) => JSX.Element;\r\n    none?: (x:any)=>string;\r\n}\r\n\r\nexport interface MapUI extends EntityUI {\r\n    CMap?: typeof CMap;\r\n    keys?: MapKey[],\r\n}\r\n\r\nexport class MapItem {\r\n    parent: MapItem;\r\n    tuid: Tuid;\r\n    box: BoxId;\r\n    isLeaf: boolean;\r\n    keyIndex:number;\r\n    children: MapItem[] = observable.array([], {deep: true});\r\n    values: any;\r\n    constructor(parent:MapItem, tuid:Tuid, box:BoxId, keyIndex:number) {\r\n        this.parent = parent;\r\n        this.tuid = tuid;\r\n        this.box = box;\r\n        this.keyIndex = keyIndex;\r\n        this.isLeaf = false;\r\n    }\r\n}\r\n\r\nexport class CMap extends CEntity<Map, MapUI> {\r\n    isFrom: boolean;\r\n    items:MapItem[];\r\n    keyFields: Field[];\r\n    keyUIs: MapKey[];\r\n\r\n    protected async internalStart() {\r\n        let {keys, schemaFrom} = this.entity;\r\n        this.isFrom = schemaFrom !== undefined;\r\n        let q = this.entity.queries.all;\r\n        let result = await q.query({});\r\n        //let data = await this.entity.unpackReturns(res);\r\n        let ret = result.ret;\r\n        let keysLen = keys.length;\r\n        this.keyUIs = _.clone(this.ui.keys || []);\r\n        this.keyFields = [];\r\n        let retFields = q.returns[0].fields;\r\n        for (let i=0; i<keysLen; i++) {\r\n            this.keyFields.push(retFields[i]);\r\n            if (i >= this.keyUIs.length) {\r\n                this.keyUIs.push({\r\n                    content: PureJSONContent,\r\n                });\r\n            }\r\n        }\r\n        this.items = observable([]);\r\n        let item:MapItem = undefined;\r\n        for (let r of ret) {\r\n            let newItem = this.addItem(item, r);\r\n            if (newItem !== undefined) {\r\n                this.items.push(newItem);\r\n                item = newItem;\r\n            }\r\n        }\r\n\r\n        await this.openVPage(this.VMapMain);\r\n    }\r\n\r\n    private createItem(parent:MapItem, tuid:Tuid, box:BoxId, keyIndex:number, values?:any) {\r\n        let item = new MapItem(parent, tuid, box, keyIndex);\r\n        if (keyIndex === this.keyFields.length - 1) {\r\n            item.isLeaf = true;\r\n            item.values = values;\r\n        }\r\n        return item;\r\n    }\r\n\r\n    addItem(item:MapItem, row:any):MapItem {\r\n        let ret:MapItem = undefined;\r\n        let keysLen = this.keyFields.length;\r\n        let p = item;\r\n        for (let i=0;i<keysLen;i++) {\r\n            let key = this.keyFields[i];\r\n            let {name} = key;\r\n            let tuidBox = key._tuid;\r\n            let val:BoxId = row[name];\r\n            if (val === undefined) break;\r\n            let {id} = val;\r\n            if (i === 0) {\r\n                if (id === 0) continue;\r\n                if (p === undefined || p.box.id !== id) {\r\n                    ret = p = this.createItem(undefined, tuidBox.tuid, val, i, row);\r\n                }\r\n                continue;\r\n            }\r\n            let {children, box} = p;\r\n            let len = children.length;\r\n            if (len > 0) {\r\n                let n = children[len-1];\r\n                if (n.box.id === id) {\r\n                    p = n;\r\n                    continue;\r\n                }\r\n            }\r\n            if (id > 0) {\r\n                children.push(p = this.createItem(p, tuidBox.tuid, val, i, row));\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    async searchOnKey(keyField:Field, param):Promise<number> {\r\n        let {_tuid} = keyField;\r\n        let {tuid, ownerField} = _tuid;\r\n        let cTuidSelect = this.cUq.cTuidSelect(tuid);\r\n        let callParam = param;\r\n        if (ownerField !== undefined) {\r\n            callParam = param[ownerField.name];\r\n            if (typeof callParam === 'object') {\r\n                callParam = callParam.id;\r\n            }\r\n        }\r\n        let ret = await cTuidSelect.call(callParam);\r\n        return _tuid.getIdFromObj(ret);\r\n    }\r\n\r\n    addClick = async(item:MapItem) => {\r\n        let {keyIndex, children} = item;\r\n        let keysLen = this.keyFields.length;\r\n        let keysLast = keysLen-1;\r\n        let idx = keyIndex + 1;\r\n        if (idx >= keysLen) return;\r\n        let keyField = this.keyFields[idx];\r\n        let kn = keyField.name;\r\n        let tuid = keyField._tuid;\r\n        let searchParam = {} as any;\r\n        let data = {} as any;\r\n        for (let p=item;p!==undefined;p=p.parent) {\r\n            let {keyIndex:ki, box} = p;\r\n            let kn = this.keyFields[ki].name;\r\n            //searchParam[kn] = data['_' + kn] = box.id;\r\n            searchParam[kn] = data[kn] = box.id;\r\n        }\r\n\r\n        let id = await this.searchOnKey(keyField, searchParam);\r\n        if (id === undefined || id <= 0) return;\r\n        tuid.useId(id);\r\n        let idBox = tuid.boxId(id);\r\n        let arr1 = {} as any;\r\n        let values:any = {};\r\n        if (keyIndex+1===keysLast) {\r\n            tuid.useId(id);\r\n            //values[kn] = arr1['_' + kn] = idBox;\r\n            values[kn] = arr1[kn] = idBox;\r\n            if (this.entity.fields.length > 0) {\r\n                let ret = await this.vCall(VInputValues, data);\r\n                for (let i in ret) {\r\n                    //values[i] = arr1['_' + i] = ret[i];\r\n                    values[i] = arr1[i] = ret[i];\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            //values[kn] = data['_' + kn] = idBox;\r\n            values[kn] = data[kn] = idBox;\r\n            for (let i=idx+1;i<keysLast;i++) {\r\n                //data['_' + this.keyFields[i].name] = 0;\r\n                data[this.keyFields[i].name] = 0;\r\n            }\r\n            // 填map的key field 0 值\r\n            //arr1['_' + this.keyFields[keysLast].name] = 0;\r\n            arr1[this.keyFields[keysLast].name] = 0;\r\n            let {fields} = this.entity;\r\n            for (let f of fields) {\r\n                let {name, type, null:nullable} = f;\r\n                if (!(nullable === true)) {\r\n                    //arr1['_' + f.name] = fieldDefaultValue(type);\r\n                    arr1[f.name] = fieldDefaultValue(type);\r\n                }\r\n            }\r\n        }\r\n        data.arr1 = [arr1];\r\n        await this.entity.actions.add.submit(data);\r\n        let rowIndex = children.findIndex(v => v.box.id === id);\r\n        if (rowIndex < 0) {\r\n            children.push(this.createItem(item, tuid.tuid, idBox, idx, values));\r\n        }\r\n        else {\r\n            let {fields} = this.entity;\r\n            if (fields !== undefined && fields.length > 0) {\r\n                let row = children[rowIndex];\r\n                children.splice(rowIndex, 1);\r\n                row.values = values;\r\n                /*\r\n                for (let f of fields) {\r\n                    let {name:fn} = f;\r\n                    row.values[fn] = values[fn];\r\n                }*/\r\n                children.splice(rowIndex, 0, row);\r\n            }\r\n        }\r\n        this.removeCeased();\r\n    }\r\n\r\n    removeClick = async(item:MapItem) => {\r\n        let keyField = this.keyFields[item.keyIndex];\r\n        let tuid = keyField._tuid;\r\n        let cTuidMain = this.cUq.cTuidMain(tuid.tuid);\r\n        let label = cTuidMain.getLable(tuid.tuid);\r\n        let confirmDelete:_.TemplateExecutor = \r\n            this.res.confirmDelete \r\n            || _.template('do you really want to remove ${label}?');\r\n        if (confirm(confirmDelete({label:label})) === false) return;\r\n        let map:Map = this.entity;\r\n        let data = {} as any;\r\n        let arr1 = data['arr1'] = [];\r\n        let v0 = {} as any;\r\n        arr1.push(v0);\r\n        for (let p=item; p!==undefined;p=p.parent) {\r\n            let ki=p.keyIndex;\r\n            //v0['_'+this.keyFields[ki].name] = p.box.id;\r\n            v0[this.keyFields[ki].name] = p.box.id;\r\n        }\r\n        let len = this.keyFields.length;\r\n        for (let i=item.keyIndex+1; i<len; i++) {\r\n            let k = this.keyFields[i];\r\n            //v0['_'+k.name] = -1;\r\n            v0[k.name] = -1;\r\n        }\r\n        await map.actions.del.submit(data);\r\n        let children = item.parent.children;\r\n        let index = children.findIndex(v => v === item);\r\n        if (index >= 0) children.splice(index, 1);\r\n    }\r\n\r\n    protected get VMapMain():typeof VMapMain {return VMapMain}\r\n}\r\n","export * from './cMap';\r\nexport * from './vMain';\r\n","import * as React from 'react';\r\nimport { Pending } from '../../uqs';\r\nimport { Page } from '../../../ui';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CPending, PendingUI } from './cPending';\r\n\r\nexport class VPendingMain extends VEntity<Pending, PendingUI, CPending> {\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        pending\r\n    </Page>;\r\n}\r\n","import { CEntity, EntityUI } from '../CVEntity';\r\nimport { Pending } from '../../uqs';\r\nimport { VPendingMain } from './vPendingMain';\r\n\r\nexport interface PendingUI extends EntityUI {\r\n    CPending?: typeof CPending;\r\n    main: typeof VPendingMain,\r\n}\r\n\r\nexport class CPending extends CEntity<Pending, PendingUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VPendingMain);\r\n    }\r\n\r\n    protected get VPendingMain():typeof VPendingMain {return VPendingMain}\r\n}\r\n","export * from './cPending';\r\nexport * from './vPendingMain';\r\n","import * as React from 'react';\r\nimport { VPage, Page } from '../../../ui';\r\nimport { jsonStringify } from '../../tools';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CAction, ActionUI } from './cAction';\r\nimport { Action } from '../../uqs';\r\n\r\nexport class VActionMain extends VEntity<Action, ActionUI, CAction> {\r\n    protected vForm: VForm;\r\n    protected returns: any;\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        this.openPage(this.mainPage);\r\n    }\r\n\r\n    private onSubmit = async () => {\r\n        let values = this.vForm.getValues();\r\n        this.returns = await this.controller.submit(values);\r\n        this.closePage();\r\n        this.openPage(this.resultPage);\r\n    }\r\n\r\n    protected mainPage = () => {\r\n        let {label} = this.controller;\r\n        return <Page header={label}>\r\n            {this.vForm.render('mx-3 my-2')}\r\n        </Page>;\r\n    }\r\n\r\n    protected resultPage = () => {\r\n        let {label} = this.controller;\r\n        return <Page header={label} back=\"close\">\r\n            完成！\r\n            <pre>\r\n                {jsonStringify(this.returns)}\r\n            </pre>\r\n        </Page>;\r\n    }\r\n}\r\n","import { CEntity, EntityUI } from '../CVEntity';\r\nimport { Action } from '../../uqs';\r\nimport { VActionMain } from './vActionMain';\r\n\r\nexport interface ActionUI extends EntityUI {\r\n    CAction?: typeof CAction;\r\n    //main: typeof VActionMain,\r\n}\r\n\r\nexport class CAction extends CEntity<Action, ActionUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VActionMain);\r\n    }\r\n\r\n    protected get VActionMain():typeof VActionMain {return VActionMain}\r\n\r\n    async submit(values:any) {\r\n        return this.entity.submit(values);\r\n    }\r\n}\r\n","export * from './cAction';\r\nexport * from './vActionMain';\r\n","import * as React from 'react';\r\nimport { History } from '../../uqs';\r\nimport { Page } from '../../../ui';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CHistory, HistoryUI } from './cHistory';\r\n\r\nexport class VHistoryMain extends VEntity<History, HistoryUI, CHistory> {\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        History\r\n    </Page>;\r\n}\r\n","import { CEntity, EntityUI } from '../CVEntity';\r\nimport { History } from '../../uqs';\r\nimport { VHistoryMain } from './vHistoryMain';\r\n\r\nexport interface HistoryUI extends EntityUI {\r\n    CHistory?: typeof CHistory;\r\n    main: typeof VHistoryMain,\r\n}\r\n\r\nexport class CHistory extends CEntity<History, HistoryUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VHistoryMain);\r\n    }\r\n\r\n    protected get VHistoryMain():typeof VHistoryMain {return VHistoryMain}\r\n}\r\n","export * from './cHistory';\r\nexport * from './vHistoryMain';\r\n","\r\nimport {setCenterToken} from './uqApi';\r\nimport {WSChannel} from './wsChannel';\r\n\r\nexport const netToken = {\r\n    set(userId:number, token:string) {\r\n        setCenterToken(userId, token);\r\n        WSChannel.setCenterToken(token);\r\n    },\r\n    clear() {\r\n        setCenterToken(0, undefined);\r\n        WSChannel.setCenterToken(undefined);\r\n    }\r\n};\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport {User} from '../user';\r\nimport {nav} from './nav';\r\nimport {Page} from './page';\r\nimport { isDevelopment } from '../net';\r\n\r\nexport abstract class Controller {\r\n    readonly res: any;\r\n    readonly x: any;\r\n    icon: string|JSX.Element;\r\n    label:string;\r\n    readonly isDev:boolean = isDevelopment;\r\n    get user():User {return nav.user}\r\n    get isLogined():boolean {\r\n        let {user} = nav;\r\n        if (user === undefined) return false;\r\n        return user.id > 0;\r\n    }\r\n    constructor(res:any) {\r\n        this.res = res || {};\r\n        this.x = this.res.x || {};\r\n    }\r\n\r\n    private receiveHandlerId:number;\r\n    private disposer:()=>void;\r\n\r\n    private dispose() {\r\n        // message listener的清理\r\n        nav.unregisterReceiveHandler(this.receiveHandlerId);\r\n        this.onDispose();\r\n    }\r\n\r\n    protected onDispose() {\r\n    }\r\n\r\n    protected async openVPage<C extends Controller>(vp: new (controller: C)=>VPage<C>, param?:any):Promise<void> {\r\n        await (new vp((this as any) as C)).open(param);\r\n    }\r\n\r\n    protected renderView<C extends Controller>(view: new (controller: C)=>View<C>, param?:any) {\r\n        return (new view((this as any) as C)).render(param);\r\n    }\r\n\r\n    async event(type:string, value:any) {\r\n        await this.onEvent(type, value);\r\n    }\r\n\r\n    protected async onEvent(type:string, value:any) {\r\n    }\r\n\r\n    protected msg(text:string) {\r\n        alert(text);\r\n    }\r\n    protected errorPage(header:string, err:any) {\r\n        this.openPage(<Page header=\"App error!\">\r\n            <pre>\r\n                {typeof err === 'string'? err : err.message}\r\n            </pre>\r\n        </Page>);\r\n    }\r\n\r\n    protected onMessage(message:any):Promise<void> {\r\n        return;\r\n    }\r\n\r\n    private onMessageReceive = async (message:any):Promise<void> => {\r\n        await this.onMessage(message);\r\n    }\r\n\r\n    protected async beforeStart():Promise<boolean> {\r\n        /*\r\n        console.log('this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);');\r\n        this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);\r\n        console.log('return true');\r\n        */\r\n        return true;\r\n    }\r\n    protected registerReceiveHandler() {\r\n        this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);\r\n    }\r\n\r\n    protected abstract internalStart(param?:any):Promise<void>;\r\n    async start(param?:any):Promise<void> {\r\n        this.disposer = this.dispose.bind(this);\r\n        this.registerReceiveHandler();\r\n        let ret = await this.beforeStart();\r\n        if (ret === false) return;\r\n        await this.internalStart(param);\r\n    }\r\n\r\n    get isCalling():boolean {return this._resolve_$ !== undefined}\r\n\r\n    private _resolve_$:((value:any) => void)[];\r\n    async call<T>(param?:any):Promise<T> {\r\n        if (this._resolve_$ === undefined) this._resolve_$ = [];\r\n        return new Promise<T> (async (resolve, reject) => {\r\n            this._resolve_$.push(resolve);\r\n            await this.start(param);\r\n        });\r\n    }\r\n\r\n    async vCall<C extends Controller>(vp: new (controller: C)=>VPage<C>, param?:any):Promise<any> {\r\n        if (this._resolve_$ === undefined) this._resolve_$ = [];\r\n        return new Promise<any> (async (resolve, reject) => {\r\n            this._resolve_$.push(resolve);\r\n            await (new vp(this as any)).open(param);\r\n        });\r\n    }\r\n\r\n    returnCall(value:any) {\r\n        if (this._resolve_$ === undefined) return;\r\n        let resolve = this._resolve_$.pop();\r\n        if (resolve === undefined) {\r\n            alert('the Controller call already returned, or not called');\r\n            return;\r\n        }\r\n        resolve(value);\r\n    }\r\n\r\n    openPage(page:JSX.Element) {\r\n        nav.push(page, this.disposer);\r\n        this.disposer = undefined;\r\n    }\r\n\r\n    replacePage(page:JSX.Element) {\r\n        nav.replace(page, this.disposer);\r\n        this.disposer = undefined;\r\n    }\r\n\r\n    backPage() {\r\n        nav.back();\r\n    }\r\n\r\n    closePage(level?:number) {\r\n        nav.pop(level);\r\n    }\r\n\r\n    ceasePage(level?:number) {\r\n        nav.ceaseTop(level);\r\n    }\r\n\r\n    removeCeased() {\r\n        nav.removeCeased();\r\n    }\r\n\r\n    regConfirmClose(confirmClose: ()=>Promise<boolean>) {\r\n        nav.regConfirmClose(confirmClose);\r\n    }\r\n}\r\n\r\n\r\nexport abstract class View<C extends Controller> {\r\n    protected controller: C;\r\n    protected readonly res: any;\r\n    protected readonly x: any;\r\n\r\n    constructor(controller: C) {\r\n        this.controller = controller;\r\n        this.res = controller.res;\r\n        this.x = controller.x;\r\n    }\r\n\r\n    protected get isDev() {return isDevelopment}\r\n\r\n    abstract render(param?:any): JSX.Element;\r\n\r\n    protected renderVm(vm: new (controller: C)=>View<C>, param?:any) {\r\n        return (new vm(this.controller)).render(param);\r\n    }\r\n\r\n    protected async openVPage(vp: new (controller: C)=>VPage<C>, param?:any):Promise<void> {\r\n        await (new vp(this.controller)).open(param);\r\n    }\r\n\r\n    protected async event(type:string, value?:any) {\r\n        /*\r\n        if (this._resolve_$_ !== undefined) {\r\n            await this._resolve_$_({type:type, value:value});\r\n            return;\r\n        }*/\r\n        await this.controller.event(type, value);\r\n    }\r\n\r\n    async vCall<C extends Controller>(vp: new (controller: C)=>VPage<C>, param?:any):Promise<any> {\r\n        return await this.controller.vCall(vp, param);\r\n    }\r\n\r\n    protected returnCall(value:any) {\r\n        this.controller.returnCall(value);\r\n    }\r\n\r\n    protected openPage(view: React.StatelessComponent<any>, param?:any) {\r\n        this.controller.openPage(React.createElement(view, param));\r\n    }\r\n\r\n    protected replacePage(view: React.StatelessComponent<any>, param?:any) {\r\n        this.controller.replacePage(React.createElement(view, param));\r\n    }\r\n\r\n    protected openPageElement(page: JSX.Element) {\r\n        this.controller.openPage(page);\r\n    }\r\n\r\n    protected replacePageElement(page: JSX.Element) {\r\n        this.controller.replacePage(page);\r\n    }\r\n\r\n    protected backPage() {\r\n        this.controller.backPage();\r\n    }\r\n\r\n    protected closePage(level?:number) {\r\n        this.controller.closePage(level);\r\n    }\r\n\r\n    protected ceasePage(level?:number) {\r\n        this.controller.ceasePage(level);\r\n    }\r\n\r\n    protected removeCeased() {\r\n        this.controller.removeCeased();\r\n    }\r\n\r\n    protected regConfirmClose(confirmClose: ()=>Promise<boolean>) {\r\n        this.controller.regConfirmClose(confirmClose);\r\n    }\r\n}\r\n\r\nexport abstract class VPage<C extends Controller> extends View<C> {\r\n    abstract open(param?:any):Promise<void>;\r\n\r\n    render(param?:any):JSX.Element {return null;}\r\n}\r\n\r\nexport type TypeVPage<C extends Controller> = new (controller: C)=>VPage<C>;\r\n\r\n","export * from './schema';\r\nexport * from './uiSchema';\r\nexport * from './toUiSelectItems';","\r\nexport const mobileRegex = /^[0-9]*$/;\r\nexport const emailRegex = /\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/;\r\n// /^([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+@([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+\\.[a-zA-Z]{2,3}$/\r\n\r\nexport const EmailFieldRule = (value:any): string|string[] => {\r\n    if (emailRegex.test(value as string) === false) return '电子邮件格式错误';\r\n}\r\n\r\nexport const MobileFieldRule = (value:any): string|string[] => {\r\n    if (emailRegex.test(value as string) === false) return '手机格式错误';\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nexport interface DropdownAction {\r\n    icon?: string;\r\n    caption?: string;\r\n    action?: () => void;\r\n}\r\n\r\nexport interface DropdownActionsProps {\r\n    icon?: string;\r\n    actions: DropdownAction[];\r\n    isRight?: boolean;\r\n}\r\n\r\nexport interface DropdownActionsState {\r\n    dropdownOpen: boolean;\r\n}\r\n\r\nexport class DropdownActions extends React.Component<DropdownActionsProps, DropdownActionsState> {\r\n    private menu: HTMLDivElement;\r\n    private button: HTMLElement;\r\n    constructor(props:DropdownActionsProps) {\r\n        super(props);\r\n        this.state = {\r\n            dropdownOpen: false\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        document.addEventListener('click', this.handleDocumentClick);\r\n        document.addEventListener('touchstart', this.handleDocumentClick);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('click', this.handleDocumentClick);\r\n        document.removeEventListener('touchstart', this.handleDocumentClick);\r\n    }\r\n\r\n    private handleDocumentClick = (evt:any) => {\r\n        if (this.state.dropdownOpen === false) return;\r\n        if (this.button && this.button.contains(evt.target)) return;\r\n        if (!this.menu) return;\r\n        //if (!this.menu.contains(evt.target)) \r\n        this.toggle();\r\n    }\r\n\r\n    private toggle = () => {\r\n        this.setState({\r\n            dropdownOpen: !this.state.dropdownOpen\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let {icon, actions, isRight} = this.props;\r\n        if (isRight === undefined) isRight = true;\r\n        let hasIcon = actions.some(v => v.icon!==undefined);\r\n        let {dropdownOpen} = this.state;\r\n        //isOpen={this.state.dropdownOpen} toggle={this.toggle}\r\n        return <div className=\"dropdown\">\r\n            <button ref={v=>this.button=v} className=\"cursor-pointer dropdown-toggle btn btn-sm\"\r\n                data-toggle=\"dropdown\"\r\n                aria-expanded={dropdownOpen}\r\n                onClick={this.toggle}>\r\n                <i className={classNames('fa', 'fa-'+(icon||'ellipsis-v'))} />\r\n            </button>\r\n            <div ref={v => this.menu=v} className={classNames({\"dropdown-menu\":true, \"dropdown-menu-right\":isRight, \"show\":dropdownOpen})}>\r\n                {\r\n                    actions.map((v,index) => {\r\n                        let {icon, caption, action} = v;\r\n                        if (icon === undefined && caption === undefined) \r\n                            return <div className=\"dropdown-divider\" />;\r\n                        let i:any;\r\n                        if (hasIcon === true) {\r\n                            if (icon !== undefined) icon = 'fa-' + icon;\r\n                            i = <><i className={classNames('fa', icon, 'fa-fw')} aria-hidden={true}></i>&nbsp; </>;\r\n                        }\r\n                        if (action === undefined) \r\n                            return <h6 className=\"dropdown-header\">{i} {caption}</h6>;\r\n                        return <a className=\"dropdown-item\" key={index} href=\"#\" onClick={(evt:React.MouseEvent<HTMLAnchorElement>)=>{ evt.preventDefault();action()}}>{i} {caption}</a>\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\n/*\r\nexport class DropdownActions extends React.Component<DropdownActionsProps, DropdownActionsState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dropdownOpen: false\r\n        };\r\n    }\r\n    private toggle = () => {\r\n        this.setState({\r\n            dropdownOpen: !this.state.dropdownOpen\r\n        });\r\n    }\r\n    render() {\r\n        let {icon, actions, isRight} = this.props;\r\n        if (isRight === undefined) isRight = true;\r\n        let hasIcon = actions.some(v => v.icon!==undefined);\r\n        return <UncontrolledButtonDropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\r\n            <DropdownToggle caret={true} size=\"sm\" className=\"cursor-pointer\">\r\n                <i className={classNames('fa', 'fa-'+(icon||'ellipsis-v'))} />\r\n            </DropdownToggle>\r\n            <DropdownMenu right={isRight}>\r\n                {actions.map((v,index) => {\r\n                    let {icon, caption, action} = v;\r\n                    if (icon === undefined && caption === undefined) \r\n                        return <div className=\"dropdown-divider\" />;\r\n                    let i;\r\n                    if (hasIcon === true) {\r\n                        if (icon !== undefined) icon = 'fa-' + icon;\r\n                        i = <><i className={classNames('fa', icon, 'fa-fw')} aria-hidden={true}></i>&nbsp; </>;\r\n                    }\r\n                    if (action === undefined) \r\n                        return <h6 className=\"dropdown-header\">{i} {caption}</h6>;\r\n                    return <DropdownItem key={index} onClick={action}>{i} {caption}</DropdownItem>\r\n                })}\r\n            </DropdownMenu>\r\n        </UncontrolledButtonDropdown>\r\n    }\r\n}\r\n*/","import * as React from 'react';\r\n\r\nexport interface EasyDateProps {\r\n    date: Date;\r\n}\r\n\r\nfunction renderDate(date:Date, withTime:boolean) {\r\n    if (!date) return null;\r\n    if (typeof date === 'string') date = new Date(date);\r\n\r\n    let now = new Date();\r\n    let tick:number, nDate:number, _date:number, month:number, year:number, hm:string, nowYear:number;\r\n    let d = date;\r\n    tick = now.getTime() - d.getTime();\r\n    let hour=d.getHours(), minute=d.getMinutes();\r\n    nDate=now.getDate();\r\n    _date=d.getDate();\r\n    month=d.getMonth()+1;\r\n    year=d.getFullYear();\r\n    nowYear = now.getFullYear();\r\n    hm = withTime === true? ' ' + hour + ((minute<10?':0':':') + minute) : '';\r\n\r\n    if (tick < -24*3600*1000) {\r\n        if (year === nowYear)\r\n            return month+'月'+_date+'日' + hm;\r\n        else\r\n            return year+'年'+month+'月'+_date+'日' + hm;\r\n    }\r\n    if (tick < 24*3600*1000) {\r\n        return _date!==nDate? \r\n            (tick < 0? '明天 ' : '昨天 ') + hm \r\n            : withTime===true? hm : '今天';\r\n    }\r\n    if (year === nowYear) {\r\n        return month+'月'+_date+'日';\r\n    }\r\n    return year+'年'+month+'月'+_date+'日';\r\n}\r\n\r\n\r\nexport class EasyDate extends React.Component<EasyDateProps> {\r\n    render() {\r\n        return renderDate(this.props.date, false);\r\n    }\r\n}\r\n\r\nexport class EasyTime extends React.Component<EasyDateProps> {\r\n    render() {\r\n        return renderDate(this.props.date, false);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Image } from '../ui';\r\n\r\nexport interface MediaProps {\r\n    icon: string;\r\n    main: string|JSX.Element;\r\n    discription?: string | JSX.Element;\r\n    px?: number;\r\n    py?: number;\r\n}\r\n\r\nexport class Media extends React.Component<MediaProps> {\r\n    render() {\r\n        let {icon, main, discription, px, py} = this.props;\r\n        let disp:any;\r\n        if (typeof discription === 'string')\r\n            disp = <div>{discription}</div>;\r\n        else\r\n            disp = discription;\r\n        let cn = classNames(\r\n            'media', \r\n            px===undefined? 'px-0':'px-'+px, \r\n            py===undefined? 'py-2':'py-'+py);\r\n        return <div className={cn}>\r\n            <Image className=\"mr-3 w-4c h-4c\" src={icon} />\r\n            <div className=\"media-body\">\r\n                <h5 className=\"mt-0\">{main}</h5>\r\n                {disp}\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\n\r\nexport interface SearchBoxProps {\r\n    className?: string;\r\n    label?: string;\r\n    initKey?: string;\r\n    placeholder?: string;\r\n    buttonText?: string;\r\n    maxLength?: number;\r\n    size?: 'sm' | 'md' | 'lg';\r\n    inputClassName?: string;\r\n    onSearch: (key:string)=>Promise<void>;\r\n    onFocus?: ()=>void;\r\n    allowEmptySearch?: boolean;\r\n}\r\n\r\n/*\r\nexport interface SearchBoxState {\r\n    disabled: boolean;\r\n}*/\r\n\r\nexport class SearchBox extends React.Component<SearchBoxProps> { //}, SearchBoxState> {\r\n    private input: HTMLInputElement;\r\n    private key: string = null;\r\n    @observable private disabled: boolean;\r\n\r\n    private onChange = (evt: React.ChangeEvent<any>) => {\r\n        this.key = evt.target.value;\r\n        if (this.key !== undefined) {\r\n            this.key = this.key.trim();\r\n            if (this.key === '') this.key = undefined;\r\n        }\r\n        if (this.props.allowEmptySearch !== true) {\r\n            this.disabled = !this.key;\r\n        }\r\n    }\r\n    private onSubmit = async (evt: React.FormEvent<any>) => {\r\n        evt.preventDefault();\r\n        if (this.key === null) this.key = this.props.initKey || '';\r\n        if (this.props.allowEmptySearch !== true) {\r\n            if (!this.key) return;\r\n            if (this.input) this.input.disabled = true;\r\n        }\r\n        await this.props.onSearch(this.key);\r\n        if (this.input) this.input.disabled = false;\r\n    }\r\n    clear() {\r\n        if (this.input) this.input.value = '';\r\n    }\r\n    render() {\r\n        let {className, inputClassName, onFocus,\r\n            label, placeholder, buttonText, maxLength, size} = this.props;\r\n        let inputSize:string;\r\n        switch (size) {\r\n            default:\r\n            case 'sm': inputSize = 'input-group-sm'; break;\r\n            case 'md': inputSize = 'input-group-md'; break;\r\n            case 'lg': inputSize = 'input-group-lg'; break;\r\n        }\r\n        let lab:any;\r\n        if (label !== undefined) lab = <label className=\"input-group-addon\">{label}</label>;\r\n        return <form className={className} onSubmit={this.onSubmit} >\r\n            <div className={classNames(\"input-group\", inputSize)}>\r\n                {lab}\r\n                <input ref={v=>this.input=v} onChange={this.onChange}\r\n                    type=\"text\"\r\n                    name=\"key\"\r\n                    onFocus={onFocus}\r\n                    className={classNames('form-control', inputClassName || 'border-primary')}\r\n                    placeholder={placeholder}\r\n                    defaultValue={this.props.initKey}\r\n                    maxLength={maxLength} />\r\n                <div className=\"input-group-append\">\r\n                    <button className=\"btn btn-primary\"\r\n                        type=\"submit\"\r\n                        disabled={this.disabled}>\r\n                        <i className='fa fa-search' />\r\n                        <i className=\"fa\"/>\r\n                        {buttonText}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </form>;\r\n    }\r\n}\r\n","import {observable, computed} from 'mobx';\r\n\r\nexport interface Id {\r\n    id: number;\r\n}\r\n\r\nexport abstract class CacheIds<T extends Id> {\r\n    constructor(maxCount:number = 100) {\r\n        this.maxCount = maxCount;\r\n    }\r\n    private maxCount:number;\r\n    private arr:T[] = [];\r\n    @observable dict = new Map<number, T>();\r\n\r\n    loadIds(ids:number[]) {\r\n        let arr:number[] = [];\r\n        for (let id of ids) {\r\n            if (id === null) continue;\r\n            let item = this.dict.get(id);\r\n            if (item === undefined) {\r\n                arr.push(id);\r\n                item = {id:id} as T;\r\n                this.dict.set(id, item);\r\n            }\r\n        }                \r\n        this.loadId(arr);\r\n    }\r\n\r\n    get(id:number):T {\r\n        if (id === undefined || id === null) return null;\r\n        let item = this.dict.get(id);\r\n        if (item === undefined) {\r\n            this.dict.set(id, {id:id} as T);\r\n            this.loadId([id]);\r\n            item = this.dict.get(id);\r\n        }\r\n        return item;\r\n    }\r\n    private setItem(id:number, item:T) {\r\n        if (item === undefined) {\r\n            this.dict.set(id, null);\r\n            this.arr.push({id: id} as T);\r\n        }\r\n        else {\r\n            this.dict.set(id, item);\r\n            this.arr.push(item);\r\n        }\r\n        if (this.arr.length > this.maxCount) {\r\n            item = this.arr.shift();\r\n            this.dict.delete(item.id);\r\n        }\r\n    }\r\n    private async loadId(ids:number[]) {\r\n        let items = await this._loadIds(ids);\r\n        if (items === undefined) {\r\n            for (let id of ids) {\r\n                if (id === null) continue;\r\n                let item = await this._loadId(id);\r\n                this.setItem(id, item);\r\n            }\r\n        }\r\n        else {\r\n            for (let id of ids) {\r\n                let item = items.find(v => v.id === id);\r\n                this.setItem(id, item);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected abstract async _loadIds(ids:number[]):Promise<T[]>;\r\n    protected abstract async _loadId(id:number):Promise<T>;\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {FormView, FormProps} from './formView';\r\n\r\nexport function tonvaDebug() {\r\n    let a = 0;\r\n}\r\n\r\nexport interface TonvaFormProps extends FormProps {\r\n    className?: string;\r\n    initValues?: any;\r\n}\r\n\r\n@observer \r\nexport class TonvaForm extends React.Component<TonvaFormProps, {}> {\r\n    formView: FormView;\r\n    constructor(props:TonvaFormProps) {\r\n        super(props);\r\n        this.formView = new FormView(this.props);\r\n    }\r\n    componentWillMount() {\r\n        this.formView.setInitValues(this.props.initValues);\r\n    }\r\n    debug() {\r\n        let s = null;\r\n    }\r\n    render() {\r\n        let {className, children, initValues} = this.props;\r\n        return <div className={className}>\r\n            {\r\n                children === undefined? \r\n                    this.formView.render() : \r\n                    <form onSubmit={this.formView.onSubmit}>{children}</form>\r\n            }\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport className from 'classnames';\r\nimport {FormProps, FormRow, SubmitResult, FormView, TonvaForm} from '../form';\r\n\r\nexport interface Step {\r\n    formRows: FormRow[];\r\n    next: undefined | string | ((values:any) => string);    // 返回下一步的step名称或者直接就是名称\r\n    ex?: any;                                   // 每一步额外的参数\r\n}\r\n\r\nexport interface MultiStepProps {\r\n    className?: string;\r\n    header?: (step:Step, num:number) => JSX.Element; //name: step name, num: 第几步，1开始\r\n    footer?: (step:Step, num:number) => JSX.Element; //name: step name, num: 第几步，1开始\r\n    steps: {[name:string]: Step};\r\n    first: string;         // 第一步的名字\r\n    onSubmit: (values:any) => Promise<SubmitResult|undefined>;\r\n    submitButton?: string|JSX.Element;\r\n}\r\n\r\nexport interface StepView {\r\n    stepName: string;\r\n    step: Step;\r\n    props: FormProps;\r\n    //view: JSX.Element;\r\n}\r\nexport interface MultiStepState {\r\n    //num: number;\r\n    //step: Step;\r\n    //formView: FormView;\r\n    topView: StepView;\r\n    stepViews: StepView[];\r\n}\r\n\r\nexport class MultiStep extends React.Component<MultiStepProps, MultiStepState> {\r\n    private values: any = {};\r\n    private stepViews: StepView[] = [];\r\n    private topView: StepView;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            topView: undefined,\r\n            stepViews: [],\r\n        }\r\n        this.onPrev = this.onPrev.bind(this);\r\n        this.onNext = this.onNext.bind(this);\r\n    }\r\n    \r\n    private setStep(stepName: string) {\r\n        let step = this.props.steps[stepName];\r\n        if (step === undefined) return; //throw new Error('Unknown step name: ' + stepName);\r\n        if (this.topView !== undefined) this.stepViews.push(this.topView);\r\n        let otherButton, onOther;\r\n        if (this.stepViews.length > 0) {\r\n            otherButton = <ButtonConten prefix=\"undo\" text=\"上一步\" />;\r\n            onOther = this.onPrev;\r\n        }\r\n        let {header, footer} = this.props;\r\n        let btnContent = step.next === undefined?\r\n            {prefix: 'cloud-upload', text: this.props.submitButton || '提交'} :\r\n            {suffix: 'arrow-right', text: '下一步'}\r\n        let formProps = {\r\n            formRows: step.formRows,\r\n            submitButton: <ButtonConten {...btnContent} />,\r\n            onSubmit: this.onNext,\r\n            otherButton: otherButton,\r\n            onOther: onOther,\r\n        };\r\n        let num = this.stepViews.length + 1;\r\n        this.topView = {\r\n            stepName: stepName,\r\n            step: step,\r\n            props: formProps,\r\n        };\r\n        this.setState({\r\n            topView: this.topView,\r\n            stepViews: this.stepViews\r\n        });\r\n    }\r\n    componentWillMount() {\r\n        this.setStep(this.props.first);\r\n    }\r\n    private onPrev(values:any) {\r\n        _.assign(this.values, values);\r\n        this.topView = this.stepViews.pop();\r\n        this.setState({\r\n            topView: this.topView,\r\n            stepViews: this.stepViews\r\n        });\r\n    }\r\n    private onNext(values:any): Promise<SubmitResult|undefined> {\r\n        _.assign(this.values, values);\r\n        //let {num, step} = this.state;\r\n        let {next} = this.topView.step;\r\n        if (next === undefined) {\r\n            return this.props.onSubmit(this.values)\r\n        }\r\n        let nextStepName:string;\r\n        if (typeof next === 'string') {\r\n            nextStepName = next;\r\n        }\r\n        else {\r\n            nextStepName = next(this.values);\r\n        }\r\n        this.setStep(nextStepName);\r\n    }\r\n    render() {\r\n        let {className, header, footer} = this.props;\r\n        let {topView, stepViews} = this.state;\r\n        let {stepName, step} = topView;\r\n        let hidden = {visibility: 'hidden'};\r\n        let num = stepViews.length + 1;\r\n        return <div className={className}>\r\n            <div>\r\n                {header && header(step, num)}\r\n                <TonvaForm key={stepName} initValues={this.values} {...topView.props} />\r\n                {footer && footer(step, num)}\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst ButtonConten = (props:{prefix?:string, text?:string|JSX.Element, suffix?:string}) => {\r\n    let {prefix, text, suffix} = props;\r\n    let pIcon, sIcon;\r\n    if (prefix !== undefined) pIcon = <i className={className('fa', 'fa-' + prefix)} />;\r\n    if (suffix !== undefined) sIcon = <i className={className('fa', 'fa-' + suffix)} />;\r\n    return <React.Fragment>{pIcon} {props.text} {sIcon}</React.Fragment>;\r\n}\r\n    \r\n","import _ from 'lodash';\r\nimport { Context } from '../context';\r\nimport { FormRes } from '../formRes';\r\n\r\nexport abstract class Rule {\r\n    abstract check(defy:string[], value:any):void;\r\n}\r\n\r\nexport type ContextRule = (context:Context)=>{[target:string]:string[]|string} | string[] | string;\r\nexport type FieldRule = (value:any) => string[] | string;\r\n\r\nexport class RuleCustom extends Rule {\r\n    private func: FieldRule;\r\n    constructor(func: FieldRule) {\r\n        super();\r\n        this.func = func;\r\n    }\r\n    check(defy:string[], value:any) {\r\n        let ret = this.func(value);\r\n        if (ret === undefined) return;\r\n        switch (typeof ret) {\r\n            case 'undefined': return;\r\n            case 'string': defy.push(ret as string); return;\r\n            default: defy.push(...ret); return;\r\n        }        \r\n    }\r\n}\r\n\r\nexport abstract class RulePredefined extends Rule {\r\n    protected res: FormRes;\r\n    constructor(res: FormRes) {\r\n        super();\r\n        this.res = res;\r\n    }\r\n}\r\n\r\nexport class RuleRequired extends RulePredefined {\r\n    check(defy:string[], value:any) {\r\n        switch (typeof value) {\r\n            default:\r\n            case 'boolean': return;\r\n            case 'object':\r\n                if (value !== null) return;\r\n                break;\r\n            case 'string':\r\n                if ((value as string).trim().length > 0) return;\r\n                break;\r\n            case 'number':\r\n                if ((value as number) !== NaN) return;\r\n                break;\r\n            case 'undefined':\r\n                break;\r\n        }\r\n        defy.push(this.res.required);\r\n    }\r\n}\r\n\r\nexport class RuleNum extends RulePredefined {\r\n    private minMsg: _.TemplateExecutor;\r\n    private maxMsg: _.TemplateExecutor;\r\n    protected min: number;\r\n    protected max: number\r\n    constructor(res: FormRes, min?: number, max?: number) {\r\n        super(res);\r\n        this.minMsg = _.template(res.min);\r\n        this.maxMsg = _.template(res.max);\r\n        this.min = min;\r\n        this.max = max;\r\n    }\r\n    check(defy:string[], value:any) {\r\n        if (value === undefined || value === null) return;\r\n        let n = Number(value);\r\n        if (n === NaN) {\r\n            defy.push(this.res.number);\r\n        }\r\n        else {\r\n            this.checkMore(defy, n);\r\n        }\r\n    }\r\n\r\n    protected checkMore(defy:string[], value: number) {\r\n        if (this.min !== undefined && Number(value) < this.min) {\r\n            defy.push(this.minMsg({min:this.min}));\r\n        }\r\n        if (this.max !== undefined && Number(value) > this.max) {\r\n            defy.push(this.maxMsg({max:this.max}));\r\n        }\r\n    }\r\n}\r\n\r\nexport class RuleInt extends RuleNum {\r\n    protected checkMore(defy:string[], n: number) {\r\n        super.checkMore(defy, n);\r\n        if (Number.isInteger(n) === false) {\r\n            defy.push(this.res.integer);\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { UiItem, ChangingHandler, ChangedHandler } from '../../schema';\r\nimport { FieldProps } from '../field';\r\nimport { Context } from '../context';\r\nimport { ItemSchema } from '../../schema';\r\nimport { Rule, RuleRequired, RuleCustom, FieldRule } from '../rules';\r\nimport { computed, observable, reaction } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport abstract class Widget {\r\n    protected name: string;\r\n    protected context: Context;\r\n    protected fieldProps:FieldProps;\r\n    protected children: React.ReactNode;\r\n    protected itemSchema: ItemSchema;\r\n    protected ui: UiItem;\r\n    protected defaultValue: any;\r\n    protected value: any;\r\n    protected rules: Rule[];\r\n    @observable protected errors: string[] = [];\r\n    @observable protected contextErrors: string[] = [];\r\n    @computed protected get hasError():boolean {return (this.errors.length + this.contextErrors.length)>0}\r\n    protected readOnly:boolean;\r\n    protected disabled:boolean;\r\n    @observable visible:boolean;\r\n\r\n    constructor(context:Context, itemSchema:ItemSchema, fieldProps:FieldProps, children: React.ReactNode) {\r\n        this.context = context;\r\n        let {name} = itemSchema;\r\n        this.name = name;\r\n        this.itemSchema = itemSchema;\r\n        this.fieldProps = fieldProps;\r\n        this.children = children;\r\n        this.ui = context.getUiItem(name);\r\n        if (this.ui === undefined) {\r\n            this.readOnly = false;\r\n            this.disabled = false;\r\n            this.visible = true;\r\n        }\r\n        else {\r\n            let {readOnly, disabled, visible} = this.ui;\r\n            this.readOnly = (readOnly === true);\r\n            this.disabled = (disabled === true);\r\n            this.visible = !(visible === false);            \r\n        }\r\n        this.value = this.defaultValue =  context.getValue(name); //defaultValue;\r\n        this.init();\r\n    }\r\n\r\n    protected init() {\r\n        this.rules = [];\r\n        if (this.itemSchema.required === true) {\r\n            this.rules.push(new RuleRequired(this.context.form.res));\r\n        }\r\n        this.buildRules();\r\n        if (this.ui === undefined) return;\r\n        let {rules} = this.ui;\r\n        if (rules === undefined) return;\r\n        if (Array.isArray(rules) === false) {\r\n            this.rules.push(new RuleCustom(rules as FieldRule));\r\n            return;\r\n        }\r\n        for (let rule of rules as FieldRule[]) {\r\n            this.rules.push(new RuleCustom(rule));\r\n        }\r\n    }\r\n\r\n    protected buildRules() {\r\n    }\r\n\r\n    checkRules() {\r\n        let defy:string[] = [];\r\n        for (let r of this.rules) r.check(defy, this.value);\r\n        if (defy.length === 0) {\r\n            this.context.removeErrorWidget(this);\r\n        }\r\n        else {\r\n            this.context.addErrorWidget(this);\r\n            this.errors.push(...defy);\r\n        }\r\n    }\r\n\r\n    @computed get isOk() {\r\n        return this.errors.length ===0;\r\n    }\r\n\r\n    setError(err:string | string[]) {\r\n        if (err === undefined) return;\r\n        if (typeof err === 'string') this.errors.push(err);\r\n        else this.errors.push(...err);\r\n    }\r\n\r\n    setContextError(err:string | string[]) {\r\n        if (err === undefined) return;\r\n        if (typeof err === 'string') this.contextErrors.push(err);\r\n        else this.contextErrors.push(...err);\r\n    }\r\n\r\n    clearError() {\r\n        this.errors.splice(0);\r\n    }\r\n\r\n    clearContextError() {\r\n        this.contextErrors.splice(0);\r\n    }\r\n\r\n    protected parse(value:any):any {return value}\r\n\r\n    protected setElementValue(value:any) {}\r\n    protected setDataValue(value:any) {\r\n        if (this.isChanging === true) return;\r\n        this.context.initData[this.name] = this.value = this.parse(value);\r\n    }\r\n\r\n    setValue(value:any) {\r\n        if (this.isChanging === true) return;\r\n        //this.setDataValue(value);\r\n        //this.setElementValue(value);\r\n        this.changeValue(value, false);\r\n    }\r\n\r\n    getValue() {\r\n        return this.context.getValue(this.name);\r\n    }\r\n\r\n    getReadOnly():boolean {return this.readOnly}\r\n    getDisabled():boolean {return this.disabled}\r\n    getVisible():boolean {return this.visible}\r\n    setReadOnly(value:boolean) {this.readOnly = value}\r\n    setDisabled(value:boolean) {this.disabled = value}\r\n    setVisible(value:boolean) {this.visible = value}\r\n\r\n    private isChanging: boolean;\r\n    protected onInputChange = (evt: React.ChangeEvent<any>) => {\r\n        this.changeValue(evt.target.value, true);\r\n    }\r\n\r\n    protected changeValue(newValue: any, fromElement: boolean) {\r\n        let prev = this.value;\r\n        let onChanging: ChangingHandler;\r\n        let onChanged: ChangedHandler;\r\n        if (this.ui !== undefined) {\r\n            onChanging = this.ui.onChanging;\r\n            onChanged = this.ui.onChanged;\r\n        }\r\n        let allowChange = true;\r\n        if (onChanging !== undefined) {\r\n            this.isChanging = true;\r\n            allowChange = onChanging(this.context, this.value, prev);\r\n            this.isChanging = false;\r\n        }\r\n        if (allowChange === true) {\r\n            this.setDataValue(newValue);\r\n            if (fromElement !== true) this.setElementValue(newValue);\r\n            if (onChanged !== undefined) {\r\n                this.isChanging = true;\r\n                onChanged(this.context, this.value, prev);\r\n                this.isChanging = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    protected get className():string {\r\n        let fieldClass:string;\r\n        if (this.context.inNode === false) fieldClass = 'form-control';\r\n        return classNames(fieldClass, this.context.form.FieldClass, this.ui && this.ui.className);\r\n    }\r\n\r\n    protected abstract render():JSX.Element;\r\n\r\n    container = observer(():JSX.Element => {\r\n        if (this.visible === false) return null;\r\n        let {form, inNode} = this.context;\r\n        if (inNode === true) return this.render();\r\n        let label:any = this.label;\r\n        if (this.itemSchema.required === true && form.props.requiredFlag !== false) {\r\n            if (label !== null) label = <>{label}&nbsp;<span className=\"text-danger\">*</span></>;\r\n        }\r\n        return form.FieldContainer(label, this.render());\r\n    })\r\n\r\n    protected get label():string {\r\n        let label:any;\r\n        if (this.ui === undefined) {\r\n            label = this.name;\r\n        }\r\n        else {\r\n            let uiLabel = this.ui.label;\r\n            if (uiLabel === null) label = null;\r\n            else label = uiLabel || this.name;\r\n        }\r\n        return label;\r\n    }\r\n\r\n    protected renderTemplet():JSX.Element | undefined {\r\n        if (this.children !== undefined) {\r\n            return <>{this.children}</>;\r\n        }\r\n        if (this.ui === undefined) return undefined;\r\n        let {Templet} = this.ui;\r\n        if (typeof Templet === 'function') return Templet(this.value);\r\n        return Templet;\r\n    }\r\n\r\n    protected renderErrors() {\r\n        let errorList:string[] = [...this.errors, ...this.contextErrors];\r\n        if (errorList.length === 0) return null;\r\n        let {inNode} = this.context;\r\n        let tag = inNode === true? 'span' : 'div';\r\n        return errorList.map(err => React.createElement(tag, \r\n            {\r\n                key: err, \r\n                className: 'text-danger d-inline-block my-2 ml-3'\r\n            },\r\n            <><i className=\"fa fa-exclamation-circle\" /> &nbsp;{err}</>\r\n        ));\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiTextItem, StringSchema } from '../../schema';\r\n\r\nexport class TextWidget extends Widget {\r\n    protected inputType = 'text';\r\n    protected ui: UiTextItem;\r\n    protected input: HTMLInputElement;\r\n\r\n    protected setElementValue(value:any) {\r\n        if (this.input === null) return;\r\n        this.input.value = value;\r\n    }\r\n    protected get placeholder() {return (this.ui && this.ui.placeholder) || this.name}\r\n    protected onKeyDown = async (evt:React.KeyboardEvent<HTMLInputElement>) => {\r\n        this.internalOnKeyDown(evt);\r\n        if (evt.keyCode !== 13) return;\r\n        let {onEnter} = this.context.form.props;\r\n        if (onEnter === undefined) return;\r\n\r\n        this.changeValue(evt.currentTarget.value, true);\r\n\r\n        //this.checkRules();\r\n        //this.context.checkContextRules();\r\n        this.input.blur();\r\n\r\n        let ret = await onEnter(this.name, this.context);\r\n        if (ret !== undefined) {\r\n            this.context.setError(this.name, ret);\r\n        }\r\n    }\r\n\r\n    protected internalOnKeyDown(evt:React.KeyboardEvent<HTMLInputElement>) {\r\n    }\r\n\r\n    protected onBlur(evt: React.FocusEvent<any>) {\r\n        this.onInputChange(evt);\r\n        this.checkRules();\r\n        this.context.checkContextRules();\r\n    }\r\n    protected onFocus(evt: React.FocusEvent<any>) {\r\n        this.clearError();\r\n        this.context.removeErrorWidget(this);\r\n        this.context.clearErrors();\r\n    }\r\n    protected onChange(evt: React.ChangeEvent<any>) {\r\n    }\r\n\r\n    setReadOnly(value:boolean) {\r\n        if (this.input === null) return;\r\n        this.input.readOnly = this.readOnly = value;\r\n    }\r\n    setDisabled(value:boolean) {\r\n        if (this.input === null) return;\r\n        this.input.disabled = this.disabled = value;\r\n    }\r\n\r\n    render() {\r\n        let renderTemplet = this.renderTemplet();\r\n        if (renderTemplet !== undefined) return renderTemplet;\r\n        let cn = {\r\n            //'form-control': true,\r\n        };\r\n        if (this.hasError === true) {\r\n            cn['is-invalid'] = true;\r\n        }\r\n        else {\r\n            cn['required-item'] = this.itemSchema.required === true;\r\n        }\r\n        return <><input ref={input=>this.input = input}\r\n            className={classNames(this.className, cn)}\r\n            type={this.inputType}\r\n            defaultValue={this.value}\r\n            onChange={(evt: React.ChangeEvent<any>) => this.onChange(evt)}\r\n            placeholder={this.placeholder}\r\n            readOnly={this.readOnly}\r\n            disabled={this.disabled}\r\n            onKeyDown = {this.onKeyDown}\r\n            onFocus = {(evt: React.FocusEvent<any>) => this.onFocus(evt)}\r\n            onBlur={(evt: React.FocusEvent<any>) => this.onBlur(evt)}\r\n            maxLength={(this.itemSchema as StringSchema).maxLength} />\r\n            {this.renderErrors()}\r\n        </>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { TextWidget } from './textWidget';\r\nimport { RuleNum, RuleInt } from '../rules';\r\nimport { NumBaseSchema } from '../../schema';\r\n\r\nexport class NumberWidget extends TextWidget {\r\n    protected inputType = 'number';\r\n    protected itemSchema: NumBaseSchema;\r\n\r\n    protected buildRules() {\r\n        super.buildRules();\r\n        let res = this.context.form.res;\r\n        let {min, max} = this.itemSchema;\r\n        this.rules.push(\r\n            this.itemSchema.type === 'integer'?\r\n                new RuleNum(res, min, max) :\r\n                new RuleInt(res, min, max)\r\n        );\r\n        /*\r\n        if (this.itemSchema.type === 'integer') {\r\n            this.rules.push(new RuleInt);\r\n        }\r\n        let {min, max} = this.itemSchema;\r\n        if (min !== undefined) this.rules.push(new RuleMin(min));\r\n        if (max !== undefined) this.rules.push(new RuleMax(max));\r\n        */\r\n    }\r\n\r\n    protected parse(value:any):any {\r\n        if (value === undefined || value === null) return;\r\n        return Number(value);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { NumberWidget } from './numberWidget';\r\n\r\nexport class UpdownWidget extends NumberWidget {\r\n    protected inputType = 'number';\r\n\r\n    protected isValidKey(key:number):boolean {\r\n        return key===46 || key===8 || key===37 || key===39\r\n            || key>=48 && key<=57\r\n            || key>=96 && key<=105\r\n            || key===109 || key===189;\r\n    }\r\n    \r\n    protected internalOnKeyDown(evt:React.KeyboardEvent<HTMLInputElement>) {\r\n        let key = evt.keyCode;\r\n        event.returnValue = this.isValidKey(key);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { TextWidget } from './textWidget';\r\n\r\nexport class DateWidget extends TextWidget {\r\n    protected inputType = 'date';\r\n}\r\n\r\nexport class DateTimeWidget extends TextWidget {\r\n    protected inputType = 'datetime';\r\n}\r\n\r\nexport class TimeWidget extends TextWidget {\r\n    protected inputType = 'time';\r\n}\r\n\r\nexport class MonthWidget extends TextWidget {\r\n    protected inputType = 'month';\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiCheckItem } from '../../schema';\r\n\r\nexport class CheckBoxWidget extends Widget {\r\n    protected input: HTMLInputElement;\r\n    protected ui: UiCheckItem;\r\n    protected trueValue: any;\r\n    protected falseValue: any;\r\n\r\n    protected init() {\r\n        super.init();\r\n        if (this.ui !== undefined) {\r\n            let {trueValue, falseValue} = this.ui;\r\n            if (trueValue === undefined) this.trueValue = true;\r\n            else this.trueValue = trueValue;\r\n            if (falseValue === undefined) this.falseValue = false;\r\n            else this.falseValue = falseValue;\r\n        }\r\n        else {\r\n            this.trueValue = true;\r\n            this.falseValue = false;\r\n        }\r\n    }\r\n    protected setElementValue(value:any) {\r\n        this.input.checked = value === this.trueValue;\r\n    }\r\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\r\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\r\n\r\n    protected onInputChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setDataValue(evt.target.checked === true? this.trueValue : this.falseValue);\r\n    }\r\n\r\n    protected onClick = () => {\r\n        this.context.clearErrors();\r\n    }\r\n\r\n    render() {\r\n        let cn = classNames(this.className, 'form-check-inline p-0');\r\n        let input = <input\r\n            ref={(input)=>this.input = input}\r\n            className={'align-self-center'}\r\n            type=\"checkbox\"\r\n            defaultChecked={this.defaultValue} \r\n            onChange={this.onInputChange}\r\n            onClick={this.onClick} />;\r\n        if (this.context.inNode === true) {\r\n            return <label className={cn}>\r\n                {input} {(this.ui&&this.ui.label) || this.name}\r\n            </label>\r\n        }\r\n        else {\r\n            return <div className={cn}>\r\n                <label className=\"w-100 h-100 mb-0 d-flex justify-content-center\">{input}</label>\r\n            </div>;\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\nimport { Widget } from './widget';\r\nimport { UiSelect } from '../../schema';\r\n\r\nexport class SelectWidget extends Widget {\r\n    protected select: HTMLSelectElement;\r\n    protected ui: UiSelect;\r\n    @observable protected readOnly: boolean;\r\n\r\n    protected setElementValue(value:any) {this.select.value = value}\r\n    protected onInputChange = (evt:React.ChangeEvent<HTMLSelectElement>) => {\r\n        this.setDataValue(evt.target.value);\r\n    }\r\n\r\n    setReadOnly(value:boolean) {this.select.disabled = this.readOnly = !value}\r\n    setDisabled(value:boolean) {this.select.disabled = this.disabled = value}\r\n\r\n    render() {\r\n        if (this.readOnly === true) {\r\n            let option = this.ui.list.find(v => v.value === this.value);\r\n            let title = (option === undefined)? '(???)' : option.title;\r\n            return <span className=\"form-control w-min-6c\">{title}</span>;\r\n        }\r\n        return <select\r\n            ref={(select)=>this.select = select}\r\n            className={classNames(this.className, 'form-control')}\r\n            defaultValue={this.defaultValue} \r\n            onChange={this.onInputChange}>\r\n            {this.ui.list.map((v,index) => {\r\n                let {title, value} = v;\r\n                let cn:string;\r\n                //if (value === undefined || value === null) cn = 'text-light small';\r\n                //else cn = 'text-danger';\r\n                return <option className={cn} key={index} value={value}>{title || value}</option>\r\n            })}\r\n        </select>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { TextWidget } from './textWidget';\r\nimport { Widget } from './widget';\r\nimport { UiRadio } from '../../schema';\r\nimport { RowContext } from '../context';\r\n\r\n\r\nconst radioStyle:React.CSSProperties = {height: 'auto'};\r\n\r\nexport class RadioWidget extends Widget {\r\n    protected inputs: {[index:number]: HTMLInputElement} = {};\r\n    protected ui: UiRadio;\r\n\r\n    protected setElementValue(value:any) {\r\n        for (let i in this.inputs) {\r\n            let input = this.inputs[i];\r\n            input.checked = value === input.value;\r\n        }\r\n    }\r\n    setReadOnly(value:boolean) {\r\n        this.readOnly = value;\r\n        for (let i in this.inputs) this.inputs[i].readOnly = value;\r\n    }\r\n    setDisabled(value:boolean) {\r\n        this.disabled = value;\r\n        for (let i in this.inputs) this.inputs[i].disabled = value\r\n    }\r\n\r\n    /*\r\n    protected onInputChange = (evt: React.ChangeEvent<any>) => {\r\n        this.changeValue(evt.target.value, true);\r\n    }\r\n    */\r\n\r\n    render() {\r\n        let {defaultValue, list} = this.ui;\r\n        let {isRow, inNode} = this.context;\r\n        let rowKey:number;\r\n        if (isRow === true) {\r\n            rowKey = (this.context as RowContext).rowKey;\r\n        }\r\n        let cn = classNames(this.className, 'py-0');\r\n        return <span className={cn} style={radioStyle}>\r\n                {list.map((v,index) => {\r\n                    let {value, title} = v;\r\n                    let name = this.name;\r\n                    if (rowKey !== undefined) name += '-' + rowKey;\r\n                    return <label key={index} className=\"form-radio-inline\">\r\n                        <input ref={input=>this.inputs[index]=input} type=\"radio\" name={name}\r\n                            value={value} defaultChecked={(this.defaultValue || defaultValue)===value}\r\n                            onChange={this.onInputChange} />\r\n                        {title || value}\r\n                    </label>;\r\n                    //</span>\r\n                })}\r\n            </span>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiIdItem, TempletType } from '../../schema';\r\nimport { observable } from 'mobx';\r\n\r\nexport class IdWidget extends Widget {\r\n    protected ui: UiIdItem;\r\n    @observable protected value:number;\r\n    setReadOnly(value:boolean) {this.readOnly = value}\r\n    setDisabled(value:boolean) {this.disabled = value}    \r\n\r\n    protected onClick = async () => {\r\n        let pickId = this.ui && this.ui.pickId;\r\n        if (pickId === undefined) {\r\n            alert('no pickId defined!');\r\n            return;\r\n        }\r\n        let id = await pickId(this.context, this.name, this.value);        \r\n        this.setDataValue(id);\r\n        this.clearError();\r\n        this.clearContextError();\r\n        this.checkRules();\r\n    }\r\n\r\n    render() {\r\n        let placeholder:string|JSX.Element, Templet: TempletType;\r\n        if (this.ui !== undefined) {\r\n            placeholder = this.ui.placeholder;\r\n            Templet = this.ui.Templet;\r\n        }\r\n        let cn = {\r\n            'form-control': true,\r\n            'required-item': this.itemSchema.required === true,\r\n            'cursor-pointer': true,\r\n            'is-invalid': this.hasError,\r\n        };\r\n        let content;\r\n        if (this.value === undefined || this.value === null) {\r\n            content = placeholder || 'placeholder';\r\n            cn['text-muted'] = true;\r\n        }\r\n        else if (Templet === undefined) {\r\n            content = <>{this.value}</>;\r\n        }\r\n        else if (typeof Templet === 'function') {\r\n            content = Templet(this.value);\r\n        }\r\n        else {\r\n            content = Templet;\r\n        }\r\n        return <>\r\n            <div className={classNames(cn)} onClick={this.onClick}>{content}</div>\r\n            {this.renderErrors()}\r\n        </>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { DataType } from '../../schema';\r\nimport { UiType } from '../../schema';\r\n\r\nexport const Unknown = (dataType:DataType, uiType:UiType, dataTypes:DataType[]) => {\r\n    return <span className=\"text-danger\">!!data type {dataType} only support {(dataTypes || []).join(', ')}, can't use ui {uiType}!!</span>;\r\n};\r\n","import * as React from 'react';\r\nimport { UiButton, TempletType } from '../../schema';\r\nimport { Unknown } from './unknown';\r\nimport { Widget } from './widget';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class ButtonWidget extends Widget {\r\n    protected ui: UiButton;\r\n\r\n    protected onClick = async () => {\r\n        this.clearError();\r\n        this.clearContextError();\r\n        let {name, type} = this.itemSchema;\r\n        if (type === 'submit') {\r\n            await this.context.submit(name);\r\n        }\r\n        /*\r\n        let {onButtonClick} = this.context.form.props;\r\n        if (onButtonClick === undefined) {\r\n            alert(`button ${name} clicked. you should define form onButtonClick`);\r\n            return;\r\n        }\r\n        let ret = await onButtonClick(name, this.context);\r\n        if (ret === undefined) return;\r\n        this.context.setError(name, ret);\r\n        */\r\n    }\r\n\r\n    private observerRender = observer(() => {\r\n        let {name, type} = this.itemSchema;\r\n        let Templet:TempletType, cn:string, caption:string;\r\n        if (this.ui !== undefined) {\r\n            let {widget:widgetType} = this.ui;\r\n            if (widgetType !== 'button') return Unknown(type, widgetType, ['button']);\r\n            Templet = this.ui.Templet;\r\n            cn = this.ui.className;\r\n            caption = this.ui.label;\r\n        }\r\n        let {form, hasError} = this.context;\r\n        let context = this.context;\r\n        let disabled = type==='submit' && hasError;\r\n        let content:any;\r\n        if (this.children !== undefined) content = this.children;\r\n        else if (typeof Templet === 'function') content = Templet();\r\n        else if (Templet !== undefined) content = Templet;\r\n        else content = caption; \r\n        let button = <button \r\n            className={cn} \r\n            type=\"button\"\r\n            disabled={disabled}\r\n            onClick={this.onClick}>\r\n            {content || name}\r\n        </button>;\r\n        if (context.inNode === true) return <>{button}{this.renderErrors()}</>;\r\n        return <div className={form.ButtonClass}>\r\n            <div>{this.renderErrors()}</div>\r\n            {button}\r\n        </div>;\r\n    });\r\n    \r\n    protected get label():string {return null}\r\n\r\n    render() {\r\n        return <this.observerRender />\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Form } from './form';\r\nimport { UiSchema, UiArr, UiItem } from '../schema';\r\nimport { ArrSchema, ItemSchema } from '../schema';\r\nimport { Widget as Widget } from './widgets/widget';\r\n//import { ArrRow } from './arrRow';\r\nimport { observable, computed } from 'mobx';\r\nimport { ContextRule } from './rules';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport abstract class Context {\r\n    private subContexts:{[name:string]:{[rowKey:string]:Context}};\r\n    readonly form: Form;\r\n    readonly uiSchema: UiSchema;\r\n    readonly initData: any;\r\n    readonly inNode: boolean;           // true: 在</> 流中定义Field\r\n    readonly widgets: {[name:string]: Widget} = {};\r\n    readonly rules: ContextRule[];\r\n    readonly isRow: boolean;\r\n    @observable errors: string[] = [];\r\n    @observable errorWidgets:Widget[] = [];\r\n\r\n    constructor(form: Form, uiSchema: UiSchema, data: any, inNode: boolean, isRow: boolean) {\r\n        this.form = form;\r\n        this.uiSchema = uiSchema;\r\n        this.initData = data;\r\n        this.inNode = inNode;\r\n        this.isRow = isRow;\r\n        if (uiSchema !== undefined) {\r\n            let {rules} = uiSchema;\r\n            if (rules !== undefined) {\r\n                this.rules = [];\r\n                if (Array.isArray(rules) === false)\r\n                    this.rules.push(rules as ContextRule);\r\n                else\r\n                    this.rules.push(...rules as ContextRule[]);\r\n            }\r\n        }\r\n    }\r\n\r\n    getArrRowContexts(arrName: string) {\r\n        if (this.subContexts === undefined) this.subContexts = {};\r\n        let arrRowContexts = this.subContexts[name];\r\n        if (arrRowContexts === undefined) this.subContexts[name] = arrRowContexts = {};\r\n        return arrRowContexts;\r\n    }\r\n\r\n    abstract get data():any;\r\n    abstract getItemSchema(itemName:string):ItemSchema;\r\n    abstract getUiItem(itemName:string):UiItem;\r\n    get arrName():string {return undefined}\r\n    getValue(itemName:string):any {return this.initData[itemName]}\r\n    setValue(itemName:string, value:any) {\r\n        this.initData[itemName] = value;\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setValue(value);\r\n    }\r\n    getDisabled(itemName:string):boolean {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) return widget.getDisabled();\r\n        return undefined;\r\n    }\r\n    setDisabled(itemName:string, value:boolean) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setDisabled(value);\r\n    }\r\n    getReadOnly(itemName:string):boolean {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.getReadOnly();\r\n        return undefined;\r\n    }\r\n    setReadOnly(itemName:string, value:boolean) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setReadOnly(value);\r\n    }\r\n    getVisible(itemName:string):boolean {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.getVisible();\r\n        return undefined;\r\n    }\r\n    setVisible(itemName:string, value:boolean) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setVisible(value);\r\n    }\r\n\r\n    async submit(buttonName: string) {\r\n        this.checkRules()\r\n        if (this.hasError === true) return;\r\n        let {onButtonClick} = this.form.props;\r\n        if (onButtonClick === undefined) {\r\n            alert(`button ${buttonName} clicked. you should define form onButtonClick`);\r\n            return;\r\n        }\r\n        let ret = await onButtonClick(buttonName, this);\r\n        if (ret === undefined) return;\r\n        this.setError(buttonName, ret);\r\n\r\n    }\r\n\r\n    checkFieldRules() {\r\n        for (let i in this.widgets) {\r\n            this.widgets[i].checkRules();\r\n        }\r\n        if (this.subContexts === undefined) return;\r\n        for (let i in this.subContexts) {\r\n            let arrRowContexts = this.subContexts[i];\r\n            for (let j in arrRowContexts) {\r\n                arrRowContexts[j].checkFieldRules();\r\n            }\r\n        }\r\n    }\r\n\r\n    checkContextRules() {\r\n        this.clearErrors();\r\n        if (this.rules === undefined) return;\r\n        for (let rule of this.rules) {\r\n            let ret = rule(this);\r\n            if (ret === undefined) continue;\r\n            if (Array.isArray(ret) === true) {\r\n                this.errors.push(...ret as string[]);\r\n            }\r\n            else if (typeof ret === 'string') {\r\n                this.errors.push(ret as string);\r\n            }\r\n            else {\r\n                for (let i in ret as object) this.setError(i, ret[i]);\r\n            }\r\n        }\r\n        if (this.subContexts === undefined) return;\r\n        for (let i in this.subContexts) {\r\n            let arrRowContexts = this.subContexts[i];\r\n            for (let j in arrRowContexts) {\r\n                let rowContext = arrRowContexts[j];\r\n                rowContext.clearErrors();\r\n                rowContext.checkContextRules();\r\n            }\r\n        }\r\n    }\r\n\r\n    setError(itemName:string, error:string) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget === undefined) return;\r\n        widget.setContextError(error);\r\n        this.addErrorWidget(widget);\r\n    }\r\n\r\n    clearContextErrors() {\r\n        for (let i in this.widgets) {\r\n            let widget = this.widgets[i];\r\n            if (widget === undefined) continue;\r\n            widget.clearContextError();\r\n        }\r\n    }\r\n\r\n    clearWidgetsErrors() {\r\n        for (let i in this.widgets) {\r\n            let widget = this.widgets[i];\r\n            if (widget === undefined) continue;\r\n            widget.clearError();\r\n        }\r\n    }\r\n\r\n    checkRules() {\r\n        this.clearErrors();\r\n        this.clearWidgetsErrors();\r\n        this.checkFieldRules();\r\n        if (this.hasError === true) return;\r\n        this.checkContextRules();\r\n    }\r\n\r\n    addErrorWidget(widget:Widget) {\r\n        let pos = this.errorWidgets.findIndex(v => v === widget);\r\n        if (pos < 0) this.errorWidgets.push(widget);\r\n    }\r\n    removeErrorWidget(widget:Widget) {\r\n        let pos = this.errorWidgets.findIndex(v => v === widget);\r\n        if (pos >= 0) this.errorWidgets.splice(pos, 1);\r\n    }\r\n\r\n    protected checkHasError():boolean {\r\n        let ret = (this.errorWidgets.length + this.errors.length) > 0;\r\n        if (ret === true) return true;\r\n        if (this.subContexts === undefined) return false;\r\n        for (let i in this.subContexts) {\r\n            let arrRowContexts = this.subContexts[i];\r\n            for (let j in arrRowContexts) {\r\n                if (arrRowContexts[j].hasError === true) return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    @computed get hasError():boolean {\r\n        return this.checkHasError();\r\n    };\r\n\r\n    clearErrors() {\r\n        this.errors.splice(0);\r\n        this.errorWidgets.splice(0);\r\n        this.clearContextErrors();\r\n    }\r\n\r\n    renderErrors = observer((): JSX.Element => {\r\n        let {errors} = this;\r\n        if (errors.length === 0) return null;\r\n        return <>\r\n            {errors.map(err => <span key={err} className=\"text-danger inline-block my-1 ml-3\">\r\n                <i className=\"fa fa-exclamation-circle\" /> &nbsp;{err}\r\n            </span>)}\r\n        </>\r\n    });\r\n}\r\n\r\nlet rowKeySeed:number = 1;\r\nexport class RowContext extends Context {\r\n    readonly parentContext: Context;\r\n    readonly arrSchema: ArrSchema;\r\n    readonly uiSchema: UiArr;\r\n    //readonly row: ArrRow;\r\n    readonly rowKey: number;\r\n    readonly data: any;\r\n    constructor(parentContext:Context, arrSchema: ArrSchema, data: any, inNode: boolean) {\r\n        let uiArr:UiArr;\r\n        let {uiSchema} = parentContext;\r\n        if (uiSchema !== undefined) {\r\n            let {items} = uiSchema;\r\n            if (items !== undefined) uiArr = items[arrSchema.name] as UiArr;\r\n        }\r\n        super(parentContext.form, uiArr, data, inNode, true);\r\n        this.parentContext = parentContext;\r\n        this.arrSchema = arrSchema;\r\n        this.rowKey = rowKeySeed++;\r\n        this.data = data;\r\n    }\r\n    getItemSchema(itemName:string):ItemSchema {return this.arrSchema.itemSchemas[itemName]}\r\n    getUiItem(itemName:string):UiItem {\r\n        if (this.uiSchema === undefined) return undefined;\r\n        let {items} = this.uiSchema;\r\n        if (items === undefined) return undefined;\r\n        return items[itemName]\r\n    }\r\n    get arrName():string {return this.arrSchema.name}\r\n    clearErrors() {\r\n        super.clearErrors();\r\n        this.parentContext.clearErrors();\r\n    }\r\n\r\n    get parentData():any {return this.parentContext.data;}\r\n}\r\n\r\nexport class FormContext extends Context {\r\n    constructor(form:Form, inNode:boolean) {\r\n        super(form, form.uiSchema, form.data, inNode, false);\r\n    }\r\n    get data():any {return this.form.data}\r\n    getItemSchema(itemName:string):ItemSchema {return this.form.itemSchemas[itemName]}\r\n    getUiItem(itemName:string):UiItem {\r\n        let {uiSchema} = this.form;\r\n        if (uiSchema === undefined) return undefined;\r\n        let {items} = uiSchema;\r\n        if (items === undefined) return undefined;\r\n        return items[itemName];\r\n    }\r\n}\r\n\r\nexport const ContextContainer = React.createContext<Context>({} as any);\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\n//import { ArrRow } from '../arrRow';\r\nimport { Context, RowContext, ContextContainer } from '../context';\r\nimport { ArrSchema } from '../../schema';\r\nimport { UiArr, TempletType } from '../../schema';\r\nimport { Unknown } from './unknown';\r\nimport { factory } from './factory';\r\n\r\nexport const ArrComponent = observer((\r\n    {parentContext, arrSchema, children}:{parentContext: Context, arrSchema: ArrSchema, children: React.ReactNode}) => \r\n{\r\n    let {name, arr} = arrSchema;\r\n    let data = parentContext.initData[name] as any[];\r\n    let {form} = parentContext;\r\n    let arrRowContexts = parentContext.getArrRowContexts(name);\r\n    let ui = parentContext.getUiItem(name) as UiArr;\r\n    let arrLabel = name;\r\n    let Templet:TempletType;\r\n    let selectable:boolean, deletable:boolean, restorable:boolean;\r\n    let {ArrContainer, RowContainer, RowSeperator, uiSchema} = form;\r\n    if (uiSchema !== undefined) {\r\n        let {selectable:formSelectable, deletable:formDeletable, restorable:formRestorable} = uiSchema;\r\n        if (selectable !== true) selectable = formSelectable;\r\n        if (deletable !== true) deletable = formDeletable;\r\n        if (restorable !== true) restorable = formRestorable;\r\n    }\r\n    if (ui !== undefined) {\r\n        let {widget:widgetType, label, \r\n            selectable:arrSelectable, deletable:arrDeletable, restorable:arrRestorable,\r\n            ArrContainer:ac, RowContainer:rc, RowSeperator:rs\r\n        } = ui;\r\n        if (arrSelectable !== undefined) selectable = arrSelectable;\r\n        if (arrDeletable !== undefined) deletable = arrDeletable;\r\n        if (arrRestorable !== undefined) restorable = arrRestorable;\r\n        if (ac !== undefined) ArrContainer = ac;\r\n        if (rc !== undefined) RowContainer = rc;\r\n        if (rs !== undefined) RowSeperator = rs;\r\n        Templet = ui.Templet;\r\n        if (widgetType !== 'arr') return Unknown(arrSchema.type, widgetType, ['arr']);\r\n        arrLabel = label || arrLabel;\r\n    }\r\n    let first = true;\r\n    return ArrContainer(arrLabel, <>\r\n        {data.map((row:any, index) => {\r\n            let rowContext: RowContext;\r\n            let rowContent: JSX.Element;\r\n            let sep = undefined;\r\n            if (first === false) sep = RowSeperator;\r\n            else first = false;\r\n            if (children !== undefined) {\r\n                rowContext = new RowContext(parentContext, arrSchema, row, true);\r\n                rowContent = <>{children}</>;\r\n            }\r\n            else {\r\n                let typeofTemplet = typeof Templet;\r\n                if (typeofTemplet === 'function') {\r\n                    rowContext = new RowContext(parentContext, arrSchema, row, true);\r\n                    rowContent = React.createElement(observer(Templet as React.StatelessComponent), row);\r\n                }\r\n                else if (typeofTemplet === 'object') {\r\n                    rowContext = new RowContext(parentContext, arrSchema, row, true);\r\n                    rowContent = Templet as JSX.Element;\r\n                }\r\n                else {\r\n                    rowContext = new RowContext(parentContext, arrSchema, row, false);\r\n                    rowContent = <>{\r\n                        arr.map((v, index) => {\r\n                            return <React.Fragment key={v.name}>\r\n                                {factory(rowContext, v, undefined)}\r\n                            </React.Fragment>\r\n                        })}\r\n                    </>;\r\n                }\r\n            }\r\n            let {rowKey} = rowContext;\r\n            arrRowContexts[rowKey] = rowContext;\r\n\r\n            let selectCheck:JSX.Element, deleteIcon:JSX.Element;\r\n            if (selectable === true) {\r\n                let onClick = (evt: React.MouseEvent<HTMLInputElement>)=>{\r\n                    let {checked} = (evt.target as HTMLInputElement);\r\n                    row.$isSelected = checked;\r\n                    let {$source} = row;\r\n                    if ($source !== undefined) $source.$isSelected = checked;\r\n                    rowContext.clearErrors();\r\n                }\r\n                selectCheck = <div className=\"form-row-checkbox\">\r\n                    <input type=\"checkbox\" onClick={onClick} defaultChecked={row.$isSelected} />\r\n                </div>;\r\n            }\r\n            let isDeleted = !(row.$isDeleted===undefined || row.$isDeleted===false);\r\n            if (deletable === true) {\r\n                let icon = isDeleted? 'fa-undo' : 'fa-trash';\r\n                let onDelClick = () => {\r\n                    if (restorable === true) {\r\n                        row.$isDeleted = !isDeleted;\r\n                        let {$source} = row;\r\n                        if ($source !== undefined) $source.$isDeleted = !isDeleted;\r\n                    }\r\n                    else {\r\n                        let p = data.indexOf(row);\r\n                        if (p>=0) data.splice(p, 1);\r\n                    }\r\n                    rowContext.clearErrors();\r\n                }\r\n                deleteIcon = <div className=\"form-row-edit text-info\" onClick={onDelClick}>\r\n                    <i className={classNames('fa', icon, 'fa-fw')} />\r\n                </div>;\r\n            }\r\n            let editContainer = selectable===true || deletable===true?\r\n                (content:any) => <fieldset disabled={isDeleted}><div className={classNames('d-flex', {'deleted':isDeleted, 'row-selected':row.$isSelected})}>\r\n                    {selectCheck}\r\n                    <div className={selectable===true && deletable===true? \"form-row-content\":\"form-row-content-1\"}>{content}</div>\r\n                    {deleteIcon}\r\n                </div></fieldset>\r\n                :\r\n                (content:any) => content;\r\n\r\n            return <ContextContainer.Provider key={rowKey} value={rowContext}>\r\n                {sep}\r\n                {RowContainer(editContainer(<><rowContext.renderErrors />{rowContent}</>))}\r\n            </ContextContainer.Provider>;\r\n        })}\r\n    </>);\r\n});\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiImageItem } from '../../schema';\r\nimport { Image } from '../../image';\r\nimport { ImageItemEdit } from '../../edit/imageItemEdit';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\n\r\nexport class ImageWidget extends Widget {\r\n    protected input: HTMLInputElement;\r\n    protected ui: UiImageItem;\r\n    @observable private imageSrc: string;\r\n\r\n    protected init() {\r\n        super.init();\r\n        this.imageSrc = this.value;\r\n    }\r\n\r\n    protected onClick = async () => {\r\n        let edit = new ImageItemEdit(this.itemSchema, this.ui, this.ui.label, this.value);\r\n        let ret = await edit.start();\r\n        if (ret !== null) {\r\n            this.setValue(ret);\r\n            this.imageSrc = ret;\r\n        }\r\n        await edit.end();\r\n    }\r\n\r\n    render() {\r\n        return <this.observerRender />;\r\n    }\r\n\r\n    private observerRender = observer(() => {\r\n        let cn = [\r\n            'bg-white p-1 d-flex justify-content-center',\r\n        ];\r\n        let onClick: any;\r\n        if (!this.readOnly && !this.disabled) {\r\n            cn.push('cursor-pointer');\r\n            onClick = this.onClick;\r\n        }\r\n        return <div className={classNames(cn)} onClick={onClick}>\r\n            <Image src={this.imageSrc} className=\"w-4c h-4c\"/>\r\n        </div>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport { Schema, ArrSchema, DataType, ButtonSchema, ItemSchema } from '../../schema';\r\nimport { UiItem, UiArr, UiType, UiButton, TempletType, TypeWidget, UiCustom } from '../../schema';\r\nimport { TextWidget } from './textWidget';\r\nimport { TextAreaWidget } from './textareaWidget';\r\nimport { PasswordWidget, UrlWidget, EmailWidget } from './passwordWidget';\r\nimport { UpdownWidget } from './updownWidget';\r\nimport { NumberWidget } from './numberWidget';\r\nimport { DateWidget, DateTimeWidget, TimeWidget, MonthWidget } from './dateWidget';\r\nimport { CheckBoxWidget } from './checkBoxWidget';\r\nimport { FieldProps } from '../field';\r\nimport { Context, RowContext, FormContext, ContextContainer } from '../context';\r\nimport { SelectWidget } from './selectWidget';\r\nimport { RadioWidget } from './radioWidget';\r\nimport { RangeWidget } from './rangeWidget';\r\nimport { IdWidget } from './idWidget';\r\nimport { ButtonWidget } from './buttonWidget';\r\nimport { ArrComponent } from './arrComponent';\r\nimport { ImageWidget } from './imageWidget';\r\n\r\nconst widgetsFactory: {[type: string]: {widget?: TypeWidget, dataTypes?: DataType[]}} = {\r\n    id: {\r\n        dataTypes: ['id'],\r\n        widget: IdWidget,\r\n    },\r\n    text: {\r\n        dataTypes: ['integer', 'number', 'string'],\r\n        widget: TextWidget\r\n    },\r\n    textarea: {\r\n        dataTypes: ['string'],\r\n        widget: TextAreaWidget\r\n    },\r\n    password: {\r\n        dataTypes: ['string'],\r\n        widget: PasswordWidget\r\n    },\r\n    date: {\r\n        dataTypes: ['date'],\r\n        widget: DateWidget\r\n    },\r\n    datetime: {\r\n        dataTypes: ['date'],\r\n        widget: DateTimeWidget\r\n    },\r\n    time: {\r\n        dataTypes: ['date'],\r\n        widget: TimeWidget\r\n    },\r\n    month: {\r\n        dataTypes: ['date'],\r\n        widget: MonthWidget\r\n    },\r\n    select: {\r\n        dataTypes: ['integer', 'number', 'string', 'date', 'boolean'],\r\n        widget: SelectWidget\r\n    },\r\n    url: {\r\n        dataTypes: ['string'],\r\n        widget: UrlWidget\r\n    },\r\n    email: {\r\n        dataTypes: ['string'],\r\n        widget: EmailWidget\r\n    },\r\n    number: {\r\n        dataTypes: ['integer', 'number'],\r\n        widget: NumberWidget\r\n    },\r\n    updown: {\r\n        dataTypes: ['integer', 'number'],\r\n        widget: UpdownWidget\r\n    },\r\n    color: {\r\n\r\n    },\r\n    checkbox: {\r\n        dataTypes: ['boolean', 'integer', 'number'],\r\n        widget: CheckBoxWidget\r\n    },\r\n    image: {\r\n        dataTypes: ['string'],\r\n        widget: ImageWidget,\r\n    },\r\n    checkboxes: {\r\n\r\n    },\r\n    radio: {\r\n        dataTypes: ['integer', 'number', 'string', 'date', 'boolean'],\r\n        widget: RadioWidget\r\n    },\r\n    range: {\r\n        dataTypes: ['integer'],\r\n        widget: RangeWidget,\r\n    },\r\n    button: {\r\n        dataTypes: ['button', 'submit'],\r\n        widget: ButtonWidget,\r\n    }\r\n}\r\n\r\nexport function factory(context: Context, itemSchema: ItemSchema, children:React.ReactNode, fieldProps?: FieldProps):JSX.Element {\r\n    if (context === undefined) {\r\n        debugger;\r\n        return null;\r\n    }\r\n    if (itemSchema === undefined) return undefined;\r\n    let {name, type} = itemSchema;\r\n    switch (type) {\r\n    case 'arr':\r\n        let arrSchema = context.getItemSchema(name) as ArrSchema;\r\n        return <ArrComponent parentContext={context} arrSchema={arrSchema} children={children} />;\r\n    default:\r\n        break;\r\n    }\r\n\r\n    let typeWidget: TypeWidget;\r\n    let ui = context.getUiItem(name);\r\n    function getTypeWidget(t:DataType): TypeWidget {\r\n        switch(t) {\r\n        default: return TextWidget; \r\n        case 'id': return IdWidget;\r\n        case 'integer': return UpdownWidget;\r\n        case 'number': return NumberWidget; \r\n        case 'string': return TextWidget; \r\n        case 'date': return DateWidget; \r\n        case 'boolean': return CheckBoxWidget; \r\n        case 'button':\r\n        case 'submit': return ButtonWidget;\r\n        }\r\n    }\r\n    if (ui === undefined) { \r\n        typeWidget = getTypeWidget(type);\r\n    }\r\n    else {\r\n        let {widget:widgetType} = ui;\r\n        switch (widgetType) {\r\n        default:\r\n            if (widgetType !== undefined) {\r\n                let widgetFactory = widgetsFactory[widgetType];\r\n                typeWidget = widgetFactory.widget;\r\n            }\r\n            if (typeWidget === undefined) typeWidget = getTypeWidget(type);\r\n            break;\r\n        case 'custom':\r\n            typeWidget = (ui as UiCustom).WidgetClass;\r\n            break;\r\n        case 'group':\r\n            return <span>impletment group</span>;\r\n        }\r\n        //label = uiLabel || name;\r\n    }\r\n    \r\n    let {isRow, widgets} = context;\r\n    let widget = new typeWidget(context, itemSchema, fieldProps, children);\r\n    widgets[name] = widget;\r\n\r\n    return <widget.container />;\r\n    /*\r\n    if (isRow === false) {\r\n        let WidgetElement = observer(() => widget.container());\r\n        return <WidgetElement />;\r\n    }\r\n    else {\r\n        let widgetElement = widget.container();\r\n        return widgetElement;\r\n    }\r\n    */\r\n}\r\n\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiTextAreaItem } from '../../schema';\r\nimport { StringSchema } from '../../schema';\r\n\r\nexport class TextAreaWidget extends Widget {\r\n    protected itemSchema: StringSchema;\r\n    protected input: HTMLTextAreaElement;\r\n    protected ui: UiTextAreaItem;\r\n\r\n    protected setElementValue(value:any) {this.input.value = value}\r\n    protected onInputChange = (evt: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        this.setValue(evt.currentTarget.value);\r\n    }\r\n\r\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\r\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\r\n\r\n    render() {\r\n        let renderTemplet = this.renderTemplet();\r\n        if (renderTemplet !== undefined) return renderTemplet;\r\n        let cn = {};\r\n        if (this.hasError === true) {\r\n            cn['is-invalid'] = true;\r\n        }\r\n        else {\r\n            cn['required-item'] = this.itemSchema.required === true;\r\n        }\r\n        return <textarea ref={(input) => this.input=input} \r\n            className={classNames(this.className, cn)}\r\n            rows={this.ui && this.ui.rows}\r\n            maxLength={this.itemSchema.maxLength}\r\n            defaultValue={this.defaultValue} onChange={this.onInputChange} />\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { TextWidget } from './textWidget';\r\n\r\nexport class PasswordWidget extends TextWidget {\r\n    protected inputType = 'password';\r\n}\r\n\r\nexport class UrlWidget extends TextWidget {\r\n    protected inputType = 'url';\r\n}\r\n\r\nexport class EmailWidget extends TextWidget {\r\n    protected inputType = 'email';\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { UiRange } from '../../schema';\r\nimport { Widget } from './widget';\r\n\r\nexport class RangeWidget extends Widget {\r\n    protected inputType = 'range';\r\n    protected input: HTMLInputElement;\r\n    protected ui: UiRange;\r\n\r\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\r\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\r\n\r\n    render() {\r\n        let {min, max, step} = this.ui;\r\n        return <><input ref={input=>this.input = input}\r\n            className={classNames(this.className, 'form-control', 'w-min-6c')}\r\n            type={this.inputType}\r\n            defaultValue={this.defaultValue} \r\n            onChange={this.onInputChange}\r\n            max={max}\r\n            min={min}\r\n            step={step}\r\n            />\r\n        </>;\r\n    }\r\n}\r\n","import _ from 'lodash';\r\nimport { KeyValueRes, Res } from '../res';\r\n\r\nexport interface FormRes extends KeyValueRes {\r\n    required: string;\r\n    number: string;\r\n    integer: string;\r\n    min: string;\r\n    max: string;\r\n}\r\n\r\nexport const formRes:Res<FormRes> = {\r\n    _: {\r\n        required: 'required',\r\n        number: 'not valid number',\r\n        integer: 'not valid integer',\r\n        min: 'min value is ${min}',\r\n        max: 'max value is ${max}',\r\n    },\r\n    zh: {\r\n        _: {\r\n            required: '必须填',\r\n            number: '需要数字',\r\n            integer: '需要整数',\r\n            min: '不能小于${min}',\r\n            max: '不能大于${max}',\r\n        }\r\n    },\r\n}\r\n","import * as React from 'react';\r\nimport {observable, IReactionDisposer, autorun, isObservable} from 'mobx';\r\nimport classNames from 'classnames';\r\nimport { Schema, ItemSchema, ArrSchema } from '../schema';\r\nimport { UiSchema, TempletType } from '../schema';\r\nimport { factory } from './widgets';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport { ContextContainer, FormContext, Context, RowContext } from './context';\r\nimport { FormRes, formRes } from './formRes';\r\nimport { resLang } from '../res';\r\n\r\nexport type FormButtonClick = (name:string, context: Context) => Promise<any>;\r\nexport type InputEnter = (name:string, context: Context) => Promise<any>;\r\n\r\nexport interface FormProps {\r\n    className?: string;\r\n    schema: Schema;\r\n    uiSchema?: UiSchema;\r\n    formData?: any;\r\n    onButtonClick?: FormButtonClick;\r\n    onEnter?: InputEnter;\r\n    fieldLabelSize?: number;            // col-sm-2 for label\r\n    requiredFlag?: boolean;             // default=true\r\n    beforeShow?: (formContext:FormContext) => void;\r\n    res?: FormRes;\r\n\r\n    Container?: (content:JSX.Element) => JSX.Element;\r\n    FieldContainer?: (label:string|JSX.Element, content:JSX.Element) => JSX.Element;\r\n    FieldClass?: string;\r\n    ButtonClass?: string;\r\n}\r\n\r\nexport class Form extends React.Component<FormProps> {\r\n    readonly schema: Schema;\r\n    readonly itemSchemas: {[name:string]: ItemSchema};\r\n    readonly uiSchema: UiSchema;\r\n    readonly res?: FormRes;\r\n    protected formContext: FormContext;\r\n    //private content: any;\r\n    //private formData: any;\r\n    private disposer: IReactionDisposer;\r\n    //@observable \r\n    readonly data:any;\r\n\r\n    readonly Container: (content:JSX.Element) => JSX.Element;\r\n    readonly FieldContainer: (label:any, content:JSX.Element) => JSX.Element;\r\n    readonly FieldClass: string;\r\n    readonly ButtonClass: string;\r\n    //readonly ArrContainer: (label:any, content:JSX.Element) => JSX.Element;\r\n    //readonly RowContainer: (content:JSX.Element) => JSX.Element;\r\n    //readonly RowSeperator: JSX.Element;\r\n\r\n    constructor(props:FormProps) {\r\n        super(props);\r\n        let {schema, uiSchema, formData, \r\n            Container, FieldContainer, FieldClass, \r\n            ButtonClass, res,\r\n        } = props;\r\n        this.Container = Container || this.DefaultContainer;\r\n        this.FieldContainer = FieldContainer || this.DefaultFieldContainer;\r\n        this.FieldClass = FieldClass!==undefined && FieldClass!==''&&FieldClass!==null? FieldClass : this.DefaultFieldClass;\r\n        this.res = res || this.DefaultRes;\r\n        this.ButtonClass = ButtonClass || this.DefaultButtonClass;\r\n\r\n        this.schema = schema;\r\n        this.itemSchemas = {};\r\n        for (let itemSchema of this.schema) {\r\n            this.itemSchemas[itemSchema.name] = itemSchema;\r\n        }\r\n        this.uiSchema = uiSchema;\r\n\r\n        //this.formData = formData;\r\n        this.disposer = autorun(this.watch);\r\n        this.data = {};\r\n        // this.initRender();\r\n    }\r\n\r\n    private renderContent():any {\r\n        this.initData(this.props.formData);\r\n        let {children} = this.props;\r\n        if (children !== undefined) {\r\n            this.formContext = new FormContext(this, true);\r\n            return <>{children}</>;\r\n        }\r\n\r\n        let Templet: TempletType;\r\n        if (this.uiSchema !== undefined) {\r\n            Templet = this.uiSchema.Templet;\r\n        }\r\n        if (Templet !== undefined) {\r\n            this.formContext = new FormContext(this, true);\r\n            return typeof(Templet) === 'function'? Templet(this.data) : Templet;\r\n        }\r\n\r\n        this.formContext = new FormContext(this, false);\r\n        return <>{this.schema.map((v, index) => {\r\n            return <React.Fragment key={index}>{factory(this.formContext, v, children)}</React.Fragment>\r\n        })}</>;\r\n    }\r\n\r\n    private initData(formData: any) {\r\n        if (formData === undefined) formData = {};\r\n        for (let itemSchema of this.schema) {\r\n            this.initDataItem(itemSchema, this.data, formData);\r\n        }\r\n    }\r\n\r\n    private initDataItem(itemSchema: ItemSchema, data:any, formData: any):any {\r\n        let {name, type} = itemSchema;\r\n        if (type === 'button') return;\r\n        if (type !== 'arr') {\r\n            data[name] = formData[name];\r\n            return;\r\n        }\r\n\r\n        let arrItem:ArrSchema = itemSchema as ArrSchema;\r\n        let {arr:arrItems} = arrItem;\r\n        if (arrItems === undefined) return;\r\n        let arrDict = arrItem.itemSchemas = {};\r\n        for (let item of arrItems) {\r\n            arrDict[item.name] = item;\r\n        }\r\n        let val:any[] = formData[name];\r\n        if (val === undefined) val = [];\r\n        else if (Array.isArray(val) === false) val = [val];\r\n        let arr:any[] = [];\r\n        for (let row of val) {\r\n            let {$isSelected, $isDeleted} = row;\r\n            let r = {\r\n                $source: row,\r\n                $isSelected: $isSelected,\r\n                $isDeleted: $isDeleted,\r\n            };\r\n            for (let item of arrItems) {\r\n                this.initDataItem(item, r, row);\r\n                /*\r\n                let {name:nm} = item;\r\n                let v = row[nm];\r\n                if (v === undefined) v = null;\r\n                r[nm] = v;\r\n                */\r\n            }\r\n            arr.push(r);\r\n        }\r\n        // 如果没有observable，行删除标志点击不管用\r\n        // 不知道这里为什么要去掉observable。有可能会有别的问题\r\n        data[name] = observable(arr);\r\n        //data[name] = arr;\r\n        return;\r\n    }\r\n\r\n    private watch = () => {\r\n        let {formData} = this.props;\r\n        if (formData === undefined) return;\r\n        //this.initData(formData);\r\n        this.calcSelectOrDelete();\r\n    }\r\n    private calcSelectOrDelete() {\r\n        for (let itemSchema of this.schema) {\r\n            this.arrItemOperated(itemSchema);\r\n        }\r\n    }\r\n\r\n    private arrItemOperated(itemSchema: ItemSchema) {\r\n        let {name, type} = itemSchema;\r\n        if (type !== 'arr') return;\r\n        if (this.data === undefined) return;\r\n        let formArrVal = this.data[name];\r\n        if (formArrVal === undefined) return;\r\n        let {arr: arrItems} = itemSchema as ArrSchema;\r\n        for (let row of formArrVal) {\r\n            let {$source} = row;\r\n            if ($source === undefined) continue;\r\n            let {$isSelected, $isDeleted} = $source;\r\n            row.$isSelected = $isSelected;\r\n            row.$isDeleted = $isDeleted;\r\n            //console.log($isSelected, $isDeleted);\r\n            for (let item of arrItems) {\r\n                this.arrItemOperated(item);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let {beforeShow} = this.props;\r\n        if (beforeShow !== undefined) beforeShow(this.formContext);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.disposer !== undefined) this.disposer();\r\n    }\r\n\r\n    render() {\r\n        let content = this.renderContent();\r\n        return <ContextContainer.Provider value={this.formContext}>\r\n            <this.formContext.renderErrors />\r\n            {this.Container(content)}\r\n        </ContextContainer.Provider>;\r\n    }\r\n\r\n    async buttonClick(buttonName:string) {\r\n        this.formContext.checkRules()\r\n        if (this.formContext.hasError === true) return;\r\n\r\n        let {onButtonClick} = this.formContext.form.props;\r\n        if (onButtonClick === undefined) {\r\n            alert(`you should define form onButtonClick`);\r\n            return;\r\n        }\r\n        let ret = await onButtonClick(buttonName, this.formContext);\r\n        if (ret === undefined) return;\r\n        this.formContext.setError(buttonName, ret);\r\n    }\r\n\r\n    protected DefaultContainer = (content:JSX.Element): JSX.Element => {\r\n        return <form className={classNames(this.props.className)} onSubmit={e=>e.preventDefault()}>\r\n            {content}\r\n        </form>;\r\n    }\r\n    protected DefaultFieldContainer = (label:string|JSX.Element, content:JSX.Element): JSX.Element => {\r\n        let {fieldLabelSize} = this.props;\r\n\r\n        if (fieldLabelSize > 0) {\r\n            let labelView:any;\r\n            if (label === null) {\r\n                fieldLabelSize = 0;\r\n            }\r\n            else {\r\n                labelView = <label className={classNames('col-sm-' + fieldLabelSize, 'col-form-label')}>{label}</label>\r\n            }\r\n            let fieldCol = 'col-sm-' + (12 - fieldLabelSize);\r\n            return <div className=\"form-group row\">\r\n                {labelView}\r\n                <div className={fieldCol}>{content}</div>\r\n            </div>;\r\n        }\r\n        return <div className=\"form-group\">\r\n            {label===null? null:<label className=\"col-form-label\">{label}</label>}\r\n            {content}\r\n        </div>;\r\n    }\r\n    protected DefaultFieldClass:string = undefined;\r\n    protected DefaultButtonClass = 'text-center py-2';\r\n    protected DefaultRes:FormRes = resLang<FormRes>(formRes);\r\n\r\n    ArrContainer = (label:any, content:JSX.Element): JSX.Element => {\r\n        return <div>\r\n            <div className={classNames('small text-muted text-center bg-light py-1 px-3 mt-4 mb-1')}>{label}</div>\r\n            {content}\r\n        </div>;\r\n    }\r\n    RowContainer = (content:JSX.Element): JSX.Element => {\r\n        let cn = classNames({\r\n            'py-3': true\r\n        });\r\n        return <div className={cn}>{content}</div>\r\n    }\r\n    RowSeperator = <div className=\"border border-gray border-top\" />;\r\n}\r\n","import * as React from 'react';\r\nimport { factory } from './widgets';\r\nimport { ContextContainer, Context } from './context';\r\n\r\nexport interface FieldProps {\r\n    name: string;\r\n}\r\n\r\nexport class FormField extends React.Component<FieldProps> {\r\n    static contextType = ContextContainer;\r\n    render() {\r\n        let {name, children } = this.props;\r\n        let context:Context = this.context;\r\n        if (context === undefined) return <span className=\"text-danger\">!only in Form!</span>;\r\n        let itemSchema = context.getItemSchema(name);\r\n        let content = factory(context, itemSchema, children, this.props);\r\n        if (content === undefined) {\r\n            return <span className=\"text-danger\">!!{name} is not defined!!</span>;\r\n        }\r\n        return content;\r\n    }\r\n}\r\n","export {Form} from './form';\r\nexport {FormField} from './field';\r\nexport {Context, RowContext} from './context';\r\nexport * from './widgets';\r\n","import * as React from 'react';\r\nimport { IObservableArray, computed } from 'mobx';\r\nimport { PageItems } from '../../pageItems';\r\nimport {List} from './index';\r\n\r\nexport abstract class ListBase {\r\n    protected list: List;\r\n    constructor(list: List) {\r\n        this.list = list;\r\n    }\r\n    get isPaged():boolean {\r\n        let items = this.list.props.items;\r\n        return (items !== null && items !== undefined && Array.isArray(items) === false);\r\n    }\r\n    get items():any[]|IObservableArray<any> {\r\n        let items = this.list.props.items;\r\n        if (items === null) return null;\r\n        if (items === undefined) return undefined;\r\n        if (Array.isArray(items) === true)\r\n            return items as IObservableArray<any>;\r\n        else\r\n            return (items as PageItems<any>).items;\r\n    }\r\n    @computed get loading():boolean {\r\n        let items = this.list.props.items;\r\n        if (items === null) return false;\r\n        if (items === undefined) return true;\r\n        let pageItems = items as PageItems<any>;\r\n        if (pageItems.items === undefined) return false;\r\n        return pageItems.loading;\r\n    }\r\n    get selectedItems():any[] { return; }\r\n    updateProps(nextProps:any) {}\r\n    abstract render(item:any, index:number):JSX.Element;\r\n    protected renderContent(item:any, index:number) {\r\n        let {render} = this.list.props.item;\r\n        if (render === undefined) return <div className=\"px-3 py-2\">{JSON.stringify(item)}</div>;\r\n        return render(item, index);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {ListBase} from './base';\r\n\r\nexport class Clickable extends ListBase {\r\n    render(item:any, index:number):JSX.Element {\r\n        let {className, key, onClick} = this.list.props.item;\r\n        return <li key={key===undefined?index:key(item)} className={classNames('va-row-clickable', className)} onClick={()=>onClick && onClick(item)}>\r\n            {this.renderContent(item, index)}\r\n        </li>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {ListBase} from './base';\r\nimport { uid } from '../../uid';\r\n\r\nexport class Static extends ListBase {\r\n    render(item:any, index:number):JSX.Element {\r\n        let {className, key, render} = this.list.props.item;\r\n        if (typeof item === 'string') {\r\n            let cn = classNames('va-list-gap', 'px-3', 'pt-1');\r\n            return <li key={uid()} className={cn}>{item}</li>;\r\n        }\r\n        return <li key={key===undefined?index:key(item)} className={classNames(className)}>\r\n            {this.renderContent(item, index)}\r\n        </li>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable, computed, IObservableArray} from 'mobx';\r\nimport classNames from 'classnames';\r\nimport {ListBase} from './base';\r\nimport {uid} from '../../uid';\r\nimport { PageItems } from '../../pageItems';\r\n\r\nexport interface SelectableItem {\r\n    selected: boolean;\r\n    item: any;\r\n    labelId: string;\r\n}\r\n\r\nexport class Selectable extends ListBase {\r\n    private _items: SelectableItem[];\r\n    private _selectedItems: any[];\r\n    private input: HTMLInputElement;\r\n    private buildItems() {\r\n        console.log('buildItems in selectable.tsx');\r\n        let {items, selectedItems, compare} = this.list.props;\r\n        let itemsArray:any[] | IObservableArray<any>;\r\n        if (items === undefined) {\r\n            return this._items = undefined;\r\n        }\r\n        if (items === null) {\r\n            return this._items = null;\r\n        }\r\n        if (Array.isArray(items) === true) {\r\n            itemsArray = items as any;\r\n        }\r\n        else {\r\n            itemsArray = (items as PageItems<any>).items;\r\n        }\r\n        //let items = this.items;\r\n        this._selectedItems = selectedItems;\r\n        if (selectedItems === undefined) {\r\n            return this._items = itemsArray.map(v => {\r\n                return {\r\n                    selected:false, \r\n                    item:v, \r\n                    labelId:uid()\r\n                };\r\n            });\r\n        }\r\n        if (compare === undefined) {\r\n            return this._items = itemsArray.map(v => {\r\n                return {\r\n                    selected:selectedItems.find(si => si === v) !== undefined, \r\n                    item:v, \r\n                    labelId:uid()\r\n                };\r\n            });\r\n        }\r\n        return this._items = itemsArray.map(v => {\r\n            return {\r\n                selected:selectedItems.find(si => compare(v, si)) !== undefined, \r\n                item:v, \r\n                labelId:uid()\r\n            };\r\n        });\r\n    }\r\n    @computed get items() {\r\n        //if (this._items === undefined) \r\n        this.buildItems();\r\n        return this._items;\r\n    }\r\n    updateProps(nextProps:any) {\r\n        if (nextProps.selectedItems === this._selectedItems) return;\r\n        this.buildItems();\r\n    }\r\n    private onSelect(item:SelectableItem, selected:boolean) {\r\n        item.selected = selected;\r\n        let anySelected = this._items.some(v => v.selected);\r\n        this.list.props.item.onSelect(item.item, selected, anySelected);\r\n    }\r\n    \r\n    get selectedItems():any[] {\r\n        return this._items.filter(v => v.selected === true).map(v => v.item);\r\n    }\r\n    /*\r\n    set selectedItems(value: any[]) {\r\n        if (value === undefined) return;\r\n        if (this._items === undefined) return;\r\n        let sLen = this._items.length;\r\n        let list = value.slice();\r\n        for (let n=0; n<sLen; n++) {\r\n            let sItem = this._items[n];\r\n            let len = list.length;\r\n            if (len === 0) break;\r\n            let item = sItem.item;\r\n            for (let i=0; i<len; i++) {\r\n                let v = list[i];\r\n                if (item === v) {\r\n                    sItem.selected = true;\r\n                    value.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n        };\r\n    }\r\n    */\r\n    //w-100 mb-0 pl-3\r\n    //m-0 w-100\r\n    render(item:SelectableItem, index:number):JSX.Element {\r\n        let {className, key, render, onSelect} = this.list.props.item;\r\n        let {labelId, selected} = item;\r\n        return <li key={key===undefined?index:key(item)} className={classNames(className)}>\r\n            <div className=\"d-flex align-items-center px-3\">\r\n                <input ref={input=>{\r\n                        if (!input) return;\r\n                        this.input = input; input.checked = selected;\r\n                    }}\r\n                    className=\"\" type=\"checkbox\" value=\"\" id={labelId}\r\n                    defaultChecked={selected}\r\n                    onChange={(e)=>{\r\n                        this.onSelect(item, e.target.checked)} \r\n                    }/>\r\n                <label className=\"\" style={{flex:1, marginBottom:0}} htmlFor={labelId}>\r\n                    {this.renderContent(item.item, index)}\r\n                </label>\r\n            </div>\r\n        </li>\r\n    }\r\n}\r\n/*\r\n<label>\r\n<label className=\"custom-control custom-checkbox\">\r\n    <input type='checkbox' className=\"custom-control-input\"\r\n        //checked={selected}\r\n        onChange={(e)=>this.onSelect(item, e.target.checked)} />\r\n    <span className=\"custom-control-indicator\" />\r\n</label>\r\n{this.renderContent(item.item, index)}\r\n</label>\r\n*/\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {PageItems} from '../../pageItems';\r\nimport {ListBase} from './base';\r\nimport {Clickable} from './clickable';\r\nimport {Static} from './static';\r\nimport {Selectable} from './selectable';\r\nimport '../../css/va-list.css';\r\nimport { IObservableArray } from 'mobx';\r\n\r\ntype StaticRow = string|JSX.Element|(()=>string|JSX.Element);\r\n\r\nexport interface ListProps {\r\n    className?: string|string[];\r\n    items: any[] | IObservableArray<any> | PageItems<any>;\r\n    item: {\r\n        className?: string|string[];\r\n        render?: (item:any, index:number) => JSX.Element;\r\n        onSelect?: (item:any, isSelected:boolean, anySelected:boolean)=>void;\r\n        onClick?: (item:any)=>void;\r\n        key?: (item:any)=>string|number;\r\n    };\r\n    compare?:(item:any, selectItem)=>boolean;\r\n    selectedItems?:any[];\r\n    header?: StaticRow;\r\n    footer?: StaticRow;\r\n    before?: StaticRow;\r\n    loading?: StaticRow;\r\n    none?: StaticRow;\r\n}\r\n\r\n@observer\r\nexport class List extends React.Component<ListProps> {\r\n    private listBase: ListBase;\r\n    constructor(props:ListProps) {\r\n        super(props);\r\n        let {item} = this.props;\r\n        let {onClick, onSelect} = item;\r\n        if (onSelect !== undefined)\r\n            this.listBase = new Selectable(this);\r\n        else if (onClick !== undefined)\r\n            this.listBase = new Clickable(this);\r\n        else\r\n            this.listBase = new Static(this);\r\n    }\r\n    _$scroll = (direct: 'top'|'bottom') => {\r\n        console.log('############### items scroll to ' + direct);\r\n    }\r\n    componentWillUpdate(nextProps:ListProps, nextState, nextContext) {\r\n        this.listBase.updateProps(nextProps);\r\n    }\r\n    get selectedItems():any[] {\r\n        return this.listBase.selectedItems;\r\n    }\r\n    render() {\r\n        let {className, header, footer, before, loading, none, item, selectedItems} = this.props;\r\n        if (before === undefined) before = 'before';\r\n        if (loading === undefined) loading = 'loading';\r\n        if (none === undefined) none = 'none';        \r\n        //this.listBase.selectedItems = selectedItems;\r\n        let {isPaged, items, loading:isLoading} = this.listBase;\r\n        function staticRow(row:StaticRow, type:string) {\r\n            if (!row) return;\r\n            switch (typeof row) {\r\n                default:\r\n                case 'string': return <li className={\"va-list-\"+type}>{row}</li>;\r\n                case 'function': return <li className={\"va-list-\"+type}>{(row as ()=>string|JSX.Element)()}</li>;\r\n                case 'object': return <li>{row}</li>\r\n            } \r\n        }\r\n        let content:any;\r\n        if (items === null)\r\n            content = staticRow(before, 'before');\r\n        else if (items === undefined)\r\n            content = staticRow(loading, 'loading');\r\n        else if (items.length === 0)\r\n            content = staticRow(none, 'none');\r\n        else {\r\n            content = items.map((item, index) => {\r\n                return this.listBase.render(item, index);\r\n            });\r\n        }\r\n        return <ul className={classNames('va-list', className)}>\r\n            {staticRow(header, 'header')}\r\n            {content}\r\n            {staticRow(footer, 'footer')}\r\n        </ul>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { ItemEdit } from './itemEdit';\r\n\r\nexport class StringItemEdit extends ItemEdit {\r\n    protected uiItem: UiTextItem;\r\n    protected async internalStart():Promise<any> {\r\n        return new Promise<any>((resolve, reject) => {\r\n            let element = React.createElement(this.page, {resolve:resolve, reject:reject});\r\n            nav.push(element,reject);\r\n        });\r\n    }\r\n\r\n    private onChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.newValue = evt.target.value;\r\n        let preValue = this.value;\r\n        this.isChanged = (this.newValue != preValue);\r\n    }\r\n\r\n    private onBlur = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.verifyValue();\r\n    }\r\n\r\n    private onFocus = () => {\r\n        this.error = undefined;\r\n    }\r\n\r\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\r\n        let {resolve, reject} = props;\r\n        let right = <button\r\n            className=\"btn btn-sm btn-success\"\r\n            disabled={!this.isChanged}\r\n            onClick={()=>{\r\n                this.verifyValue();\r\n                if (this.error === undefined) resolve(this.newValue);\r\n            }}>保存</button>;\r\n        return <Page header={'更改' + this.label} right={right}>\r\n            <div className=\"m-3\">\r\n                <input type=\"text\" \r\n                    onChange={this.onChange}\r\n                    onBlur={this.onBlur}\r\n                    onFocus={this.onFocus}\r\n                    className=\"form-control\" \r\n                    defaultValue={this.value} />\r\n                {\r\n                    this.uiItem && <div className=\"small muted m-2\">{this.uiItem.placeholder}</div>\r\n                }\r\n                {this.error && <div className=\"text-danger\">{this.error}</div>}\r\n            </div>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem, UiRadio } from '../schema';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { ItemEdit } from './itemEdit';\r\n\r\nexport class RadioItemEdit extends ItemEdit {\r\n    protected uiItem: UiRadio;\r\n    protected async internalStart():Promise<any> {\r\n        return new Promise<any>((resolve, reject) => {\r\n            let element = React.createElement(this.page, {resolve:resolve, reject:reject});\r\n            nav.push(element,reject);\r\n        });\r\n    }\r\n\r\n    private onChange = (value: any) => {\r\n        this.newValue = value;\r\n        let preValue = this.value;\r\n        this.isChanged = (this.newValue != preValue);\r\n    }\r\n\r\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\r\n        let {resolve, reject} = props;\r\n        let {name} = this.itemSchema;\r\n        let {list, defaultValue} = this.uiItem;\r\n        let right = <button\r\n            className=\"btn btn-sm btn-success\"\r\n            disabled={!this.isChanged}\r\n            onClick={()=>{\r\n                this.verifyValue();\r\n                if (this.error === undefined) resolve(this.newValue);\r\n            }}>保存</button>;\r\n        let content = list?\r\n            list.map((v, index:number) => {\r\n                let {title, value} = v;\r\n                return <label key={index} className=\"px-3 py-2 cursor-pointer\">\r\n                    <input name={name} type=\"radio\" value={value} \r\n                        onClick={()=>this.onChange(value)} \r\n                        defaultChecked={value === defaultValue} /> {title || value} &nbsp;\r\n                </label>;\r\n            })\r\n            :\r\n            <>no list defined</>;\r\n        return <Page header={'更改' + this.label} right={right}>\r\n            <div className=\"m-3\">{content}</div>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem, UiSelect } from '../schema';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { ItemEdit } from './itemEdit';\r\n\r\nexport class SelectItemEdit extends ItemEdit {\r\n    protected uiItem: UiSelect;\r\n    protected async internalStart():Promise<any> {\r\n        return new Promise<any>((resolve, reject) => {\r\n            let element = React.createElement(this.page, {resolve:resolve, reject:reject});\r\n            nav.push(element,reject);\r\n        });\r\n    }\r\n\r\n    private onChange = (value:any) => {\r\n        this.newValue = value;\r\n        let preValue = this.value;\r\n        this.isChanged = (this.newValue != preValue);\r\n    }\r\n\r\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\r\n        let {resolve, reject} = props;\r\n        let {list} = this.uiItem;\r\n        let content = list?\r\n            list.map((v, index:number) => {\r\n                let {title, value} = v;\r\n                return <div key={index} className=\"px-3 py-2 cursor-pointer bg-white mb-1\" onClick={()=>{this.onChange(value); resolve(this.newValue)}}>\r\n                    {title || value}\r\n                </div>;\r\n            })\r\n            :\r\n            <>no list defined</>;\r\n        return <Page header={'更改' + this.label}>\r\n            <div className=\"my-3\">\r\n                {content}\r\n            </div>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\r\nimport { observer } from 'mobx-react';\r\nimport { ItemEdit } from './itemEdit';\r\nimport { StringItemEdit } from './stringItemEdit';\r\nimport { ImageItemEdit } from './imageItemEdit';\r\nimport { Image } from '../image';\r\nimport { RadioItemEdit } from './radioItemEdit';\r\nimport { SelectItemEdit } from './selectItemEdit';\r\nimport { UiSelectBase } from '../form/uiSchema';\r\n\r\nexport interface EditProps {\r\n    className?: string;\r\n    schema: Schema;\r\n    data: any;\r\n    onItemClick?: (itemSchema: ItemSchema, uiItem: UiItem, value: any) => Promise<void>;\r\n    onItemChanged?: (itemSchema: ItemSchema, newValue:any, preValue:any) => Promise<void>;\r\n    stopEdit?: boolean;\r\n    uiSchema?: UiSchema;\r\n    sepClassName?: string;\r\n    topBorderClassName?: string;\r\n    bottomBorderClassName?: string;\r\n    rowContainerClassName?: string;\r\n}\r\n\r\n@observer\r\nexport class Edit extends React.Component<EditProps> {\r\n    private defaultSepClassName = 'border-top edit-sep-light-gray';\r\n    private defaultRowContainerClassName = 'd-flex px-3 py-2 bg-white align-items-center';\r\n    private topBorder:JSX.Element;\r\n    private bottomBorder:JSX.Element;\r\n    private rowContainerClassName?: string;\r\n    private sep:JSX.Element;\r\n    private uiSchema: {[name:string]: UiItem};\r\n\r\n    constructor(props: EditProps) {\r\n        super(props);\r\n        let {topBorderClassName, bottomBorderClassName, sepClassName, rowContainerClassName, uiSchema, stopEdit} = props;\r\n        this.topBorder = <div className={topBorderClassName || this.defaultSepClassName} />;\r\n        this.bottomBorder = <div className={bottomBorderClassName || this.defaultSepClassName} />;\r\n        this.rowContainerClassName = rowContainerClassName || this.defaultRowContainerClassName;\r\n        if (stopEdit !== true) this.rowContainerClassName += ' cursor-pointer';\r\n        this.sep = <div className={sepClassName || this.defaultSepClassName} />;\r\n        this.uiSchema = (uiSchema && uiSchema.items) || {};\r\n    }\r\n\r\n    render() {\r\n        let elItems:JSX.Element[] = [];\r\n        let {schema} = this.props;\r\n        let len = schema.length;\r\n\r\n        elItems.push(this.topBorder);\r\n        for (let i=0; i<len; i++) {\r\n            let itemSchema = schema[i];\r\n            if (i>0) elItems.push(this.sep);\r\n            let value = this.props.data[itemSchema.name];\r\n            elItems.push(this.renderRow(itemSchema, value));\r\n        }\r\n        elItems.push(this.bottomBorder);\r\n\r\n        return <div>\r\n            {elItems.map((v, index) => <React.Fragment key={index}>{v}</React.Fragment>)}\r\n        </div>;\r\n    }\r\n\r\n    private renderRow = (itemSchema: ItemSchema, value:any):JSX.Element => {\r\n        let {name, type, required} = itemSchema;\r\n        let divValue:any;\r\n        let uiItem = this.uiSchema[name];\r\n        let label:string = (uiItem && uiItem.label) || name;\r\n        //let value:any = this.props.data[name];\r\n        if (uiItem !== undefined && value) {\r\n            switch (uiItem.widget) {\r\n                case 'radio':\r\n                case 'select':\r\n                    let {list} = uiItem as UiSelectBase;\r\n                    divValue = <b>{list.find(v => v.value === value).title}</b>;\r\n                    break;\r\n            }\r\n        }\r\n        if (divValue === undefined) {\r\n            switch (type) {\r\n                default:\r\n                    divValue = value? <b>{value}</b> : <small className=\"text-muted\">(无)</small>;\r\n                    break;\r\n                case 'image':\r\n                    divValue = <Image className=\"w-4c h-4c\" src={value} />;\r\n                    break;\r\n            }\r\n        }\r\n        let requireFlag = required===true && <span className=\"text-danger\">*</span>;\r\n        return <div className={this.rowContainerClassName} onClick={async ()=>await this.rowClick(itemSchema, uiItem, label, value)}>\r\n            <div className=\"w-6c\">{label} {requireFlag}</div>\r\n            <div className=\"flex-fill d-flex justify-content-end\">{divValue}</div>\r\n            {this.props.stopEdit!==true && <div className=\"w-2c text-right\"><i className=\"fa fa-chevron-right\" /></div>}\r\n        </div>;\r\n    };\r\n\r\n    private rowClick = async (itemSchema: ItemSchema, uiItem: UiItem, label:string, value: any) => {\r\n        let {onItemChanged, onItemClick, stopEdit} = this.props;\r\n        if (stopEdit === true) return;\r\n        let changeValue:any;\r\n        if (onItemClick !== undefined) {\r\n            await onItemClick(itemSchema, uiItem, value);\r\n            return;\r\n        }\r\n        let itemEdit:ItemEdit = createItemEdit(itemSchema, uiItem, label, value);\r\n        if (itemEdit === undefined) {\r\n            alert('undefined: let itemEdit:ItemEdit = createItemEdit(itemSchema, uiItem, label, value);');\r\n            return;\r\n        }\r\n        try {\r\n            changeValue = await itemEdit.start();\r\n            if (changeValue != value) {\r\n                if (onItemChanged === undefined) {\r\n                    alert(`${itemSchema.name} value changed, new: ${changeValue}, pre: ${value}`);\r\n                    this.props.data[itemSchema.name] = changeValue;\r\n                }\r\n                else {\r\n                    await onItemChanged(itemSchema, changeValue, value);\r\n                }\r\n            }\r\n            await itemEdit.end();\r\n        }\r\n        catch (err) {\r\n            // 如果直接back，会触发reject，就到这里了\r\n            console.log('no value changed');\r\n        }\r\n    }\r\n}\r\n\r\nfunction createItemEdit(itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any):ItemEdit {\r\n    let itemEdit: new (itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any) => ItemEdit;\r\n    if (uiItem !== undefined) {\r\n        switch (uiItem.widget) {\r\n            default: break;\r\n            case 'text': itemEdit = StringItemEdit; break;\r\n            case 'image': itemEdit = ImageItemEdit; break;\r\n            case 'radio': itemEdit = RadioItemEdit; break;\r\n            case 'select': itemEdit = SelectItemEdit; break;\r\n        }\r\n    }\r\n    if (itemEdit === undefined) {\r\n        switch (itemSchema.type) {\r\n            case 'string': itemEdit = StringItemEdit; break;\r\n            case 'image': itemEdit = ImageItemEdit; break;\r\n        }\r\n    }\r\n    if (itemEdit === undefined) return;\r\n    return new itemEdit(itemSchema, uiItem, label, value);\r\n}\r\n","export * from './edit';\r\n","import * as React from 'react';\r\nimport className from 'classnames';\r\nimport {PropGridProps} from './PropGrid';\r\nimport {LabeledProp, StringProp, NumberProp, ListProp, ComponentProp} from './propView';\r\n\r\nexport abstract class PropRow {\r\n    setValues(values: any) {}\r\n    abstract render(key:string): any;\r\n}\r\n\r\nexport class PropBorder extends PropRow {\r\n    render(key:string): JSX.Element {\r\n        return <div key={'_b_' + key} className=\"\">\r\n            <div className=\"w-100\">\r\n                <div style={{borderTop: '1px solid #f0f0f0'}} />\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class PropGap extends PropRow {\r\n    private param: string;\r\n    constructor(param?: string) {\r\n        super();\r\n        this.param = param;\r\n    }\r\n    render(key:string): JSX.Element {\r\n        let w: string;\r\n        switch (this.param) {\r\n            default: w = 'py-2'; break;\r\n            case '=': w = 'py-1'; break;\r\n            case '-': w = 'pb-1'; break;\r\n        }\r\n        let cn = className(w);\r\n        return <div key={'_g_' + key} className={cn} style={{backgroundColor: '#f0f0f0'}} />;\r\n    }\r\n}\r\n\r\nconst valueAlignStart = 'justify-content-start';\r\nconst valueAlignCenter = 'justify-content-center';\r\nconst valueAlignEnd = 'justify-content-end';\r\nexport abstract class LabeledPropRow extends PropRow {\r\n    protected gridProps: PropGridProps;\r\n    protected prop: LabeledProp;\r\n    protected content: any;\r\n    protected col: string;\r\n    //protected values: any;\r\n    constructor(gridProps:PropGridProps, prop: LabeledProp) {\r\n        super();\r\n        this.gridProps = gridProps;\r\n        this.prop = prop;\r\n        this.col = gridProps.labelFixLeft === true? 'col' : 'col-sm';\r\n        //this.values = values;\r\n    }\r\n    render(key:string):any {\r\n        let {onClick, bk} = this.prop;\r\n        let cn = className({\r\n            \"cursor-pointer\": onClick !== undefined,\r\n            \"bg-white\": bk === undefined, \r\n            \"row\": true\r\n        });\r\n        return <div key={key} className={cn} onClick={onClick}>\r\n            {this.renderLabel()}\r\n            {this.renderProp()}\r\n        </div>;\r\n    }\r\n    protected renderLabel():any {\r\n        let {label} = this.prop;\r\n        if (label === undefined) return null;\r\n        return <label className={this.col + '-3 col-form-label'}>\r\n            {label}\r\n        </label>;\r\n    }\r\n    protected renderProp():any {\r\n        let {label} = this.prop;\r\n        let align, vAlign;\r\n        switch (this.gridProps.alignValue) {\r\n            case 'left': align = valueAlignStart; break;\r\n            case 'center': align = valueAlignCenter; break;\r\n            case 'right': align = valueAlignEnd; break;\r\n        }\r\n        switch (this.prop.vAlign) {\r\n            case 'top': vAlign = 'align-items-start'; break;\r\n            default:\r\n            case 'center': vAlign = 'align-items-center'; break;\r\n            case 'bottom': vAlign = 'align-items-end'; break;\r\n            case 'stretch': vAlign = 'align-items-stretch'; break;\r\n        }\r\n        let col:string = this.col + (label===undefined? '-12':'-9');\r\n        let cn = className(align, vAlign, col, 'd-flex');\r\n        return <div className={cn}>\r\n            {this.renderPropBody()}\r\n        </div>;\r\n    }\r\n    protected renderPropBody():any {\r\n        return <div className=\"form-control-plaintext\">\r\n            {this.renderPropContent()}\r\n        </div>;\r\n    }\r\n    protected renderPropContent():any {\r\n        return this.content;\r\n    }\r\n}\r\n\r\nexport class StringPropRow extends LabeledPropRow {\r\n    protected prop: StringProp;\r\n    setValues(values:any) {\r\n        if (values === undefined) this.content = undefined;\r\n        else this.content = values[this.prop.name];\r\n    }\r\n}\r\n\r\nexport class NumberPropRow extends LabeledPropRow {\r\n    protected prop: NumberProp;\r\n    setValues(values:any) {\r\n        if (values === undefined) this.content = undefined;\r\n        else this.content = values[this.prop.name];\r\n    }\r\n}\r\n\r\nexport class ListPropRow extends LabeledPropRow {\r\n    protected prop: ListProp;\r\n    setValues(values:any) {\r\n        if (values === undefined) this.content = undefined;\r\n        else {\r\n            let list = this.prop.list;\r\n            if (typeof list === 'string') this.content = values[list];\r\n            else this.content = undefined;\r\n        }\r\n    }\r\n    protected renderPropBody() {\r\n        let {list, row} = this.prop;\r\n        let items:any[] = typeof list === 'string'? this.content : list;\r\n        if (items === undefined) return <div/>;\r\n        // new row(item)\r\n        return <div className=\"w-100\">\r\n            {\r\n                items.map((item, index) => <React.Fragment key={index}>\r\n                    {index===0? null: <div style={{width:'100%', borderBottom:'1px solid #f0f0f0'}} />}\r\n                    {React.createElement(row, item)}\r\n                </React.Fragment>)\r\n            }\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class ComponentPropRow extends LabeledPropRow {\r\n    protected prop: ComponentProp;\r\n    protected renderPropBody() {\r\n        let {component} = this.prop;\r\n        return component;\r\n    }\r\n    protected renderProp():any {\r\n        let {label, full} = this.prop;\r\n        let align, vAlign;\r\n        switch (this.gridProps.alignValue) {\r\n            case 'left': align = valueAlignStart; break;\r\n            case 'center': align = valueAlignCenter; break;\r\n            case 'right': align = valueAlignEnd; break;\r\n        }\r\n        switch (this.prop.vAlign) {\r\n            case 'top': vAlign = 'align-items-start'; break;\r\n            default:\r\n            case 'center': vAlign = 'align-items-center'; break;\r\n            case 'bottom': vAlign = 'align-items-end'; break;\r\n            case 'stretch': vAlign = 'align-items-stretch'; break;\r\n        }\r\n        let col:string;\r\n        if (full !== true)\r\n            col = this.col + (label===undefined? '-12':'-9');\r\n        else\r\n            col = 'w-100';\r\n        let cn = className(align, vAlign, col, 'd-flex');\r\n        return <div className={cn}>\r\n            {this.renderPropBody()}\r\n        </div>;\r\n    }\r\n}\r\n","import { PropGridProps } from './PropGrid';\r\nimport {\r\n    PropRow, PropBorder, PropGap, \r\n    StringPropRow, NumberPropRow, ListPropRow, ComponentPropRow\r\n} from './row';\r\n\r\nexport interface Format {\r\n\r\n}\r\n\r\nexport interface PropBase {\r\n    onClick?: () => void;\r\n}\r\n\r\nexport interface LabeledProp extends PropBase {\r\n    label?: string;\r\n    bk?: string;\r\n    vAlign?: 'top' | 'bottom' | 'center' | 'stretch';\r\n}\r\n\r\nexport interface StringProp extends LabeledProp {\r\n    type: 'string';\r\n    name: string;\r\n}\r\n\r\nexport interface NumberProp extends LabeledProp {\r\n    type: 'number';\r\n    name: string;\r\n}\r\n\r\nexport interface FormatProp extends LabeledProp {\r\n    type: 'format';\r\n    format: Format;\r\n}\r\n\r\nexport interface ListProp extends LabeledProp {\r\n    type: 'list';\r\n    list: string | any[];  // string 表示名字，否则就是值\r\n    row: new (props: any) => React.Component;\r\n}\r\n\r\nexport interface ComponentProp extends LabeledProp {\r\n    type: 'component';\r\n    full?: boolean;\r\n    component: any; //JSX.Element;\r\n}\r\n\r\nexport type Prop = StringProp | NumberProp | FormatProp | ListProp | ComponentProp | string;\r\n\r\nexport class PropView {\r\n    private gridProps: PropGridProps\r\n    private props: Prop[];\r\n    //private values:any;\r\n    private rows: PropRow[];\r\n\r\n    constructor(gridProps: PropGridProps, props: Prop[]) {\r\n        this.gridProps = gridProps;\r\n        this.props = props;\r\n        //this.values = values;\r\n        this.buildRows();\r\n    }\r\n\r\n    private buildRows() {\r\n        this.rows = [];\r\n        let isGap: boolean = true;\r\n        for (let prop of this.props) {\r\n            if (typeof prop === 'string') {\r\n                this.rows.push(new PropGap(prop));\r\n                isGap = true;\r\n            }\r\n            else {\r\n                if (!isGap) this.rows.push(new PropBorder());\r\n                let row;\r\n                switch (prop.type) {\r\n                    default: continue;\r\n                    case 'string': row = new StringPropRow(this.gridProps, prop); break;\r\n                    case 'number': row = new NumberPropRow(this.gridProps, prop); break;\r\n                    case 'list': row = new ListPropRow(this.gridProps, prop); break;\r\n                    case 'component': row = new ComponentPropRow(this.gridProps, prop); break;\r\n                }\r\n                this.rows.push(row);\r\n                isGap = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    setValues(values: any) {\r\n        for (let r of this.rows) r.setValues(values);\r\n    }\r\n\r\n    render() {\r\n        return this.rows.map((row, index) => row.render(String(index)));\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {Prop, PropView} from './propView';\r\n\r\nexport interface PropGridProps {\r\n    className?: string;\r\n    rows: Prop[];\r\n    values: any;\r\n    alignValue?: 'left'|'center'|'right';\r\n    labelFixLeft?: boolean;\r\n}\r\n\r\n@observer\r\nexport class PropGrid extends React.Component<PropGridProps> {\r\n    render() {\r\n        let {className, rows, values} = this.props;\r\n        let propView = new PropView(this.props, rows);\r\n        propView.setValues(values);\r\n        let cn = classNames('container-fluid', className);\r\n        return <div className={cn}>\r\n            {propView.render()}\r\n        </div>;\r\n    }\r\n}\r\n","export * from './propView';\r\nexport * from './row';\r\nexport * from './PropGrid';\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport { IObservableValue } from 'mobx/lib/internal';\r\n\r\nexport type TabCaption = (selected:boolean) => JSX.Element;\r\n\r\nexport interface TabProp {\r\n    name: string;\r\n    caption: TabCaption;\r\n    content: () => JSX.Element;\r\n    notify?: IObservableValue<number>;\r\n    load?: () => Promise<void>;\r\n}\r\n\r\nexport interface TabsProps {\r\n    tabs: TabProp[];\r\n    size?: 'sm' | 'lg' | 'md';\r\n    tabBack?: string;\r\n    contentBack?: string;\r\n    sep?: string;\r\n    selected?: string;\r\n}\r\n\r\nclass Tab {\r\n    name: string;\r\n    @observable selected: boolean;\r\n    caption: TabCaption;\r\n    contentBuilder: ()=>JSX.Element;\r\n    notify: IObservableValue<number>;\r\n    load?: () => Promise<void>;\r\n\r\n    private _content: JSX.Element;\r\n    get content(): JSX.Element {\r\n        if (this.selected !== true) return this._content;\r\n        if (this._content !== undefined) return this._content;\r\n        return this._content = this.contentBuilder();\r\n    }\r\n    async start() {\r\n        if (this._content !== undefined) return;\r\n        if (this.load === undefined) return;\r\n        await this.load();\r\n    }\r\n}\r\n\r\nexport const TabCaptionComponent = (label:string, icon:string, color:string) => <div \r\n    className={'d-flex justify-content-center align-items-center flex-column cursor-pointer ' + color}>\r\n    <div><i className={'fa fa-lg fa-' + icon} /></div>\r\n    <small>{label}</small>\r\n</div>;\r\n\r\n@observer export class Tabs extends React.Component<TabsProps> {\r\n    private size: string;\r\n    private tabBack: string;\r\n    private contentBack: string;\r\n    private sep: string;\r\n    @observable private selectedTab: Tab;\r\n    @observable private tabs: Tab[] = [];\r\n\r\n    constructor(props: TabsProps) {\r\n        super(props);\r\n        let {size, tabs, tabBack, contentBack, sep, selected} = this.props;\r\n        this.size = size || 'md';\r\n        this.tabs.push(...tabs.map(v => {\r\n                let tab = new Tab();\r\n                tab.name = v.name;\r\n                tab.selected = false;\r\n                tab.caption = v.caption;\r\n                tab.contentBuilder = v.content;\r\n                tab.notify = v.notify;\r\n                tab.load = v.load;\r\n                return tab;\r\n            }\r\n        ));\r\n        this.tabBack = tabBack || 'bg-light';\r\n        this.contentBack = contentBack;\r\n        this.sep = sep || 'border-top border-gray';\r\n        if (selected !== undefined) {\r\n            this.selectedTab = this.tabs.find(v => v.name === selected);\r\n        }\r\n        if (this.selectedTab === undefined) this.selectedTab = this.tabs[0];\r\n        this.selectedTab.selected = true;\r\n    }\r\n\r\n    private tabClick = async (tab:Tab) => {\r\n        await tab.start();\r\n        this.selectedTab.selected = false;\r\n        tab.selected = true;\r\n        this.selectedTab = tab;\r\n    }\r\n\r\n    showTab(tabName: string) {\r\n        let tab = this.tabs.find(v => v.name === tabName);\r\n        if (tab === undefined) return;\r\n        if (this.selectedTab !== undefined) this.selectedTab.selected = false;\r\n        tab.selected = true;\r\n        this.selectedTab = tab;\r\n    }\r\n\r\n    render() {\r\n        let cn = classNames('tab', 'tab-' + this.size);\r\n        return <div className={cn}>\r\n            <div className={this.contentBack}>\r\n                {this.tabs.map((v,index) => {\r\n                    let style:React.CSSProperties={\r\n                        display: v.selected===true? undefined : 'none'};\r\n                    return <div key={index} style={style}>{v.content}</div>;\r\n                })}\r\n            </div>\r\n            <div className={classNames(this.tabBack, this.sep)} style={{height: this.size}}>\r\n                {this.tabs.map((v,index) => {\r\n                    let {selected, caption, notify} = v;\r\n                    let notifyCircle:any;\r\n                    if (notify !== undefined) {\r\n                        let num = notify.get();\r\n                        if (num !== undefined) {\r\n                            if (num > 0) notifyCircle = <u>{num>99?'99+':num}</u>;\r\n                            else if (num < 0) notifyCircle = <u className=\"dot\" />;\r\n                        }\r\n                    }\r\n                    return <div key={index} className=\"\" onClick={()=>this.tabClick(v)}>\r\n                        <div className=\"align-self-center\">\r\n                            {notifyCircle}\r\n                            {caption(selected)}\r\n                        </div>\r\n                    </div>\r\n                })}\r\n            </div>\r\n        </div>\r\n    }\r\n};\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { VPage, Page, Form, ItemSchema, UiSchema, StringSchema, UiTextItem, UiPasswordItem, ButtonSchema, Edit, ImageSchema, nav, UiImageItem } from '../ui';\r\nimport { userApi } from './userApi';\r\n\r\nexport class EditMeInfo extends React.Component {\r\n    private schema:ItemSchema[] = [\r\n        {name:'nick', type:'string'} as StringSchema,\r\n        {name:'icon', type:'image'} as ImageSchema\r\n    ];\r\n    private uiSchema:UiSchema = {\r\n        items: {\r\n            nick: {widget:'text', label:'别名', placeholder:'好的别名更方便记忆'} as UiTextItem,\r\n            icon: {widget:'image', label:'头像'} as UiImageItem,\r\n        }\r\n    }\r\n    @observable private data:any;\r\n\r\n    constructor(props:any) {\r\n        super(props);\r\n        let {nick, icon} = nav.user;\r\n        this.data = {\r\n            nick: nick,\r\n            icon: icon,\r\n        }\r\n    }\r\n\r\n    private onItemChanged = async (itemSchema:ItemSchema, newValue:any, preValue:any) => {\r\n        let {name} = itemSchema;\r\n        await userApi.userSetProp(name, newValue);\r\n        this.data[name] = newValue;\r\n        nav.user[name] = newValue;\r\n        nav.saveLocalUser();\r\n    }\r\n\r\n    render() {\r\n        return <Page header=\"个人信息\">\r\n            <Edit schema={this.schema} uiSchema={this.uiSchema}\r\n                data={this.data}\r\n                onItemChanged={this.onItemChanged} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {FetchError} from '../fetchError';\r\nimport { refetchApi } from '../net';\r\n\r\nexport interface FetchErrorProps extends FetchError {\r\n    clearError: ()=>void\r\n}\r\n\r\nexport default class FetchErrorView extends React.Component<FetchErrorProps, null> {\r\n    private reApi = async () => {\r\n        this.props.clearError();\r\n        const {channel, url, options, resolve, reject} = this.props;\r\n        await refetchApi(channel, url, options, resolve, reject);\r\n    }\r\n    private close = async () => {\r\n        this.props.clearError();\r\n    }\r\n    render() {\r\n        let {error, url} = this.props;\r\n            //let errMsg = fetchError.errorMsg;\r\n        let errContent;\r\n        if (typeof error === 'object') {\r\n            let err = [];\r\n            for (let i in error) {\r\n                err.push(<li key={i}><label>{i}</label><div>{error[i]}</div></li>);\r\n            }\r\n            errContent = <ul>{err}</ul>;\r\n        }\r\n        else {\r\n            errContent = <div>{error}</div>;\r\n        }\r\n        return <li>\r\n            <article className=\"page-container\">\r\n                <section>\r\n                    <div  className=\"va-error\">\r\n                        <div>网络出现问题</div>\r\n                        <div>点击重新访问</div>\r\n                        <div>url: {url}</div>\r\n                        {errContent}\r\n                        <div className=\"p-3\">\r\n                            <button type='button' onClick={this.reApi}>重新API</button>\r\n                            <button type='button' onClick={this.close}>关闭</button>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </article>\r\n        </li>;\r\n    }\r\n}\r\n","import {User, Guest, Unit} from './user';\r\n\r\nexport interface ClearableData {\r\n    clear(): void;\r\n}\r\n\r\nexport class Data<T> implements ClearableData {\r\n    private name: string;\r\n    private value?: T;\r\n    constructor(name: string) {this.name = name; }\r\n    get(): T {\r\n        if (this.value !== undefined) return this.value;\r\n        let v = localStorage.getItem(this.name);\r\n        return this.value = v === null ? undefined : JSON.parse(v); \r\n    }\r\n    set(value: T) {\r\n        if (!value) { this.clear(); return; }\r\n        this.value = value;\r\n        localStorage.setItem(this.name, JSON.stringify(value));\r\n    }\r\n    clear() {\r\n        this.value = undefined;\r\n        localStorage.removeItem(this.name);\r\n    }\r\n}\r\n\r\nexport class LocalData {\r\n    user = new Data<User>('user');\r\n    guest = new Data<Guest>('guest');\r\n    unit = new Data<Unit>('unit');\r\n    testing = new Data<boolean>('testing');\r\n\r\n    logoutClear() {\r\n        [\r\n            this.user,\r\n            this.unit,\r\n        ].map(d => d.clear());\r\n    }\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import {CenterApi, User, appInFrame} from 'tonva';\r\nimport { string } from 'prop-types';\r\n\r\nclass MainApi extends CenterApi {\r\n    async stickies():Promise<any[]> {\r\n        return await this.get('sticky/list', {start:0, pageSize:30});\r\n    }\r\n\r\n    async ties():Promise<any[]> {\r\n        return await this.get('tie/list', {start:0, pageSize:30});\r\n    }\r\n\r\n    async apps(unit:number):Promise<any> {\r\n        return await this.get('tie/apps', {unit:unit});\r\n    }\r\n\r\n    async appApi(unit:number, app:number, apiName:string) {\r\n        return await this.get('tie/app-api', {unit:unit, app:app, apiName:apiName});\r\n    }\r\n\r\n    async userId(name:string):Promise<number> {\r\n        return await this.get('tie/user-id', {name:name});\r\n    }\r\n\r\n    async userAdminUnits():Promise<any[]> {\r\n        return await this.get('tie/user-admin-units', {});\r\n    }\r\n\r\n    async sendMessage(toUser:number, type:string, content:any) {\r\n        let {unit} = appInFrame;\r\n        let adminApp = 0;\r\n        return await this.post('tie/send-message', {\r\n            type: type, \r\n            fromUnit: unit, \r\n            fromApp: adminApp,\r\n            toUser: toUser, \r\n            content: content, \r\n        });\r\n    }\r\n\r\n    async unit(unit:number):Promise<any> {\r\n        return await this.get('unit/', {unit:unit});\r\n    }\r\n\r\n    async unitMemberCount(unit:number):Promise<number> {\r\n        return await this.get('unit/member-count', {unit:unit});\r\n    }\r\n\r\n    async unitAdmins(unit:number):Promise<any[]> {\r\n        return await this.get('unit/admins', {unit:unit});\r\n    }\r\n\r\n    async unitSetAdmin(fellow:number, unit:number, isOwner:number, isAdmin:number):Promise<any> {\r\n        return await this.post('unit/set-admin', {fellow:fellow, unit:unit, isOwner:isOwner, isAdmin:isAdmin});\r\n    }\r\n\r\n    async unitAddAdmin(user:string, unit:number, isOwner:number, isAdmin:number):Promise<any> {\r\n        return await this.post('unit/add-admin', {user:user, unit:unit, isOwner:isOwner, isAdmin:isAdmin});\r\n    }\r\n\r\n    async unitApps(unit:number):Promise<any[]> {\r\n        return await this.get('unit/apps', {unit:unit});\r\n    }\r\n\r\n    async unitAddApp(unit:number, app:number):Promise<number> {\r\n        let ret = await this.post('unit/add-app', {unit:unit, app:app});\r\n        return ret;\r\n    }\r\n\r\n    async unitDeleteApp(unit:number, app:number, deleted:number):Promise<void> {\r\n        await this.post('unit/delete-app', {unit:unit, app:app, deleted:deleted});\r\n    }\r\n\r\n    async unitChangeProp(unit:number, prop:string, value:any):Promise<void> {\r\n        await this.post('unit/change-prop', {unit:unit, prop:prop, value:value});\r\n    }\r\n\r\n    async searchApp(unit:number, key:string, pageStart:any, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/search-app', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n\r\n    async unitRoles(unit:number):Promise<any[]> {\r\n        return await this.get('unit/roles', {unit:unit});\r\n    }\r\n\r\n    async unitAddRole(unit:number, name:string, discription:string):Promise<number> {\r\n        return await this.post('unit/add-role', {unit:unit, name:name, discription:discription});\r\n    }\r\n\r\n    async unitRoleChangeProp(unit:number, role:number, prop:string, value:any):Promise<void> {\r\n        await this.post('unit/change-role-prop', {unit:unit, role:role, prop:prop, value:value});\r\n    }\r\n\r\n    async unitRoleApps(unit:number, role:number):Promise<any[]> {\r\n        return await this.get('unit/role-apps', {unit:unit, role:role});\r\n    }\r\n\r\n    async unitRoleSetApps(unit:number, role:number, apps:number[]):Promise<void> {\r\n        await this.post('unit/role-set-apps', {unit:unit, role:role, apps:apps});\r\n    }\r\n\r\n    async unitMembers(unit:number, role:number, key:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/members', {unit:unit, role:role, key, pageStart, pageSize});\r\n    }\r\n\r\n    async unitAssignMember(unit:number, member:number, assigned:string):Promise<void> {\r\n        await this.post('unit/assign-member', {unit:unit, member:member, assigned:assigned});\r\n    }\r\n\r\n    async unitMemberRoles(unit:number, member:number):Promise<any[]> {\r\n        return await this.get('unit/member-roles', {unit:unit, member:member});\r\n    }\r\n\r\n    async unitSetMemberRoles(unit:number, member:number, roles:number[]):Promise<void> {\r\n        await this.post('unit/member-set-roles', {unit:unit, member:member, roles:roles});\r\n    }\r\n\r\n    async unitUsers(unit:number, key:string, pageStart:number, pageSize:number):Promise<any> {\r\n        return await this.get('unit/users', {unit: unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitAppUsers(unit:number, key:string, pageStart:number, pageSize:number):Promise<any> {\r\n        return await this.get('unit/app-users', {unit: unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitOneAppUsers(unit:number, app:number, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/one-app-users', {unit: unit, app:app, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitOneUserApps(unit:number, user:number, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/one-user-apps', {unit: unit, user:user, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitAppEditUsers(unit:number, app:number, key:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/app-edit-users', {unit: unit, app:app, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitUserEditApps(unit:number, user:number, key:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/user-edit-apps', {unit: unit, user:user, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async bindAppUser(unit:number, app:number, user:number, bind:number):Promise<void> {\r\n        await this.post('unit/bind-app-user', {unit: unit, app:app, user:user, bind:bind});\r\n    }\r\n\r\n    async userFromKey(key:string):Promise<any> {\r\n        return await this.get('tie/user-from-key', {key:key});\r\n    }\r\n    async unitAddUser(unit:number, user:number) {\r\n        await this.post('unit/add-user', {unit:unit, user:user});\r\n    }\r\n}\r\n\r\nexport const mainApi = new MainApi('tv/', undefined);\r\n","import {CenterApi} from 'tonva';\r\n\r\nclass DevApi extends CenterApi {\r\n    async uqBuilderUrl():Promise<any> {\r\n        let ret = await this.get('uq-builder-url', undefined);\r\n        return ret;\r\n    }    \r\n    async counts(unit:number):Promise<any> {\r\n        return await this.get('counts', {unit:unit});\r\n    }\r\n    async app(id:number):Promise<any> {\r\n        return await this.get('app', {id:id});\r\n    }\r\n    async uq(id:number):Promise<any> {\r\n        return await this.get('uq', {id:id});\r\n    }\r\n    async server(id:number):Promise<any> {\r\n        return await this.get('server', {id:id});\r\n    }\r\n    async uqdb(id:number):Promise<any> {\r\n        return await this.get('uqdb', {id:id});\r\n    }\r\n    async apps(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('apps', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async uqs(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('uqs', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async buses(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('buses', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async servers(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('servers', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async uqdbs(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('uqdbs', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async services(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('services', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async saveApp(values:any):Promise<number> {\r\n        return await this.post('app-save', values);\r\n    }\r\n    async saveUq(values:any):Promise<number> {\r\n        return await this.post('uq-save', values);\r\n    }\r\n    async saveBus(values:any):Promise<number> {\r\n        return await this.post('bus-save', values);\r\n    }\r\n    async saveServer(values:any):Promise<number> {\r\n        return await this.post('server-save', values);\r\n    }\r\n    async saveService(values:any):Promise<number> {\r\n        return await this.post('service-save', values);\r\n    }\r\n    async delApp(unit:number,id:number):Promise<void> {\r\n        return await this.post('app-del', {unit:unit, id:id});\r\n    }\r\n    async delUq(unit:number,id:number):Promise<void> {\r\n        return await this.post('uq-del', {unit:unit, id:id});\r\n    }\r\n    async delBus(unit:number,id:number):Promise<void> {\r\n        return await this.post('bus-del', {unit:unit, id:id});\r\n    }\r\n    async delServer(unit:number,id:number):Promise<void> {\r\n        return await this.post('server-del', {unit:unit, id:id});\r\n    }\r\n    async delUqdb(unit:number,id:number):Promise<void> {\r\n        return await this.post('uqdb-del', {unit:unit, id:id});\r\n    }\r\n    async delService(unit:number,id:number):Promise<void> {\r\n        return await this.post('service-del', {unit:unit, id:id});\r\n    }\r\n    async loadAppUqs(app:number):Promise<any[]> {\r\n        return await this.get('app-uqs', {app: app});\r\n    }\r\n    async appBindUq(unit:number,app:number,uqs:{id:number, access:string[]}[]):Promise<void> {\r\n        let uqsText:string;\r\n        if (uqs !== undefined) {\r\n            uqsText = uqs.map(v => String(v.id)+'|'+v.access.join(',')).join(';');\r\n        }\r\n        await this.post('app-bind-uq', {unit:unit, app:app, uqs:uqsText});\r\n    }\r\n    async searchUq(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('uq-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async getMyUqs(unit:number):Promise<any[]> {\r\n        return await this.get('my-uqs', {unit:unit});\r\n    }\r\n    async searchApp(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('app-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async searchServer(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('server-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async searchUqdb(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('uqdb-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    //async loadAppServices(unit:number, app:number):Promise<any[]> {\r\n    //    return await this.get('app-services', {unit:unit, app:app});\r\n    //}\r\n    async loadUqServices(unit:number, uq:number):Promise<any[]> {\r\n        return await this.get('uq-services', {unit:unit, uq:uq});\r\n    }\r\n    async changeServiceProp(unit:number, service:number, prop:string, value:any):Promise<number> {\r\n        return await this.post('service-change-prop', {unit:unit, service:service, prop:prop, value:value});\r\n    }\r\n    async uqGetEntities(unit:number, uq:number):Promise<any[][]> {\r\n        return await this.get('uq-get-entities', {unit:unit, uq:uq});\r\n    }\r\n}\r\n\r\nexport const devApi = new DevApi('tv/dev/', undefined);\r\n","import {observable} from 'mobx';\r\nimport {UnitAdmin} from '../model';\r\nimport {mainApi} from '../api';\r\nimport {Store} from './index';\r\n\r\nexport class Admins {\r\n    private store:Store;\r\n    constructor(store:Store) {\r\n        this.store = store;\r\n    }\r\n\r\n    @observable cur: UnitAdmin = undefined;\r\n    @observable owners: UnitAdmin[] = undefined;\r\n    @observable admins: UnitAdmin[] = undefined;\r\n    @observable fellows: UnitAdmin[] = undefined;\r\n    \r\n    async load(): Promise<void> {\r\n        let unit = this.store.unit;\r\n        if (unit === undefined) return;\r\n        if (unit.id === undefined) return;\r\n        if (this.admins !== undefined) return;\r\n        let all = await mainApi.unitAdmins(unit.id);\r\n        let owners:UnitAdmin[] = [];\r\n        let admins:UnitAdmin[] = [];\r\n        let fellows:UnitAdmin[] = [];\r\n        all.forEach(ua => {\r\n            let {isOwner, isAdmin} = ua;\r\n            if (isOwner === 0 && isAdmin === 0)\r\n                fellows.push(ua);\r\n            else {\r\n                if (isOwner === 1) owners.push(ua);\r\n                if (isAdmin === 1) admins.push(ua);\r\n            }\r\n        });\r\n        this.owners = owners;\r\n        this.admins = admins;\r\n        this.fellows = fellows;\r\n    }\r\n\r\n    private removeCur(arr: UnitAdmin[]) {\r\n        let index = arr.findIndex(v => v.id===this.cur.id);\r\n        if (index >=0) arr.splice(index, 1);\r\n    }\r\n\r\n    async unitSetAdmin(isOwner:number, isAdmin:number) {\r\n        let cur = this.cur;\r\n        cur.isOwner = isOwner;\r\n        cur.isAdmin = isAdmin;\r\n        let fellowId = cur.id, unitId = this.store.unit.id;\r\n        await mainApi.unitSetAdmin(fellowId, unitId, isOwner, isAdmin);\r\n        this.removeCur(this.owners);\r\n        this.removeCur(this.admins);\r\n        this.removeCur(this.fellows);\r\n        if (isOwner === 0 && isAdmin === 0)\r\n            this.fellows.unshift(cur);\r\n        else {\r\n            if (isOwner === 1) this.owners.unshift(cur);\r\n            if (isAdmin === 1) this.admins.unshift(cur);\r\n        }\r\n    }\r\n\r\n    async addNew(user:string, isOwner:number, isAdmin:number):Promise<UnitAdmin> {\r\n        let admin = await mainApi.unitAddAdmin(user, this.store.unit.id, isOwner, isAdmin);\r\n        if (admin !== undefined) {\r\n            let cur = this.cur = admin;\r\n            this.removeCur(this.owners);\r\n            this.removeCur(this.admins);\r\n            this.removeCur(this.fellows);\r\n            if (isOwner === 0 && isAdmin === 0)\r\n                this.fellows.unshift(cur);\r\n            else {\r\n                if (isOwner === 1) this.owners.unshift(cur);\r\n                if (isAdmin === 1) this.admins.unshift(cur);\r\n            }\r\n        }\r\n        return admin;\r\n    }\r\n}\r\n","import {observable, autorun} from 'mobx';\r\nimport _ from 'lodash';\r\nimport {devApi} from '../api';\r\nimport {DevModel, Unit} from '../model';\r\nimport {Store} from './index';\r\n\r\ninterface Counts {\r\n    uq: number;\r\n    app: number;\r\n    bus: number;\r\n    server: number;\r\n    service: number;\r\n    //uqdb: number;\r\n}\r\n\r\nexport abstract class ObjItems<T extends DevModel.ObjBase> {\r\n    protected store:Store;\r\n    protected dev:Dev;\r\n    constructor(store:Store, dev:Dev) {\r\n        this.store = store;\r\n        this.dev = dev;\r\n    }\r\n\r\n    @observable items: T[] = undefined;\r\n    @observable cur: T = undefined;\r\n\r\n    async load():Promise<void> {\r\n         let ret = await this._load();\r\n         this.items = ret;\r\n    }\r\n    protected abstract _load():Promise<T[]>;\r\n    async saveCur(item:T):Promise<boolean> {\r\n        let values:any = {};\r\n        if (this.cur !== undefined) {\r\n            _.assign(values, this.cur, item);\r\n        }\r\n        else {\r\n            _.assign(values, item);\r\n        }\r\n\r\n        values.unit = item.unit = this.store.unit.id;\r\n        let id = await this._save(values);\r\n        if (this.cur === undefined) {\r\n            if (id === 0) return false;\r\n            values.id = id;\r\n            if (this.items !== undefined) this.items.unshift(values);\r\n            this._inc();\r\n            this.cur = observable(values);\r\n        }\r\n        else {\r\n            _.assign(this.cur, values);\r\n        }\r\n        return true;\r\n    }\r\n    async check(item:T):Promise<boolean> {\r\n        return true;\r\n    }\r\n    async save(item:T):Promise<T> {\r\n        let values:any = {};\r\n        _.assign(values, item);\r\n\r\n        values.unit = item.unit = this.store.unit.id;\r\n        let id = await this._save(values);\r\n        if (id === 0) return;\r\n        values.id = id;\r\n        return values;\r\n    }\r\n    protected abstract _save(item:T):Promise<number>;\r\n    async del():Promise<void> {\r\n        let c = this.cur;\r\n        if (c === undefined) return;\r\n        let id = c.id;\r\n        await this._del(c);\r\n        if (this.items === undefined) return;\r\n        let index = this.items.findIndex(v => v.id === id);\r\n        if (index>=0) {\r\n            this.items.splice(index, 1);\r\n            this._dec();\r\n        }\r\n    }\r\n    protected abstract _del(item:T):Promise<void>;\r\n    protected abstract _inc();\r\n    protected abstract _dec();\r\n}\r\n\r\nclass Apps extends ObjItems<DevModel.App> {\r\n    @observable uqs: DevModel.UQ[] = undefined;\r\n    @observable searchedUqs: DevModel.UQ[] = undefined;\r\n    //@observable service: DevModel.Service = null;\r\n    protected async _load() {\r\n        return await devApi.apps(this.store.unit.id);\r\n    }\r\n    protected async _save(item:DevModel.App):Promise<number> {\r\n        return await devApi.saveApp(item);\r\n    }\r\n    protected async _del(item:DevModel.App):Promise<void> {\r\n        await devApi.delApp(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.app++; }\r\n    protected _dec() { this.dev.counts.app--; }\r\n\r\n    public async loadCurUqs() {\r\n        let ret = await devApi.loadAppUqs(this.cur.id);\r\n        this.uqs = ret;\r\n    }\r\n    public async searchUq(key:string) {\r\n        this.searchedUqs = await devApi.searchUq(this.store.unit.id, key, 0, searchPageSize);\r\n    }\r\n    public async appBindUq(uqs:{id:number, access:string[]}[], bind:boolean) {\r\n        let allUqs:{id:number, access:string[]}[] = this.uqs.map(v => {\r\n            let {id, access} = v;\r\n            return {id: id, access: [access]};\r\n        });\r\n        for (let uq of uqs) {\r\n            let index = allUqs.findIndex(v => v.id === uq.id);\r\n            if (bind === true) {\r\n                if (index < 0) allUqs.unshift(uq);\r\n            }\r\n            else {\r\n                allUqs.splice(index, 1);\r\n            }\r\n        }\r\n        await devApi.appBindUq(this.store.unit.id, this.cur.id, allUqs);\r\n        for (let uq of uqs) {\r\n            let index = this.uqs.findIndex(a => a.id === uq.id);\r\n            if (index>=0) this.uqs.splice(index, 1);\r\n            if (bind === true) {\r\n                if (this.searchedUqs !== undefined) {\r\n                    let find = this.searchedUqs.find(a => a.id === uq.id);\r\n                    if (find !== undefined) this.uqs.unshift(find);\r\n                }\r\n            }\r\n            else {\r\n                // 已经删除，不需要处理\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass Uqs extends ObjItems<DevModel.UQ> {\r\n    protected async _load() {\r\n        let ret = await devApi.uqs(this.store.unit.id);\r\n        return ret;\r\n    }\r\n    protected async _save(item:DevModel.UQ):Promise<number> {\r\n        //let {access} = item;\r\n        //if (!access) access = \"*';\r\n        //let parts = access.split(',').map(v => v.trim()).filter(v => v!=='');\r\n        //item.access = parts.join(',');\r\n        return await devApi.saveUq(item);\r\n    }\r\n    protected async _del(item:DevModel.UQ):Promise<void> {\r\n        await devApi.delUq(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.uq++; }\r\n    protected _dec() { this.dev.counts.uq--; }\r\n}\r\n\r\nclass Buses extends ObjItems<DevModel.Bus> {\r\n    protected async _load() {\r\n        let ret = await devApi.buses(this.store.unit.id);\r\n        return ret;\r\n    }\r\n    protected async _save(item:DevModel.Bus):Promise<number> {\r\n        return await devApi.saveBus(item);\r\n    }\r\n    protected async _del(item:DevModel.Bus):Promise<void> {\r\n        await devApi.delBus(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.bus++; }\r\n    protected _dec() { this.dev.counts.bus--; }\r\n    async check(item:DevModel.Bus):Promise<boolean> {\r\n        let {schema} = item;\r\n        try {\r\n            let json = JSON.parse(schema);\r\n            for (let i in json) {\r\n                let face = json[i];\r\n                for (let field of face) {\r\n                    let {name, type} = field;\r\n                    if (['id', 'number', 'string'].indexOf(type)<0) {\r\n                        if (type === 'date') {\r\n                            alert('不再支持数据类型date，请用number unixtime作为媒介')\r\n                        }\r\n                        else {\r\n                            alert('不支持数据类型 ' + type);\r\n                        }\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        catch (err) {\r\n            alert(err.message);\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nclass Servers extends ObjItems<DevModel.Server> {\r\n    protected async _load() {\r\n        return await devApi.servers(this.store.unit.id);\r\n    }\r\n    protected async _save(item:DevModel.Server):Promise<number> {\r\n        return await devApi.saveServer(item);\r\n    }\r\n    protected async _del(item:DevModel.Server):Promise<void> {\r\n        await devApi.delServer(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.server++; }\r\n    protected _dec() { this.dev.counts.server--; }\r\n}\r\n/*\r\nclass Uqdbs extends ObjItems<DevModel.Uqdb> {\r\n    protected async _load() {\r\n        return await devApi.uqdbs(this.store.unit.id);\r\n    }\r\n    protected async _save(item:DevModel.Uqdb):Promise<number> {\r\n        return await devApi.saveUqdb(item);\r\n    }\r\n    protected async _del(item:DevModel.Uqdb):Promise<void> {\r\n        await devApi.delUqdb(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.uqdb++; }\r\n    protected _dec() { this.dev.counts.uqdb--; }\r\n}\r\n*/\r\nclass Services extends ObjItems<DevModel.Service> {\r\n    protected async _load() {\r\n        return await devApi.services(this.store.unit.id);\r\n    }\r\n    protected async _save(item:DevModel.Service):Promise<number> {\r\n        return await devApi.saveService(item);\r\n    }\r\n    protected async _del(item:DevModel.Service):Promise<void> {\r\n        await devApi.delService(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.service++; }\r\n    protected _dec() { this.dev.counts.service--; }\r\n    async changeProp(prop:string, value:any):Promise<number> {\r\n        let ret = await devApi.changeServiceProp(this.store.unit.id, this.cur.id, prop, value);\r\n        switch (prop) {\r\n            case 'url': this.cur.url = value; break;\r\n            case 'server': this.cur.server = value; break;\r\n            case 'db': this.cur.db = value; break;\r\n            case 'db_type': this.cur.db_type = value; break;\r\n            case 'connection': this.cur.connection = value; break;\r\n        }\r\n        return ret;\r\n    }\r\n    async loadUqServices(uq:number):Promise<void> {\r\n        let ret = await devApi.loadUqServices(this.store.unit.id, uq);\r\n        this.items = ret[0];\r\n    }\r\n}\r\n\r\nconst searchPageSize = 50;\r\ntype Search = (unit:number,key:string,pageStart:number,pageSize:number)=>Promise<any[]>;\r\nclass SearchItems<T extends DevModel.ObjBase> {\r\n    private store:Store;\r\n    private dev:Dev;\r\n    private search:(unit:number,key:string,pageStart:number,pageSize:number)=>Promise<any[]>;\r\n\r\n    constructor(store:Store, dev:Dev, search:Search) {\r\n        this.store = store;\r\n        this.dev = dev;\r\n        this.search = search;\r\n    }\r\n\r\n    @observable items: T[] = undefined;\r\n    allLoaded: boolean = false;\r\n    private key: string;\r\n    private pageStart = 0;\r\n\r\n    async first(key:string) {\r\n        this.key = key;\r\n        this.items = undefined;\r\n        this.allLoaded = false;\r\n        this.pageStart = 0;\r\n        await this.more();\r\n    }\r\n\r\n    async more():Promise<void> {\r\n        if (this.allLoaded === true) return;\r\n        let ret = await this.search(this.store.unit.id, this.key, this.pageStart, searchPageSize);\r\n        let len = ret.length;\r\n        if (len > searchPageSize) {\r\n            this.allLoaded = false;\r\n            --len;\r\n            ret.splice(len, 1);\r\n        }\r\n        else {\r\n            this.allLoaded = true;\r\n        }\r\n        if (len > 0) {\r\n            this.pageStart = ret[len-1].id;\r\n            if (this.items === undefined)\r\n                this.items = ret;\r\n            else\r\n                this.items.push(...ret);\r\n        }\r\n        else {\r\n            this.items = [];\r\n        }\r\n    }\r\n}\r\n\r\nexport class Dev {\r\n    private store:Store;\r\n    constructor(store:Store) {\r\n        this.store = store;\r\n        this.apps = new Apps(store, this);\r\n        this.uqs = new Uqs(store, this);\r\n        this.buses = new Buses(store, this);\r\n        this.servers = new Servers(store, this);\r\n        //this.uqdbs = new Uqdbs(store, this);\r\n        this.services = new Services(store, this);\r\n        this.searchApp = new SearchItems<DevModel.App>(store, this, devApi.searchApp.bind(devApi));\r\n        this.searchUq = new SearchItems<DevModel.UQ>(store, this, devApi.searchUq.bind(devApi));\r\n        this.searchServer = new SearchItems<DevModel.Server>(store, this, devApi.searchServer.bind(devApi));\r\n    }\r\n\r\n    @observable counts:Counts = undefined;\r\n    apps:Apps = undefined;\r\n    uqs:Uqs = undefined;\r\n    buses:Buses = undefined;\r\n    servers:Servers = undefined;\r\n    //uqdbs:Uqdbs = undefined;\r\n    services:Services = undefined;\r\n\r\n    searchApp:SearchItems<DevModel.App> = undefined;\r\n    searchUq:SearchItems<DevModel.UQ> = undefined;\r\n    searchServer:SearchItems<DevModel.Server> = undefined;\r\n    searchUqdb:SearchItems<DevModel.Uqdb> = undefined;\r\n    \r\n    async loadCounts(): Promise<void> {\r\n        let {unit} = this.store;\r\n        this.counts = await devApi.counts(unit.id);\r\n    }\r\n}\r\n","import {CacheIds} from 'tonva';\r\nimport {Id, Unit, DevModel} from '../model';\r\nimport {mainApi, devApi} from '../api';\r\n\r\nexport class CacheUnits extends CacheIds<Unit> {\r\n    protected async _loadIds(ids:number[]):Promise<Unit[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<Unit> {\r\n        return await mainApi.unit(id);\r\n    }\r\n}\r\n\r\nexport class CacheUqs extends CacheIds<DevModel.UQ> {\r\n    protected async _loadIds(ids:number[]):Promise<DevModel.UQ[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<DevModel.UQ> {\r\n        return await devApi.uq(id);\r\n    }\r\n}\r\n\r\nexport class CacheApps extends CacheIds<DevModel.App> {\r\n    protected async _loadIds(ids:number[]):Promise<DevModel.App[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<DevModel.App> {\r\n        return await devApi.app(id);\r\n    }\r\n}\r\n\r\nexport class CacheServers extends CacheIds<DevModel.Server> {\r\n    protected async _loadIds(ids:number[]):Promise<DevModel.Server[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<DevModel.Server> {\r\n        return await devApi.server(id);\r\n    }\r\n}\r\n","import {observable, autorun} from 'mobx';\r\nimport _ from 'lodash';\r\nimport {appInFrame, host} from 'tonva';\r\nimport {mainApi, devApi} from '../api';\r\nimport {Unit, UnitApps, App, Api, UnitAdmin, UnitApp, Role, RoleMember} from '../model';\r\nimport {Admins} from './admins';\r\nimport {Dev} from './dev';\r\nimport {CacheUnits, CacheUqs, CacheApps, CacheServers} from './cacheIds';\r\n\r\nexport class Store {\r\n    private get unitId():number {return appInFrame.unit;};\r\n    admins:Admins;\r\n    dev:Dev;\r\n    cacheUnits: CacheUnits;\r\n    cacheUqs: CacheUqs;\r\n    cacheApps: CacheApps;\r\n    cacheServers: CacheServers;\r\n    uqServer: string;\r\n\r\n    @observable unit: Unit;\r\n    @observable memberCount: number;\r\n    @observable apps: UnitApp[];\r\n    @observable role:Role;\r\n    @observable roles: Role[];\r\n    @observable roleApps: UnitApp[];\r\n    @observable roleMember: RoleMember;\r\n    @observable roleMembers: RoleMember[];\r\n    @observable memberRoles: Role[];\r\n\r\n    init() {\r\n        this.unit = undefined;\r\n        this.admins = new Admins(this);\r\n        this.dev = new Dev(this);\r\n        this.cacheUnits = new CacheUnits();\r\n        this.cacheUqs = new CacheUqs();\r\n        this.cacheApps = new CacheApps();\r\n        this.cacheServers = new CacheServers();\r\n    }\r\n\r\n    logout() {\r\n        //meInFrame.app = undefined;\r\n        appInFrame.hash = undefined;\r\n        //let unitId = process.env.REACT_APP_DEBUG_UNITID;\r\n        //if (unitId !== undefined)\r\n        //    meInFrame.unit = Number(unitId);\r\n        appInFrame.unit = undefined;\r\n        this.init();\r\n        this.memberCount = undefined;\r\n        this.apps = undefined;\r\n        this.role = undefined;\r\n        this.roles = undefined;\r\n        this.roleApps = undefined;\r\n        this.roleMember = undefined;\r\n        this.roleMembers = undefined;\r\n        this.memberRoles = undefined;\r\n    }\r\n\r\n    setRole(role:Role) {\r\n        if (this.role === role) return;\r\n        this.role = role;\r\n        this.roleApps = undefined;\r\n        this.roleMember = undefined;\r\n        this.roleMembers = undefined;\r\n        this.memberRoles = undefined;\r\n    }\r\n\r\n    setRoleUser(user:RoleMember) {\r\n        if (this.roleMember === user) return;\r\n        this.roleMember = user;\r\n        this.memberRoles = undefined;\r\n    }\r\n\r\n    async unitChangeProp(prop:string, value:any):Promise<void> {\r\n        await mainApi.unitChangeProp(this.unit.id, prop, value);\r\n        this.unit[prop] = value;\r\n    }\r\n\r\n    async loadApps(): Promise<void> {\r\n        if (this.apps !== undefined) return;\r\n        this.apps = await mainApi.unitApps(this.unitId);\r\n    }\r\n\r\n    async loadUnit(): Promise<void> {\r\n        if (this.unitId === undefined) return;\r\n        let ret = await mainApi.unit(this.unitId);\r\n        this.unit = ret;\r\n        console.log(\"loadUnit unit=%s\", ret);\r\n        this.memberCount = await mainApi.unitMemberCount(this.unitId);\r\n        let uqServer = await devApi.uqBuilderUrl();\r\n        let {url} = uqServer;\r\n        this.uqServer = host.getUrlOrDebug(url, 'uq-build');\r\n        console.log(\"uq-build: %s\", JSON.stringify(this.uqServer));\r\n    }\r\n\r\n    async stopUnitApp(appId:number): Promise<void> {\r\n        await mainApi.unitDeleteApp(this.unit.id, appId, 1);\r\n        let app = this.apps.find(v => v.id === appId);\r\n        app.inUnit = 0;\r\n    }\r\n\r\n    async restoreUnitApp(appId:number): Promise<number> {\r\n        let ret = await mainApi.unitAddApp(this.unit.id, appId);\r\n        if (ret <= 0) return ret;\r\n        let app = this.apps.find(v => v.id === appId);\r\n        app.inUnit = 1;\r\n        return 1;\r\n    }\r\n\r\n    async addUnitApp(app:UnitApp): Promise<number> {\r\n        let ret = await mainApi.unitAddApp(this.unit.id, app.id);\r\n        if (ret <= 0) return ret;\r\n        this.apps.push(app);\r\n        return 1;\r\n    }\r\n\r\n    async loadRoles(): Promise<void> {\r\n        if (this.roles !== undefined) return;\r\n        let ret = await mainApi.unitRoles(this.unit.id);\r\n        ret.forEach(v => {\r\n            switch (v.id) {\r\n                case 1: \r\n                    v.name= '访客';\r\n                    v.discription = '可以获取开放信息';\r\n                    break;\r\n                case 2: \r\n                    v.name= '普通';\r\n                    v.discription = '能访问最基本的功能';\r\n                    break;\r\n            }\r\n        });\r\n        this.roles = ret;\r\n    }\r\n\r\n    async unitAddRole(name:string, discription:string): Promise<number> {\r\n        let id = await mainApi.unitAddRole(this.unit.id, name, discription);\r\n        if (id > 0) {\r\n            this.roles.push({\r\n                id: id,\r\n                name: name,\r\n                discription: discription,\r\n                count: undefined,\r\n            });\r\n        }\r\n        return id;\r\n    }\r\n\r\n    async roleChangeProp(prop:string, value:any):Promise<void> {\r\n        await mainApi.unitRoleChangeProp(this.unit.id, this.role.id, prop, value);\r\n        this.role[prop] = value;\r\n    }\r\n\r\n    async loadRoleApps():Promise<void> {\r\n        let ret = await mainApi.unitRoleApps(this.unit.id, this.role.id);\r\n        this.roleApps = ret.map(v => {\r\n            return this.apps.find(app=>app.id === v.id);\r\n        });\r\n    }\r\n\r\n    async setRoleApps(apps:UnitApp[]) {\r\n        await mainApi.unitRoleSetApps(this.unit.id, this.role.id, apps.map(v=>v.id));\r\n        this.roleApps = apps;\r\n    }\r\n\r\n    async loadMembers():Promise<void> {\r\n        let ret = await mainApi.unitMembers(this.unit.id, this.role === undefined? 0:this.role.id, undefined, 0, 100);\r\n        this.roleMembers = ret;\r\n    }\r\n\r\n    async unitAssignMember(assigned:string):Promise<void> {\r\n        await mainApi.unitAssignMember(this.unit.id, this.roleMember.id, assigned);\r\n        this.roleMember.assigned = assigned;\r\n    }\r\n\r\n    async loadMemberRoles():Promise<void> {\r\n        let ret = await mainApi.unitMemberRoles(this.unit.id, this.roleMember.id);\r\n        let roles:Role[] = ret.map(v => {\r\n            let rId = v.id;\r\n            let role = this.roles.find(r => r.id === rId);\r\n            return _.clone(role);\r\n        });\r\n        this.memberRoles = roles;\r\n    }\r\n\r\n    async setMemberRoles(memberRoles:Role[]) {\r\n        await mainApi.unitSetMemberRoles(this.unit.id, this.roleMember.id, memberRoles.map(v=>v.id));\r\n        this.roles.forEach(role => {\r\n            let rId = role.id;\r\n            let org = this.memberRoles.find(v => v.id === rId);\r\n            let cur = memberRoles.find(v => v.id === rId);\r\n            if (org !== undefined) {\r\n                if (cur !== undefined) return;\r\n                role.count--;\r\n                return;\r\n            }\r\n            if (cur === undefined) return;\r\n            role.count++;\r\n        });\r\n        this.memberRoles = memberRoles;\r\n    }\r\n};\r\n\r\nexport const store = new Store();\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page, Context, Form, Schema, UiSchema, UiTextItem} from 'tonva';\r\nimport {store} from '../store';\r\n\r\n@observer\r\nexport default class NewFellowPage extends React.Component<{isOwner:boolean, isAdmin:boolean}> {\r\n    //private form: TonvaForm;\r\n    private schema: Schema = [\r\n        {name:'user', type:'string', required:true},\r\n        {name:'submit', type:'submit'}\r\n    ]\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            user: {widget:'text', maxLength: 100, placeholder: '用户名', label: '管理员'} as UiTextItem,\r\n            submit: {widget:'button', label: '添加', className: 'btn btn-primary'}\r\n        }\r\n    }\r\n    /*\r\n    private formRows:FormRow[] = [\r\n        {\r\n            label: '用户名',\r\n            field: {\r\n                type: 'string',\r\n                name: 'user',\r\n                required: true,\r\n                maxLength: 100,\r\n            },\r\n            face: {\r\n                type: 'string',\r\n                placeholder: '用户名',\r\n            }\r\n        },\r\n    ];\r\n    private schema:FormSchema = new FormSchema({\r\n        fields: [\r\n            {\r\n                type: 'string',\r\n                name: 'user',\r\n                placeholder: '用户名',\r\n                label: '邀请成员',\r\n                rules: ['required', 'maxlength:100']\r\n            },\r\n        ],\r\n        onSumit: this.onSendInvitation,\r\n        submitText: '邀请'\r\n    });\r\n    */\r\n    private onSendInvitation = async (name:string, context:Context): Promise<string> => {\r\n        let {isOwner, isAdmin} = this.props;\r\n        let user = context.form.data['user'];\r\n        let ret = await store.admins.addNew(user, isOwner?1:0, isAdmin?1:0);\r\n        if (ret !== undefined) {\r\n            nav.pop();\r\n            return;\r\n        }\r\n        return user + '没有关注小号';\r\n        /*\r\n        let msg = {a: 1, b: 'ddd'};\r\n        let toName = values['user'];\r\n        let userId = await mainApi.userId(toName);\r\n        if (userId === 0) {\r\n            this.form.formView.setError('user', '\\'' + toName +  '\\' 不存在');\r\n            return;\r\n        }\r\n        await mainApi.sendMessage(userId, 'unit-follow-invite', msg);\r\n        nav.replace(<Page header='完成' back=\"close\">\r\n            <Card>\r\n                <CardBody>\r\n                    <CardTitle>邀请成员</CardTitle>\r\n                    <CardText>已发送给{toName}，请等待确认。</CardText>\r\n                    <Button color='primary' onClick={()=>nav.back()}>完成</Button>\r\n                </CardBody>\r\n            </Card>\r\n        </Page>);\r\n        */\r\n    }\r\n    render() {\r\n        let {isOwner, isAdmin} = this.props;\r\n        let caption = isOwner? \"高管\" : \"管理员\";\r\n        return <Page header={'新增' + caption}>\r\n            <div className=\"container\">\r\n                <div className='my-4 text-info'>\r\n                    只有关注本小号的用户，才能成为{caption}\r\n                </div>\r\n                <Form schema={this.schema} uiSchema={this.uiSchema} onButtonClick={this.onSendInvitation}/>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n// <ValidForm formSchema={this.schema} />\r\n//<TonvaForm ref={f=>this.form=f} formRows={this.formRows} onSubmit={this.onSendInvitation} />\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page, Schema, UiSchema, ItemSchema, UiCheckItem, UiButton, ButtonSchema, Form, Context, Image} from 'tonva';\r\nimport {store} from '../store';\r\nimport { UnitAdmin } from '../model/index';\r\n//import {mainApi} from '../api';\r\n//, ValidForm, FormSchema, FormFields, Field\r\n\r\n@observer\r\nexport default class EditAdmin extends React.Component {\r\n    private onSubmit = async (name:string, context:Context) => {\r\n        let {isOwner, isAdmin} = context.form.data;\r\n        await store.admins.unitSetAdmin(isOwner, isAdmin);\r\n        nav.pop();\r\n    }\r\n    render() {\r\n        let {unit} = store;\r\n        let {isRoot, isOwner, isAdmin} = unit;\r\n        let unitAdmin = store.admins.cur;\r\n        let owner:ItemSchema = {name: 'isOwner', type: 'boolean'};\r\n        let admin:ItemSchema = {name: 'isAdmin', type: 'boolean'};\r\n        let submit:ButtonSchema = {name: 'submit', type: 'submit'};\r\n        let schema:ItemSchema[];\r\n        if (isRoot === 1) schema = [owner, admin, submit];\r\n        else if (isOwner === 1) schema = [admin, submit];\r\n        let data = {\r\n            isOwner: unitAdmin.isOwner,\r\n            isAdmin: unitAdmin.isAdmin,\r\n        };\r\n\r\n        let uiSchema = {\r\n            items: {\r\n                'isOwner': {widget: 'checkbox', label: '高管', trueValue:1, falseValue:0} as UiCheckItem,\r\n                'isAdmin': {widget: 'checkbox', label: '管理员', trueValue:1, falseValue:0} as UiCheckItem,\r\n                'submit': {widget: 'button', label: '提交', className: 'btn btn-primary'} as UiButton,\r\n            }\r\n        };\r\n\r\n        return <Page header='权限'>\r\n            <div className=\"px-3\">\r\n                <Fellow {...store.admins.cur} />\r\n                <Form schema={schema} uiSchema={uiSchema} formData={data} onButtonClick={this.onSubmit} />\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n\r\nconst Fellow = (props:UnitAdmin) => {\r\n    let {name, nick, icon} = props;\r\n    //<img className='w-75' src={icon || process.env.REACT_APP_DEFAULT_ICON} />\r\n    return <div>\r\n        <div className='d-flex my-4'>\r\n            <Image className=\"w-3c h-3c mr-3\" src={icon} />\r\n            <div className=\"\">\r\n                <h4 className='text-dark'>{name}</h4>\r\n                {nick && <h6><small className='text-secondary'>{nick}</small></h6>}\r\n            </div>\r\n        </div>\r\n        <hr className='mb-4' />\r\n    </div>;\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page, Image} from 'tonva';\r\nimport {UnitApps, UnitAdmin} from '../model';\r\nimport {store} from '../store';\r\nimport NewFellow from './NewFellow';\r\nimport EditAdmin from './EditAdmin';\r\nimport {LMR, Badge, List} from 'tonva';\r\n\r\n@observer\r\nexport default class AdministorsPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.admins.load();\r\n    }\r\n\r\n    onNewFellow() {\r\n        //nav.push(<NewFellow />);\r\n    }\r\n    onItemClick(ua:UnitAdmin) {\r\n        store.admins.cur = ua;\r\n        nav.push(<EditAdmin />);\r\n    }\r\n    private row = ({icon, name, nick}:UnitAdmin) => {\r\n        let content = nick?\r\n            <><b>{nick}</b> &nbsp; <small className=\"text-muted\">{name}</small></>\r\n            :\r\n            <b>{name}</b>;\r\n        let left = <Image className=\"w-2-5c h-2-5c\" src={icon} />; \r\n        return <LMR className=\"py-2 px-3 align-items-stretch\" left={left}>\r\n            <div className=\"px-3\">{content}</div>\r\n        </LMR>;\r\n    }\r\n\r\n    private onNewOwner = (evt: React.MouseEvent<HTMLAnchorElement>) => {\r\n        this.newAdmin(evt, true, false);\r\n    }\r\n\r\n    private onNewAdmin = (evt: React.MouseEvent<HTMLAnchorElement>) => {\r\n        this.newAdmin(evt, false, true);\r\n    }\r\n\r\n    private newAdmin(evt: React.MouseEvent<HTMLAnchorElement>, isOwner:boolean, isAdmin:boolean) {\r\n        evt.preventDefault();\r\n        nav.push(<NewFellow isOwner={isOwner} isAdmin={isAdmin} />);\r\n    } \r\n    render() {\r\n        //let n = nav;\r\n        //let me = n.local.user.get().id;\r\n        let {unit} = store;\r\n        if (unit === undefined) return;\r\n        let {owners, admins, fellows} = store.admins;\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.onNewFellow}>新增成员</button>;\r\n\r\n        let showOwners = false, showAdmins = false;\r\n        let ownersView, adminsView, fellowsView;\r\n        if (unit.isRoot === 1) {\r\n            showOwners = true;\r\n            showAdmins = true;\r\n        }\r\n        if (unit.isOwner === 1) showAdmins = true;\r\n        if (showOwners === true) {\r\n            let header = <LMR \r\n                className=\"px-3 py-1 small\"\r\n                left=\"高管\" \r\n                right={<a className=\"small\" href='#' onClick={this.onNewOwner}>新增</a>} />;\r\n            ownersView = <List \r\n                className=\"my-4\"\r\n                header={header} items={owners}\r\n                none=\"[无]\"\r\n                item={{onClick: this.onItemClick, render: this.row}}\r\n            />;\r\n        }\r\n        if (showAdmins === true) {\r\n            let header = <LMR \r\n                className=\"px-3 py-1 small\"\r\n                left=\"管理员\" \r\n                right={<a className=\"small\" href='#' onClick={this.onNewAdmin}>新增</a>} />;\r\n            adminsView = <List \r\n                className='my-4' \r\n                header={header} items={admins} \r\n                none='[无]'\r\n                item={{onClick: this.onItemClick, render: this.row}}\r\n            />;\r\n        }\r\n        return <Page header=\"管理员\" right={right}>\r\n            {ownersView}\r\n            {adminsView}\r\n            <div className=\"my-4 p-3\">\r\n                <div className=\"ml-2 mb-2\">说明</div>\r\n                <div className=\"\">\r\n                    <ul className=\"pl-2\">\r\n                        <li className=\"card-text\">管理组包括主人、高管、管理员</li>\r\n                        <li className=\"card-text\">小号主人可以增减高管</li>\r\n                        <li className=\"card-text\">高管可以增减管理员</li>\r\n                        <li className=\"card-text\">管理员可以管理小号，程序的开发，以及用户</li>\r\n                        <li className=\"card-text\">开发号高管可以增减编辑APP，UQ，Server，Service</li>\r\n                        <li className=\"card-text\">开发号管理员可以编译指定UQ，BUS</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {EasyDate} from 'tonva';\r\n\r\nexport interface IdDatesProps {\r\n    date_init: Date;\r\n    date_update: Date;\r\n}\r\n\r\nexport class IdDates extends React.Component<IdDatesProps> {\r\n    render() {\r\n        let {date_init, date_update} = this.props;\r\n        return <small className=\"text-muted\">\r\n            上次修改: <EasyDate date={date_update}/>\r\n            <i className=\"fa fa-fw\" />\r\n            创建: <EasyDate date={date_init}/>\r\n        </small>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\n\r\nexport function span(\r\n    isLink:boolean,\r\n    className:string, \r\n    onClick:(evt:React.MouseEventHandler<HTMLElement>)=>void,\r\n    content:any): JSX.Element\r\n{\r\n    let tag:string;\r\n    let props:any;\r\n    if (isLink === true) {\r\n        tag = 'a';\r\n        props = {\r\n            className: classNames(className, 'cursor-pointer'),\r\n            onClick: onClick,\r\n            href: '#',\r\n        }\r\n    }\r\n    else {\r\n        tag = 'span';\r\n        props = {\r\n            className: className,\r\n        }\r\n    }\r\n    return React.createElement(tag, props, content);\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {Prop, ListProp, Media, PropGrid} from 'tonva';\r\nimport {nav, Page}  from 'tonva';\r\nimport {store} from '../store';\r\nimport {span} from './span';\r\n\r\nexport interface UnitLinkProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class UnitSpan extends React.Component<UnitLinkProps> {\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<UnitInfo id={this.props.id} />);\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        if (id === undefined) return null;\r\n        let unit = store.cacheUnits.get(id);\r\n        let content;\r\n        let {name, nick, discription} = unit;\r\n        let disc = discription && '- ' + discription;\r\n        if (nick) {\r\n            content = <>{nick} &nbsp; <small className=\"text-muted\">{name} {disc}</small></>;\r\n        }\r\n        else if (name) {\r\n            content = <>{name} &nbsp; <small className=\"text-muted\">{disc}</small></>;\r\n        }\r\n        else {\r\n            content = id;\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\n@observer\r\nexport class UnitName extends React.Component<UnitLinkProps> {\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        if (id === undefined) return null;\r\n        let unit = store.cacheUnits.get(id);\r\n        let {name} = unit;\r\n        return <>{name}</>;\r\n    }\r\n}\r\n\r\nclass UnitInfo extends React.Component<UnitLinkProps> {\r\n    private rows:Prop[];\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        let unit = store.cacheUnits.get(this.props.id);\r\n        let {name, nick, icon, discription} = unit;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={icon} main={name} discription={discription} />},\r\n            '',\r\n        ];\r\n        return <Page header={'小号 - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n","export const appIcon = process.env.REACT_APP_ICON;\r\nexport const appItemIcon = process.env.REACT_APP_ITEM_ICON;\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport * as classNames from 'classnames';\r\nimport {Prop, Media, PropGrid} from 'tonva';\r\nimport {nav, Page}  from 'tonva';\r\nimport {appIcon, appItemIcon} from 'consts';\r\nimport {store} from 'store';\r\nimport {IdDates} from './idDates';\r\nimport {span} from './span';\r\nimport {UnitSpan} from './unitSpan';\r\n\r\nexport interface UqLinkProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class UqSpan extends React.Component<UqLinkProps> {\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<UqInfo id={this.props.id} />);\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, className, isLink} = this.props;\r\n        let api = store.cacheUqs.get(id);\r\n        let content;\r\n        if (api === null) {\r\n            content = id;\r\n        }\r\n        else {\r\n            let {name, discription} = api;\r\n            let disc = discription && '- ' + discription;\r\n            if (name !== undefined) {\r\n                content = <React.Fragment>{name} &nbsp; <small className=\"text-muted\">{disc}</small></React.Fragment>;\r\n            }\r\n            else {\r\n                content = id;\r\n            }\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\n@observer\r\nclass UqInfo extends React.Component<UqLinkProps> {\r\n    private rows:Prop[];\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        let uq = store.cacheUqs.get(this.props.id);\r\n        let {name, discription, unit, date_init, date_update} = uq;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={name} discription={disp} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n        ];\r\n        return <Page header={'UQ - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport {Prop, ListProp, Media, PropGrid} from 'tonva';\r\nimport {nav, Page}  from 'tonva';\r\nimport {store} from '../store';\r\nimport {devApi} from '../api';\r\nimport {span} from './span';\r\nimport {IdDates} from './idDates';\r\nimport {UnitSpan} from './unitSpan';\r\n\r\nexport interface AppSpanProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class AppSpan extends React.Component<AppSpanProps> {\r\n    /*\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.onClick = this.onClick.bind(this);\r\n    }\r\n    componentWillMount() {\r\n        let {id} = this.props;\r\n        store.cacheApps.get(id);\r\n    }\r\n    */\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<AppInfo id={this.props.id} />)\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        let app = store.cacheApps.get(id);\r\n        let content;\r\n        if (app === null) {\r\n            content = id;\r\n        }\r\n        else {\r\n            let {name, icon, discription} = app;\r\n            let isPublic = app.public;\r\n            let disc = discription && '- ' + discription;\r\n            if (name !== undefined) {\r\n                content = <React.Fragment>{name} &nbsp; <small className=\"text-muted\">{disc}</small></React.Fragment>;\r\n            }\r\n            else {\r\n                content = id;\r\n            }\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\n\r\n@observer\r\nclass AppInfo extends React.Component<AppSpanProps> {\r\n    private rows:Prop[];\r\n    @observable private apis:ListProp = {\r\n        label: '关联API', type: 'list', list: undefined, row: AppRow\r\n    };\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    async componentDidMount() {\r\n        this.apis.list = await devApi.loadAppUqs(this.props.id);\r\n    }\r\n    render() {\r\n        let app = store.cacheApps.get(this.props.id);\r\n        let {unit, name, discription, icon, date_init, date_update} = app;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={icon} main={name} discription={disp} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            this.apis,\r\n        ];\r\n        return <Page header={'APP - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass AppRow extends React.Component<any> {\r\n    render() {\r\n        let {name, discription} = this.props;\r\n        let disp;\r\n        if (discription) disp = <div className=\"small text-muted\">{discription}</div>;\r\n        return <div className='form-control-plaintext'>\r\n            <div>{name}</div>\r\n            {disp}\r\n        </div>\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport * as classNames from 'classnames';\r\nimport {Prop, ListProp, Media, PropGrid} from 'tonva';\r\nimport {nav, Page}  from 'tonva';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {store} from '../store';\r\nimport {DevModel} from '../model';\r\nimport {devApi} from '../api';\r\nimport {span} from './span';\r\nimport {IdDates} from './idDates';\r\nimport {UnitSpan} from './unitSpan';\r\n\r\nexport interface ServerSpanProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class ServerSpan extends React.Component<ServerSpanProps> {\r\n    /*\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.onClick = this.onClick.bind(this);\r\n    }\r\n    componentWillMount() {\r\n        let {id} = this.props;\r\n        store.cacheServers.get(id);\r\n    }\r\n    */\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<ServerInfo id={this.props.id} />)\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        let server = store.cacheServers.get(id);\r\n        let content;\r\n        if (server === null) {\r\n            content = id;\r\n        }\r\n        else {\r\n            let {cloud, ip, discription} = server;\r\n            if (discription !== undefined) {\r\n                content = <React.Fragment>{discription} &nbsp; <small className=\"text-muted\">{ip}</small></React.Fragment>;\r\n            }\r\n            else {\r\n                content = id;\r\n            }\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\nclass ServerInfo extends React.Component<ServerSpanProps> {\r\n    private rows:Prop[];\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        let server = store.cacheServers.get(this.props.id);\r\n        let {discription, cloud, ip, unit, date_init, date_update} = server;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={discription} discription={ip} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            {type: 'string', label: '云服务', name: 'cloud'},\r\n        ];\r\n        return <Page header={'服务器 - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {nav, Page} from 'tonva';\r\n\r\ninterface StringValueEditProps {\r\n    title: string;\r\n    onChanged:(value:any, orgValue:any)=>Promise<string|void>;\r\n    value?: any;\r\n    buttonText?: string;\r\n    info?: string;\r\n}\r\ninterface StringValueEditState {\r\n    disabled: boolean;\r\n    error?: string;\r\n}\r\n\r\nexport class StringValueEdit extends React.Component<StringValueEditProps, StringValueEditState> {\r\n    //private input:HTMLInputElement;\r\n    protected value: string;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            disabled: true,\r\n        };\r\n    }\r\n    /*\r\n    private ref = (input:HTMLInputElement) => {\r\n        if (!input) return;\r\n        input.value = this.props.value || '';\r\n        this.input = input;\r\n    }*/\r\n    private onChange = (evt:React.FormEvent<HTMLInputElement>) => {\r\n        let val = this.props.value;\r\n        let org = val && val.trim();\r\n        this.value = evt.currentTarget.value.trim();\r\n        this.setState({\r\n            disabled: org === this.value\r\n        });\r\n        \r\n    }\r\n    protected onSubmit = async () => {\r\n        let val = this.props.value;\r\n        let org = val && val.trim();\r\n        let v = this.value; // this.input.value.trim();\r\n        let onChanged = this.props.onChanged;\r\n        if (onChanged !== undefined) {\r\n            let ret = await onChanged(v, org);\r\n            if (typeof ret === 'string') {\r\n                this.setState({error: ret});\r\n                return;\r\n            }\r\n            nav.pop();\r\n        }\r\n    }\r\n    protected renderControl() {\r\n        return <input className=\"form-control w-100\" type=\"text\"\r\n            // ref={this.ref}\r\n            defaultValue={this.props.value}\r\n            onChange={this.onChange} />\r\n    }\r\n    render() {\r\n        let {title, onChanged, buttonText, info, value} = this.props;\r\n        let {disabled, error} = this.state;\r\n        let right = <button\r\n            className=\"btn btn-success btn-sm\"\r\n            disabled={disabled}\r\n            onClick={this.onSubmit}\r\n        >\r\n            {buttonText||'保存'}\r\n        </button>;\r\n        let errorDiv;\r\n        if (error !== undefined) errorDiv = <div className='text-danger'>{error}</div>;\r\n        return <Page header={title} right={right}>\r\n            <div className=\"my-4 mx-3\">\r\n                {this.renderControl()}\r\n                {errorDiv}\r\n                <small className=\"d-block mt-2 text-muted\">{info}</small>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n\r\nexport class TextValueEdit extends StringValueEdit {\r\n    /*\r\n    private textArea:HTMLTextAreaElement;\r\n    private refTextArea = (textArea:HTMLTextAreaElement) => {\r\n        if (!textArea) return;\r\n        textArea.value = this.props.value || '';\r\n        this.textArea = textArea;\r\n    }\r\n    */\r\n    private onTextAreaChange = (evt:React.FormEvent<HTMLTextAreaElement>) => {\r\n        let val = this.props.value;\r\n        let org = val && val.trim();\r\n        this.value = evt.currentTarget.value.trim();\r\n        this.setState({\r\n            disabled: org === this.value\r\n        })\r\n    }\r\n    protected renderControl() {\r\n        return <textarea className=\"form-control w-100\" rows={8}\r\n            // ref={this.refTextArea}\r\n            defaultValue={this.props.value}\r\n            onChange={this.onTextAreaChange} />\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { nav, Page } from 'tonva';\r\nimport { SearchBox, List } from 'tonva';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport interface IdPickPageProps {\r\n    caption: string;\r\n    searchPlaceHolder?: string;\r\n    candidateItems: ((params:any, key:string) => Promise<any[]>) | any[];\r\n    moreCandidates: () => Promise<void>;\r\n    row: (item:any, index:number) => JSX.Element;\r\n    idFromItem: (item:any) => number;\r\n    resolve: (item?: any) => void;\r\n    params: any;\r\n}\r\n\r\n@observer\r\nexport class IdPickPage extends React.Component<IdPickPageProps> {\r\n    @observable private items:any[];\r\n\r\n    async componentDidMount() {\r\n        let {candidateItems, params} = this.props;\r\n        this.items = Array.isArray(candidateItems)? \r\n            candidateItems \r\n            : await candidateItems(params, '');\r\n    }\r\n    private itemClick = (item:any):Promise<void> => {\r\n        let {resolve, idFromItem} = this.props;\r\n        resolve(idFromItem(item));\r\n        nav.pop();\r\n        return;\r\n    }\r\n    private onSearch = async (key: string):Promise<void> => {\r\n        let {candidateItems, params} = this.props;\r\n        if (typeof candidateItems === 'function') {\r\n            let ret = await candidateItems(params, key);\r\n            this.items = ret;\r\n        }\r\n        return;\r\n    }\r\n    render() {\r\n        let {caption, row, searchPlaceHolder} = this.props;\r\n        return <Page header={caption} back=\"close\">\r\n            <div className=\"container\">\r\n                <SearchBox className=\"my-2\" \r\n                    onSearch={this.onSearch} \r\n                    placeholder={searchPlaceHolder}\r\n                    maxLength={100} />\r\n            </div>\r\n            <List items={this.items} item={{onClick:this.itemClick, render:row}} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport {SearchBox, Media, List, LMR, Badge, Prop, PropGrid, FA} from 'tonva';\r\nimport {nav, Page, PageItems} from 'tonva';\r\nimport {IdDates, UnitSpan} from '../tools';\r\nimport {UnitApp, DevModel} from '../model';\r\nimport {store} from '../store';\r\nimport { devApi } from 'api';\r\n\r\n@observer\r\nexport class Info extends React.Component<{app:UnitApp, appActed?:(appId:number, inUnit:number)=>void}> {\r\n    @observable private uqAccesses: any[];\r\n    async componentWillMount() {\r\n        this.uqAccesses = await devApi.loadAppUqs(this.props.app.id);\r\n    }\r\n\r\n    private renderUqRow = (uqAccess:any, index:number):JSX.Element => {\r\n        let {name, owner, unit, discription} = uqAccess;\r\n        return <LMR className=\"py-2\" right={<small className=\"text-muted\">{discription}</small>}>\r\n            {owner} / {name}\r\n        </LMR>;\r\n    }\r\n\r\n    private act = async () => {\r\n        let {app, appActed} = this.props;\r\n        let {id, unit, inUnit} = app;\r\n        let newInUnit:number = 1;\r\n        if (inUnit === 0) {\r\n            let ret = await store.restoreUnitApp(id);\r\n            if (ret <= 0) alert('app 或者 uq 没有定义 service');\r\n        }\r\n        else if (inUnit === 1) {\r\n            await store.stopUnitApp(id);\r\n            newInUnit = 0;\r\n        }\r\n        else {\r\n            let newApp:UnitApp = _.clone(app);\r\n            newApp.id = id;\r\n            newApp.inUnit = 1;\r\n            let ret = await store.addUnitApp(newApp);\r\n            if (ret <= 0) alert('app 或者 uq 没有定义 service');\r\n        }\r\n        if (appActed !== undefined) {\r\n            appActed(id, newInUnit);\r\n        }\r\n        nav.pop();\r\n    }\r\n    render() {\r\n        let {unit, name, discription, icon, inUnit, date_init, date_update} = this.props.app;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let faName:string, text:string, color:string;\r\n        if (inUnit === 1) {\r\n            faName = 'ban';\r\n            text = '停用APP';\r\n            color = 'btn-danger';\r\n        }\r\n        else if (inUnit === 0) {\r\n            faName = 'refresh';\r\n            text = '恢复APP';\r\n            color = 'btn-success';\r\n        }\r\n        else {\r\n            faName = 'plus';\r\n            text = '启用APP';\r\n            color = 'btn-primary';\r\n        }\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <Media icon={icon} main={name} discription={disp} />\r\n            },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                label: '开发号', \r\n                component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div>\r\n            },\r\n            {\r\n                type: 'component', \r\n                label: '关联UQ', \r\n                component: <List className=\"w-100\" items={this.uqAccesses} item={{render: this.renderUqRow}} />\r\n            },\r\n            '',\r\n            '',\r\n            {\r\n                type: 'component', \r\n                bk: '', \r\n                component: <button className={classNames('btn', 'w-100', color)} onClick={this.act}>\r\n                    <FA name={faName} size=\"lg\" /> {text}\r\n                </button>\r\n            },\r\n        ];\r\n        return <div>\r\n            <PropGrid rows={rows} values={this.props} />\r\n        </div>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {IObservableArray} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport {SearchBox, Media, List, LMR, Badge, Prop, PropGrid} from 'tonva';\r\nimport {nav, Page, PageItems, Image} from 'tonva';\r\nimport {mainApi} from '../api';\r\nimport {store} from '../store';\r\nimport {UnitApp} from '../model';\r\nimport {Info} from './info';\r\n\r\nclass PageApps extends PageItems<UnitApp> {\r\n    private unitId:number;\r\n    constructor(unitId:number) {\r\n        super();\r\n        this.unitId = unitId;\r\n    }\r\n    protected async load():Promise<UnitApp[]> {\r\n        return await mainApi.searchApp(this.unitId, this.param, this.pageStart, this.pageSize);\r\n    }\r\n    protected setPageStart(item:UnitApp) {\r\n        if (item === undefined)\r\n            this.pageStart = 0;\r\n        else\r\n            this.pageStart = item.id;\r\n    }\r\n}\r\n\r\n@observer\r\nexport class NewApp extends React.Component {\r\n    private apps: PageApps;\r\n    constructor(props) {\r\n        super(props);\r\n        this.apps = new PageApps(store.unit.id);\r\n    }\r\n    private onSearch = async (key:string) => {\r\n        await this.apps.first(key);\r\n    }\r\n    private appClick = (app:UnitApp) => {\r\n        nav.push(<Page header=\"App详细信息\">\r\n            <Info app={app} appActed={this.appActed}/>\r\n        </Page>);\r\n    }\r\n    private appActed = (appId:number, inUnit:number) => {\r\n        let apps = this.apps.items as IObservableArray<UnitApp>; //.replace .find(v => v.id === appId);\r\n        let app = apps.find(v => v.id === appId);\r\n        app.inUnit = inUnit;\r\n        apps.replace([app]);\r\n    }\r\n    private renderApp(app:UnitApp):JSX.Element {\r\n        let {name, discription, icon, inUnit} = app;\r\n        let right;\r\n        if (inUnit === 1)\r\n            right = <small>已启用</small>;\r\n        else if (inUnit === 0)\r\n            right = <small>已停用</small>;\r\n        return <LMR className=\"px-3 py-2\"\r\n            left={<Badge><Image src={icon} /></Badge>}\r\n            right={right}>\r\n            <div className=\"px-3\">\r\n                <div>{name}</div>\r\n                <small className=\"text-muted\">{discription}</small>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n    render() {\r\n        let items = this.apps.items;\r\n        let center = <SearchBox onSearch={this.onSearch} \r\n            className=\"w-100 mx-1\" \r\n            placeholder=\"搜索App\" \r\n            maxLength={100} />;\r\n        return <Page header={center}>\r\n            <List\r\n                items={items}\r\n                item={{onClick:this.appClick, render:this.renderApp}}\r\n                before=\"搜索App名字\" />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, FA, LMR, Badge} from 'tonva';\r\nimport {nav, Page, Image} from 'tonva';\r\nimport {store} from '../store';\r\nimport {NewApp} from './new';\r\nimport {UnitApp} from '../model';\r\nimport {Info} from './info';\r\n\r\n@observer\r\nexport default class AppsPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadApps();\r\n    }\r\n    private itemRender(app:UnitApp, index:number) {\r\n        let {name, discription, icon, inUnit} = app;\r\n        let ban;\r\n        if (inUnit === 0)\r\n            ban = <FA className=\"text-danger\" name='ban' />;\r\n        return <LMR className=\"px-3 py-1\"\r\n            left={<Badge><Image src={icon} /></Badge>}\r\n            right={ban}>\r\n            <div className=\"px-3\">\r\n                <div>{name}</div>\r\n                <small className=\"text-muted\">{discription}</small>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n    private appClick(app:UnitApp) {\r\n        nav.push(<Page header=\"App详细信息\">\r\n            <Info app={app} />\r\n        </Page>);\r\n    }\r\n    private newItem() {\r\n        nav.push(<NewApp {...this.props} />);\r\n    }\r\n    render() {\r\n        let right = <button \r\n            className='btn btn-secondary btn-sm' \r\n            onClick={()=>this.newItem()}><FA name=\"plus\" /></button>;\r\n        return <Page header=\"启停App\" right={right}>\r\n            <List items={store.apps} item={{render: this.itemRender, onClick: this.appClick}} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {TonvaForm, SubmitResult, FormRow} from 'tonva-form';\r\nimport {nav, Page, ItemSchema, StringSchema, UiSchema, Form, Context} from 'tonva';\r\nimport {store} from '../store';\r\n\r\nexport class NewRole extends React.Component {\r\n    /*\r\n    private form:TonvaForm;\r\n    private formRows:FormRow[] = [\r\n        {\r\n            label: '名称', \r\n            field: {name: 'name', type: 'string', maxLength: 50, required: true},\r\n        },\r\n        {\r\n            label: '描述',\r\n            field: {name: 'discription', type: 'string', maxLength: 250},\r\n            face: {type: 'textarea'}\r\n        },\r\n    ];*/\r\n    private schema: ItemSchema[] = [\r\n        {name: 'name', type: 'string', maxLength: 5, required: true} as StringSchema,\r\n        {name: 'discription', type: 'string', maxLength: 250},\r\n        {name: 'submit', type: 'button'},\r\n    ];\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            name: {widget: 'text', label: '名称'},\r\n            discription: {widget: 'textarea', label: '描述'},\r\n            submit: {widget:'button', label: '提交'}\r\n        }\r\n    }\r\n    private onSubmit = async (buttonName:string, context: Context):Promise<SubmitResult> => {\r\n        //let {name, discription} = values;\r\n        let {name, discription} = this.context.formData;\r\n        let id = await store.unitAddRole(name, discription);\r\n        if (id <= 0) {\r\n            this.context.setError('name', '角色名 ' + name + ' 已经存在');\r\n            return;\r\n        }\r\n        nav.pop();\r\n        return;\r\n    }\r\n    render() {\r\n        return <Page header=\"新建角色\">\r\n            <Form className=\"m-3\" \r\n                schema={this.schema} uiSchema={this.uiSchema} \r\n                formData={{}}\r\n                onButtonClick={this.onSubmit} />\r\n        </Page>;\r\n    }\r\n    /*\r\n    <TonvaForm className=\"m-3\" ref={tf => this.form = tf} \r\n    formRows={this.formRows} \r\n    onSubmit={this.onSubmit} />\r\n    */\r\n}\r\n","import * as React from 'react';\r\nimport {List, LMR} from 'tonva';\r\nimport {nav, Page} from 'tonva';\r\nimport {Role, UnitApp} from '../model';\r\nimport {store} from '../store';\r\nimport {mainApi} from '../api';\r\n\r\ninterface Props {\r\n    role: Role;\r\n}\r\ninterface State {\r\n    apps: UnitApp[]\r\n}\r\nexport class RoleApps extends React.Component<Props, State> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {apps:undefined};\r\n    }\r\n    async componentDidMount() {\r\n        let ret = await mainApi.unitRoleApps(store.unit.id, this.props.role.id);\r\n        this.setState({\r\n            apps: ret,\r\n        });\r\n    }\r\n    private renderRoleApp(app:UnitApp, index:number) {\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={app.name}\r\n                right={<small className=\"text-muted\">{app.discription}</small>} />\r\n    }\r\n    render() {\r\n        let {role} = this.props;\r\n        return <Page header={role.name + ' - 可用APP'}>\r\n            <List\r\n                items={this.state.apps}\r\n                item={{render: this.renderRoleApp}}\r\n                none=\"没有APP\" />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, LMR, FA, Media, Muted, PropGrid, Prop} from 'tonva';\r\nimport {nav, Page} from 'tonva';\r\nimport {Role} from '../model';\r\nimport {store} from '../store';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {StringValueEdit} from '../tools';\r\nimport {RoleApps} from './roleApps';\r\n\r\n@observer\r\nexport class MemberPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadRoles();\r\n        await store.loadMemberRoles();\r\n    }\r\n    async onAssigned(value:any, orgValue:any):Promise<void> {\r\n        await store.unitAssignMember(value);\r\n    }\r\n    private renderMemberRole = (role:Role) => {\r\n        let {name, discription} = role;\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={name}\r\n                right={<Muted>{discription}</Muted>} />\r\n    }\r\n    private roleClick(role:Role) {\r\n        nav.push(<RoleApps role={role} />);\r\n    }\r\n    private setRole = () => {\r\n        nav.push(<SetRole />);\r\n    }\r\n    render() {\r\n        let roleUser = store.roleMember;\r\n        let {nick, name, assigned, icon} = roleUser;\r\n        let disp = <div>\r\n            <div><Muted>唯一名: </Muted> &nbsp; {name}</div>\r\n            <div><Muted>昵称: </Muted> &nbsp; {nick||<Muted>[无]</Muted>}</div>\r\n        </div>;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component',\r\n                component: <Media icon={icon||appIcon} main={roleUser.assigned||nick||name} discription={disp} />\r\n            },\r\n            '',\r\n            {\r\n                label: '备注名',\r\n                type: 'string',\r\n                name: 'assigned',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"修改备注名\"\r\n                    value={roleUser.assigned}\r\n                    onChanged={this.onAssigned} \r\n                    info=\"加一个备注，便于甄别用户\" />),\r\n            },\r\n            '',\r\n        ];\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.setRole}>修改角色</button>;\r\n        return <Page header=\"用户详情\" right={right}>\r\n            <PropGrid rows={rows} values={roleUser} />\r\n            <div className=\"px-3 py-1\"><small><FA name=\"angle-double-right\" /> 所属角色</small></div>\r\n            <List\r\n                items={store.memberRoles} \r\n                item={{render: this.renderMemberRole, onClick: this.roleClick}} />\r\n        </Page>\r\n    }\r\n}\r\n\r\n@observer\r\nclass SetRole extends React.Component {\r\n    private list:List;\r\n    constructor(props) {\r\n        super(props);\r\n        this.submit = this.submit.bind(this);\r\n    }\r\n    async componentDidMount() {\r\n        await store.loadRoles();\r\n        await store.loadMemberRoles();\r\n    }\r\n    private renderRole(role:Role, index:number) {\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={role.name}\r\n                right={<small className=\"text-muted\">{role.discription}</small>} />\r\n    }\r\n    private roleSelect(role:Role, isSelected: boolean, anySelected: boolean) {\r\n    }\r\n    private async submit() {\r\n        await store.setMemberRoles(this.list.selectedItems);\r\n        nav.pop();\r\n    }\r\n    render() {\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.submit}>保存</button>;\r\n        let roles = store.roles;\r\n        let memberRoles = store.memberRoles;\r\n        return <Page header=\"修改角色\" right={right}>\r\n            <List \r\n                ref={list=>this.list=list}\r\n                items={roles}\r\n                selectedItems={memberRoles}\r\n                compare={(role:Role, selectRole:Role)=>role.id === selectRole.id}\r\n                item={{render: this.renderRole, onSelect: this.roleSelect}} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, LMR, Badge, FA, Muted, SearchBox} from 'tonva';\r\nimport {nav, Page, Image} from 'tonva';\r\nimport {Role, RoleMember} from '../model';\r\nimport {store} from '../store';\r\nimport {mainApi} from '../api';\r\nimport {MemberPage} from './memberPage';\r\n\r\n@observer\r\nexport class MembersPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadMembers();\r\n    }\r\n    private renderMember(member:RoleMember, index:number):JSX.Element {\r\n        return <MemberRow {...member} />;\r\n    }\r\n    private userClick(user:RoleMember) {\r\n        store.setRoleUser(user);\r\n        nav.push(<MemberPage />);\r\n    }\r\n    private onSearch() {\r\n        let role = store.role;\r\n        let roleId = role === undefined? 0:role.id;\r\n        nav.push(<MemberSearch roleId={roleId} />);\r\n    }\r\n    render() {\r\n        let right = <button className=\"btn btn-sm\" onClick={this.onSearch}><FA name=\"search\" /></button>;\r\n        return <Page header=\"用户\" right={right}>\r\n            <List items={store.roleMembers} item={{render: this.renderMember, onClick: this.userClick}} />\r\n        </Page>\r\n    }\r\n}\r\n\r\nconst MemberRow = (member:RoleMember) => {\r\n    let {nick, name, assigned, icon} = member;\r\n    let content;\r\n    if (assigned)\r\n        content = <><div><b>{assigned}</b> <Muted>{nick}</Muted></div><Muted>{name}</Muted></>;\r\n    else if (nick)\r\n        content = <><div><b>{nick}</b></div><Muted>{name}</Muted></>;\r\n    else\r\n        content = <div><b>{name}</b></div>;\r\n    return <LMR className=\"py-2 px-3 align-items-stretch\"\r\n        left={<Badge size=\"sm\"><Image src={icon} /></Badge>}>\r\n        <div className=\"px-3\">{content}</div>\r\n    </LMR>;\r\n};\r\n\r\ninterface SearchProps {\r\n    roleId: number;\r\n}\r\ninterface SearchState {\r\n    members: RoleMember[];\r\n}\r\nexport class MemberSearch extends React.Component<SearchProps, SearchState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.state = {\r\n            members: null,\r\n        }\r\n    }\r\n    private async onSearch(key:string) {\r\n        let ret = await mainApi.unitMembers(store.unit.id, this.props.roleId, key, 0, 100);\r\n        this.setState({members: ret});\r\n    }\r\n    private renderMember(member:RoleMember, index:number):JSX.Element {\r\n        return <MemberRow {...member} />;\r\n    }\r\n    private userClick(user:RoleMember) {\r\n        store.setRoleUser(user);\r\n        nav.push(<MemberPage />);\r\n    }\r\n    render() {\r\n        let header = <SearchBox className=\"w-100 mx-1\" \r\n            onSearch={this.onSearch} \r\n            maxLength={100}\r\n            placeholder=\"搜索用户\" />;\r\n        return <Page header={header}>\r\n            <List\r\n                items={this.state.members}\r\n                item={{render: this.renderMember, onClick: this.userClick}} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, Media, LMR, FA, PropGrid, Prop} from 'tonva';\r\nimport {nav, Page} from 'tonva';\r\nimport {StringValueEdit} from '../tools';\r\nimport {Role, UnitApp} from '../model';\r\nimport {store} from '../store';\r\nimport {MembersPage} from './membersPage';\r\n\r\n@observer\r\nexport class RolePage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadApps();\r\n        await store.loadRoleApps();\r\n    }\r\n    private editRole() {\r\n        nav.push(<EditRole />);\r\n    }\r\n    private renderRoleApp = (app:UnitApp, index:number) => {\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={app.name}\r\n                right={<small className=\"text-muted\">{app.discription}</small>} />\r\n    }\r\n    private roleAppClick = (app:UnitApp) => {\r\n        nav.push(<RoleApps />);\r\n    }\r\n    private addRoleApp() {\r\n        nav.push(<RoleApps />);\r\n    }\r\n    private members() {\r\n        nav.push(<MembersPage />);\r\n    }\r\n    render() {\r\n        let {name, discription, count} = store.role;\r\n        let onMembersClick, membersLeft, membersRight;\r\n        if (count===undefined || count===null || count===0) {\r\n            membersLeft = <small className=\"text-muted\">无用户</small>;\r\n        }\r\n        else {\r\n            membersLeft = `共有 ${count} 用户`;\r\n            membersRight = <div><FA name=\"chevron-right\" /></div>;\r\n            onMembersClick = this.members;\r\n        }\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <Media icon={undefined} main={name} discription={discription} />,\r\n                onClick: this.editRole,\r\n            },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <LMR className=\"py-2\" left={membersLeft} right={membersRight} />,\r\n                onClick: onMembersClick,\r\n            },\r\n            '=',\r\n        ];\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={()=>this.addRoleApp()}><FA name=\"plus\" /> APP</button>;\r\n        return <Page header=\"角色\" right={right}>\r\n            <PropGrid rows={rows} values={{}} />\r\n            <div className=\"px-3 py-1\"><small><FA name=\"angle-double-right\" /> 可用APP列表</small></div>\r\n            <List\r\n                items={store.roleApps} \r\n                item={{render: this.renderRoleApp, onClick:this.roleAppClick}}\r\n                none={<small className=\"text-muted px-3 py-1\">没有APP, 点击右上角按钮选择APP</small>} />\r\n        </Page>\r\n    }\r\n}\r\n\r\n@observer\r\nclass EditRole extends React.Component {\r\n    async onNameChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.roleChangeProp('name', value);\r\n    }\r\n    async onDiscriptionChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.roleChangeProp('discription', value);\r\n    }\r\n    render() {\r\n        let role = store.role;\r\n        let {id} = role;\r\n        let isSysRole = id === 1 || id === 2;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                label: '名称', \r\n                type: 'string',\r\n                name: 'name', \r\n                onClick: isSysRole? undefined : ()=>nav.push(<StringValueEdit \r\n                    title=\"修改名称\"\r\n                    value={role.name}\r\n                    onChanged={this.onNameChanged} \r\n                    info=\"好的名字便于理解\" />)\r\n            },\r\n            {\r\n                label: '描述',\r\n                type: 'string',\r\n                name: 'discription',\r\n                onClick: isSysRole? undefined : ()=>nav.push(<StringValueEdit \r\n                    title=\"修改描述\"\r\n                    value={role.discription}\r\n                    onChanged={this.onDiscriptionChanged} \r\n                    info=\"对角色做一个说明\" />)\r\n            },\r\n        ];\r\n        return <Page header=\"修改角色信息\">\r\n            <PropGrid rows={rows} values={role} alignValue=\"right\" />\r\n        </Page>;\r\n    }\r\n}\r\n\r\n@observer\r\nclass RoleApps extends React.Component {\r\n    private list:List;\r\n    constructor(props) {\r\n        super(props);\r\n        this.submit = this.submit.bind(this);\r\n    }\r\n    async componentDidMount() {\r\n        await store.loadApps();\r\n        await store.loadRoleApps();\r\n    }\r\n    private renderApp(app:UnitApp, index:number) {\r\n        return <LMR className=\"py-1 px-2 align-items-center\"\r\n                left={app.name}\r\n                right={<small className=\"text-muted\">{app.discription}</small>} />\r\n    }\r\n    private appSelect(app:UnitApp, isSelected: boolean, anySelected: boolean) {\r\n\r\n    }\r\n    private async submit() {\r\n        await store.setRoleApps(this.list.selectedItems);\r\n        nav.pop();\r\n    }\r\n    render() {\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.submit}>保存</button>;\r\n        let apps = store.apps;\r\n        let roleApps = store.roleApps;\r\n        return <Page header=\"选择APP\" right={right}>\r\n            <List \r\n                ref={list=>this.list=list}\r\n                items={apps}\r\n                selectedItems={roleApps}\r\n                item={{render: this.renderApp, onSelect: this.appSelect}} />\r\n        </Page>;\r\n    }\r\n}","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {List, LMR, FA, Muted} from 'tonva';\r\nimport {nav, Page} from 'tonva';\r\nimport {Role} from '../model';\r\nimport {store} from '../store';\r\nimport {NewRole} from './newRole';\r\nimport {RolePage} from './rolePage';\r\nimport {MembersPage} from './membersPage';\r\n\r\nconst midClassName = classNames('d-flex', 'h-100', 'align-items-center', 'px-5', 'small', 'text-muted');\r\n\r\n@observer\r\nexport class Members extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadRoles();\r\n    }\r\n    private renderRole = (role:Role, index:number) => {\r\n        let {name, discription, count} = role;\r\n        return <LMR\r\n            className=\"px-3 py-2\" \r\n            left={name}\r\n            right={String(count || '')}>\r\n            <div className={midClassName}>\r\n                {discription}\r\n            </div>\r\n        </LMR>;\r\n    }\r\n    private roleClick = (role:Role) => {\r\n        store.setRole(role);\r\n        nav.push(<RolePage />)\r\n    }\r\n    private newRole = (evt: React.MouseEvent<HTMLAnchorElement>) => {\r\n        evt.preventDefault();\r\n        nav.push(<NewRole />);\r\n    }\r\n    private allUsersClick = () => {\r\n        store.setRole(undefined);\r\n        nav.push(<MembersPage />);\r\n    }\r\n    render() {\r\n        let right = <a className=\"small\" href='#' onClick={this.newRole}>新增</a>;\r\n        let header = <LMR className=\"px-3 small bg-light\" left=\"角色\" right={right} />;\r\n        return <Page header=\"用户角色\">\r\n            <LMR\r\n                className=\"my-3 px-3 py-2 bg-white\" \r\n                left={'用户'}\r\n                right={String(store.memberCount)}\r\n                onClick={this.allUsersClick}>\r\n                <div className={midClassName}>\r\n                    设置用户角色\r\n                </div>\r\n            </LMR>\r\n            <List\r\n                header={header}\r\n                items={store.roles}\r\n                none=\"[无]\"\r\n                item={{render:this.renderRole, onClick:this.roleClick}} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { AppController } from '.';\r\nimport { VPage, nav, Page, ItemSchema, UiSchema, StringSchema, BoolSchema, \r\n    UiTextItem, UiTextAreaItem, UiCheckItem, Form, \r\n    ButtonSchema, Context, ImageSchema, UiImageItem, IdSchema, UiIdItem } from 'tonva';\r\nimport { createIdPick, IdPickProps } from 'createIdPick';\r\nimport { DevModel } from 'model';\r\nimport { store } from 'store';\r\nimport { IdPickPage, ServerSpan } from '../../tools';\r\nimport { observer } from 'mobx-react';\r\n\r\nconst ServerCaption = (item:DevModel.Server) => {\r\n    let {discription, cloud, ip} = item;\r\n    return <>{discription} {cloud} {ip}</>;\r\n}\r\nconst idPickServerProps: IdPickProps = {\r\n    caption: '选择服务器',\r\n    searchPlaceHolder: '搜索服务器',\r\n    candidateItems: async (params:any, key:string) => {\r\n        await store.dev.searchServer.first(key);\r\n        return store.dev.searchServer.items;\r\n    },\r\n    moreCandidates: async () => {\r\n        await store.dev.searchServer.more();\r\n    },\r\n    row: (item:DevModel.Server, index:number) => {\r\n        return <div className=\"px-3 py-2\"><ServerCaption {...item} /></div>;\r\n    },\r\n};\r\n\r\nconst schema:ItemSchema[] = [\r\n    {name: 'name', type: 'string', maxLength: 100, required: true} as StringSchema,\r\n    {name: 'caption', type: 'string', maxLength: 100} as StringSchema,\r\n    {name: 'discription', type: 'string', maxLength: 250} as StringSchema,\r\n    {name: 'url', type: 'string', maxLength: 200} as StringSchema,\r\n    {name: 'public', type: 'boolean'} as BoolSchema,\r\n    {name: 'server', type: 'id'} as IdSchema,\r\n    {name: 'icon', type: 'image'} as ImageSchema,\r\n    {name: 'submit', type: 'submit'} as ButtonSchema,\r\n];\r\n\r\nexport abstract class EditBasePage extends VPage<AppController> {\r\n    private candidateItems = async (params:any, key:string):Promise<any[]> => {\r\n        await store.dev.searchServer.first(key);\r\n        return store.dev.searchServer.items;\r\n    }\r\n\r\n    private moreCandidates = async ():Promise<void> => {\r\n        await store.dev.searchServer.more();\r\n    }\r\n\r\n    private renderRow = (item:DevModel.Server, index:number): JSX.Element => {\r\n        return <div className=\"px-3 py-2\"><ServerCaption {...item} /></div>;\r\n    }\r\n\r\n    private pickServerId = (context:Context, name:string, value:number): Promise<number> => {\r\n        return new Promise<number>((resolve, reject) => {\r\n            nav.push(<IdPickPage \r\n                caption=\"选择服务器\" \r\n                searchPlaceHolder=\"搜索服务器\"\r\n                candidateItems={this.candidateItems}\r\n                moreCandidates={this.moreCandidates}\r\n                row={this.renderRow}\r\n                idFromItem={(item:DevModel.Server) => item.id}\r\n                resolve={resolve} params={undefined} />, \r\n                ()=> {\r\n                    reject();\r\n                });\r\n        });\r\n    }\r\n\r\n    private renderServerInput = (itemId:number): JSX.Element => {\r\n        return <ServerSpan id={itemId} />;\r\n    };\r\n\r\n    private uiSchema:UiSchema = {\r\n        items: {\r\n            name: {widget: 'text', label: '名称'} as UiTextItem,\r\n            caption: {widget: 'text', label: '标题'} as UiTextItem,\r\n            discription: {widget: 'textarea', label: '描述', rows: 5} as UiTextAreaItem,\r\n            url: {widget: 'text', label: 'URL', placeholder: 'http(s)://APP地址'} as UiTextItem,\r\n            'public': {widget: 'checkbox', label: '公开', } as UiCheckItem,\r\n            server: {widget: 'id', label: '服务器', pickId: this.pickServerId, Templet: this.renderServerInput} as UiIdItem,\r\n            icon: {widget: 'image', label: '标志图'} as UiImageItem,\r\n            submit: {widget: 'button', label: '提交', className: 'btn btn-primary'}\r\n        }\r\n    }\r\n    \r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n    private onButtonClick = async (name:string, context: Context) => {\r\n        let {data} = context;\r\n        let app:DevModel.App = _.clone(this.controller.app) || {} as any;\r\n        _.merge(app, data);\r\n        await this.controller.saveApp(app);\r\n        nav.pop();\r\n    }\r\n    protected page: ()=>JSX.Element;\r\n    protected form = observer(() => {\r\n        return <Form fieldLabelSize={2}\r\n            className=\"m-3\" \r\n            schema={schema} \r\n            uiSchema={this.uiSchema}\r\n            formData={this.initValues}\r\n            onButtonClick={this.onButtonClick} />\r\n    });\r\n    abstract get initValues():any;\r\n}\r\n\r\nexport class EditPage extends EditBasePage {\r\n    get initValues():any {return this.controller.app}\r\n    protected page = () => {\r\n        let {app} = this.controller;\r\n        let {name} = app;\r\n        return <Page header={'修改APP - ' + name} back=\"close\">\r\n            <this.form />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nexport class NewPage extends EditBasePage {\r\n    get initValues():any {return {}}\r\n    protected page = () => {\r\n        return <Page header={'新建APP'} back=\"close\">\r\n            <this.form />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, Image } from 'tonva';\r\nimport { AppController } from '.';\r\nimport { List, LMR, Badge, Muted, FA } from 'tonva';\r\nimport { DevModel } from 'model';\r\nimport { NewPage } from './editPage';\r\n\r\nexport class AppsPage extends VPage<AppController> {\r\n    async open(param:any) {\r\n        this.openPage(this.page);\r\n    }\r\n    private newItem = () => {\r\n        this.openVPage(NewPage);\r\n    }\r\n    private page = ():JSX.Element => {\r\n        let {appList, listRowClick} = this.controller;\r\n        let right = <button className='btn btn-secondary btn-sm' onClick={()=>this.newItem()}><FA name=\"plus\" /></button>;\r\n        return <Page header=\"App\" right={right}>\r\n            <List items={appList} item={{render: this.appRow, onClick: listRowClick}} />\r\n        </Page>\r\n    }\r\n    private appRow = (item:DevModel.App):JSX.Element => {\r\n        let {name, caption, discription, icon, url, urlDebug} = item;\r\n        let left = <Badge size=\"sm\"><Image src={icon} /></Badge>;\r\n        let right = <div className=\"text-muted small text-right\">\r\n            {url || '-'}<br/>\r\n            {urlDebug}\r\n        </div>;\r\n        let spanCaption = caption?\r\n            <>{name}: <b>{caption}</b></> :\r\n            <b>{name}</b>;\r\n        return <LMR className=\"py-2 px-3 align-items-stretch\"\r\n            left={left} right={right}>\r\n            <div className=\"px-3\">\r\n                <div>{spanCaption}</div>\r\n                <div><Muted>{discription}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { List, LMR, SearchBox } from 'tonva';\r\nimport { DevModel } from 'model';\r\nimport { UnitSpan } from 'tools';\r\nimport { store } from 'store';\r\nimport { nav, Page, VPage } from 'tonva';\r\nimport { AppController } from '.';\r\n\r\nexport class SearchUqPage extends VPage<AppController> {\r\n    @observable private uqs: DevModel.UQ[];\r\n\r\n    async open() {\r\n        this.uqs = await this.controller.getMyUqs();\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private onSearch = async (key:string) => {\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.uqs = await this.controller.searchUq(key, pageStart, pageSize);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let header = <SearchBox className=\"w-100 mx-1\" \r\n            onSearch={this.onSearch}\r\n            placeholder=\"搜索UQ名字\" \r\n            maxLength={100} />;\r\n        return <Page back=\"close\" header={header}>\r\n            <List items={this.uqs} item={{render: this.row, onClick: this.controller.onUq}} />\r\n        </Page>;\r\n    });\r\n\r\n    private row = (uq: DevModel.UQ) => {\r\n        let {owner, name, discription} = uq;\r\n        return <LMR className=\"py-2 px-3\" right={discription}>\r\n            <div>{owner} / {name}</div>\r\n        </LMR>;\r\n    };\r\n}\r\n\r\n@observer\r\nexport class AppUqs extends React.Component {\r\n    @observable anySelected: boolean = false;\r\n    private list:List;\r\n    private onSelect = (item: DevModel.UQ, isSelected:boolean, anySelected:boolean) => {\r\n        this.anySelected = anySelected;\r\n    }\r\n    private row = (item: DevModel.UQ) => {\r\n        let {name, unit, discription} = item;\r\n        return <LMR className=\"p-2\" right={<small className=\"text-muted\">{discription}</small>}>\r\n            <UnitSpan id={unit} />/{name}\r\n        </LMR>;\r\n    }\r\n    private removeBind = () => {\r\n        if (this.list === null) return;\r\n        let {selectedItems} = this.list;\r\n        if (selectedItems === undefined) return;\r\n        if (selectedItems.length === 0) return;\r\n        store.dev.apps.appBindUq(\r\n            selectedItems.map(v => {\r\n                return {id:v.id, access:['*']}\r\n            }), \r\n            false);\r\n    }\r\n    render() {\r\n        let btnProps = this.anySelected?\r\n            {color:'danger', onClick:this.removeBind, icon:'trash', text:'取消'}:\r\n            {color:'primary', onClick:()=>nav.push(<Uqs/>), icon:'plus', text:'新增'};\r\n        let btn = (p)=><button \r\n            className={classNames('btn', 'btn-outline-'+p.color, 'btn-sm')} \r\n            onClick={p.onClick}>\r\n            <i className={\"fa fa-\" + p.icon} /> {p.text}关联\r\n        </button>;\r\n        let listHeader = <div className=\"va-row py-1 justify-content-center\">{btn(btnProps)}</div>;\r\n        return <Page header=\"关联UQ\">\r\n            <List ref={list=>this.list=list} header={listHeader}\r\n                items={store.dev.apps.uqs}\r\n                item={{render: this.row, onSelect: this.onSelect}} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\n@observer\r\nclass Uqs extends React.Component {\r\n    onSearch = async (key:string) => {\r\n        await store.dev.apps.searchUq(key);\r\n    }\r\n    onBind(uq: DevModel.UQ, bind: boolean) {\r\n        store.dev.apps.appBindUq([{id:uq.id, access:['*']}], bind);\r\n    }\r\n    row = (uq: DevModel.UQ) => {\r\n        let isConnected = store.dev.apps.uqs.find(a => a.id === uq.id) !== undefined;\r\n        let cn = ['btn', 'btn-sm'];\r\n        let btnContent:any, onClick:any;\r\n        if (isConnected) {\r\n            cn.push('btn-success');\r\n            onClick = ()=>this.onBind(uq, false);\r\n            btnContent = \"已关联\";\r\n        }\r\n        else {\r\n            cn.push('btn-primary');\r\n            onClick = ()=>this.onBind(uq, true);\r\n            btnContent = <span><i className=\"fa fa-check\"/> 关联</span>;\r\n        }\r\n        return <div className=\"d-flex justify-content-start py-1 px-3\">\r\n            <div className=\"align-self-center\">{uq.name + ' - ' + uq.discription}</div>\r\n            <footer className=\"ml-auto\"><button className={classNames(cn)} onClick={onClick}>{btnContent}</button></footer>\r\n        </div>\r\n    }\r\n    render() {\r\n        let header = <SearchBox className=\"w-100 mx-1\" \r\n            onSearch={this.onSearch} \r\n            placeholder=\"搜索UQ名字\" \r\n            maxLength={100} />;\r\n        return <Page back=\"close\" header={header}>\r\n            <List items={store.dev.apps.searchedUqs} item={{render: this.row}} loading={null} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, nav } from 'tonva';\r\nimport { AppController, UqAccess } from '.';\r\nimport { IdDates, UnitSpan, ServerSpan, UnitName } from 'tools';\r\nimport { Prop, Media, PropGrid, ListProp, DropdownActions, List, LMR } from 'tonva';\r\nimport { EditPage } from './editPage';\r\nimport { AppUqs, SearchUqPage } from './appUqs';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class AppPage extends VPage<AppController> {\r\n    async open() {\r\n        //this.uqs.list = this.controller.uqs;\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private editItem = async () => {\r\n        await this.openVPage(EditPage);\r\n        //nav.push(<EditAppPage {...this.props} />);\r\n    }\r\n\r\n    private deleteItem = async () => {\r\n        if (confirm('真的要删除吗？系统删除时并不会检查相关引用，请谨慎') === true) {\r\n            await this.controller.deleteApp();\r\n            nav.pop();\r\n        }\r\n    }\r\n\r\n    private page = observer(():JSX.Element => {\r\n        let {app} = this.controller;\r\n        let {unit, name, caption, discription, icon, server, date_init, date_update} = app;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let menuItems = [\r\n            // {icon: 'cogs', caption:'设置关联UQ', action: ()=>nav.push(<AppUqs />)},\r\n            {caption:'修改App', action:this.editItem, icon:'edit' },\r\n            {caption:'删除', action:this.deleteItem, icon:'trash-o' }\r\n        ];\r\n\r\n        let right = <DropdownActions actions={menuItems} />;\r\n        let spanCaption = caption?\r\n            <>{name}: <b>{caption}</b></> :\r\n            <b>{name}</b>;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <Media icon={icon} main={spanCaption} discription={disp} />\r\n            },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                label: '开发号', \r\n                component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> \r\n            },\r\n            /*\r\n            {\r\n                type: 'component', \r\n                label: 'Service',\r\n                vAlign: 'stretch',\r\n                component: <ServiceRow />,\r\n            },*/\r\n            {\r\n                label: 'URL',\r\n                name: 'url',\r\n                type: 'string',                \r\n            },\r\n            {\r\n                type: 'component',\r\n                label: '服务器',\r\n                component: <ServerSpan id={server} />\r\n            },\r\n            '',\r\n            //this.uqs,\r\n        ];\r\n        let btnAddUq = <button className=\"btn btn-outline-primary btn-sm\" onClick={()=>this.openVPage(SearchUqPage)}>\r\n            增加关联\r\n        </button>;\r\n        return <Page header={'App - ' + name} right={right}>\r\n            <PropGrid rows={rows} values={app} />\r\n            <LMR className=\"mx-3 mt-3 mb-1\" right={btnAddUq}>\r\n                关联UQ\r\n            </LMR>\r\n            <List items={this.controller.uqAccesses} item={{render:this.renderUqRow, onClick:this.uqClick}} />\r\n        </Page>\r\n    })\r\n\r\n    private uqClick = (uqAccess:UqAccess) => {\r\n        this.controller.onUq(uqAccess.uq);\r\n    }\r\n\r\n    private renderUqRow = (uqAccess:UqAccess, index:number):JSX.Element => {\r\n        let {uq, bind_access: access} = uqAccess;\r\n        let {name, discription, unit} = uq;\r\n        let disp: any;\r\n        let elAccess: any;\r\n        if (access && access.length > 0) {\r\n            elAccess = <> + {access.join(', ')} </>;\r\n        }\r\n        if (discription) disp = <div className=\"small text-muted\"> &nbsp; {discription}</div>;\r\n        return <LMR className=\"px-3 py-2 align-items-center\" right={disp}>\r\n            <UnitName id={unit} /> / {name} {elAccess}\r\n        </LMR>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, nav } from 'tonva';\r\nimport { AppController, UqAccess } from '.';\r\nimport { LMR } from 'tonva';\r\n\r\nexport class UqBindPage extends VPage<AppController> {\r\n    private uqAccess: UqAccess;\r\n    private accesses: string[];\r\n    private accessChecked:{[name:string]:boolean};\r\n    async open(uqAccess: UqAccess) {\r\n        this.uqAccess = uqAccess;\r\n        let {uq, bind_access} = this.uqAccess;\r\n        let {access} = uq;\r\n        if (access) {\r\n            this.accessChecked = {};\r\n            this.accesses = access.split(',');\r\n            for (let acc of this.accesses) {\r\n                this.accessChecked[acc] = (bind_access && bind_access.find(bc => bc === acc)) !== undefined;\r\n            }\r\n        }\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private onCheckChanged = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        let {target} = evt;\r\n        this.accessChecked[target.name] = target.checked;\r\n    }\r\n\r\n    private saveUqBind = async () => {\r\n        let acc:string[] = [];\r\n        if (this.accesses) {\r\n            for (let i in this.accessChecked) {\r\n                if (this.accessChecked[i] === true) acc.push(i);\r\n            }\r\n        }\r\n        await this.controller.saveUqBind(this.uqAccess.uq, acc);\r\n        nav.pop();\r\n    }\r\n\r\n    private removeUqBind = async () => {\r\n        await this.controller.removeUqBind(this.uqAccess.uq);\r\n        nav.pop();\r\n    }\r\n\r\n    private page = ():JSX.Element => {\r\n        let {uq, bind_access} = this.uqAccess;\r\n        let {owner, name, discription, access} = uq;\r\n        let btnDelete:any;\r\n        if (bind_access !== null && bind_access !== undefined) {\r\n            btnDelete = <button className=\"btn btn-outline-danger btn-sm\" onClick={this.removeUqBind}>取消关联</button>;\r\n        }\r\n        let checkAccessList:any;\r\n        if (this.accesses) {\r\n            checkAccessList = <div className=\"mt-3\">\r\n            {\r\n                this.accesses.map(v => {\r\n                    let checked = this.accessChecked[v];\r\n                    return <label key={v} className=\"d-inline-block mr-4\">\r\n                        <input onChange={this.onCheckChanged}\r\n                            style={{width:'1.1rem', height:'1.1rem'}} \r\n                            name={v} type=\"checkbox\" defaultChecked={checked} />&nbsp;{v}\r\n                    </label>;\r\n                })\r\n            }\r\n            </div>;\r\n        }\r\n        return <Page header=\"关联UQ\">\r\n            <div className=\"m-3 py-3 px-3 bg-white border\">\r\n                <div>{owner} / {name}</div>\r\n                <div className=\"text-muted\">{discription}</div>\r\n                {checkAccessList}\r\n                <LMR className=\"pt-3\" right={btnDelete}>\r\n                    <button className=\"btn btn-primary btn-sm\" onClick={this.saveUqBind}>保存关联</button>\r\n                </LMR>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { observable } from 'mobx';\r\nimport { Controller } from 'tonva';\r\nimport { DevModel } from 'model';\r\nimport { devApi } from 'api';\r\nimport { AppsPage } from './appsPage';\r\nimport { AppPage } from './appPage';\r\nimport { UqBindPage } from './uqBindPage';\r\n\r\nexport interface UqAccess {\r\n    uq: DevModel.UQ;\r\n    bind_access: string[];\r\n}\r\n\r\nexport class AppController extends Controller {\r\n    private unitId: number;\r\n    app: DevModel.App;\r\n    @observable appList: DevModel.App[];\r\n    @observable uqAccesses: UqAccess[];\r\n    protected async internalStart(unitId:any) {\r\n        this.unitId = unitId;\r\n        this.appList = await devApi.apps(this.unitId);\r\n        this.openVPage(AppsPage);\r\n    }\r\n\r\n    listRowClick = async (item:DevModel.App) => {\r\n        this.app = item;\r\n        let ret = await devApi.loadAppUqs(item.id);\r\n        this.uqAccesses = ret.map(v => {\r\n            let {owner, access, id, name, discription, unit, date_init, date_update, bind_access} = v;\r\n            return {\r\n                uq: {\r\n                    id: id,\r\n                    name: name,\r\n                    discription: discription,\r\n                    unit: unit,\r\n                    access: access,\r\n                    owner: owner,\r\n                    date_init: date_init,\r\n                    date_update: date_update, \r\n                    service_count: undefined,\r\n                },\r\n                uqOwner: owner,\r\n                bind_access: bind_access && bind_access.split(',')\r\n            }\r\n        });\r\n        this.openVPage(AppPage);\r\n    }\r\n\r\n    saveApp = async (values: DevModel.App) => {\r\n        let app: DevModel.App;\r\n        let now = new Date();\r\n        if (this.app === undefined) {\r\n            app = _.clone(values);\r\n            app.date_init = now;\r\n        }\r\n        else {\r\n            app = _.clone(this.app);\r\n            _.merge(app, values);\r\n        }\r\n        app.unit = this.unitId;\r\n        app.date_update = now;\r\n        let ret = await devApi.saveApp(app);\r\n        app.id = ret;\r\n        let org = this.appList.find(v => v.id === ret);\r\n        if (org !== undefined) {\r\n            _.merge(org, app);\r\n        }\r\n        else {\r\n            this.appList.push(app);\r\n        }\r\n    }\r\n\r\n    deleteApp = async () => {\r\n        await devApi.delApp(this.unitId, this.app.id);\r\n        let index = this.appList.findIndex(v => v.id === this.app.id);\r\n        if (index >= 0) this.appList.splice(index, 1);\r\n    }\r\n\r\n    searchUq = async (key:string, pageStart:number, pageSize:number) => {\r\n        return await devApi.searchUq(this.unitId, key, pageStart, pageSize);\r\n    }\r\n\r\n    getMyUqs = async () => {\r\n        return await devApi.getMyUqs(this.unitId);\r\n    }\r\n\r\n    onUq = (uq: DevModel.UQ) => {\r\n        let uqAccess:UqAccess = this.uqAccesses.find(v => v.uq.id === uq.id);\r\n        if (uqAccess === undefined) {\r\n            uqAccess = {\r\n                uq: uq,\r\n                bind_access: undefined,\r\n            }\r\n        }\r\n        else {\r\n            let access = uqAccess.bind_access;\r\n            if (access === null || access === undefined) uqAccess.bind_access = [];\r\n        }\r\n        this.openVPage(UqBindPage, uqAccess);\r\n    }\r\n\r\n    // accesses = undefined, 表示删除\r\n    private buildBindUqs(uq: DevModel.UQ, accesses?:string[]) {\r\n        let uqs:{id:number, access:string[]}[] = [];\r\n        let isNew = true;\r\n        for (let ua of this.uqAccesses) {\r\n            let {uq:uaUq, bind_access} = ua;\r\n            if (uaUq.id === uq.id) {\r\n                if (accesses === undefined) continue;\r\n                bind_access = accesses;\r\n                isNew = false;\r\n            }\r\n            uqs.push({\r\n                id: uaUq.id,\r\n                access: bind_access || [],\r\n            });\r\n        }\r\n        if (accesses !== undefined && isNew === true) {\r\n            uqs.push({id: uq.id, access: accesses});\r\n        }\r\n        return uqs;\r\n    }\r\n\r\n    saveUqBind = async (uq: DevModel.UQ, accesses:string[]) => {\r\n        let uqs:{id:number, access:string[]}[] = this.buildBindUqs(uq, accesses);\r\n        await devApi.appBindUq(this.unitId, this.app.id, uqs);\r\n        if (uqs.length > this.uqAccesses.length) {\r\n            this.uqAccesses.unshift({\r\n                uq: uq,\r\n                bind_access: accesses,\r\n            });\r\n        }\r\n        else {\r\n            let ua = this.uqAccesses.find(v => v.uq.id === uq.id);\r\n            ua.bind_access = accesses;\r\n        }\r\n    }\r\n\r\n    removeUqBind = async (uq: DevModel.UQ) => {\r\n        let uqs:{id:number, access:string[]}[] = this.buildBindUqs(uq);\r\n        await devApi.appBindUq(this.unitId, this.app.id, uqs);\r\n        let index = this.uqAccesses.findIndex(v => v.uq.id === uq.id);\r\n        if (index>=0) this.uqAccesses.splice(index, 1);\r\n    }\r\n}\r\n","const groupStart = '///++++++';\r\nconst groupEnd = '------///';\r\n\r\nexport class TextSections {\r\n    private text: string;\r\n    private p: number;\r\n    private group: string[];\r\n    private stop: boolean;\r\n    readonly sections: (string | string[])[] = [];\r\n\r\n    add(text:string):void {\r\n        this.stop = false;\r\n        if (this.text === undefined) {\r\n            this.p = 0;\r\n            this.text = text;\r\n        }\r\n        else {\r\n            this.text = this.text + text;\r\n        }\r\n        if (this.text.length < 10) return;\r\n        while (this.stop === false) {\r\n            this.addToGroup();\r\n            this.addText();\r\n        }\r\n    }\r\n\r\n    private mayStart(token:string):boolean {\r\n        let len = this.text.length - token.length;\r\n        if (this.p < len) return false;\r\n        for (let i=0; i<len; i++) {\r\n            if (this.text.charCodeAt(this.p + i) !== token.charCodeAt(i)) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private addToGroup():void {\r\n        if (this.group === undefined) return;\r\n        if (this.text === undefined) return;\r\n        let p = this.text.indexOf(groupEnd, this.p);\r\n        if (p < 0) {\r\n            if (this.mayStart(groupEnd) === true) return;\r\n            this.group.push(this.p === 0? this.text : this.text.substr(this.p));\r\n            this.p = 0;\r\n            this.text = undefined;\r\n            this.stop = true;\r\n            return;\r\n        }\r\n        this.group.push(this.text.substring(this.p, p));\r\n        this.sections.push(this.group);\r\n        this.group = undefined;\r\n        this.p = p + 9;\r\n    }\r\n\r\n    private addText():void {\r\n        if (this.text === undefined) return;\r\n        let p = this.text.indexOf(groupStart, this.p);\r\n        if (p < 0) {\r\n            if (this.mayStart(groupStart) === true) return;\r\n            this.sections.push(this.p === 0? this.text : this.text.substr(this.p));\r\n            this.p = 0;\r\n            this.text = undefined;\r\n            this.stop = true;\r\n            return;\r\n        }\r\n        this.sections.push(this.text.substring(this.p, p));\r\n        this.p = p + 9;\r\n        this.group = [];\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport {nav, Page, FA} from 'tonva';\r\nimport {List, EasyDate, LMR, Muted} from 'tonva';\r\nimport {DevModel} from '../../model';\r\nimport {store} from '../../store';\r\nimport { TextSections } from './textSections';\r\n\r\ninterface State {\r\n    files: any[];\r\n    compiled?: string;\r\n    text?: string;\r\n}\r\n\r\nexport interface UqUploadProps {\r\n    uq: DevModel.UQ;\r\n    services: DevModel.Service[];\r\n}\r\n\r\nexport class UqUpload extends React.Component<UqUploadProps, State> {\r\n    private fileInput: HTMLInputElement;\r\n\r\n    constructor(props:UqUploadProps) {\r\n        super(props);\r\n        this.state = {\r\n            files: undefined,\r\n        }\r\n    }\r\n\r\n    private onFilesChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        let upFiles:any[] = [];\r\n        let {files} = evt.target;\r\n        let len = files.length;\r\n        for (let i=0; i<len; i++) {\r\n            upFiles.push(files[i]);\r\n        }\r\n        this.setState({\r\n            files: upFiles,\r\n        });\r\n    }\r\n    fileRender(file:any, index:number):JSX.Element {\r\n        let {name, size, lastModifiedDate} = file;\r\n        function sz():string {\r\n            let n:number, u:string;\r\n            if (size < 1024) {\r\n                n = size; u = 'b';\r\n            }\r\n            else if (size < 1024*1024) {\r\n                n = Math.trunc((size / 1024) * 100)/100; u = 'k';\r\n            }\r\n            else {\r\n                n = Math.trunc((size / 1024 / 1024) * 100)/100; u = 'm';\r\n            }\r\n            return n + ' ' + u;\r\n        }\r\n        return <LMR className=\"px-2 py-1\" right={<Muted>{sz()}</Muted>}>\r\n            <div>{name}</div>\r\n            <div><Muted>修改日期: <EasyDate date={lastModifiedDate} /></Muted></div>\r\n        </LMR>;\r\n    }\r\n    private fileClick = (file:any) => {\r\n        let fr = new FileReader();\r\n        fr.onload = function(f) {\r\n            //alert(this.result);\r\n            nav.push(<UqPage name={file.name} content={this.result} />)\r\n        }\r\n        fr.readAsText(file, \"utf8\");\r\n    }\r\n    private onSubmit = (evt:React.FormEvent<any>) => {\r\n        evt.preventDefault();\r\n    }\r\n\r\n    private async update(thoroughly:boolean) {\r\n        var files:FileList = this.fileInput.files;\r\n        var data = new FormData();\r\n        let len = files.length;\r\n        for (let i=0; i<len; i++) {\r\n            let file = files[i];\r\n            data.append('files[]', file, file.name);\r\n        }\r\n  \r\n        let url = store.uqServer + 'uq-compile/' + this.props.uq.id + '/update';\r\n        if (thoroughly === true) url += '-thoroughly';\r\n        try {\r\n            let abortController = new AbortController();\r\n            let res = await fetch(url, {\r\n                method: \"POST\",\r\n                body: data,\r\n                signal: abortController.signal,\r\n            });\r\n            nav.push(<CompileResult {...this.props} actionName=\"编译\" res={res} abortController={abortController} />);\r\n        }\r\n        catch (e) {\r\n            console.error('%s %s', url, e);\r\n        }\r\n    }\r\n    private onUpdate = async () => {\r\n        nav.ceaseTop();\r\n        let thoroughly = false;\r\n        await this.update(thoroughly);\r\n    }\r\n    private onUpdateThoroughly = async () => {\r\n        nav.ceaseTop();\r\n        let thoroughly = true;\r\n        await this.update(thoroughly);\r\n    }\r\n    render() {\r\n        let {files} = this.state;\r\n        let fileList:any;\r\n        if (files !== undefined) {\r\n            fileList = <List \r\n                className=\"my-3\" \r\n                items={files} \r\n                item={{render: this.fileRender, onClick: this.fileClick}}/>;\r\n        }\r\n        let button:any;\r\n        if (files !== undefined && files.length > 0) {\r\n            button = <div className=\"my-2 d-flex\">\r\n                <button className=\"btn btn-success\" type=\"submit\" onClick={this.onUpdate}>优化编译</button>\r\n                <div className=\"py-2 flex-grow-1\" />\r\n                <button className=\"btn btn-outline-warning\"\r\n                    type=\"submit\" onClick={this.onUpdateThoroughly}>完全编译</button>\r\n            </div>;\r\n        }\r\n        return <Page header={'编译 - ' + this.props.uq.name}>\r\n            <div className=\"py-2 px-3\">\r\n                <div>请选择UQ源代码文件</div>\r\n                <form className=\"my-1\" encType=\"multipart/form-data\" onSubmit={this.onSubmit}>\r\n                    <div className=\"my-1\">\r\n                        <input ref={(fileInput) => this.fileInput=fileInput}type=\"file\" id=\"photo\" \r\n                            className=\"w-100 form-control-file\" name=\"files\" multiple={true} \r\n                            onChange={this.onFilesChange} />\r\n                    </div>\r\n                    {fileList}\r\n                    {button}\r\n                </form>\r\n                <pre>{this.state.compiled}</pre>\r\n                <div>{this.state.text}</div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n\r\nexport class UqDeploy extends React.Component<UqUploadProps> {\r\n    private onDeploy = async () => {\r\n        nav.ceaseTop();\r\n        let thoroughly = false;\r\n        await this.update(thoroughly);\r\n    }\r\n    private onDeployThoroughly = async () => {\r\n        nav.ceaseTop();\r\n        let thoroughly = true;\r\n        await this.update(thoroughly);\r\n    }\r\n    private async update(thoroughly:boolean) {\r\n        let url = store.uqServer + 'uq-compile/' + this.props.uq.id + '/deploy';\r\n        if (thoroughly === true) url += '-thoroughly';\r\n        try {\r\n            let abortController = new AbortController();\r\n            let res = await fetch(url, {\r\n                method: \"POST\",\r\n                signal: abortController.signal,\r\n            });\r\n            nav.push(<CompileResult {...this.props} actionName=\"发布\" res={res} abortController={abortController} />);\r\n        }\r\n        catch (e) {\r\n            console.error('%s %s', url, e);\r\n        }\r\n    }\r\n    render() {\r\n        return <Page header={'发布 - ' + this.props.uq.name}>\r\n            <div className=\"m-3 bg-white p-3\">\r\n                <ul className=\"my-3\">\r\n                    <li>将已经编译测试过的代码，发布到生产服务器</li>\r\n                    <li>优化发布快速比较代码，仅仅对修改代码的部分发布</li>\r\n                    <li>彻底发布仅用于底层代码有突破性变化时</li>\r\n                </ul>\r\n                <div className=\"d-flex p-3\">\r\n                    <button className=\"btn btn-success\" type=\"submit\" onClick={this.onDeploy}>优化发布</button>\r\n                    <div className=\"py-2 flex-grow-1\" />\r\n                    <button className=\"btn btn-outline-warning\"\r\n                        type=\"submit\" onClick={this.onDeployThoroughly}>彻底发布</button>\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n\r\ninterface UqPgeProps {\r\n    name: string;\r\n    content: string|ArrayBuffer;\r\n}\r\nclass UqPage extends React.Component<UqPgeProps> {\r\n    render() {\r\n        return <Page header={this.props.name}>\r\n            <pre className=\"px-3 py-2\">{this.props.content}</pre>\r\n        </Page>;\r\n    }\r\n}\r\n\r\ninterface CompileResultProps {\r\n    uq: DevModel.UQ;\r\n    actionName: string;\r\n    res: Response;\r\n    abortController: AbortController;\r\n}\r\ninterface CompileResultState {\r\n    texts: (string|string[])[];\r\n    seconds: number;\r\n    collaps: {[index:number]: boolean};\r\n}\r\nclass CompileResult extends React.Component<CompileResultProps, CompileResultState> {\r\n    private textSections: TextSections;\r\n    private timeHandler:any;\r\n    constructor(props:CompileResultProps) {\r\n        super(props);\r\n        this.textSections = new TextSections();\r\n        this.state = {\r\n            texts: this.textSections.sections,\r\n            seconds: -1,\r\n            collaps: {}\r\n        }\r\n    }\r\n    componentWillMount() {\r\n        nav.regConfirmClose(async ():Promise<boolean>=>{\r\n            if (this.state.seconds>=0) return true;\r\n            return new Promise<boolean>((resolve, reject) => {\r\n                try {\r\n                    if (confirm(`正在${this.props.actionName}中，真的要中止吗？`) === true) {\r\n                        try {\r\n                            this.props.abortController.abort();\r\n                        }\r\n                        catch (err) {\r\n                            console.error(err);\r\n                        }\r\n                        resolve(true);\r\n                    }\r\n                    else {\r\n                        resolve(false);\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    reject(err);\r\n                }\r\n            })\r\n        });\r\n    }\r\n    private clearTimeHandler() {\r\n        if (this.timeHandler !== undefined) {\r\n            clearTimeout(this.timeHandler);\r\n            this.timeHandler = undefined;\r\n        }\r\n    }\r\n    private getParent(el:HTMLElement):HTMLElement {\r\n        if (!el) return;\r\n        if (el.tagName === 'MAIN') return el;\r\n        return this.getParent(el.parentElement);\r\n    }\r\n    private scrollToBottom(defer:number = 100) {\r\n        this.clearTimeHandler();\r\n        let that = this;\r\n        this.timeHandler = setTimeout(() => {\r\n            var pane = document.getElementById('bottomDiv');\r\n            pane && pane.scrollIntoView();\r\n            /*\r\n            if (pane !== undefined) {\r\n                let childNodes = pane.childNodes;\r\n                let last = childNodes.item(childNodes.length-1);\r\n                (last as HTMLElement).scrollIntoView();\r\n            }\r\n            */\r\n            that.clearTimeHandler();\r\n        }, defer);\r\n    }\r\n    private topIntoView() {\r\n        var pane = document.getElementById('topDiv');\r\n        pane && pane.scrollIntoView();\r\n        /*\r\n        let childNodes = pane.childNodes;\r\n        let len = childNodes.length;\r\n        if (len === 0) return;\r\n        let first = childNodes.item(0);\r\n        (first as HTMLElement).scrollIntoView();\r\n        */\r\n    }\r\n    private bottomIntoView() {\r\n        var pane = document.getElementById('bottomDiv');\r\n        pane && pane.scrollIntoView();\r\n        /*\r\n        let childNodes = pane.childNodes;\r\n        let len = childNodes.length;\r\n        if (len === 0) return;\r\n        let last = childNodes.item(len-1);\r\n        (last as HTMLElement).scrollIntoView();\r\n        */\r\n    }\r\n    private doubleClick = () => {\r\n        var pane = document.getElementById('scrollDiv');\r\n        let main = this.getParent(pane);\r\n        if (!main) return;\r\n        if (main.scrollTop >= main.scrollHeight / 2) {\r\n            this.topIntoView();\r\n        }\r\n        else {\r\n            this.bottomIntoView();\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let that = this;\r\n        let time = new Date();\r\n        function consume(reader: ReadableStreamReader) {\r\n            let total = 0;\r\n            return new Promise((resolve, reject) => {\r\n                function pump() {\r\n                    reader.read().then(({done, value}) => {\r\n                        function uintToString(uintArray:number[]):string {\r\n                            var encodedString = String.fromCharCode.apply(null, uintArray),\r\n                                decodedString = decodeURIComponent(escape(encodedString));\r\n                            return decodedString;\r\n                        }        \r\n                        if (done) {\r\n                            that.scrollToBottom();\r\n                            that.setState({\r\n                                seconds: (new Date().getTime() - time.getTime()),\r\n                            })\r\n                            resolve();\r\n                            return;\r\n                        }\r\n                        let text = uintToString(value);\r\n                        that.textSections.add(text);\r\n                        that.setState({\r\n                            texts: that.textSections.sections,\r\n                        });\r\n                        total += value.byteLength;\r\n                        that.scrollToBottom();\r\n                        pump();\r\n                    }).catch(reject)\r\n                }\r\n                pump();\r\n            });\r\n        }\r\n        try {\r\n            await consume(this.props.res.body.getReader());\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n    private renderText = (text:string|string[], index:number):JSX.Element => {\r\n        if (Array.isArray(text)) {\r\n            let groupId = 'text-group-' + index;\r\n            let line = text[0];\r\n            let title: string;\r\n            let p0 = line.indexOf('\\n'), p:number;\r\n            if (p0 === 0) {\r\n                p0 = 1;\r\n                p = line.indexOf('\\n', p0);\r\n            }\r\n            else {\r\n                p = line.indexOf('\\n');\r\n            }\r\n            if (p < 0) p = undefined;\r\n            else {\r\n                let l = line.indexOf('(');\r\n                if (l < p) p = l;\r\n            }\r\n            title = line.substring(p0, p);\r\n\r\n            let onClick = () => {\r\n                let c = this.state.collaps[index];\r\n                if (c === false) c = true;\r\n                else c = false;\r\n                this.setState(prevState => ({\r\n                    collaps: {\r\n                        ...prevState.collaps,\r\n                        [index]: c,\r\n                    },\r\n                }));\r\n            }\r\n            let titleIcon:any, content:any;\r\n            if (this.state.collaps[index]===false) {\r\n                titleIcon = <FA name='arrow-circle-up' className='text-success' />;\r\n                content = <div>\r\n                    {\r\n                        text.map((v, i) => {\r\n                            if (v.trim().length === 0) return null;\r\n                            return <pre style={{whiteSpace: 'pre-wrap'}} key={index + '-' + i}>{v}</pre>\r\n                        })\r\n                    }\r\n                </div>;\r\n            }\r\n            else {\r\n                titleIcon = <FA name='arrow-circle-down' className='text-success' />;\r\n            }\r\n            return <React.Fragment key={index}>\r\n                <div className=\"cursor-pointer text-primary\" onClick={onClick}>{titleIcon} <u>{title}</u></div>\r\n                {content}\r\n            </React.Fragment>;\r\n        }\r\n        if (text.trim().length === 0) return null;\r\n        let parts = text.split('\\n');\r\n        return <React.Fragment key={index}>\r\n            {parts.map((v, i) => <div key={i}>{v}</div>)}\r\n        </React.Fragment>;\r\n    }\r\n    render() {\r\n        let {uq, actionName} = this.props;\r\n        let {seconds, texts} = this.state;\r\n        let header = uq.name + ' - ' + actionName + (seconds>=0? \"完成\" : \"中...\");\r\n        return <Page header={header} back=\"close\">\r\n            <div id='topDiv' />\r\n            <div id='scrollDiv'\r\n                onDoubleClick={this.doubleClick} \r\n                className='py-2 px-3' \r\n                style={{wordWrap: 'break-word', whiteSpace: 'normal'}}>\r\n                {texts.map(this.renderText)}\r\n            </div>\r\n            {seconds>=0? <div className='px-3 pb-3' style={{color: 'red', fontWeight: 'bold'}}>\r\n                {actionName}完成。共计用时{Math.floor(seconds/1000)}秒\r\n            </div> : undefined}\r\n            <div id='bottomDiv' />\r\n        </Page>;\r\n    }\r\n}","import * as React from 'react';\r\nimport {nav, Page} from 'tonva';\r\nimport {IdPick, IdPickFace} from 'tonva-form';\r\nimport {List, SearchBox} from 'tonva';\r\n\r\nexport interface IdPickProps {\r\n    caption: string;\r\n    searchPlaceHolder?: string;\r\n    candidateItems: ((params:any, key:string) => Promise<any[]>) | any[];\r\n    moreCandidates: () => Promise<void>;\r\n    row: (item:any, index:number) => JSX.Element;\r\n}\r\n\r\nexport function createIdPick(props: IdPickProps):IdPick {\r\n    return function(face: IdPickFace, params: any):Promise<void> {\r\n        return new Promise<void>((resolve, reject) => {\r\n            nav.push(<IdPickPage resolve={resolve} face={face} params={params} {...props} />);\r\n        });\r\n    }\r\n}\r\n\r\ninterface IdPickPageProps extends IdPickProps {\r\n    face: IdPickFace;\r\n    resolve: (item?: any) => void;\r\n    params: any;\r\n}\r\ninterface IdPickPageState {\r\n    items?: any[];\r\n}\r\n\r\nclass IdPickPage extends React.Component<IdPickPageProps, IdPickPageState> {\r\n    private items:any[];\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: null,\r\n        }\r\n        this.itemClick = this.itemClick.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n    }\r\n    async componentDidMount() {\r\n        let {face, candidateItems, params} = this.props;\r\n        this.setState({\r\n            items: Array.isArray(candidateItems)? candidateItems : await candidateItems(params, ''),\r\n        });\r\n    }\r\n    itemClick(item:any) {\r\n        let {resolve} = this.props;\r\n        resolve(item);\r\n        nav.pop();\r\n    }\r\n    async onSearch(key: string) {\r\n        //alert('search ' + key);\r\n        //await store.dev.searchServer.first(key)\r\n        let {candidateItems, params} = this.props;\r\n        if (typeof candidateItems === 'function') {\r\n            let ret = await candidateItems(params, key);\r\n            this.setState({items: ret});\r\n        }\r\n    }\r\n    render() {\r\n        let {caption, row, searchPlaceHolder} = this.props;\r\n        return <Page header={caption} back=\"close\">\r\n            <div className=\"container\">\r\n                <SearchBox className=\"my-2\" \r\n                    onSearch={this.onSearch} \r\n                    placeholder={searchPlaceHolder}\r\n                    maxLength={100} />\r\n            </div>\r\n            <List items={this.state.items} item={{onClick:this.itemClick, render:row}} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { DevModel } from 'model';\r\nimport { IdPickProps, createIdPick } from 'createIdPick';\r\nimport { store } from 'store';\r\nimport { Field, FormRow, StringFace, TextAreaFace, TonvaForm, SubmitResult } from 'tonva-form';\r\nimport { UQController } from './uqController';\r\nimport { VPage, nav, Page } from 'tonva';\r\n\r\nconst ServerCaption = (item:DevModel.Server) => {\r\n    let {discription, cloud, ip} = item;\r\n    return <>{discription} {cloud} {ip}</>;\r\n}\r\n\r\nconst idPickServerProps: IdPickProps = {\r\n    caption: '选择服务器',\r\n    searchPlaceHolder: '搜索服务器',\r\n    candidateItems: async (params:any, key:string) => {\r\n        await store.dev.searchServer.first(key);\r\n        return store.dev.searchServer.items;\r\n    },\r\n    moreCandidates: async () => {\r\n        await store.dev.searchServer.more();\r\n    },\r\n    row: (item:DevModel.Server, index:number) => {\r\n        return <div className=\"px-3 py-2\"><ServerCaption {...item} /></div>;\r\n    },\r\n};\r\n\r\nconst urlField:Field = {name: 'url', type: 'string', required:true, maxLength:200};\r\nconst serverField:Field = {name: 'server', type: 'id'};\r\nconst dbTypeField:Field = {name: 'db_type', type: 'string', maxLength:20, defaultValue:'mysql'};\r\nconst dbField:Field = {name: 'db', type: 'string', maxLength:50, required: true};\r\nconst connectionField:Field = {name:'connection', type:'string', maxLength:250};\r\n\r\nconst urlRow = {\r\n    label: 'URL',\r\n    field: urlField,\r\n};\r\n\r\nconst serverRow = {\r\n    label: '服务器', \r\n    field: serverField,\r\n    face: {\r\n        type: 'pick-id', \r\n        initCaption: '请选择服务器', \r\n        pick: createIdPick(idPickServerProps), //this.idPick,\r\n        fromPicked: (item:DevModel.Server)=>{\r\n            return {\r\n                id: item.id, \r\n                caption: <ServerCaption {...item} />,\r\n            };\r\n        },\r\n        itemFromId: (id:number)=>store.cacheServers.get(id),\r\n    },\r\n};\r\n\r\nconst dbTypeRow:FormRow = {\r\n    label: '数据库类型',\r\n    field: dbTypeField,\r\n    face: {\r\n        type: 'string',\r\n        readonly: true,\r\n    } as StringFace\r\n};\r\n\r\nconst dbRow = {\r\n    label: '数据库名字',\r\n    field: dbField,\r\n};\r\n\r\nconst connectionRow = {\r\n    label: '连接字符串',\r\n    field: connectionField,\r\n    face: {\r\n        type: 'textarea',\r\n        maxLength: 250,\r\n        rows: 8,\r\n    } as TextAreaFace,\r\n};\r\n\r\nexport class NewServicePage extends VPage<UQController> {\r\n    private tonvaForm:TonvaForm;\r\n    private formRows:FormRow[] = [\r\n        urlRow,\r\n        serverRow,\r\n        dbTypeRow,\r\n        dbRow,\r\n        connectionRow\r\n    ];\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n    private onSubmit = async (values:any):Promise<SubmitResult | undefined> => {\r\n        if (values.url.indexOf('/uq/')<0) {\r\n            this.tonvaForm.formView.setError('url', 'service url 必须包含/uq/');\r\n            return;\r\n        }\r\n\r\n        values.type = 2; // uq type, to be removed\r\n        values.bindId = this.controller.uq.id;\r\n        let ret = await this.controller.saveService(values);\r\n        if (ret === 0) {\r\n            if (this.tonvaForm !== undefined) {\r\n                this.tonvaForm.formView.setError('url', '已经有Service使用这个url');\r\n            }\r\n            return;\r\n        }\r\n        nav.pop();\r\n        return;\r\n    }\r\n    private page = () => {\r\n        return <Page header=\"新建Service\">\r\n            <TonvaForm ref={t=>this.tonvaForm=t} className=\"m-3\" formRows={this.formRows} onSubmit={this.onSubmit} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { Page, VPage, nav } from 'tonva';\r\nimport { UQController } from './uqController';\r\nimport { DevModel } from 'model';\r\nimport { Prop, PropGrid } from 'tonva';\r\nimport { StringValueEdit, ServerSpan, TextValueEdit } from 'tools';\r\n\r\nexport class ServicePage extends VPage<UQController> {\r\n    @observable private service: DevModel.Service;\r\n    async open(service: DevModel.Service) {\r\n        this.service = service;\r\n        this.openPage(this.page);\r\n    }\r\n    private async changeProp(prop:string, value:any):Promise<any> {\r\n        return await this.controller.changeServiceProp(this.service, prop, value);\r\n    }\r\n    private onUrlChanged = async (value:any, orgValue:any):Promise<string|void> => {\r\n        if ((value as string).indexOf('/uq/')<0) {\r\n            return 'URL必须包含/uq/';\r\n        }\r\n        let ret = await this.changeProp('url', value);\r\n        if (ret === 0) {\r\n            return 'URL已经被使用了';\r\n        }\r\n        this.service.url = value;\r\n    }\r\n    private onDbChanged = async (value:any, orgValue:any):Promise<string|void> => {\r\n        let ret = await this.changeProp('db', value);\r\n        if (ret === 0) {\r\n            return 'Db已经被使用了';\r\n        }\r\n        this.service.db = value;\r\n    }\r\n    private onDbTypeChanged = async (value:string, orgValue:any):Promise<string|void> => {\r\n        if (value === undefined || value === null) return;\r\n        if (value.toLowerCase().trim() !== 'mysql') return '目前只支持mysql';\r\n        let ret = await this.changeProp('db_type', value);\r\n        this.service.db_type = value;\r\n    }\r\n    private onConnectionChanged = async (value:string, orgValue:any):Promise<string|void> => {        \r\n        await this.changeProp('connection', value);\r\n        this.service.connection = value;\r\n    }\r\n    private onDeleteClick = async () => {\r\n        if (confirm(\"真的要删除Service吗？删除了不可恢复，需要重新录入。\")!==true) return;\r\n        await this.controller.delService(this.service);\r\n        nav.pop();\r\n    }\r\n    private page = () => {\r\n        let {uq} = this.controller;\r\n        //let {type, name, discription, server, url, db, db_type, connection} = this.service;\r\n        let rows:Prop[] = [\r\n            '',\r\n            /*\r\n            {\r\n                type: 'component',\r\n                component: <div className=\"px-3 py-2\">\r\n                    <b>{name}</b><br/><Muted>{discription}</Muted>\r\n                </div>,\r\n            },\r\n            '',*/\r\n            {\r\n                type: 'string',\r\n                name: 'url',\r\n                label: 'URL',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"修改URL\"\r\n                    value={this.service.url}\r\n                    onChanged={this.onUrlChanged} />)\r\n            },\r\n            {\r\n                type: 'component',\r\n                label: '服务器',\r\n                component: <ServerSpan id={this.service.server} />\r\n            },\r\n            {\r\n                type: 'string',\r\n                name: 'db_type',\r\n                label: '数据库类型',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"数据库类型\"\r\n                    value={this.service.db_type}\r\n                    onChanged={this.onDbTypeChanged} />)\r\n            },\r\n            {\r\n                type: 'string',\r\n                name: 'db',\r\n                label: '数据库名',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"数据库名字\"\r\n                    value={this.service.db}\r\n                    onChanged={this.onDbChanged} />)\r\n            },\r\n            {\r\n                type: 'string',\r\n                name: 'connection',\r\n                label: '连接字符串',\r\n                onClick: ()=>nav.push(<TextValueEdit\r\n                    title=\"连接字符串\"\r\n                    value={this.service.connection}\r\n                    onChanged={this.onConnectionChanged} />)\r\n            },\r\n        ];\r\n        let right = <button onClick={this.onDeleteClick} className=\"btn btn-success\">删除</button>;\r\n        return <Page header={'UQ - ' + uq.name} right={right}>\r\n            <PropGrid rows={rows} values={this.service} />\r\n        </Page>\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { UQController } from './uqController';\r\nimport { VPage, nav, Page } from 'tonva';\r\nimport { SubmitResult, TonvaForm } from 'tonva-form';\r\n\r\nconst formRows = [\r\n    {\r\n        label: '名称', \r\n        field: {name: 'name', type: 'string', maxLength: 100, required: true},\r\n    },\r\n    {\r\n        label: '描述',\r\n        field: {name: 'discription', type: 'string', maxLength: 250},\r\n        face: {type: 'textarea'}\r\n    },\r\n    //{\r\n    //    label: '入口',\r\n    //    field: {name: 'access', type: 'string', maxLength: 250},\r\n    //    face: {type: 'textarea', placeholder: '逗号分隔的入口名'}\r\n    //},\r\n];\r\n\r\n\r\nexport abstract class EditBasePage extends VPage<UQController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n    protected onSubmit = async (values:any):Promise<SubmitResult> => {\r\n        await this.controller.saveUq(values);\r\n        nav.pop();\r\n        return;\r\n    }\r\n    protected page: ()=>JSX.Element;\r\n    protected form(initValues:any):JSX.Element {\r\n        return <TonvaForm\r\n            className=\"m-3\"\r\n            formRows={formRows} \r\n            onSubmit={this.onSubmit} initValues={initValues} />\r\n    }\r\n}\r\n\r\nexport class EditPage extends EditBasePage {\r\n    protected page = () => {\r\n        let {uq} = this.controller;\r\n        let {name} = uq;\r\n        return <Page header={'修改UQ - ' + name} back=\"close\">\r\n            {this.form(uq)}\r\n        </Page>;\r\n    }\r\n}\r\n\r\nexport class NewPage extends EditBasePage {\r\n    protected page = () => {\r\n        return <Page header={'新建UQ'} back=\"close\">\r\n            {this.form({})}\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, nav } from 'tonva';\r\nimport { UQController } from './uqController';\r\nimport { IdDates, UnitSpan, ServerSpan } from 'tools';\r\nimport { Prop, Media, LMR, FA, PropGrid, Muted, List, EasyDate, DropdownActions } from 'tonva';\r\nimport { DevModel } from 'model';\r\nimport { EditPage } from './editPage';\r\nimport { store } from 'store';\r\n\r\nexport class UQPage extends VPage<UQController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private editItem = async () => {\r\n        await this.openVPage(EditPage);\r\n        //nav.push(<EditAppPage {...this.props} />);\r\n    }\r\n\r\n    private deleteItem = async () => {\r\n        if (confirm('真的要删除UQ吗？') === true) {\r\n            await this.controller.deleteUq();\r\n            nav.pop();\r\n        }\r\n    }\r\n\r\n    private page = ():JSX.Element => {\r\n        let {onUqUpload, onUqDeploy, serviceClick, uq, services} = this.controller;\r\n        let {isOwner} = store.unit;\r\n        let {id, name, discription, access, unit, date_init, date_update} = uq;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let menuItems = [\r\n            {caption:'修改UQ', action:this.editItem, icon:'edit' },\r\n            {caption:'删除', action:this.deleteItem, icon:'trash-o' }\r\n        ];\r\n        let right = isOwner>0 && <DropdownActions actions={menuItems} />;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <LMR className=\"py-2\"\r\n                    left={<FA name=\"database\" className=\"text-primary fa-2x mr-3\" />}>\r\n                    <div><b>{name}</b></div>\r\n                    {disp}\r\n                </LMR>\r\n            },\r\n            {\r\n                type: 'component', \r\n                label: '开发号', \r\n                component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> \r\n            },\r\n           '',\r\n           {\r\n                type: 'component', \r\n                label: '编译代码', \r\n                component: <LMR onClick={onUqUpload} className=\"w-100 py-2 cursor-pointer\" \r\n                    left=\"上传编译UQ代码\" right={<FA className=\"align-self-center\" name=\"chevron-right\" />} />\r\n            },\r\n            {\r\n                type: 'component', \r\n                label: '发布UQ', \r\n                component: <LMR onClick={onUqDeploy} className=\"w-100 py-2 cursor-pointer\" \r\n                    left=\"发布UQ服务器\" right={<FA className=\"align-self-center\" name=\"chevron-right\" />} />\r\n            },\r\n            /*\r\n            {type: 'component', label: 'ACCESS', component: <div className=\"py-2\">{\r\n                access? \r\n                    access.split(',').join(', ')\r\n                    : <Muted>(全)</Muted>\r\n            }</div> },\r\n            */\r\n        ];\r\n        let btnAddService = isOwner>0 && <button\r\n            className=\"btn btn-outline-primary btn-sm\"\r\n            onClick={()=>this.controller.showNewServicePage()}>\r\n            增加\r\n        </button>;\r\n        \r\n        let onServiceClick:any;\r\n        if (isOwner>0) onServiceClick = serviceClick;\r\n\r\n        return <Page header={'UQ - ' + name} right={right}>\r\n            <PropGrid rows={rows} values={uq} />\r\n            <div className=\"d-flex mx-3 mt-3 mb-1 align-items-end\">\r\n                <Muted style={{display:'block', flex:1}}>Service</Muted>\r\n                {btnAddService}\r\n            </div>\r\n            <List items={services} item={{render:this.renderService, onClick:onServiceClick}} />\r\n        </Page>;\r\n    }\r\n    private renderService(service:DevModel.Service, index:number):JSX.Element {\r\n        let {url, server, db, db_type, compile_time} = service;\r\n        let compile = !compile_time?\r\n            <Muted>未编译</Muted> :\r\n            <><Muted>编译: </Muted><EasyDate date={compile_time}/></>;\r\n\r\n        return <LMR className=\"d-flex w-100 align-items-center cursor-pointer py-2 px-3\"\r\n            right={<small>{compile}</small>}\r\n            >\r\n            <div>\r\n                <div>{url}</div>\r\n                <div>{db_type} {db}</div>\r\n                <Muted><ServerSpan id={server} /></Muted>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page } from 'tonva';\r\nimport { UQController } from './uqController';\r\nimport { List, LMR, Badge, Muted, FA } from 'tonva';\r\nimport { DevModel } from 'model';\r\nimport { NewPage } from './editPage';\r\nimport { store } from 'store';\r\n\r\nexport class ListPage extends VPage<UQController> {\r\n    async open(param:any) {\r\n        this.openPage(this.page);\r\n    }\r\n    private newItem = () => {\r\n        this.controller.uq = undefined;\r\n        this.openVPage(NewPage);\r\n    }\r\n    private page = ():JSX.Element => {\r\n        let {uqList: list, listRowClick} = this.controller;\r\n        let {isOwner} = store.unit;\r\n        let right = isOwner>0 && <button className='btn btn-secondary btn-sm' onClick={()=>this.newItem()}><FA name=\"plus\" /></button>;\r\n        return <Page header=\"UQ\" right={right}>\r\n            <List items={list} item={{render: this.listRow, onClick: listRowClick}} />\r\n        </Page>\r\n    }\r\n    private listRow = (item:DevModel.UQ):JSX.Element => {\r\n        let {name, discription, service_count} = item;\r\n        return <LMR className=\"py-1 px-3 align-items-center\"\r\n            left={<FA name=\"database\" className=\"text-primary fa-lg\" />}\r\n            right={<>{service_count}</>}>\r\n            <div className=\"py-2 px-3\">\r\n                <div><b>{name}</b></div>\r\n                <div><Muted>{discription}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { observable } from 'mobx';\r\nimport { nav, Controller } from 'tonva';\r\nimport { DevModel } from '../../model';\r\nimport { UqUpload, UqUploadProps, UqDeploy } from './uqUpload';\r\nimport { devApi } from 'api';\r\nimport { NewServicePage } from './newServicePage';\r\nimport { ServicePage } from './servicePage';\r\nimport { UQPage } from './uqPage';\r\nimport { ListPage } from './listPage';\r\n\r\nexport class UQController extends Controller {\r\n    private unitId: number;\r\n    uq: DevModel.UQ;\r\n    access: string;\r\n    entities: string;\r\n    @observable uqList: DevModel.UQ[];\r\n    @observable services: DevModel.Service[];\r\n    protected async internalStart(unitId:any) {\r\n        this.unitId = unitId;\r\n        this.uqList = await devApi.uqs(this.unitId);\r\n        this.openVPage(ListPage);\r\n    }\r\n\r\n    listRowClick = async (item:DevModel.UQ) => {\r\n        this.uq = item;\r\n        await this.loadUqEntities(item.id);\r\n        this.openVPage(UQPage);\r\n    }\r\n\r\n    private async loadUqEntities(uqId: number) {\r\n        let ret = await devApi.uqGetEntities(this.unitId, uqId);\r\n        let r0 = ret[0][0];\r\n        this.access = r0.access;\r\n        this.entities = r0.entities;\r\n        this.services = ret[1];\r\n    }\r\n\r\n    serviceClick = (service: DevModel.Service) => {\r\n        this.openVPage(ServicePage, service);\r\n    }\r\n\r\n    onUqUpload = async() => {\r\n        let onDispose = () => {}\r\n        nav.push(<UqUpload uq={this.uq} services={this.services} />, onDispose);\r\n    }\r\n\r\n    onUqDeploy = async() => {\r\n        let onDispose = () => {}\r\n        nav.push(<UqDeploy uq={this.uq} services={this.services} />, onDispose);\r\n    }\r\n\r\n    saveUq = async (values: DevModel.UQ) => {\r\n        let uq: DevModel.UQ;\r\n        if (this.uq === undefined) {\r\n            uq = _.clone(values);\r\n        }\r\n        else {\r\n            uq = _.clone(this.uq);\r\n            _.merge(uq, values);\r\n        }\r\n        uq.unit = this.unitId;\r\n        let ret = await devApi.saveUq(uq);\r\n        uq.id = ret;\r\n        this.uqList.push(uq);\r\n    }\r\n\r\n    deleteUq = async () => {\r\n        await devApi.delUq(this.unitId, this.uq.id);\r\n        let index = this.uqList.findIndex(v => v.id === this.uq.id);\r\n        if (index >= 0) this.uqList.splice(index);\r\n    }\r\n\r\n    async changeServiceProp(service: DevModel.Service, prop:string, value:any):Promise<any> {\r\n        return await devApi.changeServiceProp(this.unitId, service.id, prop, value);\r\n    }\r\n\r\n    async saveService(service: DevModel.Service):Promise<number> {\r\n        let svc = _.clone(service);\r\n        svc.unit = this.unitId;\r\n        let ret = await devApi.saveService(svc);\r\n        svc.id = ret;\r\n        this.services.push(svc);\r\n        return ret;\r\n    }\r\n\r\n    async delService(service: DevModel.Service) {\r\n        await devApi.delService(this.unitId, service.id);\r\n        let index = this.services.findIndex(v => v.id == service.id);\r\n        if (index >= 0) this.services.splice(index);\r\n    }\r\n\r\n    showNewServicePage = async () => {\r\n        await this.openVPage(NewServicePage);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {LMR, Badge, Muted} from 'tonva';\r\n\r\nexport interface RowProps {\r\n    icon: string;\r\n    main: string|JSX.Element;\r\n    vice: string|JSX.Element;\r\n}\r\n\r\nexport class Row extends React.Component<RowProps> {\r\n    render() {\r\n        let {icon, main, vice} = this.props;\r\n        return <LMR className=\"py-1 px-3 align-items-stretch\"\r\n            left={<Badge size=\"sm\" className=\"pt-1\"><img src={icon} /></Badge>}>\r\n            <div className=\"px-3\">\r\n                <div><b>{main}</b></div>\r\n                <div><Muted>{vice}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport _ from 'lodash';\r\nimport {EasyDate, Media, \r\n    Prop, ListProp, PropGrid, List, SearchBox, LMR, Badge, Muted} from 'tonva';\r\nimport {UnitSpan, IdDates, ServerSpan} from '../tools';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {DevModel} from '../model';\r\nimport {store} from '../store';\r\nimport {Row} from './row';\r\nimport {ObjViewProps} from './ObjViewProps';\r\n\r\n@observer\r\nclass Info extends React.Component<DevModel.Bus> {\r\n    /*\r\n    private rows: Prop[];\r\n    constructor(props:any) {\r\n        super(props);\r\n        let {unit, name, discription, schema, date_init, date_update} = this.props;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={name} discription={disp} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                label: 'Schema',\r\n                vAlign: 'stretch',\r\n                component: <SchemaView />,\r\n            },\r\n        ];\r\n    }*/\r\n    async componentDidMount() {\r\n        //await store.dev.buses.loadCurApis();\r\n    }\r\n    render() {\r\n        let {unit, name, discription, schema, date_init, date_update} = this.props;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={name} discription={disp} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                label: 'Schema',\r\n                vAlign: 'stretch',\r\n                component: <SchemaView />,\r\n            },\r\n        ];\r\n        return <div>\r\n            <PropGrid rows={rows} values={this.props} />\r\n        </div>\r\n    }\r\n}\r\n\r\n@observer\r\nexport class SchemaView extends React.Component {\r\n    render() {\r\n        let bus = store.dev.buses.cur;\r\n        if (bus === null) return '...';\r\n        let content = bus.schema;\r\n        return <div className=\"d-flex py-2 w-100 align-items-center\" style={{flex:1}}>\r\n            <pre>\r\n                {content}\r\n            </pre>\r\n        </div>;\r\n\r\n    }\r\n}\r\n\r\nconst busesProps:ObjViewProps<DevModel.Bus> = {\r\n    title: 'BUS',\r\n    formRows: [\r\n        {\r\n            label: '名称', \r\n            field: {name: 'name', type: 'string', maxLength: 100, required: true},\r\n        },\r\n        {\r\n            label: '描述',\r\n            field: {name: 'discription', type: 'string', maxLength: 250},\r\n            face: {type: 'textarea'}\r\n        },\r\n        {\r\n            label: 'Schema',\r\n            field: {name: 'schema', type: 'string', maxLength: 2500},\r\n            face: {type: 'textarea', rows: 8}\r\n        },\r\n    ],\r\n    row: (item:DevModel.Bus):JSX.Element => {\r\n        let {owner, name, discription} = item;\r\n        return <Row icon={appItemIcon} main={owner + ' / ' + name} vice={discription} />;\r\n    },\r\n    items: ()=>store.dev.buses,\r\n    repeated: {\r\n        name: 'name',\r\n        err: '跟已有的名称重复',\r\n    },\r\n    info: Info,\r\n};\r\n\r\nexport default busesProps;\r\n","import * as React from 'react';\r\nimport {Prop, PropGrid, LMR, Muted, FA} from 'tonva';\r\nimport {UnitSpan, IdDates} from '../tools';\r\nimport {DevModel} from '../model';\r\nimport {store} from '../store';\r\nimport {ObjViewProps} from './ObjViewProps';\r\n\r\nclass Info extends React.Component<DevModel.Server> {\r\n    render() {\r\n        let {discription, cloud, ip, unit, date_init, date_update} = this.props;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;        \r\n        //<Media icon={appIcon} main={discription} discription={ip} />},\r\n        let rows:Prop[] = [\r\n            '',\r\n            {type: 'component', component: <LMR className=\"py-2\"\r\n                left={<FA name=\"server\" className=\"text-primary fa-2x mr-3\" />}>\r\n                <div><b>{ip}</b></div>\r\n                {disp}\r\n            </LMR>},\r\n            '',\r\n            {type: 'component', label: '开发号', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            {type: 'string', label: '云服务', name: 'cloud'},\r\n        ];\r\n        return <div>\r\n            <PropGrid rows={rows} values={this.props} />\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst serversProps:ObjViewProps<DevModel.Server> = {\r\n    title: 'Server',\r\n    info: Info,\r\n    formRows: [\r\n        {\r\n            label: '描述', \r\n            field: {name: 'discription', type: 'string', maxLength: 50, required: true},\r\n        },\r\n        {\r\n            label: '云服务商', \r\n            field: {name: 'cloud', type: 'string', maxLength: 20, required: true},\r\n        },\r\n        {\r\n            label: 'IP地址', \r\n            field: {name: 'ip', type: 'string', maxLength: 20},\r\n        },\r\n    ],\r\n    row: (item: DevModel.Server):JSX.Element => {\r\n        let {discription, cloud} = item;\r\n        //return <Row main={item.discription} vice={<>{item.cloud}  {item.ip}</>} />;\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n            left={<FA name=\"server\" className=\"text-primary fa-lg\" />}>\r\n            <div className=\"px-3\">\r\n                <div><b>{discription}</b></div>\r\n                <div><Muted>{cloud}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    },\r\n    items: ()=>store.dev.servers,\r\n    repeated: {\r\n        name: 'discription',\r\n        err: '重复的描述',\r\n    }\r\n};\r\n\r\nexport default serversProps;\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page} from 'tonva';\r\nimport {FormRow, TonvaForm, Step, MultiStep, SubmitResult} from 'tonva-form';\r\nimport {DropdownActions, Action, List, FA} from 'tonva';\r\nimport {DevModel} from '../model';\r\nimport { ObjViewProps } from './ObjViewProps';\r\nimport { store } from 'store';\r\n\r\n@observer\r\nexport class ObjView<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    async componentDidMount() {\r\n        await this.props.items().load();\r\n    }\r\n    //converter(item:T):ListItem {\r\n    //    return this.props.converter(item);\r\n    //}\r\n    newItem() {\r\n        this.props.items().cur = undefined;\r\n        nav.push(<New {...this.props} />);\r\n    }\r\n    itemClick = (item:T) => {\r\n        this.props.items().cur = observable(item);\r\n        nav.push(<Info {...this.props} />);\r\n    }\r\n    render() {\r\n        let {title, items} = this.props;\r\n        let {isOwner} = store.unit;\r\n        let right = isOwner>0 && <button className='btn btn-secondary btn-sm' onClick={()=>this.newItem()}><FA name=\"plus\" /></button>;\r\n        return <Page header={title} right={right}>\r\n            <List items={items().items}\r\n                item={{render: this.props.row, onClick: this.itemClick}}\r\n                // converter={this.props.converter} \r\n                //itemClick={this.itemClick} \r\n                />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass New<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    async onSubmit(values:any):Promise<SubmitResult> {\r\n        if (await this.props.items().check(values) === false) return;\r\n        let ret = await this.props.items().saveCur(values);\r\n        if (ret === true) {\r\n            nav.pop();\r\n        }\r\n        else {\r\n            let repeated = this.props.repeated;\r\n            //this.formView.setError(repeated.name, repeated.err);\r\n        }\r\n        return;\r\n    }\r\n    render() {\r\n        let content;\r\n        let {title, steps, stepHeader} = this.props;\r\n        let {formRows, items} = this.props;\r\n        if (steps !== undefined) {\r\n            content = <MultiStep className=\"mt-4\" header={stepHeader} steps={steps} first=\"step1\" onSubmit={this.onSubmit} />;\r\n        }\r\n        else if (formRows !== undefined) {\r\n            content = <TonvaForm \r\n                className=\"m-3\"\r\n                formRows={formRows} \r\n                onSubmit={this.onSubmit} initValues={items().cur} />;\r\n        }\r\n        else {\r\n            content = 'ObjViewProps: no steps and no formRows';\r\n        }\r\n        return <Page header={'新增'+title}>\r\n            {content}\r\n        </Page>\r\n    }\r\n}\r\n\r\n@observer\r\nclass Info<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    private menuItems = [\r\n        {caption:'修改' + this.props.title, action:this.editItem.bind(this), icon:'edit' },\r\n        {caption:'删除', action:this.deleteItem.bind(this), icon:'trash-o' }\r\n    ];\r\n    async deleteItem() {\r\n        if (confirm('真的要删除吗？系统删除时并不会检查相关引用，请谨慎') === true) {\r\n            await this.props.items().del();\r\n            nav.pop();\r\n        }\r\n    }\r\n    editItem() {\r\n        nav.push(<Edit {...this.props} />);\r\n    }\r\n    render() {\r\n        let actions = [];\r\n        let ex = this.props.extraMenuActions;\r\n        if (ex !== undefined) actions.push(...ex);\r\n        actions.push(...this.menuItems);        \r\n        let right = <DropdownActions actions={actions} />\r\n        let item = this.props.items().cur;\r\n        return <Page header={this.props.title + ' - 详细资料'} right={right}>\r\n            <this.props.info {...item} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass Edit<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    private actions = [\r\n        {caption:'删除', action:this.deleteItem.bind(this), icon:'trash-o' }\r\n    ];\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    componentWillMount() {\r\n    }\r\n    async onSubmit(values:any):Promise<SubmitResult> {\r\n        if (await this.props.items().check(values) === false) return;\r\n        await this.props.items().saveCur(values);\r\n        nav.pop();\r\n        return;\r\n    }\r\n    async deleteItem() {\r\n        if (confirm('真的要删除吗？系统删除时并不会检查相关引用，请谨慎') === true) {\r\n            await this.props.items().del();\r\n            nav.pop();\r\n        }\r\n    }\r\n    render() {\r\n        let right = <DropdownActions actions={this.actions} />\r\n        return <Page header={'修改 '+this.props.title} right={right} back=\"close\">\r\n            <TonvaForm \r\n                className=\"m-3\"\r\n                formRows={this.props.formRows} \r\n                onSubmit={this.onSubmit} initValues={this.props.items().cur} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from 'tonva';\r\nimport { List, SearchBox, LMR, FA } from 'tonva';\r\nimport { UsersController, UserApps, AppUsers } from './cUsers';\r\n\r\nexport class VApps extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private renderRow = (appUsers: AppUsers, index:number):JSX.Element => {\r\n        let {app, more, users} = appUsers;\r\n        let {id, name, discription} = app;\r\n        let right = <small className=\"text-muted\">{discription}</small>;\r\n        return <div className=\"d-block px-3 py-2\">\r\n            <LMR className=\"mb-2\" right={right}>\r\n                <FA name=\"address-card-o\" className=\"text-primary mr-3\" />\r\n                <b>{name}</b>\r\n            </LMR>\r\n            <div>\r\n                <small className=\"text-muted\">用户: </small>\r\n                {users.length===0?\r\n                    '[无]':\r\n                    users.map(u => u.assigned || u.nick || u.name).join(', ') + (more===true? ' ...' : '')}\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {appUsersList, searchApp, onAppsClick} = this.controller;\r\n        let searchBox = <SearchBox className=\"w-100 pr-1\" \r\n            onSearch={searchApp} \r\n            placeholder=\"搜索App\" \r\n            allowEmptySearch={true} />;\r\n        return <Page header={searchBox}>\r\n            <List items={appUsersList} \r\n                item={{render: this.renderRow, onClick:onAppsClick,  key: (item=>item.app.id)}} />\r\n        </Page>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from 'tonva';\r\nimport { List, SearchBox, LMR, FA } from 'tonva';\r\nimport { UsersController, UserApps } from './cUsers';\r\n\r\nexport class VUsers extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private renderRow = (userApps: UserApps, index:number):JSX.Element => {\r\n        let {user, apps} = userApps;\r\n        let {id, name, nick, icon, assigned} = user;\r\n        return <div className=\"d-block px-3 py-2\">\r\n            <div className=\"mb-2\">\r\n                <FA name=\"user-o\" className=\"text-primary mr-3\" />\r\n                <b>{assigned || nick || name}</b>\r\n            </div>\r\n            <div>\r\n                <small className=\"text-muted\">App: </small>\r\n                {apps.length===0?'[无]':apps.map(a => a.name).join(', ')}\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {userAppsList, searchUser, onUsersClick} = this.controller;\r\n        let searchBox = <SearchBox className=\"w-100 pr-1\" \r\n            onSearch={searchUser} \r\n            placeholder=\"搜索用户\" \r\n            allowEmptySearch={true} />;\r\n        return <Page header={searchBox}>\r\n            <List items={userAppsList} \r\n                item={{render: this.renderRow, onClick:onUsersClick, key: (item=>item.user.id)}} />\r\n        </Page>;\r\n    });\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from 'tonva';\r\nimport { List } from 'tonva';\r\nimport { UsersController, User } from './cUsers';\r\n\r\nexport class VApp extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curApp, curAppUsers, onAppEditUsers} = this.controller;\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={()=>onAppEditUsers()}>增减用户</button>;\r\n        return <Page header={'App - ' + (curApp.name)} right={right}>\r\n            <List items={curAppUsers} item={{render:this.renderApp}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderApp = (user: User, index:number):JSX.Element => {\r\n        let {name, nick, assigned} = user;\r\n        let content:any;\r\n        if (assigned)\r\n            content = <span>{assigned} &nbsp; <small className=\"text-muted\">{name}</small></span>;\r\n        else if (nick)\r\n            content = <span>{nick} &nbsp; <small className=\"text-muted\">{name}</small></span>;\r\n        else\r\n            content = <>{name}</>\r\n        return <div className=\"px-3 py-2\">{content}</div>\r\n    }\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from 'tonva';\r\nimport { List, SearchBox, LMR } from 'tonva';\r\nimport { UsersController, UserApps, AppUsers, App } from './cUsers';\r\n\r\nexport class VUser extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curUser, curUserApps, onUserEditApps} = this.controller;\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={()=>onUserEditApps()}>增减App</button>;\r\n        return <Page header={'用户 - ' + (curUser.assigned || curUser.nick || curUser.name)}\r\n            right={right}>\r\n            <List items={curUserApps} item={{render:this.renderApp}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderApp = (app: App, index:number):JSX.Element => {\r\n        let {name, discription} = app;\r\n        return <div className=\"px-3 py-2\">{name} {discription}</div>\r\n    }\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from 'tonva';\r\nimport { List, SearchBox, LMR, Muted, FA } from 'tonva';\r\nimport { UsersController, EditUser } from './cUsers';\r\n\r\nexport class VAppEditUsers extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curApp, appEditUsers, onAppEditUsers} = this.controller;\r\n        return <Page header={curApp.name + ' - 增减用户'} >\r\n            <List items={appEditUsers} item={{render:this.renderUser}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderUser = (editUser: EditUser, index:number):JSX.Element => {\r\n        let {name, nick, assigned, bind} = editUser;\r\n        let content:any;\r\n        if (assigned)\r\n            content = <>{assigned} <Muted>{name}</Muted></>;\r\n        else if (nick)\r\n            content = <>{nick} <Muted>{name}</Muted></>;\r\n        else\r\n            content = <>{name}</>\r\n        let right = <input type=\"checkbox\" defaultChecked={bind===1} \r\n            onChange={(evt)=>this.onUserChanged(editUser, evt.target.checked)} />;\r\n        return <LMR className=\"px-3 py-2 align-items-center\" right={right}>\r\n            {content}\r\n        </LMR>\r\n    }\r\n\r\n    private onUserChanged = async (editUser: EditUser, checked:boolean) => {\r\n        await this.controller.bindAppUser(editUser, checked);\r\n        editUser.bind = checked===true? 1: 0;\r\n    }\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from 'tonva';\r\nimport { List, SearchBox, LMR } from 'tonva';\r\nimport { UsersController, UserApps, AppUsers, App, EditApp } from './cUsers';\r\n\r\nexport class VUserEditApps extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curUser, userEditApps, onUserEditApps} = this.controller;\r\n        return <Page header={'增减App - ' + (curUser.assigned || curUser.nick || curUser.name)}>\r\n            <List items={userEditApps} item={{render:this.renderApp}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderApp = (editApp: EditApp, index:number):JSX.Element => {\r\n        let {name, discription, bind} = editApp;\r\n        let right = <input type=\"checkbox\" defaultChecked={bind===1} \r\n            onChange={(evt)=>this.onAppChanged(editApp, evt.target.checked)} />;\r\n        return <LMR className=\"px-3 py-2\" right={right}>\r\n            {name} {discription}\r\n        </LMR>\r\n    }\r\n\r\n    private onAppChanged = async (editApp: EditApp, checked:boolean) => {\r\n        await this.controller.bindUserApp(editApp, checked);\r\n        editApp.bind = checked===true? 1: 0;\r\n    }\r\n}","import * as React from 'react';\r\nimport { VPage, Page, Image, nav } from 'tonva';\r\nimport { UsersController, User } from './cUsers';\r\nimport { SearchBox } from 'tonva';\r\nimport { mainApi } from 'api';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class VAddUser extends VPage<UsersController> {\r\n    @observable private user: User = null;\r\n    //@observable private addedUser: User;\r\n    private searchBox: SearchBox;\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(():JSX.Element => {\r\n        let searchBox = <SearchBox ref={v=>this.searchBox=v}\r\n            className=\"w-100\"\r\n            onSearch={this.onSearch}\r\n            onFocus={this.onSearchFocus}\r\n            placeholder=\"用户全名/手机号/邮箱\"\r\n             />;\r\n        let content:any;\r\n        if (this.user === null) {\r\n        }\r\n        else if (this.user === undefined) {\r\n            content = <div className=\"text-info p-3\">没有找到用户</div>;\r\n        }\r\n        else {\r\n            let {name, nick, icon} = this.user;\r\n            let divUser:any;\r\n            if (nick) {\r\n                divUser = <><div><b>{nick}</b></div><div>{name}</div></>;\r\n            }\r\n            else {\r\n                divUser = <div><b>{name}</b></div>;\r\n            }\r\n            content = <div>\r\n                <div className=\"m-3 p-3 d-flex bg-white\">\r\n                    <Image src={icon} />\r\n                    <div className=\"ml-3\">{divUser}</div>\r\n                </div>\r\n                <div className=\"d-flex justify-content-center\">\r\n                    <button className=\"btn btn-success text-center\" onClick={this.onAddUser}>增加用户</button>\r\n                </div>\r\n            </div>;\r\n        }\r\n        /*\r\n        let divUserAdded:any;\r\n        if (this.addedUser) {\r\n            divUserAdded = <div className=\"p-3\">\r\n                <div>\r\n                    新增用户: {this.addedUser.name} &nbsp; &nbsp; \r\n                    <button className=\"btn btn-success\" \r\n                        onClick={()=>this.controller.onUserEditApps()}>\r\n                        为用户添加App\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        }\r\n        */\r\n        return <Page header={searchBox}>\r\n            {content}\r\n        </Page>;\r\n    })\r\n    //{divUserAdded}\r\n\r\n    private onSearch = async (key:string) => {\r\n        this.user = await mainApi.userFromKey(key);\r\n    }\r\n\r\n    private onAddUser = async () => {\r\n        await this.controller.addUser(this.user.id);\r\n        this.controller.curUser = this.user;\r\n        this.user = null;\r\n        this.searchBox.clear();\r\n        this.replacePage(this.addedPage);\r\n    }\r\n\r\n    private onSearchFocus = () => {\r\n        this.user = null;\r\n        //this.addedUser = null;\r\n        if (this.searchBox) this.searchBox.clear();\r\n    }\r\n\r\n    private onAddApps = () => {\r\n        this.closePage();\r\n        this.controller.onUserEditApps();\r\n    }\r\n\r\n    private onContinueAddUser = () => {\r\n        this.closePage();\r\n        this.controller.onAddUser();\r\n    }\r\n\r\n    private addedPage = () => {\r\n        return <Page header=\"添加成功\">\r\n            <div className=\"p-3 text-center\">\r\n                <div>\r\n                    新增用户: {this.controller.curUser.name}\r\n                </div>\r\n                <div className=\"mt-3\">\r\n                    <button className=\"btn btn-success mr-3\" \r\n                        onClick={this.onAddApps}>\r\n                        为用户添加App\r\n                    </button>\r\n                    <button className=\"btn btn-outline-primary\"\r\n                        onClick={this.onContinueAddUser}>\r\n                        继续添加新用户\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { Controller, VPage, Page } from 'tonva';\r\nimport { mainApi } from 'api';\r\nimport { LMR, FA } from 'tonva';\r\nimport { VApps } from './vApps';\r\nimport { VUsers } from './vUsers';\r\nimport { VApp } from './vApp';\r\nimport { VUser } from './vUser';\r\nimport { VAppEditUsers } from './vAppEditUsers';\r\nimport { VUserEditApps } from './vUserEditApps';\r\nimport { VAddUser } from './VAddUser';\r\nimport { Unit } from 'model';\r\n\r\nexport interface User {\r\n    id: number;\r\n    name: string;\r\n    nick: string;\r\n    icon: string;\r\n    assigned: string;\r\n}\r\nexport interface App {\r\n    id: number;\r\n    name: string;\r\n    discription: string;\r\n}\r\nexport interface UserApps {\r\n    user: User;\r\n    apps: App[];\r\n}\r\nexport interface AppUsers {\r\n    app: App;\r\n    users: User[];\r\n    more: boolean;\r\n}\r\nexport interface EditApp extends App {\r\n    bind: number;   // 0: not bind, 1: bind\r\n}\r\nexport interface EditUser extends User {\r\n    bind: number;  // 0: not bind, 1: bind\r\n}\r\n\r\nexport class UsersController extends Controller {\r\n    private unit: Unit;\r\n    @observable userAppsList: UserApps[];\r\n    @observable appUsersList: AppUsers[];\r\n    curUser: User;\r\n    @observable curUserApps: App[];\r\n    @observable userEditApps: EditApp[];\r\n    curApp: App;\r\n    @observable curAppUsers: User[];\r\n    @observable appEditUsers: EditUser[];\r\n\r\n    protected async internalStart(unit:Unit) {\r\n        this.unit = unit;\r\n        let cn = \"bg-white px-3 py-2 my-1\";\r\n        let appIcon = <FA name=\"columns\" className=\"text-primary mr-3\" />;\r\n        let userIcon = <FA name=\"user-plus\" className=\"text-primary mr-3\" />;\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={this.onAddUser}><FA name=\"plus\" /></button>;\r\n        this.openPage(<Page header={'用户管理 - ' +  this.unit.name} right={right}>\r\n            <LMR className={cn} onClick={this.onAppUsers} left={appIcon}>App</LMR>\r\n            <LMR className={cn} onClick={this.onUserApps} left={userIcon}>用户</LMR>\r\n        </Page>);\r\n    }\r\n\r\n    private onAppUsers = async () => {\r\n        await this.loadAppUsers(undefined);\r\n        this.openVPage(VApps);\r\n    }\r\n\r\n    private onUserApps = async () => {\r\n        await this.loadUserApps(undefined);\r\n        this.openVPage(VUsers);\r\n    }\r\n\r\n    private async loadAppUsers(key:string) {\r\n        let list:AppUsers[] = [];\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        let ret = await mainApi.unitAppUsers(this.unit.id, key, pageStart, pageSize);\r\n        let apps = ret[0];\r\n        let users = ret[1];\r\n        let coll: {[id:number]:AppUsers} = {}\r\n        for (let a of apps) {\r\n            let app:App = {\r\n                id: a.id,\r\n                name: a.name,\r\n                discription: a.discription,\r\n            };\r\n            list.push(coll[a.id] = {app:app, more:false, users:[]});\r\n        }\r\n        for (let u of users) {\r\n            let user:User = {\r\n                id: u.user,\r\n                name: u.name,\r\n                nick: u.nick,\r\n                icon: u.icon,\r\n                assigned: u.assigned\r\n            }\r\n            let item = coll[u.app];\r\n            let {users} = item;\r\n            if (users.length >= 5) {\r\n                item.more = true;\r\n            }\r\n            else {\r\n                users.push(user);\r\n            }\r\n        }\r\n        this.appUsersList = list;\r\n    }\r\n\r\n    private async loadUserApps(key:string) {\r\n        let list:UserApps[] = [];\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        let ret = await mainApi.unitUsers(this.unit.id, key, pageStart, pageSize);\r\n        let users = ret[0];\r\n        let apps = ret[1];\r\n        let coll: {[id:number]:UserApps} = {}\r\n        for (let u of users) {\r\n            let user:User = {\r\n                id: u.id,\r\n                name: u.name,\r\n                nick: u.nick,\r\n                icon: u.icon,\r\n                assigned: u.assigned\r\n            };\r\n            list.push(coll[u.id] = {user:user, apps:[]});\r\n        }\r\n        for (let a of apps) {\r\n            let app:App = {\r\n                id: a.app,\r\n                name: a.name,\r\n                discription: a.discription,\r\n            }\r\n            coll[a.user].apps.push(app);\r\n        }\r\n        this.userAppsList = list;\r\n    }\r\n\r\n    searchUser = async(key:string) => {\r\n        await this.loadUserApps(key);\r\n    }\r\n\r\n    searchApp = async(key:string) => {\r\n        await this.loadAppUsers(key);\r\n    }\r\n\r\n    onAppsClick = async (appUsers: AppUsers) => {\r\n        this.curApp = appUsers.app;\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.curAppUsers = await mainApi.unitOneAppUsers(this.unit.id, this.curApp.id, pageStart, pageSize);\r\n        this.openVPage(VApp);\r\n    }\r\n\r\n    onUsersClick = async (userApps: UserApps) => {\r\n        this.curUser = userApps.user;\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.curUserApps = await mainApi.unitOneUserApps(this.unit.id, this.curUser.id, pageStart, pageSize);\r\n        this.openVPage(VUser);\r\n    }\r\n\r\n    onAppEditUsers = async (key?:string) => {\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.appEditUsers = await mainApi.unitAppEditUsers(this.unit.id, this.curApp.id, key, pageStart, pageSize);\r\n        this.openVPage(VAppEditUsers);\r\n    }\r\n\r\n    onAddUser = () => {\r\n        this.openVPage(VAddUser);\r\n    }\r\n\r\n    onUserEditApps = async (key?:string) => {\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.userEditApps = await mainApi.unitUserEditApps(this.unit.id, this.curUser.id, key, pageStart, pageSize);\r\n        this.openVPage(VUserEditApps);\r\n    }\r\n\r\n    bindAppUser = async(user:User, checked:boolean) => {\r\n        await mainApi.bindAppUser(this.unit.id, this.curApp.id, user.id, checked===true? 1:0);\r\n        let appUsers = this.appUsersList.find(v => v.app.id === this.curApp.id);\r\n        if (checked === true) {\r\n            this.curAppUsers.push(user);\r\n            if (appUsers) appUsers.users.push(user);\r\n        }\r\n        else {\r\n            let index = this.curAppUsers.findIndex(v => v.id === user.id);\r\n            if (index>=0) this.curAppUsers.splice(index, 1);\r\n            if (appUsers) {\r\n                index = appUsers.users.findIndex(v => v.id === user.id);\r\n                if (index>=0) appUsers.users.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    bindUserApp = async(app:App, checked:boolean) => {\r\n        await mainApi.bindAppUser(this.unit.id, app.id, this.curUser.id, checked===true? 1:0);\r\n        if (this.userAppsList === undefined) return;\r\n        let userApps = this.userAppsList.find(v => v.user.id === this.curUser.id);\r\n        if (checked === true) {\r\n            this.curUserApps.push(app);\r\n            if (userApps) userApps.apps.push(app);\r\n        }\r\n        else {\r\n            let index = this.curUserApps.findIndex(v => v.id === app.id);\r\n            if (index>=0) this.curUserApps.splice(index, 1);\r\n            if (userApps) {\r\n                index = userApps.apps.findIndex(v => v.id === app.id);\r\n                if (index>=0) userApps.apps.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    addUser = async (userId: number) => {\r\n        await mainApi.unitAddUser(this.unit.id, userId);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page, appInFrame, Controller, \r\n    VPage, Image, Edit, ItemSchema, UiSchema, \r\n    StringSchema, ImageSchema, UiImageItem, UiTextItem} from 'tonva'; \r\nimport {List, LMR, FA} from 'tonva';\r\n//, StackedFA, PropGrid, Prop, Muted\r\n//import {StringValueEdit} from './tools';\r\nimport {Unit, UnitApps, UnitAdmin, DevModel} from './model';\r\nimport {store} from './store';\r\nimport Administors from './Administors';\r\nimport AppsPage from './Apps';\r\nimport {Members} from './Members';\r\nimport { mainApi } from 'api';\r\n//import { COrganization } from 'organization';\r\nimport {\r\n    ObjViewProps, ObjView,\r\n    //appsProps, \r\n    busesProps, \r\n    serversProps, /*uqdbsProps, servicesProps, */ UQController} from './Dev';\r\nimport { AppController } from './Dev';\r\nimport { UsersController } from 'Users';\r\n\r\nexport class CAdmin extends Controller {\r\n    isProduction: boolean;\r\n    adminUnits: UnitAdmin[]; // 仅仅为Admins调试用。从登录用户获取units\r\n\r\n    private async loadAdminUnits(): Promise<void> {        \r\n        let ret = await mainApi.userAdminUnits();\r\n        let adminUnits = this.adminUnits = ret[0];\r\n        console.log('loadAdminUnits', adminUnits);\r\n        if (adminUnits.length === 1) {\r\n            appInFrame.unit = adminUnits[0].id;\r\n            await store.loadUnit();\r\n        }\r\n    }\r\n    protected async internalStart(param?:any):Promise<void> {\r\n        store.init();\r\n        \r\n        this.isProduction = document.location.hash.startsWith('#tv');\r\n        console.log('admins isProduction %s', this.isProduction);\r\n\r\n        if (this.isProduction === false) {\r\n            await this.loadAdminUnits();\r\n            this.openVPage(VAdmin);\r\n            return;\r\n        }\r\n        await store.loadUnit();\r\n        this.openVPage(VAdmin);\r\n    /*\r\n        let user = nav.user;\r\n        if (user === undefined) {\r\n            console.log('autorun: user has logged out');\r\n            return;\r\n        }\r\n    \r\n        console.log('autorun login');\r\n        */\r\n       /*\r\n        setTimeout(async () => {\r\n            // 等待 tonva-tools 里面的initSubWin的nav.user的赋值\r\n            // 这个地方实际上有问题的，不应该这么写。程序逻辑顺序逻辑错误。\r\n            // 2018-11-5: 临时凑合用延时的方式来解决。\r\n            await store.loadUnit();\r\n            this.showVPage(VAdmin);\r\n        }, 200);\r\n        */\r\n    }\r\n}\r\n\r\nexport class VAdmin extends VPage<CAdmin> {\r\n    async open() {\r\n        let {isProduction, adminUnits} = this.controller;\r\n        if (isProduction === false) {\r\n            switch (adminUnits.length) {\r\n                default: this.openPage(this.selectUnitPage); return;\r\n                case 0: this.openPage(this.noUnitPage); return;\r\n                case 1: this.openPageElement(<AdminPage />); return;\r\n            }\r\n        }\r\n\r\n        if (store.unit === undefined) {\r\n            this.openPage(this.noUnitPage);\r\n            return;\r\n        }\r\n        this.openPageElement(<AdminPage />);\r\n    }\r\n\r\n    private selectUnitPage = () => {\r\n        return <Page header=\"选择小号\" logout={logout}>\r\n            <List items={this.controller.adminUnits} item={{render: this.renderRow, onClick: this.onRowClick}}/>\r\n        </Page>;\r\n    }\r\n\r\n    private noUnitPage = () => {\r\n        let {nick, name} = nav.user;\r\n        return <Page header=\"没有小号\" logout={logout}>\r\n            <div className=\"p-3 small text-info\">\r\n                {nick || name}: 没有需要管理的小号\r\n            </div>\r\n        </Page>\r\n    }\r\n\r\n    protected get view() {return undefined}\r\n\r\n    renderRow = (item: UnitAdmin, index: number):JSX.Element => {\r\n        return <LMR className=\"p-2\" right={'id: ' + item.id}>\r\n            <div>{item.nick || item.name}</div>\r\n        </LMR>;\r\n    }\r\n    onRowClick = async (item: UnitAdmin) => {\r\n        appInFrame.unit = item.id; // 25;\r\n        store.init();\r\n        await store.loadUnit();\r\n        this.closePage();\r\n        this.openPageElement(<AdminPage />);\r\n    }\r\n}\r\n\r\nconst logout = async () => {\r\n    store.logout();\r\n}\r\n\r\ninterface ActionItem {\r\n    main: string | JSX.Element;\r\n    right?: string | JSX.Element;\r\n    icon: string|JSX.Element;\r\n    page?: new (props:any) => React.Component;\r\n    //onClick: () => nav.push(<Administors />),\r\n    controller?: Controller;\r\n}\r\n\r\ninterface DevItem<T extends DevModel.ObjBase> {\r\n    title: string;\r\n    count: number;\r\n    icon: string;\r\n    objProps?: ObjViewProps<T>;\r\n    onClick?: ()=>void;\r\n}\r\n\r\ntype Item = ActionItem|DevItem<DevModel.ObjBase>|string;\r\n\r\nconst rArrow = <FA name=\"chevron-right\" />;\r\nconst typeCaptions = {\r\n    1: '开发号',\r\n    2: '小号',\r\n    3: '系统号'\r\n}\r\n@observer\r\ndefault class AdminPage extends React.Component {\r\n    private caption:string;\r\n\r\n    async componentWillMount() {\r\n        let {unit, dev} = store;\r\n        let {isAdmin, isOwner, type} = unit;\r\n        this.caption = typeCaptions[type];\r\n        if ((type & 1) !== 0) {\r\n            await store.dev.loadCounts();\r\n        }\r\n    }\r\n\r\n    private appsAction:ActionItem = {\r\n        main: '启停App',\r\n        right: rArrow, //'增减',\r\n        icon: 'play-circle-o',\r\n        page: AppsPage,\r\n    };\r\n    private usersAction:ActionItem = {\r\n        main: '用户角色',\r\n        right: rArrow,\r\n        icon: 'users',\r\n        page: Members,\r\n    };\r\n    private newUsersAction:ActionItem = {\r\n        main: '用户管理',\r\n        right: rArrow,\r\n        icon: 'user-o',\r\n        controller: new UsersController(undefined),\r\n    };\r\n    /*\r\n    private devAction:Item = {\r\n        main: <DevActions />,\r\n        right: '程序开发相关管理',\r\n        icon: 'laptop',\r\n        //page: Dev,\r\n    };*/\r\n    private adminsAction:ActionItem = {\r\n        main: '管理员',\r\n        right: rArrow,\r\n        icon: 'universal-access',\r\n        page: Administors,\r\n    };\r\n\r\n    /*\r\n    private cOrganization = new COrganization;\r\n    private organizeAction:ActionItem = {\r\n        main: this.cOrganization.label,\r\n        right: rArrow,\r\n        icon: this.cOrganization.icon,\r\n        controller: this.cOrganization\r\n    };\r\n    */\r\n\r\n    private noneAction:ActionItem = {\r\n        main: '请耐心等待分配任务',\r\n        icon: 'hourglass-start',\r\n    };\r\n\r\n    private buildItems():Item[] {\r\n        let {unit, dev} = store;\r\n        let {isAdmin, isOwner, type} = unit;\r\n        let items:Item[] = [];\r\n        if (isOwner === 1) {\r\n            items.push(this.adminsAction);\r\n        }\r\n        console.log('unit:', unit);\r\n        if (isAdmin === 1) {\r\n            if ((type & 2) !== 0) {\r\n                // unit\r\n                items.push(\r\n                    '小号管理',\r\n                    this.appsAction, \r\n                    //this.usersAction, \r\n                    this.newUsersAction, \r\n                    //this.organizeAction\r\n                );\r\n            }\r\n            if ((type & 1) !== 0) {\r\n                // dev unit\r\n                let {counts} = dev;\r\n\r\n                let appAction:DevItem<DevModel.ObjBase> = {\r\n                    title: 'APP', \r\n                    count: counts && counts.app, \r\n                    icon: 'tablet', \r\n                    onClick: () => new AppController(undefined).start(unit.id),\r\n                };\r\n                let uqAction:DevItem<DevModel.ObjBase> = {\r\n                    title: 'UQ', \r\n                    count: counts && counts.uq, \r\n                    icon: 'database', \r\n                    onClick: () => new UQController(undefined).start(unit.id),\r\n                };\r\n                let busAction:DevItem<DevModel.ObjBase> = {\r\n                    title: 'BUS', \r\n                    count: counts && counts.bus, \r\n                    icon: 'cogs', \r\n                    objProps: busesProps,\r\n                };\r\n                let serverAction:DevItem<DevModel.ObjBase> = {\r\n                    title: 'Server', \r\n                    count: counts && counts.server, \r\n                    icon: 'server', \r\n                    objProps: serversProps,\r\n                };\r\n                items.push('开发号管理')\r\n                if (isOwner>0) items.push(appAction);\r\n                items.push(uqAction, busAction);\r\n                if (isOwner>0) items.push(serverAction);\r\n            }\r\n        }\r\n        return items;\r\n    }\r\n    private row = (item:Item, index:number):JSX.Element => {\r\n        if (typeof item === 'string') {\r\n            return <div className=\"px-3 pt-3 pb-1 small text-muted\" style={{backgroundColor:'#f0f0f0'}}>{item}</div>;\r\n        }\r\n        let {title} = item as DevItem<DevModel.ObjBase>;\r\n        let left:any, mid:any, r:any;\r\n        if (title !== undefined) {\r\n            let {icon, count} = item as DevItem<DevModel.ObjBase>;\r\n            left = <FA className=\"text-primary\" name={icon} fixWidth={true} size=\"lg\" />;\r\n            mid = title;\r\n            r = count>0 && <span>{count}</span>;\r\n        }\r\n        else {\r\n            let {right, main, icon} = item as ActionItem;\r\n            left = typeof icon === 'string'? \r\n                <FA className=\"text-primary\" name={icon} fixWidth={true} size=\"lg\" /> :\r\n                item.icon;\r\n            mid = main;\r\n            r = <span>{right}</span>;\r\n        }\r\n        return <LMR className=\"px-3 py-2 align-items-center\" left={left} right={r}>\r\n            <div className=\"px-3\"><b>{mid}</b></div>\r\n        </LMR>;\r\n    }\r\n    private rowClick = async (item:Item) => {\r\n        let {title} = item as DevItem<DevModel.ObjBase>;\r\n        if (title !== undefined) {\r\n            let {objProps, onClick} = item as DevItem<DevModel.ObjBase>;\r\n            if (objProps !== undefined)\r\n                return nav.push(<ObjView {...objProps} />);\r\n            else {\r\n                onClick();\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            let {page:P, controller} = item as ActionItem;\r\n            if (P !== undefined)\r\n                nav.push(<P />);\r\n            else {\r\n                await controller.start(store.unit);\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        let unit:Unit = store.unit;\r\n        if (unit === undefined) {\r\n            console.log(\"admin render without unit\");\r\n            return null;\r\n        }\r\n        console.log(\"admin render with unit\");\r\n        let items = this.buildItems();\r\n        if (items === undefined) {\r\n            return <Page header=\"\" />;\r\n        }\r\n        let header:any, top:any;\r\n        if (unit !== undefined) {\r\n            let {name, nick, icon, discription} = unit;\r\n            let title:string, vice:any;\r\n            if (nick) {\r\n                title = nick;\r\n                vice = <h6><small className='text-secondary'>{name}</small></h6>;\r\n            }\r\n            else {\r\n                title = name;\r\n            }\r\n            if (this.caption !== undefined) header = this.caption + ' - ' + title;\r\n            top = <LMR className='px-3 my-4 bg-white py-2 cursor-pointer' onClick={()=>nav.push(<UnitProps />)}\r\n                left={<div><Image className=\"w-3c h-3c\" src={icon} /></div>}>\r\n                <div className=\"px-3\">\r\n                    <LMR right={vice}><h6 className='text-dark font-weight-bold'>{title}</h6></LMR>\r\n                    <div className='small text-info'>{discription}</div>\r\n                </div>\r\n            </LMR>;\r\n        }\r\n        else {\r\n            header = '系统管理';\r\n        }\r\n        return <Page header={header} logout={logout}>\r\n            {top}\r\n            <List items={items} item={{render:this.row, onClick:this.rowClick}} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass UnitProps extends React.Component {\r\n    /*\r\n    private rows:Prop[] = [\r\n        '',\r\n        {label: '标志图', type: 'string', name: 'icon'},\r\n        '=',\r\n        {label: '唯一号', type: 'string', name: 'name'},\r\n        {\r\n            label: '名称', \r\n            type: 'string',\r\n            name: 'nick', \r\n            onClick:()=>nav.push(<StringValueEdit \r\n                title=\"修改名称\"\r\n                value={store.unit.nick}\r\n                onChanged={this.onNickChanged} \r\n                info=\"好的名字会提升接受度\" />)\r\n        },\r\n        {\r\n            label: '说明',\r\n            type: 'string',\r\n            name: 'discription',\r\n            onClick:()=>nav.push(<StringValueEdit \r\n                title=\"修改说明\"\r\n                value={store.unit.discription}\r\n                onChanged={this.onDiscriptionChanged} \r\n                info=\"对小号做一个说明\" />)\r\n        },\r\n    ];\r\n    */\r\n    private schema:ItemSchema[] =[\r\n        {name: 'icon', type: 'image'} as ImageSchema,\r\n        {name: 'nick', type: 'string'} as StringSchema,\r\n        {name: 'discription', type: 'string'} as StringSchema,\r\n    ];\r\n    private uiSchema:UiSchema = {\r\n        items: {\r\n            nick: {widget:'text', label:'别名', placeholder:'好的别名更方便记忆'} as UiTextItem,\r\n            icon: {widget:'image', label:'标志图'} as UiImageItem,\r\n            discription: {widget:'text', label:'描述', placeholder:'简短清晰的描述'} as UiTextItem,\r\n        }\r\n    }\r\n    /*\r\n    async onNickChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.unitChangeProp('nick', value);\r\n    }\r\n    async onDiscriptionChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.unitChangeProp('discription', value);\r\n    }\r\n    */\r\n    private onItemChanged = async (itemSchema:ItemSchema, newValue:any, preValue:any) => {\r\n        let {name} = itemSchema;\r\n        //await userApi.userSetProp(name, newValue);\r\n        await store.unitChangeProp(name, newValue);\r\n        //this.data[name] = newValue;\r\n        //nav.user[name] = newValue;\r\n        //nav.saveLocalUser();\r\n    }\r\n    //<PropGrid rows={this.rows} values={store.unit} alignValue=\"right\" />\r\n    render() {\r\n        let unit:Unit = store.unit;\r\n        let {isRoot, isOwner} = unit;\r\n        return <Page header=\"小号信息\">\r\n            <Edit schema={this.schema} uiSchema={this.uiSchema}\r\n                data={store.unit}\r\n                onItemChanged={this.onItemChanged}\r\n                stopEdit={!(isRoot>0 && isOwner>0)} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { nav, NavView } from 'tonva';\r\nimport { CAdmin } from './Admin';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n    async onLogined() {\r\n        let loc = document.location;\r\n        nav.clear();\r\n        //nav.push(<StartPage />);\r\n        let cAdmin = new CAdmin({});\r\n        await cAdmin.start();\r\n    }\r\n    render() {\r\n        return (\r\n            <NavView onLogined={this.onLogined} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n"],"sourceRoot":""}