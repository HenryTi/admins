{"version":3,"sources":["tonva-tools/index.ts","tonva-react-form/index.ts","tonva-react-uq/controllers/CVEntity.tsx","tonva-tools/ui/nav.tsx","tonva-react-uq/controllers/form/viewModel.tsx","tonva-tools/net/guestApi.ts","tonva-tools/net/index.ts","tonva-react-uq/tools/jsonStringify.ts","tonva-react-uq/tools/tv.tsx","tonva-react-uq/tools/index.ts","tonva-tools/net/appBridge.ts","tonva-tools/ui/index.ts","tonva-tools/ui/page.tsx","tonva-tools/net/httpChannelUI.ts","tonva-tools/net/uqApi.ts","tonva-react-uq/controllers/link/cLink.tsx","tonva-react-uq/controllers/link/index.ts","tonva-tools/net/wsChannel.ts","tonva-react-form/uid.ts","tonva-tools/ui/image.tsx","tonva-tools/net/host.ts","tonva-tools/user.ts","tonva-tools/ui/edit/itemEdit.tsx","tonva-tools/uid.ts","tonva-react-uq/controllers/tuid/vTuidMain.tsx","tonva-react-uq/controllers/tuid/vTuidEdit.tsx","tonva-react-uq/controllers/tuid/vTuidSelect.tsx","tonva-react-uq/controllers/tuid/vTuidView.tsx","tonva-react-uq/controllers/tuid/vTuidInfo.tsx","tonva-react-uq/controllers/tuid/pageItems.ts","tonva-react-uq/controllers/tuid/vTuidList.tsx","tonva-react-uq/controllers/tuid/cTuid.ts","tonva-react-uq/controllers/tuid/index.tsx","tonva-react-uq/controllers/form/vBand.tsx","tonva-react-uq/controllers/form/vSubmit.tsx","tonva-react-uq/controllers/form/rule.ts","tonva-react-uq/controllers/form/vField/vField.tsx","tonva-react-uq/controllers/form/vField/vComputeField.tsx","tonva-react-uq/controllers/form/vArr.tsx","tonva-react-uq/controllers/form/vField/vTuidField.tsx","tonva-react-uq/controllers/form/bandsBuilder.ts","tonva-react-uq/controllers/form/vField/buildVmField.ts","tonva-react-uq/controllers/form/vForm.tsx","tonva-react-uq/controllers/form/index.ts","tonva-tools/net/httpChannel.ts","tonva-tools/ui/res.ts","tonva-react-uq/controllers/index.ts","tonva-react-form/form/control/control.tsx","tonva-react-form/form/control/buttonsControl.tsx","tonva-react-form/form/control/charsControl.tsx","tonva-react-form/form/control/stringControl.tsx","tonva-react-form/form/control/numberControl.tsx","tonva-react-form/form/control/unknownControl.tsx","tonva-react-form/form/control/pickIdControl.tsx","tonva-react-form/form/control/pickTuidControl.tsx","tonva-react-form/form/control/pickControl.tsx","tonva-react-form/form/control/index.ts","tonva-react-form/form/control/checkControl.tsx","tonva-react-form/form/control/radioControl.tsx","tonva-react-form/form/control/selectControl.tsx","tonva-react-form/form/control/textAreaControl.tsx","tonva-react-uq/entities/entity.ts","tonva-react-uq/entities/tuid.ts","tonva-react-uq/entities/action.ts","tonva-react-uq/entities/sheet.ts","tonva-react-uq/entities/query.ts","tonva-react-uq/entities/book.ts","tonva-react-uq/entities/history.ts","tonva-react-uq/entities/map.ts","tonva-react-uq/entities/pending.ts","tonva-react-uq/entities/entities.ts","tonva-react-uq/entities/index.ts","tonva-react-form/form/rowContainer/index.tsx","tonva-tools/net/apiBase.ts","tonva-tools/ui/pageHeader.tsx","tonva-react-uq/controllers/query/defaultRow.tsx","tonva-react-uq/controllers/query/vQueryMain.tsx","tonva-react-uq/controllers/query/vQuerySelect.tsx","tonva-react-uq/controllers/query/cQuery.ts","tonva-react-uq/controllers/query/index.ts","tonva-tools/ui/edit/imageItemEdit.tsx","tonva-tools/ui/loading.tsx","tonva-tools/ui/resUploader.tsx","tonva-react-form/form/index.ts","tonva-react-form/form/formView.tsx","tonva-react-uq/controllers/CApp.tsx","tonva-react-uq/controllers/icons.tsx","tonva-react-uq/controllers/ControllerUq.ts","tonva-react-uq/centerApi.ts","tonva-react-uq/controllers/sheet/vMain.tsx","tonva-react-uq/controllers/sheet/vNew.tsx","tonva-react-uq/controllers/sheet/vSheetView.tsx","tonva-react-uq/controllers/sheet/vEdit.tsx","tonva-react-uq/controllers/sheet/vSheetAction.tsx","tonva-react-uq/controllers/sheet/vSchema.tsx","tonva-react-uq/controllers/sheet/vArchives.tsx","tonva-react-uq/controllers/sheet/vList.tsx","tonva-react-uq/controllers/sheet/vArchived.tsx","tonva-react-uq/controllers/sheet/vSheet.tsx","tonva-react-uq/controllers/sheet/vSaved.tsx","tonva-react-uq/controllers/sheet/vSheetProcessing.tsx","tonva-react-uq/controllers/sheet/cSheet.ts","tonva-react-uq/controllers/sheet/index.ts","tonva-react-uq/controllers/book/vBookMain.tsx","tonva-react-uq/controllers/book/cBook.ts","tonva-react-uq/controllers/uq/vUq.tsx","tonva-react-uq/controllers/uq/cUq.tsx","tonva-react-uq/controllers/uq/index.ts","tonva-react-uq/controllers/map/vMain.tsx","tonva-react-uq/controllers/map/inputValues.tsx","tonva-react-uq/controllers/map/cMap.ts","tonva-react-uq/controllers/map/index.ts","tonva-react-uq/controllers/action/vActionMain.tsx","tonva-react-uq/controllers/action/cAction.ts","tonva-react-uq/controllers/action/index.ts","tonva-react-uq/controllers/history/vHistoryMain.tsx","tonva-react-uq/controllers/history/cHistory.ts","tonva-react-uq/controllers/history/index.ts","tonva-react-uq/controllers/pending/vPendingMain.tsx","tonva-react-uq/controllers/pending/cPending.ts","tonva-react-uq/controllers/pending/index.ts","tonva-tools/net/netToken.ts","tonva-tools/entry/userApi.ts","tonva-tools/left0.ts","tonva-tools/ui/VM.tsx","tonva-tools/ui/schema/index.ts","tonva-tools/ui/rules/index.ts","tonva-tools/pageItems.ts","tonva-tools/cacheIds.ts","tonva-react-form/form/TonvaForm.tsx","tonva-react-form/dropDownActions/index.tsx","tonva-react-form/easyDate/index.tsx","tonva-react-form/media.tsx","tonva-react-form/searchBox.tsx","tonva-react-form/multiStep/index.tsx","tonva-tools/ui/form/rules/index.ts","tonva-tools/ui/form/widgets/widget.tsx","tonva-tools/ui/form/widgets/textWidget.tsx","tonva-tools/ui/form/widgets/numberWidget.tsx","tonva-tools/ui/form/widgets/updownWidget.tsx","tonva-tools/ui/form/widgets/dateWidget.tsx","tonva-tools/ui/form/widgets/checkBoxWidget.tsx","tonva-tools/ui/form/widgets/selectWidget.tsx","tonva-tools/ui/form/widgets/idWidget.tsx","tonva-tools/ui/form/widgets/unknown.tsx","tonva-tools/ui/form/widgets/buttonWidget.tsx","tonva-tools/ui/form/context.tsx","tonva-tools/ui/form/widgets/arrComponent.tsx","tonva-tools/ui/form/widgets/imageWidget.tsx","tonva-tools/ui/form/widgets/factory.tsx","tonva-tools/ui/form/widgets/textareaWidget.tsx","tonva-tools/ui/form/widgets/passwordWidget.tsx","tonva-tools/ui/form/widgets/radioWidget.tsx","tonva-tools/ui/form/widgets/rangeWidget.tsx","tonva-tools/ui/form/formRes.ts","tonva-tools/ui/form/form.tsx","tonva-tools/ui/form/field.tsx","tonva-tools/ui/form/index.ts","tonva-react-form/components/Badge.tsx","tonva-react-form/components/LMR.tsx","tonva-react-form/components/FA.tsx","tonva-react-form/components/Muted.tsx","tonva-react-form/components/index.ts","tonva-react-form/list/base.tsx","tonva-react-form/list/clickable.tsx","tonva-react-form/list/static.tsx","tonva-react-form/list/selectable.tsx","tonva-react-form/list/index.tsx","tonva-tools/ui/edit/stringItemEdit.tsx","tonva-tools/ui/edit/radioItemEdit.tsx","tonva-tools/ui/edit/selectItemEdit.tsx","tonva-tools/ui/edit/edit.tsx","tonva-tools/ui/edit/index.tsx","tonva-react-form/propGrid/row.tsx","tonva-react-form/propGrid/propView.tsx","tonva-react-form/propGrid/PropGrid.tsx","tonva-react-form/propGrid/index.tsx","tonva-react-form/listView/listRow.tsx","tonva-react-form/listView/listView.tsx","tonva-tools/ui/tabs/tabs.tsx","tonva-tools/entry/meInfo.tsx","tonva-tools/ui/fetchErrorView.tsx","tonva-tools/local.ts","tonva-tools/img/logo.svg","api/mainApi.ts","api/devApi.ts","store/admins.ts","store/dev.ts","store/cacheIds.ts","store/index.ts","Administors/NewFellow.tsx","Administors/EditAdmin.tsx","Administors/index.tsx","tools/idDates.tsx","tools/span.tsx","tools/unitSpan.tsx","consts.ts","tools/uqSpan.tsx","tools/appSpan.tsx","tools/serverSpan.tsx","tools/stringValueEdit.tsx","tools/idPickPage.tsx","Apps/info.tsx","Apps/new.tsx","Apps/index.tsx","Members/newRole.tsx","Members/roleApps.tsx","Members/memberPage.tsx","Members/membersPage.tsx","Members/rolePage.tsx","Members/index.tsx","organization/ui/map/teamPerson/index.tsx","organization/ui/index.ts","organization/ui/map/index.ts","organization/ui/tuid/index.ts","organization/ui/tuid/user.tsx","organization/ui/tuid/organization.tsx","organization/ui/query/index.ts","organization/ui/query/teamPosts.tsx","organization/ui/res/index.ts","organization/ui/res/zh/CN.tsx","organization/op/vOpBinding.tsx","organization/op/vAllPosts.tsx","organization/op/vFullFunction.tsx","organization/op/vSearchUser.tsx","organization/op/cOpBinding.tsx","organization/organization.tsx","Dev/apps/editPage.tsx","Dev/apps/appsPage.tsx","Dev/apps/appUqs.tsx","Dev/apps/appPage.tsx","Dev/apps/uqBindPage.tsx","Dev/apps/index.tsx","Dev/uqs/uqUpload.tsx","createIdPick.tsx","Dev/uqs/newServicePage.tsx","Dev/uqs/servicePage.tsx","Dev/uqs/editPage.tsx","Dev/uqs/uqPage.tsx","Dev/uqs/listPage.tsx","Dev/uqs/index.tsx","Dev/row.tsx","Dev/buses.tsx","Dev/servers.tsx","Dev/services.tsx","Dev/ObjView.tsx","Users/vApps.tsx","Users/vUsers.tsx","Users/vApp.tsx","Users/vUser.tsx","Users/vAppEditUsers.tsx","Users/vUserEditApps.tsx","Users/VAddUser.tsx","Users/cUsers.tsx","Admin.tsx","App.tsx","registerServiceWorker.ts","index.tsx"],"names":["_left0__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d","__webpack_exports__","_net__WEBPACK_IMPORTED_MODULE_2__","_ui__WEBPACK_IMPORTED_MODULE_3__","o","_pageItems__WEBPACK_IMPORTED_MODULE_5__","_cacheIds__WEBPACK_IMPORTED_MODULE_6__","_form__WEBPACK_IMPORTED_MODULE_0__","_list__WEBPACK_IMPORTED_MODULE_1__","_dropDownActions__WEBPACK_IMPORTED_MODULE_2__","_easyDate__WEBPACK_IMPORTED_MODULE_3__","_propGrid__WEBPACK_IMPORTED_MODULE_4__","_components__WEBPACK_IMPORTED_MODULE_5__","_media__WEBPACK_IMPORTED_MODULE_6__","_searchBox__WEBPACK_IMPORTED_MODULE_8__","_multiStep__WEBPACK_IMPORTED_MODULE_9__","CEntity","_ControllerUq__WEBPACK_IMPORTED_MODULE_3__","[object Object]","cUq","entity","ui","res","super","Object","setPrototypeOf","this","x","name","typeName","label","icon","_icons__WEBPACK_IMPORTED_MODULE_2__","loadSchema","onSubmit","values","mode","options","buildFormOptions","ret","_form__WEBPACK_IMPORTED_MODULE_1__","setValues","none","submitCaption","arrNewCaption","arrEditCaption","arrTitleNewButton","fields","arrFields","undefined","new","formUI","form","arrs","inputs","buildInputs","buildFieldsInputs","arr","items","arrFieldInputs","field","_tuid","fieldUI","select","buildSelect","content","buildContent","placeHolder","getTuidPlaceHolder","__awaiter","_ownerField","cTuidSelect","cSelectFrom","param","getValue","autoList","console","log","call","removeCeased","id","idFromItem","useId","queryName","cQuerySelect","VEntity","tonva_tools__WEBPACK_IMPORTED_MODULE_0__","controller","createForm","mobileHeaderStyle","RegExp","test","navigator","userAgent","minHeight","logMark","logs","stackKey","NavView","react__WEBPACK_IMPORTED_MODULE_0__","props","waitCount","isHistoryBack","clearError","setState","fetchError","back","bind","navBack","stack","state","wait","window","addEventListener","nav","set","start","level","length","waitTimeHandler","global","setTimeout","clearTimeout","err","error","unauthorized","showLogin","view","disposer","clear","push","history","pushState","key","ceased","refresh","item","pop","dispose","p","i","len","backLevel","popAndDispose","find","v","confirmClose","confirm","self","top","postMessage","type","message","elWait","elError","className","_loading__WEBPACK_IMPORTED_MODULE_10__","_fetchErrorView__WEBPACK_IMPORTED_MODULE_4__","assign","map","index","style","visibility","Nav","local","_local__WEBPACK_IMPORTED_MODULE_6__","user","lang","district","_res__WEBPACK_IMPORTED_MODULE_9__","language","culture","guest","g","get","handler","ws","onWsReceiveAny","handlerId","endWsReceive","msg","receive","unitRes","fetch","json","unit","unitName","envUnit","NODE_ENV","PUBLIC_URL","REACT_APP_CENTER_HOST","REACT_APP_UNIT","Number","_net__WEBPACK_IMPORTED_MODULE_7__","getPredefinedUnitName","unitId","unitFromName","settings","navSettings","hash","document","location","pos","_net_appBridge__WEBPACK_IMPORTED_MODULE_5__","hashParam","substring","startWait","url","resHost","centerHost","resUrl","wsHost","setGuest","exHash","appInFrame","parent","_net_wsChannel__WEBPACK_IMPORTED_MODULE_8__","predefinedUnit","loadPredefinedUnit","notLogined","logined","endWait","onLogined","_net_netToken__WEBPACK_IMPORTED_MODULE_3__","token","callback","connect","JSON","stringify","saveLocalUser","showAppView","defaultTop","loginTop","withBack","lv","e","then","loginView","default","_page__WEBPACK_IMPORTED_MODULE_2__","header","onClick","logout","logoutClear","cp","ChangePasswordPage","onError","show","replace","topKey","popTo","ceaseTop","regConfirmClose","confirmBox","apiId","sheetType","sheetId","Promise","resolve","reject","sheet","includes","uh","src","open","date","Date","getTime","toTimeString","step","__decorate","mobx__WEBPACK_IMPORTED_MODULE_1__","ViewModel","PureJSONContent","JSONContent","RowContent","mobx_react__WEBPACK_IMPORTED_MODULE_1__","_tools__WEBPACK_IMPORTED_MODULE_2__","vm","guestApi","uqApi","wsChannel","apiBase","appBridge","host","replacer","value","substr","jsonStringify","Tv","index_module","tuidValue","nullUI","react","ttv","divObj","bi","_$tuid","_$com","t","controllers","com","getTuidContent","val","valueFromId","tonva_react_form","boxIdContent","tv","uqTokens","logoutUqTokens","appsInFrame","_unit","isBridged","setAppInFrame","appHash","parts","split","page","slice","getExHashPos","lastIndexOf","getExHash","appUrl","u","_uid__WEBPACK_IMPORTED_MODULE_2__","evt","data","subWin","source","_wsChannel__WEBPACK_IMPORTED_MODULE_4__","el","getElementById","hidden","hideFrameBack","lodash__WEBPACK_IMPORTED_MODULE_0___default","a","clone","_ui__WEBPACK_IMPORTED_MODULE_1__","subFrameStarted","onReceive","_uqApi__WEBPACK_IMPORTED_MODULE_3__","initSubWin","from","callId","method","body","result","directCall","callCenterApiFromMessage","bca","brideCenterApis","bridgeCenterApiReturn","apiName","urlDebug","uqOwner","uqName","uq","onReceiveAppApiMessage","action","uqTokenActions","realUrl","_host__WEBPACK_IMPORTED_MODULE_5__","getUrlOrDebug","onAppApiReturn","buildAppUq","realUnit","getUnit","uqToken","at","opener","appUq","bridgeCenterApi","_nav__WEBPACK_IMPORTED_MODULE_0__","_VM__WEBPACK_IMPORTED_MODULE_3__","_schema__WEBPACK_IMPORTED_MODULE_4__","_form__WEBPACK_IMPORTED_MODULE_5__","_edit__WEBPACK_IMPORTED_MODULE_6__","_res__WEBPACK_IMPORTED_MODULE_7__","_image__WEBPACK_IMPORTED_MODULE_10__","_rules__WEBPACK_IMPORTED_MODULE_12__","scrollTimeGap","ScrollView","bottomTime","topTime","onScroll","onScrollTop","onScrollBottom","target","scrollTop","offsetHeight","scrollHeight","c","direct","children","forEach","child","_$scroll","toString","eachChild","Page","cur","tabs","tabStates","tab","lodash__WEBPACK_IMPORTED_MODULE_3___default","isSelected","isMounted","t0","onTabClick","load","footer","right","keepHeader","headerClassName","title","redDot","img","redDotView","cn","classnames__WEBPACK_IMPORTED_MODULE_2___default","pageHeader","_pageHeader__WEBPACK_IMPORTED_MODULE_4__","center","sideBar","invisible","onTouchStart","elFooter","renderTabs","renderSingle","httpChannelUI_HttpChannelNavUI","channelUIs","channelNoUIs","logoutApis","uqApi_channels","uqLocalEntities","localUqs","ls","localStorage","getItem","parse","uqs","loginedUserId","isNet","un","__loadAccess","saveLocal","lodash_default","cloneDeep","removeItem","accessValue","str","setItem","isMatch","uqApi_UqApi","basePath","access","showWaiting","channels","channelUI","channel","httpChannel","acc","join","loadAccess","checkAccess","names","post","params","owner","pageStart","pageSize","order","$order","ids","proxy","put","uqApi_UnitxApi","buildChannel","centerAppApi","uqApi_CenterAppApi","unitxUq","setCenterUrl","centerToken","centerChannel","centerChannelUI","setCenterToken","userId","uqApi_CenterApi","path","uqTokenApi","unitParam","nowTick","tick","callCenterapi","appUqs","appOwner","appName","rLs","rAppOwner","rAppName","uqsPure","obj","cachedUqs","cachedId","retId","retUqs","loadAppUqs","checkUqs","Link","cLink_CLink","classnames_default","subAppWindow","setSubAppWindow","win","postWsToTop","WsBase","handlerSeed","anyHandlers","msgHandlers","seed","$type","wsBaseSeed","wsBridge","wsBaseId","WSChannel","that","WebSocket","onopen","ev","onerror","onmessage","wsMessage","onclose","close","event","postWsToSubApp","netThis","send","uid","ALPHABET","ID_LENGTH","rtn","charAt","Math","floor","random","Image","classnames__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_1___default","n","_nav__WEBPACK_IMPORTED_MODULE_2__","altImage","startsWith","currentTarget","isDevelopment","hosts","centerhost","reshost","uqhost","unitxhost","uq-build","fetchOptions","headers","Content-Type","tryLocal","getCenterHost","endsWith","centerUrlFromHost","centerWsFromHost","getResHost","promises","hostArr","hostValue","findIndex","fetchUrl","debugHostUrl","localCheck","results","all","j","hostString","indexOf","timeout","text","catch","Error","fetchLocalCheck","decodeUserToken","decodeGuestToken","jwt_decode__WEBPACK_IMPORTED_MODULE_0__","jwt_decode__WEBPACK_IMPORTED_MODULE_0___default","ItemEdit","itemSchema","uiItem","isChanged","internalStart","internalEnd","rules","nv","newValue","verifyRule","rule","Array","isArray","vTuidMain_VTuidMain","CVEntity","onNew","onList","onSearch","openPage","link","render","newButton","proxyLinks","isFrom","size","placeholder","entityRender","entityClick","tonva_tools","vTuidEdit_VTuidEdit","next","vTuidEdit_awaiter","vForm","reset","closePage","finish","getValues","save","unique","setError","isCalling","returnCall","openPageElement","editView","vTuidSelect_VTuidSelect","mainView","react_default","createElement","initKey","onSearchMain","PageItems","renderMainRow","clickMainRow","before","vTuidSelect_awaiter","searchMain","mainRowContent","ceasePage","showDiv","getIdFromObj","divView","renderDivRow","clickDivRow","divRowContent","showMain","rowContent","viewModel","ownerValue","divs","divItems","getDivItems","vTuidView_VTuidView","vTuidView_awaiter","alert","tools","buildForm","vTuidInfo_VTuidInfo","pageItems_TuidPageItems","tuid","search","vTuidList_VTuidMainListBase","vTuidList_awaiter","renderRow","clickRow","callOnSelected","rowKey","ownerTop","ownerObj","ownerId","onSelected","VTuidMainList","cTuid_CTuid","buildPageItems","first","searchArr","cTuid_CTuidBase","proxies","linkFromName","cFrom","cUqFrom","cTuidEditFromName","cTuidInfoFromName","cTuidSelectFromName","VTuidMain","VTuidEdit","VTuidList","schemaFrom","openVPage","onEdit","itemChanged","cTuidInfo","cTuid_CTuidInfo","cTuidEdit","CTuidEdit","edit","cTuidList","CTuidList","merge","CTuidMain","cTuid_CTuidSelect","VTuidSelect","VTuidInfo","vBand_VBand","renderContent","addRow","VFieldBand","vField","vBand_VArrBand","vArr","setAddRow","vBand_VSubmitBand","vSubmit","vSubmit_VSubmit","onClickSubmit","submit","isOk","disabled","caption","mobx_module","Rule","RuleRequired","defy","trim","NaN","RuleNum","RuleInt","isNaN","isInteger","RuleMin","min","check","RuleMax","max","vField_VField","fieldRes","init","buildRules","required","null","checkRules","r","errors","readonly","FormMode","editable","vField_decorate","vField_VInputControl","renderError","ref","input","setInputValue","onFocus","onBlur","computeFields","onChange","setValue","inputGroup","suffix","ctrlCN","inputType","readOnly","maxLength","onKeyPress","RedMark","color","position","left","VStringField","KeyCode_Neg","KeyCode_Dot","vField_VNumberControl","ch","charCode","extraChars","onKeyDot","onKeyNeg","preventDefault","_a","vField_VIntField","VDecField","VTextField","VDateTimeField","VDateField","vComputeField_VComputeField","vArr_VArr","ownerForm","onEditRow","rowPage","vArr_awaiter","valueBoxs","onRowChanged","rowValues","$owner","list","renderItem","showRow","editRow","editSubmitCaption","internalAddRow","newSubmitCaption","button","paddingTop","paddingBottom","arrsRes","arrRes","newSubmit","editSubmit","arrUI","vForm_VForm","buttonStyle","textAlign","paddingLeft","paddingRight","overflow","vTuidField_VTuidField","vTuidField_awaiter","showInfo","boxId","idBox","bandsBuilder_BandsBuilder","layout","formItems","bandsOnFly","bandsFromLayout","bands","bandsFromFields","bandFromArr","bandFromField","formItem","rfn","resFromName","buildVField","vFields","vArrs","onFormSubmit","buildFormValues","buildBands","bandColl","bandsBuilder","build","band","getVFields","f","getVArr","getVSubmit","rows","row","fn","initValues","arrList","ctrl","fieldName","valueFromFieldName","propName","buildFieldValues","array","deep","buildObservableValues","vForm_decorate","HttpChannel","isCenter","hostUrl","apiToken","showError","_host__WEBPACK_IMPORTED_MODULE_2__","keys","k","buildOptions","innerFetch","buildError","timeOutHandler","encodeURI","ok","statusText","ct","retJson","toLowerCase","_ui_nav__WEBPACK_IMPORTED_MODULE_1__","_appBridge__WEBPACK_IMPORTED_MODULE_0__","Headers","append","resOptions","resLang","lodash__WEBPACK_IMPORTED_MODULE_0__","_","l","languages","setResOptions","_CApp__WEBPACK_IMPORTED_MODULE_0__","_uq__WEBPACK_IMPORTED_MODULE_2__","_tuid__WEBPACK_IMPORTED_MODULE_4__","_query__WEBPACK_IMPORTED_MODULE_6__","_map__WEBPACK_IMPORTED_MODULE_7__","_form_viewModel__WEBPACK_IMPORTED_MODULE_10__","_formUI__WEBPACK_IMPORTED_MODULE_12__","_ControllerUq__WEBPACK_IMPORTED_MODULE_13__","_link__WEBPACK_IMPORTED_MODULE_15__","_icons__WEBPACK_IMPORTED_MODULE_16__","control_ControlBase","formView","renderControl","hasError","filled","validate","control_Control","face","setProps","element","defaultValue","clearErrors","clearValue","isOK","getValueFromElement","notes","buttonsControl_ButtonsControl","otherClick","onOther","readValues","nothing","btnOther","submitButton","otherButton","TxtRequired","charsControl_CharsControl","parseValue","lodash","classnames","form-control","has-success","is-invalid","is-valid","renderInput","stringControl_StringControl","ErrInvalidNumber","ErrMin","ErrMax","unknownControl_UnknownControl","role","unknownControl_EmptyControl","pickIdControl_PickIdControl","pick","fromPicked","onPicked","itemFromId","initCaption","String","controlContent","component","pickIdControl_decorate","pickTuidControl_PickTuidControl","onIdChanged","onFormValues","pickTuidControl_decorate","pickControl_PickControl","pickControl_awaiter","Content","pickControl_decorate","createControl","group","groupRow","createGroupControl","fieldRow","fieldType","defaultFaces","controls","createFieldControl","help","string","password","number","parseFloat","checkbox","trueValue","falseValue","checked","radiobox","selectedIndex","selectedOptions","pick-id","pick-tuid","textarea","int","dec","bool","ln","Entity","entities","typeId","fieldMaps","sys","sName","jName","tvApi","returns","schema","setSchema","buildFieldsTuid","buildFieldTuid","buildArrFieldsTuid","getTuid","arrName","fieldArr","an","buildFieldsParams","arrResult","pa","rowResult","packRow","packArr","charCodeAt","escape","unpackRow","unpackArr","ch0","fLen","to","vals","maxCacheSize","tuid_Tuid","queue","waitingIds","cache","BoxId","prototype","defineProperty","writable","enumerable","getObj","getCacheValue","toJSON","buildIdBoxer","idName","mainFields","mf","splice","_id","delete","defer","util","has","cacheTuids","moveToHead","shift","proxied","cacheValue","unpackTuidIds","api","getApiFrom","tuids","tuidIds","cacheTuidFieldValues","afterCacheId","cacheDivIds","tuidGet","divName","cacheFieldsInValue","arrValues","tuidDiv","getDiv","tuidSave","tuidSearch","tuidArrGet","tuidArrSave","tuidArrPos","showTuid","TuidMain","Main","TuidDiv","cacheIds","cApp","cUqFrm","getImportUq","cTuidMainFromName","action_Action","pack","sheet_Sheet","states","op","ops","actions","discription","appId","sheetSave","app","flow","sheetAction","brief","unpackSheet","flows","getSheet","getArchive","unpack","sheetArchive","sheetArchives","stateSheets","sheet_PageStateItems","stateSheetCount","s","count","mySheets","getStateSheets","query_Query","isPaged","more","hasMore","startField","buildParams","unpackReturns","$page","query","table","book_Book","queryApiName","history_History","map_Map","queries","newAction","newQuery","add","del","pending_Pending","fieldDefaultValue","entities_Entities","sheets","books","maps","histories","pendings","tuidArr","actionArr","sheetArr","queryArr","bookArr","mapArr","historyArr","pendingArr","loadIds","clearCacheTimer","accesses","buildEntities","loadEntities","buildTuids","buildAccess","div","tuidUrl","cacheTimer","newTuid","fromType","fromObj","book","pending","uqId","newBook","newMap","newHistory","newSheet","newPending","buildSheet","ownerField","af","bootstrapCreateRow","elementCreateRow","_control__WEBPACK_IMPORTED_MODULE_1__","RowContainer","cc","control","setInitValues","ElementRowContainer","BootStrapRowContainer","refetchApi","ApiBase","getHttpChannel","callFetch","PageHeader","logoutClick","_nav__WEBPACK_IMPORTED_MODULE_1__","showLogout","navChange","hasBack","href","debugLogout","rightView","b","nick","openWindow","DefaultRow","vQueryMain_VQueryMain","resetPage","loadPage","replacePage","pageResult","queryResult","again","renderExtra","rightClose","queryRow","vQuerySelect_VQuerySelect","vQuerySelect_awaiter","selectRow","vQuerySelect_QueryPageItems","cQuery_CQueryBase","cQuery_CQuery","VQueryMain","main","cQuery_CQuerySelect","VQuerySelect","ImageItemEdit","_itemEdit__WEBPACK_IMPORTED_MODULE_7__","overSize","upload","resUploader","resId","_page__WEBPACK_IMPORTED_MODULE_6__","_resUploader__WEBPACK_IMPORTED_MODULE_3__","multiple","maxSize","border","padding","_image__WEBPACK_IMPORTED_MODULE_4__","_nav__WEBPACK_IMPORTED_MODULE_5__","mobx__WEBPACK_IMPORTED_MODULE_2__","Loading","ResUploader","files","fileInput","FormData","file","abortController","AbortController","signal","onFilesChange","_rule__WEBPACK_IMPORTED_MODULE_0__","_field__WEBPACK_IMPORTED_MODULE_1__","_face__WEBPACK_IMPORTED_MODULE_2__","_TonvaForm__WEBPACK_IMPORTED_MODULE_5__","FormView","buildRows","some","every","formRows","createRow","buildRow","buttonsRow","createButtons","_rowContainer__WEBPACK_IMPORTED_MODULE_4__","formRow","formRowCreator","_control__WEBPACK_IMPORTED_MODULE_3__","buttons","CApp","tonva_tools__WEBPACK_IMPORTED_MODULE_2__","cImportUqs","cUqCollection","tonva_react_form__WEBPACK_IMPORTED_MODULE_3__","onRowClick","selectUnitPage","appUnits","setSettings","tonvaApp","retErrors","promiseChecks","roleAppUI","buildRoleAppUI","uqUI","newCUq","checks","retError","roles","lodash__WEBPACK_IMPORTED_MODULE_1___default","getCUq","CUq","_uq__WEBPACK_IMPORTED_MODULE_4__","cUqArr","VAppMain","_centerApi__WEBPACK_IMPORTED_MODULE_5__","userAppUnits","showUnsupport","appUnit","loadUqs","clearPrevPages","showMainPage","renderView","userName","sheetTypeId","getCUqFromId","navSheet","appPage","appContent","entityIcons","react__WEBPACK_IMPORTED_MODULE_0___default","tonva_react_form__WEBPACK_IMPORTED_MODULE_1__","fixWidth","ControllerUq","centerApi","vMain_VSheetMain","newClick","schemaClick","archivesClick","sheetStateClick","renderState","badge","getStateLabel","templet","statesCount","filter","isDev","vNew_VSheetNew","vNew_awaiter","valuesWithBox","onSave","leftFlowStyle","width","vSheetView_VSheetView","flowRow","preState","sheetView","removed","sheetData","vEdit_VSheetEdit","vEdit_awaiter","saveSheet","controllers_form","vSheetAction_VSheetAction","actionClick","vSheetAction_awaiter","acted","deleteClick","editClick","editSheet","actionButtons","startButtons","no","stateLabel","getActionLabel","backPage","vSchema_VSheetSchema","schemaStringify","vArchives_VArchives","archiveClick","vArchives_awaiter","processing","archiveRow","getArchives","vList_VSheetList","rowClick","vList_awaiter","pageStateItems","listRow","stateName","vArchived_VArchived","vSheet_VSheet","vSaved_VSheetSaved","restart","vSaved_awaiter","vSheetProcessing_VSheetProcessing","cSheet_CSheet","cSheet_awaiter","showSaved","loadStateSheetCount","createPageStateItems","VSheetMain","onSheet","me","$","sheetActPreState","sheetActState","changeStateCount","curState","delta","stateCount","VSheetNew","sheetNew","VSheetSaved","sheetSaved","VSheetEdit","sheetEdit","VSheetSchema","VArchives","VArchived","VSheetList","VSheetAction","VSheetProcessing","showArchived","showAction","showProcessing","beforeStart","onEvent","getSheetData","vCall","inBrief","getArchived","getStateUI","actionName","sheetTitle","disc","vBookMain_VBookMain","cBook_CBook","VBookMain","vUq_VUq","isSysVisible","linkItem","cLink","lists","tuidLinks","mapLinks","sheetLinks","actionLinks","queryLinks","bookLinks","historyLinks","pendingLinks","Fragment","isVisible","controllers_link","cTuidMain","cMap","cSheet","cAction","cQuery","cBook","cHistory","cPending","lowerPropertyName","cUq_CUq","schemaLoaded","controllers_tuid","CTuidSelect","CTuidInfo","CQuery","CQuerySelect","CMap","CAction","CSheet","CBook","CHistory","controllers_history","CPending","baseUrl","loadEntites","collection","warn","tuidPlaceHolder","en","sheetFromTypeId","startSheet","entityName","entityType","cFromName","tUI","cEntity","getUI","VUq","vMain_VMapMain","itemRender","ItemRow","remove","valuesView","box","isLeaf","keyIndex","keyUI","keyUIs","keyContent","valuesContent","keyNone","addClick","removeClick","inputValues_VInputValues","onValuesSubmit","inputValues_awaiter","cMap_MapItem","cMap_CMap","cMap_awaiter","keysLen","keyFields","keysLast","idx","keyField","kn","searchParam","ki","searchOnKey","arr1","nullable","rowIndex","createItem","getLable","confirmDelete","template","v0","q","retFields","newItem","addItem","VMapMain","callParam","vActionMain_VActionMain","resultPage","mainPage","cAction_CAction","VActionMain","vHistoryMain_VHistoryMain","cHistory_CHistory","VHistoryMain","vPendingMain_VPendingMain","cPending_CPending","VPendingMain","netToken","_uqApi__WEBPACK_IMPORTED_MODULE_0__","_wsChannel__WEBPACK_IMPORTED_MODULE_1__","userApi","_net__WEBPACK_IMPORTED_MODULE_0__","_user__WEBPACK_IMPORTED_MODULE_1__","account","verify","prop","left0","zero","num","fix","Controller","_net__WEBPACK_IMPORTED_MODULE_3__","onMessageReceive","onMessage","isLogined","unregisterReceiveHandler","receiveHandlerId","onDispose","vp","registerReceiveHandler","_resolve_$","View","VPage","_schema__WEBPACK_IMPORTED_MODULE_0__","_uiSchema__WEBPACK_IMPORTED_MODULE_1__","mobileRegex","emailRegex","itemObservable","isFirst","loading","beforeLoad","loaded","allLoaded","firstSize","appendPosition","_items","mobx__WEBPACK_IMPORTED_MODULE_0__","topDiv","_uid__WEBPACK_IMPORTED_MODULE_1__","bottomDiv","setPageStart","unshift","reverse","CacheIds","maxCount","dict","Map","loadId","_loadIds","_loadId","TonvaForm","_formView__WEBPACK_IMPORTED_MODULE_2__","DropdownActions","handleDocumentClick","dropdownOpen","contains","menu","toggle","removeEventListener","isRight","hasIcon","data-toggle","aria-expanded","dropdown-menu","dropdown-menu-right","aria-hidden","EasyDate","now","nDate","getDate","_date","hour","getHours","minute","getMinutes","month","getMonth","hm","getFullYear","Media","disp","px","py","SearchBox","allowEmptySearch","inputSize","lab","inputClassName","buttonText","MultiStep","lodash__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_2__","_form__WEBPACK_IMPORTED_MODULE_3__","stepViews","topView","onPrev","onNext","stepName","steps","ButtonConten","prefix","btnContent","formProps","setStep","nextStepName","pIcon","sIcon","RuleCustom","func","RulePredefined","rules_RuleNum","minMsg","maxMsg","checkMore","integer","widget_Widget","context","fieldProps","contextErrors","onInputChange","changeValue","container","visible","inNode","requiredFlag","FieldContainer","getUiItem","removeErrorWidget","addErrorWidget","isChanging","initData","fromElement","onChanging","onChanged","prev","allowChange","setDataValue","setElementValue","fieldClass","FieldClass","uiLabel","Templet","errorList","tag","textWidget_TextWidget","onKeyDown","internalOnKeyDown","keyCode","onEnter","blur","checkContextRules","renderTemplet","renderErrors","numberWidget_NumberWidget","updownWidget_UpdownWidget","returnValue","isValidKey","dateWidget_DateWidget","checkBoxWidget_CheckBoxWidget","defaultChecked","selectWidget_SelectWidget","option","selectWidget_decorate","idWidget_IdWidget","idWidget_awaiter","pickId","clearContextError","required-item","cursor-pointer","idWidget_decorate","Unknown","dataType","uiType","dataTypes","buttonWidget_ButtonWidget","buttonWidget_awaiter","observerRender","widget","widgetType","ButtonClass","context_Context","uiSchema","isRow","widgets","errorWidgets","subContexts","arrRowContexts","itemName","getDisabled","setDisabled","getReadOnly","setReadOnly","getVisible","setVisible","buttonName","onButtonClick","checkFieldRules","rowContext","setContextError","clearWidgetsErrors","checkHasError","clearContextErrors","context_decorate","rowKeySeed","RowContext","parentContext","arrSchema","uiArr","itemSchemas","parentData","FormContext","ContextContainer","ArrComponent","selectable","deletable","restorable","getArrRowContexts","arrLabel","ArrContainer","RowSeperator","formSelectable","formDeletable","formRestorable","arrSelectable","arrDeletable","arrRestorable","ac","rc","rs","sep","typeofTemplet","factory","selectCheck","deleteIcon","$isSelected","$source","isDeleted","$isDeleted","onDelClick","editContainer","deleted","row-selected","Provider","imageWidget_ImageWidget","imageWidget_awaiter","imageItemEdit","imageSrc","end","ui_image","imageWidget_decorate","widgetsFactory","datetime","time","email","updown","image","checkboxes","radio","range","typeWidget","getItemSchema","getTypeWidget","WidgetClass","formRes","zh","form_Form","watch","formData","calcSelectOrDelete","DefaultContainer","DefaultFieldContainer","fieldLabelSize","labelView","fieldCol","DefaultFieldClass","DefaultButtonClass","DefaultRes","ui_res","py-3","Container","formContext","initDataItem","arrItem","arrItems","arrDict","arrItemOperated","formArrVal","beforeShow","contextType","Badge_Badge","badgeAlign","badgeVertical","LMR_LMR","cursor","LMR_decorate","FA_FA","spin","pull","pulse","rotate","flip","inverse","Muted","base_ListBase","pageItems","selectedItems","nextProps","clickable_Clickable","static_Static","selectable_Selectable","itemsArray","compare","_selectedItems","selected","labelId","si","buildItems","anySelected","onSelect","flex","marginBottom","htmlFor","selectable_decorate","list_List","listBase","nextState","nextContext","updateProps","isLoading","staticRow","list_decorate","stringItemEdit_StringItemEdit","edit_itemEdit","preValue","verifyValue","radioItemEdit_RadioItemEdit","selectItemEdit_SelectItemEdit","edit_Edit","defaultSepClassName","defaultRowContainerClassName","divValue","requireFlag","rowContainerClassName","edit_awaiter","stopEdit","onItemChanged","onItemClick","itemEdit","createItemEdit","topBorderClassName","bottomBorderClassName","sepClassName","topBorder","bottomBorder","elItems","PropRow","row_PropBorder","borderTop","row_PropGap","w","backgroundColor","valueAlignStart","valueAlignCenter","valueAlignEnd","row_LabeledPropRow","gridProps","col","labelFixLeft","bk","bg-white","renderLabel","renderProp","align","vAlign","alignValue","renderPropBody","renderPropContent","StringPropRow","NumberPropRow","row_ListPropRow","borderBottom","row_ComponentPropRow","full","propView_PropView","isGap","PropGrid_PropGrid","propView","listRow_ListRow","pressed","isIcon","noteNum","mid","viceSpan","vice","middle","midSize","unread","uv","va-action","listView_ListView","elHeader","itemClick","converter","ex","listItem","listView_decorate","Tab","_content","contentBuilder","tabs_Tabs","tabClick","selectedTab","tabBack","contentBack","notify","tabName","height","display","notifyCircle","userSetProp","FetchErrorView","reApi","_net__WEBPACK_IMPORTED_MODULE_1__","errContent","LocalData","Data","homeTabCur","module","exports","mainApi","toUser","fromUnit","fromApp","fellow","isOwner","isAdmin","apps","member","assigned","devApi","uqsText","service","admins_Admins","store","owners","admins","fellows","unitAdmins","ua","fellowId","unitSetAdmin","removeCur","admin","unitAddAdmin","dev_ObjItems","dev","_load","_save","_inc","_del","_dec","dev_decorate","dev_Apps","searchedUqs","saveApp","delApp","counts","searchUq","searchPageSize","allUqs","appBindUq","dev_Uqs","saveUq","delUq","dev_Buses","buses","saveBus","delBus","bus","dev_Servers","servers","saveServer","delServer","server","dev_Services","services","saveService","delService","changeServiceProp","db","db_type","connection","loadUqServices","SearchItems","dev_Dev","searchApp","searchServer","searchUqdb","cacheIds_CacheUnits","cacheIds_CacheUqs","cacheIds_CacheApps","cacheIds_CacheServers","store_Store","cacheUnits","cacheUqs","cacheApps","cacheServers","memberCount","roleApps","roleMember","roleMembers","memberRoles","unitChangeProp","unitApps","unitMemberCount","uqServer","uqBuilderUrl","unitDeleteApp","inUnit","unitAddApp","unitRoles","unitAddRole","unitRoleChangeProp","unitRoleApps","unitRoleSetApps","unitMembers","unitAssignMember","unitMemberRoles","rId","unitSetMemberRoles","org","store_decorate","store_store","NewFellow_NewFellowPage","onSendInvitation","NewFellow_awaiter","addNew","NewFellow","NewFellow_decorate","EditAdmin_EditAdmin","EditAdmin_awaiter","isRoot","unitAdmin","Fellow","Administors_EditAdmin","EditAdmin_decorate","Administors_AdministorsPage","onNewOwner","newAdmin","onNewAdmin","ownersView","adminsView","onNewFellow","showOwners","showAdmins","Administors","Administors_decorate","idDates_IdDates","date_init","date_update","span","isLink","unitSpan_UnitSpan","unitSpan_UnitInfo","unitSpan_decorate","unitSpan_UnitName","consts_appIcon","REACT_APP_ICON","appItemIcon","REACT_APP_ITEM_ICON","uqSpan_UqSpan","uqSpan_UqInfo","uqSpan_decorate","appSpan_AppSpan","appSpan_AppInfo","public","appSpan_decorate","apis","appSpan_AppRow","serverSpan_ServerSpan","serverSpan_ServerInfo","cloud","ip","serverSpan_decorate","stringValueEdit_StringValueEdit","stringValueEdit_awaiter","errorDiv","info","stringValueEdit_TextValueEdit","onTextAreaChange","idPickPage_IdPickPage","idPickPage_awaiter","candidateItems","searchPlaceHolder","idPickPage_decorate","info_Info","renderUqRow","uqAccess","act","info_awaiter","appActed","newInUnit","restoreUnitApp","stopUnitApp","newApp","addUnitApp","uqAccesses","faName","info_decorate","new_PageApps","new_NewApp","new_awaiter","appClick","renderApp","new_decorate","Apps_AppsPage","loadApps","ban","src_Apps","Apps_decorate","newRole_NewRole","newRole_awaiter","roleApps_RoleApps","renderRoleApp","memberPage_MemberPage","renderMemberRole","setRole","memberPage_SetRole","loadRoles","loadMemberRoles","orgValue","roleUser","onAssigned","roleClick","memberPage_decorate","setMemberRoles","selectRole","renderRole","roleSelect","membersPage_MembersPage","loadMembers","MemberRow","setRoleUser","roleId","membersPage_MemberSearch","renderMember","userClick","membersPage_decorate","members","rolePage_RolePage","roleAppClick","rolePage_RoleApps","loadRoleApps","rolePage_EditRole","onMembersClick","membersLeft","membersRight","editRole","addRoleApp","rolePage_decorate","roleChangeProp","isSysRole","onNameChanged","onDiscriptionChanged","setRoleApps","appSelect","midClassName","Members_Members","newRole","allUsersClick","Members_decorate","src_organization_ui","teamPerson","tonva_react_uq","_super","searchOnPost","querySelect","team","noStaff","staff","noPost","organization","teamPosts","CN","tuidNullCaption","arrNew","arrEdit","fromUser","subject","getMessage","newMessage","editSumbit","sectionTeam","teamOrganization","person","given","sur","gender","section","vOpBinding_VOpBinding","sheetOpsChanged","stateTosView","tosText","tos","organizationRow","teamRow","observableTeamRow","sectionRow","observableSectionRow","postRow","observablePostRow","stateView","vOpBinding_awaiter","saveOps","selectablePosts","teamsList","teams","defaultSelected","onPostSelectChanged","sections","onTeamSelectChanged","onSectionSelectChanged","organizations","posts","postTos","pid","pto","buildSelectablePost","buildSelectableTeams","teamTos","hasAllTeams","teamId","tto","teamTo0","teamTo0Sections","buildSelectableSections","teamTo","selectableTeam0","hasSection","selectableSection","selectableSections","stateTo","configable","stateClick","tosView","opTos","tosTexts","stateToName","toArr","sp","postId","teamCount","st","sectionCount","ss","sectionId","saveSheetStatePosts","vAllPosts_VAllPosts","onCheckChanged","def","saveChange","vAllPosts_awaiter","saveEntityOpForAll","pageRender","buttonSave","lineHeight","fontWeight","listStyleType","blocks","block","getEntityOpForAll","entityOpForAllResult","entityOpForAll","eaa","vAllPosts_decorate","vFullFunction_VFullFunction","users","onStopFully","vFullFunction_awaiter","onSumitStopFully","onCancelStop","_uq","_user","entityOpUserFully","callSearchUser","onUserSelected","renderUser","pageUsers","onSetFully","tuidUser","onCancelFully","renderSelectUser","usersView","vFullFunction_decorate","vSearchUser_VSearchUser","vSearchUser_PageUsers","onUserClick","vSearchUser_awaiter","cOpBinding_COpBinding","appRender","appView","appsView","cOpBinding_awaiter","entityPosts","opTo","postDict","teamDict","sectionDict","sheetClick","sheetClickOld","renderSetting","settingClick","V","uqRender","nameRender","sheetRender","buildPosts","buildAppsUqs","setUqEntities","queryAllTeams","organizationDict","tm","og","sec","lns","setEntities","setSheets","lines","actionSaveEntityOpPost","opName","organization_COrganization","links","organization_VOrganization","organization_awaiter","ServerCaption","editPage_schema","editPage_EditBasePage","editPage_awaiter","moreCandidates","pickServerId","renderServerInput","itemId","editPage_EditPage","editPage_NewPage","appsPage_AppsPage","appList","listRowClick","appRow","spanCaption","appUqs_SearchUqPage","appUqs_awaiter","onUq","getMyUqs","appUqs_decorate","appUqs_AppUqs","removeBind","btnProps","appUqs_Uqs","listHeader","btn","onBind","appPage_AppPage","editItem","appPage_awaiter","deleteItem","deleteApp","menuItems","btnAddUq","uqClick","elAccess","bind_access","uqBindPage_UqBindPage","accessChecked","saveUqBind","uqBindPage_awaiter","removeUqBind","btnDelete","checkAccessList","bc","apps_AppController","apps_awaiter","service_count","buildBindUqs","isNew","uaUq","apps_decorate","uqUpload_UqUpload","upFiles","fileClick","fr","FileReader","onload","uqUpload_UqPage","readAsText","onUpdate","uqUpload_awaiter","update","onUpdateThoroughly","lastModifiedDate","trunc","sz","thoroughly","uqUpload_CompileResult","fileList","fileRender","encType","compiled","doubleClick","pane","getParent","topIntoView","bottomIntoView","texts","seconds","abort","timeHandler","tagName","parentElement","clearTimeHandler","scrollIntoView","reader","getReader","pump","read","done","scrollToBottom","uintArray","encodedString","fromCharCode","apply","decodeURIComponent","uintToString","byteLength","onDoubleClick","wordWrap","whiteSpace","createIdPick","createIdPick_IdPickPage","newServicePage_ServerCaption","urlRow","serverRow","newServicePage_awaiter","dbTypeRow","dbRow","connectionRow","newServicePage_NewServicePage","tonvaForm","bindId","servicePage_ServicePage","onUrlChanged","servicePage_awaiter","changeProp","onDbChanged","onDbTypeChanged","onConnectionChanged","onDeleteClick","servicePage_decorate","editPage_formRows","uqs_editPage_EditBasePage","uqs_editPage_awaiter","uqs_editPage_EditPage","uqs_editPage_NewPage","uqPage_UQPage","uqPage_awaiter","deleteUq","onServiceClick","onUqUpload","serviceClick","btnAddService","showNewServicePage","renderService","compile_time","compile","listPage_ListPage","uqList","uqs_UQController","uqs_awaiter","loadUqEntities","uqGetEntities","r0","svc","uqs_decorate","row_Row","buses_Info","buses_SchemaView","buses_decorate","repeated","idPickAppProps","services_awaiter","idPickUqProps","serviceTypeNames","bindIdField","services_urlRow","discriptionRow","services_serverRow","ObjView_ObjView","ObjView_Info","ObjView_New","ObjView_decorate","saveCur","stepHeader","ObjView_Edit","extraMenuActions","vApps_VApps","appUsers","appUsersList","onAppsClick","searchBox","vUsers_VUsers","userApps","userAppsList","searchUser","onUsersClick","vApp_VApp","curApp","curAppUsers","onAppEditUsers","vUser_VUser","curUser","curUserApps","onUserEditApps","vAppEditUsers_VAppEditUsers","appEditUsers","editUser","onUserChanged","vAppEditUsers_awaiter","bindAppUser","vUserEditApps_VUserEditApps","userEditApps","editApp","onAppChanged","vUserEditApps_awaiter","bindUserApp","VAddUser_VAddUser","onSearchFocus","divUser","onAddUser","VAddUser_awaiter","userFromKey","addUser","addedPage","onAddApps","onContinueAddUser","VAddUser_decorate","cUsers_UsersController","onAppUsers","cUsers_awaiter","loadAppUsers","onUserApps","loadUserApps","unitOneAppUsers","unitOneUserApps","unitAppEditUsers","unitUserEditApps","unitAddUser","appIcon","userIcon","unitAppUsers","coll","unitUsers","cUsers_decorate","Admin_CAdmin","userAdminUnits","adminUnits","loadUnit","isProduction","loadAdminUnits","Admin_VAdmin","noUnitPage","Admin_awaiter","Admin_AdminPage","rArrow","typeCaptions","1","2","3","appsAction","usersAction","newUsersAction","adminsAction","cOrganization","organizeAction","noneAction","objProps","P","loadCounts","appAction","uqAction","busAction","serverAction","Admin_UnitProps","Admin_decorate","src_App_0","cAdmin","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","react_dom","URL","origin","response","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.04228c2e.chunk.js","sourcesContent":["export {left0} from './left0';\r\nexport * from './user';\r\nexport * from './net';\r\nexport * from './ui';\r\nexport * from './uid';\r\nexport {PageItems} from './pageItems';\r\nexport {CacheIds} from './cacheIds';\r\nexport * from './entry';\r\n\r\n","export * from './form';\r\nexport * from './list';\r\nexport * from './dropDownActions';\r\nexport * from './easyDate';\r\nexport * from './propGrid';\r\nexport * from './components';\r\nexport * from './media';\r\nexport * from './listView';\r\nexport * from './searchBox';\r\nexport * from './multiStep';\r\nexport * from './uid';\r\n","import * as React from 'react';\r\nimport { Controller, VPage, View } from 'tonva';\r\nimport { Entity, Field, TuidMain } from '../entities';\r\nimport { CUq } from './uq/cUq';\r\nimport { VForm, FieldInputs, FieldCall, FormOptions, FormMode } from './form';\r\nimport { CQuerySelect } from './query';\r\nimport { FormUI, FieldTuidUI } from './formUI';\r\nimport { entityIcons } from './icons';\r\nimport { ControllerUq } from './ControllerUq';\r\n\r\nexport interface EntityUI {\r\n    form?: FormUI;\r\n}\r\n\r\nexport abstract class CEntity<T extends Entity, UI extends EntityUI> extends ControllerUq {\r\n    constructor(cUq: CUq, entity: T, ui: UI, res: any) {\r\n        super(cUq, res);\r\n        Object.setPrototypeOf(this.x, cUq.x);\r\n        let {name, typeName} = entity;\r\n        this.entity = entity;\r\n        this.ui = ui; // || entityUI.ui;\r\n        this.label = this.res.label || name;\r\n        this.icon = entityIcons[typeName];\r\n    }\r\n    readonly entity: T;\r\n    readonly ui: UI;\r\n\r\n    protected async beforeStart():Promise<boolean> {\r\n        //if (await super.beforeStart() === false) return false;\r\n        await this.entity.loadSchema();\r\n        return true;\r\n    }\r\n\r\n    createForm(onSubmit:()=>Promise<void>, values?:any, mode?:FormMode) {\r\n        let options = this.buildFormOptions(mode);\r\n        let ret = new VForm(options, onSubmit);\r\n        ret.setValues(values);\r\n        return ret;\r\n    }\r\n\r\n    private buildFormOptions(mode?:FormMode):FormOptions {\r\n        let {fields, arrFields} = this.entity;\r\n        let none, submitCaption, arrNewCaption, arrEditCaption, arrTitleNewButton;\r\n        if (this.res !== undefined) {\r\n            none = this.res['none'];\r\n            submitCaption = this.res['submit'];\r\n            arrNewCaption = this.res['arrNew'];\r\n            arrEditCaption = this.res['arrEdit'];\r\n            arrTitleNewButton = this.res['arrTitleNewButton'];\r\n        }\r\n        if (none === undefined) {\r\n            none = this.cUq.res['none'] || 'none';\r\n        }\r\n        if (submitCaption === undefined)\r\n            submitCaption = this.cUq.res['submit'] || 'Submit';\r\n        if (arrNewCaption === undefined)\r\n            arrNewCaption = this.cUq.res['arrNew'] || 'New';\r\n        if (arrEditCaption === undefined)\r\n            arrEditCaption = this.cUq.res['arrEdit'] || 'Edit';\r\n        if (arrTitleNewButton === undefined)\r\n        arrTitleNewButton = this.cUq.res['arrTitleNewButton'];\r\n        if (mode === undefined) mode = FormMode.new;\r\n        let formUI = this.ui.form;\r\n        let ret:FormOptions = {\r\n            fields: fields,\r\n            arrs: arrFields,\r\n            ui: formUI,\r\n            res: this.res || {},\r\n            inputs: this.buildInputs(formUI),\r\n            none: none,\r\n            submitCaption: submitCaption,\r\n            arrNewCaption: arrNewCaption,\r\n            arrEditCaption: arrEditCaption,\r\n            arrTitleNewButton: arrTitleNewButton,\r\n            mode: mode,\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private buildInputs(formUI: FormUI):FieldInputs {\r\n        let {fields, arrFields} = this.entity;\r\n        let ret:FieldInputs = {};\r\n        this.buildFieldsInputs(ret, fields, undefined, formUI);\r\n        if (arrFields !== undefined) {\r\n            for (let arr of arrFields) {\r\n                let {name, fields} = arr;\r\n                let items = formUI && formUI.items;\r\n                this.buildFieldsInputs(ret, fields, name, items && items[name] as FormUI);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private buildFieldsInputs(ret:FieldInputs, fields:Field[], arr:string, formUI: FormUI) {\r\n        if (arr !== undefined) {\r\n            let arrFieldInputs = ret[arr];\r\n            if (arrFieldInputs === undefined) {\r\n                ret[arr] = arrFieldInputs = {};\r\n                ret = arrFieldInputs;\r\n            }\r\n        }\r\n        for (let field of fields) {\r\n            let {name, _tuid} = field;\r\n            if (_tuid === undefined) continue;\r\n            let fieldUI = formUI && formUI.items && formUI.items[name] as FieldTuidUI;\r\n            ret[name] = {\r\n                select: this.buildSelect(field, arr, fieldUI),\r\n                content: this.buildContent(field, arr),\r\n                placeHolder: this.cUq.getTuidPlaceHolder(_tuid),\r\n            };\r\n        }\r\n    }\r\n\r\n    protected buildSelect(field:Field, arr:string, fieldUI: FieldTuidUI):FieldCall {\r\n        return async (form:VForm, field:Field, values:any):Promise<any> => {\r\n            let {_tuid, _ownerField} = field;\r\n            let cTuidSelect = await (_tuid as TuidMain).cSelectFrom();\r\n            let param:any = undefined;\r\n            if (_ownerField !== undefined) param = form.getValue(_ownerField.name);\r\n            if (fieldUI && fieldUI.autoList === true) {\r\n                console.log('select search set param=empty string');\r\n                param = '';\r\n            }\r\n            let ret = await cTuidSelect.call(param);\r\n            cTuidSelect.removeCeased(); // 清除已经废弃的顶部页面\r\n            if (ret === undefined) return undefined;\r\n            let id = cTuidSelect.idFromItem(ret);\r\n            _tuid.useId(id);\r\n            return id;\r\n        };\r\n    }\r\n\r\n    protected buildContent(field:Field, arr:string): React.StatelessComponent<any> {\r\n        return;\r\n    }\r\n\r\n    cQuerySelect(queryName:string):CQuerySelect {\r\n        return this.cUq.cQuerySelect(queryName);\r\n    }\r\n}\r\n\r\nexport abstract class VEntity<T extends Entity, UI extends EntityUI, C extends CEntity<T, UI>> extends VPage<C> {\r\n    protected readonly entity: T;\r\n    protected readonly ui: UI;\r\n    constructor(controller: C) {\r\n        super(controller);\r\n        this.entity = controller.entity;\r\n        this.ui = controller.ui;\r\n    }\r\n\r\n    get label():string {return this.controller.label}\r\n\r\n    //private _form_$: VForm;\r\n    protected createForm(onSubmit:()=>Promise<void>, values?:any, mode?:FormMode): VForm {\r\n        //if (this._form_$ !== undefined) return this._form_$;\r\n        return this.controller.createForm(onSubmit, values, mode);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable, has} from 'mobx';\r\nimport {User, Guest/*, UserInNav*/} from '../user';\r\nimport {Page} from './page';\r\nimport {netToken} from '../net/netToken';\r\nimport FetchErrorView from './fetchErrorView';\r\nimport {FetchError} from '../fetchError';\r\nimport {appUrl, setAppInFrame, logoutUqTokens, getExHash, getExHashPos} from '../net/appBridge';\r\nimport {LocalData} from '../local';\r\nimport {guestApi, logoutApis, setCenterUrl, setCenterToken, WSChannel, appInFrame, isDevelopment, host} from '../net';\r\nimport { WsBase, wsBridge } from '../net/wsChannel';\r\nimport { resOptions } from './res';\r\nimport { Loading } from './loading';\r\n\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport '../css/va-form.css';\r\nimport '../css/va.css';\r\nimport '../css/animation.css';\r\n\r\nconst regEx = new RegExp('Android|webOS|iPhone|iPad|' +\r\n    'BlackBerry|Windows Phone|'  +\r\n    'Opera Mini|IEMobile|Mobile' , \r\n    'i');\r\nconst isMobile = regEx.test(navigator.userAgent);\r\nexport const mobileHeaderStyle = isMobile? {\r\n    minHeight:  '3em'\r\n} : undefined;\r\n\r\nconst logo = require('../img/logo.svg');\r\nlet logMark: number;\r\nconst logs:string[] = [];\r\n\r\nexport interface Props //extends React.Props<Nav>\r\n{\r\n    //view: JSX.Element | (()=>JSX.Element);\r\n    //start?: ()=>Promise<void>;\r\n    onLogined: ()=>Promise<void>;\r\n    notLogined?: ()=>Promise<void>;\r\n};\r\nlet stackKey = 1;\r\nexport interface StackItem {\r\n    key: number;\r\n    view: JSX.Element;\r\n    ceased: boolean;\r\n    confirmClose?: ()=>Promise<boolean>;\r\n    disposer?: ()=>void;\r\n}\r\nexport interface State {\r\n    stack: StackItem[];\r\n    wait: 0|1|2;\r\n    fetchError: FetchError\r\n}\r\n\r\nexport class NavView extends React.Component<Props, State> {\r\n    private stack: StackItem[];\r\n    private htmlTitle: string;\r\n    private waitCount: number = 0;\r\n    private waitTimeHandler?: NodeJS.Timer;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.back = this.back.bind(this);\r\n        this.navBack = this.navBack.bind(this);\r\n        this.stack = [];\r\n        this.state = {\r\n            stack: this.stack,\r\n            wait: 0,\r\n            fetchError: undefined\r\n        };\r\n    }\r\n    async componentWillMount() {\r\n        window.addEventListener('popstate', this.navBack);\r\n    }\r\n\r\n    async componentDidMount()\r\n    {\r\n        nav.set(this);\r\n        /*\r\n        let start = this.props.start;\r\n        if (start !== undefined) {\r\n            await start();\r\n        }\r\n        else {\r\n        */\r\n            await nav.start();\r\n        //}\r\n    }\r\n\r\n    get level(): number {\r\n        return this.stack.length;\r\n    }\r\n\r\n    startWait() {\r\n        if (this.waitCount === 0) {\r\n            this.setState({wait: 1});\r\n            this.waitTimeHandler = global.setTimeout(\r\n                () => {\r\n                    this.waitTimeHandler = undefined;\r\n                    this.setState({wait: 2});\r\n                },\r\n                1000) as NodeJS.Timer;\r\n        }\r\n        ++this.waitCount;\r\n        this.setState({\r\n            fetchError: undefined,\r\n        });\r\n    }\r\n\r\n    endWait() {\r\n        setTimeout(() => {\r\n            /*\r\n            this.setState({\r\n                fetchError: undefined,\r\n            });*/\r\n            --this.waitCount;\r\n            if (this.waitCount === 0) {\r\n                if (this.waitTimeHandler !== undefined) {\r\n                    clearTimeout(this.waitTimeHandler);\r\n                    this.waitTimeHandler = undefined;\r\n                }\r\n                this.setState({wait: 0});\r\n            }\r\n        },100);\r\n    }\r\n\r\n    async onError(fetchError: FetchError)\r\n    {\r\n        let err = fetchError.error;\r\n        if (err !== undefined && err.unauthorized === true) {\r\n            await nav.showLogin(undefined);\r\n            return;\r\n        }\r\n        this.setState({\r\n            fetchError: fetchError,\r\n        });\r\n    }\r\n\r\n    show(view: JSX.Element, disposer?: ()=>void): number {\r\n        this.clear();\r\n        return this.push(view, disposer);\r\n    }\r\n\r\n    push(view: JSX.Element, disposer?: ()=>void): number {\r\n        this.removeCeased();\r\n        if (this.stack.length > 0) {\r\n            window.history.pushState('forward', null, null);\r\n        }\r\n        let key = stackKey++;\r\n        this.stack.push({\r\n            key: key,\r\n            view: view, \r\n            ceased: false,\r\n            disposer: disposer\r\n        });\r\n        this.refresh();\r\n        //console.log('push: %s pages', this.stack.length);\r\n        return key;\r\n    }\r\n\r\n    replace(view: JSX.Element, disposer?: ()=>void): number {\r\n        let item:StackItem = undefined;\r\n        let stack = this.stack;\r\n        if (stack.length > 0) {\r\n            item = stack.pop();\r\n            //this.popAndDispose();\r\n        }\r\n        let key = stackKey++;\r\n        this.stack.push({\r\n            key: key, \r\n            view: view, \r\n            ceased: false,\r\n            disposer: disposer\r\n        });\r\n        if (item !== undefined) this.dispose(item.disposer);\r\n        this.refresh();\r\n        //console.log('replace: %s pages', this.stack.length);\r\n        return key;\r\n    }\r\n\r\n    ceaseTop(level:number = 1) {\r\n        let p = this.stack.length - 1;\r\n        for (let i=0; i<level; i++, p--) {\r\n            if (p < 0) break;\r\n            let item = this.stack[p];\r\n            item.ceased = true;\r\n        }\r\n    }\r\n\r\n    pop(level:number = 1) {\r\n        let stack = this.stack;\r\n        let len = stack.length;\r\n        //console.log('pop start: %s pages level=%s', len, level);\r\n        if (level <= 0 || len <= 1) return;\r\n        if (len < level) level = len;\r\n        let backLevel = 0;\r\n        for (let i = 0; i < level; i++) {\r\n            if (stack.length === 0) break;\r\n            //stack.pop();\r\n            this.popAndDispose();\r\n            ++backLevel;\r\n        }\r\n        if (backLevel >= len) backLevel--;\r\n        this.refresh();\r\n        if (this.isHistoryBack !== true) {\r\n            //window.removeEventListener('popstate', this.navBack);\r\n            //window.history.back(backLevel);\r\n            //window.addEventListener('popstate', this.navBack);\r\n        }\r\n        //console.log('pop: %s pages', stack.length);\r\n    }\r\n\r\n    popTo(key: number) {\r\n        if (key === undefined) return;\r\n        if (this.stack.find(v => v.key === key) === undefined) return;\r\n        while (this.stack.length >0) {\r\n            let len = this.stack.length;\r\n            let top = this.stack[len-1];\r\n            if (top.key === key) break;\r\n            this.pop();\r\n        }\r\n    }\r\n\r\n    topKey():number {\r\n        let len = this.stack.length;\r\n        if (len === 0) return undefined;\r\n        return this.stack[len-1].key;\r\n    }\r\n\r\n    removeCeased() {\r\n        for (;;) {\r\n            let p=this.stack.length-1;\r\n            if (p < 0) break;\r\n            let top = this.stack[p];\r\n            if (top.ceased === false) break;\r\n            let item = this.stack.pop();\r\n            let {disposer} = item;\r\n            this.dispose(disposer);\r\n        }\r\n        this.refresh();\r\n    }\r\n\r\n    private popAndDispose() {\r\n        this.removeCeased();\r\n        let item = this.stack.pop();\r\n        if (item === undefined) return;\r\n        let {disposer} = item;\r\n        this.dispose(disposer);\r\n        this.removeCeased();\r\n        return item;\r\n    }\r\n\r\n    private dispose(disposer:()=>void) {\r\n        if (disposer === undefined) return;\r\n        let item = this.stack.find(v => v.disposer === disposer);\r\n        if (item === undefined) disposer();\r\n    }\r\n\r\n    clear() {\r\n        let len = this.stack.length;\r\n        while (this.stack.length > 0) this.popAndDispose();\r\n        //this.refresh();\r\n        if (len > 1) {\r\n            //window.removeEventListener('popstate', this.navBack);\r\n            //window.history.back(len-1);\r\n            //window.addEventListener('popstate', this.navBack);\r\n        }\r\n    }\r\n\r\n    regConfirmClose(confirmClose:()=>Promise<boolean>) {\r\n        let stack = this.stack;\r\n        let len = stack.length;\r\n        if (len === 0) return;\r\n        let top = stack[len-1];\r\n        top.confirmClose = confirmClose;\r\n    }\r\n\r\n    private isHistoryBack:boolean = false;\r\n    navBack() {\r\n        nav.log('backbutton pressed - nav level: ' + this.stack.length);\r\n        this.isHistoryBack = true;\r\n        this.back(true);\r\n        this.isHistoryBack = false;\r\n    }\r\n\r\n    async back(confirm:boolean = true) {\r\n        let stack = this.stack;\r\n        let len = stack.length;\r\n        if (len === 0) return;\r\n        if (len === 1) {\r\n            if (self != window.top) {\r\n                window.top.postMessage({type:'pop-app'}, '*');\r\n            }\r\n            return;\r\n        }\r\n        let top = stack[len-1];\r\n        if (confirm===true && top.confirmClose) {\r\n            if (await top.confirmClose()===true) this.pop();\r\n        }\r\n        else {\r\n            this.pop();\r\n        }\r\n    }\r\n\r\n    confirmBox(message?:string): boolean {\r\n        return window.confirm(message);\r\n    }\r\n    clearError = () => {\r\n        this.setState({fetchError: undefined});\r\n    }\r\n    render() {\r\n        const {wait, fetchError} = this.state;\r\n        let stack = this.state.stack;\r\n        let top = stack.length - 1;\r\n        let elWait = null, elError = null;\r\n        switch (wait) {\r\n            case 1:\r\n                elWait = <li className=\"va-wait va-wait1\">\r\n                </li>;\r\n                break;\r\n            case 2:\r\n                elWait = <li className=\"va-wait va-wait2\">\r\n                    <Loading />\r\n                </li>;\r\n                break;\r\n                //<i className=\"fa fa-spinner fa-spin fa-3x fa-fw\"></i>\r\n                //<span className=\"sr-only\">Loading...</span>\r\n        }\r\n        if (fetchError)\r\n            elError = <FetchErrorView clearError={this.clearError} {...fetchError} />\r\n        return (\r\n        <ul className='va'>\r\n            {\r\n                stack.map((item, index) => {\r\n                    let {key, view} = item;\r\n                    return <li key={key} style={index<top? {visibility: 'hidden'}:undefined}>\r\n                        {view}\r\n                    </li>\r\n                })\r\n            }\r\n            {elWait}\r\n            {elError}\r\n        </ul>\r\n        );\r\n    }\r\n\r\n    private refresh() {\r\n        // this.setState({flag: !this.state.flag});\r\n        this.setState({stack: this.stack });\r\n        // this.forceUpdate();\r\n    }\r\n}\r\n\r\nexport interface NavSettings {\r\n    loginTop?: JSX.Element;\r\n}\r\n\r\nexport class Nav {\r\n    private nav:NavView;\r\n    private ws: WsBase;\r\n    private wsHost: string;\r\n    private local: LocalData = new LocalData();\r\n    private navSettings: NavSettings;\r\n    @observable user: User/*InNav*/ = undefined;\r\n    language: string;\r\n    culture: string;\r\n    resUrl: string;\r\n\r\n    constructor() {\r\n        let {lang, district} = resOptions;\r\n        this.language = lang;\r\n        this.culture = district;\r\n    }\r\n\r\n    get guest(): number {\r\n        let guest = this.local.guest;\r\n        if (guest === undefined) return 0;\r\n        let g = guest.get();\r\n        if (g === undefined) return 0;\r\n        return g.guest;\r\n    }\r\n\r\n    set(nav:NavView) {\r\n        //this.logo = logo;\r\n        this.nav = nav;\r\n    }\r\n\r\n    registerReceiveHandler(handler: (message:any)=>Promise<void>):number {\r\n        if (this.ws === undefined) return;\r\n        return this.ws.onWsReceiveAny(handler);\r\n    }\r\n\r\n    unregisterReceiveHandler(handlerId:number) {\r\n        if (this.ws === undefined) return;\r\n        if (handlerId === undefined) return;\r\n        this.ws.endWsReceive(handlerId);\r\n    }\r\n\r\n    async onReceive(msg:any) {\r\n        if (this.ws === undefined) return;\r\n        await this.ws.receive(msg);\r\n    }\r\n\r\n    private async getPredefinedUnitName() {\r\n        try {\r\n            let unitRes = await fetch('unit.json', {});\r\n            //if (unitRes)\r\n            let res = await unitRes.json();\r\n            return res.unit;\r\n        }\r\n        catch (err) {\r\n            this.local.unit.clear();\r\n            return;\r\n        }\r\n    }\r\n\r\n    private async loadPredefinedUnit() {\r\n        let envUnit = process.env.REACT_APP_UNIT;\r\n        if (envUnit !== undefined) {\r\n            return Number(envUnit);\r\n        }\r\n        let unitName:string;\r\n        let unit = this.local.unit.get();\r\n        if (unit !== undefined) {\r\n            if (isDevelopment !== true) return unit.id;\r\n            unitName = await this.getPredefinedUnitName();\r\n            if (unitName === undefined) return;\r\n            if (unit.name === unitName) return unit.id;\r\n        }\r\n        else {\r\n            unitName = await this.getPredefinedUnitName();\r\n            if (unitName === undefined) return;\r\n        }\r\n        let unitId = await guestApi.unitFromName(unitName);\r\n        if (unitId !== undefined) {\r\n            this.local.unit.set({id: unitId, name: unitName});\r\n        }\r\n        return unitId;\r\n    }\r\n\r\n    setSettings(settings?: NavSettings) {\r\n        this.navSettings = settings;\r\n    }\r\n\r\n    hashParam: string;\r\n    private centerHost: string;\r\n    async start() {\r\n        try {\r\n            let hash = document.location.hash;\r\n            if (hash !== undefined && hash.length > 0) {\r\n                let pos = getExHashPos();\r\n                if (pos < 0) pos = undefined;\r\n                this.hashParam = hash.substring(1, pos);\r\n            }\r\n            nav.clear();\r\n            this.startWait();\r\n            await host.start();\r\n            let {url, ws, resHost} = host;\r\n            this.centerHost = url;\r\n            this.resUrl = 'http://' + resHost + '/res/';\r\n            this.wsHost = ws;\r\n            setCenterUrl(url);\r\n            \r\n            let guest:Guest = this.local.guest.get();\r\n            if (guest === undefined) {\r\n                guest = await guestApi.guest();\r\n            }\r\n            nav.setGuest(guest);\r\n\r\n            let exHash = getExHash();\r\n            let appInFrame = setAppInFrame(exHash);\r\n            if (exHash !== undefined && window !== window.parent) {\r\n                // is in frame\r\n                if (appInFrame !== undefined) {\r\n                    this.ws = wsBridge;\r\n                    console.log('this.ws = wsBridge in sub frame');\r\n                    //nav.user = {id:0} as User;\r\n                    if (self !== window.parent) {\r\n                        window.parent.postMessage({type:'sub-frame-started', hash: appInFrame.hash}, '*');\r\n                    }\r\n                    // 下面这一句，已经移到 appBridge.ts 里面的 initSubWin，也就是响应从main frame获得user之后开始。\r\n                    //await this.showAppView();\r\n                    return;\r\n                }\r\n            }\r\n\r\n            let predefinedUnit = await this.loadPredefinedUnit();\r\n            appInFrame.predefinedUnit = predefinedUnit;\r\n\r\n            let user: User = this.local.user.get();\r\n            if (user === undefined) {\r\n                let {notLogined} = this.nav.props;\r\n                if (notLogined !== undefined) {\r\n                    await notLogined();\r\n                }\r\n                else {\r\n                    await nav.showLogin(undefined);\r\n                }\r\n                return;\r\n            }\r\n\r\n            await nav.logined(user);\r\n        }\r\n        catch (err) {\r\n        }\r\n        finally {\r\n            this.endWait();\r\n        }\r\n    }\r\n\r\n    async showAppView() {\r\n        let {onLogined} = this.nav.props;\r\n        if (onLogined === undefined) {\r\n            nav.push(<div>NavView has no prop onLogined</div>);\r\n            return;\r\n        }\r\n        nav.clear();\r\n        await onLogined();\r\n        console.log('logined: AppView shown');\r\n    }\r\n\r\n    setGuest(guest: Guest) {\r\n        this.local.guest.set(guest);\r\n        netToken.set(0, guest.token);\r\n    }\r\n\r\n    saveLocalUser() {\r\n        this.local.user.set(this.user);\r\n    }\r\n\r\n    async logined(user: User, callback?: (user:User)=>Promise<void>) {\r\n        logoutApis();\r\n        let ws:WSChannel = this.ws = new WSChannel(this.wsHost, user.token);\r\n        ws.connect();\r\n\r\n        console.log(\"logined: %s\", JSON.stringify(user));\r\n        this.user = user;\r\n        this.saveLocalUser();\r\n        netToken.set(user.id, user.token);\r\n        if (callback !== undefined) //this.loginCallbacks.has)\r\n            callback(user);\r\n            //this.loginCallbacks.call(user);\r\n        else {\r\n            await this.showAppView();\r\n        }\r\n    }\r\n\r\n    loginTop(defaultTop:JSX.Element) {\r\n        return (this.navSettings && this.navSettings.loginTop) || defaultTop;\r\n    }\r\n\r\n    async showLogin(callback?: (user:User)=>Promise<void>, withBack?:boolean) {\r\n        let lv = await import('../entry/login');\r\n        let loginView = <lv.default \r\n            withBack={withBack} \r\n            callback={callback} />;\r\n        if (withBack !== true) {\r\n            this.nav.clear();\r\n            this.pop();\r\n        }\r\n        this.nav.push(loginView);\r\n    }\r\n\r\n    async showLogout(callback?: ()=>Promise<void>) {\r\n        nav.push(<Page header=\"安全退出\" back=\"close\">\r\n            <div className=\"m-5 border border-info bg-white rounded p-3 text-center\">\r\n                <div>退出当前账号不会删除任何历史数据，下次登录依然可以使用本账号</div>\r\n                <div className=\"mt-3\">\r\n                    <button className=\"btn btn-danger\" onClick={()=>this.logout(callback)}>退出</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n    }\r\n\r\n    async logout(callback?:()=>Promise<void>) { //notShowLogin?:boolean) {\r\n        appInFrame.unit = undefined;\r\n        this.local.logoutClear();\r\n        this.user = undefined; //{} as User;\r\n        logoutApis();\r\n        let guest = this.local.guest.get();\r\n        setCenterToken(0, guest && guest.token);\r\n        this.ws = undefined;\r\n        /*\r\n        if (this.loginCallbacks.has)\r\n            this.logoutCallbacks.call();\r\n        else {\r\n            if (notShowLogin === true) return;\r\n        }\r\n        await nav.start();\r\n        */\r\n        if (callback === undefined)\r\n            await nav.start();\r\n        else\r\n            await callback();\r\n    }\r\n\r\n    async changePassword() {\r\n        let cp = await import('../entry/changePassword');\r\n        nav.push(<cp.ChangePasswordPage />);\r\n    }\r\n\r\n    get level(): number {\r\n        return this.nav.level;\r\n    }\r\n    startWait() {\r\n        this.nav.startWait();\r\n    }\r\n    endWait() {\r\n        this.nav.endWait();\r\n    }\r\n    async onError(error: FetchError) {\r\n        await this.nav.onError(error);\r\n    }\r\n    show (view: JSX.Element, disposer?: ()=>void): void {\r\n        this.nav.show(view, disposer);\r\n    }\r\n    push(view: JSX.Element, disposer?: ()=>void): void {\r\n        this.nav.push(view, disposer);\r\n    }\r\n    replace(view: JSX.Element, disposer?: ()=>void): void {\r\n        this.nav.replace(view, disposer);\r\n    }\r\n    pop(level:number = 1) {\r\n        this.nav.pop(level);\r\n    }\r\n    topKey():number {\r\n        return this.nav.topKey();\r\n    }\r\n    popTo(key:number) {\r\n        this.nav.popTo(key);\r\n    }\r\n    clear() {\r\n        this.nav.clear();\r\n    }\r\n    navBack() {\r\n        this.nav.navBack();\r\n    }\r\n    ceaseTop(level?:number) {\r\n        this.nav.ceaseTop(level);\r\n    }\r\n    removeCeased() {\r\n        this.nav.removeCeased();\r\n    }\r\n    async back(confirm:boolean = true) {\r\n        await this.nav.back(confirm);\r\n    }\r\n    regConfirmClose(confirmClose: ()=>Promise<boolean>) {\r\n        this.nav.regConfirmClose(confirmClose);\r\n    }\r\n    confirmBox(message?:string): boolean {\r\n        return this.nav.confirmBox(message);\r\n    }\r\n    async navToApp(url: string, unitId: number, apiId?:number, sheetType?:number, sheetId?:number):Promise<void> {\r\n        return new Promise<void>((resolve, reject) => {\r\n            let sheet = this.centerHost.includes('http://localhost:') === true? 'sheet_debug':'sheet'\r\n            let uh = sheetId === undefined?\r\n                    appUrl(url, unitId) :\r\n                    appUrl(url, unitId, sheet, [apiId, sheetType, sheetId]);\r\n            console.log('navToApp: %s', JSON.stringify(uh));\r\n            nav.push(<article className='app-container'>\r\n                <span id={uh.hash} onClick={()=>this.back()} style={mobileHeaderStyle}>\r\n                    <i className=\"fa fa-arrow-left\" />\r\n                </span>\r\n                <iframe src={uh.url} />\r\n            </article>, \r\n            ()=> {\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n\r\n    navToSite(url: string) {\r\n        // show in new window\r\n        window.open(url);\r\n    }\r\n\r\n    get logs() {return logs};\r\n    log(msg:string) {\r\n        logs.push(msg);\r\n    }\r\n    logMark() {\r\n        let date = new Date();\r\n        logMark = date.getTime();\r\n        logs.push('log-mark: ' + date.toTimeString());\r\n    }\r\n    logStep(step:string) {\r\n        logs.push(step + ': ' + (new Date().getTime() - logMark));\r\n    }\r\n}\r\nexport const nav: Nav = new Nav();\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { jsonStringify } from '../../tools';\r\n\r\nexport type TypeViewModel = typeof ViewModel;\r\nexport type TypeView = React.StatelessComponent<{vm: ViewModel, className?:string|string[]}>;\r\nexport type TypeContent = React.StatelessComponent<any>;\r\n\r\nexport abstract class ViewModel {\r\n    protected abstract get view(): TypeView;\r\n    render(className?:string|string[]):JSX.Element {\r\n        if (this.view === undefined) return <div>??? viewModel 必须定义 view ???</div>\r\n        return React.createElement(this.view, {vm: this, className:className});\r\n    }\r\n}\r\n\r\nexport const PureJSONContent = (values, x?:any) => <>content: {jsonStringify(values)}</>;\r\nexport const JSONContent = observer(PureJSONContent);\r\nexport const RowContent = \r\n    (values) => <div className=\"px-3 py-2\">{jsonStringify(values)}</div>\r\n;\r\n","import { decodeGuestToken } from '../user';\r\nimport { CenterApi } from './uqApi';\r\n\r\nexport class GuestApi extends CenterApi {\r\n    async guest(): Promise<any> {\r\n        //let guest = nav.local.guest.get();\r\n        let ret = await this.get('', {});\r\n        switch (typeof ret) {\r\n            default: return;\r\n            case 'string': return decodeGuestToken(ret);\r\n            case 'object':\r\n                let guest = decodeGuestToken(ret.token);\r\n                return guest;\r\n        }\r\n    }\r\n\r\n    async unitFromName(unitName:string): Promise<number> {\r\n        let ret = await this.get(unitName);\r\n        return ret && ret.unit;\r\n    }\r\n}\r\n\r\nexport const guestApi = new GuestApi('tv/guest/', undefined);\r\n","export {WSChannel, wsBridge, postWsToTop} from './wsChannel';\r\nexport * from './apiBase';\r\nexport * from './guestApi';\r\nexport * from './uqApi';\r\nexport {appInFrame, isBridged, getExHash} from './appBridge';\r\nexport * from './host';\r\nexport {httpGet} from './httpChannel';\r\n","function replacer(key:string, value:any) {\r\n    let first = key.substr(0, 1);\r\n    switch (first) {\r\n        default: return value;\r\n        case '$':\r\n        case '_': return;\r\n    }\r\n}\r\n\r\nexport function jsonStringify(value:any) {\r\n    return JSON.stringify(value, replacer, ' ');\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { BoxId, Tuid } from \"../entities\";\r\nimport { PureJSONContent } from '../controllers';\r\nimport { FA } from 'tonva';\r\n\r\ntype TvTemplet = (values?:any, x?:any) => JSX.Element;\r\n\r\ninterface Props {\r\n    tuidValue: number|BoxId, \r\n    ui?: TvTemplet,\r\n    x?: any,\r\n    nullUI?: ()=>JSX.Element\r\n}\r\n\r\nfunction boxIdContent(bi: number|BoxId, ui:TvTemplet, x:any) {\r\n    if (typeof bi === 'number') return <>{bi}</>;\r\n    let {id, _$tuid, _$com} = bi as BoxId;\r\n    if (id === undefined || id === null) return;\r\n    let t:Tuid = _$tuid;\r\n    if (t === undefined) {\r\n        if (ui !== undefined) return ui(bi, x);\r\n        return PureJSONContent(bi, x);\r\n    }\r\n    let com = ui || _$com;\r\n    if (com === undefined) {\r\n        com = bi._$com = t.getTuidContent();\r\n    }\r\n    let val = t.valueFromId(id);\r\n    if (val === undefined) {\r\n        return <>[<FA className=\"text-danger\" name=\"bug\" /> no {t.name} on id={id}]</>;\r\n    }\r\n    switch (typeof val) {\r\n        case 'number': val = {id: val}; break;\r\n    }\r\n    if (ui !== undefined) {\r\n        let ret = ui(val, x);\r\n        if (ret !== undefined) return ret;\r\n        return <>{id}</>;\r\n    }\r\n    return React.createElement(com, val);\r\n}\r\n\r\nconst Tv = observer(({tuidValue, ui, x, nullUI}:Props) => {\r\n    if (tuidValue === undefined) {\r\n        if (nullUI === undefined) return <>[undefined]</>;\r\n        return nullUI();\r\n    }\r\n    if (tuidValue === null) {\r\n        if (nullUI === undefined) return <>[null]</>;\r\n        return nullUI();\r\n    }\r\n    let ttv = typeof tuidValue;\r\n    switch (ttv) {\r\n        default:\r\n            if (ui === undefined)\r\n                return <>{ttv}-{tuidValue}</>;\r\n            else {\r\n                let ret = ui(tuidValue, x);\r\n                if (ret !== undefined) return ret;\r\n                return <>{tuidValue}</>;\r\n            }\r\n        case 'object':\r\n            let divObj = boxIdContent(tuidValue, ui, x);\r\n            if (divObj !== undefined) return divObj;\r\n            return nullUI();\r\n        case 'number':\r\n            return <>id...{tuidValue}</>;\r\n    }\r\n});\r\n\r\nexport const tv = (tuidValue:number|BoxId, ui?:TvTemplet, x?:any, nullUI?:()=>JSX.Element):JSX.Element => {\r\n    return <Tv tuidValue={tuidValue} ui={ui} x={x} nullUI={nullUI} />;\r\n};\r\n","export * from './jsonStringify';\r\nexport * from './tv';\r\n","import _ from 'lodash';\r\nimport {nav} from '../ui';\r\nimport {uid} from '../uid';\r\nimport {uqTokenApi as uqTokenApi, callCenterapi, CenterAppApi, AppUq, centerToken, App, setCenterToken} from './uqApi';\r\nimport {setSubAppWindow} from './wsChannel';\r\nimport { host } from './host';\r\n\r\nexport interface UqToken {\r\n    name: string;\r\n    url: string;\r\n    urlDebug: string;\r\n    token: string;\r\n}\r\nconst uqTokens:{[uqName:string]: UqToken}  = {};\r\nexport function logoutUqTokens() {\r\n    for (let i in uqTokens) uqTokens[i] = undefined;\r\n}\r\n\r\nexport interface AppInFrame {\r\n    hash: string;\r\n    unit: number;       // unit id\r\n    page?: string;\r\n    param?: string[];\r\n    predefinedUnit?: number;  // 比如像Cart这样的应用，直接让用户访问的，就需要在unit.json里面定义unitName\r\n}\r\nconst appsInFrame:{[key:string]:AppInFrame} = {};\r\n\r\nclass AppInFrameClass implements AppInFrame {\r\n    hash: string;\r\n    private _unit: number;\r\n    get unit(): number {return this._unit;}       // unit id\r\n    set unit(val:number) { this._unit=val;}\r\n    page?: string;\r\n    param?: string[];\r\n}\r\n\r\nexport let appInFrame:AppInFrame = new AppInFrameClass();\r\n/* {\r\n    hash: undefined,\r\n    get unit():number {return } undefined, //debugUnitId,\r\n    page: undefined;\r\n    param: undefined,\r\n}*/\r\n\r\nexport function isBridged():boolean {\r\n    return self !== window.parent;\r\n}\r\n\r\nwindow.addEventListener('message', async function(evt) {\r\n    var message = evt.data;\r\n    switch (message.type) {\r\n        case 'sub-frame-started':\r\n            subFrameStarted(evt);\r\n            break;\r\n        case 'ws':\r\n            //wsBridge.receive(message.msg);\r\n            await nav.onReceive(message.msg);\r\n            break;\r\n        case 'init-sub-win':\r\n            await initSubWin(message);\r\n            break;\r\n        case 'pop-app':\r\n            nav.navBack();\r\n            break;\r\n        case 'center-api':\r\n            await callCenterApiFromMessage(evt.source as Window, message);\r\n            break;\r\n        case 'center-api-return':\r\n            bridgeCenterApiReturn(message);\r\n            break;\r\n        case 'app-api':\r\n            let ret = await onReceiveAppApiMessage(message.hash, message.apiName);\r\n            (evt.source as Window).postMessage({\r\n                type: 'app-api-return', \r\n                apiName: message.apiName,\r\n                url: ret.url,\r\n                urlDebug: ret.urlDebug,\r\n                token: ret.token} as any, \"*\");\r\n            break;\r\n        case 'app-api-return':\r\n            console.log(\"app-api-return: %s\", JSON.stringify(message));\r\n            console.log('await onAppApiReturn(message);');\r\n            await onAppApiReturn(message);\r\n            break;\r\n        default:\r\n            this.console.log('message: %s', JSON.stringify(message));\r\n            break;\r\n    }\r\n});\r\n\r\nfunction subFrameStarted(evt:any) {\r\n    var message = evt.data;\r\n    let subWin = evt.source as Window;\r\n    setSubAppWindow(subWin);\r\n    hideFrameBack(message.hash);\r\n    let msg:any = _.clone(nav.user);\r\n    msg.type = 'init-sub-win';\r\n    subWin.postMessage(msg, '*');\r\n}\r\nfunction hideFrameBack(hash:string) {\r\n    let el = document.getElementById(hash);\r\n    if (el !== undefined) el.hidden = true;\r\n}\r\nasync function initSubWin(message:any) {\r\n    console.log('initSubWin: set nav.user', message);\r\n    let user = nav.user = message; // message.user;\r\n    setCenterToken(user.id, user.token);\r\n    await nav.showAppView();\r\n}\r\nasync function onReceiveAppApiMessage(hash: string, apiName: string): Promise<UqToken> {\r\n    let appInFrame = appsInFrame[hash];\r\n    if (appInFrame === undefined) return {name:apiName, url:undefined, urlDebug:undefined, token:undefined};\r\n    //let unit = getUnit();\r\n    let {unit, predefinedUnit} = appInFrame;\r\n    unit = unit || predefinedUnit;\r\n    if (!unit) {\r\n        console.error('no unit defined in unit.json or not logined in', unit);\r\n    }\r\n    let parts = apiName.split('/');\r\n    let param = {unit: unit, uqOwner: parts[0], uqName: parts[1]};\r\n    console.log('uqTokenApi.uq onReceiveAppApiMessage', param);\r\n    let ret = await uqTokenApi.uq(param);\r\n    return {name: apiName, url: ret.url, urlDebug:ret.urlDebug, token: ret.token};\r\n}\r\n\r\nasync function onAppApiReturn(message:any) {\r\n    let {apiName, url, urlDebug, token} = message;\r\n    let action = uqTokenActions[apiName];\r\n    if (action === undefined) {\r\n        throw 'error app api return';\r\n        //return;\r\n    }\r\n    let realUrl = host.getUrlOrDebug(url, urlDebug);\r\n    console.log('onAppApiReturn(message:any): url=' + url + ', debug=' + urlDebug + ', real=' + realUrl);\r\n    //action.url = realUrl;\r\n    //action.token = token;\r\n    action.resolve({\r\n        name: apiName,\r\n        url: realUrl,\r\n        urlDebug: urlDebug,\r\n        token: token,\r\n    } as UqToken);\r\n}\r\n\r\nexport function setAppInFrame(appHash: string):AppInFrame {\r\n    if (appHash) {\r\n        let parts = appHash.split('-');\r\n        let len = parts.length;\r\n        if (len > 0) {\r\n            let p = 1;\r\n            appInFrame.hash = parts[p++];\r\n            if (len>0) appInFrame.unit = Number(parts[p++]);\r\n            if (len>1) appInFrame.page = parts[p++];\r\n            if (len>2) appInFrame.param = parts.slice(p++);\r\n        }\r\n    }\r\n    return appInFrame;\r\n}\r\n\r\nexport function getExHashPos():number {\r\n    let hash = document.location.hash;\r\n    if (hash !== undefined && hash.length > 0) {\r\n        let pos = hash.lastIndexOf('#tv-');\r\n        if (pos < 0) pos = hash.lastIndexOf('#tvdebug-');\r\n        return pos;\r\n    }\r\n    return -1;\r\n}\r\n\r\nexport function getExHash():string {\r\n    let pos = getExHashPos();\r\n    if (pos < 0) return undefined;\r\n    return document.location.hash.substring(pos);\r\n}\r\n\r\nexport function appUrl(url: string, unitId: number, page?:string, param?:any[]):{url:string; hash:string} {\r\n    let u:string;\r\n    for (;;) {\r\n        u = uid();\r\n        let a = appsInFrame[u];\r\n        if (a === undefined) {\r\n            appsInFrame[u] = {hash:u, unit:unitId};\r\n            break;\r\n        }\r\n    }\r\n    url += '#tv-' + u + '-' + unitId;\r\n    if (page !== undefined) {\r\n        url += '-' + page;\r\n        if (param !== undefined) {\r\n            for (let i=0; i<param.length; i++) {\r\n                url += '-' + param[i];\r\n            }\r\n        }\r\n    }\r\n    return {url: url, hash: u};\r\n}\r\n\r\nfunction getUnit():number {\r\n    let {unit, predefinedUnit} = appInFrame;\r\n    let realUnit = unit || predefinedUnit;\r\n    if (realUnit === undefined) {\r\n        throw 'no unit defined in unit.json or not logined in';\r\n    }\r\n    return realUnit;\r\n}\r\n\r\ninterface UqTokenAction {\r\n    resolve: (value?: UqToken | PromiseLike<UqToken>) => void;\r\n    reject: (reason?: any) => void;\r\n}\r\nconst uqTokenActions:{[uq:string]: UqTokenAction} = {};\r\nexport async function buildAppUq(uq:string, uqOwner:string, uqName:string):Promise<void> {\r\n    if (!isBridged()) {\r\n        let unit = getUnit();\r\n        let uqToken = await uqTokenApi.uq({unit:unit, uqOwner:uqOwner, uqName:uqName});\r\n        if (uqToken.token === undefined) uqToken.token = centerToken;\r\n        let {url, urlDebug} = uqToken;\r\n        let realUrl = host.getUrlOrDebug(url, urlDebug);\r\n        console.log('realUrl: %s', realUrl);\r\n        uqToken.url = realUrl;\r\n        uqTokens[uq] = uqToken;\r\n        return uqToken;\r\n    }\r\n    console.log(\"**** before buildAppUq ****\", appInFrame);\r\n    let bp = uqTokenActions[uq];\r\n    if (bp !== undefined) return;\r\n    return new Promise<void>((resolve, reject) => {\r\n        uqTokenActions[uq] = {\r\n            resolve: async (at:any) => {\r\n                let {url, urlDebug, token} = await at;\r\n                uqTokens[uq] = {\r\n                    name: uq,\r\n                    url: url,\r\n                    urlDebug: urlDebug,\r\n                    token: token,\r\n                };\r\n                uqTokenActions[uq] = undefined;\r\n                console.log(\"**** after buildAppUq ****\", appInFrame);\r\n                resolve();\r\n            },\r\n            reject: reject,\r\n        };\r\n        (window.opener || window.parent).postMessage({\r\n            type: 'app-api',\r\n            apiName: uq,\r\n            hash: appInFrame.hash,\r\n        }, \"*\");\r\n    });\r\n}\r\n\r\nexport function appUq(uq:string):UqToken {\r\n    return uqTokens[uq];\r\n}\r\n/*\r\nexport async function appUq(uq:string, uqOwner:string, uqName:string): Promise<UqToken> {\r\n    let uqToken = uqTokens[uq];\r\n    if (uqToken !== undefined) return uqToken;\r\n    if (!isBridged()) {\r\n        let unit = getUnit();\r\n        uqToken = await uqTokenApi.uq({unit:unit, uqOwner:uqOwner, uqName:uqName});\r\n        if (uqToken.token === undefined) uqToken.token = centerToken;\r\n        let {url, urlDebug} = uqToken;\r\n        let realUrl = host.getUrlOrDebug(url, urlDebug);\r\n        console.log('realUrl: %s', realUrl);\r\n        uqToken.url = realUrl;\r\n        uqTokens[uq] = uqToken;\r\n        return uqToken;\r\n    }\r\n    console.log(\"appApi parent send: %s\", appInFrame.hash);\r\n    uqToken = {\r\n        name: uq,\r\n        url: undefined,\r\n        urlDebug: undefined,\r\n        token: undefined,\r\n        resolve: undefined,\r\n        reject: undefined,\r\n    };\r\n    uqTokens[uq] = uqToken;\r\n    return new Promise<UqToken>((resolve, reject) => {\r\n        uqToken.resolve = async (at) => {\r\n            let a = await at;\r\n            console.log('return from parent window: %s', JSON.stringify(a));\r\n            uqToken.url = a.url;\r\n            uqToken.urlDebug = a.urlDebug;\r\n            uqToken.token = a.token;\r\n            resolve(uqToken);\r\n        }\r\n        uqToken.reject = reject;\r\n        (window.opener || window.parent).postMessage({\r\n            type: 'app-api',\r\n            apiName: uq,\r\n            hash: appInFrame.hash,\r\n        }, \"*\");\r\n    });\r\n}\r\n*/\r\ninterface BridgeCenterApi {\r\n    id: string;\r\n    resolve: (value?:any)=>any;\r\n    reject: (reason?:any)=>void;\r\n}\r\nconst brideCenterApis:{[id:string]: BridgeCenterApi} = {};\r\nexport async function bridgeCenterApi(url:string, method:string, body:any):Promise<any> {\r\n    console.log('bridgeCenterApi: url=%s, method=%s', url, method);\r\n    return await new Promise<any>(async (resolve, reject) => {\r\n        let callId:string;\r\n        for (;;) {\r\n            callId = uid();\r\n            let bca = brideCenterApis[callId];\r\n            if (bca === undefined) {\r\n                brideCenterApis[callId] = {\r\n                    id: callId,\r\n                    resolve: resolve,\r\n                    reject: reject,\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        (window.opener || window.parent).postMessage({\r\n            type: 'center-api',\r\n            callId: callId,\r\n            url: url,\r\n            method: method,\r\n            body: body\r\n        }, '*');\r\n    });\r\n}\r\n\r\nasync function callCenterApiFromMessage(from:Window, message):Promise<void> {\r\n    let {callId, url, method, body} = message;\r\n    let result = await callCenterapi.directCall(url, method, body);\r\n    from.postMessage({\r\n        type: 'center-api-return',\r\n        callId: callId,\r\n        result: result,\r\n    }, '*');\r\n}\r\n\r\nfunction bridgeCenterApiReturn(message:any) {\r\n    let {callId, result} = message;\r\n    let bca = brideCenterApis[callId];\r\n    if (bca === undefined) return;\r\n    brideCenterApis[callId] = undefined;\r\n    bca.resolve(result);\r\n}\r\n","export * from './nav';\r\nexport * from './pageHeader';\r\nexport * from './page';\r\nexport * from './VM';\r\nexport * from './schema';\r\nexport * from './form';\r\nexport * from './edit';\r\nexport * from './res';\r\nexport * from './tabs';\r\nexport * from './loading';\r\nexport * from './image';\r\nexport * from './resUploader';\r\nexport * from './rules';","import * as React from 'react';\r\nimport {IComputedValue} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash';\r\nimport {PageHeader} from './pageHeader';\r\n\r\nexport interface ScrollProps {\r\n    onScroll?: (e:any) => void;\r\n    onScrollTop?: () => void;\r\n    onScrollBottom?: () => void;\r\n}\r\ninterface ScrollViewProps extends ScrollProps {\r\n    className?: string;\r\n}\r\nconst scrollTimeGap = 100;\r\nclass ScrollView extends React.Component<ScrollViewProps, null> {\r\n    private bottomTime:number = 0;\r\n    private topTime:number = 0;\r\n\r\n    private onScroll = async (e) => {\r\n        let {onScroll, onScrollTop, onScrollBottom} = this.props;\r\n        if (onScroll) this.props.onScroll(e);\r\n        let el = e.target as HTMLBaseElement;\r\n        if (el.scrollTop < 30) {\r\n            //this.eachChild(this, 'top');\r\n            if (onScrollTop !== undefined) {\r\n                let topTime = new Date().getTime();\r\n                if (topTime-this.topTime > scrollTimeGap) {\r\n                    this.topTime = topTime;\r\n                    onScrollTop();\r\n                }\r\n            }\r\n        }\r\n        if (el.scrollTop + el.offsetHeight > el.scrollHeight - 30) {\r\n            //this.eachChild(this, 'bottom');\r\n            if (onScrollBottom !== undefined) {\r\n                let bottomTime = new Date().getTime();\r\n                if (bottomTime - this.bottomTime > scrollTimeGap) {\r\n                    this.bottomTime = bottomTime;\r\n                    onScrollBottom();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    private eachChild(c:any, direct:'top'|'bottom') {\r\n        let { props } = c;\r\n        if (props === undefined)\r\n            return;\r\n        let { children } = props;\r\n        if (children === undefined)\r\n            return;\r\n        React.Children.forEach(children, (child, index) => {\r\n            let {_$scroll} = child as any;\r\n            if (_$scroll) _$scroll(direct);\r\n            console.log(child.toString());\r\n            this.eachChild(child, direct);\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <main className={this.props.className} onScroll={this.onScroll}>\r\n                {this.props.children}\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport interface Tab extends ScrollProps {\r\n    title: string;\r\n    icon?: string;\r\n    content?: JSX.Element | (()=>JSX.Element);\r\n    header?: string;\r\n    isSelected?: boolean;\r\n    redDot?: IComputedValue<number>;\r\n    load?: () => Promise<void>;\r\n}\r\nexport interface TabState extends Tab {\r\n    isMounted?: boolean;\r\n}\r\nexport interface PageProps extends ScrollProps {\r\n    back?: 'close' | 'back' | 'none';\r\n    header?: boolean | string | JSX.Element;\r\n    keepHeader?: boolean;\r\n    right?: JSX.Element;\r\n    sideBar?: JSX.Element;\r\n    footer?: JSX.Element;\r\n    tabs?: Tab[];\r\n    logout?: boolean | (()=>Promise<void>);\r\n    headerClassName?: string;\r\n}\r\nexport interface PageState {\r\n    cur?: Tab;\r\n    tabs?: TabState[];\r\n}\r\n\r\n@observer\r\nexport class Page extends React.Component<PageProps, PageState> {\r\n    private tabs:TabState[];\r\n    constructor(props: PageProps) {\r\n        super(props);\r\n        let {tabs} = props;\r\n        if (tabs === undefined || tabs.length === 0) return;\r\n        this.tabs = tabs;\r\n        let cur:Tab;\r\n        let tabStates:Tab[] = [];\r\n        for (let tab of tabs) {\r\n            let t:TabState = _.clone(tab);\r\n            if (cur === undefined) {\r\n                if (t.isSelected === true)\r\n                    cur = t;\r\n                else\r\n                    t.isSelected = false;\r\n            }\r\n            else {\r\n                t.isSelected = false;\r\n            }\r\n            t.isMounted = false;\r\n            tabStates.push(t);\r\n        }\r\n        this.state = {\r\n            cur: cur,\r\n            tabs: tabStates,\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (this.tabs === undefined) return;\r\n        let t0 = this.state.tabs[0];\r\n        if (t0 === undefined) return;\r\n        await this.onTabClick(t0);\r\n    }\r\n\r\n    private async onTabClick(tab: TabState) {\r\n        if (tab.isSelected === true) return;\r\n        let cur:TabState;\r\n        let tabs = this.state.tabs;\r\n        for (let t of tabs) {\r\n            if (t === tab) {\r\n                t.isSelected = true;\r\n                cur = t;\r\n            }\r\n            else\r\n                t.isSelected = false;\r\n        }\r\n        if (cur.isMounted !== true) {\r\n            let {load} = cur;\r\n            if (load !== undefined) {\r\n                await load();\r\n            }\r\n        }\r\n        this.setState({\r\n            cur: cur,\r\n            tabs: tabs\r\n        });\r\n    }\r\n\r\n    private onTouchStart(evt: React.TouchEvent<HTMLElement>) {\r\n    }\r\n\r\n    private renderTabs(footer: JSX.Element) {\r\n        const {header, back, right, keepHeader, headerClassName} = this.props;\r\n        let cur = this.state.cur;\r\n        let tabs = <div>{\r\n                this.state.tabs.map((tab, index) => {\r\n                    const {icon, isSelected, title, redDot} = tab;\r\n                    let img:any, redDotView:any, cn:any;\r\n                    if (icon !== undefined) img = <img src={icon} />;\r\n                    if (redDot !== undefined) {\r\n                        let v = redDot.get();\r\n                        if (v < 0) {\r\n                            cn = classNames('red-dot');\r\n                            redDotView = <u />;\r\n                        }\r\n                        else if (v > 0) {\r\n                            cn = classNames('red-dot', 'num');\r\n                            redDotView = <u>{v}</u>;\r\n                        }\r\n                    }\r\n                    return <div key={index}\r\n                        className= {classNames('va-tab', {cur: isSelected})}\r\n                        onClick={() => this.onTabClick(tab)}>\r\n                        {img}<div className={cn}>{title}{redDotView}</div>\r\n                    </div>\r\n                })\r\n            }</div>;\r\n        let pageHeader = header !== false &&\r\n            <PageHeader \r\n                back={back} \r\n                center={keepHeader===true? (header as string) : (cur && (cur.header || cur.title))}\r\n                right={right}\r\n                className={headerClassName}\r\n            />;\r\n\r\n        return <article className='page-container'>\r\n            {pageHeader}\r\n            <section className=\"position-relative\">\r\n            {this.props.sideBar}\r\n            {\r\n                this.state.tabs.map((tab, index) => {\r\n                    let {isSelected, isMounted, content} = tab;\r\n                    if (isSelected === true || isMounted === true) {\r\n                        tab.isMounted = true;\r\n                        return <ScrollView key={index}\r\n                            className={classNames({invisible: isSelected===false})}\r\n                            onScroll={tab.onScroll}\r\n                            onScrollTop={tab.onScrollTop}\r\n                            onScrollBottom={tab.onScrollBottom}\r\n                        >\r\n                            {(typeof content)==='function'? (content as ()=>JSX.Element)():content}\r\n                        </ScrollView>;\r\n                    }\r\n                })\r\n            }\r\n            </section>\r\n            {tabs}\r\n            {footer}\r\n        </article>;\r\n    }\r\n    private renderSingle(footer: JSX.Element) {\r\n        const {back, header, right, onScroll, onScrollTop, onScrollBottom, children, headerClassName} = this.props;\r\n        let pageHeader = header !== false && <PageHeader \r\n            back={back} \r\n            center={header as any}\r\n            right={right}\r\n            logout={this.props.logout}\r\n            className={headerClassName}\r\n        />;\r\n        return (\r\n            <article className='page-container' onTouchStart={this.onTouchStart}>\r\n                {pageHeader}\r\n                <section className=\"position-relative\">\r\n                    {this.props.sideBar}\r\n                    <ScrollView\r\n                        onScroll={onScroll}\r\n                        onScrollTop={onScrollTop}\r\n                        onScrollBottom={onScrollBottom}\r\n                    >\r\n                        {children}\r\n                    </ScrollView>\r\n                </section>\r\n                {footer}\r\n            </article>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const {footer} = this.props;\r\n        let elFooter = footer !== undefined && <footer>{footer}</footer>;\r\n        if (this.tabs !== undefined)\r\n            return this.renderTabs(elFooter);\r\n        else\r\n            return this.renderSingle(elFooter);\r\n    }\r\n}\r\n","import {nav} from '../ui/nav';\r\nimport {FetchError} from '../fetchError';\r\n\r\nexport interface HttpChannelUI {\r\n    startWait():void;\r\n    endWait():void;\r\n    showError(error:FetchError):Promise<void>;\r\n}\r\n\r\nexport class HttpChannelNavUI implements HttpChannelUI {\r\n    startWait() {\r\n        nav.startWait();\r\n    }\r\n    endWait() {\r\n        nav.endWait();\r\n    }\r\n    async showError(error:FetchError):Promise<void> {\r\n        nav.endWait();\r\n        /*\r\n        if (error.name === 'SyntaxError') {\r\n            error = {\r\n                name: error.name,\r\n                message: error.message,\r\n            }\r\n        }*/\r\n        await nav.onError(error);\r\n    }\r\n}\r\n\r\n","import _ from 'lodash';\r\nimport {HttpChannel} from './httpChannel';\r\nimport {HttpChannelNavUI} from './httpChannelUI';\r\nimport {appUq, logoutUqTokens, buildAppUq} from './appBridge';\r\nimport {ApiBase} from './apiBase';\r\nimport { host } from './host';\r\nimport { nav } from '../ui';\r\n\r\nlet channelUIs:{[name:string]: HttpChannel} = {};\r\nlet channelNoUIs:{[name:string]: HttpChannel} = {};\r\n\r\nexport function logoutApis() {\r\n    channelUIs = {};\r\n    channelNoUIs = {};\r\n    logoutUnitxApis();\r\n    logoutUqTokens();\r\n}\r\n\r\ninterface UqLocal {\r\n    value: any;\r\n    tick?: number;\r\n    isNet?: boolean;\r\n}\r\ninterface UqLocals {\r\n    user: number;\r\n    unit: number;\r\n    uqs: {[uq:string]: UqLocal};\r\n}\r\n\r\nconst uqLocalEntities = 'uqLocalEntities';\r\nclass CacheUqLocals {\r\n    private local:UqLocals;\r\n\r\n    async loadAccess(uqApi: UqApi):Promise<any> {\r\n        try {\r\n            let {uqOwner, uqName} = uqApi;\r\n            if (this.local === undefined) {\r\n                let ls = localStorage.getItem(uqLocalEntities);\r\n                if (ls !== null) {\r\n                    this.local = JSON.parse(ls);\r\n                }\r\n            }\r\n            if (this.local !== undefined) {\r\n                let {user, uqs} = this.local;\r\n                if (user !== loginedUserId || uqs === undefined) {\r\n                    this.local = undefined;\r\n                }\r\n                else {\r\n                    for (let i in uqs) {\r\n                        let ul = uqs[i];\r\n                        ul.isNet = undefined;\r\n                    }\r\n                }\r\n            }\r\n            if (this.local === undefined) {\r\n                this.local = {\r\n                    user: loginedUserId,\r\n                    unit: undefined,\r\n                    uqs: {}\r\n                };\r\n            }\r\n\r\n            let ret: any;\r\n            let un = uqOwner+'/'+uqName;\r\n            let uq = this.local.uqs[un];\r\n            if (uq !== undefined) {\r\n                let {value} = uq;\r\n                ret = value;\r\n            }\r\n            if (ret === undefined) {\r\n                ret = await uqApi.__loadAccess();\r\n                this.saveLocal(un, ret);\r\n            }\r\n            return _.cloneDeep(ret);\r\n        }\r\n        catch (err) {\r\n            this.local = undefined;\r\n            localStorage.removeItem(uqLocalEntities);\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    private saveLocal(uqName:string, accessValue: any) {\r\n        this.local.uqs[uqName] = {\r\n            value: accessValue,\r\n            isNet: true,\r\n        }\r\n        let str = JSON.stringify(this.local);\r\n        localStorage.setItem(uqLocalEntities, str);\r\n    }\r\n\r\n    async checkAccess(uqApi: UqApi):Promise<boolean> {\r\n        if (this.local === undefined) return false;\r\n        let {uqOwner, uqName} = uqApi;\r\n        let un = uqOwner+'/'+uqName;\r\n        let uq = this.local.uqs[un];\r\n        if (uq === undefined) return false;\r\n        let {isNet, value} = uq;\r\n        if (isNet === true) return true;\r\n        let ret = await uqApi.__loadAccess();\r\n        let isMatch = _.isMatch(value, ret);\r\n        if (isMatch === false) {\r\n            this.saveLocal(un, ret);\r\n            return false;\r\n        }\r\n        uq.isNet = true;\r\n        return true;\r\n    }\r\n}\r\n\r\nconst localUqs = new CacheUqLocals;\r\nexport class UqApi extends ApiBase {\r\n    private access:string[];\r\n    uqOwner: string;\r\n    uqName: string;\r\n    uq: string;\r\n\r\n    constructor(basePath: string, uqOwner: string, uqName: string, access:string[], showWaiting?: boolean) {\r\n        super(basePath, showWaiting);\r\n        if (uqName) {\r\n            this.uqOwner = uqOwner;\r\n            this.uqName = uqName;\r\n            this.uq = uqOwner + '/' + uqName;\r\n        }\r\n        this.access = access;\r\n        this.showWaiting = showWaiting;\r\n    }\r\n\r\n    async init() {\r\n        await buildAppUq(this.uq, this.uqOwner, this.uqName);\r\n    }\r\n\r\n    protected async getHttpChannel(): Promise<HttpChannel> {\r\n        let channels: {[name:string]: HttpChannel};\r\n        let channelUI: HttpChannelNavUI;\r\n        if (this.showWaiting === true || this.showWaiting === undefined) {\r\n            channels = channelUIs;\r\n            channelUI = new HttpChannelNavUI();\r\n        }\r\n        else {\r\n            channels = channelNoUIs;\r\n        }\r\n        let channel = channels[this.uq];\r\n        if (channel !== undefined) return channel;\r\n        let uqToken = appUq(this.uq); //, this.uqOwner, this.uqName);\r\n        this.token = uqToken.token;\r\n        channel = new HttpChannel(false, uqToken.url, uqToken.token, channelUI);\r\n        return channels[this.uq] = channel;\r\n    }\r\n\r\n\r\n    async update():Promise<string> {\r\n        return await this.get('update');\r\n    }\r\n\r\n    async __loadAccess():Promise<any> {\r\n        let acc = this.access === undefined?\r\n            '' :\r\n            this.access.join('|');\r\n        let ret = await this.get('access', {acc:acc});\r\n        return ret;\r\n    }\r\n\r\n    async loadAccess():Promise<any> {\r\n        return await localUqs.loadAccess(this);\r\n    }\r\n\r\n    async loadEntities():Promise<any> {\r\n        return await this.get('entities');\r\n    }\r\n\r\n    async checkAccess():Promise<boolean> {\r\n        return await localUqs.checkAccess(this);\r\n    }\r\n\r\n    async schema(name:string):Promise<any> {\r\n        return await this.get('schema/' + name);\r\n    }\r\n\r\n    async schemas(names:string[]):Promise<any[]> {\r\n        return await this.post('schema', names);\r\n    }\r\n\r\n    async tuidGet(name:string, id:number):Promise<any> {\r\n        return await this.get('tuid/' + name + '/' + id);\r\n    }\r\n\r\n    async tuidGetAll(name:string):Promise<any[]> {\r\n        return await this.get('tuid-all/' + name + '/');\r\n    }\r\n\r\n    async tuidSave(name:string, params):Promise<any> {\r\n        return await this.post('tuid/' + name, params);\r\n    }\r\n\r\n    async tuidSearch(name:string, arr:string, owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        let ret = await this.post('tuids/' + name, {\r\n            arr: arr,\r\n            owner: owner,\r\n            key: key,\r\n            pageStart: pageStart,\r\n            pageSize: pageSize\r\n        });\r\n        return ret;\r\n    }\r\n    async tuidArrGet(name:string, arr:string, owner:number, id:number):Promise<any> {\r\n        return await this.get('tuid-arr/' + name + '/' + owner + '/' + arr + '/' + id);\r\n    }\r\n    async tuidArrGetAll(name:string, arr:string, owner:number):Promise<any[]> {\r\n        return await this.get('tuid-arr-all/' + name + '/' + owner + '/' + arr + '/');\r\n    }\r\n    async tuidArrSave(name:string, arr:string, owner:number, params):Promise<any> {\r\n        return await this.post('tuid-arr/' + name + '/' + owner + '/' + arr + '/', params);\r\n    }\r\n    async tuidArrPos(name:string, arr:string, owner:number, id:number, order:number):Promise<any> {\r\n        return await this.post('tuid-arr-pos/' + name + '/' + owner + '/' + arr + '/', {\r\n            id: id,\r\n            $order: order\r\n        });\r\n    }\r\n\r\n    async tuidIds(name:string, arr:string, ids:number[]):Promise<any[]> {\r\n        try {\r\n            let url = 'tuidids/' + name + '/';\r\n            if (arr !== undefined) url += arr;\r\n            else url += '$';\r\n            let ret = await this.post(url, ids);\r\n            return ret;\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    async proxied(name:string, proxy:string, id:number):Promise<any> {\r\n        try {\r\n            let url = 'tuid-proxy/' + name + '/' + proxy + '/' + id;\r\n            let ret = await this.get(url);\r\n            return ret;\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    async sheetSave(name:string, data:object):Promise<any> {\r\n        return await this.post('sheet/' + name, data);\r\n    }\r\n\r\n    async sheetAction(name:string, data:object) {\r\n        return await this.put('sheet/' + name, data);\r\n    }\r\n\r\n    async stateSheets(name:string, data:object) {\r\n        return await this.post('sheet/' + name + '/states', data);\r\n    }\r\n\r\n    async stateSheetCount(name:string):Promise<any> {\r\n        return await this.get('sheet/' + name + '/statecount');\r\n    }\r\n\r\n    async mySheets(name:string, data:object) {\r\n        return await this.post('sheet/' + name + '/my-sheets', data);\r\n    }\r\n\r\n    async getSheet(name:string, id:number):Promise<any> {\r\n        return await this.get('sheet/' + name + '/get/' + id);\r\n    }\r\n\r\n    async sheetArchives(name:string, data:object):Promise<any> {\r\n        return await this.post('sheet/' + name + '/archives', data);\r\n    }\r\n\r\n    async sheetArchive(name:string, id:number):Promise<any> {\r\n        return await this.get('sheet/' + name + '/archive/' + id);\r\n    }\r\n\r\n    async action(name:string, data:object):Promise<any> {\r\n        return await this.post('action/' + name, data);\r\n    }\r\n\r\n    async page(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\r\n        let p:any;\r\n        switch (typeof params) {\r\n            case 'undefined': p = {key: ''}; break;\r\n            default: p = _.clone(params); break;\r\n        }\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        return await this.post('query-page/' + name, p);\r\n    }\r\n\r\n    async query(name:string, params:any):Promise<any> {\r\n        let ret = await this.post('query/' + name, params);\r\n        return ret;\r\n    }\r\n/*\r\n    async history(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\r\n        let p = _.clone(params);\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        let ret = await this.post('history/' + name, p);\r\n        return ret;\r\n    }\r\n\r\n    async book(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\r\n        let p = _.clone(params);\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        let ret = await this.post('history/' + name, p);\r\n        return ret;\r\n    }\r\n*/\r\n    async user():Promise<any> {\r\n        return await this.get('user');\r\n    }\r\n}\r\n\r\nlet channels:{[unitId:number]: HttpChannel} = {};\r\n\r\nexport function logoutUnitxApis() {\r\n    channels = {};\r\n}\r\n\r\nexport class UnitxApi extends UqApi {\r\n    private unitId:number;\r\n    constructor(unitId:number) {\r\n        super('tv/', undefined, undefined, undefined, true);\r\n        this.unitId = unitId;\r\n    }\r\n\r\n    protected async getHttpChannel(): Promise<HttpChannel> {\r\n        let channel = channels[this.unitId];\r\n        if (channel !== undefined) return channel;\r\n        return channels[this.unitId] = await this.buildChannel();\r\n    }\r\n\r\n    private async buildChannel():Promise<HttpChannel> {\r\n        let channelUI = new HttpChannelNavUI();\r\n        let centerAppApi = new CenterAppApi('tv/', undefined);\r\n        let ret = await centerAppApi.unitxUq(this.unitId);\r\n        let {token, url, urlDebug} = ret;\r\n        let realUrl = host.getUrlOrDebug(url, urlDebug);\r\n        this.token = token;\r\n        return new HttpChannel(false, realUrl, token, channelUI);\r\n    }\r\n}\r\n\r\nlet centerHost:string;\r\n\r\nexport function setCenterUrl(url:string) {\r\n    console.log('setCenterUrl %s', url);\r\n    centerHost = url;\r\n    centerToken = undefined;\r\n    centerChannel = undefined;\r\n    centerChannelUI = undefined;\r\n}\r\n\r\nexport let centerToken:string|undefined = undefined;\r\n\r\nlet loginedUserId:number = 0;\r\nexport function setCenterToken(userId:number, t?:string) {\r\n    loginedUserId = userId;\r\n    centerToken = t;\r\n    console.log('setCenterToken %s', t);\r\n    centerChannel = undefined;\r\n    centerChannelUI = undefined;\r\n}\r\n\r\nlet centerChannelUI:HttpChannel;\r\nlet centerChannel:HttpChannel;\r\nfunction getCenterChannelUI():HttpChannel {\r\n    if (centerChannelUI !== undefined) return centerChannelUI;\r\n    return centerChannelUI = new HttpChannel(true, centerHost, centerToken, new HttpChannelNavUI());\r\n}\r\nfunction getCenterChannel():HttpChannel {\r\n    if (centerChannel !== undefined) return centerChannel;\r\n    return centerChannel = new HttpChannel(true, centerHost, centerToken);\r\n}\r\n\r\nexport abstract class CenterApi extends ApiBase {\r\n    constructor(path: string, showWaiting?: boolean) {\r\n        super(path, showWaiting);\r\n    }\r\n\r\n    protected async getHttpChannel(): Promise<HttpChannel> {\r\n        return (this.showWaiting === true || this.showWaiting === undefined)?\r\n            getCenterChannelUI():\r\n            getCenterChannel();\r\n    }\r\n}\r\n\r\nconst uqTokens = 'uqTokens';\r\nexport class UqTokenApi extends CenterApi {\r\n    private local: UqLocals;\r\n    async uq(params: {unit:number, uqOwner:string, uqName:string}):Promise<any> {\r\n        try {\r\n            let {unit:unitParam, uqOwner, uqName} = params;\r\n            if (this.local === undefined) {\r\n                let ls = localStorage.getItem(uqTokens);\r\n                if (ls !== null) {\r\n                    this.local = JSON.parse(ls);\r\n                }\r\n            }\r\n            if (this.local !== undefined) {\r\n                let {unit, user} = this.local;\r\n                if (unit !== unitParam || user !== loginedUserId) this.local = undefined;\r\n            }\r\n            if (this.local === undefined) {\r\n                this.local = {\r\n                    user: loginedUserId,\r\n                    unit: params.unit,\r\n                    uqs: {}\r\n                };\r\n            }\r\n\r\n            let un = uqOwner+'/'+uqName;\r\n            let nowTick = new Date().getTime();\r\n            let uq = this.local.uqs[un];\r\n            if (uq !== undefined) {\r\n                let {tick, value} = uq;\r\n                if (value !== undefined && (nowTick - tick) < 24*3600*1000) {\r\n                    return _.clone(value);\r\n                }\r\n            }\r\n            let ret = await this.get('app-uq', params);\r\n            if (ret === undefined) {\r\n                let {unit, uqOwner, uqName} = params;\r\n                let err = `center get app-uq(unit=${unit}, '${uqOwner}/${uqName}') - not exists or no unit-service`;\r\n                throw err;\r\n            }\r\n\r\n            this.local.uqs[un] = {\r\n                tick: nowTick,\r\n                value: ret,\r\n            }\r\n            localStorage.setItem(uqTokens, JSON.stringify(this.local));\r\n            return _.clone(ret);\r\n        }\r\n        catch (err) {\r\n            this.local = undefined;\r\n            localStorage.removeItem(uqTokens);\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport const uqTokenApi = new UqTokenApi('tv/tie/', undefined);\r\n\r\nexport class CallCenterApi extends CenterApi {\r\n    directCall(url:string, method:string, body:any):Promise<any> {\r\n        return this.call(url, method, body);\r\n    }\r\n}\r\nexport const callCenterapi = new CallCenterApi('', undefined);\r\n\r\nexport interface App {\r\n    id: number;\r\n    uqs: AppUq[];\r\n}\r\n\r\nexport interface AppUq {\r\n    id: number;\r\n    uqOwner: string;\r\n    uqName: string;\r\n    access: string;\r\n}\r\n\r\nexport interface UqService {\r\n    id: number;\r\n    url: string;\r\n    urlDebug: string;\r\n    token: string;\r\n}\r\n\r\nconst appUqs = 'appUqs';\r\n\r\nexport class CenterAppApi extends CenterApi {\r\n    private cachedUqs: App;\r\n    async uqs(appOwner:string, appName:string):Promise<App> {\r\n        let ret:any;\r\n        let ls = localStorage.getItem(appUqs);\r\n        if (ls !== null) {\r\n            let rLs = JSON.parse(ls);\r\n            let {appOwner:rAppOwner, appName:rAppName, value} = rLs;\r\n            if (appOwner === rAppOwner && appName === rAppName) ret = value;\r\n        }\r\n        if (ret === undefined) {\r\n            ret = await this.uqsPure(appOwner, appName);\r\n            let obj = {\r\n                appOwner:appOwner, \r\n                appName:appName, \r\n                value: ret,\r\n            }\r\n            localStorage.setItem(appUqs, JSON.stringify(obj));\r\n        }\r\n        return this.cachedUqs = _.cloneDeep(ret);\r\n    }\r\n    private async uqsPure(appOwner:string, appName:string):Promise<App> {\r\n        return await this.get('tie/app-uqs', {appOwner:appOwner, appName:appName});\r\n    }\r\n    async checkUqs(appOwner:string, appName:string):Promise<boolean> {\r\n        let ret = await this.uqsPure(appOwner, appName);\r\n        let {id:cachedId, uqs:cachedUqs} = this.cachedUqs;\r\n        let {id:retId, uqs:retUqs} = ret;\r\n        if (cachedId !== retId) return false;\r\n        if (cachedUqs.length !== retUqs.length) return false;\r\n        let len = cachedUqs.length;\r\n        for (let i=0; i<len; i++) {\r\n            if (_.isMatch(cachedUqs[i], retUqs[i]) === false) return false;\r\n        }\r\n        return true;\r\n    }\r\n    async unitxUq(unit:number):Promise<UqService> {\r\n        return await this.get('tie/unitx-uq', {unit:unit});\r\n    }\r\n    async changePassword(param: {orgPassword:string, newPassword:string}) {\r\n        return await this.post('tie/reset-password', param);\r\n    }\r\n}\r\n\r\nexport async function loadAppUqs(appOwner:string, appName:string): Promise<App> {\r\n    let centerAppApi = new CenterAppApi('tv/', undefined);\r\n    //let unit = meInFrame.unit;\r\n    let ret = await centerAppApi.uqs(appOwner, appName);\r\n    centerAppApi.checkUqs(appOwner, appName).then(v => {\r\n        if (v === false) {\r\n            localStorage.removeItem(appUqs);\r\n            nav.start();\r\n        }\r\n    });\r\n    return ret;\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Controller } from 'tonva';\r\n\r\nexport abstract class Link {\r\n    abstract onClick: () => void;\r\n    abstract render(className?:string):JSX.Element;\r\n}\r\n\r\nexport class CLink extends Link {\r\n    private controller: Controller;\r\n    protected icon:string|JSX.Element;\r\n    protected label:string|JSX.Element;\r\n\r\n    constructor(controller:Controller) {\r\n        super();\r\n        this.controller = controller;\r\n        this.icon = controller.icon;\r\n        this.label = controller.label;\r\n    }\r\n\r\n    onClick = async () => {\r\n        await this.controller.start();\r\n    }\r\n\r\n    render(className?:string) {\r\n        return <div\r\n            className={classNames('px-3', 'py-2', 'align-items-center', 'cursor-pointer', className)}\r\n            onClick={this.onClick}>\r\n            {this.icon} &nbsp; {this.label}\r\n        </div>;\r\n        //return React.createElement(this.view, className);\r\n    }\r\n}\r\n","export * from './cLink';\r\n","\r\nlet subAppWindow:Window;\r\nfunction postWsToSubApp(msg:any) {\r\n    if (subAppWindow === undefined) return;\r\n    subAppWindow.postMessage({\r\n        type: 'ws',\r\n        msg: msg\r\n    }, '*');\r\n}\r\n\r\nexport function setSubAppWindow(win:Window) {\r\n    subAppWindow = win;\r\n}\r\n\r\nexport function postWsToTop(msg:any) {\r\n    window.top.postMessage({\r\n        type: 'ws',\r\n        msg: msg\r\n    }, '*');\r\n}\r\n\r\nexport abstract class WsBase {\r\n    wsBaseId:string;\r\n    private handlerSeed = 1;\r\n    private anyHandlers:{[id:number]:(msg:any)=>Promise<void>} = {};\r\n    private msgHandlers:{[id:number]:{type:string, handler:(msg:any)=>Promise<void>}} = {};\r\n    onWsReceiveAny(handler:(msg:any)=>Promise<void>):number {\r\n        let seed = this.handlerSeed++;\r\n        this.anyHandlers[seed] = handler;\r\n        return seed;\r\n    }\r\n    onWsReceive(type:string, handler:(msg:any)=>Promise<void>):number {\r\n        let seed = this.handlerSeed++;\r\n        this.msgHandlers[seed] = {type:type, handler: handler};\r\n        return seed;\r\n    }\r\n    endWsReceive(handlerId:number) {\r\n        delete this.anyHandlers[handlerId];\r\n        delete this.msgHandlers[handlerId];\r\n    }\r\n    async receive(msg:any) {\r\n        let {$type} = msg;\r\n        for (let i in this.anyHandlers) {\r\n            await this.anyHandlers[i](msg);\r\n        }\r\n        for (let i in this.msgHandlers) {\r\n            let {type, handler} = this.msgHandlers[i];\r\n            if (type !== $type) continue;\r\n            await handler(msg);\r\n        }\r\n    }\r\n}\r\n\r\nlet wsBaseSeed = 1;\r\nexport class WsBridge extends WsBase {\r\n    wsBaseId:string = 'WsBridge seed ' + wsBaseSeed++;\r\n}\r\n\r\nexport const wsBridge = new WsBridge();\r\n\r\nexport class WSChannel extends WsBase {\r\n    wsBaseId:string = 'WSChannel seed ' + wsBaseSeed++;\r\n    static centerToken:string;\r\n    private wsHost: string;\r\n    private token: string;\r\n    private ws: WebSocket;\r\n\r\n    constructor(wsHost: string, token: string) {\r\n        super();\r\n        this.wsHost = wsHost;\r\n        this.token = token;\r\n    }\r\n\r\n    static setCenterToken(token?: string) {\r\n        WSChannel.centerToken = token;\r\n    }\r\n    \r\n    connect():Promise<void> {\r\n        //this.wsHost = wsHost;\r\n        //this.token = token || WSChannel.centerToken;\r\n        if (this.ws !== undefined) return;\r\n        let that = this;\r\n        return new Promise((resolve, reject) => {\r\n            let ws = new WebSocket(this.wsHost, this.token || WSChannel.centerToken);\r\n            console.log('connect webSocket %s', this.wsHost);\r\n            ws.onopen = (ev) => {\r\n                console.log('webSocket connected %s', this.wsHost);\r\n                that.ws = ws;\r\n                resolve();\r\n            };\r\n            ws.onerror = (ev) => {\r\n                reject('webSocket can\\'t open!');\r\n            };\r\n            ws.onmessage = async (msg) => await that.wsMessage(msg);\r\n            ws.onclose = (ev) => {\r\n                that.ws = undefined;\r\n                console.log('webSocket closed!');\r\n            }\r\n        });\r\n    }\r\n    close() {\r\n        if (this.ws !== undefined) {\r\n            this.ws.close();\r\n            this.ws = undefined;\r\n        }\r\n    }\r\n    private async wsMessage(event:any):Promise<void> {\r\n        try {\r\n            console.log('websocket message: %s', event.data);\r\n            let msg = JSON.parse(event.data);\r\n            postWsToSubApp(msg);\r\n            await this.receive(msg);\r\n        }\r\n        catch (err) {\r\n            console.log('ws msg error: ', err);\r\n        }\r\n    }\r\n    sendWs(msg:any) {\r\n        let netThis = this;\r\n        this.connect().then(() => {\r\n            netThis.ws.send(msg);\r\n        });\r\n    }\r\n}\r\n","const ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\nconst ID_LENGTH = 8;\r\n\r\nexport function uid():string {\r\n    let len = ALPHABET.length;\r\n    let rtn = '';\r\n    for (let i = 0; i < ID_LENGTH; i++) {\r\n        rtn += ALPHABET.charAt(Math.floor(Math.random() * len));\r\n    }\r\n    return rtn;\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { nav } from './nav';\r\n\r\nexport interface ImageProps {\r\n    src: string;\r\n    className?: string;\r\n    style?: React.CSSProperties;\r\n    altImage?: string;\r\n}\r\n\r\nexport function Image(props: ImageProps) {\r\n    let {className, style, src, altImage} = props;\r\n    if (!src) {\r\n        return <div className={classNames(className, 'image-none')} style={style}>\r\n            <i className=\"fa fa-file-o\" />\r\n        </div>;\r\n    }\r\n    if (src.startsWith(':') === true) {\r\n        src = nav.resUrl + src.substr(1);\r\n    }\r\n    return <img src={src} className={className} \r\n        style={style}\r\n        onError={evt=>evt.currentTarget.src=altImage} />;\r\n}\r\n","export const isDevelopment = process.env.NODE_ENV === 'development';\r\n\r\nconst centerHost = process.env['REACT_APP_CENTER_HOST'];\r\nconst centerDebugHost = 'localhost:3000'; //'192.168.86.64';\r\nconst resHost = process.env['REACT_APP_RES_HOST'] || centerHost;\r\nconst resDebugHost = 'localhost:3015'; //'192.168.86.63';\r\nconst uqDebugHost = 'localhost:3015'; //'192.168.86.63';\r\nconst uqDebugBuilderHost = 'localhost:3009';\r\ninterface HostValue {\r\n    value: string;\r\n    local: boolean;\r\n}\r\nconst hosts:{[name:string]:HostValue} = {\r\n    centerhost: {\r\n        value: process.env['REACT_APP_CENTER_DEBUG_HOST'] || centerDebugHost, \r\n        local: false\r\n    },\r\n    reshost: {\r\n        value: process.env['REACT_APP_RES_DEBUG_HOST'] || resDebugHost,\r\n        local: false\r\n    },\r\n    uqhost: {\r\n        value: process.env['REACT_APP_UQ_DEBUG_HOST'] || uqDebugHost, \r\n        local: false\r\n    },\r\n    unitxhost: {\r\n        value: process.env['REACT_APP_UQ_DEBUG_HOST'] || uqDebugHost, \r\n        local: false\r\n    },\r\n    \"uq-build\": {\r\n        value: process.env['REACT_APP_UQ_DEBUG_BUILDER_HOST'] || uqDebugBuilderHost, \r\n        local: false\r\n    }\r\n}\r\n\r\nfunction centerUrlFromHost(host:string) {\r\n    if (host.startsWith('https://') === true) {\r\n        if (host.endsWith('/')) return host;\r\n        return host + '/';\r\n    }\r\n    return `http://${host}/`;\r\n}\r\nfunction centerWsFromHost(host:string) {\r\n    let https = 'https://';\r\n    if (host.startsWith(https) === true) {\r\n        host = host.substr(https.length);\r\n        if (host.endsWith('/') === true) host = host.substr(0, host.length-1);\r\n        return 'wss://' + host + '/tv/';\r\n    }\r\n    return `ws://${host}/tv/`\r\n}\r\n\r\nconst fetchOptions = {\r\n    method: \"GET\",\r\n    mode: \"no-cors\", // no-cors, cors, *same-origin\r\n    headers: {\r\n        \"Content-Type\": \"text/plain\"\r\n    },\r\n};\r\n\r\nclass Host {\r\n    url: string;\r\n    ws: string;\r\n    resHost: string;\r\n\r\n    async start() {\r\n        if (isDevelopment === true) {\r\n            await this.tryLocal();\r\n        }\r\n        let host = this.getCenterHost();\r\n        this.url = centerUrlFromHost(host);\r\n        this.ws = centerWsFromHost(host);\r\n        this.resHost = this.getResHost();\r\n    }\r\n\r\n    private debugHostUrl(host:string) {return `http://${host}/hello`}\r\n    private async tryLocal() {\r\n        let promises:PromiseLike<any>[] = [];\r\n        let hostArr:string[] = [];\r\n        for (let i in hosts) {\r\n            let hostValue = hosts[i];\r\n            let {value} = hostValue;\r\n            if (hostArr.findIndex(v => v === value) < 0) hostArr.push(value);\r\n        }\r\n\r\n        for (let host of hostArr) {\r\n            let fetchUrl = this.debugHostUrl(host);\r\n            promises.push(localCheck(fetchUrl));\r\n        }\r\n        let results = await Promise.all(promises);\r\n        let len = hostArr.length;\r\n        for (let i=0; i<len; i++) {\r\n            let local = results[i];\r\n            let host = hostArr[i];\r\n            for (let j in hosts) {\r\n                let hostValue = hosts[j];\r\n                if (hostValue.value === host) {\r\n                    hostValue.local = local;\r\n                }\r\n            }\r\n        }\r\n        /*\r\n        let p = 0;\r\n        for (let i in hosts) {\r\n            let hostValue = hosts[i];\r\n            hostValue.local = results[p];\r\n            ++p;\r\n        }\r\n        */\r\n    }\r\n\r\n    private getCenterHost():string {\r\n        let {value, local} = hosts.centerhost;\r\n        let hash = document.location.hash;\r\n        if (hash.includes('sheet_debug') === true) {\r\n            return value;\r\n        }\r\n        if (isDevelopment === true) {\r\n            if (local === true) return value;\r\n        }\r\n        return centerHost;\r\n    }\r\n\r\n    private getResHost():string {\r\n        let {value, local} = hosts.reshost;\r\n        let hash = document.location.hash;\r\n        if (hash.includes('sheet_debug') === true) {\r\n            return value;\r\n        }\r\n        if (isDevelopment === true) {\r\n            if (local === true) return value;\r\n        }\r\n        return resHost;\r\n    }\r\n\r\n    getUrlOrDebug(url:string, urlDebug:string):string {\r\n        if (isDevelopment !== true) return url;\r\n        if (!urlDebug) return url;\r\n        for (let i in hosts) {\r\n            let host = hosts[i];\r\n            let {value, local} = host;\r\n            let hostString = `://${i}/`;\r\n            let pos = urlDebug.indexOf(hostString);\r\n            if (pos > 0) {\r\n                if (local === false) return url;\r\n                urlDebug = urlDebug.replace(hostString, `://${value}/`);\r\n                return urlDebug;\r\n            }\r\n        }\r\n        return url;\r\n    }\r\n\r\n    async localCheck(urlDebug: string):Promise<boolean> {\r\n        return await localCheck(urlDebug);\r\n    }\r\n}\r\n\r\nexport const host:Host = new Host();\r\n\r\n// 因为测试的都是局域网服务器，甚至本机服务器，所以一秒足够了\r\n// 网上找了上面的fetch timeout代码。\r\n// 尽管timeout了，fetch仍然继续，没有cancel\r\n\r\n// 实际上，一秒钟不够。web服务器会自动停。重启的时候，可能会比较长时间。也许两秒甚至更多。\r\n//const timeout = 2000;\r\nconst timeout = 200;\r\n\r\nfunction fetchLocalCheck(url:string):Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      fetch(url, fetchOptions as any)\r\n      .then(v => {\r\n          v.text().then(resolve).catch(reject);\r\n      })\r\n      .catch(reject);\r\n      const e = new Error(\"Connection timed out\");\r\n      setTimeout(reject, timeout, e);\r\n    });\r\n}\r\n\r\nasync function localCheck(url:string):Promise<boolean> {\r\n    try {\r\n        await fetchLocalCheck(url);\r\n        return true;\r\n    }\r\n    catch (err) {\r\n        return false;\r\n    }\r\n}\r\n","import jwtDecode from 'jwt-decode';\r\n\r\nexport interface Unit {\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\nexport interface Guest {\r\n    id: number;             // id = 0\r\n    guest: number;\r\n    token: string;\r\n}\r\n\r\nexport interface User extends Guest {\r\n    id: number;\r\n    name: string;\r\n    nick?: string;\r\n    icon?: string;\r\n}\r\n\r\n/*\r\nexport class UserInNav {\r\n    private user: User;\r\n    constructor(user: User) {\r\n        this.user = user;\r\n    }\r\n    get id():number {return this.user.id}\r\n    get name(): string {return this.user.name}\r\n    get nick(): string {return this.user.nick}\r\n    get icon(): string {return this.user.icon || ('http://' + process.env['REACT_APP_CENTER_HOST'] + '/imgs/Bear-icon.png');}\r\n    get guest(): number {return this.user.guest}\r\n    get token(): string {return this.user.token}\r\n}\r\n*/\r\nexport function decodeUserToken(token: string): User {\r\n    let ret:any = jwtDecode(token);\r\n    let user: User = {\r\n        id: ret.id,\r\n        name: ret.name,\r\n        guest: ret.guest,\r\n        token: token,\r\n    };\r\n    return user;\r\n}\r\n\r\nexport function decodeGuestToken(token: string): Guest {\r\n    let ret:any = jwtDecode(token);\r\n    let guest: Guest = {\r\n        id: 0,\r\n        guest: ret.guest,\r\n        token: token,\r\n    };\r\n    return guest;\r\n}\r\n","import * as React from 'react';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { Rule, FieldRule } from '../form/rules';\r\n\r\nexport abstract class ItemEdit {\r\n    protected name: string;\r\n    protected itemSchema: ItemSchema;\r\n    protected uiItem:UiItem;\r\n    protected value: any;\r\n    protected label: string;\r\n\r\n    @observable protected error: string;\r\n    @observable protected isChanged: boolean = false;\r\n    protected newValue: any;\r\n\r\n    constructor(itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any) {\r\n        this.itemSchema = itemSchema;\r\n        this.uiItem = uiItem\r\n        this.value = value;\r\n        let {name} = itemSchema;\r\n        this.name = name;\r\n        this.label = label;\r\n    }\r\n    async start():Promise<any> {\r\n        return await this.internalStart();\r\n    }\r\n\r\n    protected abstract internalStart():Promise<any>;\r\n\r\n    async end():Promise<any> {\r\n        await this.internalEnd()\r\n    }\r\n\r\n    protected async internalEnd():Promise<void> {nav.pop()}\r\n\r\n    protected verifyValue() {\r\n        if (this.uiItem === undefined) return;\r\n        let {rules} = this.uiItem;\r\n        if (rules === undefined) return;\r\n        let nv = this.newValue;\r\n        function verifyRule(rule:FieldRule, value: any):string {\r\n            let error = rule(nv);\r\n            if (error !== undefined) {\r\n                if (typeof error !== 'object')\r\n                    return error;\r\n                else\r\n                    return JSON.stringify(error);\r\n            }\r\n        }\r\n        if (Array.isArray(rules)) {\r\n            for (let rule of rules) {\r\n                let error = verifyRule(rule as FieldRule, nv);\r\n                if (error !== undefined) {\r\n                    this.error = error;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.error = verifyRule(rules as FieldRule, nv);\r\n        }\r\n    }\r\n}\r\n","const ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\nconst ID_LENGTH = 8;\r\n\r\nexport function uid():string {\r\n    let len = ALPHABET.length;\r\n    let rtn = '';\r\n    for (let i = 0; i < ID_LENGTH; i++) {\r\n        rtn += ALPHABET.charAt(Math.floor(Math.random() * len));\r\n    }\r\n    return rtn;\r\n}\r\n","import * as React from 'react';\r\nimport { SearchBox, List, Muted, LMR } from 'tonva';\r\nimport { TuidMain, Entity } from '../../entities';\r\nimport { Page } from 'tonva';\r\nimport { CLink } from '../link';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CTuidMain, TuidUI } from './cTuid';\r\n\r\nexport class VTuidMain extends VEntity<TuidMain, TuidUI, CTuidMain> {\r\n    protected controller: CTuidMain;\r\n    onNew = () => this.event('new');\r\n    onList = () => this.event('list');\r\n    onSearch = async (key:string) => this.event('list', key);\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected entityRender(link: CLink, index: number): JSX.Element {\r\n        return link.render();\r\n    }\r\n\r\n    protected async entityClick(link: CLink) {\r\n        await link.onClick();\r\n    }\r\n\r\n    protected get view() {\r\n        let {label, proxyLinks, isFrom} = this.controller;\r\n        let newButton:any;\r\n        if (isFrom === false) newButton = <button className=\"btn btn-outline-success ml-2\" onClick={this.onNew}>新增</button>;\r\n        let content:any;\r\n        if (proxyLinks === undefined) {\r\n            let right = <>\r\n                {newButton}\r\n                <button className=\"btn btn-outline-info ml-2\" onClick={this.onList}>全部</button>\r\n            </>;\r\n            content = <LMR className='m-3' right={right}>\r\n                <SearchBox className=\"w-100\" size=\"md\"\r\n                    onSearch={this.onSearch} \r\n                    placeholder={'搜索'+label} />\r\n            </LMR>;\r\n        }\r\n        else {\r\n            content = <List className=\"my-2\"\r\n                header={<Muted>{label} 代理下列Tuid</Muted>}\r\n                items={proxyLinks}\r\n                item={{render: this.entityRender, onClick:this.entityClick}} />\r\n        }\r\n        return () => <Page header={label}>\r\n            {content}\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { FA } from 'tonva';\r\nimport { Page } from 'tonva';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CTuidMain, TuidUI } from './cTuid';\r\nimport { TuidMain, Tuid } from '../../entities';\r\n\r\nexport type TypeVTuidEdit = typeof VTuidEdit;\r\n\r\nexport class VTuidEdit extends VEntity<Tuid, TuidUI, CTuidMain> {\r\n    private vForm: VForm;\r\n    private id: number;\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        if (param !== undefined) {\r\n            this.id = param.id;\r\n        }\r\n        this.openPage(this.editView);\r\n    }\r\n\r\n    protected get editView() {\r\n        return () => <Page header={(this.id===undefined? '新增':'编辑') + ' - ' + this.label}>\r\n            {this.vForm.render('py-3')}\r\n        </Page>;\r\n    }\r\n\r\n    protected next = async () => {\r\n        this.vForm.reset();\r\n        this.closePage();\r\n    }\r\n\r\n    protected finish = () => {\r\n        this.closePage(2);\r\n        this.event('edit-end');\r\n    }\r\n\r\n    protected resetForm() {\r\n        this.vForm.reset();\r\n    }\r\n\r\n    protected onSubmit = async () => {\r\n        let values = this.vForm.getValues();\r\n        let ret = await this.controller.entity.save(this.id, values);\r\n        let {id} = ret;\r\n        if (id < 0) {\r\n            let {unique} = this.controller.entity;\r\n            if (unique !== undefined) {\r\n                for (let u of unique) {\r\n                    this.vForm.setError(u, '不能重复');\r\n                }\r\n            }\r\n            return;\r\n        }\r\n        if (this.controller.isCalling) {\r\n            this.returnCall(id);\r\n            this.closePage();\r\n            return;\r\n        }\r\n        this.openPageElement(<Page header={this.label + '提交成功'} back=\"none\">\r\n            <div className='m-3'>\r\n                <span className=\"text-success\">\r\n                    <FA name='check-circle' size='lg' /> 成功提交！\r\n                </span>\r\n                <div className='mt-5'>\r\n                    <button className=\"btn btn-primary mr-3\" onClick={this.next}>继续录入</button>\r\n                    <button className=\"btn btn-outline-primary\" onClick={this.finish}>不继续</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n\r\n        this.event('item-changed', {id: this.id, values: values});\r\n        return;\r\n    }\r\n\r\n    //protected view = TuidNewPage;\r\n}\r\n/*\r\nconst TuidNewPage = observer(({vm}:{vm:VmTuidEdit}) => {\r\n    let {label, id, vmForm} = vm;\r\n    return <Page header={(id===undefined? '新增':'编辑') + ' - ' + label}>\r\n        {vmForm.render('mx-3 my-2')}\r\n    </Page>;\r\n});\r\n*/","import { nav, Page } from 'tonva';\r\nimport { VTuidMainListBase, VTuidDivListBase } from './vTuidList';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Tuid } from '../../entities';\r\nimport { CTuid, TuidUI } from './cTuid';\r\nimport { SearchBox, List } from 'tonva';\r\nimport React from 'react';\r\nimport { RowContent } from '../form/viewModel';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class VTuidSelect extends VEntity<Tuid, TuidUI, CTuid<Tuid>> {\r\n    protected mainRowContent: (row:any) => JSX.Element;\r\n    protected divRowContent: (row:any) => JSX.Element;\r\n\r\n    async open(param?:any): Promise<void> {\r\n        if (param === undefined)\r\n            await this.showMain(param);\r\n        else\r\n            await this.showDiv(param);\r\n    }\r\n\r\n    private async showMain(param) {\r\n        this.mainRowContent = this.ui.rowContent || RowContent;\r\n        await this.controller.searchMain(param);\r\n        this.openPage(this.mainView);\r\n    }\r\n\r\n    private async showDiv(ownerValue: any) {\r\n        let {divs} = this.ui;\r\n        if (divs !== undefined) {\r\n            this.divRowContent = divs[this.entity.name].rowContent;\r\n        }\r\n        if (this.divRowContent === undefined) {\r\n            this.divRowContent = RowContent;\r\n        }\r\n        let divItems = await this.controller.getDivItems(ownerValue);\r\n        this.openPage(this.divView, {items: divItems});\r\n    }\r\n\r\n    protected mainView = observer(() => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearchMain} placeholder={'搜索'+this.label} />;\r\n        return <Page header={header} back=\"close\">\r\n            <List\r\n                items={this.controller.PageItems.items}\r\n                item={{render: this.renderMainRow, onClick: this.clickMainRow}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    });\r\n\r\n    onSearchMain = async (key:string) => {\r\n        await this.controller.searchMain(key);\r\n        //await this.PageItems.first(key);\r\n    }\r\n    renderMainRow = (item:any, index:number):JSX.Element => <this.mainRowContent {...item} />;\r\n    clickMainRow = async (item:any) => {\r\n        this.ceasePage();\r\n        if (this.controller.entity.owner === undefined) {\r\n            this.returnCall(item);\r\n            return;\r\n        }\r\n        await this.showDiv(this.entity.getIdFromObj(item));\r\n    }\r\n\r\n    protected divView = (param:any) => {\r\n        return <Page header=\"选择Div\">\r\n            <List\r\n                items={param.items}\r\n                item={{render: this.renderDivRow, onClick: this.clickDivRow}} />\r\n        </Page>;\r\n    }\r\n    renderDivRow = (item:any, index:number):JSX.Element => <this.divRowContent {...item} />;\r\n    clickDivRow = (item:any) => {\r\n        this.ceasePage();\r\n        this.returnCall(item);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { FA } from 'tonva';\r\nimport { Page } from 'tonva';\r\nimport { jsonStringify } from '../../tools';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { TuidMain } from '../../entities';\r\nimport { TuidUI, CTuidMain } from './cTuid';\r\n\r\nexport type TypeVTuidView = typeof VTuidView;\r\n\r\nexport class VTuidView extends VEntity<TuidMain, TuidUI, CTuidMain> {\r\n    vForm: VForm;\r\n    id: number;\r\n\r\n    protected buildForm(param:any) {\r\n        this.vForm = this.createForm(undefined, param);\r\n    }\r\n\r\n    async open(param:any) {\r\n        this.buildForm(param);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    render(param:any) {\r\n        this.buildForm(param);\r\n        return this.vForm.render();\r\n    }\r\n\r\n    async loadId(id: number) {\r\n        this.id = id;\r\n    }\r\n\r\n    protected next = async () => {\r\n        this.vForm.reset();\r\n        this.closePage();\r\n    }\r\n\r\n    protected finish = () => {\r\n        this.closePage(2);\r\n    }\r\n\r\n    protected resetForm() {\r\n        this.vForm.reset();\r\n    }\r\n\r\n    protected onSubmit = async () => {\r\n        let values = this.vForm.getValues();\r\n        let ret = await this.entity.save(this.id, values);\r\n        if (ret) {\r\n            alert('这里还要判断返回值，先不处理了 \\n' + jsonStringify(ret));\r\n        }\r\n        this.openPage(() => <Page header={this.label + '提交成功'} back=\"none\">\r\n            <div className='m-3'>\r\n                <span className=\"text-success\">\r\n                    <FA name='check-circle' size='lg' /> 成功提交！\r\n                </span>\r\n                <div className='mt-5'>\r\n                    <button className=\"btn btn-primary mr-3\" onClick={this.next}>继续录入</button>\r\n                    <button className=\"btn btn-outline-primary\" onClick={this.finish}>不继续</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n        return;\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n            {this.vForm.render('py-3')}\r\n    </Page>;\r\n}\r\n","import React from 'react';\r\nimport { VTuidView } from './vTuidView';\r\n\r\nexport class VTuidInfo  extends VTuidView {\r\n/*\r\n    async open(param?:any) {\r\n        this.open(this.view);\r\n    }\r\n*/\r\n/*\r\n    private view = () => {\r\n        return <Page>\r\n            TuidInfo\r\n        </Page>\r\n    }\r\n*/\r\n}\r\n","import { PageItems } from 'tonva';\r\nimport { Tuid } from \"../../entities\";\r\n\r\nexport class TuidPageItems<T> extends PageItems<T> {\r\n    private tuid: Tuid;\r\n    constructor(tuid: Tuid) {\r\n        super(true);\r\n        this.tuid = tuid;\r\n    }\r\n    protected async load(param:any, pageStart:any, pageSize:number):Promise<any[]> {\r\n        let ret = await this.tuid.search(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:any) {\r\n        this.pageStart = item === undefined? 0 : item.id;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { FA, SearchBox, List } from 'tonva';\r\nimport { Page, PageItems } from 'tonva';\r\nimport { jsonStringify } from '../../tools';\r\nimport { TuidMain, Entity, Tuid, TuidDiv } from '../../entities';\r\nimport { VEntity } from '../CVEntity';\r\nimport { TuidUI, CTuidMain, CTuidDiv } from './cTuid';\r\nimport { JSONContent, RowContent } from '../form/viewModel';\r\n\r\nexport abstract class VTuidMainListBase  extends VEntity<TuidMain, TuidUI, CTuidMain> {\r\n    protected rowContent: (row:any) => JSX.Element;\r\n    protected ownerId: number;\r\n\r\n    async open(param?:any) {\r\n        this.rowContent = this.ui.rowContent || RowContent;\r\n        if (this.entity.owner !== undefined) this.ownerId = Number(param);\r\n        // 初始查询, key是空的\r\n        //await this.onSearch('');\r\n        await this.controller.searchMain('');\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSearch = async (key:string) => {\r\n        await this.controller.searchMain(key);\r\n        //await this.PageItems.first(key);\r\n    }\r\n    renderRow = (item:any, index:number):JSX.Element => <this.rowContent {...item} />;\r\n\r\n    protected abstract onSelected(item:any): Promise<void>;\r\n    private callOnSelected(item:any) {\r\n        if (this.onSelected === undefined) {\r\n            alert('onSelect is undefined');\r\n            return;\r\n        }\r\n        this.onSelected(item);\r\n    }\r\n    clickRow = (item:any) => {\r\n        this.callOnSelected(item);\r\n    }\r\n    private rowKey = (item:any) => {\r\n        let {id} = item;\r\n        return id;\r\n    }\r\n    protected view = observer(() => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\r\n        let {owner} = this.entity;\r\n        let ownerTop;\r\n        if (owner !== undefined) {\r\n            let ownerObj = owner.valueFromId(this.ownerId);\r\n            ownerTop = <div>owner: {jsonStringify(ownerObj)}</div>;\r\n        }\r\n        return <Page header={header}>\r\n            {ownerTop}\r\n            <List\r\n                items={this.controller.PageItems.items}\r\n                item={{render: this.renderRow, onClick: this.clickRow, key:this.rowKey}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    });\r\n}\r\n\r\nexport class VTuidMainList extends VTuidMainListBase {\r\n    protected async onSelected(item:any) {\r\n        if (this.controller.isFrom === false)\r\n            this.event('edit', item.id);\r\n        else\r\n            this.event('info', item.id);\r\n    }\r\n}\r\n\r\nexport abstract class VTuidDivListBase  extends VEntity<TuidDiv, TuidUI, CTuidDiv> {\r\n    protected ownerId: number;\r\n\r\n    async open(param?:any) {\r\n        //this.PageItems = new TuidPageItems(this.entity);\r\n        if (this.entity.owner !== undefined) this.ownerId = Number(param);\r\n        // 初始查询, key是空的\r\n        //await this.onSearch('');\r\n        await this.controller.searchMain('');\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSearch = async (key:string) => {\r\n        await this.controller.searchMain(key);\r\n        //await this.PageItems.first(key);\r\n    }\r\n    renderRow = (item:any, index:number):JSX.Element => {\r\n        return <div className=\"px-3 py-2\">{jsonStringify(item)}</div>;\r\n    }\r\n\r\n    protected abstract onSelected(item:any): Promise<void>;\r\n    private callOnSelected(item:any) {\r\n        if (this.onSelected === undefined) {\r\n            alert('onSelect is undefined');\r\n            return;\r\n        }\r\n        this.onSelected(item);\r\n    }\r\n    clickRow = (item:any) => {\r\n        this.callOnSelected(item);\r\n    }\r\n\r\n    protected view = observer(() => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\r\n        let {owner} = this.entity;\r\n        let ownerTop;\r\n        if (owner !== undefined) {\r\n            let ownerObj = owner.valueFromId(this.ownerId);\r\n            ownerTop = <div>owner: {jsonStringify(ownerObj)}</div>;\r\n        }\r\n        return <Page header={header}>\r\n            {ownerTop}\r\n            <List\r\n                items={this.controller.PageItems.items}\r\n                item={{render: this.renderRow, onClick: this.clickRow}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    });\r\n}\r\n\r\nexport class VTuidDivList extends VTuidDivListBase {\r\n    protected async onSelected(item:any) {\r\n        this.event('edit', item.id);\r\n    }\r\n}\r\n","import _ from 'lodash';\r\nimport { TypeVPage, PageItems } from 'tonva';\r\nimport { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { TuidMain, Tuid, TuidDiv } from \"../../entities\";\r\nimport { VTuidMain } from './vTuidMain';\r\nimport { VTuidEdit } from './vTuidEdit';\r\nimport { VTuidSelect } from './vTuidSelect';\r\nimport { CUq } from \"../uq/cUq\";\r\nimport { CLink } from \"../link\";\r\nimport { VTuidInfo } from \"./vTuidInfo\";\r\nimport { TuidPageItems } from \"./pageItems\";\r\nimport { VTuidMainList } from './vTuidList';\r\n\r\nexport interface TuidUI extends EntityUI {\r\n    CTuidMain?: typeof CTuidMain;\r\n    CTuidEdit?: typeof CTuidEdit;\r\n    CTuidList?: typeof CTuidList;\r\n\r\n    CTuidSelect?: typeof CTuidSelect;\r\n    CTuidInfo?: typeof CTuidInfo;\r\n    content?: React.StatelessComponent<any>;\r\n    rowContent?: React.StatelessComponent<any>;\r\n    divs?: {\r\n        [div:string]: {\r\n            CTuidSelect?: typeof CTuidSelect;\r\n            content?: React.StatelessComponent<any>;\r\n            rowContent?: React.StatelessComponent<any>;\r\n        }\r\n    }\r\n}\r\n\r\nexport abstract class CTuid<T extends Tuid> extends CEntity<T, TuidUI> {\r\n    PageItems:PageItems<any>;\r\n\r\n    protected buildPageItems():PageItems<any> {\r\n        return new TuidPageItems(this.entity.owner || this.entity);\r\n    }\r\n\r\n    async searchMain(key:string) {\r\n        if (this.PageItems === undefined) {\r\n            this.PageItems = this.buildPageItems();\r\n        }\r\n        if (key !== undefined) await this.PageItems.first(key);\r\n    }\r\n\r\n    async getDivItems(ownerId:number):Promise<any[]> {\r\n        let ret = await this.entity.searchArr(ownerId, undefined, 0, 1000);\r\n        return ret;\r\n    }\r\n}\r\n\r\nexport abstract class CTuidBase extends CTuid<TuidMain> {\r\n    constructor(cUq: CUq, entity: TuidMain, ui: TuidUI, res:any) {\r\n        super(cUq, entity, ui, res);\r\n        //let tuid = this.entity;\r\n        //this.proxies = tuid.proxies;\r\n        if (this.proxies !== undefined) {\r\n            this.proxyLinks = [];\r\n            for (let i in this.proxies) {\r\n                let link = this.cUq.linkFromName('tuid', i);\r\n                this.proxyLinks.push(link);\r\n            }\r\n        }\r\n    }\r\n\r\n    from():CTuidBase {\r\n        let ret = this.entity.cFrom();\r\n        if (ret === undefined) return this;\r\n        return ret;\r\n    }\r\n\r\n    cUqFrom():CUq {\r\n        return this.entity.cUqFrom();\r\n    }\r\n    cEditFrom(): CTuidEdit {\r\n        let cUq = this.entity.cUqFrom();\r\n        return cUq.cTuidEditFromName(this.entity.name);\r\n    }\r\n    cInfoFrom(): CTuidInfo {\r\n        let cUq = this.entity.cUqFrom();\r\n        return cUq.cTuidInfoFromName(this.entity.name);\r\n    }\r\n    cSelectFrom(): CTuidSelect {\r\n        let cUq = this.entity.cUqFrom();\r\n        return cUq.cTuidSelectFromName(this.entity.name);\r\n    }\r\n\r\n    getLable(tuid:Tuid):string {\r\n        if (tuid === this.entity) return this.label;\r\n        let {name} = tuid;\r\n        let {arrs} = this.res;\r\n        if (arrs !== undefined) {\r\n            let arr = arrs[name];\r\n            if (arr !== undefined) {\r\n                let label = arr.label;\r\n                if (label !== undefined) return label;\r\n            }\r\n        }\r\n        return name;\r\n    }\r\n\r\n    proxies: {[name:string]: TuidMain};\r\n    proxyLinks: CLink[];\r\n    isFrom: boolean;\r\n\r\n    protected get VTuidMain():typeof VTuidMain {return VTuidMain}\r\n    protected get VTuidEdit():typeof VTuidEdit {return VTuidEdit}\r\n    protected get VTuidList():typeof VTuidMainList {return VTuidMainList}\r\n\r\n    protected async internalStart(param?:any):Promise<void> {\r\n        this.isFrom = this.entity.schemaFrom !== undefined;\r\n        await this.openVPage(this.VTuidMain);\r\n    }\r\n\r\n    protected async onEvent(type:string, value:any) {\r\n        //let v: TypeVPage<CTuidMain>;\r\n        switch (type) {\r\n            default: return;\r\n            case 'new': await this.onNew(); break;\r\n            case 'list': await this.onList(); break;\r\n            case 'edit': await this.onEdit(value); return;\r\n            case 'item-changed': this.itemChanged(value); return;\r\n            case 'info': \r\n                let cTuidInfo = new CTuidInfo(this.cUq, this.entity, this.ui, this.res);\r\n                await cTuidInfo.start(value);\r\n                return;\r\n        }\r\n        //await this.openVPage(v, value);\r\n    }\r\n\r\n    protected async edit(values:any) {\r\n        let cTuidEdit = this.ui && this.ui.CTuidEdit;\r\n        if (cTuidEdit === undefined) {\r\n            await this.openVPage(this.VTuidEdit, values);\r\n        }\r\n        else {\r\n            await (new cTuidEdit(this.cUq, this.entity, this.ui, this.res)).start(values);\r\n        }\r\n    }\r\n\r\n    private async onNew() {\r\n        await this.edit(undefined);\r\n    }\r\n\r\n    private async onList() {\r\n        let cTuidList = this.ui && this.ui.CTuidList;\r\n        if (cTuidList === undefined) {\r\n            await this.openVPage(this.VTuidList, undefined);\r\n        }\r\n        else {\r\n            await (new cTuidList(this.cUq, this.entity, this.ui, this.res)).start(undefined);\r\n        }\r\n    }\r\n\r\n    protected async onEdit(id:number) {\r\n        let values:any = undefined;\r\n        if (id !== undefined) {\r\n            values = await this.entity.load(id);\r\n        }\r\n        this.edit(values);\r\n        //await this.openVPage(this.VTuidEdit, values);\r\n    }\r\n\r\n    private itemChanged({id, values}:{id:number, values: any}) {\r\n        if (this.PageItems === undefined) return;\r\n        let items = this.PageItems.items;\r\n        let item = items.find(v => v.id === id);\r\n        if (item !== undefined) {\r\n            _.merge(item, values);\r\n        }\r\n    }\r\n}\r\n\r\nexport class CTuidMain extends CTuidBase {\r\n    protected async internalStart(param?:any):Promise<void> {\r\n        this.isFrom = this.entity.schemaFrom !== undefined;\r\n        await this.openVPage(this.VTuidMain);\r\n    }\r\n\r\n}\r\n\r\nexport class CTuidEdit extends CTuidBase {\r\n    protected async internalStart(id:number):Promise<void> {\r\n        this.isFrom = this.entity.schemaFrom !== undefined;\r\n        if (typeof(id) === 'number') {\r\n            await this.onEdit(id);\r\n        }\r\n        else {\r\n            await this.edit(id);\r\n        }\r\n    }\r\n\r\n    protected async edit(values:any) {\r\n        await this.openVPage(this.VTuidEdit, values);\r\n    }\r\n}\r\n\r\nexport class CTuidList extends CTuidBase {\r\n    protected async internalStart(id:number):Promise<void> {\r\n        this.isFrom = this.entity.schemaFrom !== undefined;\r\n        await this.openVPage(this.VTuidList);\r\n    }\r\n}\r\n\r\nexport class CTuidDiv extends CTuid<TuidDiv> {\r\n    protected async internalStart():Promise<void> {\r\n        alert('tuid div: ' + this.entity.name);\r\n    }\r\n}\r\n\r\nexport class CTuidSelect extends CTuid<Tuid> {\r\n    protected async internalStart(param?: any):Promise<void> {\r\n        await this.openVPage(this.VTuidSelect, param);\r\n    }\r\n    protected async beforeStart():Promise<boolean> {\r\n        //if (await super.beforeStart() === false) return false;\r\n        await this.entity.loadSchema();\r\n        if (this.PageItems !== undefined) this.PageItems.reset();\r\n        return true;\r\n    }\r\n    protected get VTuidSelect():typeof VTuidSelect {return VTuidSelect}\r\n    idFromItem(item:any) {\r\n        return item.id;\r\n    }\r\n}\r\n\r\nexport class CTuidInfo extends CTuid<Tuid> {\r\n    protected async internalStart(id: any):Promise<void> {\r\n        let data = await this.entity.load(id)\r\n        await this.openVPage(this.VTuidInfo, data);\r\n    }\r\n    protected get VTuidInfo():typeof VTuidInfo {return VTuidInfo}\r\n}\r\n","export * from './cTuid';\r\nexport * from './vTuidMain';\r\nexport * from './vTuidEdit';\r\nexport * from './vTuidInfo';\r\nexport * from './vTuidView';\r\nexport * from './vTuidSelect';\r\n","import * as React from 'react';\r\nimport { VField } from './vField';\r\nimport { VArr } from './vArr';\r\nimport { VSubmit } from './vSubmit';\r\nimport { uid } from 'tonva';\r\n\r\nexport abstract class VBand {\r\n    protected label: string;\r\n    protected view = () => <div />;\r\n\r\n    constructor(label:string) {\r\n        this.label = label;\r\n    }\r\n\r\n    render():JSX.Element {\r\n        //text-sm-right\r\n        return <div key={this.key} className=\"px-3\">\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-sm-2 col-form-label\">\r\n                    {this.label}\r\n                </label>\r\n                <div className=\"col-sm-10\">\r\n                    {this.renderContent()}\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    setAddRow(addRow:()=>Promise<void>) {}\r\n    get key() {return this.label}\r\n    public getVFields():VField[] {return;}\r\n    public getVArr():VArr {return;}\r\n    public getVSubmit():VSubmit {return;}\r\n\r\n    protected renderContent():JSX.Element {\r\n        return <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">content</div>;\r\n    }\r\n}\r\n\r\nexport interface FieldRes {\r\n    label: string;\r\n    placeHolder: string;\r\n    suffix: string;\r\n}\r\nexport class VFieldBand extends VBand {\r\n    protected vField:VField;\r\n    constructor(label:string, vField:VField) {\r\n        super(label);\r\n        this.vField = vField;\r\n    }\r\n\r\n    get key() {return this.vField.name}\r\n    public getVFields():VField[] {return [this.vField];}\r\n\r\n    protected renderContent():JSX.Element {\r\n        return this.vField.render();\r\n        /*\r\n        <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">\r\n            {this.vField.render()}\r\n        </div>;*/\r\n    }\r\n}\r\n\r\nexport class VArrBand extends VBand {\r\n    protected vArr:VArr;\r\n    constructor(label:string, vArr:VArr) {\r\n        super(label);\r\n        this.vArr = vArr;\r\n    }\r\n\r\n    setAddRow(addRow:()=>Promise<void>) {this.vArr.setAddRow(addRow)}\r\n    get key() {return this.vArr.name}\r\n    public getVArr():VArr {return this.vArr;}\r\n\r\n    render():JSX.Element {\r\n        return <React.Fragment key={this.key}>\r\n            {this.vArr && this.vArr.render()}\r\n        </React.Fragment>;\r\n    }\r\n}\r\n\r\nexport class VFieldsBand extends VBand {\r\n    protected vFields: VField[];\r\n    constructor(label:string, vFields:VField[]) {\r\n        super(label);\r\n        this.vFields = vFields;\r\n    }\r\n\r\n    get key() {return this.vFields[0].name}\r\n    public getVFields():VField[] {return this.vFields;}\r\n\r\n    protected renderContent():JSX.Element {\r\n        return <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">\r\n            fields\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class VSubmitBand extends VBand {\r\n    protected vSubmit: VSubmit;\r\n    constructor(vSubmit:VSubmit) {\r\n        super(undefined);\r\n        this.vSubmit = vSubmit;\r\n    }\r\n\r\n    get key() {return '$submit'}\r\n\r\n    public getVSubmit():VSubmit {return this.vSubmit;}\r\n\r\n    render():JSX.Element {\r\n        return <div key=\"$submit\" className=\"px-3\">\r\n            <div className=\"form-group row\">\r\n                <div className=\"offset-sm-2 col-sm-10\">\r\n                    {this.vSubmit.render()}\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames'\r\nimport { ViewModel } from \"./viewModel\";\r\nimport { VForm } from './vForm';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\n\r\nexport class VSubmit extends ViewModel {\r\n    private vForm: VForm;\r\n    constructor(vForm: VForm) {\r\n        super();\r\n        this.vForm = vForm;\r\n        this.caption = this.vForm.submitCaption;\r\n        this.className = 'btn btn-primary w-25';\r\n    }\r\n    @observable caption: string;\r\n    @observable className: string;\r\n\r\n    private onClickSubmit = async () => {\r\n        this.vForm.submit();\r\n    }\r\n\r\n    protected view = observer(() => {\r\n        let {isOk} = this.vForm;\r\n        return <button type=\"button\" \r\n            onClick={this.onClickSubmit}\r\n            className={this.className}\r\n            disabled={isOk === false}>\r\n            {this.caption}\r\n        </button>;\r\n    });\r\n}","\r\nexport abstract class Rule {\r\n    abstract check(defy:string[], value:any);\r\n}\r\n\r\nexport class RuleRequired extends Rule {\r\n    check(defy:string[], value:any) {\r\n        switch (typeof value) {\r\n            default:\r\n            case 'boolean': return;\r\n            case 'object':\r\n                if (value !== null) return;\r\n                break;\r\n            case 'string':\r\n                if ((value as string).trim().length > 0) return;\r\n                break;\r\n            case 'number':\r\n                if ((value as number) !== NaN) return;\r\n                break;\r\n            case 'undefined':\r\n                break;\r\n        }\r\n        defy.push('不能为空');\r\n    }\r\n}\r\n\r\nexport class RuleNum extends Rule {\r\n    check(defy:string[], value:any) {\r\n        if (value === undefined || value === null) return;\r\n        let n = Number(value);\r\n        if (n === NaN) defy.push('必须是数字');\r\n    }\r\n}\r\n\r\nexport class RuleInt extends Rule {\r\n    check(defy:string[], value:any) {\r\n        if (value === undefined || value === null) return;\r\n        let n = Number(value);\r\n        if (Number.isNaN(n) === true || Number.isInteger(n) === false) {\r\n            defy.push('必须是整数');\r\n        }\r\n    }\r\n}\r\n\r\nexport class RuleMin extends RuleNum {\r\n    constructor(min: number) {\r\n        super();\r\n        this.min = min;\r\n    }\r\n    min: number;\r\n    check(defy:string[], value:any) {\r\n        super.check(defy, value);\r\n        if (Number(value) < this.min) defy.push('不能小于' + this.min);\r\n    }\r\n}\r\n\r\nexport class RuleMax extends RuleNum {\r\n    constructor(max: number) {\r\n        super();\r\n        this.max = max;\r\n    }\r\n    max: number;\r\n    check(defy:string[], value:any) {\r\n        super.check(defy, value);\r\n        if (Number(value) > this.max) defy.push('不能小于' + this.max);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { computed, action } from 'mobx';\r\nimport classNames from 'classnames';\r\nimport { observer } from 'mobx-react';\r\nimport { FA } from 'tonva';\r\nimport { ViewModel } from \"../viewModel\";\r\nimport { VForm, FormMode } from '../vForm';\r\nimport { Rule, RuleRequired, RuleInt, RuleNum, RuleMin, RuleMax } from '../rule';\r\nimport { Field } from '../../../entities';\r\nimport { FieldRes } from '../vBand';\r\nimport { FieldUI, FieldInputUI, FieldStringUI, FieldNumberUI } from '../../formUI';\r\n\r\nexport abstract class VField extends ViewModel {\r\n    protected form: VForm;\r\n    protected fieldUI: FieldUI;\r\n    protected fieldRes:FieldRes;\r\n    protected field: Field;\r\n    protected rules: Rule[];\r\n    constructor(form:VForm, field:Field, fieldUI: FieldUI, fieldRes:FieldRes) {\r\n        super();\r\n        this.form = form;\r\n        this.field = field;\r\n        this.name = field.name;\r\n        this.fieldUI = fieldUI || {} as any;\r\n        this.fieldRes = fieldRes || {} as any;\r\n        this.init();\r\n    }\r\n\r\n    name: string;\r\n\r\n    protected init() {\r\n        this.buildRules();\r\n    }\r\n\r\n    protected buildRules() {\r\n        this.rules = [];\r\n        let {required} = this.fieldUI;\r\n        if (required === true || this.field !== undefined && this.field.null === false) {\r\n            this.rules.push(new RuleRequired);\r\n        }\r\n    }\r\n\r\n    @computed get checkRules(): string[] {\r\n        let defy = [];\r\n        for (let r of this.rules) r.check(defy, this.value);\r\n        return defy;\r\n    }\r\n\r\n    @computed get isOk() {\r\n        if (this.rules.length === 0) return true;\r\n        let defy = this.checkRules;\r\n        return defy.length === 0;\r\n    }\r\n\r\n    @computed get value() { return this.form.values[this.name]; }\r\n    setValue(v:any) {\r\n        this.form.values[this.name]=v; \r\n    }\r\n    get error() { return this.form.errors[this.name]; }\r\n    set error(err:any) { this.form.errors[this.name]=err; }\r\n    protected parse(str:string):any {return str;}\r\n    get readonly():boolean {\r\n        let {mode} = this.form;\r\n        return mode === FormMode.readonly || \r\n            mode === FormMode.edit && this.fieldUI.editable === false;\r\n    }\r\n}\r\n\r\nexport class VUnknownField extends VField {\r\n    protected view = () => {\r\n        //let {name, type} = this.fieldUI;\r\n        let type='', name = '';\r\n        return <input type=\"text\" className=\"form-control form-control-plaintext border border-info rounded bg-light\"\r\n            placeholder={'unkown control: ' + type + '-' + name} />;\r\n    }\r\n}\r\n\r\nexport abstract class VInputControl extends VField {\r\n    protected fieldUI: FieldInputUI;\r\n    protected input: HTMLInputElement;\r\n\r\n    protected inputType:string;\r\n    protected get maxLength():number {return}\r\n\r\n    protected renderError = (className:string) => {\r\n        let {errors} = this.form;\r\n        let error = errors[this.name];\r\n        if (error === undefined) return;\r\n        return <div className={className}><FA name=\"exclamation-circle\" /> {error}</div>\r\n    }\r\n\r\n    /*\r\n    get value() {\r\n        return super.value;\r\n    }*/\r\n    setValue(v:any) {\r\n        super.setValue(v); this.setInputValue(); \r\n    }\r\n\r\n    protected ref = (input:HTMLInputElement) => {\r\n        this.input = input;\r\n        this.setInputValue();\r\n    }\r\n\r\n    protected setInputValue() {\r\n        if (!this.input) return;\r\n        let v = this.value;\r\n        this.input.value = v === null || v === undefined? '' : v;\r\n    }\r\n\r\n    protected onFocus = () => {\r\n        this.error = undefined;\r\n    }\r\n\r\n    protected onBlur = () => {\r\n        let defy = this.checkRules;\r\n        if (defy.length > 0) {\r\n            this.error = defy[0];\r\n        }\r\n        this.form.computeFields();\r\n    }\r\n\r\n    protected onChange = (evt: React.ChangeEvent<any>) => {\r\n        let v = this.parse(evt.currentTarget.value);\r\n        if (v === null) {\r\n            return;\r\n        }\r\n        this.setValue(v);\r\n    }\r\n\r\n    protected onKeyPress: (event:React.KeyboardEvent<HTMLInputElement>) => void;\r\n    \r\n    protected view = observer(() => {\r\n        let {required} = this.fieldUI;\r\n        let {placeHolder, suffix} = this.fieldRes;\r\n        let ctrlCN = ['form-control', 'form-control-input'];\r\n        let errCN = 'text-danger small mt-1 mx-2';\r\n    \r\n        let redDot;\r\n        let input;\r\n        if (this.readonly === true) {\r\n            input = <input className={classNames(ctrlCN, 'bg-light')}\r\n                ref={this.ref}\r\n                type={this.inputType}\r\n                readOnly={true}\r\n            />;\r\n        }\r\n        else {\r\n            input = <input className={classNames(ctrlCN)}\r\n                ref={this.ref}\r\n                type={this.inputType}\r\n                onFocus={this.onFocus}\r\n                onBlur={this.onBlur}\r\n                onChange={this.onChange}\r\n                placeholder={placeHolder}\r\n                readOnly={false}\r\n                maxLength={this.maxLength}\r\n                onKeyPress={this.onKeyPress}\r\n            />;\r\n            if (required === true || this.field.null === false) {\r\n                redDot = <RedMark />;\r\n            }\r\n        }\r\n\r\n        let inputGroup;\r\n        if (suffix === undefined)\r\n            inputGroup = input;\r\n        else\r\n            inputGroup = <div className=\"input-group\">\r\n                {input}\r\n                <div className=\"input-group-append\">\r\n                    <span className=\"input-group-text\">{suffix}</span>\r\n                </div>\r\n            </div>;\r\n\r\n        return <>\r\n            {redDot}\r\n            {inputGroup}\r\n            {this.renderError(errCN)}\r\n        </>\r\n    });\r\n}\r\n\r\nexport const RedMark = () => <b style={{color:'red', position:'absolute', left:'0.1em', top:'0.5em'}}>*</b>;\r\n\r\nexport class VStringField extends VInputControl {\r\n    protected fieldUI: FieldStringUI;\r\n    protected inputType:string = 'text';\r\n    protected get maxLength():number {return this.field.size}\r\n}\r\n\r\nconst KeyCode_Neg = 45;\r\nconst KeyCode_Dot = 46;\r\n\r\nexport abstract class VNumberControl extends VInputControl {\r\n    protected fieldUI: FieldNumberUI;\r\n    protected extraChars: number[];\r\n\r\n    protected init() {\r\n        super.init();\r\n        this.extraChars = [];\r\n        if (this.fieldUI !== undefined) {\r\n            let {min, max} = this.fieldUI;\r\n            if (min !== undefined) {\r\n                //this.rules.push((v:number) => {if (v === undefined) return; if (v<min) return ErrMin + min; return true;});\r\n                if (min < 0) this.extraChars.push(KeyCode_Neg);\r\n            }\r\n            else {\r\n                this.extraChars.push(KeyCode_Neg);\r\n            }\r\n    \r\n            if (max !== undefined) {\r\n                //this.rules.push((v:number) => {if (v === undefined) return; if (v>max) return ErrMax + max; return true});\r\n            }\r\n        }\r\n        switch (this.field.type) {\r\n            case 'dec':\r\n            case 'bigint':\r\n            case 'int':\r\n            case 'smallint':\r\n            case 'tinyint':\r\n                this.extraChars.push(KeyCode_Dot); break;\r\n        }\r\n    }\r\n\r\n    protected buildRules() {\r\n        super.buildRules();\r\n        this.rules.push(new RuleNum);\r\n        let {min, max} = this.fieldUI;\r\n        if (min !== undefined) this.rules.push(new RuleMin(min));\r\n        if (max !== undefined) this.rules.push(new RuleMax(max));\r\n    }\r\n\r\n    inputType:string = 'number';\r\n\r\n    protected parse(text:string):any {\r\n        try {\r\n            if (text.trim().length === 0) return undefined;\r\n            let ret = Number(text);\r\n            return (ret === NaN)? null : ret;\r\n        }\r\n        catch {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    protected setInputValue() {\r\n        if (!this.input) return;\r\n        let v = this.value;\r\n        if (this.parse(this.input.value) == v) return;\r\n        this.input.value = v === null || v === undefined? '' : v;\r\n    }\r\n\r\n    protected onKeyPress = (event:React.KeyboardEvent<HTMLInputElement>) => {\r\n        let ch = event.charCode;\r\n        if (ch === 8 || ch === 0 || ch === 13 || ch >= 48 && ch <= 57) return;\r\n        if (this.extraChars !== undefined) {\r\n            if (this.extraChars.indexOf(ch) >= 0) {\r\n                switch (ch) {\r\n                    case KeyCode_Dot: this.onKeyDot(); break;\r\n                    case KeyCode_Neg: this.onKeyNeg(); event.preventDefault(); break;\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    private onKeyDot() {\r\n        let v = this.input.value;\r\n        let p = v.indexOf('.');\r\n        if (p >= 0) this.input.value = v.replace('.', '');\r\n    }\r\n    private onKeyNeg() {\r\n        let v = this.input.value;\r\n        let p = v.indexOf('-');\r\n        if (p >= 0) v = v.replace('-', '');\r\n        else v = '-'+v;\r\n        this.input.value = v;\r\n    }\r\n}\r\n\r\nexport class VIntField extends VNumberControl {\r\n    protected buildRules() {\r\n        super.buildRules();\r\n        this.rules.push(new RuleInt);\r\n    }\r\n}\r\n\r\nexport class VDecField extends VNumberControl {\r\n}\r\n\r\nexport class VTextField extends VStringField {\r\n\r\n}\r\n\r\nexport class VDateTimeField extends VStringField {\r\n\r\n}\r\n\r\nexport class VDateField extends VStringField {\r\n\r\n}\r\n","import React from 'react';\r\nimport { VField } from './vField';\r\nimport { Field } from '../../../entities';\r\nimport { VForm } from '../vForm';\r\nimport { observer } from 'mobx-react';\r\nimport { FieldRes } from '../vBand';\r\n\r\nexport class VComputeField extends VField {\r\n    constructor(form:VForm, field: Field, fieldRes: FieldRes) {\r\n        super(form, field, undefined, fieldRes);\r\n    }\r\n    protected view = observer(() => {\r\n        let value = this.form.values[this.field.name];\r\n        let {placeHolder, suffix} = this.fieldRes;\r\n        let ctrlCN = 'form-control form-control-input bg-light';\r\n        if (value === null) value = '';\r\n        let input = <input className={ctrlCN}\r\n            type=\"text\"\r\n            placeholder={placeHolder}\r\n            readOnly={true}\r\n            value={value}/>\r\n        let inputGroup;\r\n        if (suffix === undefined)\r\n            inputGroup = input;\r\n        else\r\n            inputGroup = <div className=\"input-group\">\r\n                {input}\r\n                <div className=\"input-group-append\">\r\n                    <span className=\"input-group-text\">{suffix}</span>\r\n                </div>\r\n            </div>;\r\n        return inputGroup;\r\n        /*\r\n            return <div \r\n            className=\"form-control form-control-plaintext border border-info rounded bg-light cursor-pointer\">\r\n            {value} &nbsp;\r\n        </div>;\r\n        */\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { IObservableArray, observable } from 'mobx';\r\nimport _ from 'lodash';\r\nimport { List, FA, Muted } from 'tonva';\r\nimport { Page, nav } from 'tonva';\r\nimport { ViewModel, RowContent, TypeContent, JSONContent } from './viewModel';\r\nimport { ArrFields, Field } from '../../entities';\r\nimport { VForm, FieldInputs, FormMode } from './vForm';\r\nimport { FormArr } from '../formUI';\r\n\r\nexport type ArrEditRow = (initValues:any, onRowChanged:(rowValues:any)=>void) => Promise<void>;\r\n\r\nexport class VArr extends ViewModel {\r\n    protected mode: FormMode;\r\n    protected label: any;\r\n    protected header: any;\r\n    protected footer: any;\r\n    protected rowValues: any;                 // 仅仅用来判断是不是新增，undefined则是新增\r\n    protected onEditRow: ArrEditRow;\r\n    protected ownerForm:VForm;\r\n    protected vForm:VForm;\r\n    protected rowContent:TypeContent;\r\n    protected none: string;\r\n    protected newSubmitCaption: string;\r\n    protected editSubmitCaption: string;\r\n    protected addRow: ()=>Promise<void>;\r\n\r\n    name:string;\r\n    list: IObservableArray<any>;\r\n\r\n    constructor(ownerForm:VForm, arr:ArrFields, onEditRow?:ArrEditRow) {\r\n        super();\r\n        this.ownerForm = ownerForm;\r\n        let {name, fields} = arr;\r\n        this.name = name;\r\n        let {ui, res, mode, inputs, values} = ownerForm;\r\n        let arrsRes = res.arrs;\r\n        let arrRes = arrsRes !== undefined? arrsRes[name] : {};\r\n        let {label, none, newSubmit, editSubmit} = arrRes;\r\n        this.none = none || ownerForm.none;\r\n        this.newSubmitCaption = newSubmit || ownerForm.arrNewCaption;\r\n        this.editSubmitCaption = editSubmit || ownerForm.arrEditCaption;\r\n        this.label = label || name;\r\n        let arrUI = ((ui && ui.items[name]) || {}) as FormArr;\r\n        this.rowContent = arrUI.rowContent;// || JSONContent;\r\n        this.mode = mode;\r\n        if (this.onEditRow === undefined) {\r\n            this.vForm = new VForm({\r\n                fields: fields,\r\n                arrs: undefined,\r\n                ui: arrUI,\r\n                res: arrRes,\r\n                inputs: inputs[name] as FieldInputs,\r\n                none: ownerForm.none,\r\n                submitCaption: 'submit',\r\n                arrNewCaption: undefined,\r\n                arrEditCaption: undefined,\r\n                arrTitleNewButton: undefined,\r\n                mode: mode,\r\n            }, \r\n            mode===FormMode.readonly? undefined: this.onSubmit);\r\n        }\r\n        else {\r\n            this.onEditRow = onEditRow;\r\n        }\r\n        this.list = values[name];\r\n    }\r\n\r\n    reset() {\r\n        this.vForm.reset();\r\n        this.list.clear();\r\n    }\r\n\r\n    setAddRow(addRow:()=>Promise<void>) {\r\n        this.addRow = addRow;\r\n    }\r\n\r\n    protected rowPage = () => {\r\n        return <Page header={this.label} back=\"close\">\r\n            {this.vForm.render('py-3')}\r\n        </Page>\r\n    }\r\n    private onSubmit = async () => {\r\n        let {valueBoxs} = this.vForm;\r\n        await this.onRowChanged(valueBoxs);\r\n    }\r\n\r\n    private onRowChanged = async (rowValues:any) => {\r\n        if (this.rowValues === undefined) {\r\n            rowValues.$owner = this.ownerForm.values;\r\n            this.list.push(rowValues);\r\n            if (this.onEditRow === undefined)\r\n                this.vForm.reset();\r\n            else\r\n                await this.onEditRow(undefined, this.onRowChanged);\r\n        }\r\n        else {\r\n            _.merge(this.rowValues, rowValues);\r\n            if (this.onEditRow === undefined) nav.pop();\r\n        }\r\n    }\r\n\r\n    private renderItem = (item:any, index:number) => {\r\n        if (this.rowContent === undefined)\r\n            return <div className=\"px-3 py-2\"><JSONContent {...item} /></div>\r\n        return <this.rowContent {...item} />;\r\n    }\r\n    private showRow = async (rowValues:any):Promise<any> => {\r\n        if (this.onEditRow !== undefined) {\r\n            await this.onEditRow(rowValues, this.onRowChanged);\r\n            return;\r\n        }\r\n        this.vForm.reset();\r\n        if (rowValues !== undefined) this.vForm.setValues(rowValues);\r\n        nav.push(<this.rowPage />);\r\n    }\r\n    private editRow = async (rowValues:any): Promise<void> => {\r\n        this.rowValues = rowValues;\r\n        let {vSubmit} = this.vForm;\r\n        if (vSubmit !== undefined) {\r\n            vSubmit.caption = this.editSubmitCaption;\r\n            vSubmit.className = 'btn btn-outline-success';\r\n        }\r\n        this.vForm.mode = this.ownerForm.mode;\r\n        await this.showRow(rowValues);\r\n    }\r\n    private internalAddRow = async () => {\r\n        this.rowValues = undefined;\r\n        let {vSubmit} = this.vForm;\r\n        vSubmit.caption = this.newSubmitCaption;\r\n        vSubmit.className = 'btn btn-outline-success';\r\n        this.vForm.reset();\r\n        this.vForm.mode = FormMode.new;\r\n        await this.showRow(undefined);\r\n    }\r\n\r\n    protected view = () => {\r\n        let button;\r\n        if (this.addRow !== undefined || this.mode !== FormMode.readonly) {\r\n            button = <button onClick={this.addRow || this.internalAddRow}\r\n                type=\"button\" \r\n                className=\"btn btn-link p-0\">\r\n                {this.ownerForm.arrTitleNewButton}\r\n            </button>;\r\n        }\r\n        let header = this.header || <div className=\"px-3 bg-light small\" style={{paddingTop:'1px', paddingBottom:'1px'}}>\r\n            <div className=\"flex-fill align-self-center\">{this.label}</div>\r\n            {button}\r\n        </div>;\r\n        return <List className=\"pb-3\"\r\n            header={header}\r\n            none={<Muted className=\"px-3 py-2\">{this.none}</Muted>}\r\n            items={this.list}\r\n            item={{render: this.renderItem, onClick: this.editRow}} />;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { tv } from '../../../tools';\r\nimport { Field, Tuid } from '../../../entities';\r\nimport { VField, RedMark } from \"./vField\";\r\nimport { FieldUI } from '../../formUI';\r\nimport { VForm, FieldInput, FormMode } from '../vForm';\r\nimport { FieldRes } from '../vBand';\r\n\r\nconst buttonStyle:React.CSSProperties = {\r\n    textAlign:'left', \r\n    paddingLeft:'0.75rem', \r\n    paddingRight:'0.75rem', \r\n    overflow: 'hidden'\r\n};\r\n\r\nexport class VTuidField extends VField {\r\n    protected vForm: VForm;\r\n    protected input: FieldInput;\r\n    protected tuid: Tuid;\r\n\r\n    constructor(vForm: VForm, field:Field, fieldUI: FieldUI, fieldRes:FieldRes) {\r\n        super(vForm, field, fieldUI, fieldRes);\r\n        this.tuid = field._tuid;\r\n        this.vForm = vForm;\r\n        this.input = vForm.inputs[field.name] as FieldInput;\r\n    }\r\n\r\n    onClick = async () => {\r\n        if (this.readonly === true) {\r\n            if (!this.value) return;\r\n            await this.tuid.showInfo(this.value.id);\r\n            return;\r\n        }\r\n        let id:number;\r\n        if (this.input !== undefined) {\r\n            id = await this.input.select(this.vForm, this.field, this.vForm.getValues());\r\n        }\r\n        else {\r\n            alert('call undefined');\r\n            id = 0;\r\n        }\r\n        this.setValue(this.tuid.boxId(id));\r\n    }\r\n    protected view = observer(() => {\r\n        let {placeHolder} = this.fieldRes;\r\n        let disabled:boolean = false;\r\n        let {_ownerField} = this.field;\r\n        if (_ownerField !== undefined) {\r\n            let {name, arr} = _ownerField;\r\n            disabled = this.vForm.getValue(name) === null;\r\n        }\r\n        let content;\r\n        if (this.value === null)\r\n            content = <>{placeHolder || this.input.placeHolder}</>;\r\n        else if (typeof this.value === 'object') {\r\n            content = tv(this.value);\r\n        }\r\n        else {\r\n            let idBox = this.tuid.boxId(this.value);\r\n            content = tv(idBox); // idBox.content();\r\n        }\r\n        if (this.readonly === true)\r\n        {\r\n            return <div \r\n                className=\"form-control form-control-plaintext border border-info rounded bg-light cursor-pointer\"\r\n                onClick={this.onClick}>\r\n                {content}\r\n            </div>;\r\n        }\r\n        let redDot;\r\n        let {required} = this.fieldUI;\r\n        if (required === true || this.field.null === false) {\r\n            redDot = <RedMark />;\r\n        }\r\n        return <>\r\n            {redDot}\r\n            <button className=\"form-control btn btn-outline-info\"\r\n                type=\"button\"\r\n                disabled={disabled}\r\n                style={buttonStyle}\r\n                onClick={this.onClick}>\r\n                {content}\r\n            </button>\r\n        </>;\r\n    })\r\n}\r\n","import { VBand, VFieldBand, VArrBand, VFieldsBand, VSubmitBand, FieldRes } from \"./vBand\";\r\nimport { Field, ArrFields } from \"../../entities\";\r\nimport { VForm, FormOptions } from \"./vForm\";\r\nimport { FormItems, FieldUI, FormItem } from \"../formUI\";\r\nimport { VSubmit } from \"./vSubmit\";\r\nimport { VField, buildVField, VComputeField } from \"./vField\";\r\nimport { VArr } from \"./vArr\";\r\nimport { VTuidField } from \"./vField/vTuidField\";\r\n\r\nexport class BandsBuilder {\r\n    private vForm: VForm;\r\n    private onSubmit: (values:any)=>Promise<void>;\r\n    private fields: Field[];\r\n    private arrs: ArrFields[];\r\n    private formItems: FormItems;\r\n    private layout: string[];\r\n    private res: any;\r\n    constructor(vForm:VForm, options: FormOptions, onSubmit: (values:any)=>Promise<void>) {\r\n        this.vForm = vForm;\r\n        this.onSubmit = onSubmit;\r\n        let {fields, arrs, ui, res} = options;\r\n        this.fields = fields;\r\n        this.arrs = arrs;\r\n        if (ui !== undefined) {\r\n            let {items, layout} = ui;\r\n            this.formItems = items;\r\n            this.layout = layout;\r\n        }\r\n        this.res = res;\r\n    }\r\n\r\n    build():VBand[] {\r\n        //return this.bandUIs === undefined? this.bandsOnFly() : this.bandsFromUI();\r\n        return this.layout === undefined? this.bandsOnFly() : this.bandsFromLayout();\r\n    }\r\n\r\n    private resFromName(name:string, res:any):string|FieldRes {\r\n        if (res === undefined) return;\r\n        let {fields} = res;\r\n        if (fields === undefined) return;\r\n        return fields[name] || name;\r\n    }\r\n\r\n    private bandsOnFly():VBand[] {\r\n        let bands:VBand[] = [];\r\n        this.bandsFromFields(bands, this.fields, this.res);\r\n        if (this.arrs !== undefined) {\r\n            for (let arr of this.arrs) bands.push(this.bandFromArr(arr));\r\n        }\r\n        if (this.onSubmit !== undefined) {\r\n            bands.push(new VSubmitBand(new VSubmit(this.vForm)));\r\n        }\r\n        return bands;\r\n    }\r\n\r\n    private bandsFromFields(bands:VBand[], fields:Field[], res:any) {\r\n        if (fields === undefined) return;\r\n        for (let field of fields) bands.push(this.bandFromField(field, res));\r\n    }\r\n\r\n    private bandsFromLayout():VBand[] {\r\n        let bands:VBand[] = [];\r\n        /*\r\n        for (let bandUI of this.bandUIs)  {\r\n            let band = this.bandFromUI(bandUI);\r\n            bands.push(band);\r\n        }\r\n        */\r\n        return bands;\r\n    }\r\n\r\n    /*\r\n    private bandFromUI(bandUI:BandUI):VBand {\r\n        let {band} = bandUI;\r\n        switch (band) {\r\n            default: return this.bandFromFieldUI(bandUI as FieldBandUI);\r\n            case 'arr': return this.bandFromArrUI(bandUI as ArrBandUI);\r\n            case 'fields': return this.bandFromFieldsUI(bandUI as FieldsBandUI);\r\n            case 'submit': return this.bandFromSubmitUI(bandUI as SubmitBandUI);\r\n        }\r\n    }\r\n    \r\n    private bandFromFieldUI(bandUI: FieldBandUI): VFieldBand {\r\n        let {label} = bandUI;\r\n        let vField = this.vFieldFromUI(bandUI);\r\n        return new VFieldBand(label, vField);\r\n    }\r\n    private bandFromArrUI(bandUI: ArrBandUI): VArrBand {\r\n        let {label, name} = bandUI;\r\n        let vArr = this.vArrFromUI(bandUI);\r\n        return new VArrBand(label, vArr);\r\n    }\r\n    private bandFromFieldsUI(bandUI: FieldsBandUI): VFieldsBand {\r\n        let {label, fieldUIs} = bandUI;\r\n        let vFields = fieldUIs.map(v => this.vFieldFromUI(v));\r\n        return new VFieldsBand(label, vFields);\r\n    }\r\n    private bandFromSubmitUI(bandUI: SubmitBandUI): VSubmitBand {\r\n        if (this.onSubmit === undefined) return;\r\n        let vSubmit = new VSubmit(this.vForm);\r\n        return new VSubmitBand(vSubmit);\r\n    }\r\n    */\r\n/*\r\n    private vFieldFromField(field:Field, fieldRes:FieldRes, formItem: FormItem): VField {\r\n        let fieldUI:FieldUI = undefined;\r\n        if (formItem !== undefined) {\r\n            if (typeof formItem === 'function') {\r\n                return new VComputeField(this.vForm, field, fieldRes);\r\n            }\r\n        }\r\n        let ret = buildVField(this.vForm, field, formItem, fieldRes);\r\n        if (ret !== undefined) return ret;\r\n        return new VTuidField(field, fieldUI, fieldRes, this.vForm);\r\n    }\r\n*/\r\n    private bandFromField(field:Field, res:any):VBand {\r\n        let {name} = field;\r\n        let fieldRes:FieldRes;\r\n        let rfn = this.resFromName(name, res);\r\n        let label:string;\r\n        if (typeof rfn === 'object') {\r\n            label = rfn.label;\r\n            fieldRes = rfn;\r\n        }\r\n        else {\r\n            label = rfn as string;\r\n            fieldRes = undefined;\r\n        }\r\n        let vField:VField;\r\n        let formItem:FormItem;\r\n        if (this.formItems !== undefined) formItem = this.formItems[name];\r\n        //let vField = this.vFieldFromField(field, fieldRes as FieldRes, formItem);\r\n        //let fieldUI:FieldUI = undefined;\r\n        if (typeof formItem === 'function') {\r\n            vField = new VComputeField(this.vForm, field, fieldRes);\r\n        }\r\n        else {\r\n            vField = buildVField(this.vForm, field, formItem as FieldUI, fieldRes);\r\n        }\r\n        if (vField === undefined) {\r\n            vField = new VTuidField(this.vForm, field, formItem as FieldUI, fieldRes);\r\n        }\r\n        return new VFieldBand(label || name, vField);\r\n    }\r\n\r\n    private bandFromArr(arr: ArrFields):VBand {\r\n        let {name, fields} = arr;\r\n        //let row = JSONContent;\r\n        //let bands:VBand[] = [];\r\n        //this.bandsFromFields(bands, fields, res);\r\n        let vArr = new VArr(this.vForm, arr); // name, res && res.label || name, row, bands);\r\n        return new VArrBand(name, vArr);\r\n    }\r\n\r\n    /*\r\n    private vFieldFromUI(fieldUI:FieldUI):VField {\r\n        return;\r\n    }\r\n\r\n    private vArrFromUI(arrBandUI:ArrBandUI):VArr {\r\n        return;\r\n    }\r\n    */\r\n}\r\n","import { VField, VIntField, VDecField, VStringField, VTextField, VDateTimeField, VDateField } from './vField';\r\nimport { Field } from '../../../entities';\r\nimport { FieldRes } from '../vBand';\r\nimport { VForm } from '../vForm';\r\nimport { FieldUI } from '../../formUI';\r\n\r\nexport function buildVField(form:VForm, field: Field, fieldUI: FieldUI, fieldRes:FieldRes): VField {\r\n    let vField:new (form:VForm, field:Field, ui:FieldUI, fieldRes:FieldRes) => VField;\r\n    switch (field.type) {\r\n        default: return;\r\n        case 'tinyint':\r\n        case 'smallint':\r\n        case 'int':\r\n            vField = VIntField;\r\n            break;\r\n        case 'bigint':\r\n            let {_tuid} = field;\r\n            if (_tuid !== undefined) return;\r\n            vField = VIntField;\r\n            break;\r\n        case 'dec':\r\n            vField = VDecField;\r\n            break;\r\n        case 'char':\r\n            vField = VStringField;\r\n            break;\r\n        case 'text':\r\n            vField = VTextField;\r\n            break;\r\n        case 'datetime':\r\n            vField = VDateTimeField;\r\n            break;\r\n        case 'date':\r\n            vField = VDateField;\r\n            break;\r\n    }\r\n    return new vField(form, field, fieldUI, fieldRes);\r\n}\r\n\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport { observer } from \"mobx-react\";\r\nimport { VBand } from './vBand';\r\nimport { BandsBuilder } from './bandsBuilder';\r\nimport { Field, ArrFields } from '../../entities';\r\nimport { computed, observable, IObservableObject, IObservableValue } from 'mobx';\r\nimport { VArr } from './vArr';\r\nimport { FormUI, FormUIBase, FormItems } from '../formUI';\r\nimport { VField } from './vField';\r\nimport { VSubmit } from './vSubmit';\r\nimport { IObservableArray } from 'mobx';\r\nimport { FA } from 'tonva';\r\n\r\nexport type FieldCall = (form:VForm, field:Field, values:any) => Promise<any>;\r\nexport interface FieldInput {\r\n    select: FieldCall;\r\n    content: React.StatelessComponent<any>;\r\n    placeHolder: string;\r\n}\r\nexport interface FieldInputs {\r\n    [fieldOrArr:string]: FieldInput | {[field:string]: FieldInput};\r\n}\r\nexport enum FormMode {new, edit, readonly}\r\n\r\nexport interface FormOptions {\r\n    fields: Field[];\r\n    arrs?: ArrFields[];\r\n    ui: FormUIBase;\r\n    res: any;\r\n    inputs: FieldInputs;\r\n    submitCaption: string;\r\n    arrNewCaption: string;\r\n    arrEditCaption: string;\r\n    arrTitleNewButton: JSX.Element;\r\n    none: string;\r\n    mode: FormMode;\r\n}\r\n\r\nexport class VForm {\r\n    protected fields: Field[];\r\n    protected arrs: ArrFields[];\r\n    protected bands: VBand[];\r\n    protected bandColl: {[key:string]: VBand};\r\n    protected onSubmit: ()=>Promise<void>;\r\n\r\n    constructor(options: FormOptions, onSubmit: ()=>Promise<void>) {\r\n        let {fields, arrs, ui, res, inputs, none, submitCaption, arrNewCaption, arrEditCaption, arrTitleNewButton, mode} = options;\r\n        this.fields = fields;\r\n        this.arrs = arrs;\r\n        this.ui = ui;\r\n        if (this.ui !== undefined) this.formItems = this.ui.items; //.compute = this.ui.compute;\r\n        this.res = res;\r\n        this.inputs = inputs;\r\n        this.none = none;\r\n        this.submitCaption = submitCaption;\r\n        this.arrNewCaption = arrNewCaption;\r\n        this.arrEditCaption = arrEditCaption;\r\n        this.arrTitleNewButton = arrTitleNewButton || <small><FA name=\"plus\" /> 新增</small>;\r\n        if (onSubmit === undefined) this.mode = FormMode.readonly;\r\n        else this.mode = mode;\r\n        this.buildFormValues();\r\n        this.buildBands(options, onSubmit);\r\n        this.onSubmit = onSubmit;\r\n    }\r\n\r\n    ui: FormUI;\r\n    res: any;\r\n    values: any;\r\n    errors: any;\r\n    formItems: FormItems;\r\n    mode: FormMode;\r\n    vFields: {[name:string]:VField} = {};\r\n    vArrs: {[name:string]: VArr} = {};\r\n    vSubmit: VSubmit;\r\n    inputs: FieldInputs;\r\n    none: string;\r\n    submitCaption: string;\r\n    arrNewCaption: string;\r\n    arrEditCaption: string;\r\n    arrTitleNewButton: JSX.Element;\r\n\r\n    private buildBands(options: FormOptions, onSubmit: (values:any)=>Promise<void>) {\r\n        this.bandColl = {};\r\n        let bandsBuilder = new BandsBuilder(this, options, onSubmit);\r\n        this.bands = bandsBuilder.build();\r\n        for (let band of this.bands) {\r\n            this.bandColl[band.key] = band;\r\n            let vFields = band.getVFields();\r\n            if (vFields !== undefined) for (let f of vFields) this.vFields[f.name] = f;\r\n            let vArr = band.getVArr();\r\n            if (vArr !== undefined) this.vArrs[vArr.name] = vArr;\r\n            let vSubmit = band.getVSubmit();\r\n            if (vSubmit !== undefined) this.vSubmit = vSubmit;\r\n        }\r\n    }\r\n\r\n    private onFormSubmit = (event:React.FormEvent<any>) => {\r\n        event.preventDefault();\r\n        return false;\r\n    }\r\n\r\n    protected view = observer(({className}:{className:string}) => {\r\n        return <form className={className} onSubmit={this.onFormSubmit}>\r\n            {this.bands.map(v => v.render())}\r\n        </form>;\r\n    });\r\n\r\n    getBand(name:string) {\r\n        return this.bandColl[name];\r\n    }\r\n\r\n    computeFields() {\r\n        if (this.formItems === undefined) return;\r\n        let values = this.values;\r\n        for (let i in this.formItems) {\r\n            let item = this.formItems[i];\r\n            if (typeof item !== 'function') continue;\r\n            values[i] = item.call(this, values);\r\n        }\r\n    }\r\n\r\n    async submit() {\r\n        if (this.onSubmit === undefined) return;\r\n        await this.onSubmit();\r\n    }\r\n    \r\n    getValues() {\r\n        let ret:any = {};\r\n        let values = this.values;\r\n        for (let f of this.fields) {\r\n            let {name} = f;\r\n            let v = values[name]\r\n            ret[name] =  v !== null && typeof v === 'object' ? v.id : v;\r\n        }\r\n        if (this.arrs !== undefined) {\r\n            for (let arr of this.arrs) {\r\n                let {name, fields, id, order} = arr;\r\n                let list = ret[name] = [];\r\n                let rows = this.vArrs[name].list;\r\n                for (let row of rows) {\r\n                    let item = {} as any;\r\n                    if (id !== undefined) item[id] = row[id];\r\n                    if (order !== undefined) item[order] = row[order];\r\n                    for (let f of fields) {\r\n                        let {name:fn} = f;\r\n                        let v = row[fn]\r\n                        item[fn] =  v !== null && typeof v === 'object' ? v.id : v;\r\n                    }\r\n                    list.push(item);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    get valueBoxs() {\r\n        let ret:any = {};\r\n        let values = this.values;\r\n        for (let f of this.fields) {\r\n            let {name, _tuid} = f;\r\n            let v = values[name]\r\n            ret[name] =  _tuid === undefined || typeof v === 'object' ? v : _tuid.boxId(v);\r\n        }\r\n        if (this.arrs === undefined) return ret;\r\n        for (let arr of this.arrs) {\r\n            let {name, fields, id, order} = arr;\r\n            let list = ret[name] = this.vArrs[name].list.slice();\r\n            for (let row of list) {\r\n                for (let f of fields) {\r\n                    let {name:fn, _tuid} = f;\r\n                    let v = row[fn]\r\n                    row[fn] =  _tuid === undefined || typeof v === 'object' ? v : _tuid.boxId(v);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    setValues(initValues:any) {\r\n        if (initValues === undefined) {\r\n            this.reset();\r\n            return;\r\n        }\r\n        let values = this.values;\r\n        let errors = this.errors;\r\n        for (let f of this.fields) {\r\n            let fn = f.name;\r\n            errors[fn] = undefined;\r\n            let v =  initValues[fn];\r\n            values[fn] = v;\r\n        }\r\n        // 还要设置arrs的values\r\n        for (let i in this.vArrs) {\r\n            let list = initValues[i];\r\n            if (list === undefined) continue;\r\n            let arrList = values[i] as IObservableArray<any>;\r\n            arrList.clear();\r\n            arrList.push(...list);\r\n        }\r\n    }\r\n\r\n    @computed get isOk():boolean {\r\n        for (let i in this.vFields) {\r\n            if (this.vFields[i].isOk === false) return false;\r\n        }\r\n        return true;\r\n    }\r\n    reset() {\r\n        let values = this.values;\r\n        let errors = this.errors;\r\n        for (let f of this.fields) {\r\n            let fn = f.name;\r\n            //if (this.compute !== undefined && this.compute[fn] !== undefined) continue;\r\n            values[fn] = null;\r\n            errors[fn] = undefined;\r\n        }\r\n        for (let i in this.vFields) {\r\n            let ctrl = this.vFields[i];\r\n            let cn = ctrl.name;\r\n            if (cn === undefined) continue;\r\n            //if (this.compute !== undefined && this.compute[cn] !== undefined) continue;\r\n            ctrl.setValue(null);\r\n        }\r\n        for (let i in this.vArrs) {\r\n            let vArr = this.vArrs[i];\r\n            vArr.reset();\r\n        }\r\n    }\r\n\r\n    getValue(fieldName: string) {\r\n        return this.values[fieldName];\r\n    }\r\n    setValue(fieldName: string, value: any) { this.values[fieldName] = value }\r\n\r\n    setError(fieldName:string, error:string) {this.errors[fieldName] = error}\r\n\r\n    private buildFieldValues(fields: Field[]):any {\r\n        let v: {[p:string]: any} = {\r\n            valueFromFieldName: function(propName:string) {\r\n                return this[propName];\r\n            }\r\n        };\r\n        for (let f of fields) {\r\n            let fn = f.name;\r\n            v[fn] = null;\r\n        }\r\n        return v;\r\n    }\r\n    private buildObservableValues():IObservableObject {\r\n        let v: {[p:string]: any} = this.buildFieldValues(this.fields);\r\n        if (this.arrs !== undefined) {\r\n            for (let arr of this.arrs) {\r\n                v[arr.name] = observable.array([], {deep:true});\r\n            }\r\n        }\r\n        let ret = observable(v);\r\n        return ret;\r\n    }\r\n    private buildFormValues() {\r\n        this.values = this.buildObservableValues();\r\n        this.errors = observable(this.buildFieldValues(this.fields));\r\n    }\r\n\r\n    render(className:string = \"py-3\"):JSX.Element {\r\n        return <this.view className={className} />\r\n    }\r\n}\r\n","export * from './vForm';\r\n","import {bridgeCenterApi, isBridged} from './appBridge';\r\nimport {FetchError} from '../fetchError';\r\nimport {HttpChannelUI} from './httpChannelUI';\r\nimport {nav} from '../ui/nav';\r\nimport { isDevelopment } from './host';\r\n\r\nexport async function httpGet(url:string, params?:any):Promise<any> {\r\n    let channel = new HttpChannel(false, url, undefined, undefined);\r\n    let ret = await channel.get('', params);\r\n    return ret;\r\n}\r\n\r\nexport async function httpPost(url:string, params?:any):Promise<any> {\r\n    let channel = new HttpChannel(false, url, undefined, undefined);\r\n    let ret = await channel.post('', params);\r\n    return ret;\r\n}\r\n\r\nexport class HttpChannel {\r\n    private isCenter: boolean;\r\n    private hostUrl: string;\r\n    private apiToken: string;\r\n    private ui?: HttpChannelUI;\r\n    private timeout: number;\r\n\r\n    constructor(isCenter: boolean, hostUrl: string, apiToken:string, ui?: HttpChannelUI) {\r\n        this.isCenter = isCenter;\r\n        this.hostUrl = hostUrl;\r\n        this.apiToken = apiToken;\r\n        this.ui = ui;\r\n        this.timeout = isDevelopment === true? 500000:5000;\r\n    }\r\n\r\n    private startWait = () => {\r\n        if (this.ui !== undefined) this.ui.startWait();\r\n    }\r\n\r\n    private endWait = (url?:string, reject?:(reason?:any)=>void) => {\r\n        if (this.ui !== undefined) this.ui.endWait();\r\n        if (reject !== undefined) reject('访问webapi超时 ' + url);\r\n    }\r\n\r\n    private showError = async (error:FetchError) => {\r\n        if (this.ui !== undefined) await this.ui.showError(error);\r\n    }\r\n\r\n    used() {\r\n        this.post('', {});\r\n    }\r\n\r\n    async get(url: string, params: any = undefined): Promise<any> {\r\n        if (params) {\r\n            let keys = Object.keys(params);\r\n            if (keys.length > 0) {\r\n                let c = '?';\r\n                for (let k of keys) {\r\n                    let v = params[k];\r\n                    if (v === undefined) continue;\r\n                    url += c + k + '=' + params[k];\r\n                    c = '&';\r\n                }\r\n            }\r\n        }\r\n        let options = this.buildOptions();\r\n        options.method = 'GET';\r\n        return await this.innerFetch(url, options);\r\n    }\r\n\r\n    async post(url: string, params: any): Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = 'POST';\r\n        options.body = JSON.stringify(params);\r\n        return await this.innerFetch(url, options);\r\n    }\r\n\r\n    async put(url: string, params: any): Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = 'PUT';\r\n        options.body = JSON.stringify(params);\r\n        return await this.innerFetch(url, options);\r\n    }\r\n\r\n    async delete(url: string, params: any): Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = 'DELETE';\r\n        options.body = JSON.stringify(params);\r\n        return await this.innerFetch(url, options);\r\n    }\r\n    async fetch(url: string, options: any, resolve:(value?:any)=>any, reject:(reason?:any)=>void):Promise<void> {\r\n        let that = this;\r\n        this.startWait();\r\n        let path = url;\r\n        function buildError(err: string) {\r\n            return {\r\n                channel: that,\r\n                url: path,\r\n                options: options,\r\n                resolve: resolve,\r\n                reject: reject,\r\n                error: err,\r\n            }\r\n        }\r\n        try {\r\n            console.log('%s %s', options.method, path);\r\n            let timeOutHandler = setTimeout(() => that.endWait(url, reject), this.timeout);\r\n            let res = await fetch(encodeURI(path), options);\r\n            if (res.ok === false) {\r\n                clearTimeout(timeOutHandler);\r\n                that.endWait();\r\n                console.log('call error %s', res.statusText);\r\n                throw res.statusText;\r\n            }\r\n            let ct = res.headers.get('content-type');\r\n            if (ct && ct.indexOf('json')>=0) {\r\n                return res.json().then(async retJson => {\r\n                    clearTimeout(timeOutHandler);\r\n                    that.endWait();\r\n                    if (retJson.ok === true) {\r\n                        return resolve(retJson.res);\r\n                    }\r\n                    if (retJson.error === undefined) {\r\n                        await that.showError(buildError('not valid tonva json'));\r\n                    }\r\n                    else {\r\n                        await that.showError(buildError(retJson.error));\r\n                        reject(retJson.error);\r\n                    }\r\n                    //throw retJson.error;\r\n                }).catch(async error => {\r\n                    await that.showError(buildError(error.message));\r\n                });\r\n            }\r\n            else {\r\n                let text = await res.text();\r\n                clearTimeout(timeOutHandler);\r\n                that.endWait();\r\n                resolve(text);\r\n            }\r\n        }\r\n        catch(error) {\r\n            if (typeof error === 'string') {\r\n                if (error.toLowerCase().startsWith('unauthorized') === true) {\r\n                    nav.logout();\r\n                    return;\r\n                }\r\n            }\r\n            await this.showError(buildError(error.message));\r\n        };\r\n    }\r\n\r\n    private async innerFetch(url: string, options: any): Promise<any> {\r\n        let u = this.hostUrl + url;\r\n        if (this.isCenter === true && this.apiToken === undefined && isBridged())\r\n            return await bridgeCenterApi(u, options.method, options.body);\r\n        return await new Promise<any>(async (resolve, reject) => {\r\n            await this.fetch(u, options, resolve, reject);\r\n        });\r\n    }\r\n\r\n    async callFetch(url:string, method:string, body:any):Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = method;\r\n        options.body = body;\r\n        return await new Promise<any>(async (resolve, reject) => {\r\n            await this.fetch(url, options, resolve, reject);\r\n        });\r\n    }\r\n\r\n    private buildOptions(): any {\r\n        let {language, culture} = nav;\r\n        let headers = new Headers();\r\n        //headers.append('Access-Control-Allow-Origin', '*');\r\n        headers.append('Content-Type', 'application/json;charset=UTF-8');\r\n        let lang = language;\r\n        if (culture) lang += '-' + culture;\r\n        headers.append('Accept-Language', lang);\r\n        if (this.apiToken) { \r\n            headers.append('Authorization', this.apiToken); \r\n        }\r\n        let options = {\r\n            headers: headers,\r\n            // cache: 'no-cache',\r\n        };\r\n        return options;\r\n    }\r\n}\r\n","import _ from 'lodash';\r\n\r\nexport interface KeyValueRes {\r\n    [key:string]: any;\r\n}\r\n\r\nexport interface Res<T extends KeyValueRes> {\r\n    [lang:string]: T | {[district:string]: T};\r\n}\r\n\r\nexport const resOptions:{lang:string, district:string} = {\r\n    lang: undefined,\r\n    district: undefined,\r\n}\r\n\r\nexport function setResOptions(lang:string, district:string) {\r\n    resOptions.lang = lang;\r\n    resOptions.district = district;\r\n}\r\n\r\n(function() {\r\n    let lang: string, district: string;\r\n    let language = navigator.languages && navigator.languages[0] || // Chrome / Firefox\r\n        navigator.language; // ||   // All browsers\r\n    //navigator.userLanguage; // IE <= 10\r\n    if (!language) {\r\n        lang = 'zh';\r\n        district = 'CN';\r\n    }\r\n    else {\r\n        let parts = language.split('-');\r\n        lang = parts[0];\r\n        if (parts.length > 1) district = parts[1];\r\n    }\r\n    setResOptions(lang, district);\r\n}());\r\n\r\nexport function resLang<T extends KeyValueRes>(res:Res<T>):T {\r\n    let {lang, district} = resOptions;\r\n    let ret:T = {} as T;\r\n    if (res === undefined) return ret;\r\n    _.merge(ret, res._);\r\n    let l = res[lang];\r\n    if (l === undefined) return ret;\r\n    _.merge(ret, l._);\r\n    let d = l[district];\r\n    if (d === undefined) return ret;\r\n    _.merge(ret, d);\r\n    let {entity} = ret;\r\n    if (entity !== undefined) {\r\n        for (let i in entity) {\r\n            entity[i.toLowerCase()] = entity[i];\r\n        }\r\n    }\r\n    return ret;\r\n}\r\n","export * from './CApp';\r\nexport * from './startApp';\r\nexport * from './uq';\r\nexport * from './action';\r\nexport * from './tuid';\r\nexport * from './sheet';\r\nexport * from './query';\r\nexport * from './map';\r\nexport * from './history';\r\nexport * from './pending';\r\nexport * from './form/viewModel';\r\nexport * from './form';\r\nexport * from './formUI';\r\nexport * from './ControllerUq';\r\nexport * from './CVEntity';\r\nexport * from './link';\r\nexport * from './icons';\r\n","import * as React from 'react';\r\nimport {observable, computed} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face} from '../face';\r\nimport {Rule} from '../rule';\r\n\r\nexport abstract class ControlBase {\r\n    protected formView: FormView;\r\n    constructor(formView:FormView) {\r\n        this.formView = formView;\r\n    }\r\n    render():JSX.Element {\r\n        return <div className=\"col-sm-10\">\r\n            {this.renderControl()}\r\n        </div>;\r\n    }\r\n    protected abstract renderControl():JSX.Element;\r\n    @computed get hasError():boolean {return false;}\r\n    @computed get filled():boolean {return false;}\r\n    clear() {}\r\n    clearErrors() {}\r\n    readValues(values:any):any {}\r\n    setError(fieldName:string, error:string) {}\r\n    setInitValues(values: any) {}\r\n    isOk():boolean {this.validate(); return !this.hasError;}\r\n    protected validate() {}\r\n}\r\n\r\nexport abstract class Control extends ControlBase {\r\n    protected field: Field;\r\n    protected face: Face;\r\n    protected props: any;\r\n    protected rules: Rule[];\r\n\r\n    protected element: HTMLElement;\r\n    @observable protected isOK?: boolean;\r\n    @observable protected error: string;\r\n    @observable protected value: any;\r\n\r\n    constructor(formView:FormView, field:Field, face:Face) {\r\n        super(formView);\r\n        this.field = field;\r\n        this.face = face;\r\n        this.init();\r\n        this.setProps();\r\n    }\r\n    protected ref(element: HTMLElement) {\r\n        this.element = element;\r\n    }\r\n    protected init() {\r\n        this.rules = [];\r\n        let r = this.field.rules;\r\n        if (r !== undefined) {\r\n            if (Array.isArray(r) === true) this.rules.push(...(r as Rule[]));\r\n            else this.rules.push(r as Rule);\r\n        }\r\n    };\r\n    protected setProps():any {\r\n        return this.props = {\r\n            ref: this.ref.bind(this),\r\n            name: this.field.name,\r\n        }\r\n    };\r\n    @computed get hasError():boolean {return this.error !== undefined;}\r\n    @computed get filled():boolean {\r\n        let ret = this.value !== undefined && this.value !== this.field.defaultValue;\r\n        return ret;\r\n    }\r\n    clearValue() { this.value = undefined; }\r\n    clear() { this.clearErrors(); this.clearValue(); }\r\n    clearErrors() { this.isOK = undefined; this.error = undefined; }\r\n    readValues(values:any):any {\r\n        values[this.field.name] = this.value;\r\n    }\r\n    setError(fieldName:string, error:string) {}\r\n    setInitValues(values: any) {}\r\n    protected getValueFromElement():any {return this.value;}\r\n    protected validate() {\r\n        try {\r\n            let v = this.getValueFromElement();\r\n            if (this.rules.length > 0) {\r\n                let isOk:boolean;\r\n                for (let rule of this.rules) {\r\n                    console.log('validate: %s', v);\r\n                    let err = rule(v);\r\n                    console.log('validate: %s err: %s', v, err);\r\n                    if (err === true) {\r\n                        this.error = undefined;\r\n                        isOk = true;\r\n                    }\r\n                    else if (err !== undefined) {\r\n                        //console.log('field %s onBlur v=%s rule=%s err=%s', \r\n                        //    this.field.name, JSON.stringify(v), rule, err);\r\n                        this.error = err;\r\n                        this.isOK = false;\r\n                        return;\r\n                    }\r\n                }\r\n                this.isOK = isOk;\r\n            }\r\n            this.value = v;\r\n        }\r\n        catch (e) {\r\n            this.error = e.message;\r\n        }\r\n    }\r\n    render():JSX.Element {\r\n        let n;\r\n        if (this.face !== undefined) {\r\n            let {notes} = this.face;\r\n            if (notes !== undefined) n = <small className=\"text-muted\">{notes}</small>;\r\n        }\r\n        return <div className=\"col-sm-10\">\r\n            {this.renderControl()}\r\n            {n}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face} from '../face';\r\nimport {ControlBase} from './control';\r\n\r\nexport class ButtonsControl extends ControlBase {\r\n    constructor(props) {\r\n        super(props);\r\n        this.otherClick = this.otherClick.bind(this);\r\n    }\r\n    private otherClick() {\r\n        let onOther = this.formView.props.onOther;\r\n        if (onOther === undefined) return;\r\n        let values = this.formView.readValues();\r\n        onOther(values);\r\n    }\r\n    renderControl():JSX.Element {\r\n        console.log('buttons.renderControl');\r\n        let nothing = this.formView.nothing;\r\n        let hasError = this.formView.hasError;\r\n        let props = this.formView.props;\r\n        console.log('buttons.renderControl nothing:%s hasError:%s', nothing, hasError);\r\n        let {submitButton, otherButton, onOther} = props;\r\n        let btnOther;\r\n        if (otherButton !== undefined) {\r\n            btnOther = <button className=\"btn btn-outline-info ml-auto\" onClick={this.otherClick}>\r\n                {otherButton}\r\n            </button>\r\n        }\r\n        return <div className=\"d-flex justify-content-start\">\r\n            <button\r\n                className=\"btn btn-primary\"\r\n                type=\"submit\" \r\n                disabled={nothing || hasError}>\r\n                {submitButton || '提交'}\r\n            </button>\r\n            {btnOther}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable, computed} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, Placeholder} from '../face';\r\nimport {Control} from './control';\r\n\r\nconst TxtRequired = '必须填入要求内容';\r\n\r\nexport abstract class CharsControl extends Control {\r\n    protected init() {\r\n        super.init();\r\n        if (this.field.required === true) {\r\n            this.rules.push((v) => {\r\n                if (v===null || v===undefined || (v as string).trim().length === 0) return TxtRequired;\r\n                return true;\r\n            });\r\n        }\r\n    }\r\n\r\n    protected element: HTMLInputElement;\r\n    protected getValueFromElement():any {return this.parseValue(this.element.value)}\r\n\r\n    protected setProps() {\r\n        super.setProps();\r\n        _.assign(this.props, {\r\n            onBlur: this.onBlur.bind(this),\r\n            onFocus: this.onFocus.bind(this),\r\n            onChange: this.onChange.bind(this),\r\n        });\r\n        let face = this.face as Placeholder;\r\n        if (face !== undefined) {\r\n            _.assign(this.props, {\r\n                placeholder: face.placeholder,\r\n            });\r\n        }\r\n        return this.props;\r\n    };\r\n    protected parseValue(value?:string):any {return value;}\r\n    private onBlur() {\r\n        //console.log('field %s onBlure', this.field.name);\r\n        this.validate();\r\n    }\r\n    private onChange() {\r\n        console.log('onChange');\r\n        this.validate();\r\n    }\r\n    private onFocus() {\r\n        this.clearErrors();\r\n        //this.error = undefined;\r\n        //this.formView.clearErrors();\r\n    }\r\n    protected className() {\r\n        return classNames({\r\n            \"form-control\": true,\r\n            \"has-success\": this.isOK === true,\r\n            \"is-invalid\": this.error !== undefined,\r\n            \"is-valid\": this.error === undefined && this.isOK === true,\r\n        });\r\n    }\r\n    protected renderInput():JSX.Element {\r\n        return <input className={this.className()} {...this.props} />;\r\n    }\r\n    protected ref(element: HTMLInputElement) {\r\n        super.ref(element);\r\n        if (element) {\r\n            element.value = this.value === undefined? '':this.value;\r\n        }\r\n    }\r\n    protected renderError():JSX.Element {\r\n        //if (this.field.name === 'name') console.log('charsControl renderControl');\r\n        if (this.error === undefined) return null;\r\n        return <div className=\"invalid-feedback\">{this.error}</div>\r\n    }\r\n    clearValue() { super.clearValue(); this.element.value = ''; }\r\n    setError(fieldName:string, error:string) {\r\n        if (this.field.name === fieldName) this.error = error;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        if (v === undefined) return;\r\n        //this.element.value = v;\r\n        this.value = v;\r\n    }\r\n    renderControl():JSX.Element {\r\n        return <React.Fragment>\r\n            {this.renderInput()}\r\n            {this.renderError()}\r\n        </React.Fragment>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport {CharsControl} from './charsControl';\r\nimport {StringField} from '../field';\r\n\r\nexport class StringControl extends CharsControl {\r\n    protected field: StringField;\r\n    protected setProps() {\r\n        let p = super.setProps();\r\n        _.assign(p, {\r\n            type: 'text',\r\n            maxLength: this.field.maxLength,\r\n        });\r\n        return p;\r\n    };\r\n    protected parseValue(value?:string):any {\r\n        if (value === undefined) return undefined;\r\n        if (value.trim().length === 0) return undefined;\r\n        return value;\r\n    }\r\n}\r\n\r\nexport class PasswordControl extends StringControl {\r\n    protected setProps() {\r\n        let p = super.setProps();\r\n        _.assign(p, {\r\n            type: 'password',\r\n            maxLength: this.field.maxLength,\r\n        });\r\n        return p;\r\n    };\r\n}","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport {IntField, DecField, NumberField} from '../field';\r\nimport {CharsControl} from './charsControl';\r\n\r\nconst ErrInvalidNumber = '无效的数字';\r\nconst ErrMin = '最小值为';\r\nconst ErrMax = '最大值为';\r\n\r\nconst KeyCode_Neg = 45;\r\nconst KeyCode_Dot = 46;\r\n\r\nexport class NumberControl extends CharsControl {\r\n    protected field: IntField | DecField | NumberField;\r\n    protected value: number;\r\n    protected extraChars: number[];\r\n    \r\n    protected init() {\r\n        super.init();\r\n        this.extraChars = [];\r\n        let {min, max} = this.field;\r\n        if (min !== undefined) {\r\n            this.rules.push((v:number) => {if (v === undefined) return; if (v<min) return ErrMin + min; return true;});\r\n            if (min < 0) this.extraChars.push(KeyCode_Neg);\r\n        }\r\n        else {\r\n            this.extraChars.push(KeyCode_Neg);\r\n        }\r\n\r\n        if (max !== undefined) {\r\n            this.rules.push((v:number) => {if (v === undefined) return; if (v>max) return ErrMax + max; return true});\r\n        }\r\n        switch (this.field.type) {\r\n            case 'dec':\r\n            case 'number': this.extraChars.push(KeyCode_Dot); break;\r\n        }\r\n    }\r\n\r\n    protected parseValue(value?:string):any {\r\n        if (value === undefined) return undefined;\r\n        if (value.trim().length === 0) return undefined;\r\n        let n = Number.parseFloat(value);\r\n        if (isNaN(n)) throw new Error(ErrInvalidNumber);\r\n        return n;\r\n    }\r\n\r\n    protected setProps() {\r\n        super.setProps();\r\n        _.assign(this.props, {\r\n            type: 'number',\r\n            step: (this.field as DecField).step,\r\n            onKeyPress: this.onKeyPress.bind(this),\r\n        });\r\n    }\r\n\r\n    onKeyPress(event:KeyboardEvent) {\r\n        let ch = event.charCode;\r\n        if (ch === 8 || ch === 0 || ch === 13 || ch >= 48 && ch <= 57) return;\r\n        if (this.extraChars !== undefined) {\r\n            if (this.extraChars.indexOf(ch) >= 0) {\r\n                switch (ch) {\r\n                    case KeyCode_Dot: this.onKeyDot(); break;\r\n                    case KeyCode_Neg: this.onKeyNeg(); event.preventDefault(); break;\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    private onKeyDot() {\r\n        let v = this.element.value;\r\n        let p = v.indexOf('.');\r\n        if (p >= 0) this.element.value = v.replace('.', '');\r\n    }\r\n    private onKeyNeg() {\r\n        let v = this.element.value;\r\n        let p = v.indexOf('-');\r\n        if (p >= 0) v = v.replace('-', '');\r\n        else v = '-'+v;\r\n        this.element.value = v;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {Control, ControlBase} from './control';\r\nimport {FormView} from '../formView';\r\n\r\nexport class UnknownControl extends Control {\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-plaintext\">\r\n            <div className=\"alert alert-primary\" role=\"alert\">\r\n            don't know how to create control<br/>\r\n            field: {JSON.stringify(this.field)} must be object <br/>\r\n            face: {JSON.stringify(this.face)} must be object <br/>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class EmptyControl extends ControlBase {\r\n    private element:JSX.Element;\r\n    constructor(formView:FormView, element:JSX.Element) {\r\n        super(formView);\r\n        this.element = element;\r\n    }\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-plaintext\">\r\n            {this.element}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, IdPickFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class PickIdControl extends Control {\r\n    protected face: IdPickFace;\r\n    @observable private caption: string|JSX.Element;\r\n\r\n    private onClick = async () => {\r\n        let {pick, fromPicked} = this.face;\r\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\r\n        if (item === undefined) {\r\n            this.value = undefined;\r\n            return;\r\n        }\r\n        if (fromPicked === undefined) {\r\n            this.value = item.id;\r\n            return;\r\n        }\r\n        let {id, caption} = fromPicked(item);\r\n        this.value = id;\r\n        this.caption = caption;\r\n    }\r\n    onPicked = (value: any) => {\r\n        this.value = value.id;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        this.value = v;\r\n    }\r\n    private controlContent():string|JSX.Element {\r\n        let {itemFromId, fromPicked, initCaption} = this.face;\r\n        if (this.value === undefined) {\r\n            return initCaption || '请选择Id';\r\n        }\r\n        if (this.caption !== undefined) {\r\n            return this.caption;\r\n        }\r\n        if (itemFromId !== undefined) {\r\n            if (fromPicked !== undefined) {\r\n                let item = itemFromId(this.value);\r\n                if (item) {\r\n                    let ret = fromPicked(item);\r\n                    if (ret !== undefined) return ret.caption;\r\n                }\r\n            }\r\n        }\r\n        return String(this.value);\r\n    }\r\n    /*\r\n    private buildContent():string|JSX.Element {\r\n        let {tuid, input} = this.face;\r\n        if (input === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n            return <div onClick={this.onClick}>{this.controlContent()}</div>;\r\n        }\r\n        return <input.component id={this.value} \r\n            tuid={tuid}\r\n            input={input}\r\n            entitiesUI={this.formView.props.context} \r\n            params={this.formView.readValues()}\r\n            onPicked={this.onPicked} />;\r\n    }*/\r\n    renderControl():JSX.Element {\r\n        let {tuid, input} = this.face;\r\n        if (input === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n            return <div className=\"form-control-plaintext px-2 border text-primary rounded cursor-pointer\"\r\n                onClick={this.onClick}>\r\n                {this.controlContent()}\r\n            </div>;\r\n        }\r\n        return <div className=\"form-control-static \">\r\n            <input.component id={this.value} \r\n                ui={tuid}\r\n                //input={input}\r\n                //entitiesUI={this.formView.props.context} \r\n                //params={this.formView.readValues()}\r\n                //onPicked={this.onPicked}\r\n                />\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, TuidPickFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class PickTuidControl extends Control {\r\n    protected face: TuidPickFace;\r\n    // protected value: number;\r\n    @observable private caption: string|JSX.Element;\r\n    constructor(formView:FormView, field:Field, face:Face) {\r\n        super(formView, field, face);\r\n        this.onIdChanged = this.onIdChanged.bind(this);\r\n        //this.onClick = this.onClick.bind(this);\r\n    }\r\n    /*\r\n    private async onClick() {\r\n        let {pick, fromPicked} = this.face;\r\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\r\n        if (item === undefined) {\r\n            this.value = undefined;\r\n            return;\r\n        }\r\n        if (fromPicked === undefined) {\r\n            this.value = item.id;\r\n            return;\r\n        }\r\n        let {id, caption} = fromPicked(item);\r\n        this.value = id;\r\n        this.caption = caption;\r\n    }*/\r\n    onIdChanged(id: any) {\r\n        this.value = id.id;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        this.value = v;\r\n    }\r\n    private buildContent():JSX.Element {\r\n        //let {tuid, input} = this.face;\r\n        return <this.face.input.component \r\n            {...this.face}\r\n            id={this.value}\r\n            //ui={this.face.ui}\r\n            //input={input}\r\n            //entitiesUI={this.formView.props.context} \r\n            onFormValues={()=>this.formView.readValues()}\r\n            onIdChanged={this.onIdChanged} />;\r\n    }\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-static \">\r\n            {this.buildContent()}\r\n        </div>;\r\n    }\r\n}\r\n/*\r\n<button className=\"form-control btn btn-outline-info\"\r\ntype=\"button\"\r\nstyle={{textAlign:'left', paddingLeft:'0.75rem'}}\r\nonClick={this.onClick}>\r\n{this.buildContent()}\r\n</button>\r\n*/","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, PickFace} from '../face';\r\nimport {Control} from './control';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class PickControl extends Control {\r\n    protected face: PickFace;\r\n    @observable private caption: string|JSX.Element;\r\n\r\n    private onClick = async () => {\r\n        let {pick, fromPicked} = this.face;\r\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\r\n        if (item === undefined) {\r\n            this.value = undefined;\r\n            return;\r\n        }\r\n        let {id, caption} = fromPicked(item);\r\n        this.value = id;\r\n        this.caption = caption;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        this.value = v;\r\n    }\r\n    /*\r\n    private controlContent():string|JSX.Element {\r\n        let {content: Content} = this.face;\r\n        if (this.value === undefined) {\r\n            return '请选择';\r\n        }\r\n        \r\n        if (this.caption !== undefined) {\r\n            return this.caption;\r\n        }\r\n        return <Content id={this.value} />;\r\n    }*/\r\n    /*\r\n    private buildContent():string|JSX.Element {\r\n        let {tuid, input} = this.face;\r\n        if (input === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n            return <div onClick={this.onClick}>{this.controlContent()}</div>;\r\n        }\r\n        return <input.component id={this.value} \r\n            tuid={tuid}\r\n            input={input}\r\n            entitiesUI={this.formView.props.context} \r\n            params={this.formView.readValues()}\r\n            onPicked={this.onPicked} />;\r\n    }*/\r\n    renderControl():JSX.Element {\r\n        return <this.view />;\r\n        /*\r\n        let {content:Content} = this.face;\r\n        //if (this.value === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n        //}\r\n        //return <div className=\"form-control-static \">\r\n        //    <Content />\r\n        //</div>;\r\n        */\r\n    }\r\n\r\n    private view = observer(() => {\r\n        let content;\r\n        let {content: Content} = this.face;\r\n        if (this.value === undefined || this.value === null) {\r\n            content = '请选择';\r\n        }\r\n        /*\r\n        else if (this.caption !== undefined) {\r\n            content = this.caption;\r\n        }*/\r\n        else {\r\n            content = <Content id={this.value} />;\r\n        } \r\n        return <div\r\n            className=\"form-control-plaintext px-2 border text-primary rounded cursor-pointer bg-light\"\r\n            onClick={this.onClick}>\r\n            {content}\r\n        </div>\r\n    });\r\n}\r\n","export * from './control';\r\nexport * from './buttonsControl';\r\nexport * from './stringControl';\r\nexport * from './numberControl';\r\n\r\nimport {Field} from '../field';\r\nimport {Face} from '../face';\r\nimport {Control, ControlBase} from './control';\r\nimport {ButtonsControl} from './buttonsControl';\r\nimport {CheckControl} from './checkControl';\r\nimport {RadioControl} from './radioControl';\r\nimport {TextAreaControl} from './textAreaControl';\r\nimport {SelectControl} from './selectControl';\r\nimport {UnknownControl, EmptyControl} from './unknownControl';\r\nimport {StringControl, PasswordControl} from './stringControl';\r\nimport {NumberControl} from './numberControl';\r\n\r\nimport {FormView, FormRow, GroupRow, FieldRow, LabelFormRow} from '../formView';\r\nimport { PickIdControl } from './pickIdControl';\r\nimport { PickTuidControl } from './pickTuidControl';\r\nimport { PickControl } from './pickControl';\r\n\r\nexport type CreateControl = (form:FormView, row: FormRow) => ControlBase\r\n\r\nexport const createControl:CreateControl = (form:FormView, row: LabelFormRow):ControlBase => {\r\n    let label = row.label;\r\n    if ((<GroupRow>row).group !== undefined)\r\n        return createGroupControl(form, label, row as GroupRow);\r\n    if ((<FieldRow>row).field !== undefined)\r\n        return createFieldControl(form, label, row as FieldRow);\r\n    return new EmptyControl(form, row.help);\r\n}\r\n\r\nconst controls:{[type:string]: new (formView:FormView, field:Field, face:Face) => Control} = {\r\n    \"string\": StringControl,\r\n    \"password\": PasswordControl,\r\n    \"number\": NumberControl,\r\n    \"checkbox\": CheckControl,\r\n    \"radiobox\": RadioControl,\r\n    \"select\": SelectControl,\r\n    \"pick-id\": PickIdControl,\r\n    \"pick-tuid\": PickTuidControl,\r\n    \"textarea\": TextAreaControl,\r\n    \"pick\": PickControl,\r\n};\r\nconst defaultFaces:{[type:string]: Face} = {\r\n    \"string\": {type:'string'},\r\n    \"number\": {type:'number'},\r\n    \"int\": {type:'number'},\r\n    \"dec\": {type:'number'},\r\n    \"bool\": {type:'checkbox'},\r\n}\r\nfunction createFieldControl(form:FormView, label:string, fieldRow: FieldRow):Control {\r\n    let {field, face} = fieldRow;\r\n    switch (typeof field) {\r\n        case 'string':\r\n            field = {\r\n                name: (field as any) as string,\r\n                type: 'string',\r\n            }\r\n            break;\r\n        case 'object':\r\n            break;\r\n        default:\r\n            return new UnknownControl(form, field, face);\r\n    }\r\n    let fieldType = field.type || 'string';\r\n    if (face === undefined) {\r\n        face = defaultFaces[fieldType];\r\n        if (face === undefined) return new UnknownControl(form, field, face);\r\n    }\r\n    else if (face.type === undefined) {\r\n        let f = defaultFaces[fieldType];\r\n        face.type = f===undefined? 'string' : f.type;\r\n    }\r\n    let control = controls[face.type || fieldType] || UnknownControl;\r\n    return new control(form, field, face);\r\n}\r\n\r\nfunction createGroupControl(form:FormView, label:string, groupRow: GroupRow):Control {\r\n    return new UnknownControl(form, groupRow as any, undefined);\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field, BoolField} from '../field';\r\nimport {Face, CheckBoxFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class CheckControl extends Control {    \r\n    protected element: HTMLInputElement;\r\n    protected field: BoolField;\r\n    protected face: CheckBoxFace;\r\n    private trueValue: any;\r\n    private falseValue: any;\r\n\r\n    protected init() {\r\n        super.init();\r\n        let {trueValue, falseValue} = this.field;\r\n        if (trueValue === undefined) this.trueValue = 1;\r\n        if (falseValue === undefined) this.falseValue = 0;\r\n    }\r\n\r\n    setProps() {\r\n        super.setProps();\r\n        _.assign(this.props, {\r\n            onChange: this.onChange.bind(this),\r\n        });\r\n    }\r\n\r\n    clearValue() {\r\n        this.element.checked = this.field.defaultValue === this.trueValue;\r\n        this.value = this.getValueFromElement();\r\n    }\r\n\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        if (v === undefined) {\r\n            v = this.field.defaultValue;\r\n        }\r\n        if (v !== undefined) {\r\n            //this.element.checked = v === this.trueValue;\r\n            //this.value = this.getValueFromElement();\r\n        }\r\n    }\r\n\r\n    protected getValueFromElement():any { return this.element.checked? this.trueValue:this.falseValue; }\r\n\r\n    private onChange() {\r\n        this.value = this.getValueFromElement();\r\n    }\r\n\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-static\">\r\n            <label className=\"form-control\">\r\n                <label className=\"custom-control custom-checkbox mb-0\">\r\n                    <input type='checkbox'\r\n                        name={this.field.name}\r\n                        ref={this.props.ref}\r\n                        onChange={this.props.onChange}\r\n                        className=\"custom-control-input\" />\r\n                    <span className=\"custom-control-indicator\" />\r\n                    <span className=\"custom-control-description\">{this.face.label}</span>\r\n                </label>\r\n            </label>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, RadioFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class RadioControl extends Control {\r\n    protected face: RadioFace;\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-static\">\r\n            <div className=\"form-control\">\r\n            {\r\n                this.face.list.map((item, index) => {\r\n                    let t, v;\r\n                    if (typeof item !== 'object') t = v = item;\r\n                    else {\r\n                        t = item.text;\r\n                        v = item.value;\r\n                    }\r\n                    return <label key={index} className=\"custom-control custom-radio w-25\">\r\n                        <input type='radio'\r\n                            name={this.field.name} \r\n                            className=\"custom-control-input\" />\r\n                        <span className=\"custom-control-indicator\"></span>\r\n                        <span className=\"custom-control-description\">{t}</span>\r\n                    </label>;\r\n                })\r\n            }\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, SelectFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class SelectControl extends Control {\r\n    constructor (formView:FormView, field:Field, face:Face) {\r\n        super(formView, field, face);\r\n        this.ref = this.ref.bind(this);\r\n    }\r\n    protected face: SelectFace;\r\n    protected element: HTMLSelectElement;\r\n    protected getValueFromElement():any {\r\n        let {selectedIndex, selectedOptions} = this.element;\r\n        let v:any = selectedOptions[0].value;\r\n        switch (this.field.type) {\r\n            case 'number': v = Number(v); break;\r\n            case 'date': v = new Date(v); break;\r\n            case 'bool': \r\n                if (typeof v === 'string') {\r\n                    v = ((v as string).toLowerCase() === 'true');\r\n                }\r\n                break;\r\n        }\r\n        return v;\r\n    }\r\n    renderControl():JSX.Element {\r\n        let {list} = this.face;\r\n        let def = this.face.default;\r\n        let options: any[] = [];\r\n        if (def === undefined)\r\n            options.push(<option key={-1} value={undefined}>请选择</option>);\r\n        options.push(...list.map((item, index) => {\r\n            let t, v;\r\n            if (typeof item !== 'object') t = v = item;\r\n            else {\r\n                t = item.text;\r\n                v = item.value;\r\n            }\r\n            return <option key={index} value={v}>{t}</option>;\r\n        }));\r\n        return <div className=\"form-control-static\">\r\n            <select name={this.field.name} className=\"form-control\" ref={this.ref}>\r\n                {options}\r\n            </select>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport {CharsControl} from './charsControl';\r\nimport {StringField} from '../field';\r\nimport {TextAreaFace} from '../face';\r\n\r\nexport class TextAreaControl extends CharsControl {\r\n    protected field: StringField;\r\n    protected face: TextAreaFace;\r\n    private el: HTMLTextAreaElement;\r\n    protected setProps() {\r\n        let p = super.setProps();\r\n        let {maxLength} = this.field;\r\n        let {rows} = this.face;\r\n        _.assign(p, {\r\n            maxLength: maxLength,\r\n            rows: rows,\r\n        });\r\n        return p;\r\n    };\r\n    protected renderInput():JSX.Element {\r\n        return <textarea ref={t=>{this.el = t;if (t!==undefined) t.value=''}} className={this.className()} {...this.props} />;\r\n    }\r\n}\r\n","import { Entities, Field, ArrFields, FieldMap } from './entities';\r\nimport { TuidMain, Tuid } from './tuid';\r\n\r\nconst tab = '\\t';\r\nconst ln = '\\n';\r\n\r\nexport abstract class Entity {\r\n    protected entities: Entities;\r\n    protected schema: any;\r\n    private jName: string;\r\n    sys?: boolean;\r\n    readonly name: string;\r\n    readonly typeId: number;\r\n    abstract get typeName(): string;\r\n    get sName():string {return this.jName || this.name}\r\n    fields: Field[];\r\n    arrFields: ArrFields[];\r\n    returns: ArrFields[];\r\n\r\n    constructor(entities:Entities, name:string, typeId:number) {\r\n        this.entities = entities;\r\n        this.name = name;\r\n        this.typeId = typeId;\r\n        this.sys = this.name.indexOf('$') >= 0;\r\n    }\r\n\r\n    public face: any;           // 对应字段的label, placeHolder等等的中文，或者语言的翻译\r\n\r\n    protected get tvApi() {return this.entities.uqApi;}\r\n    getApiFrom() {return this.entities.uqApi;}\r\n\r\n    private fieldMaps: {[arr:string]: FieldMap} = {};\r\n    fieldMap(arr?:string): FieldMap {\r\n        if (arr === undefined) arr = '$';\r\n        let ret = this.fieldMaps[arr];\r\n        if (ret === undefined) {\r\n            let fields:Field[];\r\n            if (arr === '$') fields = this.fields;\r\n            else if (this.arrFields !== undefined) {\r\n                let arrFields = this.arrFields.find(v => v.name === arr);\r\n                if (arrFields !== undefined) fields = arrFields.fields;\r\n            }\r\n            else if (this.returns !== undefined) {\r\n                let arrFields = this.returns.find(v => v.name === arr);\r\n                if (arrFields !== undefined) fields = arrFields.fields;\r\n            }\r\n            if (fields === undefined) return {};\r\n            ret = {};\r\n            for (let f of fields) ret[f.name] = f;\r\n            this.fieldMaps[arr] = ret;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    public async loadSchema():Promise<void> {\r\n        if (this.schema !== undefined) return;\r\n        let schema = await this.entities.uqApi.schema(this.name);\r\n        this.setSchema(schema);\r\n        this.buildFieldsTuid();\r\n    }\r\n\r\n    public setSchema(schema:any) {\r\n        if (schema === undefined) return;\r\n        if (this.schema !== undefined) return;\r\n        this.schema = schema;\r\n        let {name} = schema;\r\n        if (name !== this.name) this.jName = name;\r\n        this.buildFieldsTuid();\r\n    }\r\n\r\n    public buildFieldsTuid() {\r\n        let {fields, arrs, returns} = this.schema;\r\n        this.entities.buildFieldTuid(this.fields = fields);\r\n        this.entities.buildArrFieldsTuid(this.arrFields = arrs, fields);\r\n        this.entities.buildArrFieldsTuid(this.returns = returns, fields);\r\n        //this.newMain = this.buildCreater(fields);\r\n        //this.newArr = this.buildArrCreater(arrs);\r\n        //this.newRet = this.buildArrCreater(returns);\r\n    }\r\n\r\n    schemaStringify():string {\r\n        return JSON.stringify(this.schema, (key:string, value:any) => {\r\n            if (key === '_tuid') return undefined;\r\n            return value;\r\n        }, 4);\r\n    }\r\n\r\n    tuidFromField(field:Field):Tuid {\r\n        let {_tuid, tuid} = field;\r\n        if (tuid === undefined) return;\r\n        if (_tuid !== undefined) return _tuid;\r\n        return field._tuid = this.entities.getTuid(tuid, undefined);\r\n    }\r\n\r\n    tuidFromName(fieldName:string, arrName?:string):Tuid {\r\n        if (this.schema === undefined) return;\r\n        let {fields, arrs} = this.schema;\r\n        let entities = this.entities;\r\n        function getTuid(fn:string, fieldArr:Field[]) {\r\n            if (fieldArr === undefined) return;\r\n            let f = fieldArr.find(v => v.name === fn);\r\n            if (f === undefined) return;\r\n            return entities.getTuid(f.tuid, undefined);\r\n        }\r\n        let fn = fieldName.toLowerCase();\r\n        if (arrName === undefined) return getTuid(fn, fields);\r\n        if (arrs === undefined) return;\r\n        let an = arrName.toLowerCase();\r\n        let arr = (arrs as ArrFields[]).find(v => v.name === an);\r\n        if (arr === undefined) return;\r\n        return getTuid(fn, arr.fields);\r\n    }\r\n\r\n    protected buildParams(params:any):any {\r\n        let result = {};\r\n        let fields = this.fields;\r\n        if (fields !== undefined) this.buildFieldsParams(result, fields, params);\r\n        let arrs = this.arrFields;\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                let {name, fields} = arr;\r\n                let paramsArr:any[] = params[name];\r\n                if (paramsArr === undefined) continue;\r\n                let arrResult = [];\r\n                result[name] = arrResult;\r\n                for (let pa of params) {\r\n                    let rowResult = {};\r\n                    this.buildFieldsParams(rowResult, fields, pa);\r\n                    arrResult.push(rowResult);\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private buildFieldsParams(result:any, fields:Field[], params:any) {\r\n        for (let field of fields) {\r\n            let {name} = field;\r\n            let d = params[name];\r\n            let val:any;\r\n            switch (typeof d) {\r\n                default: val = d; break;\r\n                case 'object':\r\n                    let tuid = field._tuid;\r\n                    if (tuid === undefined) val = d.id;\r\n                    else val = tuid.getIdFromObj(d);\r\n                    break;\r\n            }\r\n            result[name] = val;\r\n        }\r\n    }\r\n\r\n    pack(data:any):string {\r\n        let ret:string[] = [];\r\n        let fields = this.fields;\r\n        if (fields !== undefined) this.packRow(ret, fields, data);\r\n        let arrs = this.arrFields; //schema['arrs'];\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                this.packArr(ret, arr.fields, data[arr.name]);\r\n            }\r\n        }\r\n        return ret.join('');\r\n    }\r\n\r\n    private escape(row:any, field:Field):any {\r\n        let d = row[field.name];\r\n        switch (typeof d) {\r\n            default: return d;\r\n            case 'object':\r\n                let tuid = field._tuid;\r\n                if (tuid === undefined) return d.id;\r\n                return tuid.getIdFromObj(d);\r\n            case 'string':\r\n                let len = d.length;\r\n                let r = '', p = 0;\r\n                for (let i=0;i<len;i++) {\r\n                    let c = d.charCodeAt(i);\r\n                    switch(c) {\r\n                        case 9: r += d.substring(p, i) + '\\\\t'; p = i+1; break;\r\n                        case 10: r += d.substring(p, i) + '\\\\n'; p = i+1; break;\r\n                    }\r\n                }\r\n                return r + d.substring(p);\r\n            case 'undefined': return '';\r\n        }\r\n    }\r\n\r\n    private packRow(result:string[], fields:Field[], data:any) {\r\n        let len = fields.length;\r\n        if (len === 0) return;\r\n        let ret = '';\r\n        ret += this.escape(data, fields[0]);\r\n        for (let i=1;i<len;i++) {\r\n            let f = fields[i];\r\n            ret += tab + this.escape(data, f);\r\n        }\r\n        result.push(ret + ln);\r\n    }\r\n\r\n    private packArr(result:string[], fields:Field[], data:any[]) {\r\n        if (data !== undefined) {\r\n            for (let row of data) {\r\n                this.packRow(result, fields, row);\r\n            }\r\n        }\r\n        result.push(ln);\r\n    }\r\n\r\n    unpackSheet(data:string):any {\r\n        let ret = {} as any; //new this.newMain();\r\n        //if (schema === undefined || data === undefined) return;\r\n        let fields = this.fields;\r\n        let p = 0;\r\n        if (fields !== undefined) p = this.unpackRow(ret, fields, data, p);\r\n        let arrs = this.arrFields; //schema['arrs'];\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                p = this.unpackArr(ret, arr, data, p);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    unpackReturns(data:string):any {\r\n        let ret = {} as any;\r\n        //if (schema === undefined || data === undefined) return;\r\n        //let fields = schema.fields;\r\n        let p = 0;\r\n        //if (fields !== undefined) p = unpackRow(ret, schema.fields, data, p);\r\n        let arrs = this.returns; //schema['returns'];\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                //let creater = this.newRet[arr.name];\r\n                p = this.unpackArr(ret, arr, data, p);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    protected unpackRow(ret:any, fields:Field[], data:string, p:number):number {\r\n        let ch0 = 0, ch = 0, c = p, i = 0, len = data.length, fLen = fields.length;\r\n        for (;p<len;p++) {\r\n            ch0 = ch;\r\n            ch = data.charCodeAt(p);\r\n            if (ch === 9) {\r\n                let f = fields[i];\r\n                let {name} = f;\r\n                if (ch0 !== 8) {\r\n                    if (p>c) {\r\n                        let v = data.substring(c, p);\r\n                        ret[name] = this.to(ret, v, f);\r\n                    }\r\n                }\r\n                else {\r\n                    ret[name] = null;\r\n                }\r\n                c = p+1;\r\n                ++i;\r\n                if (i>=fLen) {\r\n                    p = data.indexOf('\\n', c);\r\n                    if (p >= 0) ++p;\r\n                    else p = len;\r\n                    break;\r\n                }\r\n            }\r\n            else if (ch === 10) {\r\n                let f = fields[i];\r\n                let {name} = f;\r\n                if (ch0 !== 8) {\r\n                    if (p>c) {\r\n                        let v = data.substring(c, p);\r\n                        ret[name] = this.to(ret, v, f);\r\n                    }\r\n                }\r\n                else {\r\n                    ret[name] = null;\r\n                }\r\n                ++p;\r\n                ++i;\r\n                break;\r\n            }\r\n        }\r\n        return p;\r\n    }\r\n\r\n    private to(ret:any, v:string, f:Field):any {\r\n        switch (f.type) {\r\n            default: return v;\r\n            case 'datetime':\r\n            case 'date':\r\n            case 'time':\r\n                let date = new Date(Number(v));\r\n                return date;\r\n            case 'id':\r\n            case 'tinyint':\r\n            case 'smallint':\r\n            case 'int':\r\n            case 'dec': return Number(v);\r\n            case 'bigint':\r\n                let id = Number(v);\r\n                let {_tuid} = f;\r\n                if (_tuid === undefined) return id;\r\n                _tuid.useId(id, true);\r\n                return _tuid.boxId(id);\r\n        }\r\n    }\r\n\r\n    private unpackArr(ret:any, arr:ArrFields, data:string, p:number):number {\r\n        let vals:any[] = [], len = data.length;\r\n        let {name, fields} = arr;\r\n        while (p<len) {\r\n            let ch = data.charCodeAt(p);\r\n            if (ch === 10) {\r\n                ++p;\r\n                break;\r\n            }\r\n            let val = {} as any; //new creater();\r\n            vals.push(val);\r\n            p = this.unpackRow(val, fields, data, p);\r\n        }\r\n        ret[name] = vals;\r\n        return p;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport _ from 'lodash';\r\nimport { Entity } from './entity';\r\nimport { Entities, Field, ArrFields } from './entities';\r\nimport { isNumber } from 'util';\r\nimport { CUq, CTuidMain, CTuidEdit, CTuidInfo, CTuidSelect } from '../controllers';\r\n\r\nexport class BoxId {\r\n    id: number;\r\n    obj?: any;\r\n    content: (templet?:(values?:any, x?:any)=>JSX.Element, x?:any)=>JSX.Element;\r\n    valueFromFieldName: (fieldName:string)=>BoxId|any;\r\n    _$com?: any;\r\n    _$tuid?: Tuid;\r\n    getObj: ()=>any;\r\n}\r\n\r\nconst maxCacheSize = 1000;\r\nexport abstract class Tuid extends Entity {\r\n    private BoxId: ()=>void;\r\n    get typeName(): string { return 'tuid';}\r\n    private queue: number[] = [];               // 每次使用，都排到队头\r\n    private waitingIds: number[] = [];          // 等待loading的\r\n    private cache = observable.map({}, {deep: false});    // 已经缓冲的\r\n    idName: string;\r\n    owner: TuidMain;                    // 用这个值来区分是不是TuidArr\r\n    unique: string[];\r\n    schemaFrom: {owner:string; uq:string};\r\n\r\n    constructor(entities:Entities, owner:TuidMain, name:string, typeId:number) {\r\n        super(entities, name, typeId);\r\n        this.owner = owner;\r\n        //this.buildIdBoxer();\r\n    }\r\n\r\n    abstract get Main():Tuid;\r\n\r\n    private buildIdBoxer() {\r\n        if (this.BoxId !== undefined) return;\r\n        this.BoxId = function():void {};\r\n        let prototype = this.BoxId.prototype;\r\n        Object.defineProperty(prototype, '_$tuid', {\r\n            value: this, //.from(),\r\n            writable: false,\r\n            enumerable: false,\r\n        });\r\n        Object.defineProperty(prototype, 'obj', {\r\n            enumerable: false,\r\n            get: function() {\r\n                if (this.id === undefined || this.id<=0) return undefined;\r\n                return this._$tuid.valueFromId(this.id);\r\n            }\r\n        });\r\n        prototype.valueFromFieldName = function(fieldName:string):BoxId|any {\r\n            let t:Tuid = this._$tuid;\r\n            return t.valueFromFieldName(fieldName, this.obj);\r\n        };\r\n        prototype.getObj = function():any {\r\n            if (this._$tuid !== undefined) {\r\n                return this._$tuid.getCacheValue(this.id);\r\n            }\r\n        };\r\n        prototype.toJSON = function() {return this.id};\r\n    }\r\n    boxId(id:number):BoxId {\r\n        if (typeof id === 'object') return id as any;\r\n        this.useId(id);\r\n        this.buildIdBoxer();\r\n        let ret:BoxId = new this.BoxId();\r\n        ret.id = id;\r\n        return ret;\r\n    }\r\n    getTuidContent() {\r\n        return this.entities.cUq.getTuidContent(this);\r\n    }\r\n    getIdFromObj(item:any):number {\r\n        return item[this.idName];\r\n    }\r\n\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        let {id, unique} = schema;\r\n        this.idName = id;\r\n        this.unique = unique;\r\n        this.schemaFrom = this.schema.from;\r\n    }\r\n    public buildFieldsTuid() {\r\n        super.buildFieldsTuid();\r\n        let {mainFields} = this.schema;\r\n        if (mainFields !== undefined) {\r\n            for (let mf of mainFields) {\r\n                let f = this.fields.find(v => v.name === mf.name);\r\n                if (f === undefined) continue;\r\n                mf._tuid = f._tuid;\r\n            }\r\n        }\r\n    }\r\n    private moveToHead(id:number) {\r\n        let index = this.queue.findIndex(v => v === id);\r\n        this.queue.splice(index, 1);\r\n        this.queue.push(id);\r\n    }\r\n\r\n    valueFromId(id:number|BoxId):any {\r\n        let _id:number;\r\n        let tId = typeof id;\r\n        switch (typeof id) {\r\n            case 'object': _id = (id as BoxId).id; break;\r\n            case 'number': _id = id as number; break;\r\n            default: return;\r\n        }\r\n        return this.getCacheValue(_id);\r\n    }\r\n    getCacheValue(id:number) {\r\n        let v = this.cache.get(id);\r\n        if (this.owner !== undefined && typeof v === 'object') {\r\n            v.$owner = this.owner.boxId(v.owner); // this.owner.valueFromId(v.owner);\r\n        }\r\n        return v;\r\n    }\r\n    valueFromFieldName(fieldName:string, obj:any):BoxId|any {\r\n        if (obj === undefined) return;\r\n        if (this.fields === undefined) return;\r\n        let f = this.fields.find(v => v.name === fieldName);\r\n        if (f === undefined) return;\r\n        let v = obj[fieldName];\r\n        let {_tuid} = f;\r\n        if (_tuid === undefined) return v;\r\n        return _tuid.valueFromId(v);\r\n    }\r\n    resetCache(id:number) {\r\n        this.cache.delete(id);\r\n        let index = this.queue.findIndex(v => v === id);\r\n        this.queue.splice(index, 1);\r\n        this.useId(id);\r\n    }\r\n    useId(id:number, defer?:boolean) {\r\n        if (id === undefined || id === 0) return;\r\n        if (isNumber(id) === false) return;        \r\n        if (this.cache.has(id) === true) {\r\n            this.moveToHead(id);\r\n            return;\r\n        }\r\n        this.entities.cacheTuids(defer===true?70:20);\r\n        //let idVal = this.createID(id);\r\n        this.cache.set(id, id);\r\n        if (this.waitingIds.findIndex(v => v === id) >= 0) {\r\n            this.moveToHead(id);\r\n            return;\r\n        }\r\n\r\n        if (this.queue.length >= maxCacheSize) {\r\n            // 缓冲已满，先去掉最不常用的\r\n            let r = this.queue.shift();\r\n            if (r === id) {\r\n                // 如果移除的，正好是现在用的，则插入\r\n                this.queue.push(r);\r\n                return;\r\n            }\r\n\r\n            //let rKey = String(r);\r\n            if (this.cache.has(r) === true) {\r\n                // 如果移除r已经缓存\r\n                this.cache.delete(r);\r\n            }\r\n            else {\r\n                // 如果移除r还没有缓存\r\n                let index = this.waitingIds.findIndex(v => v === r);\r\n                this.waitingIds.splice(index, 1);\r\n            }\r\n        }\r\n        this.waitingIds.push(id);\r\n        this.queue.push(id);\r\n        return;\r\n    }\r\n    async proxied(name:string, id:number):Promise<any> {\r\n        let proxyTuid = this.entities.getTuid(name, undefined);\r\n        proxyTuid.useId(id);\r\n        let proxied = await this.tvApi.proxied(this.name, name, id);\r\n        this.cacheValue(proxied);\r\n        return proxied;\r\n    }\r\n    cacheValue(val:any):boolean {\r\n        if (val === undefined) return false;\r\n        let id = this.getIdFromObj(val);\r\n        if (id === undefined) return false;\r\n        let index = this.waitingIds.findIndex(v => v === id);\r\n        if (index>=0) this.waitingIds.splice(index, 1);\r\n        //let cacheVal = this.createID(id, val);\r\n        this.cache.set(id, val);\r\n        // 下面的代码应该是cache proxy id, 需要的时候再写吧\r\n        /*\r\n        let {tuids, fields} = this.schema;\r\n        if (tuids !== undefined && fields !== undefined) {\r\n            for (let f of fields) {\r\n                let {name, tuid} = f;\r\n                if (tuid === undefined) continue;\r\n                let t = this.entities.tuid(tuid);\r\n                if (t === undefined) continue;\r\n                t.useId(val[name]);\r\n            }\r\n        }*/\r\n        return true;\r\n    }\r\n    protected afterCacheId(tuidValue:any) {\r\n        if (this.fields === undefined) return;\r\n        for (let f of this.fields) {\r\n            let {_tuid} = f;\r\n            if (_tuid === undefined) continue;\r\n            _tuid.useId(tuidValue[f.name]);\r\n        }\r\n    }\r\n    from(): Tuid {return;}\r\n    private unpackTuidIds(values:any[]|string):any[] {\r\n        if (this.schemaFrom === undefined) {\r\n            let {mainFields} = this.schema;\r\n            if (mainFields === undefined) return values as any[];\r\n            let ret:any[] = []\r\n            let len = (values as string).length;\r\n            let p = 0;\r\n            while (p<len) {\r\n                let ch = (values as string).charCodeAt(p);\r\n                if (ch === 10) {\r\n                    ++p;\r\n                    break;\r\n                }\r\n                let row = {};\r\n                p = this.unpackRow(row, mainFields, values as string, p);\r\n                ret.push(row);\r\n            }\r\n            return ret;\r\n        }\r\n        else {\r\n            let tuidMain = this.from();\r\n            let ret = tuidMain.unpackTuidIds(values);\r\n            return ret;\r\n        }\r\n    }\r\n    async cacheIds():Promise<void> {\r\n        if (this.waitingIds.length === 0) return;\r\n        let name:string, arr:string;\r\n        if (this.owner === undefined) {\r\n            name = this.name;\r\n        }\r\n        else {\r\n            name = this.owner.name;\r\n            arr = this.name;\r\n        }\r\n        let api = this.getApiFrom();\r\n        let tuids = await api.tuidIds(name, arr, this.waitingIds);\r\n        tuids = this.unpackTuidIds(tuids);\r\n        for (let tuidValue of tuids) {\r\n            if (this.cacheValue(tuidValue) === false) continue;\r\n            this.cacheTuidFieldValues(tuidValue);\r\n            this.afterCacheId(tuidValue);\r\n        }\r\n        await this.cacheDivIds();\r\n    }\r\n    protected async cacheDivIds():Promise<void> {\r\n    }\r\n    async load(id:number):Promise<any> {\r\n        if (id === undefined || id === 0) return;\r\n        let api = this.getApiFrom();\r\n        let values = await api.tuidGet(this.name, id);\r\n        if (values === undefined) return;\r\n        for (let f of this.schema.fields) {\r\n            let {tuid} = f;\r\n            if (tuid === undefined) continue;\r\n            let t = this.entities.getTuid(tuid);\r\n            if (t === undefined) continue;\r\n            let n = f.name;\r\n            values[n] = t.boxId(values[n]);\r\n        }\r\n        //values._$tuid = this;\r\n        this.cacheValue(values);\r\n        this.cacheTuidFieldValues(values);\r\n        return values;\r\n    }\r\n    getDiv(divName:string):TuidDiv {return;}\r\n    private cacheTuidFieldValues(values:any) {\r\n        let {fields, arrs} = this.schema;\r\n        this.cacheFieldsInValue(values, fields);\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs as ArrFields[]) {\r\n                let {name, fields} = arr;\r\n                let arrValues = values[name];\r\n                if (arrValues === undefined) continue;\r\n                let tuidDiv = this.getDiv(name);\r\n                for (let row of arrValues) {\r\n                    row._$tuid = tuidDiv;\r\n                    row.$owner = this.boxId(row.owner);\r\n                    tuidDiv.cacheValue(row);\r\n                    this.cacheFieldsInValue(row, fields);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    private cacheFieldsInValue(values:any, fields:Field[]) {\r\n        for (let f of fields as Field[]) {\r\n            let {name, _tuid} = f;\r\n            if (_tuid === undefined) continue;\r\n            let id = values[name];\r\n            //_tuid.useId(id);\r\n            values[name] = _tuid.boxId(id);\r\n        }\r\n    }\r\n    async save(id:number, props:any) {\r\n        let params = _.clone(props);\r\n        params[\"$id\"] = id;\r\n        let ret = await this.tvApi.tuidSave(this.name, params);\r\n        /*\r\n        let {id:retId, inId} = ret;\r\n        if (retId === undefined) {\r\n            params.id = id;\r\n            this.cacheValue(params);\r\n        }\r\n        else if (retId > 0) {\r\n            params.id = retId;\r\n            this.cacheValue(params);\r\n        }\r\n        */\r\n        return ret;\r\n    }\r\n    async search(key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        let ret:any[] = await this.searchArr(undefined, key, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    async searchArr(owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        let {fields} = this.schema;\r\n        let name:string, arr:string;\r\n        if (this.owner !== undefined) {\r\n            name = this.owner.name;\r\n            arr = this.name;\r\n        }\r\n        else {\r\n            name = this.name;\r\n            arr = undefined;\r\n        }\r\n        let api = this.getApiFrom();\r\n        let ret = await api.tuidSearch(name, arr, owner, key, pageStart, pageSize);\r\n        for (let row of ret) {\r\n            this.cacheFieldsInValue(row, fields);\r\n            if (this.owner !== undefined) row.$owner = this.owner.boxId(row.owner);\r\n        }\r\n        return ret;\r\n    }\r\n    async loadArr(arr:string, owner:number, id:number):Promise<any> {\r\n        if (id === undefined || id === 0) return;\r\n        let api = this.getApiFrom();\r\n        return await api.tuidArrGet(this.name, arr, owner, id);\r\n    }\r\n    /*\r\n    async loadArrAll(owner:number):Promise<any[]> {\r\n        return this.all = await this.tvApi.tuidGetAll(this.name);\r\n    }*/\r\n    async saveArr(arr:string, owner:number, id:number, props:any) {\r\n        let params = _.clone(props);\r\n        params[\"$id\"] = id;\r\n        return await this.tvApi.tuidArrSave(this.name, arr, owner, params);\r\n    }\r\n    async posArr(arr:string, owner:number, id:number, order:number) {\r\n        return await this.tvApi.tuidArrPos(this.name, arr, owner, id, order);\r\n    }\r\n\r\n    // cache放到Tuid里面之后，这个函数不再需要公开调用了\r\n    //private async ids(idArr:number[]) {\r\n    //    return await this.tvApi.tuidIds(this.name, idArr);\r\n    //}\r\n    async showInfo(id:number) {\r\n        await this.entities.cUq.showTuid(this, id);\r\n    }\r\n}\r\n\r\nexport class TuidMain extends Tuid {\r\n    get Main() {return this}\r\n    get uqApi() {return this.entities.uqApi};\r\n\r\n    divs: {[name:string]: TuidDiv};\r\n    //proxies: {[name:string]: TuidMain};\r\n\r\n    public setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        let {arrs} = schema;\r\n        if (arrs !== undefined) {\r\n            this.divs = {};\r\n            for (let arr of arrs) {\r\n                let {name} = arr;\r\n                let tuidDiv = new TuidDiv(this.entities, this, name, this.typeId);\r\n                this.divs[name] = tuidDiv;\r\n                tuidDiv.setSchema(arr);\r\n            }\r\n        }\r\n    }\r\n    getDiv(divName:string):TuidDiv {return this.divs[divName];}\r\n    /* 努力回避async里面的super调用，edge不兼容\r\n    async cacheIds():Promise<void> {\r\n        await super.cacheIds();\r\n        if (this.divs === undefined) return;\r\n        for (let i in this.divs) {\r\n            await this.divs[i].cacheIds();\r\n        }\r\n    }\r\n    */\r\n    protected async cacheDivIds():Promise<void> {\r\n        if (this.divs === undefined) return;\r\n        for (let i in this.divs) {\r\n            await this.divs[i].cacheIds();\r\n        }\r\n    }\r\n\r\n    cUqFrom(): CUq {\r\n        if (this.schemaFrom === undefined) return this.entities.cUq;\r\n        let {owner, uq} = this.schemaFrom;\r\n        let cUq = this.entities.cUq;\r\n        let cApp = cUq.cApp;\r\n        if (cApp === undefined) return cUq;\r\n        let cUqFrm = cApp.getImportUq(owner, uq);\r\n        if (cUqFrm === undefined) {\r\n            console.error(`${owner}/${uq} 不存在`);\r\n            debugger;\r\n            return cUq;\r\n        }\r\n        /*\r\n        let retErrors = await cUqFrm.loadSchema();\r\n        if (retErrors !== undefined) {\r\n            console.error('cUq.loadSchema: ' + retErrors);\r\n            debugger;\r\n            return cUq;\r\n        }*/\r\n        return cUqFrm;\r\n    }\r\n\r\n    getApiFrom() {\r\n        let from = this.from();\r\n        if (from !== undefined) {\r\n            return from.entities.uqApi;\r\n        }\r\n        return this.entities.uqApi;\r\n    }\r\n\r\n    from(): TuidMain {\r\n        if (this.schemaFrom === undefined) return this;\r\n        let cUq = this.cUqFrom();\r\n        return cUq.tuid(this.name);\r\n    }\r\n\r\n    cFrom(): CTuidMain {\r\n        let cUq = this.cUqFrom();\r\n        return cUq.cTuidMainFromName(this.name);\r\n    }\r\n\r\n    cEditFrom(): CTuidEdit {\r\n        let cUq = this.cUqFrom();\r\n        return cUq.cTuidEditFromName(this.name);\r\n    }\r\n\r\n    cInfoFrom(): CTuidInfo {\r\n        let cUq = this.cUqFrom();\r\n        return cUq.cTuidInfoFromName(this.name);\r\n    }\r\n\r\n    cSelectFrom(): CTuidSelect {\r\n        let cUq = this.cUqFrom();\r\n        if (cUq === undefined) return;\r\n        return cUq.cTuidSelectFromName(this.name);\r\n    }\r\n    /*\r\n    protected afterCacheId(tuidValue:any) {\r\n        super.afterCacheId(tuidValue);\r\n        if (this.proxies === undefined) return;\r\n        let {type, $proxy} = tuidValue;\r\n        let pTuid = this.proxies[type];\r\n        pTuid.useId($proxy);\r\n    }*/\r\n}\r\n\r\nexport class TuidDiv extends Tuid {\r\n    get Main() {return this.owner}\r\n    from(): Tuid {\r\n        let from = this.owner.from();\r\n        return from.getDiv(this.name);\r\n    }\r\n    getApiFrom() {\r\n        return this.owner.getApiFrom();\r\n    }\r\n}\r\n","import {Entity} from './entity';\r\n\r\nexport class Action extends Entity {\r\n    get typeName(): string { return 'action';}\r\n    async submit(data:object) {\r\n        await this.loadSchema();\r\n        let text = this.pack(data);\r\n        return await this.tvApi.action(this.name, {data:text});\r\n    }\r\n}\r\n\r\n","import {observable, IObservableArray} from 'mobx';\r\nimport {Entity} from './entity';\r\nimport { PageItems } from 'tonva';\r\n\r\nexport interface SheetState {\r\n    name: string;\r\n    actions: SheetAction[];\r\n}\r\n\r\nexport interface SheetAction {\r\n    name: string;\r\n}\r\n\r\nexport interface StateCount {\r\n    state: string;\r\n    count: number;\r\n}\r\n\r\nexport class Sheet extends Entity {\r\n    get typeName(): string { return 'sheet';}\r\n    states: SheetState[];\r\n\r\n    /*\r\n    setStates(states: SheetState[]) {\r\n        for (let state of states) {\r\n            this.setStateAccess(this.states.find(s=>s.name==state.name), state);\r\n        }\r\n    }*/\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        this.states = schema.states;\r\n    }\r\n    build(obj:any) {\r\n        this.states = [];\r\n        for (let op of obj.ops) {\r\n            this.states.push({name: op, actions:undefined});\r\n        }\r\n        /*\r\n        for (let p in obj) {\r\n            switch(p) {\r\n                case '#':\r\n                case '$': continue;\r\n                default: this.states.push(this.createSheetState(p, obj[p])); break;\r\n            }\r\n        }*/\r\n    }\r\n    private createSheetState(name:string, obj:object):SheetState {\r\n        let ret:SheetState = {name:name, actions:[]};\r\n        let actions = ret.actions;\r\n        for (let p in obj) {\r\n            let action:SheetAction = {name: p};\r\n            actions.push(action);\r\n        }\r\n        return ret;\r\n    }\r\n    /*\r\n    private setStateAccess(s:SheetState, s1:SheetState) {\r\n        if (s === undefined) return;\r\n        for (let action of s1.actions) {\r\n            let acn = action.name;\r\n            let ac = s.actions.find(a=>a.name === acn);\r\n            if (ac === undefined) continue;\r\n            s.actions.push(action);\r\n        }\r\n    }*/\r\n    async save(discription:string, data:any):Promise<any> {\r\n        await this.loadSchema();\r\n        let {appId} = this.entities;\r\n        let text = this.pack(data);\r\n\r\n        let ret = await this.tvApi.sheetSave(this.name, {app: appId, discription: discription, data:text});\r\n        return ret;\r\n        /*\r\n        let {id, state} = ret;\r\n        if (id > 0) this.changeStateCount(state, 1);\r\n        return ret;\r\n        */\r\n    }\r\n    async action(id:number, flow:number, state:string, action:string) {\r\n        await this.loadSchema();\r\n        return await this.tvApi.sheetAction(this.name, {id:id, flow:flow, state:state, action:action});\r\n    }\r\n    private async unpack(data:any):Promise<any> {\r\n        //if (this.schema === undefined) await this.loadSchema();\r\n        let ret = data[0];\r\n        let brief = ret[0];\r\n        let sheetData = this.unpackSheet(brief.data);\r\n        let flows = data[1];\r\n        return {\r\n            brief: brief,\r\n            data: sheetData,\r\n            flows: flows,\r\n        }\r\n    }\r\n    async getSheet(id:number):Promise<any> {\r\n        await this.loadSchema();\r\n        let ret = await this.tvApi.getSheet(this.name, id);\r\n        if (ret[0].length === 0) return await this.getArchive(id);\r\n        return await this.unpack(ret);\r\n    }\r\n    async getArchive(id:number):Promise<any> {\r\n        await this.loadSchema();\r\n        let ret = await this.tvApi.sheetArchive(this.name, id)\r\n        return await this.unpack(ret);\r\n    }\r\n\r\n    async getArchives(pageStart:number, pageSize:number) {\r\n        await this.loadSchema();\r\n        let ret = await this.tvApi.sheetArchives(this.name, {pageStart:pageStart, pageSize:pageSize});\r\n        return ret;\r\n    }\r\n\r\n    async getStateSheets(state:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        await this.loadSchema();\r\n        let ret = await this.tvApi.stateSheets(this.name, {state:state, pageStart:pageStart, pageSize:pageSize});\r\n        return ret;\r\n    }\r\n    createPageStateItems<T>(): PageStateItems<T> {return new PageStateItems<T>(this);}\r\n\r\n    async stateSheetCount():Promise<StateCount[]> {\r\n        await this.loadSchema();\r\n        let ret:StateCount[] = await this.tvApi.stateSheetCount(this.name);\r\n        return this.states.map(s => {\r\n            let n = s.name, count = 0;\r\n            let r = ret.find(v => v.state === n);\r\n            if (r !== undefined) count = r.count;\r\n            return {state: n, count: count} \r\n        });\r\n    }\r\n\r\n    async mySheets(state:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        await this.loadSchema();\r\n        let ret = await this.tvApi.mySheets(this.name, {state:state, pageStart:pageStart, pageSize:pageSize});\r\n        return ret;\r\n    }\r\n}\r\n\r\nexport class PageStateItems<T> extends PageItems<T> {\r\n    private sheet: Sheet;\r\n    constructor(sheet: Sheet) {\r\n        super(true);\r\n        this.sheet = sheet;\r\n        this.pageSize = 10;\r\n    }\r\n    protected async load(param:any, pageStart:any, pageSize:number):Promise<any[]> {\r\n        let ret = await this.sheet.getStateSheets(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:any) {\r\n        this.pageStart = item === undefined? 0 : item.id;\r\n    }\r\n}\r\n","import {observable, IObservableArray} from 'mobx';\r\nimport {Field, ArrFields} from './entities';\r\nimport {Entity} from './entity';\r\n\r\nexport type QueryPageApi = (name:string, pageStart:any, pageSize:number, params:any) => Promise<string>;\r\nexport class Query extends Entity {\r\n    get typeName(): string { return 'query';}\r\n    private pageStart: any;\r\n    private pageSize:number;\r\n    private params:any;\r\n    private more: boolean;\r\n    private startField: Field;\r\n    @observable list:IObservableArray; // = observable.array([], {deep: false});\r\n    returns: ArrFields[];\r\n    isPaged: boolean;\r\n\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        let {returns} = schema;\r\n        this.returns = returns;\r\n        this.isPaged = (returns as any[]).find(v => v.name === '$page') !== undefined;\r\n    }\r\n\r\n    resetPage(size:number, params:any) {\r\n        this.pageStart = undefined;\r\n        this.pageSize = size;\r\n        this.params = params;\r\n        this.more = false;\r\n        this.list = undefined;\r\n    }\r\n    get hasMore() {return this.more;}\r\n    async loadPage():Promise<void> {\r\n        if (this.pageSize === undefined) {\r\n            throw 'call resetPage(size:number, params:any) first';\r\n        }\r\n        let pageStart:any;\r\n        if (this.pageStart !== undefined) {\r\n            switch (this.startField.type) {\r\n                default: pageStart = this.pageStart; break;\r\n                case 'date':\r\n                case 'time':\r\n                case 'datetime': pageStart = (this.pageStart as Date).getTime(); break;\r\n            }\r\n        }\r\n        let page = await this.page(this.params, pageStart, this.pageSize+1);\r\n        /*\r\n        await this.loadSchema();\r\n        let res = await this.tvApi.page(this.name, pageStart, this.pageSize+1, this.params);\r\n        let data = await this.unpackReturns(res);\r\n        let page = data['$page'] as any[];\r\n        */\r\n        this.list = observable.array([], {deep: false});\r\n        if (page !== undefined) {\r\n            if (page.length > this.pageSize) {\r\n                this.more = true;\r\n                page.pop();\r\n                let ret = this.returns.find(r => r.name === '$page');\r\n                this.startField = ret.fields[0];\r\n                this.pageStart = page[page.length-1][this.startField.name];\r\n            }\r\n            else {\r\n                this.more = false;\r\n            }\r\n            this.list.push(...page);\r\n        }\r\n        //this.loaded = true;\r\n    }\r\n\r\n    async page(params:any, pageStart:any, pageSize:number):Promise<any[]> {\r\n        await this.loadSchema();\r\n        let res = await this.tvApi.page(this.name, pageStart, pageSize+1, this.buildParams(params));\r\n        let data = await this.unpackReturns(res);\r\n        return data.$page;// as any[];\r\n    }\r\n    async query(params:any):Promise<any> {\r\n        await this.loadSchema();\r\n        let res = await this.tvApi.query(this.name, this.buildParams(params));\r\n        let data = await this.unpackReturns(res);\r\n        return data;\r\n    }\r\n    async table(params:any): Promise<any[]> {\r\n        let ret = await this.query(params);\r\n        for (let i in ret) {\r\n            return ret[i];\r\n        }\r\n    }\r\n    async obj(params:any):Promise<any> {\r\n        let ret = await this.table(params);\r\n        if (ret.length > 0) return ret[0];\r\n    }\r\n    async scalar(params:any):Promise<any> {\r\n        let ret = await this.obj(params);\r\n        for (let i in ret) return ret[i];\r\n    }\r\n}\r\n","import {Query} from './query';\r\n\r\nexport class Book extends Query {\r\n    get typeName(): string { return 'book';}\r\n    protected queryApiName = 'book';\r\n}\r\n","import {Query} from './query';\r\n\r\nexport class History extends Query {\r\n    get typeName(): string { return 'history';}\r\n    protected queryApiName = 'history';\r\n}\r\n","import { Entity } from './entity';\r\nimport { Action } from './action';\r\nimport { Query } from './query';\r\nimport { Field } from './entities';\r\n\r\ninterface MapActions {\r\n    add: Action;\r\n    del: Action;\r\n}\r\ninterface MapQueries {\r\n    all: Query;\r\n    page: Query;\r\n    query: Query;\r\n}\r\n\r\nexport class Map extends Entity {\r\n    get typeName(): string { return 'map';}\r\n    keys: Field[];\r\n    actions: MapActions = {} as any;\r\n    queries: MapQueries = {} as any;\r\n    schemaFrom: {owner:string; uq:string};\r\n\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        this.schemaFrom = this.schema.from;\r\n        let {actions, queries, keys} = schema;\r\n        this.entities.buildFieldTuid(this.keys = keys);\r\n        //let t = this.schemaStringify();\r\n        for (let i in actions) {\r\n            let schema = actions[i];\r\n            let {name} = schema;\r\n            let action = this.entities.newAction(name, undefined);\r\n            action.setSchema(schema);\r\n            this.actions[i] = action;\r\n        }\r\n        for (let i in queries) {\r\n            let schema = queries[i];\r\n            let {name} = schema;\r\n            let query = this.entities.newQuery(name, undefined);\r\n            query.setSchema(schema);\r\n            this.queries[i] = query;\r\n        }\r\n    }\r\n\r\n    async add(param:any) {\r\n        await this.loadSchema();\r\n        return await this.actions.add.submit(param);\r\n    }\r\n\r\n    async del(param:any) {\r\n        await this.loadSchema();\r\n        return await this.actions.del.submit(param);\r\n    }\r\n\r\n    async all() {\r\n        await this.loadSchema();\r\n        return await this.queries.all.query({});\r\n    }\r\n\r\n    async page(param:any, pageStart:any, pageSize: number) {\r\n        await this.loadSchema();\r\n        return await this.queries.page.page(param, pageStart, pageSize);\r\n    }\r\n\r\n    async query(param:any) {\r\n        await this.loadSchema();\r\n        return await this.queries.query.query(param);\r\n    }\r\n    async table(params:any): Promise<any[]> {\r\n        let ret = await this.query(params);\r\n        for (let i in ret) {\r\n            return ret[i];\r\n        }\r\n    }\r\n    async obj(params:any):Promise<any> {\r\n        let ret = await this.table(params);\r\n        if (ret.length > 0) return ret[0];\r\n    }\r\n    async scalar(params:any):Promise<any> {\r\n        let ret = await this.obj(params);\r\n        for (let i in ret) return ret[i];\r\n    }\r\n}\r\n","import {Query} from './query';\r\n\r\nexport class Pending extends Query {\r\n    get typeName(): string { return 'pending';}\r\n    protected queryApiName = 'pending';\r\n}\r\n","import {TuidMain, Tuid} from './tuid';\r\nimport {Action} from './action';\r\nimport {Sheet, SheetState, SheetAction} from './sheet';\r\nimport {Query} from './query';\r\nimport {Book} from './book';\r\nimport {History} from './history';\r\nimport { UqApi } from 'tonva';\r\nimport { Map } from './map';\r\nimport { Pending } from './pending';\r\nimport { CUq } from '../controllers';\r\n\r\nexport type FieldType = 'id' | 'tinyint' | 'smallint' | 'int' | 'bigint' | 'dec' | 'char' | 'text'\r\n    | 'datetime' | 'date' | 'time';\r\n\r\nexport function fieldDefaultValue(type:FieldType) {\r\n    switch (type) {\r\n        case 'tinyint':\r\n        case 'smallint':\r\n        case 'int':\r\n        case 'bigint':\r\n        case 'dec':\r\n            return 0;\r\n        case 'char':\r\n        case 'text':\r\n            return '';\r\n        case 'datetime':\r\n        case 'date':\r\n            return '2000-1-1';\r\n        case 'time':\r\n            return '0:00';\r\n    }\r\n}\r\n\r\nexport interface Field {\r\n    name: string;\r\n    type: FieldType;\r\n    tuid?: string;\r\n    arr?: string;\r\n    url?: string;\r\n    null?: boolean;\r\n    size?: number;\r\n    owner?: string;\r\n    _ownerField: Field;\r\n    _tuid: Tuid;\r\n}\r\nexport interface ArrFields {\r\n    name: string;\r\n    fields: Field[];\r\n    id?: string;\r\n    order?: string;\r\n}\r\nexport interface FieldMap {\r\n    [name:string]: Field;\r\n}\r\n\r\nexport class Entities {\r\n    private tuids: {[name:string]: TuidMain} = {};\r\n    private actions: {[name:string]: Action} = {};\r\n    private sheets: {[name:string]: Sheet} = {};\r\n    private queries: {[name:string]: Query} = {};\r\n    private books: {[name:string]: Book} = {};\r\n    private maps: {[name:string]: Map} = {};\r\n    private histories: {[name:string]: History} = {};\r\n    private pendings: {[name:string]: Pending} = {};\r\n    private cacheTimer: any;\r\n    cUq: CUq;\r\n    uqApi: UqApi;\r\n    appId: number;\r\n    uqId: number;\r\n\r\n    constructor(cUq: CUq, uqApi:UqApi, appId: number) {\r\n        this.cUq = cUq;\r\n        this.uqApi = uqApi;\r\n        this.appId = appId;\r\n    }\r\n\r\n    tuid(name:string):TuidMain {return this.tuids[name.toLowerCase()]}\r\n    action(name:string):Action {return this.actions[name.toLowerCase()]}\r\n    sheet(name:string):Sheet {return this.sheets[name.toLowerCase()]}\r\n    query(name:string):Query {return this.queries[name.toLowerCase()]}\r\n    book(name:string):Book {return this.books[name.toLowerCase()]}\r\n    map(name:string):Map {return this.maps[name.toLowerCase()]}\r\n    history(name:string):History {return this.histories[name.toLowerCase()]}\r\n    pending(name:string):Pending {return this.pendings[name.toLowerCase()]}\r\n\r\n    sheetFromTypeId(typeId:number):Sheet {\r\n        for (let i in this.sheets) {\r\n            let sheet = this.sheets[i];\r\n            if (sheet.typeId === typeId) return sheet;\r\n        }\r\n    }\r\n\r\n    tuidArr: TuidMain[] = [];\r\n    actionArr: Action[] = [];\r\n    sheetArr: Sheet[] = [];\r\n    queryArr: Query[] = [];\r\n    bookArr: Book[] = [];\r\n    mapArr: Map[] = [];\r\n    historyArr: History[] = [];\r\n    pendingArr: Pending[] = [];\r\n\r\n    async init() {\r\n        await this.uqApi.init();\r\n    }\r\n\r\n    async loadAccess() {\r\n        let accesses = await this.uqApi.loadAccess();\r\n        if (accesses === undefined) return;\r\n        this.buildEntities(accesses);\r\n    }\r\n\r\n    async loadEntities() {\r\n        let accesses = await this.uqApi.loadEntities();\r\n        this.buildEntities(accesses);\r\n    }\r\n\r\n    private buildEntities(entities:any) {\r\n        if (entities === undefined) {\r\n            debugger;\r\n        }\r\n        let {access, tuids} = entities;\r\n        this.buildTuids(tuids);\r\n        this.buildAccess(access);\r\n    }\r\n\r\n    getTuid(name:string, div?:string, tuidUrl?:string): Tuid {\r\n        let tuid = this.tuids[name];\r\n        if (tuid === undefined) return;\r\n        if (div === undefined) return tuid;\r\n        return tuid.divs[div];\r\n    }\r\n\r\n    cacheTuids(defer:number) {\r\n        this.clearCacheTimer();\r\n        this.cacheTimer = setTimeout(this.loadIds, defer);\r\n    }\r\n    private clearCacheTimer() {\r\n        if (this.cacheTimer === undefined) return;\r\n        clearTimeout(this.cacheTimer);\r\n        this.cacheTimer = undefined;\r\n    }\r\n    private loadIds = () => {\r\n        this.clearCacheTimer();\r\n        for (let i in this.tuids) {\r\n            let tuid = this.tuids[i];\r\n            tuid.cacheIds();\r\n        }\r\n    }\r\n\r\n    private buildTuids(tuids:any) {\r\n        //let proxyColl = {} as any;\r\n        for (let i in tuids) {\r\n            let schema = tuids[i];\r\n            let {name, typeId/*, proxies*/} = schema;\r\n            let tuid = this.newTuid(i, typeId);\r\n            tuid.sys = true;\r\n            //tuid.setSchema(schema);\r\n            //if (proxies !== undefined) proxyColl[i] = proxies;\r\n        }\r\n        for (let i in tuids) {\r\n            let schema = tuids[i];\r\n            let {name} = schema;\r\n            let tuid = this.getTuid(i);\r\n            //tuid.sys = true;\r\n            tuid.setSchema(schema);\r\n        }\r\n        /*\r\n        for (let i in proxyColl) {\r\n            let proxies:string[] = proxyColl[i];\r\n            let tuid = this.tuids[i];\r\n            tuid.proxies = {};\r\n            for (let p of proxies) {\r\n                tuid.proxies[p] = this.tuids[p];\r\n            }\r\n        }*/\r\n        for (let i in this.tuids) {\r\n            let tuid = this.tuids[i];\r\n            tuid.buildFieldsTuid();\r\n        }\r\n    }\r\n\r\n    private buildAccess(access:any) {\r\n        for (let a in access) {\r\n            let v = access[a];\r\n            switch (typeof v) {\r\n                case 'string': this.fromType(a, v); break;\r\n                case 'object': this.fromObj(a, v); break;\r\n            }\r\n        }\r\n        /*\r\n        for (let tuid of this.tuidArr) {\r\n            tuid.setProxies(this);\r\n        }*/\r\n    }\r\n\r\n    newAction(name:string, id:number):Action {\r\n        let action = this.actions[name];\r\n        if (action !== undefined) return action;\r\n        action = this.actions[name] = new Action(this, name, id)\r\n        this.actionArr.push(action);\r\n        return action;\r\n    }\r\n    newTuid(name:string, id:number):TuidMain {\r\n        let tuid = this.tuids[name];\r\n        if (tuid !== undefined) return tuid;\r\n        tuid = this.tuids[name] = new TuidMain(this, undefined, name, id);\r\n        this.tuidArr.push(tuid);\r\n        return tuid;\r\n    }\r\n    newQuery(name:string, id:number):Query {\r\n        let query = this.queries[name];\r\n        if (query !== undefined) return query;\r\n        query = this.queries[name] = new Query(this, name, id)\r\n        this.queryArr.push(query);\r\n        return query;\r\n    }\r\n    newBook(name:string, id:number):Book {\r\n        let book = this.books[name];\r\n        if (book !== undefined) return book;\r\n        book = this.books[name] = new Book(this, name, id);\r\n        this.bookArr.push(book);\r\n        return book;\r\n    }\r\n    newMap(name:string, id:number):Map {\r\n        let map = this.maps[name];\r\n        if (map !== undefined) return map;\r\n        map = this.maps[name] = new Map(this, name, id)\r\n        this.mapArr.push(map);\r\n        return map;\r\n    }\r\n    newHistory(name:string, id:number):History {\r\n        let history = this.histories[name];\r\n        if (history !== undefined) return;\r\n        history = this.histories[name] = new History(this, name, id)\r\n        this.historyArr.push(history);\r\n        return history;\r\n    }\r\n    newPending(name:string, id:number):Pending {\r\n        let pending = this.pendings[name];\r\n        if (pending !== undefined) return;\r\n        pending = this.pendings[name] = new Pending(this, name, id)\r\n        this.pendingArr.push(pending);\r\n        return pending;\r\n    }\r\n    newSheet(name:string, id:number):Sheet {\r\n        let sheet = this.sheets[name];\r\n        if (sheet !== undefined) return sheet;\r\n        sheet = this.sheets[name] = new Sheet(this, name, id);\r\n        this.sheetArr.push(sheet);\r\n        return sheet;\r\n    }\r\n    private fromType(name:string, type:string) {\r\n        let parts = type.split('|');\r\n        type = parts[0];\r\n        let id = Number(parts[1]);\r\n        switch (type) {\r\n            case 'uq': this.uqId = id; break;\r\n            case 'tuid':\r\n                let tuid = this.newTuid(name, id);\r\n                tuid.sys = false;\r\n                break;\r\n            case 'action': this.newAction(name, id); break;\r\n            case 'query': this.newQuery(name, id); break;\r\n            case 'book': this.newBook(name, id); break;\r\n            case 'map': this.newMap(name, id); break;\r\n            case 'history': this.newHistory(name, id); break;\r\n            case 'sheet':this.newSheet(name, id); break;\r\n            case 'pending': this.newPending(name, id); break;\r\n        }\r\n    }\r\n    private fromObj(name:string, obj:any) {\r\n        switch (obj['$']) {\r\n            case 'sheet': this.buildSheet(name, obj); break;\r\n        }\r\n    }\r\n    private buildSheet(name:string, obj:any) {\r\n        let sheet = this.sheets[name];\r\n        if (sheet === undefined) sheet = this.newSheet(name, obj.id);\r\n        sheet.build(obj);\r\n        /*\r\n        let states = sheet.states;\r\n        for (let p in obj) {\r\n            switch(p) {\r\n                case '#':\r\n                case '$': continue;\r\n                default: states.push(this.createSheetState(p, obj[p])); break;\r\n            }\r\n        }*/\r\n    }\r\n    /*\r\n    private createSheetState(name:string, obj:object):SheetState {\r\n        let ret:SheetState = {name:name, actions:[]};\r\n        let actions = ret.actions;\r\n        for (let p in obj) {\r\n            let action:SheetAction = {name: p};\r\n            actions.push(action);\r\n        }\r\n        return ret;\r\n    }*/\r\n    buildFieldTuid(fields:Field[], mainFields?:Field[]) {\r\n        if (fields === undefined) return;\r\n        for (let f of fields) {\r\n            let {tuid, arr, url} = f;\r\n            if (tuid === undefined) continue;\r\n            f._tuid = this.getTuid(tuid, arr, url);\r\n        }\r\n        for (let f of fields) {\r\n            let {owner} = f;\r\n            if (owner === undefined) continue;\r\n            let ownerField = fields.find(v => v.name === owner);\r\n            if (ownerField === undefined) {\r\n                if (mainFields !== undefined) {\r\n                    ownerField = mainFields.find(v => v.name === owner);\r\n                }\r\n                if (ownerField === undefined) {\r\n                    throw `owner field ${owner} is undefined`;\r\n                }\r\n            }\r\n            f._ownerField = ownerField;\r\n            let {arr, url} = f;\r\n            f._tuid = this.getTuid(ownerField._tuid.name, arr, url);\r\n            if (f._tuid === undefined) throw 'owner field ${owner} is not tuid';\r\n        }\r\n    }\r\n    buildArrFieldsTuid(arrFields:ArrFields[], mainFields:Field[]) {\r\n        if (arrFields === undefined) return;\r\n        for (let af of arrFields) {\r\n            let {fields} = af;\r\n            if (fields === undefined) continue;\r\n            this.buildFieldTuid(fields, mainFields);\r\n        }\r\n    }\r\n}\r\n","export * from './entities';\r\nexport * from './entity';\r\nexport * from './action';\r\nexport * from './query';\r\nexport * from './sheet';\r\nexport * from './tuid';\r\nexport * from './book';\r\nexport * from './map';\r\nexport * from './history';\r\nexport * from './pending';\r\n","import * as React from 'react';\r\nimport {FormView, FormRow, FieldRow, GroupRow, LabelFormRow} from '../formView';\r\nimport {Control, ControlBase, createControl, CreateControl} from '../control';\r\n\r\nexport type CreateRow = (form:FormView, row: FormRow)=>RowContainer;\r\n\r\nexport abstract class RowContainer {\r\n    protected form:FormView;\r\n    protected row: FormRow;\r\n    protected control: ControlBase;\r\n    constructor(form:FormView, row: FormRow) {\r\n        this.form = form;\r\n        this.row = row;\r\n        if ((row as JSX.Element).type === undefined) {\r\n            let cc:CreateControl = (row as LabelFormRow).createControl;\r\n            if (cc === undefined) cc = form.createControl;\r\n            if (cc === undefined) cc = createControl;\r\n            this.control = cc(form, row);\r\n        }\r\n    }\r\n    abstract render(key:string):JSX.Element;\r\n    \r\n    isOk():boolean {\r\n        if (this.control === undefined) return true;\r\n        return this.control.isOk();\r\n    }\r\n\r\n    contains(fieldName:string):boolean {\r\n        let field = (this.row as FieldRow).field;\r\n        if (field !== undefined) return fieldName === field.name;\r\n        let group = (this.row as GroupRow).group;\r\n        if (group !== undefined) return group.find(g => g.field.name === fieldName)!==undefined;\r\n        return false;\r\n    }\r\n    get hasError():boolean {return this.control.hasError;}\r\n    get filled():boolean {return this.control.filled;}\r\n    clear() {\r\n        if (this.control !== undefined) this.control.clear();\r\n    }\r\n    clearErrors() {\r\n        if (this.control !== undefined) this.control.clearErrors();\r\n    }\r\n    readValues(values:any):any {\r\n        if (this.control !== undefined) this.control.readValues(values);\r\n    }\r\n    setError(fieldName:string, error:string) {\r\n        if (this.control !== undefined) this.control.setError(fieldName, error);\r\n    }\r\n    setInitValues(values:any) {\r\n        if (this.control !== undefined) this.control.setInitValues(values);\r\n    }\r\n}\r\n\r\nclass ElementRowContainer extends RowContainer {\r\n    render(key:string):JSX.Element {\r\n        return <div key={key} className=\"form-group\">{this.row as JSX.Element}</div>;\r\n    }\r\n    get hasError():boolean {return false;}\r\n    get filled():boolean {return false;}\r\n}\r\n\r\nclass BootStrapRowContainer extends RowContainer {\r\n    render(key:string):JSX.Element {\r\n        return <div key={key} className='form-group row'>\r\n            <label className='col-sm-2 col-form-label'>\r\n                {(this.row as LabelFormRow).label}\r\n            </label>\r\n            {this.control.render()}\r\n        </div>;\r\n\r\n        //has-success is-valid\r\n    }\r\n}\r\n\r\nexport function bootstrapCreateRow(form:FormView, row: FormRow):RowContainer {\r\n    return new BootStrapRowContainer(form, row);\r\n}\r\n\r\nexport function elementCreateRow(form:FormView, row: FormRow):RowContainer {\r\n    return new ElementRowContainer(form, row);\r\n}\r\n","//import {isDevelopment} from '../local';\r\nimport {HttpChannel} from './httpChannel';\r\n\r\nexport async function refetchApi(channel:HttpChannel, url, options, resolve, reject) {\r\n    await channel.fetch(url, options, resolve, reject);\r\n}\r\n\r\nexport abstract class ApiBase {\r\n    protected token: string;\r\n    protected path: string;\r\n    protected showWaiting: boolean;\r\n\r\n    constructor(path: string, showWaiting: boolean) {\r\n        this.path = path || '';\r\n        this.showWaiting = showWaiting;\r\n    }\r\n\r\n    protected abstract async getHttpChannel(): Promise<HttpChannel>;\r\n\r\n    public async call(url:string, method:string, body:any):Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.callFetch(url, method, body);\r\n    }\r\n\r\n    public async get(path:string, params:any=undefined): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.get(this.path + path, params);\r\n    }\r\n\r\n    public async post(path:string, params:any): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.post(this.path + path, params);\r\n    }\r\n\r\n    public async put(path:string, params:any): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.put(this.path + path, params);\r\n    }\r\n\r\n    public async delete(path:string, params:any): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.delete(this.path + path, params);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport {nav, mobileHeaderStyle} from './nav';\r\n\r\nexport interface PageHeaderProps {\r\n    back?: 'back' | 'close' | 'none';\r\n    center: string | JSX.Element;\r\n    right?: JSX.Element;\r\n    logout?: boolean | (()=>Promise<void>);\r\n    className?: string;\r\n}\r\nexport interface PageHeaderState {\r\n    hasBack: boolean;\r\n}\r\nexport class PageHeader extends React.Component<PageHeaderProps, PageHeaderState> {\r\n    constructor(props: PageHeaderProps) {\r\n        super(props);\r\n        this.navChange = this.navChange.bind(this);\r\n        this.state = {\r\n            hasBack: false,\r\n        };\r\n    }\r\n    navChange() {\r\n        this.setState({\r\n            hasBack: nav.level > 1\r\n        })\r\n    }\r\n    componentWillMount() {\r\n        this.navChange();\r\n        //this.navChangeHandler = nav.events.add('change', this.navChange);\r\n    }\r\n    componentWillUnmount() {\r\n        //nav.events.remove('change', this.navChangeHandler);\r\n    }\r\n    async back() {\r\n        await nav.back(); // 这个才会显示confirm box，在dataForm里面，如果输入了数据的话\r\n    }\r\n    openWindow() {\r\n        window.open(document.location.href);\r\n    }\r\n    private logoutClick = () => {\r\n        nav.showLogout(this.logout);\r\n        /*\r\n        nav.push(<Page header=\"安全退出\" back=\"close\">\r\n            <div className=\"m-5 border border-info bg-white rounded p-3 text-center\">\r\n                <div>退出当前账号不会删除任何历史数据，下次登录依然可以使用本账号</div>\r\n                <div className=\"mt-3\">\r\n                    <button className=\"btn btn-danger\" onClick={()=>this.logout()}>退出</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n        */\r\n    }\r\n    private logout = async () => {\r\n        let {logout} = this.props;\r\n        if (typeof logout === 'function') {\r\n            await logout(); \r\n        }\r\n        await nav.logout(undefined);\r\n    }\r\n    render() {\r\n        let b = this.state.hasBack || self != top;\r\n        let {right, center, logout, className} = this.props;\r\n        let back, pop, debugLogout;\r\n        if (logout !== undefined && self === top) {\r\n            if (typeof logout === 'boolean' && logout === true\r\n                || typeof logout === 'function')\r\n            {\r\n                let {user} = nav;\r\n                if (user !== undefined) {\r\n                    let {nick, name} = user;\r\n                    debugLogout = <div className=\"d-flex align-items-center\">\r\n                        <small className=\"text-light\">{nick || name}</small>\r\n                        <a className=\"dropdown-toggle btn btn-secondary btn-sm ml-2\"\r\n                            role=\"button\"\r\n                            onClick={this.logoutClick}>\r\n                            <i className=\"fa fa-sign-out\" />\r\n                        </a>\r\n                    </div>;\r\n                }\r\n            }\r\n        }\r\n        if (b) {\r\n            switch (this.props.back) {\r\n                case 'none': back = undefined; break;\r\n                default:\r\n                case 'back': back = <nav onClick={this.back}><i className=\"fa fa-arrow-left\" /></nav>; break;\r\n                case 'close': back = <nav onClick={this.back}><i className=\"fa fa-close\" /></nav>; break;\r\n            }\r\n        }\r\n        if (self != top) {\r\n            console.log(document.location.href);\r\n            pop = <header onClick={this.openWindow} />;\r\n        }\r\n        let rightView;\r\n        if (right || debugLogout) rightView = <aside>{right} {debugLogout}</aside>;\r\n        return <header className={className} style={mobileHeaderStyle}>\r\n            {pop}\r\n            {back}\r\n            <div>{center}</div>\r\n            {rightView}\r\n        </header>;\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { jsonStringify } from '../../tools';\r\n\r\nexport const DefaultRow = (values) => <div className=\"px-3 py-2\">{jsonStringify(values)}</div>;\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { List, FA } from 'tonva';\r\nimport { Page, nav } from 'tonva';\r\nimport { TuidMain, Query, Entity } from '../../entities';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { QueryUI, CQuery } from './cQuery';\r\nimport { DefaultRow } from './defaultRow';\r\n\r\nexport class VQueryMain extends VEntity<Query, QueryUI, CQuery> {\r\n    protected vForm: VForm;\r\n    private row: React.StatelessComponent;\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        let {row, queryRow} = this.ui;\r\n        this.row = queryRow || row || DefaultRow;\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSubmit = async () => {\r\n        let params = this.vForm.getValues();\r\n        if (this.entity.isPaged === true) {\r\n            await this.entity.resetPage(30, params);\r\n            await this.entity.loadPage();\r\n            this.replacePage(this.pageResult);\r\n        }\r\n        else {\r\n            let data = await this.entity.query(params);\r\n            this.replacePage(this.queryResult, data);\r\n        }\r\n    }\r\n\r\n    again = () => {\r\n        this.vForm.reset();\r\n        this.replacePage(this.view);\r\n    }\r\n\r\n    renderExtra() {\r\n        return;\r\n    }\r\n\r\n    renderRow = (item:any, index:number) => <this.row {...item} />;\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render('mx-3 my-2')}\r\n        {this.renderExtra()}\r\n    </Page>;\r\n\r\n    protected pageResult = () => {\r\n        let {name, list} = this.entity;\r\n        let rightClose = <button\r\n            className=\"btn btn-outline-success\"\r\n            onClick={this.again}>\r\n            <FA name=\"search\" /> 再查询\r\n        </button>;\r\n        return <Page header={this.label} right={rightClose}>\r\n            <List items={list} item={{render: this.renderRow}} />\r\n        </Page>;\r\n    }\r\n\r\n    protected queryResult = observer((result:any) => {\r\n        let rightClose = <button\r\n            className=\"btn btn-outline-success\"\r\n            onClick={this.again}>\r\n            <FA name=\"search\" /> 再查询\r\n        </button>;\r\n        return <Page header={this.label} right={rightClose}>\r\n            <pre>{JSON.stringify(result, undefined, '\\t')}</pre>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport { FA, SearchBox, List } from 'tonva';\r\nimport { Page, PageItems } from 'tonva';\r\nimport { Query } from '../../entities';\r\nimport { VEntity } from '../CVEntity';\r\nimport { QueryUI, CQuerySelect } from './cQuery';\r\nimport { DefaultRow } from './defaultRow';\r\n\r\nexport class VQuerySelect extends VEntity<Query, QueryUI, CQuerySelect> {\r\n    private row: React.StatelessComponent;\r\n\r\n    PageItems:QueryPageItems;\r\n    ownerId: number;\r\n\r\n    async open(param?:any) {\r\n        let {row, selectRow} = this.ui;\r\n        this.row = selectRow || row || DefaultRow;\r\n        //this.entity = this.controller.entity;\r\n        this.PageItems = new QueryPageItems(this.entity);\r\n        await this.onSearch(param);\r\n        this.openPage(this.view);\r\n    }\r\n    onSearch = async (key:string) => {\r\n        await this.PageItems.first(key);\r\n    }\r\n\r\n    renderRow = (item:any, index:number) => <this.row {...item} />;\r\n\r\n    private callOnSelected(item:any) {\r\n       this.closePage();\r\n       this.returnCall(item);\r\n    }\r\n    clickRow = (item:any) => {\r\n        this.callOnSelected(item);\r\n    }\r\n\r\n    view = () => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\r\n        return <Page header={header}>\r\n            <List\r\n                items={this.PageItems.items}\r\n                item={{render: this.renderRow, onClick: this.clickRow}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    };\r\n}\r\n\r\nexport class QueryPageItems extends PageItems<any> {\r\n    private query: Query;\r\n    constructor(query: Query) {\r\n        super();\r\n        this.query = query;\r\n    }\r\n    protected async load():Promise<any[]> {\r\n        await  this.query.loadSchema();\r\n        let ret:any[];\r\n        if (this.query.isPaged === true)\r\n            ret = await this.query.page(this.param, this.pageStart, this.pageSize);\r\n        else {\r\n            let data = await this.query.query(this.param);\r\n            //let data = await this.query.unpackReturns(res);\r\n            ret = data[this.query.returns[0].name];\r\n        }\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:any) {\r\n        if (item === undefined) this.pageStart = 0;\r\n    }\r\n}\r\n","import { StatelessComponent } from \"react\";\r\nimport { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Query } from \"../../entities\";\r\nimport { VQueryMain } from \"./vQueryMain\";\r\nimport { VQuerySelect } from \"./vQuerySelect\";\r\n\r\nexport interface QueryUI extends EntityUI {\r\n    CQuery?: typeof CQuery;\r\n    CQuerySelect?: typeof CQuerySelect;\r\n    main?: typeof VQueryMain;\r\n    row?: StatelessComponent;\r\n    queryRow?: StatelessComponent;\r\n    selectRow?: StatelessComponent;\r\n}\r\n\r\nexport abstract class CQueryBase extends CEntity<Query, QueryUI> {\r\n}\r\n\r\nexport class CQuery extends CQueryBase {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VQueryMain);\r\n    }\r\n\r\n    protected get VQueryMain():typeof VQueryMain {return this.ui && this.ui.main || VQueryMain}\r\n}\r\n\r\nexport class CQuerySelect extends CQueryBase {\r\n    protected async internalStart(param?:any) {\r\n        await this.openVPage(this.VQuerySelect, param);\r\n    }\r\n\r\n    protected get VQuerySelect():typeof VQuerySelect {return VQuerySelect}\r\n}\r\n","export * from './cQuery';\r\nexport * from './vQueryMain';\r\nexport * from './vQuerySelect';","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\r\nimport { ResUploader } from '../resUploader';\r\nimport { Image } from '../image';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { ItemEdit } from './itemEdit';\r\n\r\nexport class ImageItemEdit extends ItemEdit {\r\n    protected uiItem: UiTextItem;\r\n    private resUploader: ResUploader;\r\n    @observable private resId: string;\r\n    @observable private overSize: boolean = false;\r\n\r\n    protected async internalStart():Promise<any> {\r\n        this.resId = this.value;        \r\n        return new Promise<any>((resolve, reject) => {\r\n            nav.push(React.createElement(this.page, {resolve:resolve, reject:reject}), ()=>reject());\r\n        });\r\n    }\r\n\r\n    private upload = async () => {\r\n        if (!this.resUploader) return;\r\n        let ret = await this.resUploader.upload();\r\n        if (ret === null) {\r\n            this.overSize = true;\r\n            setTimeout(() => this.overSize = false, 3000);\r\n            return;\r\n        }\r\n        this.resId = ret;\r\n        this.isChanged = (this.resId != this.value);\r\n    }\r\n\r\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\r\n        let {resolve} = props;\r\n        let right = <button\r\n            className=\"btn btn-sm btn-success\"\r\n            disabled={!this.isChanged}\r\n            onClick={()=>resolve(this.resId)}>保存</button>;\r\n        let overSize:any;\r\n        if (this.overSize === true) {\r\n            overSize = <div className=\"text-danger\">\r\n                <i className=\"fa fa-times-circle\" /> 图片文件大小超过2M，无法上传\r\n            </div>;\r\n        }\r\n        return <Page header={'更改' + this.label} right={right}>\r\n            <div className=\"my-3 px-3 py-3 bg-white\">\r\n                <div>\r\n                    <div>上传图片：</div>\r\n                    <div className=\"my-3\">\r\n                        <ResUploader ref={v=>this.resUploader=v} multiple={false} maxSize={2048} />\r\n                    </div>\r\n                    <div>\r\n                        <button className=\"btn btn-primary\" onClick={this.upload}>上传</button>\r\n                    </div>\r\n                </div>\r\n                {overSize}\r\n                <div className=\"small muted my-4\">支持JPG、GIF、PNG格式图片，不超过2M。</div>\r\n                <div className=\"d-flex\">\r\n                    <div className=\"w-12c h-12c mr-4\"\r\n                        style={{border: '1px dotted gray', padding: '8px'}}>\r\n                        <Image className=\"w-100 h-100\" src={this.resId} />\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"small\">图片预览</div>\r\n                        <Image className=\"w-4c h-4c mt-3\" src={this.resId} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\n\r\nexport function Loading() {\r\n    return <div className=\"d-flex h-100 align-items-center justify-content-center\">\r\n        <i className=\"fa fa-spinner fa-spin fa-2x fa-fw text-info\" />\r\n    </div>;\r\n}\r\n\r\n/*\r\nexport function Loading() {\r\n    return <div style={{height:'100%'}} className=\"d-flex flex-fill align-items-center justify-content-center\">\r\n    <div className=\"d-flex align-items-center justify-content-center slide text-info\" style={{width:'5em', height:'2em'}}>\r\n        加载中...\r\n    </div>\r\n    </div>\r\n}\r\n*/\r\n\r\n\r\n","import * as React from 'react';\r\nimport { nav } from './nav';\r\n\r\nexport interface ResUploaderProps {\r\n    className?: string;\r\n    multiple?: boolean;\r\n    maxSize?: number;\r\n    onFilesChange?: (evt: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nexport class ResUploader extends React.Component<ResUploaderProps> {\r\n    private fileInput: HTMLInputElement;\r\n\r\n    upload = async ():Promise<string> => {\r\n        let {maxSize} = this.props;\r\n        if (maxSize === undefined || maxSize <= 0) \r\n            maxSize = 100000000000;\r\n        else\r\n            maxSize = maxSize * 1024;\r\n        let resUrl = nav.resUrl + 'upload';\r\n        var files:FileList = this.fileInput.files;\r\n        var data = new FormData();\r\n        let len = files.length;\r\n        for (let i=0; i<len; i++) {\r\n            let file = files[i];\r\n            if (file.size > maxSize) return null;\r\n            data.append('files[]', file, file.name);\r\n        }\r\n  \r\n        try {\r\n            let abortController = new AbortController();\r\n            let res = await fetch(resUrl, {\r\n                method: \"POST\",\r\n                body: data,\r\n                signal: abortController.signal,\r\n            });\r\n            let json = await res.json();\r\n            return ':' + json.res.id;\r\n        }\r\n        catch (err) {\r\n            console.error('%s %s', resUrl, err);\r\n        }\r\n    }\r\n    render() {\r\n        let {className, multiple, onFilesChange} = this.props;\r\n        return <input \r\n            className={className}\r\n            ref={t=>this.fileInput=t} \r\n            onChange={onFilesChange}\r\n            type='file' name='file' multiple={multiple} />\r\n    }\r\n}\r\n","export * from './rule';\r\nexport * from './field';\r\nexport * from './face';\r\nexport * from './rowContainer';\r\nexport * from './formView';\r\nexport * from './TonvaForm';\r\nexport {ControlBase} from './control';\r\n","import * as React from 'react';\r\nimport {FormEvent} from 'react';\r\nimport {computed} from 'mobx';\r\nimport {uid} from '../uid';\r\nimport {Rule} from './rule';\r\nimport {Field} from './field';\r\nimport {Face} from './face';\r\nimport {CreateControl, ButtonsControl} from './control';\r\nimport {RowContainer, CreateRow, bootstrapCreateRow, elementCreateRow} from './rowContainer';\r\n\r\nexport interface FieldView {\r\n    field: Field;\r\n    face?: Face;\r\n}\r\n\r\nexport interface LabeledRow {\r\n    label?: string;\r\n    createRow?: CreateRow;\r\n    createControl?: CreateControl;\r\n    help?: JSX.Element;\r\n}\r\n\r\nexport interface FieldRow extends LabeledRow, FieldView {\r\n}\r\n\r\nexport interface GroupRow extends LabeledRow {\r\n    group: FieldView[];\r\n}\r\n\r\nexport type LabelFormRow = FieldRow|GroupRow|LabeledRow;\r\nexport type FormRow = LabelFormRow|JSX.Element;\r\n\r\nexport interface SubmitResult {\r\n    success: boolean;\r\n    message?: string\r\n    result?: any;\r\n}\r\n\r\nexport interface FormProps {\r\n    formRows: FormRow[];\r\n    //context?: any;              // form context，比如，可以是EntitiesUI\r\n    rules?: Rule | Rule[];\r\n    onSubmit: (values:any) => Promise<SubmitResult|undefined>;\r\n    submitButton?: string|JSX.Element;\r\n    otherButton?: string|JSX.Element;\r\n    onOther?: (values:any) => void;\r\n    createRow?: CreateRow;\r\n    createControl?: CreateControl;\r\n    readOnly?: boolean;\r\n}\r\n\r\nexport class FormView {\r\n    uid:string;\r\n    private rows: RowContainer[] = [];\r\n    private buttonsRow: RowContainer;\r\n    props: FormProps;\r\n    createControl?: CreateControl;\r\n    constructor(props:FormProps) {\r\n        this.uid = uid();\r\n        this.props = props;\r\n        this.buildRows(props);\r\n        this.createControl = props.createControl;\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    @computed get hasError():boolean {\r\n        let ret = this.rows.map((v, index) => index + ': ' + v.hasError + '\\n');\r\n        console.log(ret);\r\n        return this.rows.some(row => row.hasError);\r\n    }\r\n    @computed get nothing():boolean {\r\n        let ret = this.rows.every(row => !row.filled);\r\n        return ret;\r\n    }\r\n\r\n    readValues():any {\r\n        let values = {} as any;\r\n        for (let row of this.rows) {\r\n            row.readValues(values);\r\n        }\r\n        return values;\r\n    }\r\n\r\n    clear() {\r\n        for (let row of this.rows) {\r\n            row.clear();\r\n        }\r\n    }\r\n\r\n    clearErrors() {\r\n        for (let row of this.rows) {\r\n            row.clearErrors();\r\n        }\r\n    }\r\n\r\n    setError(fieldName:string, error:string) {\r\n        for (let row of this.rows) {\r\n            row.setError(fieldName, error);\r\n        }\r\n    }\r\n\r\n    setInitValues(initValues:any) {\r\n        if (initValues === undefined) return;\r\n        for (let row of this.rows) {\r\n            row.setInitValues(initValues);\r\n        }\r\n    }\r\n\r\n    private buildRows(props:FormProps) {\r\n        let {formRows, createRow} = props;\r\n        if (formRows !== undefined) {\r\n            for (let row of formRows) {\r\n                this.rows.push(this.buildRow(row, createRow));\r\n            }\r\n            if (this.props.readOnly !== true) {\r\n                this.buttonsRow = this.buildRow({createControl:this.createButtons.bind(this)}, undefined);\r\n            }\r\n        }\r\n        else {\r\n            this.rows.push(elementCreateRow(this, <div className=\"text-warning\">TonvaForm need formRows defined</div>));\r\n        }\r\n    }\r\n\r\n    private buildRow(formRow: FormRow, formRowCreator: CreateRow):RowContainer {\r\n        let createRow:CreateRow;\r\n        let type = (formRow as JSX.Element).type;\r\n        if (type !== undefined) {\r\n            createRow = elementCreateRow;\r\n        }\r\n        else {\r\n            createRow = (formRow as (FieldRow | GroupRow | LabeledRow)).createRow;\r\n            if (createRow === undefined) {\r\n                createRow = formRowCreator;\r\n                if (createRow === undefined) createRow = bootstrapCreateRow;\r\n            }\r\n        }\r\n        let row = createRow(this, formRow);\r\n        return row;\r\n    }\r\n\r\n    private createButtons(form:FormView, row: FormRow) {\r\n        return new ButtonsControl(form);\r\n    }\r\n\r\n    private isOk():boolean {\r\n        let isOk = true;\r\n        for (let row of this.rows) {\r\n            if (!row.isOk()) isOk = false;\r\n        }\r\n        return isOk;\r\n    }\r\n\r\n    render():JSX.Element {\r\n        return <form onSubmit={this.onSubmit}>\r\n            {this.rows.map((row,index) => row.render(this.uid + index))}\r\n            {this.buttons()}\r\n        </form>;\r\n    }\r\n\r\n    buttons():JSX.Element {\r\n        if (this.buttonsRow === undefined) return;\r\n        return this.buttonsRow.render(this.uid + this.rows.length);\r\n    }\r\n    \r\n    async onSubmit(event:FormEvent<HTMLFormElement>) {\r\n        event.preventDefault();\r\n        if (!this.isOk()) return;\r\n        let values = this.readValues();\r\n        await this.props.onSubmit(values);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { Page, loadAppUqs, nav, appInFrame, Controller, TypeVPage, VPage, resLang, getExHash, isDevelopment, NavSettings, App} from 'tonva';\r\nimport { List, LMR, FA } from 'tonva';\r\nimport { CUq, UqUI } from './uq';\r\nimport { centerApi } from '../centerApi';\r\n\r\nexport interface RoleAppUI {\r\n    CApp?: typeof CApp;\r\n    CUq?: typeof CUq;\r\n    main?: TypeVPage<CApp>;\r\n    uqs: {[uq:string]: UqUI | (()=>Promise<UqUI>)};\r\n    res?: any;\r\n}\r\n\r\nexport interface AppUI extends RoleAppUI, NavSettings {\r\n    appName: string; // 格式: owner/appName\r\n    roles?: {[role:string]: RoleAppUI | (()=>Promise<RoleAppUI>)};\r\n}\r\n\r\nexport class CApp extends Controller {\r\n    private appOwner:string;\r\n    private appName:string;\r\n    private cImportUqs: {[uq:string]: CUq} = {};\r\n    protected ui:AppUI;\r\n    id: number;\r\n    appUnits:any[];\r\n\r\n    constructor(ui:AppUI) {\r\n        super(resLang(ui && ui.res));\r\n        nav.setSettings(ui);\r\n        let tonvaApp = ui.appName;\r\n        if (tonvaApp === undefined) {\r\n            throw 'appName like \"owner/app\" must be defined in UI';\r\n        }\r\n        let parts = tonvaApp.split('/');\r\n        if (parts.length !== 2) {\r\n            throw 'tonvaApp name must be / separated, owner/app';\r\n        }\r\n        this.appOwner = parts[0];\r\n        this.appName = parts[1];\r\n        if (ui.uqs === undefined) ui.uqs = {};\r\n        this.ui = ui;\r\n        this.caption = this.res.caption || 'Tonva';\r\n    }\r\n    \r\n    readonly caption: string; // = 'View Model 版的 Uq App';\r\n    cUqCollection: {[uq:string]: CUq} = {};\r\n\r\n    async startDebug() {\r\n        let appName = this.appOwner + '/' + this.appName;\r\n        let cApp = new CApp({appName: appName, uqs:{}} );\r\n        let keepNavBackButton = true;\r\n        await cApp.start(keepNavBackButton);    \r\n    }\r\n\r\n    protected async loadUqs(app:App): Promise<string[]> {\r\n        let retErrors:string[] = [];\r\n        let unit = appInFrame.unit;\r\n        //let app = await loadAppUqs(this.appOwner, this.appName);\r\n        let {id, uqs} = app;\r\n        this.id = id;\r\n\r\n        let promises: PromiseLike<string>[] = [];\r\n        let promiseChecks: PromiseLike<boolean>[] = [];\r\n        let roleAppUI = await this.buildRoleAppUI();\r\n        this.ui = roleAppUI;\r\n        for (let appUq of uqs) {\r\n            let {id:uqId, uqOwner, uqName, access} = appUq;\r\n            let uq = uqOwner + '/' + uqName;\r\n            let uqUI = roleAppUI && roleAppUI.uqs && roleAppUI.uqs[uq];\r\n            let cUq = this.newCUq(uq, uqId, access, uqUI || {});\r\n            this.cUqCollection[uq] = cUq;\r\n            promises.push(cUq.loadSchema());\r\n            promiseChecks.push(cUq.entities.uqApi.checkAccess());\r\n        }\r\n        let results = await Promise.all(promises);\r\n        Promise.all(promiseChecks).then((checks) => {\r\n            for (let c of checks) {\r\n                if (c === false) {\r\n                    //debugger;\r\n                    //nav.start();\r\n                    //return;\r\n                }\r\n            }\r\n        });\r\n        for (let result of results)\r\n        {\r\n            let retError = result; // await cUq.loadSchema();\r\n            if (retError !== undefined) {\r\n                retErrors.push(retError);\r\n                continue;\r\n            }\r\n        }\r\n        if (retErrors.length === 0) return;\r\n        return retErrors;\r\n    }\r\n\r\n    private async buildRoleAppUI():Promise<AppUI> {\r\n        if (!this.ui) return undefined;\r\n        let {hashParam} = nav;\r\n        if (!hashParam) return this.ui;\r\n        let {roles} = this.ui;\r\n        let roleAppUI = roles && roles[hashParam];\r\n        if (!roleAppUI) return this.ui;\r\n        let ret:AppUI = {} as any;\r\n        for (let i in this.ui) {\r\n            if (i === 'roles') continue;\r\n            ret[i] = this.ui[i];\r\n        }\r\n        if (typeof roleAppUI === 'function') roleAppUI = await roleAppUI();\r\n        _.merge(ret, roleAppUI);\r\n        return ret;\r\n    }\r\n\r\n    getImportUq(uqOwner:string, uqName:string):CUq {\r\n        let uq = uqOwner + '/' + uqName;\r\n        let cUq = this.cImportUqs[uq];\r\n        if (cUq !== undefined) return cUq;\r\n        let ui = this.ui && this.ui.uqs && this.ui.uqs[uq];\r\n        let uqId = -1; // unknown\r\n        this.cImportUqs[uq] = cUq = this.getCUq(uq);\r\n        //this.newCUq(uq, uqId, undefined, ui || {});\r\n        /*\r\n        let retError = await cUq.loadSchema();\r\n        if (retError !== undefined) {\r\n            console.error(retError);\r\n            debugger;\r\n            return;\r\n        }\r\n        */\r\n        return cUq;\r\n    }\r\n\r\n    protected newCUq(uq:string, uqId:number, access:string, ui:any) {\r\n        let cUq = new (this.ui.CUq || CUq)(this, uq, this.id, uqId, access, ui);        \r\n        Object.setPrototypeOf(cUq.x, this.x);\r\n        return cUq;\r\n    }\r\n\r\n    get cUqArr():CUq[] {\r\n        let ret:CUq[] = [];\r\n        for (let i in this.cUqCollection) {\r\n            ret.push(this.cUqCollection[i]);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    getCUq(uq:string):CUq {\r\n        return this.cUqCollection[uq];\r\n    }\r\n\r\n    protected get VAppMain():TypeVPage<CApp> {return (this.ui&&this.ui.main) || VAppMain}\r\n    protected async beforeStart():Promise<boolean> {\r\n        try {\r\n            let app = await loadAppUqs(this.appOwner, this.appName);\r\n            // if (isDevelopment === true) {\r\n            // 这段代码原本打算只是在程序员调试方式下使用，实际上，也可以开放给普通用户，production方式下\r\n                let {predefinedUnit} = appInFrame;\r\n                let {id} = app;\r\n                this.id = id;\r\n                let {user} = nav;\r\n                if (user !== undefined && user.id > 0) {\r\n                    this.appUnits = await centerApi.userAppUnits(this.id);\r\n                    switch (this.appUnits.length) {\r\n                        case 0:\r\n                            this.showUnsupport(predefinedUnit);\r\n                            return false;\r\n                        case 1:\r\n                            let appUnit = this.appUnits[0].id;\r\n                            if (appUnit === undefined || appUnit < 0 || \r\n                                predefinedUnit !== undefined && appUnit != predefinedUnit)\r\n                            {\r\n                                this.showUnsupport(predefinedUnit);\r\n                                return false;\r\n                            }\r\n                            appInFrame.unit = appUnit;\r\n                            break;\r\n                        default:\r\n                            if (predefinedUnit>0 && this.appUnits.find(v => v.id===predefinedUnit) !== undefined) {\r\n                                appInFrame.unit = predefinedUnit;\r\n                                break;\r\n                            }\r\n                            nav.push(<this.selectUnitPage />)\r\n                            return false;\r\n                    }\r\n                }\r\n            //}\r\n\r\n            let retErrors = await this.loadUqs(app);\r\n            if (retErrors !== undefined) {\r\n                this.openPage(<Page header=\"ERROR\">\r\n                    <div className=\"m-3\">\r\n                        <div>Load Uqs 发生错误：</div>\r\n                        {retErrors.map((r, i) => <div key={i}>{r}</div>)}\r\n                    </div>\r\n                </Page>);\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        catch (err) {\r\n            nav.push(<Page header=\"App start error!\">\r\n                <pre>\r\n                    {typeof err === 'string'? err : err.message}\r\n                </pre>\r\n            </Page>);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    protected async internalStart(param:any) {\r\n        if (param !== true) {\r\n            this.clearPrevPages();\r\n        }\r\n        await this.showMainPage();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        return this.renderView(this.VAppMain);\r\n    }\r\n\r\n    // 如果是独立app，删去显示app之前的页面。\r\n    // 如果非独立app，则不删\r\n    protected clearPrevPages() {\r\n        nav.clear();\r\n    }\r\n\r\n    private showUnsupport(predefinedUnit: number) {\r\n        this.clearPrevPages();\r\n        let {user} = nav;\r\n        let userName:string = user? user.name : '[未登录]';\r\n        this.openPage(<Page header=\"APP无法运行\" logout={true}>\r\n            <div className=\"m-3 text-danger container\">\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-2\">登录用户: </div>\r\n                    <div className=\"col\">{userName}</div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-2\">App:</div>\r\n                    <div className=\"col\">{`${this.appOwner}/${this.appName}`}</div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-2\">预设小号:</div>\r\n                    <div className=\"col\">{predefinedUnit || <small className=\"text-muted\">[无预设小号]</small>}</div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-2\">\r\n                        <FA name=\"exclamation-triangle\" />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <div className=\"text-muted\">无法运行可能原因：</div>\r\n                        <ul className=\"p-0\">\r\n                            <li>没有小号运行 {this.ui.appName}</li>\r\n                            <li>用户 <b>{userName}</b> 没有加入任何一个运行{this.ui.appName}的小号</li>\r\n                            {\r\n                                predefinedUnit && \r\n                                <li>预设小号 <b>{predefinedUnit}</b> 没有运行App {this.ui.appName}</li>\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    predefinedUnit || \r\n                    <div className=\"form-group row\">\r\n                    <div className=\"col-2\"></div>\r\n                    <div className=\"col\">\r\n                        预设小号定义在 public/unit.json 文件中。\r\n                        定义了这个文件的程序，只能由url直接启动。\r\n                        用户第一次访问app之后，会缓存在localStorage里。<br/>\r\n                        如果要删去缓存的预定义Unit，logout然后再login。\r\n                    </div>\r\n                </div>\r\n                }\r\n            </div>\r\n        </Page>)\r\n    }\r\n\r\n    private async showMainPage() {\r\n        // #tv-RwPBwMef-23-sheet-api-108\r\n        let exHash = getExHash();\r\n        if (exHash !== undefined) {\r\n            let parts = exHash.split('-');\r\n            if (parts.length > 3) {\r\n                let action = parts[3];\r\n                // sheet_debug 表示centerUrl是debug方式的\r\n                if (action === 'sheet' || action === 'sheet_debug') {\r\n                    let uqId = Number(parts[4]);\r\n                    let sheetTypeId = Number(parts[5]);\r\n                    let sheetId = Number(parts[6]);\r\n                    let cUq = this.getCUqFromId(uqId);\r\n                    if (cUq === undefined) {\r\n                        alert('unknown uqId: ' + uqId);\r\n                        return;\r\n                    }\r\n                    this.clearPrevPages();\r\n                    await cUq.navSheet(sheetTypeId, sheetId);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        this.openVPage(this.VAppMain);\r\n    }\r\n\r\n    private getCUqFromId(uqId:number): CUq {\r\n        for (let i in this.cUqCollection) {\r\n            let cUq = this.cUqCollection[i];\r\n            if (cUq.id === uqId) return cUq;\r\n        }\r\n        return;\r\n    }\r\n\r\n    renderRow = (item: any, index: number):JSX.Element => {\r\n        let {id, nick, name} = item;\r\n        return <LMR className=\"px-3 py-2\" right={'id: ' + id}>\r\n            <div>{nick || name}</div>\r\n        </LMR>;\r\n    }\r\n    onRowClick = async (item: any) => {\r\n        appInFrame.unit = item.id; // 25;\r\n        await this.start();\r\n    }\r\n\r\n    protected selectUnitPage = () => {\r\n        return <Page header=\"选择小号\" logout={true}>\r\n            <List items={this.appUnits} item={{render: this.renderRow, onClick: this.onRowClick}}/>\r\n        </Page>\r\n    }\r\n}\r\n\r\nclass VAppMain extends VPage<CApp> {\r\n    async open(param?:any) {\r\n        this.openPage(this.appPage);\r\n    }\r\n\r\n    render(param?:any) {\r\n        return this.appContent();\r\n    }\r\n\r\n    protected appPage = () => {\r\n        let {caption} = this.controller;\r\n        return <Page header={caption} logout={async()=>{appInFrame.unit = undefined}}>\r\n            {this.appContent()}\r\n        </Page>;\r\n    }\r\n\r\n    protected appContent = () => {\r\n        let {cUqArr} = this.controller;\r\n        let content:any;\r\n        if (cUqArr.length === 0) {\r\n            content = <div className=\"text-danger\">\r\n                <FA name=\"\" /> 此APP没有绑定任何的UQ\r\n            </div>;\r\n        }\r\n        else {\r\n            content = cUqArr.map((v,i) => <div key={i}>{v.render()}</div>);\r\n        }\r\n        return <>{content}</>;\r\n    };\r\n}\r\n","import React from 'react';\r\nimport { FA } from \"tonva-react-form\";\r\n\r\nfunction icon(className:string, name:string) {\r\n    return <FA className={className} name={name} fixWidth={true} />;\r\n}\r\n/*\r\nexport interface EntityRes {\r\n    caption: string;\r\n    icon: JSX.Element;\r\n}\r\n*/\r\n\r\nexport const entityIcons:{[type:string]:JSX.Element} = {\r\n    tuid: icon('text-info', 'list-alt'),\r\n    action: icon('text-info', 'hand-o-right'),\r\n    map: icon('text-muted', 'list-ul'),\r\n    book: icon('text-muted', 'book'),\r\n    query: icon('text-warning', 'search'),\r\n    history: icon('text-info', 'hand-o-right'),\r\n    pending: icon('text-info', 'forward'),\r\n    sheet: icon('text-primary', 'wpforms'),\r\n};\r\n","import { Controller } from \"tonva-tools\";\r\nimport { CUq } from \"./uq\";\r\n\r\nexport abstract class ControllerUq extends Controller {\r\n    constructor(cUq: CUq, res:any) {\r\n        super(res);\r\n        this.cUq = cUq;\r\n    }\r\n    cUq: CUq;\r\n}\r\n","import {CenterApi as CenterApiBase} from 'tonva';\r\n\r\n//\r\n\r\nexport class CenterApi extends CenterApiBase {\r\n    async userAppUnits(app:number):Promise<any[]> {\r\n        return await this.get('tie/user-app-units', {app:app});\r\n    }\r\n}\r\n\r\nexport const centerApi = new CenterApi('tv/', undefined);\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Page } from 'tonva';\r\nimport { List, Muted, LMR } from 'tonva';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../entities';\r\nimport { CSheet, SheetUI } from './cSheet';\r\n\r\nexport class VSheetMain extends VEntity<Sheet, SheetUI, CSheet> {\r\n    async open() {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    newClick = () => this.event('new');\r\n    schemaClick = () => this.event('schema'); \r\n    archivesClick = () => this.event('archives');\r\n    sheetStateClick = (state) => this.event('state', state);\r\n\r\n    renderState = (item:any, index:number) => {\r\n        let {state, count} = item;\r\n        if (count === 0) return null;\r\n        let badge = <span className=\"badge badge-success ml-5 align-self-end\">{count}</span>;\r\n        return <LMR className=\"px-3 py-2\" left={this.controller.getStateLabel(state)} right={badge} />;\r\n    }\r\n\r\n    protected view = observer(() => {\r\n        let list = this.controller.statesCount.filter(row=>row.count);\r\n        let right = <button className=\"btn btn-outline-primary\" onClick={this.archivesClick}>已归档</button>;\r\n        let templet:any;\r\n        if (this.isDev === true) {\r\n            templet = <button className=\"btn btn-primary mr-2\" color=\"primary\" onClick={this.schemaClick}>模板</button>;\r\n        }\r\n        return <Page header={this.label}>\r\n            <LMR\r\n                className=\"mx-3 my-2\"\r\n                right={right}>\r\n                <button className=\"btn btn-primary mr-2\" color=\"primary\" onClick={this.newClick}>新建</button>\r\n                {templet}\r\n            </LMR>\r\n            <List className=\"my-2\"\r\n                header={<Muted className=\"mx-3 my-1\">待处理{this.label}</Muted>}\r\n                none=\"[ 无 ]\"\r\n                items={list}\r\n                item={{render:this.renderState, onClick:this.sheetStateClick}} />\r\n        </Page>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva';\r\nimport { FA } from 'tonva';\r\nimport { Sheet } from '../../entities';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { SheetUI, CSheet } from './cSheet';\r\n\r\nexport class VSheetNew extends VEntity<Sheet, SheetUI, CSheet> {\r\n    vForm: VForm;\r\n\r\n    async open(param?:any) {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    private onSubmit = async ():Promise<void> => {\r\n        let values = this.vForm.getValues();\r\n        let valuesWithBox = this.vForm.values;\r\n        //let ret = \r\n        await this.controller.onSave(values, valuesWithBox);\r\n        /*\r\n        this.ceasePage();\r\n        //this.openPage(this.finishedPage);\r\n        await this.controller.showSaved(ret);\r\n        */\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render()}\r\n    </Page>;\r\n}\r\n","import * as React from 'react';\r\nimport {List, Muted, LMR, EasyDate, FA} from 'tonva';\r\nimport { Sheet } from '../../entities';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CSheet, SheetUI, SheetData } from './cSheet';\r\n\r\nconst leftFlowStyle = {width: '8rem'};\r\n\r\nexport abstract class VSheetView extends VEntity<Sheet, SheetUI, CSheet> {\r\n    protected vForm: VForm;\r\n    protected sheetData: SheetData;\r\n    //data: any;\r\n    //state: string;\r\n    //flows:any[];\r\n\r\n    flowRow = (item:any, index:number):JSX.Element => {\r\n        let {date, user, preState, state, action} = item;\r\n        if (action === undefined) action = <><FA className=\"text-primary\" name=\"pencil-square-o\" /> 制单</>;\r\n        let to;\r\n        switch (state) {\r\n            case '$': break;\r\n            case '#': to = <><FA className=\"text-success\" name=\"file-archive-o\" /></>; break;\r\n            default: to = <><FA className=\"text-muted\" name=\"arrow-right\" /> &nbsp; {state}</>; break;\r\n        }\r\n        /*\r\n        return <div className=\"row\">\r\n            <div className=\"col-sm\"></div>\r\n            <div className=\"col-sm\"><div className=\"p-2\">{to}</div></div>\r\n            <div className=\"col-sm text-right\"><div className=\"p-2\"><Muted><EasyDate date={date} /></Muted></div></div>\r\n        </div>;\r\n        */\r\n        return <LMR \r\n            left={<div className=\"pl-3 py-2\" style={leftFlowStyle}>{action}</div>}\r\n            right={<div className=\"p-2\"><Muted><EasyDate date={date} /></Muted></div>}>\r\n            <div className=\"p-2\">{to}</div>\r\n        </LMR>;\r\n    }\r\n\r\n    protected sheetView = () => {\r\n        let {brief, flows} = this.sheetData;\r\n        let removed;\r\n        if (brief.state === '-')\r\n            removed = <div className=\"mx-3 my-2\" style={{color:'red'}}>本单据作废</div>;\r\n        return <div>\r\n            {removed}\r\n            {this.vForm.render()}\r\n    \r\n            <List header={<Muted className=\"mx-3 my-1\">流程</Muted>}\r\n                items={flows}\r\n                item={{render:this.flowRow}}/>\r\n        </div>;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva';\r\nimport { VForm, FormMode } from '../form';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\n\r\nexport class VSheetEdit extends VSheetView { //VEntity<Sheet, SheetUI, CSheet> {\r\n    protected sheetData: SheetData;\r\n    async open(param: SheetData) {\r\n        this.sheetData = param;\r\n        this.vForm = this.createForm(this.onSubmit, param.data, FormMode.edit);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSubmit = async ():Promise<void> => {\r\n        let values = this.vForm.getValues();\r\n        await this.controller.saveSheet(values, this.vForm.values);\r\n        this.closePage();\r\n        this.returnCall(this.vForm.values);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render()}\r\n    </Page>;\r\n}\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport { nav, Page } from 'tonva';\r\nimport { FA } from 'tonva';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\n\r\nexport class VSheetAction extends VSheetView { \r\n    async open(sheetData:SheetData) {\r\n        this.sheetData = sheetData;\r\n        //let {brief, data, flows} = await this.controller.getSheetData(sheetId);\r\n        //this.brief = brief;\r\n        //this.flows = flows;\r\n        //this.data = data;\r\n        //this.state = this.brief.state;\r\n        this.vForm = this.createForm(undefined, sheetData.data);\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    actionClick = async (action:any) => {\r\n        let {id, flow, state} = this.sheetData.brief;\r\n        let res = await this.controller.action(id, flow, state, action.name);\r\n        this.ceasePage();\r\n        this.openPage(this.acted);\r\n        //alert(jsonStringify(res));\r\n        //await this.backPage();\r\n    }\r\n\r\n    deleteClick = async () => {\r\n        alert('单据作废：程序正在设计中');\r\n    }\r\n\r\n    editClick = async () => {\r\n        //alert('修改单据：程序正在设计中');\r\n        let values = await this.controller.editSheet(this.sheetData);\r\n        this.vForm.setValues(values);\r\n    }\r\n\r\n    protected page = () => {\r\n        let {brief} = this.sheetData;\r\n        let {state, no} = brief;\r\n        let stateLabel = this.controller.getStateLabel(state);\r\n        let {states} = this.entity;\r\n        let s = states.find(v => v.name === state);\r\n        let actionButtons, startButtons;\r\n        if (s === undefined) {\r\n            let text:string, cn:string;\r\n            switch (state) {\r\n                default:\r\n                    text = '不认识的单据状态\\'' + state + '\\'';\r\n                    cn = 'text-info';\r\n                    break;\r\n                case '-': \r\n                    text = '已作废';\r\n                    cn = 'text-danger';\r\n                    break;\r\n                case '#':\r\n                    text = '已归档';\r\n                    cn = 'text-success';\r\n                    break;\r\n            }\r\n            actionButtons = <div className={classNames(cn)}>[{text}]</div>;\r\n        }\r\n        else {\r\n            actionButtons = <div className=\"flex-grow-1\">{s.actions.map((v,index) => \r\n                <button\r\n                    key={index}\r\n                    className=\"btn btn-primary mr-2\"\r\n                    onClick={()=>this.actionClick(v)}\r\n                >\r\n                    {this.controller.getActionLabel(state, v.name)}\r\n                </button>)}\r\n            </div>;\r\n            if (state === '$') {\r\n                startButtons = <div>\r\n                    <button className=\"btn btn-outline-info ml-2\" onClick={this.editClick}>修改</button>\r\n                    <button className=\"btn btn-outline-danger ml-2\" onClick={this.deleteClick}>作废</button>\r\n                </div>\r\n            }\r\n        };\r\n        return <Page header={this.label + ':' + stateLabel + '-' + no}>\r\n            <div className=\"mb-2\">\r\n                <div className=\"d-flex px-3 py-2 border-bottom bg-light\">\r\n                    {actionButtons}\r\n                    {startButtons}\r\n                </div>\r\n                <this.sheetView />\r\n            </div>\r\n        </Page>;\r\n    }\r\n\r\n    private acted = () => {\r\n        let {discription} = this.sheetData.brief;\r\n        return <Page header=\"已处理\" back=\"close\">\r\n            <div className=\"p-3 d-flex flex-column align-items-center\">\r\n                <div className=\"p-3\">{discription}</div>\r\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已处理！</div>\r\n                <div className=\"p-3\">\r\n                    <button className=\"btn btn-outline-info\" onClick={()=>this.backPage()}>返回</button>\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../entities';\r\nimport { SheetUI, CSheet } from './cSheet';\r\n\r\nexport class VSheetSchema extends VEntity<Sheet, SheetUI, CSheet> {\r\n    async open(param?:any) {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label + \"模板\"}>\r\n        <pre className=\"mx-3 my-2\">{this.entity.schemaStringify()}</pre>\r\n    </Page>;\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva';\r\nimport {List, LMR, FA, EasyDate, Muted} from 'tonva';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../entities';\r\nimport { SheetUI, CSheet } from './cSheet';\r\n\r\nexport class VArchives extends VEntity<Sheet, SheetUI, CSheet> {\r\n    list: any[];\r\n\r\n    async open() {\r\n        this.list = await this.entity.getArchives(undefined, 10);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    archiveClick = async (brief:any) => {\r\n        if (brief.processing===1) return;\r\n        this.event('archived', brief);\r\n    }\r\n    archiveRow = (row:any, index:number) => {\r\n        let {id, no, discription, date} = row;\r\n        let left = <>\r\n            {row.processing===1? '... ' : ''}\r\n            {row.no} &nbsp; {row.discription}\r\n        </>;\r\n        let right = <Muted><EasyDate date={date} /></Muted>;\r\n        return <LMR className=\"px-3 py-2\" left={left} right={right} />\r\n    }\r\n\r\n    protected view = () => {\r\n        return <Page header={'已归档' + this.label}>\r\n            <List items={this.list} item={{render:this.archiveRow, onClick:this.archiveClick}} />\r\n        </Page>;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { Page, nav } from 'tonva';\r\nimport { List, Muted, FA, LMR, EasyDate } from 'tonva';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../entities';\r\nimport { CSheet, SheetUI } from './cSheet';\r\n\r\nexport class VSheetList extends VEntity<Sheet, SheetUI, CSheet> {\r\n    protected row: (values) => JSX.Element;\r\n    stateName: string;\r\n    stateLabel: string;\r\n\r\n    async open(item:any) {\r\n        this.row = this.ui.listRow || this.rowContent;\r\n        this.stateName = item.state;\r\n        this.stateLabel = this.controller.getStateLabel(this.stateName);\r\n        //await this.controller.getStateSheets(this.stateName, 0, 10);\r\n        await this.controller.pageStateItems.first(this.stateName);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    rowClick = async (brief:any) => {\r\n        if (brief.processing===1) {\r\n            this.event('processing', brief.id);\r\n            return;\r\n        }\r\n        this.event('action', brief.id);\r\n    }\r\n\r\n    private onScrollBottom = () => {\r\n        console.log('onScrollBottom');\r\n        this.controller.pageStateItems.more();\r\n    }\r\n\r\n    protected rowContent = (row:any):JSX.Element => {\r\n        let {id, no, discription, date, processing} = row;\r\n        let left = <>            \r\n            {no} &nbsp; <Muted>{discription}</Muted> {processing===1? '...' : ''}\r\n        </>;\r\n        let right = <Muted><EasyDate date={date} /></Muted>;\r\n        return <LMR className=\"px-3 py-2\" left={left} right={right} />;\r\n    }\r\n\r\n    private renderRow = (row:any, index:number) => <this.row {...row} />\r\n\r\n    protected view = () => {\r\n        //let sheets = this.controller.stateSheets;\r\n        let {pageStateItems} = this.controller;\r\n        return <Page header={this.label + ' - ' + this.stateLabel} onScrollBottom={this.onScrollBottom}>\r\n            <List items={pageStateItems} item={{render:this.renderRow, onClick:this.rowClick}} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {Page} from 'tonva';\r\nimport { VSheetView } from './vSheetView';\r\nimport { CSheet, SheetUI, SheetData } from './cSheet';\r\n\r\nexport interface State {\r\n    flows: any;\r\n    data: any;\r\n}\r\nexport class VArchived extends VSheetView {\r\n    //protected controller: CSheet;\r\n    //brief: any;\r\n\r\n    async open(sheetData:SheetData) {\r\n        this.sheetData = sheetData;\r\n        /*\r\n        let {brief, data, flows} = await this.controller.getArchived(inBrief.id);\r\n        this.brief = brief;\r\n        this.data = data;\r\n        this.flows = flows;\r\n        */\r\n        this.vForm = this.createForm(undefined, this.sheetData.data);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => {\r\n        let {brief} = this.sheetData;\r\n        return <Page header={this.label + ':' + '-' + brief.no}>\r\n            <this.sheetView />\r\n        </Page>;\r\n    };\r\n}\r\n","import { Sheet } from \"../../entities\";\r\nimport { SheetUI, CSheet } from \"./cSheet\";\r\nimport { VEntity } from \"../CVEntity\";\r\n\r\nexport abstract class VSheet extends VEntity<Sheet, SheetUI, CSheet> {\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva';\r\nimport { FA } from 'tonva';\r\nimport { VSheet } from \"./vSheet\";\r\n\r\nexport class VSheetSaved extends VSheet {\r\n    private brief: any;\r\n    async open(brief?:any) {\r\n        this.brief = brief;\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    private restart = async () => {\r\n        this.ceasePage();\r\n        await this.event('new');\r\n    }\r\n\r\n    actionClick = async (action:any) => {\r\n        this.ceasePage();\r\n        let {id, flow, state} = this.brief;\r\n        let res = await this.controller.action(id, flow, state, action.name);\r\n        this.openPage(this.acted);\r\n    }\r\n\r\n    private buttons = <>\r\n        <button className=\"btn btn-outline-primary mr-3\" onClick={this.restart}>继续开单</button>\r\n        <button className=\"btn btn-outline-info\" onClick={()=>this.backPage()}>返回</button>\r\n    </>;\r\n\r\n    private view = () => {\r\n        let {states} = this.entity;\r\n        const state = '$';\r\n        let s = states.find(v => v.name === state);\r\n        let actionButtons = <>{s.actions.map((v,index) => \r\n            <button\r\n                key={index}\r\n                className=\"btn btn-primary mr-3\"\r\n                onClick={()=>this.actionClick(v)}\r\n            >\r\n                {this.controller.getActionLabel(state, v.name)}\r\n            </button>)}\r\n        </>;\r\n        return <Page header=\"已保存\" back=\"close\">\r\n            <div className=\"p-3 d-flex flex-column align-items-center\">\r\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已保存！系统尚未处理</div>\r\n                <div className=\"p-3\">\r\n                    {actionButtons}\r\n                    {this.buttons}\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    }\r\n\r\n    private acted = () => {\r\n        return <Page>\r\n            <div className=\"p-3 d-flex flex-column align-items-center\">\r\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已处理！</div>\r\n                <div className=\"p-3\">\r\n                    {this.buttons}\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { nav, Page } from 'tonva';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\n\r\nexport class VSheetProcessing extends VSheetView { \r\n    async open(sheetData:SheetData) {\r\n        this.sheetData = sheetData;\r\n        //let {brief, data, flows} = await this.controller.getSheetData(sheetId);\r\n        //this.brief = brief;\r\n        //this.flows = flows;\r\n        //this.data = data;\r\n        //this.state = this.brief.state;\r\n        this.vForm = this.createForm(undefined, sheetData.data);\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    protected page = () => {\r\n        let {brief} = this.sheetData;\r\n        let {state, no} = brief;\r\n        let stateLabel = this.controller.getStateLabel(state);\r\n        return <Page header={this.label + ':' + stateLabel + '-' + no}>\r\n            <div className=\"mb-2\">\r\n                <div className=\"d-flex px-3 py-2 border-bottom bg-light\">\r\n                    正在处理中...\r\n                </div>\r\n                <this.sheetView />\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n","import { IObservableArray, observable } from \"mobx\";\r\nimport { TypeVPage, VPage, PageItems, postWsToTop } from 'tonva';\r\nimport { Sheet, StateCount } from \"../../entities\";\r\nimport { CEntity, EntityUI, VEntity } from \"../CVEntity\";\r\nimport { VSheetMain } from \"./vMain\";\r\nimport { VSheetNew } from \"./vNew\";\r\nimport { VSheetEdit } from \"./vEdit\";\r\nimport { VSheetAction } from \"./vSheetAction\";\r\nimport { VSheetSchema } from \"./vSchema\";\r\nimport { VArchives } from \"./vArchives\";\r\nimport { VSheetList } from \"./vList\";\r\nimport { VArchived } from \"./vArchived\";\r\nimport { VSheetSaved } from \"./vSaved\";\r\nimport { VSheetProcessing } from \"./vSheetProcessing\";\r\n\r\nexport interface SheetActionUI {\r\n    label: string;\r\n}\r\n\r\nexport interface StateUI {\r\n    label: string;\r\n    actions: {[name:string]: SheetActionUI}\r\n}\r\n\r\nexport interface SheetUI extends EntityUI {\r\n    CSheet?: typeof CSheet;\r\n    states?: {[name:string]: StateUI};\r\n    main?: TypeVPage<CSheet>;\r\n    sheetNew?: TypeVPage<CSheet>;\r\n    sheetSaved?: TypeVPage<CSheet>;\r\n    sheetEdit?: TypeVPage<CSheet>;\r\n    sheetAction?: TypeVPage<CSheet>;\r\n    listRow?: (row:any) => JSX.Element;\r\n    sheetTitle?: (sheetValues:any, x:any) => string;      // 返回单据的描述\r\n}\r\n\r\nexport interface SheetData {\r\n    brief: any;\r\n    data: any;\r\n    flows: any[];\r\n}\r\n\r\nexport class CSheet extends CEntity<Sheet, SheetUI> {\r\n    statesCount:IObservableArray<StateCount> = observable.array<StateCount>([], {deep:true});\r\n    curState:string;\r\n    pageStateItems: PageItems<any>;\r\n\r\n    protected async internalStart() {\r\n        await this.loadStateSheetCount();\r\n        this.pageStateItems = this.entity.createPageStateItems();\r\n        await this.openVPage(this.VSheetMain);\r\n    }\r\n\r\n    protected async onMessage(msg: any):Promise<void> {\r\n        let {type, body, from, to, push} = msg;\r\n        if (type === 'sheet') this.onSheet(from, to, body);\r\n    }\r\n    private onSheet(from:number, to:number[], sheetData:any) {\r\n        let me = this.user.id;\r\n        let {id, preState, state} = sheetData;\r\n        console.log({$:'onMessage sheet', from:from, to:to.join(','), id:id, preState:preState, state:state, me:me, sheetData:sheetData})\r\n        if (from === me) {\r\n            this.sheetActPreState(id, preState);\r\n        }\r\n        if (to.find(v=>v===me) !== undefined) {\r\n            this.sheetActState(id, state, sheetData);\r\n        }\r\n    }\r\n    private sheetActPreState(id:number, preState:string) {\r\n        this.changeStateCount(preState, -1);\r\n        if (this.curState === undefined || this.curState !== preState) return;\r\n        /*\r\n        let index = this.stateSheets.findIndex(v => v.id === id);\r\n        if (index>=0) {\r\n            this.stateSheets.splice(index, 1);\r\n        }*/\r\n        let index = this.pageStateItems.items.findIndex(v => v.id === id);\r\n        if (index>=0) {\r\n            this.pageStateItems.items.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    private sheetActState(id:number, state:string, msg:any) {\r\n        this.changeStateCount(state, 1);\r\n        if (this.curState === undefined || this.curState !== state) return;\r\n        /*\r\n        if (this.stateSheets.findIndex(v => v.id === id) < 0) {\r\n            this.stateSheets.push(msg);\r\n        }\r\n        */\r\n        if (this.pageStateItems.items.findIndex(v => v.id === id) < 0) {\r\n            this.pageStateItems.items.push(msg);\r\n        }\r\n    }\r\n\r\n    private changeStateCount(state:string, delta:number) {\r\n        if (state === undefined) return;\r\n        let index = this.statesCount.findIndex(v => v.state === state);\r\n        console.log({$:'changeState', state: state, delta: delta, index: index});\r\n        if (index < 0) return;\r\n        let stateCount = this.statesCount[index];\r\n        stateCount.count += delta;\r\n        if (stateCount.count < 0) stateCount.count = 0;\r\n    }\r\n\r\n    protected get VSheetMain():TypeVPage<CSheet> {return (this.ui&&this.ui.main) || VSheetMain}\r\n    protected get VSheetNew(): TypeVPage<CSheet> {return this.ui.sheetNew || VSheetNew}\r\n    protected get VSheetSaved(): TypeVPage<CSheet> {return this.ui.sheetSaved || VSheetSaved}\r\n    protected get VSheetEdit(): TypeVPage<CSheet> {return this.ui.sheetEdit || VSheetEdit}\r\n    protected get VSheetSchema(): TypeVPage<CSheet> {return VSheetSchema}\r\n    protected get VArchives(): TypeVPage<CSheet> {return VArchives}\r\n    protected get VArchived(): TypeVPage<CSheet> {return VArchived}\r\n    protected get VSheetList(): TypeVPage<CSheet> {return VSheetList}\r\n    protected get VSheetAction(): TypeVPage<CSheet> {return this.ui.sheetAction || VSheetAction}\r\n    protected get VSheetProcessing(): TypeVPage<CSheet> {return VSheetProcessing}\r\n    protected async onEvent(type:string, value:any) {\r\n        let c: TypeVPage<CSheet>;\r\n        switch (type) {\r\n            default: return;\r\n            case 'new': c = this.VSheetNew; break;\r\n            case 'schema': c = this.VSheetSchema; break;\r\n            case 'archives': c = this.VArchives; break;\r\n            case 'state':\r\n                this.curState = value.state;\r\n                c = this.VSheetList;\r\n                break;\r\n            case 'archived':\r\n                await this.showArchived(value); return;\r\n            case 'action':\r\n                await this.showAction(value); return;\r\n            case 'processing':\r\n                await this.showProcessing(value); return;\r\n        }\r\n        await this.openVPage(c, value);\r\n    }\r\n\r\n    async startSheet(sheetId:number) {\r\n        if (await this.beforeStart() === false) return;\r\n        await this.onEvent('action', sheetId);\r\n    }\r\n\r\n    async showAction(sheetId:number) {\r\n        let sheetData:SheetData = await this.getSheetData(sheetId);\r\n        postWsToTop({\r\n            body: {\r\n                $type: 'msg',\r\n                action: '$sheet',\r\n                msg: {\r\n                    id: sheetId,\r\n                    uq: this.cUq.id,\r\n                    state: sheetData.brief.state\r\n                }\r\n            }\r\n        });\r\n        await this.openVPage(this.VSheetAction, sheetData);\r\n    }\r\n\r\n    async showProcessing(sheetId:number) {\r\n        let sheetData:SheetData = await this.getSheetData(sheetId);\r\n        await this.openVPage(this.VSheetProcessing, sheetData);\r\n    }\r\n\r\n    async editSheet(sheetData:SheetData):Promise<any> {\r\n        //alert('修改单据：程序正在设计中');\r\n        let values = await this.vCall(this.VSheetEdit, sheetData);\r\n        return values;\r\n    }\r\n\r\n    async showArchived(inBrief:any) {\r\n        let sheetData = await this.getArchived(inBrief.id);\r\n        await this.openVPage(this.VArchived, sheetData);\r\n    }\r\n\r\n    onSave = async (values:any, valuesWithBox:any):Promise<void> => {\r\n        //let values = this.vForm.getValues();\r\n        //let ret = await this.controller.saveSheet(values, this.vForm.values);\r\n        let ret = await this.saveSheet(values, valuesWithBox);\r\n        this.ceasePage();\r\n        //this.openPage(this.finishedPage);\r\n        await this.showSaved(ret);\r\n    }\r\n\r\n    async showSaved(sheetData:any) {\r\n        await this.openVPage(this.VSheetSaved, sheetData);\r\n    }\r\n\r\n    private getStateUI(stateName:string) {\r\n        let {states} = this.res;\r\n        if (states === undefined) return;\r\n        return states[stateName];\r\n    }\r\n    getStateLabel(stateName:string) {\r\n        let state = this.getStateUI(stateName);\r\n        let ret = (state && state.label) || stateName;\r\n        switch (ret) {\r\n            default: return ret;\r\n            case '$': return '新单';\r\n        }\r\n    }\r\n    getActionLabel(stateName:string, actionName:string) {\r\n        let state = this.getStateUI(stateName);\r\n        if (state === undefined) return actionName;\r\n        let actions = state.actions;\r\n        if (actions === undefined) return actionName;\r\n        let action = actions[actionName];\r\n        return (action && action.label) || actionName;\r\n    }\r\n\r\n    private async loadStateSheetCount():Promise<void> {\r\n        this.statesCount.clear();\r\n        let statesCount = await this.entity.stateSheetCount();\r\n        this.statesCount.splice(0, 0, ...statesCount);\r\n    }\r\n\r\n    async getSheetData(sheetId:number):Promise<SheetData> {\r\n        return await this.entity.getSheet(sheetId);\r\n    }\r\n\r\n    async getArchived(sheetId:number):Promise<SheetData> {\r\n        return await this.entity.getArchive(sheetId);\r\n    }\r\n\r\n    async saveSheet(values:any, valuesWithBox:any):Promise<any> {\r\n        let {sheetTitle} = this.ui;\r\n        let disc = sheetTitle === undefined? this.label : sheetTitle(valuesWithBox, this.x);\r\n        let ret = await this.entity.save(disc, values);\r\n        //let {id, state} = ret;\r\n        //if (id > 0) this.changeStateCount(state, 1);\r\n        return ret;\r\n    }\r\n\r\n    async action(id:number, flow:number, state:string, actionName:string):Promise<any> {\r\n        return await this.entity.action(id, flow, state, actionName);\r\n    }\r\n}\r\n","export * from './cSheet';\r\nexport * from './vSheet';\r\nexport * from './vMain';\r\nexport * from './vNew';\r\nexport * from './vEdit';\r\nexport * from './vList';\r\nexport * from './vSheetAction';\r\nexport * from './vSchema';\r\nexport * from './vArchived';\r\nexport * from './vSheetView';\r\n","import * as React from 'react';\r\nimport { TuidMain, Book, Entity } from '../../entities';\r\nimport { Page } from 'tonva';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CBook, BookUI } from './cBook';\r\n\r\nexport class VBookMain extends VEntity<Book, BookUI, CBook> {\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        Book\r\n    </Page>;\r\n}\r\n","import { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Book } from \"../../entities\";\r\nimport { VBookMain } from \"./vBookMain\";\r\n\r\nexport interface BookUI extends EntityUI {\r\n    CBook?: typeof CBook;\r\n    main: typeof VBookMain,\r\n}\r\n\r\nexport class CBook extends CEntity<Book, BookUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VBookMain);\r\n    }\r\n\r\n    protected get VBookMain():typeof VBookMain {return VBookMain}\r\n}\r\n","import React from \"react\";\r\nimport { View } from \"tonva-tools\";\r\nimport { List, Muted } from \"tonva-react-form\";\r\nimport { Entity } from \"../../entities\";\r\nimport { CLink } from \"../link\";\r\nimport { CUq } from \"./cUq\";\r\n\r\nexport class VUq extends View<CUq> {\r\n    protected isSysVisible = false;\r\n    protected tuidLinks: CLink[];\r\n    protected mapLinks: CLink[];\r\n    protected sheetLinks: CLink[];\r\n    protected actionLinks: CLink[];\r\n    protected queryLinks: CLink[];\r\n    protected bookLinks: CLink[];\r\n    protected historyLinks: CLink[];\r\n    protected pendingLinks: CLink[];\r\n\r\n    constructor(cUq: CUq) {\r\n        super(cUq);\r\n        let {tuidArr, mapArr, sheetArr, actionArr, queryArr, bookArr, historyArr, pendingArr} = cUq.entities;\r\n        this.tuidLinks = tuidArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cTuidMain(v)));\r\n        this.mapLinks = mapArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cMap(v)));\r\n        this.sheetLinks = sheetArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cSheet(v)));\r\n        this.actionLinks = actionArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cAction(v)));\r\n        this.queryLinks = queryArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cQuery(v)));\r\n        this.bookLinks = bookArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cBook(v)));\r\n        this.historyLinks = historyArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cHistory(v)));\r\n        this.pendingLinks = pendingArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cPending(v)));\r\n    }\r\n    protected isVisible(entity: Entity):boolean {\r\n        return entity.sys !== true || this.isSysVisible;\r\n    }\r\n    render(param?:any) {\r\n        if (this.view === undefined) return <div>??? viewModel 必须定义 view ???</div>\r\n        return React.createElement(this.view);\r\n    }\r\n\r\n    protected view = () => {\r\n        let {res, uq, error} = this.controller;\r\n        let linkItem = {\r\n            render: (cLink:CLink, index:number):JSX.Element => cLink.render(), \r\n            onClick: undefined, \r\n        };\r\n        let lists = [\r\n            {\r\n                header: res.tuid || 'TUID',\r\n                items: this.tuidLinks,\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.map || 'MAP',\r\n                items: this.mapLinks,\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.sheet || 'SHEET',\r\n                items: this.sheetLinks\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.action || 'ACTION',\r\n                items: this.actionLinks\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.query || 'QUERY',\r\n                items: this.queryLinks\r\n            },\r\n            {\r\n                cn: 'mt-2 mb-4',\r\n                header: res.book || 'BOOK',\r\n                items: this.bookLinks\r\n            },\r\n            {\r\n                cn: 'mt-2 mb-4',\r\n                header: res.history || 'HISTORY',\r\n                items: this.historyLinks\r\n            },\r\n            {\r\n                cn: 'mt-2 mb-4',\r\n                header: res.pending || 'PENDING',\r\n                items: this.pendingLinks\r\n            }\r\n        ];\r\n        let content;\r\n        if (error !== undefined) {\r\n            content = <div className=\"p-3 text-danger\">连接错误: {error}</div>;\r\n        }\r\n        else {\r\n            content = lists.map(({cn, header, items},index) => items.length > 0 && <List\r\n                key={index}\r\n                className={cn}\r\n                header={<div className=\"px-3 py-1 bg-light\"><Muted>{header}</Muted></div>}\r\n                items={items}\r\n                item={linkItem} />\r\n            );\r\n        }\r\n        return <>\r\n            <div className=\"px-3 py-1 small\">{res.uq || uq}</div>\r\n            {content}\r\n        </>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { UqApi, Controller, UnitxApi, appInFrame, resLang, nav } from 'tonva';\r\nimport { Entities, TuidMain, Action, Sheet, Query, Book, Map, Entity, Tuid, History, Pending } from '../../entities';\r\nimport { CLink } from '../link';\r\nimport { CBook, BookUI } from '../book';\r\nimport { CSheet, SheetUI } from '../sheet';\r\nimport { ActionUI, CAction } from '../action';\r\nimport { QueryUI, CQuery, CQuerySelect } from '../query';\r\nimport { CTuidMain, TuidUI, CTuid, CTuidInfo, CTuidSelect, CTuidEdit, CTuidList } from '../tuid';\r\nimport { MapUI, CMap } from '../map';\r\nimport { CEntity, EntityUI } from '../CVEntity';\r\nimport { PureJSONContent } from '../form/viewModel';\r\nimport { VUq } from './vUq';\r\nimport { CHistory, HistoryUI } from '../history';\r\nimport { CPending, PendingUI } from '../pending';\r\nimport { CApp } from '../CApp';\r\n\r\nexport type EntityType = 'sheet' | 'action' | 'tuid' | 'query' | 'book' | 'map' | 'history' | 'pending';\r\n\r\nexport interface UqUI {\r\n    CTuidMain?: typeof CTuidMain;\r\n    CTuidEdit?: typeof CTuidEdit;\r\n    CTuidList?: typeof CTuidList;\r\n    CTuidSelect?: typeof CTuidSelect;\r\n    CTuidInfo?: typeof CTuidInfo;\r\n    CQuery?: typeof CQuery;\r\n    CQuerySelect?: typeof CQuerySelect;\r\n    CMap?: typeof CMap;\r\n    CAction?: typeof CAction;\r\n    CSheet?: typeof CSheet;\r\n    CBook?: typeof CBook;\r\n    CHistory?: typeof CHistory;\r\n    CPending?: typeof CPending;\r\n    tuid?: {[name:string]: TuidUI};\r\n    sheet?: {[name:string]: SheetUI};\r\n    action?: {[name:string]: ActionUI};\r\n    map?: {[name:string]: MapUI};\r\n    query?: {[name:string]: QueryUI};\r\n    book?: {[name:string]: BookUI};    \r\n    history?: {[name:string]: HistoryUI};\r\n    pending?: {[name:string]: PendingUI};\r\n    res?: any;\r\n}\r\n\r\nfunction lowerPropertyName(entities: {[name:string]: EntityUI}) {\r\n    if (entities === undefined) return;\r\n    for (let i in entities) entities[i.toLowerCase()] = entities[i];\r\n}\r\n\r\nexport class CUq extends Controller /* implements Uq*/ {\r\n    private ui:any;\r\n    private CTuidMain: typeof CTuidMain;\r\n    private CTuidEdit: typeof CTuidEdit;\r\n    private CTuidList: typeof CTuidList;\r\n    private CTuidSelect: typeof CTuidSelect;\r\n    private CTuidInfo: typeof CTuidInfo;\r\n    private CQuery: typeof CQuery;\r\n    private CQuerySelect: typeof CQuerySelect;\r\n    private CMap: typeof CMap;\r\n    private CAction: typeof CAction;\r\n    private CSheet: typeof CSheet;\r\n    private CBook: typeof CBook;\r\n    private CHistory: typeof CHistory;\r\n    private CPending: typeof CPending;\r\n\r\n    constructor(cApp:CApp, uq:string, appId:number, uqId:number, access:string, ui:UqUI) {\r\n        super(resLang(ui.res));\r\n        this.cApp = cApp;\r\n        this.uq = uq;\r\n        this.id = uqId;\r\n        // 每一个ui都转换成小写的key的版本\r\n        lowerPropertyName(ui.tuid);\r\n        lowerPropertyName(ui.sheet);\r\n        lowerPropertyName(ui.map);\r\n        lowerPropertyName(ui.query);\r\n        lowerPropertyName(ui.action);\r\n        lowerPropertyName(ui.book);\r\n        lowerPropertyName(ui.history);\r\n        lowerPropertyName(ui.pending);\r\n        this.ui = ui;\r\n        this.CTuidMain = ui.CTuidMain || CTuidMain;\r\n        this.CTuidEdit = ui.CTuidEdit || CTuidEdit;\r\n        this.CTuidList = ui.CTuidList || CTuidList;\r\n        this.CTuidSelect = ui.CTuidSelect || CTuidSelect;\r\n        this.CTuidInfo = ui.CTuidInfo || CTuidInfo;\r\n        this.CQuery = ui.CQuery || CQuery;\r\n        this.CQuerySelect = ui.CQuerySelect || CQuerySelect;\r\n        this.CMap = ui.CMap || CMap;\r\n        this.CAction = ui.CAction || CAction;\r\n        this.CSheet = ui.CSheet || CSheet;\r\n        this.CBook = ui.CBook || CBook;\r\n        this.CHistory = ui.CHistory || CHistory;\r\n        this.CPending = ui.CPending || CPending;\r\n\r\n        let token = undefined;\r\n        let uqOwner:string, uqName:string;\r\n        let p = uq.split('/');\r\n        switch (p.length) {\r\n            case 1:\r\n                uqOwner = '$$$';\r\n                uqName = p[0];\r\n                break;\r\n            case 2:\r\n                uqOwner = p[0];\r\n                uqName = p[1];\r\n                break;\r\n            default:\r\n                console.log('uq must be uqOwner/uqName format');\r\n                return;\r\n        }\r\n\r\n        let hash = document.location.hash;\r\n        let baseUrl = hash===undefined || hash===''? \r\n            'debug/':'tv/';\r\n\r\n        let acc: string[];\r\n        if (access === null || access === undefined || access === '*') {\r\n            acc = [];\r\n        }\r\n        else {\r\n            acc = access.split(';').map(v => v.trim()).filter(v => v.length > 0);\r\n        }\r\n        let uqApi:UqApi;\r\n        if (uq === '$$$/$unitx') {\r\n            // 这里假定，点击home link之后，已经设置unit了\r\n            // 调用 UnitxApi会自动搜索绑定 unitx service\r\n            uqApi = new UnitxApi(appInFrame.unit);\r\n        }\r\n        else {\r\n            uqApi = new UqApi(baseUrl, uqOwner, uqName, acc, true);\r\n        }\r\n        this.entities = new Entities(this, uqApi, appId);\r\n    }\r\n\r\n    protected async internalStart() {\r\n    }\r\n\r\n    cApp:CApp;\r\n    uq: string;\r\n    id: number;\r\n    res: any;\r\n    entities:Entities;\r\n    error: string;\r\n    private schemaLoaded:boolean = false;\r\n\r\n    protected async loadEntites() {\r\n        await this.entities.init();\r\n        await this.entities.loadAccess();\r\n    }\r\n\r\n    async loadSchema():Promise<string> {\r\n        try {\r\n            if (this.schemaLoaded === true) return;\r\n            await this.loadEntites();\r\n            if (this.id === undefined) this.id = this.entities.uqId;\r\n            for (let i in this.ui) {\r\n                let g = this.ui[i];\r\n                if (g === undefined) continue;\r\n                let {caption, collection} = g;\r\n                if (collection === undefined) continue;\r\n                for (let j in collection) {\r\n                    if (this.entities[i](j) === undefined) {\r\n                        console.warn(i + ':' + '\\'' + j + '\\' is not uq entity');\r\n                    }\r\n                }\r\n            }\r\n            this.schemaLoaded = true;\r\n            return;\r\n        }\r\n        catch(err) {\r\n            console.error(err);\r\n            return this.error = err;\r\n        }\r\n    }\r\n\r\n    async getQuerySearch(name:string):Promise<Query> {\r\n        let query = this.entities.query(name);\r\n        if (query === undefined) \r\n            alert(`QUERY ${name} 没有定义!`);\r\n        else {\r\n            await query.loadSchema();\r\n            let {returns} = query;\r\n            if (returns.length > 1) {\r\n                alert(`QUERY ${name} 返回多张表, 无法做QuerySearch`);\r\n            }\r\n        }\r\n        return query;\r\n    }\r\n    getTuidPlaceHolder(tuid:Tuid) {\r\n        let {tuidPlaceHolder, entity} = this.res;\r\n        let {name} = tuid;\r\n        let type:string;\r\n        if (entity !== undefined) {\r\n            let en = entity[name];\r\n            if (en !== undefined) {\r\n                type = en.label;\r\n            }\r\n        }\r\n        return (tuidPlaceHolder || 'Select');\r\n    }\r\n    getNone() {\r\n        let {none} = this.res;\r\n        return none || 'none';\r\n    }\r\n    protected isSysVisible = false;\r\n    protected isVisible(entity: Entity):boolean {\r\n        return entity.sys !== true || this.isSysVisible;\r\n    }\r\n\r\n    async navSheet(sheetTypeId:number, sheetId:number) {\r\n        let sheet = this.entities.sheetFromTypeId(sheetTypeId);\r\n        if (sheet === undefined) {\r\n            alert('sheetTypeId ' + sheetTypeId + ' is not exists!');\r\n            return;\r\n        }\r\n        let cSheet = this.cSheet(sheet);\r\n        await cSheet.startSheet(sheetId);\r\n    }\r\n\r\n    sheet(entityName:string) {return this.entities.sheet(entityName);}\r\n    action(entityName:string) {return this.entities.action(entityName);}\r\n    query(entityName:string) {return this.entities.query(entityName);}\r\n    book(entityName:string) {return this.entities.book(entityName);}\r\n    map(entityName:string) {return this.entities.map(entityName);}\r\n    history(entityName:string) {return this.entities.history(entityName);}\r\n    pending(entityName:string) {return this.entities.pending(entityName);}\r\n    tuid(entityName:string) {return this.entities.tuid(entityName)}\r\n    tuidDiv(entityName:string, divName:string) {\r\n        let tuid = this.entities.tuid(entityName);\r\n        if (tuid === undefined) return;\r\n        let {divs} = tuid;\r\n        if (divs === undefined) return;\r\n        return divs[divName];\r\n    }\r\n\r\n    cSheetFromName(entityName:string):CSheet {\r\n        let entity = this.entities.sheet(entityName);\r\n        if (entity !== undefined) return this.cSheet(entity);\r\n    }\r\n    cActionFromName(entityName:string) {\r\n        let entity = this.entities.action(entityName);\r\n        if (entity !== undefined) return this.cAction(entity);\r\n    }\r\n    cQueryFromName(entityName:string) {\r\n        let entity = this.entities.query(entityName);\r\n        if (entity !== undefined) return this.cQuery(entity);\r\n    }\r\n    cBookFromName(entityName:string) {\r\n        let entity = this.entities.book(entityName);\r\n        if (entity !== undefined) return this.cBook(entity);\r\n    }\r\n    cMapFromName(entityName:string) {\r\n        let entity = this.entities.map(entityName);\r\n        if (entity !== undefined) return this.cMap(entity);\r\n    }\r\n    cHistoryFromName(entityName:string) {\r\n        let entity = this.entities.history(entityName);\r\n        if (entity !== undefined) return this.cHistory(entity);\r\n    }\r\n    cPendingFromName(entityName:string) {\r\n        let entity = this.entities.pending(entityName);\r\n        if (entity !== undefined) return this.cPending(entity);\r\n    }\r\n    cTuidMainFromName(entityName:string) {\r\n        let entity = this.entities.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidMain(entity);\r\n    }\r\n    cTuidEditFromName(entityName:string) {\r\n        let entity = this.entities.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidEdit(entity);\r\n    }\r\n    cTuidInfoFromName(entityName:string) {\r\n        let entity = this.entities.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidInfo(entity);\r\n    }\r\n\r\n    cTuidSelectFromName(entityName:string) {\r\n        let entity = this.entities.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidSelect(entity);\r\n    }\r\n\r\n    cFromName(entityType:EntityType, entityName:string): CEntity<Entity, EntityUI> {\r\n        switch (entityType) {\r\n            case 'sheet':\r\n                let sheet = this.entities.sheet(entityName);\r\n                if (sheet === undefined) return;\r\n                return this.cSheet(sheet);\r\n            case 'action':\r\n                let action = this.entities.action(entityName);\r\n                if (action === undefined) return;\r\n                return this.cAction(action);\r\n            case 'tuid':\r\n                let tuid = this.entities.tuid(entityName);\r\n                if (tuid === undefined) return;\r\n                return this.cTuidMain(tuid);\r\n            case 'query':\r\n                let query = this.entities.query(entityName);\r\n                if (query === undefined) return;\r\n                return this.cQuery(query);\r\n            case 'book':\r\n                let book = this.entities.book(entityName);\r\n                if (book === undefined) return;\r\n                return this.cBook(book);\r\n            case 'map':\r\n                let map = this.entities.map(entityName);\r\n                if (map === undefined) return;\r\n                return this.cMap(map);\r\n            case 'history':\r\n                let history = this.entities.history(entityName);\r\n                if (history === undefined) return;\r\n                return this.cHistory(history);\r\n            case 'pending':\r\n                let pending = this.entities.pending(entityName);\r\n                if (pending === undefined) return;\r\n                return this.cPending(pending);\r\n        }\r\n    }\r\n\r\n    linkFromName(entityType:EntityType, entityName:string) {\r\n        return this.link(this.cFromName(entityType, entityName));\r\n    }\r\n\r\n    private getUI<T extends Entity, UI extends EntityUI>(t:T):{ui:UI, res:any} {\r\n        let ui, res;\r\n        let {name, typeName} = t;\r\n        if (this.ui !== undefined) {\r\n            let tUI = this.ui[typeName];\r\n            if (tUI !== undefined) {\r\n                ui = tUI[name];\r\n            }\r\n        }\r\n        let {entity} = this.res;\r\n        if (entity !== undefined) {\r\n            res = entity[name];\r\n        }\r\n        return {ui: ui || {}, res: res || {} };\r\n    }\r\n\r\n    link(cEntity:CEntity<Entity, EntityUI>) {\r\n        return new CLink(cEntity);\r\n    }\r\n\r\n    get tuidLinks() {\r\n        return this.entities.tuidArr.filter(v => this.isVisible(v)).map(v => this.link(this.cTuidMain(v)));\r\n    }\r\n    cTuidMain(tuid:TuidMain):CTuidMain {\r\n        let {ui, res} = this.getUI<TuidMain, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidMain || this.CTuidMain)(this, tuid, ui, res);\r\n    }\r\n    cTuidEdit(tuid:TuidMain):CTuidEdit {\r\n        let {ui, res} = this.getUI<TuidMain, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidEdit || this.CTuidEdit)(this, tuid, ui, res);\r\n    }\r\n    cTuidList(tuid:TuidMain):CTuidList {\r\n        let {ui, res} = this.getUI<TuidMain, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidList || this.CTuidList)(this, tuid, ui, res);\r\n    }\r\n    cTuidSelect(tuid:Tuid):CTuidSelect {\r\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid.owner || tuid);\r\n        return new (ui && ui.CTuidSelect || this.CTuidSelect)(this, tuid, ui, res);\r\n    }\r\n    cTuidInfo(tuid:TuidMain):CTuidInfo {\r\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidInfo || this.CTuidInfo)(this, tuid, ui, res);\r\n    }\r\n\r\n    cSheet(sheet:Sheet/*, sheetUI?:SheetUI, sheetRes?:any*/):CSheet {\r\n        let {ui, res} = this.getUI<Sheet, SheetUI>(sheet);\r\n        //if (sheetUI !== undefined) ui = sheetUI;\r\n        //if (sheetRes !== undefined) res = sheetRes;\r\n        //return new (ui && ui.CSheet || this.CSheet)(this, sheet, sheetUI, sheetRes);\r\n        return new (ui && ui.CSheet || this.CSheet)(this, sheet, ui, res);\r\n    }\r\n    get sheetLinks() { \r\n        return this.entities.sheetArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cSheet(v))\r\n        });\r\n    }\r\n\r\n    cAction(action:Action):CAction {\r\n        let {ui, res} = this.getUI<Action, ActionUI>(action);\r\n        return new (ui && ui.CAction || this.CAction)(this, action, ui, res);\r\n    }\r\n    get actionLinks() { \r\n        return this.entities.actionArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cAction(v))\r\n        });\r\n    }\r\n\r\n    cQuery(query:Query):CQuery {\r\n        let {ui, res} = this.getUI<Query, QueryUI>(query);\r\n        return new (ui && ui.CQuery || this.CQuery)(this, query, ui, res);\r\n    }\r\n    cQuerySelect(queryName:string):CQuerySelect {\r\n        let query = this.entities.query(queryName);\r\n        if (query === undefined) return;\r\n        let {ui, res} = this.getUI<Query, QueryUI>(query);\r\n        return new (ui && ui.CQuerySelect || this.CQuerySelect)(this, query, ui, res);\r\n    }\r\n    get queryLinks() {\r\n        return this.entities.queryArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cQuery(v))\r\n        });\r\n    }\r\n    \r\n    cBook(book:Book):CBook {\r\n        let {ui, res} = this.getUI<Book, BookUI>(book);\r\n        return new (ui && ui.CBook || this.CBook)(this, book, ui, res);\r\n    }\r\n    get bookLinks() { \r\n        return this.entities.bookArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cBook(v))\r\n        });\r\n    }\r\n    \r\n    cHistory(history:History):CHistory {\r\n        let {ui, res} = this.getUI<History, HistoryUI>(history);\r\n        return new (ui && ui.CHistory || this.CHistory)(this, history, ui, res);\r\n    }\r\n    get historyLinks() { \r\n        return this.entities.historyArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cHistory(v))\r\n        });\r\n    }\r\n    \r\n    cPending(pending:Pending):CPending {\r\n        let {ui, res} = this.getUI<Pending, PendingUI>(pending);\r\n        return new (ui && ui.CPending || this.CPending)(this, pending, ui, res);\r\n    }\r\n    get pendingLinks() { \r\n        return this.entities.pendingArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cPending(v))\r\n        });\r\n    }\r\n    \r\n    cMap(map:Map):CMap {\r\n        let {ui, res} = this.getUI<Map, MapUI>(map);\r\n        return new (ui && ui.CMap || this.CMap)(this, map, ui, res);\r\n    }\r\n    get mapLinks() { \r\n        return this.entities.mapArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cMap(v));\r\n        });\r\n    }\r\n\r\n    getTuidContent(tuid:Tuid): React.StatelessComponent<any> {\r\n        let {owner} = tuid;\r\n        if (owner === undefined) {\r\n            let {ui} = this.getUI<Tuid, TuidUI>(tuid);\r\n            return (ui && ui.content) || PureJSONContent;\r\n        }\r\n        else {\r\n            let {ui} = this.getUI<Tuid, TuidUI>(owner);\r\n            return (ui && ui.divs && ui.divs[tuid.name].content) || PureJSONContent;\r\n        }\r\n    }\r\n\r\n    async showTuid(tuid:Tuid, id:number):Promise<void> {\r\n        let {owner} = tuid;\r\n        let c = this.cTuidInfo(owner || (tuid as TuidMain));\r\n        await c.start(id);\r\n    }\r\n\r\n    protected get VUq():typeof VUq {return VUq}\r\n\r\n    render() {\r\n        let v = new (this.VUq)(this);\r\n        return v.render();\r\n    }\r\n}\r\n\r\n","export * from './cUq';\r\nexport * from './vUq';","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport className from 'classnames';\r\nimport { List, LMR, FA } from 'tonva';\r\nimport { Page, nav } from 'tonva';\r\nimport { tv } from '../../tools';\r\nimport { Map } from '../../entities';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CMap, MapItem, MapKey, MapUI } from './cMap';\r\nimport { PureJSONContent } from '../form/viewModel';\r\n\r\nexport class VMapMain extends VEntity<Map, MapUI, CMap> {\r\n    private isFrom: boolean;\r\n\r\n    async open(param?:any) {\r\n        this.isFrom = this.controller.isFrom;\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    itemRender = (item:MapItem, index:number) => {\r\n        return <this.ItemRow item={item} />;\r\n    }\r\n\r\n    private ItemRow = observer(({item}: {item:MapItem}) => {\r\n        let {tuid, box, children, isLeaf, keyIndex, values} = item;\r\n        let keyUI = this.controller.keyUIs[keyIndex];\r\n        let {content:keyContent, valuesContent, none:keyNone} = keyUI;\r\n        let add:any, remove:any;\r\n        if (this.isFrom === false) {\r\n            add = <button className=\"btn btn-link btn-sm\" onClick={()=>this.controller.addClick(item)}>\r\n                <FA name=\"plus\" />\r\n            </button>;\r\n            remove = <button className=\"btn btn-link btn-sm\" onClick={()=>this.controller.removeClick(item)}>\r\n                <FA className=\"text-info\" name=\"trash\" />\r\n            </button>;\r\n        }\r\n        let right:any;\r\n        if (isLeaf === false) {\r\n            if (keyIndex === 0)\r\n                right = add;\r\n            else\r\n                right = <>{remove} &nbsp; {add}</>;\r\n        }\r\n        else if (keyIndex > 0) {\r\n            right = remove;\r\n        }\r\n        let content:any, border:any, valuesView:any;\r\n        if (isLeaf === true) {\r\n            content = undefined; //<div className=\"ml-5\">leaf</div>;\r\n            if (values) {\r\n                //valuesView = null; // 现在不显示values content了\r\n                valuesView = (valuesContent || PureJSONContent)(values, this.x);\r\n            }\r\n        }\r\n        else {\r\n            border = \"border-bottom\";\r\n            let none = keyNone && keyNone(this.x);\r\n            content = <List \r\n                className=\"ml-4\" \r\n                items={children} \r\n                item={{onClick:undefined, render:this.itemRender}}\r\n                none={none} />\r\n        }\r\n        let left = <div className=\"py-1 pr-3\">{tv(box, keyContent, this.x)}</div>;\r\n        return <div className=\"d-flex flex-column\">\r\n            <LMR className={className('px-3', 'py-2', border)}\r\n                left={left}\r\n                right={right}\r\n            >\r\n                <div className=\"py-1\">{valuesView}</div>\r\n            </LMR>\r\n            {content}\r\n        </div>;\r\n    });\r\n\r\n    protected get view() { return () => <Page header={this.label}>\r\n            <List items={this.controller.items} item={{className:'my-2', onClick:undefined, render:this.itemRender}} />\r\n        </Page>\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { VEntity } from \"../CVEntity\";\r\nimport { MapUI, CMap } from \"./cMap\";\r\nimport { Map } from \"../../entities\";\r\nimport { Page } from \"tonva-tools\";\r\nimport { VForm } from '../form';\r\n\r\nexport class VInputValues extends VEntity<Map, MapUI, CMap> {\r\n    private vForm: VForm;\r\n\r\n    async open(param?:any) {\r\n        this.vForm = this.createForm(this.onValuesSubmit);\r\n        this.openPageElement(<this.view />);\r\n    }\r\n\r\n    private onValuesSubmit = async () => {\r\n        this.ceasePage();\r\n        let values = this.vForm.getValues();\r\n        this.returnCall(values);\r\n    }\r\n\r\n    private view = () => {\r\n        return <Page>\r\n            {this.vForm.render()}\r\n        </Page>\r\n    }\r\n}\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\nimport { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Map, Tuid, BoxId, Field, TuidMain, fieldDefaultValue } from \"../../entities\";\r\nimport { VMapMain } from \"./vMain\";\r\nimport { observable } from \"mobx\";\r\nimport { PureJSONContent } from '../form/viewModel';\r\nimport { VInputValues } from './inputValues';\r\n\r\nexport interface MapKey {\r\n    content: (values, x?:any) => JSX.Element;\r\n    valuesContent?: (values, x?:any) => JSX.Element;\r\n    none?: (x:any)=>string;\r\n}\r\n\r\nexport interface MapUI extends EntityUI {\r\n    CMap?: typeof CMap;\r\n    keys?: MapKey[],\r\n}\r\n\r\nexport class MapItem {\r\n    parent: MapItem;\r\n    tuid: Tuid;\r\n    box: BoxId;\r\n    isLeaf: boolean;\r\n    keyIndex:number;\r\n    children: MapItem[] = observable.array([], {deep: true});\r\n    values: any;\r\n    constructor(parent:MapItem, tuid:Tuid, box:BoxId, keyIndex:number) {\r\n        this.parent = parent;\r\n        this.tuid = tuid;\r\n        this.box = box;\r\n        this.keyIndex = keyIndex;\r\n        this.isLeaf = false;\r\n    }\r\n}\r\n\r\nexport class CMap extends CEntity<Map, MapUI> {\r\n    isFrom: boolean;\r\n    items:MapItem[];\r\n    keyFields: Field[];\r\n    keyUIs: MapKey[];\r\n\r\n    protected async internalStart() {\r\n        let {keys, schemaFrom} = this.entity;\r\n        this.isFrom = schemaFrom !== undefined;\r\n        let q = this.entity.queries.all;\r\n        let result = await q.query({});\r\n        //let data = await this.entity.unpackReturns(res);\r\n        let ret = result.ret;\r\n        let keysLen = keys.length;\r\n        this.keyUIs = _.clone(this.ui.keys || []);\r\n        this.keyFields = [];\r\n        let retFields = q.returns[0].fields;\r\n        for (let i=0; i<keysLen; i++) {\r\n            this.keyFields.push(retFields[i]);\r\n            if (i >= this.keyUIs.length) {\r\n                this.keyUIs.push({\r\n                    content: PureJSONContent,\r\n                });\r\n            }\r\n        }\r\n        this.items = observable([]);\r\n        let item:MapItem = undefined;\r\n        for (let r of ret) {\r\n            let newItem = this.addItem(item, r);\r\n            if (newItem !== undefined) {\r\n                this.items.push(newItem);\r\n                item = newItem;\r\n            }\r\n        }\r\n\r\n        await this.openVPage(this.VMapMain);\r\n    }\r\n\r\n    private createItem(parent:MapItem, tuid:Tuid, box:BoxId, keyIndex:number, values?:any) {\r\n        let item = new MapItem(parent, tuid, box, keyIndex);\r\n        if (keyIndex === this.keyFields.length - 1) {\r\n            item.isLeaf = true;\r\n            item.values = values;\r\n        }\r\n        return item;\r\n    }\r\n\r\n    addItem(item:MapItem, row:any):MapItem {\r\n        let ret:MapItem = undefined;\r\n        let keysLen = this.keyFields.length;\r\n        let p = item;\r\n        for (let i=0;i<keysLen;i++) {\r\n            let key = this.keyFields[i];\r\n            let {name} = key;\r\n            let tuid = key._tuid;\r\n            let val:BoxId = row[name];\r\n            if (val === undefined) break;\r\n            let {id} = val;\r\n            if (i === 0) {\r\n                if (id === 0) continue;\r\n                if (p === undefined || p.box.id !== id) {\r\n                    ret = p = this.createItem(undefined, tuid, val, i, row);\r\n                }\r\n                continue;\r\n            }\r\n            let {children, box} = p;\r\n            let len = children.length;\r\n            if (len > 0) {\r\n                let n = children[len-1];\r\n                if (n.box.id === id) {\r\n                    p = n;\r\n                    continue;\r\n                }\r\n            }\r\n            if (id > 0) {\r\n                children.push(p = this.createItem(p, tuid, val, i, row));\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    async searchOnKey(keyField:Field, param):Promise<number> {\r\n        let {_tuid, _ownerField} = keyField;\r\n        let cTuidSelect = this.cUq.cTuidSelect(_tuid);\r\n        let callParam = param;\r\n        if (_ownerField !== undefined) {\r\n            callParam = param[_ownerField.name];\r\n            if (typeof callParam === 'object') {\r\n                callParam = callParam.id;\r\n            }\r\n        }\r\n        let ret = await cTuidSelect.call(callParam);\r\n        return _tuid.getIdFromObj(ret);\r\n    }\r\n\r\n    addClick = async(item:MapItem) => {\r\n        let {keyIndex, children} = item;\r\n        let keysLen = this.keyFields.length;\r\n        let keysLast = keysLen-1;\r\n        let idx = keyIndex + 1;\r\n        if (idx >= keysLen) return;\r\n        let keyField = this.keyFields[idx];\r\n        let kn = keyField.name;\r\n        let tuid = keyField._tuid;\r\n        let searchParam = {} as any;\r\n        let data = {} as any;\r\n        for (let p=item;p!==undefined;p=p.parent) {\r\n            let {keyIndex:ki, box} = p;\r\n            let kn = this.keyFields[ki].name;\r\n            //searchParam[kn] = data['_' + kn] = box.id;\r\n            searchParam[kn] = data[kn] = box.id;\r\n        }\r\n\r\n        let id = await this.searchOnKey(keyField, searchParam);\r\n        if (id === undefined || id <= 0) return;\r\n        tuid.useId(id);\r\n        let idBox = tuid.boxId(id);\r\n        let arr1 = {} as any;\r\n        let values:any = {};\r\n        if (keyIndex+1===keysLast) {\r\n            tuid.useId(id);\r\n            //values[kn] = arr1['_' + kn] = idBox;\r\n            values[kn] = arr1[kn] = idBox;\r\n            if (this.entity.fields.length > 0) {\r\n                let ret = await this.vCall(VInputValues, data);\r\n                for (let i in ret) {\r\n                    //values[i] = arr1['_' + i] = ret[i];\r\n                    values[i] = arr1[i] = ret[i];\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            //values[kn] = data['_' + kn] = idBox;\r\n            values[kn] = data[kn] = idBox;\r\n            for (let i=idx+1;i<keysLast;i++) {\r\n                //data['_' + this.keyFields[i].name] = 0;\r\n                data[this.keyFields[i].name] = 0;\r\n            }\r\n            // 填map的key field 0 值\r\n            //arr1['_' + this.keyFields[keysLast].name] = 0;\r\n            arr1[this.keyFields[keysLast].name] = 0;\r\n            let {fields} = this.entity;\r\n            for (let f of fields) {\r\n                let {name, type, null:nullable} = f;\r\n                if (!(nullable === true)) {\r\n                    //arr1['_' + f.name] = fieldDefaultValue(type);\r\n                    arr1[f.name] = fieldDefaultValue(type);\r\n                }\r\n            }\r\n        }\r\n        data.arr1 = [arr1];\r\n        await this.entity.actions.add.submit(data);\r\n        let rowIndex = children.findIndex(v => v.box.id === id);\r\n        if (rowIndex < 0) {\r\n            children.push(this.createItem(item, tuid, idBox, idx, values));\r\n        }\r\n        else {\r\n            let {fields} = this.entity;\r\n            if (fields !== undefined && fields.length > 0) {\r\n                let row = children[rowIndex];\r\n                children.splice(rowIndex, 1);\r\n                row.values = values;\r\n                /*\r\n                for (let f of fields) {\r\n                    let {name:fn} = f;\r\n                    row.values[fn] = values[fn];\r\n                }*/\r\n                children.splice(rowIndex, 0, row);\r\n            }\r\n        }\r\n        this.removeCeased();\r\n    }\r\n\r\n    removeClick = async(item:MapItem) => {\r\n        let keyField = this.keyFields[item.keyIndex];\r\n        let tuid = keyField._tuid;\r\n        let cTuidMain = this.cUq.cTuidMain(tuid.Main as TuidMain);\r\n        let label = cTuidMain.getLable(tuid);\r\n        let confirmDelete:_.TemplateExecutor = \r\n            this.res.confirmDelete \r\n            || _.template('do you really want to remove ${label}?');\r\n        if (confirm(confirmDelete({label:label})) === false) return;\r\n        let map:Map = this.entity;\r\n        let data = {} as any;\r\n        let arr1 = data['arr1'] = [];\r\n        let v0 = {} as any;\r\n        arr1.push(v0);\r\n        for (let p=item; p!==undefined;p=p.parent) {\r\n            let ki=p.keyIndex;\r\n            //v0['_'+this.keyFields[ki].name] = p.box.id;\r\n            v0[this.keyFields[ki].name] = p.box.id;\r\n        }\r\n        let len = this.keyFields.length;\r\n        for (let i=item.keyIndex+1; i<len; i++) {\r\n            let k = this.keyFields[i];\r\n            //v0['_'+k.name] = -1;\r\n            v0[k.name] = -1;\r\n        }\r\n        await map.actions.del.submit(data);\r\n        let children = item.parent.children;\r\n        let index = children.findIndex(v => v === item);\r\n        if (index >= 0) children.splice(index, 1);\r\n    }\r\n\r\n    protected get VMapMain():typeof VMapMain {return VMapMain}\r\n}\r\n","export * from './cMap';\r\nexport * from './vMain';\r\n","import * as React from 'react';\r\nimport { VPage, Page } from 'tonva';\r\nimport { jsonStringify } from '../../tools';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CAction, ActionUI } from './cAction';\r\nimport { Action } from '../../entities';\r\n\r\nexport class VActionMain extends VEntity<Action, ActionUI, CAction> {\r\n    protected vForm: VForm;\r\n    protected returns: any;\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        this.openPage(this.mainPage);\r\n    }\r\n\r\n    private onSubmit = async () => {\r\n        let values = this.vForm.getValues();\r\n        this.returns = await this.controller.submit(values);\r\n        this.closePage();\r\n        this.openPage(this.resultPage);\r\n    }\r\n\r\n    protected mainPage = () => {\r\n        let {label} = this.controller;\r\n        return <Page header={label}>\r\n            {this.vForm.render('mx-3 my-2')}\r\n        </Page>;\r\n    }\r\n\r\n    protected resultPage = () => {\r\n        let {label} = this.controller;\r\n        return <Page header={label} back=\"close\">\r\n            完成！\r\n            <pre>\r\n                {jsonStringify(this.returns)}\r\n            </pre>\r\n        </Page>;\r\n    }\r\n}\r\n","import { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Action } from \"../../entities\";\r\nimport { VActionMain } from \"./vActionMain\";\r\n\r\nexport interface ActionUI extends EntityUI {\r\n    CAction?: typeof CAction;\r\n    //main: typeof VActionMain,\r\n}\r\n\r\nexport class CAction extends CEntity<Action, ActionUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VActionMain);\r\n    }\r\n\r\n    protected get VActionMain():typeof VActionMain {return VActionMain}\r\n\r\n    async submit(values:any) {\r\n        return this.entity.submit(values);\r\n    }\r\n}\r\n","export * from './cAction';\r\nexport * from './vActionMain';\r\n","import * as React from 'react';\r\nimport { TuidMain, History, Entity } from '../../entities';\r\nimport { Page } from 'tonva';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CHistory, HistoryUI } from './cHistory';\r\n\r\nexport class VHistoryMain extends VEntity<History, HistoryUI, CHistory> {\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        History\r\n    </Page>;\r\n}\r\n","import { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { History } from \"../../entities\";\r\nimport { VHistoryMain } from \"./vHistoryMain\";\r\n\r\nexport interface HistoryUI extends EntityUI {\r\n    CHistory?: typeof CHistory;\r\n    main: typeof VHistoryMain,\r\n}\r\n\r\nexport class CHistory extends CEntity<History, HistoryUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VHistoryMain);\r\n    }\r\n\r\n    protected get VHistoryMain():typeof VHistoryMain {return VHistoryMain}\r\n}\r\n","export * from './cHistory';\r\nexport * from './vHistoryMain';\r\n","import * as React from 'react';\r\nimport { TuidMain, Pending, Entity } from '../../entities';\r\nimport { Page } from 'tonva';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CPending, PendingUI } from './cPending';\r\n\r\nexport class VPendingMain extends VEntity<Pending, PendingUI, CPending> {\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        pending\r\n    </Page>;\r\n}\r\n","import { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Pending } from \"../../entities\";\r\nimport { VPendingMain } from \"./vPendingMain\";\r\n\r\nexport interface PendingUI extends EntityUI {\r\n    CPending?: typeof CPending;\r\n    main: typeof VPendingMain,\r\n}\r\n\r\nexport class CPending extends CEntity<Pending, PendingUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VPendingMain);\r\n    }\r\n\r\n    protected get VPendingMain():typeof VPendingMain {return VPendingMain}\r\n}\r\n","export * from './cPending';\r\nexport * from './vPendingMain';\r\n","\r\nimport {setCenterToken} from './uqApi';\r\nimport {WSChannel} from './wsChannel';\r\n\r\nexport const netToken = {\r\n    set(userId:number, token:string) {\r\n        setCenterToken(userId, token);\r\n        WSChannel.setCenterToken(token);\r\n    },\r\n    clear() {\r\n        setCenterToken(0, undefined);\r\n        WSChannel.setCenterToken(undefined);\r\n    }\r\n};\r\n","import {CenterApi} from '../net';\r\nimport {User, decodeUserToken} from '../user';\r\n//import { nav } from '../ui';\r\n\r\nexport class UserApi extends CenterApi {\r\n    async login(params: {user: string, pwd: string, guest: number}): Promise<any> {\r\n        //(params as any).device = nav.local.device.get();\r\n        let ret = await this.get('login', params);\r\n        switch (typeof ret) {\r\n            default: return;\r\n            case 'string': return decodeUserToken(ret);\r\n            case 'object':\r\n                let token = ret.token;\r\n                let user = decodeUserToken(token);\r\n                let {nick, icon} = ret;\r\n                if (nick) user.nick = nick;\r\n                if (icon) user.icon = icon;\r\n                return user;\r\n        }\r\n        // !== undefined) return decodeToken(token);\r\n    }\r\n    async register(params: {\r\n        nick:string, \r\n        user:string, \r\n        pwd:string,\r\n        country:number, \r\n        mobile:number, \r\n        email:string,\r\n        verify:string,\r\n    }): Promise<any>\r\n    {\r\n        return await this.post('register', params);\r\n    }\r\n\r\n    async setVerify(account:string, type:'mobile'|'email') {\r\n        return await this.post('set-verify', {account:account, type:type});\r\n    }\r\n\r\n    async checkVerify(account:string, verify:string) {\r\n        return await this.post('check-verify', {account:account, verify:verify});\r\n    }\r\n\r\n    async isExists(account:string) {\r\n        return await this.get('is-exists', {account:account});\r\n    }\r\n\r\n    async resetPassword(account:string, password:string, verify:string, type:'mobile'|'email') {\r\n        return await this.post('reset-password', {account:account, password, verify, type});\r\n    }\r\n    \r\n    async userSetProp(prop:string, value:any) {\r\n        await this.post('tie/user-set-prop', {prop:prop, value:value});\r\n    }\r\n}\r\n\r\nconst userApi = new UserApi('tv/user/', undefined);\r\n\r\nexport default userApi;\r\n","\r\nconst zero = '00000000000000';\r\nexport function left0(num:number, fix:number) {\r\n    if (num === undefined) return '';\r\n    let r = num.toString();\r\n    let len = fix - r.length;\r\n    if (len <= 0) return r;\r\n    return zero.substr(0, len) + r;\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport {User} from '../user';\r\nimport {nav} from './nav';\r\nimport {Page} from './page';\r\nimport { isDevelopment } from '../net';\r\n\r\nexport abstract class Controller {\r\n    readonly res: any;\r\n    readonly x: any;\r\n    icon: string|JSX.Element;\r\n    label:string;\r\n    readonly isDev:boolean = isDevelopment;\r\n    get user():User {return nav.user}\r\n    get isLogined():boolean {\r\n        let {user} = nav;\r\n        if (user === undefined) return false;\r\n        return user.id > 0;\r\n    }\r\n    constructor(res:any) {\r\n        this.res = res || {};\r\n        this.x = this.res.x || {};\r\n    }\r\n\r\n    private receiveHandlerId:number;\r\n    private disposer:()=>void;\r\n\r\n    private dispose() {\r\n        // message listener的清理\r\n        nav.unregisterReceiveHandler(this.receiveHandlerId);\r\n        this.onDispose();\r\n    }\r\n\r\n    protected onDispose() {\r\n    }\r\n\r\n    protected async openVPage<C extends Controller>(vp: new (controller: C)=>VPage<C>, param?:any):Promise<void> {\r\n        await (new vp((this as any) as C)).open(param);\r\n    }\r\n\r\n    protected renderView<C extends Controller>(view: new (controller: C)=>View<C>, param?:any) {\r\n        return (new view((this as any) as C)).render(param);\r\n    }\r\n\r\n    async event(type:string, value:any) {\r\n        await this.onEvent(type, value);\r\n    }\r\n\r\n    protected async onEvent(type:string, value:any) {\r\n    }\r\n\r\n    protected msg(text:string) {\r\n        alert(text);\r\n    }\r\n    protected errorPage(header:string, err:any) {\r\n        this.openPage(<Page header=\"App error!\">\r\n            <pre>\r\n                {typeof err === 'string'? err : err.message}\r\n            </pre>\r\n        </Page>);\r\n    }\r\n\r\n    protected onMessage(message:any):Promise<void> {\r\n        return;\r\n    }\r\n\r\n    private onMessageReceive = async (message:any):Promise<void> => {\r\n        await this.onMessage(message);\r\n    }\r\n\r\n    protected async beforeStart():Promise<boolean> {\r\n        /*\r\n        console.log('this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);');\r\n        this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);\r\n        console.log('return true');\r\n        */\r\n        return true;\r\n    }\r\n    protected registerReceiveHandler() {\r\n        this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);\r\n    }\r\n\r\n    protected abstract internalStart(param?:any):Promise<void>;\r\n    async start(param?:any):Promise<void> {\r\n        this.disposer = this.dispose.bind(this);\r\n        this.registerReceiveHandler();\r\n        let ret = await this.beforeStart();\r\n        if (ret === false) return;\r\n        await this.internalStart(param);\r\n    }\r\n\r\n    get isCalling():boolean {return this._resolve_$ !== undefined}\r\n\r\n    private _resolve_$:((value:any) => void)[];\r\n    async call<T>(param?:any):Promise<T> {\r\n        if (this._resolve_$ === undefined) this._resolve_$ = [];\r\n        return new Promise<T> (async (resolve, reject) => {\r\n            this._resolve_$.push(resolve);\r\n            await this.start(param);\r\n        });\r\n    }\r\n\r\n    async vCall<C extends Controller>(vp: new (controller: C)=>VPage<C>, param?:any):Promise<any> {\r\n        if (this._resolve_$ === undefined) this._resolve_$ = [];\r\n        return new Promise<any> (async (resolve, reject) => {\r\n            this._resolve_$.push(resolve);\r\n            await (new vp(this as any)).open(param);\r\n        });\r\n    }\r\n\r\n    returnCall(value:any) {\r\n        if (this._resolve_$ === undefined) return;\r\n        let resolve = this._resolve_$.pop();\r\n        if (resolve === undefined) {\r\n            alert('the Controller call already returned, or not called');\r\n            return;\r\n        }\r\n        resolve(value);\r\n    }\r\n\r\n    openPage(page:JSX.Element) {\r\n        nav.push(page, this.disposer);\r\n        this.disposer = undefined;\r\n    }\r\n\r\n    replacePage(page:JSX.Element) {\r\n        nav.replace(page, this.disposer);\r\n        this.disposer = undefined;\r\n    }\r\n\r\n    backPage() {\r\n        nav.back();\r\n    }\r\n\r\n    closePage(level?:number) {\r\n        nav.pop(level);\r\n    }\r\n\r\n    ceasePage(level?:number) {\r\n        nav.ceaseTop(level);\r\n    }\r\n\r\n    removeCeased() {\r\n        nav.removeCeased();\r\n    }\r\n\r\n    regConfirmClose(confirmClose: ()=>Promise<boolean>) {\r\n        nav.regConfirmClose(confirmClose);\r\n    }\r\n}\r\n\r\n\r\nexport abstract class View<C extends Controller> {\r\n    protected controller: C;\r\n    protected readonly res: any;\r\n    protected readonly x: any;\r\n\r\n    constructor(controller: C) {\r\n        this.controller = controller;\r\n        this.res = controller.res;\r\n        this.x = controller.x;\r\n    }\r\n\r\n    protected get isDev() {return isDevelopment}\r\n\r\n    abstract render(param?:any): JSX.Element;\r\n\r\n    protected renderVm(vm: new (controller: C)=>View<C>, param?:any) {\r\n        return (new vm(this.controller)).render(param);\r\n    }\r\n\r\n    protected async openVPage(vp: new (controller: C)=>VPage<C>, param?:any):Promise<void> {\r\n        await (new vp(this.controller)).open(param);\r\n    }\r\n\r\n    protected async event(type:string, value?:any) {\r\n        /*\r\n        if (this._resolve_$_ !== undefined) {\r\n            await this._resolve_$_({type:type, value:value});\r\n            return;\r\n        }*/\r\n        await this.controller.event(type, value);\r\n    }\r\n\r\n    async vCall<C extends Controller>(vp: new (controller: C)=>VPage<C>, param?:any):Promise<any> {\r\n        return await this.controller.vCall(vp, param);\r\n    }\r\n\r\n    protected returnCall(value:any) {\r\n        this.controller.returnCall(value);\r\n    }\r\n\r\n    protected openPage(view: React.StatelessComponent<any>, param?:any) {\r\n        this.controller.openPage(React.createElement(view, param));\r\n    }\r\n\r\n    protected replacePage(view: React.StatelessComponent<any>, param?:any) {\r\n        this.controller.replacePage(React.createElement(view, param));\r\n    }\r\n\r\n    protected openPageElement(page: JSX.Element) {\r\n        this.controller.openPage(page);\r\n    }\r\n\r\n    protected replacePageElement(page: JSX.Element) {\r\n        this.controller.replacePage(page);\r\n    }\r\n\r\n    protected backPage() {\r\n        this.controller.backPage();\r\n    }\r\n\r\n    protected closePage(level?:number) {\r\n        this.controller.closePage(level);\r\n    }\r\n\r\n    protected ceasePage(level?:number) {\r\n        this.controller.ceasePage(level);\r\n    }\r\n\r\n    protected removeCeased() {\r\n        this.controller.removeCeased();\r\n    }\r\n\r\n    protected regConfirmClose(confirmClose: ()=>Promise<boolean>) {\r\n        this.controller.regConfirmClose(confirmClose);\r\n    }\r\n}\r\n\r\nexport abstract class VPage<C extends Controller> extends View<C> {\r\n    abstract open(param?:any):Promise<void>;\r\n\r\n    render(param?:any):JSX.Element {return null;}\r\n}\r\n\r\nexport type TypeVPage<C extends Controller> = new (controller: C)=>VPage<C>;\r\n\r\n","export * from './schema';\r\nexport * from './uiSchema';\r\n","\r\nexport const mobileRegex = /^[0-9]*$/;\r\nexport const emailRegex = /\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/;\r\n// /^([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+@([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+\\.[a-zA-Z]{2,3}$/\r\n\r\nexport const EmailFieldRule = (value:any): string|string[] => {\r\n    if (emailRegex.test(value as string) === false) return '电子邮件格式错误';\r\n}\r\n\r\nexport const MobileFieldRule = (value:any): string|string[] => {\r\n    if (emailRegex.test(value as string) === false) return '手机格式错误';\r\n}\r\n","import {observable, IObservableArray, computed} from 'mobx';\r\nimport {uid} from './uid';\r\n\r\nexport abstract class PageItems<T> {\r\n    constructor(itemObservable:boolean = false) {\r\n        this._items = observable.array<T>([], {deep:itemObservable});\r\n    }\r\n    private isFirst: boolean = true;\r\n    @observable loading: boolean = false;\r\n    @observable private beforeLoad: boolean = true;\r\n    @observable protected loaded: boolean = false;\r\n    protected _items:IObservableArray<T>;\r\n    @observable allLoaded: boolean = false;\r\n    @computed get items():IObservableArray<T> {\r\n        if (this.beforeLoad === true) return null;\r\n        if (this.loaded === false) return undefined;\r\n        return this._items;\r\n    }\r\n\r\n    @observable topDiv:string;\r\n    @observable bottomDiv:string;\r\n    scrollToTop() {\r\n        this.topDiv = '$$'+uid();\r\n    }\r\n    scrollToBottom() {\r\n        this.bottomDiv = '$$'+uid();\r\n    }\r\n\r\n    protected param: any;\r\n    protected firstSize = 100;\r\n    protected pageStart = undefined;\r\n    protected pageSize = 30;\r\n    protected appendPosition:'head'|'tail' = 'tail';\r\n\r\n    protected abstract async load(param:any, pageStart:any, pageSize:number):Promise<T[]>;\r\n    protected abstract setPageStart(item:T);\r\n\r\n    reset() {\r\n        this.isFirst = true;\r\n        this.beforeLoad = true;\r\n        this.loaded = false;\r\n        this.param = undefined;\r\n        this.allLoaded = false;\r\n        this._items.clear();\r\n        this.setPageStart(undefined);\r\n    }\r\n\r\n    append(item:T) {\r\n        if (this.appendPosition === 'tail')\r\n            this._items.unshift(item);\r\n        else\r\n            this._items.push(item);\r\n    }\r\n\r\n    async first(param:any):Promise<void> {\r\n        this.reset();\r\n        this.beforeLoad = false;\r\n        this.param = param;\r\n        await this.more();        \r\n    }\r\n\r\n    async more():Promise<void> {\r\n        if (this.allLoaded === true) return;\r\n        if (this.loading === true) return;\r\n        this.loading = true;\r\n        let pageSize = this.pageSize + 1;\r\n        if (this.isFirst === true) {\r\n            if (this.firstSize > this.pageSize) pageSize = this.firstSize+1;\r\n        }\r\n        let ret = await this.load(\r\n                this.param, \r\n                this.pageStart,\r\n                pageSize);\r\n        this.loading = false;\r\n        this.loaded = true;\r\n        let len = ret.length;\r\n        if (this.isFirst===true && len>this.firstSize ||\r\n            this.isFirst===false && len>this.pageSize)\r\n        {\r\n            this.allLoaded = false;\r\n            --len;\r\n            ret.splice(len, 1);\r\n        }\r\n        else {\r\n            this.allLoaded = true;\r\n        }\r\n        if (len === 0) {\r\n            this._items.clear();\r\n            return;\r\n        }\r\n        this.setPageStart(ret[len-1]);\r\n        if (this.appendPosition === 'tail')\r\n            this._items.push(...ret);\r\n        else\r\n            this._items.unshift(...ret.reverse());\r\n        this.isFirst = false;\r\n    }\r\n}\r\n","import {observable, computed} from 'mobx';\r\n\r\nexport interface Id {\r\n    id: number;\r\n}\r\n\r\nexport abstract class CacheIds<T extends Id> {\r\n    constructor(maxCount:number = 100) {\r\n        this.maxCount = maxCount;\r\n    }\r\n    private maxCount:number;\r\n    private arr:T[] = [];\r\n    @observable dict = new Map<number, T>();\r\n\r\n    loadIds(ids:number[]) {\r\n        let arr:number[] = [];\r\n        for (let id of ids) {\r\n            if (id === null) continue;\r\n            let item = this.dict.get(id);\r\n            if (item === undefined) {\r\n                arr.push(id);\r\n                item = {id:id} as T;\r\n                this.dict.set(id, item);\r\n            }\r\n        }                \r\n        this.loadId(arr);\r\n    }\r\n\r\n    get(id:number):T {\r\n        if (id === undefined || id === null) return null;\r\n        let item = this.dict.get(id);\r\n        if (item === undefined) {\r\n            this.dict.set(id, {id:id} as T);\r\n            this.loadId([id]);\r\n            item = this.dict.get(id);\r\n        }\r\n        return item;\r\n    }\r\n    private setItem(id:number, item:T) {\r\n        if (item === undefined) {\r\n            this.dict.set(id, null);\r\n            this.arr.push({id: id} as T);\r\n        }\r\n        else {\r\n            this.dict.set(id, item);\r\n            this.arr.push(item);\r\n        }\r\n        if (this.arr.length > this.maxCount) {\r\n            item = this.arr.shift();\r\n            this.dict.delete(item.id);\r\n        }\r\n    }\r\n    private async loadId(ids:number[]) {\r\n        let items = await this._loadIds(ids);\r\n        if (items === undefined) {\r\n            for (let id of ids) {\r\n                if (id === null) continue;\r\n                let item = await this._loadId(id);\r\n                this.setItem(id, item);\r\n            }\r\n        }\r\n        else {\r\n            for (let id of ids) {\r\n                let item = items.find(v => v.id === id);\r\n                this.setItem(id, item);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected abstract async _loadIds(ids:number[]):Promise<T[]>;\r\n    protected abstract async _loadId(id:number):Promise<T>;\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {FormView, FormProps} from './formView';\r\n\r\nexport function tonvaDebug() {\r\n    let a = 0;\r\n}\r\n\r\nexport interface TonvaFormProps extends FormProps {\r\n    className?: string;\r\n    initValues?: any;\r\n}\r\n\r\n@observer \r\nexport class TonvaForm extends React.Component<TonvaFormProps, {}> {\r\n    formView: FormView;\r\n    constructor(props:TonvaFormProps) {\r\n        super(props);\r\n        this.formView = new FormView(this.props);\r\n    }\r\n    componentWillMount() {\r\n        this.formView.setInitValues(this.props.initValues);\r\n    }\r\n    debug() {\r\n        let s = null;\r\n    }\r\n    render() {\r\n        let {className, children, initValues} = this.props;\r\n        return <div className={className}>\r\n            {\r\n                children === undefined? \r\n                    this.formView.render() : \r\n                    <form onSubmit={this.formView.onSubmit}>{children}</form>\r\n            }\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nexport interface Action {\r\n    icon?: string;\r\n    caption?: string;\r\n    action?: () => void;\r\n}\r\n\r\nexport interface DropdownActionsProps {\r\n    icon?: string;\r\n    actions: Action[];\r\n    isRight?: boolean;\r\n}\r\n\r\nexport interface DropdownActionsState {\r\n    dropdownOpen: boolean;\r\n}\r\n\r\nexport class DropdownActions extends React.Component<DropdownActionsProps, DropdownActionsState> {\r\n    private menu: HTMLDivElement;\r\n    private button: HTMLElement;\r\n    constructor(props:DropdownActionsProps) {\r\n        super(props);\r\n        this.state = {\r\n            dropdownOpen: false\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        document.addEventListener('click', this.handleDocumentClick);\r\n        document.addEventListener('touchstart', this.handleDocumentClick);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('click', this.handleDocumentClick);\r\n        document.removeEventListener('touchstart', this.handleDocumentClick);\r\n    }\r\n\r\n    private handleDocumentClick = (evt:any) => {\r\n        if (this.state.dropdownOpen === false) return;\r\n        if (this.button && this.button.contains(evt.target)) return;\r\n        if (!this.menu) return;\r\n        //if (!this.menu.contains(evt.target)) \r\n        this.toggle();\r\n    }\r\n\r\n    private toggle = () => {\r\n        this.setState({\r\n            dropdownOpen: !this.state.dropdownOpen\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let {icon, actions, isRight} = this.props;\r\n        if (isRight === undefined) isRight = true;\r\n        let hasIcon = actions.some(v => v.icon!==undefined);\r\n        let {dropdownOpen} = this.state;\r\n        //isOpen={this.state.dropdownOpen} toggle={this.toggle}\r\n        return <div className=\"dropdown\">\r\n            <button ref={v=>this.button=v} className=\"cursor-pointer dropdown-toggle btn btn-sm\"\r\n                data-toggle=\"dropdown\"\r\n                aria-expanded={dropdownOpen}\r\n                onClick={this.toggle}>\r\n                <i className={classNames('fa', 'fa-'+(icon||'ellipsis-v'))} />\r\n            </button>\r\n            <div ref={v => this.menu=v} className={classNames({\"dropdown-menu\":true, \"dropdown-menu-right\":isRight, \"show\":dropdownOpen})}>\r\n                {\r\n                    actions.map((v,index) => {\r\n                        let {icon, caption, action} = v;\r\n                        if (icon === undefined && caption === undefined) \r\n                            return <div className=\"dropdown-divider\" />;\r\n                        let i:any;\r\n                        if (hasIcon === true) {\r\n                            if (icon !== undefined) icon = 'fa-' + icon;\r\n                            i = <><i className={classNames('fa', icon, 'fa-fw')} aria-hidden={true}></i>&nbsp; </>;\r\n                        }\r\n                        if (action === undefined) \r\n                            return <h6 className=\"dropdown-header\">{i} {caption}</h6>;\r\n                        return <a className=\"dropdown-item\" key={index} href=\"#\" onClick={(evt:React.MouseEvent<HTMLAnchorElement>)=>{ evt.preventDefault();action()}}>{i} {caption}</a>\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\n/*\r\nexport class DropdownActions extends React.Component<DropdownActionsProps, DropdownActionsState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dropdownOpen: false\r\n        };\r\n    }\r\n    private toggle = () => {\r\n        this.setState({\r\n            dropdownOpen: !this.state.dropdownOpen\r\n        });\r\n    }\r\n    render() {\r\n        let {icon, actions, isRight} = this.props;\r\n        if (isRight === undefined) isRight = true;\r\n        let hasIcon = actions.some(v => v.icon!==undefined);\r\n        return <UncontrolledButtonDropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\r\n            <DropdownToggle caret={true} size=\"sm\" className=\"cursor-pointer\">\r\n                <i className={classNames('fa', 'fa-'+(icon||'ellipsis-v'))} />\r\n            </DropdownToggle>\r\n            <DropdownMenu right={isRight}>\r\n                {actions.map((v,index) => {\r\n                    let {icon, caption, action} = v;\r\n                    if (icon === undefined && caption === undefined) \r\n                        return <div className=\"dropdown-divider\" />;\r\n                    let i;\r\n                    if (hasIcon === true) {\r\n                        if (icon !== undefined) icon = 'fa-' + icon;\r\n                        i = <><i className={classNames('fa', icon, 'fa-fw')} aria-hidden={true}></i>&nbsp; </>;\r\n                    }\r\n                    if (action === undefined) \r\n                        return <h6 className=\"dropdown-header\">{i} {caption}</h6>;\r\n                    return <DropdownItem key={index} onClick={action}>{i} {caption}</DropdownItem>\r\n                })}\r\n            </DropdownMenu>\r\n        </UncontrolledButtonDropdown>\r\n    }\r\n}\r\n*/","import * as React from 'react';\r\n\r\nexport interface EasyDateProps {\r\n    date: Date | string;\r\n}\r\n\r\nexport class EasyDate extends React.Component<EasyDateProps> {\r\n    render() {\r\n        let {date} = this.props;\r\n        if (!date) return null;\r\n        let d = (typeof date === 'string')? new Date(Date.parse(date)) : date;\r\n        let now = new Date();\r\n        let tick = now.getTime() - d.getTime();\r\n        let nDate=now.getDate();\r\n        let _date=d.getDate(), hour=d.getHours(), minute=d.getMinutes(), month=d.getMonth()+1;\r\n        let hm = hour + ((minute<10?':0':':') + minute);\r\n        if (tick < -24*3600*1000) return d.getFullYear()+'年'+month+'月'+_date+'日 ' + hm;\r\n        if (tick < 24*3600*1000) {\r\n            return _date!==nDate? \r\n                (tick < 0? '明天 ' : '昨天 ') + hm \r\n                : hm;\r\n        }\r\n        if (tick < 365*24*3600*1000) {\r\n            return month+'月'+_date+'日 ';\r\n        }\r\n        return d.getFullYear()+'年'+month+'月'+_date+'日';\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Image } from 'tonva';\r\n\r\nexport interface MediaProps {\r\n    icon: string;\r\n    main: string|JSX.Element;\r\n    discription?: string | JSX.Element;\r\n    px?: number;\r\n    py?: number;\r\n}\r\n\r\nexport class Media extends React.Component<MediaProps> {\r\n    render() {\r\n        let {icon, main, discription, px, py} = this.props;\r\n        let disp:any;\r\n        if (typeof discription === 'string')\r\n            disp = <div>{discription}</div>;\r\n        else\r\n            disp = discription;\r\n        let cn = classNames(\r\n            'media', \r\n            px===undefined? 'px-0':'px-'+px, \r\n            py===undefined? 'py-2':'py-'+py);\r\n        return <div className={cn}>\r\n            <Image className=\"mr-3 w-4c h-4c\" src={icon} />\r\n            <div className=\"media-body\">\r\n                <h5 className=\"mt-0\">{main}</h5>\r\n                {disp}\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\n\r\nexport interface SearchBoxProps {\r\n    className?: string;\r\n    label?: string;\r\n    initKey?: string;\r\n    placeholder?: string;\r\n    buttonText?: string;\r\n    maxLength?: number;\r\n    size?: 'sm' | 'md' | 'lg';\r\n    inputClassName?: string;\r\n    onSearch: (key:string)=>Promise<void>;\r\n    onFocus?: ()=>void;\r\n    allowEmptySearch?: boolean;\r\n}\r\n\r\n/*\r\nexport interface SearchBoxState {\r\n    disabled: boolean;\r\n}*/\r\n\r\nexport class SearchBox extends React.Component<SearchBoxProps> { //}, SearchBoxState> {\r\n    private input: HTMLInputElement;\r\n    private key: string = null;\r\n    @observable private disabled: boolean;\r\n\r\n    private onChange = (evt: React.ChangeEvent<any>) => {\r\n        this.key = evt.target.value;\r\n        if (this.key !== undefined) {\r\n            this.key = this.key.trim();\r\n            if (this.key === '') this.key = undefined;\r\n        }\r\n        if (this.props.allowEmptySearch !== true) {\r\n            this.disabled = !this.key;\r\n        }\r\n    }\r\n    private onSubmit = async (evt: React.FormEvent<any>) => {\r\n        evt.preventDefault();\r\n        if (this.key === null) this.key = this.props.initKey || '';\r\n        if (this.props.allowEmptySearch !== true) {\r\n            if (!this.key) return;\r\n            if (this.input) this.input.disabled = true;\r\n        }\r\n        await this.props.onSearch(this.key);\r\n        if (this.input) this.input.disabled = false;\r\n    }\r\n    clear() {\r\n        if (this.input) this.input.value = '';\r\n    }\r\n    render() {\r\n        let {className, inputClassName, onFocus,\r\n            label, placeholder, buttonText, maxLength, size} = this.props;\r\n        let inputSize:string;\r\n        switch (size) {\r\n            default:\r\n            case 'sm': inputSize = 'input-group-sm'; break;\r\n            case 'md': inputSize = 'input-group-md'; break;\r\n            case 'lg': inputSize = 'input-group-lg'; break;\r\n        }\r\n        let lab:any;\r\n        if (label !== undefined) lab = <label className=\"input-group-addon\">{label}</label>;\r\n        return <form className={className} onSubmit={this.onSubmit} >\r\n            <div className={classNames(\"input-group\", inputSize)}>\r\n                {lab}\r\n                <input ref={v=>this.input=v} onChange={this.onChange}\r\n                    type=\"text\"\r\n                    name=\"key\"\r\n                    onFocus={onFocus}\r\n                    className={classNames('form-control', inputClassName || 'border-primary')}\r\n                    placeholder={placeholder}\r\n                    defaultValue={this.props.initKey}\r\n                    maxLength={maxLength} />\r\n                <div className=\"input-group-append\">\r\n                    <button className=\"btn btn-primary\"\r\n                        type=\"submit\"\r\n                        disabled={this.disabled}>\r\n                        <i className='fa fa-search' />\r\n                        <i className=\"fa\"/>\r\n                        {buttonText}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </form>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport className from 'classnames';\r\nimport {FormProps, FormRow, SubmitResult, FormView, TonvaForm} from '../form';\r\n\r\nexport interface Step {\r\n    formRows: FormRow[];\r\n    next: undefined | string | ((values:any) => string);    // 返回下一步的step名称或者直接就是名称\r\n    ex?: any;                                   // 每一步额外的参数\r\n}\r\n\r\nexport interface MultiStepProps {\r\n    className?: string;\r\n    header?: (step:Step, num:number) => JSX.Element; //name: step name, num: 第几步，1开始\r\n    footer?: (step:Step, num:number) => JSX.Element; //name: step name, num: 第几步，1开始\r\n    steps: {[name:string]: Step};\r\n    first: string;         // 第一步的名字\r\n    onSubmit: (values:any) => Promise<SubmitResult|undefined>;\r\n    submitButton?: string|JSX.Element;\r\n}\r\n\r\nexport interface StepView {\r\n    stepName: string;\r\n    step: Step;\r\n    props: FormProps;\r\n    //view: JSX.Element;\r\n}\r\nexport interface MultiStepState {\r\n    //num: number;\r\n    //step: Step;\r\n    //formView: FormView;\r\n    topView: StepView;\r\n    stepViews: StepView[];\r\n}\r\n\r\nexport class MultiStep extends React.Component<MultiStepProps, MultiStepState> {\r\n    private values: any = {};\r\n    private stepViews: StepView[] = [];\r\n    private topView: StepView;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            topView: undefined,\r\n            stepViews: [],\r\n        }\r\n        this.onPrev = this.onPrev.bind(this);\r\n        this.onNext = this.onNext.bind(this);\r\n    }\r\n    \r\n    private setStep(stepName: string) {\r\n        let step = this.props.steps[stepName];\r\n        if (step === undefined) return; //throw new Error('Unknown step name: ' + stepName);\r\n        if (this.topView !== undefined) this.stepViews.push(this.topView);\r\n        let otherButton, onOther;\r\n        if (this.stepViews.length > 0) {\r\n            otherButton = <ButtonConten prefix=\"undo\" text=\"上一步\" />;\r\n            onOther = this.onPrev;\r\n        }\r\n        let {header, footer} = this.props;\r\n        let btnContent = step.next === undefined?\r\n            {prefix: 'cloud-upload', text: this.props.submitButton || '提交'} :\r\n            {suffix: 'arrow-right', text: '下一步'}\r\n        let formProps = {\r\n            formRows: step.formRows,\r\n            submitButton: <ButtonConten {...btnContent} />,\r\n            onSubmit: this.onNext,\r\n            otherButton: otherButton,\r\n            onOther: onOther,\r\n        };\r\n        let num = this.stepViews.length + 1;\r\n        this.topView = {\r\n            stepName: stepName,\r\n            step: step,\r\n            props: formProps,\r\n        };\r\n        this.setState({\r\n            topView: this.topView,\r\n            stepViews: this.stepViews\r\n        });\r\n    }\r\n    componentWillMount() {\r\n        this.setStep(this.props.first);\r\n    }\r\n    private onPrev(values:any) {\r\n        _.assign(this.values, values);\r\n        this.topView = this.stepViews.pop();\r\n        this.setState({\r\n            topView: this.topView,\r\n            stepViews: this.stepViews\r\n        });\r\n    }\r\n    private onNext(values:any): Promise<SubmitResult|undefined> {\r\n        _.assign(this.values, values);\r\n        //let {num, step} = this.state;\r\n        let {next} = this.topView.step;\r\n        if (next === undefined) {\r\n            return this.props.onSubmit(this.values)\r\n        }\r\n        let nextStepName:string;\r\n        if (typeof next === 'string') {\r\n            nextStepName = next;\r\n        }\r\n        else {\r\n            nextStepName = next(this.values);\r\n        }\r\n        this.setStep(nextStepName);\r\n    }\r\n    render() {\r\n        let {className, header, footer} = this.props;\r\n        let {topView, stepViews} = this.state;\r\n        let {stepName, step} = topView;\r\n        let hidden = {visibility: 'hidden'};\r\n        let num = stepViews.length + 1;\r\n        return <div className={className}>\r\n            <div>\r\n                {header && header(step, num)}\r\n                <TonvaForm key={stepName} initValues={this.values} {...topView.props} />\r\n                {footer && footer(step, num)}\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst ButtonConten = (props:{prefix?:string, text?:string|JSX.Element, suffix?:string}) => {\r\n    let {prefix, text, suffix} = props;\r\n    let pIcon, sIcon;\r\n    if (prefix !== undefined) pIcon = <i className={className('fa', 'fa-' + prefix)} />;\r\n    if (suffix !== undefined) sIcon = <i className={className('fa', 'fa-' + suffix)} />;\r\n    return <React.Fragment>{pIcon} {props.text} {sIcon}</React.Fragment>;\r\n}\r\n    \r\n","import _ from 'lodash';\r\nimport { Context } from '../context';\r\nimport { FormRes } from '../formRes';\r\n\r\nexport abstract class Rule {\r\n    abstract check(defy:string[], value:any):void;\r\n}\r\n\r\nexport type ContextRule = (context:Context)=>{[target:string]:string[]|string} | string[] | string;\r\nexport type FieldRule = (value:any) => string[] | string;\r\n\r\nexport class RuleCustom extends Rule {\r\n    private func: FieldRule;\r\n    constructor(func: FieldRule) {\r\n        super();\r\n        this.func = func;\r\n    }\r\n    check(defy:string[], value:any) {\r\n        let ret = this.func(value);\r\n        if (ret === undefined) return;\r\n        switch (typeof ret) {\r\n            case 'undefined': return;\r\n            case 'string': defy.push(ret as string); return;\r\n            default: defy.push(...ret); return;\r\n        }        \r\n    }\r\n}\r\n\r\nexport abstract class RulePredefined extends Rule {\r\n    protected res: FormRes;\r\n    constructor(res: FormRes) {\r\n        super();\r\n        this.res = res;\r\n    }\r\n}\r\n\r\nexport class RuleRequired extends RulePredefined {\r\n    check(defy:string[], value:any) {\r\n        switch (typeof value) {\r\n            default:\r\n            case 'boolean': return;\r\n            case 'object':\r\n                if (value !== null) return;\r\n                break;\r\n            case 'string':\r\n                if ((value as string).trim().length > 0) return;\r\n                break;\r\n            case 'number':\r\n                if ((value as number) !== NaN) return;\r\n                break;\r\n            case 'undefined':\r\n                break;\r\n        }\r\n        defy.push(this.res.required);\r\n    }\r\n}\r\n\r\nexport class RuleNum extends RulePredefined {\r\n    private minMsg: _.TemplateExecutor;\r\n    private maxMsg: _.TemplateExecutor;\r\n    protected min: number;\r\n    protected max: number\r\n    constructor(res: FormRes, min?: number, max?: number) {\r\n        super(res);\r\n        this.minMsg = _.template(res.min);\r\n        this.maxMsg = _.template(res.max);\r\n        this.min = min;\r\n        this.max = max;\r\n    }\r\n    check(defy:string[], value:any) {\r\n        if (value === undefined || value === null) return;\r\n        let n = Number(value);\r\n        if (n === NaN) {\r\n            defy.push(this.res.number);\r\n        }\r\n        else {\r\n            this.checkMore(defy, n);\r\n        }\r\n    }\r\n\r\n    protected checkMore(defy:string[], value: number) {\r\n        if (this.min !== undefined && Number(value) < this.min) {\r\n            defy.push(this.minMsg({min:this.min}));\r\n        }\r\n        if (this.max !== undefined && Number(value) > this.max) {\r\n            defy.push(this.maxMsg({max:this.max}));\r\n        }\r\n    }\r\n}\r\n\r\nexport class RuleInt extends RuleNum {\r\n    protected checkMore(defy:string[], n: number) {\r\n        super.checkMore(defy, n);\r\n        if (Number.isInteger(n) === false) {\r\n            defy.push(this.res.integer);\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { UiItem, ChangingHandler, ChangedHandler } from '../../schema';\r\nimport { FieldProps } from '../field';\r\nimport { Context } from '../context';\r\nimport { ItemSchema } from '../../schema';\r\nimport { Rule, RuleRequired, RuleCustom, FieldRule } from '../rules';\r\nimport { computed, observable, reaction } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport abstract class Widget {\r\n    protected name: string;\r\n    protected context: Context;\r\n    protected fieldProps:FieldProps;\r\n    protected children: React.ReactNode;\r\n    protected itemSchema: ItemSchema;\r\n    protected ui: UiItem;\r\n    protected defaultValue: any;\r\n    protected value: any;\r\n    protected rules: Rule[];\r\n    @observable protected errors: string[] = [];\r\n    @observable protected contextErrors: string[] = [];\r\n    @computed protected get hasError():boolean {return (this.errors.length + this.contextErrors.length)>0}\r\n    protected readOnly:boolean;\r\n    protected disabled:boolean;\r\n    @observable visible:boolean;\r\n\r\n    constructor(context:Context, itemSchema:ItemSchema, fieldProps:FieldProps, children: React.ReactNode) {\r\n        this.context = context;\r\n        let {name} = itemSchema;\r\n        this.name = name;\r\n        this.itemSchema = itemSchema;\r\n        this.fieldProps = fieldProps;\r\n        this.children = children;\r\n        this.ui = context.getUiItem(name);\r\n        if (this.ui === undefined) {\r\n            this.readOnly = false;\r\n            this.disabled = false;\r\n            this.visible = true;\r\n        }\r\n        else {\r\n            let {readOnly, disabled, visible} = this.ui;\r\n            this.readOnly = (readOnly === true);\r\n            this.disabled = (disabled === true);\r\n            this.visible = !(visible === false);            \r\n        }\r\n        this.value = this.defaultValue =  context.getValue(name); //defaultValue;\r\n        this.init();\r\n    }\r\n\r\n    protected init() {\r\n        this.rules = [];\r\n        if (this.itemSchema.required === true) {\r\n            this.rules.push(new RuleRequired(this.context.form.res));\r\n        }\r\n        this.buildRules();\r\n        if (this.ui === undefined) return;\r\n        let {rules} = this.ui;\r\n        if (rules === undefined) return;\r\n        if (Array.isArray(rules) === false) {\r\n            this.rules.push(new RuleCustom(rules as FieldRule));\r\n            return;\r\n        }\r\n        for (let rule of rules as FieldRule[]) {\r\n            this.rules.push(new RuleCustom(rule));\r\n        }\r\n    }\r\n\r\n    protected buildRules() {\r\n    }\r\n\r\n    checkRules() {\r\n        let defy:string[] = [];\r\n        for (let r of this.rules) r.check(defy, this.value);\r\n        if (defy.length === 0) {\r\n            this.context.removeErrorWidget(this);\r\n        }\r\n        else {\r\n            this.context.addErrorWidget(this);\r\n            this.errors.push(...defy);\r\n        }\r\n    }\r\n\r\n    @computed get isOk() {\r\n        return this.errors.length ===0;\r\n    }\r\n\r\n    setError(err:string | string[]) {\r\n        if (err === undefined) return;\r\n        if (typeof err === 'string') this.errors.push(err);\r\n        else this.errors.push(...err);\r\n    }\r\n\r\n    setContextError(err:string | string[]) {\r\n        if (err === undefined) return;\r\n        if (typeof err === 'string') this.contextErrors.push(err);\r\n        else this.contextErrors.push(...err);\r\n    }\r\n\r\n    clearError() {\r\n        this.errors.splice(0);\r\n    }\r\n\r\n    clearContextError() {\r\n        this.contextErrors.splice(0);\r\n    }\r\n\r\n    protected parse(value:any):any {return value}\r\n\r\n    protected setElementValue(value:any) {}\r\n    protected setDataValue(value:any) {\r\n        if (this.isChanging === true) return;\r\n        this.context.initData[this.name] = this.value = this.parse(value);\r\n    }\r\n\r\n    setValue(value:any) {\r\n        if (this.isChanging === true) return;\r\n        //this.setDataValue(value);\r\n        //this.setElementValue(value);\r\n        this.changeValue(value, false);\r\n    }\r\n\r\n    getValue() {\r\n        return this.context.getValue(this.name);\r\n    }\r\n\r\n    getReadOnly():boolean {return this.readOnly}\r\n    getDisabled():boolean {return this.disabled}\r\n    getVisible():boolean {return this.visible}\r\n    setReadOnly(value:boolean) {this.readOnly = value}\r\n    setDisabled(value:boolean) {this.disabled = value}\r\n    setVisible(value:boolean) {this.visible = value}\r\n\r\n    private isChanging: boolean;\r\n    protected onInputChange = (evt: React.ChangeEvent<any>) => {\r\n        this.changeValue(evt.target.value, true);\r\n    }\r\n\r\n    protected changeValue(newValue: any, fromElement: boolean) {\r\n        let prev = this.value;\r\n        let onChanging: ChangingHandler;\r\n        let onChanged: ChangedHandler;\r\n        if (this.ui !== undefined) {\r\n            onChanging = this.ui.onChanging;\r\n            onChanged = this.ui.onChanged;\r\n        }\r\n        let allowChange = true;\r\n        if (onChanging !== undefined) {\r\n            this.isChanging = true;\r\n            allowChange = onChanging(this.context, this.value, prev);\r\n            this.isChanging = false;\r\n        }\r\n        if (allowChange === true) {\r\n            this.setDataValue(newValue);\r\n            if (fromElement !== true) this.setElementValue(newValue);\r\n            if (onChanged !== undefined) {\r\n                this.isChanging = true;\r\n                onChanged(this.context, this.value, prev);\r\n                this.isChanging = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    protected get className():string {\r\n        let fieldClass:string;\r\n        if (this.context.inNode === false) fieldClass = 'form-control';\r\n        return classNames(fieldClass, this.context.form.FieldClass, this.ui && this.ui.className);\r\n    }\r\n\r\n    protected abstract render():JSX.Element;\r\n\r\n    container = observer(():JSX.Element => {\r\n        if (this.visible === false) return null;\r\n        let {form, inNode} = this.context;\r\n        if (inNode === true) return this.render();\r\n        let label:any = this.label;\r\n        if (this.itemSchema.required === true && form.props.requiredFlag !== false) {\r\n            if (label !== null) label = <>{label}&nbsp;<span className=\"text-danger\">*</span></>;\r\n        }\r\n        return form.FieldContainer(label, this.render());\r\n    })\r\n\r\n    protected get label():string {\r\n        let label:any;\r\n        if (this.ui === undefined) {\r\n            label = this.name;\r\n        }\r\n        else {\r\n            let uiLabel = this.ui.label;\r\n            if (uiLabel === null) label = null;\r\n            else label = uiLabel || this.name;\r\n        }\r\n        return label;\r\n    }\r\n\r\n    protected renderTemplet():JSX.Element | undefined {\r\n        if (this.children !== undefined) {\r\n            return <>{this.children}</>;\r\n        }\r\n        if (this.ui === undefined) return undefined;\r\n        let {Templet} = this.ui;\r\n        if (typeof Templet === 'function') return Templet(this.value);\r\n        return Templet;\r\n    }\r\n\r\n    protected renderErrors() {\r\n        let errorList:string[] = [...this.errors, ...this.contextErrors];\r\n        if (errorList.length === 0) return null;\r\n        let {inNode} = this.context;\r\n        let tag = inNode === true? 'span' : 'div';\r\n        return errorList.map(err => React.createElement(tag, \r\n            {\r\n                key: err, \r\n                className: 'text-danger d-inline-block my-2 ml-3'\r\n            },\r\n            <><i className=\"fa fa-exclamation-circle\" /> &nbsp;{err}</>\r\n        ));\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiTextItem, StringSchema } from '../../schema';\r\n\r\nexport class TextWidget extends Widget {\r\n    protected inputType = 'text';\r\n    protected ui: UiTextItem;\r\n    protected input: HTMLInputElement;\r\n\r\n    protected setElementValue(value:any) {\r\n        if (this.input === null) return;\r\n        this.input.value = value;\r\n    }\r\n    protected get placeholder() {return (this.ui && this.ui.placeholder) || this.name}\r\n    protected onKeyDown = async (evt:React.KeyboardEvent<HTMLInputElement>) => {\r\n        this.internalOnKeyDown(evt);\r\n        if (evt.keyCode !== 13) return;\r\n        let {onEnter} = this.context.form.props;\r\n        if (onEnter === undefined) return;\r\n\r\n        this.changeValue(evt.currentTarget.value, true);\r\n\r\n        //this.checkRules();\r\n        //this.context.checkContextRules();\r\n        this.input.blur();\r\n\r\n        let ret = await onEnter(this.name, this.context);\r\n        if (ret !== undefined) {\r\n            this.context.setError(this.name, ret);\r\n        }\r\n    }\r\n\r\n    protected internalOnKeyDown(evt:React.KeyboardEvent<HTMLInputElement>) {\r\n    }\r\n\r\n    protected onBlur(evt: React.FocusEvent<any>) {\r\n        this.onInputChange(evt);\r\n        this.checkRules();\r\n        this.context.checkContextRules();\r\n    }\r\n    protected onFocus(evt: React.FocusEvent<any>) {\r\n        this.clearError();\r\n        this.context.removeErrorWidget(this);\r\n        this.context.clearErrors();\r\n    }\r\n    protected onChange(evt: React.ChangeEvent<any>) {\r\n    }\r\n\r\n    setReadOnly(value:boolean) {\r\n        if (this.input === null) return;\r\n        this.input.readOnly = this.readOnly = value;\r\n    }\r\n    setDisabled(value:boolean) {\r\n        if (this.input === null) return;\r\n        this.input.disabled = this.disabled = value;\r\n    }\r\n\r\n    render() {\r\n        let renderTemplet = this.renderTemplet();\r\n        if (renderTemplet !== undefined) return renderTemplet;\r\n        let cn = {\r\n            //'form-control': true,\r\n        };\r\n        if (this.hasError === true) {\r\n            cn['is-invalid'] = true;\r\n        }\r\n        else {\r\n            cn['required-item'] = this.itemSchema.required === true;\r\n        }\r\n        return <><input ref={input=>this.input = input}\r\n            className={classNames(this.className, cn)}\r\n            type={this.inputType}\r\n            defaultValue={this.value}\r\n            onChange={(evt: React.ChangeEvent<any>) => this.onChange(evt)}\r\n            placeholder={this.placeholder}\r\n            readOnly={this.readOnly}\r\n            disabled={this.disabled}\r\n            onKeyDown = {this.onKeyDown}\r\n            onFocus = {(evt: React.FocusEvent<any>) => this.onFocus(evt)}\r\n            onBlur={(evt: React.FocusEvent<any>) => this.onBlur(evt)}\r\n            maxLength={(this.itemSchema as StringSchema).maxLength} />\r\n            {this.renderErrors()}\r\n        </>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { TextWidget } from './textWidget';\r\nimport { RuleNum, RuleInt } from '../rules';\r\nimport { NumBaseSchema } from '../../schema';\r\n\r\nexport class NumberWidget extends TextWidget {\r\n    protected inputType = 'number';\r\n    protected itemSchema: NumBaseSchema;\r\n\r\n    protected buildRules() {\r\n        super.buildRules();\r\n        let res = this.context.form.res;\r\n        let {min, max} = this.itemSchema;\r\n        this.rules.push(\r\n            this.itemSchema.type === 'integer'?\r\n                new RuleNum(res, min, max) :\r\n                new RuleInt(res, min, max)\r\n        );\r\n        /*\r\n        if (this.itemSchema.type === 'integer') {\r\n            this.rules.push(new RuleInt);\r\n        }\r\n        let {min, max} = this.itemSchema;\r\n        if (min !== undefined) this.rules.push(new RuleMin(min));\r\n        if (max !== undefined) this.rules.push(new RuleMax(max));\r\n        */\r\n    }\r\n\r\n    protected parse(value:any):any {\r\n        if (value === undefined || value === null) return;\r\n        return Number(value);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { NumberWidget } from './numberWidget';\r\n\r\nexport class UpdownWidget extends NumberWidget {\r\n    protected inputType = 'number';\r\n\r\n    protected isValidKey(key:number):boolean {\r\n        return key===46 || key===8 || key===37 || key===39\r\n            || key>=48 && key<=57\r\n            || key>=96 && key<=105\r\n            || key===109 || key===189;\r\n    }\r\n    \r\n    protected internalOnKeyDown(evt:React.KeyboardEvent<HTMLInputElement>) {\r\n        let key = evt.keyCode;\r\n        event.returnValue = this.isValidKey(key);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { TextWidget } from './textWidget';\r\n\r\nexport class DateWidget extends TextWidget {\r\n    protected inputType = 'date';\r\n}\r\n\r\nexport class DateTimeWidget extends TextWidget {\r\n    protected inputType = 'datetime';\r\n}\r\n\r\nexport class TimeWidget extends TextWidget {\r\n    protected inputType = 'time';\r\n}\r\n\r\nexport class MonthWidget extends TextWidget {\r\n    protected inputType = 'month';\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiCheckItem } from '../../schema';\r\n\r\nexport class CheckBoxWidget extends Widget {\r\n    protected input: HTMLInputElement;\r\n    protected ui: UiCheckItem;\r\n    protected trueValue: any;\r\n    protected falseValue: any;\r\n\r\n    protected init() {\r\n        super.init();\r\n        if (this.ui !== undefined) {\r\n            let {trueValue, falseValue} = this.ui;\r\n            if (trueValue === undefined) this.trueValue = true;\r\n            else this.trueValue = trueValue;\r\n            if (falseValue === undefined) this.falseValue = false;\r\n            else this.falseValue = falseValue;\r\n        }\r\n        else {\r\n            this.trueValue = true;\r\n            this.falseValue = false;\r\n        }\r\n    }\r\n    protected setElementValue(value:any) {\r\n        this.input.checked = value === this.trueValue;\r\n    }\r\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\r\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\r\n\r\n    protected onInputChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setDataValue(evt.target.checked === true? this.trueValue : this.falseValue);\r\n    }\r\n\r\n    protected onClick = () => {\r\n        this.context.clearErrors();\r\n    }\r\n\r\n    render() {\r\n        let cn = classNames(this.className, 'form-check-inline p-0');\r\n        let input = <input\r\n            ref={(input)=>this.input = input}\r\n            className={'align-self-center'}\r\n            type=\"checkbox\"\r\n            defaultChecked={this.defaultValue} \r\n            onChange={this.onInputChange}\r\n            onClick={this.onClick} />;\r\n        if (this.context.inNode === true) {\r\n            return <label className={cn}>\r\n                {input} {(this.ui&&this.ui.label) || this.name}\r\n            </label>\r\n        }\r\n        else {\r\n            return <div className={cn}>\r\n                <label className=\"w-100 h-100 mb-0 d-flex justify-content-center\">{input}</label>\r\n            </div>;\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\nimport { Widget } from './widget';\r\nimport { UiSelect } from '../../schema';\r\n\r\nexport class SelectWidget extends Widget {\r\n    protected select: HTMLSelectElement;\r\n    protected ui: UiSelect;\r\n    @observable protected readOnly: boolean;\r\n\r\n    protected setElementValue(value:any) {this.select.value = value}\r\n    protected onInputChange = (evt:React.ChangeEvent<HTMLSelectElement>) => {\r\n        this.setDataValue(evt.target.value);\r\n    }\r\n\r\n    setReadOnly(value:boolean) {this.select.disabled = this.readOnly = !value}\r\n    setDisabled(value:boolean) {this.select.disabled = this.disabled = value}\r\n\r\n    render() {\r\n        if (this.readOnly === true) {\r\n            let option = this.ui.list.find(v => v.value === this.value);\r\n            let title = (option === undefined)? '(???)' : option.title;\r\n            return <span className=\"form-control w-min-6c\">{title}</span>;\r\n        }\r\n        return <select\r\n            ref={(select)=>this.select = select}\r\n            className={classNames(this.className, 'form-control')}\r\n            defaultValue={this.defaultValue} \r\n            onChange={this.onInputChange}>\r\n            {this.ui.list.map((v,index) => {\r\n                let {title, value} = v;\r\n                let cn:string;\r\n                //if (value === undefined || value === null) cn = 'text-light small';\r\n                //else cn = 'text-danger';\r\n                return <option className={cn} key={index} value={value}>{title || value}</option>\r\n            })}\r\n        </select>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiIdItem, TempletType } from '../../schema';\r\nimport { observable } from 'mobx';\r\n\r\nexport class IdWidget extends Widget {\r\n    protected ui: UiIdItem;\r\n    @observable protected value:number;\r\n    setReadOnly(value:boolean) {this.readOnly = value}\r\n    setDisabled(value:boolean) {this.disabled = value}    \r\n\r\n    protected onClick = async () => {\r\n        let pickId = this.ui && this.ui.pickId;\r\n        if (pickId === undefined) {\r\n            alert('no pickId defined!');\r\n            return;\r\n        }\r\n        let id = await pickId(this.context, this.name, this.value);        \r\n        this.setDataValue(id);\r\n        this.clearError();\r\n        this.clearContextError();\r\n        this.checkRules();\r\n    }\r\n\r\n    render() {\r\n        let placeholder:string|JSX.Element, Templet: TempletType;\r\n        if (this.ui !== undefined) {\r\n            placeholder = this.ui.placeholder;\r\n            Templet = this.ui.Templet;\r\n        }\r\n        let cn = {\r\n            'form-control': true,\r\n            'required-item': this.itemSchema.required === true,\r\n            'cursor-pointer': true,\r\n            'is-invalid': this.hasError,\r\n        };\r\n        let content;\r\n        if (this.value === undefined || this.value === null) {\r\n            content = placeholder || 'placeholder';\r\n            cn['text-muted'] = true;\r\n        }\r\n        else if (Templet === undefined) {\r\n            content = <>{this.value}</>;\r\n        }\r\n        else if (typeof Templet === 'function') {\r\n            content = Templet(this.value);\r\n        }\r\n        else {\r\n            content = Templet;\r\n        }\r\n        return <>\r\n            <div className={classNames(cn)} onClick={this.onClick}>{content}</div>\r\n            {this.renderErrors()}\r\n        </>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { DataType } from '../../schema';\r\nimport { UiType } from '../../schema';\r\n\r\nexport const Unknown = (dataType:DataType, uiType:UiType, dataTypes:DataType[]) => {\r\n    return <span className=\"text-danger\">!!data type {dataType} only support {(dataTypes || []).join(', ')}, can't use ui {uiType}!!</span>;\r\n};\r\n","import * as React from 'react';\r\nimport { UiButton, TempletType } from '../../schema';\r\nimport { Unknown } from './unknown';\r\nimport { Widget } from './widget';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class ButtonWidget extends Widget {\r\n    protected ui: UiButton;\r\n\r\n    protected onClick = async () => {\r\n        this.clearError();\r\n        this.clearContextError();\r\n        let {name, type} = this.itemSchema;\r\n        if (type === 'submit') {\r\n            await this.context.submit(name);\r\n        }\r\n        /*\r\n        let {onButtonClick} = this.context.form.props;\r\n        if (onButtonClick === undefined) {\r\n            alert(`button ${name} clicked. you should define form onButtonClick`);\r\n            return;\r\n        }\r\n        let ret = await onButtonClick(name, this.context);\r\n        if (ret === undefined) return;\r\n        this.context.setError(name, ret);\r\n        */\r\n    }\r\n\r\n    private observerRender = observer(() => {\r\n        let {name, type} = this.itemSchema;\r\n        let Templet:TempletType, cn:string, caption:string;\r\n        if (this.ui !== undefined) {\r\n            let {widget:widgetType} = this.ui;\r\n            if (widgetType !== 'button') return Unknown(type, widgetType, ['button']);\r\n            Templet = this.ui.Templet;\r\n            cn = this.ui.className;\r\n            caption = this.ui.label;\r\n        }\r\n        let {form, hasError} = this.context;\r\n        let context = this.context;\r\n        let disabled = type==='submit' && hasError;\r\n        let content:any;\r\n        if (this.children !== undefined) content = this.children;\r\n        else if (typeof Templet === 'function') content = Templet();\r\n        else if (Templet !== undefined) content = Templet;\r\n        else content = caption; \r\n        let button = <button \r\n            className={cn} \r\n            type=\"button\"\r\n            disabled={disabled}\r\n            onClick={this.onClick}>\r\n            {content || name}\r\n        </button>;\r\n        if (context.inNode === true) return <>{button}{this.renderErrors()}</>;\r\n        return <div className={form.ButtonClass}>\r\n            <div>{this.renderErrors()}</div>\r\n            {button}\r\n        </div>;\r\n    });\r\n    \r\n    protected get label():string {return null}\r\n\r\n    render() {\r\n        return <this.observerRender />\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Form } from './form';\r\nimport { UiSchema, UiArr, UiItem } from '../schema';\r\nimport { ArrSchema, ItemSchema } from '../schema';\r\nimport { Widget as Widget } from './widgets/widget';\r\n//import { ArrRow } from './arrRow';\r\nimport { observable, computed } from 'mobx';\r\nimport { ContextRule } from './rules';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport abstract class Context {\r\n    private subContexts:{[name:string]:{[rowKey:string]:Context}};\r\n    readonly form: Form;\r\n    readonly uiSchema: UiSchema;\r\n    readonly initData: any;\r\n    readonly inNode: boolean;           // true: 在</> 流中定义Field\r\n    readonly widgets: {[name:string]: Widget} = {};\r\n    readonly rules: ContextRule[];\r\n    readonly isRow: boolean;\r\n    @observable errors: string[] = [];\r\n    @observable errorWidgets:Widget[] = [];\r\n\r\n    constructor(form: Form, uiSchema: UiSchema, data: any, inNode: boolean, isRow: boolean) {\r\n        this.form = form;\r\n        this.uiSchema = uiSchema;\r\n        this.initData = data;\r\n        this.inNode = inNode;\r\n        this.isRow = isRow;\r\n        if (uiSchema !== undefined) {\r\n            let {rules} = uiSchema;\r\n            if (rules !== undefined) {\r\n                this.rules = [];\r\n                if (Array.isArray(rules) === false)\r\n                    this.rules.push(rules as ContextRule);\r\n                else\r\n                    this.rules.push(...rules as ContextRule[]);\r\n            }\r\n        }\r\n    }\r\n\r\n    getArrRowContexts(arrName: string) {\r\n        if (this.subContexts === undefined) this.subContexts = {};\r\n        let arrRowContexts = this.subContexts[name];\r\n        if (arrRowContexts === undefined) this.subContexts[name] = arrRowContexts = {};\r\n        return arrRowContexts;\r\n    }\r\n\r\n    abstract get data():any;\r\n    abstract getItemSchema(itemName:string):ItemSchema;\r\n    abstract getUiItem(itemName:string):UiItem;\r\n    get arrName():string {return undefined}\r\n    getValue(itemName:string):any {return this.initData[itemName]}\r\n    setValue(itemName:string, value:any) {\r\n        this.initData[itemName] = value;\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setValue(value);\r\n    }\r\n    getDisabled(itemName:string):boolean {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) return widget.getDisabled();\r\n        return undefined;\r\n    }\r\n    setDisabled(itemName:string, value:boolean) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setDisabled(value);\r\n    }\r\n    getReadOnly(itemName:string):boolean {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.getReadOnly();\r\n        return undefined;\r\n    }\r\n    setReadOnly(itemName:string, value:boolean) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setReadOnly(value);\r\n    }\r\n    getVisible(itemName:string):boolean {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.getVisible();\r\n        return undefined;\r\n    }\r\n    setVisible(itemName:string, value:boolean) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setVisible(value);\r\n    }\r\n\r\n    async submit(buttonName: string) {\r\n        this.checkRules()\r\n        if (this.hasError === true) return;\r\n        let {onButtonClick} = this.form.props;\r\n        if (onButtonClick === undefined) {\r\n            alert(`button ${buttonName} clicked. you should define form onButtonClick`);\r\n            return;\r\n        }\r\n        let ret = await onButtonClick(buttonName, this);\r\n        if (ret === undefined) return;\r\n        this.setError(buttonName, ret);\r\n\r\n    }\r\n\r\n    checkFieldRules() {\r\n        for (let i in this.widgets) {\r\n            this.widgets[i].checkRules();\r\n        }\r\n        if (this.subContexts === undefined) return;\r\n        for (let i in this.subContexts) {\r\n            let arrRowContexts = this.subContexts[i];\r\n            for (let j in arrRowContexts) {\r\n                arrRowContexts[j].checkFieldRules();\r\n            }\r\n        }\r\n    }\r\n\r\n    checkContextRules() {\r\n        this.clearErrors();\r\n        if (this.rules === undefined) return;\r\n        for (let rule of this.rules) {\r\n            let ret = rule(this);\r\n            if (ret === undefined) continue;\r\n            if (Array.isArray(ret) === true) {\r\n                this.errors.push(...ret as string[]);\r\n            }\r\n            else if (typeof ret === 'string') {\r\n                this.errors.push(ret as string);\r\n            }\r\n            else {\r\n                for (let i in ret as object) this.setError(i, ret[i]);\r\n            }\r\n        }\r\n        if (this.subContexts === undefined) return;\r\n        for (let i in this.subContexts) {\r\n            let arrRowContexts = this.subContexts[i];\r\n            for (let j in arrRowContexts) {\r\n                let rowContext = arrRowContexts[j];\r\n                rowContext.clearErrors();\r\n                rowContext.checkContextRules();\r\n            }\r\n        }\r\n    }\r\n\r\n    setError(itemName:string, error:string) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget === undefined) return;\r\n        widget.setContextError(error);\r\n        this.addErrorWidget(widget);\r\n    }\r\n\r\n    clearContextErrors() {\r\n        for (let i in this.widgets) {\r\n            let widget = this.widgets[i];\r\n            if (widget === undefined) continue;\r\n            widget.clearContextError();\r\n        }\r\n    }\r\n\r\n    clearWidgetsErrors() {\r\n        for (let i in this.widgets) {\r\n            let widget = this.widgets[i];\r\n            if (widget === undefined) continue;\r\n            widget.clearError();\r\n        }\r\n    }\r\n\r\n    checkRules() {\r\n        this.clearErrors();\r\n        this.clearWidgetsErrors();\r\n        this.checkFieldRules();\r\n        if (this.hasError === true) return;\r\n        this.checkContextRules();\r\n    }\r\n\r\n    addErrorWidget(widget:Widget) {\r\n        let pos = this.errorWidgets.findIndex(v => v === widget);\r\n        if (pos < 0) this.errorWidgets.push(widget);\r\n    }\r\n    removeErrorWidget(widget:Widget) {\r\n        let pos = this.errorWidgets.findIndex(v => v === widget);\r\n        if (pos >= 0) this.errorWidgets.splice(pos, 1);\r\n    }\r\n\r\n    protected checkHasError():boolean {\r\n        let ret = (this.errorWidgets.length + this.errors.length) > 0;\r\n        if (ret === true) return true;\r\n        if (this.subContexts === undefined) return false;\r\n        for (let i in this.subContexts) {\r\n            let arrRowContexts = this.subContexts[i];\r\n            for (let j in arrRowContexts) {\r\n                if (arrRowContexts[j].hasError === true) return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    @computed get hasError():boolean {\r\n        return this.checkHasError();\r\n    };\r\n\r\n    clearErrors() {\r\n        this.errors.splice(0);\r\n        this.errorWidgets.splice(0);\r\n        this.clearContextErrors();\r\n    }\r\n\r\n    renderErrors = observer((): JSX.Element => {\r\n        let {errors} = this;\r\n        if (errors.length === 0) return null;\r\n        return <>\r\n            {errors.map(err => <span key={err} className=\"text-danger inline-block my-1 ml-3\">\r\n                <i className=\"fa fa-exclamation-circle\" /> &nbsp;{err}\r\n            </span>)}\r\n        </>\r\n    });\r\n}\r\n\r\nlet rowKeySeed:number = 1;\r\nexport class RowContext extends Context {\r\n    readonly parentContext: Context;\r\n    readonly arrSchema: ArrSchema;\r\n    readonly uiSchema: UiArr;\r\n    //readonly row: ArrRow;\r\n    readonly rowKey: number;\r\n    readonly data: any;\r\n    constructor(parentContext:Context, arrSchema: ArrSchema, data: any, inNode: boolean) {\r\n        let uiArr:UiArr;\r\n        let {uiSchema} = parentContext;\r\n        if (uiSchema !== undefined) {\r\n            let {items} = uiSchema;\r\n            if (items !== undefined) uiArr = items[arrSchema.name] as UiArr;\r\n        }\r\n        super(parentContext.form, uiArr, data, inNode, true);\r\n        this.parentContext = parentContext;\r\n        this.arrSchema = arrSchema;\r\n        this.rowKey = rowKeySeed++;\r\n        this.data = data;\r\n    }\r\n    getItemSchema(itemName:string):ItemSchema {return this.arrSchema.itemSchemas[itemName]}\r\n    getUiItem(itemName:string):UiItem {\r\n        if (this.uiSchema === undefined) return undefined;\r\n        let {items} = this.uiSchema;\r\n        if (items === undefined) return undefined;\r\n        return items[itemName]\r\n    }\r\n    get arrName():string {return this.arrSchema.name}\r\n    clearErrors() {\r\n        super.clearErrors();\r\n        this.parentContext.clearErrors();\r\n    }\r\n\r\n    get parentData():any {return this.parentContext.data;}\r\n}\r\n\r\nexport class FormContext extends Context {\r\n    constructor(form:Form, inNode:boolean) {\r\n        super(form, form.uiSchema, form.data, inNode, false);\r\n    }\r\n    get data():any {return this.form.data}\r\n    getItemSchema(itemName:string):ItemSchema {return this.form.itemSchemas[itemName]}\r\n    getUiItem(itemName:string):UiItem {\r\n        let {uiSchema} = this.form;\r\n        if (uiSchema === undefined) return undefined;\r\n        let {items} = uiSchema;\r\n        if (items === undefined) return undefined;\r\n        return items[itemName];\r\n    }\r\n}\r\n\r\nexport const ContextContainer = React.createContext<Context>({} as any);\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\n//import { ArrRow } from '../arrRow';\r\nimport { Context, RowContext, ContextContainer } from '../context';\r\nimport { ArrSchema } from '../../schema';\r\nimport { UiArr, TempletType } from '../../schema';\r\nimport { Unknown } from './unknown';\r\nimport { factory } from './factory';\r\n\r\nexport const ArrComponent = observer((\r\n    {parentContext, arrSchema, children}:{parentContext: Context, arrSchema: ArrSchema, children: React.ReactNode}) => \r\n{\r\n    let {name, arr} = arrSchema;\r\n    let data = parentContext.initData[name] as any[];\r\n    let {form} = parentContext;\r\n    let arrRowContexts = parentContext.getArrRowContexts(name);\r\n    let ui = parentContext.getUiItem(name) as UiArr;\r\n    let arrLabel = name;\r\n    let Templet:TempletType;\r\n    let selectable:boolean, deletable:boolean, restorable:boolean;\r\n    let {ArrContainer, RowContainer, RowSeperator, uiSchema} = form;\r\n    if (uiSchema !== undefined) {\r\n        let {selectable:formSelectable, deletable:formDeletable, restorable:formRestorable} = uiSchema;\r\n        if (selectable !== true) selectable = formSelectable;\r\n        if (deletable !== true) deletable = formDeletable;\r\n        if (restorable !== true) restorable = formRestorable;\r\n    }\r\n    if (ui !== undefined) {\r\n        let {widget:widgetType, label, \r\n            selectable:arrSelectable, deletable:arrDeletable, restorable:arrRestorable,\r\n            ArrContainer:ac, RowContainer:rc, RowSeperator:rs\r\n        } = ui;\r\n        if (arrSelectable !== undefined) selectable = arrSelectable;\r\n        if (arrDeletable !== undefined) deletable = arrDeletable;\r\n        if (arrRestorable !== undefined) restorable = arrRestorable;\r\n        if (ac !== undefined) ArrContainer = ac;\r\n        if (rc !== undefined) RowContainer = rc;\r\n        if (rs !== undefined) RowSeperator = rs;\r\n        Templet = ui.Templet;\r\n        if (widgetType !== 'arr') return Unknown(arrSchema.type, widgetType, ['arr']);\r\n        arrLabel = label || arrLabel;\r\n    }\r\n    let first = true;\r\n    return ArrContainer(arrLabel, <>\r\n        {data.map((row:any, index) => {\r\n            let rowContext: RowContext;\r\n            let rowContent: JSX.Element;\r\n            let sep = undefined;\r\n            if (first === false) sep = RowSeperator;\r\n            else first = false;\r\n            if (children !== undefined) {\r\n                rowContext = new RowContext(parentContext, arrSchema, row, true);\r\n                rowContent = <>{children}</>;\r\n            }\r\n            else {\r\n                let typeofTemplet = typeof Templet;\r\n                if (typeofTemplet === 'function') {\r\n                    rowContext = new RowContext(parentContext, arrSchema, row, true);\r\n                    rowContent = React.createElement(observer(Templet as React.StatelessComponent), row);\r\n                }\r\n                else if (typeofTemplet === 'object') {\r\n                    rowContext = new RowContext(parentContext, arrSchema, row, true);\r\n                    rowContent = Templet as JSX.Element;\r\n                }\r\n                else {\r\n                    rowContext = new RowContext(parentContext, arrSchema, row, false);\r\n                    rowContent = <>{\r\n                        arr.map((v, index) => {\r\n                            return <React.Fragment key={v.name}>\r\n                                {factory(rowContext, v, undefined)}\r\n                            </React.Fragment>\r\n                        })}\r\n                    </>;\r\n                }\r\n            }\r\n            let {rowKey} = rowContext;\r\n            arrRowContexts[rowKey] = rowContext;\r\n\r\n            let selectCheck:JSX.Element, deleteIcon:JSX.Element;\r\n            if (selectable === true) {\r\n                let onClick = (evt: React.MouseEvent<HTMLInputElement>)=>{\r\n                    let {checked} = (evt.target as HTMLInputElement);\r\n                    row.$isSelected = checked;\r\n                    let {$source} = row;\r\n                    if ($source !== undefined) $source.$isSelected = checked;\r\n                    rowContext.clearErrors();\r\n                }\r\n                selectCheck = <div className=\"form-row-checkbox\">\r\n                    <input type=\"checkbox\" onClick={onClick} defaultChecked={row.$isSelected} />\r\n                </div>;\r\n            }\r\n            let isDeleted = !(row.$isDeleted===undefined || row.$isDeleted===false);\r\n            if (deletable === true) {\r\n                let icon = isDeleted? 'fa-undo' : 'fa-trash';\r\n                let onDelClick = () => {\r\n                    if (restorable === true) {\r\n                        row.$isDeleted = !isDeleted;\r\n                        let {$source} = row;\r\n                        if ($source !== undefined) $source.$isDeleted = !isDeleted;\r\n                    }\r\n                    else {\r\n                        let p = data.indexOf(row);\r\n                        if (p>=0) data.splice(p, 1);\r\n                    }\r\n                    rowContext.clearErrors();\r\n                }\r\n                deleteIcon = <div className=\"form-row-edit text-info\" onClick={onDelClick}>\r\n                    <i className={classNames('fa', icon, 'fa-fw')} />\r\n                </div>;\r\n            }\r\n            let editContainer = selectable===true || deletable===true?\r\n                (content:any) => <fieldset disabled={isDeleted}><div className={classNames('d-flex', {'deleted':isDeleted, 'row-selected':row.$isSelected})}>\r\n                    {selectCheck}\r\n                    <div className={selectable===true && deletable===true? \"form-row-content\":\"form-row-content-1\"}>{content}</div>\r\n                    {deleteIcon}\r\n                </div></fieldset>\r\n                :\r\n                (content:any) => content;\r\n\r\n            return <ContextContainer.Provider key={rowKey} value={rowContext}>\r\n                {sep}\r\n                {RowContainer(editContainer(<><rowContext.renderErrors />{rowContent}</>))}\r\n            </ContextContainer.Provider>;\r\n        })}\r\n    </>);\r\n});\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiImageItem } from '../../schema';\r\nimport { Image } from '../../image';\r\nimport { ImageItemEdit } from '../../edit/imageItemEdit';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\n\r\nexport class ImageWidget extends Widget {\r\n    protected input: HTMLInputElement;\r\n    protected ui: UiImageItem;\r\n    @observable private imageSrc: string;\r\n\r\n    protected init() {\r\n        super.init();\r\n        this.imageSrc = this.value;\r\n    }\r\n\r\n    protected onClick = async () => {\r\n        let edit = new ImageItemEdit(this.itemSchema, this.ui, this.ui.label, this.value);\r\n        let ret = await edit.start();\r\n        if (ret !== null) {\r\n            this.setValue(ret);\r\n            this.imageSrc = ret;\r\n        }\r\n        await edit.end();\r\n    }\r\n\r\n    render() {\r\n        return <this.observerRender />;\r\n    }\r\n\r\n    private observerRender = observer(() => {\r\n        let cn = [\r\n            'bg-white p-1 d-flex justify-content-center',\r\n        ];\r\n        let onClick: any;\r\n        if (!this.readOnly && !this.disabled) {\r\n            cn.push('cursor-pointer');\r\n            onClick = this.onClick;\r\n        }\r\n        return <div className={classNames(cn)} onClick={onClick}>\r\n            <Image src={this.imageSrc} className=\"w-4c h-4c\"/>\r\n        </div>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport { Schema, ArrSchema, DataType, ButtonSchema, ItemSchema } from '../../schema';\r\nimport { UiItem, UiArr, UiType, UiButton, TempletType, TypeWidget, UiCustom } from '../../schema';\r\nimport { TextWidget } from './textWidget';\r\nimport { TextAreaWidget } from './textareaWidget';\r\nimport { PasswordWidget, UrlWidget, EmailWidget } from './passwordWidget';\r\nimport { UpdownWidget } from './updownWidget';\r\nimport { NumberWidget } from './numberWidget';\r\nimport { DateWidget, DateTimeWidget, TimeWidget, MonthWidget } from './dateWidget';\r\nimport { CheckBoxWidget } from './checkBoxWidget';\r\nimport { FieldProps } from '../field';\r\nimport { Context, RowContext, FormContext, ContextContainer } from '../context';\r\nimport { SelectWidget } from './selectWidget';\r\nimport { RadioWidget } from './radioWidget';\r\nimport { RangeWidget } from './rangeWidget';\r\nimport { IdWidget } from './idWidget';\r\nimport { ButtonWidget } from './buttonWidget';\r\nimport { ArrComponent } from './arrComponent';\r\nimport { ImageWidget } from './imageWidget';\r\n\r\nconst widgetsFactory: {[type: string]: {widget?: TypeWidget, dataTypes?: DataType[]}} = {\r\n    id: {\r\n        dataTypes: ['id'],\r\n        widget: IdWidget,\r\n    },\r\n    text: {\r\n        dataTypes: ['integer', 'number', 'string'],\r\n        widget: TextWidget\r\n    },\r\n    textarea: {\r\n        dataTypes: ['string'],\r\n        widget: TextAreaWidget\r\n    },\r\n    password: {\r\n        dataTypes: ['string'],\r\n        widget: PasswordWidget\r\n    },\r\n    date: {\r\n        dataTypes: ['date'],\r\n        widget: DateWidget\r\n    },\r\n    datetime: {\r\n        dataTypes: ['date'],\r\n        widget: DateTimeWidget\r\n    },\r\n    time: {\r\n        dataTypes: ['date'],\r\n        widget: TimeWidget\r\n    },\r\n    month: {\r\n        dataTypes: ['date'],\r\n        widget: MonthWidget\r\n    },\r\n    select: {\r\n        dataTypes: ['integer', 'number', 'string', 'date', 'boolean'],\r\n        widget: SelectWidget\r\n    },\r\n    url: {\r\n        dataTypes: ['string'],\r\n        widget: UrlWidget\r\n    },\r\n    email: {\r\n        dataTypes: ['string'],\r\n        widget: EmailWidget\r\n    },\r\n    number: {\r\n        dataTypes: ['integer', 'number'],\r\n        widget: NumberWidget\r\n    },\r\n    updown: {\r\n        dataTypes: ['integer', 'number'],\r\n        widget: UpdownWidget\r\n    },\r\n    color: {\r\n\r\n    },\r\n    checkbox: {\r\n        dataTypes: ['boolean', 'integer', 'number'],\r\n        widget: CheckBoxWidget\r\n    },\r\n    image: {\r\n        dataTypes: ['string'],\r\n        widget: ImageWidget,\r\n    },\r\n    checkboxes: {\r\n\r\n    },\r\n    radio: {\r\n        dataTypes: ['integer', 'number', 'string', 'date', 'boolean'],\r\n        widget: RadioWidget\r\n    },\r\n    range: {\r\n        dataTypes: ['integer'],\r\n        widget: RangeWidget,\r\n    },\r\n    button: {\r\n        dataTypes: ['button', 'submit'],\r\n        widget: ButtonWidget,\r\n    }\r\n}\r\n\r\nexport function factory(context: Context, itemSchema: ItemSchema, children:React.ReactNode, fieldProps?: FieldProps):JSX.Element {\r\n    if (context === undefined) {\r\n        debugger;\r\n        return null;\r\n    }\r\n    if (itemSchema === undefined) return undefined;\r\n    let {name, type} = itemSchema;\r\n    switch (type) {\r\n    case 'arr':\r\n        let arrSchema = context.getItemSchema(name) as ArrSchema;\r\n        return <ArrComponent parentContext={context} arrSchema={arrSchema} children={children} />;\r\n    default:\r\n        break;\r\n    }\r\n\r\n    let typeWidget: TypeWidget;\r\n    let ui = context.getUiItem(name);\r\n    function getTypeWidget(t:DataType): TypeWidget {\r\n        switch(t) {\r\n        default: return TextWidget; \r\n        case 'id': return IdWidget;\r\n        case 'integer': return UpdownWidget;\r\n        case 'number': return NumberWidget; \r\n        case 'string': return TextWidget; \r\n        case 'date': return DateWidget; \r\n        case 'boolean': return CheckBoxWidget; \r\n        case 'button':\r\n        case 'submit': return ButtonWidget;\r\n        }\r\n    }\r\n    if (ui === undefined) { \r\n        typeWidget = getTypeWidget(type);\r\n    }\r\n    else {\r\n        let {widget:widgetType} = ui;\r\n        switch (widgetType) {\r\n        default:\r\n            if (widgetType !== undefined) {\r\n                let widgetFactory = widgetsFactory[widgetType];\r\n                typeWidget = widgetFactory.widget;\r\n            }\r\n            if (typeWidget === undefined) typeWidget = getTypeWidget(type);\r\n            break;\r\n        case 'custom':\r\n            typeWidget = (ui as UiCustom).WidgetClass;\r\n            break;\r\n        case 'group':\r\n            return <span>impletment group</span>;\r\n        }\r\n        //label = uiLabel || name;\r\n    }\r\n    \r\n    let {isRow, widgets} = context;\r\n    let widget = new typeWidget(context, itemSchema, fieldProps, children);\r\n    widgets[name] = widget;\r\n\r\n    return <widget.container />;\r\n    /*\r\n    if (isRow === false) {\r\n        let WidgetElement = observer(() => widget.container());\r\n        return <WidgetElement />;\r\n    }\r\n    else {\r\n        let widgetElement = widget.container();\r\n        return widgetElement;\r\n    }\r\n    */\r\n}\r\n\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiTextAreaItem } from '../../schema';\r\nimport { StringSchema } from '../../schema';\r\n\r\nexport class TextAreaWidget extends Widget {\r\n    protected itemSchema: StringSchema;\r\n    protected input: HTMLTextAreaElement;\r\n    protected ui: UiTextAreaItem;\r\n\r\n    protected setElementValue(value:any) {this.input.value = value}\r\n    protected onInputChange = (evt: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        this.setValue(evt.currentTarget.value);\r\n    }\r\n\r\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\r\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\r\n\r\n    render() {\r\n        let renderTemplet = this.renderTemplet();\r\n        if (renderTemplet !== undefined) return renderTemplet;\r\n        let cn = {};\r\n        if (this.hasError === true) {\r\n            cn['is-invalid'] = true;\r\n        }\r\n        else {\r\n            cn['required-item'] = this.itemSchema.required === true;\r\n        }\r\n        return <textarea ref={(input) => this.input=input} \r\n            className={classNames(this.className, cn)}\r\n            rows={this.ui && this.ui.rows}\r\n            maxLength={this.itemSchema.maxLength}\r\n            defaultValue={this.defaultValue} onChange={this.onInputChange} />\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { TextWidget } from './textWidget';\r\n\r\nexport class PasswordWidget extends TextWidget {\r\n    protected inputType = 'password';\r\n}\r\n\r\nexport class UrlWidget extends TextWidget {\r\n    protected inputType = 'url';\r\n}\r\n\r\nexport class EmailWidget extends TextWidget {\r\n    protected inputType = 'email';\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { TextWidget } from './textWidget';\r\nimport { Widget } from './widget';\r\nimport { UiRadio } from '../../schema';\r\nimport { RowContext } from '../context';\r\n\r\n\r\n//const radioStyle:React.CSSProperties = {width:'2em', height:'1.2em'};\r\nexport class RadioWidget extends Widget {\r\n    protected inputs: {[index:number]: HTMLInputElement} = {};\r\n    protected ui: UiRadio;\r\n\r\n    protected setElementValue(value:any) {\r\n        for (let i in this.inputs) {\r\n            let input = this.inputs[i];\r\n            input.checked = value === input.value;\r\n        }\r\n    }\r\n    setReadOnly(value:boolean) {\r\n        this.readOnly = value;\r\n        for (let i in this.inputs) this.inputs[i].readOnly = value;\r\n    }\r\n    setDisabled(value:boolean) {\r\n        this.disabled = value;\r\n        for (let i in this.inputs) this.inputs[i].disabled = value\r\n    }\r\n\r\n    render() {\r\n        let {defaultValue, list} = this.ui;\r\n        let {isRow, inNode} = this.context;\r\n        let rowKey:number;\r\n        if (isRow === true) {\r\n            rowKey = (this.context as RowContext).rowKey;\r\n        }\r\n        let cn = classNames(this.className, 'form-radio-inline');\r\n        return <span className={cn}>\r\n                {list.map((v,index) => {\r\n                    let {value, title} = v;\r\n                    let name = this.name;\r\n                    if (rowKey !== undefined) name += '-' + rowKey;\r\n                    return <label key={index} className=\"form-radio-inline\">\r\n                        <input ref={input=>this.inputs[index]=input} type=\"radio\" name={name}\r\n                            value={value} defaultChecked={(this.defaultValue || defaultValue)===value} />\r\n                        {title || value}\r\n                    </label>;\r\n                    //</span>\r\n                })}\r\n            </span>;\r\n    }\r\n}\r\n/*\r\n<div className=\"form-control d-flex border-0\"><input\r\nref={(input)=>this.input = input}\r\nclassName={classNames(this.className, 'align-self-center')}\r\ntype=\"checkbox\"\r\nstyle={{maxHeight:\"1.2em\"}}\r\ndefaultValue={this.defaultValue} \r\nonChange={this.onChange} />\r\n</div>\r\n*/","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { UiRange } from '../../schema';\r\nimport { Widget } from './widget';\r\n\r\nexport class RangeWidget extends Widget {\r\n    protected inputType = 'range';\r\n    protected input: HTMLInputElement;\r\n    protected ui: UiRange;\r\n\r\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\r\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\r\n\r\n    render() {\r\n        let {min, max, step} = this.ui;\r\n        return <><input ref={input=>this.input = input}\r\n            className={classNames(this.className, 'form-control', 'w-min-6c')}\r\n            type={this.inputType}\r\n            defaultValue={this.defaultValue} \r\n            onChange={this.onInputChange}\r\n            max={max}\r\n            min={min}\r\n            step={step}\r\n            />\r\n        </>;\r\n    }\r\n}\r\n","import _ from 'lodash';\r\nimport { KeyValueRes, Res } from '../res';\r\n\r\nexport interface FormRes extends KeyValueRes {\r\n    required: string;\r\n    number: string;\r\n    integer: string;\r\n    min: string;\r\n    max: string;\r\n}\r\n\r\nexport const formRes:Res<FormRes> = {\r\n    _: {\r\n        required: 'required',\r\n        number: 'not valid number',\r\n        integer: 'not valid integer',\r\n        min: 'min value is ${min}',\r\n        max: 'max value is ${max}',\r\n    },\r\n    zh: {\r\n        _: {\r\n            required: '必须填',\r\n            number: '需要数字',\r\n            integer: '需要整数',\r\n            min: '不能小于${min}',\r\n            max: '不能大于${max}',\r\n        }\r\n    },\r\n}\r\n","import * as React from 'react';\r\nimport {observable, IReactionDisposer, autorun, isObservable} from 'mobx';\r\nimport classNames from 'classnames';\r\nimport { Schema, ItemSchema, ArrSchema } from '../schema';\r\nimport { UiSchema, TempletType } from '../schema';\r\nimport { factory } from './widgets';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport { ContextContainer, FormContext, Context, RowContext } from './context';\r\nimport { FormRes, formRes } from './formRes';\r\nimport { resLang } from '../res';\r\n\r\nexport type FormButtonClick = (name:string, context: Context) => Promise<any>;\r\nexport type InputEnter = (name:string, context: Context) => Promise<any>;\r\n\r\nexport interface FormProps {\r\n    className?: string;\r\n    schema: Schema;\r\n    uiSchema?: UiSchema;\r\n    formData?: any;\r\n    onButtonClick?: FormButtonClick;\r\n    onEnter?: InputEnter;\r\n    fieldLabelSize?: number;            // col-sm-2 for label\r\n    requiredFlag?: boolean;             // default=true\r\n    beforeShow?: (formContext:FormContext) => void;\r\n    res?: FormRes;\r\n\r\n    Container?: (content:JSX.Element) => JSX.Element;\r\n    FieldContainer?: (label:string|JSX.Element, content:JSX.Element) => JSX.Element;\r\n    FieldClass?: string;\r\n    ButtonClass?: string;\r\n}\r\n\r\nexport class Form extends React.Component<FormProps> {\r\n    readonly schema: Schema;\r\n    readonly itemSchemas: {[name:string]: ItemSchema};\r\n    readonly uiSchema: UiSchema;\r\n    readonly res?: FormRes;\r\n    protected formContext: FormContext;\r\n    //private content: any;\r\n    //private formData: any;\r\n    private disposer: IReactionDisposer;\r\n    //@observable \r\n    readonly data:any;\r\n\r\n    readonly Container: (content:JSX.Element) => JSX.Element;\r\n    readonly FieldContainer: (label:any, content:JSX.Element) => JSX.Element;\r\n    readonly FieldClass: string;\r\n    readonly ButtonClass: string;\r\n    //readonly ArrContainer: (label:any, content:JSX.Element) => JSX.Element;\r\n    //readonly RowContainer: (content:JSX.Element) => JSX.Element;\r\n    //readonly RowSeperator: JSX.Element;\r\n\r\n    constructor(props:FormProps) {\r\n        super(props);\r\n        let {schema, uiSchema, formData, \r\n            Container, FieldContainer, FieldClass, \r\n            ButtonClass, res,\r\n        } = props;\r\n        this.Container = Container || this.DefaultContainer;\r\n        this.FieldContainer = FieldContainer || this.DefaultFieldContainer;\r\n        this.FieldClass = FieldClass!==undefined && FieldClass!==''&&FieldClass!==null? FieldClass : this.DefaultFieldClass;\r\n        this.res = res || this.DefaultRes;\r\n        this.ButtonClass = ButtonClass || this.DefaultButtonClass;\r\n\r\n        this.schema = schema;\r\n        this.itemSchemas = {};\r\n        for (let itemSchema of this.schema) {\r\n            this.itemSchemas[itemSchema.name] = itemSchema;\r\n        }\r\n        this.uiSchema = uiSchema;\r\n\r\n        //this.formData = formData;\r\n        this.disposer = autorun(this.watch);\r\n        this.data = {};\r\n        // this.initRender();\r\n    }\r\n\r\n    private renderContent():any {\r\n        this.initData(this.props.formData);\r\n        let {children} = this.props;\r\n        if (children !== undefined) {\r\n            this.formContext = new FormContext(this, true);\r\n            return <>{children}</>;\r\n        }\r\n\r\n        let Templet: TempletType;\r\n        if (this.uiSchema !== undefined) {\r\n            Templet = this.uiSchema.Templet;\r\n        }\r\n        if (Templet !== undefined) {\r\n            this.formContext = new FormContext(this, true);\r\n            return typeof(Templet) === 'function'? Templet(this.data) : Templet;\r\n        }\r\n\r\n        this.formContext = new FormContext(this, false);\r\n        return <>{this.schema.map((v, index) => {\r\n            return <React.Fragment key={index}>{factory(this.formContext, v, children)}</React.Fragment>\r\n        })}</>;\r\n    }\r\n\r\n    private initData(formData: any) {\r\n        if (formData === undefined) formData = {};\r\n        for (let itemSchema of this.schema) {\r\n            this.initDataItem(itemSchema, this.data, formData);\r\n        }\r\n    }\r\n\r\n    private initDataItem(itemSchema: ItemSchema, data:any, formData: any):any {\r\n        let {name, type} = itemSchema;\r\n        if (type === 'button') return;\r\n        if (type !== 'arr') {\r\n            data[name] = formData[name];\r\n            return;\r\n        }\r\n\r\n        let arrItem:ArrSchema = itemSchema as ArrSchema;\r\n        let {arr:arrItems} = arrItem;\r\n        if (arrItems === undefined) return;\r\n        let arrDict = arrItem.itemSchemas = {};\r\n        for (let item of arrItems) {\r\n            arrDict[item.name] = item;\r\n        }\r\n        let val:any[] = formData[name];\r\n        if (val === undefined) val = [];\r\n        else if (Array.isArray(val) === false) val = [val];\r\n        let arr:any[] = [];\r\n        for (let row of val) {\r\n            let {$isSelected, $isDeleted} = row;\r\n            let r = {\r\n                $source: row,\r\n                $isSelected: $isSelected,\r\n                $isDeleted: $isDeleted,\r\n            };\r\n            for (let item of arrItems) {\r\n                this.initDataItem(item, r, row);\r\n                /*\r\n                let {name:nm} = item;\r\n                let v = row[nm];\r\n                if (v === undefined) v = null;\r\n                r[nm] = v;\r\n                */\r\n            }\r\n            arr.push(r);\r\n        }\r\n        // 如果没有observable，行删除标志点击不管用\r\n        // 不知道这里为什么要去掉observable。有可能会有别的问题\r\n        data[name] = observable(arr);\r\n        //data[name] = arr;\r\n        return;\r\n    }\r\n\r\n    private watch = () => {\r\n        let {formData} = this.props;\r\n        if (formData === undefined) return;\r\n        //this.initData(formData);\r\n        this.calcSelectOrDelete();\r\n    }\r\n    private calcSelectOrDelete() {\r\n        for (let itemSchema of this.schema) {\r\n            this.arrItemOperated(itemSchema);\r\n        }\r\n    }\r\n\r\n    private arrItemOperated(itemSchema: ItemSchema) {\r\n        let {name, type} = itemSchema;\r\n        if (type !== 'arr') return;\r\n        if (this.data === undefined) return;\r\n        let formArrVal = this.data[name];\r\n        if (formArrVal === undefined) return;\r\n        let {arr: arrItems} = itemSchema as ArrSchema;\r\n        for (let row of formArrVal) {\r\n            let {$source} = row;\r\n            if ($source === undefined) continue;\r\n            let {$isSelected, $isDeleted} = $source;\r\n            row.$isSelected = $isSelected;\r\n            row.$isDeleted = $isDeleted;\r\n            //console.log($isSelected, $isDeleted);\r\n            for (let item of arrItems) {\r\n                this.arrItemOperated(item);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let {beforeShow} = this.props;\r\n        if (beforeShow !== undefined) beforeShow(this.formContext);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.disposer !== undefined) this.disposer();\r\n    }\r\n\r\n    render() {\r\n        let content = this.renderContent();\r\n        return <ContextContainer.Provider value={this.formContext}>\r\n            <this.formContext.renderErrors />\r\n            {this.Container(content)}\r\n        </ContextContainer.Provider>;\r\n    }\r\n\r\n    async buttonClick(buttonName:string) {\r\n        this.formContext.checkRules()\r\n        if (this.formContext.hasError === true) return;\r\n\r\n        let {onButtonClick} = this.formContext.form.props;\r\n        if (onButtonClick === undefined) {\r\n            alert(`you should define form onButtonClick`);\r\n            return;\r\n        }\r\n        let ret = await onButtonClick(buttonName, this.formContext);\r\n        if (ret === undefined) return;\r\n        this.formContext.setError(buttonName, ret);\r\n    }\r\n\r\n    protected DefaultContainer = (content:JSX.Element): JSX.Element => {\r\n        return <form className={classNames(this.props.className)} onSubmit={e=>e.preventDefault()}>\r\n            {content}\r\n        </form>;\r\n    }\r\n    protected DefaultFieldContainer = (label:string|JSX.Element, content:JSX.Element): JSX.Element => {\r\n        let {fieldLabelSize} = this.props;\r\n\r\n        if (fieldLabelSize > 0) {\r\n            let labelView:any;\r\n            if (label === null) {\r\n                fieldLabelSize = 0;\r\n            }\r\n            else {\r\n                labelView = <label className={classNames('col-sm-' + fieldLabelSize, 'col-form-label')}>{label}</label>\r\n            }\r\n            let fieldCol = 'col-sm-' + (12 - fieldLabelSize);\r\n            return <div className=\"form-group row\">\r\n                {labelView}\r\n                <div className={fieldCol}>{content}</div>\r\n            </div>;\r\n        }\r\n        return <div className=\"form-group\">\r\n            {label===null? null:<label className=\"col-form-label\">{label}</label>}\r\n            {content}\r\n        </div>;\r\n    }\r\n    protected DefaultFieldClass:string = undefined;\r\n    protected DefaultButtonClass = 'text-center py-2';\r\n    protected DefaultRes:FormRes = resLang<FormRes>(formRes);\r\n\r\n    ArrContainer = (label:any, content:JSX.Element): JSX.Element => {\r\n        return <div>\r\n            <div className={classNames('small text-muted text-center bg-light py-1 px-3 mt-4 mb-1')}>{label}</div>\r\n            {content}\r\n        </div>;\r\n    }\r\n    RowContainer = (content:JSX.Element): JSX.Element => {\r\n        let cn = classNames({\r\n            'py-3': true\r\n        });\r\n        return <div className={cn}>{content}</div>\r\n    }\r\n    RowSeperator = <div className=\"border border-gray border-top\" />;\r\n}\r\n","import * as React from 'react';\r\nimport { factory } from './widgets';\r\nimport { ContextContainer, Context } from './context';\r\n\r\nexport interface FieldProps {\r\n    name: string;\r\n}\r\n\r\nexport class Field extends React.Component<FieldProps> {\r\n    static contextType = ContextContainer;\r\n    render() {\r\n        let {name, children } = this.props;\r\n        let context:Context = this.context;\r\n        if (context === undefined) return <span className=\"text-danger\">!only in Form!</span>;\r\n        let itemSchema = context.getItemSchema(name);\r\n        let content = factory(context, itemSchema, children, this.props);\r\n        if (content === undefined) {\r\n            return <span className=\"text-danger\">!!{name} is not defined!!</span>;\r\n        }\r\n        return content;\r\n    }\r\n}\r\n","export {Form} from './form';\r\nexport {Field} from './field';\r\nexport {Context, RowContext} from './context';\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport '../css/va-badge.css';\r\n\r\nexport interface BadgeProps {\r\n    className?: string;\r\n    badge?: string|number;\r\n    size?: 'xs' | 'sm' | 'lg';\r\n    color?: 'secondary'|'success'|'danger'|'primary'|'info'|'warning';\r\n    badgeAlign?: 'left'|'center'|'right';\r\n    badgeVertical?: 'top'|'middle'|'bottom';\r\n}\r\n\r\n@observer\r\nexport class Badge extends React.Component<BadgeProps> {\r\n    render() {\r\n        let {className, badge, size, color, badgeAlign, badgeVertical, children} = this.props;\r\n        let cn = classNames(\r\n            className,\r\n            'va-badge',\r\n            size && 'va-badge-'+size,\r\n            'va-badge-' + (color||'secondary'),\r\n            badgeAlign && 'va-badg-'+badgeAlign,\r\n            badgeVertical && 'va-badg-'+badgeVertical,\r\n        );\r\n        let b;\r\n        if (badge) b = <b>{badge}</b>;\r\n        return <div className={cn}>\r\n            {children}\r\n            {b}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport * as classNames from 'classnames';\r\nimport '../css/va-lmr.css';\r\n\r\nexport interface LMRProps {\r\n    className?: string | string[];\r\n    left?: string|JSX.Element;\r\n    right?: string|JSX.Element;\r\n    onClick?: ()=>void;\r\n}\r\n\r\n@observer\r\nexport class LMR extends React.Component<LMRProps> {\r\n    render() {\r\n        let {className, left, children, right, onClick} = this.props;\r\n        let l, r;\r\n        if (left !== undefined) l = <header>{left}</header>;\r\n        if (right !== undefined) r = <footer>{right}</footer>;\r\n        let cursor;\r\n        if (onClick !== undefined) cursor = 'cursor-pointer';\r\n        return <div className={classNames('va-lmr', className, cursor)} onClick={onClick}>\r\n            {l}\r\n            <div>{children}</div>\r\n            {r}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\n\r\nexport interface FAProps {\r\n    name: string;\r\n    className?: string;\r\n    size?: 'lg'|'2x'|'3x'|'4x'|'5x';\r\n    spin?: boolean;\r\n    fixWidth?: boolean;\r\n    border?: boolean;\r\n    pull?: 'left'|'right';\r\n    pulse?: boolean;\r\n    rotate?: 90|180|270;\r\n    flip?: 'horizontal'|'vertical';\r\n    inverse?: boolean;\r\n}\r\n\r\nexport class FA extends React.Component<FAProps> {\r\n    render() {\r\n        let {name, className, size, spin, fixWidth, border, pull, pulse, rotate, flip, inverse} = this.props;\r\n        let cn = classNames(className, 'fa',\r\n            name && ('fa-' + name),\r\n            size && 'fa-'+size,\r\n            fixWidth && 'fa-fw',\r\n            border && 'fa-border',\r\n            pull && 'fa-pull-' + pull,\r\n            spin && 'fa-spin',\r\n            pulse && 'fa-pulse',\r\n            rotate && 'fa-rotate-' + rotate,\r\n            flip && 'fa-flip-' + flip,\r\n            inverse && 'fa-inverse',\r\n        );\r\n        return <i className={cn} />\r\n    }\r\n}\r\n\r\nexport interface StackedFAProps {\r\n    className?: string;\r\n    size?: 'lg',\r\n}\r\nexport class StackedFA extends React.Component<StackedFAProps> {\r\n    render() {\r\n        let {className, size, children} = this.props;\r\n        let cn = classNames(\r\n            'fa-stack',\r\n            className,\r\n            size && 'fa-' + size);\r\n        return <span className={cn}>\r\n            {children}\r\n        </span>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\n\r\nexport const Muted = (props:any) => \r\n<small className={classNames('text-muted', props.className)} style={props.style}>\r\n    {props.children}\r\n</small>;\r\n","export * from './Badge';\r\nexport * from './LMR';\r\nexport * from './FA';\r\nexport * from './IconText';\r\nexport * from './Muted';\r\n","import * as React from 'react';\r\nimport { IObservableArray, computed } from 'mobx';\r\nimport { PageItems } from 'tonva';\r\nimport {List} from './index';\r\n\r\nexport abstract class ListBase {\r\n    protected list: List;\r\n    constructor(list: List) {\r\n        this.list = list;\r\n    }\r\n    get isPaged():boolean {\r\n        let items = this.list.props.items;\r\n        return (items !== null && items !== undefined && Array.isArray(items) === false);\r\n    }\r\n    get items():any[]|IObservableArray<any> {\r\n        let items = this.list.props.items;\r\n        if (items === null) return null;\r\n        if (items === undefined) return undefined;\r\n        if (Array.isArray(items) === true)\r\n            return items as IObservableArray<any>;\r\n        else\r\n            return (items as PageItems<any>).items;\r\n    }\r\n    @computed get loading():boolean {\r\n        let items = this.list.props.items;\r\n        if (items === null) return false;\r\n        if (items === undefined) return true;\r\n        let pageItems = items as PageItems<any>;\r\n        if (pageItems.items === undefined) return false;\r\n        return pageItems.loading;\r\n    }\r\n    get selectedItems():any[] { return; }\r\n    updateProps(nextProps:any) {}\r\n    abstract render(item:any, index:number):JSX.Element;\r\n    protected renderContent(item:any, index:number) {\r\n        let {render} = this.list.props.item;\r\n        if (render === undefined) return <div className=\"px-3 py-2\">{JSON.stringify(item)}</div>;\r\n        return render(item, index);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {ListBase} from './base';\r\n\r\nexport class Clickable extends ListBase {\r\n    render(item:any, index:number):JSX.Element {\r\n        let {className, key, onClick} = this.list.props.item;\r\n        return <li key={key===undefined?index:key(item)} className={classNames('va-row-clickable', className)} onClick={()=>onClick && onClick(item)}>\r\n            {this.renderContent(item, index)}\r\n        </li>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {ListBase} from './base';\r\nimport { uid } from '../uid';\r\n\r\nexport class Static extends ListBase {\r\n    render(item:any, index:number):JSX.Element {\r\n        let {className, key, render} = this.list.props.item;\r\n        if (typeof item === 'string') {\r\n            let cn = classNames('va-list-gap', 'px-3', 'pt-1');\r\n            return <li key={uid()} className={cn}>{item}</li>;\r\n        }\r\n        return <li key={key===undefined?index:key(item)} className={classNames(className)}>\r\n            {this.renderContent(item, index)}\r\n        </li>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable, computed, IObservableArray} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport {ListBase} from './base';\r\nimport {uid} from '../uid';\r\nimport { PageItems } from 'tonva';\r\n\r\nexport interface SelectableItem {\r\n    selected: boolean;\r\n    item: any;\r\n    labelId: string;\r\n}\r\n\r\nexport class Selectable extends ListBase {\r\n    private _items: SelectableItem[];\r\n    private _selectedItems: any[];\r\n    private input: HTMLInputElement;\r\n    private buildItems() {\r\n        console.log('buildItems in selectable.tsx');\r\n        let {items, selectedItems, compare} = this.list.props;\r\n        let itemsArray:any[] | IObservableArray<any>;\r\n        if (items === undefined) {\r\n            return this._items = undefined;\r\n        }\r\n        if (items === null) {\r\n            return this._items = null;\r\n        }\r\n        if (Array.isArray(items) === true) {\r\n            itemsArray = items as any;\r\n        }\r\n        else {\r\n            itemsArray = (items as PageItems<any>).items;\r\n        }\r\n        //let items = this.items;\r\n        this._selectedItems = selectedItems;\r\n        if (selectedItems === undefined) {\r\n            return this._items = itemsArray.map(v => {\r\n                return {\r\n                    selected:false, \r\n                    item:v, \r\n                    labelId:uid()\r\n                };\r\n            });\r\n        }\r\n        if (compare === undefined) {\r\n            return this._items = itemsArray.map(v => {\r\n                return {\r\n                    selected:selectedItems.find(si => si === v) !== undefined, \r\n                    item:v, \r\n                    labelId:uid()\r\n                };\r\n            });\r\n        }\r\n        return this._items = itemsArray.map(v => {\r\n            return {\r\n                selected:selectedItems.find(si => compare(v, si)) !== undefined, \r\n                item:v, \r\n                labelId:uid()\r\n            };\r\n        });\r\n    }\r\n    @computed get items() {\r\n        //if (this._items === undefined) \r\n        this.buildItems();\r\n        return this._items;\r\n    }\r\n    updateProps(nextProps:any) {\r\n        if (nextProps.selectedItems === this._selectedItems) return;\r\n        this.buildItems();\r\n    }\r\n    private onSelect(item:SelectableItem, selected:boolean) {\r\n        item.selected = selected;\r\n        let anySelected = this._items.some(v => v.selected);\r\n        this.list.props.item.onSelect(item.item, selected, anySelected);\r\n    }\r\n    \r\n    get selectedItems():any[] {\r\n        return this._items.filter(v => v.selected === true).map(v => v.item);\r\n    }\r\n    /*\r\n    set selectedItems(value: any[]) {\r\n        if (value === undefined) return;\r\n        if (this._items === undefined) return;\r\n        let sLen = this._items.length;\r\n        let list = value.slice();\r\n        for (let n=0; n<sLen; n++) {\r\n            let sItem = this._items[n];\r\n            let len = list.length;\r\n            if (len === 0) break;\r\n            let item = sItem.item;\r\n            for (let i=0; i<len; i++) {\r\n                let v = list[i];\r\n                if (item === v) {\r\n                    sItem.selected = true;\r\n                    value.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n        };\r\n    }\r\n    */\r\n    //w-100 mb-0 pl-3\r\n    //m-0 w-100\r\n    render(item:SelectableItem, index:number):JSX.Element {\r\n        let {className, key, render, onSelect} = this.list.props.item;\r\n        let {labelId, selected} = item;\r\n        return <li key={key===undefined?index:key(item)} className={classNames(className)}>\r\n            <div className=\"d-flex align-items-center px-3\">\r\n                <input ref={input=>{\r\n                        if (!input) return;\r\n                        this.input = input; input.checked = selected;\r\n                    }}\r\n                    className=\"\" type=\"checkbox\" value=\"\" id={labelId}\r\n                    defaultChecked={selected}\r\n                    onChange={(e)=>{\r\n                        this.onSelect(item, e.target.checked)} \r\n                    }/>\r\n                <label className=\"\" style={{flex:1, marginBottom:0}} htmlFor={labelId}>\r\n                    {this.renderContent(item.item, index)}\r\n                </label>\r\n            </div>\r\n        </li>\r\n    }\r\n}\r\n/*\r\n<label>\r\n<label className=\"custom-control custom-checkbox\">\r\n    <input type='checkbox' className=\"custom-control-input\"\r\n        //checked={selected}\r\n        onChange={(e)=>this.onSelect(item, e.target.checked)} />\r\n    <span className=\"custom-control-indicator\" />\r\n</label>\r\n{this.renderContent(item.item, index)}\r\n</label>\r\n*/\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {PageItems} from 'tonva';\r\nimport {ListBase} from './base';\r\nimport {Clickable} from './clickable';\r\nimport {Static} from './static';\r\nimport {Selectable} from './selectable';\r\nimport \"../css/va-list.css\";\r\nimport { IObservableArray } from 'mobx';\r\n\r\ntype StaticRow = string|JSX.Element|(()=>string|JSX.Element);\r\n\r\nexport interface ListProps {\r\n    className?: string|string[];\r\n    items: any[] | IObservableArray<any> | PageItems<any>;\r\n    item: {\r\n        className?: string|string[];\r\n        render?: (item:any, index:number) => JSX.Element;\r\n        onSelect?: (item:any, isSelected:boolean, anySelected:boolean)=>void;\r\n        onClick?: (item:any)=>void;\r\n        key?: (item:any)=>string|number;\r\n    };\r\n    compare?:(item:any, selectItem)=>boolean;\r\n    selectedItems?:any[];\r\n    header?: StaticRow;\r\n    footer?: StaticRow;\r\n    before?: StaticRow;\r\n    loading?: StaticRow;\r\n    none?: StaticRow;\r\n}\r\n\r\n@observer\r\nexport class List extends React.Component<ListProps> {\r\n    private listBase: ListBase;\r\n    constructor(props:ListProps) {\r\n        super(props);\r\n        let {item} = this.props;\r\n        let {onClick, onSelect} = item;\r\n        if (onSelect !== undefined)\r\n            this.listBase = new Selectable(this);\r\n        else if (onClick !== undefined)\r\n            this.listBase = new Clickable(this);\r\n        else\r\n            this.listBase = new Static(this);\r\n    }\r\n    _$scroll = (direct: 'top'|'bottom') => {\r\n        console.log('############### items scroll to ' + direct);\r\n    }\r\n    componentWillUpdate(nextProps:ListProps, nextState, nextContext) {\r\n        this.listBase.updateProps(nextProps);\r\n    }\r\n    get selectedItems():any[] {\r\n        return this.listBase.selectedItems;\r\n    }\r\n    render() {\r\n        let {className, header, footer, before, loading, none, item, selectedItems} = this.props;\r\n        if (before === undefined) before = 'before';\r\n        if (loading === undefined) loading = 'loading';\r\n        if (none === undefined) none = 'none';        \r\n        //this.listBase.selectedItems = selectedItems;\r\n        let {isPaged, items, loading:isLoading} = this.listBase;\r\n        function staticRow(row:StaticRow, type:string) {\r\n            if (!row) return;\r\n            switch (typeof row) {\r\n                default:\r\n                case 'string': return <li className={\"va-list-\"+type}>{row}</li>;\r\n                case 'function': return <li className={\"va-list-\"+type}>{(row as ()=>string|JSX.Element)()}</li>;\r\n                case 'object': return <li>{row}</li>\r\n            } \r\n        }\r\n        let content:any;\r\n        if (items === null)\r\n            content = staticRow(before, 'before');\r\n        else if (items === undefined)\r\n            content = staticRow(loading, 'loading');\r\n        else if (items.length === 0)\r\n            content = staticRow(none, 'none');\r\n        else {\r\n            content = items.map((item, index) => {\r\n                return this.listBase.render(item, index);\r\n            });\r\n        }\r\n        return <ul className={classNames('va-list', className)}>\r\n            {staticRow(header, 'header')}\r\n            {content}\r\n            {staticRow(footer, 'footer')}\r\n        </ul>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { ItemEdit } from './itemEdit';\r\n\r\nexport class StringItemEdit extends ItemEdit {\r\n    protected uiItem: UiTextItem;\r\n    protected async internalStart():Promise<any> {\r\n        return new Promise<any>((resolve, reject) => {\r\n            let element = React.createElement(this.page, {resolve:resolve, reject:reject});\r\n            nav.push(element,reject);\r\n        });\r\n    }\r\n\r\n    private onChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.newValue = evt.target.value;\r\n        let preValue = this.value;\r\n        this.isChanged = (this.newValue != preValue);\r\n    }\r\n\r\n    private onBlur = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.verifyValue();\r\n    }\r\n\r\n    private onFocus = () => {\r\n        this.error = undefined;\r\n    }\r\n\r\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\r\n        let {resolve, reject} = props;\r\n        let right = <button\r\n            className=\"btn btn-sm btn-success\"\r\n            disabled={!this.isChanged}\r\n            onClick={()=>{\r\n                this.verifyValue();\r\n                if (this.error === undefined) resolve(this.newValue);\r\n            }}>保存</button>;\r\n        return <Page header={'更改' + this.label} right={right}>\r\n            <div className=\"m-3\">\r\n                <input type=\"text\" \r\n                    onChange={this.onChange}\r\n                    onBlur={this.onBlur}\r\n                    onFocus={this.onFocus}\r\n                    className=\"form-control\" \r\n                    defaultValue={this.value} />\r\n                {\r\n                    this.uiItem && <div className=\"small muted m-2\">{this.uiItem.placeholder}</div>\r\n                }\r\n                {this.error && <div className=\"text-danger\">{this.error}</div>}\r\n            </div>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem, UiRadio } from '../schema';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { ItemEdit } from './itemEdit';\r\n\r\nexport class RadioItemEdit extends ItemEdit {\r\n    protected uiItem: UiRadio;\r\n    protected async internalStart():Promise<any> {\r\n        return new Promise<any>((resolve, reject) => {\r\n            let element = React.createElement(this.page, {resolve:resolve, reject:reject});\r\n            nav.push(element,reject);\r\n        });\r\n    }\r\n\r\n    private onChange = (value: any) => {\r\n        this.newValue = value;\r\n        let preValue = this.value;\r\n        this.isChanged = (this.newValue != preValue);\r\n    }\r\n\r\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\r\n        let {resolve, reject} = props;\r\n        let {name} = this.itemSchema;\r\n        let {list, defaultValue} = this.uiItem;\r\n        let right = <button\r\n            className=\"btn btn-sm btn-success\"\r\n            disabled={!this.isChanged}\r\n            onClick={()=>{\r\n                this.verifyValue();\r\n                if (this.error === undefined) resolve(this.newValue);\r\n            }}>保存</button>;\r\n        let content = list?\r\n            list.map((v, index:number) => {\r\n                let {title, value} = v;\r\n                return <label key={index} className=\"px-3 py-2 cursor-pointer\">\r\n                    <input name={name} type=\"radio\" value={value} \r\n                        onClick={()=>this.onChange(value)} \r\n                        defaultChecked={value === defaultValue} /> {title || value} &nbsp;\r\n                </label>;\r\n            })\r\n            :\r\n            <>no list defined</>;\r\n        return <Page header={'更改' + this.label} right={right}>\r\n            <div className=\"m-3\">{content}</div>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem, UiSelect } from '../schema';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { ItemEdit } from './itemEdit';\r\n\r\nexport class SelectItemEdit extends ItemEdit {\r\n    protected uiItem: UiSelect;\r\n    protected async internalStart():Promise<any> {\r\n        return new Promise<any>((resolve, reject) => {\r\n            let element = React.createElement(this.page, {resolve:resolve, reject:reject});\r\n            nav.push(element,reject);\r\n        });\r\n    }\r\n\r\n    private onChange = (value:any) => {\r\n        this.newValue = value;\r\n        let preValue = this.value;\r\n        this.isChanged = (this.newValue != preValue);\r\n    }\r\n\r\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\r\n        let {resolve, reject} = props;\r\n        let {list} = this.uiItem;\r\n        let content = list?\r\n            list.map((v, index:number) => {\r\n                let {title, value} = v;\r\n                return <div key={index} className=\"px-3 py-2 cursor-pointer bg-white mb-1\" onClick={()=>{this.onChange(value); resolve(this.newValue)}}>\r\n                    {title || value}\r\n                </div>;\r\n            })\r\n            :\r\n            <>no list defined</>;\r\n        return <Page header={'更改' + this.label}>\r\n            <div className=\"my-3\">\r\n                {content}\r\n            </div>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\r\nimport { observer } from 'mobx-react';\r\nimport { ItemEdit } from './itemEdit';\r\nimport { StringItemEdit } from './stringItemEdit';\r\nimport { ImageItemEdit } from './imageItemEdit';\r\nimport { Image } from '../image';\r\nimport { RadioItemEdit } from './radioItemEdit';\r\nimport { SelectItemEdit } from './selectItemEdit';\r\nimport { UiSelectBase } from '../form/uiSchema';\r\n\r\nexport interface EditProps {\r\n    className?: string;\r\n    schema: Schema;\r\n    data: any;\r\n    onItemClick?: (itemSchema: ItemSchema, uiItem: UiItem, value: any) => Promise<void>;\r\n    onItemChanged?: (itemSchema: ItemSchema, newValue:any, preValue:any) => Promise<void>;\r\n    stopEdit?: boolean;\r\n    uiSchema?: UiSchema;\r\n    sepClassName?: string;\r\n    topBorderClassName?: string;\r\n    bottomBorderClassName?: string;\r\n    rowContainerClassName?: string;\r\n}\r\n\r\n@observer\r\nexport class Edit extends React.Component<EditProps> {\r\n    private defaultSepClassName = \"border-top edit-sep-light-gray\";\r\n    private defaultRowContainerClassName = \"d-flex px-3 py-2 bg-white align-items-center\";\r\n    private topBorder:JSX.Element;\r\n    private bottomBorder:JSX.Element;\r\n    private rowContainerClassName?: string;\r\n    private sep:JSX.Element;\r\n    private uiSchema: {[name:string]: UiItem};\r\n\r\n    constructor(props: EditProps) {\r\n        super(props);\r\n        let {topBorderClassName, bottomBorderClassName, sepClassName, rowContainerClassName, uiSchema, stopEdit} = props;\r\n        this.topBorder = <div className={topBorderClassName || this.defaultSepClassName} />;\r\n        this.bottomBorder = <div className={bottomBorderClassName || this.defaultSepClassName} />;\r\n        this.rowContainerClassName = rowContainerClassName || this.defaultRowContainerClassName;\r\n        if (stopEdit !== true) this.rowContainerClassName += ' cursor-pointer';\r\n        this.sep = <div className={sepClassName || this.defaultSepClassName} />;\r\n        this.uiSchema = (uiSchema && uiSchema.items) || {};\r\n    }\r\n\r\n    render() {\r\n        let elItems:JSX.Element[] = [];\r\n        let {schema} = this.props;\r\n        let len = schema.length;\r\n\r\n        elItems.push(this.topBorder);\r\n        for (let i=0; i<len; i++) {\r\n            let itemSchema = schema[i];\r\n            if (i>0) elItems.push(this.sep);\r\n            let value = this.props.data[itemSchema.name];\r\n            elItems.push(this.renderRow(itemSchema, value));\r\n        }\r\n        elItems.push(this.bottomBorder);\r\n\r\n        return <div>\r\n            {elItems.map((v, index) => <React.Fragment key={index}>{v}</React.Fragment>)}\r\n        </div>;\r\n    }\r\n\r\n    private renderRow = (itemSchema: ItemSchema, value:any):JSX.Element => {\r\n        let {name, type, required} = itemSchema;\r\n        let divValue:any;\r\n        let uiItem = this.uiSchema[name];\r\n        let label:string = (uiItem && uiItem.label) || name;\r\n        //let value:any = this.props.data[name];\r\n        if (uiItem !== undefined && value) {\r\n            switch (uiItem.widget) {\r\n                case 'radio':\r\n                case 'select':\r\n                    let {list} = uiItem as UiSelectBase;\r\n                    divValue = <b>{list.find(v => v.value === value).title}</b>;\r\n                    break;\r\n            }\r\n        }\r\n        if (divValue === undefined) {\r\n            switch (type) {\r\n                default:\r\n                    divValue = value? <b>{value}</b> : <small className=\"text-muted\">(无)</small>;\r\n                    break;\r\n                case 'image':\r\n                    divValue = <Image className=\"w-4c h-4c\" src={value} />;\r\n                    break;\r\n            }\r\n        }\r\n        let requireFlag = required===true && <span className=\"text-danger\">*</span>;\r\n        return <div className={this.rowContainerClassName} onClick={async ()=>await this.rowClick(itemSchema, uiItem, label, value)}>\r\n            <div className=\"w-6c\">{label} {requireFlag}</div>\r\n            <div className=\"flex-fill d-flex justify-content-end\">{divValue}</div>\r\n            {this.props.stopEdit!==true && <div className=\"w-2c text-right\"><i className=\"fa fa-chevron-right\" /></div>}\r\n        </div>;\r\n    };\r\n\r\n    private rowClick = async (itemSchema: ItemSchema, uiItem: UiItem, label:string, value: any) => {\r\n        let {onItemChanged, onItemClick, stopEdit} = this.props;\r\n        if (stopEdit === true) return;\r\n        let changeValue:any;\r\n        if (onItemClick !== undefined) {\r\n            await onItemClick(itemSchema, uiItem, value);\r\n            return;\r\n        }\r\n        let itemEdit:ItemEdit = createItemEdit(itemSchema, uiItem, label, value);\r\n        if (itemEdit === undefined) {\r\n            alert('undefined: let itemEdit:ItemEdit = createItemEdit(itemSchema, uiItem, label, value);');\r\n            return;\r\n        }\r\n        try {\r\n            changeValue = await itemEdit.start();\r\n            if (changeValue != value) {\r\n                if (onItemChanged === undefined) {\r\n                    alert(`${itemSchema.name} value changed, new: ${changeValue}, pre: ${value}`);\r\n                    this.props.data[itemSchema.name] = changeValue;\r\n                }\r\n                else {\r\n                    await onItemChanged(itemSchema, changeValue, value);\r\n                }\r\n            }\r\n            await itemEdit.end();\r\n        }\r\n        catch (err) {\r\n            // 如果直接back，会触发reject，就到这里了\r\n            console.log('no value changed');\r\n        }\r\n    }\r\n}\r\n\r\nfunction createItemEdit(itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any):ItemEdit {\r\n    let itemEdit: new (itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any) => ItemEdit;\r\n    if (uiItem !== undefined) {\r\n        switch (uiItem.widget) {\r\n            default: break;\r\n            case 'text': itemEdit = StringItemEdit; break;\r\n            case 'image': itemEdit = ImageItemEdit; break;\r\n            case 'radio': itemEdit = RadioItemEdit; break;\r\n            case 'select': itemEdit = SelectItemEdit; break;\r\n        }\r\n    }\r\n    if (itemEdit === undefined) {\r\n        switch (itemSchema.type) {\r\n            case 'string': itemEdit = StringItemEdit; break;\r\n            case 'image': itemEdit = ImageItemEdit; break;\r\n        }\r\n    }\r\n    if (itemEdit === undefined) return;\r\n    return new itemEdit(itemSchema, uiItem, label, value);\r\n}\r\n","export * from './edit';\r\n","import * as React from 'react';\r\nimport className from 'classnames';\r\nimport {PropGridProps} from './PropGrid';\r\nimport {LabeledProp, StringProp, NumberProp, ListProp, ComponentProp} from './propView';\r\n\r\nexport abstract class PropRow {\r\n    setValues(values: any) {}\r\n    abstract render(key:string): any;\r\n}\r\n\r\nexport class PropBorder extends PropRow {\r\n    render(key:string): JSX.Element {\r\n        return <div key={'_b_' + key} className=\"\">\r\n            <div className=\"w-100\">\r\n                <div style={{borderTop: '1px solid #f0f0f0'}} />\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class PropGap extends PropRow {\r\n    private param: string;\r\n    constructor(param?: string) {\r\n        super();\r\n        this.param = param;\r\n    }\r\n    render(key:string): JSX.Element {\r\n        let w: string;\r\n        switch (this.param) {\r\n            default: w = 'py-2'; break;\r\n            case '=': w = 'py-1'; break;\r\n            case '-': w = 'pb-1'; break;\r\n        }\r\n        let cn = className(w);\r\n        return <div key={'_g_' + key} className={cn} style={{backgroundColor: '#f0f0f0'}} />;\r\n    }\r\n}\r\n\r\nconst valueAlignStart = 'justify-content-start';\r\nconst valueAlignCenter = 'justify-content-center';\r\nconst valueAlignEnd = 'justify-content-end';\r\nexport abstract class LabeledPropRow extends PropRow {\r\n    protected gridProps: PropGridProps;\r\n    protected prop: LabeledProp;\r\n    protected content: any;\r\n    protected col: string;\r\n    //protected values: any;\r\n    constructor(gridProps:PropGridProps, prop: LabeledProp) {\r\n        super();\r\n        this.gridProps = gridProps;\r\n        this.prop = prop;\r\n        this.col = gridProps.labelFixLeft === true? 'col' : 'col-sm';\r\n        //this.values = values;\r\n    }\r\n    render(key:string):any {\r\n        let {onClick, bk} = this.prop;\r\n        let cn = className({\r\n            \"cursor-pointer\": onClick !== undefined,\r\n            \"bg-white\": bk === undefined, \r\n            \"row\": true\r\n        });\r\n        return <div key={key} className={cn} onClick={onClick}>\r\n            {this.renderLabel()}\r\n            {this.renderProp()}\r\n        </div>;\r\n    }\r\n    protected renderLabel():any {\r\n        let {label} = this.prop;\r\n        if (label === undefined) return null;\r\n        return <label className={this.col + '-3 col-form-label'}>\r\n            {label}\r\n        </label>;\r\n    }\r\n    protected renderProp():any {\r\n        let {label} = this.prop;\r\n        let align, vAlign;\r\n        switch (this.gridProps.alignValue) {\r\n            case 'left': align = valueAlignStart; break;\r\n            case 'center': align = valueAlignCenter; break;\r\n            case 'right': align = valueAlignEnd; break;\r\n        }\r\n        switch (this.prop.vAlign) {\r\n            case 'top': vAlign = 'align-items-start'; break;\r\n            default:\r\n            case 'center': vAlign = 'align-items-center'; break;\r\n            case 'bottom': vAlign = 'align-items-end'; break;\r\n            case 'stretch': vAlign = 'align-items-stretch'; break;\r\n        }\r\n        let col:string = this.col + (label===undefined? '-12':'-9');\r\n        let cn = className(align, vAlign, col, 'd-flex');\r\n        return <div className={cn}>\r\n            {this.renderPropBody()}\r\n        </div>;\r\n    }\r\n    protected renderPropBody():any {\r\n        return <div className=\"form-control-plaintext\">\r\n            {this.renderPropContent()}\r\n        </div>;\r\n    }\r\n    protected renderPropContent():any {\r\n        return this.content;\r\n    }\r\n}\r\n\r\nexport class StringPropRow extends LabeledPropRow {\r\n    protected prop: StringProp;\r\n    setValues(values:any) {\r\n        if (values === undefined) this.content = undefined;\r\n        else this.content = values[this.prop.name];\r\n    }\r\n}\r\n\r\nexport class NumberPropRow extends LabeledPropRow {\r\n    protected prop: NumberProp;\r\n    setValues(values:any) {\r\n        if (values === undefined) this.content = undefined;\r\n        else this.content = values[this.prop.name];\r\n    }\r\n}\r\n\r\nexport class ListPropRow extends LabeledPropRow {\r\n    protected prop: ListProp;\r\n    setValues(values:any) {\r\n        if (values === undefined) this.content = undefined;\r\n        else {\r\n            let list = this.prop.list;\r\n            if (typeof list === 'string') this.content = values[list];\r\n            else this.content = undefined;\r\n        }\r\n    }\r\n    protected renderPropBody() {\r\n        let {list, row} = this.prop;\r\n        let items:any[] = typeof list === 'string'? this.content : list;\r\n        if (items === undefined) return <div/>;\r\n        // new row(item)\r\n        return <div className=\"w-100\">\r\n            {\r\n                items.map((item, index) => <React.Fragment key={index}>\r\n                    {index===0? null: <div style={{width:'100%', borderBottom:'1px solid #f0f0f0'}} />}\r\n                    {React.createElement(row, item)}\r\n                </React.Fragment>)\r\n            }\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class ComponentPropRow extends LabeledPropRow {\r\n    protected prop: ComponentProp;\r\n    protected renderPropBody() {\r\n        let {component} = this.prop;\r\n        return component;\r\n    }\r\n    protected renderProp():any {\r\n        let {label, full} = this.prop;\r\n        let align, vAlign;\r\n        switch (this.gridProps.alignValue) {\r\n            case 'left': align = valueAlignStart; break;\r\n            case 'center': align = valueAlignCenter; break;\r\n            case 'right': align = valueAlignEnd; break;\r\n        }\r\n        switch (this.prop.vAlign) {\r\n            case 'top': vAlign = 'align-items-start'; break;\r\n            default:\r\n            case 'center': vAlign = 'align-items-center'; break;\r\n            case 'bottom': vAlign = 'align-items-end'; break;\r\n            case 'stretch': vAlign = 'align-items-stretch'; break;\r\n        }\r\n        let col:string;\r\n        if (full !== true)\r\n            col = this.col + (label===undefined? '-12':'-9');\r\n        else\r\n            col = 'w-100';\r\n        let cn = className(align, vAlign, col, 'd-flex');\r\n        return <div className={cn}>\r\n            {this.renderPropBody()}\r\n        </div>;\r\n    }\r\n}\r\n","import { PropGridProps } from './PropGrid';\r\nimport {\r\n    PropRow, PropBorder, PropGap, \r\n    StringPropRow, NumberPropRow, ListPropRow, ComponentPropRow\r\n} from './row';\r\n\r\nexport interface Format {\r\n\r\n}\r\n\r\nexport interface PropBase {\r\n    onClick?: () => void;\r\n}\r\n\r\nexport interface LabeledProp extends PropBase {\r\n    label?: string;\r\n    bk?: string;\r\n    vAlign?: 'top' | 'bottom' | 'center' | 'stretch';\r\n}\r\n\r\nexport interface StringProp extends LabeledProp {\r\n    type: 'string';\r\n    name: string;\r\n}\r\n\r\nexport interface NumberProp extends LabeledProp {\r\n    type: 'number';\r\n    name: string;\r\n}\r\n\r\nexport interface FormatProp extends LabeledProp {\r\n    type: 'format';\r\n    format: Format;\r\n}\r\n\r\nexport interface ListProp extends LabeledProp {\r\n    type: 'list';\r\n    list: string | any[];  // string 表示名字，否则就是值\r\n    row: new (props: any) => React.Component;\r\n}\r\n\r\nexport interface ComponentProp extends LabeledProp {\r\n    type: 'component';\r\n    full?: boolean;\r\n    component: any; //JSX.Element;\r\n}\r\n\r\nexport type Prop = StringProp | NumberProp | FormatProp | ListProp | ComponentProp | string;\r\n\r\nexport class PropView {\r\n    private gridProps: PropGridProps\r\n    private props: Prop[];\r\n    //private values:any;\r\n    private rows: PropRow[];\r\n\r\n    constructor(gridProps: PropGridProps, props: Prop[]) {\r\n        this.gridProps = gridProps;\r\n        this.props = props;\r\n        //this.values = values;\r\n        this.buildRows();\r\n    }\r\n\r\n    private buildRows() {\r\n        this.rows = [];\r\n        let isGap: boolean = true;\r\n        for (let prop of this.props) {\r\n            if (typeof prop === 'string') {\r\n                this.rows.push(new PropGap(prop));\r\n                isGap = true;\r\n            }\r\n            else {\r\n                if (!isGap) this.rows.push(new PropBorder());\r\n                let row;\r\n                switch (prop.type) {\r\n                    default: continue;\r\n                    case 'string': row = new StringPropRow(this.gridProps, prop); break;\r\n                    case 'number': row = new NumberPropRow(this.gridProps, prop); break;\r\n                    case 'list': row = new ListPropRow(this.gridProps, prop); break;\r\n                    case 'component': row = new ComponentPropRow(this.gridProps, prop); break;\r\n                }\r\n                this.rows.push(row);\r\n                isGap = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    setValues(values: any) {\r\n        for (let r of this.rows) r.setValues(values);\r\n    }\r\n\r\n    render() {\r\n        return this.rows.map((row, index) => row.render(String(index)));\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {Prop, PropView} from './propView';\r\n\r\nexport interface PropGridProps {\r\n    className?: string;\r\n    rows: Prop[];\r\n    values: any;\r\n    alignValue?: 'left'|'center'|'right';\r\n    labelFixLeft?: boolean;\r\n}\r\n\r\n@observer\r\nexport class PropGrid extends React.Component<PropGridProps> {\r\n    render() {\r\n        let {className, rows, values} = this.props;\r\n        let propView = new PropView(this.props, rows);\r\n        propView.setValues(values);\r\n        let cn = classNames('container-fluid', className);\r\n        return <div className={cn}>\r\n            {propView.render()}\r\n        </div>;\r\n    }\r\n}\r\n","export * from './propView';\r\nexport * from './row';\r\nexport * from './PropGrid';\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {IObservableValue, IComputedValue} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport '../css/va-row.css';\r\n\r\nexport interface ListItem {\r\n    key?: string|number;\r\n    date?: Date;\r\n    icon?: string | JSX.Element;\r\n    main?: string;\r\n    vice?: string;\r\n    middle?: string | JSX.Element;\r\n    midSize?: number;\r\n    right?: string | JSX.Element;\r\n    onClick?: () => void;\r\n    unread?: number|IComputedValue<number>;         // <0 表示red dot\r\n}\r\n\r\nexport interface ListRowProps extends ListItem {\r\n    //onClick: () => void;\r\n}\r\n\r\nexport interface ListRowState {\r\n    pressed: boolean;\r\n}\r\n\r\n@observer\r\nexport class ListRow extends React.Component<ListRowProps, ListRowState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pressed: false,\r\n        }\r\n    }\r\n    render() {\r\n        let {date, main, vice, middle, midSize, icon, unread, right, onClick} = this.props;\r\n        let header, isIcon:boolean, noteNum;\r\n        if (unread !== undefined) {\r\n            let uv:number;\r\n            if (typeof unread === 'number') uv = unread;\r\n            else uv = unread.get();\r\n                if (uv > 0)\r\n                noteNum = <b>{uv}</b>;\r\n            else if (uv < 0)\r\n                noteNum = <b className='dot' />;\r\n        }\r\n        switch (typeof icon) {\r\n            case 'object':\r\n                header = <header>{icon}{noteNum}</header>; \r\n                isIcon= false;\r\n                break;\r\n            case 'string': \r\n                header = <header className='icon'><img src={icon as string} />{noteNum}</header>;\r\n                isIcon= true; \r\n                break;\r\n        }\r\n        let mid;\r\n        if (middle !== undefined) {\r\n            switch (typeof middle) {\r\n                case 'string':\r\n                    mid = <div style={{flex:midSize}}>{middle}</div>;\r\n                    break;\r\n                default:\r\n                    mid = middle;\r\n                    break;\r\n            }\r\n        }\r\n        let footer;\r\n        if (right !== undefined) {\r\n            if (typeof right === 'string')\r\n                footer = <footer><small className=\"text-muted\">{right}</small></footer>;\r\n            else\r\n                footer = <footer>{right}</footer>;\r\n        }\r\n        let viceSpan;\r\n        if (vice !== undefined) viceSpan = <span>{vice}</span>;\r\n        let cn = classNames('va-row', {icon:isIcon, pressed: this.state.pressed}, {\"va-action\": onClick !== undefined});\r\n        return (\r\n        <li className={cn} onClick={onClick}>\r\n            {header}\r\n            <div>\r\n                <div>{main}</div>\r\n                {viceSpan}\r\n            </div>\r\n            {mid}\r\n            {footer}\r\n        </li>\r\n        );\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {ListItem, ListRow} from './listRow';\r\n\r\nexport interface ListViewProps {\r\n    className?: string;\r\n    items?: any[];\r\n    renderRow?: (item:any, index:number, ex?:any) => JSX.Element;\r\n    ex?: any;\r\n    header?: string|JSX.Element;\r\n    beforeLoad?: string|JSX.Element;\r\n    none?: string|JSX.Element;\r\n    footer?: string|JSX.Element;\r\n    itemClick?: (item:any)=>void;\r\n    converter?: (item:any)=>ListItem;\r\n}\r\n\r\n@observer\r\nexport class ListView extends React.Component<ListViewProps, null> {\r\n    render() {\r\n        let {header, items, beforeLoad, none, renderRow, className, footer, itemClick, converter} = this.props;\r\n        let cn = classNames(className, 'va-list');\r\n        let content, elHeader;\r\n        if (items === undefined)\r\n            content = beforeLoad === null? null : <li className='empty'>\r\n                {beforeLoad || '...'}\r\n            </li>;\r\n        else if (items.length === 0) {\r\n            content = (\r\n            <li className='empty'>\r\n                {\r\n                    none || '[none]'\r\n                }\r\n            </li>);\r\n        }\r\n        else if (renderRow !== undefined) {\r\n            content = items.map((item, index) => renderRow(item, index, this.props.ex));\r\n        }\r\n        else {\r\n            content = items.map((item, index) => {\r\n                let onClick = item.onClick;\r\n                if (onClick === undefined && itemClick !== undefined) \r\n                    onClick = ()=>itemClick(item);\r\n                let listItem:ListItem;\r\n                if (converter !== undefined) {\r\n                    listItem = converter(item);\r\n                    if (listItem === undefined) return null;\r\n                }\r\n                else {\r\n                    listItem = {\r\n                        ...item\r\n                    }\r\n                }\r\n                if (listItem.key === undefined) listItem.key = listItem.main;\r\n                return <ListRow onClick={onClick} {...listItem} />;\r\n            });\r\n        }\r\n        if (header !== undefined) {\r\n            if (typeof header === 'string') {\r\n                elHeader = <div className='va-list-header'>{header}</div>;\r\n            }\r\n            else {\r\n                elHeader = header;\r\n            }\r\n        }\r\n\r\n        return (\r\n        <div className={cn}>\r\n            {elHeader}\r\n            <ul>\r\n                {content}\r\n            </ul>\r\n            {footer}\r\n        </div>\r\n        )\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport { IObservableValue } from 'mobx/lib/internal';\r\n\r\nexport type TabCaption = (selected:boolean) => JSX.Element;\r\n\r\nexport interface TabProp {\r\n    name: string;\r\n    caption: TabCaption;\r\n    content: () => JSX.Element;\r\n    notify?: IObservableValue<number>;\r\n}\r\n\r\nexport interface TabsProps {\r\n    tabs: TabProp[];\r\n    size?: 'sm' | 'lg' | 'md';\r\n    tabBack?: string;\r\n    contentBack?: string;\r\n    sep?: string;\r\n    selected?: string;\r\n}\r\n\r\nclass Tab {\r\n    name: string;\r\n    @observable selected: boolean;\r\n    caption: TabCaption;\r\n    contentBuilder: ()=>JSX.Element;\r\n    notify: IObservableValue<number>;\r\n\r\n    private _content: JSX.Element;\r\n    get content(): JSX.Element {\r\n        if (this.selected !== true) return this._content;\r\n        if (this._content !== undefined) return this._content;\r\n        return this._content = this.contentBuilder();\r\n    }\r\n}\r\n\r\nexport const TabCaptionComponent = (label:string, icon:string, color:string) => <div \r\n    className={'d-flex justify-content-center align-items-center flex-column cursor-pointer ' + color}>\r\n    <div><i className={'fa fa-lg fa-' + icon} /></div>\r\n    <small>{label}</small>\r\n</div>;\r\n\r\n@observer export class Tabs extends React.Component<TabsProps> {\r\n    private size: string;\r\n    private tabBack: string;\r\n    private contentBack: string;\r\n    private sep: string;\r\n    @observable private selectedTab: Tab;\r\n    @observable private tabs: Tab[] = [];\r\n\r\n    constructor(props: TabsProps) {\r\n        super(props);\r\n        let {size, tabs, tabBack, contentBack, sep, selected} = this.props;\r\n        switch (size) {\r\n            default:\r\n            case 'md': this.size = '3.2rem'; break;\r\n            case 'sm': this.size = '4rem'; break;\r\n            case 'lg': this.size = '2.5rem'; break;\r\n        }\r\n        this.tabs.push(...tabs.map(v => {\r\n                let tab = new Tab();\r\n                tab.name = v.name;\r\n                tab.selected = false;\r\n                tab.caption = v.caption;\r\n                tab.contentBuilder = v.content;\r\n                tab.notify = v.notify;\r\n                return tab;\r\n            }\r\n        ));\r\n        this.tabBack = tabBack || 'bg-light';\r\n        this.contentBack = contentBack;\r\n        this.sep = sep || 'border-top border-gray';\r\n        if (selected !== undefined) {\r\n            this.selectedTab = this.tabs.find(v => v.name === selected);\r\n        }\r\n        if (this.selectedTab === undefined) this.selectedTab = this.tabs[0];\r\n        this.selectedTab.selected = true;\r\n    }\r\n\r\n    private tabClick = (tab:Tab) => {\r\n        this.selectedTab.selected = false;\r\n        tab.selected = true;\r\n        this.selectedTab = tab;\r\n    }\r\n\r\n    showTab(tabName: string) {\r\n        let tab = this.tabs.find(v => v.name === tabName);\r\n        if (tab === undefined) return;\r\n        if (this.selectedTab !== undefined) this.selectedTab.selected = false;\r\n        tab.selected = true;\r\n        this.selectedTab = tab;\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"tab\">\r\n            <div className={this.contentBack} style={{height: 'calc(100% - ' + this.size + ')'}}>\r\n                {this.tabs.map((v,index) => {\r\n                    let style:React.CSSProperties={\r\n                        display: v.selected===true? undefined : 'none'};\r\n                    return <div key={index} style={style}>{v.content}</div>;\r\n                })}\r\n            </div>\r\n            <div className={classNames(this.tabBack, this.sep)} style={{height: this.size}}>\r\n                {this.tabs.map((v,index) => {\r\n                    let {selected, caption, notify} = v;\r\n                    let notifyCircle:any;\r\n                    if (notify !== undefined) {\r\n                        let num = notify.get();\r\n                        if (num !== undefined) {\r\n                            if (num > 0) notifyCircle = <u>{num>99?'99+':num}</u>;\r\n                            else if (num < 0) notifyCircle = <u className=\"dot\" />;\r\n                        }\r\n                    }\r\n                    return <div key={index} className=\"\" onClick={()=>this.tabClick(v)}>\r\n                        <div className=\"align-self-center\">\r\n                            {notifyCircle}\r\n                            {caption(selected)}\r\n                        </div>\r\n                    </div>\r\n                })}\r\n            </div>\r\n        </div>\r\n    }\r\n};\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { VPage, Page, Form, ItemSchema, UiSchema, StringSchema, UiTextItem, UiPasswordItem, ButtonSchema, Edit, ImageSchema, nav, UiImageItem } from '../ui';\r\nimport userApi from './userApi';\r\n\r\nexport class EditMeInfo extends React.Component {\r\n    private schema:ItemSchema[] = [\r\n        {name:'nick', type:'string'} as StringSchema,\r\n        {name:'icon', type:'image'} as ImageSchema\r\n    ];\r\n    private uiSchema:UiSchema = {\r\n        items: {\r\n            nick: {widget:'text', label:'别名', placeholder:'好的别名更方便记忆'} as UiTextItem,\r\n            icon: {widget:'image', label:'头像'} as UiImageItem,\r\n        }\r\n    }\r\n    @observable private data:any;\r\n\r\n    constructor(props:any) {\r\n        super(props);\r\n        let {nick, icon} = nav.user;\r\n        this.data = {\r\n            nick: nick,\r\n            icon: icon,\r\n        }\r\n    }\r\n\r\n    private onItemChanged = async (itemSchema:ItemSchema, newValue:any, preValue:any) => {\r\n        let {name} = itemSchema;\r\n        await userApi.userSetProp(name, newValue);\r\n        this.data[name] = newValue;\r\n        nav.user[name] = newValue;\r\n        nav.saveLocalUser();\r\n    }\r\n\r\n    render() {\r\n        return <Page header=\"个人信息\">\r\n            <Edit schema={this.schema} uiSchema={this.uiSchema}\r\n                data={this.data}\r\n                onItemChanged={this.onItemChanged} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {FetchError} from '../fetchError';\r\nimport { refetchApi } from '../net';\r\n\r\nexport interface FetchErrorProps extends FetchError {\r\n    clearError: ()=>void\r\n}\r\n\r\nexport default class FetchErrorView extends React.Component<FetchErrorProps, null> {\r\n    private reApi = async () => {\r\n        this.props.clearError();\r\n        const {channel, url, options, resolve, reject} = this.props;\r\n        await refetchApi(channel, url, options, resolve, reject);\r\n    }\r\n    private close = async () => {\r\n        this.props.clearError();\r\n    }\r\n    render() {\r\n        let {error, url} = this.props;\r\n            //let errMsg = fetchError.errorMsg;\r\n        let errContent;\r\n        if (typeof error === 'object') {\r\n            let err = [];\r\n            for (let i in error) {\r\n                err.push(<li key={i}><label>{i}</label><div>{error[i]}</div></li>);\r\n            }\r\n            errContent = <ul>{err}</ul>;\r\n        }\r\n        else {\r\n            errContent = <div>{error}</div>;\r\n        }\r\n        return <li>\r\n            <article className=\"page-container\">\r\n                <section>\r\n                    <div  className=\"va-error\">\r\n                        <div>网络出现问题</div>\r\n                        <div>点击重新访问</div>\r\n                        <div>url: {url}</div>\r\n                        {errContent}\r\n                        <div className=\"p-3\">\r\n                            <button type='button' onClick={this.reApi}>重新API</button>\r\n                            <button type='button' onClick={this.close}>关闭</button>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </article>\r\n        </li>;\r\n    }\r\n}\r\n","import {User, Guest, Unit} from './user';\r\n\r\nexport interface ClearableData {\r\n    clear(): void;\r\n}\r\n\r\nexport class Data<T> implements ClearableData {\r\n    private name: string;\r\n    private value?: T;\r\n    constructor(name: string) {this.name = name; }\r\n    get(): T {\r\n        if (this.value !== undefined) return this.value;\r\n        let v = localStorage.getItem(this.name);\r\n        return this.value = v === null ? undefined : JSON.parse(v); \r\n    }\r\n    set(value: T) {\r\n        if (!value) { this.clear(); return; }\r\n        this.value = value;\r\n        localStorage.setItem(this.name, JSON.stringify(value));\r\n    }\r\n    clear() {\r\n        this.value = undefined;\r\n        localStorage.removeItem(this.name);\r\n    }\r\n}\r\n\r\nexport class LocalData {\r\n    user = new Data<User>('user');\r\n    guest = new Data<Guest>('guest');\r\n    unit = new Data<Unit>('unit');\r\n    homeTabCur = new Data<number>('homeTabCur');\r\n\r\n    logoutClear() {\r\n        [\r\n            this.user,\r\n            this.unit,\r\n            this.homeTabCur\r\n        ].map(d => d.clear());\r\n    }\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import {CenterApi, User, appInFrame} from 'tonva';\r\nimport { string } from 'prop-types';\r\n\r\nclass MainApi extends CenterApi {\r\n    async stickies():Promise<any[]> {\r\n        return await this.get('sticky/list', {start:0, pageSize:30});\r\n    }\r\n\r\n    async ties():Promise<any[]> {\r\n        return await this.get('tie/list', {start:0, pageSize:30});\r\n    }\r\n\r\n    async apps(unit:number):Promise<any> {\r\n        return await this.get('tie/apps', {unit:unit});\r\n    }\r\n\r\n    async appApi(unit:number, app:number, apiName:string) {\r\n        return await this.get('tie/app-api', {unit:unit, app:app, apiName:apiName});\r\n    }\r\n\r\n    async userId(name:string):Promise<number> {\r\n        return await this.get('tie/user-id', {name:name});\r\n    }\r\n\r\n    async userAdminUnits():Promise<any[]> {\r\n        return await this.get('tie/user-admin-units', {});\r\n    }\r\n\r\n    async sendMessage(toUser:number, type:string, content:any) {\r\n        let {unit} = appInFrame;\r\n        let adminApp = 0;\r\n        return await this.post('tie/send-message', {\r\n            type: type, \r\n            fromUnit: unit, \r\n            fromApp: adminApp,\r\n            toUser: toUser, \r\n            content: content, \r\n        });\r\n    }\r\n\r\n    async unit(unit:number):Promise<any> {\r\n        return await this.get('unit/', {unit:unit});\r\n    }\r\n\r\n    async unitMemberCount(unit:number):Promise<number> {\r\n        return await this.get('unit/member-count', {unit:unit});\r\n    }\r\n\r\n    async unitAdmins(unit:number):Promise<any[]> {\r\n        return await this.get('unit/admins', {unit:unit});\r\n    }\r\n\r\n    async unitSetAdmin(fellow:number, unit:number, isOwner:number, isAdmin:number):Promise<any> {\r\n        return await this.post('unit/set-admin', {fellow:fellow, unit:unit, isOwner:isOwner, isAdmin:isAdmin});\r\n    }\r\n\r\n    async unitAddAdmin(user:string, unit:number, isOwner:number, isAdmin:number):Promise<any> {\r\n        return await this.post('unit/add-admin', {user:user, unit:unit, isOwner:isOwner, isAdmin:isAdmin});\r\n    }\r\n\r\n    async unitApps(unit:number):Promise<any[]> {\r\n        return await this.get('unit/apps', {unit:unit});\r\n    }\r\n\r\n    async unitAddApp(unit:number, app:number):Promise<number> {\r\n        let ret = await this.post('unit/add-app', {unit:unit, app:app});\r\n        return ret;\r\n    }\r\n\r\n    async unitDeleteApp(unit:number, app:number, deleted:number):Promise<void> {\r\n        await this.post('unit/delete-app', {unit:unit, app:app, deleted:deleted});\r\n    }\r\n\r\n    async unitChangeProp(unit:number, prop:string, value:any):Promise<void> {\r\n        await this.post('unit/change-prop', {unit:unit, prop:prop, value:value});\r\n    }\r\n\r\n    async searchApp(unit:number, key:string, pageStart:any, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/search-app', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n\r\n    async unitRoles(unit:number):Promise<any[]> {\r\n        return await this.get('unit/roles', {unit:unit});\r\n    }\r\n\r\n    async unitAddRole(unit:number, name:string, discription:string):Promise<number> {\r\n        return await this.post('unit/add-role', {unit:unit, name:name, discription:discription});\r\n    }\r\n\r\n    async unitRoleChangeProp(unit:number, role:number, prop:string, value:any):Promise<void> {\r\n        await this.post('unit/change-role-prop', {unit:unit, role:role, prop:prop, value:value});\r\n    }\r\n\r\n    async unitRoleApps(unit:number, role:number):Promise<any[]> {\r\n        return await this.get('unit/role-apps', {unit:unit, role:role});\r\n    }\r\n\r\n    async unitRoleSetApps(unit:number, role:number, apps:number[]):Promise<void> {\r\n        await this.post('unit/role-set-apps', {unit:unit, role:role, apps:apps});\r\n    }\r\n\r\n    async unitMembers(unit:number, role:number, key:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/members', {unit:unit, role:role, key, pageStart, pageSize});\r\n    }\r\n\r\n    async unitAssignMember(unit:number, member:number, assigned:string):Promise<void> {\r\n        await this.post('unit/assign-member', {unit:unit, member:member, assigned:assigned});\r\n    }\r\n\r\n    async unitMemberRoles(unit:number, member:number):Promise<any[]> {\r\n        return await this.get('unit/member-roles', {unit:unit, member:member});\r\n    }\r\n\r\n    async unitSetMemberRoles(unit:number, member:number, roles:number[]):Promise<void> {\r\n        await this.post('unit/member-set-roles', {unit:unit, member:member, roles:roles});\r\n    }\r\n\r\n    async unitUsers(unit:number, key:string, pageStart:number, pageSize:number):Promise<any> {\r\n        return await this.get('unit/users', {unit: unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitAppUsers(unit:number, key:string, pageStart:number, pageSize:number):Promise<any> {\r\n        return await this.get('unit/app-users', {unit: unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitOneAppUsers(unit:number, app:number, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/one-app-users', {unit: unit, app:app, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitOneUserApps(unit:number, user:number, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/one-user-apps', {unit: unit, user:user, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitAppEditUsers(unit:number, app:number, key:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/app-edit-users', {unit: unit, app:app, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitUserEditApps(unit:number, user:number, key:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/user-edit-apps', {unit: unit, user:user, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async bindAppUser(unit:number, app:number, user:number, bind:number):Promise<void> {\r\n        await this.post('unit/bind-app-user', {unit: unit, app:app, user:user, bind:bind});\r\n    }\r\n\r\n    async userFromKey(key:string):Promise<any> {\r\n        return await this.get('tie/user-from-key', {key:key});\r\n    }\r\n    async unitAddUser(unit:number, user:number) {\r\n        await this.post('unit/add-user', {unit:unit, user:user});\r\n    }\r\n}\r\n\r\nexport const mainApi = new MainApi('tv/', undefined);\r\n","import {CenterApi} from 'tonva';\r\n\r\nclass DevApi extends CenterApi {\r\n    async uqBuilderUrl():Promise<any> {\r\n        let ret = await this.get('uq-builder-url', undefined);\r\n        return ret;\r\n    }    \r\n    async counts(unit:number):Promise<any> {\r\n        return await this.get('counts', {unit:unit});\r\n    }\r\n    async app(id:number):Promise<any> {\r\n        return await this.get('app', {id:id});\r\n    }\r\n    async uq(id:number):Promise<any> {\r\n        return await this.get('uq', {id:id});\r\n    }\r\n    async server(id:number):Promise<any> {\r\n        return await this.get('server', {id:id});\r\n    }\r\n    async uqdb(id:number):Promise<any> {\r\n        return await this.get('uqdb', {id:id});\r\n    }\r\n    async apps(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('apps', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async uqs(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('uqs', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async buses(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('buses', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async servers(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('servers', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async uqdbs(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('uqdbs', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async services(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('services', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async saveApp(values:any):Promise<number> {\r\n        return await this.post('app-save', values);\r\n    }\r\n    async saveUq(values:any):Promise<number> {\r\n        return await this.post('uq-save', values);\r\n    }\r\n    async saveBus(values:any):Promise<number> {\r\n        return await this.post('bus-save', values);\r\n    }\r\n    async saveServer(values:any):Promise<number> {\r\n        return await this.post('server-save', values);\r\n    }\r\n    async saveUqdb(values:any):Promise<number> {\r\n        return await this.post('uqdb-save', values);\r\n    }\r\n    async saveService(values:any):Promise<number> {\r\n        return await this.post('service-save', values);\r\n    }\r\n    async delApp(unit:number,id:number):Promise<void> {\r\n        return await this.post('app-del', {unit:unit, id:id});\r\n    }\r\n    async delUq(unit:number,id:number):Promise<void> {\r\n        return await this.post('uq-del', {unit:unit, id:id});\r\n    }\r\n    async delBus(unit:number,id:number):Promise<void> {\r\n        return await this.post('bus-del', {unit:unit, id:id});\r\n    }\r\n    async delServer(unit:number,id:number):Promise<void> {\r\n        return await this.post('server-del', {unit:unit, id:id});\r\n    }\r\n    async delUqdb(unit:number,id:number):Promise<void> {\r\n        return await this.post('uqdb-del', {unit:unit, id:id});\r\n    }\r\n    async delService(unit:number,id:number):Promise<void> {\r\n        return await this.post('service-del', {unit:unit, id:id});\r\n    }\r\n    async loadAppUqs(app:number):Promise<any[]> {\r\n        return await this.get('app-uqs', {app: app});\r\n    }\r\n    async appBindUq(unit:number,app:number,uqs:{id:number, access:string[]}[]):Promise<void> {\r\n        let uqsText:string;\r\n        if (uqs !== undefined) {\r\n            uqsText = uqs.map(v => String(v.id)+'|'+v.access.join(',')).join(';');\r\n        }\r\n        await this.post('app-bind-uq', {unit:unit, app:app, uqs:uqsText});\r\n    }\r\n    async searchUq(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('uq-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async getMyUqs(unit:number):Promise<any[]> {\r\n        return await this.get('my-uqs', {unit:unit});\r\n    }\r\n    async searchApp(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('app-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async searchServer(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('server-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async searchUqdb(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('uqdb-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    //async loadAppServices(unit:number, app:number):Promise<any[]> {\r\n    //    return await this.get('app-services', {unit:unit, app:app});\r\n    //}\r\n    async loadUqServices(unit:number, uq:number):Promise<any[]> {\r\n        return await this.get('uq-services', {unit:unit, uq:uq});\r\n    }\r\n    async changeServiceProp(unit:number, service:number, prop:string, value:any):Promise<number> {\r\n        return await this.post('service-change-prop', {unit:unit, service:service, prop:prop, value:value});\r\n    }\r\n    async uqGetEntities(unit:number, uq:number):Promise<any[][]> {\r\n        return await this.get('uq-get-entities', {unit:unit, uq:uq});\r\n    }\r\n}\r\n\r\nexport const devApi = new DevApi('tv/dev/', undefined);\r\n","import {observable} from 'mobx';\r\nimport {UnitAdmin} from '../model';\r\nimport {mainApi} from '../api';\r\nimport {Store} from './index';\r\n\r\nexport class Admins {\r\n    private store:Store;\r\n    constructor(store:Store) {\r\n        this.store = store;\r\n    }\r\n\r\n    @observable cur: UnitAdmin = undefined;\r\n    @observable owners: UnitAdmin[] = undefined;\r\n    @observable admins: UnitAdmin[] = undefined;\r\n    @observable fellows: UnitAdmin[] = undefined;\r\n    \r\n    async load(): Promise<void> {\r\n        let unit = this.store.unit;\r\n        if (unit === undefined) return;\r\n        if (unit.id === undefined) return;\r\n        if (this.admins !== undefined) return;\r\n        let all = await mainApi.unitAdmins(unit.id);\r\n        let owners:UnitAdmin[] = [];\r\n        let admins:UnitAdmin[] = [];\r\n        let fellows:UnitAdmin[] = [];\r\n        all.forEach(ua => {\r\n            let {isOwner, isAdmin} = ua;\r\n            if (isOwner === 0 && isAdmin === 0)\r\n                fellows.push(ua);\r\n            else {\r\n                if (isOwner === 1) owners.push(ua);\r\n                if (isAdmin === 1) admins.push(ua);\r\n            }\r\n        });\r\n        this.owners = owners;\r\n        this.admins = admins;\r\n        this.fellows = fellows;\r\n    }\r\n\r\n    private removeCur(arr: UnitAdmin[]) {\r\n        let index = arr.findIndex(v => v.id===this.cur.id);\r\n        if (index >=0) arr.splice(index, 1);\r\n    }\r\n\r\n    async unitSetAdmin(isOwner:number, isAdmin:number) {\r\n        let cur = this.cur;\r\n        cur.isOwner = isOwner;\r\n        cur.isAdmin = isAdmin;\r\n        let fellowId = cur.id, unitId = this.store.unit.id;\r\n        await mainApi.unitSetAdmin(fellowId, unitId, isOwner, isAdmin);\r\n        this.removeCur(this.owners);\r\n        this.removeCur(this.admins);\r\n        this.removeCur(this.fellows);\r\n        if (isOwner === 0 && isAdmin === 0)\r\n            this.fellows.unshift(cur);\r\n        else {\r\n            if (isOwner === 1) this.owners.unshift(cur);\r\n            if (isAdmin === 1) this.admins.unshift(cur);\r\n        }\r\n    }\r\n\r\n    async addNew(user:string, isOwner:number, isAdmin:number):Promise<UnitAdmin> {\r\n        let admin = await mainApi.unitAddAdmin(user, this.store.unit.id, isOwner, isAdmin);\r\n        if (admin !== undefined) {\r\n            let cur = this.cur = admin;\r\n            this.removeCur(this.owners);\r\n            this.removeCur(this.admins);\r\n            this.removeCur(this.fellows);\r\n            if (isOwner === 0 && isAdmin === 0)\r\n                this.fellows.unshift(cur);\r\n            else {\r\n                if (isOwner === 1) this.owners.unshift(cur);\r\n                if (isAdmin === 1) this.admins.unshift(cur);\r\n            }\r\n        }\r\n        return admin;\r\n    }\r\n}\r\n","import {observable, autorun} from 'mobx';\r\nimport _ from 'lodash';\r\nimport {devApi} from '../api';\r\nimport {DevModel, Unit} from '../model';\r\nimport {Store} from './index';\r\n\r\ninterface Counts {\r\n    uq: number;\r\n    app: number;\r\n    bus: number;\r\n    server: number;\r\n    service: number;\r\n    //uqdb: number;\r\n}\r\n\r\nexport abstract class ObjItems<T extends DevModel.ObjBase> {\r\n    protected store:Store;\r\n    protected dev:Dev;\r\n    constructor(store:Store, dev:Dev) {\r\n        this.store = store;\r\n        this.dev = dev;\r\n    }\r\n\r\n    @observable items: T[] = undefined;\r\n    @observable cur: T = undefined;\r\n\r\n    async load():Promise<void> {\r\n         let ret = await this._load();\r\n         this.items = ret;\r\n    }\r\n    protected abstract _load():Promise<T[]>;\r\n    async saveCur(item:T):Promise<boolean> {\r\n        let values:any = {};\r\n        if (this.cur !== undefined) {\r\n            _.assign(values, this.cur, item);\r\n        }\r\n        else {\r\n            _.assign(values, item);\r\n        }\r\n\r\n        values.unit = item.unit = this.store.unit.id;\r\n        let id = await this._save(values);\r\n        if (this.cur === undefined) {\r\n            if (id === 0) return false;\r\n            values.id = id;\r\n            if (this.items !== undefined) this.items.unshift(values);\r\n            this._inc();\r\n            this.cur = observable(values);\r\n        }\r\n        else {\r\n            _.assign(this.cur, values);\r\n        }\r\n        return true;\r\n    }\r\n    async save(item:T):Promise<T> {\r\n        let values:any = {};\r\n        _.assign(values, item);\r\n\r\n        values.unit = item.unit = this.store.unit.id;\r\n        let id = await this._save(values);\r\n        if (id === 0) return;\r\n        values.id = id;\r\n        return values;\r\n    }\r\n    protected abstract _save(item:T):Promise<number>;\r\n    async del():Promise<void> {\r\n        let c = this.cur;\r\n        if (c === undefined) return;\r\n        let id = c.id;\r\n        await this._del(c);\r\n        if (this.items === undefined) return;\r\n        let index = this.items.findIndex(v => v.id === id);\r\n        if (index>=0) {\r\n            this.items.splice(index, 1);\r\n            this._dec();\r\n        }\r\n    }\r\n    protected abstract _del(item:T):Promise<void>;\r\n    protected abstract _inc();\r\n    protected abstract _dec();\r\n}\r\n\r\nclass Apps extends ObjItems<DevModel.App> {\r\n    @observable uqs: DevModel.UQ[] = undefined;\r\n    @observable searchedUqs: DevModel.UQ[] = undefined;\r\n    //@observable service: DevModel.Service = null;\r\n    protected async _load() {\r\n        return await devApi.apps(this.store.unit.id);\r\n    }\r\n    protected async _save(item:DevModel.App):Promise<number> {\r\n        return await devApi.saveApp(item);\r\n    }\r\n    protected async _del(item:DevModel.App):Promise<void> {\r\n        await devApi.delApp(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.app++; }\r\n    protected _dec() { this.dev.counts.app--; }\r\n\r\n    public async loadCurUqs() {\r\n        let ret = await devApi.loadAppUqs(this.cur.id);\r\n        this.uqs = ret;\r\n    }\r\n    public async searchUq(key:string) {\r\n        this.searchedUqs = await devApi.searchUq(this.store.unit.id, key, 0, searchPageSize);\r\n    }\r\n    public async appBindUq(uqs:{id:number, access:string[]}[], bind:boolean) {\r\n        let allUqs:{id:number, access:string[]}[] = this.uqs.map(v => {\r\n            let {id, access} = v;\r\n            return {id: id, access: [access]};\r\n        });\r\n        for (let uq of uqs) {\r\n            let index = allUqs.findIndex(v => v.id === uq.id);\r\n            if (bind === true) {\r\n                if (index < 0) allUqs.unshift(uq);\r\n            }\r\n            else {\r\n                allUqs.splice(index, 1);\r\n            }\r\n        }\r\n        await devApi.appBindUq(this.store.unit.id, this.cur.id, allUqs);\r\n        for (let uq of uqs) {\r\n            let index = this.uqs.findIndex(a => a.id === uq.id);\r\n            if (index>=0) this.uqs.splice(index, 1);\r\n            if (bind === true) {\r\n                if (this.searchedUqs !== undefined) {\r\n                    let find = this.searchedUqs.find(a => a.id === uq.id);\r\n                    if (find !== undefined) this.uqs.unshift(find);\r\n                }\r\n            }\r\n            else {\r\n                // 已经删除，不需要处理\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass Uqs extends ObjItems<DevModel.UQ> {\r\n    protected async _load() {\r\n        let ret = await devApi.uqs(this.store.unit.id);\r\n        return ret;\r\n    }\r\n    protected async _save(item:DevModel.UQ):Promise<number> {\r\n        //let {access} = item;\r\n        //if (!access) access = \"*\";\r\n        //let parts = access.split(',').map(v => v.trim()).filter(v => v!=='');\r\n        //item.access = parts.join(',');\r\n        return await devApi.saveUq(item);\r\n    }\r\n    protected async _del(item:DevModel.UQ):Promise<void> {\r\n        await devApi.delUq(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.uq++; }\r\n    protected _dec() { this.dev.counts.uq--; }\r\n}\r\n\r\nclass Buses extends ObjItems<DevModel.Bus> {\r\n    protected async _load() {\r\n        let ret = await devApi.buses(this.store.unit.id);\r\n        return ret;\r\n    }\r\n    protected async _save(item:DevModel.Bus):Promise<number> {\r\n        return await devApi.saveBus(item);\r\n    }\r\n    protected async _del(item:DevModel.Bus):Promise<void> {\r\n        await devApi.delBus(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.bus++; }\r\n    protected _dec() { this.dev.counts.bus--; }\r\n}\r\n\r\nclass Servers extends ObjItems<DevModel.Server> {\r\n    protected async _load() {\r\n        return await devApi.servers(this.store.unit.id);\r\n    }\r\n    protected async _save(item:DevModel.Server):Promise<number> {\r\n        return await devApi.saveServer(item);\r\n    }\r\n    protected async _del(item:DevModel.Server):Promise<void> {\r\n        await devApi.delServer(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.server++; }\r\n    protected _dec() { this.dev.counts.server--; }\r\n}\r\n/*\r\nclass Uqdbs extends ObjItems<DevModel.Uqdb> {\r\n    protected async _load() {\r\n        return await devApi.uqdbs(this.store.unit.id);\r\n    }\r\n    protected async _save(item:DevModel.Uqdb):Promise<number> {\r\n        return await devApi.saveUqdb(item);\r\n    }\r\n    protected async _del(item:DevModel.Uqdb):Promise<void> {\r\n        await devApi.delUqdb(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.uqdb++; }\r\n    protected _dec() { this.dev.counts.uqdb--; }\r\n}\r\n*/\r\nclass Services extends ObjItems<DevModel.Service> {\r\n    protected async _load() {\r\n        return await devApi.services(this.store.unit.id);\r\n    }\r\n    protected async _save(item:DevModel.Service):Promise<number> {\r\n        return await devApi.saveService(item);\r\n    }\r\n    protected async _del(item:DevModel.Service):Promise<void> {\r\n        await devApi.delService(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.service++; }\r\n    protected _dec() { this.dev.counts.service--; }\r\n    async changeProp(prop:string, value:any):Promise<number> {\r\n        let ret = await devApi.changeServiceProp(this.store.unit.id, this.cur.id, prop, value);\r\n        switch (prop) {\r\n            case 'url': this.cur.url = value; break;\r\n            case 'server': this.cur.server = value; break;\r\n            case 'db': this.cur.db = value; break;\r\n            case 'db_type': this.cur.db_type = value; break;\r\n            case 'connection': this.cur.connection = value; break;\r\n        }\r\n        return ret;\r\n    }\r\n    async loadUqServices(uq:number):Promise<void> {\r\n        let ret = await devApi.loadUqServices(this.store.unit.id, uq);\r\n        this.items = ret[0];\r\n    }\r\n}\r\n\r\nconst searchPageSize = 50;\r\ntype Search = (unit:number,key:string,pageStart:number,pageSize:number)=>Promise<any[]>;\r\nclass SearchItems<T extends DevModel.ObjBase> {\r\n    private store:Store;\r\n    private dev:Dev;\r\n    private search:(unit:number,key:string,pageStart:number,pageSize:number)=>Promise<any[]>;\r\n\r\n    constructor(store:Store, dev:Dev, search:Search) {\r\n        this.store = store;\r\n        this.dev = dev;\r\n        this.search = search;\r\n    }\r\n\r\n    @observable items: T[] = undefined;\r\n    allLoaded: boolean = false;\r\n    private key: string;\r\n    private pageStart = 0;\r\n\r\n    async first(key:string) {\r\n        this.key = key;\r\n        this.items = undefined;\r\n        this.allLoaded = false;\r\n        this.pageStart = 0;\r\n        await this.more();\r\n    }\r\n\r\n    async more():Promise<void> {\r\n        if (this.allLoaded === true) return;\r\n        let ret = await this.search(this.store.unit.id, this.key, this.pageStart, searchPageSize);\r\n        let len = ret.length;\r\n        if (len > searchPageSize) {\r\n            this.allLoaded = false;\r\n            --len;\r\n            ret.splice(len, 1);\r\n        }\r\n        else {\r\n            this.allLoaded = true;\r\n        }\r\n        if (len > 0) {\r\n            this.pageStart = ret[len-1].id;\r\n            if (this.items === undefined)\r\n                this.items = ret;\r\n            else\r\n                this.items.push(...ret);\r\n        }\r\n        else {\r\n            this.items = [];\r\n        }\r\n    }\r\n}\r\n\r\nexport class Dev {\r\n    private store:Store;\r\n    constructor(store:Store) {\r\n        this.store = store;\r\n        this.apps = new Apps(store, this);\r\n        this.uqs = new Uqs(store, this);\r\n        this.buses = new Buses(store, this);\r\n        this.servers = new Servers(store, this);\r\n        //this.uqdbs = new Uqdbs(store, this);\r\n        this.services = new Services(store, this);\r\n        this.searchApp = new SearchItems<DevModel.App>(store, this, devApi.searchApp.bind(devApi));\r\n        this.searchUq = new SearchItems<DevModel.UQ>(store, this, devApi.searchUq.bind(devApi));\r\n        this.searchServer = new SearchItems<DevModel.Server>(store, this, devApi.searchServer.bind(devApi));\r\n    }\r\n\r\n    @observable counts:Counts = undefined;\r\n    apps:Apps = undefined;\r\n    uqs:Uqs = undefined;\r\n    buses:Buses = undefined;\r\n    servers:Servers = undefined;\r\n    //uqdbs:Uqdbs = undefined;\r\n    services:Services = undefined;\r\n\r\n    searchApp:SearchItems<DevModel.App> = undefined;\r\n    searchUq:SearchItems<DevModel.UQ> = undefined;\r\n    searchServer:SearchItems<DevModel.Server> = undefined;\r\n    searchUqdb:SearchItems<DevModel.Uqdb> = undefined;\r\n    \r\n    async loadCounts(): Promise<void> {\r\n        let {unit} = this.store;\r\n        this.counts = await devApi.counts(unit.id);\r\n    }\r\n}\r\n","import {CacheIds} from 'tonva';\r\nimport {Id, Unit, DevModel} from '../model';\r\nimport {mainApi, devApi} from '../api';\r\n\r\nexport class CacheUnits extends CacheIds<Unit> {\r\n    protected async _loadIds(ids:number[]):Promise<Unit[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<Unit> {\r\n        return await mainApi.unit(id);\r\n    }\r\n}\r\n\r\nexport class CacheUqs extends CacheIds<DevModel.UQ> {\r\n    protected async _loadIds(ids:number[]):Promise<DevModel.UQ[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<DevModel.UQ> {\r\n        return await devApi.uq(id);\r\n    }\r\n}\r\n\r\nexport class CacheApps extends CacheIds<DevModel.App> {\r\n    protected async _loadIds(ids:number[]):Promise<DevModel.App[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<DevModel.App> {\r\n        return await devApi.app(id);\r\n    }\r\n}\r\n\r\nexport class CacheServers extends CacheIds<DevModel.Server> {\r\n    protected async _loadIds(ids:number[]):Promise<DevModel.Server[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<DevModel.Server> {\r\n        return await devApi.server(id);\r\n    }\r\n}\r\n","import {observable, autorun} from 'mobx';\r\nimport _ from 'lodash';\r\nimport {appInFrame, host} from 'tonva';\r\nimport {mainApi, devApi} from '../api';\r\nimport {Unit, UnitApps, App, Api, UnitAdmin, UnitApp, Role, RoleMember} from '../model';\r\nimport {Admins} from './admins';\r\nimport {Dev} from './dev';\r\nimport {CacheUnits, CacheUqs, CacheApps, CacheServers} from './cacheIds';\r\n\r\nexport class Store {\r\n    private get unitId():number {return appInFrame.unit;};\r\n    admins:Admins;\r\n    dev:Dev;\r\n    cacheUnits: CacheUnits;\r\n    cacheUqs: CacheUqs;\r\n    cacheApps: CacheApps;\r\n    cacheServers: CacheServers;\r\n    uqServer: string;\r\n\r\n    @observable unit: Unit;\r\n    @observable memberCount: number;\r\n    @observable apps: UnitApp[];\r\n    @observable role:Role;\r\n    @observable roles: Role[];\r\n    @observable roleApps: UnitApp[];\r\n    @observable roleMember: RoleMember;\r\n    @observable roleMembers: RoleMember[];\r\n    @observable memberRoles: Role[];\r\n\r\n    init() {\r\n        this.unit = undefined;\r\n        this.admins = new Admins(this);\r\n        this.dev = new Dev(this);\r\n        this.cacheUnits = new CacheUnits();\r\n        this.cacheUqs = new CacheUqs();\r\n        this.cacheApps = new CacheApps();\r\n        this.cacheServers = new CacheServers();\r\n    }\r\n\r\n    logout() {\r\n        //meInFrame.app = undefined;\r\n        appInFrame.hash = undefined;\r\n        //let unitId = process.env.REACT_APP_DEBUG_UNITID;\r\n        //if (unitId !== undefined)\r\n        //    meInFrame.unit = Number(unitId);\r\n        appInFrame.unit = undefined;\r\n        this.init();\r\n        this.memberCount = undefined;\r\n        this.apps = undefined;\r\n        this.role = undefined;\r\n        this.roles = undefined;\r\n        this.roleApps = undefined;\r\n        this.roleMember = undefined;\r\n        this.roleMembers = undefined;\r\n        this.memberRoles = undefined;\r\n    }\r\n\r\n    setRole(role:Role) {\r\n        if (this.role === role) return;\r\n        this.role = role;\r\n        this.roleApps = undefined;\r\n        this.roleMember = undefined;\r\n        this.roleMembers = undefined;\r\n        this.memberRoles = undefined;\r\n    }\r\n\r\n    setRoleUser(user:RoleMember) {\r\n        if (this.roleMember === user) return;\r\n        this.roleMember = user;\r\n        this.memberRoles = undefined;\r\n    }\r\n\r\n    async unitChangeProp(prop:string, value:any):Promise<void> {\r\n        await mainApi.unitChangeProp(this.unit.id, prop, value);\r\n        this.unit[prop] = value;\r\n    }\r\n\r\n    async loadApps(): Promise<void> {\r\n        if (this.apps !== undefined) return;\r\n        this.apps = await mainApi.unitApps(this.unitId);\r\n    }\r\n\r\n    async loadUnit(): Promise<void> {\r\n        if (this.unitId === undefined) return;\r\n        let ret = await mainApi.unit(this.unitId);\r\n        this.unit = ret;\r\n        console.log(\"loadUnit unit=%s\", ret);\r\n        this.memberCount = await mainApi.unitMemberCount(this.unitId);\r\n        let uqServer = await devApi.uqBuilderUrl();\r\n        let {url, urlDebug} = uqServer;\r\n        this.uqServer = host.getUrlOrDebug(url, urlDebug);\r\n        console.log(\"uq-build: %s\", JSON.stringify(this.uqServer));\r\n    }\r\n\r\n    async stopUnitApp(appId:number): Promise<void> {\r\n        await mainApi.unitDeleteApp(this.unit.id, appId, 1);\r\n        let app = this.apps.find(v => v.id === appId);\r\n        app.inUnit = 0;\r\n    }\r\n\r\n    async restoreUnitApp(appId:number): Promise<number> {\r\n        let ret = await mainApi.unitAddApp(this.unit.id, appId);\r\n        if (ret <= 0) return ret;\r\n        let app = this.apps.find(v => v.id === appId);\r\n        app.inUnit = 1;\r\n        return 1;\r\n    }\r\n\r\n    async addUnitApp(app:UnitApp): Promise<number> {\r\n        let ret = await mainApi.unitAddApp(this.unit.id, app.id);\r\n        if (ret <= 0) return ret;\r\n        this.apps.push(app);\r\n        return 1;\r\n    }\r\n\r\n    async loadRoles(): Promise<void> {\r\n        if (this.roles !== undefined) return;\r\n        let ret = await mainApi.unitRoles(this.unit.id);\r\n        ret.forEach(v => {\r\n            switch (v.id) {\r\n                case 1: \r\n                    v.name= '访客';\r\n                    v.discription = '可以获取开放信息';\r\n                    break;\r\n                case 2: \r\n                    v.name= '普通';\r\n                    v.discription = '能访问最基本的功能';\r\n                    break;\r\n            }\r\n        });\r\n        this.roles = ret;\r\n    }\r\n\r\n    async unitAddRole(name:string, discription:string): Promise<number> {\r\n        let id = await mainApi.unitAddRole(this.unit.id, name, discription);\r\n        if (id > 0) {\r\n            this.roles.push({\r\n                id: id,\r\n                name: name,\r\n                discription: discription,\r\n                count: undefined,\r\n            });\r\n        }\r\n        return id;\r\n    }\r\n\r\n    async roleChangeProp(prop:string, value:any):Promise<void> {\r\n        await mainApi.unitRoleChangeProp(this.unit.id, this.role.id, prop, value);\r\n        this.role[prop] = value;\r\n    }\r\n\r\n    async loadRoleApps():Promise<void> {\r\n        let ret = await mainApi.unitRoleApps(this.unit.id, this.role.id);\r\n        this.roleApps = ret.map(v => {\r\n            return this.apps.find(app=>app.id === v.id);\r\n        });\r\n    }\r\n\r\n    async setRoleApps(apps:UnitApp[]) {\r\n        await mainApi.unitRoleSetApps(this.unit.id, this.role.id, apps.map(v=>v.id));\r\n        this.roleApps = apps;\r\n    }\r\n\r\n    async loadMembers():Promise<void> {\r\n        let ret = await mainApi.unitMembers(this.unit.id, this.role === undefined? 0:this.role.id, undefined, 0, 100);\r\n        this.roleMembers = ret;\r\n    }\r\n\r\n    async unitAssignMember(assigned:string):Promise<void> {\r\n        await mainApi.unitAssignMember(this.unit.id, this.roleMember.id, assigned);\r\n        this.roleMember.assigned = assigned;\r\n    }\r\n\r\n    async loadMemberRoles():Promise<void> {\r\n        let ret = await mainApi.unitMemberRoles(this.unit.id, this.roleMember.id);\r\n        let roles:Role[] = ret.map(v => {\r\n            let rId = v.id;\r\n            let role = this.roles.find(r => r.id === rId);\r\n            return _.clone(role);\r\n        });\r\n        this.memberRoles = roles;\r\n    }\r\n\r\n    async setMemberRoles(memberRoles:Role[]) {\r\n        await mainApi.unitSetMemberRoles(this.unit.id, this.roleMember.id, memberRoles.map(v=>v.id));\r\n        this.roles.forEach(role => {\r\n            let rId = role.id;\r\n            let org = this.memberRoles.find(v => v.id === rId);\r\n            let cur = memberRoles.find(v => v.id === rId);\r\n            if (org !== undefined) {\r\n                if (cur !== undefined) return;\r\n                role.count--;\r\n                return;\r\n            }\r\n            if (cur === undefined) return;\r\n            role.count++;\r\n        });\r\n        this.memberRoles = memberRoles;\r\n    }\r\n};\r\n\r\nexport const store = new Store();\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page, Context, Form, Schema, UiSchema, UiTextItem} from 'tonva';\r\nimport {store} from '../store';\r\n\r\n@observer\r\nexport default class NewFellowPage extends React.Component<{isOwner:boolean, isAdmin:boolean}> {\r\n    //private form: TonvaForm;\r\n    private schema: Schema = [\r\n        {name:'user', type:'string', required:true},\r\n        {name:'submit', type:'submit'}\r\n    ]\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            user: {widget:'text', maxLength: 100, placeholder: '用户名', label: '管理员'} as UiTextItem,\r\n            submit: {widget:'button', label: '添加', className: 'btn btn-primary'}\r\n        }\r\n    }\r\n    /*\r\n    private formRows:FormRow[] = [\r\n        {\r\n            label: '用户名',\r\n            field: {\r\n                type: 'string',\r\n                name: 'user',\r\n                required: true,\r\n                maxLength: 100,\r\n            },\r\n            face: {\r\n                type: 'string',\r\n                placeholder: '用户名',\r\n            }\r\n        },\r\n    ];\r\n    private schema:FormSchema = new FormSchema({\r\n        fields: [\r\n            {\r\n                type: 'string',\r\n                name: 'user',\r\n                placeholder: '用户名',\r\n                label: '邀请成员',\r\n                rules: ['required', 'maxlength:100']\r\n            },\r\n        ],\r\n        onSumit: this.onSendInvitation,\r\n        submitText: '邀请'\r\n    });\r\n    */\r\n    private onSendInvitation = async (name:string, context:Context): Promise<string> => {\r\n        let {isOwner, isAdmin} = this.props;\r\n        let user = context.form.data['user'];\r\n        let ret = await store.admins.addNew(user, isOwner?1:0, isAdmin?1:0);\r\n        if (ret !== undefined) {\r\n            nav.pop();\r\n            return;\r\n        }\r\n        return user + '没有关注小号';\r\n        /*\r\n        let msg = {a: 1, b: 'ddd'};\r\n        let toName = values['user'];\r\n        let userId = await mainApi.userId(toName);\r\n        if (userId === 0) {\r\n            this.form.formView.setError('user', '\\'' + toName +  '\\' 不存在');\r\n            return;\r\n        }\r\n        await mainApi.sendMessage(userId, 'unit-follow-invite', msg);\r\n        nav.replace(<Page header='完成' back=\"close\">\r\n            <Card>\r\n                <CardBody>\r\n                    <CardTitle>邀请成员</CardTitle>\r\n                    <CardText>已发送给{toName}，请等待确认。</CardText>\r\n                    <Button color='primary' onClick={()=>nav.back()}>完成</Button>\r\n                </CardBody>\r\n            </Card>\r\n        </Page>);\r\n        */\r\n    }\r\n    render() {\r\n        let {isOwner, isAdmin} = this.props;\r\n        let caption = isOwner? \"高管\" : \"管理员\";\r\n        return <Page header={'新增' + caption}>\r\n            <div className=\"container\">\r\n                <div className='my-4 text-info'>\r\n                    只有关注本小号的用户，才能成为{caption}\r\n                </div>\r\n                <Form schema={this.schema} uiSchema={this.uiSchema} onButtonClick={this.onSendInvitation}/>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n// <ValidForm formSchema={this.schema} />\r\n//<TonvaForm ref={f=>this.form=f} formRows={this.formRows} onSubmit={this.onSendInvitation} />\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page, Schema, UiSchema, ItemSchema, UiCheckItem, UiButton, ButtonSchema, Form, Context, Image} from 'tonva';\r\nimport {store} from '../store';\r\nimport { UnitAdmin } from '../model/index';\r\n//import {mainApi} from '../api';\r\n//, ValidForm, FormSchema, FormFields, Field\r\n\r\n@observer\r\nexport default class EditAdmin extends React.Component {\r\n    private onSubmit = async (name:string, context:Context) => {\r\n        let {isOwner, isAdmin} = context.form.data;\r\n        await store.admins.unitSetAdmin(isOwner, isAdmin);\r\n        nav.pop();\r\n    }\r\n    render() {\r\n        let {unit} = store;\r\n        let {isRoot, isOwner, isAdmin} = unit;\r\n        let unitAdmin = store.admins.cur;\r\n        let owner:ItemSchema = {name: 'isOwner', type: 'boolean'};\r\n        let admin:ItemSchema = {name: 'isAdmin', type: 'boolean'};\r\n        let submit:ButtonSchema = {name: 'submit', type: 'submit'};\r\n        let schema:ItemSchema[];\r\n        if (isRoot === 1) schema = [owner, admin, submit];\r\n        else if (isOwner === 1) schema = [admin, submit];\r\n        let data = {\r\n            isOwner: unitAdmin.isOwner,\r\n            isAdmin: unitAdmin.isAdmin,\r\n        };\r\n\r\n        let uiSchema = {\r\n            items: {\r\n                'isOwner': {widget: 'checkbox', label: '高管', trueValue:1, falseValue:0} as UiCheckItem,\r\n                'isAdmin': {widget: 'checkbox', label: '管理员', trueValue:1, falseValue:0} as UiCheckItem,\r\n                'submit': {widget: 'button', label: '提交', className: 'btn btn-primary'} as UiButton,\r\n            }\r\n        };\r\n\r\n        return <Page header='权限'>\r\n            <div className=\"px-3\">\r\n                <Fellow {...store.admins.cur} />\r\n                <Form schema={schema} uiSchema={uiSchema} formData={data} onButtonClick={this.onSubmit} />\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n\r\nconst Fellow = (props:UnitAdmin) => {\r\n    let {name, nick, icon} = props;\r\n    //<img className='w-75' src={icon || process.env.REACT_APP_DEFAULT_ICON} />\r\n    return <div>\r\n        <div className='d-flex my-4'>\r\n            <Image className=\"w-3c h-3c mr-3\" src={icon} />\r\n            <div className=\"\">\r\n                <h4 className='text-dark'>{name}</h4>\r\n                {nick && <h6><small className='text-secondary'>{nick}</small></h6>}\r\n            </div>\r\n        </div>\r\n        <hr className='mb-4' />\r\n    </div>;\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page, Image} from 'tonva';\r\nimport {UnitApps, UnitAdmin} from '../model';\r\nimport {store} from '../store';\r\nimport NewFellow from './NewFellow';\r\nimport EditAdmin from './EditAdmin';\r\nimport {LMR, Badge, List} from 'tonva';\r\n\r\n@observer\r\nexport default class AdministorsPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.admins.load();\r\n    }\r\n\r\n    onNewFellow() {\r\n        //nav.push(<NewFellow />);\r\n    }\r\n    onItemClick(ua:UnitAdmin) {\r\n        store.admins.cur = ua;\r\n        nav.push(<EditAdmin />);\r\n    }\r\n    private row = ({icon, name, nick}:UnitAdmin) => {\r\n        let content = nick?\r\n            <><b>{nick}</b> &nbsp; <small className=\"text-muted\">{name}</small></>\r\n            :\r\n            <b>{name}</b>;\r\n        let left = <Image className=\"w-2-5c h-2-5c\" src={icon} />; \r\n        return <LMR className=\"py-2 px-3 align-items-stretch\" left={left}>\r\n            <div className=\"px-3\">{content}</div>\r\n        </LMR>;\r\n    }\r\n\r\n    private onNewOwner = (evt: React.MouseEvent<HTMLAnchorElement>) => {\r\n        this.newAdmin(evt, true, false);\r\n    }\r\n\r\n    private onNewAdmin = (evt: React.MouseEvent<HTMLAnchorElement>) => {\r\n        this.newAdmin(evt, false, true);\r\n    }\r\n\r\n    private newAdmin(evt: React.MouseEvent<HTMLAnchorElement>, isOwner:boolean, isAdmin:boolean) {\r\n        evt.preventDefault();\r\n        nav.push(<NewFellow isOwner={isOwner} isAdmin={isAdmin} />);\r\n    } \r\n    render() {\r\n        //let n = nav;\r\n        //let me = n.local.user.get().id;\r\n        let {unit} = store;\r\n        if (unit === undefined) return;\r\n        let {owners, admins, fellows} = store.admins;\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.onNewFellow}>新增成员</button>;\r\n\r\n        let showOwners = false, showAdmins = false;\r\n        let ownersView, adminsView, fellowsView;\r\n        if (unit.isRoot === 1) {\r\n            showOwners = true;\r\n            showAdmins = true;\r\n        }\r\n        if (unit.isOwner === 1) showAdmins = true;\r\n        if (showOwners === true) {\r\n            let header = <LMR \r\n                className=\"px-3 py-1 small\"\r\n                left=\"高管\" \r\n                right={<a className=\"small\" href='#' onClick={this.onNewOwner}>新增</a>} />;\r\n            ownersView = <List \r\n                className=\"my-4\"\r\n                header={header} items={owners}\r\n                none=\"[无]\"\r\n                item={{onClick: this.onItemClick, render: this.row}}\r\n            />;\r\n        }\r\n        if (showAdmins === true) {\r\n            let header = <LMR \r\n                className=\"px-3 py-1 small\"\r\n                left=\"管理员\" \r\n                right={<a className=\"small\" href='#' onClick={this.onNewAdmin}>新增</a>} />;\r\n            adminsView = <List \r\n                className='my-4' \r\n                header={header} items={admins} \r\n                none='[无]'\r\n                item={{onClick: this.onItemClick, render: this.row}}\r\n            />;\r\n        }\r\n        return <Page header=\"管理员\" right={right}>\r\n            {ownersView}\r\n            {adminsView}\r\n            <div className=\"my-4 p-3\">\r\n                <div className=\"ml-2 mb-2\">说明</div>\r\n                <div className=\"\">\r\n                    <ul className=\"pl-2\">\r\n                        <li className=\"card-text\">管理组包括主人、高管、管理员</li>\r\n                        <li className=\"card-text\">小号主人可以增减高管</li>\r\n                        <li className=\"card-text\">高管可以增减管理员</li>\r\n                        <li className=\"card-text\">管理员可以管理小号，程序的开发，以及用户</li>\r\n                        <li className=\"card-text\">开发号高管可以增减编辑APP，UQ，Server，Service</li>\r\n                        <li className=\"card-text\">开发号管理员可以编译指定UQ，BUS</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {EasyDate} from 'tonva';\r\n\r\nexport interface IdDatesProps {\r\n    date_init: Date;\r\n    date_update: Date;\r\n}\r\n\r\nexport class IdDates extends React.Component<IdDatesProps> {\r\n    render() {\r\n        let {date_init, date_update} = this.props;\r\n        return <small className=\"text-muted\">\r\n            上次修改: <EasyDate date={date_update}/>\r\n            <i className=\"fa fa-fw\" />\r\n            创建: <EasyDate date={date_init}/>\r\n        </small>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\n\r\nexport function span(\r\n    isLink:boolean,\r\n    className:string, \r\n    onClick:(evt:React.MouseEventHandler<HTMLElement>)=>void,\r\n    content:any): JSX.Element\r\n{\r\n    let tag:string;\r\n    let props:any;\r\n    if (isLink === true) {\r\n        tag = 'a';\r\n        props = {\r\n            className: classNames(className, 'cursor-pointer'),\r\n            onClick: onClick,\r\n            href: '#',\r\n        }\r\n    }\r\n    else {\r\n        tag = 'span';\r\n        props = {\r\n            className: className,\r\n        }\r\n    }\r\n    return React.createElement(tag, props, content);\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {Prop, ListProp, Media, PropGrid} from 'tonva';\r\nimport {nav, Page}  from 'tonva';\r\nimport {store} from '../store';\r\nimport {span} from './span';\r\n\r\nexport interface UnitLinkProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class UnitSpan extends React.Component<UnitLinkProps> {\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<UnitInfo id={this.props.id} />);\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        if (id === undefined) return null;\r\n        let unit = store.cacheUnits.get(id);\r\n        let content;\r\n        let {name, nick, discription} = unit;\r\n        let disc = discription && '- ' + discription;\r\n        if (nick) {\r\n            content = <>{nick} &nbsp; <small className=\"text-muted\">{name} {disc}</small></>;\r\n        }\r\n        else if (name) {\r\n            content = <>{name} &nbsp; <small className=\"text-muted\">{disc}</small></>;\r\n        }\r\n        else {\r\n            content = id;\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\n@observer\r\nexport class UnitName extends React.Component<UnitLinkProps> {\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        if (id === undefined) return null;\r\n        let unit = store.cacheUnits.get(id);\r\n        let {name} = unit;\r\n        return <>{name}</>;\r\n    }\r\n}\r\n\r\nclass UnitInfo extends React.Component<UnitLinkProps> {\r\n    private rows:Prop[];\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        let unit = store.cacheUnits.get(this.props.id);\r\n        let {name, nick, icon, discription} = unit;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={icon} main={name} discription={discription} />},\r\n            '',\r\n        ];\r\n        return <Page header={'小号 - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n","export const appIcon = process.env.REACT_APP_ICON;\r\nexport const appItemIcon = process.env.REACT_APP_ITEM_ICON;\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport * as classNames from 'classnames';\r\nimport {Prop, Media, PropGrid} from 'tonva';\r\nimport {nav, Page}  from 'tonva';\r\nimport {appIcon, appItemIcon} from 'consts';\r\nimport {store} from 'store';\r\nimport {IdDates} from './idDates';\r\nimport {span} from './span';\r\nimport {UnitSpan} from './unitSpan';\r\n\r\nexport interface UqLinkProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class UqSpan extends React.Component<UqLinkProps> {\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<UqInfo id={this.props.id} />);\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, className, isLink} = this.props;\r\n        let api = store.cacheUqs.get(id);\r\n        let content;\r\n        if (api === null) {\r\n            content = id;\r\n        }\r\n        else {\r\n            let {name, discription} = api;\r\n            let disc = discription && '- ' + discription;\r\n            if (name !== undefined) {\r\n                content = <React.Fragment>{name} &nbsp; <small className=\"text-muted\">{disc}</small></React.Fragment>;\r\n            }\r\n            else {\r\n                content = id;\r\n            }\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\n@observer\r\nclass UqInfo extends React.Component<UqLinkProps> {\r\n    private rows:Prop[];\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        let uq = store.cacheUqs.get(this.props.id);\r\n        let {name, discription, unit, date_init, date_update} = uq;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={name} discription={disp} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n        ];\r\n        return <Page header={'UQ - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport {Prop, ListProp, Media, PropGrid} from 'tonva';\r\nimport {nav, Page}  from 'tonva';\r\nimport {store} from '../store';\r\nimport {devApi} from '../api';\r\nimport {span} from './span';\r\nimport {IdDates} from './idDates';\r\nimport {UnitSpan} from './unitSpan';\r\n\r\nexport interface AppSpanProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class AppSpan extends React.Component<AppSpanProps> {\r\n    /*\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.onClick = this.onClick.bind(this);\r\n    }\r\n    componentWillMount() {\r\n        let {id} = this.props;\r\n        store.cacheApps.get(id);\r\n    }\r\n    */\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<AppInfo id={this.props.id} />)\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        let app = store.cacheApps.get(id);\r\n        let content;\r\n        if (app === null) {\r\n            content = id;\r\n        }\r\n        else {\r\n            let {name, icon, discription} = app;\r\n            let isPublic = app.public;\r\n            let disc = discription && '- ' + discription;\r\n            if (name !== undefined) {\r\n                content = <React.Fragment>{name} &nbsp; <small className=\"text-muted\">{disc}</small></React.Fragment>;\r\n            }\r\n            else {\r\n                content = id;\r\n            }\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\n\r\n@observer\r\nclass AppInfo extends React.Component<AppSpanProps> {\r\n    private rows:Prop[];\r\n    @observable private apis:ListProp = {\r\n        label: '关联API', type: 'list', list: undefined, row: AppRow\r\n    };\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    async componentDidMount() {\r\n        this.apis.list = await devApi.loadAppUqs(this.props.id);\r\n    }\r\n    render() {\r\n        let app = store.cacheApps.get(this.props.id);\r\n        let {unit, name, discription, icon, date_init, date_update} = app;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={icon} main={name} discription={disp} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            this.apis,\r\n        ];\r\n        return <Page header={'APP - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass AppRow extends React.Component<any> {\r\n    render() {\r\n        let {name, discription} = this.props;\r\n        let disp;\r\n        if (discription) disp = <div className=\"small text-muted\">{discription}</div>;\r\n        return <div className='form-control-plaintext'>\r\n            <div>{name}</div>\r\n            {disp}\r\n        </div>\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport * as classNames from 'classnames';\r\nimport {Prop, ListProp, Media, PropGrid} from 'tonva';\r\nimport {nav, Page}  from 'tonva';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {store} from '../store';\r\nimport {DevModel} from '../model';\r\nimport {devApi} from '../api';\r\nimport {span} from './span';\r\nimport {IdDates} from './idDates';\r\nimport {UnitSpan} from './unitSpan';\r\n\r\nexport interface ServerSpanProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class ServerSpan extends React.Component<ServerSpanProps> {\r\n    /*\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.onClick = this.onClick.bind(this);\r\n    }\r\n    componentWillMount() {\r\n        let {id} = this.props;\r\n        store.cacheServers.get(id);\r\n    }\r\n    */\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<ServerInfo id={this.props.id} />)\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        let server = store.cacheServers.get(id);\r\n        let content;\r\n        if (server === null) {\r\n            content = id;\r\n        }\r\n        else {\r\n            let {cloud, ip, discription} = server;\r\n            if (discription !== undefined) {\r\n                content = <React.Fragment>{discription} &nbsp; <small className=\"text-muted\">{ip}</small></React.Fragment>;\r\n            }\r\n            else {\r\n                content = id;\r\n            }\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\nclass ServerInfo extends React.Component<ServerSpanProps> {\r\n    private rows:Prop[];\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        let server = store.cacheServers.get(this.props.id);\r\n        let {discription, cloud, ip, unit, date_init, date_update} = server;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={discription} discription={ip} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            {type: 'string', label: '云服务', name: 'cloud'},\r\n        ];\r\n        return <Page header={'服务器 - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {nav, Page} from 'tonva';\r\n\r\ninterface StringValueEditProps {\r\n    title: string;\r\n    onChanged:(value:any, orgValue:any)=>Promise<string|void>;\r\n    value?: any;\r\n    buttonText?: string;\r\n    info?: string;\r\n}\r\ninterface StringValueEditState {\r\n    disabled: boolean;\r\n    error?: string;\r\n}\r\n\r\nexport class StringValueEdit extends React.Component<StringValueEditProps, StringValueEditState> {\r\n    //private input:HTMLInputElement;\r\n    protected value: string;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            disabled: true,\r\n        };\r\n    }\r\n    /*\r\n    private ref = (input:HTMLInputElement) => {\r\n        if (!input) return;\r\n        input.value = this.props.value || '';\r\n        this.input = input;\r\n    }*/\r\n    private onChange = (evt:React.FormEvent<HTMLInputElement>) => {\r\n        let val = this.props.value;\r\n        let org = val && val.trim();\r\n        this.value = evt.currentTarget.value.trim();\r\n        this.setState({\r\n            disabled: org === this.value\r\n        });\r\n        \r\n    }\r\n    protected onSubmit = async () => {\r\n        let val = this.props.value;\r\n        let org = val && val.trim();\r\n        let v = this.value; // this.input.value.trim();\r\n        let onChanged = this.props.onChanged;\r\n        if (onChanged !== undefined) {\r\n            let ret = await onChanged(v, org);\r\n            if (typeof ret === 'string') {\r\n                this.setState({error: ret});\r\n                return;\r\n            }\r\n            nav.pop();\r\n        }\r\n    }\r\n    protected renderControl() {\r\n        return <input className=\"form-control w-100\" type=\"text\"\r\n            // ref={this.ref}\r\n            defaultValue={this.props.value}\r\n            onChange={this.onChange} />\r\n    }\r\n    render() {\r\n        let {title, onChanged, buttonText, info, value} = this.props;\r\n        let {disabled, error} = this.state;\r\n        let right = <button\r\n            className=\"btn btn-success btn-sm\"\r\n            disabled={disabled}\r\n            onClick={this.onSubmit}\r\n        >\r\n            {buttonText||'保存'}\r\n        </button>;\r\n        let errorDiv;\r\n        if (error !== undefined) errorDiv = <div className='text-danger'>{error}</div>;\r\n        return <Page header={title} right={right}>\r\n            <div className=\"my-4 mx-3\">\r\n                {this.renderControl()}\r\n                {errorDiv}\r\n                <small className=\"d-block mt-2 text-muted\">{info}</small>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n\r\nexport class TextValueEdit extends StringValueEdit {\r\n    /*\r\n    private textArea:HTMLTextAreaElement;\r\n    private refTextArea = (textArea:HTMLTextAreaElement) => {\r\n        if (!textArea) return;\r\n        textArea.value = this.props.value || '';\r\n        this.textArea = textArea;\r\n    }\r\n    */\r\n    private onTextAreaChange = (evt:React.FormEvent<HTMLTextAreaElement>) => {\r\n        let val = this.props.value;\r\n        let org = val && val.trim();\r\n        this.value = evt.currentTarget.value.trim();\r\n        this.setState({\r\n            disabled: org === this.value\r\n        })\r\n    }\r\n    protected renderControl() {\r\n        return <textarea className=\"form-control w-100\" rows={8}\r\n            // ref={this.refTextArea}\r\n            defaultValue={this.props.value}\r\n            onChange={this.onTextAreaChange} />\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { nav, Page } from 'tonva';\r\nimport { SearchBox, List } from 'tonva';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport interface IdPickPageProps {\r\n    caption: string;\r\n    searchPlaceHolder?: string;\r\n    candidateItems: ((params:any, key:string) => Promise<any[]>) | any[];\r\n    moreCandidates: () => Promise<void>;\r\n    row: (item:any, index:number) => JSX.Element;\r\n    idFromItem: (item:any) => number;\r\n    resolve: (item?: any) => void;\r\n    params: any;\r\n}\r\n\r\n@observer\r\nexport class IdPickPage extends React.Component<IdPickPageProps> {\r\n    @observable private items:any[];\r\n\r\n    async componentDidMount() {\r\n        let {candidateItems, params} = this.props;\r\n        this.items = Array.isArray(candidateItems)? \r\n            candidateItems \r\n            : await candidateItems(params, '');\r\n    }\r\n    private itemClick = (item:any):Promise<void> => {\r\n        let {resolve, idFromItem} = this.props;\r\n        resolve(idFromItem(item));\r\n        nav.pop();\r\n        return;\r\n    }\r\n    private onSearch = async (key: string):Promise<void> => {\r\n        let {candidateItems, params} = this.props;\r\n        if (typeof candidateItems === 'function') {\r\n            let ret = await candidateItems(params, key);\r\n            this.items = ret;\r\n        }\r\n        return;\r\n    }\r\n    render() {\r\n        let {caption, row, searchPlaceHolder} = this.props;\r\n        return <Page header={caption} back=\"close\">\r\n            <div className=\"container\">\r\n                <SearchBox className=\"my-2\" \r\n                    onSearch={this.onSearch} \r\n                    placeholder={searchPlaceHolder}\r\n                    maxLength={100} />\r\n            </div>\r\n            <List items={this.items} item={{onClick:this.itemClick, render:row}} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport {SearchBox, Media, List, LMR, Badge, Prop, PropGrid, FA} from 'tonva';\r\nimport {nav, Page, PageItems} from 'tonva';\r\nimport {IdDates, UnitSpan} from '../tools';\r\nimport {UnitApp, DevModel} from '../model';\r\nimport {store} from '../store';\r\nimport { devApi } from 'api';\r\n\r\n@observer\r\nexport class Info extends React.Component<{app:UnitApp, appActed?:(appId:number, inUnit:number)=>void}> {\r\n    @observable private uqAccesses: any[];\r\n    async componentWillMount() {\r\n        this.uqAccesses = await devApi.loadAppUqs(this.props.app.id);\r\n    }\r\n\r\n    private renderUqRow = (uqAccess:any, index:number):JSX.Element => {\r\n        let {name, owner, unit, discription} = uqAccess;\r\n        return <LMR className=\"py-2\" right={<small className=\"text-muted\">{discription}</small>}>\r\n            {owner} / {name}\r\n        </LMR>;\r\n    }\r\n\r\n    private act = async () => {\r\n        let {app, appActed} = this.props;\r\n        let {id, unit, inUnit} = app;\r\n        let newInUnit:number = 1;\r\n        if (inUnit === 0) {\r\n            let ret = await store.restoreUnitApp(id);\r\n            if (ret <= 0) alert('app 或者 uq 没有定义 service');\r\n        }\r\n        else if (inUnit === 1) {\r\n            await store.stopUnitApp(id);\r\n            newInUnit = 0;\r\n        }\r\n        else {\r\n            let newApp:UnitApp = _.clone(app);\r\n            newApp.id = id;\r\n            newApp.inUnit = 1;\r\n            let ret = await store.addUnitApp(newApp);\r\n            if (ret <= 0) alert('app 或者 uq 没有定义 service');\r\n        }\r\n        if (appActed !== undefined) {\r\n            appActed(id, newInUnit);\r\n        }\r\n        nav.pop();\r\n    }\r\n    render() {\r\n        let {unit, name, discription, icon, inUnit, date_init, date_update} = this.props.app;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let faName:string, text:string, color:string;\r\n        if (inUnit === 1) {\r\n            faName = 'ban';\r\n            text = '停用APP';\r\n            color = 'btn-danger';\r\n        }\r\n        else if (inUnit === 0) {\r\n            faName = 'refresh';\r\n            text = '恢复APP';\r\n            color = 'btn-success';\r\n        }\r\n        else {\r\n            faName = 'plus';\r\n            text = '启用APP';\r\n            color = 'btn-primary';\r\n        }\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <Media icon={icon} main={name} discription={disp} />\r\n            },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                label: '开发号', \r\n                component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div>\r\n            },\r\n            {\r\n                type: 'component', \r\n                label: '关联UQ', \r\n                component: <List className=\"w-100\" items={this.uqAccesses} item={{render: this.renderUqRow}} />\r\n            },\r\n            '',\r\n            '',\r\n            {\r\n                type: 'component', \r\n                bk: '', \r\n                component: <button className={classNames('btn', 'w-100', color)} onClick={this.act}>\r\n                    <FA name={faName} size=\"lg\" /> {text}\r\n                </button>\r\n            },\r\n        ];\r\n        return <div>\r\n            <PropGrid rows={rows} values={this.props} />\r\n        </div>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {IObservableArray} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport {SearchBox, Media, List, LMR, Badge, Prop, PropGrid} from 'tonva';\r\nimport {nav, Page, PageItems, Image} from 'tonva';\r\nimport {mainApi} from '../api';\r\nimport {store} from '../store';\r\nimport {UnitApp} from '../model';\r\nimport {Info} from './info';\r\n\r\nclass PageApps extends PageItems<UnitApp> {\r\n    private unitId:number;\r\n    constructor(unitId:number) {\r\n        super();\r\n        this.unitId = unitId;\r\n    }\r\n    protected async load():Promise<UnitApp[]> {\r\n        return await mainApi.searchApp(this.unitId, this.param, this.pageStart, this.pageSize);\r\n    }\r\n    protected setPageStart(item:UnitApp) {\r\n        if (item === undefined)\r\n            this.pageStart = 0;\r\n        else\r\n            this.pageStart = item.id;\r\n    }\r\n}\r\n\r\n@observer\r\nexport class NewApp extends React.Component {\r\n    private apps: PageApps;\r\n    constructor(props) {\r\n        super(props);\r\n        this.apps = new PageApps(store.unit.id);\r\n    }\r\n    private onSearch = async (key:string) => {\r\n        await this.apps.first(key);\r\n    }\r\n    private appClick = (app:UnitApp) => {\r\n        nav.push(<Page header=\"App详细信息\">\r\n            <Info app={app} appActed={this.appActed}/>\r\n        </Page>);\r\n    }\r\n    private appActed = (appId:number, inUnit:number) => {\r\n        let apps = this.apps.items as IObservableArray<UnitApp>; //.replace .find(v => v.id === appId);\r\n        let app = apps.find(v => v.id === appId);\r\n        app.inUnit = inUnit;\r\n        apps.replace([app]);\r\n    }\r\n    private renderApp(app:UnitApp):JSX.Element {\r\n        let {name, discription, icon, inUnit} = app;\r\n        let right;\r\n        if (inUnit === 1)\r\n            right = <small>已启用</small>;\r\n        else if (inUnit === 0)\r\n            right = <small>已停用</small>;\r\n        return <LMR className=\"px-3 py-2\"\r\n            left={<Badge><Image src={icon} /></Badge>}\r\n            right={right}>\r\n            <div className=\"px-3\">\r\n                <div>{name}</div>\r\n                <small className=\"text-muted\">{discription}</small>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n    render() {\r\n        let items = this.apps.items;\r\n        let center = <SearchBox onSearch={this.onSearch} \r\n            className=\"w-100 mx-1\" \r\n            placeholder=\"搜索App\" \r\n            maxLength={100} />;\r\n        return <Page header={center}>\r\n            <List\r\n                items={items}\r\n                item={{onClick:this.appClick, render:this.renderApp}}\r\n                before=\"搜索App名字\" />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, FA, SubmitResult, LMR, Badge} from 'tonva';\r\nimport {nav, Page, Image} from 'tonva';\r\nimport {store} from '../store';\r\nimport {NewApp} from './new';\r\nimport {UnitApp} from '../model';\r\nimport {Info} from './info';\r\n\r\n@observer\r\nexport default class AppsPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadApps();\r\n    }\r\n    private itemRender(app:UnitApp, index:number) {\r\n        let {name, discription, icon, inUnit} = app;\r\n        let ban;\r\n        if (inUnit === 0)\r\n            ban = <FA className=\"text-danger\" name='ban' />;\r\n        return <LMR className=\"px-3 py-1\"\r\n            left={<Badge><Image src={icon} /></Badge>}\r\n            right={ban}>\r\n            <div className=\"px-3\">\r\n                <div>{name}</div>\r\n                <small className=\"text-muted\">{discription}</small>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n    private appClick(app:UnitApp) {\r\n        nav.push(<Page header=\"App详细信息\">\r\n            <Info app={app} />\r\n        </Page>);\r\n    }\r\n    private newItem() {\r\n        nav.push(<NewApp {...this.props} />);\r\n    }\r\n    render() {\r\n        let right = <button \r\n            className='btn btn-secondary btn-sm' \r\n            onClick={()=>this.newItem()}><FA name=\"plus\" /></button>;\r\n        return <Page header=\"启停App\" right={right}>\r\n            <List items={store.apps} item={{render: this.itemRender, onClick: this.appClick}} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {TonvaForm, SubmitResult, FormRow} from 'tonva';\r\nimport {nav, Page, ItemSchema, StringSchema, UiSchema, Form, Context} from 'tonva';\r\nimport {store} from '../store';\r\n\r\nexport class NewRole extends React.Component {\r\n    /*\r\n    private form:TonvaForm;\r\n    private formRows:FormRow[] = [\r\n        {\r\n            label: '名称', \r\n            field: {name: 'name', type: 'string', maxLength: 50, required: true},\r\n        },\r\n        {\r\n            label: '描述',\r\n            field: {name: 'discription', type: 'string', maxLength: 250},\r\n            face: {type: 'textarea'}\r\n        },\r\n    ];*/\r\n    private schema: ItemSchema[] = [\r\n        {name: 'name', type: 'string', maxLength: 5, required: true} as StringSchema,\r\n        {name: 'discription', type: 'string', maxLength: 250},\r\n        {name: 'submit', type: 'button'},\r\n    ];\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            name: {widget: 'text', label: '名称'},\r\n            discription: {widget: 'textarea', label: '描述'},\r\n            submit: {widget:'button', label: '提交'}\r\n        }\r\n    }\r\n    private onSubmit = async (buttonName:string, context: Context):Promise<SubmitResult> => {\r\n        //let {name, discription} = values;\r\n        let {name, discription} = this.context.formData;\r\n        let id = await store.unitAddRole(name, discription);\r\n        if (id <= 0) {\r\n            this.context.setError('name', '角色名 ' + name + ' 已经存在');\r\n            return;\r\n        }\r\n        nav.pop();\r\n        return;\r\n    }\r\n    render() {\r\n        return <Page header=\"新建角色\">\r\n            <Form className=\"m-3\" \r\n                schema={this.schema} uiSchema={this.uiSchema} \r\n                formData={{}}\r\n                onButtonClick={this.onSubmit} />\r\n        </Page>;\r\n    }\r\n    /*\r\n    <TonvaForm className=\"m-3\" ref={tf => this.form = tf} \r\n    formRows={this.formRows} \r\n    onSubmit={this.onSubmit} />\r\n    */\r\n}\r\n","import * as React from 'react';\r\nimport {List, LMR} from 'tonva';\r\nimport {nav, Page} from 'tonva';\r\nimport {Role, UnitApp} from '../model';\r\nimport {store} from '../store';\r\nimport {mainApi} from '../api';\r\n\r\ninterface Props {\r\n    role: Role;\r\n}\r\ninterface State {\r\n    apps: UnitApp[]\r\n}\r\nexport class RoleApps extends React.Component<Props, State> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {apps:undefined};\r\n    }\r\n    async componentDidMount() {\r\n        let ret = await mainApi.unitRoleApps(store.unit.id, this.props.role.id);\r\n        this.setState({\r\n            apps: ret,\r\n        });\r\n    }\r\n    private renderRoleApp(app:UnitApp, index:number) {\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={app.name}\r\n                right={<small className=\"text-muted\">{app.discription}</small>} />\r\n    }\r\n    render() {\r\n        let {role} = this.props;\r\n        return <Page header={role.name + ' - 可用APP'}>\r\n            <List\r\n                items={this.state.apps}\r\n                item={{render: this.renderRoleApp}}\r\n                none=\"没有APP\" />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, LMR, FA, Media, Muted, PropGrid, Prop} from 'tonva';\r\nimport {nav, Page} from 'tonva';\r\nimport {Role} from '../model';\r\nimport {store} from '../store';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {StringValueEdit} from '../tools';\r\nimport {RoleApps} from './roleApps';\r\n\r\n@observer\r\nexport class MemberPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadRoles();\r\n        await store.loadMemberRoles();\r\n    }\r\n    async onAssigned(value:any, orgValue:any):Promise<void> {\r\n        await store.unitAssignMember(value);\r\n    }\r\n    private renderMemberRole = (role:Role) => {\r\n        let {name, discription} = role;\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={name}\r\n                right={<Muted>{discription}</Muted>} />\r\n    }\r\n    private roleClick(role:Role) {\r\n        nav.push(<RoleApps role={role} />);\r\n    }\r\n    private setRole = () => {\r\n        nav.push(<SetRole />);\r\n    }\r\n    render() {\r\n        let roleUser = store.roleMember;\r\n        let {nick, name, assigned, icon} = roleUser;\r\n        let disp = <div>\r\n            <div><Muted>唯一名: </Muted> &nbsp; {name}</div>\r\n            <div><Muted>昵称: </Muted> &nbsp; {nick||<Muted>[无]</Muted>}</div>\r\n        </div>;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component',\r\n                component: <Media icon={icon||appIcon} main={roleUser.assigned||nick||name} discription={disp} />\r\n            },\r\n            '',\r\n            {\r\n                label: '备注名',\r\n                type: 'string',\r\n                name: 'assigned',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"修改备注名\"\r\n                    value={roleUser.assigned}\r\n                    onChanged={this.onAssigned} \r\n                    info=\"加一个备注，便于甄别用户\" />),\r\n            },\r\n            '',\r\n        ];\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.setRole}>修改角色</button>;\r\n        return <Page header=\"用户详情\" right={right}>\r\n            <PropGrid rows={rows} values={roleUser} />\r\n            <div className=\"px-3 py-1\"><small><FA name=\"angle-double-right\" /> 所属角色</small></div>\r\n            <List\r\n                items={store.memberRoles} \r\n                item={{render: this.renderMemberRole, onClick: this.roleClick}} />\r\n        </Page>\r\n    }\r\n}\r\n\r\n@observer\r\nclass SetRole extends React.Component {\r\n    private list:List;\r\n    constructor(props) {\r\n        super(props);\r\n        this.submit = this.submit.bind(this);\r\n    }\r\n    async componentDidMount() {\r\n        await store.loadRoles();\r\n        await store.loadMemberRoles();\r\n    }\r\n    private renderRole(role:Role, index:number) {\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={role.name}\r\n                right={<small className=\"text-muted\">{role.discription}</small>} />\r\n    }\r\n    private roleSelect(role:Role, isSelected: boolean, anySelected: boolean) {\r\n    }\r\n    private async submit() {\r\n        await store.setMemberRoles(this.list.selectedItems);\r\n        nav.pop();\r\n    }\r\n    render() {\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.submit}>保存</button>;\r\n        let roles = store.roles;\r\n        let memberRoles = store.memberRoles;\r\n        return <Page header=\"修改角色\" right={right}>\r\n            <List \r\n                ref={list=>this.list=list}\r\n                items={roles}\r\n                selectedItems={memberRoles}\r\n                compare={(role:Role, selectRole:Role)=>role.id === selectRole.id}\r\n                item={{render: this.renderRole, onSelect: this.roleSelect}} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, LMR, Badge, FA, Muted, SearchBox} from 'tonva';\r\nimport {nav, Page, Image} from 'tonva';\r\nimport {Role, RoleMember} from '../model';\r\nimport {store} from '../store';\r\nimport {mainApi} from '../api';\r\nimport {MemberPage} from './memberPage';\r\n\r\n@observer\r\nexport class MembersPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadMembers();\r\n    }\r\n    private renderMember(member:RoleMember, index:number):JSX.Element {\r\n        return <MemberRow {...member} />;\r\n    }\r\n    private userClick(user:RoleMember) {\r\n        store.setRoleUser(user);\r\n        nav.push(<MemberPage />);\r\n    }\r\n    private onSearch() {\r\n        let role = store.role;\r\n        let roleId = role === undefined? 0:role.id;\r\n        nav.push(<MemberSearch roleId={roleId} />);\r\n    }\r\n    render() {\r\n        let right = <button className=\"btn btn-sm\" onClick={this.onSearch}><FA name=\"search\" /></button>;\r\n        return <Page header=\"用户\" right={right}>\r\n            <List items={store.roleMembers} item={{render: this.renderMember, onClick: this.userClick}} />\r\n        </Page>\r\n    }\r\n}\r\n\r\nconst MemberRow = (member:RoleMember) => {\r\n    let {nick, name, assigned, icon} = member;\r\n    let content;\r\n    if (assigned)\r\n        content = <><div><b>{assigned}</b> <Muted>{nick}</Muted></div><Muted>{name}</Muted></>;\r\n    else if (nick)\r\n        content = <><div><b>{nick}</b></div><Muted>{name}</Muted></>;\r\n    else\r\n        content = <div><b>{name}</b></div>;\r\n    return <LMR className=\"py-2 px-3 align-items-stretch\"\r\n        left={<Badge size=\"sm\"><Image src={icon} /></Badge>}>\r\n        <div className=\"px-3\">{content}</div>\r\n    </LMR>;\r\n};\r\n\r\ninterface SearchProps {\r\n    roleId: number;\r\n}\r\ninterface SearchState {\r\n    members: RoleMember[];\r\n}\r\nexport class MemberSearch extends React.Component<SearchProps, SearchState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.state = {\r\n            members: null,\r\n        }\r\n    }\r\n    private async onSearch(key:string) {\r\n        let ret = await mainApi.unitMembers(store.unit.id, this.props.roleId, key, 0, 100);\r\n        this.setState({members: ret});\r\n    }\r\n    private renderMember(member:RoleMember, index:number):JSX.Element {\r\n        return <MemberRow {...member} />;\r\n    }\r\n    private userClick(user:RoleMember) {\r\n        store.setRoleUser(user);\r\n        nav.push(<MemberPage />);\r\n    }\r\n    render() {\r\n        let header = <SearchBox className=\"w-100 mx-1\" \r\n            onSearch={this.onSearch} \r\n            maxLength={100}\r\n            placeholder=\"搜索用户\" />;\r\n        return <Page header={header}>\r\n            <List\r\n                items={this.state.members}\r\n                item={{render: this.renderMember, onClick: this.userClick}} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, Media, LMR, FA, PropGrid, Prop} from 'tonva';\r\nimport {nav, Page} from 'tonva';\r\nimport {StringValueEdit} from '../tools';\r\nimport {Role, UnitApp} from '../model';\r\nimport {store} from '../store';\r\nimport {MembersPage} from './membersPage';\r\n\r\n@observer\r\nexport class RolePage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadApps();\r\n        await store.loadRoleApps();\r\n    }\r\n    private editRole() {\r\n        nav.push(<EditRole />);\r\n    }\r\n    private renderRoleApp = (app:UnitApp, index:number) => {\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={app.name}\r\n                right={<small className=\"text-muted\">{app.discription}</small>} />\r\n    }\r\n    private roleAppClick = (app:UnitApp) => {\r\n        nav.push(<RoleApps />);\r\n    }\r\n    private addRoleApp() {\r\n        nav.push(<RoleApps />);\r\n    }\r\n    private members() {\r\n        nav.push(<MembersPage />);\r\n    }\r\n    render() {\r\n        let {name, discription, count} = store.role;\r\n        let onMembersClick, membersLeft, membersRight;\r\n        if (count===undefined || count===null || count===0) {\r\n            membersLeft = <small className=\"text-muted\">无用户</small>;\r\n        }\r\n        else {\r\n            membersLeft = `共有 ${count} 用户`;\r\n            membersRight = <div><FA name=\"chevron-right\" /></div>;\r\n            onMembersClick = this.members;\r\n        }\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <Media icon={undefined} main={name} discription={discription} />,\r\n                onClick: this.editRole,\r\n            },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <LMR className=\"py-2\" left={membersLeft} right={membersRight} />,\r\n                onClick: onMembersClick,\r\n            },\r\n            '=',\r\n        ];\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={()=>this.addRoleApp()}><FA name=\"plus\" /> APP</button>;\r\n        return <Page header=\"角色\" right={right}>\r\n            <PropGrid rows={rows} values={{}} />\r\n            <div className=\"px-3 py-1\"><small><FA name=\"angle-double-right\" /> 可用APP列表</small></div>\r\n            <List\r\n                items={store.roleApps} \r\n                item={{render: this.renderRoleApp, onClick:this.roleAppClick}}\r\n                none={<small className=\"text-muted px-3 py-1\">没有APP, 点击右上角按钮选择APP</small>} />\r\n        </Page>\r\n    }\r\n}\r\n\r\n@observer\r\nclass EditRole extends React.Component {\r\n    async onNameChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.roleChangeProp('name', value);\r\n    }\r\n    async onDiscriptionChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.roleChangeProp('discription', value);\r\n    }\r\n    render() {\r\n        let role = store.role;\r\n        let {id} = role;\r\n        let isSysRole = id === 1 || id === 2;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                label: '名称', \r\n                type: 'string',\r\n                name: 'name', \r\n                onClick: isSysRole? undefined : ()=>nav.push(<StringValueEdit \r\n                    title=\"修改名称\"\r\n                    value={role.name}\r\n                    onChanged={this.onNameChanged} \r\n                    info=\"好的名字便于理解\" />)\r\n            },\r\n            {\r\n                label: '描述',\r\n                type: 'string',\r\n                name: 'discription',\r\n                onClick: isSysRole? undefined : ()=>nav.push(<StringValueEdit \r\n                    title=\"修改描述\"\r\n                    value={role.discription}\r\n                    onChanged={this.onDiscriptionChanged} \r\n                    info=\"对角色做一个说明\" />)\r\n            },\r\n        ];\r\n        return <Page header=\"修改角色信息\">\r\n            <PropGrid rows={rows} values={role} alignValue=\"right\" />\r\n        </Page>;\r\n    }\r\n}\r\n\r\n@observer\r\nclass RoleApps extends React.Component {\r\n    private list:List;\r\n    constructor(props) {\r\n        super(props);\r\n        this.submit = this.submit.bind(this);\r\n    }\r\n    async componentDidMount() {\r\n        await store.loadApps();\r\n        await store.loadRoleApps();\r\n    }\r\n    private renderApp(app:UnitApp, index:number) {\r\n        return <LMR className=\"py-1 px-2 align-items-center\"\r\n                left={app.name}\r\n                right={<small className=\"text-muted\">{app.discription}</small>} />\r\n    }\r\n    private appSelect(app:UnitApp, isSelected: boolean, anySelected: boolean) {\r\n\r\n    }\r\n    private async submit() {\r\n        await store.setRoleApps(this.list.selectedItems);\r\n        nav.pop();\r\n    }\r\n    render() {\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.submit}>保存</button>;\r\n        let apps = store.apps;\r\n        let roleApps = store.roleApps;\r\n        return <Page header=\"选择APP\" right={right}>\r\n            <List \r\n                ref={list=>this.list=list}\r\n                items={apps}\r\n                selectedItems={roleApps}\r\n                item={{render: this.renderApp, onSelect: this.appSelect}} />\r\n        </Page>;\r\n    }\r\n}","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {List, LMR, FA, Muted} from 'tonva';\r\nimport {nav, Page} from 'tonva';\r\nimport {Role} from '../model';\r\nimport {store} from '../store';\r\nimport {NewRole} from './newRole';\r\nimport {RolePage} from './rolePage';\r\nimport {MembersPage} from './membersPage';\r\n\r\nconst midClassName = classNames('d-flex', 'h-100', 'align-items-center', 'px-5', 'small', 'text-muted');\r\n\r\n@observer\r\nexport class Members extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadRoles();\r\n    }\r\n    private renderRole = (role:Role, index:number) => {\r\n        let {name, discription, count} = role;\r\n        return <LMR\r\n            className=\"px-3 py-2\" \r\n            left={name}\r\n            right={String(count || '')}>\r\n            <div className={midClassName}>\r\n                {discription}\r\n            </div>\r\n        </LMR>;\r\n    }\r\n    private roleClick = (role:Role) => {\r\n        store.setRole(role);\r\n        nav.push(<RolePage />)\r\n    }\r\n    private newRole = (evt: React.MouseEvent<HTMLAnchorElement>) => {\r\n        evt.preventDefault();\r\n        nav.push(<NewRole />);\r\n    }\r\n    private allUsersClick = () => {\r\n        store.setRole(undefined);\r\n        nav.push(<MembersPage />);\r\n    }\r\n    render() {\r\n        let right = <a className=\"small\" href='#' onClick={this.newRole}>新增</a>;\r\n        let header = <LMR className=\"px-3 small bg-light\" left=\"角色\" right={right} />;\r\n        return <Page header=\"用户角色\">\r\n            <LMR\r\n                className=\"my-3 px-3 py-2 bg-white\" \r\n                left={'用户'}\r\n                right={String(store.memberCount)}\r\n                onClick={this.allUsersClick}>\r\n                <div className={midClassName}>\r\n                    设置用户角色\r\n                </div>\r\n            </LMR>\r\n            <List\r\n                header={header}\r\n                items={store.roles}\r\n                none=\"[无]\"\r\n                item={{render:this.renderRole, onClick:this.roleClick}} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Muted } from 'tonva';\r\nimport { left0 } from 'tonva';\r\nimport { VMapMain, MapUI, Field, CMap }  from 'tonva'; \r\n\r\nclass CMapTeamPerson extends CMap {\r\n    async searchOnKey(keyField:Field, param):Promise<number> {\r\n        switch (keyField.name) {\r\n            default: return await super.searchOnKey(keyField, param);\r\n            case 'post': return await this.searchOnPost(param);                \r\n        }\r\n    }\r\n\r\n    private async searchOnPost(param: any):Promise<number> {\r\n        let querySelect = this.cQuerySelect('teamPosts');\r\n        let val = await querySelect.call(param);\r\n        return val['post'].id;\r\n    }\r\n}\r\n\r\nclass VMapTeamPerson extends VMapMain {\r\n}\r\n\r\nconst ui:MapUI = {\r\n    CMap: CMapTeamPerson,\r\n    keys: [\r\n        {\r\n            content: ({name, id}:any, x:any) => <><Muted>{x.team} &nbsp; </Muted> {name}</>,\r\n            none: (x:any)=>x.noStaff,\r\n        },\r\n        {\r\n            content: ({name, id}:any, x:any) => <><Muted>{x.staff} &nbsp; </Muted> {name} &nbsp; <Muted>{x.no} {left0(id, 4)}</Muted></>,\r\n            none: (x:any)=>x.noPost,\r\n        },\r\n        {\r\n            content: ({title, id}:any, x:any) => <><Muted>{x.post} &nbsp; </Muted> {title}</>,\r\n            none: undefined,\r\n        },\r\n    ]\r\n}\r\n\r\nexport default ui;\r\n","import { UqUI } from 'tonva';\r\nimport map from './map';\r\nimport tuid from './tuid';\r\nimport query from './query';\r\nimport res from './res';\r\n\r\nconst uqUI:UqUI = {\r\n    map: map,\r\n    tuid: tuid,\r\n    query: query,\r\n    res: res,\r\n}\r\n\r\nexport default uqUI;\r\n","import teamPerson from './teamPerson';\r\n\r\nexport default {\r\n    teamPerson: teamPerson,\r\n};\r\n","import user from './user';\r\nimport organization from './organization';\r\n\r\nexport default {\r\n    user: user,\r\n    organization: organization,\r\n};\r\n","import * as React from 'react';\r\nimport { TuidUI, CTuidSelect, CQuery, QueryPageItems } from \"tonva-react-uq\";\r\nimport { PageItems } from \"tonva-tools\";\r\n\r\nclass CUserSelect extends CTuidSelect {\r\n    protected buildPageItems():PageItems<any> {\r\n        let query:CQuery = this.cUq.cFromName('query', 'SearchUser') as CQuery;\r\n        return new QueryPageItems(query.entity);\r\n    }\r\n    idFromItem(item:any) {return item.id;}\r\n\r\n    async searchMain(key:string) {\r\n        if (this.PageItems === undefined) {\r\n            this.PageItems = this.buildPageItems();\r\n        }\r\n        if (key !== undefined) await this.PageItems.first({key: key});\r\n    }\r\n}\r\n\r\nconst ui:TuidUI = {\r\n    CTuidSelect: CUserSelect,\r\n    content: (item:any) => {return <>{item.name}</>},\r\n}\r\n\r\nexport default ui;\r\n","import * as React from 'react';\r\nimport { TuidUI } from \"tonva-react-uq\";\r\n\r\nconst ui:TuidUI = {\r\n    divs: {\r\n        post: {\r\n            content: (item:any) => {\r\n                let {title} = item;\r\n                return <>{title}</>;\r\n            },\r\n            rowContent: (item:any) => {\r\n                let {title} = item;\r\n                return <>{title}</>;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default ui;\r\n","import teamPosts from './teamPosts';\r\n\r\nexport default {\r\n    teamPosts: teamPosts,\r\n};\r\n","import * as React from 'react';\r\nimport { QueryUI } from \"tonva-react-uq\";\r\nimport { observer } from 'mobx-react';\r\n\r\nconst ui:QueryUI = {\r\n    row: observer((item:any) => {\r\n        let {post} = item;\r\n        return <div className=\"px-3 py-2\">{post.content()}</div>;\r\n    }),\r\n};\r\n\r\nexport default ui;\r\n","import CN from './zh/CN';\r\n\r\nconst res = {\r\n    zh: {\r\n        CN: CN\r\n    }\r\n};\r\n\r\nexport default res;\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\n\r\nexport default {\r\n    x: {\r\n        no: '编号',\r\n        team: '部门',\r\n        staff: '员工',\r\n        noStaff: '无员工',\r\n        post: '职位',\r\n        noPost: '无职位',\r\n        a: 'aaa',\r\n        b: {\r\n            s: 'sss',\r\n            d: ()=><span className=\"text-success\">ddd</span>,\r\n        },\r\n        c: ()=><span className=\"text-danger\">ccc</span>,\r\n    },\r\n    uq: '$UNITX',\r\n    tuid: '基础档案',\r\n    map: '对照表',\r\n    sheet: '单据',\r\n    pending: '待处理',\r\n    book: '帐',\r\n    action: '操作',\r\n    tuidNullCaption: '选择',\r\n    submit: '提交',\r\n    arrNew: '新增',\r\n    arrEdit: '保存',\r\n    entity: {\r\n        message: {\r\n            label: '消息-message',\r\n            arrNew: '新增消息',\r\n            arrEdit: '保存消息',\r\n            fields: {\r\n                fromUser: '发送人',\r\n                fromUnit: '发送部门',\r\n                type: '类型',\r\n                date: '日期',\r\n                subject: '主题',\r\n                discription: '描述',\r\n                content: '内容'\r\n            },\r\n        },\r\n        getMessage: {\r\n            label: '获取Message',\r\n            submit: '获取消息',\r\n            fields: {\r\n                msg: '消息'\r\n            }\r\n        },\r\n        newMessage: {\r\n            label: '新建消息',\r\n            fields: {\r\n                type: '类型',\r\n                subject: '主题',\r\n            },\r\n            arrs: {\r\n                to: {\r\n                    label: '发送',\r\n                    newSubmit: '新增to',\r\n                    editSumbit: '保存to',\r\n                },\r\n                cc: {\r\n                    label: '抄送',\r\n                    newSubmit: '新增cc',\r\n                    editSumbit: '保存cc',\r\n                }\r\n            }\r\n        },\r\n        sectionTeam: {\r\n            label: '大部-团队对照表',\r\n        },\r\n        teamPerson: {\r\n            label: '员工-岗位对照表',\r\n            fields: {\r\n            },\r\n            confirmDelete: _.template('真的要删除${label}吗'),\r\n        },\r\n        teamOrganization: {\r\n            label: '团队-机构对照表',\r\n        },\r\n        teamPosts: {\r\n            label: '团队-岗位对照表',\r\n        },\r\n        person: {\r\n            label: '员工',\r\n            fields: {\r\n                name: '姓名',\r\n                nick: '别名',\r\n                given: '名字',\r\n                sur: '姓',\r\n                gender: '性别',\r\n                user: '用户',\r\n            }\r\n        },\r\n        organization: {\r\n            label: '机构',\r\n            arrs: {\r\n                post: {\r\n                    label: '岗位',\r\n                }\r\n            }\r\n        },\r\n        user: {\r\n            label: '用户'\r\n        },\r\n        team: {\r\n            label: '团队',\r\n        },\r\n        section: {\r\n            label: '大部',\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { IObservableValue, observable } from 'mobx';\r\nimport { Page, VPage } from 'tonva';\r\nimport { Muted, LMR, FA, List } from 'tonva';\r\nimport { COpBinding } from './cOpBinding';\r\nimport { StateTo, Sheet, Organization, Post, Team, Section, To, Entity } from './model';\r\n\r\ninterface SelectablePost {\r\n    post: Post;\r\n    selected: IObservableValue<boolean>;\r\n    teams?: SelectableTeam[];\r\n}\r\n\r\ninterface SelectableTeam {\r\n    team: Team;\r\n    selected: IObservableValue<boolean>;\r\n    sections?: SelectableSection[];\r\n}\r\n\r\ninterface SelectableSection {\r\n    section: Section;\r\n    selected: IObservableValue<boolean>;\r\n}\r\n\r\nexport class VOpBinding extends VPage<COpBinding> {\r\n    private sheet: Sheet;\r\n    private states: StateTo[];\r\n    private selectablePosts:SelectablePost[];\r\n    private sheetOpsChanged:boolean = false;\r\n\r\n    private stateClick(state:StateTo) {\r\n        let {organizations, teams, sections, posts} = this.controller;\r\n        let postTos:{[post:number]:To[]} = {};\r\n        let {tos} = state;\r\n        if (tos !== undefined) {\r\n            for (let to of tos) {\r\n                let {post} = to;\r\n                let pid = post.id;\r\n                let pto = postTos[pid];\r\n                if (pto === undefined) postTos[pid] = pto = [];\r\n                pto.push(to);\r\n            }\r\n        }\r\n        this.selectablePosts = posts.map(v => this.buildSelectablePost(v, postTos));\r\n        /*\r\n            return {\r\n                post: v,\r\n                selected: observable.box(false),\r\n                teams: [],\r\n            }\r\n        });*/\r\n        this.sheetOpsChanged = false;\r\n        this.openPage(this.stateView, state);\r\n        this.regConfirmClose(async ():Promise<boolean> => {\r\n            if (this.sheetOpsChanged === false) return true;\r\n            return confirm('未保存\\n真的不保存吗？');\r\n        });\r\n    }\r\n\r\n    private buildSelectablePost(post:Post, postTos:{[post:number]:To[]}):SelectablePost {\r\n        let pto = postTos[post.id];\r\n        let selected:boolean;\r\n        let teams:SelectableTeam[];\r\n        if (pto === undefined) {\r\n            selected = false;\r\n            teams = [];\r\n        }\r\n        else {\r\n            selected = true;\r\n            teams = this.buildSelectableTeams(post, pto);\r\n        }\r\n        let ret = {\r\n            post: post,\r\n            selected: observable.box(selected),\r\n            teams: teams,\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private buildSelectableTeams(post:Post, tos: To[]):SelectableTeam[] {\r\n        let teamTos:{[team:number]:To[]} = {};\r\n        let hasAllTeams = false;\r\n        for (let to of tos) {\r\n            let {team} = to;\r\n            let teamId;\r\n            if (team === undefined) {\r\n                teamId = 0;\r\n                hasAllTeams = true;\r\n            }\r\n            else {\r\n                teamId = team.id;\r\n            }\r\n            let tto = teamTos[teamId];\r\n            if (tto === undefined) teamTos[teamId] = tto = [];\r\n            tto.push(to);\r\n        }\r\n        let sections:Section[] = [];\r\n        let {organization} = post;\r\n        if (organization !== undefined && organization.teams !== undefined) {\r\n            for (let team of post.organization.teams) {\r\n                if (team.sections !== undefined) sections.push(...team.sections);\r\n            }\r\n        }\r\n        let teams:SelectableTeam[] = [];\r\n        let teamTo0 = teamTos[0];\r\n        let teamTo0Sections = this.buildSelectableSections(sections, teamTo0);\r\n        teams.push({\r\n            team: {\r\n                id: 0,\r\n                name: '* 所有部门',\r\n                no: undefined,\r\n                sections: sections,\r\n                organizations: undefined,\r\n            }, \r\n            selected: observable.box(teamTo0!==undefined), \r\n            sections: teamTo0Sections,\r\n        });\r\n        if (organization !== undefined && organization.teams !== undefined) {\r\n            post.organization.teams.forEach(v => {\r\n                let teamTo = teamTos[v.id];\r\n                teams.push({\r\n                    team: v,\r\n                    selected: observable.box(teamTo!==undefined),\r\n                    sections: this.buildSelectableSections(sections, teamTo),\r\n                });\r\n            });\r\n        }\r\n        if (hasAllTeams === true && tos.length === 1) {\r\n            let selectableTeam0 = teams[0];\r\n            let hasSection = false;\r\n            for (let selectableSection of selectableTeam0.sections) {\r\n                if (selectableSection.selected.get() === true) {\r\n                    hasSection = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (hasSection === false) {\r\n                selectableTeam0.selected.set(false);\r\n                selectableTeam0.sections = [];\r\n            }\r\n        }\r\n        return teams;\r\n    }\r\n\r\n    private buildSelectableSections(sections:Section[], tos: To[]):SelectableSection[] {\r\n        let selectableSections:SelectableSection[] = [];\r\n        for (let section of sections) {\r\n            selectableSections.push({\r\n                section: section,\r\n                selected: observable.box(tos && tos.find(v => v.section && section.id === v.section.id) !== undefined),\r\n            });\r\n        }\r\n        return selectableSections;\r\n    }\r\n\r\n    private renderState(stateTo:StateTo) {\r\n        let {name, caption, tos, tosText, configable} = stateTo;\r\n        let content;\r\n        if (configable === true) {\r\n            let right = <FA className=\"text-muted align-self-center\" name=\"chevron-right\" />;\r\n            let onClick = () => this.stateClick(stateTo);\r\n            let tosView = <this.stateTosView tosText={tosText} />;\r\n            content = <>\r\n                <LMR className=\"bg-white py-1 px-2 cursor-pointer\" right={right} onClick={onClick}>\r\n                    {caption}\r\n                </LMR>\r\n                {tosView}\r\n            </>\r\n        }\r\n        else {\r\n            content = <div className=\"bg-white py-1 px-2\">\r\n                {caption}\r\n            </div>;\r\n        }\r\n        return <div key={name} className=\"border border-light rounded mx-1 my-3\">\r\n            {content}\r\n        </div>\r\n    }\r\n\r\n    private stateTosView = observer(({tosText}:{tosText: IObservableValue<string[]>}) => {\r\n        let tos = tosText.get();\r\n        return <div className=\"bg-light py-1 px-2\">{\r\n            tos === undefined || tos.length === 0? <Muted>[无岗位]</Muted> :\r\n            tos.map((v,index) => {\r\n                return <span\r\n                    key={v}\r\n                    className=\"d-inline-block border bg-white rounded mr-2 my-1 py-1 px-2\">\r\n                    {v}\r\n                </span>\r\n            })\r\n        }\r\n        </div>\r\n    });\r\n\r\n    private tosTexts(tos: To[]):string[] {\r\n        return tos && tos.map((v,index) => {\r\n            let {post, team, section} = v;\r\n            let content:string = post.title;\r\n            if (team !== undefined && team.id > 0) content += ' @ ' + team.name;\r\n            if (section !== undefined) {\r\n                if (team === undefined || team.id === 0) content += ' @ * ';\r\n                content += ' / ' + section.name;\r\n            }\r\n            return content;\r\n        });\r\n    }\r\n\r\n    async open({entity, opTos}:{entity:Entity, opTos:{[op:string]:To[]}}) {\r\n        this.sheet = entity;\r\n        let {name, states} = entity;\r\n        if (states === undefined) {\r\n            let tos = opTos['$'];\r\n            this.states = [{\r\n                name: '$',\r\n                caption: '允许岗位',\r\n                configable: true,\r\n                tos: tos,\r\n                tosText: observable.box<string[]>(this.tosTexts(tos)),\r\n            }];\r\n            this.openPageElement(<Page header={name + ' - 岗位'}>\r\n                {this.states.map(v => this.renderState(v))}\r\n            </Page>);\r\n            return;\r\n        }\r\n\r\n        this.states = states.map(v => {\r\n            let prefix = v.substr(0, 1);\r\n            let caption: string | JSX.Element;\r\n            let configable: boolean;\r\n            let tos;\r\n            switch (prefix) {\r\n                case '<': caption = <>{v.substr(1)} &nbsp; <Muted>回复</Muted></>; configable = false; break;\r\n                case '#': caption = <>{v.substr(1)} &nbsp; <Muted>返初</Muted></>; configable = false; break;\r\n                case '$': \r\n                    caption = '[新开单]'; \r\n                    configable = true; \r\n                    tos = opTos[v];\r\n                    break;\r\n                default:\r\n                    caption = v;\r\n                    configable = true; \r\n                    tos = opTos[v];\r\n                    break;\r\n            }\r\n            return {\r\n                name: v,\r\n                caption: caption,\r\n                configable: configable,\r\n                tos: tos,\r\n                tosText: observable.box<string[]>(this.tosTexts(tos)),\r\n            };\r\n        });\r\n        this.openPageElement(<Page header={'单据状态对应岗位 - ' + name} >\r\n            {this.states.map(v => this.renderState(v))}\r\n        </Page>);\r\n    }\r\n\r\n    private async saveOps(stateTo: StateTo) {\r\n        let stateToName = stateTo.name;\r\n        let tos:To[] = [];\r\n        let toArr:{post:number, team:number, section:number}[] = [];\r\n        for (let sp of this.selectablePosts) {\r\n            if (sp.selected.get() === false) continue;\r\n            let postId = sp.post.id;\r\n            let teamCount = 0;\r\n            for (let st of sp.teams) {\r\n                if (st.selected.get() === false) continue;\r\n                let teamId = st.team.id;\r\n                ++teamCount;\r\n                let sectionCount = 0;\r\n                for (let ss of st.sections) {\r\n                    if (ss.selected.get() === false) continue;\r\n                    let sectionId = ss.section.id;\r\n                    ++sectionCount;\r\n                    toArr.push({\r\n                        post: postId,\r\n                        team: teamId,\r\n                        section: sectionId,\r\n                    });\r\n                    tos.push({\r\n                        post: sp.post,\r\n                        team: st.team,\r\n                        section: ss.section,\r\n                    });\r\n                }\r\n                if (sectionCount === 0) {\r\n                    toArr.push({\r\n                        post: postId,\r\n                        team: teamId,\r\n                        section: 0,\r\n                    });\r\n                    tos.push({\r\n                        post: sp.post,\r\n                        team: st.team,\r\n                        section: undefined,\r\n                    });\r\n                }\r\n            }\r\n            if (teamCount === 0) {\r\n                toArr.push({\r\n                    post: postId,\r\n                    team: 0,\r\n                    section: 0,\r\n                });\r\n                tos.push({\r\n                    post: sp.post,\r\n                    team: undefined,\r\n                    section: undefined,\r\n                });\r\n            }\r\n        }\r\n        await this.controller.saveSheetStatePosts(this.sheet, stateToName, toArr);\r\n        let state = this.states.find(v => v.name === stateToName);\r\n        state.tos = tos;\r\n        let tosTexts = this.tosTexts(tos);\r\n        state.tosText.set(tosTexts);\r\n        this.closePage();\r\n    }\r\n\r\n    private organizationRow = (item: Organization, index:number) => {\r\n        let {id, name} = item;\r\n        return <div>id:{id} name:{name}</div>;\r\n    }\r\n    private teamRow = (item: SelectableTeam, index:number) => {\r\n        return <this.observableTeamRow {...item} />;\r\n    }\r\n    private sectionRow = (item: SelectableSection, index:number) => {\r\n        return <this.observableSectionRow {...item} />;\r\n    }\r\n    private postRow = (item:SelectablePost, index:number) => {\r\n        return <this.observablePostRow {...item} />;\r\n    };\r\n    private stateView: React.SFC<StateTo> = (state:StateTo) => {\r\n        let {caption} = state;\r\n        /*\r\n        switch (state.name) {\r\n            case '-':  stateCaption = '允许岗位'; break;\r\n            case '$':  stateCaption = '[新开单]'; break;\r\n            default: stateCaption = state.name; break;\r\n        }\r\n        */\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={async ()=>await this.saveOps(state)}>保存</button>\r\n        return <Page header={`${this.sheet.name} - ${caption}`}\r\n            back=\"close\"\r\n            right={right}>\r\n            <div className=\"mx-3 my-2\">\r\n                <Muted>设置单据状态跟岗位的对应关系</Muted>\r\n            </div>\r\n            <List className=\"my-2\" \r\n                items={this.selectablePosts} \r\n                item={{render: this.postRow}} />\r\n        </Page>\r\n    }\r\n    /*\r\n    <List className=\"my-2\" header=\"Organization\" items={organizations} item={{render: this.organizationRow}} />\r\n    <List className=\"my-2\" header=\"Team\" items={teams} item={{render: this.teamRow}} />\r\n    <List className=\"my-2\" header=\"Section\" items={sections} item={{render: this.sectionRow}} />\r\n    */\r\n\r\n    private onPostSelectChanged(item:SelectablePost, checked:boolean) {\r\n        this.sheetOpsChanged = true;\r\n        let {post, selected} = item;\r\n        if (checked === true) {\r\n            let sections:Section[] = [];\r\n            let {organization} = post;\r\n            if (organization !== undefined && organization.teams !== undefined) {\r\n                for (let team of post.organization.teams) {\r\n                    if (team.sections !== undefined) sections.push(...team.sections);\r\n                }\r\n            }\r\n            item.teams.push({\r\n                team: {\r\n                    id: 0,\r\n                    name: '* 所有部门',\r\n                    no: undefined,\r\n                    sections: sections,\r\n                    organizations: undefined,\r\n                }, \r\n                selected: observable.box(false), \r\n                sections:[]\r\n            });\r\n            if (organization !== undefined && organization.teams !== undefined) {\r\n                post.organization.teams.forEach(v => {\r\n                    item.teams.push({\r\n                        team: v,\r\n                        selected: observable.box(false),\r\n                        sections: []\r\n                    });\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            item.teams.splice(0);\r\n        }\r\n        selected.set(checked);\r\n    }\r\n\r\n    private onTeamSelectChanged(item:SelectableTeam, checked:boolean) {\r\n        this.sheetOpsChanged = true;\r\n        let {team, selected} = item;\r\n        if (checked === true) {\r\n            //item.sections.push({section: undefined, selected: observable.box(false)});\r\n            team.sections.forEach(v => {\r\n                item.sections.push({\r\n                    section: v,\r\n                    selected: observable.box(false)\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            item.sections.splice(0);\r\n        }\r\n        selected.set(checked);\r\n    }\r\n\r\n    private onSectionSelectChanged(item:SelectableSection, checked:boolean) {\r\n        this.sheetOpsChanged = true;\r\n        let {section, selected} = item;\r\n        selected.set(checked);\r\n    }\r\n\r\n    private observablePostRow = observer((item:SelectablePost) => {\r\n        let {post, selected, teams} = item;\r\n        let {title} = post;\r\n        let teamsList;\r\n        let defaultSelected = selected.get();\r\n        if (defaultSelected === true) {\r\n            teamsList = <List className=\"ml-4 va-list-top-border\" items={teams} item={{render:this.teamRow}} />\r\n        }\r\n        return <div className=\"flex-column\">\r\n            <label className=\"px-3 py-2 w-100 mb-0\">\r\n                <input className=\"mr-3 align-middle\"\r\n                    type=\"checkbox\" \r\n                    defaultChecked={defaultSelected}\r\n                    onChange={(evt)=>this.onPostSelectChanged(item, evt.target.checked)} />\r\n                <Muted>岗位</Muted> &nbsp; {title}\r\n            </label>\r\n            {teamsList}\r\n        </div>;\r\n    });\r\n\r\n    private observableTeamRow = observer((item:SelectableTeam) => {\r\n        let {team, selected, sections} = item;\r\n        let {name} = team;\r\n        let teamsList;\r\n        let defaultSelected = selected.get();\r\n        if (defaultSelected === true && sections.length > 0) {\r\n            teamsList = <List className=\"ml-4 va-list-top-border\" items={sections} item={{render:this.sectionRow}} />\r\n        }\r\n        return <div className=\"flex-column\">\r\n            <label className=\"px-3 py-2 w-100 mb-0\">\r\n                <input className=\"mr-3 align-middle\"\r\n                    type=\"checkbox\" \r\n                    defaultChecked={defaultSelected}\r\n                    onChange={(evt)=>this.onTeamSelectChanged(item, evt.target.checked)} />\r\n                <Muted>部门</Muted> &nbsp; {name}\r\n            </label>\r\n            {teamsList}\r\n        </div>;\r\n    });\r\n\r\n    private observableSectionRow = observer((item:SelectableSection) => {\r\n        let {section, selected} = item;\r\n        let {name} = section;\r\n        let defaultSelected = selected.get();\r\n        return <div className=\"flex-column\">\r\n            <label className=\"px-3 py-2 w-100 mb-0\">\r\n                <input className=\"mr-3 align-middle\"\r\n                    type=\"checkbox\" \r\n                    defaultChecked={defaultSelected}\r\n                    onChange={(evt)=>this.onSectionSelectChanged(item, evt.target.checked)} />\r\n                <Muted>大部</Muted> &nbsp; {name}\r\n            </label>\r\n        </div>;\r\n    });\r\n}\r\n ","import * as React from 'react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { COpBinding } from \"./cOpBinding\";\r\nimport { Entity, EntityBlock, Uq } from './model';\r\nimport { entityIcons, CAction, CQuery } from 'tonva';\r\nimport { List, Muted, LMR, FA } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\n\r\ninterface Checked {\r\n    def: boolean;\r\n    checked: boolean;\r\n}\r\n\r\nexport class VAllPosts extends VPage<COpBinding> {\r\n    private uq: Uq;\r\n    private blocks:EntityBlock[];\r\n    private checked:{[entity:string]:Checked} = {};\r\n\r\n    @observable private isChanged:boolean = false;\r\n    async open(uq: Uq) {\r\n        this.uq = uq;\r\n        let {name, tuids, actions, maps, books, queries, histories, pendings, sheets} = this.uq;\r\n        this.blocks = [\r\n            {items: tuids, type: 'tuid'},\r\n            {items: sheets, type: 'sheet'},\r\n            {items: actions, type: 'action'},\r\n            {items: maps, type: 'map'},\r\n            {items: books, type: 'book'},\r\n            {items: queries, type: 'query'},\r\n            {items: histories, type: 'history'},\r\n            {items: pendings, type: 'pending'},\r\n        ];\r\n        let getEntityOpForAll = this.controller.cUq.cFromName('query', 'getEntityOpForAll') as CQuery;\r\n        let entityOpForAllResult = await getEntityOpForAll.entity.query({uq: this.uq.id});\r\n        let entityOpForAll:{[entity:string]:boolean} = {};\r\n        for (let eaa of entityOpForAllResult.ret) {\r\n            entityOpForAll[eaa.entity] = true;\r\n        }\r\n        for (let b of this.blocks) {\r\n            let {items} = b;\r\n            if (items === undefined) continue;\r\n            for (let item of items) {\r\n                let {name} = item;\r\n                let checked = (entityOpForAll[name] === true);\r\n                this.checked[name] = {\r\n                    def: checked,\r\n                    checked: checked,\r\n                };\r\n            }\r\n        }\r\n        this.openPage(this.pageRender);\r\n        this.regConfirmClose(async ():Promise<boolean> => {\r\n            if (this.isChanged === false) return true;\r\n            return confirm('未保存\\n真的不保存吗？');\r\n        });\r\n    }\r\n\r\n    private onCheckChanged = (entity:Entity, checked: boolean) => {\r\n        this.checked[entity.name].checked = checked;\r\n        let isChanged:boolean = false;\r\n        for (let i in this.checked) {\r\n            let {def, checked} = this.checked[i];\r\n            if (def !== checked) {\r\n                isChanged = true;\r\n                break;\r\n            }\r\n        }\r\n        this.isChanged = isChanged;\r\n    }\r\n\r\n    private saveChange = async () => {\r\n        let entities:{entity:string}[] = [];\r\n        for (let i in this.checked) {\r\n            if (this.checked[i].checked !== true) continue;\r\n            entities.push({entity: i});\r\n        }\r\n        let saveEntityOpForAll = this.controller.cUq.cFromName('action', 'saveEntityOpForAll') as CAction;\r\n        let ret = await saveEntityOpForAll.entity.submit({\r\n            uq: this.uq.id,\r\n            entities: entities,\r\n        });\r\n        this.ceasePage();\r\n        this.openPageElement(<Page header=\"所有岗位可操作\" back=\"close\">\r\n            <div className=\"p-3\">\r\n                <FA name=\"check-circle\" className=\"text-success\" /> &nbsp;\r\n                已保存\r\n            </div>\r\n        </Page>);\r\n    }\r\n\r\n    private entityRender(entity:Entity, icon:any) {\r\n        let {name} = entity;\r\n        let right = <input className=\"mr-3 align-middle\"\r\n            type=\"checkbox\" \r\n            defaultChecked={this.checked[name].def}\r\n            onChange={(evt)=>this.onCheckChanged(entity, evt.target.checked)}/>\r\n\r\n        return <LMR className=\"px-3 py-2 align-items-center\"\r\n            right={right}>\r\n            {icon} &nbsp; {name}\r\n        </LMR>;\r\n    }\r\n\r\n    private pageRender = observer(() => {\r\n        /*\r\n        let {name, tuids, actions, maps, books, queries, histories, pendings, sheets} = this.uq;\r\n        let blocks:EntityBlock[] = [\r\n            {items: tuids, type: 'tuid'},\r\n            {items: sheets, type: 'sheet'},\r\n            {items: actions, type: 'action'},\r\n            {items: maps, type: 'map'},\r\n            {items: books, type: 'book'},\r\n            {items: queries, type: 'query'},\r\n            {items: histories, type: 'history'},\r\n            {items: pendings, type: 'pending'},\r\n        ];*/\r\n        let buttonSave = this.isChanged===true? <button className=\"btn btn-sm btn-success\" onClick={this.saveChange}>保存</button> : null;\r\n        return <Page header={'所有岗位可操作'} right={buttonSave}>\r\n            <div className=\"text-muted p-3 small\">\r\n                <div style={{lineHeight:'1.8', fontWeight:'bold'}}>说明</div>\r\n                <ol className=\"pl-3\" style={{listStyleType: '1', lineHeight: '1.8'}}>\r\n                    <li >\r\n                        有些操作，默认允许所有用户可操作，可以在这里设置。\r\n                    </li>\r\n                    <li>\r\n                        比如，用户下订单。任何客户，登录进系统，都可以下单。\r\n                    </li>\r\n                    <li>\r\n                        如果每个用户都需要设置，用户会丢失，管理人员会繁琐。\r\n                    </li>\r\n                </ol>\r\n            </div>\r\n            {this.blocks.map(block => {\r\n                let {items, type} = block;\r\n                let icon = entityIcons[type];\r\n                return items && items.length>0 &&\r\n                    <List key={type}\r\n                        className=\"mt-3\"\r\n                        header={<Muted className=\"px-3 pt-1 bg-light w-100\">{this.res[type]||type}</Muted>} \r\n                        items={items} \r\n                        item={{\r\n                            render:(item:any, index:number)=>this.entityRender(item, icon), \r\n                            onClick: undefined\r\n                        }} />;\r\n            })}\r\n        </Page>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, nav } from \"tonva-tools\";\r\nimport { COpBinding } from \"./cOpBinding\";\r\nimport { Uq } from './model';\r\nimport { List, FA, SearchBox } from 'tonva';\r\nimport { observable } from 'mobx';\r\nimport { CMap, CQuery, QueryPageItems, Query, Tuid, CTuid } from 'tonva';\r\n\r\nexport class PageUsers extends QueryPageItems {\r\n    protected setPageStart(item:any) {\r\n        this.pageStart = item === undefined? 0 : item.id;\r\n    }\r\n}\r\n\r\nexport class VFullFunction extends VPage<COpBinding> {\r\n    private uq: Uq;\r\n    @observable private users: any[] = [];\r\n    private entityOpUserFully:CMap;\r\n    private pageUsers: PageUsers;\r\n    private tuidUser: CTuid<Tuid>;\r\n    async open(uq: Uq) {\r\n        this.uq = uq;\r\n        this.entityOpUserFully = this.controller.cUq.cFromName('map', 'entityOpUserFully') as CMap;\r\n        this.tuidUser = this.controller.cUq.cFromName('tuid', 'user') as CTuid<Tuid>;\r\n        await this.entityOpUserFully.entity.loadSchema();\r\n        let all = await this.entityOpUserFully.entity.queries.all.query({_uq: this.uq.id});\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={this.addClick}><FA name=\"plus\" /></button>;\r\n        this.users.push(...all.ret);\r\n        this.openPageElement(<Page header={'全功能用户'} right={right}>\r\n            <List items={this.users} item={{render:this.renderUser, onClick: this.onStopFully}} />\r\n        </Page>);\r\n        return;\r\n    }\r\n\r\n    private onStopFully = async (item:any) => {\r\n        this.openPageElement(<Page header={'停止全功能'}>\r\n            <div className=\"p-3\">\r\n                <div><b className=\"text-danger h4\">{item.user.content()}</b> 停止全功能用户。<br/>请确认。</div>\r\n                <div className=\"p-3\">\r\n                    <button className=\"btn btn-success\" onClick={()=>this.onSumitStopFully(item)}>停止全功能</button>\r\n                    <button className=\"ml-3 btn btn-outline-danger\" onClick={this.onCancelStop}>不停</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n    }\r\n\r\n    private onSumitStopFully = async (item:any) => {\r\n        let data = {_uq: this.uq.id, arr1:[{_user: item.user.id}]};\r\n        await this.entityOpUserFully.entity.actions.del.submit(data);\r\n        let index = this.users.findIndex(v => v === item);\r\n        if (index >= 0) this.users.splice(index, 1);\r\n        this.closePage();\r\n    }\r\n\r\n    private onCancelStop = () => this.closePage();\r\n\r\n    private addClick = async () => {\r\n        let user = await this.controller.callSearchUser(this.uq);\r\n        this.onUserSelected(user);\r\n        /*\r\n        let searchUser = this.controller.cUq.cFromName('query', 'SearchUser') as CQuery;\r\n        this.pageUsers = new PageUsers(searchUser.entity);\r\n        this.openPage(this.usersView);\r\n        */\r\n    }\r\n\r\n    private renderUser = (item:any, index:number) => {\r\n        return <div className=\"px-3 py-2\">{item.user.content()}</div>;\r\n    }\r\n\r\n    private onSearch = async (key:string) => {\r\n        await this.pageUsers.first({key: key});\r\n    }\r\n    private onSetFully = async (item:any) => {\r\n        await this.entityOpUserFully.entity.actions.add.submit({_uq: this.uq.id, arr1:[{_user: item.id}]});\r\n        this.tuidUser.entity.useId(item.id);\r\n        let row = {\r\n            uq: this.uq.id,\r\n            user: this.tuidUser.entity.boxId(item.id),\r\n        }\r\n        this.users.push(row);\r\n        this.closePage(2);\r\n    }\r\n    private onCancelFully = () => {this.backPage()}\r\n    private onUserSelected = (item:any) => {\r\n        this.openPageElement(<Page header=\"确认\">\r\n            <div className=\"p-3\">\r\n                <div><b className=\"text-danger h4\">{item.name}</b> 将设置为全功能用户。只有系统管理员或者测试人员才需要全功能，可以操作所有数据。<br/>请确认。</div>\r\n                <div className=\"p-3\">\r\n                    <button className=\"btn btn-success\" onClick={()=>this.onSetFully(item)}>设置为全功能用户</button>\r\n                    <button className=\"ml-3 btn btn-outline-danger\" onClick={this.onCancelFully}>取消</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n    }\r\n    private renderSelectUser = (item:any, index:number) => {\r\n        return <div className=\"px-3 py-2\">{JSON.stringify(item)}</div>;\r\n    }\r\n    private usersView = () => {\r\n        let search = <SearchBox className=\"w-100\" onSearch={this.onSearch} placeholder=\"选择用户\" />;\r\n        return <Page header={search}>            \r\n            <List\r\n                before=\"搜索用户名\"\r\n                items={this.pageUsers} \r\n                item={{render: this.renderSelectUser, onClick:this.onUserSelected}} />\r\n        </Page>;\r\n    };\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { VPage, Page, PageItems } from \"tonva-tools\";\r\nimport { SearchBox, List } from 'tonva';\r\nimport { centerApi } from 'tonva';\r\nimport { COpBinding } from \"./cOpBinding\";\r\n\r\nexport class VSearchUser extends VPage<COpBinding> {\r\n    private unit:number;\r\n    private pageUsers = new PageUsers();\r\n\r\n    private onUserClick = (item:any) => {\r\n        this.closePage();\r\n        this.returnCall(item);\r\n    }\r\n    private onSearch = async (key:string) => {\r\n        await this.pageUsers.first({key: key, unit:this.unit, role:undefined});\r\n    }\r\n    private renderSelectUser = (item:any, index:number) => {\r\n        return <div className=\"px-3 py-2\">{JSON.stringify(item)}</div>;\r\n    }\r\n    async open(unit: number) {\r\n        this.unit = unit;\r\n        let search = <SearchBox className=\"w-100\" onSearch={this.onSearch} placeholder=\"选择用户\" />;\r\n        this.openPageElement(<Page header={search}>\r\n            <List\r\n                before=\"搜索用户名\"\r\n                items={this.pageUsers}\r\n                item={{render: this.renderSelectUser, onClick:this.onUserClick}} />\r\n        </Page>);\r\n    }\r\n}\r\n\r\nclass PageUsers extends PageItems<any> {\r\n    protected async load(param:{key:string, unit:number, role:number}, pageStart: any, pageSize: number): Promise<any[]> {\r\n        let {unit, role, key} = param;\r\n        let ret = await centerApi.get('unit/members', {key: key, unit:unit, role:role, pageStart:pageStart, pageSize:pageSize});\r\n        return ret;\r\n    }\r\n    protected setPageStart(item: any): any {\r\n        if (item === undefined)\r\n            this.pageStart = 0;\r\n        else\r\n            this.pageStart = item.id;\r\n    }\r\n}","import React from \"react\";\r\nimport { Page, Controller, appInFrame, VPage } from \"tonva-tools\";\r\nimport { List, Muted, LMR, FA } from \"tonva-react-form\";\r\nimport { VOpBinding } from './vOpBinding';\r\nimport { CAction, CQuery, centerApi, entityIcons, ControllerUq } from \"tonva-react-uq\";\r\nimport { Organization, Team, Section, Post, Sheet, App, Uq, To, Entity, EntityBlock } from \"./model\";\r\nimport { VAllPosts } from \"./vAllPosts\";\r\nimport { VFullFunction } from \"./vFullFunction\";\r\nimport { VSearchUser } from \"./vSearchUser\";\r\n\r\n// 单据跟操作的绑定设置\r\nexport class COpBinding extends ControllerUq {\r\n    /*\r\n    constructor(unitxUq: CUq, res:any) {\r\n        super({});\r\n        this.unitxUq = unitxUq;\r\n    }*/\r\n\r\n    icon = <FA name=\"map-o\" className=\"text-success\" fixWidth={true} />;\r\n    label = '岗位权限 - UQ对象';\r\n\r\n    //private unitxUq: CUq;\r\n    private apps: App[];\r\n    organizations: Organization[];\r\n    teams: Team[];\r\n    sections: Section[];\r\n    posts: Post[];\r\n    postDict: {[id:number]:Post};\r\n    teamDict: {[id:number]:Team};\r\n    organizationDict: {[id:number]:Organization};\r\n    sectionDict: {[id:number]:Section};\r\n\r\n    protected async internalStart():Promise<void> {\r\n        await this.buildPosts();\r\n        await this.buildAppsUqs();\r\n        this.openPage(<this.appsView />);\r\n    }\r\n\r\n    private async buildAppsUqs() {\r\n        let unit = appInFrame.unit;\r\n        let ret:any[][] = await centerApi.get('/unit/apps-uqs', {unit: unit});\r\n        this.apps = ret[0];\r\n        let uqs: Uq[] = ret[1];\r\n\r\n        for (let app of this.apps) {\r\n            app.uqs = [];\r\n        }\r\n        for (let uq of uqs) {\r\n            let app = this.apps.find(v => v.id === uq.app);\r\n            if (app === undefined) continue;\r\n            app.uqs.push(uq);\r\n            this.setUqEntities(uq);\r\n        }\r\n    }\r\n\r\n    private async buildPosts() {\r\n        let queryAllTeams = this.cUq.cFromName('query', 'allteams') as CQuery;\r\n        let ret:any[][] = await queryAllTeams.entity.query(undefined);\r\n        this.teams = ret['teams'];\r\n        this.organizations = ret['organization'];\r\n        this.posts = ret['organizationpost'];\r\n        this.sections = ret['sections'];\r\n        this.postDict = {};\r\n        this.teamDict = {};\r\n        this.organizationDict = {};\r\n        this.sectionDict = {};\r\n        for (let organization of this.organizations) {\r\n            organization.posts = [];\r\n            organization.teams = [];\r\n            this.organizationDict[organization.id] = organization;\r\n        }\r\n        for (let team of this.teams) {\r\n            team.organizations = [];\r\n            team.sections = [];\r\n            this.teamDict[team.id] = team;\r\n        }\r\n        for (let section of this.sections) {\r\n            section.teams = [];\r\n            this.sectionDict[section.id] = section;\r\n        }\r\n        for (let post of this.posts) {\r\n            this.postDict[post.id] = post;\r\n            let organization = this.organizationDict[post.owner];\r\n            if (organization === undefined) {\r\n                continue;\r\n            }\r\n            post.organization = organization;\r\n            organization.posts.push(post);\r\n        }\r\n        // teamOrganization\r\n        for (let teamOrganization of ret['teamorganization']) {\r\n            let {team:tm, organization:og} = teamOrganization;\r\n            let team = this.teamDict[tm];\r\n            let organization = this.organizationDict[og];\r\n            team.organizations.push(organization);\r\n            organization.teams.push(team);\r\n        }\r\n        // sectionTeam\r\n        for (let sectionTeam of ret['sectionteam']) {\r\n            let {section:sec, team:tm} = sectionTeam;\r\n            let section = this.sectionDict[sec];\r\n            let team = this.teamDict[tm];\r\n            section.teams.push(team);\r\n            team.sections.push(section);\r\n        }\r\n    }\r\n\r\n    private setUqEntities(uq:Uq) {\r\n        let entities = uq.entities;\r\n        if (entities === null) return;\r\n        let lns = entities.split('\\n');\r\n        let len = lns.length;\r\n        let p:number;\r\n        for (let i=0; i<len;) {\r\n            switch (lns[i]) {\r\n                case 'tuid': p = this.setEntities(uq.tuids = [], lns, i, uq); break;\r\n                case 'map': p = this.setEntities(uq.maps = [], lns, i, uq); break;\r\n                case 'book': p = this.setEntities(uq.books = [], lns, i, uq); break;\r\n                case 'history': p = this.setEntities(uq.histories = [], lns, i, uq); break;\r\n                case 'pending': p = this.setEntities(uq.pendings = [], lns, i, uq); break;\r\n                case 'query': p = this.setEntities(uq.queries = [], lns, i, uq); break;\r\n                case 'action': p = this.setEntities(uq.actions = [], lns, i, uq); break;\r\n                case 'sheet': p = this.setSheets(uq.sheets = [], lns, i, uq); break;\r\n                default:\r\n                    alert('unknown entity type: ' + lns[i]);\r\n                    return;\r\n            }\r\n            i = p;\r\n        }\r\n    }\r\n\r\n    private setEntities(entities:Entity[], lines:string[], p:number, uq:Uq):number {\r\n        let len = lines.length;\r\n        let i = p+1;\r\n        for (; i<len; i++) {\r\n            let ln = lines[i];\r\n            if (ln.length > 0) {\r\n                let name = ln;\r\n                entities.push({\r\n                    uq: uq,\r\n                    name: name,\r\n                    states: undefined\r\n                });\r\n            }\r\n            else return i+1;\r\n        }\r\n        return i;\r\n    }\r\n\r\n    private setSheets(sheets:Sheet[], lines:string[], p:number, uq:Uq):number {\r\n        let len = lines.length;\r\n        let i = p+1;\r\n        for (; i<len; i++) {\r\n            let ln = lines[i];\r\n            if (ln.length > 0) {\r\n                let parts:string[] = ln.split('\\t');\r\n                let name = parts[0];\r\n                parts[0] = '$';\r\n                let sheet:Sheet = {\r\n                    uq: uq,\r\n                    name: name,\r\n                    states: parts,\r\n                }\r\n                sheets.push(sheet);\r\n            }\r\n            else return i+1;\r\n        }\r\n        return i;\r\n    }\r\n\r\n    async saveSheetStatePosts(sheet:Sheet, stateName:string, toArr:{post:number, team:number, section:number}[]) {\r\n        let actionSaveEntityOpPost = this.cUq.cFromName('action', 'saveentityoppost') as CAction;\r\n        let {uq, name} = sheet;\r\n        await actionSaveEntityOpPost.submit({\r\n            uq: uq.id,\r\n            entityName: name,\r\n            opName: stateName,\r\n            posts: toArr\r\n        });\r\n    }\r\n\r\n    private appRender = (app:App, index:number) => {\r\n        let {name, discription} = app;\r\n        return <LMR className=\"px-3 py-2\" right={discription && <Muted>{discription}</Muted>}>\r\n            {name}\r\n        </LMR>\r\n    }\r\n\r\n    private appClick = (app:App) => {\r\n        this.openPage(<this.appView {...app} />)\r\n    }\r\n\r\n    async callSearchUser(uq:Uq): Promise<any> {\r\n        let user = await this.vCall(VSearchUser, appInFrame.unit);\r\n        return user;\r\n    }\r\n\r\n    private appsView = () => <Page header={this.label}>\r\n        <div className=\"text-muted p-3 small\">\r\n            <div style={{lineHeight:'1.8', fontWeight:'bold'}}>说明</div>\r\n            <ol className=\"pl-3\" style={{listStyleType: '1', lineHeight: '1.8'}}>\r\n                <li >\r\n                    下面是全部启用的APP。请选择\r\n                </li>\r\n                <li>\r\n                    每个APP会使用一个以上的UQ。UQ里面定义了Tuid，Action，Map和Sheet等对象。\r\n                </li>\r\n                <li>\r\n                    设置对象跟岗位的关联\r\n                </li>\r\n            </ol>\r\n        </div>\r\n        <List items={this.apps} item={{render:this.appRender, onClick:this.appClick}} />\r\n    </Page>;\r\n\r\n    private entityRender(entity:Entity, icon:any) {\r\n        let {name} = entity;\r\n        return <div className=\"px-3 py-2 align-items-center\">{icon} &nbsp; {name}</div>\r\n    }\r\n    private sheetRender(sheet:Sheet, icon:any) {\r\n        let {name, states} = sheet;\r\n        return <div className=\"px-3 py-2 align-items-center\">\r\n            {icon} &nbsp; {name} <Muted> &nbsp; {sheet.states.join(', ')}</Muted>\r\n        </div>\r\n    }\r\n    private entityClick = async (block:EntityBlock, entity:Entity) => {\r\n        //alert('entity click');\r\n        let entityPosts = this.cUq.cFromName('query', 'getEntityPost') as CQuery;\r\n        let ret = await entityPosts.entity.query({uq: entity.uq.id, entityName: entity.name});\r\n        let opTos:{[op:string]:To[]} = {};\r\n        for (let row of ret.ret) {\r\n            let {op, post, team, section} = row;\r\n            let opTo = opTos[op];\r\n            if (opTo === undefined) opTos[op] = opTo = [];\r\n            opTo.push({\r\n                post: this.postDict[post],\r\n                team: this.teamDict[team],\r\n                section: this.sectionDict[section],\r\n            });\r\n        }\r\n        this.openVPage(VOpBinding, {entity:entity, opTos:opTos});\r\n    }\r\n    private sheetClick = async (block:EntityBlock, sheet:Sheet) => {\r\n        this.sheetClickOld(sheet);\r\n    }\r\n\r\n    private sheetClickOld = async (sheet:Sheet) => {\r\n        let entityPosts = this.cUq.cFromName('query', 'getEntityPost') as CQuery;\r\n        let ret = await entityPosts.entity.query({uq: sheet.uq.id, entityName: sheet.name});\r\n        let opTos:{[op:string]:To[]} = {};\r\n        for (let row of ret.ret) {\r\n            let {op, post, team, section} = row;\r\n            let opTo = opTos[op];\r\n            if (opTo === undefined) opTos[op] = opTo = [];\r\n            opTo.push({\r\n                post: this.postDict[post],\r\n                team: this.teamDict[team],\r\n                section: this.sectionDict[section],\r\n            });\r\n        }\r\n        this.openVPage(VOpBinding, {entity:sheet, opTos:opTos});\r\n    }\r\n\r\n    private renderSetting = (item:any, index:number) => {\r\n        let {icon, color, text} = item;\r\n        return <div className=\"px-3 py-2 align-items-center\">\r\n            {<FA name={icon} fixWidth={true} className={color} />} &nbsp; {text}\r\n        </div>\r\n    }\r\n\r\n    private settingClick = (item:any, uq:Uq) => {\r\n        let {name} = item;\r\n        let V: new (coordinator) => VPage<COpBinding>;\r\n        switch (name) {\r\n            default: return;\r\n            case 'entity-by-all-post': V = VAllPosts; break;\r\n            case 'user-all-entities': V = VFullFunction; break;\r\n        }\r\n        this.openVPage(V, uq);\r\n    }\r\n    \r\n    private uqRender = (uq:Uq, index:number) => {\r\n        let {name, tuids, actions, maps, books, queries, histories, pendings, sheets} = uq;\r\n        let nameRender = this.entityRender;\r\n        let blocks:EntityBlock[] = [\r\n            {items: tuids, type: 'tuid', itemClick: this.entityClick},\r\n            {items: sheets, type: 'sheet', itemClick: this.sheetClick, itemRender: this.sheetRender},\r\n            {items: actions, type: 'action', itemClick: this.entityClick},\r\n            {items: maps, type: 'map', itemClick: this.entityClick},\r\n            {items: books, type: 'book', itemClick: this.entityClick},\r\n            {items: queries, type: 'query', itemClick: this.entityClick},\r\n            {items: histories, type: 'history', itemClick: this.entityClick},\r\n            {items: pendings, type: 'pending', itemClick: this.entityClick},\r\n        ];\r\n\r\n        let settings:any[] = [\r\n            {name:'entity-by-all-post', icon: 'cog', color: 'text-success', text: '所有岗位可操作'},\r\n            {name: 'user-all-entities', icon: 'cog', color: 'text-success', text: '全功能用户'}\r\n        ];\r\n\r\n        // {icon} &nbsp; {name} <Muted> &nbsp; {sheet.states.join(', ')}</Muted>\r\n        return <div key={name} className=\"my-2\">\r\n            <div className=\"px-3 font-weight-bold\">{name}</div>\r\n            <List className=\"mt-3\"\r\n                items={settings}\r\n                item={{\r\n                    key: (item:any)=>item.name, \r\n                    render: this.renderSetting,\r\n                    onClick:(item:any)=>this.settingClick(item, uq) \r\n                }}\r\n             />\r\n            {blocks.map(block => {\r\n                let {items, type, itemClick, itemRender} = block;\r\n                let icon = entityIcons[type];\r\n                return items && items.length>0 &&\r\n                    <List key={type} className=\"mt-3\"\r\n                        header={<Muted className=\"px-3 pt-1 bg-light w-100\">{this.res[type]||type}</Muted>} \r\n                        items={items} \r\n                        item={{\r\n                            key: (item:any)=>item.name, \r\n                            render:(item:any, index:number)=>(itemRender || nameRender)(item, icon), \r\n                            onClick: (item:Entity)=>itemClick(block, item)\r\n                        }} />;\r\n            })}\r\n        </div>;\r\n        /*\r\n        function headerCaption(caption:string):JSX.Element {\r\n            return <Muted className=\"px-3 pt-1 bg-light w-100\">{caption}</Muted>\r\n        }\r\n        function itemList(items:any[], type:string, itemClick:(item:any)=>void, render:((item:any, icon:any)=>JSX.Element) = nameRender) {\r\n            //let res = entitiesRes;\r\n            //let {caption, icon} = res[type];\r\n            let icon = entityIcons[type];\r\n            return items && \r\n                <List className=\"mt-3\"\r\n                    header={headerCaption(type)} \r\n                    items={items} \r\n                    item={{render:(item:any, index:number)=>render(item, icon), onClick: itemClick}} />;\r\n        }\r\n            {itemList(tuids, 'tuid', this.tuidClick)}\r\n            {itemList(sheets, 'sheet', this.sheetClickOld, this.sheetRender)}\r\n            {itemList(actions, 'action', this.actionClick)}\r\n            {itemList(maps, 'map', this.mapClick)}\r\n            {itemList(books, 'book', this.bookClick)}\r\n            {itemList(queries, 'query', this.queryClick)}\r\n            {itemList(histories, 'history', this.historyClick)}\r\n            {itemList(pendings, 'pending', this.pendingClick)}\r\n        */\r\n    }\r\n\r\n    private appView = (app:App) => <Page header={app.name + '操作权限'}>\r\n        {\r\n            app.uqs.map((v, index) => this.uqRender(v, index))\r\n        }\r\n    </Page>;\r\n\r\n    /*\r\n    private tuidClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    private mapClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    private actionClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    private bookClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    private queryClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    private historyClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    private pendingClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    */\r\n}\r\n","import * as React from 'react';\r\nimport { Page, VPage } from 'tonva';\r\nimport { List, FA } from 'tonva';\r\nimport { CUq, Link, CLink, CApp } from \"tonva-react-uq\";\r\nimport ui from './ui';\r\nimport { COpBinding } from './op';\r\n\r\nexport class COrganization extends CUq {\r\n    constructor() {\r\n        super(undefined, '$$$/$unitx', 0, 0, undefined, ui);\r\n    }\r\n\r\n    label = '岗位权限';\r\n    icon = 'sitemap';\r\n    links: (CLink|string)[];\r\n\r\n    protected clearPrevPages() {\r\n        // 保留回退按钮，所以，去掉下面这行\r\n        //nav.clear();\r\n    }\r\n\r\n    protected async loadEntites() {\r\n        // 只有赋Entity权限的地方，需要取全部的Entities，其它地方默认取user access，this.entities.loadAccess()\r\n        await this.entities.loadEntities();\r\n    }\r\n\r\n    protected async internalStart() {\r\n        await this.loadSchema();\r\n        this.links= [\r\n            '',\r\n            new CLink(new COpBinding(this, this.res)),\r\n            '',\r\n            this.linkFromName('map', 'teamPerson'),\r\n            this.linkFromName('map', 'sectionTeam'),\r\n            this.linkFromName('map', 'teamOrganization'),\r\n            '',\r\n            this.linkFromName('tuid', 'person'),\r\n            this.linkFromName('tuid', 'team'),\r\n            this.linkFromName('tuid', 'section'),\r\n            this.linkFromName('tuid', 'organization'),\r\n        ];\r\n        this.openVPage(VOrganization);\r\n    }\r\n    \r\n}\r\n\r\nclass VOrganization extends VPage<COrganization> {\r\n    async open() {\r\n        this.openPage(this.appPage);\r\n    }\r\n\r\n    private renderRow = (link: Link, index:number) => {\r\n        return link.render('bg-white');\r\n    }\r\n\r\n    protected appPage = () => {\r\n        let {links, label} = this.controller;\r\n        return <Page header={label} logout={async ()=>{}}>\r\n            <List items={links} item={{render: this.renderRow}} />\r\n        </Page>;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { AppController } from '.';\r\nimport { VPage, nav, Page, ItemSchema, UiSchema, StringSchema, BoolSchema, UiTextItem, UiTextAreaItem, UiCheckItem, Form, ButtonSchema, Context, ImageSchema, UiImageItem, IdSchema, UiIdItem } from 'tonva';\r\nimport { SubmitResult, DropdownActions, TonvaForm, FormRow } from 'tonva';\r\nimport { createIdPick, IdPickProps } from 'createIdPick';\r\nimport { DevModel } from 'model';\r\nimport { store } from 'store';\r\nimport { IdPickPage, ServerSpan } from '../../tools';\r\nimport { observer } from 'mobx-react';\r\n\r\nconst ServerCaption = (item:DevModel.Server) => {\r\n    let {discription, cloud, ip} = item;\r\n    return <>{discription} {cloud} {ip}</>;\r\n}\r\nconst idPickServerProps: IdPickProps = {\r\n    caption: '选择服务器',\r\n    searchPlaceHolder: '搜索服务器',\r\n    candidateItems: async (params:any, key:string) => {\r\n        await store.dev.searchServer.first(key);\r\n        return store.dev.searchServer.items;\r\n    },\r\n    moreCandidates: async () => {\r\n        await store.dev.searchServer.more();\r\n    },\r\n    row: (item:DevModel.Server, index:number) => {\r\n        return <div className=\"px-3 py-2\"><ServerCaption {...item} /></div>;\r\n    },\r\n};\r\n\r\nconst schema:ItemSchema[] = [\r\n    {name: 'name', type: 'string', maxLength: 100, required: true} as StringSchema,\r\n    {name: 'caption', type: 'string', maxLength: 100} as StringSchema,\r\n    {name: 'discription', type: 'string', maxLength: 250} as StringSchema,\r\n    {name: 'url', type: 'string', maxLength: 200} as StringSchema,\r\n    {name: 'public', type: 'boolean'} as BoolSchema,\r\n    {name: 'server', type: 'id'} as IdSchema,\r\n    {name: 'icon', type: 'image'} as ImageSchema,\r\n    {name: 'submit', type: 'submit'} as ButtonSchema,\r\n];\r\n\r\nexport abstract class EditBasePage extends VPage<AppController> {\r\n    private candidateItems = async (params:any, key:string):Promise<any[]> => {\r\n        await store.dev.searchServer.first(key);\r\n        return store.dev.searchServer.items;\r\n    }\r\n\r\n    private moreCandidates = async ():Promise<void> => {\r\n        await store.dev.searchServer.more();\r\n    }\r\n\r\n    private renderRow = (item:DevModel.Server, index:number): JSX.Element => {\r\n        return <div className=\"px-3 py-2\"><ServerCaption {...item} /></div>;\r\n    }\r\n\r\n    private pickServerId = (context:Context, name:string, value:number): Promise<number> => {\r\n        return new Promise<number>((resolve, reject) => {\r\n            nav.push(<IdPickPage \r\n                caption=\"选择服务器\" \r\n                searchPlaceHolder=\"搜索服务器\"\r\n                candidateItems={this.candidateItems}\r\n                moreCandidates={this.moreCandidates}\r\n                row={this.renderRow}\r\n                idFromItem={(item:DevModel.Server) => item.id}\r\n                resolve={resolve} params={undefined} />, \r\n                ()=> {\r\n                    reject();\r\n                });\r\n        });\r\n    }\r\n\r\n    private renderServerInput = (itemId:number): JSX.Element => {\r\n        return <ServerSpan id={itemId} />;\r\n    };\r\n\r\n    private uiSchema:UiSchema = {\r\n        items: {\r\n            name: {widget: 'text', label: '名称'} as UiTextItem,\r\n            caption: {widget: 'text', label: '标题'} as UiTextItem,\r\n            discription: {widget: 'textarea', label: '描述', rows: 5} as UiTextAreaItem,\r\n            url: {widget: 'text', label: 'URL', placeholder: 'http(s)://APP地址'} as UiTextItem,\r\n            'public': {widget: 'checkbox', label: '公开', } as UiCheckItem,\r\n            server: {widget: 'id', label: '服务器', pickId: this.pickServerId, Templet: this.renderServerInput} as UiIdItem,\r\n            icon: {widget: 'image', label: '标志图'} as UiImageItem,\r\n            submit: {widget: 'button', label: '提交', className: 'btn btn-primary'}\r\n        }\r\n    }\r\n    \r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n    private onButtonClick = async (name:string, context: Context) => {\r\n        let {data} = context;\r\n        let app:DevModel.App = _.clone(this.controller.app) || {} as any;\r\n        _.merge(app, data);\r\n        await this.controller.saveApp(app);\r\n        nav.pop();\r\n    }\r\n    protected page: ()=>JSX.Element;\r\n    protected form = observer(() => {\r\n        return <Form fieldLabelSize={2}\r\n            className=\"m-3\" \r\n            schema={schema} \r\n            uiSchema={this.uiSchema}\r\n            formData={this.initValues}\r\n            onButtonClick={this.onButtonClick} />\r\n    });\r\n    abstract get initValues():any;\r\n}\r\n\r\nexport class EditPage extends EditBasePage {\r\n    get initValues():any {return this.controller.app}\r\n    protected page = () => {\r\n        let {app} = this.controller;\r\n        let {name} = app;\r\n        return <Page header={'修改APP - ' + name} back=\"close\">\r\n            <this.form />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nexport class NewPage extends EditBasePage {\r\n    get initValues():any {return {}}\r\n    protected page = () => {\r\n        return <Page header={'新建APP'} back=\"close\">\r\n            <this.form />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, Image } from \"tonva-tools\";\r\nimport { AppController } from '.';\r\nimport { List, LMR, Badge, Muted, FA } from 'tonva';\r\nimport { DevModel } from 'model';\r\nimport { NewPage } from './editPage';\r\n\r\nexport class AppsPage extends VPage<AppController> {\r\n    async open(param:any) {\r\n        this.openPage(this.page);\r\n    }\r\n    private newItem = () => {\r\n        this.openVPage(NewPage);\r\n    }\r\n    private page = ():JSX.Element => {\r\n        let {appList, listRowClick} = this.controller;\r\n        let right = <button className='btn btn-secondary btn-sm' onClick={()=>this.newItem()}><FA name=\"plus\" /></button>;\r\n        return <Page header=\"App\" right={right}>\r\n            <List items={appList} item={{render: this.appRow, onClick: listRowClick}} />\r\n        </Page>\r\n    }\r\n    private appRow = (item:DevModel.App):JSX.Element => {\r\n        let {name, caption, discription, icon, url, urlDebug} = item;\r\n        let left = <Badge size=\"sm\"><Image src={icon} /></Badge>;\r\n        let right = <div className=\"text-muted small text-right\">\r\n            {url || '-'}<br/>\r\n            {urlDebug}\r\n        </div>;\r\n        let spanCaption = caption?\r\n            <>{name}: <b>{caption}</b></> :\r\n            <b>{name}</b>;\r\n        return <LMR className=\"py-2 px-3 align-items-stretch\"\r\n            left={left} right={right}>\r\n            <div className=\"px-3\">\r\n                <div>{spanCaption}</div>\r\n                <div><Muted>{discription}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { List, LMR, SearchBox } from 'tonva';\r\nimport { DevModel } from 'model';\r\nimport { UnitSpan } from 'tools';\r\nimport { store } from 'store';\r\nimport { nav, Page, VPage } from 'tonva';\r\nimport { AppController } from '.';\r\n\r\nexport class SearchUqPage extends VPage<AppController> {\r\n    @observable private uqs: DevModel.UQ[];\r\n\r\n    async open() {\r\n        this.uqs = await this.controller.getMyUqs();\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private onSearch = async (key:string) => {\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.uqs = await this.controller.searchUq(key, pageStart, pageSize);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let header = <SearchBox className=\"w-100 mx-1\" \r\n            onSearch={this.onSearch}\r\n            placeholder=\"搜索UQ名字\" \r\n            maxLength={100} />;\r\n        return <Page back=\"close\" header={header}>\r\n            <List items={this.uqs} item={{render: this.row, onClick: this.controller.onUq}} />\r\n        </Page>;\r\n    });\r\n\r\n    private row = (uq: DevModel.UQ) => {\r\n        let {owner, name, discription} = uq;\r\n        return <LMR className=\"py-2 px-3\" right={discription}>\r\n            <div>{owner} / {name}</div>\r\n        </LMR>;\r\n    };\r\n}\r\n\r\n@observer\r\nexport class AppUqs extends React.Component {\r\n    @observable anySelected: boolean = false;\r\n    private list:List;\r\n    private onSelect = (item: DevModel.UQ, isSelected:boolean, anySelected:boolean) => {\r\n        this.anySelected = anySelected;\r\n    }\r\n    private row = (item: DevModel.UQ) => {\r\n        let {name, unit, discription} = item;\r\n        return <LMR className=\"p-2\" right={<small className=\"text-muted\">{discription}</small>}>\r\n            <UnitSpan id={unit} />/{name}\r\n        </LMR>;\r\n    }\r\n    private removeBind = () => {\r\n        if (this.list === null) return;\r\n        let {selectedItems} = this.list;\r\n        if (selectedItems === undefined) return;\r\n        if (selectedItems.length === 0) return;\r\n        store.dev.apps.appBindUq(\r\n            selectedItems.map(v => {\r\n                return {id:v.id, access:['*']}\r\n            }), \r\n            false);\r\n    }\r\n    render() {\r\n        let btnProps = this.anySelected?\r\n            {color:'danger', onClick:this.removeBind, icon:'trash', text:'取消'}:\r\n            {color:'primary', onClick:()=>nav.push(<Uqs/>), icon:'plus', text:'新增'};\r\n        let btn = (p)=><button \r\n            className={classNames('btn', 'btn-outline-'+p.color, 'btn-sm')} \r\n            onClick={p.onClick}>\r\n            <i className={\"fa fa-\" + p.icon} /> {p.text}关联\r\n        </button>;\r\n        let listHeader = <div className=\"va-row py-1 justify-content-center\">{btn(btnProps)}</div>;\r\n        return <Page header=\"关联UQ\">\r\n            <List ref={list=>this.list=list} header={listHeader}\r\n                items={store.dev.apps.uqs}\r\n                item={{render: this.row, onSelect: this.onSelect}} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\n@observer\r\nclass Uqs extends React.Component {\r\n    onSearch = async (key:string) => {\r\n        await store.dev.apps.searchUq(key);\r\n    }\r\n    onBind(uq: DevModel.UQ, bind: boolean) {\r\n        store.dev.apps.appBindUq([{id:uq.id, access:['*']}], bind);\r\n    }\r\n    row = (uq: DevModel.UQ) => {\r\n        let isConnected = store.dev.apps.uqs.find(a => a.id === uq.id) !== undefined;\r\n        let cn = ['btn', 'btn-sm'];\r\n        let btnContent:any, onClick:any;\r\n        if (isConnected) {\r\n            cn.push('btn-success');\r\n            onClick = ()=>this.onBind(uq, false);\r\n            btnContent = \"已关联\";\r\n        }\r\n        else {\r\n            cn.push('btn-primary');\r\n            onClick = ()=>this.onBind(uq, true);\r\n            btnContent = <span><i className=\"fa fa-check\"/> 关联</span>;\r\n        }\r\n        return <div className=\"d-flex justify-content-start py-1 px-3\">\r\n            <div className=\"align-self-center\">{uq.name + ' - ' + uq.discription}</div>\r\n            <footer className=\"ml-auto\"><button className={classNames(cn)} onClick={onClick}>{btnContent}</button></footer>\r\n        </div>\r\n    }\r\n    render() {\r\n        let header = <SearchBox className=\"w-100 mx-1\" \r\n            onSearch={this.onSearch} \r\n            placeholder=\"搜索UQ名字\" \r\n            maxLength={100} />;\r\n        return <Page back=\"close\" header={header}>\r\n            <List items={store.dev.apps.searchedUqs} item={{render: this.row}} loading={null} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, nav } from 'tonva';\r\nimport { AppController, UqAccess } from '.';\r\nimport { IdDates, UnitSpan, ServerSpan, UnitName } from 'tools';\r\nimport { Prop, Media, PropGrid, ListProp, DropdownActions, List, LMR } from 'tonva';\r\nimport { EditPage } from './editPage';\r\nimport { AppUqs, SearchUqPage } from './appUqs';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class AppPage extends VPage<AppController> {\r\n    async open() {\r\n        //this.uqs.list = this.controller.uqs;\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private editItem = async () => {\r\n        await this.openVPage(EditPage);\r\n        //nav.push(<EditAppPage {...this.props} />);\r\n    }\r\n\r\n    private deleteItem = async () => {\r\n        if (confirm('真的要删除吗？系统删除时并不会检查相关引用，请谨慎') === true) {\r\n            await this.controller.deleteApp();\r\n            nav.pop();\r\n        }\r\n    }\r\n\r\n    private page = observer(():JSX.Element => {\r\n        let {app} = this.controller;\r\n        let {unit, name, caption, discription, icon, server, date_init, date_update} = app;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let menuItems = [\r\n            // {icon: 'cogs', caption:'设置关联UQ', action: ()=>nav.push(<AppUqs />)},\r\n            {caption:'修改App', action:this.editItem, icon:'edit' },\r\n            {caption:'删除', action:this.deleteItem, icon:'trash-o' }\r\n        ];\r\n\r\n        let right = <DropdownActions actions={menuItems} />;\r\n        let spanCaption = caption?\r\n            <>{name}: <b>{caption}</b></> :\r\n            <b>{name}</b>;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <Media icon={icon} main={spanCaption} discription={disp} />\r\n            },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                label: '开发号', \r\n                component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> \r\n            },\r\n            /*\r\n            {\r\n                type: 'component', \r\n                label: 'Service',\r\n                vAlign: 'stretch',\r\n                component: <ServiceRow />,\r\n            },*/\r\n            {\r\n                label: 'URL',\r\n                name: 'url',\r\n                type: 'string',                \r\n            },\r\n            {\r\n                type: 'component',\r\n                label: '服务器',\r\n                component: <ServerSpan id={server} />\r\n            },\r\n            '',\r\n            //this.uqs,\r\n        ];\r\n        let btnAddUq = <button className=\"btn btn-outline-primary btn-sm\" onClick={()=>this.openVPage(SearchUqPage)}>\r\n            增加关联\r\n        </button>;\r\n        return <Page header={'App - ' + name} right={right}>\r\n            <PropGrid rows={rows} values={app} />\r\n            <LMR className=\"mx-3 mt-3 mb-1\" right={btnAddUq}>\r\n                关联UQ\r\n            </LMR>\r\n            <List items={this.controller.uqAccesses} item={{render:this.renderUqRow, onClick:this.uqClick}} />\r\n        </Page>\r\n    })\r\n\r\n    private uqClick = (uqAccess:UqAccess) => {\r\n        this.controller.onUq(uqAccess.uq);\r\n    }\r\n\r\n    private renderUqRow = (uqAccess:UqAccess, index:number):JSX.Element => {\r\n        let {uq, bind_access: access} = uqAccess;\r\n        let {name, discription, unit} = uq;\r\n        let disp: any;\r\n        let elAccess: any;\r\n        if (access && access.length > 0) {\r\n            elAccess = <> + {access.join(', ')} </>;\r\n        }\r\n        if (discription) disp = <div className=\"small text-muted\"> &nbsp; {discription}</div>;\r\n        return <LMR className=\"px-3 py-2 align-items-center\" right={disp}>\r\n            <UnitName id={unit} /> / {name} {elAccess}\r\n        </LMR>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, nav } from \"tonva-tools\";\r\nimport { AppController, UqAccess } from \".\";\r\nimport { LMR } from 'tonva';\r\n\r\nexport class UqBindPage extends VPage<AppController> {\r\n    private uqAccess: UqAccess;\r\n    private accesses: string[];\r\n    private accessChecked:{[name:string]:boolean};\r\n    async open(uqAccess: UqAccess) {\r\n        this.uqAccess = uqAccess;\r\n        let {uq, bind_access} = this.uqAccess;\r\n        let {access} = uq;\r\n        if (access) {\r\n            this.accessChecked = {};\r\n            this.accesses = access.split(',');\r\n            for (let acc of this.accesses) {\r\n                this.accessChecked[acc] = (bind_access && bind_access.find(bc => bc === acc)) !== undefined;\r\n            }\r\n        }\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private onCheckChanged = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        let {target} = evt;\r\n        this.accessChecked[target.name] = target.checked;\r\n    }\r\n\r\n    private saveUqBind = async () => {\r\n        let acc:string[] = [];\r\n        if (this.accesses) {\r\n            for (let i in this.accessChecked) {\r\n                if (this.accessChecked[i] === true) acc.push(i);\r\n            }\r\n        }\r\n        await this.controller.saveUqBind(this.uqAccess.uq, acc);\r\n        nav.pop();\r\n    }\r\n\r\n    private removeUqBind = async () => {\r\n        await this.controller.removeUqBind(this.uqAccess.uq);\r\n        nav.pop();\r\n    }\r\n\r\n    private page = ():JSX.Element => {\r\n        let {uq, bind_access} = this.uqAccess;\r\n        let {owner, name, discription, access} = uq;\r\n        let btnDelete:any;\r\n        if (bind_access !== null && bind_access !== undefined) {\r\n            btnDelete = <button className=\"btn btn-outline-danger btn-sm\" onClick={this.removeUqBind}>取消关联</button>;\r\n        }\r\n        let checkAccessList:any;\r\n        if (this.accesses) {\r\n            checkAccessList = <div className=\"mt-3\">\r\n            {\r\n                this.accesses.map(v => {\r\n                    let checked = this.accessChecked[v];\r\n                    return <label key={v} className=\"d-inline-block mr-4\">\r\n                        <input onChange={this.onCheckChanged}\r\n                            style={{width:'1.1rem', height:'1.1rem'}} \r\n                            name={v} type=\"checkbox\" defaultChecked={checked} />&nbsp;{v}\r\n                    </label>;\r\n                })\r\n            }\r\n            </div>;\r\n        }\r\n        return <Page header=\"关联UQ\">\r\n            <div className=\"m-3 py-3 px-3 bg-white border\">\r\n                <div>{owner} / {name}</div>\r\n                <div className=\"text-muted\">{discription}</div>\r\n                {checkAccessList}\r\n                <LMR className=\"pt-3\" right={btnDelete}>\r\n                    <button className=\"btn btn-primary btn-sm\" onClick={this.saveUqBind}>保存关联</button>\r\n                </LMR>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { observable } from 'mobx';\r\nimport { Controller } from \"tonva-tools\";\r\nimport { DevModel } from 'model';\r\nimport { devApi } from 'api';\r\nimport { AppsPage } from './appsPage';\r\nimport { AppPage } from './appPage';\r\nimport { UqBindPage } from './uqBindPage';\r\n\r\nexport interface UqAccess {\r\n    uq: DevModel.UQ;\r\n    bind_access: string[];\r\n}\r\n\r\nexport class AppController extends Controller {\r\n    private unitId: number;\r\n    app: DevModel.App;\r\n    @observable appList: DevModel.App[];\r\n    @observable uqAccesses: UqAccess[];\r\n    protected async internalStart(unitId:any) {\r\n        this.unitId = unitId;\r\n        this.appList = await devApi.apps(this.unitId);\r\n        this.openVPage(AppsPage);\r\n    }\r\n\r\n    listRowClick = async (item:DevModel.App) => {\r\n        this.app = item;\r\n        let ret = await devApi.loadAppUqs(item.id);\r\n        this.uqAccesses = ret.map(v => {\r\n            let {owner, access, id, name, discription, unit, date_init, date_update, bind_access} = v;\r\n            return {\r\n                uq: {\r\n                    id: id,\r\n                    name: name,\r\n                    discription: discription,\r\n                    unit: unit,\r\n                    access: access,\r\n                    owner: owner,\r\n                    date_init: date_init,\r\n                    date_update: date_update, \r\n                    service_count: undefined,\r\n                },\r\n                uqOwner: owner,\r\n                bind_access: bind_access && bind_access.split(',')\r\n            }\r\n        });\r\n        this.openVPage(AppPage);\r\n    }\r\n\r\n    saveApp = async (values: DevModel.App) => {\r\n        let app: DevModel.App;\r\n        let now = new Date();\r\n        if (this.app === undefined) {\r\n            app = _.clone(values);\r\n            app.date_init = now;\r\n        }\r\n        else {\r\n            app = _.clone(this.app);\r\n            _.merge(app, values);\r\n        }\r\n        app.unit = this.unitId;\r\n        app.date_update = now;\r\n        let ret = await devApi.saveApp(app);\r\n        app.id = ret;\r\n        let org = this.appList.find(v => v.id === ret);\r\n        if (org !== undefined) {\r\n            _.merge(org, app);\r\n        }\r\n        else {\r\n            this.appList.push(app);\r\n        }\r\n    }\r\n\r\n    deleteApp = async () => {\r\n        await devApi.delApp(this.unitId, this.app.id);\r\n        let index = this.appList.findIndex(v => v.id === this.app.id);\r\n        if (index >= 0) this.appList.splice(index, 1);\r\n    }\r\n\r\n    searchUq = async (key:string, pageStart:number, pageSize:number) => {\r\n        return await devApi.searchUq(this.unitId, key, pageStart, pageSize);\r\n    }\r\n\r\n    getMyUqs = async () => {\r\n        return await devApi.getMyUqs(this.unitId);\r\n    }\r\n\r\n    onUq = (uq: DevModel.UQ) => {\r\n        let uqAccess:UqAccess = this.uqAccesses.find(v => v.uq.id === uq.id);\r\n        if (uqAccess === undefined) {\r\n            uqAccess = {\r\n                uq: uq,\r\n                bind_access: undefined,\r\n            }\r\n        }\r\n        else {\r\n            let access = uqAccess.bind_access;\r\n            if (access === null || access === undefined) uqAccess.bind_access = [];\r\n        }\r\n        this.openVPage(UqBindPage, uqAccess);\r\n    }\r\n\r\n    // accesses = undefined, 表示删除\r\n    private buildBindUqs(uq: DevModel.UQ, accesses?:string[]) {\r\n        let uqs:{id:number, access:string[]}[] = [];\r\n        let isNew = true;\r\n        for (let ua of this.uqAccesses) {\r\n            let {uq:uaUq, bind_access} = ua;\r\n            if (uaUq.id === uq.id) {\r\n                if (accesses === undefined) continue;\r\n                bind_access = accesses;\r\n                isNew = false;\r\n            }\r\n            uqs.push({\r\n                id: uaUq.id,\r\n                access: bind_access || [],\r\n            });\r\n        }\r\n        if (accesses !== undefined && isNew === true) {\r\n            uqs.push({id: uq.id, access: accesses});\r\n        }\r\n        return uqs;\r\n    }\r\n\r\n    saveUqBind = async (uq: DevModel.UQ, accesses:string[]) => {\r\n        let uqs:{id:number, access:string[]}[] = this.buildBindUqs(uq, accesses);\r\n        await devApi.appBindUq(this.unitId, this.app.id, uqs);\r\n        if (uqs.length > this.uqAccesses.length) {\r\n            this.uqAccesses.unshift({\r\n                uq: uq,\r\n                bind_access: accesses,\r\n            });\r\n        }\r\n        else {\r\n            let ua = this.uqAccesses.find(v => v.uq.id === uq.id);\r\n            ua.bind_access = accesses;\r\n        }\r\n    }\r\n\r\n    removeUqBind = async (uq: DevModel.UQ) => {\r\n        let uqs:{id:number, access:string[]}[] = this.buildBindUqs(uq);\r\n        await devApi.appBindUq(this.unitId, this.app.id, uqs);\r\n        let index = this.uqAccesses.findIndex(v => v.uq.id === uq.id);\r\n        if (index>=0) this.uqAccesses.splice(index, 1);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {nav, Page} from 'tonva';\r\nimport {List, EasyDate, LMR, Muted} from 'tonva';\r\nimport {DevModel} from '../../model';\r\nimport {store} from '../../store';\r\n\r\ninterface State {\r\n    files: any[];\r\n    compiled?: string;\r\n    text?: string;\r\n}\r\n\r\nexport interface UqUploadProps {\r\n    uq: DevModel.UQ;\r\n    services: DevModel.Service[];\r\n}\r\n\r\nexport class UqUpload extends React.Component<UqUploadProps, State> {\r\n    private fileInput: HTMLInputElement;\r\n\r\n    constructor(props:UqUploadProps) {\r\n        super(props);\r\n        this.state = {\r\n            files: undefined,\r\n        }\r\n    }\r\n    private onFilesChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        let upFiles:any[] = [];\r\n        let {files} = evt.target;\r\n        let len = files.length;\r\n        for (let i=0; i<len; i++) {\r\n            upFiles.push(files[i]);\r\n        }\r\n        this.setState({\r\n            files: upFiles,\r\n        });\r\n    }\r\n    fileRender(file, index):JSX.Element {\r\n        let {name, size, lastModifiedDate} = file;\r\n        function sz():string {\r\n            let n:number, u:string;\r\n            if (size < 1024) {\r\n                n = size; u = 'b';\r\n            }\r\n            else if (size < 1024*1024) {\r\n                n = Math.trunc((size / 1024) * 100)/100; u = 'k';\r\n            }\r\n            else {\r\n                n = Math.trunc((size / 1024 / 1024) * 100)/100; u = 'm';\r\n            }\r\n            return n + ' ' + u;\r\n        }\r\n        return <LMR className=\"px-2 py-1\" right={<Muted>{sz()}</Muted>}>\r\n            <div>{name}</div>\r\n            <div><Muted>修改日期: <EasyDate date={lastModifiedDate} /></Muted></div>\r\n        </LMR>;\r\n    }\r\n    private fileClick = (file:any) => {\r\n        let fr = new FileReader();\r\n        fr.onload = function(f) {\r\n            //alert(this.result);\r\n            nav.push(<UqPage name={file.name} content={this.result} />)\r\n        }\r\n        fr.readAsText(file, \"utf8\");\r\n    }\r\n    private onSubmit = (evt:React.FormEvent<any>) => {\r\n        evt.preventDefault();\r\n    }\r\n\r\n    private async update(thoroughly:boolean) {\r\n        var files:FileList = this.fileInput.files;\r\n        var data = new FormData();\r\n        let len = files.length;\r\n        for (let i=0; i<len; i++) {\r\n            let file = files[i];\r\n            data.append('files[]', file, file.name);\r\n        }\r\n  \r\n        let url = store.uqServer + 'uq-compile/' + this.props.uq.id + '/update';\r\n        if (thoroughly === true) url += '-thoroughly';\r\n        try {\r\n            let abortController = new AbortController();\r\n            let res = await fetch(url, {\r\n                method: \"POST\",\r\n                body: data,\r\n                signal: abortController.signal,\r\n            });\r\n            nav.push(<CompileResult {...this.props} res={res} abortController={abortController} />);\r\n        }\r\n        catch (e) {\r\n            console.error('%s %s', url, e);\r\n        }\r\n    }\r\n    private onUpdate = async () => {\r\n        let thoroughly = false;\r\n        await this.update(thoroughly);\r\n    }\r\n    private onUpdateThoroughly = async () => {\r\n        let thoroughly = true;\r\n        await this.update(thoroughly);\r\n    }\r\n    render() {\r\n        let {files} = this.state;\r\n        let fileList:any;\r\n        if (files !== undefined) {\r\n            fileList = <List \r\n                className=\"my-3\" \r\n                items={files} \r\n                item={{render: this.fileRender, onClick: this.fileClick}}/>;\r\n        }\r\n        let button:any;\r\n        if (files !== undefined && files.length > 0) {\r\n            button = <div className=\"my-2 d-flex\">\r\n                <button className=\"btn btn-success\" type=\"submit\" onClick={this.onUpdate}>优化编译</button>\r\n                <div className=\"py-2 flex-grow-1\" />\r\n                <button className=\"btn btn-outline-warning\"\r\n                    type=\"submit\" onClick={this.onUpdateThoroughly}>完全编译</button>\r\n            </div>;\r\n        }\r\n        return <Page header={\"编译 - \" + this.props.uq.name}>\r\n            <div className=\"py-2 px-3\">\r\n                <div>请选择UQ源代码文件</div>\r\n                <form className=\"my-1\" encType=\"multipart/form-data\" onSubmit={this.onSubmit}>\r\n                    <div className=\"my-1\">\r\n                        <input ref={(fileInput) => this.fileInput=fileInput}type=\"file\" id=\"photo\" \r\n                            className=\"w-100 form-control-file\" name=\"files\" multiple={true} \r\n                            onChange={this.onFilesChange} />\r\n                    </div>\r\n                    {fileList}\r\n                    {button}\r\n                </form>\r\n                <pre>{this.state.compiled}</pre>\r\n                <div>{this.state.text}</div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n\r\ninterface UqPgeProps {\r\n    name: string;\r\n    content: string|ArrayBuffer;\r\n}\r\nclass UqPage extends React.Component<UqPgeProps> {\r\n    render() {\r\n        return <Page header={this.props.name}>\r\n            <pre className=\"px-3 py-2\">{this.props.content}</pre>\r\n        </Page>;\r\n    }\r\n}\r\n\r\ninterface CompileResultProps {\r\n    uq: DevModel.UQ;\r\n    res: Response;\r\n    abortController: AbortController;\r\n}\r\ninterface CompileResultState {\r\n    texts: string[];\r\n    seconds: number;\r\n}\r\nclass CompileResult extends React.Component<CompileResultProps, CompileResultState> {\r\n    private texts: string[];\r\n    private timeHandler:any;\r\n    constructor(props) {\r\n        super(props);\r\n        this.texts = [];\r\n        this.state = {\r\n            texts: this.texts,\r\n            seconds: -1,\r\n        }\r\n    }\r\n    componentWillMount() {\r\n        nav.regConfirmClose(async ():Promise<boolean>=>{\r\n            if (this.state.seconds>=0) return true;\r\n            return new Promise<boolean>((resolve, reject) => {\r\n                try {\r\n                    if (confirm('正在编译中，真的要中止吗？') === true) {\r\n                        try {\r\n                            this.props.abortController.abort();\r\n                        }\r\n                        catch (err) {\r\n                            console.error(err);\r\n                        }\r\n                        resolve(true);\r\n                    }\r\n                    else {\r\n                        resolve(false);\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    reject(err);\r\n                }\r\n            })\r\n        });\r\n    }\r\n    private clearTimeHandler() {\r\n        if (this.timeHandler !== undefined) {\r\n            clearTimeout(this.timeHandler);\r\n            this.timeHandler = undefined;\r\n        }\r\n    }\r\n    private getParent(el:HTMLElement):HTMLElement {\r\n        if (!el) return;\r\n        if (el.tagName === 'MAIN') return el;\r\n        return this.getParent(el.parentElement);\r\n    }\r\n    private scrollToBottom(defer:number = 100) {\r\n        this.clearTimeHandler();\r\n        let that = this;\r\n        this.timeHandler = setTimeout(() => {\r\n            var pane = document.getElementById('bottomDiv');\r\n            pane && pane.scrollIntoView();\r\n            /*\r\n            if (pane !== undefined) {\r\n                let childNodes = pane.childNodes;\r\n                let last = childNodes.item(childNodes.length-1);\r\n                (last as HTMLElement).scrollIntoView();\r\n            }\r\n            */\r\n            that.clearTimeHandler();\r\n        }, defer);\r\n    }\r\n    private topIntoView() {\r\n        var pane = document.getElementById('topDiv');\r\n        pane && pane.scrollIntoView();\r\n        /*\r\n        let childNodes = pane.childNodes;\r\n        let len = childNodes.length;\r\n        if (len === 0) return;\r\n        let first = childNodes.item(0);\r\n        (first as HTMLElement).scrollIntoView();\r\n        */\r\n    }\r\n    private bottomIntoView() {\r\n        var pane = document.getElementById('bottomDiv');\r\n        pane && pane.scrollIntoView();\r\n        /*\r\n        let childNodes = pane.childNodes;\r\n        let len = childNodes.length;\r\n        if (len === 0) return;\r\n        let last = childNodes.item(len-1);\r\n        (last as HTMLElement).scrollIntoView();\r\n        */\r\n    }\r\n    private doubleClick = () => {\r\n        var pane = document.getElementById('scrollDiv');\r\n        let main = this.getParent(pane);\r\n        if (!main) return;\r\n        if (main.scrollTop >= main.scrollHeight / 2) {\r\n            this.topIntoView();\r\n        }\r\n        else {\r\n            this.bottomIntoView();\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        let that = this;\r\n        let time = new Date();\r\n        function consume(reader: ReadableStreamReader) {\r\n            var total = 0\r\n            return new Promise((resolve, reject) => {\r\n                function uintToString(uintArray):string {\r\n                    var encodedString = String.fromCharCode.apply(null, uintArray),\r\n                        decodedString = decodeURIComponent(escape(encodedString));\r\n                    return decodedString;\r\n                }\r\n                function pump() {\r\n                    reader.read().then(({done, value}) => {\r\n                        if (done) {\r\n                            that.scrollToBottom();\r\n                            that.setState({\r\n                                seconds: (new Date().getTime() - time.getTime()),\r\n                            })\r\n                            resolve();\r\n                            return;\r\n                        }\r\n                        let text = uintToString(value);\r\n                        that.texts.push(text);\r\n                        that.setState({\r\n                            texts: that.texts,\r\n                        });\r\n                        total += value.byteLength;\r\n                        that.scrollToBottom();\r\n                        pump();\r\n                    }).catch(reject)\r\n                }\r\n                pump();\r\n            });\r\n        }\r\n        try {\r\n            await consume(this.props.res.body.getReader());\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n    render() {\r\n        let {uq} = this.props;\r\n        let {seconds, texts} = this.state;\r\n        let header = uq.name + ' - ' + (seconds>=0? \"编译完成\" : \"编译中...\");\r\n        return <Page header={header} back=\"close\">\r\n            <div id='topDiv' />\r\n            <div id='scrollDiv'\r\n                onDoubleClick={this.doubleClick} \r\n                className='py-2 px-3' \r\n                style={{wordWrap: 'break-word', whiteSpace: 'normal'}}>\r\n                {texts.map((v, i) => <pre style={{whiteSpace: 'pre-wrap'}} key={i}>{v}</pre>)}\r\n            </div>\r\n            {seconds>=0? <div className='px-3 pb-3' style={{color: 'red', fontWeight: 'bold'}}>\r\n                编译完成。共计用时{Math.floor(seconds/1000)}秒\r\n            </div> : undefined}\r\n            <div id='bottomDiv' />\r\n        </Page>;\r\n    }\r\n}","import * as React from 'react';\r\nimport {nav, Page} from 'tonva';\r\nimport {IdPick, IdPickFace, List, SearchBox} from 'tonva';\r\nimport {DevModel} from './model';\r\n\r\nexport interface IdPickProps {\r\n    caption: string;\r\n    searchPlaceHolder?: string;\r\n    candidateItems: ((params:any, key:string) => Promise<any[]>) | any[];\r\n    moreCandidates: () => Promise<void>;\r\n    row: (item:any, index:number) => JSX.Element;\r\n}\r\n\r\nexport function createIdPick(props: IdPickProps):IdPick {\r\n    return function(face: IdPickFace, params: any):Promise<void> {\r\n        return new Promise<void>((resolve, reject) => {\r\n            nav.push(<IdPickPage resolve={resolve} face={face} params={params} {...props} />);\r\n        });\r\n    }\r\n}\r\n\r\ninterface IdPickPageProps extends IdPickProps {\r\n    face: IdPickFace;\r\n    resolve: (item?: any) => void;\r\n    params: any;\r\n}\r\ninterface IdPickPageState {\r\n    items?: any[];\r\n}\r\n\r\nclass IdPickPage extends React.Component<IdPickPageProps, IdPickPageState> {\r\n    private items:any[];\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: null,\r\n        }\r\n        this.itemClick = this.itemClick.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n    }\r\n    async componentDidMount() {\r\n        let {face, candidateItems, params} = this.props;\r\n        this.setState({\r\n            items: Array.isArray(candidateItems)? candidateItems : await candidateItems(params, ''),\r\n        });\r\n    }\r\n    itemClick(item:any) {\r\n        let {resolve} = this.props;\r\n        resolve(item);\r\n        nav.pop();\r\n    }\r\n    async onSearch(key: string) {\r\n        //alert('search ' + key);\r\n        //await store.dev.searchServer.first(key)\r\n        let {candidateItems, params} = this.props;\r\n        if (typeof candidateItems === 'function') {\r\n            let ret = await candidateItems(params, key);\r\n            this.setState({items: ret});\r\n        }\r\n    }\r\n    render() {\r\n        let {caption, row, searchPlaceHolder} = this.props;\r\n        return <Page header={caption} back=\"close\">\r\n            <div className=\"container\">\r\n                <SearchBox className=\"my-2\" \r\n                    onSearch={this.onSearch} \r\n                    placeholder={searchPlaceHolder}\r\n                    maxLength={100} />\r\n            </div>\r\n            <List items={this.state.items} item={{onClick:this.itemClick, render:row}} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { DevModel } from \"model\";\r\nimport { IdPickProps, createIdPick } from 'createIdPick';\r\nimport { store } from 'store';\r\nimport { Field, FormRow, StringFace, TextAreaFace, TonvaForm, SubmitResult } from 'tonva';\r\nimport { UQController } from '.';\r\nimport { VPage, nav, Page } from 'tonva';\r\n\r\nconst ServerCaption = (item:DevModel.Server) => {\r\n    let {discription, cloud, ip} = item;\r\n    return <>{discription} {cloud} {ip}</>;\r\n}\r\n\r\nconst idPickServerProps: IdPickProps = {\r\n    caption: '选择服务器',\r\n    searchPlaceHolder: '搜索服务器',\r\n    candidateItems: async (params:any, key:string) => {\r\n        await store.dev.searchServer.first(key);\r\n        return store.dev.searchServer.items;\r\n    },\r\n    moreCandidates: async () => {\r\n        await store.dev.searchServer.more();\r\n    },\r\n    row: (item:DevModel.Server, index:number) => {\r\n        return <div className=\"px-3 py-2\"><ServerCaption {...item} /></div>;\r\n    },\r\n};\r\n\r\nconst urlField:Field = {name: 'url', type: 'string', required:true, maxLength:200};\r\nconst serverField:Field = {name: 'server', type: 'id'};\r\nconst dbTypeField:Field = {name: 'db_type', type: 'string', maxLength:20, defaultValue:'mysql'};\r\nconst dbField:Field = {name: 'db', type: 'string', maxLength:50, required: true};\r\nconst connectionField:Field = {name:'connection', type:'string', maxLength:250};\r\n\r\nconst urlRow = {\r\n    label: 'URL',\r\n    field: urlField,\r\n};\r\n\r\nconst serverRow = {\r\n    label: '服务器', \r\n    field: serverField,\r\n    face: {\r\n        type: 'pick-id', \r\n        initCaption: '请选择服务器', \r\n        pick: createIdPick(idPickServerProps), //this.idPick,\r\n        fromPicked: (item:DevModel.Server)=>{\r\n            return {\r\n                id: item.id, \r\n                caption: <ServerCaption {...item} />,\r\n            };\r\n        },\r\n        itemFromId: (id:number)=>store.cacheServers.get(id),\r\n    },\r\n};\r\n\r\nconst dbTypeRow:FormRow = {\r\n    label: '数据库类型',\r\n    field: dbTypeField,\r\n    face: {\r\n        type: 'string',\r\n        readonly: true,\r\n    } as StringFace\r\n};\r\n\r\nconst dbRow = {\r\n    label: '数据库名字',\r\n    field: dbField,\r\n};\r\n\r\nconst connectionRow = {\r\n    label: '连接字符串',\r\n    field: connectionField,\r\n    face: {\r\n        type: 'textarea',\r\n        maxLength: 250,\r\n        rows: 8,\r\n    } as TextAreaFace,\r\n};\r\n\r\nexport class NewServicePage extends VPage<UQController> {\r\n    private tonvaForm:TonvaForm;\r\n    private formRows:FormRow[] = [\r\n        urlRow,\r\n        serverRow,\r\n        dbTypeRow,\r\n        dbRow,\r\n        connectionRow\r\n    ];\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n    private onSubmit = async (values:any):Promise<SubmitResult | undefined> => {\r\n        if (values.url.indexOf('/uq/')<0) {\r\n            this.tonvaForm.formView.setError('url', 'service url 必须包含/uq/');\r\n            return;\r\n        }\r\n\r\n        values.type = 2; // uq type, to be removed\r\n        values.bindId = this.controller.uq.id;\r\n        let ret = await this.controller.saveService(values);\r\n        if (ret === 0) {\r\n            if (this.tonvaForm !== undefined) {\r\n                this.tonvaForm.formView.setError('url', '已经有Service使用这个url');\r\n            }\r\n            return;\r\n        }\r\n        nav.pop();\r\n        return;\r\n    }\r\n    private page = () => {\r\n        return <Page header=\"新建Service\">\r\n            <TonvaForm ref={t=>this.tonvaForm=t} className=\"m-3\" formRows={this.formRows} onSubmit={this.onSubmit} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { Page, VPage, nav } from \"tonva-tools\";\r\nimport { UQController } from '.';\r\nimport { DevModel } from 'model';\r\nimport { Prop, PropGrid } from 'tonva';\r\nimport { StringValueEdit, ServerSpan, TextValueEdit } from 'tools';\r\n\r\nexport class ServicePage extends VPage<UQController> {\r\n    @observable private service: DevModel.Service;\r\n    async open(service: DevModel.Service) {\r\n        this.service = service;\r\n        this.openPage(this.page);\r\n    }\r\n    private async changeProp(prop:string, value:any):Promise<any> {\r\n        return await this.controller.changeServiceProp(this.service, prop, value);\r\n    }\r\n    private onUrlChanged = async (value:any, orgValue:any):Promise<string|void> => {\r\n        if ((value as string).indexOf('/uq/')<0) {\r\n            return 'URL必须包含/uq/';\r\n        }\r\n        let ret = await this.changeProp('url', value);\r\n        if (ret === 0) {\r\n            return 'URL已经被使用了';\r\n        }\r\n        this.service.url = value;\r\n    }\r\n    private onDbChanged = async (value:any, orgValue:any):Promise<string|void> => {\r\n        let ret = await this.changeProp('db', value);\r\n        if (ret === 0) {\r\n            return 'Db已经被使用了';\r\n        }\r\n        this.service.db = value;\r\n    }\r\n    private onDbTypeChanged = async (value:string, orgValue:any):Promise<string|void> => {\r\n        if (value === undefined || value === null) return;\r\n        if (value.toLowerCase().trim() !== 'mysql') return '目前只支持mysql';\r\n        let ret = await this.changeProp('db_type', value);\r\n        this.service.db_type = value;\r\n    }\r\n    private onConnectionChanged = async (value:string, orgValue:any):Promise<string|void> => {        \r\n        await this.changeProp('connection', value);\r\n        this.service.connection = value;\r\n    }\r\n    private onDeleteClick = async () => {\r\n        if (confirm(\"真的要删除Service吗？删除了不可恢复，需要重新录入。\")!==true) return;\r\n        await this.controller.delService(this.service);\r\n        nav.pop();\r\n    }\r\n    private page = () => {\r\n        let {uq} = this.controller;\r\n        //let {type, name, discription, server, url, db, db_type, connection} = this.service;\r\n        let rows:Prop[] = [\r\n            '',\r\n            /*\r\n            {\r\n                type: 'component',\r\n                component: <div className=\"px-3 py-2\">\r\n                    <b>{name}</b><br/><Muted>{discription}</Muted>\r\n                </div>,\r\n            },\r\n            '',*/\r\n            {\r\n                type: 'string',\r\n                name: 'url',\r\n                label: 'URL',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"修改URL\"\r\n                    value={this.service.url}\r\n                    onChanged={this.onUrlChanged} />)\r\n            },\r\n            {\r\n                type: 'component',\r\n                label: '服务器',\r\n                component: <ServerSpan id={this.service.server} />\r\n            },\r\n            {\r\n                type: 'string',\r\n                name: 'db_type',\r\n                label: '数据库类型',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"数据库类型\"\r\n                    value={this.service.db_type}\r\n                    onChanged={this.onDbTypeChanged} />)\r\n            },\r\n            {\r\n                type: 'string',\r\n                name: 'db',\r\n                label: '数据库名',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"数据库名字\"\r\n                    value={this.service.db}\r\n                    onChanged={this.onDbChanged} />)\r\n            },\r\n            {\r\n                type: 'string',\r\n                name: 'connection',\r\n                label: '连接字符串',\r\n                onClick: ()=>nav.push(<TextValueEdit\r\n                    title=\"连接字符串\"\r\n                    value={this.service.connection}\r\n                    onChanged={this.onConnectionChanged} />)\r\n            },\r\n        ];\r\n        let right = <button onClick={this.onDeleteClick} className=\"btn btn-success\">删除</button>;\r\n        return <Page header={'UQ - ' + uq.name} right={right}>\r\n            <PropGrid rows={rows} values={this.service} />\r\n        </Page>\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { UQController } from \".\";\r\nimport { VPage, nav, Page } from \"tonva-tools\";\r\nimport { SubmitResult, TonvaForm } from \"tonva-react-form\";\r\n\r\nconst formRows = [\r\n    {\r\n        label: '名称', \r\n        field: {name: 'name', type: 'string', maxLength: 100, required: true},\r\n    },\r\n    {\r\n        label: '描述',\r\n        field: {name: 'discription', type: 'string', maxLength: 250},\r\n        face: {type: 'textarea'}\r\n    },\r\n    //{\r\n    //    label: '入口',\r\n    //    field: {name: 'access', type: 'string', maxLength: 250},\r\n    //    face: {type: 'textarea', placeholder: '逗号分隔的入口名'}\r\n    //},\r\n];\r\n\r\n\r\nexport abstract class EditBasePage extends VPage<UQController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n    protected onSubmit = async (values:any):Promise<SubmitResult> => {\r\n        await this.controller.saveUq(values);\r\n        nav.pop();\r\n        return;\r\n    }\r\n    protected page: ()=>JSX.Element;\r\n    protected form(initValues:any):JSX.Element {\r\n        return <TonvaForm\r\n            className=\"m-3\"\r\n            formRows={formRows} \r\n            onSubmit={this.onSubmit} initValues={initValues} />\r\n    }\r\n}\r\n\r\nexport class EditPage extends EditBasePage {\r\n    protected page = () => {\r\n        let {uq} = this.controller;\r\n        let {name} = uq;\r\n        return <Page header={'修改UQ - ' + name} back=\"close\">\r\n            {this.form(uq)}\r\n        </Page>;\r\n    }\r\n}\r\n\r\nexport class NewPage extends EditBasePage {\r\n    protected page = () => {\r\n        return <Page header={'新建UQ'} back=\"close\">\r\n            {this.form({})}\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, nav } from 'tonva';\r\nimport { UQController } from '.';\r\nimport { IdDates, UnitSpan, ServerSpan } from 'tools';\r\nimport { Prop, Media, LMR, FA, PropGrid, Muted, List, EasyDate, DropdownActions } from 'tonva';\r\nimport { DevModel } from 'model';\r\nimport { EditPage } from './editPage';\r\nimport { store } from 'store';\r\n\r\nexport class UQPage extends VPage<UQController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private editItem = async () => {\r\n        await this.openVPage(EditPage);\r\n        //nav.push(<EditAppPage {...this.props} />);\r\n    }\r\n\r\n    private deleteItem = async () => {\r\n        if (confirm('真的要删除UQ吗？') === true) {\r\n            await this.controller.deleteUq();\r\n            nav.pop();\r\n        }\r\n    }\r\n\r\n    private page = ():JSX.Element => {\r\n        let {onUqUpload, serviceClick, uq, services} = this.controller;\r\n        let {isOwner} = store.unit;\r\n        let {id, name, discription, access, unit, date_init, date_update} = uq;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let menuItems = [\r\n            {caption:'修改UQ', action:this.editItem, icon:'edit' },\r\n            {caption:'删除', action:this.deleteItem, icon:'trash-o' }\r\n        ];\r\n        let right = isOwner>0 && <DropdownActions actions={menuItems} />;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <LMR className=\"py-2\"\r\n                    left={<FA name=\"database\" className=\"text-primary fa-2x mr-3\" />}>\r\n                    <div><b>{name}</b></div>\r\n                    {disp}\r\n                </LMR>\r\n            },\r\n            {\r\n                type: 'component', \r\n                label: '开发号', \r\n                component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> \r\n            },\r\n           '',\r\n           {\r\n                type: 'component', \r\n                label: '编译代码', \r\n                component: <LMR onClick={()=>onUqUpload()} className=\"w-100 py-2 cursor-pointer\" \r\n                    left=\"上传编译uq代码\" right={<FA className=\"align-self-center\" name=\"chevron-right\" />} />\r\n            },\r\n            /*\r\n            {type: 'component', label: 'ACCESS', component: <div className=\"py-2\">{\r\n                access? \r\n                    access.split(',').join(', ')\r\n                    : <Muted>(全)</Muted>\r\n            }</div> },\r\n            */\r\n        ];\r\n        let btnAddService = isOwner>0 && <button\r\n            className=\"btn btn-outline-primary btn-sm\"\r\n            onClick={()=>this.controller.showNewServicePage()}>\r\n            增加\r\n        </button>;\r\n        \r\n        let onServiceClick:any;\r\n        if (isOwner>0) onServiceClick = serviceClick;\r\n\r\n        return <Page header={'UQ - ' + name} right={right}>\r\n            <PropGrid rows={rows} values={uq} />\r\n            <div className=\"d-flex mx-3 mt-3 mb-1 align-items-end\">\r\n                <Muted style={{display:'block', flex:1}}>Service</Muted>\r\n                {btnAddService}\r\n            </div>\r\n            <List items={services} item={{render:this.renderService, onClick:onServiceClick}} />\r\n        </Page>;\r\n    }\r\n    private renderService(service:DevModel.Service, index:number):JSX.Element {\r\n        let {url, server, db, db_type, compile_time} = service;\r\n        let compile = !compile_time?\r\n            <Muted>未编译</Muted> :\r\n            <><Muted>编译: </Muted><EasyDate date={compile_time}/></>;\r\n\r\n        return <LMR className=\"d-flex w-100 align-items-center cursor-pointer py-2 px-3\"\r\n            right={<small>{compile}</small>}\r\n            >\r\n            <div>\r\n                <div>{url}</div>\r\n                <div>{db_type} {db}</div>\r\n                <Muted><ServerSpan id={server} /></Muted>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { UQController } from '.';\r\nimport { List, LMR, Badge, Muted, FA } from 'tonva';\r\nimport { DevModel } from 'model';\r\nimport { NewPage } from './editPage';\r\nimport { store } from 'store';\r\n\r\nexport class ListPage extends VPage<UQController> {\r\n    async open(param:any) {\r\n        this.openPage(this.page);\r\n    }\r\n    private newItem = () => {\r\n        this.controller.uq = undefined;\r\n        this.openVPage(NewPage);\r\n    }\r\n    private page = ():JSX.Element => {\r\n        let {uqList: list, listRowClick} = this.controller;\r\n        let {isOwner} = store.unit;\r\n        let right = isOwner>0 && <button className='btn btn-secondary btn-sm' onClick={()=>this.newItem()}><FA name=\"plus\" /></button>;\r\n        return <Page header=\"UQ\" right={right}>\r\n            <List items={list} item={{render: this.listRow, onClick: listRowClick}} />\r\n        </Page>\r\n    }\r\n    private listRow = (item:DevModel.UQ):JSX.Element => {\r\n        let {name, discription, service_count} = item;\r\n        return <LMR className=\"py-1 px-3 align-items-center\"\r\n            left={<FA name=\"database\" className=\"text-primary fa-lg\" />}\r\n            right={<>{service_count}</>}>\r\n            <div className=\"py-2 px-3\">\r\n                <div><b>{name}</b></div>\r\n                <div><Muted>{discription}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { observable } from 'mobx';\r\nimport { nav, Controller } from 'tonva';\r\nimport { DevModel } from '../../model';\r\nimport { UqUpload, UqUploadProps } from './uqUpload';\r\nimport { devApi } from 'api';\r\nimport { NewServicePage } from './newServicePage';\r\nimport { ServicePage } from './servicePage';\r\nimport { UQPage } from './uqPage';\r\nimport { ListPage } from './listPage';\r\n\r\nexport class UQController extends Controller {\r\n    private unitId: number;\r\n    uq: DevModel.UQ;\r\n    access: string;\r\n    entities: string;\r\n    @observable uqList: DevModel.UQ[];\r\n    @observable services: DevModel.Service[];\r\n    protected async internalStart(unitId:any) {\r\n        this.unitId = unitId;\r\n        this.uqList = await devApi.uqs(this.unitId);\r\n        this.openVPage(ListPage);\r\n    }\r\n\r\n    listRowClick = async (item:DevModel.UQ) => {\r\n        this.uq = item;\r\n        await this.loadUqEntities(item.id);\r\n        this.openVPage(UQPage);\r\n    }\r\n\r\n    private async loadUqEntities(uqId: number) {\r\n        let ret = await devApi.uqGetEntities(this.unitId, uqId);\r\n        let r0 = ret[0][0];\r\n        this.access = r0.access;\r\n        this.entities = r0.entities;\r\n        this.services = ret[1];\r\n    }\r\n\r\n    serviceClick = (service: DevModel.Service) => {\r\n        this.openVPage(ServicePage, service);\r\n    }\r\n\r\n    onUqUpload = async() => {\r\n        let onDispose = () => {\r\n        };\r\n        nav.push(<UqUpload uq={this.uq} services={this.services} />, onDispose);\r\n    }\r\n\r\n    saveUq = async (values: DevModel.UQ) => {\r\n        let uq: DevModel.UQ;\r\n        if (this.uq === undefined) {\r\n            uq = _.clone(values);\r\n        }\r\n        else {\r\n            uq = _.clone(this.uq);\r\n            _.merge(uq, values);\r\n        }\r\n        uq.unit = this.unitId;\r\n        let ret = await devApi.saveUq(uq);\r\n        uq.id = ret;\r\n        this.uqList.push(uq);\r\n    }\r\n\r\n    deleteUq = async () => {\r\n        await devApi.delUq(this.unitId, this.uq.id);\r\n        let index = this.uqList.findIndex(v => v.id === this.uq.id);\r\n        if (index >= 0) this.uqList.splice(index);\r\n    }\r\n\r\n    async changeServiceProp(service: DevModel.Service, prop:string, value:any):Promise<any> {\r\n        return await devApi.changeServiceProp(this.unitId, service.id, prop, value);\r\n    }\r\n\r\n    async saveService(service: DevModel.Service):Promise<number> {\r\n        let svc = _.clone(service);\r\n        svc.unit = this.unitId;\r\n        let ret = await devApi.saveService(svc);\r\n        svc.id = ret;\r\n        this.services.push(svc);\r\n        return ret;\r\n    }\r\n\r\n    async delService(service: DevModel.Service) {\r\n        await devApi.delService(this.unitId, service.id);\r\n        let index = this.services.findIndex(v => v.id == service.id);\r\n        if (index >= 0) this.services.splice(index);\r\n    }\r\n\r\n    showNewServicePage = async () => {\r\n        await this.openVPage(NewServicePage);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {LMR, Badge, Muted} from 'tonva';\r\n\r\nexport interface RowProps {\r\n    icon: string;\r\n    main: string|JSX.Element;\r\n    vice: string|JSX.Element;\r\n}\r\n\r\nexport class Row extends React.Component<RowProps> {\r\n    render() {\r\n        let {icon, main, vice} = this.props;\r\n        return <LMR className=\"py-1 px-3 align-items-stretch\"\r\n            left={<Badge size=\"sm\" className=\"pt-1\"><img src={icon} /></Badge>}>\r\n            <div className=\"px-3\">\r\n                <div><b>{main}</b></div>\r\n                <div><Muted>{vice}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport _ from 'lodash';\r\nimport {FormRow, EasyDate, Media, \r\n    Prop, ListProp, PropGrid, List, SearchBox, LMR, Badge, Muted} from 'tonva';\r\nimport {UnitSpan, IdDates, ServerSpan} from '../tools';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {DevModel} from '../model';\r\nimport {store} from '../store';\r\nimport {Row} from './row';\r\nimport {ObjViewProps} from './ObjViewProps';\r\n\r\n@observer\r\nclass Info extends React.Component<DevModel.Bus> {\r\n    /*\r\n    private rows: Prop[];\r\n    constructor(props:any) {\r\n        super(props);\r\n        let {unit, name, discription, schema, date_init, date_update} = this.props;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={name} discription={disp} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                label: 'Schema',\r\n                vAlign: 'stretch',\r\n                component: <SchemaView />,\r\n            },\r\n        ];\r\n    }*/\r\n    async componentDidMount() {\r\n        //await store.dev.buses.loadCurApis();\r\n    }\r\n    render() {\r\n        let {unit, name, discription, schema, date_init, date_update} = this.props;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={name} discription={disp} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                label: 'Schema',\r\n                vAlign: 'stretch',\r\n                component: <SchemaView />,\r\n            },\r\n        ];\r\n        return <div>\r\n            <PropGrid rows={rows} values={this.props} />\r\n        </div>\r\n    }\r\n}\r\n\r\n@observer\r\nexport class SchemaView extends React.Component {\r\n    render() {\r\n        let bus = store.dev.buses.cur;\r\n        if (bus === null) return '...';\r\n        let content = bus.schema;\r\n        return <div className=\"d-flex py-2 w-100 align-items-center\" style={{flex:1}}>\r\n            <pre>\r\n                {content}\r\n            </pre>\r\n        </div>;\r\n\r\n    }\r\n}\r\n\r\nconst busesProps:ObjViewProps<DevModel.Bus> = {\r\n    title: 'BUS',\r\n    formRows: [\r\n        {\r\n            label: '名称', \r\n            field: {name: 'name', type: 'string', maxLength: 100, required: true},\r\n        },\r\n        {\r\n            label: '描述',\r\n            field: {name: 'discription', type: 'string', maxLength: 250},\r\n            face: {type: 'textarea'}\r\n        },\r\n        {\r\n            label: 'Schema',\r\n            field: {name: 'schema', type: 'string', maxLength: 2500},\r\n            face: {type: 'textarea', rows: 8}\r\n        },\r\n    ],\r\n    row: (item:DevModel.Bus):JSX.Element => {\r\n        let {owner, name, discription} = item;\r\n        return <Row icon={appItemIcon} main={owner + ' / ' + name} vice={discription} />;\r\n    },\r\n    items: ()=>store.dev.buses,\r\n    repeated: {\r\n        name: 'name',\r\n        err: '跟已有的名称重复',\r\n    },\r\n    info: Info,\r\n};\r\n\r\nexport default busesProps;\r\n","import * as React from 'react';\r\nimport {Prop, PropGrid, LMR, Muted, FA} from 'tonva';\r\nimport {UnitSpan, IdDates} from '../tools';\r\nimport {DevModel} from '../model';\r\nimport {store} from '../store';\r\nimport {ObjViewProps} from './ObjViewProps';\r\n\r\nclass Info extends React.Component<DevModel.Server> {\r\n    render() {\r\n        let {discription, cloud, ip, unit, date_init, date_update} = this.props;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;        \r\n        //<Media icon={appIcon} main={discription} discription={ip} />},\r\n        let rows:Prop[] = [\r\n            '',\r\n            {type: 'component', component: <LMR className=\"py-2\"\r\n                left={<FA name=\"server\" className=\"text-primary fa-2x mr-3\" />}>\r\n                <div><b>{ip}</b></div>\r\n                {disp}\r\n            </LMR>},\r\n            '',\r\n            {type: 'component', label: '开发号', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            {type: 'string', label: '云服务', name: 'cloud'},\r\n        ];\r\n        return <div>\r\n            <PropGrid rows={rows} values={this.props} />\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst serversProps:ObjViewProps<DevModel.Server> = {\r\n    title: 'Server',\r\n    info: Info,\r\n    formRows: [\r\n        {\r\n            label: '描述', \r\n            field: {name: 'discription', type: 'string', maxLength: 50, required: true},\r\n        },\r\n        {\r\n            label: '云服务商', \r\n            field: {name: 'cloud', type: 'string', maxLength: 20, required: true},\r\n        },\r\n        {\r\n            label: 'IP地址', \r\n            field: {name: 'ip', type: 'string', maxLength: 20},\r\n        },\r\n    ],\r\n    row: (item: DevModel.Server):JSX.Element => {\r\n        let {discription, cloud} = item;\r\n        //return <Row main={item.discription} vice={<>{item.cloud}  {item.ip}</>} />;\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n            left={<FA name=\"server\" className=\"text-primary fa-lg\" />}>\r\n            <div className=\"px-3\">\r\n                <div><b>{discription}</b></div>\r\n                <div><Muted>{cloud}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    },\r\n    items: ()=>store.dev.servers,\r\n    repeated: {\r\n        name: 'discription',\r\n        err: '重复的描述',\r\n    }\r\n};\r\n\r\nexport default serversProps;\r\n","import * as React from 'react';\r\nimport {Step, Field, Prop, PropGrid, Media} from 'tonva';\r\nimport {UnitSpan, IdDates, ServerSpan, UqSpan, AppSpan} from '../tools';\r\nimport {Row} from './row';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {DevModel} from '../model';\r\nimport {store} from '../store';\r\nimport {ObjViewProps} from './ObjViewProps';\r\nimport {createIdPick, IdPickProps} from '../createIdPick';\r\n\r\nclass Info extends React.Component<DevModel.Service> {\r\n    render() {\r\n        let {url, type, discription, server, app, uq, unit, date_init, date_update} = this.props;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let obj:Prop;\r\n        if (app !== undefined)\r\n            obj = {type: 'component', label: 'APP', component: <div className=\"py-2\"><AppSpan id={app} isLink={true} /></div> };\r\n        else\r\n            obj = {type: 'component', label: 'UQ', component: <div className=\"py-2\"><UqSpan id={uq} isLink={true} /></div> };\r\n\r\n        let rows:Prop[] = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={discription} discription={url} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            {type: 'component', label: '服务器', component: <div className=\"py-2\"><ServerSpan id={server} isLink={true} /></div> },\r\n            obj,\r\n        ];\r\n        return <div>\r\n            <PropGrid rows={rows} values={this.props} />\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst idPickServerProps: IdPickProps = {\r\n    caption: '选择服务器',\r\n    searchPlaceHolder: '搜索服务器',\r\n    candidateItems: async (params:any, key:string) => {\r\n        await store.dev.searchServer.first(key);\r\n        return store.dev.searchServer.items;\r\n    },\r\n    moreCandidates: async () => {\r\n        await store.dev.searchServer.more();\r\n    },\r\n    row: (item:DevModel.Server, index:number) => {\r\n        return <div className=\"px-3 py-2\">{item.discription + ' ' + item.cloud + ' ' + item.ip}</div>;\r\n    },\r\n};\r\n\r\nconst idPickAppProps: IdPickProps = {\r\n    caption: '选择APP',\r\n    searchPlaceHolder: '搜索APP',\r\n    candidateItems: async (params:any, key:string) => {\r\n        await store.dev.searchApp.first(key);\r\n        return store.dev.searchApp.items;\r\n    },\r\n    moreCandidates: async () => {\r\n        await store.dev.searchApp.more();\r\n    },\r\n    row: (item:DevModel.App, index:number) => {\r\n        return <div>{item.name + ' ' + item.discription}</div>;\r\n    },\r\n};\r\n\r\nconst idPickUqProps: IdPickProps = {\r\n    caption: '选择UQ',\r\n    searchPlaceHolder: '搜索UQ',\r\n    candidateItems: async (params:any, key:string) => {\r\n        await store.dev.searchUq.first(key);\r\n        return store.dev.searchUq.items;\r\n    },\r\n    moreCandidates: async () => {\r\n        await store.dev.searchUq.more();\r\n    },\r\n    row: (item:DevModel.UQ, index:number) => {\r\n        return <div>{item.name + ' ' + item.discription}</div>;\r\n    },\r\n};\r\n\r\nconst serviceTypeNames = ['中心', '交换', 'APP', 'UQ'];\r\nconst urlField:Field = {name: 'url', type: 'string', required:true, maxLength:200};\r\nconst discriptionField:Field = {name: 'discription', type: 'string', maxLength:100};\r\nconst serverField:Field = {name: 'server', type: 'id'};\r\nconst bindTypeField:Field = {name: 'type', type: 'number'};\r\nconst bindIdField:Field = {name: 'bindId', type: 'number'};\r\nconst authField:Field = {name: 'auth', type: 'string', maxLength:200};\r\n\r\nconst urlRow = {\r\n    label: 'URL',\r\n    field: urlField,\r\n};\r\nconst discriptionRow = {\r\n    label: '描述',\r\n    field: discriptionField,\r\n};\r\n\r\nconst serverRow = {\r\n    label: '服务器', \r\n    field: serverField,\r\n    face: {\r\n        type: 'pick-id', \r\n        initCaption: '请选择服务器', \r\n        pick: createIdPick(idPickServerProps), //this.idPick,\r\n        fromPicked: (item:DevModel.Server)=>{\r\n            return {\r\n                id: item.id, \r\n                caption: item.discription + ' ' + item.ip,\r\n            };\r\n        },\r\n        itemFromId: (id:number)=>store.cacheServers.get(id),\r\n    },\r\n};\r\n\r\nconst servicesProps:ObjViewProps<DevModel.Service> = {\r\n    title: 'Service',\r\n    info: Info,\r\n    formRows: [\r\n        urlRow,\r\n        discriptionRow,\r\n        serverRow,\r\n    ],\r\n    steps: {\r\n        step1: {\r\n            formRows: [\r\n                {\r\n                    label: '服务类型', \r\n                    field: bindTypeField,\r\n                    face: {\r\n                        type: 'select', \r\n                        list: [\r\n                            {text:'APP', value:2}, \r\n                            {text:'UQ', value:3}\r\n                        ]\r\n                    }\r\n                },\r\n            ],\r\n            next: (values:any) => {\r\n                switch (values['type']) {\r\n                    case 2: return 'appStep';\r\n                    case 3: return 'uqStep';\r\n                }\r\n            },\r\n            ex: '服务类型',\r\n        },\r\n        appStep: {\r\n            formRows: [\r\n                urlRow,\r\n                discriptionRow,\r\n                serverRow,\r\n                {\r\n                    label: 'APP', \r\n                    field: bindIdField,\r\n                    face:{\r\n                        type: 'pick-id', \r\n                        initCaption: '请选择APP', \r\n                        pick: createIdPick(idPickAppProps), //this.idPick,\r\n                        fromPickedItem: (item:DevModel.App)=>{\r\n                            return {id: item.id, caption: item.name + ' ' + item.discription}\r\n                        },\r\n                    },\r\n                },\r\n            ],\r\n            next: undefined,\r\n            ex: '绑定APP'\r\n        },\r\n        uqStep: {\r\n            formRows: [\r\n                urlRow,\r\n                discriptionRow,\r\n                serverRow,\r\n                {\r\n                    label: 'UQ', \r\n                    field: bindIdField,\r\n                    face:{\r\n                        type: 'pick-id', \r\n                        initCaption: '请选择UQ', \r\n                        pick: createIdPick(idPickUqProps), //this.idPick,\r\n                        fromPickedItem: (item:DevModel.UQ)=>{\r\n                            return {id: item.id, caption: item.name + ' ' + item.discription}\r\n                        },\r\n                    },\r\n                },                \r\n                { label: 'Auth', field: authField },\r\n            ],\r\n            next: undefined,\r\n            ex: '绑定UQ',\r\n        },\r\n    },\r\n    stepHeader: (step:Step, num:number):JSX.Element => {\r\n        return <div className=\"d-flex justify-content-center align-items-center\">\r\n            <h4><small className=\"text-muted\">第{num}步</small> {step.ex}</h4>\r\n        </div>;\r\n    },\r\n    row: (item:DevModel.Service):JSX.Element => {\r\n        return <Row\r\n            icon={appItemIcon}\r\n            main={item.url}\r\n            vice={serviceTypeNames[item.type] + ': ' + item.discription} />;\r\n    },\r\n    items: ()=>store.dev.services,\r\n    repeated: {\r\n        name: 'url',\r\n        err: 'url重复',\r\n    }\r\n};\r\n\r\nexport default servicesProps;\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page} from 'tonva';\r\nimport {FormRow, TonvaForm, Step, MultiStep, DropdownActions, Action, List, FA, SubmitResult} from 'tonva';\r\nimport {DevModel} from '../model';\r\nimport { ObjViewProps } from './ObjViewProps';\r\nimport { store } from 'store';\r\n\r\n@observer\r\nexport class ObjView<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    async componentDidMount() {\r\n        await this.props.items().load();\r\n    }\r\n    //converter(item:T):ListItem {\r\n    //    return this.props.converter(item);\r\n    //}\r\n    newItem() {\r\n        this.props.items().cur = undefined;\r\n        nav.push(<New {...this.props} />);\r\n    }\r\n    itemClick = (item:T) => {\r\n        this.props.items().cur = observable(item);\r\n        nav.push(<Info {...this.props} />);\r\n    }\r\n    render() {\r\n        let {title, items} = this.props;\r\n        let {isOwner} = store.unit;\r\n        let right = isOwner>0 && <button className='btn btn-secondary btn-sm' onClick={()=>this.newItem()}><FA name=\"plus\" /></button>;\r\n        return <Page header={title} right={right}>\r\n            <List items={items().items}\r\n                item={{render: this.props.row, onClick: this.itemClick}}\r\n                // converter={this.props.converter} \r\n                //itemClick={this.itemClick} \r\n                />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass New<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    async onSubmit(values:any):Promise<SubmitResult> {\r\n        let ret = await this.props.items().saveCur(values);\r\n        if (ret === true) {\r\n            nav.pop();\r\n        }\r\n        else {\r\n            let repeated = this.props.repeated;\r\n            //this.formView.setError(repeated.name, repeated.err);\r\n        }\r\n        return;\r\n    }\r\n    render() {\r\n        let content;\r\n        let {title, steps, stepHeader} = this.props;\r\n        let {formRows, items} = this.props;\r\n        if (steps !== undefined) {\r\n            content = <MultiStep className=\"mt-4\" header={stepHeader} steps={steps} first=\"step1\" onSubmit={this.onSubmit} />;\r\n        }\r\n        else if (formRows !== undefined) {\r\n            content = <TonvaForm \r\n                className=\"m-3\"\r\n                formRows={formRows} \r\n                onSubmit={this.onSubmit} initValues={items().cur} />;\r\n        }\r\n        else {\r\n            content = \"ObjViewProps: no steps and no formRows\";\r\n        }\r\n        return <Page header={'新增'+title}>\r\n            {content}\r\n        </Page>\r\n    }\r\n}\r\n\r\n@observer\r\nclass Info<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    private menuItems = [\r\n        {caption:'修改' + this.props.title, action:this.editItem.bind(this), icon:'edit' },\r\n        {caption:'删除', action:this.deleteItem.bind(this), icon:'trash-o' }\r\n    ];\r\n    async deleteItem() {\r\n        if (confirm('真的要删除吗？系统删除时并不会检查相关引用，请谨慎') === true) {\r\n            await this.props.items().del();\r\n            nav.pop();\r\n        }\r\n    }\r\n    editItem() {\r\n        nav.push(<Edit {...this.props} />);\r\n    }\r\n    render() {\r\n        let actions = [];\r\n        let ex = this.props.extraMenuActions;\r\n        if (ex !== undefined) actions.push(...ex);\r\n        actions.push(...this.menuItems);        \r\n        let right = <DropdownActions actions={actions} />\r\n        let item = this.props.items().cur;\r\n        return <Page header={this.props.title + ' - 详细资料'} right={right}>\r\n            <this.props.info {...item} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass Edit<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    private actions = [\r\n        {caption:'删除', action:this.deleteItem.bind(this), icon:'trash-o' }\r\n    ];\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    componentWillMount() {\r\n    }\r\n    async onSubmit(values:any):Promise<SubmitResult> {\r\n        await this.props.items().saveCur(values);\r\n        nav.pop();\r\n        return;\r\n    }\r\n    async deleteItem() {\r\n        if (confirm('真的要删除吗？系统删除时并不会检查相关引用，请谨慎') === true) {\r\n            await this.props.items().del();\r\n            nav.pop();\r\n        }\r\n    }\r\n    render() {\r\n        let right = <DropdownActions actions={this.actions} />\r\n        return <Page header={'修改 '+this.props.title} right={right} back=\"close\">\r\n            <TonvaForm \r\n                className=\"m-3\"\r\n                formRows={this.props.formRows} \r\n                onSubmit={this.onSubmit} initValues={this.props.items().cur} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { List, SearchBox, LMR, FA } from 'tonva';\r\nimport { UsersController, UserApps, AppUsers } from './cUsers';\r\n\r\nexport class VApps extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private renderRow = (appUsers: AppUsers, index:number):JSX.Element => {\r\n        let {app, users} = appUsers;\r\n        let {id, name, discription} = app;\r\n        let right = <small className=\"text-muted\">{discription}</small>;\r\n        return <div className=\"d-block px-3 py-2\">\r\n            <LMR className=\"mb-2\" right={right}>\r\n                <FA name=\"address-card-o\" className=\"text-primary mr-3\" />\r\n                <b>{name}</b>\r\n            </LMR>\r\n            <div>\r\n                <small className=\"text-muted\">用户: </small>\r\n                {users.length===0?'[无]':users.map(u => u.assigned || u.nick || u.name).join(', ')}\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {appUsersList, searchApp, onAppsClick} = this.controller;\r\n        let searchBox = <SearchBox className=\"w-100 pr-1\" \r\n            onSearch={searchApp} \r\n            placeholder=\"搜索App\" \r\n            allowEmptySearch={true} />;\r\n        return <Page header={searchBox}>\r\n            <List items={appUsersList} \r\n                item={{render: this.renderRow, onClick:onAppsClick,  key: (item=>item.app.id)}} />\r\n        </Page>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { List, SearchBox, LMR, FA } from 'tonva';\r\nimport { UsersController, UserApps } from './cUsers';\r\n\r\nexport class VUsers extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private renderRow = (userApps: UserApps, index:number):JSX.Element => {\r\n        let {user, apps} = userApps;\r\n        let {id, name, nick, icon, assigned} = user;\r\n        return <div className=\"d-block px-3 py-2\">\r\n            <div className=\"mb-2\">\r\n                <FA name=\"user-o\" className=\"text-primary mr-3\" />\r\n                <b>{assigned || nick || name}</b>\r\n            </div>\r\n            <div>\r\n                <small className=\"text-muted\">App: </small>\r\n                {apps.length===0?'[无]':apps.map(a => a.name).join(', ')}\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {userAppsList, searchUser, onUsersClick} = this.controller;\r\n        let searchBox = <SearchBox className=\"w-100 pr-1\" \r\n            onSearch={searchUser} \r\n            placeholder=\"搜索用户\" \r\n            allowEmptySearch={true} />;\r\n        return <Page header={searchBox}>\r\n            <List items={userAppsList} \r\n                item={{render: this.renderRow, onClick:onUsersClick, key: (item=>item.user.id)}} />\r\n        </Page>;\r\n    });\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { List, SearchBox, LMR, Muted } from 'tonva';\r\nimport { UsersController, UserApps, AppUsers, User } from './cUsers';\r\n\r\nexport class VApp extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curApp, curAppUsers, onAppEditUsers} = this.controller;\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={()=>onAppEditUsers()}>增减用户</button>;\r\n        return <Page header={'App - ' + (curApp.name)} right={right}>\r\n            <List items={curAppUsers} item={{render:this.renderApp}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderApp = (user: User, index:number):JSX.Element => {\r\n        let {name, nick, assigned} = user;\r\n        let content:any;\r\n        if (assigned)\r\n            content = <span>{assigned} &nbsp; <small className=\"text-muted\">{name}</small></span>;\r\n        else if (nick)\r\n            content = <span>{nick} &nbsp; <small className=\"text-muted\">{name}</small></span>;\r\n        else\r\n            content = <>{name}</>\r\n        return <div className=\"px-3 py-2\">{content}</div>\r\n    }\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { List, SearchBox, LMR } from 'tonva';\r\nimport { UsersController, UserApps, AppUsers, App } from './cUsers';\r\n\r\nexport class VUser extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curUser, curUserApps, onUserEditApps} = this.controller;\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={()=>onUserEditApps()}>增减App</button>;\r\n        return <Page header={'用户 - ' + (curUser.assigned || curUser.nick || curUser.name)}\r\n            right={right}>\r\n            <List items={curUserApps} item={{render:this.renderApp}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderApp = (app: App, index:number):JSX.Element => {\r\n        let {name, discription} = app;\r\n        return <div className=\"px-3 py-2\">{name} {discription}</div>\r\n    }\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { List, SearchBox, LMR, Muted, FA } from 'tonva';\r\nimport { UsersController, UserApps, AppUsers, User, EditUser } from './cUsers';\r\n\r\nexport class VAppEditUsers extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curApp, appEditUsers, onAppEditUsers} = this.controller;\r\n        return <Page header={curApp.name + ' - 增减用户'} >\r\n            <List items={appEditUsers} item={{render:this.renderUser}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderUser = (editUser: EditUser, index:number):JSX.Element => {\r\n        let {name, nick, assigned, bind} = editUser;\r\n        let content:any;\r\n        if (assigned)\r\n            content = <>{assigned} <Muted>{name}</Muted></>;\r\n        else if (nick)\r\n            content = <>{nick} <Muted>{name}</Muted></>;\r\n        else\r\n            content = <>{name}</>\r\n        let right = <input type=\"checkbox\" defaultChecked={bind===1} \r\n            onChange={(evt)=>this.onUserChanged(editUser, evt.target.checked)} />;\r\n        return <LMR className=\"px-3 py-2 align-items-center\" right={right}>\r\n            {content}\r\n        </LMR>\r\n    }\r\n\r\n    private onUserChanged = async (editUser: EditUser, checked:boolean) => {\r\n        await this.controller.bindAppUser(editUser, checked);\r\n        editUser.bind = checked===true? 1: 0;\r\n    }\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { List, SearchBox, LMR } from 'tonva';\r\nimport { UsersController, UserApps, AppUsers, App, EditApp } from './cUsers';\r\n\r\nexport class VUserEditApps extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curUser, userEditApps, onUserEditApps} = this.controller;\r\n        return <Page header={'增减App - ' + (curUser.assigned || curUser.nick || curUser.name)}>\r\n            <List items={userEditApps} item={{render:this.renderApp}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderApp = (editApp: EditApp, index:number):JSX.Element => {\r\n        let {name, discription, bind} = editApp;\r\n        let right = <input type=\"checkbox\" defaultChecked={bind===1} \r\n            onChange={(evt)=>this.onAppChanged(editApp, evt.target.checked)} />;\r\n        return <LMR className=\"px-3 py-2\" right={right}>\r\n            {name} {discription}\r\n        </LMR>\r\n    }\r\n\r\n    private onAppChanged = async (editApp: EditApp, checked:boolean) => {\r\n        await this.controller.bindUserApp(editApp, checked);\r\n        editApp.bind = checked===true? 1: 0;\r\n    }\r\n}","import * as React from 'react';\r\nimport { VPage, Page, Image, nav } from \"tonva-tools\";\r\nimport { UsersController, User } from \"./cUsers\";\r\nimport { SearchBox } from 'tonva';\r\nimport { mainApi } from 'api';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class VAddUser extends VPage<UsersController> {\r\n    @observable private user: User = null;\r\n    //@observable private addedUser: User;\r\n    private searchBox: SearchBox;\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(():JSX.Element => {\r\n        let searchBox = <SearchBox ref={v=>this.searchBox=v}\r\n            className=\"w-100\"\r\n            onSearch={this.onSearch}\r\n            onFocus={this.onSearchFocus}\r\n            placeholder=\"用户全名/手机号/邮箱\"\r\n             />;\r\n        let content:any;\r\n        if (this.user === null) {\r\n        }\r\n        else if (this.user === undefined) {\r\n            content = <div className=\"text-info p-3\">没有找到用户</div>;\r\n        }\r\n        else {\r\n            let {name, nick, icon} = this.user;\r\n            let divUser:any;\r\n            if (nick) {\r\n                divUser = <><div><b>{nick}</b></div><div>{name}</div></>;\r\n            }\r\n            else {\r\n                divUser = <div><b>{name}</b></div>;\r\n            }\r\n            content = <div>\r\n                <div className=\"m-3 p-3 d-flex bg-white\">\r\n                    <Image src={icon} />\r\n                    <div className=\"ml-3\">{divUser}</div>\r\n                </div>\r\n                <div className=\"d-flex justify-content-center\">\r\n                    <button className=\"btn btn-success text-center\" onClick={this.onAddUser}>增加用户</button>\r\n                </div>\r\n            </div>;\r\n        }\r\n        /*\r\n        let divUserAdded:any;\r\n        if (this.addedUser) {\r\n            divUserAdded = <div className=\"p-3\">\r\n                <div>\r\n                    新增用户: {this.addedUser.name} &nbsp; &nbsp; \r\n                    <button className=\"btn btn-success\" \r\n                        onClick={()=>this.controller.onUserEditApps()}>\r\n                        为用户添加App\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        }\r\n        */\r\n        return <Page header={searchBox}>\r\n            {content}\r\n        </Page>;\r\n    })\r\n    //{divUserAdded}\r\n\r\n    private onSearch = async (key:string) => {\r\n        this.user = await mainApi.userFromKey(key);\r\n    }\r\n\r\n    private onAddUser = async () => {\r\n        await this.controller.addUser(this.user.id);\r\n        this.controller.curUser = this.user;\r\n        this.user = null;\r\n        this.searchBox.clear();\r\n        this.replacePage(this.addedPage);\r\n    }\r\n\r\n    private onSearchFocus = () => {\r\n        this.user = null;\r\n        //this.addedUser = null;\r\n        if (this.searchBox) this.searchBox.clear();\r\n    }\r\n\r\n    private onAddApps = () => {\r\n        this.closePage();\r\n        this.controller.onUserEditApps();\r\n    }\r\n\r\n    private onContinueAddUser = () => {\r\n        this.closePage();\r\n        this.controller.onAddUser();\r\n    }\r\n\r\n    private addedPage = () => {\r\n        return <Page header=\"添加成功\">\r\n            <div className=\"p-3 text-center\">\r\n                <div>\r\n                    新增用户: {this.controller.curUser.name}\r\n                </div>\r\n                <div className=\"mt-3\">\r\n                    <button className=\"btn btn-success mr-3\" \r\n                        onClick={this.onAddApps}>\r\n                        为用户添加App\r\n                    </button>\r\n                    <button className=\"btn btn-outline-primary\"\r\n                        onClick={this.onContinueAddUser}>\r\n                        继续添加新用户\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { Controller, VPage, Page } from \"tonva-tools\";\r\nimport { mainApi } from 'api';\r\nimport { LMR, FA } from 'tonva';\r\nimport { VApps } from './vApps';\r\nimport { VUsers } from './vUsers';\r\nimport { VApp } from './vApp';\r\nimport { VUser } from './vUser';\r\nimport { VAppEditUsers } from './vAppEditUsers';\r\nimport { VUserEditApps } from './vUserEditApps';\r\nimport { VAddUser } from './VAddUser';\r\nimport { Unit } from 'model';\r\n\r\nexport interface User {\r\n    id: number;\r\n    name: string;\r\n    nick: string;\r\n    icon: string;\r\n    assigned: string;\r\n}\r\nexport interface App {\r\n    id: number;\r\n    name: string;\r\n    discription: string;\r\n}\r\nexport interface UserApps {\r\n    user: User;\r\n    apps: App[];\r\n}\r\nexport interface AppUsers {\r\n    app: App;\r\n    users: User[];\r\n}\r\nexport interface EditApp extends App {\r\n    bind: number;   // 0: not bind, 1: bind\r\n}\r\nexport interface EditUser extends User {\r\n    bind: number;  // 0: not bind, 1: bind\r\n}\r\n\r\nexport class UsersController extends Controller {\r\n    private unit: Unit;\r\n    @observable userAppsList: UserApps[];\r\n    @observable appUsersList: AppUsers[];\r\n    curUser: User;\r\n    @observable curUserApps: App[];\r\n    @observable userEditApps: EditApp[];\r\n    curApp: App;\r\n    @observable curAppUsers: User[];\r\n    @observable appEditUsers: EditUser[];\r\n\r\n    protected async internalStart(unit:Unit) {\r\n        this.unit = unit;\r\n        let cn = \"bg-white px-3 py-2 my-1\";\r\n        let appIcon = <FA name=\"columns\" className=\"text-primary mr-3\" />;\r\n        let userIcon = <FA name=\"user-plus\" className=\"text-primary mr-3\" />;\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={this.onAddUser}><FA name=\"plus\" /></button>;\r\n        this.openPage(<Page header={'用户管理 - ' +  this.unit.name} right={right}>\r\n            <LMR className={cn} onClick={this.onAppUsers} left={appIcon}>App</LMR>\r\n            <LMR className={cn} onClick={this.onUserApps} left={userIcon}>用户</LMR>\r\n        </Page>);\r\n    }\r\n\r\n    private onAppUsers = async () => {\r\n        await this.loadAppUsers(undefined);\r\n        this.openVPage(VApps);\r\n    }\r\n\r\n    private onUserApps = async () => {\r\n        await this.loadUserApps(undefined);\r\n        this.openVPage(VUsers);\r\n    }\r\n\r\n    private async loadAppUsers(key:string) {\r\n        let list:AppUsers[] = [];\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        let ret = await mainApi.unitAppUsers(this.unit.id, key, pageStart, pageSize);\r\n        let apps = ret[0];\r\n        let users = ret[1];\r\n        let coll: {[id:number]:AppUsers} = {}\r\n        for (let a of apps) {\r\n            let app:App = {\r\n                id: a.id,\r\n                name: a.name,\r\n                discription: a.discription,\r\n            };\r\n            list.push(coll[a.id] = {app:app, users:[]});\r\n        }\r\n        for (let u of users) {\r\n            let user:User = {\r\n                id: u.user,\r\n                name: u.name,\r\n                nick: u.nick,\r\n                icon: u.icon,\r\n                assigned: u.assigned\r\n            }\r\n            coll[u.app].users.push(user);\r\n        }\r\n        this.appUsersList = list;\r\n    }\r\n\r\n    private async loadUserApps(key:string) {\r\n        let list:UserApps[] = [];\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        let ret = await mainApi.unitUsers(this.unit.id, key, pageStart, pageSize);\r\n        let users = ret[0];\r\n        let apps = ret[1];\r\n        let coll: {[id:number]:UserApps} = {}\r\n        for (let u of users) {\r\n            let user:User = {\r\n                id: u.id,\r\n                name: u.name,\r\n                nick: u.nick,\r\n                icon: u.icon,\r\n                assigned: u.assigned\r\n            };\r\n            list.push(coll[u.id] = {user:user, apps:[]});\r\n        }\r\n        for (let a of apps) {\r\n            let app:App = {\r\n                id: a.app,\r\n                name: a.name,\r\n                discription: a.discription,\r\n            }\r\n            coll[a.user].apps.push(app);\r\n        }\r\n        this.userAppsList = list;\r\n    }\r\n\r\n    searchUser = async(key:string) => {\r\n        await this.loadUserApps(key);\r\n    }\r\n\r\n    searchApp = async(key:string) => {\r\n        await this.loadAppUsers(key);\r\n    }\r\n\r\n    onAppsClick = async (appUsers: AppUsers) => {\r\n        this.curApp = appUsers.app;\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.curAppUsers = await mainApi.unitOneAppUsers(this.unit.id, this.curApp.id, pageStart, pageSize);\r\n        this.openVPage(VApp);\r\n    }\r\n\r\n    onUsersClick = async (userApps: UserApps) => {\r\n        this.curUser = userApps.user;\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.curUserApps = await mainApi.unitOneUserApps(this.unit.id, this.curUser.id, pageStart, pageSize);\r\n        this.openVPage(VUser);\r\n    }\r\n\r\n    onAppEditUsers = async (key?:string) => {\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.appEditUsers = await mainApi.unitAppEditUsers(this.unit.id, this.curApp.id, key, pageStart, pageSize);\r\n        this.openVPage(VAppEditUsers);\r\n    }\r\n\r\n    onAddUser = () => {\r\n        this.openVPage(VAddUser);\r\n    }\r\n\r\n    onUserEditApps = async (key?:string) => {\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.userEditApps = await mainApi.unitUserEditApps(this.unit.id, this.curUser.id, key, pageStart, pageSize);\r\n        this.openVPage(VUserEditApps);\r\n    }\r\n\r\n    bindAppUser = async(user:User, checked:boolean) => {\r\n        await mainApi.bindAppUser(this.unit.id, this.curApp.id, user.id, checked===true? 1:0);\r\n        let appUsers = this.appUsersList.find(v => v.app.id === this.curApp.id);\r\n        if (checked === true) {\r\n            this.curAppUsers.push(user);\r\n            if (appUsers) appUsers.users.push(user);\r\n        }\r\n        else {\r\n            let index = this.curAppUsers.findIndex(v => v.id === user.id);\r\n            if (index>=0) this.curAppUsers.splice(index, 1);\r\n            if (appUsers) {\r\n                index = appUsers.users.findIndex(v => v.id === user.id);\r\n                if (index>=0) appUsers.users.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    bindUserApp = async(app:App, checked:boolean) => {\r\n        await mainApi.bindAppUser(this.unit.id, app.id, this.curUser.id, checked===true? 1:0);\r\n        if (this.userAppsList === undefined) return;\r\n        let userApps = this.userAppsList.find(v => v.user.id === this.curUser.id);\r\n        if (checked === true) {\r\n            this.curUserApps.push(app);\r\n            if (userApps) userApps.apps.push(app);\r\n        }\r\n        else {\r\n            let index = this.curUserApps.findIndex(v => v.id === app.id);\r\n            if (index>=0) this.curUserApps.splice(index, 1);\r\n            if (userApps) {\r\n                index = userApps.apps.findIndex(v => v.id === app.id);\r\n                if (index>=0) userApps.apps.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    addUser = async (userId: number) => {\r\n        await mainApi.unitAddUser(this.unit.id, userId);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page, appInFrame, Controller, VPage, Image, Edit, ItemSchema, UiSchema, StringSchema, ImageSchema, UiImageItem, UiTextItem} from 'tonva''; \r\nimport {List, LMR, FA, StackedFA, PropGrid, Prop, Muted} from 'tonva';\r\nimport {StringValueEdit} from './tools';\r\nimport {Unit, UnitApps, UnitAdmin, DevModel} from './model';\r\nimport {store} from './store';\r\nimport Administors from './Administors';\r\nimport AppsPage from './Apps';\r\nimport {Members} from './Members';\r\nimport { mainApi } from 'api';\r\nimport { COrganization } from 'organization';\r\nimport {\r\n    ObjViewProps, ObjView,\r\n    //appsProps, \r\n    busesProps, \r\n    serversProps, /*uqdbsProps, */servicesProps, UQController} from './Dev';\r\nimport { AppController } from './Dev';\r\nimport { UsersController } from 'Users';\r\n\r\nexport class CAdmin extends Controller {\r\n    isProduction: boolean;\r\n    adminUnits: UnitAdmin[]; // 仅仅为Admins调试用。从登录用户获取units\r\n\r\n    private async loadAdminUnits(): Promise<void> {        \r\n        let ret = await mainApi.userAdminUnits();\r\n        let adminUnits = this.adminUnits = ret[0];\r\n        console.log('loadAdminUnits', adminUnits);\r\n        if (adminUnits.length === 1) {\r\n            appInFrame.unit = adminUnits[0].id;\r\n            await store.loadUnit();\r\n        }\r\n    }\r\n    protected async internalStart(param?:any):Promise<void> {\r\n        store.init();\r\n        \r\n        this.isProduction = document.location.hash.startsWith('#tv');\r\n        console.log('admins isProduction %s', this.isProduction);\r\n\r\n        if (this.isProduction === false) {\r\n            await this.loadAdminUnits();\r\n            this.openVPage(VAdmin);\r\n            return;\r\n        }\r\n        await store.loadUnit();\r\n        this.openVPage(VAdmin);\r\n    /*\r\n        let user = nav.user;\r\n        if (user === undefined) {\r\n            console.log('autorun: user has logged out');\r\n            return;\r\n        }\r\n    \r\n        console.log('autorun login');\r\n        */\r\n       /*\r\n        setTimeout(async () => {\r\n            // 等待 tonva-tools 里面的initSubWin的nav.user的赋值\r\n            // 这个地方实际上有问题的，不应该这么写。程序逻辑顺序逻辑错误。\r\n            // 2018-11-5: 临时凑合用延时的方式来解决。\r\n            await store.loadUnit();\r\n            this.showVPage(VAdmin);\r\n        }, 200);\r\n        */\r\n    }\r\n}\r\n\r\nexport class VAdmin extends VPage<CAdmin> {\r\n    async open() {\r\n        let {isProduction, adminUnits} = this.controller;\r\n        if (isProduction === false) {\r\n            switch (adminUnits.length) {\r\n                default: this.openPage(this.selectUnitPage); return;\r\n                case 0: this.openPage(this.noUnitPage); return;\r\n                case 1: this.openPageElement(<AdminPage />); return;\r\n            }\r\n        }\r\n\r\n        if (store.unit === undefined) {\r\n            this.openPage(this.noUnitPage);\r\n            return;\r\n        }\r\n        this.openPageElement(<AdminPage />);\r\n    }\r\n\r\n    private selectUnitPage = () => {\r\n        return <Page header=\"选择小号\" logout={logout}>\r\n            <List items={this.controller.adminUnits} item={{render: this.renderRow, onClick: this.onRowClick}}/>\r\n        </Page>;\r\n    }\r\n\r\n    private noUnitPage = () => {\r\n        let {nick, name} = nav.user;\r\n        return <Page header=\"没有小号\" logout={logout}>\r\n            <div className=\"p-3 small text-info\">\r\n                {nick || name}: 没有需要管理的小号\r\n            </div>\r\n        </Page>\r\n    }\r\n\r\n    protected get view() {return undefined}\r\n\r\n    renderRow = (item: UnitAdmin, index: number):JSX.Element => {\r\n        return <LMR className=\"p-2\" right={'id: ' + item.id}>\r\n            <div>{item.nick || item.name}</div>\r\n        </LMR>;\r\n    }\r\n    onRowClick = async (item: UnitAdmin) => {\r\n        appInFrame.unit = item.id; // 25;\r\n        store.init();\r\n        await store.loadUnit();\r\n        this.closePage();\r\n        this.openPageElement(<AdminPage />);\r\n    }\r\n}\r\n\r\nconst logout = async () => {\r\n    store.logout();\r\n}\r\n\r\ninterface ActionItem {\r\n    main: string | JSX.Element;\r\n    right?: string | JSX.Element;\r\n    icon: string|JSX.Element;\r\n    page?: new (props:any) => React.Component;\r\n    //onClick: () => nav.push(<Administors />),\r\n    controller?: Controller;\r\n}\r\n\r\ninterface DevItem<T extends DevModel.ObjBase> {\r\n    title: string;\r\n    count: number;\r\n    icon: string;\r\n    objProps?: ObjViewProps<T>;\r\n    onClick?: ()=>void;\r\n}\r\n\r\ntype Item = ActionItem|DevItem<DevModel.ObjBase>|string;\r\n\r\nconst rArrow = <FA name=\"chevron-right\" />;\r\nconst typeCaptions = {\r\n    1: '开发号',\r\n    2: '小号',\r\n    3: '系统号'\r\n}\r\n@observer\r\ndefault class AdminPage extends React.Component {\r\n    private caption:string;\r\n\r\n    async componentWillMount() {\r\n        let {unit, dev} = store;\r\n        let {isAdmin, isOwner, type} = unit;\r\n        this.caption = typeCaptions[type];\r\n        if ((type & 1) !== 0) {\r\n            await store.dev.loadCounts();\r\n        }\r\n    }\r\n\r\n    private appsAction:ActionItem = {\r\n        main: '启停App',\r\n        right: rArrow, //'增减',\r\n        icon: 'play-circle-o',\r\n        page: AppsPage,\r\n    };\r\n    private usersAction:ActionItem = {\r\n        main: '用户角色',\r\n        right: rArrow,\r\n        icon: 'users',\r\n        page: Members,\r\n    };\r\n    private newUsersAction:ActionItem = {\r\n        main: '用户管理',\r\n        right: rArrow,\r\n        icon: 'user-o',\r\n        controller: new UsersController(undefined),\r\n    };\r\n    /*\r\n    private devAction:Item = {\r\n        main: <DevActions />,\r\n        right: '程序开发相关管理',\r\n        icon: 'laptop',\r\n        //page: Dev,\r\n    };*/\r\n    private adminsAction:ActionItem = {\r\n        main: '管理员',\r\n        right: rArrow,\r\n        icon: 'universal-access',\r\n        page: Administors,\r\n    };\r\n\r\n    private cOrganization = new COrganization;\r\n    private organizeAction:ActionItem = {\r\n        main: this.cOrganization.label,\r\n        right: rArrow,\r\n        icon: this.cOrganization.icon,\r\n        controller: this.cOrganization\r\n    };\r\n\r\n    private noneAction:ActionItem = {\r\n        main: '请耐心等待分配任务',\r\n        icon: 'hourglass-start',\r\n    };\r\n\r\n    private buildItems():Item[] {\r\n        let {unit, dev} = store;\r\n        let {isAdmin, isOwner, type} = unit;\r\n        let items:Item[] = [];\r\n        if (isOwner === 1) {\r\n            items.push(this.adminsAction);\r\n        }\r\n        console.log('unit:', unit);\r\n        if (isAdmin === 1) {\r\n            if ((type & 2) !== 0) {\r\n                // unit\r\n                items.push(\r\n                    '小号管理',\r\n                    this.appsAction, \r\n                    //this.usersAction, \r\n                    this.newUsersAction, \r\n                    //this.organizeAction\r\n                );\r\n            }\r\n            if ((type & 1) !== 0) {\r\n                // dev unit\r\n                let {counts} = dev;\r\n\r\n                let appAction:DevItem<DevModel.ObjBase> = {\r\n                    title: 'APP', \r\n                    count: counts && counts.app, \r\n                    icon: 'tablet', \r\n                    onClick: () => new AppController(undefined).start(unit.id),\r\n                };\r\n                let uqAction:DevItem<DevModel.ObjBase> = {\r\n                    title: 'UQ', \r\n                    count: counts && counts.uq, \r\n                    icon: 'database', \r\n                    onClick: () => new UQController(undefined).start(unit.id),\r\n                };\r\n                let busAction:DevItem<DevModel.ObjBase> = {\r\n                    title: 'BUS', \r\n                    count: counts && counts.bus, \r\n                    icon: 'cogs', \r\n                    objProps: busesProps,\r\n                };\r\n                let serverAction:DevItem<DevModel.ObjBase> = {\r\n                    title: 'Server', \r\n                    count: counts && counts.server, \r\n                    icon: 'server', \r\n                    objProps: serversProps,\r\n                };\r\n                items.push('开发号管理')\r\n                if (isOwner>0) items.push(appAction);\r\n                items.push(uqAction, busAction);\r\n                if (isOwner>0) items.push(serverAction);\r\n            }\r\n        }\r\n        return items;\r\n    }\r\n    private row = (item:Item, index:number):JSX.Element => {\r\n        if (typeof item === 'string') {\r\n            return <div className=\"px-3 pt-3 pb-1 small text-muted\" style={{backgroundColor:'#f0f0f0'}}>{item}</div>;\r\n        }\r\n        let {title} = item as DevItem<DevModel.ObjBase>;\r\n        let left:any, mid:any, r:any;\r\n        if (title !== undefined) {\r\n            let {icon, count} = item as DevItem<DevModel.ObjBase>;\r\n            left = <FA className=\"text-primary\" name={icon} fixWidth={true} size=\"lg\" />;\r\n            mid = title;\r\n            r = count>0 && <span>{count}</span>;\r\n        }\r\n        else {\r\n            let {right, main, icon} = item as ActionItem;\r\n            left = typeof icon === 'string'? \r\n                <FA className=\"text-primary\" name={icon} fixWidth={true} size=\"lg\" /> :\r\n                item.icon;\r\n            mid = main;\r\n            r = <span>{right}</span>;\r\n        }\r\n        return <LMR className=\"px-3 py-2 align-items-center\" left={left} right={r}>\r\n            <div className=\"px-3\"><b>{mid}</b></div>\r\n        </LMR>;\r\n    }\r\n    private rowClick = async (item:Item) => {\r\n        let {title} = item as DevItem<DevModel.ObjBase>;\r\n        if (title !== undefined) {\r\n            let {objProps, onClick} = item as DevItem<DevModel.ObjBase>;\r\n            if (objProps !== undefined)\r\n                return nav.push(<ObjView {...objProps} />);\r\n            else {\r\n                onClick();\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            let {page:P, controller} = item as ActionItem;\r\n            if (P !== undefined)\r\n                nav.push(<P />);\r\n            else {\r\n                await controller.start(store.unit);\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        let unit:Unit = store.unit;\r\n        if (unit === undefined) {\r\n            console.log(\"admin render without unit\");\r\n            return null;\r\n        }\r\n        console.log(\"admin render with unit\");\r\n        let items = this.buildItems();\r\n        if (items === undefined) {\r\n            return <Page header=\"\" />;\r\n        }\r\n        let header:any, top:any;\r\n        if (unit !== undefined) {\r\n            let {name, nick, icon, discription} = unit;\r\n            let title:string, vice:any;\r\n            if (nick) {\r\n                title = nick;\r\n                vice = <h6><small className='text-secondary'>{name}</small></h6>;\r\n            }\r\n            else {\r\n                title = name;\r\n            }\r\n            if (this.caption !== undefined) header = this.caption + ' - ' + title;\r\n            top = <LMR className='px-3 my-4 bg-white py-2 cursor-pointer' onClick={()=>nav.push(<UnitProps />)}\r\n                left={<div><Image className=\"w-3c h-3c\" src={icon} /></div>}>\r\n                <div className=\"px-3\">\r\n                    <LMR right={vice}><h6 className='text-dark font-weight-bold'>{title}</h6></LMR>\r\n                    <div className='small text-info'>{discription}</div>\r\n                </div>\r\n            </LMR>;\r\n        }\r\n        else {\r\n            header = '系统管理';\r\n        }\r\n        return <Page header={header} logout={logout}>\r\n            {top}\r\n            <List items={items} item={{render:this.row, onClick:this.rowClick}} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass UnitProps extends React.Component {\r\n    /*\r\n    private rows:Prop[] = [\r\n        '',\r\n        {label: '标志图', type: 'string', name: 'icon'},\r\n        '=',\r\n        {label: '唯一号', type: 'string', name: 'name'},\r\n        {\r\n            label: '名称', \r\n            type: 'string',\r\n            name: 'nick', \r\n            onClick:()=>nav.push(<StringValueEdit \r\n                title=\"修改名称\"\r\n                value={store.unit.nick}\r\n                onChanged={this.onNickChanged} \r\n                info=\"好的名字会提升接受度\" />)\r\n        },\r\n        {\r\n            label: '说明',\r\n            type: 'string',\r\n            name: 'discription',\r\n            onClick:()=>nav.push(<StringValueEdit \r\n                title=\"修改说明\"\r\n                value={store.unit.discription}\r\n                onChanged={this.onDiscriptionChanged} \r\n                info=\"对小号做一个说明\" />)\r\n        },\r\n    ];\r\n    */\r\n    private schema:ItemSchema[] =[\r\n        {name: 'icon', type: 'image'} as ImageSchema,\r\n        {name: 'nick', type: 'string'} as StringSchema,\r\n        {name: 'discription', type: 'string'} as StringSchema,\r\n    ];\r\n    private uiSchema:UiSchema = {\r\n        items: {\r\n            nick: {widget:'text', label:'别名', placeholder:'好的别名更方便记忆'} as UiTextItem,\r\n            icon: {widget:'image', label:'标志图'} as UiImageItem,\r\n            discription: {widget:'text', label:'描述', placeholder:'简短清晰的描述'} as UiTextItem,\r\n        }\r\n    }\r\n    /*\r\n    async onNickChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.unitChangeProp('nick', value);\r\n    }\r\n    async onDiscriptionChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.unitChangeProp('discription', value);\r\n    }\r\n    */\r\n    private onItemChanged = async (itemSchema:ItemSchema, newValue:any, preValue:any) => {\r\n        let {name} = itemSchema;\r\n        //await userApi.userSetProp(name, newValue);\r\n        await store.unitChangeProp(name, newValue);\r\n        //this.data[name] = newValue;\r\n        //nav.user[name] = newValue;\r\n        //nav.saveLocalUser();\r\n    }\r\n    //<PropGrid rows={this.rows} values={store.unit} alignValue=\"right\" />\r\n    render() {\r\n        let unit:Unit = store.unit;\r\n        let {isRoot, isOwner} = unit;\r\n        return <Page header=\"小号信息\">\r\n            <Edit schema={this.schema} uiSchema={this.uiSchema}\r\n                data={store.unit}\r\n                onItemChanged={this.onItemChanged}\r\n                stopEdit={!(isRoot>0 && isOwner>0)} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { nav, NavView } from 'tonva';\r\nimport { CAdmin } from './Admin';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n    async onLogined() {\r\n        let loc = document.location;\r\n        nav.clear();\r\n        //nav.push(<StartPage />);\r\n        let cAdmin = new CAdmin({});\r\n        await cAdmin.start();\r\n    }\r\n    render() {\r\n        return (\r\n            <NavView onLogined={this.onLogined} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n"],"sourceRoot":""}